//JOBBIE JOB   XXX,NAME,MSGLEVEL=1
//       EXEC  ASMFCLG,PARM.LKED=(XREF,LET,LIST)
//ASM.SYSIN DD *
SAMP2260 CSECT
* 012400,018400,079400,100400,109400,120400,121400,132400        A26961
* 134400                                                         A26961
         SAVE  (14,12)                 SAVE REGISTERS
         BALR  5,0                     INITIALIZE BASE REGISTER
         USING *,5                     DEFINE BASE REGISTER
         ST    13,SAVE2+4              CHAIN SAVEAREAS
         LA    13,SAVE2                ESTABLISH NEW SAVE AREA
         OPEN  (DCB1)                  OPEN 2260
         SPAR  (GACB1),PRTY=1          SPAR FOR 2260 ATTENTION
         LTR   15,15                   TEST SPAR RETURN CODE
         BNZ   ERTN1                   BRANCH IF NOT SUCCESSFUL SPAR
         GWRITE DECB1,EBW,DCB1,39,OPNMSG,1   WRITE START MSG     A26961
         LTR   15,15                   TEST FOR PARAMETERS ACCEPTED
         BNZ   ERTN2                   NO, BRANCH TO I/O ERROR
         WAIT  ECB=DECB1               WAIT FOR I/O OPERATION
         CLI   DECB1,X'7F'             WAS I/O SUCCESSFUL
         BNE   ERTN2                   BRANCH IF NOT
         GWRITE DECB5,EBW,DCB1,39,OPNMSG,2    WRITE START MSG    A26961
         LTR   15,15                   TEST FOR PARAMETERS ACCEPTED
         BNZ   ERTN2                   NO, BRANCH TO I/O ERROR
         WAIT  ECB=DECB5               WAIT FOR I/O OPERATION
         CLI   DECB5,X'7F'             WAS I/O SUCCESSFUL
         BNE   ERTN2                   BRANCH IF NOT
         WAIT  ECB=COMSAVE+16          FOR END OF ATTENT. PROCESS
OUT      EQU   *
         DAR   (GACB1)                 DELETE 2260 ATTENTION ROUTINE
         LTR   15,15                   TEST DAR RETURN CODE
         BNZ   ERTN1                   BRANCH IF NOT SUCCESSFUL DAR
OUT1     EQU   *
         CLOSE (DCB1)                  CLOSE 2260
         L     13,SAVE2+4              LOAD RETURN ADDRESS
         RETURN (14,12)                RETURN TO SUPERVISOR
*
* USER SPAR/DAR ERROR HANDLING ROUTINE
*
ERTN1    B     OUT1                    DUMMY ERROR GANDLING SPAR/DAR
*
* USER I/O ERROR HANDLING ROUTINE
*
ERTN2    B     OUT                     DUMMY ERROR HANDLING I/O ROUTINE
*
* KEYBOARD ROUTINE TO SERVICE KEYBOARD ATTENTIONS
*
KEYBDRTN SAVE  (14,12)                 SAVE REGISTERS
         DROP  5
         BALR  6,0                     INTIALIZE BASE REGISTER
         USING *,6                     DEFINE BASE REGISTER
         ST 13,SAVE3+4                 CHAIN SA E AREAS
         LA 13,SAVE3                   STABLISH NEW SAVE AREAS
READMI   CLI   COMSAVE,X'02'           IS ATTENTION FROM DEVICE 2
         BE    READ2                   YES, BRANCH TO READ DEVICE 2
* THIS SECTION HANDLES AN ATTENTION FROM DEVICE 1
READ1    EQU   *
         XC    DECB2(4),DECB2          CLEAR ECB (IN BYTES 0-4 OF DECB)
         GREAD DECB2,DSM,DCB1,960,INPUT,1   READ DEVICE INTO "INPUT"
* THE 2260 KEYBOARD CAUSING THE ATTENTION IS NOW UNLOCKED
         LTR   15,15                   TEST FOR PARAMETERS ACCEPTED
         BNZ   ERTN3                   NO, BRANCH TO I/O ERROR
         WAIT  ECB=DECB2               WAIT FOR I/OOPERATION (ECB=+)
         CLI   DECB2,X'7F'             CHAECK FOR SUCCESSFUL I/O (/7F)
         BE    COMMON                  BRANCH IF GOOD I/O
         CLI   DECB2+16,X'45'          CHECK FOR PERMANENT ERROR
         BE    ERTN3                   ERROR EXISTS, USER I/O ERROR
         B     COMMON
*
* THIS SECTION HANDLES AN ATTENTION FROM DEVICE 2
READ2    EQU   *
         XC    DECB6(4),DECB6          CLEAR ECB
         GREAD DECB6,DSM,DCB1,960,INPUT,2   READ DEVICE INTO "INPUT"
* THE 2260 KEYBOARD CAUSING THE ATTENTION IS NOW UNLOCKED
         LTR   15,15                   TEST FOR PARAMETERS ACCEPTED
         BNZ   ERTN3                   NO, BRANCH TO I/O ERROR
         WAIT  ECB=DECB6               WAIT FOR I/O OPEATION
         CLI   DECB6,X'7F'             CHECK FOR SUCCESSFUL I/O (/7F)
         BE    COMMON                  BRANCH IF GOOD I/O
         CLI   DECB6+16,X'45'          CHECK FOR PERMANENT ERROR
         BE    ERTN3                   ERROR EXISTS, USE I/O ERROR
COMMON   CLC   INPUT(7),PRC            CHECK CONTINUE CODE
         BNE   CONTIN                                            A26961
         GWRITE DECB3,EBW,DCB1,10,TERMSG,1
         LTR   15,15                   TEST FOR PARAMETERS ACCEPTED
         BNZ   ERTN3                   NO, BRANCH TO I/O ERROR
         WAIT  ECB=DECB3               WAIT FOR I/O
         CLI   DECB3,X'7F'             WAS I/O SUCCESSFUL
         BNE   ERTN3                   ERROR EXISTS, USE I/O ERROR
         GWRITE DECB7,EBW,DCB1,10,TERMSG,2  WRITE END OF JOB MESSAGE
         LTR   15,15                   TEST FOR PARAMETERS ACCEPTED
         BNZ   ERTN3                   NO, BRANCH TO I/O ERROR
         WAIT  ECB=DECB7               WAIT FOR I/O
         CLI   DECB7,X'7F'             CHECK FOR SUCCESSFUL I/O
         BNE   ERTN3                   ERROR EXITS, USE I/O ERROR
OUT3     POST  COMSAVE+16              USE POST TO GET THRU WAIT TO DAR
         L     13,SAVE3+4              LOAD RETURN ADDRESS
         RETURN (14,12)                RETURN TO MAINLINE
* CONTINUE PORCESSING OF GREAD
CONTIN   EQU   *                       USER ROIUTINE WOULD GO HERE
         CLI   COMSAVE,X'02'           IS ATTENTION FROM DEVICE 2
         BE    DEV2                    YES, BRANCH TO WRITE ON DEVICE 2
         XC    DECB4(4),DECB4          CLAER ECB
         GWRITE DECB4,EBW,DCB1,107,PRCMSG,1                      A26961
         LTR   15,15                   TEST FOR PARAMETERS ACCEPTED
         BNZ   ERTN3                   NO, BRANCH TO I/O ERROR
         WAIT ECB=DECB4                WAIT FOR I/O
         CLI   DECB4,X'7F'             CHECK FOR SUCCESSFUL I/O
         BE    COM1                    GOOD I/O
         B     ERTN3                   ERROR EXISTS, USE I/O ERROR
DEV2     EQU   *
         XC    DECB8(4),DECB8          CLEAR ECB
         GWRITE DECB8,EBW,DCB1,107,PRCMSG,2                      A26961
         LTR   15,15                   TEST FOR PARAMETERS ACCEPTED
         BNZ   ERTN3                   NO, BRANCH TO I/O ERROR
         WAIT  ECB=DECB8               WAIT FOR I/O
         CLI   DECB8,X'7F'             WAS I/ON SUCCESSFUL
         BNE   ERTN3
COM1     ATTNINQ GACB1,MODE=(C,READ1),UNIT=1   AY ATTENTION FROM DEVICE
         ATTNINQ GACB1,MODE=(C,READ2),UNIT=2   AY ATTENTION FROM DEV.2
         TM    COMSAVE+20,X'01'        HAS WAIT BEEN USED
         BC    1,COM2                  BRANCH IF YEA
         OI    COMSAVE+20,X'01'        SET WAIT USED BIT
         ATTNINQ  GACB1,MODE=W,UNIT=ALL    WAIT FOR ATTN         A26961
         B     READMI                   GO READ DEVICE           A26961
COM2     EQU   *
         ATTNINQ GACB1,MODE=R          RELINQUISH CONTROL TO MAINLINE
         BC    15,READMI               BRANCHTO READMIT
*
* USER I/O ERROR HANDLING ROUTINE
*
ERTN3    B     OUT3                    DUMMY ERROR HANDLING ROUTINE
*
* MESSAGE AREA
*
OPNMSG   DC    CL39'DISPLAY OPEN - DEPRESS SHIFT/ENTER KEYS'     A26961
TERMSG   DC    CL10'END OF JOB'
PRCMSG   DC    CL20'PROCESSING COMPLETE '                        A26961
         DC    X'15'                                             A26961
         DC    CL32'     DEPRESS SHIFT/START KEYS   '            A26961
         DC    X'15'                                             A26961
         DC    CL22'     ENTER "PROCESS"  '                      A26961
         DC    X'15'                                             A26961
         DC    CL30'     DEPRESS SHIFT/ENTER KEYS '              A26961
* CONSTANT AREA
DCB1     DCB   DSORG=GS,MACRF=(R,W),DDNAME=GRAPHIC,GNCP=4,             *
               GTYPE=BASIC
GACB1    SAEC  EP=KEYBDRTN,DCB=DCB1,COMAREA=COMSAVE,ATTNTYP=(R,2260)
         DS    0F
SAVE1    DC    18F'0'
SAVE2    DC    18F'0'
SAVE3    DC    18F'0'
COMSAVE  DC    6F'0'
PRC      DC    CL7'PROCESS'            PROCESS ACTION CODE
INPUT    DC    240F'0'                 DEFINE INPUT AREA
         END   SAMP2260
//LKED.SYSLIB  DD DSNAME=SYS1.LINKLIB,DISP=OLD                     3842
//GO.GRAPHIC   DD UNIT=(2260-1,2)                                  3842
