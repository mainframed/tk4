LOR      TITLE 'IHILOREA, OUTREAL LONG PRECISION, ALGOL F LIB'
*
*        COMPONENT ID - 360S-LM-532 ALGOL F LIBRARY
*
*        STATUS - LEVEL 2.1
*
*        FUNCTION/OPERATION -
*        CONVERT BINARY ARITHMETIC VALUE, FROM SECOND ACTUAL
*        PARAMETER, TO ZONED DECIMAL FORM AND TRANSFER TO AN
*        OUTPUT BUFFER
*
*        ENTRY POINTS -
*        IHILOREL - FROM GENERATED OBJECT MODULE
*                   LA   R1,PARMLIST
*                   BALR R14,R15
*                   DATA PASSED BY NAME
*        IHILORAR - FROM ARRAY MODULE IHIOAR
*                   LA   R7,DATA
*                   BALR R14,R15
*
*        INPUT - N/A
*
*        OUTPUT - N/A
*
*        EXTERNAL ROUTINES -
*        IHIIOR - EVALUATE DATA SET NUMBER
*               - OPEN DATASET
*               - CHANGE TO NEXT OUTPUT RECORD
*        IHIFSA - CNVIRD - CONVERT INTEGER TO REAL LONG
*        IHIPTT - POWER OF TEN TABLE LONG PREC
*
*        EXIT - NORMAL - RELOAD REGISTERS AND RETURN VIA R14
*
*        EXIT - ERROR - TOO LONG RECORD NO 38
*                       BRANCH TO IHIFSA
*                       L    R13,IHIFSA
*                       B    FSAERR+XX*4(R13) XX ERROR NO
*
*        TABLES/WORK AREAS - N/A
*
IHILOREA CSECT
*
         ENTRY IHILOREL
         ENTRY IHILORAR
*
         USING DSTABLE,R5
*
FPR0     EQU   0                   FLOATING POINT NUMBER
*
*        R5                            -> DSTABLE ENTRY
*        R7                            -> SOURCE
*        R4                            =  CHARACTER POINTER
*        R8                            =  BLANK COUNTER
*        R2                               EXPONENT > EIGHT
*        R3                               EXPONENT < EIGHT
*        R9                               DECIMAL EXPONENT
*        R8                               BLANK COUNTER
*        R15                           -> POWER TEN TABLE
*
*        DISPLACEMENTS IN ADRLST IN IHIFSA
*
CI       EQU   0             DISPLACEMENT FOR - IHIIORCI
CL       EQU   4                                IHIIORCL
EV       EQU   8                                IHIIOREV
NX       EQU   12                               IHIIORNX
OP       EQU   16                               IHIIOROP
OQ       EQU   20                               IHIIOROQ
*
IHILORAR SAVE  (14,12),,'IHILORAR LEVEL 2.1 &SYSDATE &SYSTIME'
*
         USING IHILORAR,R15
         LR    R10,R13                 CHAIN SAVE AREAS
         LA    R13,SAVEAREA
         ST    R10,4(,R13)
         ST    R13,8(,R10)
         LA    R10,COMMON
         DROP  R15
         USING COMMON,R10
         B     SOUFLPA
*
         DROP  R10
*
IHILOREL SAVE  (14,12),,'IHILOREL LEVEL 2.1 &SYSDATE &SYSTIME'
*
         USING IHILOREL,R15
         LR    R12,R13                 R12 -> FSA
         LA    R13,SAVEAREA
         ST    R12,4(,R13)
         ST    R13,8(,R12)
         LA    R10,COMMON
         DROP  R15
         USING COMMON,R10
*
*        EVALUATE DATASET NUMBER (EVDSN)
*
COMMON   L     R15,IORLST(,R12)
         L     R15,EV(,R15)
         BALR  R14,R15
SOUFLP   L     R7,4(,R1)               R7 -> SOURCE
SOUFLPA  OI    DSF,DS2+DS3             DS2,DS3 = 1, OUTPUT, DATA IN BLK
         NI    DSF,255-DS7             DS7 = 0, SET OFF END OF FILE
         LTR   R7,R7
         BP    REAL1
*
*        CALL CONVERSION ROUTINE (LOADED IN FSA)
*
         STM   R14,R13,8(R13)          SAVE REGS
         LR    R2,R13                  R2 -> SAVEAREA
         L     R14,0(,R7)              INTEGER INTO R14
         LA    R7,ACNVIRD(R12)
         LR    R13,R12                 R13 -> FSA
         BALR  R8,R7
         LM    R14,R13,8(R2)           RESTORE REGS
         B     REAL1A                  NUMBER IN FPRO AFTER CONVERSION
*
REAL1    LD    FPR0,0(,R7)             NUMBER IN FPR0
REAL1A   TM    DSF,DS0                 DATASET OPEN ?
         BO    NOCLO                   YES, BRANCH
         OI    DSF,DS6                 DS6 = 1 OPEN FOR OUTPUT
         L     R15,IORLST(,R12)
         L     R15,OP(,R15)
         BALR  R14,R15
NOCLO    L     R4,R                    CHARACTER POINTER
         LA    R8,22(,R4)
         C     R8,RE                   BUFFER CAN ACCEPT 22 DIGITS ?
         BNH   NONEXREC                YES, BRANCH
         L     R8,RE
         SR    R8,R4
         BNP   CALLNXT                 NO, REQUEST NEW RECORD
BLANKS   MVI   0(R4),C' '              BLANK IN BUFFER
         LA    R4,1(,R4)               INCR R
         BCT   R8,BLANKS
CALLNXT  L     R15,IORLST(,R12)
         L     R15,NX(,R15)
         BALR  R14,R15                 GET NEXT RECORD
         L     R4,R
         LA    R8,22(,R4)
         C     R8,RE
         BH    ORLERR                  TOO SHORT RECORD LENGTH
         OI    DSF,DS3                 SET ON DATA IN BLOCK
NONEXREC LA    R9,16
         LTDR  FPR0,FPR0               NUMBER IS ZERO ?
         BNZ   NOT0                    NO, BRANCH
         MVI   0(R4),C' '              NUMBER IS ZERO
         MVC   1(21,R4),0(R4)
         MVI   1(R4),C'0'
         B     TERMIN
*
NOT0     MVI   0(R4),C'+'              ZONE IS INSERTED
         BP    EXPLOOP
         MVI   0(R4),C'-'
         LCDR  FPR0,FPR0
EXPLOOP  STD   FPR0,CHAR
         SR    R3,R3
         IC    R3,CHAR
         MVI   SE,0
         S     R3,KF78
         BP    EXPLOAA
         BZ    EXP0                    EXPONENT = 78
         MVI   SE,X'80'
         LCR   R3,R3
EXPLOAA  MH    R3,LOG2
         AH    R3,ROUND
         SRL   R3,14
         C     R3,KF78
         BNH   EXPLOBB
         L     R3,KF78                 EXPONENT = 78
EXPLOBB  TM    SE,X'80'
         L     R15,VPTTAB              R15 -> POWER TEN TABLE
         BZ    EXPLOCC
         SR    R9,R3
         B     EXPLODD
*
EXPLOCC  LA    R15,128(,R15)
         AR    R9,R3
EXPLODD  LR    R2,R3
         SR    R3,R3                   CLEAR REGISTER
         SRDA  R2,3
         SLA   R2,3
TESTEXP1 BZ    EXP1LS8
         C     R2,KF72
         BL    EXP1LS8A                EXPONENT NEGATIVE
         MD    FPR0,128(,R15)
         S     R2,KF72
         B     TESTEXP1
*
EXP1LS8A MD    FPR0,56(R2,R15)
EXP1LS8  SRL   R3,26                   EXPONENT MULTIPLIED EIGHT
         LTR   R3,R3
         BZ    EXPLOOP
         MD    FPR0,0(R3,R15)
         B     EXPLOOP
*
EXP0     CD    FPR0,TENP16             NUMBER >= 10**16 ?
         BNL   DIG17                   YES, BRANCH
EXP0AA   MVI   CHAR,0
         LM    R2,R3,CHAR
         D     R2,TENP9I
*
*        TRANSFORM NUMBER TO DECIMAL FORM
*        EDIT OUTPUT NUMBER IN I/O BUFFER
*
         CVD   R3,BUFF                 QUOTE CONVERTED
         UNPK  1(9,R4),BUFF+3(5)
         OI    9(R4),X'F0'             MAKE SIGN PRINTABLE
         CVD   R2,BUFF
         UNPK  10(9,R4),BUFF+3(5)
         OI    18(R4),X'F0'            MAKE SIGN PRINTABLE
         CLI   2(R4),C'0'              LEADING ZERO ?
         BNE   TRANSAA
         BCTR  R9,0
         MVC   2(16,R4),3(R4)
TRANSAA  MVC   1(1,R4),2(R4)
         MVI   2(R4),C'.'              DECIMAL POINT INSERTED
         MVI   18(R4),C''''            APOSTROPHE INSERTED
DECEXP   CVD   R9,BUFF
         UNPK  19(3,R4),BUFF+6(2)
         LTR   R9,R9
         BNM   DECEXPAA
         MVI   19(R4),C'-'             EXPONENT SIGN IS NEGATIVE
         B     DECEXPBB
*
DECEXPAA MVI   19(R4),C'+'
DECEXPBB OI    21(R4),X'F0'            ZONE INSERTED EXPONENT
*
*        TERMINATION ROUTINE INSERT BLANKS
*        IF RECORD END CALL NEXTREC
*
TERMIN   LA    R4,22(,R4)
         SR    R8,R8
         IC    R8,K
TERMINAA C     R4,RE
         BE    RECEND
         MVI   0(R4),C' '
         LA    R4,1(,R4)
         BCT   R8,TERMINAA
         C     R4,RE
         BE    RECEND
         ST    R4,R
TERMINBB L     R13,SAVEAREA+4
*
         RETURN (14,12)
*
RECEND   L     R15,IORLST(,R12)
         L     R15,NX(,R15)
         BALR  R14,R15
         B     TERMINBB
*
*        NUMBER >= 10**16
*
DIG17    AW    FPR0,FIVE
         STD   FPR0,CHAR
         CD    FPR0,TWOP56B
         BL    EXP0AA
         MVC   1(18,R4),TWOP56         NUMBER > 16**14
         B     DECEXP
*
ORLERR   LR    R13,R12
         B     FSAERR+38*4(R12)
*
VPTTAB   DC    V(IHIPTTAB)
*
ACNVIRD  EQU   X'120'
*
*        CONSTANTS AND STORAGE
*
SAVEAREA DC    18F'0'
*
KF72     DC    F'72'
KF78     DC    F'78'
LOG2     DC    H'19728'
ROUND    DC    H'8192'
TENP9I   DC    F'1000000000'
BUFF     DC    D'0'
CHAR     DC    D'0'
FIVE     DC    X'4E00000000000005'
TWOP56B  DC    X'4F10000000000000'
TENP16   DC    DE16'1'
SE       DC    X'00'
TWOP56   DC    C'7.205759403792794'''
*
         LTORG
*
         DSTABLE DSECT=YES
*
FAS      DSECT
*
         COPY  FSAREA
*
*        REGISTER EQUATES
*
         IEZREGS
*
         END
