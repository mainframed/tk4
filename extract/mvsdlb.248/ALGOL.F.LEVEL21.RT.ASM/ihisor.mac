REA      TITLE 'IHISOREA, OUTREAL, SHORT PRECISION, ALGOL F LIB'
*
*        COMPONENT ID - 360S-LM-532 ALGOL F LIBRARY
*
*        STATUS - LEVEL 2.1
*
*        FUNCTION/OPERATION -
*        CONVERT BINARY ARITHMETIC VALUE FROM SECOND PARAMETER
*        TO ZONED DECIMAL FORM AND TRANSFER TO AN OUTPUT BUFFER
*
*        ENTRY POINTS -
*        IHISOREL - FROM GENERATED OBJECT MODULE
*                   LA   R1,PARMLIST
*                   BALR R14,R15
*                   DATA PASSED BY NAME
*        IHISORAR - FROM ARRAY MODULE IHIOAR
*                   LA   R7,DATA
*                   BALR R14,R15
*                   DATA PASSED BY NAME
*
*        INPUT - N/A
*
*        OUTPUT - N/A
*
*        EXTERNAL ROUTINES -
*        IHIIOR - EVALUATE DATA SET NUMBER
*               - OPEN DATA SET
*               - CHANGE TO NEXT OUTPUT RECORD
*        IHIFSA - CNVIR - CONVERT INTEGER TO REAL SHORT
*
*        EXIT - NORMAL - RELOAD REGISTERS AND RETURN VIA R14
*
*        EXIT - ERROR - TOO LONG RECORD NO 38
*                       BRANCH TO IHIFSA
*                       L   R13,IHIFSA
*                       B FSAERR+XX*4(R13) XX ERROR NO
*
*        TABLES - PTTAB - POWER OF TEN TABLE, SHORT PREC
*
*        NOTES -
*        LINKING TO IHISORAR DEVIATES FROM STANDARD
*
IHISOREA CSECT
*
         ENTRY IHISOREL
         ENTRY IHISORAR
*
         USING DSTABLE,R5
*
FPR0     EQU   0                       FLOATING-POINT NUMBER
*
*        R2                            EXPONENT > 8
*        R3                            EXPONENT < 8
*        R4                            CHARACTER POINTER
*        R7                            -> SOURCE
*        R8                            BLANK COUNTER
*        R9                            DECIMAL EXPONENT
*        R10                           -> POWER TEN TABLE
*
*        DISPLACEMENTS IN ADRLST IN IHIFSA
*
CI       EQU   0             DISPLACEMENT FOR - IHIIORCI
CL       EQU   4                                IHIIORCL
EV       EQU   8                                IHIIOREV
NX       EQU   12                               IHIIORNX
OP       EQU   16                               IHIIOROP
OQ       EQU   20                               IHIIOROQ
*
IHISORAR SAVE  (14,12),,'IHISORAR LEVEL 2.1 &SYSDATE &SYSTIME'
*
         USING IHISORAR,R15
         LR    R11,R13                 CHAIN SAVE AREAS
         LA    R13,SAVEAREA
         ST    R11,4(,R13)
         ST    R13,8(,R11)
         LA    R11,COMMON
         DROP  R15
         USING COMMON,R11
         B     SOUFLPA
*
         DROP  R11
*
IHISOREL SAVE  (14,12),,'IHISOREL LEVEL 2.1 &SYSDATE &SYSTIME'
*
         USING IHISOREL,R15
         LR    R12,R13                 R12 -> FSA  STORAGE AREA TO FSA
         LA    R13,SAVEAREA
         ST    R12,4(,R13)
         ST    R13,8(,R12)
         LA    R11,COMMON
         DROP  R15
         USING COMMON,R11
*
*        EVALUATE DATASET NUMBER (EVDSN)
*
COMMON   L     R15,IORLST(,R12)
         L     R15,EV(,R15)
         BALR  R14,R15
SOUFLP   L     R7,4(,R1)               R7 -> SOURCE
SOUFLPA  OI    DSF,DS2+DS3             DS2, DS3 = 1
         NI    DSF,255-DS7             DS7 = 0
         LTR   R7,R7
         BP    REAL1
*
*        CALL CONVERSION ROUTINE (LOADED IN FSA)
*
         STM   R14,R13,8(R13)          SAVE REGS
         LR    R2,R13                  R2 -> SAVEAREA
         L     14,0(,R7)               INTEGER INTO R14
         LA    R7,ACNVIRD(R12)
         LR    R13,R12                 R13 -> FSA
         BALR  R8,R7                   CALL CONVERSION ROUTINE
         LM    R14,R13,8(R2)           RESTORE REGS
         B     REAL1A                  NUMBER IN FPR0 AFTER CONVERSION
*
REAL1    LE    FPR0,0(,R7)             NUMBER IN FPR0
REAL1A   TM    DSF,DS0                 DATASET OPEN ?
         BO    NOCLO                   YES, BRANCH
         OI    DSF,DS6                 DS6 = 1 OPEN FOR OUTPUT
         L     R15,IORLST(,R12)
         L     R15,OP(,R15)
         BALR  R14,R15                 CALL OPEN ROUTINE
NOCLO    L     R4,R                    CHARACTER POINTER
         LA    R8,13(,R4)
         C     R8,RE                   BUFFER CAN ACCEPT 13 DIGITS ?
         BNH   NONEXREC                YES, BRANCH
         L     R8,RE
         SR    R8,R4
         BNP   CALLNXT                 NO, REQUEST NEW RECORD
BLANKS   MVI   0(R4),C' '              BLANK IN BUFFER
         LA    R4,1(,R4)               INCR R
         BCT   R8,BLANKS
CALLNXT  L     R15,IORLST(,R12)
         L     R15,NX(,R15)
         BALR  R14,R15                 GET NEXT RECORD
         L     R4,R
         LA    R8,13(,R4)
         C     R8,RE
         BH    ORSERR                  TOO SHORT RECORD LENGTH
         OI    DSF,DS3
NONEXREC LA    R9,7
         LTER  FPR0,FPR0               NUMBER ZERO ?
         BNZ   NOT0                    NO, BRANCH
         MVI   0(R4),C' '              NUMBER IS ZERO
         MVC   1(12,R4),0(R4)
         MVI   1(R4),C'0'
         B     TERMIN
*
NOT0     MVI   0(R4),C'+'              ZONE IS INSERTED
         BP    EXPLOOP
         MVI   0(R4),C'-'
         LCER  FPR0,FPR0
EXPLOOP  STE   FPR0,CHAR
         SR    R3,R3
         IC    R3,CHAR
         MVI   SE,0
         S     R3,KF70
         BP    EXPLOAA
         BZ    EXP0                    EXPONENT = 78
         MVI   SE,X'80'
         LCR   R3,R3
EXPLOAA  MH    R3,LOG2
         AH    R3,ROUND
         SRL   R3,14
         C     R3,KF70
         BNH   EXPLOBB
         L     R3,KF70                 EXPONENT = 70
EXPLOBB  TM    SE,X'80'
         LA    R10,PTTAB-4             R10 -> PTTAB-4
         BZ    EXPLOCC
         SR    R9,R3
         B     EXPLODD
EXPLOCC  LA    R10,64(,R10)
         AR    R9,R3
EXPLODD  LR    R2,R3
         SR    R3,R3                   CLEAR REGISTER
         SRDA  R2,3
         SLA   R2,3
TESTEXP1 BZ    EXP1LS8
         C     R2,KF72
         BL    EXP1LS8A                EXPONENT NEGATIVE
         ME    FPR0,64(,R10)
         S     R2,KF72
         B     TESTEXP1
*
EXP1LS8A SRL   R2,1
         ME    FPR0,28(R2,R10)
EXP1LS8  SRL   R3,27                   EXPONENT MULTIPLIED FOUR
         LTR   R3,R3
         BZ    EXPLOOP
         ME    FPR0,0(R3,R10)
         B     EXPLOOP
*
EXP0     CE    FPR0,TENP7              NUMBER > 10**7 ?
         BNL   DIG8                    YES, BRANCH
EXP0AA   MVI   CHAR,0
         L     R3,CHAR
         CVD   R3,BUFF                 INTEGER CONVERTED
         UNPK  1(9,R4),BUFF+3(5)
         OI    9(R4),X'F0'
         CLI   2(R4),C'0'              LEADING ZERO ?
         BNE   TRANSAA
         BCTR  R9,0
         MVC   2(7,R4),3(R4)
TRANSAA  MVC   1(1,R4),2(R4)
         MVI   2(R4),C'.'              DECIMAL POINT INSERTED
         MVI   9(R4),C''''             APOSTROPHE INSERTED
DECEXP   CVD   R9,BUFF
         UNPK  10(3,R4),BUFF+6(2)
         LTR   R9,R9
         BNM   DECEXPAA
         MVI   10(R4),C'-'             EXPONENT SIGN IS NEGATIVE
         B     DECEXPBB
*
DECEXPAA MVI   10(R4),C'+'
DECEXPBB OI    12(R4),X'F0'            ZONE INSERTED EXPONENT
TERMIN   LA    R4,13(,R4)
         SR    R8,R8
         IC    R8,K
TERMINAA C     R4,RE
         BE    RECEND
         MVI   0(R4),C' '
         LA    R4,1(,R4)
         BCT   R8,TERMINAA
         C     R4,RE
         BE    RECEND
         ST    R4,R
TERMINBB L     R13,SAVEAREA+4
*
         RETURN (14,12)                RESTORE CALLERS REGS AND RETURN
*
RECEND   L     R15,IORLST(,R12)
         L     R15,NX(,R15)
         BALR  R14,R15
         B     TERMINBB
*
DIG8     AU    FPR0,FIVE
         STE   FPR0,CHAR
         CE    FPR0,TWOP24B
         BL    EXP0AA
         MVC   1(9,R4),TWOP24           NUMBER GE 10**7
         B     DECEXP
*
ORSERR   LR    13,R12
         B     FSAERR+38*4(R12)
*
ACNVIRD  EQU   X'120'
*
*        INTERNAL CONSTANTS AND STORAGE
*
KF72     DC    F'72'
KF70     DC    F'70'
LOG2     DC    H'19728'
ROUND    DC    H'8192'
TENP7    DC    X'46989680'
FIVE     DC    X'46000005'
TWOP24B  DC    X'47100000'
TWOP24   DC    C'1.677722'''
SE       DC    X'00'
CHAR     DC    E'0'
BUFF     DC    D'0'
*
*        POWER OF TEN TABLE SHORT PRECISION
*
PTTAB    DC    EE1'1'
         DC    EE2'1'
         DC    EE3'1'
         DC    EE4'1'
         DC    EE5'1'
         DC    EE6'1'
         DC    EE7'1'
         DC    EE8'1'
         DC    EE16'1'
         DC    EE24'1'
         DC    EE32'1'
         DC    EE40'1'
         DC    EE48'1'
         DC    EE56'1'
         DC    EE64'1'
         DC    EE72'1'
         DC    EE-1'1'
         DC    EE-2'1'
         DC    EE-3'1'
         DC    EE-4'1'
         DC    EE-5'1'
         DC    EE-6'1'
         DC    EE-7'1'
         DC    EE-8'1'
         DC    EE-16'1'
         DC    EE-24'1'
         DC    EE-32'1'
         DC    EE-40'1'
         DC    EE-48'1'
         DC    EE-56'1'
         DC    EE-64'1'
         DC    EE-72'1'
*
SAVEAREA DC    18F'0'
*
         LTORG
*
         DSTABLE DSECT=YES
*
FAS      DSECT
*
         COPY  FSAREA
*
*        REGISTER EQUATES
*
         IEZREGS
*
         END
