BOO      TITLE 'IHIIBOOL, INBOOLEAN, ALGOL F LIB'
*
*        COMPONENT ID - 360S-LM-532 ALGOL F LIBRARY
*
*        STATUS - LEVEL 2.1
*
*        FUNCTION/OPERATION -
*        SCAN INPUT BUFFER UNTIL A BOOLEAN VALUE IS FOUND
*        TRANSFER IF 'TRUE' 1 IF 'FALSE' 0 TO BOOLEAN IDENTIFIER,
*        THE SECOND PARAMETER
*
*        ENTRY POINTS -
*        IHIIBOOL - FROM GENERATED OBJECT MODULE
*                   LA   R1,PARMLIST
*                   BALR R14,R15
*                   DATA PASSED BY NAME
*        IHIIBOAR - FROM ARRAY MODULE IHIIBA
*                   L    R2,A(DESTINATION)
*                   BALR R14,R15
*                   DATA PASSED BY NAME
*
*        INPUT - N/A
*
*        OUTPUT - N/A
*
*        EXTERNAL ROUTINES -
*        IHIIOR - EVALUATE DATASET NUMBER
*               - OPEN DATA SET
*               - CHANGE TO NEXT INPUT RECORD
*
*        EXITS - NORMAL - RELOAD REGISTERS AND EXIT VIA R14
*
*        EXITS - ERROR - INPUT REQUEST BEYOND END OF DATASET
*                        BRANCH TO IHIFSA
*                        L      R13,IHIFSA
*                        B      FSAERR+XX*4(R13) XX ERROR NO 5
*
*        TABLES/WORK AREAS - N/A
*
IHIIBOOL CSECT
*
         ENTRY IHIIBOAR
         USING DSTABLE,R5
*
*        R5                            -> DSTABLE ENTRY
*        R6                            =  DATASET NUMBER
*
*        DISPLACEMENTS IN ADRLST IN IHIFSA
*
CI       EQU   0             DISPLACEMENT FOR - IHIIORCI
CL       EQU   4                                IHIIORCL
EV       EQU   8                                IHIIOREV
NX       EQU   12                               IHIIORNX
OP       EQU   16                               IHIIOROP
OQ       EQU   20                               IHIIOROQ
*
         SAVE  (14,12),,'IHIIBOOL LEVEL 2.1 &SYSDATE &SYSTIME'
*
         USING IHIIBOOL,R15
         LA    R7,COMMON
         DROP  R15
         USING COMMON,R7
         LR    R12,R13                 R12 -> FSA
         ST    R13,SAVEAREA+4          CHAIN SAVE AREAS
         LA    R13,SAVEAREA
         ST    R13,8(,R12)
*
*        EVALUATE DATA SET NUMBER
*
         L     R15,IORLST(,R12)
         L     R15,EV(,R15)
         BALR  R14,R15
         B     INBOOL1
*
         DROP  R7
*
IHIIBOAR SAVE  (14,12),,'IHIIBOAR LEVEL 2.1 &SYSDATE &SYSTIME'
*
         USING IHIIBOAR,R15
         LA    R7,COMMON
         DROP  R15
         USING COMMON,R7
         LR    R12,R13                 R12 -> FSA
         ST    R13,SAVEAREA+4          CHAIN SAVE AREAS
         LA    R13,SAVEAREA
         ST    R13,8(,R12)
         ST    R2,ADEST                STORE DESTINATION ADDR
         B     INBOOLOP
*
COMMON   EQU   *                       COMMON CODE POINT
INBOOL1  L     R1,4(,R1)
         ST    R1,ADEST
INBOOLOP NI    DSF+1,255-DS10          SET DS10 = 0
         CLI   Q,0                     DATASET SECTIONED ?
         BNE   ERROR2                  INCOMPATIBLE ACTION ON DATASET
         CH    R6,=H'1'                DATASET NUMBER 1?
         BE    ERROR2                  INCOMPATIBLE ACTION ON DATASET
         TM    DSF,DS0                 DATASET OPEN ?
         BO    INBOOL2                 YES, BRANCH
         NI    DSF,255-DS6             NO, SET DS6 TO 0
         L     R15,IORLST(,R12)
         L     R15,OP(,R15)
         BALR  R14,R15                 CALL OPEN DATASET ROUTINE
         B     INBOOL3
*
INBOOL2  TM    DSF,DS2                 LAST I/O OUTPUT ?
         BO    ERROR3                  INPUT BEYOND LAST OUTPUT
         TM    DSF,DS7                 EOD REACHED ?
         BO    ERROR5                  YES, BRANCH
         TM    DSF,DS6                 DS OPEN FOR OUTPUT ?
         BO    ERROR2                  YES, ERROR
*
INBOOL3  L     R8,R                    CHARACTER POINTER IN R8
         BCTR  R8,0                    DECR CHARACTER PTR
         ST    R8,R
INBOOL4  MVI   FLAGS,0                 CLEAR FLAG BYTE
INBOOL5  LA    R10,MB                  MANTISSA BUFFER POINTER
         SR    R9,R9                   BLANK COUNTER CLEARED
         TM    DSF,DS7                 INPUT REQ BEYOND END OF DATA ?
         BO    ERROR5                  YES, BRANCH
INBOOL6  L     R3,RE                   R3 = RECORD END
         BCTR  R3,0                    SET RECORD END ONE BYTE BACK
         L     R8,R                    R8 = RECORD POINTER
         CR    R8,R3                   AT END OF RECORD ?
         BNE   INBOOL7                 NO, BRANCH
         L     R15,IORLST(,R12)        RECORD END IS REACHED
         L     R15,NX(,R15)
         BALR  R14,R15                 CALL NEXTREC ROUTINE
         B     INBOOL3                 LOOP BACK
*
INBOOL7  LA    R8,1(,R8)               INCR R
         ST    R8,R                    SAVE R
         CLI   0(R8),C''''             QUOTE FOUND ?
         BE    INBOOL9                 YES, BRANCH
         TM    FLAGS,X'FF'
         BZ    INBOOL6                 NO QUOTE READ NEXT CHARACTER
         CLI   0(R8),C' '              QUOTE READ ALREADY ?
         BNE   INBOOL8                 CHARACTER NOT BLANK, BRANCH
         LA    R9,1(,R9)               INCR BLANK COUNTER
         CLM   R9,B'0001',K            PROCESSED K BLANKS ?
         BE    INBOOL4                 YES, K BLANKS FOUND
         B     INBOOL6                 NO, K BLANKS NOT FOUND
*
INBOOL8  SR    R9,R9                   CLEAR BLANK COUNTER
         LA    R11,MB+5                END OF BUFFER ADDR
         CR    R10,R11
         BNL   INBOOL4                 NO VALID BOOLEAN VALUE FOUND
*                                      NEW SCAN LOOP
         MVC   0(1,R10),0(R8)          INSERT FOUND CHAR TO BUFFER
         LA    R10,1(,R10)             INCR R10
         B     INBOOL6                 EXAMINE NEXT CHARACTER
*
INBOOL9  SR    R9,R9
         TM    FLAGS,X'FF'
         BNZ   INBOOL10                QUOTE ALREADY FOUND
         OI    FLAGS,X'01'             FIRST QUOTE, SET FLAGS
         B     INBOOL6
*
INBOOL10 LA    R11,MB+4                FOUR CHARACTERS READ ?
         CR    R10,R11
         BL    INBOOL5
         BH    INBOOL11
         CLC   MB(L'KTRUE),KTRUE       TRUE ?
         BNE   INBOOL5                 NO, INVALID BOOLEAN VALUE FOUND
         L     R2,ADEST                YES, BOOLEAN VALUE TRUE FOUND
         MVI   0(R2),X'01'             CHARACTER TO DESTINATION
         B     INBOOL12
*
INBOOL11 CLC   MB(L'KFALSE),KFALSE     FALSE ?
         BNE   INBOOL5                 NO, INVALID BOOLEAN VALUE FOUND
         L     R2,ADEST                YES, BOOLEAN VALUE FALSE FOUND
         MVI   0(R2),X'00'             CHARACTER TO DESTINATION
*
*        RECOGNITION OF THE LAST DELIMITING CHARACTER
*
INBOOL12 SR    R9,R9                   ZERO BLANK COUNTER
         SR    R1,R1                   ZERO BLANK DELIMITERS FLAG
INBOOL13 LA    R8,1(,R8)               INCREASE CHARACTER POINTER
         C     R8,RE                   END OF RECORD ?
         BNL   INBOOLNX                YES, NEXT RECORD
         CLI   0(R8),C' '              CHARACTER BLANK ?
         BNE   INBOOL14                NO, BRANCH
         LA    R9,1(,R9)               YES, INCR BLANK COUNTER
         CLM   R9,B'0001',K            FOUND K BLANKS ?
         BNE   INBOOL13                NO, LOOP
         LA    R1,1(,R1)               INCR K BLANK DELIMITERS READ CNT
         B     INBOOL13
*
INBOOL14 LTR   R1,R1                   CHARACTER NOT EQUAL BLANK FOUND
         BP    INBOOLAA                K OR MORE BLANKS FOUND
         LA    R8,1(,R8)               < K BLANKS FOUND
INBOOLAA C     R8,RE
         BE    INBOOLNX                RECORD END REACHED
         ST    R8,R                    STORE R TO DSTAB
INBOOLEX L     R13,SAVEAREA+4
*
         RETURN (14,12)                RESTORE CALLERS REGS AND RETURN
*
INBOOLNX L     R15,IORLST(,R12)        CALL NEXTREC ROUTINE
         L     R15,NX(,R15)
         BALR  R14,R15
         B     INBOOLEX
*
ERROR2   LR    R13,R12
         B     FSAERR+2*4(R13)         INCOMP ACTION ON DATASET
*
ERROR3   LR    R13,R12
         B     FSAERR+3*4(R13)         INPUT BEYOND LAST OUTPUT
*
ERROR5   LR    R13,R12                 INPUT REQUEST BEYOND END OF
         B     FSAERR+5*4(R13)         DATA SET
*
FLAGS    DC    X'00'                   FLAG BYTE FOR QUOTE
MB       DC    CL6' '                  BUFFER
ADEST    DC    A(0)                    DESTINATION ADDR
*
KTRUE    DC    C'TRUE'                 BOOLEAN VALUE TRUE
KFALSE   DC    C'FALSE'                BOOLEAN VALUE FALSE
*
SAVEAREA DC    18F'0'                  SAVE AREA
*
         LTORG
*
         DSTABLE  DSECT=YES
*
FAS      DSECT
*
         COPY  FSAREA
*
*        REGISTER EQUATES
*
         IEZREGS
*
         END
