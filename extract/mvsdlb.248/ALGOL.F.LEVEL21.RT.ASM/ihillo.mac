LLO TITLE 'IHILLOGM, LOGARITHMIC FUNCTION, LONG PRECISION, ALGOL F LIB'
*
*        COMPONENT ID - 360S-LM-532 ALGOL F LIBRARY
*
*        STATUS - LEVEL 2.1
*
*        FUNCTION/OPERATION -
*        WRITE X = (16**P)*(2**-Q)*M
*        Q BETWEEN 0 AND 3
*        AND M BETWEEN 1/2 AND 1
*        DEFINE A=1, B=0
*        IF M IS > SQRT2/2, OTHERWISE A=1/2, B=1
*        WRITE Z = (M-A)/(M+A), THEN
*        LOG(X) = (4P-Q-B)*LOG(2) + LOG((1+Z)/(1-Z))
*
*        ENTRY POINT -
*        IHILLO - LOG FUNCTION, LONG
*                 LA   R1,PARMLIST
*                 BALR R14,R15
*                 DATA PASSED BY NAME
*        THE MODULE IS ENTERED FROM THE GENERATED OBJECT MODULE
*
*        INPUT - N/A
*
*        OUTPUT - N/A
*
*        EXTERNAL ROUTINES - N/A
*
*        EXIT - NORMAL - RETURN VIA R14, RESULT IN FPR0
*
*        EXIT - ERROR -
*        IF ARGUMENT ZERO OR NEGATIVE GOTO ERROR ROUTINE VIA
*        B   FSAERR+25*4(R13)
*
*        TABLES/WORKAREAS - N/A
*
IHILLOGM CSECT
*
         ENTRY IHILLO
*
FPR0     EQU   0                       RESULT REGISTER
FPR2     EQU   2                       SCRATCH REGISTER
*
IHILLO   SAVE  (14,12),,'IHILLOGM LEVEL 2.1 &SYSDATE &SYSTIME'
*
         USING IHILLOGM,R15
         L     R1,0(,R1)               OPTAIN ARGUMENT IN R0,R1
         LM    R0,R1,0(R1)
         LTR   R2,R0
         BNP   ERROR                   0 OR NEGATIVE, ERROR
         SRDL  R2,24                   CHAR IN LOW R2
         SLL   R2,2                    FIRST DIGIT IN HIGH R3
         STH   R2,IPART+2              FLOAT 4*CHAR AND SAVE IT
         SR    R2,R2
         SLDL  R2,4                    FIRST DIGIT IN R2
         IC    R2,TABLE(R2)            NO OF LEADING ZEROS (=Q) IN R2
         SLDL  R0,0(R2)
         STM   R0,R1,BUFF
         MVI   BUFF,X'40'              M = FRACTION*2**Q  IN CELL BUFF
         LA    R1,8
         LD    FPR0,BUFF               PICK UP M IN FPR0
         CE    FPR0,LIMIT              M > SQRT2/2, R1=8 ?
         BH    READY                   YES, BRANCH
         SR    R1,R1                   M < SQRT2/2, R1=0,
         LA    R2,1(,R2)               CRANK R2 BY 1, Q+B IN R2
READY    LDR   FPR2,FPR0               Z = (M-A)/(M+A),  A = 1 OR 1/2
         SD    FPR0,HALF               SUBTRACT A IN 2 STEPS TO PROTECT
         SD    FPR0,ZERO(R1)           THE LAST DIGIT
         AD    FPR2,HALF(R1)           M+A HAS ONLY 53BITS. NOT SERIOUS
         DDR   FPR0,FPR2
         STD   FPR0,BUFF
         MDR   FPR0,FPR0               COMPUTE LOG((1+Z)/(1-Z))
         LDR   FPR2,FPR0               BY CHEBYSHEV INTERPOLATION
         MD    FPR2,C7                 POLYNOMIAL (IN ZSQ) OF DEGREE 7
         AD    FPR2,C6
         MDR   FPR2,FPR0
         AD    FPR2,C5
         MDR   FPR2,FPR0
         AD    FPR2,C4
         MDR   FPR2,FPR0
         AD    FPR2,C3
         MDR   FPR2,FPR0
         AD    FPR2,C2
         MDR   FPR2,FPR0
         AD    FPR2,C1
         MDR   FPR2,FPR0             F = ZSQ*(C1+ZSQ*(C2+...+ZSQ*C7)..)
         LD    FPR0,BUFF               LOG((1+Z)/(1-Z)) = Z*(2+F)
         MDR   FPR2,FPR0                                = Z+Z+Z*F
         ADR   FPR2,FPR0               TO GAIN ACCURACY
         ADR   FPR2,FPR0
         LD    FPR0,IPART              4*CHARACTERISTIC IN FPR0
         LA    R2,256(,R2)             ADD 4*(BASE CHARAC=64) TO Q+B
         STH   R2,IPART+2              FLOAT THIS AND SUB FROM FPR0
         SE    FPR0,IPART              TO OBTAIN 4P-Q-B
         MD    FPR0,LOGE2              MULTIPLY LOG(2) BASE E
         ADR   FPR0,FPR2               AND ADD TO LOG((1+Z)/(1-Z))
*
         RETURN (14,12)                RETURN
*
ERROR    B     FSAERR+25*4(R13)        PARAMETER ^> ZERO
*
FSAERR   EQU   X'1CC'
*
BUFF     DC    D'0'
IPART    DC    X'4600000000000000'
*
TABLE    DC    X'0303020201010101'   * THESE 4
ZERO     DC    X'0000000000000000'   × CONSTANTS
HALF     DC    X'4080000000000000'   × MUST BE
         DC    X'4110000000000000'   V TOGETHER
*
C7       DC    X'4025E9B17CA9B973'     .1480971268990510
C6       DC    X'40273337E26DBA7F'     .1531252792171731
C5       DC    X'402E8CD32A425C06'     .1818363168880382
C4       DC    X'4038E38A00083F6B'     .2222219705656678
C3       DC    X'4049249251450212'     .2857142876064318
C2       DC    X'40666666665EBAA3'     .3999999999930233
C1       DC    X'40AAAAAAAAAAAD6C'     .666666666666764
LOGE2    DC    X'40B17217F7D1CF7B'     LOG 2 (BE) + 1 IN LAST DGT
LIMIT    DC    X'40B504F3'             1/SQRT 2
*
*        REGISTER EQUATES
*
         IEZREGS
*
         END
