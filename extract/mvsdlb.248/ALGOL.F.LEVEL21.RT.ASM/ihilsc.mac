LSC      TITLE 'IHILSCSN, SINE/COSINE, LONG PRECISION, ALGOL F LIB'
*
*        COMPONENT ID - 360S-LM-532 ALGOL F LIBRARY
*
*        STATUS - LEVEL 2.1
*
*        FUNCTION/OPERATION -
*        1. DIVIDE MAGNITUDE OF ARG BY PI/4 TO FIND OCTANT AND
*           FRACTION
*        2. IF COSINE ADD 2 TO OCTANT NUMBER
*           IF SINE FOR NEGATIVE ARG, ADD 4 TO OCTANT NUMBER
*        3. COMPUTE SINE OR COSINE OF FRACTION*PI/4 DEPENDING ON
*           THE OCTANT
*        4. IF OCTANT NUMBER IS FOR LOWER PLANE MAKE SIGN MINUS
*
*        ENTRY POINTS -
*        IHILSCC - COSINE FUNCTION, LONG
*        IHILSCS - SINE FUNCTION, LONG
*                  LA   R1,PARMLIST
*                  BALR R14,R15
*                  DATA PASSED BY NAME
*        THE MODULE IS ENTERED FROM THE GENERATED OBJECT MODULE
*
*        INPUT - N/A
*
*        OUTPUT - N/A
*
*        EXTERNAL ROUTINES - N/A
*
*        EXIT - NORMAL - RETURN VIA R14, RESULT IN FPR0
*
*        EXIT - ERROR -
*        IF ABS(ARG) ^< PI*2**50 GOTO ERROR ROUTINE VIA
*                                B    FSAERR+27*4(R13)
*
*        TABLES/WORKAREAS - N/A
*
IHILSCSN CSECT
*
         ENTRY IHILSCC
         ENTRY IHILSCS
*
FPR0     EQU   0                       RESULT REGISTER
FPR2     EQU   2                       SCRATCH REGISTERS
FPR4     EQU   4
*
IHILSCC  SAVE  (14,12),,'IHILSCC  LEVEL 2.1 &SYSDATE &SYSTIME'
*
         USING IHILSCC,R15
         LA    R10,COMMON
         DROP  R15
         USING COMMON,R10
         LA    R0,2                    OCTANT CRANK OF 2 TO R0
         L     R1,0(,R1)               R1 -> ARGUMENT ADDR
         B     COMMON
*
         DROP  R10
*
IHILSCS  SAVE  (14,12),,'IHILSCS  LEVEL 2.1 &SYSDATE &SYSTIME'
*
         USING IHILSCS,R15
         LA    R10,COMMON
         DROP  R15
         USING COMMON,R10
         SR    R0,R0
         L     R1,0(,R1)               R1 -> ARGUMENT
         TM    0(R1),X'80'             IF ARG IS +, CRANK OF 0 TO R0
         BZ    COMMON                  IF ARG IS -, CRANK OF 4 TO R0
         LA    R0,4
COMMON   LD    FPR0,0(,R1)             PICK UP THE ARGUMENT
         LPER  FPR0,FPR0               FORCE SIGN OF ARG TO +
         CE    FPR0,MAX                /X/ >= PI*2**50 ?
         BNL   ERROR                   YES, ERROR
         DD    FPR0,PIOV4              DIV BY PI/4, SEPARATE INTEGER
         LDR   FPR2,FPR0               PART AND FRACT PART OF QUOTIENT
         AW    FPR2,SCALER             FORCE CHARACTERISTIC X'4E'
         STD   FPR2,ARG                INTEGER PART UNNORMAL = OCTANT
         SDR   FPR2,FPR2
         AD    FPR2,ARG                INTEGER PART NORMALIZED
         SDR   FPR0,FPR2               FRACTION PART TO FPR0
         AL    R0,ARG+4                ADJUST OCTANT NUMBER WITH CRANK
         ST    R0,OCTNT                SAVE IT
         TM    OCTNT+3,X'01'           IF ODD OCTANT, TAKE COMPLEMENT
         BZ    EVEN                    OF FRACT TO OBTAIN MODIFIED ARG
         SD    FPR0,HALF
         SD    FPR0,HALF               SUBTRACT 1 IN 2 STEPS
EVEN     LPDR  FPR4,FPR0
         SR    R1,R1                   R1 = 0 FOR COSINE POLYNOMIAL
         TM    OCTNT+3,X'03'           THIS IS FOR OCTANT 2,3,6, OR 7
         BM    LABAA                   IF OCTANT 1,4,5, OR 8, USE SINE
         LA    R1,8                    POLYNOMIAL.   R1 = 8
LABAA    MDR   FPR0,FPR0               CALC SIN OR COS OF MODIFIED ARG
         LDR   FPR2,FPR0               USING PROPER CHEBYSHEV
         MD    FPR0,C7(R1)             INTERPOLATION POLYNOMIAL
         AD    FPR0,C6(R1)
         MDR   FPR0,FPR2              SIN(X)/X POLYN OF DEGREE 6 IN XSQ
         AD    FPR0,C5(R1)            COS(X) POLYN OF DEGREE 7 IN XSQ
         MDR   FPR0,FPR2
         AD    FPR0,C4(R1)
         MDR   FPR0,FPR2
         AD    FPR0,C3(R1)
         MDR   FPR0,FPR2
         AD    FPR0,C2(R1)
         MDR   FPR0,FPR2
         AD    FPR0,C1(R1)
         LTR   R1,R1
         BZ    COSF
         MDR   FPR0,FPR4               COMPLETE SIN POLYNOMIAL BY
         B     SIGN                    MULTIPLYING BY X
*
COSF     MDR   FPR0,FPR2               COMPLETE COS POLYNOMIAL
         AD    FPR0,HALF               (ONE MORE DEGREE)
         AD    FPR0,HALF               ADD 1 IN 2 STEPS
SIGN     TM    OCTNT+3,X'04'           IF MODIFIED OCTANT IS IN
         BZ    SIGNAA                  LOWER PLANE, SIGN IS NEGATIVE
         LNER  FPR0,FPR0
*
SIGNAA   RETURN (14,12)                RESTORE CALLERS REGS AND RETURN
*
ERROR    B     FSAERR+27*4(R13)        PARAMETER ^< PI*2**50
*
FSAERR   EQU   X'1CC'
*
ARG      DC    D'0'
*
SCALER   DC    X'4E00000000000000'
*
C7       DC    X'B66C992E84B6AA37'
         DC    X'3778FCE0E5AD1685'     S6
C6       DC    X'387E731045017594'
         DC    X'B978C01C6BEF8CB3'     S5
C5       DC    X'BA69B47B1E41AEF6'
         DC    X'3B541E0BF684B527'     S4
C4       DC    X'3C3C3EA0D06ABC29'
         DC    X'BD265A599C5CB632'     S3
C3       DC    X'BE155D3C7E3C90F8'
         DC    X'3EA335E33BAC3FBD'     S2
C2       DC    X'3F40F07C206D6AB1'
         DC    X'C014ABBCE625BE41'     S1
C1       DC    X'C04EF4F326F91777'     LAST DGT REDUCED BY 2
PIOV4    DC    X'40C90FDAA22168C2'     S0
HALF     DC    X'4080000000000000'     1/2 = C0/2
*
MAX      DC    X'4DC90FDA'
OCTNT    DC    F'0'
*
*        REGSITER EQUATES
*
         IEZREGS
*
         END
