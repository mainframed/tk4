CSN      TITLE 'IHISSCSN, SINE/COSINE, SHORT PRECISION, ALGOL F LIB'
*
*        COMPONENT ID - 360S-LM-532 ALGOL F LIBRARY
*
*        STATUS - LEVEL 2.1
*
*        FUNCTION/OPERATION -
*        1. DIVIDE MAGNITUDE OF ARG BY PI/4 TO FIND OCTANT AND
*           FRACTION
*        2. IF COSINE ADD 2 TO OCTANT NUMBER
*           IF SINE FOR NEGATIVE ARG, ADD 4 TO OCTANT NUMBER
*        3. COMPUTE SINE OR COSINE OF FRACTION*PI/4 DEPENDING ON
*           THE OCTANT
*        4. IF OCTANT NUMBER IS FOR LOWER PLANE MAKE SIGN MINUS
*
*        ENTRY POINTS -
*        IHISSCC - COSINE FUNCTION, SHORT
*        IHISSCS - SINE FUNCTION, SHORT
*                  LA   R1,PARMLIST
*                  BALR R14,R15
*                  DATA PASSED BY NAME
*        THE MODULE IS ENTERED FROM THE GENERATED OBJECT MODULE
*
*        INPUT - N/A
*
*        OUTPUT - N/A
*
*        EXTERNAL ROUTINES - N/A
*
*        EXIT - NORMAL - RETURN VIA R14, RESULT IN FPR0
*
*        EXIT - ERROR -
*        IF ABS(ARG) ^< PI*2**18 GOTO ERROR ROUTINE VIA
*                                B    FSAERR+26*4(R13)
*
*        TABLES/WORKAREAS - N/A
*
IHISSCSN CSECT
*
         ENTRY IHISSCC
         ENTRY IHISSCS
*
FPR0     EQU   0                       RESULT REGISTER
FPR2     EQU   2                       SCRATCH REGISTERS
FPR4     EQU   4
*
IHISSCC  SAVE  (14,12),,'IHISSCC  LEVEL 2.1 &SYSDATE &SYSTIME'
*
         USING IHISSCC,R15
         LA    R10,COMMON
         DROP  R15
         USING COMMON,R10
         MVI   CRANK+3,X'02'           FOR COSINE, OCTANT CRANK IS 2
         L     R1,0(,R1)               COS(X) = SIN(PI/2+X)
         B     COMMON
*
         DROP  R10
*
IHISSCS  SAVE  (14,12),,'IHISSCS  LEVEL 2.1 &SYSDATE &SYSTIME'
*
         USING IHISSCS,R15
         LA    R10,COMMON
         DROP  R15
         USING COMMON,R10
         MVI   CRANK+3,X'00'           OCTANT CRANK IS 0 IF +ARG
         L     R1,0(,R1)               OCTANT CRANK IS 4 IF -ARG
         TM    0(R1),X'80'             SIN(-X) = SIN(PI+X)
         BZ    COMMON
         MVI   CRANK+3,X'04'
COMMON   SDR   FPR0,FPR0               CLEAR FPR0 DOUBLE
         SDR   FPR2,FPR2               CLEAR FPR2 DOUBLE
         LE    FPR0,0(,R1)             OBTAIN ARGUMENT
         LPER  FPR0,FPR0               CONSIDER ARGUMENT TO BE POSITIVE
         CE    FPR0,MAX                /X/ >= PI*2**18 ?
         BNL   ERROR                   YES, ERROR
         MD    FPR0,FOVPI              MULTIPLY BY 4/PI (LONG FORM)
         CE    FPR0,ONE                < 1 ?
         BL    SMALL                   YES, BRANCH
         AW    FPR0,CH46               PROD CHAR OF 46, UNNORMALIZED
         LER   FPR2,FPR0               INT PART OF PROD TO FPR2, UNNORM
         SDR   FPR0,FPR2               FRACT PART OF PROD TO FPR0, NORM
SMALL    AU    FPR2,CRANK              ADD OCTANT CRANK TO FPR2, UNNORM
         STE   FPR2,OCTNT              SAVE IT
*                                      LAST 3 BITS ARE MODIFIED OCTANT
         TM    OCTNT+3,X'01'           IF ODD OCTANT, TAKE COMPLEMENT
         BZ    EVEN                    OF FRACTION TO OBTAIN THE
         SE    FPR0,ONE                MOFIFIED FRACTION R
         LPER  FPR0,FPR0
EVEN     SR    R1,R1                   R1 = 0 FOR COSINE POLYNOMIAL
         TM    OCTNT+3,X'03'           THIS IS FOR OCTANT 2,3,6, OR 7
         BM    LABAA                   IF OCTANT 1,4,5, OR 8, USE SINE
         LA    R1,4                    POLYNOMIAL, R1 = 4
LABAA    LER   FPR4,FPR0
         MER   FPR0,FPR0               COMPUTE SIN OR COS OF MODIFIED
         LER   FPR2,FPR0               FRACTION USING PROPER CHEBYSHEV
         ME    FPR0,C3(R1)             INTERPOLATION POLYNOMIAL
         AE    FPR0,C2(R1)
         MER   FPR0,FPR2
         AE    FPR0,C1(R1)
         MER   FPR0,FPR2
         AE    FPR0,C0(R1)             SIN(R)/R  OR COS(R) READY
         LTR   R1,R1
         BZ    LABBB
         MER   FPR0,FPR4               IF SINE POLYNOMIAL, MULTIPLY R
LABBB    TM    OCTNT+3,X'04'
         BZ    LABCC                   IF MODIFIED OCTANT IS IN
         LNER  FPR0,FPR0               LOWER PLANE, SIGN IS NEGATIVE
*
LABCC    RETURN (14,12)                RESTORE CALLERS REGS AND RETURN
*
ERROR    B     FSAERR+26*4(13)
*
FSAERR   EQU   X'1CC'
*
         DC    0D'0'
FOVPI    DC    X'41145F306DC9C830'
CH46     DC    X'4600000000000000'
CRANK    DC    X'46000000'
MAX      DC    X'45C90FDB'
*
C3       DC    X'BE14E5E0'         *   -0.00031888   C3
         DC    X'BD25B368'         ×   -0.00003595   S3
C2       DC    X'3F40EBD6'         ×    0.01584991   C2
         DC    X'3EA32F62'         ×    0.00249001   S2
C1       DC    X'C04EF4E5'         ×   -0.30842425   C1 + FUDGE 1
         DC    X'C014ABBC'         ×   -0.08074543   S1
C0       DC    X'41100000'         ×    1.0          C0
         DC    X'40C90FDB'         V    0.78539816   S0
ONE      EQU   C0
*
OCTNT    DC    F'0'
*
*        REGISTER EQUATES
*
         IEZREGS
*
         END
