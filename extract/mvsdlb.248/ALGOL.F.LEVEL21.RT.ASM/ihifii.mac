FII      TITLE 'IHIFIIXP, POWER ROUTINE, INTEGER**INTEGER, ALGOL F LIB'
*
*        COMPONENT ID - 360S-LM-532 ALGOL F LIBRARY
*
*        STATUS - LEVEL 2.1
*
*        FUNCTION/OPERATION - SEE CODE
*
*        ENTRY POINT -
*        IHIFII - POWER FUNCTION, INT**INT
*        LA     R1,PARMLIST
*        BALR   R14,R15
*        DATA PASSED BY NAME
*        THE MODULE IS ENTERED FROM THE GENERATED OBJECT MODULE
*
*        INPUT - N/A
*
*        OUTPUT - N/A
*
*        EXTERNAL ROUTINES - N/A
*
*        EXIT - NORMAL - RETURN VIA R14, RESULT IN R0
*
*        EXIT - ERROR -
*        IF BASE IS ZERO AND EXPONENT NOT POSITIVE GOTO ERROR
*        ROUTINE VIA
*        B    FSAERR+35*4(R13)
*
*        TABLES/WORKAREAS - N/A
*
IHIFIIXP CSECT
*
*        GENERAL PURPOSE REGISTERS
*
*        R0                            PASSING ON FINAL RESULT
*        R1                            PARAMETER LIST REF
*        R2                            MPY REG FOR FACTOR
*        R3                            FACTOR AND ANSWER
*        R4                            MPY REG FOR BASE NO
*        R5                            BASE NO IN COMPUTATION
*        R6                            EXPONENT IN COMPUTATION
*        R7                            INDEXING PARAMETER ADDR
*
IHIFII   SAVE  (14,12),,'IHIFIIXP LEVEL 2.1 &SYSDATE &SYSTIME'
*
         USING IHIFIIXP,R15
         L     R7,0(,R1)               LOAD PLIST OF BASE NO IN R7
         L     R5,0(,R7)               LOAD BASE NO INTO R5
         L     R7,4(,R1)               LOAD PLIST OF EXPONENT IN R7
         L     R6,0(,R7)               LOAD EXPONENT INTO R6
         LTR   R0,R5                   LOAD BASE NO INTO RESULT REG
*                                      BASE NO +, - OR ZERO ?
         BZ    ERROR                   ZERO, BRANCH TO ERROR
         LTR   R6,R6                   EXPONENT +, - OR ZERO ?
         BZ    LOAD1                   ZERO, BRANCH TO LOAD1
         BCTR  R5,0                    DECR VALUE OF BASE NO
         LTR   R5,R5                   BASE NO + - OR ZERO ?
         BZ    EXIT                    ZERO, BRANCH TO EXIT
         LA    R5,2(,R5)               INCR BY TWO VALUE OF BASE NO
         LTR   R5,R5                   BASE NO +, - OR ZERO ?
         BZ    TEST                    ZERO, BRANCH TO TEST
         LTR   R6,R6                   EXPONENT +, - OR ZERO ?
         BP    PLUS                    POSITIVE, BRANCH TO PLUS
         SR    R0,R0                   EXPN MINUS, RESULT = ZERO
         B     EXIT                    EXIT ROUTINE
*
PLUS     LR    R5,R0                   RELOAD ORG BASE NO FROM RESULT
         L     R3,KF1                  LOAD FACTOR OF ONE IN R3
LOOP     SRDL  R6,1                    SHIFT LOW BIT R6 INTO R7
         LTR   R7,R7                   LOWORDER BIT OF R6 MAKE R7 NEG ?
         BNM   JUMP                    NO, BRANCH TO JUMP
         MR    R2,R5                   MULTIPLY FACTOR REG BY R5
         SLDA  R2,32                   CHECK OVERFLOW
         SRDA  R2,32
JUMP     LTR   R6,R6                   EXPONENT +, - OR ZERO ?
         BZ    NEXT                    EXPONENT ZERO, BRANCH TO NEXT
         MR    R4,R5                   MULT BASE NO BY DOUBLING ITSELF
         SLDA  R4,32
         SRDA  R4,32
         B     LOOP                    LOOP TO TEST NEXT EXPN BIT
*
NEXT     LR    R0,R3                   LOAD FACTOR INTO RESULT
         B     EXIT                    EXIT
*
TEST     SRDL  R6,1                    SHIFT LOW BIT R6 INTO R7
         LTR   R7,R7                   LOWORDER BIT OF R6 MAKE R7 NEG ?
         BM    EXIT                    MINUS (EXPN ODD), GOTO EXIT
LOAD1    L     R0,KF1                  LOAD R0 WITH VALUE OF PLUS 1
EXIT     STM   R0,R1,20(R13)           UPDATE SAVEAREA WITH RESULT
*
         RETURN (14,12)                RESTORE CALLERS REGS AND RETURN
*
ERROR    LTR   R6,R6                   EXPONENT +, - OR ZERO ?
         BP    EXIT                    EXPN IS POSITIVE, BRANCH TO EXIT
         B     FSAERR+35*4(R13)
*
*        ADCONS AND CONSTANTS AREA
*
KF1      DC    F'1'                    INTERGER CONSTANT OF ONE
*
FSAERR   EQU   X'1CC'
*
*        REGISTER EQUATES
*
         IEZREGS
*
         END
