FRI   TITLE 'IHIFRIPXP, POWER ROUTINE, REAL**INTEGER, SHORT PRECISION, X
               ALGOL F LIB'
*
*        COMPONENT ID - 360S-LM-532 ALGOL F LIBRARY
*
*        STATUS - LEVEL 2.1
*
*        FUNCTION/OPERATION - SEE CODE
*
*        ENTRY POINT -
*        IHIFRI - POWER FUNCTION, REAL**INT, SHORT
*                 LA     R1,PARMLIST
*                 BALR   R14,R15
*                 DATA PASSED BY NAME
*        THE MODULE IS ENTERED FROM THE GENERATED OBJECT MODULE
*
*        INPUT - N/A
*
*        OUTPUT - N/A
*
*        EXTERNAL ROUTINES - N/A
*
*        EXIT - NORMAL - RETURN VIA R14, RESULT IN FPR0
*
*        EXIT - ERROR -
*        IF BASE IS ZERO AND EXPONENT NOT POSITIVE GOTO ERROR
*        ROUTINE VIA
*        B    FSAERR+35*4(R13)
*
*        TABLES/WORKAREAS - N/A
*
IHIFRIXP CSECT
*
         ENTRY   IHIFRI
*
*        FLOATING POINT REGISTERS
*
FPR0     EQU   0                       REG FOR BASE NO, PASSING RESULT
FPR2     EQU   2                       REG FOR FACTOR, COMPUTING RESULT
*
*        GENERAL PURPOSE REGISTERS
*
*        R0                            REG FOR TESTING FOR MINUS EXPN
*        R2                            REG FOR EXPONENT IN COMPUTATION
*
IHIFRI   SAVE  (14,12),,'IHIFRIXP LEVEL 2.1 &SYSDATE &SYSTIME'
*
         USING IHIFRIXP,R15
         L     R3,0(,R1)               LOAD PLIST OF BASE NO IN R3
         LE    FPR0,0(,R3)             LOAD BASE NO INTO FPR0
         L     R3,4(,R1)               LOAD PLIST OF EXPONENT IN R3
         L     R2,0(,R3)               LOAD EXPONENT INTO R2
         LTER  FPR0,FPR0               BASE NO +, - OR ZERO ?
         BZ    ERROR                   ZERO, BRANCH TO ERROR
         SR    R0,R0                   SET NEGATIVE EXPN SWITCH TO 0
         LTR   R2,R2                   EXPONENT +, - OR ZERO ?
         BP    PLUS                    +VE, BRANCH TO PLUS
         BZ    LOAD1                   ZERO, BRANCH TO LOAD1
         LCR   R2,R2                   MINUS, CONVERT TO 2S COMPLIMENT
         LA    R0,1                    SET EXP SW TO ONE FOR MINUS EXPN
PLUS     LE    FPR2,KFPONE             LOAD FACTOR OF ONE IN FPR2
LOOP     SRDL  R2,1                    SHIFT LOW BIT R2 INTO R3
         LTR   R3,R3                   LOWORDER BIT OF R2 MAKE R3 NEG ?
         BNM   JUMP                    NO, BRANCH TO JUMP
         MER   FPR2,FPR0               YES, MULTIPLY FPR2 BY FPR0
JUMP     LTR   R2,R2                   EXPONENT +, -, OR ZERO ?
         BZ    NEXT                    EXPONENT ZERO, BRANCH TO NEXT
         MER   FPR0,FPR0               MULT BASE NO BY DOUBLING ITSELF
         B     LOOP                    LOOP TO TEST NEXT EXPN BIT
*
NEXT     LTR   R0,R0                   R0 +, - OR ZERO ?
         BZ    SWAP                    EXPN ^ MINUS, BRANCH TO SWAP
         LE    FPR0,KFPONE             LOAD ONE IN FPR0 AS DIVIDEND
         DER   FPR0,FPR2               DIV BASE REG BY FPR2 (RESULT)
         B     EXIT                    EXIT (RESULT IN FPR0)
*
SWAP     LER   FPR0,FPR2               LOAD FPR2 INTO FPR0
         B     EXIT                    EXIT (RESULT IN FPR0)
*
LOAD1    LE    FPR0,KFPONE             LOAD PLUS 1 AS RESULT IN FPR0
*
EXIT     RETURN (14,12)                RESTORE CALLERS REGS AND RETURN
*
ERROR    LTR   R2,R2                   EXPONENT +, - ZERO ?
         BP    EXIT                    EXPN IS POSITIVE, BRANCH TO EXIT
         B     FSAERR+35*4(R13)        BASE NO = ZERO AND EXPONENT
*                                      ^> ZERO, UNDEFINED
*
*        ADCONS AND CONSTANTS AREA
*
KFPONE   DC    E'1'                    CONSTANT ONE IN SINGLE PREC FP
*
FSAERR   EQU   X'1CC'
*
*        REGISTER EQUATES
*
         IEZREGS
*
         END
