OGM     TITLE 'IHISLOGM, LOGARITHMIC FUNCTION, SHORT PREC, ALGOL F LIB'
*
*        COMPONENT ID - 360S-LM-532 ALGOL F LIBRARY
*
*        STATUS - LEVEL 2.1
*
*        FUNCTION/OPERATION -
*        WRITE X = M*16**P, M MANTISSA
*        PICK A BASE VALUE A DEPENDING ON SIZE OF M
*        WRITE Z = (M-A)/(M+A)
*        THEN LOG(X) = P*LOG(16) + LOG(A) + LOG((1+Z)/(1-Z))
*
*        ENTRY POINT -
*        IHISLO - LOG FUNCTION, SHORT
*                 LA   R1,PARMLIST
*                 BALR R14,R15
*                 DATA PASSED BY NAME
*        THE MODULE IS ENTERED FROM THE GENERATED OBJECT MODULE
*
*        INPUT - N/A
*
*        OUTPUT - N/A
*
*        EXTERNAL ROUTINES - N/A
*
*        EXIT - NORMAL - RETURN VIA R14, RESULT IN FPR0
*
*        EXIT - ERROR - IF ARGUMENT NOT POSITIVE GOTO ERROR
*                       OUTINE VIA
*                       B    FSAERR+25*4(R13)
*
*        TABLES/WORKAREAS - N/A
*
IHISLOGM CSECT
*
         ENTRY IHISLO
*
FPR0     EQU   0                       RESULT REGISTER
FPR2     EQU   2                       SCRATCH REGISTER
*
IHISLO   SAVE  (14,12),,'IHISLOGM LEVEL 2.1 &SYSDATE &SYSTIME'
*
         USING IHISLOGM,R15
         L     R1,0(,R1)
         ICM   R0,B'1111',0(R1)        OBTAIN ARGUMENT
         BNP   ERROR                   ARG 0 OR NEGATIVE, ERROR
         SRDL  R0,24
         SRL   R1,8
         ST    R1,ARG                  STORE MANTISSA M ALONE
         OI    ARG,X'40'               FLOAT IT
         SLL   R0,2                    4*CHAR IN R0
         STH   R0,IPART+2              SAVE THIS IN FLOAT FORM
         SR    R14,R14                 SET R14 TO O,4 OR 8
         SRL   R1,21                   DEFINE A TO BE 1, 1/4, OR 1/16
*                                      IF M IS IN
         IC    R14,TABLE(R1)         (1/2,1),(2/8,1/2),OR IN (J/16,1/8)
         LE    FPR0,ARG                OBTAIN  Z = (M-A)/(M+A)
         LER   FPR2,FPR0
         SE    FPR0,ONE(R14)
         AE    FPR2,ONE(R14)           POSSIBLY ONLY 21 SIGNIF BPTS
         DER   FPR0,FPR2
         STE   FPR0,ARG                Z READY, STORE IT AT ARG
         MER   FPR0,FPR0               Z**2
         LE    FPR2,C4                 COMPUTE LOG((1+Z)/(1-Z)) USING
         MER   FPR2,FPR0             CHEBYSHEV INTERPOLATION POLYNOMIAL
         AE    FPR2,C3
         MER   FPR2,FPR0
         AE    FPR2,C2
         MER   FPR2,FPR0
         AE    FPR2,C1
         MER   FPR2,FPR0
         LE    FPR0,ARG
         MER   FPR2,FPR0
         AER   FPR2,FPR0
         AER   FPR2,FPR0
         LE    FPR0,IPART              4*(P+64)
         SRL   R14,1                   0,2 OR 4 = - LOG(A) BASE 2
         LA    R14,256(,R14)           4*64-LOG2(A)
         STH   R14,IPART+2             STORE THIS AND FLOAT IT
         SE    FPR0,IPART              4*P+LOG2(A)
         ME    FPR0,LOGE2
         ADR   FPR0,FPR2               NATURAL LOG READY
*
         RETURN (14,12)                RESTORE REGISTERS AND RETURN
*
ERROR    B     FSAERR+25*4(R13)        PARAMETER ZERO OR NEGATIVE
*
FSAERR   EQU   X'1CC'
*
ARG      DC    F'0'
IPART    DC    X'46000000'
*
TABLE    DC    X'0804040400000000'
*
ONE      DC    X'41100000'         *   1   FOLLOWING 3 CONSTANTS MUST
         DC    X'40400000'         ×   1/4       BE CONSECUTIVE
         DC    X'40100000'         V   1/16
*
LOGE2    DC    X'40B17219'             LOG(2) BASE E + FUDGE 1
C4       DC    X'4048157B'             0.28157778
C3       DC    X'4047973F'             0.27965158
C2       DC    X'40667685'             0.40024595
C1       DC    X'40AAAA71'             0.66666322
*
*        REGISTER EQUATES
*
         IEZREGS
*
         END
