GPR      TITLE 'IHIGPRTN, PUT/GET, ALGOL F LIB'
*
*        COMPONENT ID - 360S-LM-532 ALGOL F LIBRARY
*
*        STATUS - LEVEL 2.1
*
*        FUNCTION/OPERATION -
*
*        ACTION OF PUT -
*        TRANSFER DATA INDICATED BY A LIST PROCEDURE, WHICH IS THE
*        SECOND PARAMETER IN PUT, TO AN I/O BUFFER IN BINARY FORM
*        WRITE A RECORD, V-FORM, TO A DASD DATASET WITH A
*        DDNAME OF SYSUT2. ENTER REPOSITIONING INFORMATION IN
*        NOTTAB
*
*        ACTION OF GET -
*        RETRIEVE INFORMATION AFTER REPOSITIONING OF DATASET
*        STORED BY PUT AND ASSIGN DATA TO IDENTIFIER IN LIST
*        PROCEDURE
*
*        ENTRY POINTS -
*        IHIGPRPT - FROM GENERATED OBJECT MODULE
*                   DATA PASSED BY NAME
*                   LA   R1,PARMLIST
*                   BALR R14,R15
*
*        IHIGPROT - FROM IHIFSA
*                   PROCEDURE IS ACTUAL PARAMETER OF LIST DATA
*                   PASSED BY NAME R15 POINTS TO A THUNK FIELD
*
*        IHIGPRGT - FROM GENERATED OBJECT MODULE
*                   DATA PASSED BY NAME
*                   LA   R1,PARMLIST
*                   BALR R14,R15
*
*        IHIGPRIT - FROM IHIFSA
*                   PROCEDURE IS ACTUAL PARAMETER OF LIST DATA
*                   PASSED BY NAME R15 POINTS TO A THUNK FIELD
*
*        IHIGPRCL - FROM IHIIOR - CLOSE DATASET
*                   NO DATA PASSED
*                   BALR R14,R15
*
*        INPUT -
*        GET READS A RECORD STORED PREVIOUSLY BY PUT, DATA IN
*        BINARY FORM
*
*        OUTPUT - STORES DATA IN BINARY FORM
*
*        EXTERNAL ROUTINES -
*        IHIIOR - CONVERT REAL TO INTEGER - ENTRY NOTTAB - SYNAD
*
*        EXITS - NORMAL -
*                FOR ROUTINE PUT AND GET RELOAD REGISTERS AND BR14
*                FOR PROCEDURE OUTPUT AND INPUT SEE BELOW
*        EXITS - ERROR -
*                NO.10 DATASET CLOSED
*                NO.14 BACK WARD REPOSITIONING NOT DEFINED
*                NO.20 ACTUAL AND FORMAL PARAMETER OF DIFFERENT TYPE
*                NO.21 NUMBER OF PARAMETERS DOES NOT CORRESPOND
*                NO.36 TOO MANY NESTED BLOCKS PROCEDURES AND PARAMETERS
*                NO.38 GET/PUT BUFFER OVERFLOW
*                NO.39 GET/PUT IDENTIFICATION OUT OF RANGE
*                NO.41 DDCARD INCORRECT OR MISSING
*                NO.43 RECURSIVELY TRY OF PUT/GET OR OUTPUT/INPUT
*        ACTION - BRANCH TO IHIFSA
*                 LA  R13,IHIFSA
*                 B   FSAERR+XX*4(R13)  XX ERROR NO
*
*        TABLES/WORKAREAS - N/A
*
*        ATTRIBUTES - SERIALLY REUSABLE
*
*        NOTES -
*        THE LIST PROCEDURE HAS ONE FORMAL PARAMETER WHICH IS A
*        PROCEDURE AND WHICH ONLY IS DECLARED AND HAS NO
*        PROCEDURE BODY IN THE ALGOL PROGRAM, AT ACTUAL POSITION
*        THIS IS OUTPUT RESP. INPUT ADDR OF PUT/GET FIELD IN
*        DSTAB LOADED TO R5 R6=16 IS KEPT THROUGH THE
*        MODULE IN ORDER TO ADDR THIS FIELD
*
IHIGPRTN CSECT
*
         ENTRY IHIGPRPT
         ENTRY IHIGPROT
         ENTRY IHIGPRGT
         ENTRY IHIGPRIT
         ENTRY IHIGPROP
         ENTRY IHIGPRCL
*
*        FLOATING POINT REGISTER
*
FPR0     EQU   0
*
*        DISPLACEMENTS IN ADRLST IN IHIFSA
*
*                                      DISPLACEMENT FOR
CI       EQU   0                       IHIIORCI
CL       EQU   4                       IHIIORCL
EV       EQU   8                       IHIIOREV
NX       EQU   12                      IHIIORNX
OP       EQU   16                      IHIIOROP
OQ       EQU   20                      IHIIOROQ
EN       EQU   24                      IHIIOREN
GP       EQU   28                      IHIIORGP
ER       EQU   32                      IHIIORER
*
*        PUT/GET FLAGS
*
PG0      EQU   X'80'
PG1      EQU   X'40'
*
         USING IHIGPRPT,R15
*
IHIGPRPT IHIENTRY 'IHIGPRPT LEVEL 2.1 &SYSDATE &SYSTIME'
*
         ST    R13,SAVEPG+4            SAVE REGISTER INTERNALLY
         LA    R13,SAVEPG
*
         SAVE  (14,12)
*
         DROP  R15
         LR    R7,R15
         USING IHIGPRPT,R7
         ST    R13,SAVEPUT+4
         L     R12,SAVEPG+4            ADDR OF FSA
         LA    R13,SAVEPUT
         L     R5,ADSTAB(R12)          FIRST ENTRY IN DSTAB IS APGCF
         L     R5,0(,R5)               ADDR OF PGCF IN R5
         LA    R6,16                   SET DSN NUMBER TO 16 FOR SYSUT2
         USING PGCF,R5
         TM    RECPG,X'01'             TEST IF RECURSIVELY ?
         BO    ERROR43                 YES
         OI    RECPG,X'01'             SET FLAG BIT
         TM    PG,PG0                  DATASET OPEN ?
         BZ    PUT1                    DATASET NOT OPEN
*                                      DATASET WAS OPEN
         L     R8,ADCB                 LOAD REGISTER FOR ADDRESSING
         USING IHADCB,R8               DCB AND DECB
         TM    PG,PG1                  TEST LAST PROCEDURE
         BO    PUT2                    LAST PROCEDURE WAS GET
*
         CHECK DECB                    CHECK THE PREVIOUS WRITE
*
         NOTE  (R8)                    TTR RETURNED IN R1
*
         LA    R5,4(,R5)
         L     R15,IORLST(R12)
         L     R15,EN(,R15)            R15 -> IHIIOREN
         BALR  R14,R15                 CLEAR NOTTAB
         SH    R5,=H'4'
         B     PUT3
*
*        LAST PROCEDURE WAS GET
*
PUT2     MVI   NOTEADR+3,1             PUT 1 IN TTRZ BYTE TO POINT TO
*                                      NEXT BLOCK
*
         POINT (8),NOTEADR             REPOSITION DATASET FOR WRITE
*
         NI    PG,X'BF'                PG1=0 INDICATE PUT IS EXECUTED
         B     PUT3
*
PUT1     L     R15,AOPENPG             CALL FOR ROUTINE OPEN DATASET
         BALR  R14,R15
         L     R8,ADCB
*
*        EVALUATE IDENTIFICATION NUMBER FIRST PARAMETER
*
PUT3     L     R1,SAVEPG+24            GET CALLERS R1
         ICM   R2,B'1111',0(R1)        CONVERSION NECESSARY ?
         BP    PUT4                    NO CONVERSION
         TM    OPTSW(R12),X'20'        CONVERSION TO INTEGER REQUIRED
         BO    PUT31                   SHORT PRECISION
         LD    FPR0,0(,R2)             PARAMETER TO FPR0
         B     PUT31A
*
PUT31    LE    FPR0,0(,R2)
PUT31A   L     R15,IORLST(R12)
         L     R15,CI(R15)             R15 -> IHIIORCI
         BALR  R14,R15                 CALL CONVERSION ROUTINE
         B     PUT4A
*
PUT4     L     R0,0(,R2)               PARAMETER TO R0
PUT4A    LTR   R0,R0
         BM    ERROR39
         C     R0,TWOP16               TWOP16= 2**16
         BNL   ERROR39
*                                      GET/PUT IDENTIFICATION WITHIN
*                                      RANGE
         STH   R0,S                    STORE IDENTIFICATION IN PGCF
*
*        TEST IF S ALREADY USED AS IDENTIFICATION NUMBER
*
         L     R9,ANOTTAB(R12)
         LR    R10,R9
PUTNOT   LA    R10,8(,R10)
         C     R10,0(,R9)
         BE    PUT41                   NO ENTRY WITH S FOUND
         LR    R2,R6
         CH    R2,0(,R10)
         BNE   PUTNOT
         CLC   S(2),2(R10)
         BNE   PUTNOT
         MVI   0(R10),X'80'            AN ENTRY FOR S IN NOTTAB
*                                      INSERT INVALID FLAG
PUT41    L     R4,BB
         LA    R4,12(,R4)              INSERT CORRECT CHAR POINTER
         ST    R4,R
         MVI   TYP,0                   CLEAR TYP
*
         SAVE  (14,12)                 PUT'S REGISTER SAVED IN SAVEPUT
*
         L     R13,SAVEPUT+4           RESTORE PROGRAMS REGISTER
         LM    R14,R12,12(R13)
         L     R8,4(,R1)               ADDR TO LIST
*                                      PROCEDURE IN R8
         USING IHIGPRPT,R15
         L     R13,SAVEPG+4
         DROP  R15
         CNOP  0,4
         BAL   R15,PROLOG(R13)
*
         DC    A(THUNKOUT)
         DC    X'8880'                 TYPE INFORMATION FOR STAND PROC
         DC    H'1'
*
         USING *,R15
         LA    R13,SAVEPUT
         DROP  R15
         LM    R14,R12,12(R13)         RELOAD PUT'S REGISTER
         L     R4,R                    RECORD POINTER TO R4
         S     R4,BB                   R-BB
         L     R3,BB                   BUFFER BEGIN
         STH   R4,0(,R3)               BLOCK LENGTH TO BUFFER
         SH    R4,=H'4'                R-BB-4
         LA    R3,4(,R3)
         STH   R4,0(,R3)               RECORD LENGTH OT RECORD IN BUFF
         MVC   4(2,R3),S               STORE S IN RECORD
         MVC   6(1,R3),TYP
         L     R3,BB                   BUFFER BEGIN
         MVI   RECPG,0                 CLEAR FLAG BIT
*
         WRITE DECB,SF,(R8),(R3),MF=E        WRITE BUFFER
*
         L     R13,SAVEPUT+4
         LM    R14,R12,12(R13)
         USING IHIGPRPT,R15
         L     R13,SAVEPG+4
         BR    R14
*
SAVEPUT  DC    18F'0'
*
         DROP  R15
*
***********************************************************************
*
*        IHIGPROT - OUTPUT IS ACTUAL PROCEDURE TO LIST
*        EVALUATED BY THUNKOUT
*
***********************************************************************
*
*        REGISTER CONTENTS ON ENTRY POINT IHIGPROT
*
*        R13                           -> FSA
*        R15                           -> A THUNKFIELD
*        R8                            -> ENTRY POINT
*
*        REGISTER CONTENTS ON ENTRY POINT OUTPUTTH OUTPUT BUFFER
*
*        R15                           -> OUTPUTTH
*        R8                            -> VALUE TO BE TRANSFERED TO
*                                         OTHER GENERAL REG
         CNOP  0,8
         USING IHIGPROT,R8
*
IHIGPROT IHIENTRY 'IHIGPROT LEVEL 2.1 &SYSDATE &SYSTIME',REG=R8
*
         ST    R13,SAVEOI+4
         LA    R13,SAVEOI
*
         SAVE  (14,12)
*
         ST    R13,SAVOUTP+4
         DROP  R8
         LR    R7,R8                   FIXED STORAGE AREA ON ENTRY
         USING IHIGPROT,R7
         ST    R13,SAVOUTP+4
         L     R12,SAVEOI+4            R12 -> FSA
         LA    R13,SAVOUTP
         L     R5,ADSTAB(R12)
         L     R5,0(,R5)               R5 -> PGCF
         LA    R6,16                   SET DSNR TO 16 FOR SYSUT2
         USING PGCF,R5                 FOR DSECT ADDRESSING
         TM    RECOI,X'01'             TEST IF RECURSIVELY
         BO    ERROR43                 YES
         OI    RECOI,X'01'             SET FLAG BIT
         CLI   7(R15),X'01'            TEST NUMBER OF PARAMETER
         BNE   ERROR21
         TM    5(R15),X'03'            TEST TYP INFORMATION ABOUT FIRST
         BZ    ERROR20                 PARAMETER
         TM    5(R15),X'04'            TEST IF ARRAY
         BO    ERROR20                 ARRAY
         TM    5(R15),X'C0'
         BZ    OUTPUT01                NO
         TM    5(R15),X'40'
         BZ    ERROR20                 STANDARD PROC IDENTIFIER
         TM    4(R15),X'C0'
         BM    OUTPUT01
         BZ    OUTPUT01
         MVI   PARTST,X'01'            SET BIT FOR LATER TEST
OUTPUT01 TM    TYP,X'FF'               TEST TYP FIELD IN PGCF
         BZ    OUTPUT1                 NO TYP INFORMATION IN PGCF
         MVC   TYPC(1),5(R15)          PGCF CONTAIN TYP INFORMATION
         NI    TYPC,X'03'
         CLC   TYP(1),TYPC
         BNE   ERROR20
         B     OUTPUT2
*
OUTPUT1  MVC   TYP(1),5(R15)
         NI    TYP,X'03'
*
OUTPUT2  MVC   ADRTHUNK(4),0(R15)
*
         SAVE  (14,12)                 SAVE OUTPUT'S REGISTER IN
*                                      SAVEOUTP
         L     R13,SAVOUTP+4           RESTORE CALLING ROUTINES REGS
         LM    R14,R12,12(R13)
*
***********************************************************************
*
*        LINKING TO ROUTINE CALLING ACTUAL PARAMETER
*
         USING IHIGPROT,R8
         L     R13,SAVEOI+4
         CNOP  2,4
         MVC   *+12(2),8(R10)          MOVE PROGRAM BLOCK NUMBER
         BAL   R15,CAP1GP
         DROP  R8
         USING *,R15
*
         DC    H'0'
         DC    H'0'
         NOP   0
*
OUTPUTTH LA    R13,SAVOUTP
         DROP  R15
         LM    R14,R7,12(R13)          RESTORE OUTPUT'S REGISTER
         LM    R9,R12,56(R13)          EXCEPT R8
         B     OUTPUTAA                BRANCH OVER SAVEAREA
*
SAVOUTP  DC    18F'0'
*
***********************************************************************
*
OUTPUTAA TM    PARTST,X'01'
         BZ    OUTPUT25
         LA    R2,FCTVALST(R12)
         CR    R2,R8
         BNE   ERROR20
         MVI   PARTST,X'00'
OUTPUT25 SR    R9,R9
         TM    TYP,X'03'
         BM    OUTPUT3
         LA    R9,1(,R9)               BOOLEAN VALUE
         B     OUTPUT5
*
OUTPUT3  TM    TYP,X'01'
         BZ    OUTPUT4
OUTPUT3A LA    R9,4(,R9)               INTEGER VALUE
         B     OUTPUT5
*
OUTPUT4  TM    OPTSW(R12),X'20'        REAL VALUE TEST IF LONG/SHORT
         BO    OUTPUT3A                SHORT
         LA    R9,8(,R9)               LONG
*
OUTPUT5  L     R4,R                    INSERT VALUE TO RECORD BUFFER
         LR    R2,R4
         AR    R2,R9
         C     R2,BE
         BH    ERROR38
OUTPUT51 BCTR  R9,0
         EX    R9,OUTINMOV
         LA    R9,1(,R9)
         AR    R4,R9                   INCREASE CHARACTER POINTER
         ST    R4,R
         MVI   RECOI,X'00'             CLEAR FLAG BIT
         L     R13,SAVOUTP+4           RESTORE CALLING ROUTINES REGS
         LM    R14,R12,12(R13)
         USING IHIGPROT,R8
         L     R13,SAVEOI+4
         DROP  R8
         B     8(,R15)
*
*        THUNK OUT
*
*        LIST PROCEDURE INVOKE CALL ACTUAL PARAMETER IN IHIFSA
*        AND THIS CALL THUNKOUT, WHICH ASSIGNS OUTPUT AS ACTUAL
*        PROCEDURE TO LIST
*
PBT      EQU   11                      REGISTER
LAT      EQU   12
FSB      EQU   13                      ADDRESS OF FIXED STORAGE AREA
*
*        DISPLACEMENT IN FSA
*
         CNOP  2,4
THUNKOUT BALR  R15,0
         L     R8,8(,R15)
         B     12(R15)
*
         DC    A(IHIGPROT)             INFORMATION CHARACTERISE OUTPUT
*
         MVI   PROLPBN(FSB),X'00'
         STM   PBT,LAT,PROLREG(FSB)
         B     CAP2(0,FSB)
*
***********************************************************************
*
*        IHIGPRGT - GET ROUTINE
*
***********************************************************************
*
*        REGISTER CONTENTS ON ENTRY POINT IHIGPRGT
*
*        R15                           -> ENTRY POINT
*        R14                           -> RETURN
*        R13                           -> SAVE AREA IN FSA
*        R1                            -> PARAMETER LIST
*
         USING *,R15
*
IHIGPRGT IHIENTRY 'IHIGPRGT LEVEL 2.1 &SYSDATE &SYSTIME'
*
         ST    R13,SAVEPG+4
         LA    R13,SAVEPG
*
         SAVE  (14,12)
*
         DROP  R15
         LR    R7,R15
         USING IHIGPRGT,R7
         L     R12,SAVEPG+4            ADDR OF FIXED ST AREA
         ST    R13,SAVEGET+4
         LA    R13,SAVEGET
         L     R5,ADSTAB(R12)          FIRST ENTRY IN DSTAB IS APGCF
         L     R5,0(,R5)               R5 -> PGCF TO
         LA    R6,16                   SET DSNR TO 16 FOR SYSUT2
         USING PGCF,R5
         TM    RECPG,X'01'             TEST IF RECURSIVELY
         BO    ERROR43                 YES
         OI    RECPG,X'01'             SET FLAG BIT
         TM    PG,PG0                  DATASET OPEN ?
         BZ    ERROR10                 DATASET NOT OPEN
         L     R8,ADCB                 LOAD REGISTER FOR ADDRESSING
         USING IHADCB,R8               DCB AND DECB
         TM    PG,PG1                  TEST LAST PROCEDURE
         BO    GET1                    LAST PROCEDURE WAS GET
*
         CHECK DECB                    CHECK THE PREVIOUS WRITE
*
         NOTE  (R8)
*
         ST    R1,NOTEADR              INFORMATION ABOUT THE LAST
*                                      RECORD WRITTEN TO PGCF TO
*                                      HAVE FOR A LATER PUT
*                                      WHERE TO CONTINUE DATASET
         OI    PG,PG1                  PG1=1 INDICATING GET IS EXECUTED
         LA    R5,4(,R5)
         L     R15,IORLST(R12)
         L     R15,EN(R15)             R15 -> IHIIOREN
         BALR  R14,R15                 CLEAR NOTTAB
         SH    R5,=H'4'                RESTORE PGCF ADDR
*
*        EVALUATE IDENTIFICATION NUMBER FIRST PARAMETER
*
GET1     L     R1,SAVEPG+24            GET CALLERS R1
         ICM   R2,B'1111',0(R1)        CONVERSION REQUIRED ?
         BP    GET2                    NO CONVERSION
         TM    OPTSW(R12),X'20'        CONVERSION TO INTEGER NECESSARY?
         BO    GET11                   SHORT PROCSISION
         LD    FPR0,0(,R2)             LONG
         B     GET11A                  PARAMETER TO FPR0
*
GET11    LE    FPR0,0(,R2)
GET11A   L     R15,IORLST(R12)
         L     R15,CI(R15)
         BALR  R14,R15                 CALL CONVERSION ROUTINE
         B     GET2A
*
GET2     L     R0,0(,R2)
GET2A    LTR   R0,R0                   IDENTIFICATION NUMBERS IN R0
         BM    ERROR39
         C     R0,TWOP16
         BNL   ERROR39
         STH   R0,S                    GET/PUT IDENT WITHIN RANGE
         L     R4,BB
         LA    R4,12(,R4)              INSERT CORRECT CHARACTER POINTER
         ST    R4,R
*
*        EXAMINE NOTTAB TO FIND AN ENTRY FOR S
*
GET12    L     R9,ANOTTAB(R12)         R9 -> NOTTAB
         LR    R10,R9                  COPY TO R10
GET3     LA    R10,8(,R10)             INCR ADDR BY RIGHT
         C     R10,0(,R9)              COMPARE WITH NXE
         BE    ERROR14                 NO ENTRY FOR S FIND IN NOTTAB
         LR    R2,R6                   DATASET NUMBER TO R2
         CH    R2,0(,R10)              DATASET NUMBER = 16 ?
         BNE   GET3                    DATASET NUMBER ^= 16 LOOP
         CLC   S(2),2(R10)             S IS EQUAL IN NOTTABENTRY ?
         BNE   GET3                    NO, NEXT ENTRY IN NOTTAB
*                                      FOUND AN ENTRY IN NOTTAB FOR S
         LA    R0,4(,R10)              ADDR OF NOTE INFORMATION
         LR    R1,R8                   DCB ADDR TO R1
*
         POINT (1),(0)
*
         L     R3,BB
*
         READ  DECB,SF,(R8),(R3),MF=E  READ A BLOCK TO BUFFER
*
         CHECK DECB                    CHECK THIS READ
*
         CLC   8(2,R3),S               TEST IDENTIFICATION NUMBER
         BNE   ERROR14
         MVC   TYP(1),10(R3)           TYP INFORMATION TO PGCF
         AH    R3,0(,R3)               BB+BL
         ST    R3,RE                   EFFECTIVE END OF RECORD CURRENT
         L     R1,SAVEPG+24
         L     R13,SAVEGET+4           RESTORE PROGRAMS REGISTER
         LM    R14,R12,12(R13)
         L     R8,4(,R1)               ADDR OF LIST PROCEDURE
         USING IHIGPRGT,R15
         L     R13,SAVEPG+4
         DROP  R15
         CNOP  0,4
         BAL   R15,PROLOG(R13)
*
         DC    A(THUNKIN)
         DC    X'8880'                 TYP INFORMATION FOR STANDARD
*                                      PROCEDURE
         DC    H'1'
*
         USING *,R15
         LA    R13,SAVEPG
         LM    R14,R12,12(R13)
         USING IHIGPRGT,R15
         L     R13,SAVEPG+4
         MVI   RECPG,X'00'             CLEAR FLAG BIT
         BR    R14
*
SAVEGET  DC    18F'0'
         DROP  R15
*
***********************************************************************
*
*        IHIGPRIT - INPUT IS ACTUAL PROCEDURE TO LIST
*        EVALUATED BY THUNKIN
*
***********************************************************************
*
*        REGISTER CONTENTS ON ENTRY POINT IHIGPRIT
*
*        R13                           R13 -> FSA
*        R8                            R8 -> ENTRY POINT IHIGPRIT
*        R15                           R15 -> A THUNKFIELD
*
*        REGISTER CONTENTS ON ENTRY POINT INPUTTH
*
*        R15                           -> INPUTTH
*        R8                            -> PARAMETER WHERE TO
*                                         STORE VALUE FROM BUFFER
         USING IHIGPRIT,R8
*
IHIGPRIT IHIENTRY 'IHIGPRIT LEVEL 2.1 &SYSDATE &SYSTIME',REG=R8
*
         ST    R13,SAVEOI+4
         LA    R13,SAVEOI
*
         SAVE  (14,12)
*
         ST    R13,SAVEIN+4
         LR    R7,R8                   FIXED STORAGE AREA ON ENTRY
         DROP  R8
         USING IHIGPRIT,R7
         L     R12,SAVEOI+4
         LA    R13,SAVEIN
         L     R5,ADSTAB(R12)
         L     R5,0(,R5)               R5 -> PGCF
         LA    R6,16                   DSNR = 16 FOR SYSUT2
         USING PGCF,R5                 DSECT ADDRESSABILITY
         TM    RECOI,X'01'             TEST IF RECURSIVELY
         BO    ERROR43                 YES
         OI    RECOI,X'01'             SET FLAG BIT
         CLI   7(R15),X'01'            TEST NUMBER OF PARAMETERS
         BNE   ERROR21                 NUMBER DOES NOT CORRESPOND
*                                      BETWEEN DECLARATION AND CALL
         TM    4(R15),X'08'            ASSIGNMENT POSSIBLE ?
         BO    ERROR20
         MVC   TYPC(1),5(R15)
         NI    TYPC,X'03'
         CLC   TYP(1),TYPC
         BNE   ERROR20                 PGCF
*
***********************************************************************
*
*        LINKING TO ROUTINE CALLING ACTUAL PARAMETER
*
         SAVE  (14,12)                 SAVE REGISTER IN SAVEIN
*
         L     R13,SAVEIN+4
         MVC   ADRTHUNK(4),0(R15)
         LM    R14,R12,12(R13)         RESTORE PROGRAMS REGISTER
         USING IHIGPRIT,R8
         L     R13,SAVEOI+4
         CNOP  2,4
         MVC   *+12(2),8(R10)          MOVE PROGRAM BLOCK NUMBER
         BAL   R15,CAP1GP
         DROP  R8
         USING *,R15
*
         DC    H'0'
         DC    H'0'
         NOP   0
*
INPUTTH  LA    R13,SAVEIN
         DROP  R15
         LM    R14,R7,12(R13)          RESTORE INPUT'S REGISTER EXCEPT
         LM    R9,R12,56(R13)          R8
         B     INPUTTAA                BRANCH OVER SAVEAREA
*
SAVEIN   DC    18F'0'
*
***********************************************************************
*
INPUTTAA L     R3,BB
         AH    R3,0(,R3)
         C     R3,R
         BNH   ERROR38                 BUFFER OVERFLOW
         SR    R9,R9
         TM    TYP,X'03'
         BM    INPUT1
         LA    R9,1(,R9)               BOOLEAN VALUE
         B     INPUT3
*
INPUT1   TM    TYP,X'01'
         BZ    INPUT2
INPUT1AA LA    R9,4(,R9)               INTEGER VALUE
         B     INPUT3
*
INPUT2   TM    OPTSW(R12),X'20'        REAL VALUE TEST IF LONG/SHORT
         BO    INPUT1AA                SHORT
         LA    R9,8(,R9)               LONG
*
INPUT3   L     R4,R
INPUT31  BCTR  R9,0
         EX    R9,INOUTMOV
         LA    R9,1(,R9)
         AR    R4,R9                   INCREASE CHARACTER POINTER
         ST    R4,R
         MVI   RECOI,0                 CLEAR FLAG BIT
         L     R13,SAVEIN+4
         LM    R14,R12,12(R13)
         USING IHIGPRIT,R8
         L     R13,SAVEOI+4
         DROP  R8
         B     8(,R15)
*
*        THUNK IN
*
*        LIST PROCEDURE INVOKE CALL ACTUAL PARAMETER IN IHGFSA
*        AND THIS CALL THUNKIN, WHICH ASSIGN INPUT AS ACTUAL
*        PROCEDURE TO LIST
*
         CNOP  2,4
THUNKIN  BALR  R15,0
         L     R8,8(,R15)
         B     12(,R15)
*
         DC    A(IHIGPRIT)             INFORMATION CHARACTERISE OUTPUT
*
         MVI   PROLPBN(FSB),X'00'
         STM   PBT,LAT,PROLREG(FSB)
         B     CAP2(,FSB)
*
*        OPEN DATASET SYSUT2
*
*        RESERVE MAIN FOR ONE DCB AND ONE DECB, ONE I/O BUFFER
*        AND FOR NOTTAB IF NOT CREATED BEFORE
*
IHIGPROP SAVE  (14,12),,'IHIGPROP LEVEL 2.1 &SYSDATE &SYSTIME'
*
         LR    R7,R15
         USING IHIGPROP,R7
         USING IHADCB,R8
         ST    R13,SAVEOP+4
         LA    R13,SAVEOP
         LA    R2,IHIGPRCL
         L     R9,IORLST(R12)
         L     R9,GP(,R9)
         ST    R2,0(,R9)
         ICM   R2,B'1111',ANOTTAB(R12)  NOTTAB ALREADY GETMAINED ?
         BP    OPGP1                   YES, BRANCH
         LA    R0,1024
*
         GETMAIN R,LV=(0)              GET AREA FOR NOTTAB
*
         ST    R1,ANOTTAB(R12)         SAVE GETMAINED AREA ADDR
         LR    R2,R1                   ANOTTAB TO R2
         LR    R9,R1                   ANOTTAB TO R9
         LA    R9,8(,R9)
         ST    R9,0(,R2)               STORE POINTER NXE IN NOTTAB
         LA    R9,1016(,R9)
         ST    R9,4(,R2)               STORE POINTER NXEF IN NOTTAB
*
OPGP1    LA    R0,DCBAREAL             GET AREA FOR DCB AND DECB
*
         GETMAIN R,LV=(0)
*
         ST    R1,ADCB
         LR    R8,R1
*
*        TRANSFER DCBMODEL
*
         MVC   0(DCBMODLN,R8),DCBMODEL
         L     R1,IORLST(,R12)          INSERT SYNAD
         L     R1,ER(,R1)               ADDR TO
         ST    R1,DCBSYNAD              IHIIORER
*
         OPEN  ((R8),(OUTIN))           OPEN DATASET
*
         TM    DCBOFLGS,DCBOFOPN        OPEN SUCCESSFUL ?
         BO    OPGP2                    YES, BRANCH
         LR    R13,R12                  OPEN FAILED
         B     FSAERR+41*4(R12)
*
OPGP2    L     R0,BE                    BE=BUFFER LENGTH
*
         GETMAIN R,LV=(0)               GET AREA FOR RECORD BUFFER
*
         ST    R1,BB
         A     R1,BE                    BB+BE TO BE
         ST    R1,BE                    BE DEFINE BUFFER END
         OI    PG,PG0                   PG0=1 DATASET OPEN
         L     R13,SAVEOP+4
*
         RETURN (14,12)
*
*        OPEN EXIT ROUTINE
*
IHIGPRDX LH    R2,DCBBLKSI             DCBBLKSI = 0 ?
         LTR   R2,R2
         BZ    EXIT1                   BLKSIZE = 0
         ST    R2,BE                   BLKSIZE NOT ZERO
         B     EXIT1+8
*
EXIT1    L     R2,BE                   BE=2048 TO BLKSIZE
         STH   R2,DCBBLKSI
*
         RETURN
*
*        CLOSE DATASET SYSUT2
*
*        RELEASE DCB, DECB AND I/O BUFFER
*        CALLED FROM IHGIOR - CLOSEPE
*
IHIGPRCL SAVE  (14,12),,'IHIGPRCL LEVEL 2.1 &SYSDATE &SYSTIME'
*
         LR    R7,R15
         USING IHIGPRCL,R7
         ST    R13,SAVEOP+4
         LA    R13,SAVEOP
         L     R5,ADSTAB(,R12)
         L     R5,0(,R5)
         LA    R6,16
         L     R8,ADCB
*
         CLOSE ((R8))
*
         L     R1,BB                   BUFFER BEGIN ADDR TO R1
         L     R0,BE
         SR    R0,R1                   BUFFER LENGTH TO R0
*
*        FREEMAIN FOR RECORD BUFFER
*
         FREEMAIN  R,LV=(0),A=(1)
*
*        FREEMAIN FOR DCB AND DECB
*
         FREEMAIN  R,LV=DCBAREAL,A=ADCB
*
         L     R13,SAVEOP+4
*
         RETURN (14,12)
*
RECPG    DC    X'00'
RECOI    DC    X'00'
TYPC     DC    X'00'
PARTST   DC    X'00'
SAVEPG   DC    18F'0'
SAVEOI   DC    18F'0'
SAVEOP   DC    18F'0'
*
DCBMODEL DCB   DSORG=PS,MACRF=(RP,WP),DDNAME=SYSUT2,RECFM=V,NCP=1,     X
               EXLST=ADCBEXIT
DCBMODLN EQU   *-DCBMODEL              L'DCB
*
         DC    0F'0'
ADCBEXIT DC    X'85'
         DC    AL3(IHIGPRDX)
*
*        EXTERNAL ADDRESSES
*
AOPENPG  DC    A(IHIGPROP)
*
***********************************************************************
*
*        THIS ROUTINE IS USED INSTEAD OF CAP1 IN FSA
*
***********************************************************************
*
CAP1GP   BALR  R8,0
         USING *,R8
         L     R3,RASPT(FSB)
         LA    R3,8(R3)
         C     R3,RASPB(FSB)
         BNL   ERROR36                 RASOVERFLOW
         ST    R10,0(,R3)
         ST    R15,4(,R3)
         ST    R3,RASPT(FSB)
         L     R8,ADRTHUNK
         DROP  R8
         BR    R8                      TO THUNK ROUTINE
*
TWOP16   DC    F'65536'                2**16
ADRTHUNK DC    A(0)
*
         LTORG
*
OUTINMOV MVC   0(1,R4),0(R8)
INOUTMOV MVC   0(1,R8),0(R4)
*                                      DATASET CLOSED
ERROR10  LR    R13,R12                 ADDR OF FSA TO R13
         B     FSAERR+10*4(R12)
*
ERROR14  LR    R13,R12                 ADDR OF FSA TO R13
*                                      NO ENTRY IN NOTTAB IE BACK-
         B     FSAERR+14*4(R12)        WARD REPOSITIONING NOT DEFINED
*
ERROR20  LR    R13,R12                 ADDR OF FSA TO R13
*                                      DIFFERENT TYPE OR KIND OF
         B     FSAERR+20*4(R12)        PARAMETER AT ACTUAL AND FORMAL
*
ERROR21  LR    R13,R12                 ADDR OF FSA TO R13
*                                      NUMBER OF PARAMETERS DOES NOT
         B     FSAERR+21*4(R12)        CORRESPOND BETWEEN DECLARATION
*                                      AND CALL
*                                      TOO MANY NESTED BLOCKS, PROCS
ERROR36  LR    R13,R12                 AND PARAMETER CALLS. INTERNAL
         B     FSAERR+36*4(R12)        (RETURN ADDRESS STACK) OVERFLOW
*
ERROR38  LR    R13,R12                 ADDR OF FSA TO R13
         B     FSAERR+38*4(R12)        GET/PUT BUFFER OVERFLOW
*
ERROR39  LR    R13,R12                 ADDR OF FSA TO R13
*                                      GET/PUT IDENTIFICATION OUT OF
         B     FSAERR+39*4(R12)        RANGE
*
*
ERROR43  LR    R13,R12                 RECURSIVELY USE OF PUT/GET
         B     FSAERR+43*4(R12)        OUTPUT/INPUT
*
PGCF     DSECT
ADCB     DS    A
R        DS    A
RE       DS    A
BB       DS    A
BE       DS    A
NOTEADR  DS    A
S        DS    H
TYP      DS    C
PG       DS    C
*
*        MAP DCB
*
         PRINT NOGEN
*
         DCBD  DSORG=BS,DEVD=(DA)
*
         PRINT GEN
*
*        MAP DECB
*
         READ  DECB,SF,MF=L
*
DCBAREAL EQU   *-IHADCB                 L'I/O CONTROL BLOCKS
*
FSAAREA  DSECT
         COPY  FSAREA
*
*        REGISTER EQUATES
*
         IEZREGS
*
         END
