LEX      TITLE 'IHILEXPT, EXPONENTIAL, LONG PRECISION, ALGOL F LIB'
*
*        COMPONENT ID - 360S-LM-532 ALGOL F LIBRARY
*
*        STATUS - LEVEL 2.1
*
*        FUNCTION/OPERATION -
*        Y = X*LOG2(E) = 4A-B-C/16-D
*        WHERE A, B, AND C ARE INTEGERS
*        B BETWEEN 0 AND 3
*        C BETWEEN 0 AND 15
*        D IS A FRACTION BETWEEN 0 AND 1/16
*         THEN
*        E**X = 2**Y = (16**A)(2**-B)N2**-C/16)(2**-D)
*
*        ENTRY POINT -
*        IHILEX - EXP FUNCTION, LONG
*                 LA   R1,PARMLIST
*                 BALR R14,R15
*        DATA PASSED BY NAME
*        THE MODULE IS ENTERED FROM THE GENERATED OBJECT MODULE
*
*        INPUT - N/A
*
*        OUTPUT - N/A
*
*        EXTERNAL ROUTINES - N/A
*
*        EXIT - NORMAL -
*        RETURN VIA R14, RESULT IN FPR0
*
*        EXIT - ERROR -
*        IF ARGUMENT GREATER THAN 174673 GOTO ERROR ROUTINE VIA
*        B   FSAERR+24*4(R13)
*
*        TABLES/WORKAREAS - N/A
*
IHILEXPT CSECT
*
         ENTRY IHILEX
*
FPR0     EQU   0                       RESULT REGISTER
FPR2     EQU   2                       SCRATCH REGISTER
*
IHILEX   SAVE  (14,12),,'IHILEXPT LEVEL 2.1 &SYSDATE &SYSTIME'
*
         USING IHILEXPT,R15
         L     R1,0(,R1)               OBTAIN ARGUMENT
         LD    FPR0,0(,R1)
         CE    FPR0,MAX                MAX = 63*LOG16 = 174.67309
         BH    ERROR                   ARG > MAX, ERROR
         CE    FPR0,MIN                MIN = -65*LOG16 = -180.21867
         BNH   SMALL                   ARG < MIN, GIVE ANS=0
         DD    FPR0,LOGE2              Y = X*LOG2(E) BY ACCURATE DIVIDE
         STE   FPR0,SIGN               SAVE SIGN OF Y
         LER   FPR2,FPR0               DECOMPOSE Y = (-4A'-B'-C'/16)-D'
         AU    FPR2,SCALER             BY FORCING CHARACTISTIC OF X'45'
         STE   FPR2,FIELDS             -4A'-B'-C'/16 IN FIELDS,
         SDR   FPR2,FPR2               UNNORMALIZED
         AE    FPR2,FIELDS             NORMALIZE THIS AND SUBTRACT IT
         SDR   FPR0,FPR2               FROM Y TO OBTAIN -D' IN FPR0
         L     R2,FIELDS
         TM    SIGN,X'80'              Y NEGATIVE ?
         BO    READY                   YES, BRANCH
*                                      Y NON-NEGATIVE,
         SD    FPR0,ONO16              -D = /D'/-1/16
         LA    R2,1(,R2)              -4A-B-C/16 = -(-4A'-B'-(C'+1)/16)
         LCR   R2,R2                   NOW IN ANY CASE, B, C,
READY    SR    R3,R3                   AND D ARE POSITIVE
         SRDL  R2,4                    C IN HIGH R3
         SRL   R3,25
         SRDL  R2,2                    B IN HIGH R3, C IN LOW R3
         SLL   R2,24
         LCR   R0,R2                   A (IN SCALE B7) IN R0,
         SR    R2,R2                   CHAR MODIFIER
         SLDL  R2,2                    B IN R2, 8*C IN R3
         LDR   FPR2,FPR0               COMPUTE 2**-D BY USE OF
         ME    FPR0,C6                 CHEBYSHEV INTERPOLATION
         AD    FPR0,C5                 POLYNOMIAL OF DEGREE 6
         MDR   FPR0,FPR2
         AD    FPR0,C4
         MDR   FPR0,FPR2
         AD    FPR0,C3
         MDR   FPR0,FPR2
         AD    FPR0,C2
         MDR   FPR0,FPR2
         AD    FPR0,C1
         MDR   FPR0,FPR2
         AD    FPR0,C0A                ADD C0 = 1. IN 2 STEPS
         AD    FPR0,C0A                TO PROTECT LAST DIGIT
         LTR   R3,R3                   MULTIPLY 2**(-C/16)
         BZ    SKIP2                   IN DOING SO, AVOID
         CE    FPR0,ONE                MULTIPLICATION BY 1
         BL    SKIP1
         LD    FPR0,MCONST-8(R3)
         B     SKIP2
*
SKIP1    MD    FPR0,MCONST-8(R3)
SKIP2    LTR   R2,R2                   MULTIPLY 2**(-B)
         BZ    SKIP3                   BY HALVING B TIMES
SKIP3A   HDR   FPR0,FPR0
         BCT   R2,SKIP3A
SKIP3    STD   FPR0,SIGN               ADD A TO CHARACTERISTIC
         A     R0,SIGN
         ST    R0,SIGN
         SDR   FPR0,FPR0               NORMALIZE ANSWER JUST IN CASE
         AD    FPR0,SIGN
*
EXIT     RETURN (14,12)                RETURN
*
SMALL    SDR   FPR0,FPR0               IF X IS VERY LARGE NEGATIVE,
         B     EXIT                    GIVE 0 AS ANSWER
*
ERROR    L     R13,4(R13)              RESTORE FSA ADDR
         B     FSAERR+24*4(R13)        PARAM GREATER 174.673
*
FSAERR   EQU   X'1CC'
*
SIGN     DC    D'0'
FIELDS   EQU   SIGN+4
LOGE2    DC    X'40B17217F7D1CF79'     LOG 2 (BE) TRUNCATED
ONO16    DC    X'4010000000000000'
ONE      DC    X'41100000'
C6       DC    X'3D9E0F1E'             .1507368551403575E-3
C5       DC    X'3E575D42BB7276D4'     .1333073417706260E-2
C4       DC    X'3F276553A5F9BC94'     .9618117095313700E-2
C3       DC    X'3FE35846A61AEE7A'     .5550410840231345E-1
C2       DC    X'403D7F7BFF0289DE'     .2402265069563678
C1       DC    X'40B17217F7D1CC79'     .6931471805599346
C0A      DC    X'4080000000000000'     .5    C0/2
MCONST   DC    X'40F5257D152486CC'     2**(-1/16)
         DC    X'40EAC0C6E7DD2439'     2**(-2/16)
         DC    X'40E0CCDEEC2A94E1'     2**(-3/16)
         DC    X'40D744FCCAD69D6B'     2**(-4/16)
         DC    X'40CE248C151F8481'     2**(-5/16)
         DC    X'40C5672A115506DB'     2**(-6/16)
         DC    X'40BD08A39F580C37'     2**(-7/16)
         DC    X'40B504F333F9DE65'     2**(-8/16)
         DC    X'40AD583EEA42A14B'     2**(-9/16)
         DC    X'40A5FED6A9B15139'     2**(-10/16)
         DC    X'409EF5326091A112'     2**(-11/16)
         DC    X'409837F0518DB8A9'     2**(-12/16)
         DC    X'4091C3D373AB11C3'     2**(-13/16)
         DC    X'408B95C1E3EA8BD7'     2**(-14/16)
         DC    X'4085AAC367CC487B'     2**(-15/16)
SCALER   DC    X'45000000'
MAX      DC    X'42AEAC4E'             174.6731
MIN      DC    X'C2B437DF'             -180.2187
*
*        REGISTER EQUATES
*
         IEZREGS
*
         END
