FDD        TITLE 'IHIFDDXP, POWER ROUTINE, REAL**REAL, LONG PRECISION, X
               ALGOL F LIB'
*
*        COMPONENT ID - 360S-LM-532 ALGOL F LIBRARY
*
*        STATUS - LEVEL 2.1
*
*        FUNCTION/OPERATION - SEE CODE
*
*        ENTRY POINT - IHIFDD - POWER FUNCTION, REAL**REAL, LONG
*                      LA   R1,PARMLIST
*                      BALR R14,R15
*                      DATA PASSED BY NAME
*        THE MODULE IS ENTERED FROM THE GENERATED OBJECT MODULE
*
*        INPUT - N/A
*
*        OUTPUT - N/A
*
*        EXTERNAL ROUTINES -
*
*        IHILLO - LOGARITHM FUNCTION, LONG PRECISION
*        IHILEX - EXPONENTIAL FUNCTION, LONG PRECISION
*
*        EXIT - NORMAL - RETURN VIA R14, RESULT IN FPR0
*
*        EXIT - ERROR -
*        IF BASE IS ZERO AND EXPONENT NOT POSITIVE GOTO ERROR
*        ROUTINE VIA
*        B    FSAERR+35*4(R13)
*
*        TABLES/WORKAREAS - N/A
*
IHIFDDXP CSECT
*
*        FLOATING POINT REGISTERS
*
FPR0     EQU   0                       BASE NO, PASSING RESULT
FPR2     EQU   2                       EXPONENT IN COMPUTATION
*
*        GENERAL PURPOSE REGISTERS
*
*        R1                            PARAMETER LIST REF
*        R3                            INDEXING PARAMETER ADDR
*
         ENTRY IHIFDD
*
IHIFDD   SAVE  (14,12),,'IHIFDDXP LEVEL 2.1 &SYSDATE &SYSTIME'
*
         LR    R2,R15
         USING IHIFDDXP,R2
         LR    R3,R13                  CHAIN SAVE AREAS
         LA    R13,SAVEAREA
         ST    R3,4(,R13)
         ST    R13,8(,R3)
         L     R3,0(,R1)               PLIST OF BASE NO IN R3
         LD    FPR0,0(,R3)             BASE NO INTO FPR0
         L     R3,4(,R1)               PLIST OF EXPONENT IN R3
         LD    FPR2,0(,R3)             EXPONENT INTO FPR2
         LTDR  FPR0,FPR0               BASE NO +, - OR ZERO ?
         BZ    ERROR                   ZERO, BRANCH TO ERROR
         BM    ERRORM                  NEGATIVE, UNDEFINED ERROR
         LTDR  FPR2,FPR2               EXPONENT PLUS, MINUS, OR ZERO ?
         BZ    LOAD1                   ZERO, BRANCH TO LOAD1
         STD   FPR2,PARAM              STORE EXPONENT
         L     R15,VIHILLO             R15 -> IHILLO ROUTINE
         BALR  R14,R15                 CALL IHILLO ROUTINE
         LD    FPR2,PARAM              RELOAD FPR2 WITH EXPONENT
         MDR   FPR0,FPR2               MULT LOG OF BASE NO BY EXPONENT
         STD   FPR0,PARAM              STORE RESULT AS EXP RTN PARM
         LA    R1,ADCPAR               R1 -> EXP RTN PARM
         L     R15,VIHILEX             R15 -> IHILEX ROUTINE
         BALR  R14,R15                 CALL IHILEX ROUTINE
         B     EXIT                    EXIT WITH RESULT IN FPR0
*
LOAD1    LD    FPR0,KFPDONE            PLUS 1 AS RESULT IN FPR0
EXIT     L     R13,4(,R13)             R13 -> CALLERS SAVE AREA
*
         RETURN (14,12)                RESTORE CALLERS REGS AND RETURN
*
ERROR    LTDR  FPR2,FPR2               EXPONENT PLUS, MINUS, OR ZERO ?
         BP    EXIT                    EXPN IS POSITIVE, BRANCH TO EXIT
ERRORM   L     R13,4(R13)              R13 -> CALLERS SAVE AREA
         B     FSAERR+35*4(R13)        BASENO EQUAL ZERO AND EXPONENT
*                                      NO GREATER THAN ZERO, UNDERFINED
*
*        CONSTANTS AND ADCON AREAS
*
SAVEAREA DC    18F'0'                  SAVE AREA
PARAM    DC    D'0'                    PARAM FOR DATA IN DEXP MATH RTN
KFPDONE  DC    D'+1'                   CONSTANT ONE IN DOUBLE PREC FP
*
ADCPAR   DC    A(PARAM)                ADDR OF PARAMETER FOR EXP RTN
*
VIHILLO  DC    V(IHILLO)               LOG MATH LIBRARY ROUT
VIHILEX  DC    V(IHILEX)               EXP MATH LIBRARY ROUT
*
FSAERR   EQU   X'1CC'
*
*        REGISTER EQUATES
*
         IEZREGS
*
         END
