X00      TITLE 'IEX00 - COMPILER DIRECTORY, ALGOL F'
*
*        COMPONENT ID - 360S-AL-531 ALGOL F COMPILER
*
*        FUNCTION/OPERATION -
*        THIS MODULE HAS TWO FUNCTIONS -
*        1. IT PROVIDES THE INITIAL ENTRY POINT TO AND FINAL
*           EXIT POINT FROM THE ALGOL COMPILER
*        2. IT CONTAINS ROUTINES AND DATA WHICH MAY BE NEEDED BY
*           SOME OR ALL OF THE FOLLOWING COMPILER PHASES
*
*        ENTRY POINTS -
*        IEX00000 - INITIAL ENTRY POINT. MAY BE ENTERED BY AN
*                   JCL EXEC STATEMENT OR BY ANY ONE OF THE
*                   MACROS LINK, CALL, XCTL OR ATTACH
*        IEX00PIC - PROGRAM INTERRUPT ROUTINE
*        IEX00ED1 - END OF DATA ROUTINE FOR SYSUT1
*        EODAD2   - END OF DATA ROUTINE FOR SYSUT2
*        EODAD3   - END OF DATA ROUTINE FOR SYSUT3
*        IEX00EDI - END OF DATA ROUTINE FOR SYSIN
*                   (THE FOUR END OF DATA ROUTINES ABOVE ARE
*                   DUMMIES WHICH ONLY TRANSFER CONTROL TO THE
*                   ACTUAL ROUTINES, THE ADDRESSES OF WHICH HAVE
*                   BEEN STORED IN THE COMMON WORK AREA)
*        IEX00SYN - SYNCHRONOUS ERROR ROUTINE FOR ALL DATA SETS
*                   EXCEPT SYSPRINT
*        SYNPR    - SYNCHRONOUS ERROR ROUTINE FOR SYSPRINT
*        IEX00PRI - A COMMON SUBROUTINE FOR WRITING OUTPUT TO
*                   SYSPRINT
*
*        INPUT - N/A
*
*        OUTPUT -
*        THE SUBROUTINE PRINT EXECUTES ALL OUTPUT OPERATIONS ON
*        SYSPRINT
*        RECORD LENGTH IS 121 BYTES WITH ASA CONTROL CHARACTERS
*
*        EXTERNAL ROUTINES -
*        IEX00001 - THE COMMON WORK AREA
*        THIS IS NOT AN EXECUTABLE ROUTINE BUT RATHER A
*        COLLECTION OF TABLES, DATA AND WORK AREAS WHICH ARE
*        NEEDED BY SOME OR ALL OF THE COMPILER PHASES, THUS
*        SUPPLEMENTING THE FUNCTION OF THIS MODULE. IT IS
*        ASSEMBLED SEPARATELY AND LINKAGE EDITED WITH THIS
*        MODULE. ITS CONTENTS AND FORMAT CAN BE FOUND IN THE
*        DUMMY CONTROL SECTION WORKAREA
*
*        IEX10000 - THE COMPILER INITIALIZATION PHASE
*        THE WHOLE CHAIN OF COMPILER PHASES STARTING WITH
*        IEX10000 AND ENDING WITH IEX51002 CAN BE REGARDED AS A
*        SUBROUTINE TO THIS MODULE. IT IS ENTERED BY A MACRO
*        LINK EP=IEX10000. ON ENTRY, R0 CONTAINS THE ADDRESS
*        OF THE COMMON WORK AREA. CONTROL IS FINALLY RETURNED TO
*        THIS MODULE FROM IEX51002 BY A RETURN MACRO WITH THE
*        COMPLETION CODE IN R15
*
*        EXITS - NORMAL -
*        THE FINAL EXIT FROM THE COMPILER IS BY A RETURN MACRO
*        TO THE INVOKING PROGRAM. R15 CONTAINS A RETURN
*        CODE TO INDICATE WHETHER THE COMPILATION WAS SUCCESSFUL
*        OR NOT
*
*        EXIT FROM THE SUBROUTINE PRINT IS BY A RETURN MACRO
*        R1 CONTAINS THE ADDR OF A BUFFER AREA INTO
*        WHICH THE NEXT OUTPUT LINE CAN BE MOVED
*
*        EXITS - ERRORS -
*        EXIT FROM THE COMMON ERROR ROUTINES PIROUT, SYNAD AND
*        SYNPR IS NORMALLY TO AN ERROR ROUTINE WHICH IS PRIVATE
*        TO EACH COMPILER PHASE. THE ADDR OF THIS ROUTINE HAS
*        BEEN STORED IN ERET IN THE COMMON WORK AREA. HOWEVER, IF
*        THE PIROUT ROUTINE IS ENTERED FOR THE SECOND TIME, EXIT
*        IS MADE TO THE ROUTINE GOTOEND IN THIS MODULE WHICH IN
*        ITS TURN XCTL'S TO THE TERMINATING PHASE IEX51002
*
*        EXIT FROM THE ROUTINES SYNAD AND SYNPR IS BY LOADING
*        ERET INTO R15 AND BRANCHING
*
*        EXIT FROM THE ROUTINE PIROUT IS BY MOVING THE RETURN
*        ADDRESS INTO THE OLD PSW AND EXECUTING A RETURN MACRO.
*
*        TABLES/WORK AREAS -
*        SAVE     - THE SAVE AREA IN STANDARD FORMAT
*        IEX00PIC - THE PROGRAM INTERRUPT CONTROL AREA
*        SYSPRINT - DCB FOR SYSPRINT
*        SYSLIN   - DCB FOR SYSLIN
*        SYSPUNCH - DCB FOR SYSPUNCH
*        SYSUT2   - DCB FOR SYSUT2
*        SYSUT3   - DCB FOR SYSUT3
*        WORKAREA - THE COMMON WORKAREA IN THE EXTERNAL CONTROL
*                   SECTION IEX0001
*
*        ATTRIBUTES - NOT SERIALLY REUSABLE
*
*        NOTES -
*        THIS MODULE IS TO BE LINKAGE EDITED WITH THE COMMON
*        WORK AREA (MODULE IEX00001). THE RESULTING LOAD MODULE
*        FORMS THE RESIDENT PART (IEX00) OF THE ALGOL COMPILER
*
*        THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL
*        REPRESENTATION OF THE EXTERNAL CHARACTER SET WHICH IS
*        EQUIVALENT TO THE ONE USED AT ASSEMBLY TIME
*
IEX00000 CSECT
*
*        BIT PATTERNS
*
ONSW     EQU   X'F0'                    ON SWITCH IN BRANCH INSTR
OFFSW    EQU   X'0F'                    OFF SWITCH IN BRANCH INSTR
*
*        ENTRY POINTS
*
         ENTRY IEX00LIN,IEX00PCH,IEX00PRT,IEX00UT2,IEX00UT3
         ENTRY IEX00SYN,IEX00ED1,IEX00EDI,IEX00PIC,IEX00PRI
*
         USING IEX00000,R15
*
         SAVE  (14,12),,'IEX00000 LEVEL 2.1 &SYSDATE &SYSTIME'
*
         LA    R2,SAVE
         ST    R13,SAVE+4
         ST    R2,8(,R13)
         LR    R13,R2
         L     R0,=V(IEX00001)         R0 -> COMMON WORKAREA
*
         LINK  EP=IEX10                LINK TO PHASE 10
*
*        TWO PARAMETERS ARE TRANSMITTED TO PHASE 10, R0
*        CONTAINS THE ADDR OF THE COMMON WORKAREA, R1 CONTAINS
*        THE ADDR OF THE PARAMETER LIST OF THE INVOKER
*
*        FINAL EXIT OF THE COMPILER
*
*        PHASE 51 GENERATED THE RETURN CODE IN R15
*        THE RETURN CODE IS PASSED BACK TO THE INVOKER
*
         BALR  R14,0
         USING *,R14
         L     R13,SAVE+4
*
         RETURN (14,12),RC=(15)
*
*        SAVEAREA FOR THIS LEVEL OF CONTROL
*
SAVE     DC    18F'0'
*
         LTORG
*
*        THE FOLLOWING SECTION CONTAINS -
*        THE PROGRAM INTERRUPT CONTROL AREA
*        THE PROGRAM CHECK
*        AND I/O ERROR ROUTINES
*        THE PRINT ROUTINE AND THE DCBS FOR SYSLIN, SYSPUNCH,
*        SYSPRINT, SYSUT2 AND SYSUT3
*
         USING WORKAREA,R13
*
*        PROGRAM INTERRUPT CONTROL AREA
*
IEX00PIC SPIE  PIROUT,((1,15)),MF=L
*
*        PROGRAM INTERRUPT ROUTINE
*
         USING *,R15
PIROUT   TM    COMPFLGS+1,TERM         PROG INTERRUPT IN
*                                      TERMINATING PHASE ?
         BO    TERMERR                 YES, BRANCH
         TM    COMPFLGS+1,ERR
         BO    ERRERR                  PROG INTERRUPT IN ERROR RTN
         STM   R4,R7,PISAVE            SAVE REGISTERS
         L     R6,NEXTERR              ADDR OF NEXT BYTE IN ERROR POOL
         MVC   0(2,R6),=AL1(20,209)    PATTERN FOR MSG 209
         MVC   2(2,R6),SEMCNT          SEMICOLON COUNTER
         TM    COMPFLGS+2,NOSC         SEMICOLON COUNTER VALID ?
         BZ    *+8                     YES, BRANCH
         OI    0(R6),X'80'             INDICATE SCNTR NOT VALID
         SR    R7,R7                   INITIALIZE INDEX
         L     R5,4(,R1)               FIRST HALF OF PSW
LOOP     SR    R4,R4
         SLDL  R4,4                    GET HALF A BYTE OF OLD PSW
         STC   R4,4(R7,R6)             STORE FOR CONVERSION
         LA    R7,1(,R7)               INCR INDEX
         CH    R7,=H'8'                PERFORM LOOP
         BL    LOOP                    EIGHT TIMES
         L     R5,8(,R1)               SECOND HALF OF PSW
LOOP2    SR    R4,R4
         SLDL  R4,4                    GET HALF A BYTE OF OLD PSW
         STC   R4,4(R7,R6)             STORE FOR CONVERSION
         LA    R7,1(,R7)               INCR INDEX
         CH    R7,=H'16'               PERFORM LOOP
         BL    LOOP2                   EIGHT TIMES
         TR    4(16,R6),=C'0123456789ABCDEF' TRANSLATE TO PRINTABLE HEX
         LA    R6,20(,R6)              UPDATE POINTER
         ST    R6,NEXTERR              TO ERROR POOL
FIRSTERR OI    COMPFLGS+1,ERR          SET ERROR ROUT SWITCH ON
         LM    R4,R7,PISAVE            RESTORE REGISTERS
TERMERR  MVC   9(3,R1),ERET+1          ADDR OF ERR RTN TO OLD PSW
         OI    COMPFLGS,TERR           INDICATE TERMINATING ERROR
*
         RETURN
*
PISAVE   DC    4F'0'                   REGISTER SAVE AREA
*
ERRERR   MVC   9(3,R1),=AL3(GOTOEND)   SET ADDR IN OLD PSW
*
         RETURN
*
         DROP  R15
GOTOEND  BALR  R15,0
         USING *,R15
*
         XCTL  EP=IEX51002             GOTO TERMINATING PHASE
*
         DROP  R15
*
*        ENTRY OF THE END OF DATA EXIT ROUTINES
*
IEX00ED1 EQU   *
EODAD1   L     R15,EODUT1              SYSUT1
         BR    R15
*
EODAD2   L     R15,EODUT2              SYSUT2
         BR    R15
*
EODAD3   L     R15,EODUT3              SYSUT3
         BR    R15
*
IEX00EDI EQU   *
EODADIN  L     R15,EODIN               SYSIN
         BR    R15
*
*
*        SYNAD ROUTINE (ENTRY POINT FOR SYSPRINT)
*
SYNPR    OI    COMPFLGS+2,PRT          SET SYSPRINT DOWN SWITCH ON
         BALR  R15,0
*
*        SYNAD ROUTINE
*        FOR ALL DATA SETS EXCEPT SYSPRINT
*
         USING *,R15
IEX00SYN EQU   *
SYNAD    LA    R2,0(,R1)               GET DCB ADDR
*
         CLOSE ((R2))
*
         DROP  R15
         BALR  R15,0
         USING *,R15
         L     R3,NEXTERR              STORE ERROR PATTERN
         MVC   0(2,R3),PTTRN210        IN ERROR POOL
         MVC   2(2,R3),SEMCNT
         USING IHADCB,R2
         MVC   4(8,R3),DCBDDNAM
         DROP  R2
         LA    R3,12(,R3)              UPDATE ERROR POINTER
         ST    R3,NEXTERR
         OI    COMPFLGS,TERR           INDICATE TERMINATING ERROR
         TM    COMPFLGS+2,PRT          SYSPRINT NOT AVAIL ?
         BZ    SYNADX                  NO, BRANCH, MUST BE OTHER DCB
         LM    R4,R14,SAVEP            RESTORE REGS FROM PRINT ROUTINE
SYNADX   L     R15,ERET                EXIT TO ERROR ROUTINE
         BR    R15                     IN CURRENT PHASE
*
PTTRN210 DC    AL1(12),AL1(210)
*
         DROP  R15
*
*        PRINTS ONE LINE ON SYSPRINT
*
*        IT ALSO TAKES CARE OF LINE COUNTING, PAGE COUNTING AND
*        PRINTING OF HEADING LINES AT THE TOP OF EACH NEW PAGE
*
*        CALLING SEQUENCE -
*        L     R15,PRTRTADD          ENTRY ADDR IN CWA
*        BALR  R14,R15
*
*        ON RETURN, R1 -> PRINT BUFFER
*
*        GENERAL REGISTERS
*
*        R6       LINE COUNTER
*        R12      SYSPRINT DCB ADDR
*        R14      RETURN ADDR
*
         USING IEX00PRI,R15
IEX00PRI STM   R14,R12,SAVEP+12
         DROP  R15
         LR    R5,R15
         USING IEX00PRI,R5
         L     R12,APRTDCB             R12 -> SYSPRINT DCB
         LH    R6,LINCNT               TEST LINE COUNTER
         CH    R6,MAXLINES
         BNH   PRINTL                  NOT HIGH, NO NEED TO PRINT HEAD
*
*        PRINT HEADINGS
*
         AP    PAGECNT,=P'1'           ADD ONE TO PAGE COUNT
         MVC   PAGENUMB,PAGEPATT       MOVE IN PAGE EDIT PATTERN
         ED    PAGENUMB,PAGECNT+2      FORMAT PAGE NUMBER
*
NOPAGENO PUT   (R12)                   REQUEST QSAM BUFFER
*
         MVC   0(L'PAGEHD1,R1),PAGEHD1 MOVE HEADING LINE 1 INTO BUFFER
*
         PUT   (R12)                   REQUEST QSAM BUFFER
*
         MVC   0(L'PAGEHD2,R1),PAGEHD2  MOVE HEADING LINE 2 INTO BUFFER
*
         PUT   (R12)                   REQUEST QSAM BUFFER
*
         MVC   0(L'PAGEHD3,R1),PAGEHD3  MOVE HEADING LINE 2 INTO BUFFER
         LA    R6,3                    PRINTED 3 LINES
*
PRINTL   PUT   (R12)                   REQUEST QSAM BUFFER
*
         MVI   0(R1),C' '
         MVC   1(120,R1),0(R1)         BLANK BUFFER
         LA    R1,11(,R1)              MAKE A LEFT HAND MARGIN
         LA    R6,1(,R6)               INCR LINE COUNTER
         STH   R6,LINCNT               SAVE UPDATED LINECNT
         LM    R14,R0,SAVEP+12         RESTORE ALL REGS EXCEPT R1
         LM    R2,R12,SAVEP+28
         SR    R15,R15
         BR    R14                     RETURN TO CALLER
*
SAVEP    DC    18F'0'                  REG SAVE AREA
*
PAGEPATT DC    XL4'40202020'           PAGE NUMBER ED PATTERN
*
         LTORG
*
*        PRINT NOGEN
*
*        DATA CONTROL BLOCKS
*
SYSPRINT DCB   DDNAME=SYSPRINT,                                        C
               DSORG=PS,                                               C
               MACRF=(PL),                                             C
               RECFM=FBA,                                              C
               LRECL=121,                                              C
               SYNAD=SYNPR
*
SYSLIN   DCB   DDNAME=SYSLIN,                                          C
               DSORG=PS,                                               C
               MACRF=(PL),                                             C
               RECFM=FB,                                               C
               LRECL=80,                                               C
               SYNAD=SYNAD
*
SYSPUNCH DCB   DDNAME=SYSPUNCH,                                        C
               DSORG=PS,                                               C
               MACRF=(PL),                                             C
               RECFM=FB,                                               C
               LRECL=80,                                               C
               SYNAD=SYNAD
*
SYSUT2   DCB   DDNAME=SYSUT2,                                          C
               DSORG=PS,                                               C
               MACRF=(R,W),                                            C
               RECFM=F,                                                C
               SYNAD=SYNAD,                                            C
               EODAD=EODAD2
*
SYSUT3   DCB   DDNAME=SYSUT3,                                          C
               DSORG=PS,                                               C
               MACRF=(RP,WP),                                          C
               BLKSIZE=2000,                                           C
               RECFM=U,                                                C
               SYNAD=SYNAD,                                            C
               EODAD=EODAD3
*
*
*        PRINT GEN
*
IEX00PRT EQU   SYSPRINT
IEX00LIN EQU   SYSLIN
IEX00PCH EQU   SYSPUNCH
IEX00UT2 EQU   SYSUT2
IEX00UT3 EQU   SYSUT3
*
WORKAREA DSECT
*
         COPY  WORKAREA
*
*        DUMMY CONTROL SECTION TO PROVIDE ADDRESSABILITY OF DCB
*
         PRINT NOGEN
*
         DCBD  DSORG=(PS),DEVD=(DA)
*
         PRINT GEN
*
*        REGISTER AND BIT EQUATES
*
         IEZREGS
*
         IEZBITS
*
         END
