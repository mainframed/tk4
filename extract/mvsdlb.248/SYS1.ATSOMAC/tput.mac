         MACRO
&NAME    TPUT  &BFF,&SIZE,&EDIT,&WAIT,&HOLD,&BRKI,&PRTY,&TJID=,        *
               &TJIDLOC=,&ASID=,&ASIDLOC=,&USERIDL=,&MF=       @G76XRYU
.* A000000-999999                                              @G76XR00
.* A770501,896051,896076,896158,896167,960000                  @OZ43223
.* C896050,896054,896063-896064,896075,896089,896157,896159,   @OZ43223
.* C896166,896168                                              @OZ43223
.* D896058-896062,896083-896087                                @OZ43223
.* C204500,206000-207000,216500,218000-218500,D219000          @OZ44359
.*A167500                                                      @OZ49617
.*C204500,206000,207500,216500,218000,218300                   @OZ48113
.*C008500,167600-167900                                        @OZ56262
.*A175500                                                      @OZ56262
.*C237500-239500,241500                                        @OZ65329
.*D140500                                                      @OZ65329
.*A037500,044500,196500                                        @OZ67665
.*D242399-243599 HI ORDER REG1 NOT CLEARED ON TPUT             @OZ89425
.*
         LCLA  &FLAGON,&FLAGOFF,&FLAGS2,&OPT,&NTJ,&RET,&BFFPOS @OZ56262
         LCLB  &E,&W,&H,&B,&P,&OLDBUFF                         @G76XRYU
         LCLC  &TSID,&TSIDLOC,&PARM,&NDX,&ID                   @G76XRYU
&NDX     SETC  '&SYSNDX'                                       @G76XRYU
         AIF   (N'&SYSLIST LE 7).POSOPOK .IF TOO MANY OPERANDS @G76XRYU
         MNOTE 12,'IHB300 EXCESSIVE POSITIONAL OPERANDS SPECIFIED'
         MEXIT                                                 @G76XRYU
.POSOPOK ANOP                         ..POSITIONAL OPERANDS OK @G76XRYU
         AIF   ('&MF' EQ '').FORMOK     NON-EXTENDED FORM OK   @G76XRYU
         AIF   ('&MF' EQ 'I' OR '&MF' EQ 'L' OR ('&MF(1)' EQ 'E' AND N'*
               &MF EQ 2)).FORMOK     ...FORMAT OPERANDS OK...  @G76XRYU
         MNOTE 12,'IHB303 INVALID OPERAND MF=&MF '             @G76XRYU
         MEXIT                                                 @G76XRYU
.FORMOK  ANOP                                                  @G76XRYU
         AIF   (('&BFF' EQ '' OR '&SIZE' EQ '') AND '&MF' EQ '').ERROR1
         AIF   ('&SIZE' EQ '' AND '&MF' EQ 'I').SIZERR         @G76XRYU
         AIF   ('&BFF' NE '' OR '&MF' NE 'I').BFFEXOK          @G76XRYU
         MNOTE 12,'IHB300 BUFFER ADDRESS NOT SPECIFIED'        @G76XRYU
         MEXIT                                                 @G76XRYU
.BFFEXOK ANOP              ...BUFFER ADDR GIVEN W/ MF=I,E,L    @G76XRYU
&ID      SETC  '0'                                             @G76XRYU
&FLAGOFF SETA  127                   ...SET FOR AND OPERATION  @G76XRYU
&NTJ     SETA  N'&TJID+N'&TJIDLOC+N'&ASID+N'&ASIDLOC+N'&USERIDL
         AIF   (&NTJ GT 1).ERROR2
         AIF   (&NTJ EQ 0).KEEPID    ..IF ANY ID SPECIFIED ..  @G76XRYU
&FLAGOFF SETA  &FLAGOFF-64            ..INSURE USER ID FLAG    @G76XRYU
.*                                      TURNED OFF FOR EX FORM @G76XRYU
.KEEPID  ANOP                        ..ELSE RETAIN PRESENT SET @G76XRYU
&TSID    SETC  '&ASID&TJID'
&TSIDLOC SETC  '&ASIDLOC&TJIDLOC'
         AIF   ('&EDIT' EQ 'R').RF      CHECK FOR R FORM
&PARM    SETC  '&EDIT'
         AIF   ('&USERIDL' EQ '').CKPARM
&OPT     SETA  X'40'                    DENOTE USERID SPECIFIED
&FLAGON  SETA  &FLAGON+64               TO OR USER ID FLAG     @G76XRYU
.CKPARM  ANOP
&RET     SETA  &RET+1
         AIF   ('&PARM' EQ '').RET           NULL, TRY NEXT
         AIF   ('&PARM' EQ 'EDIT').EDI       SET EDIT
         AIF   ('&PARM' EQ 'ASIS').ASI       SET ASIS
         AIF   ('&PARM' EQ 'CONTROL').CON    SET CONTROL
         AIF   ('&PARM' EQ 'FULLSCR').FULLS  SET FULL SCREEN    SA60002
         AIF   ('&PARM' EQ 'NOEDIT').NOED    SET NO EDIT MODE  @G76XRYU
         AIF   ('&PARM' EQ 'WAIT').WAI       SET WAIT
         AIF   ('&PARM' EQ 'NOWAIT').NOW     SET NOWAIT
         AIF   ('&PARM' EQ 'HOLD').HOL       SET HOLD
         AIF   ('&PARM' EQ 'NOHOLD').NOH     SET NOHOLD
         AIF   ('&PARM' EQ 'NOBREAK').NOB    SET NOBREAK
         AIF   ('&PARM' EQ 'BREAKIN').BRE    SET BREAKIN
         AIF   ('&PARM' EQ 'HIGHP').HPR      SET HIGHP
         AIF   ('&PARM' EQ 'LOWP').LPR       SET LOWP
         AGO   .ERROR3
.EDI     ANOP
         AIF   (&E).ERROR2              DUP OPTION
&E       SETB  1                        EDIT OPTION SPECFIED
&FLAGOFF SETA  &FLAGOFF-3               EDIT FOR EXECUTE FORM  @G76XRYU
         AGO   .EDDONE                                         @G76XRYU
.ASI     ANOP
         AIF   (&E).ERROR2              DUP OPTION
         AIF   (&NTJ EQ 1).ASIDER3      CANT CODE ASID+ USERID @OZ67665
&E       SETB  1                        EDIT OPTION SPECFIED
&FLAGOFF SETA  &FLAGOFF-2               1ST BIT OF ASIS FOR EX @G76XRYU
&FLAGON  SETA  &FLAGON+1                2ND BIT OF ASIS FOR EX @G76XRYU
&OPT     SETA  &OPT+1                   SET EDIT=ASIS
         AGO   .EDDONE                                         @G76XRYU
.CON     ANOP
         AIF   (&E).ERROR2              DUP OPTION
&E       SETB  1                        EDIT OPTION SPECFIED
&OPT     SETA  &OPT+2                   SET EDIT=CONTROL
&FLAGOFF SETA  &FLAGOFF-1               1ST BIT OF CNTR FOR EX @G76XRYU
&FLAGON  SETA  &FLAGON+2                2ND BIT OF CNTR FOR EX @G76XRYU
         AGO   .EDDONE                                         @G76XRYU
.FULLS   ANOP                                                   SA60002
         AIF   (&E).ERROR2              DUP OPTION              SA60002
         AIF   (&NTJ EQ 1).ASIDER2      CANT CODE ASID+ USERID @OZ67665
&E       SETB  1                        EDIT OPTION SPECIFIED   SA60002
&OPT     SETA  &OPT+3                   CNTL+ASIS FOR FULLSCR   SA60002
&FLAGON  SETA  &FLAGON+3                SET FULLSCREEN FOR EX  @G76XRYU
         AGO   .EDDONE                                         @G76XRYU
.NOED    ANOP                                                  @G76XRYU
         AIF   (&E).ERROR2              DUP OPTION             @G76XRYU
         AIF   (&NTJ EQ 1).ASIDERR      CAN'T SAY NOEDIT & ASID@OZ43223
&E       SETB  1                                               @G76XRYU
&OPT     SETA  &OPT+3                   FLAGS1 TO FULLSCR STAN @G76XRYU
&FLAGS2  SETA  1                        SET FLAGS2 TO NOEDIT   @G76XRYU
&FLAGON  SETA  &FLAGON+3                FLAGS1 TO FULLSCR EXEC @G76XRYU
.EDDONE  ANOP                      EDIT OPERAND IN RIGHT PLACE @G76XRYU
         AIF   (&RET NE 1).BADPOS  ..IF NOT IN 3RD POS-WARNING @G76XRYU
         AGO   .RET                ..ELSE OK                   @G76XRYU
.WAI     ANOP
         AIF   (&W).ERROR2              DUP OPTION
&W       SETB  1                        WAIT OPTION SPECIFIED
&FLAGOFF SETA  &FLAGOFF-16              SET WAIT OPTION IN EX  @G76XRYU
         AGO   .WAIDONE                 CHECK POSITION         @G76XRYU
.NOW     ANOP
         AIF   (&W).ERROR2              DUP OPTION
&W       SETB  1                        WAIT OPTION SPECIFIED
&OPT     SETA  &OPT+X'10'               SET WAIT=NOWAIT
&FLAGON  SETA  &FLAGON+16               SET FOR NOWAIT IN EXEC @G76XRYU
.WAIDONE ANOP                       ..WAIT IN RIGHT POSITION   @G76XRYU
         AIF   (&RET NE 2).BADPOS   ..IF NOT 4TH, WARNING      @G76XRYU
         AGO   .RET                 ..ELSE OK                  @G76XRYU
.HOL     ANOP
         AIF   (&H).ERROR2              DUP OPTION
&H       SETB  1                        HOLD OPTION SPECIFIED
&OPT     SETA  &OPT+X'08'               SET HOLD=HOLD
&FLAGON  SETA  &FLAGON+8                SET FOR HOLD IN EXEC   @G76XRYU
         AGO   .HOLDONE                 CHECK POSITION         @G76XRYU
.NOH     ANOP
         AIF   (&H).ERROR2              DUP OPTION
&H       SETB  1                        NOHOLD OPTION SPECIFIED
&FLAGOFF SETA  &FLAGOFF-8               SET FOR NOHOLD IN EXEC @G76XRYU
.HOLDONE ANOP                        ..CHECK HOLD POSITION     @G76XRYU
         AIF   (&RET NE 3).BADPOS    ..IF ^ 5TH OPER, WARNING  @G76XRYU
         AGO   .RET                  ..ELSE OK                 @G76XRYU
.BRE     ANOP
         AIF   (&B).ERROR2              DUP OPTION
&B       SETB  1                        BREAK OPTION SPECIFIED
&OPT     SETA  &OPT+X'04'               SET BREAKIN
&FLAGON  SETA  &FLAGON+4                SET BREAKIN IN EXEC    @G76XRYU
         AGO   .BRDONE                  CHECK BREAK POSITION   @G76XRYU
.NOB     ANOP
         AIF   (&B).ERROR2              DUP OPTION
&B       SETB  1                        BREAK OPTION SPECIFIED
&FLAGOFF SETA  &FLAGOFF-4               SET NOBREAK OPTION EX  @G76XRYU
.BRDONE  ANOP                           CHECK BREAK POSITION   @G76XRYU
         AIF   (&RET NE 4).BADPOS    ..IF NOT THE 6TH OPERAND  @G76XRYU
         AGO   .RET                  ..ELSE OK                 @G76XRYU
.HPR     ANOP
         AIF   (&P).ERROR2              DUP OPTION
&P       SETB  1                        PRIORITY OPTION SPECIFIED
&FLAGOFF SETA  &FLAGOFF-32              SET HI PRIO OPTION EX  @G76XRYU
         AGO   .PRDONE                  CHECK POSITION         @G76XRYU
.LPR     ANOP
         AIF   (&P).ERROR2              DUP OPTION
&P       SETB  1                        PRIORITY OPTION SPECIFIED
&OPT     SETA  &OPT+X'20'               SET  LOW PRIORITY OPTION
&FLAGON  SETA  &FLAGON+32               SET LOW PRI OPTION EX  @G76XRYU
.PRDONE  ANOP                     ..CHECK PRIORITY OPERAND POS @G76XRYU
         AIF   (&RET NE 5).BADPOS   ..IF ^7TH OPERAND,WARNING  @G76XRYU
         AGO   .RET                 ..ELSE OK                  @G76XRYU
.BADPOS  ANOP             ..ISSUE WARNING IF OPERAND MISPLACED @G76XRYU
         MNOTE 4,'IHB300 WARNING: &PARM POSITIONAL PARAMETER MISPLACED'
.RET     ANOP
&PARM    SETC  '&WAIT'
         AIF   ('&RET' EQ '1').CKPARM   CHECK WAIT
&PARM    SETC  '&HOLD'
         AIF   ('&RET' EQ '2').CKPARM   CHECK HOLD
&PARM    SETC  '&BRKI'
         AIF   ('&RET' EQ '3').CKPARM   CHECK BRKI
&PARM    SETC  '&PRTY'
         AIF   ('&RET' EQ '4').CKPARM   CHECK PRTY
.*  PARAMETERS PROCESSED                                       @G76XRYU
         AIF   ('&MF' EQ '' AND &FLAGS2 EQ 0).OLD NON-EXTENDED @G76XRYU
         AIF   ('&MF' EQ 'L').LFORM       ...LIST EXPANSION... @G76XRYU
         AIF   ('&MF' EQ 'I' OR '&MF' EQ '').STFORM .ST. FORM. @G76XRYU
.******************                                            @G76XRYU
.*  EXECUTE FORM  *                                            @G76XRYU
.******************                                            @G76XRYU
&NAME    CNOP  0,4                          TPUT EXECUTE FORM  @G76XRYU
         AIF   ('&MF(2)'(1,1) EQ '(').MFREG  IF IN RX FORM  .. @G76XRYU
         LA    1,&MF(2)                     R1=>USER PARM LIST @G76XRYU
         AGO   .GOTPARM                                        @G76XRYU
.MFREG   ANOP                             .. ELSE, IN A REG .. @G76XRYU
         AIF   ('&MF(2)' EQ '(1)').GOTPARM ..IF NOT REG 1..    @G76XRYU
         LR    1,&MF(2)                     POINT R1 AT PARMS  @G76XRYU
.GOTPARM ANOP                                                  @G76XRYU
         AIF   (&FLAGOFF EQ 127).SKIPAND ..TURN OFF ANY FLAGS? @G76XRYU
         NI    4(1),&FLAGOFF                RESET FLAGS 1      @G76XRYU
.SKIPAND ANOP                      ..CHECK FOR FLAGS TURNED ON @G76XRYU
         AIF   (&FLAGON EQ 0).NOSET  ..TURN ON ANY FLAGS?      @G76XRYU
         OI    4(1),&FLAGON                 IN EXEC PARM LIST  @G76XRYU
.NOSET   ANOP                                                  @G76XRYU
         AIF   (&FLAGS2 EQ 0 AND NOT &E).NOFLAG2 ..IF NEW EDIT @G76XRYU
         MVI   12(1),&FLAGS2                RESET FLAGS2       @G76XRYU
.NOFLAG2 ANOP                                                  @G76XRYU
         AGO   .PARMCHK                 ..END UNIQUE E CODE..  @G76XRYU
.****************************                                  @G76XRYU
.*  STANDARD EXTENDED FORM  *                                  @G76XRYU
.****************************                                  @G76XRYU
.STFORM  ANOP                   ..STANDARD EXTENDED FORM CODE. @G76XRYU
&NAME    CNOP  0,4                          STANDARD EXTENDED  @G76XRYU
         AIF   ('&BFF' NE '(1)').NOTOLD  .IF OLD STANDARD FORM @G76XRYU
         STCM  1,B'0111',*+13               OLD SUPPORT ONLY   @G76XRYU
&OLDBUFF SETB  1                         .FLAG OLD BUFF ADDR.. @G76XRYU
.NOTOLD  ANOP                                                  @G76XRYU
         BAL   1,*+20                       BRANCH AROUND PARM @G76XRYU
TPUT&NDX DS    0H                           TPUT EXTENDED PARM @G76XRYU
         DC    H'0'                         ADDR SPACE ID      @G76XRYU
         DC    H'0'                         OUTPUT BUFFER SIZE @G76XRYU
         DC    AL1(&OPT)                    FLAGS 1            @G76XRYU
         DC    AL3(0)                       OUTPUT BUFFER ADDR @G76XRYU
         DC    A(0)                         ADDRESS OF USER ID @G76XRYU
         DC    AL1(&FLAGS2)                 FLAGS 2            @G76XRYU
         DC    AL3(0)                       RESERVED BYTES     @G76XRYU
.************************************************              @G76XRYU
.*  COMMON CODE FOR STANDARD AND EXECUTE FORMS  *              @G76XRYU
.************************************************              @G76XRYU
.PARMCHK ANOP                           ..GET PARMS FOR E & I  @G76XRYU
         AIF   ('&SIZE' EQ '').CKID     ...IF BUFF SIZE GIVEN. @G76XRYU
         AIF   ('&SIZE'(1,1) EQ '(').SIZEREG  ...IF AN INTEGER @G76XRYU
         AIF   (T'&SIZE NE 'N').SIZEQU  IF AN EQUATE           @OZ43223
         AIF   (&SIZE GT 32767).SIZERR          .NOT > 32767.. @G76XRYU
.SIZEQU  ANOP                                                  @OZ43223
         AIF   ('&MF' NE 'I' AND '&MF' NE '').SIZEEX .STANDARD @G76XRYU
         ORG   TPUT&NDX+2                   PUT SIZE VALUE     @G76XRYU
         DC    AL2(&SIZE)                   IN PARM LIST       @OZ43223
         ORG
         AGO   .CKID                                           @G76XRYU
.SIZEEX  ANOP                         ..IF EXECUTE             @G76XRYU
         B     *+6                          BR PAST SIZE VALUE @OZ43223
         DC    AL2(&SIZE)                   BUFSIZE            @OZ43223
         LH    0,*-2                        GET THE SIZE VALUE @G76XRYU
         STH   0,2(1)                       INTO THE PARM LIST @G76XRYU
         AGO   .CKID                                           @G76XRYU
.SIZEREG ANOP                                 ...ELSE A REG .. @G76XRYU
         STH   &SIZE(1),2(1)                PUT SIZE IN PARM   @G76XRYU
.CKID    ANOP                           ... CHECK IDS ...      @G76XRYU
         AIF   (&NTJ EQ 0).CKADDR       ..IF THERE IS AN ID..  @G76XRYU
         AIF   ('&TSID' EQ '').CKIDLOC  ..IF AN ASID # GIVEN.. @G76XRYU
         AIF   ('&TSID'(1,1) EQ '(').ASIDREG  ..IF AN INTEGER. @G76XRYU
         AIF   ((T'&ASID NE 'N' AND T'&TJID EQ 'O') OR (T'&TJID NE 'N' X
               AND T'&ASID EQ 'O')).IDEQU                      @OZ43223
         AIF   (&TSID GT 32767).IDERROR         .NOT > 32767.. @G76XRYU
.IDEQU   ANOP                                                  @OZ43223
         AIF   ('&MF' NE 'I' AND '&MF' NE '').IDEX ..STANDARD  @G76XRYU
         ORG   TPUT&NDX                     PUT ASID VALUE     @G76XRYU
         DC    AL2(&TSID)                   IN PARM LIST       @G76XRYU
         ORG
         AGO   .CKADDR                                         @G76XRYU
.IDEX    ANOP                               IF EXECUTE         @G76XRYU
         B     *+6                          GET AROUND ID #    @G76XRYU
         DC    AL2(&TSID)                   PUT ID # HERE      @OZ43223
         LH    0,*-2                        STORE ASID # IN    @G76XRYU
         STH   0,0(1)                       PARAMETER LIST     @G76XRYU
         AGO   .CKADDR                                         @G76XRYU
.ASIDREG ANOP                           .. ELSE ASID IN A REG. @G76XRYU
         STH   &TSID,0(1)                   STORE REG IN PARM  @G76XRYU
         AGO   .CKADDR                                         @G76XRYU
.CKIDLOC ANOP                           .. ELSE ID AT AN ADDR  @G76XRYU
.*                                            (ASIDLOC)        @G76XRYU
         AIF   ('&TSIDLOC' EQ '').CKUSER ..IF AN ADDRESS GIVEN @G76XRYU
         AIF   ('&TSIDLOC'(1,1) EQ '(').LOCIDRG  ..IF RX ADDR. @G76XRYU
         MVC   0(2,1),&TSIDLOC              MOVE ID INTO PARMS @G76XRYU
         AGO   .CKADDR                                         @G76XRYU
.LOCIDRG ANOP                           .. ELSE ID ADDR IN REG @G76XRYU
         MVC   0(2,1),0&TSIDLOC             MOVE ID INTO PARMS @G76XRYU
         AGO   .CKADDR                                         @G76XRYU
.CKUSER  ANOP                           ..ELSE A USER ID GIVEN @G76XRYU
         AIF   ('&USERIDL'(1,1) EQ '(').USEREG ..IF RX ADDR..  @G76XRYU
         AIF   ('&USERIDL'(K'&USERIDL,1) EQ ')' OR ('&MF' NE 'I' AND '&*
               MF' NE '')).USERX         ..IF STANDARD FORM    @G76XRYU
         ORG   TPUT&NDX+8                   PUT USER ID ADDR   @G76XRYU
         DC    A(&USERIDL)                  IN PARM LIST       @G76XRYU
         ORG
         AGO   .CKADDR                                         @G76XRYU
.USERX   ANOP                         ..IF EXECUTE OR LA ADDR  @G76XRYU
         LA    0,&USERIDL                   GET USER ID ADDR   @G76XRYU
         ST    0,8(1)                       INTO THE PARM LIST @G76XRYU
         AGO   .CKADDR                                         @G76XRYU
.USEREG  ANOP                           ...      ELSE A REG .. @G76XRYU
         ST    &USERIDL(1),8(1)             PUT ID IN PARM     @G76XRYU
.CKADDR  ANOP                           ..GET OUT BUFFER ADDR  @G76XRYU
         AIF   (&OLDBUFF).FINISH        ..IF OLD FORM,COMPLETE @G76XRYU
         AIF   ('&BFF' EQ '').FINISH    ..IF BUFFER ADDR GIVEN @G76XRYU
         AIF   ('&BFF'(1,1) EQ '(').BFFREG  ..IF AN RX ADDR... @G76XRYU
         LA    0,&BFF                       GET ADDR OF BUFFER @G76XRYU
         STCM  0,B'0111',5(1)               PUT IN PARM LIST   @G76XRYU
         AGO   .FINISH                                         @G76XRYU
.BFFREG  ANOP                               ..ELSE IN A REG .. @G76XRYU
         STCM  &BFF(1),B'0111',5(1)         STORE BUFFER ADDR  @G76XRYU
.FINISH  ANOP                                                  @G76XRYU
         OI    12(1),128                    SET HI BIT OF PARM @G76XRYU
         ICM   0,B'1000',*-3                SET HI BIT OF R0   @G76XRYU
.*                                        FROM 128 IN OI INSTR @G76XRYU
.SVCNEW  ANOP                           .. ISSUE SVC HERE ...  @G76XRYU
         SVC   93                           SVC TO MSG ROUTER  @G76XRYU
         MEXIT                                                 @G76XRYU
.**********************                                        @G76XRYU
.*  LIST FORM CODE    *                                        @G76XRYU
.**********************                                        @G76XRYU
.LFORM   ANOP                                                  @G76XRYU
         AIF   ('&TSIDLOC' EQ '').IDLOCOK ..IF L FORM INVALID. @G76XRYU
         MNOTE 12,'IHB300 INCOMPATIBLE OPERANDS: MF=L, ASIDLOC'
         MEXIT                                                 @G76XRYU
.IDLOCOK ANOP                           ..ASIDLOC OPERAND NULL @G76XRYU
&NAME    DS    0F                           L-FORM PARM LIST   @G76XRYU
         AIF   ('&TSID' NE '').LSTID    ..IF NO TSID GIVEN..   @G76XRYU
         DC    H'0'                         ASID HALFWORD      @G76XRYU
         AGO   .LBFFSIZ                                        @G76XRYU
.LSTID   ANOP                           ..ELSE TSID SPECIFIED. @G76XRYU
         AIF   ('&TSID'(1,1) EQ '(').REGERR   ..NOT A REGISTER @G76XRYU
         AIF   ((T'&ASID NE 'N' AND T'&TJID EQ 'O') OR (T'&TJID NE 'N' X
               AND T'&ASID EQ 'O')).IDEQU0                     @OZ43223
         AIF   (&TSID GT 32767).IDERROR         ..NOT > 32767. @G76XRYU
.IDEQU0  ANOP                                                  @OZ43223
         DC    AL2(&TSID)                   ADDR SPACE VALUE   @OZ43223
.LBFFSIZ ANOP                           .. CHECK BUFFER SIZE . @G76XRYU
         AIF   ('&SIZE' NE '').LSTSIZE  .. IF NO BUFFER SIZE . @G76XRYU
         DC    H'0'                         BUFF SIZE HALFWORD @G76XRYU
         AGO   .LBFADDR                                        @G76XRYU
.LSTSIZE ANOP                           .. ELSE A BUFFER SIZE. @G76XRYU
         AIF   ('&SIZE'(1,1) EQ '(').REGERR   .IF NOT IN A REG @G76XRYU
         AIF   (T'&SIZE NE 'N').SIZEQU0 IF AN EQUATE           @OZ43223
         AIF   (&SIZE GT 32767).SIZERR          .NOT > 32767.. @G76XRYU
.SIZEQU0 ANOP                                                  @OZ43223
         DC    AL2(&SIZE)                   BUFFER SIZE VALUE  @OZ43223
.LBFADDR ANOP                           .. CHECK BUFFER ADDR.. @G76XRYU
         DC    AL1(&OPT)                    FLAGS 1            @G76XRYU
         AIF   ('&BFF' NE '').LBFFLAB   ..IF NO BUFFER ADDR..  @G76XRYU
         DC    AL3(0)                       BUFFER ADDRESS     @G76XRYU
         AGO   .LSTUSER                                        @G76XRYU
.LBFFLAB ANOP                           .. ELSE BUFFER ADDRESS @G76XRYU
         AIF   ('&BFF'(1,1) EQ '(').REGERR  ..IF NOT IN A REG  @G76XRYU
&BFFPOS  SETA  2                                               @OZ56262
.LRXCK   ANOP                                                  @OZ56262
         AIF   (&BFFPOS GT K'&BFF).LBFFOK                      @OZ56262
         AIF   ('&BFF'(&BFFPOS,1) EQ '(').RXERR                @OZ56262
&BFFPOS  SETA  &BFFPOS+1                                       @OZ56262
         AGO  .LRXCK                                           @OZ56262
.LBFFOK  ANOP                                                  @OZ56262
         DC    AL3(&BFF)                    ADDR OUTPUT BUFFER @G76XRYU
.LSTUSER ANOP                                                  @G76XRYU
         AIF   ('&USERIDL' NE '').LUSADDR  ..IF NO USER ID ..  @G76XRYU
         DC    A(0)                         USER ID            @G76XRYU
         AGO   .LISTEND                                        @G76XRYU
.LUSADDR ANOP                              ..ELSE USER ID ...  @G76XRYU
         AIF   ('&USERIDL'(1,1) EQ '(').REGERR  ..IF NOT REG . @G76XRYU
         DC    A(&USERIDL)                  USER ID            @G76XRYU
.LISTEND ANOP                               .. GEN FLAGS2 ..   @G76XRYU
         DC    AL1(&FLAGS2)                 FLAGS 2            @G76XRYU
         DC    AL3(0)                       RESERVED           @G76XRYU
         MEXIT                                                 @G76XRYU
.REGERR  ANOP                              ..REGISTER ERROR..  @G76XRYU
         MNOTE 12,'IHB300 INCOMPATIBLE OPERANDS: MF=L, REGISTER OPERANDX
                SPECIFIED'                                     @G76XRYU
         MEXIT                                                 @G76XRYU
.RXERR   ANOP                                                  @OZ56262
         MNOTE 12,'IHB300 INCOMPATIBLE OPERANDS: MF=L, RX FORM OPERAND X
                SPECIFIED'                                     @OZ56262
         MEXIT                                                 @OZ56262
.*********************                                         @G76XRYU
.*   REGISTER FORM   *                                         @G76XRYU
.*********************                                         @G76XRYU
.RF      ANOP
         AIF   ('&MF' EQ '').RFNOMF   ..IF MF OPERAND GIVEN... @G76XRYU
         MNOTE 12,'IHB300 INCOMPATIBLE OPERANDS: R, MF'        @G76XRYU
         MEXIT                                                 @G76XRYU
.RFNOMF  ANOP                         ..IF NOEDIT SPECIFIED... @G76XRYU
         AIF   ('&WAIT' NE 'NOEDIT' AND '&HOLD' NE 'NOEDIT' AND '&BRKI'*
               NE 'NOEDIT' AND '&PRTY' NE 'NOEDIT').RFNOED     @G76XRYU
         MNOTE 12,'IHB300, INCOMPATIBLE OPERANDS: R, NOEDIT'   @G76XRYU
         MEXIT                                                 @G76XRYU
.RFNOED  ANOP                         CHECK REMAINING OPERANDS @G76XRYU
         AIF   ('&WAIT' NE '' OR '&HOLD' NE '' OR '&BRKI' NE '' OR '&PRX
               TY' NE '' OR &NTJ GT 0).RERR
         AIF   ('&BFF'(1,1) NE '(' OR '&SIZE'(1,1) NE '(').RERR
&NAME    DS    0H
         AIF   ('&BFF' EQ '(1)').SIZE
         LR    1,&BFF(1)                LOAD OPTIONS & BUFFER ADDR
.SIZE    AIF   ('&SIZE' EQ '(0)').SVC    ..IF REG 0-ISSUE SVC..
         LR    0,&SIZE(1)               LOAD TJID & BUFFER SIZE
         AGO   .SVC                     ... ISSUE SVC CALL ...
.************                                                  @G76XRYU
.*  MNOTES  *                                                  @G76XRYU
.************                                                  @G76XRYU
.SIZERR  ANOP                      ..SIZE INTEGER NOT 0-32767. @G76XRYU
&PARM    SETC  'SIZE'                ..INDICATE BAD SIZE PARM. @G76XRYU
         AGO   .INTERR                                         @G76XRYU
.IDERROR ANOP                      ..ASID INTEGER NOT 0-32767. @G76XRYU
&PARM    SETC  'ASID'                ..INDICATE BAD ASID PARM. @G76XRYU
.INTERR  MNOTE 12,'IHB300 &PARM NOT IN RANGE 0-32767'          @G76XRYU
         MEXIT                                                 @G76XRYU
.RERR    IHBERMAC 192
         MEXIT
.ERROR1  IHBERMAC 24
         MEXIT
.ERROR2  IHBERMAC 54,,,
         MEXIT
.ERROR3  IHBERMAC 49,,&PARM
         MEXIT                                                 @OZ43223
.ASIDERR MNOTE 12,'IHB300 ASID/USERID INVALID WITH NOEDIT'     @OZ43223
         MEXIT                                                 @OZ43223
.ASIDER2 MNOTE 12,'IHB300 ASID/USERID INVALID WITH FULLSCR'    @OZ67665
         MEXIT                                                 @OZ67665
.ASIDER3 MNOTE 12,'IHB300 ASID/USERID INVALID WITH ASIS'       @OZ67665
         MEXIT                                                 @OZ67665
.***********************                                       @G76XRYU
.*  NON-EXTENDED FORM  *                                       @G76XRYU
.***********************                                       @G76XRYU
.OLD     ANOP            ....NON EXTENDED TPUT EXPANSION       @G76XRYU
         AIF   ('&BFF'(1,1) EQ '(' OR '&SIZE'(1,1) EQ '(').REGFM  REG.
.*                                      FORM MACRO
         AIF   ('&TSID' EQ '').CHKLOC   GOTO CHECK TSIDLOC
         AIF   ('&TSID'(1,1) EQ '(').REGFM   REG. FORM MACRO
&ID      SETC  '&TSID'                  SET TSID
         AGO   .EXPAND                  GOTO EXPANSION
.CHKLOC  AIF   ('&TSIDLOC' EQ '').EXPAND  GO EXPAND IF NO 'TSIDLOC'
         AIF   ('&TSIDLOC'(1,1) EQ '(').REGFM  REG. FORM MACRO
.*   REGULAR FORMAT OF MACRO
.EXPAND  CNOP  0,4
         AIF   ('&TSIDLOC' NE '').LOC   TJLOC SPECIFIED
&NAME    B     *+10                    BRANCH AROUND CONSTANTS @OZ48113
         DC    AL2(&ID)                 TSID
         DC    AL2(&SIZE)               BUFFER SIZE
         DC    AL1(&OPT,0)             OPTION BYTE AND FILLER  @OZ48113
         L     0,*-6                    LOAD SIZE              @OZ48113
         LA    1,&BFF                   LOAD BUFFER ADDRESS    @OZ48113
         ICM   1,8,*-10                 LOAD OPTION BYTE       @OZ48113
.SVC     ANOP
         AIF   ('&USERIDL' EQ '').GENSVC
         AIF   ('&USERIDL'(1,1) EQ '(').LR
         LA    15,&USERIDL
         AGO   .GENSVC
.LR      ANOP
         AIF   ('&USERIDL' EQ '(15)').GENSVC
         LR    15,&USERIDL(1)
.GENSVC  ANOP
         SVC   93                       ISSUE TGET/TPUT SVC
         SPACE 1
         MEXIT
.*   TSIDLOC IS SPECIFIED
.LOC     ANOP
&NAME    ICM   0,B'0011',&TSIDLOC       TSID IN HIGH 2 BYTES   @G76XRYU
         SLL   0,16                     SHIFT TJID TO HI-ORDER BYTES
         AIF   (&OPT EQ 0).ZERO         BRANCH IF OPTIONS ARE ZERO
         O     0,*+8                    LOAD BUFFER SIZE
         B     *+10                    BRANCH AROUND CONSTANTS @OZ48113
         DC    AL2(0)                   TJID
         DC    AL2(&SIZE)               BUFFER SIZE
         DC    AL1(&OPT,0)             OPTION BYTE AND FILLER  @OZ48113
         LA    1,&BFF                   LOAD BUFFER ADDRESS    @OZ48113
         ICM   1,8,*-6                  LOAD OPTION BYTE       @OZ48113
         AGO   .SVC                     GOTO ISSUE SVC
.ZERO    LA    1,&SIZE                  LOAD BUFFER SIZE
         OR    0,1                      OR IT INTO REGISTER 0
         LA    1,&BFF                   Z HIGH ORDR BYTE & LD BFR ADDR
         AGO   .SVC                     GOTO ISSUE SVC
.*   REGISTER FORMAT
.REGFM   AIF   ('&TSIDLOC' EQ '').NOLOC   SKIP IF TJIDLOC NOT SPECIFIED
         AIF   ('&TSIDLOC'(1,1) EQ '(').REGLOC    LOC IN REG  FORM
&NAME    ICM   15,B'0011',&TSIDLOC      TSID IN HIGH 2 BYTES   @G76XRYU
         SLL   15,16                    MOVE TJID TO HI=ORDER 2 BYTES
         AGO   .CHKSIZE                 GOTO CHECK SIZE
.REGLOC  ANOP
&NAME    ICM   15,B'0011',0&TSIDLOC     TSID IN HIGH 2 BYTES   @G76XRYU
         SLL   15,16                    MOVE TJID TO HI-ORDER 2 BYTES
         AGO   .CHKSIZE                 GOTO CHECK SIZE
.*   WHEN TJIDLOC IS NOT SPECIFIED
.NOLOC   AIF   ('&TSID' NE '').TJIDYES
&NAME    DS    0H                       TJID IS '0'
         AGO   .CHKSIZE                 GOTO CHECK SIZE
.TJIDYES AIF   ('&TSID'(1,1) EQ '(').IDREG   TJID IN REG FORM
&NAME    LA    15,&TSID                 LOAD TJID
         AGO   .SHIFT                   GOTO SHIFT REG.0
.IDREG   ANOP
&NAME    LR    15,&TSID                 LOAD TJID IN REG 15
.SHIFT   SLL   15,16                    SHIFT TJID TO HI-ORDER BYTE
.*  CHECK SIZE OF BUFFER (BY NOW TJID IS IN HI-ORDER 2 BYTES OF REG 15)
.CHKSIZE AIF   ('&SIZE'(1,1) EQ '(').SZREG   SKIP IF SIZE IN REG
         LA    0,&SIZE                  LOAD SIZE IN REG.0
         AGO   .ORSIZE                  GOTO OR SIZE
.SZREG   AIF   ('&SIZE' EQ '(0)').ORSIZE  GOTO SET SIZE IN REG. 0
         LR    0,&SIZE(1)               LOAD BUFFER SIZE
.ORSIZE  AIF   ('&TSID' EQ '' AND '&TSIDLOC' EQ '').PAST
         OR    0,15                     LOAD TJID + BUFFER SIZE
.PAST    AIF   (&OPT EQ 0 AND '&BFF'(1,1) EQ '(').ORONE
         AIF   (&OPT EQ 0 AND '&BFF'(1,1) NE '(').ZOPT ZERO OPTN
         CNOP  0,4
         AIF   ('&BFF'(1,1) EQ '(').REGGO   BFFR IN REG.       @OZ65329
         CNOP  0,4                                             @OZ65329
         B     *+6                                             @OZ65329
         DC    AL1(&OPT,0)              OPTION BITS AND PAD    @OZ65329
         LA    1,&BFF                   LOAD POINTER TO BUFFER @OZ65329
         ICM   1,8,*-6                  GET OPTION BYTE        @OZ65329
         AGO   .SVC                     GOTO ISSUE SVC
.ZOPT    LA    1,&BFF                   LOAD BUFFER ADDR IN REG 1
         AGO   .SVC                     ISSUE SVC
.REGGO   CNOP  0,4                                             @OZ65329
         B     *+8                                             @OZ65329
         DC    AL1(&OPT)                OPTION BITS            @OZ65329
         DC    AL3(0)                   BUFFER ADDR            @OZ65329
.ORONE   LA    1,0(,&BFF(1))            CLR HIGH ORDR BYTE + LD BFR ADR
         AIF   (&OPT EQ 0).SVC          GOTO ISSUE SVC IF OPT EQ 0
         O     1,*-8                    SET OPTIONS
         AGO   .SVC
         MEND
