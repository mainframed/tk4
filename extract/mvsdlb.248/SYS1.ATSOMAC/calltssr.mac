*% CALLTSSR: MACRO
*            KEYS(EP,                  /* EP(A NAME) ENTRY PT NAME   */
*                 MF);                 /* MF(E,ANOTHER NAME) R1 POINTS
*                                           TO 'ANOTHER NAME'        */
*/* CHANGE ACTIVITY --                                               */
*/*     OZ15767 - CALLTSSR IGNORES LABEL IF SPECIFIED                */
*
*  DECLARE
*    THENAME CHAR,                     /* EPNAME(4:8)                */
*    ERROR CHAR,                       /* ERROR TEXT                 */
*    TITLE CHAR,                       /* THE MACRO CALL             */
*    EHAREGS CHAR EXTERNAL;            /* HOLDS REG NAME FOR ? EPILOG*/
*
*        IF INDEX(EHAREGS,'00P') = 0   /* REG ZERO NOT USED YET      */
*          THEN                        /*   TRUE                     */
*            EHAREGS = EHAREGS ×× '00P'; /*     THEN REQ REG 0       */
*
*        IF INDEX(EHAREGS,'01P') = 0   /* REG ONE NOT USED YET       */
*          THEN                        /*   TRUE                     */
*            EHAREGS = EHAREGS ×× '01P'; /*     THEN REQ REG 1       */
*
*        IF INDEX(EHAREGS,'14P') = 0   /* REG 14 NOT USED YET        */
*          THEN                        /*   TRUE                     */
*            EHAREGS = EHAREGS ×× '14P'; /*     THEN REQ REG 14      */
*
*        IF INDEX(EHAREGS,'15P') = 0   /* REG 15 NOT USED YET        */
*          THEN                        /*   TRUE                     */
*            EHAREGS = EHAREGS ×× '15P'; /*     THEN REQ REG 15      */
*
*        IF INDEX(EHAREGS,'02P') = 0   /* REG 2 NOT USED YET         */
*          THEN                        /*   TRUE                     */
*            EHAREGS = EHAREGS ×× '02P'; /*     REQ REG 2            */
*
*        IF INDEX(EHAREGS,'03P') = 0   /* REG 3 NOT USED YET         */
*          THEN                        /*   TRUE                     */
*            EHAREGS = EHAREGS ×× '03P'; /*     REQ REG 3            */
*
*        IF INDEX(EHAREGS,'04P') = 0   /* REG 4 NOT USED YET         */
*          THEN                        /*   TRUE                     */
*            EHAREGS = EHAREGS ×× '04P'; /*     REQ REG 4            */
*
*        IF INDEX(EHAREGS,'05P') = 0   /* REG 5 NOT USED YET         */
*          THEN                        /*   TRUE                     */
*            EHAREGS = EHAREGS ×× '05P'; /*     REQ REG 5            */
*
*        IF INDEX(EHAREGS,'06P') = 0   /* REG 6 NOT USED YET         */
*          THEN                        /*   TRUE                     */
*            EHAREGS = EHAREGS ×× '06P'; /*     REQ REG 6            */
*
*        IF INDEX(EHAREGS,'07P') = 0   /* REG 7 NOT USED YET         */
*          THEN                        /*   TRUE                     */
*            EHAREGS = EHAREGS ×× '07P'; /*     REQ REG 7            */
*
*        IF INDEX(EHAREGS,'08P') = 0   /* REG 8 NOT USED YET         */
*          THEN                        /*   TRUE                     */
*            EHAREGS = EHAREGS ×× '08P'; /*     REQ REG 8            */
*
*        IF INDEX(EHAREGS,'09P') = 0   /* REG 9 NOT USED YET         */
*          THEN                        /*   TRUE                     */
*            EHAREGS = EHAREGS ×× '09P'; /*     REQ REG 9            */
*
*        THENAME = EP(1,4:LENGTH(EP(1)));  /* EPNAME(4:8)            */
*        TITLE = MACNAME ×× ' ' ×× MACKEYS; /* THE MACRO CALL        */
*
*        IF MF(1) ^= ''                /* MF IS SUPPLIED             */
*          THEN                        /*   YES IT IS SUPPLIED       */
*            DO;
*              IF MF(1) ^= 'E'         /* FIRST OPERAND NOT 'E'      */
*                THEN                  /*   TRUE                     */
*                  DO;
*                    ERROR = 'FIRST OPERAND OF MF NOT ''E'' ' ×× TITLE;
*                    ERROR = COMMENT(ERROR);
*                    GO TO SENDERR;
*                  END;
*            END;
*
*        IF MACLABEL ^= ''             /* LABEL SPECIFIED    @ZA15767*/
*           THEN                       /* TRUE               @ZA15767*/
*             ANS(MACLABEL) COL(2);    /* PUT LABEL IN COL 2 @ZA15767*/
*
*        ANS('DO; ' ×× COMMENT(TITLE))
*           COL(MACCOL);
*        ANS('RESPECIFY GPR01P RSTD;') COL(MACCOL+2) SKIP(1);
*
*        IF MF = ''                    /* MF NOT SUPPLIED            */
*          THEN                        /*   TRUE                     */
*            GO TO ENDMF;              /* BYPASS MF PROCESSING       */
*
*        ANS('GPR01P = ADDR(' ×× MF(2) ×× ');')
*           COL(MACCOL+2);
*
*  ENDMF:
*        ANS('IF CVT' ×× THENAME ×× ' = 0')
*           COL(MACCOL+2);
*        ANS('THEN')
*           COL(MACCOL+4);
*        ANS('GEN(LINK EP=' ×× EP(1) ×× ');')
*           COL(MACCOL+6);
*
*        ANS('ELSE')
*           COL(MACCOL+4);
*        ANS('CALL CVT' ×× THENAME ×× ';')
*           COL(MACCOL+6);
*        ANS('RESPECIFY GPR01P UNRSTD;') COL(MACCOL+2);
*        ANS('END;')
*           COL(MACCOL);
*
*        RETURN;
*
* SENDERR:
*        ANS(ERROR) COL(2) SKIP(2);
*        RETURN CODE(12);
*
*% END CALLTSSR;
*/*
         MACRO
&NAME    CALLTSSR  &EP=,&MF=
         LCLC  &THENAME,&TSR,&AREG
         LCLA  &THELEN
&THELEN  SETA  K'&EP
&THENAME SETC  '&EP'(4,&THELEN)
&TSR     SETC  'CVT'
&TSR     SETC  '&TSR'.'&THENAME'
*
         AIF   (T'&NAME EQ 'O').NOLAB                         @ZA15767
&NAME    DS    0H                                             @ZA15767
.NOLAB   ANOP                                                 @ZA15767
         AIF   (T'&MF EQ 'O').ENDMF
         AIF   ('&MF(1)' NE 'E').NOMFE
         AIF   ('&MF(2)' EQ '(1)').ENDMF
         AIF   ('&MF(2)'(1,1) EQ '(').AREG
         LA    1,&MF(2) *              ADDRESS OF PARM LIST
         AGO   .ENDMF
.AREG    ANOP
&AREG    SETC  '&MF(2)'(2,K'&MF(2)-2)
         LR    1,&AREG *            ADDRESS OF PARM LIST
.ENDMF   ANOP
*
         L     15,CVTPTR *             GET ADDRESS OF CVT
         USING CVTMAP,15 *             SET ADDRESSABILITY TO CVT
*
         TM    &TSR,X'80'   *        IF HIGH ORDER BIT IS NOT ONE
         BNO   TSRL&SYSNDX *           THEN DO LINK, NOT CALL
*
         L     15,&TSR *           GET ADDR OF ROUTINE
         BALR  14,15 *                 BRANCH TO ROUTINE
         B     TSRE&SYSNDX *           SKIP AROUND LINK
*
TSRL&SYSNDX EQU   *
         LINK  EP=&EP
*
TSRE&SYSNDX EQU   *
         DROP  15
         MEXIT
.NOMFE   MNOTE 12,'''E'' NOT FIRST OPERAND OF MF KEYWORD'
         MEND
**/
