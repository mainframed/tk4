*       %GOTO TMPWABSL;
* TO EXCLUDE THE MAPPING OF TMPWRKA1 FROM THE PROGRAM    @ZA74883*/
* SPECIFY THE FOLLOWING OPERAND WHEN INVOKING THE MAPPING@ZA74883*/
*        1)WORKA1=NO                                     @ZA74883*/
*     STATUS = EBB1102                                      @ZA74883*/
****                                                        @ZA74883*/
****   CHANGE ACTIVITY =                                            */
****    A 0-999999                               @ZA40795 & @ZA40796*/
****           - ADD TSEVENT ISSUED FLAG                    @ZA65692*/
****           - SUPPORT FOR NEW TMP TASK STRUCTURE         @ZA74883*/
****           - MOVE FOLLOWING LINE OF CODE (REGARDING WAT05)      */
****             FROM BETWEEN MACRO STATEMENT AND IKJTMPWA NAME     */
****             STATEMENT TO ENABLE MACRO TO EXPAND WITH           */
****             ASSEMBLER F                                @ZA74883*/
****    OZ89255 - ADD SKPATTN TO INDICATE WHEN T03 CAN PROCESS      */
****              ATTN.                                     @ZA89255*/
****
* TAKE OUT CODE INDICATING WAT05 IS THE MACRO NAME FOR ASSEM @ZA74883*/
****                                                                */
****    OZ92185 - MOVE THE ECBS TO BE WAITED ON WHEN IKJEFT09 IS    */
****              ATTACHED FOR TEST AND ADD ATTENTION ECB.          */
****              ADD TMP2TSCA SET BY IKJEFTSC. TMP2TSCA IS CHECKED */
****              AND RESET BY IKJEFT02, IT MEANS IKJATTN GOT       */
****              CONTROL TO HANDLE THE ATTENTION. DEFINE AN ECB    */
****              FOR IKJEFTSC ATTENTION EXIT (IKJATTN) TO WAIT     */
****              ON WHILE IKJEFT03 PROCESSES AN ATTENTION. @ZA92185*/
****    OY06065 - DEFINED TMP2SYN2 SET AND RESET BY IKJEFT02        */
****              CHECKED BY IKJEFT03 INDICATES TGETCDX ROUTINE     */
****              IN IKJEFT02 SYNCHED TO IKJEFT03           @YA06065*/
.* A 0-999999                                      @ZA40795 & @ZA40796
          MACRO
          IKJTMPWA &WORKA1=YES
          AIF   ('&WORKA1' EQ 'NO').WORKA2
*********************************************************************/
**** TMPWRKA1 -- TMP PROBLEM PROGRAM STATE DYNAMIC WORK AREA        */
****                                                                */
****   THIS DYNAMIC WORK AREA IS GOTTEN FROM SUBPOOL 1, PP KEY, BY  */
****   IKJEFT01  DURING  TMP INITIALIZATION AND ANOTHER ONE         */
****   WILL BE GOTTEN IN IKJEFTSC IF A PARALLEL TMP IS NEEDED AND   */
****   THIS WORKAREA WILL BE FREED WHEN THE PARALLEL TMP IS FINISHED*/
****   WHILE THE ONE GOTTEN FOR THE NON-PARALLEL SIDE BY IKJEFT01   */
****   WILL NOT BE FREED UNTIL THE END OF THE TERMINAL SESSION.     */
****   DURING THE TMP SEVERITY 2 STAE RETRY ALL OF STORAGE IS FREED */
****   AND THIS WORKAREA MUST BE REINITIALIZED.                     */
****                                                       @ZA74883 */
*********************************************************************/
         IKJTPL
TMPWRKA1 EQU  TPL    WORK AREA BEGINS WITH TEST PARAMETER LIST
*     /* TMP COMMON VARIABLES AND WORK AREAS                        */
TMPNECB  DS    F                     /* ECB FOR STAI WAIT           */
TMPCECB  DS    F                     /* ECB FOR ATTACHED CP         */
TMPIECB  DS    F                     /* ECB FOR STAI POST           */
TMPAECB  DS    F                     /* ECB FOR ATTN POST           */
TMPCMDWT DS    F                     /* PTR TO CMD FROM ATTN EXIT   */
*
TMPSWS   DS    F                     /* TMP INTERNAL SWITCHES       */
TMPTEST  EQU   X'80'                 /* TEST PROGRAM IN CONTROL     */
TMPCMDW  EQU   X'40'                 /* COMMAND WAITING             */
TMPNFCMD EQU   X'20'                 /* FIRST COMMAND IS PROCESSED  */
TMPACTRL EQU   X'10'                 /* TMP ATTN EXIT IS IN CONTROL */
TMPSCTRL EQU   X'08'                 /* TMP STAI EXIT IS IN CONTROL */
ABND806  EQU   X'04'                 /* NO-MODULE FOUND BY FETCH    */
FRSTLAB  EQU   X'02'                 /* 1ST LEVEL ATTACHEE ABENDED  */
NONSCUR  EQU   X'01'                /* SECURITY AUTHORIZATION FAILS */
*
ATCHNOW  EQU   X'80'                 /* ABEND OCCURRED IN ATTACH    */
LOADNOW  EQU   X'40'                 /* ABEND OCCURRED IN LOAD      */
LINKNOW  EQU   X'20'                 /* ABEND OCCURRED IN LINK      */
FRSTEX   EQU   X'10'                /* FIRST EXPL/IMPLICIT EXEC TRY */
CALLNOW  EQU   X'08'                 /* CALL FUNCTION ACTIVE        */
TMP1TIME EQU   X'04'                 /* ESTAI ENTERED(TEST) @ZTM5046*/
T7TDONE  EQU   X'02'                 /* TSEVENT ISSUED     @ZA65692 */
SKPATTN  EQU   X'01'                 /* 1-BYPASS ATTENTION  @ZA89255*/
CALLSWS  EQU   TMPSWS+3              /* TMP-CALL INTERNAL SWITCHES  */
PDLPRES  EQU   X'80'                 /* PDL RETURNED BY PARSE       */
DSOPEN   EQU   X'40'                 /* DATA SET IS OPEN            */
*        EQU   X'20'                 /* RESERVED FLAG               */
BLANKB   EQU   X'10'                 /* DATA SET NAME PROCESSED     */
DORELS   EQU   X'08'                 /* RELEASE PDL NOW             */
GMBRNOW  EQU   X'04'                 /* GET MEMBER NAME             */
*        EQU   X'03'                 /* RESERVED FLAGS              */
*     /* RESERVED AREAS                                             */
RESCOMM  DS     CL16
RESCOM2  DS     CL16
RESCOM3  DS     CL16
RESCOM4  DS     CL16
         DS     CL4                /* RESERVED WAS FLOFLGS  @ZA46174*/
CPPLPTR  DS     F                    /* PTR TO CP PARM LIST         */
CSOAPTR  DS     F                    /* PTR TO CMD SCAN PARM LIST   */
CSPLPTR  DS     F                    /* PTR TO CMD SCAN PARM LIST   */
DAPLPTR  DS     F                    /* PTR TO DAIR PARM LIST       */
GTPBPTR  DS     F                    /* PTR TO GETLINE PARM BLOCK   */
IOPLPTR  DS     F                    /* PTR TO I/O RTNS PARM LIST   */
PGPBPTR  DS     F                    /* PTR TO PUTGET PARM BLOCK    */
PPLPTR   DS     F                    /* PTR TO PARSE PARM LIST      */
PTPBPTR  DS     F                    /* PTR TO PUTLINE PARM BLOCK   */
STPLPTR  DS     F                    /* PTR TO STACK PARM LIST      */
ACEEPTR  DS     F                    /* ADDR OF ACEE                */
ASCANAP  DS     F                    /* ADDR OF ATTN SCAN ANSWER    */
ASRPLPTR DS     F                    /* ADDR OF ATTN SRPL           */
ATTCHPTR DS     F                    /* ADDR OF ATTACH PARM LIST    */
CDCBPTR  DS     F                    /* PTR TO CALL DCB             */
DCBPTR   DS     F                    /* PTR TO DCB                  */
DYNAPPTR DS     F                    /* PTR TO DYNALLOC PARM LIST   */
EBCDPTR  DS     F                    /* PTR TO TRANSLATE TABLE      */
READYPTR DS     F                    /* ADDR OF TMP MODE MESSAGE    */
SCANAP   DS     F                    /* ADDR OF SCAN ANSWER AREA    */
SRPLPTR  DS     F                    /* ADDR OF SRPL                */
STAXPPTR DS     F                    /* ADDR OF STAX PARM LIST      */
STPBPTR  DS     F                    /* ADDR OF STACK PARM LIST     */
*     /* RESERVE SPACE FOR PARAMETER LISTS, BLOCKS                  */
         DS     0D                   /* ALIGN TO DOUBLEWORD         */
ABMSGSP  DS     CL38                  /* MESSAGE AREA               */
*     /* PUTLINE ACTIVE SEGMENT LIST    LIST                        */
ACTSL    DS     0F                   /* NAME OF LIST                */
ACTSEG   DS     28F                  /* SEGMENTS                    */
ACTSEGA  EQU    ACTSEG               /* FIRST HWORD OF SEGMENT      */
ACTSEGB  EQU    ACTSEG+2             /* SECOND HWORD OF SEGMENT     */
AMSGLIST DS     0F                   /* ATTN MESSAGE LIST           */
ANUMSEG  DS     F                    /* NUMBER OF MESSAGE SEGMENTS  */
AMSGSEG  DS     2F                   /* ARRAY OF SEGMENT PTRS       */
ARCODE   DS     F                    /* ATTN RETURN CODE SAVE AREA  */
ASCANFLG DS     F                    /* ATTN SCAN FLAGS             */
ASRPARM  DS     5F                   /* ATTN SR PARM AREA           */
ATTCHSP  DS     15F                  /* ATTACH PARAMERTER LIST SP   */
BLDLLST  DS     0CL68                /* BLDL ENTRY                  */
XTRCLST  DS     0CL12                /* EXTRACT LIST                */
BLDLENT  DS     H                    /* NUM OF ENTRIES              */
BLDLELNG DS     H                    /* LENGTH OF ENTRY             */
BLDLNAME DS     CL8                  /* NAME OF COMMAND             */
BLDLTTRZ DS     CL56                 /* PAD TO FULL WORD    @ZA40795*/
         DS     0D                   /* ALIGN TO DWORD              */
CDCBSP   DS     CL140                /* CALL DCB SPACE              */
CLOSESP  DS     CL12                 /* CLOSE PL SPACE              */
CPPLSP   DS     4F                   /* CPPL SPACE                  */
CSOASP   DS     2F                   /* CSOA SPACE                  */
CSOASP2  DS     2F                   /* 2ND CSOA SP (ATTN)          */
CSPLSP   DS     6F                   /* CSPL SPACE                  */
CSPLSP2  DS     6F                   /* 2ND CSPL SP (ATTN)          */
CTLBKSP  DS     0F                   /* NAME OF BLOCK SPACE         */
CTLBLKL  DS     F                    /* LENGTH OF BLOCK SPACE       */
CTLBLKA  DS     F                    /* LOC OF BLOCK SPACE          */
CTLBLKN  DS     F                    /* SUBPOOL                     */
DAPBSP   DS     21F                  /* DAIR PARM BLK SPACE         */
DAPLSP   DS     5F                   /* DAIR PARM LIST SPACE        */
         DS     0D                   /* ALIGN TO DOUBLEWORD         */
DCBSP    DS     CL140                /* DCB SPACE                   */
DYNASP   DS     8F                   /* DYNALLOC PARM LIST SPACE    */
ECTSP    DS     14F                  /* ECT SPACE                   */
FMLCSP   DS     CL10                 /* FREEM PL SPACE              */
GTPBSP   DS     2F                   /* GTPB SPACE                  */
MODESSP  DS     F                    /* MODESET PARM LIST SPACE     */
NXTCMD   DS     2F                   /* COMMAND NAME FIELD          */
OPENSP   DS     3F                   /* OPEN PL SPACE               */
PGPBSP   DS     4F                   /* PGPB SPACE                  */
PPLSP    DS     7F                   /* PARSE PARM LIST SPACE       */
PRSMSSP  DS     3F                   /* MESSAGE AREA                */
PTPBSP   DS     3F                   /* PTPB SPACE                  */
RCODE    DS     F                    /* RETURN CODE SAVE AREA       */
R3SAVE   DS     F                    /* SAVE PDL PTR                */
SAVAR    DS     14F                  /* SAVE REGISTER ENVIRONMENT   */
SCANFLG  DS     F                    /* SCAN FLAGS                  */
SNAPSP   DS     10F                  /* SNAP PL SPACE               */
STPBSP   DS     4F                   /* STPB SPACE                  */
STPLSP   DS     5F                   /* STACK PL SPACE              */
TMPZEROS DS     F                    /* ALL ZEROS WORD - DUMMY CBUF */
MODEMSP  DS     5F                  /* DUMMY SPACE FOR MODE MESSAGE */
         DS     CL20                 /* RESERVED                    */
*     /* WORK AREA FOR TMP-CALL FUNCTION                            */
CALLWA   DS     0F
*       /* PROBLEM PROGRAM WORK AREA FOR CALL FUNCTION              */
PPWORKAR DS     0F
PPLIST   DS     0F
SWBIT    DS     C
         DS     CL3
PARMFLD  DS     0F
LENPARM  DS     H
PARMS    DS     CL100
*       /* CALL INTERNAL WORK AREA                                  */
WORK1    DS     0F
PARSPARM DS     0F                   /* PARSE PARMS                 */
PDLADDR  DS     F                   /* PTR TO PARM DESCRIPTOR LIST  */
PDLADDR2 DS     F
DSNBUFFR DS     0H
DSNLENG  DS     H                    /* LENGTH OF DATA SET NAME     */
DSNBUF   DS     CL44                 /* DSNAME                      */
         DS     CL2                  /* ALIGNMENT                   */
MSGNO    DS     F                    /* MESSAGE NUMBER              */
DAPB0PTR DS     F
*       /* MEMBER NAME SEGMENT FOR MESSAGE                          */
MBRSEG   DS     0F                   /* NAME OF AREA                */
MBRSLEN  DS     H                    /* SEGMENT LENGTH              */
MBRSOFF  DS     H                    /* SEGMENT OFFSET              */
MBRSTXT  DS     CL8                  /* MEMBER NAME TEXT            */
*       /* MEMBER NAME SEGMENT FOR DAIR                             */
MBRDSEG  DS     0F                   /*   NAME OF AREA              */
MBRDLEN  DS     H                    /* SEGMENT LENGTH              */
MBRDTXT  DS     CL8                  /* NAME TEXT                   */
*       /* DATA SET NAME SEGMENT FOR MESSAGE                        */
DSSEG    DS     0F                   /* NAME OF AREA                */
DSSGLEN  DS     H                    /* SEGMENT LENGTH              */
DSSGOFF  DS     H                    /* SEGMENT OFFSET              */
DSSGTXT  DS     CL44                 /* DATA SET NAME TEXT          */
*       /* RETURN CODE RESERVE AREAS                                */
BLDLRC   DS     F              /* FOR BLDL RETURN CODE              */
DAIRRC   DS     F              /* FOR DAIR RETURN CODE              */
PUTLRC   DS     F              /* FOR PUTLINE RETURN CODE           */
CRCODE   DS     F              /* FOR GENERAL CALL RETURN CODE      */
*
*     /*  TMP RESTRUCTURE WORK AREAS                       @ZA40795 */
TMPCTCB  DS     A              /* PTR TO ATTACH CP TCB     @ZA40795 */
TMPTECB  DS     F              /* TEST RETURNED ECB        @ZA40795 */
TMPECB2  DS     F              /* IKJEFTXX EOT ECB         @ZA40795 */
CPABECB  DS     F              /* TEST RQST AFTER ABEND    @ZA40795 */
ECBLPTR  DS     A              /* PTR ECB WAIT LISTS       @ZA40795 */
TMPECBL2 DS     0F             /*                          @ZA40795 */
TMPCECB2 DS     A              /* PTR TO ATTACH CP ECB     @ZA40795 */
TMPIECB2 DS     A              /* PTR TO TMP STAI ECB      @ZA40795 */
TMPAECB2 DS     A              /* PTR TO TMP ATTN ECB      @ZA40795 */
*     /* TMP NEW TASK STRUCTURE                            @ZA74883 */
TMPECBAT DS     A              /* ATTN ECB                 @ZA92185*/
TMPSCECB DS     F              /* IKJEFTSC ATTENTION ECB   @ZA92185*/
TMPSWAIT EQU   X'80'           /* TESTED BY IKJEFT03 AND
*                                 IKJEFT05                 @ZA92185*/
TMP1ECB2 DS     F              /* T02 ATTACH ECB           @ZA74883 */
         DS    F               /* RESERVED                 @ZA74883*/
TMPR15RC DS    F               /* R15 RC FROM CP           @ZA74883*/
TMP1RSNC DS    F              /* REASON CODE WHEN CP ABEND @ZA74883*/
TMP1ABNC DS    F              /* ABEND CODE WHEN CP ABEND  @ZA74883*/
TMP1NAME DS    CL8            /* NAME OF TMPWRKA1          @ZA74883*/
TMP1LEV  DS    CL4            /* LEVEL OF TMPWRKA1         @ZA74883*/
TMPECBL3 DS     0F             /*                          @ZA92185*/
TMPTECB3 DS     A              /* PTR TO TEST COMPLETE EC  @ZA92185*/
TMPCECB3 DS     A              /* PTR TO ATTACH CP ECB     @ZA92185*/
TMPAECB3 DS     A              /* PTR TO TMP ATTN ECB      @ZA92185*/
         DS    CL4            /* RESERVE                   @ZA74883*/
TMP1END  DS    0D                /* ASSURE THAT THIS WORKAREA END IN
*                                   A DOUBLE WORD BOUNDARY. ANY
*                                   ADDITION TO WORKAREA SHOULD BE
*                                   PUT BEFORE TMP1END     @ZA74883*/
*
.WORKA2  ANOP
*********************************************************************/
**** TMPWRKA2 -- TMP SUPERVISOR STATE DYNAMIC WORK AREA             */
****                                                                */
****   THIS DYNAMIC WORK AREA  IS GOTTEN  FROM SUBPOOL 230 KEY 1,   */
****   BY IKJEFT01 DURING TMP INITIALIZATION.   NORMALLY IT IS NOT  */
****   FREED  UNTIL  END OF THE TERMINAL SESSION. OTHERS WILL BE    */
****   GOTTEN BY IKJEFTSC WHEN A PARALLEL T02 IS INITIATED          */
****   AND FREED WHEN PARALLEL T02 FINISHED IT PROCESSING.          */
****   SEVERITY 2 STAE RETRY  ALL OF CORE  IS FREED  AND THIS WORK  */
****   AREA MUST BE REINITALIZED.   THIS WORK AREA  IS  REFERENCED  */
****   BY ALL OF THE TMP MODULES.                                   */
****                                                       @ZA74883 */
*********************************************************************/
TMPWRKA2 DSECT
TWRKA2A  DS     0D
WRKA1PTR DS     F                   /* PTR TO PROB PROG WORK AREA   */
WRKA2PTR DS     F                   /* PTR TO TMP PRIVATE WORK AREA */
TMPWA2P  DS     F                   /* PTR TO STAE/STAI WORK AREA   */
SAVARPTR DS     F                   /* PTR TO ORIGINAL SAVE AREA    */
TMPTIME  DS     F                   /* ADDR OF TIME ROUTINE         */
TMPT04   DS     F                   /* ADDR OF STAI EXIT ROUTINE    */
TMPT042  DS     F                   /* ADDR2 OF STAI EXIT ROUTINE   */
TMPT05   DS     F                   /* ADDR OF STAE EXIT ROUTINE    */
TEPKEY   DS     F                   /* TMP ENTRY PSW PROTECT KEY    */
TCBPTR   DS     F                   /* PTR TO TCB                   */
UPTPTR   DS     F                   /* PTR TO UPT                   */
ECTPTR   DS     F                   /* PTR TO ECT                   */
PSCBPTR  DS     F                   /* PTR TO PSCB                  */
ASCBPTR  DS     F                   /* PTR TO ASCB                  */
ASXBPTR  DS     F                   /* PTR TO ASXB                  */
RLGBPTR  DS     F                   /* PTR TO RELOGON BUFFER        */
LWAPTR   DS     F                   /* PTR TO LOGON WORK AREA       */
JSCBPTR  DS     F                   /* PTR TO JSCB (IEZJSCB)        */
         DS     A                   /* RESERVED             @ZA74883*/
TMPT043  DS     A                   /* PTR TO ESTAI MSG RTN @ZA40795*/
*     /* TMP MAINLINE FLOW CONTROL FLAGS                            */
FLOFLGS  DS     CL4
FLOFLGS1 EQU    FLOFLGS
*        EQU    X'80'
*        EQU    X'40'
DOLIST   EQU    X'20'
DOGETC   EQU    X'10'
DODONE   EQU    X'08'
DOINVOK  EQU    X'04'
DOSCAN   EQU    X'02'
*        EQU    X'01'
*
FLOFLGS2 EQU    FLOFLGS+1
DOPUTM   EQU    X'80'
DOFRECB  EQU    X'40'
DOPSTRT  EQU    X'20'
DOACTV   EQU    X'10'
DOCHKAT  EQU    X'08'
DOWAIT   EQU    X'04'
DOATTN   EQU    X'02'
DOCHKCP  EQU    X'02'
*        EQU    X'01'
*
FLOFLGS3 EQU    FLOFLGS+2
*        EQU    X'80'
DOIMPLX  EQU    X'40'
DOTEST   EQU    X'20'
DOSETBF  EQU    X'10'
DOSETTB  EQU    X'08'               /*                             */
FLOFLGS4 EQU    FLOFLGS+3
         DS     F                   /* RESERVED                     */
         DS     F                   /* RESERVED                     */
         DS     F                   /* RESERVED                     */
         DS     F                   /* RESERVED                     */
*       /* TEMPORARY SAVE AREAS FOR CALL LINK REGISTERS             */
*       /* SAVE AREAS FOR TMP-CALL                                  */
SAVRA    DS     F
SAVRB    DS     F
SAVRC    DS     F
SAVRM    DS     F
SVLNKE   DS     F
*       /* SAVE AREAS FOR TMP MAINLINE LINK REGISTERS               */
SAVLNKRS DS     0F                   /* NAME OF AREA                */
SAVLNKA  DS     F
SAVLNKB  DS     F
SAVLNKC  DS     F
SAVLNKD  DS     F
SAVLNKE  DS     F
SAVLNKF  DS     F
SAVLNKG  DS     F
SAVLNKH  DS     F
SAVLNKJ  DS     F
SAVLNKK  DS     F
SAVLNKL  DS     F
SAVLNKM  DS     F
TWRKA2B  DS     0F                   /* DEFINE SECOND AREA          */
*       /* CONTROL FLAGS                                            */
MCTLFLGS DS     0F                   /*   NAME OF AREA              */
MCFLGS1  DS     C
BKGMODE  EQU    X'80'               /* EXECUTING IN BACKGROUND MODE */
DRSAPF   EQU    X'40'               /* ON - ATTACH WITH APF         */
         DS     CL3                 /* RESERVED                     */
TMP2TSCA EQU    X'10'               /* 1=IKJEFTSC ATTENTION EXIT
*                                      (IKJATTN) RECEIVED CONTROL
*                                                           @ZA92185*/
TMP2SYN2 EQU    X'01'               /* 1=TGETCDX ROUTINE IN IKJEFT02
*                                      SYNCHED TO IKJEFT03  @YA06065*/
*
MTPL     DS     0F                  /* NAME OF MODEL TPL            */
MTPLCBUF DS     F                   /* POINTER TO COMMAND BUFFER    */
MTPLPS   DS     0F                  /*   NAME OF POINTER AREA       */
MTPLUPT  DS     F                   /* POINTER TO UPT               */
MTPLPSCB DS     F                   /* POINTER TO PSCB              */
MTPLECT  DS     F                   /* POINTER TO ECT               */
*
RTRYSA   DS     0F                  /* ENVIRONMENTAL AREA           */
RTRY51   DS     F                   /* T02 BASE PTR 1               */
RTRY52   DS     F                   /* T02 BASE PTR 2               */
RTRY53   DS     F                   /* T02 DATAREG                  */
*
MDYNASP  DS     8F                                  /* DYNALLOC PL  */
TWRKA2C  DS     0F                  /* DEFINE THIRD AREA   @ZA40795 */
TMPBLDL  DS     0CL68               /* BLDL REQUEST PL     @ZA40795 */
TMPBLDNR DS     H                   /* BLDL NUMBER OF      @ZA40795 */
*                                   /* ENTRIES IN LIST     @ZA40795 */
TMPBLDN  DS     H                   /* BLDL LENGTH OF PL   @ZA40795 */
TMPBLDNM DS     CL8                 /* BLDL PROGRAM NAME   @ZA40795 */
TMPBLDAT DS     CL56               /* BLDL USER INFO RETURNED      */
*                                   /*                     @ZA40795 */
TMPFLAG1 DS     X                   /* LOCAL FLAGS 1       @ZA40795 */
TMPCP    EQU    X'80'              /*1=CP ATTACH REQUESTED@ZA40795 */
TMPCPCAL EQU    X'40'               /* 1=CALL COMMAND ATTACH        */
*                                   /* REQUESTED           @ZA40795 */
TMPCPTST EQU    X'20'               /* 1=TEST COMMAND LINK          */
*                                   /* REQUESTED           @ZA40795 */
TMPCPABN EQU    X'10'               /*1=CURRENT CMD ABENDED@ZA40795 */
TMPAPF   EQU    X'08'               /* 1=APF ATTACH ACTIVE @ZA40795 */
TMPDE    EQU    X'04'               /* 1=DE ATTACH ACTIVE  @ZA40795 */
TMPBIT06 EQU    X'02'               /*  R E S E R V E D    @ZA40795 */
TMPBIT07 EQU    X'01'               /*  R E S E R V E D    @ZA40795 */
TMPFLAG2 DS     X                   /*  LOCAL FLAGS 2      @ZA40795 */
TMPFORCE EQU    X'80'               /* FORCE CMD DETACH    @ZA40795 */
TMPFLAG3 DS     X                   /*  R E S E R V E D    @ZA40795 */
TMPFLAG4 DS     X                   /*  R E S E R V E D    @ZA40795 */
TMPTEST@ DS     A                   /*  ADDR OF TEST CMD   @ZA40795 */
TMPTSKLB DS     A                   /* DCB ADDR FOR TASKLIB         */
*                                   /* ON ATTACH           @ZA40795 */
TMPCALST DS     A                   /* ADDR CALL COMMAND PARAMETER  */
*                                   /* STRING              @ZA40795 */
TMPCPPL@ DS     A                   /* ADDRESS TPLCPPL  OR @ZA74883
*                                      USER PARM LIST FOR  @ZA74883
*                                      FIB REQUEST         @ZA74883*/
TMPABECB DS     A                   /* ADDR ECB POSTED AFTER ABEND  */
*                                   /* OR ATTENTION        @ZA40795 */
TMPSTAI  DS     A                   /* PTR TO ESTAI RTN    @ZA40795 */
TMPSPLS  DS     A                   /* PTR TO ESTAI PARMS  @ZA40795 */
TMPTSKRC DS     F                   /* SUBTASK CPL CODE(R15)@ZA40795*/
         DS     X                   /* RESERVE              @ZA74883*/
         DS     X                   /* RESERVE              @ZA74883*/
         DS     X                   /* RESERVE              @ZA74883*/
         DS     X                   /* RESERVE              @ZA74883*/
TMP2ATNP DS    A              /* @ OF ATTN ROUTINE          @ZA74883*/
         DS    F              /* RESERVED                   @ZA74883*/
TMP2SA@  DS    A              /* PTR TO KEY 1 SAVE AREA    @ZA74883*/
TMP2TIB@ DS    A              /* TIB @ USED BY IKJEFT02    @ZA74883*/
TMP2ATIB DS    A              /* THE @ OF ACTIVE TIB       @ZA74883*/
TMP2MECB DS    A              /* @ OF TMP2MECB IN WRKA1    @ZA74883*/
TMP2AECB DS    A              /* @ OF TMP1ECB2 IN WRKA1    @ZA74883*/
TMPW1LEN DS    F              /* LENGTH OF TMPWRKA1        @ZA74883*/
TMPW2LEN DS    F              /* LENGTH OF TMPWA           @ZA74883*/
TMPBUFF@ DS    F              /* BUFFER @ OBTAINED BY      @ZA74883*/
*                             /* IKJEFT02                  @ZA74883*/
TMP2PPTR DS    A              /* THE PTR TO ITS OWN PURGE PARM LIST
*                                                          @ZA74883*/
TMP2PLEN DS    F              /* LENGTH OF RESTORE PARM AND PURGE
*                                PARM LIST TO GET AND FREE @ZA74883*/
TMP2NAME DS   CL8             /* NAME OF TMPWRKA2          @ZA74883*/
TMP2LEV  DS   CL4             /* LEVEL OF TMPWRKA2         @ZA74883*/
TMP2FFLG DS   0CL56           /* FLAGS USED FOR DEBUGGING AND
*                                RECOVERY PURPOSES         @ZA74883*/
TMP2DBUG DS   0CL4            /* TRACE OF FUNCTIONS PERFORMED WHICH
*                                CAN BE USED FOR DEBUGGING @ZA74883*/
TMP2TSFG DS   CL1                   /* FLAGS USED TO INDICATE WHAT
*                                      FUNCTION WAS PERFORMED BY
*                                      IKJEFTSC             @ZA74883*/
TMP2PUR  EQU   X'80'                /* PURGE IS DONE        @ZA74883*/
TMP2STAT EQU   X'40'                /* STATUS STOP DONE     @ZA74883*/
TMP2ATT  EQU   X'20'                /* ATTACH IS DONE       @ZA74883*/
TMP2WAIT EQU   X'10'                /* WAIT IS DONE         @ZA74883*/
TMP2POST EQU   X'08'                /* POST IS DONE         @ZA74883*/
TMP2W1ST EQU   X'04'                /* BUILD TMPWRKA1       @ZA74883*/
TMP2WA2S EQU   X'02'                /* BUILD TMPWA2         @ZA74883*/
TMP2W2ST EQU   X'01'                /* BUILD TMPWRKA2       @ZA74883*/
T2FLGT08 DS    CL1                  /* FLAG FOR IKJEFT08    @ZA74883*/
TMP2NPAR EQU   X'80'                /* NO PARALLEL TMP      @ZA74883*/
         DS    CL1                  /* RESERVED             @ZA74883*/
TMPFLG1  DS    CL1                  /* USED BY T02          @ZA74883*/
TMPARALL EQU   X'80'           /*PARALLEL TMP ENVIRONMENT   @ZA74883*/
TMPAPFCK EQU   X'40'          /* TSRCHAPF HAS BEEN CALLED   @ZA74883*/
TMPLOAD  EQU   X'20'          /* LOAD WAS ISSUED            @ZA74883*/
DIDCALL  EQU   X'10'          /* CALL HAS BEEN PERFORMED BY @ZA74883*/
*                             /* THE PARALLEL TMP           @ZA74883*/
R1PGMLST EQU   X'08'          /* PGM THRU FIB, R1 SET TO    @ZA74883*/
*                             /* PARAMETER LIST FOR PROGRAM @ZA74883*/
TMPRESV6 EQU   X'04'          /* RESERVED                   @ZA74883*/
TMPRESV7 EQU   X'02'          /* RESERVED                   @ZA74883*/
TMPRESV8 EQU   X'01'          /* RESERVED                   @ZA74883*/
TMP2RCOV DS    0CL52          /* FLAGS USED BY RECOVERY     @ZA74883*/
TMP2MCTL DS    CL2            /* MODULE IN CONTROL FLAGS, SET BY
*                                ALL TMP MODULES THAT ARE IN
*                                CONTROL                    @ZA74883*/
TMP2MT01 EQU   X'8000'         /* IKJEFT01 IN CONTROL       @ZA74883*/
TMP2MTSC EQU   X'4000'         /* IKJEFTSC IN CONTROL       @ZA74883*/
TMP2MT02 EQU   X'2000'         /* IKJEFT02 IN CONTROL       @ZA74883*/
TMP2MT08 EQU   X'0800'         /* IKJEFT08 IN CONTROL       @ZA74883*/
TMP2FCTL DS    0CL8            /* MODULAR FUNCTION IN CONTROL, SET
*                                 BY ALL TMP MODULES THAT ARE IN
*                                 CONTROL                   @ZA74883*/
TMP2FT01 DS    CL1              /* IKJEFT01 FUNCTION IN CONTROL
*                                                          @ZA74883*/
TMP2FI01 EQU   X'80'            /* IKJEFT01 INITIALIZATION@ZA74883*/
TMP2FTM1 EQU   X'40'            /* IKJEFT01 TERMINATION   @ZA74883*/
TMP2FTSC DS    CL1               /* IKJEFTSC FUNCTION IN CONTROL
*                                                          @ZA74883*/
TMP2FISC EQU   X'80'             /* IKJEFTSC INITIALIZATION@ZA74883*/
TMP2FBSC EQU   X'40'             /* IKJEFTSC IN CONTROL AFTER WAIT OF
*                                   TIBRECB AND BEFORE TERMINATION
*                                   CODE                   @ZA74883*/
TMP2FTMC EQU   X'20'             /* IKJEFTSC TERMINATION   @ZA74883*/
TMP2FT02 DS    CL1               /* IKJEFT02 FUNCTION IN CONTROL
*                                                          @ZA74883*/
         DS    CL1               /* RESERVED               @ZA74883*/
TMP2FT08 DS    CL1               /* IKJEFT08 FUNCTION IN CONTROL
*                                                          @ZA74883*/
RESERVE5 DS    CL(3)            /* RESERVED               @ZA74883*/
TMP2FLRC DS    CL2               /* SET BY IKJEFT05 (RECOVERY) TO
*                                   INDICATE THE RETRY TARGET CODE
*                                   (FIRST LEVEL)          @ZA74883*/
TMP2FLI1 EQU   X'8000'           /*IKJEFT01 INITIALIZATION @ZA74883*/
TMP2FLIC EQU   X'4000'           /*IKJEFTSC INITIALIZATION @ZA74883*/
TMP2FLBC EQU   X'2000'           /* IKJEFTSC AFTER WAIT FOR PARALLEL
*                                   SIDE FOR CLEANUP       @ZA74883*/
TMP2FL02 EQU   X'1000'           /* IKJEFT02               @ZA74883*/
TMP2SLRC DS    CL2               /* SET BY IKJEFT05 (RECOVERY) TO
*                                   INDICATE CAUSES FOR A PREVIOUS
*                                   RETRY TO IKJEFT01
*                                   (SECOND LEVEL)         @ZA74883*/
TMP2SL01 EQU   X'8000'           /* IKJEFT01               @ZA74883*/
TMP2SLIC EQU   X'4000'           /* IKJEFTSC INITIALIZATION@ZA74883*/
TMP2SLBC EQU   X'2000'           /* IKJEFTSC AFTER FIRST ATTACH OF
*                                   IKJEFT02               @ZA74883*/
TMP2SL02 EQU   X'1000'           /* IKJEFT02               @ZA74883*/
TMP2SL08 EQU   X'0800'           /* IKJEFT08               @ZA74883*/
TMP2FAIL DS    CL2              /* SET ON BY IKJEFT05 (RECOVERY) TO
*                                   INDICATE FAILURE IN A SPECIFIC
*                                   TMP MODULE. TMP MODULES USE FLAG
*                                   TO RESET RECURSION FLAGS.
*                                                          @ZA74883*/
*        EQU   X'8000'           /* RESERVE      ?????     @ZA74883*/
TMP2TSCF EQU   X'4000'           /* IKJEFTSC FAILED        @ZA74883*/
TMP2T02F EQU   X'2000'           /* IKJEFT02 FAILED        @ZA74883*/
T2T8T9F  EQU   X'1000'           /* T08 T09 ATTACH FAIL    @ZA74883*/
TMP2RTRY DS    0CL20             /* SET BY IKJEFT01 AND IKJEFT02 TO
*                                   INDICATING ADDRESSES OF RETRY
*                                   CODE.  IKJEFT05 WILL USE THESE
*                                   ADDRESSES IN ORDER TO RETRY
*                                                          @ZA74883*/
TMP2RBSC DS    A              /* BEGINNING OF IKJEFTSC, SET
*                                   BY IKJEFT01            @ZA74883*/
TMP2RWSC DS    A                 /* AFTER WAIT BEFORE TERMINATION
*                                   CODE IN IKJEFTSC, SET BY
*                                   IKJEFT01               @ZA74883*/
TMP2RW02 DS    A                 /* AFTER WAIT ON TIBRECB: SET BY
*                                   IKJEFT02               @ZA74883*/
TMP2RT02 DS    A                 /* TERMINATION CODE IN IKJEFT02
*                                   IN ORDER TO RETURN TO IKJEFT01 FOR
*                                   A RETRY, SET BY IKJEFT02
*                                                          @ZA74883*/
         DS    A                 /* RESERVED               @ZA74883*/
TMP2MREG DS    0CL16             /* EACH TMP MODULE STORE ADDRESS TO
*                                   ITS REGISTERS SO IKJEFT05 CAN
*                                   ESTABLISH ADDRESSABILITY DURING
*                                   A RETRY                @ZA74883*/
TMP2RG01 DS    A                 /* ADDRESS IKJEFT01'S REGISTERS
*                                                          @ZA74883*/
TMP2RGSC DS    A                 /* ADDRESS IKJEFTSC'S REGISTERS
*                                                          @ZA74883*/
TMP2RG02 DS    A                 /* ADDRESS IKJEFT02'S REGISTERS
*                                                          @ZA74883*/
         DS    A                 /* RESERVED               @ZA74883*/
TMP2RET@ DS    A                 /* TO INDICATE RETRY ADDRESS ON SETRP
*                                  MACRO ISSUED IN IKJEFT05@ZA74883*/
TMP2SR14 DS    A                 /* USED BY RECOVERY ROUTINE TO SAVE
*                                  RETURN POINT WHEN IT DOES A CALL
*                                  TO A SUBROUTINE.        @ZA74883*/
TMP2TSC2 DS    CL1               /* FLAG NEEDED BY TSC
*                                                          @ZA74883*/
TMP2CLR  EQU   X'80'             /* FLAGS NEEDED USED BY TSC TO
*                                   INDICATE WHAT IS DONE TO INITIATE
*                                   PARALLEL SIDE          @ZA74883*/
TMP2REC EQU    X'40'             /* INDICATE RETRY TO IKJEFT01
*                                                          @ZA74883*/
TMP2SRCT EQU   X'20'             /* INDICATE TIB IS TO BE UPDATED BY
*                                                            @ZA74883*/
TMP2INIT EQU   X'10'             /* INDICATE TO IKJEFT01 IT IS RETRY
*                                                            @ZA74883*/
          DS    CL3               /* RESERVE               @ZA74883*/
TMP2TAIE  DS    A                   /* PTR TO TAIE USED BY IKJEFT02
*                                                            @ZA74883*/
TMP2END  DS    0D                /* ASSURE THAT THIS WORKAREA END IN
*                                   A DOUBLE WORD BOUNDARY. ANY
*                                   ADDITION TO WORKAREA SHOULD BE
*                                   PUT BEFORE TMP2END     @ZA74883*/
*  WHEN SETTING A MODULE IN CONTROL FLAG,EACH MODULE WILL HAVE A
*  SPECIFIC BIT VALUE. WHEN SETTING ONE OF THESE FLAGS, ALL OTHER
*  MODULE FLAGS WILL BE TURNED OFF                         @ZA74883
*                                /* IKJEFT01'S BIT VALUE   @ZA74883*/
TMP2VT01 EQU X'8000'
*                                /* IKJEFTSC'S BIT VALUE   @ZA74883*/
TMP2VTSC EQU X'4000'
*                                /* IKJEFT02'S BIT VALUE   @ZA74883*/
TMP2VT02 EQU X'2000'
*                                /* IKJEFT08'S BIT VALUE   @ZA74883*/
TMP2VT08 EQU X'0800'
         MEND

*%TMPWABSL: ;
* /* INCLUDE MAPPING MACROS FOR PARAMETER LISTS AND BLOCKS           */
*
*/*******************************************************************/
*/* TO EXCLUDE THE MAPPING OF TMPWRKA1 THE FOLLOWING MUST   @ZA74883*/
*/*     BE DONE:                                            @ZA74883*/
*/*         1) WORKA1 MUST BE INITIALIZED TO CONTAIN A NON- @ZA74883*/
*/*                   BLANK                                 @ZA74883*/
*/*             A) THIS WILL EXCLUDE ALL MAPPING REFERENCING@ZA74883*/
*/*                FIELD IN TMPWRKA1                        @ZA74883*/
*/*         2) SKIPW1  MUST BE INITIALIZED TO CONTAIN A NON-@ZA74883*/
*/*                   BLANK                                 @ZA74883*/
*/*             A) THIS WILL EXCLUDE THE MAPPING FOR        @ZA74883*/
*/*                TMPWRKA1                                 @ZA74883*/
*/*******************************************************************/
* %IF WORKA1 ^='' %THEN           /*                  @ZA74883*/
*  %GOTO WRKA2;                         /*                  @ZA74883*/
* %INCLUDE SYSLIB(IKJDAPL);
* %INCLUDE SYSLIB(IKJDAP08);
* /* MAPPING MACRO FOR CPPL                                          */
* %  INCLUDE  SYSLIB(IKJCPPL);
* /* MAPPING MACRO FOR CSPL                                          */
* %  INCLUDE  SYSLIB(IKJCSPL);
* /* MAPPING MACRO FOR CSOA                                          */
* %  INCLUDE  SYSLIB(IKJCSOA);
* %  INCLUDE  SYSLIB(IKJECT);
* /* MAPPING MACRO FOR IOPL                                          */
* %  INCLUDE  SYSLIB(IKJIOPL);
* /* MAPPING MACRO FOR GTPB                                          */
* %  INCLUDE  SYSLIB(IKJGTPB);
* /* MAPPING MACRO FOR PGPB                                          */
* %  INCLUDE  SYSLIB(IKJPGPB);
* /* MAPPING MACRO FOR PTPB                                          */
* %  INCLUDE  SYSLIB(IKJPTPB);
* %  INCLUDE  SYSLIB(IKJSTPB);
* /* MAPPING MACRO FOR PSCB                                          */
* %  INCLUDE  SYSLIB(IKJPSCB);
* %  INCLUDE  SYSLIB(IEZATTCH);
* /* MAPPING MACRO FOR LSD                                           */
* %  INCLUDE  SYSLIB(IKJLSD);
* /* MAPPING MACRO FOR EXEC DB                                       */
* % IKJECDA = 'NO';
* % IKJCOMP = 'NO';
* % IKJNTAB = 'NO';
* % IKJVTAB = 'NO';
* % IKJCVMAP = 'NO';
* %  INCLUDE  SYSLIB(IKJEXEC);
* %  /* PARAMETERIZATION VALUES FOR DCB MAPPING MACRO                */
*    INCLUDE  SYSLIB(IHADCBDF);
* %  DSORGPO = 1;
* %  DEVDDA = 1;
* %  INCLUDE  SYSLIB(IHADCB);
* %IF SKIPPPL = 'YES' %THEN                  /* SHOULD IKJPPL BE
*                                               INCLUDED     @ZA92185*/
*  %GOTO PPLSKIP;                            /* NO SKIP IT   @ZA92185*/
* %INCLUDE SYSLIB(IKJPPL);
* %PPLSKIP:  ;                               /* LABEL TO SKIP
*                                               IKJPPL       @ZA92185*/
* %INCLUDE SYSLIB(IKJSTPL);
*@EJECT;
*
*
* DECLARE
*   /* ABEND ERROR CODE AND ERROR MESSAGE AREA                       */
*   1 ABMSGAR  CHAR(38) BDY(DWORD) BASED,    /* NAME OF MESSAGE AREA */
*     2 MSGBASE  CHAR(25) BDY(DWORD),        /* BASIC MESSAGE AREA   */
*       3 *      CHAR(12) BDY(DWORD),        /* SPACER               */
*         4 CVDAR  CHAR(8) BDY(DWORD),       /* DECIMAL CONVERSION   */
*           5 *      CHAR(5) BDY(DWORD),     /* SPACER               */
*             6 *      CHAR(4) BDY(DWORD),   /* SPACER               */
*               7 ABMLEN  PTR(15) BDY(DWORD),  /* MESSAGE LENGTH     */
*               7 ABMOFF  PTR(15) BDY(HWORD),  /* OFFSET TO TEXT     */
*               7 TRUMSG  CHAR(21),          /* WHOLE TEXT AREA      */
*                 8 MSGTXT CHAR(16),         /* BASE TEXT AREA       */
*                 8 TYPAR CHAR(1),           /* ABEND TYPE AREA      */
*                   9 CODEAR CHAR(6),        /* ERROR CODE AREA      */
*                     10 *      CHAR(1),     /* SPACER               */
*                     10 VALAR6 CHAR(6),     /* CONVERSION AREA      */
*                       11 VALAR CHAR(3),    /* CONVERTED CODE       */
*           5 USRCDEC CHAR(4),               /* CONVERSION AREA      */
*       3 ABNDCD PTR(31) BDY(WORD),          /* ABEND CODE RECEIVER  */
*         4 ABNDCDA CHAR(4) BDY(WORD),       /* ABEND CODE (CHARS)   */
*           5 *    CHAR(2) BDY(WORD),        /* SPACER               */
*             6 *    CHAR(1),                /* SPACER               */
*             6 SYSCDAR CHAR(3),             /* SYSTEM CODE AREA     */
*           5 USRCDBI  PTR(15) BDY(HWORD),   /* USER CODE AREA       */
*           5 HOLCHAR  CHAR(1),              /* WORK AREA            */
*     /* ABEND SUBCODE AND ERROR MESSAGE AREA                        */
*     2 SUBCDAR  CHAR(10) BDY(WORD),     /* NAME OF MESSAGE AREA     */
*       3 SUBCDRS  CHAR(4) BDY(WORD),    /* ERROR SUBCODE AREA       */
*         4 SUBCLEN  PTR(15) BDY(WORD),  /* SUBCODE MESSAGE LENGTH   */
*         4 SUBCDBI  CHAR(3) BDY(HWORD), /* UNPACK SOURCE FIELD      */
*           5 SUBCOFF  PTR(15) BDY(HWORD),  /* SUBCODE MSG OFFSET    */
*             6 SUBCAR  CHAR(6) BDY(BYTE),  /* UNPACK TARGET FIELD   */
*               7 *        CHAR(2) BDY(BYTE),  /* SPACER             */
*               7 SUBCTXT  CHAR(3) BDY(BYTE),  /* TRANSLATION TARGET */
*
*   /* PARSE RETURN CODE HOLD AND MESSAGE SEGMENT AREA               */
*   1 PRSMAR  CHAR(12) BDY(DWORD) BASED,  /* NAME OF AREA            */
*     2 PRSMCVA  CHAR(8) BDY(DWORD),  /* CONVERSION AREA             */
*       3 PRSMSAV  CHAR(4) BDY(DWORD),  /* HOLD AREA(CHAR)           */
*         4 PARSRC  PTR(32),          /* HOLD PARSE RETURN CODE      */
*           5 PRSMLEN  PTR(15),       /* SEGMENT LENGTH              */
*           5 PRSMOFF  PTR(15),       /* SEGMENT OFFSET              */
*           5 PRSMVAL  CHAR(6),       /* TEXT AREA                   */
*             6 PRSMTXT CHAR(4),      /* SEGMENT TEXT                */
*               7 *       CHAR(1),    /* SPACER                      */
*               7 PRSMDEC CHAR(4),    /* DECIMAL AREA                */
*@EJECT;
*
*
*   /* TMP MAPPING OF DYNAMIC ALLOCATION PARAMETER BLOCKS            */
*   1 DYNAPARM  BDY(WORD) BASED(DYNAPPTR),
*     2 DYNARBP  CHAR(4),             /* PTR TO REQUEST BLOCK        */
*     2 DYNARB   CHAR(20),            /* DYNALLOC REQUEST BLOCK      */
*     2 DYNATUP  CHAR(4),             /* PTR TO TEXT UNIT            */
*     2 DYNATU   CHAR(4),             /* TEXT UNIT                   */
*
*   /* MASK FOR CPPL POINTERS                                        */
*   1 CPPLRF  CHAR(LENGTH(CPPL)) DEFINED(CPPL),  /* NAME OF AREA     */
*     2 *      PTR(31),               /* RESERVED                    */
*     2 CPPLPS  CHAR(12),             /* POINTER AREA                */
*
*   /* MASK FOR TPL POINTERS                                         */
*   1 TPLRF  CHAR(LENGTH(TPL)) DEFINED(TPL),  /* NAME OF AREA        */
*     2 *      PTR(31),               /* RESERVED                    */
*     2 TPLPS  CHAR(12),              /* POINTER AREA                */
*
*   /* DCB FLAG FIELD -- OPEN FLAG                                   */
*   1 TDCBFLGS  DEFINED(DCBOFLGS) BDY(BYTE),  /* DCB FLAGS           */
*     2 *       BIT(3),             /* SPACER                        */
*       2 DCBOPEN BIT(1),           /* DCB OPEN FLAG                 */
*
*   /* I/0 SERVICE ROUTINES LIST -- 1ST ELEMENT                      */
*   TIOSRL  PTR(31) BASED(ECTIOWA),   /* NAME OF IOSRL AREA          */
*
*   /* MAPPING OF TOP ELEMENT OF STACK                               */
*   1 TOPSTKL  BDY(WORD) BASED(TIOSRL),  /* NAME OF AREA             */
*     2 *        CHAR(4) BDY(WORD),   /* RESERVED                    */
*       3 *        CHAR(1),           /* RESERVED                    */
*         4 *        BIT(4),          /* RESERVED                    */
*         4 XECNOW   BIT(1),          /* CLIST MODE FLAG             */
*         4 *        BIT(2),          /* RESERVED                    */
*       3 STLLSDP  PTR(24),           /* PTR TO LSD                  */
*         4 LSDPTR  PTR(24);          /* PTR TO LSD                  */
*
* /* MAPPING MACRO FOR GETMAIN                                       */
* ?  GETMAIN   MF(L,MDLGML,BASED BDY(WORD));
*
* /* MAPPING MACRO FOR FREEMAIN                                      */
* ?  FREEMAIN   MF(L,MDLFML,BASED BDY(WORD));
* @EJECT;
*
*
* DECLARE
*   /* DEFINE REGISTER 13                                            */
*   R13  PTR(31) REG(13) RSTD;
*
*   /* ENQ PARAMETER LIST MASK                                       */
*?  ENQ  LS(1) MF(L,STYNQL,BASED(R1));
*
*   /* DEQ PARAMETER LIST MASK                                       */
*?  DEQ  LS(1) MF(L,STYDQL,BASED(R1));
*
*
* /* MAPPINGS OF LINKAGE SAVE AREA                                   */
* DECLARE
*   /* CURRENT POINTERS                                              */
*   1 CURPTRS  BASED(R13),           /* NAME OF CURRENT AREA         */
*     2 *         PTR(31),           /* *                            */
*     2 SAVRBAK   PTR(31),           /* CURRENT BACKWARD POINTER     */
*     2 SAVRFOR   PTR(31),           /* CURRENT FORWARD POINTER      */
*
*   /* SAVE AREA                                                     */
*   1 SAVARY  BASED(SAVRBAK),        /* NAME OF AREA                 */
*     2 *         PTR(31),           /* *                            */
*     2 SR13BAK   PTR(31),           /* BACKWARD LINK AREA POINTER   */
*     2 SR13FOR   PTR(31),           /* FORWARD LINK AREA POINTER    */
*     2 REG14     PTR(31),           /* SAVED REGISTER 14            */
*     2 REG15     PTR(31),           /* SAVED REGISTER 15            */
*     2 REG0      PTR(31),           /* SAVED REGISTER 0             */
*     2 REG1      PTR(31),           /* SAVED REGISTER 1             */
*     2 REG2      PTR(31),           /* SAVED REGISTER 2             */
*     2 REG3      PTR(31),           /* SAVED REGISTER 3             */
*     2 REG4      PTR(31),           /* SAVED REGISTER 4             */
*     2 REG5      PTR(31),           /* SAVED REGISTER 5             */
*     2 REG6      PTR(31),           /* SAVED REGISTER 6             */
*     2 REG7      PTR(31),           /* SAVED REGISTER 7             */
*     2 REG8      PTR(31),           /* SAVED REGISTER 8             */
*     2 REG9      PTR(31),           /* SAVED REGISTER 9             */
*     2 REG10     PTR(31),           /* SAVED REGISTER 10            */
*     2 REG11     PTR(31),           /* SAVED REGISTER 11            */
*     2 REG12     PTR(31);           /* SAVED REGISTER 12            */
*@EJECT;
*%WRKA2:    ;                        /*                      @ZA74883*/
* /******************************************************************/
* /* TMPWRKA2 -- TMP SUPERVISOR STATE DYNAMIC WORK AREA             */
* /*                                                                */
* /*   THIS DYNAMIC WORK AREA  IS GOTTEN  FROM SUBPOOL 230 KEY 1,   */
* /*   BY IKJEFT01 DURING TMP INITIALIZATION.   NORMALLY IT IS NOT  */
* /*   FREED  UNTIL  END OF THE TERMINAL SESSION. OTHERS WILL BE    */
* /*   GOTTEN BY IKJEFTSC WHEN A PARALLEL T02 IS INITIATED          */
* /*   AND FREED WHEN PARALLEL T02 FINISHED IT PROCESSING.          */
* /*   SEVERITY 2 STAE RETRY  ALL OF CORE  IS FREED  AND THIS WORK  */
* /*   AREA MUST BE REINITALIZED.   THIS WORK AREA  IS  REFERENCED  */
* /*   BY ALL OF THE TMP MODULES.                                   */
* /*                                                       @ZA74883 */
* /******************************************************************/
*
* DECLARE
*   1 TMPWRKA2  BASED(WRKAPTR2) BDY(DWORD),
*     2 TWRKA2A  BDY(WORD),          /* DEFINE FIRST AREA            */
*       3 WRKA1PTR PTR(32),          /* PTR TO PROB PROG WORK AREA   */
*       3 WRKA2PTR PTR(32),          /* PTR TO TMP PRIVATE WORK AREA */
*       3 TMPWA2P  PTR(32),          /* PTR TO STAE/STAI WORK AREA   */
*       3 SAVARPTR PTR(32),          /* PTR TO ORIGINAL SAVE AREA    */
*       3 TMPTIME  PTR(32),          /* ADDR OF TIME ROUTINE         */
*       3 TMPT04   PTR(32),          /* ADDR OF STAI EXIT ROUTINE    */
*       3 TMPT042  PTR(32),          /* ADDR2 OF STAI EXIT ROUTINE   */
*       3 TMPT05   PTR(32),          /* ADDR OF STAE EXIT ROUTINE    */
*       3 TEPKEY   PTR(32),          /* TMP ENTRY PSW PROTECT KEY    */
*       3 TCBPTR   PTR(32),          /* PTR TO TCB                   */
*       3 UPTPTR   PTR(32),          /* PTR TO UPT                   */
*       3 ECTPTR   PTR(32),          /* PTR TO ECT                   */
*       3 PSCBPTR  PTR(32),          /* PTR TO PSCB                  */
*       3 ASCBPTR  PTR(32),          /* PTR TO ASCB                  */
*       3 ASXBPTR  PTR(32),          /* PTR TO ASXB                  */
*       3 RLGBPTR  PTR(32),          /* PTR TO RELOGON BUFFER        */
*       3 LWAPTR   PTR(32),          /* PTR TO LOGON WORK AREA       */
*       3 JSCBPTR  PTR(32),          /* PTR TO JSCB (IEZJSCB)        */
*       3 *        PTR(32),          /* RESERVED             @ZA74883*/
*       3 TMPT043  PTR(32),          /* PTR TO ESTAI MSG RTN @ZA40795*/
*       @EJECT;
*     /* TMP MAINLINE FLOW CONTROL FLAGS                             */
*     3 FLOFLGS  CHAR(4) BDY(WORD),
*       4 FLOFLGS1 CHAR(1),
*         5 *       BIT(1),
*         5 *       BIT(1),
*         5 DOLIST  BIT(1),
*         5 DOGETC  BIT(1),
*         5 DODONE  BIT(1),
*         5 DOINVOK BIT(1),
*         5 DOSCAN  BIT(1),
*         5 *       BIT(1),
*
*       4 FLOFLGS2 CHAR(1),
*         5 DOPUTM  BIT(1),
*         5 DOFRECB BIT(1),
*         5 DOPSTRT BIT(1),
*         5 DOACTV  BIT(1),
*         5 DOCHKAT BIT(1),
*         5 DOWAIT  BIT(1),
*         5 DOATTN  BIT(1),
*           6 DOCHKCP  BIT(1),
*         5 *       BIT(1),
*
*       4 FLOFLGS3 CHAR(1),
*         5 *       BIT(1),
*         5 DOIMPLX BIT(1),
*         5 DOTEST  BIT(1),
*         5 DOSETBF BIT(1),
*         5 DOSETTB BIT(1),
*         5 *       BIT(3),
*
*       4 FLOFLGS4 CHAR(1),
*         5 *       BIT(8),
*
*@EJECT;                            /*                     @ZA40795 */
*       /* GRAPHIC BIT MAP FOR EASY REFERENCE TO TMP BITS  @ZA40795 */
*/*******************************************************************/
*/*                                                                 */
*/*           8    4    2      1      8      4       2      1       */
*/* FLOFLGS1                                                        */
*/*           0    1    2      3      4      5       6      7       */
*/*                                                                 */
*/*           *    *    DOLIST DOGETC DODONE DOINVOK DOSCAN *       */
*/*                                                                 */
*/* DOWATF1             *      *      *      *       *              */
*/* DOATTNF1            *      *      *      *                      */
*/* DOACTF1             *      *      *                             */
*/* DOTSKF1                    *      *      *       *              */
*/* DOCHKAF1                   *      *                             */
*/* DOSTCDF1                   *      *                             */
*/* DOMPLXF1                   *      *                             */
*/* DOGTCDF1                          *      *       *              */
*/*                                                                 */
*/*******************************************************************/
*/*                                                                 */
*/*          8      4       2       1      8       4      2         */
*/* FLOFLGS2                                                        */
*/*          0      1       2       3      4       5      6       7 */
*/*                                                                 */
*/*          DOPUTM DOFRECB DOPSTRT DOACTV DOCHKAT DOWAIT DOATTN  * */
*/*                                                       DOCHKCP * */
*/*                                                                 */
*/* DOMPLXF2 *      *       *       *      *                        */
*/* DOGTCDF2                *       *      *       *      *         */
*/* DOSTCDF2                *       *      *                        */
*/* DOCHKAF2                *       *                               */
*/*                                                                 */
*/*******************************************************************/
*/*                                                                 */
*/*           8      4       2       1       8       4 2   1        */
*/* FLOFLGS3                                                        */
*/*           0      1       2       3       4       5  6  7        */
*/*                                                                 */
*/*           *      DOIMPLX DOTEST  DOSETBF DOSETTB *  *  *        */
*/*                                                                 */
*/*******************************************************************/
*/*                                                                 */
*/* FLOFLGS4                                                        */
*/*           0      1       2       3       4       5  6  7        */
*/*           *      *       *       *       *       *  *  *        */
*/*                                                                 */
*/*******************************************************************/
*       @EJECT;
*       3 *        PTR(32),          /* RESERVED                     */
*       3 *        PTR(32),          /* RESERVED                     */
*       3 *        PTR(32),          /* RESERVED                     */
*       3 *        PTR(32),          /* RESERVED                     */
*
*       /* TEMPORARY SAVE AREAS FOR CALL LINK REGISTERS              */
*       /* SAVE AREAS FOR TMP-CALL                                   */
*       3 SAVRA  PTR(31),
*       3 SAVRB  PTR(31),
*       3 SAVRC  PTR(31),
*       3 SAVRM  PTR(31),
*       3 SVLNKE PTR(31),
*       /* SAVE AREAS FOR TMP MAINLINE LINK REGISTERS                */
*       3 SAVLNKRS  BDY(WORD),       /* NAME OF AREA                 */
*         4 SAVLNKA  PTR(31),
*         4 SAVLNKB  PTR(31),
*         4 SAVLNKC  PTR(31),
*         4 SAVLNKD  PTR(31),
*         4 SAVLNKE  PTR(31),
*         4 SAVLNKF  PTR(31),
*         4 SAVLNKG  PTR(31),
*         4 SAVLNKH  PTR(31),
*         4 SAVLNKJ  PTR(31),
*         4 SAVLNKK  PTR(31),
*         4 SAVLNKL  PTR(31),
*         4 SAVLNKM  PTR(31),
*@EJECT;
* /*******************************************************************/
* /* TMPWRKA2 -- CONTINUED                                           */
* /*******************************************************************/
*
*     2 TWRKA2B  BDY(WORD),          /* DEFINE SECOND AREA           */
*       /* CONTROL FLAGS                                             */
*       3 MCTLFLGS  CHAR(4) BDY(WORD), /* NAME OF AREA               */
*         4 MCFLGS1 CHAR(1),
*           5 BKGMODE  BIT(1),       /* EXECUTING IN BACKGROUND MODE */
*           5 DRSAPF   BIT(1),       /* ON - ATTACH WITH APF         */
*           5 *        BIT(6),       /* RESERVED                     */
*         4 *       CHAR(3),         /* RESERVED                     */
*           5 *        BIT(3),       /* RESERVED             @ZA92185*/
*           5 TMP2TSCA BIT(1),       /* 1=IKJEFTSC ATTENTION EXIT
*                                       (IKJATTN) RECEIVED CONTROL
*                                                            @ZA92185*/
*           5 *        BIT(3),       /* RESERVED             @YA06065*/
*           5 TMP2SYN2 BIT(1),       /* 1=TGETCDX ROUTINE IN IKJEFT02
*                                       SYNCHED TO IKJEFT03  @YA06065*/
*       3 MTPL    BDY(WORD),         /* NAME OF MODEL TPL            */
*         4 MTPLCBUF  PTR(31),       /* POINTER TO COMMAND BUFFER    */
*         4 MTPLPS CHAR(12) BDY(WORD), /* NAME OF POINTER AREA       */
*           5 MTPLUPT  PTR(31),      /* POINTER TO UPT               */
*           5 MTPLPSCB PTR(31),      /* POINTER TO PSCB              */
*           5 MTPLECT  PTR(31),      /* POINTER TO ECT               */
*
*       3 RTRYSA     BDY(WORD),      /* ENVIRONMENTAL AREA           */
*         4 RTRY51   PTR(31),        /* T02 BASE PTR 1               */
*         4 RTRY52   PTR(31),        /* T02 BASE PTR 2               */
*         4 RTRY53   PTR(31),        /* T02 DATAREG                  */
*
         3 MDYNASP  CHAR(32) BDY(WORD),    /* DYNALLOC PL   @ZA40795 */
*       @EJECT;                     /*                      @ZA40795 */
* /*******************************************************************/
* /* TMPWRKA2 -- CONTINUED                                  @ZA40795 */
* /*******************************************************************/
*    2 TWRKA2C BDY(WORD),            /* DEFINE THIRD AREA   @ZA40795 */
*     3 TMPBLDL BDY(WORD) CHAR(68),  /* BLDL REQUEST PL     @ZA40795 */
*       4 TMPBLDNR FIXED(15),        /* BLDL NUMBER OF ENTRIES IN    */
*                                    /* LIST                @ZA40795 */
*       4 TMPBLDN FIXED(15),         /* BLDL LENGTH OF PL   @ZA40795 */
*       4 TMPBLDNM CHAR(8),          /* BLDL PROGRAM NAME   @ZA40795 */
*       4 TMPBLDAT CHAR(56),         /* BLDL USER INFO RETURNED      */
*                                    /*                     @ZA40795 */
*     3 TMPFLAG1 CHAR(1),            /* LOCAL FLAGS 1       @ZA40795 */
*       4 TMPCP BIT(1),              /* 1=CP COMMAND ATTACH REQUESTED*/
*                                    /*                     @ZA40795 */
*       4 TMPCPCAL BIT(1),           /* 1=CALL COMMAND ATTACH        */
*                                    /*            REQUESTED@ZA40795 */
*       4 TMPCPTST BIT(1),           /* 1=TEST COMMAND LINK REQUESTED*/
*                                    /*                     @ZA40795 */
*       4 TMPCPABN BIT(1),           /*1=CURRENT CMD ABENDED@ZA40795 */
*       4 TMPAPF BIT(1),             /* 1=APF ATTACH ACTIVE @ZA40795 */
*       4 TMPDE BIT(1),              /* 1=DE ATTACH REQ     @ZA40795 */
*       4 TMPBIT06 BIT(1),           /*  R E S E R V E D    @ZA40795 */
*       4 TMPBIT07 BIT(1),           /*  R E S E R V E D    @ZA40795 */
*     3 TMPFLAG2 CHAR(1),            /*  LOCAL FLAGS 2      @ZA40795 */
*       4 TMPFORCE BIT(1),           /*  FORCE CP DETACH    @ZA40795 */
*     3 TMPFLAG3 CHAR(1),            /*  R E S E R V E D    @ZA40795 */
*     3 TMPFLAG4 CHAR(1),            /*  R E S E R V E D    @ZA40795 */
*     3 TMPTEST@ PTR(31),            /* ADDR OF TEST CMD    @ZA40795 */
*     3 TMPTSKLB PTR(31),            /* DCB ADDR FOR TASKLIB KEYWORD */
*                                    /* ON ATTACH           @ZA40795 */
*     3 TMPCALST PTR(31),            /* ADDR CALL COMMAND PARAMETER  */
*                                    /* STRING              @ZA40795 */
*     3 TMPCPPL@ PTR(31),            /* ADDRESS TPLCPPL OR USER PARM
*                                       LIST FOR FIB REQUEST
*                                                           @ZA74883 */
*     3 TMPABECB PTR(31),            /* ADDR ECB POSTED AFTER ABEND  */
*                                    /* OR ATTENTION        @ZA40795 */
*     3 TMPSTAI PTR(31),             /* PTR TO ESTAI RTN    @ZA40795 */
*     3 TMPSPLS PTR(31),             /* PTR TO ESTAI PARMS  @ZA40795 */
*     3 TMPTSKRC FIXED(31),          /* SUBTASK CPL CODE (R15)       */
*    2 RESERVE1 CHAR(1),             /* RESERVED            @ZA74883*/
*    2 RESERVE2 CHAR(1),             /* RESERVED            @ZA74883*/
*    2 RESERVE3 CHAR(1),             /* RESERVED            @ZA74883*/
*    2 RESERVE4 CHAR(1),             /* RESERVED            @ZA74883*/
*    2 TMP2ATNP PTR(31),        /* @ OF ATTN ROUTINE        @ZA74883*/
*    2 *        FIXED(31),      /* RESERVED                 @ZA74883*/
*    2 TMP2SA@  PTR(31),        /* PTR TO KEY 1 SAVEAREA   @ZA74883*/
*    2 TMP2TIB@ PTR(31),        /* @ OF TIB WHICH IS USED BY IKJEFT02
*                                  IT IS GOTTEN BY IKJEFT01 AND WILL
*                                  FREED BY IKJEFT01        @ZA74883*/
*    2 TMP2ATIB PTR(31),        /* @ OF THE ACTIVE TIB      @ZA74883*/
*    2 TMP2MECB PTR(31),        /* @ OF TPLMECB (STOP/MODIFY ECB)
*                                  WITHIN TMPWRKA1         @ZA74883*/
*    2 TMP2AECB PTR(31),        /* @ OF END OF T02 ECB
*                                  WITHIN TMPWRKA1         @ZA74883*/
*    2 TMPW1LEN FIXED(31),      /* LENGTH OF TMPWRKA1      @ZA74883*/
*    2 TMPW2LEN FIXED(31),      /* LENGTH OF TMPWA2        @ZA74883*/
*    2 TMPBUFF@ FIXED(31),      /* BUFFER @ OBTAINED BY    @ZA74883*/
*                               /* IKJEFT02                @ZA74883*/
*    2 TMP2PPTR PTR(31),        /* @ OF ITS OWN PURGE PARM LIST
*                                                           @ZA74883*/
*    2 TMP2PLEN FIXED(31),       /* LENGTH OF RESTORE PARM AND PURGE
*                                PARM LIST TO GET AND FREE @ZA74883*/
*    2 TMP2NAME CHAR(8),         /* NAME OF TMPWRKA2       @ZA74883*/
*    2 TMP2LEV  CHAR(4),         /* LEVEL OF TMPWRKA2      @ZA74883*/
*  2 TMP2FFLG,                   /* FLAGS USED FOR DEBUGGING AND
*                                   RECOVERY PURPOSES      @ZA74883*/
*    3 TMP2DBUG,                 /* TRACE OF FUNCTIONS PERFORMED WHICH
*                                   CAN BE USED FOR DEBUGGING
*                                                          @ZA74883*/
*    4 TMP2TSFG CHAR(1),             /* FLAGS USED TO INDICATE WHAT
*                                       FUNCTION WAS PERFORMED BY
*                                       IKJEFTSC             @ZA74883*/
*     5 TMP2PUR BIT(1),              /* PURGE I/O WAS DONE   @ZA74883*/
*     5 TMP2STAT BIT(1),             /* STATUS RESET WAS DONE@ZA74883*/
*     5 TMP2ATT BIT(1),              /* ATTACH OF PARALLEL T02 WAS
*                                       DONE                 @ZA74883*/
*     5 TMP2WAIT BIT(1),             /* WAIT WAS BEING DONE  @ZA74883*/
*     5 TMP2POST BIT(1),             /* POST WAS BEING DONE  @ZA74883*/
*     5 TMP2W1ST BIT(1),             /* BUILDING THE WORKAREA
*                                                           @ZA74883*/
*     5 TMP2WA2S BIT(1),             /* BUILDING THE WORKAREA
*                                                           @ZA74883*/
*     5 TMP2W2ST BIT(1),             /* BUILDING THE WORKAREA
*                                                           @ZA74883*/
*    4 T2FLGT08 CHAR(1),             /* FLAG FOR IKJEFT08   @ZA74883*/
*      5 TMP2NPAR BIT(1),            /* INDICATE NO PARALLEL TMP
*                                                           @ZA74883*/
*      5 * BIT(7),                    /*                    @ZA74883*/
*    4 *  CHAR(1),                   /* RESERVED            @ZA74883*/
*    4 TMPFLG1 CHAR(1),              /* USED BY IKJEFT02    @ZA74883*/
*      5 TMPARALL BIT(1),       /* PARALLEL TMP ENVIRONMENT @ZA74883*/
*      5 TMPAPFCK BIT(1),       /* TSRCHAPF HAS BEEN CALLED @ZA74883*/
*      5 TMPLOAD  BIT(1),       /* LOAD WAS ISSUED          @ZA74883*/
*      5 DIDCALL  BIT(1),       /* CALL HAS BEEN PERFORMED  @ZA74883*/
*                               /* BY THE PARALLEL TMP     @ZA74883*/
*      5 R1PGMLST BIT(1),       /* R1 SET TO PGM PARM LIST  @ZA74883*/
*                               /* FROM FIB                 @ZA74883*/
*      5 * BIT(3),              /* RESERVED                 @ZA74883*/

*    3 TMP2RCOV,                 /* FLAGS USED BY RECOVERY @ZA74883*/
*      4 TMP2MCTL CHAR(2),       /* MODULE IN CONTROL FLAGS, SET BY
*                                   ALL TMP MODULES THAT ARE IN
*                                   CONTROL                @ZA74883*/
*        5 TMP2MT01 BIT(1),      /* IKJEFT01 IN CONTROL    @ZA74883*/
*        5 TMP2MTSC BIT(1),      /* IKJEFTSC IN CONTROL    @ZA74883*/
*        5 TMP2MT02 BIT(1),      /* IKJEFT02 IN CONTROL    @ZA74883*/
*        5 *        BIT(1),      /* RESERVED               @ZA74883*/
*        5 TMP2MT08 BIT(1),      /* IKJEFT08 IN CONTROL    @ZA74883*/
*        5 *        BIT(11),     /* RESERVED               @ZA74883*/
*      4 TMP2FCTL,               /* MODULAR FUNCTION IN CONTROL, SET
*                                   BY ALL TMP MODULES THAT ARE IN
*                                   CONTROL                @ZA74883*/
*        5 TMP2FT01 CHAR(1),     /* IKJEFT01 FUNCTION IN CONTROL
*                                                          @ZA74883*/
*          6 TMP2FI01 BIT(1),    /* IKJEFT01 INITIALIZATION@ZA74883*/
*          6 TMP2FTM1 BIT(1),    /* IKJEFT01 TERMINATION   @ZA74883*/
*          6 *        BIT(6),    /* RESERVED               @ZA74883*/
*        5 TMP2FTSC CHAR(1),     /* IKJEFTSC FUNCTION IN CONTROL
*                                                          @ZA74883*/
*          6 TMP2FISC BIT(1),    /* IKJEFTSC INITIALIZATION@ZA74883*/
*          6 TMP2FBSC BIT(1),    /* IKJEFTSC IN CONTROL AFTER WAIT OF
*                                   TIBRECB AND BEFORE TERMINATION
*                                   CODE                   @ZA74883*/
*          6 TMP2FTMC BIT(1),    /* IKJEFTSC TERMINATION   @ZA74883*/
*          6 *        BIT(5),    /* RESERVED               @ZA74883*/
*        5 TMP2FT02 CHAR(1),     /* IKJEFT02 FUNCTION IN CONTROL
*                                                          @ZA74883*/
*        5 *        CHAR(1),     /* RESERVED               @ZA74883*/
*        5 TMP2FT08 CHAR(1),     /* IKJEFT08 FUNCTION IN CONTROL
*                                                          @ZA74883*/
*        5 RESERVE5 CHAR(3),    /* RESERVED               @ZA74883*/
*      4 TMP2FLRC CHAR(2),       /* SET BY IKJEFT05 (RECOVERY) TO
*                                   INDICATE THE RETRY TARGET CODE
*                                   (FIRST LEVEL)          @ZA74883*/
*        5 TMP2FLI1 BIT(1),      /*IKJEFT01 INITIALIZATION @ZA74883*/
*        5 TMP2FLIC BIT(1),      /*IKJEFTSC INITIALIZATION @ZA74883*/
*        5 TMP2FLBC BIT(1),      /* IKJEFTSC AFTER WAIT FOR PARALLEL
*                                   SIDE FOR CLEANUP       @ZA74883*/
*        5 TMP2FL02 BIT(1),      /* IKJEFT02               @ZA74883*/
*        5 *        BIT(12),     /* RESERVED               @ZA74883*/
*      4 TMP2SLRC CHAR(2),       /* SET BY IKJEFT05 (RECOVERY) TO
*                                   INDICATE CAUSES FOR A PREVIOUS
*                                   RETRY TO IKJEFT01
*                                   (SECOND LEVEL)         @ZA74883*/
*        5 TMP2SL01 BIT(1),      /* IKJEFT01               @ZA74883*/
*        5 TMP2SLIC BIT(1),      /* IKJEFTSC INITIALIZATION@ZA74883*/
*        5 TMP2SLBC BIT(1),      /* IKJEFTSC AFTER FIRST ATTACH OF
*                                   IKJEFT02               @ZA74883*/
*        5 TMP2SL02 BIT(1),      /* IKJEFT02               @ZA74883*/
*        5 *        BIT(12),     /* RESERVED               @ZA74883*/
*      4 TMP2FAIL CHAR(2),       /* SET ON BY IKJEFT05 (RECOVERY) TO
*                                   INDICATE FAILURE IN A SPECIFIC
*                                   TMP MODULE. TMP MODULES USE FLAG
*                                   TO RESET RECURSION FLAGS.
*                                                          @ZA74883*/
*        5 *        BIT(1),      /* RESERVED               @ZA74883*/
*        5 TMP2TSCF BIT(1),      /* IKJEFTSC FAILED        @ZA74883*/
*        5 TMP2T02F BIT(1),      /* IKJEFT02 FAILED        @ZA74883*/
*        5 T2T8T9F  BIT(1),      /* T08 T09 ATTACH FAIL    @ZA74883*/
*        5 *        BIT(12),     /* RESERVED               @ZA74883*/
*      4 TMP2RTRY,               /* SET BY IKJEFT01 AND IKJEFT02 TO
*                                   INDICATING ADDRESSES OF RETRY
*                                   CODE.  IKJEFT05 WILL USE THESE
*                                   ADDRESSES IN ORDER TO RETRY
*                                                          @ZA74883*/
*        5 TMP2RBSC PTR(31),     /* BEGINNING OF IKJEFTSC, SET
*                                   BY IKJEFT01            @ZA74883*/
*        5 TMP2RWSC PTR(31),     /* AFTER WAIT BEFORE TERMINATION
*                                   CODE IN IKJEFTSC, SET BY
*                                   IKJEFT01               @ZA74883*/
*        5 TMP2RW02 PTR(31),     /* AFTER WAIT ON TIBRECB: SET BY
*                                   IKJEFT02               @ZA74883*/
*        5 TMP2RT02 PTR(31),     /* TERMINATION CODE IN IKJEFT02
*                                   IN ORDER TO RETURN TO IKJEFT01 FOR
*                                   A RETRY, SET BY IKJEFT02
*                                                          @ZA74883*/
*        5 *        PTR(31),     /* RESERVED               @ZA74883*/
*      4 TMP2MREG,               /* EACH TMP MODULE STORES ADDRESS TO
*                                   ITS REGISTERS SO IKJEFT05 CAN
*                                   ESTABLISH ADDRESSABILITY DURING
*                                   A RETRY                @ZA74883*/
*        5 TMP2RG01 PTR(31),     /* ADDRESS IKJEFT01'S REGISTERS
*                                                          @ZA74883*/
*        5 TMP2RGSC PTR(31),     /* ADDRESS IKJEFTSC'S REGISTERS
*                                                          @ZA74883*/
*        5 TMP2RG02 PTR(31),     /* ADDRESS IKJEFT02'S REGISTERS
*                                                          @ZA74883*/
*        5 *        PTR(31),     /* RESERVED               @ZA74883*/
* 2 TMP2RET@ PTR(31),            /* TO INDICATE RETRY ADDRESS ON SETRP
*                                  MACRO ISSUED IN IKJEFT05@ZA74883*/
* 2 TMP2SR14 PTR(31),            /* USED BY RECOVERY ROUTINE TO SAVE
*                                  RETURN POINT WHEN IT DOES A CALL
*                                  TO A SUBROUTINE.        @ZA74883*/
* 2 TMP2TSC2 CHAR(1),            /* FLAGS USED BY TSC      @ZA74883*/
*   3 TMP2CLR  BIT(1),                 /* FLAGS NEEDED USED BY TSC TO
*                                   INDICATE WHAT IS DONE TO INITIATE
*                                   PARALLEL SIDE          @ZA74883*/
*   3 TMP2REC  BIT(1),            /* INDICATE RETRY TO IKJEFT01
*                                                          @ZA74883*/
*   3 TMP2SRCT BIT(1),            /* INDICATE WHETHER TO UPDATE TIB
*                                    BY RECOVERY-UPDATE IF IT FUNCTION
*                                    REQUEST BY USER IS NOT DONE
*                                                            @ZA74883*/
*   3 TMP2INIT BIT(1),            /* INDICATE RETRY TO IKJEFT01
*                                                          @ZA74883*/
*   3 *         BIT(4),          /* RESERVE                @ZA74883*/
* 2 *       CHAR(3),             /* RESERVE                @ZA74883*/
* 2 TMP2TAIE PTR(31),            /* PTR TO TAIE USED BY T02@ZA74883*/
* 2 TMP2END CHAR(0) BDY(DWORD);  /* ASSURE THAT THIS WORKAREA END IN
*                                   A DOUBLE WORD BOUNDARY. ANY
*                                   ADDITION TO WORKAREA SHOULD BE
*                                   PUT BEFORE TMP2END     @ZA74883*/
*  DCL                           /* WHEN SETTING A MODULE IN CONTROL
*                                   FLAG, EACH MODULE WILL HAVE A
*                                   SPECIFIC BIT VALUE.  WHEN SETTING
*                                   ONE OF THESE FLAGS, ALL OTHER
*                                   MODULE FLAGS WILL BE TURNED OFF
*                                                          @ZA74883*/
*                                /* IKJEFT01'S BIT VALUE   @ZA74883*/
*         TMP2VT01 BIT(16) CONSTANT('8000'X),
*                                /* IKJEFTSC'S BIT VALUE   @ZA74883*/
*         TMP2VTSC BIT(16) CONSTANT('4000'X),
*                                /* IKJEFT02'S BIT VALUE   @ZA74883*/
*         TMP2VT02 BIT(16) CONSTANT('2000'X),
*                                /* IKJEFT08'S BIT VALUE   @ZA74883*/
*         TMP2VT08 BIT(16) CONSTANT('0800'X);
*@EJECT;
* %IF SKIPW1^='' %THEN         /* IF NOT NULL SKIP OVER MAPPING OF
*                                 TMPWRKA1                @ZA74883*/
*  %GOTO SKIPWRK1;             /*                         @ZA74883*/
* /******************************************************************/
* /* TMPWRKA1 -- TMP PROBLEM PROGRAM STATE DYNAMIC WORK AREA        */
* /*                                                                */
* /*   THIS DYNAMIC WORK AREA IS GOTTEN FROM SUBPOOL 1, PP KEY, BY  */
* /*   IKJEFT01  DURING  TMP INITIALIZATION AND ANOTHER ONE         */
* /*   WILL BE GOTTEN IN IKJEFTSC IF A PARALLEL TMP IS NEEDED AND   */
* /*   THIS WORKAREA WILL BE FREED WHEN THE PARALLEL TMP IS FINISHED*/
* /*   WHILE THE ONE GOTTEN FOR THE NON-PARALLEL SIDE BY IKJEFT01   */
* /*   WILL NOT BE FREED UNTIL THE END OF THE TERMINAL SESSION.     */
* /*   DURING THE TMP SEVERITY 2 STAE RETRY ALL OF STORAGE IS FREED */
* /*   AND THIS WORKAREA MUST BE REINITIALIZED.                     */
* /*                                                                */
* /*   CHANGE ACTIVITY =                                            */
* /*    OZ66256 -ADD TSEVENT ISSUED FLAG                    @ZA65692*/
* /*    ZA74883 -SUPPORT FOR NEW TMP TASK STRUCTURE         @ZA74883*/
* /*    OZ89255 -ADD SKPATTN TO INDICATE TO IKJEFT03 WHEN IT CAN    */
* /*             PROCESS ATTN.                              @ZA89255*/
* /*                                                                */
* /******************************************************************/
*
* DECLARE
*   1 TMPWRKA1 BASED(WRKAPTR1) BDY(DWORD),
*
*     /* TMP-TEST DYNAMIC INTERFACE AREA                             */
*%       TPLSLEV='2';                 /* SET TPL LEVEL TO 2          */
*%       TPLOPT1='CONTINUE';          /* INDICATE MORE TO FOLLOW TPL */
*%       INCLUDE SYSLIB(IKJTPL);
*%       DEACTIVATE TPLSLEV,TPLOPT1;
*
*     /* TMP COMMON VARIABLES AND WORK AREAS                         */
*     2 TMPNECB  PTR(31),            /* ECB FOR STAI WAIT            */
*     2 TMPCECB  PTR(31),            /* ECB FOR ATTACHED CP          */
*     2 TMPIECB  PTR(31),            /* ECB FOR STAI POST            */
*     2 TMPAECB  PTR(31),            /* ECB FOR ATTN POST            */
*     2 TMPCMDWT PTR(31),            /* PTR TO CMD FROM ATTN EXIT    */
*
*     2 TMPSWS   CHAR(4),            /* TMP INTERNAL SWITCHES        */
*       3 TMPTEST  BIT(1),           /* TEST PROGRAM IN CONTROL      */
*       3 TMPCMDW  BIT(1),           /* COMMAND WAITING              */
*       3 TMPNFCMD BIT(1),           /* FIRST COMMAND IS PROCESSED   */
*       3 TMPACTRL BIT(1),           /* TMP ATTN EXIT IS IN CONTROL  */
*       3 TMPSCTRL BIT(1),           /* TMP STAI EXIT IS IN CONTROL  */
*       3 ABND806  BIT(1),           /* NO-MODULE FOUND BY FETCH     */
*       3 FRSTLAB  BIT(1),           /* 1ST LEVEL ATTACHEE ABENDED   */
*       3 NONSCUR  BIT(1),           /* SECURITY AUTHORIZATION FAILS */
*
*       3 ATCHNOW  BIT(1),           /* ABEND OCCURRED IN ATTACH     */
*       3 LOADNOW  BIT(1),           /* ABEND OCCURRED IN LOAD       */
*       3 LINKNOW  BIT(1),           /* ABEND OCCURRED IN LINK       */
*       3 FRSTEX   BIT(1),           /* FIRST EXPL/IMPLICIT EXEC TRY */
*       3 CALLNOW  BIT(1),           /* CALL FUNCTION ACTIVE         */
*       3 TMP1TIME BIT(1),           /* ESTAI ENTERED (TEST) @ZTM5046*/
*       3 T7TDONE  BIT(1),           /* TSEVENT ISSUED       @ZA65692*/
*       3 SKPATTN  BIT(1),           /* 1-BYPASS ATTENTION   @ZA89255*/
*
*       3 *        BIT(8),           /* RESERVED                     */
*
*       3 CALLSWS  CHAR(1),          /* TMP-CALL INTERNAL SWITCHES   */
*         4 PDLPRES  BIT(1),         /* PDL RETURNED BY PARSE        */
*         4 DSOPEN   BIT(1),         /* DATA SET IS OPEN             */
*         4 *        BIT(1),         /* RESERVED FLAG                */
*         4 BLANKB   BIT(1),         /* DATA SET NAME PROCESSED      */
*         4 DORELS   BIT(1),         /* RELEASE PDL NOW              */
*         4 GMBRNOW  BIT(1),         /* GET MEMBER NAME              */
*         4 *        BIT(2),         /* RESERVED FLAGS               */
*@EJECT;
*     /* RESERVED AREAS                                              */
*     2 RESCOMM  CHAR(16),
*     2 RESCOM2  CHAR(16),
*     2 RESCOM3  CHAR(16),
*     2 RESCOM4  CHAR(16),
*     2 *        CHAR(4),            /* RESERVED WAS FLOFLGS @ZA46174*/
*
*% DEFPTRS:  MACRO;
*   ANSWER
* ('2 CPPLPTR  PTR(31),            /* PTR TO CP PARM LIST          */')
*     NORESCAN COL(7);
*   ANSWER
* ('2 CSOAPTR  PTR(31),            /* PTR TO CMD SCAN PARM LIST    */')
*     NORESCAN COL(7);
*   ANSWER
* ('2 CSPLPTR  PTR(31),            /* PTR TO CMD SCAN PARM LIST    */')
*     NORESCAN COL(7);
*   ANSWER
* ('2 DAPLPTR  PTR(31),            /* PTR TO DAIR PARM LIST        */')
*     NORESCAN COL(7);
*   ANSWER
* ('2 GTPBPTR  PTR(31),            /* PTR TO GETLINE PARM BLOCK    */')
*     NORESCAN COL(7);
*   ANSWER
* ('2 IOPLPTR  PTR(31),            /* PTR TO I/O RTNS PARM LIST    */')
*     NORESCAN COL(7);
*   ANSWER
* ('2 PGPBPTR  PTR(31),            /* PTR TO PUTGET PARM BLOCK     */')
*     NORESCAN COL(7);
*   ANSWER
* ('2 PPLPTR   PTR(31),            /* PTR TO PARSE PARM LIST       */')
*     NORESCAN COL(7);
*   ANSWER
* ('2 PTPBPTR  PTR(31),            /* PTR TO PUTLINE PARM BLOCK    */')
*     NORESCAN COL(7);
*   ANSWER
* ('2 STPLPTR  PTR(31),            /* PTR TO STACK PARM LIST       */')
*     NORESCAN COL(7);
*%  END;
*? DEFPTRS;
*     2 ACEEPTR  PTR(31),            /* ADDR OF ACEE                 */
*     2 ASCANAP  PTR(31),            /* ADDR OF ATTN SCAN ANSWER     */
*     2 ASRPLPTR PTR(31),            /* ADDR OF ATTN SRPL            */
*     2 ATTCHPTR PTR(31),            /* ADDR OF ATTACH PARM LIST     */
*     2 CDCBPTR  PTR(31),            /* PTR TO CALL DCB              */
*     2 DCBPTR   PTR(31),            /* PTR TO DCB                   */
*     2 DYNAPPTR PTR(31),            /* PTR TO DYNALLOC PARM LIST    */
*     2 EBCDPTR  PTR(31),            /* PTR TO TRANSLATE TABLE       */
*     2 READYPTR PTR(31),            /* ADDR OF TMP MODE MESSAGE     */
*     2 SCANAP   PTR(31),            /* ADDR OF SCAN ANSWER AREA     */
*     2 SRPLPTR  PTR(31),            /* ADDR OF SRPL                 */
*     2 STAXPPTR PTR(31),            /* ADDR OF STAX PARM LIST       */
*     2 STPBPTR  PTR(31),            /* ADDR OF STACK PARM LIST      */
*
*     /* RESERVE SPACE FOR PARAMETER LISTS, BLOCKS                   */
*     2 ABMSGSP CHAR(LENGTH(ABMSGAR)) BDY(DWORD),  /* MESSAGE AREA   */
*     /* PUTLINE ACTIVE SEGMENT LIST    LIST                         */
*     2 ACTSL  CHAR(112) BDY(WORD),  /* NAME OF LIST                 */
*       3 ACTSEG (28) PTR(32),       /* SEGMENTS                     */
*         4 ACTSEGA   PTR(16),       /* FIRST HWORD OF SEGMENT       */
*         4 ACTSEGB   PTR(16),       /* SECOND HWORD OF SEGMENT      */
*     2 AMSGLIST,                    /* ATTN MESSAGE LIST            */
*       3 ANUMSEG  FIXED(31),        /* NUMBER OF MESSAGE SEGMENTS   */
*       3 AMSGSEG(2) PTR(31),        /* ARRAY OF SEGMENT PTRS        */
*     2 ARCODE   PTR(31),            /* ATTN RETURN CODE SAVE AREA   */
*     2 ASCANFLG FIXED(31),          /* ATTN SCAN FLAGS              */
*     2 ASRPARM  CHAR(20) BDY(WORD), /* ATTN SR PARM AREA            */
*     2 ATTCHSP CHAR(LENGTH(ATTCHLST)) BDY(WORD),  /* ATTACH PL SP   */
*     2 BLDLLST  CHAR(68) BDY(WORD), /* BLDL ENTRY                   */
*       3 XTRCLST  CHAR(12) BDY(WORD),  /* EXTRACT LIST              */
*         4 BLDLENT  FIXED(15),      /* NUM OF ENTRIES               */
*         4 BLDLELNG FIXED(15),      /* LENGTH OF ENTRY              */
*         4 BLDLNAME CHAR(8),        /* NAME OF COMMAND              */
*       3 BLDLTTRZ CHAR(56),         /* PAD TO FULL WORD   @ZA40795 */
*@EJECT;
*     2 CDCBSP  CHAR(140) BDY(DWORD),  /* CALL DCB SPACE             */
*     2 CLOSESP CHAR(12) BDY(WORD),  /* CLOSE PL SPACE               */
*     2 CPPLSP  CHAR(LENGTH(CPPL)) BDY(WORD),  /* CPPL SPACE         */
*     2 CSOASP  CHAR(LENGTH(CSOA)) BDY(WORD),  /* CSOA SPACE         */
*     2 CSOASP2 CHAR(LENGTH(CSOA)) BDY(WORD),  /* 2ND CSOA SP (ATTN) */
*     2 CSPLSP  CHAR(LENGTH(CSPL)) BDY(WORD),  /* CSPL SPACE         */
*     2 CSPLSP2 CHAR(LENGTH(CSPL)) BDY(WORD),  /* 2ND CSPL SP (ATTN) */
*     2 CTLBKSP  BDY(WORD),          /* NAME OF BLOCK SPACE          */
*       3 CTLBLKL  PTR(32),          /* LENGTH OF BLOCK SPACE        */
*       3 CTLBLKA  PTR(31),          /* LOC OF BLOCK SPACE           */
*       3 CTLBLKN  PTR(31),          /* SUBPOOL                      */
*     2 DAPBSP  CHAR(LENGTH(DAPB08)) BDY(WORD),  /* DAIR PARM BLK SP */
*     2 DAPLSP  CHAR(LENGTH(DAPL)) BDY(WORD),  /* DAIR PL SPACE      */
*     2 DCBSP   CHAR(140) BDY(DWORD),  /* DCB SPACE                  */
*     2 DYNASP  CHAR(LENGTH(DYNAPARM))  BDY(WORD), /* DYNALLOC PL SP */
*     2 ECTSP   CHAR(LENGTH(ECT))  BDY(WORD),  /* ECT SPACE          */
*     2 FMLCSP  CHAR(10) BDY(WORD),  /* FREEM PL SPACE               */
*     2 GTPBSP  CHAR(LENGTH(GTPB)) BDY(WORD),  /* GTPB SPACE         */
*     2 MODESSP CHAR(4) BDY(WORD),  /* MODESET PARM LIST SPACE       */
*     2 NXTCMD  CHAR(8) BDY(WORD),   /* COMMAND NAME FIELD           */
*     2 OPENSP  CHAR(12) BDY(WORD),  /* OPEN PL SPACE                */
*     2 PGPBSP  CHAR(LENGTH(PGPB)) BDY(WORD),  /* PGPB SPACE         */
*     2 PPLSP   CHAR(28) BDY(WORD),  /* PARSE PL SPACE       @ZA92185*/
*     2 PRSMSSP CHAR(LENGTH(PRSMAR)) BDY(WORD),  /* MESSAGE AREA     */
*     2 PTPBSP  CHAR(LENGTH(PTPB)) BDY(WORD),  /* PTPB SPACE         */
*     2 RCODE    PTR(31),            /* RETURN CODE SAVE AREA        */
*     2 R3SAVE   PTR(31),            /* SAVE PDL PTR                 */
*     2 SAVAR    (14) PTR(32),       /* SAVE REGISTER ENVIRONMENT    */
*     2 SCANFLG  FIXED(31),          /* SCAN FLAGS                   */
*     2 SNAPSP  CHAR(40) BDY(WORD),  /* SNAP PL SPACE                */
*     2 STPBSP  CHAR(LENGTH(STPB)) BDY(WORD),      /* STPB SPACE     */
*     2 STPLSP  CHAR(LENGTH(STPL)) BDY(WORD),  /* STACK PL SPACE     */
*     2 TMPZEROS FIXED(31),          /* ALL ZEROS WORD - DUMMY CBUF  */
*     2 MODEMSP CHAR(20) BDY(WORD),  /* DUMMY SPACE FOR MODE MESSAGE */
*     2 *       CHAR(20) BDY(WORD),  /* RESERVED                     */
*@EJECT;
*     /* WORK AREA FOR TMP-CALL FUNCTION                             */
*     2 CALLWA  BDY(WORD),
*       /* PROBLEM PROGRAM WORK AREA FOR CALL FUNCTION               */
*       3 PPWORKAR,
*         4 PPLIST  BDY(WORD),
*           5 SWBIT  CHAR(1),
*           5 *      CHAR(3),
*         4 PARMFLD  BDY(WORD),
*           5 LENPARM  FIXED(15),
*           5 PARMS    CHAR(100),
*
*       /* CALL INTERNAL WORK AREA                                   */
*       3 WORK1,
*         4 PARSPARM,                /* PARSE PARMS                  */
*           5 PDLADDR  PTR(31),      /* PTR TO PARM DESCRIPTOR LIST  */
*           5 PDLADDR2  PTR(31),
*         4 DSNBUFFR CHAR(48) BOUNDARY(HWORD),
*           5 DSNLENG  FIXED(15),    /* LENGTH OF DATA SET NAME      */
*           5 DSNBUF   CHAR(44),     /* DSNAME                       */
*           5 *        CHAR(2),      /* ALIGNMENT                    */
*       3 MSGNO    FIXED(31),        /* MESSAGE NUMBER               */
*       3 DAPB0PTR PTR(31),
*
*       /* MEMBER NAME SEGMENT FOR MESSAGE                           */
*       3 MBRSEG CHAR(12) BDY(WORD), /* NAME OF AREA                 */
*         4 MBRSLEN  PTR(15),        /* SEGMENT LENGTH               */
*         4 MBRSOFF  PTR(15),        /* SEGMENT OFFSET               */
*         4 MBRSTXT  CHAR(8),        /* MEMBER NAME TEXT             */
*
*       /* MEMBER NAME SEGMENT FOR DAIR                              */
*       3 MBRDSEG CHAR(12) BDY(WORD),  /* NAME OF AREA               */
*         4 MBRDLEN  PTR(15),        /* SEGMENT LENGTH               */
*         4 MBRDTXT  CHAR(8),        /* NAME TEXT                    */
*
*       /* DATA SET NAME SEGMENT FOR MESSAGE                         */
*       3 DSSEG CHAR(48) BDY(WORD),  /* NAME OF AREA                 */
*         4 DSSGLEN  PTR(15),        /* SEGMENT LENGTH               */
*         4 DSSGOFF  PTR(15),        /* SEGMENT OFFSET               */
*         4 DSSGTXT  CHAR(44),       /* DATA SET NAME TEXT           */
*
*       /* RETURN CODE RESERVE AREAS                                 */
*       3 BLDLRC  PTR(32),     /* FOR BLDL RETURN CODE               */
*       3 DAIRRC  PTR(32),     /* FOR DAIR RETURN CODE               */
*       3 PUTLRC  PTR(32),     /* FOR PUTLINE RETURN CODE            */
*       3 CRCODE  PTR(32),     /* FOR GENERAL CALL RETURN CODE       */
*       /* TMP RE-STRUCTURE WORK AREAS                     @ZA40795 */
*    2 TMPCTCB PTR(31),              /* PTR TO ATTCH CP TCB@ZA40795 */
*    2 TMPTECB FIXED(31),         /* TEST COMPLETE ECB     @ZA40795 */
*    2 TMPECB2 FIXED(31),         /* IKJEFTXX EOT ECB      @ZA40795 */
*    2 CPABECB FIXED(31),         /* TEST RQST AFTER ABEND @ZA40795 */
*    2 ECBLPTR PTR(31),           /* PTR ECB WAIT LISTS    @ZA40795 */
*    2 TMPECBL2,                  /*                       @ZA40795 */
*     3 TMPCECB2 PTR(31),         /* PTR TO ATTCH CP ECB   @ZA40795 */
*     3 TMPIECB2 PTR(31),         /* PTR TO TMP STAI ECB   @ZA40795 */
*     3 TMPAECB2 PTR(31),         /* PTR TO TMP ATTN ECB   @ZA40795 */
*    2 TMPECBAT PTR(31),          /* TMP ATTN ECB          @ZA92185*/
*    2 TMPSCECB,                  /* ECB USED BY IKJATTN ROUTINE IN
*                                    IKJEFTSC TO WAIT FOR IKJEFT03
*                                    TO PROCESS THE ATTENTION. IT IS
*                                    POSTED BY IKJEFT03 NORMALLY AND
*                                    IKJEFT05 IF WAITING AT ABEND
*                                                          @ZA92185*/
*      3 TMPSWAIT BIT(1),        /* CHECKED BY IKJEFT03 AND
*                                   IKJEFT05               @ZA92185*/
*      3 * BIT(31),              /* POST AND COMPLETION CODE
*                                                          @ZA92185*/
*    2 TMP1ECB2,                 /* ECB INDICATING END OF T02 PROCESS
*                                                          @ZA74883*/
*      3 * BIT(1),               /* ECB WAIT BIT           @ZA74883*/
*      3 TP1ECB2P BIT(1),        /* ECB POST BIT          @ZA74883*/
*      3 * BIT(30),              /* ECB COMPLETION CODE    @ZA74883*/
*    2  *       FIXED(31),      /* RESERVED                @ZA74883*/
*    2 TMPR15RC FIXED(31),      /* R15 RC FROM CP          @ZA74883*/
*    2 TMP1RSNC FIXED(31),    /* REASON CODE WHEN CP ABEND @ZA74883*/
*    2 TMP1ABNC FIXED(31),    /* ABEND CODE WHEN CP ABEND  @ZA74883*/
*    2 TMP1NAME CHAR(8),      /* NAME OF TMPWRKA1          @ZA74883*/
*    2 TMP1LEV  CHAR(4),      /* LEVEL OF TMPWRKA1         @ZA74883*/
*    2 TMPECBL3,                  /*                       @ZA92185*/
*     3 TMPTECB3 PTR(31),         /* PTR TO TEST FINIS ECB @ZA92185*/
*     3 TMPCECB3 PTR(31),         /* PTR TO ATTACH CP ECB  @ZA92185*/
*     3 TMPAECB3 PTR(31),         /* PTR TO TMP ATTN ECB   @ZA92185*/
*    2 *        CHAR(4),      /* RESERVE                   @ZA74883*/
*    2 TMP1END  CHAR(0) BDY(DWORD);  /* ASSURE THAT THIS WORKAREA END
*                                   IN A DOUBLE WORD BOUNDARY. ANY
*                                   ADDITION TO WORKAREA SHOULD BE
*                                   PUT BEFORE TMP1END     @ZA74883*/
*@EJECT;
*    DECLARE
*     1 MULTLLST  DEFINED(ACTSL),    /* MULTILEVEL MESSAGE LIST      */
*       2 MSGLCHP  PTR(31),          /* CHAIN PTR TO 2ND MSG LIST    */
*       2 MSGLIST,                   /* FIRST MESSAGE LIST           */
*         3 NUMSEG   FIXED(31),      /* NO. OF MESSAGE SEGMENTS      */
*         3 MSGSEG(3) PTR(31),       /* ARRAY OF SEGMENT PTRS        */
*       2 SECLLIST,                  /* 2ND LEVEL MSG LIST           */
*         3 SMSGLCHP PTR(31),        /* LAST CHAIN PTR               */
*         3 SNUMSEG  FIXED(31),      /* NO. OF MESSAGE SEGMENTS      */
*         3 SMSGSEG(3) PTR(31);      /* ARRAY OF SEGMENT PTRS        */
*
* DECLARE
*   /* STAX PARAMETER LIST SPACE                                     */
*   STAXSP  CHAR(256) BASED(STAXPPTR);
*
* DECLARE
*   /* MODE MESSAGE IMAGE                                            */
*   MODEMSG  CHAR(256) BASED(READYPTR);
*@EJECT;
*
* DECLARE
*   /* ABEND EXIT PARM AREA -- SUBPOOL 0, PP KEY, WORK AREA  GOTTEN  */
*   /*   IN  IKJEFT01 (TMP INITIALIZATION)  AND  USED BY  IKJEFT04   */
*   /*   (STAI EXIT), IKJEFT05 (STAE EXIT) AND IKJEFT07 (STAE RETRY) */
*   /*   DURING TMP/SUBTASK LEVEL ABEND HANDLING                     */
* /*   CHANGE ACTIVITY =                                            */
* /*    OZ89255 - ADD FLAG AREA FOR T04 USE                 @ZA89255*/
*
*   1 TMPWA2 BASED(TMPWA2P),
*
*     2 TMPWA2A    BDY(WORD),        /* NAME OF AREA                 */
*       3 SVT040A CHAR(72) BDY(WORD),  /* LINKAGE SAVE AREA -- CHARS */
*         4 SAVT040  (18) PTR(32),   /*   -- AS POINTERS             */
*       3 SVT041A CHAR(72) BDY(WORD),  /* LINKAGE SAVE AREA -- CHARS */
*         4 SAVT041  (18) PTR(32),   /*   -- AS POINTERS             */
*       3 SVT042A CHAR(72) BDY(WORD),  /* LINKAGE SAVE AREA -- CHARS */
*         4 SAVT042  (18) PTR(32),   /*   -- AS POINTERS             */
*       3 STYNQWA   BDY(WORD),       /* NAME OF ENQ WORK AREA        */
*         4 STYNQLA  CHAR(LENGTH(STYDQL)) BDY(WORD), /* PL AREA      */
*         4 MINQNAM  CHAR(8),        /* ENQ MINOR NAME AREA          */
*       3 *         CHAR(12),        /* RESERVED                     */
*     2 TMPWA2B   BDY(WORD),         /* NAME OF AREA                 */
*       3 REG14SAV  PTR(32),         /* TEMPORARY SAVE AREA          */
*       3 GMRETC    PTR(32),         /* TEMPORARY SAVE AREA          */
*       3 RETRYFLG CHAR(1),          /* TMP RETRY FLAGS              */
*         4 TMPRINIT BIT(1),         /* REINITIALIZATION IN PROCESS  */
*         4 TMPRTRY  BIT(1),         /* RETRY IN PROCESS             */
*       3 *        CHAR(3),          /* RESERVED                     */
*       3 GMLNG5  PTR(32),           /* LENGTH OF GETMAIN AREA       */
*       3 GMLOC5  PTR(32),           /* LOCATION OF GETMAIN AREA     */
*       3 TMPT04F CHAR(1),           /* FLAG FOR T04         @ZA89255*/
*         4 TWA2POST BIT(1),         /* 1-POST 0-DO NOT POST @ZA89255*/
*         4 TWA2CONT BIT(1),         /* 1-CONTINUE 0-GET OUT @ZA89255*/
*       3 *       CHAR(3),           /* RESERVE              @ZA89255*/
*       3 TWA2SARB PTR(31),          /* SAVE ADDRESS OF RB   @ZA89255*/
*       3 *       CHAR(24),          /* RESERVED             @ZA89255*/
*
*   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
*
*   /* COMMAND BUFFER --                                             */
*   1 CBUF BASED(TPLCBUF) BDY(WORD),
*     2 CBUFLNG  FIXED(15),          /* TOTAL LENGTH OF CBUF         */
*     2 CBUFOFF  FIXED(15),          /* CURRENT DATA FIELD OFFSET    */
*     2 CBUFDATA CHAR(256),          /* VAR LENGTH DATA FIELD        */
*
*   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
*
*   /* STAI MESSAGE ROUTINE PARAMETER AREA -- SUBPOOL 1, PP KEY AREA */
*   /*   GOTTEN IN IKJEFT04 (STAI EXIT) AND USED BY TMP AND TEST     */
*   1 STRTPARM BASED(TMPIECB),
*     2 STRTPTR PTR(31),             /* ADDR OF STAI MESSAGE RTN     */
*     2 STRTTMPA PTR(31),            /* ADDR OF TMP MAIN WORK AREA   */
*     2 STRTBASE PTR(31),            /* BASE REGISTER FOR STAI       */
*     2 STRTDYNA PTR(31);            /* ADDR OF STAI DYNAMIC STORAGE */
*%SKIPWRK1:   ;                      /*                    @ZA74883*/
*
