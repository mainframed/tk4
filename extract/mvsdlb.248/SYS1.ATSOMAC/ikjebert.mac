*/*
         MACRO
&NAME    IKJEBERT &REG,&PARA,&RC=O
.*A612000-988000                                               @Y30NQKC
.*
.*  THIS MACRO IS USED BY ALL EDIT SUBCOMMANDS AND SERVICE ROUTINES
.*  TO CONTROL EPILOG CODE GENERATED.  THE BASIC SECTION OF THIS
.*  MACRO IS THE OS/360 RETURN MACRO INSTRUCTION.  IN ADDITION, THIS
.*  MACRO WILL DEQUEUE AND ZERO THE CURRENT SAVE AREA AND UPDATE THE
.*  POINTER TO THE CURRENT SAVE AREA IN THE COMMUNICATION AREA.
.*
.*  MACRO LAST UPDATED 06-03-74                                @Y30NQKC
.*
         LCLA  &A
         AIF   ('&NAME' EQ '').GO
&NAME    DS    0H
.GO      ST    13,(CANXTSVA-IKJEBECA)(COMMREG) UPDATE NEXT
*                                  AVAILABLE SAVE AREA POINTER.
         LR    12,13          COPY OVER SAVE AREA ADDRESS.
         L     13,4(,13)      ADDRESS OF HIGHER SAVE AREA.
         XC    0(72,12),0(12) ZERO SAVE AREA.
         AIF   ('&RC' EQ '(15)').SPECRT
         AIF   ('&REG' EQ '').CONTA
.COMBACK ANOP
&A       SETA  &REG(1)*4+20
         AIF   (&A LE 75).CONTB
&A       SETA  &A-64
.CONTB   AIF   (N'&REG NE 2).CONTC
         LM    &REG(1),&REG(2),&A.(13) RESTORE THE REGISTERS.
         AGO   .CONTA
.SPECRT  AIF   ('&REG(1)' NE '14' AND '&REG(1)' NE '15').COMBACK
         AIF   ('&REG(1)' EQ '14' AND N'&REG EQ 1).COMBACK
         AIF   ('&REG(1)' EQ '15' AND N'&REG EQ 1).CONTA
         AIF   ('&REG(1)' EQ '14').SKIP
         AIF   ('&REG(2)' EQ '0').ZTWO
.LM      LM    0,&REG(2),20(13) RESTORE THE REGISTERS.
         AGO   .CONTA
.ZTWO    L     0,20(0,13)     RESTORE REGISTER ZERO.
         AGO   .CONTA
.SKIP    L     14,12(0,13)    RESTORE REGISTER 14.
         AIF   ('&REG(2)' EQ '15').CONTA
         AIF   ('&REG(2)' EQ '0').ZTWO
         AIF   ('&REG(2)' EQ '0').ZTWO
         AGO   .LM
.CONTC   AIF   (N'&REG NE 1).ERROR1
         L     &REG(1),&A.(0,13) RESTORE REGISTER.
.CONTA   AIF   ('&PARA' EQ '').CONTD
         AIF   ('&PARA' NE 'T').ERROR2
         MVI   12(13),X'FF'   SET RETURN INDICATION.
.CONTD   AIF   ('&RC' EQ 'O').CONTE
         AIF   ('&RC'(1,1) EQ '(').ISAREG
         LA    15,&RC.(0,0)   LOAD RETURN CODE.
         AGO   .CONTE
.ISAREG  AIF   ('&RC(1)' EQ '15').CONTE
         MNOTE 12,'INVALID REGISTER NOTATION IN RC OPERAND.'
         MEXIT
.CONTE   BR    14             RETURN.
         AGO   .END
.ERROR1  MNOTE 12,'INVALID FIRST OPERAND SPECIFIED.'
         MEXIT
.ERROR2  MNOTE 12,'INVALID SECOND OPERAND SPECIFIED.'
.END     MEND
**/
*% IKJEBERT: MACRO KEYS(
*        RC                            /* INDENTIFIES THE VARIABLE
*                                         WHICH CONTAINS THE RETURN
*                                         CODE.                      */
*        );
*  DECLARE
*    EHAREGS CHAR EXT,                 /* REGS DECLARED BY EPILOG    */
*    ALINE CHAR,                       /* A LINE OF TEXT             */
*    EHAUNIQUE CHAR EXT,               /* MISC VARIABLES FOR EPILOG  */
*    DOCCOMCOL FIXED EXT,              /* START COL FOR COMMENTS     */
*    DOCCOMCOLALT FIXED EXT;           /* ALTERNATE FOR DOCCOMCOL    */
*
*        IF DOCCOMCOL < 5              /* COMMENT START AT LEFT      */
*          THEN                        /*   YES-DEFAULT AT LEFT      */
*            DOCCOMCOL = 40;           /* SET DEFAULT TO RIGHT       */
*
*        IF INDEX(EHAREGS,'13P') = 0   /* REG 13 NOT DECLARED YET    */
*          THEN                        /*   TRUE                     */
*            EHAREGS = EHAREGS ×× '13P';
*
*        IF INDEX(EHAREGS,'12P') = 0   /* REG 12 NOT DECLARED YET    */
*          THEN                        /*   TRUE                     */
*            EHAREGS = EHAREGS ×× '12P';
*
*        IF INDEX(EHAUNIQUE,'CASAVPTR') = 0 /* SA PTR NOT DECLD      */
*          THEN                        /*   TRUE                     */
*            EHAUNIQUE = EHAUNIQUE ×× '#CASAVPTR PTR(31) BASED#' ××
*              '@SAVE AREA PTR FOR IKJEBERT@';
*
*        IF INDEX(EHAUNIQUE,'CASAVE') = 0 /* SA PTR NOT DECLD        */
*          THEN                        /*   TRUE                     */
*            EHAUNIQUE = EHAUNIQUE ×× '#CASAVE CHAR(72) BASED#' ××
*              '@SAVE AREA EDIT MODULE@';
*
*        ANS('RESPECIFY (GPR12P,GPR13P) RSTD;')
*           COL(MACCOL) SKIP(1);
*
*        ALINE = 'CANXTSVA = GPR13P;';
*        DOCCOMCOLALT = LENGTH(ALINE) + MACCOL + 1;
*        ANS(ALINE ×× ' ? DOC (UPDATE NEXT-SAVE-AREA PTR);')
*          SKIP(1) COL(MACCOL);
*
*        ALINE = 'GPR12P = GPR13P;';
*        DOCCOMCOLALT = LENGTH(ALINE) + MACCOL + 1;
*        ANS(ALINE ×× '? DOC (SAVE PRESENT SAVE-AREA ADDR);')
*            COL(MACCOL);
*
*        ALINE = 'GPR13P = (GPR13P + 4) -> CASAVPTR;';
*        DOCCOMCOLALT = LENGTH(ALINE) + MACCOL + 1;
*        ANS(ALINE ×× '? DOC (GET BACKWARD SAVE-AREA PTR);')
*            COL(MACCOL);
*
*        ALINE = 'RESPECIFY CASAVE BASED(GPR12P);';
*        DOCCOMCOLALT = LENGTH(ALINE) + MACCOL + 1;
*        ANS(ALINE ×× '? DOC (CHANGE BASE FOR SAVE-AREA); ')
*            COL(MACCOL);
*
*        ALINE = 'CASAVE = CASAVE && CASAVE;';
*        DOCCOMCOLALT = LENGTH(ALINE) + MACCOL + 1;
*        ANS(ALINE ×× '? DOC (ZERO OUT THIS SAVE-AREA);') COL(MACCOL);
*
*        ANS('RESPECIFY CASAVE BASED;') COL(MACCOL);
*
*        IF RC = ''                    /* NO RETURN CODE             */
*          THEN DO;                    /*   TRUE                     */
*            ALINE = 'RETURN;';
*            DOCCOMCOLALT = LENGTH(ALINE) + MACCOL + 1;
*            ANS(ALINE ×× '? DOC (RETURN WITHOUT RETURN CODE);')
*                 COL(MACCOL);
*
*             END;
*          ELSE DO;                    /*   FALSE, WANT RET CODE      */
*            ALINE = 'RETURN CODE(' ×× RC(1) ×× ');';
*            DOCCOMCOLALT = LENGTH(ALINE) + MACCOL + 1;
*            ANS(ALINE ×× '? DOC (RETURN WITH RETURN CODE);')
*                 COL(MACCOL);
*             END;
*
*        ANS('RESPECIFY (GPR12P,GPR13P) UNRSTD;')
*           COL(MACCOL) SKIP(1);
*         ANS(' ') COL(DOCCOMCOL-1);
*
*         DOCCOMCOLALT = 0;            /* RESET TO ZERO              */
*% END IKJEBERT;
