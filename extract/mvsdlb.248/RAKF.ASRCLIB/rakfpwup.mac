         TITLE 'RAKF Password Update Program'
RAKFPWUP CSECT
         PRINT NOGEN
*
**********************************************************************
*                                                                    *
* NAME: RAKFPWUP                                                     *
*                                                                    *
* TYPE: Assembler Source                                             *
*                                                                    *
* DESC: Process Password Update Requests                             *
*                                                                    *
* FUNCTION: - retrieve username and new password from CSA area       *
*             allocated by ICHSFR00 in subpool 227 (fetch protected) *
*           - clear and free CSA area                                *
*           - append username and new password to the RAKF password  *
*             change queue, a sequential dataset with LRECL=18,      *
*             RECFM=F containing one line per password change in the *
*             following format:                                      *
*                                                                    *
*             ----+----1----+---                                     *
*             uuuuuuuu pppppppp                                      *
*                                                                    *
*             where uuuuuuuu is the username and pppppppp is the new *
*             password, each padded to the right with blanks to 8    *
*             characters.                                            *
*                                                                    *
* REQUIREMENTS: - RAKF password change queue pointed to by ddname    *
*                 RAKFPWUP using DISP=MOD in the DD statement.       *
*                                                                    *
**********************************************************************
*
* initialize
*
         SAVE  (14,12),,RAKFPWUP_&SYSDATE._&SYSTIME
         USING RAKFPWUP,R15        establish => program EP
         ST    R13,SAVEAREA+4      save HSA
         LA    R11,SAVEAREA        establish => savearea
         ST    R11,8(R13)          save LSA
         LR    R13,R11             setup => our savearea
         USING SAVEAREA,R13        new addressability
         DROP  R15                 program EP no longer needed
         B     CONTINUE            branch around savearea
SAVEAREA DS    18F                 savearea
*
* Begin of code
*
CONTINUE LR    R5,R1               remember PARM plist address
         MODESET MODE=SUP,KEY=ZERO authorize ourselves
         L     R1,0(,R5)           address of PARM field plist
         LH    R5,0(,R1)           length of PARM field
         CH    R5,=H'8'            is PARM field length 8 characters?
         BNE   INVPARM              talk dirrty and exit if not
         MVC   ADDRHEX,2(R1)       get PARM field in check plist
         MVC   ADDRUNPK,2(R1)      get PARM field for translate
         TR    ADDRUNPK,HEXTBL     translate PARM field to zoned
         PACK  ADDRESS(5),ADDRUNPK(9) pack PARM field
         L     R1,ADDRESS          address storage pointed to by PARM
         CLC   0(LPWUPCMD,R1),STRTPWUP parmlist from ICHSFR00 found?
         BNE   INVPARM              talk dirrty and exit if not
         MVC   PWUPUSER(8),PWUPUSER-STRTPWUP(R1) get user
         MVC   PWUPPSWD(8),PWUPPSWD-STRTPWUP(R1) get new password
         XC    0(LPWUP,R1),0(R1)   clear ICHSFR00 parmlist storage
         FREEMAIN RU,LV=LPWUP,A=ADDRESS,SP=227 free parmlist storage
         ENQ    (SECURITY,USERS,E,,SYSTEM),RET=HAVE serialization
         OPEN  (QUEUE,(OUTPUT))    open password change queue
         PUT   QUEUE,PWUP          write entry
         CLOSE (QUEUE)             close password change queue
         DEQ   (SECURITY,USERS,,SYSTEM) release ENQ
         MVC   SUCCESS+38(8),PWUPUSER move user into success message
         WTO   MF=(E,SUCCESS)      tell operator
*
* return
*
RETURN   MODESET MODE=PROB,KEY=NZERO return to problem state
         L     R13,SAVEAREA+4      get caller's savearea
         RETURN (14,12),,RC=0      return
INVPARM  WTO   'RAKF006W invalid password update request ignored'
         B     RETURN
*
* data area
*
STRTPWUP DC    AL2(LPWUPCMD)       parameter list that must have been..
         DC    X'0000'               .. used to start this RAKFPWUP ..
         DC    C'S RAKFPWUP,PARM=''' .. run. This is used to perform ..
ADDRHEX  DS    CL8                   .. a validity check of the CSA ..
         DC    C''''                 .. storage addressed through ..
LPWUPCMD EQU   *-STRTPWUP            .. the PARM field
PWUP     DS    0C                  changes queue record
PWUPUSER DC    CL8' '              userid
         DC    C' '                filler
PWUPPSWD DC    CL8' '              new password
         DC    C' '                filler
CHGLRECL EQU   *-PWUP              record length of changes queue
LPWUP    EQU   *-STRTPWUP          total length of CSA area
ADDRUNPK DS    CL8                 unpacked address
         DC    X'C0'               sign and dummy digit
ADDRESS  DS    F                   packed address
         DS    X                   dummy digit and sign after pack
SECURITY DC     CL8'CJYRCVT'       resource name for ENQ
USERS    DC     CL8'CJYUSRS'       resource name for ENQ
QUEUE    DCB   DDNAME=RAKFPWUP,MACRF=PM,DSORG=PS password change queue
SUCCESS  WTO   'RAKF007I password update for user UUUUUUUU queued',MF=L
*                 0 1 2 3 4 5 6 7 8 9 A B C D E F
HEXTBL   DC    X'00000000000000000000000000000000' 0
         DC    X'00000000000000000000000000000000' 1
         DC    X'00000000000000000000000000000000' 2
         DC    X'00000000000000000000000000000000' 3
         DC    X'00000000000000000000000000000000' 4
         DC    X'00000000000000000000000000000000' 5 translate table
         DC    X'00000000000000000000000000000000' 6 to convert CSA
         DC    X'00000000000000000000000000000000' 7 address from PARM
         DC    X'00000000000000000000000000000000' 8 field to zoned
         DC    X'00000000000000000000000000000000' 9 format
         DC    X'00000000000000000000000000000000' A
         DC    X'00000000000000000000000000000000' B
         DC    X'00FAFBFCFDFEFF000000000000000000' C
         DC    X'00000000000000000000000000000000' D
         DC    X'00000000000000000000000000000000' E
         DC    X'F0F1F2F3F4F5F6F7F8F9000000000000' F
*
* equates
*
         YREGS                     register equates
         END   RAKFPWUP            end of program
