         MACRO
&NAME    CONFIGUR &CORE=16,&PC=NO,&INQDISP=NO,&GDU=,&FUNCERR=,&ENDERR=,X
               &MONERR=,&GETID=,&STORID=,&IDCOUNT=
         GBLA  &IECGID,&IECIDTF
.*             IECGID    NUMBER OF GDU IDENTIFIERS
.*             IECIDTF   SIZE OF GDU IDENTIFIER TABLE
         GBLB  &IECSW(9),&IECSEQ(10)                              21094
.*             IECSW(1)    GBL SWITCH INDICATING  CORE SIZE
.*             IECSEQ(1)   SEQUENCE INDICATOR
.*             IECSW(9) ON INDICATES PULSE COUNT                  21094
         GBLB  &IECIN,&IECSQ(7)
.*             IECIN    INDICATES INQUIRY DISPLAY IN SYSTEM
         GBLB  &IECGDSW
.*             IECGDSW  INDICATES GDU=YES CODED
         LCLA  &A,&B,&C
         LCLB  &INVSW(16)
         LCLB  &PRESW(16)
         LCLB  &MONSW(16)
         LCLB  &NCODE
         LCLC  &CHAR
&IECSEQ(1) SETB 1
         AIF   (&IECSEQ(1) AND NOT&IECSEQ(2) AND NOT&IECSEQ(3) AND NOT X
               &IECSEQ(4) AND NOT&IECSEQ(5) AND NOT &IECSEQ(6)).SEQOK
.SEQ2    ANOP
&NCODE   SETB  1
         MNOTE 12,'MACRO SEQUENCE ERROR'
         AGO   .SEQ1
.SEQOK   ANOP
         AIF   (NOT &IECSQ(1) AND NOT &IECSQ(2) AND NOT &IECSQ(3) AND  X
               NOT &IECSQ(4) AND NOT &IECSQ(5)).SEQ5
         AGO   .SEQ2
.SEQ5    ANOP
         AIF   (NOT &IECSQ(6)).SEQ1
         AGO   .SEQ2
.SEQ1    ANOP
&IECSW(1) SETB (&CORE EQ 32)
         AIF   (&CORE EQ 16 OR &CORE EQ 32).OKCORE
&NCODE   SETB  1
         MNOTE 12,'CORE=&CORE INCORRECTLY SPECIFIED'
.OKCORE  AIF   ('&PC' EQ 'NO' OR '&PC' EQ 'YES').OKPC             21094
         AIF   (T'&PC EQ 'O').OKPC                                21094
&NCODE   SETB  1                                                  21094
         MNOTE 12,'PC=&PC INCORRECTLY SPECIFIED'                  21094
.OKPC    AIF   ('&PC' NE 'YES').NOTPC                             21094
         AIF   (NOT&IECSW(1)).NOTPC1                              21094
&IECSW(9) SETB 1                                                  21094
         AGO   .NOTPC                                             21094
.NOTPC1  ANOP                                                     21094
         AIF   (&IECSW(1)).NOTPC                                  21094
         MNOTE 12,'CORE=32 IS REQUIRED IF PC=YES'                 21094
&NCODE   SETB  1                                                  21094
.NOTPC   ANOP
         AIF   (T'&INQDISP EQ 'O').OKIN1
&IECIN   SETB  ('&INQDISP' EQ 'YES')
         AIF   ('&INQDISP' EQ 'NO' OR '&INQDISP' EQ 'YES').OKIN
&NCODE   SETB  1
         MNOTE 12,'INQDISP=&INQDISP INCORRECTLY SPECIFIED'
.OKIN    ANOP
         AIF   ('&INQDISP' NE 'YES').OKIN1
         AIF   (&CORE EQ 32).OKIN1
&NCODE   SETB  1
         MNOTE 12,'CORE=32 IS REQUIRED IF INQDISP=YES'
.OKIN1   ANOP
         AIF   ('&GDU' EQ 'NO' OR '&GDU' EQ 'YES').OKGDU
         AIF   (T'&GDU EQ 'O').OKGDU
&NCODE   SETB  1
         MNOTE 12,'GDU=&GDU INCORRECTLY SPECIFIED'
.OKGDU   ANOP
         AIF   ('&GDU' NE 'YES').NOTGDU
&IECGDSW SETB  1
.NOTGDU  ANOP
&C       SETA  N'&FUNCERR
         AIF   (T'&FUNCERR EQ 'O' AND &C EQ 0).PRET
         AIF   (&IECGDSW).FINE
&NCODE   SETB  1
         MNOTE 12,'GDU=YES MUST BE CODED IF FUNCERR IS CODED'
.FINE    ANOP
         AIF   (&C GE 1 AND &C LE 16).INV
&NCODE   SETB  1
         MNOTE 12,'NUMBER OF SUBOPERANDS IN FUNCERR OPERAND            X
               INVALID'
.INV     ANOP
&B       SETA  1
.INV3    ANOP
         AIF   (T'&FUNCERR(&B) EQ 'N').INV1
&NCODE   SETB  1
&CHAR    SETC  '&FUNCERR(&B)'
         MNOTE 12,'FUNCERR SUBOPERAND = &CHAR INVALID'
         AGO   .INV19
.INV1    ANOP
         AIF   (&FUNCERR(&B) GE 1 AND &FUNCERR(&B) LE 16).INV2
&NCODE   SETB  1
&CHAR    SETC  '&FUNCERR(&B)'
         MNOTE 12,'FUNCERR SUBOPERAND = &CHAR NOT IN VALID RANGE OF 1  X
               TO 16'
         AGO   .INV19
.INV2    ANOP
&A       SETA  &FUNCERR(&B)
&INVSW(&A) SETB 1
.INV19   ANOP
         AIF   (&B EQ &C).PRET     IF LAST SUBOPERAND,BRANCH
&B       SETA  &B+1
         AGO   .INV3    CONTINUE CHECKING GINVFCT OPERAND
.PRET    ANOP
&C       SETA  N'&ENDERR
         AIF   (T'&ENDERR EQ 'O' AND &C EQ 0).MON
         AIF   (&IECGDSW).FINE1
&NCODE   SETB  1
         MNOTE 12,'GDU=YES MUST BE CODED IF ENDERR OPERAND CODED'
.FINE1   ANOP
         AIF   (&C GE 1 AND &C LE 16).PRET1
&NCODE   SETB  1
         MNOTE 12,'NUMBER OF SUBOPERANDS IN ENDERR OPERAND INVALID'
.PRET1   ANOP
&B       SETA  1
.PRET2   ANOP
         AIF   (T'&ENDERR(&B) EQ 'N').PRET3
&NCODE   SETB  1
&CHAR    SETC  '&ENDERR(&B)'
         MNOTE 12,'ENDERR SUBOPERAND = &CHAR INVALID'
         AGO   .PRET20
.PRET3   ANOP
         AIF   (&ENDERR(&B) GE 1 AND &ENDERR(&B) LE 16).PRET4
&NCODE   SETB  1
&CHAR    SETC  '&ENDERR(&B)'
         MNOTE 12,'ENDERR SUBOPERAND = &CHAR NOT IN VALID RANGE OF     X
               1 TO 16'
         AGO   .PRET20
.PRET4   ANOP
&A       SETA  &ENDERR(&B)
&PRESW(&A) SETB 1
.PRET20  ANOP
         AIF   (&B EQ &C).MON    IF LAST SUBOPERAND,BRANCH
&B       SETA  &B+1
         AGO   .PRET2         CONTINUE CHECKING GPRETRM OPERAND
.MON     ANOP
&C       SETA  N'&MONERR
         AIF   (T'&MONERR EQ 'O' AND &C EQ 0).IDCOUNT            YM0972
         AIF   (&IECGDSW).FINE2
&NCODE   SETB  1
         MNOTE 12,'GDU=YES MUST BE CODED IF MONERR OPERAND CODED'
.FINE2   ANOP
         AIF   (&C GE 1 AND &C LE 16).MON1
&NCODE   SETB  1
         MNOTE 13,'NUMBER OF SUBOPERANDS IN MONERR OPERAND INVALID'
.MON1    ANOP
&B       SETA  1
.MON2    ANOP
         AIF   (T'&MONERR(&B) EQ 'N').MON3
&NCODE   SETB  1
&CHAR    SETC  '&MONERR(&B)'
         MNOTE 12,'MONERR SUBOPERAND = &CHAR INVALID'
         AGO   .MON20
.MON3    ANOP
         AIF   (&MONERR(&B) GE 1 AND &MONERR(&B) LE 16).MON4
&NCODE   SETB  1
&CHAR    SETC  '&MONERR(&B)'
         MNOTE 12,'MONERR SUBOPERAND = &CHAR NOT IN VALID RANGE OF     X
               1 TO 16'
         AGO   .MON20
.MON4    ANOP
&A       SETA  &MONERR(&B)
&MONSW(&A) SETB 1
.MON20   ANOP
         AIF   (&B EQ &C).IDCOUNT   IF LAST SUBOPERAND,BRANCH    YM0972
&B       SETA  &B+1
         AGO   .MON2
.IDCOUNT ANOP                                                    YM0972
         AIF   (T'&IDCOUNT EQ '0').LIST1   BYPASS CHECKING       YM0972
         AIF   (&IDCOUNT EQ 0).LIST1       STORE ID, GET ID      YM0972
         AIF   (&IECGDSW).GETID            BR IF GDU=YES         YM0972
&NCODE   SETB  1                                                 YM0972
         MNOTE 12,'GDU=YES MUST BE CODED IF IDCOUNT IS CODED'    YM0972
.GETID   ANOP
         AIF   (T'&GETID EQ 'O').L                               YM0972
         AIF   (&IECGDSW).FINE3
&NCODE   SETB  1
         MNOTE 12,'GDU=YES MUST BE CODED IF GETID IS CODED'
.FINE3   ANOP
&A       SETA  0
.FINE3A  ANOP
&A       SETA  &A+1
         AIF   ('&GETID' EQ '*616B6F7A7B7C7E7F7F7F7F7F'(2*&A,2)).ST
         AIF   ('&GETID' EQ '*051525404B4E505A5B5C5E60'(2*&A,2)).ST
         AIF   ('&GETID' EQ '*D6D7D8D9E2E3E4E5E6E7E8E9'(2*&A,2)).ST
         AIF   ('&GETID' EQ '*C3C4C5C6C7C8C9D1D2D3D4D5'(2*&A,2)).ST
         AIF   ('&GETID' EQ '*F0F1F2F3F4F5F6F7F8F9C1C2'(2*&A,2)).ST
         AIF   (&A LT 12).FINE3A
&NCODE   SETB  1
         MNOTE 12,'GETID OPERAND INVALID'
.ST      ANOP
.STORID  ANOP
         AIF   (T'&STORID EQ 'O').L                              YM0972
         AIF   (&IECGDSW).FINE4
&NCODE   SETB  1
         MNOTE 12,'GDU=YES MUST BE CODED IF STORID OPERAND CODED'
.FINE4   ANOP
&A       SETA  0
.FINE4A  ANOP
&A       SETA  &A+1
         AIF   ('&STORID' EQ '*616B6F7A7B7C7E7F7F7F7F7F'(2*&A,2)).L
         AIF   ('&STORID' EQ '*051525404B4E505A5B5C5E60'(2*&A,2)).L
         AIF   ('&STORID' EQ '*D6D7D8D9E2E3E4E5E6E7E8E9'(2*&A,2)).L
         AIF   ('&STORID' EQ '*C3C4C5C6C7C8C9D1D2D3D4D5'(2*&A,2)).L
         AIF   ('&STORID' EQ '*F0F1F2F3F4F5F6F7F8F9C1C2'(2*&A,2)).L
         AIF   (&A LT 12).FINE4A
&NCODE   SETB  1
         MNOTE 12,'STORID OPERAND INVALID'
.L       ANOP
.FINE5   ANOP
         AIF   (T'&GETID NE 'O' AND T'&STORID NE 'O').LIST1
&NCODE   SETB  1
         MNOTE 12,'GETID AND STORID OPERANDS MUST BOTH BE CODED IF     X
               IDCOUNT IS NOT OMITTED OR 0'
.LIST1   ANOP
         AIF   (T'&IDCOUNT EQ 'O').LIST1C
         AIF   (T'&IDCOUNT EQ 'N').LIST1A
&NCODE   SETB  1
         MNOTE 12,'IDCOUNT OPERAND HAS INVALID TYPE ATTRIBUTE'
         AGO   .LIST1C
.LIST1A  ANOP
         AIF   (&IDCOUNT GE 0 AND &IDCOUNT LE 100).LIST1B
&NCODE   SETB  1
         MNOTE 12,'IDCOUNT OPERAND NOT IN VALID RANGE OF 0 TO 100'
         AGO   .LIST1C
.LIST1B  ANOP
&IECGID  SETA  &IDCOUNT
.LIST1C  ANOP
         AIF   ('&GDU' NE 'YES').LIST2
         AIF   (&IECSW(1)).LIST2
&NCODE   SETB  1
         MNOTE 12,'CORE=32 MUST BE CODED IF GDU=YES IS CODED'
.LIST2   ANOP
         AIF   (NOT &NCODE).ALLOK
         MNOTE 12,'TEXT GENERATION SUPRESSED'
&IECSEQ(1) SETB 0                                                 21094
         MEXIT
.ALLOK   ANOP
&B       SETA  16384
&A       SETA  1280
         AIF   (NOT &IECSW(1)).NOADD
&B       SETA  &B*2
&A       SETA  &A+2816
.NOADD   ANOP
&A       SETA  &B-&A
&CHAR    SETC  'BT'
         AIF   ('&NAME' EQ '').NOSET
         AIF   (K'&NAME GT 1).SETC
&CHAR    SETC  'B'.'&NAME'(1,1)
         AGO   .NOSET
.SETC    ANOP
&CHAR    SETC  '&NAME'(1,2)
.NOSET   ANOP
&CHAR.PC TITLE '*****         2715 TABLES         *****'
IEC15TAB CSECT
         ORG   *+&A
         SPACE 1
*                  TABLE DEFINITION BLOCK
         SPACE 1
IECTBBGN DC    YL2(IECTBEND-IECTBBGN)  LENGTH OF TABLES
         DC    YL2(IECASSEQ-IEC15TAB) AREA STATION SEQUENCE TABLE ADDR
         DC    YL2(IECASTBL-IEC15TAB) AREA STATIONTABLE ADDR
         DC    YL2(IECFTGRP-IEC15TAB) FIRST TRANSACTION GROUP ADDR
         DC    YL2(IECDENDX-IEC15TAB) DATA ENTRY UNIT INDEX TABLE ADDR
         DC    YL2(IECDEUTB-IEC15TAB) DATA ENTRY UNIT TABLE ADDR
         DC    YL2(IECDESEQ-IEC15TAB) DATA ENTRY UNIT SEQ TABLE ADDR
         DC    YL2(IECFTRLA-IEC15TAB) FIRST TRANSACTION LIST ADDR
         AIF   (NOT&IECSW(9)).SKIP                                21094
         DC    YL2(IECASCTB-IEC15TAB)      AREA STATION COUNTER TABLE
         DC    YL2(IECCTRGR-IEC15TAB)  COUNTER TABLE ADDR         21094
         DC    YL2(IECSCHED-IEC15TAB)  SCHEDULE TABLE ADDR        21094
         AGO   .MEND1
.SKIP    ANOP                                                     21094
         DC    YL2(0) NULL BECAUSE PC=NO                          21094
.MEND1   ANOP
         AIF   (NOT &IECIN).INQENT
         DC    YL2(IECINDS-IEC15TAB-128) INQ DISP CONTROL TABLE
         AGO   .MEND2
.INQENT  ANOP
        DC    YL2(0)    NULL BECAUSE INQDISP=NO
.MEND2   ANOP
         AIF   (NOT &IECGDSW).MEND4
         DC    YL2(IECGDSEQ-IEC15TAB) GDU SEQUENCE TABLE POINTER
         DC    B'&INVSW(1)&INVSW(2)&INVSW(3)&INVSW(4)&INVSW(5)&INVSW(6)X
               &INVSW(7)&INVSW(8)'   FIRST BYTE OF FUNCTION  ERR GUID
         DC    B'&INVSW(9)&INVSW(10)&INVSW(11)&INVSW(12)&INVSW(13)&INVSX
               W(14)&INVSW(15)&INVSW(16)' BYTE 2 OF FUNCT ERROR GUID
         DC    B'&MONSW(1)&MONSW(2)&MONSW(3)&MONSW(4)&MONSW(5)&MONSW(6)X
               &MONSW(7)&MONSW(8)' MONITOR KEY ERROR GUIDANCE
         DC    B'&MONSW(9)&MONSW(10)&MONSW(11)&MONSW(12)&MONSW(13)&MONSX
               W(14)&MONSW(15)&MONSW(16)' MONITOR KEY ERROR GUIDANCE
         DC    B'&PRESW(1)&PRESW(2)&PRESW(3)&PRESW(4)&PRESW(5)&PRESW(6)X
               &PRESW(7)&PRESW(8)' PREMATURE END ERROR GUIDANCE
         DC    B'&PRESW(9)&PRESW(10)&PRESW(11)&PRESW(12)&PRESW(13)&PRESX
               W(14)&PRESW(15)&PRESW(16)'  PREMATURE END ERROR GUIDANCE
         DC    YL2(IECGDTRN-IEC15TAB) TRANSACTION TABLE ADDRESS
         DC    YL2((IECPARLN-IEC15TAB)-2) PARAM LIST NO TABLE ADDR
         AIF   (T'&IDCOUNT EQ 'O').TAB1
         DC    YL2(IECIDENT-IEC15TAB)  IDENDIFIER TABLE POINTER
         AGO   .TAB2
.TAB1    ANOP
         DC    YL2(0)    NULL IDENTIFIER TABLE POINTER
.TAB2    ANOP
         DC    YL2(IECTRANS-IEC15TAB)  TRANSLATE TABLE POINTER
         DC    YL2(IECGDUAS-IEC15TAB)  GDU AREA STATION TABLE POINTER
         AIF   (T'&GETID EQ 'O').TAB3
         DC    XL1'&GETID'      GET IDENTIFIER CHARACTER
         AGO   .TAB4
.TAB3    DC    YL1(0)   NULL GET IDENTIFIER CHARACTER
.TAB4    AIF   (T'&STORID EQ 'O').TAB5
         DC    XL1'&STORID'      STORE  IDENTIFIER CHARACTER
         AGO   .TAB6
.TAB5    DC    YL1(0)   NULL STORE IDENTIFIER CHARACTER
.TAB6    DC    YL1(256+(IECGDTRN-IECPARLN))
         AIF   (T'&IDCOUNT EQ 'O').TAB7
         DC    YL1(&IDCOUNT)
         AGO   .TAB8
.TAB7    DC    YL1(0)
.TAB8    ANOP
         AIF   (T'&IDCOUNT EQ 'O').MEND
&A       SETA  &IDCOUNT
&B       SETA  1
         SPACE 1
*                        GUIDANCE DISPLAY UNIT IDENTIFIER TABLE
         SPACE 1
IECIDENT EQU   *
         AIF   (&A EQ 0).MEND
&IECIDTF SETA  &IECIDTF+14
         DC    X'0D'
         DC    C'NOT USED     '
.TAB9    ANOP
         AIF   (&B EQ &A).MEND
&IECIDTF SETA  &IECIDTF+14
         DC    X'0D'
         DC    C'NOT USED     '
&B       SETA  &B+1
         AGO   .TAB9
.MEND4   ANOP
         DC    YL2(0)   NULL BECAUSE GDU=NO
.MEND    MEND
