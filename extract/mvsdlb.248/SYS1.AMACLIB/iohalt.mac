         MACRO
&NAME    IOHALT  &UCB,&OFFSET
.**********************************************************************
.*                     IOHALT MACRO
.*  OS/VS2
.*  FUNCTION:
.*       SETS UP REGISTERS 0 & 1 IN FORMAT REQUIRED BY SVC33
.*
.*  MACRO CALL:
.*       LABEL  IOHALT &UCB,&OFFSET
.*
.*       WHERE:
.*             LABEL - OPTIONAL LABEL
.*
.*             &UCB = (REGISTER), SYMBOLIC OR ABSOLUTE, WHICH
.*                    CONTAINS THE ADDRESS OF THE UCB COMMON SEGMENT
.*                                     -OR-
.*                    LABEL OF UCB COMMON SEGMENT (LA WILL BE DONE)
.*
.*             &OFFSET = (REGISTER), SYMBOLIC 0,2-15 OR ABSOLUTE 0-15,
.*                    WHICH CONTAINS THE OFFSET FROM THE IOB TO THE
.*                    CCW TO BE MODIFIED TO A NOP
.*                                     -OR-
.*                    VALUE, SYMBOLIC OR ABSOLUTE, OF THE OFFSET FROM
.*                    THE IOB TO THE CCW TO BE MODIFIED TO A NOP (LA
.*                    WILL BE DONE)
.*
.*             NOTE:
.*                  &UCB MUST BE SUPPLIED
.*
.*                  &OFFSET IS OPTIONAL.
.*                       IF CODED, SVC33 WILL CALL THE EXCP
.*                       MODIFY ROUTINE. OTHERWISE, SVC33 WILL
.*                       CALL THE IOS HALT I/O ROUTINE.
.*
.*                  IF THE OFFSET PARAMETER IS CODED USING A SYMBOLIC
.*                  REGISTER 1, AN ASSEMBLY ERROR WILL OCCUR.
.*
.*  OUTPUT:
.*       REGISTER 0 - CONTAINS THE UCB COMMON SEGMENT ADDRESS
.*
.*       REGISTER 1 -
.*             BYTE 0-1 = IOB OFFSET (IF SUPPLIED) OR ZERO
.*             BYTE   2 = ZERO (RESERVED)
.*             BYTE   3 = OPTION INDICATOR
.*                        X'01' - USE IOS HALT I/O ROUTINE
.*                                (&OFFSET NOT CODED)
.*                        X'81' - USE EXCP MODIFY ROUTINE
.*                                (&OFFSET WAS CODED)
.*
.*      SVC 33 ISSUED
.*
.*  CHANGE ACTIVITY
.*   A-000000-999999                                           @ZA43366
.*
.**********************************************************************
         MNOTE 0,'***THIS VERSION OF THE IOHALT MACRO USES THE ALTERNATX
               E INTERFACE          TO SVC 33 ***'
* IOHALT - THIS MACRO SETS UP REGISTERS 0 AND 1 FOR SVC33 AS FOLLOWS:
*          REGISTER 0 - UCB COMMON SEGMENT ADDRESS (1ST PARAMETER)
*          REGISTER 1 - IOB OFFSET, IF SUPPLIED (2ND PARAMETER)
*                       AND OPTION INDICATOR (GENERATED BY MACRO BASED
*                       ON WHETHER THE 2ND POSITIONAL PARAMETER WAS
*                       SUPPLIED)
*
         AIF   ('&UCB' EQ '').E1        ERROR IF UCB PARM NOT SUPPLIED
         AIF   ('&NAME' EQ '').CHKUCB
&NAME    DS    0H
.CHKUCB  ANOP
         AIF   ('&OFFSET' NE '').MODOPT IF MODIFY OPTION,GO TO MOD RTN
.* ****** IOHALT  ONLY, PROCESSED HERE
         AIF   ('&UCB' EQ '(0)').HALTCD  UCB ALREADY IN REG 0
         AIF   ('&UCB'(1,1) EQ '(').HALTREG  UCB IN REGISTER
         LA    0,&UCB               PUT UCB ADDRESS IN REG0
         AGO   .HALTCD
.HALTREG ANOP
         LR    0,&UCB(1)            PUT UCB ADDRESS IN REG0
.HALTCD  ANOP
         LA    1,1(0)               TURN ON LOW ORDER BIT TO           X
                                    INDICATE IOHALT REQUESTED
         SVC   33                   ISSUE IOHALT SVC
         MEXIT
.* MODIFY OPTION REQUESTED
.*
.*    **** BECAUSE IT MAY NOT BE POSSIBLE TO DETERMINE IF THE UCB
.*    **** IS BEING PASSED IN REG1 AND/OR THE OFFSET IN REG0 (WHICH
.*    **** WAS THE OLD INTERFACE TO SVC33), THE REGS ARE
.*    **** FIRST SET UP IN THE OLD FORMAT (IE. UCB IN REG1 AND
.*    **** OFFSET IN REG0) AND THEN EXCHANGED.
.*    **** BEFORE THIS IS DONE THOUGH, CHECKS ARE MADE TO DETERMINE
.*    **** IF THE PARAMETERS CAN BE PUT DIRECTLY INTO THE NEW
.*    **** PARAMETER REGISTERS (IE. UCB IN REG0, OFFSET IN REG1)
.*    **** IN ORDER TO AVOID THE EXTRA CODE CAUSED BY THE XR'S.
.MODOPT  ANOP
         AIF   ('&UCB' EQ '(1)' AND '&OFFSET' EQ '(0)').XCHNG
         AIF   ('&UCB' EQ '(0)' AND '&OFFSET' EQ '(1)').MODCD
.*                             PARAMETERS ALREADY SET UP
         AIF   ('&UCB'(1,1) EQ '('  OR '&OFFSET'(1,1)  EQ '(').MOD010
.* ******************
.*    **** THIS SECTION HANDLES THE CASE WHERE NEITHER PARAMETER IS
.*         IN A REGISTER
.* ******************
         LA    0,&UCB               PUT UCB ADDRESS IN REG0
         LA    1,&OFFSET            PUT OFFSET IN REG1
         AGO   .MODCD
.MOD010  ANOP                   AT LEAST ONE PARAMETER IS IN A REGISTER
         AIF   ('&UCB' NE '(0)').MOD020
.* ******************
.*    **** UCB ALREADY IN REG0, PUT OFFSET IN REG1
.* ******************
         AIF   ('&OFFSET'(1,1) EQ '(').MOD015 CHECK IF OFFSET IN REG
         LA    1,&OFFSET            PUT OFFSET IN REG1
         AGO   .MODCD
.MOD015  ANOP
         LR    1,&OFFSET(1)         PUT OFFSET IN REG1
         AGO   .MODCD
.MOD020  ANOP
         AIF   ('&UCB'(1,1) NE '(' OR '&OFFSET'(1,1) EQ '(').MOD030
.* ******************
.*    **** UCB IN REG AND OFFSET NOT IN REG
.* ******************
         LR    0,&UCB(1)            PUT UCB ADDRESS IN REG0
         LA    1,&OFFSET            PUT OFFSET IN REG1
         AGO   .MODCD
.MOD030  ANOP
         AIF   ('&OFFSET' NE '(1)').MOD040  CHECK IF OFFSET IN R1
.* ******************
.*    **** OFFSET ALREADY IN REG1, PUT UCB IN REG0
.* ******************
         AIF   ('&UCB'(1,1) EQ '(').MOD035  UCB IN REG
         LA    0,&UCB               PUT UCB ADDRESS IN REG0
         AGO   .MODCD
.MOD035  ANOP
         LR    0,&UCB(1)            PUT UCB ADDRESS IN REG0
         AGO   .MODCD
.MOD040  ANOP CHECK TO SEE IF OFFSET IN ABSOLUTE REG 2-15
         AIF   ('&OFFSET' EQ '(2)').MOD050
         AIF   ('&OFFSET' EQ '(3)').MOD050
         AIF   ('&OFFSET' EQ '(4)').MOD050
         AIF   ('&OFFSET' EQ '(5)').MOD050
         AIF   ('&OFFSET' EQ '(6)').MOD050
         AIF   ('&OFFSET' EQ '(7)').MOD050
         AIF   ('&OFFSET' EQ '(8)').MOD050
         AIF   ('&OFFSET' EQ '(9)').MOD050
         AIF   ('&OFFSET' EQ '(10)').MOD050
         AIF   ('&OFFSET' EQ '(11)').MOD050
         AIF   ('&OFFSET' EQ '(12)').MOD050
         AIF   ('&OFFSET' EQ '(13)').MOD050
         AIF   ('&OFFSET' EQ '(14)').MOD050
         AIF   ('&OFFSET' EQ '(15)').MOD050
         AGO   .MOD090 OFFSET NOT ABSOLUTE REG 2-15
.MOD050  ANOP
.* ******************
.*    **** OFFSET SPECIFIED BY AN ABSOLUTE REG IN RANGE OF 2-15
.* ******************
         AIF   ('&UCB'(1,1) EQ '(').MOD052  UCB IN REG
         LA    0,&UCB               PUT UCB ADDRESS IN REG0
         AGO   .MOD054
.MOD052  ANOP
         LR    0,&UCB(1)            PUT UCB ADDRESS IN REG0
.MOD054  ANOP
         LR    1,&OFFSET(1)         PUT OFFSET IN REG1
         AGO   .MODCD
.MOD090  ANOP
.* ******************
.*     **** COULD NOT PUT PARAMETERS IN NEW REGISTER FORMAT
.*     **** DIRECTLY, SO PUT IN OLD FORMAT AND THEN EXCHANGE.
.* ******************
         AIF   ('&UCB'(1,1) EQ '(').UREG   UCB IN REG
         LA    1,&UCB               PUT UCB ADDRESS IN REG1
         AGO   .CHKOFF              EXCHANGE REGS
.UREG    ANOP
         AIF   ('&UCB' EQ '(1)').CHKOFF  UCB ALREADY IN REG1
         LR    1,&UCB(1)            PUT UCB ADDRESS IN REG1
.CHKOFF  ANOP
         AIF   ('&OFFSET'(1,1) EQ '(').OREG  IS OFFSET IN A REGISTER
         LA    0,&OFFSET            PUT OFFSET IN REG0
         AGO   .XCHNG
.OREG    ANOP
         AIF   ('&OFFSET' EQ '(0)').XCHNG  OFFSET ALREADY IN REG0
***************
*              NOTE:IF THE IOB OFFSET IS BEING PASSED TO IOHALT IN
*              REGISTER 1, AN ABSOLUTE REGISTER MUST BE CODED ON THE
*              MACRO INVOCATION FOR THIS PARAMETER.
***************
         LR    0,&OFFSET(1)         PUT OFFSET IN REG0
         DC    0AL4(X'7FFFFFFF'*(16*((&OFFSET(1)+16)/17)*(17/(&OFFSET+1X
               6))))
*              IF THE OFFSET IS PASSED IN A SYMBOLIC REG1,THIS DC WILL
*              CAUSE AN ASSEMBLER ERROR
.XCHNG   ANOP
         XR    1,0                  EXCHANGE REG1 AND REG0
         XR    0,1
         XR    1,0
.MODCD   ANOP
         SLL   1,16                 SHIFT IOB OFFSET INTO              X
                                    HIGH ORDER TWO BYTES
         IC    1,*+8                INDICATE MODIFY OPTION             X
                                    TO BE USED
         B     *+6                  BRANCH AROUND CONSTANT
         DC    X'81'                CONSTANT TO INDICATE               X
                                    MODIFY OPTION
         DC    X'00'                UNUSED BYTE
         SVC   33                   ISSUE IOHALT SVC
         MEXIT
.E1      IHBERMAC  1
         MEND
