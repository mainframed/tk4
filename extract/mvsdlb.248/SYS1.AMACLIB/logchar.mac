         MACRO
&NAME    LOGCHAR &APPLID=,&SEQNCE=
.* GLOBAL CMZELOG IS USED TO CONTROL THE ORDER OF THE MACROS
.* LOCAL IN1      IS A GENERAL STRING INDEX
.* LOCAL COUNT    IS  THE NUMBER OF CHARACTERS IN SEQNCE STRING
.* LOCAL ERRBIT   IS A GENERAL ERROR BIT. IS 1 IF ANY ERRORS ARE
.*                DETECTED BY THE MACRO
.* LOCAL ROUTBIT  IS 1 FOR ROUTINES, AND 0 FOR APPILICIDS. AS
.*                SPECIFIED IN THE APPLID PARAMETER
.* LOCAL TRANBIT  IS 0 SINCE TSEQNCE WAS DELETED - DCR K1769
.* LOCAL ERRCHAR  IS USED AS A GENERAL ERROR MESSAGE STRING
.* LOCAL QUOTE    IS SET TO NULL OR TO ONE QUOTE DEPENDING ON
.*                WHETHER SEQNCE IS A QUOTED STRING
.* LOCAL ONEQUOT  IS USED AS A SINGLE QUOTE CONSTANT
.* LOCAL ONEAMPR  IS SET TO A CONSTANT OF ONE AMPERSAND
.* LOCAL OPARM    IS USED AS A LEFT PARENTHESIS CONSTANT
.* LOCAL CPARM    IS USED AS A RIGHT PARENTHESIS CONSTANT
.* LOCAL K1       IS SET TO THE CHARACTER STRING 'BL1'
.* LOCAL K2       IS SET TO THE CHARACTER STRING '0'
.* LOCAL K3       IS SET TO THE CHARACTER STRING '00000'      @ZTR5599
.* LOCAL K4       IS SET TO THE CHARACTER STRING 'CL'
.* LOCAL K5       IS SET TO THE CHARACTER STRING 'CL8' OR 'VL3'
         GBLB  &CMZELOG(2)
         LCLA  &IN1,&COUNT
         LCLB  &ERRBIT,&ROUTBIT,&TRANBIT
         LCLC  &ERRCHAR,&QUOTE,&ONEQUOT,&ONEAMPR,&OPAREN,&CPAREN
         LCLC  &K1,&K2,&K3,&K4,&K5
&ONEQUOT SETC  ''''
&ONEAMPR SETC  '&&'
&OPAREN  SETC  '('
&CPAREN  SETC  ')'
         AGO   .ONW00
* /* START OF SPECIFICATIONS ****
*
*01*  MODULE-NAME = LOGCHAR
*
*01*  DESCRIPTIVE-NAME = LOGON CHARACTERISTICS TABLE ELEMENT MACRO
*
*01*  COPYRIGHT = XXXX-XXX COPYRIGHT IBM CORP 1973
*
*01*  STATUS = RELEASE 1
*
*01*  FUNCTION = CREATES INDIVIDUAL ENTRIES IN A LOGON CHARACTERISTICS
*     TABLE. IT IS USED WITH INTAB AND ENDINTAB MACROS.
*
*01*  NOTES = THE FOLLOWING MNOTES ARE ISSUED
*        8,'CARDS OUT OF SEQUENCE'
*        8,'NAME ''&NAME'' IS LONGER THAN EIGHT CHARACTERS'
*        8,'''&ERRCHAR IS INVALID CHARACTER IN NAME ''&NAME'''
*        8,'LOGCHAR SHOULD HAVE NO POSITIONAL OPERANDS'
*        8,'APPLID IS A REQUIRED KEYWORD'
*        8,'MISMATCHED QUOTES IN SEQNCE'
*        8,'MISMATCHED AMPERSANDS IN SEQNCE'
*        8,'TOTAL SEQNCE LENGTH OF ''&IN1'' EXCEEDS 225'
*        8,'APPLID SHOULD BE A SUBLIST WITH TWO ARGUMENTS'
*        8,'''&APPLID(1)'' IS AN INVALID APPLID VALUE'
*        8,'NAME IN APPLID CANNOT BE BLANK'
*        8,'''&ERRCHAR'' IS INVALID CHARACTER IN APPLID NAME'
*        8,'APPLID NAME IS LONGER THAN EIGHT CHARACTERS'
*        8,'MISMATCHED QUOTES IN TSEQNCE'
*        8,'MISMATCHED AMPERSANDS IN TSEQNCE'
*        8,'TOTAL TSEQNCE LENGTH OF ''&IN1'' EXCEEDS 225'
*
*02*    CHARACTER-CODE-DEPENDENCIES = EBCDIC
*
*02*    DEPENDENCIES = NONE
*
*02*    RESTRICTIONS = VTAM MAPPING MACRO
*
*02*    REGISTER-CONVENTIONS = NONE, LIST FORM
*
*02*    PATCH-LABEL = NONE
*
*01*  MODULE-TYPE = MACRO
*
*02*    PROCESSOR = ASSEMBLER
*
*02*    MACRO-SIZE = 210 STATEMENTS
*
*02*    ATTRIBUTES = LIST
*
*01*  ENTRY-POINT = NA
*
*01*  EXIT-NORMAL = NA
*
*01*  EXIT-ERROR = NA
*
*01*  EXTERNAL-REFERENCES = AS-FOLLOWS
*
*02*    ROUTINES = NONE
*
*02*    DATA-SETS = NONE
*
*02*    DATA-AREA = CMZELOG IS A GLOBAL WHICH PASSES SEQUENCING
*       INFORMATION BETWEEN INTAB, LOGCHAR AND ENDINTAB MACROS.
*
*02*    CONTROL-BLOCKS-SYSTEM = REQ: COMMENTS:,
*                            COMMENTS: ENTER NONE OR LIST SYSTEM
*                                      CONTROL BLOCKS WITH FIELDS
*                                      REFERENCED OR SET, THIS
*                                      SECTION MAY BE EXPANDED;
*
*02*    CONTROL-BLOCKS-ATCAM = REQ: CHOOSE: NONE×
*                                        ISTATCVT=SPCATCVT×
*                                        ISTACB=SPCACB×
*                                        ISTACDEB=SPCACDEB×
*                                        ISTRPL=SPCRPL×
*                                        ISTPREFX=SPCPREFX×
*                                        ISTQAB=SPCQAB×
*                                        ISTDFNOD=SPCDFNOD×
*                                        ISTEXLST=SPCEXLST×
*                                        ISTLDO=SPCLDO×
*                                        ISTDNCB=SPCDNCB×
*                                        ISTRPLH=SPCRPLH×
*                                        ISTRDT=SPCRDT×
*                                        ISTBTU=SPCBTU×
*                                        ISTDVT=SPCDVT×
*                                        ISTAPB=SPCAPB×
*                                        ISTICB=SPCICB×
*                                        ISTICEX=SPCICEX×
*                                        ISTFSB=SPCFSB×
*                                        ISTFDB=SPCFDB,
*                           COMMENTS: ENTER NAME OF CONTROL BLOCK
*                                     USED, COPY THIS SECTION IF
*                                     MORE THAN ONE;
*
*01*  TABLES = NONE
*
*01*  INNER-MACROS = NONE
*
*01*  SYSTEM-MACROS = NONE
*
*01*  CHANGE-ACTIVITY = NONE
*     APAR OZ11987                                             @ZA11987
*     APAR OZ35348                                             @ZA35348
*
**** END OF SPECIFICATIONS ***/
*/*LOGCHAR: CHART (FMODE) */
*/* HEADER
*/*PROGRAM NAME:
*/*DATE:
*/*PROGRAMMER:                                                      */
*/*1A2 E LOGCHAR */
*/*1B2 P GLOBAL: CMZELOG(2), LOCALS: IN1, COUNT, COUNT2, ERRBIT,
*/*ROUTBIT */
*/*1C2 P LOCALS: TRANBIT, ERRCHAR, QUOTE, ONEQUOT, ONEAMPR, QUOTE2 */
*/*1D2 P LOCALS: K1, K2, K3, K4, K5 */
*/*ONW00:1E2 D (NO,ERR0010:RL,YES,:BT) IS CMZELOG(1) = 1 */
*/*ONW10:1F2 P (,2B2)  SET CMZELOG(2) = 1 */
*/*1K1 COMMENT (1,1,) NEW DCRS */
*/*COMMENT (2,1) 1K1547 */
*/*COMMENT (3,1) 1K1769 */
*/*2B2:2B2 D (NO,ONW30:LT,YES,:BT) WAS A NAME SPECIFIED */
*/*ONW20:2C2 P SET IN1 = IN1 + 1 */
*/*2D2 D (YES,ONW30:LT,NO,:BT) IS IN1 > NAME LENGTH */
*/*2E2 D (YES,ERR0020:BT,NO,:RT) IS IN1 > 8 */
*/*2F4 D (YES,ONW20:RT,INVL,ERR0030:LT,NO,:BT) IS NAME(IN1) FROM A-Z */
*/*2G4 D (YES,ERR0030:LT,NO,:BT) IS IN1 = 1 */
*/*2H4 D (NO,ERR0030:BT,YES,ONW20:RT) IS NAME(IN1) FROM 0-9 */
*/*ONW30:2G2 D (YES,ERR0040:LR,NO,:BT) ANY POSITIONAL OPERANDS */
*/*ONW40:3B2 D (NO,ONW140:BT,YES,:RL) WAS SEQNCE OPERAND SPECIFIED */
*/*3B3 S (,ONW140) CHART 2: SEQNCE CHECK */
*/*5A2 E CHART 2: SEQNCE CHECK */
*/*5B2 P SET IN1 TO 0 */
*/*ONW50:5C2 P SET QUOTE ON AND IN1 = IN1+1 */
*/*5D2 D (YES,ONW120:LT,NO,:BT) WAS ENTIRE STRING SCANNED */
*/*5E2 D (NO,%ONW100:BT,YES,:RL) IS SEQNCE(IN1) A QUOTE */
*/*5E3 P (,:RT) SET QUOTE NULL AND IN1 = IN1+1 */
*/*5F4 D (NO,%ONW70:BT,YES,:RL) IS SEQNCE(IN1) A QUOTE */
*/*5F5 P (,ONW50:TT) COUNT = COUNT+1 */
*/*%ONW100:5G2 S (AMPR,ERR0070:LR,QUOT,ERR0060:BL,GOOD,ONW120:RT)
*/*CHART 3:EVEN QUOTE CHECK */
*/*%ONW70:5G4 S (AMPR,ERR0070:RR,QUOT,ERR0060:BL,GOOD,ONW120:LT)
*/*CHART 4:ODD QUOTE CHECK  */
*/*8A2 E (,ONW70) CHART 4: ODD QUOTE CHECK */
*/*ONW60:8G4 P (,:RT) SET COUNT = COUNT+1, IN1 = IN1+1 */
*/*ONW70:8B2 D (YES,ONW80:RL,NO,:BT) IS SEQNCE(IN1) AN '&' */
*/*8C2 D (NO,ONW60:RT,YES,:BT) IS SEQNCE(IN1) A QUOTE */
*/*8D2 D (YES,ONW120:LT,NO,:BT) IS THIS LAST CHARACTER */
*/*8E2 P SET IN1 = IN1+1 */
*/*8F2 D (NO,ERR0060:BT,YES,ONW60:RT) IS QUOTE DOUBLED */
*/*ONW80:8B3 P SET IN1 = IN1 +1 */
*/*8C3 D (NO,ERR0070:BT,YES,ONW60:RT) WAS AMPERSAND DOUBLED */
*/*7A2 E (,ONW100) CHART 3: EVEN QUOTE CHECK */
*/*ONW90:7F4 P SET COUNT = COUNT+1 , IN1 = IN1+1 */
*/*7G4 D (YES,ONW120:BT,NO,:RT) END OF STRING */
*/*ONW100:7B2 D (NO,ONW110:BT,YES,:RL) IS SEQNCE(IN1) A '&' */
*/*7B3 P SET IN1 = IN1+1 */
*/*7C3 D (NO,ERR0070:BT,YES,ONW90:LT) IS AMPERSAND DOUBLED */
*/*ONW110:7C2 D (NO,ONW90:RT,YES,:BT) IS SEQNCE(IN1) A QUOTE */
*/*7D2 P SET IN1 = IN1+1 */
*/*7E2 D (NO,ERR0060:BT,YES,ONW90:RT) IS QUOTE DOUBLED */
*/*ONW120:6B3 P SET IN1 = STRING LENGTH */
*/*6C3 D (NO,ONW130:BT,YES,:RL) WAS STRING QUOTED */
*/*6C4 P SET IN1 = IN1-2 */
*/*ONW130:6D3 D (YES,ERR0080:RL,NO,:BT) IS IN1 > 225 */
*/*%ONW140:6G3 R END SEQNCE CHECK */
*/*ONW140:3C2 D (NO,ERR0050:BT,YES,:RL) WAS APPLID SPECIFIED */
*/*3D3 S (,ONW290) CHART 5: APPLID CHECK */
*/*9A2 E CHART 5: APPLID CHECK */
*/*ONW150:9B2 D (NO,ERR0090:LT,YES,:BT) SUBLIST WITH 2 ARGS */
*/*9C2 D (YES,ONW160:BT,NO,:RT) APPLID(1) = APPLICID */
*/*9D3 D (NO,ERR0100:RL,YES,:BT) APPLID(1) = ROUTINE */
*/*9E3 P SET ROUTBIT = 1 */
*/*ONW160:9F3 D (NO,ERR0110:LR,YES,:BT) WAS APPLID(2) SPECIFIED */
*/*9G3 S CHART 6: APPLID (2) CHECK */
*/*%ONW180:9H3 R END APPLID CHECK */
*/*10A2 E CHART 6: APPLID(2) CHECK */
*/*10B2 P SET IN1 = 0 */
*/*ONW170:10C2 P SET IN1 = IN1+1 */
*/*10D2 D (YES,%ONW181:LT,NO,:BT) IN1 > APPLID NAME */
*/*10E2 D (YES,ERR0130:BT,NO,:RT) IN1 > 8 */
*/*10F4 D (YES,ONW170:RT,INVL,ERR0120:LT,NO,:BT) CHAR FROM A-Z */
*/*10G4 D (YES,ERR0120:LT,NO,:BT) IN1 = 1 */
*/*10H4 D (NO,ERR0120:BT,YES,ONW170:RT) CHAR FROM 0-9 */
*/*%ONW181:10G2 R END APPID(2) CHECK */
*/*ONW290:4B2 D (YES,ONW320:LT,NO,:BT) IS ERRBIT = 1 */
*/*4C2 D (NO,ONW300:BT,YES,:RL) WAS NAME SPECIFIED */
*/*4C3 P GENERATE NAME STMT */
*/*ONW300:4D2 P GENERATE DC'S UP TO SEQNCE */
*/*4E2 P GENERATE APPLID DC */
*/*4F2 D (NO,ONW320:BT,YES,:RL) WAS SEQNCE SPECIFIED */
*/*4F3 P GENERATE SEQNCE DC */
*/*ONW320:4J2 R MEXIT */
*/*ERR0010:1E3 P (,ONW10) MNOTE ERROR, SET ERRBIT TO 1 */
*/*ERR0020:2F2 P (,ONW30) MNOTE ERROR, SET ERRBIT TO 1 */
*/*ERR0030:2J4 P (,ONW20:RT) MNOTE ERROR, SET ERRBIT TO 1 */
*/*ERR0040:2G1 P (,ONW40) MNOTE ERROR, SET ERRBIT TO 1 */
*/*ERR0050:3D2 P (,ONW290) MNOTE ERROR, SET ERRBIT TO 1 */
*/*ERR0060:6F2 P (,%ONW140:RT) MNOTE ERROR, SET ERRBIT TO 1 */
*/*ERR0070:6F4 P (,%ONW140:LT) MNOTE ERROR, SET ERRBIT TO 1 */
*/*ERR0080:6D4 P (,%ONW140) MNOTE ERROR, SET ERRBIT TO 1 */
*/*ERR0090:9C1 P (,%ONW180) MNOTE ERROR, SET ERRBIT TO 1 */
*/*ERR0100:9D4 P (,ONW160) MNOTE ERROR, SET ERRBIT TO 1 */
*/*ERR0110:9F2 P (,%ONW180) MNOTE ERROR, SET ERRBIT TO 1 */
*/*ERR0120:10J4 P (,ONW170:RT) MNOTE ERROR, SET ERRBIT TO 1 */
*/*ERR0130:10F2 P (,%ONW181) MNOTE ERROR, SET ERRBIT TO 1 */
*/*LOGCHAR: END */
.* IF THE LOGCHAR MACRO IS INCORRECTLY SEQUENCED, MNOTE AN ERROR
.ONW00   AIF   (&CMZELOG(1) NE 1 ).ERR0010
.ONW10   ANOP
.* SET THE LOGCHAR WAS ISSUED FLAG
&CMZELOG(2) SETB 1
.* IF THERE IS NO NAME, SKIP THE NAME PROCESSING
         AIF   ('&NAME' EQ '' ).ONW30
.ONW20   ANOP
.* SCAN THE NAME FOR VALID EBCDIC CHARACTERS, AND CHECK FOR NAME
.* LENGTH GREATER THAN EIGHT. PRINT APPROPRIATE MNOTES IF FOUND.
&IN1     SETA  &IN1+1
         AIF   (&IN1 GT K'&NAME).ONW30
         AIF   (&IN1 GT 8 ).ERR0020
         AIF   ('&NAME'(&IN1,1) GE 'A' ).ONW27                @ZA35348
         AIF   ('&NAME'(&IN1,1) EQ '@' ).ONW20                @ZA35348
         AIF   ('&NAME'(&IN1,1) EQ '#' ).ONW20                @ZA35348
         AIF   ('&NAME'(&IN1,1) EQ '$' ).ONW25                @ZA35348
         AGO   .ERR0030                                       @ZA35348
.* A "$" IS INVALID AS THE 1ST CHARACTER OF A NAME            @ZA35348
.ONW25   AIF   (&IN1 EQ 0).ERR0030                            @ZA35348
         AGO   .ONW20                                         @ZA35348
.ONW27   AIF   ('&NAME'(&IN1,1) LE 'I' ).ONW20                @ZA35348
         AIF   ('&NAME'(&IN1,1) LT 'J' ).ERR0030
         AIF   ('&NAME'(&IN1,1) LE 'R' ).ONW20
         AIF   ('&NAME'(&IN1,1) LT 'S' ).ERR0030
         AIF   ('&NAME'(&IN1,1) LE 'Z' ).ONW20
         AIF   (&IN1 EQ 1 ).ERR0030
         AIF   ('&NAME'(&IN1,1) LT '0' ).ERR0030
         AIF   ('&NAME'(&IN1,1) GT '9' ).ERR0030
         AGO   .ONW20
.* CHECK IF ANY POSITIONAL OPERANDS WERE SUPPLIED. IF SO ERROR.
.ONW30   AIF   (N'&SYSLIST NE 0 ).ERR0040
.* IF THERE IS NO SEQNCE, SKIP TO APPLID SECTION.
.ONW40   AIF   ('&SEQNCE' EQ '' ).ONW140
&IN1     SETA  0                       RESET STRING COUNTER
.ONW50   ANOP                          EVEN/ODD QUOTE COUNT
&QUOTE    SETC  ''''                    ASSUME EVEN NUMBER OF QUOTES
&IN1     SETA  &IN1+1                  POINT TO NEXT CHARACTER TO TEST
.* IF THIS IS THE END OF THE STRING, THE STRING IS TOTALLY AN EVEN
.* NUMBER OF CONSECUTIVE QUOTES.
         AIF   (&IN1 GT K'&SEQNCE ).ONW55                      @ZA11987
.* IF THIS CHARACTER IS NOT A QUOTE, THERE ARE AN EVEN NUMBER OF
.* LEADING QUOTES, COUNT MULTIPLE AMPERSANDS AND QUOTES.
         AIF   ('&SEQNCE'(&IN1,1) NE '&ONEQUOT').ONW100
.* THE TOTAL NUMBER OF LEADING QUOTES IS NOW ODD
&QUOTE   SETC  ''                      SET FOR ODD NUMBER OF QUOTES
&IN1     SETA  &IN1+1                  POINT TO NEXT CHARACTER
.* IF THIS CHARACTER IS NOT A QUOTE, THE LEADING TOTAL IS ODD, START
.* COUNTING MULTIPLE QUOTES AND AMPERSANDS.
         AIF   ('&SEQNCE'(&IN1,1) NE '&ONEQUOT').ONW70
.* THE COUNT IS STILL EVEN CONTINUE THE LOOP. WE ARE COUNTING EACH
.* DOUBLE QUOTE AS ONE QUOTE, AND EACH DOUBLE AMPERSAND AS ONE.
&COUNT   SETA  &COUNT+1                INCREMENT THE CHARACTER COUNT
         AGO   .ONW50                  CONTINUE COUNTING LEADING QUOTES
.ONW55   ANOP                                                  @ZA11987
&COUNT   SETA  &COUNT-1  ADJUST COUNT FOR EVEN # DOUBLE QUOTES @ZA11987
         AGO   .ONW120                                         @ZA11987
.* AT THIS POINT WE HAVE FOUND AN ODD NUMBER OF LEADING QUOTES. WE
.* MUST NOW CHECK THAT EACH QUOTE AND EACH AMPERSAND IS DOUBLED,
.* AND THAT THE STRING ENDS WITH ONE UNMATCHED QUOTE.
.ONW60   ANOP                          CONTINE LOOP
&COUNT   SETA  &COUNT+1                INCREMENT CHARACTER COUNT
&IN1     SETA  &IN1+1                  POINT TO NEXT CHARACTER
.* EVEN NUMBER OF AMPERSANDS, ODD NUMBER OF QUOTES
.* IF THE NEXT CHARACTER IS AN AMPERSAND, CHECK FOR DOUBLE.
.ONW70   AIF   ('&SEQNCE'(&IN1,1) EQ '&ONEAMPR'(1,1)).ONW80
.*IF THIS CHARACTER IS NOT A QUOTE, CONTINUE THE LOOP
         AIF   ('&SEQNCE'(&IN1,1) NE '&ONEQUOT').ONW60
.* IF THIS QUOTE WAS THE LAST QUOTE, SUCCESS, SO LEAVE
         AIF   (&IN1 EQ K'&SEQNCE ).ONW120
.* CHECK FOR DOUBLED QUOTE
&IN1     SETA  &IN1+1                  POINT TO NEXT CHARACTER
.* IF THE QUOTE IS NOT DOUBLED, THERE IS AN ERROR.
         AIF   ('&SEQNCE'(&IN1,1) NE '&ONEQUOT').ERR0060
.* BUMP COUNTS AND CONTINUE THE LOOP
         AGO   .ONW60
.* AT THIS POINT THERE SHOULD BE A SECOND AMPERSAND. IF NOT. EROOR.
.ONW80   ANOP
&IN1     SETA  &IN1+1                  POINT TO NEXT CHARACTER
         AIF   ('&SEQNCE'(&IN1,1) NE '&ONEAMPR'(1,1)).ERR0070
.* STILL GOOD. BUMP COUNTS AND CONTINUE.
         AGO   .ONW60
.* THIS SECTION DEALS WITH AN EVEN NUMBER OF LEADING QUOTES. EACH
.* AMPERSAND AND EACH QUOTE SHOULD BE DOUBLED.
.ONW90   ANOP
&COUNT   SETA  &COUNT+1                INCREMENT CHARACTER COUNT
&IN1     SETA  &IN1+1                  INCREMENT STRING POINTER
.* IF THE STRING LENGTH IS EXCEEDED, SUCCESS, SO LEAVE
         AIF   (&IN1 GT K'&SEQNCE ).ONW120
.* IF THE FIRST CHARACTER IS NOT AN AMPERSAND, CHECK FOR QUOTE
.ONW100  AIF   ('&SEQNCE'(&IN1,1) NE '&ONEAMPR'(1,1)).ONW110
.* IF THE NEXT CHARACTER IS NOT AN AMPERSAND, THERE IS AN ERROR
&IN1     SETA  &IN1+1                  INCREMENT STRING POINTER
         AIF   ('&SEQNCE'(&IN1,1) NE '&ONEAMPR'(1,1)).ERR0070
.* ALL IS FINE CONTINUE LOOP
         AGO   .ONW90
.* IF THIS CHARACTER IS NOT A QUOTE, CONTINUE LOOP
.ONW110  AIF   ('&SEQNCE'(&IN1,1) NE '&ONEQUOT').ONW90
.* IF THE NEXT CHARACTER IS NOT ALSO A QUOTE THERE IS AN ERROR
&IN1     SETA  &IN1+1                  INCREMENT STRING POINTER
         AIF   ('&SEQNCE'(&IN1,1) NE '&ONEQUOT').ERR0060
.* OTHERWISE ALL IS FINE CONTINUE THE LOOP
         AGO   .ONW90
.* WE SHALL NOW CHECK THAT THE STRING LENGTH FOR SEQNCE IS LESS TAHN
.* 225 CHARACTERS
.ONW120  ANOP
&IN1     SETA  K'&SEQNCE               SET TEMPORARY VALUE
.* IF THE SEQNCE STRING IS QUOTED, SUBTRACT TWO FROM THE TOTAL LENGTH.
         AIF   ('&QUOTE' NE '' ).ONW130
&IN1     SETA  &IN1-2                  SUBTRACT TWO
.ONW130  AIF   (&IN1 GT 225 ).ERR0080
.* IF APPLID WAS NOT SPECIFIED, MNOTE ERROR
.ONW140  AIF   ('APPLID' EQ '' ).ERR0050
.* IF APPLID DOES NOT HAVE TWO SUBPARAMETERS, MNOTE AN ERROR
.ONW150  AIF   (N'&APPLID NE 2 ).ERR0090
.* IF THE FIRST PARAMETER IS NOT 'ROUTINE' OR 'APPLICID', ERROR
         AIF   ('&APPLID(1)' EQ 'APPLICID' ).ONW160
         AIF   ('&APPLID(1)' NE 'ROUTINE' ).ERR0100
&ROUTBIT SETB  1                       SET ROUTINE INDICATOR
.* NEXT CHECK THE NAME FOR A VALID 8 CHARACTER NAME
.ONW160  AIF   ('&APPLID(2)' EQ '' ).ERR0110
&IN1     SETA  0                       SET INDEX TO ZERO
.ONW170  ANOP
&IN1     SETA  &IN1+1                  INCREMENT INDEX
         AIF   (&IN1 GT K'&APPLID(2) ).ONW290
         AIF   (&IN1 GT 8 ).ERR0130
         AIF   ('&APPLID(2)'(&IN1,1) GE 'A' ).ONW200    @ZA35348
         AIF   ('&APPLID(2)'(&IN1,1) EQ '@' ).ONW170    @ZA35348
         AIF   ('&APPLID(2)'(&IN1,1) EQ '#' ).ONW170    @ZA35348
         AIF   ('&APPLID(2)'(&IN1,1) EQ '$' ).ONW190    @ZA35348
         AGO   .ERR0120                                 @ZA35348
.* A ''$'' IS INVALID AS 1ST CHARACTER OF A NAME        @ZA35348
.ONW190  AIF   (&IN1 EQ 0).ERR0120                      @ZA35348
         AGO   .ONW170                                  @ZA35348
.ONW200  AIF   ('&APPLID(2)'(&IN1,1) LE 'I' ).ONW170    @ZA35348
         AIF   ('&APPLID(2)'(&IN1,1) LT 'J' ).ERR0120
         AIF   ('&APPLID(2)'(&IN1,1) LE 'R' ).ONW170
         AIF   ('&APPLID(2)'(&IN1,1) LT 'S' ).ERR0120
         AIF   ('&APPLID(2)'(&IN1,1) LE 'Z' ).ONW170
         AIF   (&IN1 EQ 1 ).ERR0120
         AIF   ('&APPLID(2)'(&IN1,1) LT '0' ).ERR0120
         AIF   ('&APPLID(2)'(&IN1,1) GT '9' ).ERR0120
         AGO   .ONW170
.* SINCE THERE IS NO TSEQNCE, SKIP TO TEST ERROR SECTION. (DCR K1769)
.ONW290  AIF   (&ERRBIT EQ 1 ).ONW320
.* IF THERE IS NO NAME, SKIP NAME CARD
         AIF   ('&NAME' EQ '' ).ONW300
&NAME    EQU   *
.ONW300  ANOP
.* SET GENERATION CHARACTER CONSTANTS
&K1      SETC  'BL1'
&K2      SETC  '0'
&K3      SETC  '00000'                                    @ZTR5599
&K4      SETC  'CL'
&K5      SETC  'CL8'
.* GENERATE THE REQUIRED DC'S
         DC    &K1&ONEQUOT&K2&ROUTBIT&TRANBIT&K3&ONEQUOT OPTION FLAGS
.* IF ROUTINE SPECIFIED, GENERATE VCON
         AIF   (&ROUTBIT EQ 1).ONW305                          DCR1547
.* GENERATE APPLICATION NAME
         DC    &K5&ONEQUOT&APPLID(2)&ONEQUOT               APPLID NAME
         AGO   .ONW307
.* GENERATE EXTERNAL ADDRESS CONSTANT (VCON)
.ONW305  ANOP
&K5      SETC  'VL4'                                           DCR1547
         DC    &K5&OPAREN&APPLID(2)&CPAREN             ROUTINE ADDRESS
         DC    XL4'00'                                 RESERVED
.ONW307  ANOP
         DC    AL1(&COUNT)                       SEQNCE CHARACTER COUNT
.* IF THE SEQNCE COUNT IS ZERO THERE IS NO SEQNCE
         AIF   (&COUNT EQ 0 ).ONW310
         DC    &K4&COUNT&QUOTE&SEQNCE&QUOTE     SEQNCE CHARACTER STRING
.ONW310  ANOP
.ONW320  ANOP
         MEXIT
.ERR0010 MNOTE 8,'CARDS OUT OF SEQUENCE'
&ERRBIT  SETB  1
         AGO   .ONW10
.ERR0020 MNOTE 8,'NAME ''&NAME'' IS LONGER THAN EIGHT CHARACTERS'
&ERRBIT  SETB  1
         AGO   .ONW30
.ERR0030 ANOP
&ERRCHAR SETC  '&NAME'(&IN1,1)
         MNOTE 8,'''&ERRCHAR'' IS INVALID CHARACTER IN NAME ''&NAME'''
&ERRBIT  SETB  1
         AGO   .ONW20
.ERR0040 MNOTE 8,'LOGCHAR SHOULD HAVE NO POSITIONAL OPERANDS'
&ERRBIT  SETB  1
         AGO   .ONW40
.ERR0050 MNOTE 8,'APPLID IS A REQUIRED KEYWORD'
&ERRBIT  SETB  1
         AGO   .ONW290
.ERR0060 MNOTE 8,'MISMATCHED QUOTES IN SEQNCE'
&ERRBIT  SETB  1
         AGO   .ONW140
.ERR0070 MNOTE 8,'MISMATCHED AMPERSANDS IN SEQNCE'
&ERRBIT  SETB  1
         AGO   .ONW140
.ERR0080 MNOTE 8,'TOTAL SEQNCE LENGTH OF ''&IN1'' EXCEEDS 225'
&ERRBIT  SETB  1
         AGO   .ONW140
.ERR0090 MNOTE 8,'APPLID SHOULD BE A SUBLIST WITH TWO ARGUMENTS'
&ERRBIT  SETB  1
         AGO   .ONW290
.ERR0100 MNOTE 8,'''&APPLID(1)'' IS AN INVALID APPLID VALUE'
&ERRBIT  SETB  1
         AGO   .ONW160
.ERR0110 MNOTE 8,'NAME IN APPLID CANNOT BE BLANK'
&ERRBIT  SETB  1
         AGO   .ONW290
.ERR0120 ANOP
&ERRCHAR SETC  '&APPLID(2)'(&IN1,1)
         MNOTE 8,'''&ERRCHAR'' IS INVALID CHARACTER IN APPLID NAME'
&ERRBIT  SETB  1
         AGO   .ONW170
.ERR0130 MNOTE 8,'APPLID NAME IS LONGER THAN EIGHT CHARACTERS'
&ERRBIT  SETB  1
         AGO   .ONW290
         MEND
