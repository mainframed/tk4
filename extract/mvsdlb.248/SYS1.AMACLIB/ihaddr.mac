*          %GOTO  DDR0 ;        /* BILINGUAL DDRCOM MACRO
        MACRO
        IHADDR   &LIST=NO
              PUSH PRINT
*            */
*%DDR0:  ;
*/*********************************************************
*
*          D D R  C O M M O N  C O N T R O L  B L O C K
*
*    STATUS
*        OS/VS2 RELEASE 037 (02/23/77)
*
*    METHOD OF ACCESS
*
*        PL/S - DCL  DDRPTR  PTR
*        BAL - IHADDR  (MARCO CALL)
*              USING     DDRCOM,REG
*              LOAD REG WITH DDR ADDRESS
*    F.E.'S
*        MICROFICHE LISTINGS - IHADDR
*
*    DEVELOPERS
*        BAL LISTING  - SPECIFY LIST=YES ON MACRO CALL
*        PL/S LISTING - SPECIFY %IHALIST='YES' BEFORE INCLUDE
*
*        FOR INTEGRATION, A LISTING MUST NOT BE REQUESTED
*    CHANGE ACTIVITY
*      A090500,A094500-096000,C098000,A180600-18700,C181000   @YM02580
*      A091600-091940,A143600-143900                          @YM04069
*      A034600,047600,052600,091960,118100,143920,151600      @Y02BKCI
*      A155600                                                @Y02BKCI
*      C039000-040000                                         @OZ11029
*      A075200,171200                                         @OZ12139
*      A034525,075350,118250,171400                           @OZ50500
*************************************************************/
*%GOTO DDR1;   /*
          AIF ('&LIST' EQ 'YES').DDR1A
          PRINT OFF
.DDR1A    ANOP
DDRCOM   DSECT
*
*******************************************************************
DDRSHORT  DS        0XL24     INITIAL DDRCOM SEGMENT
DDRID     DS        F'0'      DDRCOM TYPE INDICATOR
DDRNXT    DS        F'0'      NEXT DDRCOM
DDRCNTRL  DS        0XL4      CONTROL DATA
DDRSRC    DS        XL1       SOURCE OF DDR REQUEST
DDROPER   EQU       X'80'     OPERATOR REQUEST
DDRSYS    EQU       X'40'     SYSTEM REQUEST
DDRPAGE   EQU       X'20'     PAGE I/O ERROR REQUEST
DDRSTAT   DS        XL1       REQUEST STATUS
DDRACTV   EQU       X'80'     REQUEST IS EXECUTING
DDRQUE    EQU       X'40'     REQUEST IS QUEUED
DDRHAMA   EQU       X'20'     PERMANENTLY INACTIVE REQUEST
DDRRMV    EQU       X'10'     REMOVE INVALID REQUEST
DDRPRG    EQU       X'08'     TERMINATE REQUEST
DDRSIRB   EQU       X'04'     REQUEST IS EXECUTED BY SIRB IN IGE0660A
DDRDCHAR  DS        0XL2      DEVICE  CHARACTERISTICES
DDRMDR    DS        XL1       MDR RECORD ID
DDRDSTAT  DS        XL1       DEVICE TYPE AND FLAGS
DDRBUFL   EQU       X'80'     BUFFERER LOG
DDRDA     EQU       X'40'     DIRECT ACCESS DEVICE
DDRMT     EQU       X'20'     MAGNETIC TAPE DEVICE
DDRUR     EQU       X'10'     UNIT RECORD DEVICE
DDRUIOSB  DS        XL4       USER IOSB ADDRESS
DDRUASID  DS        XL2       USER ADDRESS SPACE
DDRFMCUA  DS        XL3       FROM PRIMARY CUA
DDRTOCUA  DS        XL3       TO PRIMARY CUA
DDRLONG   DS        0XL68     REST OF DDRCOM
DDRTOUCB  DS        XL4       TO UCB ADDRESS
DDRFMUCB  DS        XL4       FROM UCB ADDRESS
DDRROWN   DS        XL1       REQUEST RESOURCES
DDRRTENQ  EQU       X'80'     TAPE ALLOC RESOURCE HELD
DDRRUENQ  EQU       X'40'     UNIT RECORD ALLOC RESOURCE HELD
DDRRDENQ  EQU       X'20'     DISK ALLOC RESOURCE HELD
DDRDEN    EQU       X'04'     ISSUE DENSITY WARNING MESSAGE  @ZA50500
DDRJES3L  EQU       X'02'     IGFDL1 USING JES3 UCB LIST        Y02BKCI
DDRFIRST  EQU       X'01'     IGFDL1 RECURSIVE BIT
DDRMIH    DS        XL1       MIH CODE FIELD
DDRMIHM   EQU       X'01'     MOUNT PENDING
DDRMIHD   EQU       X'02'     DEVICE END PENDING
DDRMIHC   EQU       X'03'     CHANNEL END PENDING
DDRMIHCD  EQU       X'04'     DEVICE END AND CHANNEL END PENDING
DDRMIHS   EQU       X'05'     SWAP PENDING
DDRASID   DS        XL2       DDR ADDRESS SPACE
DDRMIHT   DS        0XL8      MIH TIME INTERVAL                 OZ11029
DDRUDCB   DS        XL4       USER DCB ADDRESS                  OZ11029
DDRUDEB   DS        XL4       USER DEB ADDRESS                  OZ11029
DDRUIOB   DS        XL4       USER IOB ADDRESS
DDRUTCB   DS        XL4       USER TCB ADDRESS
DDRUASCB  DS        XL4       USER ASCB ADDRESS
DDRTEST   DS        XL4       TESTING FIELD
DDRTER    DS        0XL2      TERMINATION PARM FIELD
DDRTER1   DS        XL1       TERMINATION REASON CODE
DDRTNF    EQU       X'01'     NO USER FOUND
DDRTEP    EQU       X'02'     ERP IN PROGRESS
DDRTOC    EQU       X'03'     OPEN/CLOSE/EOV IN PROGRESS
DDRTBR    EQU       X'04'     BLOCKCOUNT UNRELIABLE
DDRTCO    EQU       X'05'     OPERATOR CANCELLED
DDRTIU    EQU       X'06'     INVALID USER EXIT
DDRTCE    EQU       X'07'     CATASTROPHIC ERROR
DDRTID    EQU       X'08'     INVALID DEVICE
DDRTCU    EQU       X'09'     CANCELLED BY USER
DDRTJE    EQU       X'0A'     JES3 ERROR                        Y02BKCI
DDRTER2   DS        XL1       TERMINATION FIELD
DDRINV    DS        0XL2      INVALID FLAGS
DDRINV1   DS        XL1       INVALID REASON CODE
DDRIMP    EQU       X'01'     MOUNT PENDING
DDRIUF    EQU       X'02'     UNIT REFERENCE INVALID
DDRINS    EQU       X'03'     UNSUPPORTED USE
DDRIIN    EQU       X'04'     INCOMPATIBLE
DDRINO    EQU       X'05'     NOT OPERATIONAL
DDRINA    EQU       X'06'     NOT ALLOCATED
DDRIDT    EQU       X'07'     INVALID DEVICE TYPE
DDRIJ3    EQU       X'08'     JES3 INCOMPATIBLE                 Y02BKCI
DDRINV2   DS        XL1       VALIDATE'S PARM FIELD
DDRVFM    EQU       X'01'     VALIDATE  FROM  DEVICE
DDRVCM    EQU       X'02'     VALIDATE TO DEVICE
DDRVUS    EQU       X'03'     USER IS AVAILABLE
DDRAPP    DS        0XL2      APPENDAGE PARM FIELDS
DDRAPP1   DS        XL1       APPENDAGE PARM LIST 1
DDRAPP2   DS        XL1       APPENDAGE PARM LIST 2
DDRIBUFL  DS        XL2       I/O BUFFER LENGTH
DDRIBUF   DS        XL4       I/O BUFFER ADDRESS
DDRCOUNT  DS        XL4       I/O OPERATION REPEAT COUNT
DDRIOF    DS        0XL2      I/O PARM FLAGS
DDRIOF1   DS        XL1       I/O PARM FLAGS FIELD 1
DDRREAD   EQU       X'02'     ISSUE A READ COMMAND
DDRRUN    EQU       X'0F'     ISSUE A REWIND AND RELOAD COMMAND
DDRRDBK   EQU       X'0C'     ISSUE A READ BACKWARDS COMMAND
DDRXA4    EQU       X'A4'     ISSUE  A READ AND RESET BUFFERED
*                            LOG COMMAND
DDRBSF    EQU       X'2F'     ISSUE A BACKWARD SPACE FILE COMMAND
DDRFSF    EQU       X'3F'     ISSUE A FORWARD SPACE FILE COMMAND
DDRNOP    EQU       X'03'     ISSUE A NOP COMMAND
DDRSNS    EQU       X'04'     ISSUE A SENSE COMMAND
DDRIOF2   DS        XL1       I/O PARM FLAGS FIELD 2
DDRWHICH  EQU       X'80'     I/O TO BE PERFORMED
DDRITAKE  EQU       X'40'     GET/RELEASE CONTROL
DDRILAB   EQU       X'20'     LABEL PROCESSING
DDRIMNT   EQU       X'10'     MOUNT REQUEST
DDRICNT   EQU       X'08'     COUNT FIELD INDICATOR
DDRMSG    DS        0XL2      MESSAGE PARM FLAGS
DDRMSGOP  DS        XL1       OPERATOR RESPONSE
DDRWTOR   EQU       X'01'     ISSUE WTOR MESSAGE
DDRYES    EQU       X'02'     YES REPLY
DDRNO     EQU       X'03'     NO REPLY
DDRCUA    EQU       X'04'     CUA REPLY
DDRMSGCD  DS        XL1       MESSAGE NUMBER CODE
DDRM500I  EQU       X'01'     ISSUE IGF500I MESSAGE
DDRM500D  EQU       X'02'     ISSUE IGF500D MESSAGE
DDRM502E  EQU       X'03'     ISSUE IGF502E MESSAGE
DDRM503I  EQU       X'04'     ISSUE IGF503I MESSAGE
DDRM505I  EQU       X'05'     ISSUE IGF505I MESSAGE
DDRM509I  EQU       X'06'     ISSUE IGF509I MESSAGE
DDRM509D  EQU       X'07'     ISSUE IGF509D MESSAGE
DDRM511A  EQU       X'08'     ISSUE IGF511A MESSAGE
DDRM512I  EQU       X'09'     ISSUE IGF512I MESSAGE
DDRM513I  EQU       X'0A'     ISSUE IGF513I MESSAGE
DDRM991E  EQU       X'0B'     ISSUE IGF991E MESSAGE
DDRM514I  EQU       X'0C'     ISSUE IGF514I MESSAGE           @OZ12139
DDRM501I  EQU       X'0D'     ISSUE IGF501I MESSAGE           @ZA50500
DDRMSGP   DS        0XL8      MESSAGE CODES
DDRMSGPN  DS        XL1       NUMBER OF MESSAGE CODES
DDRMSGPC  DS        XL7       (0-7) MESSAGE CODES
DDRPNO    EQU       X'01'     COMPRESS FIELD
DDRPFM    EQU       X'02'     FROM CUA
DDRPTO    EQU       X'03'     TO CUA
DDRPVL    EQU       X'04'     VOLUME SERIAL NUMBER
DDRPLT    EQU       X'05'     LABEL TYPE
DDRPSN    EQU       X'06'     VOLUME SEQUENCE NUMBER
DDRPTM    EQU       X'07'     TERMINATION CODE
DDRPMH    EQU       X'08'     MIH CODE
DDRPIC    EQU       X'09'     INVALID CONDITION CODE
DDRPDV    EQU       X'0A'     DEVICE-CHARACTER STRING
DDRPRC    EQU       X'0B'     REASON CODE
DDRLABEL  DS        XL1       TAPE FROM LABEL TYPE
DDRLAL    EQU       X'80'     ANSI LABEL
DDRLBLP   EQU       X'40'     BYPASS LABEL PROCESSING
DDRLNL    EQU       X'20'     NO LABEL
DDRLNSL   EQU       X'10'     NON-STANDARD LABEL
DDRLSD    EQU       X'08'     STANDARD LABEL
DDRLNOP   EQU       X'01'     NO POSITIONING AND TAPE READING
DDRRETRY  DS        XL1       IGFDM0 RETRY COUNT
DDRREC    DS        0XL2      RECORDER PARM FIELDS
DDRREC1   DS        XL1       RECORDER FLAGS
DDRRECON  EQU       X'01'     WRITE DDR RECORD
DDRR91    EQU       X'02'     ISSUE SVC 91
DDRRBLF   EQU       X'03'     BUFFERED LOG TO BE READ/RESET
*                         AND RECORDED
DDRRIPL   EQU       X'04'     WRITE IPL RECORD    (MIH)
DDRRMIH   EQU       X'05'     WRITE MIH RECORD
DDRRRDE   EQU       X'06'     WRITE RDE OUTAGE (MIH)           YM02580
DDRREC2   DS        XL1       RECORDER PARM LIST
DDRRFMTO  EQU       X'80'     (0=TO,1=FROM) RECORD
DDRUSER   DS        0XL4      USER FIELDS                      YM04069
DDRUMODE  DS         XL1      USER MODE                      YM04069
DDRURESV  DS         XL3      RESERVED                         YM04069
DDRUBCNT  DS         XL4      USER BLOCK COUNT                  YM04069
*  THE DISPLACEMENT AT THIS POINT (100 BYTES) IS LIMITED, WHEN THE
*  DDRCOM IS IN THE EWA (WORK DDRCOM), BY IOS STORAGE MANAGER.  IF
*  THE NEED TO INCREASE THE SIZE OF THE DDRCOM EVER ARISES, THE
*  TIME TO IMPLEMENT THE INCREASED SIZE IS WHEN IGFDI0 GETMAINS
*  THE AREA FOR THE DDRCOM CONTROL BLOCK AND NOT WHEN THE DDRCOM
*  IS BEING USED IN THE EWA AS THE WORK DDRCOM.
DDRSSOB   DS         XL4      ADDRESS OF SSOB                   Y02BKCI
      POP PRINT
            MEND
           EJECT
*            */
*%DDR1: ;
*%IHALPUSH='@LISTPUSH';
*%IHALPOP='@LISTPOP';
*%IHALOFF='@LISTOFF';
 IHALPUSH;
*%IF IHALIST='YES'  %THEN
*            %GOTO  DDRCOM2;
*IHALOFF;
*%DDRCOM2:  ;
  DCL 1 DDRCOM BASED (DDRPTR) BDY(WORD),
       2 DDRSHORT,       /* INITIAL DDRCOM SEGMENT */
         3 DDRID CHAR(4),       /* DDRCOM TYPE INDICATOR */
         3 DDRNXT PTR(31),
         3 DDRCNTRL CHAR(4),       /* CONTROL DATA*/
           4 DDRSRC CHAR(1),       /* SOURCE OF DDR REQUEST */
             5 DDROPER BIT(1),     /* OPERATOR REQUEST */
             5 DDRSYS BIT(1),      /* SYSTEM REQUEST  */
             5 DDRPAGE BIT(1),      /* I/O ERROR ON A PAGE */
             5 *   BIT(5),         /* RESERVED */
           4 DDRSTAT CHAR (1),     /* REQUEST STATUS*/
             5 DDRACTV BIT(1),     /* REQUEST IS EXECUTING */
             5 DDRQUE BIT(1),      /* REQUEST IS QUEUED */
             5 DDRHAMA BIT (1),    /* PERMANENTLY INACTIVE REQUEST*/
             5 DDRRMV BIT(1),      /* REMOVE INVALID REQUEST */
             5 DDRPRG BIT(1),      /* TERMINATE REQUEST */
             5 DDRSIRB BIT(1),     /*REQUEST IS EXECUTED BY SIRB
                                     IN IGE0660A  */
             5 *     BIT(2),       /* RESERVED */
           4 DDRDCHAR CHAR(2),       /* DEVICE CHARACTERISTICES */
             5 DDRMDR CHAR(1),       /* MDR RECORD ID */
             5 DDRDSTAT CHAR(1),     /* DEVICE TYPE AND FLAGS */
               6 DDRBUFL BIT(1),     /* BUFFERED LOG */
               6 DDRDA BIT(1) ,      /* DIRECT ACCESS DEVICE */
               6 DDRMT BIT(1),       /* MAGNETIC TAPE DEVICE */
               6 DDRUR BIT(1),       /* UNIT RECORD DEVICE */
               6 *    BIT(4),        /* RESERVED */
         3 DDRUIOSB PTR(31),       /* USER IOSB ADDRESS */
         3 DDRUASID FIXED(15),     /* USER ADDRESS SPACE */
         3 DDRFMCUA CHAR(3),       /* FROM PRIMARY CUA */
         3 DDRTOCUA CHAR(3),       /* TO PRIMARY CUA */
       2 DDRLONG ,        /* REST OF DDRCOM */
         3 DDRTOUCB PTR(31),       /* TO UCB ADDRESS */
         3 DDRFMUCB PTR(31),       /* FROM UCB ADDRESS */
         3 DDRROWN CHAR(1),      /* REQUEST RESOURCES */
           4 DDRRTENQ BIT(1),    /* TAPE ALLOC RESOURCE HELD */
           4 DDRRUENQ BIT(1),    /* UNIT RECORD ALLOC RESOURCE HELD*/
           4 DDRRDENQ BIT(1),    /* DISK ALLOC RESOURCE HELD */
           4 *     BIT(2),       /* RESERVED                 @ZA50500*/
           4 DDRDEN BIT(1),      /* ISSUE DENSITY WARNING    @ZA50500*/
           4 DDRJES3L BIT(1), /* IGFDL1 USING JES3 UCB LIST @Y02BKCI */
           4 DDRFIRST BIT(1),    /* IGFDL1 RECURSIVE BIT */
         3 DDRMIH  CHAR(1),        /* MIH CODE FIELD */
         3 DDRASID FIXED(15),      /* DDR ADDRESS SPACE */
         3 DDRMIHT CHAR(8) BDY(WORD),     /* MIH TIME INTERVAL */
           4 DDRUDCB PTR(31),        /* USER DCB ADDRESS */
           4 DDRUDEB PTR(31),        /* USER DEB ADDRESS*/
         3 DDRUIOB PTR(31),        /* USER IOB ADDRESS */
         3 DDRUTCB PTR(31),        /* USER TCB ADDRESS  */
         3 DDRUASCB PTR(31),        /* USER ASCB ADDRESS  */
         3 DDRTEST CHAR(4),        /* TESTING FIELD */
         3 DDRTER CHAR(2),         /* TERMINATION PARM FIELD */
           4 DDRTER1 CHAR(1),      /* TERMINATION REASON CODE */
           4 DDRTER2 CHAR(1),      /* TERMINATION FIELD */
         3 DDRINV CHAR(2),         /* INVALID FLAGS  */
           4 DDRINV1 CHAR(1),      /* INVALID REASON CODE */
           4 DDRINV2 CHAR(1),      /* VALIDATE'S PARM FIELD */
         3 DDRAPP CHAR(2),         /* APPENDAGE PARM FIELDS */
           4 DDRAPP1 CHAR(1),      /* APPENDAGE PARM LIST 1 */
           4 DDRAPP2 CHAR(1),      /* APPENDAGE PARM LIST 2 */
         3 DDRIBUFL FIXED(15),     /* I/O BUFFER LENGTH   */
         3 DDRIBUF PTR(31),        /* I/O BUFFER ADDRESS  */
         3 DDRCOUNT FIXED(31),     /* I/O OPERATION REPEAT COUNT  */
         3 DDRIOF CHAR(2),         /* I/O PARM FLAGS */
           4 DDRIOF1 CHAR(1),      /* I/O PARM FLAGS FIELD 1 */
           4 DDRIOF2 CHAR(1),      /* I/O PARM FLAGS FIELD 2 */
             5 DDRWHICH BIT(1),    /* I/O TO BE PERFORMED */
             5 DDRITAKE BIT(1),    /* DEVICE GET/REL CONTROL */
             5 DDRILAB BIT(1),    /* LABEL PROCESSING */
             5 DDRIMNT BIT(1),    /* MOUNT REQUEST */
             5 DDRICNT BIT(1),    /* COUNT FIELD INDICATOR */
             5 *     BIT(3),       /* RESERVED */
         3 DDRMSG CHAR(2),         /* MESSAGE PARM FLAGS */
           4 DDRMSGOP CHAR(1),      /* OPERATOR RESPONSE */
           4 DDRMSGCD FIXED(8),    /* MESSAGE NUMBER CODE */
         3 DDRMSGP CHAR(8),        /* MESSAGE CODES */
           4 DDRMSGPN FIXED (8),   /* NUMBER OF MESSAGE CODES */
           4 DDRMSGPC(7) FIXED(8),  /* (0-7) MESSAGE CODES */
         3 DDRLABEL CHAR(1),       /* TAPE FROM LABEL TYPE */
           4 DDRLAL BIT(1),        /* ANSI LABEL */
           4 DDRLBLP BIT(1),       /* BYPASS LABEL PROCESSING */
           4 DDRLNL BIT(1),        /* NO LABEL */
           4 DDRLNSL BIT(1),       /* NON-STANDARD LABEL */
           4 DDRLSD BIT(1),        /* STANDARD LABEL */
           4  *      BIT(2),       /* RESERVED  */
           4 DDRLNOP BIT(1),       /* NO POSITIONING AND TAPE READING*/
         3 DDRRETRY FIXED(8),       /* IGFDM0 RETRY COUNT */
         3 DDRREC CHAR(2),         /* RECORDER PARM FIELDS */
           4 DDRREC1 CHAR(1),      /* RECORDER FLAGS  */
           4 DDRREC2 CHAR(1),      /* RECORDER PARM LIST */
             5 DDRRFMTO BIT(1),    /* (0=TO,1=FROM) RECORD */
             5 *     BIT(7),       /* RESERVED */
         3 DDRUSER CHAR(4),         /* USER FIELDS YM04069*/
           4 DDRUMODE CHAR(1),      /* USER MODE YM04069*/
           4  *      CHAR(3),       /* RESERVED  YM04069*/
         3 DDRUBCNT FIXED(31),       /* USER BLOCK COUNT YM04069*/
         3 DDRSSOB PTR(31);       /* ADDRESS OF SSOB @Y02BKCI */
*/*   EQUATES FOR DDRMIH FIELD               */
   DCL DDRMIHM BIT(8) CONSTANT('01'X);   /* MOUNT PENDING */
   DCL DDRMIHD BIT(8) CONSTANT('02'X);    /* DEVICE END PENDING */
   DCL DDRMIHC BIT(8) CONSTANT('03'X);    /* CHANNEL END PENDING */
   DCL DDRMIHCD BIT(8) CONSTANT('04'X);    /* DE AND CE PENDING  */
   DCL DDRMIHS BIT(8) CONSTANT('05'X);   /* SWAP PENDING */
*/*   EQUATES FOR DDRTER1 FIELD               */
   DCL DDRTNF BIT(8) CONSTANT('01'X);    /* NO USER FOUND */
   DCL DDRTEP BIT(8) CONSTANT('02'X);    /*ERP IN PROGRESS */
   DCL DDRTOC BIT(8) CONSTANT('03'X);   /* OPEN/CLOSE/EOV IN PROGRESS*/
   DCL DDRTBR BIT(8) CONSTANT('04'X);   /* BLOCKCOUNT UNRELIABLE */
   DCL DDRTCO BIT(8) CONSTANT('05'X);   /* OPERATOR CANCELLED */
   DCL DDRTIU BIT(8) CONSTANT('06'X);   /* INVALID USER EXIT  */
   DCL DDRTCE BIT(8) CONSTANT('07'X);   /* CATASTROPHIC ERROR */
   DCL DDRTID BIT(8) CONSTANT('08'X);    /* INVALID DEVICE     */
   DCL DDRTCU BIT(8) CONSTANT('09'X);    /* CANCELLED BY USER    */
   DCL DDRTJE BIT(8) CONSTANT('0A'X);    /* JES3 ERROR @Y02BKCI */
*/*   EQUATES FOR DDRINV1 FIELD               */
   DCL DDRIMP BIT(8) CONSTANT('01'X);    /* MOUNT PENDING */
   DCL DDRIUF BIT(8) CONSTANT('02'X);   /* UNIT REFERENCE INVALID */
   DCL DDRINS BIT(8) CONSTANT('03'X);   /* UNSUPPORTED USE */
   DCL DDRIIN BIT(8) CONSTANT('04'X);   /* INCOMPATIBLE */
   DCL DDRINO BIT(8) CONSTANT('05'X);   /* NOT OPERATIONAL */
   DCL DDRINA BIT(8) CONSTANT('06'X);   /* NOT ALLOCATED */
   DCL DDRIDT BIT(8) CONSTANT('07'X);   /* INVALID DEVICE TYPE */
   DCL DDRIJ3 BIT(8) CONSTANT('08'X);  /* JES3 INCOMPATIBLE @Y02BKCI */
*/*   EQUATES FOR DDRINV2 FIELD               */
   DCL DDRVFM BIT(8) CONSTANT('01'X);    /* VALIDATE FROM DEVICE */
   DCL DDRVCM BIT(8) CONSTANT('02'X);   /* VALIDATE TO DEVICE */
   DCL DDRVUS BIT(8) CONSTANT('03'X);   /* USER IS AVAILABLE */
*/*   EQUATES FOR DDRIOF1 FIELD               */
   DCL DDRREAD BIT(8) CONSTANT('02'X);    /* ISSUE A READ COMMAND */
   DCL DDRRUN BIT(8) CONSTANT('0F'X);   /* ISSUE A REWIND AND UNLOAD
                                          COMMAND  */
   DCL DDRRDBK BIT(8) CONSTANT('0C'X); /*ISSUE READ BACKWARDS COMMAND*/
   DCL DDRXA4 BIT(8) CONSTANT('A4'X);   /*ISSUE READ BUF LOG COMMAND*/
   DCL DDRBSF BIT(8) CONSTANT('2F'X);  /* BACKWARD SPACE FILE COMMAND*/
   DCL DDRFSF BIT(8) CONSTANT('3F'X);   /* FORWARD SPACE FILE COMMAND*/
   DCL DDRNOP BIT(8) CONSTANT('03'X);   /* ISSUE NOP COMMAND */
   DCL DDRSNS BIT(8) CONSTANT('04'X);   /* ISSUE SENSE COMMAND */
*/*   EQUATES FOR DDRMSGOP FIELD               */
   DCL DDRWTOR BIT(8) CONSTANT('01'X);    /* WTOR MESSAGE */
   DCL DDRYES BIT(8) CONSTANT('02'X);   /* YES REPLY */
   DCL DDRNO BIT(8) CONSTANT('03'X);   /* NO REPLY */
   DCL DDRCUA BIT(8) CONSTANT('04'X);   /* CUA REPLY */
*/*   EQUATES FOR DDRMSGCD FIELD               */
   DCL DDRM500I BIT(8) CONSTANT('01'X); /* ISSUE IGF500I MESSAGE */
   DCL DDRM500D BIT(8) CONSTANT('02'X); /* ISSUE IGF500D MESSAGE */
   DCL DDRM502E BIT(8) CONSTANT('03'X); /* ISSUE IGF502E MESSAGE */
   DCL DDRM503I BIT(8) CONSTANT('04'X); /* ISSUE IGF503I MESSAGE */
   DCL DDRM505I BIT(8) CONSTANT('05'X); /* ISSUE IGF505I MESSAGE */
   DCL DDRM509I BIT(8) CONSTANT('06'X); /* ISSUE IGF509I MESSAGE */
   DCL DDRM509D BIT(8) CONSTANT('07'X); /* ISSUE IGF509D MESSAGE */
   DCL DDRM511A BIT(8) CONSTANT('08'X); /* ISSUE IGF511A MESSAGE */
   DCL DDRM512I BIT(8) CONSTANT('09'X); /* ISSUE IGF512I MESSAGE */
   DCL DDRM513I BIT(8) CONSTANT('0A'X); /* ISSUE IGF513I MESSAGE */
   DCL DDRM991E BIT(8) CONSTANT('0B'X); /* ISSUE IGF991E MESSAGE */
   DCL DDRM514I BIT(8) CONSTANT('0C'X); /* ISSUE IGF514I MSG @OZ12139*/
   DCL DDRM501I BIT(8) CONSTANT('0D'X); /* ISSUE IGF501I MESSAGE
                                                             @ZA50500*/
*/*   EQUATES FOR DDRMSGPC FIELD               */
   DCL DDRPNO BIT(8) CONSTANT('01'X);    /* COMPRESS FIELD */
   DCL DDRPFM BIT(8) CONSTANT('02'X);    /* FROM CUA */
   DCL DDRPTO BIT(8) CONSTANT('03'X);   /*  TO CUA */
   DCL DDRPVL BIT(8) CONSTANT('04'X);   /*  VOLUME SERIAL NUMBER */
   DCL DDRPLT BIT(8) CONSTANT('05'X);   /*  LABEL TYPE */
   DCL DDRPSN BIT(8) CONSTANT('06'X);   /* VOLUME SEQUENCE NUMBER */
   DCL DDRPTM BIT(8) CONSTANT('07'X);   /*  TERMINATION CODE */
   DCL DDRPMH BIT(8) CONSTANT('08'X);    /* MIH CODE    */
   DCL DDRPIC BIT(8) CONSTANT('09'X);    /* INVALID CONDITION CODE   */
   DCL DDRPDV BIT(8) CONSTANT('0A'X);    /* DEVICE, CHARACTER STRING */
   DCL DDRPRC BIT(8) CONSTANT('0B'X);    /* REASON CODE */
*/*   EQUATES FOR DDRREC1 FIELD               */
   DCL DDRRECON BIT(8) CONSTANT('01'X); /* WRITE DDR RECORD */
   DCL DDRR91 BIT(8) CONSTANT('02'X); /* ISSUE SVC 91 */
   DCL DDRRBLF BIT(8) CONSTANT('03'X); /* BUFFERED LOG TO BE
                                   READ/RESET AND RECORDED  */
   DCL DDRRIPL BIT(8) CONSTANT('04'X); /* WRITE IPL RECORD (MIH) */
   DCL DDRRMIH BIT(8) CONSTANT('05'X); /* WRITE MIH RECORD */
   DCL DDRRRDE BIT(8) CONSTANT('06'X); /* WRITE RDE OUTAGE RECORD
                                        @YM02580 */
*IHALPOP;
