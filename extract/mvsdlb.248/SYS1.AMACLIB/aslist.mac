         MACRO
&NAME    ASLIST   &OP,&NORM=,&LENGTH=,&DIGIT=,&ENTRY=1,&MSG=,&INQDISP=,X
               &MODULUS=,&SELTRAN=
         GBLA  &IECNDGP(100)
.*             IECNDGP(1)  NO OF BYTES COUNTER
.*             IECNDGP(2) NO OF ASLIST OR DEULIST MACROS
.*             IECNDGP(4)  GLOBAL SAVE FOR NORMAL GUIDENCE AND DEVICE
         GBLB  &IECDE                                             21094
         GBLB  &IECSW(9),&IECTXT,&IECSEQ(10),&IECAS               21094
.*             IECAS   INDICATES ASLIST MACRO CODED               21094
.*             IECSW(5)  INDICATES NOT FIRST MACRO
.*             IECSW(8) SET WHEN MSG TXT APPEARS.INDICATES TO FOLLOWING
.*               TRLIST OR STEND MACRO THAT AN END OF LIST BYTE
.*             GENERATED BY THIS MACRO
.*             IECSEQ(5)  SEQUENCE INDICATOR
.*             IECTXT  ON WHEN IMPLICIT TEXT ALREADY GENERATED
         GBLB  &IECIN,&IECINDS
.*             IECIN     INDICATES INQUIRY DISPLAY FOR SYSTEM
         GBLB  &IECM10,&IECM11
.*             IECM10  INDICATES MODULUS 10 CHECKING IN TRLIST
.*             IECM11 INDICATES MODULUS 11 CHECKING IN TRLIST
         LCLA  &A,&B,&C
         LCLB  &NCODE,&SW(4)
         LCLC  &CHAR
         ACTR  500
&IECAS   SETB  1                                                  21094
&IECSEQ(5) SETB 1
         AIF   (&IECSEQ(1) AND &IECSEQ(2) AND &IECSEQ(3) AND &IECSEQ(4)-
               AND &IECSEQ(5) AND NOT&IECSEQ(6)).SEQOK
.J       ANOP                                                     21094
         MNOTE 12,'MACRO SEQUENCE ERROR'
         MEXIT
.SEQOK   ANOP
         AIF   (&IECDE).J                                         21094
&IECNDGP(2) SETA &IECNDGP(2)+1
         AIF   (&IECNDGP(2) LE 16).NOK
         MNOTE 12,'NO OF ASLIST MACROS EXCEEDS 16'
         MEXIT
.NOK     AIF   ('&OP' EQ 'B' OR '&OP' EQ 'C' OR '&OP' EQ 'M' OR '&OP'  X
               EQ 'O').OPOK
&SW(1)   SETB  1
&NCODE   SETB  1
         MNOTE 12,'DEVICE CODE=&OP INVALID'
.OPOK    AIF   (T'&NORM EQ 'N').CKRNG
&NCODE   SETB  1
&CHAR    SETC  T'&NORM
         MNOTE 12,'REQUIRED OPERAND=NORM TYPE ATTRIBUTE = &CHAR        ?
               IMPROPER'
         AGO   .CKLNGTH
.CKRNG   ANOP
&A       SETA  &NORM
         AIF   (&A GE 1 AND &A LE 31).CKINQD
&IECNDGP(4) SETA 0
&NCODE   SETB  1
         MNOTE 12,'NORM = &A INVALID'
.CKINQD  ANOP
         AIF   (T'&INQDISP EQ 'O').CKLNGTH
         AIF   (T'&INQDISP EQ 'N').CKINQ1
&NCODE   SETB  1
&CHAR    SETC  T'&INQDISP
         MNOTE 12,'INQDISP OPERAND TYPE ATTRIBUTE=&CHAR IMPROPER'
         AGO   .CKINQ2
.CKINQ1  ANOP
&A       SETA  &INQDISP
         AIF   (&A GE 1 AND &A LE 31).CKINQ2
&NCODE   SETB  1
         MNOTE 12,'INQDISP=&A INVALID'
.CKINQ2  ANOP
         AIF   (&IECSW(1)).CKINQ3
&NCODE   SETB  1
         MNOTE 12,'INQDISP REQUIRES CORE=32 IN CONFIGUR MACRO'
.CKINQ3  ANOP
         AIF   (&IECINDS).CKINQ4
&NCODE   SETB  1
         MNOTE 12,'INQDISP=YES NOT CODED IN TRLIST MACRO FOR THIS      X
               TRANSACTION'
.CKINQ4  ANOP
         AIF   (&IECIN).CKLNGTH
&NCODE   SETB  1
         MNOTE 12,'INQDISP REQUIRES INQDISP=YES IN CONFIGUR MACRO'
         AGO   .CKLNGTH
.CKLNGTH AIF   (T'&LENGTH EQ 'O').CKDIGIT
         AIF   (T'&LENGTH(1) EQ 'N').L1TYPOK
&SW(1)   SETB  1  INDICATE LNGTH OP INVALID
&CHAR    SETC  T'&LENGTH(1)
         MNOTE 3,'LENGTH=&LENGTH(1) TYPE ATTRIBUTE=&CHAR IMPROPER'
         AGO   .CKLN2
.L1TYPOK ANOP
         AIF   (&SW(1)).CKLN2
&A       SETA  &LENGTH(1)
         AIF   (&A LE 81 AND '&OP' EQ 'C').CKLN2
         AIF   (&A LE 7  AND '&OP' EQ 'M').CKLN2
         AIF   (&A LE 11 AND ('&OP' EQ 'B' OR '&OP' EQ 'O')).CKLN2
&SW(1)   SETB  1    INDICATE LENGTH OP INVALID
         MNOTE 3,'LENGTH VALUE CODED INVALID FOR DEVICE CODED'
.CKLN2   AIF   (T'&LENGTH(2) EQ 'N').L2TYPOK
&SW(1)   SETB  1
&CHAR    SETC  T'&LENGTH(2)
         MNOTE 3,'LENGTH=&LENGTH(2) TYPE ATTRIBUTE=&CHAR IMPROPER'
         AGO   .CKDIGIT
.L2TYPOK ANOP
&A       SETA  &LENGTH(2)
         AIF   (&A GE 1 AND &A LE 31).CKDIGIT
&SW(1)   SETB  1
         MNOTE 3,'INVALID LENGTH ERROR GUIDENCE =&A'
.CKDIGIT AIF   (T'&DIGIT EQ 'O').CKENTRY
         AIF   (T'&DIGIT(1)  EQ 'N' AND T'&DIGIT(2) EQ 'N' AND         X
               T'&DIGIT(3) EQ 'N').LNTYPOK
&SW(2)   SETB  1
         MNOTE 3,'DIGIT=&DIGIT INVALID'
         AGO   .CKENTRY
.LNTYPOK ANOP
&A       SETA  &DIGIT(1)
         AIF   (&A GE 1 AND &A LE 15).DLNOK
&SW(2)   SETB  1
         MNOTE 3,'DIGIT=&A INVALID'
.DLNOK   ANOP
&A       SETA  &DIGIT(2)
         AIF   (&A LE 9).VALOK
&SW(2)   SETB  1
         MNOTE 3,'VALUE TO BE CHECKED=&A INVALID'
.VALOK   ANOP
&A       SETA  &DIGIT(3)
         AIF   (&A GE 1 AND &A LE 31).CKENTRY
&SW(2)   SETB  1
         MNOTE 3,'GUIDENCE VALUE=&A INVALID'
.CKENTRY AIF   ('&ENTRY' EQ '1' OR '&ENTRY' EQ 'M').ENTRYOK
         MNOTE 3,'ENTRY=&ENTRY INVALID,DEFAULT ASSUMED'
.ENTRYOK ANOP
&SW(3)   SETB  ('&ENTRY' EQ 'M')
         AIF (('&ENTRY' EQ 'M' AND &IECSW(5)) OR '&ENTRY' EQ '1').CKMSG
&SW(3)   SETB  0
         MNOTE 3,'ENTRY = M ILLEGAL ON FIRST ASLIST MACRO,DEFAULT      X
               ASSUMED'
.CKMSG   AIF   (T'&SELTRAN EQ 'O').CKMSG1                         21094
         AIF   ('&SELTRAN' EQ 'NO' OR '&SELTRAN' EQ 'YES').CKMSG1
         MNOTE 3,'SELTRAN OPERAND INVALID,OPERAND IGNORED'        21094
.CKMSG1  AIF   (T'&MSG EQ 'O').CKGEN                              21094
         AIF   (T'&MSG NE 'O' AND &IECTXT).CKMRMSG
&SW(4)   SETB  1
         AGO   .CKGEN
.CKMRMSG AIF   ('&MSG'(1,1) EQ '''' AND '&MSG'(K'&MSG,1) EQ '''').MFOK
         MNOTE 3,'MSG OPERAND IN INCORRECT FORMAT,OPERAND IGNORED'
&SW(4)   SETB  1
         AGO   .CKGEN
.MFOK    ANOP
&B       SETA  K'&MSG-2
         AIF   (&B GE 0 AND &B LE 127).CKGEN
         MNOTE 3,'MESSAGE LENGTH EXCEEDS 127,OPERAND IGNORED'
&SW(4)   SETB  1
.CKGEN   AIF   (NOT &IECSW(8)).CKGEN1                             21094
&NCODE   SETB  1                                                  21094
         MNOTE 12,'ASLIST MACRO NOT VALID FOLLOWING IMPLICIT TEXT IN   X
               THIS TRANSACTION'                                  21094
.CKGEN1  ANOP
         AIF   (T'&MODULUS EQ 'O').CKGEN2
         AIF   (T'&MODULUS(1) EQ 'N' AND T'&MODULUS(2) EQ 'N' AND      X
               T'&MODULUS(3) EQ 'N').MOD1
&SW(2)   SETB  1
         MNOTE 3,'MODULUS=&MODULUS INVALID'
         AGO   .CKGEN2
.MOD1    ANOP
&A       SETA  &MODULUS(1)
         AIF   (&A GE 2 AND &A LE 16).MOD2
&SW(2)   SETB  1
         MNOTE 3,'MODULUS POSITION = &A INVALID'
.MOD2    ANOP
&A       SETA  &MODULUS(2)
         AIF   (&A GE 1 AND &A LE 15).MOD3
&SW(2)   SETB  1
         MNOTE 3,'MODULUS LENGTH = &A INVALID'
.MOD3    ANOP
&A       SETA  &MODULUS(3)
         AIF   (&A GE 1 AND &A LE 31).CKGEN2
&SW(2)   SETB  1
         MNOTE 3,'MODULUS GUIDANCE VALUE = &A INVALID'
.CKGEN2  ANOP
         AIF   (T'&MODULUS EQ 'O').CKGEN5
         AIF   (T'&DIGIT EQ 'O').CKGEN3
&NCODE   SETB  1
         MNOTE 12,'MODULUS AND DIGIT OPERANDS MUTUALLY EXCLUSIVE'
.CKGEN3  ANOP
         AIF   (&IECSW(1)).CKGEN4
&NCODE   SETB  1
         MNOTE 12,'MODULUS OPERAND NOT VALID UNLESS CORE=32 IN CONFIGURX
               MACRO'
.CKGEN4  ANOP
         AIF   (&IECM10 OR &IECM11).CKGEN5
&NCODE   SETB  1
         MNOTE 12,'MODULUS OPERAND REQUIRES THAT EITHER DEMOD10=YES OR X
               DEMOD11=YES BE CODED IN TRLIST'
.CKGEN5  ANOP
         AIF   (T'&DIGIT EQ 'O').CKGEN6
         AIF   (&IECM10 OR &IECM11).ERROR1
         AGO   .CKGEN6
.ERROR1  ANOP
&NCODE   SETB  1
         MNOTE 12,'DIGIT OPERAND CAN NOT BE CODED IF DEMOD10=YES OR    X
               DEMOD11=YES IN TRLIST MACRO'
.CKGEN6  ANOP
         AIF   (NOT &NCODE).GENCODE
         MNOTE 12,'TEXT GENERATION SUPRESSED'
         AGO   .SET
.GENCODE ANOP
&B       SETA  0
         AIF   (NOT &IECSW(5)).SKIP
&B       SETA  X'80'
.SKIP    ANOP
&A       SETA  &NORM
         AIF   ('&OP' EQ 'B').DC
&B       SETA  &B+X'20'
         AIF   ('&OP' EQ 'C').DC
&B       SETA  &B+X'20'
         AIF   ('&OP' EQ 'M').DC
&B       SETA  &B+X'20'
.DC      DC    YL1(&B+&A)  NORMAL GUIDENCE AND DEVICE INDICATOR
&C       SETA  &B    SAVE DEVICE INDICATOR
         AIF   (&IECSW(5)).SKP1
&IECNDGP(4) SETA &B+&A
.SKP1    ANOP
         AIF   (T'&SELTRAN EQ 'O').NOSEL                          21094
         AIF   ('&SELTRAN' NE 'YES').NOSEL                        21094
         AIF   (NOT &IECSW(5)).NOSEL                             A43765
&IECNDGP(4) SETA 0                                                21094
.NOSEL   ANOP                                                     21094
&A       SETA  0
&B       SETA  0
         AIF   (T'&DIGIT EQ 'O' OR &SW(2)).DCZRO
&A       SETA  &DIGIT(1)
&B       SETA  &DIGIT(2)
.DCZRO   ANOP
         AIF   (T'&MODULUS EQ 'O' OR &SW(2)).DCZRO4
&A       SETA  &MODULUS(1)-1
&B       SETA  &MODULUS(2)
.DCZRO4  ANOP
         DC    YL1(&A*16+&B) DIGIT OR MODULUS POSITION AND VALUE OR NUL
&A       SETA  0
.NXT     AIF   (T'&LENGTH EQ 'O' OR &SW(1)).DCZRO1
&A       SETA  &LENGTH(1)
.DCZRO1  DC    YL1(X'80'*&SW(3)+&A)  LENGTH OR NULL
&A       SETA  0
&B       SETA  0
.SKIP1   AIF   (T'&DIGIT EQ 'O' OR &SW(2)).DCZRO2
&A       SETA  &DIGIT(3)
&B       SETA  &C
         AIF   (NOT &IECSW(5)).DCZRO2
&B       SETA  &B-X'80'
.DCZRO2  ANOP
         AIF   (T'&MODULUS EQ 'O' OR &SW(2)).DCZRO5
&A       SETA  &MODULUS(3)
&B       SETA  &C
         AIF   (NOT &IECSW(5)).DCZRO5
&B       SETA  &B-X'80'
.DCZRO5  ANOP
         DC    YL1(X'80'+&B+&A) DIGIT OR MODULUS ERROR GUIDANCE
&A       SETA  0
&B       SETA  0
.SKIP2   AIF   (T'&LENGTH EQ 'O' OR &SW(1)).DCZRO3
&A       SETA  &LENGTH(2)
&B       SETA  &C
         AIF   (NOT &IECSW(5)).DCZRO3
&B       SETA  &B-X'80'
.DCZRO3  DC    YL1(X'80'+&B+&A)  LENGTH ERROR GUIDANCE
         AIF   (T'&INQDISP NE 'N').SKP
&B       SETA  &INQDISP
         DC    YL1(&B)
         DC    YL1(0)
         DC    X'80'
         DC    YL1(0)
         DC    YL1(&IECNDGP(4))
&IECNDGP(1) SETA &IECNDGP(1)+5
.SKP     ANOP
&B       SETA  0
         AIF   (T'&MSG EQ 'O' OR &SW(4)).SET
&IECSW(8) SETB 1
         DC    YL1(&IECNDGP(4))  END OF LIST BYTE
&B       SETA  K'&MSG-2
         DC    YL1(&B)  LENGTH OF MSG TEXT
         DC    C&MSG
&B       SETA  &B+1
&IECTXT  SETB  0  RESET TO PREVENT ASLIST  EXPANSION FOLLOWING MSG TXT
.SET     ANOP
&IECSW(5) SETB 1
&IECNDGP(1) SETA &IECNDGP(1)+5+&B
.MEND    MEND
