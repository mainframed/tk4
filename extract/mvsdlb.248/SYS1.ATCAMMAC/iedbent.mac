         MACRO
&NAME    IEDBENT &FMTYPE=X'01',                                        *
               &FMPROF=X'03',                                          *
               &TSPROF=X'03',                                          *
               &PRIPROT=X'A0',                                 @OZ27691*
               &SECPROT=X'D0',                                 @OZ27691*
               &COMPROT=XL2'2040',                                     *
               &TSUSAGE=XL6'85850000',                                 *
               &LUPROF=X'00',                                          *
               &PRESERC=XL11'00',                              @YM06069*
               &USRDATA=,                                      @YM07701*
               &LOGON=                                         @YM07701
.*A000000-999999                                               @Y17XAFN
.*C000300,000360,001560,001620,001680,001740,001800,           @OZ27691
.*C001860,004980,005040,005340                                 @OZ27691
         GBLB  &IEDBIG
         LCLA  &E,&LEN,&F,&G,&H                                @YM07701
         LCLB  &NOGO,&BIT
         LCLC  &OPER,&USRD,&LOGD                               @YM07701
&OPER    SETC  'FMTYPE'
         AIF   ('&FMTYPE'(1,2) NE 'X''' OR '&FMTYPE'(5,1) NE '''').BIER*
               R
&OPER    SETC  'FMPROF'
         AIF   ('&FMPROF'(1,2) NE 'X''' OR '&FMPROF'(5,1) NE '''').BIER*
               R
&OPER    SETC  'TSPROF'
         AIF   ('&TSPROF'(1,2) NE 'X''' OR '&TSPROF'(5,1) NE '''').BIER*
               R
&OPER    SETC  'PRIPROT'                                       @OZ27691
         AIF   ('&PRIPROT'(1,2) NE 'X''' OR '&PRIPROT'(5,1) NE '''').BI*
               ERR                                             @OZ27691
&OPER    SETC  'SECPROT'                                       @OZ27691
         AIF   ('&SECPROT'(1,2) NE 'X''' OR '&SECPROT'(5,1) NE '''').BI*
               ERR                                             @OZ27691
&OPER    SETC  'COMPROT'
         AIF   ('&COMPROT'(1,4) NE 'XL2''').BIERR
&OPER    SETC  'TSUSAGE'
         AIF   ('&TSUSAGE'(1,4) NE 'XL6''').BIERR
&OPER    SETC  'LUPROF'
         AIF   ('&LUPROF'(1,2) NE 'X''' OR '&LUPROF'(5,1) NE '''').BIER*
               R
&OPER    SETC  'PRESERC'
         AIF   ('&PRESERC'(1,5) EQ 'XL11''').BISETLN           @YM06069
.BIERR   MNOTE 12,'*** IEDB04 &OPER MUST BE CODED IN HEX WITH THE CORRE*
               CT LENGTH.'
&NOGO    SETB  1
.BISETLN AIF   ('&USRDATA' NE '').BISTL USER DATA CODED
&E       SETA  0                        NO USER DATA
         AGO   .BILABEL
.BISTL   ANOP
&E       SETA  K'&USRDATA-3             LENGTH OF USER DATA
         AIF   ('&USRDATA'(1,2) EQ 'X''').BIHEX
         AIF   ('&USRDATA'(1,2) EQ 'C''').BICHAR
         MNOTE 12,'*** IEDBO5 USRDATA MUST BE CODED AS EITHER X''DATA''*
                OR C''DATA''.'
&NOGO    SETB  1
.BIHEX   ANOP
&BIT     SETB  1                        TURN ON HEX DATA FLAG
&E       SETA  (&E+1)/2                 COUNT HEX BYTE
.BICHAR  ANOP
         AIF   ('&E' LE '255').BILABEL
         MNOTE 12,'*** IEDB06 USER DATA FIELD EXCEEDS THE 255 BYTE MAXI*
               MUM.'
&NOGO    SETB  1
.BILABEL ANOP
&LEN     SETA  38+&E                    BIND IMAGE LENGTH      @YM07701
.BLOGON  AIF   ('&LOGON' NE '').BLOGO LOGON DATA CODED         @YM07701
&H       SETA  0                        NO USER DATA           @YM07701
         AGO   .BLOGON1                                        @YM07701
.BLOGO   ANOP                                                  @YM07701
&H       SETA  K'&LOGON-3             LENGTH OF USER DATA      @YM07701
         AIF   ('&LOGON'(1,2) EQ 'X''').BLOGX                  @YM07701
         AIF   ('&LOGON'(1,2) EQ 'C''').BLOGR                  @YM07701
         MNOTE 12,'*** IEDBO7 LOGON MUST BE CODED AS EITHER X''DATA'' O*
               R C''DATA''.'                                   @YM07701
&NOGO    SETB  1                                               @YM07701
.BLOGX   ANOP                                                  @YM07701
&BIT     SETB  1                        TURN ON HEX DATA FLAG  @YM07701
&H       SETA  (&H+1)/2                 COUNT HEX BYTE         @YM07701
.BLOGR   ANOP                                                  @YM07701
         AIF   ('&H' LE '255').BLOGON1                         @YM07701
         MNOTE 12,'*** IEDB08 LOG ON DATA FIELD EXCEEDS THE 255 BYTE MA*
               XIMUM.'                                         @YM07701
&NOGO    SETB  1                                               @YM07701
.BLOGON1 ANOP                                                  @YM07701
&LEN     SETA  &LEN+&H                  BIND IMAGE LENGTH      @YM07701
         AIF   (&IEDBIG).BINFB          DEFAULT BIND IMAGE
&F       SETA  K'&NAME                  LENGTH OF &NAME
         AIF   ('&F' NE '0').BINOGO     BI NAME MUST BE SPECIFIED
         MNOTE 12,'*** IEDB03 THE IEDBENT MACRO DOES NOT HAVE THE BIND *
               IMAGE NAME AS ITS LABEL NAME.'
&NOGO    SETB  1
.BINOGO  AIF   (&NOGO).MEND             NOGO FLAG SET
&NAME    EQU   *
         DC    CL8'&NAME'               BI NAME
         AGO   .BINAME
.BINFB   ANOP
&NAME    EQU   *
         DC    CL8'        '            BLANK NAME FLD FOR DEFAULT
.BINAME  ANOP
         DC    AL2(&LEN)                LENGTH OF BIND IMAGE
         DC    X'31'                    BIND RU CODE
         DC    &FMTYPE                  FORMAT/TYPE
         DC    &FMPROF                  FM PROFILE
         DC    &TSPROF                  TS PROFILE
         DC    &PRIPROT                 PRIMARY LU FM PROTOCOL @OZ27691
         DC    &SECPROT                 SECONDARY LU FM PROTOCO@OZ27691
         DC    &COMPROT                 COMMON LU PROTOCOLS
         DC    &TSUSAGE                 TS USAGE
         DC    &LUPROF                  LU PROFILE
         DC    &PRESERC                 PRESENTATION SERVICES CHAR
         DC    X'00'                    LENGTH IS ALWAYS ZERO  @OZ27691
         DC    X'08'                    PLU NAME LENGTH
         DC    CL8'        '            PLU NAME 8 BLANK CHARACTERS
         DC    AL1(&E)                  USER DATA FIELD LENGTH
         AIF   ('&E' EQ '0').LOGO       NO USER DATA
&E       SETA  K'&USRDATA-3             USER DATA INPUT LENGTH
&F       SETA  3                        START OF USER DATA INPUT
.BIUDC   AIF   ('&E' LE '52').BIUDCE    INPUT LENGTH > 52
&E       SETA  &E-52                    UPDATE INPUT LENGTH BY 52
         AGO   .BIUDC                   CHECK INPUT LENGTH
.BIUDCE  ANOP
&USRD    SETC  '&USRDATA'(&F,&E)        SETUP USER DATA FIELD
         AIF   (&BIT).BIHEXL1           DC FOR HEX
         DC    C'&USRD'                 USER DATA FIELD
         AGO   .BIUDCG
.BIHEXL1 ANOP
         DC    X'&USRD'                 USER DATA FIELD
.BIUDCG  ANOP
&G       SETA  K'&USRDATA-3             USER DATA INPUT LENGTH
&F       SETA  &F+&E                    UPDATE STARTING POINT
&E       SETA  &G-&E                    SUBTRACT 52 LESS
.BIUDCF  AIF   ('&E' EQ '0').LOGO       INPUT LENGTH > 52
&USRD    SETC  '&USRDATA'(&F,52)        SETUP USER DATA FIELD
&F       SETA  &F+52                    UPDATE STARTING POINT
&E       SETA  &E-52                    UPDATE INPUT LENGTH BY 52
         AIF   (&BIT).BIHEXL            DC FOR HEX
         DC    C'&USRD'                 USER DATA FIELD
         AGO   .BIUDCF                  UPDATA THE LENGTH
.BIHEXL  ANOP
         DC    X'&USRD'                 USER DATA FIELD
         AGO   .BIUDCF                  CHECK INPUT LENGTH
.LOGO    ANOP                                                  @YM07701
         DC    AL1(&H)                  LOG ON DATA FIELD LEN  @YM07701
         AIF   ('&H' EQ '0').MEND       NO LOG ON DATA         @YM07701
&H       SETA  K'&LOGON-3               LOG ON DATA INPUT LEN  @YM07701
&F       SETA  3                        START OF LOG ON INPUT  @YM07701
.BLOGC   AIF   ('&H' LE '52').BLOGCE    INPUT LENGTH > 52      @YM07701
&H       SETA  &H-52                    UPDATE INPUT LENGTH    @YM07701
         AGO   .BLOGC                   CHECK INPUT LENGTH     @YM07701
.BLOGCE  ANOP                                                  @YM07701
&LOGD    SETC  '&LOGON'(&F,&H)        SETUP LOG ON DATA FIELD  @YM07701
         AIF   (&BIT).BLOGXL1           DC FOR HEX             @YM07701
         DC    C'&LOGD'                 LOG ON DATA FIELD      @YM07701
         AGO   .BLOGCG                                         @YM07701
.BLOGXL1 ANOP                                                  @YM07701
         DC    X'&LOGD'                 LOG ON DATA FIELD      @YM07701
.BLOGCG  ANOP                                                  @YM07701
&G       SETA  K'&LOGON-3             LOG ON DATA INPUT LENGTH @YM07701
&F       SETA  &F+&H                    UPDATE STARTING POINT  @YM07701
&H       SETA  &G-&H                    SUBTRACT 52 LESS       @YM07701
.BLOGCF  AIF   ('&H' EQ '0').MEND       INPUT LENGTH > 52      @YM07701
&LOGD    SETC  '&LOGON'(&F,52)        SETUP LOG ON DATA FIELD  @YM07701
&F       SETA  &F+52                    UPDATE STARTING POINT  @YM07701
&H       SETA  &H-52                    UPDATE INPUT LENGTH    @YM07701
         AIF   (&BIT).BLOGXL            DC FOR HEX             @YM07701
         DC    C'&LOGD'                 LOG ON DATA FIELD      @YM07701
         AGO   .BLOGCF                  UPDATA THE LENGTH      @YM07701
.BLOGXL  ANOP                                                  @YM07701
         DC    X'&LOGD'                 LOG ON DATA FIELD      @YM07701
         AGO   .BLOGCF                  UPDATA THE LENGTH      @YM07701
.MEND    MEND
