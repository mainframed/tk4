*%GOTO DSVPLS ;          /* BILINGUAL MAPPING */
         MACRO
         IQADSV &DSECT=YES
.*A000000-999999                                                 Y02149
*%DSVPLS: ;
*              /* BILINGUAL MAPPING
***********************************************************************
***********************************************************************
******************          OS/VS2 R2                  ****************
****************** DYNAMIC SUPPORT SYSTEM VECTOR TABLE ****************
******************                                     ****************
***********************************************************************
***********************************************************************
*                                                                     *
* LEVEL:      AUGUST 1, 1973                                          *
*                                                                     *
* FUNCTION:                                                           *
*    THE DSS VECTOR TABLE FURNISHES ADDRESSABILITY FOR DSS            *
*    REFERENCES IN THE NUCLEUS, DESCRIBES THE HOOKS IN 0S/VS2 R2      *
*    NECESSARY FOR DSS AND FLAGS FOR VARIOUS DSS FUNCTIONS.           *
*                                                                     *
* ATTRIBUTES:    BILINGUAL.                                           *
*                                                                     *
**********************************************************************/
*%GOTO DSVPLS2;     /*
         AIF   ('&DSECT' EQ 'YES').DSECT
IQADSV00 DS    0F
         AGO   .NDSECT
.DSECT   ANOP
DSV      DSECT
.NDSECT  ANOP
         DS    0F
DSVID    DC    CL3'DSV'       DSV IDENTIFIER - DEBUGGING AID
***********************************************************************
*                         DSV FLAGS                                   *
***********************************************************************
* FLAG BYTE DSVFLG1 MUST FOLLOW DSVID FOR CS ON DSVID                 *
DSVFLG1  DC    X'00'          FIRST FLAG BYTE
*
DSVRIM   EQU   DSVFLG1        RIM FLAG
DSVRIMN  EQU   X'80'          RIM FUNCTION COMPLETE
DSVRIMF  EQU   X'FF'-DSVRIMN  RIM FLAG OFF
*
DSVINIT  EQU   DSVFLG1        INITIALIZATION FLAG
DSVINITN EQU   X'40'          INITIALIZATION IN PROGRESS
DSVINITF EQU   X'FF'-DSVINITN INITIALIZATION FLAG OFF
*
DSVATTN  EQU   DSVFLG1        ATTENTION FLAG
DSVATTNN EQU   X'20'          ATTENTION PENDING
DSVATTNF EQU   X'FF'-DSVATTNN ATTENTION FLAG OFF
*
DSVREFS  EQU   DSVFLG1        LANGUAGE REFRESHING BIT
DSVREFSN EQU   X'10'          LANGUAGE REFRESHING BIT ON
DSVREFSF EQU   X'FF'-DSVREFSN LANGUAGE REFRESHING BIT OFF
*
DSVTERM  EQU   DSVFLG1        TERMINATION FLAG
DSVTERMN EQU   X'08'          TERMINATION IN PROGRESS
DSVTERMF EQU   X'FF'-DSVTERMN TERMINATION FLAG OFF
*
DSVSPIN  EQU   DSVFLG1        GLOBAL LANGUAGE SPIN BIT
DSVSPINN EQU   X'04'          SPINNING
DSVSPINF EQU   X'FF'-DSVSPINN GLOBAL LANGUAGE SPIN BIT OFF
*
DSVFLGS  DC    XL4'00'        RESERVED
***********************************************************************
*
DSVPDSUC DC    F'0'           ADDRESS OF THE UCB FOR THE DSS DATA SET
*                             (INITIALIZED BY DSS RIM DURING NIP)
DSVPDSST DC    F'0'           CCHH OF FIRST RECORD IN DSS DATA SET
*                             (INITIALIZED BY DSS RIM DURING NIP)
DSVDVE   DC    F'0'           ADDRESS OF THE ENVIRONMENT VECTOR
*                             TABLE (INITIALIZED BY IQAINI00)
DSVINTOC DC    F'0'           ADDRESS OF INTEGRATED OPERATOR'S
*                             CONSOLE UCB (INITIALZED BY IQAINI00)
DSVAVT   DC    F'0'           ADDRESS OF AOS VECTOR TABLE
*                             (INITIALIZED BY IQAINI00)
DSVLANLO DC    XL4'00200000'  DSS VM ADDR OF LANGUAGE LOAD MODULE
DSVLANHI DC    XL4'002F0000'  UPPER BOUND OF DSS LANGUAGE VM
*
DSVINIAD DC    F'0'           ADDRESS OF IQAINI00
*                             (INITIALIZED BY DSS RIM DURING NIP)
DSVACTAD DC    F'0'           ADDRESS OF IQAACT00
*                             (INITIALIZED BY IQAINI00)
DSVRIHAD DC    V(IQARIH00)    ADDRESS OF IQARIH00
*
DSVRSV0  DC    F'0'           RESERVED
*
DSVLOCK  DS    0F             DSV LOCK WORD
DSVLCK   DC    X'00'          LOCK BYTE
DSVLKTYP DC    X'00'          ID OF FUNCTION THAT OWNS LOCK
DSVLCKID DC    XL2'00'        PHYSICAL ID OF LOCKING CPU
*
DSVICCCW DS    0F             ICC CONTROL WORD
DSVICCWT DC    XL1'00'        ICC WAIT BYTE  FF-ICC WAITING
*                                            00-ICC NOT WAITING
DSVICCCD DC    XL1'00'        ICC COMPLETION CODE - SET BY CPU
*                                                   RECEIVING THE SIGP
DSVICCID DC    XL2'00'        PHYSICAL CPUID THAT ICC IS WAITING ON
*
DSVICTAD DC    F'0'           TRANSFER ADDRESS - ICC
DSVICPAD DC    F'0'           PARAMETER LIST ADDRESS - ICC
DSVRSV1  DC    6F'0'          RESERVED
*
DSVNUIOC DS    0F             WORD FOR CS BY IQAPPR00
DSVUNUS1 DC    XL2'00'        UNUSED
DSVRSCPU DC    XL2'00'        PHYSICAL ID OF RESTART CPU OR CPU TO
*                             WHICH IQAPPR00 IS SWITCHING DSS
DSVEVCPU DC    XL2'00'        PHYSICAL ID OF CURRENT EVENT CPU
DSVINCPU DC    XL2'00'        PHYSICAL ID OF INITIALIZATION CPU
DSVRSV2  DC    XL4'00'        RESERVED
*
DSVDSTCB DC    V(IEADSTCB)    ADDR OF THE DSS TCB
DSVVEDS1 DC    V(IEAVEDS1)    JOBSTEP TIMING RTN IN DISPATCHER
DSVVEDS2 DC    V(IEAVEDS2)    JOBSTEP TIMING RTN IN DISPATCHER
DSVRSV3  DC    5F'0'          RESERVED
***********************************************************************
*                  THE OS/VS2 R2 SYSTEM HOOKS FOR DSS                 *
***********************************************************************
DSVIOHK1 DC    V(IECHK1)      LABEL AFTER SIOF INSTRUCTION IN IOS
*                             SIO SUBROUTINE
DSVIOHK2 DC    V(IECHK2)      LABEL AFTER SIO INSTRUCTION IN IOS
*                             SENSE SUBROUTINE
DSVIOHK3 DC    V(IECHK3)      LABEL AFTER TIO IN IOS DA STANDALONE
*                             SEEK ROUTINE
DSVIOHK8 DC    V(IECHK8)      LABEL AFTER SIO INSTRUCTION IN IOS SIO
*                             SUBROUTINE
DSVLOAD  DC    V(DSS06)       DSS NOP HOOK IN LOAD
DSVEXIT  DC    V(CDSSNOP)     DSS NOP HOOK IN EXIT
DSVVDSS  DC    A(0)           NOP HOOK IN VARY ONLINE ROUTINE
*                             (INITIALIZED BY DSS RIM DURING NIP)
DSVCATST EQU   *              START OF CONTROL ATS
DSVIOHK4 DC    V(IECHK4)      NOP HOOK IN HALT I/O RTN TAKING I/O
DSVIOHK5 DC    V(IECHK5)      NOP HOOK IN HALF I/O RTN TAKING I/O
DSVIOHK6 DC    V(IECHK6)      NOP HOOK IN I/O RESTART ROUTINE
DSVIOHK7 DC    V(IECHK7)      NOP HOOK IN I/O RESTART ROUTINE
DSVDSSST DC    V(IEEDSSST)    NOP HOOK IN STOP RESTART ROUTINE
DSVDSSRS DC    V(IEEDSSRS)    NOP HOOK IN STOP RESTART ROUTINE
DSVMCHK1 DC    V(IGFPMRDS)    NOP HOOK IN MCH(IGFPMTRM)
DSVDSSNO DC    V(RESDSSNO)    NOP HOOK IN RESTART FLIH
DSVCATEN EQU   *              END OF CONTROL ATS
DSVRSV4  DC    2F'0'          RESERVED
***********************************************************************
*           NON-MONITORABLE AREAS - READ/WRITE ACCESS                 *
***********************************************************************
DSVNONM  EQU   *              BEGINNING OF NON-MONITORABLE RANGES
*
DSVNM1B  DC    V(DSS06)       DSS NOP HOOK IN LOAD
DSVNM1E  DC    A(0)           ADDR OF NEXT INSTRUCTION
DSVNM2B  DC    V(CDSSNOP)     DSS NOP HOOK IN EXIT
DSVNM2E  DC    A(0)           ADDR OF NEXT INSTRUCTION
DSVNM3B  DC    A(0)           VARY CPU ONLINE CODE IN LPA(IEEVCPU)
DSVNM3E  DC    A(0)           FIRST BYTE PAST END OF RANGE(IEEVDSS)
DSVNM4B  DC    V(IEAVRSTR)    SYSTEM RESTART INTERRUPT HANDLER
DSVNM4E  DC    V(RESDSSNO)    FIRST BYTE PAST END OF RANGE
DSVNM5B  DC    V(IEEDSSST)    STOP RESTART RTN IN RESTART FLIH
DSVNM5E  DC    V(IEEDSSRS)    FIRST BYTE PAST END OF RANGE
DSVNM6B  DC    V(IGFPMCLO)    FIRST INSTRUCTION IN MCH (IGFPMCIH)
DSVNM6E  DC    V(IGFPTRHI)    FIRST BYTE PAST END OF RANGE
DSVNM7B  DC    A(513)         SECOND HALF OF PSA
DSVNM7E  DC    A(4096)        FIRST BYTE PAST END OF RANGE
DSVNM8B  DC    V(IEAVEDS1)    1ST BYTE OF JOBSTEP TIMING RTN
DSVNM8E  DC    V(IEAVEDS2)     LAST BYTE OF JOBSTEP TIMING RTN
*
DSVNONME EQU   *              END OF NON-MONITORABLE RANGES
*
DSVRSV5  DC    2F'0'          RESERVED
***********************************************************************
*               NON-MONITORABLE AREAS - READ ONLY ACCESS              *
***********************************************************************
DSVRONM  EQU   *              BEGINNING OF READ-ONLY NON-MONITOR RANGES
*
DSVPSAB  DC    A(0)           BEGINNING OF FLC
DSVPSAE  DC    A(512)         FIRST BYTE PAST END OF FLC
DSVRO1B  DC    A(0)           DSS PSA SAVE AREA
DSVRO1E  DC    A(0)           FIRST BYTE PAST END OF RANGE
*                             ( INITIALIZED BY IQAINI00 )
DSVRONME EQU   *              END OF READ-ONLY NON-MONITORABLE RANGES
*
DSVRORSV DC    7F'0'          RESERVED
***********************************************************************
*                  INITIALIZATION FLAGS AND WORK AREA                 *
***********************************************************************
DSVDONE  DC    X'00'          IQAINI00 PROGRESS FLAG BYTE
*
DSVHK    EQU   DSVDONE        HOUSE KEEPING DONE
DSVHKN   EQU   X'80'
DSVHKF   EQU   X'FF'-DSVHKN
*
DSVIOC   EQU   DSVDONE        INTEGRATED OPERATOR'S CONSOLE FOUND
DSVIOCN  EQU   X'40'
DSVIOCF  EQU   X'FF'-DSVIOCN
*
DSVPD    EQU   DSVDONE        PAGING DEVICE VERIFIED
DSVPDN   EQU   X'20'
DSVPDF   EQU   X'FF'-DSVPDN
*
DSVPFXE  EQU   DSVDONE        PAGE FIX OF ENVIRONMENT DONE
DSVPFXEN EQU   X'10'
DSVPFXEF EQU   X'FF'-DSVPFXEN
*
DSVPFXD  EQU   DSVDONE        PAGE FIX OF DUMMY DONE
DSVPFXDN EQU   X'08'
DSVPFXDF EQU   X'FF'-DSVPFXDN
*
DSVSEGT  EQU   DSVDONE        SEGMENT TABLE COPIED
DSVSEGTN EQU   X'04'
DSVSEGTF EQU   X'FF'-DSVSEGTN
*
DSVMISC  EQU   DSVDONE        MISCELLANEOUS INITIALIZATION DONE
DSVMISCN EQU   X'02'
DSVMISCF EQU   X'FF'-DSVMISCN
*
DSVEXT   EQU   DSVDONE        EXIT PROCESSING DONE
DSVEXTN  EQU   X'01'
DSVEXTF  EQU   X'FF'-DSVEXTN
*
DSVREST  DC    X'00'          REST OF IQAINI00 FLAGS
*
DSVREFR  EQU   DSVREST        IQAINI00 ENTERED FOR REFRESH
DSVREFRN EQU   X'80'
DSVREFRF EQU   X'FF'-DSVREFRN
*
DSVERR2  EQU   DSVREST        ESTAR EXIT ROUTINE (IQAINIR2) ENTERED
DSVERR2N EQU   X'40'
DSVERR2F EQU   X'FF'-DSVERR2N
*
DSVDIC   EQU   DSVREST        ERROR EXIT ROUTINE (IQAINIR1) CALLED
DSVDICN  EQU   X'20'          BY IQADIC00 EXIT ROUTINE
DSVDICF  EQU   X'FF'-DSVDICN
*
DSVERROR DC    X'00'          INTERNAL ERROR EXIT FLAG BYTE
*
DSVERR1  EQU   DSVERROR       INTERNAL ERROR EXIT CALLED
DSVERR1N EQU   X'80'
DSVERR1F EQU   X'FF'-DSVERR1N
*
DSVIOC1  EQU   DSVERROR       NO INTEGRATED OPERATOR'S CONSOLE FOUND
DSVIOC1N EQU   X'40'
DSVIOC1F EQU   X'FF'-DSVIOC1N
*
DSVIOC2  EQU   DSVERROR       NO DSS SAVE AREA
DSVIOC2N EQU   X'20'
DSVIOC2F EQU   X'FF'-DSVIOC2N
*
DSVZAOS  EQU   DSVERROR      ZERO AOS TABLE POINTER FOUND
DSVZAOSN EQU   X'10'
DSVZAOSF EQU   X'FF'-DSVZAOSN
*
DSVRSVF  EQU   DSVERROR      RESERVE
DSVRSVFN EQU   X'08'
DSVRSVFF EQU   X'FF'-DSVRSVFN
*
DSVPDER  EQU   DSVERROR       PAGING DEVICE NOT SUPPORTED
DSVPDERN EQU   X'04'
DSVPDERF EQU   X'FF'-DSVPDERN
*
DSVPFER  EQU   DSVERROR       PAGE FIX FAILURE
DSVPFERN EQU   X'02'
DSVPFERF EQU   X'FF'-DSVPFERN
*
DSVWORK1 DC    X'00'          WORK SPACE
DSVWORK2 DC    F'0'
DSVWORK3 DC    F'0'
DSVWORK4 DC    F'0'
DSVWORK5 DC    F'0'
DSVEND   EQU   *              END OF DSV
***********************************************************************
         MEND  ,  */
*%DSVPLS2: ;
  DCL 1 DSV BASED(DSVPTR),
        2 DSVID CHAR(3),         /* DSV IDENTIFIER - DEBUGGING AID   */
 /********************************************************************/
 /*                            DSV FLAGS                             */
 /********************************************************************/
 /* FLAG BYTE DSVFLG1 MUST FOLLOW DSVID FOR CS ON DSVID              */
        2 DSVFLG1  CHAR(1),      /* FIRST FLAG BYTE                  */

          3 DSVRIM   BIT(1),     /* RIM FLAG                         */
 %DSVRIMN='''1''B';              /* RIM FUNCTION COMPLETE            */
 %DSVRIMF='''0''B';              /* RIM FLAG OFF                     */

          3 DSVINIT  BIT(1),     /* INITIALIZATION FLAG              */
 %DSVINITN='''1''B';             /* INITIALIZATION IN PROGRESS       */
 %DSVINITF='''0''B';             /* INITIALIZATION FLAG OFF          */

          3 DSVATTN  BIT(1),     /* ATTENTION FLAG                   */
 %DSVATTNN='''1''B';             /* ATTENTION PENDING                */
 %DSVATTNF='''0''B';             /* ATTENTION BIT OFF                */

          3 DSVREFS  BIT(1),     /* LANGUAGE REFRESHING BIT          */
 %DSVREFSN='''1''B';             /* LANGUAGE REFRESHING BIT ON       */
 %DSVREFSF='''0''B';             /*  LANGUAGE REFRESHING BIT OFF     */

          3 DSVTERM  BIT(1),     /* TERMINATION FLAG                 */
 %DSVTERMN='''1''B';             /* TERMINATION IN PROGRESS          */
 %DSVTERMF='''0''B';             /* TERMINATION FLAG OFF             */

          3 DSVSPIN  BIT(1),     /* GLOBAL LANGUAGE SPIN BIT         */
 %DSVSPINN='''1''B';             /* SPINNING                         */
 %DSVSPINF='''0''B';             /* GLOBAL LANGUAGE SPIN BIT OFF     */

        2 DSVFLGS  CHAR(4),      /* RESERVED                         */
 /********************************************************************/
        2 DSVPDSUC PTR(31),      /* ADDR OF UCB FOR DSS DATA SET
                                    (INITIALIZED BY DSS RIM)         */
        2 DSVPDSST CHAR(4),      /* CCHH OF 1ST RECORD IN DSS DATA SET
                                    (INITIALIZED BY DSS RIM)         */
        2 DSVDVE   PTR(31),      /* ADDR OF ENVIORNMENT VECTOR TABLE
                                    (INITIALIZED BY IQAINI00)        */
        2 DSVINTOC PTR(31),      /* ADDR OF INTEGRATED OPERATOR'S
                                    CONSOLE (INITIALIZED BY IQAINI00)*/
        2 DSVAVT   PTR(31),      /* ADDR OF AOS VECTOR TABLE
                                    (INITIALIZED BY IQAINI00)        */
        2 DSVLANLO PTR(31),      /* DSS VM ADDR OF LANGUAGE LOAD
                                    MODULE                           */
        2 DSVLANHI PTR(31),      /* UPPPER BOUND OF DSS LANGUAGE
                                    VM                               */
        2 DSVINIAD PTR(31),      /* ADDRESS OF IQAINI00
                                    (INITIALIZED BY DSS RIM)         */
        2 DSVACTAD PTR(31),      /* ADDRESS OF IQAACT00
                                    (INITIALIZED BY IQAINI00)        */
        2 DSVRIHAD PTR(31),      /* ADDRESS OF IQARIH00              */
        2 DSVRSV0  PTR(31),      /* RESERVED                         */

        2 DSVLOCK PTR(31),       /* DSV LOCK WORD                    */
          3 DSVLCK   PTR(8),     /* LOCK BYTE                        */
          3 DSVLKTYP PTR(8),     /* ID OF FUNCTION THAT OWNS LOCK    */
          3 DSVLCKID PTR(16),    /* PHYSICAL ID OF LOCKING CPU       */

        2 DSVICCCW PTR(31),      /* ICC CONTROL WORD                 */
          3 DSVICCWT PTR(8),     /* ICC WAIT BYTE - FF-ICC WAITING
                                                   00-ICC NOT WAITING*/
          3 DSVICCCD PTR(8),     /* ICC COMPLETION CODE - SET BY THE
                                    CPU RECEIVING THE SIGP           */
          3 DSVICCID PTR(16),    /* PHYSICAL CPUID THAT ICC IS WAITING
                                    ON                               */

        2 DSVICTAD PTR(31),      /* TRANSFER ADDRESS - ICC           */
        2 DSVICPAD PTR(31),      /* PARAMETER LIST ADDR - ICC        */
        2 DSVRSV1  (6)PTR(31),   /* RESERVED                         */

        2 DSVNUIOC PTR(31),      /* WORD FOR CS BY IQAPPR00          */
          3 DSVUNUS1 PTR(16),    /* UNUSED                           */
          3 DSVRSCPU PTR(16),    /* PHYSICAL ID OF RESTART CPU OR CPU
                                   TO WHICH IQAPPR00 IS SWITCHING DSS*/
        2 DSVEVCPU PTR(16),      /* PHYSICAL ID OF CURRENT EVENT CPU */
        2 DSVINCPU PTR(16),      /* PHYSICAL ID OF INITIALIZATION CPU*/
        2 DSVRSV2  (2)PTR(15),   /* RESERVED                         */

        2 DSVDSTCB PTR(31),      /* ADDR OF DSS TCB                  */
        2 DSVVEDS1 PTR(31),      /* JOBSTEP TIMING RTN IN            */
        2 DSVVEDS2 PTR(31),      /* IN DISPATCHER                    */
        2 DSVRSV3  (5)PTR(31),   /* RESERVED                         */

 /********************************************************************/
 /*           THE OS/VS2 R2 SYSTEM HOOKS FOR DSS                     */
 /********************************************************************/
        2 DSVIOHK1 PTR(31),      /* LABEL AFTER SIOF INSTRUCTION IN
                                    IOS SIO SUBROUTINE               */
        2 DSVIOHK2 PTR(31),      /* LABEL AFTER SIO INSTRUCTION IN
                                    IOS SENSE SUBROUTINE             */
        2 DSVIOHK3 PTR(31),      /* LABEL AFTER TIO INSTRUCTION IN
                                    IOS DA STANDALONE SEEK ROUTINE   */
        2 DSVIOHK8 PTR(31),      /* LABEL AFTER SIO INSTRUCTION IN
                                    IOS SIO SUBROUTINE               */
        2 DSVLOAD  PTR(31),      /* DSS NOP HOOK IN LOAD             */
        2 DSVEXIT  PTR(31),      /* DSS NOP HOOK IN EXIT             */
        2 DSVVDSS  PTR(31),      /* NOP HOOK IN VARY CPU ONLINE RTN
                                 (INITIALIZED BY DSS RIM DURING NIP) */

        2 DSVCATST BDY(WORD),    /* START OF CONTROL ATS             */
          3 DSVIOHK4 PTR(31),    /* NOP HOOK IN IOS HALT I/O ROUTINE */
          3 DSVIOHK5 PTR(31),    /* NOP HOOK IN IOS HALT I/O ROUTINE */
          3 DSVIOHK6 PTR(31),    /* NOP HOOK IN I/O RESTART ROUTINE  */
          3 DSVIOHK7 PTR(31),    /* NOP HOOK IN I/O RESTART ROUTINE  */
          3 DSVDSSST PTR(31),    /* NOP HOOK IN STOP RESTART ROUTINE */
          3 DVSDSSRS PTR(31),    /* NOP HOOK IN STOP RESTART ROUTINE */
          3 DSVMCHK1 PTR(31),    /* NOP HOOK IN MCH(IGFPMTRM)        */
          3 DSVDSSNO PTR(31),    /* NOP HOOK IN RESTART FLIH         */
        2 DSVCATEN BDY(WORD),    /* END OF CONTROL ATS               */

          3 DSVRSV4  (2)PTR(31), /* RESERVED                         */
 /********************************************************************/
 /*            NON-MONITORABLE AREAS - READ/WRITE ACCESS             */
 /********************************************************************/
        2 DSVNONM,               /*BEGINNING OF NONMONITORABLE RANGES*/

          3 DSVNM1B  PTR(31),    /* DSS NOP HOOK IN LOAD             */
          3 DSVNM1E  PTR(31),    /* FIRST BYTE PAST END OF RANGE     */
          3 DSVNM2B  PTR(31),    /* DSS NOP HOOK IN EXIT             */
          3 DSVNM2E  PTR(31),    /* FIRST BYTE PAST END OF RANGE     */
          3 DSVNM3B  PTR(31),    /* VARY CPU CODE - NO PREFIX REG    */
          3 DSVNM3E  PTR(31),    /* FIRST BYTE PAST END OF RANGE
                                 (INITIALIZED BY DSS RIM DURING NIP) */
          3 DSVNM4B  PTR(31),    /* SYSTEM RESTART INTERRUPT HANDLER */
          3 DSVNM4E  PTR(31),    /* FIRST BYTE PAST END OF RANGE     */
          3 DSVNM5B  PTR(31),    /* QUIESCE RESTART INTERRUPT HANDLER*/
          3 DSVNM5E  PTR(31),    /* FIRST BYTE PAST END OF RANGE     */
          3 DSVNM6B  PTR(31),    /*FIRST INSTRUCTION IN MCH(IGFPMCIH)*/
          3 DSVNM6E  PTR(31),    /* FIRST BYTE PAST END OF RANGE     */
          3 DSVNM7B  PTR(31),    /* SECOND HALF OF PSA               */
          3 DSVNM7E  PTR(31),    /* FIRST BYTE PAST END OF RANGE     */
          3 DSVNM8B  PTR(31),    /* 1ST BYTE OF JOBSTEP TIMING RTN   */
          3 DSVNM8E  PTR(31),    /* LAST BYTE OF JOBSTEP TIMING RTN  */

        2 DSVNONME,              /* END OF NON-MONITORABLE RANGES    */

          3 DSVRSV5 (2)PTR(31),  /* RESERVED                         */

 /********************************************************************/
 /*             NON-MONITORABLE AREAS - READ ONLY ACCESS             */
 /********************************************************************/
        2 DSVRONM,               /*BEGINNING OF R-O NONMONITOR RANGES*/

          3 DSVPSAB  PTR(31),    /* BEGINNING OF FLC                 */
          3 DSVPSAE  PTR(31),    /* FIRST BYTE PAST END OF FLC       */
          3 DSVRO1B  PTR(31),    /* DSS PSA SAVE AREA                */
          3 DSVRO1E  PTR(31),    /* FIRST BYTE PAST END OF RANGE     */

        2 DSVRONME,              /* END OF R-O NON-MONITORABLE RANGES*/

          3 DSVRORSV (7)PTR(31), /* RESERVED                        */

 /********************************************************************/
 /*               INITIALIZATION FLAGS AND WORK AREA                 */
 /********************************************************************/
        2 DSVDONE  CHAR(1),       /* IQAINI00 PROGRESS FLAG BYTE     */

          3 DSVHK    BIT(1),      /* HOUSE KEEPING DONE              */
 %DSVHKN='''1''B';
 %DSVHKF='''0''B';

          3 DSVIOC   BIT(1),      /*INTEGRATED OPERATOR CONSOLE FOUND*/
 %DSVIOCN='''1''B';
 %DSVIOCF='''0''B';

          3 DSVPD    BIT(1),      /* PAGING DEVICE VERIFIED          */
 %DSVPDN='''1''B';
 %DSVPDF='''0''B';

          3 DSVPFXE  BIT(1),      /* PAGE FIX OF ENVIRONMENT DONE    */
 %DSVPFXEN='''1''B';
 %DSVPFXEF='''0''B';

          3 DSVPFXD  BIT(1),      /* PAGE FIX OF DUMMY DONE          */
 %DSVPFXDN='''1''B';
 %DSVPFXDF='''0''B';

          3 DSVSEGT  BIT(1),      /* SEGMENT TABLE COPIED            */
 %DSVSEGTN='''1''B';
 %DSVSEGTF='''0''B';

          3 DSVMISC  BIT(1),      /* MISC. INITIALIZATION DONE       */
 %DSVMISCN='''1''B';
 %DSVMISCF='''0''B';

          3 DSVEXT  BIT(1),       /* EXIT PROCESSING DONE            */
 %DSVEXTN='''1''B';
 %DSVEXTF='''0''B';

        2 DSVREST  CHAR(1),       /* REST OF IQAINI00 FLAGS          */

          3 DSVREFR  BIT(1),      /* IQAINI00 ENTERED FOR REFRESH    */
 %DSVREFRN='''1''B';
 %DSVREFRF='''0''B';

          3 DSVERR2  BIT(1),      /* ESTAR EXIT (IQAINIR2) ENTERED   */
 %DSVERR2N='''1''B';
 %DSVERR2F='''0''B';

          3 DSVDIC   BIT(1),      /* ERROR EXIT CALLED BY IQADIC00   */
 %DSVDICN='''1''B';
 %DSVDICF='''0''B';

        2 DSVERROR CHAR(1),       /* INTERNAL ERROR EXIT FLAG BYTE   */

          3 DSVERR1  BIT(1),      /* INTERNAL ERROR EXIT CALLED      */
 %DSVERR1N='''1''B';
 %DSVERR1F='''0''B';

          3 DSVIOC1  BIT(1),      /* INTEGRATED CONSOLE NOT FOUND    */
 %DSVIOC1N='''1''B';
 %DSVIOC1F='''0''B';

          3 DSVIOC2  BIT(1),      /* NO DSS SAVE AREA                */
 %DSVIOC2N='''1''B';
 %DSVIOC2F='''0''B';

          3 DSVZAOS  BIT(1),      /* ZERO AOS TABLE POINTER FOUND    */
 %DSVZAOSN='''1''B';
 %DSVZAOSF='''0''B';

          3 DSVRSVF  BIT(1),      /* RESERVE                         */
 %DSVRSVFN='''1''B';
 %DSVRSVFF='''0''B';

          3 DSVPDER  BIT(1),      /* PAGING DEVICE NOT SUPPORTED     */
 %DSVPDERN='''1''B';
 %DSVPDERF='''0''B';

          3 DSVPFER  BIT(1),      /* PAGE FIX FAILURE                */
 %DSVPFERN='''1''B';
 %DSVPFERF='''0''B';

        2 DSVWORK1 PTR(8),        /* WORK SPACE                      */
        2 DSVWORK2 PTR(31),
        2 DSVWORK3 PTR(31),
        2 DSVWORK4 PTR(31),
        2 DSVWORK5 PTR(31),
        2 DSVEND   CHAR(*);
 /********************************************************************/
