*        %GOTO SCBBSL1;                                              /*
         MACRO
         IHASCB &DSECT=YES                                           */
*%SCBBSL1 : ;
* /* MACMEAN SCB MEANS STAE CONTROL BLOCK                            */
* /* MACCOMP Y-1 SC1C5/PZD81                                         */
* /* MACSTAT Y-1 72245/20145                                         */
*        %GOTO SCBBSL;                                              /*
         AIF  ('&DSECT' EQ 'YES').SCB001
SCB      DS   0D -
         AGO  .SCB002
.SCB001  ANOP
SCB      DSECT ,       SCBPTR
.SCB002  SPACE 2
SCBCHAIN DS    A -     POINTER TO NEXT SCB ON CHAIN
SCBEXIT  DS    A -     POINTER TO USER WRITTEN EXIT ROUTINE
SCBPARM  DS    0A -    ADDRESS OF PARAMETER LIST FOR STA EXIT
SCBFLGS1 DS    B -     FIRST FLAG BYTE...
SCBSTAI  EQU   X'80' - .STAI SCB
SCBSTAR  EQU   X'40' - .STAR SCB
*                      .SCB IS FOR STAE IF NEITHER SCBSTAI
*                       NOR SCBSTAR BIT IS SET ON
SCBDUMMY EQU   X'20' - .DUMMY SCB - (WILL NOT BE SCHEDULED)
SCBESTAE EQU   X'10' - .ESTAE INDICATOR
*              X'08' - .(RESERVED)
SCBASYNC EQU   X'04' - .ALLOW ASYNCHRONOUS INTERRUPTS
SCBIOPRC EQU   X'03' - .I/O PROCESSING OPTION, BITS 6 AND 7--
*                           00 - QUIESCE I/O
*                           01 - HALT I/O
*                           10 - BYPASS I/O INTERVENTION
*                           11 - (RESERVED)
SCBNOIOP EQU   X'02' - .BYPASS I/O INTERVENTION
SCBHALT  EQU   X'01' - .HALT I/O
SCBPARMA DS    AL3 -   ADDRESS OF PARAMETER LIST FOR STA EXIT
SCBOWNR  DS    0A -    TCB/RB ADDRESS CONTROLLING THIS SCB
SCBFLGS2 DS    B -     SECOND FLAG BYTE...
*              X'80' - .RESERVED
SCBXCTL2 EQU   X'40' - .RETAIN THIS SCB ACROSS XCTL
*              X'20' - .(RESERVED)
SCBINUSE EQU   X'10' - .THIS SCB IN USE
*              X'08' - .(RESERVED)
*              X'04' - .(RESERVED)
SCBKEY0  EQU   X'02' - .USER IN KEY 0
SCBSUPER EQU   X'01' - .USER IN SUPERVISOR MODE
SCBOWNRA DS    AL3 -   RB ADDRESS IF STAE/STAR,
*                      TCB ADDRESS IF STAI.
SCBDATA  DS    0A -    FLAGS AND DATA FIELD
SCBFLGS3 DS    B -     OPTION FLAGS
*              X'80' - .(RESERVED)
SCBTERMI EQU   X'40' - .AUTHORIZED FOR TERM PROCESSING
SCBRECRD EQU   X'20' - .ERROR RECORD TO BE WRITTEN TO SYS1.LOGREC
SCBCNCEL EQU   X'10' - .SCB IS LOGICALLY CANCELED
SCBPRNTR EQU   X'08' - .SCB PREVIOUSLY ENTERED
SCBBRNTR EQU   X'04' - .BRANCH ENTERED SVC 60
SCBTERMO EQU   X'02' - .TERM PROCESSING ONLY
*              X'01' - .(RESERVED)
SCBPKEY  DS    C -     PROGRAM KEY
SCBID    DS    C -     SCB IDENTIFIER
SCBRSVRE DS    C -     RESERVED
SCBLEN   EQU   *-SCB   LENGTH OF SCB
         MEND  , */
*%SCBBSL  :  ;
*DECLARE
*  1 SCB      BASED(SCBPTR),
*   2 SCBCHAIN    PTR(31),               /* POINTER TO NEXT SCB ON
*                                           CHAIN                    */
*   2 SCBEXIT     PTR(31),               /* POINTER TO USER WRITTEN
*                                           EXIT ROUTINE             */
*   2 SCBPARM     PTR(31),               /* ADDRESS OF PARAMETER
*                                           LIST FOR STA EXIT        */
*    3 SCBFLGS1    CHAR(1),              /* FIRST FLAG BYTE...       */
*     4 SCBSTAI  BIT(1),                 /* .STAI SCB                */
*     4 SCBSTAR  BIT(1),                 /* .STAR SCB  .SCB IS FOR
*                                           STAE IF NEITHER SCBSTAI
*                                           NOR SCBSTAR BIT IS SET
*                                           ON                       */
*     4 SCBDUMMY BIT(1),                 /* .DUMMY SCB - (WILL NOT
*                                           BE SCHEDULED)  X'10' -
*                                           .(RESERVED)  X'08' -
*                                           .(RESERVED)              */
*     4 SCBESTAE BIT(1),                 /* ESTAE INDICATOR          */
*     4 *        BIT(1),                 /* RESERVED                 */
*     4 SCBASYNC BIT(1),                 /* .ALLOW ASYNCHRONOUS
*                                           INTERRUPTS               */
*     4 SCBIOPRC BIT(2),                 /* .I/O PROCESSING OPTION,
*                                           BITS 6 AND 7--  00 -
*                                           QUIESCE I/O  01 - HALT
*                                           I/O  10 - BYPASS I/O
*                                           INTERVENTION  11 -
*                                           (RESERVED)               */
*      5 SCBNOIOP BIT(1),                /* .BYPASS I/O INTERVENTION */
*      5 SCBHALT  BIT(1),                /* .HALT I/O                */
*    3 SCBPARMA    PTR(24)  BDY(BYTE),   /* ADDRESS OF PARAMETER
*                                           LIST FOR STA EXIT        */
*   2 SCBOWNR     PTR(31),               /* TCB/RB ADDRESS
*                                           CONTROLLING THIS SCB     */
*    3 SCBFLGS2    CHAR(1),              /* SECOND FLAG BYTE...      */
*     4 *        BIT(1),                 /* .RESERVED               */
*     4 SCBXCTL2 BIT(1),                 /* .RETAIN THIS SCB ACROSS
*                                           XCTL  X'40' -
*                                           .(RESERVED)              */
*     4 *        BIT(1),                 /* RESERVED                 */
*     4 SCBINUSE BIT(1),                 /* .THIS SCB IN USE  X'08'
*                                           - .(RESERVED)  X'04' -
*                                           .(RESERVED)              */
*     4 *        BIT(1),                 /* RESERVED                 */
*     4 *        BIT(1),                 /* RESERVED                 */
*     4 SCBKEY0  BIT(1),                 /* .USER IN KEY 0           */
*     4 SCBSUPER BIT(1),                 /* .USER IN SUPERVISOR MODE */
*    3 SCBOWNRA    PTR(24)  BDY(BYTE),   /* RB ADDRESS IF STAE/STAR,
*                                           TCB ADDRESS IF STAI.     */
*   2 SCBDATA  PTR(31),                  /* FLAGS AND DATA FIELD     */
*    3 SCBFLGS3 CHAR(1),                 /* OPTION FLAGS ...         */
*     4 *         BIT(1),                /* RESERVED                 */
*     4 SCBTERMI BIT(1),                 /* AUTHORIZED FOR SPECIAL   */
*                                        /* TERM PROCESSING          */
*     4 SCBRECRD BIT(1),                 /* ON INDICATES ERROR RECORD*/
*                                        /* TO BE WRITTEN TO         */
*                                        /* SYS1.LOGREC              */
*     4 SCBCNCEL BIT(1),                 /* SCB IS LOGICALLY CANCELED*/
*     4 SCBPRNTR BIT(1),                 /* SCB PREVIOUSLY ENTERED   */
*     4 SCBBRNTR BIT(1),                 /* BRANCH ENTERED SVC 60    */
*     4 SCBTERMO BIT(1),                 /* TERM PROCESSING ONLY     */
*     4 *        BIT(1),                 /* RESERVED                 */
*   3 SCBPKEY  CHAR(1),                  /* PROGRAM KEY              */
*   3 SCBID    CHAR(1),                  /* SCB IDENTIFIER           */
*   3 SCBRSVRE CHAR(1);                  /* RESERVED                 */
*%SCBLEN='LENGTH(SCB)';                  /* LENGTH OF SCB            */
