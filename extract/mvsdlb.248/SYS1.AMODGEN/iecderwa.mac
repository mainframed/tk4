*%IECDERWA: MACRO;
*        GOTO  ERWAPLS;            /* GO TO THE PLS VERSION   */
* /*     BAL CODE IS CONSIDERED AS A COMMENT
         MACRO
         IECDERWA &LIST
         LCLA  &INDEX
         LCLB  &OPT(10),&NOSEG,&ALLSEG
         SPACE 1
         AIF   (T'&LIST EQ 'O').DEFAULT
         AIF   ('&LIST(1)' EQ 'ALL').ALLGEN
.SETOPT  ANOP
&INDEX   SETA  &INDEX+1
&OPT(&INDEX) SETB 1
         AIF   (&INDEX NE 10).SETOPT
         SPACE 1
&INDEX   SETA  0
.LOOP    ANOP
         AIF   (&INDEX EQ N'&LIST).GEN
&INDEX   SETA  &INDEX+1
         AIF   ('&LIST(&INDEX)' EQ 'NONE').NOGEN
         AIF   ('&LIST(&INDEX)' EQ 'ALL').ALLGEN
         SPACE 1
         AIF   ('&LIST(&INDEX)' NE 'EWD').LA
&OPT(1)  SETB  0
         AGO   .LOOP
.LA      AIF   ('&LIST(&INDEX)' NE 'EWT').LB
&OPT(2)  SETB  0
         AGO   .LOOP
.LB      AIF   ('&LIST(&INDEX)' NE 'EWU').LC
&OPT(3)  SETB  0
         AGO   .LOOP
.LC      AIF   ('&LIST(&INDEX)' NE 'EWG').LD
&OPT(4)  SETB  0
         AGO   .LOOP
.LD      AIF   ('&LIST(&INDEX)' NE 'EWGX').LE
&OPT(5)  SETB  0
         AGO   .LOOP
.LE      AIF   ('&LIST(&INDEX)' NE 'EWTC').LF
&OPT(6)  SETB  0
         AGO   .LOOP
.LF      AIF   ('&LIST(&INDEX)' NE 'EWAT').LG
&OPT(7)  SETB  0
         AGO   .LOOP
.LG      AIF   ('&LIST(&INDEX)' NE 'EWBT').LH
&OPT(8)  SETB  0
         AGO   .LOOP
.LH      AIF   ('&LIST(&INDEX)' NE 'EWC').ERR
&OPT(9)  SETB  0
         AGO   .LOOP
.ERR     ANOP
         MNOTE 8,'INVALID OPERAND &LIST(&INDEX)'
         MEXIT
.DEFAULT ANOP
         EWAMAP
         ORG   EWAIERP
         EWDMAP
         MEXIT
.ALLGEN  ANOP
&ALLSEG  SETB  1
         AGO   .GEN
.NOGEN   ANOP
&NOSEG   SETB  1
         SPACE 1
.GEN     ANOP
         EWAMAP
         AIF   (&NOSEG).END
         AIF   (&ALLSEG).GA
         AIF   (&OPT(1)).NA
.GA      ORG   EWAIERP
         EWDMAP
.NA      AIF   (&ALLSEG).GB
         AIF   (&OPT(2)).NB
.GB      ORG   EWAIERP
         EWTMAP
.NB      AIF   (&ALLSEG).GC
         AIF   (&OPT(3)).NC
.GC      ORG   EWAIERP
         EWUMAP
.NC      AIF   (&ALLSEG).GD
         AIF   (&OPT(4)).ND
.GD      ORG   EWAIERP
*        EWGMAP
.ND      AIF   (&ALLSEG).GE
         AIF   (&OPT(5)).NE
.GE      ORG   EWAIERP
*        EWGXMAP
.NE      AIF   (&ALLSEG).GF
         AIF   (&OPT(6)).NF
.GF      ORG   EWAIERP
         EWTCMAP
.NF      AIF   (&ALLSEG).GG
         AIF   (&OPT(7)).NG
.GG      ORG   EWAIERP
*        EWATMAP
.NG      AIF   (&ALLSEG).GH
         AIF   (&OPT(8)).NH
.GH      ORG   EWAIERP
*        EWBTMAP
.NH      AIF   (&ALLSEG).GI
         AIF   (&OPT(9)).NI
.GI      ORG   EWAIERP
*        EWCMAP
         SPACE 1
.NI      ANOP
.END     MEND
* */
*ERWAPLS: ;
*   ANS('@INCLUDE  SYSLIB(EWAMAP);');
*
*   DCL  VALUE  FIXED  INTERNAL;
*   DCL  LNGTH  FIXED  INTERNAL;
*   DCL  INDX  FIXED  INTERNAL;
*   DCL  BYTEMAP(9)  FIXED  INTERNAL;
*   DCL  M  FIXED  INTERNAL;
*   DCL  A  CHAR   INTERNAL;
*    A=MACLIST;
*
*        INDX=1;                   /* INIT INDEX TO 1         */
*LOOP:   IF INDX > 9               /* IF BYTEMAP IS INITED,   */
*        THEN GOTO INITD;          /* GO TO START TESTING     */
*        ELSE;
*          DO;
*            BYTEMAP(INDX) = 0;    /* INITIALIZE ALL ELEMENTS */
*            INDX = INDX + 1;      /* IN BYTEMAP TO 0.        */
*            GOTO LOOP;
*          END;
*
*INITD:  VALUE=NUMBER(MACLIST);    /* FIND # OF MAPS SPECIFIED*/
*        IF VALUE = 0              /* IF NO PARMS SPECIFIED,  */
*        THEN
*          DO;                     /* EWD IS A DEFAULT SO,    */
*            BYTEMAP(1) = 1;       /* GET EWD IND. ON         */
*            GOTO GETEXT;          /* AND GO SELECT MAPS      */
*          END;
*        ELSE;
*
*        VALUE=INDEX(A,'ALL');     /* IS ALL SPECIFIED        */
*        IF VALUE ^= 0             /* YES, GO GET ALL MAPS    */
*        THEN GOTO SETALL;
*        ELSE;
*
*        VALUE=INDEX(A,'NONE');    /* IS NONE SPECIFIED       */
*        IF VALUE ^= 0             /* YES DONT GET ANY MAPS   */
*        THEN GOTO ENDUP;
*        ELSE;
*
*        INDX = 1;                 /* INITIALIZE INDEX TO 1   */
*        VALUE=NUMBER(MACLIST);    /* GET NUMBER OF MAPS      */
*
*LOOP1:  IF INDX > VALUE           /* IF AT END OF OPTIONS    */
*        THEN GOTO GETEXT;         /* GO SELECT MAPS          */
*        ELSE;
*
*        A=MACLIST(INDX);
*        IF A='EWD'                /* IF D. A. WANTED,        */
*        THEN
*         DO;
*          BYTEMAP(1) = 1;         /* SET EWD IND. ON         */
*          GOTO INCRIX;            /* AND GO CHECK NEXT       */
*         END;
*        ELSE;
*
*        IF A='EWT'
*        THEN
*         DO;
*          BYTEMAP(2) = 1;
*          GOTO INCRIX;
*         END;
*        ELSE;
*
*        IF A='EWU'
*        THEN
*         DO;
*          BYTEMAP(3) = 1;
*          GOTO INCRIX;
*         END;
*        ELSE;
*
*        IF A='EWG'
*        THEN
*         DO;
*          BYTEMAP(4) = 1;
*          GOTO INCRIX;
*         END;
*        ELSE;
*
*        IF A='EWGX'
*        THEN
*         DO;
*          BYTEMAP(5) = 1;
*          GOTO INCRIX;
*         END;
*        ELSE;
*
*        IF A='EWTC'
*        THEN
*         DO;
*          BYTEMAP(6) = 1;
*          GOTO INCRIX;
*         END;
*        ELSE;
*
*        IF A='EWAT'
*        THEN
*         DO;
*          BYTEMAP(7) = 1;
*          GOTO INCRIX;
*         END;
*        ELSE;
*
*        IF A='EWBT'
*        THEN
*         DO;
*          BYTEMAP(8) = 1;
*          GOTO INCRIX;
*         END;
*        ELSE;
*
*        IF A='EWC'
*        THEN
*         DO;
*          BYTEMAP(9) = 1;
*          GOTO INCRIX;
*         END;
*        ELSE;
*
*        ANS  MSG('INVALID OPTION SPECIFIED IN IECDERWA');
*
*        GOTO ENDUP;               /* VALID OPTION NOT FOUND  */
*
*INCRIX: INDX = INDX + 1;          /* INCR TO NEXT OPTION     */
*        GOTO LOOP1;               /* CHECK THAT OPTION       */
*
*SETALL: INDX=1;                   /* THIS LOOP SETS ALL BITS */
*SETLOOP: IF INDX > 9 THEN         /* TO ONE TO GET ALL MAPS  */
*        GOTO GETEXT;
*        ELSE;
*        BYTEMAP(INDX) = 1;
*        INDX = INDX + 1;
*        GOTO SETLOOP;

*   /* THIS SECTION OF CODE GETS THE MAPS THAT CORRESPOND     */
*   /* WITH THE 'ON' BITS IN THE BYTEMAP.                     */
*
*GETEXT: M = MACLMAR;
*        IF BYTEMAP(1) = 1
*        THEN
*          DO;
*            ANS('@INCLUDE SYSLIB(EWDMAP);') COL(M);
*            ANS  SKIP;
*          END;
*        ELSE;
*        IF BYTEMAP(2) = 1
*        THEN
*          DO;
*            ANS('@INCLUDE SYSLIB(EWTMAP);') SKIP COL(M);
*            ANS  SKIP;
*          END;
*        ELSE;
*        IF BYTEMAP(3) = 1
*        THEN
*          DO;
*            ANS('@INCLUDE SYSLIB(EWUMAP);') SKIP COL(M);
*            ANS  SKIP;
*          END;
*        ELSE;
*        IF BYTEMAP(4) = 1
*        THEN;
* /*       DO;
*            ANS('@INCLUDE SYSLIB(EWGMAP);') SKIP COL(M);
*            ANS  SKIP;
*          END;                                               */
*        ELSE;
*        IF BYTEMAP(5) = 1
*        THEN;
* /*       DO;
*            ANS('@INCLUDE SYSLIB(EWGXMAP);') SKIP COL(M);
*            ANS  SKIP;
*          END;                                               */
*        ELSE;
*        IF BYTEMAP(6) = 1
*        THEN
*          DO;
*            ANS('@INCLUDE SYSLIB(EWTCMAP);') SKIP COL(M);
*            ANS  SKIP;
*          END;
*        ELSE;
*        IF BYTEMAP(7) = 1
*        THEN;
* /*       DO;
*            ANS('@INCLUDE SYSLIB(EWATMAP);') SKIP COL(M);
*            ANS  SKIP;
*          END;                                               */
*        ELSE;
*        IF BYTEMAP(8) = 1
*        THEN;
* /*       DO;
*            ANS('@INCLUDE SYSLIB(EWBTMAP);') SKIP COL(M);
*            ANS  SKIP;
*          END;                                               */
*        ELSE;
*        IF BYTEMAP(9) = 1
*        THEN;
* /*       DO;
*            ANS('@INCLUDE SYSLIB(EWCMAP);') SKIP COL(M);
*            ANS  SKIP;
*          END;                                               */
*        ELSE;
*
*ENDUP: ;
*%END IECDERWA;
