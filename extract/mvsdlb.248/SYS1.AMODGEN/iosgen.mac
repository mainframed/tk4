         MACRO
&NAME    IOSGEN &FUNC,&TABLE=,&UCB=,&REG=,&VAR=,&LINKR=
         GBLB  &IECIHDR                 HEADER SWITCH
         GBLB  &IECIFLG,&IECITP         FIRST TIME SWITCH
         GBLB  &IECIMNT,&IECIDET        FIRST TIME SWITCH
         GBLB  &IECILCH,&IECIRES        FIRST TIME SWITCH
         LCLC  &LABEL                   LABEL GENERATION
         LCLC  &FIELD                   UCB FIELD
         LCLC  &BIT,&INDEX              UCB EQUATE NAME
.*                                      OR BRANCH ENTRY (IECVGENA)
.*                                      OR TP ERRTAB
         AIF   ('&IECIHDR' EQ '1').IOSG010
&IECIHDR SETB  1                        SET HEADER SWITCH
*****************************************************************
*                                                               *
*             IOSGEN MACRO                                      *
*                                                               *
*        OS/VS2 RELEASE 2, 10/14/74, LEVEL=00                   *
*                                                               *
*        METHOD OF ACCESS                                       *
*              BAL - IOSGEN &FUNC,.....REQUIRED KEYWORDS        *
*              PLS - GEN REFS(....,....,MAPPING MACRO LABELS)   *
*                    (IOSGEN &FUNC,...REQUIRED KEYWORDS);       *
*                                                               *
*        THE MACRO FACILITIES OF IOSGEN ARE PROVIDED TO         *
*        SUPPORT FUNCTIONS WHICH REQUIRE A CHANGE TO OR         *
*        INFORMATION FROM THE RESOURCES WHICH GOVERN THE        *
*        CONTROL STRUCTURE OF THE I/O SUPERVISOR.  THESE        *
*        ARE NOT AN INTEGRAL PART OF IOS AND, THROUGH IOSGEN,   *
*        CAN REMAIN INDEPENDENT OF THE RESOURCE GOVERNING       *
*        STRUCTURE. IOSGEN IS A PRIVATE MACRO AVAILABLE         *
*        ONLY TO AUTHORIZED SYSTEM ROUTINES.                    *
*                                                               *
*****************************************************************
.IOSG010 ANOP
         AIF   ('&FUNC' EQ 'DETECTOR').DET000
         AIF   ('&FUNC' EQ 'DOM').DOM000
         AIF   ('&FUNC' EQ 'LCH').LCH000
         AIF   ('&FUNC' EQ 'MAP').MAP000
         AIF   ('&FUNC' EQ 'MOUNT').MNT000
         AIF   ('&FUNC' EQ 'PTHAVL').PTH000
         AIF   ('&FUNC' EQ 'RESTART').RES000
         AIF   ('&FUNC' EQ 'SIMINT').SIM000
         AIF   ('&FUNC' EQ 'SWAP').SWP000
         AIF   ('&FUNC' EQ 'TP').TP000
         AIF   ('&FUNC' EQ 'UCBFLG').FLG000
         AIF   ('&FUNC' EQ 'UCBLOOK').UCB000
         AIF   ('&FUNC' EQ 'VARY').VAR000
         AIF   ('&FUNC' EQ 'SETVOID').SV000                    @Y30LPLC
         AGO   .IOSGEN3
.*****     *****     *****     *****     *****     *****     *****
.*****      MAP      *****      MAP      *****      MAP      *****
.*****     *****     *****     *****     *****     *****     *****
.MAP000  ANOP
*
*    THE MAP FUNCTION HAS BEEN REPLACED BY THE IOSMAP MACRO    @G64APLK
*
         AGO   .IOSGEN3
.*****     *****     *****     *****     *****     *****     *****
.*****     PTHAVL    *****     PTHAVL    *****     PTHAVL    *****
.*****     *****     *****     *****     *****     *****     *****
.PTH000  ANOP
*
*        THE PTHAVL FUNCTION HAS BEEN DELETED.                 @G64APLK
*
         AGO   .IOSGEN3                                        @ZA12429
.*****     *****     *****     *****     *****     *****     *****
.*****    UCBLOOK    *****    UCBLOOK    *****    UCBLOOK    *****
.*****     *****     *****     *****     *****     *****     *****
.UCB000  ANOP
.*
.*       CSECT AUTHORIZATION
.*
         AIF   (('&SYSECT' EQ 'IQAALL00') OR                           X
               ('&SYSECT' EQ 'IQAERR00')).UCBAUTH
         AIF   ('&SYSECT' EQ 'IGC0005I').UCBAUTH
         AIF   ('&SYSECT' EQ 'IGC0905I').UCBAUTH
         AIF   ('&SYSECT' EQ 'IEEVDEV').UCBAUTH
         AIF   ('&SYSECT' EQ 'IEEVPTH').UCBAUTH
         AIF   ('&SYSECT' EQ 'IEAVNIP0').UCBAUTH
         AIF   ('&SYSECT' EQ 'IEAVNIPM').UCBAUTH
         AIF   ('&SYSECT' EQ 'WMMCCABE').UCBAUTH
         AIF   ('&SYSECT' EQ 'IEEMPDM').UCBAUTH
         AIF   ('&SYSECT' EQ 'IQASTK00').UCBAUTH
         AIF   ('&SYSECT' EQ 'ISTINMAV').UCBAUTH
         AIF   ('&SYSECT' EQ 'IEE3603D').UCBAUTH
         AIF   ('&SYSECT' EQ 'IGC0012F').UCBAUTH               @ZUP1085
        AIF   ('&SYSECT' EQ 'ICBVMT00').UCBAUTH               @ZA12429
.*       AGO   .IOSGEN1                                        @ZA12429
.UCBAUTH ANOP
         SPACE 2
*****************************************************************
*                                                               *
* FUNCTION:                                                     *
*    UCBLOOK - LOCATES THE UNIT CONTROL BLOCK (UCB) ASSO-       *
*    CIATED WITH A DEVICE ADDRESS.                              *
*                                                               *
* MACRO CALL:                                                   *
*    LABEL  IOSGEN  UCBLOOK,UCB=(REG),REG=(REG)                 *
*                                                               *
*       PLS - GEN REFS(CVTILK1,CVTILK2,CVTIXAVL,CVTMAP,         *
*             IOCOMEX,CVTPTR,IOCOM,IOX,IOCUCBBM,IOXHICH)       @YM06032
*             (IOSGEN UCBLOOK,...KEYWORDS AS IN BAL);           *
*                                                               *
* INPUT:                                                        *
*    REGISTER 13 MUST CONTAIN THE ADDRESS OF A 16 WORD          *
*    SAVEAREA.                                                  *
*                                                               *
*    REGISTER 15 WILL BE USED AS A BASE REGISTER AND, AS        *
*    SUCH, USING AND DROP STATEMENTS ARE ISSUED.  IF THE        *
*    CALLING MODULE IS USING REGISTER 15 AS A BASE, IT MUST     *
*    REESTABLISH ADDRESSABILITY BY ISSUING ANOTHER USING        *
*    STATEMENT.                                                 *
*                                                               *
*    UCB=  MAY SPECIFY A GPR (SYMBOLIC OR ABSOLUTE), WHICH      *
*    IS TO CONTAIN THE ADDRESS OF THE UCB COMMON SEGMENT UPON   *
*    RETURN TO THE CALLER. IF OMITTED, REGISTER 7 IS ASSUMMED.  *
*                                                               *
*    REG=  MAY SPECIFY A GPR (SYMBOLIC OR ABSOLUTE) WHICH       *
*    WILL CONTAIN THE HEXIDECIMAL DEVICE ADDRESS; RIGHT         *
*    JUSTIFIED.  IF THIS PARAMETER IS OMITTED, REGISTER 6 IS    *
*    ASSUMED.                                                   *
*                                                               *
*    LABEL - OPTIONAL LABEL.                                    *
*                                                               *
* OUTPUT:                                                       *
*                                                               *
*    UCB=  CONTAINS THE ADDRESS OF THE UCB.                     *
*                                                               *
*    REGISTER 15 WILL CONTAIN ONE OF THE FOLLOWING RETURN CODES:*
*         00=  UCB ADDRESS HAS BEEN FOUND                       *
*         04=  DEVICE ADDRESS WAS INVALID                       *
*                                                               *
* ATTRIBUTES:                                                   *
*    THIS FUNCTION IS EXPANDED AS RE-ENTRANT, IN-LINE CODE.     *
*                                                               *
* OTHER:                                                        *
*    THE EXPANSION OF THIS FUNCTION IS DEPENDENT ON THE         *
*    SPECIFICATION OF THE FOLLOWING MAPPING MACROS              *
*    IN THE CALLING CSECT ASSEMBLY:                             *
*         CVT   DSECT=YES                                       *
*         IECDIOCM                                              *
*         IECDIOCX                                            @YM03330*
*                                                               *
*    LOCKS ARE NOT REQUIRED BY THIS FUNCTION.                   *
*                                                               *
*****************************************************************
         SPACE 2
*****************************************************************
*                                                               *
*        REGISTER DEFINITIONS                                   *
*                                                               *
*****************************************************************
         SPACE
IECIUZRO EQU   0                   RESERVED
*        EQU   1                   RESERVED
IECIUWK2 EQU   2                   EVEN WORK REG
IECIUWK3 EQU   3                   ODD WORK REG
IECIUCVT EQU   4                   CVT PTR
IECIULST EQU   5                   CHAN AND UCB LIST PTR
IECIUEVN EQU   6                   EVEN WORK REG
IECIUODD EQU   7                   ODD WORK REG
IECIUNDX EQU   8                   TABLE INDEX REG
*        EQU   9                   RESERVED
*        EQU   10                  RESERVED
*        EQU   11                  RESERVED
*        EQU   12                  RESERVED
IECIUSAV EQU   13                  SAVE AREA PTR
*        EQU   14                  RESERVED
IECIUBAS EQU   15                  BASE REG
         SPACE
*****************************************************************
*                                                               *
*        MISCELLANEOUS EQUATES                                  *
*                                                               *
*****************************************************************
         SPACE
IECIURC4 EQU   4                   RETURN CODE OF 4
IECIUMBM EQU   128                 MOVING BIT MASK
IECIUB16 EQU   16                  NO. OF BITS FOR SHIFTS      @YM06032
IECIUDNM EQU   X'0F'               DEVICE NUMBER MASK
         AIF   ('&UCB' NE '').UCB010
IECIUUCB EQU   28                  OFFSET IN SAVE AREA FOR REG 7
*                                  *WHICH WILL CONTAIN ADDR OF
*                                  *VALID UCB
.UCB010  ANOP
IECIURTC EQU   60                  OFFSET FOR REG 15 IN SAVEAREA
*                                  *WHICH WILL CONTAIN
*                                  *RETURN CODE
         SPACE
*****************************************************************
*                                                               *
*        ESTABLISH ADDRESSABILITY                               *
*                                                               *
*****************************************************************
         SPACE
&NAME    STM   IECIUZRO,IECIUBAS,0(IECIUSAV)  SAVE REGS
         BALR  IECIUBAS,0          EST ADDRESSABILITY
         USING *,IECIUBAS
         SPACE
         AIF   ('&REG' EQ '').UCB030
         LR    IECIUEVN,&REG(1)    GET DEVICE ADDR FROM CALLER
.UCB030  ANOP
         SPACE
****************************************************************
*                                                              *
*        VALIDATE UCB DEVICE ADDRESS                           *
*                                                              *
****************************************************************
         SPACE
         SR    IECIUODD,IECIUODD   ZERO WORK REGISTER          @YM06032
         SRDL  IECIUEVN,IECIUB16   ISOLATE DEVICE ADDRESS      @YM06032
         LTR   IECIUEVN,IECIUEVN   ANYTHING IN HI BYTES-INVALID@YM06032
         BNZ   IECIU070            YES, TAKE ERROR EXIT        @YM06032
         SPACE
         SLDL  IECIUEVN,IECIUB16   RESTORE DEVICE ADDRESS      @YM06032
         SPACE
         L     IECIUCVT,CVTPTR(0,0)  GET CVT PTR
         L     IECIULST,CVTIXAVL-CVTMAP(0,IECIUCVT)  GET IOCOM PTR
         L     IECIUWK2,IOCOMEX-IOCOM(0,IECIULST) GET IOX PTR
         SPACE
         CLM   IECIUEVN,2,IOXHICH-IOX(IECIUWK2) IS CHAN VALID? @YM06032
         BH    IECIU070            NO, TAKE ERROR EXIT
         SPACE
         LR    IECIUWK2,IECIUEVN   COPY DEVICE ADDR
         L     IECIULST,IOCUCBBM-IOCOM(0,IECIULST) GET UCB
*                                  *BIT MASK TABLE ADDR
         SRDL  IECIUWK2,3(0)       CREATE TABLE AND BIT INDICES
         SRL   IECIUWK3,29(0)      ALIGN BIT INDEX
         IC    IECIUWK2,0(IECIUWK2,IECIULST) GET BYTE
*                                  *WITH DEVICE BIT
         LA    IECIULST,IECIUMBM(0,0) GET MOVING BIT MASK
         SRL   IECIULST,0(IECIUWK3) CREATE DEVICE MASK
         SPACE
         NR    IECIUWK2,IECIULST   AND OUT ALL BUT DEVICE BIT
         BZ    IECIU070            INVALID DEVICE ADDRESS
         SPACE
*****************************************************************
*                                                               *
*        ISOLATE DEVICE NUMBER, CHANNEL ADDRESS AND             *
*              CONTROL UNIT ADDRESS                             *
*                                                               *
*****************************************************************
         SPACE
         LA    IECIUNDX,IECIUDNM(0,0)  GET DEVICE NUMBER MASK
         NR    IECIUNDX,IECIUEVN   ISOLATE DEVICE NUMBER
         SRDL  IECIUEVN,8(0)       SEPARATE CHANNEL AND
*                                  *CONTROL UNIT ADDRESSES
*                                  *IN EVEN/ODD REGS
         SRL   IECIUODD,28(0)      ISOLATE CONTROL UNIT
         SPACE
*****************************************************************
*                                                               *
*        GO TO CHANNEL TABLE AND CALCULATE CONTROL UNIT INDEX   *
*        CALCULATE UCB TABLE INDEX AND OBTAIN UCB TABLE PTR     *
*                                                               *
*****************************************************************
         SPACE
         L     IECIULST,CVTILK1-CVTMAP(0,IECIUCVT)  GET CHANNEL
*                                  *TABLE PTR
         IC    IECIUEVN,0(IECIUEVN,IECIULST)  GET CHAN INDEX
         SPACE
         ALR   IECIUEVN,IECIUODD   ADD CHAN INDEX TO CU ADDR   @ZA08721
         SPACE
         ALR   IECIUEVN,IECIUEVN   GET 2 * THIS VALUE          @ZA08721
*                                  *TO GET CONTROL UNIT INDEX
         AH    IECIUNDX,0(IECIUEVN,IECIULST) ADD CU INDEX TO
*                                  *CU NO.
         SPACE
         ALR   IECIUNDX,IECIUNDX   DOUBLE CU INDEX
*                                  *TO GET UCB PTR INDEX
         L     IECIULST,CVTILK2-CVTMAP(0,IECIUCVT)  GET DEVICE
*                                  *LIST PTR--START OF LIST
         LH    IECIUODD,0(IECIUNDX,IECIULST)  GET UCB PTR
         N     IECIUODD,IECIUMSK   AND OFF ANY PROPAGATED BITS @Z30AALB
         SPACE
*****************************************************************
*                                                               *
*        SET RETURN CODE EQUAL TO ZERO, AND SET UCB ADDRESS     *
*                                                               *
*****************************************************************
         SPACE
         SLR   IECIUNDX,IECIUNDX   SET RETURN CODE =0
         ST    IECIUNDX,IECIURTC(0,IECIUSAV)  STORE RETURN CODE
*                                  *IN REG 15 REG SAVE
         AIF   ('&UCB' EQ '').UCB040
         LA    IECIUNDX,&UCB(1).(0,0)   GET REG VALUE
         SLL   IECIUNDX,2(0)  REG VALUE * 4 = INDEX
         ST    IECIUODD,0(IECIUNDX,IECIUSAV)  SET UCB ADDR
         AGO   .UCB050
.UCB040  ANOP
         ST    IECIUODD,IECIUUCB(0,IECIUSAV) SET UCB ADDR
.UCB050  ANOP
         B     IECIUXIT            GO RESTORE REGS
         SPACE
***********************************************************************
*                                                                     *
*        CONSTANT FOR UCBLOOK FUNCTION, LOCATED HERE TO ALLEVIATE AN  *
*        EXTRA BRANCH INSTRUCTION AROUND IT.                          *
*                                                                     *
***********************************************************************
         SPACE
         DS    0F                  PERFORMANCE BOUNDRY         @Z30AALB
IECIUMSK DC    X'0000FFFF'         AND MASK FOR UCB ADDRESS    @Z30AALB
         SPACE
*****************************************************************
*                                                               *
*    INVALID DEVICE ADDRESS.  SET RETURN CODE EQUAL TO FOUR.    *
*                                                               *
*****************************************************************
         SPACE
IECIU070 LA    IECIUNDX,IECIURC4(0,0)   SET RETURN CODE =4
         ST    IECIUNDX,IECIURTC(0,IECIUSAV)  STORE IN REG 15
*                                  *SAVE AREA
         SPACE
*****************************************************************
*                                                               *
*        RESTORE REGISTERS AND RETURN INLINE TO CALLER          *
*                                                               *
*****************************************************************
         SPACE
IECIUXIT LM    IECIUZRO,IECIUBAS,0(IECIUSAV)  RESTORE REGS
*                                  *REG 15 LOADS RETURN CODE
         DROP  IECIUBAS
         MEXIT
.*****     *****     *****     *****     *****     *****     *****
.*****     UCBFLG    *****     UCBFLG    *****     UCBFLG    *****
.*****     *****     *****     *****     *****     *****     *****
.FLG000  ANOP
.*
.*       CSECT AUTHORIZATION
.*
         AIF   ('&SYSECT' EQ 'IGE0025C').FLGAUTH
         AIF   ('&SYSECT' EQ 'IEFAB494').FLGAUTH
         AIF   ('&SYSECT' EQ 'IGC0005I').FLGAUTH
         AIF   ('&SYSECT' EQ 'IGC0905I').FLGAUTH
         AIF   ('&SYSECT' EQ 'IEC1052').FLGAUTH
         AIF   ('&SYSECT' EQ 'IFG0193B').FLGAUTH
         AIF   ('&SYSECT' EQ 'IFG0194J').FLGAUTH
         AIF   ('&SYSECT' EQ 'IFG0202G').FLGAUTH
         AIF   ('&SYSECT' EQ 'IEEVCPU').FLGAUTH
         AIF   ('&SYSECT' EQ 'AMDSAUCB').FLGAUTH
         AIF   ('&SYSECT' EQ 'IECVIOPM').FLGAUTH
         AIF   ('&SYSECT' EQ 'WMMCCABE').FLGAUTH
         AIF   ('&SYSECT' EQ 'IGG0290F').FLGAUTH
         AIF   ('&SYSECT' EQ 'IGG0191A').FLGAUTH
         AIF   ('&SYSECT' EQ 'IGE0100I').FLGAUTH
         AIF   ('&SYSECT' EQ 'IGFTMC00').FLGAUTH               @Z40WPLP
         AIF   ('&SYSECT' EQ 'IGFTMCHK').FLGAUTH
         AIF   ('&SYSECT' EQ 'IGFDM1').FLGAUTH
         AIF   ('&SYSECT' EQ 'IGFDI1').FLGAUTH
         AIF   ('&SYSECT' EQ 'ER3890').FLGAUTH
         AIF   ('&SYSECT' EQ 'IGG019S1').FLGAUTH
         AIF   ('&SYSECT' EQ 'IGG0197D').FLGAUTH
         AIF   ('&SYSECT' EQ 'IGG019V5').FLGAUTH
         AIF   ('&SYSECT' EQ 'IATSSDI').FLGAUTH JES3 CTC      @Z40WPLD
         AIF   ('&SYSECT' EQ 'IATMSIO').FLGAUTH
         AIF   ('&SYSECT' EQ 'IATGRCT').FLGAUTH                @ZM34513
         AIF   ('&SYSECT' EQ 'IECTCATN').FLGAUTH
         AIF   ('&SYSECT' EQ 'IGG019S3').FLGAUTH               @ED030LD
         AIF   ('&SYSECT' EQ 'IGE0001H').FLGAUTH               @Y30LB16
         AIF   ('&SYSECT' EQ 'IEE3103D').FLGAUTH
         AIF   ('&SYSECT' EQ 'IEFAB488').FLGAUTH               @ZA06075
         AIF   ('&SYSECT' EQ 'IGFDE1').FLGAUTH                 @ZA12429
         AIF   ('&SYSECT' EQ 'IGE0002E').FLGAUTH               @ZA11845
         AIF   ('&SYSECT' EQ 'IGE0003C').FLGAUTH
         AIF   ('&SYSECT' EQ 'IGTUJA').FLGAUTH
.*       AGO   .IOSGEN1                                        @ZA12429
.FLGAUTH ANOP
.*
.*       CHECK FOR MISSING AND INVALID PARAMETERS
.*
         AIF   ('&UCB' EQ '').IOSGEN3   REQUIRED KEYWORD
         AIF   (('&TABLE' EQ 'UCBACTV') OR ('&TABLE' EQ 'UCBBSY') OR   X
               ('&TABLE' EQ 'UCBPSNS') OR ('&TABLE' EQ 'UCBNRY') OR    X
               ('&TABLE' EQ 'UCBTICBT')).FLG005
         AIF   (('&TABLE' EQ 'UCBDDRSW') OR ('&TABLE' EQ 'UCBQISCE')   X
               OR ('&TABLE' EQ 'UCBIVRR') OR ('&TABLE' EQ 'UCBIVRS')   X
               OR ('&TABLE' EQ '')).FLG005
         AIF   ('&TABLE' EQ 'UCBPMSK').FLG005
         AIF   ('&TABLE' EQ 'UCBIORST').FLG005
         AIF   ('&TABLE' EQ 'UCBITF').FLG005
         AIF   ('&TABLE' EQ 'UCBRVRS').FLG005                  @OZ03863
         AGO   .IOSGEN3
.FLG005  ANOP
         AIF   (('&TABLE' EQ 'UCBPMSK') AND (N'&REG LT 2)).IOSGEN2
         AIF   (('&VAR' NE 'ON') AND ('&VAR' NE 'OFF') AND             X
               ('&VAR' NE 'TEST') AND ('&VAR' NE '')).IOSGEN4
         AIF   ('&TABLE' EQ 'UCBPMSK').FLG007
         AIF   ('&TABLE' EQ 'UCBIORST').FLG007
         AIF   ('&TABLE' EQ 'UCBITF').FLG007
         AIF   (('&REG' NE 'COND') AND ('&REG' NE 'UNCOND') AND        X
               ('&REG' NE '')).IOSGEN3
         AIF   ('&TABLE' EQ 'UCBRVRS').FLG007                  @ZA35584
         AIF   ((('&REG' EQ 'COND') OR ('&REG' EQ 'UNCOND')) AND       X
               ('&TABLE' NE 'UCBNRY')).IOSGEN3
         AIF   ((('&TABLE' EQ 'UCBACTV') OR ('&TABLE' EQ 'UCBBSY')     X
               OR ('&TABLE' EQ 'UCBPSNS')) AND (('&VAR' NE 'TEST')     X
               AND ('&VAR' NE ''))).IOSGEN4
.FLG007  ANOP
         AIF   ('&IECIFLG' EQ '1').FLG010    ONE CALL ONLY
&IECIFLG SETB  1                        SET FIRST TIME SWITCH
         SPACE 2
*****************************************************************
*                                                               *
* FUNCTION:                                                     *
*    UCBFLG - TESTS, SETS OR RESETS SELECTED STATUS             *
*             INDICATORS IN THE UCB.                            *
*                                                               *
* MACRO CALL:                                                   *
*    LABEL  IOSGEN  UCBFLG,UCB=(REG),VAR=ON OR OFF OR TEST,     *
*                   TABLE=UCBBITNAME,REG=COND OR UNCOND OR      *
*                   (REG1,REG2)                                 *
*                                                               *
*         PLS - GEN REFS(UCBFLA,UCBFLB,UCBFLC,CVTPTR,           *
*               CVTIXAVL,IOCGENA,UCBOB,UCBCCWOF,UCB3TAPE,       *
*               CVTMAP,IOCOM,UCBCMEXT,UCBEXTPT)                 *
*               (IOSGEN UCBFLG,...KEYWORDS AS IN BAL);          *
*         NOTE:  %DEACT OFF; MUST FOLLOW INCLUDE STATEMENTS     *
*                FOR VAR=OFF.                                   *
*         NOTE:  THE ABOVE REPRESENT THE MAXIMUM REFERENCES     *
*                REQUIRED.                                      *
*                                                               *
*    SPECIAL TAPE OPTION:                                       *
*         LABEL  IOSGEN  UCBFLG,UCB=(REG)                       *
*                                                               *
*    SPECIAL UCBPMSK OPTION:                                    *
*         LABEL  IOSGEN  UCBFLG,UCB=(REG),TABLE=UCBPMSK,        *
*                        REG=(REG1,REG2)                        *
*                                                               *
* INPUT:                                                        *
*    REGISTER 13 MUST CONTAIN THE ADDRESS OF 16 WORD SAVEAREA   *
*    FOR THE 'ON' OR 'OFF' OPTIONS AND SPECIAL TAPE OPTION.     *
*                                                               *
*    UCB=  MUST SPECIFY A GPR (ABSOLUTE OR SYMBOLIC) CONTAINING *
*    THE ADDRESS OF THE UCB REPRESENTING THE DEVICE FOR WHICH   *
*    THE FUNCTION IS DIRECTED.  THIS GPR MUST POINT TO THE      *
*    UCB COMMON SEGMENT. FOR MULTIPLE EXPOSURE DEVICES,         *
*    IECVGENA WILL ACQUIRE THE UCB LOCK FROM THE BASE UCB       *
*    AND WILL USE THE ADDRESS IN THIS PARAMETER  TO             *
*    PERFORM THE REQUESTED OPERATION.                           *
*                                                               *
*    VAR=  INDICATES THE TYPE OF ACTION TO BE PERFORMED.        *
*         ON - THE DESIGNATED INDICATOR IS TO BE TURNED ON.     *
*         OFF - THE DESIGNATED INDICATOR IS TO BE TURNED OFF.   *
*         TEST - (DEFAULT) THE DESIGNATED INDICATOR IS TO       *
*                BE TESTED.                                     *
*                                                               *
*    TABLE=  SPECIFIES THE SYMBOLIC NAME OF THE INDICATOR TO    *
*    BE TESTED, SET, OR RESET.  THE FOLLOWING SYMBOLS ARE       *
*    SUPPORTED:                                                 *
*         UCBACTV  - CHANNEL END IS OUTSTANDING ('TEST' ONLY).  *
*         UCBBSY   - DEVICE END IS OUTSTANDING ('TEST' ONLY).   *
*         UCBPSNS  - A SENSE OPERATION IS EITHER PENDING OR     *
*                    ACTIVE ('TEST' ONLY).                      *
*         UCBNRY   - THE DEVICE IS NOT READY.                   *
*         UCBTICBT - A CHANNEL END OR DEVICE END INTERRUPT      *
*                    HAS BEEN SOLICITED FROM THE DEVICE AND IS  *
*                    CURRENTLY OUTSTANDING.                     *
*         UCBDDRSW - A VOLUME SWITCH (DYNAMIC DEVICE            *
*                    RECONFIGURATION) IS PENDING ON THIS DEVICE.*
*         UCBQISCE - A COMPONENT HAS INHIBITED FURTHER I/O FROM *
*                    BEING INITIATED TO A DEVICE EXCEPT I/O     *
*                    REQUESTS FROM THAT COMPONENT.              *
*         UCBIVRS  - INTERVENTION REQUIRED MESSAGE HAS BEEN SENT*
*         UCBIVRR  - INTERVENTION REQUIRED MESSAGE IS NEEDED.   *
*         UCBPMSK  - RESETS THE PATH MASK FOR MESSAGES ISSUED.  *
*         UCBIORST - I/O RESTART DEVICE NON-ACCESSABLE.         *
*         UCBITF - INTERCEPT CONDITION.                         *
*         UCBRVRS - NOTREADY AND INTERVENTION MSG       @OZ03863*
*                    SENT.                                      *
*                                                               *
*    REG=  APPLIES TO UCBNRY ('ON' ONLY), UCBPMSK OR           @ZA35584
*                     UCBRVRS                                  @ZA35584
*         COND   - (DEFAULT) IMPLIES THAT THE NOT READY STATUS  *
*                   IS TO BE SET ONLY IF AN UNSOLICITED DEVICE  *
*                   END HAS NOT OCCURED SINCE THE LAST SIO      *
*                   WAS ISSUED.                                 *
*         UNCOND - IMPLIES SETTING THE INDICATOR REGARDLESS OF  *
*                  THE INTERRUPT STATUS.                        *
*         (REG1,REG2) - GENERAL REGISTERS USED FOR              *
*                  COMPARE AND SWAP INSTRUCTION.                *
*                                                               *
*    LABEL  OPTIONAL LABEL PARAMETER.                           *
*                                                               *
*    OPTIONAL TAPE OPTION - THE STATUS INDICATORS 'NOT READY'   *
*    AND 'INTERCEPT CONDITION' ARE SET OFF.  THIS CALL IS VALID *
*    ONLY FOR A TAPE DEVICE AND IF BOTH THE STATUS INDICATORS   *
*    ARE ALREADY SET ON.  THE 16 WORD SAVE AREA IS REQUIRED FOR *
*    THIS EXPANSION.  TO RESET AN INTERCEPT CONDITION, I/O      *
*    SUPERVISOR RESOURCES ALLOCATED TO MAINTAIN THE STATUS OF   *
*    THE INTERRUPT MUST BE RELEASED.                            *
*                                                               *
* OUTPUT:                                                       *
*    TEST OPTION - THE CONDITION CODE OF ZERO INDICATES THE     *
*    INDICATOR IS TURNED OFF.                                   *
*                                                               *
* EXTERNAL ROUTINES:                                            *
*    IECVGENA - RESIDENT IOSGEN SUBROUTINE. THIS MODULE IS      *
*    ENTERED VIA A BAL INSTRUCTION FOR ALL CONDITIONS EXCEPT    *
*    'TEST' AND THE RESET OF UCBPMSK.                           *
*                                                               *
* ATTRIBUTES:                                                   *
*    THE UCBFLG FUNCTION IS EXPANDED AS IN-LINE, REENTRANT      *
*    CODE AND MAY BE EXPANDED A VARIABLE NUMBER OF TIMES        *
*    WITHIN THE SAME ASSEMBLY WITHOUT DUPLICATING SYMBOLS.      *
*                                                               *
* OTHER:                                                        *
*    A RESET OF THE 'UCBQISE' INDICATOR WILL ALSO CAUSE         *
*    THE DEVICE TO BE RESTARTED BY THE I/O SUPERVISOR           *
*    THE NEXT TIME ENTERED.                                     *
*                                                               *
*    THE FOLLOWING MAPPING MACRO ARE REQUIRED:                  *
*         IEFUCBOB              (TEST ONLY)                     *
*         CVT   DSECT=YES       (ON & OFF ONLY)                 *
*         IECDIOCM              (ON & OFF ONLY)                 *
*                                                               *
*    LOCKS ARE NOT REQUIRED BY THIS FUNCTION.                   *
*                                                               *
*****************************************************************
         SPACE 2
*****************************************************************
*                                                               *
*        REGISTER EQUATES                                       *
*                                                               *
*****************************************************************
         SPACE
IECIFGR0 EQU   0                   UCB PREFIX OFFSET REG
IECIFUCB EQU   4                   UCB PTR
IECIFVAR EQU   5                   VARIATION VALUE REG
*                                  *APPLIES TO NORMAL REQUESTS
IECIFSAV EQU   13                  SAVE AREA PTR
IECIFRTN EQU   14                  RETURN REG FROM IECVGENA
IECIFBRR EQU   15                  BRANCH REG TO IECVGENA
         SPACE
*****************************************************************
*                                                               *
*        UCB - UNIT CONTROL BLOCK                               *
*              FLAGS DEFINED TO PREVENT PLS XREF PROBLEMS       *
*                                                               *
*****************************************************************
         SPACE
IECIFXXX EQU   512                 UCB PREFIX
IECIFACT EQU   X'02'               UCBACTV - TEST
IECIFBSY EQU   X'80'               UCBBSY - TEST
IECIFDDR EQU   X'01'               UCBDDRSW  - TEST
IECIFIOR EQU   X'80'               UCBIORST - TEST
IECIFIVR EQU   X'04'               UCBIVRR  - TEST
IECIFIVS EQU   X'08'               UCBIVRS  - TEST
IECIFNRY EQU   X'40'               UCBNRY  - TEST
*                                  *AND (SPECIAL TAPE CALL)
IECIFPSN EQU   X'10'               UCBPSNS  - TEST
IECIFQIS EQU   X'01'               UCBQISCE  - TEST
IECIFTIC EQU   X'02'               UCBTICBT  - TEST
IECIFUDE EQU   X'20'               UCBUDE - (UCBNRY 'ON' COND)
IECIF3TA EQU   X'80'               UCB3TAPE - (SPECIAL TAPE CALL)
IECIFINT EQU   X'10'               UCBITF - TEST
*                                  *AND (SPECIAL TAPE CALL)
         SPACE
*****************************************************************
*                                                               *
*        SPECIAL ENTRY POINT BRANCH TABLE VALUES FOR IECVGENA   *
*        THESE VALUES ARE DISPLACEMENTS FROM REGISTER 15        *
*        ALL UCBFLG VARIATIONS USE THE DISPLACEMENT 'IECIFLOK'  *
*                                                               *
*****************************************************************
         SPACE
*        EQU   0                   NOT AVAILABLE   (SWAP)
*        EQU   4                   NOT AVAILABLE   (VARY)
*        EQU   8                   NOT AVAILABLE   (RESERVED)
*        EQU   12                  NOT AVAILABLE   (RESERVED)
IECIFLOK EQU   16                  UCBFLG
*                                  *SETS UCB LOCK IMMEDIATELY
         SPACE
*****************************************************************
*                                                               *
*        NORMAL BRANCH TABLE VALUES FOR IECVGENA                *
*        THESE VALUES ARE DISPLACEMENTS FROM REGISTER 5         *
*                                                               *
*****************************************************************
         SPACE
IECIFNRC EQU   0                   UCBNRY - ON (CONDITIONALLY)
IECIFNRN EQU   4                   UCBNRY - ON (UNCONDITIONALLY)
IECIFNIS EQU   8                   UCBNRY & UCBITF - OFF (TAPE)
IECIFNRF EQU   12                  UCBNRY - OFF
IECIFTIN EQU   20                  UCBTICBT - ON
IECIFTIF EQU   28                  UCBTICBT - OFF
IECIFDDN EQU   36                  UCBDDRSW - ON
IECIFDDF EQU   44                  UCBDDRSW - OFF
IECIFQIN EQU   52                  UCBQISCE - ON
IECIFQIF EQU   60                  UCBQISCE - OFF
IECIFIVN EQU   68                  UCBIVRR - ON
IECIFIVF EQU   76                  UCBIVRR - OFF
IECIFRSN EQU   84                  UCBIVRS - ON
IECIFRSF EQU   92                  UCBIVRS - OFF
IECIFION EQU   100                 UCBIORST - ON
IECIFIOF EQU   108                 UCBIORST - OFF
IECIFITN EQU   116                 UCBITF - ON
IECIFITF EQU   124                 UCBITF - OFF
IECIFRVN EQU   128                 UCBNRY ON-UCBIVRS ON        @OZ03863
*                                  UNDER SAME LOCK             @OZ03863
IECIFRVF EQU   136                 UCBNRY & IVRS OFF  @ZA16174,@OZ03863
*                                  UNDER SAME LOCK             @OZ03863
         SPACE
.FLG010  ANOP
.*
.*       CHECK FOR TYPE OF VARIATION
.*
         AIF   ('&TABLE' EQ 'UCBPMSK').FLG170  SPECIAL UCBPMSK CALL
         AIF   ('&TABLE' EQ '').FLG070  SPECIAL TAPE CALL
         AIF   (('&VAR' NE 'TEST') AND ('&VAR' NE '')).FLG080
.*
.*       MUST BE 'TEST'
.*       SET &FIELD EQUAL TO UCB FIELD NAME
.*       SET &BIT TO EQUATE DESIGNATION
.*
         AIF   ('&TABLE' NE 'UCBIVRS').FLG020
&BIT     SETC  'IVS'                    PREVENT DUPLICATE SYMBOLS
         AGO   .FLG030
.FLG020  ANOP
&BIT     SETC  '&TABLE'(4,3)            SET BIT NAME
.FLG030  ANOP
         AIF   (('&TABLE' NE 'UCBACTV') AND ('&TABLE' NE 'UCBBSY')     X
               AND ('&TABLE' NE 'UCBQISCE') AND ('&TABLE' NE           X
               'UCBPSNS') AND ('&TABLE' NE 'UCBNRY')).FLG040
&FIELD   SETC  'UCBFLA'
         AGO   .FLG060
.FLG040  ANOP
         AIF   ('&TABLE' NE 'UCBIORST').FLG050
&FIELD   SETC  'UCBFLB'
         AGO   .FLG060
.FLG050  ANOP
&FIELD   SETC  'UCBFLC'
.*
.*       CHECK FOR UCBITF TO AVOID DUPLICATE SYMBOLS
.*
         AIF   ('&TABLE' NE 'UCBITF').FLG060
&BIT     SETC  'INT'
.*
.*       CONSTRUCT FOR 'TEST'
.*
.FLG060  ANOP
&NAME    TM    &FIELD.-UCBOB&UCB.,IECIF&BIT   TEST SELECTED BIT
         MEXIT
.*
.*       MUST BE UCBNRY AND UCBITF 'OFF' FOR SPECIAL TAPE CALL
.*
.FLG070  ANOP
&BIT     SETC  'NI'
&INDEX   SETC  'S'
&LABEL   SETC  '&SYSNDX'(2,3)
&NAME    TM    UCBTBYT3-UCBOB&UCB.,IECIF3TA  IS IT A TAPE
         BNO   IECIF&LABEL         NO, EXIT IMMEDIATELY
         TM    UCBFLA-UCBOB&UCB.,IECIFNRY  IS DEV NOT READY
         BNO   IECIF&LABEL         NO, EXIT IMMEDIATELY
         TM    UCBFLC-UCBOB&UCB.,IECIFINT  IS IT
*                                  *INTERCEPT CONDITION
         BNO   IECIF&LABEL         NO, EXIT IMMEDIATELY
         AGO   .FLG140
.*
.*       MUST BE 'ON' OR 'OFF'
.*       CHECK FOR UCBNRY 'ON' AND TYPE OF CONDITION
.*
.FLG080  ANOP
         AIF   (('&TABLE' NE 'UCBNRY') OR (('&TABLE' EQ 'UCBNRY')      X
               AND ('&VAR' EQ 'OFF'))).FLG090
         AIF   (('&REG' NE 'COND') AND ('&REG' NE '')).FLG100
.*
.*       MUST BE UCBNRY 'ON' - 'COND'
.*
&BIT     SETC  'NR'
&INDEX   SETC  'C'
&LABEL   SETC  '&SYSNDX'(2,3)
&NAME    TM    UCBFLC-UCBOB&UCB.,IECIFUDE  IS IT
*                                  *UNSOLICITED DEVICE END
         BO    IECIF&LABEL         YES, EXIT IMMEDIATELY
         AGO   .FLG140
.*
.*       CHECK FOR UCBIVRS TO PREVENT DUPLICATE SYMBOLS
.*
.FLG090  ANOP
         AIF   ('&TABLE' NE 'UCBIVRS').FLG100
&BIT     SETC  'RS'
         AGO   .FLG110
.*
.*       SET &BIT TO REMAINING FIRST TWO CHARACTERS
.*
.FLG100  ANOP
&BIT     SETC  '&TABLE'(4,2)            GET FIRST 2 CHARS AFTER UCB
&LABEL   SETC  '&SYSNDX'(2,3)                                  @ZA03863
.*
.*       SET &INDEX FOR 'ON' OR 'OFF'
.*
.FLG110  ANOP
         AIF   ('&VAR' NE 'ON').FLG120
&INDEX   SETC  'N'                      MUST BE 'ON'
         AGO   .FLG125                                         @OZ03863
.FLG120  ANOP
&INDEX   SETC  'F'                      MUST BE 'OFF'
.FLG125 AIF ('&TABLE' NE 'UCBRVRS').FLG130                     @OZ03863
         AIF   ('&REG' EQ 'UNCOND').FLG130                     @ZA35584
&NAME    TM    UCBFLC-UCBOB&UCB.,IECIFUDE IS IT UNSOLICITED
*                                         * END
         BO    IECIF&LABEL                YES, EXIT IMMEDIATELY
         AGO   .FLG140                                         @OZ03863
.*
.*       CONSTRUCT REGISTER SAVE AND RESTORE
.*       SET UCB PTR FOR IECVGENA
.*       GET IECVGENA ENTRY POINT
.*
.FLG130  ANOP
&NAME    STM   IECIFGR0,IECIFBRR,0(IECIFSAV)  SAVE REGS
         AGO   .FLG150
.FLG140  ANOP
         STM   IECIFGR0,IECIFBRR,0(IECIFSAV)  SAVE REGS
.FLG150  ANOP
         LR    IECIFUCB,&UCB(1)    SET IECVGENA UCB PTR
         LA    IECIFGR0,IECIFXXX(0,0)  GET PREFIX OFFSET
         SLR   IECIFUCB,IECIFGR0   ADJUST TO PREFIX
         L     IECIFBRR,CVTPTR(0,0)  GET CVT PTR
         L     IECIFBRR,CVTIXAVL-CVTMAP(0,IECIFBRR)  GET IOCOM PTR
         L     IECIFBRR,IOCGENA-IOCOM(0,IECIFBRR)  GET IECVGENA PTR
         LA    IECIFVAR,IECIF&BIT.&INDEX.(0,0)  BRANCH TABLE ENTRY
*                                  *FOR THIS OPERATION
         BAL   IECIFRTN,IECIFLOK(0,IECIFBRR)  CALL IECVGENA
         LM    IECIFGR0,IECIFBRR,0(IECIFSAV)  RESTORE REGS
.*
.*       GENERATE BRANCH LABELS FOR
.*       SPECIAL TAPE CALL AND UCBNRY 'ON' CONDITIONALLY
.*       ALSO SETTING UCBNRY & UCBIVR FOR MVM ERP              @OZ03863
.*       UNDER ONE LOCK.                                       @OZ03863
.*
         AIF   ('&TABLE' EQ 'UCBRVRS').FLG155                  @OZ03863
         AIF   ('&BIT'(1,1) NE 'N').FLG160
         AIF   (('&INDEX' NE 'C') AND ('&INDEX' NE 'S')).FLG160
.FLG155  ANOP                                                  @OZ03863
IECIF&LABEL EQU *                  CONTINUE PROCESSING
.FLG160  ANOP
         MEXIT
.*
.*     SPECIAL UCBPMSK CALL
.*
.FLG170  ANOP
&INDEX   SETC  '&SYSNDX'(3,2)      SET UNIQUE EQUATE SUFFIX
&LABEL   SETC  '&SYSNDX'(2,3)      SET UNIQUE LABEL SUFFIX
&NAME    B     IECIF&LABEL         GO AROUND CONSTANT
         DS    0F                  GET FULLWORD ALIGNMENT
IECIFM&INDEX DC X'FFFF0000'        ANDING MASK FOR UCBPMSK
*                                                             *@ZA02138
IECIF&LABEL L &UCB(1).,UCBEXTPT-UCBOB(0,&UCB(1).) GET EXT PTR  @ZA00425
         LA    &UCB(1).,0(0,&UCB(1).)  CLEAR HI ORDER BYTE
*                                                             *@ZA02138
IECIFP&INDEX L &REG(1),UCBCCWOF-UCBCMEXT(0,&UCB(1).) GET UCBPMSK
         L     &REG(2).,IECIFM&INDEX.(0)  GET ANDING MASK
         NR    &REG(2).,&REG(1)    AND OUT BITS
         CS    &REG(1).,&REG(2).,UCBCCWOF-UCBCMEXT&UCB  SWAP
         BNE   IECIFP&INDEX        LOOP UNTIL SWAP IS COMPLETE @ZA02138
         MEXIT
.*****     *****     *****     *****     *****     *****     *****
.*****     TP*TP     *****     TP*TP     *****     TP*TP     *****
.*****     *****     *****     *****     *****     *****     *****
.TP000   ANOP
.*
.*       CSECT AUTHORIZATION
.*
         AIF   ('&SYSECT' EQ 'WMMCCABE').TPAUTH
         AIF   ('&SYSECT' EQ 'ISTINCAV').TPAUTH
         AIF   ('&SYSECT' EQ 'HASPINIT').TPAUTH
         AIF   ('&SYSECT' EQ 'HASPNUC').TPAUTH
         AIF   ('&SYSECT' EQ 'IATINCN').TPAUTH
         AIF   ('&SYSECT' EQ 'IATLVIN').TPAUTH
         AIF   ('&SYSECT' EQ 'IEAVNP19').TPAUTH     MSS        @ZUP1085
         AIF   ('&SYSECT' EQ 'IGG0198B').TPAUTH                @YM02910
         AIF   ('&SYSECT' EQ 'IGG02036').TPAUTH                @YM02910
         AIF   ('&SYSECT' EQ 'IGG01938').TPAUTH                @YM02910
         AIF   ('&SYSECT' EQ 'IEDQOT01').TPAUTH                @YM02910
         AIF   ('&SYSECT' EQ 'IGG01939').TPAUTH                @Y30X8LB
         AIF   ('&SYSECT' EQ 'IEDIAA').TPAUTH                  @Y30X8LB
         AIF   ('&SYSECT' EQ 'ICBINIT' ).TPAUTH                @Y30LPLC
.*       AGO   .IOSGEN1                                        @ZA12429
.TPAUTH  ANOP
.*
.*       CHECK PARAMETERS FOR ERRORS
.*
         AIF   (('&UCB' EQ '') OR ('&VAR' EQ '')).IOSGEN3
         AIF   ('&VAR' NE 'ATNMOD').TP010
         AIF   ('&TABLE' EQ '').IOSGEN3
         AIF   ('&REG' EQ '').TP030
         AIF   (N'&REG LT 2).IOSGEN2
         AGO   .TP030
.TP010   ANOP
         AIF   (('&VAR' EQ 'ATNTABG') OR ('&VAR' EQ 'ATNTABT')).TP030
         AIF   (K'&VAR NE 2).IOSGEN4
.TP030   ANOP
         AIF   ('&IECITP' EQ '1').TP040 CHECK FIRST TIME SWITCH
&IECITP  SETB  1                        SET SWITCH
         SPACE 2
*****************************************************************
*                                                               *
* FUNCTION:                                                     *
*    TP - WILL MODIFY THE ATTENTION TABLE INDEX OR ERROR        *
*         TABLE INDEX IN THE UCB.                               *
*                                                               *
*    LABEL  IOSGEN  TP,UCB=(GPR),VAR=ATNTABG OR ATNTABT OR      *
*           ERRTAB OR ATNMOD,                                   *
*           TABLE=(GPR),REG=(GPR1,GPR2)                         *
*                                                               *
*    PLS - GEN REFS(UCBOB,UCBETI,UCBATI,CVTPTR,CVTMAP,          *
*          CVTIXAVL,ATBRTN,ATB,IOCATTBL,IOCOM,UCBEXTPT,         *
*          UCBCMEXT,ATBASID)                                    *
*          (IOSGEN TP,...KEYWORDS AS IN BAL);                   *
*                                                               *
* INPUT:                                                        *
*    UCB=  MUST SPECIFY A GPR (ABSOLUTE OR SYMBOLIC)            *
*    CONTAINING THE ADDRESS OF THE UCB COMMON SEGMENT TO        *
*    BE MODIFIED.                                               *
*                                                               *
*    VAR=  ATTENTION TABLE INDEX OR ERROR TABLE INDEX.          *
*         ATNTABG - ATTENTION TABLE INDEX FOR GRAPHICS.         *
*         ATNTABT - ATTENTION TABLE INDEX FOR TELEPROCESSING.   *
*         ERRTAB  - MUST SPECIFY THE NEW ERRTAB INDEX           *
*                   IN HEX (2A,2B,ETC. ).  IT WILL RESULT       *
*                   IN CODE TO RESET THE ERRTAB INDEX.          *
*         ATNMOD - ATTENTION TABLE INDEX FOR JES.               *
*                                                               *
*    TABLE=  (ATNMOD ONLY) MUST SPECIFY A GPR (ABSOLUTE OR      *
*    SYMBOLIC) WHICH CONTAINS THE ATTENTION TABLE INDEX         *
*    RIGHT ALIGNED.                                             *
*                                                               *
*    REG=(GPR1,GPR2)  THIS PARAMETER IS REQUIRED ONLY           *
*    IF THE USER (ATNMOD ONLY). DESIRES THE OPTION TO           *
*    CHANGE THE ATTENTION TABLE ROUTINE ADDRESS AND THE ASID.   *
*        GPR1 - MUST CONTAIN THE ADDRESS OF THE ATTENTION       *
*               ROUTINE RIGHT ALIGNED OR ZERO.                  *
*        GPR2 - MUST CONTAIN THE ASID RIGHT ALIGNED OR ZERO.    *
*                                                               *
* OUTPUT:                                                       *
*    NONE.                                                      *
*                                                               *
* ATTRIBUTES:                                                   *
*    THE FUNCTION EXPANDS AS IN-LINE,REENTRANT CODE             *
*    AND MAY BE EXPANDED A VARIABLE NUMBER OF TIMES             *
*    IN THE CALLING CSECT.                                      *
*                                                               *
* OTHER:                                                        *
*    THE EXPANSION OF THE FUNCTION IS DEPENDENT ON THE          *
*    SPECIFICATION OF THE FOLLOWING MAPPING MACROS              *
*    IN THE CALLING CSECT ASSEMBLY:                             *
*         IEFUCBOB                                              *
*         CVT      DSECT=YES    (ATNMOD WITH REG= ONLY)         *
*         IECDIOCM              (ATNMOD WITH REG= ONLY)         *
*         IECDATB               (ATNMOD WITH REG= ONLY)         *
*                                                               *
*    NO LOCKS ARE REQUIRED FOR THIS FUNCTION IN THAT            *
*    ONLY SEQUENTLY ALLOCATED DEVICES ARE SUPPORTED             *
*    (VIA AUTHORIZATION PROVIDED BY THE CALLING CSECT NAME)     *
*    AND SERIALIZATION IS ASSUMED.                              *
*                                                               *
*****************************************************************
         SPACE 2
*****************************************************************
*                                                               *
*        UCB - UNIT CONTROL BLOCK                               *
*              ATTENTION TABLE INDEX AND ERROR TABLE INDEX      *
*                                                               *
*****************************************************************
         SPACE
IECITABG EQU   X'10'               ATNTABG (GRAPHICS)
IECITABT EQU   X'14'               ATNTABT (TELEPROCESSING)
         SPACE
.TP040   ANOP
&NAME    L     &UCB(1).,UCBEXTPT-UCBOB(0,&UCB(1).) GET EXT PTR
         LA    &UCB(1).,0(0,&UCB(1).) CLEAR HI ORDER BYTE
.*
.*       CHECK FOR TYPE OF ACTION
.*
         AIF   ('&VAR' EQ 'ATNMOD').TP060
         AIF   (('&VAR' EQ 'ATNTABG') OR ('&VAR' EQ 'ATNTABT')).TP050
.*
.*       CONSTRUCT ERROR TABLE INDEX CODE
.*
&INDEX   SETC  '&SYSNDX'(2,3)           SET TO LAST 3 DIGITS
IECIT&INDEX EQU   X'&VAR'                  ERROR TABLE INDEX
         MVI   UCBETI-UCBCMEXT&UCB.,IECIT&INDEX  SET ERROR
*                                  *TABLE INDEX
         MEXIT
.*
.*       SET UP ATTENTION TABLE INDEX
.*
.TP050   ANOP
&INDEX   SETC  '&VAR'(5,3)
         MVI   UCBATI-UCBCMEXT&UCB.,IECIT&INDEX  SET ATTENTION
*                                  *TABLE INDEX
         MEXIT
.TP060   ANOP
         AIF   ('&REG' NE '').TP080
         STC   &TABLE(1).,UCBATI-UCBCMEXT(0,&UCB(1).)
*                                  *SET ATTENTION TABLE INDEX
         MEXIT
.*
.*       CONSTRUCT UNIQUE LABEL
.*
.TP080   ANOP
&LABEL   SETC  '&SYSNDX'(2,3)      SET LAST 3 DIGITS
         STC   &TABLE(1).,UCBATI-UCBCMEXT(0,&UCB(1).)
*                                  *SET ATTENTION TABLE INDEX
         LTR   &REG(1).,&REG(1)
*                                  *TEST FOR ATTENTION TABLE RTN ADDR
         BZ    IECIT&LABEL         NONE, EXIT
         L     &UCB(1).,CVTPTR(0,0)  GET CVT PTR
         L     &UCB(1).,CVTIXAVL-CVTMAP(0,&UCB(1).)
*                                  *GET IOCOM PTR
         L     &UCB(1).,IOCATTBL-IOCOM(0,&UCB(1).)
*                                  *GET ATTENTION TABLE PTR
         SLL   &TABLE(1).,1(0)     DOUBLE INDEX
         ALR   &UCB(1).,&TABLE(1)  POINT TO THIS ENTRY
         ST    &REG(1).,ATBRTN-ATB(0,&UCB(1).)
*                                  *SET ATTENTION TABLE ROUTINE ADDR
         LTR   &REG(2).,&REG(2)    *IS ASID PROVIDED
         BZ    IECIT&LABEL         NO, EXIT
         STH   &REG(2).,ATBASID-ATB(0,&UCB(1).)
*                                  *SET ASID
IECIT&LABEL DS 0H                  TP EXIT POINT
         MEXIT
.*****     *****     *****     *****     *****     *****     *****
.*****   DETECTOR    *****   DETECTOR    *****   DETECTOR    *****
.*****     *****     *****     *****     *****     *****     *****
.DET000  ANOP
.*
.*       CSECT AUTHORIZATION
.*
         AIF   ('&SYSECT' EQ 'IEEVCPU').DETAUTH
         AIF   ('&SYSECT' EQ 'WMMCCABE').DETAUTH
         AIF   ('&SYSECT' EQ 'IEE21110').DETAUTH
         AIF   ('&SYSECT' EQ 'IEAVNP02').DETAUTH               @OZ00805
         AIF   ('&SYSECT' EQ 'IEAVTACR').DETAUTH               @OZ00805
         AIF   ('&SYSECT' EQ 'IEECLEAN').DETAUTH               @OZ00805
.*       AGO   .IOSGEN1                                        @ZA12429
.DETAUTH ANOP
.*
.*       CHECK PARAMETERS FOR ERRORS
.*
         AIF   ('&UCB' EQ '').IOSGEN3
         AIF   ('&VAR' NE '2').DET005                          @OZ00805
         AIF   (N'&REG LT 2).IOSGEN2                           @OZ00805
.DET005  ANOP                                                  @OZ00805
         AIF   ('&IECIDET' EQ '1').DET010  CHECK FIRST TIME SWITCH
&IECIDET SETB  1                       SET SWITCH
         SPACE 2
*****************************************************************
*                                                               *
* FUNCTION:                                                     *
*    DETECTOR - DETERMINES IF A DEVICE IS A SHARED DASD         *
*         WHICH HAS BEEN RESERVED (HARDWARE OR SOFTWARE).       *
*                                                               *
*    LABEL  IOSGEN  DETECTOR,UCB=(REG),VAR=1 OR 0               *
*                                                               *
*    LABEL  IOSGEN DETECTOR,UCB=(REG),REG=(REG1,REG2),VAR=2     *
*                                                       @OZ00805*
*     PLS - GEN REFS(UCBOB,UCBTBYT2,UCBTBYT3,UCBSTAT,UCBSQC,    *
*           UCBFLP1)                                    @OZ00805*
*          (IOSGEN DETECTOR,UCB=(REG),VAR=1 OR 0);              *
*          (IOSGEN DETECTOR,UCB=(REG),REG=(REG1,REG2),VAR=2);   *
*                                                       @OZ00805*
*                                                               *
* INPUT:                                                        *
*    UCB=  MUST SPECIFY A GPR (ABSOLUTE OR SYMBOLIC)            *
*    CONTAINING THE ADDRESS OF THE UCB COMMON SEGMENT TO        *
*    BE MODIFIED.                                               *
*                                                               *
*    VAR=  MAY BE SET TO 0 OR 1 OR 2.                   @OZ00805*
*         0 - TEST WILL BE APPLIED TO THE SOFTWARE              *
*             RESERVE INDICATOR (RESERVE MACRO ISSUED           *
*             BY SOFTWARE COMPONENT, HARDWARE RESERVE           *
*             MAY OR MAY NOT BE IN EFFECT).                     *
*         1 - (DEFAULT) TEST WILL BE APPLIED TO THE             *
*             HARDWARE RESERVE INDICATOR (RESERVE               *
*             INSTRUCTION ISSUED TO DEVICE).                    *
*                                                               *
*         2 - TEST WILL BE MADE TO DETERMINE IF IN A    @OZ00805*
*             SHARED U.P DEVICE. IF SO, R/R WILL BE     @OZ00805*
*             SET/RESET.ALSO TWO (2) WORK REGISTERS     @OZ00805*
*             MUST BE PROVIDED ON INPUT. EXAMPLE        @OZ00805*
*             PROVIDED ABOVE.                           @OZ00805*
*                                                               *
* OUTPUT:                                                       *
*   VAR 0 OR 1                                          @OZ00805*
*    UPON EXIT FROM THIS EXPANSION, THE CONDITION CODE WILL     *
*    BE SET TO REFLECT THE CONDITIONS TESTED.  A TEST IS        *
*    MADE FOR DIRECT ACCESS DEVICE TYPE, SHARED FILE,           *
*    AND RESERVED STATUS.                                       *
*         CC=0  THE CONDITIONS OF THE TESTS WERE NOT MET.       *
*         CC=NON-ZERO  THE CONDITIONS OF THE TESTS WERE MET.    *
*    VAR -2                                             @OZ00805*
*           UPON EXIT FROM THIS FUNCTION THE RESERVE/   @OZ00805*
*           RELEASE CAPABILITY WILL BE SET/RESET        @OZ00805*
*           DEPENDING  ON UP/MP ENVIORNMENT.            @OZ00805*
*                                                               *
*                                                               *
* ATTRIBUTES:                                                   *
*    THE FUNCTION EXPANDS AS IN-LINE,REENTRANT CODE             *
*    AND REQUIRES 20 BYTES OF STORAGE, AND MAY BE EXPANDED      *
*    A VARIABLE NUMBER OF TIMES WITHIN THE SAME ASSEMBLY        *
*    WITHOUT DUPLICATING SYMBOLS.                               *
*                                                               *
* OTHER:                                                        *
*    THE EXPANSION OF THE FUNCTION IS DEPENDENT ON THE          *
*    SPECIFICATION OF THE UCB MAPPING MACRO IEFUCBOB            *
*    IN THE CALLING CSECT ASSEMBLY.                             *
*                                                               *
*    NO LOCKS ARE REQUIRED FOR THIS FUNCTION.                   *
*                                                               *
*****************************************************************
         SPACE 2
*****************************************************************
*                                                               *
*        UCB - UNIT CONTROL BLOCK                               *
*              REFERENCES AND SPECIAL EQUATES                   *
*                                                               *
*****************************************************************
         SPACE
IECIDSHR EQU   X'20'               UCBRR
IECID3DA EQU   X'20'               UCB3DACC
IECIDHRC EQU   X'10'               UCBRESVH                    @YM01123
IECIDSRC EQU   X'FF'               TEST FOR SOFTWARE
IECIDSUP EQU   X'40'               SHARED U.P                  @OZ00805
IECIDCPU EQU   X'01'               ONE CPU ALIVE               @OZ00805
IECIDOFF EQU   X'DF'               TURN OFF R/R                @OZ00805
*                                  *RESERVE COUNT
         SPACE
.DET010  ANOP
.*
.*       CONSTRUCT UNIQUE LABEL SUFFIX
.*
&LABEL   SETC  '&SYSNDX'(2,3)           SET TO LAST 3 DIGITS
.*
.*       CONSTRUCT TESTS FOR DIRECT ACCESS AND SHARE
.*
&NAME    TM    UCBTBYT3-UCBOB&UCB.,IECID3DA  IS THIS A
*                                  *DIRECT ACCESS DEVICE
         BZ    IECID&LABEL         NO, EXIT IMMEDIATELY
         AIF ('&VAR' EQ '2').DET030                            @OZ00805
         SPACE
         TM    UCBTBYT2-UCBOB&UCB.,IECIDSHR  IS THIS
*                                  *DEVICE SHAREABLE
*                                  *BETWEEN CPU-S
         BZ    IECID&LABEL         NO, EXIT IMMEDIATELY
         SPACE
.*
.*       IF VAR=0, THEN GENERATE SOFTWARE TEST
.*       IF VAR=1 OR NULL,  THEN GENERATE HARDWARE TEST
.*
         AIF   ('&VAR' EQ '0').DET020
         TM    UCBFLB-UCBOB&UCB.,IECIDHRC  TEST FOR  @YM01123
*                                  *HARDWARE RESERVE
         AGO   .DETXIT
.DET020  ANOP
         TM    UCBSQC-UCBOB&UCB.,IECIDSRC  TEST FOR
*                                  *SOFTWARE RESERVE
         AGO   .DETXIT                                         @OZ00805
.DET030 ANOP                                                   @OZ00805
.*      IF VAR=2 SET/RESET UCBRR AND EXIT                      @OZ00805
        SPACE
        L    &REG(2).,UCBEXTPT-UCBOB(0,&UCB) GET UCB EXTENSION @OZ00805
        TM   UCBFLP1-UCBCMEXT(&REG(2).),IECIDSUP IS DEV SHARED @OZ00805
        BZ   IECID&LABEL     NO,EXIT IMMEDIATELY               @OZ00805
*                                        * MORE THAN 1 CPU     @OZ00805
        L    &REG(2).,CVTPTR(0,0)   GET CVT @                  @G64APLK
        L    &REG(1).,CVTCSD-CVTMAP(0,&REG(2).) GET CSD @      @G64APLK
        CLI  CSDCPUOL-CSD+1(&REG(1).),IECIDCPU                 @OZ00805
        BNE  IECDT&LABEL      YES,TURN OFF R/R                 @OZ00805
        L    &REG(1).,CVTCRCA-CVTMAP(0,&REG(2).) GET CRCA @    @G64APLK
        LTR  &REG(1).,&REG(1) IS CRH/CHS ACTIVE ?              @G64APLK
        BNZ  IECDT&LABEL      YES, TURN OFF R/R                @G64APLK
*                                                           *  @OZ00805
        OI   UCBTBYT2-UCBOB&UCB,IECIDSHR TURN ON R/R           @OZ00805
        B    IECID&LABEL                                       @OZ00805
IECDT&LABEL NI UCBTBYT2-UCBOB&UCB,IECIDOFF TURN OFF R/R        @OZ00805
.DETXIT  ANOP
IECID&LABEL DS 0H                  DETECTOR EXIT POINT
         MEXIT
.*****     *****     *****     *****     *****     *****     *****
.*****      DOM      *****      DOM      *****      DOM      *****
.*****     *****     *****     *****     *****     *****     *****
.DOM000  ANOP
.*
.*       CSECT AUTHORIZATION
.*
         AIF   ('&SYSECT' EQ 'WMMCCABE').DOMAUTH
         AIF   ('&SYSECT' EQ 'IEECVET7').DOMAUTH
.*       AGO   .IOSGEN1                                        @ZA12429
.DOMAUTH ANOP
.*
.*       CHECK FOR MISSING PARAMETERS
.*
         AIF   (('&TABLE' EQ '') OR ('&REG' EQ '')).IOSGEN3
         AIF   (N'&REG LT 3).IOSGEN2
         SPACE 2
*****************************************************************
*                                                               *
* FUNCTION:                                                     *
*    DOM - DETERMINES WHICH PREVIOUSLY ISSUED 'INTERVENTION     *
*          REQUIRED' MESSAGES CAN BE DELETED.                   *
*                                                               *
* MACRO CALL:                                                   *
*    LABEL  IOSGEN  DOM,TABLE=(REG),REG=(REG1,REG2,REG3)        *
*                                                               *
*         PLS - GEN REFS(CVTPTR,CVTILK2,UCBOB,UCBFLA,           *
*               UCBFLC,UCBNAME,UCBTBYT3,CVTMAP)                 *
*               (IOSGEN DOM,...KEYWORDS AS IN BAL);             *
*                                                               *
* INPUT:                                                        *
*    TABLE=  MAY SPECIFY A GPR (SYMBOLIC OR ABSOLUTE), WHICH    *
*    IS TO CONTAIN THE ADDRESS OF A LIST OF FOUR BYTE           *
*    ENTRIES.  THE RIGHT MOST THREE BYTES CONTAIN THE EBCDIC    *
*    BASE UNIT ADDRESS OF THE DEVICE TO TESTED FOR OUTSTANDING  *
*    INTERVENTION REQUIRED.  THE FIRST BYTE MUST CONTAIN X'00'  *
*    EXCEPT FOR THE LAST ENTRY WHICH WILL BE DENOTED BY X'80'.  *
*                                                               *
*    REG=  MUST SPECIFY THREE REGISTERS (SYMBOLIC OR ABSOLUTE)  *
*    WHICH MAY BE USED BY THIS EXPANSION.                       *
*                                                               *
*    LABEL - OPTIONAL LABEL.                                    *
*                                                               *
* OUTPUT:                                                       *
*    A X'40' WILL BE SET IN THE FIRST BYTE OF EACH ENTRY BY     *
*    THIS FUNCTION IF THE MESSAGE CAN BE DELETED.               *
*                                                               *
* ATTRIBUTES:                                                   *
*    THIS FUNCTION IS EXPANDED AS RE-ENTRANT, IN-LINE CODE.     *
*                                                               *
* OTHER:                                                        *
*    THE EXPANSION OF THIS FUNCTION IS DEPENDENT ON THE         *
*    SPECIFICATION OF THE FOLLOWING MAPPING MACROS              *
*    IN THE CALLING CSECT ASSEMBLY:                             *
*         IEFUCBOB                                              *
*         CVT   DSECT=YES                                       *
*                                                               *
*    LOCKS ARE NOT REQUIRED BY THIS FUNCTION.                   *
*                                                               *
*****************************************************************
         SPACE 2
*****************************************************************
*                                                               *
*        UCB - UNIT CONTROL BLOCK                               *
*              REFERENCES AND SPECIAL EQUATES                   *
*                                                               *
*****************************************************************
         SPACE
IECIOK01 EQU   1                   CONSTANT OF 1
IECIOK03 EQU   3                   CONSTANT OF 3
IECIOIN2 EQU   2                   UCB SCAN TBL INCREMENT
IECIOIN4 EQU   4                   DOM LIST INCREMENT
IECIO3TA EQU   X'80'               UCB3TAPE
IECIONRY EQU   X'40'               UCBNRY
IECIOITF EQU   X'10'               UCBITF
IECIODOM EQU   X'40'               DOM INDICATOR
IECIOEND EQU   X'80'               END OF LIST INDICATOR
IECIOXFF EQU   X'FF'               END OF UCBLOOK UP TABLE
*                                  *AND 'AND'ING CONSTANT
         SPACE
*****************************************************************
*                                                               *
*        GET VALID UCB ADDRESS FROM UCB LOOK-UP TABLE           *
*                                                               *
*****************************************************************
         SPACE
&NAME    LR    &REG(1).,&TABLE(1)   PUT LIST ADDR IN WORK REG
         SPACE
IECIO010 L     &REG(2).,CVTPTR(0,0)  GET CVT PTR
         L     &REG(2).,CVTILK2-CVTMAP(0,&REG(2).)  UCB SCAN
*                                  *TABLE
         SPACE
IECIO020 LH    &REG(3).,0(0,&REG(2).)  GET UCB PTR
         N     &REG(3).,IECIOMSK   AND OFF ANY PROPAGATED BITS @Z30AALB
         SPACE
         LTR   &REG(3).,&REG(3)   IS THIS A FILLER
         BNZ   IECIO040            NO, GO TO TEST
         SPACE
IECIO030 LA    &REG(2).,IECIOIN2(0,&REG(2).)  UPDATE TABLE PTR
         SPACE
         CLI   IECIOK01(&REG(2).),IECIOXFF  TEST FOR END OF TABLE
         BE    IECIO050            YES, NO DOM FOR THIS MSG
         SPACE
         B     IECIO020            CONTINUE SEARCH
         SPACE
*****************************************************************
*                                                               *
*        DETERMINE IF UNIT NAMES IN UCB AND LIST ARE EQUAL      *
*        AND IF MESSAGE IS TO BE DELETED                        *
*                                                               *
*****************************************************************
         SPACE
IECIO040 CLC   IECIOK01(IECIOK03,&REG(1).),UCBNAME-UCBOB(&REG(3).)
*                                  *ARE UNIT NAMES EQUAL
         BNE   IECIO030            NO, CONTINUE SEARCH
         SPACE
         TM    UCBFLA-UCBOB(&REG(3).),IECIONRY  TEST IF DEVICE
*                                  *READY
         BZ    IECIO070            YES, GO TO INDICATE DOM
         SPACE
         CLI   UCBTBYT3-UCBOB(&REG(3).),IECIO3TA  TEST FOR TAPE
*                                  *DEVICE
         BNE   IECIO050            NO, GO INDICATE NO DOM
         SPACE
         TM    UCBFLC-UCBOB(&REG(3).),IECIOITF  TEST REWIND,
*                                  *UNLOAD CONDITION
         BO    IECIO070            YES, GO INDICATE DOM
         SPACE
*****************************************************************
*                                                               *
*        UPDATE MESSAGE STATUS                                  *
*                                                               *
*****************************************************************
         SPACE
IECIO050 NI    0(&REG(1).),IECIOXFF-IECIODOM  SET NO DOM
         B     IECIO080            GO TO UPDATE LIST PTR
         SPACE
IECIO060 OC    0(IECIOK01,&REG(1).),0(&REG(2).)  DOM EQ PREV
         OI    0(&REG(2).),IECIODOM  SET DOM FOR PREV
         B     IECIO080            GO TO UPDATE LIST PTR
         SPACE
IECIO070 OI    0(&REG(1).),IECIODOM  INDICATE DOM
         SPACE
*****************************************************************
*                                                               *
*        SCAN LIST FOR DUPLICATE REQUESTS                       *
*        AND FOR END OF LIST                                    *
*                                                               *
*****************************************************************
         SPACE
IECIO080 TM    0(&REG(1).),IECIOEND  TEST FOR LIST END
         BO    IECIO100            YES, LEAVE ROUTINE
         SPACE
         LA    &REG(1).,IECIOIN4(0,&REG(1).)  POINT TO NEXT ENTRY
         LR    &REG(2).,&REG(1)   INIT REG FOR SCAN
         LA    &REG(3).,IECIOIN4(0,0)  INIT REG FOR DECREMENT
         SPACE
IECIO090 SLR   &REG(2).,&REG(3)   POINT TO PREV ENTRY
         SPACE
         CLC   IECIOK01(IECIOK03,&REG(1).),IECIOK01(&REG(2).)
*                                  *ARE UNIT ADDR EQUAL
         BE    IECIO060            YES, GO TO HANDLE
         SPACE
         CR    &REG(2).,&TABLE(1)   IS LAST ENTRY TESTED
         BH    IECIO090            NO, CONTINUE TEST
         SPACE
         B     IECIO010            GO TO HANDLE
         SPACE
***********************************************************************
*                                                                     *
*        CONSTANT FOR DOM FUNCTION, PLACED HERE TO ALLEVIATE AN       *
*        EXTRA BRANCH INSTRUCTION AROUND IT.                          *
*                                                                     *
***********************************************************************
         SPACE
         DS    0F
IECIOMSK DC    X'0000FFFF'                                     @Z30AALB
         SPACE
*****************************************************************
*                                                               *
*        RETURN IN-LINE TO CALLER                               *
*                                                               *
*****************************************************************
         SPACE
IECIO100 DS    0H                  END OF DOM ROUTINE
         SPACE
         MEXIT
.*****     *****     *****     *****     *****     *****     *****
.*****     MOUNT     *****     MOUNT     *****     MOUNT     *****
.*****     *****     *****     *****     *****     *****     *****
.MNT000  ANOP
.*
.*       CSECT AUTHORIZATION
.*
         AIF   ('&SYSECT' EQ 'IQASTK00').MNTAUTH
         AIF   ('&SYSECT' EQ 'WMMCCABE').MNTAUTH
.*       AGO   .IOSGEN1                                        @ZA12429
.MNTAUTH ANOP
.*
.*       CHECK FOR MISSING PARAMETERS
.*
         AIF   (('&UCB' EQ '') OR ('&REG' EQ '')).IOSGEN3
         AIF   ('&IECIMNT' EQ '1').MNT010   ONE CALL ONLY
&IECIMNT SETB  1                   SET FIRST TIME SWITCH
         SPACE 2
*****************************************************************
*                                                               *
* FUNCTION:                                                     *
*    MOUNT - TESTS FOR A MOUNT PENDING CONDITION.               *
*                                                               *
* MACRO CALL:                                                   *
*    LABEL  IOSGEN  MOUNT,UCB=(REG),REG=(REG)                   *
*                                                               *
*         PLS - GEN REFS(UCBDMCT,UCBSTAT,UCBOB,                 *
*               UCBFLA,UCBTBYT3)                                *
*               (IOSGEN MOUNT,...KEYWORDS AS IN BAL);           *
*                                                               *
* INPUT:                                                        *
*    UCB=  MAY SPECIFY A GPR (SYMBOLIC OR ABSOLUTE), WHICH      *
*    IS TO CONTAIN THE ADDRESS OF THE UCB COMMON SEGMENT FOR    *
*    WHICH THE MOUNT TEST IS TO BE DIRECTED. THE DEVICE MUST    *
*    BE A MOUNTABLE DASD OR TAPE ONLY.  IF ANOTHER TYPE         *
*    IS SPECIFIED.  CONTROL IS GIVEN TO THE NEXT                *
*    SEQUENTIAL INSTRUCTION FOLLOWING THE EXPANSION.            *
*                                                               *
*    REG=  MUST SPECIFY A GPR (SYMBOLIC OR ABSOLUTE)            *
*    CONTAINING THE ADDRESS OF THE INSTRUCTION TO BE            *
*    GIVEN CONTROL IF A MOUNT CONDITION IS PENDING.             *
*                                                               *
*    LABEL - OPTIONAL LABEL.                                    *
*                                                               *
* OUTPUT:                                                       *
*    NONE                                                       *
*                                                               *
* ATTRIBUTES:                                                   *
*    THIS FUNCTION IS EXPANDED AS RE-ENTRANT, IN-LINE CODE,     *
*    AND MAY BE EXPANDED A VARIABLE NUMBER OF TIMES             *
*    IN THE CSECT ASSEMBLY WITHOUT DUPLICATION OF SYMBOLS.      *
*                                                               *
* OTHER:                                                        *
*    THE EXPANSION OF THIS FUNCTION IS DEPENDENT ON THE         *
*    SPECIFICATION OF THE IEFUCBOB MAPPING MACRO                *
*    IN THE CALLING CSECT ASSEMBLY.                             *
*                                                               *
*    LOCKS ARE NOT REQUIRED BY THIS FUNCTION.                   *
*                                                               *
*****************************************************************
         SPACE 2
*****************************************************************
*                                                               *
*        UCB - UNIT CONTROL BLOCK                               *
*              REFERENCES AND SPECIAL EQUATES                   *
*                                                               *
*****************************************************************
         SPACE
IECINMNT EQU   X'80'               UCBMOUNT
IECINALC EQU   X'08'               UCBALOC
IECINNRY EQU   X'40'               UCBNRY
IECIN3DA EQU   X'20'               UCB3DACC
IECIN3TA EQU   X'80'               UCB3TAPE
.MNT010  ANOP
.*
.*       CONSTRUCT UNIQUE LABEL SUFFIX
.*
&LABEL   SETC  '&SYSNDX'(2,3)      SET LAST 3 DIGITS
         SPACE
&NAME    TM    UCBTBYT3-UCBOB&UCB.,IECIN3DA+IECIN3TA
*                                  *IS IT A DASD OR TAPE
         BZ    IECIN&LABEL         NO, EXIT IMMEDIATELY
         SPACE
         TM    UCBDMCT-UCBOB&UCB.,IECINMNT  MOUNT REQ PENDING
         BNO   IECIN&LABEL         NO, EXIT IMMEDIATELY
         SPACE
         TM    UCBTBYT3-UCBOB&UCB.,IECIN3DA  IS IT A DASD
         BO    0(0,&REG(1).)       YES, GO TO MOUNT PEND RTN
         SPACE
         TM    UCBSTAT-UCBOB&UCB.,IECINALC  DEVICE ALLOCATED
         BNO   IECIN&LABEL         NO, SKIP MOUNT PEND RTN
         SPACE
         TM    UCBFLA-UCBOB&UCB.,IECINNRY DEVICE NOT READY
         BO    0(0,&REG(1).)       YES, GO TO MOUNT PEND RTN
         SPACE
IECIN&LABEL DS    0H               END OF MOUNT ROUTINE
         MEXIT
.*****     *****     *****     *****     *****     *****     *****
.*****     SIMINT    *****     SIMINT    *****     SIMINT    *****
.*****     *****     *****     *****     *****     *****     *****
.SIM000  ANOP
*
*       THE SIMINT FUNCTION HAS BEEN REPLACED BY THE IOSINTRP
*       MACRO.                                                 @ZA16163
*
         AGO   .IOSGEN3
.*****     *****     *****     *****     *****     *****     *****
.*****     VARY      *****     VARY      *****     VARY      *****
.*****     *****     *****     *****     *****     *****     *****
.VAR000  ANOP
.*
.*       CSECT AUTHORIZATION
.*
         AIF   (('&SYSECT' EQ 'IEEVDEV')                               X
               OR ('&SYSECT' EQ 'IEEVPTH')).VARAUTH
         AIF   ('&SYSECT' EQ 'WMMCCABE').VARAUTH
.*       AGO   .IOSGEN1                                        @ZA12429
.VARAUTH ANOP
.*
.*       CHECK FOR MISSING PARAMETERS
.*
         AIF   ('&TABLE' EQ '').IOSGEN3
         SPACE 2
*****************************************************************
*                                                               *
* FUNCTION:                                                     *
*    VARY - ALTERS THE STATUS OF A PATH TO A DEVICE.            *
*                                                               *
* MACRO CALL:                                                   *
*    LABEL  IOSGEN  VARY,TABLE=LABEL OR (REG)                   *
*                                                               *
*         PLS - GEN                                             *
*               REFS(CVTPTR,CVTMAP,CVTIXAVL,IOCOM,IOCGENA)      *
*               (IOSGEN VARY,...KEYWORDS AS IN BAL);            *
*                                                               *
* INPUT:                                                        *
*    REGISTER 13 MUST CONTAIN THE ADDRESS OF A 16 WORD          *
*    SAVE AREA.                                                 *
*                                                               *
*    TABLE= MUST SPECIFY THE ADDRESS OF A TWO WORD TABLE        *
*    WITH THE FOLLOWING FORMAT.  THE ADDRESS MAY OPTIONALLY     *
*    BE PASSED IN ANY REGISTER (SYMBOLIC OR ABSOLUTE) OTHER     *
*    THAN 13.                                                   *
*                                                               *
*         +0  HEXIDECIMAL DEVICE ADDRESS TO BE VARIED,          *
*             E.G., X'0293'.                                    *
*         +2  VARY ONLINE (X'04'),                              *
*             VARY OFFLINE CONDITIONALLY (X'00'),               *
*             VARY OFFLINE UNCONDITIONALLY (X'80').             *
*         +3  CHANNEL SET ID (X'00' OR X'01').                 @G64APLK
*         +4  UNUSED.                                           *
*         +5  BASE ADDRESS OF DEVICE IN EBCDIC;                 *
*             E.G.,X'F2F9F3'.                                   *
*    NOTE:  THIS FIELD IS CONDIDERED INPUT ONLY AND IS          *
*           NOT PRESERVED ACROSS THE INTERFACE.                 *
*                                                               *
* OUTPUT:                                                       *
*    THE FOLLOWING RETURN CODES ARE RETURNED IN                 *
*    REGISTER 15:                                               *
*         00 - SUCCESSFUL VARY.                                 *
*         04 - VARY OFFLINE UNCONDITIONALLY, THE LAST PATH      *
*              TO THE DEVICE HAS BEEN VARIED OFFLINE.           *
*         08 - VARY OFFLINE CONDITIONALLY, THE PATH TO BE       *
*              VARIED REPRESENTED THE LAST PATH TO THE DEVICE.  *
*         12 - THE SPECIFIED ALTERNATE PATH IS NOT A VALID      *
*              PATH TO THE DEVICE.                              *
*         16 - THE UCB FOR THE SPECIFIED BASE ADDRESS CAN       *
*              NOT BE FOUND.                                    *
*         20 - THE UCB FOR THE SPECIFIED BASE ADDRESS REP-      *
*              RESENTS A SHARED DASD DEVICE AND THE SPECIFIED   *
*              PATH IS RESERVED.                                *
*                                                               *
* EXTERNAL ROUTINES:                                            *
*    IECVGENA - RESIDENT IOSGEN SUBROUTINE.                     *
*                                                               *
* ATTRIBUTES:                                                   *
*    THIS FUNCTION IS EXPANDED AS REENTRANT CODE.               *
*                                                               *
* OTHER:                                                        *
*    THE FOLLOWING MAPPING MACROS ARE REQUIRED:                 *
*         CVT  DSECT=YES                                        *
*         IECDIOCM                                              *
*                                                               *
*    THE UCB LOCK IS OBTAINED FOR THIS FUNCTION.                *
*                                                               *
*****************************************************************
         SPACE 2
*****************************************************************
*                                                               *
*        REGISTER EQUATES                                       *
*                                                               *
*****************************************************************
         SPACE
IECIVZRO EQU   0                   REFERENCE ONLY
IECIVTBL EQU   5                   PARAMETER POINTER
IECIVCVT EQU   6                   CVT POINTER
IECIVSAV EQU   13                  SAVE AREA PTR
IECIVRTN EQU   14                  RETURN REG FROM IECVGENA
IECIVBAS EQU   15                  BRANCH REG TO IECVGENA
         SPACE
IECIVARY EQU   4                   'VARY' ENTRY OFFSET IN IECVGENA
         SPACE
.* THE VALIDITY CHECK CODE HAS BEEN MOVED TO IECVGENA          @G64APLK
&NAME    STM   IECIVZRO,IECIVBAS,0(IECIVSAV) SAVE REGS
         AIF   ('&TABLE'(1,1) EQ '(').VAR010
         LA    IECIVTBL,&TABLE.(0)  GET PARAMETER ADDR
         AGO   .VAR020
.VAR010  ANOP
         LR    IECIVTBL,&TABLE(1)   GET TABLE PTR
.VAR020  ANOP
         SPACE
         L     IECIVCVT,CVTPTR(0,0)  GET CVT PTR
         L     IECIVBAS,CVTIXAVL-CVTMAP(0,IECIVCVT) GET IOCOM PTR
         L     IECIVBAS,IOCGENA-IOCOM(0,IECIVBAS)  GET IECVGENA PTR
         BAL   IECIVRTN,IECIVARY(0,IECIVBAS) CALL IECVGENA
         SPACE
IECIVXIT LM    IECIVZRO,IECIVBAS,0(IECIVSAV) RESTORE REGS
         MEXIT
.*****     *****     *****     *****     *****     *****     *****
.*****     *LCH*     *****     *LCH*     *****     *LCH*     *****
.*****     *****     *****     *****     *****     *****     *****
.LCH000   ANOP
*
*        THE LCH FUNCTION HAS BEEN DELETED.                    @G64APLK
*
         AGO   .IOSGEN3
.*****     *****     *****     *****     *****     *****     *****
.*****    RESTART    *****    RESTART    *****    RESTART    *****
.*****     *****     *****     *****     *****     *****     *****
.RES000   ANOP
.*
.*       CSECT AUTHORIZATION
.*
         AIF   ('&SYSECT' EQ 'IGC016').RESAUTH
         AIF   ('&SYSECT' EQ 'IATMSIO').RESAUTH
         AIF   ('&SYSECT' EQ 'IEEVCPU').RESAUTH                @YM03483
         AIF   ('&SYSECT' EQ 'WMMCCABE').RESAUTH
.*       AGO   .IOSGEN1                                        @ZA12429
.RESAUTH ANOP
.*
.*       CHECK PARAMETERS FOR ERRORS
.*
         AIF   (('&VAR' NE 'ALL') AND ('&VAR' NE 'CHANNEL') AND        X
               ('&VAR' NE '')).IOSGEN3
         AIF   (N'&REG LT 4).IOSGEN2
         AIF   ('&IECIRES' EQ '1').RES010 CHECK FIRST TIME SWITCH
&IECIRES SETB  1                        SET SWITCH
         SPACE 2
*****************************************************************
*                                                               *
* FUNCTION:                                                     *
*    RESTART - CAUSES THE SPECIFIED CHANNEL (OR ALL CHANNELS)   *
*              ON THE SPECIFIED CPU TO BE MARKED FOR RESTART    *
*              THE NEXT TIME THE I/O SUPERVISOR IS ENTERED      *
*              FOR THAT CPU.                                    *
*                                                               *
* MACRO CALL:                                                   *
*    LABEL  IOSGEN  RESTART,REG=(REG1,REG2,REG3,REG4),          *
*                   VAR=ALL OR CHANNEL                          *
*                                                               *
*         PLS - GEN REFS(CVTPTR,CVTMAP,CVTIXAVL,CVTLCCAT,       *
*               IOCOM,IOCOMEX,IOCCTBL,IOX,IOXCHMSK,             *
*               IRTENTRY,IRTCHMSK,LCCA,LCCAIRT)                 *
*               (IOSGEN RESTART,...KEYWORDS AS IN BAL);         *
*                                                               *
* INPUT:                                                        *
*    REG= MUST SPECIFY FOUR GPRS (SYMBOLIC OR ABSOLUTE)         *
*    WHICH MAY BE USED BY THIS FUNCTION AS WORK REGISTERS.      *
*         REG1 - (VAR=CHANNEL ONLY) MUST CONTAIN THE CHANNEL    *
*                NUMBER (ONE BYTE BINARY, RIGHT JUSTIFIED)      *
*                WHICH IS TO BE MARKED FOR RESTART.             *
*         REG2 - MUST CONTAIN THE PHYSICAL CPUID OF THE CPU     *
*                WHICH HAS THE CHANNEL(S) TO BE RESTARTED.      *
*         REG3 - NO RESTRICTIONS.                               *
*         REG4 - NO RESTRICTIONS.                               *
*    THE CONTENTS OF THESE REGISTERS ON EXIT FROM THIS          *
*    EXPANSION ARE UNPREDICTABLE.                               *
*                                                               *
*    VAR= INDICATES WHICH OPTION IS REQUESTED:                  *
*         VAR=ALL - RESTART ALL CHANNELS.                       *
*         VAR=CHANNEL - (DEFAULT) RESTART SELECTED CHANNEL.     *
*                                                               *
* ATTRIBUTES:                                                   *
*    THE FUNCTION EXPANDS AS IN-LINE,REENTRANT CODE             *
*    AND MAY BE EXPANDED A VARIABLE NUMBER OF TIMES IN THE      *
*    CALLING CSECT.                                             *
*                                                               *
* OTHER:                                                        *
*    THE CHANNEL RESTART MASK OF THE SPECIFIED CPU IS           *
*    MODIFIED VIA SERIALIZATION OF THE COMPARE AND SWAP         *
*    INSTRUCTION.                                               *
*                                                               *
*    THE EXPANSION OF THIS FUNCTION IS DEPENDENT ON THE         *
*    SPECIFICATION OF THE FOLLOWING MAPPING MACROS              *
*    IN THE CALLING CSECT ASSEMBLY:                             *
*         CVT     DSECT=YES                                     *
*         IHALCCA                                               *
*         IECDIRT                                               *
*         IECDIOCM                                              *
*         IECDIOCX                                              *
*                                                               *
*    LOCKS ARE NOT REQUIRED BY THIS FUNCTION.                   *
*                                                               *
*****************************************************************
         SPACE 2
*****************************************************************
*                                                               *
*        MISCELLANEOUS EQUATES                                  *
*                                                               *
*****************************************************************
         SPACE
IECIRCHT EQU   2                   CHANNEL TABLE MASK OFFSET
.RES010  ANOP
.*
.*       CONSTRUCT UNIQUE LABEL SUFFIX
.*
&LABEL   SETC  '&SYSNDX'(2,3)      SET LAST 3 DIGITS
         SPACE
&NAME    L     &REG(4).,CVTPTR(0,0)  GET CVT PTR
         L     &REG(3).,CVTLCCAT-CVTMAP(0,&REG(4).)
*                                  *GET LCCAVT PTR
         L     &REG(4).,CVTIXAVL-CVTMAP(0,&REG(4).)
*                                  *GET IOCOM PTR
         SLL   &REG(2).,2(0)       GET LCCAVT INDEX
         L     &REG(3).,0(&REG(2).,&REG(3).)
*                                  *GET LCCA PTR
         LA    &REG(3).,LCCAIRT-LCCA(0,&REG(3).)
*                                  *GET IRT PTR
.*
.*       TEST FOR VAR=ALL
.*
         AIF   ('&VAR' NE 'ALL').RES020
         L     &REG(4).,IOCOMEX-IOCOM(0,&REG(4).)
*                                  *GET IOCOMX PTR
         LH    &REG(4).,IOXCHMSK-IOX(0,&REG(4).)
*                                  *GET MASK OF GENERATED CHNLS
         AGO   .RES030
.RES020  ANOP
         L     &REG(4).,IOCCTBL-IOCOM(0,&REG(4).)
*                                  *GET CHANNEL TABLE ADDR
         SLL   &REG(1).,3(0)       GET CHANNEL TABLE INDEX
         LH    &REG(4).,IECIRCHT(&REG(1).,&REG(4).)
*                                  *GET MASK FOR THIS CHANNEL
.RES030  ANOP
         SLL   &REG(4).,16(0)      ALIGN CHANNEL(S)
*                                  *TO BE RESTARTED
IECIR&LABEL L &REG(1).,IRTCHMSK-IRTENTRY(0,&REG(3).)
*                                  *GET THIS CPUS CHNL RESTART MASK
         LR    &REG(2).,&REG(1)    GET WORKING COPY OF CHNL MASK
         OR    &REG(2).,&REG(4)    SET NEW BIT(S)
         CS    &REG(1).,&REG(2).,IRTCHMSK-IRTENTRY(&REG(3).)
         BNE   IECIR&LABEL         LOOP UNTIL SWAP COMPLETES
         MEXIT
.*****     *****     *****     *****     *****     *****     *****
.*****     SWAP      *****     SWAP      *****     SWAP      *****
.*****     *****     *****     *****     *****     *****     *****
.SWP000  ANOP
.*
.*       CSECT AUTHORIZATION
.*
         AIF   ('&SYSECT' EQ 'IGFDW0').SWPAUTH
         AIF   ('&SYSECT' EQ 'WMMCCABE').SWPAUTH
.*       AGO   .IOSGEN1                                        @ZA12429
.SWPAUTH ANOP
.*
.*       CHECK PARAMETERS FOR ERRORS
.*
         AIF   (('&UCB' EQ '') OR ('&REG' EQ '') OR                    X
               ('&VAR' EQ '')).IOSGEN3
         SPACE 2
*****************************************************************
*                                                               *
* FUNCTION:                                                     *
*    SWAP - SUPPORTS A DDR DEVICE SWAP.                         *
*                                                               *
* MACRO CALL:                                                   *
*    LABEL  IOSGEN  SWAP,VAR=LABEL OR (REG),UCB=(REG),          *
*                   REG=(REG)                                   *
*                                                               *
*         PLS - GEN REFS(CVTMAP,CVTPTR,CVTIXAVL,                *
*               IOCOM,IOCGENA )                                @ZA12145
*               (IOSGEN  SWAP,...KEYWORDS AS IN BAL);           *
*                                                               *
* INPUT:                                                        *
*    REGISTER 13 MUST CONTAIN THE ADDRESS OF A 18 WORD          *
*    SAVEAREA.                                                  *
*                                                               *
*    VAR=  MUST SPECIFY THE ADDRESS (LABEL OR GPR) OF AN        *
*    36 WORD WORK AREA BE USED DURING THE SWAP PROCESSING.      *
*                                                               *
*    UCB=  MUST SPECIFY A GPR (SYMBOLIC OR ABSOLUTE), CON-      *
*    TAINING THE ADDRESS OF THE SWAPPED 'TO' UCB.               *
*                                                               *
*    REG=  MUST SPECIFY A GPR (SYMBOLIC OR ABSOLUTE), CON-      *
*    TAINING THE ADDRESS OF THE SWAPPED 'FROM' UCB.             *
*                                                               *
*    NOTE:  REGISTERS 14 AND 15 MAY NOT BE USED FOR PARAMETERS. *
*                                                               *
*    LABEL - OPTIONAL LABEL.                                    *
*                                                               *
* OUTPUT:                                                       *
*    RETURN CODE - IN FIRST WORD OF WORK AREA;                 @ZA12145
*                  SET BY IECVGENA                             @ZA12145
*            0 = SWAP COMPLETED SUCCESSFULLY.                  @ZA12145
*            4 = SWAP FAILED                                   @ZA12145
*                                                               *
* EXTERNAL ROUTINES:                                            *
*    IECVGENA - RESIDENT IOSGEN SUBROUTINE.  THIS MODULE IS     *
*    ENTERED VIA A BALR INSTRUCTION TO SWAP BOTH UCB'S AND      *
*    IOQE'S.                                                    *
*                                                               *
* ATTRIBUTES:                                                   *
*    THIS FUNCTION IS EXPANDED AS RE-ENTRANT, IN-LINE CODE.     *
*                                                               *
* OTHER:                                                        *
*    THE EXPANSION OF THIS FUNCTION IS DEPENDENT ON THE         *
*    SPECIFICATION OF THE FOLLOWING MAPPING MACROS              *
*    IN THE CALLING CSECT ASSEMBLY:                             *
*         CVT   DSECT=YES                                       *
*         IECDIOCM                                              *
*                                                               *
*    SPECIAL NOTE:  BOTH UCB'S ARE ASSUMED TO BE QUIESCED.      *
*                   THE USER OF THIS FUNCTION MUST BE IN SRB   @ZA12145
*                   MODE.                                      @ZA12145
*                                                               *
*    LOCKS ARE NOT REQUIRED FOR THIS FUNCTION.                  *
*                                                               *
*****************************************************************
         SPACE 2
*****************************************************************
*                                                               *
*        REGISTER DEFINITIONS FOR SWAP                          *
*                                                               *
*****************************************************************
         SPACE
IECIXWK0 EQU   0                   WORK REG
IECIXTOO EQU   4                   'TO' UCB PTR
IECIXCOM EQU   5                   IOCOM PTR
IECIXFRM EQU   6                   'FROM' UCB PTR
IECIXWRK EQU   8                   WORK AREA PTR
IECIXCVT EQU   12                  CVT PTR
IECIXSAV EQU   13                  SAVE AREA PTR
IECIXRTN EQU   14                  RETURN REG
IECIXBAS EQU   15                  BASE REG
         SPACE 2
*****************************************************************
*                                                               *
*        MISCELLANEOUS EQUATES FOR SWAP                         *
*                                                               *
*****************************************************************
         SPACE
IECIXK08 EQU    8                  CONSTANT OF 8
IECIX512 EQU   512                 CONSTANT OF 512
IECIXK12 EQU   12                  CONSTANT OF 12
IECIXK20 EQU   20                  CONSTANT OF 20
         SPACE
*****************************************************************
*                                                               *
*        SPECIAL ENTRY POINT BRANCH TABLE VALUES FOR IECVGENA   *
*        THESE VALUES ARE DISPLACEMENTS FROM REGISTER 15        *
*                                                               *
*****************************************************************
         SPACE
*        EQU   0                   (SWAP)
*        EQU   4                   NOT AVAILABLE   (VARY)
*        EQU   8                   NOT AVAILABLE   (RESERVED)
*        EQU   12                  NOT AVAILABLE   (RESERVED)
*        EQU   16                  NOT AVAILABLE   (UCBFLG)
         SPACE
*****************************************************************
*                                                               *
*        ESTABLISH ADDRESSABILITY                               *
*                                                               *
*****************************************************************
         SPACE
&NAME    STM   IECIXRTN,IECIXCVT,IECIXK12(IECIXSAV)  SAVE REGS
         LA    IECIXTOO,&UCB(1).(0,0)   GET REG VALUE
         SLL   IECIXTOO,2(0)       REG VALUE * 4 = INDEX
         L     IECIXTOO,IECIXK20(IECIXTOO,IECIXSAV)  GET
*                                  *'TOO' UCB PTR
         LA    IECIXFRM,&REG(1).(0,0)   GET REG VALUE
         SLL   IECIXFRM,2(0)       REG VALUE * 4 = INDEX
         L     IECIXFRM,IECIXK20(IECIXFRM,IECIXSAV)  GET
*                                  *'FROM' UCB PTR
         AIF   ('&VAR'(1,1) EQ '(').SWP010
         LA    IECIXWRK,&VAR(1).(0) GET WORK AREA ADDRESS
         AGO   .SWP020
.SWP010  ANOP
         LA    IECIXWRK,&VAR(1).(0,0)   GET REG VALUE
         SLL   IECIXWRK,2(0)       REG VALUE * 4 = INDEX
         L     IECIXWRK,IECIXK20(IECIXWRK,IECIXSAV)  GET
*                                  *'WORK AREA' PTR
.SWP020  ANOP
         SPACE
*****************************************************************
*                                                               *
*        CALL IECVGENA TO PERFORM THE SWAP                     @ZA12145
*                                                               *
*****************************************************************
         SPACE
         L     IECIXCVT,CVTPTR(0,0)  GET CVTPTR
         LA    IECIXWK0,IECIX512(0,0) GET PREFIX VALUE
         SLR   IECIXTOO,IECIXWK0   POINT TO UCB PREFIX
         SLR   IECIXFRM,IECIXWK0   POINT TO UCB PREFIX
         L     IECIXCOM,CVTIXAVL-CVTMAP(0,IECIXCVT)  GET IOCOM PTR
         L     IECIXBAS,IOCGENA-IOCOM(0,IECIXCOM)  GET IECVGENA PTR
         BALR  IECIXRTN,IECIXBAS   CALL IECVGENA
         SPACE
IECIXXIT LM    IECIXRTN,IECIXCVT,IECIXK12(IECIXSAV)  RESTORE REGS
         MEXIT
.*****     *****     *****     *****     *****     *****       @Y30LPLC
.*****    SETVOID    *****    SETVOID    *****    SETVOID      @Y30LPLC
.*****     *****     *****     *****     *****     *****       @Y30LPLC
.SV000   ANOP                                                  @Y30LPLC
.*                                                             @Y30LPLC
.*       CSECT AUTHORIZATION                                   @Y30LPLC
.*                                                             @Y30LPLC
         AIF   ('&SYSECT' EQ 'ICBINIT').SVAUTH                 @Y30LPLC
         AIF   ('&SYSECT' EQ 'IECVIOPM').SVAUTH                @ZA04107
         AIF   ('&SYSECT' EQ 'IGTUJA').SVAUTH
.*       AGO   .IOSGEN1                                        @ZA12429
.SVAUTH  ANOP                                                  @Y30LPLC
.*       CHECK PARAMETERS FOR ERRORS                           @Y30LPLC
.*                                                             @Y30LPLC
         AIF   (N'&REG LT 4).IOSGEN2                           @Y30LPLC
************************************************************** @Y30LPLC
*                                                              @Y30LPLC
* FUNCTION:                                                    @Y30LPLC
*    SETVOID - WILL INITIALIZW ENTRIES IN THE VOID TABLE       @Y30LPLC
*              (VECTOR OF IOS DRIVERS).                        @Y30LPLC
*                                                              @Y30LPLC
*    LABEL    IOSGEN SETVOID,VAR=PURGE OR RESTORE OR EXTENT,   @Y30LPLC
*                    REG=(GPR1,GPR2,GPR3,GPR4)                @Y30LPLC
*                                                              @Y30LPLC
*    PLS - GEN REFS(CVTPTR,CVTMAP,CVTIXAVL,IOCOM,IOCVOID)      @Y30LPLC
*                                                              @Y30LPLC
*          (IOSGEN SETVOID,...KEYWORDS AS IN BAL);             @Y30LPLC
*                                                              @Y30LPLC
* INPUT:                                                       @Y30LPLC
*    VAR= PURGE - SET DRIVER PURGE VOID ENTRY                  @Y30LPLC
*         (PURGE,A)-SET DRIVER PURGE VOID ENTRY WITH USE COUNT @ZA04107
*         (PURGE,R)-REMOVE DRIVER PURGE VOID ENTRY WITH USE    @ZA04107
*                   COUNT                                      @ZA04107
*         RESTORE - SET DRIVER RESTORE VOID ENTRY              @Y30LPLC
*         EXTENT - SET DRIVER END OF EXTENT VOID ENTRY         @Y30LPLC
*                                                              @Y30LPLC
*    REG=(GPR1,GPR2,GPR3,GPR4) FOUR REGISTERS ARE REQUIRED     @Y30LPLC
*    BY THIS FUNCTION.                                         @Y30LPLC
*         GPR1 - CONTAINS THE DRIVER ID RIGHT ALIGNED.         @Y30LPLC
*                CONTENTS WILL BE DESTROYED FOR                @ZA04107
*                VAR=(PURGE,A OR R)                            @ZA04107
*         GPR2 - CONTAINS ENTRY POINT ADDRESS FOR VOID.        @Y30LPLC
*                WORK REGISTER FOR VAR=(PURGE,R)               @ZA04107
*         GPR3 - WORK REGISTER. CONTENTS WILL BE DESTROYED     @Y30LPLC
*         GPR4 - WORK REGISTER. CONTENTS WILL BE DESTROYED     @Y30LPLC
*                                                              @Y30LPLC
* OUTPUT:                                                      @Y30LPLC
*        SPECIFIED VOID TABLE ENTRY WILL BE SET.               @Y30LPLC
*        FOR VAR=(PURGE,A OR R) THE HIGH ORDER BYTE OF THE     @ZA04107
*        ENTRY WILL BE USED AS A USE COUNT -- INCREMENTED FOR  @ZA04107
*        'A', DECREMENTED FOR 'R'. WHEN THE COUNT REACHES ZERO @ZA04107
*        THE ENTRY WILL BE SET TO THE ADDRESS OF A BR14        @ZA04107
*        INSTRUCTION WHICH IS LOCATED AT THE END OF THE VOID   @ZA04107
*        TABLE.                                                @ZA04107
*                                                              @Y30LPLC
* ATTRIBUTES:                                                  @Y30LPLC
*    THE FUNCTION EXPANDS AS IN-LINE, REENTRANT CODE AND MAY   @Y30LPLC
*    BE EXPANDED A VARIABLE NUMBER OF TIMES IN THE CALLING     @Y30LPLC
*    CSECT.                                                    @Y30LPLC
*                                                              @Y30LPLC
* OTHER:                                                       @Y30LPLC
*    THE EXPANSION OF THE FUNCTION IS DEPENDENT ON THE         @Y30LPLC
*    SPECIFICATION OF THE FOLLOWING MAPPING MACROS IN          @Y30LPLC
*    THE CALLING CSECT ASSEMBLY                                @Y30LPLC
*        CVT   DSECT=YES                                       @Y30LPLC
*        IECDIOCM                                              @Y30LPLC
*        IECDVOID DSECT=YES                                    @Y30LPLC
*                                                              @Y30LPLC
************************************************************** @Y30LPLC
&LABEL   SETC  '&SYSNDX'(2,3)                                  @ZA04107
         L     &REG(3).,CVTPTR(0,0)     GET CVT PTR            @Y30LPLC
         L     &REG(3).,CVTIXAVL-CVTMAP(0,&REG(3).) GET IOCOM  @Y30LPLC
         L     &REG(3).,IOCVOID-IOCOM(0,&REG(3).) GET VOID PTR @Y30LPLC
         LR    &REG(4).,&REG(1)         COPY DRIVER ID         @Y30LPLC
         SLL   &REG(4).,2               DRIVER ID * 4          @Y30LPLC
         SLL   &REG(1).,3               DRIVER ID * 8          @Y30LPLC
         ALR   &REG(1).,&REG(4)         VOID INDEX = 12 *      @Y30LPLC
.*                                       DRIVER ID             @Y30LPLC
         AIF   ('&VAR' EQ 'PURGE').SV010                       @Y30LPLC
         AIF   ('&VAR' EQ 'RESTORE').SV020                     @Y30LPLC
         AIF   ('&VAR' EQ 'EXTENT').SV030                      @Y30LPLC
         AIF   ('&VAR' EQ '(PURGE,A)').SV040                   @ZA04107
         AIF   ('&VAR' EQ '(PURGE,R)').SV050                   @ZA04107
         AGO   .IOSGEN3                                        @Y30LPLC
.SV010   ANOP                                                  @Y30LPLC
         ST    &REG(2).,VOIPRG-VOIENTRY(&REG(1).,&REG(3).)     @Y30LPLC
         MEXIT                                                 @Y30LPLC
.SV020   ANOP                                                  @Y30LPLC
         ST    &REG(2).,VOIRSTR-VOIENTRY(&REG(1).,&REG(3).)    @Y30LPLC
         MEXIT                                                 @Y30LPLC
.SV030   ANOP                                                  @Y30LPLC
         ST    &REG(2).,VOIEXTNT-VOIENTRY(&REG(1).,&REG(3).)   @Y30LPLC
         MEXIT                                                 @Y30LPLC
.SV040   ANOP                                                  @ZA04107
         ALR   &REG(3).,&REG(1)    ADDRESS OF VOID ENTRY       @ZA04107
         LA    &REG(2).,0(&REG(2).) CLEAR HI BYTE OF ADDRESS   @ZA04107
         L     &REG(1).,VOIPRG-VOIENTRY(&REG(3).,0) CURRENT    @ZA04107
IECIS&LABEL LR    &REG(4).,&REG(1) COPY CURRENT ENTRY          @ZA04107
         SRL   &REG(4).,24         SHIFT COUNT TO BOTTOM       @ZA04107
         LA    &REG(4).,1(&REG(4).) INCREMENT COUNT            @ZA04107
         SLL   &REG(4).,24         SHIFT COUNT TO TOP          @ZA04107
         OR    &REG(4).,&REG(2)    OR ROUTINE ADDRESS          @ZA04107
         CS    &REG(1).,&REG(4).,VOIPRG-VOIENTRY(&REG(3).)     @ZA04107
         BNZ   IECIS&LABEL                                     @ZA04107
         MEXIT                                                 @ZA04107
.SV050   ANOP                                                  @ZA04107
         ALR   &REG(3).,&REG(1)    ADDRESS OF VOID ENTRY       @ZA04107
IECIT&LABEL L     &REG(2).,CVTPTR(0,0) GET CVT PTR             @ZA04107
         L     &REG(2).,CVTIXAVL-CVTMAP(0,&REG(2).) GET IOCOM  @ZA04107
         LH    &REG(4).,IOCVOICT-IOCOM(0,&REG(2)) MAX ENTRY    @ZA04107
         LR    &REG(1).,&REG(4)    COPY COUNT                  @ZA04107
         SLL   &REG(4).,2          MAX * 4                     @ZA04107
         SLL   &REG(1).,3          MAX * 8                     @ZA04107
         ALR   &REG(1).,&REG(4)    BR14 = MAX * 12             @ZA04107
         L     &REG(2).,IOCVOID-IOCOM(0,&REG(2)) GET VOID PTR  @ZA04107
         ALR   &REG(2).,&REG(1)    ADDR OF BR14 AT END OF VOID @ZA04107
         L     &REG(1).,VOIPRG-VOIENTRY(&REG(3).,0) CURRENT    @ZA04107
         LR    &REG(4).,&REG(1)    COPY CURRENT ENTRY          @ZA04107
         SRL   &REG(4).,24         SHIFT COUNT TO BOTTOM       @ZA04107
         BCTR  &REG(4).,0          DECREMENT ONE               @ZA04107
         SLL   &REG(4).,24         SHIFT COUNT TO TOP          @ZA04107
         LTR   &REG(4).,&REG(4)    IS COUNT NOW ZERO           @ZA04107
         BZ    IECIS&LABEL         YES--USE BR14 ADDRESS       @ZA04107
         LA    &REG(2).,0(&REG(1).) NO--KEEP CURRENT ADDR      @ZA04107
IECIS&LABEL OR    &REG(4).,&REG(2) OR ROUTINE ADDRESS          @ZA04107
         CS    &REG(1).,&REG(4).,VOIPRG-VOIENTRY(&REG(3).)     @ZA04107
         BNZ   IECIT&LABEL                                     @ZA04107
         MEXIT                                                 @ZA04107
.*****     *****     *****     *****     *****     *****     *****
.*****     MNOTE     *****     MNOTE     *****     MNOTE     *****
.*****     *****     *****     *****     *****     *****     *****
.*
.*       MNOTE ERROR MESSAGES
.*
.IOSGEN1 MNOTE 8,'*** &SYSECT MAY NOT INVOKE &FUNC FUNCTION.'
         MEXIT
.*
.IOSGEN2 MNOTE 8,'*** INSUFFICIENT WORK REGISTERS SPECIFIED.'
         MEXIT
.*
.IOSGEN3 MNOTE 8,'*** ERROR IN PARAMETER SET UP, OR &FUNC NOT A SUPPORTX
               ED FUNCTION'
         MEXIT
.*
.IOSGEN4 MNOTE 8,'*** &VAR NOT SUPPORTED FOR &TABLE BIT OF &FUNC .'
         MEND
