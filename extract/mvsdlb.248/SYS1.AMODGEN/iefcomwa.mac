*%GOTO COMPROLG;
         MACRO
         IEFCOMWA
*%COMPROLG:;
*/*
*
*   MACMEAN  IEFCOMWA MEANS COMMON WORK AREA
*   MACCOMP  Y-2  SC1B9/PZD02                                  @G16APPK
*   MACSTAT  Y-2  76323/G16APPK                                @G16APPK
*            Y-2 MERGE SU 4,10,16 CODE TO REL 37 BASE PTF      @ZA28955
*
***********************************************************************
*                                                                     *
*   IEFCOMWA MAPS DATA FIELDS AND SWITCHES COMMON TO BOTH THE         *
*   CONVERTER AND THE INTERPRETER. NO INFORMATION IS COMMUNICATED IN  *
*   THESE FIELDS FROM ONE TO THE OTHER OF THE ABOVE SUBCOMPONENTS.    *
*   THE COMMON MAPPING IS INTENDED TO FACILITATE WORK AREA CHANGES,   *
*   AND EASE REFERENCE TO THE MAPPED FIELDS.                          *
*                                                                     *
*   SWITCH BYTES WITH IDENTICAL NAMES (I.E., SWA) BUT CONTAINING      *
*   INDIVIDUAL SWITCHES UNIQUE TO EITHER THE CONVERTER OR THE         *
*   INTERPRETER , ARE MAPPED SEPARATELY IN BOTH THE CONVERTER AND THE *
*   INTERPRETER WORK AREA MACROS. SUCH MAPPING IS INTENDED TO         *
*   CLARIFY WHICH SWITCHES ARE UNIQUE TO EACH SUBCOMPONENT.           *
*                                                                     *
*   IEFCOMWA MAY BE EXPANDED WITHOUT THE ADJUNCT MACROS FOR THE       *
*   CONVERTER (IEFCVRWA) OR THE INTERPRETER (IEFVMIWA). MODULES       *
*   CONTAINED IN BOTH THE CONVERTER AND INTERPRETER (IEFVGM, ETC.) DO *
*   NOT INVOKE AN ADJUNCT MACRO.                                      *
*                                                                     *
*   THIS MACRO IS NEW FOR VS2/RELEASE 2.                        Y02668*
*                                                                     *
* STATUS - VS2 SU16 - IN THIS MACRO, SU 16 SUPPORTS           @G16APPK*
*          VPSS SUPPORT (SU 29 - @G29AN2E & @G29AN2F).        @G16APPK*
*          ADD SUBSYSSW AND SUBSYORD FOR SUBSYS PROCESSING    @ZA50933*
*                                                                     *
***********************************************************************
**/
*%GOTO COMWAPLS;
*/*
*
*  REGISTER EQUATES.
COMWA    DSECT
         USING COMWA,RC            WORK AREA ADDRESSABILITY.
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
RA       EQU   10
RB       EQU   11
RC       EQU   12
RD       EQU   13
RE       EQU   14
RF       EQU   15
*
*
*  POINTERS, WORK AND DATA AREAS.
*
         DS    0D
CWAL     DS    F                   WORK AREA LENGTH.
IWAL     EQU   CWAL
CWAID    DS    X'11111111'         IDENTIFIER WORD
IWAID    EQU   CWAID
CWACONID DS    F      MCS POINTER TO CONSOLE ID
IWACONID EQU   CWACONID
QPARMP   DS    F                        Q-MGR PARMLIST POINTER
SAVEPTR  DS    F                        CURRENT REG SAVE AREA
CTRLWAP  DS    F                   CONTROL RTNE WORK AREA PTR.
QMGRP    DS    F                        Q MNGR ENTRY POINT
IWAINTS0 DS    F                   MASTER REGISTER SAVE AREA POINTER.
TNEXT    DS    2F                       NEXT 2 AVAILABLE TTR'S
TNEXT2   EQU   TNEXT+4             SECOND TTR.
JACTLPTR DS    F                   PTR TO PSEUDO ACCESS METH RTNEY02668
TEXTBUFP DS    F                   POINTER TO TEXT STRING.       Y02668
TBUFCOPY DS    F                   POINTER TO START OF TEXT BUF. Y02668
TERMRTN  DS    F                   ADDR OF C/I TERMINATE RTNE.   Y02668
AOWSTMT  DS    F                   ADDR OF WRITE BUFFER.         Y02668
* SET OF BUFFER POINTERS USED BY TRACE ROUTINE.                  Y02668
BUFADDR  DS    F                   ADDR OF BUF USED BY TRACE.    Y02668
BUFEND   DS    F                   ADDR OF BUF END.              Y02668
NEXTPTR  DS    F                   PTR TO NEXT OPEN SLOT IN BUF. Y02668
*
AOJMRGEP DS    F                   JOURNAL/MERGE ENTRY POINT.    Y02668
AOSTAPRM DS    F                   ADDR OF ESTAE USER PARMLIST.  Y02668
         DS    0D                  BDY NEEDED FOR CONVERT AREA   Y02668
AOEPWORK DS    2F                  WORK AREA FOR STMT # CVD.     Y02668
IWAIOSA  DS    18F                 I/O REGISTER SAVE AREA.       Y02668
IWASACHN EQU   IWAIOSA+4           CHAIN FIELD IN SAVE AREA.     Y02668
TRSAVE   EQU   IWAIOSA             TRACE RTNE REG SAVE AREA      Y02668
*                                                                Y02668
WARPL    DS    19F                 C/I RPL                       Y02668
RPLADDR  EQU   WARPL
WANELPTR DS    F                   POINTER TO NEL.
WAMSGBUF DS    F                   ADDR OF VGM WORK AREA.        Y02668
WAWRKLTH DS    F                   LENGTH OF C/I WORK AREA.      Y02668
QPARM    DS    CL36                     Q MANAGER PARAMETER AREA
WAJOBRBA DS    CL8                 RBA OF JOB TEXT STRING.       Y02668
WAEXCRBA DS    CL8                 RBA OF EXEC TEXT STRING.      Y02668
WAJBNAME DS    CL8                 JOBNAME FOR JOB.              Y02668
WAJOBPFX DS    CL8                 PSEUDO JOB PREFIX. UPDATED    Y02668
*                                  DURING PROCESSING OF JOB AND  Y02668
*                                  WRITTEN TO TEXT DATA SET AT   Y02668
*                                  INPUT END OF FILE.            Y02668
WAEXCPFX DS    CL8                 PSEUDO EXEC PREFIX. UPDATED   Y02668
*                                  DURING PROCESSING OF STEP AND Y02668
*                                  WRITTEN TO TEXT DATA SET WHEN Y02668
*                                  NEXT EXEC STATEMENT READ, OR  Y02668
*                                  AT INPUT END OF FILE.         Y02668
*
*
AOQLOCEP DS    F                   ALT SWA MGR(LOC) ENTRY PT   @G29AN2F
AOSSIB   DS    F                   ADDR OF SSIB                @G29AN2E
AOSSOB   DS    F                   ADDR OF SSOB                @G29AN2E
AOSUBSYS DS    F                   ADDR OF SUBSYS KEY IN       @G29AN2E
*                                  INTERNAL TEXT               @G29AN2E
AOLOCPL  DS    F                   ADDR OF PARM LIST FOR SWA   @G29AN2E
*                                  MANAGER LOCATE MODE         @G29AN2E
CWARET   DS    H                   AREA FOR RETURN CODES
IWARET   EQU   CWARET
CWAMCSCA DS    H                   MCS COMMAND AUTHORITY.
IWAMCSCA EQU   CWAMCSCA
CWALABEL EQU   CWAMCSCA+1
WASTMTNO DS    H                   NUMBER OF CURRENT STATEMENT.  Y02668
*  RESERVED HALFWORDS.
RHALF1   DS    H                   RESERVED.
RHALF2   DS    H                   RESERVED.
RHALF3   DS    H                   RESERVED.
RHALF4   DS    H                   RESERVED.
RHALF5   DS    H                   RESERVED.
CWAMSLEN DS    CL1                 LENGTH OF MSG FOR VGM.        Y02668
IWAMSLEN EQU   CWAMSLEN
*
*  SWITCH BYTES.
*
AOSW1    DS    CL1                                               Y02668
AOTXTWRT EQU   X'01'               TEXT TO BE WRITTEN TO TEXT DS.Y02668
AOPRTSW  EQU   X'02'               VHEB IS ENTERED ONLY TO WRITE Y02668*
                                   TO LIST DS.                   Y02668
AONOPLIB EQU   X'04'               NULL PROCLIB POINTER IN NEL.  Y02668
AOILGLOP EQU   X'08'               INVALID OPERATOR ON JCL.      Y02668
AOIOERR  EQU   X'10'               I/O ERROR ON LIST DS.         Y02668
AOVFBSW  EQU   X'20'               VFB IS BRANCHING TO VGM.      Y02668
AOENDKSW EQU   X'40'               END KEY FOUND IN TEXT STRING. Y02668
AOFSTPOS EQU   X'80'               FIRST POSITIONAL ON JOB CARD  Y02668
*                                                                Y02668
AOSW4    DS    CL1                                               Y02668
CWATERM  EQU   X'01'               CONVERTER/INTERPRETER IS      Y02668*
                                   TERMINATING.                  Y02668
AODFWMSG EQU   X'02'               DFLT WRN MSG ISSUED TO CONSL YM02716
AOSWALOC EQU   X'04'               SWA LOCATE MODE REQUEST     @G29AN2E
AOMSGTXT EQU   X'08'               MSG TEXT PASSED TO VGM      @G29AN2E
AOWRNREQ EQU   X'10'               DEFAULT WARNING REQUEST     @G29AN2E
*                                                                Y02668
SWE      DS    CL1                 SWITCH E  PROCEDURE SWITCHES
PROC     EQU   128                      BIT-0 PROCLIB BEING USED
GPI      EQU   64                       BIT-1 GET PROCLIB INPUT
PREF     EQU   32                       BIT-2 PROCLIB EOF
PRCV     EQU   16                       BIT-3 PRIME PROC BUFFER
CONCAT   EQU   8                        BIT-4 CONCATINATION IN MERGE
POVRD    EQU   4                        BIT-5 ORIDE PROC DD STMT
POVRX    EQU   2                        BIT-6 ORIDE PROC EXEC STMT
SEQUENCE EQU   1                       BIT-7- USED FOR CHECKING  A27782
*                                             PROPER SEQUENCE OF Y02668
*                                        ADDITIONS TO PROC STEPS Y02668
SWH      DS    CL1
CPSYSFLG EQU   16                       BIT-3 C/R EXEC STMT        AAAA
CPFLGXX  EQU   8                        BIT-4 C/R RESERVED         AAAA
PROCSW   EQU   4                        BIT-5 STMT INVOKES PROC    AAAA
CPSTPFL  EQU   2                        BIT-6 C/R STEP FLUSH       AAAA
SWI      DS    CL1                 GENERAL SWITCHES                AABA
BLKPRC   EQU   128                      BIT-0 BLOCK PROCLIB FLAG   AABA
WAWRNWTO EQU   64                       BIT-1 WARNING WTO ISSUED
IWADDNM  EQU   32                       BIT-2 DDNAME= KEY THIS CARDAABA
BLKMLTER EQU   8                        BIT-4 PROCLIB BLKSIZE      AACA
DSNLIT   EQU   4                        BIT-5 DSN='LITERAL'        AACA
*                                           NON-MULTIPLE OF 80     AACA
SWY2     DS    CL1  ADDITIONAL SCAN SWITCHES                      19874
DUMMYSW  EQU   128  BIT 0 =1 IF DUMMY POSITIONAL KEYWD ON STMT. YM02714
DYNAMSW  EQU   64   BIT 1 =1 IF DYNAM POSITIONAL KEYWORD ON STMT. 19874
KEYNXTSW EQU   32   BIT-2=1 IF FIRST EQUAL ENCOUNTERED. NO MORE  A28668
*                   POSITIONAL PARAMETERS EXPECTED.              A28668
SUBSYSSW EQU   16   BIT 3=1 IF SUBSYS KEYWORD FOUND            @ZA50933
SUBSYORD EQU   8    BIT 4=1 IF SUBSYS SPECIFIED ON O'RIDE DD   @ZA50933
*                   BITS 5-7 RESERVED
*  RESERVED BYTES.
RBYTE1   DS    CL1                 RESERVED.
RBYTE2   DS    CL1                 RESERVED.
RBYTE3   DS    CL1                 RESERVED.
RBYTE4   DS    CL1                 RESERVED.
RBYTE5   DS    CL1                 RESERVED.
*
COMWAEND DS    0C                  END OF COMMON WORK AREA.
COMWALTH EQU   COMWAEND-COMWA      LENGTH OF COMMON WORK AREA.
         MEND
**/
*%COMWAPLS:;
*DCL
* 1 COMWA    BASED(WAPTR) BDY(DWORD),
*
*/*      POINTERS, WORK AND DATA AREAS                               */
*
*   2 CWAL,
*     3 IWAL     FIXED(31),  /* WORK AREA LENGTH               Y02668*/
*   2 CWAID,                 /* '11111111'X                    Y02668*/
*     3 IWAID    FIXED(31),  /* IDENTIFIER WORD                Y02668*/
*   2 CWACONID,              /*                                Y02668*/
*     3 IWACONID FIXED(31),  /* MCS POINTER TO CONSOLE ID      Y02668*/
*   2 QPARMP   PTR(31),      /* Q-MGR PARMLIST POINTER         Y02668*/
*   2 SAVEPTR  PTR(31),      /* CURRENT REG SAVE AREA          Y02668*/
*   2 CTRLWAP  PTR(31),      /* CONTROL RTNE WORK AREA PTR     Y02668*/
*   2 QMGRP    PTR(31),      /* Q MNGR ENTRY POINT             Y02668*/
*   2 IWAINTS0 PTR(31),      /* MASTER REGISTER SAVE AREA PTR  Y02668*/
*   2 TNEXT    PTR(31),      /* NEXT AVAILABLE TTR             Y02668*/
*   2 TNEXT2   PTR(31),      /* SECOND AVAILABLE TTR           Y02668*/
*   2 JACTLPTR PTR(31),      /* PTR TO PSEUDO ACCESS MTHD RTNE Y02668*/
*   2 TEXTBUFP PTR(31),      /* POINTER TO TEXT STRING         Y02668*/
*   2 TBUFCOPY PTR(31),      /* POINTER TO START OF TEXT BUF   Y02668*/
*   2 TERMRTN  PTR(31),      /* ADDR C/I TERMINATION ROUTINE   Y02668*/
*   2 AOWSTMT  PTR(31),      /* ADDRESS OF WRITE BUFFER        Y02668*/
*
*/*  SET OF POINTERS USED BY TRACE ROUTINE                     Y02668*/
*
*   2 BUFADDR  PTR(31),      /* ADDR OF BUFFER USED BY TRACE   Y02668*/
*   2 BUFEND   PTR(31),      /* ADDR OF BUFFER END             Y02668*/
*   2 NEXTPTR  PTR(31),      /* PTR TO NEXT OPEN SLOT IN BUFF  Y02668*/
*
*   2 AOJMRGEP PTR(31),      /* JOURNAL/MERGE ENTRY POINT      Y02668*/
*   2 AOSTAPRM PTR(31),      /* ADDR OF ESTAE USER PARMLIST    Y02668*/
*   2 AOEPWORK CHAR(8) BDY(DWORD), /* WORK AREA FOR STMT # CVD Y02668*/
*   2 IWAIOSA, /* I/O REGISTER SAVE AREA                       Y02668*/
*     3 TRSAVE   PTR(31),    /*                                Y02668*/
*     3 IWASACHN PTR(31),    /* CHAIN FIELD IN SAVE AREA       Y02668*/
*     3 *        CHAR(64),   /*                                Y02668*/
*
*   2 WARPL,                 /*                                Y02668*/
*     3 RPLADDR  CHAR(76),   /* C/I RPL                        Y02668*/
*   2 WANELPTR PTR(31),      /* POINTER TO NEL                 Y02668*/
*   2 WAMSGBUF PTR(31),      /* ADDRESS OF IEFVGM WORK AREA    Y02668*/
*   2 WAWRKLTH FIXED(31),    /* LENGTH OF C/I WORK AREA        Y02668*/
*   2 QPARM    CHAR(36),     /* Q MANAGER PARAMETER AREA       Y02668*/
*   2 WAJOBRBA CHAR(8),      /* RBA OF JOB TEXT STRING         Y02668*/
*   2 WAEXCRBA CHAR(8),      /* RBA OF EXEC TEXT STRING        Y02668*/
*   2 WAJBNAME CHAR(8),      /* JOB NAME FOR JOB               Y02668*/
*   2 WAJOBPFX CHAR(8),      /* PSEUDO JOB PREFIX. UPDATED     Y02668*/
*                            /* DURING PROCESSING OF JOB AND   Y02668*/
*                            /* WRITTEN TO TEXT DATA SET AT    Y02668*/
*                            /* INPUT END OF FILE.             Y02668*/
*   2 WAEXCPFX CHAR(8),      /* PSEUDO EXEC PREFIX, UPDATED    Y02668*/
*                            /* DURING PROCESSING OF A STEP ANDY02668*/
*                            /* WRITTEN TO TEXT DATA SET WHEN  Y02668*/
*                            /* NEXT EXEC STATEMENT IS READ,   Y02668*/
*                            /* OR AT INPUT END OF FILE.       Y02668*/
*
*/*  RESERVED FULLWORDS                                        Y02668*/
*
*   2 AOQLOCEP PTR(31),      /* ALT SWA MGR(LOC) ENTRY PT    @G29AN2F*/
*   2 AOSSIB   PTR(31),      /* ADDR OF SSIB                 @G29AN2E*/
*   2 AOSSOB   PTR(31),      /* ADDR OF SSOB                 @G29AN2E*/
*   2 AOSUBSYS PTR(31),      /* ADDR OF SUBSYS KEY IN        @G29AN2E*/
*                            /* INTERNAL TEXT                @G29AN2E*/
*   2 AOLOCPL  PTR(31),      /* ADDR OF PARM LIST FOR SWA    @G29AN2E*/
*                            /* MANAGER LOCATE MODE          @G29AN2E*/
*
*   2 CWARET,                /*                                Y02668*/
*     3 IWARET   FIXED(16),  /* AREA FOR RETURN CODES          Y02668*/
*   2 CWAMCSCA,              /*                                Y02668*/
*     3 IWAMCSCA FIXED(8),   /* MCS COMMAND AUTHORITY          Y02668*/
*     3 CWALABEL FIXED(8),   /* MCS COMMAND AUTHORITY          Y02668*/
*   2 WASTMTNO FIXED(15),    /* NUMBER OF CURRENT STATEMENT    Y02668*/
*
*/*  RESERVED HALFWORDS                                        Y02668*/
*
*   2 RHALF1   FIXED(16),    /* RESERVED                       Y02668*/
*   2 RHALF2   FIXED(16),    /* RESERVED                       Y02668*/
*   2 RHALF3   FIXED(16),    /* RESERVED                       Y02668*/
*   2 RHALF4   FIXED(16),    /* RESERVED                       Y02668*/
*   2 RHALF5   FIXED(16),    /* RESERVED                       Y02668*/
*
*   2 CWAMSLEN,              /*                                Y02668*/
*     3 IWAMSLEN CHAR(1),    /* LENGTH OF MSG FOR VGM          Y02668*/
*   2 AOSW1,                 /*                                Y02668*/
*     3 AOFSTPOS BIT(1),     /* FIRST POSITIONAL ON JOB CARD   Y02668*/
*     3 AOENDKSW BIT(1),     /* END KEY FOUND IN TEXT STRING   Y02668*/
*     3 AOVFBSW  BIT(1),     /* VFB IS BRANCHING TO VGM        Y02668*/
*     3 AOIOERR  BIT(1),     /* I/O ERROR ON LIST DS           Y02668*/
*     3 AOILGLOP BIT(1),     /* INVALID OPERATOR ON JCL        Y02668*/
*     3 AONOPLIB BIT(1),     /* NULL PROCLIB POINTER IN NEY    Y02668*/
*     3 AOPRTSW  BIT(1),     /* VHEB IS ENTERED ONLY TO WRITE  Y02668*/
*                            /* TO LIST DATA SET               Y02668*/
*     3 AOTXTWRT BIT(1),     /* TEXT TO BE WRITTEN TO TEXT DS. Y02668*/
*
*   2 AOSW4,                 /*                                Y02668*/
*     3 *        BIT(3),     /* UNUSED                       @G29AN2E*/
*     3 AOWRNREQ BIT(1),     /* DEFAULT WARNING REQUEST      @G29AN2E*/
*     3 AOMSGTXT BIT(1),     /* MSG TEXT PASSED TO VGM       @G29AN2E*/
*     3 AOSWALOC BIT(1),     /* SWA LOCATE MODE REQUEST      @G29AN2E*/
*     3 AODFWMSG BIT(1),     /* DFLT WRN MSG ISSUED TO CONSL  YM02716*/
*     3 CWATERM  BIT(1),     /* CONV/INT IS TERMINATING        Y02668*/
*
*   2 SWE,                   /* PROCEEDURE SWITCHES            Y02668*/
*     3 PROCPLS  BIT(1),     /* PROCLIB BEING USED             Y02668*/
*                            /* PROC IS BIT NAME IN BAL        Y02668*/
*     3 GPI      BIT(1),     /* GET PROCLIB INPUT              Y02668*/
*     3 PREF     BIT(1),     /* PROCLIB EOF                    Y02668*/
*     3 PRCV     BIT(1),     /* PRIME PROC BUFFER              Y02668*/
*     3 CONCAT   BIT(1),     /* CONCATINATION IN MERGE         Y02668*/
*     3 POVRD    BIT(1),     /* ORIDE PROC DD STMT             Y02668*/
*     3 POVRX    BIT(1),     /* ORIDE PROC EXEC STMT           Y02668*/
*     3 SEQUENCE BIT(1),     /* USED FOR CHECKING              Y02668*/
*                            /* PROPER SEQUENCE OF             Y02668*/
*                            /* ADDITIONS TO PROC STEPS        Y02668*/
*
*   2 SWH,                   /*                                Y02668*/
*     3 *        BIT(3),     /* UNUSED                         Y02668*/
*     3 CPSYSFLG BIT(1),     /* C/R EXEC STMT                  Y02668*/
*     3 CPFLGXX  BIT(1),     /* C/R RESERVED                   Y02668*/
*     3 PROCSW   BIT(1),     /* STMT INVOKES PROC              Y02668*/
*     3 CPSTPFL  BIT(1),     /* C/R STEP FLUSH                 Y02668*/
*     3 *        BIT(1),     /* UNUSED                         Y02668*/
*
*   2 SWI,                   /* GENERAL SWITCHES               Y02668*/
*     3 BLKPRC   BIT(1),     /* BLOCK PROCLIB FLAG             Y02668*/
*     3 WAWRNWTO BIT(1),     /* WARNING WTO ISSUED             Y02668*/
*     3 IWADDNM  BIT(1),     /* DDNAME= KEY THIS CARD          Y02668*/
*     3 *        BIT(1),     /* UNUSED                         Y02668*/
*     3 BLKMLTER BIT(1),     /* PROCLIB BLKSIZE                Y02668*/
*     3 DSNLIT   BIT(1),     /* DSN='LITERAL'                  Y02668*/
*     3 *        BIT(2),     /* UNUSED                         Y02668*/
*
*   2 SWY2,                  /* ADITIONAL SCAN SWITCHES        Y02668*/
*     3 DUMMYSW  BIT(1),     /* DUMMY POSITIONAL KEYWD SPECD  YM02714*/
*     3 DYNAMSW  BIT(1),     /* =1 IF DYNAM POSITIONAL KEYWORD Y02668*/
*     3 KEYNXTSW BIT(1),     /*  FIRST EQUAL ENCOUNTERED. NO   Y02668*/
*                            /* MORE POSITIONAL PARMS EXPECTED Y02668*/
*     3 SUBSYSSW BIT(1),     /* SUBSYS KEYWORD FOUND         @ZA50933*/
*     3 SUBSYORD BIT(1),     /* SUBSYS SPECIFIED ON O'RIDE   @ZA50933*/
*     3 *        BIT(3),     /* UNUSED                         Y02668*/
*
*/*  RESERVED BYTES                                            Y0268*/
*
*   2 RBYTE1   CHAR(1),      /* RESERVED                       Y02668*/
*   2 RBYTE2   CHAR(1),      /* RESERVED                       Y02668*/
*   2 RBYTE3   CHAR(1),      /*  RESERVED                      Y02668*/
*   2 RBYTE4   CHAR(1),      /* RESERVED                       Y02668*/
*   2 RBYTE5   CHAR(1);      /* RESERVED                       Y02668*/
*
*/*************************************************************Y02668*/
*/*                                                            Y02668*/
*/* END OF COMMON WORK AREA - USE THE LENGTH FUNCTION  OF      Y02668*/
*/* THE NAME - COMWA - TO GET COMMON AREA LENGTH               Y02668*/
*/*                                                            Y02668*/
*/*************************************************************Y02668*/
