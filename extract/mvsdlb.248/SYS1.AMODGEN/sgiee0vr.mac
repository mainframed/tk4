         MACRO
         SGIEE0VR  &XXX                                          Y01012
         TITLE 'IEE3203D, VARY KEYWORD SCAN ROUTINE'              M4957
IEE3203D CSECT
***********************************************************************
*
* MODULE NAME       = IEE3203D (SGIEE0VR)
*    CSECT NAME    = IEE3203D
*
* LOAD MODULE NAME  = IGC0003D
*
* DESCRIPTIVE NAME  = VARY KEYWORD SCAN MODULE
*
* COPYRIGHT         = MISSING
*
* STATUS            = OS/VS/2 RELEASE 2
*
* FUNCTION          = THIS MODULE SCANS THE VARY PRIMARY KEYWORDS
*                     NET,CH,CPU,STOR,PATH AND GIVES CONTROL TO THE
*                     ATCAM PROCESSOR FOR NET OR IEE0803D FOR THE
*                     OTHER KEYWORDS.  IF THERE IS NO MATCH ON THE
*                     PRIMARY KEYWORDS THEN THIS ROUTINE SCANS FOR THE
*                     SECONDARY KEYWORDS IN THE COMMAND FIELD AND THEN
*                     COMPARES THIS KEYWORD TO EACH ENTRY IN A TABLE
*                     OF VALID VARY KEYWORDS.  A SECONDARY KEYWORD IS
*                     VALID ACCORDING TO THE OPTIONS SPECIFIED AT SYSGS
*                     TIME. FOR THIS SYSTEM, THESE KEYWORDS ARE VALID-
*                        ONLINE     VALID FOR ALL SYSTEM
*                        OFFLINE    VALID FOR ALL SYSTEMS
*                        CONSOLE    VALID FOR ALL SYSTEMS
*                        HARDCPY    VALID FOR ALL SYSTEMS
*                        MSTCONS    VALID FOR ALL SYSTEMS
*                        ONTP/OFFTP VALID FOR TCAM IN ALL SYSTEMS
*
* OPERATION         = IEE3203D FIRST SCANS THE VARY COMMAND OPERAND FOR
*                     THE PRIMARY KEYWORD WHICH IS DEFINED AS THE WORD
*                     FOLLOWING THE VERB 'VARY'.
*                     THE PRIMARY KEYWORDS THAT ARE SUPPORTED ARE:
*                        V NET   FOR ATCAM
*                        V PATH  FOR MP
*                        V CH    FOR MP
*                        V CPU   FOR MP
*                        V STOR  FOR MP
*                     IF NET IS FOUND THEN THIS ROUTINE WILL CONTROL
*                     TO THE ATCAM PROCESSOR TO SERVICE THE COMMAND.
*                     IF THE OTHERS ARE FOUND, THEN THIS ROUTINE WILL
*                     CHANGE THE VERB CODE IN THE XAN FOR THEM AS
*                     FOLLOWS:
*                        V PATH = X'50'
*                        V CH   = X'58'
*                        V CPU  = X'54'
*                        V STOR = X'5C'
*                     AND CONTROL IS PASSED TO IEE0803D TO CREATE A
*                     CSCB FOR THEM SO THAT THEY CAN EVENTUALLY BE
*                     ATTACHED.
*                     IF NONE OF THE ABOVE, THEN THIS ROUTINE SCANS FOR
*                     THE SECONDARY KEYWORD WHICH IS DEFINED AS THE
*                     WORD FOLLOWING THE FIRST COMMA NOT EMBEDDED IN
*                     PARENS.  R9 IS USED TO INDEX THROUGH THE OPERAND
*                     TO FIND THE ',KEYWORD'. COMMANDS OF THE FOLLOWING
*                     FORMS ARE ACCEPTABLE:
*                        V UNIT,KEYWORD
*                        V UNIT(MULTIPLE UNITS),KEYWORD
*                        V (MULTIPLE UNITS),KEYWORD
*                        V (MULTIPLE UNITS)UNIT,KEYWORD
*                     (ANY NUMBER OF BALANCED INNER/OUTER PARENS MAY BE
*                     SPECIFIED)
*                     WHEN THE COMMA PRECEDING THE KEYWORD IS FOUND, A
*                     POINTER TO THE START OF THE KEYWORD IS SAVED AND
*                     THE SCAN CONTINUES UNTIL A COMMA, BLANK OR THE
*                     END OF BUFFER IS FOUND.  WHEN THE COMPLETE
*                     KEYWORD IS FOUND, IT IS COMPARED TO EACH ENTRY
*                     IN THE VALID KEYWORD TABLE UNTIL A MATCH OR THE
*                     END OF THE TABLE IS FOUND. EACH ENTRY CONSISTS
*                     OF AN EIGHT (8) BYTE KEYWORD FOLLOWED BY THE
*                     ADDRESS OF THE RESPECTIVE PROCESSOR.
*                     THE TABLE SCAN IS DONE BY ESTABLISHING ADDRESS-
*                     ABILITY TO THE TABLE AND THEN INCREMENTING THE
*                     BASE REGISTER BY THE LENGTH OF AN ENTRY AS EACH
*                     NON-MATCH IS FOUND.  THIS METHOD INSURES FUTURE
*                     FLEXIBILITY BECAUSE NO MATTER HOW MANY NEW
*                     KEYWORDS ARE ADDED TO THE TABLE, THE LABELS
*                     'KEYTAB' AND 'BRANCH' WILL ALWAYS POINT TO THE
*                     CURRENT KEYWORD AND ITS EXITING POINT.  WHEN A
*                     MATCH IS FOUND, EXIT IS MADE BY BRANCHING TO THE
*                     MODULE INDICATED IN THE TABLE.  FOR AN ERROR
*                     EXIT IS MADE TO IEE0503D.
*
* NOTES
*    DEPENDENCIES   = KEYWORDS SUCH AS ONLINE/OFFLINE/CONSOLE/HARDCPY/
*                     MSTCONS/ONTP/OFFTP ARE STANDARD.
*                     THE NET (ATCAM), AND CH,CPU,STOR,AND PATH
*                     PRIMATY KEYWORDS ARE CONSIDERED STANDARD ALSO.
*    CHARACTER/CODE DEPENDENCIES
*                  = THIS MODULE CAN BE ASSEMBLED WITH ANY NEW
*                    CHARACTER/CODE SET.
*
* RESTRICTIONS     = ON ENTRY, REG2 PTR TO THE PARAM LIST (XSA)
* REGISTER CONVENTIONS
*                   = REGISTERS ARE DEFINED AT LABEL: DEFREG
*    PATCH LABEL   = N/A
*
* MODULE TYPE      = CSECT
*    PROCESSOR     = ASSEMBLER
*    MODULE SIZE   = VS/2 = '254 HEX '
*    ATTRIBUTES     = REENTRANT,REUSABLE,REFRESHABLE,PAGED LPA,
*                     ZERO PSW PROTECT KEY,SUPERVISOR MODE
*
* ENTRY POINTS      = IEE3203D FROM COMMAND ROUTER RTN IEE0403D
*   PURPOSE         = VARY COMMAND ROUTER
*   LINKAGE         = BRANCH
*   INPUT           = XSA PTR IN REG 2
*                     THE XSA CONTAINS:
*                        PTR TO PARMLIST IN XAR
*                        PTR TO LIST AND VERB CODE IN XAL
*                        VERB = VARY IN XAV
*                        UCM ID IN XAU
*   REGISTERS SAVED = NONE
*   REGISTER USAGE  = R2  = XSA BASE
*                     R4  = COUNTER FOR KEYWORD CHARACTER
*                     R6  = PTR TO FIRST CHARACTER OF KEYWORD
*                     R7  = END OF BUFFER REG
*                     R9  = PTR TO CURRENT CHARACTER OF OPERAND FIELD
*                     R11 = BASE FOR VALID DKYWORD TABLE
*                     R12 = ADDRESSABILITY
*   REGISTERS RESTORED
*                   = NONE
*
* EXITS - NORMAL    =  IN THIS SYSTEM IEE3203D EXITS TO:
*   CONDITIONS           IEE0803D FOR KEYWORDS - ONLINE, CONSOLE
*                                                AND OFFLINE
*                        IEE4703D FOR KEYWORDS - HARDCPY
*                        ISTCFF3D FOR KEYWORDS(PRIMARY) - NET
*                        IEE0803D FOR KEYWORDS(PRIMARY) - CH,CPU,
*                                     PATH, STOR
*                        IEE4303D FOR KEYWORDS - MSTCONS
*                        IED1303D FOR KEYWORDS - ONTP,OFFTP
*   OUTPUT          = SAME AS INPUT TO THIS MODULE
*   RETURN CODES    = NONE
*
* EXITS - ERROR     = EXIT TO MESSAGE MODULE IEE0503D
*   CONDITIONS      = WHEN AN ERROR IS DETECTED
*   OUTPUT          = REG 2 PTS TO THE XSA WHICH CONTAINS:
*                     ERROR MSG CODE IN THE XAE
*                     VERB IN THE XAV
*                     UCM ID IN THE XAU
*   RETURN CODES    = NONE
*
* EXTERNAL REFERENCES
*   ROUTINES        = ISTCFF3D  FOR NET IN ATCAM
*                   = IEE0803D  FOR CH,CPU,STOR,PATH IN MP
*                     IEE0803D  FOR OFFLINE/ONLINE/CONSOLE
*                     IEE4703D  FOR HARDCPY
*                     IEE4303D  FOR MSTCONS
*                     IED1303D  FOR ONTP/OFFTP
*                     IEE0503D  FOR ERROR MESSAGES
*   DATA AREAS      = SEE EXITS - OUTPUT DATA
*
* CONTROL BLOCKS    = EXTENDED SAVE AREA (XSA)
*                        FOR FORMAT SEE - INPUT DATA AND
*                        OUTPUT DATA SECTIONS
*
* TABLES            = NONE
*
* MACROS            = NONE
*
* MAPPING MACROS    = IEEXSA
*    SERIALIZATION = NONE REQUIRED IN THIS MODULE
*
* CHANGE LEVEL      = Y02669,Y02674
*
* CHANGE ACTIVITY  = N/A
*
* MESSAGES          = 'IEE311I VARY PARAMETER MISSING'
*                        WHEN THE POINTER TO THE COMMAND
*                        PARAM LIST IN XAL IS 0
*                     'IEE307I VARY DELIMITER ERROR'
*                        WHEN NO COMMA AFTER PARENS, UNBALANCED
*                        PARENS, OR NO COMMA BEFORE KEYWORD
*                     'IEE309I VARY UNIDENTIFIABLE KEYWORD'
*                        WHEN THE KEYWORD DOES NOT MATCH ANY
*                        ENTRY IN THE TABLE
*                     'IEE908I VARY CMD LENGTH EXCEEDS MAX.'
*                        WHEN A V ONLINE/OFFLINE/OR CONSOLE COMMANDS'S
*                        PARAM LIST IS GREATER THAN 124 CHARACTERS.
*
* ABEND CODES       = NONE
*
* PACKAGING         = IEE3203D (SGIEE0VR) WILL BE PART OR LOAD MODULE
*                        = IGC0003D
*                     THIS LOAD MODULE ALIASES ARE
*                        = NONE
*                     THIS LOAD MODULE ENTRY POINTS ARE
*                        = IGC0003D
*                     MODULE WILL RESIDE IN: LPALIB
*
* SYSGEN            = SUPPLIED BY SECTIONS:
*                        LOAD MODULE NAME
*                        PACKAGING
*
* SYSTEM LIBRARIES  = NONE
*
***********************************************************************
          EJECT
*  REGISTER ASSIGNMENTS
*
DEFREG   EQU   *                                                 Y02669
R1        EQU   1
R2        EQU   2             XSA BASE
R3        EQU   3
R4        EQU   4             COUNTER FOR KEYWORD CHARC.
R5        EQU   5
R6        EQU   6             PTR TO FIRST CHAR OF KEYWORD
R7       EQU   7                   POINTER TO END OF BUFFER
R8       EQU   8                   WORK REG
R9       EQU   9                   PTR TO CURRENT CHAR OF OPERAND FIELD
R10      EQU   10
R11      EQU   11                  BASE FOR VALID KEYWORD TABLE
R12      EQU   12                  PGM BASE
R13      EQU   13
R14      EQU   14
R15      EQU   15
*    EQUATES
C0       EQU   0
C1       EQU   1
C2       EQU   2
C3       EQU   3
C4       EQU   4
C6       EQU   6                                                 Y02669
C7       EQU   7                                                 Y01029
C8       EQU   8
D124     EQU   124
ERRX39   EQU   X'39'                                             Y02669
LENG     EQU   12           LENGTH OF KEYWORD-MODULE CODE ENTRY  Y01029
COMMA    EQU   C','                COMMA CHAR
LFTPAREN EQU   C'('                LEFT PAREN CHAR
RGTPAREN EQU   C')'                RIGHT PAREN CHAR
BLANK    EQU   C' '                BLANK CHAR
PARENSW  EQU   3                   SWITCH FOR BALANCED PARENS
ERR7     EQU   07                  ERR CODE   DELIM ERROR
ERR9     EQU   9                   ERR CODE   UNIDENT KEYWORD
ERR11    EQU   11                  ERR CODE   PARAM MISSING
CHCODE   EQU   X'58'                                             Y02669
CPUCODE  EQU   X'54'                                             Y02669
STORCODE EQU   X'5C'                                             Y02669
PATHCODE EQU   X'50'                                             Y02669
***********************************************************************
         SPACE 10
***********************************************************************
* FUNCTIONS OF THIS ROUTINE-                                          *
*     1. ESTABLISHES PROGRAM AND XSA ADDRESSABILITY                   *
*     2. INITIALIZES A BALANCED PAREN SWITCH AND A CHARACTER COUNTER  *
*     3. CHECKS XAL FOR 0. (IF 0, BRANCHES TO ERROR ROUTINE.)         *
*     4. COMPUTES THE END OF BUFFER                                   *
***********************************************************************
         BALR  R12,C0              ESTABLISH PGM ADDRESSABILITY
         USING *,R12
         MODID BR=YES                                            Y01886
         USING XSA,R2              BASE FOR EXTENDED SAVE AREA
         L     R9,XAL              REG 9 POINTS TO OPERAND FIELD OF    *
                                   VARY COMMAND
         LA    R9,C0(R9)           ZERO OUT HIGH ORDER BYTE
         LTR   R9,R9               IS PARAMETER PTR 0 (NO KEYWORD)
         LA    R5,ERR11            SET ERR CODE FOR MSG 'PARAM MISSING'
         BZ    ERREXIT             YES,PTR IS 0, GO TO ERROR ROUTINE
         L     R7,XAR              LOAD POINTER TO THE BUFFER THAT
         LA    R7,C0(R7)           CONTAINS THE VARY COMMAND
         AH    R7,C0(R7)           COMPUTE END OF BUFFER
PRIMKEY  EQU   *                                                 Y02669
         CLC   C0(C3,R9),CNET        IS IT 'NET'FOR ATCAM        Y02674
         BE    ATCAMEXT              YES, EXIT TO ATCAM MOD.     Y02674
         CLC   C0(C2,R9),CCH         S IT CHANNEL FOR MP         Y02669
         BE    CHANNEL               YES,CHANGE CODE AND EXIT    Y02669
         CLC   C0(C3,R9),CCPU        IS IT CPU FOR MP            Y02669
         BE    CPU                   YES, CHANGE CODE AND EXIT   Y02669
         CLC   C0(C4,R9),CSTOR       IS IT STOR FOR MP           Y02669
         BE    STORAGE               YES, CHANGE CODE AND EXIT   Y02669
         CLC   C0(C4,R9),CPATH       IS IT PATH FOR MP           Y02669
         BE    PATH                  YES, CHANGE CODE AND EXIT   Y02669
* NO PRIMARY KEYWORD, SET UP AND CHECK THE SECONDARY KEYWORDS    Y02669
*                                                                Y02669
         SR    PARENSW,PARENSW     INITIALIZE PAREN SWITCH TO 0
         SR    R4,R4               INITIALIZE CHARACTER COUNTER TO 0
         SPACE 10
***********************************************************************
* THE COMMAND OPERAND IS SCANNED FOR A LEFT PAREN OR A COMMA. IF A    *
* LEFT PAREN IS FOUND, THE OPERAND IS SCANNED FOR BALANCED PARENS AND *
* THEN THE KEYWORD. IF THERE IS NO LEFT PAREN, AND A COMMA IS FOUND,  *
* THE KEYWORD SHOULD FOLLOW.                                          *
***********************************************************************
PARENSCN EQU   *
CHECK    CLI   C0(R9),LFTPAREN     IS FIRST CHAR A LEFT PAREN
         BE    INCSWTCH            YES,GO TO CHECK FOR BAL PARENS
         CLI   C0(R9),COMMA        IS CURRENT CHAR A COMMA
         BE    SAVEPTR             YES, GO TO SCAN KEYWORD
         LA    R9,C1(R9)           INCREMENT PTR TO NEXT CHAR
         CR    R9,R7               HAS END OF BUFFER BEEN REACHED
         BE    DELIMERR            YES,GO TO ERR RTN, COMMA MISSING
         B     CHECK               GO BACK TO CHECK NEXT CHAR
***********************************************************************
* THIS ROUTINE SCANS THE PARAMETER LIST FOR BALANCED PARENS. WHEN A   *
* LEFT PAREN IS FOUND, PARENSW IS INCREMENTED BY 1, FOR A RIGHT PAREN *
* IT IS DECREMENTED BY 1. WHEN PARENSW IS 0, BALANCED PARENS HAVE BEEN*
* FOUND, AND A COMMA AND THE KEYWORD SHOULD FOLLOW.                   *
***********************************************************************
INCSWTCH LA    PARENSW,C1(PARENSW) INCREMENT BY 1 FOR LEFT PAREN
CHARSCAN LA    R9,C1(R9)           INCREMENT PTR TO NEXT CHAR
         CLI   C0(R9),LFTPAREN     IS CURRENT CHAR A LEFT PAREN
         BE    INCSWTCH            YES,CHAR IS'(',SET SWTCH,CHECK AGAIN
         CLI   C0(R9),RGTPAREN     IS CURRENT CHAR A RIGHT PAREN
         BNE   CHKSWTCH            NO,CHECK PAREN SWITCH FOR 0
DECSWTCH BCTR  PARENSW,C0          DECREMENT BY 1 FOR RIGHT PAREN
CHKSWTCH LTR   PARENSW,PARENSW     IS SWITCH 0 (BALANCED PARENS)
         BZ    KEYSCAN             YES,GO TO SCAN KEYWORD AFTER PARENS
         CR    R9,R7               NO, CHECK FOR END OF BUFFER REACHED
         BNE   CHARSCAN            NO,GO BACK TO CHECK NEXT CHAR
DELIMERR LA    R5,ERR7             DELIM ERR UNBAL PARENS OR NO COMMA
         B     ERREXIT             GO TO ERROR RTN TO SET UP XCTL
         SPACE 10
***********************************************************************
* THIS ROUTINE CHECKS FOR A COMMA PRECEDING A KEYWORD AND IF THE COMMA*
* IS PRESENT, SCANS THE KEYWORD. A POINTER TO THE FIRST CHAR OF THE   *
* KEYWORD IS SAVED. (A KEYWORD IS DEFINED AS THE FIRST WORD FOLLOWING *
* A COMMA NOT EMBEDDED IN PARENS.) THE KEYWORD IS COMPLETE WHEN A     *
* COMMA, A BLANK, OR END OF BUFFER IS FOUND.                          *
KEYSCAN  EQU   *
         LA    R9,C1(R9)           INCREMENT PTR TO NEXT CHAR
         CLI   C0(R9),COMMA        IS CURRENT CHAR A COMMA
         BNE   DELIMERR            NO.COMMA MUST PRECEDE KEYWORD
SAVEPTR  LA    R6,C1(R9)           SAVE PTR TO 1ST CHAR OF KEYWORD
SCAN1    LA    R9,C1(R9)           INCREMENT PTR TO CURR CHAR OF KEYWD
         CLI   C0(R9),COMMA        IS CURRENT CHAR A COMMA
         BE    TABSCAN             YES,COMMA MEANS END OF KEYWD FOUND
         CLI   C0(R9),BLANK        NO,CHECK CURRENT CHAR FOR BLANK
         BE    TABSCAN             YES,BLANK MEANS END OF KEYWD FOUND
         CR    R9,R7               NO,CHECK FOR END OF BUFFER
         BE    TABSCAN             GO TO SCAN TABLE
         LA    R4,C1(R4)           INCREMENT KEYWORD CHAR COUNTER
         B     SCAN1               GO BACK TO CHECK NEXT CHAR OF KEYWD
         SPACE 10
***********************************************************************
* THIS ROUTINE COMPARES THE KEYWORD WITH EACH ENTRY IN A TABLE OF     *
* VALID VARY KEYWORDS UNTIL A MATCH, OR THE END OF THE TABLE IS FOUND.*
* WHEN A MATCH IS FOUND, THE ADDRESS FOLLOWING THE KEYWORD IN   Y01029*
* THE TABLE IS USED TO EXIT BY.                                 Y01029*
***********************************************************************
TABSCAN  EQU   *
         LA    R11,KEYTAB          PUT ADDRESS OF KEYWORD TABLE IN A
         USING KEYTAB,R11          REG AND ESTABLISH ADDRESSABILITY
         LA    R8,TABEND           PUT ADDRESS OF END OF TABLE IN A REG
         BCTR  R4,C0               DECREMENT CHAR COUNTER FOR EX INSTR
SCAN2    EQU   *
         CLR   R11,R8              HAS END OF TABLE BEEN REACHED
         LA    R5,ERR9             PRESET CODE FOR UNIDENT KEYWORD MSG
         BH    ERREXIT             YES, THE VERB IS INVALID
         EX    R4,DOCLC            INSERT KEYWORD LENGTH IN CLC INSTR
         BE    XMOD                IF KEYWDS MATCH,GOTO SET UP EXIT MOD
INCPTR   LA    R11,LENG(R11)       IF NOT, INCREMENT PTR TO NEXT KEYWD
         B     SCAN2         GO TO CHECK NEXT ENTRY
XMOD     LA    R8,C1(R11)          COMPUTE A POINTER TO THE FIRST
         AR    R4,R8               CHARACTER AFTER THE KEYWORD
         CLI   C7(R11),BLANK           IF THE EIGHTH CHARACTER   Y01029
*                      OF THE TABLE ENTRY IS NOT A BLANK, THE    Y01029
*                      KEYWORD IS EIGHT CHARACTERS.  IT IS A     Y01029
*                      MATCH AND EXIT SHOULD BE MADE TO THE      Y01029
*                      MODULE INDICATED IN THAT TABLE ENTRY      Y01029
         BNE   EXIT                    BRANCH TO APPROPRIATE RT  Y01029
         CLI   C0(R4),BLANK        IS THE CHARACTER BLANK
         BNE   INCPTR              IF NOT, A FALSE MATCH HAS BEEN FOUND
*                                  EG. KEYWORD 'ABC' WOULD MATCH TABLE
*                                  ENTRY 'ABCD' BECAUSE ONLY THE FIRST
*                                  3 CHARACTERS WERE COMPARED.
EXIT     EQU   *                                                 Y01029
*
*  THIS CODE WAS ADDED FOR THE ONLINE/OFFLINE/CONSOLE KEYWORDS   Y02669
*  BECAUSE SINCE THEY ARE ATTACHED TASKS, A CSCB IS CREATED FOR  Y02669
*  THEM WHOSE COMMAND BUFFER LENGTH IS ONLY 124 BYTES.           Y02669
*  IF THE COMMAND WAS ISSUED FROM A CONSOLE WHOSE CHARACTER SPAN Y02669
*  IS GREATED THAN 124 CHARACTERS, THE COMMAND WILL BE TRUNCATED Y02669
*  AND SUBSEQUENTLY, VARY PROCESSORS WILL THINK IT IS INVALID.   Y02669
*  TO PREVENT THIS EARLY, A SCAN IS DONE OF THE PARM LIST OF THE Y02669
*  BUFFER AND IF IT EXCEEDS 124 CHARACTERS, MSG 'IEE908I VARY    Y02669
*  CMD LENGTH EXCEEDS MAX.' WILL BE ISSUED IMMEDIATELY AND THE   Y02669
*  COMMAND WILL NOT BE PROCESSED.                                Y02669
*                                                                Y02669
         LR    R3,R11     SAVE REG11 PTR SINCE IT WILL BE USED   Y02669
         CLC   C0(C6,R11),ONL     IS IT AN ONLINE COMMAND        Y02669
         BE    BUFFCHK            YES, GO CHECK BUFFER LENGTH    Y02669
         CLC   C0(C7,R11),OFL     IS IT AN OFFLINE COMMAND       Y02669
         BE    BUFFCHK            YES, GO CHECK BUFFER LENGTH    Y02669
         CLC   C0(C7,R11),CONS    IS IT A CONSOLE COMMAND        Y02669
         BE    BUFFCHK            YES, GO CHECK BUFFER LENTH     Y02669
*  IT IS NOT THE ABOVE, THEREFORE CAN EXIT NORMALLY              Y02669
*                                                                Y02669
EXITOK   EQU   *                                                 Y02669
         LR    R11,R3             RESTORE REG11                  Y01029
         L     R15,C8(R11)             GET ADDRESS OF EXIT RT    Y01029
         BR    R15                     EXIT TO APPROPRIATE RT    Y01029
         SPACE 10
BUFFCHK  EQU   *                                                 Y02669
         L     R9,XAL             PTR TO LIST POSITION OF PARAM  Y02669
         LA    R9,C0(R9)                                         Y02669
         LA    R10,C1             INCREMENTER                    Y02669
         L     R11,XAR            PTS TO COMMAND BUFFER          Y02669
         LA    R11,C0(R11)        ZERO HIGH ORDER BYTE           Y02669
         AH    R11,C0(R11)        COMPUTE END OF BUFFER          Y02669
         BCTR  R11,C0             MINUS ONE                      Y02669
EOBLOOP  EQU   *                                                 Y02669
         CLI   C0(R9),BLANK  IS THE NEXT CHAR AN ENDING BLANK    Y02669
         BE    EXITCHK            YES GO COMPUT LENTH OF CMD     Y02669
         BXLE  R9,R10,EOBLOOP     NO GO CHECK NEXT CHARACTER     Y02669
*                                                                Y02669
EXITCHK  EQU   *                                                 Y02669
         L     R10,XAL            POINTER TO BEGINNING           Y02669
         LA    R10,C0(R10)                                       Y02669
         SR    R9,R10             SIZE OF CMD IN REG9            Y02669
         LA    R10,D124           MAX SIZE                       Y02669
         CR    R9,R10             IS IT LONGER OF NOT?           Y02669
         BH    LONGERR            YEP, ERROR                     Y02669
         B     EXITOK             NO IT IS SAFE, GO PROCESS CMD  Y02669
*                                                                Y02669
LONGERR  EQU   *                                                 Y02669
         LA    R5,ERRX39          ERROR CODE                     Y02669
         B     ERREXIT            GO TO 0503D TO ISSUED MSG      Y02669
*                                                                Y02669
         SPACE 10
***********************************************************************
* EXIT ROUTINE-                                                       *
* THE CORRECT ERROR CODE IS PUT IN XAE IN THE XSA AND CONTROL   Y01029*
* IS PASSED TO IEE0503D                                         Y01029*
***********************************************************************
ERREXIT  EQU   *
         STC   R5,XAE              PUT ERROR CODE IN XAE
         L     R15,VCON05              GET ADDRESS OF IEE0503D   Y01029
         BR    R15                     BRANCH TO IEE0503D        Y01029
*
ATCAMEXT EQU   *                                                 Y02674
         L     R15,VATCAM         GET VCON ATCAM MOD             Y02674
         BR    R15                EXIT TO IT                     Y02674
CHANNEL  EQU   *                                                 Y02669
         MVI   XAN,CHCODE         CHANGE THE COMMAND CODE        Y02669
         B     EXIT08             GO TO 0803D EXIT               Y02669
CPU      EQU   *                                                 Y02669
        MVI   XAN,CPUCODE        CHANGE THE COMMAND CODE         Y02669
         B     EXIT08             GO TO 0803D EXIT               Y02669
STORAGE  EQU   *                                                 Y02669
         MVI   XAN,STORCODE       CHANGE THE COMMAND CODE        Y02669
         B     EXIT08             GO TO 0803D EXIT               Y02669
PATH     EQU   *                                                 Y02669
         MVI   XAN,PATHCODE       CHANGE THE COMMAND CODE        Y02669
EXIT08   EQU   *                                                 Y02669
         L     R15,VCON08         GET ADDRESS OF 0803D           Y02669
        BR    R15                EXIT TO IEE0803D                Y02669
*                                                                Y02669
         SPACE 10
DOCLC    CLC   C0(C0,R11),C0(R6)   DOES CURRENT TABLE ENTRY EQU KEYWD
         DS    0F                  ALIGN ON FULL WORD BOUNDARY
VCON05   DC    V(IEE0503D)         ERROR MSG MODULE              Y01029
VATCAM   DC    V(ISTCFF3D)                                       Y02674
VCON08   DC   V(IEE0803D)                                        Y02669
ONL      DC    CL6'ONLINE'
OFL      DC    CL7'OFFLINE'
CONS     DC    CL7'CONSOLE'
***********************************************************************
KEYTAB   EQU   *                   START OF VALID KEYWORD TABLE
*                                  ****KEYWORD FOLLOWED BY ITS****
*                                  ****    MODULE ADDR    ****   Y01029
         DC    CL8'ONLINE'                                       Y02669
BRANCH   EQU   *                                                 Y01029
         DC    V(IEE0803D)                 ..                    Y02669
         DC    CL8'OFFLINE'                ..                    Y02669
         DC    V(IEE0803D)                 ..                    Y02669
         DC    CL8'CONSOLE'                ..                    Y02669
         DC    V(IEE0803D)                 ..                    Y02669
         DC    CL8'HARDCPY'                ..                    Y01029
         DC    V(IEE4703D)                 ..                    Y01029
         DC    CL8'MSTCONS'                ..                    Y01029
         DC    V(IEE4303D)                 ..                    Y01029
         DC    CL8'ONTP'                   ..                    Y01029
         DC    V(IED1303D)                 ..                    Y01029
         DC    CL8'OFFTP'                  ..                    Y01029
         DC    V(IED1303D)                 ..                    Y01029
TABEND   EQU   *-LENG
*
CNET     DC    C'NET'                                            Y02674
CCH      DC    C'CH'                                             Y02669
CCPU     DC    C'CPU'                                            Y02669
CSTOR    DC    C'STOR'                                           Y02669
CPATH    DC    C'PATH'                                           Y02669
***********************************************************************
SETXSA   DSECT
         IEEXSA
         MEND
