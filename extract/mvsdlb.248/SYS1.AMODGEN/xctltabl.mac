         MACRO
&LABEL   XCTLTABL &ID=,&TAG=,&SVC=019,&LENGTH=1024,&PATCH=,&BRT=NO
         GBLC  &IECXCT                  LABEL FOR PATCH ARGUMENT Y02080
.*
.**********************************************************************
.*
.* MODULE NAME = XCTLTABL (VS2-2)
.*
.* DESCRIPTIVE NAME = O/C/E/D CSECT ADDRESSING MACRO
.*
.* COPYRIGHT = NONE.
.*
.* STATUS = CHANGE LEVEL 000
.*
.* FUNCTION = O/C/E/D MACRO USED TO PROVIDE ADDRESSABILITY TO EXTERNAL
.*            CSECTS VIA VCONS. THIS WILL ALLOW MANY CSECTS TO BE
.*            COMBINED INTO ONE LARGE LOAD MODULE. IN THIS WAY, CSECTS
.*            MAY BRANCH TO EACH OTHER INSTEAD OF USING THE XCTL
.*            FACILITY, THUS INCREASING PERFORMANCE. THIS MACRO ALSO
.*            PROVIDES A 5% PATCH AREA FOR CSECT MAINTENANCE.
.*            THIS MACRO ALSO ALLOWS FOR PAGE BOUNDRY CONSIDERATIONS.
.*            A STATUS/RECOGNITION AREA IS PROVIDED AT THE END OF A
.*            CSECT WHICH UTILIZES THIS MACRO.
.*
.* NOTES = THIS MACRO IS AN INTERNAL MACRO USED IN THE FOLLOWING
.*         O/C/E/D FUNCTIONS:
.*
.*             OPEN
.*             OPEN TYPE=J
.*             CLOSE
.*             CLOSE TYPE=T
.*             EOV
.*             FEOV
.*             RDJFCB
.*             DEBCHK
.*             SCRATCH
.*             RENAME
.*             ALLOCATE
.*             LSPACE
.*             OBTAIN
.*             EXTEND
.*             PARTIAL RELEASE
.*
.*       IF A CSECT, REFERENCED BY A CALL OF THIS MACRO, EXISTS
.*       WITHIN THE SAME LOAD MODULE, A VCON WILL BE GENERATED
.*       TO POINT TO THE CSECT. IF THE CSECT EXISTS IN A DIFFERENT
.*       LOAD MODULE, A VCON OF ZERO WILL BE GENERATED.
.*
.*      DEPENDENCIES = THIS MACRO IS DESIGNED TO BE USED IN
.*                     CONJUNCTION WITH THE IECRES MACRO, WTG TABLE
.*                     DEFINED IN THE IECDSECS MACRO, MODULE
.*                     IFG019RA, AND IN GENERAL WITH ALL O/C/E/D
.*                     ROUTINES.
.*
.*                     THIS MACRO IS DESIGNED TO BE USED IN A
.*                     VIRTUAL ADDRESSING SYSTEM WITH RELOCATE
.*                     CAPABILITY. THIS FEATURE MAKES THE XCTLTABL
.*                     GENERATED CODE, REENTRANT.
.*
.*      RESTRICTIONS = THE ABOVE DESCRIPTION IS APPLICABLE ONLY IF
.*                     BRT=YES OR BRT=SHORT IN VS2 O/C/E/D CSECTS.
.*                     BRT=NO IS NOT USED IN O/C/E/D BUT IS
.*                     PROVIDED FOR COMPATIBILITY.
.*
.*      REGISTER CONVENTIONS = REFERENCE THE SECTION OF CONSTANTS.
.*
.* PATCH LABEL = LBLNNNNC (LBL4 - SEE BELOW)
.*
.* MODULE TYPE = MACRO
.*
.*      PROCESSOR = ASSEMBLER LANGUAGE
.*
.*      MODULE SIZE = 16 BYTES/ID PARM + PATCH AREA + 24 BYTES STATUS
.*
.*      ATTRIBUTES = REENTRANT, REUSABLE, NONTRANSIENT
.*
.* ENTRY POINT = LBLNNNNA (LBL1 - UNLESS SPECIFIED)
.*
.*      PURPOSE = THIS MACRO WILL BUILD
.*
.*                1. VCON ENTRY POINT TABLE (TWO TYPES)
.*                2. PATCH AREA FOR MAINTENANCE AND BOUNDRY ALLIGNMENT
.*                3. CSECT STATUS AREA FOR EASY IDENTIFICATION
.*
.*                THIS MACRO IS CALLED BY O/C/E/D CSECTS AT ASSEMBLY
.*                TIME TO EXPAND THE LAST PART OF THE EXECUTABLE CSECT
.*                LOAD MODULE OBJECT CODE.
.*
.*      LINKAGE =
.*
.*            LABEL XCTLTABL ID=LIST,SVC=CODE,LENGTH=NK,PATCH=N,BRT=YES
.*
.*      INPUT =
.*
.*            BRT=NO IS NOT TO BE SPECIFIED AND IS NOT DESCRIBED HERE.
.*
.*            BRT=YES TO BE SPECIFIED FOR CSECTS UNDER 4K.
.*
.*            BRT=SHORT TO BE SPECIFIED FOR CSECTS OVER 4K OR FOR
.*                      MULTIPLE CALLS OF THIS MACRO. LAST CALL
.*                      OF THIS MACRO SHOULD SPECIFY BRT=YES.
.*
.*            LABEL SPECIFIED AS AN ACCEPTABLE ASSEMBLER LABEL, THE
.*                  FIRST THREE CHARACTERS ARE USED TO GENERATE OTHER
.*                  LABELS. IF NOT SPECIFIED, IHBNNNNA IS USED WHERE
.*                  NNNN IS GENERATED FROM SYSNDX.
.*
.*            ID=LIST WHERE LIST IS OF THE FORM:
.*
.*                    (LABEL1,CSECT1,LABEL2,CSECT2,...)
.*
.*                    SEE DESCRIPTION BELOW.
.*
.*            SVC=CODE WHERE CODE IS: 019,020,022,023,031,055,117.
.*                     IF SVC IS NOT SPECIFIED, DEFAULT IS 019.
.*                     IF SVC IS SPECIFIED AS NULL, CSECTS SPECIFIED
.*                     VIA THE ID PARAMETER MUST BE 8 CHARACTERS.
.*
.*            LENGTH=NK WHERE N IS 1-4 AND K INDICATES 1024 BYTES.
.*                      FOR MORE INFORMATION, SEE DESCRIPTION BELOW.
.*
.*            PATCH=N WHERE N IS THE NUMBER OF BYTES TO BE USED FOR A
.*                    PATCH AREA. SEE DESCRIPTION BELOW FOR MORE
.*                    INFORMATION.
.*
.*            SYSECT IS THE NAME OF THE CURRENT CSECT AUTOMATICALLY
.*                   SUPPLIED BY THE ASSEMBLER.
.*
.*            SYSDATE IS THE CURRENT DATE AUTOMATICALLY SUPPLIED
.*                    BY THE ASSEMBLER.
.*
.*            SYSPARM IS A PARAMETER SPECIFIED IN THE PARM FIELD
.*                    OF THE ASSEMBLER. IF THE CHARACTER STRING
.*                    SDC=XXXXXX APPEARS WITHIN THE SYSPARMS
.*                    PARAMETERS THEN XXXXXX IS USED FOR PTF OR
.*                    APAR STATUS IDENTIFIERS.
.*
.*            SYSNDX IS A UNIQUE 4 DIGIT NUMBER PROVIDED BY THE
.*                   ASSEMBLER USED IN GENERATING LABELS USED
.*                   WITH THIS MACRO.
.*
.*      OUTPUT =
.*
.*                1. VCON ENTRY POINT TABLE (TWO TYPES)
.*
.*                   IF ID=(NAME,CSECT) WHERE CSECT=2 CHARS
.*
.*                            DC    CL3'SVC'
.*                   NAME     DC    CL2'CSECT',VL3(PFXSVCCSECT)
.*
.*                   PFX=(IGC/IFG/IGG) SVC=(019,055,020,...)
.*
.*                   IF ID=(NAME,CSECT) WHERE CSECT=8 CHARS
.*
.*                   NAME     DC    CL8'CSECT',V(CSECT)
.*
.*                2. PATCH AREA FOR MAINTENANCE AND BOUNDRY ALLIGNMENT
.*
.*                   LBLNNNND DC (PATCH)X'00' OR
.*
.*                   LBLNNNND DC (LENGTH-CSECT LENGTH-STATUS AREA)X'00'
.*
.*                3. CSECT STATUS AREA FOR EASY IDENTIFICATION
.*                   NOTE - NOT EXPANDED IF BRT=SHORT.
.*
.*          &TAG     DC    0D'0'
.*                   DC    CL8.'SYSECT'
.*                   DC    CL8.'SYSDATE '
.*                   DC    CL6.'SYSPARM '
.*                   DC    AL2.(LBLNNNND-SYSECT)
.*          LBLNNNNE DS    0D
.*          LBLNNNNF EQU   LENGTH
.*
.*                   ORG   SYSECT+LENGTH-(*-SYSECT)
.*
.* EXIT NORMAL = MEND STATEMENT
.*
.* EXIT ERROR =
.*
.*       MNOTE 12,'** INVALID ID PARAMETER - 'ID' **'
.*       MNOTE 12,'** CSECT NAME INVALID - CSECT **'
.*       MNOTE  4,'** INCORRECT OPERAND - LENGTH= **'
.*
.* EXTERNAL REFERENCES = NONE.
.*
.*      ROUTINES = NONE.
.*
.*      DATA AREAS = REFERENCE CONSTANTS SECTION BELOW.
.*
.*      CONTROL BLOCKS = NONE.
.*
.* TABLES = REFERENCE CONSTANTS SECTION BELOW.
.*
.* MACROS = NONE.
.*
.* CHANGE ACTIVITY = Y02080
.*
.**********************************************************************
.*
.*  THIS MACRO IS USED MAINLY BY OPEN/CLOSE/EOV TRANSIENT SVC
.*  MODULES TO BUILD AN XCTL IDTTRL TABLE.
.*  THE TTRL IS FILLED IN BY THE SYSTEM UTILITY PROGRAM IEHIOSUP.
.*  A VALID NULL ENTRY IS REPRESENTED BY A '#' IN THE ID FIELD   XM5707
.*
         LCLA  &L40,&L41                LENGTHS FOR EQUATE CALCS
         LCLC  &PATCHLY,&PATCHLZ        NAMES FOR ASSEMBLED STATEMENTS
         LCLC  &PATCHL0,&PATCHL1        NAMES FOR ASSEMBLED STATEMENTS
         LCLC  &NAME                    EP NAME                  Y02080
.*                                                               Y02080
.**********************************************************************
.*                                                               Y02080
.*       BRT=YES LOCAL VARIABLES (ALSO BRT=SHORT)                Y02080
.*                                                               Y02080
.**********************************************************************
.*                                                               Y02080
         LCLA  &L0,&L1,&L2,&L3,&L4,&L5,&L6   DECIMAL CONSTANTS   Y02080
         LCLA  &L7,&L8,&L12,&L20,&L24,&L1024 DECIMAL CONSTANTS   Y02080
         LCLA  &C1,&C2,&C3,&C4          INDEXES                  Y02080
         LCLC  &X00                     HEX CONSTANTS            Y02080
         LCLC  &A,&B,&C,&D,&E,&F,&K     CHARACTER CONSTANTS      Y02080
         LCLC  &NULL1,&NULL2            NULL CONSTANTS           Y02080
         LCLC  &FFFF                    DELIMITERS               Y02080
         LCLC  &IHB,&IGC,&IGG,&IFG      LABEL CONSTANTS          Y02080
         LCLC  &L,&LBL,&LBL1,&LBL2      NAMES FOR ASM STATEMENTS Y02080
         LCLC  &LBL3,&LBL4,&LBL5        NAMES FOR ASM STATEMENTS Y02080
         LCLC  &LBL6,&LBL7,&LBL8        NAMES FOR ASM STATEMENTS Y02080
         LCLC  &OPEN,&CLOSE,&EOV        DECIMAL SVC NUMBERS      Y02080
         LCLC  &OPENJ,&TCLOSE,&FEOV     DECIMAL SVC NUMBERS      Y02080
         LCLC  &CSECT,&I,&CSECTID       GENERATED CSECT NAMES    Y02080
         LCLC  &PATCHL,&LNGTH,&N        CSECT LENGTHS            Y02080
         LCLC  &SDC,&CODE               PTF, APAR, S/D CODE      Y02080
.*                                                               Y02080
.**********************************************************************
.*                                                               Y02080
.*       TEST FOR BRT=YES                                        Y02080
.*                                                               Y02080
.**********************************************************************
.*                                                               Y02080
         AIF   ('&BRT' EQ 'YES').XCT0010 EXPAND BRANCH TABLE     Y02080
         AIF   ('&BRT' EQ 'SHORT').XCT0010 EXPAND BRANCH TABLE   Y02080
.*                                                               Y02080
.**********************************************************************
.*                                                               Y02080
.*       BRT=NO PROCESSING                                       Y02080
.*                                                               Y02080
.**********************************************************************
.*                                                               Y02080
         AIF   ('&LABEL' EQ '').A1      IF LABEL OMITTED
&NAME    SETC  '&LABEL'                 USE SPECIFIED LABEL NAME
         AGO   .A2
.A1      ANOP
&NAME    SETC  'IHB&SYSNDX.X'           DEFAULT NAME TO IHBNNNNX
.A2      ANOP
&NAME    DC    0D'0'                    ALIGN TO DOUBLE WORD BOUNDARY
.*
         AIF   ('&SYSECT' LT '        ').A4  IF NOT 8 CHAR CSECT NAME
&IGG     SETC  '&SYSECT'(1,3)           FIRST 3 CHARS OF CSECT NAME
         AIF   ('&IGG' EQ 'IFG').A5     IFG MODULE REFERS TO IFG
         AIF   ('&IGG' EQ 'IGG').A5     IGG MODULE REFERS TO IGG
         AIF   ('&IGG' NE 'IGC').A4     IF NOT RECOGNIZABLE CSECT NAME
         AIF   ('&SVC' EQ '019').A3     IGC019 REFERS TO IFG019
         AIF   ('&SVC' EQ '020').A3     IGC020 REFERS TO IFG020
         AIF   ('&SVC' EQ '023').A3     IGC023 REFERS TO IFG023
         AIF   ('&SVC' EQ '055').A3     IGC055 REFERS TO IFG055
.*       NOTE THAT IGC0002B REFERS TO IFG019ID.
&IGG     SETC  'IGG'                    ALL OTHER IGC REFER TO IGG
         AGO   .A5
.A3      ANOP
&IGG     SETC  'IFG'                    IGC019-055 REFERS TO IFG
         AGO   .A5
.A4      ANOP
&IGG     SETC  ''                       CAN NOT DETERMINE MODULE NAME
.*
.A5      ANOP                           START OF ID PARAMETER LOOP
&C1      SETA  &C2+1                    INCR C1 BY 2, START AT 1
&C2      SETA  &C1+1                    INCR C2 BY 2, START AT 2
         AIF   (&C1 GT N'&ID).A9        IF END OF ID PARAMETERS
         AIF   ('&ID(&C2)' EQ 'FFFF').A11  IF IFG/IGG DELIMITER
         AIF   ('&ID(&C2)' EQ '#').A5   NULL ENTRY LOOP          XM5707
         AIF   (K'&ID(&C2) NE 2).A8     ERROR IF MODULE ID NOT 2 CHAR
&I       SETC  '&ID(&C2)'               GET MODULE ID FROM LIST
         AIF   ('&IGG' NE '').A6        IF MODULE NAME KNOWN
&ID(&C1) DC    C'&I'                    ID OF MODULE
         AGO   .A7
.A6      ANOP  C'ID',0C'                ID OF MODULE IGG019ID'
&ID(&C1) DC    C'&I',0C'                ID OF MODULE &IGG&SVC&I'
.A7      DC    X'00000000'              TTRL
         AGO   .A5                      LOOP ON ID PARAMETERS
.*
.A11     DC    X'FFFF'                  END OF IFG, START OF IGG
         AIF   ('&IGG' EQ '').A5        LOOP ON ID PARAMETERS
&IGG     SETC  'IGG'                    CHANGE FROM IFG TO IGG
         AGO   .A5                      LOOP ON ID PARAMETERS
.*
.A8      MNOTE 12,'** ID PARAMETER ''&ID(&C2)'' MUST HAVE 2 CHARS **'
.A9      DC    X'0000'                  END OF XCTL TABLE
*
         AIF   ('&PATCH' EQ '0').A20    IF MINIMUM LENGTH MODULE
&L20     SETA  &LENGTH-4                USUALLY 1020
&L40     SETA  2*&L20                   USUALLY 2040
&L41     SETA  &L40+1                   USUALLY 2041
&PATCHLY SETC  'IHB&SYSNDX.Y'           SET NAME TO IBHNNNNY
&PATCHLZ SETC  'IHB&SYSNDX.Z'           SET NAME TO IBHNNNNZ
.*  IHBNNNNZ WILL NEVER BE NEGATIVE (OR LARGE POSITIVE).
.*  THIS DEVIOUS EQUATE PREVENTS A LONG LOOP IN ASSEMBLER F IF
.*  THE PATCH AREA LENGTH WOULD HAVE BEEN NEGATIVE.
&PATCHLY EQU   *-&SYSECT                LENGTH BEFORE PATCH AREA
         AIF   ('&PATCH' NE '').A10     IF VARIABLE LENGTH WITH PATCH
&PATCHLZ EQU   (&L41-2*&PATCHLY)/(&L40-2*&PATCHLY)*(&L20-&PATCHLY)
         DC    (&PATCHLZ)X'00'          ZEROED PATCH AREA
*
         AGO   .A21
.A10     ANOP
&PATCHL0 SETC  'IHB&SYSNDX.0'           SET NAME TO IBHNNNN0
&PATCHL1 SETC  'IHB&SYSNDX.1'           SET NAME TO IBHNNNN1
&PATCHL0 EQU   (&L41-2*&PATCHLY)/(&L40-2*&PATCHLY)*(&L20-&PATCHLY)
&L20     SETA  &L20-&PATCH              USUALLY  970
&L40     SETA  2*&L20                   USUALLY 1940
&L41     SETA  &L40+1                   USUALLY 1941
&PATCHL1 EQU   (&L41-2*&PATCHLY)/(&L40-2*&PATCHLY)*(&L20-&PATCHLY)
&PATCHLZ EQU   &PATCHL0-&PATCHL1        LENGTH OF PATCH AREA
         DC    (&PATCHLZ)X'00'          ZEROED PATCH AREA
*
.A20     CNOP  4,8                      ALIGN TO END MODULE ON DW
.A21     AIF   ('&SVC' EQ '019').A22    IF OPEN SVC CODE
         AIF   ('&SVC' EQ '020').A23    IF CLOSE SVC CODE
         AIF   ('&SVC' EQ '023').A24    IF TCLOSE SVC CODE
         AIF   ('&SVC' EQ '055').A25    IF EOV SVC CODE
&TAG     DC    C'&SVC'                  SVC CODE
         AGO   .A26
.A22     ANOP
&TAG     DC    C'019'                   OPEN SVC CODE
         AGO   .A26
.A23     ANOP
&TAG     DC    C'020'                   CLOSE SVC CODE
         AGO   .A26
.A24     ANOP
&TAG     DC    C'023'                   TCLOSE SVC CODE
         AGO   .A26
.A25     ANOP
&TAG     DC    C'055'                   EOV SVC CODE
.*
.A26     DC    AL1((&NAME-&SYSECT)/8)     DOUBLE WORDS TO XCTL TABLE
*                                                                XM0166
&PATCHLY SETC  'IHB&SYSNDX.E'           SET NAME TO IHBNNN E     XM0166
&PATCHLY EQU   *-&SYSECT                ACTUAL LENGTH OF MODULE  XM0166
&L40     SETA  2*&LENGTH+1              USUALLY 2049             XM0166
&L41     SETA  &L40+1                   USUALLY 2050             XM0166
         ORG   &SYSECT+(&L41-2*&PATCHLY)/(&L40-2*&PATCHLY)-1     XM0166
*                                                                XM0166
         MEXIT                                                   Y02080
.*                                                               Y02080
.XCT0010 ANOP                                                    Y02080
.*                                                               Y02080
.**********************************************************************
.*                                                               Y02080
.*       CONSTANTS                                               Y02080
.*                                                               Y02080
.**********************************************************************
.*                                                               Y02080
&L0      SETA  0                        CONSTANT ZERO            Y02080
&L1      SETA  1                        CONSTANT ONE             Y02080
&L2      SETA  2                        CONSTANT TWO             Y02080
&L3      SETA  3                        CONSTANT THREE           Y02080
&L4      SETA  4                        CONSTANT FOUR            Y02080
&L5      SETA  5                        CONSTANT FIVE            Y02080
&L6      SETA  6                        CONSTANT SIX             Y02080
&L7      SETA  7                        CONSTANT SEVEN           Y02080
&L8      SETA  8                        CONSTANT EIGHT           Y02080
&L12     SETA  12                       CONSTANT TWELVE          Y02080
&L20     SETA  20                       CONSTANT TWENTY          Y02080
&L24     SETA  24                       LENGTH OF PTF SECTION    Y02080
&L1024   SETA  1024                     CONSTANT 1024            Y02080
&C1      SETA  0                        ID PARAMETER INDEX       Y02080
&C2      SETA  0                        ID PARAMETER INDEX       Y02080
&A       SETC  'A'                      LABEL IDENTIFIER         Y02080
&B       SETC  'B'                      LABEL IDENTIFIER         Y02080
&C       SETC  'C'                      LABEL IDENTIFIER         Y02080
&D       SETC  'D'                      LABEL IDENTIFIER         Y02080
&E       SETC  'E'                      LABEL IDENTIFIER         Y02080
&F       SETC  'F'                      LABEL IDENTIFIER         Y02080
&X00     SETC  '00'                     HEX 00                   Y02080
&K       SETC  'K'                      K=1024 BYTES             Y02080
&NULL1   SETC  ''                       NULL CHARACTER STRING    Y02080
&NULL2   SETC  '#'                      NULL ID ENTRY            Y02080
&FFFF    SETC  'FFFF'                   ID DELIMITER             Y02080
&IHB     SETC  'IHB'                    LABEL CONVENTION         Y02080
&OPEN    SETC  '019'                    DECIMAL OPEN SVC NUMBER  Y02080
&OPENJ   SETC  '022'                    DECIMAL OPENJ SVC NUMBER Y02080
&CLOSE   SETC  '020'                    DECIMAL CLOSE SVC NUMBER Y02080
&TCLOSE  SETC  '023'                    DECIMAL TCLOSE SVC NO.   Y02080
&EOV     SETC  '055'                    DECIMAL EOV SVC NUMBER   Y02080
&FEOV    SETC  '031'                    DECIMAL FEOV SVC NUMBER  Y02080
&IFG     SETC  'IFG'                    IFG CSECT PREFIX         Y02080
&IGC     SETC  'IGC'                    IGC CSECT PREFIX         Y02080
&IGG     SETC  'IGG'                    IGG CSECT PREFIX         Y02080
&SDC     SETC  'SDC='                   SDC CODE=XXXXXX          Y02080
.*                                                               Y02080
.**********************************************************************
.*                                                               Y02080
.*       THIS SECTION DETERMINES A LABEL FOR THE BRANCH TABLE.   Y02080
.*                                                               Y02080
.**********************************************************************
.*                                                               Y02080
&LBL     SETC  '&IHB'                   EQUATE LABEL             Y02080
         AIF   ('&IECXCT' EQ '').XCT0013 MULTIPLE CALLS          Y02080
&LBL     SETC  '&IECXCT'(&L1,&L3)       DEFAULT LABEL            Y02080
         AGO   .XCT0014                 BYPASS DEFAULT           Y02080
.*                                                               Y02080
.XCT0013 ANOP                                                    Y02080
&IECXCT  SETC  '&SYSECT'                SET DEFAULT              Y02080
.*                                                               Y02080
.XCT0014 ANOP                                                    Y02080
&LBL1    SETC  '&LBL&SYSNDX&A'          DEFAULT NAME= IHBNNNNA   Y02080
         AIF   ('&LABEL' EQ '&NULL1').XCT0020 NAME SPECIFIED?    Y02080
         AIF   (K'&LABEL LT &L3).XCT0015 TEST FOR 3 CHARACTERS   Y02080
&LBL     SETC  '&LABEL'(&L1,&L3)        LABEL CONVENTION         Y02080
.XCT0015 ANOP                                                    Y02080
&LBL1    SETC  '&LABEL'                 LABEL SPECIFIED          Y02080
.*                                                               Y02080
.XCT0020 ANOP                                                    Y02080
&LBL2    SETC  '&LBL&SYSNDX&B'          LBLNNNNB                 Y02080
&LBL3    SETC  '&LBL&SYSNDX&C'          LBLNNNNC                 Y02080
&LBL4    SETC  '&LBL&SYSNDX&D'          LBLNNNND                 Y02080
&LBL5    SETC  '&LBL&SYSNDX&E'          LBLNNNNE                 Y02080
&LBL6    SETC  '&LBL&SYSNDX&F'          LBLNNNNF                 Y02080
&LBL7    SETC  '&IECXCT'                PATCH AREA ARGUMENT      Y02080
&IECXCT  SETC  '&LBL5'                  SAVE FOR MULTIPLE CALLS  Y02080
         LTORG                                                   Y02080
&LBL1    DC    &L0.D'&L0'               ALIGN & ZERO BOUNDARY    Y02080
.*                                                               Y02080
.**********************************************************************
.*                                                               Y02080
.*       THIS SECTION DETERMINES THE FIRST THREE CHARACTERS      Y02080
.*       OF A CSECT TO GET CONTROL FROM THIS ONE. THE NAMES      Y02080
.*       ARE IMPLIED BY THE CALLING CSECT IF NOT SPECIFIED.      Y02080
.*                                                               Y02080
.**********************************************************************
.*                                                               Y02080
         AIF   (K'&SYSECT LT &L8).XCT0040 BRANCH NOT 8 CHAR NAME Y02080
&CSECT   SETC  '&SYSECT'(&L1,&L3)       FIRST 3 CHARS OF NAME    Y02080
         AIF   ('&CSECT' EQ '&IFG').XCT0050 IFG GENERATES IFG    Y02080
         AIF   ('&CSECT' EQ '&IGG').XCT0050 IGG GENERATES IGG    Y02080
         AIF   ('&CSECT' NE '&IGC').XCT0050 UNRECOGNIZABLE NAME  Y02080
         AIF   ('&SVC' EQ '&OPEN').XCT0030  IGC019 GENERATES IFG Y02080
         AIF   ('&SVC' EQ '&OPENJ').XCT0030 IGC022 GENERATES IFG Y02080
         AIF   ('&SVC' EQ '&CLOSE').XCT0030 IGC020 GENERATES IFG Y02080
         AIF   ('&SVC' EQ '&TCLOSE').XCT0030 IGC023 GENRATES IFG Y02080
         AIF   ('&SVC' EQ '&EOV').XCT0030   IGC055 GENERATES IFG Y02080
         AIF   ('&SVC' EQ '&FEOV').XCT0030  IGC031 GENERATES IFG Y02080
&CSECT   SETC  '&IGG'                   OTHER IGC GENERATE IGG   Y02080
         AGO   .XCT0050                 CONTINUE                 Y02080
.XCT0030 ANOP                                                    Y02080
&CSECT   SETC  '&IFG'                   GENERATE IFG PREFIX      Y02080
         AGO   .XCT0050                 CONTINUE                 Y02080
.XCT0040 ANOP                                                    Y02080
&IGG     SETC  '&NULL1'                 CAN NOT DETERMINE PREFIX Y02080
.*                                                               Y02080
.**********************************************************************
.*                                                               Y02080
.*       THIS SECTION WILL EVALUATE THE ID PARAMETER.            Y02080
.*       ID FORMAT= (LABEL1,CSECT1,LABEL2,CSECT2,...)            Y02080
.*       IF LABEL IS NOT SPECIFIED, LABEL=CSECT (PFXSVCID).      Y02080
.*       IF CSECT IS NOT SPECIFIED OR IS NOT 2 OR 8 CHARACTERS,  Y02080
.*       A MNOTE MESSAGE WILL BE GENERATED. IF CSECT IS THE      Y02080
.*       CHARACTER # THE LABEL AND CSECT PARAMETERS ARE IGNORED. Y02080
.*       NOTE-IF CSECT=FFFF, THE CSECT PREFIX IS CHANGED TO IGG. Y02080
.*       IF CSECT IS 2 CHARACTERS, THE ENTRY FORMAT IS-          Y02080
.*                                                               Y02080
.*       DC    CL3'&SVC'                ALIGN BOUNDARY FOR VCON  Y02080
.*LABEL  DC    CL2'ID',0C               ID OF CSECT PFXSVCID     Y02080
.*       DC    VL3(PFXSVCID)            VIRTUAL ADDRESS OF CSECT Y02080
.*                                                               Y02080
.*       IF CSECT IS 8 CHARACTERS, THE ENTRY FORMAT IS-          Y02080
.*                                                               Y02080
.*LABEL  DC    CL8'CSECT',V(CSECT)      CSECT NAME AND ADDRESS   Y02080
.*                                                               Y02080
.**********************************************************************
.*                                                               Y02080
.XCT0050 ANOP                           EVALUATE ID PARAMETER    Y02080
&C1      SETA  &C2+&L1                  C1=C1+2, START AT LABEL1 Y02080
&C2      SETA  &C1+&L1                  C2=C2+2, START AT CSECT1 Y02080
         AIF   (&C2 GT N'&ID).XCT0120   TEST FOR END OF ID PARMS Y02080
&L       SETC  '&ID(&C1)'               L=LABEL                  Y02080
&I       SETC  '&ID(&C2)'               I=CSECT ID OR NAME       Y02080
         AIF   ('&I' EQ '&FFFF').XCT0110 CONVERT PREFIX TO IGG   Y02080
         AIF   ('&I' EQ '&NULL2').XCT0050 NULL ENTRY, LOOP       Y02080
         AIF   (K'&I EQ &L2).XCT0060    ENTRY FOR FORMAT 1       Y02080
         AIF   (K'&I EQ &L8).XCT0090    ENTRY FOR FORMAT 2       Y02080
         MNOTE &L12,'** INVALID ID PARAMETER - ''&I'' **'        Y02080
         AGO   .XCT0050                 CONTINUE FOR MORE ERRORS Y02080
.*                                                               Y02080
.XCT0060 ANOP                           BUILD CSECT NAME         Y02080
&CSECTID SETC  '&CSECT&SVC&I'           PREFIX/SVC/ID            Y02080
         AIF   (K'&CSECTID EQ &L8).XCT0070 TEST FOR 8 CHAR NAME  Y02080
         MNOTE &L12,'** CSECT NAME INVALID - &CSECTID **'        Y02080
         AGO   .XCT0050                 CONTINUE FOR MORE ERRORS Y02080
.*                                                               Y02080
.XCT0070 AIF   ('&L' NE '&NULL1').XCT0080 LABEL=NULL             Y02080
&L       SETC  '&CSECTID'               LABEL=CSECT NAME         Y02080
.*                                                               Y02080
.XCT0080 ANOP                           GENERATE FORMAT 1 ENTRY  Y02080
         DC    CL&L3.'&SVC'             ALIGN BOUNDARY FOR VCON  Y02080
&L       DC    CL2'&I',0C'              ID FOR &CSECTID'         Y02080
         DC    VL3(&CSECTID),0C'        ADDRESS OF &CSECTID'     Y02080
         AGO   .XCT0050                 LOOP                     Y02080
.*                                                               Y02080
.XCT0090 AIF   ('&L' NE '&NULL1').XCT0100 LABEL=NULL             Y02080
&L       SETC  '&I'                     LABEL=CSECT NAME         Y02080
.*                                                               Y02080
.XCT0100 ANOP                           GENERATE FORMAT 2 ENTRY  Y02080
&CSECTID SETC  '&I'                     8 CHARACTER CSECT NAME   Y02080
&L       DC    CL8'&CSECTID',0C'        &CSECTID LPALIB NAME'    Y02080
         DC    V(&CSECTID),0C'          &CSECTID VIRTUAL ADDR'   Y02080
         AGO   .XCT0050                 LOOP                     Y02080
.*                                                               Y02080
.XCT0110 ANOP                           CHANGE TO PREFIX=IGG     Y02080
&CSECT   SETC  '&IGG'                   PREFIX=IGG               Y02080
         AGO   .XCT0050                 LOOP                     Y02080
.*                                                               Y02080
.**********************************************************************
.*                                                               Y02080
.*       THIS SECTION COMPUTES THE PATCH AREA FOR THIS CSECT.    Y02080
.*       IF PATCH=0 IS SPECIFIED, NO PATCH AREA IS GENERATED.    Y02080
.*       IF LENGTH=NK IS SPECIFIED, PATCH OPERAND IS IGNORED.    Y02080
.*       IF LENGTH=NK IS NOT SPECIFIED AND PATCH IS NOT          Y02080
.*       SPECIFIED, THEN THE PATCH AREA IS 5% OF THE TOTAL       Y02080
.*       LENGTH OF THE CSECT OR 5% OF THE LENGTH BETWEEN         Y02080
.*       MACRO CALLS.                                            Y02080
.*                                                               Y02080
.**********************************************************************
.*                                                               Y02080
.XCT0120 AIF   ('&LENGTH' EQ '&NULL1').XCT0130 GO COMPUTE PATCH  Y02080
         AIF   ('&LENGTH'(K'&LENGTH,&L1) EQ '&K').XCT0160 =NK?   Y02080
.*                                                               Y02080
.XCT0130 AIF   ('&PATCH' EQ '&NULL1').XCT0140 GO COMPUTE PATCH   Y02080
&PATCHL  SETC  '&PATCH'                 PATCH AREA LENGTH        Y02080
         AGO   .XCT0150                 CONTINUE                 Y02080
.*                                                               Y02080
.XCT0140 ANOP                           PATCH AREA LENGTH=5%     Y02080
&PATCHL  SETC  '&LBL2/&L20'             PATCH AREA LENGTH= 5 0/0 Y02080
.*                                                               Y02080
.XCT0150 ANOP                           TOTAL LENGTH WITH PATCH  Y02080
&LNGTH   SETC  '(((&LBL4-&SYSECT+&LBL3+&L24)+&L7)/&L8)*&L8' LEN  Y02080
         AGO   .XCT0180                 CONTINUE                 Y02080
.*                                                               Y02080
.XCT0160 AIF   (K'&LENGTH NE &L2).XCT0170 LENGTH=NK              Y02080
&N       SETC  '&LENGTH'(&L1,&L1)       N=NK                     Y02080
&C3      SETA  &N                       C3=N                     Y02080
&C4      SETA  &C3*&L1024               C4 = C3 X 1024 = NK      Y02080
&LNGTH   SETC  '&C4'                    TOTAL LENGTH IN BYTES    Y02080
         AIF   (&C3 LT &L1 OR &C3 GT &L4).XCT0170 TEST LIMITS    Y02080
         AIF   ('&BRT' EQ 'SHORT').XCT0165 TEST FOR SHORT TABLE  Y02134
&PATCHL  SETC  '&LNGTH-&LBL2-&L24'      PATCH=LENGTH-CSECT LNGTH Y02080
         AGO   .XCT0180                 CONTINUE                 Y02080
.*                                                               Y02080
.XCT0165 ANOP                                                    Y02134
&PATCHL  SETC  '&LNGTH-&LBL2'           PATCH=LENGTH-CSECT LNGTH Y02080
         AGO   .XCT0180                 CONTINUE                 Y02080
.*                                                               Y02080
.XCT0170 MNOTE &L4,'** INCORRECT OPERAND - LENGTH=&LENGTH **'    Y02080
.*                                                               Y02080
.XCT0180 ANOP                                                    Y02080
&LBL2    EQU   *-&LBL7                  LENGTH BEFORE PATCH AREA Y02080
&LBL3    EQU   &PATCHL                  LENGTH OF PATCH AREA     Y02080
&LBL4    DC    (&LBL3)X'&X00'           ZEROED PATCH AREA        Y02080
.*                                                               Y02080
         AIF   ('&BRT' NE 'SHORT').XCT0185 MULTIPLE CALLS        Y02080
&LBL5    DC    0D'0'                    END OF TABLE             Y02080
         MEXIT                                                   Y02080
.*                                                               Y02080
.XCT0185 ANOP                                                    Y02080
.*                                                               Y02080
.**********************************************************************
.*                                                               Y02080
.*       THE FOLLOWING SECTION IS NECESSARY TO RECORD            Y02080
.*       INFORMATION AS TO CSECT STATUS. NOTE. THE SYSPARMS=     Y02080
.*       PARAMETER IN THE PARM FIELD OF THE ASSEMBLER            Y02080
.*       WILL BE SCANNED FOR SDC=XXXXXX AND XXXXXX               Y02080
.*       WILL BE PLACED INTO A CHARACTER STRING BELOW.           Y02080
.*                                                               Y02080
.**********************************************************************
.*                                                               Y02080
&CODE    SETC  'Y02080'                 DEFAULT IF NO SYSPARM    Y02080
&C1      SETA  &L1                      SET C1=1                 Y02080
.XCT0190 AIF   (K'&SDC+&C1+&L5 GT K'&SYSPARM).XCT0210            Y02080
         AIF   ('&SYSPARM'(&C1,K'&SDC) EQ '&SDC').XCT0200        Y02080
&C1      SETA  &C1+&L1                  C1=C1+1                  Y02080
         AGO   .XCT0190                 LOOP                     Y02080
.*                                                               Y02080
.XCT0200 ANOP                           SET SDC CODE             Y02080
&CODE    SETC  '&SYSPARM'(&C1+K'&SDC,&L6) SYSPARM CODE = XXXXXX  Y02080
.*                                                               Y02080
.XCT0210 ANOP                                                    Y02080
&TAG     DC    &L0.D'&L0'               ALIGN & ZERO BOUNDARY    Y02080
         DC    CL&L8.'&SYSECT'          CSECT NAME               Y02080
         DC    CL&L8.'&SYSDATE '        DATE OF ASSEMBLY         Y02080
         DC    CL&L6.'&CODE'            RELEASE OR PTF NUMBER    Y02080
         DC    AL&L2.(&LBL5-&SYSECT)    LENGTH OF CSECT          Y02080
&LBL5    DS    &L0.D                    END OF CSECT             Y02080
&LBL6    EQU   &LNGTH                                      TOTAL Y02080
*                                                                Y02080
***********************************************************************
*        THE FOLLOWING INSTRUCTION WILL CAUSE AN ASSEMBLY        Y02080
*        ERROR IF THIS MODULE IS TOO LONG.                       Y02080
***********************************************************************
*                                                                Y02080
         ORG   &SYSECT+&LBL6-(*-&SYSECT)                         Y02080
*                                                                Y02080
***********************************************************************
         MEND                                                    XM0166
