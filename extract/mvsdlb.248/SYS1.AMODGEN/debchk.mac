         MACRO
&NAME    DEBCHK &CBAD,                                                 *
               &TYPE=,                                                 *
               &AM=,                                                   *
               &MF=O,                                                  *
               &BRANCH=NO,                                             *
               &TCBADDR=,                                              *
               &SAVREG=,                                               *
               &KEYADDR=                                       @ZA44985
.*
.*       MACRO DELETIONS/CHANGES FOR VS2 RELEASE 3.8
.*C1575,162,1625,163,1665,167832                               @ZA60608
.* $F01=OZ63828,EDM1102,AIF (T'KEYADDR NE '0') STMT INCORRECT     @F01A
.*
.*       MACRO DELETIONS/CHANGES FOR VS2 RELEASE 3
.*0000082000,085000                                             Y30ASJC
.*
.*       MACRO DELETIONS/CHANGES FOR VS2 RELEASE 2
.*
.**********************************************************************
.*
.* MODULE NAME = DEBCHK (VS2-2)
.*
.* DESCRIPTIVE NAME = DEB VALIDITY CHECK ROUTINE SVC
.*
.* COPYRIGHT = NONE
.*
.* STATUS = CHANGE LEVEL 000
.*
.* FUNCTION = THIS MACRO SETS UP THE INTERFACE FOR IFGDEBCK.
.* FOR THE SVC 117 ENTRY
.*            IT LOADS THE ACCESS METHOD VALUE (IF ANY) IN BITS 0 - 7
.*            OF REGISTER 0 AND THE TYPE FUNCTION CODE IN BIT 8 - 31
.*            OF REGISTER 0.  IT LOADS REGISTER 1 WITH THE DEB ADDRESS
.*            IF TYPE=PURGE OR WITH THE DCB ADDRESS IF THE FUNCTION
.*            CODE IS ADD, DELETE, OR VERIFY.  IT THEN LOADS REGISTER
.*            15 WITH THE VALUE 2 AND ISSUES SVC 117.
.*
.*            REGISTER 0: BITS 0 - 7:  ACCESS METHOD VALUE:
.*                                     TCAMAP = X'84'
.*                                     SUBSYS = X'81'
.*                                     ISAM   = X'80'
.*                                     BDAM   = X'40'
.*                                     SAM    = X'20'
.*                                     BPAM   = X'20'
.*                                     TAM    = X'10'
.*                                     GAM    = X'08'
.*                                     TCAM   = X'04'
.*                                     EXCP   = X'02'
.*                                     VSAM   = X'01'
.*                                     NONE   = X'00'
.*                        BITS 8 - 31: TYPE FUNCTION CODE:
.*                                     VERIFY = 0
.*                                     ADD    = 1
.*                                     DELETE = 2
.*                                     PURGE  = 3
.*
.*            REGISTER 1: BITS 0 - 7:  X'00'
.*                        BITS 8 - 31: DCB POINTER IF TYPE NOT PURGE
.*                                     DEB POINTER IF TYPE=PURGE
.*
.*      FOR THE BRANCH ENTRY:
.*            IT MODESETS TO THE USER KEY AND LOADS THE DEB ADDRESS
.*            INTO REGISTER 1, THE TCB ADDRESS INTO REGISTER 10, THEN
.*            MODESETS TO SUPERVISOR KEY AND LOADS THE BRANCH ENTRY
.*            ADDRESS OF DEBCHK INTO REGISTER 15, AND BRANCH AND LINKS
.*            TO DEBCHK ON REGISTER 14. ON RETURN FROM DEBCHK, IT
.*            RESTORES THE PROTECT KEY IN EFFECT AT ENTRY TO THE MACRO.
.*
.*
.*            DEBCHK ALSO HAS A LIST FORM WHICH GENERATES ONLY THE
.*            ACCESS METHOD TYPE (ONE BYTE).
.*
.* NOTES = SEE BELOW
.*
.*      DEPENDENCIES = NONE
.*
.*      RESTRICTIONS = NONE
.*
.*      REGISTER CONVENTIONS = NOT APPLICABLE
.*
.* PATCH LABEL = NOT APPLICABLE
.*
.* MODULE TYPE = MACRO
.*
.*      PROCESSOR = ASSEMBLER LANGUAGE
.*
.*      MODULE SIZE = NOT APPLICABLE
.*
.*      ATTRIBUTES = NOT APPLICABLE
.*
.* ENTRY POINT = NOT APPLICABLE
.*
.*      PURPOSE = SEE FUNCTION
.*
.*      LINKAGE = LABEL DEBCHK CBAD,TYPE=,AM=,MF=
.*
.*      INPUT =
.*
.*                OPTIONAL LABEL SPECIFIED AS AN ACCEPTABLE ASSEMBLER
.*                LABEL.
.*
.*                THE CONTROL BLOCK ADDRESS IS THE ONLY POSITIONAL
.*                PARAMETER. FOR BRANCH=NO, IT IS EITHER A POINTER TO
.*                THE DCB OR DEB, DEPENDING UPON THE TYPE FUNCTION
.*                CODE. FOR BRANCH=YES, IT IS EITHER A REGISTER OR
.*                THE LABLE OF A FULL WORD FIELD POINTING TO A DCB.
.*
.*                TYPE= IS A KEYWORD PARAMETER WHICH CAN BE EITHER
.*                ADD, DELETE, PURGE, OR VERIFY.  IF IT IS OMITTED,
.*                VERIFY IS THE DEFAULT.
.*
.*                AM= IS A KEYWORD PARAMETER WHICH CAN HAVE ANY OF
.*                THE ACCESS METHOD VALUES SPECIFIED UNDER 'FUNCTION'.
.*
.*                MF= IS A KEYWORD PARAMETER WHICH CAN BE EITHER
.*                MF=E (EXECUTE FORM) OR MF=L (LIST FORM).  THE
.*                LIST FORM OF DEBCHK GENERATES ONLY THE ACCESS
.*                METHOD TYPE.  THE DEFAULT IF MF=E.
.*
.*                BRANCH= IS A KEYWORD PARAMETER WHICH CAN BE EITHER
.*                YES OR NO. IF OMITTED, THE DEFAULT IS NO. IF YES,
.*                TCBADDR AND KEYADDR ARE REQUIRED, TYPE= MUST BE
.*                VERIFY IF SPECIFIED, AM= IS IGNORED, AND MF=L IS
.*                IGNORED.
.*
.*                TCBADDR= IS A KEYWORD PARAMETER WHICH CAN BE A LABEL
.*                OR A REGISTER. IT IS IGNORED IF BRANCH=NO OR BRANCH=
.*                IS OMITTED. IT IS REQUIRED IF BRANCH=YES. IT IS A
.*                REGISTER OR A LABLE OF A FULL WORD WHICH POINTS TO
.*                THE TCB TO BE USED BY DEBCHK.
.*
.*                KEYADDR= IS A KEYWORD PARAMETER WHICH CAN BE A LABEL
.*                OR A BASE DISPLACEMENT VALUE. IT IS IGNORED IF
.*                BRANCH=NO OR OMITTED.  IT IS REQUIRED IF BRANCH=YES.
.*                IT IS A LABEL OF A BYTE CONTAINING THE USERS KEY TO
.*                BE USED IN A MODESET MACRO PRIOR TO LOADING THE DEB
.*                ADDRESS INTO REGISTER 1.
.*
.*                SAVREG= IS A KEYWORD PARAMETER WHICH MAY BE USED TO
.*                SPECIFY A REGISTER TO BE USED TO SAVE REGISTER 2.
.*                REGISTER 2 WILL BE RESTORED AT THE END OF THE MACRO.
.*                REGISTERS 1, 2, 10, 11, 14, AND 15 SHOULD NOT BE USED
.*                FOR SAVREG. IF THEY ARE, THE RESULTS WILL BE
.*                UNPREDICTABLE.
.*
.*         FOR BRANCH=YES:
.*                REGISTERS 1, 2, 10, 11, 14, 15, AND &SAVREG MUST NOT
.*                BE USED FOR CBAD, TCBADDR, OR KEYADDR.
.*                REGISTERS 10, 11, AND 14 WILL BE UNPREDICTABLY
.*                ALTERED.
.*                REGISTER 2 WILL BE UNPREDICTABLY ALTERED IF SAVREG
.*                IS NOT USED.
.*                REGISTER 1 WILL CONTAIN THE ADDRESS OF THE DEB.
.*                REGISTER 15 WILL CONTAIN 0 IF THE DEB IS VALID,
.*                4 IF THE DEB IS NOT VALID, OR 16 IF THE DEB DOES NOT
.*                POINT TO THE DCB.
.*                A PROGRAM CHECK MAY OCCUR IF THE WRONG USER KEY
.*                IS PROVIDED.
.*
.*      OUTPUT = INTERFACE TO SVC 117
.*
.* EXIT-NORMAL = MEXIT OR MEND STATEMENT
.*
.* EXIT-ERROR = ERROR MESSAGES:
.*
.*      MNOTE 12,***  IHB002 INVALID MF OPERAND SPECIFIED-&MF
.*      MNOTE 12,***  IHB002 INVALID AM OPERAND SPECIFIED-&AM
.*      MNOTE 12,***  IHB002 INVALID TYPE OPERAND SPECIFIED-&TYPE
.*      MNOTE 12,***  IHB002 INVALID BRANCH OPERAND SPECIFIED-&BRANCH
.*      MNOTE 12,***  IHB001 TCBADDR OPERAND REQUIRED, NOT SPECIFIED.
.*      MNOTE 12,***  IHB001 KEYADDR OPERAND REQUIRED, NOT SPECIFIED.
.*
.* EXTERNAL REFERENCES = NONE
.*
.*      ROUTINES = NONE
.*
.*      DATA AREAS = NONE
.*
.*      CONTROL BLOCKS = NONE
.*
.* TABLES = NONE
.*
.* MACROS = IHBERMAC
.*          IHBINNRA
.*
.* CHANGE ACTIVITY = SEE DELETIONS/CHANGES PRECEDING THE MACRO PROLOGUE
.*
.**********************************************************************
.*
.*                       *****************
.*                       *   VARIABLES   *
.*                       *  DECLARATION  *
.*                       *****************
.*
         LCLB  &AM0,&AM1,&AM2,&AM3,&AM4,&AM5,&AM6,&AM7
         LCLB  &TYPEA,&TYPED,&TYPEV,&TYPEP,&ERR
         LCLB  &BRCH                                           @ZA44985
         LCLC  &REG,&LABEL,&AMFC,&AMSC
         LCLC  &CBSUB,&TCBSUB,&SVEREG                          @ZA44985
         LCLA  &A
.*
.*                       **********
.*                       * VERIFY *
.*                       *  INPUT *
.*                       **********
.*
         AIF   ('&MF' EQ 'O').DBCK020   BRANCH IF &MF OMITTED
         AIF   ('&MF' EQ 'L').DBCK030   BRANCH IF &MF=L
         IHBERMAC 1001,MF,&MF
&ERR     SETB  1
.*
.*                       TEST &CBAD
.*
.DBCK020 AIF   (T'&CBAD NE 'O').DBCK030 BRANCH IF &CBAD SPECIFIED
&ERR     SETB  1                        SET ERROR INDICATOR
         IHBERMAC  2
.*
.*                       ESTABLISH AND TEST &BRANCH VALUE
.*
.DBCK030 ANOP                                                  @ZA44985
         AIF   (T'&BRANCH EQ 'O').DBCK050  IF &BRANCH NOT SPEC.@ZA44985
         AIF   ('&BRANCH' EQ 'NO').DBCK050   OR &BRANCH=NO     @ZA44985
         AIF   ('&BRANCH' EQ 'YES').DBCK035  IF &BRANCH=YES    @ZA44985
&ERR     SETB  1           SET ERROR INDICATOR                 @ZA44985
         IHBERMAC 1001,BRANCH,&BRANCH                          @ZA44985
         AGO   .DBCK040                                        @ZA44985
.DBCK035 ANOP                                                  @ZA44985
&BRCH    SETB  1                                               @ZA44985
.*
.*                       ESTABLISH AND TEST &TCBADDR VALUE
.*
.DBCK040 ANOP                                                  @ZA44985
         AIF   (T'&TCBADDR NE 'O').DBCK045  &TCBADDR SPECIFIED @ZA44985
&ERR     SETB  1         SET ERROR INDICATOR                   @ZA44985
         IHBERMAC 1006,TCBADDR                                 @ZA44985
.*
.*                       ESTABLISH AND TEST &KEYADDR VALUE
.*
.DBCK045 ANOP                                                  @ZA44985
         AIF   (T'&KEYADDR NE 'O').DBCK125  &KEYADDR SPECIFIED    @F01C
&ERR     SETB  1                                               @ZA44985
         IHBERMAC 1006,KEYADDR                                 @ZA44985
         AGO   .DBCK125                                        @ZA44985
.*
.*                       ESTABLISH AND TEST &AM VALUE
.*
.DBCK050 ANOP                                                  @ZA44985
         AIF   (T'&AM NE 'O').DBCK060   BRANCH IF &AM SPECIFIED
         AIF   ('&MF' NE 'L').DBCK120   BRANCH IF NOT LIST FORM
         IHBERMAC 1006,AM
&ERR     SETB  1
         AGO   .DBCK140
.DBCK060 ANOP
&AMFC    SETC  '&AM'(1,1)               FIRST CHARACTER OF &AM
         AIF   ('&AMFC' NE '(').DBCK080 BRANCH IF &AM TO BE CALCULATED
         AIF   ('&MF' EQ 'L').DBCK100   BRANCH IF LIST FORM
         AGO   .DBCK120                 &AM IS VALID
.DBCK080 ANOP
&AM0     SETB  ('&AM' EQ 'ISAM' OR '&AM' EQ 'SUBSYS' OR                X
               '&AM' EQ 'TCAMAP')                               Y30ASJC
&AM1     SETB  ('&AM' EQ 'BDAM')
&AM2     SETB  ('&AM' EQ 'SAM' OR '&AM' EQ 'BPAM')
&AM3     SETB  ('&AM' EQ 'TAM')
&AM4     SETB  ('&AM' EQ 'GAM')
&AM5     SETB  ('&AM' EQ 'TCAM' OR '&AM' EQ 'TCAMAP')            YM2921
&AM6     SETB  ('&AM' EQ 'EXCP')                                Y30ASJC
&AM7     SETB  ('&AM' EQ 'VSAM' OR '&AM' EQ 'SUBSYS')
         AIF   (&AM0 OR &AM1 OR &AM2 OR &AM3 OR &AM4 OR &AM5 OR &AM6   X
               OR &AM7).DBCK120 BRANCH IF &AM VALID
.DBCK100 ANOP
&ERR     SETB  1                        SET ERROR INDICATOR
         IHBERMAC 1001,AM,&AM
.*
.*                       ESTABLISH AND TEST &TYPE VALUE
.*
.DBCK120 AIF   ('&MF' EQ 'L').DBCK140   BRANCH IF LIST FORM
&TYPEA   SETB  ('&TYPE' EQ 'ADD')
&TYPED   SETB  ('&TYPE' EQ 'DELETE')
&TYPEP   SETB  ('&TYPE' EQ 'PURGE')
.DBCK125 ANOP                                                  @ZA44985
.*                                      VERIFY IS DEFAULT TYPE
&TYPEV   SETB  ('&TYPE' EQ 'VERIFY' OR T'&TYPE EQ 'O')
.*                                      BRANCH IF NO ERROR
         AIF   (&TYPEA OR &TYPED OR &TYPEV OR &TYPEP).DBCK140
         IHBERMAC 1001,TYPE,&TYPE
         AGO   .DBCK160                 EXIT BECAUSE OF ERROR
.DBCK140 AIF   (NOT &ERR).DBCK220       BRANCH IF NO SYNTAX ERRORS
.*                                      GENERATE NAME IF NO CODE GENNED
.*
.*                       ERROR EXIT
.*
.DBCK160 AIF   ('&NAME' EQ '').DBCK200  DON'T GENERATE NAME IF NULL
         AIF   ('&MF' NE 'L').DBCK180   BRANCH IF NOT LIST FORM
&NAME    DS    0C
         MEXIT
.DBCK180 ANOP
&NAME    DS    0H
.DBCK200 MEXIT
.*
.*                       ************
.*                       * GENERATE *
.*                       *   CODE   *
.*                       ************
.*
.DBCK220 ANOP
&LABEL   SETC  '&NAME'                  SET LABEL FOR FIRST GENERATED
.*                                      LINE OF CODE
         AIF   (&BRCH).DBCK500          GO TO BRANCH ENTRY CODE@ZA44985
         AIF   ('&MF' EQ 'L').DBCK340   BRANCH IF LIST FORM
.*
.*                       FUNCTION TYPE VALUE
.*
.*                         VERIFY       0
.*                         ADD          1
.*                         DELETE       2
.*                         PURGE        3
.*
         AIF   (&TYPEV).DBCK240         BRANCH IF VERIFY
&A       SETA  &TYPEA*1+&TYPED*2+&TYPEP*3 SET AM TYPE
&LABEL   LA    0,&A.(,0)                LOAD TYPE VALUE
&LABEL   SETC  ''                       LABEL NOT TO BE GENERATED AGAIN
.DBCK240 AIF   (T'&AM NE 'O').DBCK260   BRANCH IF &AM SPECIFIED
         AIF   (NOT &TYPEV).DBCK420     BRANCH IF ADD OR DELETE TYPE
&LABEL   SR    0,0                      LOAD TYPE AND AM VALUE
         AGO   .DBCK420
.*
.*                       ACCESS METHOD TYPE VALUE
.*
.*                          TCAMAP      84
.*                          SUBSYS      81
.*                          ISAM        80
.*                          BDAM        40
.*                          SAM/BPAM    20
.*                          TAM         10
.*                          GAM         08
.*                          TCAM        04
.*                          EXCP        02
.*                          VSAM        01
.*                          OMITTED     00
.*
.DBCK260 ANOP
&REG     SETC  '0'                      INITIALIZE TO REG 0
         AIF   (&TYPEV).DBCK280         BRANCH IF TYPE IS VERIFY
&REG     SETC  '15'                     USE REG 15 IF ADD OR DELETE
.DBCK280 AIF   ('&AMFC' NE '(').DBCK340 BRANCH IF &AM TO BE CALCULATED
&AMSC    SETC  '&AM'(2,1)               SECOND CHARACTER OF &AM
         AIF   ('&AMSC' EQ '(').DBCK320 BRANCH IF &AM A REGISTER
.*
.*                       &AM VALUE TO BE INSERTED FROM AN ADDRESS
.*
         AIF   (NOT &TYPEV).DBCK300     BRANCH IF NOT VERIFY
&LABEL   SR    0,0                      LOAD TYPE VALUE
&LABEL   SETC  ''                       LABEL NOT TO BE GENERATED AGAIN
.DBCK300 ANOP
&AMFC    SETC  '&AM(1)'                 ADDRESS OF AM VALUE
&LABEL   ICM   0,8,&AMFC                INSERT AM VALUE IN HI BYTE
         AGO   .DBCK420
.*
.*                       &AM VALUE IN A REGISTER
.*
.DBCK320 ANOP
&A       SETA  K'&AM-4                  LENGTH OF REGISTER
&AMFC    SETC  '&AM'(3,&A)              REGISTER CONTAINING AM VALUE
&LABEL   LR    &REG,&AMFC               LOAD AM VALUE
         AGO   .DBCK380                 GO TO SHIFT TO HIGH BYTE
.*
.*                       &AM VALUE TO BE CALCULATED
.*
.DBCK340 ANOP
&A       SETA  128*&AM0+64*&AM1+32*&AM2+16*&AM3+8*&AM4+4*&AM5+2*&AM6+1*X
               &AM7
         AIF   ('&MF' NE 'L').DBCK360   BRANCH IF NOT LIST FORM
&NAME    DC    AL1(&A)
         MEXIT
.DBCK360 ANOP
&LABEL   LA    &REG,&A.(,0)             LOAD AM VALUE
.DBCK380 SLL   &REG,24(0)               SHIFT TO HIGH ORDER BYTE
.DBCK400 AIF   (&TYPEV).DBCK420
         OR    0,15                     OR AM TYPE INTO REGISTER 0
.*
.*                       LOAD CB ADDRESS AND SVC ROUTING ID
.*
.DBCK420 IHBINNRA &CBAD                 LOAD CBAD INTO REGISTER 1
         LA    15,2(,0)                 DEBCHK SVC ID
         SVC   117
         MEXIT                                                 @ZA44985
.*                                                             @ZA44985
.*                       ************                          @ZA44985
.*                       * GENERATE *                          @ZA44985
.*                       *  BRANCH  *                          @ZA44985
.*                       *   ENTRY  *                          @ZA44985
.*                       *   CODE   *                          @ZA44985
.*                       ************                          @ZA44985
.*                                                             @ZA44985
.DBCK500 ANOP                                                  @ZA44985
         AIF   (T'&NAME EQ 'O').DBCK520  LABEL NOT SUPPLIED    @ZA44985
&NAME    DS    0H                                              @ZA44985
.DBCK520 ANOP                                                  @ZA44985
         AIF   (T'&SAVREG EQ 'O').DBCK540  SAVREG NOT SUPPLIED @ZA44985
         LR    &SAVREG,2                                       @ZA44985
.DBCK540 ANOP                                                  @ZA44985
         MODESET KEYADDR=&KEYADDR,                                     *
               WORKREG=15,                                             *
               SAVEKEY=(2)     SET TO USERS KEY                @ZA44985
         AIF   ('&CBAD'(1,1) EQ '(').DBCK560  REGISTER FORM    @ZA44985
         L     1,&CBAD          DCB ADDRESS IN REG 1           @ZA44985
         AGO   .DBCK580                                        @ZA44985
.DBCK560 ANOP                                                  @ZA44985
&CBSUB   SETC  '&CBAD'(2,K'&CBAD-2)                            @ZA44985
         LR    1,&CBSUB          DCB ADDRESS IN REG 1          @ZA44985
.DBCK580 ANOP                                                  @ZA44985
         L     1,44(,1) LOAD DEB ADDRESS                       @ZA60608
         LA    1,0(,1)         ZERO HIGH ORDER BYTE            @ZA44985
         AIF   ('&TCBADDR'(1,1) NE '(').DBCK600  IF NOT REG    @ZA44985
&TCBSUB  SETC  '&TCBADDR'(2,K'&TCBADDR-2)                      @ZA44985
         LR    10,&TCBSUB     LOAD TCB ADDRESS INTO R10        @ZA44985
         AGO   .DBCK620                                        @ZA44985
.DBCK600 ANOP                                                  @ZA44985
         L     10,&TCBADDR    LOAD TCB ADDRESS INTO R10        @ZA44985
.DBCK620 ANOP                                                  @ZA44985
         L     15,16(,0)        GET ADDRESS OF CVT             @ZA60608
         L     15,328(,15) GET ADDR OF CVT EXTENSION           @ZA60608
         L     15,8(,15) ADDR OF DEBCHK ENTRY                  @ZA60608
         BALR  14,15            DO DEBCHK                      @ZA44985
         B     DBC&SYSNDX.A     GOOD RETURN                    @ZA44985
         B     DBC&SYSNDX.B     DEB IS BAD                     @ZA44985
DBC&SYSNDX.A DS 0H                                             @ZA44985
         AIF   ('&CBAD'(1,1) EQ '(').DBCK640  REGISTER FORM    @ZA44985
         L     10,&CBAD         DCB ADDRESS IN REG 10          @ZA44985
         CLM   10,7,25(1)                                      @ZA60608
*                                DOES DEB CHAIN TO DCB?        @ZA44985
         AGO   .DBCK660                                        @ZA44985
.DBCK640 ANOP                                                  @ZA44985
         CLM   &CBSUB,7,25(1)                                  @ZA60608
*                                    DOES DEB CHAIN TO DCB?    @ZA44985
.DBCK660 ANOP                                                  @ZA44985
         BE    DBC&SYSNDX.B     YES, DEB IS GOOD               @ZA44985
         LA    15,16            NO, SET ERROR CODE IN REG 15   @ZA44985
DBC&SYSNDX.B DS 0H                                             @ZA44985
*    RETURN TO THE KEY IN EFFECT WHEN THE MACRO WAS INVOKED.   @ZA44985
         MODESET KEYADDR=(2)                                   @ZA44985
         AIF   (T'&SAVREG EQ 'O').DBCK680  SAVREG NOT SUPPLIED @ZA44985
         LR    2,&SAVREG                                       @ZA44985
&SVEREG  SETC  '&SAVREG'                                       @ZA44985
         AGO   .DBCK700                                        @ZA44985
.DBCK680 ANOP                                                  @ZA44985
&SVEREG  SETC  '2'                                             @ZA44985
.DBCK700 ANOP                                                  @ZA44985
         SPACE 1                                               @ZA44985
         MNOTE *,'REGS 1, &SVEREG, 10, 11, 14, AND 15 WERE CHANGED BY T*
               HIS INVOCATION OF THE DEBCHK MACRO'             @ZA44985
         SPACE 1                                               @ZA44985
         MEND                                                  @ZA44985
