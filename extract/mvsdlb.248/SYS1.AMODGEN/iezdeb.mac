*
*        % GOTO DEBL1;   /*
         MACRO
         IEZDEB &LIST=NO
DEB      DSECT  ,   */
*%DEBL1 : ;
*
*/* **************************************************************** */
*/*                                                                  */
*/*            ***** DATA EXTENT BLOCK *****                         */
*/*                                                                  */
*/*  OS/VS2 RELEASE 3.0 AND 3.7 PTF, 12/20/77, LEVEL=2       @ZA34098*/
*/*                                                                  */
*/*  METHOD OF ACCESS                                                */
*/*      PL/S - DCL (DEBPTR,DEBDAPTR,DEBEXPTR,DEBSBPTR) PTR          */
*/*      BAL  - FIVE DSECTS ARE PRODUCED.  USING ON A DSECT NAME     */
*/*             GIVES ADDRESSABILITY FOR ALL SYMBOLS WITHIN THAT     */
*/*             DSECT.  THE DSECT NAMES AND THE SECTIONS WITHIN EACH */
*/*             DSECT ARE                                            */
*/*                                                                  */
*/*             DEB ***  APPENDAGE VECTOR TABLE SECTION              */
*/*                      PREFIX TABLE                                */
*/*                      BASIC SECTION                               */
*/*                      UNIT RECORD, MAGNETIC TAPE AND              */
*/*                        TELECOMMUNICATIONS DEVICES SECTION        */
*/*                      3540 ACCESS METHOD DEPENDENT SECTN  @X04AA9A*/
*/*                      ISAM DEPENDENT SECTION                      */
*/*                      *** POINTERS TO THE DEB IN OTHER CONTROL    */
*/*                          BLOCKS SUCH AS DCB POINT TO THE BASIC   */
*/*                          SECTION.  USING ON DEBBASIC GIVES       */
*/*                          ADDRESSABILITY FOR BASIC SECTION AND    */
*/*                          NEXT TWO SECTIONS.  DEBAPPAD IN BASIC   */
*/*                          SECTION CONTAINS ADDRESS OF APPENDAGE   */
*/*                          VECTOR TABLE (AVT) SECTION.  PREFIX     */
*/*                          FOLLOWS AVT SECTION.                    */
*/*             DEBDASD  DIRECT ACCESS STORAGE DEVICE SECTION        */
*/*             DEBACSMD EXCP, BSAM AND QSAM DEPENDENT SECTION       */
*/*                      BPAM DEPENDENT SECTION                      */
*/*                      BDAM DEPENDENT SECTION                      */
*/*                      BTAM DEPENDENT SECTION                      */
*/*                      GAM DEPENDENT SECTION                       */
*/*                      ISAM LOAD MODE EXTENSION **                 */
*/*                      ISAM SCAN MODE EXTENSION **                 */
*/*                      BISAM MODE EXTENSION **                     */
*/*                      ** FOR THESE 3 EXTENSIONS, LOAD REGISTER    */
*/*                         FROM DEBEXPT IN ISAM DEPENDENT SECTION   */
*/*                         TO SET REGISTER FOR USING.               */
*/*             DEBSUBNM SUBROUTINE NAME SECTION                     */
*/*             DEBXTN   EXTENSION FOR OS/VS2                        */
*/*                                                                  */
*/*             WHEN LISTING IS SUPPRESSED, YOU CAN DETERMINE WHICH  */
*/*             DSECT A SYMBOL IS IN BY USING THE STATEMENT NUMBER   */
*/*             IN THE DEFN COLUMN IN THE CROSS REFERENCE LISTING.   */
*/*             FOR EXAMPLE, ANY SYMBOL DEFINED BETWEEN THE          */
*/*             STATEMENT NUMBERS FOR DEBDASD AND DEBACSMD IS IN     */
*/*             THE DIRECT ACCESS STORAGE DEVICE SECTION.            */
*/*                                                                  */
*/*  F.E.'S                                                          */
*/*      MICROFICHE LISTING - IEZDEB                                 */
*/*                                                                  */
*/*  DEVELOPERS                                                      */
*/*      BAL LISTING  - SPECIFY LIST=YES ON MACRO CALL               */
*/*      PL/S LISTING - SPECIFY %IHALIST='YES' BEFORE INCLUDE        */
*/*                                                                  */
*/*      FOR INTEGRATION, A LISTING SHOULD NOT BE REQUESTED.         */
*/*                                                                  */
*/*  FUNCTION                                                        */
*/*      THE DATA EXTENT BLOCK (DEB) CONTAINS AN EXTENSION OF        */
*/*      INFORMATION IN THE DCB.  EACH DEB IS ASSOCIATED WITH A      */
*/*      DCB, AND THE TWO POINT TO EACH OTHER.  THE DEB CONTAINS     */
*/*      INFORMATION CONCERNING THE PHYSICAL CHARACTERISTICS OF      */
*/*      THE DATA SET AND OTHER INFORMATION THAT IS USED BY THE      */
*/*      CONTROL PROGRAM.                                            */
*/*                                                                  */
*/* **************************************************************** */
*
*%GOTO DEBL2;  /*
         PUSH  PRINT
         AIF   ('&LIST' EQ 'YES').DEB1
         PRINT OFF
.DEB1    ANOP
         SPACE 1
**********************************************************************
*            APPENDAGE VECTOR TABLE SECTION OF THE DEB               *
*              POINTED TO BY DEBAPPAD                                *
**********************************************************************
         SPACE 1
DEBAVT   DS    0D -      APPENDAGE VECTOR TABLE
DEBEOEA  DS    0A -      ADDRESS OF END-OF-EXTENT APPENDAGE ROUTINE
*                                                                ICB280
DEBEOEAB DS    B -       FLAG BYTE                               ICB280
DEBTCAMQ EQU   DEBEOEA - TCAM USES AS WORK AREA (BITS 0-3)     @ZA34098
DEBEOENP EQU   X'0F' -   NUMBER OF 2K PAGES TO BE FIXED FOR THE
*                        END-OF-EXTENT APPENDAGE                 ICB280
DEBEOEAD DS    AL3 -     ADDRESS OF END-OF-EXTENT APPENDAGE ROUTINE
*                                                                ICB280
DEBSIOA  DS    0A -      ADDRESS OF START I/O APPENDAGE ROUTINE  ICB280
DEBSIOAB DS    B -       FLAG BYTE                               ICB280
DEBPGFX  EQU   X'80' -   ADDRESS IN DEBSIOAD CAN BE USED TO DETERMINE
*                        THE ENTRY POINT TO THE PAGE FIX (PGFX)
*                        APPENDAGE ROUTINE BY ADDING 4 TO THE ADDRESS
*                        IN DEBSIOAD                             ICB280
DEBSIOX  EQU   X'40' -   IF ZERO, DO NOT ENTER SIO APPENDAGE WHEN ERP
*                        IS ACTIVE.  IF ONE, ENTER SIO APPENDAGE EVEN
*                        WHEN ERP IS ACTIVE.                     ICB372
DEBIOVR  EQU   X'20' -   IF ONE, EXCPVR REQUEST IS VALID.
*                        IF ZERO, EXCPVR REQUEST IS INVALID AND WILL
*                        NOT BE EXECUTED.                        ICB401
DEBFIX   EQU   X'10' -   INDICATION THAT DEB HAS BEEN FIXED (OS/VS2)
*                        (MDC032)                                YM5929
DEBSIONP EQU   X'0F' -   NUMBER OF 2K PAGES TO BE FIXED FOR THE
*                        SIO APPENDAGE                           ICB280
DEBSIOAD DS    AL3 -     ADDRESS OF START I/O APPENDAGE ROUTINE  ICB280
DEBPCIA  DS    0A -      ADDRESS OF PCI APPENDAGE ROUTINE        ICB280
DEBPCIAB DS    B -       FLAG BYTE                               ICB280
DEBRSV24 EQU   X'80',,C'X' RESERVED
DEBRSV25 EQU   X'40',,C'X' RESERVED
DEBRSV26 EQU   X'20',,C'X' RESERVED
DEBRSV27 EQU   X'10',,C'X' RESERVED
DEBPCINP EQU   X'0F' -   NUMBER OF 2K PAGES TO BE FIXED FOR THE
*                        PCI APPENDAGE                           ICB280
DEBPCIAD DS    AL3 -     ADDRESS OF PROGRAM-CONTROLLED-INTERRUPTION
*                        (PCI) APPENDAGE ROUTINE                 ICB280
DEBCEA   DS    0A -      ADDRESS OF CHANNEL-END APPENDAGE ROUTINE
*                                                                ICB280
DEBCEAB  DS    B -       FLAG BYTE                               ICB280
DEBESMVR EQU   X'80',,C'X' VALIDITY CHECK FOR EXCPVR CALLER    @ZA34098
DEBRSV29 EQU   X'40',,C'X' RESERVED
DEBRSV30 EQU   X'20',,C'X' RESERVED
DEBRSV31 EQU   X'10',,C'X' RESERVED
DEBCENP  EQU   X'0F' -   NUMBER OF 2K PAGES TO BE FIXED FOR THE
*                        CHANNEL-END APPENDAGE                   ICB280
DEBCEAD  DS    AL3 -     ADDRESS OF CHANNEL-END APPENDAGE ROUTINE
*                                                                ICB280
DEBXCEA  DS    0A -      ADDRESS OF ABNORMAL-END APPENDAGE ROUTINE
*                                                                ICB280
DEBXCEAB DS    B -       FLAG BYTE                               ICB280
DEBRSV32 EQU   X'80',,C'X' RESERVED
DEBRSV33 EQU   X'40',,C'X' RESERVED
DEBRSV34 EQU   X'20',,C'X' RESERVED
DEBRSV35 EQU   X'10',,C'X' RESERVED
DEBXCENP EQU   X'0F' -   NUMBER OF 2K PAGES TO BE FIXED FOR THE
*                        ABNORMAL-END APPENDAGE                  ICB280
DEBXCEAD DS    AL3 -     ADDRESS OF ABNORMAL-END APPENDAGE ROUTINE
*                                                                ICB280
         SPACE 1
**********************************************************************
*                    DEB PREFIX TABLE                                *
**********************************************************************
         SPACE 1
DEBPREFX DS    0A -      DEB PREFIX TABLE
DEBWKARA DS    XL1 -     I/O SUPPORT WORK AREA (DIRECT ACCESS)
DEBDSCBA DS    XL7 -     DSCB ADDRESS (BBCCHHR) USED BY I/O SUPPORT
*                        (DIRECT ACCESS)
DEBXTNP  DS    0A -      POINTER TO DEB EXTENSION (OS/VS2)       MDC008
DEBDCBMK DS    XL4 -     DCB MODIFICATION MASK USED BY I/O SUPPORT
*                        (OS/VS1)                                MDC009
DEBLNGTH DS    BL1 -     LENGTH OF DEB IN DOUBLE WORDS
DEBAMTYP DS    C -       ACCESS METHOD TYPE                      ICB380
DEBTBLOF DS    H -       OFFSET IN THE DEB TABLE TO THE ENTRY FOR
*                        THIS DEB                                ICB380
         SPACE 1
***********************************************************************
*                     DEB BASIC SECTION                               *
***********************************************************************
         SPACE 1
DEBBASIC EQU   *
DEBTCBAD DS    0A -      ADDRESS OF TCB FOR THIS DEB
DEBAMID  DS    0BL1 -    VTAM/TCAM DEB ID FLAG                 @ZA51573
DEBTAMID EQU   X'00' -   TCAM DEB ID                           @ZA51573
DEBVAMID EQU   X'0F' -   VTAM DEB ID                           @ZA51573
DEBNMSUB DS    BL1 -     NUMBER OF SUBROUTINES LOADED BY OPEN
*                        EXECUTOR ROUTINES
DEBTCBB  DS    AL3 -     ADDRESS OF TCB FOR THIS DEB
DEBDEBAD DS    0A -      ADDRESS OF THE NEXT DEB IN THE SAME TASK
DEBAMLNG DS    BL1 -     NUMBER OF BYTES IN THE ACCESS METHOD DEPENDENT
*                        SECTION.  FOR BDAM THIS FIELD CONTAINS THE
*                        LENGTH EXPRESSED IN NUMBER OF WORDS.
DEBDEBB  DS    AL3 -     ADDRESS OF THE NEXT DEB IN THE SAME TASK
DEBIRBAD DS    0A -      IRB STORAGE ADDRESS USED FOR APPENDAGE
*                        ASYNCHRONOUS EXITS
DEBOFLGS DS    B -       DATA SET STATUS FLAGS
DEBDISP  EQU   X'C0' -   DATA SET DISPOSITION FLAGS
*                         BIT SETTING  DISPOSITION
*              DEBDSOLD     01             OLD DATA SET
*              DEBDSMOD     10             MOD DATA SET
*              DEBDSNEW     11             NEW DATA SET
DEBEOF   EQU   X'20' -   END-OF-FILE (EOF) ENCOUNTERED (TAPE INPUT)
*                        FORMAT 1 DSCB BIT 93.0 INDICATES THAT THE
*                        CURRENT VOLUME IS THE LAST VOLUME OF THE DATA
*                        SET (DASD INPUT)
DEBRLSE  EQU   X'10' -   RELEASE UNUSED EXTERNAL STORAGE (DASD)
*                        EMULATOR TAPE WITH SECOND GENERATION FORMAT.
*                        TAPE MAY CONTAIN BLOCKS SHORTER THAN 12
*                        CHARACTERS. (TAPE)
DEBDCB   EQU   X'08' -   DCB MODIFICATION
DEBSPLIT EQU   X'04' -   SPLIT CYLINDER (DASD)
*                        7-TRACK EMULATOR TAPE WITH POSSIBLE MIXED
*                        PARITY RECORDS (TAPE)
DEBLABEL EQU   X'02' -   NONSTANDARD LABELS
DEBRERR  EQU   X'01' -   USE REDUCED ERROR RECOVERY PROCEDURE (TAPE)
*                        CONCATENATED PARTITIONED ORGANIZATION DATA
*                        SETS PROCESSED USING BPAM (DASD)
DEBIRBB  DS    AL3 -     IRB STORAGE ADDRESS USED FOR APPENDAGE
*                        ASYNCHRONOUS EXITS
DEBOPATB DS    B -       FLAGS INDICATING BOTH THE METHOD OF I/O
*                        PROCESSING AND THE DISPOSITION THAT IS TO BE
*                        PERFORMED WHEN AN END-OF-VOLUME (EOV)
*                        CONDITION OCCURS
DEBABEND EQU   X'80' -   SET BY ABEND INDICATING A SYSABEND OR
*                        SYSUDUMP DATA SET (OS/VS2)
DEBZERO  EQU   X'40' -   ALWAYS ZERO
DEBPOSIT EQU   X'30' -   DATA SET POSITIONING FLAGS
*                         BIT SETTING    POSITIONING
*              DEBRERED     01             REREAD
*              DEBLEAVE     11             LEAVE
DEBACCS  EQU   X'0F' -   TYPE OF I/O ACCESSING BEING DONE
*                         BIT SETTING    ACCESSING
*              DEBINPUT     0000           INPUT
*              DEBOUTPT     1111           OUTPUT
*              DEBINOUT     0011           INOUT
*              DEBOUTIN     0111           OUTIN
*              DEBRDBCK     0001           RDBACK
*              DEBUPDAT     0100           UPDAT
DEBQSCNT DS    BL1 -     PURGE (SVC 16) - QUIESCE COUNT.  NUMBER OF
*                        DEVICES EXECUTING USER'S CHANNEL PROGRAMS,
*                        AS SHOWN BY BITS 5 AND 6 OF UCBFL1 FIELDS.
DEBFLGS1 DS    BL1 -     FLAG FIELD
DEBPWCKD EQU   X'80' -   PASSWORD WAS SUPPLIED DURING OPEN.  EOV WILL
*                        NOT REQUEST A PASSWORD FOR EACH ADDITIONAL
*                        VOLUME OF A MULTIVOLUME DATA SET.
DEBEOFDF EQU   X'40' -   SET BY EOV TO INFORM CLOSE THAT AN END-OF-FILE
*                        HAS BEEN ENCOUNTERED AND, THEREFORE, DEFERRED
*                        USER LABEL PROCESSING IS ALLOWED.
DEBRSIOA EQU   X'20' -   SIO APPENDAGE RE-ENTRY AUTHORIZATION BIT
*                        (OS/VS1)  (MDC331)                    @XM06077
DEBEXCPA EQU   X'10' -   EXCP IS AUTHORIZED FOR THIS DEB       @ZA20762
DEBCINDI EQU   X'08' -   DCB ASSOCIATED WITH THIS DEB IS BEING
*                        PROCESSED BY THE COMPATIBILITY INTERFACE
*                        ROUTINES (VSAM)                         ICB462
DEBF1CEV EQU   X'04' -   EOV PROCESSING OCCURRED DURING CLOSE
*                        PROCESSING.  TESTED AND SET TO ZERO BY CLOSE,
*                        SET TO ONE BY EOV.  (ICB353)            A42228
DEBAPFIN EQU   X'02' -   IF ON, AUTHORIZED PROGRAMS CAN BE LOADED
*                                                                MDC001
DEBXTNIN EQU   X'01' -   IF ONE, DEB EXTENSION EXISTS (OS/VS2)   MDC007
DEBRSV05 DS    XL1 -     RESERVED
DEBUSRPG DS    0A -      ADDRESS OF FIRST IOB IN THE USER PURGE CHAIN
*                        (OS/VS1)
*                        ADDRESS OF PURGED I/O RESTORE LIST (PIRL)
*                        (OS/VS2)  (MDC029)                      YM3158
DEBNMEXT DS    BL1 -     NUMBER OF EXTENTS SPECIFIED IN DSCB'S
DEBUSRPB DS    AL3 -     ADDRESS OF FIRST IOB IN THE USER PURGE CHAIN
*                        (OS/VS1)
*                        ADDRESS OF PURGED I/O RESTORE LIST (PIRL)
*                        (OS/VS2)  (MDC030)                      YM3158
DEBRRQ   DS    0A -      POINTER TO RELATED REQUEST QUEUE (OS/VS2)
*                                                                MDC026
DEBECBAD DS    0A -      ADDRESS OF A PARAMETER LIST USED TO LOCATE
*                        THE PURGE ECB FOR AN SVC PURGE REQUEST
*                        (OS/VS1)                                MDC025
DEBPRIOR DS    BL1 -     PRIORITY OF THE TASK OWNING DEB
DEBECBB  DS    AL3 -     ADDRESS OF A PARAMETER LIST USED TO LOCATE
*                        THE PURGE ECB FOR AN SVC PURGE REQUEST
*                        (OS/VS1)                                MDC025
DEBDCBAD DS    0A -      ADDRESS OF DCB ASSOCIATED WITH THIS DEB
DEBPROTG DS    0BL1 -    TASK PROTECTION KEY IN HIGH-ORDER 4 BITS
DEBDEBID DS    BL1 -     A HEX F IN LOW-ORDER 4 BITS TO IDENTIFY
*                        THIS BLOCK AS A DEB
DEBDCBB  DS    AL3 -     ADDRESS OF DCB ASSOCIATED WITH THIS DEB
DEBAPPAD DS    0A -      ADDRESS OF THE I/O APPENDAGE VECTOR TABLE
DEBEXSCL DS    XL1 -     EXTENT SCALE - 4 FOR DIRECT ACCESS DEVICE AND
*                        3525 CARD PUNCH WITH DEVICE-ASSOCIATED DATA
*                        SET SUPPORT AND 2 FOR NONDIRECT ACCESS DEVICE
*                        AND COMMUNICATION DEVICE.  THIS FIELD IS USED
*                        TO DETERMINE THE SIZE OF THE DEVICE DEPENDENT
*                        SECTION                                 ICB394
DEBAPPB  DS    AL3 -     ADDRESS OF THE I/O APPENDAGE VECTOR TABLE
DEBBASND EQU   *
         SPACE 1
***********************************************************************
*      UNIT RECORD, MAGNETIC TAPE, TELECOMMUNICATIONS DEVICES SECTION *
*                                                                     *
*        NOTE  FOR TELECOMMUNICATIONS DEVICES, THE UCB ADDRESS IS     *
*              REPEATED FOR EACH LINE ASSIGNED                        *
***********************************************************************
         SPACE 1
DEBDDS1  EQU   *
DEBSUCBA DS    0A -      ADDRESS OF A UCB ASSOCIATED WITH A GIVEN
*                        DATA SET
DEBSDVM  DS    B -       DEVICE MODIFIER.  FOR MAGNETIC TAPE, SET MODE
*                        OPERATION CODE.  FOR UNIT RECORD, NOT USED.
DEBSUCBB DS    AL3 -     ADDRESS OF A UCB ASSOCIATED WITH A GIVEN
*                        DATA SET
DEBDEVED DS    0A -      END OF COMMON UNIT RECORD FIELDS  (MDC330)
*                                                              @X04AA9A
         SPACE 1
*        THE FOLLOWING FIELDS ARE PRESENT ONLY FOR THE 3525 WITH
*        DEVICE-ASSOCIATED DATA SET SUPPORT
         SPACE 1
DEBRDCB  DS    0A -      ADDRESS OF DCB FOR THE READ ASSOCIATED DATA
*                        SET                                     ICB394
DEBRSV06 DS    X -       RESERVED                                ICB394
DEBRDCBA DS    AL3 -     ADDRESS OF DCB FOR THE READ ASSOCIATED DATA
*                        SET                                     ICB394
DEBPDCB  DS    0A -      ADDRESS OF DCB FOR THE PUNCH ASSOCIATED DATA
*                        SET                                     ICB394
DEBRSV07 DS    X -       RESERVED                                ICB394
DEBPDCBA DS    AL3 -     ADDRESS OF DCB FOR THE PUNCH ASSOCIATED DATA
*                        SET                                     ICB394
DEBWDCB  DS    0A -      ADDRESS OF DCB FOR THE PRINT ASSOCIATED DATA
*                        SET                                     ICB394
DEBRSV08 DS    X -       RESERVED                                ICB394
DEBWDCBA DS    AL3 -     ADDRESS OF DCB FOR THE PRINT ASSOCIATED DATA
*                        SET                                     ICB394
         SPACE 2
***********************************************************************
*                   3540 ACCESS METHOD DEPENDENT SECTION      @X04AA9A*
*                   (OS/VS1 ONLY)                             @X04AA9A*
*                                                                     *
*        NOTE  THIS SECTION FOLLOWS DEBSUCBA IN UNIT RECORD, MAGNETIC *
*              TAPE, TELECOMMUNICATIONS DEVICES SECTION IF DEB IS     *
*              FOR 3540 DEVICE.                               @X04AA9A*
***********************************************************************
         SPACE 2
         ORG   DEBDEVED -                                      @X04AA9A
         SPACE 1
DEBASC09 DS    0CL16 -   3540 ACCESS METHOD DEPENDENT SECTION
*                        (MDC317)                              @X04AA9A
DEBVOLAC DS    CL1 -     VOLUME ACCESSABILITY INDICATOR  (MDC327)
*                                                              @X04AA9A
DEBDSSQL DS    CL1 -     DATA SET SECURITY QUALIFIER (MDC328)  @X04AA9A
DEBVSEQU DS    FL1 -     VOLUME SEQUENCE NUMBER  (MDC318)      @X04AA9A
DEBEAMFG DS    B -       FLAG BYTE  (MDC319)                   @X04AA9A
DEBMULTI EQU   X'80' -   MULTI-VOLUME INDICATOR  (MDC320)      @X04AA9A
DEBDSOPN EQU   X'40' -   DATA SET IS OPEN  (MDC321)            @X04AA9A
DEBVAMSG EQU   X'20' -   VOLUME ACCESSABILITY MESSAGE HAS BEEN ISSUED
*                        (MDC329)                              @X04AA9A
DEBSECVL EQU   X'10' -   SECURE VOLUME  (MDC332)               @X04AA9A
DEBRV004 EQU   X'08',,C'X' - RESERVED                          @X04AA9A
DEBRV005 EQU   X'04',,C'X' - RESERVED                          @X04AA9A
DEBRV006 EQU   X'02',,C'X' - RESERVED                          @X04AA9A
DEBRV007 EQU   X'01',,C'X' - RESERVED                          @X04AA9A
DEBDSID  DS    0CL8 -    DATA SET IDENTIFIER (DSID) (INPUT)  (MDC305)
*                                                              @X04AA9A
DEBEXDTE DS    CL6 -     EXPIRATION DATE (OUTPUT)  (MDC333)    @X04AA9A
DEBWTPTI DS    CL1 -     WRITE PROTECT INDICATOR (OUTPUT)  (MDC334)
*                                                              @X04AA9A
DEBRV008 DS    CL1 -     RESERVED (OUTPUT)  (MDC335)           @X04AA9A
DEBEOD   DS    0CL4 -    END OF DATA (EOD) ADDRESS (INPUT)  (MDC306)
*                                                              @X04AA9A
DEBBOE   DS    0CL4 -    BEGINNING OF EXTENT (BOE) ADDRESS (OUTPUT)
*                        (MDC322)                              @X04AA9A
DEBEODRV DS    0XL1 -    RESERVED  (MDC307)                    @X04AA9A
DEBBOERV DS    XL1 -     RESERVED  (MDC323)                    @X04AA9A
DEBEODTT DS    0XL1 -    EOD TRACK NUMBER  (MDC308)            @X04AA9A
DEBBOETT DS    XL1 -     BOE TRACK NUMBER  (MDC324)            @X04AA9A
DEBEOD0  DS    0XL1 -    MUST BE ZERO  (MDC309)                @X04AA9A
DEBBOE0  DS    XL1 -     MUST BE ZERO  (MDC325)                @X04AA9A
DEBEODSS DS    0XL1 -    EOD SECTOR NUMBER  (MDC310)           @X04AA9A
DEBBOESS DS    XL1 -     BOE SECTOR NUMBER  (MDC326)           @X04AA9A
         SPACE 2
***********************************************************************
*                DEB ISAM DEPENDENT SECTION                           *
*                                                                     *
*        NOTE  PRESENT ONLY IF ISAM IS USED.  FOLLOWS THE BASIC       *
*              SECTION AND PRECEDES THE DIRECT ACCESS STORAGE DEVICE  *
*              SECTION.  COUNTED AS ONE EXTENT IN DEBNMEXT.           *
***********************************************************************
         SPACE 1
         ORG   DEBBASND
         SPACE 1
DEBISAM  EQU   *
DEBFIEAD DS    0A -      ADDRESS OF FIRST INDEX EXTENT
DEBNIEE  DS    BL1 -     NUMBER OF EXTENTS OF INDEPENDENT INDEX AREA
DEBFIEB  DS    AL3 -     ADDRESS OF FIRST INDEX EXTENT
DEBFPEAD DS    0A -      ADDRESS OF THE FIRST PRIME DATA EXTENT
DEBNPEE  DS    BL1 -     NUMBER OF EXTENTS OF PRIME DATA AREA
*                        (M=0 EXTENT)
DEBFPEB  DS    AL3 -     ADDRESS OF THE FIRST PRIME DATA EXTENT
DEBFOEAD DS    0A -      ADDRESS OF THE FIRST OVERFLOW EXTENT
DEBNOEE  DS    BL1 -     NUMBER OF EXTENTS OF INDEPENDENT OVERFLOW AREA
DEBFOEB  DS    AL3 -     ADDRESS OF THE FIRST OVERFLOW EXTENT
DEBEXPT  DS    0A -      ADDRESS OF ISAM DEB EXTENSION           ICB379
DEBRPSID DS    BL1 -     ROTATIONAL POSITION SENSING (RPS) DEVICE
*                        INDICATORS
DEBRPSP  EQU   X'80' -   PRIME DATA AREA IS ON RPS DEVICE
DEBRPSI  EQU   X'40' -   INDEPENDENT INDEX AREA IS ON RPS DEVICE
DEBRPSO  EQU   X'20' -   INDEPENDENT OVERFLOW AREA IS ON RPS DEVICE
DEBRPSAP EQU   X'10' -   RPS SIO APPENDAGE HAS BEEN LOADED
DEBRSV09 EQU   X'08',,C'X' RESERVED
DEBRSV10 EQU   X'04',,C'X' RESERVED
DEBRSV11 EQU   X'02',,C'X' RESERVED
DEBRSV12 EQU   X'01',,C'X' RESERVED
DEBEXPTA DS    AL3 -     ADDRESS OF ISAM DEB EXTENSION           ICB379
         SPACE 2
***********************************************************************
*             DIRECT-ACCESS STORAGE DEVICE SECTION                    *
*                                                                     *
*        NOTE  IF ISAM IS BEING USED, THIS SECTION FOLLOWS THE ISAM   *
*              DEVICE DEPENDENT SECTION.  OTHERWISE, IT FOLLOWS THE   *
*              BASIC SECTION.                                         *
*                                                                     *
*              THERE IS ONE OF THESE SECTIONS FOR EACH EXTENT.        *
***********************************************************************
         SPACE 1
DEBDASD  DSECT
DEBUCBAD DS    0A  -     ADDRESS OF UCB ASSOCIATED WITH THIS DATA
*                        EXTENT
DEBDVMOD DS    B -       DEVICE MODIFIER - FILE MASK
DEBUCBA  DS    AL3 -     ADDRESS OF UCB ASSOCIATED WITH THIS DATA
*                        EXTENT
DEBBINUM DS    CL2 -     BIN NUMBER
DEBSTRCC DS    CL2 -     CYLINDER ADDRESS FOR THE START OF AN EXTENT
*                        LIMIT
DEBSTRHH DS    CL2 -     READ/WRITE TRACK ADDRESS FOR THE START OF AN
*                        EXTENT LIMIT
DEBENDCC DS    CL2 -     CYLINDER ADDRESS FOR THE END OF AN EXTENT
*                        LIMIT
DEBENDHH DS    CL2 -     READ/WRITE TRACK ADDRESS FOR THE END OF AN
*                        EXTENT LIMIT
DEBNMTRK DS    CL2 -     NUMBER OF TRACKS ALLOCATED TO A GIVEN EXTENT.
*                        FOR SPLIT CYLINDER DATA SETS, THIS FIELD
*                        REPRESENTS THE NUMBER OF TRACKS BETWEEN THE
*                        START ADDRESS OF THE EXTENT AND THE END
*                        ADDRESS OF THE EXTENT.
         SPACE 2
***********************************************************************
*        EXCP ACCESS METHOD, BSAM AND QSAM DEPENDENT SECTION          *
***********************************************************************
         SPACE 1
DEBACSMD DSECT
         SPACE 1
DEBVOLSQ DS    0CL2 -    VOLUME SEQUENCE NUMBER FOR MULTIVOLUME
*                        SEQUENTIAL DATA SETS
DEBVOLBT DS    B -       FIRST BYTE OF DEBVOLSQ (MDC016)        YA00318
DEBEXFUL EQU   X'80' -   SET BY EOV WHEN REWRITING AN OLD DIRECT ACCESS
*                        DATA SET TO INDICATE THAT ALL PREVIOUS
*                        EXISTING EXTENTS HAVE BEEN FILLED
*                        (MDC017)                               YA00318
DEBRSV36 EQU   X'40',,C'X' - RESERVED                            MDC018
DEBRSV37 EQU   X'20',,C'X' - RESERVED                            MDC018
DEBRSV38 EQU   X'10',,C'X' - RESERVED                            MDC018
DEBRSV39 EQU   X'08',,C'X' - RESERVED                            MDC018
DEBRSV40 EQU   X'04',,C'X' - RESERVED                            MDC018
DEBRSV41 EQU   X'02',,C'X' - RESERVED                            MDC018
DEBRSV42 EQU   X'01',,C'X' - RESERVED                            MDC018
DEBVLSEQ DS    FL1 -     FOR DIRECT ACCESS, SEQUENCE NUMBER OF THE
*                        VOLUME OF THE DATA SET RELATIVE TO THE FIRST
*                        VOLUME OF THE DATA SET.  FOR TAPE, SEQUENCE
*                        NUMBER OF THE VOLUME OF THE DATA SET RELATIVE
*                        TO THE FIRST VOLUME PROCESSED.(MDC019) YA00318
DEBVOLNM DS    CL2 -     TOTAL NUMBER OF VOLUMES IN A MULTIVOLUME
*                        SEQUENTIAL DATA SET.
DEBDSNM  DS    0CL8 -    MEMBER NAME.  THIS FIELD APPEARS ONLY WHEN AN
*                        OUTPUT DATA SET HAS BEEN OPENED FOR A MEMBER
*                        NAME AND THE DSCB SPECIFIES A PARTITIONED
*                        DATA SET.
DEBUTSAA DS    0A -      ADDRESS OF THE USER TOTALING SAVE AREA
DEBRSV13 DS    X -       RESERVED
DEBUTSAB DS    AL3 -     ADDRESS OF THE USER TOTALING SAVE AREA
DEBRSV14 DS    XL4  -    RESERVED (IF USER TOTALING WAS SPECIFIED)
DEBBLKSI DS    H -       MAXIMUM BLOCK SIZE  (MDC346)          @ZA03699
DEBLRECL DS    H -       LOGICAL RECORD LENGTH  (MDC347)       @ZA03699
         SPACE 2
***********************************************************************
*                  BPAM DEPENDENT SECTION                             *
***********************************************************************
         SPACE 2
         ORG   DEBACSMD
         SPACE 1
DEBEXTNM DS    0C -      FOR A PARTITIONED DATA SET OPENED FOR INPUT,
*                        EACH ONE-BYTE FIELD CONTAINS THE EXTENT NUMBER
*                        OF THE FIRST EXTENT ENTRY FOR EACH DATA SET
*                        EXCEPT THE FIRST, IF TWO OR MORE DATA SETS ARE
*                        CONCATENATED.  THE NUMBER OF BYTES IN THE
*                        FIELD IS EQUAL TO ONE LESS THAN THE NUMBER OF
*                        DATA SETS CONCATENATED.
DEBDSNAM DS    CL8 -     FOR A PARTITIONED DATA SET OPENED FOR
*                        OUTPUT FOR A MEMBER NAME, THIS FIELD IS THE
*                        MEMBER NAME.
         SPACE 2
***********************************************************************
*                  BDAM DEPENDENT SECTION                             *
***********************************************************************
         SPACE 2
         ORG   DEBACSMD
         SPACE 1
*                         *****************************************
*                         * FOR FIXED LENGTH RECORDS WITH THE     *
*                         * OPTION OF RELATIVE BLOCK ADDRESSING   *
*                         * (BUT NOT TRACK OVERFLOW)              *
*                         *****************************************
         SPACE 1
DEBDBLK  DS    0F -      ONE FOUR-BYTE FIELD FOR EACH EXTENT
*                        DESCRIBED IN THE DEVICE DEPENDENT SECTION
DEBDBPT  DS    AL1 -     NUMBER OF BLOCKS PER TRACK
DEBDBPE  DS    CL3 -     NUMBER OF BLOCKS PER EXTENT
         SPACE 2
         ORG   DEBACSMD
         SPACE 1
*                         *****************************************
*                         * FOR FIXED LENGTH RECORDS WITH THE     *
*                         * OPTION OF RELATIVE BLOCK ADDRESSING   *
*                         * AND TRACK OVERFLOW.                   *
*                         *****************************************
         SPACE 1
DEBDTPP  DS    FL4 -     NUMBER OF TRACKS PER PERIOD
DEBDBPP  DS    FL4 -     NUMBER OF BLOCKS PER PERIOD
         SPACE 1
*                         THE FOLLOWING FIELD OCCURS ONCE FOR
*                         EACH EXTENT.
         SPACE 1
DEBDBPEF DS    FL4 -     NUMBER OF BLOCKS PER EXTENT
         SPACE 2
***********************************************************************
*                 BTAM DEPENDENT SECTION                              *
*                                                                     *
*        NOTE  THIS SEGMENT IS ALWAYS PRESENT FOR BTAM.  IT IS USED   *
*              WHEN A BUFFER POOL OR DYNAMIC BUFFERING IS USED.       *
*              OTHERWISE, THE FIELDS ARE ZERO.                        *
***********************************************************************
         SPACE 2
         ORG   DEBACSMD
         SPACE 1
DEBTBFRA DS    0A -      ADDRESS OF THE BUFFER ROUTINE
DEBRSV15 DS    X -       RESERVED
DEBTBFRB DS    AL3 -     ADDRESS OF THE BUFFER ROUTINE
         SPACE 1
*                         THE FOLLOWING FIELD IS REPEATED FOR EACH
*                         CCW ON THE CHANNEL PROGRAM QUEUE
         SPACE 1
DEBTCCWA DS    0A -      ADDRESS OF THE FIRST (OR FOLLOWING) CCW ON
*                        THE QUEUE
DEBRSV16 DS    X -       RESERVED
DEBTCCWB DS    AL3 -     ADDRESS OF THE FIRST (OR FOLLOWING) CCW ON
*                        THE QUEUE
         SPACE 2
***********************************************************************
*                   GAM DEPENDENT SECTION                             *
***********************************************************************
         SPACE 2
         ORG   DEBACSMD
         SPACE 1
DEBFUCBA DS    0A -      ADDRESS OF FIRST UCB
DEBRSV17 DS    X -       RESERVED
DEBFUCBB DS    AL3 -     ADDRESS OF FIRST UCB
DEBLUCBA DS    0A -      ADDRESS OF LAST UCB
DEBRSV18 DS    X -       RESERVED
DEBLUCBB DS    AL3 -     ADDRESS OF LAST UCB
         SPACE 2
***********************************************************************
*                 ISAM LOAD MODE EXTENSION                            *
*                 POINTED TO BY DEBEXPT                               *
***********************************************************************
         SPACE 2
         ORG   DEBACSMD
         SPACE 1
DEBDCBFA DS    A -       ADDRESS OF DCB FIELD AREA               MDC013
DEBPUT   DS    A -       ADDRESS OF PUT MODULE                   ICB379
         SPACE 2
***********************************************************************
*                 ISAM SCAN MODE EXTENSION                            *
*                 POINTED TO BY DEBEXPT                               *
***********************************************************************
         SPACE 2
         ORG   DEBACSMD
         SPACE 1
         DS    A -       DEBDCBFA - ADDRESS OF DCB FIELD AREA    MDC014
DEBGET   DS    A -       ADDRESS OF GET OR PUT MODULE - THIS FIELD
*                        IS ALSO CALLED DEBPUT                   ICB379
DEBWKPT4 DS    A -       SAME AS DCBWKPT4 - ADDRESS OF UCB       ICB379
DEBWKPT5 DS    A -       SAME AS DCBWKPT5 - ADDRESS OF GET APPENDAGE
*                        MODULE                                  ICB379
DEBCREAD DS    A -       ADDRESS OF CHANNEL-END APPENDAGE FOR
*                        READ                                    ICB379
DEBCSETL DS    A -       ADDRESS OF CHANNEL-END APPENDAGE FOR
*                        SETL                                    ICB379
DEBCWRIT DS    A -       ADDRESS OF CHANNEL-END APPENDAGE FOR
*                        WRITE                                   ICB379
DEBCCHK  DS    A -       ADDRESS OF CHANNEL-END APPENDAGE FOR
*                        WRITE VALIDITY CHECK                    ICB379
DEBCREWT DS    A -       ADDRESS OF CHANNEL-END APPENDAGE FOR
*                        RE-WRITE                                ICB379
DEBCRECK DS    A -       ADDRESS OF CHANNEL-END APPENDAGE FOR
*                        RE-CHECK                                ICB379
DEBAREAD DS    A -       ADDRESS OF ABNORMAL-END APPENDAGE FOR
*                        READ                                    ICB379
DEBASETL DS    A -       ADDRESS OF ABNORMAL-END APPENDAGE FOR
*                        SETL                                    ICB379
DEBAWRIT DS    A -       ADDRESS OF ABNORMAL-END APPENDAGE FOR
*                        WRITE                                   ICB379
DEBACHK  DS    A -       ADDRESS OF ABNORMAL-END APPENDAGE FOR
*                        WRITE VALIDITY CHECK                    ICB379
DEBAREWT DS    A -       ADDRESS OF ABNORMAL-END APPENDAGE FOR
*                        RE-WRITE                                ICB379
DEBARECK DS    A -       ADDRESS OF ABNORMAL-END APPENDAGE FOR
*                        RE-CHECK                                ICB379
DEBRPSST DS    A -       ADDRESS OF RPS SIO APPENDAGE IF ADDRSPC=REAL
*                        WAS NOT SPECIFIED                       ICB379
         SPACE 2
***********************************************************************
*                 BISAM MODE EXTENSION                                *
*                 POINTED TO BY DEBEXPT                               *
***********************************************************************
         SPACE 2
         ORG   DEBACSMD
         SPACE 1
         DS    A -       DEBDCBFA - ADDRESS OF DCB FIELD AREA    MDC015
DEBDISAD DS    A -       ADDRESS OF PRIVILEGED MODULE ENTERED WHEN A
*                        BISAM MACRO INSTRUCTION IS EXECUTED     ICB379
         DS    A -       DEBWKPT4 - SAME AS DCBWKPT4 - ADDRESS OF THE
*                        PART 1 APPENDAGE MODULE (ABNORMAL AND
*                        CHANNEL-END APPENDAGES)                 ICB379
         DS    A -       DEBWKPT5 - SAME AS DCBWKPT5 - ADDRESS OF THE
*                        PART 2 APPENDAGE MODULE (ABNORMAL AND
*                        CHANNEL-END APPENDAGES)                 ICB379
DEBFREED DS    A -       ADDRESS OF DYNAMIC BUFFERING MODULE     ICB379
DEBRPSIO DS    A -       ADDRESS OF RPS SIO APPENDAGE MODULE IF
*                        ADDRSPC=REAL WAS NOT SPECIFIED AND IF DYNAMIC
*                        BUFFERING IS USED                       ICB379
DEBSIOA2 DS    A -       ADDRESS OF DYNAMIC BUFFERING APPENDAGE MODULE
*                        DISPLACED BY PAGE FIX (PGFX) APPENDAGE IF
*                        ADDRSPC=REAL WAS NOT SPECIFIED          ICB379
         SPACE 2
***********************************************************************
*                 SUBROUTINE NAME SECTION                             *
*                                                                     *
*        NOTE  FOLLOWS THE ACCESS METHOD DEPENDENT SECTION, OR THE    *
*              DEVICE DEPENDENT SECTION IF THERE IS NO ACCESS         *
*              METHOD SECTION                                         *
***********************************************************************
         SPACE 1
DEBSUBNM DSECT
DEBSUBID DS    CL2 -     SUBROUTINE IDENTIFICATION.  EACH ACCESS METHOD
*                        SUBROUTINE, APPENDAGE SUBROUTINE, AND IRB
*                        ROUTINE WILL HAVE A UNIQUE EIGHT-BYTE NAME.
*                        THE LOW-ORDER TWO BYTES OF EACH ROUTINE NAME
*                        WILL BE IN THIS FIELD IF THE SUBROUTINE IS
*                        LOADED BY THE OPEN ROUTINES.
         SPACE 2
***********************************************************************
*                 DEB EXTENSION (OS/VS2)                              *
*                 POINTED TO BY DEBXTNP                               *
***********************************************************************
         SPACE 1
DEBXTN   DSECT
DEBXLNGH DS    H -       LENGTH OF DEB EXTENSION                 MDC002
DEBXFLG1 DS    B -       FLAG BYTE  (MDC027)                     YM1272
DEBXCDCB EQU   X'80' -   DEBDCBAD FIELD CONTAINS THE ADDRESS OF A
*                        COPIED DCB.  USED BY END-OF-VOLUME, TCLOSE AND
*                        TASK CLOSE.  (MDC028)                   YM1272
DEBXTSKC EQU   X'40' -   TASK CLOSE IS CLOSING THE RELATED DCB.  SET BY
*                        TASK CLOSE AND INTERROGATED BY END-OF-VOLUME,
*                        FEOV AND TCLOSE FOR DEB'S NOT ON THE CURRENT
*                        TCB DEB CHAIN.  (MDC031)                YM2869
DEBXDSSI EQU   X'20' -   DATA SET SECURITY INDICATOR.  SET BY OPEN AND
*                        CHECKPOINT.  INTERROGATED BY EOV.
*                        (MDC348)                              @Z40RP9A
DEBXWIND EQU   X'10' -   MSS WINDOW PROCESSING INDICATOR.      @ZA37313
*                        SET BY OPEN.  INTERROGATED BY EOV,    @ZA37313
*                        SAM EOB AND CLOSE.                    @ZA37313
DEBXACIS EQU   X'08' -   ACQUIRE ISSUED WITH INHIBIT STAGE     @ZA37313
*                        INDICATED DURING OPEN OR EOV.         @ZA37313
*                        SET BY OPEN AND EOV.                  @ZA37313
*                        INTERROGATED BY SVC 126.              @ZA37313
DEBXRV45 EQU   X'04',,C'X' - RESERVED
DEBXRV46 EQU   X'02',,C'X' - RESERVED
DEBXRV47 EQU   X'01',,C'X' - RESERVED
DEBXRV48 DS    X -       RESERVED
DEBXDSAB DS    A -       POINTER TO DSAB                         MDC004
DEBXDCBM DS    XL4 -     DCB MODIFICATION MASK USED BY I/O SUPPORT
*                                                                MDC005
DEBXDBPR DS    A -       POINTER TO DEB                          MDC006
DEBXDSO1 DS    B -       SAME AS DCBDSORG BYTE 1                 MDC020
DEBXDSO2 DS    B -       SAME AS DCBDSORG BYTE 2                 MDC021
DEBXMCF1 DS    B -       SAME AS DCBMACRF BYTE 1                 MDC022
DEBXMCF2 DS    B -       SAME AS DCBMACRF BYTE 2                 MDC023
DEBXXARG DS    A -       ADDRESS OF BDAM READ EXCLUSIVE LIST     MDC024
DEBXOPNJ DS    A -       POINTER TO DSAB (SEPARATE FROM DEBXDSAB)
*                        DYNAMICALLY ALLOCATED BY OPEN TYPE=J.  THIS
*                        POINTER WILL EXIST FOR NON-AUTHORIZED CALLERS
*                        OF OPEN TYPE=J FOR A DIRECT ACCESS DATA SET
*                        WHERE THE DATA SET NAME BEING OPENED IS
*                        DIFFERENT FROM THE DATA SET DESCRIBED BY THE
*                        DDNAME IN DCB AND THE JFCNWRIT BIT IS ON IN
*                        JFCB.  THE POINTER WILL BE USED BY CLOSE TO
*                        DYNAMICALLY UNALLOCATE THE DATA SET.
*                        (MDC352)                              @ZA02193
DEBXSAMB DS    A -       ADDRESS OF SAM BLOCK (SAMB)  (MDC351) @Z40FP9A
DEBXOPET DS    XL8 -     DATASET OPEN TIME SET BY OPEN INITIAL @ZA39299
         POP   PRINT
         MEND  , */
*%DEBL2 : ;
*%IF IKEPLS=''  %THEN
*    %GOTO DEBL3;
*%IHALPUSH='@LISTPUSH';
*%IHALPOP='@LISTPOP';
*%IHALOFF='@LISTOFF';
*IHALPUSH;
*%IF IHALIST='YES'  %THEN
*    %GOTO DEBL3;
*IHALOFF;
*%DEBL3 : ;
* /* *************************************************************** */
* /*                  DEB BASIC SECTION                              */
* /* *************************************************************** */
*
* DECLARE
* 1 DEBBASIC BASED(DEBPTR) BDY(WORD),
*     3 DEBTCBAD PTR(31),            /* ADDRESS OF TCB FOR THIS DEB  */
*      4 DEBNMSUB CHAR(1),           /* NUMBER OF SUBROUTINES LOADED
*                                       BY OPEN EXECUTOR ROUTINES    */
*      4 DEBTCBB  PTR(24),           /* ADDRESS OF TCB FOR THIS DEB  */
*     3 DEBDEBAD PTR(31),            /* ADDRESS OF THE NEXT DEB IN
*                                       THE SAME TASK                */
*      4 DEBAMLNG CHAR(1),           /* NUMBER OF BYTES IN THE ACCESS
*                                       METHOD DEPENDENT SECTION.
*                                       FOR BDAM THIS FIELD CONTAINS
*                                       THE LENGTH EXPRESSED IN
*                                       NUMBER OF WORDS              */
*      4 DEBDEBB  PTR(24),           /* *** SAME AS DEBDEBAD ABOVE   */
*     3 DEBIRBAD PTR(31),            /* IRB STORAGE ADDRESS USED FOR
*                                       APPENDAGE ASYNCHRONOUS EXITS */
*      4 DEBOFLGS CHAR(1),           /* DATA SET STATUS FLAGS        */
*       5 DEBDISP  BIT(2),           /* DATA SET DISPOSITION FLAGS   */
* %DCL DEBDSOLD CHAR;
* %DEBDSOLD='''01''B';               /* OLD                          */
* %DCL DEBDSMOD CHAR;
* %DEBDSMOD='''10''B';               /* MOD                          */
* %DCL DEBDSNEW CHAR;
* %DEBDSNEW='''11''B';               /* NEW                          */
*       5 DEBEOF   BIT(1),           /* END-OF-FILE (EOF) ENCOUNTERED
*                                       (TAPE INPUT)
*                                       FORMAT 1 DSCB BIT 93.0
*                                       INDICATES THAT THE CURRENT
*                                       VOLUME IS THE LAST VOLUME OF
*                                       THE DATA SET (DASD INPUT)    */
*       5 DEBRLSE  BIT(1),           /* RELEASE UNUSED EXTERNAL
*                                       STORAGE (DASD)
*                                       EMULATOR TAPE WITH SECOND
*                                       GENERATION FORMAT.  TAPE MAY
*                                       CONTAIN BLOCKS SHORTER THAN
*                                       12 CHARACTERS (TAPE)         */
*       5 DEBDCB   BIT(1),           /* DCB MODIFICATION             */
*       5 DEBSPLIT BIT(1),           /* SPLIT CYLINDER (DASD)
*                                       7-TRACK EMULATOR TAPE WITH
*                                       POSSIBLE MIXED PARITY RECORDS
*                                       (TAPE)                       */
*       5 DEBLABEL BIT(1),           /* NONSTANDARD LABELS           */
*       5 DEBRERR  BIT(1),           /* USE REDUCED ERROR RECOVERY
*                                       PROCEDURE (TAPE)
*                                       CONCATENATED PARTITIONED
*                                       ORGANIZATION DATA SETS
*                                       PROCESSED USING BPAM (DASD)  */
*      4 DEBIRBB  PTR(24),           /* *** SAME AS DEBIRBAD ABOVE   */
*     3 DEBOPATB CHAR(1),            /* FLAGS INDICATING BOTH THE
*                                       METHOD OF I/O PROCESSING AND
*                                       THE DISPOSITION THAT IS TO BE
*                                       PERFORMED WHEN AN END-OF-VOLUME
*                                       (EOV) CONDITION OCCURS       */
*      4 DEBABEND BIT(1),            /* SET BY ABEND INDICATING A
*                                       SYSABEND OR SYSUDUMP DATA
*                                       SET (OS/VS2)                 */
*      4 DEBZERO  BIT(1),            /* ALWAYS ZERO                  */
*      4 DEBPOSIT BIT(2),            /* DATA SET POSITIONING FLAGS   */
* %DCL DEBRERED CHAR;
* %DEBRERED='''01''B';               /* REREAD                       */
* %DCL DEBLEAVE CHAR;
* %DEBLEAVE='''11''B';               /* LEAVE                        */
*      4 DEBACCS  BIT(4),            /* TYPE OF I/O ACCESSING BEING
*                                       DONE                         */
* %DCL DEBINPUT CHAR;
* %DEBINPUT='''0000''B';             /* INPUT                        */
* %DCL DEBOUTPT CHAR;
* %DEBOUTPT='''1111''B';             /* OUTPUT                       */
* %DCL DEBINOUT CHAR;
* %DEBINOUT='''0011''B';             /* INOUT                        */
* %DCL DEBOUTIN CHAR;
* %DEBOUTIN='''0111''B';             /* OUTIN                        */
* %DCL DEBRDBCK CHAR;
* %DEBRDBCK='''0001''B';             /* RDBACK                       */
* %DCL DEBUPDAT CHAR;
* %DEBUPDAT='''0100''B';             /* UPDAT                        */
*     3 DEBQSCNT CHAR(1),            /* PURGE (SVC 16) - QUIESCE
*                                       COUNT.  NUMBER OF DEVICES
*                                       EXECUTING USER'S CHANNEL
*                                       PROGRAMS, AS SHOWN BY BITS 5
*                                       AND 6 OF UCBFL1 FIELDS       */
*     3 DEBFLGS1 CHAR(1),            /* FLAG FIELD                   */
*      4 DEBPWCKD BIT(1),            /* PASSWORD WAS SUPPLIED DURING
*                                       OPEN.  EOV WILL NOT REQUEST A
*                                       PASSWORD FOR EACH ADDITIONAL
*                                       VOLUME OF A MULTIVOLUME DATA
*                                       SET                          */
*      4 DEBEOFDF BIT(1),            /* SET BY EOV TO INFORM CLOSE
*                                       THAT AN END-OF-FILE HAS BEEN
*                                       ENCOUNTERED AND, THEREFORE,
*                                       DEFERRED LABEL PROCESSING IS
*                                       ALLOWED                      */
*      4 DEBRSIOA BIT(1),            /* SIO APPENDAGE RE-ENTRY
*                                       AUTHORIZATION BIT (OS/VS1)
*                                       (MDC331)             @XM06077*/
*      4 DEBEXCPA BIT(1),            /* EXCP IS AUTHORIZED   @ZA40332
*                                       FOR THIS DEB         @ZA40332*/
*      4 DEBCINDI BIT(1),            /* DCB ASSOCIATED WITH THIS DEB
*                                       IS BEING PROCESSED BY THE
*                                       COMPATIBILITY INTERFACE
*                                       ROUTINES (VSAM)        ICB462*/
*      4 DEBF1CEV BIT(1),            /* EOV PROCESSING OCCURRED
*                                       DURING CLOSE PROCESSING.
*                                       TESTED AND SET TO ZERO BY
*                                       CLOSE, SET TO ONE BY EOV.
*                                       (ICB353)               A42228*/
*      4 DEBAPFIN BIT(1),            /* IF ON, AUTHORIZED PROGRAMS
*                                       CAN BE LOADED          MDC001*/
*      4 DEBXTNIN BIT(1),            /* IF ONE, DEB EXTENSION EXISTS
*                                       (OS/VS2)               MDC007*/
*     3 DEBRSV05 CHAR(1),            /* RESERVED                     */
*     3 DEBUSRPG PTR(31),            /* ADDRESS OF FIRST IOB IN THE
*                                       USER PURGE CHAIN  (OS/VS1)
*                                       ADDRESS OF PURGED I/O RESTORE
*                                       LIST (PIRL)  (OS/VS2)
*                                       (MDC029)               YM3158*/
*      4 DEBNMEXT CHAR(1),           /* NUMBER OF EXTENTS SPECIFIED
*                                       IN DSCB'S                    */
*      4 DEBUSRPB PTR(24),           /* *** SAME AS DEBUSRPG ABOVE   */
*     3 DEBRRQ   PTR(31),            /* POINTER TO RELATED REQUEST
*                                       QUEUE (OS/VS2)         MDC026*/
*      4 DEBECBAD PTR(31),           /* ADDRESS OF A PARAMETER LIST
*                                       USED TO LOCATE THE PURGE ECB
*                                       FOR AN SVC PURGE REQUEST
*                                       (OS/VS1)               MDC025*/
*       5 DEBPRIOR CHAR(1),          /* PRIORITY OF THE TASK OWNING
*                                       DEB                          */
*       5 DEBECBB  PTR(24),          /* *** SAME AS DEBECBAD ABOVE   */
*     3 DEBDCBAD PTR(31),            /* ADDRESS OF DCB ASSOCIATED
*                                       WITH THIS DEB                */
*      4 DEBPROTG CHAR(1),           /* TASK PROTECTION KEY IN HIGH-
*                                       ORDER 4 BITS                 */
*       5 DEBDEBID CHAR(1),          /* A HEX F IN LOW-ORDER 4 BITS
*                                       TO IDENTIFY THIS BLOCK AS A
*                                       DEB                          */
*      4 DEBDCBB PTR(24),            /* *** SAME AS DEBDCBAD ABOVE   */
*     3 DEBAPPAD PTR(31),            /* ADDRESS OF THE I/O APPENDAGE
*                                       VECTOR TABLE                 */
*      4 DEBEXSCL CHAR(1),           /* EXTENT SCALE- 4 FOR DIRECT
*                                       ACCESS DEVICE AND 3525 CARD
*                                       PUNCH WITH DEVICE-ASSOCIATED
*                                       DATA SET SUPPORT AND 2 FOR
*                                       NONDIRECT ACCESS DEVICE AND
*                                       COMMUNICATION DEVICE.  THIS
*                                       FIELD IS USED TO DETERMINE
*                                       THE SIZE OF THE DEVICE
*                                       DEPENDENT SECTION      ICB394*/
*      4 DEBAPPB  PTR(24),           /* *** SAME AS DEBAPPAD ABOVE   */
*     3 DEBBASND CHAR(0) BDY(WORD);
*
* /* *************************************************************** */
* /*   UNIT RECORD, MAGNETIC TAPE, TELECOMMUNICATIONS DEVICES SECTION*/
* /*                                                                 */
* /*     NOTE  FOR TELECOMMUNICATIONS DEVICES, THE UCB ADDRESS       */
* /*           IS REPEATED FOR EACH LINE ASSIGNED                    */
* /* *************************************************************** */
*
*  DECLARE 1 DEBBAS02
*%IF IKEPLS='2'  %THEN
*    %GOTO DEBA3;
*       BASED(ADDR(DEBBASND)) BDY(WORD),
*%GOTO DEBA4;
*%DEBA3 : ;
*       DEF(DEBBASND) BDY(WORD),
*%DEBA4 : ;
*     3 DEBDDS1 BDY(WORD),
*      4 DEBSUCBA PTR(31),           /* ADDRESS OF UCB ASSOCIATED
*                                       WITH A GIVEN DATA SET        */
*       5 DEBSDVM CHAR(1),           /* DEVICE MODIFIER.  FOR MAGNETIC
*                                       TAPE, SET MODE OPERATION CODE.
*                                       FOR UNIT RECORD, NOT USED.   */
*       5 DEBSUCBB PTR(24),          /* *** SAME AS DEBSUCBA ABOVE   */
*      4 DEBDEVED CHAR(0) BDY(WORD), /* END OF COMMON UNIT RECORD
*                                       FIELDS  (MDC330)     @X04AA9A*/
*
* /*     THE FOLLOWING FIELDS ARE PRESENT ONLY FOR THE 3525 WITH     */
* /*     DEVICE-ASSOCIATED DATA SET SUPPORT                          */
*
*      4 DEBRDCB    PTR(31),         /* ADDRESS OF DCB FOR THE READ
*                                       ASSOCIATED DATA SET    ICB394*/
*       5 DEBRSV06   CHAR(1),        /* RESERVED               ICB394*/
*       5 DEBRDCBA   PTR(24),        /* SAME AS DEBRDCB ABOVE  ICB394*/
*      4 DEBPDCB    PTR(31),         /* ADDRESS OF DCB FOR THE PUNCH
*                                       ASSOCIATED DATA SET    ICB394*/
*       5 DEBRSV07   CHAR(1),        /* RESERVED               ICB394*/
*       5 DEBPDCBA   PTR(24),        /* SAME AS DEBPDCB ABOVE  ICB394*/
*      4 DEBWDCB    PTR(31),         /* ADDRESS OF DCB FOR THE PRINT
*                                       ASSOCIATED DATA SET    ICB394*/
*       5 DEBRSV08   CHAR(1),        /* RESERVED               ICB394*/
*       5 DEBWDCBA   PTR(24);        /* SAME AS DEBWDCB ABOVE  ICB394*/
*
*
* /* *************************************************************** */
* /*                3540 ACCESS METHOD DEPENDENT SECTION     @X04AA9A*/
* /*                (OS/VS1 ONLY)                            @X04AA9A*/
* /*                                                                 */
* /*     NOTE  THIS SECTION FOLLOWS DEBSUCBA IN UNIT RECORD,         */
* /*           MAGNETIC TAPE, TELECOMMUNICATIONS DEVICES SECTION     */
* /*           IF DEB IS FOR 3540 DEVICE.                    @X04AA9A*/
* /* *************************************************************** */
*
* DECLARE 1 DEBACS09
*%IF IKEPLS='2'  %THEN
*    %GOTO DEBA5;
*       BASED(ADDR(DEBDEVED)) BDY(WORD),   /*                @X04AA9A*/
*%GOTO DEBA6;
*%DEBA5 : ;
*       DEF(DEBDEVED) BDY(WORD),     /*                      @X04AA9A*/
*%DEBA6 : ;
*    2 DEBASC09 CHAR(16) BDY(WORD),  /* 3540 ACCESS METHOD DEPENDENT
*                                       SECTION  (MDC317)    @X04AA9A*/
*     3 DEBVOLAC CHAR(1),            /* VOLUME ACCESSABILITY
*                                       INDICATOR  (MDC327)  @X04AA9A*/
*     3 DEBDSSQL CHAR(1),            /* DATA SET SECURITY QUALIFIER
*                                       (MDC328)             @X04AA9A*/
*     3 DEBVSEQU PTR(8),             /* VOLUME SEQUENCE NUMBER
*                                       (MDC318)             @X04AA9A*/
*     3 DEBEAMFG BIT(8),             /* FLAG BYTE  (MDC319)  @X04AA9A*/
*      4 DEBMULTI BIT(1),            /* MULTI-VOLUME INDICATOR
*                                       (MDC320)             @X04AA9A*/
*      4 DEBDSOPN BIT(1),            /* DATA SET IS OPEN
*                                       (MDC321)             @X04AA9A*/
*      4 DEBVAMSG BIT(1),            /* VOLUME ACCESSABILITY MESSAGE
*                                       HAS BEEN ISSUED  (MDC329)
*                                                            @X04AA9A*/
*      4 DEBSECVL BIT(1),            /* SECURE VOLUME  (MDC332)
*                                                            @X04AA9A*/
*      4 DEBRV004 BIT(1),            /* RESERVED             @X04AA9A*/
*      4 DEBRV005 BIT(1),            /* RESERVED             @X04AA9A*/
*      4 DEBRV006 BIT(1),            /* RESERVED             @X04AA9A*/
*      4 DEBRV007 BIT(1),            /* RESERVED             @X04AA9A*/
*     3 DEBDSID  CHAR(8),            /* DATA SET IDENTIFIER (DSID)
*                                       (INPUT)  (MDC305)    @X04AA9A*/
*      4 DEBEXDTE CHAR(6),           /* EXPIRATION DATE (OUTPUT)
*                                       (MDC333)             @X04AA9A*/
*      4 DEBWTPTI CHAR(1),           /* WRITE PROTECT INDICATOR
*                                       (OUTPUT)  (MDC334)   @X04AA9A*/
*      4 DEBRV008 CHAR(1),           /* RESERVED (OUTPUT)  (MDC335)
*                                                            @X04AA9A*/
*     3 DEBEOD   CHAR(4) BDY(WORD),  /* END OF DATA (EOD) ADDRESS
*                                       (INPUT)  (MDC306)    @X04AA9A*/
*      4 DEBBOE   CHAR(4) BDY(WORD), /* BEGINNING OF EXTENT (BOE)
*                                       ADDRESS (OUTPUT)  (MDC322)
*                                                            @X04AA9A*/
*       5 DEBEODRV PTR(8),           /* RESERVED (MDC307)    @X04AA9A*/
*        6 DEBBOERV PTR(8),          /* RESERVED  (MDC323)   @X04AA9A*/
*       5 DEBEODTT PTR(8),           /* EOD TRACK NUMBER
*                                       (MDC308)             @X04AA9A*/
*        6 DEBBOETT PTR(8),          /* BOE TRACK NUMBER
*                                       (MDC324)             @X04AA9A*/
*       5 DEBEOD0  PTR(8),           /* MUST BE ZERO
*                                       (MDC309)             @X04AA9A*/
*        6 DEBBOE0  PTR(8),          /* MUST BE ZERO
*                                       (MDC325)             @X04AA9A*/
*       5 DEBEODSS PTR(8),           /* EOD SECTOR NUMBER
*                                       (MDC310)             @X04AA9A*/
*        6 DEBBOESS PTR(8);          /* BOE SECTOR NUMBER
*                                       (MDC326)             @X04AA9A*/
*
*
* /* *************************************************************** */
* /*             DEB ISAM DEPENDENT SECTION                          */
* /*                                                                 */
* /*     NOTE  PRESENT ONLY IF ISAM IS USED.  FOLLOWS THE BASIC      */
* /*           SECTION AND PRECEDES THE DIRECT ACCESS STORAGE        */
* /*           DEVICE SECTION.  COUNTED AS ONE EXTENT IN DEBNMEXT.   */
* /* *************************************************************** */
*
*  DECLARE 1 DEBBAS01
*%IF IKEPLS='2'  %THEN
*    %GOTO DEBA1;
*       BASED(ADDR(DEBBASND)) BDY(WORD),
*%GOTO DEBA2;
*%DEBA1 : ;
*       DEF(DEBBASND) BDY(WORD),
*%DEBA2 : ;
*    2 DEBISAM BDY(WORD),
*     3 DEBFIEAD PTR(31),            /* ADDRESS OF FIRST INDEX
*                                       EXTENT                       */
*       4 DEBNIEE  CHAR(1),          /* NUMBER OF EXTENTS OF
*                                       INDEPENDENT INDEX AREA       */
*       4 DEBFIEB  PTR(24),          /* *** SAME AS DEBFIEAD ABOVE   */
*     3 DEBFPEAD PTR(31),            /* ADDRESS OF THE FIRST PRIME
*                                       DATA EXTENT                  */
*      4 DEBNPEE  CHAR(1),           /* NUMBER OF EXTENTS OF PRIME
*                                       DATA AREA (M=0 EXTENT)       */
*      4 DEBFPEB  PTR(24),           /* *** SAME AS DEBFPEAD ABOVE   */
*     3 DEBFOEAD PTR(31),            /* ADDRESS OF THE FIRST
*                                       OVERFLOW EXTENT              */
*      4 DEBNOEE  CHAR(1),           /* NUMBER OF EXTENTS OF
*                                       INDEPENDENT OVERFLOW AREA    */
*      4 DEBFOEB  PTR(24),           /* *** SAME AS DEBFOEAD ABOVE   */
*     3 DEBEXPT  PTR(31),            /* ADDRESS OF ISAM DEB
*                                       EXTENSION              ICB379*/
*      4 DEBRPSID BIT(8),            /* ROTATIONAL POSITION SENSING
*                                       (RPS) DEVICE INDICATORS      */
*       5 DEBRPSP  BIT(1),           /* PRIME DATA AREA IS ON RPS
*                                       DEVICE                       */
*       5 DEBRPSI  BIT(1),           /* INDEPENDENT INDEX AREA IS ON
*                                       RPS DEVICE                   */
*       5 DEBRPSO  BIT(1),           /* INDEPENDENT OVERFLOW AREA IS
*                                       ON RPS DEVICE                */
*       5 DEBRPSAP BIT(1),           /* RPS SIO APPENDAGE HAS BEEN
*                                       LOADED                       */
*       5 DEBRSV09 BIT(1),           /* RESERVED                     */
*       5 DEBRSV10 BIT(1),           /* RESERVED                     */
*       5 DEBRSV11 BIT(1),           /* RESERVED                     */
*       5 DEBRSV12 BIT(1),           /* RESERVED                     */
*      4 DEBEXPTA PTR(24);           /* SAME AS DEBEXPT ABOVE  ICB379*/
*
* /* *************************************************************** */
* /*          DIRECT ACCESS STORAGE DEVICE SECTION                   */
* /*                                                                 */
* /*     NOTE  IF ISAM IS BEING USED, THIS SECTION FOLLOWS THE       */
* /*           ISAM DEVICE DEPENDENT SECTION.  OTHERWISE, IT         */
* /*           FOLLOWS THE BASIC SECTION.                            */
* /*                                                                 */
* /*           THERE IS ONE OF THESE SECTIONS FOR EACH EXTENT.       */
* /* *************************************************************** */
*
* DECLARE
*   1 DEBDASD BASED(DEBDAPTR) BDY(WORD),
*     3 DEBUCBAD PTR(31),            /* ADDRESS OF UCB ASSOCIATED
*                                       WITH THIS DATA EXTENT        */
*      4 DEBDVMOD CHAR(1),           /* DEVICE MODIFIER - FILE MASK  */
*      4 DEBUCBA  PTR(24),           /* *** SAME AS DEBUCBAD ABOVE   */
*     3 DEBBINUM CHAR(2),            /* BIN NUMBER                   */
*     3 DEBSTRCC CHAR(2),            /* CYLINDER ADDRESS FOR THE
*                                       START OF AN EXTENT LIMIT     */
*     3 DEBSTRHH CHAR(2),            /* READ/WRITE TRACK ADDRESS FOR
*                                       THE START OF AN EXTENT LIMIT */
*     3 DEBENDCC CHAR(2),            /* CYLINDER ADDRESS FOR THE END
*                                       OF AN EXTENT LIMIT           */
*     3 DEBENDHH CHAR(2),            /* READ/WRITE TRACK ADDRESS FOR
*                                       THE END OF AN EXTENT LIMIT   */
*     3 DEBNMTRK CHAR(2);            /* NUMBER OF TRACKS ALLOCATED
*                                       TO A GIVEN EXTENT.  FOR SPLIT
*                                       CYLINDER DATA SETS, THIS
*                                       FIELD REPRESENTS THE NUMBER
*                                       OF TRACKS BETWEEN THE START
*                                       ADDRESS OF THE EXTENT AND THE
*                                       END ADDRESS OF THE EXTENT.   */
*
*
* /* *************************************************************** */
* /*     EXCP ACCESS METHOD, BSAM AND QSAM DEPENDENT SECTION         */
* /* *************************************************************** */
*
* DECLARE
*    1 DEBACSMD BASED(DEBEXPTR) BDY(WORD),
*     3 DEBVOLSQ CHAR(2),            /* VOLUME SEQUENCE NUMBER FOR
*                                       MULTIVOLUME SEQUENTIAL DATA
*                                       SETS                         */
*      4 DEBVOLBT BIT(8),            /* FIRST BYTE OF DEBVOLSQ
*                                       (MDC016)              YA00318*/
*       5 DEBEXFUL BIT(1),           /* SET BY EOV WHEN REWRITING AN
*                                       OLD DIRECT ACCESS DATA SET TO
*                                       INDICATE THAT ALL PREVIOUS
*                                       EXISTING EXTENTS HAVE BEEN
*                                       FILLED (MDC017)       YA00318*/
*       5 DEBRSV36 BIT(1),           /* RESERVED               MDC018*/
*       5 DEBRSV37 BIT(1),           /* RESERVED               MDC018*/
*       5 DEBRSV38 BIT(1),           /* RESERVED               MDC018*/
*       5 DEBRSV39 BIT(1),           /* RESERVED               MDC018*/
*       5 DEBRSV40 BIT(1),           /* RESERVED               MDC018*/
*       5 DEBRSV41 BIT(1),           /* RESERVED               MDC018*/
*       5 DEBRSV42 BIT(1),           /* RESERVED               MDC018*/
*      4 DEBVLSEQ PTR(8),            /* FOR DIRECT ACCESS, SEQUENCE
*                                       NUMBER OF THE VOLUME OF THE
*                                       DATA SET RELATIVE TO THE
*                                       FIRST VOLUME OF THE DATA SET.
*                                       FOR TAPE, SEQUENCE NUMBER OF
*                                       THE VOLUME OF THE DATA SET
*                                       RELATIVE TO THE FIRST VOLUME
*                                       PROCESSED.  (MDC019)  YA00318*/
*     3 DEBVOLNM CHAR(2),            /* TOTAL NUMBER OF VOLUMES IN A
*                                       MULTIVOLUME SEQUENTIAL DATA
*                                       SET.                         */
*     3 DEBDSNM CHAR(8) BDY(WORD),   /* MEMBER NAME.  THIS FIELD
*                                       APPEARS ONLY WHEN AN OUTPUT
*                                       DATA SET HAS BEEN OPENED FOR
*                                       A MEMBER NAME AND THE DSCB
*                                       SPECIFIES A PARTITIONED
*                                       DATA SET.                    */
*       5 DEBUTSAA PTR(31),          /* ADDRESS OF THE USER TOTALING
*                                       SAVE AREA                    */
*        6 DEBRSV13 CHAR(1),         /* RESERVED                     */
*        6 DEBUTSAB PTR(24),         /* *** SAME AS DEBUTSAA ABOVE   */
*       5 DEBRSV14 CHAR(4) BDY(WORD),/* RESERVED (IF USER TOTALING
*                                       WAS SPECIFIED)               */
*     3 DEBBLKSI FIXED(15),          /* MAXIMUM BLOCK SIZE
*                                       (MDC346)             @ZA03699*/
*     3 DEBLRECL FIXED(15);          /* LOGICAL RECORD LENGTH
*                                       (MDC347)             @ZA03699*/
*
*
* /* *************************************************************** */
* /*               BPAM DEPENDENT SECTION                            */
* /* *************************************************************** */
*
*
* DECLARE 1 DEBACS01
*       BASED(DEBEXPTR) BDY(WORD),
*     3 DEBDSNAM CHAR(8) BDY(WORD),  /* FOR A PARTITIONED DATA SET
*                                       OPENED FOR OUTPUT FOR A
*                                       MEMBER NAME, THIS FIELD IS
*                                       THE MEMBER NAME.             */
*      4 DEBEXTNM CHAR(1);           /* FOR A PARTITIONED DATA SET
*                                       OPENED FOR INPUT, EACH ONE-
*                                       BYTE FIELD CONTAINS THE
*                                       EXTENT NUMBER OF THE FIRST
*                                       EXTENT ENTRY FOR EACH DATA
*                                       SET EXCEPT THE FIRST, IF TWO
*                                       OR MORE DATA SETS ARE
*                                       CONCATENATED. THE NUMBER OF
*                                       BYTES IN THE FIELD IS EQUAL
*                                       TO ONE LESS THAN THE NUMBER
*                                       OF DATA SETS CONCATENATED.   */
*
*
* /* *************************************************************** */
* /*               BDAM DEPENDENT SECTION                            */
* /* *************************************************************** */
*
*
* DECLARE 1 DEBACS02
*       BASED(DEBEXPTR) BDY(WORD),
*
* /*                      *****************************************  */
* /*                      * FOR FIXED LENGTH RECORDS WITH THE     *  */
* /*                      * OPTION OF RELATIVE BLOCK ADDRESSING   *  */
* /*                      * (BUT NOT TRACK OVERFLOW)              *  */
* /*                      *****************************************  */
*
*     3 DEBDBLK  FIXED(31),          /* ONE FOUR-BYTE FIELD FOR EACH
*                                       EXTENT DESCRIBED IN THE
*                                       DEVICE DEPENDENT SECTION.    */
*      4 DEBDBPT  PTR(8),            /* NUMBER OF BLOCKS PER TRACK   */
*      4 DEBDBPE  CHAR(3);           /* NUMBER OF BLOCKS PER EXTENT  */
*
*
* DECLARE 1 DEBACS03
*       BASED(DEBEXPTR) BDY(WORD),
*
* /*                      *****************************************  */
* /*                      * FOR FIXED LENGTH RECORDS WITH THE     *  */
* /*                      * OPTION OF RELATIVE BLOCK ADDRESSING   *  */
* /*                      * AND TRACK OVERFLOW.                   *  */
* /*                      *****************************************  */
*
*     3 DEBDTPP FIXED(31),           /* NUMBER OF TRACKS PER PERIOD  */
*     3 DEBDBPP FIXED(31),           /* NUMBER OF BLOCKS PER PERIOD  */
* /*                      THE FOLLOWING FIELD OCCURS ONCE FOR        */
* /*                      EACH EXTENT.                               */
*     3 DEBDBPEF FIXED(31);          /* NUMBER OF BLOCKS PER EXTENT  */
*
*
* /* *************************************************************** */
* /*              BTAM DEPENDENT SECTION                             */
* /*                                                                 */
* /*     NOTE  THIS SEGMENT IS ALWAYS PRESENT FOR BTAM.  IT IS       */
* /*           USED WHEN A BUFFER POOL OR DYNAMIC BUFFERING IS       */
* /*           USED.  OTHERWISE, THE FIELDS ARE ZERO.                */
* /* *************************************************************** */
*
*
* DECLARE 1 DEBACS04
*       BASED(DEBEXPTR) BDY(WORD),
*     3 DEBTBFRA PTR(31),            /* ADDRESS OF THE BUFFER ROUTINE*/
*      4 DEBRSV15 CHAR(1),           /* RESERVED                     */
*      4 DEBTBFRB PTR(24),           /* ADDRESS OF THE BUFFER ROUTINE*/
* /*                      THE FOLLOWING FIELD IS REPEATED FOR EACH   */
* /*                      CCW ON THE CHANNEL PROGRAM QUEUE           */
*     3 DEBTCCWA PTR(31),            /* ADDRESS OF THE FIRST (OR
*                                       FOLLOWING) CCW ON THE QUEUE  */
*      4 DEBRSV16 CHAR(1),           /* RESERVED                     */
*      4 DEBTCCWB PTR(24);           /* *** SAME AS DEBCCWA ABOVE    */
*
*
* /* *************************************************************** */
* /*                GAM DEPENDENT SECTION                            */
* /* *************************************************************** */
*
*
* DECLARE 1 DEBACS05
*       BASED(DEBEXPTR) BDY(WORD),
*     3 DEBFUCBA PTR(31),            /* ADDRESS OF FIRST UCB         */
*      4 DEBRSV17 CHAR(1),           /* RESERVED                     */
*      4 DEBFUCBB PTR(24),           /* ADDRESS OF FIRST UCB         */
*     3 DEBLUCBA PTR(31),            /* ADDRESS OF LAST UCB          */
*      4 DEBRSV18 CHAR(1),           /* RESERVED                     */
*      4 DEBLUCBB PTR(24);           /* ADDRESS OF LAST UCB          */
*
*
* /* *************************************************************** */
* /*              ISAM LOAD MODE EXTENSION                           */
* /* *************************************************************** */
*
*
* DECLARE 1 DEBACS06
*       BASED(DEBEXPT) BDY(WORD),
*    2 DEBDCBFA PTR(31),             /* ADDRESS OF DCB FIELD AREA
*                                                              MDC013*/
*    2 DEBPUT   PTR(31);             /* ADDRESS OF PUT MODULE  ICB379*/
*
*
* /* *************************************************************** */
* /*              ISAM SCAN MODE EXTENSION                           */
* /* *************************************************************** */
*
*
* DECLARE 1 DEBACS07
*       BASED(DEBEXPT) BDY(WORD),
*    2 *        PTR(31),             /* DEBDCBFA - ADDRESS OF DCB
*                                       FIELD AREA             MDC014*/
*    2 DEBGET   PTR(31),             /* ADDRESS OF GET OR PUT MODULE
*                                       - THIS FIELD IS ALSO CALLED
*                                       DEBPUT                 ICB379*/
*    2 DEBWKPT4 PTR(31),             /* SAME AS DCBWKPT4 - ADDRESS OF
*                                       UCB                    ICB379*/
*    2 DEBWKPT5 PTR(31),             /* SAME AS DCBWKPT5 - ADDRESS OF
*                                       GET APPENDAGE MODULE   ICB379*/
*    2 DEBCREAD PTR(31),             /* ADDRESS OF CHANNEL-END
*                                       APPENDAGE FOR READ     ICB379*/
*    2 DEBCSETL PTR(31),             /* ADDRESS OF CHANNEL-END
*                                       APPENDAGE FOR SETL     ICB379*/
*    2 DEBCWRIT PTR(31),             /* ADDRESS OF CHANNEL-END
*                                       APPENDAGE FOR WRITE    ICB379*/
*    2 DEBCCHK  PTR(31),             /* ADDRESS OF CHANNEL-END
*                                       APPENDAGE FOR WRITE VALIDITY
*                                       CHECK                  ICB379*/
*    2 DEBCREWT PTR(31),             /* ADDRESS OF CHANNEL-END
*                                       APPENDAGE FOR RE-WRITE ICB379*/
*    2 DEBCRECK PTR(31),             /* ADDRESS OF CHANNEL-END
*                                       APPENDAGE FOR RE-CHECK ICB379*/
*    2 DEBAREAD PTR(31),             /* ADDRESS OF ABNORMAL-END
*                                       APPENDAGE FOR READ     ICB379*/
*    2 DEBASETL PTR(31),             /* ADDRESS OF ABNORMAL-END
*                                       APPENDAGE FOR SETL     ICB379*/
*    2 DEBAWRIT PTR(31),             /* ADDRESS OF ABNORMAL-END
*                                       APPENDAGE FOR WRITE    ICB379*/
*    2 DEBACHK  PTR(31),             /* ADDRESS OF ABNORMAL-END
*                                       APPENDAGE FOR WRITE VALIDITY
*                                       CHECK                  ICB379*/
*    2 DEBAREWT PTR(31),             /* ADDRESS OF ABNORMAL-END
*                                       APPENDAGE FOR RE-WRITE ICB379*/
*    2 DEBARECK PTR(31),             /* ADDRESS OF ABNORMAL-END
*                                       APPENDAGE FOR RE-CHECK ICB379*/
*    2 DEBRPSST PTR(31);             /* ADDRESS OF RPS SIO APPENDAGE
*                                       IF ADDRSPC=REAL WAS NOT
*                                       SPECIFIED              ICB379*/
*
*
* /* *************************************************************** */
* /*              BISAM MODE EXTENSION                               */
* /* *************************************************************** */
*
*
* DECLARE 1 DEBACS08
*       BASED(DEBEXPT) BDY(WORD),
*    2 *        PTR(31),             /* DEBDCBFA - ADDRESS OF DCB
*                                       FIELD AREA             MDC015*/
*    2 DEBDISAD PTR(31),             /* ADDRESS OF PRIVILEGED MODULE
*                                       ENTERED WHEN A BISAM MACRO
*                                       INSTRUCTION IS EXECUTED
*                                                              ICB379*/
*    2 *        PTR(31),             /* DEBWKPT4 - SAME AS DCBWKPT4 -
*                                       ADDRESS OF THE PART 1
*                                       APPENDAGE MODULE (ABNORMAL
*                                       AND CHANNEL-END APPANDAGES)
*                                                              ICB379*/
*    2 *        PTR(31),             /* DEBWKPT5 - SAME AS DCBWKPT5 -
*                                       ADDRESS OF THE PART 2
*                                       APPENDAGE MODULE (ABNORMAL
*                                       AND CHANNEL-END APPANDAGES)
*                                                              ICB379*/
*    2 DEBFREED PTR(31),             /* ADDRESS OF DYNAMIC BUFFERING
*                                       MODULE                 ICB379*/
*    2 DEBRPSIO PTR(31),             /* ADDRESS OF RPS SIO APPENDAGE
*                                       MODULE IF ADDRSPC=REAL WAS
*                                       NOT SPECIFIED AND IF DYNAMIC
*                                       BUFFERING IS USED      ICB379*/
*    2 DEBSIOA2 PTR(31);             /* ADDRESS OF DYNAMIC BUFFERING
*                                       APPENDAGE MODULE DISPLACED BY
*                                       PAGE FIX (PGFX) APPENDAGE IF
*                                       ADDRSPC=REAL WAS NOT
*                                       SPECIFIED              ICB379*/
*
*
* /* *************************************************************** */
* /*              SUBROUTINE NAME SECTION                            */
* /*                                                                 */
* /*     NOTE  FOLLOWS THE ACCESS METHOD DEPENDENT SECTION, OR THE   */
* /*           DEVICE DEPENDENT SECTION IF THERE IS NO ACCESS        */
* /*           METHOD SECTION.                                       */
* /* *************************************************************** */
*
* DECLARE
* 1 DEBSUBNM BASED(DEBSBPTR) BDY(WORD),
*      4 DEBSUBID CHAR(2);           /* SUBORUTINE IDENTIFICATION.
*                                       EACH ACCESS METHOD SUBROUTINE,
*                                       APPENDAGE SUBROUTINE, AND IRB
*                                       ROUTINE WILL HAVE A UNIQUE
*                                       EIGHT-BYTE NAME.  THE LOW-
*                                       ORDER TWO BYTES OF EACH
*                                       ROUTINE NAME WILL BE IN THIS
*                                       FIELD IF THE SUBROUTINE IS
*                                       LOADED BY THE OPEN ROUTINES. */
*
*
* /* *************************************************************** */
* /*         APPENDAGE VECTOR TABLE SECTION OF THE DEB               */
* /* *************************************************************** */
*
* DECLARE
*   1 DEB    BASED(DEBAPPAD) BDY(WORD),
*    2 DEBAVT BDY(WORD),             /* APPENDAGE VECTOR TABLE       */
*     3 DEBEOEA  PTR(31),            /* ADDRESS OF END-OF-EXTENT
*                                       APPENDAGE ROUTINE            */
*      4 DEBEOEAB CHAR(1),           /* FLAG BYTE              ICB280*/
*       5 DEBTCAMQ BIT(4),           /* TCAM WORK AREA       @ZA34098*/
*       5 DEBEOENP BIT(4),           /* NUMBER OF 2K PAGES TO BE
*                                       FIXED FOR THE END-OF-EXTENT
*                                       APPENDAGE              ICB280*/
*      4 DEBEOEAD PTR(24),           /* ADDRESS OF END-OF-EXTENT
*                                       APPENDAGE ROUTINE      ICB280*/
*     3 DEBSIOA  PTR(31),            /* ADDRESS OF START I/O
*                                       APPENDAGE ROUTINE            */
*      4 DEBSIOAB CHAR(1),           /* FLAG BYTE              ICB280*/
*       5 DEBPGFX  BIT(1),           /* ADDRESS IN DEBSIOAD CAN BE
*                                       USED TO DETERMINE THE ENTRY
*                                       POINT TO THE PAGE FIX (PGFX)
*                                       APPENDAGE ROUTINE BY ADDING
*                                       4 TO ADDRESS IN DEBSIOAD
*                                                              ICB280*/
*       5 DEBSIOX  BIT(1),           /* IF ZERO, DO NOT ENTER SIO
*                                       APPENDAGE WHEN ERP IS ACTIVE.
*                                       IF ONE, ENTER SIO APPENDAGE
*                                       EVEN WHEN ERP IS ACTIVE.
*                                                              ICB372*/
*       5 DEBIOVR  BIT(1),           /* IF ONE, EXCPVR REQUEST IS
*                                       VALID.  IF ZERO, EXCPVR
*                                       REQUEST IS INVALID AND WILL
*                                       NOT BE EXECUTED.       ICB401*/
*       5 DEBFIX   BIT(1),           /* INDICATION THAT DEB HAS BEEN
*                                       FIXED (OS/VS2)  (MDC032)
*                                                              YM5929*/
*       5 DEBSIONP BIT(4),           /* NUMBER OF 2K PAGES TO BE
*                                       FIXED FOR THE SIO
*                                       APPENDAGE              ICB280*/
*      4 DEBSIOAD PTR(24),           /* ADDRESS OF START I/O
*                                       APPENDAGE ROUTINE      ICB280*/
*     3 DEBPCIA  PTR(31),            /* ADDRESS OF PCI APPENDAGE
*                                       ROUTINE                      */
*      4 DEBPCIAB CHAR(1),           /* FLAG BYTE              ICB280*/
*       5 DEBRSV24 BIT(1),           /* RESERVED                     */
*       5 DEBRSV25 BIT(1),           /* RESERVED                     */
*       5 DEBRSV26 BIT(1),           /* RESERVED                     */
*       5 DEBRSV27 BIT(1),           /* RESERVED                     */
*       5 DEBPCINP BIT(4),           /* NUMBER OF 2K PAGES TO BE
*                                       FIXED FOR THE PCI APPENDAGE
*                                       ROUTINE                ICB280*/
*      4 DEBPCIAD PTR(24),           /* ADDRESS OF PROGRAM-
*                                       CONTROLLED-INTERRUPTION (PCI)
*                                       APPENDAGE ROUTINE      ICB280*/
*     3 DEBCEA   PTR(31),            /* ADDRESS OF CHANNEL-END
*                                       APPENDAGE ROUTINE            */
*      4 DEBCEAB  CHAR(1),           /* FLAG BYTE              ICB280*/
*       5 DEBESMVR BIT(1),           /* EXCPVR VALIDITY CHK  @ZA34098*/
*       5 DEBRSV29 BIT(1),           /* RESERVED                     */
*       5 DEBRSV30 BIT(1),           /* RESERVED                     */
*       5 DEBRSV31 BIT(1),           /* RESERVED                     */
*       5 DEBCENP  BIT(4),           /* NUMBER OF 2K PAGES TO BE
*                                       FIXED FOR THE CHANNEL-END
*                                       APPENDAGE              ICB280*/
*      4 DEBCEAD  PTR(24),           /* ADDRESS OF CHANNEL END
*                                       APPENDAGE ROUTINE      ICB280*/
*     3 DEBXCEA  PTR(31),            /* ADDRESS OF ABNORMAL-END
*                                       APPENDAGE ROUTINE            */
*      4 DEBXCEAB CHAR(1),           /* FLAG BYTE              ICB280*/
*       5 DEBRSV32 BIT(1),           /* RESERVED                     */
*       5 DEBRSV33 BIT(1),           /* RESERVED                     */
*       5 DEBRSV34 BIT(1),           /* RESERVED                     */
*       5 DEBRSV35 BIT(1),           /* RESERVED                     */
*       5 DEBXCENP BIT(4),           /* NUMBER OF 2K PAGES TO BE
*                                       FIXED FOR THE ABNORMAL-END
*                                       APPENDAGE              ICB280*/
*      4 DEBXCEAD PTR(24),           /* ADDRESS OF ABNORMAL-END
*                                       APPENDAGE ROUTINE      ICB280*/
*
* /* *************************************************************** */
* /*                 DEB PREFIX TABLE                                */
* /* *************************************************************** */
*
*    2 DEBPREFX BDY(WORD),           /* DEB PREFIX TABLE             */
*     3 DEBWKARA CHAR(1) BDY(WORD),  /* I/O SUPPORT WORK AREA
*                                       (DIRECT ACCESS)              */
*     3 DEBDSCBA CHAR(7) BDY(WORD,2),/* DSCB ADDRESS (BBCCHHR) USED
*                                       BY I/O SUPPORT (DIRECT
*                                       ACCESS)                      */
*     3 DEBXTNP  PTR(31),            /* POINTER TO DEB EXTENSION
*                                       (OS/VS2)               MDC008*/
*      4 DEBDCBMK CHAR(4) BDY(WORD), /* DCB MODIFICATION MASK USED BY
*                                       I/O SUPPORT (OS/VS1)   MDC009*/
*     3 DEBLNGTH CHAR(1),            /* LENGTH OF DEB IN DOUBLE
*                                       WORDS                        */
*     3 DEBAMTYP CHAR(1),            /* ACCESS METHOD TYPE     ICB380*/
*     3 DEBTBLOF FIXED(15);          /* OFFSET IN THE DEB TABLE TO
*                                       THE ENTRY FOR THIS DEB ICB380*/
*
*
* /* *************************************************************** */
* /*                 DEB EXTENSION (OS/VS2)                          */
* /* *************************************************************** */
*
* DECLARE
*   1 DEBXTN   BASED(DEBXTNP)  BDY(WORD),
*    2 DEBXLNGH FIXED(15),           /* LENGTH OF DEB EXTENSION
*                                                              MDC002*/
*    2 DEBXFLG1 BIT(8),              /* FLAG BYTE  (MDC027)    YM1272*/
*     3 DEBXCDCB BIT(1),             /* DEBDCBAD FIELD CONTAINS THE
*                                       ADDRESS OF A COPIED DCB.
*                                       USED BY END-OF-VOLUME, TCLOSE
*                                       AND TASK CLOSE.  (MDC028)
*                                                              YM1272*/
*     3 DEBXTSKC BIT(1),             /* TASK CLOSE IS CLOSING THE
*                                       RELATED DCB.  SET BY TASK
*                                       CLOSE AND INTERROGATED BY
*                                       END-OF-VOLUME, FEOV AND
*                                       TCLOSE FOR DEB'S NOT ON THE
*                                       CURRENT TCB DEB CHAIN.
*                                       (MDC031)               YM2869*/
*     3 DEBXDSSI BIT(1),             /* DATA SET SECURITY INDICATOR.
*                                       SET BY OPEN AND CHECKPOINT.
*                                       INTERROGATED BY EOV.
*                                       (MDC348)             @Z40RP9A*/
*     3 DEBXWIND BIT(1),             /* MSS WINDOW PROCESSING INDIC.
*                                       SET BY OPEN.  INTERROGATED
*                                       BY EOV, SAM EOB AND CLOSE.
*                                                            @ZA37313*/
*     3 DEBXACIS BIT(1),             /* ACQUIRE ISSUED WITH INHIBIT
*                                       STAGE INDICATED DURING OPEN OR
*                                       EOV.  SET BY OPEN AND EOV.
*                                       INTERROGATED BY SVC 126.
*                                                            @ZA37313*/
*     3 DEBXRV45 BIT(1),             /* RESERVED                     */
*     3 DEBXRV46 BIT(1),             /* RESERVED                     */
*     3 DEBXRV47 BIT(1),             /* RESERVED                     */
*    2 DEBXRV48 CHAR(1),             /* RESERVED                     */
*    2 DEBXDSAB PTR(31),             /* POINTER TO DSAB        MDC004*/
*    2 DEBXDCBM CHAR(4) BDY(WORD),   /* DCB MODIFICATION MASK USED BY
*                                       I/O SUPPORT            MDC005*/
*    2 DEBXDBPR PTR(31),             /* POINTER TO DEB         MDC006*/
*    2 DEBXDSO1 BIT(8),              /* SAME AS DCBDSORG BYTE 1
*                                                              MDC020*/
*    2 DEBXDSO2 BIT(8),              /* SAME AS DCBDSORG BYTE 2
*                                                              MDC021*/
*    2 DEBXMCF1 BIT(8),              /* SAME AS DCBMACRF BYTE 1
*                                                              MDC022*/
*    2 DEBXMCF2 BIT(8),              /* SAME AS DCBMACRF BYTE 2
*                                                              MDC023*/
*    2 DEBXXARG PTR(31),             /* ADDRESS OF BDAM READ
*                                       EXCLUSIVE LIST         MDC024*/
*    2 DEBXOPNJ PTR(31),             /* POINTER TO DSAB (SEPARATE
*                                       FROM DEBXDSAB) DYNAMICALLY
*                                       ALLOCATED BY OPEN TYPE=J.
*                                       THIS POINTER WILL EXIST FOR
*                                       NON-AUTHORIZED CALLERS OF
*                                       OPEN TYPE=J FOR A DIRECT
*                                       ACCESS DATA SET WHERE THE
*                                       DATA SET BEING OPENED IS
*                                       DIFFERENT FROM THE DATA SET
*                                       DESCRIBED BY THE DDNAME IN
*                                       DCB AND THE JFCNWRIT BIT IS
*                                       ON IN THE JFCB.  THE POINTER
*                                       WILL BE USED BY CLOSE TO
*                                       DYNAMICALLY UNALLOCATE THE
*                                       DATA SET.  (MDC352)  @ZA02193*/
*    2 DEBXSAMB PTR(31),             /* ADDRESS OF SAM BLOCK (SAMB)
*                                       (MDC351)             @Z40FP9A*/
*    2 DEBXOPET CHAR(8);             /* DATASET OPEN TIME SET BY OPEN
                                        INITIALIZATION       @ZA39299*/
*%IF IKEPLS=''  %THEN
*    %GOTO DEBL4;
*IHALPOP;
*%DEBL4 : ;
