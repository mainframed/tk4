* % GOTO NELBSL;   /*
         MACRO
         IEFNEL &SUBCOM=NO,&EXITS=
         LCLA  &N,&NELDUM
***********************************************************************
*                                                                     *
*    MACMEAN  NEL MEANS INTERPRETER ENTRANCE LIST              YM00363*
*    MACCOMP  Y-2 SC1B9/PZD02                                 @G16AP2F*
*    MACSTAT  Y-2 76254/G16AP2F                               @G16AP2F*
*                                                                     *
*    STATUS - VS2 SU16 - IN THIS MACRO, SU 16 SUPPORTS        @G16AP2F*
*             VPSS SUPPORT (SU 29 - @G29AN2E).                @G16AP2F*
*             MERGE SU 4,10,16 CODE TO REL 037 BASE PTF       @ZA28955*
*             ADDED NEW BIT TO NELOPSWT                       @ZA54007*
*                                                                     *
*  THIS MACRO PROVIDES A SYMBOLIC MAPPING OF THE PARAMETER LISTS      *
*  REQUIRED WHEN INVOKING THE CONVERTER OR INTERPRETER SUBROUTINES.   *
*  EACH LIST AND ITS EXIT SUBLIST MUST BE CONSTRUCTED IN DYNAMICALLY  *
*  ALLOCATED CORE PRIOR TO CALLING THE CONVERTER OR INTERPRETER.      *
*                                                                     *
*  TWO MACRO OPERANDS ARE AVAILABLE FOR SPECIFING CERTAIN DETAILS OF  *
*  THE MAPPING.  ONE OPERAND, SUBCOM= , MUST BE SPECIFIED.  ITS VALUE *
*  DETERMINES WHICH SUBCOMPONENT(CONVERTER(C) OR INTERPRETER(I)) THE  *
*  PARAMETER LIST IS BEING BUILT FOR.  IF NEITHER SUBCOM=C  NOR       *
*  SUBCOM=I IS  SPECIFIED, THE MACRO EXPANSION FAILS AND AN ERROR     *
*  MESSAGE IS ISSUED.  ALL INFORMATION PASSED TO THE CONVERTER AND    *
*  INTERPRETER VIA THE NEL IS RETURNED TO THE CALLER, UNALTERED.      *
*                                                                     *
*  THE OTHER OPERAND, EXITS= ,IS OPTIONAL AND PROVIDES A MAPPING OF   *
*  THE EXIT LIST. IF SPECIFIED THIS PARAMETER CONSISTS OF EITHER A    *
*  SINGLE ENTRY OR LIST OF ENTRIES ENCLOSED IN PARENTHESIS, WHICH     *
*  INDICATE THE TYPE OF USER EXITS TO BE TAKEN DURING THE CONVERTER   *
*  OR INTERPRETER PROCESSING. THE AVAILABLE EXITS ARE IDENTIFIED      *
*  AS FOLLOWS -                                                       *
*              TXT - POST SCAN EXIT                                   *
*              RTN - RETURN EXIT                                      *
*              QEP - QUEUE MANAGER ENTRY POINT                        *
*              QLP - QUEUE MANAGER LOCATE MODE ENTRY POINT    @G29AN2E*
*              SMF - SYSTEM MANAGEMENT FACILITIES EXIT                *
*              IAM - SPECIAL INPUT ACCESS METHOD                      *
*              FAM - SPECIAL PROCEDURE FIND ACCESS METHOD EXIT.       *
*  THE SPECIFICATION OF ANY OF THESE IDENTIFIERS IN THE EXITS=        *
*  PARAMETER WILL RESULT IN THE MAPPING OF AN EXIT LIST HEADER AND,   *
*  CORRESPONDING TO EACH GIVEN IDENTIFIER (DENOTED XXX BELOW), THE    *
*  FOLLOWING EXIT LIST ENTY WILL BE GENERATED.                        *
*              XXXEXIT   DS   0CL8                                    *
*              XXXEXLK   DS   XL1                                     *
*              XXXEXID   DS   XL1                                     *
*              XXXEXEP   DS   CL6                                     *
*  REGARDLESS OF THE EXITS PARAMETER, A LIST OF SYMBOLS WILL BE       *
*  GENERATED WHICH MAY BE USED AT EXECUTION TIME FOR ESTABLISHING     *
*  VALUES IN THE LINKAGE (EXLK) AND IDENTIFIER (EXID) FIELDS.         *
*                                                                     *
***********************************************************************
*
.*  COMPUTE LENGTH OF NEL EXIT LIST
&NELDUM  SETA  N'&EXITS
&NELDUM  SETA  8*&NELDUM      # OF EXIT ENTRIES TIMES 8
         AIF   (&NELDUM EQ 0).NELSTRT   IF NO EXITS DON'T ADD HDR LEN
&NELDUM  SETA  &NELDUM+8      ADD LENGTH OF EXIT LIST HEADER
.NELSTRT ANOP
         AIF   ('&SUBCOM' NE 'NO').NELERR
         MNOTE ,'SUBCOMPONENT SPECIFICATION MISSING'
         MEXIT
.NELERR  ANOP
         AIF   ('&SUBCOM' EQ 'C').NELBEGN  CONVERTER SPECIFIED
         AIF   ('&SUBCOM' EQ 'I').NELBEGN  INTERPRETER SPECIFIED
         MNOTE ,'SUBCOMPONENT SPECIFICATION INVALID'
         MEXIT
.NELBEGN ANOP
*
*  POINTERS COMMON TO CONVERTER AND INTERPRETER ENTRANCE LIST
*
NELLIST  DS    0D
*
NELQMPA  DS    A ------- PTR TO QMPA PROVIDING ACCESS TO
*                        CALLER'S SWA
NELEXLST DS    A ------- PTR TO C/I'S LIST OF SPECIAL EXITS
NELCOMID DS    A ------- PTR TO CONSOLE IDENTIFIER
NELTXTCB DS    A ------- PTR TO OPEN ACB FOR INTERNAL TEXT
*                        DATA SET
NELMSGCB DS    A ------- PTR TO OPEN ACB FOR MESSAGE DATA SET
NELJMR   DS    A ------- PTR TO JOB MANAGEMENT RECORD
*
*  NEL OPTION SWITCHES COMMON TO CONVERTER AND INTERPRETER
*
NELOPSWT DS    XL1 ----- OPTION SWITCHES
*
NELSMF   EQU   X'80' --- SMF FUNCTIONS ARE TO BE PERFORMED
NELTSOP  EQU   X'40' --- TERM=TS HAS BEEN SPECIFIED AND OVERRIDES
*                        ALL OTHER PARAMETERS ON THE DD STATEMENT
NELRECVY EQU   X'20' --- PROCESSING IS IN RECOVERY MODE AND
*                        MESSAGES ARE TO BE SURPRESSED
NELCNDGM EQU   X'10' --- USE CONDITIONAL GETMAINS              @ZA54007
         DS    CL3 ----- RESERVED
         AIF   ('&SUBCOM' EQ 'I').GENINTR - GO GEN INTERPRETER LIST
*
*  CONVERTER POINTERS
*
NELJCLCB DS    A ------- PTR TO OPEN ACB FOR SPOOLED JCL DATA SET
NELPROCB DS    A ------- PTR TO OPEN DCB FOR PROCEDURE LIBRARY
NELSTMCB DS    A ------- PTR TO OPEN ACB FOR STATEMENT IMAGE DATA SET
*
*  CONVERTER PARM FIELD MAPPING
*
NELPARMO DS    CL1 ----- PARAMETER OPTIONS
*
NELPGMN  EQU   X'01' --- PROGRAMMER NAME REQUIRED
NELACCT  EQU   X'02' --- ACCOUNT NUMBER REQUIRED
NELJPRTY DS    ZL2 ----- DEFAULT JOB PRIORITY
NELTIME  DS    ZL6 ----- DEFAULT FOR JOB TIME LIMIT
NELREG   DS    ZL3 ----- DEFAULT REGION SIZE
NELCOMDS DS    ZL1 ----- COMMAND DISPOSITION
*                        0 - EXECUTE COMMAND
*                        1 - DISPLAY AND EXECUTE COMMAND
*                        2 - DISPLAY AND REQUEST DISPOSITION
*                        3 - IGNORE COMMAND
NELLABEL DS    ZL1 ----- LABEL PROCESSING
*                        0 - BLP WILL BE TREATED AS NL
*                        1 - BLP WILL BE TREATED AS BYPASS LABEL
NELAUTH  DS    CL4 ----- MCS COMMAND AUTHORITY
NELMSGL1 DS    CL1 ----- JCL MSGLEVEL DEFAULT
NELMSGL2 DS    CL1 ----- ALLOCATION MSGLEVEL DEFAULT
NELMSGCL DS    CL1 ----- DEFAULT SYSTEM OUTPUT CLASS(MSGCLASS)
         DS    CL5 ----- RESERVED
         AGO   .ENDNEL
.GENINTR ANOP
*
*  INTERPRETER POINTERS
*
NELJCT   DS    A ------- PTR TO JCT IN SWA
*
*  INERPRETER OPTION SWITCH
*
NELOPSW2 DS    XL1 ----- OPTION SWITCHES - BYTE 2
NELADSPC EQU   X'80' --- FAIL JOB IF ADDRSPC=REAL CODED
*                        BY UNAUTHORIZED USER(E.G. LOGON PROC)
         DS    CL7 ----- RESERVED
.ENDNEL  ANOP
         SPACE 1
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  EXIT LIST MAPPING
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
NELEXTLN EQU   &NELDUM - SYMBOLIC LENGTH OF EXIT LIST
&N       SETA  1
         AIF   (N'&EXITS EQ 0).GENCON
NELEXITS DS    0D
NELEXHDR DS    0CL8 ---- EXIT LIST HEADER RECORD
NELEXLEN DS    H ------- LIST LENGTH
NELXRTCD DS    H ------- INTERPRETER RETURN CODE
         DS    CL4
.NEXT    ANOP
.*  EXIT ENTRY NUMBER &N
         AIF   ('&EXITS(&N)' EQ 'IAM').GENENTY
         AIF   ('&EXITS(&N)' EQ 'FAM').GENENTY
         AIF   ('&EXITS(&N)' EQ 'QEP').GENENTY
         AIF   ('&EXITS(&N)' EQ 'SMF').GENENTY
         AIF   ('&EXITS(&N)' EQ 'TXT').GENENTY
         AIF   ('&EXITS(&N)' EQ 'RTN').GENENTY
         AIF   ('&EXITS(&N)' EQ 'QLP').GENENTY                 @G29AN2E
         MNOTE ,'INVALID NEL EXIT SPECIFIED'
         MEXIT
.GENENTY ANOP
&EXITS(&N).EXIT DS 0CL8
&EXITS(&N).EXLK DS XL1 ----- LINKAGE DEFINITION
&EXITS(&N).EXID DS XL1 ----- EXIT IDENTIFICATION
&EXITS(&N).EXEP DS CL6 ----- ENTRY POINT
         AIF   (N'&EXITS EQ &N).GENCON
&N       SETA  &N+1
         AGO   .NEXT
.GENCON  ANOP
         SPACE 2
***********************************************************************
*                                                                     *
*              GENERAL EXIT LIST ENTRY MAPPING                        *
*                                                                     *
***********************************************************************
         SPACE 2
NELEXENT DS    0C                  ORIGIN ZERO
NELEXLK  DS    CL1                 LINKAGE IDENTIFICATION
NELEXID  DS    CL1                 EXIT IDENTIFICATION
NELEXEP  DS    CL6                 EXIT ENTRY POINT
NELEXEPA EQU   NELEXEP+2           DISPL OF ADDR SPECIFIED
         SPACE 2
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*  CONSTANTS USED IN EXIT LIST GENERATION                             *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
NELEXAD4 EQU   X'20' --- ENTRY POINT SPECIFIED AS 4-BYTE ADDR  @G29AN2E
NELEXADD EQU   X'40' --- ENTRY POINT SPECIFIED AS 3-BYTE ADDRESS
NELEXNAM EQU   X'80' --- ENTRY POINT SPECIFIED AS 6-BYTE MODULE NAME
NELEXVCN EQU   X'C0' --- ENTRY POINT SPECIFIED AS V-CON AT EXIT POINT
NELEXNOP EQU   X'00' --- EXIT ENTRY IS TO BE IGNORED
*
NELIAMEX EQU   X'40' --- SPECIAL INPUT ACCESS METHOD EXIT ID
NELRTNEX EQU   X'20' --- SPECIAL RETURN EXIT ID
NELFAMEX EQU   X'10' --- SPECIAL FIND ACCESS METHOD EXIT ID
NELQEPEX EQU   X'08' --- SPECIAL QUEUE MANAGER ENTRY POINT ID
NELTXTEX EQU   X'80' --- POST SCAN TEXT EXIT ID
NELSMFEX EQU   X'07' --- SYSTEM MANAGEMENT FACILITIES EXIT ID
NELQLPEX EQU   X'04' --- SPECIAL QUEUE MANAGER FOR LOCATE MODE @G29AN2E
*                        ENTRY POINT ID                        @G29AN2E
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         MEND  , */
*%NELBSL:;
*
*/*  MACMEAN NEL MEANS INTERPRETER ENTRANCE LIST                     */
*/*  MACCOMP Y-2 SC1B9/PZD02                                 @G16AP2F*/
*/*  MACSTAT Y-2 76253/G16AP2F                               @G16AP2F*/
*/*                                                                  */
*/*  STATUS - VS2 SU16 - IN THIS MACRO, SU 16 SUPPORTS       @G16AP2F*/
*/*           VPSS SUPPORT (SU 29 - @G29AN2E).               @G16AP2F*/
*/*           MERGE SU 4,10,16 CODE TO REL 037 BASE PTF      @ZA28955*/
*
*%; /***************************************/
*%; /*                                     */
*%; /*   COMPUTE LENGTH OF NEL EXIT LIST   */
*%; /*                                     */
*%; /***************************************/
*  % DCL NELDUM FIXED;
*   % NELDUM = 0;
*   % IF IAMEXIT ^= ' ' %THEN % NELDUM = NELDUM + 1;
*   % IF FAMEXIT ^= ' ' %THEN % NELDUM = NELDUM + 1;
*   % IF QEPEXIT ^= ' ' %THEN % NELDUM = NELDUM + 1;
*   % IF SMFEXIT ^= ' ' %THEN % NELDUM = NELDUM + 1;
*   % IF TXTEXIT ^= ' ' %THEN % NELDUM = NELDUM + 1;
*   % IF RTNEXIT ^= ' ' %THEN % NELDUM = NELDUM + 1;
*   % IF QLPEXIT ^= ' ' %THEN % NELDUM = NELDUM + 1;  /*     @G29AN2E*/
*   % NELDUM = 8*NELDUM;    /* NUMBER OF EXIT ENTRIES TIMES 8 */
*   % IF NELDUM = 0 %THEN %GOTO NELSTRT;   /* IF NO EXITS SPECIFIED ,
*                                             DONT ADD HEADER LENGTH */
*   % NELDUM = NELDUM + 8;   /* ADD HEADER LENGTH  */
*  % DCL NELLEN CHAR;
*   % NELLEN = 'LENGTH(NELLIST)';   /* LENGTH OF THE NEL OPTION LIST */
* % NELSTRT:;
* DECLARE
* 1 NEL BASED (NELPTR) BDY(DWORD),
* % IF SUBCOM='NO' % THEN % GOTO ENDNEL;      /*ERROR - INVALID      */
* % IF SUBCOM='C' % THEN % GOTO NELBEGN;
* % IF SUBCOM='I' % THEN % GOTO NELBEGN;
* % GOTO ENDNEL;   /* SPECIFICATION ERROR */
* % NELBEGN:;
*  2 NELLIST  BDY(DWORD),
* /*******************************************************************/
* /*                                                                 */
* /*  PTRS COMMON TO CONVERTER AND INTERPRETER ENTRANCE LIST         */
* /*                                                                 */
* /*******************************************************************/
*   3 NELQMPA PTR(31),            /* PTR TO QMPA PROVIDING ACCESS
*                                    TO CALLER'S SWA                 */
*   3 NELEXLST PTR(31),           /* PTR TO C/I'S LIST OF SPECIAL
*                                    EXITS                           */
*   3 NELCOMID PTR(31),           /* PTR TO CONSOLE IDENTIFIER       */
*   3 NELTXTCB PTR(31),           /* PTR TO OPEN ACB FOR INTERNAL
*                                    TEXT DATA SET                   */
*   3 NELMSGCB PTR(31),           /* PTR TO OPEN ACB FOR MESSAGE
*                                    DATA SET                        */
*   3 NELJMR PTR(31),             /* PTR TO JOB MANAGEMENT RECORD    */
* /*******************************************************************/
* /*                                                                 */
* /*    NEL OPTION SWITCHES                                          */
* /*                                                                 */
* /*******************************************************************/
*   3 NELOPSWT BIT(8),            /* OPTION SWITCHES                 */
*    4 NELSMF BIT(1),             /* SMF FUNCTIONS ARE TO BE
*                                    PERFORMED                       */
*    4 NELTSOP BIT(1),            /* TERM=TS HAS BEEN SPECIFIED
*                                    AND OVERRIDES ALL OTHER PARMS
*                                    ON THE DD STATEMENT             */
*    4 NELRECVY BIT(1),           /* PROCESSING IS IN RECOVERY MODE
*                                    AND MESSAGES ARE TO BE
*                                    SURPRESSED                      */
*    4 NELCNDGM BIT(1),          /* USE CONDITIONAL GETMAINS @ZA54007*/
*    4  *  BIT(4),
*   3  *  CHAR(3),                /* RESERVED                        */
* % IF SUBCOM='I' % THEN % GOTO GENINTR;
* /*******************************************************************/
* /*                                                                 */
* /*    CONVERTER POINTERS                                           */
* /*                                                                 */
* /*******************************************************************/
*   3 NELJCLCB PTR(31),           /* PTR TO OPEN ACB FOR SPOOLED
*                                    JCL DATA SET                    */
*   3 NELPROCB PTR(31),           /* PTR TO OPEN DCB FOR PROCEDURE
*                                    LIBRARY                         */
*   3 NELSTMCB PTR(31),           /* PTR TO OPEN ACB FOR STATEMENT
*                                    IMAGE DATA SET                  */
* /*******************************************************************/
* /*                                                                 */
* /*    CONVERTER PARM FIELD MAPPING                                 */
* /*                                                                 */
* /*******************************************************************/
*   3 NELPARMO BIT(8),            /* PARAMETER OPTIONS               */
*    4  *  BIT(6),                /* RESERVED                        */
*    4 NELACCT BIT(1),            /* ACCOUNT NUMBER REQUIRED         */
*    4 NELPGMN  BIT(1),           /* PROGRAMMER NAME REQUIRED        */
*   3 NELJPRTY CHAR(2),           /* DEFAULT JOB PRIORITY            */
*   3 NELTIME CHAR(6),            /* DEFAULT FOR JOB TIME LIMIT      */
*   3 NELREG CHAR(3),             /* DEFAULT REGION SIZE             */
*   3 NELCOMDS CHAR(1),           /* COMMAND DISPOSITION
*                                    0 - EXECUTE COMMAND
*                                    1 - DISPLAY AND EXECUTE COMMAND
*                                    2 - DISPLAY AND REQUEST DISP
*                                    3 - IGNORE COMMAND              */
*   3 NELLABEL CHAR(1),           /* LABEL PROCESSING
*                                    0 - BLP WILL BE TREATED AS NL
                                     1 - BLP TREATED AS BYPASS LABEL */
*   3 NELAUTH CHAR(4),            /* MCS COMMAND AUTHORITY           */
*   3 NELMSGL1 CHAR(1),           /* JCL MSGLEVEL DEFAULT            */
*   3 NELMSGL2 CHAR(1),           /* ALLOCATION MSGLEVEL DEFAULT     */
*   3 NELMSGCL CHAR(1),           /* DEFAULT MESSAGE CLASS           */
*   3  *  CHAR(5);                /* RESERVED                        */
* % GOTO NELEXIT;
* % GENINTR:;
* /*******************************************************************/
* /*                                                                 */
* /*    INTERPRETER POINTERS                                         */
* /*                                                                 */
* /*******************************************************************/
*   3 NELJCT PTR(31),             /* PTR TO JCT IN SWA               */
* /*******************************************************************/
* /*                                                                 */
* /*    INTERPRETER OPTION SWITCH                                    */
* /*                                                                 */
* /*******************************************************************/
*   3 NELOPSW2 BIT(8),            /* OPTION SWITCHES-BYTE 2          */
*    4 NELADSPC BIT(1),           /* FAIL JOB IF ADDRSPC=REAL CODED
*                                    BY UNAUTHORIZED USER(LOGON)     */
*    4  *  BIT(7),                /* RESERVED                        */
*   3  *  CHAR(7);                /* RESERVED                        */
* % NELEXIT:;
* /**********************************/
* /*                                */
* /*     NEL EXIT LIST MAPPING      */
* /*                                */
* /**********************************/
* % IF NELDUM = 0 % THEN          /* IF NO  EXITS SPECIFIED          */
*   % GOTO GENCON;                /* DON'T EXPAND THE HEADER RECORD  */
* DECLARE
* 1 NELEXITS BDY(DWORD) BASED(NELEXBAS),
*   3 NELEXHDR  CHAR(8) BDY(WORD),/* EXIT LIST HEADER RECORD         */
*    4 NELEXLEN FIXED(15),        /* LIST LENGTH                     */
*    4 NELXRTCD FIXED(15),        /* INTERPRETER RETURN CODE         */
*    4 * CHAR(4),
*   % IF IAMEXIT = ' ' %THEN %GOTO NELEX1;
*   3 IAMEXT  CHAR(8),
*    4 NELIAMLK CHAR(1),          /* LINKAGE IDENTIFICATION          */
*    4 NELIAMID CHAR(1),          /* EXIT IDENTIFICATION             */
*    4 NELIAMEP CHAR(6),          /* ENTRY POINT                     */
*  % NELEX1:;
*   % IF FAMEXIT = ' ' %THEN %GOTO NELEX2;
*   3 FAMEXT  CHAR(8),
*    4 NELFAMLK CHAR(1),          /* LINKAGE IDENTIFICATION          */
*    4 NELFAMID CHAR(1),          /* EXIT IDENTIFICATION             */
*    4 NELFAMEP CHAR(6),          /* ENTRY POINT                     */
*  % NELEX2:;
*   % IF QEPEXIT = ' ' %THEN %GOTO NELEX3;
*   3 QEPEXT  CHAR(8),
*    4 NELQEPLK CHAR(1),          /* LINKAGE IDENTIFICATION          */
*    4 NELQEPID CHAR(1),          /* EXIT IDENTIFICATION             */
*    4 NELQEPEP CHAR(6),          /* ENTRY POINT                     */
*  % NELEX3:;
*   % IF SMFEXIT = ' ' %THEN %GOTO NELEX4;
*   3 SMFEXT  CHAR(8),
*    4 NELSMFLK CHAR(1),          /* LINKAGE IDENTIFICATION          */
*    4 NELSMFID CHAR(1),          /* EXIT IDENTIFICATION             */
*    4 NELSMFEP CHAR(6),          /* ENTRY POINT                     */
*  % NELEX4:;
*   % IF TXTEXIT = ' ' %THEN %GOTO NELEX5;
*   3 TXTEXT  CHAR(8),
*    4 NELTXTLK CHAR(1),          /* LINKAGE IDENTIFICATION          */
*    4 NELTXTID CHAR(1),          /* EXIT IDENTIFICATION             */
*    4 NELTXTEP CHAR(6),          /* ENTRY POINT                     */
*  % NELEX5:;
*  % IF RTNEXIT = ' ' % THEN % GOTO NELEX6;          /*      @G29AN2E*/
*   3 RTNEXT  CHAR(8),
*    4 NELRTNLK CHAR(1),          /* LINKAGE IDENTIFICATION          */
*    4 NELRTNID CHAR(1),          /* EXIT IDENTIFICATION             */
*    4 NELRTNEP CHAR(6),          /* ENTRY POINT                     */
*  % NELEX6:;                                        /*      @G29AN2E*/
*  % IF QLPEXIT = ' ' % THEN % GOTO EXITEND;         /*      @G29AN2E*/
*   3 QLPEXT  CHAR(8),                               /*      @G29AN2E*/
*     4 NELQLPLK CHAR(1),        /* LINKAGE IDENTIFICATION   @G29AN2E*/
*     4 NELQLPID CHAR(1),        /* EXIT IDENTIFICATION      @G29AN2E*/
*     4 NELQLPEP CHAR(6),        /* ENTRY POINT              @G29AN2E*/
* % EXITEND:;
*          10  * CHAR (1);        /* END OF LIST PLACEHOLDER         */
* % GENCON:;
*/*******************************************************************/
*/*                                                                 */
*/*   GENERAL EXIT LIST ENTRY MAPPING                               */
*/*                                                                 */
*/*******************************************************************/
* DECLARE
* 1 NELEXENT BASED,
*   3 NELEXLK CHAR(1),             /* LINKAGE IDENTIFICATION        */
*   3 NELEXID CHAR(1),             /* EXIT IDENTIFICATION           */
*   3 NELEXEP CHAR(6),             /* EXIT RTN ENTRY POINT          */
*     4    *   CHAR(2),            /* START IF NAME SPEC'D          */
*     4 NELEXEPA CHAR(4);          /* DISPL OF ADDR SPEC'D          */
*%; /**************************************************/
*%; /*     CONSTANTS USED IN EXIT LIST GENERATION     */
*%; /**************************************************/
*  % DCL NELEXAD4 CHAR;                                /*    @G29AN2E*/
*  % NELEXAD4 = '''20''X';        /* ENTRY POINT GIVEN AS
*                                    4 BYTE PTR              @G29AN2E*/
*  % DCL NELEXADD CHAR;
*  % NELEXADD = '''40''X';        /* ENTRY POINT GIVEN AS 3-BYTE PTR.*/
*  % DCL NELEXNAM CHAR;
*  % NELEXNAM = '''80''X';        /* ENTRY POINT GIVEN AS 6-BYTE NAME*/
*  % DCL NELEXVCN CHAR;
*  % NELEXVCN = '''C0''X';        /* ENTRY POINT GIVEN AS VCON
*                                    AT EXIT POINT                   */
*  % DCL NELEXNOP CHAR;
*  % NELEXNOP = '''00''X';        /* EXIT ENTRY IS TO BE IGNORED     */
*  % DCL NELIAMEX CHAR;
*  % NELIAMEX = '''40''X';        /* SPECIAL INPUT ACCESS METHOD ID  */
*  % DCL NELRTNEX CHAR;
*  % NELRTNEX = '''20''X';        /* SPECIAL RETURN EXIT ID          */
*  % DCL NELFAMEX CHAR;
*  % NELFAMEX = '''10''X';        /* SPECIAL FIND ACCESS METHOD      */
*  % DCL NELQEPEX CHAR;
*  % NELQEPEX = '''08''X';        /* SPECIAL Q-MNGR ENTRY POIMT ID   */
*  % DCL NELTXTEX CHAR;
*  % NELTXTEX = '''80''X';        /* POST SCAN TEXT EXIT ID          */
*  % DCL NELSMFEX CHAR;
*  % NELSMFEX = '''07''X';        /* SYSTEM MANAGEMENT FACILITIES ID */
*  % DCL NELQLPEX CHAR;           /*                         @G29AN2E*/
*  % NELQLPEX = '''04''X';        /* SPECIAL Q-MNGR FOR LOCATE
*                                    MODE ENTRY POINT ID     @G29AN2E*/
* %ENDNEL:;
