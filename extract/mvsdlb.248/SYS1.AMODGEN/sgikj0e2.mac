         MACRO
         SGIKJ0E2 &DST=,&SUBFD=
.* THIS SYSGEN MACRO IS USED TO GENERATED ALL DATA SET TYPES TO  A45714
.* BE RECOGNIZED BY THE EDIT COMMAND PROCESSOR, AND TO BUILD A   A45714
.* SUBFIELD FOR ANY DATA SET TYPE REQUIRING ONE.  THIS MACRO     A45714
.* PERFORMS THIS FUNCTION BY GENERATING THE PROPER IKJPARS       A45714
.* MACROS FOR ALL THE DATA SET TYPES PASSED BY THE 'DST'         A45714
.* PARAMETER.                                                    A45714
         LCLA  &I,&J,&K                                          A45714
         LCLB  &SW                                               A45714
.*A013300,321500-321597,352900,394700-394720,467700,470700       A45713
.*A477900-480713,480792,486500-494784,501500-502392              A45713
.*A704700-704797,749500-749597,750100,781700                     A45713
.*A781740-781780,787520-787540                                   A45713
.*C013000-013200,467200-467600,480772,480829,481800,482400       A45713
.*C483800,485200,485600,496000,496600                            A45713
.*D477600-479800,482600-483200,486200-494600,499400-499600       A45713
.*D500600-501200,501600-502200                                   A45713
.*A000300-000557,070100,070300,403100-405740,409100-412329       A45714
.*A421300-421380,503120-503969,578700-585900,587300,592300       A45714
.*A727300,731300-732376,759500,781724,781784-781926              A45714
.*C069800,579000-579200,706200,707000,711000,728600,729600       A45714
.*D402600-405600,408800-411600,502800-503000                     A45714
.*A412600-412800                                                 A50467
.*D412600-412800                                                 A50467
.*A139000-141188,141300-141520,281820-282000,370010-370040      YA00002
.*A370810-370820                                                YA00002
.*C141800,292800,328400                                         YA00002
.*D139000-141000,141400,282000-284200                           YA00002
.*A511200                                                       YA00871
.*C511000                                                       YA00871
.*D510200-510600                                                YA00871
.*A744000-744392                                                 SM5064
.*D744000                                                        SM5064
.*A092900-093197,521900-522197,580500-580599                     Y02676
.*C007400-008000,423400-423600,427200,530800,534400              Y02676
.*D092600-093000,521600-522000,580200-580400                     Y02676
.*A267405-267450,272605-272625,274005-274010,275005              Y01676
.*A334001-334010                                                 Y01676
.*D267600-270000,274200-274400                                   Y01676
.*C409200                                                      @YA01909
.*A023700,,077500-077666,136900-136984                         @YA02225
.*D732810                                                      @YM04732
.*A280900-280984,292100-292184,326900-326984,354700-354760     @YA02225
.*A510500-510784,591700-591740                                 @YA02225
.*D077600-078000,137000-137200,281000-281200,292200-292400     @YA02225
.*D327000-327200,354800-355000,510800-511200,591800-592000     @YA02225
.*C431920,432600                                               @Y30NQKK
.*A249420-249870,363850-363900,822430-822530,822700            @ZA05823
.*A828010,030010,415410-415430                                 @ZA05823
.*C250600,238200-238800                                        @ZA05823
.*D240200-249200,257400,239000
.*                  ABEND 0C9 ON 3350 DEVICE                   @ZA13889
.*                  LAST BLOCK OVERHEAD ERROR                  @ZA25135
.* INITIALIZE TO NUMBER OF DATA SET TYPES PASSED.                A45714
&I       SETA  N'&DST                                            A45714
.* INITIALIZE LOOP CONTROL INDEX FOR 'DST' PARAMETER.            A45714
&J       SETA  1                                                 A45714
.* INITIALIZE INDEX FOR USER DATA SET TYPES.                     A45714
&K       SETA  1                                                 A45714
.* INITIALIZE SWITCH TO INDICATED IF SUBFIELD REQUIRED.          A45714
&SW      SETB  0                                                 A45714
.* CHECK IF ANY DSTYPES PASSED, IF NOT, ERROR HAS OCCURRED       A45714
         AIF   (&I GT 0).TAG0                                    A45714
         MNOTE 8,'DATA SET TYPE PARAMETERS MISSING.'             A45714
         MEXIT                                                   A45714
.TAG0    ANOP                                                    A45714
.* CHECK FOR TOO MANY DATA SET TYPES - INDEX 'I' GT 26.          Y02676
         AIF   (&I LE 26).TAGX1                                  Y02676
.* PROCESS ONLY FIRST 26 - SET INDEX 'I' TO 26.                  Y02676
&I       SETA  26                                                Y02676
.* CHECK IF ANY TRAILING 'DST' ENTRIES ARE NULL.                 A45714
.TAGX1   AIF   ('&DST(&I)' NE '').OUTX1                          A45714
.* IF NULL, DECREMENT INDEX 'I' TO NEXT ENTRY.                   A45714
&I       SETA  &I-1                                              A45714
         AGO   .TAGX1                                            A45714
.* INDEX 'I' EQUALS NO. OF NON-NULL 'DST' ENTRIES.               A45714
.OUTX1   ANOP                                                    A45714
BEIN     TITLE 'IKJEBEIN - INITIALIZATION MODULE - EDIT CP TSO/360'
IKJEBEIN CSECT
*A 327000,327600                                                 A42958
*C 327400                                                        A42958
*A 264200-265600                                                 A42947
*C 399400-400400                                                 A42959
*C117800,118000                                                 ZA28057
*A194600,259630-259750                                          ZA32095
*A643700                                                        ZA32148
*C204800,205200,265800,266200                                   ZA33984
* D674600-675000,675400-676000                                 @OZ32315
*C217800 SEQ DATASETS AS PO                                     OZ37857
*C670600,A670700                                               @ZA57015
*A342606-342792               CLEAN UP AFTER LOCATE RC 12      @ZA73615
*A342752,A342754,A370803,A370806   LOOP MSGIKJ52313I           @ZA77969
*
*   OZ85473 -- REPLACE CALCULATIONS FOR NUMBER OF BLOCKS ON
*              ONE TRACK OF A DEVICE WITH THE TRKCALC MACRO    @ZA85473
*
*   OZ85402 -- DISPOSITION OF KEEP,KEEP WAS REMOVED FROM THE DAIR 08
*              AND 18 REQUEST BLOCKS SO THAT THE DISP OF THE EDITTED
*              DATASET WOULD REMAIN UNCHANGED                  @ZA85402
*
*   OZ86100 -- MSGIKJ52309I WHEN EDITING AN EXISTING BUT EMPTY PDS
*                                                              @ZA86100
*
*   OZ86786 -- WHEN EDITING A NEW MEMBER OF AN EXISTING PDS THE EDIT
*              DATASET WILL HAVE A DISP OF OLD AND NOT NEW. THIS WILL
*              CAUSE THE CURRENT RECFM, LRECL AND BLKSIZE TO BE USED
*              INSTEAD OF THE DEFAULT VALUES IN BUILDING THE EDIT
*              UTILITY DATASET.                                @ZA86786
*                                                              @ZA86786
*
*   OZ91718 -- DELETE 11 LINES AT LABEL IN009070 ORIGINALLY INSERTED
*              FOR APAR OZ86786.  THESE LINES WERE USED TO SET THE
*              'CAEDMODE' BIT, BUT ARE NOT NEEDED BECAUSE THIS BIT
*              IS NOT DEFINED OR USED IN THE BASE 370 OR THE BASE XA
*              VERSION OF EDIT.                                @ZA91718
*
*   OZ97056 -- CHECK BOTH BYTES OF DATASET ORGANIZATION RETURNED BY
*              THE OBTAIN MACRO SO WE DO NOT ATTEMPT EDIT OF A
*              NON-SUPPORTED DATASET ORGANIZATION (VSAM). CODE
*              ADDED TO STOP LOOPING IF BAD UNALLOCATION RETURN
*              CODE (16) FROM DAIR.                           @ZA97056
*
*   OY02153 -- CODE ADDED TO STOP LOOP IF ANY BAD UNALLOCATION @YA02153
*              RETURN CODE FROM DAIR.                          @YA02153
*
*   OY01501 -- ADD SECOND BASE REG                             @YA01501
*
*   OY07954 -- UNALLOCATE THE DATASET BEING EDITED IF          @YA07954
*              AN ABEND OCCURS.                                @YA07954
*
***********************************************************************
         ENTRY IKJEBEIN
         ENTRY IKJEBIN0
***********************************************************************
* MODULE NAME -- IKJEBEIN                                             *
*                                                                     *
* DESCRIPTIVE NAME -- EDIT INITIALIZATION                             *
*                                                                     *
* COPYRIGHT -- N/A                                                    *
*                                                                     *
* CHANGE ACTIVITY -- SEE INFORMATION PRECEDING PROLOGUE               *
*                                                                     *
* STATUS -- VERSION NO. 02, VS/2 RELEASE 3 PTF UZ03371        @ZA08735*
*                                          PTF UZ04307        @ZA10761*
*            ABEND 0C9 ON 3350 DATA SETS                      @ZA13889*
*                                                                     *
* FUNCTION -- THIS ROUTINE IS ATTACHED BY THE TERMINAL MONITOR        *
*    PROGRAM (TMP) WHENEVER THE USER ENTERS THE EDIT COMMAND.         *
*    IKJEBEIN ISSUES A GETMAIN MACRO INSTRUCTION FOR THE EDIT         *
*    COMMUNICATION AREA, SCANS THE COMMAND BUFFER USING IKJPARS, AND  *
*    INITIALIZES THE COMMUNICATION AREA TO CONTAIN VALUES             *
*    REPRESENTING OPERANDS ON THE EDIT COMMAND.  IF THE USER SPECIFIES*
*    THAT THE DATA SET IS OLD, IKJEBEIN ALLOCATES IT USING IKJDAIR    *
*    AND VERIFIES THAT ITS ATTRIBUTES ARE CONSISTENT WITH THE OTHER   *
*    OPERANDS SPECIFIED ON THE COMMAND.  WHEN IKJEBEIN COMPLETES      *
*    SUCCESSFULLY, CONTROL IS PASSED TO THE EDIT MAIN CONTROLLER,     *
*    IKJEBEMA, VIA AN XCTL MACRO INSTRUCTION.                         *
*                                                                     *
* ENTRY POINTS --                                                     *
*         IKJEBEIN - AFTER BEING ATTACHED BY THE TMP WHEN THE EDIT    *
*                    COMMAND IS ENTERED AT THE TERMINAL.              *
*                                                                     *
* INPUT --                                                            *
*    REGISTER ONE (1) CONTAINS A POINTER TO THE COMMAND PROCESSOR     *
*    PARAMETER LIST (CPPL).                                           *
*                                                                     *
* OUTPUT --                                                           *
*    REGISTER FIFTEEN (15) CONTAINS A RETURN CODE INDICATING WHETHER  *
*    EDIT COMPLETED SUCCESSFULLY OR NOT.  RETURN CODES ARE --         *
*                                                                     *
*    00 - SUCCESSFUL COMPLETION.                                      *
*    12 - UNSUCCESSFUL COMPLETION.                                    *
*                                                                     *
* EXTERNAL REFERENCES --                                              *
*         IKJDAIR  - SERVICE ROUTINE USED TO DYNAMICALLY ALLOCATE     *
*                    THE EDIT DATA SET                                *
*         IKJEBECO - INITIAL COPY ROUTINE - INVOKED TO COPY AN OLD    *
*                    DATA SET TO THE UTILITY DATA SET                 *
*         IKJEBEMS - MESSAGE SELECTION ROUTINE LOADED BY              *
*                    THIS ROUTINE                                     *
*         IKJEBEPS - PROCESSOR TABLE SEARCH ROUTINE LOADED BY         *
*                    THIS ROUTINE                                     *
*         IKJEBEUI - UTILITY INITIALIZATION ROUTINE - USED TO         *
*                    INITIALIZE THE EDIT ACCESS METHOD WHEN THE USER  *
*                    HAS SPECIFIED A NEW DATA SET                     *
*         IKJEBEUT - UTILITY INTERFACE ROUTINE - LOADED BY THIS       *
*                    ROUTINE PRIOR TO THE COPY OF THE EDIT DATA SET   *
*                    AND DELETED WHEN THE COPY IS COMPLETE            *
*         IKJEBIN1 - EDIT COMMAND PCL (PARAMETER CONTROL LIST)        *
*         IKJEBIN2 - PCL FOR NEW/OLD PROMPT                           *
*         IKJEBIN3 - INITIAL MESSAGE PROCESSING ROUTINE               *
*         IKJEBIN4 - IKJPARS NUMERIC SUBFIELD VALIDITY CHECK EXIT     *
*         IKJEBIN5 - DATA SET TYPE PROMPTING ROUTINE                  *
*         IKJEBIN7 - PARTIALLY QUALIFIED DSNAME PROCESSING ROUTINE    *
*         IKJEBIN8 - OPERAND VALIDITY CHECKING AND CONVERSION         *
*                    ROUTINE                                          *
*         IKJPARS  - SERVICE ROUTINE USED TO SYNTAX CHECK THE EDIT    *
*                    COMMAND AND RESPONSES TO NEW/OLD PROMPT     A45713
*         IKJPTGT  - SERVICE ROUTINE USED TO PROMPT FOR DATA SET A45713
*                    TYPE                                        A45713
*                                                                     *
*    MACROS USED --                                                   *
*                                                                     *
*         BLDL     - BUILD LIST OF DIRECTORY INFORMATION              *
*         CALL     - PASS CONTROL TO LOADED PROGRAM                   *
*         CALLTSSR - INVOKE SERVICE ROUTINES                  @YA02225*
*         CAMLST   - BUILD CONTROL LIST FOR OBTAIN MACRO INSTRUCTION  *
*         CVT      - DEFINE THE COMMUNICATIONS VECTOR TABLE (CVT)     *
*         DCBD     - DEFINE THE DATA CONTROL BLOCK (DCB)              *
*         DELETE   - DELETE COPY OF LOADED PROGRAM FROM MAIN STORAGE  *
*         DEVTYPE  - OBTAIN DEVICE DEPENDENT INFORMATION              *
*         FREEMAIN - FREE CORE OBTAINED VIA GETMAIN MACRO INSTRUCTION *
*         GETMAIN  - GET CORE FOR EDIT COMMUNICATION AREA             *
*         IECSDSL1 - DEFINE THE DATA SET CONTROL BLOCK (DSCB) FORMAT 1*
*         IEFUCBOB - DEFINE THE UNIT CONTROL BLOCK (UCB)              *
*         IEFTIOT1 - DEFINE THE TASK INPUT/OUTPUT TABLE (TIOT)        *
*         IKJCPPL  - DEFINE THE COMMAND PROCESSOR PARAMETER           *
*                    LIST (CPPL)                                      *
*         IKJDFPL  - DEFINE THE DEFAULT SERVICE ROUTINE PARAMETER LIST*
*         IKJDFPB  - DEFINE THE DEFAULT SERVICE ROUTINE PARAMETER     *
*                    BLOCK                                            *
*         IKJEBECA - DEFINE EDIT COMMUNICATION AREA                   *
*         IKJEBESH - PASS CONTROL TO EDIT SERVICE ROUTINES            *
*         IKJECT   - DEFINE THE ENVIRONMENT CONTROL TABLE (ECT)       *
*         IKJENDP  - END IKJPARS PCL                                  *
*         IKJIDENT - DEFINE POSITIONAL OPERAND TO IKJPARS             *
*         IKJKEYWD - DEFINE KEYWORD OPERAND TO IKJPARS                *
*         IKJNAME  - DEFINE VALID KEYWORDS FOR KEYWORD OPERAND        *
*                    TO IKJPARS                                       *
*         IKJPARM  - BEGIN IKJPARS PCL                                *
*         IKJPOSIT - DEFINE POSITIONAL OPERAND TO IKJPARS             *
*         IKJPPL   - DEFINE THE IKJPARS PARAMETER LIST (PPL)          *
*         IKJPSCB  - DEFINE THE PROTECTED STEP CONTROL BLOCK (PSCB)   *
*         IKJRLSA  - RELEASE IKJPARS PDL                              *
*         IKJSUBF  - DEFINE SUBFIELD OF AN OPERAND TO IKJPARS         *
*         IKJTCB   - DEFINE THE TASK CONTROL BLOCK (TCB)              *
*         LINK     - LOAD AND PASS CONTROL TO EXTERNAL PROGRAM        *
*         LOAD     - LOAD PROGRAM INTO MAIN STORAGE                   *
*         LOCATE   - DETERMINE VOLID AND F1 DSCB NAME         @ZA05823*
*         OBTAIN   - READ DSCB INTO MAIN STORAGE                      *
*         RETURN   - RESTORE CALLERS REGISTERS BEFORE RETURN          *
*         SAVE     - SAVE REGISTERS ON INITIAL ENTRY                  *
*         TRKCALC  - GET COUNT OF BLOCKS THAT FIT ON 1 TRACK  @ZA85473*
*         XCTL     - TRANSFER CONTROL TO MAIN CONTROLLER              *
*                                                                     *
* EXITS, NORMAL --                                                    *
*    WHEN IKJEBEIN COMPLETES SUCCESSFULLY, CONTROL IS PASSED TO THE   *
*    MAIN CONTROLLER ROUTINE, IKJEBEMA, VIA AN XCTL MACRO INSTRUCTION.*
*                                                                     *
* EXITS, ERROR --                                                     *
*    WHEN IKJEBEIN ENCOUNTERS ANY CONDITION WHICH DOES NOT ALLOW      *
*    IT TO COMPLETE SUCCESSFULLY, CONTROL IS RETURNED TO THE TMP      *
*    BY BRANCHING ON REGISTER FOURTEEN (14).                          *
*                                                                     *
* TABLES/WORK AREAS --                                                *
*                                                                     *
*    THE EDIT COMMUNICATION AREA IS BUILT AND INITIALIZED BY          *
*    IKJEBEIN.  IKJEBEIN WILL INITIALIZE THE FULLY QUALIFIED DATA SET *
*    NAME, DATA SET TYPE, DATA SET DEPENDENT INFORMATION, LRECL,      *
*    BLKSIZE, SEQUENCE NUMBER FIELD DESCRIPTION, SYNTAX CHECKING      *
*    INFORMATION, AND WILL INDICATE WHETHER DATA IS TO BE MAINTAINED  *
*    AS ENTERED OR TRANSLATED TO UPPER CASE ALPHABETICS.              *
*                                                                     *
*    THE EDIT COMMAND PDL (PARAMETER DESCRIPTOR LIST) IS RETURNED     *
*    BY IKJPARS AFTER SCANNING THE EDIT COMMAND.  IT ALLOWS IKJEBEIN  *
*    TO ADDRESS COMMAND OPERANDS FOR PURPOSES OF CONVERSION,          *
*    INITIALIZATION, AND VALIDATION.  IT IS ALWAYS FREEMAINED BEFORE  *
*    IKJEBEIN RELINQUISHES CONTROL.                                   *
*                                                                     *
* ATTRIBUTES --                                                       *
*    REFRESHABLE, ENABLED, NON-PRIVILEGED                             *
*                                                                     *
* CHARACTER CODE DEPENDENCY --                                        *
*    THE MAIN CSECT OF THE EDIT INITIALIZATION IS NOT CHARACTER       *
*    CODE DEPENDENT.                                                  *
*                                                                     *
* NOTES -- NONE.                                                      *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*   GENERAL PURPOSE REGISTER EQUATES FOR THIS ROUTINE.                *
*                                                                     *
***********************************************************************
ENTCDREG EQU   0              REGISTER USED TO CONTAIN ENTRY CODE
PARMREG0 EQU   0              PARAMETER REGISTER.
PARMREG1 EQU   1              INPUT - ADDRESS OF COMMAND PROCESSOR
*                                  PARAMETER LIST.
*                             OUTPUT - ADDRESS OF THE EDIT
*                                  COMMUNICATION AREA.
*                             GENERAL USAGE IN THIS MODULE -
*                                  ADDRESS OF A PARAMETER LIST TO
*                                  BE PASSED TO A ROUTINE INVOKED
*                                  BY IKJEBEIN.
INDEXREG EQU   2              REGISTER USED AS INDEX INTO TABLE
*                                  OF DATA SET TYPES.
LENREG   EQU   2              REGISTER USED TO CONTAIN LENGTH FOR
*                                  CURRENT OPERATION.
UPTREG   EQU   3              ADDRESS OF UPT.
COUNTREG EQU   3              LOOP CONTROL COUNTER.
STAEREG  EQU   3              ADDRESS OF STAE EXIT ROUTINE    @YA07954
ECTREG   EQU   4              ADDRESS OF ECT.
FLAGREG  EQU   3              FLAG BYTE USED IN IMMEDIATE
*                                  INSTRUCTIONS.
SIZEREG  EQU   3              SIZE OF AREA BEING INITIALIZED
*                                  DURING CURRENT OPERATION.
TABPTREG EQU   3              ADDRESS OF CURRENT LOCATION IN
*                                  TABLE BEING REFERENCED.
AREAREG  EQU   4              ADDRESS OF CURRENT POSITION IN AREA
*                                  BEING INITIALIZED.
QUALREG  EQU   4              ADDRESS OF DATA SET QUALIFIER.
*                                  PROCESSED.
DSNAMREG EQU   5              ADDRESS OF DATA SET NAME.
ECBREG   EQU   5              ADDRESS OF ATTENTION ECB.
ERR1REG  EQU   5              REGISTER USED FOR RELATIVE FIRST
*                                  LEVEL MESSAGE NUMBER.
STRTNREG EQU   5              START COLUMN NUMBER FOR NUM CHECK.
ERR2REG  EQU   6              REGISTER USED FOR RELATIVE SECOND
*                                  LEVEL MESSAGE NUMBER.
PCLREG   EQU   6              ADDRESS OF PCL FOR IKJPARSE.
TMPREG   EQU   6              ADDRESS OF TMP PARAMETER LIST.
TMPCDREG EQU   6              REGISTER USED TO TEST RETURN CODES
*                                  FROM INVOKED ROUTINES.
TYPNOREG EQU   6              REGISTER USED AS COUNTER FOR NUMBER
*                                  OF ENTRIES REMAINING IN DATA
*                                  SET TYPE.
DATA1REG EQU   7              REGISTER USED TO TRANSMIT DATA TO
*                                  IKJEBEIA FOR MESSAGE INSERTION.
PDLREG   EQU   7              ADDRESS OF AREA FOR IKJPARSE TO
*                                  RETURN PDL ADDRESS.
DATA2REG EQU   8              REGISTER USED TO TRANSMIT DATA TO
*                                  IKJEBEIA FOR MESSAGE INSERTION.
PASSREG  EQU   8              ADDRESS OF PSCB.
SRRTNREG EQU   8              REGISTER USED TO LINK TO INTERNAL
*                                  SUBROUTINES.
COMMREG  EQU   9              BASE REGISTER USED TO ADDRESS THE
*                                  COMMUNICATION AREA.
BASEREG2 EQU   10             SECOND BASE REGISTER             @YA01501
BASEREG  EQU   11             BASE REGISTER FOR THIS CSECT
DATAREG  EQU   12             BASE REGISTER USED TO ADDRESS THE
*                                  INPUT PARAMETER LIST.
SAVEREG  EQU   13             ADDRESS OF SAVE AREA.
RETREG   EQU   14             ADDRESS OF RETURN POINT IN CALLING
*                                  MODULE.
TOPPTR   EQU   14             POINTER TO TOP OF DATASET.         Y01676
EPLOCREG EQU   15             ENTRY POINT ADDRESS OF MODULE TO BE
*                                  INVOKED.
RETCDREG EQU   15             CONDITION CODE RETURNED TO CALLING
*                                  ROUTINE.
         EJECT
***********************************************************************
*                                                                     *
*   PROLOG                                                            *
*                                                                     *
***********************************************************************
         SAVE  (14,12),,*     SAVE ENTRY REGISTERS.
         BALR  BASEREG,PARMREG0 ESTABLISH A BASE REGISTER AND
@PSTART  EQU   *                                               @YA01501
         USING @PSTART+0,BASEREG   ESTABLISH ADDRESSIBILITY    @YA01501
         LA    BASEREG2,4095(0,BASEREG) 2ND REG ADDRESSABLE    @YA01501
         USING @PSTART+4095,BASEREG2    IS REQURIED.           @YA01501
         LR    DATAREG,PARMREG1 SAVE ADDRESS OF INPUT PARAMETERS.
         GETMAIN R,LV=CADLEN,SP=SUBPOOL GET SAVE AND WORK AREA.
         LR    COMMREG,PARMREG1 ADDRESS OF COMMUNICATION AREA.
         EJECT
***********************************************************************
*                                                                     *
*   ESTABLISH ADDRESSABILITY TO COMMUNICATION AREA AND INITIALIZE     *
*   TO ZERO.  INITIALIZE ADDRESS TO TMP PARAMETER LIST.               *
*                                                                     *
***********************************************************************
         USING IKJEBECA,COMMREG  ESTABLISH ADDRESSABILITY TO
*                                  COMMUNICATION AREA.
         LA    LENREG,INF255  NUMBER OF BYTES SET TO ZERO EACH
*                                  TIME THROUGH LOOP BUT LAST.
         LA    SIZEREG,CADLEN SIZE OF COMMUNICATION AREA.
         BCTR  SIZEREG,PARMREG0 REDUCE SIZE OF COMMUNICATION AREA
*                                  BY 1.
         LR    AREAREG,COMMREG COPY ADDRESS OF AREA TO BE SET
*                                  TO ZERO.
IN001010 EQU   *
         CR    SIZEREG,LENREG DETERMINE IF SIZE GREATER THAN 255.
         BNH   IN001020       IF NOT, BRANCH TO SET REMAINING
*                                  AREA TO ZERO.
         EX    LENREG,INXC001 ZERO 255 BYTES.
         AR    AREAREG,LENREG UPDATE POINTER TO NEXT SECTION TO
*                                  BE SET TO ZERO.
         SR    SIZEREG,LENREG DECREMENT NUMBER OF BYTES TO BE
*                                  ZEROED BY NUMBER JUST SET TO
*                                  ZERO.
         B     IN001010       BRANCH TO CHECK IF DONE.
IN001020 EQU   *
         EX    SIZEREG,INXC001 ZERO NUMBER OF BYTES REMAINING.
         LA    RETCDREG,CASVAREA ADDRESS OF SAVE AREA IN THE
*                                  COMMUNICATION AREA.
         ST    SAVEREG,D4(,RETCDREG) CROSS CHAIN PREVIOUS AND
         ST    RETCDREG,D8(,SAVEREG) CURRENT SAVE AREAS AND
         LR    SAVEREG,RETCDREG    INITIALIZE REG13 TO POINT TO
*                                  CURRENT SAVE AREA.
         LA    RETCDREG,D72(,RETCDREG) COMPUTE ADDRESS OF NEXT
         ST    RETCDREG,CANXTSVA   LOWER SAVE AREA AND SAVE
*                                  IN COMMUNICATION AREA.
         ST    DATAREG,CAPTTMP SAVE ADDRESS TO INPUT PARAMETER
*                                  LIST FROM TMP.
         EJECT
***********************************************************************
*                                                                     *
*   LOAD IKJEBEMS (MESSAGE SELECTION ROUTINE).  SAVE ENTRY POINT      *
*   ADDRESS IN THE COMMUNICATION AREA.                                *
*                                                                     *
***********************************************************************
         SPACE 2
         LOAD  EP=IKJEBEMS    LOAD IKJEBEMS.
         ST    PARMREG0,CAPTMS SAVE ENTRY POINT ADDRESS IN THE
*                                  COMMUNICATION AREA.
         SPACE 2
         EJECT
***********************************************************************
*                                                                     *
*   BUILD MODE MESSAGE INSERTION IN THE COMMUNICATION AREA.  THE      *
*   INSERTION RECORD CONTAINS THE NAME OF THE EDIT COMMAND AS THE     *
*   USER ENTERED IT.                                                  *
*                                                                     *
***********************************************************************
         L     AREAREG,CAPTTMP ADDRESS OF CPPL.
         L     AREAREG,(CPPLECT-CPPL)(,AREAREG) ADDRESS OF ECT.
         MVC   CAMODETX+D1(L'ECTPCMD),(ECTPCMD-ECT)(AREAREG)
*                             MOVE COMMAND NAME TO INSERTION
*                                  RECORD.
         MVI   CAMODETX,CHRBLANK MOVE IN BLANK BEFORE COMMAND
*                                  NAME.
         LA    LENREG,(L'ECTPCMD+D1)(,D0) LOOP CONTROL COUNTER.
         LA    SIZEREG,CAMODETX+(L'ECTPCMD) ADDRESS OF LAST
*                                  CHARACTER IN COMMAND NAME.
IN000010 EQU   *
         CLI   D0(SIZEREG),CHRBLANK CHECK FOR BLANK.
         BNE   IN000020       IF NOT A BLANK, ALL TRAILING BLANKS
*                                  HAVE BEEN SUPPRESSED.
         BCTR  SIZEREG,D0     BACK POINTER UP ONE CHARACTER.
         BCT   LENREG,IN000010 REDUCE COUNTER BY ONE AND BRANCH
*                                  TO CHECK NEXT BYTE.
IN000020 EQU   *
         LA    LENREG,D4(,LENREG) COMPUTE LENGTH OF INSERTION
         STH   LENREG,CAMODELN AND SAVE IN CONTROL FIELD.
         LA    LENREG,D1(,D0) INITIALIZE NUMBER OF SEGMENTS IN
         ST    LENREG,CAMODEIS     MODE MESSAGE.
         LA    AREAREG,CAMODELN INITIALIZE ADDRESS OF MODE
         ST    AREAREG,CAMODEPT    MESSAGE IN OUTPUT DESCRIPTOR.
         EJECT
MASTAE   EQU   *
***********************************************************************
*                                                                     *
*   ESTABLISH AN ABNORMAL END EXIT FOR THE EDIT COMMAND PROCESSING    *
*   PROGRAM.                                                  @YA07954*
*                                                                     *
***********************************************************************
         LOAD EP=IKJEBEAE                                     @YA07954
         LR    STAEREG,PARMREG0  ADDRESS OF ESTAE EXIT ROUTINE@YA07954
         MVC   CASTAEPL(MASTAELN),MASTAELF MOVE LIST-FORM     @YA07954
*                                  PARAMETERS TO DYNAMIC AREA.@YA07954
         ESTAE  (STAEREG),CT,PARAM=(COMMREG),XCTL=YES,                 X
               MF=(E,CASTAEPL),TERM=NO   ESTABLISH ESTAE EXIT.@YA07954
         OI    MACFLAGS,MAEBEIN    TURN ON MAEBEIN FLAG       @YA07954
*
         EJECT
***********************************************************************
*                                                                     *
*   CALL IKJPARS TO SYNTAX CHECK THE EDIT COMMAND.                    *
*                                                                     *
*   INITIALIZE THE FIRST THREE WORDS OF THE SERVICE ROUTINE PARAMETER *
*   LIST (CAPTUPT, CAPTECT, CAPTECT) TO POINT TO THE UPT, ECT, AND    *
*   THE EDIT ATTENTION ECB.                                           *
*                                                                     *
*   INITIALIZE THE SEVEN WORD PARAMETER LIST FOR IKJPARS.  LINK TO    *
*   IKJPARS TO SYNTAX CHECK THE EDIT COMMAND AND TO BUILD THE         *
*   PARAMETER DESCRIPTOR LIST.                                        *
*                                                                     *
***********************************************************************
         L     DATAREG,CAPTTMP ADDRESS OF PARAMETER LIST PASSED
*                                  BY TMP.
         L     UPTREG,(CPPLUPT-CPPL)(,DATAREG) GET ADDRESS
*                                  OF UPT.
         L     ECTREG,(CPPLECT-CPPL)(,DATAREG) GET ADDRESS
*                                  OF ECT.
         LA    ECBREG,CAATTN  GET ADDRESS OF ATTENTION ECB.
         L     PCLREG,INPTPCL ADDRESS OF PCL FOR IKJPARSE.
         L     PASSREG,(CPPLCBUF-CPPL)(,DATAREG) ADDRESS OF
*                                  EDIT COMMAND.
         LA    PDLREG,CAPTPRSD SPECIFY ADDRESS OF AREA IN
*                                  WHICH IKJPARS RETURNS THE
*                                  POINTER TO THE PDL.
         XC    CATMPLST+(PPLPCL-PPL)(PPLUWA-PPLPCL+L'PPLUWA),CATMPLST+(X
               PPLPCL-PPL)    ZERO IKJPARS PORTION OF PARAMETER
*                                  LIST.
         LA    PARMREG1,CATMPLST  ADDRESS OF PARAMETER LIST    @YA02225
         STM   UPTREG,COMMREG,0(PARMREG1)  STORE IN PARM LIST  @YA02225
         CALLTSSR EP=IKJPARS  INVOKE PARSE SERVICE ROUTINE     @YA02225
IN001060 EQU   *
         B     IN001060+D4(RETCDREG) IKJPARS RETURN CODE BRANCH
*                                  TABLE.
         B     IN001070       00 - SUCCESSFUL COMPLETION.
         B     INEXIT2        04 - COMMAND NOT COMPLETE, COULD
*                                  NOT PROMPT, RETURN.
         B     INEXIT2        08 - ATTENTION ISSUED, RETURN.
         B     IN001065       12 - INVALID PARAMETERS.
         B     IN001062       16 - NO MAIN STORAGE AVAILABLE --  A45714
         B     IN001065       20 - ERROR IN VALID. CHK EXIT.     A45714
*                                  PUT ERROR MESSAGE AND RETURN.
         SPACE 2
IN001062 EQU   *                                                 A45714
***********************************************************************
*                                                                     *
*   ISSUE NO MAIN STORAGE AVAILABLE MESSAGE AND TERMINATE.            *
*                                                                     *
***********************************************************************
         LA    ERR1REG,INERROR1 RELATIVE ERROR TO BE PROCESSED.
         B     IN010010       BRANCH TO CALL IKJEBIN3 TO PUT
*                                  ERROR MESSAGE AND RETURN.
         SPACE 2
***********************************************************************
*                                                                     *
*   ISSUE COMMAND SYSTEM ERROR MESSAGE AND TERMINATE.                 *
*                                                                     *
***********************************************************************
IN001065 EQU   *
         LA    ERR1REG,INERROR2 RELATIVE ERROR TO BE PROCESSED.
         LR    DATA2REG,RETCDREG SAVE RETURN CODE FOR MESSAGE.
         O     DATA2REG,INPARS INDICATE ROUTINE NAME AS IKJPARS.
         B     IN010010       BRANCH TO CALL IKJEBIN3 TO PUT
*                                  ERROR MESSAGE AND RETURN.
         SPACE 2
IN001070 EQU   *
         L     DATAREG,CAPTPRSD ADDRESS OF EDIT PDL.
         USING INECMNDD,DATAREG    AND ESTABLISH ADDRESSABILITY
*                                  TO IT.
         EJECT
***********************************************************************
*                                                                     *
*   DETERMINE IF DATA SET TYPE SPECIFIED ON THE EDIT COMMAND.  IF     *
*   DATA SET TYPE NOT SPECIFIED, BRANCH TO PROCESS DATA SET NAME.     *
*                                                                     *
*   WHEN DATA SET TYPE IS SPECIFIED, INITIALIZE THE DATA SET TYPE     *
*   FIELD IN THE COMMUNICATION AREA USING A DATA SET TYPE FROM        *
*   INDSTAB LOCATED BY THE KEYWORD NUMBER RETURNED BY IKJPARS.        *
*   AFTER THE DATA SET TYPE IS INITIALIZED, LOAD AND CALL IKJEBEPS    *
*   TO VERIFY THE DATA SET TYPE AND RETURN ALL DATA SET DEPENDENT     *
*   INFORMATION.                                                      *
*                                                                     *
***********************************************************************
         CLC   INDSTYPE(L'INNOKEYW),INNOKEYW DETERMINE IF DATA
*                                  SET TYPE SPECIFIED ON COMMAND.
         BE    IN001075       IF NOT SPECIFIED, BRANCH TO PROCESS
*                                  DATA SET NAME.
         LH    INDEXREG,INDSTYPE OBTAIN KEYWORD NUMBER RETURNED
*                                  BY IKJPARS TO BE USED AS
*                                  INDEX TO DATA SET TYPE TABLE.
         SLL   INDEXREG,D3(D0) MULTIPLY INDEX BY 8.
         LA    AREAREG,IKJEBIN0-D8(INDEXREG) OBTAIN ADDRESS OF
*                                  DATA SET TYPE.
         MVC   CADSTYPE(INDSTELN),D0(AREAREG) MOVE DATA SET TYPE
*                                  TO COMMUNICATION AREA TO BE
*                                  USED AS INPUT PARAMETER TO
*                                  IKJEBEPS.
         LOAD  EP=IKJEBEPS    LOAD PROCESSOR TABLE SEARCH ROUTINE
         LR    EPLOCREG,PARMREG0 COPY ENTRY POINT ADDRESS.
         CALL  (15),,MF=(E,CADSTYPE) BRANCH TO IKJEBEPS.
         LTR   RETCDREG,RETCDREG TEST FOR SUCCESSFUL COMPLETION.
         BNZ   IN001071       IF RETURN CODE = 4, BRANCH TO PUT
*                                  ERROR MESSAGE AND RETURN.
         MVC   CADSTYPE(CADATEXT-CAPD),D0(PARMREG1) MOVE FIRST   Y02676
*                                  PORTION OF TYPE-DEPENDENT     Y02676
*                                  INFORMATION TO THE            Y02676
*                                  COMMUNICATION AREA.           Y02676
         LA    RETCDREG,CAPDEXT OBTAIN ADDRESS OF PROCESSOR      Y02676
*                                  TABLE EXTENSION.              Y02676
         ST    RETCDREG,CAPTPDXT STORE PTR TO EXTENSION AREA.    Y02676
         USING IKJEBECX,RETCDREG EXTENSION ADDRESSABILITY.       Y02676
         MVC   CXDATEXT(CXDLEN),CADATEXT-CAPD(PARMREG1)  MOVE    Y02676
*                                  REMAINING INFORMATION TO      Y02676
*                                  TABLE EXTENSION AREA.         Y02676
         DROP  RETCDREG       END EXTENSION ADDRESSABILITY.      Y02676
         DELETE EP=IKJEBEPS   DELETE LOAD MODULE FROM CORE.
         B     IN001075       BRANCH TO PROCESS DATA SET NAME.
         SPACE 2
***********************************************************************
*                                                                     *
*   ISSUE COMMAND SYSTEM ERROR MESSAGE.                               *
*                                                                     *
***********************************************************************
IN001071 EQU   *
         DELETE EP=IKJEBEPS   DELETE PROCESSOR SEARCH ROUTINE.
         LA    ERR1REG,INERROR2 RELATIVE ERROR TO BE PROCESSED.
         LA    DATA2REG,ININS004 ADDRESS OF INSERTION LIST FOR
*                                  SECOND LEVEL MESSAGE.
         B     IN010010       BRANCH TO CALL IKJEBIN3 TO PUT
*                                  ERROR MESSAGE AND TERMINATE.
         EJECT
***********************************************************************
*                                                                     *
*   DATA SET NAME PROCESSING.                                         *
*                                                                     *
*   UPON RETURN FROM IKJPARS, DETERMINE IF DATA SET NAME WAS ENTERED  *
*   FULLY QUALIFIED.  IF NOT FULLY QUALIFIED, BRANCH TO FULLY         *
*   QUALIFY THE DATA SET NAME.  WHEN FULLY QUALIFIED, DETERMINE IF    *
*   USER SPECIFIED A DATA SET TYPE.  IF A DATA SET TYPE WAS NOT       *
*   ENTERED, USE PARSE TO PROMPT FOR THE DATA SET TYPE.               *
*                                                                     *
***********************************************************************
IN001075 EQU   *
         MVI   CAEDDSN,CHRBLANK INITIALIZE DATA SET NAME, MEMBER
         MVC   CAEDDSN+D1(CAEDPSWD+L'CAEDPSWD-CAEDDSN-D1),CAEDDSN
*                                  NAME, DDNAME AND PASSWORD
*                                  FIELDS TO CHARACTER BLANKS.
         LH    LENREG,INDSN+INDSNLL GET DATA SET NAME LENGTH.
         STH   LENREG,CAEDDSNL SAVE LENGTH OF DATA SET NAME.
         LTR   LENREG,LENREG DETERMINE IF MEMBER NAME ONLY WAS
*                                  SPECIFIED.
         BZ    IN001077       IF SO, BYPASS MOVE OF DSNAME TO
*                                  COMMUNICATION AREA.
         L     AREAREG,INDSN+INDSNPT GET POINTER TO DATA SET NAME
         BCTR  LENREG,PARMREG0 REDUCE DATA SET NAME BY 1.
         EX    LENREG,INMV003 MOVE DATA SET NAME TO COMMUNICATION
*                                  AREA.
         TM    INDSN+INMEMFLG,INOPRNDO DETERMINE IF MEMBER NAME
*                                  SUPPLIED.
         BZ    IN001080       IF NOT, BRANCH TO CHECK PASSWORD.
IN001077 EQU   *
         LH    LENREG,INDSN+INMEMLL GET LENGTH OF MEMBER NAME.
         L     AREAREG,INDSN+INMEMPT GET ADDRESS OF MEMBER NAME.
         BCTR  LENREG,PARMREG0 REDUCE MEMBER NAME LENGTH BY 1.
         EX    LENREG,INMV004 MOVE MEMBER NAME TO COMMUNICATION
*                                  AREA.
         OI    CAEDFLAG,CAEDDSOR INDICATE DSORG OF PO.
IN001080 EQU   *
         TM    INDSN+INPSWFLG,INOPRNDO DETERMINE IF PASSWORD
*                                  SPECIFIED.
         BZ    IN001090       IF NOT, BRANCH TO CHECK DATA SET
*                                  TYPE.
         LH    LENREG,INDSN+INPSWLL GET LENGTH OF PASSWORD.
         L     AREAREG,INDSN+INPSWPT GET ADDRESS OF PASSWORD.
         BCTR  LENREG,PARMREG0 REDUCE LENGTH OF PASSWORD BY 1.
         EX    LENREG,INMV005 MOVE PASSWORD TO COMMUNICATION
*                                  AREA.
IN001090 EQU   *
         TM    INDSN+INDSNFLG,INFULLQ DETERMINE IF DATA SET NAME
*                                  WAS ENTERED FULLY QUALIFIED.
         BO    IN001095       IF FULLY QUALIFIED, BRANCH TO CHECK
*                                  IF DATA SET TYPE SPECIFIED.
*   IF DATA SET NAME IS NOT FULLY QUALIFIED, CALL IKJEBEID TO
*   FULLY QUALIFY.
         CALL  IKJEBIN7,((COMMREG),(DATAREG)),MF=(E,INSVCRTN)          X
                                   FULLY QUALIFY DATA SET NAME.
IN001093 EQU   *
         B     IN001093+D4(RETCDREG) RETURN CODE BRANCH TABLE.
         B     IN002000       00 - SUCCESSFUL.
         B     INEXIT1        04 - UNSUCCESSFUL. (TERMINATE EDIT.)
IN001095 EQU   *
         CLI   CADSCODE,D0    DETERMINE IF DATA SET TYPE WAS
         BNE   IN002000            ENTERED ON THE EDIT COMMAND.
*                                  IF SPECIFIED, BRANCH TO LINK
*                                  TO IKJDAIR.
         CALL  IKJEBIN5,((COMMREG)),MF=(E,INSVCRTN) PROMPT FOR         X
                                   DATA SET TYPE.
*                                  BRANCH TO PROMPT FOR SAME.
         LTR   RETCDREG,RETCDREG TEST RETURN CODE FOR SUCCESSFUL
         BNZ   INEXIT1             COMPLETION.  IF NOT ZERO,
*                                  BRANCH TO EXIT.
         EJECT
IN002000 EQU   *
***********************************************************************
*                                                                     *
*   BUILD DATA SET NAME INSERTION RECORD IN COMMUNICATION AREA.  THE  *
*   INSERTION RECORD WILL BE USED BY ANY ROUTINE WHICH HAS TO ISSUE   *
*   AN ERROR MESSAGE CONTAINING A DATA SET NAME.  THE INSERTION WILL  *
*   CONTAIN THE FULLY QUALIFIED DATA SET NAME IN SINGLE QUOTES IF THE *
*   USER SPECIFIED A FULLY QUALIFIED DATA SET NAME ON THE EDIT        *
*   COMMAND.  WHEN THE DATA SET NAME IS ENTERED PARTIALLY QUALIFIED,  *
*   ALL LEVELS OF QUALIFICATION EXCEPT USERID ARE PLACED IN THE       *
*   COMMUNICATION AREA.                                               *
*                                                                     *
***********************************************************************
         LA    AREAREG,CADSNREC ADDRESS OF INSERTION RECORD.
         LH    LENREG,CAEDDSNL LENGTH OF FULLY QUALIFIED DSNAME.
         LA    DSNAMREG,CAEDDSN ADDRESS OF DATA SET NAME.
         TM    INDSN+INDSNFLG,INFULLQ DETERMINE IF DATA SET NAME
*                                  WAS ENTERED FULLY QUALIFIED.
         BZ    IN002210       IF NOT FULLY QUALIFIED, BRANCH TO
*                                  BUILD INSERTION RECORD.
         MVI   D0(AREAREG),INSNGLQT MOVE IN SINGLE QUOTE FOR
*                                  INSERTION RECORD.
         LA    COUNTREG,X1(,D0) INITIALIZE COUNTER TO NUMBER OF
*                                  CHARACTERS IN NAME.
         AR    AREAREG,COUNTREG UPDATE ADDRESS IN INSERTION
*                                  RECORD.
         B     IN002030       BRANCH TO MOVE DATA SET NAME.
IN002210 EQU   *
         CLI   D0(DSNAMREG),INPERIOD CHECK FOR FIRST OCCURRENCE
         BE    IN002220            OF PERIOD IN DSNAME.  BRANCH
*                                  TO UPDATE COUNTER IF FOUND.
         LA    DSNAMREG,X1(,DSNAMREG) UPDATE ADDRESS INTO DSNAME
         BCT   LENREG,IN002210     AND REDUCE LENGTH BY 1.
*                                  BRANCH TO TEST NEXT CHARACTER
*                                  IN BUFFER.
*
         LA    LENREG,D2(,D0)      LENREG HAS BECOME ZERO ADD 2 ZA28057
*                                  SO THAT MVC WILL BE OK.      ZA28057
*
IN002220 EQU   *
         LA    DSNAMREG,X1(,DSNAMREG) RESET ADDRESS IN DATA SET
         BCTR  LENREG,D0           NAME AND LENGTH TO BYPASS THE
*                                  PERIOD.
         SR    COUNTREG,COUNTREG ZERO COUNTER OF NUMBER OF BYTES
*                                  IN DATA SET NAME.
IN002030 EQU   *
         BCTR  LENREG,D0      REDUCE LENGTH TO BE MOVED BY ONE
*                                  FOR MOVE CHARACTER.
         EX    LENREG,INMV001 MOVE DATA SET NAME TO INSERTION
*                                  RECORD.
         LA    COUNTREG,X1(LENREG,COUNTREG) UPDATE COUNTER TO
*                                  NUMBER OF BYTES IN DSNAME.
         LA    AREAREG,D1(LENREG,AREAREG) UPDATE ADDRESS IN
*                                  INSERTION RECORD.
         TM    INDSN+INMEMFLG,INOPRNDO DETERMINE IF MEMBER NAME
*                                  SUPPLIED.
         BZ    IN002230       IF NOT SUPPLIED, BRANCH TO COMPLETE
*                                  INSERTION RECORD.
         MVI   D0(AREAREG),INLFTPRN MOVE LEFT PARENTHESIS TO
*                                  INSERTION RECORD.
         LH    LENREG,INDSN+INMEMLL LENGTH OF MEMBER NAME.
         L     DSNAMREG,INDSN+INMEMPT ADDRESS OF MEMBER NAME.
         BCTR  LENREG,D0      REDUCE LENGTH BY 1 FOR MVC.
         EX    LENREG,INMV002 MOVE MEMBER NAME TO INSERTION
*                                  RECORD.
         LA    AREAREG,D2(LENREG,AREAREG) UPDATE ADDRESS IN DATA
*                                  SET NAME INSERTION.
         MVI   D0(AREAREG),INRTPRN MOVE RIGHT PARENTHESIS TO
*                                  INSERTION RECORD.
         LA    AREAREG,D1(,AREAREG) UPDATE ADDRESS IN DATA
*                                  SET NAME INSERTION.
         LA    COUNTREG,D3(LENREG,COUNTREG) UPDATE COUNTER TO
*                                  REFLECT NUMBER OF CHARACTERS
*                                  IN DSNAME AND MEMBER NAME.
IN002230 EQU   *
         TM    INDSN+INDSNFLG,INFULLQ DETERMINE IF DATA SET NAME
*                                  WAS ENTERED FULLY QUALIFIED.
         BZ    IN002240       IF NOT FULLY QUALIFIED, BRANCH TO
*                                  PLACE LENGTH IN INSERTION
*                                  RECORD.
         MVI   D0(AREAREG),INSNGLQT MOVE CLOSING SINGLE QUOTE IN
*                                  INSERTION RECORD.
         LA    COUNTREG,X1(,COUNTREG) UPDATE COUNTER TO REFLECT
*                                  NUMBER OF CHARACTERS IN RECORD
IN002240 EQU   *
         XC    CADSNPTR(CADSNREC-CADSNPTR),CADSNPTR ZERO CONTROL
*                                  WORDS FOR INSERTION RECORD.
         LA    COUNTREG,D4(,COUNTREG) UPDATE COUNTER TO INCLUDE
*                                  LENGTH OF CONTROL WORD AND
         STH   COUNTREG,CADSNLEN   SAVE IN INSERTION RECORD.
         EJECT
***********************************************************************
*                                                                     *
*   ALLOCATE THE EDIT DATA SET.                                       *
*                                                                     *
*   INDICATE THAT THE DATA SET BEING PROCESSED IS THE EDIT DATA SET.  *
*   BUILD A PARAMETER BLOCK FOR IKJDAIR AND INCLUDE A PASSWORD IF     *
*   SPECIFIED.  CHECK IF USER SPECIFIED NEW ON THE COMMAND -- IF SO,  *
*   BRANCH TO VALIDATE OPERANDS SPECIFIED ON THE COMMAND.  OTHERWISE  *
*   DETERMINE IF A MEMBER NAME WAS SPECIFIED.  WHEN A MEMBER NAME IS  *
*   ENTERED, CHANGE DISPOSITION FROM OLD TO SHR FOR IKJDAIR.  LINK    *
*   TO IKJDAIR WITH ENTRY CODE X'08' TO ALLOCATE THE DATA SET.        *
*                                                                     *
***********************************************************************
         OI    CAEDFLAG,CAEDITDS INDICATE EDIT DATA SET.
         L     PASSREG,CAPTTMP ADDRESS OF TMP PARAMETER LIST.
         L     PASSREG,(CPPLPSCB-CPPL)(,PASSREG) ADDRESS OF PSCB.
         LA    AREAREG,CAEDDSNL ADDRESS OF DATA SET NAME LENGTH
*                                  AND DATA SET NAME.
         MVC   INDREC(INDR8OLL),INDAIR8O INITIALIZE IKJDAIR
*                                  PARAMETER LIST - ENTRY CODE 8.
         TM    INDSN+INPSWFLG,INOPRNDO DETERMINE IF PASSWORD
*                                  SPECIFIED.
         BZ    IN002250       IF NOT, BRANCH TO CHECK IF NEW
*                                  OPERAND SPECIFIED ON COMMAND.
         MVC   INDREC+(DA08PSWD-DAPB08)(L'CAEDPSWD),CAEDPSWD MOVE
*                                  PASSWORD TO PARAMETER LIST.
IN002250 EQU   *
         CLC   INSTAT(L'INDISPNW),INDISPNW DETERMINE IF NEW WAS
*                                  SPECIFIED ON COMMAND.
         BE    IN003100       BRANCH TO VALIDATE OPERANDS ENTERED
*                                  ON COMMAND IF NEW SPECIFIED.
         TM    INDSN+INMEMFLG,INOPRNDO DETERMINE IF MEMBER NAME
*                                  ENTERED ON COMMAND.
         BZ    IN002255       IF NOT, BRANCH TO COMPLETE
*                                  PARAMETER LIST FOR IKJDAIR.
         OI    INDREC+(DA08DSP1-DAPB08),DA08SHR INDICATE DISP=SHR
*                                  FOR OLD, PARTITIONED DATA SETS
IN002255 EQU   *
         ST    AREAREG,INDREC+(DA08PDSN-DAPB08) PUT ADDRESS OF
*                                  DSNAME IN PARAMETER LIST.
         LA    AREAREG,INDREC ADDRESS OF IKJDAIR PARAMETER LIST.
         LA    PARMREG1,CATMPLST   LOAD PARAM REG 1            @YA02225
         LR    RETREG,(PASSREG)    PICK UP PARAMETER           @YA02225
         LR    RETCDREG,(AREAREG)  PICK UP PARAMETER           @YA02225
         STM   14,15,12(1)         STORE INTO PARAM LIST       @YA02225
         CALLTSSR EP=IKJDAIR,MF=(E,CATMPLST)  INVOKE DAIR      @YA02225X
                                   SERVICE ROUTINE             @YA02225
         SPACE 2
***********************************************************************
*                                                                     *
*   UPON RETURN FROM IKJDAIR, TEST RETURN CODE FOR SUCCESSFUL         *
*   COMPLETION.  WHEN IKJDAIR RETURNS A NON-ZERO RETURN CODE, BRANCH  *
*   TO APPROPRIATE DIAGNOSTIC AREA.                                   *
*                                                                     *
***********************************************************************
         LTR   RETCDREG,RETCDREG CHECK FOR NORMAL COMPLETION.   YA00002
         BZ    IN002400       IF SO, BR TO CONTINUE NORMALLY.   YA00002
IN002260 EQU   *                                                YA00002
         CH    RETCDREG,INDAIR08 CHECK FOR CATLG ERROR.         YA00002
         BL    IN002270       INVALID PARAMETERS, SEND MESSAGE. YA00002
         BE    IN002290       CATLG ERROR, SEND MESSAGE.        YA00002
         CH    RETCDREG,INDAIR16 CHECK IF TIOT FULL.            YA00002
         BL    IN002350       DYN ALLOCATION ERROR, DETERMINE   YA00002
*                                  CAUSE AND SEND MESSAGE.      YA00002
         BE    IN002280       NO TIOT ENTRIES AVAILABLE, SEND   YA00002
*                                  APPROPRIATE MESSAGE.         YA00002
         CH    RETCDREG,INDAIR48 CHECK FOR DAIR STAE ENTERED.   YA00002
         BE    INEXIT12       IF SO, RETURN TO TMP WITH RC=12.  YA00002
         SPACE 5
*                                                               YA00002
*   OTHERWISE, FALL THROUGH TO ISSUE GENERAL ERROR MESSAGE.     YA00002
*                                                               YA00002
*************************************************************** YA00002
*                                                                     *
*   IKJDAIR RETURN CODES 04, 20, 24, 28, 32, 36, 40             YA00002
*                                                                     *
*   ISSUE COMMAND NOT EXECUTABLE MESSAGE WITH SECOND LEVEL LOGIC      *
*   ERROR MESSAGE.                                                    *
*                                                                     *
***********************************************************************
IN002270 EQU   *
         LA    ERR1REG,INERROR2 RELATIVE ERROR TO BE PROCESSED.
         LR    DATA2REG,RETCDREG SAVE RETURN CODE FOR MESSAGE.
         O     DATA2REG,INDAIR INDICATE ROUTINE NAME AS IKJDAIR.
         B     IN010010       BRANCH TO CALL IKJEBIN3 TO PUT
*                                  ERROR MESSAGE.
         EJECT
***********************************************************************
*                                                                     *
*   IKJDAIR RETURN CODE 16                                            *
*                                                                     *
*   ISSUE TOO MANY DATA SETS ALLOCATED MESSAGE.                       *
*                                                                     *
***********************************************************************
IN002280 EQU   *
         LA    ERR1REG,INERRORM RELATIVE ERROR TO BE PROCESSED.
         B     IN010010       BRANCH TO CALL IKJEBIN3 TO PUT
*                                  ERROR MESSAGE.
         SPACE 5
***********************************************************************
*                                                                     *
*   IKJDAIR RETURN CODE 08 - CATALOG ERROR.                           *
*                                                                     *
*   SINCE IKJDAIR RETURNS THIS RETURN CODE FOR A DYNAMIC ALLOCATION   *
*   FAILURE OF X'17XX', THIS CODE ASSUMES THAT AN OBTAIN FAILURE HAS  *
*   OCCURRED WHEN THE DA08DARC FIELD IS ZERO AND THE DA08CTRC FIELD   *
*   IS NON-ZERO.                                                      *
*                                                                     *
***********************************************************************
IN002290 EQU   *
         CLC   INDREC+(DA08DARC-DAPB08)(L'INDR0000),INDR0000 TEST
*                                  FOR DARC = ZERO.
         BNE   IN002350       IF NOT ZERO, BRANCH TO DETERMINE
*                                  CAUSE OF DYNAMIC ALLOCATION
*                                  FAILURE.
*
*   THE FOLLOWING ASSUMES AN OBTAIN FAILURE, I.E., DARC = ZERO
*   AND CTRC = NON-ZERO.
*
IN002300 EQU   *
         CLC   INDREC+(DA08CTRC-DAPB08)(L'INDR0004),INDR0004 TEST
*                                  FOR CATALOG ERROR CODE = 4.
         BNE   IN002320       IF NOT 4, BRANCH TO CHECK FOR 8.
         EJECT
***********************************************************************
*                                                                     *
*   CATALOG ERROR RETURN CODE = 4.                                    *
*                                                                     *
*   ISSUE REQUIRED VOLUME NOT MOUNTED MESSAGE.                        *
*                                                                     *
***********************************************************************
IN002310 EQU   *
         LA    ERR1REG,INERRORN RELATIVE ERROR TO BE PROCESSED.
         B     IN010010       BRANCH TO CALL IKJEBIN3 TO PUT
*                                  ERROR MESSAGE.
         SPACE 2
IN002320 EQU   *
         CLC   INDREC+(DA08CTRC-DAPB08)(L'INDR0008),INDR0008 TEST
*                                  FOR CATALOG ERROR = 8.
         BNE   IN002340       IF NOT 8, BRANCH TO CHECK FOR 28.
         EJECT
         SPACE 5
IN002325 EQU   *
***********************************************************************
*                                                                     *
*   CATALOG ERROR RETURN CODE = 8.                                    *
*                                                                     *
*   ISSUE DATA SET NOT ON VOLUME MESSAGE.                             *
*                                                                     *
***********************************************************************
         LA    ERR1REG,INERRORO RELATIVE ERROR TO BE PROCESSED.
         B     IN010010       BRANCH TO CALL IKJEBIN3 TO PUT
*                                  ERROR MESSAGE.
IN002340 EQU   *
         CLC   INDREC+(DA08CTRC-DAPB08)(L'INDR0028),INDR0028 TEST
*                                  FOR CATALOG ERROR = 28.
         BNE   IN002346       IF NOT 28, BRANCH TO ISSUE ERROR
*                                  MESSAGE - ALLOCATION FAILED.
         EJECT
***********************************************************************
*
*   CATALOG ERROR CODE 28.
*
*   ISSUE CATALOG I/O ERROR MESSAGE.
*
***********************************************************************
IN002343 EQU   *
         LA    ERR2REG,M3043  RELATIVE SECOND-LEVEL MESSAGE.
         LA    ERR1REG,INERRORP RELATIVE ERROR TO BE PROCESSED.
         B     IN010010       BRANCH TO CALL IKJEBIN3 TO PUT
*                                  ERROR MESSAGE.
         SPACE 5
***********************************************************************
*                                                                     *
*   CATALOG ERROR RETURN CODE OTHER THAN 4,8, OR 28.                  *
*                                                                     *
*   ISSUE ALLOCATION FAILED - SYSTEM ERROR MESSAGE.                   *
*                                                                     *
***********************************************************************
IN002346 EQU   *
         LA    ERR1REG,INERRORP RELATIVE ERROR TO BE PROCESSED.
         LA    ERR2REG,M3042  RELATIVE SECOND LEVEL MESSAGE.
         LH    DATA2REG,INDREC+(DA08CTRC-DAPB08) OBTAIN CATALOG
*                                  ERROR FOR SECOND LEVEL MESSAGE
         B     IN010010       BRANCH TO CALL IKJEBIN3 TO PUT
*                                  ERROR MESSAGE.
         EJECT
***********************************************************************
*                                                                     *
*   DYNAMIC ALLOCATION FAILURE - DARC IS NON-ZERO.                    *
*                                                                     *
*   A TEST IS MADE FOR A DYNAMIC ALLOCATION RETURN CODE IN THE FORM   *
*   X'17XX' (LOCATE FAILURE).  IF THE CAUSE OF ALLOCATION FAILURE     *
*   IS ASSOCIATED WITH LOCATE, THE LOW ORDER BYTE OF THE DARC FIELD   *
*   (THE LOCATE RETURN CODE) IS TESTED.  IF THE RETURN CODE IS 8,     *
*   12, OR 16 THE DATA SET NAME COULD NOT BE FOUND IN THE CATALOG.    *
*   IF IT IS 4, THE USER IS INFORMED BY TERMINAL MESSAGE THAT A       *
*   REQUIRED CVOL IS NOT MOUNTED.  IF THE LOCATE RETURN CODE IS 24,   *
*   A PERMANENT I/O ERROR EXISTS IN THE CATALOG AND AN APPROPRIATE    *
*   ERROR MESSAGE IS ISSUED.  ALL OTHER RETURN CODES RESULT IN A      *
*   GENERAL ALLOCATION ERROR MESSAGE BEING PUT TO THE TERMINAL.       *
*   TERMINATION OCCURS AFTER ERROR MESSAGES ARE ISSUED FOR THE ABOVE  *
*   CONDITIONS.                                                       *
*                                                                     *
***********************************************************************
IN002350 EQU   *
         CLI   INDREC+(DA08DARC-DAPB08),INDR1700 CHECK IF A
*                                  LOCATE ERROR OCCURRED.
         BNE   IN002370       IF NOT A LOCATE ERROR, BRANCH TO
*                                  DETERMINE CAUSE OF DYNAMIC
*                                  ALLOCATION FAILURE.
         CLI   INDREC+D1+(DA08DARC-DAPB08),D24 CHECK IF I/O ERROR
*                                  IN CATALOG.
         BE    IN002343       IF SO, BRANCH TO SET PARAMETERS FOR
*                                  ERROR MESSAGE.
         CLI   INDREC+D1+(DA08DARC-DAPB08),D12 CHECK FOR LOWEST
*                                  QUALIFIER OF DSNAME BEING AN
*                                  INDEX LEVEL OR CVOL POINTER.
         BE    IN002355       IF SO, BRANCH TO ISSUE ERROR
*                                  MESSAGE.
         CLI   INDREC+D1+(DA08DARC-DAPB08),D16 IS DATA SET NAME
*                                  INCOMPATIBLE WITH CATALOG
*                                  STRUCTURE.
         BE    IN002355       IF SO, BRANCH TO ISSUE ERROR MESSAGE.
         CLI   INDREC+D1+(DA08DARC-DAPB08),D8 CHECK LOCATE RETURN
*                                  CODE.
         BL    IN002310       04 - REQUIRED VOLUME NOT AVAILABLE
         BH    IN002390       20-32 - SYSTEM ERROR IN DYNAMIC
*                                  ALLOCATION.
         SPACE 2
* FALLING THROUGH THE ABOVE BRANCH IMPLIES THAT DATA SET NAME WAS
* NOT FOUND IN THE CATALOG.
         SPACE 2
IN002355 EQU   *
         CLC   INSTAT(L'INKEYDEF),INKEYDEF DETERMINE IF USER
*                                  SPECIFIED OLD.
         BE   IN002360        IF OLD SPECIFIED, BRANCH TO PUT
*                                  ERROR MESSAGE AND TERMINATE.
         BAL   SRRTNREG,IN012010   ELSE, ASSUME TO BE NEW      @OZ05180
         B     IN003100            PROCESS NEW                 @OZ05180
         SPACE 5
***********************************************************************
*                                                                     *
*   USER SPECIFIED OLD AND DATA SET NOT FOUND -- ISSUE ERROR MESSAGE  *
*   THAT DATA SET NOT FOUND AND TERMINATE EDIT.                       *
*                                                                     *
***********************************************************************
IN002360 EQU   *
         LA    ERR1REG,INERROR7 RELATIVE ERROR TO BE PROCESSED.
         B     IN010010       BRANCH TO CALL IKJEBIN3 TO PUT
*                                  ERROR MESSAGE.
         EJECT
***********************************************************************
*                                                                     *
*   DETERMINE CAUSE OF DYNAMIC ALLOCATION FAILURE.                    *
*                                                                     *
***********************************************************************
IN002370 EQU   *
         CLC   INDREC+(DA08DARC-DAPB08)(L'INDR0218),INDR0218 TEST
*                                  FOR DYNAMIC ALLOCATION RETURN
*                                  CODE OF X'0218'.
         BE    IN002310       BRANCH TO ISSUE REQUIRED VOLUME NOT
*                                  MOUNTED MESSAGE.
         CLC   INDREC+(DA08DARC-DAPB08)(L'INDR020C),INDR020C TEST
*                                  FOR DARC = X'020C'.
         BE    IN002385       IF SO, BRANCH TO INDICATE ERROR.
         CLC   INDREC+(DA08DARC-DAPB08)(L'INDR0210),INDR0210 TEST
*                                  FOR DARC=X'0210'
         BNE   IN002390       IF NOT DATA SET ALREADY IN USE,
*                                  BRANCH TO CONTINUE TESTS.
         SPACE 5
***********************************************************************
*                                                                     *
*   DYNAMIC ALLOCATION ERROR X'020C'                                  *
*   DYNAMIC ALLOCATION ERROR X'0210'                                  *
*                                                                     *
*   ISSUE DATA SET ALREADY IN USE MESSAGE.                            *
*                                                                     *
***********************************************************************
IN002385 EQU   *
         LA    ERR1REG,INERRORK RELATIVE ERROR TO BE PROCESSED.
         B     IN010010       BRANCH TO CALL IKJEBIN3 TO PUT
*                                  ERROR MESSAGE.
         EJECT
IN002390 EQU   *
         CLC   INDREC+(DA08DARC-DAPB08)(L'INDR0214),INDR0214 TEST
*                                  FOR DARC=X'0214'.
         BE    IN002391       IF DARC=X'0214', BRANCH TO PROCESS.
         CLC   INDREC+(DA08DARC-DAPB08)(L'INDR021C),INDR021C TEST
*                                  FOR DARC=X'021C'.
         BNE   IN002393       IF NOT X'021C',BRANCH TO CONTINUE
*                                  TESTS.
         SPACE 5
***********************************************************************
*
*   DYNAMIC ALLOCATION ERROR X'021C'.
*   NO UNIT IS AVAILABLE.
*
*   DYNAMIC ALLOCATION ERROR X'0214'.
*   INVALID UNIT IN UADS.
*
***********************************************************************
         LA    ERR2REG,M3182  SPECIFY NO UNIT AVAILABLE MESSAGE.
         B     IN002392       BRANCH TO SET RELATIVE MESSAGE NO.
IN002391 EQU   *
         LA    ERR2REG,M3181  SPECIFY INVALID UNIT MESSAGE.
IN002392 EQU   *
         LA    ERR1REG,INERRORW RELATIVE ERROR TO BE PROCESSED.
         B     IN010010       BRANCH TO CALL IKJEBIN3 TO PUT
*                                  MESSAGE.
         EJECT
IN002393 EQU   *
         CLC   INDREC+(DA08DARC-DAPB08)(L'INDR0404),INDR0404 TEST
*                                  FOR DEVICE NOT DIRECT ACCESS.
         BNE   IN002395       IF NOT X'0404' BRANCH TO CONTINUE
*                                  TESTS.
         SPACE 5
***********************************************************************
*
*   DYNAMIC ALLOCATION ERROR X'0404'.
*
*   ISSUE MESSAGE FOR DEVICE NOT DIRECT ACCESS.
*
***********************************************************************
         LA    ERR1REG,INERRORQ RELATIVE ERROR TO BE PROCESSED.
         B     IN010010       BRANCH TO CALL IKJEBIN3 TO PUT
*                                  MESSAGE.
         SPACE 2
IN002395 EQU   *
         CLC   INDREC+(DA08DARC-DAPB08)(L'INDR041C),INDR041C TEST
*                                  FOR DATA SET ON MULTIPLE
*                                  VOLUMES.
         BNE   IN002399       IF NOT X'041C', BRANCH TO ISSUE
*                                  SYSTEM ERROR DIAGNOSTIC WITH
*                                  DARC AS INSERTION.
         SPACE 5
IN002396 EQU   *                                                ZA32095
***********************************************************************
*
*   DYNAMIC ALLOCATION ERROR X'041C'.
*
*   ISSUE DIAGNOSTIC FOR MULTIPLE VOLUMES NOT SUPPORTED.
*
***********************************************************************
         LA    ERR1REG,INERRORT    RELATIVE ERROR TO BE PROCESSED.
         B     IN010010       BRANCH TO CALL IKJEBIN3 TO PUT
*                                  MESSAGE.
         EJECT
***********************************************************************
*                                                                     *
*   DYNAMIC ALLOCATION ERRORS OTHER THAN THOSE SPECIFICALLY
*   TESTED FOR.
*                                                                     *
*   ISSUE ALLOCATION FAILED - SYSTEM ERROR MESSAGE.                   *
*                                                                     *
***********************************************************************
IN002399 EQU   *
         LA    ERR1REG,INERRORP RELATIVE ERROR TO BE PROCESSED.
         LA    ERR2REG,M3041  RELATIVE SECOND LEVEL MESSAGE.
         LH    DATA2REG,INDREC+(DA08DARC-DAPB08) OBTAIN DARC FOR
*                                  SECOND LEVEL MESSAGE.
         B     IN010010       BRANCH TO CALL IKJEBIN3 TO PUT
*                                  ERROR MESSAGE.
         EJECT
***********************************************************************
*                                                                     *
*   DATA SET SUCCESSFULLY ALLOCATED.                                  *
*                                                                     *
*   MOVE DDNAME RETURNED BY IKJDAIR TO COMMUNICATION AREA AND         *
*   INDICATE THAT DATA SET IS ALLOCATED.  DETERMINE IF DATA SET       *
*   ORGANIZATION IS VALID FOR EDIT -- IF NOT, ISSUE ERROR MESSAGE     *
*   AND TERMINATE.  IF DATA SET ORGANIZATION IS PARTITIONED, BRANCH   *
*   TO PROCESS MEMBER NAME.  WHEN DATA SET HAS SEQUENTIAL ORGANIZA-   *
*   TION, CHECK IF USER SPECIFIED A MEMBER NAME ON COMMAND.  IF       *
*   A MEMBER NAME WAS ENTERED, REBUILD DATA SET NAME INSERTION AND    *
*   PUT DIAGNOSTIC MESSAGE TO TERMINAL.  AFTER USER HAS BEEN          *
*   INFORMED OF ERROR, BRANCH TO PROCESS LOGICAL RECORD SIZE AND      *
*   BLOCK SIZE FOR OLD DATA SET.                                      *
*                                                                     *
***********************************************************************
IN002400 EQU   *
         MVC   CAEDDDN(L'CAEDDDN),INDREC+(DA08DDN-DAPB08) MOVE
*                                  DDNAME RETURNED BY IKJDAIR
*                                  INTO THE COMMUNICATION AREA.
         OI    CAEDFLAG,CAEDDISP+CAEDALOC INDICATE THAT THE EDIT
*                                  DATA SET HAS BEEN ALLOCATED
*                                  AND THAT IT HAS DISP = OLD.
         TM    INDREC+(DA08DSO-DAPB08),DS1ORGPO DETERMINE IF A  ZA33984
*                                  PARTITIONED DATA SET.
         BO    IN002430       IF SO, BRANCH TO PROCESS MEMBER   ZA33984
*                                  NAME.
         CLI   INDREC+(DA08DSO-DAPB08),DS1ORGPS DETERMINE IF A
*                                  SEQUENTIAL DATA SET.
         BE    IN002410       IF SO, BRANCH TO DETERMINE IF A
*                                  MEMBER NAME WAS ENTERED.
         CLI   INDREC+(DA08DSO-DAPB08),D0 DETERMINE IF DSORG HAS
*                                  BEEN ESTABLISHED FOR DATA SET.
         BE    IN002410       IF NO DSORG, BRANCH TO DO OBTAIN
*                                  ON DATA SET NAME.
         EJECT
***********************************************************************
*                                                                     *
*   IF NEITHER PARTITIONED OR SEQUENTIAL, ISSUE ERROR MESSAGE THAT    *
*   DATA SET ORGANIZATION IS INVALID FOR EDIT AND TERMINATE.          *
*                                                                     *
***********************************************************************
         LA    ERR1REG,INERROR4 RELATIVE ERROR TO BE PROCESSED.
         LA    DATA1REG,INDREC+(DA08DSO-DAPB08) ADDRESS OF DSORG
*                                  BYTE FOR IKJEBIN3.
         B     IN010010       BRANCH TO CALL IKJEBIN3 TO PUT
*                                  ERROR MESSAGE.
         SPACE 2
IN002410 EQU   *
         TM    INDSN+INMEMFLG,INOPRNDO DETERMINE IF MEMBER NAME
*                                  SUPPLIED.
         BZ    IN002010       IF NOT, BRANCH TO CHECK DATA SET
*                                  ATTRIBUTES.
         LH    SIZEREG,CADSNLEN OBTAIN LENGTH OF INSERTION RECORD
*                                  WITH MEMBER NAME.
         LH    LENREG,INDSN+INMEMLL GET LENGTH OF MEMBER NAME
*                                  ENTERED ON COMMAND.
         LR    DATA1REG,LENREG SAVE MEMBER LENGTH FOR MESSAGE.
         LA    LENREG,D2(,LENREG) ADD 2 TO LENGTH OF MEMBER NAME
*                                  FOR PARENTHESES.
         SR    SIZEREG,LENREG REDUCE INSERTION LENGTH BY NUMBER
*                                  OF CHARACTERS IN MEMBER NAME
         STH   SIZEREG,CADSNLEN    AND SAVE IN INSERTION RECORD.
         TM    INDSN+INDSNFLG,INFULLQ DETERMINE IF DATA SET NAME
*                                  WAS ENTERED FULLY QUALIFIED.
         BZ    IN002420       IF NOT, BRANCH TO REMOVE MEMBER
*                                  NAME FROM INSERTION RECORD.
         LA    LENREG,D5(,D0) REDUCE NEW LENGTH BY 5 SO THAT
         SR    SIZEREG,LENREG      FINAL QUOTE MAY BE ADDED.
         LA    AREAREG,CADSNREC(SIZEREG) COMPUTE LOCATION OF
         MVI   D0(AREAREG),INSNGLQT SINGLE QUOTE AND MOVE TO
*                                  INSERTION RECORD.
         EJECT
***********************************************************************
*                                                                     *
*   WHEN A MEMBER NAME IS ENTERED, ISSUE ERROR MESSAGE THAT DATA      *
*   SET IS NOT A PARTITIONED DATA SET.  IF A ZERO RETURN CODE IS      *
*   RETURNED FROM IKJEBIN3, BRANCH TO VALIDATE OLD DATA SET           *
*   ATTRIBUTES.  WHEN IKJEBIN3 RETURNS A NON-ZERO RETURN CODE,        *
*   TERMINATE EDIT.                                                   *
*                                                                     *
***********************************************************************
IN002420 EQU   *
         LA    ERR1REG,INERROR3 RELATIVE ERROR TO BE PROCESSED.
         L     EPLOCREG,INMSGRTN ADDRESS OF MESSAGE ROUTINE.
         CALL  (15),((COMMREG),(ERR1REG),,(DATA1REG),),                X
               MF=(E,INSVCRTN) CALL IKJEBIN3 TO ISSUE MESSAGE.
         LTR   RETCDREG,RETCDREG CHECK FOR SUCCESSFUL COMPLETION.
         B     INEXIT1   DON'T ALLOW WN EDIT OF THIS DS         OZ37857
         MVI   CAEDMEMB,CHRBLANK REMOVE MEMBER NAME FROM COMMUNI-
         MVC   CAEDMEMB+D1(L'CAEDMEMB-D1),CAEDMEMB CATION AREA.
         NI    CAEDFLAG,X'FF'-CAEDDSOR INDICATE DS IS SEQUENTIAL
         B     IN002010       IF RETURN CODE IS ZERO, BRANCH TO
*                                  CHECK DATA SET ATTRIBUTES.
         EJECT
***********************************************************************
*                                                                     *
*   DATA SET ORGANIZATION IS PARTITIONED.                             *
*                                                                     *
*   INDICATE THAT DATA SET ORGANIZATION IS PARTITIONED IN THE         *
*   COMMUNICATION AREA.  BUILD A DCB AND OPEN FOR BSAM SO THAT        *
*   BLDL MAY BE USED TO DETERMINE IF MEMBER EXISTS.  IF IT IS NOT     *
*   POSSIBLE TO OPEN THE DCB, ISSUE ERROR MESSAGE AND RETURN TO       *
*   THE TMP.  WHEN OPEN IS SUCCESSFUL, DETERMINE IF USER SPECIFIED    *
*   A MEMBER NAME.  IF A MEMBER NAME WAS NOT SPECIFIED, DEFAULT       *
*   MEMBER TO TEMPNAME.  ISSUE THE BLDL MACRO INSTRUCTION TO          *
*   DETERMINE IF THE MEMBER EXISTS.  UPON RETURN FROM BLDL, SAVE      *
*   BLDL RETURN CODE, CLOSE THE DCB, AND UNALLOCATE THE DATA SET.     *
*   UPON RETURN FROM UNALLOCATE, TEST RETURN CODE FOR ZERO -- IF      *
*   NOT ZERO, BRANCH TO DIAGNOSE ERROR.  OTHERWISE, CHECK BLDL        *
*   RETURN CODE.                                                      *
*                                                                     *
***********************************************************************
IN002430 EQU   *
         OI    CAEDFLAG,CAEDDSOR INDICATE THAT DSORG = PO.
         MVC   INWKDCB(INDCBL),INDCB MOVE DCB TO WORK AREA.
         MVC   INWKOPEN(INOPENL),INOPEN INITIALIZE OPEN PARAMETER
*                                  LIST.
         LA    AREAREG,INWKDCB ADDRESS OF DCB FOR OPEN.
         MVC   INWKDCB+(DCBDDNAM-IHADCB)(L'DCBDDNAM),CAEDDDN MOVE
*                                  DDNAME INTO DCB.
         OPEN  ((AREAREG),(INPUT)),MF=(E,INWKOPEN) OPEN DCB.
         TM    INWKDCB+(DCBOFLGS-IHADCB),INOPENED CHECK IF DCB
*                                  WAS OPENED SUCCESSFULLY.
         BO    IN002440       IF DCB OPENED, BRANCH TO DO BLDL.
*                                  OTHERWISE, ISSUE OPEN FAILED
*                                  MESSAGE.
         LA    ERR1REG,INERRORL RELATIVE ERROR TO BE PROCESSED.
         LA    ERR2REG,M3093  RELATIVE SECOND LEVEL MESSAGE.
         B     IN010010       BRANCH TO CALL IKJEBIN3 TO PUT
*                                  ERROR MESSAGE.
         SPACE 2
IN002440 EQU   *
         TM    INDSN+INMEMFLG,INOPRNDO DETERMINE IF MEMBER NAME
*                                  SUPPLIED.
         BO    IN002450       IF ENTERED, BRANCH TO ISSUE BLDL.
         MVC   CAEDMEMB(L'CAEDMEMB),INTEMPNM SET MEMBER NAME TO
*                                  TEMPNAME.
         LA    PARMREG1,D8    DUMMY UP LENGTH OF MEMBER NAME FOR
         STH   PARMREG1,INDSN+INMEMLL MESSAGE INSERTION.
IN002450 EQU   *
         MVC   INBLDWD(L'INBLINIT),INBLINIT INITIALIZE LIST WITH
         MVC   INMEMBER(L'CAEDMEMB),CAEDMEMB MEMBER NAME FOR BLDL
         LA    PARMREG0,INBLDWD ADDRESS OF LIST FOR BLDL.
         BLDL  (AREAREG),(0)  DETERMINE IF MEMBER EXISTS.
         LR    TMPCDREG,RETCDREG SAVE BLDL RETURN CODE.
         MVC   INWKOPEN(INCLOSEL),INCLOSE INITIALIZE CLOSE
*                                  PARAMETER LIST.
         CLOSE ((AREAREG),),MF=(E,INWKOPEN) CLOSE DCB.
         B     IN002460(TMPCDREG) BLDL RETURN CODE BRANCH TABLE.
IN002460 EQU   *
         B     IN002005       00 - VALIDATE DATA SET ATTRIBUTES.
         B     IN002470       04 - PROMPT FOR NEW OR OLD OPERAND.
*                             08 - PERMANENT I/O ERROR.
         LA    ERR1REG,INERROR2 RELATIVE ERROR TO BE PROCESSED.
         LA    ERR2REG,M3131  RELATIVE SECOND LEVEL MESSAGE.
         LA    DATA2REG,ININS002 ADDRESS OF INSERTION TEXT FOR
*                                  SECOND LEVEL MESSAGE.
         B     IN010010       BRANCH TO CALL IKJEBIN3 TO PUT
*                                  ERROR MESSAGE.
         EJECT
***********************************************************************
*
*   PROMPT FOR NEW/OLD OPERAND IF NOT SPECIFIED ON THE COMMAND.  IF   *
*   OLD WAS SPECIFIED ORIGINALLY ISSUE ERROR MESSAGE AND RETURN.      *
*
***********************************************************************
IN002470 EQU   *
         CLC   INSTAT(L'INKEYDEF),INKEYDEF DETERMINE IF USER
*                                  SPECIFIED OLD.
         BE    IN002480       IF OLD SPECIFIED, BRANCH TO PUT
*                                  ERROR MESSAGE AND TERMINATE.
         BAL   SRRTNREG,IN012010   ELSE, ASSUME TO BE NEW      @OZ05180
         NI    CAEDFLAG,INF255-CAEDMEM NEW MEM BUT OLD PDS     @ZA86786
         B     IN002010            GO CHECK DATASET ATTRIBUTES @ZA86786
IN002480 EQU   *
         LA    ERR1REG,INERRORI    RELATIVE ERROR TO BE PROCESSED.
         LH    DATA1REG,INDSN+INMEMLL  LENGTH OF MEMBER NAME.
         B     IN010010            BRANCH TO CALL IKJEBEIA TO PUT
*                                  ERROR MESSAGE AND RETURN.
         EJECT
***********************************************************************
*                                                                     *
*    SEARCH TIOT FOR POINTER TO THE UCB FOR THE EDIT DATA SET @ZA08735*
*    TO GET THE VOLID.                                        @ZA08735*
*                                                                     *
***********************************************************************
IN002005 EQU   *
         OI    CAEDFLAG,CAEDMEM INDICATE THAT MEMBER IS OLD.
IN002010 EQU   *
         L     AREAREG,CVTPTR ADDRESSOF CVT.                   @ZA08735
         USING CVT,AREAREG    ADDRESS IN CVT DSECT.            @ZA08735
         L     AREAREG,CVTTCBP ADDRESS NEXT AND CURRENT TCB    @ZA08735
*                                           POINTERS           @ZA08735
         DROP  AREAREG                                         @ZA08735
         L     AREAREG,CURNTTCB(PARMREG0,AREAREG) ADDRESS OF   @ZA08735
*                                                 CURRENT TCB  @ZA08735
         L AREAREG,(TCBTIO-TCB)(,AREAREG) ADDRESS OF TIOT.     @ZA08735
         USING IEFTIOT1,AREAREG ADDRESSABILITY IN TIOT DSECT.  @ZA08735
IN002050 EQU   *                                               @ZA08735
         SR    LENREG,LENREG    ZERO LENGTH REG.               @ZA08735
         IC    LENREG,TIOELNGH   LENGTH OF TIOT ENTRY.         @ZA08735
         LTR   LENREG,LENREG    CHECK IF END OF TIOT REACHED.  @ZA08735
         BZ    IN002055         IF END OF TIOT, BRANCH TO PUT  @ZA08735
*                              ERROR MESSAGE AND RETURN TO TMP.@ZA08735
         CLC   TIOEDDNM(L'CAEDDDN),CAEDDDN CHECK IF THIS ENTRY @ZA08735
*                               IS FOR THE EDIT DATA SET.      @ZA08735
         BE    IN002060         IF SO, BRANCH TO GET UCB ADDR. @ZA08735
         LA    AREAREG,D0(LENREG,AREAREG) UPDATE TIOT POINTER  @ZA08735
*                                         TO NEXT ENTRY.       @ZA08735
         B     IN002050     BRANCH TO CHECK NEXT ENTRY IN TIOT.@ZA08735
IN002055 EQU   *                                               @ZA08735
         LA    ERR1REG,INERRORF RELATIVE ERROR TO PROCESS      @ZA08735
         LA    ERR2REG,M4245    RELATIVE SECOND LEVEL MESSAGE  @ZA08735
         B     IN010010         BRANCH TO CALL IKJEBIN3 TO PUT @ZA08735
*                               MESSAGE TO TERMINAL.           @ZA08735
IN002060 EQU   *                                               @ZA08735
         L     AREAREG,TIOEFSRT-D1 ADDRESS OF UCB,             @ZA08735
         DROP  AREAREG                                         @ZA08735
IN002070 EQU   *                                               @ZA08735
         USING IEFUCBOB,AREAREG ADDRESSABILITY IN UCB DSECT.   @ZA08735
         MVC   INDSNAME,CAEDDSN             MOVE DSN TO OBTAIN @ZA08735
*                                            PARM LIST         @ZA08735
         MVC   INCAMVLD(L'INCAMVLD),UCBVOLI MOVE VOLID TO      @ZA08735
*                                           OBTAIN PARM LIST   @ZA08735
         TM    UCBTBYT3,UCB3DACC CHECK IF DA DEVICE.           @ZA08735
         BNZ   IN002080     IF SO, CONTINUE NORMAL PROCESSING. @ZA08735
         LA    ERR1REG,INERRORQ   SPECIFY RELATIVE ERROR.      @ZA08735
         B     IN010010         BRANCH TO CALL IKJEBIN3 TO PUT @ZA08735
         EJECT
***********************************************************************
*                                                                     *
*   ASSUME EDIT DSN IS ALIAS, FIRST OBTAIN GOT RET CODE 8.    @ZA08735*
*   ISSUE LOCATE MACRO TO GET PRIMARY DSN AND VOLID.          @ZA08735*
*                                                                     *
***********************************************************************
IN002075 EQU   *
         MVC   INDSNAME(44),CAEDDSN MOVE EDIT DSNAME TO        @ZA05823
*                             LOCATE PARAMETER LIST            @ZA05823
         MVC   INCAMFLG(LOCATLEN),LOCATEDS  INIT LOCATE PARMS  @ZA05823
         LA    RETCDREG,INDSNAME  POINT TO LOCATE DSNAME       @ZA05823
         LA    PARMREG0,0(0,0)    ZERO OUT RESERVED FIELD      @ZA05823
         LA    PARMREG1,INCAMOBT  LOAD WORK AREA ADDRESS       @ZA05823
         STM   RETCDREG,PARMREG1,INCAMDSN   FILL OUT PARMLIST  @ZA05823
         LOCATE INCAMFLG      BE SURE WE HAVE TRUE DSNAME      @ZA05823
         MVC   INCAMVLD(L'INCAMVLD),LOCATVLD MOVE VOLID TO     @ZA08735
*                                      OBTAIN PARM LIST        @ZA08735
         LTR   RETCDREG,RETCDREG  CHECK LOCATE RETURN CODE     @ZA05823
         BNZ    IN002078      ONLY RC = ZERO IS VALID          @ZA08735
         EJECT                                                 @ZA05823
***********************************************************************
*                                                                     *
*    ASSUME EDIT DSN IS AN ALIAS. ISSUE OBTAIN MACRO AGAIN    @ZA08735*
*                                                                     *
*    USING PRIMARY DSN AND VOLID TO GET DSCB                  @ZA08735*
***********************************************************************
IN002076 EQU   *                                               @ZA08735
         MVC   INCAMFLG(INCAMEND),INCAMLST INITIALIZE FLAGS    @ZA08735
*                                  FOR OBTAIN                  @ZA08735
         LA    RETCDREG,INDSNAME ADDRESS OF DATA SET NAME      @ZA08735
         LA    PARMREG0,INCAMVLD ADDRESS OF VOLUME SERIAL NMBR @ZA08735
         LA    PARMREG1,INCAMOBT ADDRESS OF OBTAIN WORKAREA.   @ZA08735
         STM   RETCDREG,PARMREG1,INCAMDSN INITIALIZE POINTERS  @ZA08735
*                                 IN OBTAIN PARAMETER LIST.    @ZA08735
         OBTAIN INCAMFLG      OBTAIN DSCB FOR DATA SET.        @ZA08735
         B     IN002077(RETCDREG) BRANCH TO TABLE TO DIAGNOSE  @ZA08735
*                                  RETURN CODE FROM OBTAIN.    @ZA08735
*                                                              @ZA08735
*   THE BRANCH TABLE BELOW IS POSITION DEPENDENT.              @ZA08735
*                                                              @ZA08735
IN002077 EQU   *                                               @ZA08735
         B     IN002085       00 - NORMAL RETURN               @ZA08735
         B     IN002310       04 - REQUIRED VOLUME NOT MOUNTED @ZA08735
         B     IN002325       08 - DATA SET NOT ON VOLUME      @ZA08735
         B     IN002084       12 - PERMANENT I/O ERROR         @ZA08735
         B     IN002084       16 - INVALID PARAMETERS TO OBTAIN@ZA08735
          B     IN002084       20 - CCHH NOT WTHIN BOUNDARIES O@ZA08735
*                                  VTOC EXTENT                 @ZA08735
         EJECT                                                 @ZA05823
***************************************************************@ZA05823
*                                                              @ZA05823
*    ISSUE COMMAND SYSTEM ERROR MSG IF LOCATE RETURN CODE      @ZA05823
*    WAS NON ZERO.                                             @ZA05823
*                                                              @ZA05823
***************************************************************@ZA05823
         SPACE 5                                               @ZA05823
IN002078 CVD   RETCDREG,INCVDAR     CONVERT RETURN CODE AND    @ZA05823
         UNPK  INUNPKAR(8),INCVDAR  MAKE IT PRINTABLE          @ZA05823
         OI    INUNPKAR+7,X'F0'     BY OR-ING ON ALL ZONE BITS @ZA05823
         MVC   INMSGBUF(ININSLEN),ININS006  MOVE MODEL INSERTS @ZA05823
         MVC   INMSGBUF+ININSLEN-2(2),INUNPKAR+6 AND RETCODE   @ZA05823
         LA    DATA2REG,INMSGBUF+ININS6LN   CHAIN UP SECOND    @ZA05823
         ST    DATA2REG,INMSGBUF    LEVEL INSERTS              @ZA05823
         LA    ERR1REG,INERROR2     LOAD RELATIVE ERROR NUMBER @ZA05823
         LA    ERR2REG,M3131        AND 2D LVL MSG NUMBER      @ZA05823
         LA    DATA1REG,0(0,0)      ZERO 1ST LVL INSERT PTR    @ZA05823
         LA    DATA2REG,INMSGBUF    POINT TO 2D LVL INSERTS    @ZA05823
         B     IN010010             GO TO CALL IKJEBIN3 TO     @ZA05823
*                                   ISSUE MSG IKJ52313I        @ZA05823
         EJECT                                                 @ZA05823
***********************************************************************
*                                                                     *
*    OBTAIN FORMAT ONE DSCB FOR THE EDIT DATA SET.            @ZA08735*
*                                                                     *
***********************************************************************
IN002080 EQU   *
         MVC   INCAMFLG(INCAMEND),INCAMLST INITIALIZE FLAGS FOR
*                                  OBTAIN.
         LA    RETCDREG,INDSNAME ADDRESS OF DATA SET NAME      @ZA05823
         LA    PARMREG0,INCAMVLD ADDRESS OF VOLUME SERIAL NUMBER.
         LA    PARMREG1,INCAMOBT ADDRESS OF OBTAIN WORKAREA.
         STM   RETCDREG,PARMREG1,INCAMDSN INITIALIZE POINTERS IN
*                                  OBTAIN PARAMETER LIST.
         OBTAIN INCAMFLG      OBTAIN DSCB FOR DATA SET.
         B     IN002082(RETCDREG) BRANCH TO TABLE TO DIAGNOSE
*                                  RETURN CODE FROM OBTAIN.
*
*   THE BRANCH TABLE BELOW IS POSITION DEPENDENT.
*
IN002082 EQU   *
         B     IN002085       00 - NORMAL RETURN
         B     IN002310       04 - REQUIRED VOLUME NOT MOUNTED
         B     IN002075       08 - DATA SET NOT ON VOLUME      @ZA08735
         B     IN002084       12 - PERMANENT I/O ERROR
         B     IN002084       16 - INVALID PARAMETERS TO OBTAIN
*                             20 - CCHH NOT WITHIN BOUNDARIES OF
*                                  VTOC EXTENT
         EJECT
***********************************************************************
*
*   ISSUE COMMAND SYSTEM ERROR MESSAGE FOR OBTAIN RETURN CODES 12, 16
*   AND 20.
*
***********************************************************************
IN002084 EQU   *
         LA    ERR1REG,INERROR2 RELATIVE ERROR TO BE PROCESSED.
         LR    DATA2REG,RETCDREG SAVE RETURN CODE FOR MESSAGE.
         O     DATA2REG,INSVCOBT INDICATE ROUTINE NAME AS OBTAIN.
         B     IN010010       BRANCH TO CALL IKJEBIN3 TO PUT
*                                  ERROR MESSAGE AND RETURN.
         EJECT
IN002085 EQU   *
         LA    AREAREG,INCAMOBT ADDRESS OF DSCB RETURNED BY
*                             OBTAIN.
         USING IECDSCB1+(DS1FMTID-IECSDSL1),AREAREG
*                                  ADDRESSABILITY IN DSCB DSECT.
         LA    PARMREG0,X1(,D0) SET TAG REGISTER TO 1.
         MVC   CAUTILNO+D1(L'DS1LSTAR),DS1LSTAR SAVE LAST BLOCK
*                                  POINTER FOR CALCULATION OF
*                                  OLD DATA SET SIZE.
         CLC   DS1LSTAR(L'DS1LSTAR),INDSMTY DETERMINE IF DATA SET
*                                  HAS BEEN WRITTEN INTO.
         BNE   IN002100       IF NOT ZERO, BRANCH TO CHECK DSORG.
         CLC   DS1TRBAL(L'DS1TRBAL),INDSMTY IF BOTH DS1LSTAR    ZA32095
*                             AND DS1TRBAL ARE ZERO THIS IS A   ZA32095
         BE    IN002396       MULTIPLE VOLUME DATA SET NOT      ZA32095
*                             SUPPORTED BY EDIT                 ZA32095
*                             EMPTY DATA SET PROCEED WITH EDIT  ZA32095
         SR    PARMREG0,PARMREG0 SET TAG REGISTER TO ZERO.
         NI    CAEDFLAG,INF255-CAEDDISP INDICATE DATA SET IS
*                                  EMPTY AND IS TO BE PROCESSED
*                                  AS NEW.
         CLI   DS1DSORG,DS1ORGPS DETERMINE IF SEQUENTIAL.
         BE    IN002110       IF DSORG=PS, BRANCH TO SET FLAG IN
*                                  THE COMMUNICATION AREA.
         CLC   DS1DSORG(L'DS1DSORG),INDR0000 DETERMINE IF      @ZA97056
*                                  DSORG HAS BEEN ESTABLISHED  @ZA97056
*                                  FOR THE DATASET.            @ZA97056
         BE    IN003100       IF DSORG IS NOT SET, BRANCH TO
*                                  PROCESS AS A NEW DATA SET.
         SPACE 5
IN002090 EQU   *
***********************************************************************
*
*   AN INVALID DSORG ENCOUNTERED, PUT MESSAGE TO USER AND RETURN
*   TO THE TMP.
*
***********************************************************************
         LA    ERR1REG,INERROR4 RELATIVE ERROR TO BE PROCESSED.
         LA    DATA1REG,DS1DSORG ADDRESS OF DSORG FIELD.
         B     IN010010       BRANCH TO CALL IKJEBIN3 TO PUT
*                                  ERROR MESSAGE AND RETURN.
         EJECT
IN002100 EQU   *
*
*   DATA SET CONTAINS RECORDS (DS1LSTAR NOT ZERO)
*
         CLI   DS1DSORG,DS1ORGPS DETERMINE IF DSORG IS SEQUENTIAL
         BE    IN002110       IF PS, BRANCH TO CHECK RECFM.
         TM    DS1DSORG,DS1ORGPO DETERMINE IF DSORG IS          ZA33984
*                                  PARTITIONED.
         BNO   IN002090        NEITHER PS OR PO, BRANCH TO PUT  ZA33984
*                                  ERROR MESSAGE.
         OI    CAEDFLAG,CAEDDSOR INDICATE DATA SET HAS DSORG = PO
IN002110 EQU   *
*
*   DSORG = PS OR PO.
*
         TM    DS1RECFM,DS1FMUDF CHECK FOR UNDEFINED FORMAT.     Y01676
         BO    IN002120       IF SO, BRANCH TO SEND ERROR MSG.   Y01676
         BZ    IN002132       IF NOT DEFINED, IT IS NEW,         Y01676
*                                  PRE-ALLOCATED DATA SET.       Y01676
         TM    DS1RECFM,DS1FMOVF CHECK FOR TRACK OVERFLOW        Y01676
*                                  FORMAT.                       Y01676
         BO    IN002120       IF SO, BRANCH TO SEND ERROR MSG.   Y01676
         TM    DS1RECFM,DS1FMVAR+DS1FMSTD CHECK FOR SPANNED      Y01676
*                                  RECORDS.                      Y01676
         BNO   IN002125       IF NOT, BR TO PROCESS VALID FORMAT Y01676
         SPACE 5
IN002120 EQU   *
***********************************************************************
*
*   INVALID RECORD FORMAT ENCOUNTERED, PUT MESSAGE TO USER AND
*   RETURN TO THE TMP.
*
***********************************************************************
         LA    ERR1REG,INERROR5 RELATIVE ERROR TO BE PROCESSED.
         LA    DATA1REG,DS1RECFM ADDRESS OF RECFM FIELD.
         B     IN010010       BRANCH TO CALL IKJEBEIA TO PUT
*                                  ERROR MESSAGE AND RETURN.
         EJECT
IN002125 EQU   *                                                 Y01676
         TM    DS1RECFM,DS1FMA+DS1FMM CHECK FOR CONTROL          Y01676
*                                  CHARACTER FORMATS.            Y01676
         BZ    IN002130       IF NOT, CONTINUE PROCESSING.       Y01676
         OI    CAEDFLG2,CAEDPRTC IF SO, INDICATE CONTROL         Y01676
*                                  CHARACTER PRESENCE.           Y01676
IN002130 EQU   *
*
*   DSORG PS OR PO AND RECFM IS FIXED OR VARIABLE -- DETERMINE
*   WHICH.
*
         TM    DS1RECFM,DS1FMVAR DETERMINE IF RECFM = V.
         BO    IN002140       IF RECFM=V, BRANCH TO OBTAIN LRECL.
         B     IN002135       RECORD FORMAT IS FIXED, BR TO      Y01676
*                                  PROCESS.                      Y01676
*                                                                A42947
*   RECFM NOT INITIALIZED FOR DATA SET -- DETERMINE DEFAULT.     A42947
*                                                                A42947
IN002132 EQU   *                                                 Y01676
         TM    CARECFMD,CARECFMV DETERMINE IF RECFM=V IS DEFLT.  A42947
         BO    IN002140       IF RECFM DEFLT = V, OBTAIN LRECL.  A42947
IN002135 EQU   *                                                 A42947
         OI    CACFLAG2,CARECFM INDICATE THAT DATA SET HAS
*                                  RECFM = F.
IN002140 EQU   *
         MVC   CALRECL(L'CALRECL),DS1LRECL MOVE LRECL TO THE
*                                  COMMUNICATION AREA.
         LTR   PARMREG0,PARMREG0 CHECK TAG REGISTER AND SET NEW
         BZ    IN003100            FLAG BASED ON DS1LSTAR CONTENT
         OI    CAEDFLAG,CAEDDISP INDICATE THAT DATA SET IS OLD.
         MVC   CABLKS(L'CABLKS),DS1BLKL UPDATE BLOCK SIZE FOR OLD
*                                  DATA SETS.
         TM    CAEDFLAG,CAEDDSOR+CAEDMEM CHECK IF DSORG=PO AND @ZA86786
*                                        MEMBER IS OLD         @ZA86786
         BNO   IN002940    IF NOT BOTH PO AND OLD MEM,         @ZA86786
*                          BRANCH TO VALIDATE COMMAND OPERANDS @ZA86786
IN002150 EQU   *
*
*   UNALLOCATE THE DATA SET IF IT HAS DSORG = PO AND THE       @ZA86786
*   MEMBER EXISTS, SO THAT IT CAN BE RE-ALLOCATED SPECIFYING   @ZA86786
*   THE SPECIFIC MEMBER.                                       @ZA86786
*                                                              @ZA86786
         L     PASSREG,CAPTTMP ADDRESS OF TMP PARAMETER LIST.
         L     PASSREG,(CPPLPSCB-CPPL)(,PASSREG) ADDRESS OF PSCB.
         LA    AREAREG,CAEDDSNL ADDRESS OF DATA SET NAME LENGTH
*                                  AND DATA SET NAME.
         MVC   INDREC(INDR18L),INDR18 INITIALIZE IKJDAIR
*                                  PARAMETER LIST - ENTRY CODE 18
         ST    AREAREG,INDREC+(DA18PDSN-DAPB18) PUT ADDRESS OF
*                                  DSNAME IN PARAMETER LIST.
         LA    AREAREG,INDREC ADDRESS OF IKJDAIR PARAMETER LIST.
         LA    PARMREG1,CATMPLST   LOAD PARAM REG 1            @YA02225
         LR    RETREG,(PASSREG)    PICK UP PARAMETER           @YA02225
         LR    RETCDREG,(AREAREG)  PICK UP PARAMETER           @YA02225
         STM   14,15,12(1)         STORE INTO PARAM LIST       @YA02225
         CALLTSSR EP=IKJDAIR,MF=(E,CATMPLST)  INVOKE DAIR      @YA02225
*                                  SERVICE ROUTINE             @YA02225
         LTR   RETCDREG,RETCDREG TEST FOR RETURN CODE OF ZERO.
         BZ    IN002190       IF NOT, BRANCH TO CONTINUE NORMAL
*                                  PROCESSING.
         CH    RETCDREG,INDRRC24 CHECK IF DATA SET UNALLOCATED  YA00002
*                                  BELONGS TO CONCATENATED GRP. YA00002
         BE    IN002190       IF SO, BRANCH TO CONTINUE PROCESS YA00002
IN002160 EQU   *                                                YA00002
         OI    CACFLAG5,CABADUNA INDICATE UNALLOCATION FAILED  @YA02153
         CH    RETCDREG,INDAIR08 CHECK FOR CATALOG ERROR.       YA00002
         BL    IN002270       INVALID PARAMETERS, SEND MESSAGE. YA00002
         BE    IN002170       CATLG MGMT ERROR, SEND MESSAGE.   YA00002
         CH    RETCDREG,INDAIR16 CHECK FOR DYN ALLOC. ERROR.    YA00002
         BL    IN002180       IF SO, SEND MESSAGE.              YA00002
         CH    RETCDREG,INDAIR48 CHECK FOR DAIR STAE ENTERED.   YA00002
         BNE   IN002270       IF NOT, BR TO SEND GENERAL        YA00002
*                                  ERROR MESSAGE.               YA00002
         BE    INEXIT12       IF SO, BR TO TERMINATE WITHOUT    YA00002
*                                  ERROR MESSAGE.               YA00002
IN002170 EQU   *
         LA    ERR2REG,M4244  SPECIFY CATALOG ERROR.
         LH    DATA2REG,INDREC+(DA18CTRC-DAPB18) ACQUIRE CTRC.
         B     IN002185       BRANCH TO CONTINUE ERROR PROCESSING.
IN002180 EQU   *
         LA    ERR2REG,M4242  SPECIFY DYNAMIC ALLOCATION ERROR.
         LH    DATA2REG,INDREC+(DA18DARC-DAPB18) ACQUIRE DARC.
IN002185 EQU   *
         LA    ERR1REG,INERRORF SPECIFY RELATIVE ERROR.
         B     IN010010       BRANCH TO CALL IKJEBIN3 TO PUT
*                                  MESSAGE TO THE TERMINAL.
IN002190 EQU   *
         NI    CAEDFLAG,INF255-CAEDALOC INDICATE DATA SET NO
*                                  LONGER ALLOCATED.
         TM    CAEDFLAG,CAEDMEM CHECK IF NEW MEMBER IS TO BE
*                                  CREATED.
         BZ    IN003100       IF SO, BRANCH TO VALIDATE COMMAND
*                                  OPERANDS.
*
*   ALLOCATE DATA SET WITH MEMBER NAME SPECIFIED.
*
         MVC   INDREC(INDR8OLL),INDAIR8O INITIALIZE IKJDAIR
*                                  PARAMETER LIST.
         MVC   INDREC+(DA08MNM-DAPB08)(L'CAEDMEMB),CAEDMEMB MOVE
*                                  MEMBER NAME TO PARAMETER LIST.
         TM    INDSN+INPSWFLG,INOPRNDO DETERMINE IF PASSWORD WAS
*                                  ENTERED.
         BZ    IN002930       IF NOT, BRANCH TO CALL IKJDAIR.
         MVC   INDREC+(DA08PSWD-DAPB08)(L'CAEDPSWD),CAEDPSWD MOVE
*                                  PASSWORD TO PARAMETER LIST.
IN002930 EQU   *
         LA    AREAREG,CAEDDSNL GET ADDRESS OF DSNAME AND PLACE
         ST    AREAREG,INDREC+(DA08PDSN-DAPB08) IN IKJDAIR
*                                  PARAMETER LIST.
         LA    AREAREG,INDREC ADDRESS OF IKJDAIR PARAMETER BLOCK.
         L     PASSREG,CAPTTMP ADDRESS OF TMP PARAMETER LIST.
         L     PASSREG,(CPPLPSCB-CPPL)(,PASSREG) ADDRESS OF PSCB.
         OI    INDREC+(DA08DSP1-DAPB08),DA08SHR INDICATE DISP=SHR
*                                  FOR OLD, PARTITIONED DATA SETS
         LA    PARMREG1,CATMPLST   LOAD PARAM REG 1            @YA02225
         LR    RETREG,(PASSREG)    PICK UP PARAMETER           @YA02225
         LR    RETCDREG,(AREAREG)  PICK UP PAREMETER           @YA02225
         STM   14,15,12(1)         STORE INTO PARAM LIST       @YA02225
         CALLTSSR EP=IKJDAIR,MF=(E,CATMPLST)  INVOKE DAIR      @YA02225X
                                   SERVICE ROUTINE             @YA02225
         LTR   RETCDREG,RETCDREG CHECK IF DATA SET ALLOCATED.
         BNZ   IN002260            IF DATA SET NOT ALLOCATED,   YA00002
*                                  BRANCH TO SELECT DIAGNOSTIC
*                                  AND RETURN TO TMP.
         OI    CAEDFLAG,CAEDALOC INDICATE DATA SET ALLOCATED.
         MVC   CAEDDDN(L'CAEDDDN),INDREC+(DA08DDN-DAPB08) MOVE
*                                  DDNAME RETURNED BY IKJDAIR TO
*                                  THE COMMUNICATION AREA.
IN002940 EQU   *
*
*   AN OLD SEQUENTIAL DATA SET OR AN EXISTING PARTITIONED DATA
*   SET(MEMBER) HAS BEEN SUCCESSFULLY ALLOCATED, AND ITS DDNAME
*   AND LRECL ARE IN THE COMMUNICATION AREA.
*
         SR    PARMREG0,PARMREG0 SET ENTRY CODE TO ZERO FOR
*                                  IKJEBIN8 (OPERAND VALIDATION)
*                                  SUBROUTINE.
         B     IN003110       BRANCH TO CALL IKJEBIN8.
         EJECT
***********************************************************************
*
*   CALL OPERAND VALIDITY CHECKING ROUTINE TO VERIFY THAT ALL
*   OPERANDS SPECIFIED ON THE COMMAND ARE ACCEPTABLE.  UPON
*   RETURN FROM IKJEBIN8, TEST THE RETURN CODE FOR SUCCESSFUL
*   COMPLETION.  IF SUCCESSFUL (RETURN CODE = 0), BRANCH TO XCTL
*   TO IKJEBEMA.  IF UNSUCCESSFUL (RETURN CODE  = 4), BRANCH TO
*   TERMINATE EDIT.
*
*   NOTE -- AN ENTRY CODE IS SET IN REGISTER ZERO (0) PRIOR TO
*           CALLING IKJEBIN8 --
*
*               00 - OLD DATA SET
*               04 - NEW DATA SET
*
***********************************************************************
         SPACE 2
IN003100 EQU   *
         LA    PARMREG0,D4(,D0) SET ENTRY CODE FOR IKJEBEIE
*                                        (OPERAND VALIDATION) ROUTINE.
IN003110 EQU   *
         CALL  IKJEBIN8,((COMMREG),(DATAREG)),                         X
               MF=(E,INSVCRTN) CALL OPERAND VALIDATION ROUTINE.
         LTR   RETCDREG,RETCDREG CHECK FOR SUCCESSFUL COMPLETION.
         BNZ   INEXIT1        IF IKJEBIN8 RETURNED A NON-ZERO
*                                  RETURN CODE, BRANCH TO RETURN
*                                  TO THE TMP.
         EJECT
IN008030 EQU   *
***********************************************************************
*                                                                     *
*   CHECK STATUS OF EDIT DATA SET.                                    *
*                                                                     *
*   COMPUTE LOGICAL RECORD SIZE FOR ALL SUBCOMMAND PROCESSORS AND     *
*   SERVICE ROUTINES. EDIT LRECL IS THE LRECL FOR THE DATA SET + 4    *
*   (LENGTH OF CONTROL WORD FOR EACH).                                *
*                                                                     *
*   DETERMINE WHETHER DATA SET IS OLD OR NEW.  IF DATA SET IS NEW,    *
*   SET INDICATION THAT INPUT MODE SHOULD BE ENTERED INITIALLY.  IF   *
*   DATA SET IS OLD, CHECK IF A PARTITIONED DATA SET.  IF NOT A       *
*   PDS, LOAD IKJEBEUT (THE EDIT UTILITY INTERFACE ROUTINE) INTO      *
*   MAIN STORAGE AND INITIALIZE 'CAPTUT' IN THE EDIT COMMUNICATION    *
*   AREA WITH ITS ENTRY POINT ADDRESS.  CALL IKJEBECO TO COPY THE     *
*   EDIT DATA SET TO THE UTILITY DATA SET.  IF A PDS, PERFORM THE     *
*   COPY ONLY IF THE MEMBER EXISTS.  UPON RETURN FROM IKJEBECO,       *
*   DELETE THE UTILITY INTERFACE ROUTINE (IKJEBEUT).                  *
*                                                                     *
***********************************************************************
         TM    CACFLAG2,CARECFM CHECK IF RECFM IS VARIABLE.
         BZ    IN008035       IF RECFM = V, LRECL ALREADY IS 4
*                                  GREATER THAN DATA PORTION OF
*                                  RECORD, BRANCH AROUND
*                                  COMPUTATION FOR RECFM = F.
         LH    LENREG,CALRECL OBTAIN LRECL FOR EDIT DATA SET.
         LA    LENREG,D4(PARMREG0,LENREG) ADD 4 TO LRECL (FOR
         STH   LENREG,CALRECL      CONTROL WORD) AND SAVE.
IN008035 EQU   *
         TM    CAEDFLAG,CAEDDSOR CHECK IF DSORG = PS.
         BZ    IN008040       IF DSORG = PS, BRANCH TO CHECK
*                                  NEW/OLD STATUS.
         TM    CAEDFLAG,CAEDMEM  WHEN DSORG = PO, CHECK IF
*                                  MEMBER ALREADY EXISTS.
         BO    IN009010       IF MEMBER EXISTS, BRANCH TO CALL
*                                  IKJEBECO.
         B     IN009030       IF MEMBER IS TO BE CREATED, BRANCH
*                                  TO CALL IKJEBEUI.
IN008040 EQU   *
         TM    CAEDFLAG,CAEDDISP CHECK IF DISPOSITION IS OLD.
         BZ    IN009030       IF NEW, BRANCH TO INDICATE INPUT
*                                  MODE TO BE CALLED.
IN009010 EQU   *
         OI    CAEDFLAG,CAEDINCP INDICATE TO INITIAL COPY THAT
*                                  EDIT DATA SET IS TO BE COPIED.
         LOAD  EP=IKJEBEUT    LOAD UTILITY INTERFACE ROUTINE.
         ST    PARMREG0,CAPTUT SAVE ENTRY POINT ADDRESS IN THE
*                                  COMMUNICATION AREA.
         IKJEBESH (COMMREG),IKJEBECO,PARAM=((COMMREG)),                X
               MF=(E,INSVCRTN) CALL INITIAL COPY ROUTINE.
         NI    CAEDFLAG,INF255-CAEDINCP TURN OF INITIAL COPY FLAG
*                                  FOR EDIT DATA SET.
IN009020 EQU   *
         B     IN009020+D4(RETCDREG) IKJEBECO RETURN CODE BRANCH
*                                  TABLE.
         B     IN009025       RETURN CODE 0, BRANCH TO DELETE
*                                  IKJEBEUT.
         B     IN009060       RETURN CODE 4, BRANCH TO INDICATE
*                                  INPUT MODE TO BE INITIALLY
*                                  ENTERED.
         B     INEXIT1        RETURN CODE = 8, BRANCH TO RETURN
*                                  TO THE TMP.
IN009025 EQU   *
         DELETE EP=IKJEBEUT   DELETE UTILITY INTERFACE ROUTINE         X
                                   FROM MAIN STORAGE.
         B     IN009067       BRANCH TO UNALLOCATE DATA SET (IF A
*                                  PDS) AND XCTL TO IKJEBEMA.
         EJECT
IN009030 EQU   *
***********************************************************************
*                                                                     *
*   DATA SET IS NEW.                                                  *
*                                                                     *
*   WHEN A NEW DATA SET IS TO BE PROCESSED, LINK TO IKJEBEUI TO       *
*   INITIALIZE THE EDIT ACCESS METHOD.  UPON RETURN FROM IKJEBEUI,    *
*   DETERMINE IF IKJEBEUI WAS SUCCESSFUL.  IF IKJEBEUI IS NOT         *
*   SUCCESSFUL, BRANCH TO INFORM USER AND TO RETURN TO TMP.           *
*                                                                     *
*   IF IKJEBEUI IS SUCCESSFUL, PLACE ADDRESS OF UTILITY DCB IN THE    *
*   COMMUNICATION AREA AND XCTL TO IKJEBEMA.                          *
*                                                                     *
***********************************************************************
         LINK  EP=IKJEBEUI,DCB=0,MF=(E,(COMMREG)),SF=(E,INLINKSF)
         LTR   RETCDREG,RETCDREG CHECK IF IKJEBEUI SUCCESSFULLY
*                                  INITIALIZED ACCESS METHOD.
         BNZ   INEXIT1        IF UNSUCCESSFUL, BRANCH TO RETURN
*                                  TO TMP.
         ST    PARMREG0,CAPTCDCB SAVE ADDRESS OF DCB IN
*                                  COMMUNICATION AREA.
         B     IN009062                                        @ZA86100
IN009060 EQU   *
         NI    CAEDFLAG,INF255-CAEDDISP  DATA SET IS NEW       @ZA86100
IN009062 EQU   *
         TM    CAEDFLAG,CAEDDSOR CHECK IF DSORG = PS.
         BZ    IN009065       IF DSORG = PS, BRANCH TO INDICATE
*                                  INPUT MODE BE ENTERED.
         NI    CAEDFLAG,INF255-CAEDMEM FOR DSORG = PO, INDICATE
*                                  THAT MEMBER IS TO BE CREATED.
         B     IN009067       BRANCH TO UNALLOCATE DATASET IF  @ZA86786
*                             PDS AND XCTL TO IKJEBEMA         @ZA86786
IN009065 EQU   *
         NI    CAEDFLAG,INF255-CAEDDISP INDICATE THAT DATA SET IS
*                                  NEW AND THAT IKJEBEIP TO BE
*                                  ENTERED INITIALLY.
         B     IN009070       BRANCH TO XCTL TO IKJEBEMA.
         EJECT
IN009067 EQU   *
***********************************************************************
*                                                                     *
*   UNALLOCATE DATA SET IF EDIT DATA SET IS AN OLD PARTITIONED DATA   *
*   SET.                                                              *
*                                                                     *
***********************************************************************
         TM    CAEDFLAG,CAEDALOC+CAEDDSOR CHECK IF EDIT DATASET@ZA86786
*                                        IS AN OLD PDS THAT IS @ZA86786
*                                        CURRENTLY ALLOCATED.  @ZA86786
         BNO   IN009070       IF NOT OLD AND ALLOCATED, BRANCH TO
*                                  XCTL TO THE MAIN CONTROLLER.
         L     PASSREG,CAPTTMP ADDRESS OF TMP PARAMETER LIST.
         L     PASSREG,(CPPLPSCB-CPPL)(,PASSREG) ADDRESS OF PSCB.
         LA    AREAREG,CAEDDSNL ADDRESS OF DATA SET NAME LENGTH
*                                  AND DATA SET NAME.
         MVC   INDREC(INDR18L),INDR18 INITIALIZE IKJDAIR
*                                  PARAMETER LIST - ENTRY CODE 18
         TM    CAEDFLAG,CAEDMEM    DOES MEMBER EXIST ?         @ZA86786
         BZ    *+10                IF NOT THEN DON'T SET MEMBER@ZA86786
*                                  NAME SINCE DATASET IS NOT   @ZA86786
*                                  ALLOCATED W/ MEMBER NAME    @ZA86786
         MVC   INDREC+(DA18MNM-DAPB18)(L'CAEDMEMB),CAEDMEMB MOVE
*                                  MEMBER NAME TO PARAMETER LIST.
         ST    AREAREG,INDREC+(DA18PDSN-DAPB18) PUT ADDRESS OF
*                                  DSNAME IN PARAMETER LIST.
         LA    AREAREG,INDREC ADDRESS OF IKJDAIR PARAMETER LIST.
         LA    PARMREG1,CATMPLST   LOAD PARAM REG 1            @YA02225
         LR    RETREG,(PASSREG)    PICK UP PARAMETER           @YA02225
         LR    RETCDREG,(AREAREG)  PICK UP PARAMETER           @YA02225
         STM   14,15,12(1)         STORE INTO PARAM LIST       @YA02225
         CALLTSSR EP=IKJDAIR,MF=(E,CATMPLST)  INVOKE DAIR      @YA02225X
                                   SERVICE ROUTINE             @YA02225
         LTR   RETCDREG,RETCDREG TEST FOR RETURN CODE OF ZERO.
         BZ    IN009068       IF RETURN CODE IS ZERO, BRANCH TO
*                                  CONTINUE NORMAL PROCESSING.
         CH    RETCDREG,INDRRC24 CHECK FOR RETURN CODE 24
*                                  (DECIMAL) FROM IKJDAIR.
         BNE    IN002160      IF NOT 24, BRANCH TO DIAGNOSE     YA00002
*                                  IKJDAIR ERROR RETURN CODE.
IN009068 EQU   *
         NI    CAEDFLAG,INF255-CAEDALOC INDICATE DATA SET NO
*                                  LONGER ALLOCATED.
         EJECT
IN009070 EQU   *
***********************************************************************
*                                                                     *
*   TRANSFER CONTROL TO MAIN CONTROLLER.                              *
*                                                                     *
*   FREE IKJPARSE PDL USING THE IKJRLSA MACRO INSTRUCTION.  BUILD     *
*   PARAMETER LIST FOR XCTL.  FREE THIS ROUTINES SAVE AREA AND        *
*   XCTL TO IKJEBEMA.                                                 *
*                                                                     *
***********************************************************************
         L     AREAREG,INPDLPTR ADDRESS OF PROMPT PDL.           A45713
         LTR   AREAREG,AREAREG CHECK IF PROMPT PDL PRESENT.      A45713
         BNP   IN009075       IF NO, BRANCH TO FREE MAIN PDL.    A45713
         IKJRLSA INPDLPTR     FREE PROMPT PDL.                   A45713
         L     AREAREG,INPGLIST+PGPBIBUF-PGPB PROMPT BFR ADDR.   A45713
         LH    PARMREG0,D0(,AREAREG) LENGTH OF PROMPT BUFFER.    A45713
         L     PARMREG1,INPGLIST+PGPBIBUF-PGPB PTR TO BFR ADDR.  A45713
         O     PARMREG0,INSUBPL1 INDICATE SUBPOOL ONE.           A45713
         FREEMAIN R,LV=(0),A=(1) FREE PUTGET PROMPT BFR.         A45713
IN009075 EQU   *                                                 A45713
         IKJRLSA CAPTPRSD     FREE IKJPARS PDL.
         OI    CAPRSPDL,CAFREEDL INDICATE THAT NO PDL REMAINS TO
*                                  BE FREEMAINED.
         SR    TOPPTR,TOPPTR                                     Y01676
         ST    TOPPTR,CACURNUM     SET CURRENT LINE NUMBER TO    Y01676
*                                  ZERO SO THAT AT ENTRY TO EDIT Y01676
*                                  THE CURRENT LINE POINTER WILL Y01676
*                                  BE POSITIONED AT THE TOP OF   Y01676
*                                  THE DATASET.                  Y01676
         TM    CACFLAG1,CANONUM TEST IF DATA SET IS LINE NUMBERED
*                                  SO THAT DEFAULT INCREMENTS MAY
*                                  BE SET ACCORDINGLY.
         BZ    IN009080       IF DATA SET IS NUMBERED, BRANCH TO
*                                  DEFAULT INCREMENTS TO 10.
         MVC   CAINCRE(L'CAINCRE),ININC100 SET DATA SET INCREMENT
         MVC   CAIMLINC(L'CAIMLINC),ININC100 AND LAST INCREMENT
*                                  USED IN INPUT MODE TO 100 FOR
*                                  NON-LINE NUMBERED DATA SETS.
         B     IN009090       BRANCH TO TRANSFER CONTROL TO THE
*                                  MAIN CONTROLLER (IKJEBEMA).
IN009080 EQU   *
         MVC   CAINCRE(L'CAINCRE),ININC010 SET DATA SET INCREMENT
         MVC   CAIMLINC(L'CAIMLINC),ININC010 AND LAST INCREMENT
*                                  USED IN INPUT MODE TO 10 FOR
*                                  LINE NUMBERED DATA SETS.
         OI    CACFLAG3,CAIMPT INDICATE THAT USER TO BE PROMPTED.
IN009090 EQU *
         MVC   INXCTLPL(INXCTLLN),INXCTL INITIALIZE XCTL
*                                  PARAMETER LIST.
         ESTAE 0,,MF=(E,CASTAEPL)   CANCEL ABNORMAL EXIT       @YA07954
         NI    MACFLAGS,X'FF'-MAEBEIN   TURN OFF FLAG          @YA07954
         DELETE EP=IKJEBEAE                                    @YA07954
         DROP  DATAREG
         LR    PARMREG1,SAVEREG ADDRESS OF SAVE/WORK AREA.
         L     SAVEREG,D4(PARMREG0,SAVEREG) ADDRESS OF HIGHER
*                                  SAVE AREA
         L     RETREG,D12(,SAVEREG) ADDRESS OF RETURN POINT.     A42958
         XC    D0(D72,PARMREG1),D0(PARMREG1) ZERO SAVE AREA.
         XCTL  (2,12),EP=IKJEBEMA,MF=(E,(COMMREG)),              A42958*
               SF=(E,INXCTLPL)                                   A42958
*                                  XCTL TO IKJEBEMA.
         EJECT
***********************************************************************
*                                                                     *
*   CALL IKJEBIN3 TO ISSUE ERROR MESSAGE TO USER.  UPON RETURN        *
*   FROM IKJEBIN3, SET RETURN CODE TO 12 AND RETURN TO THE TMP.       *
*                                                                     *
***********************************************************************
IN010010 EQU   *
         L     EPLOCREG,INMSGRTN ADDRESS OF MESSAGE ROUTINE.
         CALL  (15),((COMMREG),(ERR1REG),(ERR2REG),(DATA1REG),         X
               (DATA2REG)),MF=(E,INSVCRTN) BRANCH TO PUT ERROR         X
                                   MESSAGE.
INEXIT12 EQU   *                                                YA00002
         LA    TMPCDREG,D12(,D0) SET RETURN CODE 12 FOR TMP.
         TM    CACFLAG5,CABADUNA HAS UNALLOC FAILED PRIOR?     @ZA97056
         BO    INEXIT1          YES-DYNAMIC UNALLOCATION       @ZA97056
*                               FAILED, SKIP UNALLOCATION      @ZA97056
         EJECT
***********************************************************************
*                                                                     *
*         UNALLOCATE THE DATA SET IF IT HAS BEEN ALLOCATED.           *
*                                                                     *
***********************************************************************
IN010015 EQU   *
         TM    CAEDFLAG,CAEDALOC    IS DATASET ALLOCATED?      @YA02153
         BNO   INEXIT1              NO - SKIP UNALLOCATION     @YA02153
         L     PASSREG,CAPTTMP  ADDRESS OF TMP PARM LIST       @ZA73615
         L     PASSREG,(CPPLPSCB-CPPL)(,PASSREG) PSCB ADDRESS  @ZA73615
         LA    AREAREG,CAEDDSNL ADDRESS OF DATA SET NAME       @ZA73615
*                                  LENGTH AND DATA SET NAME.   @ZA73615
         MVC   INDREC(INDR18L),INDR18 INITIALIZE IKJDAIR       @ZA73615
*                                PARAMETER LIST-ENTRY CODE 18  @ZA73615
         MVC   INDREC+(DA18MNM-DAPB18)(L'CAEDMEMB),CAEDMEMB    @ZA73615
*                               MOVE MEMBER NAME TO PARM LIST  @ZA73615
         ST    AREAREG,INDREC+(DA18PDSN-DAPB18) PUT ADDRESS OF @ZA73615
*                              DSNAME IN IKJDAIR PARM LIST     @ZA73615
         LA    AREAREG,INDREC ADDRESS OF IKJDAIR PARM LIST     @ZA73615
         LA    PARMREG1,CATMPLST  LOAD PARM REG 1              @ZA73615
         LR    RETREG,(PASSREG)   PICK UP PARAMETER            @ZA73615
         LR    RETCDREG,(AREAREG) PICK UP PARAMETER            @ZA73615
         STM   14,15,12(1)        STORE INTO PARM LIST         @ZA73615
         CALLTSSR EP=IKJDAIR,MF=(E,CATMPLST) INVOKE DAIR       @ZA73615
         LTR   RETCDREG,RETCDREG TEST FOR RETURN CODE OF ZERO  @ZA73615
         BZ    IN010017 IF RETURN CODE IS ZERO, BRANCH TO      @ZA73615
*                       CONTINUE EXIT.                         @ZA73615
         CH    RETCDREG,INDRRC28 CHECK FOR RETURN CODE 28      @ZA77969
         BE    INEXIT1           GO EXIT                       @ZA77969
         CH    RETCDREG,INDRRC24 CHECK FOR RETURN CODE 24      @ZA73615
*                                (DECIMAL) FROM IKJDAIR        @ZA73615
         BNE   IN002160  IF NOT 24 BRANCH TO DIAGNOSE          @ZA73615
*                          IKJDAIR ERROR RETURN CODE.          @ZA73615
IN010017 EQU   *                                               @ZA73615
         NI    CAEDFLAG,INF255-CAEDALOC INDICATE DATA SET NO   @ZA73615
*                                    LONGER ALLOCATED.         @ZA73615
INEXIT0  EQU   *
***********************************************************************
*                                                                     *
*   EXIT AREA -- AN ERROR WAS ENCOUNTERED DURING INITIALIZATION OF    *
*   THE EDIT COMMAND.  ON EXIT, (1) RELEASE THE IKJPARSE PDL USING    *
*   THE IKJRLSA MACRO INSTRUCTION, (2) CALL IKJEBESR TO DELETE THE    *
*   PERMANENTLY RESIDENT SERVICE ROUTINES, (3) DELETE IKJEBESR USING  *
*   THE DELETE MACRO INSTRUCTION, (4) ISSUE A FREEMAIN MACRO          *
*   INSTRUCTION FOR THE BLDL LIST AND THE COMMUNICATION AREA, AND     *
*   (5) RETURN TO THE TMP WITH A RETURN CODE OF 12.                   *
*                                                                     *
***********************************************************************
INEXIT1  EQU   *
         TM    CAPRSPDL,CAFREEDL CHECK IF PDL EXISTS.
         BNZ   INEXIT2        IF NOT, BRANCH TO EXIT.
         IKJRLSA CAPTPRSD     FREE IKJPARS PDL.
INEXIT2  EQU   *
         DELETE EP=IKJEBEMS   DELETE MESSAGE SELECTION ROUTINE         X
                                   FROM MAIN STORAGE.
         TCLEARQ INPUT        CLEAR INPUT QUEUES.
         MVC   CASRPLST+D4(INSTPBLN),INSTKPRM MOVE STACK PARAMETER
*                                  BLOCK TO DYNAMIC AREA.
         LA    EPLOCREG,CASRPLST+D4 ADDRESS OF STACK PARAMETER BLOCK.
         ST    EPLOCREG,CATMPLST+IOPLIOPB-IOPL STORE ADDRESS IN
*                                  SERVICE ROUTINE PARAMETER LIST.
         STACK MF=(E,CATMPLST) DELETE ALL ELEMENTS BUT TERMINAL        X
                                   FROM INPUT STACK.
         L     SAVEREG,D4(,SAVEREG) ADDRESS OF NEXT HIGHER SAVE
*                                  AREA.
         FREEMAIN R,LV=CADLEN,A=(COMMREG),SP=SUBPOOL FREE THE          X
                                   COMMUNICATION AREA.
         RETURN (14,12),,RC=12 RETURN TO THE TMP.
         EJECT
***********************************************************************
*                                                                     *
*  IF DATA SET IS NOT FOUND AS OLD, ISSUE MESSAGE THAT DATA SET
*  IS ASSUMED TO BE NEW.
*
***********************************************************************
IN012010 EQU  *
         LA    AREAREG,INPTLIST         GET ADDR OF PARM LIST  @OZ05180
         USING PTPB,AREAREG             SET UP ADDRESSIBILITY  @OZ05180
         XC    PTPB(INPTPBLN),PTPB      ZERO PARM LIST         @OZ05180
         ST    AREAREG,CATMPLST+IOPLIOPB-IOPL  STORE ADDR      @OZ05180
         LA    PARMREG1,CATMPLST        PARMLIST ADDR IN REG 1 @OZ05180
         PUTLINE  ,OUTPUT=INNOTOLD,MF=(E,(1)) ISSUE MESSAGE    @OZ05180
         BR    SRRTNREG                 GO TO PROCESS NEW DSN  @OZ05180
         EJECT
**********************************************************************
*                                                                     *
*   EQUATES, CONSTANTS AND AREAS USED BY INITIALIZATION.              *
*                                                                     *
***********************************************************************
INMSGRTN DC    V(IKJEBIN3)    ADDRESS OF MESSAGE ROUTINE FOR
*                                  INITIALIZATION PHASE.
         SPACE 5
INCL001  CLC   D0(*-*,FLAGREG),INNEW CHECK IF NEW ENTERED.
INXC001  XC    D0(*-*,AREAREG),D0(AREAREG) INSTRUCTION EXECUTED
*                                  OUT OF SEQUENCE TO ZERO CORE.
INMV001  MVC   D0(*-*,AREAREG),D0(DSNAMREG) MOVE DATA SET NAME
*                                  TO MESSAGE INSERTION RECORD.
INMV002  MVC   X1(*-*,AREAREG),D0(DSNAMREG) MOVE MEMBER NAME TO
*                                  MESSAGE INSERTION RECORD.
INMV003  MVC   CAEDDSN(*-*),D0(AREAREG) MOVE EDIT DATA SET NAME TO
*                                  COMMUNICATION AREA.
INMV004  MVC   CAEDMEMB(*-*),D0(AREAREG) MOVE MEMBER NAME TO
*                                  COMMUNICATION AREA.
INMV005  MVC   CAEDPSWD(*-*),D0(AREAREG) MOVE PASSWORD TO
*                                  COMMUNICATION AREA.
         SPACE 5
INXCTL   XCTL  ,SF=L          XCTL PARAMETER LIST.
INXCTLLN EQU   *-INXCTL       LENGTH OF XCTL PARAMETER LIST.
         SPACE 5
INCAMLST CAMLST SEARCH,1,2,3  CAMLIST FOR OBTAIN DSCB.
INCAMEND EQU   *-INCAMLST     LENGTH OF CAMLIST EXPANSION.
         SPACE 5
LOCATEDS CAMLST NAME,1,,3     CAMLST LIST FORM MACRO FOR LOCATE@ZA10761
LOCATLEN EQU   *-LOCATEDS     LENGTH OF CAMLIST MACRO EXPANSION@ZA05823
         SPACE 5
INNOTOLD DC    F'1'           NUMBER OF SEGMENTS               @OZ05180
         DC    A(INOTOLD1)    PTR TO SEGMENT                   @OZ05180
INOTOLD1 DC    AL2(INOTOLDL)  LENGTH OF MESSAGE                @OZ05180
         DC    H'0'           OFFSET                           @OZ05180
         DC    CL57'IKJ52320I DATA SET OR MEMBER NOT FOUND, ASSUMED TO X
               BE NEW'                                         @OZ05180
INOTOLDL EQU   *-INOTOLD1     MESSAGE LENGTH                   @OZ05180
         SPACE 5
         DS    0F                                              @OZ05180
INKEYDEF DC    H'1'           DEFAULT KEYWORD NUMBER FROM IKJPARSE.
INDISPNW DC    XL2'2'         RELATIVE KEYWORD NUMBER FOR NEW.
INPARS   DC    XL4'01000000'  INDICATOR FOR IKJPARS SERVICE
*                                  ROUTINE.
INDAIR   DC    XL4'02000000'  INDICATOR FOR IKJDAIR SERVICE
*                                  ROUTINE.
INSVCOBT DC    XL4'04000000'  INDICATOR FOR OBTAIN SVC.
INSUBPL1 DC    XL4'01000000'  INDICATOR FOR SUBPOOL ONE.         A45713
INDSMTY  DC    XL3'0'         CONSTANT USED TO CHECK DS1LSTAR.
INNOKEYW DC    XL2'0'         CONSTANT USED TO DETERMINE IF A
*                                  KEYWORD ENTERED ON COMMAND.
INNEW    DC    CL3'NEW'       NEW DISPOSITION OPERAND KEYWORD.
INBUFRCW DC    XL4'000C0000'  BUFFER CONTROL WORD FOR DUMMY
*                                  IKJPARS BUFFER.
ININC010 DC    F'10'          DEFAULT INCREMENT FOR LINE
*                                  NUMBERED DATA SETS.
ININC100 DC    F'100'         DEFAULT INCREMENT FOR NON-LINE
*                                  NUMBERED DATA SETS.
*
INDR0000 DC    XL2'0000'      IKJDAIR DARC = 0 - CATALOG ERROR.
INDR0004 DC    XL2'4'         IKJDAIR CTRC = 4 - CATALOG ERROR.
INDR0008 DC    XL2'8'         IKJDAIR CTRC = 8 - CATALOG ERROR.
INDR0028 DC    XL2'1C'        IKJDAIR CTRC = 28- CATALOG ERROR.
INDR020C DC    XL2'020C'      IKJDAIR DYNAMIC ALLOCATION ERROR.
INDR0210 DC    XL2'0210'      IKJDAIR DYNAMIC ALLOCATION ERROR.
INDR0214 DC    XL2'0214'      IKJDAIR DYNAMIC ALLOCATION ERROR.
INDR0218 DC    XL2'0218'      IKJDAIR DYNAMIC ALLOCATION ERROR.
INDR021C DC    XL2'021C'      IKJDAIR DYNAMIC ALLOCATION ERROR.
INDR0220 DC    XL2'0220'      IKJDAIR DYNAMIC ALLOCATION ERROR.
INDR0404 DC    XL2'0404'      IKJDAIR DYNAMIC ALLOCATION ERROR.
INDR041C DC    XL2'041C'      IKJDAIR DYNAMIC ALLOCATION ERROR.
INDAIR08 DC    H'8'           IKJDAIR RETURN CODE 8 (CATALOG    YA00002
*                                  MANAGEMENT ERROR.)           YA00002
INDAIR16 DC    H'16'          IKJDAIR RETURN CODE 16 (NO ENTRY  YA00002
*                                  AVAILABLE IN TIOT.)          YA00002
INDRRC24 DC    H'24'          IKJDAIR RETURN CODE 24 (DATA SET
*                                  BELONGS TO A CONCATENATED
*                                  GROUP).  THIS RETURN CODE IS
*                                  ACCEPTABLE FOR UNALLOCATION.
INDRRC28 DC    H'28' IKJDAIR RETURN CODE 28                    @ZA77969
*                    DDNAME OR DSNAME NOT ALLOCATED.           @ZA77969
INDAIR48 DC    H'48'          IKJDAIR RETURN CODE 48 (DAIR STAE YA00002
*                                  EXIT ENTERED.)               YA00002
INBLINIT DC    XL4'0001000E'  CONSTANT USED FOR BLDL LIST
*                                  INITIALIZATION.
INTEMPNM DC    CL8'TEMPNAME'  DEFAULT MEMBER NAME WHEN NOT
*                                  SUPPLIED ON COMMAND.
         SPACE 5
INDCB    DCB   DSORG=PO,MACRF=(E),DDNAME=XXXXXXXX DCB FOR BLDL.
INDCBL   EQU   *-INDCB        LENGTH OF DCB.
INOPEN   OPEN  (,),MF=L       PARAMETER LIST FOR OPEN.
INOPENL  EQU   *-INOPEN       LENGTH OF OPEN PARAMETER LIST.
INCLOSE  CLOSE (,),MF=L       PARAMETER LIST FOR CLOSE.
INCLOSEL EQU   *-INCLOSE      LENGTH OF CLOSE PARAMETER LIST.
MASTAELF ESTAE MF=L           STAE MACRO - LIST FORM.         @YA07954
MASTAELN EQU  *-MASTAELF      LENGTH OF STAE PARAMETER LIST   @YA07954
         SPACE 2
INSTKPRM STACK DELETE=ALL,MF=L LIST-FORM STACK MACRO FOR DELETING      X
                                   ALL ELEMENTS BUT TERMINAL FROM      X
                                   THE INPUT STACK.
INSTPBLN EQU   *-INSTKPRM     LENGTH OF STACK PARAMETER BLOCK.
         SPACE 2
         SPACE 5
D0       EQU   0              OFFSET ZERO (DECIMAL).
D1       EQU   1              OFFSET 1 (DECIMAL).
D4       EQU   4              OFFSET 4 (DECIMAL).
D5       EQU   5              OFFSET 5 (DECIMAL).
D6       EQU   6              OFFSET 6 (DECIMAL).
D8       EQU   8              OFFSET 8 (DECIMAL).
D9       EQU   9              OFFSET 9 (DECIMAL).
D16      EQU   16             OFFSET 16 (DECIMAL).
D72      EQU   72             OFFSET 72 (DECIMAL).
D12      EQU   12             OFFSET 12 (DECIMAL).
D15      EQU   15             OFFSET 15 (DECIMAL).
D3       EQU   3              OFFSET 3 (DECIMAL).
D2       EQU   2              OFFSET 2 (DECIMAL).
D7       EQU   7              OFFSET 7 (DECIMAL).
D20      EQU   20             OFFSET 20 (DECIMAL).
D24      EQU   24             OFFSET 24 (DECIMAL).
D30      EQU   30             OFFSET 30 (DECIMAL).
D32      EQU   32             OFFSET 32 (DECIMAL).
X1       EQU   1              OFFSET 1.
INSMGPT  EQU   0              OFFSET IN PDE TO POINTER.
INSMGLN  EQU   4              OFFSET IN PDE TO LENGTH.
INSMGFLG EQU   6              OFFSET IN PDE TO FLAGS.
INLSRCMG EQU   2              LEFT SOURCE MARGIN FOR PL/I.
INRSRCMG EQU   72             RIGHT SOURCE MARGIN FOR PL/I.
INSNOPT  EQU   0              OFFSET IN PDE TO POINTER.
INSNOLN  EQU   4              OFFSET IN PDE TO LENGTH.
INSNOFLG EQU   6              OFFSET IN PDE TO FLAGS.
INSNOOMT EQU   X'80'          START POSITION/LENGTH ENTERED.
INBLKPT  EQU   0              OFFSET IN PDE TO ADDRESS OF BLOCK
*                                  VALUE.
INBLKLN  EQU   4              OFFSET IN PDE TO LENGTH OF BLOCK
*                                  VALUE.
INLNEPT  EQU   0              OFFSET IN PDE TO ADDRESS OF LINE
*                                  VALUE.
INLNELN  EQU   4              OFFSET IN PDE TO LENGTH OF LINE
*                                  VALUE.
DS1FMUDF EQU   B'11000000'    DSCB RECFM = UNDEFINED.
DS1FMVAR EQU   B'01000000'    DSCB RECFM = VARIABLE.
DS1FMSTD EQU   B'00001000'    DSCB RECFM = STANDARD BLOCKS.
DS1FMOVF EQU   B'00100000'    DSCB RECFM = TRACK OVERFLOW.
DS1FMA   EQU   B'00000100'    DSCB RECFM = ASA CONTROL CHARACTER.
DS1FMM   EQU   B'00000010'    DSCB RECFM = MACHINE CONTROL
*                                  CHARACTER.
DS1FMBLK EQU   B'00010000'    DSCB RECFM = BLOCKED.
DS1FMFX  EQU   B'10000000'    DSCB RECFM = FIXED.
DS1ORGPO EQU   B'00000010'    DSCB DSORG = PARTITIONED.
DS1ORGPS EQU   B'01000000'    DSCB DSORG = PHYSICAL SEQUENTIAL.
INSTATN  EQU   2              RELATIVE KEYWORD NUMBER FOR NEW.
CURNTTCB EQU   4              OFFSET TO CURRENT TCB.
INSTATO  EQU   1              KEYWORD NUMBER FOR OLD (STATUS).
INOPRNDO EQU   X'80'          IKJPARSE OPERAND OMITTED.
INFULLQ  EQU   X'40'          DATA SET NAME FULLY QUALIFIED.
INDSNPT  EQU   0              OFFSET IN PDE TO DATA SET NAME PT
INDSNLL  EQU   4              OFFSET IN PDE TO DATA SET NAME LENGTH
INDSNFLG EQU   6              OFFSET IN PDE TO DATA SET NAME FLAGS.
INMEMPT  EQU   8              OFFSET IN PDE TO MEMBER PT
INMEMLL  EQU   12             OFFSET IN PDE TO MEMBER LENGTH.
INMEMFLG EQU   14             OFFSET IN PDE TO MEMBER FLAGS.
INPSWPT  EQU   16             OFFSET IN PDE TO PASSWORD PT.
INPSWLL  EQU   20             OFFSET IN PDE TO PASSWORD LENGTH.
INPSWFLG EQU   22             OFFSET IN PDE TO PASSWORD FLAGS.
INTSFSQO EQU   73             GOFORT(FIXED) SEQUENCE NUMBER
*                                 START COLUMN.
RCODE4   EQU   4              RETURN CODE 4 - USED TO TEST RETURN
*                                  CODES.
RCODE12  EQU   12             RETURN CODE 12 - USED IN VALIDITY
*                                  CHECK EXIT
SUBPOOL  EQU   1              SUBPOOL NUMBER FOR MAIN STORAGE
*                                  REQUESTS
INF255   EQU   255            CONSTANT 255 USED FOR LENGTH
*                                  CHECKS IN CLEARING CORE.
CHRBLANK EQU   C' '           CHARACTER BLANK.
INDCZERO EQU   C'0'           DECIMAL ZERO (UNPACKED AND UNSIGNED).
INSNGLQT EQU   C''''          SINGLE QUOTE.
INPERIOD EQU   C'.'           PERIOD.
INLFTPRN EQU   C'('           LEFT PARENTHESIS.
INRTPRN  EQU   C')'           RIGHT PARENTHESIS.
INDR1700 EQU   X'17'          IKJDAIR DYNAMIC ALLOCATION ERROR.
INOPENED EQU   X'10'          MASK USED TO DETERMINE WHETHER THE
*                                  DCB OPENED SUCCESSFULLY.
         SPACE 5
INERROR1 EQU   0              RELATIVE ERROR 1 - TERMINATE EDIT
*                                  WITH NOT ENOUGH MAIN STORAGE
*                                  MESSAGE.
INERROR2 EQU   4              RELATIVE ERROR 2 - TERMINATE EDIT
*                                  WITH REQUIRED PROGRAM NOT
*                                  AVAILABLE MESSAGE.
INERROR3 EQU   8              RELATIVE ERROR 3 - TERMINATE EDIT
*                                  WITH LOGIC ERROR MESSAGE.
INERROR4 EQU   12             RELATIVE ERROR 4 - TERMINATE EDIT
*                                  WITH DATA SET ORGANIZATION NOT
*                                  ACCEPTABLE MESSAGE.
INERROR5 EQU   16             RELATIVE ERROR 5 - TERMINATE EDIT
*                                  WITH RECORD FORMAT = UNDEFINED
*                                  NOT ACCEPTABLE MESSAGE.
INERROR6 EQU   20             RELATIVE ERROR 6 - TERMINATE EDIT
*                                  WITH DATA SET NOT USABLE
*                                  MESSAGE.
INERROR7 EQU   24             RELATIVE ERROR 7 - DATA SET NOT
*                                  FOUND, OLD SPECIFIED.
INERROR8 EQU   28             RELATIVE ERROR 8 - LINE VALUE
*                                  SPECIFIED ON COMMAND INVALID,
*                                   OR LRECL FIELD IN THE FORMAT
*                                   1 DSCB IS SET TO ZERO.
INERROR9 EQU   32             RELATIVE ERROR 9 - BLOCK VALUE
*                                  SPECIFIED ON COMMAND INVALID.
INERRORA EQU   36             RELATIVE ERROR 10 - SYNTAX CHECKING
*                                  SPECIFIED FOR A NON-SCANABLE
*                                  DATA SET TYPE OR SYNTAX
*                                  CHECKER NOT IN SYSTEM.
INERRORB EQU   40             RELATIVE ERROR 11 - NONUM SPECIFIED
*                                  DATA SET MUST BE NUMBERED.
INERRORC EQU   44             RELATIVE ERROR 12 - INVALID PL/I
*                                  SOURCE MARGINS.
INERRORD EQU   48             RELATIVE ERROR 13 - NUM OPERAND
*                                  INCORRECT FOR ASM DATA SET
*                                  TYPE.
INERRORE EQU   52             RELATIVE ERROR 14 - ASIS SPECIFIED,
*                                  CAPS REQUIRED.
INERRORF EQU   56             RELATIVE ERROR 15 - UNALLOCATION
*                                  ERROR OR DDNAME NOT FOUND.
INERRORG EQU   60             RELATIVE ERROR 16 - LINE OPERAND
*                                  SPECIFIED FOR OLD DATA SET.
INERRORH EQU   64             RELATIVE ERROR 17 - BLOCK OPERAND
*                                  SPECIFIED FOR OLD DATA SET.
INERRORI EQU   68             RELATIVE ERROR 18 - DATA SET
*                                  FOUND, NEW SPECIFIED.
INERRORJ EQU   72             RELATIVE ERROR 19 - OLD DATA SET
*                                  HAS LRECL OTHER THAN 80.
INERRORK EQU   76             RELATIVE ERROR 20 - IKJDAIR RETURN
*                                  CODE NOT ZERO.
INERRORL EQU   80             RELATIVE ERROR 21 - DATA SET NOT
*                                  USEABLE.
INERRORM EQU   84             RELATIVE ERROR 22 - TERMINATE EDIT
*                                  WITH TOO MANY DATA SETS
*                                  ALLOCATED MESSAGE.
INERRORN EQU   88             RELATIVE ERROR 23 - TERMINATE EDIT
*                                  WITH REQUIRED VOLUME NOT
*                                  MOUNTED MESSAGE.
INERRORO EQU   92             RELATIVE ERROR 24 - TERMINATE EDIT
*                                  WITH DATA SET NOT ON VOLUME
*                                  MESSAGE.
INERRORP EQU   96             RELATIVE ERROR 25 - TERMINATE EDIT
*                                  WITH ALLOCATION FAILED MESSAGE
INERRORQ EQU   100            RELATIVE ERROR 26 - TERMINATE EDIT
*                                  WITH DEVICE NOT DIRECT ACCESS
*                                  MESSAGE.
INERRORR EQU   104            RELATIVE ERROR 27 - TERMINATE EDIT
*                                  WITH INVALID DSNAME MESSAGE.
INERRORS EQU   108            RELATIVE ERROR 28 - TERMINATE EDIT
*                                  WITH DATA SET WILL CREATE
*                                  INVALID CATALOG STRUCTURE
*                                  MESSAGE.
INERRORT EQU   112            RELATIVE ERROR 29 - TERMINATE EDIT
*                                  WITH DSNAME NOT QUALIFIED
*                                  MESSAGE.
INERRORU EQU   116            RELATIVE ERROR 30 - TERMINATE EDIT
*                                  WITH DSNAME NOT RESOLVED
*                                  MESSAGE.
INERRORV EQU   120            RELATIVE ERROR 31 - GOFORT(FREE)
*                                  SPECIFIED BUT RECORD FORMAT IS
*                                  FIXED.
INERRORW EQU   124            RELATIVE ERROR 32 - TERMINATE EDIT
*                                  WITH INVALID UNIT OR UNIT NOT
*                                  AVAILABLE MESSAGE.
INERRORX EQU   128            RELATIVE ERROR 33 - TERMINATE EDIT A45713
*                                  WITH MISSING DATA SET TYPE.   A45713
         SPACE 5
INDR18   DS    0F             PARAMETER BLOCK FOR ENTRY CODE 18.
         DC    XL2'18'        IKJDAIR ENTRY CODE X'18'
         DC    3XL2'0'        FLAGS, DARC, CTRC.
         DC    A(0)           ADDRESS OF DSNAME.
         DC    2CL8' '        DDNAME, MEMBER NAME.
         DC    CL2' '         SYSOUT CLASS SPECIFICATION.      @YA01909
         DC    X'00'          NO OVERIDING DISPOSITION.        @ZA85402
         DC    X'0'           CONTROL FLAGS.
         DC    CL8' '         JOBNAME.
INDR18L  EQU   *-INDR18       LENGTH OF PARAMETER BLOCK.
         SPACE 5
INDAIR8O DS    0F
         DC    XL2'8'         IKJDAIR ENTRY CODE 8.
         DC    10X'0'         INITIALIZE FLAGS, DARC, CTRC AND
*                                  DSNAME PT FIELDS TO ZEROES.
         DC    3CL8' '        INITIALIZE DDNAME, UNITNAME AND
*                                  SERIAL NO. TO BLANKS.
         DC    4F'0'          INITIALIZE BLKSIZE, PRIMARY,
*                                  SECONDARY, AND DIRECTORY
*                                  QUANTITY TO ZEROES.
         DC    2CL8' '        INITIALIZE MEMBERNAME AND PASSWORD
*                                  FIELDS TO BLANKS.
         DC    X'0'           INITIALIZE STATUS TO OLD.          A50467
         DC    AL2(0)         ALLOW NORMAL AND COND DISPOSITON
*                                  TO DEFAULT.                 @ZA85402
         DC    5X'0'          INITIALIZE FLAGS AND DSORG FIELDS  A42959
*                                  SET BY IKJDAIR TO ZERO.       A42959
INDR8OLL EQU   *-INDAIR8O     LENGTH OF PARAMETER LIST FOR ENTRY
*                                  CODE 8.
         SPACE 5
ININS001 EQU   *
ININS002 IKJEBEMG ININS003,M3131IN1,'BLDL' INSERTION IN COMMAND
ININS003 IKJEBEMG 0,M3131IN2,'8'   SYSTEM ERROR MESSAGE.
ININS004 IKJEBEMG ININS005,M3131IN1,'IKJEBEPS' SERVICE ROUTINE         X
                                   NAME FOR INSERTION.
ININS005 IKJEBEMG 0,M3131IN2,'4' RETURN CODE FOR INSERTION.
ININS006 IKJEBEMG ININS007,M3131IN1,'LOCATE' SERV RTN NAME     @ZA05823
ININS007 IKJEBEMG 0,M3131IN2,'04'   RETURN CODE FOR INSERTION  @ZA05823
ININS6LN EQU   ININS007-ININS006    OFFSET TO SECOND INSERT    @ZA05823
ININSLEN EQU   *-ININS006                                      @ZA05823
         SPACE 5
IKJEBIN0 EQU   *
.TAG1    ANOP                                                    A45714
.* CHECK IF LOOP FINISHED - INDEX 'J' GT NO. OF DSTYPES.         A45714
         AIF   (&J GT &I).OUT1                                   A45714
         DC    CL8'&DST(&J)' - EDIT DATA SET TYPE.               A45714
.* INCREMENT INDEX 'J' BY ONE.                                   A45714
&J       SETA  &J+1                                              A45714
.* REPEAT LOOP.                                                  A45714
         AGO   .TAG1                                             A45714
.OUT1    ANOP                                                    A45714
INDSTELN EQU   8              LENGTH OF TABLE ENTRY.
INNODSTY EQU   (*-IKJEBIN0)/INDSTELN NUMBER OF ENTRIES IN DATA
*                                  SET TYPE TABLE.
         SPACE 5
         EJECT
INPTPCL  DC    A(IKJEBIN1)     ADDRESS OF IKJPARSE PCL FOR THE
*                                  EDIT COMMAND.
IKJEBIN1 IKJPARM DSECT=INECMNDD BEGIN EDIT COMMAND PCL.
INDSN    IKJPOSIT DSNAME,PROMPT='DATA SET NAME' DATA SET NAME.
*                             DATA SET STATUS.
INSTAT   IKJKEYWD
         IKJNAME 'OLD'        STATUS = OLD.
         IKJNAME 'NEW'        STATUS = NEW.
*                             DEFINE DATA SET TYPE.
INDSTYPE IKJKEYWD
.* INITIALIZE INDEX 'J' TO ONE.                                  A45714
&J       SETA  1                                                 A45714
.TAG2    ANOP                                                    A45714
.* CHECK IF LOOP FINISHED - INDEX 'J' GT NO. OF DSTYPES.         A45714
         AIF   (&J GT &I).OUT2                                   A45714
.* CHECK IF DSTYPE IS 'PLI' - USE SPECIAL SUBFIELD.              A45714
         AIF   ('&DST(&J)' EQ 'PLI').TAG3                        A45714
.* CHECK IF DSTYPE IS 'IPLI' - USE SPECIAL SUBFIELD.             A45714
         AIF   ('&DST(&J)' EQ 'IPLI').TAG4                       A45714
.* CHECK IF DSTYPE IS 'GOFORT' - USE SPECIAL SUBFIELD.           A45714
         AIF   ('&DST(&J)' EQ 'GOFORT').TAG5                     A45714
.* CHECK IF DSTYPE IS 'PLIF' - USE SPECIAL SUBFIELD.             A45714
         AIF   ('&DST(&J)' EQ 'PLIF').TAG6                       A45714
.* CHECK IF USER DSTYPE - FIRST 16 ARE IBM SUPPLIED TYPES.       Y02676
         AIF   (&J GT 16).TAG7                                   Y02676
.TAG2A   ANOP                                                    A45714
         IKJNAME '&DST(&J)' - EDIT DATA SET TYPE.                A45714
         AGO   .LOOP1                                            A45714
.TAG3    ANOP                                                    A45714
         IKJNAME 'PLI',SUBFLD=INPL1 - EDIT DATA SET TYPE.        A45714
         AGO   .LOOP1                                            A45714
.TAG4    ANOP                                                    A45714
         IKJNAME 'IPLI',SUBFLD=INIPLICS - EDIT DATA SET TYPE.    A45714
         AGO   .LOOP1                                            A45714
.TAG5    ANOP                                                    A45714
         IKJNAME 'GOFORT',SUBFLD=INTSFTN - EDIT DATA SET TYPE.   A45714
         AGO   .LOOP1                                            A45714
.TAG6    ANOP                                                    A45714
         IKJNAME 'PLIF',SUBFLD=INPL1 - EDIT DATA SET TYPE.       A45714
         AGO   .LOOP1                                            A45714
.TAG7    ANOP                                                    A45714
.* SET INDEX 'K' FOR USER EXIT NAME.                             A45714
&K       SETA  &J-16                                             Y02676
.* CHECK IF USER EXIT SUPPLIED.                                  A45714
         AIF  ('&SUBFD(&K)' EQ '').TAG2A                         A45714
         IKJNAME '&DST(&J)',SUBFLD=INUXERTY - EDIT DATA SET TYP. A45714
.* SET SWITCH 'SW' TO INDICATE EXIT SUPPLIED.                    A45714
&SW      SETB  1                                                 A45714
.LOOP1   ANOP                                                    A45714
.* INCREMENT INDEX 'J' BY ONE                                    A45714
&J       SETA  &J+1                                              A45714
.* REPEAT LOOP.                                                  A45714
         AGO   .TAG2                                             A45714
.OUT2    ANOP                                                    A45714
INSCN    IKJKEYWD DEFAULT='NOSCAN' SCAN OPERAND.
         IKJNAME 'NOSCAN'     SYNTAX CHECKING NOT DESIRED.
         IKJNAME 'SCAN'       SYNTAX CHECKING DESIRED.
*                             DATA SET FORMAT.
INFMT    IKJKEYWD
         IKJNAME 'CAPS'       DATA MAINTAINED IN UPPER CASE.
         IKJNAME 'ASIS'       DATA MAINTAINED AS ENTERED.
INNUM    IKJKEYWD DEFAULT='NUM' LINE NUMBER OPERANDS.
         IKJNAME 'NUM',SUBFLD=INNUMS NUMBER DATA SET.
         IKJNAME 'NONUM'      DO NOT NUMBER DATA SET.
*                             BLOCK OPERAND.
INBLK    IKJKEYWD
*                            USER SPECIFIES BLOCK SIZE
         IKJNAME 'BLOCK',SUBFLD=INBLKSZ,ALIAS='BLKSIZE'        @Y30NQKK
INLNE    IKJKEYWD
*                            USER SPECIFIES LRECL
         IKJNAME 'LINE',SUBFLD=INLRECL,ALIAS='LRECL'           @Y30NQKK
*                             SUBFIELD DESCRIPTION FOR BLOCK.
INBLKSZ  IKJSUBF
INBLKSZE IKJIDENT 'NUMBER',FIRST=NUMERIC,OTHER=NUMERIC,                X
               PROMPT='BLOCKSIZE',VALIDCK=IKJEBIN4 BLKSIZE TO BE       X
                                   USED.
*                             SUBFIELD DESCRIPTION FOR LINE.
INLRECL  IKJSUBF
INLNESZ  IKJIDENT 'NUMBER',FIRST=NUMERIC,OTHER=NUMERIC,                X
               PROMPT='LINESIZE',VALIDCK=IKJEBIN4 LRECL TO BE          X
                                   USED.
*                             SUBFIELD DESCRIPTION FOR NUM.
INNUMS   IKJSUBF
INNOSTP  IKJIDENT 'NUMBER',FIRST=NUMERIC,OTHER=NUMERIC START POSITION
INNOLEN  IKJIDENT 'NUMBER',FIRST=NUMERIC,OTHER=NUMERIC LENGTH.
*                             SUBFIELD DESCRIPTION FOR PL1.
INPL1    IKJSUBF
INPL1CL1 IKJIDENT 'NUMBER',FIRST=NUMERIC,OTHER=NUMERIC,                X
               DEFAULT='2',VALIDCK=IKJEBIN4 LEFT SOURCE MARGIN.
INPL1CL2 IKJIDENT 'NUMBER',FIRST=NUMERIC,OTHER=NUMERIC,                X
               DEFAULT='72',VALIDCK=IKJEBIN4 RIGHT SOURCE MARGIN.
INPL1TYP IKJKEYWD DEFAULT='CHAR60' CHARACTER SET USED.
         IKJNAME 'CHAR60'     60 CHARACTER SET.
         IKJNAME 'CHAR48'     48 CHARACTER SET.
INIPLICS IKJSUBF
INIPLICH IKJKEYWD DEFAULT='CHAR60' CHARACTER SET TO BE USED.
         IKJNAME 'CHAR60'     60-CHARACTER SET.
         IKJNAME 'CHAR48'     48-CHARACTER SET.
*                             SUBFIELD DESCRIPTION FOR GOFORT.
INTSFTN  IKJSUBF
INTSFTFM IKJKEYWD DEFAULT='FREE' DEFINE STATEMENT FORMAT.
         IKJNAME 'FREE'       FREE FORMAT STATEMENTS.           1
         IKJNAME 'FIXED'      FIXED FORMAT STATEMENTS.          2
.* CHECK IF USER EXIT SUPPLIED.                                  A45714
         AIF   (&SW EQ 0).TAG8                                   A45714
*                             SUBFIELD DESCRIPT. FOR USER TYPES. A45714
INUXERTY IKJSUBF
INUSERTY IKJIDENT 'DATA SET TYPE PARAMETERS',FIRST=ANY,OTHER=ANY A45714
.TAG8    ANOP                                                    A45714
         IKJENDP
         EJECT
         TITLE 'IKJEBIN2 - PCL FOR NEW/OLD PROMPT'
INDISPDL DC    A(IKJEBIN2)    ADDRESS OF IKJPARS PCL.
         SPACE 2
IKJEBIN2 IKJPARM DSECT=INDISPD PCL FOR DISPOSITION PROMPT.
INDISPX  IKJIDENT 'NEW OR OLD',MAXLNTH=3,PROMPT='NEW OR OLD'
         IKJENDP
         EJECT
         TITLE 'IKJEBIN3 - MESSAGE PROCESSING'
***********************************************************************
*                                                                     *
* STATUS -- VERSION NO. 01, OS/360 RELEASE NO. 20                     *
*                                                                     *
* FUNCTION -- THIS ROUTINE IS CALLED BY ALL CSECTS OF EDIT            *
*    INITIALIZATION THAT ISSUE ERROR MESSAGES.  IT SUPPLIES A WORK    *
*    AREA FOR IKJEBEIA (INITIALIZATION MESSAGE FORMATTING MODULE)     *
*    AND INVOKES IT VIA LINK MACRO.  UPON RETURN, THE PUTLINE CODE    *
*    RETURNED IS TESTED, AND THE COMMAND SYSTEM ERROR DIAGNOSTIC      *
*    MESSAGE ISSUED IF AN ERROR CONDITION HAS OCCURRED.               *
*                                                                     *
* ENTRY POINTS --                                                     *
*         IKJEBIN3 - VIA CALL MACRO FROM ANY EDIT INITIALIZATION      *
*                    CSECT THAT ISSUES INFORMATIONAL MESSAGES.        *
*                                                                     *
* INPUT --                                                            *
*    REGISTER ONE (1) CONTAINS A POINTER TO AN INCOMPLETE PARAMETER   *
*    LIST FOR IKJEBEIA.  IKJEBIN3 COMPLETES THE PARAMETER LIST BY     *
*    INITIALIZING THE SIXTH WORD TO THE ADDRESS OF A WORK AREA FOR THE*
*    USE OF IKJEBEIA.                                                 *
*                                                                     *
* OUTPUT --                                                           *
*    REGISTER FIFTEEN (15) CONTAINS THE RETURN CODE FROM  THE FINAL   *
*    INVOCATION OF THE PUTLINE SERVICE ROUTINE.                       *
*                                                                     *
* EXTERNAL REFERENCES --                                              *
*                                                                     *
*         IKJEBEIA - INVOKED VIA LINK FOR TERMINAL OUTPUT OF EDIT     *
*                    MESSAGES.                                        *
*                                                                     *
*         IKJEBEMS - INVOKED VIA IKJEBESH MACRO FOR TERMINAL OUTPUT   *
*                    OF THE COMMAND SYSTEM ERROR DIAGNOSTIC FOR       *
*                    ERROR RETURN CODES RETURNED BY IKJEBEIA.         *
*                                                                     *
*    MACROS USED --                                                   *
*                                                                     *
*         IKJEBEMG - FOR BUILDING A MESSAGE INSERTION.                *
*                                                                     *
*         IKJEBEML - FOR BUILDING AN IKJEBEMS PARAMETER LIST.         *
*                                                                     *
*         IKJEBEMI - GENERATES SYMBOLIC EQUATES FOR ALL RELATIVE      *
*                    MESSAGE NUMBERS AND INSERTION OFFSETS AFFECTING  *
*                    INITIALIZATION MESSAGES.                         *
*                                                                     *
*         IKJEBERT - RETURN LINKAGE WITHIN THE EDIT COMMAND           *
*                    PROCESSOR.                                       *
*                                                                     *
*         IKJEBESH - USED FOR INVOCATION OF EDIT SERVICE ROUTINES.    *
*                                                                     *
*         IKJEBESV - ENTRY LINKAGE WITHIN THE EDIT COMMAND PROCESSOR. *
*                                                                     *
*         LINK     - ISSUED TO INVOKE IKJEBEIA.                       *
*                                                                     *
* EXITS, NORMAL --                                                    *
*    WHEN IKJEBEIA RETURNS A PUTLINE RETURN CODE OF ZERO, CONTROL     *
*    IS RETURNED BY BRANCHING ON REGISTER FOURTEEN (14).              *
*                                                                     *
* EXITS, ERROR --                                                     *
*    WHEN AN ERROR CONDITION IS INDICATED BY IKJEBEIA, THE COMMAND    *
*    SYSTEM ERROR MESSAGE IS ISSUED THROUGH IKJEBEMS.  THE PUTLINE    *
*    RETURN CODE RETURNED IN REGISTER FIFTEEN (15) BY IKJEBEMS IS     *
*    RETURNED TO THE CALLING ROUTINE WHEN CONTROL IS RETURNED BY      *
*    BRANCHING ON REGISTER FOURTEEN (14).                             *
*                                                                     *
* TABLES/WORK AREAS --                                                *
*                                                                     *
*    THE EDIT COMMUNICATION AREA CONTAINS CONTROL INFORMATION,        *
*    BUFFERS, AND A WORK AREA FOR THIS ROUTINE.                       *
*                                                                     *
* ATTRIBUTES --                                                       *
*    REFRESHABLE, ENABLED, NON-PRIVILEGED                             *
*                                                                     *
* CHARACTER CODE DEPENDENCY --                                        *
*    THIS ROUTINE MAKES THE ASSUMPTION THAT ALL BITS OF THE HIGH      *
*    ORDER ZONE OF A CHARACTER DIGIT ARE COMMON TO THOSE OF A SIGNED  *
*    AND UNPACKED DECIMAL DIGIT.                                      *
*                                                                     *
* NOTES -- NONE.                                                      *
*                                                                     *
***********************************************************************
         EJECT
IKJEBIN3 CSECT
         IKJEBESV (14,12),,*,COMMREG=D0(PARMREG1) ENTRY LINKAGE.
         USING IKJEBECA,COMMREG ADDRESSABILITY TO COMMUNICATION
*                                  AREA.
         LA    PARMREG0,CATEMPBF ADDRESS OF WORK AREA FOR
*                                  IKJEBEIA.
         ST    PARMREG0,D20(,PARMREG1) ADD WORK AREA ADDRESS TO
*                                  PARAMETER LIST.
         LINK  EP=IKJEBEIA,MF=(E,(1)) INVOKE MESSAGE ROUTINE
*                                  FOR EDIT INITIALIZATION.
         LTR   RETCDREG,RETCDREG CHECK IF TERMINAL OUTPUT
*                                  SUCCESSFUL.
         BZ    IN300010       IF SO, RETURN TO CALLING ROUTINE.
         CH    RETCDREG,IN3ATTN CHECK FOR ATTENTION ISSUED.
         BE    IN300010       IF SO, RETURN TO CALLING ROUTINE.
         CVD   RETCDREG,IN3INS2 CONVERT RETURN CODE TO DECIMAL.
         UNPK  IN3INS2-D1(D3),IN3INS2+D6(D2) UNPACK SIGNIFICANT
*                                  DIGITS.
         OI    IN3INS2+D1,INDCZERO INSURE CHARACTER DIGIT IN
*                                  SECOND POSITION.
         LA    LENREG,D6      LENGTH OF SECOND INSERTION.
         STH   LENREG,IN3LEN2 SET LENGTH IN INSERTION LIST.
         LA    LENREG,M3131IN2 OFFSET FOR SECOND INSERTION.
         STH   LENREG,IN3OFF2 STORE OFFSET IN LIST.
         SR    LENREG,LENREG  ZERO REGISTER.
         ST    LENREG,IN3PT2  INDICATE RETURN CODE AS LAST
*                                  INSERTION.
         MVC   IN3PT1(D15),IN3SRINS MOVE SERVICE ROUTINE
*                                  INSERTION TO WORK AREA.
         LA    LENREG,IN3PT2  ADDRESS SECOND INSERTION.
         ST    LENREG,IN3PT1  CHAIN INSERTIONS.
         MVC   IN3MSLST(D12),IN3MSPRM MOVE PARAMETER LIST
*                                  TO WORK AREA.
         LA    LENREG,IN3PT1  ADDRESS FIRST INSERTION.
         ST    LENREG,IN3MSLST+D8 COMPLETE INSERTION CHAIN FOR
*                                  SECOND LEVEL MESSAGE.
         IKJEBESH (COMMREG),IKJEBEMS,PARAM=((COMMREG),IN3MSLST),       X
               MF=(E,IN3WKA)  PUT PUTLINE ERROR MESSAGE.
IN300010 EQU   *
         IKJEBERT (14,12),,RC=(15) RETURN TO CALLER WITH PUTLINE       X
                                   RETURN CODE.
         EJECT
***********************************************************************
*
*    CONSTANTS FOR IKJEBIN3
*
***********************************************************************
         SPACE 2
IN3MSPRM IKJEBEML M313,M3131,D0,D0,MF=L PARAMETER LIST FOR             X
                                   COMMAND SYSTEM ERROR MESSAGE.
         SPACE 2
IN3SRINS IKJEBEMG 0,M3131IN1,'PUTLINE' SERVICE ROUTINE NAME            X
                                   INSERTION.
         SPACE 2
IN3ATTN  DC    H'4'           PUTLINE RETURN CODE 4 IS ATTENTION
*                                  ISSUED.
         EJECT
***********************************************************************
*
*    FOLLOWING IS INFORMATION ON ALL MESSAGES USED BY
*    EDIT INITIALIZATION.
*
***********************************************************************
         SPACE 2
         IKJEBEMI (301,302,303,304,305,306,307,308,309,310,311,312,    X
               313,314,315,316,317,318,330,331,332,333,334,335,336,    X
               342,343,360,361,362,363,364,365,424)
         EJECT
         TITLE 'IKJEBIN4 - VALIDITY CHECK EXIT FOR COMMAND OPERANDS'
IKJEBIN4 CSECT
         IKJEBESV (14,12),,*,COMMREG=D4(,PARMREG1)
         USING IKJEBECA,COMMREG COMMUNICATION AREA ADDRESSABILITY
         SR    RETCDREG,RETCDREG SET ZERO RETURN CODE.
         L     DATAREG,D0(,PARMREG1) ADDRESS OF PDE FOR NUMERIC
*                                  SUBFIELD.
         L     AREAREG,IBNOADDR(,DATAREG) ADDRESS OF NUMBER
*                                  ENTERED.
         LH    LENREG,IBNOLEN(,DATAREG) LENGTH OF NUMBER ENTERED.
         BCTR  LENREG,D0      REDUCE LENGTH BY ONE AND TEST FOR
         EX    LENREG,IBCLC001     ZERO.
         BH    IB001010       IF GREATER THAN ZERO, BRANCH TO
*                                  RETURN.
         LA    RETCDREG,D4(,D0) SET ERROR RETURN CODE WHEN LESS
*                                  THAN ZERO.
IB001010 EQU   *
         IKJEBERT (14,12),,RC=(15) RETURN TO IKJPARS.
         SPACE 5
IBCLC001 CLC   D0(*-*,AREAREG),IBZEROES CHECK FOR ZERO.
IBZEROES DC    CL8'00000000'  CONSTANT USED TO CHECK FOR ZEROES.
IBNOADDR EQU   0              OFFSET IN PDE TO OPERAND ADDRES..
IBNOLEN  EQU   4              OFFSET IN PDE TO OPERAND LENGTH.
         EJECT
         TITLE 'IKJEBIN5 - PROMPT FOR DATA SET TYPE PROCESSING'
***********************************************************************
*                                                                     *
* STATUS -- VERSION NO. 01, OS/360 RELEASE NO. 20                     *
*                                                                     *
* FUNCTION -- THIS ROUTINE IS CALLED BY THE IKJEBEIN AND IKJEBIN7     *
*    CSECTS OF THE EDIT INITIALIZATION PROGRAM TO PROMPT THE TERMINAL *
*    USER TO ENTER DATA SET TYPE.  THIS IS ACCOMPLISHED BY INVOKING   *
*    IKJPARS, SPECIFYING A REQUIRED POSITIONAL PARAMETER AND          *
*    SUPPLYING A BLANK BUFFER TO 'PARSE'.  THE VALIDITY CHECK EXIT    *
*    INDICATED IN THE PARSE PCL GAINS CONTROL TO CHECK THE TYPE       *
*    ENTERED IN RESPONSE TO A PROMPT MADE BY IKJPARS.  IT REQUESTS    *
*    IKJPARS TO RE-PROMPT UNTIL BOTH OF THE FOLLOWING CONDITIONS ARE  *
*    MET --                                                           *
*                                                                     *
*    (1) THE TYPE ENTERED IS FOUND IN A LOCAL TABLE OF EDITABLE DATA  *
*    SET TYPES.                                                       *
*                                                                     *
*    (2) THE TYPE ENTERED IS LOCATED BY THE PROCESSOR SEARCH ROUTINE  *
*    (IKJEBEPS) IN THE PROCESSOR DESCRIPTOR CSECT (IKJEBEPD).         *
*                                                                     *
*    WHEN A VALID TYPE HAS BEEN ENTERED, THE TABLE ENTRY RETURNED     *
*    BY IKJEBEPS IS MOVED TO THE COMMUNICATION AREA PROCESSOR TABLE   *
*    FIELD (CAPD) AND CONTROL IS RETURNED TO THE CALLING ROUTINE.     *
*                                                                     *
* ENTRY POINTS --                                                     *
*         IKJEBIN5 - VIA CALL MACRO FROM IKJEBEIN OR IKJEBIN7 WHEN    *
*                    IT IS NECESSARY TO PROMPT THE TERMINAL USER      *
*                    FOR DATA SET TYPE.                               *
*                                                                     *
* INPUT --                                                            *
*    REGISTER ONE (1) POINTS TO A WORD CONTAINING THE ADDRESS         *
*    OF THE EDIT COMMUNICATION AREA.                                  *
*                                                                     *
* OUTPUT --                                                           *
*    REGISTER FIFTEEN (15) CONTAINS --                                *
*    00 - SUCCESSFUL OPERATION.                                       *
*    04 - IKJPARS ERROR (TERMINATE EDIT).                             *
*                                                                     *
* EXTERNAL REFERENCES --                                              *
*                                                                     *
*         IKJEBEPS - THE EDIT PROCESSOR SEARCH ROUTINE, LOADED        *
*                    AND CALLED TO VALIDATE A DATA SET TYPE AND       *
*                    RETURN PROCESSOR DEPENDENT INFORMATION FOR       *
*                    VALID DATA SET TYPES                             *
*         IKJEBIN3 - CALLED FOR PROCESSING EDIT MESSAGES              *
*         IKJPARS  - INVOKED VIA LINK MACRO TO SYNTAX CHECK THE  A45713
*                    RESPONSE FROM IKJPTGT                       A45713
*         IKJPTGT  - INVOKED VIA PUTGET MACRO TO PROMPT THE USER A45713
*                    FOR DATA SET TYPE                           A45713
*                                                                     *
*    MACROS USED --                                                   *
*                                                                     *
*         CALL     - LINKAGE TO IKJEBEPS AND IKJEBIN3.                *
*         DELETE   - USED TO DELETE IKJEBEPS FROM MAIN STORAGE.       *
*         IKJEBERT - RETURN LINKAGE WITHIN THE EDIT COMMAND           *
*                    PROCESSOR.                                       *
*         IKJEBESV - ENTRY LINKAGE WITHIN THE EDIT COMMAND PROCESSOR. *
*         IKJENDP  - DEFINES THE END OF THE IKJPARS PCL.              *
*         IKJIDENT - BUILDS A PCE FOR THE DATA SET TYPE POSITIONAL    *
*                    PARAMETER.                                       *
*         IKJPARMD - DEFINES A PCL FOR IKJPARS.                       *
*         LINK     - LINKAGE TO IKJPARS.                              *
*         LOAD     - USED TO LOAD THE PROCESSOR SEARCH ROUTINE        *
*                    (IKJEBEPS) INTO MAIN STORAGE.                    *
*         PUTGET   - USED TO LINK TO IKJPTGT.                   A45713
*                                                                     *
* EXITS, NORMAL --                                                    *
*    RETURN TO THE CALLING ROUTINE BY BRANCHING ON REGISTER FOURTEEN  *
*    (14) WITH REGISTER FIFTEEN (15) SET TO ZERO.                     *
*                                                                     *
* EXITS, ERROR --                                                     *
*    RETURN TO THE CALLING ROUTINE BY BRANCHING ON REGISTER           *
*    FOURTEEN (14) WITH REGISTER FIFTEEN (15) SET TO FOUR (4).        *
*                                                                     *
* TABLES/WORK AREAS --                                                *
*                                                                     *
*    THE EDIT COMMUNICATION AREA CONTAINS CONTROL INFORMATION AND     *
*    A WORK AREA FOR THIS ROUTINE --                                  *
*                                                                     *
*    CADSTYPE - DATA SET TYPE FIELD.                                  *
*    CAPD - THIS PROCESSOR TABLE FIELD IS UPDATED BY MOVING THE       *
*           TABLE ENTRY RETURNED BY IKJEBEPS.                         *
*                                                                     *
* ATTRIBUTES --                                                       *
*    REFRESHABLE, ENABLED, NON-PRIVILEGED                             *
*                                                                     *
* CHARACTER CODE DEPENDENCY -- NONE.                                  *
*                                                                     *
* NOTES --                                                            *
*                                                                     *
***********************************************************************
         EJECT
IKJEBIN5 CSECT
         IKJEBESV (14,12),,*,COMMREG=D0(,PARMREG1) SAVE REGISTERS
         USING IKJEBECA,COMMREG ESTABLISH ADDRESSABILITY TO THE
*                                  COMMUNICATION AREA.
IC001010 EQU   *                                                 A45713
**************************************************************** A45713
*                                                                A45713
*   BUILD PARMLIST AND LINK TO IKJPTGT TO PROMPT USER FOR DATA   A45713
*   SET TYPE.                                                    A45713
*                                                                A45713
**************************************************************** A45713
         LA    AREAREG,INPGLIST ADDRESS OF PUTGET PARMBLOCK.     A45713
         USING PGPB,AREAREG   ESTAB. ADDRESSABILITY TO PARMBLOCK.A45713
         XC    PGPB(INPGPBLN),PGPB ZERO OUT PARMBLOCK.           A45713
         ST    AREAREG,CATMPLST+IOPLIOPB-IOPL                    A45713
         LA    PARMREG1,CATMPLST ADDRESS OF PUTGET PARMLIST.     A45713
         PUTGET ,OUTPUT=(INPMTOLD,SINGLE,PROMPT),                A45713*
               TERMGET=(EDIT,WAIT),                              A45713*
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=(E,(1))     A45713
         B     IC001015(RETCDREG) PROCESS RETURN CODE.           A45713
         SPACE
IC001015 EQU   *                                                 A45713
         B     IC001050       RC = 00, SUCCESSFUL RETURN.        A45713
         B     IC001020       RC = 04, SOURCE OF INPUT IN-CORE.  A45713
         B     IC001065       RC = 08, ATTENTION ISSUED.         A45713
         B     IC001040       RC = 12, TRYING TO PROMPT IN PROC. A45713
         B     IC001020       RC = 16, NOWAIT SPECIFIED FOR TPUT.A45713
         B     IC001020       RC = 20, NOWAIT SPECIFIED FOR TGET.A45713
         B     IC001020       RC = 24, INVALID PARAMETERS.       A45713
         B     IC001030       RC = 28, NOT ENOUGH CORE AVAILABLE.A45713
         SPACE 2
IC001020 EQU   *                                                 A45713
**************************************************************** A45713
*                                                                A45713
*   ISSUE COMMAND SYSTEM ERROR MESSAGE AND TERMINATE.            A45713
*                                                                A45713
**************************************************************** A45713
         LA    ERR1REG,INERROR2 RELATIVE ERROR TO BE PROCESSED.  A45713
         LR    DATA2REG,RETCDREG SAVE RETURN CODE FOR MESSAGE.   A45713
         O     DATA2REG,ICPTGT INDICATE ROUTINE NAME IS IKJPTGT. A45713
         B     IC001045       BRANCH TO CALL IKJEBIN3 TO PUT     A45713
*                                  ERROR MESSAGE AND RETURN.     A45713
         SPACE 2
IC001030 EQU   *                                                 A45713
**************************************************************** A45713
*                                                                A45713
*   ISSUE NO MAIN STORAGE AVAILABLE MESSAGE AND TERMINATE.       A45713
*                                                                A45713
**************************************************************** A45713
         LA    ERR1REG,INERROR1 RELATIVE ERROR TO BE PROCESSED.  A45713
         B     IC001045       BRANCH TO CALL IKJEBIN3 TO PUT     A45713
*                                  ERROR MESSAGE AND TERMINATE.  A45713
         SPACE 2
IC001040 EQU   *                                                 A45713
**************************************************************** A45713
*                                                                A45713
*   ISSUE MISSING DATA SET TYPE AND TERMINATE.                   A45713
*                                                                A45713
**************************************************************** A45713
         LA    ERR1REG,INERRORX RELATIVE ERROR TO BE PROCESSED.  A45713
IC001045 EQU   *
         L     EPLOCREG,ICMSGRTN ADDRESS OF MESSAGE ROUTINE.     A45713
         CALL  (15),((COMMREG),(ERR1REG),(ERR2REG),(DATA1REG),         *
               (DATA2REG)),MF=(E,INSVCRTN)
         B     IC001065      BRANCH TO RETURN TO CALLER WITH RC=4.
         SPACE 2
IC001050 EQU   *                                                 A45713
         L     PCLREG,ICPTPCL ADDRESS OF PCL FOR IKJPARS.
         L     AREAREG,PGPBIBUF ADDRESS OF BUFFER.               A45713
         DROP  AREAREG                                           A45713
         LA    PDLREG,INPDLPTR SPECIFY ADDRESS OF AREA IN        A45713
*                                  WHICH IKJPARS RETURNS ADDRESS
*                                  OF PDL.
         LA    PARMREG1,CATMPLST   LOAD PARAM REG 1            @YA02225
         LR    RETREG,(PCLREG)     PICK UP PARAMETER           @YA02225
         LR    RETCDREG,(PDLREG)   PICK UP PARAMETER           @YA02225
         LR    PARMREG0,(AREAREG)  PICK UP PARAMETER           @YA02225
         STM   14,0,12(1)          STORE INTO PARAM LIST       @YA02225
         ST    (COMMREG),24(0,1)   STORE INTO PARAM LSIT       @YA02225
         CALLTSSR EP=IKJPARS,MF=(E,CATMPLST)  INVOKE PARSE     @YA02225X
                                   SERVICE ROUTINE             @YA02225
         LTR   RETCDREG,RETCDREG TEST FOR SUCCESSFUL COMPLETION.
         BZ    IC001070       IF SUCCESSFUL, BRANCH TO RETURN    A45713
         LA    ERR1REG,D8
         CR    ERR1REG,RETCDREG CHECK FOR RETURN CODE 4 OR 8.
         BNL   IC001065       IF 4 OR 8, RETURN WITH NO          A45713
*                                  DIAGNOSTIC MESSAGE.
         LA    ERR1REG,INERROR2 RELATIVE ERROR TO BE PROCESSED.
         LR    DATA2REG,RETCDREG SAVE RETURN CODE FOR MESSAGE.
         O     DATA2REG,ICPARS INDICATE ROUTINE NAME AS IKJPARS.
         CALL  IKJEBIN3,((COMMREG),(ERR1REG),,,(DATA2REG)),            X
               MF=(E,INSVCRTN) PUT ERROR MESSAGE TO USER.
IC001065 EQU   *                                                 A45713
         LA    RETCDREG,D4(,D0) SET ERROR RETURN CODE FOR CALLER.
IC001068 EQU   *                                                 A45713
         IKJEBERT (14,12),,RC=(15) RESTORE REGISTERS AND RETURN.
         EJECT
IC001070 EQU   *                                                 A45713
*                                                                A45713
*   DETERMINE IF VALID DATA SET TYPE ENTERED.                    A45713
*                                                                A45713
         L     DATAREG,INPDLPTR OBTAIN POINTER TO PROMPT PDL.    A45713
         USING ICDSTPDL,DATAREG ESTAB. ADDRESSABILITY TO PDL.    A45713
         LH    INDEXREG,INDSTYP2 OBTAIN KEYWORD NO.              A45713
         LTR   INDEXREG,INDEXREG CHECK IF DSTYPE ENTERED.        A45713
         BNZ   IC001080       IF YES, BRANCH TO PROCESS DSTYPE.  A45713
         IKJRLSA INPDLPTR     RELEASE PDL CORE.                  A45713
         LH    PARMREG0,D0(,AREAREG) LENGTH OF PUTGET BFR.       A45713
         L     PARMREG1,INPGLIST+PGPBIBUF-PGPB PTR TO BFR ADDR.  A45713
         O     PARMREG0,ICSUBPL1 SET SUBPOOL VALUE TO ONE.       A45713
         FREEMAIN R,LV=(0),A=(1) FREE PUTGET BUFFER.             A45713
         B     IC001010       BRANCH TO RE-PROMPT USER.          A45713
         SPACE 2
IC001080 EQU   *                                                 A45713
         SLL   INDEXREG,D3(D0) MULTIPLY INDEX BY EIGHT.          A45713
         L     AREAREG,ICPTTYPE ADDRESS OF DATA SET TYPE TABLE.  A45713
         SH    AREAREG,ICCONST8 SUBTRACT EIGHT FOR ZERO ORIGIN.  A45713
         LA    AREAREG,D0(INDEXREG,AREAREG) OBTAIN ADDRESS OF    A45713
*                                  DATA SET TYPE SPECIFIED.      A45713
         MVC   CADSTYPE(INDSTELN),D0(AREAREG) MOVE DATA SET TYPE A45713
*                                  INTO COMMUNICATION AREA.      A45713
         LOAD  EP=IKJEBEPS    LOAD IKJEBEPS.
         LR    EPLOCREG,PARMREG0 COPY ENTRY POINT ADDRESS.
         CALL  (15),,MF=(E,CADSTYPE) BRANCH TO IKJEBEPS.
         LTR   RETCDREG,RETCDREG TEST FOR SUCCESSFUL COMPLETION.
         BZ    IC002070       BRANCH TO MOVE TABLE ENTRY TO THE
*                                  COMMUNICATION AREA.
         LA    RETCDREG,RCODE4 SET RETURN CODE 4 FOR CALLER.     A45713
IC002060 EQU   *
         DELETE EP=IKJEBEPS   DELETE IKJEBEPS.
         B     IC001068       BRANCH TO RETURN TO CALLER.        A45713
IC002070 EQU   *
         MVC   CADSTYPE(CADATEXT-CAPD),D0(PARMREG1) MOVE FIRST   Y02676
*                                  PORTION OF TYPE-DEPENDENT     Y02676
*                                  INFORMATION TO THE            Y02676
*                                  COMMUNICATION AREA.           Y02676
         LA    RETCDREG,CAPDEXT OBTAIN ADDRESS OF PROCESSOR      Y02676
*                                  TABLE EXTENSION.              Y02676
         ST    RETCDREG,CAPTPDXT STORE PTR TO EXTENSION AREA.    Y02676
         USING IKJEBECX,RETCDREG EXTENSION ADDRESSABILITY.       Y02676
         MVC   CXDATEXT(CXDLEN),CADATEXT-CAPD(PARMREG1)  MOVE    Y02676
*                                  REMAINING INFORMATION TO      Y02676
*                                  TABLE EXTENSION AREA.         Y02676
         DROP  RETCDREG       END EXTENSION ADDRESSABILITY.      Y02676
         SR    RETCDREG,RETCDREG SET SUCCESSFUL RETURN CODE FOR
*                                  IKJPARS.
         B     IC002060       BRANCH TO DELETE IKJEBEPS.
         EJECT
***********************************************************************
*                                                                     *
*   EQUATES, CONSTANTS, AND AREAS USED BY THIS CSECT.                 *
*                                                                     *
***********************************************************************
ICPTPCL  DC    A(IKJEBIN6)    ADDRESS OF PCL FOR DATA SET TYPE
*                                  PROMPT.
ICMSGRTN DC    V(IKJEBIN3)    ADDRESS OF MESSAGE ROUTINE.
ICPARS   DC    XL4'01000000'  INDICATOR FOR IKJPARS SERVICE
*                                  ROUTINE.
ICPTGT   DC    XL4'07000000'  INDICATOR FOR IKJPTGT SERV. RTN.
ICPTTYPE DC    V(IKJEBIN0)    ADDRESS OF DATA SET TYPE TABLE.
         SPACE
*   DATA SET TYPE PROMPT MESSAGE.                                A45713
INPRMTMG DC    AL2(INPRMTLN)  MESSAGE LENGTH.                    A45713
         DC    H'0'           MESSAGE OFFSET.                    A45713
         DC    C'IKJ52567A '  MESSAGE IDENTIFIER.                A45713
         DC    C'ENTER DATA SET TYPE-' MESSAGE TEXT.             A45713
INPRMTLN EQU   *-INPRMTMG     LENGTH OF PROMPT MESSAGE.          A45713
* OUTPUT LINE DESCRIPTOR FOR DSTYPE PROMPT MESSAGE.              A45713
INPMTOLD DC    F'1'           NO. OF MESSAGE SEGMENTS.           A45713
         DC    A(INPRMTMG)    ADDRESS OF MESSAGE.                A45713
         SPACE
ICSUBPL1 DC    XL4'01000000'  INDICATOR FOR SUBPOOL ONE.         A45713
ICCONST8 DC    H'8'           CONSTANT OF EIGHT.                 A45713
         TITLE 'IKJEBIN6 - PCL FOR DATA SET TYPE PROMPT'
IKJEBIN6 IKJPARM DSECT=ICDSTPDL BEGIN PCL FOR DATA SET TYPE.
INDSTYP2 IKJKEYWD
.* INITIALIZE INDEX 'J' TO ONE.                                  A45714
&J       SETA  1                                                 A45714
.TAG9    ANOP                                                    A45714
.* CHECK IF LOOP FINISHED - INDEX 'J' GT NO. OF DSTYPES.         A45714
         AIF   (&J GT &I).OUT3                                   A45714
.* CHECK FOR DSTYPES WITH SPECIAL SUBFIELDS.                     A45714
         AIF   ('&DST(&J)' EQ 'PLI').TAG10                       A45714
         AIF   ('&DST(&J)' EQ 'IPLI').TAG11                      A45714
         AIF   ('&DST(&J)' EQ 'GOFORT').TAG12                    A45714
         AIF   ('&DST(&J)' EQ 'PLIF').TAG13                      A45714
.* CHECK IF DSTYPE IS USER TYPE.                                 A45714
         AIF   (&J LE 16).TAG9A                                  Y02676
         AIF   (&SW EQ 1).TAG14                                  A45714
.TAG9A   ANOP                                                    A45714
         IKJNAME '&DST(&J)' - EDIT DATA SET TYPE.                A45714
         AGO   .LOOP2                                            A45714
.TAG10   ANOP                                                    A45714
         IKJNAME 'PLI',SUBFLD=INPLI2 - EDIT DATA SET TYPE.       A45714
         AGO   .LOOP2                                            A45714
.TAG11   ANOP                                                    A45714
         IKJNAME 'IPLI',SUBFLD=INIPLI2 - EDIT DATA SET TYPE.     A45714
         AGO   .LOOP2                                            A45714
.TAG12   ANOP                                                    A45714
         IKJNAME 'GOFORT',SUBFLD=INTSFTN2 - EDIT DATA SET TYPE.  A45714
         AGO   .LOOP2                                            A45714
.TAG13   ANOP                                                    A45714
         IKJNAME 'PLIF',SUBFLD=INPLI2 - EDIT DATA SET TYPE.      A45714
         AGO   .LOOP2                                            A45714
.TAG14   ANOP                                                    A45714
&K       SETA  &J-16                                             Y02676
.* CHECK IF USER EXIT SUPPLIED FOR DSTYPE.                       A45714
         AIF   ('&SUBFD(&K)' EQ '').TAG9A                        A45714
         IKJNAME '&DST(&J)',SUBFLD=INUXRTY2 - USER DSTYPE.       A45714
.LOOP2   ANOP                                                    A45714
.* INCREMENT LOOP INDEX 'J' BY ONE.                              A45714
&J       SETA  &J+1                                              A45714
         AGO   .TAG9                                             A45714
.OUT3    ANOP                                                    A45714
*                             SUBFIELD DESCRIPTION FOR PL1.      A45714
INPLI2   IKJSUBF
INPLICL1 IKJIDENT 'NUMBER',FIRST=NUMERIC,OTHER=NUMERIC,          A45714*
               DEFAULT='2',VALIDCK=IKJEBIN4 LEFT SOURCE MARGIN.  A45714
INPLICL2 IKJIDENT 'NUMBER',FIRST=NUMERIC,OTHER=NUMERIC,          A45714*
               DEFAULT='72',VALIDCK=IKJEBIN4 RIGHT SOURCE MARGIN.A45714
INPLITYP IKJKEYWD DEFAULT='CHAR60' CHARACTER SET USED.           A45714
         IKJNAME 'CHAR60'     60 CHARACTER SET.                  A45714
         IKJNAME 'CHAR48'     48 CHARACTER SET.                  A45714
INIPLI2  IKJSUBF
INIPLIC2 IKJKEYWD DEFAULT='CHAR60' CHARACTER SET TO BE USED.     A45714
         IKJNAME 'CHAR60'     60-CHARACTER SET.                  A45714
         IKJNAME 'CHAR48'     48-CHARACTER SET.                  A45714
*                             SUBFIELD DESCRIPTION FOR GOFORT.   A45714
INTSFTN2 IKJSUBF
INTSFTF2 IKJKEYWD DEFAULT='FREE' DEFINE STATEMENT FORMAT.        A45714
         IKJNAME 'FREE'       FREE FORMAT STATEMENTS.           1A45714
         IKJNAME 'FIXED'      FIXED FORMAT STATEMENTS.          2A45714
.* CHECK IF USER EXIT SUPPLIED.                                  A45714
         AIF   (&SW EQ 0).TAG15                                  A45714
*                             SUBFIELD DESCRIPT. FOR USER TYPES. A45714
INUXRTY2 IKJSUBF
INUSRTY2 IKJIDENT 'DATA SET TYPE PARAMETERS',FIRST=ANY,OTHER=ANY A45714
.TAG15   ANOP                                                    A45714
         IKJENDP
         EJECT
         TITLE 'IKJEBIN7 - PARTIALLY QUALIFIED DSNAME PROCESSING'
***********************************************************************
*                                                                     *
* STATUS -- VERSION NO. 01, OS/360 RELEASE NO. 20                     *
*                                                                     *
* FUNCTION -- THIS ROUTINE IS CALLED BY THE IKJEBEIN CSECT OF THE     *
*    EDIT INITIALIZATION PROGRAM WHENEVER A PARTIALLY QUALIFIED       *
*    DSNAME IS ENTERED ON THE EDIT COMMAND.  IT SCANS OFF THE         *
*    RIGHTMOST QUALIFIER OF THE DSNAME AND DETERMINES IF THE NAME     *
*    IS (1) SINGLE-LEVEL OR (2) MULTI-LEVEL.  IF SINGLE-LEVEL, IT     *
*    UNCONDITIONALLY APPENDS A DESCRIPTIVE QUALIFIER FOR THE DATA     *
*    SET TYPE ENTERED OR PROMPTED FOR.  IT ALSO TAKES THE ABOVE       *
*    ACTION WHEN THE RIGHTMOST QUALIFIER OF A MULTI-LEVEL NAME IS NOT *
*    DESCRIPTIVE FOR THE DATA SET TYPE ENTERED ON THE COMMAND.  IF    *
*    THE NAME IS MULTI-LEVEL AND DATA SET TYPE WAS NOT SPECIFIED,     *
*    IT DETERMINES WHETHER THE RIGHTMOST QUALIFIER IS DESCRIPTIVE     *
*    FOR ANY DATA SET TYPE BY LOADING AND CALLING THE EDIT            *
*    PROCESSOR SEARCH ROUTINE (IKJEBEPS).  IF THE QUALIFIER IS        *
*    DESCRIPTIVE, DATA SET TYPE DEFAULTS BASED ON THE QUALIFIER.      *
*    OTHERWISE DATA SET TYPE IS PROMPTED FOR AND THE ASSOCIATED       *
*    QUALIFIER IS APPENDED TO THE DSNAME ENTERED.  THE PARTIALLY-     *
*    QUALIFIED NAME IS ALWAYS ADJUSTED SUCH THAT PARAMETERS FOR THE   *
*    DEFAULT SERVICE ROUTINE (IKJDFLT) DO NOT CONTAIN ANY             *
*    REDUNDANCY BETWEEN (1) THE RIGHTMOST QUALIFIER OF THE DSNAME AND *
*    (2) THE QUALIFIER TO BE SUFFIXED TO THE NAME.  THE DEFAULT       *
*    SERVICE ROUTINE IS INVOKED TO (1) FULLY QUALIFY THE NAME         *
*    SYNTACTICALLY AND (2) TO PERFORM A CATALOG SEARCH ON THE FULLY   *
*    QUALIFIED DSNAME.  THE RETURN CODE FROM THE DEFAULT SERVICE      *
*    ROUTINE IS CHECKED AND ERROR MESSAGES ISSUED IF NECESSARY.       *
*                                                                     *
* ENTRY POINTS --                                                     *
*         IKJEBIN7 - VIA CALL MACRO FROM IKJEBEIN, THE MAIN CSECT     *
*                    OF THE EDIT INITIALIZATION PROGRAM WHEN A        *
*                    PARTIALLY QUALIFIED DSNAME IS ENTERED ON THE     *
*                    EDIT COMMAND.                                    *
*                                                                     *
* INPUT --                                                            *
*    REGISTER ONE (1) CONTAINS A POINTER TO A WORD CONTAINING THE     *
*    ADDRESS OF THE EDIT COMMUNICATION AREA.                          *
*                                                                     *
* OUTPUT --                                                           *
*    REGISTER FIFTEEN (15) CONTAINS ONE OF THE FOLLOWING              *
*    RETURN CODES --                                                  *
*                                                                     *
*    00 - SUCCESSFUL COMPLETION.                                      *
*    04 - TERMINATION REQUIRED - ERROR OCCURRED.                      *
*                                                                     *
* EXTERNAL REFERENCES --                                              *
*                                                                     *
*         IKJDFLT  - DEFAULT SERVICE ROUTINE, INVOKED VIA LINK TO     *
*                    QUALIFY THE NAME SUPPLIED BY THE USER AND TO     *
*                    PERFORM A CATALOG SEARCH ON IT.                  *
*         IKJEBIN3 - CSECT OF EDIT INITIALIZATION CALLED FOR          *
*                    INITIAL MESSAGE PROCESSING.                      *
*         IKJEBIN5 - CSECT OF EDIT INITIALIZATION CALLED TO PROMPT    *
*                    THE USER FOR DATA SET TYPE.                      *
*                                                                     *
*    MACROS USED --                                                   *
*                                                                     *
*         CALL     - USED FOR LINKAGE TO MODULES CONTAINED IN THE     *
*                    LOAD MODULE AS WELL AS IKJEBEPS, THE PROCESSOR   *
*                    SEARCH ROUTINE.                                  *
*         DELETE   - USED TO DELETE THE IKJEBEPS MODULE FROM MAIN     *
*                    STORAGE.                                         *
*         IKJEBERT - RETURN LINKAGE WITHIN THE EDIT COMMAND PROCESSOR.*
*         IKJEBESV - ENTRY LINKAGE WITHIN THE EDIT COMMAND PROCESSOR. *
*         LINK     - ISSUED TO INVOKE THE DEFAULT SERVICE ROUTINE.    *
*         LOAD     - ISSUED TO LOAD IKJEBEPS INTO MAIN STORAGE.       *
*                                                                     *
* EXITS, NORMAL --                                                    *
*    RETURN TO IKJEBEIN BY BRANCHING ON REGISTER FOURTEEN (14)        *
*    WITH REGISTER FIFTEEN (15) SET TO ZERO (0).                      *
*                                                                     *
* EXITS, ERROR --                                                     *
*    RETURN TO IKJEBEIN BY BRANCHING ON REGISTER FOURTEEN (14)        *
*    WITH REGISTER FIFTEEN (15) SET TO FOUR (4).                      *
*                                                                     *
* TABLES/WORK AREAS --                                                *
*                                                                     *
*    THE EDIT COMMUNICATION AREA CONTAINS CONTROL INFORMATION AND     *
*    A WORK AREA FOR THIS ROUTINE.  THE FOLLOWING FIELDS ANR (1) USED *
*    AS INPUT AND (2) ARE UPDATED BY THIS ROUTINE --                  *
*                                                                     *
*    CADSQUAL - DESCRIPTIVE QUALIFIER FIELD.                          *
*                                                                     *
*    CAEDDSN  - DSNAME ENTERED BY THE USER AND QUALIFIED BY THIS      *
*               ROUTINE.                                              *
*                                                                     *
*    THE PROCESSOR TABLE (BEGINNING AT OFFSET 'CAPD') IS INITIALIZED  *
*    BY THIS ROUTINE OR BY IKJEBIN5 WHENEVER THE DATA SET TYPE IS     *
*    DEFAULTED OR PROMPTED FOR.                                       *
*                                                                     *
* ATTRIBUTES --                                                       *
*    REFRESHABLE, ENABLED, NON-PRIVILEGED                             *
*                                                                     *
* CHARACTER CODE DEPENDENCY -- NONE.                                  *
*                                                                     *
* NOTES -- NONE.                                                      *
*                                                                     *
***********************************************************************
         EJECT
IKJEBIN7 CSECT
***********************************************************************
*
*                             PROLOGUE
*
***********************************************************************
         IKJEBESV (14,12),,*,COMMREG=D0(,PARMREG1) ENTRY LINKAGE
         USING IKJEBECA,COMMREG ESTABLISH COMMUNICATION AREA
*                               ADDRESSABILITY
         XC    IN7WORK(IN7WKLEN),IN7WORK ZERO WORK AREA.
         EJECT
***********************************************************************
*
* THIS SECTION SCANS THE USER-SUPPLIED NAME.  IF THE NAME IS NULL OR
* CONTAINS ONE LEVEL ONLY, A SWITCH IS SET TO INDICATE THAT NO
* QUALIFIER CHECKING IS TO BE DONE.  OTHERWISE, THE LENGTH AND
* ADDRESS OF THE RIGHTMOST QUALIFIER ARE ESTABLISHED.
*
***********************************************************************
         SPACE 2
         LH    LENREG,CAEDDSNL GET LENGTH OF USER SUPPLIED NAME.
         LA    TMPREG,D2      CONSTANT FOR COMPARES.
         SR    LENREG,TMPREG  IF USER NAME IS 2 CHARACTERS OR LESS,
         BNH   ID000020       BRANCH TO INDICATE SIMPLE NAME.
         LA    QUALREG,CAEDDSN(LENREG) ADDRESS NEXT-TO-LAST CHAR.
ID000010 EQU   *
         CLI   D0(QUALREG),INPERIOD IS CHARACTER A PERIOD -
         BE    ID000030       IF SO, QUALIFIER CHECK IS REQUIRED.
         BCTR  QUALREG,D0     ADDRESS NEXT CHARACTER TO LEFT.
         BCT   LENREG,ID000010 DECREMENT LEN AND REPEAT IF GT 0.
ID000020 EQU   *
         OI    IN7FLAGS,IN7NOQLF INDICATE NO QUALIFIER CHECKING.
         B     ID000040       BRANCH TO CONTINUE PROCESSING.
ID000030 EQU   *
         NI    IN7FLAGS,IN7QLFCK INDICATE QUALIFIER CHECKING.
         SH    LENREG,CAEDDSNL SUBTRACT FULL LENGTH FROM LENGTH.
         LCR   LENREG,LENREG  COMPLEMENT TO GET QUALIFIER LENGTH.
         SR    LENREG,TMPREG  ADJUST QUALIFIER LENGTH FOR
*                             SS OPERATIONS
         EJECT
***********************************************************************
*
* THIS SECTION MAKES NECESSARY CHECKS ON THE RIGHTMOST QUALIFIER.
*
* IF NO QUALIFIER CHECKS ARE NECESSARY, DATA SET TYPE IS PROMPTED
* FOR IF NOT ENTERED ON THE COMMAND.  THE DEFAULT SERVICE ROUTINE
* MAY THEN BE INVOKED TO QUALIFY THE USER-SUPPLIED NAME.
*
* IF QUALIFIER CHECKING IS NECESSARY, IKJEBEPS IS INVOKED TO
* DETERMINE WHETHER THE RIGHTMOST QUALIFIER IS DESCRIPTIVE FOR
* EDIT.  IF NOT, PROCESSING IS BASED ON THE QUALIFIER ASSOCIATED
* WITH THE DATA SET TYPE ENTERED OR PROMPTED FOR.  IF THE QUALIFIER
* IS DESCRIPTIVE AND DATA SET TYPE WAS NOT ENTERED ON THE COMMAND
* DATA SET TYPE IS BASED ON THE REGHTMOST QUALIFIER OF THE DSNAME.
* IF THE QUALIFIER IS DESCRIPTIVE AND DATA SET TYPE WAS ENTERED,
* STRIPPING OF THE QUALIFIER IS PERFORMED WHEN THE QUALIFIER
* IS DESCRIPTIVE FOR THE DATA SET TYPE ENTERED.
*
***********************************************************************
         SPACE 2
ID000040 EQU   *
         TM    IN7FLAGS,IN7NOQLF IS QUALIFIER CHECKING NECESSARY -
         BZ    ID000060       IF NECESSARY, BRANCH TO VALIDATE
         CLI   CADSCODE,CANOTYPE WAS DATA SET TYPE ENTERED -
         BNE   ID000130       IF SO, BRANCH TO INVOKE DEFAULT.
ID000050 EQU   *
         CALL  IKJEBIN5,((COMMREG)),MF=(E,IN7PLIST) CALL IKJEBIN5
*                                  TO PROMPT FOR DATA SET TYPE.
         LTR   RETCDREG,RETCDREG WAS PROMPT SUCCESSFUL -
         BZ    ID000110       IF SO, BRANCH TO INVOKE DEFAULT.
         BNZ   IDRETCD4       IF NOT, RETURN TO IKJEBEIN WITH RC=4.
         EJECT
ID000060 EQU   *
         LOAD  EP=IKJEBEPS    LOAD PROCESSOR SEARCH ROUTINE.
         OI    IN7FLAGS,IN7DELPS SPECIFY DELETE NECESSARY FOR
*                                  ROUTINE.
         LR    EPLOCREG,PARMREG0 COPY ENTRY POINT ADDRESS.
         LA    PARMREG1,D1(,QUALREG) POINT TO QUALIFIER.
         LCR   PARMREG1,PARMREG1 SPECIFY SEARCH ON QUALIFIER.
         CALL  (15),MF=(E,(1)) CALL IKJEBEPS.
         LTR   RETCDREG,RETCDREG IS QUALIFIER DESCRIPTIVE -
         BNZ   ID000070       IF NOT, BRANCH TO CHECK DATA SET TYPE.
         CLI   CADSCODE-CAPD(PARMREG1),CAEDTTYP IS QUALIFIER
*                                  DESCRIPTIVE FOR EDIT -
         BNH   ID000080       IF SO, BRANCH TO CHECK DATA SET
*                             TYPE ENTERED AGAINST QUALIFIER.
ID000070 EQU   *
         CLI   CADSCODE,CANOTYPE DATA SET TYPE ENTERED ON COMMAND -
         BE    ID000050       IF NOT, BRANCH TO CAUSE PROMPT.
         B     ID000120       IF SO, BRANCH TO INVOKE DEFAULT.
ID000080 EQU   *
         CLI   CADSCODE,CANOTYPE WAS TYPE ENTERED ON COMMAND -
         BNE   ID000100       IF SO, BRANCH TO COMPARE QUALIFIERS.
         MVC   CADSTYPE(CADATEXT-CAPD),D0(PARMREG1) MOVE FIRST   Y02676
*                                  PORTION OF TYPE-DEPENDENT     Y02676
*                                  INFORMATION TO THE            Y02676
*                                  COMMUNICATION AREA.           Y02676
         LA    RETCDREG,CAPDEXT OBTAIN ADDRESS OF PROCESSOR      Y02676
*                                  TABLE EXTENSION.              Y02676
         ST    RETCDREG,CAPTPDXT STORE PTR TO EXTENSION AREA.    Y02676
         USING IKJEBECX,RETCDREG EXTENSION ADDRESSABILITY.       Y02676
         MVC   CXDATEXT(CXDLEN),CADATEXT-CAPD(PARMREG1)  MOVE    Y02676
*                                  REMAINING INFORMATION TO      Y02676
*                                  TABLE EXTENSION AREA.         Y02676
         DROP  RETCDREG       END EXTENSION ADDRESSABILITY.      Y02676
ID000090 EQU   *
         LH    QUALREG,CAEDDSNL GET DSNAME LENGTH.
         LA    LENREG,D2(,LENREG) ADJUST QUALIFIER LENGTH.
         SR    QUALREG,LENREG SUBTRACT QUALIFIER LENGTH.
         STH   QUALREG,CAEDDSNL UPDATE DSNAME LENGTH TO LOGICALLY
*                                  REMOVE RIGHTMOST QUALIFIER.
         B     ID000120       BRANCH TO INVOKE DEFAULT SERVICE
*                                  ROUTINE.
ID000100 EQU   *
         EX    LENREG,IDCOMPCL COMPARE TABLE QUALIFIER AND
*                                  RIGHTMOST QUALIFIER OF NAME.
         BE    ID000090       IF ALIKE, STRIP NAME QUALIFIER.
         BNE   ID000120       IF DIFFERENT, BRANCH TO QUALIFY NAME.
         EJECT
***********************************************************************
*
* THIS SECTION INVOKES THE DEFAULT SERVICE ROUTINE TO FULLY QUALIFY
* THE NAME ENTERED.  IKJEBEPS IS DELETED IF NECESSARY PRIOR TO
* INITIALIZING PARAMETERS FOR DEFAULT.  PARAMETERS ARE SPECIFIED
* FOR APPENDING THE USERID AND DESCRIPTIVE QUALIFIER.  IKJDFLT IS
* INVOKED VIA LINK. RETURN CODES ARE DIAGNOSED AND DIAGNOSTICS
* ISSUED IF NECESSARY.  RETURN CODES TO IKJEBEIN ARE --
*
*     0 - SUCCESSFUL.
*     4 - NOT SUCCESSFUL (TERMINATE EDIT).
*
***********************************************************************
         SPACE 2
ID000110 EQU   *
         TM    IN7FLAGS,IN7DELPS MUST IKJEBEPS BE DELETED -
         BZ    ID000130       IF NOT, BRANCH TO INVOKE IKJDFLT
ID000120 EQU   *
         DELETE EP=IKJEBEPS   DELETE PROCESSOR SEARCH ROUTINE.
         LTR   RETCDREG,RETCDREG WAS DELETE SUCCESSFUL -
         BZ    ID000130       IF SO, CONTINUE.
         B     ID000200       IF NOT, ISSUE DIAGNOSTIC AND
*                                  TERMINATE.
ID000130 EQU   *
         LA    TMPREG,DFPB00  SPECIFY ENTRY CODE FOR IKJDFLT.
         STC   TMPREG,IN7PLIST+DFPBCODE-DFPB SET ENTRY CODE BYTE
*                                  IN PARAMETER BLOCK.
         LA    DSNAMREG,CAEDDSNL ADDRESS USER-SUPPLIED DSNAME.
         ST    DSNAMREG,IN7PLIST+DFPBDSN-DFPB STORE DSNAME IN
*                                  DEFAULT PARAMETER BLOCK.
         L     TMPREG,CAPTTMP ADDRESS COMMAND PARAMETER LIST.
         L     PASSREG,CPPLPSCB-CPPL(,TMPREG) ADDRESS PSCB.
         ST    PASSREG,IN7PLIST+DFPBPSCB-DFPB STORE PSCB ADDRESS
*                                  IN DEFAULT PARAMETER BLOCK.
         LA    QUALREG,CADSQUAL ADDRESS DESCRIPTIVE QUALIFIER.
         ST    QUALREG,IN7PLIST+DFPBQUAL-DFPB STORE QUALIFIER
*                                  ADDRESS IN PARAMETER BLOCK.
         MVI   IN7PLIST+DFPBCNTL-DFPB,DFPBUID SPECIFY PREFIXING
*                                  OF USERID TO DSNAME.
         LA    QUALREG,IN7PLIST ADDRESS DEFAULT PARAMETER BLOCK
         ST    QUALREG,CATMPLST+DFPLDFPB-DFPL AND CHAIN TO
*                                  PARAMETER LIST.
         LA    PARMREG1,CATMPLST   LOAD PARAM REG 1            @YA02225
         CALLTSSR EP=IKJEHDEF,MF=(E,CATMPLST)  INVOKE DEFAULT  @YA02225
*                                  SERVICE ROUTINE             @YA02225
         LR    ERR1REG,RETCDREG SAVE RETURN CODE.
         SRL   RETCDREG,D2    DIVIDE RETURN CODE BY 4 FOR USE
*                                  AS INDEX TO TABLE.
         IC    RETCDREG,IDRCTAB(RETCDREG) GET ACTION CODE.
         EJECT
***********************************************************************
*
* ACTION CODES ARE BASED ON RETURN CODES FROM THE DEFAULT SERVICE
* ROUTINE --
*
* ACTION CODE   DEFAULT RC'S  ACTION
*
*     00           00,20,36   SUCCESSFUL RETURN
*     04           24         RETURN WITH RETURN CODE=04.
*     08           08         INVALID DSNAME MSG - RC IS 04.
*     12           16         CATALOG STRUCTURE MSG - RC IS 04.
*     16           04         NAME NOT RESOLVED MSG - RC IS 04.
*     20           12         NAME NOT RESOLVED MSG - RC IS 04.
*     24           28,32      COMMAND SYSTEM ERROR MSG - RC IS 04.
*
* THE ACTION CODE IS USED AS AN INDEX TO THE BRANCH TABLE BELOW.
*
***********************************************************************
         SPACE 2
         B     ID000140(RETCDREG) BRANCH TO BRANCH TABLE.
ID000140 EQU   *              THIS BRANCH TABLE IS POSITION
*                                  DEPENDENT.
         B     IDRETURN       SUCCESSFUL - RETURN WITH RETURN CODE
*                                  ZERO.
         B     IDRETURN       ATTN ISSUED - RETURN WITH RETURN
*                                  CODE FOUR.
         B     ID000150       ISSUE DIAGNOSTIC - RC IS FOUR.
         B     ID000160       ISSUE DIAGNOSTIC - RC IS FOUR.
         B     ID000180       ISSUE DIAGNOSTIC - RC IS FOUR.
         B     ID000180       ISSUE DIAGNOSTIC - RC IS FOUR.
         B     ID000190       ISSUE DIAGNOSTIC - RC IS FOUR.
         EJECT
***********************************************************************
*
*                 DIAGNOSTICS AND RETURN LINKAGE.
*
***********************************************************************
         SPACE 2
ID000150 EQU   *              INVALID DSNAME.
         LA    ERR1REG,INERRORR SPECIFY MESSAGE INDEX.
         B     ID000220       BRANCH TO CALL IKJEBIN3.
         SPACE
ID000160 EQU   *              LOCATE RC 16 RETURNED TO DEFAULT
*                                  SERVICE ROUTINE.
         LA    ERR1REG,INERRORS SPECIFY MESSAGE INDEX.
         SR    DATA1REG,DATA1REG SPECIFY THAT DSNAME INSERTION
*                                  MUST BE BUILT FOR MESSAGE.
         B     ID000220       BRANCH TO CALL IKJEBIN3.
         SPACE
ID000180 EQU   *              DEFAULT ERROR CODE 4 OR 12.
         LR    DATA2REG,ERR1REG COPY DEFAULT RETURN CODE.
         LA    ERR2REG,M3151  SPECIFY RELATIVE LEVEL-2 MESSAGE.
         LA    ERR1REG,INERRORU SPECIFY MESSAGE INDEX.
         B     ID000220       BRANCH TO CALL IKJEBIN3.
         SPACE
ID000190 EQU   *              COMMAND SYSTEM ERROR IN DEFAULT
*                                  SERVICE ROUTINE.
         LR    DATA2REG,ERR1REG COPY DEFAULT RETURN CODE.
         O     DATA2REG,IDDFAULT SPECIFY SECOND-LEVEL INSERTION
*                                  NAME - 'DEFAULT'
         B     ID000210       BRANCH TO CONTINUE.
         SPACE
ID000200 EQU   *              DELETE SVC ERROR.
         LR    DATA2REG,RETCDREG COPY DELETE RETURN CODE.
         O     DATA2REG,IDDELSVC SPECIFY SECOND-LEVEL INSERTION
*                                  NAME - 'DELETE SVC'
         SPACE
ID000210 EQU   *              COMMAND SYSTEM ERROR.
         LA    ERR1REG,INERROR2 SPECIFY MESSAGE INDEX.
         SPACE
ID000220 EQU   *              CALL MESSAGE INITIALIZATION ROUTINE.
         CALL  IKJEBIN3,((COMMREG),(ERR1REG),,,(DATA2REG)),            X
               MF=(E,IN7PLIST) CALL IKJEBIN3.
IDRETCD4 EQU   *
         LA    RETCDREG,D4    RETURN CODE TO IKJEBEIN IS FOUR.
IDRETURN EQU   *
         IKJEBERT (14,12),,RC=(15) RETURN TO IKJEBEIN.
         EJECT
***********************************************************************
*
*                  LOCAL STORAGE CONSTANTS AND EXECUTED INSTRUCTIONS.
*
***********************************************************************
         SPACE 2
         DS    0F             ALIGNMENT.
IDDFAULT DC    X'05000000'    INDICATOR FOR DEFAULT INSERTION.
IDDELSVC DC    X'06000000'    INDICATOR FOR DELETE SVC INSERTION.
         SPACE 2
IDCOMPCL CLC   D1(*-*,QUALREG),CADSQUAL COMPARE RIGHTMOST
*                                  QUALIFIER TO QUALIFIER IN
*                                  PROCESSOR TABLE.
         SPACE 2
IDRCTAB  DC    X'001008140C0004181800' ACTION CODE TABLE.
         EJECT
         TITLE 'IKJEBIN8 - OPERAND PROCESSING'
***********************************************************************
*                                                                     *
* STATUS -- VERSION NO. 01, OS/360 RELEASE NO. 20                     *
*                                                                     *
* FUNCTION -- THIS ROUTINE VALIDATES KEYWORD AND DATA SET TYPE        *
*    SUBFIELD OPERANDS ENTERED ON THE EDIT COMMAND.  THE LINE         *
*    OPERAND (OR LRECL IN THE CASE OF AN OLD DATA SET) IS VALIDATED   *
*    AGAINST TABLE ENTRIES ASSOCIATED WITH THE DATA SET TYPE.         *
*    THE BLOCK OPERAND (OR BLOCK SIZE) IS CHECKED IN MUCH THE SAME    *
*    WAY.  THE REMAINING EDIT OPERANDS ARE VALIDITY CHECKED IN THE    *
*    FOLLOWING ORDER --                                               *
*                                                                     *
*    (1) SCAN/NOSCAN                                                  *
*    (2) NUM/NONUM                                                    *
*    (3) CAPS/ASIS                                                    *
*                                                                     *
*    SPECIAL CASES ARE THOSE DATA SET TYPES FOR WHICH THE USER MAY    *
*    OPTIONALLY SPECIFY SUBFIELD OPERANDS --                          *
*                                                                     *
*    (1) IPLI CHARACTER SET                                           *
*    (2) PLI OR PLIF CHARACTER SET AND SOURCE MARGINS                 *
*    (3) GOFORT FORMAT (FIXED OR FREE)                                *
*    (4) USER DSTYPE SUBFIELD, IF SYSGENED                       A45714
*                                                                     *
*    IN CASES 1,2, AND 4, OPERAND CHECKING FOLLOWS VALIDATION    A45714
*    OF THE OTHER EDIT OPERANDS.  IN CASE 3, SPECIAL             A45714
*    PROCESSING IS DONE IN PARALLEL WITH LINE OPERAND VALIDATION.     *
*                                                                     *
*    MESSAGES ARE ISSUED WHENEVER INVALID, INCONSISTENT, OR           *
*    SUPERFLUOUS OPERANDS ARE SPECIFIED OR INVALID LRECL'S OR         *
*    BLKSIZE'S ENCOUNTERED.                                           *
*                                                                     *
* ENTRY POINTS --                                                     *
*         IKJEBIN8 - VIA CALL MACRO FROM IKJEBEIN, THE MAIN CSECT     *
*                    OF THE EDIT INITIALIZATION PROGRAM WHEN IT       *
*                    BECOMES NECESSARY TO VALIDATE COMMAND OPERANDS.  *
*                                                                     *
* INPUT --                                                            *
*    REGISTER ONE (1) CONTAINS A POINTER TO A TWO-WORD                *
*    PARAMETER LIST --                                                *
*    WORD 1 - ADDRESS OF THE EDIT COMMUNICATION AREA                  *
*    WORD 2 - ADDRESS OF THE EDIT COMMAND PDL                         *
*                                                                     *
*    REGISTER ZERO (0) CONTAINS AN ENTRY CODE --                      *
*    00 - OLD DATA SET                                                *
*    04 - NEW DATA SET                                                *
*                                                                     *
* OUTPUT --                                                           *
*    REGISTER FIFTEEN (15) CONTAINS A RETURN CODE --                  *
*                                                                     *
*    00 - SUCCESSFUL OPERATION.                                       *
*    04 - TERMINATION ERROR.                                          *
*                                                                     *
* EXTERNAL REFERENCES --                                              *
*                                                                     *
*         IKJEBIN3 - CALLED FOR INITIAL MESSAGE PROCESSING            *
*                                                                     *
*    MACROS USED --                                                   *
*                                                                     *
*         BLDL     - BUILD LIST OF DIRECTORY INFORMATION         A45714
*         CALL     - LINKAGE TO IKJEBIN3.                             *
*         DEVTYPE  - ISSUED FOR OLD DATA SETS IN ORDER TO OBTAIN      *
*                    TRACK CAPACITY.                                  *
*         IKJEBEMG - BUILDING MESSAGE INSERTION LISTS.                *
*         IKJEBERT - RETURN LINKAGE WITHIN THE EDIT COMMAND           *
*                    PROCESSOR.                                       *
*         IKJEBESV - ENTRY LINKAGE WITHIN THE EDIT COMMAND PROCESSOR. *
*         LINK     - PASS CONTROL TO EXTERNAL PROGRAM            A45714
*                                                                     *
* EXITS, NORMAL --                                                    *
*    RETURN TO THE CALLING ROUTINE BY BRANCHING ON REGISTER           *
*    FOURTEEN (14) WITH REGISTER FIFTEEN (15) SET TO ZERO (0).        *
*                                                                     *
* EXITS, ERROR --                                                     *
*    RETURN TO THE CALLING ROUTINE BY BRANCHING ON REGISTER           *
*    FOURTEEN (14) WITH REGISTER FIFTEEN (15) SET TO FOUR (4).        *
*                                                                     *
* TABLES/WORK AREAS --                                                *
*                                                                     *
*    THE EDIT COMMUNICATION AREA CONTAINS CONTROL INFORMATION AND     *
*    WORK AREAS FOR THIS ROUTINE.  THE FOLLOWING FIELDS ARE UPDATED   *
*    BY IKJEBIN8 --                                                   *
*                                                                     *
*    CABLKS   - BLOCK SIZE                                            *
*    CACFLAG1 - CONTROL FLAG                                          *
*    CACFLAG2 - CONTROL FLAG                                          *
*    CACFLAG6 - CONTROL FLAG                                          *
*    CADSATTR - DATA SET ATTRIBUTES FLAG                              *
*    CALINE   - STARTING POSITION FOR SEQUENCE NUMBER                 *
*    CALENGTH - SEQUENCE NUMBER LENGTH                                *
*    CALRECL  - LOGICAL RECORD LENGTH                                 *
*    CAPLIRTM - RIGHT SOURCE MARGIN POSITION                          *
*    CAPLILFM - LEFT SOURCE MARGIN POSITION                           *
*    CACHKOPT - LEFT AND RIGHT SOURCE MARGIN IN CHECKER PARMLIST A45714
*                                                                     *
*    THE EDIT COMMAND PDL (PARAMETER DESCRIPTOR LIST) IS RETURNED BY  *
*    IKJPARS AND CONTAINS COMMAND OPERAND INFORMATION.                *
*                                                                     *
* ATTRIBUTES --                                                       *
*    REFRESHABLE, ENABLED, NON-PRIVILEGED                             *
*                                                                     *
* CHARACTER CODE DEPENDENCY -- NONE.                                  *
*                                                                     *
* NOTES --                                                            *
*    THIS ROUTINE CONTAINS PROCESSOR DEPENDENT CODE FOR THE FOLLOWING *
*    DATA SET TYPES --                                                *
*                                                                     *
*    GOFORT                                                           *
*    IPLI                                                             *
*    PLI                                                              *
*    PLIF                                                             *
***********************************************************************
         EJECT
IKJEBIN8 CSECT
         IKJEBESV (14,12),,*,COMMREG=D0(,PARMREG1) SAVE ENTRY          X
                                   REGISTERS.
         USING IKJEBECA,COMMREG ESTABLISH ADDRESSABILITY TO THE
*                                  COMMUNICATION AREA.
         L     DATAREG,D4(,PARMREG1) OBTAIN ADDRESS OF EDIT
*                                  COMMAND PDL.
         USING INECMNDD,DATAREG ESTABLISH ADDRESSABILITY TO THE
*                                  EDIT COMMAND PDL.
         MVI   IN8FLAGS,IN8ZEROS ZERO FLAG BYTE FOR THIS ROUTINE.
         LTR   PARMREG0,PARMREG0 TEST FOR ENTRY CODE ZERO.
         BNZ   IN003030       IF ENTRY CODE IS NOT ZERO, BRANCH
*                                  TO PROCESS AS NEW DATA SET.
         LH    LENREG,CALRECL ACQUIRE LRECL FOR OLD DATA SET.
         B     IN003065       BRANCH TO VALIDATE LRECL.
         EJECT
***********************************************************************
*                                                                     *
*   VALIDATE LINE OPERAND FOR A NEW DATA SET AND LRECL FOR AN OLD     *
*   DATA SET.                                                         *
*                                                                     *
*   AFTER CONVERTING THE LINE OPERAND TO BINARY, PLACE VALUE IN       *
*   THE COMMUNICATION AREA.  (IF DATA SET WAS OLD, LRECL HAS          *
*   PREVIOUSLY BEEN PLACED IN THE COMMUNICATION AREA.  VERIFY THAT    *
*   LINE(LRECL) IS CORRECT FOR THE DATA SET TYPE BEING EDITED.  IF    *
*   LINE(LRECL) IS INVALID, PUT MESSAGE TO TERMINAL AND EXIT TO TMP.  *
*                                                                     *
***********************************************************************
IN003030 EQU   *
         CLC   INLNE(L'IENOKEYW),IENOKEYW CHECK IF LINE OPERAND
*                                  SPECIFIED.
         BNE   IN003060       IF SPECIFIED, BRANCH TO CONVERT TO
*                                  BINARY.
         BAL   SRRTNREG,IN011010 BRANCH TO CHECK IF DATA SET TYPE
*                                  IS GOFORT.
         TM    IN8FLAGS,IN8TERME DETERMINE IF INVALID OPERANDS OR
*                                  ATTRIBUTES FOR GOFORT.
         BO    IEEXIT1        IF SO, BRANCH TO TERMINATE.
IN003040 EQU   *
         SR    PARMREG1,PARMREG1 CREATE CONSTANT OF ZERO.
         CH    PARMREG1,CAFLRLDF CHECK IF DEFAULT RECORD FORMAT
*                                  IS FIXED.
         BNZ   IN003050       IF FIXED, BRANCH TO INITIALIZE LINE
         MVC   CALRECL(L'CALRECL),CAVLRLDF INITIALIZE LINE SIZE
*                                  WITH VARIABLE FORMAT LRECL.
         NI    CACFLAG2,X'FF'-CARECFM  SET RECFM TO VB          ZA32148
         B     IN004520       BRANCH TO VALIDATE BLOCK OPERAND.
IN003050 EQU   *
         MVC   CALRECL(L'CALRECL),CAFLRLDF INITIALIZE LINE SIZE
*                                  WITH FIXED FORMAT LRECL.
         OI    CACFLAG2,CARECFM INDICATE THAT DATA SET HAS A
*                                  FIXED OR FIXED BLOCK FORMAT.
         B     IN004520       BRANCH TO VALIDATE BLOCK OPERAND.
IN003060 EQU   *
         L     AREAREG,INLNESZ+INLNEPT ADDRESS OF LINE VALUE.
         LH    SIZEREG,INLNESZ+INLNELN LENGTH OF LINE VALUE.
         BAL   RETREG,INCVBIN BRANCH TO CONVERT TO BINARY.
         STH   LENREG,CALRECL PLACE LINE VALUE IN COMMUNICATION
*                                  AREA FOR TESTS.
IN003065 EQU   *
         LTR   LENREG,LENREG  CHECK IF LRECL IS ZERO.
         BNZ   IN003067       BYPASS ISSUING WARNING MESSAGE TO USER.
         LA    ERR1REG,INERROR8 SET RELATIVE ERROR INDICATION FOR
*                                  WARNING MESSAGE.
         LA    ERR2REG,M3353  SET SECOND-LEVEL RELATIVE NUMBER.
         LH    DATA1REG,CABLKS SPECIFY LRECL TO BE USED.
         STH   DATA1REG,CALRECL SET LRECL FIELD IN COMMUNICATION
*                                  AREA.
         BAL   AREAREG,IN013010 BRANCH TO ISSUE WARNING MESSAGE.
         LR    LENREG,DATA1REG  COPY BLOCK SIZE INTO LRECL REGISTER.
IN003067 EQU   *
         BAL   SRRTNREG,IN011010 BRANCH TO CHECK IF DATA SET TYPE
*                                  IS GOFORT.
         TM    IN8FLAGS,IN8TERME DETERMINE IF INVALID OPERANDS OR
*                                  ATTRIBUTES FOR GOFORT.
         BO    IEEXIT1        IF SO, BRANCH TO TERMINATE.
         TM    CADSATTR,CALRECLX CHECK IF DEFAULT LRECL IS
*                                  REQUIRED.
         BZ    IN003080       WHEN DEFAULT IS NOT REQUIRED,
*                                  BRANCH TO CHECK MAXIMUM.
         LH    SIZEREG,CAFLRLDF DEFAULT LRECL FOR DATA SET TYPE.
         CR    SIZEREG,LENREG CHECK IF LINE VALUE IS EQUAL TO
*                                  DEFAULT LRECL.
         BE    IN003090       IF EQUAL, BRANCH TO PROCESS BLOCK
*                                  OPERAND.
IN003070 EQU   *
         TM    CAEDFLAG,CAEDDISP CHECK IF DATA SET IS NEW.
         BZ    IN003075       IF DATA SET IS NEW, BRANCH TO
*                                  DEFAULT LRECL.
         LH    DATA1REG,CALRECL OBTAIN LRECL FOR MESSAGE.
         LA    ERR1REG,INERROR6 RELATIVE ERROR TO BE PROCESSED.
         BAL   AREAREG,IN013010 BRANCH TO PUT ERROR MESSAGE.
         B     IEEXIT1        BRANCH TO EXIT WITH ERROR RETURN
*                                  CODE.
IN003073 EQU   *
         LH    SIZEREG,CAFLRLDF OBTAIN DEFAULT LINE VALUE FOR FIXED
*                                  FORMAT RECORDS.
         LTR   SIZEREG,SIZEREG DETERMINE IF VARIABLE DEFAULT IS
*                                  TO BE USED.
         BNZ   IN003075       IF NOT, BRANCH TO PUT MESSAGE.
         LH    SIZEREG,CAVLRLDF IF SO, OBTAIN DEFAULT LINE
*                                  VALUE FOR VARIABLE FORMAT
*                                  RECORDS.
IN003075 EQU   *
         LA    ERR1REG,INERROR8 RELATIVE ERROR TO BE PROCESSED.
         LR    DATA1REG,SIZEREG SAVE VALUE FOR MESSAGE INSERTION.
         BAL   AREAREG,IN013010 BRANCH TO PUT ERROR MESSAGE.
         LTR   RETCDREG,RETCDREG CHECK IF PUTLINE WAS SUCCESSFUL.
         BNZ   IEEXIT1        IF NOT SUCCESSFUL, BRANCH TO EXIT.
         B     IN003040       BRANCH TO DEFAULT LRECL.
IN003080 EQU   *
         TM    CAEDFLAG,CAEDDISP CHECK IF DATA SET IS OLD.
         BO    IN003082       IF OLD, BRANCH TO CHECK IF RECFM=F
         LH    SIZEREG,CAFLRLMX MAXIMUM LRECL FOR DATA SET TYPE.
         CR    SIZEREG,LENREG CHECK IF LINE VALUE IS LESS THAN
*                                  OR EQUAL TO MAXIMUM.
         BL    IN003073       IF NOT, BRANCH TO PUT MESSAGE.
         B     IN003090       OTHERWISE, BRANCH TO PROCESS BLOCK
*                                  OPERAND.
IN003082 EQU   *
         TM    CACFLAG2,CARECFM CHECK IF RECFM = F.
         BO    IN003084       IF FIXED, BRANCH TO CHECK MAXIMUM.
         LH    SIZEREG,CAVLRLMX MAXIMUM LRECL FOR DATA SET TYPE.
         CR    SIZEREG,LENREG CHECK IF LINE VALUE IS LESS THAN
*                                  OR EQUAL TO MAXIMUM.
         BL    IN003070       IF NOT, BRANCH TO PUT MESSAGE.
         B     IN003090       OTHERWISE, BRANCH TO PROCESS BLOCK
*                                  OPERAND.
IN003084 EQU   *
         LH    SIZEREG,CAFLRLMX MAXIMUM LRECL FOR DATA SET TYPE.
         CR    SIZEREG,LENREG CHECK IF LINE VALUE IS LESS THAN
*                                  OR EQUAL TO MAXIMUM.
         BL    IN003070       IF NOT, BRANCH TO PUT MESSAGE.
IN003090 EQU   *
         TM    CAEDFLAG,CAEDDISP CHECK IF DATA SET IS NEW.
         BO    INP03010       IF DATA SET IS OLD, BRANCH TO CHECK
*                                  IF BLOCK OPERAND ENTERED.
         OI    CACFLAG2,CARECFM INDICATE THAT DATA SET HAS A
*                                  FIXED OR FIXED BLOCK FORMAT.
         B     IN004520       BRANCH TO VALIDATE BLOCK OPERAND.
         EJECT
IN004020 EQU   *
***********************************************************************
*                                                                     *
*   VALIDATE BLOCK OPERAND.                                           *
*                                                                     *
*   NEW DATA SET, BLOCK NOT SPECIFIED.  BLKSIZE IS DEFAULTED TO       *
*   VALUE SPECIFIED AT SYSGEN TIME FOR DATA SET TYPE.                 *
*                                                                     *
*   NEW DATA SET, BLOCK SPECIFIED.  CONVERT BLOCK OPERAND TO BINARY.  *
*   IF DATA SET HAS RECFM = V, CHECK THAT BLKSIZE IS GREATER THAN OR  *
*   EQUAL TO LRECL +4 AND LESS THAN 32760.  IF DATA SET HAS           *
*   RECFM = F, CHECK THAT BLKSIZE / LRECL IS AN INTEGER.  ISSUE       *
*   DEVTYPE MACRO INSTRUCTION TO OBTAIN TRACK CAPACITY.  CHECK        *
*   BLKSIZE TO DETERMINE IF ONE BLOCK WILL FIT ON ONE TRACK OF        *
*   THE OUTPUT DEVICE.  WHEN ANY OF THESE TESTS FAIL, NOTIFY USER     *
*   AND USE BLKSIZE SPECIFIED AT SYSGEN TIME.                         *
*                                                                     *
*   OLD DATA SET.  DETERMINE IF LINE OR BLOCK OR BOTH OPERANDS WERE   *
*   SPECIFIED.  IF SO, INFORM USER THAT OPERAND IS IGNORED.           *
*                                                                     *
***********************************************************************
         LA    AREAREG,INDEVTYP ADDRESS OF DEVTYPE WORK AREA.
         LA    SIZEREG,CAEDDDN ADDRESS OF DDNAME FOR DEVTYPE.
         DEVTYPE (SIZEREG),(AREAREG),DEVTAB OBTAIN TRACK SIZE.
         LTR   RETCDREG,RETCDREG CHECK IF DEVTYPE SUCCESSFUL.
         BZ    IN004025       IF SUCCESSFUL, BRANCH TO VALIDATE
*                                  BLOCK OPERAND.
         LA    ERR1REG,INERROR2 RELATIVE ERROR TO BE PROCESSED.
         LR    DATA2REG,RETCDREG SAVE RETURN CODE FOR MESSAGE.
         O     DATA2REG,IEDEVTYP INDICATE ROUTINE NAME AS DEVTYPE
         BAL   AREAREG,IN013010 BRANCH TO PUT ERROR MESSAGE.
         B     IEEXIT1        BRANCH TO TERMINATE EDIT.
IN004025 EQU   *
         L     LENREG,CAUTILNO LAST BLOCK POINTER FROM DSCB.
         LTR   LENREG,LENREG  CHECK FOR EMPTY DATA SET.
         BZ    IN004420       IF EMPTY, NO COMPUTATION NECESSARY.
         SRL   LENREG,D8(D0)  ROUND TTR POINTER UP TO NEXT FULL
         LA    LENREG,D1(,LENREG)  TRACK.
************************************************************** @ZA85473
*     THE DATA SET IS AN OLD, NON-EMPTY DATA SET.            * @ZA85473
*     ISSUE THE TRKCALC MACRO TO FIND OUT HOW MANY BLOCKS    * @ZA85473
*     WILL FIT ON ONE TRACK OF THE DATA SET.                 * @ZA85473
************************************************************** @ZA85473
         LA    AREAREG,CACLCPRM    GET TRKCALC PARM LIST ADDR  @ZA85473
         L     SIZEREG,INDEVTYP    GET UCBTYP FIELD            @ZA85473
         ST    SIZEREG,CACLCTYP    PUT UCBTYP INTO PLIST       @ZA85473
         LA    SIZEREG,D1          GET R VALUE FOR TRKCALC     @ZA85473
         SLL   SIZEREG,24          MOVE IT TO HIGH-ORDER BYTE  @ZA85473
         ICM   SIZEREG,3,CABLKS    PUT BLKSIZE IN LOW HALFWORD @ZA85473
         TRKCALC FUNCTN=TRKCAP,TYPE=*,REGSAVE=YES,             @ZA85473X
               RKDD=(SIZEREG),MF=(E,(AREAREG))                 @ZA85473
         LR    SIZEREG,ENTCDREG   MOVE COUNT TO SIZEREG        @ZA85473
         LH    AREAREG,CALRECL LRECL FOR RECFM = F.
IN004220 EQU   *
         LH    RETREG,CABLKS  OBTAIN BLKSIZE FOR DATA SET AND
         SRDL  RETREG,D32(D0)      DIVIDE BY LRECL TO DETERMINE
         DR    RETREG,AREAREG      NUMBER OF RECORDS PER BLOCK.
         LTR   RETREG,RETREG  CHECK IF BLKSIZE IS MULTIPLE OF
         BZ    IN004320            LRECL.  IF SO, BRANCH TO
*                                  COMPUTE NUMBER OF RECORDS IN
*                                  DATA SET.
         LA    RETCDREG,D1(,RETCDREG) IF BLKSIZE NOT A MULTIPLE
*                                  OF LRECL, INCREASE BY 1.
         SR    RETREG,RETREG  ZERO REGISTER FOR MULTIPLICATION.
IN004320 EQU   *
         MR    RETREG,SIZEREG COMPUTE TOTAL NUMBER OF RECORDS IN
         MR    RETREG,LENREG       OLD DATA SET AND SAVE FOR
         ST    RETCDREG,CAUTILNO   IKJEBEUI.
IN004420 EQU   *
         TM    CAEDFLAG,CAEDDISP CHECK IF DATA SET IS NEW.
         BO    IN005020       IF DATA SET IS OLD, BRANCH TO CHECK
*                                  IF SCAN OPERAND ENTERED.
IN004520 EQU   *
         CLC   INBLK(L'IENOKEYW),IENOKEYW CHECK IF BLOCK OPERAND
*                                  SPECIFIED.
         BE    IN004070       IF NOT, BRANCH TO MAKE SURE LINE
*                                  AND BLOCK OPERANDS ARE
*                                  COMPATIBLE.
         L     AREAREG,INBLKSZE+INBLKPT ADDRESS OF BLOCK VALUE.
         LH    SIZEREG,INBLKSZE+INBLKLN LENGTH OF LINE VALUE.
         BAL   RETREG,INCVBIN BRANCH TO CONVERT TO BINARY.
         TM    CACFLAG2,CARECFM CHECK IF RECFM = F.
         BO    IN004050       IF FIXED, BRANCH TO CHECK BLOCK
*                                  OPERAND.
         LH    SIZEREG,CALRECL OBTAIN LRECL AND ADD 4 TO COMPUTE
         LA    SIZEREG,D4(PARMREG0,SIZEREG) REQUIRED BLOCKSIZE
         CR    SIZEREG,LENREG CHECK IF BLKSIZE IS GREATER THAN OR
         BNH   IN004060            EQUAL TO LRECL + 4.  IF SO,
*                                  BRANCH TO CHECK MAXIMUM.
         LA    ERR2REG,M3334  RELATIVE SECOND LEVEL MESSAGE.
IN004030 EQU   *
         LA    ERR1REG,INERROR9 RELATIVE ERROR TO BE PROCESSED.
         BAL   AREAREG,IN004080 BRANCH TO COMPUTE DEFAULT BLKSIZE
         LH    DATA1REG,CABLKS DEFAULT BLKSIZE FOR INSERTION.
         BAL   AREAREG,IN013010 BRANCH TO PUT ERROR MESSAGE.
         LTR   RETCDREG,RETCDREG CHECK IF PUTLINE WAS SUCCESSFUL.
         BNZ   IEEXIT1        IF NOT SUCCESSFUL, BRANCH TO EXIT.
         B     IN005020       BRANCH TO CHECK SCAN OPERAND.
IN004050 EQU   *
         LR    RETREG,LENREG  COPY BLKSIZE AND PLACE IN
         SRDL  RETREG,D32(PARMREG0) REGISTER FOR DIVISION.
         LH    SIZEREG,CALRECL OBTAIN LRECL AND PERFORM THE
         DR    RETREG,SIZEREG      BLKSIZE / LRECL DIVISION.
         LTR   RETREG,RETREG  CHECK IF QUOTIENT IS AN INTEGER.
         BZ    IN004060       IF BLOCK IS AN INTEGER MULTIPLE OF
*                                  LINE, BRANCH TO CHECK IF LESS
*                                  THAN MAXIMUM (SYSGEN) VALUE.
         LA    ERR2REG,M3333  RELATIVE SECOND LEVEL MESSAGE.
         B     IN004030       BRANCH TO CALL MESSAGE ROUTINE.
IN004060 EQU   *
         CH    LENREG,CABLKS  CHECK IF BLKSIZE IS GREATER THAN OR
         BNH   IN004065            EQUAL TO MAXIMUM.  IF SO,
*                                  DETERMINE IF LESS THAN OR
*                                  EQUAL TO TRACK CAPACITY.
*                             OTHERWISE, INFORM USER OF ERROR.
         LA    ERR2REG,M3332  RELATIVE SECOND LEVEL MESSAGE.
         B     IN004030       BRANCH TO CALL MESSAGE ROUTINE.
IN004065 EQU   *
         STH   LENREG,CABLKS  INDICATE BLKSIZE IN COMMUNICATION
*                                  AREA.
         B     IN005020       BRANCH TO CHECK SCAN OPERAND.
IN004070 EQU   *
         LA    AREAREG,IN005020 ADDRESS OF NEXT CODE SEQUENCE
*                                  TO BE EXECUTED.
IN004080 EQU   *
         TM    CACFLAG2,CARECFM CHECK IF RECFM = F.
         BZ    IN004090       IF RECFM = V, LINE IS COMPATIBLE
*                                  WITH BLOCK.
         LH    RETREG,CABLKS  OBTAIN BLKSIZE AND PLACE IN
         SRDL  RETREG,D32(PARMREG0) REGISTER FOR DIVISION.
         LH    SIZEREG,CALRECL OBTAIN LRECL AND PERFORM THE
         DR    RETREG,SIZEREG      BLKSIZE / LRECL DIVISION.
         LTR   RETREG,RETREG  CHECK IF QUOTIENT IS AN INTEGER.
         BZ    IN004090       IF BLKSIZE IS A MULTIPLE OF LRECL,
*                                  BRANCH TO CHECK SCAN OPERAND.
         MH    RETCDREG,CALRECL COMPUTE BLKSIZE THAT IS A
         STH   RETCDREG,CABLKS     MULTIPLE OF LRECL AND SAVE IN
*                                  THE COMMUNICATION AREA.
IN004090 EQU   *
         BR    AREAREG        RETURN TO CALLER.
         EJECT
IN005020 EQU   *
***********************************************************************
*                                                                     *
*   VALIDATE SCAN OPERAND.                                            *
*                                                                     *
*   DETERMINE IF USER ENTERED SCAN OR NOSCAN.  IF SCAN WAS ENTERED,   *
*   CHECK IF VALID FOR DATA SET TYPE.  IF NOT VALID, INFORM USER      *
*   AND IGNORE OPERAND.  IF VALID, ISSUE A BLDL MACRO INSTRUCTION     *
*   FOR THE SYNTAX CHECKER NAME TO DETERMINE IF IN SYSTEM.  IF        *
*   SYNTAX CHECKER NOT AVAILABLE, ZERO SYNTAX CHECKER NAME AND        *
*   INFORM USER.                                                      *
*                                                                     *
***********************************************************************
         TM    CADSATTR,CASCAN CHECK IF SYNTAX CHECKING ALLOWED.
         BNO   IN005035       IF SYNTAX CHECKING NOT ALLOWED,
*                                  BRANCH TO CHECK IF SCAN/NOSCAN
*                                  OPERAND SPECIFIED.
         MVC   INBLDWD(L'IELSTDSC),IELSTDSC INITIALIZE LIST
*                                  DESCRIPTION FIELD FOR BLDL.
         MVC   INSYNNME(L'CASYNAME),CASYNAME MOVE MODULE NAME TO
*                                  BLDL LIST.
         BLDL  0,INSYNCHK     BLDL ON SYNTAX CHECKER MODULE NAME.
         LTR   RETCDREG,RETCDREG CHECK IF SYNTAX CHECKER IN
*                                  SYSTEM.
         BZ    IN005035       IF PRESENT, BRANCH TO INDICATE THAT
*                                  USER REQUESTED SYNTAX CHECKING
         XC    CASYNAME(L'CASYNAME),CASYNAME ZERO SYNTAX CHECKER
*                                  NAME FIELD TO INDICATE NOT
*                                  AVAILABLE.
IN005035 EQU   *
         CLC   INSCN(L'IEKEYDEF),IEKEYDEF CHECK IF SCAN SPECIFIED
         BE    IN005050       IF NOSCAN SPECIFIED, BRANCH TO
*                                  CHECK NUM/NONUM OPERAND.
         TM    CADSATTR,CASCAN CHECK IF SYNTAX CHECKING ALLOWED.
         BO    IN005040       IF ALLOWED, BRANCH TO CHECK IF
*                                  SYNTAX CHECKER OR PREPROCESSOR
*                                  EXISTS IN SYSTEM.
IN005037 EQU   *
         LA    ERR1REG,INERRORA RELATIVE ERROR TO BE PROCESSED.
         BAL   AREAREG,IN013010 BRANCH TO PUT ERROR MESSAGE.
         B     IEEXIT1        BRANCH TO RETURN WITH ERROR RETURN
*                                  CODE.
IN005040 EQU   *
         LTR   RETCDREG,RETCDREG CHECK IF CHECKER IN SYSTEM.
         BZ    IN005045       IF PRESENT, BRANCH TO INDICATE USER
*                                  REQUESTED SYNTAX CHECKING.
         B     IN005037       BRANCH TO ISSUE ERROR MESSAGE.
IN005045 EQU   *
         OI    CACFLAG2,CASCANON INDICATE THAT USER HAS REQUESTED
*                                  SYNTAX CHECKING.
         EJECT
IN005050 EQU   *
***********************************************************************
*                                                                     *
*   VALIDATE NUM/NONUM OPERAND.                                       *
*                                                                     *
*   IF USER SPECIFIES NONUM, INDICATE THAT DATA SET IS NOT (DOES NOT) *
*   TO CONTAIN SEQUENCE NUMBERS.  IF THE USER SPECIFIES NUM, CHECK    *
*   IF SEQUENCE NUMBER AND START POSITION ARE ALSO SPECIFIED.  WHEN   *
*   START POSITION AND LENGTH ARE SPECIFIED, CHECK THAT DATA SET TYPE *
*   IS ASM.  IF DATA SET TYPE IS NOT ASM, PUT DIAGNOSTIC TO TERMINAL. *
*                                                                     *
*   IF DATA SET TYPE IS ASM AND START POSITION AND LENGTH ARE         *
*   SPECIFIED, CHECK THAT START POSITION IS BETWEEN 73 AND 80 AND     *
*   THAT LENGTH IS LESS THAN OR EQUAL TO (80 - START POSITION + 1).   *
*                                                                     *
***********************************************************************
         CLC   INNUM(L'IEKEYDEF),IEKEYDEF DETERMINE IF NONUM WAS
*                                  SPECIFIED.
         BE    IN005060       IF NUM SPECIFIED, BRANCH TO PROCESS
*                                  SUBFIELD OPERANDS.
         TM    CADSATTR,CALNNUM CHECK IF DATA SET MUST BE LINE
*                                  NUMBERED.
         BZ    IN005055       IF NOT, BRANCH TO INDICATE DATA SET
*                                  IS NOT TO (DOES NOT) CONTAIN
*                                  LINE NUMBERS.
         LA    ERR1REG,INERRORB RELATIVE ERROR TO BE PROCESSED.
         BAL   AREAREG,IN013010 BRANCH TO PUT ERROR MESSAGE.
         LTR   RETCDREG,RETCDREG CHECK IF PUTLINE WAS SUCCESSFUL.
         BNZ   IEEXIT1         IF NOT, BRANCH TO RETURN TO TMP.
         B     IN006040       BRANCH TO CHECK IF SEQUENCE NUMBER
*                                  START POSITION AND LENGTH ARE
*                                  CORRECT FOR LRECL AND RECFM.
IN005055 EQU   *
         OI    CACFLAG1,CANONUM INDICATE DATA SET DOES NOT (IS
*                                  NOT TO) CONTAIN SEQUENCE NOS.
         B     IN006040       BRANCH TO CHECK SEQUENCE NUMBER
*                                  START POSITION AND LENGTH.
IN005060 EQU   *
         TM    INNOSTP+INSNOFLG,INSNOOMT CHECK IF START POSITION
*                                  WAS ENTERED.
         BZ    IN006040       IF START POSITION NOT ENTERED,
*                                  BRANCH TO CHECK IF SEQUENCE
*                                  NUMBER START POSITION AND
*                                  LENGTH ARE CORRECT.
         CLI   CADSCODE,CAASM CHECK IF DATA SET TYPE IS ASM.
         BE    IN005065       IF ASM, BRANCH TO PROCESS START
*                                  POSITION AND LENGTH.
         LA    ERR2REG,M3603  INDICATE THAT NUM SUBFIELDS WERE
*                                  SPECIFIED FOR NON-ASM DATA SET
*                                  TYPE.
         B     IN005075       BRANCH TO PUT ERROR MESSAGE.
IN005065 EQU   *
         L     AREAREG,INNOSTP+INSNOPT ADDRESS OF START POSITION.
         LH    SIZEREG,INNOSTP+INSNOLN LENGTH OF OPERAND.
         BAL   RETREG,INCVBIN BRANCH TO CONVERT TO BINARY.
         LR    STRTNREG,LENREG SAVE START POSITION.
         TM    INNOLEN+INSNOFLG,INSNOOMT CHECK IF SEQUENCE NUMBER
*                                  LENGTH ALSO ENTERED.
         BO    IN005066       IF ENTERED, BRANCH TO CONVERT TO
*                                  BINARY.
         SR    LENREG,LENREG  INDICATE THAT LENGTH NOT ENTERED.
         B     IN005067       BRANCH TO VALIDATE START POSITION.
IN005066 EQU   *
         L     AREAREG,INNOLEN+INSNOPT ADDRESS OF LENGTH.
         LH    SIZEREG,INNOLEN+INSNOLN LENGTH OF OPERAND SUBFIELD.
         BAL   RETREG,INCVBIN BRANCH TO CONVERT TO BINARY.
IN005067 EQU   *
         CH    STRTNREG,IESTP073 CHECK IF START POSITION GREATER
         BL    IN005070            THAN OR EQUAL TO COLUMN 73. IF
*                                  NOT, BRANCH TO PUT DIAGNOSTIC.
         CH    STRTNREG,IESTP080 CHECK IF START POSITION IS LESS
         BNH   IN005080            THAN OR EQUAL TO 80.  IF NOT,
*                                  PUT DIAGNOSTIC TO TERMINAL.
IN005070 EQU   *
         LA    ERR2REG,M3601  INDICATE THAT START COLUMN IS IN
*                                  ERROR.
IN005075 EQU   *
         LA    ERR1REG,INERRORD RELATIVE ERROR TO BE PROCESSED.
         BAL   AREAREG,IN013010 BRANCH TO PUT ERROR MESSAGE.
         LTR   RETCDREG,RETCDREG CHECK IF PUTLINE WAS SUCCESSFUL.
         BNZ   IEEXIT1        IF NOT, BRANCH TO RETURN TO TMP.
         B     IN006050       BRANCH TO CHECK CAPS/ASIS KEYWORD.
IN005080 EQU   *
         LH    SIZEREG,IESTP080 COMPUTE THE QUANTITY --
         LA    SIZEREG,D1(PARMREG0,SIZEREG) 80 - SEQUENCE NUMBER
         SR    SIZEREG,STRTNREG    START POSITION + 1.
         LTR   LENREG,LENREG  CHECK IF SEQUENCE NUMBER LENGTH
*                                  ALSO ENTERED.
         BZ    IN005090       IF NOT ENTERED, BRANCH TO COMPUTE
*                                  OFFSET JUST COMPUTED.
         CR    LENREG,SIZEREG CHECK THAT LENGTH IS LESS THAN OR
         BNH   IN006010            EQUAL TO 80 - START POSITION
*                                  + 1.  IF SO, BRANCH TO UPDATE
*                                  COMMUNICATION AREA.
         LA    ERR2REG,M3602  INDICATE THAT LENGTH IS IN ERROR.
         B     IN005075       BRANCH TO PUT ERROR MESSAGE.
IN005090 EQU   *
         LR    LENREG,SIZEREG COMPUTED SEQUENCE NUMBER LENGTH.
IN006010 EQU   *
         STC   STRTNREG,CALINE SAVE START POSITION IN
*                                  COMMUNICATION AREA.
         STC   LENREG,CALENGTH SAVE SEQUENCE NUMBER LENGTH IN
*                                  COMMUNICATION AREA.
         OI    CACFLAG2,CASEQCOL INDICATE THAT DEFAULT SEQUENCE
*                                  FIELD START COLUMN AND LENGTH
*                                  ARE NOT BEING USED.
         B     IN006050       BRANCH TO CHECK CAPS/ASIS KEYWORD.
IN006040 EQU   *
         TM    CACFLAG2,CARECFM CHECK IF RECFM = V.  IF SO,
         BZ    IN006045            BRANCH TO ASSURE THAT SEQUENCE
*                                  NUMBER START POSITION AND
*                                  LENGTH ARE CORRECT.
         TM    CADSATTR,CALRECLX MUST LRECL = 80.
         BO    IN006050       IF SO, BRANCH TO CHECK CAPS/ASIS
*                                  KEYWORD.
         TM    CADSATR2,CALINTAB CHECK IF SEQUENCE POSIT. IS     Y02676
*                                  INCLUDED IN FIRST TAB VALUE.  Y02676
         BO    IN006050       IF SO, ACCEPT DEFAULT SEQ. VALUES. Y02676
         LH    SIZEREG,CALRECL OBTAIN LRECL TO BE USED FOR DATA
*                                  SET.
         LA    LENREG,D7(PARMREG0,PARMREG0) CONSTANT 7 USED TO
*                                  FIND STARTING COLUMN NUMBER.
*   COMPUTE STARTING COLUMN NUMBER
*   START NUMBER = LRECL + 1 - SEQUENCE NUMBER LENGTH WHERE LENGTH
*   IS ALWAYS 8.
         SR    SIZEREG,LENREG COMPUTE START COLUMN NUMBER AND
         LTR   SIZEREG,SIZEREG     CHECK IF RECORD CAN CONTAIN
*                                  DATA, I.E., LRECL GT LINE
*                                  NUMBER SIZE.
         BP    IN006043       IF LRECL GT LINE NUMBER SIZE,
*                                  BRANCH TO SAVE START POSITION.
         TM    CACFLAG1,CANONUM CHECK IF NONUM ENTERED.
         BO    IN006050       BRANCH TO CHECK CAPS/ASIS OPERAND
*                                  IF NONUM.
*
*   USER SUPPLIED INCOMPATIBLE LINE AND NUM OPERANDS.  ISSUE
*   MESSAGE AND TERMINATE EDIT.
*
         LA    ERR1REG,INERRORH RELATIVE ERROR TO BE PROCESSED.
         BAL   AREAREG,IN013010 BRANCH TO PUT ERROR MESSAGE.
         B     IEEXIT1        BRANCH TO TERMINATE EDIT.
IN006043 EQU   *
         STC   SIZEREG,CALINE SAVE SEQUENCE NUMBER START POSITION
         OI    CACFLAG2,CASEQCOL INDICATE THAT DEFAULT SEQUENCE
*                                  FIELD START COLUMN IS NOT
*                                  BEING USED.
         B     IN006050       BRANCH TO CHECK CAPS/ASIS OPERAND.
IN006045 EQU   *
         CLI   CALINE,D1      CHECK FOR START POSITION = 1       Y02676
*                                  IN VARIABLE RECORD.           Y02676
         BE    IN006050       IF SO, ACCEPT DEFAULT SEQ. VALUES. Y02676
         MVI   CALINE,D1      START COLUMN POSITION, RECFM = V.
         MVI   CALENGTH,D8    SEQUENCE NUMBER LENGTH, RECFM = V.
         EJECT
IN006050 EQU   *
***********************************************************************
*                                                                     *
*   VALIDATE CAPS/ASIS KEYWORD.                                       *
*                                                                     *
*   DETERMINE WHETHER OR NOT CAPS OR AS WAS ENTERED.  IF CAPS WAS     *
*   ENTERED, INDICATE ALL DATA TO BE CONVERTED TO UPPER CASE.  IF     *
*   ASIS WAS ENTERED, DETERMINE IF PERMISSABLE FOR DATA SET TYPE.     *
*   IF NOT PERMISSABLE TO USE ASIS, INFORM USER AND USE DEFAULT.      *
*                                                                     *
***********************************************************************
         CLC   INFMT(L'IENOKEYW),IENOKEYW CHECK IF CAPS OR ASIS
*                                  WAS ENTERED.
         BE    IN006080       IF NEITHER, BRANCH TO SET CAPS/ASIS
*                                  FLAG BASED ON DATA SET
*                                  ATTRIBUTES.
         CLC   INFMT(L'IECPSSUP),IECPSSUP CHECK IF CAPS ENTERED.
         BE    IN006085       IF CAPS SPECIFIED, BRANCH TO SET
*                                  CAPS FLAG IN COMMUNICATION
*                                  AREA.
         TM    CADSATTR,CACAPSRQ CHECK IF CAPS ARE REQUIRED.
         BZ    IN006090       IF NOT, BRANCH TO PROCESS PL/I
*                                  DATA SET TYPE.
         LA    ERR1REG,INERRORE RELATIVE ERROR TO BE PROCESSED.
         BAL   AREAREG,IN013010 BRANCH TO PUT ERROR MESSAGE.
         LTR   RETCDREG,RETCDREG CHECK IF PUTLINE WAS SUCCESSFUL.
         BNZ   IEEXIT1        IF NOT, BRANCH TO RETURN TO TMP.
         B     IN006085       OTHERWISE, BRANCH TO SET CAPS FLAG
*                                  IN COMMUNICATION AREA.
IN006080 EQU   *
         TM    CADSATTR,CACAPSDF DETERMINE IF ASIS IS THE
*                                  DEFAULT.
         BZ    IN006090       IF ASIS, BRANCH TO CHECK PLI DSTYPE
IN006085 EQU   *
         OI    CACFLAG1,CACAPS INDICATE THAT ALL INPUT DATA IS
*                                  TO BE TRANSLATED TO UPPER CASE
         EJECT
IN006090 EQU   *
***********************************************************************
*
* IPLI KEYWORD SUBFIELD OPERAND.
*
* DETERMINE WHETHER CHAR48 OR CHAR60 WAS ENTERED.  SET THE
* APPROPRIATE BIT IN CACFLAG6 OF THE COMMUNICATION AREA BASED ON
* WHAT WAS ENTERED ON THE COMMAND, AND BRANCH TO CHECK THE
* DISPOSITION OF THE EDIT DATA SET.
*
***********************************************************************
         SPACE 2
         L     AREAREG,INPDLPTR ADDRESS OF PROMPT PDL.           A45713
         LTR   AREAREG,AREAREG CHECK IF PROMPT PDL PRESENT.      A45713
         BNP   IN006095       IF NO, BRANCH TO PROCESS SUBFLD.   A45713
         LA    LENREG,INPL1CL1     ADDRESS OF TYPE PDE IN MAIN   SM5064
*                                  (COMMAND) PDL.                SM5064
         SR    LENREG,DATAREG      COMPUTE OFFSET OF PDE FROM    SM5064
*                                  PDL ORIGIN.                   SM5064
         LA    PARMREG0,INPLICL1-ICDSTPDL  OBTAIN OFFSET TO      SM5064
*                                  CORRESPONDING PDE IN PROMPT   SM5064
*                                  PDL.                          SM5064
         SR    LENREG,PARMREG0     COMPUTE FACTOR TO BE          SM5064
*                                  SUBTRACTED FROM PROMPT PDL    SM5064
*                                  ORIGIN TO GIVE IT ADDRESSA-   SM5064
*                                  BILITY USING MAIN PDL DSECT.  SM5064
         LR    DATAREG,AREAREG ESTAB. ADDRESSABILITY TO PROMPT   A45713
*                                  PDL WHILE STILL REFERENCING   A45713
*                                  LABELS IN MAIN PDL.           A45713
IN006095 EQU   *                                                 A45713
         CLI   CADSCODE,CAIPLI CHECK IF DATA SET TYPE IS IPLI.
         BNE   IN007010       IF NOT, BRANCH TO CONTINUE
*                                  PROCESSING.
         CLC   INIPLICH(L'IEKEYDEF),IEKEYDEF CHECK IF CHAR60
*                                  SPECIFIED.
         BNH   IN007000       IF SO, BRANCH TO SET FLAG.
         OI    CACFLAG6,CACHAR48 INDICATE 48-CHARACTER SET.
         B     IN013020       BRANCH TO CHECK DISPOSITION OF     A45714
*                                  EDIT DATA SET.
IN007000 EQU   *
         OI    CACFLAG6,CACHAR60 INDICATE 60-CHARACTER SET.
         B     IN013020       BRANCH TO CHECK DISPOSITION OF     A45714
*                                  EDIT DATA SET.
         EJECT
IN007010 EQU   *
***********************************************************************
*                                                                     *
*   PLI KEYWORD SUBFIELD OPERAND.                                     *
*                                                                     *
*   CONVERT SOURCE MARGIN(S) TO BINARY AND VALIDITY CHECK.  LEFT      *
*   SOURCE MARGIN MUST BE LESS THAN RIGHT SOURCE MARGIN AND RIGHT     *
*   SOURCE MARGIN MUST BE LESS THAN SEQUENCE NUMBER START POSITION    *
*   (IF DATA SET IS SEQUENCE NUMBERED) OR LESS THAN OR EQUAL TO LINE  *
*   (IF DATA SET DOES NOT CONTAIN SEQUENCE NUMBERS).  IF AN ERROR     *
*   IS ENCOUNTERED AND THE DATA SET IS NEW, NOTIFY USER AND DEFAULT.  *
*                                                                     *
***********************************************************************
         CLI   CADSCODE,CAPLI CHECK IF DATA SET TYPE IS PL/I.
         BE    IN007050       IF PL/I, BRANCH TO CHECK SUBFIELD
*                                  OPERANDS.
         CLI   CADSCODE,CAPLIF CHECK IF DATA SET TYPE IS PL/I (F)
         BNE   IN013020       IF NO, BRANCH TO CHECK DISPOSITION A45714
*                                  OF EDIT DATA SET.
IN007050 EQU   *
         TM    INPL1CL1+INSMGFLG,INOPRNDO DETERMINE IF USER
*                                  SPECIFIED LEFT SOURCE MARGIN.
         BZ    IN007087       IF NOT, BRANCH TO DEFAULT.
         LH    EPLOCREG,CALRECL ACQUIRE LOGICAL RECORD LENGTH.
         TM    CACFLAG1,CANONUM CHECK IF DATA SET NONUM.
         BO    IN007053       IF SO, BRANCH TO CHECK IF FIXED
*                                  OR VARIABLE RECORD FORMAT.
         SR    SIZEREG,SIZEREG
         IC    SIZEREG,CALENGTH ACQUIRE SEQUENCE NUMBER LENGTH.
         SR    EPLOCREG,SIZEREG SET MAXIMUM SOURCE MARGIN VALUE
*                                  FOR FIXED, NUM DATA SETS.
IN007053 EQU   *
         TM    CACFLAG2,CARECFM CHECK IF FIXED OR VARIABLE
*                                  RECORD FORMAT.
         BO    IN007056       IF FIXED, BRANCH TO VALIDITY CHECK
*                                  MARGINS SPECIFIED.
         LA    SIZEREG,D4     IF VARIABLE,
         SR    EPLOCREG,SIZEREG    SUBTRACT 4 TO GIVE MAXIMUM
*                                  MARGIN VALUE.
IN007056 EQU   *
         L     AREAREG,INPL1CL1+INSMGPT ADDRESS OF LEFT SOURCE
*                                  MARGIN.
         LH    SIZEREG,INPL1CL1+INSMGLN LENGTH OF LEFT SOURCE
*                                  MARGIN.
         BAL   RETREG,INCVBIN BRANCH TO CONVERT TO BINARY.
         LR    STRTNREG,LENREG SAVE LEFT SOURCE MARGIN.
         TM    INPL1CL2+INSMGFLG,INOPRNDO DETERMINE IF USER
*                                  SPECIFIED RIGHT SOURCE MARGIN.
         BO    IN007060       IF SPECIFIED, BRANCH TO PROCESS -
         SR    LENREG,LENREG  OTHERWISE, INDICATE NOT SPECIFIED.
         B     IN007062       BRANCH TO VALIDATE SOURCE MARGINS.
IN007060 EQU   *
         L     AREAREG,INPL1CL2+INSMGPT ADDRESS OF RIGHT SOURCE
*                                  MARGIN.
         LH    SIZEREG,INPL1CL2+INSMGLN LENGTH OF RIGHT SOURCE
*                                  MARGIN.
         BAL   RETREG,INCVBIN BRANCH TO CONVERT TO BINARY.
IN007062 EQU   *
         CR    STRTNREG,LENREG CHECK IF LEFT MARGIN IS LESS THAN
*                                  RIGHT MARGIN.
         BL    IN007070       IF LEFT MARGIN IS LESS THAN RIGHT
*                                  MARGIN, BRANCH TO VALIDATE
*                                  RIGHT MARGIN.
         LTR   LENREG,LENREG  TEST IF RIGHT MARGIN SPECIFIED.
         BNZ   IN007085       IF SPECIFIED, BRANCH TO PUT ERROR
*                                  MESSAGE.
         LA    PARMREG1,INRSRCMG DEFAULT RIGHT SOURCE MARGIN.
         CR    STRTNREG,PARMREG1 CHECK IF LEFT MARGIN IS LESS
         BNL   IN007085            THAN RIGHT MARGIN.  IF NOT,
*                                  BRANCH TO PUT ERROR MESSAGE.
         CR    STRTNREG,EPLOCREG CHECK IF LEFT SOURCE MARGIN
*                                  EXCEEDS MAXIMUM ALLOWABLE.
         BH    IN007085       IF SO, BRANCH TO PUT ERROR MESSAGE.
         STC   STRTNREG,CAPLILFM INDICATE LEFT SOURCE MARGIN IN
*                                  COMMUNICATION AREA.
         MVI   CAPLIRTM,INRSRCMG DEFAULT RIGHT MARGIN TO 72.
         B     IN008010       BRANCH TO CHECK CHARACTER SET.
IN007070 EQU   *
         STC   STRTNREG,CAPLILFM INDICATE LEFT SOURCE MARGIN IN
*                                  COMMUNICATION AREA.
         CR    LENREG,EPLOCREG CHECK IF RIGHT SOURCE MARGIN
*                                  EXCEEDS MAXIMUM ALLOWABLE.
         BNH   IN007090       IF NOT, BRANCH TO SAVE RIGHT SOURCE
*                                  MARGIN.
IN007085 EQU   *
         LR    DATA1REG,STRTNREG BUILD PARAMETER VALUE FOR
         SLL   DATA1REG,D16(D0)    MESSAGE ROUTINE CONTAINING
         OR    DATA1REG,LENREG     OPERANDS ENTERED.
         LA    ERR1REG,INERRORC RELATIVE ERROR TO BE PROCESSED
         BAL   AREAREG,IN013010 BRANCH TO PUT ERROR MESSAGE.
         LTR   RETCDREG,RETCDREG CHECK IF PUTLINE WAS SUCCESSFUL.
         BNZ   IEEXIT1        IF NOT, BRANCH TO RETURN TO TMP.
IN007087 EQU   *
         MVI   CAPLILFM,INLSRCMG DEFAULT LEFT AND RIGHT SOURCE
         MVI   CAPLIRTM,INRSRCMG   MARGINS TO (2,72).
         B     IN008010       BRANCH TO CHECK CHARACTER SET.
IN007090 EQU   *
         STC   LENREG,CAPLIRTM SAVE RIGHT SOURCE MARGIN.
IN008010 EQU   *
         MVC   CACHKOPT(L'CACHKOPT),CAPLILFM INIT CHKR OPT WORD. A45714
         CLC   INPL1TYP(L'IEKEYDEF),IEKEYDEF CHECK IF CHAR60
*                                  SPECIFIED.
         BE    IN008020       IF CHAR60, BRANCH TO INDICATE IN
*                                  COMMUNICATION AREA.
         OI    CACFLAG6,CACHAR48 INDICATE CHAR48 IN COMMUNICATION
*                                  AREA.
         B     IN013020       BRANCH TO CHECK DISPOSITION OF     A45714
*                                  EDIT DATA SET.
IN008020 EQU   *
         OI    CACFLAG6,CACHAR60 INDICATE CHAR60 IN COMMUNICATION
*                                  AREA.
         B     IN013020       BRANCH TO CHECK DISPOSITION OF     A45714
*                                  EDIT DATA SET.
         EJECT
IN013010 EQU   *
         L     EPLOCREG,IEMSGRTN ADDRESS OF MESSAGE ROUTINE.
         CALL  (15),((COMMREG),(ERR1REG),(ERR2REG),(DATA1REG),         X
               (DATA2REG)),MF=(E,INSVCRTN) BRANCH TO PUT ERROR         X
                                   MESSAGE.
         BR    AREAREG        RETURN TO CALLER.
IN013020 EQU   *                                                 A45714
.* CHECK IF USER DATA SET TYPE SUBFIELD SPECIFIED.               A45714
         AIF   (&SW EQ 0).TAG16                                  A45714
         EJECT                                                   A45714
**************************************************************** A45714
*                                                                A45714
*   USER DATA SET TYPE KEYWORD SUBFIELD OPERAND.                 A45714
*                                                                A45714
*   VERIFY PRESENCE AND INVOKE USER EXIT TO ENCODE SUBFIELD      A45714
*   PARAMETERS INTO A TWO BYTE FIELD 'CACHKOPT' IN THE EDIT      A45714
*   COMMUNICATION AREA.  THE EXIT ROUTINE IS PASSED A THREE      A45714
*   WORD PARAMETER LIST IN THE FOLLOWING FORM:                   A45714
*                                                                A45714
*                 WORD 1 - ADDRESS OF SUBFIELD PDE.              A45714
*                 WORD 2 - ADDRESS OF ANSWER AREA.               A45714
*                 WORD 3 - ADDRESS OF CPPL.                      A45714
*                                                                A45714
*   WHERE THE PDE IS OF THE FORM GENERATED BY THE IKJPARS        A45714
*   IKJIDENT MACRO AND THE ANSWER AREA IS A HALFWORD FIELD.      A45714
*                                                                A45714
**************************************************************** A45714
         CLI   CAEXTNAM,D0    CHECK IF EXIT SUPPLIED.            A45714
         BE    IN013060       IF NO, BRANCH TO CHECK DISPOSITION A45714
*                                  OF EDIT DATA SET.             A45714
         LA    LENREG,D1      NUMBER OF BLDL ENTRIES.            A45714
         STH   LENREG,INBLDLNO                                   A45714
         LA    LENREG,INENTRYL LENGTH OF BLDL LIST.              A45714
         STH   LENREG,INBLDLLN                                   A45714
         MVC   INBLDLNM(L'INBLDLNM),CAEXTNAM MOVE EXIT NAME      A45714
*                                  INTO BLDL ENTRY LIST.         A45714
         BLDL  0,INBLDLST     ISSUE BLDL ON EXIT ROUTINE NAME.   A45714
         B     IN013030(RETCDREG) CHECK RETURN CODE FROM BLDL.   A45714
         SPACE
IN013030 EQU   *                                                 A45714
         B     IN013050       RC = 00, ROUTINE IN SYSTEM.        A45714
         B     IN013040       RC = 04, ROUTINE NOT FOUND.        A45714
*                             RC = 08, I/O ERROR DURING BLDL.    A45714
         LA    ERR1REG,INERROR2 RELATIVE ERROR TO BE PROCESSED.  A45714
         LA    ERR2REG,M3131  RELATIVE SECOND LEVEL MESSAGE.     A45714
         L     DATA2REG,IEINS003 MESSAGE INSERTION ADDRESS.      A45714
         BAL   AREAREG,IN013010 BRANCH TO PUT ERROR MESSAGE.     A45714
         B     IEEXIT1        BRANCH TO RETURN TO TMP.           A45714
         SPACE
IN013040 EQU   *                                                 A45714
         LA    ERR1REG,INERRORA RELATIVE ERROR TO BE PROCESSED.  A45714
         BAL   AREAREG,IN013010 BRANCH TO PUT ERROR MESSAGE.     A45714
         B     IEEXIT1        BRANCH TO RETURN TO TMP.           A45714
         SPACE
IN013050 EQU   *                                                 A45714
*   BUILD EXIT ROUTINE PARAMETER LIST.                           A45714
         LA    PDLREG,INUSERTY ADRESS OF SUBFIELD PDE.           A45714
         ST    PDLREG,INEXTPDE                                   A45714
         LA    PDLREG,CACHKOPT ADDRESS OF ANSWER AREA.           A45714
         ST    PDLREG,INEXTANS                                   A45714
         L     PDLREG,CAPTTMP  ADDRESS OF CP PARMLIST.           A45714
         ST    PDLREG,INEXTCPL                                   A45714
         LA    PARMREG1,INEXTPRM ADDRESS OF PARMLIST.            A45714
         LA    PDLREG,INBLDLNM ADDRESS OF BLDL LIST NAME.        A45714
         LINK  DE=(PDLREG),DCB=0 LINK TO EXIT ROUTINE.           A45714
         SPACE
IN013060 EQU   *                                                 A45714
.TAG16   ANOP                                                    A45714
         B     IEEXIT2        BRANCH TO CHECK DISPOSITION        A45714
*                                  OF EDIT DATA SET.             A45714
         EJECT
***********************************************************************
*                                                                     *
*   EXIT AREA -- RETURN TO INVOKING ROUTINE WITH A RETURN CODE TO     *
*   INDICATE SUCCESS OR FAILURE.  RETURN CODES ARE -- ZERO (ALL
*   OPERANDS ENTERED BY USER WERE CORRECT OR WERE DEFAULTED FOR
*   THE EDIT DATA SET TYPE), 4 (A TERMINAL ERROR WAS ENCOUNTERED,     *
*   TERMINATE EDIT).                                                  *
*                                                                     *
***********************************************************************
IEEXIT1  EQU   *
         LA    RETCDREG,D4(,D0) SET ERROR RETURN CODE.
         B     IEEXIT3        BRANCH TO RETURN TO CALLING ROUTINE
IEEXIT2  EQU   *
         SR    RETCDREG,RETCDREG SET SUCCESSFUL RETURN CODE.
IEEXIT3  EQU   *
         IKJEBERT (14,12),,RC=(15) RETURN TO CALLING ROUTINE.
         EJECT
***********************************************************************
*                                                                     *
*   CONVERT TO BINARY SUBROUTINE.                                     *
*                                                                     *
***********************************************************************
INCVBIN  EQU   *
         BCTR  SIZEREG,PARMREG0 REDUCE OPERAND LENGTH BY 1.
         EX    SIZEREG,IEPACK1 CHANGE TO PACKED DECIMAL FORMAT.
         CVB   LENREG,INDECBIN CHANGE TO FIXED BINARY FORMAT.
         BR    RETREG         RETURN TO CALLER.
         SPACE 5
INP03010 EQU   *
***********************************************************************
*                                                                     *
*   SUBROUTINE USED TO DETERMINE IF LINE AND/OR BLOCK KEYWORDS WERE   *
*   ENTERED ON THE EDIT COMMAND.                                      *
*                                                                     *
*   DETERMINE IF LINE OR BLOCK OR BOTH KEYWORDS WERE ENTERED.  IF     *
*   SO, INFORM USER THAT KEYWORD IS INVALID WITH OLD DATA SET.        *
*   WHEN COMPLETE, BRANCH TO CHECK SCAN OPERAND.                      *
*                                                                     *
***********************************************************************
         USING INECMNDD,DATAREG ADDRESSABILITY TO PARSE PDL.
         TM    CADSATTR,CALRECLX CHECK IF LRECL MUST BE 80.
         BZ    INP03015       IF NOT, BRANCH TO CHECK IF LINE
*                                  AND/OR BLOCK OPERAND SPECIFIED
         TM    CACFLAG2,CARECFM CHECK IF RECFM = V FOR OLD DATA
         BO    INP03015            SETS.  IF FIXED, BRANCH TO
*                                  CHECK IF USER SPECIFIED LINE
*                                  OPERAND.
         LA    ERR1REG,INERRORJ RELATIVE ERROR TO BE PROCESSED.
         BAL   AREAREG,IN013010 BRANCH TO PUT ERROR MESSAGE.
         B     IEEXIT1        BRANCH TO EXIT WITH ERROR RETURN
*                                  CODE.
INP03015 EQU   *
         CLC   INLNE(L'IENOKEYW),IENOKEYW CHECK IF LINE KEYWORD
*                                  WAS SPECIFIED.
         BE    INP03020       IF NOT, BRANCH TO CHECK IF BLOCK
*                                  KEYWORD WAS SPECIFIED.
         LA    ERR1REG,INERRORG RELATIVE ERROR TO BE PROCESSED.
         LA    DATA1REG,IEINS001 INSERTION RECORD FOR MESSAGE.
         BAL   AREAREG,IN013010 BRANCH TO PUT ERROR MESSAGE.
         LTR   RETCDREG,RETCDREG CHECK IF PUTLINE WAS SUCCESSFUL.
         BNZ   IEEXIT1        IF NOT, BRANCH TO RETURN TO TMP.
INP03020 EQU   *
         CLC   INBLK(L'IENOKEYW),IENOKEYW CHECK IF BLOCK KEYWORD
*                                  WAS SPECIFIED.
         BE    IN004020       IF NOT, BRANCH TO CALCULATE NUMBER
*                                  OF RECORDS IN OLD DATA SET.
         LA    ERR1REG,INERRORG RELATIVE ERROR TO BE PROCESSED.
         LA    DATA1REG,IEINS002 INSERTION RECORD FOR MESSAGE.
         BAL   AREAREG,IN013010 BRANCH TO PUT ERROR MESSAGE.
         LTR   RETCDREG,RETCDREG CHECK IF PUTLINE WAS SUCCESSFUL.
         BNZ   IEEXIT1        IF NOT, BRANCH TO RETURN TO TMP.
         B     IN004020       BRANCH TO CALCULATE NUMBER OF
*                                  RECORDS IN OLD DATA SET.
         SPACE 5
IN011010 EQU   *
***********************************************************************
*                                                                     *
*   VALIDATE GOFORT OPERANDS.                                         *
*                                                                     *
*   DETERMINE IF DATA SET TYPE IS GOFORT.  IF NOT GOFORT, RETURN.     *
*   WHEN GOFORT, DETERMINE IF FIXED OR FREE WAS SPECIFIED.  IF FREE   *
*   SPECIFIED, CAUSE EDIT TO BE TERMINATED UNDER TWO CONDITIONS --    *
*   (1) RECORD FORMAT F FOR OLD DATA SET, OR (2) LINE OPERAND         *
*   SPECIFIED FOR A NEW DATA SET.  IF GOFORT(FIXED) HAS BEEN          *
*   SPECIFIED, INDICATE THAT LRECL IS ALWAYS 80 AND THAT CAPS ARE     *
*   REQUIRED.  CHANGE SEQUENCE NUMBER START POSITION FROM 1 TO 73.    *
*                                                                     *
***********************************************************************
         CLI   CADSCODE,CAGOFORT DETERMINE IF DATA SET TYPE IS
         BNE   IN011020           GOFORT.  IF NOT, RETURN.
         L     AREAREG,INPDLPTR ADDRESS OF PROMPT PDL.           A45713
         LTR   AREAREG,AREAREG CHECK IF PDL PRESENT.             A45713
         BNP   IN011011       IF NO, BRANCH TO PROCESS GOFORT.   A45713
         USING ICDSTPDL,AREAREG ESTAB. ADDRESSABILITY FOR PDL.   A45713
         CLC   INTSFTF2(L'IEKEYDEF),IEKEYDEF CHECK IF 'FIXED'    A45713
*                                  SPECIFIED FOR GOFORT.         A45713
         BH    IN011014       IF YES, BRANCH TO PROCESS.         A45713
         B     IN01101A       IF NO, BRANCH TO SET SWITCHES.     A45713
         DROP  AREAREG                                           A45713
         SPACE
IN011011 EQU   *                                                 A45713
         CLC   INTSFTFM(L'IEKEYDEF),IEKEYDEF DETERMINE IF 'FIXED'
*                                  SPECIFIED FOR GOFORT.
         BH    IN011014       IF SO, BRANCH TO PROCESS.
IN01101A EQU   *                                                 A45713
         XI    IN8FLAGS,IN8GOFSW FLIP GOFORT SWITCH.
         BZ    IN011020       IF ZERO, VALIDATION HAS BEEN
*                                  PERFORMED, BRANCH TO RETURN.
         TM    CAEDFLAG,CAEDDISP DETERMINE IF DATA SET IS NEW.
         BZ    IN011012       IF SO, BRANCH TO DETERMINE IF LINE
*                                  OPERAND SPECIFIED.
         TM    CACFLAG2,CARECFM IF OLD, DETERMINE IF RECORD FORMAT
*                                  IS VARIABLE.
         BZ    IN011015       IF VARIABLE, BRANCH TO SET 'FREE'
*                                   SWITCH AND RETURN.
         B     IN011013       BRANCH TO SEND ERROR MESSAGE.
IN011012 EQU   *
         CLC   INLNE(L'IENOKEYW),IENOKEYW DETERMINE IF LINE
*                                  OPERAND SPECIFIED.
         BE    IN011015       IF SO, BRANCH TO SET 'FREE' SWITCH
*                                  AND RETURN.
IN011013 EQU   *
         LA    ERR1REG,INERRORV SPECIFY RELATIVE ERROR TO BE
*                                  PROCESSED.
         BAL   AREAREG,IN013010 BRANCH TO SEND ERROR MESSAGE.
         OI    IN8FLAGS,IN8TERME INDICATE THAT EDIT IS TO BE
*                                  TERMINATED BY CALLER.
         BR    SRRTNREG       RETURN TO CALLER.
IN011014 EQU   *
         OI    CADSATTR,CACAPSRQ+CALRECLX INDICATE CAPS REQUIRED
*                                  AND DEFAULT LRECL TO BE USED.
         LH    SIZEREG,IELR080 LRECL IS 80 FOR FIXED FORMAT.
         STH   SIZEREG,CAFLRLDF SET LRECL IN PROCESSOR TABLE.
         MVI   CALINE,INTSFSQO SET SEQUENCE NUMBER START POSITION
*                                 TO 73 FOR FIXED.
         B     IN011020       BRANCH TO RETURN TO CALLER.
IN011015 EQU   *
         OI    CACFLAG6,CAFREE INDICATE THAT GOFORT RECORD FORMAT
*                                  IS FREE FORM.
IN011020 EQU   *
         BR    SRRTNREG       RETURN TO CALLER.
         DROP  DATAREG
         EJECT
***********************************************************************
*                                                                     *
*   EQUATES, CONSTANTS AND AREAS USED BY THIS ROUTINE.                *
*                                                                     *
***********************************************************************
IENOKEYW DC    XL2'0'         CONSTANT USED TO DETERMINE IF A
*                                  KEYWORD ENTERED ON COMMAND.
IEMSGRTN DC    V(IKJEBIN3)    ADDRESS OF MESSAGE ROUTINE FOR
*                                  INITIALIZATION PHASE.
IEINS003 DC    A(ININS002)    ADDRESS OF MESSAGE INSERTION.      A45714
IEKEYDEF DC    XL2'1'         DEFAULT KEYWORD NUMBER FROM IKJPARS
IELR080  DC    H'80'          DEFAULT LRECL = 80.
         DS    0F             ALIGN ON WORD BOUNDARY.
IEDEVTYP DC    XL4'03000000'  INDICATOR FOR DEVTYPE SVC ROUTINE.
IELSTDSC DC    X'0001000E'    LIST DESCRIPTION FIELD FOR BLDL.
IESTP073 DC    H'73'          START POSITION COLUMN 73.
IESTP080 EQU   IELR080        START POSITION COLUMN 80.
IEPACK1  PACK  INDECBIN(L'INDECBIN),D0(*-*,AREAREG) CONVERT
IECPSSUP EQU   IEKEYDEF       KEYWORD NUMBER FOR CAPS OPERAND.
*                                  OPERAND TO PACKED DECIMAL.
IEINS001 IKJEBEMG 0,M334IN1,'LINE' INVALID OPERAND INSERTION.
IEINS002 IKJEBEMG 0,M334IN1,'BLOCK' INVALID OPERAND INSERTION.
         EJECT
         IKJDAP08
         EJECT
         IKJDAP18
         EJECT
         IKJEBECA
         SPACE 2
***********************************************************************
*                                                                     *
*   DEFINE INITIALIZATION WORK AREA IN THE COMMUNICATION AREA.        *
*                                                                     *
***********************************************************************
         ORG   CABFRPL        ORIGIN INITIALIZATION WORK AREA.
INWKAREA DS    0F             INITIALIZATION WORKAREA.
INDREC   DS    (((DA08DSO-DAPB08+L'DA08DSO+3)/4)*4)X IKJDAIR
*                                  PARAMETER BLOCK.
         ORG   INWKAREA       OVERLAY INITIALIZATION WORK AREA.
INCAMFLG DS    F              CAMLIST FLAGS FOR OBTAIN.
INCAMDSN DS    F              ADDRESS OF DATA SET NAME FOR OBTAIN.
INCAMVOL DS    F              ADDRESS OF VOLSER NUMBER FOR OBTAIN.
INCAMWRK DS    F              ADDRESS OF WORK AREA FOR OBTAIN.
INMSGBUF EQU   *
INCAMOBT DS    350C           OBTAIN WORK AREA.
INOBTEND EQU   *              CONSTANT TO ORG TO               @ZA05823
         ORG   INCAMOBT       LOCATE OUTPUT OVERLAY            @ZA05823
         DS    CL6            NO OF VOLUMES AND DEVICE TYPE    @ZA05823
LOCATVLD DS    CL6            VOLID FOR OBTAIN TO SEACRH       @ZA05823
         ORG   INOBTEND       RESUME NORMAL MAPPING            @ZA05823
INCAMVLD DS    CL6            VOLUME SERIAL NUMBER.
INDSNAME DS    CL44           EDIT DATA SET'S TRUE NAME        @ZA05823
INSYNCHK DS    0F             ALIGN BLDL LIST ON WORD BOUNDARY.
INBLDWD  DS    F              LIST DESCRIPTION FIELD.
INMEMBER DS    0C             MEMBER NAME FOR BLDL.
INSYNNME DS    8C             MODULE NAME.
         DS    6X             RESERVED FOR BLDL RETURN
*                                  INFORMATION.
INDECBIN DS    D              DOUBLE WORD USED FOR CONVERT TO
*                                  BINARY OPERATIONS.
INLINKSF DS    2F             SUPERVISOR PARAMETER LIST FOR LINK.
INSVCRTN DS    6F             WORK AREA FOR SERVICE ROUTINE
*                                  HANDLER.
INXCTLPL DS    2F             XCTL WORK AREA.
INDEVTYP DS    2F             DEVTYPE WORK AREA.
INCYLNO  DS    H              NUMBER OF CYLINDERS ON DEVICE.
INTRKNO  DS    H              NUMBER OF TRACKS PER CYLINDER.
INTRKCAP DS    H              TRACK CAPACITY (IN BYTES).
INOVHDK  DS    X              OVERHEAD FOR KEYED RECORDS, NOT
*                                  LAST BLOCK.
INOVHDKL DS    X              OVERHEAD FOR KEYED RECORDS, LAST
*                                  BLOCK.
INOVHDNK DS    X              OVERHEAD TO BE SUBTRACTED FOR
*                                  NON-KEYED RECORDS.
INDEVFLG DS    X              TOLERANCE FACTOR FLAGS.
INOVHFLG EQU   X'08'          IF 1, BLOCK OVERHEAD IN HALFWORD @ZA13889
*                             IF 0, ONE BYTE                   @ZA13889
INTOLFLG EQU   X'01'          IF 1 (ONE), TOLERANCE FACTOR TO BE
*                                  APPLIED.
INTOLFAC DS    H              TOLERANCE FACTOR.
INCOREPT DS    F              ADDRESS OF GOTTEN CORE.
INCVDAR  DS    D              RETURN CODE IS PROCESSED HERE    @ZA05823
INUNPKAR DS    D              AND UNPACKED HERE                @ZA05823
         ORG   INWKAREA       OVERLAY INITIALIZATION WORK AREA.
IN7WORK  DS    0F             WORK AREA FOR IKJEBIN7
IN7PLIST DS    6F             PARAMETER LIST AREA FOR ROUTINES
*                                  CALLED BY IKJEBIN7
IN7FLAGS DS    X              CONTROL FLAG FOR IKJEBIN7.
IN7DELPS EQU   X'80'          BIT 0 = 1 INDICATES DELETE MUST
*                                  BE ISSUED FOR IKJEBEPS.
IN7NOQLF EQU   X'40'          BIT 1 = 1 INDICATES NO QUALIFIER
*                                  CHECKING REQUIRED.
IN7QLFCK EQU   X'FF'-IN7NOQLF BIT 1 = 0 INDICATES QUALIFIER
*                                  CHECKING REQUIRED.
IN7WKLEN EQU   *-IN7WORK      LENGTH OF IKJEBIN7 WORK AREA.
         SPACE 2
IN8FLAGS DS    X              CONTROL FLAG BYTE FOR IKJEBIN8.
IN8ZEROS EQU   X'00'          INITIAL VALUE FOR FLAG BYTE.
*
*    NOTE -- BITS 2-7 OF 'IN8FLAGS' ARE RESERVED.
*
IN8GOFSW EQU   X'80'          AFTER EXCLUSIVE OR OF THIS BIT IN THE
*                                  GOFORT VALIDATION SUBROUTINE,
*                                  PROCESSING CONTINUES AS FOLLOWS --
*                                  BIT 0 ON - CONTINUE VALIDATION
*                                  BIT 0 OFF - RETURN TO CALLER -
*                                  OPERANDS AND ATTRIBUTES HAVE BEEN
*                                  VALIDATED.
IN8TERME EQU   X'40'          BIT 1 ON - EDIT IS TO BE TERMINATED
*                                  WITH ERROR INDICATION.
*                             BIT 1 OFF - GOFORT OPERAND VALIDATION
*                                  SUCCESSFUL.
         SPACE 2
INWKDCB  DS    14F            DCB USED FOR BLDL ON EDIT DATA SET.
INWKOPEN DS    F              REMOTE PARAMETER LIST FOR OPEN AND
*                                  CLOSE SVCS.
         SPACE 2
IN3WKA   DS    7F             REMOTE PROGRAM PARAMETER LIST.
IN3MSLST DS    3F             PARAMETER LIST FOR IKJEBEMS.
IN3MSIN1 DS    0F             INSERTION LIST FOR SERVICE ROUTINE
*                                  NAME.
IN3PT1   DS    F              ADDRESS OF NEXT INSERTION.
IN3LEN1  DS    H              LENGTH OF INSERTION.
IN3OFF1  DS    H              OFFSET OF INSERTION.
IN3INS1  DS    CL8            INSERTION TEXT.
IN3MSIN2 DS    0F             INSERTION LIST FOR RETURN CODE.
IN3PT2   DS    F              ADDRESS OF NEXT INSERTION.
IN3LEN2  DS    H              LENGTH OF INSERTION.
IN3OFF2  DS    H              OFFSET OF INSERTION.
IN3INS2  DS    CL2            INSERTION TEXT.
INTEMPBF DS    CL88           TEMPORARY INPUT BUFFER USED FOR
*                                  IKJPARS PROMPT RESPONSES.
         SPACE 2
         ORG   CASCWKA        DEFINE WORK AREA FOR IKJEBIN5      A45713
*                                  AND PARTS OF IKJEBIN8.        A45714
INPGLIST DS    4F             IKJPTGT PARM BLOCK.                A45713
INPTLIST DS    3F             IKJPUTL LIST                     @OZ05180
INPDLPTR DS    A              ADDRESS OF PROMPT PDL.             A45713
         SPACE
INBLDLST DS    0H             BLDL LIST FOR USER EXIT RTN.       A45714
INBLDLNO DS    H              NUMBER OF BLDL ENTRIES.            A45714
INBLDLLN DS    H              LENGTH OF BLDL ENTRY.              A45714
INBLDLNM DS    CL8            MODULE NAME OF USER EXIT.          A45714
         DS    CL50           INFORMATION RETURNED BY BLDL.      A45714
INENTRYL EQU   *-INBLDLNM     LENGTH OF BLDL ENTRY.              A45714
         SPACE
INEXTPRM DS    0F             USER EXIT PARM LIST.               A45714
INEXTPDE DS    A              ADDRESS OF SUBFIELD PDE.           A45714
INEXTANS DS    A              ADDRESS OF ANSWER AREA.            A45714
INEXTCPL DS    A              ADDRESS OF CP PARMLIST.            A45714
         EJECT
IEFTIOT1 DSECT                DSECT FOR TASK INPUT/OUTPUT TABLE.
         IEFTIOT1
         EJECT
IEFUCBOB DSECT                DSECT FOR UNIT CONTROL BLOCK.
         IEFUCBOB
         EJECT
CVT      DSECT                DSECT FOR COMMUNICATIONS VECTOR
         CVT   SYS=VMS             TABLE.
         EJECT
         IKJTCB
         EJECT
IECDSCB1 DSECT                FORMAT 1 DSCB DSECT.
         IECSDSL1 (1)
         EJECT
         IKJCPPL
         EJECT
         IKJECT
         EJECT
         IKJPPL
         EJECT
         DCBD  DSORG=PO,DEVD=DA
         EJECT
         IKJDFPL
         EJECT
         IKJDFPB
         EJECT
         IKJIOPL
         EJECT
         IKJPGPB                                                 A45713
INPGPBLN EQU   *-PGPB         LENGTH OF PUTGET PARM BLOCK.       A45713
         EJECT
         IKJPTPB                                               @OZ05180
INPTPBLN EQU   *-PTPB                                          @OZ05180
         IKJPSCB
         MEND
