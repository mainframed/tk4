         MACRO
         IHADVCT2 ,
***********************************************************************
*        MODULO DASD DEVICE CHARACTERISTICS TABLE                     *
***********************************************************************
*
*         These DSECTs are part of the mvs3380 usermod, which
*         provides (at least some) support for 3380s and 3390s.
*
*         Although MVS38j did have some support for 3380s,
*         it never (to my knowledge) had any support for 3390s.
*
*         These DSECTs represents the subset of devices mapped
*         by IHADVCT which are "modulo" devices, specifically
*         the 3380 and 3390 devices.  For non-modulo devices,
*         refer to the IHADVCT macro (2314, 3330, 3350, etc.).
*
*         The first DSECT, DVCTI, represents the index located
*         at the front of the IECZDTAB CSECT (assembled as part
*         of Stage2 of an MVS38j sysgen).
*
*         The second DSECT, DVCT, represents an entry located
*         via the index in DVCTI.  The entry is also located
*         in the IECZDTAB CSECT.
*
*         The CVT contains a field, CVTZDTAB, which points
*         to the IECZDTAB CSECT.  IECZDTAB consists of the
*         index, followed immediately by the DVCT entries.
*         Only DVCT entries for dasd devices which have been
*         generated appear in IECZDTAB.
*
*         To locate an entry in IECZDTAB:
*
*         1) Extract the device code field UCBTBYT4,
*            from the UCB representing the dasd device.
*
*               DASD device codes (in hex):
*                  01  2311   06  2305-1   0B  3350
*                  02  2301   07  2305-2   0C  3375
*                  03  2303   08  2314     0D  3330-11
*                  04  2302   09  3330     0E  3380
*                  05  2321   0A  3340     0F  3390
*               I've also seen some higher values (maybe in MVT)
*               which I think were related to MSS.
*
*         2) Add CVTZDTAB + (low order 4 bits of) the device code.
*            This is the address of the DVCTIOFF byte (below).
*
*         3) Add CVTZDTAB + DVCTIOFF, which points at the
*            related DVCT entry.
*
***********************************************************************
*  Index into DVCT
***********************************************************************
DVCTI    DSECT ,
DVCTIOFF DS    XL1                offset to DVCT entry, relative
*                                 to IECZDTAB base address
*                                 The 0th entry is a flag
***********************************************************************
*  DVCT entry for 3380s and 3390s
***********************************************************************
DVCT     DSECT ,
DVCCYL   DS    H        # cylinders per volume (including alternates)
DVCTRK   DS    H        # tracks per cylinder
DVCTRKLN DS    XL2      # bytes per track (unsigned)
*                       (excluding space for IBM standard Record0,
*                       which is assumed to be present)
DVCOVH1  DS    H        modulo overhead value 1
DVCOVNK  DS    XL1      non-keyed overhead decrement
DVCFLAGS DS    B        Flags:
DVCMODU  EQU   16          modulo device
DVCOVH2  DS    H        modulo overhead value 2
DVCALT   DS    H        # alternate tracks per volume
DVCENTLG EQU   *-DVCT   length of basic DVCT (excluding RPS + mods)
*
DVCRPS   DS    0XL4     RPS section (present when UCBTBYT2.UCBRPS=1)
DVCOVR0  DS    H        Record0 overhead bytes
DVCSECT  DS    XL1      # sectors in full track
DVCSECTD EQU   *,1      # data sectors = DVCTRKLN / DVCBPSEC
DVCDSECT DS    XL1      # data sectors
*
DVCBPSEC DS    XL2      # bytes per sector
*
DVCMOD1  DS    XL2      modulo factor
*----------------------------------------------------------------------
DVCSPAR1 DS    XL2      usermod: spare/alignment; zero
DVCUFIX1 DS    A        usermod: V(UTRKCALC)
         MEND
