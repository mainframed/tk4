*/********************************************************************/
*/*                                                                  */
*/*      IHACTM                                                      */
*/*                                                                  */
*/*  OS/VS2 RELEASE 3.7                                              */
*/*    BAL - INVOKE IHACTM WITH POSITIONAL PARAMETER INDICATING      */
*/*          THE MAPPING DESIRED. CHOICES ARE: XV, CXSA, CQE,        */
*/*          DPL, QR0, WWB AND FTPT.                                 */
*/*                                                                  */
*/*   PL/S -                                                         */
*/*  THIS MACRO CONTIANS THE PL/S VERSIONS OF THE WWB, DOM PARM      */
*/*  LIST, IEAVMQR0 PARM LIST, SVC 35 EXTENDED SAVEAREA, CQE, THE    */
*/*  SVC 87 EXTENDED SAVEAREA, AND THE SVC 72 EXTENDED SAVEAREA.     */
*/*                                                                  */
*/*  TO GET THE WWB, DEFINE THE MACRO VARIABLE CTMWWB AND SET IT     */
*/*  EQUAL TO 'YES'.                                                 */
*/*  TO GET THE QR0, DEFINE THE MACRO VARIABLE CTMQR0 AND SET IT     */
*/*  EQUAL TO 'YES'.                                                 */
*/*  TO GET THE SVC 35 EXTENDED SAVEAREA, DEFINE THE MACRO VARIABLE  */
*/*  CTMXV AND SET IT TO 'YES'.                                      */
*/* TO GET THE DOM PARMETER LIST, DEFINE THE MACRO VARIABLE CTMDOMPL */
*/*  AND SET IT TO 'YES'.                                            */
*/*  TO GET THE CQE, DEFINE THE MACRO VARIABLE CTMCQE AND SET IT     */
*/*  TO 'YES'.                                                       */
*/*  TO GET THE SVC 87 EXTENDED SAVEREA, DEFINE THE MACRO VARIABLE   */
*/*  CTMXD AND SET IT TO 'YES'.                                      */
*/*  TO GET THE SVC 72 EXTENDED SAVEAREA, DEFINE THE MACRO VARIABLE  */
*/*  CTMCXSA AND SET IT TO 'YES'.                                    */
*/* TO GET THE FRR USERS PARM LIST MAPPING, DEFINE CTMFTPT AND SET   */
*/*  IT TO 'YES'.                                                    */
*/*  THESE MACRO VARIABLES SHOULD ALL BE SET BEFORE THE INCLUSION    */
*/*  OF IHACTM AND IHACTM SHOULD ONLY BE INCLUDED ONCE.              */
*/*                                                                  */
*/* CHANGE ACTIVITY = ZA19994,ZA41986,ZA44318,ZA31868,ZA37220        */
*/********************************************************************/
*     %GOTO CTMMAC;  %/*
         MACRO
         IHACTM  &MAP
         AIF   ('&MAP' EQ 'XV').IHAXV        SVC 35 EXTENDED SAVE AREA
         AIF   ('&MAP' EQ 'CXSA').IHACXSA    SVC 72 EXTENDED SAVE AREA
         AIF   ('&MAP' EQ 'CQE').IHACQE      CONSOLE QUEUE ELEMENT
         AIF   ('&MAP' EQ 'DPL').IHADPL      DOM PARM LIST
         AIF   ('&MAP' EQ 'WWB').IHAWWB      WTO WAIT BLOCK MAP
         AIF   ('&MAP' EQ 'QR0').IHAQR0      IEAVMQR0 PARMLIST
         AIF   ('&MAP' EQ 'FTPT').IHAFTPT   FRR USERS PARM LIST MAP
         MNOTE *,'IMPROPER OPERAND'
         MEXIT
.IHAXV   ANOP
*/********************************************************************/
*/*                                                                  */
*/*          EXTENDED SAVEAREA MAPPING FOR SVC 35                    */
*/*                                                                  */
*/* OS/VS2 RELEASE 3.7                                               */
*/*                                                                  */
*/* THIS MAPPING OF XSA HAS DIFFERENT NAMES FROM THE BAL MAPPING OF  */
*/* XSA. THE PL/S VERSION IS USED IN IEAVVWTO AND THE BAL IN         */
*/* IEAVMWTO.                                                        */
*/********************************************************************/
XVSAV    DSECT
XVA0     DS    F             WORK AREA FOR TYPE 1 SUBROUTINES WPL      *
                             PARM LENGTH COMMUNICATION AREA    @ZA37220
XVA4     DS    0F            WORK AREA, AND D23 SAVEAREA       @ZA41986
XVFNCT   DS    C             D23 PROCESS CODE                  @ZA41986
D23VALID EQU   X'10'         PARMLIST VALIDITY CHECK           @ZA41986
D23OREGC EQU   X'20'         ORE GETCELL FAILURE               @ZA41986
D23OREBC EQU   X'21'         ORE BLDCPOOL FAILURE              @ZA41986
D23OREGM EQU   X'22'         ORE GETMAIN FAILURE, SP231        @ZA41986
D23WQEGC EQU   X'30'         WQE GETCELL FAILURE               @ZA41986
D23WQEBC EQU   X'31'         WQE BLDCPOOL FAILURE              @ZA41986
D23WQEGM EQU   X'32'         WQE GETMAIN FAILURE, SP231        @ZA41986
D23DYN   EQU   X'42'         DYNAMIC AREA GETMAIN FAILURE      @ZA41986
XVAMOD   DS    C             D23 MODULE ID                     @ZA41986
VWTOID   EQU   X'01'         IEAVVWTO'S ID FOR D23             @ZA41986
MWTOID   EQU   X'02'         IEAVMWTO'S ID FOR D23             @ZA41986
XVA41    DS    C             RESERVED                          @ZA41986
XVREASON DS    C             D23 REASON CODE                   @ZA41986
D23BNDY  EQU   X'01'         WTOR PARMLIST NOT ON FULLWRD BNDY @ZA41986
D23MLWTR EQU   X'02'         MULTILINE WTOR SPECIFIED          @ZA41986
D23PARM  EQU   X'03'         PARMLIST NOT ADDRESSABLE BY USER  @ZA41986
D23ZERO  EQU   X'04'         ZERO TEXT LENGTH WTOR             @ZA41986
D23SIZE  EQU   X'05'         CALLER MODIFIED WPL               @ZA37220
*                            DURING WTO PROCESSING             @ZA37220
XVA8     DS    F             TIME STORED BY VWTO
XVB0     DS    0F            WORK AREA FOR TYPE 2 SUBROUTINES
XVDESCD  DS    H             DESCRIPTOR CODE TO BE USED IN WTO
XVRCSAVE DS    H             ROUTE CODES TO BE USED IN THIS WTO
XVB5     DS    0F
XVB4     DS    C
XVB5A    DS    3X'00'        ADR OF ORIGINAL PARM LIST
         ORG   XVB5
XVMSGTYP DS    H             MSGTYP FIELD FROM CALLER'S WPL
XVMSGLGH DS    H             MESSAGE LENGTH FROM CALLER'S WPL
XVPARMAD DS    0F            ADDR OF CALLER'S PARAMETER LIST
XVCMAJOR DS    F
XVCMINOR DS    F
XVD0     DS    C             REAL NO. OF LINES IN MLWTO
XVD0QID  EQU   X'08'         QID FIELD IS PRESENT IN THE WPL
XVD1     DS    C             FLAG BYTE - WTO/WTOR/MLWTO
XVD1PRIV EQU   X'80'         PRIVILEGED TASK
XVD1ENQW EQU   X'40'         ENQ'D ON A WQE
XVD1ENQO EQU   X'20'         ENQ'D ON AN ORE
XVD1OEXT EQU   X'10'         ORE EXISTS FOR THIS WQE
XVD1BWTP EQU   X'08'         BACK FROM WTP
XVD1PP   EQU   X'04'         PROBLEM PROGRAM CALLER
XVD1AUTH EQU   X'02'         KEY 0, SUPVR STATE OR APF AUTHORIZED
XVD1PERR EQU   X'01'         SEVERE ERROR FOUND. ABEND USER.
XVD2     DS    C             RESERVED FOR MLWTO
XVD2CON  EQU   X'80'         CONNECTING
XVD2RDC  EQU   X'40'         ROUT/DESC CODES EXIST
XVD2MSGT EQU   X'20'         MSG TYPE FIELD EXISTS
XVD2VALD EQU   X'10'         PARAMETER LIST IS VALID
XVD2DELW EQU   X'08'         DELETE THIS WTO REQUEST
XVD2ZERO EQU   X'04'         RETURN A MESSAGE ID OF ZERO TO THE USER
XVD2WTOR EQU   X'02'         THIS WPL IS FOR A WTOR.
XVD2QFHC EQU   X'01'         QUEUE THIS MESSAGE TO HARD COPY.
XVD3     DS    C             MLWTO FLAGS
XVD3BLDJ EQU   X'80'         BUILD MAJOR WQE
XVD3BLD1 EQU   X'40'         BUILD LINE 1
XVD3BLD2 EQU   X'20'         BUILD LINE 2
XVD3TXT1 EQU   X'10'         TEXT LINE 1 BEING USED
XVD3TFX  EQU   X'08'         THE TCBTFX BIT WAS SET ON, TURN IT OFF
XVX      DS    0F            ADDR OF ORE - ALSO USED AS WORK AREA
XVX0     DS    C             LINE CONTROL FLAGS--MLWTO
XVX0FLCL EQU   X'80'         FIRST LINE IS CONTROL LINE
XVX0LL1F EQU   X'40'         LABEL LINE 1 FOUND
XVX0LL2F EQU   X'20'         LABEL LINE 2 FOUND
XVX0UDCL EQU   X'10'         USE DEFAULT CONTROL LINE
XVX0FLJE EQU   X'08'         FIRST LINE JUST 'E'
XVX0FEDE EQU   X'04'         FORCE END (LAST LINE TO BE DE)
XVX1     DS    C             ERROR FLAGS--MLWTO
XVX1STOP EQU   X'80'         ERROR IN PARM LIST;  IGNORE MLWTO
XVX1NOID EQU   X'40'         NO ID FOR CONNECTING MLWTO
XVX2     DS    C             NUMBER OF LINES STILL TO DO
XVX3     DS    C             RESERVED
XVWWB    DS    0F            ADDR OF WRITE WAIT BLOCK
XVY      DS    F             ADDR OF WWB WHEN WAITING FOR A WQE
XVWQEID  DS    0F
XVWQEIDA DS    CL3           WQE ID - USED ONLY BY MLWTO
XVCONID  DS    C             CONSOLE ID PASSED TO SVC 35
XVEL     EQU   *
XVZERO   EQU   XVEL-XVSAV    LENGTH USED TO ZERO SAVE AREA
XVRET    DS    0F
XVRETCOD DS    C             RETURN CODE
XVRETA   DS    CL3           RETURN ADR TO SVC 35 ISSUER
XVCSAVE1 EQU   XVCMAJOR      WORK AREA FOR WTO/WTOR
XVCSAVE2 EQU   XVCMINOR      WORK AREA FOR WTO/WTOR
        MEXIT
.IHACXSA ANOP
*/********************************************************************/
*/*                                                                  */
*/*      CXSA MAPPING  (MAPS SVRB EXTENDED SAVE AREA OF SVC 72       */
*/*                                                                  */
*/*      OS/VS2 RELEASE 3.7                                          */
*/*                                                                  */
*/*      METHOD OF ACCESS                                            */
*/*         BAL - CODE THE FOLLOWING:  IHACTM CXSA                   */
*/*         PL/S - 1. DECLARE THE MACRO CHARACTER VARIABLE CTMCXSA.  */
*/*                2. SET CTMCXSA EQUAL TO 'YES'.                    */
*/*                3. %INCLUDE SYSLIB(IHACTM)                        */
*/*                4. DCL CXSAPTR                                    */
*/*                                                                  */
*/*                    THE CXSA MAPPING IS USED BY ALL MODULES OF    */
*/*                    SVC 72 TO PROVIDE A COMMON MAPPING OF THE     */
*/*                    SVRB EXTENDED SAVE AREA.                      */
*/*                                                                  */
*/********************************************************************/
CXSA     DSECT 0CL48               EXTENDED SAVE AREA FOR SVC 72
CSANPTR  DS    F                    A(*+8) FOR OVERLAY XCTLS
CSADCBP  DS    F                   0 DCB POINTER
CSANAME  DS    CL8                 NEXT SEGMENT NAME
CSAUCM   DS    0F                  CODE AND UCM POINTER
CSACODE  DS    C                   CONSOLE SWITCH REASON       @ZA44318
CSAHC    EQU   2                   SWITCH HARDCOPY FROM SYSLOG @ZA44318
CSAEXTI  EQU   4                   EXTERNAL INTERRUPT          @ZA44318
CSAIOER  EQU   5                   I/O ERROR                   @ZA44318
CSASWER  EQU   6                   SOFTWARE ERROR              @ZA44318
CSAVMST  EQU   8                   VARY MASTER CONSOLE         @ZA44318
CSAOPER  EQU   9                   OPEN ERROR ON CONSOLE       @ZA44318
CSAACR   EQU   16                  AUTO CPU RECOVERY           @ZA44318
CSAVCHAN EQU   32                  VARY CHANNEL COMMAND        @ZA44318
CSAVCPU  EQU   64                  VARY CPU COMMAND            @ZA44318
CSAOPEN  EQU   0                   OPEN REQUEST
CSACLOSE EQU   4                   CLOSE REQUEST
CSAUCMA  DS    CL3                 UCM ENTRY POINTER
CSACTLM  DS    F                   UCM POINTER,CVTCUCB
CSAXA    DS    F
CSAXB    DS    F
CSAXC    DS    F
CSAXD    DS    F
CSAXE    DS    F
CSAXF    DS    F
         MEXIT
.IHACQE  ANOP
*/********************************************************************/
*/*                                                                  */
*/*      CQE MAPPING                                                 */
*/*                                                                  */
*/*  OS/VS2 RELEASE 3.7                                              */
*/*                                                                  */
*/*  PL/S VERSION. THE CQE IS USED TO QUEUE WQE'S TO AN INDIVIDUAL   */
*/*  UCME. EACH CQE CONTAINS SPACE FOR FIVE ENTRIES PLUS A FIELD     */
*/*  TO CHAIN ADDITIONAL CQE'S. EACH ENTRY CONTAINS FLAGS WHICH      */
*/*  DESCRIBE THE ENTRY.                                             */
*/*                                                                  */
*/********************************************************************/
CQE      DSECT
CQEWQE   DS    0F
CQEFLAG  DS    C                   CONSOLE OUTPUT QUEUE FLAGS
CQEEOB   EQU   X'C0'               POINTER TO NEXT CQE BLOCK
CQEEOQ   EQU   X'80'               END OF BLOCK
CQEATTOP EQU   X'10'               START AT TOP OF MLWTO CHAIN
CQEMLQHC EQU   X'08'               QUEUED FOR HARD COPY
CQEMAJOR EQU   X'04'               WQE IS MAJOR FOR MAWTO
CQEAVAIL EQU   X'02'               THIS ENTRY NO LONGER NEEDED
CQEENTR  EQU   X'01'               ENTRY EXISTS
CQENULL  EQU   X'00'               NULL ENTRY
CQEWQEA  DS    CL3                 WQE POINTER OR PTR TO NEXT BLOCK
         ORG   CQE+X'14'           ADR LAST ENTRY
CQEEND   DS    CL1
CQEENDA  DS    CL3
CQELENG  EQU   *                   END OF THE CQE
CQESIZE  EQU   CQELENG-CQE
CQESP    EQU   241                 NON-FETCH PROTECTED CSA
         MEXIT
.IHADPL  ANOP
*/********************************************************************/
*/*         PARAMETER LIST FOR IEAVXDOM - SVC 87                     */
*/*                                                                  */
*/*         OS/VS2 RELEASE 3.7                                       */
*/*                                                                  */
*/*  THIS DECLARATION DEFINES THE PARAMETER LIST FOR SVC 87. ON      */
*/*  ENTRY REGISTER 1 CONTAINS EITHER ONE MESSAGE ID OR A POINTER    */
*/*  TO A LIST OF MESSAGE IDS. THE PARAMETER LIST IS USED WHEN       */
*/*  REGISTER 1 POINTS TO A LIST OF MESSAGE IDS. THE MAXIMUM         */
*/*  NUMBER OF IDS ALLOWED IS 60.                                    */
*/*                                                                  */
*/*  THE LIST IS DECLARED AS BASED RATHER THAN ARRAY FOR SPPED OF    */
*/*  ACCESSING THE IDS.                                              */
*/*                                                                  */
*/********************************************************************/
DOMPL    DSECT
DOMPFLAG DS    C                   DOM FLAGS
DOMPEND  EQU   X'80'               END OF DOM PARM LIST
DOMPID   DS    CL3                 ID OF MESSAGE TO BE DOM'D
         MEXIT
.IHAWWB  ANOP
*/********************************************************************/
*/*                                                                  */
*/*    WWB                                                           */
*/*                                                                  */
*/*    WRITE TO OPERATOR WAIT BLOCK MAPPING                          */
*/*  OS/VS2 RELEASE 3.7                                              */
*/*                                                                  */
*/*  METHOD OF ACCESS                                                */
*/*    BAL - CODE THE FOLLOWING:  IHACTM  WWB                        */
*/*    PL/S - 1. DECLARE THE MACRO CHARACTER VARIABLE CTMWWB.        */
*/*           2. SET CTMWWB EQUAL TO 'YES'                           */
*/*           3. %INCLUDE  SYSLIB(IHACTM)                            */
*/*           4. DCL WWBPTR.                                         */
*/*  FUNCTION                                                        */
*/*    THE WWB IS USED TO WAIT FOR A WQE OR ORE TO BE FREE'D.        */
*/*    IF A WQE IS NEEDED, A WWB IS PLACED ON THE DOUBLY LINKED      */
*/*    CHAIN POINTED AT BY UCMWECBH AND UCMWECBT. THE PROGRAM NEEDING*/
*/*    THE WQE THEN WAITS ON THE ECB PART OF THE WWB, WHEN A WQE IS  */
*/*    FREED AND THE WWB IS AT THE TOP OF THE CHAIN, THE ECB IS      */
*/*    POSTED. IF AN ORE IS NEEDED THEN A WWB IS PLACED ON THE       */
*/*    CHAIN POINTED AT BY UCMOECBH AND UCMOECBT                     */
*/*                                                                  */
*/********************************************************************/
WWB      DSECT
WWBFWDPT DS    F         FORWARD CHAIN POINTER
WWBBCKPT DS    F         BACKWARD CHAIN POINTER
WWBASCB  DS    F         ADDRESS OF USERS ASCB
WWBTCBAD DS    F         ADDRESS OF USERS TCB
WWBFLAGS DS    C         FLAGS BYTE
WWBPOSTD EQU   X'80'     IF ON THEN ECB HAS BEEN POSTED
WWBRESRV DS    CL3       RESERVED
WWBECB   DS    F         ECB PART OF WTOECB
WWBLENG  EQU   *         END OF WWB
WWBSIZE  EQU   WWBLENG-WWB
         MEXIT
.IHAQR0  ANOP
*/********************************************************************/
*/*                                                                  */
*/*    QR0                                                           */
*/*                                                                  */
*/*    IEAVMQR0 PARAMTER LIST                                        */
*/*  OS/VS2 RELEASE 3.7                                              */
*/*                                                                  */
*/*  METHOD OF ACCESS                                                */
*/*    BAL - CODE THE FOLLOWING:  IHACTM  QR0                        */
*/*    PL/S - 1. DECLARE THE MACRO CHARACTER VARIABLE CTMQR0.        */
*/*           2. SET CTMQR0 EQUAL TO 'YES'                           */
*/*           3. %INCLUDE  SYSLIB(IHACTM)                            */
*/*           4. DCL QR0PPTR.                                        */
*/*  FUNCTION                                                        */
*/*    THE QR0 PARAMTER LIST IS INITIALIZED BY IEAVMWSV              */
*/*    AND USED AS INPUT TO IEAVMQR0.                                */
*/*                                                                  */
*/********************************************************************/
QR0      DSECT
QR0WQE   DS    0A        ADDRESS OF WQE
QR0WQEB  DS    FL1       UNUSED
QR0WQEA  DS    AL3       ADDRESS OF WQE
QR0UCME  DS    F         ADDRESS OF UCME
QR0UCM   DS    F         ADDRESS OF UCM
QR0CMQCN DS    F         ADDRESS OF IEECMQCN
         MEXIT
.IHAFTPT ANOP
*/*******************************************************************/
*/*                                                                  */
*/*      PARMLIST                                                    */
*/*                                                                  */
*/*      MAPPING OF THE FRR USER'S PARM LIST                         */
*/*      OS/VS2 RELEASE 3.7                                          */
*/*                                                                  */
*/*   METHOD OF ACCESS                                               */
*/*      BAL - CODE THE FOLLOWING: IHATCM  FTPT                      */
*/*      PL/S - DECLARE THE MACRO VARIABLE CTMFTPT AND SET IT EQUAL  */
*/*      TO 'YES'.  DECLARE PARMPTR AND THEN INCLUDE IHATCM.         */
*/*                                                                  */
*/********************************************************************/
PARMLIST DSECT
PARMSTAT DS    0F            STATUS WORD
PARMFTPT DS    C             FOOT PRINT
PARMFLAG DS    C             FLAGS BYTE
PARMSDWA EQU   X'80'         SDWA INDICATOR
PARMCWT  EQU   X'40'         CONT WITH TERMINATION INDICATOR
PARMRECU EQU   X'20'         ESTAE RECURSION COUNTER
PARMFRID EQU   X'10'         FRR INDICATOR
PARMWARG EQU   X'08'         REG UPDATE INDICATOR
PARMNDMP EQU   X'04'         NO DUMP INDICATOR                 @ZA19994
PARMSYSR DS    C             SYSTEM SERVICE ID
PARMCTBK DS    C             CONTROL BLOCK ID
PARMSYAD DS    F             SERVICE HANDLER ADDRESS
PARMCLAD DS    F             CLEANUP ROUTINE ADDRESS
PARMRTAD DS    F             RETRY ADDRESS
PARMRGAD DS    F             REGISTER SAVEAREA POINTER
PARMID   DS    CL4           MODULE ID
PARMLENG EQU   *
PARMSIZE EQU   PARMLENG-PARMLIST
         MEXIT
         MEND                   */;
*%CTMMAC:  IF CTMXV ^= 'YES'
*           %THEN %GO TO CTML1;
*           %ELSE %;
*@EJECT;
*/********************************************************************/
*/*                                                                  */
*/*          EXTENDED SAVEAREA MAPPING FOR SVC 35                    */
*/*                                                                  */
*/* OS/VS2 RELEASE 3.7                                               */
*/*                                                                  */
*/* THIS MAPPING OF XSA HAS DIFFERENT NAMES FROM THE BAL MAPPING OF  */
*/* XSA. THE PL/S VERSION IS USED IN IEAVVWTO AND THE BAL IN         */
*/* IEAVMWTO.                                                        */
*/********************************************************************/
*DECLARE
* 1 XVSAV CHAR(48) DEFINED(RBEXSAVE) BDY(WORD),
*                                 /* EXTENDED SAVEAREA               */
*   2 XVA0         PTR(31),       /* REGISTER SAVEAREA AND WPL PARM
*                                  LENGTH COMMUNICATION AREA @ZA37220*/
*   2 XVA4         PTR(31),       /* REGISTER, D23 SAVEAREA  @ZA41986*/
*     3 XVFNCT     CHAR(1),       /* D23 PROCESS CODE        @ZA41986*/
*     3 XVAMOD     CHAR(1),       /* D23 MODULE ID           @ZA41986*/
*     3 XVA41      CHAR(1),       /* RESERVED                @ZA41986*/
*     3 XVREASON   CHAR(1),       /* D23 REASON CODE         @ZA41986*/
*   2 XVA8         PTR(31),       /* REGISTER SAVEAREA               */
*   2 XVRDMSV      CHAR(6),       /* SAVE ARE FOR ROUTE/DESC CODES
*                                    AND MSGTYPE FIELDS.             */
*     3 XVDESCD    CHAR(2),       /* DESC CODES SAVE AREA            */
*     3 XVRCSAVE   CHAR(2),       /* ROUTE CODES SAVE AREA           */
*     3 XVMSGTYP   CHAR(2),       /* MSGTYPE SAVE AREA               */
*   2 XVMSGLGH     FIXED(15),     /* MSGLENGTH, 4 + MSGTEXT LENGTH   */
*   2 XVPARMAD     PTR(31),       /* ADDR OF WPL PASSED BY THE USER  */
*   2 XVWQEAD      PTR(31),       /* ADDR OF WQE CONSTRUCTED BY SVC35*/
*   2 XVDFLAGS     FIXED(32),     /* FLAGS WORD                      */
*     3 XVD0       BIT(8),        /* FIRST FLAGS BYTE                */
*       4 XVD0S250 BIT(1),        /* IF ON, USER'S EXIT PARM IN SP250
*                                    IF OFF, PARM LIST IS IN SP229   */
*       4 XVD0RPFD BIT(1),        /* REPLY ID AVAIL & PUT IN ORE     */
*       4 XVD0NWQE BIT(1),        /* NEED A WQE                      */
*       4 XVD0NORE BIT(1),        /* NEED AN ORE                     */
*       4 XVD0QID  BIT(1),        /* QID IS PRESENT IN THE WPL       */
*       4 XVD0WWB  BIT(1),        /* A WWB HAS BEEN OBTAINED         */
*       4 XVD0USER BIT(1),        /* RETURN TO USER IF SET ON BY THE
*                                    WTP ROUTINE.                    */
*       4 XVD0HDCY BIT(1),        /* THIS MESSAGE IS A WTP TO BE SENT
*                                    TO HARDCOPY ONLY.               */
*     3 XVD1       BIT(8),        /* SECOND FLAGS BYTE               */
*       4 XVD1PRIV BIT(1),        /* USER IS A PRIVILEGED TASK       */
*       4 XVD1CFPL BIT(1),        /* CORE WAS FOUND FOR PARM LIST    */
*       4 XVD1ALDN BIT(1),        /* ALL DONE GETTING WQE/ORE BLOCKS */
*       4 XVD1OEXT BIT(1),        /* AN ORE EXISTS FOR THIS WQE      */
*       4 XVRESV01 BIT(1),        /* RESERVED                        */
*       4 XVD1PP   BIT(1),        /* USER IS A PROBLEM PROGRAM       */
*       4 XVD1AUTH BIT(1),        /* USER IS AN AUTHORIZED PROGRAM   */
*       4 XVD1PERR BIT(1),        /* PARM LIST FOUND TO BE IN ERROR  */
*     3 XVD2       BIT(8),        /* THIRD FLAGS BYTE                */
*       4 XVD2CON  BIT(1),        /* CONNECTING MLWTO                */
*       4 XVD2RDC  BIT(1),        /* ROUTE/DESCRIPTOR CODES EXIST    */
*       4 XVD2MSGT BIT(1),        /* MSGTYPE FIELD EXISTS            */
*       4 XVD2VALD BIT(1),        /* THE WPL IS VALID                */
*       4 XVD2DELW BIT(1),        /* SEND THE WQE TO HARD COPY ONLY  */
*       4 XVD2ZERO BIT(1),        /* MESSAGE HAS LENGTH OF ZERO      */
*       4 XVD2WTOR BIT(1),        /* THIS IS A WTOR                  */
*       4 XVD2QFHC BIT(1),        /* QUEUE THIS WQE FOR HARDCOPY     */
*     3 XVD3       BIT(8),        /* FOURTH FLAGS BYTE               */
*   2 XVOREAD      PTR(31),       /* ADDR OF THE ORE                 */
*     3 XVNEWDC    CHAR(2),       /* NEW DESC CODES FROM USER EXIT   */
*     3 XVNEWRC    CHAR(2),       /* NEW ROUTE CODES FROM USER EXIT
*                                    THIS WORD IS USED TO STORE THE
*                                    NEW ROUTE/DESC CODES AND THEN
*                                    IT HOLDS THE ADDR OF THE ORE    */
*   2 XVWWB     PTR(31),          /* ADDR OF WWB FOR WAIT            */
*     3 XVEXPMAD   PTR(31),       /* ADDR OF PARM LIST TO USER'S EXIT
*                                   XVEXPMAD AND XVWWB USED AT DIFFER-
*                                   ENT TIMES IN THE PROGRAM.        */
*   2 XVWQEID      CHAR(4),       /* CONTENTS OF REGISTER 0          */
*     3 XVWQEIDA   CHAR(3),       /* CONNECTING MESSAGE ID           */
*     3 XVCONID    CHAR(1),       /* CONSOLE ID PASSED BY USER       */
*   2 XVRET        PTR(31),       /* RETURN ADDR TO SVC 35 ISSUER    */
*     3 XVRETCOD   CHAR(1);       /* RETURN CODE TO BE SENT TO CALLER*/
*@EJECT;                          /*                         @ZA41986*/
*/* THE CONSTANTS DEFINED BELOW ARE USED BY IEAVMWTO AND     @ZA41986*/
*/* IEAVVWTO TO STORE D23 FOOTPRINTS. THE FIRST GROUP ARE    @ZA41986*/
*/* STORED INTO THE XVFNCT FIELD AND REPRESENT PROCESS       @ZA41986*/
*/* CODES IN WHICH THE ERROR OCCURRED.                       @ZA41986*/
*DCL D23VALID   BIT(8) CONSTANT('10'X), /* PARMLIST ERROR    @ZA41986*/
*    D23OREGC   BIT(8) CONSTANT('20'X), /* ORE GETCELL ERROR @ZA41986*/
*    D23OREBC   BIT(8) CONSTANT('21'X), /*ORE BLDCPOOL ERROR @ZA41986*/
*    D23OREGM   BIT(8) CONSTANT('22'X), /*ORE GETMAIN ERROR, SP231
*                                                            @ZA41986*/
*    D23WQEGC   BIT(8) CONSTANT('30'X), /* WQE GETCELL ERROR @ZA41986*/
*    D23WQEBC   BIT(8) CONSTANT('31'X), /*WQE BLDCPOOL ERROR @ZA41986*/
*    D23WQEGM   BIT(8) CONSTANT('32'X), /* WQE GETMAIN ERROR @ZA41986*/
*    D23DYN     BIT(8) CONSTANT('42'X); /* DYNAMIC AREA GETMAIN
*                                          FAILURE           @ZA41986*/
*@SPACE;                                /*                   @ZA41986*/
*/* THE NEXT GROUP OF CONSTANTS DEFINE THE MODULE ID IN      @ZA41986*/
*/* WHICH THE ERROR OCCURRED.                                @ZA41986*/
*DCL VWTOID BIT(8) CONSTANT('01'X),     /* IEAVVWTO'S ID     @ZA41986*/
*    MWTOID BIT(8) CONSTANT('02'X);     /* IEAVMWTO'S ID     @ZA41986*/
*@SPACE;                                /*                   @ZA41986*/
*/* THE NEXT GROUP OF CONSTANTS ARE STORED INTO THE XVREASON @ZA41986*/
*/* FIELD AND REPRESENT THE REASON FOR THE PROCESS' FAILING. @ZA41986*/
*DCL D23BNDY    BIT(8) CONSTANT('01'X), /* WTOR PARMLIST NOT ON
*                                          FULLWORD BNDY     @ZA41986*/
*    D23MLWTR   BIT(8) CONSTANT('02'X), /* MULTILINE WTOR    @ZA41986*/
*    D23PARM    BIT(8) CONSTANT('03'X), /* PARMLIST NOT ADDRESSABLE
*                                          TO USER           @ZA41986*/
*    D23ZERO    BIT(8) CONSTANT('04'X), /*ZERO TXT LGTH WTOR @ZA37220*/
*    D23SIZE    BIT(8) CONSTANT('05'X); /*CALLER MODIFIED WPL
*                                       DURING WTO PROCESSNG @ZA37220*/
*%CTML1: IF CTMWWB ^= 'YES' %THEN %GOTO CTML2;
*      %ELSE %;
*@EJECT;
*/********************************************************************/
*/*                                                                  */
*/*    WWB                                                           */
*/*                                                                  */
*/*    WRITE TO OPERATOR WAIT BLOCK MAPPING                          */
*/*  OS/VS2 RELEASE 3.7                                              */
*/*                                                                  */
*/*  METHOD OF ACCESS                                                */
*/*    BAL - CODE THE FOLLOWING:  IHACTM  WWB                        */
*/*    PL/S - 1. DECLARE THE MACRO CHARACTER VARIABLE CTMWWB.        */
*/*           2. SET CTMWWB EQUAL TO 'YES'                           */
*/*           3. %INCLUDE  SYSLIB(IHACTM)                            */
*/*           4. DCL WWBPTR.                                         */
*/*  FUNCTION                                                        */
*/*    THE WWB IS USED TO WAIT FOR A WQE OR ORE TO BE FREE'D.        */
*/*    IF A WQE IS NEEDED, A WWB IS PLACED ON THE DOUBLY LINKED      */
*/*    CHAIN POINTED AT BY UCMWECBH AND UCMWECBT. THE PROGRAM NEEDING*/
*/*    THE WQE THEN WAITS ON THE ECB PART OF THE WWB, WHEN A WQE IS  */
*/*    FREED AND THE WWB IS AT THE TOP OF THE CHAIN, THE ECB IS      */
*/*    POSTED. IF AN ORE IS NEEDED THEN A WWB IS PLACED ON THE       */
*/*    CHAIN POINTED AT BY UCMOECBH AND UCMOECBT                     */
*/*                                                                  */
*/********************************************************************/
*DCL  1 WWB     BASED(WWBPTR),
*       2 WWBFWDPT PTR(31),        /* FORWARD CHAIN PTR              */
*       2 WWBBCKPT PTR(31),        /* BACKWARD CHAIN PTR             */
*       2 WWBASCB  PTR(31),        /* ADDR OF THE USERS ASCB         */
*       2 WWBTCBAD PTR(31),        /* ADDR OF THE USERS TCB          */
*       2 WWBFLAGS BIT(8),         /* FLAGS BYTE                     */
*         3 WWBPOSTD BIT(1),       /* THIS ECB HAS BEEN POSTED       */
*       2 WWBRESRV CHAR(3),        /* RESERVED                       */
*       2 WWBECB   PTR(31);        /* ECB PART OF WTOECB             */
*/**************** END OF WWB ****************************************/
*
*%DCL WWBSIZE  CHAR;     /* DCL SIZE OF WWB VARIABLE                 */
*% WWBSIZE = 'LENGTH(WWB)' ;       /* GET LENGTH OF WWB              */
*%CTML2: IF CTMDOMPL ^= 'YES' %THEN %GOTO CTML3;
*        %ELSE %;
*@EJECT;
*/********************************************************************/
*/*         PARAMETER LIST FOR IEAVXDOM - SVC 87                     */
*/*                                                                  */
*/*         OS/VS2 RELEASE 3.7                                       */
*/*                                                                  */
*/*  THIS DECLARATION DEFINES THE PARAMETER LIST FOR SVC 87. ON      */
*/*  ENTRY REGISTER 1 CONTAINS EITHER ONE MESSAGE ID OR A POINTER    */
*/*  TO A LIST OF MESSAGE IDS. THE PARAMETER LIST IS USED WHEN       */
*/*  REGISTER 1 POINTS TO A LIST OF MESSAGE IDS. THE MAXIMUM         */
*/*  NUMBER OF IDS ALLOWED IS 60.                                    */
*/*                                                                  */
*/*  THE LIST IS DECLARED AS BASED RATHER THAN ARRAY FOR SPPED OF    */
*/*  ACCESSING THE IDS.                                              */
*/*                                                                  */
*/********************************************************************/
* DECLARE
*    1 DOMPL   BASED(DOMPLPTR),   /* MESSAGE ID ENTRY                */
*      3 DOMPFLAG   BIT(8),       /* FLAGS BYTE OF ID ENTRY          */
*        5 DOMPEND  BIT(1),       /* IF ON THEN END OF PARM LIST     */
*      3 DOMPID     PTR(24);      /* MESSAGE ID PART OF ENTRY        */
*%DCL DOMPLSZ CHAR;
*% DOMPLSZ = 'LENGTH(DOMPL)';
*%CTML3: IF CTMXD ^= 'YES' %THEN %GOTO CTML4;
*        %ELSE %;
*@EJECT;
*/********************************************************************/
*/*                                                                  */
*/*  XSDOM - EXTENDED SAVEAREA FOR XDOM (SVC 87)                     */
*/*                                                                  */
*/*  OS/VS2 RELEASE 3.7                                              */
*/*                                                                  */
*/*  THE EXTENDED SAVEAREA IS A 48 BYTE AREA PROVIDED FOR SVCS       */
*/*  AND IS IN THE SVRB AT RBEXSAVE. XSDOM DEFINES THE USE OF THE    */
*/*  AREA FOR SVC 87 OR IEAVXDOM THE DOM SERVICE ROUTINE.            */
*/*                                                                  */
*/********************************************************************/
* DECLARE
*  1 XSDOM CHAR(48) DEFINED(RBEXSAVE) BDY(WORD),
*    2 XSREG0      FIXED(31),     /* SAVE REG0 AT ENTRY TO PROGRAM   */
*    2 XSREG1      PTR(31),       /* SAVE REG1 AT ENTRY TO PROGRAM   */
*    2 XSREG14     PTR(31),       /* SAVE REG 14 AT ENTRY TO PROGRAM */
*    2  *          CHAR(4), BDY(WORD), /* PLACE HOLDER       @ZA37220*/
*      3 XSERRCD   PTR(8),        /* REASON CODE FOR THE 157 ABEND   */
*      3 XSFLAGS   BIT(8),        /* FLAGS FIELD FOR XDOM            */
*        4 XSDOMR  BIT(1),        /* DOM HAD REPLY=YES SPECIFIED.    */
*        4 XSAUTH  BIT(1),        /* USER IS SUPERVISOR, KEY 0-7
*                                    OF IS APF AUTHORIZED.           */
*        4 XSENDLST BIT(1),       /* END OF ID LIST MARKER WAS FOUND */
*      3 XSCBSIZE  FIXED(15),     /* SIZE OF DOMCB TO BE OBTAINED.   */
*    2 XSAL,                      /* USED FOR POST AND SUBSYSTEM
*                                    PARAMETER LISTS.                */
*      3 XSAL01    PTR(31),       /* FIRST PARAMETER IN POST LIST    */
*      3 XSAL02    PTR(31),       /* SECOND PARM IN LIST             */
*      3 XSAL03    PTR(31),       /* THIRD  PARM IN LIST             */
*      3 XSPLPTR   PTR(31),       /* PTR TO ACCESS THE DOM PARM LIST */
*      3 XSIDPTR   PTR(31),       /* ADDR OF LAST ID USED. SET
*                                    INITIALLY TO WORD BEFORE FIRST
*                                    AVAILABLE ID IN THE DUMMY DOMCB */
*    2 XSDMAREA    CHAR(12);      /* SPACE FOR SSDM BLOCK            */
*%CTML4: IF CTMCQE ^= 'YES' %THEN %GOTO CTML5;
*        %ELSE %;
*@EJECT;
*/********************************************************************/
*/*                                                                  */
*/*      CQE MAPPING                                                 */
*/*                                                                  */
*/*  OS/VS2 RELEASE 3.7                                              */
*/*                                                                  */
*/*  PL/S VERSION. THE CQE IS USED TO QUEUE WQE'S TO AN INDIVIDUAL   */
*/*  UCME. EACH CQE CONTAINS SPACE FOR FIVE ENTRIES PLUS A FIELD     */
*/*  TO CHAIN ADDITIONAL CQE'S. EACH ENTRY CONTAINS FLAGS WHICH      */
*/*  DESCRIBE THE ENTRY.                                             */
*/*                                                                  */
*/********************************************************************/
*DCL 1 CQE BASED(CQEPTR),
*      3 CQEWQE BDY(WORD) CHAR(4),/* CQE ENTRY                       */
*        5 CQEFLAG      BIT(8),   /* CONSOLE OUTPUT QUEUE FLAGS      */
*          7 CQEEOB     BIT(2),   /* END OF CQE BLOCK WHEN BOTH ON   */
*            9 CQEEOQ   BIT(1),   /* LAST ENTRY ON QUEUE             */
*            9 *        BIT(1),   /* NEVER ON ALONE                  */
*          7 *          BIT(1),   /* RESERVED                        */
*          7 CQEATTOP   BIT(1),   /* START AT TOP OF MLWTO CHAIN     */
*          7 CQEMLQHC   BIT(1),   /* QUEUED FOR HARDCOPY             */
*          7 CQEMAJOR   BIT(1),   /* WQE IS MAJOR FOR MLWTO          */
*          7 CQEAVAIL   BIT(1),   /* THIS ENTRY NO LONGER NEEDED     */
*          7 CQEENTR    BIT(1),   /*ENTRY EXISTS                     */
*        5 CQEWQEA      PTR(24),  /* PTR TO WQE OR NEXT CQE          */
*      3 *(4)           FIXED(31),/* SPACE HOLDER FOR NEXT 4 ENTRIES */
*      3 CQEEND         BIT(8),   /* FLAGS FOR LAST CQE ENTRY        */
*      3 CQEENDA        PTR(24);  /* ADDR OF NEXT CQE                */
*%CQESIZE = 'LENGTH(CQE)';
*DCL CQESP CONSTANT(241) FIXED(15);
*%CTML5: IF CTMCXSA ^= 'YES' %THEN %GOTO CTML6;
*        %ELSE %;
*@EJECT;
*/********************************************************************/
*/*                                                                  */
*/*      CXSA MAPPING  (MAPS SVRB EXTENDED SAVE AREA OF SVC 72       */
*/*                                                                  */
*/*      OS/VS2 RELEASE 3.7                                          */
*/*                                                                  */
*/*      METHOD OF ACCESS                                            */
*/*         BAL - CODE THE FOLLOWING:  IHACTM CXSA                   */
*/*         PL/S - 1. DECLARE THE MACRO CHARACTER VARIABLE CTMCXSA.  */
*/*                2. SET CTMCXSA EQUAL TO 'YES'.                    */
*/*                3. %INCLUDE SYSLIB(IHACTM)                        */
*/*                4. DCL CXSAPTR                                    */
*/*                                                                  */
*/*      PL/S VERSION. THE CXSA MAPPING IS USED BY ALL MODULES OF    */
*/*                    SVC 72 TO PROVIDE A COMMON MAPPING OF THE     */
*/*                    SVRB EXTENDED SAVE AREA.                      */
*/*                                                                  */
*/********************************************************************/
*DCL 1 CXSA BASED(CXSAPTR),
*      3 CSANPTR PTR(31),            /* PTR TO CSANAME               */
*      3 CSADCBP PTR(31),            /* FRR WORK, INITIALIZED TO 0   */
*      3 CSANAME CHAR(8),            /* EBCDIC NAME OF MODULE CALLED */
*      3 CSAUCM BDY(WORD) CHAR(4),   /* CODE AND UCM PTR             */
*        5 CSACODE FIXED(8),         /*CONSOLE SWITCH REASON @ZA44318*/
*        5 CSAUCMA  PTR(24),         /* UCME PTR OR CPU ID OR 0      */
*      3 CSACTLM PTR(31),            /* PTR TO UCM BASE              */
*      3 CSAXA  PTR(31),             /* FOR                          */
*      3 CSAXB  PTR(31),             /*  GENERAL                     */
*      3 CSAXC  PTR(31),             /*   USE                        */
*      3 CSAXD  PTR(31),             /*    OF                        */
*      3 CSAXE  PTR(31),             /*     INDIVIDUAL               */
*      3 CSAXF  PTR(31) ;            /*      MODULES                 */
*/* THE FOLLOWING CONSTANTS ARE THE VARIOUS REASON CODES     @ZA44318*/
*/* ASSOCIATED WITH THE FIELD CSACODE. CSACODE WILL BE SET   @ZA44318*/
*/* BY ANY MODULE CALLING IEAVSWCH, WHO WILL USE THIS CODE   @ZA44318*/
*/* IN ITS PROCESSING AND TO ISSUE ITS OPERATOR MESSAGE.     @ZA44318*/
*DCL CSAHC    FIXED(8) CONSTANT(2),  /*SWITCH HARDCPY FROM SYSLOG
*                                                            @ZA44318*/
*    CSAEXTI  FIXED(8) CONSTANT(4),  /*EXTERNAL INTERRUPT    @ZA44318*/
*    CSAIOER  FIXED(8) CONSTANT(5),  /*I/O ERROR             @ZA44318*/
*    CSASWER  FIXED(8) CONSTANT(6),  /*SOFTWARE ERROR        @ZA44318*/
*    CSAVMST  FIXED(8) CONSTANT(8),  /*VARY MSTCONS COMMAND  @ZA44318*/
*    CSAOPER  FIXED(8) CONSTANT(9),  /*CONSOLE OPEN ERROR    @ZA44318*/
*    CSAACR   FIXED(8) CONSTANT(16), /*ACR PROCESSING CALL   @ZA44318*/
*    CSAVCHAN FIXED(8) CONSTANT(32), /*VARY CHANNEL COMMAND  @ZA44318*/
*    CSAVCPU  FIXED(8) CONSTANT(64); /*VARY CPU COMMAND      @ZA44318*/
*/* THE FOLLOWING CONSTANTS ARE SET BY IEAVSWCH INTO CSACODE @ZA44318*/
*/* BEFORE CALLING A DSP TO PERFORM AN OPEN OR CLOSE.        @ZA44318*/
*DCL CSAOPEN  FIXED(8) CONSTANT(0),  /*TEST CSACODE FOR OPEN @ZA44318*/
*    CSACLOSE FIXED(8) CONSTANT(4);  /*TEST CSACODE FOR CLOS @ZA44318*/
*%CTML6: IF CTMQR0 ^= 'YES' %THEN %GOTO CTML7;
*        %ELSE %;
*@EJECT;
*/********************************************************************/
*/*                                                                  */
*/*    QR0                                                           */
*/*                                                                  */
*/*    IEAVMQR0 PARAMTER LIST                                        */
*/*  OS/VS2 RELEASE 3.7                                              */
*/*                                                                  */
*/*  METHOD OF ACCESS                                                */
*/*    BAL - CODE THE FOLLOWING:  IHACTM  QR0                        */
*/*    PL/S - 1. DECLARE THE MACRO CHARACTER VARIABLE CTMQR0.        */
*/*           2. SET CTMQR0 EQUAL TO 'YES'                           */
*/*           3. %INCLUDE  SYSLIB(IHACTM)                            */
*/*           4. DCL QR0PPTR.                                        */
*/*  FUNCTION                                                        */
*/*    THE QR0 PARAMTER LIST IS INITIALIZED BY IEAVMWSV              */
*/*    AND USED AS INPUT TO IEAVMQR0.                                */
*/*                                                                  */
*/********************************************************************/
*DCL  1 QR0PARMS BASED(QR0PPTR),
*       2 QR0WQE CHAR(4) BDY(WORD),    /* WQE ADDRESS.               */
*         3 QR0WQEB BIT(8),            /* UNUSED                     */
*         3 QR0WQEA PTR(24),           /* WQE ADDRESS                */
*       2 QR0UCME PTR(31),             /* UCME ADDRESS.              */
*       2 QR0UCM PTR(31),              /* UCM ADDRESS.               */
*       2 QR0CMQCN PTR(31);            /* ADDRESS OF IEECMQCN RTN    */
*%CTML7: IF CTMFTPT ^= 'YES' %THEN %GOTO CTML8;
*        %ELSE %;
*@EJECT;
*/********************************************************************/
*/*                                                                  */
*/*  FRR/ESTAE PARM LIST                                             */
*/*                                                                  */
*/*   OS/VS2 RELEASE 3.7                                     @ZA19994*/
*/*                                                                  */
*/*  METHOD OF ACCESS                                                */
*/*      BAL - CODE THE FOLLOWING: IHACTM FTPT                       */
*/*      PL/S - DECLARE THE MACRO VARIABLE CTMFTPT AND SET IT TO     */
*/*      'YES'. DECLARE PARMPTR AS BASE FOR PARMLIST AND INCLUDE     */
*/*      IHACTM.                                                     */
*/*                                                                  */
*/*   THIS PARMLIST IS USED BY THE PROTECTED ROUTINE TO COMMUNICATE  */
*/*   WITH THE RECOVERY ROUTINE.  IT CONTAINS THE FOOTPRINT OF THE   */
*/*   ACTIVITY BEING PERFORMED BY THE PROTECTED ROUTINE WHEN THE     */
*/*   ERROR WAS ENCOUNTERED.                                         */
*/*                                                                  */
*/********************************************************************/
* DCL 1 PARMLIST BASED(PARMPTR), /*RECOVERY PARM LIST                */
*       2 PARMSTAT,              /*STATUS WORD                       */
*         3 PARMFTPT PTR(8),     /*FOOTPRINT BYTE                    */
*         3 PARMFLAG BIT(8),     /*FLAG BYTE                         */
*           4 PARMSDWA BIT(1),   /*SDWA INDICATOR                    */
*           4 PARMCWT BIT(1),    /*CONTINUE WITH TERM. IND.          */
*           4 PARMRECU BIT(1),   /*ESTAE RECURSION COUNTER           */
*           4 PARMFRID BIT(1),   /*FRR INDICATOR                     */
*           4 PARMWARG BIT(1),   /*REG UPDATE INDICATOR              */
*           4 PARMNDMP BIT(1),   /*NO DUMP INDICATOR         @ZA19994*/
*           4 * BIT(1),          /*RESERVED                          */
*           4 * BIT(1),          /*RESERVED                          */
*         3 PARMSYSR PTR(8),     /*SYSTEM SERVICE ID                 */
*         3 PARMCTBK PTR(8),     /*CONTROL BLOCK ID                  */
*       2 PARMSYAD PTR(31),      /*SERVICE HANDLER ADDRESS           */
*       2 PARMCLAD PTR(31),      /*CLEANUP ROUTINE ADDRESS           */
*       2 PARMRTAD PTR(31),      /*RETRY ADDRESS                     */
*       2 PARMRGAD PTR(31),      /*REGISTER SAVEAREA POINTER         */
*       2 PARMID CHAR(4);        /*MODULE ID                         */
* %CTML8:;
