         MACRO
         IEECSUB  &PFK,&CON60,&CONANR,&CON85,&CON50,&T
*  04/06/79    LEVEL = OS/VS2 SYSTEM CONTROL PROCESSOR 2       @ZA37028
.*C 066600,070000,071000                                      MC YM2935
.*D 066000,066500                                             MC YM2935
.*A 066700                                                    MC YM2935
*A  DCMSTTMR                      USED IN IEECVETK             @ZA37028
***********************************************************************
*                                                              @G64DPSS
*              IEECSUB - DIDOCS STORAGE UTILIZATION BLOCK      @G64DPSS
*                                                              @G64DPSS
* STATUS     - OS/VS2 SYSTEM CONTROL PROGRAM 2                 @G64DPSS
*              06/21/78   LEVEL=05                             @G64DPSS
*                                                              @G64DPSS
* INVOCATION - SPECIFY: IEECSUB PFK,CON60,CONANR,CON85,CON50,T @G64DPSS
*              WHERE THE OPERANDS ARE SPECIFIED AS "Y" OR "N". @G64DPSS
*                PFK    - GENERATE DIRECT ACCESS I/O CONTROL   @G64DPSS
*                         BLOCKS                               @G64DPSS
*                CON60  - GENERATE RMS CCW'S FOR 2260          @G64DPSS
*                CONANR - GENERATE RMS CCW'S FOR 3277          @G64DPSS
*                CON85  - GENERATE RMS CCW'S FOR 3066          @G64DPSS
*                CON50  - GENERATE RMS CCW'S FOR 2250          @G64DPSS
*                T      - DSECT ONLY - ENTRY POINTS NOT        @G64DPSS
*                         GENERATED                            @G64DPSS
*                                                              @G64DPSS
* FUNCTION   - EXPANDS THE DIRECT ACCESS I/O CONTROL BLOCKS    @G64DPSS
*              (DCB,IOB,CCW) FOR SYS1.DCMLIB AND THE RMS CCW'S @G64DPSS
*              TO WRITE THE SYSTEM TERMINATION MESSAGE.        @G64DPSS
*                                                              @G64DPSS
* CHANGE-ACTIVITY -                                            @G64DPSS
*              ZA00513,G64DPSS                                 @G64DPSS
*                                                              @G64DPSS
***********************************************************************
         SPACE 2                                               @G64DPSS
***********************************************************************
*        CONTAINS FLAGS FOR DA I/O AND SPECIAL ROUTING FLAGS          *
***********************************************************************
         SPACE
SUBDAIO  DC    X'00'               DA I/O FLAGS
SUBIOUSE EQU   X'80'               I/O ROUTINE IN USE
SUBEXP   EQU   X'10'               EXPECTING CONTROL RECORD
SUBFLGS  DC    X'00'               SPECIAL ROUTING FLAGS
SUBPFKWR EQU   X'08'               WRITE PFK UPDATES TO LIB
SUBPKLIB EQU   X'04'               PF KEYS ARE SUPPORTED
         DC    XL2'0'              RESERVED
         SPACE
***********************************************************************
*        ADCON SECTION.                                               *
***********************************************************************
         SPACE
SUBPBASE DC    A(SUBDCMB)          POINTER TO BASE DCM
         AIF   ('&PFK' NE 'Y').RRR
SUBBLK   DC    A(SUBDCB)           POINTER TO D A DCB
SUBPFKAD DC    V(IEEPFKEY)         POINTER TO PFK AREA
         SPACE
***********************************************************************
*        SUB WORK AREA                                                *
***********************************************************************
SUBRLPTR DC    F'0'                POINTER TO TTR ELEMENT
         EJECT
***********************************************************************
*        CONTROL BLOCKS FOR DIRECT ACCESS I/O.                        *
***********************************************************************
         DS    0D                  DOUBLE WORD ALLIGNMENT
SUBDCB   DCB   DDNAME=DCMDS,MACRF=(E),DSORG=PO,DEVD=DA,RECFM=V
         DS    0D                  DOUBLE WORD ALLIGNMENT
IOB      DC    X'420000'           IOB
IOBSEN   DC    X'00'               SENSE BYTE
IOBNR    EQU   X'08'               NO RECORD FOUND FLAG
         DC    A(0)
         DC    XL6'0'
RESCNT   DC    H'0'                RESIDUAL COUNT FIELD
         DC    A(CCW)              POINTER TO CHANNEL PROGRAM
         DC    A(SUBDCB)           POINTER TO DCB
         DC    2F'0'
SEEK     DC    2F'0'               CCHHR INFORMATION HERE
         EJECT
CCW      DC    X'31'               SEEK CCW
         DC    AL3(SEEK+3)
         DC    X'40000005'
         DC    X'08'               TIC CCW
         DC    AL3(CCW)
         DC    F'0'
TYPE     DC    X'00'               READ/WRITE CCW
DATA     DC    AL3(0)
         DC    X'2000'
LENGTH   DC    H'0'
         SPACE
PNJEF    DC    X'80'
         DC    FL3'0'
PNXLST   DC    X'87'               EXIT LIST
         DC    AL3(PNJFCB)
PNJFCB   DS    0D                  JOB FILE CONTROL BLOCK
PNJNAME  DC    C'SYS1.DCMLIB '
         DC    32C' '
         DC    X'000000000000000088000000'
         DC    XL31'0'
         DC    X'400000000000000000000002'
         DC    XL18'0'
         DC    X'01'
SUBVOL   DC    XL58'0'
.RRR     ANOP
         EJECT
***********************************************************************
*        RMS CHAN PROGS FOR ALL DISPLAY CONSOLES IN SYSTEM     @G64DPSS
***********************************************************************
*
*        THESE CCW CHAINS ARE USED BY RMS WHEN THE SYSTEM IS   @G64DPSS
*        ABNORMALLY TERMINATING.                               @G64DPSS
         AIF   ('&CON60' NE 'Y').K
         SPACE 1                                               @G64DPSS
         AIF   ('&T' EQ 'Y').KK
         ENTRY   SUB2260
.KK      ANOP
SUB2260  DS    0D                  2260 CHAN PROG
         CCW   X'07',0,X'60',960        ERASE
         CCW   X'05',A,X'A0',1          SET FOR WRITE
         CCW   X'05',0,X'60',0          WRITE USER MESSAGE
         CCW   X'05',B,X'20',2          SET CURSOR
A        DC    X'03'                    LINE FOR MESSAGE
B        DC    X'094A'                  LINE FOR CURSOR
.K       ANOP
         AIF   ('&CONANR' NE 'Y').L
         SPACE 1                                               @G64DPSS
         AIF   ('&T' EQ 'Y').LL
         ENTRY   SUBAN19                3277 MODEL 2
.LL      ANOP
         DS    0D                  FORCE ALIGNMENT FOR LABELS MB Y01271
SUBAN19  EQU   *                   3277 MODEL 2               MB Y01271
ABC      CCW   WR,WCC,DATAX,1      INITIAL WRITE
         CCW   WR,DATA3277,DATAX,LEND3277 BLANK THE LINE AND DEFINE    X
                                   THE FIELD                   @G64DPSS
         CCW   WR,0,SLI,0          WRITE USER MESSAGE         MB Y01271
WCC      DC    X'C4'               SOUND ALARM ORDERS
         SPACE 1                                               @G64DPSS
***********************************************************************
*                                                                     *
*        THE FIELDS AFTER DATA3277 MUST REMAIN TOGETHER SO THE @G64DPSS
*        ORDERS EXECUTED CORRECTLY.                            @G64DPSS
*                                                                     *
***********************************************************************
         SPACE 1                                               @G64DPSS
DATA3277 DC    X'115CF0'           SET BUFFER ADDRESS ORDER FOR ROW 24 X
                                   COL 1 (WARNING LINE)        @G64DPSS
         DC    X'3C404040'         REPEAT ADDRESS ORDER TO BLANK THE   X
                                   WARNING LINE (ROW 24)       @G64DPSS
         DC    X'115CF0'           SET BUFFER ADDRESS ORDER FOR ROW 24 X
                                   COL 1 (WARNING LINE)        @G64DPSS
         DC    X'1DE8'             START FIELD DEFINITION ORDER TO     X
                                   INTENSIFY THE WARNING LINE  @G64DPSS
LEND3277 EQU   *-DATA3277          NUMBER OF BYTES OF ORDERS   @G64DPSS
SLI      EQU   X'20'               SLI FLAG
WR       EQU   X'01'               WRITE OP CODE               @G64DPSS
DATAX    EQU   X'A0'               DATA CHAIN AND SLI FLAGS
.L       ANOP
         AIF   ('&CON85' NE 'Y').M
         SPACE 1                                               @G64DPSS
         AIF   ('&T' EQ 'Y').MM
         ENTRY   SUB3066                                      MC YM2935
.MM      ANOP
SUB3066  DS    0D                  3066 CHAN PROG              @G64DPSS
         CCW   X'27',AC,X'60',2    SET BUFFER ADDRESS
         CCW   X'01',DATA3066,X'60',LEND3066 BLANK THE WARNING LINE    X
                                                               @G64DPSS
         CCW   X'27',AC,X'60',2    SET BUFFER ADDRESS          @G64DPSS
         CCW   X'01',0,X'60',0     USER MESSAGE WRITE
         CCW   X'0F',AC,X'60',2    SET CURSOR ADDRESS
         CCW   X'0B',0,X'20',2     SOUND ALARM
AC       DC    X'2200'             LINE FOR MESSAGE AND                X
                                   CURSOR-LINE 35              @G64DPSS
DATA3066 DC    CL80' '             BLANK LINE FOR 3066 CONSOLE @G64DPSS
LEND3066 EQU   *-DATA3066          NUMBER OF BYTES TO BLANK    @G64DPSS
.M       ANOP
         AIF   ('&CON50' NE 'Y').N
         SPACE 1                                               @G64DPSS
         AIF   ('&T' EQ 'Y').NN
         ENTRY   SUB2250
.NN      ANOP
SUB2250  DS    0D                  2250 CHAN PROG
         CCW   X'07',RMSA,X'60',2       SET BUFFER AND STOP
         CCW   X'01',RMSB,X'60',10      WRITE INITIAL ORDERS
         CCW   X'01',0,X'60',0          WRITE USER MESSAGE
         CCW   X'01',RMSC,X'60',4       WRITE TRANSFER ORDERS
         CCW   X'27',RMSA,X'60',2       START REGENERATION
         CCW   X'0B',0,X'20',2          SOUND ALARM
RMSA     DC    H'0'                     BUFFER START ADDRESS
RMSB     DC    X'2A822A02400008002A40'  INITIAL ORDERS
RMSC     DC    X'2AFF0000'              TRANSFER ORDERS
.N       ANOP
         EJECT
***********************************************************************
*        EXECUTABLE BASE DCM CODE CONTAINED HERE                      *
***********************************************************************
*
*        TITLE 'IEECVDCC  BASE, DISPLAY CONTROL MODULE  (BASE DCM)'
*
*   STATUS - OS/VS2 SYSTEM CONTROL PROGRAM 2                   @G64DPSS
*
*  FUNCTION  THIS MODULE GAINS DONTROL AUTOMATICALLY WHENEVER THE
*            STIMER ELAPSES.  IT THEN POSTS A DCM SO THAT THE TIMER-
*            INTERPRETER CAN GET IN TO ANALYZE THE SITUATION.
*
*  ENTRY POINT    THE SOLE ENTRY POINT IS AT DCMSTART, AT A DISPLACE-
*                 MENT OF X'12' FROM THE BEGINNING OF THE MODULE.
*
*  INPUT     NONE
*
*  OUTPUT    NONE
*
*  EXTERNAL  REFERENCES    NONE
*
*  EXITS     NORMAL        TO CALLER, VIA BR 14.
*
*            ERROR         NONE
*
*  TABLES/WORK AREAS       DISPLAY CONTROL MODULE  (DCM)
*
*  ATTRIBUTES              RESIDENT, SERIALLY REUSABLE
*
*  CHANGE-ACTIVITY -                                           @G64DPSS
*            ZA00513,G64DPSS, ZA37028                          @ZA37028
*
***********************************************************************
         SPACE 1                                               @G64DPSS
SUBDCMB  DS    0F                  BASE DCM                  MC SA54211
DCMSTMR  DC    F'0'                TIME INTERVAL FOR STIMER
DCMSVDCM DC    F'0'                TI RTN SAVES DCM ADDR HERE
DCMUAD   DC    F'0'                TO PASS UCM ADDR
DCMIND   DC    X'00'               INDICATOR BYTE
DCMTMRST EQU   X'80'               STIMER IN EFFECT
DCMENTOP EQU   X'40'               ENTRY WAS FROM OPTIONS
DCMSWCH  EQU   X'20'               INTERNAL TIMER RTN SWITCH
DCMINTI  DC    X'00'               BYTE OF BITS FOR INTERNAL USE OF TI
DCMTMRCH EQU   X'80'               TIMER INTERVAL HAS BEEN CHANGED
DCM1FULL EQU   X'40'               AT LEAST 1 DCM HAS FULL SCREEN
DCMDYRL  EQU   X'20'               AT LEAST 1 DCM READY TO ROLL
DCMSTTMR EQU   X'10'               FORCE STIMER TO BE ISSUED   @ZA37028
DCMIVGCD DC    H'0'                TIME INTERVAL, IN SECONDS
DCMNEXTT DC    H'0'                TIME INTERVAL FOR NEXT STIMER MACRO
         EJECT
DCMSTART SAVE  (14,12)             SAVE REGISTERS
         LR    BASERC,R15          ESTABLISH INITIAL ADDRESSABILITY    X
                                                               @G64DPSS
         USING DCMSTART,BASERC
         SH    BASERC,HW18         POINT BASE REG TO INITIAL DC'S
         USING DCMSTMR,BASERC
         ST    RD,DCMSVADR         SAVE AREA ADDR
*
*        SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,
*              RELATED=(WQE,IEECVSUB(DCMRESTR))             JE @ZA00513
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                        *
               RELATED=(WQE,IEECVSUB(DCMRESTR))             JE @ZA00513
*        SETLOCK OBTAIN,TYPE=CMS,MODE=UNCOND,
*              RELATED=(UCM,IEECVSUB(DCMRESTR))             JE @ZA00513
         SETLOCK OBTAIN,TYPE=CMS,MODE=UNCOND,                          *
               RELATED=(UCM,IEECVSUB(DCMRESTR))             JE @ZA00513
         NI    DCMIND,OFFTMRST     TURN OFF STIMER RUNNING BIT
         L     UCMR4,DCMUAD        PICK UP UCM ENTRY ADDR
         USING UCMLIST,UCMR4                                JE @ZA00513
         L     DCMR3,UCMXB         PICK UP DCM ADDRESS      JE @ZA00513
         USING DCMTSRT,DCMR3                                JE @ZA00513
         OI    DCMR2FLG,DCMRXTIM   SET ON TIMER ELAPSED     JE @ZA00513
         TM    UCMSTS,UCMBF        CONSOLE BUSY BIT ON      JE @ZA00513
         BO    DCMRESTR            IF SO, DO NOT POST
         CLI   UCMECB,H80          DEVICE WAITING           JE @ZA00513
         BE    DCMPOST             IF SO, POST
         TM    UCMECB,POSTBIT      UCM POSTED FOR SOMETHING JE @ZA00513
         BO    DCMRESTR            YES, DON'T POST          JE @ZA00513
DCMPOST  LR    R11,UCMR4            SET ECB FOR POST        JE @ZA00513
         LA    R10,H255            SET COMPLETION CODE         @G64DPSS
         L R15,CVTPTR              GET CVT ADDR             JE @ZA00513
         USING CVTMAP,R15                                   JE @ZA00513
         L     R15,CVT0PT01        GET POST ENTRY POINT     JE @ZA00513
         BALR  R14,R15             GO POST ECB              JE @ZA00513
DCMRESTR DS    0H
*        SETLOCK RELEASE,TYPE=CMS,
*              RELATED=(UCM,IEECVSUB(DCMSTART))             JE @ZA00513
         SETLOCK RELEASE,TYPE=CMS,                                     *
               RELATED=(UCM,IEECVSUB(DCMSTART))             JE @ZA00513
*        SETLOCK RELEASE,TYPE=LOCAL,
*              RELATED=(WQE,IEECVSUB(DCMSTART))             JE @ZA00513
         SETLOCK RELEASE,TYPE=LOCAL,                                   *
               RELATED=(WQE,IEECVSUB(DCMSTART))             JE @ZA00513
         L     RD,DCMSVADR         EXIT CODING
         RETURN (14,12)            RESTORE REGISTERS
         SPACE
*        REGISTER EQUATES
DCMR3    EQU   3                   DCM PTR REG
UCMR4    EQU   4                   UCM PTR REG
BASERC   EQU   8                  PROGRAM BASE REG          JE @ZA00513
R10      EQU   10                                           JE @ZA00513
R11      EQU   11                                           JE @ZA00513
R14      EQU   14                                           JE @ZA00513
R15      EQU   15                                           JE @ZA00513
RD       EQU   13                  REGISTER 13
*        MISC. EQUATES
H255     EQU   255                 ROLL POST CODE              @G64DPSS
H80      EQU   X'80'               BIT SETTING
POSTBIT  EQU   X'40'                                        JE @ZA00513
OFFTMRST EQU   255-DCMTMRST        TO TURN BIT OFF
*        MISC. CONSTANTS
HW18     DC    H'18'               VALUE
DCMSVADR DC    F'0'                TO STORE SAVE AREA ADDR
         MEND
