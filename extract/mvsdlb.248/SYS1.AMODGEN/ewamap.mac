*@LIST PUSH;
*@LIST OFF;
* /*
         MACRO
         EWAMAP
EWA      DSECT
         SPACE 1
****************************************************************
*                                                              *
*  THIS DSECT DESCRIBES THE ERROR PROCEDURE WORK AREA COMMON   *
*  SECTION WHICH IS INVOKED BY  IECDERWA  AS AN INNER MACRO.   *
*  IT IS GOTTEN BY THE I/O INTERRUPT HANDLER OR POST STATUS.   *
*  THE WORKAREA CONSISTS OF TWO  SECTIONS:   -   THE  COMMON   *
*  SECTION WHICH CONTAINS INDICATORS,  COUNTERS,  AND  SENSE   *
*  INFORMATION - AND ERP DEPENDENT SECTIONS WHICH ARE AVAIL-   *
*  ABLE FOR ERP USE AS NEEDED.  THE DEPENDENT  SECTIONS  ARE   *
*  INCLUDED BY IECDERWA VIA OPTIONS THROUGH THE MACRO  CALL.   *
*                                                              *
****************************************************************
         SPACE 1
EWAHDR   DS    0F
EWAEXT   DS    A                   ADDRESS OF WORKAREA EXTENSION
EWAFLG1  DS    XL1                 FLAG BYTE 1
EWASLIS  EQU   X'80'               W.A. INVOLVED IN RECOVERY SENSE
*        EQU   X'40'               RESERVED                    @ZA16177
*        EQU   X'20'               RESERVED
*        EQU   X'10'               RESERVED
EWASCCD  EQU   X'0C'               SIO CONDITION CODE
EWASCC3  EQU   X'0C'               CONDITION CODE 3
EWASCC2  EQU   X'08'               CONDITION CODE 2
EWASCC1  EQU   X'04'               CONDITION CODE 1
EWASCC0  EQU   X'00'               CONDITION CODE 0
EWADDMSG EQU   X'02'               ERP DEPENDENT DATA TO BE
*                                  INCLUDED IN I/O ERROR MESSAGE
EWABDSNS EQU   X'01'               SENSE UNSUCCESSFUL
EWAFLG2  DS    XL1                 FLAG BYTE 2
EWAMDR   EQU   X'80'               IF ON, MDR REQUEST
*                                  IF OFF, OBR REQUEST
EWAWTEMP EQU   X'40'               ON - TEMPORARY WRITE ERROR
*                                  COUNTER TO BE UPDATED IF
*                                  DATA CHECK CONDITION
*                                  OFF - TEMPORARY READ ERROR
*                                  COUNTER TO BE UPDATED
EWACOVF  EQU   X'20'               COUNTER OVERFLOW INDICATOR
*                                  FOR STATISTICS UPDATE
EWADIR   EQU   X'10'               DIR IN PROGRESS
EWARCBLT EQU   X'08'               OBR RECORD BUILT BY CALLER  @G64SPLK
*        EQU   X'07'               RESERVED                    @G64SPLK
EWAFLG3  DS    XL1                 FOR DEVICE DEPENDENT ERP USAGE
EWAJAM   EQU   X'80'               3800 PAPER JAM              @Y40MPLG
EWASNSCT DS    XL1                 LOOP COUNT FOR SENSE FAILURE
EWASCTMX EQU   X'FF'               MAX # OF SENSES TRIED       @ZA25026
EWASSTAT DS    XL2                 CSW STATUS ON SENSE OPERATION
*                                  IF THIS IS A UNIT CHECK
EWACNTR1 DS    XL1                 COUNTERS FOR ERP USE
EWACNTR2 DS    XL1
EWACNTR3 DS    XL1
EWACNTR4 DS    XL1
EWASTUP  DS    XL2                 STATISTICS INFORMATION FOR
*                                  USE IN STATISTICS UPDATE
EWAERPIB DS    XL8                 ERPIB BUILT BY CCH FOR CHANNEL
*                                  ERRORS TO INDICATE WHETHER
*                                  RETRY IS TO BE ATTEMPTED
         ORG   EWAERPIB
         DS    XL1                 RESERVED
EWAUCB   DS    AL3                 UCB ADDRESS
EWARGFG1 DS    XL1                 FLAG BYTE
EWACSIO  EQU   X'80'               CSW STORED AFTER SIO
EWACINT  EQU   X'40'               CSW STORED AFTER I/O INTERRUPT
EWACTIO  EQU   X'20'               CSW STORED AFTER TEST I/O
EWACHIO  EQU   X'10'               CSW STORED AFTER HALT I/O
*        EQU   X'08'               RESERVED
EWACSNS  EQU   X'04'               SENSE DATA WAS STORED
EWACCNT  EQU   X'02'               CSW COUNT IS VALID
EWANORTY EQU   X'01'               NO RETRY INDICATOR
EWARGFG2 DS    XL1                 PROBABLE SOURCE INDICATORS
EWACCPU  EQU   X'80'               CPU ERROR
EWACCHA  EQU   X'40'               CHANNEL ERROR
EWACSCU  EQU   X'20'               STORAGE CONTROL UNIT ERROR
EWACSTG  EQU   X'10'               STORAGE ERROR
EWACCUE  EQU   X'08'               CONTROL UNIT ERROR
*        EQU   X'07'               RESERVED
EWAXCSW1 DS    XL1                 VALIDITY INDICATORS
EWACITF  EQU   X'80'               INTERFACE ADDR IS VALID
*        EQU   X'60'               RESERVED
EWACSQV  EQU   X'10'               SEQUENCE CODE IS VALID
EWACUNS  EQU   X'08'               UNIT STATUS IS VALID
EWACCMD  EQU   X'04'               COMMAND ADDRESS IS VALID
EWACCHV  EQU   X'02'               CHANNEL ADDRESS IS VALID
EWACDAV  EQU   X'01'               DEVICE ADDRESS IS VALID
EWAXCSW2 DS    XL1                 TERMINATION & SEQUENCE CODES
EWACTEC  EQU   X'C0'               TERMINATION CODE.
EWATER0  EQU   X'00'               INTERFACE DISCONNECT
EWATER1  EQU   X'04'               STOP, STACK, OR NORMAL TERM
EWATER2  EQU   X'80'               SELECTIVE RESET
EWATER3  EQU   X'C0'               SYSTEM RESET
*        EQU   X'30'               RESERVED
EWACDIN  EQU   X'08'               I/O ERROR ALERT
EWACSEQ  EQU   X'07'               CHANNEL DEPENDENT SEQ. CODES
EWASEQ0  EQU   X'00'
EWASEQ1  EQU   X'01'
EWASEQ2  EQU   X'02'
EWASEQ3  EQU   X'03'
EWASEQ4  EQU   X'04'
EWASEQ5  EQU   X'05'
EWASEQ6  EQU   X'06'
EWASEQ7  EQU   X'07'
         ORG   EWAERPIB+L'EWAERPIB  '
EWACHA   DS    XL2                 UNIT ADDRESS ON WHICH LAST
*                                   I/O WAS STARTED
EWAFLGA  DS    XL1                 FLAGS FOR IOS INTERNAL USE  @ZA16177
EWAINIT  EQU   X'80'               PATH VALID FOR SENSE        @ZA16177
EWADONE  EQU   X'40'               SENSE COMPLETE              @ZA16177
EWAVLCHN EQU   X'20'               EWACHAIN FIELD IS VALID     @ZA16177
*        EQU   X'10'               RESERVED                    @G64JPLN
EWADDE   EQU   X'0F'               BITS RESERVED FOR DEVICE DEPENDENT
*                                  EXITS                       @G64JPLN
EWACPU   DS    XL1                 CHANNEL SET ON WHICH I/O
*                                  ERROR WAS ENCOUNTERED       @G64APLK
EWADRCW  DS    0A                  ADDR OF RECORD CONTROL TABLE (VALID
*                                  ONLY IF EWARCBLT=1)         @G64SPLK
EWADCNT  DS    XL1                 NUMBER OF BYTES OF OBR INFO
EWADDISP DS    XL3                 ADDR OF 1ST BYTE OF OBR DEVICE
*                                  DEPENDENT INFO (EWARCBLT=0) @G64SPLK
EWAIERP  DS    XL128               AREA FOR INDIVIDUAL ERP USE
         ORG   EWAIERP
         SPACE 1
*  IOS USAGE OF ERP DEPENDENT AREA FOR READING SENSE DATA  AND
*  FOR A TEMPORARY STORAGE BEFORE THE ERP IS INITIALLY ENTERED
EWASNS   EQU   *                   SENSE DATA START
         DS    XL64                SENSE INFORMATION
EWASCSW  DS    CL7                 SLOT TO SAVE CSW ON INTERCEPT
         DS    CL1                 RESERVED                    @ZA16177
EWACHAIN DS    F                   POINTER TO EWA FOR ALT PATH @ZA16177
EWAHL    EQU   32                  HEADER LENGTH
         MEND
* */
*@LIST POP;
*
* /************************************************************/
* /*                                                          */
* /* THIS STRUCTURE DESCRIBES THE ERROR PROCEDURE  WORK AREA  */
* /* COMMON SECTION WHICH IS INVOKED BY IECDERWA AS AN INNER  */
* /* MACRO.  IT IS GOTTEN BY THE I/O  INTERRUPT  HANDLER  OR  */
* /* POST STATUS. THE WORKAREA CONSISTS OF TWO SECTIONS: THE  */
* /* COMMON SECTION WHICH CONTAINS INDICATORS, COUNTERS, AND  */
* /* SENSE INFORMATION - AND  ERP DEPENDENT  SECTIONS  WHICH  */
* /* ARE AVAILABLE FOR ERP USE AS NEEDED. THE DEPENDENT SEC-  */
* /* TIONS ARE INCLUDED BY IECDERWA VIA OPTIONS THROUGH  THE  */
* /* MACRO CALL.                                              */
* /*                                                          */
* /************************************************************/
*
*   DCL 1 EWA  BDY(DWORD) BASED(EWAPTR),
*       2  EWAHDR   PTR(31),       /* EWA HEADER              */
*         3 EWAEXT  PTR(31),       /* ADDRESS OF WA EXTENTION */
*       2  EWAFLAGS CHAR(4),       /* FOUR BYTES OF FLAGS     */
*         3 EWAFLG1 BIT(8),        /* FLAG BYTE 1             */
*          4 EWASLIS BIT(1),       /* WORK AREA INVOLVED IN   */
*                                  /* RECOVERY SENSE          */
*          4 *        BIT(1),      /* RESERVED               @ZA16177*/
*          4 *        BIT(1),      /* RESERVED                */
*          4 *        BIT(1),      /* RESERVED                */
*          4 EWASCCD  BIT(2),      /* SIO CONDITION CODE      */
*           5 EWASCC3 BIT(2),      /* CONDITION CODE 3        */
*            6 EWASCC2 BIT(1),     /* CONDITION CODE 2        */
*            6 EWASCC1 BIT(1),     /* CONDITION CODE 1
*                                     SEE END OF EWA FOR CC 0 */
*          4 EWADDMSG BIT(1),      /* ERP DEPENDENT DATA TO BE
*                                     INCLUDED IN I/O ERROR
*                                     MESSAGE                 */
*          4 EWABDSNS BIT(1),      /* SENSE UNSUCCESSFUL      */
*         3 EWAFLG2 BIT(8),        /* FLAG BYTE 2             */
*          4 EWAMDR BIT(1),        /* IF ON, MDR REQUEST
*                                     IF OFF, OBR REQUEST     */
*          4 EWAWTEMP BIT(1),      /* ON - TEMPORARY WRITE ERR
*                                     COUNTER TO BE UPDATE IF
*                                     DATA CHECK CONDITION
*                                     OFF - TEMPORARY READ ERR
*                                     COUNTER TO BE UPDATED   */
*          4 EWACOVF BIT(1),       /* COUNTER OVERFLOW FOR
*                                     STATISTICS UPDATE       */
*          4 EWADIR  BIT(1),       /* DIR IN PROGRESS         */
*          4 EWARCBLT BIT(1),      /* OBR RECORD BUILT BY CALLER
*                                                            @G64SPLK*/
*          4 *     BIT(3),         /* RESERVED               @G64SPLK*/
*         3 EWAFLG3 BIT(8),        /* FOR DEVICE DEPENDENT ERP
*                                     USAGE                   */
*          4 EWAJAM BIT(1),        /* 3800 PAPER JAM         @Y40MPLG*/
*         3 EWASNSCT BIT(8),       /* LOOP COUNT FOR SENSE
*                                     FAILURE                 */
*         4 EWASCTMX BIT(8),       /* MAX. # OF SENSES TRIED @ZA25026*/
*       2  EWASSTAT BIT(16),       /* CSW STATUS ON SENSE OP-
*                                     ERATION IF THIS IS A
*                                     UNIT CHECK.             */
*       2  EWACNTRS CHAR(4),       /* COUNTERS FOR ERP USE    */
*         3 EWACNTR1 PTR(8),       /* COUNTER 1               */
*         3 EWACNTR2 PTR(8),       /* COUNTER 2               */
*         3 EWACNTR3 PTR(8),       /* COUNTER 3               */
*         3 EWACNTR4 PTR(8),       /* COUNTER 4               */
*       2  EWASTUP  CHAR(2),       /* STATISTICS INFORMATION
*                                     FOR UPDATING STATISTICS */
*       2  EWAERPIB,               /* ERPIB BUILT BY CCH FOR
*                                     CHANNEL ERRORS TO INDI-
*                                     CATE TO ATTEMPT A RETRY */
*         3 *        CHAR(1),      /* RESERVED                */
*         3 EWAUCB   PTR(24),      /* UCB ADDRESS            @G64SPLK*/
*         3 EWARGFG1 BIT(8),       /* FLAG BYTE               */
*          4 EWACSIO BIT(1),       /* CSW STORED AFTER SIO    */
*          4 EWACINT BIT(1),       /* CSW STORED AFTER I/O INT*/
*          4 EWACTIO BIT(1),       /* CSW STORED AFTR TEST I/O*/
*          4 EWACHIO BIT(1),       /* CSW STORED AFTR HALT I/O*/
*          4 *       BIT(1),       /* RESERVED                */
*          4 EWACSNS BIT(1),       /* SENSE DATA WAS STORED   */
*          4 EWACCNT BIT(1),       /* CSW COUNT IS VALID      */
*          4 EWANORTY BIT(1),      /* NO RETRY INDICATOR      */
*         3 EWARGFG2 BIT(8),       /* PROBABLE SOURCE INDICTRS*/
*          4 EWACCPU BIT(1),       /* CPU ERROR               */
*          4 EWACCHA BIT(1),       /* CHANNEL ERROR           */
*          4 EWACSCU BIT(1),       /* STORAGE CONTROL UNIT ERR*/
*          4 EWACSTG BIT(1),       /* STORAGE ERROR           */
*          4 EWACCUE BIT(1),       /* CONTROL UNIT ERROR      */
*          4 *       BIT(3),       /* RESERVED                */
*         3 EWAXCSW1 BIT(8),       /* VALIDITY INDICATORS     */
*          4 EWACITF BIT(1),       /* INTERFACE ADDR IS VALID */
*          4 *       BIT(2),       /* RESERVED                */
*          4 EWACSQV BIT(1),       /* SEQUENCE CODE IS VALID  */
*          4 EWACUNS BIT(1),       /* UNIT STATUS IS VALID    */
*          4 EWACCMD BIT(1),       /* COMMAND ADDRESS IS VALID*/
*          4 EWACCHV BIT(1),       /* CHANNEL ADDR IS VALID   */
*          4 EWACDAV BIT(1),       /* DEVICE ADDRESS IS VALID */
*         3 EWAXCSW2 BIT(8),       /* TERMINATN & SEQNCE CODES*/
*          4 EWACTEC BIT(2),       /* TERMINATION CODE
*                                     SEE BELOW FOR VALUES    */
*          4 *       BIT(2),       /* RESERVED                */
*          4 EWACDIN BIT(1),       /* I/O ERROR ALERT         */
*          4 EWACSEQ BIT(3),       /* SEQUENCE CODES - SEE
*                                     BELOW                   */
*       2  EWACHA   CHAR(2),       /* UNIT ADDRESS ON WHICH
*                                     LAST I/O WAS STARTED    */
*       2  EWAFLGA  BIT(8),        /* FLAGS FOR IOS INTERNAL USE
*                                                            @ZA16177*/
*
*         3 EWAINIT  BIT(1),       /* PATH VALID FOR SENSE   @ZA16177*/
*         3 EWADONE  BIT(1),       /* SENSE COMPLETE         @ZA16177*/
*         3 EWAVLCHN BIT(1),       /* EWACHAIN FIELD VALID   @ZA16177*/
*         3 *        BIT(1),       /* RESERVED               @G64JPLN*/
*         3 EWADDE   BIT(4),       /* BITS RESERVED FOR DEVICE
*                                     DEPENDENT EXITS        @G64JPLN*/
*       2  EWACPU   CHAR(1),       /* CHANNEL SET ON WHICH I/O
*                                     ERROR WAS ENCOUNTERED  @G64SPLK*/
*       2  EWADRCW PTR(31),        /* ADDR OF RECORD CONTROL TABLE
*                                     (VALID ONLY IF EWARCBLT=1)
*                                                            @G64SPLK*/
*         3  EWADCNT  CHAR(1),     /* # OF BYTES OF OBR INFO @G64SPLK*/
*         3  EWADDISP PTR(24),     /* ADDR OF OBR DEVICE DEPENDENT
*                                     INFORMATION (EWARCBLT=0)
*                                                            @G64SPLK*/
*       2  EWAIERP  CHAR(128)  BDY(DWORD);
*                                  /* AREA FOR INDIVIDUL ERPS */
*
*  DCL 1 EWADDIOS DEF(EWAIERP) BDY(DWORD),
*
* /*  IOS USAGE OF ERP DEPENDENT AREA FOR READING SENSE DATA  */
* /*  FOR TEMPORARY STORAGE BEFORE ERP IS INITIALLY ENTERED.  */
*
*       2  EWASNS  CHAR(64),       /* SENSE DATA START        */
*       2  EWASCSW CHAR(7),        /* SLOT TO SAVE CSW ON
*                                     INTERCEPT               */
*       2  *       CHAR(1),        /* RESERVED               @ZA16177*/
*       2  EWACHAIN PTR(31) BDY(WORD), /* POINTER TO EWA FOR ALT.
*                                         PATH               @ZA16177*/
*       2  EWAEND  CHAR(0);        /* END OF EWA              */
*   DCL EWASCC0 BIT(8) CONSTANT('00'X);  /*
*                                     CONDITION CODE 0        */
*   DCL EWATER0 BIT(2) CONSTANT('00'B);  /*
*                                  INTERFACE DISCONNECT       */
*   DCL EWATER1 BIT(2) CONSTANT('01'B);  /*
*                                  STOP, STACK, NORMAL TERMNTN*/
*   DCL EWATER2 BIT(2) CONSTANT('10'B);  /*
*                                  SELECTIVE RESET            */
*   DCL EWATER3 BIT(2) CONSTANT('11'B);  /*
*                                  SYSTEM RESET               */
*   DCL EWACSEQ0 BIT(3) CONSTANT('000'B);
*   DCL EWACSEQ1 BIT(3) CONSTANT('001'B);
*   DCL EWACSEQ2 BIT(3) CONSTANT('010'B);
*   DCL EWACSEQ3 BIT(3) CONSTANT('011'B);
*   DCL EWACSEQ4 BIT(3) CONSTANT('100'B);
*   DCL EWACSEQ5 BIT(3) CONSTANT('101'B);
*   DCL EWACSEQ6 BIT(3) CONSTANT('110'B);
*   DCL EWACSEQ7 BIT(3) CONSTANT('111'B);
