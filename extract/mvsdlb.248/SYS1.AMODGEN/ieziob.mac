*
*        %GOTO  IOBL1;      /*
         MACRO
         IEZIOB &DSECT=YES   */
*%IOBL1 : ;
*
*/*            INPUT/OUTPUT BLOCK                                    */
*/*                                                                  */
*/*  OS/VS2 SU30, 01/18/77, LEVEL=1                                  */
*/*                                                                  */
*/*  METHOD OF ACCESS                                                */
*/*      BAL  - DSECT IS PRODUCED UNLESS DSECT=NO IS SPECIFIED.      */
*/*             USING ON IOB GIVES ADDRESSABILITY FOR ALL SYMBOLS.   */
*/*      PL/S - DCL (IOBPRPTR,IOBSTPTR) PTR                          */
*/*                                                                  */
*%GOTO IOBL2;  /*
         SPACE 1
         AIF   ('&DSECT' EQ 'NO').NODSCT
IOB      DSECT , -       IOBSTDRD-16
         AGO   .CONT
.NODSCT  ANOP
         DS    0D
IOB      EQU   * -       IOBSTDRD-16
.CONT    ANOP
         SPACE 1
***********************************************************************
*                                                                     *
*                    PREFIX SECTIONS OF THE IOB                       *
*                                                                     *
***********************************************************************
         SPACE 1
IOBPREFX DS    0D
         SPACE 1
*                            ******************************************
*                            *                                        *
*                            *         QSAM,BSAM,BPAM PREFIX          *
*                            *    CHAINED SCHEDULING *** 16 BYTES     *
*                            *                                        *
*                            ******************************************
         SPACE 1
IOBQSAMC DS    0D
IOBBSAMC DS    0D
IOBBPAMC DS    0D
IOBCFLG1 DS    B -       I/O INDICATORS
IOBV6CHN EQU   X'80' -   I/O CHAINED BIT SET BY IGG019V6  @ZA56251
IOBRSV02 EQU   X'40',,C'X' RESERVED
IOBRSV03 EQU   X'20',,C'X' RESERVED
IOBRSV04 EQU   X'10',,C'X' RESERVED
IOBPTST  EQU   X'08' -   NOTE OR POINT OPERATION IS IN PROCESS
IOBABAPP EQU   X'04' -   ERROR HAS BEEN PROCESSED ONCE BY ABNORMAL-END
*                        APPENDAGE ROUTINE
IOBRSTCH EQU   X'02' -   RESTART CHANNEL
IOBPCI   EQU   X'01' -   SET WHEN A PROGRAM-CONTROLLED INTERRUPTION
*                        (PCI) OCCURS
IOBRSV05 DS    XL1 -     RESERVED
IOBCINOP DS    CL1 -     OFFSET OF THE LAST I/O COMMAND FOR INPUT
*                        OPERATION (NOP CCW) FROM THE ORIGIN OF THE ICB
IOBCONOP DS    CL1 -     OFFSET OF THE LAST I/O COMMAND FOR AN OUTPUT
*                        OPERATION (NOP CCW) FROM THE ORIGIN OF THE ICB
IOBCECB  DS    F -       EVENT CONTROL BLOCK USED BY BSAM OR QSAM.
*                        SHOWS THE STATUS OF THE I/O OPERATION.
IOBCICB  DS    A -       ADDRESS OF THE FIRST INTERRUPT CONTROL BLOCK
*                        (ICB) ON THE ICB QUEUE
IOBCNOPA DS    A -       ADDRESS OF THE NOP COMMAND AT THE END OF THE
*                        QUEUE
         SPACE 2
         ORG   IOBPREFX+8
         SPACE 1
*                            ******************************************
*                            *                                        *
*                            *        QSAM,BSAM,BPAM PREFIX           *
*                            *    NORMAL SCHEDULING *** 8 BYTES       *
*                            *                                        *
*                            ******************************************
         SPACE 1
IOBQSAMN DS    0D
IOBBSAMN DS    0D
IOBBPAMN DS    0D
IOBNIOBA DS    0A -      ADDRESS OF THE NEXT IOB ASSOCIATED WITH ONE
*                        PARTICULAR DCB.  THE IOB'S ARE CHAINED IN
*                        SEQUENTIAL ORDER.
IOBNFLG1 DS    B -       FLAG BYTE
IOBPRTOV EQU   X'80' -   PRTOV HAS OCCURRED (PRINTER DEVICES)
*                        (MDC331)                              @Z40FP9A
IOBSEGMT EQU   X'80' -   SEGMENTING OF A SPANNED RECORD IS IN PROCESS
*                        (QSAM LOCATE MODE, LOGICAL RECORD INTERFACE,
*                        UPDATE PROCESSING) (DIRECT ACCESS) (OS/VS2)
*                        (MDC332)                              @Z40FP9A
IOBWRITE EQU   X'40' -   A WRITE OPERATION IS IN PROCESS
IOBREAD  EQU   X'20' -   A READ OPERATION IS IN PROCESS
IOBUPDAT EQU   X'10' -   UPDATE FLAG.  SET ON TOGETHER WITH BIT 1 OF
*                        THIS BYTE TO SHOW THAT THE BLOCK IS TO BE
*                        UPDATED.  CAN ONLY OCCUR IF THE OPEN
*                        PARAMETER IS UPDAT.
IOBBKSPC EQU   X'08' -   IOB BEING USED FOR BACKSPACE, CONTROL OR
*                        NOTE/POINT OPERATION
IOBSPAN  EQU   X'04' -   THE RECORD CURRENTLY BEING PROCESSED HAS MORE
*                        THAN ONE SEGMENT (QSAM LOCATE MODE, LOGICAL
*                        RECORD INTERFACE, UPDATE PROCESSING OF
*                        SPANNED RECORDS)
IOBUPERR EQU   X'02' -   UPDATE CHANNEL PROGRAM HAS BEEN SPLIT INTO
*                        TWO PARTS                               MDC036
IOBFIRST EQU   X'01' -   THIS IS THE FIRST IOB ON CHAIN
IOBNIOBB DS    AL3 -     ADDRESS OF THE NEXT IOB ASSOCIATED WITH ONE
*                        PARTICULAR DCB.  THE IOB'S ARE CHAINED IN
*                        SEQUENTIAL ORDER.
IOBNECB  DS    F -       EVENT CONTROL BLOCK USED BY QSAM TO INDICATE
*                        THE STATUS OF THE I/O EVENT
         SPACE 2
         ORG   IOBPREFX+8
         SPACE 1
*                            ******************************************
*                            *                                        *
*                            *       BDAM PREFIX *** 8 BYTES          *
*                            *                                        *
*                            ******************************************
         SPACE 1
IOBBDAM  DS    0D
IOBDQADA DS    0A -      ADDRESS OF THE OTHER IOB REFERRED TO IN
*                        DESCRIPTION OF IOBDEQ BELOW
IOBDEQIN DS    B -       DEQUEUE LOOP INDICATOR
IOBDEQ   EQU   X'80' -   THIS IOB IS USING A TRACK THAT WAS DEQUEUED BY
*                        ANOTHER IOB WHICH IS NOW WAITING TO DEQUEUE
*                        ANOTHER TRACK.  THE OTHER IOB ENQUEUED ON TWO
*                        OR MORE TRACKS TO FIND SPACE IN WHICH TO
*                        WRITE/ADD A SPANNED RECORD.  THE OTHER IOB
*                        REMAINED ENQUEUED UNTIL IT EITHER WROTE THE
*                        RECORD OR DETERMINED THAT THERE WAS ENOUGH
*                        CONTIGUOUS FREE SPACE ON THE TRACKS TO CONTAIN
*                        THE RECORD.  AFTER THE OTHER IOB DEQUEUED THE
*                        CURRENT TRACK, THE DEQUEUEING WAS INTERRUPTED
*                        BY THE NEED OF THIS IOB FOR THE CURRENT TRACK.
IOBRSV07 EQU   X'40',,C'X' RESERVED
IOBRSV08 EQU   X'20',,C'X' RESERVED
IOBRSV09 EQU   X'10',,C'X' RESERVED
IOBRSV10 EQU   X'08',,C'X' RESERVED
IOBRSV11 EQU   X'04',,C'X' RESERVED
IOBRSV12 EQU   X'02',,C'X' RESERVED
IOBRSV13 EQU   X'01',,C'X' RESERVED
IOBDQADB DS    AL3 -     ADDRESS OF THE OTHER IOB REFERRED TO IN
*                        DESCRIPTION OF IOBDEQ ABOVE
IOBSWAP  DS    A -       ADDRESS OF THE SEGMENT WORK AREA USED BY THIS
*                        IOB TO READ OR WRITE A RECORD OF A FORMAT VS
*                        DATA SET
         SPACE 2
         ORG   IOBPREFX+12
         SPACE 1
*                            ******************************************
*                            *                                        *
*                            *       GAM,QISAM PREFIX *** 4 BYTES     *
*                            *                                        *
*                            ******************************************
         SPACE 1
IOBGAM   EQU   *
IOBQISAM EQU   *
IOBGQECB DS    F -       EVENT CONTROL BLOCK THAT IS WITHIN FIRST IOB
*                        ONLY  (GAM)
*                        EVENT CONTROL BLOCK USED TO INDICATE STATUS
*                        OF AN I/O EVENT  (QISAM)
         SPACE 3
***********************************************************************
*                                                                     *
*                    STANDARD SECTION OF THE IOB                      *
*                                                                     *
***********************************************************************
         SPACE 1
IOBSTDRD DS    0D
         SPACE 1
IOBFLAG1 DS    B -       FLAG BYTE 1
IOBDATCH EQU   X'80' -   DATA CHAINING USED IN CHANNEL PROGRAM
IOBCMDCH EQU   X'40' -   COMMAND CHAINING USED IN CHANNEL PROGRAM
IOBERRTN EQU   X'20' -   ERROR ROUTINE IS IN CONTROL
IOBRPSTN EQU   X'10' -   DEVICE IS TO BE REPOSITIONED
IOBCYCCK EQU   X'08' -   CYCLIC REDUNDANCY CHECK (CRC) NEEDED (TAPE)
IOBFCREX EQU   X'08' -   FETCH COMMAND RETRY EXIT (DIRECT ACCESS)
IOBIOERR EQU   X'04' -   EXCEPTIONAL CONDITION.  AFTER THE ERROR
*                        ROUTINE RETURNS AND THIS BIT IS ON, THE ERROR
*                        IS CONSIDERED PERMANENT.
IOBUNREL EQU   X'02' -   IOB UNRELATED FLAG (I.E., NONSEQUENTIAL)
IOBRSTRT EQU   X'01' -   IF 1, RESTART ADDRESS IN IOB TO BE USED.
*                        IF 0, START.  (OS/VS1)                  MDC034
IOBSPSVC EQU   X'01' -   FOR SAM/PAM, SET BY SVC IF I/O APPENDAGE
*                        SHOULD NOT PROCESS INTERRUPT (OS/VS2)   MDC035
IOBFLAG2 DS    B -       FLAG BYTE 2
IOBHALT  EQU   X'80' -   HALT I/O HAS BEEN ISSUED BY SVC PURGE ROUTINE
IOBSENSE EQU   X'40' -   SENSE WILL NOT BE PERFORMED UNTIL THE DEVICE
*                        IS FREE
IOBPURGE EQU   X'20' -   IOB HAS BEEN PURGED TO ALLOW I/O ACTIVITY TO
*                        QUIESCE.  (OS/VS1)                      MDC046
IOBRRT3  EQU   X'20' -   TYPE 3 RELATED REQUEST (OS/VS2)         MDC048
IOBRDHA0 EQU   X'10' -   HOME ADDRESS (R0) RECORD IS TO BE READ.  SEEK
*                        COMMAND NOT NEEDED.  (OS/VS1)           MDC047
IOBRRT2  EQU   X'10' -   TYPE 2 RELATED REQUEST (OS/VS2)         MDC049
IOBALTTR EQU   X'08' -   NO TEST FOR OUT-OF-EXTENT.  AN ALTERNATE TRACK
*                        IS IN USE.
IOBSKUPD EQU   X'04' -   SEEK ADDRESS IS BEING UPDATED.  CYLINDER END
*                        OR FILE MASK VIOLATION HAS OCCURRED.
IOBSTATO EQU   X'02' -   DEVICE END STATUS HAS BEEN OR'ED WITH CHANNEL
*                        END STATUS  (GRAPHICS DEVICE)
IOBPNCH  EQU   X'01' -   ERROR RECOVERY IN CONTROL FOR A 2540 CARD
*                        PUNCH WITH THREE BUFFERS  (QSAM)
*                        RESETPL MACRO INSTRUCTION WAS USED  (BTAM)
IOBSENS0 DS    B -       FIRST SENSE BYTE
IOBS0B0  EQU   X'80' -   BIT 0 (DEVICE DEPENDENT)
IOBS0B1  EQU   X'40' -   BIT 1 (DEVICE DEPENDENT)
IOBS0B2  EQU   X'20' -   BIT 2 (DEVICE DEPENDENT)
IOBS0B3  EQU   X'10' -   BIT 3 (DEVICE DEPENDENT)
IOBS0B4  EQU   X'08' -   BIT 4 (DEVICE DEPENDENT)
IOBS0B5  EQU   X'04' -   BIT 5 (DEVICE DEPENDENT)
IOBS0B6  EQU   X'02' -   BIT 6 (DEVICE DEPENDENT)
IOBS0B7  EQU   X'01' -   BIT 7 (DEVICE DEPENDENT)
IOBSNSC9 EQU   X'01' -   CHANNEL 9 SENSED IN CARRIAGE TAPE
IOBSENS1 DS    B -       SECOND SENSE BYTE
IOBS1B0  EQU   X'80' -   BIT 0 (DEVICE DEPENDENT)
IOBS1B1  EQU   X'40' -   BIT 1 (DEVICE DEPENDENT)
IOBS1B2  EQU   X'20' -   BIT 2 (DEVICE DEPENDENT)
IOBS1B3  EQU   X'10' -   BIT 3 (DEVICE DEPENDENT)
IOBS1B4  EQU   X'08' -   BIT 4 (DEVICE DEPENDENT)
IOBS1B5  EQU   X'04' -   BIT 5 (DEVICE DEPENDENT)
IOBS1B6  EQU   X'02' -   BIT 6 (DEVICE DEPENDENT)
IOBS1B7  EQU   X'01' -   BIT 7 (DEVICE DEPENDENT)
IOBECBPT DS    0A -      ADDRESS OF ECB TO BE POSTED ON I/O COMPLETION
IOBECBCC DS    CL1 -     COMPLETION CODE FOR AN I/O REQUEST.  THIS CODE
*                        WILL APPEAR IN THE FIRST BYTE OF AN ECB.
IOBECBPB DS    AL3 -     ADDRESS OF THE ECB TO BE POSTED UPON THE
*                        COMPLETION OF AN I/O EVENT.  FOR BSAM/BPAM,
*                        ECB IS IN THE DECB.  FOR QSAM, ECB IS IN THE
*                        QSAM PREFIX OF THE IOB.
IOBFLAG3 DS    0B -      I/O SUPERVISOR ERROR ROUTINE FLAG BYTE
*                        (DEVICE DEPENDENT)
IOBFL3   DS    B -       FLAG 3 - STATUS ERROR COUNTS FOR MAGNETIC
*                        DOCUMENT READER (3890) OR FLAGS FOR 3800
*                        (OS/VS1)  (MDC307)                    @X50AD9A
IOBCCC   EQU   X'80' -   CHANNEL CONTROL CHECK ERROR COUNT (3890)
*                                                                MDC038
IOBICC   EQU   X'40' -   INTERFACE CONTROL CHECK ERROR COUNT (3890)
*                                                                MDC039
IOBCDC   EQU   X'20' -   CHANNEL DATA CHECK ERROR (3890)         MDC040
IOBACU   EQU   X'10' -   ATTENTION/CONTROL UNIT ERROR (3890)     MDC041
IOBCNC   EQU   X'08' -   CHAIN CHECK ERROR (3890)                MDC042
IOBSDR   EQU   X'08' -   STATISTICS ONLY FLAG (3800) (MDC306)  @X50AD9A
IOBMSG   EQU   X'04' -   MESSAGE FLAG (3890 OR 3800) (MDC308)  @X50AD9A
IOBICL   EQU   X'02' -   INCORRECT LENGTH ERROR (3890)           MDC020
IOBJAM   EQU   X'02' -   SET ON WHEN JES SUBSYSTEM HAS DETECTED A
*                        PAPER JAM SO 3800 ERP WILL SUPPRESS ITS
*                        INTERVENTION REQUIRED MESSAGE (3800)
*                        (MDC330)                              @X50AD9A
IOBLOG   EQU   X'01' -   LOG OUT FLAG (3890 OR 3800) (MDC309)  @X50AD9A
IOBCSW   DS    0CL7 -    LOW-ORDER SEVEN BYTES OF THE LAST CSW THAT
*                        REFLECTS THE STATUS FOR THIS REQUEST
IOBIOCSW DS    0CL5 -    LOW-ORDER BYTES OF CSW FOR MAGNETIC DOCUMENT
*                        READER (3890) (OS/VS1)                  MDC022
IOBCMDA  DS    AL3 -     COMMAND ADDRESS (3890)                  MDC023
IOBSTBYT DS    0BL2 -    STATUS BITS 32-47 (3890)                MDC024
IOBUSTAT DS    B -       CSW UNIT STATUS FLAGS (3800) (MDC311) @Z40MP9A
IOBUSB0  EQU   X'80' -   ATTENTION  (MDC312)                   @Z40MP9A
IOBUSB1  EQU   X'40' -   STATUS MODIFIER  (MDC313)             @Z40MP9A
IOBUSB2  EQU   X'20' -   CONTROL UNIT END  (MDC314)            @Z40MP9A
IOBUSB3  EQU   X'10' -   BUSY  (MDC315)                        @Z40MP9A
IOBUSB4  EQU   X'08' -   CHANNEL END  (MDC316)                 @Z40MP9A
IOBUSB5  EQU   X'04' -   DEVICE END  (MDC317)                  @Z40MP9A
IOBUSB6  EQU   X'02' -   UNIT CHECK  (MDC318)                  @Z40MP9A
IOBUSB7  EQU   X'01' -   UNIT EXCEPTION  (MDC319)              @Z40MP9A
IOBCSTAT DS    B -       CSW CHANNEL STATUS FLAGS (3800)
*                        (MDC320)                              @Z40MP9A
IOBCSB0  EQU   X'80' -   PROGRAM CONTROL INTERRUPT  (MDC321)   @Z40MP9A
IOBCSB1  EQU   X'40' -   INCORRECT LENGTH  (MDC322)            @Z40MP9A
IOBCSB2  EQU   X'20' -   PROGRAM CHECK  (MDC323)               @Z40MP9A
IOBCSB3  EQU   X'10' -   PROTECTION CHECK  (MDC324)            @Z40MP9A
IOBCSB4  EQU   X'08' -   CHANNEL DATA CHECK  (MDC325)          @Z40MP9A
IOBCSB5  EQU   X'04' -   CHANNEL CONTROL CHECK  (MDC326)       @Z40MP9A
IOBCSB6  EQU   X'02' -   INTERFACE CONTROL CHECK  (MDC327)     @Z40MP9A
IOBCSB7  EQU   X'01' -   CHAINING CHECK  (MDC328)              @Z40MP9A
         DS    XL2 -     LAST TWO BYTES OF IOBCSW
IOBSTART DS    0A -      ADDRESS OF CHANNEL PROGRAM TO BE EXECUTED
IOBSIOCC DS    B -       SIO CODE.  BITS 2 AND 3 CONTAIN CONDITION CODE
*                        RETURNED AFTER EXECUTION OF SIO INSTRUCTION
*                        FOR THIS I/O EVENT.
IOBSTRTB DS    AL3 -     ADDRESS OF CHANNEL PROGRAM TO BE EXECUTED
IOBDCBPT DS    0A -      ADDRESS OF DCB ASSOCIATED WITH THIS IOB
IOBFLAG4 DS    B -       FLAG BYTE                               MDC011
IOBGDPOL EQU   X'80' -   RE-ENTER SIO APPENDAGE FOR OLTEP GUARANTEED
*                        DEVICE PATH                             MDC012
IOBCC3WE EQU   X'40' -   USER REQUESTS THAT IOS POST A X'6D' FOR A
*                        CONDITION CODE 3 ON ATTEMPTED I/O OPERATIONS
*                        (OS/VS2)  (MDC310)                    @Z309P9A
IOBPMERR EQU   X'20' -   VTAM SETS THIS BIT ON TO INDICATE TO IOS THAT
*                        VTAM SHOULD BE POSTED WITH A PERMANENT I/O
*                        ERROR BECAUSE ALL ALTERNATE PATHS TO THE 3705
*                        HAVE BEEN TRIED (OS/VS1)  (MDC329)    @X04BH9A
IOBRSV40 EQU   X'10',,C'X' - RESERVED
IOBRSV41 EQU   X'08',,C'X' - RESERVED
IOBRSV42 EQU   X'04',,C'X' - RESERVED
IOBJES3I EQU   X'02' -   JES3 INTERVENTION REQUIRED NOTIFICATION.
*                        SETTING THIS BIT WILL RESULT IN TURNING ON BIT
*                        IOSPGDPX IN THE IOSB.  (OS/VS2)
*                        (MDC305)                              @Y02BP9A
IOBRSV44 EQU   X'01',,C'X' - RESERVED
IOBDCBPB DS    AL3 -     ADDRESS OF DCB ASSOCIATED WITH THIS IOB
IOBRESTR DS    0A -      AFTER SVC 16 (PURGE) - QUIESCE - ADDRESS OF
*                        THE NEXT IOB IN THE PURGE CHAIN.  (LAST IOB IN
*                        THE CHAIN, BYTE 4 IS FF.)
*                        DURING I/O SUPERVISOR WRITE-TO-OPERATOR
*                        ROUTINE CONTROL - CCHH PART OF THE ADDRESS OF
*                        A DEFECTIVE TRACK.
*                        DURING I/O ERROR CORRECTION (MEANINGFUL ONLY
*                        IF BIT 3 IN THE IOBFLAG1 FIELD IS ON) -
*                        ADDRESS OF THE CHANNEL PROGRAM USED TO CORRECT
*                        AN ERROR CONDITION.
*                        AFTER I/O ERROR CORRECTION - IF A CHANNEL
*                        PROGRAM IS RESTARTED THROUGH A CCW OTHER THAN
*                        THE ONE POINTED TO BY THE IOBSTART FIELD, ITS
*                        ADDRESS IS HERE.
IOBREPOS DS    CL1 -     DURING I/O ERROR CORRECTION (MEANINGFUL ONLY
*                        IF BIT 3 IN THE IOBFLAG1 FIELD IS ON) FOR
*                        MAGNETIC TAPE ONLY - THE CONTROL COMMAND
*                        (BSR, FSR, ERG) REQUIRED TO REPOSITION OVER A
*                        BLOCK.
IOBRSTRB DS    AL3 -     SAME AS IOBRESTR ABOVE
IOBINCAM DS    0H -      QSAM, BSAM, EXCP ACCESS METHOD -- NORMAL
*                        SCHEDULING - VALUE USED TO INCREMENT BLOCK
*                        COUNT FIELD IN DCB FOR MAGNETIC TAPE.
*                        CHAINED SCHEDULING - ZEROS.
*                        QSAM, BSAM -- OPERATION CODE OF WRITE CCW WHEN
*                        A USASI CONTROL CHARACTER AND NO DATA IS TO BE
*                        WRITTEN (PRINTER AND CARD PUNCH ONLY)
IOBBTAMF DS    B -       FLAG BYTE FOR BTAM
IOBPRMER EQU   X'80' -   SAD OR ENABLE ISSUED BY OPEN RESULTED IN A
*                        PERMANENT I/O ERROR
IOBINUSE EQU   X'40' -   THIS IOB IS CURRENTLY IN USE BY AN I/O
*                        OPERATION
IOBRSV14 EQU   X'20',,C'X' RESERVED
IOBRSV15 EQU   X'10',,C'X' RESERVED
IOBRSV16 EQU   X'08',,C'X' RESERVED
IOBRSV17 EQU   X'04',,C'X' RESERVED
IOBRFTMG EQU   X'02' -   A REQUEST-FOR-TEST MESSAGE RECEIVED FROM A
*                        REMOTE 3270 DISPLAY STATION             ICB478
IOBOLTST EQU   X'01' -   LINE IS UNDER ON-LINE TEST OPERATION
IOBRSV19 DS    XL1 -     RESERVED
         SPACE 2
         ORG   IOBINCAM
IOBFL4   DS    B -       FLAG 4 - SENSE ERROR COUNTS FOR MAGNETIC
*                        DOCUMENT READER (3890) (OS/VS1) OR ERROR CODE
*                        PASSBACK BYTE FOR 3895 (FOR ERROR CODE VALUES
*                        SEE IBM 3895 DOCUMENT READER/INSCRIBER MACHINE
*                        AND PROGRAMMING DESCRIPTION, GA24-3620)
*                        (MDC333)                              @G30HP9A
IOBOVR   EQU   X'80' -   OVERRUN ERROR (3890)  (MDC026)        @G30HP9A
IOBREJ   EQU   X'40' -   COMMAND REJECT ERROR (3890) (MDC027)  @G30HP9A
IOBDCK   EQU   X'20' -   DATA CHECK ERROR (3890)  (MDC028)     @G30HP9A
IOBBUS   EQU   X'10' -   BUS-OUT ERROR (3890)  (MDC029)        @G30HP9A
IOBEQP   EQU   X'08' -   EQUIPMENT CHECK ERROR (3890) (MDC030) @G30HP9A
IOBENT   EQU   X'04' -   FIRST TIME ENTRY SWITCH (3890)
*                        (MDC045)                              @G30HP9A
IOBRSV47 EQU   X'02',,C'X' - RESERVED FOR 3890                   MDC044
IOBRSV46 EQU   X'01',,C'X' - RESERVED FOR 3890                   MDC033
         SPACE 2
         ORG   IOBINCAM
IOBCRDCC DS    CL1 -     DATA CHECK ERROR COUNT  (OPTICAL READER)
IOBCRILC DS    CL1 -     INCORRECT LENGTH ERROR COUNT  (OPTICAL READER)
         SPACE 2
IOBERRCT DS    H -       USED BY I/O SUPERVISOR ERROR ROUTINES TO COUNT
*                        TEMPORARY ERRORS DURING RETRY
         SPACE 3
***********************************************************************
*                                                                     *
*                   EXTENSION SECTIONS OF THE IOB                     *
*                                                                     *
***********************************************************************
         SPACE 1
IOBEXTEN DS    0D
         SPACE 1
*                            ******************************************
*                            *                                        *
*                            *  DIRECT ACCESS EXTENSION *** 8 BYTES   *
*                            *                                        *
*                            ******************************************
         SPACE 1
IOBSEEK  DS    0CL8 -    A SEEK ADDRESS (IN THE FORMAT MBBCCHHR) USED
*                        WITH A CHANNEL PROGRAM
IOBM     DS    CL1 -     THE NUMBER OF THE DEB EXTENT TO BE USED FOR
*                        THIS REQUEST.  THE FIRST EXTENT IS NUMBER 0.
IOBBB    DS    0CL2 -    BIN NUMBER(DATA CELL)
IOBBB1   DS    CL1
IOBBB2   DS    CL1
IOBCC    DS    0CL2 -    CYLINDER NUMBER
IOBCC1   DS    CL1
IOBCC2   DS    CL1
IOBHH    DS    0CL2 -    TRACK NUMBER
IOBHH1   DS    CL1
IOBHH2   DS    CL1
IOBR     DS    CL1 -     RECORD NUMBER
         SPACE 2
         ORG   IOBEXTEN
         SPACE 1
*                            ******************************************
*                            *                                        *
*                            *          BTAM EXTENSION ***            *
*                            *      40 BYTES + CHANNEL PROGRAM        *
*                            *                                        *
*                            ******************************************
         SPACE 1
IOBUCBX  DS    CL1 -     UCB INDEX.  THE LINE NUMBER IS USED AS AN
*                        INDEX TO LOCATE THE PROPER UCB ADDRESS IN THE
*                        DEB.
IOBWORK  DS    CL5 -     WORK AREA USED BY ERROR ROUTINES AND ON-LINE
*                        TERMINAL TEST ROUTINES
IOBRCVPT DS    CL1 -     RECEIVED ACK (ACK-0 OR ACK-1)
IOBSNDPT DS    CL1 -     SENT ACK (ACK-0 OR ACK-1)
IOBERCCW DS    CL8 -     CCW AREA USED BY THE BTAM ERROR RECOVERY
*                        ROUTINES
IOBERINF DS    CL16 -    ERROR INFORMATION FIELD USED BY THE BTAM ERROR
*                        RECOVERY ROUTINES
IOBCPA   DS    0D -      CHANNEL PROGRAMS AREA.  THE LENGTH DEPENDS ON
*                        THE TERMINAL AND THE OPTIONS.
         SPACE 2
         ORG   IOBSEEK+8
         SPACE 1
*                            ******************************************
*                            *                                        *
*                            *      BISAM EXTENSION *** 16 BYTES      *
*                            *                                        *
*                            ******************************************
         SPACE 1
IOBCCWAD DS    A -       FOR FIXED LENGTH RECORDS, ADDRESS OF FIRST
*                        CCW OF CHANNEL PROGRAM.
*                        FOR VARIABLE LENGTH RECORDS, ADDRESS OF
*                        BUFFER, IF DYNAMIC BUFFERING SPECIFIED, AFTER
*                        COMPLETION OF A READ FOR UPDATE (READ KU)
IOBINDCT DS    B -       INDICATORS
IOBDEQCP EQU   X'80' -   DEQUEUE CHANNEL PROGRAM FROM QUEUE
IOBUNSCH EQU   X'40' -   UNSCHEDULED QUEUE
IOBOVPTR EQU   X'20' -   IF 0, DECBAREA + 6 POINTS TO OVERFLOW RECORD
*                        DATA.
*                        IF 1, DCBMSWA POINTS TO OVERFLOW RECORD KEY
*                        FOLLOWED BY DATA.
IOBKEYAD EQU   X'10' -   IF 0, DECBKEY POINTS TO OVERFLOW RECORD KEY.
*                        IF 1, DCBMSWA + 8 POINTS TO OVERFLOW RECORD
*                        KEY.
IOBRSV27 EQU   X'08',,C'X' RESERVED
IOBRSV28 EQU   X'04',,C'X' RESERVED
IOBRSV29 EQU   X'02',,C'X' RESERVED
IOBCHNNL EQU   X'01' -   IF 0, NORMAL CHANNEL END HAS OCCURRED.
*                        IF 1, ABNORMAL CHANNEL END HAS OCCURRED.
IOBUNSQR DS    B -       REASON FOR UNSCHEDULED QUEUE
IOBCPBSY EQU   X'80' -   CHANNEL PROGRAM CP1 OR CP2 BUSY
IOBNTAV1 EQU   X'40' -   NO CP4, CP5 OR CP6 AVAILABLE
IOBNTAV2 EQU   X'20' -   NO CP7 AVAILABLE
IOBKNWR  EQU   X'10' -   WRITE KN IS IN EFFECT (UNSCHEDULED IOB IS FOR
*                        WRITE KN)
IOBKNRWR EQU   X'08' -   WRITE KN IS IN EFFECT (UNSCHEDULED IOB IS FOR
*                        READ OR WRITE KN)
IOBRSV30 EQU   X'04',,C'X' RESERVED
IOBRSV31 EQU   X'02',,C'X' RESERVED
IOBRSV32 EQU   X'01',,C'X' RESERVED
IOBAPP   DS    CL1 -     APPENDAGE CODE
IOBASYN  DS    CL1 -     ASYNCHRONOUS ROUTINE CODE
IOBFCHAD DS    0A -      FORWARD CHAIN ADDRESS
IOBCOUNT DS    CL1 -     WRITE CHECK COUNTER
IOBFCHNB DS    AL3 -     FORWARD CHAIN ADDRESS
IOBBCHAD DS    A -       BACKWARD CHAIN ADDRESS
         SPACE 2
         ORG   IOBEXTEN
         SPACE 1
*                            ******************************************
*                            *                                        *
*                            *      GAM EXTENSION *** 40 BYTES        *
*                            *                                        *
*                            ******************************************
         SPACE 1
IOBUCBXG DS    CL1 -     UCB INDEX
IOBRSV37 DS    XL3 -     RESERVED
IOBNXTPT DS    0A -      ADDRESS OF NEXT AVAILABLE IOB.  SET TO ZERO
*                        IF THIS IS LAST IOB.
IOBSTATA DS    B -       STATUS INDICATORS
IOBAVLFL EQU   X'80' -   IF 0, IOB IS AVAILABLE.
*                        IF 1, IOB IS NOT AVAILABLE.
IOBRSV20 EQU   X'40',,C'X' RESERVED
IOBRSV21 EQU   X'20',,C'X' RESERVED
IOBRSV22 EQU   X'10',,C'X' RESERVED
IOBRSV23 EQU   X'08',,C'X' RESERVED
IOBRSV24 EQU   X'04',,C'X' RESERVED
IOBRSV25 EQU   X'02',,C'X' RESERVED
IOBRSV26 EQU   X'01',,C'X' RESERVED
IOBNXTPB DS    AL3 -     ADDRESS OF NEXT AVAILABLE IOB.  SET TO ZERO
*                        IF THIS IS LAST IOB
IOBCCW   DS    CL32 -    LIST OF CHANNEL COMMAND WORDS TO TRANSFER DATA
         SPACE 2
         ORG   IOBSEEK+8
         SPACE 1
*                            ******************************************
*                            *                                        *
*                            *     QISAM EXTENSION *** 2 BYTES        *
*                            *                                        *
*                            ******************************************
         SPACE 1
W1IEXTEN DS    0CL2 -    APPENDAGE CODES FOR BOTH NORMAL AND ABNORMAL
*                        CHANNEL END CONDITIONS
W1OEXTEN DS    CL2 -     SAME AS W1IEXTEN ABOVE
         SPACE 2
         ORG   IOBSEEK+8
         SPACE 1
*                            ******************************************
*                            *                                        *
*                            *          BDAM EXTENSION ***            *
*                            *      40 BYTES + CHANNEL PROGRAM        *
*                            *                                        *
*                            ******************************************
         SPACE 1
IOBDBYTR DS    H -       NUMBER OF UNUSED BYTES REMAINING ON THE TRACK
IOBDIOBS DS    H -       OVERALL SIZE OF THE IOB
IOBDPLAD DS    0A -      ADDRESS OF THE NEXT IOB IN THE POOL OF IOB'S
IOBDAYLI DS    B -       ALL BITS SET TO ZERO INDICATE THE AVAILABILITY
*                        OF THIS IOB
IOBDPLB  DS    AL3 -     ADDRESS OF THE NEXT IOB IN THE POOL OF IOB'S
IOBDTYPE DS    B -       THE TYPE OF REQUEST AND SPECIFIED OPTIONS
IOBVERFY EQU   X'80' -   VERIFY
IOBOVFLO EQU   X'40' -   OVERFLOW
IOBEXTSC EQU   X'20' -   EXTENDED SEARCH
IOBFDBCK EQU   X'10' -   FEEDBACK
IOBACTAD EQU   X'08' -   ACTUAL ADDRESSING
IOBDYNBF EQU   X'04' -   DYNAMIC BUFFERING
IOBRDEXC EQU   X'02' -   READ EXCLUSIVE
IOBRELBL EQU   X'01' -   RELATIVE BLOCK ADDRESSING
IOBDTYP2 DS    B -       SECOND BYTE OF OPTIONS AND REQUESTS
IOBSKEY  EQU   X'80' -   KEY ADDRESS CODED AS 'S'
IOBSBLKL EQU   X'40' -   BLOCK LENGTH CODED AS 'S'
IOBSUFFX EQU   X'30' -   IF BITS 2 AND 3 ARE ONE, RU IS SUFFIXED TO THE
*                        TYPE, INDICATING THAT THE FEEDBACK ADDRESS IN
*                        DECNXADR CAN BE THE ADDRESS OF EITHER THE NEXT
*                        DATA RECORD OR THE NEXT CAPACITY RECORD,
*                        WHICHEVER OCCURS FIRST.
*                        IF BIT 2 IS ZERO AND BIT 3 IS ONE, R IS
*                        SUFFIXED TO THE TYPE, INDICATING THAT THE
*                        FEEDBACK ADDRESS IN DECNXADR IS THE ADDRESS OF
*                        THE NEXT DATA RECORD.
IOBRQUST EQU   X'08' -   IF 1, READ REQUEST.  IF 0, WRITE REQUEST.
IOBTYPE  EQU   X'04' -   IF 1, KEY TYPE.  IF 0, ID TYPE.
IOBADDTY EQU   X'02' -   ADD TYPE
IOBRELEX EQU   X'01' -   RELEX MACRO ISSUED
IOBDSTAT DS    0CL2  -   STATUS OF THE I/O REQUEST
IOBSTAT1 DS    B -       FLAG BYTE
IOBABNRM EQU   X'80' -   ABNORMAL COMPLETION
IOBNEWVL EQU   X'40' -   ON EXTENDED SEARCH, THE NEXT EXTENT IS ON A
*                        NEW VOLUME.  THE ASI ROUTINE MUST ISSUE THE
*                        EXCP MACRO.  THE END-OF-EXTENT APPENDAGE
*                        CANNOT.
IOBSYNCH EQU   X'20' -   MODULE WAS ENTERED VIA SYNCH            MDC037
IOBPASS2 EQU   X'10' -   ON EXTENDED SEARCH, INDICATES TO THE RELATIVE
*                        BLOCK CONVERSION ROUTINE THAT THE SECOND PASS
*                        OF A TWO-PASS CONVERSION ROUTINE HAS COMPLETED
IOBENQUE EQU   X'08' -   FOR EXCLUSIVE CONTROL REQUEST, INDICATES THAT
*                        A RECORD HAS BEEN ENQUEUED
IOBBUFF  EQU   X'04' -   A BUFFER HAS BEEN ASSIGNED TO THIS IOB
IOBADDVU EQU   X'02' -   IOB BEING USED TO ADD A VARIABLE (V) OR
*                        UNDEFINED (U) TYPE RECORD TO THE DATA SET
IOBSIORT EQU   X'01' -   INDICATES TO THE DYNAMIC BUFFERING ROUTINE
*                        THAT IT WAS ENTERED FROM, AND IS TO RETURN
*                        TO, THE START I/O APPENDAGE MODULE
IOBSTAT2 DS    CL1 -     ERROR CODE FOR ABNORMAL COMPLETION USED AS
*                        POST CODE IN ECB
IOBDCPND DS    A -       ADDRESS OF LOCATION WHERE CHANNEL END PROGRAM
*                        SHOULD END
IOBDBYTN DS    H -       NUMBER OF BYTES NEEDED ON A TRACK TO WRITE A
*                        NEW BLOCK
IOBRSV34 DS    XL2 -     RESERVED
IOBDQPTR DS    A -       ADDRESS OF IOB FOR NEXT I/O OPERATION TO BE
*                        EXECUTED
IOBRSV35 DS    XL8 -     RESERVED
IOBDNCRF DS    CL8 -     COUNT FIELD FOR NEW BLOCK
IOBCHNPR DS    0D -      CHANNEL PROGRAM USED TO TRANSFER DATA AS
*                        REQUESTED BY THE READ OR WRITE MACRO
*                        INSTRUCTION STARTS HERE
         SPACE 2
         ORG   IOBSEEK+8
         SPACE 1
*                            ******************************************
*                            *                                        *
*                            *     VSAM EXTENSION *** 24 BYTES        *
*                            *                                        *
*                            ******************************************
         SPACE 1
IOBSEEK2 DS    0CL8 -    SEEK FIELD 2                            ICB435
IOBSK2M  DS    C -       EXTENT NUMBER                           ICB435
IOBSK2BB DS    CL2 -     BIN NUMBER                              ICB435
IOBSK2CC DS    CL2 -     CYLINDER NUMBER                         ICB435
IOBSK2HH DS    CL2 -     HEAD NUMBER                             ICB435
IOBSK2R  DS    C -       RECORD NUMBER                           ICB435
IOBBUFC  DS    A -       ADDRESS OF ASSOCIATED BUFFER CONTROL BLOCK
*                                                                ICB435
IOBREADA DS    A -       ADDRESS OF FIRST READ CHANNEL PROGRAM SEGMENT
*                        THAT HAS NOT BEEN PROCESSED             ICB435
IOBNEXTA DS    A -       ADDRESS OF NEXT ACTIVE IOB              ICB435
IOBRDCHP DS    A -       ADDRESS OF READ CHANNEL PROGRAM         ICB435
         SPACE 2
         ORG   IOBEXTEN
         SPACE 1
*                            ******************************************
*                            *                                        *
*                            *     VTAM EXTENSION (OS/VS1 ONLY)       *
*                            *           *** 24 BYTES                 *
*                            *                                        *
*                            ******************************************
         SPACE 1
IOBERCT  DS    0A -      POINTER TO COUNTERS FOR SIO AND TEMPORARY
*                        ERRORS                                  MDC001
IOBUCBXV DS    0FL1 -    UCB INDEX                               MDC050
IOBRTYPE DS    C -       RECORD TYPE FOR OBR                     MDC002
IOBERCTA DS    AL3 -     POINTER TO COUNTERS FOR SIO AND TEMPORARY
*                        ERRORS                                  MDC003
IOBNAME  DS    0A -      POINTER TO TERMINAL NAME                MDC004
IOBNAMSZ DS    FL1 -     SIZE OF TERMINAL NAME                   MDC005
IOBNAMEA DS    AL3 -     POINTER TO TERMINAL NAME                MDC006
IOBMDREC DS    A -       POINTER TO RECORD BEING PASSED TO
*                        MISCELLANEOUS DATA RECORDER             MDC007
IOBRCD   DS    A -       POINTER TO QUEUE OF OBR RECORDS PASSED FROM
*                        3705                                    MDC008
IOBSENSV DS    X -       SENSE BYTE SAVE AREA                    MDC009
IOBCSWSV DS    XL7 -     SAVE AREA FOR LAST 7 BYTES OF CSW       MDC010
         SPACE 2
         ORG   IOBEXTEN -                                      @Z30OP9A
         SPACE 1
*                            ******************************************
*                            *                                        *
*                            *   3540 EXTENSION *** 4 BYTES   @Z30OP9A*
*                            *                                        *
*                            ******************************************
         SPACE 1
IOBSKADR DS    0CL4 -    3540 SEEK ADDRESS  (MDC300)           @Z30OP9A
IOBSKRV  DS    XL1 -     RESERVED  (MDC301)                    @Z30OP9A
IOBSKTT  DS    XL1 -     TRACK NUMBER  (MDC302)                @Z30OP9A
IOBSK0   DS    XL1 -     MUST BE ZERO  (MDC303)                @Z30OP9A
IOBSKSS  DS    XL1 -     SECTOR NUMBER  (MDC304)               @Z30OP9A
         MEND  , */
* %IOBL2 : ;
*
* DECLARE
*   1 IOBPREFX BASED(IOBPRPTR) BDY(WORD),
*
* /* *************************************************************** */
* /*                                                                 */
* /*                 PREFIX SECTIONS OF THE IOB                      */
* /*                                                                 */
* /* *************************************************************** */
*
*                        /* **************************************** */
*                        /*    QSAM,BSAM,BPAM PREFIX                 */
*                        /*    CHAINED SCHEDULING *** 16 BYTES       */
*                        /* **************************************** */
*
*    2 IOBCFLG1 CHAR(1),             /* I/O INDICATORS               */
*     3 IOBRSV01 BIT(1),             /* RESERVED                     */
*     3 IOBRSV02 BIT(1),             /* RESERVED                     */
*     3 IOBRSV03 BIT(1),             /* RESERVED                     */
*     3 IOBRSV04 BIT(1),             /* RESERVED                     */
*     3 IOBPTST  BIT(1),             /* NOTE OR POINT OPERATION IS
*                                       IN PROCESS                   */
*     3 IOBABAPP BIT(1),             /* ERROR HAS BEEN PROCESSED ONCE
*                                       BY ABNORMAL-END APPENDAGE
*                                       ROUTINE                      */
*     3 IOBRSTCH BIT(1),             /* RESTART CHANNEL              */
*     3 IOBPCI   BIT(1),             /* SET WHEN A PROGRAM-CONTROLLED
*                                       INTERRUPTION (PCI) OCCURS    */
*    2 IOBRSV05 CHAR(1),             /* RESERVED                     */
*    2 IOBCINOP CHAR(1),             /* OFFSET OF THE LAST I/O
*                                       COMMAND FOR INPUT OPERATION
*                                       (NOP CCW) FROM THE ORIGIN OF
*                                       THE ICB                      */
*    2 IOBCONOP CHAR(1),             /* OFFSET OF THE LAST I/O
*                                       COMMAND FOR AN OUTPUT
*                                       OPERATION (NOP CCW) FROM
*                                       THE ORIGIN OF THE ICB        */
*    2 IOBCECB  FIXED(31),           /* EVENT CONTROL BLOCK USED BY
*                                       BSAM OR QSAM.  SHOWS THE
*                                       STATUS OF THE I/O OPERATION. */
*    2 IOBCICB  PTR(31),             /* ADDRESS OF THE FIRST
*                                       INTERRUPT CONTROL BLOCK (ICB)
*                                       ON THE ICB QUEUE             */
*    2 IOBCNOPA PTR(31);             /* ADDRESS OF THE NOP COMMAND AT
*                                       THE END OF THE QUEUE         */
*
*                        /* **************************************** */
*                        /*    QSAM,BSAM,BPAM PREFIX                 */
*                        /*    NORMAL SCHEDULING *** 8 BYTES         */
*                        /* **************************************** */
*
* DECLARE 1 IOBORG01
*%IF IKEPLS='2'  %THEN
*    %GOTO IOBA1;
*       BASED(ADDR(IOBPREFX)+8) BDY(WORD),
*%GOTO IOBA2;
*%IOBA1 : ;
*       DEF(IOBPREFX) POS(9) BDY(WORD),
*%IOBA2 : ;
*    2 IOBNIOBA PTR(31),             /* ADDRESS OF THE NEXT IOB
*                                       ASSOCIATED WITH ONE PARTICULAR
*                                       DCB.  THE IOB'S ARE CHAINED
*                                       IN SEQUENTIAL ORDER.         */
*     3 IOBNFLG1 CHAR(1),            /* FLAG BYTE                    */
*      4 IOBPRTOV BIT(1),            /* PRTOV HAS OCCURRED (PRINTER
*                                       DEVICES)  (MDC331)   @Z40FP9A*/
*       5 IOBSEGMT BIT(1),           /* SEGMENTING OF A SPANNED
*                                       RECORD IS IN PROCESS (QSAM
*                                       LOCATE MODE, LOGICAL RECORD
*                                       INTERFACE, UPDATE PROCESSING)
*                                       (DIRECT ACCESS) (OS/VS2)
*                                       (MDC332)             @Z40FP9A*/
*      4 IOBWRITE BIT(1),            /* A WRITE OPERATION IS IN
*                                       PROCESS                      */
*      4 IOBREAD  BIT(1),            /* A READ OPERATION IS IN
*                                       PROCESS                      */
*      4 IOBUPDAT BIT(1),            /* UPDATE FLAG.  SET ON TOGETHER
*                                       WITH BIT 1 OF THIS BYTE TO
*                                       SHOW THAT THE BLOCK IS TO BE
*                                       UPDATED.  CAN ONLY OCCUR IF
*                                       THE OPEN PARAMETER IS UPDAT. */
*      4 IOBBKSPC BIT(1),            /* IOB BEING USED FOR BACKSPACE,
*                                       CONTROL OR NOTE/POINT
*                                       OPERATION                    */
*      4 IOBSPAN  BIT(1),            /* THE RECORD CURRENTLY BEING
*                                       PROCESSED HAS MORE THAN ONE
*                                       SEGMENT (QSAM LOCATE MODE,
*                                       LOGICAL RECORD INTERFACE,
*                                       UPDAT PROCESSING OF SPANNED
*                                       RECORDS)                     */
*      4 IOBUPERR BIT(1),            /* UPDATE CHANNEL PROGRAM HAS
*                                       BEEN SPLIT INTO TWO PARTS
*                                                              MDC036*/
*      4 IOBFIRST BIT(1),            /* THIS IS THE FIRST IOB ON
*                                       CHAIN                        */
*     3 IOBNIOBB PTR(24),            /* SAME AS IOBNIOBA ABOVE       */
*    2 IOBNECB  FIXED(31);           /* EVENT CONTROL BLOCK USED BY
*                                       QSAM TO INDICATE THE STATUS
*                                       OF THE I/O EVENT             */
*
*                        /* **************************************** */
*                        /*    BDAM PREFIX *** 8 BYTES               */
*                        /* **************************************** */
*
* DECLARE 1 IOBORG02
*%IF IKEPLS='2'  %THEN
*    %GOTO IOBA3;
*       BASED(ADDR(IOBPREFX)+8) BDY(WORD),
*%GOTO IOBA4;
*%IOBA3 : ;
*       DEF(IOBPREFX) POS(9) BDY(WORD),
*%IOBA4 : ;
*    2 IOBDQADA PTR(31),             /* ADDRESS OF THE OTHER IOB
*                                       REFERRED TO IN DESCRIPTION
*                                       OF IOBDEQ BELOW              */
*     3 IOBDEQIN CHAR(1),            /* DEQUEUE LOOP INDICATOR       */
*      4 IOBDEQ   BIT(1),            /* THIS IOB IS USING A TRACK
*                                       THAT WAS DEQUEUED BY ANOTHER
*                                       IOB WHICH IS NOW WAITING TO
*                                       DEQUEUE ANOTHER TRACK.  THE
*                                       OTHER IOB ENQUEUED ON TWO OR
*                                       MORE TRACKS TO FIND SPACE IN
*                                       WHICH TO WRITE/ADD A SPANNED
*                                       RECORD.  THE OTHER IOB
*                                       REMAINED ENQUEUED UNTIL IT
*                                       EITHER WROTE THE RECORD OR
*                                       DETERMINED THAT THERE WAS
*                                       ENOUGH CONTIGUOUS FREE SPACE
*                                       ON THE TRACKS TO CONTAIN THE
*                                       RECORD.  AFTER THE OTHER IOB
*                                       DEQUEUED THE CURRENT TRACK,
*                                       THE DEQUEUEING WAS INTERRUPTED
*                                       BY THE NEED OF THIS IOB FOR
*                                       THE CURRENT TRACK.           */
*      4 IOBRSV07 BIT(1),            /* RESERVED                     */
*      4 IOBRSV08 BIT(1),            /* RESERVED                     */
*      4 IOBRSV09 BIT(1),            /* RESERVED                     */
*      4 IOBRSV10 BIT(1),            /* RESERVED                     */
*      4 IOBRSV11 BIT(1),            /* RESERVED                     */
*      4 IOBRSV12 BIT(1),            /* RESERVED                     */
*      4 IOBRSV13 BIT(1),            /* RESERVED                     */
*     3 IOBDQADB PTR(24),            /* SAME AS IOBDQADA ABOVE       */
*    2 IOBSWAP  PTR(31);             /* ADDRESS OF THE SEGMENT WORK
*                                       AREA USED BY THIS IOB TO READ
*                                       OR WRITE A RECORD OF A FORMAT
*                                       VS DATA SET                  */
*
*                        /* **************************************** */
*                        /*    GAM,QISAM PREFIX *** 4 BYTES          */
*                        /* **************************************** */
*
* DECLARE 1 IOBORG03
*%IF IKEPLS='2'  %THEN
*    %GOTO IOBA5;
*       BASED(ADDR(IOBPREFX)+12) BDY(WORD),
*%GOTO IOBA6;
*%IOBA5 : ;
*       DEF(IOBPREFX) POS(13) BDY(WORD),
*%IOBA6 : ;
*    2 IOBGQECB FIXED(31);           /* EVENT CONTROL BLOCK THAT IS
*                                       WITHIN FIRST IOB ONLY (GAM)
*                                       EVENT CONTROL BLOCK USED TO
*                                       INDICATE STATUS OF AN I/O
*                                       EVENT  (QISAM)               */
*
* /* *************************************************************** */
* /*                                                                 */
* /*                 STANDARD SECTION OF THE IOB                     */
* /*                                                                 */
* /* *************************************************************** */
*
* DECLARE
*   1 IOBSTDRD BASED(IOBSTPTR) BDY(WORD),
*    2 IOBFLAG1 CHAR(1),             /* FLAG BYTE 1                  */
*     3 IOBDATCH BIT(1),             /* DATA CHAINING USED IN CHANNEL
*                                       PROGRAM                      */
*     3 IOBCMDCH BIT(1),             /* COMMAND CHAINING USED IN
*                                       CHANNEL PROGRAM              */
*     3 IOBERRTN BIT(1),             /* ERROR ROUTINE IS IN CONTROL  */
*     3 IOBRPSTN BIT(1),             /* DEVICE IS TO BE REPOSITIONED */
*     3 IOBCYCCK BIT(1),             /* CYCLIC REDUNDANCY CHECK (CRC)
*                                       NEEDED  (TAPE)               */
*      4 IOBFCREX BIT(1),            /* FETCH COMMAND RETRY EXIT
*                                       (DIRECT ACCESS)              */
*     3 IOBIOERR BIT(1),             /* EXCEPTIONAL CONDITION.  AFTER
*                                       THE ERROR ROUTINE RETURNS AND
*                                       THIS BIT IS ON, THE ERROR IS
*                                       CONSIDERED PERMANENT.        */
*     3 IOBUNREL BIT(1),             /* IOB UNRELATED FLAG (I.E.,
*                                       NONSEQUENTIAL)               */
*     3 IOBRSTRT BIT(1),             /* IF 1, RESTART ADDRESS IN IOB
*                                       TO BE USED.  IF 0, START.
*                                       (OS/VS1)               MDC034*/
*      4 IOBSPSVC BIT(1),            /* FOR SAM/PAM, SET BY SVC IF
*                                       I/O APPENDAGE SHOULD NOT
*                                       PROCESS INTERRUPT (OS/VS2)
*                                                              MDC035*/
*    2 IOBFLAG2 CHAR(1),             /* FLAG BYTE 2                  */
*     3 IOBHALT  BIT(1),             /* HALT I/O HAS BEEN ISSUED BY
*                                       SVC PURGE ROUTINE            */
*     3 IOBSENSE BIT(1),             /* SENSE WILL NOT BE PERFORMED
*                                       UNTIL THE DEVICE IS FREE     */
*     3 IOBPURGE BIT(1),             /* IOB HAS BEEN PURGED TO ALLOW
*                                       I/O ACTIVITY TO QUIESCE.
*                                       (OS/VS1)              MDC046*/
*      4 IOBRRT3  BIT(1),            /* TYPE 3 RELATED REQUEST
*                                       (OS/VS2)               MDC048*/
*     3 IOBRDHA0 BIT(1),             /* HOME ADDRESS (R0) RECORD IS
*                                       TO BE READ.  SEEK COMMAND NOT
*                                       NEEDED.  (OS/VS1)      MDC047*/
*      4 IOBRRT2  BIT(1),            /* TYPE 2 RELATED REQUEST
*                                       (OS/VS2)               MDC049*/
*     3 IOBALTTR BIT(1),             /* NO TEST FOR OUT-OF-EXTENT.
*                                       AN ALTERNATE TRACK IS IN USE.*/
*     3 IOBSKUPD BIT(1),             /* SEEK ADDRESS IS BEING
*                                       UPDATED.  CYLINDER END OR
*                                       FILE MASK VIOLATION HAS
*                                       OCCURRED.                    */
*     3 IOBSTATO BIT(1),             /* DEVICE END STATUS HAS BEEN
*                                       OR'ED WITH CHANNEL END STATUS
*                                       (GRAPHICS DEVICE)            */
*     3 IOBPNCH  BIT(1),             /* ERROR RECOVERY IN CONTROL FOR
*                                       A 2540 CARD PUNCH WITH THREE
*                                       BUFFERS.  (QSAM)
*                                       RESETPL MACRO INSTRUCTION WAS
*                                       USED.  (BTAM)                */
*    2 IOBSENS0 CHAR(1),             /* FIRST SENSE BYTE             */
*     3 IOBS0B0  BIT(1),             /* BIT 0 (DEVICE DEPENDENT)     */
*     3 IOBS0B1  BIT(1),             /* BIT 1 (DEVICE DEPENDENT)     */
*     3 IOBS0B2  BIT(1),             /* BIT 2 (DEVICE DEPENDENT)     */
*     3 IOBS0B3  BIT(1),             /* BIT 3 (DEVICE DEPENDENT)     */
*     3 IOBS0B4  BIT(1),             /* BIT 4 (DEVICE DEPENDENT)     */
*     3 IOBS0B5  BIT(1),             /* BIT 5 (DEVICE DEPENDENT)     */
*     3 IOBS0B6  BIT(1),             /* BIT 6 (DEVICE DEPENDENT)     */
*     3 IOBS0B7  BIT(1),             /* BIT 7 (DEVICE DEPENDENT)     */
*      4 IOBSNSC9 BIT(1),            /* CHANNEL 9 SENSED IN
*                                       CARRIAGE TAPE                */
*    2 IOBSENS1 CHAR(1),             /* SECOND SENSE BYTE            */
*     3 IOBS1B0  BIT(1),             /* BIT 0 (DEVICE DEPENDENT)     */
*     3 IOBS1B1  BIT(1),             /* BIT 1 (DEVICE DEPENDENT)     */
*     3 IOBS1B2  BIT(1),             /* BIT 2 (DEVICE DEPENDENT)     */
*     3 IOBS1B3  BIT(1),             /* BIT 3 (DEVICE DEPENDENT)     */
*     3 IOBS1B4  BIT(1),             /* BIT 4 (DEVICE DEPENDENT)     */
*     3 IOBS1B5  BIT(1),             /* BIT 5 (DEVICE DEPENDENT)     */
*     3 IOBS1B6  BIT(1),             /* BIT 6 (DEVICE DEPENDENT)     */
*     3 IOBS1B7  BIT(1),             /* BIT 7 (DEVICE DEPENDENT)     */
*    2 IOBECBPT PTR(31),             /* ADDRESS OF ECB TO BE POSTED
*                                       ON I/O COMPLETION            */
*     3 IOBECBCC CHAR(1),            /* COMPLETION CODE FOR AN I/O
*                                       REQUEST.  THIS CODE WILL
*                                       APPEAR IN THE FIRST BYTE OF
*                                       AN ECB.                      */
*     3 IOBECBPB PTR(24),            /* ADDRESS OF THE ECB TO BE
*                                       POSTED UPON THE COMPLETION OF
*                                       AN I/O EVENT.  FOR BSAM/BPAM,
*                                       ECB IS IN THE DECB.  FOR
*                                       QSAM, ECB IS IN THE QSAM
*                                       PREFIX OF THE IOB.           */
*    2 IOBFLAG3 CHAR(1),             /* I/O SUPERVISOR ERROR ROUTINE
*                                       FLAG BYTE (DEVICE DEPENDENT) */
*     3 IOBFL3   BIT(8),             /* FLAG 3 - STATUS ERROR COUNTS
*                                       FOR MAGNETIC DOCUMENT READER
*                                       (3890) OR FLAGS FOR 3800
*                                       (OS/VS1)  (MDC307)   @X50AD9A*/
*      4 IOBCCC   BIT(1),            /* CHANNEL CONTROL CHECK ERROR
*                                       COUNT (3890)           MDC038*/
*      4 IOBICC   BIT(1),            /* INTERFACE CONTROL CHECK ERROR
*                                       COUNT (3890)           MDC039*/
*      4 IOBCDC   BIT(1),            /* CHANNEL DATA CHECK ERROR
*                                       (3890)                 MDC040*/
*      4 IOBACU   BIT(1),            /* ATTENTION/CONTROL UNIT ERROR
*                                       (3890)                 MDC041*/
*      4 IOBCNC   BIT(1),            /* CHAIN CHECK ERROR (3890)
*                                                              MDC042*/
*       5 IOBSDR   BIT(1),           /* STATISTICS ONLY FLAG (3800)
*                                       (MDC306)             @X50AD9A*/
*      4 IOBMSG   BIT(1),            /* MESSAGE FLAG (3890 OR 3800)
*                                       (MDC308)             @X50AD9A*/
*      4 IOBICL   BIT(1),            /* INCORRECT LENGTH ERROR (3890)
*                                                              MDC020*/
*       5 IOBJAM   BIT(1),           /* SET ON WHEN JES SUBSYSTEM HAS
*                                       DETECTED A PAPER JAM SO 3800
*                                       ERP WILL SUPPRESS ITS
*                                       INTERVENTION REQUIRED MESSAGE
*                                       (3800)  (MDC330)     @X50AD9A*/
*      4 IOBLOG   BIT(1),            /* LOG OUT FLAG (3890 OR 3800)
*                                       (MDC309)             @X50AD9A*/
*    2 IOBCSW   CHAR(7) BDY(WORD,2), /* LOW-ORDER SEVEN BYTES OF THE
*                                       LAST CSW THAT REFLECTS THE
*                                       STATUS FOR THIS REQUEST      */
*     3 IOBIOCSW CHAR(5) BDY(WORD,2),/* LOW-ORDER BYTES OF CSW FOR
*                                       MAGNETIC DOCUMENT READER
*                                       (3890) (OS/VS1)        MDC022*/
*      4 IOBCMDA  PTR(24) BDY(WORD,2),/* COMMAND ADDRESS (3890)MDC023*/
*      4 IOBSTBYT BIT(16),           /* STATUS BITS 32-47 (3890)
*                                                              MDC024*/
*       5 IOBUSTAT BIT(8),           /* CSW UNIT STATUS FLAGS (3800)
*                                       (MDC311)             @Z40MP9A*/
*        6 IOBUSB0  BIT(1),          /* ATTENTION  (MDC312)  @Z40MP9A*/
*        6 IOBUSB1  BIT(1),          /* STATUS MODIFIER
*                                       (MDC313)             @Z40MP9A*/
*        6 IOBUSB2  BIT(1),          /* CONTROL UNIT END
*                                       (MDC314)             @Z40MP9A*/
*        6 IOBUSB3  BIT(1),          /* BUSY  (MDC315)       @Z40MP9A*/
*        6 IOBUSB4  BIT(1),          /* CHANNEL END (MDC316) @Z40MP9A*/
*        6 IOBUSB5  BIT(1),          /* DEVICE END  (MDC317) @Z40MP9A*/
*        6 IOBUSB6  BIT(1),          /* UNIT CHECK  (MDC318) @Z40MP9A*/
*        6 IOBUSB7  BIT(1),          /* UNIT EXCEPTION
*                                       (MDC319)             @Z40MP9A*/
*       5 IOBCSTAT BIT(8),           /* CSW CHANNEL STATUS FLAGS
*                                       (3800)  (MDC320)     @Z40MP9A*/
*        6 IOBCSB0  BIT(1),          /* PROGRAM CONTROL INTERRUPT
*                                       (MDC321)             @Z40MP9A*/
*        6 IOBCSB1  BIT(1),          /* INCORRECT LENGTH
*                                       (MDC322)             @Z40MP9A*/
*        6 IOBCSB2  BIT(1),          /* PROGRAM CHECK
*                                       (MDC323)             @Z40MP9A*/
*        6 IOBCSB3  BIT(1),          /* PROTECTION CHECK
*                                       (MDC324)             @Z40MP9A*/
*        6 IOBCSB4  BIT(1),          /* CHANNEL DATA CHECK
*                                       (MDC325)             @Z40MP9A*/
*        6 IOBCSB5  BIT(1),          /* CHANNEL CONTROL CHECK
*                                       (MDC326)             @Z40MP9A*/
*        6 IOBCSB6  BIT(1),          /* INTERFACE CONTROL CHECK
*                                       (MDC327)             @Z40MP9A*/
*        6 IOBCSB7  BIT(1),          /* CHAINING CHECK
*                                       (MDC328)             @Z40MP9A*/
*    2 IOBSTART PTR(31),             /* ADDRESS OF CHANNEL PROGRAM
*                                       TO BE EXECUTED               */
*     3 IOBSIOCC CHAR(1),            /* SIO CODE.  BITS 2 AND 3
*                                       CONTAIN CONDITION CODE
*                                       RETURNED AFTER EXECUTION OF
*                                       SIO INSTRUCTION FOR THIS I/O
*                                       EVENT.                       */
*     3 IOBSTRTB PTR(24),            /* ADDRESS OF CHANNEL PROGRAM
*                                       TO BE EXECUTED               */
*    2 IOBDCBPT PTR(31),             /* ADDRESS OF DCB ASSOCIATED
*                                       WITH THIS IOB                */
*     3 IOBFLAG4 BIT(8),             /* FLAG BYTE              MDC011*/
*      4 IOBGDPOL BIT(1),            /* RE-ENTER SIO APPENDAGE FOR
*                                       OLTEP GUARANTEED DEVICE PATH
*                                                              MDC012*/
*      4 IOBCC3WE BIT(1),            /* USER REQUESTS THAT IOS POST A
*                                       X'6D' FOR A CONDITION CODE 3
*                                       ON ATTEMPTED I/O OPERATIONS
*                                       (OS/VS2)  (MDC310)   @Z309P9A*/
*      4 IOBPMERR BIT(1),            /* VTAM SETS THIS BIT ON TO
*                                       INDICATE TO IOS THAT VTAM
*                                       SHOULD BE POSTED WITH A
*                                       PERMANENT I/O ERROR BECAUSE
*                                       ALL ALTERNATE PATHS TO THE
*                                       3705 HAVE BEEN TRIED
*                                       (OS/VS1)  (MDC329)   @X04BH9A*/
*      4 IOBRSV40 BIT(1),            /* RESERVED                     */
*      4 IOBRSV41 BIT(1),            /* RESERVED                     */
*      4 IOBRSV42 BIT(1),            /* RESERVED                     */
*      4 IOBJES3I BIT(1),            /* JES3 INTERVENTION REQUIRED
*                                       NOTIFICATION.  SETTING THIS
*                                       BIT WILL RESULT IN TURNING ON
*                                       BIT IOSPGDPX IN THE IOSB.
*                                       (OS/VS2)  (MDC305)   @Y02BP9A*/
*      4 IOBRSV44 BIT(1),            /* RESERVED                     */
*     3 IOBDCBPB PTR(24),            /* ADDRESS OF DCB ASSOCIATED
*                                       WITH THIS IOB                */
*    2 IOBRESTR PTR(31),             /* AFTER SVC 16 (PURGE) -
*                                       QUIESCE - ADDRESS OF THE NEXT
*                                       IOB IN THE PURGE CHAIN.
*                                       (LAST IOB IN THE CHAIN, BYTE
*                                       4 IS FF.)
*                                       DURING I/O SUPERVISOR WRITE-
*                                       TO-OPERATOR ROUTINE CONTROL -
*                                       CCHH PART OF THE ADDRESS OF A
*                                       DEFECTIVE TRACK.
*                                       DURING I/O ERROR CORRECTION
*                                       (MEANINGFUL ONLY IF BIT 3 IN
*                                       THE IOBFLAG1 FIELD IS ON) -
*                                       ADDRESS OF THE CHANNEL
*                                       PROGRAM USED TO CORRECT AN
*                                       ERROR CONDITION.
*                                       AFTER I/O ERROR CORRECTION -
*                                       IF A CHANNEL PROGRAM IS
*                                       RESTARTED THROUGH A CCW OTHER
*                                       THAN THE ONE POINTED TO BY
*                                       THE IOBSTART FIELD, ITS
*                                       ADDRESS IS HERE.             */
*     3 IOBREPOS CHAR(1),            /* DURING I/O ERROR CORRECTION
*                                       (MEANINGFUL ONLY IF BIT 3 IN
*                                       THE IOBFLAG1 FIELD IS ON) FOR
*                                       MAGNETIC TAPE ONLY - THE
*                                       CONTROL COMMAND (BSR, FSR,
*                                       ERG) REQUIRED TO REPOSITION
*                                       OVER A BLOCK.                */
*     3 IOBRSTRB PTR(24),            /* SAME AS IOBRESTR ABOVE       */
*    2 IOBINCAM FIXED(15) BDY(WORD), /* QSAM, BSAM, EXCP ACCESS
*                                       METHOD -- NORMAL SCHEDULING -
*                                       VALUE USED TO INCREMENT BLOCK
*                                       COUNT FIELD IN DCB FOR
*                                       MAGNETIC TAPE.  CHAINED
*                                       SCHEDULING - ZEROS.
*                                       QSAM, BSAM -- OPERATION CODE
*                                       OF WRITE CCW WHEN A USASI
*                                       CONTROL CHARACTER AND NO DATA
*                                       IS TO BE WRITTEN (PRINTER AND
*                                       CARD PUNCH ONLY)             */
*     3 IOBBTAMF CHAR(1),            /* FLAG BYTE FOR BTAM           */
*      4 IOBPRMER BIT(1),            /* SAD OR ENABLE ISSUED BY OPEN
*                                       RESULTED IN A PERMANENT I/O
*                                       ERROR                        */
*      4 IOBINUSE BIT(1),            /* THIS IOB IS CURRENTLY IN USE
*                                       BY AN I/O OPERATION          */
*      4 IOBRSV14 BIT(1),            /* RESERVED                     */
*      4 IOBRSV15 BIT(1),            /* RESERVED                     */
*      4 IOBRSV16 BIT(1),            /* RESERVED                     */
*      4 IOBRSV17 BIT(1),            /* RESERVED                     */
*      4 IOBRFTMG BIT(1),            /* A REQUEST-FOR-TEST MESSAGE
*                                       RECEIVED FROM A REMOTE 3270
*                                       DISPLAY STATION        ICB478*/
*      4 IOBOLTST BIT(1),            /* LINE IS UNDER ON-LINE TEST
*                                       OPERATION                    */
*     3 IOBRSV19 CHAR(1),            /* RESERVED                     */
*    2 IOBERRCT FIXED(15);           /* USED BY I/O SUPERVISOR ERROR
*                                       ROUTINES TO COUNT TEMPORARY
*                                       ERRORS DURING RETRY          */
*
*
* DECLARE 1 IOBORG04
*%IF IKEPLS='2'  %THEN
*    %GOTO IOBA7;
*       BASED(ADDR(IOBINCAM)) BDY(WORD),
*%GOTO IOBA8;
*%IOBA7 : ;
*       DEF(IOBINCAM) BDY(WORD),
*%IOBA8 : ;
*    2 IOBCRDCC CHAR(1),             /* DATA CHECK ERROR COUNT
*                                       (OPTICAL READER)             */
*    2 IOBCRILC CHAR(1);             /* INCORRECT LENGTH ERROR COUNT
*                                       (OPTICAL READER)             */
*
*
* DECLARE 1 IOBORG12
*%IF IKEPLS='2'  %THEN
*    %GOTO IOBA25;
*       BASED(ADDR(IOBINCAM)) BDY(WORD),
*%GOTO IOBA26;
*%IOBA25 : ;
*       DEF(IOBINCAM) BDY(WORD),
*%IOBA26 : ;
*    2 IOBFL4   BIT(8),              /* FLAG 4 - SENSE ERROR COUNTS
*                                       FOR MAGNETIC DOCUMENT READER
*                                       (3890) (OS/VS1) OR ERROR CODE
*                                       PASSBACK BYTE FOR 3895 (FOR
*                                       ERROR CODE VALUES SEE IBM
*                                       3895 DOCUMENT READER/INSCRIBER
*                                       MACHINE AND PROGRAMMING
*                                       DESCRIPTION, GA24-3620)
*                                       (MDC333)             @G30HP9A*/
*     3 IOBOVR   BIT(1),             /* OVERRUN ERROR (3890)
*                                       (MDC026)             @G30HP9A*/
*     3 IOBREJ   BIT(1),             /* COMMAND REJECT ERROR (3890)
*                                       (MDC027)             @G30HP9A*/
*     3 IOBDCK   BIT(1),             /* DATA CHECK ERROR (3890)
*                                       (MDC028)             @G30HP9A*/
*     3 IOBBUS   BIT(1),             /* BUS-OUT ERROR (3890)
*                                       (MDC029)             @G30HP9A*/
*     3 IOBEQP   BIT(1),             /* EQUIPMENT CHECK ERROR (3890)
*                                       (MDC030)             @G30HP9A*/
*     3 IOBENT   BIT(1),             /* FIRST TIME ENTRY SWITCH
*                                       (3890)  (MDC045)     @G30HP9A*/
*     3 IOBRSV47 BIT(1),             /* RESERVED FOR 3890      MDC044*/
*     3 IOBRSV46 BIT(1);             /* RESERVED FOR 3890      MDC033*/
*
*
* /* *************************************************************** */
* /*                                                                 */
* /*                EXTENSION SECTIONS OF THE IOB                    */
* /*                                                                 */
* /* *************************************************************** */
*
*                        /* **************************************** */
*                        /*    DIRECT ACCESS EXTENSION *** 8 BYTES   */
*                        /* **************************************** */
*
* DECLARE
*%IF IKEPLS='2'  %THEN
*    %GOTO IOBA9;
*   1 IOBEXTEN BASED(ADDR(IOBSTDRD)+32) BDY(WORD),
*%GOTO IOBA10;
*%IOBA9 : ;
*   1 IOBEXTEN DEF(IOBSTDRD) POS(33) BDY(WORD),
*%IOBA10 : ;
*    2 IOBSEEK  CHAR(8) BDY(WORD),   /* A SEEK ADDRESS (IN THE FORMAT
*                                       MBBCCHHR) USED WITH A CHANNEL
*                                       PROGRAM                      */
*     3 IOBM     CHAR(1),            /* THE NUMBER OF THE DEB EXTENT
*                                       TO BE USED FOR THIS REQUEST.
*                                       THE FIRST EXTENT IS NUMBER
*                                       ZERO.                        */
*     3 IOBBB    CHAR(2),            /* BIN NUMBER(DATA CELL)        */
*      4 IOBBB1   CHAR(1),
*      4 IOBBB2   CHAR(1),
*     3 IOBCC    CHAR(2),            /* CYLINDER NUMBER              */
*      4 IOBCC1   CHAR(1),
*      4 IOBCC2   CHAR(1),
*     3 IOBHH    CHAR(2),            /* TRACK NUMBER                 */
*      4 IOBHH1   CHAR(1),
*      4 IOBHH2   CHAR(1),
*     3 IOBR     CHAR(1);            /* RECORD NUMBER                */
*
*                        /* **************************************** */
*                        /*    BTAM EXTENSION *** 40 BYTES +         */
*                        /*                   CHANNEL PROGRAM        */
*                        /* **************************************** */
*
* DECLARE 1 IOBORG05
*%IF IKEPLS='2'  %THEN
*    %GOTO IOBA11;
*       BASED(ADDR(IOBEXTEN)) BDY(WORD),
*%GOTO IOBA12;
*%IOBA11 : ;
*       DEF(IOBEXTEN) BDY(WORD),
*%IOBA12 : ;
*    2 IOBUCBX  CHAR(1),             /* UCB INDEX.  THE LINE NUMBER
*                                       IS USED AS AN INDEX TO LOCATE
*                                       THE PROPER UCB ADDRESS IN THE
*                                       DEB.                         */
*    2 IOBWORK  CHAR(5),             /* WORK AREA USED BY ERROR
*                                       ROUTINES AND ON-LINE TERMINAL
*                                       TEST ROUTINES                */
*    2 IOBRCVPT CHAR(1),             /* RECEIVED ACK (ACK-0 OR ACK-1)*/
*    2 IOBSNDPT CHAR(1),             /* SENT ACK (ACK-0 OR ACK-1)    */
*    2 IOBERCCW CHAR(8) BDY(WORD),   /* CCW AREA USED BY THE BTAM
*                                       ERROR RECOVERY ROUTINES      */
*    2 IOBERINF CHAR(16) BDY(WORD),  /* ERROR INFORMATION FIELD USED
*                                       BY THE BTAM ERROR RECOVERY
*                                       ROUTINES                     */
*    2 IOBCPA   CHAR(8) BDY(WORD);   /* CHANNEL PROGRAMS AREA.  THE
*                                       LENGTH DEPENDS ON THE
*                                       TERMINAL AND THE OPTIONS.    */
*
*                        /* **************************************** */
*                        /*    GAM EXTENSION *** 40 BYTES            */
*                        /* **************************************** */
*
* DECLARE 1 IOBORG06
*%IF IKEPLS='2'  %THEN
*    %GOTO IOBA13;
*       BASED(ADDR(IOBEXTEN)) BDY(WORD),
*%GOTO IOBA14;
*%IOBA13 : ;
*       DEF(IOBEXTEN) BDY(WORD),
*%IOBA14 : ;
*     3 IOBUCBXG CHAR(1),            /* UCB INDEX                    */
*     3 IOBRSV37 CHAR(3),            /* RESERVED                     */
*     3 IOBNXTPT PTR(31),            /* ADDRESS OF NEXT AVAILABLE
*                                       IOB.  SET TO ZERO IF THIS IS
*                                       LAST IOB.                    */
*      4 IOBSTATA CHAR(1),           /* STATUS INDICATORS            */
*       5 IOBAVLFL BIT(1),           /* IF 0, IOB IS AVAILABLE.
*                                       IF 1, IOB IS NOT AVAILABLE   */
*       5 IOBRSV20 BIT(1),           /* RESERVED                     */
*       5 IOBRSV21 BIT(1),           /* RESERVED                     */
*       5 IOBRSV22 BIT(1),           /* RESERVED                     */
*       5 IOBRSV23 BIT(1),           /* RESERVED                     */
*       5 IOBRSV24 BIT(1),           /* RESERVED                     */
*       5 IOBRSV25 BIT(1),           /* RESERVED                     */
*       5 IOBRSV26 BIT(1),           /* RESERVED                     */
*      4 IOBNXTPB PTR(24),           /* SAME AS IOBNXTPT ABOVE       */
*     3 IOBCCW   CHAR(32) BDY(WORD); /* LIST OF CHANNEL COMMAND WORDS
*                                       TO TRANSFER DATA             */
*
*                        /* **************************************** */
*                        /*    QISAM EXTENSION *** 2 BYTES           */
*                        /* **************************************** */
*
* DECLARE 1 IOBORG07
*%IF IKEPLS='2'  %THEN
*    %GOTO IOBA15;
*       BASED(ADDR(IOBEXTEN)+8) BDY(WORD),
*%GOTO IOBA16;
*%IOBA15 : ;
*       DEF(IOBEXTEN) POS(9) BDY(WORD),
*%IOBA16 : ;
*    2 W1IEXTEN CHAR(2),             /* APPENDAGE CODES FOR BOTH
*                                       NORMAL AND ABNORMAL CHANNEL
*                                       END CONDITIONS               */
*     3 W1OEXTEN CHAR(2);            /* SAME AS W1IEXTEN ABOVE       */
*
*                        /* **************************************** */
*                        /*    BISAM EXTENSION *** 16 BYTES          */
*                        /* **************************************** */
*
* DECLARE 1 IOBORG08
*%IF IKEPLS='2'  %THEN
*    %GOTO IOBA17;
*       BASED(ADDR(IOBEXTEN)+8) BDY(WORD),
*%GOTO IOBA18;
*%IOBA17 : ;
*       DEF(IOBEXTEN) POS(9) BDY(WORD),
*%IOBA18 : ;
*    2 IOBCCWAD PTR(31),             /* FOR FIXED LENGTH RECORDS,
*                                       ADDRESS OF FIRST CCW OF
*                                       CHANNEL PROGRAM.
*                                       FOR VARIABLE LENGTH RECORDS,
*                                       ADDRESS OF BUFFER, IF DYNAMIC
*                                       BUFFERING SPECIFIED, AFTER
*                                       COMPLETION OF READ FOR UPDATE
*                                       (READ KU)                    */
*    2 IOBINDCT CHAR(1),             /* INDICATORS                   */
*     3 IOBDEQCP BIT(1),             /* DEQUEUE CHANNEL PROGRAM FROM
*                                       QUEUE                        */
*     3 IOBUNSCH BIT(1),             /* UNSCHEDULED QUEUE            */
*     3 IOBOVPTR BIT(1),             /* IF 0, DECBAREA + 6 POINTS TO
*                                       OVERFLOW RECORD DATA.
*                                       IF 1, DCBMSWA POINTS TO
*                                       OVERFLOW RECORD KEY FOLLOWED
*                                       BY DATA.                     */
*     3 IOBKEYAD BIT(1),             /* IF 0, DECBKEY POINTS TO
*                                       OVERFLOW RECORD KEY.
*                                       IF 1, DCBMSWA + 8 POINTS TO
*                                       OVERFLOW RECORD KEY.         */
*     3 IOBRSV27 BIT(1),             /* RESERVED                     */
*     3 IOBRSV28 BIT(1),             /* RESERVED                     */
*     3 IOBRSV29 BIT(1),             /* RESERVED                     */
*     3 IOBCHNNL BIT(1),             /* IF 0, NORMAL CHANNEL END HAS
*                                       OCCURRED.
*                                       IF 1, ABNORMAL CHANNEL END
*                                       HAS OCCURRED.                */
*    2 IOBUNSQR CHAR(1),             /* REASON FOR UNSCHEDULED QUEUE */
*     3 IOBCPBSY BIT(1),             /* CHANNEL PROGRAM CP1 OR CP2
*                                       BUSY                         */
*     3 IOBNTAV1 BIT(1),             /* NO CP4, CP5 OR CP6 AVAILABLE */
*     3 IOBNTAV2 BIT(1),             /* NO CP7 AVAILABLE             */
*     3 IOBKNWR  BIT(1),             /* WRITE KN IS IN EFFECT
*                                       (UNSCHEDULED IOB IS FOR
*                                       WRITE KN)                    */
*     3 IOBKNRWR BIT(1),             /* WRITE KN IS IN EFFECT
*                                       (UNSCHEDULED IOB IS FOR
*                                       READ OR WRITE KN)            */
*     3 IOBRSV30 BIT(1),             /* RESERVED                     */
*     3 IOBRSV31 BIT(1),             /* RESERVED                     */
*     3 IOBRSV32 BIT(1),             /* RESERVED                     */
*    2 IOBAPP   CHAR(1),             /* APPENDAGE CODE               */
*    2 IOBASYN  CHAR(1),             /* ASYNCHRONOUS ROUTINE CODE    */
*    2 IOBFCHAD PTR(31),             /* FORWARD CHAIN ADDRESS        */
*     3 IOBCOUNT CHAR(1),            /* WRITE CHECK COUNTER          */
*     3 IOBFCHNB PTR(24),            /* FORWARD CHAIN ADDRESS        */
*    2 IOBBCHAD PTR(31);             /* BACKWARD CHAIN ADDRESS       */
*
*                        /* **************************************** */
*                        /*    BDAM EXTENSION *** 40 BYTES +         */
*                        /*                   CHANNEL PROGRAM        */
*                        /* **************************************** */
*
* DECLARE 1 IOBORG09
*%IF IKEPLS='2'  %THEN
*    %GOTO IOBA19;
*       BASED(ADDR(IOBEXTEN)+8) BDY(WORD),
*%GOTO IOBA20;
*%IOBA19 : ;
*       DEF(IOBEXTEN) POS(9) BDY(WORD),
*%IOBA20 : ;
*    2 IOBDBYTR FIXED(15),           /* NUMBER OF UNUSED BYTES
*                                       REMAINING ON THE TRACK       */
*    2 IOBDIOBS FIXED(15),           /* OVERALL SIZE OF THE IOB      */
*    2 IOBDPLAD PTR(31),             /* ADDRESS OF THE NEXT IOB IN
*                                       THE POOL OF IOB'S            */
*     3 IOBDAYLI CHAR(1),            /* ALL BITS SET TO ZERO INDICATE
*                                       THE AVAILABILITY OF THIS IOB */
*     3 IOBDPLB  PTR(24),            /* ADDRESS OF THE NEXT IOB IN
*                                       THE POOL OF IOB'S            */
*    2 IOBDTYPE CHAR(1),             /* THE TYPE OF REQUEST AND
*                                       SPECIFIED OPTIONS            */
*     3 IOBVERFY BIT(1),             /* VERIFY                       */
*     3 IOBOVFLO BIT(1),             /* OVERFLOW                     */
*     3 IOBEXTSC BIT(1),             /* EXTENDED SEARCH              */
*     3 IOBFDBCK BIT(1),             /* FEEDBACK                     */
*     3 IOBACTAD BIT(1),             /* ACTUAL ADDRESSING            */
*     3 IOBDYNBF BIT(1),             /* DYNAMIC BUFFERING            */
*     3 IOBRDEXC BIT(1),             /* READ EXCLUSIVE               */
*     3 IOBRELBL BIT(1),             /* RELATIVE BLOCK ADDRESSING    */
*    2 IOBDTYP2 CHAR(1),             /* SECOND BYTE OF OPTIONS AND
*                                       REQUESTS                     */
*     3 IOBSKEY  BIT(1),             /* KEY ADDRESS CODED AS 'S'     */
*     3 IOBSBLKL BIT(1),             /* BLOCK LENGTH CODED AS 'S'    */
*     3 IOBSUFFX BIT(2),             /* IF BITS 2 AND 3 ARE ONE, RU
*                                       IS SUFFIXED TO THE TYPE,
*                                       INDICATING THAT THE FEEDBACK
*                                       ADDRESS IN DECNXADR CAN BE
*                                       THE ADDRESS OF EITHER THE
*                                       NEXT DATA RECORD OR THE NEXT
*                                       CAPACITY RECORD, WHICHEVER
*                                       OCCURS FIRST.
*                                       IF BIT 2 IS ZERO AND BIT 3 IS
*                                       ONE, R IS SUFFIXED TO THE
*                                       TYPE, INDICATING THAT THE
*                                       FEEDBACK ADDRESS IN DECNXADR
*                                       IS THE ADDRESS OF THE NEXT
*                                       DATA RECORD.                 */
*     3 IOBRQUST BIT(1),             /* IF 1, READ REQUEST.
*                                       IF 0, WRITE REQUEST.         */
*     3 IOBTYPE  BIT(1),             /* IF 1, KEY TYPE.
*                                       IF 0, ID TYPE.               */
*     3 IOBADDTY BIT(1),             /* ADD TYPE                     */
*     3 IOBRELEX BIT(1),             /* RELEX MACRO ISSUED           */
*    2 IOBDSTAT CHAR(2),             /* STATUS OF THE I/O REQUEST    */
*     3 IOBSTAT1 CHAR(1),            /* FLAG BYTE                    */
*      4 IOBABNRM BIT(1),            /* ABNORMAL COMPLETION          */
*      4 IOBNEWVL BIT(1),            /* ON EXTENDED SEARCH, THE NEXT
*                                       EXTENT IS ON A NEW VOLUME.
*                                       THE ASI ROUTINE MUST ISSUE THE
*                                       EXCP MACRO.  THE END-OF-EXTENT
*                                       APPENDAGE CANNOT.            */
*      4 IOBSYNCH BIT(1),            /* MODULE WAS ENTERED VIA
*                                       SYNCH                  MDC037*/
*      4 IOBPASS2 BIT(1),            /* ON EXTENDED SEARCH, INDICATES
*                                       TO THE RELATIVE BLOCK
*                                       CONVERSION ROUTINE THAT THE
*                                       SECOND PASS OF A TWO-PASS
*                                       CONVERSION ROUTINE HAS
*                                       COMPLETED                    */
*      4 IOBENQUE BIT(1),            /* FOR EXCLUSIVE CONTROL
*                                       REQUEST, INDICATES THAT A
*                                       RECORD HAS BEEN ENQUEUED     */
*      4 IOBBUFF  BIT(1),            /* A BUFFER HAS BEEN ASSIGNED
*                                       TO THIS IOB                  */
*      4 IOBADDVU BIT(1),            /* IOB BEING USED TO ADD A
*                                       VARIABLE (V) OR UNDEFINED (U)
*                                       TYPE RECORD TO THE DATA SET  */
*      4 IOBSIORT BIT(1),            /* INDICATES TO THE DYNAMIC
*                                       BUFFERING ROUTINE THAT IT
*                                       WAS ENTERED FROM, AND IS TO
*                                       RETURN TO, THE START I/O
*                                       APPENDAGE MODULE             */
*     3 IOBSTAT2 CHAR(1),            /* ERROR CODE FOR ABNORMAL
*                                       COMPLETION USED AS POST CODE
*                                       IN ECB                       */
*    2 IOBDCPND PTR(31),             /* ADDRESS OF LOCATION WHERE
*                                       CHANNEL END PROGRAM SHOULD
*                                       END                          */
*    2 IOBDBYTN FIXED(15),           /* NUMBER OF BYTES NEEDED ON A
*                                       TRACK TO WRITE A NEW BLOCK   */
*    2 IOBRSV34 CHAR(2),             /* RESERVED                     */
*    2 IOBDQPTR PTR(31),             /* ADDRESS OF IOB FOR NEXT I/O
*                                       OPERATION TO BE EXECUTED     */
*    2 IOBRSV35 CHAR(8) BDY(WORD),   /* RESERVED                     */
*    2 IOBDNCRF CHAR(8) BDY(WORD),   /* COUNT FIELD FOR NEW BLOCK    */
*    2 IOBCHNPR CHAR(0) BDY(WORD);   /* CHANNEL PROGRAM USED TO
*                                       TRANSFER DATA AS REQUESTED BY
*                                       THE READ OR WRITE MACRO
*                                       INSTRUCTION STARTS HERE      */
*
*                        /* **************************************** */
*                        /*      VSAM EXTENSION *** 24 BYTES         */
*                        /* **************************************** */
*
* DECLARE 1 IOBORG10
*%IF IKEPLS='2'  %THEN
*    %GOTO IOBA21;
*       BASED(ADDR(IOBEXTEN)+8) BDY(WORD),
*%GOTO IOBA22;
*%IOBA21 : ;
*       DEF(IOBEXTEN) POS(9) BDY(WORD),
*%IOBA22 : ;
*    2 IOBSEEK2 CHAR(8) BDY(WORD),   /* SEEK FIELD 2           ICB435*/
*     3 IOBSK2M  CHAR(1),            /* EXTENT NUMBER          ICB435*/
*     3 IOBSK2BB CHAR(2),            /* BIN NUMBER             ICB435*/
*     3 IOBSK2CC CHAR(2),            /* CYLINDER NUMBER        ICB435*/
*     3 IOBSK2HH CHAR(2),            /* HEAD NUMBER            ICB435*/
*     3 IOBSK2R  CHAR(1),            /* RECORD NUMBER          ICB435*/
*    2 IOBBUFC  PTR(31),             /* ADDRESS OF ASSOCIATED BUFFER
*                                       CONTROL BLOCK          ICB435*/
*    2 IOBREADA PTR(31),             /* ADDRESS OF FIRST READ CHANNEL
*                                       PROGRAM SEGMENT THAT HAS NOT
*                                       BEEN PROCESSED         ICB435*/
*    2 IOBNEXTA PTR(31),             /* ADDRESS OF NEXT ACTIVE IOB
*                                                              ICB435*/
*    2 IOBRDCHP PTR(31);             /* ADDRESS OF READ CHANNEL
*                                       PROGRAM                ICB435*/
*
*                        /* **************************************** */
*                        /*    VTAM EXTENSION (OS/VS1 ONLY)          */
*                        /*        *** 24 BYTES                      */
*                        /* **************************************** */
*
* DECLARE 1 IOBORG11
*%IF IKEPLS='2'  %THEN
*    %GOTO IOBA23;
*       BASED(ADDR(IOBEXTEN)) BDY(WORD),
*%GOTO IOBA24;
*%IOBA23 : ;
*       DEF(IOBEXTEN) BDY(WORD),
*%IOBA24 : ;
*    2 IOBERCT  PTR(31),             /* SAME AS IOBERCTA BELOW MDC001*/
*     3 IOBUCBXV PTR(8),             /* UCB INDEX              MDC050*/
*      4 IOBRTYPE BIT(8),            /* RECORD TYPE FOR OBR    MDC002*/
*     3 IOBERCTA PTR(24),            /* POINTER TO COUNTERS FOR SIO
*                                       AND TEMPORARY ERRORS   MDC003*/
*    2 IOBNAME  PTR(31),             /* SAME AS IOBNAMEA BELOW MDC004*/
*     3 IOBNAMSZ BIT(8),             /* SIZE OF TERMINAL NAME  MDC005*/
*     3 IOBNAMEA PTR(24),            /* POINTER TO TERMINAL NAME
*                                                              MDC006*/
*    2 IOBMDREC PTR(31),             /* POINTER TO RECORD BEING
*                                       PASSED TO MISCELLANEOUS DATA
*                                       RECORDER               MDC007*/
*    2 IOBRCD   PTR(31),             /* POINTER TO QUEUE OF OBR
*                                       RECORDS PASSED FROM 3705
*                                                              MDC008*/
*    2 IOBSENSV BIT(8),              /* SENSE BYTE SAVE AREA   MDC009*/
*    2 IOBCSWSV CHAR(7);             /* SAVE AREA FOR LAST 7 BYTES OF
*                                       CSW                    MDC010*/
*
*                        /* **************************************** */
*                        /*    3540 EXTENSION *** 4 BYTES    @Z30OP9A*/
*                        /* **************************************** */
*
* DECLARE 1 IOBORG13
*%IF IKEPLS='2'  %THEN
*    %GOTO IOBA27;
*       BASED(ADDR(IOBEXTEN)) BDY(WORD), /*                  @Z30OP9A*/
*%GOTO IOBA28;
*%IOBA27 : ;
*       DEF(IOBEXTEN) BDY(WORD),     /*                      @Z30OP9A*/
*%IOBA28 : ;
*    2 IOBSKADR CHAR(4) BDY(WORD),   /* 3540 SEEK ADDRESS
*                                       (MDC300)             @Z30OP9A*/
*     3 IOBSKRV  PTR(8),             /* RESERVED  (MDC301)   @Z30OP9A*/
*     3 IOBSKTT  PTR(8),             /* TRACK NUMBER
*                                       (MDC302)             @Z30OP9A*/
*     3 IOBSK0   PTR(8),             /* MUST BE ZERO
*                                       (MDC303)             @Z30OP9A*/
*     3 IOBSKSS  PTR(8);             /* SECTOR NUMBER
*                                       (MDC304)             @Z30OP9A*/
