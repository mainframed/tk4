         MACRO
&NAME    IECRES &FUNC,&IDTTR,&BCODE,&STM=,&LV=,&A=,&SP=,&KEY=,   Y02080*
               &ID=,&PREFIX=,&EXTPR=,&MODID=,&MODNM=,&BRCODE=,   Y02080*
               &EXITAD=,&REG0=,&REG1=,                           Y02082*
               &DEB=,                                            Y02134*
               &DCBCOPY=,                                        Y02082*
               &BRANCH=,&EPA=,&REUSE=                            Y02080
.*                                                               Y02080
.*       MACRO DELETIONS/CHANGES FOR VS2 RELEASE 2
.*
.*
.**********************************************************************
.*
.* MODULE NAME = IECRES (VS2-2)
.*
.* DESCRIPTIVE NAME = OPEN/CLOSE/EOV/DADSM SERVICE ROUTINE MACRO
.*
.* COPYRIGHT = NONE
.*
.* STATUS = CHANGE LEVEL 000
.*
.* FUNCTION = THERE ARE TWELVE FUNCTIONS WHICH CAN BE SPECIFIED FOR
.*            THE IECRES MACRO.  NINE OF THESE FUNCTIONS SET UP THE
.*            VARIOUS INTERFACES TO THE OPEN/CLOSE/EOV/DADSM SERVICE
.*            ROUTINE (IFG019RA):
.*
.*            IFG019RA+0  - ENTRY FOR WAIT FACILITY
.*            IFG019RA+4  - ENTRY FOR SELECT-LOAD FACILITY
.*            IFG019RA+8  - ENTRY FOR DCB SYNCHRONIZATION FACILITY
.*            IFG019RA+12 - ENTRY FOR QMNGRIO FACILITY
.*            IFG019RA+20 - ENTRY FOR LOAD AND BRANCH FACILITY
.*            IFG019RA+24 - ENTRY FOR LOAD AND RETURN FACILITY
.*            IFG019RA+28 - ENTRY FOR GET WORK AREA FACILITY
.*            IFG019RA+32 - ENTRY FOR GET WTG/EOV WORK AREA FACILITY
.*            IFG019RA+36 - ENTRY FOR GET FIRST WORK AREA FACILITY
.*            IFG019RA+40 - ENTRY TO INITIALIZE PREFIX=FIRST WKAREA
.*            IFG019RA+44 - ENTRY TO INITIALIZE AND/OR COPY THE DCB
.*            IFG019RA+48 - ENTRY FOR FREE WORK AREA FACILITY
.*            IFG019RA+52 - ENTRY FOR FREE FIRST OR WTG/EOV FACILITY
.*            IFG019RA+56 - ENTRY FOR UEXIT FACILITY
.*
.*            THE OTHER THREE FUNCTIONS (IECRES BRANCH, IECRES EXIT,
.*            AND IECRES LOCJFCB) DO NOT SET UP AN INTERFACE TO
.*            IFG019RA, BUT MERELY GENERATE EXECUTABLE CODE.
.*
.* NOTES = SEE BELOW
.*
.*      DEPENDENCIES = THE USE OF IECRES XCTL,&IDTTR,&BCODE USES
.*                     THE BRT=NO EXPANSION OF THE XCTLTABL MACRO.
.*
.*                     SOME OF THE MACRO FUNCTIONS USE SYMBOLS WHICH
.*                     MUST BE EQUATED SOMEHOW IN THE CALLING MODULE.
.*
.*                     SYMBOL     FUNCTION USING THE SYMBOL
.*
.*                     EOVSIZE    IECRES GET,PREFIX=EOV
.*                     RES        IECRES LOAD,BRANCH=QUEUED
.*                                IECRES SYNCH
.*                                IECRES WAIT
.*                                IECRES XCTL
.*                     RESSYNCH   IECRES SYNCH
.*                     RESXCTL    IECRES LOAD,BRANCH=QUEUED
.*                                IECRES XCTL
.*                     RWTGC      IECRES LOAD,BRANCH=QUEUED
.*                                IECRES XCTL
.*
.*                     ADDITIONALLY, ALMOST ALL OF THE FOURTEEN
.*                     FUNCTIONS REFERENCE FIELDS DEFINED IN THE
.*                     PREFIX, EXTENDED PREFIX, OR WTG TABLE PORTIONS
.*                     OF THE OPEN/CLOSE/EOV OR DADSM WORK AREAS.
.*
.*      RESTRICTIONS = ONLY THE OPEN, CLOSE, AND EOV ROUTINES
.*                     (INCLUDING RDJFCB) USE THE WAIT, SELECT-LOAD,
.*                     SYNCH DCB, QMNGRIO, GET WTG/EOV, INIT/COPY,
.*                     AND UEXIT FACILITIES.
.*                     ONLY DADSM ROUTINES, TASK CLOSE, AND THE
.*                     RECOVERY ROUTINES USE THE GET FIRST AND
.*                     INITIALIZE PREFIX=FIRST FACILITIES.
.*
.*      REGISTER CONVENTIONS = NOT APPLICABLE
.*
.* PATCH LABEL = NOT APPLICABLE
.*
.* MODULE TYPE = MACRO
.*
.*      PROCESSOR = ASSEMBLER LANGUAGE
.*
.*      MODULE SIZE = NOT APPLICABLE
.*
.*      ATTRIBUTES = NOT APPLICABLE
.*
.* ENTRY POINT = NOT APPLICABLE
.*
.*      PURPOSE = SEE FUNCTION
.*
.*      LINKAGE = LABEL IECRES &FUNC,&IDTTR,&BCODE,KEYWORDS=
.*
.*      INPUT =   OPTIONAL LABEL SPECIFIED AS AN ACCEPTABLE ASSEMBLER
.*                LABEL WHICH CAN BE USED BY THE CALLING CSECT.
.*
.*
.*                &FUNC IS THE FIRST POSITIONAL PARAMETER.  THE
.*                FUNCTIONS WHICH CAN BE SPECIFIED FOR IECRES ARE:
.*
.*                BRANCH   - GENERATES CODE TO BRANCH ON THE CONTENTS
.*                           OF A REGISTER
.*                EXIT     - GENERATES CODE TO LOAD REGISTERS AND
.*                           RETURN
.*                FREE     - BUILDS THE INTERFACE FOR BOTH OF THE
.*                           FREE WORK AREA FACILITIES
.*                GET      - BUILDS THE INTERFACE FOR ALL THREE GET
.*                           WORK AREA FACILITIES
.*                INIT     - BUILDS THE INTERFACE FOR THE INITIALIZE-
.*                           DCB COPY FACILITY
.*                LOAD     - BUILDS THE INTERFACE FOR ALL THREE LOAD
.*                           FACILITIES
.*                LOCJFCB  - GENERATES CODE TO INCREMENT PAST THE JFCB
.*                           PREFIX
.*                SYNCHDCB - BUILDS THE INTERFACE FOR THE DCB SYNCHRO-
.*                           NIZATION FACILITY
.*                UEXIT    - BUILDS THE INTERFACE FOR THE USER EXIT
.*                           FACILITY
.*                WAIT     - BUILDS THE INTERFACE FOR THE WAIT FACILITY
.*                WRJFCB   - BUILDS THE INTERFACE FOR THE QMNGRIO
.*                           FACILITY
.*                XCTL     - BUILDS THE INTERFACE FOR THE SELECT-LOAD
.*                           FACILITY
.*
.*
.*                &IDTTR, THE SECOND POSITIONAL PARAMETER, IS OPTIONAL.
.*                IT CAN BE USED WITH FOUR OF THE IECRES FUNCTIONS.
.*
.*                FOR IECRES GET/FREE, IF &IDTTR IS SPECIFIED (AS THE
.*                CHARACTERS 'WLH' WHICH STAND FOR 'WITH LOCK HELD'),
.*                THEN IFG019RA DOES NOT ACQUIRE THE LOCAL LOCK.
.*
.*                FOR IECRES LOCJFCB, &IDTTR IS THE NAME OF A REGISTER
.*                WHICH POINTS TO A WORD CONTAINING THE JFCB PREFIX
.*                ADDRESS.
.*
.*                FOR IECRES WRJFCB, &IDTTR IS THE NAME OF A REGISTER
.*                WHICH POINTS TO 3 BYTES CONTAINING THE JFCB PREFIX
.*                ADDRESS.
.*
.*                FOR IECRES XCTL, IF &IDTTR IS SPECIFIED, IT MUST
.*                POINT TO THE ID AND TTR OF A MODULE TO WHICH CONTROL
.*                SHOULD BE GIVEN BY IFG019RA.
.*
.*
.*                &BCODE, THE THIRD POSITIONAL PARAMETER IS OPTIONAL.
.*                IT CAN BE USED WITH TWO OF THE IECRES FUNCTIONS.
.*
.*                FOR IECRES WRJFCB, &BCODE IS THE NAME OF A REGISTER
.*                WHICH POINTS TO THE JFCB TO BE 'WRITTEN' TO SWA.
.*
.*                FOR IECRES XCTL, IF &BCODE IS SPECIFIED, IT IS THE
.*                NAME OF A REGISTER WHICH CONTAINS THE BRANCH TABLE
.*                OFFSET.
.*
.*
.*                THE OPTIONAL KEYWORD PARAMETERS ARE:
.*
.*                A=
.*                BRANCH=
.*                BRCODE=
.*                DCBCOPY=
.*                DEB=
.*                EPA=
.*                EXITAD=
.*                EXTPR=
.*                ID=
.*                KEY=
.*                LV=
.*                MODID=
.*                MODNM=
.*                PREFIX=
.*                REG0=
.*                REG1=
.*                REUSE=
.*                SP=
.*                STM=
.*
.*
.*      OUTPUT = INTERFACE TO IFG019RA
.*
.* EXIT-NORMAL = MEXIT OR MEND STATEMENT
.*
.* EXIT-ERROR = ERROR MESSAGES:
.*
.*      MNOTE 8,***** INVALID FUNCTION - &FUNC
.*      MNOTE 4,WAIT CAN HAVE NO PARAMETERS
.*      MNOTE 4,XCTL CAN HAVE ONLY 2 PARAMETERS
.*      MNOTE 4,SYNCHDCB CAN HAVE NO PARAMETERS
.*      MNOTE 4,LV ONLY ON FREE PREFIX=NO
.*      MNOTE 4,SP ONLY ON FREE PREFIX=NO
.*      MNOTE 4,KEY ONLY ON FREE PREFIX=NO
.*      MNOTE 4,ID= INVALID FOR FREE
.*      MNOTE 8,CODE PREFIX OR EXTPR WITH GET OR FREE
.*      MNOTE 8,STM ON LAST FREE INVALID
.*      MNOTE 8,STM MUST HAVE 3 PARAMETERS
.*      MNOTE 8,STM ERROR - GET RETURNS ADDR OF AREA IN R1
.*      MNOTE 8,A= ADDR OF DCB PARAM LIST
.*      MNOTE 8,A= ADDR TO FREE OR GET PREFIX ADDR MISSING
.*      MNOTE 8,LV= LENGTH MISSING
.*      MNOTE 8,PREFIX=&PREFIX INCOMPATIBLE WITH GET REQUEST
.*      MNOTE 8,PREFIX OR EXTPR PARAMETER REQUIRED FOR LOAD UNLESS
.*            BRANCH=QUEUED
.*      MNOTE 8,BRANCH PARAMETER INVALID
.*      MNOTE 8,BRANCH PARAMETER REQUIRED FOR LOAD
.*      MNOTE 8,DEB= OR DCBCOPY= MUST BE CODED
.*      MNOTE 8,INITIAL CALL ALWAYS TOWKAR
.*      MNOTE 12,***  IHB002 INVALID DEB OPERAND SPECIFIED-&DEB
.*      MNOTE 12,***  IHB002 INVALID DCBCOPY OPERAND SPECIFIED-&DCBCOPY
.*
.* EXTERNAL REFERENCES = NONE
.*
.*      ROUTINES = NONE
.*
.*      DATA AREAS = NONE
.*
.*      CONTROL BLOCKS = CVT
.*
.* TABLES = EOV WORK AREA
.*          OPEN/CLOSE WORK AREA
.*          OPEN/CLOSE WTG TABLE
.*          VARIOUS DADSM WORK AREAS
.*
.* MACROS = IHBERMAC
.*          MODESET
.*          RETURN
.*
.* CHANGE ACTIVITY = SEE DELETIONS/CHANGES PRECEDING THE MACRO PROLOGUE
.*
.**********************************************************************
.*
         LCLA  &IECPRFX,&CODE                                    Y02080
         LCLC  &PREFX                                            Y02080
.*
         AIF   ('&FUNC' EQ 'WAIT').WAIT  WAITS ON DXECB IN WORK AREA
         AIF   ('&FUNC' EQ 'XCTL').XCTL  XCTL TO NEXT MODULE
         AIF   ('&FUNC' EQ 'SYNCHDCB').SYNCHDC ALL DCB'S TO SAME POINT
         AIF   ('&FUNC' EQ 'UEXIT').IECE000 USER EXIT EXPANSION  Y02082
         AIF   ('&FUNC' EQ 'LOAD').LOAD GET MODULE EPA           Y02080
         AIF   ('&FUNC' EQ 'BRANCH').BRANCH BRANCH TO MODULE     Y02080
         AIF   ('&FUNC' EQ 'GET').IECA000 LINK TO GETMAIN        Y02080
         AIF   ('&FUNC' EQ 'FREE').IECA000 LINK TO FREEMAIN      Y02080
         AIF   ('&FUNC' EQ 'LOCJFCB').IECB000 GO TO READ JFCB    Y02080
         AIF   ('&FUNC' EQ 'WRJFCB').IECC000 GO TO WRITE JFCB    Y02080
         AIF   ('&FUNC' EQ 'INIT').IECA000 LINK TO INITIALIZE    Y02134
         AIF   ('&FUNC' EQ 'EXIT').IECD000 SET UP CALLER RETURN  Y02134
.*
         MNOTE 8,'***** INVALID FUNCTION - &FUNC'                Y02080
&NAME    DC    H'0'                     DEFINE NAME, HALT EXECUTION
         MEXIT
.**********************************************************************
.*       FUNCTION = WAIT
.**********************************************************************
.WAIT    AIF   (N'&SYSLIST EQ 1).WAIT1
         MNOTE 4,'WAIT CAN HAVE NO PARAMETERS'
.WAIT1   ANOP
&NAME    BALR  14,RES                   BRANCH TO WAIT SUBROUTINE
         MEXIT
.**********************************************************************
.*       FUNCTION = XCTL
.**********************************************************************
.XCTL    AIF   (N'&SYSLIST LE 3).XCTL1
         MNOTE 4,'XCTL CAN HAVE ONLY 2 PARAMETERS'
.XCTL1   AIF   ('&IDTTR' EQ '').XCTL6
.*
         AIF   ('&IDTTR'(1,1) EQ '(').XCTL2
&NAME    MVC   0(5,RWTGC),&IDTTR        MOVE ID & TTR INTO WTG TABLE
         AGO   .XCTL3
.XCTL2   ANOP
&NAME    MVC   0(5,RWTGC),0&IDTTR       MOVE ID & TTR INTO WTG TABLE
.XCTL3   AIF   ('&BCODE' EQ '').XCTL4A
         AIF   ('&BCODE'(1,1) EQ '(').XCTL4
         LA    14,&BCODE.(,0)           LOAD BRANCH TABLE OFFSET/INDR
         AGO   .XCTL4A
.XCTL4   AIF   ('&BCODE' EQ '(14)').XCTL4A
         LR    14,&BCODE(1)             LOAD BRANCH TABLE OFFSET/INDR
.XCTL4A  AIF   ('&IDTTR'(1,1) EQ '(').XCTL4B
         ICM   14,8,&IDTTR+5            INSERT LENGTH IN HI ORDER BYTE
         AGO   .XCTL5
.XCTL4B  ICM   14,8,5&IDTTR             INSERT LENGTH IN HI ORDER BYTE
.XCTL5   B     RESXCTL(,RES)            BRANCH TO IFG019RA TO DO XCTL
         MEXIT
.*
.XCTL6   AIF   ('&BCODE' EQ '').XCTL9
         AIF   ('&BCODE'(1,1) EQ '(').XCTL7
&NAME    LA    14,&BCODE.(,0)           LOAD BRANCH TABLE OFFSET/INDR
         AGO   .XCTL8
.XCTL7   AIF   ('&BCODE' EQ '(14)').XCTL9
&NAME    LR    14,&BCODE(1)             LOAD BRANCH TABLE OFFSET/INDR
.XCTL8   B     RESXCTL(,RES)            BRANCH TO IFG019RA TO DO XCTL
         MEXIT
.*
.XCTL9   ANOP
&NAME    B     RESXCTL(,RES)            BRANCH TO IFG019RA TO DO XCTL
         MEXIT
.**********************************************************************
.*       FUNCTION = SYNCHDCB
.**********************************************************************
.SYNCHDC AIF   (N'&SYSLIST EQ 1).SYNCHD1
         MNOTE 4,'SYNCHDCB CAN HAVE NO PARAMETERS'
.SYNCHD1 ANOP
&NAME    BAL   14,RESSYNCH(,RES)       BRANCH TO SYNCH DCB SUBROUTINE
         MEXIT                                                   Y02080
.**********************************************************************
.*       FUNCTION = GET, FREE, OR INIT
.**********************************************************************
.IECA000 AIF   ('&NAME' EQ '').IECA010  IF NAME OMITTED          Y02080
&NAME    DS    0H                       LABEL AND ALIGN
.***                                                             Y02080
.*       CHECK IF VALID CALL                                     Y02080
.***                                                             Y02080
.IECA010 ANOP                                                    Y02080
&PREFX   SETC  '&PREFIX'                SET TO SPECIFIED VALUE   Y02080
&CODE    SETA  0                        SET RECOVERY CODE TO 0   Y02134
         AIF   ('&PREFX' NE '').IECA015 TEST IF SPECIFIED        Y02080
         AIF   (T'&EXTPR EQ 'O').IECA014  TEST IF SPECIFIED      YM1410
&PREFX   SETC  'YES'                    INDICATE PREFIX EXISTS   YM1410
         AGO   .IECA015                                          YM1410
.IECA014 ANOP                                                    YM1410
&PREFX   SETC  'NO'                     SET TO DEFAULT           Y02080
.IECA015 AIF   ('&PREFX'(1,1) NE 'R').IECA016 CHECK FOR RECOVERY Y02080
         AIF   ('&FUNC' EQ 'GET').IECA930 GET RWTG INVALID       Y02134
&PREFX   SETC  '&PREFX'(2,K'&PREFX-1)   INDICATE PROPER ENTRY    Y02080
&CODE    SETA  1                        SET RECOVERY CODE TO 1   Y02134
.IECA016 AIF   ('&FUNC' NE 'INIT' AND T'&EXTPR EQ 'O' AND              *
               '&PREFIX' EQ '').IECA900                          Y02080
         AIF   (T'&STM EQ 'O').IECA100 NO STM                    Y02080
.***                                                             Y02080
.*       STM PROCESSING                                          Y02080
.***                                                             Y02080
         AIF   ('&FUNC' NE 'FREE').IECA020 STM ALWAYS ALLOWED GETY02080
         AIF   ('&PREFX' EQ 'WTG' OR '&PREFX' EQ 'EOV' OR              *
               '&PREFX' EQ 'FIRST').IECA905 NO STM FOR LAST      Y02080
.IECA020 AIF   (N'&STM NE 3).IECA910    STM CODED BAD            Y02080
         AIF   ('&FUNC' NE 'GET').IECA040 GO TO INIT RESTRICTIONSY02080
         AIF   ('&STM(1)' EQ '0' OR '&STM(1)' EQ '1' OR                *
               '&STM(1)' EQ '(R0)' OR '&STM(1)' EQ '(R1)').IECA913     *
                                        GET RTNS ADDR AREA IN R1 Y02080
.***
.*       STM GEN
.***
.IECA040 AIF   ('&PREFX' EQ 'WTG' OR '&PREFX' EQ 'EOV' OR              *
               '&PREFX' EQ 'FIRST' OR '&PREFX' EQ 'EXTPR').IECA050     *
                                        FIRST TIMERS             Y02080
         AIF   ('&STM(3)' EQ 'DXXPREFX' OR '&STM(3)' EQ 'WTGPREFX').IEC*
               A060                     CHECK FOR STD SAVE AREA  Y02080
.IECA050 ANOP                                                    Y02080
         STM   &STM(1),&STM(2),&STM(3)  SAVE REGISTERS
         LA    15,&STM(3)               ADDRESS OF REGISTER SAVE AREA
         AGO   .IECA100                 PROC A=                  Y02080
.IECA060 ANOP                                                    Y02080
         L     15,&STM(3)               GET ADDRESS OF PREFIX
         LA    15,IECREGSV-IECPREFX(,15) ADDR OF REGISTER SAVE AREA
         STM   &STM(1),&STM(2),0(15)    SAVE REGISTERS
.***                                                             Y02080
.*       A = ADDRESS OF WORK AREA FOR GET,PREFIX=YES OR
.*           ADDRESS OF PREFIX FOR GET WITH DEFAULT OF PREFIX=NO OR
.*           ADDRESS OF A DCB PARAMETER LIST FOR GET,PREFIX=WTG/EOV
.***                                                             Y02080
.IECA100 AIF   ('&FUNC' EQ 'INIT').INIT100 INIT PROC             Y02080
         AIF   (T'&EXTPR NE 'O').IECA105 EXTPR= ADDR OF W/A      Y02080
         AIF   ('&FUNC' EQ 'FREE').IECA140 FREE PROC             Y02080
         AIF   ('&PREFX' EQ 'FIRST').IECA135 1ST GET EXPANSION   Y02080
         AIF   ('&PREFX' EQ 'WTG' OR '&PREFX' EQ 'EOV').IECA125        *
                                        WTG, EOV ADDR OF PARMS   Y02080
         AIF   ('&PREFX' EQ 'YES').IECA120 GET YES EXPAN         Y02080
         AIF   ('&PREFX' EQ 'NO').IECA200 NO PREFIX IN R1        Y02080
.***
.*       GET EXTPR PROCESSING
.***
.IECA105 AIF   ('&EXTPR'(1,1) EQ '(').IECA110 REG FORM           Y02080
         LA    1,&EXTPR                 ADDRESS OF EXTENDED PREFIX
         AGO   .IECA200                 CONTINUE                 Y02080
.IECA110 AIF   ('&EXTPR' EQ '(1)' OR '&EXTPR' EQ '(R1)').IECA200 Y02080*
                                        RIGHT REGISTER ALREADY   Y02080
         LR    1,&EXTPR(1)              ADDRESS OF EXTENDED PREFIX
         AGO   .IECA200                 CONTINUE                 Y02080
.***
.*       GET PREFIX=YES
.***
.IECA120 ANOP                                                    Y02080
         AIF   (T'&STM EQ 'O').IECA140  CHECK A=                 Y02080
         AIF   ('&STM(3)' EQ 'WTGPREFX' OR '&STM(3)' EQ 'DXXPREFX').IEC*
               A122                     CHECK FOR A=             Y02080
         AIF   ('&STM(3)'(1,8) NE 'IECREGSV').IECA140 BASE NOT   Y02080*
                                        IMPLIED BY SAVE          Y02080
.IECA122 ANOP                                                    Y02080
         LR    1,15                     GET PREFIX ADDRESS
         AGO   .IECA200                 CONTINUE                 Y02080
.IECA125 AIF   (T'&A EQ 'O').IECA917    NO ADDR OF DCBLIST       Y02080
         AIF   ('&A' EQ '(1)').IECA200  RIGHT REG                Y02080
         LR    1,&A(1)                  ADDRESS OF DCB PARAMETER LIST
         AGO   .IECA200                 CONTINUE                 Y02080
.***
.*       GET FIRST PREFIX
.***
.IECA135 ANOP                                                    Y02080
         SR    1,1                      NO PREVIOUS PREFIX
         AGO   .IECA200                 CONTINUE                 Y02080
.***
.*       FREE
.***
.IECA140 AIF   (T'&A EQ 'O').IECA920    NO ADDR FOR FREE OR GET HAS    *
                                        NO ADDRESSABILITY TO PREFIX
         AIF   ('&PREFX' EQ 'WTG').IECA160 A PTS TO THE WTG TABL Y02080
         AIF   ('&PREFX' EQ 'EOV').IECA170 A PTS TO THE WTG TABL Y02080
         AIF   ('&A'(1,1) EQ '(').IECA150 REG FORM               Y02080
         LA    1,&A                     ADDRESS OF WORK AREA
         AGO   .IECA200                 CONTINUE                 Y02080
.IECA150 AIF   ('&A' EQ '(1)' OR '&A' EQ '(R1)').IECA200  REG OK Y02080
         LR    1,&A(1)                  ADDRESS OF WORK AREA
         AGO   .IECA200                 CONTINUE                 Y02080
.***
.*       A = ADDRESS OF WTG TABLE
.***
.IECA160 AIF   ('&A'(1,1) EQ '(').IECA165 REG FORM               Y02080
         L     1,WTGPREFX-WTG+&A        ADDRESS OF BASE PREFIX
         AGO   .IECA180                 INCR PAST BASE           Y02080
.IECA165 ANOP                                                    Y02080
         L     1,WTGPREFX-WTG&A         ADDRESS OF BASE PREFIX
         AGO   .IECA180                 INCR PAST BASE           Y02080
.***
.*       A = ADDRESS OF EOV WORK AREA
.***
.IECA170 AIF   ('&A'(1,1) EQ '(').IECA175 REG FORM               Y02080
         L     1,DXXPREFX-FORCORE+&A    ADDRESS OF BASE PREFIX
         AGO   .IECA180                 INCR PAST BASE           Y02080
.IECA175 ANOP                                                    Y02080
         L     1,DXXPREFX-FORCORE&A     ADDRESS OF BASE PREFIX
.IECA180 ANOP                                                    Y02080
         LA    1,IECSTART-IECPREFX(,1)  INCREMENT PAST BASE PREFIX
.***                                                             Y02080
.*       LV = LENGTH OF WORK AREA                                Y02080
.***                                                             Y02080
.IECA200 AIF   ('&FUNC' EQ 'FREE' AND '&PREFX' EQ 'NO').IECA210  Y02080
         AIF   ('&FUNC' EQ 'GET').IECA210 GET MUST HAVE LV       Y02080
         AIF   (T'&LV EQ 'O').IECA300   OK NO LENGTH             Y02080
         MNOTE 4,'LV ONLY ON FREE PREFIX=NO'                     Y02080
         AGO   .IECA300                 CONTINUE                 Y02080
.IECA210 AIF   ('&PREFX' EQ 'WTG').IECA240  OPEN OR CLOSE WTG TABLE
         AIF   ('&PREFX' EQ 'EOV').IECA230  EOV WORK AREA        Y02080
         AIF   (T'&LV EQ 'O').IECA925   LV ON GET FREE NO        Y02080
         AIF   ('&LV'(1,1) EQ '(').IECA220 REG FORM              Y02080
         LA    0,&LV.(,0)               LENGTH OF WORK AREA
         AGO   .IECA300                 CONTINUE                 Y02080
.IECA220 AIF   ('&LV' EQ '(0)' OR '&LV' EQ '(R0)').IECA300 REG OKY02080
         LR    0,&LV(1)                 LENGTH OF WORK AREA
         AGO   .IECA300                 CONTINUE                 Y02080
.IECA230 ANOP                                                    Y02080
         LA    0,EOVSIZE(,0)            EOV WORK AREA SIZE
         AGO   .IECA300                 CONTINUE                 Y02080
.IECA240 ANOP                                                    Y02080
         SR    0,0                      LENGTH COMPUTED IN IFG019RA
.***                                                             Y02080
.*       SP = SUBPOOL OF WORK AREA                               Y02080
.***                                                             Y02080
.IECA300 AIF   ('&FUNC' EQ 'FREE' AND '&PREFX' EQ 'NO').IECA310  Y02080
         AIF   ('&FUNC' EQ 'GET').IECA310 CHECK GET              Y02080
         AIF   (T'&SP EQ 'O').IECA400   NO SP ON FREE            Y02080
         MNOTE 4,'SP ONLY ON FREE PREFIX=NO'                     Y02080
         AGO   .IECA400                 CONTINUE                 Y02080
.IECA310 AIF   ('&PREFX' EQ 'WTG' OR '&PREFX' EQ 'EOV').IECA400        *
                                        SP DEFAULT               Y02080
         AIF   (T'&SP EQ 'O').IECA330   DEFAULT SP               Y02080
         AIF   ('&SP'(1,1) EQ '(').IECA320 REG FORM              Y02080
         LA    2,&SP.(,0)               SUBPOOL
         AGO   .IECA400                 CONTINUE                 Y02080
.IECA320 AIF   ('&SP' EQ '(2)' OR '&SP' EQ '(R2)').IECA400 REG OKY02080
         LR    2,&SP(1)                 SUBPOOL
         AGO   .IECA400                 CONTINUE                 Y02080
.IECA330 ANOP                                                    Y02080
         LA    2,230(,0)                DEFAULT SUBPOOL 230
.***                                                             Y02080
.*       KEY = KEY OF WORK AREA                                  Y02080
.***                                                             Y02080
.IECA400 AIF   ('&FUNC' EQ 'FREE' AND '&PREFX' EQ 'NO').IECA410  Y02080
         AIF   ('&FUNC' EQ 'GET').IECA410 GET PROC               Y02080
         AIF   (T'&KEY EQ 'O').IECA500  OK NO KEY FOR FREE       Y02080
         MNOTE 4,'KEY ONLY ON FREE PREFIX=NO'                    Y02080
         AGO   .IECA500                 CONTINUE                 Y02080
.IECA410 AIF   ('&PREFX' EQ 'WTG' OR '&PREFX' EQ 'EOV').IECA500        *
                                        DEFAULT KEY              Y02080
         AIF   (T'&KEY EQ 'O').IECA440  DEFAULT KEY              Y02080
         AIF   ('&KEY' EQ 'USER').IECA430 USER ENTRY KEY         Y02080
         AIF   ('&KEY'(1,1) EQ '(').IECA420 REG FORM             Y02080
         LA    3,&KEY.(,0)              KEY OF AREA
         AGO   .IECA500                 CONTINUE                 Y02080
.IECA420 AIF   ('&KEY' EQ '(3)' OR '&KEY' EQ '(R3)').IECA500 R OKY02080
         LR    3,&KEY(1)                KEY OF AREA
         AGO   .IECA500                 CONTINUE                 Y02080
.IECA430 ANOP                           USER KEY                 Y02080
         SR    3,3                      CLEAR REGISTER
         IC    3,DXUKEY                 GET USER'S KEY
         SRL   3,4(0)                   PLACE IN LOW BYTE
         AGO   .IECA500                 CONTINUE                 Y02080
.IECA440 ANOP                           DEFAULT KEY              Y02080
         LA    3,5(,0)                  DEFAULT KEY 5
.***                                                             Y02080
.*       OPTIONS INDEX                                           Y02080
.***                                                             Y02080
.IECA500 AIF   ('&PREFX' EQ 'WTG').IECA540 CODE ALREADY SET      Y02080
&CODE    SETA  &CODE+2                  SET EOV FREEMAIN CODE    Y02080
         AIF   ('&PREFX' EQ 'EOV').IECA540                       Y02080
&CODE    SETA  &CODE+2                  SET FIRST FREEMAIN CODE  Y02080
         AIF   ('&PREFX' EQ 'FIRST').IECA540                     Y02080
         AIF   ('&PREFX' EQ 'NO' AND '&IDTTR' NE 'WLH').IECA510  Y02080
         AIF   ('&PREFX' NE 'NO' AND '&IDTTR' NE 'WLH').IECA515  Y02080
         AIF   ('&PREFX' NE 'NO' AND '&IDTTR' EQ 'WLH').IECA520  Y02080
         AIF   ('&PREFX' EQ 'NO' AND '&IDTTR' EQ 'WLH').IECA525  Y02080
.IECA510 SR    4,4                      NO PREFIX/NO LOCK
         AGO   .IECA550                 CONTINUE                 Y02080
.IECA515 LA    4,1(,0)                  PREFIX/NO LOCK
         AGO   .IECA550                 CONTINUE                 Y02080
.IECA520 LA    4,2(,0)                  PREFIX/LOCK HELD
         AGO   .IECA550                 CONTINUE                 Y02080
.IECA525 LA    4,3(,0)                  NO PREFIX/LOCK HELD
         AGO   .IECA550                 CONTINUE                 Y02080
.*
.IECA540 AIF   ('&FUNC' EQ 'FREE').IECA545 CHECK FOR FREEMAIN    Y02134
&CODE    SETA  0                        SET CODE TO ZERO         Y02134
         AIF   ('&PREFX' EQ 'WTG').IECA545 CHECK FOR GET WTG     Y02134
&CODE    SETA  1                        SET EOV/FIRST ENTRY CODE Y02134
.IECA545 LA    4,&CODE.(,0)             ENTRY INDICATOR
.***                                                             Y02080
.*       BRANCH ENTRY                                            Y02080
.***                                                             Y02080
.IECA550 ANOP                                                    Y02080
         L     5,CVTPTR(,0)             LOAD CVT ADDRESS
         L     5,CVTDMSR-CVT(,5)        LOAD ADDRESS OF IFG019RA
         AIF   ('&FUNC' EQ 'FREE').IECA590 FREE                  Y02080
         AIF   ('&PREFX' EQ 'WTG').IECA580 WTG ENTRY             Y02080
         AIF   ('&PREFX' EQ 'EOV').IECA580 EOV ENTRY             Y02080
         AIF   ('&PREFX' EQ 'FIRST').IECA560 FIRST ENTRY         Y02080
         BAL   14,28(,5)                LINK TO GETMAIN
         AGO   .IECA600                 CONTINUE                 Y02080
.IECA560 ANOP                                                    Y02080
         BAL   14,36(,5)                LINK TO GETMAIN FIRST
         AGO   .IECA600                 CONTINUE                 Y02080
.IECA580 ANOP                                                    Y02080
         BAL   14,32(,5)                LINK TO GETMAIN EOV/WTG
         AGO   .IECA600                 CONTINUE                 Y02080
.IECA590 AIF   ('&PREFX' EQ 'WTG').IECA595 WTG ENTRY             Y02080
         AIF   ('&PREFX' EQ 'EOV').IECA595 EOV ENTRY             Y02080
         AIF   ('&PREFX' EQ 'FIRST').IECA595 FIRST ENTRY         Y02080
         BAL   14,48(,5)                LINK TO FREEMAIN
         AGO   .IECA600                 CONTINUE                 Y02080
.IECA595 ANOP                                                    Y02080
         BAL   14,52(,5)                LINK TO FREEMAIN FIRST,WTG,EOV
.***                                                             Y02080
.*       ID = ID OF CONTROL BLOCK                                Y02080
.***                                                             Y02080
.IECA600 AIF   ('&FUNC' EQ 'FREE').IECA620                       Y02080
         AIF   ('&PREFX' EQ 'NO').IECA650 NO PREFIX - NO ID      Y02080
         AIF   ('&PREFX' EQ 'WTG' OR '&PREFX' EQ 'EOV').IECA650        *
                                        STD ID IN 19RA           Y02080
         AIF   (T'&ID EQ 'O').IECA610   NO ID                    Y02080
         DC    CL4'&ID'                 ID OF WORK AREA
         AGO   .IECA630                 CONTINUE                 Y02080
.IECA610 ANOP                                                    Y02080
         DC    CL4' '                   BLANK ID OF WORK AREA
         AGO   .IECA630                 CONTINUE                 Y02080
.IECA620 AIF   (T'&ID EQ 'O').IECA650   OK NO ID FOR FREE        Y02080
         MNOTE 4,'ID= INVALID FOR FREE'                          Y02080
         AGO   .IECA650                 CONTINUE                 Y02080
.IECA630 AIF   ('&PREFX' NE 'FIRST').IECA650                     Y02080
         BAL   14,40(,5)                INITIALIZE WORK AREA
.***                                                             Y02080
.*       STM = DO LM ON RETURN                                   Y02080
.***                                                             Y02080
.IECA650 AIF   (T'&STM EQ 'O').IECA700 NO STM                    Y02080
         LM    &STM(1),&STM(2),0(15)    RESTORE REGISTERS
         AIF   ('&FUNC' EQ 'INIT').IECA710 NO REG COMMENT        Y02080
.IECA700 AIF   ('&FUNC' EQ 'FREE').IECA705 REG COMMENT           Y02080
         AIF   ('&PREFX' EQ 'WTG' OR '&PREFX' EQ 'EOV').IECA710  Y02080
.IECA705 ANOP                                                    Y02080
*  IECRES GET/FREE PRESERVES THE CONTENTS OF REGISTERS 8-10.
.IECA710 MEXIT                                                   Y02080
.***
.*       GET/FREE ERRORS                                         Y02080
.***                                                             Y02080
.IECA900 MNOTE 8,'CODE PREFIX OR EXTPR WITH GET OR FREE'         Y02080
         MEXIT                                                   Y02080
.IECA905 MNOTE 8,'STM ON LAST FREE INVALID'                      Y02080
         MEXIT                                                   Y02080
.IECA910 MNOTE 8,'STM MUST HAVE 3 PARAMETERS'                    Y02080
         MEXIT                                                   Y02080
.IECA913 MNOTE 8,'STM ERROR - GET RETURNS ADDR OF AREA IN R1'    Y02080
         MEXIT                                                   Y02080
.IECA917 MNOTE 8,'A= ADDR OF DCB PARAM LIST'                     Y02080
         MEXIT
.IECA920 MNOTE 8,'A= ADDR TO FREE OR GET PREFIX ADDR MISSING'    Y02080
         MEXIT                                                   Y02080
.IECA925 MNOTE 8,'LV= LENGTH MISSING'                            Y02080
         MEXIT                                                   Y02080
.IECA930 MNOTE 8,'PREFIX=&PREFIX INCOMPATIBLE WITH GET REQUEST'  Y02080
         MEXIT                                                   Y02080
.**********************************************************************
.*       FUNCTION = LOAD
.**********************************************************************
.LOAD    ANOP                                                    Y02080
         AIF   ('&NAME' EQ '').LOAD001  IF NAME MISSING          Y02080
&NAME    DS    0H                       LABEL AND ALIGN
.LOAD001 AIF   ('&BRANCH' EQ 'QUEUED').LOAD008 BYPASS REG SAVE   Y02080
         AIF   ('&PREFIX' EQ '').LOAD004 NO PREFIX PARAMETER     Y02080
         AIF   ('&PREFIX' EQ 'NO').LOAD004 NO PREFIX PARAMETER   Y02080
         AIF   ('&PREFIX'(1,1) EQ '(').LOAD003 REG CONTAINS PTR  Y02080
         L     15,&PREFIX               GET POINTER TO A PREFIX
.LOAD002 STM   0,14,IECREGSV-IECPREFX(15) SAVE REGISTERS
         AGO   .LOAD008                 GO CHECK MODID           Y02080
.LOAD003 AIF   ('&PREFIX' EQ '(15)').LOAD002 REG 15 ALREADY SET  Y02080
         AIF   ('&PREFIX' EQ '(15)').LOAD002                     Y02080
         LR    15,&PREFIX(1)            GET POINTER TO A PREFIX
         AGO   .LOAD002                                          Y02080
.LOAD004 AIF   ('&EXTPR' EQ '').LOAD007 NEED PREFIX PARAMETER    Y02080
         AIF   ('&EXTPR'(1,1) EQ '(').LOAD006 REG CONTAINS PTR   Y02080
         L     15,&EXTPR                GET PTR TO EXTENDED PREFIX
.LOAD005 STM   0,14,IECREGSV-IECEXTPR(15) SAVE REGISTERS
         LA    1,IECEXTPR-IECPREFX(0,0) BACK UP REGISTER 15 TO
         SR    15,1                     POINT TO START OF PREFIX
         AGO   .LOAD008                                          Y02080
.LOAD006 AIF   ('&EXTPR' EQ '(15)').LOAD005 REG 15 ALREADY SET   Y02080
         LR    15,&EXTPR(1)             GET PTR TO EXTENDED PREFIX
         AGO   .LOAD005                                          Y02080
.LOAD007 MNOTE 8,'PREFIX OR EXTPR PARAMETER REQUIRED FOR LOAD UNLESS BR*
               ANCH=QUEUED'                                      Y02080
         AGO   .LOAD099                 GENERATE INVALID OP CODE Y02080
.*                                                               Y02080
.LOAD008 AIF   ('&PREFIX' NE 'DXXPREFX').LOAD08A                 Y02080
         LA    6,DXXMODNM               LOAD PTR TO WTG MODULE NAME
.LOAD08A AIF   ('&MODID' EQ '').LOAD010 IF MODID NOT CODED       Y02080
         AIF   ('&BRANCH' EQ 'QUEUED').LOAD11A                   Y02080
         AIF   ('&MODID'(1,1) EQ '(').LOAD009 IF PTR IN REGISTER Y02080
.*                                                               Y02080
         MVC   WTGMODNM+6(2),&MODID     MOVE ID TO LIST
         MVC   WTGMODEP+1(3),&MODID+2   MOVE EPA TO LIST
         AGO   .LOAD012                                          Y02080
.*                                                               Y02080
.LOAD009 MVC   WTGMODNM+6(2),0&MODID    MOVE ID TO LIST
         MVC   WTGMODEP+1(3),2&MODID    MOVE EPA TO LIST
         AGO   .LOAD012                                          Y02080
.*                                                               Y02080
.LOAD010 AIF   ('&MODNM' EQ '').LOAD012 IF MODNM NOT CODED       Y02080
         AIF   ('&BRANCH' EQ 'QUEUED').LOAD11C                   Y02080
         AIF   ('&MODNM'(1,1) EQ '(').LOAD011 IF PTR IN REGISTER Y02080
.*                                                               Y02080
         MVC   WTGMODNM(12),&MODNM      MOVE MODULE NAME & EPA
         AGO   .LOAD012                                          Y02080
.*                                                               Y02080
.LOAD011 MVC   WTGMODNM(12),0&MODNM     MOVE MODULE NAME & EPA
         AGO   .LOAD012                                          Y02080
.*                                                               Y02080
.LOAD11A AIF   ('&MODID'(1,1) EQ '(').LOAD11B                    Y02080
         MVC   0(5,RWTGC),&MODID        MOVE ID & EPA TO WTG TABLE
         AGO   .LOAD012                                          Y02080
.*                                                               Y02080
.LOAD11B MVC   0(5,RWTGC),0&MODID       MOVE ID & EPA TO WTG TABLE
         AGO   .LOAD012                                          Y02080
.*                                                               Y02080
.LOAD11C AIF   ('&MODNM'(1,1) EQ '(').LOAD11D IF PTR IN REGISTER Y02080
         MVC   0(2,RWTGC),&MODNM+6      MOVE ID TO WTG TABLE
         MVC   2(3,RWTGC),&MODNM+9      MOVE V-CON TO WTG TABLE
         AGO   .LOAD012                                          Y02080
.*                                                               Y02080
.LOAD11D MVC   0(2,RWTGC),6&MODNM       MOVE ID TO WTG TABLE
         MVC   2(3,RWTGC),9&MODNM       MOVE V-CON TO WTG TABLE
.*                                                               Y02080
.LOAD012 AIF   ('&BRANCH' EQ 'QUEUED').LOAD015 REG 5 & 6 LOADED  Y02080
         AIF   ('&PREFIX' EQ 'DXXPREFX').LOAD014                 Y02080
         LA    6,WTGMODNM               LOAD PTR TO WTG MODULE NAME
.LOAD014 L     5,CVTPTR(,0)             LOAD ADDRESS OF CVT
         L     5,CVTDMSR-CVT(,5)        LOAD ADDRESS OF IFG019RA
         AIF   ('&BRANCH' EQ 'NO').LOAD021 RETURN TO CALLER      Y02080
.*                                                               Y02080
.LOAD015 AIF   ('&BRCODE' EQ '').LOAD017 BRANCH OFFSET NOT CODED Y02080
         AIF   ('&BRANCH' EQ 'NO').LOAD017 REG 14 USED TO RETURN Y02080
         AIF   ('&BRCODE'(1,1) EQ '(').LOAD016 BRNCH CODE IN REG Y02080
         LA    14,&BRCODE               LOAD BRANCH TABLE OFFSET
         AGO   .LOAD017                                          Y02080
.LOAD016 AIF   ('&BRCODE' EQ '(14)').LOAD017 REG 14 ALREADY SET  Y02080
         AIF   ('&BRCODE' EQ '(14)').LOAD017                     Y02080
         LR    14,&BRCODE(1)            LOAD BRANCH TABLE OFFSET
.*                                                               Y02080
.LOAD017 AIF   ('&BRANCH' EQ 'QUEUED').LOAD019 IF QUEUED BRANCH  Y02080
         AIF   ('&BRANCH' EQ 'DIRECT').LOAD020 LOAD AND BRANCH   Y02080
         AIF   ('&BRANCH' EQ 'NO').LOAD021 LOAD AND RETURN       Y02080
         AIF   ('&BRANCH' EQ '').LOAD018 BRANCH PARM OMMITTED    Y02080
         MNOTE 8,'BRANCH PARAMETER INVALID'                      Y02080
         AGO   .LOAD099                 GENERATE INVALID OP CODE Y02080
.LOAD018 MNOTE 8,'BRANCH PARAMETER REQUIRED FOR LOAD'            Y02080
         AGO   .LOAD099                 GENERATE INVALID OP CODE Y02080
.LOAD019 B     RESXCTL(,RES)            SELECTIVE LOAD AND BRANCH
         MEXIT                                                   Y02080
.LOAD020 B     20(,5)                   LOAD AND BRANCH DIRECT
         MEXIT                                                   Y02080
.LOAD021 BAL   14,24(5)                 LOAD AND RETURN
         LM    0,14,IECREGSV-IECPREFX(15) RESTORE REGISTERS
         MEXIT                                                   Y02080
.LOAD099 DC    H'0'                     HALT EXECUTION           Y02080
         MEXIT                                                   Y02080
.**********************************************************************
.*       FUNCTION = BRANCH
.**********************************************************************
.BRANCH  ANOP                                                    Y02080
         AIF   ('&NAME' EQ '').BRANCH1  IF NAME OMITTED          Y02080
&NAME    DS    0H                       LABEL AND ALIGN
.BRANCH1 AIF   ('&EPA' EQ '').BRANCH2   NO EPA PARAMETER         Y02080
         AIF   ('&EPA'(1,1) EQ '(').BRANCH3 EPA IN A REGISTER    Y02080
         L     15,&EPA                  LOAD CSECT EPA
         AIF   ('&REUSE' EQ 'YES').BRANCH2 DO NOT CLEAR EPA      Y02080
         XC    &EPA,&EPA                ZERO EPA FOR REUSE
.BRANCH2 BR    15                       TRANSFER TO NEXT CSECT
         MEXIT                                                   Y02080
.BRANCH3 AIF   ('&EPA' EQ '(15)').BRANCH2 REG 15 ALREADY SET     Y02080
         LR    15,&EPA(1)               LOAD CSECT EPA
         AGO   .BRANCH2                                          Y02080
.**********************************************************************
.*       FUNCTION = LOCJFCB
.**********************************************************************
.IECB000 ANOP                           LOCATE JFCB              Y02134
&NAME    ICM   &IDTTR(1),B'0111',0&IDTTR LOAD JFCB PREFIX ADDRESS
         LA    &IDTTR(1),16&IDTTR       POINT TO JFCB
         MEXIT                                                   Y02134
.**********************************************************************
.*       FUNCTION = WRJFCB
.**********************************************************************
.IECC000 ANOP                           WRITE JFCB               Y02134
&NAME    L     15,WTGPREFX              LOAD POINTER TO PREFIX
         STM   0,15,IECREGSV-IECPREFX(15) SAVE REGISTERS
         LR    0,&BCODE(1)              LOAD POINTER TO JFCB
         LR    1,&IDTTR(1)              LOAD POINTER TO JFCB PREFIX
         L     5,CVTPTR(,0)             LOAD CVT ADDRESS
         L     5,CVTDMSR-CVT(,5)        LOAD ADDRESS OF IFG019RA
         BAL   14,12(,5)                LINK TO QMNGRIO ROUTINE
         LM    0,15,IECREGSV-IECPREFX(15) RESTORE REGISTERS
         MEXIT                                                   Y02134
.**********************************************************************
.*       FUNCTION = INIT
.**********************************************************************
.INIT100 ANOP                                                    Y02134
         AIF   (T'&DEB EQ 'O' AND T'&DCBCOPY EQ 'O').INIT950     Y02134
         AIF   (T'&DEB NE 'O').INIT200  WAS &DEB OMITTED?        Y02134
         SR    0,0                      DO NOT INIT WORK AREA FIELDS
         AIF   (T'&PREFIX EQ 'O').INIT150  NO PREFIX PARAMETER   YM3810
         L     6,&PREFIX                R6 POINTS TO BASE PREFIX
         AGO   .INIT500                                          Y02134
.INIT150 ANOP                                                    YM3810
         AIF   (T'&STM EQ 'O').INIT170  STM OMITTED              YM3810
         AIF   ('&STM(3)' NE 'DXXPREFX' AND '&STM(3)' NE 'WTGPREFX').IN*
               IT170                    CHECK FOR STD SAVE AREA  YM3810
         L     6,&STM(3)                R6 POINTS TO BASE PREFIX
         AGO   .INIT500                                          YM3810
.INIT170 ANOP                           DEFAULT TO WTGPREFX      YM3810
         L     6,WTGPREFX               R6 POINTS TO BASE PREFIX
         AGO   .INIT500                                          YM3810
.INIT200 ANOP                                                    Y02134
         AIF   (T'&PREFIX EQ 'O').INIT250                        Y02134
         L     6,&PREFIX                R6 POINTS TO BASE PREFIX
         AGO   .INIT260                 CONTINUE                 Y02134
.INIT250 ANOP                                                    Y02134
         L     6,WTGPREFX               R6 POINTS TO BASE PREFIX
.INIT260 ANOP                                                    Y02134
         AIF   ('&DEB' NE 'YES').INIT300                         Y02134
         LA    0,4(,0)                  INDICATE DEB PRESENT
         AGO   .INIT500                                          Y02134
.INIT300 ANOP                                                    Y02134
         AIF   ('&DEB' NE 'NO').INIT400 BRANCH IF INVALID &DEB   Y02134
         LA    0,8(,0)                  INDICATE DEB ABSENT
         AGO   .INIT500                                          Y02134
.INIT400 ANOP                           INVALID &DEB VALUE       Y02134
         IHBERMAC 1001,DEB,&DEB                                  Y02134
.INIT500 ANOP                                                    Y02134
         AIF   (T'&DCBCOPY NE 'O').INIT640 BRANCH IF NOT OMITTED Y02134
         SR    1,1                      DCB NOT TO BE COPIED
         AGO   .INIT900                                          Y02134
.INIT640 ANOP                                                    Y02134
         AIF   ('&DCBCOPY' NE 'TOWKAR').INIT700                  Y02134
         LA    1,4(,0)                  COPY USER DCB TO WORK AREA DCB
         AGO   .INIT900                                          Y02134
.INIT700 ANOP                                                    Y02134
         AIF   ('&DCBCOPY' NE 'FRWKAR').INIT800                  Y02134
         AIF   (T'&DEB NE 'O').INIT960  IMPOSSIBLE               Y02134
         LA    1,8(,0)                  COPY WORK AREA DCB TO USER DCB
         AGO   .INIT900                                          Y02134
.INIT800 ANOP                                                    Y02134
         IHBERMAC 1001,DCBCOPY,&DCBCOPY INVALID DCBCOPY VALUE    Y02134
.INIT900 ANOP                                                    Y02134
         L     5,CVTPTR(,0)             LOAD ADDRESS OF CVT
         L     5,CVTDMSR-CVT(,5)        LOAD ADDRESS OF IFG019RA
         BAL   14,44(,5)                LINK TO IFG019RA
         AGO   .IECA650                 GO TO RELOAD REGISTERS   Y02134
.INIT950 MNOTE 8,'DEB= OR DCBCOPY= MUST BE CODED'                Y02134
         AGO   .IECA650                 DO LM                    Y02134
.INIT960 MNOTE 8,'INITIAL CALL ALWAYS TOWKAR'                    Y02134
         AGO   .IECA650                 DO LM                    Y02134
.**********************************************************************
.*       FUNCTION = EXIT
.**********************************************************************
.IECD000 ANOP                                                    Y02080
&NAME    L     14,CVTPTR(0,0)           LOAD CVT ADDRESS
         L     14,CVTEXPRO-CVT(0,14)    LOAD EXIT PROLOGUE ADDRESS
*        MODESET EXTKEY=SUPR            GO TO SUPERVISOR KEY
         MODESET EXTKEY=SUPR            GO TO SUPERVISOR KEY
*        RETURN ,                       RETURN TO CALLER
         RETURN ,                       RETURN TO CALLER
         MEXIT
.**********************************************************************
.*       FUNCTION = UEXIT
.**********************************************************************
.IECE000 ANOP                                                    Y02082
         AIF   ('&NAME' EQ '').IECE010  BRANCH IF NAME OMITTED   Y02082
&NAME    DS    0H
.IECE010 ANOP                                                    Y02082
         AIF   (T'&REG0 EQ 'O').IECE020 BRANCH IF &REG 0 OMITTED Y02082
         AIF   ('&REG0'(1,1) EQ '(').IECE015 BR IF REG FORMAT    Y02082
         L     0,&REG0                  REG 0 PARAMETER TO EXIT
         AGO   .IECE020                 TEST &REG1 PARM          Y02082
.IECE015 ANOP                                                    Y02082
         LR    0,&REG0(1)               REG 0 PARAMETER TO EXIT
.IECE020 ANOP                                                    Y02082
         AIF   (T'&REG1 EQ 'O').IECE030 BRANCH IF &REG 1 OMITTED Y02082
         AIF   ('&REG1'(1,1) EQ '(').IECE025 BR IF REG FORMAT    Y02082
         L     1,&REG1                  REG 1 PARAMETER TO EXIT
         AGO   .IECE030                 TEST &EXITAD PARM        Y02082
.IECE025 ANOP                                                    Y02082
         LR    1,&REG1(1)               REG 1 PARAMETER TO EXIT
.IECE030 ANOP                                                    Y02082
         AIF   (T'&EXITAD EQ 'O').IECE040 BRANCH IF &EXITAD OMIT Y02082
         AIF   ('&EXITAD'(1,1) EQ '(').IECE035 BR IF REG FORMAT  Y02082
         L     15,&EXITAD               EXIT ENTRY POINT
         AGO   .IECE040                 SAVE REGISTERS           Y02082
.IECE035 ANOP                                                    Y02082
         LR    15,&EXITAD(1)            EXIT ENTRY POINT
.IECE040 ANOP                                                    Y02082
         AIF   (T'&STM EQ 'O').IECE060  BRANCH IF &STM OMITTED   Y02082
         AIF   ('&STM(3)' EQ 'DXXPREFX' OR                             *
               '&STM(3)' EQ 'WTGPREFX').IECE050 BR IF REGS SAVED Y02082
.*                                      IN WORKAREA PREFIX       Y02082
         STM   &STM(1),&STM(2),&STM(3)  SAVE REGISTERS
         LA    2,&STM(3)                SAVE ADDRESS OF SAVE AREA
         AGO   .IECE060                                          Y02082
.IECE050 ANOP                                                    Y02082
         L     14,&STM(3)               GET ADDRESS OF PREFIX
         STM   &STM(1),&STM(2),IECREGSV-IECPREFX(14) SAVE REGISTERS
         LA    2,IECREGSV-IECPREFX(,14) SAVE ADDRESS OF SAVE AREA
.IECE060 ANOP                                                    Y02082
         L     5,CVTPTR(,0)             LOAD CVT ADDRESS
         L     5,CVTDMSR-CVT(,5)        LOAD ADDRESS OF IFG019RA
         BAL   14,56(,5)                LINK TO UEXIT ROUTINE
         AIF   (T'&STM EQ 'O').IECA710  EXIT IF &STM OMITTED     Y02082
         LM    &STM(1),&STM(2),0(2)     RESTORE REGISTERS
.**********************************************************************
         MEND
