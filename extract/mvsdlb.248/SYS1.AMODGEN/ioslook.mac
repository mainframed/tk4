* %/*
         MACRO
&NAME    IOSLOOK &UCB=(7),&DEV=
         LCLC  &S                       VARIABLE FOR BRANCH LABEL
         GBLB  &LOOKFTS                 FIRST TIME SWITCH
.*
.*       CSECT AUTHORIZATION
.*
.*       AIF   (('&SYSECT' EQ 'IQAALL00') OR
.*             ('&SYSECT' EQ 'IQAERR00')).UCBAUTH
.*       AIF   ('&SYSECT' EQ 'IGC0005I').UCBAUTH
.*       AIF   ('&SYSECT' EQ 'IGC0905I').UCBAUTH
.*       AIF   ('&SYSECT' EQ 'IEEVDEV').UCBAUTH
.*       AIF   ('&SYSECT' EQ 'IEEVPTH').UCBAUTH
.*       AIF   ('&SYSECT' EQ 'IEAVNIP0').UCBAUTH
.*       AIF   ('&SYSECT' EQ 'IEAVNIPM').UCBAUTH
.*       AIF   ('&SYSECT' EQ 'IEEMPDM').UCBAUTH
.*       AIF   ('&SYSECT' EQ 'IQASTK00').UCBAUTH
.*       AIF   ('&SYSECT' EQ 'ISTINMAV').UCBAUTH
.*       AIF   ('&SYSECT' EQ 'IEE3603D').UCBAUTH
.*       AIF   ('&SYSECT' EQ 'IGC0012F').UCBAUTH
.*       AIF   ('&SYSECT' EQ 'ICBVMT00').UCBAUTH
.*
         AIF   ('&LOOKFTS' EQ '1').LOOK010
&LOOKFTS SETB  1
*****************************************************************
*                                                               *
*             IOSLOOK MACRO                                     *
*                                                               *
* OS/VS2                                                        *
*                                                               *
* FUNCTION:                                                     *
*    LOCATES THE UNIT CONTROL BLOCK (UCB) ASSOCIATED            *
*    WITH A DEVICE ADDRESS.                                     *
*                                                               *
* MACRO CALL:                                                   *
.*   ASSEMBLER:                                                 *
*       LABEL  IOSLOOK DEV=(REG),UCB=(REG)                      *
*                                                               *
.*    PLS:                                                      *
.*      ?LABEL: IOSLOOK  DEV(VARIABLE) UCB(VARIABLE)            *
.*                                                              *
* INPUT:                                                        *
*    USERS OF THIS MACRO MUST BE IN SUPERVISOR STATE            *
*                                                               *
*    REGISTER 13 MUST CONTAIN THE ADDRESS OF A 16 WORD SAVEAREA.*
*         NOTE: THIS IS NOT A STANDARD SAVEAREA, REGISTERS 0-15 *
*         WILL BE STORED AT THE ADDRESS PASSED IN REGISTER 13.  *
*                                                               *
*    LABEL - OPTIONAL LABEL.                                    *
*                                                               *
.*   ASSEMBLER:                                                 *
*    DEV=  MAY SPECIFY A GPR (SYMBOLIC OR ABSOLUTE) WHICH       *
*      WILL CONTAIN THE HEXIDECIMAL DEVICE ADDRESS; RIGHT       *
*      JUSTIFIED.  IF THIS PARAMETER IS OMITTED, REGISTER 6 IS  *
*      ASSUMED.                                                 *
*                                                               *
*    UCB=  MAY SPECIFY A GPR (SYMBOLIC OR ABSOLUTE) IN THE      *
*      RANGE OF 0 - 12, WHICH IS TO CONTAIN THE ADDRESS OF      *
*      UCB COMMON SEGMENT UPON RETURN TO THE CALLER.            *
*      IF THIS PARAMETER IS OMITTED, REGISTER 7 IS ASSUMED.     *
*                                                               *
.*   PLS:                                                       *
.*     DEV  - MAY SPECIFY A VARIABLE WHICH WILL CONTAIN THE     *
.*     HEXIDECIMAL DEVICE ADDRESS; RIGHT JUSTIFIED.  IF THIS    *
.*     PARAMETER IS OMITTED, REGISTER 6 IS ASSUMED.             *
.*                                                              *
.*     UCB  - MAY SPECIFY A VARIABLE WHICH IS TO CONTAIN THE    *
.*     THE ADDRESS OF THE UCB COMMON SEGMENT UPON RETURN TO     *
.*     THE CALLER. IF THIS PARAMETER IS OMITTED, REGISTER 1     *
.*     IS ASSUMED. REGISTER 15 SHOULD NOT BE USED.              *
.*                                                              *
* OUTPUT:                                                       *
*                                                               *
*    REGISTER 15 WILL CONTAIN ONE OF THE FOLLOWING RETURN CODES:*
*         00=  UCB ADDRESS HAS BEEN FOUND                       *
*         04=  DEVICE ADDRESS WAS INVALID OR NO UCB EXISTS      *
*                                                               *
*    UCB=  CONTAINS THE ADDRESS OF THE UCB.                     *
*                                                               *
.*   PLS - REGISTER 1 IS NOT RESTORED.                          *
.*                                                              *
* ATTRIBUTES:                                                   *
*    THIS FUNCTION IS EXPANDED AS RE-ENTRANT CODE.              *
*                                                               *
* OTHER:                                                        *
*                                                               *
*    THE SAME REGISTER ASSIGNMENT CAN BE USED  FOR              *
*    UCB= AND DEV=                                              *
*                                                               *
*    THE EXPANSION OF THIS FUNCTION IS DEPENDENT ON THE         *
*    SPECIFICATION OF THE FOLLOWING MAPPING MACROS              *
*         CVT   DSECT=YES                                       *
*         IECDIOCM                                              *
.*        IHAPSA (NECESSARY ONLY IN PLS)                        *
.*   THE MACRO ?EPILOG MUST ALSO BE INCLUDED FOR PLS.           *
*                                                               *
*    THE DEVICE ADDRESS IN THE UCB RETURNED AS OUTPUT FROM THIS *
*    SERVICE MAY CHANGE AS A RESULT OF A DDR SWAP. THE CALLER   *
*    SHOULD ENSURE THAT A SWAP HAS NOT TAKEN PLACE BETWEEN      *
*    ISSUING THIS MACRO AND THE SUBSEQUENT USE OF THE UCB       *
*    ADDRESS.                                                   *
*                                                               *
*    CHANGE ACTIVITY -                                          *
*  A-000000-999999                                             @ZA41412
*****************************************************************
         SPACE 2
IECIUPRM EQU   1                   PARM REG
IECIUDEV EQU   6                   DEVICE ADDRESS
IECIUSAV EQU   13                  SAVE AREA PTR
IECIURTN EQU   14                  RETURN ADDRESS
IECIUR15 EQU   15                  BRANCH ADDR AND RETURN CODE
.LOOK010 ANOP
&S       SETC  '&SYSNDX'(2,3)                 SET LAST 3 DIGITS
         SPACE 2
&NAME    STM   0,15,0(IECIUSAV)               SAVE REGS
         AIF   ('&DEV' EQ '' OR '&DEV' EQ '(6)').LOOK020 DEV IN R6
         LR    IECIUDEV,&DEV(1)               GET DEVICE ADDR
*                                             *FROM CALLER
.LOOK020 ANOP
         L     IECIUR15,CVTPTR                GET CVTPTR
         L     IECIUR15,CVTIXAVL-CVTMAP(0,IECIUR15) GET IOCM PTR
         L     IECIUR15,IOCGENA-IOCOM(0,IECIUR15) GET IECVGENA PTR
         BAL   IECIURTN,12(0,IECIUR15)         CALL IECVGENA
         SPACE
         ST    IECIUPRM,&UCB.*4(0,IECIUSAV)   SET UCB ADDR
*                                             IN SAVEAREA REGISTER
         SPACE
IECIU&S  LM    0,14,0(IECIUSAV)               RESTORE REGS
*                                  *REG 15 CONTAINS RETURN CODE
*                                   PASSED BY GENA
         MEND
*        */
*IOSLOOK:
*   MACRO
*   KEYS(DEV,UCB);
*   /*    EXTERNAL VARIABLES                                         */
*   DCL  EHAREGS    CHAR EXT;           /* REGS TO BE DCLD BY EPILOG */
*   /*    INTERNAL VARIABLES                                         */
*   DCL  INDENT     FIXED;              /* INDENT TWO COLUMNS        */
*   DCL  IDENT      CHAR;               /* MACRO STATEMENT PARAMETERS*/
*   DCL  IRFY1      CHAR;               /* USED TO RESPECIFY REG1 IF
*                                          UCB PARAMETER CODED       */
*   /*    SET INITIAL VALUES                                         */
*   INDENT=MACCOL+2;
*   IDENT=' ?'××MACLABEL××MACNAME××MACLIST××' '××MACKEYS××' ';
*   IF UCB(1)^='' THEN                   /* UCB PARAM CODED?         */
*      DO;                               /* YES                      */
*        IRFY1=',GPR01P';                /* SET UP TO RFY REG1       */
*        IF INDEX(EHAREGS,'01P')=0 THEN  /* ADD REG1 TO EHAREGS      */
*           EHAREGS=EHAREGS××'01P';
*      END;
*   /* CHECK TO SEE IF REGS ALREADY DCLD. IF NOT, ADD TO EHAREGS     */
*   IF INDEX(EHAREGS,'00P')=0 THEN
*      EHAREGS=EHAREGS××'00P';
*   IF INDEX(EHAREGS,'02P')=0 THEN
*      EHAREGS=EHAREGS××'02P';
*   IF INDEX(EHAREGS,'06P')=0 THEN
*      EHAREGS=EHAREGS××'06P';
*   IF INDEX(EHAREGS,'13P')=0 THEN
*      EHAREGS=EHAREGS××'13P';
*   IF INDEX(EHAREGS,'14P')=0 THEN
*      EHAREGS=EHAREGS××'14P';
*   IF INDEX(EHAREGS,'15P')=0 THEN
*      EHAREGS=EHAREGS××'15P';
*   IF MACLABEL^='' THEN
*      ANS(MACLABEL)     COL(MACLMAR);       /* GENERATE MACRO LABEL */
*   ANS('DO; '××COMMENT(IDENT))        COL(MACCOL);  /* BEGIN MACRO
*                                      AND LIST MACRO PARAMETERS    */
*   ANS(COMMENT('        IOSLOOK MACRO SYNTAX:      '))
*         COL(2);
*   ANS(COMMENT('?LABEL: IOSLOOK DEV(VARIABLE) UCB(VARIABLE)'))
*         COL(2);
*   ANS(COMMENT('     DEV - IF THIS PARAMETER IS OMITTED, REGISTER 6 IS
*ASSUMED')) COL(2);
*   ANS(COMMENT('     UCB - IF THIS PARAMETER IS OMITTED, REGISTER 1 IS
*ASSUMED')) COL(2);
*   ANS(COMMENT('NOTE: REGISTER 13 MUST POINT TO A 16 WORD SAVEAREA.'))
*        COL(2);
*   ANS(COMMENT('     THIS IS A NON-STANDARD SAVEAREA,  REGISTERS 0-15
*WILL ')) COL(2);
*   ANS(COMMENT('     BE STORED AT THE ADDRESS PASSED IN REGISTER 13.')
*      ) COL(2);
*   ANS(COMMENT('     ALSO, REGISTER 1 IS NOT RESTORED.')) COL(2);
*   ANS('RFY(GPR00P'××IRFY1××',GPR06P,GPR13P,GPR14P,GPR15P) RSTD; ')
*         COL(INDENT);
*   ANS('STM(GPR00P,GPR15P,GPR13P->I256C); '××
*         COMMENT('SAVE REGISTERS'))              COL(INDENT);
*   IF DEV(1)^='' THEN
*      ANS('GPR06P='××DEV(1)××'; '××
*            COMMENT('REG6 = DEVICE ADDRESS'))    COL(INDENT);
*   ANS('GPR15P=FLCCVT->CVTIXAVL->IOCGENA; '××
*         COMMENT('GET IECVGENA ENTRY POINT'))    COL(INDENT);
*   ANS('GEN (BAL   GPR14P,12(0,GPR15P)); '××
*       COMMENT('BRANCH TO IOSLOOK ENTRY POINT OF GENA'))
*                                                 COL(INDENT);
*   ANS('LM(GPR02P,GPR14P,(GPR13P+8)->I256C); '××
*         COMMENT('RESTORE REGS 2-14. REGISTER 15 CONTAINS RETURN CODE
* PASSED BY GENA. NOTE: REGISTER 1 NOT RESTORED')) COL(INDENT);
*   ANS('GPR00P=GPR13P->I031F; '××
*         COMMENT('RESTORE REG0 FROM SAVEAREA'))  COL(INDENT);
*   IF UCB(1)^='' THEN
*      DO;
*         ANS(UCB(1)××'=GPR01P; '××
*         COMMENT('PUT UCB ADDRESS IN UCB VARIABLE'))
*                                                 COL(INDENT+2);
*      END;
*   ANS('RFY(GPR00P'××IRFY1××',GPR06P,GPR13P,GPR14P,GPR15P) UNRSTD; ')
*         COL(INDENT);
*   ANS('END; '××COMMENT(IDENT))   COL(MACCOL);   /* END MACRO       */
*%END IOSLOOK;
