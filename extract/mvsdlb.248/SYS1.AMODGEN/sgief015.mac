         MACRO
         SGIEF015  &TYP=,&N=,&G=,&R=NO
.*A000000-999999                                                 Y02670
         COPY  SGIEF020
         GBLA  &GG
         GBLA  &NSAV
         LCLA  &J
         LCLB  &W
         LCLA  &I
.**********************************************************************
.*       EDTTAB  SUPPORT  MACRO
.*
.*  (THIS MACRO DOES NO GENERATION , MERELY STORES GLOBAL DATA)
.*
.*  PROCESSES SPECIAL NAME/GROUP ASSOCIATIONS.  (MULTI-GENERIC TYPE
.*  ELIGIBILITIES,GENERATED ESOTERIC NAMES,ETC.).  GENERATES ALT
.*  AND MLT VARIABLES, WHICH BECOME FLAG SETTINGS IN EDTTAB.
.*
.*  THE 'G' PARAMETER SPECIFIES A GENERIC TYPE CODE FOR A GENERIC ALL
.*  OF WHOSE GROUPS ARE TO BE ASSOCIATED WITH THE NAME IDENTIFIED BY
.*  THE 'N' PARAMETER.  IF 'TYP=L',THE N PARAMETER IS IN CHARACTER
.*  FORM.  IN ALL OTHER CASES N IS THE CODE FOR THE NAME.
.*
.*  FOR ALL BUT TYP=L:
.*       GENERIC G IS LOOKED UP IN GGXREF.  SGIEF018 CALL IS
.*       GENERATED FOR EACH OCCURRENCE PROVIDING PARAMETERS
.*       TYP=TYP,GROUPID,N.
.*  FOR TYP=L:
.*       THE NAME SPECIFIED BY N IS LOOKED UP IN 'ENAME'.  IF ALREADY
.*.*       PRESENT AND R=YES, INSTALLATION HAS DEFINED AN IBM RESERVED
.*       NAME, THEREFORE THE EXISTING ASSOCIATIONS OF THE NAME ARE
.*       EXPUNGED.  IF ALREADY PRESENT AND R=NO,EXIT IS TAKEN BECAUSE
.*       IBM SPECIFICATION IS TO BE OVERRIDDEN BY CUSTOMER DEFN.  IF
.*       NAME IS NOT PRESENT,AN ENTRY IS CREATED FOR IT.  THE 'ENAME'
.*       INDEX OF EACH NAME PASSING THE TESTS IS STORED IN 'NSAV'.
.*       SUBSEQUENT CONSECUTIVE CALLS SPECIFYING THE SAME NAME ARE
.*       MERELY PROCESSED FOR ASSOCIATIONS, NOT TESTED.  FOR EACH
.*  TYP=L PASSING THE TESTS, SGIEF015 CALL IS GENERATED WITH
.*  TYP=E,N=NSAV,G=G.     (RECURSIVE CALL)
.*
.*  IN ADDITION TO ABOVE, IF TYP=GG,MLT FLAG IS SET FOR THE NAME
.*  (OR) IF TYP=X, MLT AND ALT FLAGS ARE SET FOR THE NAME IF AN
.*  SGIEF018 CALL WAS GENERATED.
.**********************************************************************
         AIF   ('&TYP' EQ 'L').L1
&I       SETA  0
.M1      ANOP
&I       SETA  &I+1
 AIF     (&GGXREF(&I) EQ 0).M2
         AIF   (&GGXREF(&I) NE &G).M1
 SGIEF018  TYP=&TYP,&I,&N
&W       SETB  1              (SET FLAG ALTERNATE GENERIC PRESENT)
         AGO   .M1
.M2      AIF   ('&TYP' EQ 'E').M6    NO FLAGS SET ON E-TYPE
         AIF   ('&TYP' EQ 'GG').M4   MULT FLAG ONLY ON GG-TYPE
         AIF   ('&TYP' NE 'X').M6    POSSIBLY BOTH ON X-TYPE
         AIF   (NOT &W).M4    (TEST IF ALTERNATE GENERIC PRESENT)
&J       SETA  0
.M3      ANOP
&J       SETA  &J+1
         AIF   (&GPFXT(&J) EQ 0).M4         (SCAN LOOP FOR THIS NAME'S
         AIF   (&GPFXT(&J) NE &N).M3     ENTRY IN GPFXT)
&ALT(&J) SETB  1      (SET ALT FLAG IF X TYPE HAD ALTERNATE GENERIC)
.M4      ANOP
&W       SETB  ('&TYP' EQ 'GG')
&I       SETA  (&W*(&GG+1024))+(1-&W)*&N
&J       SETA  0
.M5      ANOP
&J       SETA  &J+1
         AIF   (&GPFXT(&J) EQ 0).M6
         AIF   (&GPFXT(&J) NE &I).M5
&MLT(&J) SETB  1      (SET MULT FLAG IF GG OR X TYPE)
.M6      MEXIT
.*
.*
.*
.L1      AIF   (&NSAV EQ 0).L2A
         AIF   ('&ENAME(&NSAV)'  EQ  '&N').L51
.L2A     ANOP
&I       SETA  0
.L2      ANOP
&I       SETA  &I+1
         AIF   ('&ENAME(&I)' EQ '&N').L3
         AIF   ('&ENAME(&I)' NE '').L2
      SGIEF014   TYP=E,&N
         AGO   .L5
.L3      ANOP
         AIF   ('&R' NE 'YES').M6   EXIT IF NO OVERRIDE
&J       SETA  0
.L4      ANOP
&J       SETA  &J+1
         AIF   (&VY(&J) EQ 0).L4A            EXPUNGE USER SPECIFICATION
         AIF   (&VY(&J) NE &I+256).L4        FOR I'TH NAME
&VX(&J)  SETA  1
&VY(&J)  SETA  &GGXREF(1)
         AGO   .L4
.L4A     ANOP
    MNOTE *,'  *** WARNING ***  NAME ''&N'' IS RESERVED BY IBM.  '
    MNOTE *,'                   USER DEFINITION ON UNITNAME MACRO    '
    MNOTE *,'                   HAS BEEN IGNORED AND REPLACED BY IBM '
    MNOTE *,'                   DEFINITION OF THE NAME.              '
.L5      ANOP
&NSAV    SETA  &I
.L51     ANOP
 SGIEF015   TYP=E,N=&NSAV,G=&G
         MEXIT
         MEND
