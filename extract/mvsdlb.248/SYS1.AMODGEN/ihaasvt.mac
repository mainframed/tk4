*
*        %GOTO ASVTL1;    /*
         MACRO
         IHAASVT &DSECT=YES    */
*%ASVTL1 : ;
*
*/* **************************************************************** */
*/*                                                                  */
*/*            ADDRESS SPACE VECTOR TABLE                            */
*/*                                                                  */
*/*  OS/VS2 RELEASE 4, 04/22/75, LEVEL=1                             */
*/*                                                                  */
*/*  METHOD OF ACCESS                                                */
*/*      BAL  - DSECT IS PRODUCED UNLESS DSECT=NO IS SPECIFIED.      */
*/*             USING ON ASVT GIVES ADDRESSABILITY FOR ALL SYMBOLS.  */
*/*      PL/S - DCL ASVTPTR PTR                                      */
*/*                                                                  */
*/* **************************************************************** */
*%GOTO ASVTL2;  /*
         SPACE 1
         AIF  ('&DSECT' EQ 'NO').ASVT10
ASVT     DSECT
         AGO   .ASVT20
.ASVT10  ANOP
         DS    0D
ASVT     EQU   *
.ASVT20  ANOP
         DS    CL512 -             RESERVED FOR FUTURE EXPANSION
ASVTBEGN DS    0D -                BEGINNING OF ASVT
ASVTASVT DS    CL4 -               ACRONYM IN EBCDIC -ASVT-
ASVTMAXU DS    F -                 MAXIMUM NUMBER OF ADDRESS SPACES
ASVTRS00 DS    F -                 RESERVED
ASVTFRST DS    A -                 ADDRESS OF FIRST AVAILABLE ASVT
*                                  ENTRY  (MDC300)             @Z40AQ9A
ASVTAVAI EQU   X'80' -             BIT ONE IF ASID IS AVAILABLE AND
*                                  ZERO IF ASID IS ASSIGNED      MDC002
ASVTENTY DS    A -                 ENTRY FOR EACH POSSIBLE ASID.
*                                  IF ADDRESS SPACE ASSIGNED, ENTRY
*                                  CONTAINS ADDRESS OF ASCB. IF NOT
*                                  ASSIGNED, ENTRY CONTAINS EITHER
*                                  ADDRESS OF NEXT AVAILABLE ASID OR
*                                  ZEROS WITH HIGH-ORDER BIT ON IF
*                                  LAST ENTRY.  (MDC301)       @Z40AQ9A
ASVTAVAL EQU   X'80' -             BIT ONE IF ASID IS AVAILABLE AND
*                                  ZERO IF ASID IS ASSIGNED
ASVTEND  EQU   * -                 END OF ASVT                   MDC003
ASVTLEN  EQU   ASVTEND-ASVT -      LENGTH OF ASVT INCLUDING RESERVED
*                                  FIELDS                        MDC004
ASVTULEN EQU   ASVTEND-ASVTBEGN -  LENGTH OF USED FIELDS IN ASVT MDC005
         MEND  , -    */
*%ASVTL2 : ;
*
*DCL 1 ASVT     BASED(ASVTPTR) BDY(DWORD),
*      2 * CHAR(512),             /* RESERVED FOR FUTURE EXPANSION   */
*      2 ASVTBEGN CHAR(0)         /* BEGINNING OF ASVT               */
*        BDY (DWORD),
*      2 ASVTASVT CHAR(4),        /* ACRONYM IN EBCDIC -ASVT-        */
*      2 ASVTMAXU FIXED (31),     /* MAXIMUM NUMBER OF ADDRESS SPACES*/
*      2 ASVTRS00 FIXED(31),      /* RESERVED                        */
*      2 ASVTFRST PTR (31),       /* ADDRESS OF FIRST AVAILABLE ASVT
*                                    ENTRY  (MDC300)         @Z40AQ9A*/
*        3 ASVTAVAI BIT(1),       /* BIT ONE IF ASID IS AVAILABLE AND
*                                    ZERO IF ASID IS ASSIGNED  MDC002*/
*      2 ASVTENTY (*) PTR (31),   /* ENTRY FOR EACH POSSIBLE ASID.
*                                    IF ADDRESS SPACE ASSIGNED, ENTRY
*                                    CONTAINS ADDRESS OF ASCB. IF NOT
*                                    ASSIGNED, ENTRY CONTAINS EITHER
*                                    ADDRESS OF NEXT AVAILABLE ASID
*                                    OR ZEROS WITH HIGH-ORDER BIT ON
*                                    IF LAST ENTRY.
*                                    (MDC301)                @Z40AQ9A*/
*        3 ASVTAVAL BIT(1),       /* BIT ONE IF ASID IS AVAILABLE AND
*                                    ZERO IF ASID IS ASSIGNED        */
*      2 ASVTEND  CHAR(0) BDY(WORD); /* END OF ASVT            MDC003*/
*%ASVTLEN='LENGTH(ASVT)+4';       /* LENGTH OF ASVT INCLUDING
*                                    RESERVED FIELDS           MDC004*/
*%ASVTULEN='LENGTH(ASVT)-508';    /* LENGTH OF USED FIELDS IN ASVT
*                                                              MDC005*/
