         MACRO
&LABEL   IEXCGEN &GENTYPE,&STRING
.*
.*       COMPONENT ID - 360S-AL-531 ALGOL F COMPILER
.*
.*       LEVEL 2.1 -
.*       THIS IS A NEW MACRO REQUIRED AS PART OF THE
.*       REFURBISHMENT OF THE LAST IBM RELEASE OF
.*       THE ALGOL F COMPILER
.*
.*       FUNCTION -
.*       IEXCGEN CONVERTS THE EBCDIC STRING PROVIDED IN THE
.*       &STRING PARAMETER INTO THE INTERNAL CODE USED BY THE
.*       ALGOL F COMPILER FOR SOURCE PROGRAM SCANNING
.*
.*       THE GENTYPE PARAMETER ACCEPTS EQU TO GENERATE THE
.*       CONVERTED STRING AS AN EQUATE OR IT ACCEPTS DC TO
.*       GENERATE THE CONVERTED STRING INTO A DC OF A HEX
.*       STRING
.*
.*       NOTES -
.*       1. THIS MACRO WAS DESIGNED TO EXECUTE IN THE
.*          OS/360 ASSEMBLER IEUASM ENVIRONMENT SO THAT THE
.*          ALGOL F SOURCE CODE CAN BE BUILT TO MATCH
.*          THE OS/360 GENERATED ALGOL F OBJECT MODULES
.*          USE OF THE VARIOUS ENHANCEMENTS PROVIDED BY
.*          HLASM WAS THEREFORE PRECLUDED
.*
.*
.*       DECLARE LCLS
.*
         LCLA  &I                      OUTER LOOP VARIABLE
         LCLA  &J                      INNER LOOP VARIABLE
         LCLA  &OUT                    OUTPUT CHAR POINTER
         LCLA  &TABLEN                 NUMBER OF CHARS IN TRANSLATE TAB
         LCLA  &STRLEN                 STRING LENGTH
         LCLB  &SUPCHAR                FLAG TO SUPRESS NEXT SPEC CHAR
         LCLC  &CEB(91)                TABLE OF EBCDIC CHARACTERS
         LCLC  &CIC(91)                INTERNAL CODE EQUIVALENT OF
.*                                     THE EBCDIC CHARACTER
         LCLC  &X(40)                  RESULT OF TRANSLATION TO
.*                                     INTERNAL CODE
         LCLC  &BAD                    DISPLAY AN INVALID CHAR
         AIF   ('&GENTYPE' EQ 'EQU').GENOK
.*
.*       VALIDATE GENTYPE
.*
         AIF   ('&GENTYPE' EQ 'DC').GENOK
.*
.*       GENTYPE INVALID
.*
         MNOTE 12,'ERROR - GENTYPE REQUESTED &GENTYPE NOT DC OR EQU'
         AGO   .EXIT
.*
.*       VALIDATE STRING
.*
.GENOK   ANOP
         AIF   ('&STRING' NE '').STROK1
         MNOTE 12,'ERROR - NULL STRING FOR CONVERSION'
         AGO   .EXIT
.STROK1  ANOP
&STRLEN  SETA  K'&STRING
         AIF   ('&STRING'(1,1) EQ '''').STROK2
         AIF   ('&STRING'(1,&STRLEN) EQ '''').STROK2
         MNOTE 12,'ERROR - STRING NOT ENCLOSED IN QUOTES'
         AGO   .EXIT
.STROK2  ANOP
.*
.*       INITIALIZE STRINGS WITH EBCDIC CHAR AND TRANSLATED
.*       ALGOL F INTERNAL HEX VALUE
.*
.*       CHARACTERS A - Z
.*
&CEB(1)  SETC  'A'
&CIC(1)  SETC  '40'
&CEB(2)  SETC  'B'
&CIC(2)  SETC  '41'
&CEB(3)  SETC  'C'
&CIC(3)  SETC  '42'
&CEB(4)  SETC  'D'
&CIC(4)  SETC  '43'
&CEB(5)  SETC  'E'
&CIC(5)  SETC  '44'
&CEB(6)  SETC  'F'
&CIC(6)  SETC  '45'
&CEB(7)  SETC  'G'
&CIC(7)  SETC  '46'
&CEB(8)  SETC  'H'
&CIC(8)  SETC  '47'
&CEB(9)  SETC  'I'
&CIC(9)  SETC  '48'
&CEB(10) SETC  'J'
&CIC(10) SETC  '49'
&CEB(11) SETC  'K'
&CIC(11) SETC  '4A'
&CEB(12) SETC  'L'
&CIC(12) SETC  '4B'
&CEB(13) SETC  'M'
&CIC(13) SETC  '4C'
&CEB(14) SETC  'N'
&CIC(14) SETC  '4D'
&CEB(15) SETC  'O'
&CIC(15) SETC  '4E'
&CEB(16) SETC  'P'
&CIC(16) SETC  '4F'
&CEB(17) SETC  'Q'
&CIC(17) SETC  '50'
&CEB(18) SETC  'R'
&CIC(18) SETC  '51'
&CEB(19) SETC  'S'
&CIC(19) SETC  '52'
&CEB(20) SETC  'T'
&CIC(20) SETC  '53'
&CEB(21) SETC  'U'
&CIC(21) SETC  '54'
&CEB(22) SETC  'V'
&CIC(22) SETC  '55'
&CEB(23) SETC  'W'
&CIC(23) SETC  '56'
&CEB(24) SETC  'X'
&CIC(24) SETC  '57'
&CEB(25) SETC  'Y'
&CIC(25) SETC  '58'
&CEB(26) SETC  'Z'
&CIC(26) SETC  '59'
&CEB(27) SETC  '~'                     UNRECOGNIZED CHAR
&CIC(27) SETC  '2C'
.*
.*       NUMERIC 0 - 9
.*
&CEB(28) SETC  '0'
&CIC(28) SETC  '30'
&CEB(29) SETC  '1'
&CIC(29) SETC  '31'
&CEB(30) SETC  '2'
&CIC(30) SETC  '32'
&CEB(31) SETC  '3'
&CIC(31) SETC  '33'
&CEB(32) SETC  '4'
&CIC(32) SETC  '34'
&CEB(33) SETC  '5'
&CIC(33) SETC  '35'
&CEB(34) SETC  '6'
&CIC(34) SETC  '36'
&CEB(35) SETC  '7'
&CIC(35) SETC  '37'
&CEB(36) SETC  '8'
&CIC(36) SETC  '38'
&CEB(37) SETC  '9'
&CIC(37) SETC  '39'
.*
.*       SPECIAL CHARS
.*
&CEB(38) SETC  ' '
&CIC(38) SETC  '2B'
&CEB(39) SETC  '.'
&CIC(39) SETC  '2D'
&CEB(40) SETC  '<'
&CIC(40) SETC  '11'
&CEB(41) SETC  '('
&CIC(41) SETC  '06'
&CEB(42) SETC  '+'
&CIC(42) SETC  '00'
&CEB(43) SETC  '×'
&CIC(43) SETC  '22'
&CEB(44) SETC  '&&'                    DO NOT CHANGE THIS CHARS POS
&CIC(44) SETC  '23'                    IN THE TAB SEE LOOPS BELOW
&CEB(45) SETC  '!'
&CIC(45) SETC  '2C'                    ##
&CEB(46) SETC  '$'
&CIC(46) SETC  '5A'                    ##
&CEB(47) SETC  '*'
&CIC(47) SETC  '02'
&CEB(48) SETC  ')'
&CIC(48) SETC  '26'
&CEB(49) SETC  ';'
&CIC(49) SETC  '0B'
&CEB(50) SETC  '^'
&CIC(50) SETC  '20'
&CEB(51) SETC  '-'
&CIC(51) SETC  '01'
&CEB(52) SETC  '/'
&CIC(52) SETC  '03'
&CEB(53) SETC  ','
&CIC(53) SETC  '25'
&CEB(54) SETC  '%'
&CIC(54) SETC  '2C'
&CEB(55) SETC  '_'
&CIC(55) SETC  '5B'
&CEB(56) SETC  '>'
&CIC(56) SETC  '12'
&CEB(57) SETC  '['
&CIC(57) SETC  '08'
&CEB(58) SETC  ':'
&CIC(58) SETC  '07'
&CEB(59) SETC  '#'
&CIC(59) SETC  '5C'
&CEB(60) SETC  '@'
&CIC(60) SETC  '5D'
&CEB(61) SETC  ''''                    DO NOT CHANGE THIS CHARS POS
&CIC(61) SETC  '2E'                    IN THE TAB SEE LOOPS BELOW
&CEB(62) SETC  '='
&CIC(62) SETC  '10'
&CEB(63) SETC  '"'
&CIC(63) SETC  '0C'
&CEB(64) SETC  ']'
&CIC(64) SETC  '28'
.*
.*       LOWER CASE CHARACTERS A - Z
.*
&CEB(65) SETC  'a'
&CIC(65) SETC  '40'
&CEB(66) SETC  'b'
&CIC(66) SETC  '41'
&CEB(67) SETC  'c'
&CIC(67) SETC  '42'
&CEB(68) SETC  'd'
&CIC(68) SETC  '43'
&CEB(69) SETC  'e'
&CIC(69) SETC  '44'
&CEB(70) SETC  'f'
&CIC(70) SETC  '45'
&CEB(71) SETC  'g'
&CIC(71) SETC  '46'
&CEB(72) SETC  'h'
&CIC(72) SETC  '47'
&CEB(73) SETC  'i'
&CIC(73) SETC  '48'
&CEB(74) SETC  'j'
&CIC(74) SETC  '49'
&CEB(75) SETC  'k'
&CIC(75) SETC  '4A'
&CEB(76) SETC  'l'
&CIC(76) SETC  '4B'
&CEB(77) SETC  'm'
&CIC(77) SETC  '4C'
&CEB(78) SETC  'n'
&CIC(78) SETC  '4D'
&CEB(79) SETC  'o'
&CIC(79) SETC  '4E'
&CEB(80) SETC  'p'
&CIC(80) SETC  '4F'
&CEB(81) SETC  'q'
&CIC(81) SETC  '50'
&CEB(82) SETC  'r'
&CIC(82) SETC  '51'
&CEB(83) SETC  's'
&CIC(83) SETC  '52'
&CEB(84) SETC  't'
&CIC(84) SETC  '53'
&CEB(85) SETC  'u'
&CIC(85) SETC  '54'
&CEB(86) SETC  'v'
&CIC(86) SETC  '55'
&CEB(87) SETC  'w'
&CIC(87) SETC  '56'
&CEB(88) SETC  'x'
&CIC(88) SETC  '57'
&CEB(89) SETC  'y'
&CIC(89) SETC  '58'
&CEB(90) SETC  'z'
&CIC(90) SETC  '59'
.*
&TABLEN  SETA  90                      MAXIMUM CHARS IN TAB
.*
.*       INITIALIZE LOOP VARIABLES
.*
&STRLEN  SETA  &STRLEN-1               ALLOW FOR ENCLOSING QUOTES
&I       SETA  1                       BYPASS FIRST QUOTE
&OUT     SETA  1                       OUTPUT CHAR POINTER
.*
.*       OUTER LOOP THROUGH STRING TO PROCESS EACH CHAR
.*
.LOOP    ANOP
&I       SETA  &I+1                    SELECT NEXT CHAR
&J       SETA  0                       INIT INNER LOOP VARIABLE
.*
.*       INNER LOOP THROUGH TABLE TO OBTAIN TRANSLATED VALUE
.*
.INLOOP  ANOP
&J       SETA  &J+1
         AIF   (&J LE &TABLEN).TESTC  SEARCHED THE TABLE ?
&BAD     SETC  '&STRING'(&I,1)
         MNOTE 12,'ERROR - INVALID CHARACTER FOR TRANSLATION ×&BAD× '
         AGO   .EXIT
.TESTC   ANOP
.*       MNOTE *,'I VALUE = &I'       DEBUGGING
.*       MNOTE *,'J VALUE = &J'
         AIF   ('&STRING'(&I,1) NE '&CEB(&J)'(1,1)).INLOOP
.*
.*       FOUND A MATCH
.*
.*       IS THE CHAR A QUOTE OR AMPERSAND ?
.*       USE VALUE IN COMPARE TABLE TO AVOID ASSEMBLER SPECIAL CHAR
.*       ISSUES
.*
         AIF   (&J EQ 44 OR &J EQ 61).SCHAR  FOR SPEC CHAR GOTO SCHAR
&SUPCHAR SETB  0                       TURN OFF SUPRESS CHAR FLAG
         AGO   .ASSIGN                 AND ASSIGN TRANSLATED VALUE
.SCHAR   ANOP                          EITHER A QUOTE OR AMPERSAND
         AIF   (&SUPCHAR).SCHARA       SPECIAL CHAR FOUND PREV ? SCHARA
&SUPCHAR SETB  1                       SUPRESS NEXT SPECIAL CHAR
         AGO   .ASSIGN                 ASSIGN THIS ONE
.SCHARA  ANOP
&SUPCHAR SETB  0                       TURN OFF SUPRESS CHAR
         AGO   .SCHARB                 DO NOT ASSIGN CHAR
.ASSIGN  ANOP
&X(&OUT) SETC  '&CIC(&J)'              MOVE TRANSLATED HEX CHARS
&OUT     SETA  &OUT+1                  INCREMENT OUTPUT COUNTER
.SCHARB  ANOP
         AIF   (&I LT &STRLEN).LOOP    PROCESS NEXT CHAR
.*
.*       ALL CHARS PROCESSED
.*
.*       GENERATE REQUESTED TRANSLATED HEX STRING
.*
         AIF   ('&GENTYPE' EQ 'EQU').GENEQU
.*
.*       DC REQUESTED
.*
.*       NOTE ONLY TWO CONTINUATION RECORDS ALLOWED FOR IEUASM AND
.*       IFOX00
.*
&LABEL   DC    X'&X(1).&X(2).&X(3).&X(4).&X(5).&X(6).&X(7).&X(8).&X(9).C
               &X(10).&X(11).&X(12).&X(13).&X(14).&X(15).&X(16).&X(17).C
               &X(18).&X(19).&X(20).&X(21).&X(22).&X(23).&X(24)'
         AIF   ('&X(25)' EQ '').EXIT    NO NEED FOR ADDITIONAL DC
         DC    X'&X(25).&X(26).&X(27).&X(28).&X(29).&X(30).&X(31).&X(32C
               ).&X(33).&X(34).&X(35).&X(36).&X(37).&X(38).&X(39)'
         AGO   .EXIT
.*
.*       EQU REQUESTED
.*
.GENEQU  ANOP
.*       EQUATES LIMITED TO 24 CHARS
&LABEL   EQU   X'&X(1).&X(2).&X(3).&X(4).&X(5).&X(6).&X(7).&X(8).&X(9).C
               &X(10).&X(11).&X(12).&X(13).&X(14).&X(15).&X(16).&X(17).C
               &X(18).&X(19).&X(20).&X(21).&X(22).&X(23).&X(24)'
         AGO   .EXIT
.*
.*       EXIT MACRO
.*
.EXIT    ANOP
         MEND
