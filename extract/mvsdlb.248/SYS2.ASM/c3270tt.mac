*          Member C3270TT at Level 002 as of 30/7/12             *WSJW*
TERMTYPE TITLE  'TERMTYPE - Program to Indicate Terminal Type'   *WSJW*
         MACRO
         REGEQU
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         MEND
         MACRO
&LAB     LEAVER &WR=R13,&WL=WORKLEN
&LAB     LR    R1,&WR             WORKAREA ADDR FOR FREEMAIN
         L     R0,=A(&WL)         WORKAREA LEN   "    "
         L     R13,4(R13)         GET CALLERS SAVEAREA ADDR
         LR    R11,R15            SAVE RETURN CODE
         FREEMAIN R,LV=(0),A=(1)
         LR    R15,R11            RESTORE RETURN CODE
         RETURN (14,12),RC=(15)
         MEND
         MACRO
&LAB     LEAVENR
&LAB     L     R13,4(R13)         GET CALLERS SAVEAREA ADDR
         RETURN (14,12),RC=(15)
         MEND
         MACRO
&LAB     KKPARSE &CPPL=R11,&ANS=ANS,&ECB=ECB,&PCL=PCL,&PPLA=PPLA
*                  DEFAULT OPERANDS :
*        KKPARSE &CPPL=R11,&ANS=ANS,&ECB=ECB,&PCL=PCL,&PPLA=PPLA
*                            CPPL IS THE REGISTER CONTAINING THE
*                                 POINTER TO THE COMMAND PROCESSOR
*                                 PARAMETER LIST.
*                            ANS  IS A FULLWORD WHERE PARSE RETURNS
*                                 THE POINTER TO HIS ANSWER (IKJPARMD).
*                            ECB  IS A FULLWORD.
*                            PCL  IS THE NAME OF THE PARSE CONTROL
*                                 LIST CSECT (IKJPARM).
*                            PPLA IS A 7 FULLWORD AREA USED FOR
*                                 THE PARSE PARAMETER LIST.
*
*        KKPARSE             USES REGS R14,R15,R1,&CPPL REG
*
         USING CPPL,&CPPL         POINTS TO CPPL (PARM LIST)
*
&LAB     LA    R1,&PPLA           R1->PPL AREA
         USING PPL,R1             TELL ASSEMBLER POINTS TO PPL AREA
*
*                         CONSTRUCT PARSE PARAMETER LIST
*                                           FOR IKJPARS :
*
         MVC   PPLUPT,CPPLUPT     UPT
         MVC   PPLECT,CPPLECT     ECT
         LA    R15,&ECB           ECB
         ST    R15,PPLECB
         L     R15,=V(&PCL.)      PCL
         ST    R15,PPLPCL
         LA    R15,&ANS           ANS
         ST    R15,PPLANS
         MVC   PPLCBUF,CPPLCBUF   CBUF
         XC    PPLUWA,PPLUWA
*
         DROP  R1
         EJECT
*        CALLTSSR EP=IKJPARS      CALL PARSE:
         CALLTSSR EP=IKJPARS      CALL PARSE:
         EJECT
*
*                        DSECTS NEEDED BY PARSE:
*
*CPPL    IKJCPPL
CPPL     IKJCPPL
*PPL     IKJPPL
PPL      IKJPPL
*
CVTMAP   DSECT
         ORG   CVTMAP+524
CVTPARS  DS    F
CVTPTR   EQU   16
*
*
&SYSECT  CSECT
         MEND
         MACRO
&L1      MOVE  &TO,&TL,&FROM,&FL,&PAD=
         LCLA  &NL,&UL,&VL
         LCLC  &TO$,&TL$,&FROM$,&FL$
&TO$     SETC  '&TO'
&TL$     SETC  '&TL'
&FROM$   SETC  '&FROM'
&FL$     SETC  '&FL'
         AIF   ('&TO'(1,1) NE '(').TLC
&TO$     SETC  '0&TO'
.TLC     AIF   ('&TL'(1,1) NE '(').FC
&TL$     SETC  '0&TL'
.FC      AIF   ('&FROM'(1,1) NE '(').FLC
&FROM$   SETC  '0&FROM'
.FLC     AIF   (T'&FL EQ 'O').OO
         AIF   ('&FL'(1,1) NE '(').OO
&FL$     SETC  '0&FL'
.OO      ANOP
&L1      STM   14,12,12(13)
         LA    R2,&TO$
         LA    R3,&TL$
         LA    R4,&FROM$
         AIF   (T'&FL EQ 'O').UTL
         LA    R5,&FL$
         AGO   .PC
.UTL     LA    R5,&TL$
.PC      AIF   ('&PAD' EQ '').NPC
         ICM   R5,8,=&PAD
.NPC     MVCL  R2,R4
         LM    14,12,12(13)
         MEND
         MACRO
&LAB1    ENTERR  &SA=SAVEAREA,&WA=WORKAREA,&WL=WORKLEN,&LEVEL=,&R=,   XX
               &CLEAR=NO
         MNOTE ' CLEAR=&CLEAR,SA=&SA,WA=&WA,WL=&WL,LEVEL=&LEVEL'
&LAB1    CSECT
         SAVE  (14,12),,&LAB1-&LEVEL
         LR    R12,R15            HOPE HE KNOWS WHAT HE'S DOING
         USING &LAB1,R12
         LR    R10,R1             SAVE PARM PTR R10->PARM PTR
         L     R0,=A(&WL)         R0=GET LENGTH
         GETMAIN R,LV=(0)         R1->WORKAREA
         LR    R11,R13            R11->CALLERS SAVEAREA
         LR    R13,R1             R13->WORKAREA
         USING &WA.,R13
         AIF   ('&CLEAR' NE 'YES').NCLEAR
         L     R15,=A(&WL)        R0=GET LENGTH
         S     R15,=F'72'         SKIP REGS
         MOVE  72(13),(15),0,0,PAD=X'00'
.NCLEAR  ANOP
         ST    R11,&SA.+4         SAVE HIS SAVEAREA PTR
         LA    R13,&SA            R13->SAVEAREA (MINE)
         ST    R13,8(,R11)        MINE IN HIS
         LR    R11,R1             R11->WORKAREA IN CASE NOT SAME AS R13
*                       WORKAREA ADDR IS STILL R13 FOR
*                       THE ASSEMBLER - IF DIFFERENT FROM R13
*                       THEN USE: DROP R13 AND USING &WA.,R11
         LR    R1,R10             RESTORE PARM PTR PTR
         AIF   ('&R' EQ 'NO').NRE
         REGEQU
.NRE     ANOP
         MEND
         MACRO
&LAB1    ENTERNR &SA=SAVEAREA
&LAB1    START
         SAVE  (14,12),,*         HO-HUM
         LR    R12,R15            HOPE HE KNOWS WHAT HE'S DOING
         USING &LAB1,R12
         ST    R13,&SA.+4         SAVE HIS SAVEAREA PTR
         LR    R11,R13            SAVE THE SAVE POINTER
         LA    R13,&SA            R13->SAVEAREA (MINE)
         ST    R13,8(,R11)        MINE IN HIS
         B     ENTEX
&SA      DS    18F
         REGEQU
ENTEX    DS    0H
         MEND
         MACRO
&LAB1    COMMENT &A,&B,&C,&D,&E,&F,&G,&H,&I,&J,&K
         MEND
         EJECT
*  AUTHOR: KERMIT KISER - WASHINGTON STATE DP SERVICE CENTER (WDPSC).
*          (206) 902-3119
*
*  MOD:    Wolfgang Schaefer and Juergen Winkelmann (1.1)        *WSJW*
*                           *****  TERMTYPE V1M1       *****     *WSJW*
*              V1M1 - Fix GTSIZE result evaluation.    30/7/12   *WSJW*
*                     Split off from C3270 to make IFOX00 happy. *WSJW*
*                                                                *WSJW*
* THIS PROGRAM RETURNS A CODE WHICH DEPENDS ON THE TSO USERS TERMINAL:
*      0 - TERMINAL IS A TTY TYPE
*  not 0 - Terminal is a 3270 type, number of rows is returned   *WSJW*
*  IT CAN BE CALLED FROM A CLIST TO DECIDE WHEN TO USE THE C3270 CMD.
*  THE RETURN CODE IS THEN PLACED IN CLIST VARIABLE &LASTCC.
*
TERMTYPE ENTERR
         GTSIZE
         LTR   R15,R15            RC=0?                          *WSJW*
         BZ    *+6                yes, use screen size from R0   *WSJW*
         XR    R0,R0              no, zero screen size for TTY   *WSJW*
         LR    R15,R0             R15=SCREEN SIZE=0 IF TTY
         LEAVER
*
*   WORKING STORAGE AREA - DYNAMIC
*
WORKAREA DSECT
SAVEAREA DS    18F
WORKLEN  EQU   *-WORKAREA
         END
