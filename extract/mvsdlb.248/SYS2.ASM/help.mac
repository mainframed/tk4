HELP     TITLE 'HELP Helper'
HELP     CSECT ,                  HELP helper
***********************************************************************
*                                                                     *
* Title       - HELP                                                  *
*                                                                     *
* Description - HELP wrapper: Call TSO HELP or FSH as appropriate.    *
*                                                                     *
* 2012/10/06 - initial implementation, version 1.0                    *
*                                                                     *
* Author: Juergen Winkelmann, ETH Zuerich                             *
*                                                                     *
***********************************************************************
         USING *,12               tell assembler of base
         SAVE  (14,12),,HELP_&SYSDATE_&SYSTIME save caller's registers
         LR    R12,R15            establish addressability
         LR    R2,R1              save parms
         GETMAIN R,LV=LWORKA      get dynamic work area
         LR    R11,R1             save GETMAIN pointer
         ST    R13,4(R11)         store backward pointer
         ST    R11,8(R13)         store forward pointer
         LR    R13,R11            get work area address ..
         USING WORKAREA,13         .. and tell assembler
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12                 base register
R13      EQU   13                 dynamic work area
R14      EQU   14
R15      EQU   15
         NI    LINEMODE,X'00'     indicate 3270
         GTSIZE ,                 get screen dimensions
         LTR   R15,R15            RC=0?
         BNZ   *+10               no, assume TTY
         LTR   R0,R0              screen size=0?
         BNZ   *+8                no, skip TTY
         OI    LINEMODE,X'01'     indicate TTY
         L     R3,12(,R2)         address ECT
         USING ECT,R3             tell assembler
         CLC   ECTPCMD(8),LMH     called as LMH?
         BNE   *+8                no, continue
         OI    LINEMODE,X'01'     yes, enforce linemode
         TM    LINEMODE,X'01'     TTY?
         BO    *+14               yes, skip full screen
         MVC   ECTPCMD(8),FSH     no, set full screen help
         B     *+10               skip line mode
         MVC   ECTPCMD(8),H       set line mode help
         DROP  R3                 don't use R3 any more
         LA    R3,CPPLCBUF        get address of our CPPLCBUF ..
         ST    R3,CPPL             .. and store it in fake CPPL
         MVC   CPPL+4(12),4(R2)   copy rest of CPPL to fake CPPL
         LA    R7,CMD             address start of command
         TM    LINEMODE,X'01'     TTY?
         BO    *+26               yes, skip full screen
         LA    R3,7               length of CPPLCBUF without operands
         LA    R4,3               length of FSH command
         LA    R7,4(,R7)          start of operands
         MVC   CMD(4),FSH         move FSH command into CPPLCBUF
         B     *+22               skip line mode
         LA    R3,5               length of CPPLCBUF without operands
         LA    R4,1               length of H command
         LA    R7,2(,R7)          start of operands
         MVC   CMD(2),H           move H command into CPPLCBUF
         L     R2,0(,R2)          address original CPPLCBUF
         LH    R5,0(,R2)          get original length
         SH    R5,2(,R2)          subtract original offset
         SH    R5,=H'5'           subtract prefix (+1 for EXecute)
         BM    NOOPERS            result negativ -> no operands entered
         LA    R6,4(,R2)          address original command
         AH    R6,2(,R2)          add original offset -> operands start
         EX    R5,MVOPERS         move operands into our CPPLCBUF
         AR    R3,R5              add length of operands
         LA    R3,2(,R3)          blank after command +1 from EXecute
         LA    R4,1(,R4)          add blank after command to offset
NOOPERS  STH   R3,CPPLCBUF        store length in CPPLCBUF prefix
         STH   R4,OFFSET          store offset in CPPLCBUF prefix
         LA    R2,FSH             address full screen help command
         TM    LINEMODE,X'01'     TTY?
         BNO   FULLSCRN           no, do full screen help
         LA    R2,TSOHELP         address line mode help command
         LOAD  EPLOC=(R2)         load help command
         LR    R15,R0             entry point address
         LA    R1,CPPL            get our CPPL address
         BALR  R14,R15            branch into help command
         LR    R2,R15             remember return code
         B     CLEANUP            clean up and exit
FULLSCRN MVC   ATTACH(LATTACH),ATTACHSK initialize ATTACH plist
         LA    R1,CPPL            get CPPL address for ATTACH
         XC    ECB,ECB            clear ECB
         LA    R3,ECB             get ECB address for ATTACH
         ATTACH EPLOC=(R2),ECB=(R3),SF=(E,ATTACH) attach help command
         ST    R1,TCB             remember TCB address
         WAIT  ECB=ECB            wait for completion
         DETACH TCB               detach help command
         LH    R2,ECB+2           remember return code
CLEANUP  L     R13,4(,R13)        pick up caller's save area
         FREEMAIN R,LV=LWORKA,A=(11) free dynamic work area
         LR    R15,R2             get return code
         LM    R0,R12,20(R13)     restore ..
         L     R14,12(,R13)                 .. registers
         BR    R14                return
MVOPERS  MVC   0(1,R7),0(R6)      move operands EXecuted
ATTACHSK ATTACH SF=L              ATTACH parameter list skeleton
LATTACH  EQU   *-ATTACHSK         length of ATTACH plist skeleton
TSOHELP  DC    CL8'TSOHELP'       TSO line mode help command name
LMH      DC    CL8'LMH'           when called as LMH enforce line mode
FSH      DC    CL8'FSH'           FSH command is used on 3270
H        DC    CL8'H'             original TSO help is used on TTY
WORKAREA DSECT ,                  work area
SAVEAREA DS    18F                register save area
ATTACH   DS    0F                 ATTACH parameter list
         ORG   *+LATTACH          end of ATTACH parameter list
ECB      DS    F                  ECB to be posted upon exit from help
TCB      DS    F                  TCB of help subtask
CPPL     DS    4F                 fake CPPL
CPPLCBUF DS    AL2                modified CPPLCBUF length
OFFSET   DS    AL2                modified offset to operands
CMD      DS    CL256              modified help command
LINEMODE DS    X                  TTY indicator
LWORKA   EQU   *-WORKAREA         length of work area
         IKJECT ,                 map the environment control table
         END
