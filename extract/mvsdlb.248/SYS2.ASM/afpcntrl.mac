AFPCNTRL TITLE 'Control Additional Floating Point Registers'
***********************************************************************
***                                                                 ***
*** Program:  AFPCNTRL                                              ***
***                                                                 ***
*** Purpose:  Switch additional floating point (AFP)                ***
***           registers on or off.                                  ***
***                                                                 ***
*** Usage:    The following JCL is required to run AFPCNTRL:        ***
***                                                                 ***
***           //AFPCNTRL EXEC AFPCNTRL,PARM=<ON|OFF>                ***
***                                                                 ***
***           The PARM field can have the following values:         ***
***                                                                 ***
***           ON        means "switch AFP registers on". This makes ***
***                     floating point registers 1, 3, 5, 7 to 15   ***
***                     available for use by setting bit 13 of      ***
***                     control register 0. It should be noted,     ***
***                     that MVS 3.8j does not save the contents of ***
***                     these registers across context switches.    ***
***                     If more than one job at a time is using the ***
***                     AFP registers, results are unpredictable.   ***
***                                                                 ***
***           OFF       means "switch AFP registers off". This      ***
***                     makes floating point registers 1, 3, 5, 7   ***
***                     to 15 unavailable for use by clearing bit   ***
***                     13 of control register 0.                   ***
***                                                                 ***
*** Function: 1. Analyze PARM field. If there is no PARM field, or  ***
***              if it contains anything else but ON or OFF, do     ***
***              nothing and exit silently.                         ***
***                                                                 ***
***           2. Self authorize using SVC 244. This ensures         ***
***              AFPCNTRL can be used only by users having access   ***
***              to the SVC244 RAKF facility.                       ***
***                                                                 ***
***           3. Enter supervisor state.                            ***
***                                                                 ***
***           4. Store control register 0, OR in or AND out bit 13  ***
***              (depending on the PARM field), and load the new    ***
***              value into control register 0.                     ***
***                                                                 ***
***           5. Return to problem state.                           ***
***                                                                 ***
***           6. Exit.                                              ***
***                                                                 ***
*** Updates:  2016/05/11 original implementation.                   ***
***                                                                 ***
*** Author:   Juergen Winkelmann, ETH Zuerich.                      ***
***                                                                 ***
***********************************************************************
AFPCNTRL CSECT
         SAVE  (14,12),,*       save registers
         LR    R12,R15          establish module addressability
         USING AFPCNTRL,R12     tell assembler of base
         LA    R2,SAVEA         chain ..
         ST    R13,4(,R2)         .. the ..
         ST    R2,8(,R13)           .. save ..
         LR    R13,R2                 .. areas
*
* Start processing
*
         L     R2,0(,R1)        parameter list address
         LH    R1,0(,R2)        length of PARM field
         LTR   R1,R1            PARM field specified?
         BZ    RETURN           no -> return
         LA    R4,3             maximum PARM length allowed
         CR    R1,R4            maximum PARM length exceeded?
         BH    RETURN           yes -> return
         BCTR  R1,0             decrement for EXecute
         EX    R1,MOVEPARM      get PARM
         LA    R4,AFPON         here we switch AFP on
         CLC   PARM(3),ON       PARM=ON?
         BE    GO               yes -> go ahead
         LA    R4,AFPOFF        here we switch AFP off
         CLC   PARM(3),OFF      PARM=OFF?
         BNE   RETURN           no -> return
GO       BSPAUTH ON             authorize ourselves
         MODESET MODE=SUP       enter supervisor state
         BSPAUTH OFF            authorization no longer needed
         STCTL R0,R0,CR0        store control register 0
         BR    R4               switch AFP on or off as requested
AFPON    OI    AFP,X'04'        set AFP bit
         B     DONE             go load it
AFPOFF   NI    AFP,X'FB'        clear AFP bit
DONE     LCTL  R0,R0,CR0        load control register 0
         MODESET MODE=PROB      return to problem state
*
* Return
*
RETURN   L     R13,4(,R13)      caller's save area pointer
         RETURN (14,12),RC=0    restore registers and return
MOVEPARM MVC   PARM(1),2(R2)    EXecuted to retrieve PARM field
*
* Data area
*
SAVEA    DS    18F              save area
CR0      DS    X                control register 0 goes here
AFP      DS    3X               AFP bit is bit 5 in second byte
PARM     DC    C'   '           PARM field
ON       DC    C'ON '           possible ..
OFF      DC    C'OFF'                       .. PARM values
         YREGS ,                register equates
         END   AFPCNTRL         end of AFPCNTRL
