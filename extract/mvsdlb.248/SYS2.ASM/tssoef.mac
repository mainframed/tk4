         TITLE '   E D I T F I L E   ( E F )   '
***********************************************************************
*                                                                     *
*           'EF' TSO COMMAND                                          *
*                                                                     *
***********************************************************************
         SPACE
*        WRITTEN BY. BILL GODFREY, PLANNING RESEARCH CORPORATION.
*        INSTALLATION. PRC COMPUTER CENTER, MCLEAN VA.
*        DATE WRITTEN. APRIL 26 1977.
*        DATE UPDATED. JUNE 10 1982.
*        DESCRIPTION.
*         THIS COMMAND STACKS A LIST OF EDIT SUBCOMMANDS TO BE
*         EXECUTED AGAINST THE DATASET ALLOCATED TO F(EDITFILE).
*
*         THIS IS A MAJOR CHANGE TO THE 'EF' COMMAND.
*         THE OLD SYNTAX WILL NOT WORK WITH THIS VERSION.
*         THE NEW SYNTAX HAS NO PARENS AROUND THE STACKED
*         SUBCOMMANDS, THUS ALLOWING UNBALANCED PARENS TO BE
*         SPECIFIED IN SUBCOMMAND OPERANDS.
*
*         THE SUBCOMMANDS ARE SPECIFIED AS A LIST ON ONE LINE,
*         WITH THE FIRST CHARACTER DEFINING THE DELIMITER THAT
*         SEPARATES THE SUBCOMMANDS IN THE LIST.
*         IF THE FIRST CHARACTER IS ALPHANUMERIC OR $, #, @, %
*         IT IS NOT USED AS THE DELIMITER, BUT SEMICOLON (;) IS.
*         THE FOUR CHARACTERS ($ # @ %) ARE SOMETIMES THE FIRST
*         CHARACTERS OF A COMMAND NAME OR CLIST NAME, SO THEY
*         ARE NOT ALLOWED AS DELIMITERS.
*
*         EXAMPLE: ALLOC FI(EDITFILE) DA(ABC.DEF.GHI.DATA) OLD
*                  EF V;BOTTOM;INSERT END;SAVE
*                  EF ,V,FIND /LOAD/ 10,DOWN
*                  EF .V.BOTTOM.INSERT END.SAVE
*
*         IT WAS DESIGNED FOR A SUBSYSTEM (TSSO) WHERE TSO COMMANDS
*         MAY BE ENTERED ON A CONSOLE, BUT THE SUBSYSTEM'S DESIGN
*         REQUIRED ALL SUBCOMMANDS TO BE ON THE SAME LINE AS THE
*         COMMAND.  THIS REQUIRED RE-TYPING THE EDIT COMMAND AND
*         THE DATA SET NAME FOR EACH LINE, WHICH WAS TIRESOME AND
*         DIDN'T LEAVE MUCH ROOM FOR THE SUBCOMMANDS.  THIS COMMAND
*         BUILDS AN EDIT COMMAND FROM THE DATA SET NAME ALLOCATED
*         TO THE FILENAME 'EDITFILE', STACKS IT, THEN STACKS THE
*         SPECIFIED SUBCOMMANDS.
*
*         NOTE - INSTALLATIONS THAT HAVE THE PCF PRODUCT WILL
*         NOTICE THAT IN A TSO SESSION PCF STRIPS OUT THE
*         SEMICOLONS BEFORE THIS COMMAND EVER SEES THEM,
*         BUT PCF SEEMS TO LEAVE THEM ALONE IN BACKGROUND
*         MODE (SUCH AS THE SUBSYSTEM).
*
*         LOG OF CHANGES.
*          10SEP80 - LAST CHANGE BEFORE 27MAY82.
*          27MAY82 - NEW VERSION. SYNTAX CHANGED.
*                    SYNTAX IS INCOMPATIBLE WITH OLD VERSION.
*                    SUBCOMMANDS ARE NOT IN PARENS ANY MORE.
*                    KEYWORDS NONUM, NEW, CAPS, ASIS, ARE DROPPED.
*                    TO EDIT NONUM, INVOKE THE COMMAND
*                    BY ITS ALIAS 'EFN'.
*                    TO EDIT ASIS, INVOKE THE COMMAND BY ITS ALIAS
*                    'EFNA' OR 'EFSA' IF IT HAS THOSE ALIASES.
*                    WE HAVE NO NEED FOR IT SO WE DIDNT GIVE THE
*                    COMMAND THOSE ALIASES.
*                    THE ABILITY TO EDIT 'NEW' HAS BEEN DROPPED BECAUSE
*                    THE SAVE SUBCOMMAND CAN CREATE NEW DATA SETS.
*          28MAY82 - REPLACE IKJPARS WITH OUR OWN PARSING.
*          01JUN82 - FIX BUG. WAS IGNORING 1-BYTE OPERAND LIKE 'EF L'.
*          10JUN82 - REMOVE REFERENCES IN COMMENTS TO NAME 'EE'.
*                    ISSUE MESSAGE IF EDITFILE IS NOT ALLOCATED.
         SPACE
         GBLB  &MVS
&MVS     SETB  1                   1 - MVS   0 - SVS,MVT
         SPACE
EDITFILE START
         USING *,12
         B     @PROLOG-*(,15)
         DC    AL1(11),CL11'EDITFILE'
         DC    CL16' &SYSDATE &SYSTIME '
@SIZE    DC    0F'0',AL1(1),AL3(@DATAL) SUBPOOL AND LENGTH
@PROLOG  STM   14,12,12(13)
         LR    12,15
         LR    R2,R1
         L     R0,@SIZE
         GETMAIN R,LV=(0)
         ST    13,4(,1)
         ST    1,8(,13)
         LR    13,1
         LR    R1,R2               RESTORE CPPL POINTER
         USING CPPL,$CPPL
         USING @DATA,R13
         SPACE 1
*              IOPL --> STPB --> LSD --> LIST
         SPACE
$CPPL    EQU   1
$IOPL    EQU   7
$LSD     EQU   9
         SPACE
         XC    LINKAREA(8),LINKAREA
         MVC   PUTPTPB(12),MODEL
         SLR   R15,R15
         ST    R15,PTRSTCK         ZERO IKJSTCK ADDRESS
         STH   R15,NONKV           NUM
         STH   R15,NEWKV           OLD
         STH   R15,ASISKV          CAPS
         L     R15,CPPLECT
         USING ECT,R15
         LA    R14,ECTPCMD         POINT TO NAME OF COMMAND
         CLI   ECTSCMD,C' '        IS THERE A SUBCOMMAND
         BE    *+8                 NO
         LA    R14,ECTSCMD         YES, POINT TO THAT INSTEAD
         CLI   2(R14),C'N'         IS THIS 'EFN'
         BNE   *+8                 NO
         MVI   NONKV+1,2           YES, SET SWITCH TO NONUM
         CLI   3(R14),C'A'         IS THIS 'EFNA' OR 'EFSA'
         BNE   *+8                 NO
         MVI   ASISKV+1,2          YES, SET SWITCH TO ASIS
         DROP  R15                 ECT
         LA    $IOPL,MYIOPL
         LA    R8,MYSTPB
         SPACE
         USING IOPL,$IOPL
         USING LSD,$LSD
         SPACE
*                             INITIALIZE THE IOPL
         L     R2,CPPLUPT
         ST    R2,IOPLUPT
         L     R2,CPPLECT
         ST    R2,IOPLECT
         LA    R2,MYECB
         ST    R2,IOPLECB
*              IOPLIOPB WILL BE INITIALIZED BY THE STACK MACRO
         SPACE
*        STPB WILL BE INITIALIZED BY THE STACK MACRO
         SPACE
************************************************************
*                                                          *
*         EXAMINE CBUF AND FILL IN A PARSE-LIKE PDE        *
*                                                          *
************************************************************
         SPACE
         XC    PARSPDE(8),PARSPDE
         L     R1,CPPLCBUF
         DROP  $CPPL
         LH    R15,0(,R1)          LENGTH+4 OF CBUF
         SH    R15,=H'4'           LENGTH OF CBUF
         LA    R1,4(,R1)           ADDRESS OF FIRST BYTE
         LA    R14,0(R15,R1)       ADDRESS OF LAST BYTE + 1
         BCTR  R14,0               ADDRESS OF LAST BYTE
SCAN1    CLI   0(R14),C' '         FIND LAST NONBLANK
         BNE   SCAN2               BRANCH IF FOUND
         BCTR  R14,0               BACK UP 1 BYTE
         BCT   R15,SCAN1           REDUCE LENGTH BY 1 AND BRANCH
         B     SCANX               WHOLE BUFFER BLANK (NEVER HAPPENS)
SCAN2    CLI   0(R1),C' '          FIND FIRST NONBLANK
         BNE   SCAN3
         LA    R1,1(,R1)           FORWARD 1 BYTE
         BCT   R15,SCAN2           REDUCE LENGTH BY 1 AND BRANCH
         B     SCANX               NO COMMAND (NEVER HAPPENS)
SCAN3    CLI   0(R1),C' '          FIND FIRST BLANK AFTER COMMAND
         BE    SCAN4
         LA    R1,1(,R1)
         BCT   R15,SCAN3           REDUCE LENGTH BY 1 AND BRANCH
         B     SCANX               NO OPERANDS
SCAN4    CLI   0(R1),C' '          FIND FIRST NONBLANK
         BNE   SCAN5
         LA    R1,1(,R1)           FORWARD 1 BYTE
         BCT   R15,SCAN4           REDUCE LENGTH BY 1 AND BRANCH
         B     SCANX               NO OPERANDS
SCAN5    ST    R1,PARSPDE
         STH   R15,PARSPDE+4
         OI    PARSPDE+6,X'80'     OPERAND IS PRESENT
SCANX    EQU   *
         SPACE
************************************************************
*                                                          *
*         GET THE DSNAME ALLOCATED TO EDITFILE             *
*                                                          *
************************************************************
         SPACE
         LA    R2,EFDCBW
         MVC   0(EFDCBL,R2),EFDCB
         LA    R15,EXLEF
         ST    R15,EXLST(,R2)
         LA    R0,JFCB
         ST    R0,0(,R15)
         MVI   0(R15),X'87'
         SPACE
         LA    R1,OPEN
         MVI   0(R1),X'80'
         SPACE
         RDJFCB ((R2)),MF=(E,(1))
         SPACE
         LTR   R15,R15
         BZ    OKJFCB
         SPACE
         PUTLINE PARM=PUTPTPB,OUTPUT=(MSG01,DATA),MF=(E,MYIOPL)
         SPACE
         LA    R15,12
         B     EXIT
OKJFCB   EQU   *
         SPACE
*
*              BUILD THE EDIT COMMAND
*
         LA    R15,EDITLINE
         MVI   0(R15),C' '
         MVC   1(L'EDITLINE-1,R15),0(R15)
         MVC   0(4,R15),=C'EDIT'
         MVI   5(R15),X'7D'
         MVC   6(44,R15),JFCB
         LA    R1,6(,R15)
         LA    R0,44
DSNLOOP  CLI   0(R1),X'40'
         BE    DSNEND
         LA    R1,1(,R1)
         BCT   R0,DSNLOOP
DSNEND   CLI   JFCB+44,X'40'       MEMBER NAME PRESENT?
         BNH   QUOTEND             NO - BRANCH
         MVI   0(R1),C'('          PARENS AROUND MEMBER
         LA    R1,1(,R1)
         LA    R0,44
         MVC   0(8,R1),JFCB+44     MOVE MEMBER NAME
MEMLOOP  CLI   0(R1),X'40'
         BE    MEMEND
         LA    R1,1(,R1)
         BCT   R0,MEMLOOP
MEMEND   MVI   0(R1),C')'          CLOSE PARENS
         LA    R1,1(,R1)
QUOTEND  MVI   0(R1),X'7D'
*                       =C'DATA  OLD NUM   CAPS'
         MVC   2(20,R1),=C'DATA  OLD           '
         CLI   NEWKV+1,2
         BNE   *+10
         MVC   8(3,R1),=C'NEW'
         CLI   NONKV+1,2
         BNE   *+10
         MVC   12(5,R1),=C'NONUM'
         CLI   ASISKV+1,2
         BNE   *+10
         MVC   18(4,R1),=C'ASIS'
         LA    R1,22(,R1)
         SLR   R1,R15              LENGTH IN R1
         LA    R1,4(,R1)           PLUS PREFIX LENGTH
         STH   R1,TOTALL           INITIALIZE TOTALL
         STH   R1,LIST             SET FIRST RECORD PREFIX
         SLR   R0,R0
         STH   R0,LIST+2
         LA    R1,LIST(R1)         POINT TO NEXT RECORD
         ST    R1,NEXTPTR          SAVE NEXT RECORD ADDRESS
         SPACE
*
*              ISOLATE SUBCOMMANDS
*
         LA    R2,PARSPDE
         TM    6(R2),X'80'         PRESENT?
         BZ    SCX                 NO - BRANCH
         L     R4,0(,R2)           POINT TO STRING
         LH    R5,4(,R2)           GET LENGTH OF STRING
         SPACE
         MVI   DELIMITR,C';'       DEFAULT DELIMITER IS SEMICOLON
         SLR   R1,R1
         IC    R1,0(,R4)           GET FIRST CHARACTER
         LA    R1,DELMTAB(R1)      POINT TO ASSOCIATED BYTE IN TABLE
         CLI   0(R1),1             IS IT A SUBSTITUTE DELIMITER
         BNE   GOTDELIM            NO, BRANCH
ALTDELIM MVC   DELIMITR(1),0(R4)   USE FIRST BYTE AS DELIMITER
         LA    R4,1(,R4)           POINT PAST DELIMITER
         BCT   R5,*+8              REDUCE LENGTH BY 1
         B     EXIT0               BRANCH IF NOTHING REMAINS
GOTDELIM MVC   DELIMITR+1(1),DELIMITR MAKE A PAIR
         LA    R14,2               CONSTANT 2
SCNEXT   L     R6,NEXTPTR
         LA    R6,4(,R6)           POINT PAST 2 HALFWORDS
         SLR   R1,R1
SCLOOP   EQU   *
         CR    R5,R14              ARE THERE AT LEAST 2 BYTES LEFT
         BL    SCPAIRX             NO, BYPASS PAIR CHECK
         CLC   0(2,R4),DELIMITR    DELIMITER PAIR?
         BNE   SCPAIRX             NO, BRANCH
         LA    R4,1(,R4)           YES, IGNORE FIRST
         BCTR  R5,0                REDUCE LENGTH BY 1
         B     SCNOTDLM            TREAT SECOND AS NON DELIMITER
SCPAIRX  CLC   0(1,R4),DELIMITR    DELIMITER?
         BE    SCSEMI              YES - BRANCH
SCNOTDLM IC    R0,0(,R4)           PICK UP ONE CHARACTER
         STC   R0,0(,R6)           PUT IT IN OUTPUT AREA
         LA    R4,1(,R4)           POINT TO NEXT INPUT
         LA    R6,1(,R6)           POINT TO NEXT OUTPUT
         LA    R1,1(,R1)           COUNT BYTES
         BCT   R5,SCLOOP           LOOP UNTIL DELIMITER FOUND
SCSEMI   LTR   R1,R1               TWO DELIMITERS IN A ROW
         BZ    SCNULL              YES, IGNORE
         LA    R1,4(,R1)           ADD 4 TO LENGTH
         L     R15,NEXTPTR         POINT TO FIRST BYTE MOVED
         STH   R1,HALF             STORE LENGTH
         MVC   0(2,R15),HALF         IN FIRST HALFWORD
         XC    2(2,R15),2(R15)     ZERO SECOND HALFWORD
         LA    R15,0(R1,R15)       POINT PAST LAST BYTE
         ST    R15,NEXTPTR         SAVE ADDRESS FOR NEXT SEGMENT
SCNULL   LA    R4,1(,R4)           POINT PAST DELIMITER
         LTR   R5,R5               ANY MORE INPUT
         BZ    SCX                 NO, BRANCH
         BCT   R5,SCNEXT           YES, LOOP TO PROCESS NEXT SEGMENT
SCX      LA    R14,LIST
         L     R15,NEXTPTR
         SLR   R15,R14             GET LENGTH
         STH   R15,LISTOTLN
         SPACE
*                             GET AND INITIALIZE THE LSD
         LH    0,LISTOTLN          GETMAIN FOR LIST
         A     0,SP78                          AND LSD (16 BYTES)
         GETMAIN R,LV=(0)
         LR    $LSD,1
         LA    R14,16(,1)          REG 14 --> LIST
         ST    R14,LSDADATA
         ST    R14,LSDANEXT
         SR    R14,R14
         STH   R14,LSDRCLEN
         LH    R14,LISTOTLN
         STH   R14,LSDTOTLN
         SPACE
         BCTR  R14,0               LENGTH FOR EX
         EX    R14,MVLIST          MOVE LIST INTO SUBPOOL 78
         LR    R1,$IOPL
         SPACE
         AIF   (NOT &MVS).SKIP2
         L     R15,16              CVTPTR
         TM    472(R15),X'80'      IS IKJSTCK IN LPA
         BNO   *+12                NO, BRANCH TO LOAD
         L     R15,472(,R15)       YES, LOAD CVTSTCK
         B     SETSTCK             BRANCH AROUND LOAD
.SKIP2   ANOP
         LA    R0,=CL8'IKJSTCK'
         LOAD  EPLOC=(0)
         LR    R15,R0              GET ENTRY POINT ADDRESS
         LA    R15,0(,R15)         ZERO HIGH ORDER BYTE
SETSTCK  ST    R15,PTRSTCK         SAVE ADDRESS OF IKJSTCK
         SPACE
         STACK PARM=(R8),STORAGE=(($LSD),PROCL),ENTRY=(15),MF=(E,(1))
         SPACE
         LTR   R15,R15
         BZ    EXIT0
         L     R15,PTRSTCK
         LR    R1,$IOPL
         STACK PARM=(R8),DELETE=ALL,ENTRY=(15),MF=(E,(1))
         SPACE
         LA    0,L'STACKMSG
         LA    1,STACKMSG
         TPUT (1),(0),R
         LA    R15,16
         B     EXIT
EXIT0    LA    15,0
EXIT     LR    R2,R15
         L     R15,PTRSTCK
         LTR   R15,R15             WAS IKJSTCK LOADED
         BNP   EXITX               NO, BRANCH
         LA    R0,=CL8'IKJSTCK'
         DELETE EPLOC=(0)
EXITX    LR    R15,R2              RESTORE RETURN CODE
         LR    1,13
         L     0,@SIZE
         L     13,4(,13)
         LR    R2,R15
         FREEMAIN R,A=(1),LV=(0)
         LR    R15,R2
         LM    0,12,20(13)
         L     14,12(,13)
         BR    14
         SPACE 1
************************************************************
*                                                          *
*        CONSTANTS                                         *
*                                                          *
************************************************************
         SPACE
MVLIST   MVC   16(0,1),LIST        MOVE LIST TO SUBPOOL 78 AFTER LSD
         SPACE
MODEL    PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
MODELL   EQU   *-MODEL
         SPACE
MSG01    DC   0H'0',AL2(MSG01L,0),C'FILENAME EDITFILE IS NOT ALLOCATED'
MSG01L   EQU   *-MSG01
         SPACE
STACKMSG DC    CL28'STACK ERROR'
SP78     DC    0F'0',AL1(78),AL3(16) SUBPOOL 78
LYSTOTLN DC    0H'0',AL2(LYSTLEN)  T O T A L    L E N G T H
LYST     DC   AL2(39+4,0),CL39'TERM LINES(26) LINESIZE(73) INPUT(ATTN)'
*        DC   AL2(XX+4,0),CLXX'ANOTHER COMMAND CAN BE PLACED HERE'
*        DC   AL2(YY+4,0),CLYY'AND OTHERS. LISTOTLN MAX IS 256'
LYSTLEN  EQU   *-LYST
         SPACE
         PRINT NOGEN
EFDCB    DCB   DDNAME=EDITFILE,MACRF=(GL),DSORG=PS,EXLST=0
EFDCBL   EQU   *-EFDCB
         PRINT GEN
         SPACE
         LTORG
DELMTAB  DC    0D'0'
         DC    129AL1(1)
         DC    127AL1(0)           ALPHANUMERICS ARE NOT DELIMITERS
         ORG   DELMTAB+X'40'
         DC    AL1(0)              BLANK IS NOT A DELIMITER
         ORG   DELMTAB+C'%'
         DC    AL1(0)              PERCENT SIGN NOT A DELIMITER
         ORG   DELMTAB+C'$'
         DC    AL1(0)              DOLLAR SIGN NOT A DELIMITER
         ORG   DELMTAB+C'@'
         DC    AL1(0)              AT SIGN NOT A DELIMITER
         ORG   DELMTAB+C'#'
         DC    AL1(0)              POUND SIGN NOT A DELIMITER
         ORG
PATCH    DC    4D'0'               PATCH AREA
         SPACE
DDNAM    EQU   40                  DCB OFFSET
EXLST    EQU   36                  DCB OFFSET
         DC    0D'0'               END MAIN CSECT
         SPACE
************************************************************
*                                                          *
*        DSECTS                                            *
*                                                          *
************************************************************
         SPACE
@DATA    DSECT
         DS    18F
DOUBLE   DS    D
HALF     EQU   DOUBLE,2
LINKAREA DS    2F
PTRSTCK  DS    F
MYECB    DS    F
OPEN     DS    F
EFDCBW   DS    0D,(EFDCBL)X
EXLEF    DS    F
JFCB     DS    0D,176X
MYIOPL   DS    4F
MYSTPB   DS    8F
TOTALL   DS    H
LISTOTLN DS    H
DELIMITR DS    C
DELIMIT2 DS    C
PARSPDE  DS    2F
NONKV    DS    H
NEWKV    DS    H
ASISKV   DS    H
NEXTPTR  DS    F
PUTPTPB  DS    3F
LIST     DS    0D,F
EDITLINE DS    CL82       4+1+1+44+10+1+1+5+1+3+1+5+1+4
         DS    1024X
         DS    0D
@DATAL   EQU   *-@DATA
         SPACE
         IKJCPPL
         SPACE 2
         IKJIOPL
         SPACE 2
         IKJLSD
         SPACE 2
         IKJSTPB
         SPACE 2
         IKJECT
         SPACE 2
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
