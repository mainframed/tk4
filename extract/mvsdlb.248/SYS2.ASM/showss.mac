         TITLE '   S H O W S S     '
***********************************************************************
*                                                                     *
*        'SHOWSS' TSO COMMAND                                         *
*                                                                     *
***********************************************************************
         SPACE
*  ATTRIBUTES. RE-ENTRANT.
*   IF 'ZERO' OPERAND IS TO BE USED, MUST BE AUTHORIZED.
*  DESCRIPTION.
*   THIS TSO COMMAND DISPLAYS THE NAMES OF ALL SUBSYSTEMS IN THE
*   SYSTEM AND THE ADDRESSES OF EACH SUBSYSTEM'S SSCT ENTRY AND SSVT.
*   MAKE SURE YOU CHANGE TABLE AT LABEL "SYSP"
*   OPTIONALLY, THE COMMAND WILL ZERO THE SSVT ADDRESS IN THE SSCT
*   FOR A SPECIFIED SUBSYSTEM, THUS DISCONNECTING THE SUBSYSTEM
*   FROM THE ACTIVE SUBSYSTEM INTERFACE.  THIS CAN BE USED TO GET
*   AROUND THE JES2 'SUBSYSTEM INTERFACE NOT DORMANT' MESSAGE.
*   THE SSVT IS NOT FREEMAINED.
*  LOG OF CHANGES.
*   15JUN82 - PARSE ADDED.  ZERO KEYWORD ADDED.
         SPACE
SHOWSS   START
         USING *,R12
         B     @PROLOG-*(,15)
         DC    AL1(11),CL11'SHOWSS '
         DC    CL16' &SYSDATE &SYSTIME '
@SIZE    DC    0F'0',AL1(0),AL3(@DATAL)
@PROLOG  STM   14,12,12(R13)
         LR    R12,R15
         LR    R2,R1
         USING CPPL,R2
         L     R0,@SIZE
         GETMAIN R,LV=(0)
         LR    R9,R1
         USING @DATA,R9
         LR    R0,R1               AREA TO BE CLEARED
         L     R1,@SIZE            LENGTH TO BE CLEARED
         SR    R14,R14             ZERO FROM ADDRESS
         SR    R15,R15             ZERO FROM LENGTH
         MVCL  R0,R14              ZERO IT ALL
         SPACE
         ST    R13,4(,R9)
         ST    R9,8(,R13)
         LR    R13,R9
         SPACE
************************************************************
*                                                          *
*        CHECK USERID                                      *
*                                                          *
************************************************************
         SPACE
         L     R1,548              PSAAOLD
         L     R15,172(,R1)        ASCBJBNI
         LTR   R15,R15             IS THIS A JOB
         BNZ   IMPLEXEC            YES, QUIT
         L     R15,60(,R1)         ASCBTSB
         LTR   R15,R15             IS THIS A TSO SESSION
         BZ    PROCEED             NO, BRANCH IF STARTED TASK
AUTHID   L     R1,16               CVTPTR
         L     R15,0(,R1)          TCB WORDS CVTTCBP
         L     R15,4(,R15)         CURRENT TCB
         L     R1,180(,R15)        TCBJSCB
         L     R1,264(,R1)         JSCBPSCB
         LTR   R1,R1               ANY PSCB?
         BZ    IMPLEXEC            NO - NOT A TSO SESSION
         USING PSCB,R1
*        TM    PSCBATR1,PSCBCTRL   OPERATOR
*        BZ    IMPLEXEC            NO - BRANCH
         CLC   PSCBUSER(2),SYSP    SYSTEMS SUPPORT USERID
         BE    PROCEED             YES, BRANCH
         LA    R15,USERIDS
AUTHLOOP CLI   0(R15),0            END OF LIST?
         BE    IMPLEXEC            YES, NOT AUTHORIZED
         CLC   PSCBUSER(7),0(R15)
         BE    PROCEED
         LA    R15,8(,R15)         POINT TO NEXT USERID
         B     AUTHLOOP            GO CHECK IT
         DROP  R1                  PSCB
SYSP     DC    C'SY'               1ST 2 OF SYSTEMS TSOIDS
USERIDS  DC    0D'0'               ALIGN FOR EASY ZAPS
         DC    8D'0'               ROOM FOR 8 USERIDS
         DC    H'0'                END OF USERID LIST
         SPACE
IMPLEXEC EQU   *
         L     R1,CPPLCBUF
         XC    2(2,R1),2(R1)       SET CBUF TO IMPLICIT EXEC
         L     R1,CPPLECT          GET ECT ADDRESS
         USING ECT,R1
         CLI   ECTSCMD,C' '        IS THIS A SUBCOMMAND
         BNE   *+10                YES - SAY SUBCOMMAND NOT FOUND
         MVC   ECTPCMD,=CL8'EXEC'  NO  - SAY COMMAND NOT FOUND
         DROP  R1                  ECT
         LR    R1,R13
         L     R0,@SIZE
         L     R13,4(,R13)
         FREEMAIN R,A=(1),LV=(0)
         L     R1,24(,R13)         RESTORE CPPL POINTER
         LA    R15,12(,R13)        POINT TO 2-WORD XCTL PARM
         XC    0(8,R15),0(R15)     CLEAR IT
         XCTL  (2,12),EP=EXEC,SF=(E,(15))
PROCEED  EQU   *
         SPACE 1
************************************************************
*                                                          *
*        SET UP IOPL FOR PUTLINE                           *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYIOPL
         USING IOPL,R15
         MVC   IOPLUPT(4),CPPLUPT
         MVC   IOPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,IOPLECB
         XC    MYECB,MYECB
         LA    R0,MYPTPB
         ST    R0,IOPLIOPB
         DROP  R15                 IOPL
         SPACE
         L     R15,16              LOAD CVT POINTER
         TM    444(R15),X'80'      IS PUTLINE LOADED? (VS2)
         BNO   PUTLOAD             NO - BRANCH TO LOAD
         L     R15,444(,R15)       YES - USE CVTPUTL
         B     PUTLODED            BRANCH AROUND LOAD
PUTLOAD  LA    R0,=CL8'IKJPUTL '
         LOAD  EPLOC=(0)
         LR    R15,R0              GET ENTRY ADDRESS
         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE
PUTLODED ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS
         SPACE
************************************************************
*                                                          *
*        SET UP PPL FOR PARSE                              *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYPPL
         USING PPL,R15
         MVC   PPLUPT(4),CPPLUPT
         MVC   PPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,PPLECB
         XC    MYECB,MYECB
         L     R0,=A(SSPCL)
         ST    R0,PPLPCL
         LA    R0,MYANS
         ST    R0,PPLANS
         MVC   PPLCBUF(4),CPPLCBUF
         ST    R9,PPLUWA
         DROP  R15                 PPL
         SPACE 1
************************************************************
*                                                          *
*        CALL THE PARSE SERVICE ROUTINE                    *
*                                                          *
************************************************************
         SPACE 1
         LR    R1,R15              POINT TO PPL
         L     R15,16              CVTPTR
         TM    524(R15),X'80'      IF HI ORDER BIT NOT ON
         BNO   PARSELNK               THEN DO LINK, NOT CALL
         L     R15,524(,R15)       CVTPARS
         BALR  R14,R15             CALL IKJPARS
         B     PARSEEXT            SKIP AROUND LINK
PARSELNK EQU   *
         LINK  EP=IKJPARS,SF=(E,LINKAREA)
PARSEEXT EQU   *
         SPACE 1
         LTR   R15,R15             PARSE SUCCESSFUL?
         BZ    PARSEOK             YES, BRANCH
         LA    R1,MSG01
         LA    R0,L'MSG01
         BAL   R14,PUTMSG
         B     EXIT12
PARSEOK  EQU   *
         L     R3,MYANS
         USING IKJPARMD,R3
         SPACE 1
************************************************************
*                                                          *
*        IF ZERO(NAME) IS SPECIFIED, GET THE NAME          *
*                                                          *
************************************************************
         SPACE
         MVC   ZNAM,=CL4' '
         TM    ZERO+6,X'80'
         BZ    NAMEX
         L     R15,ZERO
         LH    R1,ZERO+4
         BCTR  R1,0
         B     *+10
         MVC   ZNAM(0),0(R15)
         EX    R1,*-6
NAMEX    EQU   *
         SPACE 1
************************************************************
*                                                          *
*        DISPLAY THE SUBSYSTEMS                            *
*                                                          *
************************************************************
         SPACE
         L     R1,16               CVTPTR
         L     R4,X'128'(,R1)      CVTJESCT
         USING JESCT,R4
         LA    R4,JESSSCT-(SSCTSCTA-SSCT) POINT TO SSCT HEAD
         USING SSCT,R4
NEXTSSCT EQU   *
         ICM   R4,15,SSCTSCTA      POINT TO NEXT SSCT
         BZ    DONESSCT            IF END, EXIT
         MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE
         MVC   LINE(4),SSCTSNAM    SUBSYSTEM NAME
         MVC   LINE+4(26),=C'  SSCT XXXXXX  SSVT XXXXXX'
         ST    R4,FULL             SAVE SSCT ADDRESS
         SPACE
         LA    R1,FULL+1
         LA    R15,LINE+11
         LA    R0,3
         BAL   R14,UNPACK
         SPACE
         LA    R1,SSCTSSVT+1
         LA    R15,LINE+24
         LA    R0,3
         BAL   R14,UNPACK
         SPACE
         L     R1,SSCTSSVT
         LTR   R1,R1
         BNZ   *+10
         MVC   LINE+32(9),=C'(DORMANT)'
         SPACE
         LA    R1,LINE
         LA    R0,50
         BAL   R14,PUTLINE
         SPACE
         CLI   ZNAM,C' '           IS ANY SUBSYSTEM TO BE UNPLUGGED
         BE    ZERO9               NO
         CLC   SSCTSNAM,ZNAM       IS THIS SUBSYSTEM TO BE UNPLUGGED
         BNE   ZERO9               NO
         SPACE
************************************************************
*                                                          *
*        ZERO THE SSVT ADDRESS IF REQUESTED                *
*                                                          *
************************************************************
         SPACE
         L     R15,SSCTSSVT        GET ADDRESS TO BE ZEROED
         LTR   R15,R15             IS IT ALREADY ZERO
         BZ    ZALREADY            YES, BRANCH
         SPACE
         TESTAUTH FCTN=1
         LTR   R15,R15
         BNZ   ZERO9
         SPACE
         CLI   WTORKW+1,2
         BE    WTORX
         MVC   WTORW(CONFIRML),CONFIRM
         MVC   WTORW+12+30,SSCTSNAM
         SPACE
ZWTOR    XC    ECB,ECB
         MVI   REPLY,C' '
         WTOR  ,REPLY,,ECB,MF=(E,WTORW)
         SPACE
         WAIT  ECB=ECB
         SPACE
         OI    REPLY,X'40'         CAPS
         CLI   REPLY,C'N'
         BE    ZERO9
         CLI   REPLY,C'Y'
         BNE   ZWTOR
WTORX    EQU   *
         SPACE
         LA R0,0
         LA R1,1
         SVC 244
         MODESET KEY=ZERO
         SPACE
         XC    SSCTSSVT,SSCTSSVT   UNPLUG THE SUBSYSTEM
         SPACE
         MODESET KEY=NZERO
         LA R1,0
         SVC 244
         SPACE
ZERO9    B     NEXTSSCT
         SPACE
ZALREADY LA    R1,ALREADY
         LA    R0,L'ALREADY
         BAL   R14,PUTLINE
         B     ZERO9
         SPACE
************************************************************
*                                                          *
*        SUBROUTINES                                       *
*                                                          *
************************************************************
         SPACE
UNPACK   MVC   1(1,R15),0(R1)      MOVE BYTE
         UNPK  0(3,R15),1(2,R15)   UNPACK
         TR    0(2,R15),UNPACKT-240
         LA    R15,2(,R15)         INCREMENT OUTPUT PTR
         LA    R1,1(,R1)           INCREMENT INPUT PTR
         BCT   R0,UNPACK           DECREMENT LENGTH, THEN LOOP
         MVI   0(R15),C' '         BLANK THE TRAILING BYTE
         BR    R14                 RETURN TO CALLER
         SPACE
************************************************************
*                                                          *
*        PUTMSG ROUTINE                                    *
*                                                          *
************************************************************
         SPACE
PUTMSG   STM   R14,R1,PUTLINS
         XC    MYOLD(8),MYOLD
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPM
         LA    R14,1               NO. OF MESSAGE SEGMENTS
         ST    R14,MYOLD
         LA    R14,MYSEG1          POINT TO 1ST SEGMENT
         ST    R14,MYOLD+4
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         LA    R15,MYSEG1+4
         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?
         BE    *+16                YES - BRANCH
         LA    R14,1(,R14)         ADD 1 TO LENGTH
         MVI   0(R15),C' '         INSERT LEADING BLANK
         LA    R15,1(,R15)         BUMP POINTER
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,PUTLINS
         BR    R14
         SPACE
************************************************************
*                                                          *
*        PUTLINE ROUTINE                                   *
*                                                          *
************************************************************
         SPACE
PUTLINE  STM   R14,R1,PUTLINS
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPB
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,PUTLINS
         BR    R14
         SPACE
************************************************************
*                                                          *
*        TERMINATION                                       *
*                                                          *
************************************************************
         SPACE
DONESSCT EQU   *
         SPACE 1
EXIT0    SR    15,15
         B     EXIT
EXIT12   LA    R15,12
EXIT     LR    R1,R13
         L     R0,@SIZE
         L     R13,4(,R13)
         LR    R2,R15
         FREEMAIN R,A=(1),LV=(0)
         LR    R15,R2
         LM    0,12,20(R13)
         L     R14,12(,R13)
         BR    R14
         SPACE
************************************************************
*                                                          *
*        CONSTANTS                                         *
*                                                          *
************************************************************
         SPACE
         LTORG
         SPACE
MODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
MODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
UNPACKT  DC    C'0123456789ABCDEF' TRANSLATE TABLE
         SPACE
CONFIRM  WTOR  'CONFIRM REQUEST TO DISCONNECT XXXX SUBSYSTEM (Y OR N)',X
               VREPLY,3,VECB,ROUTCDE=(2),MF=L
CONFIRML EQU   *-CONFIRM
VREPLY   EQU   0
VECB     EQU   0
         SPACE
MSG01    DC    C'ERROR IN PARSE'
AUTHMSG  DC    C'ENVIRONMENT IS NOT APF AUTHORIZED - ZERO IGNORED'
ALREADY  DC    C'SSCTSSVT IS ALREADY ZERO'
         DC    0D'0'
         SPACE
************************************************************
*                                                          *
*        PARSE PCL                                         *
*                                                          *
************************************************************
         SPACE
         PRINT NOGEN
SSPCL    IKJPARM
ZEROKW   IKJKEYWD
         IKJNAME 'ZERO',SUBFLD=ZEROSF
WTORKW   IKJKEYWD
         IKJNAME 'WTOR'
         IKJNAME 'NOWTOR'
ZEROSF   IKJSUBF
ZERO     IKJIDENT 'SUBSYSTEM NAME',                                    X
               FIRST=ALPHA,OTHER=ALPHANUM,MAXLNTH=4,                   X
               PROMPT='NAME OF SUBSYSTEM TO BE DISCONNECTED'
         IKJENDP
         PRINT GEN
         SPACE
************************************************************
*                                                          *
*        DSECTS                                            *
*                                                          *
************************************************************
         SPACE
@DATA    DSECT
         DS    18F                 REGISTER SAVEAREA
DOUBLE   DS    D
LINKAREA DS    2F
FULL     DS    F
LINE     DS    CL50
MYECB    DS    F                  USED BY PUTLINE AND PARSE
MYIOPL   DS    4F                 USED BY PUTLINE ROUTINE
MYPPL    DS    7F                 USED BY PARSE
MYANS    DS    F                  USED BY PARSE
MYPTPB   DS    3F                 USED BY PUTLINE ROUTINE
MYPUTLEP DS    F                  USED BY PUTLINE ROUTINE
MYOLD    DS    2F                 USED BY PUTLINE ROUTINE
MYSEG1   DS    2H,CL100           USED BY PUTLINE ROUTINE
PUTLINS  DS    4F                 USED BY PUTLINE ROUTINE
ZNAM     DS    CL4
ECB      DS    F
REPLY    DS    F
WTORW    DS    0F,CL80
         DS    0D
@DATAL   EQU   *-@DATA
         SPACE
         IKJCPPL
         SPACE
         IKJIOPL
         SPACE
         IKJPPL
         SPACE
         IKJPSCB
         SPACE
         IKJECT
         SPACE
         IEFJESCT
         SPACE
         IEFJSCVT
         SPACE
         IEFJSSVT
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
