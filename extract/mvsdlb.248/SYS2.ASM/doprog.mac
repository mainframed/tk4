*************************************************************JFS03NOV77
*             LATEST UPDATE DATE                             JFS03NOV77
         LCLC  &DATE                                         JFS03NOV77
&DATE    SETC  '18APR80'                                     JFS03NOV77
*************************************************************JFS03NOV77
DOPG TITLE 'NASA/GSFC -- DOPROG/DOPGM (TSO) COMMAND PROCESSOR (&DATE)'
*                                                            JFS03NOV77
**
** THE DOPROG TSO COMMAND WAS
** DESIGNED AND DEVELOPED BY J. SCHINDLER (CSC), MARCH 1975
**   THE DOPROG COMMAND IS BASED ON AN EARLIER VERSION THAT WAS
**   DESIGNED AND DEVELOPED BY
**       GENE CZARCINSKI
**       NASA, GODDARD SPACE FLIGHT CENTER
**       GREENBELT, MARYLAND
**
** UPDATED 10APR77, GENE CZARCINSKI, NASA/GSFC (GT00501)
**      . RENAME CSECT FROM 'GSFTSODO' TO 'DOPROG' WITH AN
**        ENTRY POINT OF DOPGM ... MORE CONSISTANCY AND
**        CLEANER CMDLIB
**      . CHANGE BASE REG INIT CODE .. IT IS FLAKY AND MAY CAUSE
**        ERROR*********
** UPDATED 03NOV77, J. SCHINDLER, (PAC) CSC
**      . INCLUDED CODE SO THAT THE LATEST UPDATE DATE COULD BE
**        CHANGED EASILY
**      . CHANGED THE LOGIC SO THAT THE 2 BYTES FROM THE ATTACH
**        ECB IS USED AS THE RETURN CODE THAT IS PASSED ON EXIT
**        FROM THIS COMMAND PROCESSOR
** UPDATED 18APR80, B. GODFREY, AFDSC
**      . BALR TO IKJPARS INSTEAD OF LINK, FOR MVS
**      . REPLACE REGS MACRO WITH 16 EQUATES
**      . USE UPTPREFX INSTEAD OF PSCBUSER. ADDED IKJUPT MACRO.
**
**
** ATTR - RENT
** ALIAS - DOPGM
**
** COMMAND -
**
** DOPROG/DOPGM 'LOAD MOD NAME' ''PARMS'' TASKLIB/LIB('DSLIST')
**               RC/NORC/ALLRC
**    'LOAD MOD NAME' - NAME OF THE LOAD MODULE TO BE EXECUTED.
**    ''PARMS'' - PARM FIELD TO BE PASSED TO THE LOAD MODULE, QUOTED
**               STRING.
**    TASKLIB('DSLIST') - SPECIFIES THE DATA SET NAME(S) THAT ARE
**             CONTENATED AND USED FOR THE TASK LIBRARY.
**    LIB('DSLIST') - SAME AS TASKLIB
**    RC - SPECIFIES THAT THE NON-ZERO RETURN CODE FROM THE EXECUTED
**              PROGRAM IS TO BE PRINTED.
**    NORC - SPECIFIES THAT THE RETURN CODE IS NOT TO BE PRINTED.
**          (DEFAULT).
**    ALLRC - SPECIFIES THAT THE RETURN CODE IS TO BE PRINTED.
**      NOTE - THE RETURN CODE FROM THE EXECUTED PROGRAM IS ALWAYS
**             PASSED. IF THIS COMMAND PROCESSOR ENCOUNTERS AN ERROR
**             OR AN ATTENTION IS ENTERED, THE RETURN CODE IS 16.
**
**
** THIS COMMAND PROCESSOR IS DESIGNED TO LOAD AND EXECUTE (ATTACH) A
** PROGRAM IN ONE OF THE SYSTEM LINK LIBRARIES OR A USER
** LIBRARY (TASKLIB).
**
DOPROG   CSECT
         ENTRY DOPGM
*        REGS
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
**
** FLAGS SETTINGS -
**
**       1... ... - RC (PRINT NON-ZERO RETURN CODES)
**       .1.. .... - ALLRC (PRINT ALL RETURN CODES)
**       ..1. .... - TASKLIB SPECIFIED
**       ...1 .... - DSNAME INPUT IN QOUTES
**       .... 1111 - NOT USED
**
**
** FLAGS EQUATES -
**
RCFLG    EQU   B'10000000' PRINT NON-ZERO RC FLAG
ALLRCFLG EQU   B'01000000' PRINT ALL RC FLAG
TASKFLG  EQU   B'00100000' TASKLIB WAS SPECIFIED
QFLG     EQU   B'00010000' DSNAME WAS INPUT IN QUOTES FLAG
**
DOPGM    SAVE  (14,12),,DOPROG/DOPGM-GT00501-&DATE
         LA    R10,0(,R15)    *** INIT BASE REGS ***        GT00501
         LA    R11,2048                                     GT00501
         AR    R11,R11                                      GT00501
         AR    R11,R10                                      GT00501
         USING DOPROG,R10,R11
         LR    R9,R1 SAVE CPPL PTR
         USING CPPL,R9
         LA    R0,RENTLEN LOAD LENGTH OF RENT DSECT
         GETMAIN R,LV=(0) SP=0
         USING SAVE,R1
         ST    R1,8(R13)
         ST    R13,4(R1)
         LR    R13,R1
         DROP  R1
         USING SAVE,R13
**
** INIT PARSE PARM LIST (PPL)
**
BEGIN    LA    R8,PARSEPL
         USING PPL,R8
         MVC   PPLUPT,CPPLUPT USER PROFILE TABLE
         MVC   PPLECT,CPPLECT ENVIRONMENT CONTROL TABLE
         LA    R2,ECB
         ST    R2,PPLECB ECB
         LA    R2,ANSWER
         ST    R2,PPLANS ADDR OF PDL
         MVC   PPLCBUF,CPPLCBUF COMMAND BUFFER
         XC    PPLUWA,PPLUWA USER WORK AREA ADDR
         MVC   PPLPCL,=A(PPLPARM) PARM CONTROL LIST
**
** INIT STACK IOPL
**
         LA    R8,STAKIOPL
         USING IOPL,R8
         MVC   IOPLUPT,CPPLUPT
         MVC   IOPLECT,CPPLECT
         LA    R2,STAKECB
         ST    R2,IOPLECB
** IOPLIOPB WILL BE INIT BY STACK MACRO
**
** INIT IOPL
**
         LA    R8,IOPLA
         USING IOPL,R8
         MVC   IOPLUPT,CPPLUPT
         MVC   IOPLECT,CPPLECT
         LA    R2,ECB
         ST    R2,IOPLECB
** IOPLIOPB WILL BE INIT BY MACRO
**
** INIT DAIR PARM LIST
         LA    R8,DAIRPL
         USING DAPL,R8
         MVC   DAPLUPT,CPPLUPT
         MVC   DAPLECT,CPPLECT
         LA    R2,ECB
         ST    R2,DAPLECB
         MVC   DAPLPSCB,CPPLPSCB PROTECTED STEP CONTROL BLOCK
         LA    R2,DAIRPB
         ST    R2,DAPLDAPB ADDR OF DAIR PARM BLOCK
**
** SAVE PREFIX AND LENGTH WITH PERIOD (.)
**
         L     R15,CPPLUPT
         SR    R3,R3
         IC    R3,UPTPREFL-UPT(,R15)  LENGTH OF PREFIX
         LA    R15,UPTPREFX-UPT(,R15) ADDRESS OF PREFIX
         LR    R4,R3
         BCTR  R3,R0
         LA    R14,USERID
         EX    R3,MOVE
*MOVE    MVC   0(0,R14),0(R15)
         LA    R3,USERID(R4)
         MVI   0(R3),C'.' MOVE IN PERIOD
         LA    R4,1(R4) FOR PERIOB
         STH   R4,USERIDL
         DROP  R8,R9
**
** INIT PARM BLOCK, ETC.
**
         MVC   PTPB(PTREFL),PTREF INIT PUTLINE PARM BLOCK
         MVC   PGPB(PGREFL),PGREF INIT PUTGET PARM BLOCK
         MVC   STAK(STAKREFL),STAKREF INIT STACK PARM BLOCK
         XC    NODDNS,NODDNS INIT NO. OF DDNAMES SPECIFIED BY TASKLIB
         XC    ANSWER1,ANSWER1
         MVI   FLAGS,0
         MVC   EPENTRY(4),=Y(1,58)
         MVC   EPNAME,BLANKS
         LA    R2,1
         ST    R2,OLD ONLY ONE SEGMENT
**
** PARSE THE COMMAND
**
         XC    ECB,ECB
         LA    R1,PARSEPL
         L     R15,16              CVTPTR
         TM    524(R15),X'80'      IS IKJPARS IN LPA ?
         BNO   PARSELNK            IF NOT, DO LINK
         L     R15,524(,R15)       GET ADDRESS OF IKJPARS
         BALR  R14,R15             CALL PARSE SERVICE ROUTINE
         B     PARSELTR            BRANCH AROUND LINK
PARSELNK EQU   *
         LINK  EP=IKJPARS LINK TO PARSE
PARSELTR LTR   R15,R15
         BZ    PARSEOK
         LA    R0,MSG01
         BAL   R14,PUTLINE PARSE ERROR
         B     ERRORRTN
PARSEOK  DC    0H'0'
         L     R12,ANSWER
         USING PDL,R12
         STM   R14,R12,STAXSAVE+12 SAVE REGS SO STAXEXIT CAN USE
**             PROGRAM BASE REGS
         MVC   STAXLIST(STAXREFL),STAXREF
         LA    R2,STAXSAVE
         STAX  STAXEXIT,USADDR=(R2),MF=(E,STAXLIST)
         CLI   RCKEYWD+1,2 TEST FOR NO RC
         BE    TESTAKW GO TEST FOR TASK LIB
         BH    SETALLFL
         OI    FLAGS,RCFLG
         B     TESTAKW GO TEST FOR TASK LIB
SETALLFL OI    FLAGS,ALLRCFLG
TESTAKW  DC    0H'0'
         CLI   TASKEYWD+1,0 TEST FOR TASKLIB
         BE    MOVEEP
**
**INIT PARSEPL WITH DIFFERENT ANSWER ADDR AND COMMAND BUFFER IN
** CASE THE DATA SET(S) WHOSE NAMES ARE SPECIFIED BY THE TASKLIB
** KEYWORD ARE NOT IN THE CATALOG, CANT BE ALLOCATED, ETC.
**
         OI    FLAGS,TASKFLG
         LA    R2,ANSWER1
         ST    R2,PARSEPL+16
         LA    R2,CMDLEN
         ST    R2,PARSEPL+20
         MVC   PARSEPL+12,=A(DSNPPL)
         LA    R9,TASKDSNA USE R9 AS BASE FOR DSNAME PDE
TASKLP1  DC    0H'0'
         NI    FLAGS,255-QFLG
         L     R15,0(R9) LOAD ADDR OF DSNAME
         LTR   R15,R15 TEST FOR DSNAME
         BNZ   TASKB
**
** DATA SET NAME ERROR -- PROBABLY MEMBER NAME ONLY
**
         TM    14(R9),B'10000000' TEST FOR MEMBER NAME
         BO    TASKA
         LA    R0,MSG02 INVALID DSNAME
         BAL   R14,PUTLINE
         B     TASKPRMT GO PROMPT FOR ANOTHER DSNAME
TASKA    OI    FLAGS,QFLG SO ''( ... )'' WILL BE PRINTED
         LA    R14,CMDBUF
         MVI   0(R14),C'('
         LA    R14,1(R14)
         LA    R2,1
         LH    R3,12(R9) LOAD LENGTH OF MEMBER NAME
         AR    R2,R3
         BCTR  R3,R0
         L     R15,8(R9) LOAD ADDR OF MEMBER NAME
         EX    R3,MOVE
         LA    R14,1(R3,R14)
         MVI   0(R14),C')'
         LA    R2,1(R2)
         STH   R2,CMDOFF
         LA    R0,CMDOFF
         LA    R1,MSG03
         BAL   R14,MSGOUT GO OUTPUT 'DATA SET --- INVALID'
         B     TASKPRMT GO PROMPT FOR ANOTHER DATA SET NAME
**
** DATA SET NAME WAS SPECIFIED, IGNORE MEMBER NAME IF SPECIFIED.
**
TASKB    DC    0H'0'
         TM    6(R9),B'01000000' TEST FOR QUOTES
         BZ    TASKC
         OI    FLAGS,QFLG SET QUOTES FLAG
TASKC    LH    R2,4(R9) LOAD LENGTH OF DATA SET NAME
         STH   R2,DSNLEN
         BCTR  R2,R0
         LA    R14,DSNAME R15= ADDR OF INPUT DSNAME
         EX    R2,MOVE
**
** ALLOC DSNAME
**
         LA    R8,DAIRPB
         USING DAPB08,R8
         MVC   DA08CD,=X'0008'
         XC    DA08FLG(6),DA08FLG
         LA    R2,DSNLEN
         ST    R2,DA08PDSN
         MVI   DA08DDN,C' '
         MVC   DA08DDN+1(23),DA08DDN
         XC    DA08BLK(16),DA08BLK
         MVI   DA08MNM,C' '
         MVC   DA08MNM+1(15),DA08MNM
         MVI   DA08DSP1,B'00001000' SHR
         MVI   DA08DPS2,B'00001000' KEEP
         MVI   DA08DPS3,B'00001000' KEEP
         XC    DA08CTL(5),DA08CTL
         TM    FLAGS,QFLG TEST FOR QUOTE
         BO    *+8
         OI    DA08CTL,B'00100000' PREFIX USER ID
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00 LINK TO DAIR
         LTR   R15,R15
         BZ    TESTPDS
         CH    R15,=H'8' TEST FOR CATALOG ERROR
         BNE   TASKDAER
         CLC   DA08DARC,=X'170C'
         BNE   TASKCTER
         TM    FLAGS,QFLG TEST FOR QUOTES
         BO    TASKDAER
**
** SINCE THE DSNAME IS NOT IN QUOTES, APPEND .LOAD AND TRY ALLOC AGAIN
**
         LH    R2,DSNLEN
         LA    R3,DSNAME(R2)
         MVC   0(5,R3),=C'.LOAD'
         LA    R2,5(R2)
         STH   R2,DSNLEN
         XC    DA08DARC(4),DA08DARC
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00 LINK TO DAIR
         LTR   R15,R15
         BZ    TESTPDS
         LH    R2,DSNLEN
         SH    R2,=H'5' FOR .LOAAD
         STH   R2,DSNLEN
         CH    R15,=H'8' TEST FOR CATALOG ERROR
         BNE   TASKDAER
TASKCTER DC    0H'0' CATALOG ERROR
         LA    R0,DSNLEN
         LA    R1,MSG06 DSNAME NOT IN CATALOG
         BAL   R14,MSGOUT
         B     TASKPRMT GO PROMPT
**
** ALLOCATION ERROR
**
TASKDAER DC    0H'0'
         ST    R15,SAVER15
         LA    R0,DSNLEN
         LA    R1,MSG25
         BAL   R14,MSGOUT
         L     R15,SAVER15
         CH    R15,=H'12'
         BH    TESTDARC
         MVC   WORKBUFF(L'MSG07),MSG07
         LA    R6,L'MSG07+8
         STH   R6,WORKLEN
         XC    WORKOFF,WORKOFF
         LH    R2,DA08DARC
         LA    R4,4
         SR    R5,R5
         LA    R6,WORKBUFF+L'MSG07-1
TASKLP2  SRDL  R2,4
         SRL   R3,28
         IC    R5,TABLE(R3)
         STC   R5,0(R4,R6)
         BCT   R4,TASKLP2
         LA    R0,WORKLEN
         BAL   R14,PUTLINE
         B     TASKPRMT
TESTDARC DC    0H'0'
         CH    R15,=H'16'
         BH    TSTDARC1
         LA    R0,MSG26  ALLOCATIONS EXCEEDED
         BAL   R14,PUTLINE
         B     TASKPRMT
TSTDARC1 DC    0H'0'
         MVC   WORKBUFF(L'MSG27),MSG27
         CVD   R15,DWORK
         UNPK  DWORK(3),DWORK+6(2)
         OI    DWORK+2,C'0'
         MVC   WORKBUFF+L'MSG27(2),DWORK+1
         LA    R2,L'MSG27+6
         STH   R2,WORKLEN
         XC    WORKOFF,WORKOFF
         LA    R0,WORKLEN
         BAL   R14,PUTLINE
         B     TASKPRMT
**
** DATA SET IS ALLOCATED, TEST FOR PDS.
**
TESTPDS  TM    DA08DSO,B'00000010' TEST FOR PDS
         BO    SAVEDDN
         LA    R0,DSNLEN
         LA    R1,MSG13
         BAL   R14,MSGOUT DS IS NOT PDS
         LA    R1,DA08DDN
         BAL   R14,FREEDDN GO FREE DDNAME
         B     TASKPRMT
SAVEDDN  LH    R2,NODDNS SAVE ALLOCATED DDNAME
         SLL   R2,3 MULTIPLY BY 8
         LA    R3,DDNAMES(R2)
         MVC   0(8,R3),DA08DDN SAVE DDNAME
         DROP  R8
         LH    R2,NODDNS
         LA    R2,1(R2)
         STH   R2,NODDNS
         CH    R2,=H'10'
         BL    TASKENLP
         CLI   24(R9),X'FF' TEST FOR LAST PDE
         BE    CONCAT  LAST PDE -- GO CONCAT.
         LA    R0,MSG08  MORE THAN 10 DSNAMES SPECIFIED BY TASKLIB
         BAL   R14,PUTLINE
         LA    R2,MSG09
         ST    R2,OLD+4
         TCLEARQ INPUT
         XC    ECB,ECB
         PUTGET PARM=PGPB,OUTPUT=(OLD,SINGLE,PROMPT),                  X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),                     X
               TERMGET=(EDIT,WAIT),MF=(E,IOPLA)
         CH    R15,=H'4'
         BH    TESTPGRC GO TEST RETURN CODE
         L     R2,PGPB+12 LOAD ADDR OF INPUT LINE
         LH    R3,0(R2) LOAD LENGTH OF INPUT LINE
         CH    R3,=H'4' TEST FOR NULL LINE
         BNH   CONCAT
         B     ERRORRTN
**
** PROMPT FOR TASK LIBRARY DATA SET NAME
**
TASKPRMT LA    R2,MSG04 ENTER TASKLIB DSNAME
         ST    R2,OLD+4
         TCLEARQ INPUT
         XC    ECB,ECB
TASKPRMA PUTGET PARM=PGPB,OUTPUT=(OLD,SINGLE,PROMPT),                  X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),                     X
               TERMGET=(EDIT,WAIT),MF=(E,IOPLA)
         CH    R15,=H'4'
         BH    TESTPGRC
         L     R15,PGPB+12 LOAD ADDR OF INPUT LINE
         LH    R2,0(R15) LOAD LENGTH
         CH    R2,=H'48' TEST FOR MAX DSN LENGTH
         BNH   TASKPRMB
         LR    R0,R2
         O     R0,=X'01000000' SP=1
         LR    R1,R15
         FREEMAIN R,LV=(0),A=(1)
         LA    R0,MSG05 DSNAME TOO LONG
         BAL   R14,PUTLINE
         B     TASKPRMA
TASKPRMB BCTR  R2,R0
         LA    R14,CMDLEN
         EX    R2,MOVE
         LH    R0,0(R15)
         O     R0,=X'01000000' SP=1
         LR    R1,R15
         FREEMAIN R,LV=(0),A=(1)
         LH    R2,CMDLEN
         CH    R2,=H'4' TEST FOR NULL LINE RESPONSE
         BNH   TASKENLP GO TO END OF LOOP
         IKJRLSA ANSWER1
         XC    ECB,ECB
         LA    R1,PARSEPL
         LINK  EP=IKJPARS PARSE DSNAME
         CH    R15,=H'8' TEST FOR ATTN
         BE    ERRORRTN GO RETURN
         BH    TASKPRMC
         CH    R15,=H'4'
         BNE   TASKPRMD
TASKPRMC LA    R0,MSG01 PARSE ERROR
         BAL   R14,PUTLINE
         B     ERRORRTN
TASKPRMD L     R15,ANSWER1
         USING DSNPDL,R15
         MVC   0(24,R9),NEWDSN OVERLAY OLD PDE WITH NEW ONE
         B     TASKLP1
         DROP  R15
**
** TEST FOR RETURN CODE FROM PUTGET
**
TESTPGRC CH    R15,=H'8'
         BE    ERRORRTN
         CH    R15,=H'12'
         BNE   TESTRC24
         TPUT  MSG10,MSG10L NO PROMPTING
         B     ERRORRTN
TESTRC24 CH    R15,=H'24'
         BNE   PGRC28
         TPUT  MSG11,MSG11L INVALID PARMS
         B     ERRORRTN
PGRC28   TPUT  MSG12,MSG12L NOT ENOUGH SPACE
         B     ERRORRTN
**
** TEST FOR END OF PDE'S
**
TASKENLP CLI   24(R9),X'FF'
         BE    CONCAT
         L     R9,24(R9) ADDR OF NEXT PDE
         B     TASKLP1
**
** ALL DATA SETS FOR TASKLIB HAVE BEEN ALLOCATED. NOW CONCATENATE THEM.
**
CONCAT   DC    0H'0'
         LH    R2,NODDNS TEST FOR TASK LIBRARIES
         CH    R2,=H'1'
         BE    MOVEEP
         BH    CONCAT1
         LA    R0,MSG16
         BAL   R14,PUTLINE
         LA    R2,MSG09
         ST    R2,OLD+4
         TCLEARQ INPUT
         XC    ECB,ECB
         PUTGET PARM=PGPB,OUTPUT=(OLD,SINGLE,PROMPT),                  X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),                     X
               TERMGET=(EDIT,WAIT),MF=(E,IOPLA)
         CH    R15,=H'4'
         BH    TESTPGRC GO TEST RC FROM PUTGET
         L     R1,PGPB+12 LOAD ADDR OF INPUT LINE
         LH    R0,0(R1) LOAD LENGTH
         CH    R0,=H'4' TEST FOR NULL LINE
         BH    ERRORRTN
         O     R0,=X'01000000' SP=1
         FREEMAIN R,LV=(0),A=(1)
         B     MOVEEP
CONCAT1  LA    R8,DAIRPB
         USING DAPB0C,R8
         MVC   DA0CCD,=X'000C'
         XC    DA0CFLG(6),DA0CFLG
         LH    R2,NODDNS
         STH   R2,DA0CNUMB
         XC    DA0CNUMB+2(2),DA0CNUMB+2
         SLL   R2,3 MULTIPLY BY 8
         BCTR  R2,R0
         LA    R14,DA0CDDN
         LA    R15,DDNAMES
         EX    R2,MOVE
         DROP  R8
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00 LINK TO DAIR
         LTR   R15,R15
         BZ    MOVEEP GO MOVE IN EP NAME
         LA    R0,MSG14 CONCAT ERROR
         BAL   R14,PUTLINE
         B     ERRORRTN
**
** HAVE ALLOCATED AND CONCATENATED THE TASK LIBRARIES, WILL NOW
** MOVE LOAD MOD NAME, MOVE THE PARM FIELD (IF SPECIFIED), OPEN THE
** TASKLIB DCB, AND ATTACH.
**
MOVEEP   DC    0H'0'
         LH    R2,LOADMOD+4
         STH   R2,EPNAMEL   SAVE LENGTH OF PROGRAM NAME
         BCTR  R2,R0
         L     R15,LOADMOD
         LA    R14,EPNAME
         EX    R2,MOVE MOVE EP NAME
         TM    PARMA+6,B'10000000' TEST FOR PARM FIELD
         BO    TSTPARML
         XC    PARMFLDL,PARMFLDL
         B     TESTTSK
TSTPARML LH    R2,PARMA+4 LOAD LENGTH OF QSTRING (PARMFIELD)
         CH    R2,=H'256'
         BNH   MOVEPARM
         LA    R0,MSG15 PARM FIELD EXCEEDS 256 BYTES
         BAL   R14,PUTLINE
         LA    R2,256
MOVEPARM STH   R2,PARMFLDL
         BCTR  R2,R0
         L     R15,PARMA LOAD ADDR OF QSTRING
         LA    R14,PARMFLD
         EX    R2,MOVE MOVE PARM FIELD
         LH    R2,NODDNS
         TM    FLAGS,TASKFLG WAS TASKLIB SPECIFIED?
         BZ    RELEASE NO
TESTTSK  DC    0H'0' TEST FOR TASKLIB DSNAMES
         LH    R2,NODDNS
         LTR   R2,R2
         BZ    RELEASE
         MVC   TASKLIB(SKELDCBL),SKELDCB
         LA    R8,TASKLIB
         USING IHADCB,R8
         MVC   DCBDDNAM,DDNAMES MOVE DDNAME TO DCB
         DROP  R8
**
** RELEASE PARSE SPACE BEFORE ATTACHING
**
RELEASE  DC    0H'0'
         IKJRLSA ANSWER
         XC    ANSWER,ANSWER
         IKJRLSA ANSWER1
         XC    ANSWER1,ANSWER1
         SR    R0,R0
         GETMAIN R,LV=(0) CLEAN UP SEGMENTS
         MVC   ATTACH(ATREFL),ATREF
         XC    ECB,ECB
         LA    R1,PARMFLDL
         ST    R1,PARMADDR
         OI    PARMADDR,X'80'
         TM    FLAGS,TASKFLG TEST FOR TASK LIB
         BZ    ATTACH1
         LH    R2,NODDNS
         LTR   R2,R2
         BNZ   OPENDCB
ATTACH1  DC    0H'0'
         BLDL  0,EPENTRY
         LTR   R15,R15 WAS EP NAME FOUND?
         BNZ   EPERROR NO - GO PUT OUT MSG
         LA    R1,PARMADDR
         LA    R15,ATTACH
         LA    R2,ECB
         LA    R3,EPNAME
         XC    ECB,ECB
         ATTACH DE=(3),ECB=(2),SHSPL=SPLIST,                           X
               MF=(E,(1)),SF=(E,(15))
         B     WAIT
OPENDCB  DC    0H'0'
         MVC   OPEN(OPENREFL),OPENREF
         LA    R1,OPEN
         LA    R2,TASKLIB
         OPEN  ((2),(INPUT)),MF=(E,(1))
         LA    R8,TASKLIB
         USING IHADCB,R8
         TM    DCBOFLGS,B'00010000' TEST FOR OPEN
         BO    OPENOK
         LA    R0,MSG17 DCB NOT OPEN
         BAL   R14,PUTLINE
         B     ERRORRTN
         DROP  R8
OPENOK   DC    0H'0'
         LA    R3,TASKLIB
         BLDL  (3),EPENTRY
         LTR   R15,R15
         BZ    GOTEPOK
EPERROR  DC    0H'0' PROGRAM NAME NOT FOUND
         LA    R14,WORKBUFF
         MVC   0(MSG20L,R14),MSG20  PROGRAM NAME
         LA    R14,MSG20L(R14)
         MVI   0(R14),C''''
         LA    R14,1(R14)
         LH    R2,EPNAMEL
         BCTR  R2,R0
         LA    R15,EPNAME
         EX    R2,MOVE  EPNAME
         LA    R14,1(R2,R14)
         MVI   0(R14),C''''
         LA    R14,1(R14)
         MVC   0(MSG21L,R14),MSG21  NOT FOUND
         LA    R14,MSG21L(R14)
         LH    R2,NODDNS
         LTR   R2,R2
         BZ    EPERROR1
         MVC   0(4,R14),=C'TASK'
         B     EPERROR2
EPERROR1 MVC   0(4,R14),=C'LINK'
EPERROR2 LA    R14,4(R14)
         MVC   0(MSG22L,R14),MSG22  LIBRARIES
         LA    R14,MSG22L(R14)
         LA    R2,WORKLEN
         SR    R14,R2
         STH   R14,WORKLEN
         XC    WORKOFF,WORKOFF
         LA    R0,WORKLEN
         BAL   R14,PUTLINE
EPERROR3 LA    R2,MSG23
         ST    R2,OLD+4
         TCLEARQ INPUT
         XC    ECB,ECB
         PUTGET PARM=PGPB,OUTPUT=(OLD,SINGLE,PROMPT),                  X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),                     X
               TERMGET=(EDIT,WAIT),MF=(E,IOPLA)
         CH    R15,=H'4'
         BH    TESTPGRC
         L     R1,PGPB+12  LOAD ADDR
         LH    R3,0(R1)
         SH    R3,=H'4'
         BNP   ERRORRTN
         CH    R3,=H'8'
         BNH   EPERROR4
         LA    R0,MSG24  PROGRAM NAME EXCEEDS 8 CHAR
         BAL   R14,PUTLINE
         B     EPERROR3
EPERROR4 STH   R3,EPNAMEL  STORE LENGTH OF EP NAME
         MVC   EPNAME,BLANKS
         LA    R14,EPNAME
         LA    R15,4(R1)
         BCTR  R3,R0
         EX    R3,MOVE
         OC    EPNAME,BLANKS UPPER CASE EP NAME
         LH    R0,0(R1)
         O     R0,=X'01000000'  SP=1
         FREEMAIN R,LV=(0),A=(1)
         LH    R2,NODDNS
         LTR   R2,R2
         BNZ   OPENOK
         B     ATTACH1
GOTEPOK  DC    0H'0'
         LA    R1,PARMADDR
         LA    R15,ATTACH
         LA    R2,ECB
         LA    R4,EPNAME
         XC    ECB,ECB
         ATTACH DE=(4),ECB=(2),TASKLIB=(3),SHSPL=SPLIST,               X
               MF=(E,(1)),SF=(E,(15))
WAIT     ST    R1,TCB
         LA    R2,ECB
         WAIT  ECB=(2)
         DETACH TCB
         XC    COMPCDE,COMPCDE   CLEAR CONDITION CODE        JFS04NOV77
         MVC   COMPCDE+2(2),ECB+2  SAVE CONDITION CODE     JFS03NOV77
         B     RETURN
**
** ERROR RETURN. ATTN, ERROR, ETC. WILL CAUSE CONTROL TO BE PASSED TO
** THIS SECTION.
**
ERRORRTN DC    0H'0'
         IKJRLSA ANSWER
         IKJRLSA ANSWER1
         XC    STAKECB,STAKECB
         STACK PARM=STAK,DELETE=ALL,MF=(E,STAKIOPL)
         XC    COMPCDE,COMPCDE                               JFS03NOV77
         MVI   COMPCDE+3,16                                  JFS03NOV77
**
** CLEAN UP AND RETURN
**
RETURN   DC    0H'0'
         LH    R2,NODDNS ANY DDNAME TO DECONCATENATE?
         LTR   R2,R2
         BZ    RETURN1
         MVC   CLOSE(CLOSREFL),CLOSREF
         LA    R1,CLOSE
         LA    R3,TASKLIB
         CLOSE ((3)),MF=(E,(1))
         CH    R2,=H'1'
         BE    FREEUP ONLY ONE
         LA    R8,DAIRPB
         USING DAPB10,R8
         MVC   DA10CD,=X'0010'
         XC    DA10FLG(6),DA10FLG
         MVC   DA10DDN,DDNAMES
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00 LINK TO DAIR
         LTR   R15,R15
         BZ    FREEUP
         LA    R0,MSG18 DECONT. ERROR
         BAL   R14,PUTLINE
         DROP  R8
**
** FREE THE ALLOCATED DDNAMES
**
FREEUP   LR    R3,R2
         BCTR  R3,R0
         SLL   R3,3
         LA    R1,DDNAMES(R3)
         BAL   R14,FREEDDN
         BCT   R2,FREEUP
RETURN1  DC 0H'0'                                            JFS03NOV77
         L     R2,COMPCDE     RETURN CODE FROM ATTACHED PROG JFS03NOV77
         TM    FLAGS,ALLRCFLG
         BO    PUTRCOUT
         TM    FLAGS,RCFLG
         BZ    RETURN2
         LTR   R2,R2
         BZ    RETURN2
**                                                           JFS03NOV77
** CONVERT CONDITION CODE FROM BINARY TO EBCDIC AND          JFS04NOV77
** OUTPUT THE MESSAGE                                        JFS04NOV77
**                                                           JFS03NOV77
PUTRCOUT MVC   WORKBUFF(L'MSG19),MSG19
         CVD   R2,DWORK
         UNPK  DWORK(5),DWORK+5(3)                           JFS03NOV77
         OI    DWORK+4,C'0'                                  JFS03NOV77
         LA    R15,DWORK-1                                   JFS03NOV77
         LA    R4,5                                          JFS04NOV77
PUTRC1   LA    R15,1(R15)                                    JFS03NOV77
         CLI   0(R15),C'0'  FIND NON ZERO                    JFS03NOV77
         BNE   PUTRC2                                        JFS03NOV77
         BCT   R4,PUTRC1                                     JFS03NOV77
         LA    R4,1  SO AT LEAST 1 0 WILL BE OUTPUT          JFS04NOV77
PUTRC2   LA    R14,WORKBUFF+L'MSG19                          JFS03NOV77
         BCTR  R4,R0  -1 FOR MVC                             JFS03NOV77
         EX    R4,MOVE MOVE IN COMP CODE RETURNED            JFS03NOV77
         LA    R3,L'MSG19+4+1(R4) +4 FOR HEADER,+1 FOR MVC   JFS03NOV77
         STH   R3,WORKLEN
         XC    WORKOFF,WORKOFF
         LA    R0,WORKLEN
         BAL   R14,PUTLINE
RETURN2  DC    0H'0'
         LA    R0,RENTLEN
         LR    R1,R13
         L     R13,SAVE+4
         FREEMAIN R,LV=(0),A=(1)
         LR    R15,R2 LOAD RETURN CODE
         RETURN (14,12),T,RC=(15)
**
**
**
MOVE     MVC   0(0,R14),0(R15)
**
**
**
** PUTLINE SECTION
** ON ENTRY - R0 = ADDR OF MSG, R14 = RETURN ADDR
**
PUTLINE  DC    0H'0'
         ST    R14,PTSVE14
         XC    ECB,ECB
         PUTLINE PARM=PTPB,OUTPUT=((R0),TERM,SINGLE,DATA),             X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=(E,IOPLA)
         LTR   R15,R15 TEST FOR ERRORS, ATTN ETC
         BZ    PTRTN
         CH    R15,=H'4' TEST FOR ATTN
         BE    ERRORRTN GO RETURN WITH RC=16
         TPUT  PTERROR,PTERRORL PUTLINE ERROR
         B     ERRORRTN
PTRTN    L     R14,PTSVE14
         BR    R14
**
** END OF PUTLINE SECTION
**
**
** STAX EXIT
**
STAXEXIT SAVE  (14,12)
         LR    R2,R13 SAVE SAVE ADDR
         L     R13,8(R1) LOAD ADDR OF STAXSAVE
         USING STAXSAVE,R13
         ST    R2,STAXSAVE+4
         ST    R13,8(R2)
         LM    R14,R12,STAXSAVE+12 RESTORE REGS
         LA    R2,ECB
         POST  (R2),16  SET RC=16
         XC    STAKECB,STAKECB
         STACK PARM=STAK,DELETE=ALL,MF=(E,STAKIOPL)
         TCLEARQ INPUT
         TCLEARQ OUTPUT
         L     R13,STAXSAVE+4
         RETURN (14,12),RC=0
         USING SAVE,R13 REESTABLISH BASE REG
**
** END OF STAXEXIT
**
**
** OUTPUT -- 'DATA SET ---- ' MSG
** ON ENTRY - R0 = ADDR OF DSNAME, R1 = ADDR OF LAST PART OF MSG,
** R14 = RETURN ADDR.
**
MSGOUT   DC    0H'0'
         ST    R14,MSGSVE14
         STM   R2,R8,MSGSVE28
         LA    R14,WORKBUFF
         LA    R3,DATAMSGL
         LA    R15,DATAMSG
         BCTR  R3,R0
         EX    R3,MOVE
*MOVE    MVC   0(0,R14),0(R15)
         LA    R14,1(R3,R14)
         MVI   0(R14),C''''
         LA    R14,1(R14)
         TM    FLAGS,QFLG TEST FOR QUOTES
         BZ    MSGOUT1
         MVI   0(R14),C''''
         LA    R14,1(R14)
         B     MSGOUT2
MSGOUT1  LH    R3,USERIDL LOAD LENGTH OF USER ID
         LA    R15,USERID
         BCTR  R3,R0
         EX    R3,MOVE ID
         LA    R14,1(R3,R14)
MSGOUT2  DC    0H'0'
         LR    R15,R0
         LH    R3,0(R15) LOAD LENGTH OF DSNAME
         LA    R15,2(R15)
         BCTR  R3,R0
         EX    R3,MOVE
         LA    R14,1(R3,R14)
         TM    FLAGS,QFLG
         BZ    MSGOUT3
         MVI   0(R14),C''''
         LA    R14,1(R14)
MSGOUT3  MVI   0(R14),C''''
         LA    R14,1(R14)
         MVI   0(R14),C' '
         LA    R14,1(R14)
         LH    R3,0(R1)
         LA    R15,2(R1) LOAD ADDR DSNAME
         BCTR  R3,R0
         EX    R3,MOVE
         LA    R14,1(R3,R14)
         LA    R3,WORKLEN
         SR    R14,R3
         STH   R14,WORKLEN
         XC    WORKOFF,WORKOFF
         LA    R0,WORKLEN
         BAL   R14,PUTLINE
         LM    R2,R8,MSGSVE28
         L     R14,MSGSVE14
         BR    R14
**
** END OF OUTMSG SECTION
**
**
** FREE DATA SETS BY DDNAME SECTION
** ON ENTRY - R1 = ADDR OF DDNAME, R14 = RETURN ADDR
**
FREEDDN  DC    0H'0'
         STM   R2,R8,FREESV28
         ST    R14,FREESV14
         LA    R8,DAIRPB
         USING DAPB18,R8
         MVC   DA18CD,=X'0018'
         XC    DA18FLG(10),DA18FLG
         MVC   DA18DDN,0(R1) MOVE IN DDNAME
         MVI   DA18MNM,C' '
         MVC   DA18MNM+1(9),DA18MNM
         MVI   DA18DPS2,B'00001000' KEEP
         MVI   DA18CTL,B'00010000' UNALLOC PERM
         MVC   DA18JBNM,BLANKS
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00 LINK TO DAIR
         LM    R2,R8,FREESV28
         L     R14,FREESV14
         BR    R14 RETURN
         DROP  R8
**
** END OF FREE DDNAME SECTION
**
         EJECT
**
** ADDRS, PARM BLOCKS, ETC.
**
ATREF    ATTACH SF=L
ATREFL  EQU   *-ATREF
STAXREF  STAX  STAXEXIT,MF=L
STAXREFL EQU   *-STAXREF
PGREF    PUTGET MF=L
PGREFL   EQU   *-PGREF
PTREF    PUTLINE MF=L
PTREFL   EQU   *-PTREF
STAKREF  STACK MF=L
STAKREFL EQU   *-STAKREF
OPENREF  OPEN  (,),MF=L
OPENREFL EQU   *-OPENREF
CLOSREF  CLOSE (,),MF=L
CLOSREFL EQU   *-CLOSREF
         PRINT NOGEN
SKELDCB  DCB   DSORG=PO,MACRF=R  SKELETON DCB
SKELDCBL EQU   *-SKELDCB
SPLIST   DC    AL1(3,0,1,78) SHARE SUBPOOL LIST
BLANKS   DC    CL8' '
TABLE    DC    C'0123456789ABCDEF' CONVERT TABLE
         EJECT
**
** MESSAGES
**
MSG01    DC    Y(MSG01L,0)
         DC    C'PARSE ERROR'
MSG01L   EQU   *-MSG01
MSG02    DC    Y(MSG02L,0)
         DC    C'INVALID DATA SET NAME'
MSG02L   EQU   *-MSG02
MSG03    DC    Y(MSG03L)
         DC    C'IS AN INVALID TASK LIBRARY NAME'
MSG03L   EQU   *-MSG03-2
MSG04    DC    Y(MSG04L,0)
         DC    C' ENTER TASKLIB DATA SET NAME-'
MSG04L   EQU   *-MSG04
MSG05    DC    Y(MSG05L,0)
         DC    C'DATA SET NAME LENGTH EXCEEDS 44 BYTES'
MSG05L   EQU   *-MSG05
MSG06    DC    Y(MSG06L)
         DC    C'NOT IN CATALOG'
MSG06L   EQU   *-MSG06-2
MSG07    DC    C'DYNAMIC ALLOCATION ERROR CODE = '
MSG08    DC    Y(MSG08L,0)
         DC    C'NO MORE THAN 10 DATA SET NAMES MAY BE SPECIFIED BY THEX
                TASKLIB KEYWORD'
MSG08L   EQU   *-MSG08
MSG09    DC    Y(MSG09L,0)
         DC    C' ENTER NULL LINE TO CONTINUE, NON-NULL LINE TO STOP-'
MSG09L   EQU   *-MSG09
MSG10    DC    C'CANNOT PROMPT, EITHER YOU ARE EXECUTING A CLIST OR YOUX
               R PROFILE REQUESTS NO PROMPTING.'
MSG10L   EQU   *-MSG10
MSG11    DC    C'INVALID PARAMETERS PASSED TO PUTGET'
MSG11L   EQU   *-MSG11
MSG12    DC    C'NOT ENOUGH SPACE FOR PUTGET TO OBTAIN OUTPUT BUFFERS'
MSG12L   EQU   *-MSG12
MSG13    DC    Y(MSG13L)
         DC    C'IS NOT PARTITIONED'
MSG13L   EQU   *-MSG13-2
MSG14    DC    Y(MSG14L,0)
         DC    C'ERROR IN CONCATENATING TASK LIBRARIES'
MSG14L   EQU   *-MSG14
MSG15    DC    Y(MSG15L,0)
         DC    C'PARM FIELD SPECIFIED EXCEEDS 256 BYTES, TRUNCATED'
MSG15L   EQU   *-MSG15
MSG16    DC    Y(MSG16L,0)
         DC    C'NO TASK LIBRARIES'
MSG16L   EQU   *-MSG16
MSG17    DC    Y(MSG17L,0)
         DC    C'TASKLIB DCB OPEN ERROR'
MSG17L   EQU   *-MSG17
MSG18    DC    Y(MSG18L,0)
         DC    C'ERROR IN DECONTENATING TASK LIBRARIES'
MSG18L   EQU   *-MSG18
MSG19    DC    C'CONDITION CODE = '                          JFS03NOV77
MSG20    DC    C'PROGRAM NAME '
MSG20L   EQU   *-MSG20
MSG21    DC    C' NOT FOUND IN CONCATENATED '
MSG21L   EQU   *-MSG21
MSG22    DC    C' LIBRARIES'
MSG22L   EQU   *-MSG22
MSG23    DC    Y(MSG23L,0)
         DC    C' ENTER PROGRAM NAME, OR NULL LINE TO STOP'
MSG23L   EQU   *-MSG23
MSG24    DC    Y(MSG24L,0)
         DC    C'PROGRAM NAME EXCEEDS 8 CHARACTERS'
MSG24L   EQU   *-MSG24
MSG25    DC    Y(MSG25L)
         DC    C'ALLOCATION ERROR'
MSG25L   EQU   *-MSG25-2
MSG26    DC    Y(MSG26L,0)
         DC    C'MAXIMUM NUMBER OF ALLOCATIONS EXCEEDED'
MSG26L   EQU   *-MSG26
MSG27    DC    C'DYNAMIC ALLOCATION RETURN CODE = '
DATAMSG  DC    C'DATA SET '
DATAMSGL EQU   *-DATAMSG
PTERROR  DC    C'PUTLINE ERROR'
PTERRORL EQU   *-PTERROR
         PRINT GEN
         EJECT
**
** DSECT FOR REENTRANCY
**
RENTDSCT DSECT
SAVE     DS    18F
STAXSAVE DS    18F
DWORK    DS    D
MSGSVE28 DS    7F
MSGSVE14 DS    F
PTSVE14  DS    F
FREESV28 DS    7F
FREESV14 DS    F
SAVER15  DS    F
IOPLA    DS    4F
STAKIOPL DS    4F
PARMADDR DS    F ADDR OF PARM FIELD
STAKECB  DS    F
ECB      DS    F
TCB      DS    F
PARSEPL  DS    7F PARSE PARM LIST
DAIRPL   DS    5F DAIR PARM LIST
DAIRPB   DS    25F DAIR PARM BLOCK
DA0CDDN  EQU   DAIRPB+12 DA0CDDN NOT DEFINED IN CSECT
ANSWER   DS    F
ANSWER1  DS    F
OLD      DS    F
COMPCDE  DS    F                                             JFS04NOV77
         DS    A
EPENTRY  DC    Y(1,58) BLDL
EPNAME   DS    CL8
         DS    CL58
WORKLEN  DS    H
WORKOFF  DS    H
WORKBUFF DS    CL120
ATTACH   ATTACH SF=L
STAXLIST STAX  STAXEXIT,USADDR=STAXSAVE,MF=L
PGPB     PUTGET MF=L
PTPB     PUTLINE MF=L
STAK     STACK MF=L
OPEN     OPEN  (,),MF=L
CLOSE    CLOSE (,),MF=L
USERIDL  DS    H
USERID   DS    CL8
         PRINT NOGEN
TASKLIB  DCB   DSORG=PO,MACRF=R
         PRINT GEN
EPNAMEL  DS    H
CMDLEN   DS    H
CMDOFF   DS    H
CMDBUF   DS    CL44
DSNLEN   DS    H
DSNAME   DS    CL44
NODDNS   DS    H
DDNAMES  DS    10CL8
PARMFLDL DS    H
PARMFLD  DS    CL256
FLAGS    DS    X
RENTLEN  EQU   *-RENTDSCT
DOPROG   CSECT
         PRINT NOGEN
         EJECT
**
** PARAMETER CONTROL LIST FOR PARSE
**
PPLPARM  IKJPARM DSECT=PDL
LOADMOD  IKJIDENT 'LOAD MOD NAME',MAXLNTH=8,FIRST=ALPHA,               X
               OTHER=ALPHANUM,PROMPT='NAME OF PROGRAM TO BE EXECUTED'
PARMA    IKJPOSIT QSTRING,HELP='PARM FIELD TO BE PASSED TO PROGRAM'
TASKEYWD IKJKEYWD
         IKJNAME 'TASKLIB',SUBFLD=TASKSUBF
         IKJNAME 'LIB',SUBFLD=TASKSUBF
RCKEYWD  IKJKEYWD DEFAULT='RC'
         IKJNAME 'RC'
         IKJNAME 'NORC'
         IKJNAME 'ALLRC'
TASKSUBF IKJSUBF
TASKDSNA IKJPOSIT DSNAME,LIST,PROMPT='TASKLIB DATA SET NAME'
         IKJENDP
**
** PARSE PARM CONTROL LIST FOR PROMPT OF TASKLIB DATA SET NAME
**
DSNPPL   IKJPARM DSECT=DSNPDL
NEWDSN   IKJPOSIT DSNAME,PROMPT='TASKLIB DATA SET NAME'
         IKJENDP
         PRINT NOGEN
         EJECT
**
** MAPPING DSECTS
**
         IKJCPPL
         IKJIOPL
         IKJUPT
         IKJPPL
         IKJDAPL
         IKJDAP08
         IKJDAP0C
         IKJDAP10
         IKJDAP18
         DCBD  DSORG=PO
DOPROG   CSECT
         LTORG
         END   DOPROG
