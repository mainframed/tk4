*/*******************************************************************/
*/*   IHASCVA                                                       */
*/*           MACCOMP - SC1CM                                       */
*/*           MACSTAT - @G17SP2F                                    */
*/*           MACMEAN - SCVA MEANS SLIP CONTROL ELEMENT VARIABLE    */
*/*                     AREA                                        */
*/*                                                                 */
*/*       IHASCVA MAPS THE SCVA. THIS CONTROL BLOCK IS AN EXTENSION */
*/*       OF THE SLIP CONTROL ELEMENT (IHASCE) AND ALONG WITH THE   */
*/*       SCE INTERNALLY REPRESENT A SLIP OPERATOR COMMAND. THE SCVA*/
*/*       IS A VARIABLE AREA AND IT'S SIZE DEPENDS ON HOW MANY OF   */
*/*       OF THE FOLLOWING KEYWORDS ARE SPECIFIED:  COMP, ASID,     */
*/*       JOBNAME, LPAMOD, AND ADDRESS.  IF NONE ARE SPECIFIED, NO  */
*/*       SCVA IS OBTAINED.  THE SCE                                */
*/*       POINTS TO THIS CONTROL BLOCK. STORAGE IS FROM FIXED       */
*/*       SQA (SP245). IEECB905 GETS, BUILDS, AND FREES THE SCVA.   */
*/*******************************************************************/
     DCL 1 SCVA     BASED(SCESCVA),
           2 SCVAHDR,                  /* NON VARIABLE PORTION       */
             3 SCVACBID   CHAR(4),     /* CONTROL BLOCK ID = SCVA    */
             3 SCVALN   PTR(15),       /* LENGTH OF SCVA             */
             3 *        CHAR(2),       /* RESERVED                   */
           2 SCVADATA   CHAR(*);       /* VARIABLE AREA              */
     DCL 1 SCVACOMP BASED(SCVAPTR),    /* SCVA COMP ENTRY MAPPING    */
           2 SCVCCID    PTR(8),        /* ENTRY ID                   */
           2 SCVCCB     BIT(8),        /* FLAGS                      */
             3 SCVCCU   BIT(1),        /* ON=USER CODE, OFF=SYSTEM   */
             3 *        BIT(7),        /* RESERVED                   */
           2 SCVCCM  CHAR(3) BDY(BYTE),/* MASK FOR SIGNIFICANT DIGITS*/
           2 SCVCCD  CHAR(3) BDY(BYTE);/* COMPLETION CODE            */
     DCL 1 SCVAASID BASED(SCVAPTR),    /* SCVA ASID ENTRY MAPPING    */
           2 SCVADHDR,                 /* NON VARIABLE PORTION       */
            3 SCVADID    PTR(8),       /* ENTRY ID                   */
            3 SCVADNO    PTR(8),       /* NUMBER OF ASID'S           */
           2 SCVADD(*) CHAR(2) BDY(BYTE); /* ASIDS                   */
     DCL 1 SCVAJOBN BASED(SCVAPTR),    /* SCVAJOBNAME-JSPGM ENTRY    */
           2 SCVJNID    PTR(8),        /* ENTRY ID                   */
           2 SCVJND  CHAR(8) BDY(BYTE);/* JOBNAME OR JSPGM           */
     DCL 1 SCVAMOD  BASED(SCVAPTR),    /* SCVAPVTMOD-LPAMOD ENTRY    */
           2 SCVMDID    PTR(8),        /* ENTRY ID                   */
           2 SCVMDNM CHAR(8) BDY(BYTE),/* MODULE NAME                */
           2 SCVMDA1 PTR(31) BDY(BYTE),/* FIRST ADDRESS              */
           2 SCVMDA2 PTR(31) BDY(BYTE);/* SECOND ADDRESS             */
     DCL 1 SCVAADDR BASED(SCVAPTR),    /* SCVA ADDRESS ENTRY MAPPING */
           2 SCVARID    PTR(8),        /* ENTRY ID                   */
           2 SCVARD1 PTR(31) BDY(BYTE),/* FIRST ADDRESS              */
           2 SCVARD2 PTR(31) BDY(BYTE);/* SECOND ADDRESS             */
     DCL   SCVIDLST     PTR(8) CONSTANT(1), /* LAST ENTRY ID         */
           SCVIDCC      PTR(8) CONSTANT(2), /* COMP ENTRY ID         */
           SCVIDAS      PTR(8) CONSTANT(3), /* ASID ENTRY ID         */
           SCVIDJN      PTR(8) CONSTANT(4), /* JOBNAME ENTRY ID      */
           SCVIDJS      PTR(8) CONSTANT(5), /* JSPGM ENTRY ID        */
           SCVIDPVT     PTR(8) CONSTANT(6), /* PVTMOD ENTRY ID       */
           SCVIDLPA     PTR(8) CONSTANT(7), /* LPAMOD ENTRY ID       */
           SCVIDAD      PTR(8) CONSTANT(8); /* ADDRESS ENTRY ID      */
