*        %GOTO TCCWL1; /*
         MACRO
         IECDTCCW
TCCW     DSECT
         SPACE 1  */
*%TCCWL1 : ;
*/********************************************************************/
*/*                                                                  */
*/*      THE TCCW BLOCK IS THE TRANSLATION CONTROL BLOCK WHICH       */
*/*      CONTAINS ALL INFORMATION REQUIRED TO TRANSLATE CCWS,        */
*/*      RE-TRANSLATE ADDRESSES OR UNFIX DATA AREAS. IT IS THE       */
*/*      BLOCK THAT IS BASSED BY ROUTINES WHICH CALL THE CCW         */
*/*      TRANSLATOR.                                                 */
*/*                                                                  */
*/********************************************************************/
*%GOTO TCCWL2; /*
         SPACE 1
TCCWTCB  DS    A                   ADDRESS OF TCB FOR THIS REQUEST
TCCWOPTN DS    XL1                 OPTION BYTE DESCRIBING WORK
*                                  TO BE DONE BY CCW TRANSLATOR
TCCWXLAT EQU   0                   TRANSLATE CCWS
TCCWCSWX EQU   4                   TRANSLATE CSW OR PASSES ADDRESS
TCCWUNFX EQU   8                   UNFIX DATA AREA - SET UP FREE LST
TCCWGTMN EQU   12                  RETURN FROM GETMAIN
TCCWSATR EQU   16                  SINGLE ADDRESS TRANSLATION
TCCWPGER EQU   X'80'               PAGE FIX ERROR
TCCWTRER EQU   X'90'               TRANSLATION ERROR
TCCWIDAE EQU   X'A0'               IDA BIT ERROR IN VIRT CP    @ZA06069
TCCWVMER EQU   X'D0'               VALMAP ERROR
         SPACE 1
TCCWUCB  DS    AL3                 ADDRESS OF ASSOCIATED UCB
TCCWBEB  DS    A                   ADDRESS OF FIRST BEB
TCCWFIX  DS    A                   ADDRESS OF FIRST FIX LIST
TCCWFVC  DS    A                   ADDRESS OF FIRST VIRTUAL CCW
TCCWFRC  DS    A                   ADDRESS OF FIRST REAL CCW
TCCWPLKR DS    A                   ADDRESS OF NEXT FIX LIST ENTRY
TCCWINDA DS    A                   ADDRESS OF FIRST IDAL
TCCWTICL DS    A                   ADDRESS OF UNRESOLVED TIC LIST
TCCWINDR DS    A                   ADDRESS OF NEXT IDAL POINTER
TCCWCCWR DS    A                   ADDRESS OF NEXT VIRTUAL CCW
         SPACE 1                                               @ZA16169
TCCWMODB DS    XL1                 TRANSLATOR FLAG BYTE        @ZA16169
TCCWFCHN EQU   X'80'               - FREE CHAIN CONSTRUCTED    @ZA26555
TCCWRSV2 EQU   X'40'               - RESERVED                  @ZA16169
TCCWRSV3 EQU   X'20'               - RESERVED                  @ZA16169
TCCWRSV4 EQU   X'10'               - RESERVED                  @ZA16169
TCCWRSV5 EQU   X'08'               - RESERVED                  @ZA16169
TCCWPC10 EQU   X'04'               - A ZERO IDAL ENTRY REQD    @ZA16169
TCCWPGCK EQU   X'02'               - PAGE FIX/UNFIXING ACTIVE. @ZA16169
TCCWECBU EQU   X'01'               - ECB IN USE.               @ZA16169
         EJECT
TCCWCCWL DS    XL1                 NUMBER OF CCWS LEFT IN BEB
TCCWINDL DS    XL1                 NUMBER OF IDAS LEFT IN IDAL
TCCWEFOP DS    XL1                 NUMERIC PORTION OF CURRENT COMMAND
TCCWCCWA DS    A                   NEXT VIRTUAL CCW
TCCWTICA DS    A                   TIC-ED TO ADDRESS
TCCWLOCA DS    A                   LOW COMPARE ADDRESS
TCCWHICA DS    A                   HIGH COMPARE ADDRESS
TCCWCBEB DS    A                   CURRENT BEB POINTER
TCCWOPBT DS    X                   PREVIOUS OP BYTE
         ORG   *-1                 FULL WORD ALIGNMENT
TCCWOPTR DS    A                   PREVIOUS CCW ADDRESS
         SPACE 1                                               @ZA16169
TCCWSAVE DS    0XL32               160 BYTE BLK REG SAVE AREA  @ZA16169
TCCWSAVD DS    A                   - SAVE AREA FOR REG 13      @ZA16169
TCCWSAV4 DS    A                   - SAVE AREA FOR REG  4      @ZA16169
TCCWSAV5 DS    A                   - SAVE AREA FOR REG  5      @ZA16169
TCCWSAV6 DS    A                   - SAVE AREA FOR REG  6      @ZA16169
TCCWSAV7 DS    A                   - SAVE AREA FOR REG  7      @ZA16169
TCCWSAV8 DS    A                   - SAVE AREA FOR REG  8      @ZA16169
TCCWSAV9 DS    A                   - SAVE AREA FOR REG  9      @ZA16169
TCCWSAVA DS    A                   - SAVE AREA FOR REG  A      @ZA16169
TCCWRGSV DS    0XL56               TRANSLATOR REG SAVE AREA    @ZA16169
TCCWREG1 DS    A                   - SAVE AREA FOR REG 1
TCCWREG2 DS    A                   - SAVE AREA FOR REG 2
TCCWREG3 DS    A                   - SAVE AREA FOR REG 3
TCCWREG4 DS    A                   - SAVE AREA FOR REG 4
TCCWREG5 DS    A                   - SAVE AREA FOR REG 5
TCCWREG6 DS    A                   - SAVE AREA FOR REG 6
TCCWREG7 DS    A                   - SAVE AREA FOR REG 7
TCCWREG8 DS    A                   - SAVE AREA FOR REG 8
TCCWREG9 DS    A                   - SAVE AREA FOR REG 9
TCCWREGA DS    A                   - SAVE AREA FOR REG 10
TCCWREGB DS    A                   - SAVE AREA FOR REG 11
TCCWREGC DS    A                   - SAVE AREA FOR REG 12
TCCWREGD DS    A                   - SAVE AREA FOR REG 13
TCCWREGE DS    A                   - SAVE AREA FOR REG 14
         SPACE 1
TCCWBL   EQU   *-TCCW              BLOCK LENGTH OF TCCW
         MEND , */
*%TCCWL2: ;
* DECLARE 1 TCCW BDY(WORD) BASED(TCCWPTR), /* TRANSLATION CONTROL
*                                  BLOCK */
*    2 TCCWTCB PTR(31),            /* ADDRESS OF TCB FOR REQUEST   */
*    2 TCCWOPTN BIT(8),            /* COMMUNICATION TO/FROM CALLER */
*    2 TCCWUCB PTR(24),             /* ADDRESS OF THE UCB */
*    2 TCCWBEB PTR(31),             /* ADDRESS OF THE BEGIN END BLK */
*    2 TCCWFIX PTR(31),             /* ADDRESS OF THE FIX LIST */
*    2 TCCWFVC PTR(31),             /* ADDR OF THE FST VIRTUAL CCW */
*    2 TCCWFRC PTR(31),             /* ADDRESS OF THE REAL CCW */
*    2 TCCWPLKR PTR(31),            /* ADDRESS OF CURRENT FIX ENTRY */
*    2 TCCWINDA PTR(31),            /* ADDRESS OF FIRST IDAL */
*    2 TCCWTICL PTR(31),            /* UNRESOLVED TIC LIST */
*    2 TCCWINDR PTR(31),            /* ADDRESS OF CURRENT IDAL ENTY */
*    2 TCCWCCWR PTR(31),            /* ADDRESS OF SLOT FOR REAL CCW */
*    2 TCCWMODB BIT(8),             /* FLAG BYTE FOR  TRANSLATION */
*      3 TCCWRSV1 BIT(1),           /* RESERVED              @ZA16169*/
*      3 TCCWRSV2 BIT(1),           /* RESERVED              @ZA16169*/
*      3 TCCWRSV3 BIT(1),           /* RESERVED              @ZA16169*/
*      3 TCCWRSV4 BIT(1),           /* RESERVED              @ZA16169*/
*      3 TCCWRSV5 BIT(1),           /* RESERVED              @ZA16169*/
*      3 TCCWPC10 BIT(1),           /* A ZERO IDAL ENTRY RQD @ZA16169*/
*      3 TCCWPGCK BIT(1),           /* PAGE FIX/UNFIX ACTIVE @ZA16169*/
*      3 TCCWECBU BIT(1),           /* ECB IN USE            @ZA16169*/
*    2 TCCWCCWL CHAR(1),            /* NUMBER OF CCWS LEFT IN BEB */
*    2 TCCWINDL CHAR(1),            /* NUMBER OF IDAL LEFT */
*    2 TCCWEFOP CHAR(1),            /* NUMERIC PORTION OF OP CODE */
*    2 TCCWCCWA PTR(31),            /* CURRENT VIRTUAL CCW ADDR */
*    2 TCCWTICA PTR(31),            /* ADDRESS PORTION OF TIC */
*    2 TCCWLOCA PTR(31),            /* LOW COMPARE ADDRESS */
*    2 TCCWHICA PTR(31),            /* HIGH COMPERE ADDRESS */
*    2 TCCWCBEB PTR(31),            /* CURRENT BEB POINTER */
*    2 TCCWOPTR PTR(31),            /* PREVIOUS CCW ADDR     @ZM30410*/
*      3 TCCWOPBT CHAR(1),          /* PREVIOUS OP BYTE      @ZM30410*/
*      3 *        CHAR(3),          /* ADDRESS PORTION       @ZM30410*/
*    2 TCCWSAVE CHAR(32),           /* INTERNAL WORK AREA */
*      3 TCCWSAVD PTR(31),          /* SAVE AREA- REG D      @ZA16169*/
*      3 TCCWSAV4 PTR(31),          /* SAVE AREA- REG 4      @ZA16169*/
*      3 TCCWSAV5 PTR(31),          /* SAVE AREA- REG 5      @ZA16169*/
*      3 TCCWSAV6 PTR(31),          /* SAVE AREA- REG 6      @ZA16169*/
*      3 TCCWSAV7 PTR(31),          /* SAVE AREA- REG 7      @ZA16169*/
*      3 TCCWSAV8 PTR(31),          /* SAVE AREA- REG 8      @ZA16169*/
*      3 TCCWSAV9 PTR(31),          /* SAVE AREA- REG 9      @ZA16169*/
*      3 TCCWSAVA PTR(31),          /* SAVE AREA- REG A      @ZA16169*/
*    2 TCCWRGSV,                    /* REGISTER SAVE AREA */
*      3 TCCWREG1 PTR(31),          /* SAVE AREA FOR REGISTER 1 */
*      3 TCCWREG2 PTR(31),          /* SAVE AREA FOR REGISTER 2 */
*      3 TCCWREG3 PTR(31),          /* SAVE AREA FOR REGISTER 3 */
*      3 TCCWREG4 PTR(31),          /* SAVE AREA FOR REGISTER 4 */
*      3 TCCWREG5 PTR(31),          /* SAVE AREA FOR REGISTER 5 */
*      3 TCCWREG6 PTR(31),          /* SAVE AREA FOR REGISTER 6 */
*      3 TCCWREG7 PTR(31),          /* SAVE AREA FOR REGISTER 7 */
*      3 TCCWREG8 PTR(31),          /* SAVE AREA FOR REGISTER 8 */
*      3 TCCWREG9 PTR(31),          /* SAVE AREA FOR REGISTER 9 */
*      3 TCCWREGA PTR(31),          /* SAVE AREA FOR REGISTER 10 */
*      3 TCCWREGB PTR(31),          /* SAVE AREA FOR REGISTER 11 */
*      3 TCCWREGC PTR(31),          /* SAVE AREA FOR REGISTER 12 */
*      3 TCCWREGD PTR(31),          /* SAVE AREA FOR REGISTER 13 */
*      3 TCCWREGE PTR(31),          /* SAVE AREA FOR REGISTER 14 */
*    2 TCCWEND CHAR(0);             /* END OF STRUCTURE          */
*%DCL TCCWBL CHAR;
*%TCCWBL='ADDR(TCCWEND)-ADDR(TCCWTCB)'; /* LENGTH OF TCCW        */
*
*/*      BITS DEFINED FOR TCCWOPTN                               */
*
* DCL TCCWXLAT BIT(8) CONSTANT('00'X); /* TRANSLATION REQUEST    */
* DCL TCCWCSWX BIT(8) CONSTANT('04'X); /* CSW TRANSLATION REQUEST */
* DCL TCCWUNFX BIT(8) CONSTANT('08'X); /* UNFIX PAGES REQUEST     */
* DCL TCCWSATR BIT(8) CONSTANT('10'X); /*SINGLE ADDRESS TRANSLATION*/
* DCL TCCWPGER BIT(8) CONSTANT('80'X); /* PAGING ERROR INDICATOR   */
* DCL TCCWTRER BIT(8) CONSTANT('90'X); /* TRANSLATION ERROR INDICATOR*/
* DCL TCCWIDAE BIT(8) CONSTANT('A0'X); /* IDA BIT ERROR      @ZA06069*/
