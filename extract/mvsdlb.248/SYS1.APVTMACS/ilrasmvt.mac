* /* MACMEAN ASMVT MEANS ASM VECTOR TABLE                            */
* /* MACCOMP Y-4SC1CW/PZD81                                          */
* /* MACSTAT Y-475073/415304                                         */
* /*A-000000-999999                                          @Z40WPWJ*/
* /*******************************************************************/
* /*                                                                 */
* /*  NAME:  ILRASMVT                                                */
* /*                                                                 */
* /*  FUNCTION:  AUXILIARY STORAGE MANAGEMENT VECTOR TABLE           */
* /*                                                                 */
* /*  STATUS:  OS/VS2 RELEASE 4.1                                    */
* /*                                                                 */
* /*  EXTERNAL REFERENCES:  ASMVTPTR - USER DEFINED POINTER TO ASMVT */
* /*                                                                 */
* /*  REGISTERS USED:  N/A                                           */
* /*                                                                 */
* /*  REGISTERS CLOBBERED:  N/A                                      */
* /*                                                                 */
* /*  NOTES:  THE ASMVT PROVIDES A MEANS OF COMMUNICATION WITHIN ASM.*/
* /*          THE ASMVT CONTAINS ALL GLOBAL COUNTS, POINTERS, ENTRY  */
* /*          POINT ADDRESSES, AND WORK/SAVE AREAS USED BY RSM       */
* /*          ROUTINES.  THE ASMVT IS POINTED TO BY THE CVT FIELD    */
* /*          CVTASMVT.                                              */
* /*                                                                 */
* /*          THE ASMVT IS DIVIDED INTO SECTIONS RELATING TO THE     */
* /*          DIFFERENT FUNCTIONAL AREAS OF ASM.  THE ENTRY POINT    */
* /*          ADDRESSES, WORK/SAVE AREAS, AND CELLPOOL CONTROLLERS   */
* /*          FOLLOW THE FUNCTIONAL SECTIONS.                        */
* /*                                                                 */
* /*  METHOD OF ACCESS:                                              */
* /*          BAL - DSECT=NO SHOULD BE SPECIFIED ON THE MACRO CALL   */
* /*                TO AVOID CREATING A DSECT.  A USING ON ASMVT     */
* /*                WILL ESTABLISH ADDRESSABILITY FOR ALL SYMBOLS.   */
* /*          PLS - DCL ASMVTPTR PTR(31)                             */
* /*                %INCLUDE SYSLIB(ILRASMVT)                        */
* /*                                                                 */
* /*******************************************************************/
*           %GOTO ASMVTPLS;         /* BILINGUAL HEADER
            MACRO
            ILRASMVT    &DSECT=YES
            AIF         ('&DSECT' EQ 'YES').ASMVT01
ASMVT       DS          0D          ASMVT CONTROL BLOCK
            AGO         .ASMVT02
.ASMVT01    ANOP
ASMVT       DSECT
.ASMVT02    ANOP
            IEZBITS
ASMFLAG1    DC          XL1'00'     ASM GLOBAL FLAG FIELD 1
ASMDUPLX    EQU         BIT0        DUPLEXING OPTION FLAG,
*                                   1 = DUPLEXING OF COMMON REQUESTED
*                                   DUPLEX PAGE DATA SET OPENED BY RIM,
*                                   0 = DUPLEXING NOT REQUESTED, NO
*                                   DUPLEX DATA SET OPENED BY RIM, OR
*                                   DUPLEXING SUSPENDED IF DUPLEXING
*                                   SUSPENDED FLAG IS ON
ASMNOCWQ    EQU         BIT1        NO COMMON WRITE QUEUE FLAG,
*                                   1 = DO NOT QUEUE WRITE IOE'S TO
*                                   COMMON WRITE QUEUE,
*                                   0 = DO NORMAL IOE QUEUING
ASMNOLCL    EQU         BIT2        NO LOCAL DATA PAGING FLAG,
*                                   1 = ALL WRITE IOE'S MUST BE QUEUED
*                                   TO  COMMON WRITE QUEUE,
*                                   0 = QUEUE IOE'S NORMALLY
ASMRSV1     EQU         BIT3        RESERVED
ASMNODPX    EQU         BIT4        DUPLEXING SUSPENDED FLAG,
*                                   1 = DUPLEXING HAS BEEN SUSPENDED
*                                   BECAUSE THE DUPLEX PAGE DATA SET IS
*                                   FULL OR INOPERATIVE,
*                                   0 = DUPLEXING STILL ACTIVE IF
*                                   REQUESTED
ASMPLPAF    EQU         BIT5        PLPA DATA SET FULL FLAG,
*                                   1 = PLPA DATA SET FULL,
*                                   0 = PLPA DATA SET NOT FULL
ASMCOMMF    EQU         BIT6        COMMON DATA SET FULL FLAG,
*                                   1 = COMMON DATA SET FULL,
*                                   0 = COMMON DATA SET NOT FULL
ASMPLPAS    EQU         BIT7        PLPA DATA SET SPILL FLAG,
*                                   1 = PLPA DATA SET SPILLED TO
*                                   COMMON DATA SET DURING PLPA BUILD
*                                   AT NIP TIME,
*                                   0 = PLPA DATA SET NOT FULL AFTER
*                                   PLPA BUILD
ASMFLAG2    DC          XL1'00'     ASM GLOBAL FLAG FIELD 2
ASMCALLQ    EQU         BIT0        QIOE CALLER FLAG,
*                                   1 = PAGE COMPLETION IS THE CALLER
*                                   OF QIOE,
*                                   0 = QIOE CALLED BY SOME OTHER ASM
*                                   ROUTINE
ASMNOSAV    EQU         BIT1        NO SAVE FLAG,
*                                   1 = SYS1.STGINDEX UNAVAILABLE OR
*                                   FULL, SAVE REQUESTS NOT DONE,
*                                   0 = SYS1.STGINDEX AVAILABLE FOR USE
ASMNOTMR    EQU         BIT2        NO TASK MODE RELEASE FLAG,
*                                   1 = TASK MODE RELEASE (ILRTMRLG)
*                                   HAS SUFFERED INDETERMINATE ERRORS,
*                                   DO NOT POST ITS ECB,
*                                   0 = ILRTMRLG RUNNING NORMALLY
ASMNOTPT    EQU         BIT3        NO TPARTABLE FLAG,
*                                   1 = A READ OR WRITE OF TPARTABLE
*                                   HAS FAILED, IT IS NOT UP TO DATE,
*                                   0 = TPARTABLE AVAILABLE AND CORRECT
ASMQUICK    EQU         BIT4        QUICK START IPL FLAG,
*                                   1 = ASM INITIALIZATION PROCESSED
*                                   PLPA IN QUICK START MODE (NOT
*                                   CLPA),
*                                   0 = ASM INITIALIZATION PROCESSED
*                                   PLPA IN COLD START MODE (CLPA), OR
*                                   WAS FORCED TO CONVERT TO COLD
*                                   START MODE
ASMWARM     EQU         BIT5        WARM START IPL FLAG,
*                                   1 = ASM INITIALIZATION PROCESSED
*                                   VIO DATA SETS IN WARM START MODE
*                                   (NOT CVIO),
*                                   0 = ASM INITIALIZATION PROCESSED
*                                   VIO DATA SETS IN CVIO MODE, OR
*                                   WAS FORCED TO CONVERT A WARM
*                                   START REQUEST TO CVIO
ASMDSSFS    DC          XL2'00'     IF NOT ZERO, FIRST SLOT NUMBER OF
*                                   DSS RESERVED AREA ON PLPA PAGE
*                                   DATASET                   @ZA14260
ASMSART     DC          A(0)        ADDRESS OF SWAP ACTIVITY REFERENCE
*                                   TABLE - SART
ASMPART     DC          A(0)        ADDRESS OF PAGING ACTIVITY
*                                   REFERENCE TABLE - PART
ASMGOS      DC          V(ILRGOS)   ADDRESS OF ILRGOS, USED BY ILRCALL
*                                   MACRO
ASMTRPAG    DC          V(ILRTRPAG) ADDRESS OF ILRTRPAG, ENTRY POINT
*                                   IN ILRPOS, USED BY ILRCALL MACRO
ASMEREC     DC          A(0)        ADDRESS OF BAD SLOT ERROR RECORD
*                                   MAINTAINED BY ILRCMP
ASMMSGBF    DC          A(0)        ADDRESS OF MESSAGE BUFFER USED BY
*                                   ASM MESSAGE ROUTINE
ASMRSV5     DC          XL4'00'     RESERVED
*
*  THE FOLLOWING SECTION OF THE ASMVT IS USED PRIMARILY BY THE I/O
*  CONTROL MODULES OF ASM.
*
ASMSTAGQ    DS          0D          I/O STAGING QUEUE CONTAINING AIA'S
*                                   WAITING FOR AVAILABLE IOE'S
ASMSTAGF    DC          A(0)        ADDRESS OF FIRST AIA ON STAGING
*                                   QUEUE
ASMSTAGL    DC          A(0)        ADDRESS OF LAST AIA ON STAGING
*                                   QUEUE
ASMIORQR    DC          F'0'        COUNT OF I/O REQUESTS (AIA'S)
*                                   RECEIVED BY I/O CONTROL, THIS DOES
*                                   NOT INCLUDE LSQA SWAP AIA'S
ASMIORQC    DC          F'0'        COUNT OF I/O REQUESTS (AIA'S)
*                                   COMPLETED AND RETURNED TO RSM
ASMRSV6     DC          XL16'00'    RESERVED
*
*  THE FOLLOWING SECTION OF THE ASMVT IS USED PRIMARILY BY THE I/0
*  SUBSYSTEM MODULES OF ASM.
*
ASMPCCWQ    DS          0D          QUEUE OF AVAILABLE PCCW'S FOR SLOT
*                                   SORT, THIS QUEUE IS MAINTAINED BY
*                                   COMPARE AND SWAP LOGIC WHICH MAKES
*                                   THE SYNCHRONIZATION COUNT NECESSARY
ASMPCCWA    DC          A(0)        ADDRESS OF FIRST AVAILABLE PCCW
ASMPCCWC    DC          F'0'        SYNCHRONIZATION COUNT, DECREMENTED
*                                   WHEN REMOVING PCCW'S, UNCHANGED
*                                   WHEN ADDING PCCW'S
ASMPCCWN    DC          F'0'        NUMBER OF PCCW'S BUILT BY RIM
ASMBURST    DC          F'0'        LENGTH OF SERVICE BURST FOR PAGE
*                                   DATA SETS (IN MICROSECONDS)
ASMIOCNT    DC          F'0'        COUNT OF STARTIO REQUESTS MADE TO
*                                   IOS THAT HAVE NOT COMPLETED
ASMSRBCT    DC          F'0'        NUMBER OF SRB'S SCHEDULED FOR THE
*                                   I/O SUBSYSTEM THAT HAVE NOT BEEN
*                                   DISPATCHED, THIS COUNT SHOULD BE
*                                   EITHER 0 OR 1, IT IS MAINTAINED BY
*                                   COMPARE AND SWAP LOGIC
ASMPSRB     DC          A(0)        ADDRESS OF SRB USED TO SCHEDULE THE
*                                   I/O SUBSYSTEM
ASMRSV7     DC          XL16'00'    RESERVED
*
*  THE FOLLOWING SECTION OF THE ASMVT IS USED FOR PAGE DATA SET SLOT
*  ACCOUNTING.
*
ASMBKSLT    DC          F'0'        COUNT OF UNRESERVED LOCAL SLOTS,
*                                   THIS COUNT IS DECREMENTED AND
*                                   INCREMENTED FOR EACH ADDRESS SPACE
*                                   OR VIO LG CREATED OR DELETED
ASMSLOTS    DC          F'0'        COUNT OF TOTAL LOCAL SLOTS IN ALL
*                                   OPEN LOCAL PAGE DATA SETS
ASMVSC      DC          F'0'        COUNT OF TOTAL LOCAL SLOTS
*                                   ALLOCATED TO VIO PRIVATE AREA
*                                   PAGES
ASMNVSC     DC          F'0'        COUNT OF TOTAL LOCAL SLOTS
*                                   ALLOCATED TO NON-VIO PRIVATE AREA
*                                   PAGES
ASMERRS     DC          F'0'        COUNT OF BAD SLOTS FOUND ON LOCAL
*                                   DATA SETS DURING NORMAL OPERATIONS
*
*  THE FOLLOWING SECTION OF THE ASMVT IS USED PRIMARILY BY THE VIO
*  CONTROLLER AND THE GROUP OPERATOR MODULES.
*
ASMSLOTV    DC          V(ILRSLOTV) ADDRESS OF THE SLOTV CONSTANT
ASMLGVT     DC          A(0)        ADDRESS OF THE LOGICAL GROUP
*                                   VECTOR TABLE
ASMSTGXA    DC          A(0)        ADDRESS OF THE ACB FOR
*                                   SYS1.STGINDEX
ASMCINV     DC          F'0'        NUMBER OF CONTROL INTERVALS IN
*                                   SYS1.STGINDEX
ASMLSAI     DS          0D          ASM STORAGE LOCATOR 'S' SYMBOL
*                                   GENERATOR, LAST 'S' SYMBOL
*                                   ASSIGNED
ASMLSAIL    DC          F'0'        LOW WORD OF 'S' SYMBOL GENERATOR
ASMLSAIH    DC          F'0'        HIGH WORD OF 'S' SYMBOL GENERATOR
ASMGOSQS    DS          0D          DOUBLEWORD REFERENCE FOR GOS WORK
*                                   QUEUES
ASMGOSWT    DC          F'0'        QUEUE OF ELEMENTS FOR ACE'S
*                                   WAITING FOR VSAM BUFFER TO BECOME
*                                   AVAILABLE, USED BY ILRGOS
ASMGOSWK    DC          F'0'        FIFO WORK QUEUE OF ELEMENTS FOR
*                                   ACE'S, USED BY ILRGOS TO START
*                                   OPERATIONS WAITING FOR VSAM
*                                   BUFFERS
ASMREQCT    DC          F'0'        NUMBER OF SIMULTANEOUS REQUESTS
*                                   THAT CAN BE MADE TO VSAM, THIS
*                                   NUMBER (MINUS ONE FOR ILRTMRLG'S
*                                   USE) CORRESPONDS TO THE STRING
*                                   NUMBER PARAMETER ON THE OPEN FOR
*                                   SYS1.STGINDEX
ASMTCBPT    DC          A(0)        ADDRESS OF ASM TCB
ASMTMECB    DC          F'0'        ECB USED BY ILRTMRLG TO WAIT FOR
*                                   WORK, THIS ECB IS POSTED BY
*                                   ILRRLG
ASMRLGRQ    DC          F'0'        REQUEST QUEUE FOR ILRTMRLG
*                                   CONSISTING OF ACE'S QUEUED BY
*                                   ILRRLG, QUEUE IS SERIALIZED BY
*                                   COMPARE AND SWAP LOGIC
ASMRLGWQ    DC          F'0'        WORK QUEUE FOR ILRTMRLG TO HOLD
*                                   ACE'S MOVED FROM REQUEST QUEUES
ASMTASCB    DC          F'0'        ADDRESS OF ASCB FOR ADDRESS SPACE
*                                   IN WHICH ILRTMRLG IS RUNNING
ASMVSAMW    DC          F'0'        QUEUE OF ELEMENTS FOR ACES
*                                   WAITING FOR A PARTICULAR RECORD
*                                   ON SYS1.STGINDEX TO BECOME
*                                   AVAILBLE, USED BY ILRVSAMI @ZA15367
ASMRSV8     DC          XL4'00'     RESERVED
*
*  THE FOLLOWING SECTION OF THE ASMVT CONTAINS ENTRY POINT ADDRESSES
*  OF THOSE ASM ROUTINES OR SUBROUTINES THAT ARE CALLED BY MORE THAN
*  ONE MODULE, OR THAT RESIDE IN LPA.  LPA ROUTINE ENTRY POINTS ARE
*  DETERMINED AT TASK MODULE INITIALIZATION.
*
ASMPQIOE    DC          V(ILRQIOE)  ADDRESS OF ILRQIOE, SUBROUTINE OF
*                                   ILRPAGIO
ASMPFRSL    DC          V(ILRFRSL1) ADDRESS OF ILRFRSL1, FREESLOT
*                                   ENTRY POINT OF ILRFRSLT
ASMPFRSW    DC          V(ILRFRSW1) ADDRESS OF ILRFRSW1, FREESWAP
*                                   ENTRY POINT OF ILRFRSLT
ASMPTM      DC          V(ILRPTM)   ADDRESS OF ILRPTM
ASMPSWPD    DC          V(ILRSWPDR) ADDRESS OF ILRSWPDR
ASMPSRMT    DC          V(ILRPSRMT) ADDRESS OF ILRPSRMT, PART MONITOR
*                                   AND SWAP DRIVER RMTR
ASMPSRBC    DC          V(ILRSRBC)  ADDRESS OF ILRSRBC
ASMVRMTR    DC          V(ILRSRBRM) ADDRESS OF ILRSRBRM, ENTRY POINT
*                                   OF ILRSRBC FOR VIO RMTR
ASMPEX      DC          V(ILRPEX)   ADDRESS OF ILRPEX
ASMPCMPD    DC          V(ILRCMPDI) ADDRESS OF ILRCMPDI, ENTRY POINT
*                                   OF ILRCMP.            @ZA25907
ASMPCMPN    DC          V(ILRCMPNE) ADDRESS OF ILRCMPNE, ENTRY POINT
*                                   OF ILRCMP
ASMPCMPA    DC          V(ILRCMPAE) ADDRESS OF ILRCMPAE, ENTRY POINT
*                                   OF ILRCMP
ASMPCMP     DC          V(ILRCMP)   ADDRESS OF ILRCMP
ASMPSAV     DC          A(0)        ADDRESS OF ILRSAV
ASMPACT     DC          A(0)        ADDRESS OF ILRACT
ASMPRLG     DC          A(0)        ADDRESS OF ILRRLG
ASMPFRLG    DC          V(ILRFRELG) ADDRESS OF ILRFRELG, ENTRY POINT
*                                   OF ILRGOS
ASMPMSG0    DC          V(ILRMSG00) ADDRESS OF ILRMSG00
ASMPMSGS    DC          V(ILRMSGSP) ADDRESS OF ILRMSGSP, ENTRY POINT
*                                   OF ILRMSG00
ASMPVACQ    DC          V(ILRVACQ2) ADDRESS OF ILRVACQ2, ENTRY POINT
*                                   OF ILRFRR01
ASMPIOFR    DC          V(ILRIOFRR) ADDRESS OF ILRIOFRR, I/O CONTROL
*                                   RECOVERY ROUTINE
ASMPVACE    DC          V(ILRVACE)  ADDRESS OF ILRVACE, ENTRY POINT
*                                   OF ILRFRR01
ASMRSV10    DC          XL16'00'    RESERVED
*
*  THE FOLLOWING SECTION OF THE ASMVT CONTAINS THE POOL CONTROLLERS
*  THAT ARE USED BY THE GMA MACRO TO OBTAIN AND RELEASE CELLS FOR
*  THOSE ROUTINES REQUIRING ONE OF THESE CONTROL BLOCKS.  THE POOL
*  CONTROLLER MAPPING APPEARS AT THE END OF THE ASMVT.
*
ASMIOEPC    DC          XL16'00'    IOE POOL CONTROLLER
ASMBWKPC    DC          XL16'00'    256 BYTE WORKAREA POOL CONTROLLER
ASMSWKPC    DC          XL16'00'    512 BYTE WORKAREA POOL CONTROLLER,
*                                   USED EXCLUSIVELY BY ILRVSAMI
ASMACEPC    DC          XL24'00'    ACE POOL CONTROLLER
*
*  THE FOLLOWING SECTION OF THE ASMVT CONTAINS WORK-SAVE AREAS USED BY
*  THE ASM ROUTINES THAT RUN WITH THE SALLOC LOCK.
*
ASMWKSA1    DC          XL80'00'    USED BY ILRPAGIO
ASMWKSA2    DC          XL80'00'    USED BY ILRQIOE, SUBROUTINE OF
*                                   ILRPAGIO
ASMWKSA3    DC          XL80'00'    USED BY ILRPAGCM
ASMWKSA4    DC          XL80'00'    USED BY ILRSWAP
ASMWKSA5    DC          XL80'00'    USED BY ILRSLSQA, SUBROUTINE OF
*                                   ILRSWAP
ASMWKSA6    DC          XL80'00'    USED BY ILRPOS AND ILRVIOCM
ASMWKSA7    DC          XL80'00'    USED BY ILRPEX AND ILRMSG00
ASMSAVE     DC          XL72'00'    STANDARD REGISTER SAVE AREA USED
*                                   BY ASM WHEN CALLING OTHER ROUTINES
ASMRSV12    DC          XL24'00'    RESERVED
*
*  THE FOLLOWING IS THE MAPPING OF THE POOL CONTROLLERS CONTAINED IN
*  THE ASMVT:
*
ASMPOOLS    DSECT                   CELLPOOL CONTROLLER MAPPING
ASMCPID     DS          CL4         CELLPOOL IDENTIFIER
ASMCPSIZ    DS          H           SIZE OF EACH CELL IN POOL
ASMCPEXT    DS          H           NUMBER OF CELLS IN POOL EXTENSION
ASMCPAVQ    DS          0D          AVAILABLE CELL POOL CONTROL
ASMCPAVL    DS          A           ADDRESS OF FIRST AVAILABLE CELL
*                                   IN POOL
ASMCPCNT    DS          F           COUNT FOR SYNCHRONIZATION OF THIS
*                                   POOL, DECREMENTED WHEN REMOVING
*                                   CELL FROM POOL, UNCHANGED WHEN
*                                   PLACING CELL BACK IN THE POOL
ASMCPRSQ    DS          0D          ACE POOL ONLY, ACE RESERVE CELL
*                                   POOL CONTROL
ASMCPTAK    DS          F           ACE POOL ONLY, NUMBER OF CELLS
*                                   TAKEN FROM RESERVE QUEUE
ASMCPRES    DS          F           ACE POOL ONLY, RESERVE QUEUE OF
*                                   ACE CELLS USED ONLY WHEN ACE
*                                   REQUIRED BY ROUTINES RUNNING WITH
*                                   THE SALLOC LOCK
            MEND                    END OF BAL SECTION               */
*%ASMVTPLS:;
*DECLARE
*  1 ASMVT BASED(ASMVTPTR) BDY(DWORD), /* ASM VECTOR TABLE           */
*    3 ASMFLAG1 BIT(8),          /* ASM GLOBAL FLAG FIELD 1          */
*      5 ASMDUPLX BIT(1),        /* DUPLEXING OPTION FLAG,
*                                   1 = DUPLEXING OF COMMON REQUESTED
*                                   DUPLEX PAGE DATA SET OPENED BY RIM
*                                   0 = DUPLEXING NOT REQUESTED, NO
*                                   DUPLEX DATA SET OPENED BY RIM, OR
*                                   DUPLEXING SUSPENDED IF DUPLEXING
*                                   SUSPENDED FLAG IS ON             */
*      5 ASMNOCWQ BIT(1),        /* NO COMMON WRITE QUEUE FLAG,
*                                   1 = DO NOT QUEUE WRITE IOE'S TO
*                                   COMMON WRITE QUEUE,
*                                   0 = DO NORMAL IOE QUEUING        */
*      5 ASMNOLCL BIT(1),        /* NO LOCAL DATA PAGING FLAG,
*                                   1 = ALL WRITE IOE'S MUST BE
*                                   QUEUED TO COMMON WRITE QUEUE,
*                                   0 = QUEUE IOE'S NORMALLY         */
*      5 ASMRSV1 BIT(1),         /* RESERVED                         */
*      5 ASMNODPX BIT(1),        /* DUPLEXING SUSPENDED FLAG,
*                                   1 = DUPLEXING HAS BEEN SUSPENDED
*                                   BECAUSE THE DUPLEX PAGE DATA SET
*                                   IS FULL OR INOPERATIVE,
*                                   0 = DUPLEXING STILL ACTIVE IF
*                                   REQUESTED                        */
*      5 ASMPLPAF BIT(1),        /* PLPA DATA SET FULL FLAG,
*                                   1 = PLPA DATA SET FULL,
*                                   0 = PLPA DATA SET NOT FULL       */
*      5 ASMCOMMF BIT(1),        /* COMMON DATA SET FULL FLAG,
*                                   1 = COMMON DATA SET FULL,
*                                   0 = COMMON DATA SET NOT FULL     */
*      5 ASMPLPAS BIT(1),        /* PLPA DATA SET SPILL FLAG,
*                                   1 = PLPA DATA SET SPILLED TO
*                                   COMMON DATA SET DURING PLPA BUILD
*                                   AT NIP TIME,
*                                   0 = PLPA DATA SET NOT FULL AFTER
*                                   PLPA BUILD                       */
*    3 ASMFLAG2 BIT(8),          /* ASM GLOBAL FLAG FIELD 2          */
*      5 ASMCALLQ BIT(1),        /* QIOE CALLER FLAG,
*                                   1 = PAGE COMPLETION IS THE CALLER
*                                   OF QIOE,
*                                   0 = QIOE CALLED BY SOME OTHER ASM
*                                   ROUTINE                          */
*      5 ASMNOSAV BIT(1),        /* NO SAVE FLAG,
*                                   1 = SYS1.STGINDEX UNAVAILABLE OR
*                                   FULL, SAVE REQUESTS NOT DONE,
*                                   0 = SYS1.STGINDEX AVAILABLE FOR
*                                   USE                              */
*      5 ASMNOTMR BIT(1),        /* NO TASK MODE RELEASE FLAG,
*                                   1 = TASK MODE RELEASE (ILRTMRLG)
*                                   HAS SUFFERED INDETERMINATE ERRORS,
*                                   DO NOT POST ITS ECB,
*                                   0 = ILRTMRLG RUNNING NORMALLY    */
*      5 ASMNOTPT BIT(1),        /* NO TPARTABLE FLAG,
*                                   1 = A READ OR WRITE OF TPARTABLE
*                                   HAS FAILED, IT IS NOT UP TO DATE,
*                                   0 = TPARTABLE AVAILABLE AND
*                                   CORRECT                          */
*      5 ASMQUICK BIT(1),        /* QUICK START IPL FLAG,
*                                   1 = ASM INITIALIZATION PROCESSED
*                                   PLPA IN QUICK START MODE (NOT
*                                   CLPA),
*                                   0 = ASM INITIALIZATION PROCESSED
*                                   PLPA IN COLD START MODE (CLPA),
*                                   OR WAS FORCED TO CONVERT TO COLD
*                                   START MODE                       */
*      5 ASMWARM BIT(1),         /* WARM START IPL FLAG,
*                                   1 = ASM INITIALIZATION PROCESSED
*                                   VIO DATA SETS IN WARM START MODE
*                                   (NOT CVIO),
*                                   0 = ASM INITIALIZATION PROCESSED
*                                   VIO DATA SETS IN CVIO MODE, OR
*                                   WAS FORCED TO CONVERT A WARM START
*                                   REQUEST TO CVIO                  */
*    3 ASMDSSFS CHAR(2),         /* IF NOT ZERO, FIRST SLOT NUMBER OF
*                                   DSS RESERVED AREA ON PLPA PAGE
*                                   DATASET                  @ZA14260*/
*    3 ASMSART PTR(31),          /* ADDRESS OF SWAP ACTIVITY REFERENCE
*                                   TABLE - SART                     */
*    3 ASMPART PTR(31),          /* ADDRESS OF PAGING ACTIVITY
*                                   REFERENCE TABLE - PART           */
*    3 ASMGOS PTR(31),           /* ADDRESS OF ILRGOS, USED BY
*                                   ILRCALL MACRO                    */
*    3 ASMTRPAG PTR(31),         /* ADDRESS OF ILRTRPAG, ENTRY POINT
*                                   IN ILRPOS, USED BY ILRCALL MACRO */
*    3 ASMEREC PTR(31),          /* ADDRESS OF BAD SLOT ERROR RECORD
*                                   MAINTAINED BY ILRCMP             */
*    3 ASMMSGBF PTR(31),         /* ADDRESS OF MESSAGE BUFFER USED BY
*                                   ASM MESSAGE ROUTINE              */
*    3 ASMRSV5 CHAR(4),          /* RESERVED                         */
*
* /*******************************************************************/
* /*                                                                 */
* /*  THE FOLLOWING SECTION OF THE ASMVT IS USED PRIMARILY BY THE    */
* /*  I/O CONTROL MODULES OF ASM.                                    */
* /*                                                                 */
* /*******************************************************************/
*
*    3 ASMSTAGQ CHAR(8) BDY(DWORD), /* I/O STAGING QUEUE CONTAINING
*                                   AIA'S WAITING FOR AVAILABLE
*                                   IOE'S                            */
*      5 ASMSTAGF PTR(31),       /* ADDRESS OF FIRST AIA ON STAGING
*                                   QUEUE                            */
*      5 ASMSTAGL PTR(31),       /* ADDRESS OF LAST AIA ON STAGING
*                                   QUEUE                            */
*    3 ASMIORQR FIXED(31),       /* COUNT OF I/O REQUESTS (AIA'S)
*                                   RECEIVED BY I/O CONTROL, THIS
*                                   DOES NOT INCLUDE LSQA SWAP AIA'S */
*    3 ASMIORQC FIXED(31),       /* COUNT OF I/O REQUESTS (AIA'S)
*                                   COMPLETED AND RETURNED TO RSM    */
*    3 ASMRSV6 CHAR(16),         /* RESERVED                         */
*
* /*******************************************************************/
* /*                                                                 */
* /*  THE FOLLOWING SECTION OF THE ASMVT IS USED PRIMARILY BY THE    */
* /*  I/O SUBSYSTEM MODULES OF ASM.                                  */
* /*                                                                 */
* /*******************************************************************/
*
*    3 ASMPCCWQ CHAR(8) BDY(DWORD), /* QUEUE OF AVAILABLE PCCW'S FOR
*                                   SLOT SORT, QUEUE IS MAINTAINED
*                                   BY COMPARE AND SWAP LOGIC WHICH
*                                   MAKES THE SYNCHRONIZATION COUNT
*                                   NECESSARY                        */
*      5 ASMPCCWA PTR(31),       /* ADDRESS OF FIRST AVAILABLE PCCW  */
*      5 ASMPCCWC FIXED(31),     /* SYNCHRONIZATION COUNT, DECREMENTED
*                                   WHEN REMOVING PCCW'S, UNCHANGED
*                                   WHEN ADDING PCCW'S               */
*    3 ASMPCCWN FIXED(31),       /* NUMBER OF PCCW'S BUILT BY RIM    */
*    3 ASMBURST FIXED(31),       /* LENGTH OF SERVICE BURST FOR PAGE
*                                   DATA SETS (IN MICROSECONDS)      */
*    3 ASMIOCNT FIXED(31),       /* COUNT OF STARTIO REQUESTS MADE TO
*                                   IOS THAT HAVE NOT COMPLETED      */
*    3 ASMSRBCT FIXED(31),       /* NUMBER OF SRB'S SCHEDULED FOR THE
*                                   I/O SUBSYSTEM THAT HAVE NOT BEEN
*                                   DISPATCHED, THIS COUNT SHOULD BE
*                                   EITHER 0 OR 1, IT IS MAINTAINED
*                                   BY COMPARE AND SWAP LOGIC        */
*    3 ASMPSRB PTR(31),          /* ADDRESS OF SRB USED TO SCHEDULE
*                                   THE I/O SUBSYSTEM                */
*    3 ASMRSV7 CHAR(16),         /* RESERVED                         */
*
* /*******************************************************************/
* /*                                                                 */
* /*  THE FOLLOWING SECTION OF THE ASMVT IS USED FOR PAGE DATA SET   */
* /*  SLOT ACCOUNTING.                                               */
* /*                                                                 */
* /*******************************************************************/
*
*    3 ASMBKSLT FIXED(31),       /* COUNT OF UNRESERVED LOCAL SLOTS,
*                                   THIS COUNT IS DECREMENTED AND
*                                   INCREMENTED FOR EACH ADDRESS SPACE
*                                   OR VIO LG CREATED OR DELETED     */
*    3 ASMSLOTS FIXED(31),       /* COUNT OF TOTAL LOCAL SLOTS IN ALL
*                                   OPEN LOCAL PAGE DATA SETS        */
*    3 ASMVSC FIXED(31),         /* COUNT OF TOTAL LOCAL SLOTS
*                                   ALLOCATED TO VIO PRIVATE AREA
*                                   PAGES                            */
*    3 ASMNVSC FIXED(31),        /* COUNT OF TOTAL LOCAL SLOTS
*                                   ALLOCATED TO NON-VIO PRIVATE AREA
*                                   PAGES                            */
*    3 ASMERRS FIXED(31),        /* COUNT OF BAD SLOTS FOUND ON LOCAL
*                                   DATA SETS DURING NORMAL
*                                   OPERATIONS                       */
*
* /*******************************************************************/
* /*                                                                 */
* /*  THE FOLLOWING SECTION OF THE ASMVT IS USED PRIMARILY BY THE    */
* /*  VIO CONTROLLER AND THE GROUP OPERATOR MODULES.                 */
* /*                                                                 */
* /*******************************************************************/
*
*    3 ASMSLOTV PTR(31),         /* ADDRESS OF THE SLOTV CONSTANT    */
*    3 ASMLGVT PTR(31),          /* ADDRESS OF THE LOGICAL GROUP
*                                   VECTOR TABLE                     */
*    3 ASMSTGXA PTR(31),         /* ADDRESS OF THE ACB FOR
*                                   SYS1.STGINDEX                    */
*    3 ASMCINV FIXED(31),        /* NUMBER OF CONTROL INTERVALS IN
*                                   SYS1.STGINDEX                    */
*    3 ASMLSAI CHAR(8) BDY(DWORD), /* ASM STORAGE LOCATOR 'S' SYMBOL
*                                   GENERATOR, LAST 'S' SYMBOL
*                                   ASSIGNED                         */
*      5 ASMLSAIL FIXED(31),     /* LOW WORD OF 'S' SYMBOL GENERATOR */
*      5 ASMLSAIH FIXED(31),     /* HIGH WORD OF 'S' SYMBOL GENERATOR*/
*    3 ASMGOSQS CHAR(8) BDY(DWORD), /* DOUBLEWORD REFERENCE FOR GOS
*                                   WORK QUEUES                      */
*      5 ASMGOSWT FIXED(31),     /* QUEUE OF ELEMENTS FOR ACE'S
*                                   WAITING FOR VSAM BUFFER TO BECOME
*                                   AVAILABLE, USED BY ILRGOS        */
*      5 ASMGOSWK FIXED(31),     /* FIFO WORK QUEUE OF ELEMENTS FOR
*                                   ACE'S, USED BY ILRGOS TO START
*                                   OPERATIONS WAITING FOR VSAM
*                                   BUFFERS                          */
*    3 ASMREQCT FIXED(31),       /* NUMBER OF SIMULTANEOUS REQUESTS
*                                   THAT CAN BE MADE TO VSAM, THIS
*                                   NUMBER (MINUS ONE FOR ILRTMRLG'S
*                                   USE) CORRESPONDS TO THE STRING
*                                   NUMBER PARAMETER ON THE OPEN FOR
*                                   SYS1.STGINDEX                    */
*    3 ASMTCBPT PTR(31),         /* ADDRESS OF ASM TCB               */
*    3 ASMTMECB FIXED(31),       /* ECB USED BY ILRTMRLG TO WAIT FOR
*                                   WORK, THIS ECB IS POSTED BY
*                                   ILRRLG                           */
*    3 ASMRLGRQ FIXED(31),       /* REQUEST QUEUE FOR ILRTMRLG
*                                   CONSISTING OF ACE'S QUEUED BY
*                                   ILRRLG, QUEUE IS SERIALIZED BY
*                                   COMPARE AND SWAP LOGIC           */
*    3 ASMRLGWQ FIXED(31),       /* WORK QUEUE FOR ILRTMRLG TO HOLD
*                                   ACE'S MOVED FROM REQUEST QUEUES  */
*    3 ASMTASCB PTR(31),         /* ADDRESS OF ASCB FOR ADDRESS SPACE
*                                   IN WHICH ILRTMRLG IS RUNNING     */
*    3 ASMVSAMW FIXED(31),       /* QUEUE OF ELEMENTS FOR ACES WAITING
*                                   FOR A PARTICULAR RECORD ON
*                                   SYS1.STGINDEX TO BECOME AVAILABLE
*                                   TO BECOME AVAILABLE, USED BY
*                                   ILRVSAMI                 @ZA15367*/
*    3 ASMRSV8 CHAR(4),          /* RESERVED                         */
*
* /*******************************************************************/
* /*                                                                 */
* /*  THE FOLLOWING SECTION OF THE ASMVT CONTAINS ENTRY POINT        */
* /*  ADDRESSES OF THOSE ASM ROUTINES OR SUBROUTINES THAT ARE CALLED */
* /*  BY MORE THAN ONE MODULE, OR THAT RESIDE IN LPA.  LPA ROUTINE   */
* /*  ENTRY POINTS ARE DETERMINED AT TASK MODE INITIALIZATION.       */
* /*                                                                 */
* /*******************************************************************/
*
*    3 ASMPQIOE PTR(31),         /* ADDRESS OF ILRQIOE, SUBROUTINE OF
*                                   ILRPAGIO                         */
*    3 ASMPFRSL PTR(31),         /* ADDRESS OF ILRFRSL1, FREESLOT
*                                   ENTRY POINT OF ILRFRSLT          */
*    3 ASMPFRSW PTR(31),         /* ADDRESS OF ILRFLSW1, FREESWAP
*                                   ENTRY POINT OF ILRFRSLT          */
*    3 ASMPTM PTR(31),           /* ADDRESS OF ILRPTM                */
*    3 ASMPSWPD PTR(31),         /* ADDRESS OF ILRSWPDR              */
*    3 ASMPSRMT PTR(31),         /* ADDRESS OF ILRPSRMT, PART MONITOR
*                                   AND SWAP DRIVER RMTR             */
*    3 ASMPSRBC PTR(31),         /* ADDRESS OF ILRSRBC               */
*    3 ASMVRMTR PTR(31),         /* ADDRESS OF ILRSRBRM, ENTRY POINT
*                                   OF ILRSRBC FOR VIO RMTR          */
*    3 ASMPEX PTR(31),           /* ADDRESS OF ILRPEX                */
*    3 ASMPCMPD PTR(31),         /* ADDRESS OF ILRCMPDI, ENTRY POINT
*                                   OF ILRCMP.               @ZA25907*/
*    3 ASMPCMPN PTR(31),         /* ADDRESS OF ILRCMPNE, ENTRY POINT
*                                   OF ILRCMP                        */
*    3 ASMPCMPA PTR(31),         /* ADDRESS OF ILRCMPAE, ENTRY POINT
*                                   OF ILRCMP                        */
*    3 ASMPCMP PTR(31),          /* ADDRESS OF ILRCMP                */
*    3 ASMPSAV PTR(31),          /* ADDRESS OF ILRSAV                */
*    3 ASMPACT PTR(31),          /* ADDRESS OF ILRACT                */
*    3 ASMPRLG PTR(31),          /* ADDRESS OF ILRRLG                */
*    3 ASMPFRLG PTR(31),         /* ADDRESS OF ILRFRELG, ENTRY POINT
*                                   OF ILRGOS                        */
*    3 ASMPMSG0 PTR(31),         /* ADDRESS OF ILRMSG00              */
*    3 ASMPMSGS PTR(31),         /* ADDRESS OF ILRMSGSP, ENTRY POINT
*                                   OF ILRMSG00                      */
*    3 ASMPVACQ PTR(31),         /* ADDRESS OF ILRVACQ2, ENTRY POINT
*                                   OF ILRFRR01                      */
*    3 ASMPIOFR PTR(31),         /* ADDRESS OF ILRIOFRR, I/O CONTROL
*                                   RECOVERY ROUTINE                 */
*    3 ASMPVACE PTR(31),         /* ADDRESS OF ILRVACE, ENTRY POINT
*                                   OF ILRFRR01                      */
*    3 ASMRSV10 CHAR(16),        /* RESERVED                         */
*
* /*******************************************************************/
* /*                                                                 */
* /*  THE FOLLOWING SECTION OF THE ASMVT CONTAINS THE POOL           */
* /*  CONTROLLERS THAT ARE USED BY THE GMA MACRO TO OBTAIN AND       */
* /*  RELEASE CELLS FOR THOSE ROUTINES REQUIRING ONE OF THESE        */
* /*  CONTROL BLOCKS.  THE POOL CONTROLLER MAPPING APPEARS AT THE    */
* /*  END OF THE ASMVT.                                              */
* /*                                                                 */
* /*******************************************************************/
*
*    3 ASMIOEPC CHAR(16) BDY(DWORD), /* IOE POOL CONTROLLER          */
*    3 ASMBWKPC CHAR(16) BDY(DWORD), /* 256 BYTE WORKAREA POOL
*                                   CONTROLLER                       */
*    3 ASMSWKPC CHAR(16) BDY(DWORD), /* 512 BYTE WORKAREA POOL
*                                   CONTROLLER, USED EXCLUSIVELY BY
*                                   ILRVSAMI                         */
*    3 ASMACEPC CHAR(24) BDY(DWORD), /* ACE POOL CONTROLLER          */
*
* /*******************************************************************/
* /*                                                                 */
* /*  THE FOLLOWING SECTION OF THE ASMVT CONTAINS WORK-SAVE AREAS    */
* /*  USED BY THE ASM ROUTINES THAT RUN WITH THE SALLOC LOCK.        */
* /*                                                                 */
* /*******************************************************************/
*
*    3 ASMWKSA1 CHAR(80) BDY(DWORD), /* USED BY ILRPAGIO             */
*    3 ASMWKSA2 CHAR(80) BDY(DWORD), /* USED BY ILRQIOE, SUBROUTINE OF
*                                   ILRPAGIO                         */
*    3 ASMWKSA3 CHAR(80) BDY(DWORD), /* USED BY ILRPAGCM             */
*    3 ASMWKSA4 CHAR(80) BDY(DWORD), /* USED BY ILRSWAP              */
*    3 ASMWKSA5 CHAR(80) BDY(DWORD), /* USED BY ILRSLSQA, SUBROUTINE
*                                   OF ILRSWAP                       */
*    3 ASMWKSA6 CHAR(80) BDY(DWORD), /* USED BY ILRPOS AND ILRVIOCM  */
*    3 ASMWKSA7 CHAR(80) BDY(DWORD), /* USED BY ILRPEX AND ILRMSG00  */
*    3 ASMSAVE CHAR(72) BDY(DWORD), /* STANDARD REGISTER SAVE AREA
*                                   USED BY ASM WHEN CALLING OTHER
*                                   ROUTINES                         */
*    3 ASMRSV12 CHAR(24);        /* RESERVED                         */
*
* /*******************************************************************/
* /*                                                                 */
* /*  THE FOLLOWING IS THE MAPPING OF THE POOL CONTROLLERS CONTAINED */
* /*  IN THE ASMVT.                                                  */
* /*                                                                 */
* /*******************************************************************/
*
*DECLARE
*  1 ASMPOOLS BASED BDY(DWORD),  /* CELLPOOL CONTROLLER MAPPING      */
*    3 ASMCPID CHAR(4),          /* CELLPOOL IDENTIFIER              */
*    3 ASMCPSIZ FIXED(15),       /* SIZE OF EACH CELL IN POOL        */
*    3 ASMCPEXT FIXED(15),       /* NUMBER OF CELLS IN POOL EXTENSION*/
*    3 ASMCPAVQ CHAR(8) BDY(DWORD), /* AVAILABLE CELL POOL CONTROL   */
*      5 ASMCPAVL PTR(31),       /* ADDRESS OF FIRST AVAILABLE CELL
*                                   IN POOL                          */
*      5 ASMCPCNT FIXED(31),     /* COUNT FOR SYNCHRONIZATION OF THIS
*                                   POOL, DECREMENTED WHEN REMOVING A
*                                   CELL FROM POOL, UNCHANGED WHEN
*                                   PLACING A CELL BACK IN THE POOL  */
*    3 ASMCPRSQ CHAR(8) BDY(DWORD), /* ACE POOL ONLY, ACE RESERVE CELL
*                                   POOL CONTROL                     */
*      5 ASMCPTAK FIXED(31),     /* ACE POOL ONLY, NUMBER OF CELLS
*                                   TAKEN FROM RESERVE QUEUE         */
*      5 ASMCPRES PTR(31);       /* ACE POOL ONLY, RESERVE QUEUE OF
*                                   ACE CELLS USED ONLY WHEN ACE
*                                   REQUIRED BY ROUTINES RUNNING
*                                   WITH THE SALLOC LOCK             */
*
* /*******************************************************************/
* /*                                                                 */
* /*  THE FOLLOWING ARE MAPPINGS OF SOME OF THE WORK-SAVE AREAS      */
* /*  CONTAINED IN THE ASMVT.                                        */
* /*                                                                 */
* /*******************************************************************/
*
*DECLARE
*  1 ASM1WKSV CHAR(80) BDY(DWORD) DEFINED(ASMWKSA1), /* MAPPING OF
*                                   WORK-SAVE AREA USED BY ILRPAGIO  */
*    3 ASM1RGSV CHAR(60) BDY(DWORD), /* INPUT REGISTER SAVE AREA     */
*      5 ASM1RG1 PTR(31),        /* SAVE AREA FOR REG 1              */
*      5 * CHAR(52),             /* SAVE AREA FOR REG 2 TO REG 14    */
*      5 ASM1RG15 PTR(31),       /* SAVE AREA FOR REG 15             */
*    3 ASM1WRKA CHAR(20) BDY(WORD), /* WORK AREA                     */
*      5 ASM1ASCB PTR(31),       /* ADDRESS OF ASCB                  */
*      5 ASM1NXTA PTR(31);       /* ADDRESS OF NEXT AIA              */
*
*DECLARE
*  1 ASM2WKSV CHAR(80) BDY(DWORD) DEFINED(ASMWKSA2), /* MAPPING OF
*                                   WORK-SAVE AREA USED BY ILRQIOE   */
*    3 ASM2RGSV CHAR(52) BDY(DWORD), /* INPUT REGISTER SAVE AREA     */
*    3 ASM2WRKA CHAR(28) BDY(WORD), /* WORK AREA                     */
*      5 ASM2PAQ PTR(31),        /* PTR TO PRIVATE AREA IOE'S        */
*      5 ASM2CAQ PTR(31),        /* PTR TO COMMON AREA IOE'S         */
*      5 ASM2DUPQ PTR(31),       /* PTR TO DUPLEXED IOE'S            */
*      5 ASM2FLGS BIT(8),        /* LOCAL SWITCHES                   */
*        7 ASM2RFLG BIT(1),      /* READ IOE PUT ON SOME PARTE       */
*        7 ASM2WFLG BIT(1),      /* WRITE IOE BUILT                  */
*      5 * CHAR(3),              /* UNUSED                           */
*      5 ASM2SR14 PTR(31);       /* SAVE AREA FOR REG 14             */
*
*DECLARE
*  1 ASM3WKSV CHAR(80) BDY(DWORD) DEFINED(ASMWKSA3), /* MAPPING OF
*                                   WORK-SAVE AREA USED BY ILRPAGCM  */
*    3 ASM3SWPQ PTR(31),         /* QUEUE OF AIA'S FOR SWAPCOMP RTN  */
*    3 ASM3GENQ PTR(31),         /* QUEUE OF AIA'S FOR PAGECOMP RTN  */
*    3 ASM3PIOP PTR(31),         /* QUEUE OF AIA'S FOR RETURN TO PIOP*/
*    3 ASM3TMPA PTR(31),         /* SAVE AREA FOR NEXT AIA PTR       */
*    3 ASM3GRPA PTR(31),         /* SAVE AREA FOR NEXT GROUP PTR     */
*    3 ASM3R14A PTR(31),         /* SAVE AREA FOR 1ST LEVEL REG 14   */
*    3 ASM3R14B PTR(31),         /* SAVE AREA FOR 2ND LEVEL REG 14   */
*    3 ASM3SR13 PTR(31);         /* SAVE AREA FOR REG 13             */
*
*DECLARE
*  1 ASM4WKSV CHAR(80) BDY(DWORD) DEFINED(ASMWKSA4), /* MAPPING OF
*                                   WORK-SAVE AREA USED BY ILRSWAP   */
*    3 ASM4RGSV CHAR(52) BDY(DWORD), /* INPUT REGISTER SAVE AREA     */
*      5 ASM4RG2 PTR(31),        /* SAVE AREA FOR REG 2              */
*      5 * CHAR(48);             /* SAVE AREA FOR REG 3 TO REG 14    */
*
*DECLARE
*  1 ASM5WKSV CHAR(80) BDY(DWORD) DEFINED(ASMWKSA5), /* MAPPING OF
*                                   WORK-SAVE AREA USED BY ILRSLSQA  */
*    3 ASM5RGSV CHAR(52) BDY(DWORD), /* INPUT REGISTER SAVE AREA     */
*      5 ASM5RG2 PTR(31),        /* SAVE AREA FOR REG 2              */
*      5 * CHAR(48),             /* SAVE AREA FOR REG 3 TO REG 14    */
*    3 ASM5SR14 PTR(31),         /* SAVE AREA FOR REG 14             */
*    3 ASM5GCTR FIXED(31),       /* COUNTER FOR GROUPING AIA'S       */
*    3 ASM5AIA PTR(31),          /* TEMP SAVE AREA FOR AIA PTR       */
*    3 ASM5FLGS BIT(8);          /* INTERNAL FLAGS                   */
