*        %GOTO PLSGSDA1;    /*
         MACRO
         IHAGSDA
**/
*%PLSGSDA1 :    ;
*/********************************************************************/
*/*              GLOBAL SYSTEM DUPLEX AREA                           */
*/*              OS/VS2 RELEASE 2,4/11/73,LEVEL 1                    */
*/*                                                                  */
*/********************************************************************/
*        %GOTO PLSGSDA2;       /*
GSDA     DSECT
*        THE FOLLOWING FIELDS DUPLEX CVT FIELDS
GSDA001  EQU   *                       START LABEL FOR CVT DUPLEXING
GSDAASVT DS    A                       ASVT DUPLEXED ADDRESS
GSDAASVB EQU   X'80'                   IF ON DUPLEXED ASVT IS VALID
GSDAPCCT DS    A                       PCCAT DUPLEXED ADDRESS
GSDAPCCB EQU   X'80'                   IF ON DUPLEXED PCCAT IS VALID
GSDAGDA  DS    A                       GDA DUPLEXED ADDRESS
GSDAGDAB EQU   X'80'                   IF ON DUPLEXED GDA IS VALID
GSDACSD  DS    A                       CSD DUPLEXED ADDRESS
GSDACSDB EQU   X'80'                   IF ON DUPLEXED CSD IS VALID
GSDALCCT DS    A                       LCCAT DUPLEXED ADDRESS
GSDALCCB EQU   X'80'                   IF ON DUPLEXED LCCAT IS VALID
GSDA001E EQU   *                       END LABEL FOR CVT DUPLEXING
GSDA001N EQU   (GSDA001E-GSDA001)/4    NUMBER OF CVT ENTRIES
*        THE FOLLOWING FIELDS DUPLEX ASVT FIELDS
GSDAMAX  DS    0F                      MAXUSER VALUE DUPLEX
         DS    H                       FIRST 2 BYTES ONLY USED FOR HIGH
*                                      BIT
GSDAMAXB EQU   X'80'                   IF ON MAXUSER DUPLEX IS VALID
GSDAMAXU DS    H                       MAXUSER DUPLEX AREA
         DS    0D                      ASSURE DOUBLE WORD ALIGNMENT
GSDAEND  EQU   *                       END OF GSDA
GSDALEN  EQU   GSDAEND-GSDA            LENGTH OF GSDA
         MEND  ,    */
*%PLSGSDA2 :    ;
*DECLARE                               /* GLOBAL SYSTEM DUPLEX AREA  */
*  1 GSDA BASED(CVTGSDA),
*    2 GSDAASVT PTR(31),               /* ASVT DUPLEXED ADDRESS      */
*      3 GSDAASVB BIT(1),              /* IF ON THEN DUPLEX IS VALID */
*      3 * BIT(31),                    /* ADDRESS                    */
*    2 GSDAPCCT PTR(31),               /* PCCAT DUPLEXED ADDRESS     */
*      3 GSDAPCCB BIT(1),              /* IF ON THEN DUPLEX IS VALID */
*      3 * BIT(31),                    /* ADDRESS                    */
*    2 GSDAGDA PTR(31),                /* GDA DUPLEXED ADDRESS       */
*      3 GSDAGDAB BIT(1),              /* IF ON THEN DUPLEX IS VALID */
*      3 * BIT(31),                    /* ADDRESS                    */
*    2 GSDACSD PTR(31),                /* CSD DUPLEXED ADDRESS       */
*      3 GSDACSDB BIT(1),              /* IF ON THEN DUPLEX IS VALID */
*      3 * BIT(31),                    /* ADDRESS                    */
*    2 GSDALCCT PTR(31),               /* LCCAT DUPLEXED ADDRESS     */
*      3 GSDALCCB BIT(1),              /* IF ON THEN DUPLEX IS VALID */
*      3 * BIT(31),                    /* ADDRESS                    */
*    2 GSDAMAX FIXED(31),              /* MAXUSER VALUE DUPLEX AREA  */
*      3 * FIXED(15),                  /* USED ONLY FOR HIGH BIT     */
*        4 GSDAMAXB BIT(1),            /* IF ON THEN DUPLEX IS VALID */
*        4 * BIT(15),                  /*RESERVED                    */
*      3 GSDAMAXU FIXED(15),           /* MAXUSER DUPLEX AREA        */
*    2 * CHAR(0) BDY(DWORD);           /* ASSURE DWORD ALIGNED       */
