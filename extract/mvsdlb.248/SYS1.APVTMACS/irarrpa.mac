*        %GOTO RRPAPLS1; /*
         MACRO
         IRARRPA   &DSECT=YES
         IEZBITS                                                     */
*%RRPAPLS1:  ;
* /*                                                                 */
* /* MACCOMP Z-4 SC1CX/PKD16                                         */
* /* MACSTAT Z-4 75007/Z40BPSS                                       */
* /* *************************************************************** */
* /*                                                                 */
* /*   MACRO NAME - IRARRPA                                          */
* /*                                                                 */
* /*   DESCRIPTIVE NAME - SYSTEM RESOURCES MANAGER RECOVERY ROUTINE  */
* /*                      PARAMETER AREA                             */
* /*                                                                 */
* /*   COPYRIGHT - NONE                                              */
* /*                                                                 */
* /*   STATUS - OS/VS2 RELEASE 4, 10/28/75, LEVEL=1                  */
* /*                                                                 */
* /*   FUNCTION - THE RRPA IDENTIFIES THE INVOCATION THAT RESULTED   */
* /*         IN SYSTEM RESOURCES MANAGER PROCESSING, AND SPECIFIES   */
* /*         THE INTERNAL ROUTINE CURRENTLY IN CONTROL.  THE RRPA    */
* /*         PRESERVES STATUS FOR EXIT FROM THE SYSTEM RESOURCES     */
* /*         MANAGER.                                                */
* /*                                                                 */
* /*   METHOD OF ACCESS - BY CONVENTION WITHIN SYSTEM RESOURCES      */
* /*         MANAGER ROUTINES, REGISTER 3 IS RESERVED TO CONTAIN     */
* /*         THE ADDRESS OF THE APPLICABLE RRPA.                     */
* /*                                                                 */
* /* *************************************************************** */
*        %GOTO RRPAPLS2; /*
         AGO   .RRPAAL1                                              */
* /* *************************************************************** */
* /*                                                                 */
* /*   INVOCATION PARAMETERS AND/OR KEYWORDS =                       */
* /*                                                                 */
* /*     BAL - DSECT=NO IF DSECT IS NOT TO BE PRODUCED.              */
* /*                                                                 */
* /*         USING ON RRPA GIVES ADDRESSABILITY TO ALL SYMBOLS.      */
* /*                                                                 */
* /*     PLS - %RRPALEVL='USERLEVL' IF THE RRPA MAPPING IS TO BE     */
* /*         CONCATENATED WITH A PREVIOUS DECLARATION, WITH THE      */
* /*         RRPA BEING ASSIGNED THE INDICATED STRUCTURE LEVEL.      */
* /*         - %RRPA9999=',' IF THE STRUCTURE SHOULD NOT BE CLOSED.  */
* /*                                                                 */
* /*           NOTE - INASMUCH AS THE RRPA AREA IS POINTED TO        */
* /*           DIRECTLY BY A REGISTER, ONLY A STRUCTURE LEVEL OF     */
* /*           '1' (ONE) SHOULD BE USED FOR THE RRPA.                */
* /*                                                                 */
* /*         TO ACCESS AS A STANDALONE STRUCTURE, DCL RRPAPTR PTR.   */
* /*                                                                 */
* /*   CHANGE ACTIVITY = @ZA29015                                    */
* /*                                                                 */
* /*   A000000-999999                                          Y02133*/
* /*                                                                 */
* /* *************************************************************** */
* /*
.RRPAAL1 ANOP
         SPACE 1
         AIF   ('&DSECT' EQ 'NO').RRPAAL2
RRPA     DSECT
         AGO   .RRPAAL3
.RRPAAL2 ANOP
         DS    0D
RRPA     EQU   *
.RRPAAL3 ANOP
         SPACE 1
RRPAINC  DS    0F -                EQUIVALENT OF REG 0 AT ENTRY
RRPAASD  DS    H -                 ASID FOR ORIGINAL ENTRY
RRPAVPGN DS    0X -                VERIFY PGN FOR JOB SELECT   @Z40BPCH
RRPAFLG0 DS    B -                 FLAG BYTE FOR MEMDEL        @ZA29015
RRPANSWI EQU   BIT0 -              =1 FOR MEMDEL TYPE=NOSWIN   @ZA29015
RRPACOD  DS    C -                 ORIGINAL ENTRY SYSEVENT CODE
RRPAINP  DS    0A -                INPUT PARAMETER ADDRESS
RRPAVLU  DS    F -                 EQUIVALENT OF REG 1 AT EXIT
RRPAFLG  DS    0BL2 -              ROUTINE STATUS FLAGS
         DS    B -                 ENTRY STATUS
RRPADSB  EQU   BIT0 -              DISABLED BRANCH ENTRY
RRPAENB  EQU   BIT1 -              ENABLED BRANCH ENTRY
RRPASVC  EQU   BIT2 -              SVC CALL ENTRY
RRPADSP  EQU   BIT3 -              DISPATCHING REQUIRED
RRPAOPT  EQU   BIT6 -              SRM LOCK CURRENTLY HELD
         DS    B -                 CURRENT STATUS
RRPAWAR  EQU   BIT1 -              WORKLOAD ACTIVITY RTNE CURR
RRPAIPS  EQU   BIT2 -              IPS PROCESSING RTNE CURR
RRPACTL  EQU   BIT4 -              IRARMCTL WILL PROCESS 2ND FAILURE
RRPARTI  EQU   BIT5 -              RECOVERY TERMINATION INDICATOR
RRPARFI  EQU   BIT6 -              RECOVERY FAILURE INDICATOR
RRPARCI  EQU   BIT7 -              RECURSION INDICATOR
RRPAKEY  DS    C -                 ORIGINAL ENTRY PROTECT KEY
RRPARTC  DS    C -                 RETURN CODE FOR FINAL EXIT
RRPATOD  DS    F -                 TIME OF DAY AT ENTRY
RRPAINS  DS    0F -                BRANCH ENTRY SAVE AREA ADDRESS
RRPARTN  DS    F -                 SVC ENTRY RETURN POINT ADDRESS
RRPAEPA  DS    A -                 RMEP ADDRESS OF RTNE IN CONTROL
RRPAEND  DS    0D -                END OF RRPA
RRPALEN  EQU   RRPAEND-RRPA -      LENGTH OF RRPA
         MEND
*                                                                    */
*%RRPAPLS2:  ;
*        %IF RRPA9999 ^= ','        /* DOES STRUCTURE CONTINUE       */
*            %THEN %RRPA9999 = ';'; /* NO, END DECLARE STATEMENT     */
*        %IF RRPALEVL ^= ''         /* IS STRUCTURE CONCATENATED     */
*            %THEN %GOTO RRPAPLS3;  /* YES, OMIT DECLARE STATEMENT   */
*   DCL
*     1 RRPA BASED(RRPAPTR) BDY(DWORD),
*            %GOTO RRPAPLS4;        /* SKIP USER-GIVEN LEVEL         */
*%RRPAPLS3:  RRPADUM = RRPALEVL××' RRPA';  /* PICK UP GIVEN LEVEL    */
*     RRPADUM BDY(DWORD),
*%RRPAPLS4:  ;
*       10 RRPAINC  CHAR(4) BDY(WORD), /* REGISTER 0 AT ENTRY        */
*         12 RRPAASD  BIT(16) BDY(WORD), /* ASID FOR ORIGINAL ENTRY  */
*         12 RRPAVPGN PTR(8),       /* VERIFY PGN FOR JOB SELECT
*                                                            @Z40BPCH*/
*           14 RRPAFLG0 BIT(8),     /* FLAG BYTE FOR MEMDEL  @ZA29015*/
*             16 RRPANSWI BIT(1),   /* =1 FOR MEMDEL TYPE=NOSWIN
*                                                            @ZA29015*/
*             16 * BIT(7),          /* RESERVED              @ZA29015*/
*         12 RRPACOD  PTR(08),      /* ORIGINAL ENTRY SYSEVENT CODE  */
*       10 RRPAINP  PTR(31),        /* INPUT PARAMETER ADDRS         */
*         12 RRPAVLU  CHAR(4) BDY(WORD), /* INPUT PARAMETER VALUE    */
*       10 RRPAFLG  BIT(16) BDY(WORD), /* ROUTINE STATUS FLAGS       */
*         12 RRPADSB  BIT(1),       /* ORIGINAL ENTRY DISABLED BR    */
*         12 RRPAENB  BIT(1),       /* ORIGINAL ENTRY ENABLED BR     */
*         12 RRPASVC  BIT(1),       /* ORIGINAL ENTRY VIA SVC        */
*         12 RRPADSP  BIT(1),       /* DISPATCHING REQUIRED          */
*         12 RRPAF04  BIT(1),       /* RESERVED                      */
*         12 RRPAF05  BIT(1),       /* RESERVED             @Z40BPCH */
*         12 RRPAOPT  BIT(1),       /* SRM LOCK CURRENTLY HELD       */
*         12 RRPAF07  BIT(2),       /* RESERVED                      */
*         12 RRPAWAR  BIT(1),       /* WORKLOD ACTIVITY RTNE CURRENT */
*         12 RRPAIPS  BIT(1),       /* IPS PROCESS ROUTINE CURRENT   */
*         12 RRPAF11  BIT(1),       /* RESERVED                      */
*         12 RRPACTL  BIT(1),       /* INVOKE IRARMCTL FOR 2ND FAIL  */
*         12 RRPARTI  BIT(1),       /* RECOVERY TERMINATE INDICATOR  */
*         12 RRPARFI  BIT(1),       /* RECOVERY FAILURE INDICATOR    */
*         12 RRPARCI  BIT(1),       /* RECURSION INDICATOR           */
*       10 RRPAKEY  CHAR(1),        /* ORIGINAL ENTRY PROTECT KEY    */
*       10 RRPARTC  PTR(08),        /* RETURN CODE FOR FINAL EXIT    */
*       10 RRPATOD  FIXED(32) UNSIGNED, /* TIME OF DAY AT ENTRY      */
*       10 RRPAINS  PTR(31),        /* BRANCH ENTRY SAVE AREA ADDR   */
*         12 RRPARTN  PTR(31),      /* SVC ENTRY RETURN POINT ADDR   */
*       10 RRPAEPA  PTR(31),        /* RMEP ADDR OF RTNE IN CONTROL  */
*       10 RRPAEND  CHAR(0) BDY(DWORD)   /* END OF RRPA              */
*   RRPA9999
*   %RRPALEN = 'LENGTH(RRPA)';      /* SYMBOLIC FOR LENGTH OF RRRPA  */
