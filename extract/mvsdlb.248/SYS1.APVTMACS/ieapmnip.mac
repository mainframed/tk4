*%GOTO MNIPBSL ;                      /*
         MACRO
&NAME    IEAPMNIP  &TYPE=,&MSGST=,&MSGEND=,&RMSGST=,&RMSGL=,&MOD=,     X
               &ASYNCH=,&PARAM=,&BUFREL=,&OPT=,&CPUID=,&ADDR=
         LCLC  &NB,&LB,&LC,&SX,&LM,&LI,&AU,&RS,&US
.**********************************************************************
.*           06/27/74   VS2-3 VERSION
.*       INITIALIZE ALL FLAG-SETTING SWITCHES TO ZERO
.*
.**********************************************************************
&NB      SETC  '0'                    OPEN - NON-NUCLEUS DEB
&LB      SETC  '0'                    OPEN - END OF NUCLEUS DEB
.*                                    MOUNT - UCB ADDRESS GIVEN
&LC      SETC  '0'                    OPEN,MOUNT - CONDITIONAL REQUEST
&SX      SETC  '0'                    OPEN - SINGLE EXTENT
&LM      SETC  '0'                    OPEN - SUPPRESS OPEN MSGS
&LI      SETC  '0'                    OPEN,MOUNT - DS NAME PTR GIVEN
&AU      SETC  '0'                    OPEN - AUTHORINZED LIBRARY
&RS      SETC  '0'                    OPEN - PERMANENTLY RESIDENT DS
&US      SETC  '0'                    MOUNT- UCB SCAN ONLY
         AIF   ('&TYPE' EQ 'PLIST').LISTMAC
         AIF   ('&TYPE' EQ 'MOUNTPL').LISTMAC
         AIF   ('&TYPE' EQ 'OPENPL').LISTMAC
         AIF   ('&TYPE' EQ 'SCHEDL').LISTMAC
&NAME    DS    0H
         AGO   .EXMACRO
.LISTMAC ANOP
&NAME    DS    0F
.EXMACRO ANOP
         AIF   ('&TYPE' NE 'MOUNTPL').NOMPL
.**************
.*
.*        NIPMOUNT  PARAMETER  LIST
.*
.**************
         AIF   ('&OPT' NE 'PTR').MNOPTR
         AIF   (K'&PARAM EQ 0).MNOPRM
         DC    A(&PARAM)              DATA SET NAME ADDRESS
         AGO   .MZER
.MNOPRM  ANOP
         DC    A(0)                   DATA SET NAME ADDRESS
.MZER    ANOP
         DC    XL8'0000000000000000'  RESERVED
         AGO   .MPTR
.MNOPTR  ANOP
         DC    CL12'&PARAM '          DATASET NAME
.MPTR    ANOP
         DC    CL6' '                 VOLUME SERIAL OR UCB ADDRESS
         DC    XL2'0000'              DEVICE TYPE
         DC    X'00'                  NIPMOUNT FLAGS
         DC    XL3'000000'            UNASSIGNED
         AGO   .MACEND
.NOMPL   AIF   ('&TYPE' NE 'OPENPL').NOOPL
.**************
.*
.*        NIPOPEN  PARAMETER  LIST
.*
.**************
         AIF   ('&OPT' NE 'PTR').ONOPTR
         AIF   (K'&PARAM EQ 0).ONOPRM
         DC    A(&PARAM)              DATA SET NAME ADDRESS
         AGO   .OZER
.ONOPRM  ANOP
         DC    A(0)                   DATA SET NAME ADDRESS
.OZER    ANOP
         DC    XL8'0000000000000000'  RESERVED
         AGO   .OPTR
.ONOPTR  ANOP
         DC    CL12'&PARAM '          DATASET NAME
.OPTR    ANOP
         DC    A(0)                   DCB ADDRESS
         DC    A(0)                   UCB ADDRESS
         DC    X'00'                  NIPOPEN FLAGS
         DC    X'00'                  NIPOPEN RETURN CODE
         DC    XL2'0000'              UNASSIGNED
         AGO   .MACEND
.NOOPL   AIF   ('&TYPE' NE 'MOUNT').NOMNT
.**************
.*
.*        LINKAGE TO  NIPMOUNT
.*
.**************
         AIF   ('&OPT(1)' NE 'LB').MNOLB
&LB      SETC  '1'
.MNOLB   AIF   ('&OPT(2)' NE 'LC').MNOLC
&LC      SETC  '1'
.MNOLC   AIF   ('&OPT(3)' NE 'LI').MNOLI
&LI      SETC  '1'
.MNOLI   AIF   ('&OPT(4)' NE 'US').MNOUS
&US      SETC  '1'
.MNOUS   ANOP
         LA    RPARM,&PARAM           LOAD PARM LIST ADDRESS
         MVI   NMNTFL(RPARM),B'0000&US&LI&LC&LB'  SET FLAG BITS
         AGO   .ELOAD
.NOMNT   AIF   ('&TYPE' NE 'OPEN').NOOPN
.**************
.*
.*        LINKAGE TO  NIPOPEN
.*
.**************
         AIF   ('&OPT(1)' NE 'NB').NONB
&NB      SETC  '1'
.NONB    AIF   ('&OPT(2)' NE 'LB').NOLB
&LB      SETC  '1'
.NOLB    AIF   ('&OPT(3)' NE 'LC').NOLC
&LC      SETC  '1'
.NOLC    AIF   ('&OPT(4)' NE 'SX').NOSX
&SX      SETC  '1'
.NOSX    AIF   ('&OPT(5)' NE 'LM').NOLM
&LM      SETC  '1'
.NOLM    AIF   ('&OPT(6)' NE 'LI').NOLI
&LI      SETC  '1'
.NOLI    AIF   ('&OPT(7)' NE 'AU').NOAU
&AU      SETC  '1'
.NOAU    AIF   ('&OPT(8)' NE 'RS').NORS
&RS      SETC  '1'
.NORS    ANOP
         LA    RPARM,&PARAM           LOAD PARM LIST ADDRESS
         MVI   NOPNFL(RPARM),B'&RS&AU&LM&LI&NB&LB&LC&SX' SET FLAG BITS
         AGO   .ELOAD
.NOOPN   AIF   ('&TYPE' NE 'HEADER').NOHEAD
.**************
.*
.*        NIPWTO  MESSAGE  HEADER
.*
.**************
         DC    Y(&MSGEND-&MSGST)      MESSAGE LENGTH
         AIF   ('&OPT(1)' NE 'NHC').NONHC
         AIF   ('&OPT(2)' NE 'NBC').NONBC1
         DC    X'C0'                  FLAG BYTE 1
         AGO   .HEADB2
.NONBC1  DC    X'80'                  FLAG BYTE 1
         AGO   .HEADB2
.NONHC   AIF ('&OPT(2)' NE 'NBC').NONBC2
         DC    X'40'                 FLAG BYTE 1
         AGO   .HEADB2
.NONBC2  DC    X'00'                 FLAG BYTE 1
.HEADB2  DC    X'00'                 FLAG BYTE 2
         AGO   .MACEND
.NOHEAD  AIF   ('&TYPE' NE 'PLIST').NOLIST
.**************
.*
.*        NIPWTOR  PARAMETER  LIST
.*
.**************
         AIF   ('&RMSGST' EQ 'SQARBUF').ZERRPA
         DC    A(&RMSGST)             REPLY AREA ADDRESS
         DC    A(0)                   REPLY ECB ADDRESS
         DC    H'&RMSGL'              REPLY AREA LENGTH
         AIF   ('&ASYNCH' EQ 'YES').ASYN1
         DC    XL1'00'                NIP WTOR FLAGS
         AGO   .PARM1
.ASYN1   DC    XL1'80'                NIP WTOR FLAGS
         AGO   .PARM1
.ZERRPA  DC    A(0)                   REPLY AREA ADDRESS
         DC    A(0)                   REPLY ECB ADDRESS
         DC    H'0'                   REPLY AREA LENGTH
         AIF   ('&ASYNCH' EQ 'YES').ASYN2
         DC    XL1'08'                NIP WTOR FLAGS
         AGO   .PARM1
.ASYN2   DC    XL1'88'                NIP WTOR FLAGS
.PARM1   DC    XL1'00'                RESERVED
         DC    A(&MSGST)              WTOR MESSAGE ADDRESS
         AGO   .MACEND
.********************
.*
.*            NIPSCHED PARAMETER LIST
.*
.**********************
.NOLIST  AIF   ('&TYPE' NE 'SCHEDL').NOSCHDL
         AIF   (K'&ADDR EQ 0).SCHDL1
         DC    A(&ADDR)
         AGO   .SCHDL2
.SCHDL1  DC    A(0)
.SCHDL2  AIF   (K'&PARAM EQ 0).SCHDL3
         DC     A(&PARAM)
         AGO    .SCHDL4
.SCHDL3  DC     A(0)
.SCHDL4  DC     XL2'0000'
         AGO   .MACEND
.********************
.*
.*       LINKAGE FOR THE NIPSCHED  ROUTINE
.*
.*********************
.NOSCHDL AIF   ('&TYPE' NE 'SCHED').NOSCHED
         LA    RPARM,&PARAM
         MVC   8(2,RPARM),0(&CPUID)
         AIF   (K'&ADDR EQ 0).ELOAD
         ST    &ADDR,0(0,RPARM)                                @YM1995P
         AGO   .ELOAD
.NOSCHED AIF   ('&TYPE' NE 'PRMPT').NOPRMPT
.*******************************************
.*
.*      LINKAGE FOR THE NIPPRMPT ROUTINE
.*
.******************************************
         LA     RPARM,&PARAM       ADDRESS OF PARAMETER FOR PROMPT
         AIF   ('&OPT' NE 'ERROR').PRMPT1
         LCR   RPARM,RPARM         COMPLEMENT PARAM REGISTER (ERROR)
.PRMPT1  AGO   .ELOAD
.**************
.*
.*        LINKAGE  FOR:  NIPSENSE, NIPSWAIT,NIPTIME,NIPUCBFN,
.*                       NIPWTO, NIPWTOR, NIPWTOR2
.*                       NIPOPIO,NIPVIRT,NIPREAL,NIPPRMPT
.*
.**************
.NOPRMPT AIF   ('&TYPE' EQ 'SENSE').PLOAD
         AIF   ('&TYPE' EQ 'SWAIT').ELOAD
         AIF   ('&TYPE' EQ 'OPIO').ELOAD
         AIF   ('&TYPE' EQ 'VIRT').ELOAD
         AIF   ('&TYPE' EQ 'REAL').ELOAD
         AIF   ('&TYPE' NE 'TIME').NTIME
         AIF   ('&PARAM' NE 'DEC').BTIME
         SR    RPARM,RPARM            REQUEST DECIMAL TIME
         AGO   .ELOAD
.BTIME   LA    RPARM,4(0,0)           REQUEST BINARY TIME      @YM1995P
         AGO   .ELOAD
.NTIME   AIF   ('&TYPE' EQ 'UCBFN').PLOAD
         AIF   ('&TYPE' EQ 'WTOR2').WTOR2
         LA    RPARM,&PARAM           LOAD PARM REGISTER
         AGO   .ELOAD
.WTOR2   AIF   ('&BUFREL' NE 'YES').PLOAD
         LCR   RPARM,&PARAM           INDICATE SQA RELEASE
         AGO   .ELOAD
.PLOAD   AIF   ('&PARAM' EQ 'RPARM').ELOAD
         LR    RPARM,&PARAM           LOAD PARM REGISTER
.ELOAD   AIF   ('&MOD' EQ 'NIPM').ELOAD1
         L     RENTRY,NVT&TYPE.(0,RNVT)   LOAD BRANCH ADDRESS  @YM1995P
         BALR  REXIT,RENTRY               CALL THE ROUTINE
         AGO   .MACEND
.ELOAD1  ANOP
         L     RENTRY,NVT&TYPE        LOAD BRANCH ADDRESS
         BALR  REXIT,RENTRY           BRANCH TO ROUTINE
.MACEND  ANOP
         MEND  ,                      */
*%MNIPBSL: ;
*        /***             NIPWTO  MESSAGE  HEADER                  ***/
*        /* THE FOLLOWING STRUCTURE MAPS THE NIPWTO MESSAGE HEADER   */
*        /* THAT IS GENERATED BY THE BAL MACRO -IEAPMNIP TYPE=HEADER-*/
*        /* AND IS USED TO PASS INFORMATION TO THE NIPWTO SERVICE    */
*        /* ROUTINE. THE MESSAGE LENGTH FIELD, NWTOLNG, INCLUDES THE */
*        /* LENGTH OF THE MESSAGE HEADER ITSELF.                     */
*        DECLARE 1 NWTOHDR BASED ,        /* MESSAGE HEADER START    */
*                 2 NWTOLNG  FIXED(15),   /* MESSAGE LENGTH          */
*                 2 NWTOFL   CHAR(2),     /* NIP MESSAGE FLAGS       */
*                  3 NWTOFLNH  BIT(1),    /* NOT TO BE HARDCOPIED    */
*                  3 NWTOFLNC  BIT(1),    /* SUPRESS BLANK COMPRESS  */
*                  3 *         BIT(14);   /* RESERVED                */
*        /***        END  OF  NIPWTO  MESSAGE  HEADER              ***/
*
*        /***             NIPWTOR  PARAMETER  LIST                 ***/
*        /* THE FOLLOWING STRUCTURE MAPS THE NIPWTOR PARAMETER LIST  */
*        /* THAT IS GENERATED BY THE BAL MACRO -IEAPMNIP TYPE=PLIST- */
*        /* AND IS USED TO PASS INFORMATION TO THE NIPWTOR SERVICE   */
*        /* ROUTINE.                                                 */
*        DECLARE 1 NWTORLST BASED,        /* PARM LIST START         */
*                 2 NWTORRPA PTR(31),     /* REPLY AREA ADDRESS      */
*                 2 NWTORECB PTR(31),     /* REPLY ECB ADDRESS       */
*                 2 NMTORRDL FIXED(15),   /* REPLY AREA LENGTH       */
*                 2 NWTORFL  CHAR(1),     /* NIP WTOR FLAGS          */
*                  3 NWTORFLA BIT(1),     /* ASYNCHRONOUS REQUEST    */
*                  3 *        BIT(3),     /* RESERVED                */
*                  3 NWTORFLB BIT(1),     /* PROVIDE SQA BUFFER      */
*                  3 *        BIT(3),     /* RESERVED                */
*                 2   *      CHAR(1),     /* RESERVED                */
*                 2 NWTORMSG PTR(31);     /* WTOR MESSAGE HEADER
*                                            ADDRESS.                */
*        /***        END  OF  NIPWTOR  PARAMETER  LIST             ***/
*
*        /***        NIP SYSTEM PARAMETER QUEUE ENTRY              ***/
*        /* THE FOLLOWING STRUCTURE MAPS THE NIP SYSTEM PARAMETER    */
*        /* ENTRY WHICH IS AN INTERNAL CONTROL BLOCK USED BY NIP TO  */
*        /* TRACK SQA BUFFERS USED TO CONTAIN WTOR REPLIES.  THIS    */
*        /* IS DONE SO THAT IEAVNIPX CAN FREE THESE AREAS AT THE END */
*        /* OF NIP PROCESSING.  ONE SPE IS CONTAINED IN THE NVTSPE   */
*        /* FIELD OF THE NVT. IF OTHERS ARE REQUIRED, THEY ARE       */
*        /* OBTAINED DYNAMICALLY FROM SQA AND CHAINED TO THE ONE IN  */
*        /* THE NVT.                                                 */
*        DECLARE 1 NIPSPE BASED ,         /* NIPSPE START            */
*                 2 NIPSPEQ PTR(31),      /* CHAIN PTR               */
*                 2 NIPSPEA PTR(31);      /* PARAMETER PTR           */
*        /***                  END OF NIPSPE                       ***/
*
*        /***              NIPMOUNT PARAMETER LIST                 ***/
*        /* THE FOLLOWING STRUCTURE MAPS THE NIPMOUNT PARAMETER LIST */
*        /* THAT IS GENERATED BY THE BAL MACRO -IEAPMNIP TYPE=MOUNTPL*/
*        /* AND IS USED TO PASS INFORMATION TO THE NIPMOUNT SERVICE  */
*        /* ROUTINE.  THIS MAPPING MUST BE INCLUDED IN ANY MODULE    */
*        /* THAT USES THE NIPMOUNT SERVICE, SINCE IT IS REFERRED TO  */
*        /* BY THE NIPMOUNT BAL CALL MACRO, IEAPMNIP TYPE=MOUNT.     */
*
*        DECLARE 1 NIPMNTPL BASED,        /* PARM LIST START         */
*               2 NMNTDS CHAR(12),        /* DATASET NAME  OR        */
*                3 NMNTDSA PTR(31) BDY(BYTE), /* DS NAME ADDRESS     */
*               2 NMNTVS CHAR(6),         /* VOLUME SERIAL  OR       */
*                3 NMNTUCB FIXED(31) BDY(BYTE), /* UCB ADDRESS       */
*               2 NMNTDT CHAR(2),         /* DEVICE TYPE             */
*               2 NMNTFL CHAR(1),         /* NIPMOUNT FLAGS          */
*                3 *        BIT(4),       /* ** RESERVED **          */
*                3 NMNTFUS  BIT(1),       /* UCB SCAN ONLY REQUEST   */
*                3 NMNTFLI  BIT(1),       /* DS NAME ADDR GIVEN      */
*                3 NMNTFLC  BIT(1),       /* CONDITIONAL REQUEST     */
*                3 NMNTFLB  BIT(1),       /* UCB ADDRESS GIVEN       */
*               2 *      CHAR(3);         /* ** RESERVED **          */
*        /***            END OF NIPMOUNT PARAMETER LIST            ***/
*
*        /***                NIPOPEN PARAMETER LIST                ***/
*        /* THE FOLLOWING STRUCTURE MAPS THE NIPOPEN PARAMETER LIST  */
*        /* THAT IS GENERATED BY THE BAL MACRO -IEAPMNIP TYPE=OPENPL-*/
*        /* AND IS USED TO PASS INFORMATION TO THE NIPOPEN SERVICE   */
*        /* ROUTINE.  THIS MAPPING MUST BE INCLUDED IN ANY MODULE    */
*        /* THAT USES THE NIPOPEN SERVICE, SINCE IT IS REFERRED TO BY*/
*        /* THE NIPOPEN BAL CALL MACRO, IEAPMNIP TYPE=OPEN.          */
*
*        DECLARE 1 NIPOPNPL BASED,        /* PARM LIST START         */
*                 2 NOPNDS CHAR(12),      /* DATASET NAME OR         */
*                  3 NOPNDSA PTR(31) BDY(BYTE), /* DS NAME ADDRESS   */
*                 2 NOPNDCB PTR(31),      /* DCB ADDRESS             */
*                 2 NOPNUCB PTR(32),      /* UCB ADDRESS     @Z30AAXC*/
*                 2 NOPNFL CHAR(1),       /* NIPOPEN FLAGS           */
*                  3 NOPNFRS  BIT(1),     /* PERMANENTLY RESIDENT DS */
*                  3 NOPNFAU  BIT(1),     /* AUTHORIZED LIBRARY FLAG */
*                  3 NOPNFLM  BIT(1),     /* SUPRESS DS NOT FOUND MSG*/
*                  3 NOPNFLI  BIT(1),     /* DS NAME ADDR GIVEN      */
*                  3 NOPNFLNB BIT(1),     /* INITIALIZE BASIC DEB    */
*                  3 NOPNFLLB BIT(1),     /* END OF NUCLEUS DEB      */
*                  3 NOPNFLLC BIT(1),     /* CONDITIONAL REQUEST     */
*                  3 NOPNFLSX BIT(1),     /* FIRST EXTENT ONLY       */
*                 2 NOPNRC   CHAR(1),     /* NIPOPEN RETURN CODE     */
*                 2 *        CHAR(2);     /* ** RESERVED **          */
*        /***           END OF NIPOPEN PARAMETER LIST              ***/
*
*       /***     NIPSCHED    PARAMETER   LIST               *****/
*        /* THE FOLLOWING STRUCTURE MAPS THE NIPSCHED PARAMETER LIST */
*        /* THAT IS GENERATED BY THE BAL MACRO -IEAPMNIP TYPE=SCHEDL-*/
*        /* AND IS USED TO PASS INFORMATION TO THE NIPSCHED SERVICE  */
*        /* ROUTINE.                                                 */
*
*        DECLARE 1 NIPSCHDL BASED,
*                  2 NSCHDPTR PTR(31),  /*ADDRESS OF ROUTINE TO SCHED*/
*                  2 NSCHDPRM PTR(31),  /* ADDRESS OF CALLERS AREA   */
*                  2 NSCHDCPU CHAR(2);  /* CPU ADDRESS FOR SCHEDULE  */
*      /*****  END OF NIPSCHED  PARAMETER  LIST             ********/
