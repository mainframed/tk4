*        %GOTO MPLL1;         /* BILINGUAL MAPPING
         MACRO
         IEZMPL &DSECT=YES                                           */
*%MPLL1: ;
* /*******************************************************************/
* /*                                                                 */
* /* MACMEAN MPL MEANS MONITOR PARAMETER LIST                        */
* /*                                                                 */
* /* MACCOMP Y-2 SC1C5/PZD81                                         */
* /*                                                                 */
* /* MACSTAT Y-2 72245/TU015156                                      */
* /*                                                                 */
* /* METHOD OF ACCESS                                                */
* /*     PL/S - DCL MPLPTR PTR                                       */
* /*     BAL  - DSECT IS PRODUCED UNLESS DSECT=NO IS SPECIFIED.      */
* /*            USING ON DSECT NAME GIVES ADDRESSABILITY FOR ALL     */
* /*            SYMBOLS IN THAT DSECT.                               */
* /*                                                                 */
* /* USAGE                                                           */
* /*     PL/S - A STRUCTURE LEVEL NUMBER MAY BE SPECIFIED BY SETTING */
* /*            THE COMPILE-TIME VARIABLE %MPLLEVEL. IN THAT CASE,   */
* /*            NO DECLARE STATEMENT IS PRODUCED.  THE STRUCTURE     */
* /*            LEVEL NUMBER MUST BE LESS THAT 10.  THE DECLARE      */
* /*            STATEMENT MAY BE LEFT OPENED BY SETTING              */
* /*            %MPL9999=','.  OTHERWISE, IT IS CLOSED.              */
* /*                                                                 */
* /*******************************************************************/
*%GOTO MPLL2; /*
         SPACE
         IEZBITS , -          SYMBOLIC BIT DEFINITIONS
         SPACE
         AIF    ('&DSECT' EQ 'NO').MPL0000
MPL      DSECT
         AGO   .MPL0020
.MPL0000 ANOP
         DS    0D
MPL      EQU   *
.MPL0020 ANOP
         SPACE
MPLPROC  DS    0H             PROCESSING FLAGS
MPLPROC1 DS    B              FIRST BYTE OF PROCESSING FLAGS
MPLCONS  EQU   BIT0           MPLID IS A CONSOLE ID
MPLTERM  EQU   BIT1           MPLID IS AN ASID FOR A TSO USER
MPLSTRT  EQU   BIT2           START MONITOR
MPLSTOP  EQU   BIT3           STOP MONITOR
MPLRSV01 EQU   BIT4,,C'X' -   RESERVED
MPLRSV02 EQU   BIT5,,C'X' -   RESERVED
MPLRSV03 EQU   BIT6,,C'X' -   RESERVED
MPLRSV04 EQU   BIT7,,C'X' -   RESERVED
         SPACE
MPLPROC2 DS    B              SECOND BYTE OF PROCESSING FLAGS
         SPACE
MPLID    DS    CL2            CONSOLE ID OR ASID
         SPACE
MPLTYPE  DS    0H -           MONITOR TYPE FLAGS
MPLTYPE1 DS    B -            FIRST BYTE OF MONITOR TYPE FLAGS
MPLJBNM  EQU   BIT0 -         MONITOR JOBNAMES
MPLSTAT  EQU   BIT1 -         MONITOR STATUS
MPLRSV05 EQU   BIT2,,C'X' -   RESERVED
MPLRSV06 EQU   BIT3,,C'X' -   RESERVED
MPLRSV07 EQU   BIT4,,C'X' -   RESERVED
MPLSESS  EQU   BIT5 -         MONITOR SESSIONS
MPLRSV08 EQU   BIT6,,C'X' -   RESERVED
MPLRSV09 EQU   BIT7,,C'X' -   RESERVED
         SPACE
MPLTYPE2 DS    B              SECOND BYTE OF MONITOR TYPE FLAGS
         SPACE
MPLALL   EQU   MPLJBNM+MPLSTAT+MPLSESS ALL MONITOR FUNCTIONS
         SPACE
MPLRSV10 DS    CL2            RESERVED
         SPACE
MPLSIZE  EQU   *-MPL -        LENGTH OF MPL
         MEND  , -               */
*%MPLL2: ;                               /* PL/S COMPILE-TIME TARGET */
*        % IF MPL9999^=','               /* IF THIS IS THE LAST BLOCK*/
*          % THEN %MPL9999=';';          /* THEN CLOSE DECLARE
*                                           STATEMENT                */
*        % IF MPLLEVEL^=''               /* IF THIS IS A CONCATENATED
*                                           BLOCK                    */
*          % THEN %GOTO MPLL3;           /* THEN SKIP DECLARE
*                                           STATEMENT                */
*
*DECLARE
*  1 MPL BASED(MPLPTR)                   /* DECLARE MPL LEVEL ONE    */
*        % GOTO MPLL4;                   /* SKIP LEVEL N DECLARE     */
*%MPLL3:  MPLDUM=MPLLEVEL××' MPL';       /* SET LEVEL FOR MINOR
*                                           STRUCTURE                */
*        MPLDUM                          /* MINOR STRUCTURE NAME     */
*%MPLL4:;
*          BDY(WORD),
*   10 MPLPROC      CHAR(2) BDY(WORD),   /* PROCESSING FLAGS         */
*     15 MPLPROC1    BIT(8),             /* FIRST BYTE OF PROCESSING
*                                           FLAGS                    */
*      20 MPLCONS  BIT(1),               /* MPLID IS A CONSOLE ID    */
*      20 MPLTERM  BIT(1),               /* MPLID IS AN ASID FOR A
*                                           TSO USER                 */
*      20 MPLSTRT  BIT(1),               /* START MONITOR            */
*      20 MPLSTOP  BIT(1),               /* STOP MONITOR             */
*      20 MPLRSV01 BIT(1),               /* RESERVED                 */
*      20 MPLRSV02 BIT(1),               /* RESERVED                 */
*      20 MPLRSV03 BIT(1),               /* RESERVED                 */
*      20 MPLRSV04 BIT(1),               /* RESERVED                 */
*
*     15 MPLPROC2    BIT(8),             /* SECOND BYTE OF PROCESSING
*                                           FLAGS                    */
*
*   10 MPLID CHAR(2),                    /* CONSOLE ID OR ASID       */
*
*   10 MPLTYPE      CHAR(2) BDY(WORD),   /* MONITOR TYPE FLAGS       */
*     15 MPLTYPE1    BIT(8),             /* FIRST BYTE OF MONITOR
*                                           TYPE FLAGS               */
*      20 MPLJBNM  BIT(1),               /* MONITOR JOBNAMES         */
*      20 MPLSTAT  BIT(1),               /* MONITOR STATUS           */
*      20 MPLRSV05 BIT(1),               /* RESERVED                 */
*      20 MPLRSV06 BIT(1),               /* RESERVED                 */
*      20 MPLRSV07 BIT(1),               /* RESERVED                 */
*      20 MPLSESS  BIT(1),               /* MONITOR SESSIONS         */
*      20 MPLRSV08 BIT(1),               /* RESERVED                 */
*      20 MPLRSV09 BIT(1),               /* RESERVED                 */
*
*     15 MPLTYPE2    BIT(8),             /* RESERVED                 */
*
*   10 MPLRSV10     CHAR(2) MPL9999      /* RESERVED                 */
*
*%MPLALL = '''11000100''B';              /* BIT MASK FOR ALL MONITOR
*                                           FUNCTIONS                */
*
*%MPLSIZE = 'LENGTH(MPL)';               /* GET SIZE OF MPL          */
