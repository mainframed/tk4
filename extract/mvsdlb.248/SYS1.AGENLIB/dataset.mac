         MACRO
         DATASET &LIB,&PAGEDSN=,&NAME=,&VOL=,&SPACE=,&PDS=,&MEMBERS=,  X
               &ABEAPP=,&CHEAPP=,&EOEAPP=,&PCIAPP=,&SIOAPP=,&RESIDNT=, X
               &SWAPDSN=                                        Z40WSVN
         COPY  SGGBLPAK
         LCLA  &A,&N,&M,&P,&C,&D,&T
         LCLC  &S,&APP,&Q
.****** START OF SPECIFICATIONS *************************************
.*
.* MODULE NAME - DATASET
.*
.* DESCRIPTIVE NAME - SYSTEM DATA SET SPECIFICATION
.*
.* COPYRIGHT - NONE
.*
.* STATUS - CHANGE LEVEL 02
.*
.* FUNCTION -
.*       THE DATASET MACRO IS USED TO SPECIFY THE SYSTEM DATA SETS
.*       AND THE VOLUMES ON WHICH THE DATA SETS RESIDE. ONE MACRO
.*       CALL PER DATA SET.
.*
.* $F1 = EDS1102, SDPD, 78124, PLR:   PRODUCT LIBRARY RELEASE
.*
.* NOTES - N/A
.*
.* MODULE TYPE - MACRO
.*
.* ENTRY POINT - N/A
.*
.* INPUT - THE FOLLOWING PARAMETERS ARE VALID ON THE DATASET MACRO
.*             &LIB     - ONE NAME OUT OF A LIST CONSISTING OF:
.*                        BRODCAST,CMDLIB,DCMLIB,DUMP00-09,        @F1C
.*                        DUPLEXDS,HELP,IMAGELIB,INDMAC,JES3LIB,
.*                        LINKLIB,LPALIB,MACLIB,MANX,MANY,NUCLEUS,
.*                        PARMLIB,PROCLIB,STGINDEX,SAMPLIB,
.*                        SVCLIB,TELCMLIB,UADS,VSCATLG,VTAMLIB,
.*                        TCOMMAC.                             @ZA41353
.*             &PAGEDSN - UNIQUE VSAM DATA SET, FOR PAGING
.*             &SWAPDSN - UNIQUE VSAM DATA SET, FOR SWAP USAGE
.*             &NAME    - VSCATLG OR DUPLEX DATA SET NAME
.*             &VOL     - THE VOLUME SERIAL NUMBER AND THE DEVICE TYPE
.*                        FOR THE LIBRARY SPECIFIED.
.*             &SPACE   - SPACE ALLOCATION PARMS FOR THE DATA SET
.*             &PDS     - NAME OF A LIBRARY CONTAINING MODULES, MACROS,
.*                        OR PROCEDURES TO BE COPIED TO THIS LIBRARY.
.*             &MEMBERS - MEMBER NAMES FROM THE ABOVE PDS TO COPY
.*             &ABEAPP  - USER SUPPLIED ABNORMAL END APPENDAGES - RANGE
.*             &CHEAPP  - USER SUPPLIED CHANNEL END APPENDAGES - RANGE
.*             &EOEAPP  - USER SUPPLIED END OF EXTENT APPS - RANGE
.*             &PCIAPP  - USER SUPPLIED PCI APPENDAGES - RANGE
.*             &SIOAPP  - USER SUPPLIED SIO APPENDAGES - RANGE
.*             &RESIDNT - MEMBERS TO BE ADDED TO LPA, SVC OR
.*                        LINKLIBS, AND TO IEAFIX01.
.*
.* OUTPUT -
.*       THE GLOBALS SET ARE -
.*             &SGMENTB(15)   - ENTRY SWITCH
.*             &SGQUITB       - QUIT SWITCH
.*               THE FOLLOWING NUMBERS CORRESPOND TO LIBRARIES
.*               SUCH THAT FOR THE X IN THE FOLLOWING GLOBALS,
.*               IF X=5 THE DATA SET IN QUESTION IS SAMPLIB.
.*             &SGDSBZA(X)    - BLOCK SIZE SET SIZE
.*             &SGDSA1B(X)    - METHOD OF ALLOCATION SWITCHES
.*             &SGDSA2B(X)    - 01-BLKSIZE,10-TRACK,11-CYLINDER
.*             &SGDSDFB(X)    - SET WHEN DATASET DEFINED FOR SYSTEM-LIB
.*             &SGDSVLC(X)    - VOLUME SERIAL OF DEVICE
.*             &SGDSPSA(X)    - PRIMARY SPACE SET
.*             &SGDSUNC(X)    - DEVICE TYPE
.*             &SGRES1C(X)
.*                ...         - RESIDENT MEMBERS - ONLY N= 6, 9 AND
.*             &SGRESAC(X)      12 ARE ALLOWED.
.*             &SGMB01C(X)
.*                ...         - MEMBERS TO BE ADDED TO DATA SETS. N
.*             &SGMB20C(X)      =2,4,5,6,7,8,9,10,12,13,16,17,18
.*
.*             &SGPGVLC(1-25) - VOLUME SER OF PAGING DEVICES
.*             &SGPGSPA(1-25) - PRIMARY SPACE FOR PAGE DATA SET
.*             &SGPGUNC(1-25) - DEVICE TYPE OF PAGE DEVICE
.*             &SGPAGDC(1-25) - NAME OF PAGE DATA SETS
.*
.*             &SGSWVLC(1-10) - VOLUME SER OF SWAP DEVICES
.*             &SGSWSPA(1-10) - PRIMARY SPACE FOR SWAP DATA SET
.*             &SGSWUNC(1-10) - DEVICE TYPE OF SWAP DEVICE
.*             &SGSWPDC(1-10) - NAME OF SWAP DATA SETS
.*
.*             &SGDSSSA(1-23) - SECONDARY SPACE SET
.*             &SGDSDBA(1-23) - DIRECTORY BLOCK ALLOCATION SET
.*             &SGVSNMC       - VSCATLG NAME
.*             &SGDUPXC       - DUPLEX DATA SET NAME
.*             &SGDABEA(1)    - PREVIOUS ABNORMAL END RECEIVERS USED
.*             &SGDABEA(2)    - PREVIOUS NUMBER OF ABNORMAL END PARMS
.*             &SGDCHEA(1)    - PREVIOUS CHANNEL END RECEIVERS USED
.*             &SGDCHEA(2)    - PREVIOUS NUMBER OF CHANNEL END PARMS
.*             &SGDEOEA(1)    - PREVIOUS END-OF-EXTENT RECEIVERS USED
.*             &SGDEOEA(2)    - PREVIOUS NUMBER OF END-OF-EXTENT PARMS
.*             &SGDPCIA(1)    - PREVIOUS PCI RECEIVERS USED
.*             &SGDPCIA(2)    - PREVIOUS NUMBER OF PCI PARMS
.*             &SGDSIOA(1)    - PREVIOUS START I/O RECEIVERS USED
.*             &SGDSIOA(2)    - PREVIOUS NUMBER OF START I/O PARMS
.*             &SGDSIOC       - TOTAL SIO APPENDAGES
.*             &SGDEOEC       - TOTAL EOE APPENDAGES
.*             &SGDCHEC       - TOTAL CHE APPENDAGES
.*             &SGDABEC       - TOTAL ABE APPENDAGES
.*             &SGDPCIC       - TOTAL PCI APPENDAGES
.*             &SGLSIOC       - LPALIB SIO APPENDAGES
.*             &SGLEOEC       - LPALIB EOE APPENDAGES
.*             &SGLCHEC       - LPALIB CHE APPENDAGES
.*             &SGLABEC       - LPALIB ABE APPENDAGES
.*             &SGLPCIC       - LPALIB PCI APPENDAGES
.*             &SGSSIOC       - SVCLIB SIO APPENDAGES
.*             &SGSEOEC       - SVCLIB EOE APPENDAGES
.*             &SGSCHEC       - SVCLIB CHE APPENDAGES
.*             &SGSABEC       - SVCLIB ABE APPENDAGES
.*             &SGSPCIC       - SVCLIB PCI APPENDAGES
.*
.*       THE LOCALS USED ARE -
.*             &A   - INDEX TO SUBLIST
.*             &N   - CHARACTER INDEX
.*             &M   - SECONDARY ALLOCATION TESTING
.*             &P   - CHARACTER INDEX
.*             &C   - MEMBER COUNTER
.*             &S   - SPACE PARAMETER
.*             &APP - APPENDAGE NAME FOR MESSAGE
.*             &Q   - SPACE PARAMETER
.*             &D   - INDEX FOR DUMP00-09 DATASETS
.*
.* EXIT, NORMAL - N/A
.*
.* EXIT, ERROR - N/A
.*
.* EXTERNAL REFERENCES - N/A
.*
.* TABLES - N/A
.*
.* MACROS - NONE
.*
.* CHANGE ACTIVITY - MODIFIED FOR Y02036,Z30RSTA,Z40WSVN,VS43004
.*                   VS43009
.*                   @AZ07727,@ZA41353
.****** END OF SPECIFICATIONS ***************************************
&SGMENTB(15) SETB 1                     MACRO ENTRY SWITCH      Z40WSVN
         AIF   (T'&LIB NE 'O').DSMAIN3                          Z40WSVN
         AIF   (T'&PAGEDSN NE 'O').DSMAIN2                      Z40WSVN
         AIF   (T'&SWAPDSN EQ 'O').E3                           Z40WSVN
.*
.*       PROCESS SWAPDSN                                        Z40WSVN
.*
.DSMAIN1 ANOP                                                   Z40WSVN
&A       SETA  1                        SET INDEX TO 1          Z40WSVN
.SW1     ANOP                                                   Z40WSVN
         AIF   (&A GT 10).E36           TOO MANY SWAPDSN NAMES? Z40WSVN
         AIF   ('&SGSWPDC(&A)' EQ '').SW12  THIS ENTRY BLANK?   Z40WSVN
&A       SETA  &A+1                     INCREMENT INDEX         Z40WSVN
         AGO   .SW1                     LOOK AGAIN              Z40WSVN
.*       1ST CHARACTER MUST BE ALPHABETIC                       Z40WSVN
.SW12    AIF   ('&SWAPDSN'(1,1) EQ '$').SW125                   Z40WSVN
         AIF   ('&SWAPDSN'(1,1) EQ '#').SW125                   Z40WSVN
         AIF   ('&SWAPDSN'(1,1) EQ '@').SW125                   Z40WSVN
         AIF   ('&SWAPDSN'(1,1) LT 'A' OR '&SWAPDSN'(1,1) GT 'Z').E37  *
                                                                Z40WSVN
.SW125   ANOP                                                   Z40WSVN
         AIF   (K'&SWAPDSN GT 44).E37    MAX 44 CHARS IN NAME   Z40WSVN
.SW1255  ANOP                                                   Z40WSVN
&SGSWPDC(&A)   SETC '&SWAPDSN'          MOVE NAME TO GLOBAL     Z40WSVN
         MNOTE *,'     SWAP DATA SET &SWAPDSN SPECIFIED'        Z40WSVN
         AIF   (T'&SPACE EQ 'O').SW14   SPACE OMITTED?          Z40WSVN
         AIF   (T'&VOL EQ 'O').E38      VOL OMITTED?            Z40WSVN
         AIF   (N'&VOL NE 2).E39        MUST BE 2 SUBPARMS      Z40WSVN
         AIF   (K'&VOL(1) GT 6).E40     SERIAL GT 6 CHARS       Z40WSVN
.*       DEVICE MUST BE 2305-1, 2305-2, 3330,                   Z40WSVN
.*       3330-1, 3340, 3350, 3375, 3380, or 3390                 MVS38J
.SW1256  AIF   ('&VOL(2)' NE '3330-1' AND '&VOL(2)' NE '2305-1' AND    X
               '&VOL(2)' NE '2305-2' AND '&VOL(2)' NE '3330' AND       X
               '&VOL(2)' NE '3340').SWC                         Z40WSVN
         AGO   .SWVAL                                           Z40WSVN
.SWC     AIF   ('&VOL(2)' NE '3350' AND '&VOL(2)' NE '3380' AND        +
               '&VOL(2)' NE '3390' AND '&VOL(2)' NE '3375').E41  MVS38J
.SWVAL   ANOP                                                   Z40WSVN
&SGSWVLC(&A)   SETC '&VOL(1)'           MOVE SERIAL TO GLBL     Z40WSVN
&SGSWUNC(&A)   SETC '&VOL(2)'           MOVE UNIT TO GLBL       Z40WSVN
.SW1257  AIF   ('&SPACE(1)' NE 'CYL').E42        MUST BE CYL    Z40WSVN
         AIF   ('&SPACE(2)'(1,1) NE '(').E42     REQUIRES PRI   Z40WSVN
&N       SETA  2                                 COUNT DIGITS   Z40WSVN
.SW126   AIF   ('&SPACE(2)'(&N,1) EQ ')').SW127 END/2ND SUBPARM Z40WSVN
         AIF   ('&SPACE(2)'(&N,1) EQ ',').E9     SEC ALLOC      Z40WSVN
         AIF   ('&SPACE(2)'(&N,1) EQ '').E42     NULL VALUE     Z40WSVN
&N       SETA  &N+1                              INC. DIGIT CNT Z40WSVN
         AGO   .SW126                            REPEAT         Z40WSVN
.SW127   ANOP                                                   Z40WSVN
         AIF   (&N EQ 2).E42            NO PRIMARY SPACE        Z40WSVN
         AIF   ('&SPACE(2)'(2,&N-2) LT '0' OR '&SPACE(2)'(2,&N-2) GT '6X
               5535').E19                                       Z40WSVN
&S       SETC  '&SPACE(2)'(2,&N-2)                              Z40WSVN
&SGSWSPA(&A)   SETA &S                  MOVE PRI SPACE TO GLBL  Z40WSVN
         AGO   .END                                             Z40WSVN
.SW14    AIF   (T'&VOL EQ 'O').END VOL OMITTED?                 Z40WSVN
    MNOTE 0,'* * * VOL PARAMETER IGNORED FOR SWAPDSN &SWAPDSN'  Z40WSVN
         AGO   .END                                             Z40WSVN
.*
.*       PROCESS PAGEDSN
.*
.DSMAIN2 AIF   (T'&SWAPDSN NE 'O').E3                           Z40WSVN
&A       SETA  1                        SET INDEX TO 1
.PG1     ANOP
         AIF   (&A GT 25).E20           TOO MANY PAGEDSN NAMES?
         AIF   ('&SGPAGDC(&A)' EQ '').PG12  THIS ENTRY BLANK?
&A       SETA  &A+1                     INCREMENT INDEX
         AGO   .PG1                     LOOK AGAIN
.*       1ST CHARACTER MUST BE ALPHABETIC
.PG12    AIF   ('&PAGEDSN'(1,1) EQ '$').PG125
         AIF   ('&PAGEDSN'(1,1) EQ '#').PG125
         AIF   ('&PAGEDSN'(1,1) EQ '@').PG125
         AIF   ('&PAGEDSN'(1,1) LT 'A' OR '&PAGEDSN'(1,1) GT 'Z').E21
.PG125   ANOP
         AIF   (K'&PAGEDSN GT 44).E21    MAX 44 CHARS IN NAME
.PG1255  ANOP                                                   Z40WSVN
&SGPAGDC(&A)   SETC '&PAGEDSN'          MOVE NAME TO GLOBAL     Z40WSVN
         MNOTE *,'     PAGE DATA SET &PAGEDSN SPECIFIED'        Z40WSVN
         AIF   (T'&SPACE EQ 'O').PG14   SPACE OMITTED?          Z40WSVN
         AIF   (T'&VOL EQ 'O').E22      VOL OMITTED?
         AIF   (N'&VOL NE 2).E23        MUST BE 2 SUBPARMS
         AIF   (K'&VOL(1) GT 6).E24     SERIAL GT 6 CHARS
.*       DEVICE MUST BE 2314, 2305-1, 2305-2, 3330,            @Z30RSTA
.*       3330-1, 3340, 3350, 3375, 3380, or 3390                 MVS38J
.PG1256  AIF   ('&VOL(2)' NE '2314' AND  '&VOL(2)' NE '3330-1' AND     X
               '&VOL(2)' NE '2305-1' AND '&VOL(2)' NE '2305-2' AND     X
               '&VOL(2)' NE '3330' AND '&VOL(2)' NE '3340').CONT1
         AGO   .VALIDEV                                        @Z30RSTA
.CONT1   AIF   ('&VOL(2)' NE '3350' AND '&VOL(2)' NE '3380' AND        +
               '&VOL(2)' NE '3390' AND '&VOL(2)' NE '3375').E25  MVS38J
.VALIDEV ANOP                                                  @Z30RSTA
&SGPGVLC(&A)   SETC '&VOL(1)'           MOVE SERIAL TO GLBL
&SGPGUNC(&A)   SETC '&VOL(2)'           MOVE UNIT TO GLBL
.PG1257  AIF   ('&SPACE(1)' NE 'CYL').E42        MUST BE CYLS   Z40WSVN
         AIF   ('&SPACE(2)'(1,1) NE '(').E42     REQ. PRIMARY   Z40WSVN
&N       SETA  2                                 COUNT OF DIGITS
.PG126   AIF   ('&SPACE(2)'(&N,1) EQ ')').PG127  END OF 2ND SUBPARM
         AIF   ('&SPACE(2)'(&N,1) EQ ',').E9     SEC ALLOC      Z40WSVN
         AIF   ('&SPACE(2)'(&N,1) EQ '').E42     NULL VALUE     Z40WSVN
&N       SETA  &N+1                              INCREMENT DIGIT COUNT
         AGO   .PG126                            REPEAT UNTIL PAREN
.PG127   ANOP
         AIF   (&N EQ 2).E42            NO PRIMARY SPACE        Z40WSVN
         AIF   ('&SPACE(2)'(2,&N-2) LT '0' OR '&SPACE(2)'(2,&N-2) GT '6X
               5535').E19                                       Z40WSVN
&S       SETC  '&SPACE(2)'(2,&N-2)
&SGPGSPA(&A)   SETA &S                  MOVE PRIMARY SPACE TO GLBL
         AGO   .END
.PG14    AIF   (T'&VOL EQ 'O').END VOL OMITTED?                 Z40WSVN
    MNOTE 0,'* * * VOL PARAMETER IGNORED FOR PAGEDSN &PAGEDSN'
         AGO   .END
.*
.* PROCESS SYSTEM LIB
.*
.DSMAIN3 AIF   (T'&PAGEDSN NE 'O' OR T'&SWAPDSN NE 'O').E3      Z40WSVN
.D1      AIF   ('&LIB' NE 'INDMAC').D2  INDMAC SPECIFIED?
&A       SETA  1                        SET INDEX VALUE
         AGO   .DS41
.D2      AIF   ('&LIB' NE 'CMDLIB').D3  CMDLIB SPECIFIED?
&A       SETA  2                        SET INDEX VALUE
         AGO   .DS41
.D3      AIF   ('&LIB' NE 'HELP').D4    HELP SPECIFIED?         Y30BS04
&A       SETA  3                        SET INDEX VALUE
         AGO   .DS41
.D4      AIF   ('&LIB' NE 'JES3LIB').D5 JES3LIB SPECIFIED?      Y30BS04
&A       SETA  4                        SET INDEX VALUE         Y30BS04
         AGO   .DS41                                            Y30BS04
.D5      AIF   ('&LIB' NE 'SAMPLIB').D6 SAMPLIB SPECIFIED?
&A       SETA  5                        SET INDEX VALUE
         AGO   .DS41
.D6      AIF   ('&LIB' NE 'LINKLIB').D7 LINKLIB SPECIFIED?
&A       SETA  6                        SET INDEX VALUE
         AGO   .DS41
.D7      AIF   ('&LIB' NE 'MACLIB').D8  MACLIB SPECIFIED?
&A       SETA  7                        SET INDEX VALUE
         AGO   .DS41
.D8      AIF   ('&LIB' NE 'PROCLIB').D9 PROCLIB SPECIFIED?
&A       SETA  8                        SET INDEX VALUE
         AGO   .DS41
.D9      AIF   ('&LIB' NE 'SVCLIB').D10 SVCLIB SPECIFIED?
&A       SETA  9                        SET INDEX VALUE
         AGO   .DS41
.D10     AIF   ('&LIB' NE 'TELCMLIB').D11 TELCMLIB SPECIFIED?
&A       SETA  10                         SET INDEX VALUE
         AGO   .DS41
.D11     AIF   ('&LIB' NE 'UADS').D12     UADS SPECIFIED?
&A       SETA  11                         SET INDEX VALUE
         AGO   .DS41
.D12     AIF   ('&LIB' NE 'LPALIB').D13   LPALIB SPECIFIED?
&A       SETA  12                         SET INDEX VALUE
         AGO   .DS41
.D13     AIF   ('&LIB' NE 'VTAMLIB').D14  VTAMLIB SPECIFIED?
&A       SETA  13                         SET INDEX VALUE
         AGO   .DS41
.D14     AIF   ('&LIB' NE 'STGINDEX').D15 STGINDEX SPECIFIED?
&A       SETA  14                         SET INDEX VALUE
         AGO   .DS41
.D15     AIF   ('&LIB' NE 'VSCATLG').D16  VSCATLG SPECIFIED?
&A       SETA  15                         SET INDEX VALUE
&SGVSNMC SETC '&NAME'                     SAVE NAME OF DATA SET Z40WSVN
         AGO   .DS41
.D16     AIF   ('&LIB' NE 'IMAGELIB').D17 IMAGELIB SPECIFIED?
&A       SETA  16                         SET INDEX
         AGO   .DS41
.D17     AIF   ('&LIB' NE 'NUCLEUS').D18  NUCLEUS SPECIFIED?
&A       SETA  17                         SET INDEX VALUE
         AGO   .DS41
.D18     AIF   ('&LIB' NE 'PARMLIB').D19  PARMLIB SPECIFIED?
&A       SETA  18                         SET INDEX VALUE
         AGO   .DS41
.D19     AIF   ('&LIB' NE 'BRODCAST').D20 BRODCAST SPECIFIED?
&A       SETA  19                         SET INDEX VALUE
         AGO   .DS41
.D20     AIF   ('&LIB' NE 'MANX').D21     MANX SPECIFIED?
&A       SETA  20                         SET INDEX VALUE
         AGO   .DS41
.D21     AIF   ('&LIB' NE 'MANY').D22     MANY SPECIFIED?       Z40WSVN
&A       SETA  21                         SET INDEX VALUE
         AGO   .DS41
.D22     AIF   ('&LIB' NE 'DUPLEXDS').D23 DUPLEXDS SPECIFIED?   Z40WSVN
&A       SETA  22                         SET INDEX VALUE       Z40WSVN
&SGDUPXC SETC '&NAME'                     SAVE NAME OF DATA SET Z40WSVN
         AGO   .DS41                                            Z40WSVN
.D23     AIF   ('&LIB' NE 'DCMLIB').D24   DCMLIB SPECIFIED?
&A       SETA  23                         SET INDEX VALUE
         AGO   .DS41
.*                                                                 @F1D
.D24     ANOP                                                      @F1A
.D25     AIF   ('&LIB' NE 'TCOMMAC').D26 TCOMMAC SPECIFIED?    @ZA41353
&A       SETA  25                       SET INDEX VALUE
         AGO   .DS41
.D26     ANOP                                                   VS43004
.D27     ANOP
&D       SETA  0                          SET INITIAL COUNT TO ZERO
.D27A    ANOP
         AIF   ('&LIB' EQ 'DUMP0&D').DS411  DUMP00-09 SPECIFIED?
&D       SETA  &D+1                     ADD 1 TO COUNT
         AIF   (&D LE 9).D27A           VALUE OF 0-9 VALID DUMP DATASET
         AGO   .E1                      ERROR, NOT VALID DATASET
.DS411   ANOP
&A       SETA  27+&D                    DUMP00 PLUS SUBSCRIPT VALUE 0-9
.DS41    ANOP
         AIF   (&SGDSDFB(&A)).E2        PREVIOUSLY DEFINED
&SGDSDFB(&A) SETB 1                     SET DATASET DEFINED GLOBAL
.*
.* VALIDATE NAME PARAMETER
.*
         AIF   (&A EQ 15 OR &A EQ 22).NM1  REQ'D?               VS43004
         AIF   (T'&NAME NE 'O').E18     ILLEGAL                 Z40WSVN
         AGO   .NM9                     OK                      Z40WSVN
.NM1     AIF   (T'&NAME EQ 'O').E26     REQUIRED, ABSENT        Z40WSVN
         MNOTE *,'         &LIB NAME IS &NAME'                  Z40WSVN
.*       1ST CHARACTER MUST BE ALPHABETIC                       Z40WSVN
         AIF   ('&NAME'(1,1) EQ '$').NM3                        Z40WSVN
         AIF   ('&NAME'(1,1) EQ '#').NM3                        Z40WSVN
         AIF   ('&NAME'(1,1) EQ '@').NM3                        Z40WSVN
         AIF   ('&NAME'(1,1) LT 'A' OR '&NAME'(1,1) GT 'Z').E7  Z40WSVN
.NM3     AIF   (K'&NAME GT 44).E7    MAX 44 CHARS IN NAME       Z40WSVN
.*
.*       PROCESS VOL KEYWORD FOR SYSTEM LIB
.*
.NM9     AIF   (T'&VOL EQ 'O').DSMAIN4  OMITTED?                Z40WSVN
         AIF   (N'&VOL NE 2).E5         TWO PARAMETERS
         AIF   (K'&VOL(1) GT 6).E4      VOL SERIAL TOO LONG
         AIF   ('&VOL(1)' EQ '').W1     SERIAL NULL
&SGDSVLC(&A) SETC '&VOL(1)'             MOVE SERIAL TO GLOBAL
.DS415   AIF   ('&VOL(2)' EQ '').W1     UNIT NULL
         AIF   ('&VOL(2)' EQ '2314').DS42  VALID
         AIF   ('&VOL(2)' EQ '2305-1').DS42  VALID
         AIF   ('&VOL(2)' EQ '2305-2').DS42  VALID
         AIF   ('&VOL(2)' EQ '3330').DS42  VALID
         AIF   ('&VOL(2)' EQ '3330-1').DS42  VALID
         AIF   ('&VOL(2)' EQ '3340').DS42 VALID
         AIF   ('&VOL(2)' EQ '3380').DS42 VALID                  MVS38J
         AIF   ('&VOL(2)' EQ '3390').DS42 VALID                  MVS38J
         AIF   ('&VOL(2)' EQ '3375').DS42 VALID                  MVS38J
         AIF   ('&VOL(2)' NE '3350').E6 VALID                  @Z30RSTA
.DS42    ANOP
&SGDSUNC(&A) SETC '&VOL(2)'             MOVE DEVICE TYPE TO GLOBAL
.*
.*       CHECK SPACE KEYWORD
.*
.DSMAIN4 ANOP
.*                                                                 @F1D
         AIF        (T'&SPACE EQ 'O').DSMAIN5      OMITTED
         AIF   (N'&SPACE NE 2).E11
         AIF   ('&SPACE(1)' EQ 'CYL').DSS26
.* THE FOLLOWING REQUIRE ALLOCATION IN CYLINDERS
         AIF   (&A EQ 14 OR &A EQ 22).E11                       VS43004
         AIF   ('&SPACE(1)' EQ 'TRK').DSS25
         AIF   (T'&SPACE(1) NE 'N').E11
         AIF   ('&LIB' EQ 'VSCATLG').E11
         AIF   (&SPACE(1) LT 1 OR &SPACE(1) GT 65535).E8
&SGDSBZA(&A) SETA &SPACE(1)             SET BLOCKSIZE
&SGDSA2B(&A) SETB 1                     INDICATE BLOCKSIZE
         AGO   .DSS3
.*                                                                 @F1D
.DSS25   ANOP
&SGDSA1B(&A) SETB 1                     INDICATE TRK
         AGO   .DSS3
.DSS26   ANOP
&SGDSA1B(&A) SETB 1                     INDICATE CYL
&SGDSA2B(&A) SETB 1
.DSS3    ANOP
         AIF   ('&SPACE(2)'(1,1) NE '(').E11
&N       SETA  2
.DSS31   AIF   ('&SPACE(2)'(&N,1) EQ ',').DSS34
         AIF   ('&SPACE(2)'(&N,1) EQ ')').DSS34
         AIF   ('&SPACE(2)'(&N,1) EQ ' ').E11
&N       SETA  &N+1
         AGO   .DSS31
.DSS34   ANOP
&M       SETA  &N+1                     SAVE POINTER
         AIF   (&N EQ 2).E11            NO PRIMARY SPACE
         AIF   ('&SPACE(2)'(2,&N-2) LT '0' OR '&SPACE(2)'(2,&N-2) GT '6X
               5535').E12
&S       SETC  '&SPACE(2)'(2,&N-2)
&SGDSPSA(&A) SETA &S
.DSS35   ANOP
         AIF   ('&SPACE(2)'(&N,1) EQ ')').DSS381  NO SECONDARY
&N       SETA  &N+1
.DSS36   ANOP
         AIF   ('&SPACE(2)'(&N,1) EQ ',').DSS37
         AIF   ('&SPACE(2)'(&N,1) EQ ')').DSS37
         AIF   ('&SPACE(2)'(&N,1) EQ ' ').E11
&N       SETA  &N+1
         AGO   .DSS36
.DSS37   ANOP
&P       SETA  &N+1
         AIF   (&M EQ &N).DSS38         NO SECONDARY
.* THE FOLLOWING DO NOT ALLOW SECONDARY
         AIF   (&A EQ 14 OR &A EQ 16 OR &A EQ 17 OR &A EQ 18 OR &A EQ  *
               19 OR &A EQ 20 OR &A EQ 21 OR &A EQ 22 OR &A EQ 23).E13 *
                                                        Z40WSVN,VS43004
         AIF   (&A EQ 27 OR &A EQ 28 OR &A EQ 29 OR &A EQ 30 OR &A EQ 3*
               1 OR &A EQ 32 OR &A EQ 33 OR &A EQ 34 OR &A EQ 35 OR &A *
               EQ 36).E13   DUMP00-09 NO SECONDARY ALLOWED
         AIF   ('&SPACE(2)'(&M,&N-&M) LT '0' OR '&SPACE(2)'(&M,&N-&M) GX
               T '65535').E14
&Q       SETC  '&SPACE(2)'(&M,&N-&M)
&SGDSSSA(&A) SETA &Q
.DSS38   ANOP
         AIF   ('&SPACE(2)'(&N,1) NE ')').DSS385   DIRECTORY BLOCKS
.***     FOLLOWING DATA SETS REQUIRE DIRECTORY BLOCKS
.DSS381  AIF   (&A LT 14 OR &A EQ 16).E10                       Y30BS04
         AIF   (&A EQ 17 OR &A EQ 18 OR &A EQ 23 OR &A EQ 25).E10
.*                                                             @ZA41353
         AGO   .DSMAIN5                 DIRECTORY BLOCKS NOT REQUIRED
.DSS385  ANOP
&N       SETA  &N+1
.DSS39   ANOP
         AIF   ('&SPACE(2)'(&N,1) EQ ',').E15  TOO MANY PARMS
         AIF   ('&SPACE(2)'(&N,1) EQ ' ').E11   INVALID
         AIF   ('&SPACE(2)'(&N,1) EQ ')').DSS395
&N       SETA  &N+1
         AGO   .DSS39
.DSS395  ANOP
         AIF   (&A EQ 23).DSS398        DCMLIB DIR BLK
.*       FOLLOWING LIB NUMBERS MAY NOT HAVE DIRECTORY BLOCKS
         AIF   (&A EQ 14 OR &A EQ 19 OR &A EQ 20 OR &A EQ 21 OR &A EQ 2*
               2).E17                          @ZA41353,Z40WSVN,VS43004
         AIF   (&A EQ 27 OR &A EQ 28 OR &A EQ 29 OR &A EQ 30 OR &A EQ 3X
               1 OR &A EQ 32 OR &A EQ 33 OR &A EQ 34 OR &A EQ 35 OR &A *
               EQ 36).E17  DUMP00-09 INVALID
.DSS398  ANOP
         AIF   ('&SPACE(2)'(&P,&N-&P) LT '0' OR '&SPACE(2)'(&P,&N-&P) GX
               T '65535').E16           INVALID SIZE
&Q       SETC  '&SPACE(2)'(&P,&N-&P)
&SGDSDBA(&A) SETA &Q
.*
.*       CHECK PDS, MEMBERS PARAMETERS.
.*
.DSMAIN5 ANOP
         AIF   (T'&PDS EQ 'O').DSMAIN6
.*       FOLLOWING MAY SPECIFY PDS PARM
         AIF   (&A EQ 2 OR &A EQ 4 OR &A EQ 5 OR &A EQ 6 OR &A EQ 7 OR *
               &A EQ 8 OR &A EQ 9 OR &A EQ 10 OR &A EQ 12 OR &A EQ 13 O*
               R &A EQ 16 OR &A EQ 17 OR &A EQ 18 OR &A EQ 26).PDS19
.*       REF. ABOVE AIF                @ZA41353,OZ05834,ZM32650,Y30BS04
         AGO   .E28
.PDS19     ANOP
&SGPDSUC(&A) SETC '&PDS'                PUT PDS NAME IN GLOBAL
.PDS18   AIF   ('&LIB' NE 'NUCLEUS').PDS11
&C       SETA 20           SET COUNTER TO LIMIT OF MEMBERS     @AZ07727
.PDS20   ANOP  PROCESS MEMBERS PARAMETER
         AIF   (T'&MEMBERS EQ 'O').PDS30 MEMBERS OMITTED
         AIF   (N'&MEMBERS GT &C).E29   MORE MEMBERS SPEC. THAN ALLOWED
.*       MOVE MEMBER NAMES TO GLOBALS
  MNOTE *,'MEMBERS SPECIFIED FOR &PDS ARE:'
&SGMB01C(&A) SETC '&MEMBERS(1)'
   MNOTE *,'          &MEMBERS(1)'
         AIF   (N'&MEMBERS EQ 1).PDS30  LAST ONE?
&SGMB02C(&A) SETC '&MEMBERS(2)'
   MNOTE *,'          &MEMBERS(2)'
         AIF   (N'&MEMBERS EQ 2).PDS30  LAST ONE?
&SGMB03C(&A) SETC '&MEMBERS(3)'
   MNOTE *,'          &MEMBERS(3)'
         AIF   (N'&MEMBERS EQ 3).PDS30  LAST ONE?
&SGMB04C(&A) SETC '&MEMBERS(4)'
   MNOTE *,'          &MEMBERS(4)'
         AIF   (N'&MEMBERS EQ 4).PDS30  LAST ONE?
&SGMB05C(&A) SETC '&MEMBERS(5)'
   MNOTE *,'          &MEMBERS(5)'
         AIF   (N'&MEMBERS EQ 5).PDS30  LAST ONE?
&SGMB06C(&A) SETC '&MEMBERS(6)'
   MNOTE *,'          &MEMBERS(6)'
         AIF   (N'&MEMBERS EQ 6).PDS30  LAST ONE?
&SGMB07C(&A) SETC '&MEMBERS(7)'
   MNOTE *,'          &MEMBERS(7)'
         AIF   (N'&MEMBERS EQ 7).PDS30  LAST ONE?
&SGMB08C(&A) SETC '&MEMBERS(8)'
   MNOTE *,'          &MEMBERS(8)'
         AIF   (N'&MEMBERS EQ 8).PDS30  LAST ONE?
&SGMB09C(&A) SETC '&MEMBERS(9)'
   MNOTE *,'          &MEMBERS(9)'
         AIF   (N'&MEMBERS EQ 9).PDS30  LAST ONE?
&SGMB10C(&A) SETC '&MEMBERS(10)'
   MNOTE *,'          &MEMBERS(10)'
         AIF   (N'&MEMBERS EQ 10).PDS30  LAST ONE?
&SGMB11C(&A) SETC '&MEMBERS(11)'
   MNOTE *,'          &MEMBERS(11)'
         AIF   (N'&MEMBERS EQ 11).PDS30  LAST ONE?
&SGMB12C(&A) SETC '&MEMBERS(12)'
   MNOTE *,'          &MEMBERS(12)'
         AIF   (N'&MEMBERS EQ 12).PDS30  LAST ONE?
&SGMB13C(&A) SETC '&MEMBERS(13)'
   MNOTE *,'          &MEMBERS(13)'
         AIF   (N'&MEMBERS EQ 13).PDS30  LAST ONE?
&SGMB14C(&A) SETC '&MEMBERS(14)'
   MNOTE *,'          &MEMBERS(14)'
         AIF   (N'&MEMBERS EQ 14).PDS30  LAST ONE?
&SGMB15C(&A) SETC '&MEMBERS(15)'
   MNOTE *,'          &MEMBERS(15)'
         AIF   (N'&MEMBERS EQ 15).PDS30  LAST ONE?
&SGMB16C(&A) SETC '&MEMBERS(16)'
   MNOTE *,'          &MEMBERS(16)'
         AIF   (N'&MEMBERS EQ 16).PDS30  LAST ONE?
&SGMB17C(&A) SETC '&MEMBERS(17)'
   MNOTE *,'          &MEMBERS(17)'
         AIF   (N'&MEMBERS EQ 17).PDS30  LAST ONE?
&SGMB18C(&A) SETC '&MEMBERS(18)'
   MNOTE *,'          &MEMBERS(18)'
         AIF   (N'&MEMBERS EQ 18).PDS30  LAST ONE?
&SGMB19C(&A) SETC '&MEMBERS(19)'
   MNOTE *,'          &MEMBERS(19)'
         AIF   (N'&MEMBERS EQ 19).PDS30  LAST ONE?
&SGMB20C(&A) SETC '&MEMBERS(20)'
   MNOTE *,'          &MEMBERS(20)'
         AGO   .PDS30
.PDS11   ANOP
&C       SETA  20                       MAX NUMBER OF MEMBERS
         AGO   .PDS20                   GO PROCESS MEMBERS
.**********************************************************************
.*******             PROCESS APPENDAGES
.**********************************************************************
.***            ABNORMAL END APPENDAGES
.PDS30   ANOP
         AIF   (T'&ABEAPP EQ 'O').PDS32
&APP     SETC  'ABEAPP'                 SET APPENDAGE NAME FOR MSG
         AIF   ('&LIB' NE 'LPALIB' AND '&LIB' NE 'SVCLIB').E305
         AIF   (N'&ABEAPP GT 84).E31    MAX 84 ALLOWED
&N       SETA  1
.PDS302  ANOP
         AIF   ('&ABEAPP(&N)' LT 'WA' OR '&ABEAPP(&N)' GT 'Z9').E30
&N       SETA  &N+1
         AIF   (&N LE N'&ABEAPP).PDS302 LOOP UNTIL ALL CHECKED
&N       SETA  1                        SET INDEX FOR SENDING FIELD
&P       SETA  1                        SET INDEX FOR RECIEVE FIELD
.*
.******   MOVE 4 APPENDAGE NAMES TO ONE C-TYPE GLOBAL AND PRINT THEM
.*
  MNOTE *,'* * * THE FOLLOWING &APP APPENDAGES ARE SPECIFIED'
.PDS304  AIF   ('&LIB' EQ 'LPALIB').PDS305     LPALIB OR SVCLIB?
&SGSABEC(&P) SETC '&ABEAPP(&N)'.'&ABEAPP(&N+1)'.'&ABEAPP(&N+2)'.'&ABEAP*
               P(&N+3)'                       SVCLIB APPENDAGES
         AGO  .PDS306
.PDS305  ANOP
&SGLABEC(&P) SETC '&ABEAPP(&N)'.'&ABEAPP(&N+1)'.'&ABEAPP(&N+2)'.'&ABEAP*
               P(&N+3)'                       LPALIB APPENDAGES
.PDS306  ANOP
         AIF   (NOT (&SGDABEA(1) EQ 0 AND &SGDABEA(2) EQ 0)).PDS307
&SGDABEC(&P) SETC '&ABEAPP(&N)'.'&ABEAPP(&N+1)'.'&ABEAPP(&N+2)'.'&ABEAP*
               P(&N+3)'                       USED BY SGIEC6AP
.PDS307  ANOP
.*
  MNOTE *,'      &ABEAPP(&N),&ABEAPP(&N+1),&ABEAPP(&N+2),&ABEAPP(&N+3)'
&N       SETA  &N+4                     INCR TO NEXT SUBPARM TO MOVE
&P       SETA  &P+1                     INCR TO NEXT RECEIVER
         AIF   (&N LE N'&ABEAPP).PDS304 LOOP UNTIL ALL MOVED
         AIF   (&SGDABEA(2) EQ 0).PDS316  ABEAPP NOT SPECIFIED BEFORE
&P       SETA  &SGDABEA(1)            SET INDEX FOR RECEIVE FIELD
&N       SETA  (&P*4-&SGDABEA(2))     NUMBER OF ENTRIES LEFT TO SEND
         AIF   (&N NE 3).PDS310       CHECK VALUES TO THREE
&SGDABEC(&P) SETC '&SGDABEC(&P)'.'&ABEAPP(1)'.'&ABEAPP(2)'.'&ABEAPP(3)'
&N       SETA  4                      NEXT ENTRY TO SEND
&P       SETA  &P+1                   INCREMENT RECEIVER COUNT
         AGO   .PDS315
.PDS310  AIF   (&N NE 2).PDS311       CHECK FOR LESS THAN 2 ENTRIES
&SGDABEC(&P) SETC '&SGDABEC(&P)'.'&ABEAPP(1)'.'&ABEAPP(2)'
&N       SETA  3
&P       SETA  &P+1                   INCREMENT RECEIVER COUNT
         AGO   .PDS315
.PDS311  AIF   (&N NE 1).PDS312       NO ENTRIES
&SGDABEC(&P) SETC '&SGDABEC(&P)'.'&ABEAPP(1)'
&N       SETA  2
&P       SETA  &P+1                   INCREMENT RECEIVER COUNT
         AGO   .PDS315
.PDS312  ANOP
&N       SETA  1                        START WITH FIRST ENTRY
&P       SETA  &P+1                   INCREMENT RECEIVER COUNT
.PDS314  ANOP
&SGDABEC(&P) SETC '&ABEAPP(&N)'.'&ABEAPP(&N+1)'.'&ABEAPP(&N+2)'.'&ABEAP*
               P(&N+3)'                 USED BY SGIEC6AP
&N       SETA  &N+4                     INCR TO NEXT SUBPARM TO MOVE
&P       SETA  &P+1                     INCR TO NEXT RECEIVER
.PDS315  AIF   (&N LE N'&ABEAPP).PDS314 LOOP UNTIL ALL MOVED
         AGO   .PDS32                   GO TO NEXT TYPE OF APPENDAGE
.****       SAVE VALUES FOR NEXT EXTRY
.PDS316  ANOP
&SGDABEA(1) SETA  &P-1                  RESET LAST RECEIVER ENTRY
&SGDABEA(2) SETA  N'&ABEAPP             SAVE NUMBER OF PARAMETERS
.**********************************************************************
.***            CHANNEL END APPENDAGES
.**********************************************************************
.PDS32   ANOP
         AIF   (T'&CHEAPP EQ 'O').PDS34
         AIF   ('&LIB' NE 'LPALIB' AND '&LIB' NE 'SVCLIB').E305
&APP     SETC  'CHEAPP'                 SET   APPENDAGE NAME FOR MSG
         AIF   (N'&CHEAPP GT 84).E31    MAX 84 ALLOWED
&N       SETA  1                        INIT INDEX
.PDS322  ANOP
         AIF   ('&CHEAPP(&N)' LT 'WA' OR '&CHEAPP(&N)' GT 'Z9').E30
&N       SETA  &N+1
         AIF   (&N LE N'&CHEAPP).PDS322 LOOP UNTIL ALL CHECKED
&N       SETA  1                        SET INDEX FOR SENDING FIELD
&P       SETA  1                        SET INDEX FOR RECEIVE FIELD
.*
.******   MOVE 4 APPENDAGE NAMES TO ONE C-TYPE GLOBAL AND PRINT THEM
.*
  MNOTE *,'* * * THE FOLLOWING &APP APPENDAGES ARE SPECIFIED'
.PDS324  AIF   ('&LIB' EQ 'LPALIB').PDS325        LPALIB OR SVCLIB?
&SGSCHEC(&P) SETC '&CHEAPP(&N)'.'&CHEAPP(&N+1)'.'&CHEAPP(&N+2)'.'&CHEAP*
               P(&N+3)'                           SVCLIB APPENDAGES
         AGO   .PDS326
.PDS325  ANOP
&SGLCHEC(&P) SETC '&CHEAPP(&N)'.'&CHEAPP(&N+1)'.'&CHEAPP(&N+2)'.'&CHEAP*
               P(&N+3)'                           LPALIB APPENDAGES
.PDS326  ANOP
         AIF   (NOT (&SGDCHEA(1) EQ 0 AND &SGDCHEA(2) EQ 0)).PDS327
&SGDCHEC(&P) SETC '&CHEAPP(&N)'.'&CHEAPP(&N+1)'.'&CHEAPP(&N+2)'.'&CHEAP*
               P(&N+3)'                           USED BY SGIEC6AP
.PDS327  ANOP
  MNOTE *,'      &CHEAPP(&N),&CHEAPP(&N+1),&CHEAPP(&N+2),&CHEAPP(&N+3)'
&N       SETA  &N+4                     INCR TO NEXT SUBPARM TO MOVE
&P       SETA  &P+1                     INCR TO NEXT RECEIVER
         AIF   (&N LE N'&CHEAPP).PDS324 LOOP UNTIL ALL MOVED
         AIF   (&SGDCHEA(2) EQ 0).PDS336  CHEAPP SPECIFIED PREVIOUSLY?
&P       SETA  &SGDCHEA(1)            SET INDEX FOR RECEIVE FIELD
&N       SETA  (&P*4-&SGDCHEA(2))     NUMBER OF ENTRIES LEFT TO SEND
         AIF   (&N NE 3).PDS330       CHECK VALUES TO THREE
&SGDCHEC(&P) SETC '&SGDCHEC(&P)'.'&CHEAPP(1)'.'&CHEAPP(2)'.'&CHEAPP(3)'
&N       SETA  4                      NEXT ENTRY TO SEND
&P       SETA  &P+1                   INCREMENT RECEIVER COUNT
         AGO   .PDS335
.PDS330  AIF   (&N NE 2).PDS331       CHECK FOR LESS THAN 2 ENTRIES
&SGDCHEC(&P) SETC  '&SGDCHEC(&P)'.'&CHEAPP(1)'.'&CHEAPP(2)'
&N       SETA  3
&P       SETA  &P+1                   INCREMENT RECEIVER COUNT
         AGO   .PDS335
.PDS331  AIF   (&N NE 1).PDS332       NO ENTRIES
&SGDCHEC(&P) SETC  '&SGDCHEC(&P)'.'&CHEAPP(1)'
&N       SETA  2
&P       SETA  &P+1                   INCREMENT RECEIVER COUNT
         AGO   .PDS335
.PDS332  ANOP
&N       SETA  1                        START WITH FIRST ENTRY
&P       SETA  &P+1                   INCREMENT RECEIVER COUNT
.PDS334  ANOP
&SGDCHEC(&P) SETC '&CHEAPP(&N)'.'&CHEAPP(&N+1)'.'&CHEAPP(&N+2)'.'&CHEAP*
               P(&N+3)'                 USED BY SGIEC6AP
&N       SETA  &N+4                     INCR TO NEXT SUBPARM TO MOVE
&P       SETA  &P+1                     INCR TO NEXT RECEIVER
.PDS335  AIF   (&N LE N'&CHEAPP).PDS334 LOOP UNTIL ALL MOVED
         AGO   .PDS34                   GO TO NEXT TYPE OF APPENDAGE
.****       SAVE VALUES FOR NEXT EXTRY
.PDS336  ANOP
&SGDCHEA(1) SETA  &P-1                  RESET LAST RECEIVER ENTRY
&SGDCHEA(2) SETA  N'&CHEAPP             SAVE NUMBER OF PARAMETERS
.**********************************************************************
.***            END OF EXTENT APPENDAGES
.**********************************************************************
.PDS34   ANOP
         AIF   (T'&EOEAPP EQ 'O').PDS36
         AIF   ('&LIB' NE 'LPALIB' AND '&LIB' NE 'SVCLIB').E305
&APP     SETC  'EOEAPP'                 SET   APPENDAGE NAME FOR MSG
         AIF   (N'&EOEAPP GT 84).E31    MAX 84 ALLOWED
&N       SETA  1
.PDS342  ANOP
         AIF   ('&EOEAPP(&N)' LT 'WA' OR '&EOEAPP(&N)' GT 'Z9').E30
&N       SETA  &N+1
         AIF   (&N LE N'&EOEAPP).PDS342 LOOP UNTIL ALL CHECKED
&N       SETA  1                        SET INDEX FOR SENDING FIELD
&P       SETA  1                        SET INDEX FOR RECIEVE FIELD
.*
.******   MOVE 4 APPENDAGE NAMES TO ONE C-TYPE GLOBAL AND PRINT THEM
.*
  MNOTE *,'* * * THE FOLLOWING &APP APPENDAGES ARE SPECIFIED'
.PDS344  AIF   ('&LIB' EQ 'LPALIB').PDS345        LPALIB OR SVCLIB?
&SGSEOEC(&P) SETC '&EOEAPP(&N)'.'&EOEAPP(&N+1)'.'&EOEAPP(&N+2)'.'&EOEAP*
               P(&N+3)'                 SVCLIB APPENDAGES
         AGO   .PDS346
.PDS345  ANOP
&SGLEOEC(&P) SETC '&EOEAPP(&N)'.'&EOEAPP(&N+1)'.'&EOEAPP(&N+2)'.'&EOEAP*
               P(&N+3)'                 LPALIB APPENDAGES
.PDS346  ANOP
         AIF   (NOT (&SGDEOEA(1) EQ 0 AND &SGDEOEA(2) EQ 0)).PDS347
&SGDEOEC(&P) SETC '&EOEAPP(&N)'.'&EOEAPP(&N+1)'.'&EOEAPP(&N+2)'.'&EOEAP*
               P(&N+3)'                       USED BY SGIEC6AP
.PDS347  ANOP
  MNOTE *,'      &EOEAPP(&N),&EOEAPP(&N+1),&EOEAPP(&N+2),&EOEAPP(&N+3)'
&N       SETA  &N+4                     INCR TO NEXT SUBPARM TO MOVE
&P       SETA  &P+1                     INCR TO NEXT RECEIVER
         AIF   (&N LE N'&EOEAPP).PDS344 LOOP UNTIL ALL MOVED
         AIF   (&SGDEOEA(2) EQ 0).PDS356   EOEAPP NOT SPECIFIED BEFORE
&P       SETA  &SGDEOEA(1)            SET INDEX FOR RECEIVE FIELD
&N       SETA  (&P*4-&SGDEOEA(2))     NUMBER OF ENTRIES LEFT TO SEND
         AIF   (&N NE 3).PDS350       CHECK VALUES TO THREE
&SGDEOEC(&P) SETC '&SGDEOEC(&P)'.'&EOEAPP(1)'.'&EOEAPP(2)'.'&EOEAPP(3)'
&N       SETA  4                      NEXT ENTRY TO SEND
&P       SETA  &P+1                   INCREMENT RECEIVER COUNT
         AGO   .PDS355
.PDS350  AIF   (&N NE 2).PDS351       CHECK FOR LESS THAN 2 ENTRIES
&SGDEOEC(&P) SETC '&SGDEOEC(&P)'.'&EOEAPP(1)'.'&EOEAPP(2)'
&N       SETA  3
&P       SETA  &P+1                   INCREMENT RECEIVER COUNT
         AGO   .PDS355
.PDS351  AIF   (&N NE 1).PDS352       NO ENTRIES
&SGDEOEC(&P) SETC  '&SGDEOEC(&P)'.'&EOEAPP(1)'
&N       SETA  2
&P       SETA  &P+1                   INCREMENT RECEIVER COUNT
         AGO   .PDS355
.PDS352  ANOP
&N       SETA  1                        START WITH FIRST ENTRY
&P       SETA  &P+1                   INCREMENT RECEIVER COUNT
.PDS354  ANOP
&SGDEOEC(&P) SETC '&EOEAPP(&N)'.'&EOEAPP(&N+1)'.'&EOEAPP(&N+2)'.'&EOEAP*
               P(&N+3)'                 USED BY SGIEC6AP
&N       SETA  &N+4                     INCR TO NEXT SUBPARM TO MOVE
&P       SETA  &P+1                     INCR TO NEXT RECEIVER
.PDS355  AIF   (&N LE N'&EOEAPP).PDS354 LOOP UNTIL ALL MOVED
         AGO   .PDS36                   GO TO NEXT TYPE OF APPENDAGE
.****       SAVE VALUES FOR NEXT EXTRY
.PDS356  ANOP
&SGDEOEA(1) SETA  &P-1                  RESET LAST RECEIVER ENTRY
&SGDEOEA(2) SETA  N'&EOEAPP             SAVE NUMBER OF PARAMETERS
.**********************************************************************
.***            PROGRAMMED-CONTROLLED INTERRUPT APPENDAGES
.**********************************************************************
.PDS36   ANOP
         AIF   (T'&PCIAPP EQ 'O').PDS38
         AIF   ('&LIB' NE 'LPALIB' AND '&LIB' NE 'SVCLIB').E305
&APP     SETC  'PCIAPP'                 SET   APPENDAGE NAME FOR MSG
         AIF   (N'&PCIAPP GT 84).E31    MAX 84 ALLOWED
&N       SETA  1
.PDS362  ANOP
         AIF   ('&PCIAPP(&N)' LT 'WA' OR '&PCIAPP(&N)' GT 'Z9').E30
&N       SETA  &N+1
         AIF   (&N LE N'&PCIAPP).PDS362 LOOP UNTIL ALL CHECKED
&N       SETA  1                        SET INDEX FOR SENDING FIELD
&P       SETA  1                        SET INDEX FOR RECEIVE FIELD
.*
.******   MOVE 4 APPENDAGE NAMES TO ONE C-TYPE GLOBAL AND PRINT THEM
.*
  MNOTE *,'* * * THE FOLLOWING &APP APPENDAGES ARE SPECIFIED'
.PDS364  AIF   ('&LIB' EQ 'LPALIB').PDS365        LPALIB OR SVCLIB?
&SGSPCIC(&P) SETC '&PCIAPP(&N)'.'&PCIAPP(&N+1)'.'&PCIAPP(&N+2)'.'&PCIAP*
               P(&N+3)'                 SVCLIB APPENDAGES
         AGO   .PDS366
.PDS365  ANOP
&SGLPCIC(&P) SETC '&PCIAPP(&N)'.'&PCIAPP(&N+1)'.'&PCIAPP(&N+2)'.'&PCIAP*
               P(&N+3)'                 LPALIB APPENDAGES
.PDS366  ANOP
         AIF   (NOT (&SGDPCIA(1) EQ 0 AND &SGDPCIA(2) EQ 0)).PDS367
&SGDPCIC(&P) SETC '&PCIAPP(&N)'.'&PCIAPP(&N+1)'.'&PCIAPP(&N+2)'.'&PCIAP*
               P(&N+3)'                       USED BY SGIEC6AP
.PDS367  ANOP
  MNOTE *,'      &PCIAPP(&N),&PCIAPP(&N+1),&PCIAPP(&N+2),&PCIAPP(&N+3)'
&N       SETA  &N+4                     INCR TO NEXT SUBPARM TO MOVE
&P       SETA  &P+1                     INCR TO NEXT RECEIVER
         AIF   (&N LE N'&PCIAPP).PDS364 LOOP UNTIL ALL MOVED
         AIF   (&SGDPCIA(2) EQ 0).PDS376  PCIAPP NOT SPECIFIED BEFORE
&P       SETA  &SGDPCIA(1)            SET INDEX FOR RECEIVE FIELD
&N       SETA  (&P*4-&SGDPCIA(2))     NUMBER OF ENTRIES LEFT TO SEND
         AIF   (&N NE 3).PDS370       CHECK VALUES TO THREE
&SGDPCIC(&P) SETC '&SGDPCIC(&P)'.'&PCIAPP(1)'.'&PCIAPP(2)'.'&PCIAPP(3)'
&N       SETA  4                      NEXT ENTRY TO SEND
&P       SETA  &P+1                   INCREMENT RECEIVER COUNT
         AGO   .PDS375
.PDS370  AIF   (&N NE 2).PDS371       CHECK FOR LESS THAN 2 ENTRIES
&SGDPCIC(&P) SETC  '&SGDPCIC(&P)'.'&PCIAPP(1)'.'&PCIAPP(2)'
&N       SETA  3
&P       SETA  &P+1                   INCREMENT RECEIVER COUNT
         AGO   .PDS375
.PDS371  AIF   (&N NE 1).PDS372       NO ENTRIES
&SGDPCIC(&P) SETC  '&SGDPCIC(&P)'.'&PCIAPP(1)'
&N       SETA  2
&P       SETA  &P+1                   INCREMENT RECEIVER COUNT
         AGO   .PDS375
.PDS372  ANOP
&N       SETA  1                        START WITH FIRST ENTRY
&P       SETA  &P+1                   INCREMENT RECEIVER COUNT
.PDS374  ANOP
&SGDPCIC(&P) SETC '&PCIAPP(&N)'.'&PCIAPP(&N+1)'.'&PCIAPP(&N+2)'.'&PCIAP*
               P(&N+3)'                 USED BY SGIEC6AP
&N       SETA  &N+4                     INCR TO NEXT SUBPARM TO MOVE
&P       SETA  &P+1                     INCR TO NEXT RECEIVER
.PDS375  AIF   (&N LE N'&PCIAPP).PDS374 LOOP UNTIL ALL MOVED
         AGO   .PDS38                   GO TO NEXT TYPE OF APPENDAGE
.****       SAVE VALUES FOR NEXT EXTRY
.PDS376  ANOP
&SGDPCIA(1) SETA  &P-1                  RESET LAST RECEIVER ENTRY
&SGDPCIA(2) SETA  N'&PCIAPP             SAVE NUMBER OF PARAMETERS
.**********************************************************************
.***            START I/O APPENDAGES
.**********************************************************************
.PDS38   ANOP
         AIF   (T'&SIOAPP EQ 'O').RES   OMITTED?
         AIF   ('&LIB' NE 'LPALIB' AND '&LIB' NE 'SVCLIB').E305
&APP     SETC  'SIOAPP'                 SET APPENDAGE NAME FOR MSG
         AIF   (N'&ABEAPP GT 84).E31    MAX 84 ALLOWED
&N       SETA  1
.PDS382  ANOP
         AIF   ('&SIOAPP(&N)' LT 'WA' OR '&SIOAPP(&N)' GT 'Z9').E30
&N       SETA  &N+1
         AIF   (&N LE N'&SIOAPP).PDS382 LOOP UNTIL ALL CHECKED
&N       SETA  1                        SET INDEX FOR SENDING FIELD
&P       SETA  1                        SET INDEX FOR RECIEVE FIELD
.*
.******   MOVE 4 APPENDAGE NAMES TO ONE C-TYPE GLOBAL AND PRINT THEM
.*
  MNOTE *,'* * * THE FOLLOWING &APP APPENDAGES ARE SPECIFIED'
.PDS384  AIF   ('&LIB' EQ 'LPALIB').PDS385        LPALIB OR SVCLIB?
&SGSSIOC(&P) SETC '&SIOAPP(&N)'.'&SIOAPP(&N+1)'.'&SIOAPP(&N+2)'.'&SIOAP*
               P(&N+3)'                 SVCLIB APPENDAGES
         AGO   .PDS386
.PDS385  ANOP
&SGLSIOC(&P) SETC '&SIOAPP(&N)'.'&SIOAPP(&N+1)'.'&SIOAPP(&N+2)'.'&SIOAP*
               P(&N+3)'                 LPALIB APPENDAGES
.PDS386  ANOP
         AIF   (NOT (&SGDSIOA(1) EQ 0 AND &SGDSIOA(2) EQ 0)).PDS387
&SGDSIOC(&P) SETC '&SIOAPP(&N)'.'&SIOAPP(&N+1)'.'&SIOAPP(&N+2)'.'&SIOAP*
               P(&N+3)'                 USED BY SGIEC6AP
.PDS387  ANOP
  MNOTE *,'      &SIOAPP(&N),&SIOAPP(&N+1),&SIOAPP(&N+2),&SIOAPP(&N+3)'
&N       SETA  &N+4                     INCR TO NEXT SUBPARM TO MOVE
&P       SETA  &P+1                     INCR TO NEXT RECEIVER
         AIF   (&N LE N'&SIOAPP).PDS384 LOOP UNTIL ALL MOVED
         AIF   (&SGDSIOA(2) EQ 0).PDS396  SIOAPP NOT SPECIFIED BEFORE
&P       SETA  &SGDSIOA(1)            SET INDEX FOR RECEIVE FIELD
&N       SETA  (&P*4-&SGDSIOA(2))     NUMBER OF ENTRIES LEFT TO SEND
         AIF   (&N NE 3).PDS390       CHECK VALUES TO THREE
&SGDSIOC(&P) SETC '&SGDSIOC(&P)'.'&SIOAPP(1)'.'&SIOAPP(2)'.'&SIOAPP(3)'
&N       SETA  4                      NEXT ENTRY TO SEND
&P       SETA  &P+1                   INCREMENT RECEIVER COUNT
         AGO   .PDS395
.PDS390  AIF   (&N NE 2).PDS391       CHECK FOR LESS THAN 2 ENTRIES
&SGDSIOC(&P) SETC '&SGDSIOC(&P)'.'&SIOAPP(1)'.'&SIOAPP(2)'
&N       SETA  3
&P       SETA  &P+1                   INCREMENT RECEIVER COUNT
         AGO   .PDS395
.PDS391  AIF   (&N NE 1).PDS392       NO ENTRIES
&SGDSIOC(&P) SETC '&SGDSIOC(&P)'.'&SIOAPP(1)'
&N       SETA  2
&P       SETA  &P+1                   INCREMENT RECEIVER COUNT
         AGO   .PDS395
.PDS392  ANOP
&N       SETA  1                        START WITH FIRST ENTRY
&P       SETA  &P+1                   INCREMENT RECEIVER COUNT
.PDS394  ANOP
&SGDSIOC(&P) SETC '&SIOAPP(&N)'.'&SIOAPP(&N+1)'.'&SIOAPP(&N+2)'.'&SIOAP*
               P(&N+3)'                 USED BY SGIEC6AP
&N       SETA  &N+4                     INCR TO NEXT SUBPARM TO MOVE
&P       SETA  &P+1                     INCR TO NEXT RECEIVER
.PDS395  AIF   (&N LE N'&SIOAPP).PDS394 LOOP UNTIL ALL MOVED
         AGO   .RES                     GO TO NEXT TYPE OF APPENDAGE
.****       SAVE VALUES FOR NEXT EXTRY
.PDS396  ANOP
&SGDSIOA(1) SETA  &P-1                  RESET LAST RECEIVER ENTRY
&SGDSIOA(2) SETA  N'&SIOAPP             SAVE NUMBER OF PARAMETERS
.**********************************************************************
.******** PROCESS RESIDNT= PARAMETERS
.**********************************************************************
.RES     ANOP                           CHECK RESIDNT= KEYWORD
         AIF   (T'&RESIDNT EQ 'O').END  OMITTED?
         AIF   (&A NE 6 AND &A NE 9 AND &A NE 12).E32  DATASET LINKLIB,X
                                        SVCLIB OR LPALIB?
         AIF   (N'&RESIDNT GT 10).E33   MAX 10 ALLOWED
.******** MOVE RESIDNT MEMBER NAMES TO GLOBALS
  MNOTE *,'RESIDNT MEMBERS SPECIFIED FOR &LIB FROM &PDS ARE'
&SGRES1C(&A) SETC '&RESIDNT(1)'
  MNOTE *,'         &RESIDNT(1)'
         AIF   (N'&RESIDNT EQ 1).RES30  LAST ONE?
&SGRES2C(&A) SETC '&RESIDNT(2)'
  MNOTE *,'         &RESIDNT(2)'
         AIF   (N'&RESIDNT EQ 2).RES30  LAST ONE?
&SGRES3C(&A) SETC '&RESIDNT(3)'
  MNOTE *,'         &RESIDNT(3)'
         AIF   (N'&RESIDNT EQ 3).RES30  LAST ONE?
&SGRES4C(&A) SETC '&RESIDNT(4)'
  MNOTE *,'         &RESIDNT(4)'
         AIF   (N'&RESIDNT EQ 4).RES30  LAST ONE?
&SGRES5C(&A) SETC '&RESIDNT(5)'
  MNOTE *,'         &RESIDNT(5)'
         AIF   (N'&RESIDNT EQ 5).RES30  LAST ONE?
&SGRES6C(&A) SETC '&RESIDNT(6)'
  MNOTE *,'         &RESIDNT(6)'
         AIF   (N'&RESIDNT EQ 6).RES30  LAST ONE?
&SGRES7C(&A) SETC '&RESIDNT(7)'
  MNOTE *,'         &RESIDNT(7)'
         AIF   (N'&RESIDNT EQ 7).RES30  LAST ONE?
&SGRES8C(&A) SETC '&RESIDNT(8)'
  MNOTE *,'         &RESIDNT(8)'
         AIF   (N'&RESIDNT EQ 8).RES30  LAST ONE?
&SGRES9C(&A) SETC '&RESIDNT(9)'
  MNOTE *,'         &RESIDNT(9)'
         AIF   (N'&RESIDNT EQ 9).RES30  LAST ONE?
&SGRESAC(&A) SETC '&RESIDNT(10)'
  MNOTE *,'         &RESIDNT(10)'
.RES30   ANOP
         AGO   .END
.DSMAIN6 ANOP
         AIF   (T'&MEMBERS NE 'O').E27  MEMBERS INVALID W/OUT PDS
.DS62    ANOP
         AIF   (T'&RESIDNT NE 'O').E34  RESIDNT INVALID W/OUT PDS
.DS63    ANOP
         AIF   (T'&ABEAPP NE 'O').E35
         AIF   (T'&CHEAPP NE 'O').E35
         AIF   (T'&EOEAPP NE 'O').E35
         AIF   (T'&PCIAPP NE 'O').E35
         AIF   (T'&SIOAPP NE 'O').E35
         AGO   .PDS18
.W1 MNOTE 0,'* * * IEIDTSW01 VOLUME OR UNIT SUBPARM OF VOL PARM IS NULLX
               , WILL BE DEFAULTED TO RESVOL'
         AGO   .DSMAIN4
.E1 MNOTE 5,'* ** *IEIDTS101 LIBRARY &LIB INVALID'
         AGO   .QUIT
.E2 MNOTE 5,'* * * IEIDTS102 LIBRARY &LIB PREVIOUSLY DEFINED'
         AGO   .QUIT
.E3 MNOTE 5,'* * * IEIDTS103 EXACTLY ONE OF SYSTEM LIB, SWAPDSN, OR PAG*
               EDSN MUST BE SPECIFIED.'                         Z40WSVN
         AGO   .QUIT                                            Z40WSVN
.E4 MNOTE 5,'* * * IEIDTS104 VOLUME SERIAL TOO LONG'
&SGQUITB SETB 1
         AGO   .DS415
.E5 MNOTE 5,'* * * IEIDTS105 WRONG NUMBER OF SUBPARMS IN VOL PARAMETER'
&SGQUITB SETB 1
         AGO   .DSMAIN4
.E6 MNOTE 5,'* * * IEIDTS106 INVALID DEVICE TYPE &VOL(2)'
&SGQUITB SETB 1
         AGO   .DSMAIN4
.E7 MNOTE 5,'* * * IEIDTS107 NAME PARM TOO LONG OR INVALID FIRST CHARAC*
               TER'                                             Z40WSVN
&SGQUITB SETB 1                                                 Z40WSVN
         AGO   .NM9                                             Z40WSVN
.E8 MNOTE 5,'* * * IEIDTS108 INVALID BLOCKSIZE &SPACE(1)'
&SGQUITB SETB 1
         AGO   .DSMAIN5
.E9 MNOTE 5,'* * * IEIDTS109 SECONDARY SPACE NOT ALLOWED FOR PAGE OR SW*
               AP DATA SETS'                                    Z40WSVN
         AGO   .QUIT                                            Z40WSVN
.E10 MNOTE 5,'* * * IEIDTS110 DIRECTORY BLOCKS REQUIRED FOR PDS'
&SGQUITB SETB 1
         AGO   .DSMAIN5
.E11 MNOTE 5,'* * * IEIDTS111 INCORRECT FORMAT/UNITS ON SPACE OPERAND'
&SGQUITB SETB 1
         AGO   .DSMAIN5
.E12 MNOTE 5,'* * * IEIDTS112 PRIMARY SPACE PARAMETER INVALID'
&SGQUITB SETB 1
         AGO   .DSS35
.E13 MNOTE 5,'* * * IEIDTS113 SECONDARY SPACE INVALID FOR &LIB'
&SGQUITB SETB 1
         AGO   .DSS38
.E14 MNOTE 5,'* * * IEIDTS114 SECONDARY SPACE INVALID'
&SGQUITB SETB 1
         AGO   .DSS38
.E15 MNOTE 5,'* * * IEIDTS115 TOO MANY SUBPARMS IN SPACE PARAMETER'
&SGQUITB SETB 1
         AGO   .DSMAIN5
.E16 MNOTE 5,'* * * IEIDTS116 DIRECTORY BLOCK SIZE INVALID'
&SGQUITB SETB 1
         AGO   .DSMAIN5
.E17 MNOTE 5,'* * * IEIDTS117 DIRECTORY BLOCK INVALID FOR &LIB'
&SGQUITB SETB 1
         AGO   .DSMAIN5
.E18 MNOTE 5,'* * * IEIDTS118 NAME= IS NOT ALLOWED FOR &LIB'    Z40WSVN
&SGQUITB SETB 1
         AGO   .NM9                                             Z40WSVN
.E19 MNOTE 5,'* * * IEIDTS119 PRIMARY SPACE PARAMETER INVALID'  Z40WSVN
         AGO   .QUIT                                            Z40WSVN
.E20 MNOTE 5,'* * * IEIDTS200 PAGEDSN SPECIFIED MORE THAN 25 TIMES'
         AGO   .QUIT                                            Z40WSVN
.E21 MNOTE 5,'* * * IEIDTS210 DATASET NAME &PAGEDSN IS INVALID' Z40WSVN
&SGQUITB SETB 1
         AGO   .PG1255
.E22 MNOTE 5,'* * * IEIDTS220 VOL MUST BE SPECIFIED FOR PAGEDSN IF SPACX
               E IS SPECIFIED'
&SGQUITB SETB 1
         AGO   .PG1257
.E23 MNOTE 5,'* * * IEIDTS230 VOL PARAMETER INCORRECTLY SPECIFIED'
&SGQUITB SETB 1
         AGO   .PG1257
.E24 MNOTE 5,'* * * IEIDTS240 VOLUME SERIAL TOO LONG'
&SGQUITB SETB 1
         AGO   .PG1256
.E25 MNOTE 5,'* * * IEIDTS250 INVALID DEVICE TYPE &VOL(2)'
&SGQUITB SETB 1
         AGO   .PG1257
.E26 MNOTE 5,'* * * IEIDTS260 NAME MUST BE SPECIFIED FOR &LIB'  Z40WSVN
&SGQUITB SETB 1
         AGO   .NM9                                             Z40WSVN
.E27 MNOTE 5,'* * * IEIDTS270 PDS MUST BE SPECIFIED FOR MEMBERS'
&SGQUITB SETB 1
         AGO   .DS62
.E28 MNOTE 5,'* * * IEIDTS280 PDS NOT ALLOWED FOR &LIB'         Z40WSVN
         AGO   .QUIT
.E29 MNOTE 5,'* * * IEIDTS290 TOO MANY MEMBERS SPECIFIED FOR &PDS'
&SGQUITB SETB 1
         AGO   .PDS30
.E30 MNOTE 5,'* * * IEIDTS300 &N TH APPENDAGE NAME FOR &APP IS INVALID'
&SGQUITB SETB 1
         AGO   .RES
.E305 MNOTE 5,'* * * IEIDTS305 &APP APPENDAGE MUST RESIDE IN LPALIB OR *
               SVCLIB'
&SGQUITB SETB 1
         AGO   .RES
.E31 MNOTE 5,'* * * IEIDTS310 TOO MANY APPENDAGES SPECIFIED FOR &APP'
&SGQUITB SETB 1
         AGO .RES
.E32 MNOTE 5,'* * * IEIDTS320 RESIDNT KEYWORD INVALID FOR &LIB'
         AGO   .QUIT
.E33 MNOTE 5,'* * * IEIDTS330 TOO MANY RESIDNT MEMBERS SPECIFIED'
         AGO   .QUIT
.E34 MNOTE 5,'* * * IEIDTS340 PDS KEYWORD REQUIRED FOR RESIDNT KEYWORD'
&SGQUITB SETB 1
         AGO   .DS63
.E35 MNOTE 5,'* * * IEIDTS350 PDS KEYWORD REQUIRED FOR ALL APPENDAGES '
&SGQUITB SETB 1
         AGO   .PDS18
.E36 MNOTE 5,'* * * IEIDTS136 SWAPDSN SPECIFIED MORE THAN 10 TIMES'    *
                                                                Z40WSVN
         AGO   .QUIT                                            Z40WSVN
.E37 MNOTE 5,'* * * IEIDTS137 DATASET NAME &SWAPDSN IS INVALID' Z40WSVN
&SGQUITB SETB 1                                                 Z40WSVN
         AGO   .SW1255                                          Z40WSVN
.E38 MNOTE 5,'* * * IEIDTS138 VOL MUST BE SPECIFIED FOR SWAPDSN IF SPACX
               E IS SPECIFIED'                                  Z40WSVN
&SGQUITB SETB 1                                                 Z40WSVN
         AGO   .SW1257                                          Z40WSVN
.E39 MNOTE 5,'* * * IEIDTS139 VOL PARAMETER INCORRECTLY SPECIFIED'
&SGQUITB SETB 1                                                 Z40WSVN
         AGO   .SW1257                                          Z40WSVN
.E40 MNOTE 5,'* * * IEIDTS140 VOLUME SERIAL TOO LONG'           Z40WSVN
&SGQUITB SETB 1                                                 Z40WSVN
         AGO   .SW1256                                          Z40WSVN
.E41 MNOTE 5,'* * * IEIDTS250 INVALID DEVICE TYPE &VOL(2)'      Z40WSVN
&SGQUITB SETB 1                                                 Z40WSVN
         AGO   .SW1257                                          Z40WSVN
.E42 MNOTE 5,'* * * IEIDTS111 INCORRECT FORMAT/UNITS ON SPACE OPERAND'
.*       AGO   .QUIT            REMOVE .* FOR NEW MESSAGE       Z40WSVN
.QUIT ANOP
&SGQUITB SETB 1
.END     MEND
