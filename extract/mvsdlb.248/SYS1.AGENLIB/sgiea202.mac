         MACRO
         SGIEA202
.*** START OF SPECIFICATIONS ******************************************
.*                                                            @ZA51483*
.* MACRO NAME = SGIEA202                                      @ZA51483*
.*                                                            @ZA51483*
.* DESCRIPTIVE NAME = IEECUCM BUILD MACRO                     @ZA51483*
.*                                                            @ZA51483*
.* STATUS =   OS/VS2 EBB1102                                  @ZA51483*
.*                                                            @ZA51483*
.* FUNCTION = BUILDS A JOBSTEP FOR STAGE 2 TO BUILD THE UNIT  @ZA51483*
.*            CONTROL MODULE (UCM) BASE AND ITS EXTENSIONS    @ZA51483*
.*            FOR MULTIPLE CONSOLE SUPPORT.                   @ZA51483*
.*                                                            @ZA51483*
.* OPERATION = THIS MACRO SETS UP TABLES OF PARAMETERS FOR    @ZA51483*
.*             ALL CONSOLES AS DEFINED BY THE CONSOLE,        @ZA51483*
.*             IODEVICE, AND SCHEDULR MACROS.  THEN, IT       @ZA51483*
.*             BUILDS A STAGE 2 JOBSTEP TO ASSEMBLE THE UCM   @ZA51483*
.*             AND ITS EXTENSIONS.                            @ZA51483*
.*                                                            @ZA51483*
.* NOTES = THE IEEDUCM MACRO IS BUILT ONCE FOR 50 OR FEWER    @ZA51483*
.*         CONSOLES, TWICE FOR MORE THAN 50 CONSOLES.  THIS   @ZA51483*
.*         IS DUE TO THE 255-CHARACTER LIMIT ON EACH PARA-    @ZA51483*
.*         METER LIST ON THAT MACRO.                          @ZA51483*
.*                                                            @ZA51483*
.* MODULE TYPE = MACRO                                        @ZA51483*
.*                                                            @ZA51483*
.*   PROCESSOR = OS/VS2 ASSEMBLER                             @ZA51483*
.*                                                            @ZA51483*
.*   MODULE SIZE = N/A                                        @ZA51483*
.*                                                            @ZA51483*
.*   ATTRIBUTES = N/A                                         @ZA51483*
.*                                                            @ZA51483*
.* ENTRY POINT = INVOKED BY THE GENERATE MACRO                @ZA51483*
.*                                                            @ZA51483*
.* INPUT = THE FOLLOWING GLOBAL VARIABLES ARE USED:           @ZA51483*
.*                                                            @ZA51483*
.*       NAME         FUNCTION                                @ZA51483*
.* ----------------   --------                                @ZA51483*
.*                                                            @ZA51483*
.* &SGSCHDB(36)       IF ON, SYSLOG IS TO BE USED AS HARDCOPY @ZA51483*
.*                                                            @ZA51483*
.* &SGSCHDB(37)       IF ON, HARDCPY=(,CMDS) WAS SPECIFIED    @ZA51483*
.*                                                            @ZA51483*
.* &SGSCHDB(42)       IF ON, HARDCPY=(,INCMDS) WAS SPECIFIED  @ZA51483*
.*                                                            @ZA51483*
.* &SGSCHDB(43)       IF ON, HARDCPY=(,STCMDS) WAS SPECIFIED  @ZA51483*
.*                                                            @ZA51483*
.* &SGSCHDC(1)        MASTER CONSOLE INPUT/OUTPUT ADDRESSES   @ZA51483*
.*                                                            @ZA51483*
.* &SGSCHDC(2)        ALTERNATE MASTER CONSOLE INPUT/OUTPUT   @ZA51483*
.*                    ADDRESS                                 @ZA51483*
.*                                                            @ZA51483*
.* &SGSCHDC(14)       ADDRESS OF HARDCOPY LOG IF NOT SYSLOG   @ZA51483*
.*                                                            @ZA51483*
.* &SGSCHDC(16)       INTEGRATED OPERATOR'S CONSOLE ADDRESS   @ZA51483*
.*                    FOR MASTER CONSOLE                      @ZA51483*
.*                                                            @ZA51483*
.* &SGSCNCC(1-98)     SECONDARY CONS INPUT/OUTPUT ADDRESSES   @ZA51483*
.*                                                            @ZA51483*
.* &SGSCSDB(1-98)     IF ON, CORRESPONDING CONSOLE IS STATUS  @ZA51483*
.*                    DISPLAY                                 @ZA51483*
.*                                                            @ZA51483*
.* &SGSCMSB(1-98)     IF ON, CORRESPONDING CONSOLE IS MESSAGE @ZA51483*
.*                    STREAM                                  @ZA51483*
.*                                                            @ZA51483*
.* &SGSCNYA(1)        NUMBER OF SECONDARY CONSOLES DEFINED    @ZA51483*
.*                                                            @ZA51483*
.* &SGSCNAC(1-98)     ALTERNATE SECONDARY CONS INPUT/OUTPUT   @ZA51483*
.*                    ADDRESSES                               @ZA51483*
.*                                                            @ZA51483*
.* &SGDTXXB(1-1917)   WHERE XX=04-08 - IF ON, DEVICE IS IN A  @ZA51483*
.*                    CLASS ELIGIBLE FOR CONSOLES             @ZA51483*
.*                                                            @ZA51483*
.* &SGDUXXB(1-1917)   WHERE XX=01-13 - DENOTES DEVICE TYPE    @ZA51483*
.*                    OF 'OLD' DEVICE WITHIN CLASS            @ZA51483*
.*                                                            @ZA51483*
.* &SGDMXXB(1-1917)   WHERE XX=MODEL NUMBER OF DEVICE - IF    @ZA51483*
.*                    ON, THIS IS MODEL NUMBER OF 'OLD'       @ZA51483*
.*                    DEVICE                                  @ZA51483*
.*                                                            @ZA51483*
.* &SGSIOCC(1-98)     INTEGRATED OPERATOR'S CONSOLE ADDRESS   @ZA51483*
.*                    FOR SECONDARY CONSOLE                   @ZA51483*
.*                                                            @ZA51483*
.* &SGSCHRB(3-16)     ROUTING CODES SPECIFIED FOR MASTER      @ZA51483*
.*                    CONSOLE (1 & 2 ARE FORCED)              @ZA51483*
.*                                                            @ZA51483*
.* &SGSCHOB(1-16)     ROUTING CODES ASSIGNED FOR MESSAGES     @ZA51483*
.*                    THAT DO NOT INCLUDE ROUTING AND DE-     @ZA51483*
.*                    SCRIPTOR CODES                          @ZA51483*
.*                                                            @ZA51483*
.* &SGSCHHB(1-16)     ROUTING CODES TO BE WRITTEN TO HARDCOPY @ZA51483*
.*                    LOG                                     @ZA51483*
.*                                                            @ZA51483*
.* &SGRTXXB(1-98)     WHERE XX=01-16 - ROUTING CODES SPECI-   @ZA51483*
.*                    FIED FOR SECONDARY CONSOLES             @ZA51483*
.*                                                            @ZA51483*
.* &SGCMDXB(1-98)     WHERE X=1-4 - COMMAND GROUPS SPECIFIED  @ZA51483*
.*                    FOR SECONDARY CONSOLES                  @ZA51483*
.*                                                            @ZA51483*
.* OUTPUT = A STAGE 2 JOBSTEP IS BUILT TO INVOKE MACROS       @ZA51483*
.*          IEEDUCM (ONCE FOR 1-50 CONSOLES, A SECOND TIME    @ZA51483*
.*          FOR 51-99 CONSOLES) AND IEECUCM.                  @ZA51483*
.*                                                            @ZA51483*
.*          &SGCTRLC(6) IS SET EQUAL TO 'IEECVUCM'.           @ZA51483*
.*                                                            @ZA51483*
.*          &SGSCHDB(13) IS SET TO '1'B IF A 2740 WAS SPECI-  @ZA51483*
.*          FIED AS A CONSOLE.                                @ZA51483*
.*                                                            @ZA51483*
.* EXIT NORMAL = N/A                                          @ZA51483*
.*                                                            @ZA51483*
.* EXIT ERROR = N/A                                           @ZA51483*
.*                                                            @ZA51483*
.* EXTERNAL REFERENCES = N/A                                  @ZA51483*
.*                                                            @ZA51483*
.* TABLES = &AUTH    - CONTAINS THE COMMAND AUTHORITY FOR     @ZA51483*
.*                     EACH CONSOLE, TRANSLATED TO ONE HEX    @ZA51483*
.*                     CHARACTER, I.E. THE VALUE IN &AUTH     @ZA51483*
.*                     WILL BE 'A' IF A CONSOLE HAS AUTHORITY @ZA51483*
.*                     TO ISSUE COMMANDS IN GROUPS 1 AND 3.   @ZA51483*
.*                                                            @ZA51483*
.*          &RTCODE1 - CONTAIN THE ROUTING CODES DESIGNATED   @ZA51483*
.*          &RTCODE2   FOR EACH CONSOLE, TRANSLATED TO HEX    @ZA51483*
.*          &RTCODE3   CHARACTERS, IN GROUPS OF FOUR.         @ZA51483*
.*          &RTCODE4                                          @ZA51483*
.*                                                            @ZA51483*
.*          &A       - CONTAINS THE ADDRESSES OF ALL CONSOLE  @ZA51483*
.*                     DEVICES.  FOR COMPOSITE CONSOLES,      @ZA51483*
.*                     THERE ARE TWO ENTRIES IN THIS TABLE.   @ZA51483*
.*                                                            @ZA51483*
.*          &B       - CONTAINS A 2-CHARACTER PROCESSOR NAME  @ZA51483*
.*                     MODIFIER FOR EACH CONSOLE.  XX WOULD   @ZA51483*
.*                     RESULT IN IGCXX07B AS THE PROCESSOR    @ZA51483*
.*                     MODULE NAME.  ITEMS ARE SET AS FOLLOWS @ZA51483*
.*                                                            @ZA51483*
.*                       XX   DEVICE TYPES                    @ZA51483*
.*                       --   ------------                    @ZA51483*
.*                                                            @ZA51483*
.*                       00   1052, 3210, 3213, 3215, JES     @ZA51483*
.*                       01   1403, 1443, 3211                @ZA51483*
.*                       02   2501, 2520, 2540R, 3505, 3525   @ZA51483*
.*                       51   2250, 2260, 3036, 3066, 3158,   @ZA51483*
.*                            3277                            @ZA51483*
.*                       5W   3284, 3286                      @ZA51483*
.*                       XX   2740                            @ZA51483*
.*                                                            @ZA51483*
.*          &C       - CONTAINS A 4-CHARACTER INITIAL ATTRI-  @ZA51483*
.*                     BUTE FOR EACH CONSOLE DEVICE, GIVEN IN @ZA51483*
.*                     THE FORM 'WAXA'.  AN 'N' IN ANY POSI-  @ZA51483*
.*                     TION IMPLIES LACK OF THAT ATTRIBUTE.   @ZA51483*
.*                                                            @ZA51483*
.*                       CHAR  MEANING                        @ZA51483*
.*                       ----  -------                        @ZA51483*
.*                        W    DEVICE SUPPORTS WTO            @ZA51483*
.*                        A    DEVICE SUPPORTS ATTENTION      @ZA51483*
.*                        X    DEVICE IS SUBJECT TO EXTERNAL  @ZA51483*
.*                             INTERRUPT                      @ZA51483*
.*                        A    DEVICE ACTIVE AT IPL           @ZA51483*
.*                                                            @ZA51483*
.*          &E       - CONTAINS A CHARACTER INDICATING CER-   @ZA51483*
.*                     TAIN DEVICE TYPES, SET AS FOLLOWS:     @ZA51483*
.*                                                            @ZA51483*
.*                       CHAR  DEVICE TYPES                   @ZA51483*
.*                       ----  ------------                   @ZA51483*
.*                                                            @ZA51483*
.*                        A    3066                           @ZA51483*
.*                        B    2250                           @ZA51483*
.*                        C    2260                           @ZA51483*
.*                        D    3277-1                         @ZA51483*
.*                        E    3036, 3158, 3277-2             @ZA51483*
.*                        Y    JES (DUMMY) CONSOLE            @ZA51483*
.*                        Z    3213                           @ZA51483*
.*                        0    ALL OTHERS                     @ZA51483*
.*                                                            @ZA51483*
.*          &G       - CONTAINS A CHARACTER INDICATING EACH   @ZA51483*
.*                     CONSOLE'S INPUT/OUTPUT CAPABILITY, SET @ZA51483*
.*                     AS FOLLOWS:                            @ZA51483*
.*                                                            @ZA51483*
.*                       CHAR  CAPABILITY                     @ZA51483*
.*                       ----  ----------                     @ZA51483*
.*                                                            @ZA51483*
.*                        F    FULL CAPABILITY                @ZA51483*
.*                        M    MESSAGE STREAM                 @ZA51483*
.*                        S    STATUS DISPLAY                 @ZA51483*
.*                                                            @ZA51483*
.*          &H       - FOR EACH CONSOLE, CONTAINS A '1' IF    @ZA51483*
.*                     THE DEVICE IS AN INTEGRATED OPERATOR'S @ZA51483*
.*                     CONSOLE, '0' OTHERWISE.                @ZA51483*
.*                                                            @ZA51483*
.*          &ATR     - USED TO BUILD THE LAST 2 CHARACTERS OF @ZA51483*
.*                     EACH ELEMENT IN &C.  IT IS ALWAYS SET  @ZA51483*
.*                     TO 'XN'.                               @ZA51483*
.*                                                            @ZA51483*
.*          &COMP    - CONTAINS, IN EACH PAIR OF ELEMENTS,    @ZA51483*
.*                     THE ADDRESSES OF THE OUTPUT AND INPUT  @ZA51483*
.*                     HALVES OF COMPOSITE CONSOLES, 'FFF' IF @ZA51483*
.*                     THE CONSOLE IS NOT A COMPOSITE.  IT IS @ZA51483*
.*                     USED TO BUILD THE COMPCN1 PARAMETER OF @ZA51483*
.*                     IEEDUCM MACROS.                        @ZA51483*
.*                                                            @ZA51483*
.*          &ALT     - CONTAINS, IN EACH PAIR OF ELEMENTS,    @ZA51483*
.*                     THE ADDRESS OF THE ALTERNATE CONSOLE   @ZA51483*
.*                     FOR EACH CONSOLE, OR 'FFF' IF THERE IS @ZA51483*
.*                     NO ALTERNATE.  IT IS USED TO BUILD THE @ZA51483*
.*                     ALTCON1 PARAMETER OF IEEDUCM MACROS.   @ZA51483*
.*                                                            @ZA51483*
.*          &COMPALT - CONTAINS, IN EACH PAIR OF ELEMENTS,    @ZA51483*
.*                     THE ADDRESS OF THE OUTPUT HALF OF AN   @ZA51483*
.*                     ALTERNATE CONSOLE THAT IS ALSO A COM-  @ZA51483*
.*                     POSITE CONSOLE.  IT IS USED TO BUILD   @ZA51483*
.*                     THE ALTCOM1 PARAMETER OF IEEDUCM       @ZA51483*
.*                     MACROS.                                @ZA51483*
.*                                                            @ZA51483*
.* VARIABLES = THE FOLLOWING LOCAL VARIABLES ARE USED:        @ZA51483*
.*                                                            @ZA51483*
.*   NAME     FUNCTION                                        @ZA51483*
.* --------   --------                                        @ZA51483*
.*                                                            @ZA51483*
.* &M2        INDEX INTO CONSOLE PARAMETER TABLES             @ZA51483*
.*                                                            @ZA51483*
.* &MASTCON   MASTER CONSOLE ADDRESS                          @ZA51483*
.*                                                            @ZA51483*
.* &OLDW1     THE HEX CHARACTERS INDICATING WHICH ROUTING     @ZA51483*
.* &OLDW2     CODES ARE TO BE ASSIGNED TO MESSAGES THAT DO    @ZA51483*
.* &OLDW3     NOT INCLUDE ROUTING AND DESCRIPTOR CODES.       @ZA51483*
.* &OLDW4                                                     @ZA51483*
.*                                                            @ZA51483*
.* &HARDM1    THE HEX CHARACTERS INDICATING WHICH ROUTING     @ZA51483*
.* &HARDM2    CODES ARE TO BE WRITTEN TO THE HARDCOPY LOG.    @ZA51483*
.* &HARDM3                                                    @ZA51483*
.* &HARDM4                                                    @ZA51483*
.*                                                            @ZA51483*
.* &ROUTM1    THE HEX CHARACTERS INDICATING WHICH ROUTING     @ZA51483*
.* &ROUTM2    CODES ARE TO BE ASSIGNED TO THE MASTER CONSOLE. @ZA51483*
.* &ROUTM3                                                    @ZA51483*
.* &ROUTM4                                                    @ZA51483*
.*                                                            @ZA51483*
.* &M         INDEX INTO CONSOLE PARAMETER TABLES             @ZA51483*
.*                                                            @ZA51483*
.* &TO        RETURN POINT FOR 'SUBROUTINE' CALLS WITHIN      @ZA51483*
.*            THIS MACRO                                      @ZA51483*
.*                                                            @ZA51483*
.* &THING     CHARACTER REPRESENTATION OF BIT STRINGS USED    @ZA51483*
.*            IN CONVERSION TO HEX                            @ZA51483*
.*                                                            @ZA51483*
.* &WHO       ADDRESS OF HARDCOPY CONSOLE OR 'SYSLOG'         @ZA51483*
.*                                                            @ZA51483*
.* &CMDS      THE SECOND SUBPARAMETER OF THE HARDCPY PARA-    @ZA51483*
.*            METER SPECIFIED ON THE SCHEDULR MACRO.  IT      @ZA51483*
.*            MAY BE SET TO 'NOCMDS', 'CMDS', 'INCMDS', OR    @ZA51483*
.*            'STCMDS'.                                       @ZA51483*
.*                                                            @ZA51483*
.* &HCPY      UNUSED                                          @ZA51483*
.*                                                            @ZA51483*
.* &N         INDEX INTO GLOBAL CONSOLE PARAMETER TABLES      @ZA51483*
.*                                                            @ZA51483*
.* &U         DEVICE ADDRESS IN ARITHMETIC FORM               @ZA51483*
.*                                                            @ZA51483*
.* &CTL       LAST INDEX OF GLOBAL CONSOLE PARAMETER TABLES   @ZA51483*
.*                                                            @ZA51483*
.* &STOP      INDEX OF LAST PARAMETER IN IEEDUCM MACRO        @ZA51483*
.*            CURRENTLY BEING BUILT                           @ZA51483*
.*                                                            @ZA51483*
.* &LIMIT     NUMBER OF SUBPARAMETERS PER IEEDUCM MACRO       @ZA51483*
.*                                                            @ZA51483*
.* &W         INDEX OF FIRST PARAMETER IN IEEDUCM MACRO       @ZA51483*
.*            CURRENTLY BEING BUILT                           @ZA51483*
.*                                                            @ZA51483*
.* &Y         INDEX INTO CERTAIN LOCAL CONSOLE PARAMETER      @ZA51483*
.*            TABLES.  SET TO &M-1 WHEN USED.                 @ZA51483*
.*                                                            @ZA51483*
.*   THE FOLLOWING GLOBAL VARIABLE IS USED:                   @ZA51483*
.*                                                            @ZA51483*
.*   NAME     FUNCTION                                        @ZA51483*
.* --------   --------                                        @ZA51483*
.*                                                            @ZA51483*
.* &HEX       CONTAINS HEX NUMBERS AS OUTPUT OF THE CONVERT   @ZA51483*
.*            MACRO                                           @ZA51483*
.*                                                            @ZA51483*
.* MACROS = SGGBLPAK, SGASMPAK, CONVERT, IOCHECK              @ZA51483*
.*                                                            @ZA51483*
.* CHANGE ACTIVITY =                                          @ZA51483*
.*       12/01/75                                             @ZA07191*
.*       12/01/76                                             @ZA15722*
.*       03/21/77  MVS 3033 PROCESSOR SUPPORT(SCP)            @G51APSS*
.*       09/12/78  ADD COMMA AFTER ROUTCD 51 CONSOLES         @ZA35283*
.*       10/12/79  ALT CONSOLE FOR CONSOLE 51 WILL NOT AUTO-  @ZA41089*
.*                 MATICALLY BE THE SAME AS THE ALT CONSOLE   @ZA41089*
.*                 FOR MASTER WHEN 52 OR MORE CONSOLES ARE    @ZA41089*
.*                 GENERATED                                  @ZA41089*
.*       02/18/81  C(.PCOMP1) SO 51ST CONSOLE CAN FUNCTION AS @ZA51483*
.*                 A COMPOSITE. ZA51483 CHANGES NOT REQUIRED  @ZA51483*
.*                 FOR JBB1126 OR HIGHER LEVEL.               @ZA51483*
.*                                                            @ZA51483*
.* MESSAGES = MNOTE, SEVERITY 1 - 'INVALID CONSOLE XXX'       @ZA51483*
.*                                                            @ZA51483*
.* COMPLETION CODES = N/A                                     @ZA51483*
.*                                                            @ZA51483*
.*** END OF SPECIFICATIONS ********************************************
.*                                                             @ZA51483
.*                                                             @ZA51483
.**********************************************************************
.*                                                            @ZA51483*
.*       DEFINE THE GLOBAL AND LOCAL VARIABLES                @ZA51483*
.*                                                            @ZA51483*
.**********************************************************************
         COPY  SGGBLPAK
         LCLA  &M2                                                  MCS
         LCLC  &MASTCON
         LCLC  &AUTH(198),&OLDW1,&OLDW2,&OLDW3,&OLDW4
         LCLC  &HARDM1,&HARDM2,&HARDM3,&HARDM4
         LCLC  &ROUTM1,&ROUTM2,&ROUTM3,&ROUTM4
         LCLC  &RTCODE1(196),&RTCODE2(196)                       Y02038
         LCLC  &RTCODE3(196),&RTCODE4(196)                       Y02038
         LCLC  &A(198),&B(198),&C(198),&E(198),&G(198)           Y02038
         LCLA  &H(198)                                           Y02038
         LCLA  &M,&TO
         LCLC  &ATR(198)                                         Y02038
         LCLC  &THING,&WHO,&CMDS,&HCPY
         LCLC  &COMP(198),&ALT(198),&COMPALT(198)                Y02038
         LCLA  &N,&U
         LCLA  &CTL                                                MP65
         LCLA  &STOP,&LIMIT,&W                                   Y02038
         LCLA  &Y             FOR RTCODE AND AUTH 51 CONSOLES  @ZA07191
         ACTR  40000                                             Y02038
.**********************************************************************
.*                                                            @ZA51483*
.*       BUILD INITIAL INFORMATION FOR THE MASTER CONSOLE     @ZA51483*
.*                                                            @ZA51483*
.**********************************************************************
&A(1)    SETC  '&SGSCHDC(1)'(1,3)
&A(2)    SETC  '&SGSCHDC(1)'(4,3)
&G(1)    SETC  'F'
&G(2)    SETC  'F'
&M       SETA  1                                                    MCS
&ATR(1)  SETC  'XN'                                              R20916
&ATR(2)  SETC  'XN'                                              R20916
.RADICE1 ANOP                                                       MCS
.********** GET SECONDARY CONSOLES
         AIF   (&SGSCNYA(1) EQ 0).CTL
&N       SETA  &N+1                                                 MCS
&M       SETA  &M+2                                                 MCS
&A(&M)   SETC  '&SGSCNCC(&N)'(1,3)                                  MCS
&A(&M+1) SETC  '&SGSCNCC(&N)'(4,3)                                  MCS
         AIF   (&SGSCSDB(&N)).SDSGEN  CONSOLE IS STATUS DISPLAY
         AIF   (&SGSCMSB(&N)).MSTGEN  CONSOLE IS MESSAGE STREAM
&G(&M)   SETC  'F'
&G(&M+1) SETC  'F'
.CONTBA  ANOP
         AIF   (&SGSCNYA(1) NE &N).RADICE1
.CTL     ANOP
&CTL     SETA  &M+1
&N       SETA  1
         AGO   .RPYBUF
.SDSGEN  ANOP
&G(&M)   SETC  'S'
&G(&M+1) SETC  'S'
         AGO   .CONTBA
.MSTGEN  ANOP
&G(&M)   SETC  'M'
&G(&M+1) SETC  'M'
         AGO   .CONTBA
.RPYBUF  ANOP
.********      THIS SECTION SETS THE COMPOSITE CONSOLE        *********
&N       SETA  1
&M       SETA  0
.F1      AIF   ('&SGSCHDC(1)'(1,3) EQ '&SGSCHDC(1)'(4,3)).EQUAL
&COMP(1) SETC  '&SGSCHDC(1)'(4,3)
&COMP(2) SETC  '&SGSCHDC(1)'(1,3)
.TOPPER  AIF   (&N+2 GT &CTL).LEAVE
&N       SETA  &N+2
&M       SETA  &M+1                                                 MCS
.FOUND1  AIF   ('&SGSCNCC(&M)'(1,3) EQ '&SGSCNCC(&M)'(4,3)).EQUAL   MCS
         AIF   ('&SGSCNCC(&M)'(1,3) EQ 'FFF').EQUAL
&COMP(&N) SETC '&SGSCNCC(&M)'(4,3)
&COMP(&N+1)    SETC '&SGSCNCC(&M)'(1,3)
         AGO   .TOPPER
.EQUAL   ANOP                                                       MCS
&COMP(&N) SETC 'FFF'
&COMP(&N+1)    SETC 'FFF'
         AGO   .TOPPER
.LEAVE   ANOP
.********      THIS SECTION SETS THE ALTERNATE CONSOLE       **********
         AIF   ('&SGSCHDC(2)' EQ '').NOMORE1
&ALT(1)  SETC  '&SGSCHDC(2)'(1,3)
&ALT(2)  SETC  '&ALT(1)'
&N       SETA  0
&M       SETA  1
.INCR1   ANOP                                                       MCS
&N       SETA  &N+1
&M       SETA  &M+2
         AIF   ('&SGSCNAC(&N)' EQ '').ALT0
&ALT(&M)     SETC '&SGSCNAC(&N)'(4,3)
&ALT(&M+1)   SETC '&ALT(&M)'
.TEST    AIF   (&M+1 LT &CTL).INCR1
         AGO   .NOMORE1
.ALT0    ANOP
&ALT(&M) SETC  'FFF'
&ALT(&M+1)     SETC 'FFF'
         AGO   .TEST
.NOMORE1 ANOP
.********** SET ALTERNATE OUTPUT CONSOLES
         AIF   (&SGSCNYA(1) EQ 0).NOMORE2
&M       SETA    1
&N       SETA    0
         AIF   ('&SGSCHDC(2)'(1,3) EQ '&SGSCHDC(2)'(4,3)).AWAY
&COMPALT(1)    SETC '&SGSCHDC(2)'(4,3)
&COMPALT(2)  SETC '&COMPALT(1)'
.TESTAC  ANOP
&N       SETA  &N+1
&M       SETA  &M+2
         AIF   ('&SGSCNAC(&N)' EQ '').AWAY
         AIF   ('&SGSCNAC(&N)'(1,3) EQ 'FFF').AWAY
         AIF   ('&SGSCNAC(&N)'(1,3) NE '&SGSCNAC(&N)'(4,3)).COMPALT
.AWAY    ANOP
&COMPALT(&M) SETC 'FFF'
&COMPALT(&M+1) SETC 'FFF'
.TESTSTS AIF   (&M+1 LT &CTL).TESTAC
         AGO   .NOMORE2
.COMPALT ANOP
&COMPALT(&M)   SETC '&SGSCNAC(&N)'(4,3)
&COMPALT(&M+1) SETC '&COMPALT(&M)'
         AGO   .TESTSTS
.******** BLANK OUT 2ND HALF OF NON-COMPOSITES *********
.NOMORE2  ANOP
&N       SETA  1
.DUMY    ANOP                                                      MP65
         AIF   ('&A(&N)' NE 'FFF').INCR     'FFF'=NO CONSOLE SPECIFIED
&A(&N)   SETC  ''                                                  MP65
.INCR    ANOP                                                      MP65
&N       SETA  &N+1                                                MP65
         AIF   (&N LE &CTL).DUMY                                   MP65
&N       SETA  1                                                   MP65
         AGO   .OVER1
.MCS2    ANOP
&N       SETA  &N+2
&ATR(&N) SETC  'XN'
&ATR(&N+1) SETC 'XN'
.OVER1   ANOP                                                       MCS
         AIF   ('&A(&N)' NE '&A(&N+1)').OK                          MCS
&A(&N+1) SETC  ''                                                   MCS
.OK      ANOP                                                       MCS
         AIF   (&N NE &CTL-1).MCS2
&N       SETA  1
.******** SET ATTRIBUTES ************
.LP      ANOP                                                      MP65
         AIF   ('&A(&N)' EQ '').MPEND
         AIF   ('&A(&N)' EQ 'JES').JES3                          Y02038
         CONVERT TO=HEX,VALUE=&A(&N),DIGITS=3
&U       SETA  &HEX
         IOCHECK LOOKFOR=&U
&HEX     SETA  &SGDASPA(&HEX)                                  @ZA15722
&E(&N)   SETC  '0'                                                19029
         AIF   (&SGDT04B(&HEX)).ACMP                               MP65
         AIF   (&SGDT05B(&HEX)).ADMP                               MP65
         AIF   (&SGDT06B(&HEX)).APMP                               MP65
         AIF   (&SGDT07B(&HEX)).ARMP                               MP65
         AIF   (&SGDT08B(&HEX)).AXMP                                MCS
         MNOTE 1,'INVALID CONSOLE &A(&N) '                         MP65
         MEXIT                                                     MP65
.ACMP    ANOP                                                      MP65
.**********************************************************************
.*                                                            @ZA51483*
.*       SET ATTRIBUTES FOR PRINTER/KEYBOARD CONSOLE          @ZA51483*
.*                                                            @ZA51483*
.**********************************************************************
&B(&N)   SETC  '00'                                                MP65
         AIF   ((&N+1)/2 EQ &N/2).MPWN                           A28263
         AIF   ('&A(&N+1)' EQ '').MPWA                             MP65
.MPNA    ANOP                     COMPOSITE READER                 MP65
&C(&N)   SETC  'NA&ATR(&N)'                                        MP65
         AGO   .MPEND                                              MP65
.MPWN    ANOP                     COMPOSITE WRITER                 MP65
&C(&N)   SETC  'WN&ATR(&N)'                                        MP65
         AGO   .MPEND                                              MP65
.MPWA    ANOP                     CONSOLE 1052                     MP65
&C(&N)   SETC  'WA&ATR(&N)'                                        MP65
         AGO   .MPEND                                              MP65
.ADMP    ANOP  GRAPHICS,MODEL1,W/ALKYB,LIGHTPEN,BUFFER4K/8K       19029
.**********************************************************************
.*                                                            @ZA51483*
.*       SET ATTRIBUTES FOR GRAPHICS CONSOLE                  @ZA51483*
.*                                                            @ZA51483*
.**********************************************************************
         AIF   (&SGDU07B(&HEX) OR &SGDU09B(&HEX)).PRINT
&B(&N)   SETC  '51'                                               19029
.CONTINA ANOP
         AIF   ((&N+1)/2 EQ &N/2).GRAPHWN
         AIF   ('&A(&N+1)' EQ '').GRAPHWA
.*                                COMPOSITE READER
&C(&N)   SETC  'NA&ATR(&N)'
         AGO   .CHK5450
.GRAPHWN ANOP
&C(&N)   SETC  'WN&ATR(&N)'
         AGO   .CHK5450
.GRAPHWA ANOP
&C(&N)   SETC  'WA&ATR(&N)'                                       19029
.CHK5450 ANOP
.**********************************************************************
.*                                                            @ZA51483*
.*       DETERMINE DEVICE TYPE AND SET THE PARAMETER          @ZA51483*
.*       TO BE PASSED TO THE IEEDUCM MACRO                    @ZA51483*
.*                                                            @ZA51483*
.**********************************************************************
         AIF   (&SGDU02B(&HEX)).IS2260                            19029
         AIF   (&SGDU06B(&HEX)).IS3066
         AIF   (&SGDU08B(&HEX)).IS3277
         AIF   (&SGDU10B(&HEX)).ISANR2                           Y01122
         AIF   (&SGDU13B(&HEX)).ISANR2  BR IF A 3036 DEVICE    @G51APSS
.*       MUST  BE  2250                                           19029
&E(&N)   SETC  'B'                                                19029
         AGO   .MPEND                                              MP65
.IS3066  ANOP
&E(&N)   SETC  'A'
         AGO   .MPEND
.IS2260  ANOP                                                     19029
&E(&N)   SETC  'C'                                                19029
         AGO   .MPEND                                               MCS
.IS3277  ANOP
         AIF   (&SGDM02B(&HEX)).ISANR2
&E(&N)   SETC  'D'                  3277 MOD 1 IDENT
         AGO   .MPEND
.ISANR2  ANOP
&E(&N)   SETC  'E'
         AGO   .MPEND
.PRINT   ANOP
&B(&N)   SETC  '5W'
&C(&N)   SETC  'WN&ATR(&N)'
         AGO   .MPEND
.APMP    ANOP                     COMPOSITE WRITER                 MP65
.**********************************************************************
.*                                                            @ZA51483*
.*       SET ATTRIBUTES FOR PRINTERS                          @ZA51483*
.*                                                            @ZA51483*
.**********************************************************************
.* SPECIAL ATTRIBUTES SET FOR 3213.                             YM03463
         AIF   (&SGDU08B(&HEX) EQ 0).NOT3213                    YM03463
&B(&N)   SETC  '00'                                             YM03463
&C(&N)   SETC  'WNXN'                                           YM03463
&E(&N)   SETC  'Z'                                              YM03463
         AGO   .MPEND                                           YM03463
.NOT3213 ANOP                                                   YM03463
&B(&N)   SETC  '01'                                                MP65
&C(&N)   SETC  'WN&ATR(&N)'                                        MP65
         AGO   .MPEND                                              MP65
.ARMP    ANOP                     COMPOSITE READER                 MP65
.**********************************************************************
.*                                                            @ZA51483*
.*       SET ATTRIBUTES FOR CARD READERS                      @ZA51483*
.*                                                            @ZA51483*
.**********************************************************************
&B(&N)   SETC  '02'                                                MP65
&C(&N)   SETC  'NA&ATR(&N)'                                        MP65
         AGO   .MPEND
.AXMP    ANOP
.**********************************************************************
.*                                                            @ZA51483*
.*       SET ATTRIBUTES FOR TERMINALS                         @ZA51483*
.*                                                            @ZA51483*
.**********************************************************************
&B(&N)   SETC  'XX'
&C(&N)   SETC  'WA&ATR(&N)'
&SGSCHDB(13)   SETB 1
         AIF   ((&N+1)/2 EQ &N/2).C2740WN
         AIF   ('&A(&N+1)' EQ '').C2740WA
.*                                COMPOSITE READER
&C(&N)   SETC  'NA&ATR(&N)'
         AGO   .MPEND
.C2740WN ANOP
&C(&N)   SETC  'WN&ATR(&N)'
         AGO   .MPEND
.C2740WA ANOP
&C(&N)   SETC  'WA&ATR(&N)'
         AGO   .MPEND                                            Y02038
.JES3    ANOP                                                    Y02038
.**********************************************************************
.*                                                            @ZA51483*
.*       SET ATTRIBUTES FOR JES (DUMMY) CONSOLES              @ZA51483*
.*                                                            @ZA51483*
.**********************************************************************
&B(&N)   SETC  '00'                                              Y02038
&C(&N)   SETC  'WAXN'                                            Y02038
&E(&N)   SETC  'Y'                                               Y02038
.MPEND   ANOP                                                      MP65
&N       SETA  &N+1                                                MP65
         AIF   (&N LE &CTL).LP                                     MP65
&N       SETA  1                                                   MP65
.******** SQUEEZE OUT BLANK CONSOLES
.LOOP    ANOP                                                      MP65
         AIF   ('&A(&N)' EQ '').SCAT                               MP65
&N       SETA  &N+1                                                MP65
         AIF   (&N LE &CTL).LOOP                                   MP65
         AGO   .MPOUT                                              MP65
.SCAT    ANOP                                                      MP65
&M       SETA  &N-1
.MCS3    ANOP
&M       SETA  &M+1
         AIF   (&M EQ &CTL AND '&A(&M)' EQ '' AND &M EQ &N).DONIT   MCS
&A(&M)   SETC  '&A(&M+1)'
&B(&M)   SETC  '&B(&M+1)'
&C(&M)   SETC  '&C(&M+1)'
&E(&M)   SETC  '&E(&M+1)'                                         19029
&G(&M)   SETC  '&G(&M+1)'
&ALT(&M) SETC  '&ALT(&M+1)'
&COMP(&M)      SETC '&COMP(&M+1)'
&COMPALT(&M)   SETC '&COMPALT(&M+1)'
         AIF   (&M+1 LT &CTL).MCS3
&CTL     SETA  &CTL-1
         AGO   .LOOP
.DONIT   ANOP
&CTL     SETA  &M-1
.MPOUT   ANOP
.**********************************************************************
.*                                                            @ZA51483*
.*       INDICATE WHETHER EACH CONSOLE IS AN INTEGRATED       @ZA51483*
.*       OPERATOR CONSOLE OR NOT.  &H EQUALS 1 IF IT IS.      @ZA51483*
.*                                                            @ZA51483*
.**********************************************************************
&N       SETA  2                                                 R20893
&M       SETA  1                                                 R20893
         AIF   ('&A(1)' NE '&SGSCHDC(16)').CHKALT                R20893
&H(1)    SETA  1                                                 R20893
.CHKALT  AIF   ('&A(&N)' NE '&SGSIOCC(&M)').NEXTIOC              R20893
&H(&N)   SETA  1                                                 R20893
         AGO   .NEXTONE                                          R20893
.NEXTIOC ANOP                                                    R20893
&M       SETA  &M+1                                              R20893
         AIF   (&M LE 98).CHKALT                                 Y02038
.NEXTONE ANOP                                                    R20893
&M       SETA  1                                                 R20893
&N       SETA  &N+1                                              R20893
         AIF   (&N LE &CTL).CHKALT                               R20893
.**********************************************************************
.*                                                            @ZA51483*
.*       PUNCH JCL AND CSECT NAME                             @ZA51483*
.*                                                            @ZA51483*
.**********************************************************************
&SGCTRLC(6) SETC 'IEECVUCM'
         COPY  SGASMPAK
         PUNCH 'IEEUCMC CSECT'
.**********************************************************************
.*                                                            @ZA51483*
.*       SET ROUTING CODES FOR THE MASTER CONSOLE             @ZA51483*
.*                                                            @ZA51483*
.**********************************************************************
&TO      SETA  1
&THING   SETC  '11&SGSCHRB(3).&SGSCHRB(4)'                          MCS
         AGO   .COMBINE
.BACK1   ANOP
&ROUTM1  SETC  '&THING'
&TO      SETA  2
&THING   SETC  '&SGSCHRB(5).&SGSCHRB(6).&SGSCHRB(7).&SGSCHRB(8)'
         AGO   .COMBINE
.BACK2   ANOP
&ROUTM2  SETC  '&THING'
&TO      SETA  3
&THING   SETC  '&SGSCHRB(9).&SGSCHRB(10).&SGSCHRB(11).&SGSCHRB(12)'
         AGO   .COMBINE
.BACK3   ANOP
&ROUTM3  SETC  '&THING'
&TO      SETA  4
&THING   SETC  '&SGSCHRB(13).&SGSCHRB(14).&SGSCHRB(15).&SGSCHRB(16)'
         AGO   .COMBINE
.BACK4   ANOP
&ROUTM4  SETC  '&THING'
.**********************************************************************
.*                                                            @ZA51483*
.*       SET ROUTING CODES FOR "OLD" WTOR'S                   @ZA51483*
.*                                                            @ZA51483*
.**********************************************************************
&TO      SETA  5
&THING   SETC  '&SGSCHOB(1).&SGSCHOB(2).&SGSCHOB(3).&SGSCHOB(4)'
         AGO   .COMBINE
.BACK5   ANOP
&OLDW1   SETC  '&THING'
&TO      SETA  6
&THING   SETC  '&SGSCHOB(5).&SGSCHOB(6).&SGSCHOB(7).&SGSCHOB(8)'
         AGO   .COMBINE
.BACK6   ANOP
&OLDW2   SETC  '&THING'
&TO      SETA  7
&THING   SETC  '&SGSCHOB(9).&SGSCHOB(10).&SGSCHOB(11).&SGSCHOB(12)'
         AGO   .COMBINE
.BACK7   ANOP
&OLDW3   SETC  '&THING'
&TO      SETA  8
&THING   SETC  '&SGSCHOB(13).&SGSCHOB(14).&SGSCHOB(15).&SGSCHOB(16)'
         AGO   .COMBINE
.BACK8   ANOP
&OLDW4   SETC  '&THING'
.**********************************************************************
.*                                                            @ZA51483*
.*       SET ROUTING CODES FOR THE HARDCOPY LOG               @ZA51483*
.*                                                            @ZA51483*
.**********************************************************************
&TO      SETA  9
&THING   SETC  '&SGSCHHB(1).&SGSCHHB(2).&SGSCHHB(3).&SGSCHHB(4)'
         AGO   .COMBINE
.BACK9   ANOP
&HARDM1  SETC  '&THING'
&TO      SETA  10
&THING   SETC  '&SGSCHHB(5).&SGSCHHB(6).&SGSCHHB(7).&SGSCHHB(8)'
         AGO   .COMBINE
.BACK10  ANOP
&HARDM2  SETC  '&THING'
&TO      SETA  11
&THING   SETC  '&SGSCHHB(9).&SGSCHHB(10).&SGSCHHB(11).&SGSCHHB(12)'
         AGO   .COMBINE
.BACK11  ANOP
&HARDM3  SETC  '&THING'
&TO      SETA  12
&THING   SETC  '&SGSCHHB(13).&SGSCHHB(14).&SGSCHHB(15).&SGSCHHB(16)'
         AGO   .COMBINE
.BACK12  ANOP
&HARDM4  SETC  '&THING'
.**********************************************************************
.*                                                            @ZA51483*
.*       SET ROUTING CODES AND COMMAND AUTHORITY FOR          @ZA51483*
.*       SECONDARY CONSOLES                                   @ZA51483*
.*                                                            @ZA51483*
.**********************************************************************
&M       SETA  0
&M2      SETA  0
         AIF   ('&B(1)' NE '02').INKMS
&M2      SETA  &M2+1
.INKMS   ANOP
&M       SETA  &M+1
&M2      SETA  &M2+1
         AIF   (&M2 EQ &CTL).MOREROT
         AIF   ('&COMP(&M2+1)' NE 'FFF').SETCOMP
&TO      SETA  13
&THING       SETC '&SGRT01B(&M).&SGRT02B(&M).&SGRT03B(&M).&SGRT04B(&M)'
         AGO   .COMBINE
.BACK13  ANOP
&RTCODE1(&M2)  SETC '&THING'                                        MCS
&TO      SETA  14
&THING       SETC '&SGRT05B(&M).&SGRT06B(&M).&SGRT07B(&M).&SGRT08B(&M)'
         AGO   .COMBINE
.BACK14  ANOP
&RTCODE2(&M2)  SETC '&THING'                                        MCS
&TO      SETA  15
&THING       SETC '&SGRT09B(&M).&SGRT10B(&M).&SGRT11B(&M).&SGRT12B(&M)'
         AGO   .COMBINE                                             MCS
.BACK15  ANOP                                                       MCS
&RTCODE3(&M2)  SETC '&THING'                                        MCS
&TO      SETA  16                                                   MCS
&THING       SETC '&SGRT13B(&M).&SGRT14B(&M).&SGRT15B(&M).&SGRT16B(&M)'
         AGO   .COMBINE                                             MCS
.BACK16  ANOP                                                       MCS
&RTCODE4(&M2)  SETC '&THING'                                        MCS
&TO      SETA  17
&THING       SETC '&SGCMD1B(&M).&SGCMD2B(&M).&SGCMD3B(&M).&SGCMD4B(&M)'
         AGO   .COMBINE
.BACK17  ANOP
&AUTH(&M2)     SETC '&THING'                                        MCS
          AGO   .INKMS
.SETCOMP ANOP
.**********************************************************************
.*                                                            @ZA51483*
.*       SET THE ROUTING CODES AND COMMAND AUTHORITY FOR      @ZA51483*
.*       COMPOSITE SECONDARY CONSOLES.  THE COMMAND AUTHORITY @ZA51483*
.*       IS ASSOCIATED WITH THE INPUT HALF; THE ROUTING       @ZA51483*
.*       CODES WITH THE OUTPUT HALF.                          @ZA51483*
.*                                                            @ZA51483*
.**********************************************************************
&RTCODE1(&M2) SETC '0'
&RTCODE2(&M2) SETC '0'
&RTCODE3(&M2) SETC '0'
&RTCODE4(&M2) SETC '0'
&TO      SETA  18
&THING       SETC '&SGCMD1B(&M).&SGCMD2B(&M).&SGCMD3B(&M).&SGCMD4B(&M)'
         AGO   .COMBINE
.BACK18  ANOP
&AUTH(&M2)     SETC '&THING'                                        MCS
&M2      SETA  &M2+1
&TO      SETA  19
&THING       SETC '&SGRT01B(&M).&SGRT02B(&M).&SGRT03B(&M).&SGRT04B(&M)'
         AGO   .COMBINE
.BACK19  ANOP
&RTCODE1(&M2)  SETC '&THING'                                        MCS
&TO      SETA  20
&THING       SETC '&SGRT05B(&M).&SGRT06B(&M).&SGRT07B(&M).&SGRT08B(&M)'
         AGO   .COMBINE
.BACK20  ANOP
&RTCODE2(&M2)  SETC '&THING'                                        MCS
&TO      SETA  21
&THING       SETC '&SGRT09B(&M).&SGRT10B(&M).&SGRT11B(&M).&SGRT12B(&M)'
         AGO   .COMBINE                                             MCS
.BACK21  ANOP                                                       MCS
&RTCODE3(&M2)  SETC '&THING'                                        MCS
&TO      SETA  22                                                   MCS
&THING       SETC '&SGRT13B(&M).&SGRT14B(&M).&SGRT15B(&M).&SGRT16B(&M)'
         AGO   .COMBINE                                             MCS
.BACK22  ANOP                                                       MCS
&RTCODE4(&M2)  SETC '&THING'                                        MCS
&AUTH(&M2) SETC '0'
          AGO   .INKMS
.**********************************************************************
.*                                                            @ZA51483*
.*       CONVERT THE BINARY STRING TO A HEXADECIMAL DIGIT     @ZA51483*
.*                                                            @ZA51483*
.**********************************************************************
.COMBINE AIF   ('&THING' EQ '0000').IS0
         AIF   ('&THING' EQ '0001').IS1                             MCS
         AIF   ('&THING' EQ '0010').IS2                             MCS
         AIF   ('&THING' EQ '0011').IS3                             MCS
         AIF   ('&THING' EQ '0100').IS4                             MCS
         AIF   ('&THING' EQ '0101').IS5                             MCS
         AIF   ('&THING' EQ '0110').IS6                             MCS
         AIF   ('&THING' EQ '0111').IS7                             MCS
         AIF   ('&THING' EQ '1000').IS8                             MCS
         AIF   ('&THING' EQ '1001').IS9                             MCS
         AIF   ('&THING' EQ '1010').ISA                             MCS
         AIF   ('&THING' EQ '1011').ISB                             MCS
         AIF   ('&THING' EQ '1100').ISC                             MCS
         AIF   ('&THING' EQ '1101').ISD                             MCS
         AIF   ('&THING' EQ '1110').ISE
&THING   SETC  'F'
         AGO   .BACK
.IS0     ANOP
&THING   SETC  '0'                                                  MCS
         AGO   .BACK
.IS1     ANOP
&THING   SETC  '1'                                                  MCS
         AGO   .BACK
.IS2     ANOP
&THING   SETC  '2'                                                  MCS
         AGO   .BACK
.IS3     ANOP
&THING   SETC  '3'                                                  MCS
         AGO   .BACK
.IS4     ANOP
&THING   SETC  '4'                                                  MCS
         AGO   .BACK
.IS5     ANOP
&THING   SETC  '5'                                                  MCS
         AGO   .BACK
.IS6     ANOP
&THING   SETC  '6'                                                  MCS
         AGO   .BACK
.IS7     ANOP
&THING   SETC  '7'                                                  MCS
         AGO   .BACK
.IS8     ANOP
&THING   SETC  '8'                                                  MCS
         AGO   .BACK
.IS9     ANOP
&THING   SETC  '9'                                                  MCS
         AGO   .BACK
.ISA     ANOP
&THING   SETC  'A'                                                  MCS
         AGO   .BACK
.ISB     ANOP
&THING   SETC  'B'                                                  MCS
         AGO   .BACK
.ISC     ANOP
&THING   SETC  'C'                                                  MCS
         AGO   .BACK
.ISD     ANOP
&THING   SETC  'D'                                                  MCS
         AGO   .BACK
.ISE     ANOP
&THING   SETC  'E'                                                  MCS
.BACK    AIF (&TO EQ 1).BACK1                                       MCS
         AIF (&TO EQ 2).BACK2                                       MCS
         AIF (&TO EQ 3).BACK3                                       MCS
         AIF (&TO EQ 4).BACK4                                       MCS
         AIF (&TO EQ 5).BACK5                                       MCS
         AIF (&TO EQ 6).BACK6                                       MCS
         AIF (&TO EQ 7).BACK7                                       MCS
         AIF (&TO EQ 8).BACK8                                       MCS
         AIF (&TO EQ 9).BACK9                                       MCS
         AIF (&TO EQ 10).BACK10                                     MCS
         AIF (&TO EQ 11).BACK11                                     MCS
         AIF (&TO EQ 12).BACK12                                     MCS
         AIF (&TO EQ 13).BACK13                                     MCS
         AIF (&TO EQ 14).BACK14                                     MCS
         AIF (&TO EQ 15).BACK15                                     MCS
         AIF (&TO EQ 16).BACK16                                     MCS
         AIF (&TO EQ 17).BACK17                                     MCS
         AIF (&TO EQ 18).BACK18                                     MCS
         AIF (&TO EQ 19).BACK19                                     MCS
         AIF (&TO EQ 20).BACK20                                     MCS
         AIF (&TO EQ 21).BACK21                                     MCS
         AIF (&TO EQ 22).BACK22                                     MCS
.MOREROT ANOP                                                       MCS
.**********************************************************************
.*                                                            @ZA51483*
.*       SET THE HARDCOPY PARAMETERS                          @ZA51483*
.*                                                            @ZA51483*
.**********************************************************************
         AIF   (&SGSCHDB(36)).ISSYSL
&WHO     SETC  '&SGSCHDC(14)'
         AGO   .TESTCMD
.ISSYSL  ANOP
&WHO     SETC  'SYSLOG'
.TESTCMD AIF   (&SGSCHDB(37)).CMDS
         AIF   (&SGSCHDB(42)).INCMDS
         AIF   (&SGSCHDB(43)).STCMDS
&CMDS    SETC  'NOCMDS'
         AGO   .TESTCPY
.CMDS    ANOP
&CMDS    SETC  'CMDS'
         AGO   .TESTCPY
.INCMDS  ANOP
&CMDS    SETC  'INCMDS'
         AGO   .TESTCPY
.STCMDS  ANOP
&CMDS    SETC  'STCMDS'
.TESTCPY ANOP
.**********************************************************************
.*                                                            @ZA51483*
.*       SET LOOP LIMITING VARIABLES.  ONE IEEDUCM MACRO      @ZA51483*
.*       MUST BE PUNCHED FOR EACH 50 OR FEWER CONSOLES.       @ZA51483*
.*                                                            @ZA51483*
.**********************************************************************
&MASTCON SETC  '&SGSCHDC(1)'(1,3)
         AIF   (&SGSCNYA(1) EQ 0).ONECON
&W       SETA  -49                                               Y02038
&LIMIT   SETA  50                                                Y02038
&STOP    SETA  0                                                 Y02038
.CALLD   ANOP                                                    Y02038
&STOP    SETA  &STOP+&LIMIT                                      Y02038
&W       SETA  &W+&LIMIT                                         Y02038
&M       SETA  &W                                                Y02038
.**********************************************************************
.*                                                            @ZA51483*
.*       PUNCH IEEDUCM FOR ONE SECONDARY CONSOLE              @ZA51483*
.*                                                            @ZA51483*
.**********************************************************************
         AIF   (&M NE &CTL).MULTI                              @ZA07191
&Y       SETA  &M-1           SET RTCODE AND AUTH 51 CONSOLES  @ZA07191
         PUNCH ' IEEDUCM  &A(&M),&B(&M),&C(&M),&E(&M),&G(&M),&H(&M),   *
                                                       X'      @ZA07191
         PUNCH '               ROUTCD1=&RTCODE1(&Y).&RTCODE2(&Y).&RTCOD*
               E3(&Y).&RTCODE4(&Y),                                    *
                      X'                                       @ZA35283
         PUNCH '               ALTCON1=&ALT(&M),AUTH1=&AUTH(&Y).0,COMPC*
               N1=&COMP(&M),ALTCOM1=&COMPALT(&M)'              @ZA07191
         AGO   .CALLC                                          @ZA07191
.MULTI   ANOP                                                  @ZA07191
.**********************************************************************
.*                                                            @ZA51483*
.*       PUNCH IEEDUCM FOR MULTIPLE CONSOLES                  @ZA51483*
.*                                                            @ZA51483*
.**********************************************************************
         PUNCH ' IEEDUCM (&A(&M),                                      *
                                  X'
         AGO   .PUNCHA1
.**********************************************************************
.*                                                            @ZA51483*
.*       PUNCH IEEDUCM FOR THE MASTER CONSOLE IF THERE        @ZA51483*
.*       ARE NO SECONDARY CONSOLES                            @ZA51483*
.*                                                            @ZA51483*
.**********************************************************************
.ONECON  PUNCH ' IEEDUCM &A(1),&B(1),&C(1),&E(1),&G(1),&H(1),          *
                                                 X'
         PUNCH '               ROUTCD1=&ROUTM1.&ROUTM2.&ROUTM3.&ROUTM4,*
                                                          EEE'
         PUNCH '               AUTH1=E0'
         AGO   .CALLC                                            Y02038
.PUNCHA1 ANOP
.**********************************************************************
.*                                                            @ZA51483*
.*       PUNCH CONSOLE ADDRESSES                              @ZA51483*
.*                                                            @ZA51483*
.**********************************************************************
&M       SETA  &M+1
         AIF   ((&M EQ &CTL) OR (&M EQ &STOP)).PUNCHA2           Y02038
         PUNCH '               &A(&M),                                 *
                                  X'
         AGO   .PUNCHA1
.PUNCHA2 PUNCH '               &A(&M)),                                *
                                  X'
.**********************************************************************
.*                                                            @ZA51483*
.*       PUNCH PROCESSOR NAME INSERT                          @ZA51483*
.*                                                            @ZA51483*
.**********************************************************************
&M       SETA  &W                                                Y02038
         PUNCH '               (&B(&M),                                *
                                   X'
.PUNCHB1 ANOP
&M       SETA  &M+1
         AIF   ((&M EQ &CTL) OR (&M EQ &STOP)).PUNCHB2           Y02038
         PUNCH '               &B(&M),                                 *
                                   X'
         AGO   .PUNCHB1
.PUNCHB2 PUNCH '               &B(&M)),                                *
                                   X'
.**********************************************************************
.*                                                            @ZA51483*
.*       PUNCH INITIAL DEVICE ATTRIBUTES                      @ZA51483*
.*                                                            @ZA51483*
.**********************************************************************
&M       SETA  &W                                                Y02038
         PUNCH '               (&C(&M),                                *
                                 R'
.PUNCHC1 ANOP
&M       SETA  &M+1
         AIF   ((&M EQ &CTL) OR (&M EQ &STOP)).PUNCHC2           Y02038
         PUNCH '               &C(&M),                                 *
                                 A'
         AGO   .PUNCHC1
.PUNCHC2 PUNCH '               &C(&M)),                                *
                                 XXX'
.**********************************************************************
.*                                                            @ZA51483*
.*       PUNCH THE DEVICE TYPE PARAMETER                      @ZA51483*
.*                                                            @ZA51483*
.**********************************************************************
&M       SETA  &W                                                Y02038
         PUNCH '               (&E(&M),                                *
                                    X'                            19029
.PUNCHE1 ANOP                                                     19029
&M       SETA  &M+1                                               19029
         AIF   ((&M EQ &CTL) OR (&M EQ &STOP)).PUNCHE2           Y02038
         PUNCH '               &E(&M),                                 *
                                    X'                            19029
         AGO   .PUNCHE1                                           19029
.PUNCHE2 ANOP
         PUNCH '               &E(&M)),                                *
                                   XX'
.**********************************************************************
.*                                                            @ZA51483*
.*       PUNCH THE CONSOLE MODE                               @ZA51483*
.*                                                            @ZA51483*
.**********************************************************************
&M       SETA  &W                                                Y02038
         PUNCH '               (&G(&M),                                *
                                   XX'
.PUNCHG2 ANOP
&M       SETA  &M+1
         AIF   ((&M EQ &CTL) OR (&M EQ &STOP)).PUNCHE3           Y02038
         PUNCH '               &G(&M),                                 *
                                   XX'
         AGO   .PUNCHG2
.PUNCHE3 PUNCH '               &G(&M)),                                *
                                    X'
.**********************************************************************
.*                                                            @ZA51483*
.*       PUNCH THE INTEGRATED OPERATOR CONSOLE FLAG           @ZA51483*
.*                                                            @ZA51483*
.**********************************************************************
&M       SETA  &W                                                Y02038
         PUNCH '               (&H(&M),                                *
                                    X'                           R20893
.PUNCHH2 ANOP                                                    R20893
&M       SETA  &M+1                                              R20893
         AIF   ((&M EQ &CTL) OR (&M EQ &STOP)).PUNCHH3           Y02038
         PUNCH '               &H(&M),                                 *
                                    X'                           R20893
         AGO   .PUNCHH2                                          R20893
.PUNCHH3 PUNCH '               &H(&M)),                                *
                                    X'                           R20893
.**********************************************************************
.*                                                            @ZA51483*
.*       PUNCH THE ROUTCD1 PARAMETER                          @ZA51483*
.*                                                            @ZA51483*
.**********************************************************************
         AIF   (('&B(1)' EQ '02') AND (&STOP EQ 50)).FAKE1       Y02038
         AIF   (&STOP GT 50).PROUT0     MORE THAN 51 CONSOLES  @ZA07191
         PUNCH '               ROUTCD1=(&ROUTM1.&ROUTM2.&ROUTM3.&ROUTM4*
               ,                                          E'
&M       SETA  &W-1                                              Y02038
         AGO   .PROUT1
.FAKE1   PUNCH '               ROUTCD1=(0000,&ROUTM1.&ROUTM2.&ROUTM3.&R*
               OUTM4,                             EEEEEEEEEEE'
&M       SETA  &W                                                Y02038
         AGO   .PROUT1                                         @ZA07191
.PROUT0  ANOP                                                  @ZA07191
&M       SETA  &W-1                                            @ZA07191
         PUNCH '               ROUTCD1=(&RTCODE1(&M).&RTCODE2(&M).&RTCO*
               DE3(&M).&RTCODE4(&M),                                   *
                      X'                                       @ZA07191
.PROUT1  ANOP                                                       MCS
&M       SETA  &M+1
         AIF   ((&M+1 EQ &CTL) OR (&M+1 EQ &STOP)).PROUT2        Y02038
         PUNCH '               &RTCODE1(&M).&RTCODE2(&M).&RTCODE3(&M).&*
               RTCODE4(&M),                                            *
                      R'
         AGO   .PROUT1                                              MCS
.PROUT2  PUNCH '               &RTCODE1(&M).&RTCODE2(&M).&RTCODE3(&M).&*
               RTCODE4(&M)),                                           *
                      A'
.**********************************************************************
.*                                                            @ZA51483*
.*       PUNCH THE ALTCON1 PARAMETER                          @ZA51483*
.*                                                            @ZA51483*
.**********************************************************************
&M       SETA  &W                                                Y02038
         PUNCH '               ALTCON1=(&ALT(&M),                      *
                                    C'                         @ZA41089
.PALT1   ANOP
&M       SETA  &M+1
         AIF   ((&M EQ &CTL) OR (&M EQ &STOP)).PALT2             Y02038
         PUNCH '               &ALT(&M),                               *
                                    X'
         AGO   .PALT1
.PALT2   PUNCH '               &ALT(&M)),                              *
                                    X'
.**********************************************************************
.*                                                            @ZA51483*
.*       PUNCH THE AUTH1 PARAMETER                            @ZA51483*
.*                                                            @ZA51483*
.**********************************************************************
         AIF   (('&B(1)' EQ '02') AND (&STOP EQ 50)).FAKE2       Y02038
&M       SETA  &W-1                                              Y02038
         AIF   (&STOP GT 50).PAUTH0     OVER 50 CONSOLES?      @ZA07191
         PUNCH '               AUTH1=(E0,                              *
                               X'
         AGO   .PAUTH1
.FAKE2   PUNCH '               AUTH1=(E0,00,                           *
                           XXXXXXXX'
&M       SETA  &W                                                Y02038
         AGO   .PAUTH1                  GO AROUND OVER 50 CONS @ZA07191
.PAUTH0  ANOP                           AUTH FOR OVER 50 CONS  @ZA07191
         PUNCH '               AUTH1=(&AUTH(&M).0,                     *
                                        X'                     @ZA07191
.PAUTH1  ANOP                                                       MCS
&M       SETA  &M+1                                                 MCS
         AIF   ((&M+1 EQ &CTL) OR (&M+1 EQ &STOP)).PAUTH2        Y02038
         PUNCH '               &AUTH(&M).0,                            *
                                        X'
         AGO   .PAUTH1                                              MCS
.PAUTH2  PUNCH '               &AUTH(&M).0),                           *
                                        X'
.**********************************************************************
.*                                                            @ZA51483*
.*       PUNCH THE COMPCN1 PARAMETER                          @ZA51483*
.*                                                            @ZA51483*
.**********************************************************************
&M       SETA  &W                                                Y02038
         PUNCH '               COMPCN1=(&COMP(&M),             @ZA51483*
                                     X'                        @ZA51483
.PCOMP1  ANOP
&M       SETA  &M+1
         AIF   ((&M EQ &CTL) OR (&M EQ &STOP)).PCOMP2            Y02038
         PUNCH '               &COMP(&M),                              *
                                     H'
         AGO   .PCOMP1
.PCOMP2  PUNCH '               &COMP(&M)),                             *
                                     O'
.**********************************************************************
.*                                                            @ZA51483*
.*       PUNCH THE ALTCOM1 PARAMETER                          @ZA51483*
.*                                                            @ZA51483*
.**********************************************************************
&M       SETA  &W
         PUNCH '               ALTCOM1=(&COMPALT(&M),                  *
                                        H'
.PACOMP1 ANOP
&M       SETA  &M+1
         AIF   ((&M EQ &CTL) OR (&M EQ &STOP)).PACOMP2           Y02038
         PUNCH '               &COMPALT(&M),                           *
                                        E'
         AGO   .PACOMP1
.PACOMP2 PUNCH '               &COMPALT(&M))'
         AIF   (&CTL GT &STOP).CALLD
.CALLC   ANOP
.**********************************************************************
.*                                                            @ZA51483*
.*       PUNCH THE IEECUCM MARCO                              @ZA51483*
.*                                                            @ZA51483*
.**********************************************************************
         PUNCH ' IEECUCM U,DSECT=NO,MCS=MCS,MASTCON=&MASTCON,          *
                                    X'
         PUNCH '               HARDCDE=&HARDM1.&HARDM2.&HARDM3.&HARDM4,*
                                                          X'
         PUNCH '               OLDWCDE=&OLDW1.&OLDW2.&OLDW3.&OLDW4,    *
                                                      X'
         PUNCH '               HARDCPY=(&WHO,&CMDS.,HCPY)'
.OUT     PUNCH '         END  '                                    MP65
         PUNCH '/*'                                                MP65
         MEND                                                      MP65
