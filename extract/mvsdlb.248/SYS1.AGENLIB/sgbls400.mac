*** START OF SPECIFICATIONS********************************************
*                                                                     *
* $MAC(SGBLS400) COMP(SC132) PROD(IPCS): MVS IPCS SYSGEN MACRO        *
*                                                                     *
*   COPYRIGHT= NONE                                                   *
*                                                                     *
*   FUNCTION= PRODUCE A JCL STREAM WHICH WILL PLACE MVS IPCS IN A     *
*     CUSTOMER SYSTEM                                                 *
*                                                                     *
*   CHANGE ACTIVITY:                                                  *
*                                                                     *
* $L0= MVSIPCS,257,780001,DMGPNA: MVS  IPCS INITIAL RELEASE CODE      *
* $L1= STATUS,257,790225,DMGPRW: STATUS SUBCOMMAND                    *
* $L2= SUMMARY,257,790225,DMGPRW: SUMMARY SUBCOMMAND                  *
* $L3= COPYDUMP,257,790225,DMGPRW: COPYDUMP SUBCOMMAND                *
*                                                                     *
* $D1= ENTRY,257,790225,DMGPGW: ENTRY STATEMENTS FOR LINK EDITS       *
* $D2= ORDER,257,790226,DMGPGW: ORDER STATEMENTS FOR LINK EDITS       *
* $D3= QUALITY,257,790226,DMGPGW: IMPROVED COMMENTS, REMARKS          *
*                                                                     *
* $01= OZ35531,257,790100,DMGPGW: CUSTOMER COMMAND VALIDATION EXIT    *
*                                                                     *
***** END OF SPECIFICATIONS********************************************
         MACRO
         SGBLS400
         COPY SGGBLPAK
&SGCTRLC(7) SETC  '&SGCTRLC(23)'
&SGCTRLC(8) SETC  '&SGCTRLC(24)'
&SGCTRLC(9) SETC  'CMDLIB'
&SGCTRLC(10) SETC ',LET'
&SGCTRLC(12) SETC ',RENT'
&SGCTRLC(13) SETC ',SIZE=(600K,80K)'
.* ************************************************************
.*
.*  THIS FIRST SET OF LINKEDITS REQUIRES THE RENT ATTRIBUTE
.*  FOR THE LOADS BEING CREATED....
.*
.* ************************************************************
         COPY SGLEDPK1
 PUNCH '//AOS32 DD DSN=SYS1.AOS32,DISP=SHR'
         COPY SGLEDPK2
 PUNCH ' INCLUDE AOS32(BLSRASCX)' ASCBEXIT SUBCOMMAND              @D3C
 PUNCH ' INCLUDE AOS32(BLSRVPAS)' ASID CHECK                       @D3C
 PUNCH ' ENTRY BLSRASCX'          --------------------------------
 PUNCH ' NAME BLSRASCX(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSRASM7)' ASMCHECK SUBCOMMAND              @D3C
 PUNCH ' ENTRY BLSRASM7'          -------------------------------- @D1C
 PUNCH ' NAME BLSRASM7(R)'        -------------------------------- @L2P
 PUNCH ' INCLUDE AOS32(BLSRCOMK)' COMCHECK SUBCOMMAND              @D3C
 PUNCH ' ENTRY BLSRCOMK'          -------------------------------- @D1A
 PUNCH ' NAME BLSRCOMK(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSRCOMP)' COMPARE SUBCOMMAND               @D3C
 PUNCH ' INCLUDE AOS32(BLSRVPAD)' ADDRESS CHECK                    @D3C
 PUNCH ' INCLUDE AOS32(BLSRVPAS)' ASID CHECK                       @D3C
 PUNCH ' INCLUDE AOS32(BLSRVPCP)' CPU ADDRESS CHECK                @D3C
 PUNCH ' INCLUDE AOS32(BLSUVPVA)' VALUE CHECK                      @D3C
 PUNCH ' INCLUDE AOS32(BLSUVP31)' INTEGER CHECK                    @D3C
 PUNCH ' INCLUDE AOS32(BLSUVP32)' INTEGER RANGE CHECK              @D3C
 PUNCH ' ENTRY BLSRCOMP'          --------------------------------
 PUNCH ' NAME BLSRCOMP(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSRCOPY)' COPYDUMP SUBCOMMAND              @L3C
 PUNCH ' INCLUDE AOS32(BLSRCOHD)' HEADER RECORD PROCESSING         @L3C
 PUNCH ' INCLUDE AOS32(BLSRCOIN)' ALLOCATE INPUT DATA SET          @L3C
 PUNCH ' INCLUDE AOS32(BLSRCOTA)' ALLOCATE TARGET DATA SET         @L3C
 PUNCH ' INCLUDE AOS32(BLSUVP31)' INTEGER CHECK                    @L3C
 PUNCH ' ENTRY BLSRCOPY'          -------------------------------- @L3A
 PUNCH ' NAME BLSRCOPY(R)'        -------------------------------- @L3A
 PUNCH ' INCLUDE AOS32(BLSRDUAL)' ALLOCATE DUMP DATA SET           @D3C
 PUNCH ' INCLUDE AOS32(BLSRDUOP)' OPEN DUMP DATA SET               @D3C
 PUNCH ' ENTRY BLSRDUAL'          --------------------------------
 PUNCH ' NAME BLSRDUAL(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSRDUDE)' DROPDUMP SUBCOMMAND              @D3C
 PUNCH ' ENTRY BLSRDUDE'          -------------------------------- @D1A
 PUNCH ' NAME BLSRDUDE(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSRDUDR)' DROPDUMP SERVICE ROUTINE         @D3C
 PUNCH ' ENTRY BLSRDUDR'          -------------------------------- @D1A
 PUNCH ' NAME BLSRDUDR(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSRDUIN)' DUMP INITIALIZATION              @D3C
 PUNCH ' INCLUDE AOS32(BLSRDUIC)' CPU STATUS RECORD PROCESSOR      @D3C
 PUNCH ' INCLUDE AOS32(BLSRDUIH)' HEADER RECORD PROCESSOR          @D3C
 PUNCH ' INCLUDE AOS32(BLSRDUIS)' STORAGE RECORD PROCESSOR         @D3C
 PUNCH ' ORDER BLSRDUIN,BLSRDUIS,BLSRDUIH,BLSRDUIC'                @D2A
 PUNCH ' ENTRY BLSRDUIN'          --------------------------------
 PUNCH ' NAME BLSRDUIN(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSRDULS)' LISTDUMP SUBCOMMAND              @D3C
 PUNCH ' ENTRY BLSRDULS'          -------------------------------- @D1A
 PUNCH ' NAME BLSRDULS(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSRDUSC)' SYSDSCAN TSO COMMAND             @D3C
 PUNCH ' INCLUDE AOS32(BLSUVP99)' CHECK INTEGER RANGE              @D3C
 PUNCH ' ALIAS SYSDSCAN'          --------------------------------
 PUNCH ' ENTRY BLSRDUSC'          --------------------------------
 PUNCH ' NAME BLSRDUSC(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSRENQK)' ENQCHECK SUBCOMMAND              @D3C
 PUNCH ' ENTRY BLSRENQK'          -------------------------------- @D1A
 PUNCH ' NAME BLSRENQK(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSREQU)'  EQUATE SUBCOMMAND                @D3C
 PUNCH ' INCLUDE AOS32(BLSRVPAD)' ADDRESS CHECK                    @D3C
 PUNCH ' INCLUDE AOS32(BLSRVPAS)' ASID CHECK                       @D3C
 PUNCH ' INCLUDE AOS32(BLSRVPCP)' CPU ADDRESS CHECK                @D3C
 PUNCH ' INCLUDE AOS32(BLSUVP31)' INTEGER CHECK                    @D3C
 PUNCH ' INCLUDE AOS32(BLSUVP32)' INTEGER RANGE CHECK              @D3C
 PUNCH ' ENTRY BLSREQU'           --------------------------------
 PUNCH ' NAME BLSREQU(R)'         --------------------------------
 PUNCH ' INCLUDE AOS32(BLSRESDR)' DROPDUMP SUBCOMMAND              @D3C
 PUNCH ' ENTRY BLSRESDR'          -------------------------------- @D1A
 PUNCH ' NAME BLSRESDR(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSRESRU)' COMMON LISTSYM/DROPSYM DIAGNOSIS @D3C
 PUNCH ' ENTRY BLSRESRU'          -------------------------------- @D1A
 PUNCH ' NAME BLSRESRU(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSREVAL)' EVALUATE SUBCOMMAND              @D3C
 PUNCH ' INCLUDE AOS32(BLSRVPAD)' ADDRESS CHECK                    @D3C
 PUNCH ' INCLUDE AOS32(BLSRVPAS)' ASID CHECK                       @D3C
 PUNCH ' INCLUDE AOS32(BLSRVPCP)' CPU ADDRESS CHECK                @D3C
 PUNCH ' INCLUDE AOS32(BLSUVP31)' INTEGER CHECK                    @D3C
 PUNCH ' INCLUDE AOS32(BLSUVP32)' INTEGER RANGE CHECK              @D3C
 PUNCH ' ENTRY BLSREVAL'          --------------------------------
 PUNCH ' NAME BLSREVAL(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSRFIND)' FIND SUBCOMMAND                  @D3C
 PUNCH ' INCLUDE AOS32(BLSRVPAD)' ADDRESS CHECK                    @D3C
 PUNCH ' INCLUDE AOS32(BLSRVPAS)' ASID CHECK                       @D3C
 PUNCH ' INCLUDE AOS32(BLSRVPCP)' CPU ADDRESS CHECK                @D3C
 PUNCH ' INCLUDE AOS32(BLSUVPVA)' VALUE CHECK                      @D3C
 PUNCH ' INCLUDE AOS32(BLSUVP31)' INTEGER CHECK                    @D3C
 PUNCH ' INCLUDE AOS32(BLSUVP32)' INTEGER RANGE CHECK              @D3C
 PUNCH ' ENTRY BLSRFIND'          --------------------------------
 PUNCH ' NAME BLSRFIND(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSRFMOD)' FINDMOD SUBCOMMAND               @D3C
 PUNCH ' ENTRY BLSRFMOD'          -------------------------------- @D1A
 PUNCH ' NAME BLSRFMOD(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSRFUCB)' FINDUCB SUBCOMMAND               @D3C
 PUNCH ' INCLUDE AOS32(BLSUVPX1)' HEXADECIMAL DIGIT CHECK          @D3C
 PUNCH ' ENTRY BLSRFUCB'          --------------------------------
 PUNCH ' NAME BLSRFUCB(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSRIOSK)' IOSCHECK SUBCOMMAND              @D3C
 PUNCH ' ENTRY BLSRIOSK'          -------------------------------- @D1A
 PUNCH ' NAME BLSRIOSK(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSRLIST)' LIST SUBCOMMAND                  @D3C
 PUNCH ' INCLUDE AOS32(BLSRVPAD)' ADDRESS CHECK                    @D3C
 PUNCH ' INCLUDE AOS32(BLSRVPAS)' ASID CHECK                       @D3C
 PUNCH ' INCLUDE AOS32(BLSRVPCP)' CPU ADDRESS CHECK                @D3C
 PUNCH ' INCLUDE AOS32(BLSUVP31)' INTEGER CHECK                    @D3C
 PUNCH ' INCLUDE AOS32(BLSUVP32)' INTEGER RANGE CHECK              @D3C
 PUNCH ' ENTRY BLSRLIST'          --------------------------------
 PUNCH ' NAME BLSRLIST(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSRLSYM)' LISTSYM SUBCOMMAND               @D3C
 PUNCH ' ENTRY BLSRLSYM'          -------------------------------- @D1A
 PUNCH ' NAME BLSRLSYM(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSRPHAR)' STORE PH RECORD                  @D3C
 PUNCH ' ENTRY BLSRPHAR'          -------------------------------- @D1A
 PUNCH ' NAME BLSRPHAR(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSRPHGE)' GET PH RECORD                    @D3C
 PUNCH ' ENTRY BLSRPHGE'          -------------------------------- @D1A
 PUNCH ' NAME BLSRPHGE(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSRRDAR)' STORE RD RECORD                  @D3C
 PUNCH ' ENTRY BLSRRDAR'          -------------------------------- @D1A
 PUNCH ' NAME BLSRRDAR(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSRRDGE)' GET RD RECORD                    @D3C
 PUNCH ' ENTRY BLSRRDGE'          -------------------------------- @D1A
 PUNCH ' NAME BLSRRDGE(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSRRDPU)' ADD RD RECORD                    @D3C
 PUNCH ' ENTRY BLSRRDPU'          -------------------------------- @D1A
 PUNCH ' NAME BLSRRDPU(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSRRNCH)' RUNCHAIN SUBCOMMAND              @D3C
 PUNCH ' INCLUDE AOS32(BLSRVPAD)' ADDRESS CHECK                    @D3C
 PUNCH ' INCLUDE AOS32(BLSRVPAS)' ASID CHECK                       @D3C
 PUNCH ' INCLUDE AOS32(BLSRVPCP)' CPU ADDRESS CHECK                @D3C
 PUNCH ' INCLUDE AOS32(BLSUVP31)' INTEGER CHECK                    @D3C
 PUNCH ' INCLUDE AOS32(BLSUVP32)' INTEGER RANGE CHECK              @D3C
 PUNCH ' ENTRY BLSRRNCH'          --------------------------------
 PUNCH ' NAME BLSRRNCH(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSRSADE)' DROPMAP SUBCOMMAND               @D3C
 PUNCH ' INCLUDE AOS32(BLSRVPAD)' ADDRESS CHECK                    @D3C
 PUNCH ' INCLUDE AOS32(BLSRVPAS)' ASID CHECK                       @D3C
 PUNCH ' INCLUDE AOS32(BLSRVPCP)' CPU ADDRESS CHECK                @D3C
 PUNCH ' INCLUDE AOS32(BLSUVP31)' INTEGER CHECK                    @D3C
 PUNCH ' INCLUDE AOS32(BLSUVP32)' INTEGER RANGE CHECK              @D3C
 PUNCH ' ENTRY BLSRSADE'          --------------------------------
 PUNCH ' NAME BLSRSADE(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSRSALI)' LISTMAP SUBCOMMAND               @D3C
 PUNCH ' INCLUDE AOS32(BLSRVPAD)' ADDRESS CHECK                    @D3C
 PUNCH ' INCLUDE AOS32(BLSRVPAS)' ASID CHECK                       @D3C
 PUNCH ' INCLUDE AOS32(BLSRVPCP)' CPU ADDRESS CHECK                @D3C
 PUNCH ' INCLUDE AOS32(BLSUVP31)' INTEGER CHECK                    @D3C
 PUNCH ' INCLUDE AOS32(BLSUVP32)' INTEGER RANGE CHECK              @D3C
 PUNCH ' ENTRY BLSRSALI'          --------------------------------
 PUNCH ' NAME BLSRSALI(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSRSCAN)' SCAN SUBCOMMAND                  @D3C
 PUNCH ' INCLUDE AOS32(BLSRVPAD)' ADDRESS CHECK                    @D3C
 PUNCH ' INCLUDE AOS32(BLSRVPAS)' ASID CHECK                       @D3C
 PUNCH ' INCLUDE AOS32(BLSRVPCP)' CPU ADDRESS CHECK                @D3C
 PUNCH ' INCLUDE AOS32(BLSUVP21)' INTEGER CHECK                    @D3C
 PUNCH ' INCLUDE AOS32(BLSUVP31)' INTEGER CHECK                    @D3C
 PUNCH ' INCLUDE AOS32(BLSUVP32)' INTEGER RANGE CHECK              @D3C
 PUNCH ' ENTRY BLSRSCAN'          --------------------------------
 PUNCH ' NAME BLSRSCAN(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSRSETD)' SETDEF SUBCOMMAND                @D3C
 PUNCH ' INCLUDE AOS32(BLSRVPAS)' ASID CHECK                       @D3C
 PUNCH ' INCLUDE AOS32(BLSRVPCP)' CPU ADDRESS CHECK                @D3C
 PUNCH ' INCLUDE AOS32(BLSUVP31)' INTEGER CHECK                    @D3C
 PUNCH ' ENTRY BLSRSETD'          --------------------------------
 PUNCH ' NAME BLSRSETD(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSRST00)' STATUS SUBCOMMAND                @L1A
 PUNCH ' INCLUDE AOS32(BLSRVPCP)' CPU ADDRESS CHECK                @L1A
 PUNCH ' ENTRY BLSRST00'          -------------------------------- @D1A
 PUNCH ' NAME BLSRST00(R)'        -------------------------------- @L1A
 PUNCH ' INCLUDE AOS32(BLSRSUMM)' SUMMARY SUBCOMMAND               @D3C
 PUNCH ' INCLUDE AOS32(BLSRSUTC)' TCB PROCESSING                   @L2C
 PUNCH ' INCLUDE AOS32(BLSRSURB)' RB PROCESSING                    @L2C
 PUNCH ' INCLUDE AOS32(BLSRVPAS)' ASID CHECK                       @D3C
 PUNCH ' INCLUDE AOS32(BLSRVPTC)' TCB NAME CHECK                   @L2C
 PUNCH ' ENTRY BLSRSUMM'          --------------------------------
 PUNCH ' NAME BLSRSUMM(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSRSYRB)' COMPUTE MINUMUM/MAXIMUM SYMBOL   @D3C
 PUNCH ' ENTRY BLSRSYRB'          -------------------------------- @D1A
 PUNCH ' NAME BLSRSYRB(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSRTCBX)' TCBEXIT SUBCOMMAND               @D3C
 PUNCH ' INCLUDE AOS32(BLSRVPAD)' ADDRESS CHECK                    @D3C
 PUNCH ' INCLUDE AOS32(BLSRVPAS)' ASID CHECK                       @D3C
 PUNCH ' INCLUDE AOS32(BLSRVPCP)' CPU ADDRESS CHECK                @D3C
 PUNCH ' INCLUDE AOS32(BLSUVP31)' INTEGER CHECK                    @D3C
 PUNCH ' INCLUDE AOS32(BLSUVP32)' INTEGER RANGE CHECK              @D3C
 PUNCH ' ENTRY BLSRTCBX'          --------------------------------
 PUNCH ' NAME BLSRTCBX(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSRVRBX)' VERBEXIT SUBCOMMAND              @D3C
 PUNCH ' ENTRY BLSRVRBX'          -------------------------------- @D1A
 PUNCH ' NAME BLSRVRBX(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSRVSLD)' IPCSDDIR TSO COMMAND             @D3C
 PUNCH ' INCLUDE AOS32(BLSRVPVS)' DUMP DIRECTORY DSNAME CHECK      @D3C
 PUNCH ' ENTRY BLSRVSLD'          --------------------------------
 PUNCH ' ALIAS IPCSDDIR'          --------------------------------
 PUNCH ' NAME BLSRVSLD(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSR3270)' DSPL3270 SUBCOMMAND              @D3C
 PUNCH ' INCLUDE AOS32(BLSRVPAS)' ASID CHECK                       @D3C
 PUNCH ' ENTRY BLSR3270'          --------------------------------
 PUNCH ' NAME BLSR3270(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSSASCB)' FIND ASCB                        @D3C
 PUNCH ' ENTRY BLSSASCB'          -------------------------------- @D1A
 PUNCH ' NAME BLSSASCB(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSSASMV)' FIND ASMVT                       @D3C
 PUNCH ' ENTRY BLSSASMV'          -------------------------------- @D1A
 PUNCH ' NAME BLSSASMV(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSSASVT)' FIND ASVT                        @D3C
 PUNCH ' ENTRY BLSSASVT'          -------------------------------- @D1A
 PUNCH ' NAME BLSSASVT(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSSASXB)' FIND ASXB                        @D3C
 PUNCH ' ENTRY BLSSASXB'          -------------------------------- @D1A
 PUNCH ' NAME BLSSASXB(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSSCDE)'  FIND CDE                         @D3C
 PUNCH ' ENTRY BLSSCDE'           -------------------------------- @D1A
 PUNCH ' NAME BLSSCDE(R)'         --------------------------------
 PUNCH ' INCLUDE AOS32(BLSSCOMM)' FIND COMMON AREA                 @D3C
 PUNCH ' ENTRY BLSSCOMM'          -------------------------------- @D1A
 PUNCH ' NAME BLSSCOMM(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSSCSD)'  FIND CSD                         @D3C
 PUNCH ' ENTRY BLSSCSD'           -------------------------------- @D1A
 PUNCH ' NAME BLSSCSD(R)'         --------------------------------
 PUNCH ' INCLUDE AOS32(BLSSCVT)'  FIND CVT                         @D3C
 PUNCH ' ENTRY BLSSCVT'           -------------------------------- @D1A
 PUNCH ' NAME BLSSCVT(R)'         --------------------------------
 PUNCH ' INCLUDE AOS32(BLSSCVT2)' FIND CVTXTNT2                    @D3C
 PUNCH ' ENTRY BLSSCVT2'          -------------------------------- @D1A
 PUNCH ' NAME BLSSCVT2(R)'        -------------------------------- @D1C
 PUNCH ' INCLUDE AOS32(BLSSIOC)'  FIND IOCOM                       @D3C
 PUNCH ' ENTRY BLSSIOC'           -------------------------------- @D1A
 PUNCH ' NAME BLSSIOC(R)'         --------------------------------
 PUNCH ' INCLUDE AOS32(BLSSIOX)'  FIND IOCOM EXTENSION             @D3C
 PUNCH ' ENTRY BLSSIOX'           -------------------------------- @D1A
 PUNCH ' NAME BLSSIOX(R)'         --------------------------------
 PUNCH ' INCLUDE AOS32(BLSSLCCA)' FIND LCCA                        @D3C
 PUNCH ' ENTRY BLSSLCCA'          -------------------------------- @D1A
 PUNCH ' NAME BLSSLCCA(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSSLCCV)' FIND LCCV                        @D3C
 PUNCH ' ENTRY BLSSLCCV'          -------------------------------- @D1A
 PUNCH ' NAME BLSSLCCV(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSSLLPA)' FIND LPA MODULE                  @D3C
 PUNCH ' ENTRY BLSSLLPA'          -------------------------------- @D1A
 PUNCH ' NAME BLSSLLPA(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSSLPDE)' FIND LPDE                        @D3C
 PUNCH ' ENTRY BLSSLPDE'          -------------------------------- @D1A
 PUNCH ' NAME BLSSLPDE(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSSPCCA)' FIND PCCA                        @D3C
 PUNCH ' ENTRY BLSSPCCA'          -------------------------------- @D1A
 PUNCH ' NAME BLSSPCCA(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSSPCCV)' FIND PCCAVT                      @D3C
 PUNCH ' ENTRY BLSSPCCV'          -------------------------------- @D1A
 PUNCH ' NAME BLSSPCCV(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSSPFT)'  FIND PFT                         @D3C
 PUNCH ' ENTRY BLSSPFT'           -------------------------------- @D1A
 PUNCH ' NAME BLSSPFT(R)'         --------------------------------
 PUNCH ' INCLUDE AOS32(BLSSPGTE)' FIND PAGE TABLE                  @D3C
 PUNCH ' ENTRY BLSSPGTE'          -------------------------------- @D1A
 PUNCH ' NAME BLSSPGTE(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSSPRIV)' FIND PRIVATE AREA                @D3C
 PUNCH ' ENTRY BLSSPRIV'          -------------------------------- @D1A
 PUNCH ' NAME BLSSPRIV(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSSPSA)'  FIND PSA                         @D3C
 PUNCH ' ENTRY BLSSPSA'           -------------------------------- @D1A
 PUNCH ' NAME BLSSPSA(R)'         --------------------------------
 PUNCH ' INCLUDE AOS32(BLSSPVT)'  FIND PVT                         @D3C
 PUNCH ' ENTRY BLSSPVT'           -------------------------------- @D1A
 PUNCH ' NAME BLSSPVT(R)'         --------------------------------
 PUNCH ' INCLUDE AOS32(BLSSSGTE)' FIND SEGMENT TABLE               @D3C
 PUNCH ' ENTRY BLSSSGTE'          -------------------------------- @D1A
 PUNCH ' NAME BLSSSGTE(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSSTCB)'  FIND TCB                         @D3C
 PUNCH ' ENTRY BLSSTCB'           -------------------------------- @D1A
 PUNCH ' NAME BLSSTCB(R)'         --------------------------------
 PUNCH ' INCLUDE AOS32(BLSSUCB)'  FIND UCB                         @D3C
 PUNCH ' ENTRY BLSSUCB'           -------------------------------- @D1A
 PUNCH ' NAME BLSSUCB(R)'         --------------------------------
 PUNCH ' INCLUDE AOS32(BLSSUCM)'  FIND UCM                         @D3C
 PUNCH ' ENTRY BLSSUCM'           -------------------------------- @D1A
 PUNCH ' NAME BLSSUCM(R)'         --------------------------------
 PUNCH ' INCLUDE AOS32(BLSSXTLS)' FIND XTLST                       @D3C
 PUNCH ' ENTRY BLSSXTLS'          -------------------------------- @D1A
 PUNCH ' NAME BLSSXTLS(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSTB4)'   FORMAT BIT DATA--16 BYTES/LINE   @D3C
 PUNCH ' ENTRY BLSTB4'            -------------------------------- @D1A
 PUNCH ' NAME BLSTB4(R)'          --------------------------------
 PUNCH ' INCLUDE AOS32(BLSTB5)'   FORMAT BIT DATA--32 BYTES/LINE   @D3C
 PUNCH ' ENTRY BLSTB5'            -------------------------------- @D1A
 PUNCH ' NAME BLSTB5(R)'          --------------------------------
 PUNCH ' INCLUDE AOS32(BLSTM4)'   FORMAT STRUCTURE--16 BYTES/LINE  @D3C
 PUNCH ' ENTRY BLSTM4'            -------------------------------- @D1A
 PUNCH ' NAME BLSTM4(R)'          --------------------------------
 PUNCH ' INCLUDE AOS32(BLSTM5)'   FORMAT STRUCTURE--32 BYTES/LINE  @D3C
 PUNCH ' ENTRY BLSTM5'            -------------------------------- @D1A
 PUNCH ' NAME BLSTM5(R)'          --------------------------------
 PUNCH ' INCLUDE AOS32(BLSTU4)'   FORMAT AREA--16 BYTES/LINE       @D3C
 PUNCH ' ENTRY BLSTU4'            -------------------------------- @D1A
 PUNCH ' NAME BLSTU4(R)'          --------------------------------
 PUNCH ' INCLUDE AOS32(BLSTU5)'   FORMAT AREA--32 BYTES/LINE       @D3C
 PUNCH ' ENTRY BLSTU5'            -------------------------------- @D1A
 PUNCH ' NAME BLSTU5(R)'          --------------------------------
 PUNCH ' INCLUDE AOS32(BLST04A)'  DISPLAY MACHINE--ABSOLUTE        @D3C
 PUNCH ' ENTRY BLST04A'           -------------------------------- @D1A
 PUNCH ' NAME BLST04A(R)'         --------------------------------
 PUNCH ' INCLUDE AOS32(BLST04BS)' DISPLAY MACHINE                  @D3C
 PUNCH ' ENTRY BLST04BS'          -------------------------------- @D1A
 PUNCH ' ALIAS BLST04C,BLST04H'   CPU STATUS, HEADER               @D3C
 PUNCH ' NAME BLST04BS(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLST04CV)' DISPLAY MACHINE--VIRTUAL         @D3C
 PUNCH ' ENTRY BLST04CV'          -------------------------------- @D1A
 PUNCH ' ALIAS BLST04CR'          REAL                             @D3C
 PUNCH ' NAME BLST04CV(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSUHELP)' HELP SUBCOMMAND                  @D3C
 PUNCH ' NAME BLSUHELP(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSUMTOD)' FORMAT TOD CLOCK                 @01C
 PUNCH ' ENTRY BLSUMTOD'          -------------------------------- @D1A
 PUNCH ' NAME BLSUMTOD(R)'        -------------------------------- @L1A
 PUNCH ' INCLUDE AOS32(BLSUNOTE)' NOTE SUBCOMMAND                  @L1C
 PUNCH ' ENTRY BLSUNOTE'          -------------------------------- @D1A
 PUNCH ' NAME BLSUNOTE(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSUTSO)'  TSO SUBCOMMAND                   @D3C
 PUNCH ' INCLUDE AOS32(BLSUGWDM)' INSTALLATION EXIT                @01A
 PUNCH ' ENTRY BLSUTSO'           -------------------------------- @D1A
 PUNCH ' NAME BLSUTSO(R)'         --------------------------------
 PUNCH ' INCLUDE AOS32(BLSVASCB)' SCAN ASCB                        @D3C
 PUNCH ' ENTRY BLSVASCB'          -------------------------------- @D1A
 PUNCH ' NAME BLSVASCB(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSVASVT)' SCAN ASVT                        @D3C
 PUNCH ' ENTRY BLSVASVT'          -------------------------------- @D1A
 PUNCH ' NAME BLSVASVT(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSVASXB)' SCAN ASXB                        @D3C
 PUNCH ' ENTRY BLSVASXB'          -------------------------------- @D1A
 PUNCH ' NAME BLSVASXB(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSVCDE)'  SCAN CDE                         @D3C
 PUNCH ' ENTRY BLSVCDE'           -------------------------------- @D1A
 PUNCH ' NAME BLSVCDE(R)'         --------------------------------
 PUNCH ' INCLUDE AOS32(BLSVCVT)'  SCAN CVT                         @L1C
 PUNCH ' ENTRY BLSVCVT'           -------------------------------- @D1A
 PUNCH ' NAME BLSVCVT(R)'         --------------------------------
 PUNCH ' INCLUDE AOS32(BLSVCVT2)' SCAN CVTXTNT2                    @D3C
 PUNCH ' ENTRY BLSVCVT2'          -------------------------------- @D1A
 PUNCH ' NAME BLSVCVT2(R)'        -------------------------------- @L1A
 PUNCH ' INCLUDE AOS32(BLSVIOC)'  SCAN IOCOM                       @D3C
 PUNCH ' ENTRY BLSVIOC'           -------------------------------- @D1A
 PUNCH ' NAME BLSVIOC(R)'         --------------------------------
 PUNCH ' INCLUDE AOS32(BLSVIOX)'  SCAN IOCOM EXTENSION             @D3C
 PUNCH ' ENTRY BLSVIOX'           -------------------------------- @D1A
 PUNCH ' NAME BLSVIOX(R)'         --------------------------------
 PUNCH ' INCLUDE AOS32(BLSVLCCA)' SCAN LCCA                        @D3C
 PUNCH ' ENTRY BLSVLCCA'          -------------------------------- @D1A
 PUNCH ' NAME BLSVLCCA(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSVLCCV)' SCAN LCCAVT                      @D3C
 PUNCH ' ENTRY BLSVLCCV'          -------------------------------- @D1A
 PUNCH ' NAME BLSVLCCV(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSVLPDE)' SCAN LPDE                        @D3C
 PUNCH ' ENTRY BLSVLPDE'          -------------------------------- @D1A
 PUNCH ' NAME BLSVLPDE(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSVPCCA)' SCAN PCCA                        @D3C
 PUNCH ' ENTRY BLSVPCCA'          -------------------------------- @D1A
 PUNCH ' NAME BLSVPCCA(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSVPCCV)' SCAN PCCAVT                      @D3C
 PUNCH ' ENTRY BLSVPCCV'          -------------------------------- @D1A
 PUNCH ' NAME BLSVPCCV(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSVPGTE)' SCAN PAGE TABLE                  @D3C
 PUNCH ' ENTRY BLSVPGTE'          -------------------------------- @D1A
 PUNCH ' NAME BLSVPGTE(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSVPSA)'  SCAN PSA                         @D3C
 PUNCH ' ENTRY BLSVPSA'           -------------------------------- @D1A
 PUNCH ' NAME BLSVPSA(R)'         --------------------------------
 PUNCH ' INCLUDE AOS32(BLSVPVT)'  SCAN PVT                         @D3C
 PUNCH ' ENTRY BLSVPVT'           -------------------------------- @D1A
 PUNCH ' NAME BLSVPVT(R)'         --------------------------------
 PUNCH ' INCLUDE AOS32(BLSVQCBA)' SCAN MAJOR QCB                   @D3C
 PUNCH ' ENTRY BLSVQCBA'          -------------------------------- @D1A
 PUNCH ' NAME BLSVQCBA(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSVQCBB)' SCAN MINOR QCB                   @D3C
 PUNCH ' ENTRY BLSVQCBB'          -------------------------------- @D1A
 PUNCH ' NAME BLSVQCBB(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSVQEL)'  SCAN QEL                         @D3C
 PUNCH ' ENTRY BLSVQEL'           -------------------------------- @D1A
 PUNCH ' NAME BLSVQEL(R)'         --------------------------------
 PUNCH ' INCLUDE AOS32(BLSVRB)'   SCAN RB                          @D3C
 PUNCH ' ENTRY BLSVRB'            -------------------------------- @D1A
 PUNCH ' NAME BLSVRB(R)'          --------------------------------
 PUNCH ' INCLUDE AOS32(BLSVSGTE)' SCAN SEGMENT TABLE               @D3C
 PUNCH ' ENTRY BLSVSGTE'          -------------------------------- @D1A
 PUNCH ' NAME BLSVSGTE(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSVTCB)'  SCAN TCB                         @D3C
 PUNCH ' ENTRY BLSVTCB'           -------------------------------- @D1A
 PUNCH ' NAME BLSVTCB(R)'         --------------------------------
 PUNCH ' INCLUDE AOS32(BLSVUCB)'  SCAN UCB                         @D3C
 PUNCH ' ENTRY BLSVUCB'           -------------------------------- @D1A
 PUNCH ' NAME BLSVUCB(R)'         --------------------------------
 PUNCH ' INCLUDE AOS32(BLSVXTLS)' SCAN XTLST                       @D3C
 PUNCH ' ENTRY BLSVXTLS'          -------------------------------- @D1A
 PUNCH ' NAME BLSVXTLS(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSDIFP0)' PROCESS SYS1.PARMLIB(IPCSPRNN)   @D3C
 PUNCH ' INCLUDE AOS32(BLSUINI1)' IPCS TSO COMMAND INITIALIZATION  @D3C
 PUNCH ' INCLUDE AOS32(BLSUPROP)' OPEN PRINT FILE                  @D3C
 PUNCH ' INCLUDE AOS32(BLSUVSOP)' OPEN IPCSDDIR--PRIMARY MODULE    @D3C
 PUNCH ' INCLUDE AOS32(BLSUVSOQ)' OPEN IPCSDDIR--SECONDARY MODULE  @D3C
 PUNCH ' ORDER BLSUINI1'          -------------------------------- @D2A
 PUNCH ' ENTRY BLSUINI1'          --------------------------------
 PUNCH ' NAME BLSUINI1(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSUINI2)' PROCESSING TASK INITIALIZATION   @D3C
 PUNCH ' INCLUDE AOS32(BLSDDEQP)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSDENQP)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSDSTAE)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSDTIME)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSDVECT)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSEAUTH)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSELPCC)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSELPCL)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSELPCT)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSELPFM)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSELPFR)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSELPOP)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSFBP00)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSFCLOS)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSFCN00)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSFDALL)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSFDEL)'  --------------------------------
 PUNCH ' INCLUDE AOS32(BLSFDERS)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSFDF00)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSFDS00)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSFERAS)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSFFL00)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSFFP00)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSFGD00)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSFGG00)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSFGP00)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSFLALL)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSFLP00)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSFND00)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSFND01)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSFOD00)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSFOPEN)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSFPERA)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSFPERS)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSFPS00)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSFSCRT)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSFSD00)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSFSL00)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSFTL00)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSFUD00)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSFUP00)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSRACC)'  DUMP ACCESS                      @D2C
 PUNCH ' INCLUDE AOS32(BLSRACCL)' DUMP ACCESS                      @D2C
 PUNCH ' INCLUDE AOS32(BLSRACCQ)' DUMP ACCESS                      @D2C
 PUNCH ' INCLUDE AOS32(BLSRADDP)' ADDRESS RESOLUTION               @D3C
 PUNCH ' INCLUDE AOS32(BLSRADDR)' ADDRESS RESOLUTION               @D3C
 PUNCH ' INCLUDE AOS32(BLSRADDS)' ADDRESS RESOLUTION               @D3C
 PUNCH ' INCLUDE AOS32(BLSRADDT)' ADDRESS RESOLUTION               @D3C
 PUNCH ' INCLUDE AOS32(BLSRADDU)' ADDRESS RESOLUTION               @D3C
 PUNCH ' INCLUDE AOS32(BLSRADD1)' ADDRESS RESOLUTION               @D3C
 PUNCH ' INCLUDE AOS32(BLSRADD2)' ADDRESS RESOLUTION               @D3C
 PUNCH ' INCLUDE AOS32(BLSRADD3)' ADDRESS RESOLUTION               @D3C
 PUNCH ' INCLUDE AOS32(BLSRADD4)' ADDRESS RESOLUTION               @D3C
 PUNCH ' INCLUDE AOS32(BLSRCOCL)' CLOSE COPYDUMP INPUT FILE        @L3C
 PUNCH ' INCLUDE AOS32(BLSRDUCC)' CLOSE DUMP                       @D3C
 PUNCH ' INCLUDE AOS32(BLSRDUCK)' CHECK DUMP                       @D3C
 PUNCH ' INCLUDE AOS32(BLSRESAR)' STORE ES RECORD                  @D3C
 PUNCH ' INCLUDE AOS32(BLSRESCK)' CHECK ES RECORD                  @D3C
 PUNCH ' INCLUDE AOS32(BLSRESGC)' GET ES RECORD                    @D3C
 PUNCH ' INCLUDE AOS32(BLSRESGE)' GET ES RECORD                    @D3C
 PUNCH ' INCLUDE AOS32(BLSRESGQ)' GET ES RECORD                    @D3C
 PUNCH ' INCLUDE AOS32(BLSRESGU)' GET ES RECORD                    @D3C
 PUNCH ' INCLUDE AOS32(BLSRESPU)' PUT ES RECORD                    @D3C
 PUNCH ' INCLUDE AOS32(BLSRESSA)' SCAN A BLOCK                     @D3C
 PUNCH ' INCLUDE AOS32(BLSRMSGA)' FORMAT ADDRESS SPACE             @D3C
 PUNCH ' INCLUDE AOS32(BLSRMSGB)' FORMAT STORAGE ATTRIBUTES        @D3C
 PUNCH ' INCLUDE AOS32(BLSRMSGD)' FORMAT DATA TYPE                 @D3C
 PUNCH ' INCLUDE AOS32(BLSRPADS)' PROCESS DISPLAY OPTIONS          @D3C
 PUNCH ' INCLUDE AOS32(BLSRRAAR)' STORE RA RECORD                  @D3C
 PUNCH ' INCLUDE AOS32(BLSRRACR)' MAP REAL STORAGE                 @D3C
 PUNCH ' INCLUDE AOS32(BLSRRACV)' MAP VIRTUAL STORAGE              @D3C
 PUNCH ' INCLUDE AOS32(BLSRRAGE)' GET RA RECORD                    @D3C
 PUNCH ' INCLUDE AOS32(BLSRSAAR)' STORE RA RECORD                  @D3C
 PUNCH ' INCLUDE AOS32(BLSRSAG)'  PROCESS RA RECORD                @D3C
 PUNCH ' INCLUDE AOS32(BLSRSAGC)' GET RA RECORD                    @D3C
 PUNCH ' INCLUDE AOS32(BLSRSAGE)' GET RA RECORD                    @D3C
 PUNCH ' INCLUDE AOS32(BLSRSAGN)' GET RA RECORD                    @D3C
 PUNCH ' INCLUDE AOS32(BLSRSAGQ)' GET RA RECORD                    @D3C
 PUNCH ' INCLUDE AOS32(BLSRSAGU)' GET RA RECORD                    @D3C
 PUNCH ' INCLUDE AOS32(BLSRSAPC)' IDENTIFY BLOCK IN ERROR          @D3C
 PUNCH ' INCLUDE AOS32(BLSRSAPU)' PUT RA RECORD                    @D3C
 PUNCH ' INCLUDE AOS32(BLSRVECT)' RVT                              @D3C
 PUNCH ' INCLUDE AOS32(BLSTB)'    FORMAT BIT                       @D3C
 PUNCH ' INCLUDE AOS32(BLSTC)'    FORMAT CHARACTER                 @D3C
 PUNCH ' INCLUDE AOS32(BLSTF)'    FORMAT SIGNED                    @D3C
 PUNCH ' INCLUDE AOS32(BLSTM)'    FORMAT STRUCTURE                 @D3C
 PUNCH ' INCLUDE AOS32(BLSTR)'    FORMAT REGISTERS                 @D3C
 PUNCH ' INCLUDE AOS32(BLSTU)'    FORMAT AREA                      @D3C
 PUNCH ' INCLUDE AOS32(BLSTY)'    FORMAT UNSIGNED                  @D3C
 PUNCH ' INCLUDE AOS32(BLST01)'   FETCH, FORMAT, AND DISPLAY       @D3C
 PUNCH ' INCLUDE AOS32(BLST02)'   FORMAT AND DISPLAY               @D3C
 PUNCH ' INCLUDE AOS32(BLST03)'   DISPLAY BASIC HEADER MESSAGES    @D3C
 PUNCH ' INCLUDE AOS32(BLST04)'   DISPLAY MACHINE                  @D3C
 PUNCH ' INCLUDE AOS32(BLST05)'   FORMAT AND DISPLAY STORAGE       @D3C
 PUNCH ' INCLUDE AOS32(BLST06)'   FORMAT AND DISPLAY STORAGE       @D3C
 PUNCH ' INCLUDE AOS32(BLST08)'   FETCH, FORMAT, & DISPLAY STORAGE @D3C
 PUNCH ' INCLUDE AOS32(BLSUBLDD)' DELETE PROGRAM BLDL TABLE        @D3C
 PUNCH ' INCLUDE AOS32(BLSUBLDL)' IPCS PROGRAM BLDL SERVICE        @D3C
 PUNCH ' INCLUDE AOS32(BLSUGWDM)' INSTALLATION EXIT                @01A
 PUNCH ' INCLUDE AOS32(BLSUMON)'  MONITOR MAIN MODULE              @D3C
 PUNCH ' INCLUDE AOS32(BLSUMONA)' MONITOR--ATTACH TSO COMMAND      @D3C
 PUNCH ' INCLUDE AOS32(BLSUMONC)' MONITOR--IMPLICIT EXEC           @D3C
 PUNCH ' INCLUDE AOS32(BLSUMOND)' MONITOR--CALL IPCS SUBCOMMAND    @D3C
 PUNCH ' INCLUDE AOS32(BLSUMONI)' MONITOR--STAX EXIT               @D3C
 PUNCH ' INCLUDE AOS32(BLSUMONL)' MONITOR--ROUTER                  @D3C
 PUNCH ' INCLUDE AOS32(BLSUMONT)' MONITOR--TSO COMMAND             @D3C
 PUNCH ' INCLUDE AOS32(BLSUMONX)' MONITOR--TMP SIMULATOR           @D3C
 PUNCH ' INCLUDE AOS32(BLSUMON2)' MONITOR--IKJSCAN INTERFACE       @D3C
 PUNCH ' INCLUDE AOS32(BLSUMPKN)' COMPRESS MESSAGE TEXT            @D3C
 PUNCH ' INCLUDE AOS32(BLSUMPK1)' COMPRESS MESSAGE TEXT            @D3C
 PUNCH ' INCLUDE AOS32(BLSUPARI)' IKJPARS INTERFACE                @D3C
 PUNCH ' INCLUDE AOS32(BLSUPARU)' PROCESS ROUTING OPERANDS         @D3C
 PUNCH ' INCLUDE AOS32(BLSUPGMC)' CALL NON-RESIDENT IPCS PROGRAM   @D3C
 PUNCH ' INCLUDE AOS32(BLSUPGMD)' DELETE IPCS PROGRAM              @D3C
 PUNCH ' INCLUDE AOS32(BLSUPGML)' LOAD IPCS PROGRAM                @D3C
 PUNCH ' INCLUDE AOS32(BLSUPGMR)' CALL NON-RESIDENT IPCS PROGRAM   @D3C
 PUNCH ' INCLUDE AOS32(BLSUPRTA)' PRINT MESSAGE                    @D3C
 PUNCH ' INCLUDE AOS32(BLSUPRTN)' PRINT MESSAGE                    @D3C
 PUNCH ' INCLUDE AOS32(BLSUPRTT)' PRINT SUBTITILE                  @D3C
 PUNCH ' INCLUDE AOS32(BLSUPUTA)' ROUTE MESSAGE                    @D3C
 PUNCH ' INCLUDE AOS32(BLSUPUTC)' ROUTE MESSAGE                    @D3C
 PUNCH ' INCLUDE AOS32(BLSUPUTD)' ROUTE MESSAGE                    @D3C
 PUNCH ' INCLUDE AOS32(BLSUPUTO)' ROUTE MESSAGE                    @D3C
 PUNCH ' INCLUDE AOS32(BLSUPUTT)' ROUTE MESSAGE                    @D3C
 PUNCH ' INCLUDE AOS32(BLSUPUTV)' ROUTE MESSAGE                    @D3C
 PUNCH ' INCLUDE AOS32(BLSUTRMA)' TRANSMIT MESSAGE                 @D3C
 PUNCH ' INCLUDE AOS32(BLSUVECT)' BVT                              @D3C
 PUNCH ' INCLUDE AOS32(BLSUVSAR)' STORE IPCSDDIR RECORD            @D3C
 PUNCH ' INCLUDE AOS32(BLSUVSCR)' CREATE AN RPL                    @D3C
 PUNCH ' INCLUDE AOS32(BLSUVSEN)' ENDREQ INTERFACE                 @D3C
 PUNCH ' INCLUDE AOS32(BLSUVSER)' ERASE INTERFACE                  @D3C
 PUNCH ' INCLUDE AOS32(BLSUVSGE)' GET INTERFACE                    @D3C
 PUNCH ' INCLUDE AOS32(BLSUVSGU)' GET INTERFACE                    @D3C
 PUNCH ' INCLUDE AOS32(BLSUVSMR)' MODIFY AN RPL                    @D3C
 PUNCH ' INCLUDE AOS32(BLSUVSPO)' POINT INTERFACE                  @D3C
 PUNCH ' INCLUDE AOS32(BLSUVSPU)' PUT INTERFACE                    @D3C
 PUNCH ' INCLUDE AOS32(BLSUZZ2R)' REFRESH TASK VARIABLE            @D3C
 PUNCH ' ORDER BLSUINI2,BLSRCOCL' -------------------------------- @L3C
 PUNCH ' ORDER BLSRDUCC,BLSUBLDD,BLSUMONI,BLSRVECT'                @L3A
 PUNCH ' ORDER BLSUVECT,BLSUMON2,BLSUMON,BLSUMONL,BLSUMOND'
 PUNCH ' ORDER BLSUGWDM'          INSTALLATION EXIT                @01A
 PUNCH ' ORDER BLSUZZ2R,BLSRDUCK,BLSUPARI,BLSUBLDL,BLSUPGMC'
 PUNCH ' ORDER BLSUPGMD,BLSUPGML,BLSUPGMR,BLSUMONA,BLSUMONC'
 PUNCH ' ORDER BLSUMONT,BLSUMONX,BLSUMPK1,BLSUMPKN,BLSUPARU'
 PUNCH ' ORDER BLSUPUTO,BLSUPUTV,BLSUPUTA,BLSUTRMA,BLSUPRTA'
 PUNCH ' ORDER BLSRPADS,BLSRMSGA,BLSRMSGB,BLSRMSGD,BLST01'
 PUNCH ' ORDER BLST03,BLSTU,BLSTM,BLSTB,BLSTC'
 PUNCH ' ORDER BLST08,BLSRACC,BLSRACCQ,BLSRRAAR,BLSRRAGE'
 PUNCH ' ORDER BLSRRACR,BLSRRACV,BLSUVSAR,BLSUVSCR,BLSUVSEN'
 PUNCH ' ORDER BLSUVSER,BLSUVSGE,BLSUVSPO,BLSUVSPU,BLSRESAR'
 PUNCH ' ORDER BLSRESCK,BLSRESGC,BLSRESGE,BLSRESGQ,BLSRESGU'
 PUNCH ' ORDER BLSRESPU,BLSRESSA' -------------------------------- @L1C
 PUNCH ' ORDER BLSRSAAR,BLSRSAGC,BLSRSAGE,BLSRSAG'                 @L1A
 PUNCH ' ORDER BLSRSAGN,BLSRSAGQ,BLSRSAGU,BLSRSAPC,BLSRSAPU'
 PUNCH ' ORDER BLSRADDP,BLSRADDR,BLSRADDS,BLSRADDT,BLSRADDU'
 PUNCH ' ORDER BLSRADD1,BLSRADD2,BLSRADD3,BLSRADD4,BLSTF'
 PUNCH ' ORDER BLSTR,BLSTY,BLST02,BLST04,BLST05'
 PUNCH ' ORDER BLST06,BLSUPRTN,BLSUPRTT,BLSUPUTC,BLSUPUTD'
 PUNCH ' ORDER BLSUVSGU,BLSUVSMR,BLSRACCL,BLSUPUTT,BLSDVECT'
 PUNCH ' ENTRY BLSUINI2'          --------------------------------
 PUNCH ' NAME BLSUINI2(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSU)'     IPCS TSO COMMAND                 @D3C
 PUNCH ' INCLUDE AOS32(BLSCAAMS)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSCABLD)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSCADST)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSCADYN)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSCAINT)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSCALOC)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSCAMER)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSCAMIN)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSCAMOD)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSCAMPR)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSCANAL)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSCANLE)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSCANLI)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSCCLSE)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSCENDD)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSCERSE)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSCFAMS)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSCFDYN)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSCFREE)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSCGETT)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSCGMF)'  --------------------------------
 PUNCH ' INCLUDE AOS32(BLSCHOK)'  --------------------------------
 PUNCH ' INCLUDE AOS32(BLSCOPEN)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSCPOIN)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSCPUTT)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSCRECV)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSCRFM)'  --------------------------------
 PUNCH ' INCLUDE AOS32(BLSCRQST)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSCRTCB)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSCSETT)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSCVALT)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSDADSD)' ALLOCATE DATA SET DIRECTORY      @D3C
 PUNCH ' INCLUDE AOS32(BLSDAPDR)' ALLOCATE PROBLEM DIRECTORY       @D3C
 PUNCH ' INCLUDE AOS32(BLSDENQ0)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSDFDSD)' FREE DATA SET DIRECTORY          @D3C
 PUNCH ' INCLUDE AOS32(BLSDFPDR)' FREE PROBLEM DIRECTORY           @D3C
 PUNCH ' INCLUDE AOS32(BLSDMSGS)' MESSAGE TEXT                     @D3C
 PUNCH ' INCLUDE AOS32(BLSDMSG0)' ROUTE MESSAGE                    @D3C
 PUNCH ' INCLUDE AOS32(BLSDWAIT)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSRDUCL)' CLOSE/FREE DUMP DATA SET         @D3C
 PUNCH ' INCLUDE AOS32(BLSUALLO)' AUTOMATIC STORAGE POOL MANAGER   @D3C
 PUNCH ' INCLUDE AOS32(BLSUDYNA)' SVC 99 INTERFACE                 @D3C
 PUNCH ' INCLUDE AOS32(BLSUIT01)' INTER-TASK SVC 99 (DYNALLOC)     @D3C
 PUNCH ' INCLUDE AOS32(BLSUIT02)' INTER-TASK SVC 19 (OPEN)         @D3C
 PUNCH ' INCLUDE AOS32(BLSUIT03)' INTER-TASK SVC 20 (CLOSE)        @D3C
 PUNCH ' INCLUDE AOS32(BLSUPRCL)' CLOSE PRINT                      @D3C
 PUNCH ' INCLUDE AOS32(BLSUPUTN)' ROUTE MESSAGE                    @D3C
 PUNCH ' INCLUDE AOS32(BLSUSTAE)' MASTER TASK ESTAE EXIT           @D3C
 PUNCH ' INCLUDE AOS32(BLSUSTAI)' PROCESSING TASK ESTAI EXIT       @D3C
 PUNCH ' INCLUDE AOS32(BLSUTRMN)' TRANSMIT MESSAGE                 @D3C
 PUNCH ' INCLUDE AOS32(BLSUTRMO)' TRANSMIT MESSAGE                 @D3C
 PUNCH ' INCLUDE AOS32(BLSUTRMV)' TRANSMIT MESSAGE                 @D3C
 PUNCH ' INCLUDE AOS32(BLSUVSCL)' CLOSE IPCSDDIR                   @D3C
 PUNCH ' INCLUDE AOS32(BLSUZZ2C)' CREATE TASK VARIABLE             @D3C
 PUNCH ' INCLUDE AOS32(BLSUZZ2D)' DELETE TASK VARIABLE             @D3C
 PUNCH ' ORDER BLSU'              -------------------------------- @D3A
 PUNCH ' ENTRY BLSU'              --------------------------------
 PUNCH ' ALIAS IPCS'              --------------------------------
 PUNCH ' NAME BLSU(R)'            --------------------------------
 PUNCH ' INCLUDE AOS32(BLSDC070)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSDC128)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSDC600)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSDDT00)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSDSV00)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSDTIME)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSDTM00)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSEADPR)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSEADP1)' --------------------------------
 PUNCH ' ENTRY BLSEADPR'          --------------------------------
 PUNCH ' NAME BLSEADPR(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSEDELC)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSEDEL0)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSEDEL1)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSFDDDP)' --------------------------------
 PUNCH ' ENTRY BLSEDEL0'          --------------------------------
 PUNCH ' NAME BLSEDEL0(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSDPC00)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSDSV00)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSELPDR)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSELP00)' --------------------------------
 PUNCH ' ENTRY BLSELP00'          --------------------------------
 PUNCH ' NAME BLSELP00(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSDC070)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSDC128)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSDC600)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSDDT00)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSDSV00)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSDTIME)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSDTM00)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSEADP1)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSEMDPR)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSEMDP1)' --------------------------------
 PUNCH ' ENTRY BLSEMDPR'          --------------------------------
 PUNCH ' NAME BLSEMDPR(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSDC600)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSFAD00)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSFAV00)' --------------------------------
 PUNCH ' ENTRY BLSFAD00'          --------------------------------
 PUNCH ' NAME BLSFAD00(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSELPDS)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSFCONF)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSFDD00)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSFLONE)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSFPARS)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSFVRFY)' --------------------------------
 PUNCH ' ENTRY BLSFDD00'          --------------------------------
 PUNCH ' NAME BLSFDD00(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSFLD00)' --------------------------------
 PUNCH ' ENTRY BLSFLD00'          --------------------------------
 PUNCH ' NAME BLSFLD00(R)'        --------------------------------
 PUNCH ' INCLUDE AOS32(BLSDC600)' --------------------------------
 PUNCH ' INCLUDE AOS32(BLSFMD00)' --------------------------------
 PUNCH ' ENTRY BLSFMD00'          --------------------------------
 PUNCH ' NAME BLSFMD00(R)'        --------------------------------
 PUNCH '/*'
.* ************************************************************
.*
.*  THIS SECOND LINKEDIT REQUIRES THE REUS ATTRIBUTE
.*  WITHOUT THE RENT ATTRIBUTE FOR THE LOAD BEING CREATED
.*
.* ************************************************************
&SGCTRLC(7) SETC  '&SGCTRLC(23)'
&SGCTRLC(8) SETC  '&SGCTRLC(24)'
&SGCTRLC(9) SETC  'CMDLIB'
&SGCTRLC(10) SETC ',LET'
&SGCTRLC(12) SETC ',REUS'
&SGCTRLC(13) SETC ',SIZE=(100K,20K)'
         COPY SGLEDPK1
 PUNCH '//AOS32 DD DSN=SYS1.AOS32,DISP=SHR'
         COPY SGLEDPK2
 PUNCH ' INCLUDE AOS32(BLSUPUT)'  INITIALIZED IPCS DATA AREAS      @D3C
 PUNCH ' ENTRY BLSUPUT'           --------------------------------
 PUNCH ' ALIAS BLSUZZ1'           --------------------------------
 PUNCH ' NAME BLSUPUT(R)'         --------------------------------
 PUNCH '/*'
         MEND
