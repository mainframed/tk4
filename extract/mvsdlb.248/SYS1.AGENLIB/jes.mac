         MACRO
         JES   &LOCLJES=NO,&PROCID=JES3,&PARMID=00,                    *
               &RDR=00C,                                               *
               &PRT=((00E,1403,PN)),                                   *
               &PUN=00D,                                               *
               &CNS=((01F,3215)),                                      *
               &D3330=,&D2314=,&T3400=,&T2400=
.****** START OF SPECIFICATIONS **************************************
.*
.* MODULE NAME - JES
.*
.* DESCRIPTIVE NAME - JES CONFIGURATION GENERATION
.*
.* COPYRIGHT - NONE
.*
.* STATUS - CHANGE LEVEL 03
.*
.* FUNCTION -
.*       THE JES MACRO IS USED TO SPECIFY THE CONFIGURATION FOR THE
.*       JES SUBSYSTEM.
.*
.* NOTES - N/A
.*
.* MODULE TYPE - MACRO
.*
.* ENTRY POINT - N/A
.*
.* INPUT -
.*         THE FOLLOWING PARAMETERS MAY BE CODED ON THE CALL TO
.*         JES
.*             &LOCLJES - SPECIFIES WHETHER THE JES SUBSYSTEM WILL BE
.*                        USED AS A LOCAL PROCESSOR
.*                        DEFAULT IS NO
.*             &PROCID  - SPECIFIES THE NAME OF THE JES PROCEDURE IN
.*                        PROCLIB
.*                        DEFAULT IS JES3
.*             &PARMID  - SPECIFIES THE PARMLIB MEMBER SUFFIX FOR THE
.*                        JES INITIALIZATION DECK
.*                        DEFAULT IS 00
.*             &RDR     - DEFINES THE READERS FOR JES
.*                        DEFAULT IS 00C
.*             &PRT     - DEFINES THE PRINTERS FOR JES
.*                        DEFAULT IS (00E,1403,PN)
.*             &PUN     - DEFINES THE PUNCHES FOR JES
.*                        DEFAULT IS 00D
.*             &CNS     - DEFINES THE CONSOLES FOR JES
.*                        DEFAULT IS (01F,3215)
.*             &D3330   - DEFINES THE 3330 DISK DRIVES FOR JES
.*             &D2314   - DEFINES THE 2414 DISK DRIVES FOR JES
.*             &T3400   - DEFINES THE 3400 TAPE DRIVES FOR JES
.*             &T2400   - DEFINES THE 2400 TAPE DRIVES FOR JES
.*
.* OUTPUT -
.*       THE GLOBALS USED ARE -
.*             &SGMENTB(46) - ENTRY SWITCH
.*             &SGJLOCC     - LOCAL JES 'YES' OR 'NO'
.*             &SGJPARC     - PARMLIB MEMBER ID 'XX'
.*             &SGJPROC     - PROCLIB ID 'XXXX'
.*             &SGJRDRC(63) - JES READER ADDRESS 'NNN'
.*             &SGJPRTC(63) - JES PRINTER ADDR.TYPE.TRAIN 'NNNMMMMQQQ'
.*             &SGJPUNC(63) - JES PUNCH ADDRESS 'NNN'
.*             &SGJCNSC(63) - JES CONSOLE ADDRESS.TYPE 'NNNMMMM'
.*             &SGJD33C(63) - JES 3330 ADDRESSES 'NNNMMM ETC. '
.*             &SGJD23C(63) - JES 2314 ADDRESSES 'NNNMMM ETC. '
.*             &SGJT34C(63) - JES 3400 ADDRESSES 'NNNMMM ETC. '
.*             &SGJT24C(63) - JES 2400 ADDRESSES 'NNNMMM ETC. '
.*
.*       THE LOCALS USED ARE -
.*             &A - INDEX
.*             &B - INDEX OR SUBPARM LENGTH OR POINTER TO SUBPARM CHAR
.*                  OR CONTENTS OF INCR RANGE FIELD
.*             &C - SUBPARM COUNT
.*             &D - POINTER TO 1ST SUBPARM CHAR
.*             &ADDRC - DEVICE ADDRESS
.*             &DEVC - DEVICE TYPE
.*             &TRNC - PRINT TRAIN
.*             &MSGC - MESSAGE VALUE
.*             &LENGTH - SUBPARM LENGTH
.*             &W - CHAR TO BE CHECKED
.*             &X - CHAR TO BE CHECKED OR CONTENTS OF INCR RANGE FIELD
.*             &Y - CHAR TO BE CHECKED
.*             &Z - CHAR TO BE CHECKED
.*
.* EXIT, NORMAL - N/A
.*
.* EXIT, ERROR - N/A
.*
.* EXTERNAL REFERENCES - N/A
.*
.* TABLES - N/A
.*
.* MACROS - NONE
.*
.* CHANGE ACTIVITY - ZA08263
.*
.******* END OF SPECIFICATIONS ***************************************
.*
         COPY  SGSYSPAK
         LCLA  &A,&B,&C,&D,&LENGTH
         LCLB  &MULT
         LCLC  &ADDRC,&DEVC,&TRNC,&MSGC,&W,&X,&Y,&Z
.*
.********* CHECK ENTRY **********************************************
.*
         AIF   (&SGMENTB(46)).ERR1          CHECK PREVIOUS ENTRY
&SGMENTB(46) SETB 1                         SET ENTRY SWITCH
.*
.********* LOCAL JES - &LOCLJES='YES' OR 'NO' ***********************
.*
.LOCL    AIF   ('&LOCLJES' EQ 'NO').NOLOC   NO LOCAL JES
         AIF   ('&LOCLJES' NE 'YES').ERR2   INVALID PARM
         AGO   .LOCMSG
.NOLOC   ANOP
&MSGC    SETC  'NOT'
.LOCMSG MNOTE  *,'     THE SYSTEM WILL &MSGC BE USED AS A JES LOCAL PRO*
               CESSOR'
&SGJLOCC SETC  '&LOCLJES'                   SET GLOBAL
.LOCLEND ANOP                               &LOCLJES DONE
.*
.********** PROC ID - &PROCID='XXXX' *********************************
.*
.PROC    AIF   (K'&PROCID GT 4 OR K'&PROCID EQ 0).ERR3 INVALID LENGTH
&X       SETC  '&PROCID'(1,1)               GET FIRST CHAR
         AIF   ('&X' LT 'A' OR '&X' GT 'Z' OR ('&X' GT 'J' AND '&X' LT *
               'K') OR ('&X' GT 'R' AND '&X' LT 'S')).ERR3  CHECK FOR
.*                                                         ALPHA
&SGJPROC SETC  '&PROCID'                    SET GLOBAL
 MNOTE *,'     &PROCID IS THE NAME OF THE JES PROCEDURE IN PROCLIB'
.PROCEND ANOP                               &PROCID DONE
.*
.********** PARM ID - &PARMID='XX' **********************************
.*
.PARM    AIF   (K'&PARMID NE 2).ERR4        NOT RIGHT LENGTH
 MNOTE *,'     &PARMID IS THE PARMLIB MEMBER SUFFIX FOR THE JES INITIAL*
               IZATION DECK'
&SGJPARC SETC  '&PARMID'                    SET GLOBAL
.PARMEND ANOP                               &PARMID DONE
.*
.********** READER - &RDR(&B)='NNN' *********************************
.*
.RDR     AIF   (N'&RDR EQ 0).RDREND         NO READER SPECIFIED
         AIF   (N'&RDR GT 63).ERR5          TOO MANY READERS
&B       SETA  1                            INITIALIZE COUNT
.RDRNXT0 AIF   (T'&RDR(&B) EQ 'O').ERR6A    FIELD OMITTED
         AIF   (K'&RDR(&B) NE 3).ERR6       INVALID ADDRESS
&X       SETC  '&RDR(&B)'(1,1)              1ST ADDRESS CHAR
&Y       SETC  '&RDR(&B)'(2,1)              2ND ADDRESS CHAR
&Z       SETC  '&RDR(&B)'(3,1)              3RD ADDRESS CHAR
 AIF (NOT(('&X' GE '0' AND '&X' LE '9')OR('&X' GE 'A' AND '&X' LE 'F'))*
               ).ERR6                       NOT HEX
 AIF (NOT(('&Y' GE '0' AND '&Y' LE '9')OR('&Y' GE 'A' AND '&Y' LE 'F'))*
               ).ERR6                       NOT HEX
 AIF (NOT(('&Z' GE '0' AND '&Z' LE '9')OR('&Z' GE 'A' AND '&Z' LE 'F'))*
               ).ERR6                       NOT HEX
&SGJRDRC(&B) SETC '&RDR(&B)'                SET GLOBAL
 MNOTE *,'     &RDR(&B) WILL BE ASSIGNED TO READER &B (RD&RDR(&B))'
.RDRNXT1 ANOP                               ONE READER DONE
&B       SETA  &B+1                         INCREMENT COUNT
         AIF   (&B LE N'&RDR).RDRNXT0       GO GET NEXT RDR
.RDREND  ANOP                               ALL READERS DONE
.*
.********** PRINTER - &PRT(&A)='(NNN,XXXX,TT)' OR '(NNN,XXXX,TTT)' ***
.*
.PRT     AIF   (N'&PRT EQ 0).PRTEND         NO PRINTER SPECIFIED
         AIF   (N'&PRT GT 63).ERR7          TOO MANY PRINTERS
&A       SETA  1                            SET COUNT
.PRTNXT0 AIF   (T'&PRT(&A) EQ 'O').ERR8     FIELD OMITTED
&B       SETA  1                            SET INDEX
&C       SETA  1                            SET SUBPARM COUNT
.PRTNXT1 ANOP
&D       SETA  &B                           SAVE START OF SUBPARM
.PRTNXT2 AIF   ('&PRT(&A)'(&B,1) EQ ',').PRTNXT3 FOUND SUBPARM END
         AIF   ('&PRT(&A)'(&B,1) EQ ')').PRTNXT3 FOUND SUBPARM END
&B       SETA  &B+1                         SET INDEX TO NEXT CHAR
         AIF   (&B LE K'&PRT(&A)).PRTNXT2   LOOP TILL SUBPARM END
         AGO   .ERR9                        END OF FIELD PASSED
.PRTNXT3 AIF   (&C EQ 3 AND '&PRT(&A)'(&B,1) EQ ')').PRTTHI PRINT TRAIN
         AIF   (&C EQ 2 AND '&PRT(&A)'(&B,1) EQ ',').PRTSEC DEVICE TYPE
         AIF   (&C EQ 1 AND '&PRT(&A)'(&B,1) EQ ',').PRTFIR DEVICE ADDR
         AGO   .ERR9                        OTHERWISE ERROR
.PRTFIR  ANOP                               CHECK OUT DEVICE ADDR
&B       SETA   &B+1                        BUMP PAST COMMA
         AIF   (&B NE 6).ERR10              CHECK ADDR LENGTH
&ADDRC   SETC  '&PRT(&A)'(2,3)              SAVE ADDRESS
&X       SETC  '&ADDRC'(1,1)                1ST ADDRESS CHAR
&Y       SETC  '&ADDRC'(2,1)                2ND ADDRESS CHAR
&Z       SETC  '&ADDRC'(3,1)                3RD ADDRESS CHAR
 AIF (NOT(('&X' GE '0' AND '&X' LE '9')OR('&X' GE 'A' AND '&X' LE 'F'))*
               ).ERR10                      NOT HEX
 AIF (NOT(('&Y' GE '0' AND '&Y' LE '9')OR('&Y' GE 'A' AND '&Y' LE 'F'))*
               ).ERR10                      NOT HEX
 AIF (NOT(('&Z' GE '0' AND '&Z' LE '9')OR('&Z' GE 'A' AND '&Z' LE 'F'))*
               ).ERR10                      NOT HEX
&C       SETA  &C+1                         INCREMENT SUBPARM COUNT
         AGO   .PRTNXT1                     GET NEXT SUBPARM
.PRTSEC  ANOP                               CHECK OUT DEVICE TYPE
&B       SETA  &B+1                         BUMP PAST COMMA
         AIF   (&B-&D NE 5).ERR11           CHECK LENGTH
&DEVC    SETC  '&PRT(&A)'(&D,4)             SAVE DEVICE TYPE
&W       SETC  '&DEVC'(1,1)                 1ST DEVICE TYPE CHAR
&X       SETC  '&DEVC'(2,1)                 2ND DEVICE TYPE CHAR
&Y       SETC  '&DEVC'(3,1)                 3RD DEVICE TYPE CHAR
&Z       SETC  '&DEVC'(4,1)                 4TH DEVICE TYPE CHAR
         AIF   (NOT('&W' GE '0' AND '&W' LE '9')).ERR11 NOT NUMERIC
         AIF   (NOT('&X' GE '0' AND '&X' LE '9')).ERR11 NOT NUMERIC
         AIF   (NOT('&Y' GE '0' AND '&Y' LE '9')).ERR11 NOT NUMERIC
         AIF   (NOT('&Z' GE '0' AND '&Z' LE '9')).ERR11 NOT NUMERIC
&C       SETA  &C+1                         INCREMENT SUBPARM COUNT
         AGO   .PRTNXT1                     GET NEXT SUB PARM
.PRTTHI  AIF   (&B-&D LT 2 OR &B-&D GT 3).ERR12 CHECK TRAIN LENGTH
&TRNC    SETC  '&PRT(&A)'(&D,&B-&D)         GET TRAIN VALUE
         AIF   (&B LT K'&PRT(&A)).ERR9      TOO MANY SUBPARMS
 MNOTE *,'     &ADDRC IS THE ADDRESS ASSIGNED TO PRINTER &A (PR&ADDRC)'
 MNOTE *,'     &DEVC IS THE DEVICE TYPE ASSIGNED TO PRINTER &A (PR&ADDR*
               C)'
 MNOTE *,'     &TRNC IS THE PRINT TRAIN ASSIGNED TO PRINTER &A (PR&ADDR*
               C)'
&SGJPRTC(&A) SETC '&ADDRC&DEVC&TRNC'        SET GLOBAL
.PRTNXT4 ANOP                               ONE PRINTER DONE
&A       SETA  &A+1                         INCREMENT COUNT
         AIF   (&A LE N'&PRT).PRTNXT0       GO GET NEXT PRINTER
.PRTEND  ANOP                               ALL PRINTERS DONE
.*
.********** PUNCH - &PUN(&B)='NNN' ***********************************
.*
.PUN     AIF   (N'&PUN EQ 0).PUNEND         NO PUNCH SPECIFIED
         AIF   (N'&PUN GT 63).ERR13         TOO MANY PUNCHES
&B       SETA  1                            SET COUNT
.PUNNXT0 AIF   (T'&PUN(&B) EQ 'O').ERR14A   FIELD OMITTED
         AIF   (K'&PUN(&B) NE 3).ERR14      INVALID ADDRESS
&X       SETC  '&PUN(&B)'(1,1)              1ST ADDRESS CHAR
&Y       SETC  '&PUN(&B)'(2,1)              2ND ADDRESS CHAR
&Z       SETC  '&PUN(&B)'(3,1)              3RD ADDRESS CHAR
 AIF (NOT(('&X' GE '0' AND '&X' LE '9')OR('&X' GE 'A' AND '&X' LE 'F'))*
               ).ERR14                      NOT HEX
 AIF (NOT(('&Y' GE '0' AND '&Y' LE '9')OR('&Y' GE 'A' AND '&Y' LE 'F'))*
               ).ERR14                      NOT HEX
 AIF (NOT(('&Z' GE '0' AND '&Z' LE '9')OR('&Z' GE 'A' AND '&Z' LE 'F'))*
               ).ERR14                      NOT HEX
&SGJPUNC(&B) SETC '&PUN(&B)'                SET GLOBAL
 MNOTE *,'     &PUN(&B) WILL BE ASSIGNED TO PUNCH &B (PU&PUN(&B))'
.PUNNXT1 ANOP                               ONE PUNCH DONE
&B       SETA  &B+1                         INCREMENT COUNT
         AIF   (&B LE N'&PUN).PUNNXT0       GO GET NEXT PUNCH  @ZA08263
.PUNEND  ANOP                               ALL PUNCHES DONE
.*
.********** CONSOLE - &CONSOLE(&A)='(NNN,XXXX)' **********************
.*
.CNS     AIF   (N'&CNS EQ 0).CNSEND         NO CONSOLE SPECIFIED
         AIF   (N'&CNS GT 63).ERR15         TOO MANY CONSOLES
&A       SETA  1                            SET COUNT
.CNSNXT0 AIF   (T'&CNS(&A) EQ 'O').ERR16    FIELD OMITTED
         AIF   (K'&CNS(&A) NE 10).ERR17     IMPROPER LENGTH
&B       SETA  1                            SET INDEX
&C       SETA  1                            SET SUBPARM COUNT
.CNSNXT1 ANOP
&D       SETA  &B                           SAVE SUBPARM START
.CNSNXT2 AIF   ('&CNS(&A)'(&B,1) EQ ',').CNSNXT3 SUBPARM END
         AIF   ('&CNS(&A)'(&B,1) EQ ')').CNSNXT3 SUBPARM END
&B       SETA  &B+1                         INCREMENT INDEX
         AIF   (&B LE K'&CNS(&A)).CNSNXT2   GO CHECK NEXT CHARACTER
         AGO   .ERR17                       ERROR
.CNSNXT3 AIF   (&C EQ 1 AND '&CNS(&A)'(&B,1) EQ ',').CNSFIR DEVICE ADDR
         AIF   (&C EQ 2 AND '&CNS(&A)'(&B,1) EQ ')').CNSSEC DEVICE TYPE
         AGO   .ERR17                       OTHERWISE ERROR
.CNSFIR  ANOP                               DEVICE ADDRESS
&B       SETA  &B+1                         BUMP PAST ','
         AIF   (&B NE 6).ERR18              CHECK ADDR LENGTH
&ADDRC   SETC  '&CNS(&A)'(2,3)              SAVE ADDRESS
&X       SETC  '&ADDRC'(1,1)                1ST ADDRESS CHAR
&Y       SETC  '&ADDRC'(2,1)                2ND ADDRESS CHAR
&Z       SETC  '&ADDRC'(3,1)                3RD ADDRESS CHAR
 AIF (NOT(('&X' GE '0' AND '&X' LE '9')OR('&X' GE 'A' AND '&X' LE 'F'))*
               ).ERR18                      NOT HEX
 AIF (NOT(('&Y' GE '0' AND '&Y' LE '9')OR('&Y' GE 'A' AND '&Y' LE 'F'))*
               ).ERR18                      NOT HEX
 AIF (NOT(('&Z' GE '0' AND '&Z' LE '9')OR('&Z' GE 'A' AND '&Z' LE 'F'))*
               ).ERR18                      NOT HEX
&C       SETA  &C+1                         INCREMENT SUBPARM COUNT
         AGO   .CNSNXT1                     GET NEXT SUBPARM
.CNSSEC  AIF   (&B-&D NE 4).ERR19           CHECK DEVICE TYPE LENGTH
&DEVC    SETC  '&CNS(&A)'(&D,4)             SAVE DEVICE TYPE
&W       SETC  '&DEVC'(1,1)                 1ST DEVICE TYPE CHAR
&X       SETC  '&DEVC'(2,1)                 2ND DEVICE TYPE CHAR
&Y       SETC  '&DEVC'(3,1)                 3RD DEVICE TYPE CHAR
&Z       SETC  '&DEVC'(4,1)                 4TH DEVICE TYPE CHAR
         AIF   (NOT('&W' GE '0' AND '&W' LE '9')).ERR19 NOT NUMERIC
         AIF   (NOT('&X' GE '0' AND '&X' LE '9')).ERR19 NOT NUMERIC
         AIF   (NOT('&Y' GE '0' AND '&Y' LE '9')).ERR19 NOT NUMERIC
         AIF   (NOT('&Z' GE '0' AND '&Z' LE '9')).ERR19 NOT NUMERIC
 MNOTE *,'     &ADDRC IS THE ADDRESS ASSIGNED TO CONSOLE &A (CN&ADDRC)'
 MNOTE *,'     &DEVC IS THE CONSOLE TYPE ASSIGNED TO CONSOLE &A (CN&ADD*
               RC)'
         AIF   (&B LT K'&CNS(&A)).ERR17     TOO MANY SUBPARMS
&SGJCNSC(&A) SETC '&ADDRC&DEVC'             SET GLOBAL
.CNSNXT4 ANOP                               ONE CONSOLE DONE
&A       SETA  &A+1                         INCREMENT COUNT
         AIF   (&A LE N'&CNS).CNSNXT0       GET NEXT CONSOLE
.CNSEND  ANOP                               ALL CONSOLES DONE
.*
.********** 3330'S - &D3330(&A)='NNN' OR '(NNN,M)' OR '(NNN,MM)' *****
.*
.D3330   AIF   (N'&D3330 EQ 0).D33END       NO 3330 SPECIFIED
         AIF   (N'&D3330 GT 63).ERR20A      TOO MANY 3330'S
&A       SETA  1                            SET INITIAL INDEX
&C       SETA  1                            SET INITIAL COUNT
.D33NXT0 ANOP
&MULT    SETB  0                            PRESET SINGLE ADDRESS
         AIF   (T'&D3330(&A) EQ 'O').ERR20  FIELD OMITTED
         AIF   (K'&D3330(&A) EQ 3).D33NXT2  SINGLE ADDRESS
&MULT    SETB  1                            SET MULTIPLE ADDRESS
         AIF   (K'&D3330(&A) LE 6).ERR21    WRONG LENGTH
&ADDRC   SETC  '&D3330(&A)'(2,3)            SAVE ADDRESS
         AIF   ('&D3330(&A)'(5,1) NE ',').ERR21 ADDRESS INVALID
&LENGTH  SETA  K'&D3330(&A)-6               LENGTH OF INCR FIELD
         AIF   (&LENGTH GT 2).ERR22         MULT ADDR INCR INVALID
&B       SETA  &LENGTH
.D33NXT1 ANOP
&X       SETC  '&D3330(&A)'(&B+5,1)         INCR CHAR
         AIF   (NOT('&X' GE '0' AND '&X' LE '9')).ERR22 NOT NUMERIC
&B       SETA  &B-1                         STEP TO NEXT CHAR
         AIF   (&B GT 0).D33NXT1            LOOP CONTROL
&X       SETC  '&D3330(&A)'(6,&LENGTH)      PICK UP
&B       SETA   &X                          CONTENTS OF INCR FIELD
         AIF   (&B GT 63).ERR22             INCR RANGE TOO LARGE
         AIF   (&B LE 0).D33NXT4            INCR RANGE NOT POSITIVE
         AGO   .D33NXT3
.D33NXT2 ANOP                               SINGLE ADDRESS
&B       SETA  1                            SET INCR RANGE TO 1
&ADDRC   SETC  '&D3330(&A)'                 SAVE ADDRESS
.D33NXT3 ANOP                               CHECK SINGLE/MULTIPLE ADDR
&X       SETC  '&ADDRC'(1,1)                1ST ADDRESS CHAR
&Y       SETC  '&ADDRC'(2,1)                2ND ADDRESS CHAR
&Z       SETC  '&ADDRC'(3,1)                3RD ADDRESS CHAR
 AIF (NOT(('&X' GE '0' AND '&X' LE '9')OR('&X' GE 'A' AND '&X' LE 'F'))*
               ).ERR21                      NOT HEX
 AIF (NOT(('&Y' GE '0' AND '&Y' LE '9')OR('&Y' GE 'A' AND '&Y' LE 'F'))*
               ).ERR21                      NOT HEX
 AIF (NOT(('&Z' GE '0' AND '&Z' LE '9')OR('&Z' GE 'A' AND '&Z' LE 'F'))*
               ).ERR21                      NOT HEX
         CONVERT TO=HEX,DIGITS=3,VALUE=&ADDRC CONVERT TO HEX
         AIF   (&HEX EQ X'FFF').ERR23       ADDRESS X'FFF' INVALID
 MNOTE *,'     &ADDRC WILL BE ASSIGNED TO 3330 DISK DRIVE &C'
&SGJD33C(&A) SETC '&SGJD33C(&A).&ADDRC'     SET GLOBAL
&C       SETA  &C+1                         INCREMENT COUNT FOR 3330'S
&B       SETA  &B-1                         DECREMENT INCR RANGE
         AIF   (&B LE 0).D33NXT4            LOOP CONTROL
&HEX     SETA  &HEX+1                       INCREASE ADDRESS BY ONE
         CONVERT TO=EBCDIC,DIGITS=3,VALUE=&HEX CONVERT BACK TO EBCDIC
&ADDRC   SETC  '&EBCDIC'                    SAVE ADDRESS
         AGO   .D33NXT3                     GO TO CHECK ADDRESS
.D33NXT4 ANOP                               ONE INDEX DONE
&A       SETA  &A+1                         INCREMENT INDEX
         AIF   (&A LE N'&D3330).D33NXT0     LOOP CONTROL
.D33END  ANOP                               ALL 3330'S DONE
.*
.********** 2314'S - &D2314(&A)='NNN' OR '(NNN,M)' OR '(NNN,MM)' *****
.*
.D2314   AIF   (N'&D2314 EQ 0).D23END       NO 2314 SPECIFIED
         AIF   (N'&D2314 GT 63).ERR25A      TOO MANY 2314'S
&A       SETA  1                            SET INITIAL INDEX
&C       SETA  1                            SET INITIAL COUNT
.D23NXT0 ANOP
&MULT    SETB  0                            PRESET SINGLE ADDRESS
         AIF   (T'&D2314(&A) EQ 'O').ERR25  FIELD OMITTED
         AIF   (K'&D2314(&A) EQ 3).D23NXT2  SINGLE ADDRESS
&MULT    SETB  1                            SET MULTIPLE ADDRESS
         AIF   (K'&D2314(&A) LE 6).ERR26    INVALID ADDRESS LENGTH
&ADDRC   SETC  '&D2314(&A)'(2,3)            SAVE ADDRESS
         AIF   ('&D2314(&A)'(5,1) NE ',').ERR26 ADDRESS INVALID
&LENGTH  SETA  K'&D2314(&A)-6               LENGTH OF INCREMENT FIELD
         AIF   (&LENGTH GT 2).ERR27         MULT ADDRESS INCR INVALID
&B       SETA  &LENGTH
.D23NXT1 ANOP
&X       SETC  '&D2314(&A)'(&B+5,1)         CHECK INCR RANGE
         AIF   (NOT('&X' GE '0' AND '&X' LE '9')).ERR27 NOT NUMERIC
&B       SETA  &B-1                         STEP TO NEXT CHAR
         AIF   (&B GT 0).D23NXT1            LOOP CONTROL
&X       SETC  '&D2314(&A)'(6,&LENGTH)      PICK UP
&B       SETA   &X                          CONTENTS OF INCR FIELD
         AIF   (&B GT 63).ERR27             INCR RANGE TOO LARGE
         AIF   (&B LE 0).D23NXT4            INCR RANGE NOT POSITIVE
         AGO   .D23NXT3
.D23NXT2 ANOP                               SINGLE ADDRESS
&B       SETA  1                            SET INCR RANGE TO 1
&ADDRC   SETC  '&D2314(&A)'                 SAVE ADDRESS
.D23NXT3 ANOP                               CHECK SINGLE/MULTIPLE ADDR
&X       SETC  '&ADDRC'(1,1)                1ST ADDRESS CHAR
&Y       SETC  '&ADDRC'(2,1)                2ND ADDRESS CHAR
&Z       SETC  '&ADDRC'(3,1)                3RD ADDRESS CHAR
 AIF (NOT(('&X' GE '0' AND '&X' LE '9')OR('&X' GE 'A' AND '&X' LE 'F'))*
               ).ERR26                      NOT HEX
 AIF (NOT(('&Y' GE '0' AND '&Y' LE '9')OR('&Y' GE 'A' AND '&Y' LE 'F'))*
               ).ERR26                      NOT HEX
 AIF (NOT(('&Z' GE '0' AND '&Z' LE '9')OR('&Z' GE 'A' AND '&Z' LE 'F'))*
               ).ERR26                      NOT HEX
         CONVERT TO=HEX,DIGITS=3,VALUE=&ADDRC CONVERT TO HEX
         AIF   (&HEX EQ X'FFF').ERR28       ADDRESS X'FFF' INVALID
 MNOTE *,'     &ADDRC WILL BE ASSIGNED TO 2314 DISK DRIVE &C'
&SGJD23C(&A) SETC '&SGJD23C(&A).&ADDRC'     SET GLOBAL
&C       SETA  &C+1                         INCREMENT COUNT FOR 2314'S
&B       SETA  &B-1                         DECREMENT INCR RANGE
         AIF   (&B LE 0).D23NXT4            LOOP CONTROL
&HEX     SETA  &HEX+1                       INCREASE ADDRESS BY ONE
         CONVERT TO=EBCDIC,DIGITS=3,VALUE=&HEX CONVERT BACK TO EBCDIC
&ADDRC   SETC  '&EBCDIC'                    SAVE ADDRESS
         AGO   .D23NXT3                     GO TO CHECK ADDRESS
.D23NXT4 ANOP                               ONE INDEX DONE
&A       SETA  &A+1                         INCREMENT INDEX
         AIF   (&A LE N'&D2314).D23NXT0     LOOP CONTROL
.D23END  ANOP                               ALL 2314'S DONE
.*
.********** 3400'S - &T3400(&A)='NNN' OR '(NNN,M)' OR '(NNN,MM)' *****
.*
.T3400   AIF   (N'&T3400 EQ 0).T34END       NO 3400 SPECIFIED
         AIF   (N'&T3400 GT 63).ERR30A      TOO MANY 3400'S
&A       SETA  1                            SET INITIAL INDEX
&C       SETA  1                            SET INITIAL COUNT
.T34NXT0 ANOP
&MULT    SETB  0                            PRESET SINGLE ADDRESS
         AIF   (T'&T3400(&A) EQ 'O').ERR30  FIELD OMITTED
         AIF   (K'&T3400(&A) EQ 3).T34NXT2  SINGLE ADDRESS
&MULT    SETB  1                            SET MULTIPLE ADDRESS
         AIF   (K'&T3400(&A) LE 6).ERR31    INVALID ADDRESS LENGTH
&ADDRC   SETC  '&T3400(&A)'(2,3)            SAVE ADDRESS
         AIF   ('&T3400(&A)'(5,1) NE ',').ERR31 ADDRESS INVALID
&LENGTH  SETA  K'&T3400(&A)-6               LENGTH OF INCR FIELD
         AIF   (&LENGTH GT 2).ERR32         MULT ADDRESS INCR INVALID
&B       SETA  &LENGTH
.T34NXT1 ANOP
&X       SETC  '&T3400(&A)'(&B+5,1)         CHECK INCR RANGE
         AIF   (NOT('&X' GE '0' AND '&X' LE '9')).ERR32 NOT NUMERIC
&B       SETA  &B-1                         STEP TO NEXT CHAR
         AIF   (&B GT 0).T34NXT1            LOOP CONTROL
&X       SETC  '&T3400(&A)'(6,&LENGTH)      PICK UP
&B       SETA  &X                           CONTENTS OF INCR FIELD
         AIF   (&B GT 63).ERR32             INCR RANGE TOO LARGE
         AIF   (&B LE 0).T34NXT3            INCR RANGE NOT POSITIVE
         AGO   .T34NXT3
.T34NXT2 ANOP                               SINGLE ADDRESS
&B       SETA  1                            SET INCR RANGE TO 1
&ADDRC   SETC  '&T3400(&A)'                 SAVE ADDRESS
.T34NXT3 ANOP                               CHECK SINGLE/MULTIPLE ADDR
&X       SETC  '&ADDRC'(1,1)                1ST ADDRESS CHAR
&Y       SETC  '&ADDRC'(2,1)                2ND ADDRESS CHAR
&Z       SETC  '&ADDRC'(3,1)                3RD ADDRESS CHAR
 AIF (NOT(('&X' GE '0' AND '&X' LE '9')OR('&X' GE 'A' AND '&X' LE 'F'))*
               ).ERR31                      NOT HEX
 AIF (NOT(('&Y' GE '0' AND '&Y' LE '9')OR('&Y' GE 'A' AND '&Y' LE 'F'))*
               ).ERR31                      NOT HEX
 AIF (NOT(('&Z' GE '0' AND '&Z' LE '9')OR('&Z' GE 'A' AND '&Z' LE 'F'))*
               ).ERR31                      NOT HEX
         CONVERT TO=HEX,DIGITS=3,VALUE=&ADDRC CONVERT TO HEX
         AIF   (&HEX EQ X'FFF').ERR33       ADDRESS X'FFF' INVALID
 MNOTE *,'     &ADDRC WILL BE ASSIGNED TO 3400 TAPE DRIVE &C'
&SGJT34C(&A) SETC '&SGJT34C(&A).&ADDRC'     SET GLOBAL
&C       SETA  &C+1                         INCREMENT COUNT FOR 3400'S
&B       SETA  &B-1                         DECREMENT INCR RANGE
         AIF   (&B LE 0).T34NXT4            LOOP CONTROL
&HEX     SETA  &HEX+1                       INCREASE ADDRESS BY ONE
         CONVERT TO=EBCDIC,DIGITS=3,VALUE=&HEX CONVERT BACK TO EBCDIC
&ADDRC   SETC  '&EBCDIC'                    SAVE ADDRESS
         AGO   .T34NXT3                     GO TO CHECK ADDRESS
.T34NXT4 ANOP                               ONE INDEX DONE
&A       SETA  &A+1                         INCREMENT INDEX
         AIF   (&A LE N'&T3400).T34NXT0     LOOP CONTROL
.T34END  ANOP                               ALL 3400'S DONE
.*
.********** 2400'S - &T2400(&A)='NNN' OR '(NNN,M)' OR '(NNN,MM)' *****
.*
.T2400   AIF   (N'&T2400 EQ 0).T24END       NO 2400 SPECIFIED
         AIF   (N'&T2400 GT 63).ERR35A      TOO MANY 2400'S
&A       SETA  1                            SET INITIAL INDEX
&C       SETA  1                            SET INITIAL COUNT
.T24NXT0 ANOP
&MULT    SETB  0                            PRESET SINGLE ADDRESS
         AIF   (T'&T2400(&A) EQ 'O').ERR35  FIELD OMITTED
         AIF   (K'&T2400(&A) EQ 3).T24NXT2  SINGLE ADDRESS
&MULT    SETB  1                            SET MULTIPLE ADDRESS
         AIF   (K'&T2400(&A) LE 6).ERR36    INVALID ADDRESS LENGTH
&ADDRC   SETC  '&T2400(&A)'(2,3)            SAVE ADDRESS
         AIF   ('&T2400(&A)'(5,1) NE ',').ERR36 ADDRESS INVALID
&LENGTH  SETA  K'&T2400(&A)-6               LENGTH OF INCR FIELD
         AIF   (&LENGTH GT 2).ERR37         MULT ADDRESS INCR INVALID
&B       SETA  &LENGTH
.T24NXT1 ANOP
&X       SETC  '&T2400(&A)'(&B+5,1)         CHECK INCR RANGE
         AIF   (NOT('&X' GE '0' AND '&X' LE '9')).ERR37 NOT NUMERIC
&B       SETA  &B-1                         STEP TO NEXT CHAR
         AIF   (&B GT 0).T24NXT1            LOOP CONTROL
&X       SETC  '&T2400(&A)'(6,&LENGTH)      PICK UP
&B       SETA  &X                           CONTENTS OF INCR FIELD
         AIF   (&B GT 63).ERR37             INCR RANGE TOO LARGE
         AIF   (&B LE 0).T24NXT4            INCR RANGE NOT POSITIVE
         AGO   .T24NXT3
.T24NXT2 ANOP                               SINGLE ADDRESS
&B       SETA  1                            SET INCR RANGE TO 1
&ADDRC   SETC  '&T2400(&A)'                 SAVE ADDRESS
.T24NXT3 ANOP
&X       SETC  '&ADDRC'(1,1)                1ST ADDRESS CHAR
&Y       SETC  '&ADDRC'(2,1)                2ND ADDRESS CHAR
&Z       SETC  '&ADDRC'(3,1)                3RD ADDRESS CHAR
 AIF (NOT(('&X' GE '0' AND '&X' LE '9')OR('&X' GE 'A' AND '&X' LE 'F'))*
               ).ERR36                      NOT HEX
 AIF (NOT(('&Y' GE '0' AND '&Y' LE '9')OR('&Y' GE 'A' AND '&Y' LE 'F'))*
               ).ERR36                      NOT HEX
 AIF (NOT(('&Z' GE '0' AND '&Z' LE '9')OR('&Z' GE 'A' AND '&Z' LE 'F'))*
               ).ERR36                      NOT HEX
         CONVERT TO=HEX,DIGITS=3,VALUE=&ADDRC CONVERT TO HEX
         AIF   (&HEX EQ X'FFF').ERR38       ADDRESS X'FFF' INVALID
 MNOTE *,'     &ADDRC WILL BE ASSIGNED TO 2400 TAPE DRIVE &C'
&SGJT24C(&A) SETC '&SGJT24C(&A).&ADDRC'     SET GLOBAL
&C       SETA  &C+1                         INCREMENT COUNT FOR 2400'S
&B       SETA  &B-1                         DECREMENT INCR RANGE
         AIF   (&B LE 0).T24NXT4            LOOP CONTROL
&HEX     SETA  &HEX+1                       INCREASE ADDRESS BY ONE
         CONVERT TO=EBCDIC,DIGITS=3,VALUE=&HEX CONVERT BACK TO EBCDIC
&ADDRC   SETC  '&EBCDIC'                    SAVE ADDRESS
         AGO   .T24NXT3                     GO TO CHECK ADDRESS
.T24NXT4 ANOP                               ONE INDEX DONE
&A       SETA  &A+1                         INCREASE INDEX
         AIF   (&A LE N'&T2400).T24NXT0     LOOP CONTROL
.T24END  ANOP                               ALL 2400'S DONE
         MEXIT                              ALL WORK DONE
.*
.****** ERROR MESSAGES **********************************************
.*
.ERR1 MNOTE 5,'* * * IEIJES101 JES MACRO USED PREVIOUSLY'
&SGQUITB SETB  1                            SET QUIT BIT
         MEXIT                              RETURN
.ERR2 MNOTE 5,'* * * IEIJES102 &LOCLJES LOCLJES VALUE INVALID'
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .LOCLEND                     SCAN NEXT PARM
.ERR3 MNOTE 5,'* * * IEIJES103 &PROCID PROCID VALUE INVALID'
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .PROCEND                     SCAN NEXT PARM
.ERR4 MNOTE 5,'* * * IEIJES104 &PARMID PARMID VALUE INVALID'
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .PARMEND                     SCAN NEXT PARM
.ERR5 MNOTE 5,'* * * IEIJES105 MAXIMUM READERS EXCEEDED, ONLY 63 READER*
               S ALLOWED'
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .RDREND                      SCAN NEXT PARM
.ERR6 MNOTE 5,'* * * IEIJES106 &RDR(&B) ADDRESS INVALID FOR READER &B'
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .RDRNXT1                     SCAN NEXT READER
.ERR6A MNOTE 5,'* * * IEIJES06A OMITTED READERS NOT ALLOWED READER &B'
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .RDRNXT1                     SCAN NEXT READER
.ERR7 MNOTE 5,'* * * IEIJES107 MAXIMUM PRINTERS EXCEEDED, ONLY 63 PRINT*
               ERS ALLOWED'
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .PRTEND                      SCAN NEXT PARM
.ERR8 MNOTE 5,'* * * IEIJES108 OMITTED PRINTERS NOT ALLOWED PRINTER &A'
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .PRTNXT4                     SCAN NEXT PRINTER
.ERR9 MNOTE 5,'* * * IEIJES109 &PRT(&A) INVALID NUMBER OF PARMS OR MISS*
               ING DELIMITER FOR PRINTER &A'
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .PRTNXT4                     SCAN NEXT PRINTER
.ERR10 MNOTE 5,'* * * IEIJES110 &PRT(&A) ADDRESS INVALID FOR PRINTER &A*
               '
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .PRTNXT4                     SCAN NEXT PRINTER
.ERR11 MNOTE 5,'* * * IEIJES111 &PRT(&A) TYPE INVALID FOR PRINTER &A'
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .PRTNXT4                     SCAN NEXT PRINTER
.ERR12 MNOTE 5,'* * * IEIJES112 &PRT(&A) TRAIN INVALID FOR PRINTER &A'
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .PRTNXT4                     SCAN NEXT PRINTER
.ERR13 MNOTE 5,'* * * IEIJES113 MAXIMUM PUNCHES EXCEEDED, ONLY 63 PUNCH*
               ES ALLOWED'
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .PUNEND                      SCAN NEXT PARM
.ERR14 MNOTE 5,'* * * IEIJES114 &PUN(&B) ADDRESS INVALID FOR PUNCH &B'
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .PUNNXT1                     SCAN NEXT PUNCH
.ERR14A MNOTE 5,'* * * IEIJES14A OMITTED PUNCHES NOT ALLOWED PUNCH &B'
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .PUNNXT1                     SCAN NEXT PUNCH
.ERR15 MNOTE 5,'* * * IEIJES115 MAXIMUM CONSOLES EXCEEDED, ONLY 63 CONS*
               OLES ALLOWED'
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .CNSEND                      SCAN NEXT PARM
.ERR16 MNOTE 5,'* * * IEIJES116 OMITTED CONSOLES NOT ALLOWED CONSOLE &A*
               '
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .CNSNXT4                     SCAN NEXT CONSOLE
.ERR17 MNOTE 5,'* * * IEIJES117 &CNS(&A) INVALID NUMBER OF PARMS OR MIS*
               SING DEMITER FOR CONSOLE &A'
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .CNSNXT4                     SCAN NEXT CONSOLE
.ERR18 MNOTE 5,'* * * IEIJES118 &CNS(&A) ADDRESS INVALID FOR CONSOLE &A*
               '
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .CNSNXT4                     SCAN NEXT CONSOLE
.ERR19 MNOTE 5,'* * * IEIJES119 &CNS(&A) TYPE INVALID FOR CONSOLE &A'
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .CNSNXT4                     SCAN NEXT CONSOLE
.ERR20  MNOTE 5,'* * * IEIJES120 OMITTED 3330''S NOT ALLOWED D3330 &A'
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .D33NXT4                     SCAN NEXT 3330
.ERR20A MNOTE 5,'* * * IEIJES20A MAXIMUM 3330''S EXCEEDED, ONLY 63 3330*
               ''S ALLOWED'
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .D33END                      SCAN NEXT PARM
.ERR21 MNOTE 5,'* * * IEIJES121 &D3330(&A) ADDRESS INVALID FOR D3330 &A*
               '
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .D33NXT4                     SCAN NEXT 3330
.ERR22 MNOTE 5,'* * * IEIJES122 &D3330(&A) MULTIPLIER INVALID FOR D3330*
                &A'
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .D33NXT4                     SCAN NEXT 3330
.ERR23   AIF   (&MULT).ERR24                MULTIPLE ADDRESS
       MNOTE 5,'* * * IEIJES123 &ADDRC ADDRESS INVALID FOR D3330 &A'
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .D33NXT4                     SCAN NEXT 3330
.ERR24 MNOTE 5,'* * * IEIJES124 &ADDRC MULTIPLE ADDRESS INVALID FOR D33*
               30 &A'
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .D33NXT4                     SCAN NEXT 3330
.ERR25  MNOTE 5,'* * * IEIJES125  OMITTED 2314''S NOT ALLOWED D2314 &A'
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .D23NXT4                     SCAN NEXT 2314
.ERR25A MNOTE 5,'* * * IEIJES25A MAXIMUM 2314''S EXCEEDED, ONLY 63 2314*
               ''S ALLOWED'
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .D23END                      SCAN NEXT PARM
.ERR26 MNOTE 5,'* * * IEIJES126 &D2314(&A) ADDRESS INVALID FOR D2314 &A*
               '
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .D23NXT4                     SCAN NEXT 2314
.ERR27 MNOTE 5,'* * * IEIJES127 &D2314(&A) MULTIPLIER INVALID FOR D2314*
                &A'
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .D23NXT4                     SCAN NEXT 2314
.ERR28   AIF   (&MULT).ERR29                MULTIPLE ADDRESS
       MNOTE 5,'* * * IEIJES128 &ADDRC ADDRESS INVALID FOR D2314 &A'
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .D23NXT4                     SCAN NEXT 2314
.ERR29 MNOTE 5,'* * * IEIJES129 &ADDRC MULTIPLE ADDRESS INVALID FOR D23*
               14 &A'
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .D23NXT4                     SCAN NEXT 2314
.ERR30  MNOTE 5,'* * * IEIJES30  OMITTED 3400''S NOT ALLOWED T3400 &A'
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .T34NXT4                     SCAN NEXT 3400
.ERR30A MNOTE 5,'* * * IEIJES30A MAXIMUM 3400''S EXCEEDED, ONLY 63 3400*
               ''S ALLOWED'
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .T34END                      SCAN NEXT PARM
.ERR31 MNOTE 5,'* * * IEIJES131 &T3400(&A) ADDRESS INVALID FOR T3400 &A*
               '
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .T34NXT4                     SCAN NEXT 3400
.ERR32 MNOTE 5,'* * * IEIJES132 &T3400(&A) MULTIPLIER INVALID FOR T3400*
                &A'
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .T34NXT4                     SCAN NEXT 3400
.ERR33   AIF   (&MULT).ERR34                MULTIPLE ADDRESS
       MNOTE 5,'* * * IEIJES133 &ADDRC ADDRESS INVALID FOR T3400 &A'
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .T34NXT4                     SCAN NEXT 3400
.ERR34 MNOTE 5,'* * * IEIJES134 &ADDRC MULTIPLE ADDRESS INVALID FOR T34*
               00 &A'
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .T34NXT4                     SCAN NEXT 3400
.ERR35  MNOTE 5,'* * * IEIJES135 OMITTED 2400''S NOT ALLOWED T2400 &A'
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .T24NXT4                     SCAN NEXT 2400
.ERR35A MNOTE 5,'* * * IEIJES35A MAXIMUM 2400''S EXCEEDED, ONLY 63 2400*
               ''S ALLOWED'
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .T24END                      SCAN NEXT PARM IF ANY
.ERR36 MNOTE 5,'* * * IEIJES136 &T2400(&A) ADDRESS INVALID FOR T2400 &A*
               '
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .T24NXT4                     SCAN NEXT 2400
.ERR37 MNOTE 5,'* * * IEIJES137 &T2400(&A) MULTIPLIER INVALID FOR T2400*
                &A'
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .T24NXT4                     SCAN NEXT 2400
.ERR38   AIF   (&MULT).ERR39                MULTIPLE ADDRESS
       MNOTE 5,'* * * IEIJES138 &ADDRC ADDRESS VALUE INVALID FOR T2400 *
               &A'
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .T24NXT4                     SCAN NEXT 2400
.ERR39 MNOTE 5,'* * * IEIJES139 &ADDRC MULTIPLE ADDRESS INVALID FOR T24*
               00 &A'
&SGQUITB SETB  1                            SET QUIT BIT
         AGO   .T24NXT4                     SCAN NEXT 2400
         MEND
