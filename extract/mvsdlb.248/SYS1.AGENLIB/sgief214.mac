         MACRO
         SGIEF214
.* CHANGE LEVEL = 03/01/77    VS2 SYSTEM CONTROL PROGRAM 2     @G64IPSJ
.*              = 12/01/78                                     @ZA15758
.*              = 08/28/74                                     @ZM30423
.*              = 07/24/74                                     @Z30ANSF
.*C023100, D022500-022900,036000-053500                        @YM08650
.*                                                             @YM04048
.*                                                             @YM03292
.*A000000-999999                                                 Y02670
         COPY     SGGBLPAK
         LCLA  &GRP,&GCTR,&I,&X,&ARG,&START,&ESO,&INDEX,&J,&K
         LCLA  &COUNT(200),&DLIST(2056)                        @ZA15758
         LCLB  &PROTOSW,&RC,&MEMBR
         LCLB  &PATTRN(200),&B
         ACTR  29000000                                        @ZA15758
.**********************************************************************
.*
.*  THIS MACRO SEGREGATES ALL DEVICES OF THE SYSTEM INTO GROUPS, SUCH
.*  THAT EACH GROUP CONSISTS OF ALL THOSE DEVICES (AND ONLY THOSE)
.*  WHICH ARE ELIGIBLE TO THE IDENTICAL SET OF NAMES.
.*
.*  INPUTS ARE SGUNNMC,SGUNNMA,SGDADRA,SGGENDB,SGDAUPA,        @G64IPSJ
.*  ( THE MACRO HAS NO PARAMETERS).                            @Z30ANSF
.*
.*  ALL ADDRESSES ARE EXTRACTED FORM SGUNNMA AND STORED IN LOCAL VAR
.*  DLIST FOR MORE CONVENIENT ACCESS.
.*
.*  ALL ADDRESSES NOW ASSOCIATED WITH A SUPPORTED GENERIC TYPE CODE
.*  ARE ASSIGNED TO GROUPS. ADDRESSES ARE PROCESSED IN ORDER FIRST
.*  BY GENERIC CODE, THEN BY GROUP WITHIN GENERIC.  THAT IS ALL
.*  ADDRESSES OF A SINGLE GROUP (HAVING SAME NAME ASSOCIATIONS) ARE
.*  PROCESSED BEFORE STARTING A NEXT GROUP.
.*  WHEN ALL ADDRESSES OF A GIVEN GENERIC HAVE BEEN ASSIGNED TO GROUPS
.*  THE NEXT GENERIC IS SELECTED.  THE PROCESS IS COMPLETE WHEN ALL
.*  GENERIC TYPES HAVE BEEN PROCESSED.
.*
.*  OUTPUTS ARE PUNCH'ED SGIEF018 CALLS DESCRIBING GROUPS TO
.*  STAGE 2.
.*       ONE TYP=D FOR EACH DEVICE ADDRESS ASSIGNED TO A GROUP, GIVING
.*           GROUP ID, GENERIC ID, UCB INDEX, AND ADDRESS.
.*
.*       ONE TYP=G FOR EACH GROUP, GIVING GROUP ID AND GENERIC ID.
.*
.*       ONE TYP=E FOR EACH GROUP-TO-NAME ASSOCIATION GIVING GROUP ID
.*           AND NAME CODE (INDEX OF THE ESOTERIC NAME)
.**********************************************************************
         AGO   .L090          CALL  GROUP-FACTOR SETUP.
.M001    AGO   .L100    CALL GROUP FACTORING ROUTINE           @YM08650
.M0010   ANOP
&SGCNTRA(10)   SETA  &GRP-1
         MEXIT
.**********************************************************************
.*
.L090    ANOP
&K       SETA  0                   *   THIS ROUTINE MOVES DEVICE
&B       SETB  1                   *   ADDRESSES FROM'SGUNNMA'TO'DLIST'
&I       SETA  0                   *   AND STORES COUNT UP TO EACH
&J       SETA  0                   *   END-FLAG IN  'COUNT'
.L0901   ANOP
&I       SETA  &I+1                             NAME COUNTER
         AIF  (&I GT &SGCNTRA(4)).M001  RETURN IF LAST NAME    @YM03292
.L0902   ANOP
&J       SETA  &J+&B                            SGUNNMA-BOX CTR
&B       SETB  (NOT &B)                         FLIP-FLOP FOR LFT/RIGHT
&X       SETA  &SGUNNMA(&J)/X'1000'         EXTRACT LEFT
         AIF   (NOT &B).L0903                   TEXT L-R
&X       SETA  &SGUNNMA(&J)-&X*X'1000'      EXTRACT RIGHT
.L0903   ANOP                                                  @YM03292
         AIF   (&X EQ X'FFF').L0901             TEST NAME TERMINATE
&K       SETA  &K+1                             COUNT ACTUALS
&DLIST(&K) SETA  &X                             STORE IN DLIST
&COUNT(&I) SETA  &COUNT(&I)+1                   BUMP COUNT-IN-NAME
         AGO   .L0902                           KEEP GOING
.*
.**********************************************************************
.*  FACTOR
.**********************************************************************
.*
.*
.*          GRP=2;         (SEE GENERIC FOR PURPOSE OF THIS STMT.)
.*
.*          DO  GCTR=1 BY 1 TO SGCNTRA(10) WHERE SGGENDB(GCTR)
.*              CALL GENERIC;   (TO PROCESS ONE DEVICE TYPE)
.*          END;
.*
.*
.L100    ANOP
&GRP     SETA  2                            (INIT FOR LEVEL TWO)
&GCTR    SETA  0                             INITIALIZE DO.
.L101    ANOP                                RETURN POINT FM LEV TWO.
&GCTR    SETA  &GCTR+1                       BY CLAUSE
         AIF   (&GCTR GT &SGCNTRA(10)).M0010 TO CLAUSE (EXIT TO MAIN)
         AIF   (NOT &SGGENDB(&GCTR)).L101    BODY OF DO (RTRN IS L101)
.*                                                             @G64IPSJ
         AGO   .L200                        CALL GENERIC
.*
.****  END OF GROUP FACTORING  ****************************************
.L200    ANOP
.**********************************************************************
.*  GENERIC
.**********************************************************************
.*
.* COMMENT:  WE ALWAYS END EACH GENERIC WITH AN EMPTY GROUP, BUT AN ID
.*           WAS GENERATED. WE THEREFORE ALWAYS START EACH GENERIC BY
.*           DECREMENTING GROUP ID.  IT WAS INITIALIZED TO 2 TO CAUSE
.*           FIRST ID ASSIGNED TO BE ONE FOR FIRST GROUP IN SYSTEM.
.*
.*          SET PROTOSW OFF;
.*          DO GRP=GRP-1  BY 1 WHILE NOT PROTOSW;       (COUNT GROUPS)
.*               CALL GROUP;   (TO COLLECT ONE GROUP);
.*          END;
.*          RETURN;
.*
.**********************************************************************
&GRP     SETA  &GRP-2                        INITIALIZE DO.
&PROTOSW SETB  0                             INITIALIZE FOR WHILE TEST.
.L201    ANOP      DO LOOP POINT.   (THIS IS RETURN FM LEVEL THREE.)
&GRP     SETA  &GRP+1                        BY CLAUSE FOR DO.
         AIF  (&PROTOSW).L101                WHILE CLAUSE FOR DO.
         AGO  .L300                          LEVEL 3 CALL.
.*
.****  END LEVEL 2 GROUP FACTORING  ***********************************
.**********************************************************************
.*  GROUP
.**********************************************************************
.L300    ANOP
.*
.*          SET PROTOSW ON       (INDICATES STARTINT A GROUP)
.*          DO I=1 BY 1 TO SGCNTRA(3) WHERE SGDADRA(I) BIT 31 OFF AND
.*                                          SGDADRA(I) BITS 23-30 =GCTR
.*              ARG = SGDADRA(I) BITS 1-12;(ADDRESS FIELD)
.*              CALL ESOTERIC;(TO SCAN ESOTERIC SETS)
.*              IF RC;             (RC SET BY LEVEL4 ON MEMBER FOUND.)
.*                  PUNCH SGIEF018 TYPE-D;
.*                  SET BIT 31 ON IN SGDADRA(I);
.*                  SET PROTOSW OFF;
.*          END;
.*          RETURN,
.*
&PROTOSW SETB  1                             SEE EXPL.
&I       SETA  0                             INITIALIZE DO.
.L301    ANOP                                DO LOOPING POINT.
&I       SETA  &I+1                          BY CLAUSE.
         AIF   (&I GT &SGCNTRA(03)).L201     TO CLAUSE.
         AIF   (&SGDADRA(&I) GT X'40000000').L301    WHERE CLAUSE
&X       SETA  &SGDADRA(&I)                  CONVENIENCE STATEMENT.
         AIF   (&GCTR NE &X/X'400000').L301  WHERE CLAUSE.
&ARG     SETA  &X-&X/X'1000'*X'1000'         SEE PROC EXPL.
         AGO   .L400                         CALL LEVEL 4.
.L302    AIF   (NOT &RC).L303                RETURN HERE FROM 4.
&X       SETA  &SGDAUPA(&I)     RETRIEVE UCB LOOKUP VALUE      @Z30ANSF
&X       SETA  &X-1       ADJUST TO ZERO OFFSET
 PUNCH ' SGIEF018  &GRP,&GCTR,&X,&ARG,TYP=D '
&SGDADRA(&I) SETA &SGDADRA(&I)+X'40000000'   MARK AS PROCESSED.
&PROTOSW  SETB 0                             CONTINUE THE DO.
.L303    AGO   .L301
.****  ENA LEVEL 3 GROUP FACTORING  ***********************************
.**********************************************************************
.*  ESOTERIC
.**********************************************************************
.*
.* COMMENT: THIS LEVEL GETS A DEVICE ADDRESS IN ARG AS INPUT. IT IS
.*          EITHER THE FIRST MEMBER OF A GROUP, OR A CANDIDATE FOR
.*          MEMBERSHIP IN A GROUP THAT ALREADY HAS AT LEAST ONE
.*          ADDRESS. (PROTOSW ON IF THE FORMER) IN EITHER CASE,
.*          PROCESSING IS SIMILAR.  IF PROTOTYPE MEMBER, WE DISCOVER
.*          WHICH ESOTERICS CONTAIN THE ADDRESS,AND STORE A DESCRIPTION
.*          IN PATTRN.  IF NOT PROTOTYPE WE SEE IF THIS DEVICE'S
.*          ESOTERIC ASSOCIATIONS AGREE EXACTLY WITH PROTOTYPE OF
.*          CURRENT GROUP. IN THE LATTER CASE, WE EXIT UPON DETECTION
.*          OF A NON-MATCH WITH RC SET FALSE.  UNDER ALL OTHER
.*          CIRCUMSTANCES, ALL ESOTERICS ARE SCANNED AND A TRUE VALUE
.*          IS RETURNED IN RC. IN AADDITION, THE GENERIC ASSOCIATION
.*          OF EACH PROTOTYPE IS PASSED TO STAGE 2, AND EACH ESOTERIC
.*          ASSOCIATION OF EACH PROTOTYPE IS PASSED TO STAGE 2.
.*
.**********************************************************************
.*  PROCEDURE -
.*
.*          START=0,
.*          RC=TRUE;
.*          IF PROTOSW;
.*             PUNCH SGIEF018 TYPE=G
.*          DO ESO=1 BY 1 TO SGCNTRA(4) WHILE RC
.*             MEMBER=FALSE
.*             DO INDEX=1 BY TO COUNT(ESO) WHILE NOT MEMBR;
.*                MEMBR= (ARG=DLIST(START+INDEX);
.*             END;
.*             START=START+COUNT(ESO)
.*             IF PROTOSW;
.*                PATTRN(ESO,GRP)=MEMBR;
.*                IF MEMBR;
.*                   PUNCH SGIEF018 TYP=E
.*             ELSE;
.*                IF MEMBR NE PATTRN(ESO,GRP);
.*                   RC=FALSE,
.*          END;
.*          RETURN;
.*
.*
.*
.**********************************************************************
.*  IMPLEMENTATION  -
.*
.L400    ANOP
&START   SETA  0
&RC      SETB  1
         AIF   (NOT &PROTOSW).L400A
 PUNCH ' SGIEF018  TYP=G,&GRP,&GCTR '
.L400A   ANOP
&ESO     SETA  0
.L401    ANOP
&ESO     SETA  &ESO+1                        BY CLAUSE
         AIF  ((&ESO GT &SGCNTRA(4)) OR NOT &RC).L302
.*   OUTER DO TERMINATION CLAUSE ON PREV. LINE. (BOTH TO AND WHILE)
&MEMBR   SETB  0
.*    START INNERMOST DO LOOP
&INDEX   SETA  0                             INITIALIZE DO INDEX
.L402    ANOP                                INNER DO START
&INDEX   SETA  &INDEX+1                      BY CLAUSE
         AIF  ((&INDEX GT &COUNT(&ESO)) OR &MEMBR).L403 TO/WHILE CLAUSE
&MEMBR   SETB  (&ARG EQ  &DLIST(&START+&INDEX))   BODY OF INNER DO
         AGO   .L402                         REPEAT INNER DO
.L403    ANOP                                END INNER DO
&START SETA &START+&COUNT(&ESO)
         AIF   (NOT &PROTOSW).L404           GO TO ELSE
&PATTRN(&ESO)  SETB  (&MEMBR)                THEN CLAUSE
         AIF   (NOT &MEMBR).L405
 PUNCH ' SGIEF018 &GRP,&ESO,TYP=E'
         AGO   .L405                         JUMP OVER ELSE CLAUSE
.L404    AIF   (&MEMBR EQ &PATTRN(&ESO)).L405
&RC      SETB  0             KILL THE DO - WE DONT HAVE A MEMBER.
.L405    AGO   .L401         REPEAT OUTER DO
.****  END OF LEVEL 4 OF GROUP FACTORING  *****************************
.**********************************************************************
         MEND
