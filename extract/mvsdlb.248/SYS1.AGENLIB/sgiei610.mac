          MACRO
          SGIEI610
.* THIS IS ONE OF A SERIES OF MACROS ADDED IN SU32. THEY ARE CALLED
.* IN JOB 6 OF GENERATE, AFTER ALL THE WORK IS DONE; ONLY THE LISTPDS
.* AND LISTVTOC STEPS REMAIN.  COMPONENTS WHICH NORMALLY DO NOT HAVE
.* SYSGEN SUPPORT CAN REPLACE ONE OF THESE DUMMYS WITH AN INNER TO
.* INCLUDE THEIR MATERIAL INTO THE NEW SYSTEM.
.*
.* THESE MACROS ARE CALLED ON A COMPLETE GENERATION (GENTYPE=ALL) ONLY.
.*
.* CHANGES -- G32DSVN (CREATION)
.*           @ZA31697
         MNOTE *,'DUMMY VERSION OF SGIEI610 EXECUTED.'
         MEND
.*
.* THIS MACRO IS A SAMPLE TO SHOW TYPICAL USE. IT HAS MANY EXTRA
.* COMMENT CARDS WITH NOTES; THEY MAY BE DELETED FROM A REAL MACRO.
.* EDITS, COPYS, IEBUPDTES MAY BE DONE. THIS SAMPLE SHOWS ONLY EDITS;
.* SAMPLES OF OTHER WORK MAY BE FOUND IN VARIOUS SYS1.AGENLIB MEMBERS.
.*
.* THE FOLLOWING COMMENT CARD MUST BE CHANGED TO PROPERLY DESCRIBE
.* THE COMPONENT THAT OWNS THE REAL VERSION OF SGIEI6XX. PUT THE
.* COMPONENT ID IN COLS 63-67.  THIS CARD IS FOR APAR ROUTING.
*** SGIEI610 *** COMP NAME                                *** SC1?? ***
.* **************************************************************
.* *   XXXX-XXX COPYRIGHT STATEMENTS IF REQUIRED                *
.* **************************************************************
          COPY SGGBLPAK                 GET REQUIRED GLOBALS
.*
.* THE FOLLOWING RENAME STEP IS NEEDED AS THE TARGET DATA SETS
.* ALREADY HAVE THEIR ''SYS1'' PREFIXES.  AN ALTERNATE PREFIX,
.* SPECIFIED BY THE CUSTOMER ON THE GENERATE MACRO CALL, IS IN THE
.* GLOBAL ''&SGCTRLC(40)''.
.* ALL DATA SETS TO BE MODIFIED SHOULD BE RENAMED IN THIS STEP.
.* **************************************************************
.* **** WARNING **** WARNING **** WARNING **** WARNING ****    @ZA31697
.* **************************************************************
.* THE RENAME STEP REQUIRES NO OTHER JOBS TO BE ENQUED ON THE  @ZA31697
.*  SYSTEM DATASETS TO BE RENAMED.                             @ZA31697
.* **************************************************************
.*
.*  RENAME LPALIB TO "INDEX".LPALIB
.*  RENAME LINKLIB TO "INDEX".LINKLIB
.*
         AIF   ('&SGCTRLC(40)' EQ 'SYS1').BYPAS1 RENAME NOT NEEDED
&SGCTRLA(1) SETA  &SGCTRLA(1)+1     INCREMENT STEP COUNTER
.*
 PUNCH '//LPA&SGCTRLA(1) EXEC PGM=IEHPROGM,COND=(8,LT)'        @ZA31697
 PUNCH '//SYSPRINT DD SYSOUT=&SGCTRLC(41)'
 PUNCH '//LPALIB  DD VOLUME=(,RETAIN,SER=&SGDSVLC(12)),UNIT=&SGDSUNC(12X
               ),DISP=OLD'
 PUNCH '//LINKLIB DD VOLUME=(,RETAIN,SER=&SGDSVLC(6).),UNIT=&SGDSUNC(6)X
               ,DISP=OLD'
 PUNCH '//SYSIN DD *'
 PUNCH ' RENAME NEWNAME=&SGCTRLC(40)..LPALIB,DSNAME=SYS1.LPALIB,       X
                              XXXXXX'                          @ZA31697
 PUNCH '               VOL=&SGDSUNC(12)=&SGDSVLC(12)'
 PUNCH ' RENAME NEWNAME=&SGCTRLC(40)..LINKLIB,DSNAME=SYS1.LINKLIB,     X
                              XXXXXX'                          @ZA31697
 PUNCH '               VOL=&SGDSUNC(6)=&SGDSVLC(6)'
 PUNCH '/*'
.BYPAS1  ANOP
.* THE FOLLOWING VALUES ARE USED BY ''SGLEDPK1'' TO BUILD THE LINKEDIT
.* JCL. SET ONLY AS MANY ''LINKEDIT ATTRIBUTE'' GLOBALS AS ARE NEEDED.
.* THE GLOBALS ARE NULLED AFTER USE, IN SGLEDPK2.
.* NOTE THAT LIST AND XREF ARE ALWAYS PRESENT.
.* SEE LISTING OF SGLEDPK1 FOR ADDITIONAL DETAILS
&SGCTRLC(10) SETC ',LET'   OPTIONS IN   LINKEDIT ATTRIBUTE
&SGCTRLC(11) SETC ',RENT'  ANY ORDER    LINKEDIT ATTRIBUTE
&SGCTRLC(12) SETC ',OPT'                LINKEDIT ATTRIBUTE
&SGCTRLC(13) SETC ',OPT'   NOTE COMMA   LINKEDIT ATTRIBUTE
&SGCTRLC(14) SETC ',OPT'                LINKEDIT ATTRIBUTE
&SGCTRLC(9)  SETC 'LPALIB'              TARGET LIBRARY NAME
&SGCTRLC(8)  SETC '&SGCTRLC(19)'        TARGET UNIT TYPE
&SGCTRLC(7)  SETC '&SGCTRLC(20)'        TARGET VOLID
.*
.*   NEW CODE INTO SYS1.LPALIB
.*
.* NOTE THAT THE DDNAME USED BELOW MUST MATCH THE NAME OF THE
.* DATASET, AS SHOWN IN SAMPLE.  THIS IS AN SMP REQUIREMENT.
          COPY SGLEDPK1                 GENERATE LINKEDIT JCL PART 1
 PUNCH '//AOSXX DD DSN=SYS1.AOSXX,DISP=SHR' AS MANY AS NEEDED
          COPY SGLEDPK2                 JCL PART 2; RESETS GLOBALS
.*
 PUNCH ' INCLUDE AOSXX(MODULE1)'        WATCH FOR CLOSING QUOTE
 PUNCH ' INCLUDE AOSXX(MODULE2)'        ON THE PUNCH STATEMENTS
 PUNCH ' INCLUDE AOSXX(MODULE3)'
 PUNCH ' ORDER MODULE1(P)'
 PUNCH ' ALIAS ALIAS1,ALIAS2
 PUNCH ' ENTRY ENTNAME0'
 PUNCH ' NAME LOADNAME(R)'
 PUNCH '/*'
.*
.*  NEW CODE INTO SYS1.LINKLIB
.*
&SGCTRLC(7)  SETC '&SGCTRLC(32)'        VOLID
&SGCTRLC(8)  SETC '&SGCTRLC(31)'        UNIT TYPE
&SGCTRLC(9)  SETC 'LINKLIB'             DATA SET NAME
&SGCTRLC(10) SETC ',LET'                LINKEDIT ATTRIBUTE
         COPY SGLEDPK1
 PUNCH '//AOSYY DD DSN=SYS1.AOSYY,DISP=SHR'
         COPY SGLEDPK2
 PUNCH ' INCLUDE AOSYY(MODULE4)'
 PUNCH ' INCLUDE AOSYY(MODULE5)'
 PUNCH ' ALIAS ALIAS3,ALIAS4
 PUNCH ' ENTRY ENTRYNAM'
 PUNCH ' SETCODE AC(1)'
 PUNCH ' NAME LOADNAME(R)'
 PUNCH '/*'
.*
.*  RENAME "INDEX".LPALIB TO SYS1.LPALIB
.*  RENAME "INDEX".LINKLIB TO SYS1.LINKLIB
.*
         AIF   ('&SGCTRLC(40)' EQ 'SYS1').BYPAS2 NO NEED TO RENAME
&SGCTRLA(1) SETA  &SGCTRLA(1)+1     INCREMENT STEP COUNTER
 PUNCH '//LPA&SGCTRLA(1) EXEC PGM=IEHPROGM,COND=(8,LT)'        @ZA31697
 PUNCH '//SYSPRINT DD SYSOUT=&SGCTRLC(41)'
 PUNCH '//LPALIB  DD VOLUME=(,RETAIN,SER=&SGDSVLC(12)),UNIT=&SGDSUNC(12X
               ),DISP=OLD'
 PUNCH '//LINKLIB  DD VOLUME=(,RETAIN,SER=&SGDSVLC(6)),UNIT=&SGDSUNC(6)X
               ,DISP=OLD'
 PUNCH '//SYSIN DD *'
 PUNCH ' RENAME NEWNAME=SYS1.LPALIB,DSNAME=&SGCTRLC(40)..LPALIB,       X
                              XXXXXX'                          @ZA31697
 PUNCH '               VOL=&SGDSUNC(12)=&SGDSVLC(12)'
 PUNCH ' RENAME NEWNAME=SYS1.LINKLIB,DSNAME=&SGCTRLC(40)..LINKLIB,     X
                              XXXXXX'                          @ZA31697
 PUNCH '               VOL=&SGDSUNC(6)=&SGDSVLC(6)'
 PUNCH '/*'
.BYPAS2  ANOP
         MEND
