         MACRO
         CKPTREST &NOTELIG=,&ELIGBLE=
         COPY  SGSYSPAK
         LCLA &C,&B,&N,&NN
         LCLB  &L(50),&TEST(1)
.***** START OF SPECIFICATIONS **************************************
.*
.* MODULE NAME - CKPTREST
.*
.* DESCRIPTIVE NAME - CKPTREST
.*
.* COPYRIGHT - NONE
.*
.* STATUS - CHANGE LEVEL 02
.*
.* FUNCTION -
.*       THE CKPTREST MACRO IS USED TO SPECIFY THE STANDARD ABEND CODES
.*       THAT YOU DON'T WANT ELIGIBLE FOR AUTOMATIC RESTART AND THOSE
.*       CODES WRITTEN BY YOU THAT YOU DO WANT ELIGIBLE FOR AUTOMATIC
.*       RESTART.
.*
.* NOTES - N/A
.*
.* MODULE TYPE - MACRO
.*
.* ENTRY POINT - N/A
.*
.* INPUT - THE FOLLOWING PARAMETERS ARE ALLOWED ON CKPTREST
.*             &ELIGBLE - SPECIFIES ABEND CODES WRITTEN BY YOU WHICH
.*                        WILL BE ELIGIBLE FOR AUTOMATIC RESTART.
.*             &NOTELIG - SPECIFIES THOSE STANDARD ABEND CODES WHICH
.*                        YOU DON'T WANT TO BE ELIGIBLE FOR AUTOMATIC
.*                        RESTART.
.*
.* OUTPUT -
.*       GLOBALS USED ARE -
.*             &SGMENTB(32)  - CKPTREST MACRO CALLED
.*             &SGCKPA(1-10) - SET FOR ELIGIBLE USER ABEND CODES
.*             &SGCKPB(1-50) - SET FOR IBM CODES NOT ELIGIBLE
.*             &SGQUITB      - QUIT SWITCH
.*
.*       LOCALS USED ARE -
.*             &B      - SET TO CHECK IF IBM CODE SPECIFIED EARLIER
.*             &C      - SUBSCRIPT FOR NOTELIG CODES NUMBER FORM 1-50
.*             &L      - SET IF AN IBM ABEND CODE HAS BEEN SPECIFIED
.*             &N      - SUBSCRIPT FOR USER ABEND CODES SPECIFIED
.*             &NN     - SUBSCRIPT FOR USER GLOBAL SGCKPA
.*             &TEST   - FLIP FLOP SWITCH FOR SUBSCRIPT &NN
.*
.* EXIT, NORMAL - N/A
.*
.* EXIT, ERROR - N/A
.*
.* EXTERNAL REFERENCES - N/A
.*
.* TABLES - N/A
.*
.* MACROS - NONE
.*
.* CHANGE ACTIVITY -
.*
.****** END OF SPECIFICATIONS ***************************************
         AIF   (&SGMENTB(32)).M1             ENTRY SWITCH
&SGMENTB(32) SETB 1
         AIF   (T'&ELIGBLE EQ 'O').C        NO USER-DEFINED ABEND CODES
&NN      SETA  2                            SET PTR TO 'A' BOX
         AIF  (N'&ELIGBLE GT 10).M8         MAXIMUM 10 CODES
.K MNOTE *,'     FOLLOWING USER COMPLETION CODES ELIGIBLE FOR RESTART-'
.E       AIF   (N'&ELIGBLE EQ &N OR &NN GT 6).I   END OR MAX
&N       SETA  &N+1
         AIF   (T'&ELIGBLE(&N) NE 'N').M9   NOT NUMERIC
         AIF   (&ELIGBLE(&N) LT 0 OR &ELIGBLE(&N) GT 4095).M9
&SGCKPA(&NN) SETA 4096*&SGCKPA(&NN)+&ELIGBLE(&N)
&SGCKPA(1) SETA &SGCKPA(1)+1      INCREMENT COUNTER
&TEST(1) SETB  (NOT &TEST(1))           RESET FLIP-FLOP
         AIF   (&TEST(1)).EM            SKIP INCR IF FIRST SET IN BOX
&NN      SETA  &NN+1                    INCREMENT TO NEXT BOX
.EM MNOTE *,'                 &ELIGBLE(&N)  '
         AGO   .E                       CHECK NEXT OR END
.I       AIF   (NOT &TEST(1)).C         Q. PAD UP FOR ODD
&SGCKPA(&NN)  SETA  4096*&SGCKPA(&NN)
.C       AIF   (T'&NOTELIG NE 'O').CA   NOT OMITTED
    MNOTE *,'     ALL SYSTEM COMPLETION CODES ARE ELIGIBLE FOR RESTART'
         MEXIT
.CA      AIF   (N'&NOTELIG GT 50).M2    50 ALLOWABLE CODES
.CC MNOTE *,'     FOLLOWING COMPLETION CODES INELIGIBLE FOR RESTART --'
.BEGIN   AIF   (&C EQ N'&NOTELIG).MEND  END TEST
&C       SETA  &C+1                          INCREMENT POINTER
&L(1)    SETB  ('&NOTELIG(&C)' EQ '001')     *         W
&L(2)    SETB  ('&NOTELIG(&C)' EQ '031')     *         H
&L(3)    SETB  ('&NOTELIG(&C)' EQ '033')     *         I
&L(4)    SETB  ('&NOTELIG(&C)' EQ '03A')     *         C
&L(6)    SETB  ('&NOTELIG(&C)' EQ '0A3')     *
&L(7)    SETB  ('&NOTELIG(&C)' EQ '0B0')     *         C
&L(8)    SETB  ('&NOTELIG(&C)' EQ '0F3')     *         O
&L(9)    SETB  ('&NOTELIG(&C)' EQ '100')     *         M
&L(10)   SETB  ('&NOTELIG(&C)' EQ '106')     *         P
&L(11)   SETB  ('&NOTELIG(&C)' EQ '113')     *         L
&L(12)   SETB  ('&NOTELIG(&C)' EQ '117')     *         E
&L(13)   SETB  ('&NOTELIG(&C)' EQ '137')     *         T
&L(15)   SETB  ('&NOTELIG(&C)' EQ '20A')     *         O
&L(16)   SETB  ('&NOTELIG(&C)' EQ '213')     *         N
&L(17)   SETB  ('&NOTELIG(&C)' EQ '214')     *
&L(18)   SETB  ('&NOTELIG(&C)' EQ '217')     *         C
&L(19)   SETB  ('&NOTELIG(&C)' EQ '313')     *         O
&L(20)   SETB  ('&NOTELIG(&C)' EQ '314')     *         D
&L(21)   SETB  ('&NOTELIG(&C)' EQ '317')     *         E
&L(22)   SETB  ('&NOTELIG(&C)' EQ '413')     *         S
&L(23)   SETB  ('&NOTELIG(&C)' EQ '414')     *
&L(24)   SETB  ('&NOTELIG(&C)' EQ '417')     *         W
&L(25)   SETB  ('&NOTELIG(&C)' EQ '513')     *         E
&L(26)   SETB  ('&NOTELIG(&C)' EQ '514')     *         R
&L(27)   SETB  ('&NOTELIG(&C)' EQ '613')     *         E
&L(28)   SETB  ('&NOTELIG(&C)' EQ '614')     *
&L(29)   SETB  ('&NOTELIG(&C)' EQ '626')     *         S
&L(30)   SETB  ('&NOTELIG(&C)' EQ '637')     *         P
&L(31)   SETB  ('&NOTELIG(&C)' EQ '700')     *         E
&L(32)   SETB  ('&NOTELIG(&C)' EQ '714')     *         C
&L(33)   SETB  ('&NOTELIG(&C)' EQ '717')     *         I
&L(34)   SETB  ('&NOTELIG(&C)' EQ '806')     *         F
&L(35)   SETB  ('&NOTELIG(&C)' EQ '813')     *         I
&L(36)   SETB  ('&NOTELIG(&C)' EQ '837')     *         E
&L(37)   SETB  ('&NOTELIG(&C)' EQ '906')     *         D
&L(38)   SETB  ('&NOTELIG(&C)' EQ '913')     *
&L(39)   SETB  ('&NOTELIG(&C)' EQ '926')     *
&L(40)   SETB  ('&NOTELIG(&C)' EQ '937')     *
&L(41)   SETB  ('&NOTELIG(&C)' EQ 'A14')     *
&L(42)   SETB  ('&NOTELIG(&C)' EQ 'B14')     *
&L(43)   SETB  ('&NOTELIG(&C)' EQ 'B37')     *
&L(44)   SETB  ('&NOTELIG(&C)' EQ 'C13')     *
&L(45)   SETB  ('&NOTELIG(&C)' EQ 'E37')     *
&L(46)   SETB  ('&NOTELIG(&C)' EQ 'E1F')     *
&L(47)   SETB  ('&NOTELIG(&C)' EQ '32D')     *
&L(48)   SETB  ('&NOTELIG(&C)' EQ '737')     *
&L(49)   SETB  ('&NOTELIG(&C)' EQ '422')     *
&L(50)   SETB  ('&NOTELIG(&C)' EQ '2F3')
&B       SETA  0                        RESET
.A       AIF   (&B EQ 50).M4            INVALID CODE SPECIFIED
&B       SETA  &B+1                     FIND CODE PRESENTLY SET
         AIF   (NOT &L(&B)).A           NOT SET,CHECK NEXT
&L(&B)   SETB  0                        RESET
         AIF   (&SGCKPB(&B)).M5         PREVIOUSLY SPECIFIED
&SGCKPB(&B) SETB 1                      SET APPROPRIATE SWITCH
    MNOTE *,'                 &NOTELIG(&C)  '
         AGO   .BEGIN
.M1 MNOTE 5,'* * * IEICKP100 CKPTREST MACRO PREVIOUSLY SPECIFIED'
&SGQUITB SETB  1
         AGO   .MEND
.M2 MNOTE 5,'* * * IEICKP101 MAXIMUM OF 50 COMPLETION CODES ALLOWED'
&SGQUITB SETB  1
         AGO   .CC
.M4 MNOTE 5,'* * * IEICKP102 COMPLETION CODE &NOTELIG(&C) IS INVALID'
&SGQUITB SETB  1
         AGO   .BEGIN
.M5 MNOTE 5,'* * * IEICKP103 &NOTELIG(&C) WAS SPECIFIED PREVIOUSLY'
&SGQUITB SETB  1
         AGO   .BEGIN
.M8 MNOTE 5,'* * * IEICKP104 MAX OF 10 USER COMPLETION CODES ALLOWED'
&SGQUITB SETB  1
         AGO   .K
.M9  MNOTE 5,'* * * IEICKP105 COMPLETION CODE &ELIGBLE(&N) INVALID'
&SGQUITB SETB 1
         AGO   .E
.MEND    MEND
