         MACRO
         AFFINITY
         COPY  SGGBLPAK
         LCLA  &I,&J,&K,&L,&M,&N,&CT,&MASK,&TCPU,&TNME         @ZA27400
         LCLB  &CPU(16)
         LCLC  &NAME
         ACTR   10000                                          OZ00613
.***** START OF SPECIFICATIONS **************************************
.*
.* MODULE NAME - AFFINITY
.*
.* DESCRIPTIVE NAME - CPU AFFINITY SPECIFICATIONS
.*
.* COPYRIGHT - NONE
.*
.* STATUS - CHANGE LEVEL 01
.*
.* FUNCTION -
.*       THE AFFINITY MACRO IS USED TO SPECIFY THOSE PROGRAMS WHICH
.*       CAN ONLY RUN ON SOME BUT NOT ALL OF THE CPUS WHICH ARE A
.*       PART OF THE MULTIPROCESSING SYSTEM.
.*
.* NOTES - N/A
.*
.* MODULE TYPE - MACRO
.*
.* ENTRY POINT - N/A
.*
.* INPUT - THE FOLLOWING PARAMETERS ARE ALLOWED ON THE AFFINITY MACRO
.*             AFF-NAME-(CPUA,CPUB---),...
.*
.*             AFF  - THREE CHARACTER CONSTANT DEPICTING THE BEGINNING
.*                    OF AN ENTRY.
.*             NAME - NAME OF THE MODULE REQUIRING CPU AFFINITY
.*             CPUID- CPU NUMBERS ON WHICH THE ABOVE MODULE CAN RUN
.*
.* OUTPUT -
.*       THE GLOBALS USED ARE -
.*             &SGMENTB(38)  - ENTRY SWITHC
.*             &SGAFFNC(1-64)- NAMES REQUIRING CPU AFFINITY
.*             &SGAFFNA(1-64)- COMBINED MASK OF CPUS FOR THE ABOVE
.*                             NAMES.
.*
.*       THE LOCALS USED ARE -
.*             &I    - INDEX TO SUBLIST
.*             &J    - INDEX TO GLOBALS, VALID ONES
.*             &K    - INDEX TO GLOBALS, DUPLICATE CHECK
.*             &L    - INDEX TO CHARACTERS IN EACH ENTRY
.*             &M    - NUMBER OF CHARACTERS IN NAME FIELD
.*             &N    - CHARACTERS IN CPUID
.*             &TCPU - TOTAL CPU CHARACTERS                    @ZA27400
.*             &TNME - TOTAL PROGRAM NAME CHARACTERS           @ZA27400
.*             &CT   - NUMBER OF CHARACTERS IN EACH OPERAND
.*             &MASK - TOTAL MASK OF CPU BITS
.*             &CPU  - BIT SET WHEN CPU ENCOUNTERED, DUPLICATE CK
.*             &NAME - SAVE AREA FOR THE NAME
.*
.* EXIT, NORMAL - N/A
.*
.* EXIT, ERROR - N/A
.*
.* EXTERNAL REFERENCES - N/A
.*
.* TABLES - N/A
.*
.* MACROS - NONE
.*
.* CHANGE ACTIVITY - VS01199,OZ00613,@ZA27400
.*
.****** END OF SPECIFICATIONS ***************************************
.*       THE FOLLOWING CHECKS FOR A PREVIOUS CALL TO AFFINITY
.*
         AIF   (&SGMENTB(38)).M1   CAN CALL AFFINITY ONLY ONCE
&SGMENTB(38) SETB 1                INDICATE CALL TO MACRO
.*
.*       THIS SECTION INITIALIZES FOR THE LOOP THROUGH THE OPERANDS
.*
&I       SETA  1                   INDEX TO FIRST OPERAND
&J       SETA  1                   INDEX TO FIRST SET OF GLOBALS
&TNME    SETA  1                                               @ZA27400
&TCPU    SETA  1                                               @ZA27400
         AIF   (N'&SYSLIST EQ 0).M2 NO OPERANDS SPECIFIED
.*
.*       THIS SECTION LOOPS THROUGH THE CHARACTERS LOOKING FOR A
.*       VALID PROGRAM NAME AFTER DETERMINING THE ENTRY STARTS
.*       CORRECTLY.
.*
.LOOP1   ANOP
         AIF   ('&SGAFFNC(64)' NE '').M8 TOO MANY NAMES
&CT      SETA  K'&SYSLIST(&I)      NUMBER OF CHARACTERS IN OPERAND
         AIF   (&CT LT 7).M3       7 CHARACTER MINIMUM FOR OPERAND
         AIF   ('&SYSLIST(&I)'(1,4) NE 'AFF-').M3 ENTRY MUST START
.*                                 WITH AFF- OR IT IS INVALID
&L       SETA  5                   SET CHAR INDEX TO THE FIRST CHAR
.*                                 OF THE NAME FIELD
         AIF   ('&SYSLIST(&I)'(5,1) GE 'A' AND '&SYSLIST(&I)'(5,1) LE '*
               Z').LOOP2           ALPHABETIC FIRST CHARACTER
         AIF   ('&SYSLIST(&I)'(5,1) NE '$' AND '&SYSLIST(&I)'(5,1) NE '*
               @' AND '&SYSLIST(&I)'(5,1) NE '#').M4 SPECIAL CHARACTERS
.*                                 ARE ALLOWED AS FIRST CHARACTER
.*                                 OF NAMES.
.LOOP2   ANOP
&L       SETA  &L+1                INCREMENT CHARACTER INDEX
         AIF   (&L GT &CT).M3      ENTRY TERMINATED TOO SOON
         AIF   ('&SYSLIST(&I)'(&L,1) EQ '-').NM1 END OF NAME FOUND
         AIF   ('&SYSLIST(&I)'(&L,1) GE 'A' AND '&SYSLIST(&I)'(&L,1) LE*
               '9').LOOP2          ALPHAMERIC CHARACTER VALID
         AIF   ('&SYSLIST(&I)'(&L,1) NE '$' AND '&SYSLIST(&I)'(&L,1) NE*
               '@' AND '&SYSLIST(&I)'(&L,1) NE '#').M4 SPECIAL CHARS OK
         AGO   .LOOP2              CONTINUE SCANNING NAME
.NM1     ANOP
&M       SETA  &L-5                CALCULATE LENGTH OF NAME
         AIF   (&M GT 8).M4        IF NAME GT 8 CHARS, TOO LONG
&NAME    SETC  '&SYSLIST(&I)'(5,&M) SPECIFY THE CHARS IN THE NAME
.*
.*       CHECK FOR DUPLICATE NAMES IN GLOBALS, IGNORE IF A DUPLICATE.
.*
&K       SETA  1                   INITIALIZE DUPLICATE CK INDEX
.LOOP3   AIF   (&K EQ &J).NOTDUP   IF EXHAUST LIST, NAME IS NOT DUP
         AIF   ('&SGAFFNC(&K)' EQ '&NAME').M5 DUPLICATE FOUND
&K       SETA  &K+1                INCREMENT DUP INDEX
         AGO   .LOOP3              CONTINUE SEARCH FOR DUPLICATE
.*
.*       NAME IS VALID, CHECK CPU IDS. 0 THROUGH 15 IS ALLOWED
.*
.NOTDUP  ANOP
.*   INCREMENT TOTAL PROG CHARACTER COUNT INCLUDING THE COMMA  @ZA27400
&TNME    SETA  &TNME+(&M+1)                                    @ZA27400
         AIF   (&TNME GT 255).M10  ERROR IF MORE THAN 255      @ZA27400
&MASK    SETA  0                   INIT MASK TO ZERO
&L       SETA  &L+1                GET TO FIRST CHAR OF CPUS
&CPU(1)  SETB  0                   INIT CPU 0 SWITCH
&CPU(2)  SETB  0                   INIT CPU 1 SWITCH
&CPU(3)  SETB  0                   INIT CPU 2 SWITCH
&CPU(4)  SETB  0                   INIT CPU 3 SWITCH
&CPU(5)  SETB  0                   INIT CPU 4 SWITCH
&CPU(6)  SETB  0                   INIT CPU 5 SWITCH
&CPU(7)  SETB  0                   INIT CPU 6 SWITCH
&CPU(8)  SETB  0                   INIT CPU 7 SWITCH
&CPU(9)  SETB  0                   INIT CPU 8 SWITCH
&CPU(10) SETB  0                   INIT CPU 9 SWITCH
&CPU(11) SETB  0                   INIT CPU 10 SWITCH
&CPU(12) SETB  0                   INIT CPU 11 SWITCH
&CPU(13) SETB  0                   INIT CPU 12 SWITCH
&CPU(14) SETB  0                   INIT CPU 13 SWITCH
&CPU(15) SETB  0                   INIT CPU 14 SWITCH
&CPU(16) SETB  0                   INIT CPU 15 SWITCH
         AIF   (&L GT &CT).M3      ENTRY TERMINATED TOO SOON
         AIF   ('&SYSLIST(&I)'(&L,1) NE '(').ONE ONLY ONE CPU SPEC.
&L       SETA  &L+1                INCR CHAR CTR TO NEXT CHAR
.LOOP4   AIF   (&L GT &CT-1).M9    INVALID SYNTAX IN CPU IDS
&N       SETA  1                   INDICATE NO OF CHARS IN CPUID
         AIF   ('&SYSLIST(&I)'(&L,1) EQ '0').CPU0 CPU 0 SPECIFIED
         AIF   ('&SYSLIST(&I)'(&L,1) EQ '1' AND ('&SYSLIST(&I)'(&L+1,1)*
                EQ ')' OR '&SYSLIST(&I)'(&L+1,1) EQ ',')).CPU1
         AIF   ('&SYSLIST(&I)'(&L,1) EQ '2').CPU2 CPU 2 SPECIFIED
         AIF   ('&SYSLIST(&I)'(&L,1) EQ '3').CPU3 CPU 3 SPECIFIED
         AIF   ('&SYSLIST(&I)'(&L,1) EQ '4').CPU4 CPU 4 SPECIFIED
         AIF   ('&SYSLIST(&I)'(&L,1) EQ '5').CPU5 CPU 5 SPECIFIED
         AIF   ('&SYSLIST(&I)'(&L,1) EQ '6').CPU6 CPU 6 SPECIFIED
         AIF   ('&SYSLIST(&I)'(&L,1) EQ '7').CPU7 CPU 7 SPECIFIED
         AIF   ('&SYSLIST(&I)'(&L,1) EQ '8').CPU8 CPU 8 SPECIFIED
         AIF   ('&SYSLIST(&I)'(&L,1) EQ '9').CPU9 CPU 9 SPECIFIED
         AIF   (&L GT &CT-2).M9    INVALID SYNTAX IN CPU IDS
&N       SETA  2                   NO CHARS IN CPU ID
         AIF   ('&SYSLIST(&I)'(&L,2) EQ '10').CPU10 CPU 10 SPECIFIED
         AIF   ('&SYSLIST(&I)'(&L,2) EQ '11').CPU11 CPU 11 SPECIFIED
         AIF   ('&SYSLIST(&I)'(&L,2) EQ '12').CPU12 CPU 12 SPECIFIED
         AIF   ('&SYSLIST(&I)'(&L,2) EQ '13').CPU13 CPU 13 SPECIFIED
         AIF   ('&SYSLIST(&I)'(&L,2) EQ '14').CPU14 CPU 14 SPECIFIED
         AIF   ('&SYSLIST(&I)'(&L,2) NE '15').M6 CPUID NOT 0 TO 15
         AIF   (&CPU(16)).M7       DUPLICATE CPU CHECK
&CPU(16) SETB  1                   INDICATE CPU 15 ENTRY
&MASK    SETA  &MASK+1             SET MASK FOR CPU 15
         AGO   .CONT
.CPU14   AIF   (&CPU(15)).M7       DUPLICATE CPU CHECK
&CPU(15) SETB  1                   INDICATE CPU 14 ENTRY
&MASK    SETA  &MASK+2             SET MASK FOR CPU 14
         AGO   .CONT
.CPU13   AIF   (&CPU(14)).M7       DUPLICATE CPU CHECK
&CPU(14) SETB  1                   INDICATE CPU 13 ENTRY
&MASK    SETA  &MASK+4             SET MASK FOR CPU 13
         AGO   .CONT
.CPU12   AIF   (&CPU(13)).M7       DUPLICATE CPU CHECK
&CPU(13) SETB  1                   INDICATE CPU 12 ENTRY
&MASK    SETA  &MASK+8             SET MASK FOR CPU 12
         AGO   .CONT
.CPU11   AIF   (&CPU(12)).M7       DUPLICATE CPU CHECK
&CPU(12) SETB  1                   INDICATE CPU 11 ENTRY
&MASK    SETA  &MASK+16            SET MASK FOR CPU 11
         AGO   .CONT
.CPU10   AIF   (&CPU(11)).M7       DUPLICATE CPU CHECK
&CPU(11) SETB  1                   INDICATE CPU 10 ENTRY
&MASK    SETA  &MASK+32            SET MASK FOR CPU 10
         AGO   .CONT
.CPU9    AIF   (&CPU(10)).M7       DUPLICATE CPU CHECK
&CPU(10) SETB  1                   INDICATE CPU 9 ENTRY
&MASK    SETA  &MASK+64            SET MASK FOR CPU 9
         AGO   .CONT
.CPU8    AIF   (&CPU(9)).M7        DUPLICATE CPU CHECK
&CPU(9)  SETB  1                   INDICATE CPU 8 ENTRY
&MASK    SETA  &MASK+128           SET MASK FOR CPU 8
         AGO   .CONT
.CPU7    AIF   (&CPU(8)).M7        DUPLICATE CPU CHECK
&CPU(8)  SETB  1                   INDICATE CPU 7 ENTRY
&MASK    SETA  &MASK+256           SET MASK FOR CPU 7
         AGO   .CONT
.CPU6    AIF   (&CPU(7)).M7        DUPLICATE CPU CHECK
&CPU(7)  SETB  1                   INDICATE CPU 6 ENTRY
&MASK    SETA  &MASK+512           SET MASK FOR CPU 6
         AGO   .CONT
.CPU5    AIF   (&CPU(6)).M7        DUPLICATE CPU CHECK
&CPU(6)  SETB  1                   INDICATE CPU 5 ENTRY
&MASK    SETA  &MASK+1024          SET MASK FOR CPU 5
         AGO   .CONT
.CPU4    AIF   (&CPU(5)).M7        DUPLICATE CPU CHECK
&CPU(5)  SETB  1                   INDICATE CPU 4 ENTRY
&MASK    SETA  &MASK+2048          SET MASK FOR CPU 4
         AGO   .CONT
.CPU3    AIF   (&CPU(4)).M7        DUPLICATE CPU CHECK
&CPU(4)  SETB  1                   INDICATE CPU 3 ENTRY
&MASK    SETA  &MASK+4096          SET MASK FOR CPU 3
         AGO   .CONT
.CPU2    AIF   (&CPU(3)).M7        DUPLICATE CPU CHECK
&CPU(3)  SETB  1                   INDICATE CPU 2 ENTRY
&MASK    SETA  &MASK+8192          SET MASK FOR CPU 2
         AGO   .CONT
.CPU1    AIF   (&CPU(2)).M7        DUPLICATE CPU CHECK
&CPU(2)  SETB  1                   INDICATE CPU 1 ENTRY
&MASK    SETA  &MASK+16384         SET MASK FOR CPU 1
         AGO   .CONT
.CPU0    AIF   (&CPU(1)).M7        DUPLICATE CPU CHECK
&CPU(1)  SETB  1                   INDICATE CPU 0 ENTRY
&MASK    SETA  &MASK+32768         SET MASK FOR CPU 0
.CONT    AIF   ('&SYSLIST(&I)'(&L+&N,1) EQ ')').ENDCK
         AIF   ('&SYSLIST(&I)'(&L+&N,1) NE ',').M9
&L       SETA  &L+&N+1             INCREMENT COUNTER
         AGO   .LOOP4              CONTINUE CPUID SCAN
.ENDCK   AIF   (&L+&N NE &CT).M3   END OF PARAMETER HERE
.UPDTGLB ANOP
&SGAFFNC(&J) SETC '&NAME'          SET NAME GLOBAL
&SGAFFNA(&J) SETA &MASK            SET MASK GLOBAL
.* ROUTINE TO CALC TOTAL CPU ID CHARACTERS INC TWO PARENS      @ZA27400
.*                   CPU ID LENGTH = 5 IF GE 10000             @ZA27400
         AIF   (&MASK LT 10000).LGTH5                          @ZA27400
&TCPU    SETA  &TCPU+6             INCREMENT TOTAL CPU CHARS   @ZA27400
         AGO   .TESTT                                          @ZA27400
.LGTH5   AIF   (&MASK LT 1000).LGTH4 CPU ID LGTH=4 IF GE 1000  @ZA27400
&TCPU    SETA  &TCPU+5             INCREMENT TOTAL CPU CHARS   @ZA27400
         AGO   .TESTT                                          @ZA27400
.LGTH4   AIF   (&MASK LT 100).LGTH3  CPU ID LGTH=3 IF GE 100   @ZA27400
&TCPU    SETA  &TCPU+4             INCREMENT TOTAL CPU CHARS   @ZA27400
         AGO   .TESTT                                          @ZA27400
.LGTH3   AIF   (&MASK LT 10).LGTH2   CPU ID LGTH=2 IF GE 10    @ZA27400
&TCPU    SETA  &TCPU+3             INCREMENT TOTAL CPU CHARS   @ZA27400
         AGO   .TESTT                                          @ZA27400
.LGTH2   ANOP                        CPU ID LGTH=1             @ZA27400
&TCPU    SETA  &TCPU+2             INCREMENT TOTAL CPU CHARS   @ZA27400
.TESTT   AIF   (&TCPU GT 255).M11  TOTAL CPU CHAR GT 255       @ZA27400
         MNOTE *,'PROGRAM &NAME AVAILABLE FOR CPUS MASKED AS &MASK'
&J       SETA  &J+1                INCREMENT GLOBAL INDEX
.LOOP5   ANOP
&I       SETA  &I+1                INCREMENT PARAMETER INDEX
         AIF   (N'&SYSLIST LT &I).MEND END OF ENTRIES
         AGO   .LOOP1              NO, CONTINUE LOOP
.ONE     AIF   (&CT EQ &L).N10     ONE CHARACTER FIELD
         AIF   (&CT NE &L+1).M3    IF MORE THAN TWO, ERROR
         AIF   ('&SYSLIST(&I)'(&L,2) NE '15').N15 NOT A 15
&MASK    SETA  1                   SET MASK FOR 15
         AGO   .UPDTGLB            UPDATE GLOBALS
.N15     AIF   ('&SYSLIST(&I)'(&L,2) NE '14').N14 NOT A 14
&MASK    SETA  2                   SET MASK FOR 14
         AGO   .UPDTGLB            UPDATE GLOBALS
.N14     AIF   ('&SYSLIST(&I)'(&L,2) NE '13').N13 NOT A 13
&MASK    SETA  4                   SET MASK FOR 13
         AGO   .UPDTGLB            UPDATE GLOBALS
.N13     AIF   ('&SYSLIST(&I)'(&L,2) NE '12').N12 NOT A 12
&MASK    SETA  8                   SET MASK FOR 12
         AGO   .UPDTGLB            UPDATE GLOBALS
.N12     AIF   ('&SYSLIST(&I)'(&L,2) NE '11').N11 NOT A 11
&MASK    SETA  16                  SET MASK FOR 11
         AGO   .UPDTGLB            UPDATE GLOBALS
.N11     AIF   ('&SYSLIST(&I)'(&L,2) NE '10').M8 NOT A 10
&MASK    SETA  32                  SET MASK FOR 10
         AGO   .UPDTGLB            UPDATE GLOBALS
.N10     AIF   ('&SYSLIST(&I)'(&L,1) NE '9').N9 NOT A 9
&MASK    SETA  64                  SET MASK FOR 9
         AGO   .UPDTGLB            UPDATE GLOBALS
.N9      AIF   ('&SYSLIST(&I)'(&L,1) NE '8').N8 NOT A 8
&MASK    SETA  128                 SET MASK FOR 8
         AGO   .UPDTGLB            UPDATE GLOBALS
.N8      AIF   ('&SYSLIST(&I)'(&L,1) NE '7').N7 NOT A 7
&MASK    SETA  256                 SET MASK FOR 7
         AGO   .UPDTGLB            UPDATE GLOBALS
.N7      AIF   ('&SYSLIST(&I)'(&L,1) NE '6').N6 NOT A 6
&MASK    SETA  512                 SET MASK FOR 6
         AGO   .UPDTGLB            UPDATE GLOBALS
.N6      AIF   ('&SYSLIST(&I)'(&L,1) NE '5').N5 NOT A 5
&MASK    SETA  1024                SET MASK FOR 5
         AGO   .UPDTGLB            UPDATE GLOBALS
.N5      AIF   ('&SYSLIST(&I)'(&L,1) NE '4').N4 NOT A 4
&MASK    SETA  2048                SET MASK FOR 4
         AGO   .UPDTGLB            UPDATE GLOBALS
.N4      AIF   ('&SYSLIST(&I)'(&L,1) NE '3').N3 NOT A 3
&MASK    SETA  4096                SET MASK FOR 3
         AGO   .UPDTGLB            UPDATE GLOBALS
.N3      AIF   ('&SYSLIST(&I)'(&L,1) NE '2').N2 NOT A 2
&MASK    SETA  8192                SET MASK FOR 2
         AGO   .UPDTGLB            UPDATE GLOBALS
.N2      AIF   ('&SYSLIST(&I)'(&L,1) NE '1').N1 NOT A 1
&MASK    SETA  16384               SET MASK FOR 1
         AGO   .UPDTGLB            UPDATE GLOBALS
.N1      AIF   ('&SYSLIST(&I)'(&L,1) NE '0').M6 NOT A 0
&MASK    SETA  32768               SET MASK FOR 0
         AGO   .UPDTGLB            UPDATE GLOBALS
.*
.*       MESSAGES - WARNING AND ERROR
.*
.M1      MNOTE 5,'* * * IEIAFF001 AFFINITY MAY BE SPECIFIED ONLY ONCE'
&SGQUITB SETB  1                   QUIT SWITCH
         MEXIT
.M2      MNOTE 5,'* * * IEIAFF002 NO OPERANDS SPECIFIED ON AFFINITY'
&SGQUITB SETB  1                   QUIT SWITCH
         MEXIT
.M3      MNOTE 5,'* * * IEIAFF003 GENERAL SYNTAX OF OPERAND INVALID'
&SGQUITB SETB  1                   QUIT SWITCH
         MEXIT
.M4    MNOTE 5,'* * * IEIAFF004 INVALID PROGRAM NAME &SYSLIST(&I)(5,8)'
&SGQUITB SETB  1                   QUIT SWITCH
         MEXIT
.M5      MNOTE *,'* * * IEIAFF005 DUPLICATE NAME &NAME'
         AGO   .LOOP5              LOOK AT NEXT ENTRY
.M6     MNOTE 5,'* * * IEIAFF006 CPU ID NOT BETWEEN 0 AND 15 &SYSLIST(&*
               I)(&L,2)'
&SGQUITB SETB  1                   QUIT SWITCH
         MEXIT
.M7     MNOTE *,'* * * IEIAFF007 DUPLICATE CPU SPECIFICATION &SYSLIST(&*
               I)(&L,2)'
         AGO   .CONT               CONTINUE SCAN
.M8     MNOTE 0,'* * * IEIAFF008 MORE THAN 64 NAMES SPECIFIED. THE LAST*
                ARE IGNORED'
            AGO .MEND
.M9  MNOTE  5,'* * * IEIAFF009 INVALID SYNTAX IN CPUIDS, ENTRY &I'
&SGQUITB SETB  1                   QUIT SWITCH
         AGO   .NOTDUP
.M10 MNOTE  5,'* * * IEIAFF010 TOTAL CHARACTERS IN PROGRAM NAMES EXCEED*
                255.'                                          @ZA27400
&SGQUITB SETB  1                   QUIT SWITCH                 @ZA27400
         MEXIT                                                 @ZA27400
.M11 MNOTE  5,'* * * IEIAFF011 TOTAL CHARACTERS IN CPU IDS EXCEEDS 255'
.*                                                             @ZA27400
&SGQUITB SETB  1                   QUIT SWITCH                 @ZA27400
         MEXIT                                                 @ZA27400
.MEND    MEND
