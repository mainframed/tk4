         MACRO
         SGIEA201
.*  LAST UPDATE = 1/10/74                                        Y02952
.*              = 10/07/75 (TYPE 6 SVC)                        @Z40FPSM
.*              = 10/13/75 (NON-PREEMPTIBLE SVC)               @Z40FPSM
.*
.* CHANGE = YM06123, YM06064, M02827, M02066
.*
         COPY  SGGBLPAK
         LCLA  &I,&TYPE                                          Y02952
         LCLA  &ON                                               Y02952
         LCLB  &OFF                                              Y02952
         LCLC  &NAME,&C,&BLK,&TYPEC,&SVCNO,&CON,&B               Y02952
         LCLC  &FUNCT,&FUNC,&LOCK,&COMMA,&HOLD,&FUNCX            Y02952
         LCLC  &ZEROS,&ZERO,&ZERO3,&ONE,&TYP,&BYT1,&NP,&NPP    @Z40FPSM
         ACTR  32767                                             Y02952
&SGCTRLC(6) SETC 'IEASVC00'
         COPY  SGASMPAK
.*
.* PRINT SVC TABLE
.*
&ON      SETA  1                                                 Y02952
&OFF     SETB  0                                                 Y02952
&I       SETA  1
&BLK     SETC  '          '                                      Y02952
 MNOTE *,'* * * * * * * SVC TABLE * * * * * * * * * * * * * * * * * * '
 MNOTE *,'NO.  TYPE  APF CODE      N/P  LOCKS                         '
 MNOTE *,'                                                            '
 MNOTE *,' 0    1    UNAUTHORIZED  NO   LOCAL                         '
.NEXT0   ANOP
.*  DETERMINE THE TYPE OF THE SVC                                Y02952
.*                                                               Y02952
&TYPE    SETA  (4*&SGSVCAB(&I)+2*&SGSVCBB(&I)+1*&SGSVCCB(&I))
         AIF   (&TYPE EQ 0).NEXT2
&SVCNO   SETC  '&I'.'&BLK'(1,2)
&TYPEC   SETC  'NOP'
         AIF   (&TYPE EQ 5).NEXT1
&TYPEC   SETC  '&TYPE'
.NEXT1   ANOP
&TYPEC   SETC  '&TYPEC'.'&BLK'(1,2)
&TYPEC   SETC  '&TYPEC'(1,3)                                     Y02952
&SVCNO   SETC  '&SVCNO'(1,3)
.*                                                               Y02952
.*  DETERMINE THE APF AUTHORIZATION                              Y02952
.*                                                               Y02952
&FUNCT   SETC  'AUTHORIZED'                                      Y02952
         AIF   (&SGSVCFA(&I) EQ &ON).AUTH                       YM06123
&FUNCT   SETC  'UNAUTHORIZED'                                    Y02952
.AUTH    ANOP                                                    Y02952
&FUNC    SETC  '&FUNCT'.'&BLK'(1,2)           ADD 2 BLANKS TO    Y02952
.*                                            END OF WORD        Y02952
&FUNC    SETC  '&FUNC'(1,12)                  TRUNCATE WORD TO   Y02952
.*                   12 CHARACTERS--EITHER 'AUTHORIZED  '  OR    Y02952
.*                   'UNAUTHORIZED'                              Y02952
.*                                                               Y02952
.*  DETERMINE THE LOCKS TO BE ACQUIRED                           Y02952
.*                                                               Y02952
&COMMA   SETC  ','                                               Y02952
&LOCK    SETC  '&BLK'                         SET LOCK TO BLANKS Y02952
         AIF   (&TYPE EQ 6).ENDLOCK           NO LOCKS FOR TYPE 6
.*                                                             @Z40FPSM
         AIF   (&SGSVC1B(&I) EQ &OFF).CMS     LOCAL LOCK?        Y02952
&LOCK    SETC  'LOCAL'                        SET LOCK TO 'LOCAL Y02952
.CMS     AIF   (&SGSVC2B(&I) EQ &OFF).OPT     CMS LOCK?          Y02952
         AIF   ('&LOCK' EQ '&BLK').FIRST      FIRST LOCK FOUND?  Y02952
&LOCK    SETC  '&LOCK'.'&COMMA'.'CMS'         SET LOCK TO:       Y02952
.*                                            'LOCAL,CMS'        Y02952
         AGO   .OPT                                              Y02952
.FIRST   ANOP                                                    Y02952
&LOCK    SETC   'CMS'                         SET LOCK TO 'CMS'  Y02952
.OPT     AIF    (&SGSVC3B(&I) EQ &OFF).SALLOC SRM LOCK?        @Z40FPSM
         AIF    ('&LOCK' EQ '&BLK').FIRST1    FIRST LOCK FOUND?  Y02952
&LOCK    SETC   '&LOCK'.'&COMMA'.'SRM'        CONCATENATE      @Z40FPSM
.*                           'SRM' TO OTHER LOCK NAMES         @Z40FPSM
         AGO    .SALLOC                                          Y02952
.FIRST1  ANOP                                                    Y02952
&LOCK    SETC  'SRM'                          SET LOCK TO      @Z40FPSM
.*                                            'SRM'            @Z40FPSM
.SALLOC  AIF   (&SGSVC4B(&I) EQ &OFF).DISPAT  SALLOC LOCK?       Y02952
         AIF   ('&LOCK' EQ '&BLK').FIRST2     FIRST LOCK FOUND?  Y02952
&LOCK    SETC  '&LOCK'.'&COMMA'.'SALLOC'      CONCATENATE        Y02952
.*                           'SALLOC' TO PRIOR LOCK NAMES        Y02952
         AGO   .DISPAT                                           Y02952
.FIRST2  ANOP                                                    Y02952
&LOCK    SETC  'SALLOC'                       SET LOCK TO        Y02952
.*                                            'SALLOC'           Y02952
.DISPAT  AIF   (&SGSVC5B(&I) EQ &OFF).ENDLOCK DISPATCHER LOCK?   Y02952
         AIF   ('&LOCK' EQ '&BLK').FIRST3     FIRST LOCK FOUND?  Y02952
&LOCK    SETC  '&LOCK'.'&COMMA'.'DISPATCH'    CONCATENATE        Y02952
.*                          'DISPATCHER' TO PRIOR LOCK NAMES     Y02952
         AGO   .ENDLOCK                                          Y02952
.FIRST3  ANOP                                                    Y02952
&LOCK    SETC  'DISPATCHER'                   SET LOCK TO        Y02952
.*                                            'DISPATCHER'       Y02952
.ENDLOCK ANOP                                                    Y02952
.*                                                             @Z40FPSM
.* DETERMINE IF SVC IS NON-PREEMPTIBLE                         @Z40FPSM
.*                                                             @Z40FPSM
         AIF  (&SGSVNPB(&I) EQ &OFF).NPOFF                     @Z40FPSM
&NP      SETC  'YES'              N/P SPECIFIED                @Z40FPSM
         AGO    .PRINT                                         @Z40FPSM
.NPOFF   ANOP                                                  @Z40FPSM
&NP      SETC  'NO '              N/P NOT SPECIFIED            @Z40FPSM
.PRINT   ANOP                                                  @Z40FPSM
 MNOTE *,' &SVCNO  &TYPEC  &FUNC  &NP  &LOCK'                  @Z40FPSM
.NEXT2   ANOP
&I       SETA  &I+1
         AIF   (&I LE 255).NEXT0
 MNOTE *,' * * * * * * * * * * * * * * * * * * * * * * * * * * * * *'
.*
.* GENERATE SVC TABLE
.*
         PUNCH 'SVCTABLE   CSECT'
         PUNCH ' DS    0D'                                       M02066
.*                                                              YM06064
.*  SET BIT VALUES AND PADDING ZEROS TO BE USED                 YM06064
.*  IN GENERATING ENTRIES.                                      YM06064
.*                                                              YM06064
&ZEROS   SETC  '00000000'                                       YM06064
&ZERO    SETC  '0'                                              YM06064
&ONE     SETC  '1'                                              YM06064
&ZERO3   SETC  '000'                                            YM06064
.*                                                               Y02952
.*  SET NUMBER AND TYPE                                          Y02952
.*                                                               Y02952
&I       SETA  0
&CON     SETC  'V('                           SET SVC 0          Y02952
&NAME    SETC  'IGC000'                       NAME               Y02952
&B       SETC  ')'                            AND                Y02952
&C       SETC  ','                                               Y02952
&BYT1    SETC  'X''''00008000'''''            TYPE BYTE=0,     @Z40FPSM
.*                                            UNAUTHORIZED,      Y02952
.*                                         NON-PREEMPTIBLE,    @Z40FPSM
.*                                            LOCAL LOCK         Y02952
         AGO   .PUNCH                         PUNCH SVC 0 ENTRY  Y02952
.NEXT5   ANOP
&I       SETA  &I+1                           INCREMENT TO NEXT
.*                                            SVC NUMBER
&CON     SETC  'V('                           SET VCON SYMBOL    Y02952
&C       SETC  ','                                               Y02952
&B       SETC  ')'                                               Y02952
&TYP     SETC  '0000'                         SET TYPE BYTE TO 0 Y02952
&NPP     SETC  '00'                           NO N/P.          @Z40FPSM
&TYPE    SETA  (4*&SGSVCAB(&I)+2*&SGSVCBB(&I)+1*&SGSVCCB(&I))
.*                                            CALCULATE TYPE     Y02952
         AIF   (&TYPE NE 0).NEXT10
&NAME    SETC  'IGCERROR'                     SET SVC NAME TO    Y02952
.*                                            IGCERROR           Y02952
&TYP     SETC  '1000'                         SET TYPE BYTE TO   Y02952
.*                                            8 (TYPE 2)         Y02952
&FUNCX   SETC  '00'                           UNAUTHORIZED     @Z40FPSM
&HOLD    SETC  '00000'                        NO LOCKS           M02827
         AGO   .MERGE                                            Y02952
.NEXT10  AIF   (NOT(&TYPE EQ 1 OR &TYPE EQ 2 OR &TYPE EQ 6)).NEXT15
.*                                            BRANCH IF NOT    @Z40FPSM
.*                                            TYPE 1 OR 2 OR 6 @Z40FPSM
         AIF   (&TYPE EQ 1).NEXT101
         AIF   (&TYPE NE 6).TYP2              SET TYPE BYTE    @Z40FPSM
.*                                            TO 2 IF TYPE=6   @Z40FPSM
&TYP     SETC  '0010'                                          @Z40FPSM
         AGO   .NEXT101                                        @Z40FPSM
.TYP2    ANOP                                                  @Z40FPSM
&TYP     SETC  '1000'                         SET TYPE BYTE TO   Y02952
.*                                            8 IF TYPE=2        Y02952
.NEXT101 AIF   (&I LT 10).NEXT10A
         AIF   (&I LT 100).NEXT10B
&NAME    SETC  'IGC'.'&I'                     SET SVC NAME TO    Y02952
.*                                            IGC CONCATENATED   Y02952
.*                                            WITH SVC NUMBER    Y02952
         AGO   .NEXT25
.NEXT10A ANOP
&NAME    SETC  'IGC00'.'&I'                   SET SVC NAME TO    Y02952
.*                                            IGC00 CONCATENATED Y02952
.*                                            WITH SVC NUMBER    Y02952
         AGO   .NEXT25
.NEXT10B ANOP
&NAME    SETC  'IGC0'.'&I'                    SET SVC NAME TO    Y02952
.*                                            IGC0 CONCATENATED  Y02952
.*                                            WITH SVC NUMBER    Y02952
         AGO   .NEXT25
.NEXT15  AIF   (NOT(&TYPE EQ 3 OR &TYPE EQ 4)).NEXT20
&TYP     SETC  '1100'                         SET TYPE BYTE TO C Y02952
&NAME    SETC  '0'                            SET NAME TO '0'    Y02952
&CON     SETC  'A('                           SET ADDCON SYMBOL  Y02952
         AGO   .NEXT25
.NEXT20  ANOP
&NAME    SETC  'IGCRETRN'                     FOR TYPE 5 SVC,    Y02952
.*                                            SET NAME TO        Y02952
.*                                            'IGCRETRN'         Y02952
&CON     SETC  'A('                           SET ADDCON SYMBOL  Y02952
.NEXT25  ANOP
.*                                                               Y02952
.*  SET FUNCTION CODE                                            Y02952
.*                                                               Y02952
&FUNCX   SETC  '00'                           SET DEFAULT      @Z40FPSM
.*                                            FUNC. CODE OF 0    Y02952
         AIF   (&SGSVCFA(&I) EQ 0).CHECK1     LEAVE DEFAULT IF   Y02952
.*                                            AUTHORIZATION      Y02952
.*                                            NOT WANTED         Y02952
&FUNCX   SETC  '10'                           SET FUNC CODE TO 1
.*                                                             @Z40FPSM
.*                                            IF AUTHORIZATION   Y02952
.*                                            IS WANTED          Y02952
.CHECK1  ANOP                                                    Y02952
         AIF  (&SGSVNPB(&I) EQ &OFF).NONP                      @Z40FPSM
&NPP     SETC  '10'                           SET N/P          @Z40FPSM
.NONP    ANOP                                                  @Z40FPSM
.*                                                               Y02952
.*  SET UP LOCKS                                                 Y02952
.*                                                               Y02952
         AIF   (&TYPE NE 6).LOCKS             ZERO OUT LOCKS   @Z40FPSM
&HOLD    SETC  '&ZEROS'                       IF TYPE = 6      @Z40FPSM
         AGO   .CONCAT                                         @Z40FPSM
.LOCKS   ANOP                                                  @Z40FPSM
&HOLD    SETC  '&ZERO'                        SET FIRST LOCK     Y02952
.*                                            BIT TO DEFAULT     Y02952
.*                                            OF ZERO            Y02952
         AIF   (&SGSVC1B(&I) EQ &OFF).CHECK2  LOCAL LOCK TO BE   Y02952
.*                                            HELD?              Y02952
&HOLD    SETC  '&ONE'                         YES,SET FIRST      Y02952
.*                                            LOCK BIT TO 1      Y02952
.CHECK2  AIF   (&SGSVC2B(&I) EQ &OFF).ADD0A   CMS LOCK TO BE     Y02952
.*                                            HELD?              Y02952
&HOLD    SETC  '&HOLD'.'&ONE'                 YES, SET SECOND    Y02952
.*                                            LOCK BIT TO 1      Y02952
         AGO   .CHECK3                                           Y02952
.ADD0A   ANOP                                                    Y02952
&HOLD    SETC  '&HOLD'.'&ZERO'                NO, SET SECOND     Y02952
.*                                            LOCK BIT TO 0      Y02952
.CHECK3  AIF   (&SGSVC3B(&I) EQ &OFF).ADD0B   SRM LOCK TO      @Z40FPSM
.*                                            BE HELD?           Y02952
&HOLD    SETC  '&HOLD'.'&ONE'                 YES,SET 3RD LOCK   Y02952
.*                                            BIT TO 1           Y02952
         AGO   .CHECK4                                           Y02952
.ADD0B   ANOP                                                    Y02952
&HOLD    SETC  '&HOLD'.'&ZERO'                NO, SET 3RD LOCK   Y02952
.*                                            BIT TO 0           Y02952
.CHECK4  AIF   (&SGSVC4B(&I) EQ &OFF).ADD0C   SALLOC LOCK TO BE  Y02952
.*                                            HELD?              Y02952
&HOLD    SETC  '&HOLD'.'&ONE'                 YES, SET 4TH LOCK  Y02952
.*                                            BIT TO 1           Y02952
         AGO   .CHECK5                                           Y02952
.ADD0C   ANOP                                                    Y02952
&HOLD    SETC  '&HOLD'.'&ZERO'                NO, SET 4TH LOCK   Y02952
.*                                            BIT TO 0           Y02952
.CHECK5  AIF   (&SGSVC5B(&I) EQ &OFF).ADD0D   DISPATCHER LOCK    Y02952
.*                                            TO BE HELD?        Y02952
&HOLD    SETC  '&HOLD'.'&ONE'                 YES, SET 5TH LOCK  Y02952
.*                                            BIT TO 1           Y02952
         AGO   .MERGE                                            Y02952
.ADD0D   ANOP                                                    Y02952
&HOLD    SETC  '&HOLD'.'&ZERO'                NO, SET 5TH LOCK   Y02952
.*                                            BIT TO 0           Y02952
.MERGE   ANOP                                                    Y02952
&HOLD    SETC  '&HOLD'.'&ZERO3'               ADD 3 ZEROS TO     Y02952
.*                                            COMPLETE LOCK BYTE Y02952
.CONCAT  ANOP                                                  @Z40FPSM
&TYP     SETC  '&TYP'.'&FUNCX'.'&NPP'         CONCATENATE TYPE @Z40FPSM
.*                                            BYTE,FUNC BITS   @Z40FPSM
.*                                            AND N/P BITS.    @Z40FPSM
&BYT1    SETC  'B''''&TYP.&ZEROS.&HOLD.&ZEROS'''''  CONCATENATE  Y02952
.*                                            BYTES CONTAINING   Y02952
.*                                            TYPE, FUNC. CODE,  Y02952
.*                                            N/P AND LOCKS    @Z40FPSM
.PUNCH   ANOP
         PUNCH ' DC &CON&NAME&B&C&BYT1'       PUNCH SVC ENTRY    Y02952
         AIF   (&I LT 255).NEXT5                                 M02066
.*
.*  ENTRY POINT FOR TYPE 5 SVCS
.*
         PUNCH 'IGCRETRN SR    15,15 '
         PUNCH '         BR    14 '
         PUNCH '         END'
         PUNCH '/*'
         MEND
