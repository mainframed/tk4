* /*                                                                 */
* /* MACOMP Y-2 SC1DE/SJD61                                          */
* /* MACSTAT Y-2 73103/Y02020                                        */
* /* MACSTAT Y-2 73155/YM01260                               @YM01260*/
* /* MACSTAT Y-2 73200/Y02113;Y02020                           Y02113*/
* /* MACSTAT Y-2 74161/XA04422                               @XA04422*/
* /* MACSTAT Y-2 74218/ZA00964                               @ZA00964*/
* /* MACSTAT Y-3 75218/ZA04940                               @ZA04940*/
* /* I-02393604                                              @ZA15091*/
* /*                                                                 */
* /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
* /* THIS MACRO WAS CHANGED AS FOLLOWS:                      @YM01260*/
* /*  VS2-2 CHANGES ARE MARKED AS FOLLOWS:                   @YM01260*/
* /*   Y02113- INDICATES CODE CHANGES FOR VS2-2,(NON-CATLG)  @YM01260*/
* /*   Y02020- INDICATES CODE CHANGES FOR VS2-2 CATLG.       @YM01260*/
* /*   @YXZZZZZ- INDICATES A CHANGE AS THE RESULT OF AN APAR @YM01260*/
* /*              OR PTM.                                    @YM01260*/
* /*   @Y30LSXX- INDICATES CODE CHANGES FOR SS/1 SUPPORT     @Y30LSPS*/
* /*                                                         #YM01260*/
* /*   @Z30SSXX- INDICATES CODE CHANGES FOR REL 2 VSAM       @Z30SSPS*/
* /*   @Z40RSSA- INDICATES CODE CHANGES FOR RACF (VS2-4)     @Z40RSSA*/
* /*   @Z40GSDT- INDICATES PERFORMANCE CHANGES FOR VS2-4.1   @Z40GSDT*/
* /*   @ZA37315- VSAM SUPPORT FOR MSS ENHANCEMENT PGM PRODUCT@ZA37315*/
* /* THIS MACRO MUST BE CHANGED TO PACKAGE THE RECOVERY CODE FOR THE */
* /* VARIOUS AREAS...                                        @YM01260*/
* /*                                                         @YM01260*/
* /* THIS MACRO IS CALLED AT STAGE ONE BY THE GENERATE MACRO.        */
* /* THE PURPOSE OF THIS MACRO IS TO PUNCH OUT LINKEDIT      @YM01260*/
* /* CONTROL STATEMENTS AND ANY JCL STATEMENTS NECESSARY     @YM01260*/
* /* FOR VSAM AND VSAM CATALOG. IN ADDITION, CERTAIN GLOBALS @YM01260*/
* /* ARE SET FOR SUBSEQUENT HANDLING.                        @YM01260*/
* /* THIS MACRO SETS THE FOLLOWING GLOBALS,                  @YM01260*/
* /*  .SGCTRLC(7) - SET THE VOL FOR SYSLMOD DD.              @YM01260*/
* /*  .SGCTRLC(8) - SET THE UNIT NAME FOR SYSLMOD DD.        @YM01260*/
* /*  .SGCTRLC(9) - SET THE SHORT LIB NAME FOR SYSLMOD .     @YM01260*/
* /*  .SGCTRLC(10)- FIRST ADDITIONAL L/E PARM.               @YM01260*/
* /*  .SGCTRLC(11)- SECOND ADDITIONAL L/E PARM.              @YM01260*/
* /* THIS MACRO TESTS THE FOLLOWING GLOBALS,                 @YM01260*/
* /*  .NONE ARE TESTED, SYSTEM IS ASSUMED TO BE VS2-2.       @YM01260*/
* /*  .SGCTRLC(19) - ASSUMED TO HAVE UNIT NAME OF LPALIB.    @YM01260*/
* /*  .SGCTRLC(20) - ASSUMED TO HAVE VOLSER OF LPALIB.       @YM01260*/
* /*                                                         @YM01260*/
* /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
         MACRO
         SGIDA401
         COPY  SGGBLPAK
&SGCTRLC(7)    SETC '&SGCTRLC(20)'      VOLNO LPALIB
&SGCTRLC(8)    SETC '&SGCTRLC(19)'      UNITNAME LPALIB
&SGCTRLC(9)    SETC 'LPALIB'
&SGCTRLC(10)   SETC ',RENT'
&SGCTRLC(11)   SETC ',LET'
&SGCTRLC(12)   SETC ',SIZE=(256K,96K)'                        @Z30SSPS
         COPY  SGLEDPK1
 PUNCH '//AOSA0 DD DISP=SHR,VOL=(,RETAIN),DSN=SYS1.AOSA0 '
 PUNCH '//AOSC5 DD DISP=SHR,VOL=(,RETAIN),DSN=SYS1.AOSC5 '    @YM01260
         COPY  SGLEDPK2
.***   CATALOG SERVICES                                       @YM01260
         PUNCH ' ORDER IGG0CLA1 '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLC9 '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLAB '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLAT '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLAH '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLA3 '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLAG '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLBI '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLBQ '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLBM '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLB6 '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLA2 '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLAM '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLAA '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLAY '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLAZ '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLBA '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLBS '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLBT '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLAV '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLAX '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLAW '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLBW '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLB3 '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLBV '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLBK '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLAP '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLAS '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLAE '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLAL '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLAN '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLBX '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLB0 '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLBY '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLB9 '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLB1 '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLAJ '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLAR '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLAU '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLBR '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLBF '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLAK '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLA8 '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLB8 '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLAQ '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLA6 '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLBU '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLA5 '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLB5 '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLBG '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLA7 '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLA4 '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLBH '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLAO '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLAF '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLBL '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLAI '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLBN '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLBE '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLBD '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLB2 '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLBB '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLBC '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLBP '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLAC '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLAD '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLBO '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLDA '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLB4 '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLBJ '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLB7 '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLBZ '                             @Z30SSRS
         PUNCH ' ORDER IGG0CLA9 '                             @Z30SSRS
         PUNCH ' INCLUDE AOSA0(IGG0CLA1) '                      Y02020
         PUNCH ' INCLUDE AOSA0(IGG0CLC9,IGG0CLAA,IGG0CLAB,IGG0CLAC) '
         PUNCH ' INCLUDE AOSA0(IGG0CLAD,IGG0CLAE,IGG0CLAF,IGG0CLAG) '
         PUNCH ' INCLUDE AOSA0(IGG0CLAH,IGG0CLAI) '
         PUNCH ' INCLUDE AOSA0(IGG0CLAJ,IGG0CLAK,IGG0CLAL,IGG0CLAM) '
         PUNCH ' INCLUDE AOSA0(IGG0CLAN,IGG0CLAO) '           @ZA00964
         PUNCH ' INCLUDE AOSA0(IGG0CLAP,IGG0CLAQ,IGG0CLAR) '
         PUNCH ' INCLUDE AOSA0(IGG0CLAS,IGG0CLAT,IGG0CLAU,IGG0CLAV) '
         PUNCH ' INCLUDE AOSA0(IGG0CLAW,IGG0CLAX,IGG0CLAY,IGG0CLAZ) '
         PUNCH ' INCLUDE AOSA0(IGG0CLBA,IGG0CLBB,IGG0CLBC,IGG0CLBD) '
         PUNCH ' INCLUDE AOSA0(IGG0CLBE,IGG0CLBF,IGG0CLBG,IGG0CLBH) '
         PUNCH ' INCLUDE AOSA0(IGG0CLBI) '
         PUNCH ' INCLUDE AOSA0(IGG0CLBJ,IGG0CLBK,IGG0CLBL,IGG0CLBM) '
         PUNCH ' INCLUDE AOSA0(IGG0CLBO) '
         PUNCH ' INCLUDE AOSA0(IGG0CLBN,IGG0CLBP,IGG0CLBQ,IGG0CLBR) '
         PUNCH ' INCLUDE AOSA0(IGG0CLBS,IGG0CLBT,IGG0CLBU,IGG0CLBV) '
         PUNCH ' INCLUDE AOSA0(IGG0CLBW,IGG0CLBX,IGG0CLBY,IGG0CLBZ) '
         PUNCH ' INCLUDE AOSA0(IGG0CLB0,IGG0CLB1,IGG0CLB2) '  @Z30SSPS
         PUNCH ' INCLUDE AOSA0(IGG0CLB3,IGG0CLB4,IGG0CLB5) '  @Z30SSPS
         PUNCH ' INCLUDE AOSA0(IGG0CLB6,IGG0CLB7,IGG0CLB8) '  @Z30SSPS
         PUNCH ' INCLUDE AOSA0(IGG0CLB9,IGG0CLDA) '           @Z30SSPS
         PUNCH ' INCLUDE AOSA0(IGG0CLA2,IGG0CLA3) '           @YM01260
         PUNCH ' INCLUDE AOSA0(IGG0CLA4,IGG0CLA5,IGG0CLA6) '  @Z30SSPS
         PUNCH ' INCLUDE AOSA0(IGG0CLA7,IGG0CLA8) '
         PUNCH ' INCLUDE AOSA0(IGG0CLA9) '                       Y02020
         PUNCH ' INCLUDE AOSA0(IGG0CLDC,IGG0CLDD) '            @Z40RSRC
         PUNCH ' ENTRY IGG0CLA1 '                                Y02020
         PUNCH ' NAME IGG0CLA1(R) '                              Y02020
         PUNCH ' INCLUDE AOSA0(IFG0191X)   EXPECT IEW0461 FOR IFG0191Y,X
               IFG0198N '                                      @YM05844
         PUNCH ' NAME IFG0191X(R) '
         PUNCH ' INCLUDE AOSA0(IFG0191Y) '
         PUNCH ' NAME IFG0191Y(R) '
         PUNCH ' INCLUDE AOSA0(IFG0200N)   EXPECT IEW0461 FOR IFG0190V,X
               IFG0191F '                                      @YM05844
         PUNCH ' ALIAS IFG0550Y '
         PUNCH ' NAME IFG0200N(R) '
         PUNCH ' INCLUDE AOSA0(IDACAT13) '                       Y02020
         PUNCH ' NAME IDACAT13(R) '                              Y02020
.***   VSAM I/O SUPPORT MODULES                               @YM01260
         PUNCH ' ORDER IDA0192A(P) '                          @Z40GSDT
         PUNCH ' ORDER IDA0192F '                             @Z40GSDT
         PUNCH ' ORDER IDA0192B '                             @Z40GSDT
         PUNCH ' ORDER IDA0192Z '                             @Z40GSDT
         PUNCH ' ORDER IDA0192Y '                             @Z40GSDT
         PUNCH ' ORDER IDA0192W '                             @Z40GSDT
         PUNCH ' ORDER IDA0192C(P) '                          @Z40GSDT
         PUNCH ' ORDER IDA0192M '                             @Z40GSDT
         PUNCH ' ORDER IDA0192V '                             @Z40GSDT
         PUNCH ' ORDER IDA0192D '                             @Z40GSDT
         PUNCH ' ORDER IDA0192G(P) '                          @Z40GSDT
         PUNCH ' ORDER IDA0192P '                             @Z40GSDT
         PUNCH ' ORDER IDA0192S '                             @Z40GSDT
         PUNCH ' ORDER IDA0192I '                             @Z40GSDT
         PUNCH ' ORDER IDA0200S '                             @Z40GSDT
         PUNCH ' ORDER IDA0200T(P) '                          @Z40GSDT
         PUNCH ' ORDER IDA0200B '                             @Z40GSDT
         PUNCH ' ORDER IDA0231T(P) '                          @Z40GSDT
         PUNCH ' ORDER IDA0231B '                             @Z40GSDT
         PUNCH ' ORDER IDA0557A(P) '                          @Z40GSDT
         PUNCH ' ORDER IDA0C06C(P) '                          @Z40GSDT
         PUNCH ' ORDER IDA0I96C '                             @Z40GSDT
         PUNCH ' ORDER IDACKRA1 '                             @Z40GSDT
         PUNCH ' ORDER IDA0C05B '                             @Z40GSDT
         PUNCH ' ORDER IDA0A05B(P) '                          @Z40GSDT
.**** VSAM OPEN MODULES
         PUNCH ' INCLUDE AOSA0(IDA0192A) '
         PUNCH ' INCLUDE AOSA0(IDA0192B) '
         PUNCH ' INCLUDE AOSA0(IDA0192F) '
         PUNCH ' INCLUDE AOSA0(IDA0192M) '
         PUNCH ' INCLUDE AOSA0(IDA0192W) '
         PUNCH ' INCLUDE AOSA0(IDA0192Y) '
         PUNCH ' INCLUDE AOSA0(IDA0192Z) '
.**** VSAM CLOSE MODULES
         PUNCH ' INCLUDE AOSA0(IDA0200T) '
         PUNCH ' INCLUDE AOSA0(IDA0200B) '
.**** VSAM CLOSE,TYPE=T MODULES
         PUNCH ' INCLUDE AOSA0(IDA0231T) '
         PUNCH ' INCLUDE AOSA0(IDA0231B) '
.**** VSAM END-OF-VOLUME MODULE
         PUNCH ' INCLUDE AOSA0(IDA0557A) '
.**** VSAM O/C/E GENERAL PURPOSE MODULES
         PUNCH ' INCLUDE AOSA0(IDA0192C) '     CATALOG INTERFACE MODULE
         PUNCH ' INCLUDE AOSA0(IDA0192D) '     MSS INTERFACE MODULE
         PUNCH ' INCLUDE AOSA0(IDA0192G) '     DATA-SPACE SEC VERIFY
         PUNCH ' INCLUDE AOSA0(IDA0192P) '     PROBLEM DETERMINATION
         PUNCH ' INCLUDE AOSA0(IDA0192S) '     SMF MODULE
         PUNCH ' INCLUDE AOSA0(IDA0192V) '     VOLUME MOUNT MODULE
.**** VSAM ISAM INTERFACE MODULES
         PUNCH ' INCLUDE AOSA0(IDA0192I) '
         PUNCH ' INCLUDE AOSA0(IDA0200S) '
.****  VSAM C/R MODULES
         PUNCH '  INCLUDE AOSA0(IDA0C06C,IDA0I96C) '          @Z30SSDT
         PUNCH '  INCLUDE AOSA0(IDA0A05B,IDA0C05B) '          @Z30SSDT
         PUNCH '  INCLUDE AOSA0(IDACKRA1) '                   @Z30SSDT
         PUNCH ' ALIAS IDA0C06C,IDA0I96C,IDA0A05B,IDA0C05B '  @Z30SSDT
.*
         PUNCH ' ALIAS IDA0192V,IDA0192P,IDA0192G,IDA0192Y '
         PUNCH ' ALIAS IDA0200T,IDA0231T,IDA0557A,IDA0192I '
         PUNCH ' ALIAS IDA0200S '
         PUNCH ' ALIAS IDA0192C '                             @YM01260
         PUNCH ' ENTRY IDA0192A '
         PUNCH ' NAME IDA0192A(R) '
         PUNCH ' INCLUDE AOSA0(IFG0192A)   EXPECT IEW0461 FOR IFG0198N'
.*
         PUNCH ' INCLUDE AOSA0(IDAICIA1) '                       Y02113
         PUNCH ' INCLUDE AOSA0(IDAOCEA1) '                       Y02113
         PUNCH ' INCLUDE AOSA0(IDAOCEA2) '                       Y02113
         PUNCH ' INCLUDE AOSA0(IDAOCEA4) '                    @Z30SSPS
.*
         PUNCH ' ALIAS IFG0200T,IFG0231T,IFG0192Y '
         PUNCH ' ALIAS IFG0557A,IFG0192I,IFG0200S '
         PUNCH ' ALIAS IDAOCEA1,IDAOCEA2,IDAOCEA4 '           @Z30SSPS
         PUNCH ' ENTRY IFG0192A '
         PUNCH ' NAME IFG0192A(R) '
.****    VSAM RECORD MANAGEMENT MODULES                       @YM01260
         PUNCH ' ORDER IDA019R1 '                             @Z40GSDT
         PUNCH ' ORDER IDA019R4 '                             @Z40GSDT
         PUNCH ' ORDER IDA019RZ '                             @Z40GSDT
         PUNCH ' ORDER IDA019R2 '                             @Z40GSDT
         PUNCH ' ORDER IDA019RW '                             @Z40GSDT
         PUNCH ' ORDER IDA019R3 '                             @Z40GSDT
         PUNCH ' ORDER IDA019RA '                             @Z40GSDT
         PUNCH ' ORDER IDA019RB '                             @Z40GSDT
         PUNCH ' ORDER IDA019RC '                             @Z40GSDT
         PUNCH ' ORDER IDA019R8 '                             @Z40GSDT
         PUNCH ' ORDER IDA019RL(P) '                          @Z40GSDT
         PUNCH ' ORDER IDA019RM '                             @Z40GSDT
         PUNCH ' ORDER IDA019SA '                             @Z40GSDT
         PUNCH ' ORDER IDA019RX(P) '                          @Z40GSDT
         PUNCH ' ORDER IDA019RU '                             @Z40GSDT
         PUNCH ' ORDER IDA019RS(P) '                          @Z40GSDT
         PUNCH ' ORDER IDA019RT '                             @Z40GSDT
         PUNCH ' ORDER IDA019SF '                             @Z40GSDT
         PUNCH ' ORDER IDA019RY(P) '                          @Z40GSDT
         PUNCH ' ORDER IDA019RP '                             @Z40GSDT
         PUNCH ' ORDER IDA019RR(P) '                          @Z40GSDT
         PUNCH ' ORDER IDA019RQ '                             @Z40GSDT
         PUNCH ' ORDER IDA019RV '                             @Z40GSDT
         PUNCH ' ORDER IDA019S6 '                             @ZA31009
         PUNCH ' ORDER IDA019RE(P) '                          @Z40GSDT
         PUNCH ' ORDER IDA019RH '                             @Z40GSDT
         PUNCH ' ORDER IDA019RF '                             @Z40GSDT
         PUNCH ' ORDER IDA019RI '                             @Z40GSDT
         PUNCH ' ORDER IDA019RN '                             @Z40GSDT
         PUNCH ' ORDER IDA019RJ '                             @Z40GSDT
         PUNCH ' ORDER IDA019RG '                             @Z40GSDT
         PUNCH ' ORDER IDA019RK '                             @Z40GSDT
         PUNCH ' ORDER IDA019R5(P) '                          @Z40GSDT
         PUNCH ' ORDER IDA019SE '                             @ZA15091
         PUNCH ' ORDER IDA019RO '                             @Z40GSDT
         PUNCH ' ORDER IDA019SN '                             @ZA32757
         PUNCH ' ORDER IDA019SG '                             @ZA37315
         PUNCH ' ORDER IDA019SH '                             @ZA37315
         PUNCH ' ORDER IDA019SL '                             @ZA37315
         PUNCH ' ORDER IDA019SM '                             @ZA37315
         PUNCH ' ORDER IDA019ST '                             @ZA37315
         PUNCH ' ORDER IDA019SU '                             @ZA37315
         PUNCH ' INCLUDE AOSA0(IDA019R1) '
         PUNCH ' INCLUDE AOSA0(IDA019R4) '
         PUNCH ' INCLUDE AOSA0(IDA019RZ) '                    @YM01260
         PUNCH ' INCLUDE AOSA0(IDA019R2) '
         PUNCH ' INCLUDE AOSA0(IDA019RW) '                   @Z30SSPS
         PUNCH ' INCLUDE AOSC5(IDAM19R3) '                   @Z30SSLC
         PUNCH ' INCLUDE AOSA0(IDA019RA) '                   @Z30SSPS
         PUNCH ' INCLUDE AOSA0(IDA019RB) '                   @Z30SSPS
         PUNCH ' INCLUDE AOSA0(IDA019RC) '                   @Z30SSPS
         PUNCH ' INCLUDE AOSA0(IDA019R8) '                   @Z30SSPS
         PUNCH ' INCLUDE AOSA0(IDA019RL) '
         PUNCH ' INCLUDE AOSA0(IDA019RM) '
         PUNCH ' INCLUDE AOSA0(IDA019SA) '                   @Z30SSPS
         PUNCH ' INCLUDE AOSA0(IDA019RX) '                   @Z30SSPS
         PUNCH ' INCLUDE AOSA0(IDA019RU) '                   @Z30SSPS
         PUNCH ' INCLUDE AOSA0(IDA019RS) '                   @Z30SSPS
         PUNCH ' INCLUDE AOSA0(IDA019RT) '                   @Z30SSPS
         PUNCH ' INCLUDE AOSA0(IDA019SF) '                   @Z30SSPS
         PUNCH ' INCLUDE AOSA0(IDA019RY) '                   @Z30SSPS
         PUNCH ' INCLUDE AOSA0(IDA019RP) '
         PUNCH ' INCLUDE AOSA0(IDA019RR) '                   @Z30SSPS
         PUNCH ' INCLUDE AOSA0(IDA019RQ) '                   @Z30SSPS
         PUNCH ' INCLUDE AOSA0(IDA019RV) '                   @Z30SSPS
         PUNCH ' INCLUDE AOSA0(IDA019RE) '
         PUNCH ' INCLUDE AOSA0(IDA019RH) '
         PUNCH ' INCLUDE AOSA0(IDA019RF) '                   @Z30SSPS
         PUNCH ' INCLUDE AOSA0(IDA019RI) '                   @Z30SSPS
         PUNCH ' INCLUDE AOSA0(IDA019RN) '
         PUNCH ' INCLUDE AOSA0(IDA019RJ) '                   @Z30SSPS
         PUNCH ' INCLUDE AOSA0(IDA019RG) '                   @Z30SSPS
         PUNCH ' INCLUDE AOSA0(IDA019RK) '
         PUNCH ' INCLUDE AOSA0(IDA019R5) '
         PUNCH ' INCLUDE AOSA0(IDA019SE) '                    @ZA15091
         PUNCH ' INCLUDE AOSA0(IDA019RO) '
         PUNCH ' INCLUDE AOSA0(IDA019S6) '                    @ZA31009
         PUNCH ' INCLUDE AOSA0(IDA019SN) '                    @ZA32757
         PUNCH ' INCLUDE AOSA0(IDA019ST) '                    @ZA29388
         PUNCH ' INCLUDE AOSA0(IDA019SU) '                    @ZA29388
         PUNCH ' INCLUDE AOSA0(IDA019SG) '                    @ZA37315
         PUNCH ' INCLUDE AOSA0(IDA019SH) '                    @ZA37315
         PUNCH ' INCLUDE AOSA0(IDA019SL) '                    @ZA37315
         PUNCH ' INCLUDE AOSA0(IDA019SM) '                    @ZA37315
         PUNCH ' ALIAS IDA019ST '                             @ZA29388
         PUNCH ' ENTRY IDA019R1 '
         PUNCH ' NAME IDA019L1(R) '
.***** VSAM ASYCHRONOUS ROUTINE                               @YM01260
         PUNCH ' INCLUDE AOSC5(IDA121A5) '                    @YM01260
         PUNCH ' ALIAS IDA019R7 '                             @YM01260
         PUNCH ' ENTRY IDA121A5 '                             @YM01260
         PUNCH ' NAME IDA121A5(R) '                           @YM01260
.***** VSAM I/O DRIVER APPENDAGE                              @YM01260
         PUNCH ' INCLUDE AOSA0(IDA019RD) '
         PUNCH ' NAME IDA019RD(R) '
.***** VSAM FAST PATH MODULES (ICIP)
         PUNCH ' ORDER IDA019S1(P) '                          @Z40GSDT
         PUNCH ' ORDER IDA019S2 '                             @Z40GSDT
         PUNCH ' ORDER IDA019R5 '                             @Z40GSDT
         PUNCH ' INCLUDE AOSA0(IDA019S1) '
         PUNCH ' INCLUDE AOSA0(IDA019S2) '
         PUNCH ' INCLUDE AOSA0(IDA019R5) '
         PUNCH ' ENTRY IDA019S1 '
         PUNCH ' NAME IDA019L2(R) '
.****   CONTROL BLOCK MANIPULATION                            @YM01260
         PUNCH ' INCLUDE AOSA0(IDA019C1) '
         PUNCH ' NAME IDA019C1(R) '
.***   ISAM CI                                                @YM01260
         PUNCH ' INCLUDE AOSA0(IDAIIPM1) '
         PUNCH ' NAME IDAIIPM1(R) '
         PUNCH ' INCLUDE AOSA0(IDAIIPM2) '
         PUNCH ' NAME IDAIIPM2(R) '
         PUNCH ' INCLUDE AOSA0(IDAIIPM3) '
         PUNCH ' NAME IDAIIPM3(R) '
         PUNCH ' INCLUDE AOSA0(IDAIISM1) '
         PUNCH ' NAME IDAIISM1(R) '
         PUNCH ' INCLUDE AOSA0(IDAIIFBF) '
         PUNCH ' NAME IDAIIFBF(R) '
.**** VSAM SNAP EXIT ROUTINE                                  @ZA04940
         PUNCH ' INCLUDE AOSA0(IDA0195A) '                    @ZA04940
         PUNCH ' NAME IDA0195A(R) '                           @ZA04940
.****  VSAM AMP PROCESSOR                                     @YM01260
.**** THE FOLLOWING IS FOR DOCUMENTATION ONLY                 @YM01260
.**** TARGLIB FOR THIS L/E IS SYS1.LPALIB                     @YM01260
.****    PUNCH ' INCLUDE AOSA0(IEFVAMP) '                     @YM01260
.****    PUNCH ' ALIAS IEFNB902 '                             @YM01260
.****    PUNCH ' ENTRY IEFNB902 '                             @YM01260
.****    PUNCH ' NAME IEFVAMP(R) '                            @YM01260
.****    ANOP                                                 @YM01260
         PUNCH '/* '                                         @YM03802
.MACEND  MEND
