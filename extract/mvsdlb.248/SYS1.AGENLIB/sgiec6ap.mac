         MACRO
         SGIEC6AP
.*
.**********************************************************************
.*
.*       VS2 RELEASE 04 DELETIONS/CHANGES
.*0000129000,379000                                            @ZA05432
.*
.*       VS2 RELEASE 03 DELETIONS/CHANGES
.*
.*0000000000-999999                                             ZA00701
.*0000378000                                                   @ZA02160
.*0000377000                                                   @ZA26457
.*
.* MODULE NAME = SGIEC6AP (VS2-2)
.*
.* DESCRIPTIVE NAME = SYSGEN EXCP APPENDAGE NAME PARMLIB UPDATE MACRO
.*
.* COPYRIGHT = NONE.
.*
.* STATUS = CHANGE LEVEL 000
.*
.* FUNCTION = THIS MACRO CREATES JCL AND CONTROL CARDS AT SYSGEN
.*            TO CREATE SYS1.PARMLIB MEMBER IEAAPP00 WITH MODULE
.*            ID NAMES TO BE USED AS EXCP APPENDAGES. IEAAPP00 IS
.*            INTERROGATED AT IPL BY IEAVNP16 AND A TABLE OF
.*            AUTHORIZED EXCP APPENDAGE NAMES IS BUILT. WHENEVER
.*            AN OPEN IS ISSUED WITH MACRF=E SPECIFIED ON THE DCB
.*            MACRO INSTRUCTION, OPEN MODULE IFG0196W VERIFIES
.*            THAT THE EXCP APPENDAGE NAMES SPECIFIED ON THE DCB
.*            MACRO INSTRUCTION EOEA=, SIOA=, PCIA=, CENDA=, AND
.*            XENDA= PARAMETERS IS ONE OF THE ID NAMES IN THE
.*            EXCP APPENDAGE NAME TABLE BUILT BY IEAVNP16.
.*            IF THE NAME DOES NOT APPEAR IN THE TABLE OR IF THE
.*            CALLER OF OPEN HAD A KEY GREATER THAN 8 THE CALLER WILL
.*            BE ABNORMALLY TERMINATED WITH A 913 ABEND.
.*
.* NOTES = THIS MACRO IS AN INTERGRAL PART OF VS2 DATA SET SECURITY.
.*
.*      DEPENDENCIES = THIS MACRO IS DESIGNED TO BE USED IN
.*                     CONJUNCTION WITH THE SYSGEN DATASET MACRO.
.*                     THIS MACRO IS DEPENDENT ON THE FORMAT AND
.*                     DIMENSION OF THE SYSGEN GLOBAL INPUT ARRAYS
.*                     &SGDEOEC,&SGDSIOC,&SGDPCIC,&SGDCHEC,&SGDABEC
.*                     (SEE RESTRICTIONS BELOW).
.*
.*                     ALSO &SGDSVLC(18) = SYS1.PARMLIB VOLUME SERIAL
.*                     AND &SGDSUNC(18) = SYS1.PARMLIB UNIT TYPE.
.*                     UNIT AND VOL ARE SPECIFIED BY MACRO CALL-
.*                     DATASET PARMLIB,VOL=(VOLSER,UNIT)
.*
.*                     PARMLIB IS AN INDEXED DATASET NAME WHICH USUALLY
.*                     IS SPECIFIED AS SYS1.PARMLIB. HOWEVER, THE
.*                     DATASET MAY BE RENAMED TO SYS2.PARMLIB, ETC.
.*                     IF THE DATASET IS RENAMED THE INDEX PARAMETER
.*                     OF THE SYSGEN MACRO GENERATE MUST BE SPECIFIED.
.*                     THIS VALUE IS RETREIVED FROM THE SYSGEN GLOBAL
.*                     SYMBOL &SGCTRLC(40).
.*
.*      RESTRICTIONS = ALL RESTRICTIONS THAT APPLY TO SYSGEN MACROS
.*                     AND SYS1.PARMLIB DATA SET MEMBERS APPLY
.*                     TO THIS MACRO ALSO.
.*                     THIS MACRO MUST BE ASSEMBLED WITH THE VS
.*                     ASSEMBLER TO ALLOW LCLC VARIABLES TO HAVE
.*                     A MAXIMUM OF 255 CHARACTERS IN A STRING.
.*                     THE SYSGEN GLOBAL INPUT ARRAYS HAVE
.*                     DIMENSION 21 AND EACH STRING CONTAINS 8
.*                     CHARACTERS OF 4 TWO CHARACTER ID NAMES OR
.*                     84 ID NAMES PER ARRAY WHEN PUT END TO END
.*                     WITH COMMAS FORM 252 CHARACTER ARRAYS.
.*
.*      REGISTER CONVENTIONS = NOT APPLICABLE.
.*
.* PATCH LABEL = NOT APPLICABLE.
.*
.* MODULE TYPE = MACRO
.*
.*      PROCESSOR = ASSEMBLER LANGUAGE (VS ASSEMBLER)
.*
.*      MODULE SIZE = NOT APPLICABLE.
.*
.*      ATTRIBUTES = NOT APPLICABLE.
.*
.* ENTRY POINT = SGIEC6AP
.*
.*      PURPOSE = THIS MACRO WILL PUNCH JCL AND CONTROL CARDS
.*                FOR THE IEBUPDTE UTILITY TO CREATE MEMBER
.*                IEAAPP00 IN SYS1.PARMLIB.
.*
.*      LINKAGE = AS FOLLOWS -
.*
.*            DATASET LIB,PDS=PDSNAME,EOEAPP=(ID,...),
.*                 SIOAPP=(ID,...),CHEAPP=(ID,...),ABEAPP=(ID,...),
.*                 PCIAPP=(ID,...)
.*            SGIEC6AP
.*
.*            ON THE DATASET MACRO LIB IS LPALIB OR SVCLIB,
.*            PDSNAME IS THE PDS THAT CONTAINS THE EXCP APPENDAGE
.*            MEMBERS. THE APPENDAGE ID NAMES ARE SUPPLIED VIA THE
.*            EOEAPP, SIOAPP, CHEAPP, ABEAPP, PCIAPP PARAMETERS.
.*            THE ID NAMES ARE TWO CHARACTER CONSTANTS IN THE RANGE
.*            WA-Z9 THAT WILL BE APPENDED TO IGG019 TO FORM AN 8
.*            CHARACTER MODULE NAME THAT EXISTS IN THE LIBRARY
.*            SPECIFIED BY THE PDS PARAMETER.
.*
.*      INPUT = THE DATASET MACRO FORMATS THE INPUT AS FOLLOWS -
.*
.*             &SGDEOEC IS A GLOBAL DEFINED CHARACTER ARRAY
.*             OF 21 8 CHARACTER (OR LESS) SYMBOLS WHICH REPRESENT
.*             4 2 CHARACTER ID NAMES AS SPECIFIED ON THE
.*             EOEAPP PARAMETER OF THE DATA SET MACRO. THIS
.*             ALLOWS A MAXIMUM OF 84 TWO CHARACTER ID NAMES.
.*
.*             &SGDSIOC IS A GLOBAL DEFINED CHARACTER ARRAY
.*             OF 21 8 CHARACTER (OR LESS) SYMBOLS WHICH REPRESENT
.*             4 2 CHARACTER ID NAMES AS SPECIFIED ON THE
.*             SIOAPP PARAMETER OF THE DATA SET MACRO. THIS
.*             ALLOWS A MAXIMUM OF 84 TWO CHARACTER ID NAMES.
.*
.*             &SGDCHEC IS A GLOBAL DEFINED CHARACTER ARRAY
.*             OF 21 8 CHARACTER (OR LESS) SYMBOLS WHICH REPRESENT
.*             4 2 CHARACTER ID NAMES AS SPECIFIED ON THE
.*             CHEAPP PARAMETER OF THE DATA SET MACRO. THIS
.*             ALLOWS A MAXIMUM OF 84 TWO CHARACTER ID NAMES.
.*
.*             &SGDABEC IS A GLOBAL DEFINED CHARACTER ARRAY
.*             OF 21 8 CHARACTER (OR LESS) SYMBOLS WHICH REPRESENT
.*             4 2 CHARACTER ID NAMES AS SPECIFIED ON THE
.*             ABEAPP PARAMETER OF THE DATA SET MACRO. THIS
.*             ALLOWS A MAXIMUM OF 84 TWO CHARACTER ID NAMES.
.*
.*             &SGDPCIC IS A GLOBAL DEFINED CHARACTER ARRAY
.*             OF 21 8 CHARACTER (OR LESS) SYMBOLS WHICH REPRESENT
.*             4 2 CHARACTER ID NAMES AS SPECIFIED ON THE
.*             PCIAPP PARAMETER OF THE DATA SET MACRO. THIS
.*             ALLOWS A MAXIMUM OF 84 TWO CHARACTER ID NAMES.
.*
.*             THE GLOBALS ARE COPIED FROM SGGBLPAK ON SYS1.AGENLIB.
.*
.*      OUTPUT = WILL BE PUNCHED AS FOLLOWS -
.*
.*       //IEAAPP00 EXEC PGM=IEBUPDTE,PARM='NEW'
.*       //SYSPRINT  DD SYSOUT=A
.*       //SYSUT2    DD DSN=SYS1.PARMLIB,DISP=OLD,
.*       //             UNIT=SYSDA,VOL=SER=XXXXXX
.*       //SYSIN     DD *                                      @ZA05432
.*       ./         ADD NAME=IEAAPP00,LIST=ALL
.*       ./         NUMBER NEW1=1000,INCR=1000
.*       EOEAPP ID,ID,...,
.*       SIOAPP ID,ID,...,
.*       PCIAPP ID,ID,...,
.*       CHEAPP ID,ID,...,
.*       ABEAPP ID,ID,...
.*       /*
.*
.* EXIT NORMAL = MEND STATEMENT
.*
.* EXIT ERROR = NONE
.*
.* EXTERNAL REFERENCES = SGGBLPAK
.*
.*      ROUTINES = NONE.
.*
.*      DATA AREAS = REFERENCE CONSTANTS SECTION BELOW.
.*
.*      CONTROL BLOCKS = NONE.
.*
.* TABLES = REFERENCE CONSTANTS SECTION BELOW.
.*
.* MACROS = NONE.
.*
.* CHANGE ACTIVITY = SEE ABOVE.
.*
.**********************************************************************
.*
         COPY  SGGBLPAK                 GET SYSGEN GLOBALS
.*       ARRAY INDEXES
         LCLA  &A                       INDEX FOR GLOBAL ARRAYS 1-21
         LCLA  &B                       INDEX FOR &ID 1-5
         LCLA  &FR                      START OF CARD PUNCH
.*       LOCAL ARRAYS
         LCLC  &ID(5)                   ARRAY FOR GLOBAL ID NAMES
         LCLC  &APP(5)                  ARRAY FOR APPENDAGE GROUP ID
.*       LOCAL TEMPORAY STORAGE NAMES
         LCLC  &NAME1,&NAME2,&NAME3,&NAME4 ID1,ID2,ID3,ID4
.*
.**********************************************************************
.*
.*       GROUP EOE APPENDAGE ID NAMES INTO 1 STRING
.*
.**********************************************************************
.*
&NAME1   SETC  ''                       INITIALIZE TO NULL
&NAME2   SETC  ''                       INITIALIZE TO NULL
&NAME3   SETC  ''                       INITIALIZE TO NULL
&NAME4   SETC  ''                       INITIALIZE TO NULL
&A       SETA  1                        INITIALIZE
&ID(1)   SETC  ''                       INITIALIZE TO NULL
.LOOPEOE AIF   (&A GE 22).SIOID         EXIT IF MORE THAN 21 GLOBALS
         AIF   ('&SGDEOEC(&A)' EQ '').SIOID EXIT IF NEXT GLOBAL IS NULL
         AIF   (K'&SGDEOEC(&A) NE 8).LASTEOE PROCESS LAST ONE
.EOEID4  ANOP                           SETUP 4TH 2 CHARACTER SET
&NAME4   SETC  '&SGDEOEC(&A)'(7,2).','  ID, - FOURTH
.EOEID3  ANOP                           SETUP 3RD 2 CHARACTER SET
&NAME3   SETC  '&SGDEOEC(&A)'(5,2).','  ID, - THIRD
.EOEID2  ANOP                           SETUP 2ND 2 CHARACTER SET
&NAME2   SETC  '&SGDEOEC(&A)'(3,2).','  ID, - SECOND
.EOEID1  ANOP                           SETUP 1ST 2 CHARACTER SET
&NAME1   SETC  '&SGDEOEC(&A)'(1,2).','  ID, - FIRST
&ID(1)   SETC  '&ID(1)&NAME1&NAME2&NAME3&NAME4' MERGE TOGETHER
.INITEOE ANOP                           SET GLOBAL TO NULL
&SGDEOEC(&A) SETC ''                    INITIALIZE BACK TO NULL
&A       SETA  &A+1                     INCREMENT TO NEXT FOUR
         AGO   .LOOPEOE                 LOOP FOR NEXT FOUR
.LASTEOE AIF   (K'&SGDEOEC(&A) GE 8).EOEID4 IGNORE MORE THAN 4 ID NAMES
&NAME4   SETC  ''                       INITIALIZE TO NULL
         AIF   (K'&SGDEOEC(&A) GE 6).EOEID3 3 OR LESS  - IGNORE 4TH
&NAME3   SETC  ''                       INITIALIZE TO NULL
         AIF   (K'&SGDEOEC(&A) GE 4).EOEID2 2 OR LESS  - IGNORE 3RD
&NAME2   SETC  ''                       INITIALIZE TO NULL
         AIF   (K'&SGDEOEC(&A) GE 2).EOEID1 1 ONLY  - IGNORE 2ND
&NAME1   SETC  ''                       INITIALIZE TO NULL
         AGO   .INITEOE                 GO SET NULL
.SIOID   ANOP                           PROCESS SIO APPENDAGE ID NAMES
.*
.**********************************************************************
.*
.*       GROUP SIO APPENDAGE ID NAMES INTO 1 STRING
.*
.**********************************************************************
.*
&A       SETA  1                        INITIALIZE
&ID(2)   SETC  ''                       INITIALIZE TO NULL
.LOOPSIO AIF   (&A GE 22).PCIID         EXIT IF MORE THAN 21 GLOBALS
         AIF   ('&SGDSIOC(&A)' EQ '').PCIID EXIT IF NEXT GLOBAL IS NULL
         AIF   (K'&SGDSIOC(&A) NE 8).LASTSIO PROCESS LAST ONE
.SIOID4  ANOP                           SETUP 4TH 2 CHARACTER SET
&NAME4   SETC  '&SGDSIOC(&A)'(7,2).','  ID, - FOURTH
.SIOID3  ANOP                           SETUP 3RD 2 CHARACTER SET
&NAME3   SETC  '&SGDSIOC(&A)'(5,2).','  ID, - THIRD
.SIOID2  ANOP                           SETUP 2ND 2 CHARACTER SET
&NAME2   SETC  '&SGDSIOC(&A)'(3,2).','  ID, - SECOND
.SIOID1  ANOP                           SETUP 1ST 2 CHARACTER SET
&NAME1   SETC  '&SGDSIOC(&A)'(1,2).','  ID, - FIRST
&ID(2)   SETC  '&ID(2)&NAME1&NAME2&NAME3&NAME4' MERGE TOGETHER
.INITSIO ANOP                           SET GLOBAL TO NULL
&SGDSIOC(&A) SETC ''                    INITIALIZE BACK TO NULL
&A       SETA  &A+1                     INCREMENT TO NEXT FOUR
         AGO   .LOOPSIO                 LOOP FOR NEXT FOUR
.LASTSIO AIF   (K'&SGDSIOC(&A) GE 8).SIOID4 IGNORE MORE THAN 4 ID NAMES
&NAME4   SETC  ''                       INITIALIZE TO NULL
         AIF   (K'&SGDSIOC(&A) GE 6).SIOID3 3 OR LESS  - IGNORE 4TH
&NAME3   SETC  ''                       INITIALIZE TO NULL
         AIF   (K'&SGDSIOC(&A) GE 4).SIOID2 2 OR LESS  - IGNORE 3RD
&NAME2   SETC  ''                       INITIALIZE TO NULL
         AIF   (K'&SGDSIOC(&A) GE 2).SIOID1 1 ONLY  - IGNORE 2ND
&NAME1   SETC  ''                       INITIALIZE TO NULL
         AGO   .INITSIO                 GO SET NULL
.PCIID   ANOP                           PROCESS PCI APPENDAGE ID NAMES
.*
.**********************************************************************
.*
.*       GROUP PCI APPENDAGE ID NAMES INTO 1 STRING
.*
.**********************************************************************
.*
&A       SETA  1                        INITIALIZE
&ID(3)   SETC  ''                       INITIALIZE TO NULL
.LOOPPCI AIF   (&A GE 22).CHEID         EXIT IF MORE THAN 21 GLOBALS
         AIF   ('&SGDPCIC(&A)' EQ '').CHEID EXIT IF NEXT GLOBAL IS NULL
         AIF   (K'&SGDPCIC(&A) NE 8).LASTPCI PROCESS LAST ONE
.PCIID4  ANOP                           SETUP 4TH 2 CHARACTER SET
&NAME4   SETC  '&SGDPCIC(&A)'(7,2).','  ID, - FOURTH
.PCIID3  ANOP                           SETUP 3RD 2 CHARACTER SET
&NAME3   SETC  '&SGDPCIC(&A)'(5,2).','  ID, - THIRD
.PCIID2  ANOP                           SETUP 2ND 2 CHARACTER SET
&NAME2   SETC  '&SGDPCIC(&A)'(3,2).','  ID, - SECOND
.PCIID1  ANOP                           SETUP 1ST 2 CHARACTER SET
&NAME1   SETC  '&SGDPCIC(&A)'(1,2).','  ID, - FIRST
&ID(3)   SETC  '&ID(3)&NAME1&NAME2&NAME3&NAME4' MERGE TOGETHER
.INITPCI ANOP                           SET GLOBAL TO NULL
&SGDPCIC(&A) SETC ''                    INITIALIZE BACK TO NULL
&A       SETA  &A+1                     INCREMENT TO NEXT FOUR
         AGO   .LOOPPCI                 LOOP FOR NEXT FOUR
.LASTPCI AIF   (K'&SGDPCIC(&A) GE 8).PCIID4 IGNORE MORE THAN 4 ID NAMES
&NAME4   SETC  ''                       INITIALIZE TO NULL
         AIF   (K'&SGDPCIC(&A) GE 6).PCIID3 3 OR LESS  - IGNORE 4TH
&NAME3   SETC  ''                       INITIALIZE TO NULL
         AIF   (K'&SGDPCIC(&A) GE 4).PCIID2 2 OR LESS  - IGNORE 3RD
&NAME2   SETC  ''                       INITIALIZE TO NULL
         AIF   (K'&SGDPCIC(&A) GE 2).PCIID1 1 ONLY  - IGNORE 2ND
&NAME1   SETC  ''                       INITIALIZE TO NULL
         AGO   .INITPCI                 GO SET NULL
.CHEID   ANOP                           PROCESS CHE APPENDAGE ID NAMES
.*
.**********************************************************************
.*
.*       GROUP CHE APPENDAGE ID NAMES INTO 1 STRING
.*
.**********************************************************************
.*
&A       SETA  1                        INITIALIZE
&ID(4)   SETC  ''                       INITIALIZE TO NULL
.LOOPCHE AIF   (&A GE 22).ABEID         EXIT IF MORE THAN 21 GLOBALS
         AIF   ('&SGDCHEC(&A)' EQ '').ABEID EXIT IF NEXT GLOBAL IS NULL
         AIF   (K'&SGDCHEC(&A) NE 8).LASTCHE PROCESS LAST ONE
.CHEID4  ANOP                           SETUP 4TH 2 CHARACTER SET
&NAME4   SETC  '&SGDCHEC(&A)'(7,2).','  ID, - FOURTH
.CHEID3  ANOP                           SETUP 3RD 2 CHARACTER SET
&NAME3   SETC  '&SGDCHEC(&A)'(5,2).','  ID, - THIRD
.CHEID2  ANOP                           SETUP 2ND 2 CHARACTER SET
&NAME2   SETC  '&SGDCHEC(&A)'(3,2).','  ID, - SECOND
.CHEID1  ANOP                           SETUP 1ST 2 CHARACTER SET
&NAME1   SETC  '&SGDCHEC(&A)'(1,2).','  ID, - FIRST
&ID(4)   SETC  '&ID(4)&NAME1&NAME2&NAME3&NAME4' MERGE TOGETHER
.INITCHE ANOP                           SET GLOBAL TO NULL
&SGDCHEC(&A) SETC ''                    INITIALIZE BACK TO NULL
&A       SETA  &A+1                     INCREMENT TO NEXT FOUR
         AGO   .LOOPCHE                 LOOP FOR NEXT FOUR
.LASTCHE AIF   (K'&SGDCHEC(&A) GE 8).CHEID4 IGNORE MORE THAN 4 ID NAMES
&NAME4   SETC  ''                       INITIALIZE TO NULL
         AIF   (K'&SGDCHEC(&A) GE 6).CHEID3 3 OR LESS  - IGNORE 4TH
&NAME3   SETC  ''                       INITIALIZE TO NULL
         AIF   (K'&SGDCHEC(&A) GE 4).CHEID2 2 OR LESS  - IGNORE 3RD
&NAME2   SETC  ''                       INITIALIZE TO NULL
         AIF   (K'&SGDCHEC(&A) GE 2).CHEID1 1 ONLY  - IGNORE 2ND
&NAME1   SETC  ''                       INITIALIZE TO NULL
         AGO   .INITCHE                 GO SET NULL
.ABEID   ANOP                           PROCESS ABE APPENDAGE ID NAMES
.*
.**********************************************************************
.*
.*       GROUP ABE APPENDAGE ID NAMES INTO 1 STRING
.*
.**********************************************************************
.*
&A       SETA  1                        INITIALIZE
&ID(5)   SETC  ''                       INITIALIZE TO NULL
.LOOPABE AIF   (&A GE 22).PUNCH         EXIT IF MORE THAN 21 GLOBALS
         AIF   ('&SGDABEC(&A)' EQ '').PUNCH EXIT IF NEXT GLOBAL IS NULL
         AIF   (K'&SGDABEC(&A) NE 8).LASTABE PROCESS LAST ONE
.ABEID4  ANOP                           SETUP 4TH 2 CHARACTER SET
&NAME4   SETC  '&SGDABEC(&A)'(7,2).','  ID, - FOURTH
.ABEID3  ANOP                           SETUP 3RD 2 CHARACTER SET
&NAME3   SETC  '&SGDABEC(&A)'(5,2).','  ID, - THIRD
.ABEID2  ANOP                           SETUP 2ND 2 CHARACTER SET
&NAME2   SETC  '&SGDABEC(&A)'(3,2).','  ID, - SECOND
.ABEID1  ANOP                           SETUP 1ST 2 CHARACTER SET
&NAME1   SETC  '&SGDABEC(&A)'(1,2).','  ID, - FIRST
&ID(5)   SETC  '&ID(5)&NAME1&NAME2&NAME3&NAME4' MERGE TOGETHER
.INITABE ANOP                           SET GLOBAL TO NULL
&SGDABEC(&A) SETC ''                    INITIALIZE BACK TO NULL
&A       SETA  &A+1                     INCREMENT TO NEXT FOUR
         AGO   .LOOPABE                 LOOP FOR NEXT FOUR
.LASTABE AIF   (K'&SGDABEC(&A) GE 8).ABEID4 IGNORE MORE THAN 4 ID NAMES
&NAME4   SETC  ''                       INITIALIZE TO NULL
         AIF   (K'&SGDABEC(&A) GE 6).ABEID3 3 OR LESS  - IGNORE 4TH
&NAME3   SETC  ''                       INITIALIZE TO NULL
         AIF   (K'&SGDABEC(&A) GE 4).ABEID2 2 OR LESS  - IGNORE 3RD
&NAME2   SETC  ''                       INITIALIZE TO NULL
         AIF   (K'&SGDABEC(&A) GE 2).ABEID1 1 ONLY  - IGNORE 2ND
&NAME1   SETC  ''                       INITIALIZE TO NULL
         AGO   .INITABE                 GO SET NULL
.PUNCH   ANOP                           PUNCH CARDS
.*
.**********************************************************************
.*
.*       CHECK FOR ANYTHING TO PUNCH
.*
.**********************************************************************
.*
&B       SETA  6                        SET TO LAST PLUS 1
.ENDCHK  ANOP                           LOOP TO FIND END OF LIST
&B       SETA  &B-1                     DECREMENT TO FIND LAST ID
         AIF   (&B EQ 0).EXIT           EXIT IF NONE TO PUNCH
         AIF   ('&ID(&B)' EQ '').ENDCHK BACK UP
&ID(&B)  SETC  '&ID(&B)'(1,K'&ID(&B)-1) KNOCK OFF LAST COMMA
         PUNCH '//IEAAPP00 EXEC PGM=IEBUPDTE,PARM=NEW'
         PUNCH '//SYSPRINT  DD SYSOUT=&SGCTRLC(41)'            @ZA26457
         PUNCH '//SYSUT2    DD DSN=&SGCTRLC(40)..PARMLIB,DISP=OLD,'
         PUNCH '//             UNIT=&SGDSUNC(18),VOL=SER=&SGDSVLC(18)'
         PUNCH '//SYSIN     DD *'                              @ZA05432
         PUNCH './         ADD NAME=IEAAPP00,LIST=ALL'
         PUNCH './         NUMBER NEW1=1000,INCR=1000'
&B       SETA  1                        INITIALIZE TO EOE NAMES
&APP(1)  SETC  'EOEAPP '                NAME 1 IS EOE APPENDAGES
&APP(2)  SETC  'SIOAPP '                NAME 2 IS SIO APPENDAGES
&APP(3)  SETC  'PCIAPP '                NAME 3 IS PCI APPENDAGES
&APP(4)  SETC  'CHEAPP '                NAME 4 IS CHE APPENDAGES
&APP(5)  SETC  'ABEAPP '                NAME 5 IS ABE APPENDAGES
.PCHAPP  AIF   (&B GT 5).PCHEND         PUNCH APPENDAGE ID NAMES
         AIF   ('&ID(&B)' EQ '').NEXTID GET NEXT IF NULL
.*
.**********************************************************************
.*
.*       NOTE THE FOLLOWING MAXIMUM VALUES
.*       SYSGEN GLOBALS HAVE DIMENSION 21 LENGTH 8 CHARACTERS
.*       THIS ALLOWS 4 TWO CHARACTER IDS PER GLOBAL OR
.*       84 ID NAMES PER APPENDAGE TYPE.
.*       THE FOLLOWING REDUCES 84 ID NAMES TO 4 PUNCHED CARDS
.*       21 ON THE 1ST, 23 ON THE 2ND, 23 ON THE 3RD, AND 19 ON TH 4TH.
.*
.**********************************************************************
.*
&FR      SETA  1                        LAST CARD 1ST COLUMN POINTER
         AIF   (K'&ID(&B) LE 3*21).LASTONE 21 ID NAMES ON 1ST CARD
&NAME1   SETC  '&ID(&B)'(1,3*21)        CARD 1 ID NAMES
         PUNCH '&APP(&B)&NAME1'         PUNCH CARD 1
&APP(&B) SETC  ''                       SET TO NULL FOR LAST CARD
&FR      SETA  &FR+3*21                 LAST CARD 1ST COLUMN POINTER
         AIF   (K'&ID(&B) LE &FR+3*23-1).LASTONE 23 NAMES ON 2ND CARD
&NAME2   SETC  '&ID(&B)'(&FR,3*23)      CARD 2 ID NAMES
         PUNCH '&NAME2'                 PUNCH CARD 2
&FR      SETA  &FR+3*23                 LAST CARD 1ST COLUMN POINTER
         AIF   (K'&ID(&B) LE &FR+3*23-1).LASTONE 23 NAMES ON 2ND CARD
&NAME3   SETC  '&ID(&B)'(&FR,3*23)      CARD 3 ID NAMES
         PUNCH '&NAME3'                 PUNCH CARD 3
&FR      SETA  &FR+3*23                 LAST CARD 1ST COLUMN POINTER
.LASTONE ANOP                           LAST CARD OF GROUP (MAX=4)
&NAME4   SETC  '&ID(&B)'(&FR,K'&ID(&B)+1-&FR) LAST CARD ID NAMES
         PUNCH '&APP(&B)&NAME4'         PUNCH CARD 4
.NEXTID  ANOP                           INCREMENT TO NEXT ID
&B       SETA  &B+1                     INCREMENT TO NEXT ID
         AGO   .PCHAPP                  LOOP TO GET NEXT
.PCHEND  PUNCH '/*'
.EXIT    MEND
