         MACRO
         SGIFF2BM
.*      CHANGES INCLUDED:
.*         ZA03965,ZA04860,ZA04890,ZA11738,ZA41749,ZA44878.
.*
.*  THE FOLLOWING APAR FIXES HAVE BEEN REMOVED BY ZA32710   R22 ZA32710
.*      ZA03965, ZA04860, ZA04890, ZA11738                  R22 ZA32710
.*               ZA15420    ALSO ZA40AKLG                   R22 ZA15420
.*               ZA36692
.*               ZA38865
.*  APAR FIX OZ32710 HAS BEEN REWORKED BY OZ41749.
.*
.*  $MAC(SGIFF2BM),COMP(GPSMAC),PROD(GAM) :
.*  $L1=OZ65565 810217 HDD : PCU COUNT INCREASED FROM 255 TO 4095
.*
.*
.*
.*
         COPY  SGGBLPAK                      GET GLOBAL VARIABLES
         LCLA  &CU,&CU1,&LTBLIX,&DADRIX,&NUM2840,&CUSTBL(4095)  ZA65565
         LCLA  &NUMMOD1,&DEV,&CUSTBLX                          @ZA41749
         LCLA  &BFRSIZE(4151),&EXPBFR(4095)                     ZA65565
         LCLA  &A,&B,&C,&D,&E,&F,&G,&NUMSEC1(4095)              ZA65565
         LCLA  &NUMSEC2(4095),&NUMSEC3(4095)                    ZA65565
         LCLA  &NUMSEC4(4095),&NUMSEC5(4095)                    ZA65565
         LCLA  &NUMSEC6(4095),&NUMSEC7(4095)                    ZA65565
         LCLA  &NUMSEC8(4095),&NUMDEV(4095)                     ZA65565
         LCLA  &CONVCON                                        @ZA41749
         LCLB  &ASMBLY
         LCLC  &DEVADR,&TBLNAME(4151)                           ZA65565
         LCLC  &CUADDR,&LSTCUNM,&DVADR                         @ZA41749
         ACTR  9999999                       SET ACTR VALUE R22 ZA38865
&LTBLIX  SETA  4096                       SET LOCAL TABLE INDEX ZA65565
&NUMMOD1 SETA  0                             SET 2250 MOD 1 COUNTER
&DEV     SETA  1                             SET DEV ADR SW SUBSCRIPT
.BM04    ANOP
&DADRIX  SETA  &SGDASPA(&DEV)                DVC ADDR INDX  E12 ZA15420
         AIF   (NOT &SGDT05B(&DADRIX)).BM22  CHK FOR GRAPHIC DEVICE
         AIF   (NOT &SGDU01B(&DADRIX)).BM22  CHECK FOR 2250'S     AOS/1
         AIF   (&SGDM01B(&DADRIX)).BM04B     CHK FOR MODEL 1
         AIF   (&SGDM03B(&DADRIX)).BM07      CHECK FOR MOD 3      AOS/1
         AGO   .BM22                         BRANCH TO CHK IF LAST DEV
.BM04B   ANOP
&ASMBLY  SETB  1                             SET ASSEMBLY SWITCH
&CONVCON SETA  &SGDADRA(&DEV)-&SGDADRA(&DEV)/4096*4096 ISOLATE ADD AHD4
         CONVERT TO=EBCDIC,VALUE=&CONVCON,DIGITS=3 CONV DEV NAME   AHD4
&TBLNAME(&LTBLIX) SETC '&EBCDIC'             SET DEV NAME IN NAME TABLE
         AIF   (&SGDF05B(&DADRIX)).BT04C     CHK FOR BUFFER SIZE
         AIF   (&SGDF06B(&DADRIX)).BM05      CHK FOR BUFFER SIZE
&BFRSIZE(&LTBLIX) SETA 0                     SET BUF TABLE TO 0
         AGO   .BM06                         BRANCH TO INCREM CTR & IDX
.BT04C   ANOP
&BFRSIZE(&LTBLIX) SETA 4096                  SET BUF TABLE TO 4096
         AGO   .BM06                         BRANCH TO INCREM CTR & IDX
.BM05    ANOP
&BFRSIZE(&LTBLIX) SETA 8192                  SET BUF TABLE TO 8192
.BM06    ANOP
&NUMMOD1 SETA  &NUMMOD1+1                    INCREMENT 2250 MOD 1 CTR
&LTBLIX  SETA  &LTBLIX+1                     INCREMENT LOCAL TBLES INDX
         AGO   .BM22                         BRANCH TO CHK IF LAST DEV
.BM07    ANOP
&CU      SETA  &SGDADRA(&DEV)/4096-&SGDADRA(&DEV)/16777216*4096 ZA65565
&CUSTBL(&CU) SETA  &CU                       SET CU SUBSCPT    @ZA41749
&BFRSIZE(&CU) SETA  32768                    SET BUFR SIZE     @ZA41749
&ASMBLY  SETB  1                             SET ASSEMBLY SWITCH
         AIF   (&CU GT 999).BM30             GO IF NO P INSERT  ZA65565
&CU1     SETA  &CU+1000                      GET LEADING ZEROS @ZA41749
&TBLNAME(&CU) SETC 'P'.'&CU1'(2,3)           SET PCU NAME      @ZA41749
         AGO   .BM31                                            ZA65565
.BM30    ANOP  ,                                                ZA65565
&TBLNAME(&CU) SETC '&CU'(1,4)                FORCE TO 4 DIGITS INCASE  F
                                                                ZA65565
.BM31   ANOP  ,                                                 ZA65565
&EXPBFR(&CU) SETA &SGCUN1A(&DADRIX)          SET EXP BUF SIZE  @ZA41749
         AIF   (&NUMDEV(&CU) EQ 0).BM13  CHK CORRECT TBL SLOT  @ZA41749
         AIF   (&NUMDEV(&CU) EQ 1).BM14  CHK CORRECT TBL SLOT  @ZA41749
         AIF   (&NUMDEV(&CU) EQ 2).BM15  CHK CORRECT TBL SLOT  @ZA41749
         AIF   (&NUMDEV(&CU) EQ 3).BM16  CHK CORRECT TBL SLOT  @ZA41749
         AGO   .BM22               NO SLOTS OPEN, BR TO CHK IF LAST DEV
.BM13    ANOP
&NUMSEC1(&CU) SETA &SGDNBFA(&DADRIX)    SET NUMSECT FOR DEV 1  @ZA41749
         AGO   .BM21                         BRANCH TO INC DEV CTR
.BM14    ANOP
&NUMSEC2(&CU) SETA &SGDNBFA(&DADRIX)    SET NUMSECT FOR DEV 2  @ZA41749
         AGO   .BM21                         BRANCH TO INC DEV CTR
.BM15    ANOP
&NUMSEC3(&CU) SETA &SGDNBFA(&DADRIX)    SET NUMSECT FOR DEV 3  @ZA41749
         AGO   .BM21                         BRANCH TO INC DEV CTR
.BM16    ANOP
&NUMSEC4(&CU) SETA &SGDNBFA(&DADRIX)    SET NUMSECT FOR DEV 4  @ZA41749
.BM21    ANOP
&NUMDEV(&CU) SETA &NUMDEV(&CU)+1   INC DEV COUNT FOR THIS CU   @ZA41749
.BM22    AIF   (&DEV EQ &SGCNTRA(3)).BM23    CHK FOR LAST DEVICE
&DEV     SETA  &DEV+1                        INCREM DEV ADR SW SUBSCRIP
         AGO   .BM04                         BRANCH TO PROCESS NEXT DEV
.BM23    AIF   (NOT &ASMBLY).BM29            CHK IF ASSEMBLY SW IS SET
&SGCTRLC(6) SETC 'IFFBDA'                    SET CSECT NAME
         COPY  SGASMPAK                      COPY ASSEMBLY MACRO
         PUNCH 'IFFBDA   CSECT'
         AIF   (&SGCNTRA(2) EQ 0).BM26      CHK FOR NO 2840    @ZA44878
&LTBLIX  SETA  1                             SET LOCAL TABLE INDEX
.BM24    ANOP
&CUADDR  SETC  '&TBLNAME(&LTBLIX)'           SET BUFFER TABLE NAME
         AIF   ('&CUADDR' EQ '').INCRNDX     SKIP IF NO ENTRY  @ZA41749
&A       SETA  &BFRSIZE(&LTBLIX)             SET BUFFER SIZE
&B       SETA  &EXPBFR(&LTBLIX)              SET EXP BUFF REQUIREMENT
&C       SETA  &NUMDEV(&LTBLIX)              SET DEVICE COUNT
&D       SETA  &NUMSEC1(&LTBLIX)                  SET SECTIONS VALUE
&E       SETA  &NUMSEC2(&LTBLIX)                  SET SECTIONS VALUE
&F       SETA  &NUMSEC3(&LTBLIX)                  SET SECTIONS VALUE
&G       SETA  &NUMSEC4(&LTBLIX)                  SET SECTIONS VALUE
.*
         PUNCH 'IFFB&CUADDR SGIFF0BT &A,&B,&C,&D,&E,&F,&G'     @ZA41749
.* &CUADDR IS 'P'× ×PCU. FOR 3250'S 0 THRU 999
.* &CUADDR IS PCU. FOR 3250'S 999 THRU 4095
.* &CUADDR FOR 2250-1'S USE THREE DIGIT OF PCU.
.* DEVICE ADDRESSES WHICH WILL BE UNIQUE.
.INCRNDX ANOP                                                  @ZA44878
         AIF   (&LTBLIX EQ 4095).BM26        CHK LAST PCU VAL   ZA65565
&LTBLIX  SETA  &LTBLIX+1                     INCREMENT LOCAL TABLE INDX
         AGO   .BM24                         BRANCH TO PROCESS NEXT CU
.BM26    ANOP
         AIF   (&NUMMOD1 EQ 0).BM28          CHK FOR NO MOD 1
&LTBLIX  SETA  4096                       SET LOCAL TABLE INDEX ZA65565
.BM27    ANOP
&DEVADR  SETC  '&TBLNAME(&LTBLIX)'           SET BUFFER TABLE NAME
&A       SETA  &BFRSIZE(&LTBLIX)             SET BUFFER SIZE
         PUNCH 'IFFB&DEVADR SGIFF0BT &A'
         AIF   (&NUMMOD1 EQ 1).BM28          CHK FOR LAST 2250
&NUMMOD1 SETA  &NUMMOD1-1                    DECREMENT 2250 MOD 1 CTR
&LTBLIX  SETA  &LTBLIX+1                     INCREM LOCAL TABLE INDEX
         AGO   .BM27                         BRANCH TO PROCESS NEXT DEV
.BM28    ANOP
         PUNCH '         END'
         PUNCH '/*'
.BM29    ANOP
         MEND                                                   ZA36692
