          MACRO
          SGILR600
.*
.*A-000000-999999                                              @Z40WPWN
.* /* START OF SPECIFICATIONS ****
.*
.*01  MODULE-NAME = SGILR600
.*
.*01  DESCRIPTIVE-NAME = ASM DATA SET SYSGEN MACRO
.*
.*01  STATUS = OS/VS2 RELEASE 4.1
.*
.*01  FUNCTION = SGILR600 CAUSES SYS1.STGINDEX,PAGE,SWAP,AND DUPLEX
.*               DATASETS TO BE ALLOCATED AND CATALOGED IN THE VSAM
.*               MASTER CATALOG.
.*
.*01  OPERATION = VIA THE ASSEMBLER PUNCH COMMAND, A JOB STEP IS
.*               STGINDEX DATA SET:
.*                GENERATED INVOKING THE AMS UTILITY.  A DEFINE COMMAND
.*                AND ASSOCIATED PARAMETERS IS GENERATED FOR EACH
.*                DATA SET TO BE CREATED.  MACRO OUTPUT IS GOVERNED BY
.*                THE USER VIA THE 'DATASET' INSTALLATION MACRO.
.*
.*01  MODULE-TYPE = MACRO
.*02    PROCESSOR = ASSEMBLER XF
.*02    MACRO-SIZE = 85 STATEMENTS
.*
.*01  INPUT = GLOBAL SYMBOLS DEFINED BY THE SGGBLPAK MODULE
.*
.*            GLOBAL ASSIGMENTS:
.*              STGINDEX DATA SET:
.*               &SGCTRLC(40)     VALUE OF INDEX PARAMETER  INDEX=
.*               &SGDSPSA(14)     PRIMARY SPACE TO BE ALLOCATED
.*               &SGDSVLC(14)     VOLUME SERIAL OF DEVICE
.*               &SGDSUNC(14)     DEVICE TYPE
.*              PAGE DATA SET:
.*                X RUNS FROM 1 TO 25
.*               &SGPAGDC(X)      NAME OF PAGE DATA SET
.*               &SGPGSPA(X)      PRIMARY SPACE TO BE ALLOCATED
.*               &SGPGVLC(X)      VOLUME SERIAL OF DEVICE
.*               &SGPGUNC(X)      DEVICE TYPE
.*              SWAP DATA SET:
.*                 X RUNS FROM 1 TO 10
.*               &SGSWPDC(X)      NAME OF A SWAP DATA SET
.*               &SGSWSPA(X)      PRIMARY SPACE TO BE ALLOCATED
.*               &SGSWVLC(X)      VOLUME SERIAL OF DEVICE
.*               &SGSWUNC(X)      DEVICE TYPE
.*              DUPLEX DATA SET:
.*               &SGDUPXC         NAME OF DUPLEX DATA SET
.*               &SGDSPSA(22)     PRIMARY SPACE TO BE ALLOCATED
.*               &SGDSVLC(22)     VOLUME SERIAL OF DEVICE
.*               &SGDSUNC(22)     DEVICE TYPE
.*
.*01  OUTPUT = IF THE USER SPECIFIED THE 'DATASET' MACRO FOR STGINDEX
.*             AND/OR ANY PAGING DATA SET WITH THE SPACE= PARAMETER,
.*             THEN THE JOB STEP IS OUTPUT TO ALLOCATE AND CATALOG THE
.*             SPECIFIED DATA SETS, OTHERWISE NO OUTPUT IS GENERATED.
.*
.*01  INNER-MACRO = SGGBLPAK - DEFINE SYSTEM GLOBALS
.*
.*01  MESSAGES = NONE
.*
.**** END OF SPECIFICATIONS ***/
         COPY  SGGBLPAK           DEFINE SYSTEM GLOBAL VARIABLES
.**********************************************************************
.*
.*       UP TO 25 PAGE DATA SETS AND UP TO 10 SWAP DATA SETS
.*       CAN BE DEFINED DURING SYSGEN. ADDITIONAL PAGE/SWAP
.*       DATA SETS MAY BE DEFINED AFTER SYSGEN.
.*
.**********************************************************************
         LCLA  &J                 PAGE INDEX 1 - 25
         LCLA  &K                 SWAP INDEX 1 - 10
         LCLA  &L                 PRIMARY SPACE FOR STGINDEX SPACE
&L       SETA   &SGDSPSA(14)+1
&J       SETA   1                 ININIALIZE PAGE INDEX
&K       SETA  1                  INITIALIZE SWAP INDEX
         AIF  (&SGDSPSA(14) NE 0).DDGEN
.PAGECK  AIF  (&SGPGSPA(&J) NE 0).DDGEN
&J       SETA  &J+1
         AIF  (&J LE 25).PAGECK
.SWAPCK  AIF  (&SGSWSPA(&K) NE 0).DDGEN
&K       SETA  &K+1
         AIF  (&K LE 10).SWAPCK
         AIF  (&SGDSPSA(22) NE 0).DDGEN
         AGO  .END
.DDGEN   ANOP
.**********************************************************************
.*
.*      GENERATE JCL FOR DEFINE DATA SET
.*
.**********************************************************************
&SGCTRLA(1) SETA &SGCTRLA(1)+1
 PUNCH '//SG&SGCTRLA(1) EXEC PGM=IDCAMS,REGION=512K'
 PUNCH '//STEPCAT  DD  DSNAME=&SGVSNMC,DISP=SHR'
 PUNCH '//SYSPRINT DD  SYSOUT=&SGCTRLC(41)'
         AIF   (&SGDSPSA(14) EQ 0).CKPGDD   IF NO STG INDEX
 PUNCH '//STGINDEX DD  VOL=SER=&SGDSVLC(14),UNIT=&SGDSUNC(14),DISP=OLD'
.CKPGDD  ANOP
&J       SETA  1        INIT PAGE INDEX
.PAGEDD  AIF   (&SGPGSPA(&J) EQ 0).DDPNEXT    TEST LT 25 PAGES
 PUNCH '//PAGE&J   DD  VOL=SER=&SGPGVLC(&J),UNIT=&SGPGUNC(&J),DISP=OLD'
.DDPNEXT ANOP
&J       SETA  &J+1               INDEX TO NEXT PAGE
         AIF   (&J LE 25).PAGEDD  MAX OF 25 PAGES
&K       SETA  1                  INIT SWAP INDEX
.SWAPDD  AIF  (&SGSWSPA(&K) EQ 0).DDSNEXT
 PUNCH '//SWAP&K  DD  VOL=SER=&SGSWVLC(&K),UNIT=&SGSWUNC(&K),DISP=OLD'
.DDSNEXT ANOP
&K       SETA  &K+1
         AIF  (&K LE 10).SWAPDD
         AIF  (&SGDSPSA(22) EQ 0).DDEND
 PUNCH '//DUPLEX  DD  VOL=SER=&SGDSVLC(22),UNIT=&SGDSUNC(22),DISP=OLD'
.DDEND   ANOP
 PUNCH '//SYSIN    DD  *'
         AIF   (&SGDSPSA(14) EQ 0).PAGESP   IF NO STG INDEX
.**********************************************************************
.*
.*        DEFINE SPACE FOR STG INDEX
.*
.**********************************************************************
 PUNCH '   DEFINE SPACE -'
 PUNCH '       (VOLUME(&SGDSVLC(14)) -'
 PUNCH '       FILE(STGINDEX) -'
 PUNCH '       CYLINDERS(&L))'
.**********************************************************************
.*
.*      DEFINE STG INDEX
.*
.**********************************************************************
 PUNCH '  DEFINE CLUSTER -'
 PUNCH '              (NAME(&SGCTRLC(40)..STGINDEX) -'
 PUNCH '               FILE(STGINDEX) -'
 PUNCH '               KEYS(12,8) -'
 PUNCH '               CYLINDERS(&SGDSPSA(14)) -'
 PUNCH '               BUFFERSPACE(5120) -'                    @ZA11818
 PUNCH '               RECORDSIZE(2041,2041) -'
 PUNCH '               VOLUME(&SGDSVLC(14)) -'
 PUNCH '               REUSE) -'
 PUNCH '         DATA (CONTROLINTERVALSIZE(2048)) -'
 PUNCH '         INDEX (CONTROLINTERVALSIZE(1024))'            @ZA11818
.PAGESP  ANOP
&J       SETA  1                  INITIALIZE PAGE INDEX
.DEFPAGE AIF   (&SGPGSPA(&J) EQ 0).DEFNPG   TEST LT 25 PAGES
.**********************************************************************
.*
.*     DEFINE PAGE DATA SET
.*
.**********************************************************************
 PUNCH '  DEFINE PAGESPACE -'
 PUNCH '              (NAME(&SGPAGDC(&J)) -'
 PUNCH '               FILE(PAGE&J) -'
 PUNCH '               CYLINDERS(&SGPGSPA(&J)) -'
 PUNCH '               VOLUME(&SGPGVLC(&J)) -'
 PUNCH '               UNIQUE)'
.DEFNPG ANOP
&J       SETA  &J+1               INDEX TO NEXT PAGE
         AIF (&J LE 25).DEFPAGE   TEST MAX OF 25 PAGES
&K      SETA  1
.DEFSWAP AIF  (&SGSWSPA(&K) EQ 0).DEFNSW
.**********************************************************************
.*
.*     DEFINE SWAP DATA SET
.*
.**********************************************************************
 PUNCH '  DEFINE PAGESPACE -'
 PUNCH '              (NAME(&SGSWPDC(&K)) -'
 PUNCH '              FILE(SWAP&K) -'
 PUNCH '              CYLINDERS(&SGSWSPA(&K)) -'
 PUNCH '              VOLUME(&SGSWVLC(&K)) -'
 PUNCH '              UNIQUE -'
 PUNCH '              SWAP)'
.DEFNSW ANOP
&K        SETA  &K+1      INDEX TO NEXT SWAP
          AIF   (&K LE 10).DEFSWAP    TEST MAX OF 10 SWAP
          AIF  (&SGDSPSA(22) EQ 0).DEFEND
.**********************************************************************
.*
.*      DEFINE DUPLEX DATA SET
.*
.**********************************************************************
 PUNCH '  DEFINE PAGESPACE -'
 PUNCH '              (NAME(&SGDUPXC) -'
 PUNCH '              FILE(DUPLEX) -'
 PUNCH '              CYLINDERS(&SGDSPSA(22)) -'
 PUNCH '              VOLUME(&SGDSVLC(22)) -'
 PUNCH '              UNIQUE)'
.DEFEND ANOP
 PUNCH '/*'
.END     MEND
