         MACRO
         GENERATE   &GENTYPE=ALL,&OBJPDS=SYS1.OBJPDS,                  X
               &RESVOL=,&INDEX=SYS1,&OCLASS=A,&JCLASS=A,               *
               &C=(INDMAC,CMDLIB,HELP,JES3LIB,SAMPLIB,,MACLIB,PROCLIB,,*
               TELCMLIB,UADS,,VTAMLIB,,,IMAGELIB,,PARMLIB,BRODCAST,MANX*
               ,MANY,,,,TCOMMAC,,DUMP00,DUMP01,DUMP02,DUMP03,DUMP04,DUM*
               P05,DUMP06,DUMP07,DUMP08,DUMP09)         ZM30851,Y30BS04
.*                                                             @ZA41353
         COPY  SGGBLPAK
         GBLB  &SGIHASU(100)                                    Z32DSVN
         LCLA  &W1,&W2,&W3,&CTR1,&I,&B,&DADRA(1917),&J,&D       Z40ASVN
         LCLB  &QUITONB,&F
         LCLC  &NUC,&A,&N,&X
         ACTR  250000
.***** START OF SPECIFICATIONS **************************************
.*
.* MODULE NAME - GENERATE
.*
.* DESCRIPTIVE NAME - SYSGEM GENERATION MACRO
.*
.* COPYRIGHT - NONE
.*
.* STATUS - CHANGE LEVEL 04
.*
.* FUNCTION -
.*       THE GENERATE MACRO IS USED TO SPECIFY THE DATA SETS, VOLUMES
.*       AND I/O DEVICES REQUIRED FOR THE SYSTEM GENERATION PROCESS,
.*       THE INPUT AND OUTPUT CLASSES FOR THE STAGE II JOB STREAM,
.*       AND THE TYPE OF GENERATION BEING DONE
.*
.* $F1 = EDS1102,  SDPD, 78125,  PLR:
.*
.* NOTES - N/A
.*
.* MODULE TYPE - MACRO
.*
.* ENTRY POINT - N/A
.*
.* INPUT - THE FOLLOWING MAY BE INCLUDED AS GENERATE PARAMETERS
.*             &GENTYPE - COMPLETE SYSGEN OR I/O SYSGEN
.*             &OBJPDS  - PARTITIONED DATA SET TO BE USED FOR THE
.*                        STORAGE OF OBJECT MODULES ASSEMBLED DURING
.*                        STAGE II. 6 CHAR LIMIT.
.*             &RESVOL  - SERIAL NUMBER & UNIT TYPE OF THE NEW SYSTEM
.*                        RESIDENCE VOLUME.
.*             &INDEX   - QUALIFIER FOR THE NEW SYSTEM DATA SETS,
.*                        DEFAULT IS SYS1.
.*             &JCLASS  - JOB CLASS TO BE USED
.*             &OCLASS  - OUTPUT CLASS TO BE USED
.*
.* OUTPUT -
.*         THE OUTPUT FROM GENERATE CONSISTS OF A JOB STREAM OF
.*         FIVE JOBS CALLED A STAGE TWO INPUT DECK. WHEN THIS
.*         JOB STREAM IS RUN, A VS2 2 SYSTEM IS CREATED.
.*       ALL GLOBALS ARE USED
.*       THE LOCALS USED ARE -
.*             &NUC    - NUCLEUS NUMBER
.*             &QUITONB- QUIT SWITCH SAVE AREA
.*
.* EXIT, NORMAL - N/A
.*
.* EXIT, ERROR - N/A
.*
.* EXTERNAL REFERENCES - N/A
.*
.* TABLES - N/A
.*
.* MACROS -
.*         SGIEI1CS - VALIDATES CONSOLES
.*         SGIEI1IO - VALIDATES IO DEVICES
.*         SGIEI1SU - VALIDATES SUPERVISOR FUNCTIONS
.*         SGIEI1SV - GENERATES SVC ENTRIES FOR SYSTEM ROUTINES
.*         IHASETSU - GET SU ASSIGNMENT BIT MAP
.*         SGSETGPT - BUILD GENERIC PREFERENCE TABLE           @G64HSPD
.*         VARIOUS COMPONENT MACROS WHICH GENERATE THE STEPS
.*
.* CHANGE ACTIVITY - MODIFIED FOR Y02036,ZA00124,ZA00125,ZA00129,
.*                   ZA00130,ZM30003,ZM30402,ZM30004,ZM30851,ZA05060,
.*                   Z30AALG,VS30854,VS32758,ZM32650,ZA02236,VS33034,
.*                   Y30BS04,Z30RSTA,X40MSTG,VS40029,Z40RSVN,Z40DSVN
.*                   VS40079,Z40WSVN,VS43004,ZM40407,Z40ASVN,G24LSVN
.*                   OZ03927,OZ03926,OZ03884,OZ04623,OZ05629,OZ06711
.*                   G32DSVN,@G64HSPD
.*                   OZ09975,OZ14554,OZ15061,@ZA15662,@ZA20936,@ZA24964
.*                   @ZA25672,@ZA26168,@ZA28264,@ZA29684,OZ29149
.*                   OZ17541,OZ31090,@ZA33542,OZ38886,ZA41488,@ZA42177
.*                   @ZA41353,@ZA43437,@ZA42300,@ZA44496,@ZA47135
.*                   @ZA51289,@ZA57918
.* $01=OZ87936,UZ41187,STLSKM: DO NOT INVOKE TCAM OR BTAM MACROS  @01A*
.*                             IF NOT SPECIFIED IN DATAMGT        @01C*
.* $02=OZ97575,FDS1122,C/TKNH: BUILD DD FOR AOS21 ONLY WHEN TCAM  @02A*
.*                             SPECIFIED ON DATAMGT MACRO         @02A*
.***** END OF SPECIFICATIONS ****************************************
.**********************************************************************
.*                         ***** ENTRY *****                          *
.**********************************************************************
         AIF (&SGMENTB(88)).A0            PREVIOUS ENTRY?
&SGMENTB(88)   SETB 1                     SET ENTRY SWITCH
&SGCTRLC(35)   SETC 'LPALIB'              SET TARGET LIB FOR INNERS
&SGCTRLC(36)   SETC 'LPALIB'              SET TARGET LIB FOR INNERS
&QUITONB       SETB (&SGQUITB)
         AGO   .B0                        GO CHECK GENTYPE PARM
.A0 MNOTE 5,'* * * IEIGEN000 GENERATE MACRO PREVIOUSLY USED'
&SGQUITB SETB  1                          SET QUIT SWITCH
         AGO   .SF0                       GO TO END
.**********************************************************************
.*                         ***** GENTYPE *****                        *
.**********************************************************************
.B0      AIF (N'&GENTYPE NE 1).B2         SUBLIST?
         AIF   ('&GENTYPE' EQ 'IO').B6
         AIF ('&GENTYPE' NE 'ALL').B8     INVALID GENTYPE?
&NUC     SETC  '1'
    MNOTE *,'  SYSGEN TYPE ALL'
         AGO   .C0                        GO CHECK OBJPDS PARM
.B2      AIF (N'&GENTYPE GT 2).B8         INVALID GENTYPE?
         AIF   ('&GENTYPE(1)' NE 'IO').B8
         AIF (&GENTYPE(2) LT 1 OR &GENTYPE(2) GT 9).BA   INVALID?
&GETB(3)  SETB 1                          SET IO SYSGEN GLOBAL
&NUC     SETC  '&GENTYPE(2)'              SET NUC NUMBER LOCAL
    MNOTE *,'  SYSGEN TYPE IO-NUCLEUS NUMBER &GENTYPE(2)'
         AGO   .C0                        GO CHECK OBJPDS PARM
.B6 MNOTE 5,'* * * IEIGEN100  MUST SPECIFY NUCLEUS NUMBER WITH IO GEN'
&SGQUITB SETB  1                          SET QUIT SWITCH
         AGO   .C0                        GO CHECK OBJPDS PARM
.B8 MNOTE 5,'* * * IEIGEN001 GENTYPE VALUE &GENTYPE INVALID'
&SGQUITB SETB  1                          SET QUIT SWITCH
         AGO   .C0                        GO CHECK OBJPDS PARM
.BA MNOTE 5,'* * * IEIGEN102 NUCLEUS NUMBER WITH IO GEN MUST BE FROM 1 *
               TO 9'
&SGQUITB SETB  1                          SET QUIT SWITCH
.**********************************************************************
.*                         ***** OBJPDS *****                         *
.**********************************************************************
.C0      AIF (K'&OBJPDS LT 6 OR K'&OBJPDS GT 11).C2  INVALID?
         AIF ('&OBJPDS'(1,5) NE 'SYS1.').C2          INVALID?
         AGO   .PDSN
.C2 MNOTE 5,'* * * IEIGEN103 OBJPDS VALUE &OBJPDS INVALID'
&SGQUITB SETB  1                          SET QUIT SWITCH
.**********************************************************************
.***     CHECK PAGEDSN SPECIFICATIONS                  ****************
.**********************************************************************
.PDSN    ANOP
         AIF   ('&SGPAGDC(3)' NE '').D0  MIN = 3 TIMES         Z40WSVN
&SGQUITB SETB  1
 MNOTE 5,'* * * IEIGEN104 AT LEAST 3 PAGE DATASETS REQUIRED'   Z40WSVN
.**********************************************************************
.*                         ***** RESVOL *****                         *
.**********************************************************************
.D0      ANOP
         AIF   (T'&RESVOL(1) NE 'O').CKRVOL
&SGCTRLC(30) SETC 'SYSRES'
         AGO   .CKRVOL2
.CKRVOL  AIF   (K'&RESVOL(1) GT 6).RD4
&SGCTRLC(30) SETC '&RESVOL(1)'
.*   CHECK FOR VALID DEVICE TYPE
.CKRVOL2 AIF   (T'&RESVOL(2) NE 'O').CKRVOL1
&SGCTRLC(29) SETC '3330'
         AGO   .CKRVOL3
.CKRVOL1 AIF (('&RESVOL(2)' EQ '2305-1') OR ('&RESVOL(2)' EQ '2305-2') *
               OR ('&RESVOL(2)' EQ '2314')).CKRVOL4
         AIF ('&RESVOL(2)' EQ '3350').CKRVOL4                  @Z30RSTA
         AIF (('&RESVOL(2)' NE '3330') AND ('&RESVOL(2)' NE '3330-1')  *
               AND ('&RESVOL(2)' NE '3340')).RD6
.CKRVOL4 ANOP
&SGCTRLC(29) SETC '&RESVOL(2)'
.CKRVOL3 ANOP
    MNOTE *,'  SYSTEM RESIDENCE WILL RESIDE ON &SGCTRLC(30) UNIT &SGCTRX
               LC(29)'
         AGO   .E0                        GO CHECK INDEX PARM
.RD4 MNOTE 5,'* * * IEIGEN106 VOLUME SERIAL &RESVOL(1) ON RESVOL PARAMEX
               TER INVALID'
&SGQUITB SETB  1                          SET QUIT SWITCH
         AGO   .CKRVOL2
.RD6 MNOTE 5,'* * * IEIGEN107 DEVICE TYPE &RESVOL(2) ON RESVOL PARAMETE*
               R INVALID'
&SGQUITB SETB  1                          SET QUIT SWITCH
.**********************************************************************
.*                         ***** INDEX *****                          *
.**********************************************************************
.E0      AIF (K'&INDEX GT 6).E2           TOO MANY CHARACTERS
&SGCTRLC(40)   SETC '&INDEX'              SET INDEX GLOBAL
         AGO   .F0                        GO CHECK CLASS PARM
.E2 MNOTE 5,'* * * IEIGEN108 INDEX VALUE &INDEX INVALID'
&SGQUITB SETB  1                          SET QUIT SWITCH
.**********************************************************************
.*                         ***** OCLASS *****                         *
.**********************************************************************
.F0  AIF (('&OCLASS' LT 'A') OR ('&OCLASS' GT 'I' AND '&OCLASS' LT 'J')*
               OR ('&OCLASS' GT 'R' AND '&OCLASS' LT 'S') OR ('&OCLASS'*
               GT 'Z' AND '&OCLASS' LT '0') OR ('&OCLASS' GT '9')).F2
&SGCTRLC(41)   SETC  '&OCLASS'
         AGO   .F4                        GO CHECK JCLASS PARM
.F2 MNOTE 5,'* * * IEIGEN109 OCLASS PARAMETER &OCLASS INVALID'
&SGQUITB SETB  1                          SET QUIT SWITCH
.**********************************************************************
.*                         ***** JCLASS *****                *
.**********************************************************************
.F4      AIF (('&JCLASS' LT 'A') OR ('&JCLASS' GT 'I' AND '&JCLASS' LT *
               'J') OR ('&JCLASS' GT 'O')).F6
&SGCTRLC(42)   SETC  '&JCLASS'
         AGO   .G0                        GO CALL INTERNAL MACROS
.F6 MNOTE 5,'* * * IEIGEN010 JCLASS PARAMETER &JCLASS INVALID'
&SGQUITB SETB  1                          SET QUIT SWITCH
.**********************************************************************
.*                         ***** INTERNAL MACROS *****                *
.**********************************************************************
.G0      ANOP
&SGACTR  SETA  600000                     SET ACTR COUNTER     @AZ15061
*** IHASETSU *** SU GLOBAL SWITCHES
    IHASETSU CSECT=NO                     SET SU GLOBALS        G32DSVN
*** SGRELLEV  *** SYSTEM BUILD                            *** SYBLD ***
    SGRELLEV
*** SGIEI1IO *** SYSGEN                                   *** SC1S1 ***
    SGIEI1IO
*** SGIEI1SU *** SYSGEN                                   *** SC1S1 ***
    SGIEI1SU
*** SGIEI1CS *** SYSGEN                                   *** SC1S1 ***
    SGIEI1CS
*** SGIEI1SV *** SYSGEN                                   *** SC1S1 ***
    SGIEI1SV
.*                                                             @G64HSPD
*** SGSETGPT *** SYSGEN                                   *** SC1S1 ***
    SGSETGPT
         AIF   ('&SGVSNMC' NE '').OK5 CHECK FOR VSCATALOG NAME
   MNOTE 7,'*** IEIGEN020 VSCATLOG NAME NOT SPECIFIED IN DATASET'
&SGQUITB SETB  1
.OK5     AIF (&SGMENTB(16)).H2            OVERRIDE SWITCH?
         AIF (&QUITONB).SEC               QUIT SWITCH BEFORE GENERATE?
         AIF (&SGQUITB).SEE               QUIT SWITCH SET IN GENERATE?
         AGO   .H4
.H2      AIF (NOT(&QUITONB OR &SGQUITB)).H4
    MNOTE 7,'* * * IEIGEN111 DIAGNOSTIC OVERRIDE SPECIFIED'
    MNOTE 7,'* * * * * * * * ERROR MESSAGES SHOULD BE INTERPRETED'
    MNOTE 7,'* * * * * * * * AS WARNINGS'
.H4      ANOP
&J       SETA  1
.AUPDAT  AIF   (&J EQ 1918).EUPDAT                              Z40ASVN
&DADRA(&J)     SETA &SGDADRA(&J)
&J       SETA  &J+1
         AGO   .AUPDAT
.EUPDAT  ANOP
         AIF   ('&SGDSUNC(12)' EQ '').V1D LPALIB UNIT SPECIFIED
&SGCTRLC(19)   SETC  '&SGDSUNC(12)'       PICK UP LPALIB UNIT
&SGCTRLC(20)   SETC  '&SGDSVLC(12)'       PICK UP LPALIB VOL SER
         AGO   .V2
.V1D     ANOP
&SGCTRLC(19)   SETC '&SGCTRLC(29)'        DEFAULT TO RESVOL
&SGCTRLC(20)   SETC '&SGCTRLC(30)'        DEFAULT TO RESVOL
&SGDSUNC(12)   SETC '&SGCTRLC(29)'        DEFAULT TO RESVOL
&SGDSVLC(12)   SETC '&SGCTRLC(30)'        DEFAULT TO RESVOL
.V2      AIF   ('&SGDSVLC(6)' EQ '').V2D DEFAULT LINKLIB
&SGCTRLC(31)   SETC  '&SGDSUNC(6)'        PICK UP LINKLIB UNIT
&SGCTRLC(32)   SETC  '&SGDSVLC(6)'        PICK UP LINKLIB VOL SER
         AGO   .V3
.V2D     ANOP
&SGCTRLC(31)   SETC '&SGCTRLC(29)'        DEFAULT TO RESVOL
&SGCTRLC(32)   SETC '&SGCTRLC(30)'        DEFAULT TO RESVOL
&SGDSUNC(6)    SETC '&SGCTRLC(29)'        DEFAULT TO RESVOL
&SGDSVLC(6)    SETC '&SGCTRLC(30)'        DEFAULT TO RESVOL
.V3      AIF   ('&SGDSVLC(10)' EQ '').V3D DEFAULT TELCMLIB
&SGCTRLC(33)   SETC  '&SGDSUNC(10)'       PICK UP TELCMLIB UNIT
&SGCTRLC(34)   SETC  '&SGDSVLC(10)'       PICK UP TELCMLIB VOL SER
         AGO   .V4
.V3D     ANOP
&SGCTRLC(33)   SETC '&SGCTRLC(29)'        DEFAULT TO RESVOL
&SGCTRLC(34)   SETC '&SGCTRLC(30)'        DEFAULT TO RESVOL
&SGDSUNC(10)   SETC '&SGCTRLC(29)'        DEFAULT TO RESVOL
&SGDSVLC(10)   SETC '&SGCTRLC(30)'        DEFAULT TO RESVOL
.V4      AIF   ('&SGDSVLC(18)' EQ '').V4D DEFAULT PARMLIB     @ZA33542
&SGCTRLC(44)   SETC  '&SGDSUNC(18)'       PICK UP PARMLIB UNIT
&SGCTRLC(45)   SETC  '&SGDSVLC(18)'       PICK UP PARMLIB VOL SER
         AGO   .V5
.V4D     ANOP
&SGCTRLC(44)   SETC '&SGCTRLC(29)'        DEFAULT TO RESVOL
&SGCTRLC(45)   SETC '&SGCTRLC(30)'        DEFAULT TO RESVOL
&SGDSUNC(18)   SETC '&SGCTRLC(29)'        DEFAULT TO RESVOL
&SGDSVLC(18)   SETC '&SGCTRLC(30)'        DEFAULT TO RESVOL
.V5      AIF   ('&SGDSVLC(8)' EQ '').V5D  DEFAULT PROCLIB
&SGCTRLC(25)   SETC  '&SGDSUNC(8)'        PICK UP PROCLIB UNIT
&SGCTRLC(26)   SETC  '&SGDSVLC(8)'        PICK UP PROCLIB VOL SER
         AGO   .V6
.V5D     ANOP
&SGCTRLC(25)   SETC '&SGCTRLC(29)'        DEFAULT TO RESVOL
&SGCTRLC(26)   SETC '&SGCTRLC(30)'        DEFAULT TO RESVOL
&SGDSUNC(8)    SETC '&SGCTRLC(29)'        DEFAULT TO RESVOL
&SGDSVLC(8)    SETC '&SGCTRLC(30)'        DEFAULT TO RESVOL
.V6      AIF   ('&SGDSVLC(16)' EQ '').V6D DEFAULT IMAGELIB
&SGCTRLC(61)   SETC  '&SGDSUNC(16)'       PICK UP IMAGELIB UNIT
&SGCTRLC(62)   SETC  '&SGDSVLC(16)'       PICK UP IMAGELIB VOL SER
         AGO   .V7
.V6D     ANOP
&SGCTRLC(61)   SETC '&SGCTRLC(29)'        DEFAULT TO RESVOL
&SGCTRLC(62)   SETC '&SGCTRLC(30)'        DEFAULT TO RESVOL
&SGDSUNC(16)   SETC '&SGCTRLC(29)'        DEFAULT TO RESVOL
&SGDSVLC(16)   SETC '&SGCTRLC(30)'        DEFAULT TO RESVOL
.V7      AIF   ('&SGDSVLC(7)' EQ '').V7D  DEFAULT MACLIB
&SGCTRLC(15)   SETC  '&SGDSUNC(7)'        PICK UP MACLIB UNIT
&SGCTRLC(16)   SETC  '&SGDSVLC(7)'        PICK UP MACLIB VOL SER
         AGO   .V8
.V7D     ANOP
&SGCTRLC(15)   SETC '&SGCTRLC(29)'        DEFAULT TO RESVOL
&SGCTRLC(16)   SETC '&SGCTRLC(30)'        DEFAULT TO RESVOL
&SGDSUNC(7)    SETC '&SGCTRLC(29)'        DEFAULT TO RESVOL
&SGDSVLC(7)    SETC '&SGCTRLC(30)'        DEFAULT TO RESVOL
.V8      AIF   ('&SGDSVLC(5)' EQ '').V8D  DEFAULT SAMPLIB
&SGCTRLC(17)   SETC  '&SGDSUNC(5)'        PICK UP SAMP UNIT
&SGCTRLC(18)   SETC  '&SGDSVLC(5)'        PICK UP SAMP VOL SER
         AGO   .V9
.V8D     ANOP
&SGCTRLC(17)   SETC '&SGCTRLC(29)'        DEFAULT TO RESVOL
&SGCTRLC(18)   SETC '&SGCTRLC(30)'        DEFAULT TO RESVOL
&SGDSUNC(5)    SETC '&SGCTRLC(29)'        DEFAULT TO RESVOL
&SGDSVLC(5)    SETC '&SGCTRLC(30)'        DEFAULT TO RESVOL
.V9      AIF   ('&SGDSVLC(1)' EQ '').V9D  DEFAULT INDMAC
&SGCTRLC(65)   SETC  '&SGDSUNC(1)'        PICK UP INDMAC UNIT
&SGCTRLC(66)   SETC  '&SGDSVLC(1)'        PICK UP INDMAC VOL SER
         AGO   .VB
.V9D     ANOP
&SGCTRLC(65)   SETC '&SGCTRLC(29)'        DEFAULT TO RESVOL
&SGCTRLC(66)   SETC '&SGCTRLC(30)'        DEFAULT TO RESVOL
&SGDSUNC(1)    SETC '&SGCTRLC(29)'        DEFAULT TO RESVOL
&SGDSVLC(1)    SETC '&SGCTRLC(30)'        DEFAULT TO RESVOL
.VB      AIF   ('&SGDSVLC(13)' EQ '').VBD  DEFAULT VTAMLIB
&SGCTRLC(27)   SETC  '&SGDSUNC(13)'        PICK UP VTAMLIB UNIT
&SGCTRLC(28)   SETC  '&SGDSVLC(13)'        PICK UP VTAMLIB VOL SER
         AGO   .VC
.VBD     ANOP
&SGCTRLC(27)   SETC '&SGCTRLC(29)'        DEFAULT TO RESVOL
&SGCTRLC(28)   SETC '&SGCTRLC(30)'        DEFAULT TO RESVOL
&SGDSUNC(13)   SETC '&SGCTRLC(29)'        DEFAULT TO RESVOL
&SGDSVLC(13)   SETC '&SGCTRLC(30)'        DEFAULT TO RESVOL
.VC      AIF   ('&SGDSVLC(2)' EQ '').VCD  DEFAULT CMDLIB
&SGCTRLC(23)   SETC  '&SGDSVLC(2)'        PICK UP CMDLIB VOL SER
&SGCTRLC(24)   SETC  '&SGDSUNC(2)'        PICK UP CMDLIB UNIT
         AGO   .V10
.VCD     ANOP
&SGCTRLC(24)   SETC '&SGCTRLC(29)'        DEFAULT TO RESVOL
&SGCTRLC(23)   SETC '&SGCTRLC(30)'        DEFAULT TO RESVOL
&SGDSUNC(2)    SETC '&SGCTRLC(29)'        DEFAULT TO RESVOL
&SGDSVLC(2)    SETC '&SGCTRLC(30)'        DEFAULT TO RESVOL
.V10     AIF   ('&SGDSVLC(11)' EQ '').V10D DEFAULT UADS
&SGCTRLC(49)   SETC  '&SGDSUNC(11)'       PICK UP UADS UNIT
&SGCTRLC(50)   SETC  '&SGDSVLC(11)'       PICK UP UADS VOL SER
         AGO   .V11
.V10D    ANOP
&SGCTRLC(49)   SETC '&SGCTRLC(29)'        DEFAULT TO RESVOL
&SGCTRLC(50)   SETC '&SGCTRLC(30)'        DEFAULT TO RESVOL
&SGDSUNC(11)   SETC '&SGCTRLC(29)'        DEFAULT TO RESVOL
&SGDSVLC(11)   SETC '&SGCTRLC(30)'        DEFAULT TO RESVOL
.V11     AIF   ('&SGDSVLC(3)' EQ '').V11D DEFAULT HELP
&SGCTRLC(51)   SETC  '&SGDSUNC(3)'        PICK UP HELP UNIT
&SGCTRLC(52)   SETC  '&SGDSVLC(3)'        PICK UP HELP VOL SER
         AGO   .V13                                                @F1C
.V11D    ANOP
&SGCTRLC(51)   SETC '&SGCTRLC(29)'        DEFAULT TO RESVOL
&SGCTRLC(52)   SETC '&SGCTRLC(30)'        DEFAULT TO RESVOL
&SGDSUNC(3)    SETC '&SGCTRLC(29)'        DEFAULT TO RESVOL
&SGDSVLC(3)    SETC '&SGCTRLC(30)'        DEFAULT TO RESVOL
.*                                                                 @F1D
.V13     AIF   ('&SGDSVLC(23)' EQ '').V13D DEFAULT DCMLIB
&SGCTRLC(53)   SETC  '&SGDSUNC(23)'       PICK UP DCM UNIT
&SGCTRLC(54)   SETC  '&SGDSVLC(23)'       PICK UP DCM VOL SER
         AGO   .V14
.V13D    ANOP
&SGCTRLC(53)   SETC '&SGCTRLC(29)'        DEFAULT TO RESVOL
&SGCTRLC(54)   SETC '&SGCTRLC(30)'        DEFAULT TO RESVOL
&SGDSUNC(23)   SETC '&SGCTRLC(29)'        DEFAULT TO RESVOL
&SGDSVLC(23)   SETC '&SGCTRLC(30)'        DEFAULT TO RESVOL
.V14     AIF   ('&SGDSVLC(19)' EQ '').V14D DEFAULT BRODCAST
&SGCTRLC(57)   SETC '&SGDSUNC(19)'        PICK UP BRODCAST UNIT
&SGCTRLC(58)   SETC '&SGDSVLC(19)'        PICK UP BRODCAST VOL SER
         AGO   .V15
.V14D    ANOP
&SGCTRLC(57)   SETC '&SGCTRLC(29)'        DEFAULT TO RESVOL
&SGCTRLC(58)   SETC '&SGCTRLC(30)'        DEFAULT TO RESVOL
&SGDSUNC(19)   SETC '&SGCTRLC(29)'        DEFAULT TO RESVOL
&SGDSVLC(19)   SETC '&SGCTRLC(30)'        DEFAULT TO RESVOL
.V15     ANOP
&SGDSUNC(9)    SETC  '&SGCTRLC(29)'       SET SVCLIB TO RESVOL
&SGDSVLC(9)    SETC  '&SGCTRLC(30)'       SET SVCLIB TO RESVOL
&SGDSUNC(17)   SETC  '&SGCTRLC(29)'       SET NUCLEUS TO RESVOL
&SGDSVLC(17)   SETC  '&SGCTRLC(30)'       SET NUCLEUS TO RESVOL
         AIF   ('&SGDSUNC(14)' EQ '').V16D DEFAULT STGINDEX
&SGCTRLC(21)   SETC  '&SGDSUNC(14)'       PICK UP STGINDEX UNIT
&SGCTRLC(22)   SETC  '&SGDSVLC(14)'       PICK UP STGINDEX VOL SER
         AGO   .V17
.V16D    ANOP
&SGCTRLC(21)   SETC '&SGCTRLC(29)'        DEFAULT TO RESVOL
&SGCTRLC(22)   SETC '&SGCTRLC(30)'        DEFAULT TO RESVOL
&SGDSUNC(14)   SETC '&SGCTRLC(29)'        DEFAULT TO RESVOL
&SGDSVLC(14)   SETC '&SGCTRLC(30)'        DEFAULT TO RESVOL
.V17     AIF   ('&SGDSUNC(15)' EQ '').V17D DEFAULT VSCATLG
&SGCTRLC(37)   SETC  '&SGDSUNC(15)'       PICK UP VSCATLG UNIT
&SGCTRLC(38)   SETC  '&SGDSVLC(15)'       PICK UP VSCATLG VOL SER
         AGO   .V18
.V17D    ANOP
&SGCTRLC(37)   SETC '&SGCTRLC(29)'        DEFAULT TO RESVOL
&SGCTRLC(38)   SETC '&SGCTRLC(30)'        DEFAULT TO RESVOL
&SGDSUNC(15)   SETC '&SGCTRLC(29)'        DEFAULT TO RESVOL
&SGDSVLC(15)   SETC '&SGCTRLC(30)'        DEFAULT TO RESVOL
.V18     AIF   ('&SGDSUNC(20)' EQ '').V18D DEFAULT MANX
&SGCTRLC(43)   SETC  '&SGDSUNC(20)'       PICK UP MANX UNIT
&SGCTRLC(46)   SETC  '&SGDSVLC(20)'       PICK UP MANX VOL SER
         AGO   .V19
.V18D    ANOP
&SGCTRLC(43)   SETC '&SGCTRLC(29)'        DEFAULT TO RESVOL
&SGCTRLC(46)   SETC '&SGCTRLC(30)'        DEFAULT TO RESVOL
&SGDSUNC(20)   SETC '&SGCTRLC(29)'        DEFAULT TO RESVOL
&SGDSVLC(20)   SETC '&SGCTRLC(30)'        DEFAULT TO RESVOL
.V19     AIF   ('&SGDSUNC(21)' EQ '').V19D DEFAULT MANY
&SGCTRLC(47)   SETC  '&SGDSUNC(21)'       PICK UP MANY UNIT
&SGCTRLC(48)   SETC  '&SGDSVLC(21)'       PICK UP MANY VOL SER
         AGO   .V20
.V19D    ANOP
&SGCTRLC(47)   SETC '&SGCTRLC(29)'        DEFAULT TO RESVOL
&SGCTRLC(48)   SETC '&SGCTRLC(30)'        DEFAULT TO RESVOL
&SGDSUNC(21)   SETC '&SGCTRLC(29)'        DEFAULT TO RESVOL
&SGDSVLC(21)   SETC '&SGCTRLC(30)'        DEFAULT TO RESVOL
.V20     AIF   ('&SGDSUNC(25)' EQ '').V20D DEFAULT TCOMMAC     @ZA41353
&SGCTRLC(69)   SETC  '&SGDSUNC(25)'       PICK UP TCOMMAC UNIT
&SGCTRLC(70)   SETC  '&SGDSVLC(25)'       PICK UP TCOMMAC VOL SER
         AGO   .V20E
.V20D    ANOP
&SGCTRLC(69)   SETC '&SGCTRLC(29)'        DEFAULT TO RESVOL
&SGCTRLC(70)   SETC '&SGCTRLC(30)'        DEFAULT TO RESVOL
&SGDSUNC(25)   SETC '&SGCTRLC(29)'        DEFAULT TO RESVOL
&SGDSVLC(25)   SETC '&SGCTRLC(30)'        DEFAULT TO RESVOL
.V20E    ANOP                                                  @ZA41353
&D       SETA  27
.V21     AIF   ('&SGDSUNC(&D)' NE '').V22 DEFAULT DUMP00-09
&SGDSUNC(&D)   SETC  '&SGCTRLC(29)'       SET TO RESVOL
&SGDSVLC(&D)   SETC  '&SGCTRLC(30)'       SET TO RESVOL
.V22     ANOP
&D       SETA  &D+1
         AIF   (&D LE 36).V21
         AIF   ('&SGDSUNC(4)' NE '').V23 DEFAULT JES3LIB        Y30BS04
&SGDSUNC(4)    SETC  '&SGCTRLC(29)'      DEFAULT TO RESVOL      Y30BS04
&SGDSVLC(4)    SETC  '&SGCTRLC(30)'      DEFAULT TO RESVOL      Y30BS04
.V23     ANOP                                                   Y30BS04
&SGCTRLC(67)   SETC  '&SGDSUNC(4)'                              Y30BS04
&SGCTRLC(68)   SETC  '&SGDSVLC(4)'                              Y30BS04
.*
.*                                                              VS43004
         AIF   ('&SGDSUNC(22)' NE '').V25 DEFAULT DUPLEXDS      Z40WSVN
&SGDSUNC(22)   SETC  '&SGCTRLC(29)'      DEFAULT TO RESVOL      Z40WSVN
&SGDSVLC(22)   SETC  '&SGCTRLC(30)'      DEFAULT TO RESVOL      Z40WSVN
.V25     ANOP                                                   Z40WSVN
&SGCTRLC(36)   SETC  'LPALIB'             SET THIS LIBRARY TO LPA
&SGCTRLC(35)   SETC  'LPALIB'             SET THIS LIBRARY TO LPA
&SGCTRLC(1)    SETC  ',LIST'
&SGCTRLC(2)    SETC  ',XREF'
&SGCPRGB(8) SETB 1 INDICATE VS2-2
.**********************************************************************
.****    JOB 1
.****          OBJPDS01                               *****************
.****          ALLOCATE AND CATALOG LPALIB            *****************
.****          ASSEMBLIES                             *****************
.****          COPIES                                 *****************
.****          LINKEDITS                              *****************
.****          RENAME AND LISTPDS                     *****************
.**********************************************************************
.*
.*          CALL JOBCARD MACRO FOR ALLOCATION/CATALOG JOB
.*
.**********************************************************************
.****  THIS STEP IS CALLED IF VSCATLG REQUIRES SPACE ALLOCATION     ***
.**********************************************************************
         AIF   (&GETB(3)).IOSTEP         IO GEN
         AIF   (&SGDSPSA(15) EQ 0).NVS    IS SPACE SPECIFIED?
         JOBCARD
**** SGIGG600 *** VSCATLG                                 *** SC1DE ***
     SGIGG600
*** GENERATE *** SYSGEN                                   *** SC1S1 ***
         AGO     .NVS
.**********************************************************************
.****     IO GENERATION ONLY - LPALIB RENAMED IF INDEX IS NOT SYS1  ***
.**********************************************************************
.IOSTEP    ANOP
&SGCTRLA(3)    SETA 1              INITIALIZE JOB  COUNTER
         JOBCARD
         AIF   ('&INDEX' EQ 'SYS1').LPAEND     NO NEED TO RENAME
&SGCTRLA(1)    SETA 1              INITIALIZE STEP COUNTER
 PUNCH '//LPA&SGCTRLA(1) EXEC PGM=IEHPROGM'
 PUNCH '//SYSPRINT  DD    SYSOUT=&SGCTRLC(41)'
 PUNCH '//LPALIB DD VOLUME=(,RETAIN,SER=&SGDSVLC(12).),UNIT=&SGDSUNC(12X
               ),DISP=OLD'
 PUNCH '//SYSIN DD *'
 PUNCH '  RENAME DSNAME=SYS1.LPALIB,                                   X
                       X'
 PUNCH '               NEWNAME=&SGCTRLC(40)..LPALIB,VOL=&SGDSUNC(12)=&SX
               GDSVLC(12)'
 PUNCH '/*'
.*
         AGO     .LPAEND       BYPASS ALLOCATION OF LPALIB FOR IO GEN
.NVS     ANOP
&SGCTRLA(3)    SETA 1              INITIALIZE JOB  COUNTER
         JOBCARD
         AIF   (&SGDSPSA(12) EQ 0).LPAEND     NO SPACE REQUESTED
&SGCTRLA(1)    SETA 1              INITIALIZE STEP COUNTER
 PUNCH '//LPA&SGCTRLA(1) EXEC PGM=IDCAMS,REGION=512K'           ZA00125
 PUNCH '//SYSPRINT  DD    SYSOUT=&SGCTRLC(41)'
         AIF   (NOT &SGDSA1B(12)).PB1     BLOCKSIZE REQUESTED
         AIF   (NOT &SGDSA2B(12)).PT1     TRK SPECIFIED
&A       SETC  'CYL'
         AGO   .P1
.PB1     ANOP
&A       SETC  '&SGDSBZA(12)'
         AGO   .P1
.PT1     ANOP
&A       SETC  'TRK'
.P1      AIF   ('&SGDSUNC(12)' NE '2314').P2
&B       SETA  7294
         AGO   .P6
.P2 AIF ('&SGDSUNC(12)' NE '3330' AND '&SGDSUNC(12)' NE '3330-1').P3
&B       SETA  13030
         AGO   .P6
.P3      AIF   ('&SGDSUNC(12)' NE '2305-1').P4
&B       SETA  14136
         AGO   .P6
.P4      AIF   ('&SGDSUNC(12)' NE '2305-2').P5
&B       SETA  14660
         AGO   .P6
.P5      AIF   ('&SGDSUNC(12)' NE '3340').P59                  @Z30RSTA
&B       SETA  8368
         AGO   .P6                                             @Z30RSTA
.P59     AIF   ('&SGDSUNC(12)' NE '3350').PERR                 @Z30RSTA
&B       SETA  19069                                           @ZM40407
         AGO   .P6                                             @Z30RSTA
.P6      ANOP
  PUNCH  '//LPALIB DD DSN=&SGCTRLC(40)..LPALIB,DISP=(,KEEP),'
  PUNCH  '// VOLUME=(,RETAIN,SER=&SGDSVLC(12).),UNIT=&SGDSUNC(12).,'
         AIF   (&SGDSSSA(12) NE 0).PA20      SECONDARY REQUIRED
.PA50    ANOP
  PUNCH  '// LABEL=EXPDT=99350,SPACE=(&A.,(&SGDSPSA(12).,,&SGDSDBA(12).*
               )),DCB=(RECFM=U,BLKSIZE=&B.)'
         AGO   .PCAT
.PA20    ANOP
 PUNCH  '// LABEL=EXPDT=99350,'
 PUNCH  '// DCB=(RECFM=U,BLKSIZE=&B.),SPACE=(&A.,(&SGDSPSA(12).,&SGDSSS*
               A(12).,&SGDSDBA(12).))'
.PCAT    ANOP
  PUNCH  '//SYSIN DD *'
  PUNCH '  DEFINE   CAT (&SGVSNMC) -'                           OZ04623
  PUNCH '  NONVSAM ( NAME (&INDEX..LPALIB)   -'
  PUNCH '            VOL (&SGDSVLC(12).)    DEVT (&SGDSUNC(12).))  '
  PUNCH '/*'
         AGO   .LPAEND
.PERR MNOTE 5,'* * * IEIGEN502 INVALID UNIT FOR LPALIB'
&SGQUITB SETB  1
.LPAEND  ANOP
&SGCTRLC(5)    SETC '&OBJPDS'(6,6).'01'
.**********************************************************************
.****    LPALIB ASSEMBLIES                            *****************
.**********************************************************************
.************* ALL-IO *****
**** SGIEF213 *** SCHEDULER                               *** SC1S5 ***
     SGIEF213
&J  SETA 1
.AUPDATE AIF  (&J EQ 1918).EUPDATE                              Z40ASVN
&SGDADRA(&J) SETA &DADRA(&J)
&J  SETA &J+1
    AGO  .AUPDATE
.EUPDATE ANOP
.************* ALL-IO *****
**** SGIEF201 *** SCHEDULER                               *** SC1S5 ***
     SGIEF201
.************* ALL-IO  *****
**** SGIEA2D1 *** SUPERVISOR                              *** SC1C4 ***
     SGIEA2D1
.*                                                                 @F1D
.************* ALL-1O  ******                                      @F1C
**** SGIEF2PT *** SCHEDULER                               *** SC1S5 ***
     SGIEF2PT
.************* ALL-IO *****                                        @F1C
**** SGIEF241 *** SCHEDULER                               *** SC1S5 ***
     SGIEF241
.******* ALL-IO  ******                                            @F1C
*** SGIKJ2LP *** TSO SCHEDULER                            *** SC1T4 ***
    SGIKJ2LP
.LPA    ANOP
.**********************************************************************
.*****   LPALIB COPIES                                *****************
.**********************************************************************
*** GENERATE *** SYSGEN                                   *** SC1S1 ***
&SGCTRLA(1)    SETA &SGCTRLA(1)+1   BUMP STEP COUNTER
.LPA1    ANOP
 PUNCH '//LPA&SGCTRLA(1) EXEC PGM=IEBCOPY,REGION=512K,COND=(8,LT)'
 PUNCH '//SYSUT3 DD DSN=&&SYSUT3,SPACE=(1700,(10,5)),UNIT=SYSDA'
 PUNCH '//SYSUT4 DD DSN=&&SYSUT4,SPACE=(460,(30,24)),UNIT=SYSDA'
 PUNCH '//SYSPRINT DD SPACE=(3630,(500,100),RLSE),'
 PUNCH '//    DCB=(RECFM=FB,LRECL=121,BLKSIZE=121),SYSOUT=&SGCTRLC(41)'
 PUNCH '//LPALIB DD DISP=OLD,DSN=&INDEX..LPALIB,UNIT=&SGCTRLC(19),'
 PUNCH '//        VOL=(,RETAIN,SER=&SGCTRLC(20))'
 PUNCH '//ALPALIB DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.ALPALIB'
    AIF    ('&SGPDSUC(12)' EQ '' OR &GETB(3) EQ 1).NULPA
 PUNCH '//LPALIBA DD DISP=SHR,DSNAME=&SGPDSUC(12)'              ZA00124
.NULPA ANOP
 PUNCH '//ACMDLIB DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.ACMDLIB'
 PUNCH '//AOSA0 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOSA0'
   AIF   (&GETB(3) OR NOT &SGMENTB(46)).NOJ3A IO OR NO JES3     Y30BS04
 PUNCH '//AOSBA DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOSBA' Y30BS04
.NOJ3A   ANOP                                                   Y30BS04
 PUNCH '//AOSB0 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOSB0'
 PUNCH '//AOSB3 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOSB3'
 PUNCH '//AOSCA DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOSCA'
 PUNCH '//AOSCE DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOSCE'
 PUNCH '//AOSC5 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOSC5'
 PUNCH '//AOSC6 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOSC6'
 PUNCH '//AOSD0 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOSD0'
 PUNCH '//AOSD7 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOSD7'
 PUNCH '//AOSD8 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOSD8'
 PUNCH '//AOSG0 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOSG0'
 PUNCH '//AOST3 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOST3'
 PUNCH '//AOST4 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOST4'
 PUNCH '//AOSU0 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOSU0'
 PUNCH '//AOS06 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOS06'
.*                                                                 @F1D
 PUNCH '//AOS11 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOS11'
 PUNCH '//AOS12 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOS12'
 PUNCH '//AOS20 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOS20'
         AIF  (NOT &SGDMGTB(5)).NOTCAM1      TCAM NOT SPECIFIED?   @02A
 PUNCH '//AOS21 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOS21'
.NOTCAM1 ANOP                                                      @02A
 PUNCH '//AOS24 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOS24'
 PUNCH '//SYSIN DD *'
.********** ALL/IO *************
*** SGIEC500 *** IOS                                      *** SC1C3 ***
    SGIEC500
.********** ALL/IO *************
*** SGIEC5PV *** ACCESS METHODS                           *** SC1D0 ***
    SGIEC5PV
.********** ALL/IO *************
*** SGIEA501 *** SUPERVISOR                               *** SC1S4 ***
    SGIEA501
.********** ALL/IO *************                               @ZA09975
*** SGIGG502 *** OCR-MICR                                 *** SC1D5 ***
    SGIGG502                                                   @ZA09975
.********** ALL/IO **********
*** SGIFF5LP *** GRAPHICS                                 *** SC1G0 ***
    SGIFF5LP                                                   @ZA26168
        AIF  (NOT &SGDCLSB(27)).N3540    3540 DEVICE IN SYSTEM? VS31752
.********** ALL/IO *************                                VS31752
*** SGIEB500 *** ERIC-II                                  *** SC1DN ***
    SGIEB500                                                    VS31752
.N3540  AIF   (&GETB(3)).LPA3             IO SYSGEN             OZ03926
         AIF   (NOT &SGMENTB(46)).NOJ3B    NO JES3              Y30BS04
.******* ALL *******                                            Y30BS04
*** SGIAT5SI *** JES3 TO LPALIB                           *** SC1BA ***
   SGIAT5SI
.NOJ3B  AIF   (NOT &SGDCLSB(28)).LPA2 3851?                    Y30LSOS
.************** ALL *****                                      Y30LSOS
*** SGICB500 *** 3851                                     *** SC1DR ***
    SGICB500
.LPA2   ANOP
.************** ALL *****
*** SGIEC5DI *** BDAM                                     *** SC1D7 ***
    SGIEC5DI
.************** ALL *****
*** SGIEC5IS *** ISAM                                     *** SC1D8 ***
    SGIEC5IS
.************** ALL *****
*** SGIEH501 *** UTILITIES                                *** SC1U0 ***
    SGIEH501
.************** ALL *****
*** SGIHJ500 *** CHECKPOINT/RESTART                       *** SC109 ***
    SGIHJ500
.****************ALL
*** SGIKJ5TT *** TSO TEST                                 *** SC1T1 ***
    SGIKJ5TT
         AIF   (NOT &SGDMGTB(5) AND NOT &SGTSOB).NOTCM1         Z40DSVN
.******* ALL ********   CALL IF TCAM OR CMDS=YES                Z40DSVN
*** SGIKJ5EC *** TSO DATA MANAGEMENT                      *** SC1T3 ***
    SGIKJ5EC
.NOTCM1   ANOP
.********* ALL ************
*** SGIEC5DM *** DADSM                                    *** SC1D4 ***
    SGIEC5DM
.********** ALL *************
*** SGAHL500 *** GTF                                      *** SC111 ***
    SGAHL500
.********** ALL *************
*** SGIKJ541 *** SCHEDULER                                *** SC1S5 ***
    SGIKJ541
.********** ALL *************
*** SGIHG501 *** UTILITIES                                *** SC1U9 ***
    SGIHG501
        AIF  (NOT &SGDMGTB(5)).NTCAM1        TCAM NOT SPECIFIED?   @01A
.********** ALL *************
*** SGIED500 *** TCAM                                     *** SC121 ***
    SGIED500
.NTCAM1 ANOP                                                       @01A
        AIF  (NOT &SGDMGTB(4)).NBTAM1        BTAM NOT SPECIFIED?   @01A
.********** ALL *************                                  @ZA41488
*** SGIED510 *** BTAM                                     *** SC121 ***
    SGIED510
.NBTAM1 ANOP                                                       @01A
        AIF  (NOT &SGDMGTB(6)).IED              VTAM NOT SPECIFIED
.********** ALL *************
*** SGIST511 *** VTAM                                     *** SC123 ***
    SGIST511
.IED    ANOP
*** GENERATE *** SYSGEN                                   *** SC1S1 ***
 PUNCH '          COPY  INDD=ALPALIB,OUTDD=LPALIB'
.***
.** THE FOLLOWING CHECKS IF THERE ARE ANY USER MEMBERS TO BE COPIED ***
.***
 AIF ('&SGMB01C(12)' EQ '' AND '&SGRES1C(12)' EQ '' AND '&SGLSIOC(1)'  *
               EQ '' AND '&SGLEOEC(1)' EQ '' AND '&SGLCHEC(1)' EQ ''   *
               AND '&SGLABEC(1)' EQ '' AND '&SGLPCIC(1)' EQ '').LPA3
 PUNCH '          COPY  OUTDD=LPALIB,INDD=LPALIBA'
         AIF   ('&SGMB01C(12)' EQ '').LPA4
 PUNCH '          SELECT MEMBER=&SGMB01C(12)'
         AIF   ('&SGMB02C(12)' EQ '').LPA4
 PUNCH '          SELECT MEMBER=&SGMB02C(12)'
         AIF   ('&SGMB03C(12)' EQ '').LPA4
 PUNCH '          SELECT MEMBER=&SGMB03C(12)'
         AIF   ('&SGMB04C(12)' EQ '').LPA4
 PUNCH '          SELECT MEMBER=&SGMB04C(12)'
         AIF   ('&SGMB05C(12)' EQ '').LPA4
 PUNCH '          SELECT MEMBER=&SGMB05C(12)'
         AIF   ('&SGMB06C(12)' EQ '').LPA4
 PUNCH '          SELECT MEMBER=&SGMB06C(12)'
         AIF   ('&SGMB07C(12)' EQ '').LPA4
 PUNCH '          SELECT MEMBER=&SGMB07C(12)'
         AIF   ('&SGMB08C(12)' EQ '').LPA4
 PUNCH '          SELECT MEMBER=&SGMB08C(12)'
         AIF   ('&SGMB09C(12)' EQ '').LPA4
 PUNCH '          SELECT MEMBER=&SGMB09C(12)'
         AIF   ('&SGMB10C(12)' EQ '').LPA4
 PUNCH '          SELECT MEMBER=&SGMB10C(12)'
         AIF   ('&SGMB11C(12)' EQ '').LPA4
 PUNCH '          SELECT MEMBER=&SGMB11C(12)'
         AIF   ('&SGMB12C(12)' EQ '').LPA4
 PUNCH '          SELECT MEMBER=&SGMB12C(12)'
         AIF   ('&SGMB13C(12)' EQ '').LPA4
 PUNCH '          SELECT MEMBER=&SGMB13C(12)'
         AIF   ('&SGMB14C(12)' EQ '').LPA4
 PUNCH '          SELECT MEMBER=&SGMB14C(12)'
         AIF   ('&SGMB15C(12)' EQ '').LPA4
 PUNCH '          SELECT MEMBER=&SGMB15C(12)'
         AIF   ('&SGMB16C(12)' EQ '').LPA4
 PUNCH '          SELECT MEMBER=&SGMB16C(12)'
         AIF   ('&SGMB17C(12)' EQ '').LPA4
 PUNCH '          SELECT MEMBER=&SGMB17C(12)'
         AIF   ('&SGMB18C(12)' EQ '').LPA4
 PUNCH '          SELECT MEMBER=&SGMB18C(12)'
         AIF   ('&SGMB19C(12)' EQ '').LPA4
 PUNCH '          SELECT MEMBER=&SGMB19C(12)'
         AIF   ('&SGMB20C(12)' EQ '').LPA4
 PUNCH '          SELECT MEMBER=&SGMB20C(12)'
.LPA4    AIF   ('&SGRES1C(12)' EQ '').LPA5
 PUNCH '          SELECT MEMBER=&SGRES1C(12)'
         AIF   ('&SGRES2C(12)' EQ '').LPA5
 PUNCH '          SELECT MEMBER=&SGRES2C(12)'
         AIF   ('&SGRES3C(12)' EQ '').LPA5
 PUNCH '          SELECT MEMBER=&SGRES3C(12)'
         AIF   ('&SGRES4C(12)' EQ '').LPA5
 PUNCH '          SELECT MEMBER=&SGRES4C(12)'
         AIF   ('&SGRES5C(12)' EQ '').LPA5
 PUNCH '          SELECT MEMBER=&SGRES5C(12)'
         AIF   ('&SGRES6C(12)' EQ '').LPA5
 PUNCH '          SELECT MEMBER=&SGRES6C(12)'
         AIF   ('&SGRES7C(12)' EQ '').LPA5
 PUNCH '          SELECT MEMBER=&SGRES7C(12)'
         AIF   ('&SGRES8C(12)' EQ '').LPA5
 PUNCH '          SELECT MEMBER=&SGRES8C(12)'
         AIF   ('&SGRES9C(12)' EQ '').LPA5
 PUNCH '          SELECT MEMBER=&SGRES9C(12)'
         AIF   ('&SGRESAC(12)' EQ '').LPA5
 PUNCH '          SELECT MEMBER=&SGRESAC(12)'
.LPA5    ANOP
&I       SETA  1
&CTR1    SETA  1
.LPA6    AIF   (K'&SGLSIOC(&CTR1) LE &I).LPA7
&N       SETC  '&SGLSIOC(&CTR1)'(&I,2)
  PUNCH '          SELECT MEMBER=IGG019&N'
&I       SETA  &I+2
         AIF   (&I LT 8).LPA6
&CTR1    SETA  &CTR1+1
&I       SETA  1
         AIF   (&CTR1 LE 21).LPA6
.LPA7    ANOP
&I       SETA  1
&CTR1    SETA  1
.LPA8    AIF   (K'&SGLEOEC(&CTR1) LE &I).LPA9
&N       SETC  '&SGLEOEC(&CTR1)'(&I,2)
  PUNCH '          SELECT MEMBER=IGG019&N'
&I       SETA  &I+2
         AIF   (&I LT 8).LPA8
&CTR1    SETA  &CTR1+1
&I       SETA  1
         AIF   (&CTR1 LE 21).LPA8
.LPA9    ANOP
&I       SETA  1
&CTR1    SETA  1
.LPA10   AIF   (K'&SGLCHEC(&CTR1) LE &I).LPA11
&N       SETC  '&SGLCHEC(&CTR1)'(&I,2)
  PUNCH '          SELECT MEMBER=IGG019&N'
&I       SETA  &I+2
         AIF   (&I LT 8).LPA10
&CTR1    SETA  &CTR1+1
&I       SETA  1
         AIF   (&CTR1 LE 21).LPA10
.LPA11   ANOP
&I       SETA  1
&CTR1    SETA  1
.LPA12   AIF   (K'&SGLABEC(&CTR1) LE &I).LPA13
&N       SETC  '&SGLABEC(&CTR1)'(&I,2)
  PUNCH '          SELECT MEMBER=IGG019&N'
&I       SETA  &I+2
         AIF   (&I LT 8).LPA12
&CTR1    SETA  &CTR1+1
&I       SETA  1
         AIF   (&CTR1 LE 21).LPA12
.LPA13   ANOP
&I       SETA  1
&CTR1    SETA  1
.LPA14   AIF   (K'&SGLPCIC(&CTR1) LE &I).LPA3
&N       SETC  '&SGLPCIC(&CTR1)'(&I,2)
  PUNCH '          SELECT MEMBER=IGG019&N'
&I       SETA  &I+2
         AIF   (&I LT 8).LPA14
&I       SETA  1
&CTR1    SETA  &CTR1+1
         AIF   (&CTR1 LE 21).LPA14
.LPA3   ANOP
 PUNCH '/*'
.**********************************************************************
.*****      LPALIB LINKEDIT                         *******************
.**********************************************************************
.************** ALL-IO *****
*** SGIEF441 *** SCHEDULER                                *** SC1S5 ***
    SGIEF441
.************** ALL-IO *****
**** SGIEA401 ****  SUPERVISOR                            *** SC1S4 ***
     SGIEA401
.************** ALL-IO *****
**** SGIEA4D1 ***  SUPERVISOR                             *** SC1C4 ***
     SGIEA4D1
.************** ALL-IO *****                                   @ZA25672
*** SGIEC4DI *** DAM                                      *** SC1D7 ***
    SGIEC4DI
         AIF   (&GETB(3)).LPA16        I/O GEN                 @ZA25672
.******* ALL ********
*** SGIKJ4EC *** TSO TIOC                                 *** SC1T3 ***
    SGIKJ4EC
.*                                                         R   ZA00130
.******* ALL ********
*** SGIKJ4EJ *** TSO UTILITIES                            *** SC1T2 ***
    SGIKJ4EJ
         AIF   (NOT &SGDCLSB(28)).LPA15        MSS?             G24LSVN
         AIF   (NOT &SGIHASU(24)).LPA15        SU24 PRESENT?    G32DSVN
.**** ALL ***                                                   G24LSVN
*** SGICB405 ***  MSS                                     *** SC1DR ***
    SGICB405
.LPA15   ANOP                                                   G24LSVN
.**** ALL ***
**** SGIEC4PS *** O/C/E                                   *** SC1D1 ***
     SGIEC4PS
.**** ALL ***
**** SGIEC4DM *** DADSM                                   *** SC1D4 ***
     SGIEC4DM
.***** ALL *****
*** SGIFD402 *** OLTEP                                    *** SC106 ***
    SGIFD402
.**** ALL ***
**** SGIGF401 *** RMS                                     *** SC1CE ***
     SGIGF401
     AIF (NOT &SGIHASU(32)).NRACF     SU32 PRESENT?            @ZA47135
.**** ALL ****                                                  Z40RSVN
**** SGICH400 ***   RACF                                  *** SC1BN ***
     SGICH400
.NRACF  ANOP                                                   @ZA44496
.*                                                                 @F1D
.**** ALL ****
**** SGAHL400 *** GTF                                     *** SC111 ***
     SGAHL400
.*** ALL ***
*** SGIDA401 *** VSAM                                     *** SG1DE ***
    SGIDA401
.**** ALL ****
*** SGIDA400  *** VIO                                     *** SC1DJ ***
    SGIDA400
.**** ALL ****
*** SGIAS400  *** JES2                                    *** SC1BH ***
    SGIAS400
        AIF  (NOT &SGDMGTB(6)).LPA20            VTAM?
.********** ALL *************
*** SGIST411 *** VTAM                                     *** SC123 ***
    SGIST411
.LPA20  ANOP
.**********************************************************************
.*****               LPALIB RENAME                  *******************
.**********************************************************************
.LPA16   ANOP
*** GENERATE *** SYSGEN                                   *** SC1S1 ***
&SGCTRLA(1)    SETA &SGCTRLA(1)+1  INCR STEP COUNTER
         AIF   ('&INDEX' EQ 'SYS1').L8  SKIP RENAME
         AIF   (&GETB(3)).L7        IO GEN
 PUNCH '//LPA&SGCTRLA(1) EXEC PGM=IDCAMS,REGION=512K,COND=(8,LT)'
 PUNCH '//STEPCAT DD DISP=SHR,DSN=&SGVSNMC'
 PUNCH '//SYSPRINT DD SYSOUT=&SGCTRLC(41)'
 PUNCH '//SYSIN DD *'
 PUNCH '  ALTER       -'
 PUNCH '   &INDEX..LPALIB  NEWNAME (SYS1.LPALIB) -'             OZ04623
 PUNCH ' CAT (&SGVSNMC)'                                        OZ04623
 PUNCH '/*'
         AGO   .L8        LIST RENAMED LPALIB
.L7     ANOP              FOR IO GEN - RENAME LPALIB
 PUNCH '//LPA&SGCTRLA(1) EXEC PGM=IEHPROGM,COND=(8,LT)'
 PUNCH '//SYSPRINT  DD    SYSOUT=&SGCTRLC(41)'
 PUNCH '//LPALIB DD VOLUME=(,RETAIN,SER=&SGDSVLC(12).),UNIT=&SGDSUNC(12X
               ),DISP=OLD'
 PUNCH '//SYSIN DD *'
 PUNCH '  RENAME NEWNAME=SYS1.LPALIB,                                  X
                       X'
 PUNCH '               DSNAME=&SGCTRLC(40)..LPALIB,VOL=&SGDSUNC(12)=&SGX
               DSVLC(12)'
 PUNCH '/*'
.L8      ANOP
.**********************************************************************
.*****   JOB 2                                          ***************
.*****         OBJPDS02                                 ***************
.*****         ALLOCATE AND CATALOG LINKLIB             ********** @F1C
.*****         ASSEMBLIES                               ***************
.*****         LINKLIB COPIES                           ***************
.*****         LINKLIB LINKEDITS                        ***************
.*****         RENAME AND LIST(PDS)                     ***************
.**********************************************************************
.*
.*          CALL JOBCARD MACRO FOR ALLOCATION/CATALOG JOB
.*
&SGCTRLA(1) SETA  0
&SGCTRLA(3) SETA  &SGCTRLA(3)+1
         JOBCARD
.**********************************************************************
.****    IO GENERATION ONLY - LINKLIB RENAMED IF INDEX IS NOT SYS1  ***
.**********************************************************************
         AIF   (NOT &GETB(3)).LINKSPC  NOT AN I/O SYSTEM GENERATION
         AIF   ('&INDEX' EQ 'SYS1').LINKEND  NO NEED TO RENAME
&SGCTRLA(1)    SETA 1                        SET STEP COUNTER
 PUNCH '//LNK&SGCTRLA(1) EXEC PGM=IEHPROGM'
 PUNCH '//SYSPRINT  DD    SYSOUT=&SGCTRLC(41)'
 PUNCH '//LINKLIB DD VOLUME=(,RETAIN,SER=&SGDSVLC(6).),UNIT=&SGDSUNC(6)X
               ,DISP=OLD'
 PUNCH '//SYSIN DD *'
 PUNCH ' RENAME DSNAME=SYS1.LINKLIB,                                   X
                       X'
 PUNCH '               NEWNAME=&SGCTRLC(40)..LINKLIB,VOL=&SGDSUNC(6)=&SX
               GDSVLC(6)'
 PUNCH '/*'
         AGO   .LINKEND
.**********************************************************************
.*****                   LINKLIB ALLOCATION FOR ALL GEN       *****@F1C
.**********************************************************************
.LINKSPC  ANOP                      IS LINKLIB PREALLOCATED        @F1C
          AIF   (&SGDSPSA(6) EQ 0).LINKEND                         @F1C
&SGCTRLA(1)    SETA 1                        SET STEP COUNTER
 PUNCH '//LNK&SGCTRLA(1) EXEC PGM=IDCAMS,REGION=512K'
 PUNCH '//SYSPRINT  DD    SYSOUT=&SGCTRLC(41)'
         AIF   (NOT &SGDSA1B(6)).LB1      BLOCKSIZE REQUESTED
         AIF   (NOT &SGDSA2B(6)).LT1      TRK SPECIFIED
&A       SETC  'CYL'
         AGO   .L1
.LB1     ANOP
&A       SETC  '&SGDSBZA(6)'
         AGO   .L1
.LT1     ANOP
&A       SETC  'TRK'
.L1      AIF   ('&SGDSUNC(6)' NE '2314').L2
&B       SETA  7294
         AGO   .L6
.L2 AIF ('&SGDSUNC(6)' NE '3330' AND '&SGDSUNC(6)' NE '3330-1').L3
&B       SETA  13030
         AGO   .L6
.L3      AIF   ('&SGDSUNC(6)' NE '2305-1').L4
&B       SETA  14136
         AGO   .L6
.L4      AIF   ('&SGDSUNC(6)' NE '2305-2').L5
&B       SETA  14660
         AGO   .L6
.L5      AIF   ('&SGDSUNC(6)' NE '3340').L59                   @Z30RSTA
&B       SETA  8368
         AGO   .L6                                             @Z30RSTA
.L59     AIF   ('&SGDSUNC(6)' NE '3350').LERR                  @Z30RSTA
&B       SETA  19069                                           @ZM40407
         AGO   .L6                                             @Z30RSTA
.L6      ANOP
 PUNCH '//LINKLIB DD DSN=&SGCTRLC(40)..LINKLIB,DISP=(,KEEP),'
 PUNCH '// VOLUME=(,RETAIN,SER=&SGDSVLC(6).),UNIT=&SGDSUNC(6).,'
         AIF   (&SGDSSSA(6) NE 0).LA20      SECONDARY REQUIRED
.LA50    ANOP
 PUNCH '// LABEL=EXPDT=99350,SPACE=(&A.,(&SGDSPSA(6).,,&SGDSDBA(6).)),'
 PUNCH '//    DCB=(RECFM=U,BLKSIZE=&B.)'
         AGO   .CAT1
.LA20    ANOP
 PUNCH '// LABEL=EXPDT=99350,'
 PUNCH '// DCB=(RECFM=U,BLKSIZE=&B.),SPACE=(&A.,(&SGDSPSA(6).,&SGDSSSA(*
               6).,&SGDSDBA(6).))'
.*                                                                 @F1D
.CAT1   ANOP
 PUNCH '//SYSIN DD *'
         AIF (&SGDSPSA(6) EQ 0).CAT3      LINKLIB PREDEFINED
 PUNCH '  DEFINE  CAT (&SGVSNMC) -'                             OZ04623
 PUNCH '  NONVSAM ( NAME (&INDEX..LINKLIB)    -'
 PUNCH '            VOL (&SGDSVLC(6).)      DEVT (&SGDSUNC(6).))   '
.CAT3   ANOP
 PUNCH '/*'
         AGO   .LINKEND
.LERR MNOTE 5,'* * *  IEIGEN504 INVALID UNIT FOR LINKLIB'
&SGQUITB SETB  1
.LINKEND ANOP
.**********************************************************************
.*****         LINKLIB ASSEMBLIES                             *********
.**********************************************************************
&SGCTRLC(5)    SETC '&OBJPDS'(6,6).'02'   SET OBJPDS GLOBAL
.************* ALL-IO  *******                                     @F1C
*** SGIEF2SS *** SCHEDULER                                *** SC1S5 ***
    SGIEF2SS
.************** ALL-IO  *******                                    @F1C
*** SGIEF240 *** SCHEDULER                                *** SC1S5 ***
    SGIEF240
         AIF (&GETB(3)).LINKX1            IO SYSGEN?               @F1M
.************** ALL *****
*** SGHEW210 *** LINK EDITOR F                            *** SC104 ***
    SGHEW210
*** GENERATE *** SYSGEN                                   *** SC1S1 ***
.LINKX1  AIF   (NOT &GETB(3)).LINKX2                            VS30854
         AIF   (&SGDCLSB(61)).LINKX2                            VS30854
         AIF   ((&SGSCHDA(10) GT 0) OR (&SGSCHDA(11) GT 0) OR (&SG5450A*
                GT 0)).LINKX2                                   VS30854
       AIF  ((&SGSCHDA(17) GT 0) OR (&SGSCHDA(18) GT 0)).LINKX2 VS30854
       AIF  ((&SGSCHDA(19) GT 0) OR (&SGSCHDA(20) GT 0)).LINKX2 VS30854
         AGO   .R0                                              VS30854
.LINKX2  ANOP                                                   VS30854
.**********************************************************************
.*            *** JOB *** LINKLIB COPIES ************                 *
.**********************************************************************
&SGCTRLA(1)    SETA &SGCTRLA(1)+1         INCREMENT STEP COUNTER
 PUNCH '//LNK&SGCTRLA(1) EXEC PGM=IEBCOPY,REGION=512K,COND=(8,LT)'
 PUNCH '//SYSUT3 DD DSN=&&SYSUT3,SPACE=(1700,(10,5)),UNIT=SYSDA'
 PUNCH '//SYSUT4 DD DSN=&&SYSUT4,SPACE=(460,(30,24)),UNIT=SYSDA'
 PUNCH '//SYSPRINT DD SPACE=(3630,(500,100),RLSE),'
 PUNCH '//    DCB=(RECFM=FB,LRECL=121,BLKSIZE=121),SYSOUT=&SGCTRLC(41)'
 PUNCH '//LINKLIB DD DSNAME=&SGCTRLC(40)..LINKLIB,DISP=OLD,'
 PUNCH '//     UNIT=&SGCTRLC(31),VOL=(,RETAIN,SER=&SGCTRLC(32))'
 AIF       ('&SGPDSUC(6)' EQ '' OR &GETB(3) EQ 1).LINK10
 PUNCH '//LINKLIBA DD DISP=SHR,DSNAME=&SGPDSUC(6)'              ZA00124
.LINK10    ANOP
 PUNCH '//ACMDLIB DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.ACMDLIB'
 PUNCH '//AOSB3 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOSB3'
 PUNCH '//AOSCE DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOSCE'
 PUNCH '//AOSC5 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOSC5'
 PUNCH '//AOSD0 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOSD0' VS30863
 PUNCH '//AOSG0 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOSG0'
 PUNCH '//AOST3 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOST3'
 PUNCH '//AOST4 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOST4'
 PUNCH '//AOSU0 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOSU0'
 PUNCH '//AOS00 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOS00'
 PUNCH '//AOS05 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOS05'
 PUNCH '//AOS07 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOS07'
.*                                                                 @F1D
 PUNCH '//AOS11 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOS11'
 PUNCH '//AOS12 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOS12'
 PUNCH '//AOS20 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOS20'
         AIF  (NOT &SGDMGTB(5)).NOTCAM2      TCAM NOT SPECIFIED?   @02A
 PUNCH '//AOS21 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOS21'
.NOTCAM2 ANOP                                                      @02A
 PUNCH '//AOS26 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOS26'
.M4      ANOP
 PUNCH '//SYSIN DD *'
         AIF   (&GETB(3)).NE0        I/O GEN
.************** ALL *****
*** SGAMA501 *** SERVICE AIDS                             *** SC113 ***
    SGAMA501
.************** ALL *****
*** SGHEW560 *** LOADER                                   *** SC105 ***
    SGHEW560
.*                                   TCAM OR 2955 SPECIFIED?       @01C
     AIF   (NOT(&SGDMGTB(5) OR &SGDCLSB(72))).MA                   @01C
.************* ALL **********
*** SGIED501 ***  TCAM                                    *** SC121 ***
    SGIED501
.MA      ANOP
.************* ALL **********
*** SGIGF501 ***  RMS                                     *** SC1CE ***
    SGIGF501
.******* ALL ********
*** SGIKJ540 *** TSO SCHEDULER                            *** SC1S5 ***
    SGIKJ540
        AIF   (NOT &SGDCLSB(28)).NE0  3851?                    Y30LSOS
.************** ALL *****                                      Y30LSOS
*** SGICB501 *** 3851                                     *** SC1DR ***
    SGICB501
.************** ALL *****                                      Y30LSOS
*** SGICG500 *** 3851                                     *** SC1DT ***
    SGICG500
.NE0   ANOP
.************** ALL-IO *****
*** SGIGG501 *** IEBTCRIN UTILITY                         *** SC1D5 ***
    SGIGG501
.************* ALL-I/O *****
*** SGIEA500 *** SUPERVISOR                               *** SC1S4 ***
    SGIEA500
         AIF   (NOT &GETB(3)).NE1
 PUNCH '/*'
         AGO   .R0
.************** ALL *****
.NE1     AIF (NOT(&SGMENTB(12))).R1       GRAPHICS NOT SPECIFIED?
*** SGIFF5LS *** GRAPHIC PROGRAM SERVICES                 *** SC1G0 ***
    SGIFF5LS
.R1   ANOP
*** GENERATE *** SYSGEN                                   *** SC1S1 ***
.**
.** THE FOLLOWING CHECKS IF THERE ARE ANY USER MEMBERS TO BE COPIED ***
.**
    AIF ('&SGMB01C(6)' EQ '' AND '&SGRES1C(6)' EQ '').LINK11
 PUNCH '          COPY  OUTDD=LINKLIB,INDD=LINKLIBA'
         AIF   ('&SGMB01C(6)' EQ '').LINK12
 PUNCH '          SELECT MEMBER=&SGMB01C(6)'
         AIF   ('&SGMB02C(6)' EQ '').LINK12
 PUNCH '          SELECT MEMBER=&SGMB02C(6)'
         AIF   ('&SGMB03C(6)' EQ '').LINK12
 PUNCH '          SELECT MEMBER=&SGMB03C(6)'
         AIF   ('&SGMB04C(6)' EQ '').LINK12
 PUNCH '          SELECT MEMBER=&SGMB04C(6)'
         AIF   ('&SGMB05C(6)' EQ '').LINK12
 PUNCH '          SELECT MEMBER=&SGMB05C(6)'
         AIF   ('&SGMB06C(6)' EQ '').LINK12
 PUNCH '          SELECT MEMBER=&SGMB06C(6)'
         AIF   ('&SGMB07C(6)' EQ '').LINK12
 PUNCH '          SELECT MEMBER=&SGMB07C(6)'
         AIF   ('&SGMB08C(6)' EQ '').LINK12
 PUNCH '          SELECT MEMBER=&SGMB08C(6)'
         AIF   ('&SGMB09C(6)' EQ '').LINK12
 PUNCH '          SELECT MEMBER=&SGMB09C(6)'
         AIF   ('&SGMB10C(6)' EQ '').LINK12
 PUNCH '          SELECT MEMBER=&SGMB10C(6)'
         AIF   ('&SGMB11C(6)' EQ '').LINK12
 PUNCH '          SELECT MEMBER=&SGMB11C(6)'
         AIF   ('&SGMB12C(6)' EQ '').LINK12
 PUNCH '          SELECT MEMBER=&SGMB12C(6)'
         AIF   ('&SGMB13C(6)' EQ '').LINK12
 PUNCH '          SELECT MEMBER=&SGMB13C(6)'
         AIF   ('&SGMB14C(6)' EQ '').LINK12
 PUNCH '          SELECT MEMBER=&SGMB14C(6)'
         AIF   ('&SGMB15C(6)' EQ '').LINK12
 PUNCH '          SELECT MEMBER=&SGMB15C(6)'
         AIF   ('&SGMB16C(6)' EQ '').LINK12
 PUNCH '          SELECT MEMBER=&SGMB16C(6)'
         AIF   ('&SGMB17C(6)' EQ '').LINK12
 PUNCH '          SELECT MEMBER=&SGMB17C(6)'
         AIF   ('&SGMB18C(6)' EQ '').LINK12
 PUNCH '          SELECT MEMBER=&SGMB18C(6)'
         AIF   ('&SGMB19C(6)' EQ '').LINK12
 PUNCH '          SELECT MEMBER=&SGMB19C(6)'
         AIF   ('&SGMB20C(6)' EQ '').LINK12
 PUNCH '          SELECT MEMBER=&SGMB20C(6)'
.LINK12  AIF   ('&SGRES1C(6)' EQ '').LINK11
 PUNCH '          SELECT MEMBER=&SGRES1C(6)'
         AIF   ('&SGRES2C(6)' EQ '').LINK11
 PUNCH '          SELECT MEMBER=&SGRES2C(6)'
         AIF   ('&SGRES3C(6)' EQ '').LINK11
 PUNCH '          SELECT MEMBER=&SGRES3C(6)'
         AIF   ('&SGRES4C(6)' EQ '').LINK11
 PUNCH '          SELECT MEMBER=&SGRES4C(6)'
         AIF   ('&SGRES5C(6)' EQ '').LINK11
 PUNCH '          SELECT MEMBER=&SGRES5C(6)'
         AIF   ('&SGRES6C(6)' EQ '').LINK11
 PUNCH '          SELECT MEMBER=&SGRES6C(6)'
         AIF   ('&SGRES7C(6)' EQ '').LINK11
 PUNCH '          SELECT MEMBER=&SGRES7C(6)'
         AIF   ('&SGRES8C(6)' EQ '').LINK11
 PUNCH '          SELECT MEMBER=&SGRES8C(6)'
         AIF   ('&SGRES9C(6)' EQ '').LINK11
 PUNCH '          SELECT MEMBER=&SGRES9C(6)'
         AIF   ('&SGRESAC(6)' EQ '').LINK11
 PUNCH '          SELECT MEMBER=&SGRESAC(6)'
.LINK11    ANOP
 PUNCH '/*'
.**********************************************************************
.*****   STEP   LINKEDIT TO LINKLIB                          **********
.**********************************************************************
.************** ALL ***********
*** SGIFO401 *** ASSEM XF                                 *** SC103 ***
    SGIFO401
.***********ALL ***************
*** SGHEW410 *** LINK EDITOR                              *** SC104 ***
    SGHEW410
.***********ALL ***************
*** SGHEW460 *** LOADER                                   *** SC105 ***
    SGHEW460
.************** ALL *****
*** SGIDC401 *** AMS UTILITY                              *** SC1DK ***
    SGIDC401
.************** ALL *****
*** SGIEH401 *** UTILITIES                                *** SC1U0 ***
    SGIEH401
.************** ALL *****
*** SGIEH402 *** UTILITIES                                *** SC1UX ***
    SGIEH402
.************** ALL *****                                          @F1A
*** SGIEH404 *** UTILITIES                                *** SC1U0 ***
    SGIEH404
.************** ALL *****
*** SGILR400 *** ASM                                      *** SC1CW ***
    SGILR400
.*                                                                 @F1D
.************** ALL *****
*** SGIHG401 *** UTILITIES                                *** SC1U9 ***
    SGIHG401
.************** ALL *****
*** SGAMA401 *** SERVICE AIDS                             *** SC113 ***
    SGAMA401
.************** ALL *****                                       Z40RSVN
**** SGICH401 ***   RACF                                  *** SC1BN ***
     SGICH401
.**** ALL ****
*** SGIEA400 *** SUPERVISOR                               *** SC1S4 ***
    SGIEA400
        AIF   (NOT &SGDCLSB(28)).R1A  3851?                    Y30LSOS
.************** ALL *****                                      Y30LSOS
*** SGICB400 *** 3851                                     *** SC1DR ***
    SGICB400
.************** ALL *****                                      Y30LSOS
*** SGICG400 *** 3851                                     *** SC1DT ***
    SGICG400
.R1A     AIF   (NOT &SGDMGTB(6)).R0A              VTAM?         Z40DSVN
.************** ALL *****
*** SGIST412 *** VTAM                                     *** SC123 ***
    SGIST412
.R0A     AIF   (NOT &SGTSOB OR NOT &SGDMGTB(6)).R0B CMDS? VTAM? Z40DSVN
         AIF   (NOT &SGIHASU(13)).R0B   SKIP IF SU13 ABSENT     G32DSVN
.************** ALL *****                                       Z40DSVN
*** SGIKT400 *** TSO/VTAM                                 *** SC1T9 ***
    SGIKT400
.************** ALL *****                                      @OZ31090
.*** LINK DEMF  *********                                      @OZ31090
.R0B      AIF    (NOT(&SGIHASU(68))).R0       DEMF SU PRESENT? @OZ31090
***  SGBNG400 *** DEMF ****
     SGBNG400
.R0 ANOP                                REMOVE 2955 TEST        OZ03927
.************** ALL-IO *******                                     @F1M
*** SGIEF440 *** SCHEDULER                                *** SC1S5 ***
    SGIEF440
.************** ALL/IO *****
*** SGIFD401 *** OLTEP                                    *** SC106 ***
    SGIFD401
.************** ALL/IO *****
*** SGIFB400 *** EREP                                     *** SC1CD ***
    SGIFB400
        AIF  (NOT &SGDCLSB(27)).R4       3540 DEVICE IN THE SYSTEM?@F1C
.********** ALL/IO *************
*** SGIEB400 *** ERIC-II                                  *** SC1DN ***
    SGIEB400
.*                                                                 @F1D
.R4    ANOP
.**********************************************************************
.****                  RENAME LINKLIB                              @F1C
.**********************************************************************
*** GENERATE *** SYSGEN                                   *** SC1S1 ***
         AIF   ('&INDEX' EQ 'SYS1').LS8
&SGCTRLA(1)    SETA &SGCTRLA(1)+1        INCR STEP COUNTER
         AIF   (&GETB(3)).LS7       IO GEN
 PUNCH '//LNK&SGCTRLA(1) EXEC PGM=IDCAMS,REGION=512K,COND=(8,LT)'
 PUNCH '//STEPCAT DD DISP=SHR,DSN=&SGVSNMC'
 PUNCH '//SYSPRINT  DD  SPACE=(121,(500,40),RLSE),'
 PUNCH '//   DCB=(RECFM=FB,LRECL=121,BLKSIZE=121),SYSOUT=&SGCTRLC(41)'
 PUNCH '//SYSIN  DD *'
 PUNCH '  ALTER       -'
 PUNCH '   &INDEX..LINKLIB   NEWNAME (SYS1.LINKLIB) -'          OZ04623
 PUNCH ' CAT (&SGVSNMC)'                                        OZ06711
.*                                                                 @F1D
 PUNCH '/*'
         AGO   .LS8       LIST RENAMED LINKLIB
.LS7    ANOP              FOR IO GEN - RENAME LINKLIB
 PUNCH '//LNK&SGCTRLA(1) EXEC PGM=IEHPROGM,COND=(8,LT)'
 PUNCH '//SYSPRINT  DD    SYSOUT=&SGCTRLC(41)'
 PUNCH '//LINKLIB DD VOLUME=(,RETAIN,SER=&SGDSVLC(6).),UNIT=&SGDSUNC(6)X
               ,DISP=OLD'
 PUNCH '//SYSIN DD *'
 PUNCH '  RENAME NEWNAME=SYS1.LINKLIB,                                 X
                       X'
 PUNCH '               DSNAME=&SGCTRLC(40)..LINKLIB,VOL=&SGDSUNC(6)=&SGX
               DSVLC(6)'
 PUNCH '/*'
.LS8     ANOP
         AIF   (&GETB(3) AND NOT(&SGSCHDB(13) AND NOT &SGDMGTB(4))).SV9
.* MUST DO SVCLIB IF IOGEN W/2740 CONSOLE AND NO BTAM           OZ03884
.**********************************************************************
.****    JOB3                                              ************
.****          ALLOCATE AND CATALOG SVCLIB                 ************
.****          COPIES TO SVCLIB                            ************
.**********************************************************************
.*          CALL JOBCARD MACRO FOR ALLOCATION/CATALOG JOB
&SGCTRLA(1) SETA  0                       ZERO STEP COUNTER
&SGCTRLA(3) SETA  &SGCTRLA(3)+1
         JOBCARD
.**********************************************************************
.****    IO GENERATION ONLY - SVCLIB RENAMED IF INDEX IS NOT SYS1  ****
.**********************************************************************
         AIF   (NOT &GETB(3)).SVCSPC  NOT I/O GEN               OZ03884
         AIF   ('&INDEX' EQ 'SYS1').SVEND  NO NEED TO RENAME    OZ03884
&SGCTRLA(1)    SETA 1                        SET STEP COUNTER   OZ03884
 PUNCH '//SVC&SGCTRLA(1) EXEC PGM=IEHPROGM'                     OZ03884
 PUNCH '//SYSPRINT  DD    SYSOUT=&SGCTRLC(41)'                  OZ03884
 PUNCH '//SVCLIB DD VOLUME=(,RETAIN,SER=&SGDSVLC(6).),UNIT=&SGDSUNC(6),X
               DISP=OLD'                                        OZ03884
 PUNCH '//SYSIN DD *'                                           OZ03884
 PUNCH ' RENAME DSNAME=SYS1.SVCLIB,                                    X
                       X'                                       OZ03884
 PUNCH '               NEWNAME=&SGCTRLC(40)..SVCLIB,VOL=&SGDSUNC(6)=&SGX
               DSVLC(6)'                                        OZ03884
 PUNCH '/*'                                                     OZ03884
         AGO   .SVEND                                           OZ03884
.**********************************************************************
.*****         SVCLIB ALLOCATION FOR ALL GEN                  *********
.**********************************************************************
.SVCSPC  AIF   (&SGDSPSA(9) EQ 0).SVEND    SPACE ALLOCATED      OZ03884
&SGCTRLA(1) SETA  1                       INCREMENT STEP COUNTER
.*
 PUNCH '//SVC&SGCTRLA(1) EXEC PGM=IDCAMS,REGION=512K'
 PUNCH  '//SYSPRINT  DD    SYSOUT=&SGCTRLC(41)'
&I       SETA  9
         AIF   (NOT(&SGDSA1B(&I))).SB1     BLOCKSIZE REQUESTED
         AIF   (NOT(&SGDSA2B(&I))).ST1     TRK SPECIFIED
&A       SETC  'CYL'
         AGO   .SD1
.SB1     ANOP
&A       SETC  '&SGDSBZA(&I)'
         AGO   .SD1
.ST1     ANOP
&A       SETC  'TRK'
.SD1     AIF   ('&SGDSUNC(&I)' NE '2314').SD2
&B       SETA  7294
         AGO   .SD6
.SD2 AIF ('&SGDSUNC(&I)' NE '3330' AND '&SGDSUNC(&I)' NE '3330-1').SD3
&B       SETA  13030
         AGO   .SD6
.SD3     AIF   ('&SGDSUNC(&I)' NE '2305-1').SD4
&B       SETA  14136
         AGO   .SD6
.SD4     AIF   ('&SGDSUNC(&I)' NE '2305-2').SD5
&B       SETA  14660
         AGO   .SD6
.SD5     AIF   ('&SGDSUNC(&I)' NE '3340').SD59                 @Z30RSTA
&B       SETA  8368
         AGO   .SD6                                            @Z30RSTA
.SD59    AIF   ('&SGDSUNC(&I)' NE '3350').SERR                 @Z30RSTA
&B       SETA  19069                                           @ZM40407
         AGO   .SD6                                            @Z30RSTA
.SD6     ANOP
  PUNCH   '//SVCLIB DD DSN=&SGCTRLC(40)..SVCLIB,DISP=(,KEEP),'
  PUNCH  '// VOLUME=(,RETAIN,SER=&SGDSVLC(&I).),UNIT=&SGDSUNC(&I).,'
         AIF   (&SGDSSSA(&I) NE 0).SA20    SECONDARY SPACE REQUIRED
.SA50    ANOP                              NO SECONDARY SPACE
  PUNCH  '// SPACE=(&A.,(&SGDSPSA(&I).,,&SGDSDBA(&I).)),'
  PUNCH  '// LABEL=EXPDT=99350,DCB=(RECFM=U,BLKSIZE=&B)'        ZA05060
         AGO   .SCAT
.SA20    ANOP
  PUNCH  '// SPACE=(&A.,(&SGDSPSA(&I).,&SGDSSSA(&I).,&SGDSDBA(&I).)),'
  PUNCH  '// LABEL=EXPDT=99350,DCB=(RECFM=U,BLKSIZE=&B)'        ZA05060
.SCAT    ANOP
  PUNCH  '//SYSIN DD *'
  PUNCH ' DEFINE CAT (&SGVSNMC) -'                              OZ06711
  PUNCH '  NONVSAM ( NAME (&INDEX..SVCLIB)     -'
  PUNCH '            VOL (&SGDSVLC(9).)      DEVT (&SGDSUNC(9).))   '
  PUNCH '/*'
         AGO   .SVEND
.SERR MNOTE 5,'* * * IEIGEN505 INVALID UNIT FOR SVCLIB'
&SGQUITB SETB  1
.SVEND   ANOP
.**********************************************************************
.**      SVCLIB COPIES                                  ***************
.**********************************************************************
&SGCTRLA(1)    SETA &SGCTRLA(1)+1        INCR STEP COUNTER
 PUNCH '//SVC&SGCTRLA(1) EXEC PGM=IEBCOPY,REGION=512K,COND=(8,LT)'
 PUNCH '//SYSUT3 DD DSN=&&SYSUT3,SPACE=(1700,(10,5)),UNIT=SYSDA'
 PUNCH '//SYSUT4 DD DSN=&&SYSUT4,SPACE=(460,(30,24)),UNIT=SYSDA'
 PUNCH '//SYSPRINT DD SPACE=(3630,(500,100),RLSE),'
 PUNCH '//    DCB=(RECFM=FB,LRECL=121,BLKSIZE=121),SYSOUT=&SGCTRLC(41)'
 PUNCH '//AOSD0 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOSD0'
 PUNCH '//AOSU0 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOSU0'
 PUNCH '//AOS20 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOS20'
         AIF  (NOT &SGDMGTB(5)).NOTCAM3      TCAM NOT SPECIFIED?   @02A
 PUNCH '//AOS21 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOS21'
.NOTCAM3 ANOP                                                      @02A
 PUNCH '//SVCLIB DD VOL=(,RETAIN,SER=&SGDSVLC(9)),UNIT=&SGDSUNC(9),'
 PUNCH '//       DSN=&SGCTRLC(40)..SVCLIB,DISP=OLD'
 AIF       ('&SGPDSUC(9)' EQ '' OR &GETB(3)).SVC1   USER PDS    OZ03884
 PUNCH '//SVCLIBA DD DISP=SHR,DSN=&SGPDSUC(9)'                  ZA00124
.SVC1      ANOP
 PUNCH '//SYSIN DD *'
.*                        BTAM/TCAM TESTS REMOVED               OZ03884
        AIF  (NOT &SGDMGTB(5)).NTCAM3        TCAM NOT SPECIFIED?   @01A
.**** ALL-I/O *****
*** SGIED503 *** TCAM                                     *** SC121 ***
    SGIED503
.NTCAM3 ANOP                                                       @01A
        AIF  (NOT &SGDMGTB(4)).NBTAM3        BTAM NOT SPECIFIED?   @01A
.**** ALL-I/O *****                                            @ZA41488
*** SGIED513 *** BTAM                                     *** SC121 ***
    SGIED513
.NBTAM3 ANOP                                                       @01A
         AIF   (&GETB(3)).SVC4          IOGEN?                  OZ03884
.**** ALL ***
*** SGIEC5PU *** SAM/PAM                                  *** SC1D0 ***
    SGIEC5PU
.**** ALL ***                                                      @F1A
*** SGIEH502 ***                                          *** SC1U0 ***
    SGIEH502
.**** ALL ***
*** GENERATE *** SYSGEN                                  *** SC1S1 ***
 AIF   ('&SGMB01C(9)' EQ '' AND '&SGRES1C(9)' EQ '' AND '&SGSSIOC(1)'  *
               EQ '' AND '&SGSEOEC(1)' EQ '' AND '&SGSCHEC(1)' EQ ''   *
               AND '&SGSABEC(1)' EQ '' AND '&SGSPCIC(1)' EQ '').SVC4
 PUNCH '          COPY  OUTDD=SVCLIB,INDD=SVCLIBA'
 AIF   ('&SGMB01C(9)' EQ '').SVC3
 PUNCH '          SELECT MEMBER=&SGMB01C(9)'
 AIF   ('&SGMB02C(9)' EQ '').SVC3
 PUNCH '          SELECT MEMBER=&SGMB02C(9)'
 AIF   ('&SGMB03C(9)' EQ '').SVC3
 PUNCH '          SELECT MEMBER=&SGMB03C(9)'
 AIF   ('&SGMB04C(9)' EQ '').SVC3
 PUNCH '          SELECT MEMBER=&SGMB04C(9)'
 AIF   ('&SGMB05C(9)' EQ '').SVC3
 PUNCH '          SELECT MEMBER=&SGMB05C(9)'
 AIF   ('&SGMB06C(9)' EQ '').SVC3
 PUNCH '          SELECT MEMBER=&SGMB06C(9)'
 AIF   ('&SGMB07C(9)' EQ '').SVC3
 PUNCH '          SELECT MEMBER=&SGMB07C(9)'
 AIF   ('&SGMB08C(9)' EQ '').SVC3
 PUNCH '          SELECT MEMBER=&SGMB08C(9)'
 AIF   ('&SGMB09C(9)' EQ '').SVC3
 PUNCH '          SELECT MEMBER=&SGMB09C(9)'
 AIF   ('&SGMB10C(9)' EQ '').SVC3
 PUNCH '          SELECT MEMBER=&SGMB10C(9)'
 AIF   ('&SGMB11C(9)' EQ '').SVC3
 PUNCH '          SELECT MEMBER=&SGMB11C(9)'
 AIF   ('&SGMB12C(9)' EQ '').SVC3
 PUNCH '          SELECT MEMBER=&SGMB12C(9)'
 AIF   ('&SGMB13C(9)' EQ '').SVC3
 PUNCH '          SELECT MEMBER=&SGMB13C(9)'
 AIF   ('&SGMB14C(9)' EQ '').SVC3
 PUNCH '          SELECT MEMBER=&SGMB14C(9)'
 AIF   ('&SGMB15C(9)' EQ '').SVC3
 PUNCH '          SELECT MEMBER=&SGMB15C(9)'
 AIF   ('&SGMB16C(9)' EQ '').SVC3
 PUNCH '          SELECT MEMBER=&SGMB16C(9)'
 AIF   ('&SGMB17C(9)' EQ '').SVC3
 PUNCH '          SELECT MEMBER=&SGMB17C(9)'
 AIF   ('&SGMB18C(9)' EQ '').SVC3
 PUNCH '          SELECT MEMBER=&SGMB18C(9)'
 AIF   ('&SGMB19C(9)' EQ '').SVC3
 PUNCH '          SELECT MEMBER=&SGMB19C(9)'
 AIF   ('&SGMB20C(9)' EQ '').SVC3
 PUNCH '          SELECT MEMBER=&SGMB20C(9)'
.SVC3 AIF ('&SGRES1C(9)' EQ '').SVC2
 PUNCH '          SELECT MEMBER=&SGRES1C(9)'
      AIF ('&SGRES2C(9)' EQ '').SVC2
 PUNCH '          SELECT MEMBER=&SGRES2C(9)'
      AIF ('&SGRES3C(9)' EQ '').SVC2
 PUNCH '          SELECT MEMBER=&SGRES3C(9)'
      AIF ('&SGRES4C(9)' EQ '').SVC2
 PUNCH '          SELECT MEMBER=&SGRES4C(9)'
      AIF ('&SGRES5C(9)' EQ '').SVC2
 PUNCH '          SELECT MEMBER=&SGRES5C(9)'
      AIF ('&SGRES6C(9)' EQ '').SVC2
 PUNCH '          SELECT MEMBER=&SGRES6C(9)'
      AIF ('&SGRES7C(9)' EQ '').SVC2
 PUNCH '          SELECT MEMBER=&SGRES7C(9)'
      AIF ('&SGRES8C(9)' EQ '').SVC2
 PUNCH '          SELECT MEMBER=&SGRES8C(9)'
      AIF ('&SGRES9C(9)' EQ '').SVC2
 PUNCH '          SELECT MEMBER=&SGRES9C(9)'
      AIF ('&SGRESAC(9)' EQ '').SVC2
 PUNCH '          SELECT MEMBER=&SGRESAC(9)'
.SVC2      ANOP
&I       SETA  1
&CTR1    SETA  1
.SVC6    AIF   (K'&SGSSIOC(&CTR1) LE &I).SVC7
&N       SETC  '&SGSSIOC(&CTR1)'(&I,2)
  PUNCH '          SELECT MEMBER=IGG019&N'
&I       SETA  &I+2
         AIF   (&I LT 8).SVC6
&CTR1    SETA  &CTR1+1
&I       SETA  1
         AIF   (&CTR1 LE 21).SVC6
.SVC7    ANOP
&I       SETA  1
&CTR1    SETA  1
.SVC8    AIF   (K'&SGSEOEC(&CTR1) LE &I).SVC9
&N       SETC  '&SGSEOEC(&CTR1)'(&I,2)
  PUNCH '          SELECT MEMBER=IGG019&N'
&I       SETA  &I+2
         AIF   (&I LT 8).SVC8
&CTR1    SETA  &CTR1+1
&I       SETA  1
         AIF   (&CTR1 LE 21).SVC8
.SVC9    ANOP
&I       SETA  1
&CTR1    SETA  1
.SVC10   AIF   (K'&SGSCHEC(&CTR1) LE &I).SVC11
&N       SETC  '&SGSCHEC(&CTR1)'(&I,2)
  PUNCH '          SELECT MEMBER=IGG019&N'
&I       SETA  &I+2
         AIF   (&I LT 8).SVC10
&CTR1    SETA  &CTR1+1
&I       SETA  1
         AIF   (&CTR1 LE 21).SVC10
.SVC11   ANOP
&I       SETA  1
&CTR1    SETA  1
.SVC12   AIF   (K'&SGSABEC(&CTR1) LE &I).SVC13
&N       SETC  '&SGSABEC(&CTR1)'(&I,2)
  PUNCH '          SELECT MEMBER=IGG019&N'
&I       SETA  &I+2
         AIF   (&I LT 8).SVC12
&CTR1    SETA  &CTR1+1
&I       SETA  1
         AIF   (&CTR1 LE 21).SVC12
.SVC13   ANOP
&I       SETA  1
&CTR1    SETA  1
.SVC14   AIF   (K'&SGSPCIC(&CTR1) LE &I).SVC4
&N       SETC  '&SGSPCIC(&CTR1)'(&I,2)
  PUNCH '          SELECT MEMBER=IGG019&N'
&I       SETA  &I+2
         AIF   (&I LT 8).SVC14
&I       SETA  1
&CTR1    SETA  &CTR1+1
         AIF   (&CTR1 LE 21).SVC14
.SVC4   ANOP
*** GENERATE *** SYSGEN                                  *** SC1S1 ***
 PUNCH '/*'
.**********************************************************************
.*****   SVCLIB RENAME AND LISTPDS                 ********************
.**********************************************************************
         AIF   ('&INDEX' EQ 'SYS1').SV8
&SGCTRLA(1)    SETA &SGCTRLA(1)+1         INCREMENT STEP COUNTER
 PUNCH '//SVC&SGCTRLA(1) EXEC PGM=IDCAMS,REGION=512K,COND=(8,LT)'
 PUNCH '//STEPCAT DD DISP=SHR,DSN=&SGVSNMC'
 PUNCH '//SYSPRINT DD SYSOUT=&SGCTRLC(41)'
 PUNCH '//SYSIN  DD  *'
  PUNCH '  ALTER       -'
  PUNCH '   &INDEX..SVCLIB   NEWNAME (SYS1.SVCLIB) -'           OZ04623
 PUNCH ' CAT (&SGVSNMC)'                                        OZ06711
 PUNCH '/*'
.SV8     ANOP
&SGCTRLA(1)    SETA &SGCTRLA(1)+1         INCREMENT STEP COUNTER
 PUNCH '//SVC&SGCTRLA(1) EXEC PGM=IEHLIST,COND=(8,LT)'
 PUNCH '//SYSPRINT DD SYSOUT=&SGCTRLC(41)'
 PUNCH '//SVC DD VOL=(,RETAIN,SER=&SGDSVLC(9)),UNIT=&SGDSUNC(9),'
 PUNCH '//       DSN=&SGCTRLC(40)..SVCLIB,DISP=SHR'
 PUNCH '//SYSIN  DD  *'
 PUNCH '   LISTPDS DSNAME=SYS1.SVCLIB,VOL=&SGDSUNC(9)=&SGDSVLC(9)'
 PUNCH '/*'
.SV9     ANOP
.**********************************************************************
.*****   JOB4
.*****         OBJPDS03
.*****         ALLOCATE AND CATALOG NUCLEUS AND DCMLIB
.*****         ASSEMBLIES
.*****         NUCLEUS COPIES
.*****         NUCLEUS LINKEDITS
.*****         RENAME AND LIST(PDS)
.**********************************************************************
.*          CALL JOBCARD MACRO FOR ALLOCATION/CATALOG
.*            OF NUCLEUS AND DCMLIB
.*
&SGCTRLA(1) SETA  0                  GENERATE UNIQUE STEP NAMES
&SGCTRLA(3) SETA  &SGCTRLA(3)+1      INCREMENT JOB COUNTER
         JOBCARD
         AIF   (NOT &GETB(3)).NUCSPC          I/O GENERATION
.**********************************************************************
.***       RENAME NUCLEUS FOR IO GEN AND DCMLIB IF REQUIRED         ***
.**********************************************************************
         AIF   ('&INDEX' EQ 'SYS1').NUCEND     NO NEED TO RENAME
&SGCTRLA(1) SETA  1
 PUNCH '//NUC&SGCTRLA(1) EXEC PGM=IEHPROGM'
 PUNCH  '//SYSPRINT  DD    SYSOUT=&SGCTRLC(41)'
 PUNCH  '//NUCLEUS DD VOLUME=(,RETAIN,SER=&SGDSVLC(17).),UNIT=&SGDSUNC(X
               17),DISP=OLD'
         AIF (NOT &SGDSDFB(23)).NODCM2     DCMLIB NOT REQUIRED
 PUNCH  '//DCMLIB DD VOLUME=(,RETAIN,SER=&SGDSVLC(23).),UNIT=&SGDSUNC(2X
               3),DISP=OLD'
.NODCM2 ANOP
 PUNCH  '//SYSIN DD *'
 PUNCH '  RENAME DSNAME=SYS1.NUCLEUS,                                  X
                       X'
 PUNCH '               NEWNAME=&SGCTRLC(40)..NUCLEUS,VOL=&SGDSUNC(17)=&X
               SGDSVLC(17)'
         AIF (NOT &SGDSDFB(23)).NODCM3    DCMLIB NOT REQUIRED
 PUNCH '  RENAME DSNAME=SYS1.DCMLIB,                                   X
                       X'
 PUNCH '               NEWNAME=&SGCTRLC(40)..DCMLIB,VOL=&SGDSUNC(23)=&SX
               GDSVLC(23)'
.NODCM3  ANOP
 PUNCH '/*'
         AGO   .NUCEND
.**********************************************************************
.***          SPACE ALLOCATION FOR NUCLEUS AND DCMLIB               ***
.**********************************************************************
.NUCSPC  ANOP                           PRIMARY SPACE SET?
         AIF   (&SGDSPSA(17) EQ 0 AND &SGDSPSA(23) EQ 0).NUCEND
&SGCTRLA(1) SETA  1
 PUNCH '//NUC&SGCTRLA(1) EXEC PGM=IDCAMS,REGION=512K'
 PUNCH  '//SYSPRINT  DD    SYSOUT=&SGCTRLC(41)'
         AIF (&SGDSPSA(17) EQ 0).A1       NUCLEUS ALLOCATED AND DEFINED
&I       SETA  17
         AGO   .A
.A1      AIF (&SGDSPSA(23) EQ 0).N3       DCMLIB ALLOCATED AND DEFINED
&I       SETA   23
.A       ANOP
         AIF   (NOT &SGDSA1B(&I)).B1      BLOCKSIZE REQUESTED
         AIF   (NOT &SGDSA2B(&I)).T1      TRK SPECIFIED
&A       SETC  'CYL'
         AGO   .D1
.B1      ANOP
&A       SETC  '&SGDSBZA(&I)'
         AGO   .D1
.T1      ANOP
&A       SETC  'TRK'
.D1      AIF   ('&SGDSUNC(&I)' NE '2314').D2
&B       SETA  7294
         AGO   .D6
.D2 AIF ('&SGDSUNC(&I)' NE '3330' AND '&SGDSUNC(&I)' NE '3330-1').D3
&B       SETA  13030
         AGO   .D6
.D3      AIF   ('&SGDSUNC(&I)' NE '2305-1').D4
&B       SETA  14136
         AGO   .D6
.D4      AIF   ('&SGDSUNC(&I)' NE '2305-2').D5
&B       SETA  14660
         AGO   .D6
.D5      ANOP
         AIF   ('&SGDSUNC(&I)' NE '3340').D59                  @Z30RSTA
&B       SETA  8368
         AGO   .D6                                             @Z30RSTA
.D59     AIF   ('&SGDSUNC(&I)' NE '3350').DERR                 @Z30RSTA
&B       SETA  19069                                           @ZM40407
         AGO   .D6                                             @Z30RSTA
.D6      ANOP
         AIF   (&I EQ 23).DCMOP
  PUNCH  '//NUCLEUS DD DSN=&SGCTRLC(40)..NUCLEUS,DISP=(,KEEP),'
  PUNCH  '// VOLUME=(,RETAIN,SER=&SGDSVLC(17).),UNIT=&SGDSUNC(17).,'
         AIF   (&SGDSDBA(&I) EQ 0).N1     NO DIRECTORY BLOCKS
  PUNCH  '// LABEL=EXPDT=99350,DCB=(RECFM=U,BLKSIZE=&B.),'
  PUNCH  '// SPACE=(&A.,(&SGDSPSA(17).,,&SGDSDBA(17).),,CONTIG)'
         AGO   .A1
.N1       ANOP
   MNOTE 5,'* * * IEIGEN509 DIRECTORY BLOCKS REQUIRED FOR NUCLEUS ALLOC*
               ATION'
&SGQUITB SETB  1
         AGO   .A1
.DCMOP   ANOP
  PUNCH   '//DCMLIB  DD  DSN=&SGCTRLC(40)..DCMLIB,DISP=(,KEEP),'
  PUNCH   '// VOLUME=(,RETAIN,SER=&SGDSVLC(23).),UNIT=&SGDSUNC(23).,'
         AIF   (&SGDSDBA(&I) EQ 0).N2     NO DIRECTORY BLOCKS
  PUNCH   '// SPACE=(&A.,(&SGDSPSA(23).,,&SGDSDBA(23).),,CONTIG),'
  PUNCH   '// LABEL=EXPDT=99350,DCB=(RECFM=U,BLKSIZE=&B.)'
         AGO   .N3
.N2      ANOP
   MNOTE 5,'* * * IEIGEN508 DIRECTORY BLOCKS REQUIRED FOR DCMLIB ALLOCA*
               TION'
&SGQUITB SETB  1
.N3      ANOP
  PUNCH   '//SYSIN DD *'
         AIF   (&SGDSPSA(17) EQ 0).NONUC       NUCLEUS ALREADY DEFINED
  PUNCH ' DEFINE CAT (&SGVSNMC) -'                              OZ04623
  PUNCH '  NONVSAM ( NAME (&INDEX..NUCLEUS)    -'
  PUNCH '            VOL (&SGDSVLC(17).)     DEVT (&SGDSUNC(17).))  '
.NONUC   AIF   (&SGDSPSA(23) EQ 0).NODCM    DCMLIB ALREADY DEFINED
  PUNCH ' DEFINE CAT (&SGVSNMC) -'                              OZ04623
  PUNCH '  NONVSAM ( NAME (&INDEX..DCMLIB)      -'
  PUNCH '            VOL (&SGDSVLC(23).)     DEVT (&SGDSUNC(23).))  '
.NODCM  ANOP
  PUNCH '/*'
         AGO   .NUCEND
.DERR MNOTE 5,'* * * IEIGEN506 INVALID UNIT FOR NUCLEUS OR DCMLIB'
&SGQUITB SETB  1
.NUCEND  ANOP
.**********************************************************************
.*                        *** JOB *** NUCLEUS ASSEMBLIES ******       *
.**********************************************************************
&SGCTRLC(5)    SETC '&OBJPDS'(6,6).'03' SET OBJPDS GLOBAL
.*************  ALL-IO **********
*** SGIEA200 *** SUPERVISOR                               *** SC1S4 ***
    SGIEA200
.**** REMOVED CALL SGIEF217 ***SC1S5 ***                       @ZA43437
.*************  ALL-IO **********
*** SGIEC2DT *** ACCESS METHODS                           *** SC1D0 ***
    SGIEC2DT
.*************  ALL--IO*****
*** SGIFB201 *** ERP                                      *** SC1CD ***
    SGIFB201
     AIF   (NOT (&SGDCLSB(9))).NUC1       2250 NOT SPECIFIED
.*************  ALL--IO*****
*** SGIFF2BM *** GRAPHIC PROGRAM SERVICES                 *** SC1G0 ***
    SGIFF2BM
.NUC1  ANOP
.************** ALL-IO *****
*** SGIEC202 *** IOS                                      *** SC1C3 ***
    SGIEC202
&J  SETA 1
.BUPDATE AIF  (&J EQ 1918).FUPDATE      REBUILD DADRA BOX       Z40ASVN
&SGDADRA(&J) SETA &DADRA(&J)
&J  SETA &J+1                          INCREMENT COUNTER
    AGO  .BUPDATE                      REPEAT FOR 1917 VALUES   Z40ASVN
.FUPDATE ANOP
.************* ALL-IO *******
*** SGIEA2D2 ***  DIDOCS                                  *** SC1C4 ***
    SGIEA2D2
         AIF   (&GETB(3)).NCPY       IO GEN REQUIRES NO COPIES @ZA29684
*** GENERATE *** SYSGEN                                   *** SC1S1 ***
.**********************************************************************
.*****       NUCLEUS  COPIES
.**********************************************************************
&SGCTRLA(1)    SETA &SGCTRLA(1)+1         INCREMENT STEP COUNTER
 PUNCH '//NUC&SGCTRLA(1) EXEC PGM=IEBCOPY,REGION=512K,COND=(8,LT)'
 PUNCH '//SYSUT3 DD DSN=&&SYSUT3,SPACE=(1700,(10,5)),UNIT=SYSDA'
 PUNCH '//SYSUT4 DD DSN=&&SYSUT4,SPACE=(460,(30,24)),UNIT=SYSDA'
 PUNCH '//SYSPRINT DD SPACE=(3630,(500,40),RLSE),'
 PUNCH '//    DCB=(RECFM=FB,LRECL=121,BLKSIZE=121),SYSOUT=&SGCTRLC(41)'
 PUNCH '//NUCLEUS DD DSNAME=&SGCTRLC(40)..NUCLEUS,DISP=OLD,'
 PUNCH '//     UNIT=&SGCTRLC(29),VOL=(,RETAIN,SER=&SGCTRLC(30))'
 PUNCH '//AOSC5 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOSC5'
 AIF       ('&SGPDSUC(17)' EQ '' OR '&SGMB01C(17)' NE '').XXNUC
 PUNCH '//NUCLEUSA DD DISP=SHR,DSNAME=&SGPDSUC(17)'            ZA00124
.XXNUC     ANOP
 PUNCH '//SYSIN DD *'
.************* ALL  *****
*** SGIEA502  ***** SUPERVISOR                            *** SC1S4 ***
    SGIEA502
*** GENERATE *** SYSGEN                                   *** SC1S1 ***
 AIF ('&SGMB01C(17)' NE '' OR '&SGPDSUC(17)' EQ '').NUCPY
 PUNCH '          COPY  INDD=NUCLEUSA,OUTDD=NUCLEUS'
.NUCPY  ANOP
 PUNCH '/*'
.**********************************************************************
.***********  NUCLEUS LINK EDIT          ******************************
.**********************************************************************
.NCPY    ANOP
&SGCTRLA(1) SETA &SGCTRLA(1)+1     INCREMENT STEP COUNTER
 PUNCH '//NUC&SGCTRLA(1) EXEC LINKS,COND=(4,LT),REGION=650K,'  @ZA57918
 PUNCH '// PARM=''LIST,XREF,NCAL,SCTR,LET,SIZE=(600K,64K)'','  @ZA57918
 PUNCH '// UNIT=''&SGCTRLC(29)'',SER=&SGCTRLC(30),N=&SGCTRLC(40),NAME=N*
               UCLEUS,P1=''('','
 PUNCH '// MOD=IEANUC01,P2='')'',OBJ=&SGCTRLC(5),CLASS=&SGCTRLC(41)'
 PUNCH '//AOSA0 DD DISP=SHR,DSNAME=SYS1.AOSA0,VOLUME=(,RETAIN)'
 PUNCH '//AOSB0 DD DISP=SHR,DSNAME=SYS1.AOSB0,VOLUME=(,RETAIN)'
 PUNCH '//AOSB3 DD DISP=SHR,DSNAME=SYS1.AOSB3,VOLUME=(,RETAIN)'
 PUNCH '//AOSCD DD DISP=SHR,DSNAME=SYS1.AOSCD,VOLUME=(,RETAIN)'
 PUNCH '//AOSCE DD DISP=SHR,DSNAME=SYS1.AOSCE,VOLUME=(,RETAIN)'
 PUNCH '//AOSC2 DD DISP=SHR,DSNAME=SYS1.AOSC2,VOLUME=(,RETAIN)'
 PUNCH '//AOSC5 DD DISP=SHR,DSNAME=SYS1.AOSC5,VOLUME=(,RETAIN)'
 PUNCH '//AOSD0 DD DISP=SHR,DSNAME=SYS1.AOSD0,VOLUME=(,RETAIN)'
 PUNCH '//AOSD8 DD DISP=SHR,DSNAME=SYS1.AOSD8,VOLUME=(,RETAIN)'
 PUNCH '//AOSG0 DD DISP=SHR,DSNAME=SYS1.AOSG0,VOLUME=(,RETAIN)'
 PUNCH '//AOS00 DD DISP=SHR,DSNAME=SYS1.AOS00,VOLUME=(,RETAIN)'
 PUNCH '//AOS06 DD DISP=SHR,DSNAME=SYS1.AOS06,VOLUME=(,RETAIN)'
.*                                                                 @F1D
 PUNCH '//AOS12 DD DISP=SHR,DSNAME=SYS1.AOS12,VOLUME=(,RETAIN)'
 PUNCH '//AOS20 DD DISP=SHR,DSNAME=SYS1.AOS20,VOLUME=(,RETAIN)'
         AIF  (NOT &SGDMGTB(5)).NOTCAM4       TCAM NOT SPECIFIED?  @02A
 PUNCH '//AOS21 DD DISP=SHR,DSNAME=SYS1.AOS21,VOLUME=(,RETAIN)'
.NOTCAM4 ANOP                                                      @02A
 PUNCH '//AOS26 DD DISP=SHR,DSNAME=SYS1.AOS26,VOLUME=(,RETAIN)'
 AIF       (&GETB(3)).NUCL1      PDS NOT USED FOR IO GEN
 AIF       ('&SGPDSUC(17)' EQ '').NUCL1
 PUNCH '//NUCLEUSA DD DISP=SHR,DSNAME=&SGPDSUC(17)'             ZA00124
.NUCL1     ANOP
 PUNCH '//SYSLIN DD *'
 PUNCH '   INSERT  IEAVNIP0'
 PUNCH '   INSERT  IEAVFX00'
         AIF   (&GETB(3)).NN0               I/O GEN             ZA02236
.************* ALL **********                                  @G64HSPD
*** SGIEF300 *** SCHEDULER                                *** SC1S5 ***
    SGIEF300
.************* ALL **********
*** SGIDA300 *** VSAM BLOCK PROCESSOR                     *** SC1DA ***
    SGIDA300
      AIF (NOT &SGDMGTB(5)).NUCL2         TCAM NOT SPECIFIED
.************* ALL **********
*** SGIED300 *** TCAM                                     *** SC121 ***
    SGIED300
.NUCL2 ANOP
.************* ALL **********
*** SGILR300 *** ASM                                      *** SC1CW ***
    SGILR300
       AIF (NOT &SGDCLSB(28)).NN0         MSS?                  G24LSVN
       AIF (NOT &SGIHASU(24)).NN0         SU 24 PRESENT?        G32DSVN
.************* ALL **********                                   G24LSVN
*** SGICB300 *** MSS                                      *** SC1DR ***
    SGICB300
.NN0     ANOP                                                   ZA02236
      AIF (NOT &SGDMGTB(4)).NN1           BTAM NOT SPECIFIED    ZM30402
.************* ALL-IO *******                                   ZA02236
*** SGIEC3TP *** BTAM                                     *** SC120 ***
    SGIEC3TP
.NN1     ANOP                                                   ZM30402
.************* ALL-IO ******
*** SGIEA300 *** SUPERVISOR                               *** SC1S4 ***
    SGIEA300
.************* ALL-IO******
*** SGIEC300 *** IOS                                      *** SC1C3 ***
    SGIEC300
.************* ALL-IO******                                    @G64HSPD
*** SGIEC301 *** IOS                                      *** SC1C3 ***
    SGIEC301
.************** ALL-IO *****
*** SGIFB300 *** ERP                                      *** SC1CD ***
    SGIFB300
.************* ALL-IO******
*** SGIFF3RN *** GRAPHIC PROGRAM SERVICES                 *** SC1G0 ***
    SGIFF3RN
.************* ALL-IO ********
*** SGIEC3FB *** OPEN/CLOSE/EOV                           *** SC1D0 ***
    SGIEC3FB
.*                                                             @ZA05629
.************* ALL-IO ********                                 @ZA05629
*** SGIGF301 *** RECOVERY MANAGEMENT                      *** SC1CE ***
    SGIGF301                                                          *
          AIF  (&GETB(3)).NN2                                  @ZA05629
.************* ALL **********
*** SGIEW300 *** OVERLAY SUPERVISOR                       *** SC1C2 ***
    SGIEW300
         AIF   (NOT &SGDMGTB(6)).NN2            VTAM?
.************* ALL **********
*** SGIST310 *** VTAM                                     *** SC123 ***
    SGIST310
.NN2    ANOP
.************* ALL-IO *******
*** SGIEA4D2 *** DIDOCS                                   *** SC1C4 ***
    SGIEA4D2
*** GENERATE *** SYSGEN
       AIF   (&GETB(3)).IF0
&CTR1 SETA   1 INITIALIZE COUNTER
         AIF   ('&SGMB01C(17)' EQ '').IF0
  PUNCH '          INCLUDE NUCLEUSA(&SGMB01C(17))'
         AIF   ('&SGMB02C(17)' EQ '').IF0
  PUNCH '          INCLUDE NUCLEUSA(&SGMB02C(17))'
         AIF   ('&SGMB03C(17)' EQ '').IF0
  PUNCH '          INCLUDE NUCLEUSA(&SGMB03C(17))'
         AIF   ('&SGMB04C(17)' EQ '').IF0
  PUNCH '          INCLUDE NUCLEUSA(&SGMB04C(17))'
         AIF   ('&SGMB05C(17)' EQ '').IF0
  PUNCH '          INCLUDE NUCLEUSA(&SGMB05C(17))'
         AIF   ('&SGMB06C(17)' EQ '').IF0
  PUNCH '          INCLUDE NUCLEUSA(&SGMB06C(17))'
         AIF   ('&SGMB07C(17)' EQ '').IF0
  PUNCH '          INCLUDE NUCLEUSA(&SGMB07C(17))'
         AIF   ('&SGMB08C(17)' EQ '').IF0
  PUNCH '          INCLUDE NUCLEUSA(&SGMB08C(17))'
         AIF   ('&SGMB09C(17)' EQ '').IF0
  PUNCH '          INCLUDE NUCLEUSA(&SGMB09C(17))'
         AIF   ('&SGMB10C(17)' EQ '').IF0
  PUNCH '          INCLUDE NUCLEUSA(&SGMB10C(17))'
         AIF   ('&SGMB11C(17)' EQ '').IF0
  PUNCH '          INCLUDE NUCLEUSA(&SGMB11C(17))'
         AIF   ('&SGMB12C(17)' EQ '').IF0
  PUNCH '          INCLUDE NUCLEUSA(&SGMB12C(17))'
         AIF   ('&SGMB13C(17)' EQ '').IF0
  PUNCH '          INCLUDE NUCLEUSA(&SGMB13C(17))'
         AIF   ('&SGMB14C(17)' EQ '').IF0
  PUNCH '          INCLUDE NUCLEUSA(&SGMB14C(17))'
         AIF   ('&SGMB15C(17)' EQ '').IF0
  PUNCH '          INCLUDE NUCLEUSA(&SGMB15C(17))'
         AIF   ('&SGMB16C(17)' EQ '').IF0
  PUNCH '          INCLUDE NUCLEUSA(&SGMB16C(17))'
         AIF   ('&SGMB17C(17)' EQ '').IF0
  PUNCH '          INCLUDE NUCLEUSA(&SGMB17C(17))'
         AIF   ('&SGMB18C(17)' EQ '').IF0
  PUNCH '          INCLUDE NUCLEUSA(&SGMB18C(17))'
         AIF   ('&SGMB19C(17)' EQ '').IF0
  PUNCH '          INCLUDE NUCLEUSA(&SGMB19C(17))'
         AIF   ('&SGMB20C(17)' EQ '').IF0
  PUNCH '          INCLUDE NUCLEUSA(&SGMB20C(17))'
.IF0     AIF   (NOT &GETB(3)).IF1         NOT AN IO GEN
 PUNCH ' INCLUDE SYSLMOD(IEANUC01)'
 PUNCH ' NAME IEANUC0&NUC.(R)'
.IF1     ANOP
 PUNCH '/*'
.************* ALL-IO *******
*** SGIEA4D3 *** DIDOCS                                   *** SC1C4 ***
    SGIEA4D3
         AIF  (&GETB(3)).SKP402                                @G64HSPD
*** SGIEA402 *** SUPERVISOR                               *** SC1S4 ***
    SGIEA402
.SKP402  ANOP                                                  @G64HSPD
.**********************************************************************
.*******     RENAME DCMLIB AND NUCLEUS
.**********************************************************************
*** GENERATE *** SYSGEN                                   *** SC1S1 ***
         AIF ('&INDEX' EQ 'SYS1').S88     SKIP RENAME?
&SGCTRLA(1)    SETA &SGCTRLA(1)+1         INCREMENT STEP COUNTER
         AIF   (&GETB(3)).S87
 PUNCH '//NUC&SGCTRLA(1) EXEC PGM=IDCAMS,REGION=512K,COND=(8,LT)'
 PUNCH '//STEPCAT DD DISP=SHR,DSN=&SGVSNMC'
 PUNCH '//SYSPRINT DD SPACE=(121,(500,40),RLSE),'
 PUNCH '//    DCB=(RECFM=FB,LRECL=121,BLKSIZE=121),SYSOUT=&SGCTRLC(41)'
 PUNCH '//SYSIN DD *'
  PUNCH '  ALTER       -'
  PUNCH '   &INDEX..NUCLEUS   NEWNAME (SYS1.NUCLEUS) -'         OZ04623
 PUNCH ' CAT (&SGVSNMC)'                                        OZ06711
         AIF   (NOT(&SGSCHDB(25) OR &SGDSDFB(23))).S33 NO PFK OR DCMLIB
  PUNCH '  ALTER       -'
  PUNCH '   &INDEX..DCMLIB   NEWNAME (SYS1.DCMLIB)  -'          OZ04623
 PUNCH ' CAT (&SGVSNMC)'                                        OZ06711
.S33   ANOP
 PUNCH '/*'
       AGO   .S88
.S87   ANOP               FOR IO GEN - RENAME NUCLEUS AND DCMLIB
 PUNCH '//NUC&SGCTRLA(1) EXEC PGM=IEHPROGM,COND=(8,LT)'
 PUNCH '//SYSPRINT  DD    SYSOUT=&SGCTRLC(41)'
 PUNCH '//NUCLEUS DD VOLUME=(,RETAIN,SER=&SGDSVLC(17).),UNIT=&SGDSUNC(1X
               7),DISP=OLD'
         AIF (NOT &SGDSDFB(23)).NODCM4    DCMLIB NOT REQUIRED
 PUNCH  '//DCMLIB DD VOLUME=(,RETAIN,SER=&SGDSVLC(23).),UNIT=&SGDSUNC(2X
               3),DISP=OLD'
.NODCM4 ANOP
 PUNCH '//SYSIN DD *'
 PUNCH '  RENAME NEWNAME=SYS1.NUCLEUS,                                 X
                       X'
 PUNCH '               DSNAME=&SGCTRLC(40)..NUCLEUS,VOL=&SGDSUNC(17)=&SX
               GDSVLC(17)'
         AIF (NOT &SGDSDFB(23)).NODCM5    DCMLIB NOT REQUIRED
 PUNCH '  RENAME NEWNAME=SYS1.DCMLIB,                                  X
                       X'
 PUNCH '               DSNAME=&SGCTRLC(40)..DCMLIB,VOL=&SGDSUNC(23)=&SGX
               DSVLC(23)'
.NODCM5  ANOP
 PUNCH '/*'
.S88   ANOP
.**********************************************************************
.*       JOB5                                     *********************
.*             ALLOCATE & CATALOG IMAGELIB,PARMLIB MACLIB,PROCLIB, ****
.*                                SAMPLIB,UADS,HELP,TELCMLIB,CMDLIB,***
.*                                VTAMLIB,INDMAC,JES3LIB,TCOMMAC    ***
.*                                BRODCAST,MANX,MANY,DUMP00-09      ***
.*             COPIES                                  ****************
.*             LINKEDITS                               ****************
.*             INITIALIZE LOGREC                       ****************
.*             RENAME AND LISTVTOC                     ****************
.**********************************************************************
.*          CALL JOBCARD MACRO FOR MISCELLANEOUS JOB
&SGCTRLA(1) SETA  0
&SGCTRLA(3) SETA  &SGCTRLA(3)+1
         JOBCARD
         AIF   (NOT &GETB(3)).ALLOCDS  NOT AN I/O SYSTEM GENERATION
.**********************************************************************
.****   IO GENERATION ONLY - IMAGELIB RENAMED IF INDEX IS NOT SYS1  ***
.**********************************************************************
  AIF (NOT (&SGDSDFB(16) OR &SGDSDFB(2))).MSEND NO IMAGE/CMD   @ZA42177
         AIF   ('&INDEX' EQ 'SYS1').DELETLG  NO NEED TO RENAME
&SGCTRLA(1)    SETA 1                        SET STEP COUNTER
 PUNCH '//MISC&SGCTRLA(1) EXEC PGM=IEHPROGM'
 PUNCH '//SYSPRINT  DD    SYSOUT=&SGCTRLC(41)'
         AIF   (NOT &SGDSDFB(16)).NRALI   NO IMAGELIB CHANGES  @ZA42177
 PUNCH '//IMAGELIB DD VOLUME=(,RETAIN,SER=&SGCTRLC(62).),UNIT=&SGCTRLC(X
               61),DISP=OLD,'                                  @ZA42177
 PUNCH '//     DSNAME=SYS1.IMAGELIB'                           @ZA42177
.NRALI    ANOP                                                 @ZA42177
         AIF   (NOT &SGDSDFB(2)).NRALC    NO CMDLIB CHANGES    @ZA42177
 PUNCH '//CMDLIB   DD VOLUME=(,RETAIN,SER=&SGCTRLC(23).),UNIT=&SGCTRLC(X
               24),DISP=OLD,'                                  @ZA42177
 PUNCH '//     DSNAME=SYS1.CMDLIB'                             @ZA42177
.NRALC    ANOP                                                 @ZA42177
 PUNCH '//SYSIN DD *'
         AIF   (NOT &SGDSDFB(16)).NRENI   NO IMAGELIB CHANGES  @ZA42177
 PUNCH '  RENAME DSNAME=SYS1.IMAGELIB,                                 X
                       X'
 PUNCH '               NEWNAME=&SGCTRLC(40)..IMAGELIB,VOL=&SGCTRLC(61)=X
               &SGCTRLC(62)'
.NRENI    ANOP                                                 @ZA42177
.*                                                                 @F1A
         AIF   (NOT &SGDSDFB(2)).NRENC    NO CMDLIB CHANGES    @ZA42177
 PUNCH '  RENAME DSNAME=SYS1.CMDLIB,                                   X
                       X'
 PUNCH '               NEWNAME=&SGCTRLC(40)..CMDLIB,VOL=&SGCTRLC(24)=&SX
               GCTRLC(23)'
.NRENC    ANOP                                                 @ZA42177
 PUNCH '/*'
         AGO   .DELETLG
.**********************************************************************
.*****                  ALLOCATE SPECIFIED DATASETS
.**********************************************************************
.ALLOCDS ANOP
&I       SETA  0
.MA1     AIF   (&I EQ 37).MCAT          FINISHED SEARCH
&I       SETA  &I+1
         AIF   ('&C(&I)' EQ '').MA1
         AIF   (&SGDSPSA(&I) EQ 0).MA1  DATASET NOT DEFINED
         AIF   (&F).MBY                 STEP JCL ALREADY CREATED
&F       SETB  1                        FIRST TIME THROUGH
.*                                        STEP JCL
&SGCTRLA(1) SETA  1                       SET STEP COUNTER TO ONE
 PUNCH '//MISC&SGCTRLA(1) EXEC PGM=IDCAMS,REGION=512K'
 PUNCH  '//SYSPRINT  DD    SYSOUT=&SGCTRLC(41)'
.MBY     ANOP
         AIF   (NOT &SGDSA2B(&I)).MT1     TRK SPECIFIED
         AIF   (NOT &SGDSA1B(&I)).MB1     BLOCKS SPECIFIED
&A       SETC  'CYL'                      PRIMARY SPACE IN CYLINDERS
         AGO   .MD1
.MB1     ANOP
&A       SETC  '&SGDSBZA(&I)'             PRIMARY SPACE IN BLOCKS
         AGO   .MD1
.MT1     ANOP
&A       SETC  'TRK'                      PRIMARY SPACE IN TRACKS
.**********   SET BLOCKSIZE FOR PARTITIONED DATA SETS
.*              BLKSIZE FOR CMDLIB, JES3LIB, TELCMLIB, VTAMLIB
.MD1     AIF   (NOT (&I EQ 2 OR &I EQ 4 OR &I EQ 10 OR &I EQ 13)).MP1  *
                                                                Y30BS04
         AIF   ('&SGDSUNC(&I)' NE '2314').MD2
&B       SETA  7294
         AGO   .MP6
.MD2 AIF ('&SGDSUNC(&I)' NE '3330' AND '&SGDSUNC(&I)' NE '3330-1').MD3
&B       SETA  13030
         AGO   .MP6
.MD3     AIF   ('&SGDSUNC(&I)' NE '2305-1').MD4
&B       SETA  14136
         AGO   .MP6
.MD4     AIF   ('&SGDSUNC(&I)' NE '2305-2').MD5
&B       SETA  14660
         AGO   .MP6
.MD5     AIF   ('&SGDSUNC(&I)' NE '3340').MD59                 @Z30RSTA
&B       SETA  8368
         AGO   .MP6
.MD59    AIF   ('&SGDSUNC(&I)' NE '3350').MERR                 @Z30RSTA
&B       SETA  19069                                           @ZM40407
         AGO   .MP6                                            @Z30RSTA
.*              BLOCKSIZE FOR INDMAC, HELP, MACLIB, PROCLIB OR TCOMMAC
.MP1     AIF   (NOT (&I EQ 1 OR &I EQ 3 OR &I EQ 7 OR &I EQ 8          X
               OR &I EQ 25)).MP6                               @ZA41353
         AIF   ('&SGDSUNC(&I)' NE '2314').MP2
&B       SETA  7280
         AGO   .MP6
.MP2 AIF ('&SGDSUNC(&I)' NE '3330' AND '&SGDSUNC(&I)' NE '3330-1').MP3
&B       SETA  12960
         AGO   .MP6
.MP3     AIF   ('&SGDSUNC(&I)' NE '2305-1').MP4
&B       SETA  14080
         AGO   .MP6
.MP4     AIF   ('&SGDSUNC(&I)' NE '2305-2').MP5
&B       SETA  14640
         AGO   .MP6
.MP5     AIF   ('&SGDSUNC(&I)' NE '3340').MP59                 @Z30RSTA
&B       SETA  8320
         AGO   .MP6                                            @Z30RSTA
.MP59    AIF   ('&SGDSUNC(&I)' NE '3350').MERR                 @Z30RSTA
&B       SETA  19040                                           @ZM40407
         AGO   .MP6                                            @Z30RSTA
.MP6     ANOP
  PUNCH  '//&C(&I) DD DSN=&SGCTRLC(40)..&C(&I),DISP=(,KEEP),'
  PUNCH  '// VOLUME=(,RETAIN,SER=&SGDSVLC(&I).),UNIT=&SGDSUNC(&I).,'
         AIF   (&I GT 18 AND &I NE 25).MA5 NO SEC OR DIR BLK   @ZA41353
         AIF   (&I GT 15 AND &I NE 25).MA50 NO SECONDARY SPACE @ZA41353
         AIF   (&I EQ 11).MA57          UADS
         AIF   (&SGDSSSA(&I) NE 0 AND &SGDSDBA(&I) NE 0).MA20
         AIF   (&SGDSSSA(&I) NE 0).MA35    SECONDARY ONLY
.MAC     AIF   (&SGDSDBA(&I) NE 0).MA50    DIRECTORY BLOCK ONLY
.MA5     AIF   (&I NE 19 ).MA8          BRODCAST
  PUNCH  '// SPACE=(&A.,(&SGDSPSA(&I).),,CONTIG)'
         AGO   .MA1
.MA8     ANOP                           MANX, MANY, DUMP
  PUNCH  '// LABEL=EXPDT=99350,SPACE=(&A.,(&SGDSPSA(&I).),,CONTIG)'
         AGO   .MA1
.MA20    ANOP              PDS WITH SECONDARY ALLOCATION
 PUNCH  '// LABEL=EXPDT=99350,'
.*             INDMAC, HELP, MACLIB, PROCLIB OR TCOMMAC        @ZA41353
   AIF (NOT (&I EQ 1 OR &I EQ 3 OR &I EQ 7 OR &I EQ 8                  X
               OR &I EQ 25)).MA23                              @ZA41353
 PUNCH  '// DCB=(RECFM=FB,BLKSIZE=&B,LRECL=80),'
.MA205   ANOP
         AIF  (&SGDSSSA(&I) NE 0).MA206      SECONDARY SPEC.
  PUNCH  '// SPACE=(&A.,(&SGDSPSA(&I).,,&SGDSDBA(&I).))'
         AGO   .MA1
.MA206   ANOP
  PUNCH  '// SPACE=(&A.,(&SGDSPSA(&I).,&SGDSSSA(&I).,&SGDSDBA(&I).))'
         AGO   .MA1
.*             CMDLIB, JES3LIB, TELCMLIB, VTAMLIB               Y30BS04
.MA23    AIF   (NOT (&I EQ 2 OR &I EQ 4 OR &I EQ 10 OR &I EQ 13)).MA24 *
                                                                Y30BS04
  PUNCH  '// DCB=(RECFM=U,BLKSIZE=&B.),SPACE=(&A.,(&SGDSPSA(&I).,&SGDSSX
               SA(&I).,&SGDSDBA(&I).))'
         AGO   .MA1
.MA24    AIF   (&I NE 5).MA25                       SAMPLIB
  PUNCH  '// DCB=(RECFM=F,LRECL=80,BLKSIZE=80),SPACE=(&A.,(&SGDSPSA(&I)X
               .,&SGDSSSA(&I).,&SGDSDBA(&I).))'
         AGO   .MA1
.MA25    ANOP
  PUNCH  '// DCB=(RECFM=U,BLKSIZE=&B.),SPACE=(&A.,(&SGDSPSA(&I).,&SGDSSX
               SA(&I).,&SGDSDBA(&I).))'
         AGO   .MA1
.MA35    AIF (&I GT 19 AND &I NE 25).MA40 SECND SPACE ALLOCD   @ZA41353
   MNOTE 5,'* * * IEIGEN512 PDS &C(&I) REQUIRES DIRECTORY BLOCKS'
&SGQUITB SETB  1
      AGO   .MA1
.MA40    ANOP
   MNOTE 5,'* * * IEIGEN513  &C(&I) CANNOT HAVE SECONDARY SPACE'
&SGQUITB SETB  1
         AGO   .MA1
.MA50    AIF   (&I EQ 18).MA55     DIRECTORY BLOCKS, NO SEC ALLOC
  PUNCH  '// LABEL=EXPDT=99350,SPACE=(&A.,(&SGDSPSA(&I).,,&SGDSDBA(&I).X
               )),'
.*             INDMAC, HELP, MACLIB, PROCLIB OR TCOMMAC        @ZA41353
   AIF (NOT (&I EQ 1 OR &I EQ 3 OR &I EQ 7 OR &I EQ 8                  X
               OR &I EQ 25)).MA53                              @ZA41353
 PUNCH  '// DCB=(RECFM=FB,LRECL=80,BLKSIZE=&B)'
         AGO   .MA1
.*             CMDLIB, JES3LIB, TELCMLIB, VTAMLIB               Y30BS04
.MA53    AIF   (NOT (&I EQ 2 OR &I EQ 4 OR &I EQ 10 OR &I EQ 13)).MA531*
                                                                Y30BS04
 PUNCH  '// DCB=(RECFM=U,BLKSIZE=&B.)'
         AGO   .MA1
.MA531   AIF   (&I NE 5).MA54                    SAMPLIB
 PUNCH  '// DCB=(RECFM=F,LRECL=80,BLKSIZE=80)'
         AGO   .MA1
.MA54    AIF   (&I NE 16).MA56                   IMAGELIB
  PUNCH  '// DCB=(RECFM=U,BLKSIZE=1024)'
         AGO   .MA1
.MA55    ANOP                                    PARMLIB
  PUNCH  '// LABEL=EXPDT=99350,DCB=(RECFM=F,BLKSIZE=80),'
  PUNCH  '// SPACE=(&A.,(&SGDSPSA(&I).,,&SGDSDBA(&I).),,CONTIG)'
         AGO   .MA1
.MA56    ANOP
  PUNCH  '// DCB=(RECFM=U,BLKSIZE=&B.)'
         AGO   .MA1
.MA57    ANOP                                     UADS
  PUNCH  '// DCB=(RECFM=FB,DSORG=PO,BLKSIZE=800,LRECL=80),'
         AGO   .MA205
.MCAT    AIF   (NOT &F).MC6       NO DATASETS DEFINED OR ALLOCATED
  PUNCH  '//SYSIN DD *'
&I       SETA  0
.MC1     AIF   (&I EQ 37).MC5
&I       SETA  &I+1
         AIF   ('&C(&I)' EQ '').MC1 IF NOT SPECIFIED,DONT DO IT
         AIF   (&SGDSPSA(&I) EQ 0).MC1  NOT DEFINED OR PREALLOCATED
  PUNCH ' DEFINE CAT (&SGVSNMC) -'                              OZ04623
  PUNCH '  NONVSAM ( NAME (&INDEX..&C(&I).)    -'
  PUNCH '            VOL (&SGDSVLC(&I).)     DEVT (&SGDSUNC(&I).))  '
         AGO   .MC1
.MC5     ANOP
  PUNCH  '/*'
.MC6     ANOP
.*****              DEFAULT UNIT AND VOLUME FOR NEEDED DATA SETS
&I       SETA  1   DEFAULT SYSTEM DATASETS AND OPTIONAL ONES CODED ON
.*                  A DATASET MACRO WITHOUT UNIT AND VOLUME AND SPACE
.MN4     AIF   ((&I NE 5 AND &I NE 7 AND &I NE 8 AND &I NE 18)         *
               AND (NOT(&SGDSDFB(&I)))).MN6                        @F1C
         AIF   ('&SGDSVLC(&I)' NE '').MN5
&SGDSVLC(&I) SETC   '&SGCTRLC(30)'
&SGDSDFB(&I) SETB  1    INDICATE DEFINED
     MNOTE *,'  &C(&I)  ASSUMED TO BE PREALLOCATED ON &SGCTRLC(30) '
.MN5     AIF   ('&SGDSUNC(&I)' NE '').MN6
&SGDSUNC(&I) SETC  '&SGCTRLC(29)'   DEFAULT UNIT
.MN6     ANOP
&I       SETA  &I+1
         AIF   (&I LE 23).MN4                                      @F1C
         AIF   (NOT &SGTSOB).MN75                              @ZA33542
         AIF   (&SGDSDFB(2)).MN75                              @ZA33542
&SGDSDFB(2) SETB 1                      INDICATE DEFINED
 MNOTE 5,'* * * IEIGEN105 &C(2) MUST BE SPECIFIED IF TSO CMDS=YES'
.*                                                             @ZA33542
&SGQUITB SETB  1                                               @ZA33542
.MN75    AIF   (NOT (&SGDMGTB(4) OR &SGDMGTB(5))).MN9   BTAM OR TCAM?
         AIF   (&SGDSDFB(10)).MN9                              @ZA33542
&SGDSDFB(10)   SETB 1
 MNOTE 5,'* * * IEIGEN105 &C(10) MUST BE SPECIFIED FOR BTAM/TCAM'
.*                                                             @ZA33542
&SGQUITB SETB  1                                               @ZA33542
.MN9     AIF   (&SGDSDFB(16)).MN105                            @ZA33542
&SGDSDFB(16)   SETB 1
 MNOTE 5,'* * * IEIGEN105 &C(16) MUST BE SPECIFIED '           @ZA33542
&SGQUITB SETB  1                                               @ZA33542
.MN105   AIF   (NOT(&SGSCHDB(25))).MSEND                       @ZA33542
         AIF   (&SGDSDFB(23)).MSEND                            @ZA33542
&SGDSDFB(23) SETB 1                     INDICATE DEFINED
 MNOTE 5,'* * * IEIGEN105 DCMLIB MUST BE SPECIFIED IF PFK USED IN CONSOX
               LE'                                             @ZA33542
&SGQUITB SETB  1                                               @ZA33542
         AGO   .MSEND
.MERR MNOTE 5,'* * * IEIGEN507 INVALID UNIT FOR &SGDSPSA(&I)'
&SGQUITB SETB  1
.MSEND   ANOP
.**********************************************************************
.*            ***STEP ***  SCRATCH AND REALLOCATE LOGREC  ******      *
.**********************************************************************
.DELETLG       AIF (NOT &GETB(3)).K0      OTHER THAN IO SYSGEN?
&SGCTRLA(1)    SETA &SGCTRLA(1)+1         INCREMENT STEP COUNTER
 PUNCH '//MISC&SGCTRLA(1) EXEC PGM=IEHPROGM,COND=(8,LT)'
 PUNCH '//SYSPRINT DD SYSOUT=&SGCTRLC(41)'
 PUNCH '//LOGREC DD DISP=OLD,UNIT=&SGCTRLC(29),VOLUME=(,RETAIN,SER=&SGCX
               TRLC(30))'
 PUNCH '//SYSIN DD *'
 PUNCH '  SCRATCH DSNAME=SYS1.LOGREC,PURGE,VOL=&SGCTRLC(29)=&SGCTRLC(30X
               )'
 PUNCH '/*'
.K0      ANOP
.************** ALL/IO *****
*** SGIFB600 *** ERP                                      *** SC1CD ***
    SGIFB600  &SGCTRLC(29)
*** GENERATE *** SYSGEN                                   *** SC1S1 ***
.**********************************************************************
.*               *** STEP ***   MISCELLANEOUS ASSEMBLY   ******       *
.**********************************************************************
&SGCTRLC(5)    SETC '&OBJPDS'(6,6).'03' SET OBJPDS GLOBAL
.*                                                                 @F1D
         AIF   (NOT (&SGMENTB(61) AND &SGTSOB)).K1  NOT TSO WITH EDIT
.******* ALL-IO ******                                             @F1C
*** SGIKJ2EB *** TSO EDIT   (ASSEMBLY FOR CMDLIB)         *** SC1T0 ***
    SGIKJ2EB
*** GENERATE *** SYSGEN                                   *** SC1S1 ***
.K1      ANOP
.**********************************************************************
.**      MISC LIB COPIES                                ***************
.**********************************************************************
&SGCTRLA(1)    SETA &SGCTRLA(1)+1
.****  FOR AN IO GEN WITH NO 3211 OR 2245 PRINTER, BYPASS COPY STEP ***
.***** AND FOR 3800 NOT SPECIFIED                              @X40MSTG
      AIF   (&GETB(3) AND NOT &SGDCLSB(71) AND NOT &SGDCLSB(74) AND NOT*
                &SGDCLSB(81)).TSOI                             @ZA42177
 PUNCH '//MISC&SGCTRLA(1) EXEC PGM=IEBCOPY,REGION=512K,COND=(4,LT)'
 PUNCH '//SYSUT3 DD DSN=&&SYSUT3,SPACE=(1700,(10,5)),UNIT=SYSDA'
 PUNCH '//SYSUT4 DD DSN=&&SYSUT4,SPACE=(460,(30,24)),UNIT=SYSDA'
 PUNCH '//SYSPRINT DD SPACE=(3630,(500,40),RLSE),'
 PUNCH '//   DCB=(RECFM=FB,LRECL=121,BLKSIZE=121),SYSOUT=&SGCTRLC(41)'
         AIF   (&GETB(3)).JIO
 PUNCH '//AMACLIB DD DSNAME=SYS1.AMACLIB,DISP=SHR'             @ZA15662
.**      NEXT LINE UPDATED BY OZ15662                   *******@ZA15662
 PUNCH '//MACLIB DD DSN=&INDEX..MACLIB,VOL=(,RETAIN,SER=&SGCTRLC(16)),'
 PUNCH '//             DISP=OLD,UNIT=&SGCTRLC(15)'
 PUNCH '//AOSB3 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOSB3'
 PUNCH '//AOS20 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOS20'
         AIF  (NOT &SGDMGTB(5)).NOTCAM5      TCAM NOT SPECIFIED?   @02A
 PUNCH '//AOS21 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOS21'
.NOTCAM5 ANOP                                                      @02A
 PUNCH '//AOS26 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOS26'
 PUNCH '//AOST4 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOST4'
.JIO   ANOP
 PUNCH '//AOSD0 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOSD0'
       AIF   (NOT &SGDSDFB(16)).NOIMAG    NO IMAGELIB
 PUNCH '//IMAGELIB DD DSNAME=&SGCTRLC(40)..IMAGELIB,DISP=OLD,'
 PUNCH '//     UNIT=&SGCTRLC(61),VOL=(,RETAIN,SER=&SGCTRLC(62))'
        AIF   ('&SGPDSUC(16)' EQ '' OR &GETB(3) EQ 1).NOIMAG   NO PDS
 PUNCH '//IMAGELBA DD DISP=SHR,DSNAME=&SGPDSUC(16)'            XA00124
.NOIMAG AIF    (&GETB(3)).NOVTAM           IO GEN       VS32758,Z40RSVN
        AIF ('&SGPDSUC(7)' EQ '').NOMAC       NO PDS FOR MACLIB
 PUNCH '//MACLIBA  DD DISP=SHR,DSNAME=&SGPDSUC(7)'             XA00124
.NOMAC   AIF    (NOT &SGDSDFB(10)).NOTCM      NO TELCMLIB
 PUNCH '//TELCMLIB DD DSN=&INDEX..TELCMLIB,DISP=OLD,'
 PUNCH '//         UNIT=&SGCTRLC(33),VOL=(,RETAIN,SER=&SGCTRLC(34))'
    AIF       ('&SGPDSUC(10)' EQ '').NOTCM    NO PDS FOR TELCMLIB
 PUNCH '//TELCMLBA DD DISP=SHR,DSNAME=&SGPDSUC(10)'             ZA00124
.NOTCM  ANOP
 PUNCH '//CMDLIB   DD VOL=(,RETAIN,SER=&SGCTRLC(23)),DISP=OLD,'
 PUNCH '//         UNIT=&SGCTRLC(24),DSN=&SGCTRLC(40)..CMDLIB'
 PUNCH '//ACMDLIB  DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.ACMDLIB'
 AIF       ('&SGPDSUC(2)' EQ '').NOCMD        NO PDS FOR CMDLIB
 PUNCH '//CMDLIBA  DD DISP=SHR,DSNAME=&SGPDSUC(2)'              ZA00124
.NOCMD  AIF (NOT &SGDSDFB(3)).J00        NO HELP DATASET?
.**      NEXT LINE UPDATED BY OZ15662                   *******@ZA15662
 PUNCH '//AHELP    DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AHELP'
 PUNCH '//HELP     DD DSN=&INDEX..HELP,VOL=(,RETAIN,SER=&SGCTRLC(52)),'
 PUNCH '//         UNIT=&SGCTRLC(51),DISP=OLD'
.J00 AIF ('&SGPDSUC(4)' EQ '' AND NOT &SGMENTB(46)).NOJ3C NO J3 Y30BS04
 PUNCH '//AOSBA DD DISP=SHR,VOL=(,RETAIN),DSN=SYS1.AOSBA'       Y30BS04
 PUNCH '//JES3LIB DD DSN=&INDEX..JES3LIB,DISP=OLD,'             Y30BS04
 PUNCH '// UNIT=&SGDSUNC(4),VOL=(,RETAIN,SER=&SGDSVLC(4))'      Y30BS04
         AIF   ('&SGPDSUC(4)' EQ '').NOJ3C   NO PDS             Y30BS04
 PUNCH '//JES3LIBA DD DISP=SHR,DSN=&SGPDSUC(4)'                 Y30BS04
.NOJ3C   ANOP                                                   Y30BS04
.**      NEXT LINE UPDATED BY OZ15662                   *******@ZA15662
 PUNCH '//AUADS    DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AUADS'
 PUNCH '//UADS     DD DSN=&INDEX..UADS,VOL=(,RETAIN,SER=&SGCTRLC(50)),'
 PUNCH '//         UNIT=&SGCTRLC(49),DISP=OLD'
 PUNCH '//ASAMPLIB DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.ASAMPLIB'
 PUNCH '//SAMPLIB  DD DSN=&INDEX..SAMPLIB,UNIT=&SGCTRLC(17),'
 PUNCH '//         VOL=(,RETAIN,SER=&SGCTRLC(18)),DISP=OLD'
        AIF   ('&SGPDSUC(5)' EQ '').NOSAMP      NO PDS FOR SAMPLIB
 PUNCH '//SAMPLIBA DD DISP=SHR,DSNAME=&SGPDSUC(5)'              XA00124
.NOSAMP  ANOP
 PUNCH '//APARMLIB DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.APARMLIB'
 PUNCH '//PARMLIB  DD DSNAME=&SGCTRLC(40)..PARMLIB,DISP=OLD,'
 PUNCH '//         UNIT=&SGCTRLC(44),VOL=(,RETAIN,SER=&SGCTRLC(45))'
        AIF ('&SGPDSUC(18)' EQ '').NOPARM       NO PDS FOR PARMLIB
 PUNCH '//PARMLIBA DD DISP=SHR,DSNAME=&SGPDSUC(18)'             ZA00124
.NOPARM ANOP
 PUNCH '//APROCLIB DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.APROCLIB'
 PUNCH '//PROCLIB  DD DSNAME=&SGCTRLC(40)..PROCLIB,DISP=OLD,'
 PUNCH '//         UNIT=&SGCTRLC(25),VOL=(,RETAIN,SER=&SGCTRLC(26))'
        AIF   ('&SGPDSUC(8)' EQ '').NOPROC      NO PDS FOR PROCLIB
 PUNCH '//PROCLIBA DD DISP=SHR,DSNAME=&SGPDSUC(8)'              ZA00124
.NOPROC AIF (NOT &SGDMGTB(5) AND NOT &SGTSOB).J0 TCAM? CMDS?    Z40DSVN
 PUNCH '//ATCAMMAC  DD DSNAME=SYS1.ATCAMMAC,DISP=SHR'          @ZA15662
.J0     AIF (NOT &SGTSOB).J1              TSO NOT INCLUDED
 PUNCH '//ATSOMAC DD DISP=SHR,DSNAME=SYS1.ATSOMAC'             @ZA15662
.J1      AIF    ((NOT &SGDMGTB(6)) AND ('&SGPDSUC(13)' EQ '')).NOVTAM  $
                           NO VTAMLIB NOR PDS           VS32758 ZM32650
 PUNCH '//VTAMLIB  DD DSN=&INDEX..VTAMLIB,DISP=OLD,'
 PUNCH '//    UNIT=&SGCTRLC(27),VOL=(,RETAIN,SER=&SGCTRLC(28))' VS30867
         AIF   ('&SGPDSUC(13)' EQ '').NOVTAM    PDS FOR VTAM?   ZM32650
 PUNCH '//VTAMLIBA DD DISP=SHR,DSN=&SGPDSUC(13)'                ZM32650
.NOVTAM  ANOP
 PUNCH '//SYSIN DD *'
         AIF (&GETB(3)).JC            IO GEN
.**************
.******      COPY MACRO LIBRARIES AND PARMLIB ENTRIES
.**************
 PUNCH ' COPY OUTDD=PARMLIB,INDD=APARMLIB'
.***          CREATE IEAPAK00 AND IEABLD00 DEPENDING ON WETHER      ***
.***           TSO AND VTAM ARE EACH PRESENT.                       ***
 PUNCH ' COPY OUTDD=PARMLIB,INDD=APARMLIB'
        AIF  (&SGTSOB).JTS         TSO INCLUDED IN SYSTEM
        AIF  (&SGDMGTB(6)).JTSVTAM  VTAM INCLUDED IN SYSTEM     VS32758
 PUNCH '    SELECT MEMBER=((IEAPAKBA,IEAPAK00))'
 PUNCH '    SELECT MEMBER=((IEABLDBA,IEABLD00))'
         AGO   .JBA
.JTS    AIF (&SGDMGTB(6)).TSOVTAM  VTAM INCLUDED IN SYSTEM     VS32758
 PUNCH '    SELECT MEMBER=((IEAPAKTS,IEAPAK00))'
 PUNCH '    SELECT MEMBER=((IEABLDTS,IEABLD00))'
         AGO   .JBA                                             VS32758
.JTSVTAM ANOP                                                   VS32758
 PUNCH '    SELECT MEMBER=((IEAPAKBV,IEAPAK00))'                VS32758
 PUNCH '    SELECT MEMBER=((IEABLDBA,IEABLD00))'        VS32758,VS33034
         AGO   .JBA                                             VS32758
.TSOVTAM ANOP                                                   VS32758
 PUNCH '    SELECT MEMBER=((IEAPAKTV,IEAPAK00))'                VS32758
 PUNCH '    SELECT MEMBER=((IEABLDTS,IEABLD00))'        VS32758,VS33034
.JBA   ANOP
 PUNCH ' COPY OUTDD=PROCLIB,INDD=APROCLIB'
 PUNCH ' COPY  OUTDD=SAMPLIB,INDD=ASAMPLIB'
         AIF (NOT &SGDSDFB(3)).JA         NO HELP DATASET?
 PUNCH ' COPY OUTDD=HELP,INDD=AHELP'                           @ZA15662
.JA      AIF (NOT &SGDSDFB(11)).JB        NO UADS DATASET?
 PUNCH ' COPY OUTDD=UADS,INDD=AUADS'                           @ZA15662
.JB      AIF (NOT &SGDMGTB(5) AND NOT &SGTSOB).J8  TCAM; CMDS=Y Z40DSVN
 PUNCH ' COPY OUTDD=MACLIB,INDD=ATCAMMAC'                      @ZA15662
.J8     AIF   (NOT &SGTSOB).J9         TSO NOT INCLUDED
 PUNCH ' COPY OUTDD=MACLIB,INDD=ATSOMAC'                       @ZA15662
.******* ALL ********
*** SGIKJ5EF *** TSO SCHEDULER                            *** SC1S5 ***
    SGIKJ5EF
.******* ALL ********
*** SGIKJ5EH *** TSO TYPE 1 UTILITIES                     *** SC1T2 ***
    SGIKJ5EH
.******* ALL ********
*** SGAKJ5IE *** TSO LINK EDIT F PROMPTER                 *** SC1T5 ***
    SGAKJ5IE
.******* ALL ********
*** SGIKJ5EB *** TSO EDIT                                 *** SC1T0 ***
    SGIKJ5EB
.******* ALL ********
*** SGIKJ5EG *** TSO EDIT                                 *** SC1T1 ***
    SGIKJ5EG
.J9      AIF   (NOT &SGMENTB(46)).NOJ3D NO JES3                 Y30BS04
.******* ALL *******
*** SGIAT5JL ***  JES3 COPY TO JES3LIB                    *** SC1BA ***
    SGIAT5JL
.NOJ3D   ANOP                                                   Y30BS04
        AIF  (NOT &SGDMGTB(5)).NTCAM2        TCAM NOT SPECIFIED?   @01A
.*** ALL ***
*** SGIED502 *** TCAM                                     *** SC121 ***
    SGIED502
.NTCAM2    ANOP                                                    @01A
        AIF  (NOT &SGDMGTB(4)).NBTAM2        BTAM NOT SPECIFIED?   @01A
.*** ALL ***                                                   @ZA41488
*** SGIED512 *** BTAM                                     *** SC121 ***
    SGIED512
.NBTAM2    ANOP                                                    @01A
*** GENERATE *** SYSGEN                                   *** SC1S1 ***
 PUNCH ' COPY OUTDD=MACLIB,INDD=AMACLIB'                       @ZA15662
        AIF   (&SGDMGTB(6)).J9A      VTAM NOT EXCLUDED?         VS30004
.*** ALL ***                                                    VS30004
*** SGIST513 *** VTAM                                     *** SC123 ***
    SGIST513
.J9A    AIF   (&SGDMGTB(4)).J2        BTAM NOT EXCLUDED?        VS30004
.************** ALL *****
*** SGIEC513*** BTAM                                      *** SC120 ***
    SGIEC513
.J2     AIF (&SGMENTB(12)).J6  IS GRAPHICS INCLUDED
.************** ALL *****
*** SGIFF523 *** GRAPHIC PROGRAM SERVICES                 *** SC1G0 ***
    SGIFF523
.J6        ANOP
.*** ALL ***
*** SGIEC520 ** OCR                                       *** SC1D5 ***
    SGIEC520
         AIF   (NOT &SGDMGTB(6)).JC        NO VTAM IN SYSTEM
.*** ALL ***
*** SGIST510 ** VTAM                                      *** SC123 ***
    SGIST510
.JC       AIF   (NOT &SGDCLSB(81)).JCA     NO 3800             @X40MSTG
.************** ALL-IO *****
*** SGIEC5NI *** ACCESS METHODS                           *** SC1D0 ***
    SGIEC5NI
.JCA     ANOP
.************** ALL-IO *****
*** SGIEC5PI *** ACCESS METHODS                           *** SC1D0 ***
    SGIEC5PI
    AIF   (&GETB(3)).JE
*** GENERATE *** SYSGEN                                   *** SC1S1 ***
&I         SETA  0 INITIALIZE LIBRARY COUNTER
.MISC2     AIF (&I GT 8).MISC1     DONE WITH ALL THE LIBRARIES         *
                                                        ZM32650,Y30BS04
&N SETC 'CMDLIB  JES3LIB SAMPLIB MACLIB  PROCLIB TELCMLIBVTAMLIB IMAGEL*
               IBPARMLIB '(&I*8+1,8)           @ZA20936,ZM32650,Y30BS04
 AIF       ('&N'(8,1) NE ' ').NBLNK1
&N         SETC  '&N'(1,7)
 AIF       ('&N'(7,1) NE ' ').NBLNK1
&N         SETC  '&N'(1,6)
.NBLNK1    ANOP
&NUC SETC 'CMDLIBA JES3LIBASAMPLIBAMACLIBA PROCLIBATELCMLBAVTAMLIBAIMAG*
               ELBAPARMLIBA'(&I*8+1,8)                  ZM32650,Y30BS04
 AIF       ('&NUC'(8,1) NE ' ').NBLNK
&NUC       SETC  '&NUC'(1,7)
.NBLNK     ANOP
&X SETC '020405070810131618'(&I*2+1,2)  LIB INDEX       ZM32650,Y30BS04
 AIF       ('&SGMB01C(&X)' EQ '').MISC3 ANY MEMBERS
 PUNCH '          COPY  INDD=&NUC,OUTDD=&N'
         AIF   ('&SGMB01C(&X)' EQ '').MISC3
 PUNCH '          SELECT MEMBER=&SGMB01C(&X)'
         AIF   ('&SGMB02C(&X)' EQ '').MISC3
 PUNCH '          SELECT MEMBER=&SGMB02C(&X)'
         AIF   ('&SGMB03C(&X)' EQ '').MISC3
 PUNCH '          SELECT MEMBER=&SGMB03C(&X)'
         AIF   ('&SGMB04C(&X)' EQ '').MISC3
 PUNCH '          SELECT MEMBER=&SGMB04C(&X)'
         AIF   ('&SGMB05C(&X)' EQ '').MISC3
 PUNCH '          SELECT MEMBER=&SGMB05C(&X)'
         AIF   ('&SGMB06C(&X)' EQ '').MISC3
 PUNCH '          SELECT MEMBER=&SGMB06C(&X)'
         AIF   ('&SGMB07C(&X)' EQ '').MISC3
 PUNCH '          SELECT MEMBER=&SGMB07C(&X)'
         AIF   ('&SGMB08C(&X)' EQ '').MISC3
 PUNCH '          SELECT MEMBER=&SGMB08C(&X)'
         AIF   ('&SGMB09C(&X)' EQ '').MISC3
 PUNCH '          SELECT MEMBER=&SGMB09C(&X)'
         AIF   ('&SGMB10C(&X)' EQ '').MISC3
 PUNCH '          SELECT MEMBER=&SGMB10C(&X)'
         AIF   ('&SGMB11C(&X)' EQ '').MISC3
 PUNCH '          SELECT MEMBER=&SGMB11C(&X)'
         AIF   ('&SGMB12C(&X)' EQ '').MISC3
 PUNCH '          SELECT MEMBER=&SGMB12C(&X)'
         AIF   ('&SGMB13C(&X)' EQ '').MISC3
 PUNCH '          SELECT MEMBER=&SGMB13C(&X)'
         AIF   ('&SGMB14C(&X)' EQ '').MISC3
 PUNCH '          SELECT MEMBER=&SGMB14C(&X)'
         AIF   ('&SGMB15C(&X)' EQ '').MISC3
 PUNCH '          SELECT MEMBER=&SGMB15C(&X)'
         AIF   ('&SGMB16C(&X)' EQ '').MISC3
 PUNCH '          SELECT MEMBER=&SGMB16C(&X)'
         AIF   ('&SGMB17C(&X)' EQ '').MISC3
 PUNCH '          SELECT MEMBER=&SGMB17C(&X)'
         AIF   ('&SGMB18C(&X)' EQ '').MISC3
 PUNCH '          SELECT MEMBER=&SGMB18C(&X)'
         AIF   ('&SGMB19C(&X)' EQ '').MISC3
 PUNCH '          SELECT MEMBER=&SGMB19C(&X)'
         AIF   ('&SGMB20C(&X)' EQ '').MISC3
 PUNCH '          SELECT MEMBER=&SGMB20C(&X)'
.MISC3     ANOP
&I         SETA  &I+1                  INCREMENT LIBRARY COUNTER
 AGO       .MISC2  GO TO NEXT LIBRARY
.MISC1     ANOP
.JE      ANOP
 PUNCH '/*'
.**********************************************************************
.****    JOB 5  MISC. LINKEDITS                      ******************
.**********************************************************************
.TSOI      ANOP                                                @ZA42177
       AIF (NOT &SGTSOB).CONDLE         TSO NOT INCLUDED           @F1A
.******* ALL-IO ******                                             @F1M
*** SGIKJ4EB *** TSO EDIT                                 *** SC1T0 ***
    SGIKJ4EB
.CONDLE AIF  (&GETB(3)).EG               I/O DEVICE GENERATION     @F1C
       AIF   (NOT &SGTSOB).VG            TSO NOT INCLUDED
.******* ALL ********
*** SGIKJ4EF *** TSO TYPE 1 UTILITIES                     *** SC1S5 ***
    SGIKJ4EF
.******* ALL ********
*** SGIKJ4EH *** TSO TYPE 1 UTILITIES                     *** SC1T2 ***
    SGIKJ4EH
.******* ALL ********
*** SGIKJ4EG *** TSO TEST                                 *** SC1T1 ***
    SGIKJ4EG
.******* ALL ********
*** SGAKJ4IE *** TSO LINK EDIT F PROMPTER                 *** SC1T5 ***
    SGAKJ4IE
.VG      AIF   (NOT &SGMENTB(46)).NOJ3E  NO JES3                Y30BS04
.******* ALL *******
*** SGIAT4JL ***  JES3 LINKEDIT TO JES3LIB               *** SC1BA ***
    SGIAT4JL
.NOJ3E  AIF   (NOT &SGDMGTB(6)).SU57      VTAM NOT INCLUDED     Y30BS04
.*                                                              OZ29149
.********** ALL *************
*** SGIST410 *** VTAM                                     *** SC123 ***
    SGIST410
.*********         SU57 IMPLEMENTATION - IPCS                  ********
.SU57    ANOP                                                   OZ29149
         AIF   (NOT &SGIHASU(57)).NSU57   SU 57 PRESENT ?       OZ29149
*** SGBLS400 ***  IPCS
    SGBLS400
.NSU57  ANOP
.******* DEMF ****          DEMF LINK EDITS FOR TELCMLIB       @ZA31090
          AIF    (NOT(&SGIHASU(68))).EG       DEMF SU PRESENT? @ZA31090
*** SGBNG410  **** DEMF
    SGBNG410
.EG      ANOP                                                  @ZA31090
.************* ALL - I/O **********
*** SGIEC4UC *** BSAM/QSAM                                *** SC1D0 ***
    SGIEC4UC
         AIF   (&GETB(3)).ZA                                   @ZA28264
.**********************************************************************
.*********        *** STEP *** IEBUPDTE TO PARMLIB      ***************
.**********************************************************************
.******* ALL  ****
*** SGIEA600 *** SUPERVISOR                               *** SC1S4 ***
    SGIEA600
.******* ALL  ****
*** SGIEC6AP ** ACCESS METHODS                            *** SC1D1 ***
    SGIEC6AP
         AIF   (NOT &SGMENTB(46)).NOJ3F  NO JES3                Y30BS04
.******* ALL ****
*** SGIAT6PA ***   JES3 MEMBER TO PARMLIB                 *** SC1BA ***
    SGIAT6PA
.******* ALL ****
*** SGIAT5PR ***   JES3 RENAME PROCLIB MEMBER             *** SC1BA ***
    SGIAT5PR
.NOJ3F   ANOP                                                   Y30BS04
.**********************************************************************
.*   UTILITIES FOR AUXILARY DATA SETS                                 *
.**********************************************************************
.*** ALL ***
**** SGILR600 *** ASM                                     *** SC1CW ***
     SGILR600
.*                                                              VS43004
.ZA      ANOP
.**********************************************************************
.****       STEP ***  RENAME DATA SETS    *****************************
.**********************************************************************
*** GENERATE *** SYSGEN                                   *** SC1S1 ***
         AIF   ('&INDEX' EQ 'SYS1').S8         SKIP RENAME?
         AIF   (&GETB(3)).S7                   RENAME STEP FOR IO GEN
&SGCTRLA(1)    SETA &SGCTRLA(1)+1              INCREMENT STEP COUNTER
 PUNCH '//MISC&SGCTRLA(1) EXEC PGM=IDCAMS,REGION=512K,COND=(8,LT)'
 PUNCH '//STEPCAT DD DISP=SHR,DSN=&SGVSNMC'
 PUNCH '//SYSPRINT DD SPACE=(121,(500,100),RLSE),'
 PUNCH '//    DCB=(RECFM=FB,LRECL=121,BLKSIZE=121),SYSOUT=&SGCTRLC(41)'
 PUNCH '//SYSIN  DD  *'
  PUNCH '  ALTER       -'
  PUNCH '   &INDEX..BRODCAST  NEWNAME (SYS1.BRODCAST) -'        OZ04623
 PUNCH ' CAT (&SGVSNMC)'                                        OZ04623
  PUNCH '  ALTER       -'
  PUNCH '   &INDEX..LOGREC   NEWNAME (SYS1.LOGREC)  -'          OZ04623
 PUNCH ' CAT (&SGVSNMC)'                                        OZ04623
  PUNCH '  ALTER       -'
  PUNCH '   &INDEX..MACLIB    NEWNAME (SYS1.MACLIB)   -'        OZ04623
 PUNCH ' CAT (&SGVSNMC)'                                        OZ04623
  PUNCH '  ALTER       -'
  PUNCH '   &INDEX..MANX    NEWNAME (SYS1.MANX)   -'            OZ04623
 PUNCH ' CAT (&SGVSNMC)'                                        OZ04623
  PUNCH '  ALTER       -'
  PUNCH '   &INDEX..MANY    NEWNAME (SYS1.MANY)   -'            OZ04623
 PUNCH ' CAT (&SGVSNMC)'                                        OZ04623
  PUNCH '  ALTER       -'
  PUNCH '   &INDEX..PARMLIB   NEWNAME (SYS1.PARMLIB)  -'        OZ04623
 PUNCH ' CAT (&SGVSNMC)'                                        OZ04623
  PUNCH '  ALTER       -'
  PUNCH '   &INDEX..PROCLIB   NEWNAME (SYS1.PROCLIB)  -'        OZ04623
 PUNCH ' CAT (&SGVSNMC)'                                        OZ04623
  PUNCH '  ALTER       -'
  PUNCH '   &INDEX..SAMPLIB   NEWNAME (SYS1.SAMPLIB)  -'        OZ04623
 PUNCH ' CAT (&SGVSNMC)'                                        OZ04623
  PUNCH '  ALTER       -'
  PUNCH '   &INDEX..STGINDEX  NEWNAME (SYS1.STGINDEX) -'        OZ04623
 PUNCH ' CAT (&SGVSNMC)'                                        OZ04623
  PUNCH '  ALTER       -'
  PUNCH '   &INDEX..UADS    NEWNAME (SYS1.UADS)   -'            OZ04623
 PUNCH ' CAT (&SGVSNMC)'                                        OZ04623
        AIF (NOT &SGDMGTB(6)).S1      VTAM NOT SPECIFIED
  PUNCH '  ALTER       -'
  PUNCH '   &INDEX..VTAMLIB  NEWNAME (SYS1.VTAMLIB) -'          OZ04623
 PUNCH ' CAT (&SGVSNMC)'                                        OZ04623
.S1     AIF (NOT &SGDSDFB(1)).S2A     INDMAC NOT SPECIFIED
  PUNCH '  ALTER       -'
  PUNCH '   &INDEX..INDMAC   NEWNAME (SYS1.INDMAC)  -'          OZ04623
 PUNCH ' CAT (&SGVSNMC)'                                        OZ04623
.S2A    AIF (NOT &SGDSDFB(16)).S3     IMAGELIB NOT SPECIFIED
  PUNCH '  ALTER       -'
  PUNCH '   &INDEX..IMAGELIB  NEWNAME (SYS1.IMAGELIB) -'        OZ04623
 PUNCH ' CAT (&SGVSNMC)'                                        OZ04623
.S3     AIF (NOT &SGDSDFB(2)).S4      CMDLIB NOT SPECIFIED
  PUNCH '  ALTER       -'
  PUNCH '   &INDEX..CMDLIB   NEWNAME (SYS1.CMDLIB)  -'          OZ04623
 PUNCH ' CAT (&SGVSNMC)'                                        OZ04623
.S4     AIF (NOT &SGDSDFB(3)).S5      HELP NOT SPECIFIED
  PUNCH '  ALTER       -'
  PUNCH '   &INDEX..HELP    NEWNAME (SYS1.HELP) -'              OZ04623
 PUNCH ' CAT (&SGVSNMC)'                                        OZ04623
.S5      AIF (NOT &SGDSDFB(10)).S5A   TELCMLIB NOT SPECIFIED   @ZA41353
  PUNCH '  ALTER       -'
  PUNCH '   &INDEX..TELCMLIB  NEWNAME (SYS1.TELCMLIB) -'        OZ04623
 PUNCH ' CAT (&SGVSNMC)'                                        OZ04623
.S5A     AIF (NOT &SGDSDFB(25)).S6    TCOMMAC  NOT SPECIFIED   @ZA41353
  PUNCH '  ALTER       -'
  PUNCH '   &INDEX..TCOMMAC   NEWNAME (SYS1.TCOMMAC) -'         OZ04623
 PUNCH ' CAT (&SGVSNMC)'                                        OZ04623
.S6      AIF   (NOT &SGMENTB(46)).NOJ3G  NO JES3                Y30BS04
  PUNCH '  ALTER       -'                                       Y30BS04
  PUNCH '   &INDEX..JES3LIB   NEWNAME (SYS1.JES3LIB)  -'        OZ04623
 PUNCH ' CAT (&SGVSNMC)'                                        OZ04623
.NOJ3G   ANOP                                                   Y30BS04
&D       SETA  27                         SET INDEX TO DUMP00 INDEX
&I       SETA  0                          SET COUNT FOR DUMP00-09 DS
.S7A     AIF   (NOT &SGDSDFB(&D)).S7B     NOT DUMP00-09 SPECIFIED
  PUNCH '  ALTER       -'
  PUNCH '   &INDEX..DUMP0&I  NEWNAME (SYS1.DUMP0&I) -'          OZ04623
 PUNCH ' CAT (&SGVSNMC)'                                        OZ04623
.S7B     AIF   (&I GE 9).S7C              OUT IF COUNT MORE THAN 9
&D       SETA  &D+1                       UP INDEX VALUE
&I       SETA  &I+1                       UP COUNT
         AGO   .S7A                       CHECK NEXT ONE
.S7C     ANOP
  PUNCH '/*'
          AGO   .S8
.S7       ANOP
.**********************************************************************
.*                                                                    *
.*       FOR IO GEN - RENAME LOGREC AND IMAGELIB                      *
.*                                                             @ZA42300
.**********************************************************************
 PUNCH '//MISC&SGCTRLA(1) EXEC PGM=IEHPROGM,COND=(8,LT)'
 PUNCH '//SYSPRINT DD    SYSOUT=&SGCTRLC(41)'
 PUNCH '//LOGREC   DD VOLUME=(,RETAIN,SER=&SGCTRLC(30).),UNIT=&SGCTRLC(X
               29),DISP=OLD,'                                  @ZA42177
 PUNCH '//   DSNAME=&SGCTRLC(40)..LOGREC'                      @ZA42177
        AIF   (NOT &SGDSDFB(16)).S7D      NO IMAGELIB
 PUNCH '//IMAGELIB DD VOLUME=(,RETAIN,SER=&SGCTRLC(62).),UNIT=&SGCTRLC(X
               61),DISP=OLD,'                                  @ZA42177
 PUNCH '//    DSNAME=&SGCTRLC(40)..IMAGELIB'                   @ZA42177
.S7D    ANOP
        AIF   (NOT &SGDSDFB(2)).S7D2     NO CMDLIB CHANGES     @ZA42177
 PUNCH '//CMDLIB   DD VOLUME=(,RETAIN,SER=&SGCTRLC(23).),UNIT=&SGCTRLC(X
               24),DISP=OLD,'                                  @ZA42177
 PUNCH '//    DSNAME=&SGCTRLC(40)..CMDLIB'                     @ZA42177
.S7D2   ANOP                                                   @ZA42177
 PUNCH '//SYSIN DD *'
 PUNCH '  RENAME NEWNAME=SYS1.LOGREC,                                  X
                       X'
 PUNCH '               DSNAME=&SGCTRLC(40)..LOGREC,VOL=&SGCTRLC(29)=&SGX
               CTRLC(30)'
        AIF   (NOT &SGDSDFB(16)).S7E      NO IMAGELIB
 PUNCH '  RENAME NEWNAME=SYS1.IMAGELIB,                                X
                       X'
 PUNCH '               DSNAME=&SGCTRLC(40)..IMAGELIB,VOL=&SGCTRLC(61)=&X
               SGCTRLC(62)'
.S7E    ANOP
        AIF   (NOT &SGDSDFB(2)).S7E2     NO CMDLIB CHANGES     @ZA42177
 PUNCH '  RENAME NEWNAME=SYS1.CMDLIB,                                  X
                       X'                                      @ZA42177
 PUNCH '               DSNAME=&SGCTRLC(40)..CMDLIB,VOL=&SGCTRLC(24)=&SGX
               CTRLC(23)'                                      @ZA42177
.S7E2   ANOP                                                   @ZA42177
 PUNCH '/*'
.S8       ANOP
.**********************************************************************
.*       JOB6                                     *********************
.*                                                *********************
.*           EXPORT MASTER CATALOG OF NEW SYSTEM  *********************
.*                                                *********************
.*           (NOTE - JOB 6 MUST NOT RUN UNTIL JOBS 1 TO 5 COMPLETE)
.**********************************************************************
.*          CALL JOBCARD MACRO FOR MISCELLANEOUS JOB
&SGCTRLA(1)   SETA  0
&SGCTRLA(3)   SETA  &SGCTRLA(3)+1
&SGHOLDB      SETB  1            SET BIT FOR TYPRUN=HOLD ON JOBCARD
         JOBCARD
&SGHOLDB      SETB  0            BIT OFF FOR VSAM CATALOG USE
.**********************************************************************
.***********   CALL ADDITIONAL INNERS TO SUPPORT PRODUCT PROGRAMS
.**********************************************************************
         AIF   (&GETB(3)).NOPP          SKIP ON IOGEN           G32DSVN
.***** ALL *****                                                G32DSVN
*** SGIEI601 *** SYSGEN                                   *** SC1S1 ***
    SGIEI601
.***** ALL *****                                                G32DSVN
*** SGIEI602 *** SYSGEN                                   *** SC1S1 ***
    SGIEI602
.***** ALL *****                                                G32DSVN
*** SGIEI603 *** SYSGEN                                   *** SC1S1 ***
    SGIEI603
.***** ALL *****                                                G32DSVN
*** SGIEI604 *** SYSGEN                                   *** SC1S1 ***
    SGIEI604
.***** ALL *****                                                G32DSVN
*** SGIEI605 *** SYSGEN                                   *** SC1S1 ***
    SGIEI605
.***** ALL *****                                                G32DSVN
*** SGIEI606 *** SYSGEN                                   *** SC1S1 ***
    SGIEI606
        AIF  (NOT &SGDMGTB(5)).NTCAM4        TCAM NOT SPECIFIED    @01A
.***** ALL *****                                                G32DSVN
*** SGIEI607 *** SYSGEN                                   *** SC1S1 ***
    SGIEI607
.NTCAM4 ANOP                                                       @01A
.***** ALL *****                                                G32DSVN
*** SGIEI608 *** SYSGEN                                   *** SC1S1 ***
    SGIEI608
.***** ALL *****                                                G32DSVN
*** SGIEI609 *** SYSGEN                                   *** SC1S1 ***
    SGIEI609
.***** ALL *****                                                G32DSVN
*** SGIEI610 *** SYSGEN                                   *** SC1S1 ***
    SGIEI610
.NOPP    ANOP                                                   G32DSVN
.**********************************************************************
.***********   LIST VTOC OF VOLUMES AND
.***********   LIST PDS FOR SYSTEM DATA SETS
.**********************************************************************
&SGCTRLA(1)    SETA &SGCTRLA(1)+1  INCREMENT STEP COUNTER
*** GENERATE *** SYSGEN                                   *** SC1S1 ***
 PUNCH '//LIST&SGCTRLA(1) EXEC PGM=IEHLIST'
 PUNCH '//SYSPRINT DD SPACE=(121,(1500,300),RLSE),'
 PUNCH '//    DCB=(RECFM=FB,LRECL=121,BLKSIZE=121),SYSOUT=&SGCTRLC(41)'
         AIF   (&GETB(3)).SA1     I/O SYSGEN
         AIF (NOT (&SGDSDFB(2) OR &SGTSOB)).SC   NO CMDLIB DS?  VS32758
 PUNCH '//CMDLIB   DD VOL=(,RETAIN,SER=&SGCTRLC(23)),UNIT=&SGCTRLC(24),X
               DISP=SHR'
.SC      AIF (NOT &SGDSDFB(3)).SA1        NO HELP DATASET?
 PUNCH '//HELP     DD VOL=(,RETAIN,SER=&SGCTRLC(52)),UNIT=&SGCTRLC(51),X
               DISP=SHR'
.SA1     AIF   (NOT(&SGSCHDB(25) OR &SGDSDFB(23))).SBA
 PUNCH '//DCMLIB   DD VOL=(,RETAIN,SER=&SGCTRLC(54)),UNIT=&SGCTRLC(53),X
               DISP=SHR'
.SBA     AIF (NOT &SGDSDFB(16)).SBB       IMAGELIB NOT SPECIFIED?
 PUNCH '//IMAGELIB DD VOL=(,RETAIN,SER=&SGCTRLC(62)),UNIT=&SGCTRLC(61),X
               DISP=SHR'
.SBB     ANOP
 PUNCH '//LPALIB   DD VOL=(,RETAIN,SER=&SGCTRLC(20)),UNIT=&SGCTRLC(19),X
               DISP=SHR'
 PUNCH '//LINKLIB  DD VOL=(,RETAIN,SER=&SGCTRLC(32)),UNIT=&SGCTRLC(31),X
               DISP=SHR'
 PUNCH '//NUCLEUS  DD VOL=(,RETAIN,SER=&SGCTRLC(30)),UNIT=&SGCTRLC(29),X
               DISP=SHR'
       AIF   (&GETB(3)).SA             IO GEN
 PUNCH '//MACLIB   DD VOL=(,RETAIN,SER=&SGCTRLC(16)),UNIT=&SGCTRLC(15),X
               DISP=SHR'
 PUNCH '//PARMLIB  DD VOL=(,RETAIN,SER=&SGCTRLC(45)),UNIT=&SGCTRLC(44),X
               DISP=SHR'
 PUNCH '//PROCLIB  DD VOL=(,RETAIN,SER=&SGCTRLC(26)),UNIT=&SGCTRLC(25),X
               DISP=SHR'
 PUNCH '//SAMPLIB  DD VOL=(,RETAIN,SER=&SGCTRLC(18)),UNIT=&SGCTRLC(17),X
               DISP=SHR'
 PUNCH '//SVCLIB   DD VOL=(,RETAIN,SER=&SGDSVLC(9)),UNIT=&SGDSUNC(9),DIX
               SP=SHR'
 PUNCH '//UADS     DD VOL=(,RETAIN,SER=&SGCTRLC(50)),UNIT=&SGCTRLC(49),X
               DISP=SHR'
         AIF (NOT &SGDSDFB(10)).NOTELDD     TELCMLIB NOT SPECIFIED
 PUNCH '//TELCMLIB DD VOL=(,RETAIN,SER=&SGCTRLC(34)),UNIT=&SGCTRLC(33),X
               DISP=SHR'
.NOTELDD  AIF   (NOT &SGDMGTB(6)).NOVTMDD   VTAM NOT SPECIFIED @ZA41353
 PUNCH '//VTAMLIB  DD VOL=(,RETAIN,SER=&SGCTRLC(28)),UNIT=&SGCTRLC(27),X
               DISP=SHR'
.NOVTMDD AIF (NOT &SGDSDFB(25)).NOTCOM     TCOMMAC NOT SPEC'D  @ZA41353
 PUNCH '//TCOMMAC  DD VOL=(,RETAIN,SER=&SGDSVLC(25)),UNIT=&SGDSUNC(25),X
               DISP=SHR'
.NOTCOM  AIF   (NOT &SGMENTB(46)).NOJ3H  NO JES3                Y30BS04
 PUNCH '//JES3LIB  DD VOL=(,RETAIN,SER=&SGDSVLC(4)),UNIT=&SGDSUNC(4),DI*
               SP=SHR'                                          Y30BS04
.NOJ3H   ANOP                                                   Z40RSVN
 PUNCH '//STGINDEX DD VOL=(,RETAIN,SER=&SGCTRLC(22)),UNIT=&SGCTRLC(21),X
               DISP=SHR'
 PUNCH '//CATALOG  DD VOL=(,RETAIN,SER=&SGCTRLC(38)),UNIT=&SGCTRLC(37),X
               DISP=SHR'
 PUNCH '//BRODCAST DD VOL=(,RETAIN,SER=&SGCTRLC(58)),UNIT=&SGCTRLC(57),X
               DISP=SHR'
 PUNCH '//MANX     DD VOL=(,RETAIN,SER=&SGCTRLC(46)),UNIT=&SGCTRLC(43),X
               DISP=SHR'
 PUNCH '//MANY     DD VOL=(,RETAIN,SER=&SGCTRLC(48)),UNIT=&SGCTRLC(47),X
               DISP=SHR'
.*                                                                 @F1D
.SA      ANOP
 PUNCH '//SYSIN  DD  *'
.*             THIS ROUTINE  PRODUCES LISTVTOC CARDS FOR EACH
.*             DIFFERENT VOLUME THAT HAS BEEN PARTIALLY GENERATED
.*             DURING THIS SYSGEN.
.*             TO ADD ANOTHER VOLUME TO THIS ROUTINE, FOUR CARDS
.*             MUST BE CHANGED.  THESE FOUR CARDS ARE NOTED BELOW
&CTR1    SETA  6-7                        SET COUNTER TO -1
.SE0     AIF   (&GETB(3)).SE5          IO GEN?
         AIF   (&CTR1 EQ 43).SE66   **** '43' MUST BE UPPED     VS43004
.*                                    BY 2 FOR EACH ADDITION
.SE1     ANOP
&CTR1    SETA  &CTR1+2                    INCREMENT POINTER
&NUC     SETC  '30325420622616344518235052704648582238666828'(&CTR1,2)
.*                                           REF TCOMMAC ABOVE @ZA41353
.*                ADD THE 2 CHARACTER SUBSCRIPT OF THE &SGCTRLC GLOBAL
.*                 WITH THE VOLUME SERIAL NUMBER
&W1      SETA  &NUC
         AIF ('&SGCTRLC(&W1)' EQ '').SE0  DO NOT LIST VTOC?
&W2      SETA  11-12                      SET POINTER TO -1
.SE2     ANOP
&W2      SETA  &W2+2                      INCREMENT POINTER
         AIF (&CTR1 EQ &W2).SE4           GO PICK UP UNIT GLOBAL?
&NUC     SETC  '30325420622616344518235052704648582238666828'(&W2,2)
.*                                           REF TCOMMAC ABOVE @ZA41353
.*                  ADD THE 2 CHARACTER SUBSCRIPT OF THE &SGCTRLC GLOBAL
                    WITH THE VOLUME SERIAL NUMBER
&W3      SETA  &NUC                       VOLUME GLOBAL SUBSCRIPT
         AIF ('&SGCTRLC(&W1)' NE '&SGCTRLC(&W3)').SE2
         AGO   .SE0                       CONTINUE
.SE4     ANOP
&NUC     SETC  '29315319612515334417244951694347572137656727'(&CTR1,2)
.*                                           REF TCOMMAC ABOVE @ZA41353
.*                ADD THE 2 CHARACTER SUBSCRIPT OF THE &SGCTRLC GLOBAL
.*                 WITH THE UNIT
&W3      SETA  &NUC                       UNIT GLOBAL SUBSCRIPT
 PUNCH ' LISTVTOC DUMP,VOL=&SGCTRLC(&W3)=&SGCTRLC(&W1)'
         AGO   .SE0                       CONTINUE
.SE5     AIF   (&CTR1 NE 9).SE1           CHECK 1ST 5 FOR IO GEN
.**********************************************************************
.****    LIST PDS INPUT
.**********************************************************************
.SE66    AIF (&GETB(3)).SEA4              IO SYSGEN?
         AIF (NOT (&SGDSDFB(2) OR &SGTSOB)).SEA3    NO CMDLIB   VS32758
 PUNCH ' LISTPDS VOL=&SGCTRLC(24)=&SGCTRLC(23),DSNAME=SYS1.CMDLIB,FORMA*
               T'                                               Z40RSVN
.SEA3    AIF (NOT &SGDSDFB(3)).SEA4       NO HELP
 PUNCH ' LISTPDS VOL=&SGCTRLC(51)=&SGCTRLC(52),DSNAME=SYS1.HELP'
.SEA4     AIF   (NOT(&SGSCHDB(25) OR &SGDSDFB(23))).SE6   PFK?
 PUNCH ' LISTPDS VOL=&SGCTRLC(53)=&SGCTRLC(54),DSNAME=SYS1.DCMLIB,FORMA*
               T'                                               Z40RSVN
.SE6     AIF   (NOT &SGDSDFB(16)).SE7 IMAGELIB NOT SPECIFIED?
 PUNCH ' LISTPDS VOL=&SGCTRLC(61)=&SGCTRLC(62),DSNAME=SYS1.IMAGELIB,FOR*
               MAT'                                             Z40RSVN
.SE7     ANOP
 PUNCH ' LISTPDS VOL=&SGCTRLC(31)=&SGCTRLC(32),DSNAME=SYS1.LINKLIB,FORM*
               AT'                                              Z40RSVN
 PUNCH ' LISTPDS VOL=&SGCTRLC(19)=&SGCTRLC(20),DSNAME=SYS1.LPALIB,FORMA*
               T'                                               Z40RSVN
 PUNCH ' LISTPDS VOL=&SGCTRLC(29)=&SGCTRLC(30),DSNAME=SYS1.NUCLEUS,FORM*
               AT'                                              Z40RSVN
         AIF   (&GETB(3)).SE8                     IO GEN
 PUNCH ' LISTPDS VOL=&SGCTRLC(15)=&SGCTRLC(16),DSNAME=SYS1.MACLIB'
 PUNCH ' LISTPDS VOL=&SGCTRLC(44)=&SGCTRLC(45),DSNAME=SYS1.PARMLIB'
 PUNCH ' LISTPDS VOL=&SGCTRLC(25)=&SGCTRLC(26),DSNAME=SYS1.PROCLIB'
 PUNCH ' LISTPDS VOL=&SGCTRLC(17)=&SGCTRLC(18),DSNAME=SYS1.SAMPLIB'
 PUNCH ' LISTPDS VOL=&SGDSUNC(9)=&SGDSVLC(9),DSNAME=SYS1.SVCLIB,FORMAT'
.*                                                     @ZA14554,Z40RSVN
 PUNCH ' LISTPDS VOL=&SGCTRLC(49)=&SGCTRLC(50),DSNAME=SYS1.UADS'
         AIF   (NOT &SGMENTB(46)).NOJ3I  NO JES3                Y30BS04
 PUNCH ' LISTPDS VOL=&SGDSUNC(4)=&SGDSVLC(4),DSNAME=SYS1.JES3LIB,FORMAT*
               '                                        Y30BS04,Z40RSVN
.NOJ3I   AIF (NOT &SGDSDFB(10)).SE8    TELCMLIB NOT SPEC'D?     Y30BS04
 PUNCH ' LISTPDS VOL=&SGCTRLC(33)=&SGCTRLC(34),DSNAME=SYS1.TELCMLIB,FOR*
               MAT'                                             Z40RSVN
.SE8     AIF (NOT &SGDMGTB(6)).SE9        VTAM NOT SPECIFIED?
 PUNCH ' LISTPDS VOL=&SGCTRLC(27)=&SGCTRLC(28),DSNAME=SYS1.VTAMLIB,FORM*
               AT'                                              Z40RSVN
.SE9     AIF (NOT &SGDSDFB(25)).SE10   TCOMMAC  NOT SPEC'D?    @ZA41353
 PUNCH ' LISTPDS VOL=&SGCTRLC(69)=&SGCTRLC(70),DSNAME=SYS1.TCOMMAC'
.SE10    ANOP                                                  @ZA41353
 PUNCH '/*'
         AIF   (&GETB(3)).SEA111         IF IO GEN, SKIP
.**********************************************************************
.***********                 LIST CATALOG                    *******
.**********************************************************************
&SGCTRLA(1)    SETA &SGCTRLA(1)+1              INCREMENT STEP COUNTER
 PUNCH '//LIST&SGCTRLA(1) EXEC PGM=IDCAMS,REGION=512K,COND=(8,LT)'
 PUNCH '//STEPCAT DD DISP=SHR,DSN=&SGVSNMC'
 PUNCH '//SYSPRINT DD SPACE=(121,(500,100),RLSE),'
 PUNCH '//    DCB=(RECFM=FB,LRECL=121,BLKSIZE=121),SYSOUT=&SGCTRLC(41)'
 PUNCH '//SYSIN  DD  *'
 PUNCH ' LISTCAT CAT(&SGVSNMC) VOLUME'                          OZ04623
 PUNCH '/*'
.*** ALL ***
*** SGIGG500 *** VSAM CATALOG                             *** SC1DE ***
    SGIGG500
.SEA111  ANOP
         AIF (&SGQUITB).SEE               QUIT SWITCH SET IN GENERATE?
         MEXIT
.SEC MNOTE 7,'* * * IEIGEN113 QUIT SWITCH SET PRIOR TO GENERATE MACRO'
         AGO   .SF
.SEE MNOTE 7,'* * * IEIGEN116 QUIT SWITCH SET IN GENERATE MACRO'
.SF  MNOTE 7,'* * * G E N E R A T I O N  T E R M I N A T E D * * *'
  PUNCH  '//'
.SF0     MEND
