         MACRO -- $SVT -- HASP SUBSYSTEM VECTOR TABLE DSECT
         $SVT  &DOC=NO
         AIF   ('&DOC' NE 'YES').A                                   R4
.A       TITLE 'HASP SUBSYSTEM VECTOR TABLE (SSVT) DSECT'
*        HASP SSVT PREFIX
         SPACE 2
*        DC    C'SSVT'             CONTROL BLOCK IDENTIFIER
*        DC    A($SVTL+8)          LENGTH (INCLUDING PREFIX)
         SPACE 2
         IEFJSSVT
$SVDSECT EQU   SSVT
         EJECT
*        MATRIX OF SUPPORTED FUNCTIONS (SSOB DEFINITION SENSITIVE)
         SPACE 2
         ORG   SSVTFNUM
         DC    Y(($SVRETID-$SVNULL)/4)  NUMBER OF FUNCTIONS
         ORG   SSVTFCOD
         $SVTC                     GENERATE FUNCTION OFFSETS
         EJECT
*        HASP SUPPORTED FUNCTION POINTERS
         SPACE 2
         ORG   SSVTFRTN            LOCATE FUNCTION POINTERS
$SVNULL  EQU   SSVTFRTN-4          NOT SUPPORTED FUNCTIONS
$SVSOUT  DC    A(*-*)              PROCESS SYSOUT
$SVCANC  DC    A(*-*)              TSO CANCEL
$SVSTAT  DC    A(*-*)              TSO STATUS
$SVEOT   DC    A(*-*)              END OF TASK
$SVJBSL  DC    A(*-*)              JOB SELECTION
$SVALOC  DC    A(*-*)              ALLOCATION
$SVUNAL  DC    A(*-*)              UNALLOCATION
$SVEOM   DC    A(*-*)              END OF MEMORY
$SVWTO   DC    A(*-*)              WTO
$SVCMND  DC    A(*-*)              COMMAND PROCESSING
$SVUSER  DC    A(*-*)              USERID VALIDITY CHECK
$SVTERM  DC    A(*-*)              JOB DELETION
$SVRENQ  DC    A(*-*)              RE-ENQUEUE JOB
$SVDOM   EQU   $SVNULL             DOM
$SVOPEN  DC    A(*-*)              OPEN
$SVCLOS  DC    A(*-*)              CLOSE
$SVCKPT  DC    A(*-*)              CHECKPOINT
$SVREST  DC    A(*-*)              RESTART
$SVREQID DC    A(*-*)              REQUEST JOB ID
$SVRETID DC    A(*-*)              RETURN JOB ID
         EJECT
*        HASP EXTENSIONS
         SPACE 2
$SVPOST  DC    A(*-*)              POST HASP TASK
$SVDEST  DC    A(*-*)              VERIFY DESTINATION
$SVCOPN  DC    A(*-*)              CONVERTER FAKE OPEN
$SVCCLS  DC    A(*-*)              CONVERTER FAKE CLOSE
$SVGCELL DC    A(*-*)              GET STORAGE CELL
$SVGCPOL DC    A(*-*)              GET CELL POOL
$SVFCELL DC    A(*-*)              FREE CELL BY STORAGE ADDRESS
$SVFCELA DC    A(*-*)              FREE CELL BY SJB/TCB ADDRESS
$SVGCMNS DC    A(*-*)              GET MAIN FOR CELLS
$SVVFL   DC    A(*-*)              SIMULATE VFL INSTRUCTION          R4
$SMPATCH DC    A(*-*)              SSSM PATCH SPACE POINTER
$SVENTL  EQU   *-SSVTFRTN          LENGTH OF ADDRESS CONSTANTS IN
*                                  HASPSSSM
         EJECT
*        COMMUNICATION CONTROL FIELDS
         SPACE 2
$SVHCT   DC    A(*-*)              ADDRESS OF HASP HCT
$SVSSCT  DC    A(*-*)              ADDRESS OF SSCT
$SVHAVT  DC    A(*-*)              HASP ADR SPACE VECTOR TABLE
$SVPIDLE DC    A(*-*)              NUMBER OF IDLE PITS
$SVOUTOP DC    0X'0'               OUTPUT EXCESSION OPTION FLAGS
$SVOUTXS DC    A(*-*)              OUTPUT EXCESSION INCREMENT
$SVHASP  DC    A(*-*)              HASP CONDITION
$SVSTUS  DC    X'0'                SUBSYSTEM STATUS BYTE
$SVVARF  DC    X'0'                LARGE STORAGE CELL FREED FLAG
$SVTSLOK DC    X'0'                TSU ABEND INTERLOCK FLAG
$SVCOMCH DC    AL1(*-*)            HASP COMMAND CHARACTER (OS INPUT) R4
$SVRELNO DC    Y(*-*)              OS/VS2 RELEASE NUMBER             R4
$SVLEVEL DC    Y(*-*)              OS/VS2 RELEASE LEVEL              R4
$SVSID   DC    A(*-*)              ALPHANUMERIC SYSTEM ID      @OZ18212
$SVTO    DC    0Y(*-*)             SYSTEM IDENTIFICATION             R4
$SVTOSYS DC    AL1(*-*)            SYSTEM                            R4
$SVTOQUL DC    AL1(*-*)            QUALIFIER                         R4
$SVNOSYS DC    Y(*-*)              MAXIMUM SYSTEMS                   R4
$SVNOUNT DC    Y(*-*)              MAXIMUM UNIT ROUTING              R4
$SVROUT  DC    Y(*-*)              MAXIMUM REMOTE NUMBER             R4
$SVROUTM DC    XL256'0'            REMOTE ROUTING MASK BYTES         R4
$SVRDT   DC    A(*-*)              ADDRESS OF REMOTE DESTINATION TABLE
$SVRDTE  DC    A(*-*)              ADDRESS OF LAST RDT ELEMENT       R4
$SVIRDRS DC    A(*-*)              ADDRESS OF FIRST INTRDR DCT
$SVIRWT  DC    A(*-*)              INTRDR WAIT ELEMENT CHAIN HEADER
$SVNINRS DC    Y(*-*)              &NUMINRS+2 (FOR STC & TSU)  @OZ35996
$SVMAXCL DC    AL1(*-*)            COUNT OF EXECUTION CLASSES  @OZ35996
         DC    AL1(*-*)            RESERVED FOR FUTURE USE     @OZ35996
$SVCHKPT DC    CL6'0'              CURRENT CHKPT VOLSER        @OZ50548
         DC    AL1(*-*)            RESERVED FOR FUTURE USE     @OZ50548
         DC    AL1(*-*)            RESERVED FOR FUTURE USE     @OZ50548
         SPACE 3
*        CONSOLE SERVICE ELEMENTS
         SPACE 2
$SVCMBA  DC    A(*-*)              ADDRESS OF CMB WORK AREA
$SVCMBAC DC    A(*-*)              CMB ACTIVITY COUNT
$SVCMBFQ DC    D'0'                CMB FREE QUEUE
$SVCMBRQ DC    A(*-*)              CMB RESERVE QUEUE
$SVCOMMQ DC    A(*-*)              COMMAND PROCESSOR QUEUE
$SVCOMCT DC    A(*-*)              CMBS RESERVED FROM COMM
         EJECT
*        $$POST ELEMENTS -- REQUESTS FOR PCE SERVICE
         SPACE 2
$SVECF   DC    A(*-*)              $$POST EVENT CONTROL FIELD
$SVCOMM  DC    A(*-*)              $$POST ELEMENT FOR COMM
$SVPSO   DC    A(*-*)              $$POST ELEMENT FOR PROCESS SYSOUT
$SVJOB   DC    A(*-*)              $$POST ELEMENT FOR JOB FUNCTION
$SVCNV   DC    A(*-*)              $$POST ELEMENT FOR JCL CONVERSION
$SVASYNC DC    A(*-*)              $$POST ELEMENT FOR ASYNC PCE
$SVXSTIM DC    A(*-*)              $$POST ELEMENT FOR TIME EXCESSION
$SVTIMER DC    A(*-*)              $$POST ELEMENT FOR TIMER PCE
         DC    A(*-*)              RESERVED                          R4
$SVMLLM  DC    A(*-*)              $$POST ELEMENT FOR MLLM PCE       R4
$SVPCENO EQU   (*-$SVCOMM)/4       NUMBER OF $$POST PCE ELEMENTS
$SVIRDR  DC    A(*-*)              $$POST ELEMENT FOR INTRDR DATA
         SPACE 3
*        STORAGE CELL CONTROL ELEMENTS
         SPACE 2
$SVCENQ  ENQ   ($SVQNAM,$SVCRNAM,E,4,SYSTEM),MF=L
$SVQNAM  DC    0CL8'SYSZ....'      QNAME FOR ALL HASP ENQS
         DC    C'SYSZ'             'SYSZ'
$SVSSNM  DC    C'****'             NAME OF SUBSYSTEM
$SVCRNAM DC    C'CELL'             R NAME FOR WAIT FOR CELLS
$SVCPOST POST  *-*,ASCB=*-*,ERRET=$SVBR14,MF=L
$SVCTREQ DC    A(*-*)              CELL TYPE REQUESTED
$SVCELLS DC    A(*-*)              CELL CONTROL HEADER
$SVCELLF DC    A(*-*)              FREE CELL CONTROL ELEMENT HEADER
         EJECT
*        HASP JOB SERVICES QUEUES LOCK ELEMENT
         SPACE 2
$SVQLOKE DC    C'HASP'             UNUSED
$SVQLOKC DC    A(*-*)              CHAIN WORD
         DC    A(*-*)              ASCB ADDR OF LOCK HOLDER (IF ANY)
$SVQLOKP POST  *-*,ASCB=*-*,ERRET=$SVBR14,MF=L  EXPAND POST ELEMENT  R4
         SPACE 3
*        HASP POST ELEMENT
         SPACE 2
$SVPOSTE POST  *-*,ASCB=*-*,ERRET=*-*,MF=L  EXPAND POST ELEMENT      R4
         SPACE 1                                                     R4
$SVHECBA EQU   $SVPOSTE            ADDRESS OF MAIN HASP ECB          R4
$SVPOSTW EQU   4                   OFFSET TO $$POST WORK INDICATOR   R4
$SVBLANK EQU   8                   48 FIXED BLANKS             @OZ32235
$SVFIXL  EQU   4+1+3+48            LENGTH OF FIXED CSA SPACE   @OZ35996
$SVPIT   DC    A(*-*)              PARTITION INFORMATION TABLE ADDRESS
*              THIS LINE DELETED BY APAR NUMBER                @OZ32235
         SPACE 3
*              JOB SERVICE QUEUES
         SPACE 2
$SVJLOCK DC    D'0'                LOCK HEADER FOR JOB SERVICES QUEUES
$SVJPCLS DC    A(*-*)              SJBS PENDING JOB-BY-CLASS
$SVJPXBM DC    A(*-*)              SJBS PENDING EXECUTION BATCHING
$SVJPNUM DC    A(*-*)              SJBS PENDING JOB-BY-NUMBER
$SVJXCLS DC    A(*-*)              SJBS EXECUTING JOB-BY-CLASS
$SVJXNUM DC    A(*-*)              SJBS EXECUTING JOB-BY-NUMBER
$SVJTERM DC    A(*-*)              SJBS WITH JOBS TO TERMINATE
$SVJRENQ DC    A(*-*)              SJBS WITH JOBS TO RE-ENQUEUE
         EJECT
*        MISCELLANEOUS SERVICE QUEUES
         SPACE 2
$SVSPIOT DC    A(*-*)              CHAIN OF IOTS AWAITING SPIN
$SVTSCS  DC    D'0'                SJBS FOR CANCEL/STATUS
$SVPSOQ  DC    D'0'                SJBS FOR PROCESS SYSOUT
$SVFIFOQ DC    A(*-*)              FIFO REORDERED SPIN/HOLD REQUESTS
$SVHOLDQ DC    A(*-*)              FIFO ORDERED HOLD REQUEST QUEUE
$SVXIOTQ DC    A(*-*)              CONVERTER SPIN/HOLD IOT Q   @OZ36864
$SVPRGQ  DC    A(*-*)              PURGED PSO QUEUE            @OZ40277
         DC    A(*-*)              RESERVED FOR FUTURE USE     @OZ40277
         SPACE 3
*        SPOOL DATA MANAGEMENT
         SPACE 2
$SVPDDB1 DC    A(*-*)              OFFSET WITHIN IOT OF 1ST PDDB     R4
$SVHQRCT DC    A(*-*)              MAXIMUM HQRS IN HQT               R4
$SVMAPL  DC    A(*-*)              DA ALLOCATION MAP LENGTH          R4
$SVXPRI  DC    10A(*-*)            JOB OUTPUT PRIORITY TABLE         R4
$SVBFSIZ DC    AL2(*-*)            SPOOL BUFFER SIZE                 R4
$SVNUMDA DC    AL1(*-*)            NUMBER OF DIRECT ACCESS MODULES   R4
$SVRINCR DC    AL1(*-*)            RECORD ALTERNATION PARAMETER      R4
$SVTKCEL DC    AL1(*-*)            TRAKCELL SIZE IN BUFFERS          R4
$SVBAKSP DC    AL1(*-*)            CONSOLE BACKSPACE CHARACTER       R4
$SVNTGBE DC    AL1(*-*)            MAXIMUM NUMBER OF TG'S PER TGB    R4
         DC    AL1(*-*)            UNUSED                            R4
$SVTGALC DC    A(*-*)              ALLOCATED TRACK GROUPS
$SVTGTOT DC    A(*-*)              TOTAL TRACK GROUPS
$SVTTGBA DC    A(*-*)              FIRST TGB ENTRY ADDRESS           R4
         DC    A(*-*)              TGB ENTRY SIZE                    R4
         DC    A(*-*)              LAST TGB ENTRY                    R4
         DS    0D                  FORCE DOUBLEWORD ALIGNMENT  @OZ38510
$SVTGASC DC    A(*-*)              TGB REQUEST ASCB
$SVTGECB DC    A(*-*)              TGB REQUEST ECB
$SVRPS   DC    A(*-*)              ADDRESS OF DASD RPS TABLES  @OZ35996
         SPACE 3
*        SYSOUT CLASS ATTRIBUTE TABLE
         SPACE 2
$SVSCAT  EQU   *-3*64              SYSOUT CLASS ATTRIBUTE TABLE
         DC    64X'0'              SYSOUT CLASSES A-Z, 0-9
         SPACE 3
*        RETURN CONTROL ELEMENTS AND ROUTINE
         SPACE 2
$SVSMFSO DC    A($SVRETN)          ADDRESS OF IEFUSO
$SVSMFJP DC    A($SVRETN)          ADDRESS OF IEFUJP
$SVRETN  SLR   R15,R15             ZERO R15
$SVBR14  BR    R14                 RETURN
         EJECT
*        SPOOL DATA MANAGEMENT (VARIABLE PORTION)
         SPACE 2
$SVTDATA DS    0F                  FIRST, LAST, NEXT TED PTRS        R4
$SVTFRST DC    A(*-*)              ADDRESS OF FIRST TED              R4
$SVTLAST DC    A(*-*)              ADDRESS OF LAST TED               R4
$SVTNEXT DC    A(*-*)              ADDRESS OF NEXT TED               R4
$SVTED   DC    A(*-*)              ADDRESS OF TRK EXTENT DATA TABLE  R4
         ORG   *-40                ORG OVER UNUSED SPACE
$SVDCB   EQU   *                   SYS1.HASPACE DCB
         ORG   *+40                ORG OVER UNUSED SPACE
         DC    3A(0)               12-BYTE MEAT OF DCB
$SVDEB   DC    A(*-*)              ADDR OF JES2 DIRECT ACCESS DEB    R4
         DS    0D                                                    R4
SSVTLEN  EQU   *-SSVT              LENGTH OF SSVT                    R4
&SYSECT  CSECT
         EJECT
*        $SVHASP FIELD MEANINGS
         SPACE 2
*                                  =  0 - STILL UP
*                                  = -1 - ABENDED OR ABENDING
*                                  = +1 - $PHASP ACCEPTED
         SPACE 3
*        $SVSTUS FIELD DEFINITIONS
         SPACE 2
$SVSTUSP EQU   X'80'               THIS IS THE PRIMARY SUBSYSTEM
$SVSTUST EQU   X'40'               HASP TERMINATION COMPLETE
$SVSTUSR EQU   X'20'               HASP IS RESTARTING
$SVSTXST EQU   X'10'               HASP MONITORING TIME EXCESSIONS
$SVSTIRV EQU   X'08'               CHKPT DEVICE RESERVED BY INIT
$SVSTRS5 EQU   X'04'               RESERVED FOR FUTURE USE     @OZ35278
$SVSTIDS EQU   X'02'               FULL HASP MESSAGE IDS REQUIRED    R4
$SVSTRPL EQU   X'01'               A RE-IPL IS REQUIRED        @OZ35996
         SPACE 3
*        $SVQLOKC FIELD MEANINGS
         SPACE 2
*                                  ZERO MEANS UNLOCKED
*                                  MINUS MEANS LOCKED, NOBODY WAITING
*                                  PLUS MEANS LOCKED, SOMEONE WAITING
         MEND
