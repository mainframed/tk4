RTAM     TITLE 'HASP REMOTE SERVICES PROLOG'
***********************************************************************
*                                                                     *
* MODULE NAME = HASJES20 (HASPRTAM CSECT)                             *
*                                                                     *
* DESCRIPTIVE NAME = HASPRTAM CSECT OF JES2 MAIN MODULE               *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = OS/VS2 MVS   --  SEE &VERSION (BELOW) FOR JES2 LEVEL       *
*                                                                     *
* FUNCTION = HASPRTAM CONSISTS OF RTAM SUBROUTINES AND TWO HASP       *
*            PROCESSORS (SEE ENTRY POINTS) WHICH PROVIDE ACCESS       *
*            TO ALL REMOTE TERMINALS.  THE HASP INPUT AND OUTPUT      *
*            PROCESSORS (SEE HASPRDR AND HASPPRPU MODULES) REQUEST    *
*            THIS ACCESS VIA THE RTAM SUBROUTINES AT THE LOGICAL      *
*            RECORD LEVEL AND NEED NOT BE AWARE OF ANY TERMINAL       *
*            OR TP DEVICE DEPENDENCIES, TRANSMISSION CODES,           *
*            TIMING REQUIREMENTS, ERROR RECOVERY, ETC.                *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES = EXCP ACCESS METHOD, NO STANDARD ERROR RECOVERY    *
*                   VTAM/SNA INTERFACES AND CONTROL BLOCKS            *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER CONVENTIONS = SEE ENTRY POINTS                          *
*                                                                     *
*    PATCH LABEL = NONE                                               *
*                                                                     *
* MODULE TYPE = PROCEDURE, TABLE (CSECT TYPE)                         *
*                                                                     *
*    PROCESSOR = ASSEMBLER F                                          *
*                                                                     *
*    MODULE SIZE = SEE $DLENGTH MACRO EXPANSION(S) AT END OF ASSEMBLY *
*                                                                     *
*    ATTRIBUTES = READ ONLY, AFTER HASP INITIALIZATION, AND           *
*                 HASP REENTRANT                                      *
*                                                                     *
* ENTRY POINT = HASPEXTP - INVOKE TERMINAL I/O SERVICE                *
*                                                                     *
*    PURPOSE = CALLED BY PROCESSORS IN HASPRDR AND HASPPRPU,          *
*              BY THE LINE MANAGER PROCESSOR (SEE BELOW),             *
*              AND BY THE REMOTE CONSOLE PROCESSOR (SEE BELOW),       *
*              TO INVOKE ONE OF THE FOUR TERMINAL I/O SERVICES.       *
*                                                                     *
*    LINKAGE = R1, AND POSSIBLY R0, ARE USED AS DESCRIBED IN          *
*              THE 4 SERVICE ROUTINE PROLOGS AT RTAMIOPE,             *
*              RTAMIGET, RTAMIPUT, AND RTAMICLO.                      *
*                                                                     *
*              R14 = ADDRESS OF HALFWORD CONSTANT SHOWING WHICH       *
*              SERVICE IS DESIRED (GENERATED AUTOMATICALLY BY         *
*              THE $EXTP MACRO).  THE CONSTANT IS FOLLOWED BY         *
*              THE INSTRUCTION TO WHICH CONTROL IS TO BE RETURNED.    *
*                                                                     *
*              BASE1 = ADDRESS OF HASP CONTROL TABLE                  *
*              R13 = ADDRESS OF CALLER'S PCE                          *
*                                                                     *
*              HASPEXTP PERFORMS INITIAL ENTRY ACTIONS TO SAVE        *
*              THE CALLER'S REGISTERS AND BRANCH TO THE REQUESTED     *
*              SERVICE ROUTINE WITH THE FOLLOWING SET UP -            *
*              (NOTE VARIATIONS FOR BSC REMOTE VS. SNA REMOTE)        *
*                                                                     *
*              CALLERS'S REGISTERS LINK THRU BASE2 SAVED IN PCE       *
*              R1 = BSC LINE DCT ADDRESS                              *
*              MDCT = REMOTE DCT ADDRESS                              *
*              MBUF = TP BUFFER ADDRESS                               *
*              MICE = SNA INTERFACE CONTROL ELEMENT ADDRESS           *
*              MCODE = BSC CODE TABLE ADDRESS                         *
*              MBASE1 = RTAM SERVICE ROUTINE BASE REGISTER            *
*              MBASE2 = RTAM BSC/SNA SERVICE SUBROUTINES 1ST BASE     *
*              MBASE3 = RTAM BSC/SNA SERVICE SUBROUTINES 2ND BASE     *
*              BASE2 = HASP LINE MANAGER BASE REGISTER                *
*                                                                     *
*              EXIT RELOADS CALLER'S REGISTERS AND                    *
*              RETURNS TO ADDRESS IN LINK REGISTER                    *
*              WHICH HAS BEEN ADJUSTED TO SKIP HALFWORD CONSTANT      *
*                                                                     *
* ENTRY POINT = HASPMLLM - HASP LINE MANAGER PROCESSOR                *
*                                                                     *
*    PURPOSE = PROCESSES ALL CHANNEL ENDS FOR TP LINES,               *
*              READS SIGNON FROM REMOTES (VIA RTAM SUBROUTINES),      *
*              PERFORMS ERROR RECOVERY AND LOGGING WHEN NEEDED,       *
*              AND FOR MULTI-LEAVING TERMINALS PROVIDES LINE          *
*              SHARING FOR SEVERAL LOGICAL I/O DATA STREAMS           *
*                                                                     *
*    LINKAGE = STANDARD HASP PROCESSOR REGISTERS AND CPU TIME         *
*              ALLOCATION PROVIDED BY HASP DISPATCHER, MBASE1 AND     *
*              MBASE2 ALSO USED FOR RTAM SUBROUTINE ADDRESSABILITY    *
*                                                                     *
* ENTRY POINT = HASPMCON - HASP REMOTE CONSOLE PROCESSOR              *
*                                                                     *
*    PURPOSE = FOR MULTI-LEAVING TERMINALS WITH CONSOLES PROVIDES     *
*              IMMEDIATE INTERFACE (VIA RTAM SUBROUTINES) WITH        *
*              HASP COMMAND PROCESSOR AND HASP CONSOLE OUTPUT,        *
*              FOR ALL OTHER TERMINALS PROVIDES CONSOLE OUTPUT        *
*              SPOOLING TO BE LATER PROCESSED AS PRINTED OUTPUT       *
*                                                                     *
*    LINKAGE = STANDARD HASP PROCESSOR REGISTERS AND CPU TIME         *
*              ALLOCATION PROVIDED BY HASP DISPATCHER                 *
*                                                                     *
* INPUT = SEE ENTRY POINTS                                            *
*                                                                     *
* OUTPUT = SEE ENTRY POINTS                                           *
*                                                                     *
* EXIT-NORMAL = SEE ENTRY POINTS                                      *
*                                                                     *
* EXIT-ERROR = SEE ENTRY POINTS                                       *
*                                                                     *
* EXTERNAL REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES = $WAIT, $TTIMER, $GETBUF, $WTO, $GETSMFB, $FREEBUF,    *
*               $QUESMFB, $STIMER, $EXCP, $ERROR, $#GET, $IOERROR,    *
*               $GETUNIT, $EXTP, $FREUNIT, $FRECMB, $GETCMB, $QSUSE   *
*                                                                     *
*    DATA AREAS = SEE $HASPCB MACRO DEFINITION                        *
*                                                                     *
*    CONTROL BLOCKS = SEE $HASPCB MACRO DEFINITION                    *
*                                                                     *
* TABLES = SEE BELOW, BEGINNING AT LABEL MDISCCW                      *
*                                                                     *
* MACROS = SEE EXTERNAL REFERENCES, $CCW (DEFINED LOCALLY),           *
*          $HASPGEN, $ENTRY, $SYSPARM, NULL, $POST, $ACTIVE,          *
*          $DORMANT, $RESTORE (DEFINED LOCALLY)                       *
*                                                                     *
* CHANGE ACTIVITY                                                     *
*                                                                     *
*     RELEASE 4.0 = OZ03311,OZ04313,OZ04990,OZ05769,OZ06762,OZ07439,  *
*                   OZ08195,OZ09025,OZ09052,OZ09085                   *
*                                                                     *
*     RELEASE 4.1 = OZ10359,OZ10379,OZ10380,OZ10381,OZ10382,OZ10384,  *
*                   OZ10385,OZ11753,OZ11754,OZ11759,OZ11766,OZ11803,  *
*                   OZ11804,OZ11805,OZ11807,OZ11808,OZ11809,OZ11810,  *
*                   OZ12271,OZ12273,OZ12295,OZ12296,OZ12297,OZ13246,  *
*                   OZ14401,OZ14402,OZ14410,OZ14415,OZ14417,OZ14418,  *
*                   OZ14442,OZ14446,OZ15262,OZ15285,OZ15298,OZ15830,  *
*                   OZ15836,OZ15839,OZ15840,OZ15842,OZ15843,OZ16674,  *
*                   OZ16689,OZ18200,OZ18228,OZ18229,OZ18230,OZ18238   *
*                                                                     *
***********************************************************************
         TITLE 'HASP CONTROL BLOCK GENERATION MACRO'
         SPACE 5
*
*****    $HASPCB   *****           GENERATE HASP CONTROL BLOCKS
*
         SPACE 1
         MACRO
         $HASPCB &DOC=NO,&LIST=NO
         GBLC  &PRINT,&GEN,&DATA
         PUSH  PRINT
         PRINT &PRINT
         $ACB  DOC=&DOC            GENERATE OS ACB DSECT             R4
         $CVT  DOC=&DOC            GENERATE OS CVT DSECT             R4
         $DCB  DOC=&DOC            GENERATE OS DCB DSECT
         $DEB  DOC=&DOC            GENERATE OS DEB DSECT
         $PSA  DOC=&DOC            GENERATE OS PSA DSECT             R4
         $RPL  DOC=&DOC            GENERATE OS RPL DSECT             R4
         $UCB  DOC=&DOC            GENERATE OS UCB DSECT
         $FMH  DOC=&DOC            GENERATE SNA FMH DSECT            R4
         $BIND DOC=&DOC            GENERATE SNA BIND DSECT           R4
         $NIB  DOC=&DOC            GENERATE VTAM NIB DSECT           R4
         $TED  DOC=&DOC            GENERATE HASP TED DSECT
         $SVT  DOC=&DOC            GENERATE HASP SSVT DSECT
         $HCT  DOC=&DOC            GENERATE HASP HCT DSECT
         $PCE  DOC=&DOC            GENERATE HASP PCE DSECT
         $LRC  DOC=&DOC            GENERATE HASP LRC DSECT
         $BUFFER DOC=&DOC          GENERATE HASP BUFFER DSECT
         $ICE  DOC=&DOC            GENERATE HASP ICE DSECT           R4
         $CPT  DOC=&DOC            GENERATE HASP CPT DSECT          R41
         $CMB  DOC=&DOC            GENERATE HASP CMB DSECT
         $SMF  DOC=&DOC            GENERATE HASP SMF DSECT
         $JQE  DOC=&DOC            GENERATE HASP JQE DSECT
         $QSE  DOC=&DOC            GENERATE HASP QSE DSECT
         $PDDB DOC=&DOC            GENERATE HASP PDDB DSECT    @OZ76305
         $PPPWORK DOC=&DOC         GENERATE HASP PPPWORK DSECT @OZ76305
         $RAT  DOC=&DOC            GENERATE HASP RAT DSECT
         $DCT  DOC=&DOC            GENERATE HASP DCT DSECT
         $TQE  DOC=&DOC            GENERATE HASP TQE DSECT
         $MLMWORK DOC=&DOC         GENERATE HASP MLMWORK DSECT       R4
         $RCPWORK DOC=&DOC         GENERATE HASP RCPWORK DSECT       R4
         SPACE 1
         POP   PRINT
         PRINT &GEN,&DATA          SET ASSEMBLY PRINT OPTIONS
         MEND
         TITLE 'HASP RJE CHANNEL COMMAND WORD GENERATION MACRO'
         SPACE 5
*
***** $CCW     *****               GENERATE RJE CCW SKELETON
*
*
         MACRO
&NAME    $CCW  &OP,&AD,&FL,&LN,&CD
&NAME    DC    AL1(&OP),AL3(&AD),AL1(&FL,&CD),AL2(&LN)
         MEND
         TITLE 'HASP RTAM REGISTER SETUP MACRO'                      R4
         SPACE 5                                                     R4
*                                                                    R4
***** $RESTORE *****               RESTORE ACCESS METHOD REGISTERS   R4
*                                                                    R4
*                                                                    R4
         MACRO -- $RESTORE -- RESTORE RTAM ACCESS METHOD REGISTERS   R4
&NAME    $RESTORE &REENTER=NO                                        R4
&NAME    L     LINK,$EXTP          GET REG SETUP CODE BASE ADDRESS   R4
         AIF   ('&REENTER' EQ 'YES').A                               R4
         BAL   R15,RTAMIRES-HASPEXTP(,LINK) GO SET UP RTAM REGISTERS R4
         MEXIT                                                       R4
.A       L     R15,PCESAVEA        GET SERVICE ROUT ENTRY ADDR       R4
         B     RTAMIRES-HASPEXTP(,LINK)  GO SET UP RTAM REGISTERS    R4
         MEND                                                        R4
         TITLE 'HASP REMOTE TERMINAL ACCESS METHOD'
         SPACE 5
HASPRTAM START 0                   HASP REMOTE TERMINAL ACCESS METHOD
         SPACE 5
         COPY  $HASPGEN            COPY HASPGEN PARAMETERS
         TITLE 'HASP REMOTE TERMINAL ACCESS METHOD'                  R4
         SPACE 5                                                     R4
HASPRTAM $ENTRY CSECT=YES,BASE=,ENTRY=NO                             R4
         SPACE 5                                                     R4
*                                                                    R4
*                             EXTERNAL REFERENCES                    R4
*                                                                    R4
         SPACE 3                                                     R4
         ENTRY HASPEXTP            HASP RTAM SERVICE ROUTINES        R4
         ENTRY MWRSPCCW            HASP RTAM BSC CCW SKELETON        R4
         ENTRY HASPMLLM            HASP LINE MANAGER                 R4
         ENTRY HASPMCON            HASP REMOTE CONSOLE PROCESSOR     R4
         ENTRY HASPVTAM            HASP VTAM ACB OPEN/CLOSE SUBTASK  R4
         SPACE 5                                                     R4
*                                                                    R4
*                             DOCUMENTATION OPTIONS FOR THIS ASSEMBLY
*                                                                    R4
         SPACE 3                                                     R4
         $SYSPARM (OFF,GEN,NODATA,NO,NO)                             R4
         EJECT                                                       R4
*                                                                    R4
*                             GENERATE HASP CONTROL BLOCKS           R4
*                                                                    R4
         SPACE 3                                                     R4
        $HASPCB DOC=&DOC,LIST=&LIST  GENERATE HASP CONTROL BLOCKS    R4
         TITLE 'HASP REMOTE TERMINAL ACCESS METHOD'                  R4
         SPACE 5
*
*                             COMMON REGISTER DEFINITIONS            R4
*
         SPACE 3
MDCT     EQU   WB                  ADDRESS OF DCT
MBUF     EQU   WC                  ADDRESS OF RJE BUFFER
MCODE    EQU   WD                  ADDRESS OF CODE TABLE
MICE     EQU   WD                  ADDRESS OF INTERFACE CTL ELEMENT  R4
ML       EQU   WE                  INTERNAL LINK REGISTER
MBASE1   EQU   WF                  ACCESS                           R41
MBASE2   EQU   WG                   METHOD                          R41
MBASE3   EQU   R10                   BASE REGSITERS                 R41
MACB     EQU   R10                 ADDRESS OF VTAM ACB               R4
         SPACE 5
*
*                             BSC LINE ACTION REQUESTS               R4
*
         SPACE 3
MDCTIMER EQU   X'80'               TIMED ACTION REQUESTED
MDCTPAWS EQU   X'40'               LINE PAUSE REQUESTED
MDCTJOB1 EQU   X'20'               JOB POST INDICATOR 1
MDCTJOB2 EQU   X'10'               JOB POST INDICATOR 2
MDCTDSC  EQU   X'01'               LINE DISCONNECT SEQUENCE    @OZ59759
MDCTJOB  EQU   MDCTJOB1+MDCTJOB2   JOB POST INDICATION
         SPACE 5
*
*                             BSC RJE CCW SEQ TYPE DEFINITIONS       R4
*
         SPACE 3
MBSCSEQ  EQU   X'80'               BINARY SYNCHRONOUS SEQUENCE
MPREPSEQ EQU   X'40'               PREPARE SEQUENCE
MWRITSEQ EQU   X'20'               WRITE SEQUENCE
MCPUSEQ  EQU   X'10'               PROGRAMMABLE INTERFACE SEQUENCE
MSEQTYPE EQU   IOBCCW1+5           SEQUENCE TYPE BYTE
         EJECT
         SPACE 3
*
*                             BSC CCW COMMAND TYPE DEFINITIONS       R4
*
         SPACE 3
MDISCMD  EQU   X'00'               DISABLE
MSETMCMD EQU   X'01'               SET MODE
MENBCMD  EQU   X'02'               ENABLE
MREADCMD EQU   X'04'               READ
MRRSPCMD EQU   X'05'               READ RESPONSE (NORMAL)
MRREQCMD EQU   X'06'               READ RESPONSE (TO ENQUIRY)
MPREPCMD EQU   X'07'               PREPARE
MWRITCMD EQU   X'08'               WRITE
MWRSPCMD EQU   X'09'               WRITE RESPONSE
MWENQCMD EQU   X'0A'               SEND INQUIRY
         SPACE 5
*
*                             EBCDIC BSC CONTROL CHARACTERS
*
         SPACE 3
MBCDSOH  EQU   X'01'               START OF HEADING
MBCDSTX  EQU   X'02'               START OF TEXT
MBCDETX  EQU   X'03'               END OF TEXT
MBCDHT   EQU   X'05'               HORIZONTAL TAB
MBCDDLE  EQU   X'10'               DATA LINK ESCAPE
MBCDDC1  EQU   X'11'               SELECT OUTPUT DEVICE 1
MBCDDC2  EQU   X'12'               SELECT OUTPUT DEVICE 2
MBCDDC3  EQU   X'13'               SELECT OUTPUT DEVICE 3
MBCDNL   EQU   X'15'               NEW LINE
MBCDEM   EQU   X'19'               END OF MEDIUM
MBCDIGS  EQU   X'1D'               INTER-GROUP SEPARATOR
MBCDIRS  EQU   X'1E'               INTER-RECORD SEPARATOR
MBCDITB  EQU   X'1F'               INTERMEDIATE BLOCK CHECK
MBCDETB  EQU   X'26'               END OF TRANSMISSION BLOCK
MBCDESC  EQU   X'27'               ESCAPE
MBCDENQ  EQU   X'2D'               ENQUIRY
MBCDSYN  EQU   X'32'               SYNCHRONOUS IDLE
MBCDEOT  EQU   X'37'               END OF TRANSMISSION
MBCDNAK  EQU   X'3D'               NEGATIVE ACKNOWLEDGE
MBCDACK1 EQU   X'61'               POSITIVE ACKNOWLEDGE ODD
MBCDACK0 EQU   X'70'               POSITIVE ACKNOWLEDGE EVEN
         EJECT                                                       R4
         SPACE 3                                                     R4
*                                                                    R4
*                             SNA CHARACTER STRING (SCS) DEFINITIONS R4
*                                                                    R4
         SPACE 3                                                     R4
SCSSEL   EQU   X'04'               SELECT CHAN SKIP, SECURE STRG RDR R4
SCSHT    EQU   X'05'               HORIZONTAL TAB                    R4
SCSVT    EQU   X'0B'               VERTICAL TAB                      R4
SCSFF    EQU   X'0C'               FORMS FEED                        R4
SCSCR    EQU   X'0D'               CARRIAGE RETURN                   R4
SCSENP   EQU   X'14'               ENABLE PRESENTATION               R4
SCSNL    EQU   X'15'               NEW LINE                          R4
SCSBS    EQU   X'16'               BACKSPACE                         R4
SCSIRS   EQU   X'1E'               INTER-RECORD SEPARATOR            R4
SCSINP   EQU   X'24'               INHIBIT PRESENTATION              R4
SCSLF    EQU   X'25'               LINEFEED                          R4
SCSTRN   EQU   X'35'               TRANSPARENCY                      R4
SCSBLANK EQU   X'40'               BLANK                             R4
         SPACE 5                                                     R4
*                                                                    R4
*                             SNA STRING CONTROL BYTE DEFINITIONS    R4
*                                                                    R4
         SPACE 1                                                     R4
SCBNONCO EQU   B'00000000'         NONCOMPACTED, NONDUPLICATE        R4
SCBCPACT EQU   B'01000000'         COMPACTED, NONDUPLICATE          R41
SCBPRIME EQU   B'10000000'         DUPLICATE PRIME CHARACTERS        R4
SCBDUPLC EQU   B'11000000'         DUPLICATE NONPRIME CHARACTERS     R4
         SPACE 1                                                    R41
SCB      EQU   1                   SCB ITSELF OCCUPIES 1 BYTE       R41
SCBEMPTY EQU   0                   SCB COUNT WHEN EMPTY             R41
SCBMAXCT EQU   63                  SCB COUNT WHEN FILLED TO MAXIMUM R41
         EJECT                                                       R4
         SPACE 3                                                     R4
*                                                                    R4
*                             SNA RJE SEQUENCE TYPE DEFINITIONS      R4
*                                                                    R4
         SPACE 1                                                     R4
VSEQNORM EQU   X'00'               SESSION NORMAL I/O SEQUENCE       R4
VSEQLOGN EQU   X'10'               SESSION INITIATION SEQUENCE       R4
VSEQHOLD EQU   X'20'               SESSION HOLD   I/O SEQUENCE       R4
VSEQCLOS EQU   X'30'               SESSION CLOSE DOWN SEQUENCE       R4
VSEQTERM EQU   X'40'               SESSION ABN TERMIN SEQUENCE       R4
VSEQRCVR EQU   X'50'               SESSION RECOVR I/O SEQUENCE       R4
VSEQALOG EQU   X'60'               SESSION AUTO-LOGON SEQUENCE      R41
VSEQSPEC EQU   X'F0'               SESSION SPEC  MODE SEQUENCE       R4
         SPACE 1                                                     R4
VSEQRECV EQU   VSEQNORM+X'00'      RECEIVE  REQUEST                  R4
VSEQSEND EQU   VSEQNORM+X'01'      SEND     REQUEST                  R4
VSEQRSET EQU   VSEQNORM+X'02'      RESETSR  REQUEST                  R4
VSEQRSCS EQU   VSEQRSET+VSEQRECV   RESET CS REQUEST                  R4
VSEQRSCA EQU   VSEQRSET+VSEQSEND   RESET CA REQUEST                  R4
         SPACE 1                                                     R4
VSEQLDEV EQU   X'01'               INQUIRE DEVCHAR  REQUEST         R41
VSEQLPAR EQU   X'02'               INQUIRE SESSPARM REQUEST         R41
VSEQLOPD EQU   X'03'               OPNDST  ACCEPT   REQUEST         R41
         SPACE 1                                                     R4
VSEQGIBB EQU   X'00'               NULL RU BEG/END BKT REQUEST       R4
VSEQGIEB EQU   X'01'               NULL RU END BRACKET REQUEST       R4
VSEQGICD EQU   X'02'               NULL RU CHG DIRECTN REQUEST       R4
VSEQGCLS EQU   X'03'               DEFERRED CLSDST     REQUEST       R4
         SPACE 1                                                     R4
VSEQDLNE EQU   X'00'               DISCONNECT ICE FROM LINE  DCT     R4
VSEQDLGN EQU   X'01'               DISCONNECT ICE FROM LOGON DCT     R4
         SPACE 4                                                     R4
*                                                                    R4
*                             VTAM EXIT ROUTINE IDENT DEFINITION     R4
*                                                                    R4
         SPACE 2                                                     R4
VXIDOPEN EQU   X'10'               DCT XID FOR OPEN   ACB  SUBTASK   R4
VXIDTPND EQU   X'20'               DCT XID FOR TPEND  EXIT ROUTINE   R4
VXIDCLOS EQU   X'30'               DCT XID FOR CLOSE  ACB  SUBTASK   R4
         SPACE 1                                                     R4
VXIDLOGN EQU   X'10'               ICE XID FOR LOGON  EXIT ROUTINE   R4
VXIDALOG EQU   X'20'               ICE XID FOR AUTO-LOGON  ROUTINE  R41
VXIDGBUF EQU   X'30'               ICE XID FOR DEFERRED GET BUFFER  R41
VXIDRLRQ EQU   X'40'               ICE XID FOR RELREQ EXIT ROUTINE  R41
VXIDSCIP EQU   X'50'               ICE XID FOR SCIP   EXIT ROUTINE  R41
VXIDLOST EQU   X'60'               ICE XID FOR LSTTRM EXIT ROUTINE  R41
VXIDISCN EQU   X'70'               ICE XID FOR DISCONNECT  ROUTINE  R41
         TITLE 'HASP $EXTP SERVICE ENTRY ROUTINES'                   R4
***********************************************************************
*                                                                     *
*                    REMOTE JOB ENTRY OPEN ROUTINE                    *
*                                                                     *
*    ENTRY PARAMETER --                                               *
*              R1 = ADDRESS OF REMOTE DEVICE CONTROL TABLE.           *
*                                                                     *
***********************************************************************
         SPACE 2                                                     R4
RTAMIOPE DC    A(RTAMBOPE)         ADDRESS OF RTAM BSC OPEN ROUTINE  R4
         DC    A(RTAMVOPE)         ADDRESS OF RTAM SNA OPEN ROUTINE  R4
         SPACE 6                                                     R4
***********************************************************************
*                                                                     *
*                    REMOTE JOB ENTRY GET ROUTINE                     *
*                                                                     *
*    ENTRY PARAMETERS --                                              *
*              R1 = ADDRESS OF REMOTE DEVICE CONTROL TABLE.           *
*              R0 = ADDRESS OF A WORK AREA WHICH MAY BE USED TO       *
*                   RETURN ONE INPUT IMAGE TO THE CALLER.  THE        *
*                   LENGTH OF THE WORK AREA IS DEFINED IN THE         *
*                   MDCTRECL FIELD OF THE CALLER'S DCT.               *
*                                                                     *
*    EXIT RESULTS --                                                  *
*              R0 = ADDRESS OF 80-BYTE INPUT CARD RETURNED.           *
*                   R0 GT 0 AND CC=2 FOR NORMAL RETURN                *
*                   R0 LT 0 AND CC=4 FOR END OF FILE OR ABORT         *
*                   R0 EQ 0 AND CC=8 FOR ERROR RETURN RECEIVED        *
*                                                                     *
***********************************************************************
         SPACE 2                                                     R4
RTAMIGET DC    A(RTAMBGET)         ADDRESS OF RTAM BSC GET ROUTINE   R4
         DC    A(RTAMVGET)         ADDRESS OF RTAM SNA GET ROUTINE   R4
         EJECT                                                       R4
***********************************************************************
*                                                                     *
*                    REMOTE JOB ENTRY PUT ROUTINE                     *
*                                                                     *
*    ENTRY PARAMETERS --                                              *
*              R1 = ADDRESS OF REMOTE DEVICE CONTROL TABLE.           *
*              R0 = ADDRESS OF AN 8-BYTE CCW WHICH DESCRIBES          *
*                   CARRIAGE CONTROL (OR STACKER SELECT), ADDRESS,    *
*                   AND LENGTH FOR ONE OUTPUT LINE (OR CARD).         *
*                   NOTE -- THIS CCW MAY BE DESTROYED.                *
*                   CCW OP CODE X  'FE' PASSES PDDB/PDIR INFO (SNA)   *
*                   CCW OP CODE X'FF' FORCES WRITE TO TERMINAL.       *
*                   R0 HI-ORDER BIT ON MEANS END OF PAGE (VTAM/SNA).  *
*                                                                     *
***********************************************************************
         SPACE 2                                                     R4
RTAMIPUT DC    A(RTAMBPUT)         ADDRESS OF RTAM BSC PUT ROUTINE   R4
         DC    A(RTAMVPUT)         ADDRESS OF RTAM SNA PUT ROUTINE   R4
         SPACE 6                                                     R4
***********************************************************************
*                                                                     *
*                   REMOTE JOB ENTRY CLOSE ROUTINE                    *
*                                                                     *
*    ENTRY PARAMETER --                                               *
*              R1 = ADDRESS OF REMOTE DEVICE CONTROL TABLE.           *
*                                                                     *
***********************************************************************
         SPACE 2                                                     R4
RTAMICLO DC    A(RTAMBCLO)         ADDRESS OF RTAM BSC CLOSE ROUTINE R4
         DC    X'80'               SNA CLOSE RUNS EVEN IF SOFT ABORT R4
         DC    AL3(RTAMVCLO)       ADDRESS OF RTAM SNA CLOSE ROUTINE R4
         SPACE 2                                                     R4
RTAMINCL DC    A(RTAMBNCL)         ADDRESS OF RTAM BSC NCLOSE RTN   R41
         DC    X'80'               SNA NCLOSE RUNS IF SOFT ABORT    R41
         DC    AL3(RTAMVNCL)       ADDRESS OF RTAM SNA NCLOSE RTN   R41
         EJECT                                                       R4
*                                                                    R4
*                             ACCESS METHOD REGISTER INITIALIZATION  R4
*                                                                    R4
         SPACE 3                                                     R4
         USING DCTDSECT,R1         ESTABLISH  DCT ADDRESSABILITY     R4
         USING HASPEXTP,LINK       ESTABLISH CODE ADDRESSABILITY     R4
         SPACE 1                                                     R4
HASPEXTP SH    R15,0(,LINK)        GET ADDR LIST FOR THIS $EXTP SERV R4
         LA    LINK,2(,LINK)       ADJUST RETRN PAST $EXTP SERV CODE R4
         STM   LINK,BASE2,PCELINK  SAVE CALLER'S REGISTERS           R4
         L     LINK,$EXTP          GET BASE ADDRESS FOR SETUP        R4
         TM    MDCTSTAT,DCTABORT   TEST REMOTE DCT STATUS            R4
         BO    RTAMEXIT            BRANCH IF DCT IS ABORTING         R4
         OI    DCTSTAT,DCTRTAM     SHOW RTAM PROCESSING ACTIVE       R4
         TM    MDCTTYPE,DCTPSNA    TEST REMOTE DCT TYPE              R4
         BZ    SKIP10              BRANCH IF NOT SNA REMOTE TERMINAL R4
         LA    R15,4(,R15)         ADVANCE POINTER TO SNA ENTRY ADDR R4
SKIP10   L     R15,0(,R15)         PICK UP RTAM ENTRY ADDR           R4
         ST    R15,PCESAVEA        SAVE ENTRY ADDRESS IN PCESAVEA    R4
         LR    MBASE1,R15          SET ADDR OF RTAM ROUTINE BASE     R4
         B     RTAMBSET            BRANCH TO COMPLETE REGS SETUP     R4
         SPACE 2                                                     R4
*                             RESTORE REGISTERS AFTER $WAIT          R4
         SPACE 1                                                     R4
RTAMIRES TM    MDCTSTAT,DCTABORT   TEST REMOTE DCT STATUS            R4
         BO    RTAMEXIT            BRANCH IF DCT IS ABORTING         R4
         L     MBASE1,PCESAVEA     GET ADDR OF RTAM ROUTINE BASE     R4
         SPACE 1                                                     R4
RTAMBSET LR    MDCT,R1             GET ADDRESS OF REMOTE DCT         R4
         L     MBUF,DCTBUFAD       GET ADDRESS OF BUFFER             R4
         L     BASE2,=A(HASPMLLM)  GET ADDR OF LINE MANAGER BASE     R4
         TM    MDCTTYPE,DCTPSNA    TEST REMOTE DCT TYPE              R4
         BO    RTAMVSET            BRANCH TO SETUP FOR SNA DCT       R4
         L     R1,DCTDCB           GET ADDRESS OF LINE DCT           R4
         L     MCODE,MDCTCODE      GET ADDRESS OF CODE TABLE         R4
         L     MBASE2,=A(RTAMBSUB) GET ADDRESSABILITY               R41
         LA    MBASE3,2048(,MBASE2) OF COMMON BSC RTAM              R41
         LA    MBASE3,2048(,MBASE3)  SUBROUTINES                    R41
         BR    R15                 ENTER OR RETURN TO ROUTINE        R4
         SPACE 1                                                     R4
RTAMVSET L     MICE,MDCTICE        GET ADDRESS OF ASSOCIATED ICE     R4
         L     MBASE2,=A(RTAMVSUB) GET ADDRESSABILITY               R41
         LA    MBASE3,2048(,MBASE2) OF COMMON SNA RTAM              R41
         LA    MBASE3,2048(,MBASE3)  SUBROUTINES                    R41
         TM    MDCTSTAT,DCTFLUSH   TEST REMOTE DCT STATUS            R4
         BZR   R15                 ENTER ROUTINE IF NO SOFT ABORT    R4
         LTR   MBASE1,MBASE1       TEST HIGH-ORDER BIT OF ENTRY ADDR R4
         BMR   R15                 GO IF ON, SOFT ABORT ALLOWS CLOSE R4
         EJECT                                                       R4
*                                                                    R4
*                             RETURN ABNORMAL END TO CALLER          R4
*                                                                    R4
         SPACE 2                                                     R4
RTAMABRT LM    WA,BASE2,PCEWA      RESTORE PCE'S REGISTERS           R4
         SPACE 1                                                     R4
RTAMEXIT L     LINK,PCELINK        RESTORE PCE RETURN ADDR           R4
         NI    DCTSTAT,255-DCTRTAM SHOW RTAM PROCESSING COMPLETE     R4
         SR    R0,R0               SET EOF CONDITION CODE            R4
         BR    LINK                  AND RETURN TO CALLER            R4
         SPACE 1                                                     R4
         DROP  R1,LINK             RELEASE BASE REGISTERS            R4
         SPACE 2                                                     R4
         LTORG                                                       R4
         TITLE 'HASP BSC REMOTE TERMINAL OPEN ROUTINE'               R4
*                                  ADDRESSABILITY --                R41
         USING DCTDSECT,MDCT             -- DCT                     R41
         USING BUFDSECT,MBUF             -- BUFFER                  R41
         USING MCODSECT,MCODE            -- CODE TABLE              R41
         USING RTAMBSUB,MBASE2,MBASE3    -- COMMON BSC SUROUTINES   R41
         USING HASPMLLM,BASE2            -- LINE MANAGER BASE       R41
         SPACE 5
*
*                             REMOTE TERMINAL OPEN ROUTINE
*
         SPACE 3
         USING RTAMBOPE,MBASE1     ESTABLISH OPEN ADDRESSABILITY     R4
RTAMBOPE DS    0H                  ADDRESS OF RTAM BSC OPEN ROUTINE  R4
         L     MBUF,DCTBUFAD-DCTDSECT(,R1)  GET LINE BUFFER ADDRESS  R4
         TM    MSEQTYPE,MCPUSEQ    TEST SEQUENCE TYPE
         BZ    M27XOPEN            BRANCH IF NOT PROGRAMMABLE INTERFACE
         EJECT
*
*                             BSC CPU OPEN ROUTINE
*
         SPACE 3
         IC    R15,MDCTOPCT-DCTDSECT(R1)     INCREMENT
         LA    R15,1(R15)                     OPEN
         STC   R15,MDCTOPCT-DCTDSECT(R1)       COUNT
         SPACE 2
         CLI   DCTDEVTP,DCTRCON    TEST DEVICE TYPE
         BE    MBTAMXIT            EXIT IF REMOTE CONSOLE            R4
         SPACE 2
         NI    MDCTSTAT,255-DCTERMNR  CLEAR RECEIVER TERMINATED BIT  R4
         BAL   ML,MGETPBUF         GET AN OUTPUT BUFFER
         MVI   TPBUFST+5,X'90'          SET UP
         TM    DCTDEVTP,DCTPRPU          REQUEST FOR OUTPUT          R4
         BO    SKIP20                     OR                         R4
         MVI   TPBUFST+5,X'A0'             PERMISSION FOR INPUT
SKIP20   MVC   TPBUFST+6(1),MDCTRCB     ADD RECORD CONTROL BYTE
         XC    TPBUFST+7(2),TPBUFST+7   TERMINATE BUFFER
         MVI   IOBCCW6+7,9              SET WRITE LENGTH
         MVC   BUFDCT+1(3),DCTDCB+1     NOP WRITE POST
         BAL   ML,MBCWRITE         QUEUE BUFFER FOR OUTPUT
        $WAIT  WORK,SAVE=NO        WAIT FOR RESPONSE                 R4
        $RESTORE                   RESTORE ACCESS METHOD REGISTERS   R4
         TM    MDCTSTAT,DCTERMNR   TEST FOR PERMISSION TO TRANSMIT   R4
         BNZ   MBTAMXAB            BRANCH IF NOT               @OZ47347
         CLI   DCTDEVTP,DCTRPR     TEST FOR REMOTE PRINTER     @OZ47347
         BNE   MBTAMXIT            RETURN IF NOT               @OZ47347
         OI    DCTPPSW,DCTPPSWC    FORCE FCB LOAD              @OZ47347
         B     MBTAMXIT            RETURN                      @OZ47347
         EJECT
*
*                             2770/2780 OPEN ROUTINE
*
         SPACE 3
M27XOPEN OI    MDCTSTAT-DCTDSECT(R1),DCTETX  SET ETX SWITCH
         NI    MDCTATTN-DCTDSECT(R1),255-MDCTIMER-MDCTPAWS RESET PAUSE
         CLI   DCTDEVTP,DCTRJR     TEST DEVICE TYPE
         BNE   MBPPOPEN            BRANCH IF NOT REMOTE READER
         SPACE 2
         MVC   LCBACK,MBSCACK1     SET FIRST ACKNOWLEDGEMENT
         LA    R0,IOBCCW2          INITIALIZE
         LA    R1,MBSCSEQ           CCW
         BAL   ML,MCCWINIT           CHAIN
         BAL   ML,MEXCP            INITIATE READ OF FIRST BLOCK
         B     MBTAMXIT             AND EXIT                         R4
         SPACE 3
MBPPOPEN MVC   LCBACK,LCBRCB+1     SAVE ACKNOWLEDGEMENT
         N     MCODE,=F'-8'        FORCE NON-TRANSPARENCY
         LA    R0,IOBCCW5          INITIALIZE
         LA    R1,MBSCSEQ+MWRITSEQ  CCW
         BAL   ML,MCCWINIT           CHAIN
         SPACE 1
         MVI   TPBMXREC,2          SET NOMINAL MAXIMUM RECORD COUNT
         TM    MDCTFEAT,DCTPMRF    TEST FOR MULT RECORD FEATURE
         BZ    *+8                 BRANCH IF NOT
         MVI   TPBMXREC,7          YES, SET MAXIMUM RECORD COUNT TO
         CLI   MDCTTYPE,DCTP2780   TEST TERMINAL TYPE                R4
         BE    SKIP30              BRANCH IF 2780                    R4
         MVI   TPBMXREC,255        RESET RECORD LIMIT IF NOT 2780
SKIP30   TM    MDCTFMT,DCTPBLK     TEST RECORD FORMAT
         BO    *+8                 BRANCH IF BLOCKED
         MVI   TPBMXREC,1          UNBLOCKED, SET MAX RECORD COUNT TO 1
         SPACE 1
         LA    R1,TPBUFST          GET START OF DATA AREA
         LR    R0,R1               SAVE IN R0
         CLI   MDCTTYPE,DCTP2780   TEST TERMINAL TYPE                R4
         BNL   MBN7OPN1            BRANCH IF NOT 2770                R4
         TM    MDCTFMT,DCTPBLK     TEST RECORD FORMAT          @OZ50161
         BZ    SKIP35              UNBLOCKED, LEAVE MXREC=1    @OZ50161
         MVI   TPBMXREC,255        RESET RECORD LIMIT FOR 2770
SKIP35   DS    0H                                              @OZ50161
         MVI   TPBUFST,MBCDSTX     SET COMPONENT SELECT
         MVI   TPBUFST+1,MBCDDC1    FOR DEVICE 1 (PRINTER)
         MVI   IOBCCW6+7,2         SET LENGTH OF COMPONENT SELECT
         CLI   MDCTTYPE,DCTP3780   TEST TERMINAL TYPE                R4
         BE    SKIP40              BRANCH IF 3780 WITHOUT 3781       R4
         AL    R1,MB2770CD         INDICATE COMPONENT SELECT IN BUFFER
SKIP40   BCTR  R0,0                DECREMENT FOR LATER USE
         EJECT                                                       R4
MBN7OPN1 ST    R1,TPBLCCAD         INITIALIZE ADDRESSES OF CARRIAGE
         ST    R1,TPBFDATA          CONTROL AND FIRST DATA BYTE
         CLI   DCTDEVTP,DCTRPU     TEST DEVICE TYPE
         BNE   MBPROPEN            BRANCH IF NOT REMOTE PUNCH
         MVI   TPBUFST+1,MBCDDC2   SET DEVICE 2 COMPONENT SELECT
         TM    MDCTLINE,DCTPTRSP   TEST FOR TRANSPARENCY
         BZ    MBTAMXIT            BYPASS PUNCH SELECT IF NOT        R4
         CLI   MDCTTYPE,DCTP2780   TEST TERMINAL TYPE                R4
         BNL   MBN7OPN2            BRANCH IF NOT 2770                R4
         MVI   TPBMXREC,1          PRESET RECORD COUNT TO 1    @OZ56955
         TM    MDCTFMT,DCTPBLK     USER SPECIFY UNBLOCKED...   @OZ56955
         BNO   MBTAMXIT            YES EXIT                    @OZ56955
         MVI   TPBMXREC,6          PRESET RECORD LIMIT TO 6
         TM    MDCTFEAT,DCTPABEX   IS 2770 BUFFER SIZE 512
         BO    MBTAMXIT            EXIT IF YES                       R4
         MVI   TPBMXREC,3          PRESET MAXIMUM RECORD COUNT TO 3
         TM    MDCTFEAT,DCTPBEXP   IS 2770 BUFFER SIZE 256
         BO    MBTAMXIT            EXIT IF YES                       R4
         MVI   TPBMXREC,1          NO, SET MAXIMUM RECORD COUNT TO 1
         B     MBTAMXIT            EXIT                              R4
         SPACE 1
MBN7OPN2 CLI   TPBMXREC,4          TEST MAXIMUM RECORD COUNT
         BL    *+8                 BRANCH IF LESS THAN 4
         MVI   TPBMXREC,4          SET MAXIMUM RECORD COUNT TO 4
         MVC   TPBUFST(3),MBPUNSEL      SET UP PUNCH SELECT
         MVI   IOBCCW6+7,3         SET LENGTH OF PUNCH SELECT
         MVI   TPBRECNT,4          FORCE WRITE OF PUNCH SELECT RECORD
         B     MBTAMXIT            EXIT                              R4
         SPACE 2
MBPROPEN TM    MDCTFEAT,DCTPTAB    TEST FOR HORIZ. FORMAT CONTROL    R4
         BZ    MBTAMXIT            BYPASS TAB SETTING IF NOT         R4
         MVI   TPBUFST,MBCDSTX     CONSTRUCT
         MVC   1(3,R1),MBHTREC      HORIZONTAL TAB
         MVC   4(143,R1),3(R1)       INITIALIZATION
         LA    R1,3(,R1)              RECORD
         LH    ML,$HTDIST          GET HORIZONTAL TAB SPACING        R4
         LA    R15,143             COMPUTE                           R4
         SLR   R14,R14              TABS                             R4
         DR    R14,ML                PER LINE                        R4
SKIP50   ALR   R1,ML               POINT TO NEXT TAB LOCATION        R4
         MVI   0(R1),MBCDHT        SET HORIZONTAL TABS
         BCT   R15,SKIP50           EVERY '&HTDIST' COLUMNS          R4
         MVI   TPBLCCC,X'FF'       PROHIBIT CARRIAGE CTL CONSOLIDATION
         IC    R15,MDCTRECL        GET LENGTH OF PRINTER
         AL    R15,TPBFDATA        UPDATE
         LA    R15,3(,R15)          DATA
         ST    R15,TPBFDATA          POINTER
         MVI   TPBRECNT,1          SET RECORD COUNT
         MVI   0(R15),MBCDNL       INSERT NL FOR 2770
         SLR   R15,R0              GENERATE BLOCK LENGTH
         STH   R15,IOBCCW6+6       SET CCW COUNT
         B     MBTAMXIT             AND EXIT                         R4
         TITLE 'HASP BSC REMOTE TERMINAL GET ROUTINE'                R4
*
*                             REMOTE TERMINAL GET ROUTINE
*
         SPACE 3
         USING RTAMBGET,MBASE1     ESTABLISH GET ADDRESSABILITY      R4
RTAMBGET DS    0H                  ADDRESS OF RTAM BSC GET ROUTINE   R4
         LR    R1,R0               MOVE SECOND PARAMETER TO R1
         L     R15,TPBFDATA        GET ADDRESS OF NEXT LOGICAL RECORD
         TM    MSEQTYPE,MBSCSEQ+MCPUSEQ      TEST SEQUENCE TYPE
         BO    MBCPUGET            BRANCH IF BSC PROGRAMMABLE INTERFACE
         SPACE 3                                                     R4
         TM    BUFECBCC,X'7F'      TEST I/O STATUS
         BO    M27X0GET            BRANCH IF NORMAL I/O COMPLETION   R4
         BZ    *+12                SKIP IF I/O IS ACTIVE             R4
         OI    MDCTSTAT,DCTEOF     INDICATE EOF DETECTED             R4
         B     MBTAMXEX            GO TO RTAM EXCEPTION EXIT         R4
         CLI   PCEID+1,PCEMLMID    LINE MANAGER...                  R41
         BE    MBTAMXIT            YES, EXIT                        R41
        $WAIT  WORK,SAVE=NO        WAIT FOR I/O TO COMPLETE          R4
        $RESTORE REENTER=YES       SIMULATE RE-ENTRY                 R4
         EJECT
*
*                             BSC CPU GET ROUTINE
*
         SPACE 2
MBCPUGET CLC   MDCTRCB,0(R15)      TEST RECORD CONTROL BYTE
         BE    MBCGET1             BRANCH IF RCB MATCHES DEVICE RCB
         SPACE 1
         LR    R1,R15              OTHERWISE, GO TO
         BAL   ML,MBCNEXTR          RCB ANALYSIS SUBROUTINE
        $WAIT  WORK,SAVE=NO        WAIT FOR THE NEXT LOGICAL RECORD  R4
        $RESTORE REENTER=YES       SIMULATE RE-ENTRY                 R4
         SPACE 1                                                     R4
MBCGET1  TM    2(R15),X'80'        TEST FIRST STRING CONTROL BYTE    R4
         BZ    MBCGEOF             BR IF END OR TERMINATION OF FILE  R4
         MVC   PCER15(1),1(R15)    RETURN SRCB TO CALLER             R4
         SR    R0,R0               GET LENGTH
         IC    R0,MDCTRECL          OF INPUT AREA
SKIP60   LR    LINK,R0             BLANK
         SL    LINK,=F'2'           OUT
         MVI   0(R1),C' '             INPUT
         EX    LINK,MBCGMOV1           AREA                          R4
         SPACE 1
MBCGNEXT TM    2(R15),X'80'        TEST FOR END OF RECORD
         BZ    MBCGEOR             BRANCH IF END OF RECORD
         IC    LINK,2(R15)         PICK UP STRING CONTROL BYTE
         TM    2(R15),X'40'        TEST FOR DUPLICATE FIELD
         BO    MBCGNORM            BRANCH IF NOT DUPLICATE FIELD
         N     LINK,MFCON31        ISOLATE COUNT
         SR    R0,LINK             DECREMENT CARD BYTE COUNTER
         BM    MBCGERR             ERROR IF NEGATIVE
         TM    2(R15),X'20'        TEST FOR BLANK STRING
         BO    MBCGDUP             BRANCH IF NON-BLANK STRING
         AR    R1,LINK             ADVANCE TARGET ADDRESS
         LA    R15,1(,R15)         STEP TO NEXT STRING CONTROL BYTE
         B     MBCGNEXT            DECODE NEXT STRING
         SPACE 1
MBCGDUP  MVC   0(1,R1),3(R15)      SET FIRST DUPLICATE CHARACTER
         S     LINK,=F'2'          GENERATE COUNT-2
         BM    MBCGET3             DONE IF NEGATIVE
         EX    LINK,MBCGMOV1       PROPAGATE DUPLICATE CHARACTERS    R4
         SPACE 1                                                     R4
MBCGET3  LA    R1,2(LINK,R1)       ADVANCE TARGET ADDRESS
         LA    R15,2(,R15)         STEP TO NEXT STRING CONTROL BYTE
         B     MBCGNEXT            DECODE NEXT STRING
         SPACE 1                                                     R4
MBCGMOV1 MVC   1(*-*,R1),0(R1)     *** EXECUTE ONLY ***              R4
         EJECT                                                       R4
MBCGNORM N     LINK,MFCON63        ISOLATE COUNT
         BZ    MBCGERR             ERROR IF ZERO COUNT
         SR    R0,LINK             DECREMENT CARD BYTE COUNTER
         BM    MBCGERR             ERROR IF NEGATIVE
         BCTR  LINK,0              GENERATE COUNT-1
         EX    LINK,MBCGMOV2       COPY NON-DUPLICATE STRING         R4
         LA    R1,1(LINK,R1)       ADVANCE TARGET ADDRESS
         LA    R15,2(LINK,R15)     STEP TO NEXT STRING CONTROL BYTE
         B     MBCGNEXT            DECODE NEXT STRING
         SPACE 1                                                     R4
MBCGMOV2 MVC   0(*-*,R1),3(R15)    *** EXECUTE ONLY ***              R4
         SPACE 1                                                     R4
MBCGEOR  STCM  R1,7,PCER15+1       RTRN ADDR LAST BYTE +1 TO CALLER  R4
         CLI   DCTDEVTP,DCTRCON    TEST DEVICE TYPE                  R4
         BE    MBCGEOF             BRANCH IF REMOTE CONSOLE
         LA    R15,3(,R15)         STEP TO NEXT RECORD CONTROL BYTE
         B     MGETEXIT            EXIT
         SPACE 2
MBCGERR  OI    DCTFLAGS,DCTDELET   DELETE CURRENT JOB
         L     R1,DCTDCB           GET ADDRESS OF LINE DCT
         OI    DCTFLAGS-DCTDSECT(R1),DCTRSTRT     FORCE LINE RESTART
         LA    R15,TPBUFST+2       FORCE
         MVI   3(R15),0             END OF BUFFER
         SPACE 2
MBCGEOF  LA    R1,3(,R15)          STEP TO NEXT RECORD CONTROL BYTE
         ST    R1,TPBFDATA         UPDATE DATA POINTER
         OI    MDCTSTAT,DCTEOF     INDICATE EOF DETECTED             R4
         TM    2(R15),X'40'        TEST TYPE OF FILE ENDING          R4
         BO    MBCGTERM            BR IF TERMINATED BY TRANSMITTER   R4
         BAL   ML,MBCNEXTR         PROCESS THE NEXT RCB
         B     MBTAMXEX            GO TO RTAM EXCEPTION EXIT         R4
         SPACE 1                                                     R4
MBCGTERM BAL   ML,MBCNEXTR         PROCESS THE NEXT RCB              R4
         B     MBTAMXAB            GO TO RTAM ABNORMAL EXIT          R4
         EJECT                                                       R4
*
*                             2770/2780 GET ROUTINE
*
         SPACE 2                                                     R4
M27X0GET L     ML,DCTDCB           GET ADDRESS OF LINE DCT           R4
         TM    MDCTLINE-DCTDSECT(ML),DCTPASCI  TEST CODE TYPE
         BZ    MBHGNASC            BRANCH IF EBCDIC
         CL    R15,TPBLCCAD        TEST BUFFER STATUS
         BNE   MBHGNASC            BRANCH IF BUFFER HAS BEEN TRANSLATED
         LA    R14,TPBUFST         LOCATE START OF RJE BUFFER DATA   R4
         LH    WA,$BFSZBSC         OBTAIN RJE BUFFER DATA LENGTH     R4
         SPACE 1                                                     R4
M27X0TR1 CH    WA,=H'256'          IF REMAINING LENGTH NOT GT 256,   R4
         BNH   M27X0TR3             BR TO FINISH TRANSLATION         R4
         TR    0(256,R14),MBGASCII   ELSE TRANSLATE 256 BYTES        R4
         LA    R14,256(,R14)       THEN UPDATE BUFFER ADDRESS,       R4
         SH    WA,=H'256'           REDUCE BUFFER LENGTH,            R4
         B     M27X0TR1              AND BR TO CONTINUE TRANSLATION  R4
         SPACE 1                                                     R4
M27X0TR2 TR    0(*-*,R14),MBGASCII *** EXECUTE ONLY ***              R4
         SPACE 1                                                     R4
M27X0TR3 BCTR  WA,0                REDUCE LENGTH FOR EXECUTE         R4
         EX    WA,M27X0TR2         TRANSLATE TO END OF BUFFER        R4
         SPACE 1                                                     R4
MBHGNASC CLI   MDCTTYPE,DCTP2780   TEST TERMINAL TYPE                R4
         BNL   M2780GET            BRANCH IF NOT 2770                R4
         CLI   TPBUFST,MBCDSTX     TEST HEADER CHARACTER
         BE    MBHGNTRS            BRANCH IF NOT TRANSPARENT TEXT
         CL    R15,TPBLCCAD        TEST DATA POINTER
         BNE   *+8                 BRANCH IF NOT AT START OF BLOCK
         LA    R15,2(,R15)         SKIP OVER HEADER SEQUENCE
         MVC   0(80,R1),0(R15)     MOVE RECORD TO CALLER'S AREA
         LA    R15,80(,R15)        STEP TO START OF NEXT RECORD
         B     MGSOTEST            EXIT
         SPACE 1                                                     R4
M2780GET CLC   MDLESTX-MCODSECT+MEBCDIC,0(R15)    TEST HEADER SEQUENCE
         BE    MBHGTRSP            BRANCH IF TRANSPARENT TEXT
         SPACE 1                                                     R4
MBHGNTRS BCTR  R15,0               NO, BACK UP OVER MISSING DLE
         CLI   1(R15),MBCDSTX      TEST HEADER CHARACTER
         BE    *+6                 BRANCH IF NORMAL START OF TEXT
         BCTR  R15,0               NO, BACK UP OVER MISSING STX
         TM    $RJEOPTS,$BSVBOPT   TEST 2780 BLOCKING OPTION         R4
         BO    SKIP70              BR IF SELECTED                    R4
         CLI   MDCTTYPE,DCTP2780   TEST TERMINAL TYPE                R4
         BNL   MBHGTRSP            BRANCH IF NOT 2770                R4
SKIP70   LA    R0,5                SET TO SKIP FOUR CHARACTERS
         CLI   MDCTTYPE,DCTP2780   TEST TERMINAL TYPE                R4
         BNL   MBHGSRCH            SKIP IF NOT 2770                  R4
         BCTR  R0,0                SET TO SKIP THREE CHARATCERS      R4
         EJECT                                                       R4
MBHGSRCH LR    ML,R1               SAVE ADDRESS OF CALLER'S AREA     R4
         TRT   2(80,R15),M27X0TRT  SEARCH FOR TERMINATION CHARACTER  R4
         BZ    MBHGTRSP            BRANCH IF NOT FOUND
         SPACE 1
         MVI   0(ML),C' '          BLANK OUT
         MVC   1(79,ML),0(ML)       CALLER'S AREA
         LR    R14,ML              SET START OF CALLER'S AREA
         SPACE 1
MBHGNFLD LA    WA,3(,R15)          COMPUTE LENGTH
         LCR   WA,WA                OF NON-BLANK FIELD
         AR    WA,R1                 OR RECORD (-1)
         BM    *+8                 BRANCH IF LENGTH IS ZERO
         EX    WA,MBHGMVC          MOVE FIELD TO CALLER'S AREA
         CLI   0(R1),MBCDIGS       WERE COMPRESSED BLANKS FOUND
         BNE   MBHGNREC            BRANCH IF NOT
         LA    R15,3(WA,R15)       STEP TO NEXT INPUT FIELD
         LA    R14,1(WA,R14)       STEP TO START OF BLANK FIELD
         L     WA,DCTDCB           GET ADDRESS OF LINE DCT
         TM    MDCTLINE-DCTDSECT(WA),DCTPASCI  TEST CODE TYPE
         IC    WA,1(,R1)           WA = COMPRESSED BLANK CNT   @OZ56512
         BZ    MBHGASCN            BRANCH IF NOT ASCII         @OZ56512
         TR    1(1,R1),MBPASCII    RE-TRANSLATE BLANK COUNT          R4
         IC    WA,1(,R1)           WA = COMPRESSED BLANK COUNT       R4
         TR    1(1,R1),MBGASCII    BLANK COUNT BACK TO EBCDIC  @OZ56512
MBHGASCN N     WA,=F'63'           ACTUAL COUNT IS 6 LOW BITS  @OZ56512
         AR    R14,WA              SKIP BLANKS IN CALLER'S AREA
         LA    WA,79(,ML)          COMPUTE POTENTIAL MAXIMUM
         SR    WA,R14               LENGTH REMAINING INPUT (-1)
         BM    MBHGIREC            BR IF LGTH IS ZERO OR LESS
         EX    WA,MBHGTRT          SEARCH FOR ENDING CHARACTER       R4
         BNZ   MBHGNFLD            BRANCH IF FOUND
         EX    WA,MBHGMVC          MOVE LAST FIELD TO CALLER
         SPACE 1                                                     R4
MBHGIREC C     WA,=F'-1'           WAS BAD IGS DATA ENCOUNTERED
         BL    *+6                 IF YES, AVOID DEBLOCK LOOP
         SPACE 1
MBHGNREC AR    R15,WA              STEP
         AR    R15,R0               TO NEXT RECORD
         LR    R1,ML               GET ADDRESS OF CALLER'S AREA
         B     MGSOTEST            EXIT
         SPACE 1                                                     R4
MBHGMVC  MVC   0(*-*,R14),2(R15)   *** EXECUTE ONLY ***              R4
MBHGTRT  TRT   2(*-*,R15),M27X0TRT *** EXECUTE ONLY ***              R4
         SPACE 1                                                     R4
MBHGTRSP MVC   0(80,R1),2(R15)     MOVE 80 BYTES TO CALLER'S AREA
         LA    R15,83(,R15)        STEP TO START OF NEXT RECORD
         EJECT
*
*                             GET COMMON EXIT ROUTINES
*
         SPACE 3
MGSOTEST CLC   MSONCODE,0(R1)      CHECK FOR SIGN-ON CARD
         BNE   MGNXTREC            BRANCH IF NOT SIGN-ON
         SPACE 1                                               @OZ32567
         CLI   PCEID+1,PCEMLMID    IF LINE MANAGER,            @OZ32567
         BE    MGSOTST1              BR TO PROCESS SIGNON      @OZ32567
         SPACE 1                                                     R4
MGQSUSE $QSUSE TYPE=TEST           MAY QUEUES BE USED...             R4
         BZ    MGSOTST1            BR IF YES                         R4
         LM    LINK,BASE2,PCELINK  RELOAD CALLER'S REGISTERS         R4
         BAL   R15,$QSUSE          BR TO $QSUSE RTN (SAVE=NO ENTRY)  R4
        $RESTORE                   RESTORE ACCESS METHOD REGISTERS   R4
         LR    R1,R0               RELOAD SIGN-ON CARD ADDRESS
         B     MGQSUSE             BR TO RETEST QUEUES               R4
         SPACE 1                                                     R4
MGSOTST1 BAL   ML,MSIGNON          PROCESS SIGN-ON                   R4
         B     MGNXTBLK            READ NEXT DATA BLOCK
         SPACE 3
MGNXTREC CL    R15,BUFEWF          TEST FOR END OF DATA
         BL    MGETEXIT            BRANCH IF NOT TO NORMAL EXIT
MGNXTBLK BAL   ML,MEXCP            INITIATE READ OF NEXT BLOCK
         SPACE 3
MGETEXIT ST    R15,TPBFDATA        UPDATE DATA POINTER
         L     R1,PCER0            GET ADDRESS OF DATA CARD
         CLC   MSOFCODE,0(R1)      CHECK FOR SIGN-OFF CARD
         BNE   MBTAMXIT            EXIT IF NOT SIGN-OFF              R4
         L     R1,PCER1            GET ADDRESS OF REMOTE DCT         R4
         L     R0,PCER0            RELOAD CALLERS BUFFER ADDR       R41
         L     R15,DCTDCB-DCTDSECT(R1)  GET ADDRESS OF LINE DCT
         OI    MDCTSTAT-DCTDSECT(R15),DCTSOFF   SET SIGN-OFF FLAG
        $RESTORE REENTER=YES       SIMULATE RE-ENTRY                 R4
         TITLE 'HASP BSC REMOTE TERMINAL PUT ROUTINE'                R4
*
*                             REMOTE TERMINAL PUT ROUTINE
*
         SPACE 3
         USING RTAMBPUT,MBASE1     ESTABLISH PUT ADDRESSABILITY      R4
RTAMBPUT DS    0H                  ADDRESS OF RTAM BSC PUT ROUTINE   R4
         LR    R1,R0               MOVE SECOND PARAMETER TO R1
         CLI   0(R1),X'03'         TEST CHANNEL COMMAND TYPE
         BE    MBTAMXIT            RETURN IF NOP                     R4
         CLI   0(R1),X'FF'         TEST CHANNEL COMMAND TYPE
         BE    MPTRUNC             BRANCH IF BUFFER TRUNCATE
         SPACE 1
         LTR   MBUF,MBUF           TEST BUFFER ADDRESS
         BNZ   MPUTBUF             BRANCH IF NOT ZERO
         BAL   ML,MGETPBUF         GET AN OUTPUT BUFFER
         MVI   IOBCCW6+7,6         INITIALIZE DATA LENGTH
MPUTRTRY L     R1,PCER0            BRING BACK CCW ADDRESS            R4
         SPACE 2
MPUTBUF  SLR   R0,R0               SET R0 TO                         R4
         IC    R0,MDCTRECL          REMOTE DEVICE WIDTH
SKIP80   CLI   DCTDEVTP,DCTRPU     TEST DEVICE TYPE
         BE    MPUNCH              BRANCH IF REMOTE PUNCH
         SPACE 1
         TM    0(R1),X'02'         TEST CURRENT COMMAND TYPE
         BZ    MPNIMED             BRANCH IF NOT IMMEDIATE COMMAND
         TM    0(R1),X'80'         TEST CURRENT COMMAND TYPE
         BO    MPSKIP              BRANCH IF IMMEDIATE SKIP
         CLI   TPBLCCC,X'01'       TEST PREVIOUS COMMAND TYPE
         BE    MPSETCC             BRANCH IF WRITE/NO SPACE
         B     MPDUMMY             NO, GENERATE DUMMY LINE
         SPACE 1
MPSKIP   OI    TPBLCCC,X'02'       FORCE PREVIOUS COMMAND IMMEDIATE
         CLC   TPBLCCC,0(R1)       COMPARE PREVIOUS COMMAND TO CURRENT
         BE    MBTAMXIT            RETURN IF REDUNDANT SKIP          R4
         TM    TPBLCCC,X'80'       TEST PREVIOUS COMMAND TYPE
         BO    MPDUMMY             GENERATE DUMMY LINE IF SKIP
         CLI   TPBLCCC,X'63'       PREVIOUS CMD = FCB LOAD...  @OZ46011
         BE    MPDUMMY             YES,MAKE SKIP SEPERATE CMD  @OZ46011
         CLI   TPBRECNT,0          TEST RECORD COUNT
         BNE   MPSETCC             BRANCH IF BUFFER IS NOT EMPTY
         B     MPDUMMY             GENERATE DUMMY LINE
         EJECT                                                       R4
MPUNCH   MVI   0(R1),X'79'         SET PUNCH CHANNEL COMMAND
         SPACE 1
MPNIMED  LM    R1,WA,0(R1)         PICK UP CCW IN REGISTERS R1 & WA
         LA    R1,0(,R1)           CLEAR
         LA    WA,0(,WA)            HIGH-ORDER BYTES
         CLR   R0,WA               COMPARE LENGTH WITH MAXIMUM
         BNH   *+10                BRANCH IF LENGTH GREATER THAN MAX
         LTR   R0,WA               R0 = ACTUAL LENGTH
         BZ    MPDUMMY             GENERATE DUMMY LINE IF ZERO LENGTH
         SPACE 1
         LR    WA,R1               GENERATE ADDRESS
         AR    WA,R0                OF LAST BYTE
         BCTR  WA,0                SCAN BACKWARDS
         CLI   0(WA),C' '           ELIMINATING
         BNE   MPUT                  TRAILING
         BCT   R0,*-10                BLANKS
         SPACE 2
MPDUMMY  LA    R0,1                GENERATE ONE-BYTE
         LA    R1,=C' '             BLANK LINE
         SPACE 2
MPUT     DS    0H                                                    R4
         TM    MSEQTYPE,MBSCSEQ+MCPUSEQ TEST SEQUENCE TYPE
         BO    MBCPUPUT            BRANCH IF BSC PROGRAMMABLE INTERFACE
         SPACE 2
         CLC   TPBRECNT,TPBMXREC   TEST BUFFER RECORD COUNT          R4
         BNL   MPFLUSH             BRANCH IF LIMIT HAS BEEN REACHED
         B     M27X0PUT            BRANCH TO 2770/2780 PUT
         EJECT
*
*                             BSC CPU PUT ROUTINE
*
         SPACE 3
MBCPUPUT L     R15,$MWORK          GET ADDRESS OF WORK AREA          R4
         TM    MDCTLINE,DCTPTRSP   TEST FOR TRANSPARENCY
         BO    MBCPCOMP            BYPASS TRANSLATE IF YES
         TM    $PRTOPTS,$PRTRANS   TEST PRINT TRANSLATE OPTION       R4
         BZ    SKIP90              BR IF NOT SELECTED                R4
         SPACE 1
         CLI   DCTDEVTP,DCTRPR     TEST DEVICE TYPE
         BE    MBCPCOMP            BRANCH IF REMOTE PRINTER
         SPACE 1
SKIP90   LR    WA,R0               GET LENGTH OF LINE/CARD
         BCTR  WA,0                DECREMENT
         EX    WA,MBPUTRAN         TRAN ILLEGAL CHARS TO 40'S  @OZ56074
         SPACE 2
MBCPCOMP LA    WA,63               GET MAXIMUM NORMAL STRING LENGTH
         CLR   WA,R0               COMPARE WITH REMAINING LENGTH
         BNH   *+6                 BRANCH IF MAXIMUM LENGTH IS LESS
         LR    WA,R0               NO, USE REMAINING LENGTH AS MAXIMUM
         LR    R14,R1              GET ADDRESS OF FIRST DATA BYTE
         SPACE 2
MBCPLOOK CLC   1(1,R14),0(R14)     TEST NEXT TWO CHARACTERS
         BNE   MBCPINCR            BRANCH IF NOT START OF DUP STRING
         SPACE 1
         CLI   0(R14),C' '         TEST STRING TYPE
         BNE   *+12                BRANCH IF NOT START OF BLANK STRING
         CL    R0,=F'1'            CHECK NUMBER
         B     MBCPENDT             OF CHARACTERS REMAINING
         SPACE 1
         CLC   2(1,R14),0(R14)     TEST NEXT CHARACTER
         BNE   MBCPINCR            BRANCH IF NOT START OF DUP STRING
         CL    R0,=F'2'            CHECK NUMBER OF CHARACTERS REMAINING
MBCPENDT BH    MBCPNEND            BRANCH IF ENOUGH CHARS FOR DUP FIELD
         SPACE 1
MBCPINCR LA    R14,1(,R14)         ADVANCE TO NEXT CHARACTER
         BCTR  R0,0                DECREMENT REMAINING LENGTH
         BCT   WA,MBCPLOOK         DECREMENT MAXIMUM LENGTH
         SPACE 1
MBCPNEND SR    R14,R1              GENERATE NORMAL STRING LENGTH
         BZ    MBCPDUP             BRANCH IF DUPLICATE STRING
         STC   R14,0(R15)          SET LENGTH IN SCB
         OI    0(R15),X'C0'        INDICATE NORMAL STRING
         EX    R14,MBCPMOV         MOVE CHARACTER STRING (+1)        R4
         LA    R15,1(R14,R15)      ADVANCE OUTPUT STRING POINTER
         B     MBCPDONE            ADVANCE INPUT STRING POINTER
         SPACE 1                                                     R4
MBCPMOV  MVC   1(*-*,R15),0(R1)    *** EXECUTE ONLY ***              R4
         EJECT                                                       R4
MBCPDUP  LA    WA,31               GET MAXIMUM DUPLICATE STRING LENGTH
         CLR   WA,R0               COMPARE WITH REMAINING LENGTH
         BNH   *+6                 BRANCH IF MAXIMUM LENGTH IS LESS
         LR    WA,R0               NO, USE REMAINING LENGTH AS MAXIMUM
         LA    R14,2(,R1)          ADVANCE TWO CHARACTERS
         BCT   WA,MBCPSCAN         SCAN FOR END OF DUPLICATE FIELD
         SPACE 1
MBCPCLI  CLC   0(1,R14),0(R1)      TEST NEXT CHARACTER               R4
         BNE   *+12                BRANCH IF END OF DUPLICATE FIELD
         LA    R14,1(,R14)         NO, ADVANCE TO NEXT CHARACTER
MBCPSCAN BCT   WA,MBCPCLI          DECREMENT MAXIMUM LENGTH
         SPACE 1
         SR    R14,R1              GENERATE DUPLICATE STRING LENGTH
         STC   R14,0(R15)          SET LENGTH IN SCB
         OI    0(R15),X'80'        TURN ON HIGH-ORDER BIT
         SR    R0,R14              GENERATE REMAINING LENGTH
         CLI   0(R1),C' '          TEST STRING TYPE
         BNE   *+12                BRANCH IF NOT BLANK STRING
         LA    R15,1(,R15)         ADVANCE OVER SCB
         B     MBCPDONE            ADVANCE INPUT STRING POINTER
         SPACE 2
         OI    0(R15),X'20'        INDICATE DUPLICATE STRING
         MVC   1(1,R15),0(R1)      SET BYTE TO BE DUPLICATED
         LA    R15,2(,R15)         ADVANCE OUTPUT STRING POINTER
         SPACE 2
MBCPDONE ALR   R1,R14              ADVANCE INPUT STRING POINTER
         LTR   R0,R0               TEST REMAINING CHARACTER COUNT
         BP    MBCPCOMP            BRANCH IF NOT DONE TO COMPRESS
         SPACE 1
         MVI   0(R15),0            INSERT END OF RECORD SCB
         LA    R15,1(,R15)          AND ADVANCE POINTER
         B     MCPFILL             ADD COMPRESSED RECORD TO BUFFER
         EJECT
*
*                             2770/2780 PUT ROUTINE
*
         SPACE 3
M27X0PUT L     R15,TPBFDATA        GET ADDRESS OF NEXT DATA BYTE
         SPACE 1
         CLI   DCTDEVTP,DCTRPU     TEST DEVICE TYPE
         BNE   MBHPRINT            BRANCH IF NOT REMOTE PUNCH
         SPACE 2
         TM    MDCTLINE,DCTPTRSP   TEST FOR TRANSPARENCY
         BO    MBHPUNCH            BRANCH IF TRANSPARENCY
         SPACE 1
         LR    WA,R0               GET LENGTH OF CARD
         BCTR  WA,0                DECREMENT
         EX    WA,MBPUTRAN         TRAN ILLEGAL CHARS TO 40'S  @OZ56074
         B     MBHPRNHT            PROCESS AS PRINT
         EJECT
*
*                             2770/2780 PUNCH ROUTINE
*
         SPACE 3
MBHPUNCH CLI   TPBRECNT,0          TEST BUFFER STATUS
         BNE   MBHPUNXT            BRANCH IF BUFFER IS NOT EMPTY
         LA    R15,TPBUFST+36      INITIALIZE DATA POINTER
         CLI   MDCTTYPE,DCTP2780   TEST TERMINAL TYPE                R4
         BNL   SKIP100             BRANCH IF NOT 2770                R4
         LA    R15,TPBUFST+12      INITIALIZE 2770 DATA POINTER
SKIP100  CLI   IOBCCW6,X'08'       TEST FOR FIRST ENTRY
         BE    MBHPUNEW            BRANCH IF NOT FIRST ENTRY
         SPACE 1
         LA    R0,IOBCCW5          INITIALIZE
         LA    R1,MBSCSEQ+MWRITSEQ  CCW
         BAL   ML,MCCWINIT           CHAIN
         MVI   IOBCCW6,X'08'       CHANGE WRITE TO TIC
         B     MPUTRTRY            REENTER PUT PROCESSING            R4
         SPACE 2
MBHPUNXT CLI   MDCTTYPE,DCTP2780   TEST TERMINAL TYPE                R4
         BNL   MBHPUNEW            BRANCH IF NOT 2770                R4
         SL    R15,=F'6'           BACK UP DATA POINTER
         L     WA,TPBUFST+4        INCREMENT
         LA    WA,80(,WA)           CCW
         STH   WA,TPBUFST+6          BYTE COUNT
         B     MBHPUMOV            MOVE CARD INTO BUFFER
         EJECT                                                       R4
MBHPUNEW MVC   0(6,R15),MBHPUNCC   SET UP PUNCH CONTROL CHARACTERS
MBHPUMOV MVI   7(R15),C' '         BLANK OUT
         MVC   8(78,R15),7(R15)     COLUMNS 2-80
         BCTR  R0,0                GENERATE LENGTH-1
         LR    WA,R0               MOVE CARD                         R4
         EX    WA,MBHPMOV1          INTO BUFFER                      R4
         SPACE 1
         CLI   TPBRECNT,0          TEST BUFFER STATUS
         BE    MBHPU1ST            BRANCH IF FIRST CARD IN BUFFER
         LA    R0,86               GET NORMAL LENGTH
         CLI   MDCTTYPE,DCTP2780   TEST TERMINAL TYPE                R4
         BL    MBHPUPDT            BRANCH IF 2770                    R4
         B     *+12                MUST BE 2780
         SPACE 1
MBHPU1ST LA    R0,82               GET LENGTH OF FIRST CARD
         LA    R15,4(,R15)         GET START OF FIRST CARD
         SPACE 1
         L     WA,TPBLCCAD         GET ADDRESS OF CCW
         ST    R15,0(WA)           SET UP CCW DATA ADDRESS,
         MVI   0(WA),X'01'          CHANNEL COMMAND,
         MVC   4(2,WA),IOBCCW6+4     FLAG BITS, CCW TYPE,
         STH   R0,6(WA)               AND DATA LENGTH
         LA    WA,8(,WA)           STEP TO NEXT CCW
         LA    R1,IOBCCW7          GET ADDRESS OF WRITE ETB CCW
         ST    R1,0(WA)            SET UP
         MVI   0(WA),X'08'          TIC TO WRITE ETB
         ST    WA,TPBLCCAD         SAVE ADDRESS OF CCW
         SPACE 1
MBHPUPDT ALR   R15,R0              ADVANCE TO START OF NEXT RECORD
         IC    R1,TPBRECNT         GET RECORD COUNT
         ST    R15,TPBFDATA        UPDATE DATA ADDRESS
         LA    R1,1(,R1)           UPDATE
         STC   R1,TPBRECNT          RECORD COUNT
         B     MBTAMXIT            EXIT                              R4
         SPACE 1                                                     R4
MBHPMOV1 MVC   6(*-*,R15),0(R1)    *** EXECUTE ONLY ***              R4
         EJECT                                                       R4
*
*                             2770/2780 PRINT ROUTINE
*
         SPACE 3
MBHPRINT TM    $PRTOPTS,$PRTRANS   TEST PRINT TRANSLATE OPTION       R4
         BO    SKIP110             BR IF SELECTED                    R4
         LR    WA,R0               GET LENGTH OF LINE
         BCTR  WA,0                DECREMENT
         EX    WA,MBPUTRAN         TRAN ILLEGAL CHARS TO 40'S  @OZ56074
         SPACE 1
SKIP110  TM    MDCTFEAT,DCTPTAB    TEST FOR HORIZ FORMAT CONTROL
         BZ    MBHPRNHT            BYPASS COMPRESSION IF NOT
         SPACE 2
         L     R14,$MWORK          POINT TO WORK AREA                R4
         LR    ML,R0               MOVE PRINT LINE                   R4
         BCTR  ML,0                FOR LINE LENGTH             @OZ19490
         EX    ML,MBHCINIT          TO WORK AREA                     R4
         LR    R1,R0               R1 = ORIGINAL LENGTH
         BCTR  R14,0               PREPARE TO SCAN                   R4
         SPACE 1
MBHPRTGP SH    R0,$HTDIST          DECREMENT CHARACTER COUNT         R4
         BNP   MBHPRDHT            DONE IF NO CHARACTERS LEFT
         LH    WA,$HTDIST          PREPARE TO                        R4
         ALR   R14,WA               SCAN NEXT TAB GROUP              R4
         SPACE 1
MBHPRTBL CLI   0(R14),C' '         TEST NEXT CHARACTER
         BNE   MBHPRNBL            DONE IF NOT BLANK
         BCTR  R14,0               STEP TO
         BCT   WA,MBHPRTBL          NEXT CHARACTER
         SPACE 1
MBHPRNBL SH    WA,$HTDIST          GENERATE NUMBER OF BLANKS (MINUS) R4
         BNM   MBHPRTGP            BR IF NO BLANKS TO COMPRESS       R4
         LA    R14,1(,R14)         CORRECT CHARACTER POINTER
         BE    MBHPRTGP            BRANCH IF ONLY ONE BLANK
         SPACE 1
         LA    R1,1(WA,R1)         COMPUTE LENGTH OF COMPRESSED LINE
         MVI   0(R14),MBCDHT       INSERT
         LCR   WA,WA                TAB
         AR    WA,R14                CHARACTER
         LR    ML,R0               COMPRESS                          R4
         EX    ML,MBHPMOV2          BLANKS                           R4
         B     MBHPRTGP            SCAN NEXT TAB GROUP
         SPACE 1                                                     R4
MBHPMOV2 MVC   1(*-*,R14),0(WA)    *** EXECUTE ONLY ***              R4
         SPACE 1
MBHPRDHT LR    R0,R1               R0 = COMPRESSED LINE LENGTH
         L     R1,$MWORK           R1 = ADDRESS OF COMPRESSED LINE   R4
         B     MBHPRNC             GO TO PUT REC IN BUFFER
         EJECT                                                       R4
MBHPRNHT DS    0H                                                    R4
         TM    MDCTFEAT,DCTPPRES   TEST FOR COMPRESS FEATURE
         BZ    MBHPRNC             BRANCH IF NOT
         C     R0,=F'2'            IS LINE LONGER THAN TWO
         BNH   MBHPRNC             BRANCH IF NOT
         L     R14,$MWORK          POINT TO WORK AREA                R4
         LR    ML,R0               ML = LINE LENGTH
         BCTR  ML,0                ADJUST LENGTH FOR MOVE      @OZ19490
         EX    ML,MBHCINIT         MOVE LINE TO WORK AREA
         LR    ML,0                RESTORE LENGTH FOR COMPRES  @OZ19490
         LR    R1,R14              R1 = ADDR OF COMPRESSED LINE      R4
         LR    WA,R1               WA = ADDR OF UNCOMPRESSED LINE
         SPACE 1
MBHCLOOK CLI   0(WA),C' '          LOOK FOR START OF BLANK FIELD
         BNE   MBHCINCR            BRANCH IF NOT
         LA    R0,63               R0 = MAX BLANK FIELD LENGTH
         LR    R14,WA              R14 = ADDR OF FIRST BLANK
         B     *+12                GO TO SCAN FOR MORE BLANKS
         SPACE 1
MBHCSCNB CLI   0(WA),C' '          DOES BLANK FIELD CONTINUE
         BNE   MBHCENDB            BRANCH IF NOT
         LA    WA,1(,WA)           INCREMENT SCAN ADDR
         BCT   ML,*+10             BRANCH IF LINE NOT EXHAUSTED
         LR    R0,R14              R0 = ADDR OF LINE END +1
         B     MBHCLREC            GO COMPUTE COMPRESSED LENGTH
         BCT   R0,MBHCSCNB         LOOP IF MAX FIELD NOT EXCEEDED
         SPACE 1
MBHCENDB LR    R0,WA               R0 = ADDR OF FIELD END +1
         SR    R0,R14              R0 = BLANK FIELD LENGTH
         C     R0,=F'2'            IS FIELD LONGER THAN TWO
         BNH   MBHCINCR            BRANCH IF NOT
         MVI   0(R14),MBCDIGS      USE IGS TO START FIELD
         STC   R0,1(,R14)          FOLLOW WITH FIELD LENGTH
         OI    1(R14),X'40'        LENGTH MUST BE X'42' - X'7F'
         EX    ML,MBHCPRES         COMPRESS REMAINDER OF LINE
         TM    MDCTLINE,DCTPASCI   TEST CODE TYPE
         BZ    *+10                BRANCH IF NOT ASCII
         TR    1(1,R14),MBGASCII   PRE-TRANSLATE BLANK COUNT         R4
         LA    WA,2(,R14)          WA = ADDR OF LINE REMAINDER       R4
         B     MBHCLOOK            GO LOOK FOR NEXT BLANK FIELD
         SPACE 1
MBHCINIT MVC   0(*-*,R14),0(R1)    *** EXECUTE ONLY ***              R4
MBHCPRES MVC   2(*-*,R14),0(WA)    *** EXECUTE ONLY ***              R4
         EJECT                                                       R4
MBHCINCR LA    WA,1(,WA)           INCREMENT SCAN ADDR
         BCT   ML,MBHCLOOK         LOOP IF LINE NOT EXHAUSTED
         SPACE 1
         LR    R0,WA               R0 = ADDR OF LINE END +1
MBHCLREC SR    R0,R1               R0 = COMPRESSED LINE LENGTH
         BP    MBHPRNC             SET LENGTH TO ONE           @OZ59837
         LA    R0,1                 IF NOT POSITIVE            @OZ59837
MBHPRNC  CLI   MDCTTYPE,DCTP2780   TEST TERMINAL TYPE                R4
         BNL   MB2780PP            BRANCH IF NOT 2770                R4
         LA    WA,1                SET UP 2770 INITIAL BYTE COUNT
         LA    ML,511              SET FOR 512 MAXIMUM BLOCK
         TM    MDCTFEAT,DCTPABEX   IS 2770 BUFFER SIZE 512
         BO    MBHPNBAS            BRANCH IF YES
         LA    ML,255              SET FOR 256 MAXIMUM BLOCK
         TM    MDCTFEAT,DCTPBEXP   IS 2770 BUFFER SIZE 256
         BO    MBHPNBAS            BRANCH IF YES
         LA    ML,127              NO, RESET MAXIMUM BLOCK LENGTH
         SPACE 1                                                     R4
MBHPNBAS LR    R14,WA              PRESET 2770 PUNCH DISPLACEMENT    R4
         CLI   DCTDEVTP,DCTRPU     TEST DEVICE TYPE
         BE    MB2770PU            BRANCH IF REMOTE PUNCH
         B     MB2770PR            MUST BE REMOTE PRINTER            R4
         SPACE 1
MB2780PP MVI   0(R15),MBCDITB      INSERT ITB AFTER PREVIOUS RECORD
         SR    WA,WA               SET UP 2780 INITIAL BYTE COUNT
         SR    ML,ML               SET UP 2780 MAXIMUM BLOCK
         IC    ML,TPBRECNT          LENGTH AS 400 MINUS SPACE
         LCR   ML,ML                 FOR ETB AND LRC'S FOR THIS
         LA    ML,398(,ML)            RECORD AND PREVIOUS RECORDS
         SPACE 1
MB2770PR LA    R14,3               PRESET 2780/2770-PRINT DISPLACEMENT
         SPACE 1
MB2770PU ST    R14,$CSAVREG        SAVE DATA DISPLACEMENT            R4
         CLI   TPBRECNT,0          TEST BUFFER STATUS
         BNE   MBHPRNXT            BRANCH IF NOT FIRST RECORD
         MVI   0(R15),MBCDSTX      START FIRST RECORD WITH STX
         STH   WA,IOBCCW6+6        RESET BYTE COUNT
         SPACE 1
MBHPRNXT LR    WA,R0               WA = RECORD LENGTH
         TM    MDCTFMT,DCTPVAR     TEST RECORD FORMAT
         BO    MBHPRVAR            BRANCH IF VARIABLE LENGTH RECORDS
         CLI   DCTDEVTP,DCTRPU     TEST DEVICE TYPE
         BNE   MBHPRTAB            BRANCH IF NOT PUNCH         @OZ61024
         TM    MDCTFEAT,DCTPPRES   IF COMPRESSION IS BEING     @OZ61024
         BO    MBHPRVAR             USED, HANDLE AS VARIABLE   @OZ61024
         LA    WA,80               NO, USE PUNCH WIDTH
         B     MBHPRVAR             AS RECORD LENGTH
         SPACE 1                                               @OZ61024
MBHPRTAB DS    0H                                              @OZ61024
         TM    MDCTFEAT,DCTPTAB+DCTPPRES  TEST FOR TAB & COMPRESS
         BNZ   MBHPRVAR            ASSUME VAR RECS IF EITHER
         IC    WA,MDCTRECL         NO, USE REMOTE PRINTER WIDTH
         EJECT                                                       R4
MBHPRVAR ALR   R14,WA              COMPUTE ACTUAL RECORD LENGTH
         AH    R14,IOBCCW6+6       COMPUTE BLOCK LENGTH
         CR    R14,ML              COMPARE WITH MAXIMUM
         BH    MPFLUSH             FLUSH BUFFER IF TOO LARGE
         STH   R14,IOBCCW6+6       UPDATE BLOCK LENGTH
         SPACE 1
         CLR   WA,R0               COMPARE RECORD LENGTHS
         BE    MBHPPVAR            BRANCH IF NO BLANK FILL
         MVI   1(R15),C' '         BLANK
         EX    WA,MBHPRMOV          OUT IMAGE                        R4
         SPACE 1                                               @OZ28102
MBHPPVAR DS    0H                                              @OZ28102
         BCTR  R0,0                GENERATE LENGTH-1           @OZ28102
         LR    ML,R0               RELOAD LENGTH FOR EXECUTE   @OZ28102
         ST    R15,TPBLCCAD        SAVE ADDRESS OF CARRIAGE CONTROL
         AL    R15,$CSAVREG        GET RECORD LOCATION WITHIN BUFFER R4
         EX    ML,MBHPPMOV         MOVE RECORD INTO BUFFER           R4
         ALR   R15,WA              ADVANCE DATA POINTER              R4
         IC    R1,TPBRECNT         GET RECORD COUNT
         ST    R15,TPBFDATA        UPDATE DATA ADDRESS
         LA    R1,1(,R1)           UPDATE
         STC   R1,TPBRECNT          RECORD COUNT
         MVI   0(R15),MBCDIRS      INSERT IRS CHARACTER AFTER RECORD
         CLI   $CSAVREG+3,1        TEST FOR 2770 PUNCH               R4
         BNE   MPSETCC             ADD CARRIAGE CONTROL IF NOT
         B     MBTAMXIT            EXIT IF 2770 PUNCH                R4
         SPACE 1                                                     R4
MBHPRMOV MVC   2(*-*,R15),1(R15)   *** EXECUTE ONLY ***              R4
MBHPPMOV MVC   0(*-*,R15),0(R1)    *** EXECUTE ONLY ***              R4
         EJECT
*
*                             CPU PUT FILL ROUTINE
*
         SPACE 3
MCPFILL  SL    R15,$MWORK          GET LENGTH OF OUTPUT RECORD       R4
         BCTR  R15,0                MINUS 1                          R4
         LH    WA,IOBCCW6+6        PICK UP EXISTING LENGTH           R4
         LA    WA,3(WA,R15)        INCREMENT
         CH    WA,MDCTBFSZ          COMPARE WITH MAXIMUM       @OZ50955
*                                   THIS LINE DELETED BY APAR  @OZ50955
*                                   THIS LINE DELETED BY APAR  @OZ50955
         BH    MPFLUSH             FLUSH BUFFER IF TOO LARGE
         STH   WA,IOBCCW6+6        UPDATE BLOCK LENGTH               R4
         SPACE 2
         L     R1,TPBFDATA         GET ADDRESS OF NEXT DATA BYTE
         L     WA,$MWORK           POINT TO WORK AREA                R4
         SPACE 1                                                     R4
MCPFILL1 EX    R15,MCPFILMV        MOVE RECORD INTO BUFFER           R4
         SPACE 1                                                     R4
MCPFILL2 DS    0H                                                    R4
         ST    R1,TPBLCCAD         SAVE ADDRESS OF CARRIAGE CONTROL
         LA    R1,3(R1,R15)        INCREMENT DATA ADDRESS
         MVC   0(4,R1),MBCPEOB     ADD BUFFER TERMINATION            R4
         ST    R1,TPBFDATA         UPDATE DATA ADDRESS
         MVI   TPBRECNT,X'0F'      INDICATE RECORDS IN BUFFER
         B     MPSETCC             SET CARRIAGE CONTROL AND EXIT
         SPACE 1                                                     R4
MCPFILMV MVC   2(*-*,R1),0(WA)     *** EXECUTE ONLY ***              R4
         EJECT
*
*                             OUTPUT BUFFER FLUSH ROUTINE
*
         SPACE 3
MPTRUNC  LTR   MBUF,MBUF           TEST BUFFER ADDRESS
         BZ    MBTAMXIT            RETURN IF NO OUTPUT BUFFER        R4
         CLI   TPBRECNT,0          TEST BUFFER STATUS
         BE    MBTAMXIT            RETURN IF BUFFER IS EMPTY         R4
*              THIS LINE DELETED BY APAR NUMBER                @OZ48654
*              THIS LINE DELETED BY APAR NUMBER                @OZ48654
*              THIS LINE DELETED BY APAR NUMBER                @OZ48654
*              THIS LINE DELETED BY APAR NUMBER                @OZ48654
*              THIS LINE DELETED BY APAR NUMBER                @OZ48654
         MVI   0(R1),X'03'         CHANGE CHANNEL COMMAND TO NOP
         SPACE 2
MPFLUSH  DS    0H                  FLUSH OUTPUT BUFFER
         LA    R15,MEXCP           ASSUME NON-MULTI-LEAVING TERMINAL
         TM    MSEQTYPE,MBSCSEQ+MCPUSEQ      TEST SEQUENCE TYPE
         BNO   MPFLUSHW            BR IF NOT MULTI-LEAVING TERMINAL  R4
         LA    R15,MBCWRITE        GET ADDR OF MULTI-LEAVING ROUTINE R4
         TM    MDCTSTAT,DCTERMNR   TEST FOR TERMINATED BY RECEIVER   R4
         BO    MBTAMXAB            IF YES, GO TO RTAM ABNORMAL EXIT  R4
         SPACE 1                                                     R4
MPFLUSHW BALR  ML,R15              INITIATE WRITE                    R4
         CLI   DCTDEVTP,DCTRCON    TEST DEVICE TYPE
         L     R1,PCER1            R1 = DCT AD FOR POSSIBLE $RESTORE R4
         L     R0,PCER0            RESTORE RCP CCW ADDRESS     @OZ37122
         BE    MPFLRST             GO RE-ENTER IF REMOTE CONSOLE     R4
        $WAIT  WORK,SAVE=NO        WAIT FOR WRITE TO BE ACKNOWLEDGED R4
         SPACE 1                                                     R4
MPFLRST $RESTORE REENTER=YES       SIMULATE RE-ENTRY                 R4
         EJECT
*
*                             PUT CARRIAGE CONTROL AND EXIT ROUTINES
*
         SPACE 3
MPSETCC  L     WA,PCER0            GET ADDRESS OF CHANNEL COMMAND
         SR    R1,R1               CLEAR REGISTER
         IC    R1,0(WA)             AND INSERT CHANNEL COMMAND
         L     WA,TPBLCCAD         GET ADDRESS OF RECORD BEGINNING   R4
         STC   R1,TPBLCCC          SAVE CHANNEL COMMAND FOR NEXT ENTRY
         SRL   R1,3                GENERATE INDEX
         TM    MSEQTYPE,MCPUSEQ    TEST SEQUENCE TYPE
         BZ    MPSETBH             BRANCH IF 2770 OR 2780
         SPACE 1
MPSETRCB MVC   0(1,WA),MDCTRCB     SET UNIT RCB                      R4
         STC   R1,1(,WA)            AND SRCB
         OI    1(WA),X'80'         ADD HIGH-ORDER BIT
         B     MBTAMXIT            EXIT                              R4
         SPACE 1
MPSETBH  MVI   1(WA),MBCDESC       INSERT ESCAPE CHARACTER           R4
         CLI   MDCTTYPE,DCTP2780   TEST TERMINAL TYPE                R4
         BL    SKIP120             BRANCH IF 2770                    R4
         LA    R1,32(,R1)          INCREMENT INDEX FOR 2780
SKIP120  IC    R1,MP27X0CC(R1)     GET CARRIAGE CONTROL CHARACTER
         STC   R1,2(,WA)           INSERT IN RECORD
         TM    MDCTLINE,DCTPASCI   TEST CODE TYPE
         BZ    MBTAMXIT            EXIT IF EBCDIC                    R4
         XI    2(WA),X'80'         CONVERT CARRIAGE CONTROL TO USASCII
         B     MBTAMXIT            EXIT                              R4
         TITLE 'HASP BSC REMOTE TERMINAL CLOSE ROUTINE'              R4
*
*                             REMOTE TERMINAL CLOSE ROUTINE
*
         SPACE 3                                                     R4
         USING RTAMBCLO,MBASE1     ESTABLISH CLOSE ADDRESSABILITY    R4
RTAMBNCL DS    0H                  ADDRESS OF RTAM BSC NCLOSE RTN   R41
         SPACE 3                                                     R4
RTAMBCLO DS    0H                  ADDRESS OF RTAM BSC CLOSE ROUTINE R4
         SLR   WA,WA               REMEMBER CLOSE                    R4
         LTR   MBUF,MBUF           TEST BUFFER ADDRESS
         BZ    MCLOSE              IF ZERO, GO TO CPU CLOSE          R4
         TM    MSEQTYPE,MCPUSEQ    TEST SEQUENCE TYPE
         BZ    M27X0CLO            BRANCH IF NOT PROGRAMMABLE INTERFACE
         EJECT
*
*                             BSC CPU CLOSE ROUTINE
*
         SPACE 3
MCLOSE   DS    0H                  *                                 R4
         IC    R15,MDCTOPCT-DCTDSECT(R1)     DECREMENT
         BCTR  R15,0                          OPEN
         STC   R15,MDCTOPCT-DCTDSECT(R1)       COUNT
         SPACE 2
         CLI   DCTDEVTP,DCTRJR     TEST DEVICE TYPE
         BE    MBTAMXIT            EXIT IF REMOTE READER             R4
         CLI   DCTDEVTP,DCTRCON    TEST DEVICE TYPE                  R4
         BNE   MCLOPPN             BRANCH IF NOT REMOTE CONSOLE      R4
         LTR   MBUF,MBUF           TEST BUFFER ADDRESS               R4
         BZ    MBTAMXIT            IF ZERO, GO TO RTAM NORMAL EXIT   R4
         B     MCONCLOS            ELSE GO WRITE LAST BUFFER         R4
         SPACE 1                                                     R4
MCLOPPN  TM    DCTDEVTP,DCTPRPU    TEST DEVICE TYPE                  R4
         BZ    MCLOGBUF            BRANCH IF INPUT DEVICE            R4
         SPACE 1                                                     R4
         TM    MDCTSTAT,DCTERMNR   TEST DEVICE STATUS                R4
         BZ    MCLOTBUF            BRANCH IF NO RECEIVER TERMINATED  R4
         LTR   MBUF,MBUF           TEST BUFFER ADDRESS               R4
         BZ    MBTAMXAB            IF ZERO, GO TO RTAM ABNORMAL EXIT R4
        $FREEBUF (MBUF)            FREE THE BUFFER                   R4
         NI    MDCTSTAT,255-DCTPBUF  INDICATE NO BUFFER              R4
         B     MBTAMXAB            GO TO RTAM ABNORMAL EXIT          R4
         SPACE 1                                                     R4
MCLOTBUF LTR   MBUF,MBUF           TEST BUFFER ADDRESS               R4
         BNZ   MCLOPPNT            BRANCH IF NOT ZERO                R4
MCLOGBUF BAL   ML,MGETPBUF         GET AN OUTPUT BUFFER              R4
         MVI   IOBCCW6+7,6         INITIALIZE DATA LENGTH            R4
         MVC   TPBUFST+6(3),MBCPEOB+1  SET UP EOB                    R4
         SPACE 1                                                     R4
MCLOPPNT L     R1,TPBFDATA         GET ADDRESS OF EOB                R4
         TM    DCTDEVTP,DCTPRPU    TEST DEVICE TYPE                  R4
         BZ    MCLONR              BRANCH IF INPUT DEVICE            R4
         MVC   0(1,R1),MDCTRCB     REPLACE EOB WITH DEVICE RCB       R4
         STC   WA,2(,R1)           SET NORMAL OR TERMINATED EOF      R4
         B     MCLOSEND            GO SEND BUFFER                    R4
         SPACE 1                                                     R4
MCLONR   MVI   0(R1),X'C0'         SET NORMAL RECEIVER RESPONSE      R4
         TM    MDCTSTAT,DCTERMNR   TEST DEVICE STATUS                R4
         BZ    SKIP130             SKIP IN NOT TERMINATED BY RCVR    R4
         MVI   0(R1),X'B0'         SET RECEIVER TERMINATED RESPONSE  R4
SKIP130  MVC   1(1,R1),MDCTRCB     SET SRCB FROM DEVICE RCB          R4
         EJECT                                                       R4
MCLOSEND LH    R1,IOBCCW6+6        INCREMENT                         R4
         LA    R1,3(,R1)            DATA
         STH   R1,IOBCCW6+6          LENGTH
         SPACE 1
MCONCLOS MVC   BUFDCT+1(3),DCTDCB+1     NOP WRITE POST
         BAL   ML,MBCWRITE         QUEUE BUFFER FOR OUTPUT
         SPACE 1                                                     R4
         TM    DCTDEVTP,DCTRJE+DCTPRPU   TEST DEVICE TYPE      @OZ53297
         BNO   MCLNOTPP            BR IF NOT RMT PRINT/PUNCH   @OZ53297
         NI    MHASPECF+$EWBJOT,255-$EWFJOT  SHOW UNIT TO LM   @OZ53297
*              THIS LINE DELETED BY APAR NUMBER                @OZ32567
MCLNOTPP DS    0H                                              @OZ53297
*              THIS LINE DELETED BY APAR NUMBER                @OZ32567
*              THIS LINE DELETED BY APAR NUMBER                @OZ32567
         B     MBTAMXIT            EXIT                              R4
         EJECT                                                       R4
*
*                             2770/2780 CLOSE ROUTINE
*
         SPACE 3
M27X0CLO CLI   DCTDEVTP,DCTRJR     TEST DEVICE TYPE
         BE    MBHCLOSE            BRANCH IF REMOTE READER
         SPACE 3
         CLI   TPBRECNT,0          TEST BUFFER CONTENTS
         BNE   MBNECLOS            BRANCH IF NOT EMPTY         @OZ48654
         LA    R0,IOBCCW5          GET START OF CCW CHAIN      @OZ48654
         CLI   DCTDEVTP,DCTRPU     PUNCHES REQUIRE THE IOB TO  @OZ48654
         BNE   MBHNULLC              BE REINITIALIZED          @OZ48654
         LA    R1,MBSCSEQ+MWRITSEQ REBUILD WRITE CCW SEQUENCE  @OZ48654
         BAL   ML,MCCWINIT                                     @OZ48654
         LA    R0,IOBCCW5          REPAIR R0 FROM MCCWINIT     @OZ48654
         TM    MDCTLINE,DCTPTRSP   TRANSPARENCY...             @OZ48654
         BNO   MBHNULLC            NO, BUILD STXETX AS USUAL   @OZ48654
         MVC   TPBUFST(2),MDLESTX  SET UP TRANSPARENT STX      @OZ48654
         MVC   IOBCCW6+6(2),=XL2'0002' ADJUST WRITE LENGTH     @OZ48654
         B     MBNECLOS                                        @OZ48654
MBHNULLC DS    0H                  BUILD NULL BUFFER (STXETX)  @OZ48654
         ST    R0,IOBSTART         STORE IT IN                 @OZ48654
         ST    R0,IOBRESTR           THE IOB                   @OZ48654
         MVI   TPBUFST,MBCDSTX     SET STX,ETX SEQUENCE        @OZ48654
         XC    IOBCCW6+6(2),IOBCCW6+6  CLEAR COUNT FIELD       @OZ48654
         MVI   IOBCCW6+7,1           IF LAST BUFFER SENT       @OZ48654
MBNECLOS XI    IOBCCW7+3,METXSEQ-METBSEQ CONVERT ETB TO ETX    @OZ48654
         BAL   ML,MEXCP            WRITE LAST BUFFER
        $WAIT  WORK,SAVE=NO        WAIT FOR THE NEXT LOGICAL RECORD  R4
        $RESTORE                   RESTORE ACCESS METHOD REGISTERS   R4
         SPACE 2
MBHCLOSE LA    R0,IOBCCW3          SET UP BSC
         LA    R1,MBSCSEQ+MPREPSEQ  PREPARE
         BAL   ML,MCCWINIT           CCW SEQUENCE
         CLI   DCTDEVTP,DCTRJR     TEST DEVICE TYPE
         BE    MBHCEXCP            BRANCH IF REMOTE READER
         TM    $RJEOPTS,$ADDSYNS   TEST ADDITIONAL IDLES OPTION      R4
         BZ    SKIP150             BR IF NOT SELECTED                R4
         MVI   IOBCCW4,X'01'       ACTIVATE EOT WRITE
         MVI   IOBCCW4+4,X'A0'     SET DATA CHAINING
SKIP150  MVI   IOBCCW5,X'01'       ACTIVATE EOT WRITE                R4
         XI    IOBCCW5+3,MBSCEOT-MBSCENQ     CONVERT ENQ TO EOT
         SPACE 2
MBHCEXCP BAL   ML,MEXCP            INITIATE PREPARE SEQUENCE
*                                  THIS LINE DELETED BY APAR   @OZ53297
*                                  THIS LINE DELETED BY APAR   @OZ53297
         NI    MHASPECF+$EWBJOT,255-$EWFJOT  SHOW UNIT TO LINE MGR
         SPACE 2                                                     R4
         DROP  MDCT                RELEASE DCT ADDRESSABILITY        R4
         TITLE 'HASP BSC REMOTE TERMINAL ACCESS METHOD EXIT ROUTINE' R4
         USING DCTDSECT,R1         ESTABLISH DCT ADDRESSABILITY      R4
         SPACE 3                                                     R4
RTAMBSUB DS    0H                  RTAM BSC SUBROUTINE BASE ADDRESS  R4
         SPACE 3                                                     R4
*                                                                    R4
*                             BSC RTAM COMMON EXIT ROUTINE           R4
*                                                                    R4
         SPACE 3                                                     R4
MBTAMXIT DS    0H                  BSC RTAM NORMAL EXIT              R4
         LM    LINK,BASE2,PCELINK  RELOAD CALLER'S REGISTERS         R4
         NI    DCTSTAT,255-DCTRTAM SHOW RTAM PROCESSING COMPLETE     R4
         LPR   R0,R1               SET POSITIVE CONDITION CODE       R4
         BR    LINK                 AND RETURN                       R4
         SPACE 5                                                     R4
MBTAMXEX DS    0H                  BSC RTAM EXCEPTION EXIT           R4
         LM    LINK,BASE2,PCELINK  RELOAD CALLER'S REGISTERS         R4
         NI    DCTSTAT,255-DCTRTAM SHOW RTAM PROCESSING COMPLETE     R4
         LNR   R0,R1               SET NEGATIVE CONDITION CODE       R4
         BR    LINK                 AND RETURN                       R4
         SPACE 5                                                     R4
MBTAMXAB DS    0H                  BSC RTAM ABNORMAL EXIT            R4
         LM    LINK,BASE2,PCELINK  RELOAD CALLER'S REGISTERS         R4
         NI    DCTSTAT,255-DCTRTAM SHOW RTAM PROCESSING COMPLETE     R4
         SR    R0,R0               SET ZERO CONDITION CODE           R4
         BR    LINK                 AND RETURN                       R4
         SPACE 5                                                     R4
MBTAMXOV DS    0H                  BSC RTAM OVERFLOW EXIT            R4
         LM    LINK,BASE2,PCELINK  RELOAD CALLER'S REGISTERS         R4
         NI    DCTSTAT,255-DCTRTAM SHOW RTAM PROCESSING COMPLETE     R4
         TM    DCTSTAT,DCTINUSE    GET 'ONES' (OVERFLOW) COND. CODE  R4
         BR    LINK                 AND RETURN                       R4
         SPACE 2                                                     R4
         DROP  R1                  RELEASE DCT ADDRESSABILITY        R4
         TITLE 'HASP BSC REMOTE TERMINAL ACCESS METHOD SUBROUTINES'  R4
         USING DCTDSECT,MDCT       ESTABLISH DCT ADDRESSABILITY      R4
         SPACE 3
*
*                             BSC CPU GET OUTPUT BUFFER SUBROUTINE
*
         SPACE 1                                                     R4
MGETPBUF DS    0H                                                    R4
        $GETBUF MBUFWAIT,TYPE=BSC  GET TP BUFFER FOR OUTPUT          R4
         LR    MBUF,R1             SET UP BUFFER REGISTER
         ST    MBUF,DCTBUFAD       SET BUFFER ADDRESS IN DCT
         OI    MDCTSTAT,DCTPBUF    INDICATE BUFFER OWNERSHIP
         MVC   TPBUFST(2),MSTXSEQ  SET UP STX SEQUENCE
         MVI   TPBUFST+2,0         INITIALIZE BCB
         LA    R1,TPBUFST+5        INITIALIZE ADDRESSES OF
         ST    R1,TPBLCCAD          FIRST CARRIAGE CONTROL
         ST    R1,TPBFDATA           AND FIRST DATA BYTE
         ST    MDCT,BUFDCT         SET ADDRESS OF REMOTE DCT
         MVI   BUFTYPE,BUFBSC      RESET BUFFER TYPE                 R4
         LA    R1,MBSCSEQ+MCPUSEQ  SET UP
         B     MCCWINIT             CCW STRING
         SPACE 2
MBUFWAIT CLI   DCTDEVTP,DCTRCON    TEST DEVICE TYPE
         BE    MBTAMXIT            EXIT IF REMOTE CONSOLE            R4
         ST    ML,DCTEWF           SAVE RETURN ADDRESS
        $WAIT  BUF,SAVE=NO         WAIT FOR A BUFFER                 R4
        $RESTORE                   RESTORE ACCESS METHOD REGISTERS   R4
         L     ML,DCTEWF           RELOAD RETURN ADDRESS
         B     MGETPBUF            TRY AGAIN
         EJECT
*
*                             BSC CPU WRITE SUBROUTINE
*
         SPACE 3
MBCWRITE SR    R0,R0               CLEAR
         ST    R0,DCTBUFAD          BUFFER ADDRESS IN DCT
         NI    MDCTSTAT,255-DCTPBUF     INDICATE BUFFER IS QUEUED
         L     R1,DCTDCB           GET ADDRESS OF LINE DCT
         L     R1,MDCTOBUF-DCTDSECT(R1) GET ADDRESS OF QUEUED BUFFER
         LA    R1,0(,R1)           CLEAR HIGH-ORDER BYTE
         LTR   R0,R1               TEST IF BUFFER IS QUEUED
         BNZ   MBCWRCHN            BRANCH IF BUFFER IS QUEUED
         SPACE 1
         STM   MDCT,ML,MTEMPSAV    SAVE REGISTERS
         L     MDCT,DCTDCB         GET ADDRESS OF LINE DCT
         IC    R0,MDCTOPCT         SAVE OPEN COUNT
         ST    MBUF,MDCTOBUF       QUEUE BUFFER
         STC   R0,MDCTOPCT         RESTORE OPEN COUNT
         ST    R1,BUFCHAIN         TERMINATE CHAIN
         L     MBUF,DCTBUFAD       GET ADDRESS OF INPUT BUFFER
         BAL   ML,MINITIO          INITIATE I/O
         LM    MDCT,ML,MTEMPSAV    RESTORE REGISTERS
         BR    ML                   AND RETURN
         SPACE 2
MBCWRCHN LR    R1,R0               GET NEXT BUFFER IN OUTPUT QUEUE
         L     R0,BUFCHAIN-BUFDSECT(,R1)     GET CHAIN FIELD
         LTR   R0,R0               TEST FOR LAST BUFFER IN QUEUE
         BNZ   MBCWRCHN            BRANCH IF NOT LAST BUFFER
         SPACE 1
         ST    MBUF,BUFCHAIN-BUFDSECT(,R1)   ADD BUFFER TO CHAIN
         ST    R0,BUFCHAIN         TERMINATE CHAIN
         BR    ML                  RETURN
         EJECT
*
*                             BSC CPU RCB ANALYSIS SUBROUTINE
*
         SPACE 3
MBCNEXTR ST    ML,MSAVE            SAVE LINK REGISTER
         TM    0(R1),X'0F'         TEST RCB CODE
         BZ    MBCNXCTL            BRANCH IF CONTROL RECORD
         SPACE 1
         CLI   0(R1),X'92'         TEST RCB CODE
         BE    MBCNXOPC            BRANCH IF OPERATOR COMMAND
         SPACE 1
         IC    R1,0(R1)            GET RCB
         BAL   ML,MFINDCT          FIND ASSOCIATED DCT
         BZ    MBCNXEND            IGNORE REST OF BLOCK IF NONE FOUND
         TM    MDCTSTAT-DCTDSECT(R1),DCTERMNR  TEST DEVICE STATUS    R4
         BO    MBCNXEND            IGNORE BLK IF TERMINATED BY RCVR  R4
         L     ML,MSAVE            RESTORE LINK REGISTER
         TM    DCTDEVTP-DCTDSECT(R1),DCTPRPU  TEST DEVICE TYPE       R4
         BO    MBCNERR             RESTART IF NOT INPUT DEVICE       R4
         ST    MBUF,DCTBUFAD-DCTDSECT(R1) STORE ADDRESS OF INPUT BUFFER
         TM    DCTSTAT-DCTDSECT(R1),DCTINUSE  TEST DEVICE STATUS     R4
         BO    MBCNPOST            IF IN USE, GO POST                R4
         B     MBCNERR             RESTART IF NOT IN USE             R4
         SPACE 2
MBCNXCTL BAL   ML,MBCNTRLR         ANALYZE CONTROL RECORD
         SPACE 1
MBCNXEND MVI   TPBRECNT,C'E'       INDICATE EMPTY INPUT BUFFER
         L     ML,MSAVE            RESTORE LINK REGISTER
         CLI   DCTDEVTP,DCTLNE     TEST DEVICE TYPE
         BCR   E,ML                RETURN IF LINE MANAGER
         STM   MDCT,ML,MTEMPSAV    OTHERWISE, SAVE REGISTERS
         L     MDCT,DCTDCB         GET ADDRESS OF LINE DCT
         BAL   ML,MINITIO          INITIATE I/O
         LM    MDCT,ML,MTEMPSAV    RESTORE REGISTERS
         BR    ML                   AND RETURN
         EJECT                                                       R4
MBCNXOPC CLI   DCTDEVTP,DCTLNE     CHECK DCT TYPE FOR 'LINE',       R41
         BNE   MBCNXOPS              BRANCH AROUND IF NOT           R41
         OC    MDCTDCT,MDCTDCT     IGNORE CONSOLE INPUT IF          R41
         BZ    MBCNXEND              REMOTE NOT SIGNED ON           R41
MBCNXOPS L     R0,$MCONPCE         GET ADDR OF RMT CONSOLE PCE      R41
         LA    R15,$MCONMSG        PREPARE TO SCAN RMT CONSOLE QUEUE R4
         B     MBCNXOP               TO ADD BUFFER AT END            R4
MBCNXBUF LA    R15,TPBLCCAD-BUFDSECT(,R1)   ASSUME BSC BUFFER CHAIN  R4
         TM    BUFTYPE-BUFDSECT(R1),BUFTP+BUFIOB TEST ASUMPTN       R41
         BO    MBCNXOP             VALID, SKIP                      R41
         LA    R15,RPLNEXT-RPLDSECT(,R1)    USE SNA BUFFER CHAIN     R4
MBCNXOP  L     R1,0(,R15)          LOCATE NEXT BUFFER                R4
         LTR   R1,R1               TEST FOR CHAIN END                R4
         BNZ   MBCNXBUF            NO, CONTINUE SCANNING             R4
         ST    MBUF,0(,R15)        ADD NEW BUFFER AFTER LAST         R4
         ST    R1,TPBLCCAD         TERMINATE CHAIN                   R4
         SPACE 1                                                     R4
         LR    R15,R0              GET PCE TO POST                   R4
        $POST  (R15),WORK          FIRE UP PROCESSOR                 R4
         L     ML,MSAVE            RELOAD LINK REGISTER              R4
         BR    ML                  RETURN
         EJECT
*
*                             BSC CPU CONTROL RECORD ANALYSIS ROUTINE
*
         SPACE 3
MBCNTRLR CLI   0(R1),X'00'         TEST RCB CODE
         BCR   E,ML                RETURN IF END OF BLOCK
         ST    ML,MSAVE+4          SAVE LINK REGISTER                R4
         CLI   0(R1),X'90'         TEST RCB CODE
         BE    MBCNTREQ            BRANCH IF REQUEST FOR INPUT
         CLI   0(R1),X'C0'         TEST RCB CODE                     R4
         BNH   MBCNRRSP            BRANCH IF RESPONSE TO OUTPUT      R4
         CLI   0(R1),X'F0'         TEST RCB CODE
         BNER  ML                  BRANCH IF NOT GENERAL CONTROL REC R4
         SPACE 2                                                     R4
         CLI   1(R1),C'B'          TEST FOR DISCONNECT RECORD        R4
         BNE   SKIP190             SKIP IF NOT                       R4
         OI    DCTFLAGS,DCTRSTRT   SET TO RESTART LINE               R4
         BR    ML                  RETURN                            R4
SKIP190  LA    R1,2(,R1)           STEP TO FIRST CHARACTER
         SPACE 1                                               @OZ32567
         CLI   PCEID+1,PCEMLMID    IF LINE MANAGER,            @OZ32567
         BE    MSIGNON               BR TO PROCESS SIGNON      @OZ32567
*              THIS LINE DELETED BY APAR NUMBER                @OZ32042
         L     R1,$MWORK           POINT TO WORK AREA          @OZ32042
         MVC   0(L'MSOILMSG,R1),MSOILMSG  MOVE MSG TO AREA     @OZ32042
         LR    R0,MDCT             SAVE READER DCT ADDRESS     @OZ32042
         L     MDCT,DCTDCB         GET LINE DCT ADDRESS        @OZ32042
         OI    DCTFLAGS,DCTRSTRT   SET TO RESTART LINE         @OZ32042
         MVC   6(3,R1),DCTDEVN+4   MOVE LINE NUMBER TO MSG     @OZ32042
         LR    MDCT,R0             RESTORE READER DCT ADDRESS  @OZ32042
        $WTO   (R1),L'MSOILMSG,JOB=NO,WAIT=NO,   ISSUE ERROR   @OZ32042C
               ROUTE=$LOG+$TP,CLASS=$NORMAL,PRI=$ST            @OZ32042
         L     LINK,$EXTP          GET REG SETUP CODE BASE     @OZ32042
*              THIS LINE DELETED BY APAR NUMBER                @OZ32042
         BR    ML                  RETURN TO CALLER            @OZ32042
         SPACE 2                                                     R4
MBCNTREQ IC    R1,1(,R1)           LOCATE THE DCT                    R4
         BAL   ML,MFINDCT           WHICH MATCHES THE SRCB           R4
         L     ML,MSAVE+4          RELOAD LINK REGISTER              R4
         BZR   ML                  RETURN IF MATCH NOT FOUND         R4
         TM    MDCTSTAT-DCTDSECT(R1),DCTERMNR+DCTEOF  TEST STATUS    R4
         BNZ   MBCNTREF            BRANCH IF EOF HAS BEEN READ       R4
         TM    DCTSTAT-DCTDSECT(R1),DCTINUSE  TEST DEVICE STATUS     R4
         BO    MBCNERR             RESTART IF IN USE                 R4
MBCNTREF NI    DCTSTAT-DCTDSECT(R1),255-DCTHOLD  MAKE UNIT AVAILABLE R4
         B     MBCNPOST            GO POST                           R4
         EJECT                                                       R4
MBCNRRSP SLR   R15,R15             ASSUME NORMAL RESPONSE            R4
         CLI   0(R1),X'B0'         TEST RCB CODE                     R4
         BNE   SKIP200             SKIP IF NORMAL RESPONSE           R4
         LA    R15,DCTERMNR        SET FOR ABNORMAL RESPONSE         R4
SKIP200  IC    R1,1(,R1)           LOCATE THE DCT                    R4
         BAL   ML,MFINDCT           WHICH MATCHES THE SRCB           R4
         L     ML,MSAVE+4          RELOAD LINK REGISTER              R4
         BZR   ML                  RETURN IF MATCH NOT FOUND         R4
         TM    DCTDEVTP-DCTDSECT(R1),DCTPRPU  TEST DEVICE TYPE       R4
         BO    MBCNRFND            BRANCH IF OUTPUT DEVICE           R4
         BAL   ML,MFNDLOOP         LOCATE NEXT DCT MATCHING SRCB     R4
         L     ML,MSAVE+4          RELOAD LINK REGISTER              R4
         BZR   ML                  RETURN IF MATCH NOT FOUND         R4
MBCNRFND EX    R15,MBCNROI         SET RESPONSE TYPE                 R4
         SPACE 2                                                     R4
MBCNPOST L     R1,DCTPCE-DCTDSECT(,R1)  GET ADDRESS OF PCE           R4
        $POST  (R1),WORK           POST PROCESSOR
         BR    ML                  RETURN
         SPACE 1                                                     R4
MBCNERR  L     R1,DCTDCB-DCTDSECT(,R1)  GET ADDRESS OF LINE DCT
         OI    DCTFLAGS-DCTDSECT(R1),DCTRSTRT   RESTART LINE
         BR    ML                  RETURN
         SPACE 2                                                     R4
MBCNROI  OI    MDCTSTAT-DCTDSECT(R1),*-*  *** EXECUTE ONLY ***       R4
         EJECT
*
*                             BSC CPU DCT LOOKUP SUBROUTINE
*
         SPACE 3
MFINDCT  STC   R1,$POSTSAV         STORE RCB FOR COMPARE             R4
         LR    R1,MDCT             ASSUME MDCT IS A LINE DCT
         CLI   DCTDEVTP,DCTLNE     TEST DCT TYPE
         BE    MFNDLOOP            BRANCH IF DCT IS LINE
         L     R1,DCTDCB           NO, GET LINE DCT
         SPACE 2
MFNDLOOP L     R1,MDCTDCT-DCTDSECT(,R1) GET ADDRESS OF NEXT DCT
         LTR   R1,R1               TEST FOR END OF CHAIN
         BCR   Z,ML                RETURN IF MATCH IS NOT FOUND
         CLC   MDCTRCB-DCTDSECT(,R1),$POSTSAV  COMPARE RCB CODES     R4
         BNE   MFNDLOOP            KEEP LOOKING IF NOT EQUAL
         LTR   R1,R1               SET CONDITION CODE
         BR    ML                   AND RETURN
         EJECT
*
*                             SIGN-ON PROCESSOR
*
         SPACE 3
MSIGNON  ST    MDCT,MSOSAVE1       SAVE ADDRESS OF DCT
         CLI   DCTDEVTP,DCTLNE     TEST DCT TYPE
         BE    *+8                 BRANCH IF LINE DCT
         L     MDCT,DCTDCB         NO GET ADDDRESS OF LINE DCT
         SPACE 1
         TM    MDCTSTAT,DCTLEASE   TEST LINE DCT STATUS
         BZ    MSONCKPT            IF NOT LEASED, SIGNON       @OZ32567
         TM    MDCTSTAT,DCTSHARE   TEST FOR SHARED LINE              R4
         BZ    MSORETRN            NO, BR--IGNORE SIGN-ON IF LEASED  R4
         SPACE 2
MSONCKPT CLI   PCEID+1,PCEMLMID    IF NOT LINE MANAGER,        @OZ32567
         BNE   MSONSAVE              BR TO PROCESS SIGNON      @OZ32567
         $QSUSE TYPE=TEST          TEST SHARED QUEUE STATUS    @OZ32567
         BZ    MSONSAVE            QUEUES OWNED, CHK SIGNON    @OZ32567
         TM    MSEQTYPE,MCPUSEQ    IF INTELLIGENT TERMINAL..   @OZ32567
         BO    MREQBUF             GO REQUEUE BUFFER           @OZ32567
         TM    MDCTLINE,DCTPASCI   CHECK FOR ASCII..           @OZ32567
         BNO   MREQBUF             IF NOT ASCII, REQUEUE BFR   @OZ32567
         TR    TPBUFST(83),MBPASCII TRANSLATE SIGNON TO ASCI   @OZ32567
         B     MREQBUF                REQUEUE BUFFER           @OZ32567
MSONSAVE ST    R1,MSOSAVE2         SAVE ADDR OF SIGN-ON CARD IMAGE   R4
         ST    ML,MSOSAVE3         SAVE RETURN REGISTER
         BAL   ML,MABORT           ABORT ANY CURRENT ACTIVITY ON LINE
         BAL   ML,MDISCON          DISCONN ANY REMOTES ON LINE
         L     R1,MSOSAVE2         RESTORE ADDRESS OF SIGN-ON CARD
         L     ML,MSOSAVE3         RESTORE RETURN REGISTER
         SPACE 2
         LH    R0,$NUMRJE          R0 = MAX NUMBER OF REMOTES        R4
         LR    R14,R0              R14 = MAX NUMBER OF REMOTES
         L     WA,$RATABLE         GET ADDRESS OF RAT                R4
         USING RATDSECT,WA
         CLC   =C'REMOTE',15(R1)   REMOTE SPECIFIED?           @OZ25768
         BE    MSOSERCH            BRANCH IF YES               @OZ25768
         CLC   =C'RMT',15(R1)      RMT SPECIFIED?              @OZ25768
         BE    MSOSERCT            BRANCH IF YES               @OZ25768
         B     MSOILEGL            ILLEGAL SIGNON CARD         @OZ25768
MSOSERCH CLC   RATNAME+3(3),21(R1) DOES RATNAME MATCH SIGN-ON CARD
         BE    MSOFOUND            BRANCH IF YES
         LA    WA,RATTLE(,WA)      INCREMENT TO NEXT RAT ENTRY
         BCT   R0,MSOSERCH         LOOP THROUGH ALL RAT ENTRIES
         B     MSOILEGL            NO MATCH, SIGN-ON IS BAD
MSOSERCT CLC   RATNAME+3(3),18(R1) ALTERNATE SIGN0N AREA GOOD  @OZ25768
         BE    MSOFOUND            BRANCH IF YES               @OZ25768
         SPACE 2                                                    R41
         LA    WA,RATTLE(,WA)      INCREMENT TO NEXT RAT ENTRY @OZ25768
         BCT   R0,MSOSERCT         LOOP THROUGH ALL RATS       @OZ25768
         B     MSOILEGL            ILLEGAL SIGNON CARD         @OZ25768
MSOFOUND TM    RATTYPE,DCTPSNA     TEST FOR SNA TERMINAL            R41
         BO    MSOILEGL            BR IF YES, DISALLOW SIGNON       R41
         EJECT
         TM    MDCTSTAT,DCTSHARE   TEST FOR SHARED SIGN ON           R4
         BO    MSOSHARE            YES, BR - PROCESS SIGN-ON         R4
         OC    RATLDCT,RATLDCT     CHECK FOR RMT ALREADY SIGNED ON   R4
         BNZ   MSOILEGL            YES, BR -- SIGN-ON IS BAD         R4
MSOSHARE SLR   R14,R0              R14 = REMOTE NUMBER - 1           R4
         LR    R15,R14             MULTIPLY
         ALR   R15,R14              BY
         ALR   R15,R14               THREE
         SLR   R14,R14             DIVIDE BY EIGHT GIVING OFFSETS
         D     R14,=F'8'            TO BYTE (QUOT) AND BIT (REMAIN)
         AL    R15,$RMTSON         R15 = BYTE ADDR OF SIGNON BITS    R4
         L     R0,=A(QUEBUSY*X'2000')  GET BITS TO TEST BUSY
         SRL   R0,0(R14)           SHIFT TO BIT OFFSET
         STH   R0,MSONWORK         STORE FOR TEST
         NC    MSONWORK,0(R15)     IS REMOTE SIGNED ON OTHER SYSTEM
         BNZ   MSOILEGL            BRANCH IF YES, SIGN-ON IS BAD
         SLR   R0,R0               GET BUSY BITS
         ICM   R0,4,$SIDBUSY        FOR THIS SYSTEM
         SRL   R0,3(R14)           SHIFT TO BIT OFFSET
         STH   R0,MSONWORK         STORE FOR SET
         TM    MDCTSTAT,DCTLEASE   TEST FOR LEASED-SIGN-ON (SHARED)  R4
         BNO   MSONPSWD            NO, BR--PROCESS SIGN-ON           R4
         CLM   MDCT,7,RATLDCT+1    TEST FOR VALID LINE USER          R4
         BNE   MSOILEGL            NO, BR--SIGN-ON ILLEGAL           R4
         SPACE 2
MSONPSWD CLI   MDCTPSWD,C' '       TEST LINE PASSWORD                R4
         BE    *+14                BRANCH IF NONE
         CLC   MDCTPSWD,24(R1)     COMPARE WITH SIGN-ON CARD
         BNE   MSOILPSW            BRANCH IF NOT EQUAL
         CLI   RATPSWD,C' '        TEST REMOTE PASSWORD
         BE    MSOPSWOK            BRANCH IF NONE
         CLC   RATPSWD,72(R1)      COMPARE WITH SIGN-ON CARD
         BE    MSOPSWOK            BRANCH IF EQUAL
         MVC   24(8,R1),72(R1)     SAVE ILLEGAL PASSWORD
MSOILPSW MVC   15(8,R1),RATNAME    SAVE STD FMT RMT NAME       @OZ53165
         LR    WA,R1               SAVE SIGNON CARD ADDR       @OZ53165
         L     R1,$MWORK           POINT TO WORK AREA                R4
         MVC   0(L'MSOILPMS,R1),MSOILPMS  MOVE MSG TO WORK AREA      R4
         MVC   6(3,R1),DCTDEVN+4   MOVE LINE NUMBER TO MESSAGE       R4
        $WTO   (R1),L'MSOILPMS,JOB=NO,WAIT=NO,      ISSUE ERROR      R4C
               ROUTE=$LOG+$TP,CLASS=$NORMAL,PRI=$ST  MESSAGE
         OI    DCTFLAGS,DCTRSTRT   FORCE LINE RESTART
         CLI   $NUMSMFB,2          CHECK SMF OPTIONS           @OZ27491
         BL    MSORETRN            RETURN IF NO SMF REQUIRED   @OZ27491
        $GETSMFB WAIT=NO           GET SMF BUFFER
         BZ    MSORETRN            BRANCH IF NONE AVAILABLE
         USING SMFDSECT,R1
         MVI   SMFHDRTY,SMFISETP   SET INTEGRITY RECORD TYPE
         MVC   SMF49PSW,24(WA)     PUT ILLEGAL PASSWORD IN RECORD
         MVC   SMF49RMT,15(WA)      AND REMOTE NAME            @OZ53165
         B     MSOSMF              GO FINISH SMF RECORD
         EJECT                                                       R4
MSOPSWOK OC    0(2,R15),MSONWORK   INDICATE REMOTE ON THIS SYSTEM
         SPACE 2
         ST    MDCT,RATLDCT        STORE LINE DCT ADDRESS IN RAT
         ST    WA,MDCTRAT          STORE RAT ADDRESS IN LINE DCT
         LH    R15,RATBUFSZ        PICK UP BUFFER SIZE         @OZ50955
         SH    R15,=H'5'           REDUCE TO FILL SIZE               R4
         STH   R15,MDCTBFSZ        SET FILL AMOUNT                   R4
         L     R15,RATRDCT         GET FIRST REMOTE DCT ADDRESS
         ST    R15,MDCTDCT         STORE REMOTE ADDRESS IN LINE DCT
         L     LINK,$MLLMPCE                  INITIALIZE             R4
         MVC   MDCTIMOK,MCLOCK-PCEDSECT(LINK)  TRANSMISSION TIME     R4
         OI    MDCTATTN,MDCTJOB    SIMULATE JOB POST
         SPACE 2
         MVC   $POSTSAV(1),MDCTLINE  GET LINE FEATURES               R4
         TM    MDCTFEAT-DCTDSECT(R15),DCTPTRSP  TEST REMOTE TRSP
         BO    *+8                      BRANCH IF REMOTE IS TRANSPARENT
         NI    $POSTSAV,255-DCTPTRSP  NO, RESET TRANSPARENCY         R4
         NI    MDCTCODE+3,X'FB'    RESET TRANSPARENCY INDICATION
         TM    $POSTSAV,DCTPTRSP   TEST REMOTE/LINE TRANSPARENCY     R4
         BZ    *+8                 BRANCH IF BOTH ARE NOT TRANSPARENT
         OI    MDCTCODE+3,X'04'    YES, SET TRANSPARENCY INDICATION
         L     MCODE,MDCTCODE      GET ADDRESS OF CODE TABLE
         SPACE 2
MSOLOOP  MVC   MDCTLINE-DCTDSECT(,R15),$POSTSAV  SET LINE FEATURES   R4
         STCM  MDCT,7,DCTDCB+1-DCTDSECT(R15)  POINT RMT DCT TO LINE  R4
         NI    MDCTSTAT-DCTDSECT(R15),DCTABORT    AND RESET
         OI    MDCTSTAT-DCTDSECT(R15),DCTSINON  SET SIGN-ON FLAG
         MVC   MDCTBFSZ-DCTDSECT(,R15),MDCTBFSZ COPY CPU FILL AMOUNT R4
         L     R15,MDCTDCT-DCTDSECT(R15)     GET ADDRESS OF NEXT DCT
         LTR   R15,R15             TEST FOR END OF CHAIN
         BNZ   MSOLOOP             BRANCH IF NOT END OF CHAIN
         SPACE 1
         LR    R0,R1               SAVE SIGN-ON CARD ADDRESS         R4
         L     R1,$MWORK           POINT TO WORK AREA                R4
         MVC   0(L'MSOMSG,R1),MSOMSG  MOVE MSG TO WORK AREA          R4
         MVC   2(8,R1),RATNAME     PUT REMOTE ID AND LINE            R4
         MVC   26(3,R1),DCTDEVN+4   NUMBERS INTO MESSAGE             R4
         DROP WA                   KILL RAT ADDRESSABILITY           R4
         LR    WA,R0               SAVE SIGN-ON CARD ADDRESS         R4
        $WTO   (R1),L'MSOMSG,JOB=NO,WAIT=NO,  ISSUE SIGN-ON MESSAGE  R4C
               ROUTE=$LOG+$TP,CLASS=$NORMAL,PRI=$ST
         EJECT
         CLI   $NUMSMFB,2          CHECK SMF OPTIONS           @OZ27491
         BL    MSONOSMF            RETURN IF NO SMF REQUIRED   @OZ27491
        $GETSMFB WAIT=NO           GET SMF BUFFER
         BZ    MSONOSMF            BRANCH IF NONE AVAILABLE
         MVI   SMFHDRTY,SMFSSETP   SET START EVENT RECORD TYPE
MSOSMF   MVI   SMFRDW+1,SMF47END-SMFRDW  SET RECORD LENGTH
         MVI   SMF47EVT+1,SMFRMTEV SET REMOTE EVENT TYPE
         MVI   SMF47LN2+1,SMF47END-SMF47LN2  SET MESSAGE LENGTH
         MVC   SMF47MSG,34(WA)     MESSAGE IS COLS 35-70 FROM CARD
         BAL   WA,MSMF             GO FINISH SMF RECORD
         DROP  R1
         SPACE 2
MSONOSMF LA    WA,MSOEXIT          SET RETURN FROM TOTALING SUBRTN   R4
MTOTLXCP SR    R1,R1               INDEX STARTS AT ZERO
         LA    LINK,4              INCREMENT OF 4
         LA    R15,MDCTSXCP-MDCTXCP-1  LOOP TERMINATION INDEX
MTOTLOOP L     R0,MDCTXCP(R1)      GET LINE EXCP COUNT
         AL    R0,MDCTSXCP(R1)     ADD SESSION COUNT
         ST    R0,MDCTXCP(R1)      STORE NEW LINE COUNT
         BXLE  R1,LINK,MTOTLOOP    LOOP THROUGH ALL COUNTS
         XC    MDCTSXCP(MDCTSREM-MDCTSXCP+L'MDCTSREM),MDCTSXCP       R4C
                                   ZERO ALL SESSION COUNTS           R4
         BR    WA                  RETURN                            R4
         SPACE 2
MSOEXIT  CLC   MDCTDCT+1(3),MSOSAVE1+1  COMPARE NEW & OLD DCTS       R4
         L     MDCT,MSOSAVE1       RESTORE ADDRESS OF DCT
         BNE   *+8                 BYPASS RESET IF DIFFERENT
         NI    MDCTSTAT,255-DCTABORT  RESET ABORT INDICATION
         LA    WA,IOBCCW1          SHOW NO CPU TEXT SENT
         L     R0,IOBRESTR         SET UP
         IC    R1,MSEQTYPE          POSSIBLY NEW
         B     MCCWINIT              CCW SEQUENCE
         SPACE 2
MSOILEGL L     R1,$MWORK           POINT TO WORK AREA                R4
         MVC   0(L'MSOILMSG,R1),MSOILMSG  MOVE MSG TO WORK AREA      R4
         MVC   6(3,R1),DCTDEVN+4   MOVE LINE NUMBER TO MESSAGE       R4
        $WTO   (R1),L'MSOILMSG,JOB=NO,WAIT=NO,  ISSUE ERROR MESSAGE  R4C
               ROUTE=$LOG+$TP,CLASS=$NORMAL,PRI=$ST
         SPACE 1
         OI    DCTFLAGS,DCTRSTRT   FORCE LINE RESTART
MSORETRN L     MDCT,MSOSAVE1       RESTORE ADDRESS OF DCT
         LA    WA,IOBCCW1          SHOW NO CPU TEXT SENT
         BR    ML                  RETURN
         EJECT
*
*                             TRANSMISSION ABORT ROUTINE
*
         SPACE 1
MABORT   MVI   MDCTOPCT,0          RESET OPEN COUNT TO ZERO
         MVI   MDCTCMCT,0          ZERO CONSOLE MESSAGE COUNT        R4
         LA    R15,$MCONMSG        PREPARE TO SCAN MESSAGE QUEUE     R4
MABCON   LR    R1,R15              SAVE ADDRESS OF PREVIOUS BUFFER   R4
         L     R15,0(,R15)         GET ADDRESS OF NEXT BUFFER        R4
         LTR   R0,R15              SAVE CURRENT BFR ADDRESS & TEST   R4
         BZ    MABFREE             BRANCH IF BUFFER NOT FOUND        R4
         TM    BUFTYPE-BUFDSECT(R15),BUFTP+BUFRPL  TEST BUFTYPE     R41
         LA    R15,RPLNEXT-RPLDSECT(,R15)    ASSUME SNA CHAINING     R4
         BO    MABCON              IF SNA -- TRY NEXT BUFFER        R41
         SL    R15,=A((RPLNEXT-RPLDSECT)-(TPBLCCAD-BUFDSECT))          C
                                   ELSE USE BSC CHAINING             R4
         CL    R0,DCTBUFAD         COMPARE WITH LINE BUFFER ADDRESS  R4
         BNE   MABCON              CONTINUE SCAN IN NO MATCH         R4
         L     R0,0(,R15)          DECHAIN BUFFER                    R4
         ST    R0,0(,R1)             FROM CONSOLE MSG QUEUE          R4
MABFREE  L     R1,MDCTOBUF         GET ADDRESS OF NEXT BUFFER QUEUED
         LTR   R1,R1               TEST
         BZ    MABFREED            BRANCH IF NO MORE BUFFERS ARE QUEUED
         TM    DCTSTAT,DCTDRAIN    OPERATOR DRAINING LINE            R4
         BO    MABUDCHN            FREE BUFFERS IF YES               R4
         TM    DCTFLAGS,DCTRSTRT   OPERATOR SAY RESTART              R4
         BO    MABUDCHN            FREE BUFFERS IF YES               R4
         OC    MDCTDCT,MDCTDCT     ANY REMOTES ATTACHED              R4
         BZR   ML                  RETURN IF NOT                     R4
MABUDCHN MVC   MDCTOBUF+1(3),BUFCHAIN+1-BUFDSECT(R1) DE-QUEUE BUFFER R4
MABUFRE $FREEBUF (R1)              RETURN BUFFER TO POOL
         B     MABFREE             GET NEXT BUFFER
         EJECT                                                       R4
MABFREED NI    DCTFLAGS,255-DCTRSTRT INSURE RESTART BIT OFF          R4
         LR    R1,MDCT             PREPARE TO SCAN REMOTE DCTS       R4
MABPOST  L     R1,MDCTDCT-DCTDSECT(R1)  GET ADDRESS OF NEXT REMOTE DCT
         LTR   R1,R1               TEST FOR END OF CHAIN
         BCR   Z,ML                RETURN IF END OF CHAIN
         TM    MDCTSTAT-DCTDSECT(R1),DCTPBUF  TEST FOR OUTPUT BUF
         BZ    MABNOBUF            BRANCH IF NO OUTPUT BUFFER
         NI    MDCTSTAT-DCTDSECT(R1),255-DCTPBUF  RESET STATUS
         L     R1,DCTBUFAD-DCTDSECT(,R1)     GET ADDRESS OF BUFFER
         B     MABUFRE             FREE BUFFER
         SPACE 1
MABNOBUF OI    DCTSTAT-DCTDSECT(R1),DCTHOLD  FORCE DCT UNAVAILABLE   R4
         TM    DCTSTAT-DCTDSECT(R1),DCTINUSE TEST REMOTE DCT STATUS
         BZ    MABPOST             BRANCH IF DCT IS NOT IN USE
         MVI   MDCTSTAT-DCTDSECT(R1),DCTSINON+DCTABORT ABORT
         OI    DCTFLAGS-DCTDSECT(R1),DCTRSTRT+DCTBKSP  RESTART JOB
         NI    DCTFLAGS-DCTDSECT(R1),255-DCTSTOP  JUST IN CASE
         L     R15,DCTPCE-DCTDSECT(R1)  GET ADDRESS OF ASSOCIATED PCE
        $POST  (R15),(IO,WORK)     POST PROCESSOR FOR IO AND WORK
         B     MABPOST             GET NEXT REMOTE DCT
         EJECT
*
*                             REMOTE DISCONNECT ROUTINE
*
         SPACE 2                                                    R41
MDISCON  L     WA,MDCTDCT          GET ADDRESS OF REMOTE DCT
         LTR   WA,WA               TEST
         BCR   Z,ML                RETURN IF NOT SIGNED ON
         SPACE 1                                                     R4
MDSRESET OI    DCTSTAT-DCTDSECT(WA),DCTHOLD  SET REMOTE DCTHOLD      R4
         TM    MDCTSTAT,DCTSHARE+DCTLEASE TEST LINE STATUS
         BM    MDSNXRMT            IF LEASED, CHECK NEXT RMT DCT     R4
         NI    MDCTSTAT-DCTDSECT(WA),255-DCTSINON  RESET SIGN-ON
MDSNXRMT L     WA,MDCTDCT-DCTDSECT(,WA)  GET ADDR OF NEXT RMT DCT
         LTR   WA,WA               TEST FOR END OF CHAIN
         BNZ   MDSRESET            BRANCH IF NOT END OF CHAIN
         TM    MDCTSTAT,DCTLEASE+DCTSHARE  TEST LINE DCT STATUS      R4
         BMR   ML                  RETURN IF LEASED LINE             R4
         CLI   PCEID+1,PCEMLMID    IF NOT LINE MANAGER,        @OZ32567
         BNE   MDSCGO                 BR TO PROCESS DISCONNECT @OZ32567
         OI    DCTFLAGS,DCTRSTRT   TURN ON RESTART IN CASE REQ @OZ32567
         $QSUSE TYPE=TEST          TEST STATUS OF SHARED QUES  @OZ32567
         BNZ   MREQBUF             IF NOT OWNED, REQUEUE BUFR  @OZ32567
         NI    DCTFLAGS,255-DCTRSTRT  RESET RESTART IND        @OZ32567
         SPACE 1                                                     R4
MDSCGO   L     R1,MDCTDCT          SAVE RMT DCT ADDRESS        @OZ32567
         XC    MDCTDCT,MDCTDCT     CLEAR ADDR OF RMT DCT IN LINE
         L     WA,MDCTRAT          GET ADDRESS OF RAT                R4
         L     R15,$MWORK          POINT TO WORK AREA                R4
         MVC   0(L'MSFMSG,R15),MSFMSG MOVE MESSAGE TO WORK AREA      R4
         MVC   2(8,R15),RATNAME-RATDSECT(WA) RMT ID TO MSG           R4
         MVC   33(3,R15),DCTDEVN+4 INSERT LINE NUMBER INTO MESSAGE   R4
         SPACE 1                                                    R41
MDSRMT   DS    0H                                                    R4
*              THIS LINE DELETED BY APAR NUMBER                @OZ32567
         TM    MDCTSTAT,DCTSHARE   TEST FOR SHARED LINES             R4
         BO    MDSRMTE             YES, SKIP CLEARING RAT LINE PTR   R4
         XC    RATLDCT-RATDSECT(,WA),RATLDCT-RATDSECT(WA)  0 RATLDCT R4
MDSRMTE  SL    WA,$RATABLE         WA = (RMT NUMBER - 1) * RATTLE    R4
         LR    R15,WA              MULTIPLY
         ALR   R15,WA               BY
         ALR   R15,WA                THREE
         SLR   R14,R14             DIVIDE BY 8*RATTLE GIVING OFFSET
         D     R14,=A(RATTLE)       BY 8 GIVING OFFSET TO BIT        R4
         D     R14,=A(8)             (REMAIN) AND BYTE (QUOT)        R4
         AL    R15,$RMTSON         R15 = BYTE ADDR OF SIGNON BITS    R4
         L     R0,=A(-QUEBUSY*X'2000'-1)  GET BITS TO CLEAR BUSY
         SRL   R0,0(R14)           SHIFT TO BIT OFFSET
         STH   R0,MSONWORK         STORE FOR CLEAR
         NC    0(2,R15),MSONWORK   INDICATE REMOTE OFF SYSTEM
         EJECT                                                       R4
MDSWTO   L     R1,$MWORK           POINT TO WORK AREA                R4
        $WTO   (R1),L'MSFMSG,JOB=NO,WAIT=NO,  ISSUE DISCONNECT       R4C
               ROUTE=$LOG+$TP,CLASS=$NORMAL,PRI=$ST  MESSAGE
         CLI   $NUMSMFB,2          CHECK SMF OPTIONS           @OZ27491
         BL    MDSNOSMF            RETURN IF NO SMF REQUIRED   @OZ27491
        $GETSMFB WAIT=NO           GET SMF BUFFER
         BZ    MDSNOSMF            BRANCH IF NONE AVAILABLE
         USING SMFDSECT,R1
         MVI   SMF48EVT+1,SMFRMTEV SET REMOTE EVENT TYPE
         LA    WA,MDSNOSMF         SET RETURN FROM SMF SUBROUTINE
         SPACE 1
MSMF48   MVI   SMFRDW+1,SMF48END-SMFRDW  SET RECORD LENGTH
         MVI   SMFHDRTY,SMFPSETP   SET STOP EVENT RECORD TYPE
         MVC   SMF48CTR,MDCTCNTS   MOVE SESSION COUNT TO SMF RECORD  R4
         L     R15,DCTDCB          GET LINE ADAPTER ADDRESS          R4
         L     R15,DCBDEBAD-DCBDSECT(,R15)  FROM THE UCB             R4
         L     R15,DEBSUCBA-DEBDSECT(,R15)   AND STORE IT IN         R4
         MVC   SMF48ADP,UCBNAME-UCBDSECT(R15)  THE SMF RECORD        R4
         B     SKIP210             SKIP                              R4
         SPACE 1                                                     R4
MSMF     MVI   SMF47LN1+1,SMF47LN2-SMF47LN1  SET ID SECTION LENGTH   R4
SKIP210  MVI   SMFSSID+1,SMFHSPID  SET HASP SUBSYSTEM ID             R4
         LH    R0,SMFRDW           COMPUTE AND STORE LENGTH OF
         SH    R0,=Y(SMFSSTRT-SMFRDW)  THAT PORTION OF THE RECORD
         STH   R0,SMFSSLEN          FOLLOWING THE SUBSYSTEM HDR
         ICM   R15,15,MDCTRAT      ANYTHING CONNECTED                R4
         BZ    *+10                SKIP IF NOT
         MVC   SMF48RMT,RATNAME-RATDSECT(R15) SET IDENTIFICATION     R4
         MVC   SMF48LIN,DCTDEVN    SET LINE NAME IN RECORD
         CLI   SMF48PSW,0          IS PASSWORD ALREADY SET
         BNE   *+10                SKIP IF YES
         MVC   SMF48PSW,MDCTPSWD   SET PASSWORD FROM LINE
        $QUESMFB                   QUEUE THE SMF RECORD FOR OUTPUT
         DROP  R1
         BR    WA                  RETURN
MDSNOSMF XC    MDCTRAT,MDCTRAT     INDICATE NOTHING CONNECTED        R4
*              THIS LINE DELETED BY APAR NUMBER                @OZ29941
         BR    ML                  RETURN
         TITLE 'HASP BSC REMOTE TERMINAL CCW SETUP SUBROUTINE'       R4
MCCWINIT DS    0H                  INITIALIZE CCW'S IN IOB
         LA    MCODE,0(,MCODE)     CLEAR CONSOLE MSG COUNT          R41
         ST    R0,IOBSTART         SET IOBSTART
         ST    R0,IOBRESTR          AND IOBRESTR
         XC    IOBCCW1,IOBCCW1     CLEAR FIRST CCW
         STC   R1,MSEQTYPE         STORE SEQUENCE TYPE
         NI    MSEQTYPE,X'F0'      CLEAR POSSIBLE COMMAND TYPE
         MVC   IOBCCW2(7*8),IOBCCW1 PROPAGATE TO REST OF CCW'S
         LA    R0,LCBMCB           R0 = ADDRESS OF MODE CONTROL BYTE
         LA    R1,TPBUFST          R1 = ADDRESS OF FIRST DATA BYTE
         TM    MSEQTYPE,MPREPSEQ   TEST SEQUENCE TYPE
         BZ    MCCWRDW             BRANCH IF NOT PREPARE SEQUENCE    R4
         SPACE 3                                                     R4
         TM    MDCTLINE,DCTPCTC    TEST LINE TYPE                    R4
         BZ    MCCWBPRP            BRANCH IF NOT CTCA                R4
         ST    R0,IOBCCW1          SET SENSE ADDRESS FOR CCW1        R4
         LA    R0,MNAKSEQ          SET NAK                           R4
         ST    R0,IOBCCW2           ADDRESS FOR CCW2                 R4
         ST    R1,IOBCCW4          SET READ ADDRESS FOR CCW4         R4
         OC    IOBCCW1(4*8),MCTCCCW  SETUP FOUR CCWS                 R4
         MVI   IOBCCW1+4,X'20'     DECHAIN SENSE CCW1                R4
         OI    IOBCCW2+5,MWENQCMD  INDICATE CCW2 POTENTIAL SOH-ENQ   R4
         MVC   IOBCCW4+6(2),$BFSZBSC  SET READ LENGTH                R4
         BR    ML                  RETURN                            R4
         SPACE 2                                                     R4
MCCWBPRP ST    R0,IOBCCW2          SET ADDRESS OF SET MODE CCW       R4
         OC    IOBCCW1(3*8),MDISCCW SET UP FIRST THREE CCW'S
         ST    MCODE,IOBCCW4       SET ADDRESS OF SYNCH CCW
         LA    R0,MBSCENQ          R0 = ADDRESS OF ENQ CHARACTER
         ST    R0,IOBCCW5          SET ADDRESS OF WRITE ENQUIRY CCW
         OC    IOBCCW4(2*8),MWENQCCW    SET UP NEXT TWO CCW'S
         MVI   IOBCCW5,X'03'       NOP ENQUIRY WRITE                 R4
         ST    R1,IOBCCW6          SET ADDRESS OF READ CCW
         OC    IOBCCW6,MREADCCW    SET UP LAST CCW
         MVC   IOBCCW6+6(2),$BFSZBSC  SET READ LENGTH                R4
         BR    ML                  RETURN
         SPACE 2                                                     R4
MCCWRDW  LA    R15,LCBRCB          R15 = ADDRESS OF RESPONSE FIELD   R4
         TM    MDCTLINE,DCTPCTC    TEST LINE TYPE                    R4
         BZ    MCCWBRDW            BRANCH IF NOT CTCA                R4
         ST    R0,IOBCCW1          SET SENSE ADDRESS FOR CCW1        R4
         ST    R15,IOBCCW2         SET RESPONSE ADDRESS FOR CCW2     R4
         ST    R1,IOBCCW4          SET READ ADDRESS FOR CCW4         R4
         OC    IOBCCW1(4*8),MCTCCCW  SETUP FIRST FOUR CCWS           R4
         MVC   IOBCCW4+6(2),$BFSZBSC  SET READ LENGTH                R4
         MVC   IOBCCW5(4*8),IOBCCW1  SETUP LAST FOUR CCWS            R4
         OI    IOBCCW2+5,MWRSPCMD  INDICATE SENDING RESPONSE IN CCW2 R4
         STCM  R1,7,IOBCCW6+1      SET WRITE ADDRESS IN CCW6         R4
         OI    IOBCCW8+5,MWRITSEQ  INDICATE WRITE SEQUENCE IN CCW8   R4
         BR    ML                  RETURN                            R4
         EJECT                                                       R4
MCCWBRDW OC    IOBCCW1,MENBCCW     SET UP FIRST CCW
         ST    MCODE,IOBCCW2       SET ADDRESS OF SYNCH CCW
         TM    MSEQTYPE,MWRITSEQ   TEST SEQUENCE TYPE
         BZ    MCCWBSCR            BRANCH IF NOT WRITE
         SPACE 2
         LA    R0,MBSCENQ          R0 = ADDRESS OF ENQ CHARACTER
         ST    R0,IOBCCW3          SET ADDRESS OF WRITE ENQUIRY CCW
         ST    R15,IOBCCW4         SET ADDRESS OF READ RESPONSE CCW
         B     MCCWBSCW            SET UP REST OF CCW'S
         SPACE 2
MCCWBSCR ST    R15,IOBCCW3         SET ADDRESS OF WRITE RESPONSE CCW
         ST    R1,IOBCCW4          SET ADDRESS OF READ CCW
         OC    IOBCCW2(3*8),MWRSPCCW SET UP NEXT THREE CCW'S
         MVC   IOBCCW4+6(2),$BFSZBSC  SET READ LENGTH                R4
         TM    $RJEOPTS,$ADDSYNS   TEST ADDITIONAL IDLES OPTION      R4
         BZ    SKIP220             BR IF NOT SELECTED                R4
         MVI   IOBCCW2,X'01'       ACTIVATE ENQUIRY WRITE            R4
         MVI   IOBCCW2+4,X'A0'     SET DATA CHAINING                 R4
SKIP220  TM    MSEQTYPE,MCPUSEQ    TEST SEQUENCE TYPE
         BCR   Z,ML                RETURN IF NOT PROGRAMMABLE INTERFACE
         SPACE 2
MCCWBSCW ST    MCODE,IOBCCW5       SET ADDRESS OF SYNCH CCW
         ST    R1,IOBCCW6          SET ADDRESS OF WRITE CCW
         MVC   IOBCCW6+4(1),MBSCCWCH SET CCW BYTE FOR PROPER CHAINING
         LA    R0,METBSEQ          R0 = ADDRESS OF ETB SEQUENCE
         ST    R0,IOBCCW7          SET ADDRESS OF WRITE ETB SEQUENCE
         TM    MSEQTYPE,MCPUSEQ    TEST SEQUENCE TYPE
         BZ    MCCW27X0            BRANCH IF NOT PROGRAMMABLE INTERFACE
         SPACE 2
         OC    IOBCCW5(3*8),MWRITCCW SET UP NEXT THREE CCW'S
         MVC   IOBCCW8,IOBCCW4     SET UP LAST CCW
         OI    IOBCCW8+5,MWRITSEQ  INDICATE WRITE TEXT SEQUENCE
         TM    $RJEOPTS,$ADDSYNS   TEST ADDITIONAL IDLES OPTION      R4
         BZR   ML                  RETURN IF NOT SELECTED            R4
         MVI   IOBCCW5,X'01'       ACTIVATE ENQUIRY WRITE            R4
         MVI   IOBCCW5+4,X'A0'     SET DATA CHAINING                 R4
         BR    ML                  RETURN
         SPACE 2
MCCW27X0 DS    0H                  SET UP 2770/2780 WRITE CCW'S      R4
         ST    R15,IOBCCW8         SET ADDRESS OF READ RESPONSE CCW  R4
         OC    IOBCCW2(7*8),MWENQCCW SET UP LAST SEVEN CCW'S
         TM    $RJEOPTS,$ADDSYNS   TEST ADDITIONAL IDLES OPTION      R4
         BZR   ML                  RETURN IF NOT SELECTED            R4
         MVI   IOBCCW2,X'01'       ACTIVATE ENQUIRY WRITE            R4
         MVI   IOBCCW2+4,X'A0'     SET DATA CHAINING                 R4
         MVI   IOBCCW5,X'01'       ACTIVATE ENQUIRY WRITE            R4
         MVI   IOBCCW5+4,X'A0'     SET DATA CHAINING                 R4
         BR    ML                  RETURN
         TITLE 'HASP BSC CPU INPUT/OUTPUT INTERFACE'
MINITIO  CLI   IOBECBCC,0          TEST INPUT BUFFER STATUS
         BCR   NE,ML               RETURN IF INPUT BUFFER IS BUSY
         SPACE 2
         TM    MDCTFCS,X'40'       TEST REMOTE FCS
         BO    MINITACK            BRANCH IF WAIT-A-BIT
         OC    MDCTOBUF+1(3),MDCTOBUF+1 TEST OUTPUT BUFFER CHAIN
         BNZ   MINITWR             BRANCH IF BUFFER IS QUEUED
         TM    MDCTSTAT,DCTPOST    MAY OUTPUT BE READY SOON
         BZ    MINITDLY            BRANCH IF YES                     R4
         SPACE 1
MINITACK CLI   TPBRECNT,C'E'       TEST INPUT BUFFER STATUS
         BNE   MINITDLY            BRANCH IF INPUT BUFFER IS NOT EMPTY
         MVC   LCBRCB,MACK0SEQ     SET UP
         LA    R1,IOBCCW2           ACK0 SEQUENCE
         TM    MDCTLINE,DCTPCTC    TEST LINE TYPE                    R4
         BZ    MINITXCP            GO INITIATE I/O IF NOT CTCA       R4
         LA    R1,IOBCCW1          START AT CCW1 FOR CTCA            R4
         B     MINITXCP            INITIATE I/O
         SPACE 1                                                     R4
MINITDLY MVC   LCBRCB,MACK0SEQ     SET UP ACK0 SEQUENCE
         LA    R1,IOBCCW2          SET UP ADDRESS OF           @OZ74852
         TM    MDCTLINE,DCTPCTC     CCW2                             R4
         BZ    SKIP230              OR, IF CTCA,                     R4
MINITCDL LA    R1,IOBCCW1           CCW1 FOR                         R4
SKIP230  ST    R1,IOBRESTR          RESTART CCW
         OI    MDCTATTN,MDCTIMER   INDICATE TIMED ACTION REQUESTED
         L     R1,$MLLMPCE                    INDICATE $STIMER       R4
         OI    MSTQE+IPOST-PCEDSECT(R1),X'20'  REQUESTED             R4
         BR    ML                  RETURN
         SPACE 2                                                     R4
MINITWR  L     R15,MDCTOBUF        GET ADDRESS OF OUTPUT BUFFER
         MVC   IOBCCW6,IOBCCW6-BUFDSECT(R15) SET UP WRITE TEXT CCW
         MVC   TPBUFST+3-BUFDSECT(2,R15),MBASEFCS PRESET FCS
         LA    R1,IOBCCW5          SET FOR WRITE TEXT
         CLI   TPBRECNT,C'E'       TEST INPUT BUFFER STATUS
         BE    MINITXCP            BRANCH IF INPUT BUFFER IS EMPTY
         TM    MDCTLINE,DCTPCTC    TEST LINE TYPE                    R4
         BO    MINITWTC            SET UP CTC WAIT-A-BIT             R4
         SPACE 1
         MVC   IOBCCW2(4*8),IOBCCW5     MOVE CCW'S
         LA    R1,IOBCCW7          USE CCW AREA
         ST    R1,IOBCCW5          SET ADDRESS OF READ CCW
         MVI   IOBCCW5,X'02'       SET READ CCW
         MVC   IOBCCW5+5(3),MWABTEXT    SET COMMAND TYPE AND BYTE COUNT
         OI    TPBUFST+3-BUFDSECT(R15),X'40' SET WAIT-A-BIT
         LA    R1,IOBCCW2          SET FOR WRITE WABT TEXT
         SPACE 2
MINITXCP ST    R1,IOBSTART         SET IOBSTART
         ST    R1,IOBRESTR          AND IOBRESTR
         B     MERREXCP            INITIATE I/O
         TITLE 'HASP BSC REMOTE TERMINAL INPUT/OUTPUT INTERFACE'     R4
MINITWTC MVC   IOBCCW2(8),IOBCCW6  MOVE WRITE CCW                    R4
         LA    R1,IOBCCW7          USE CCW FOR                       R4
         ST    R1,IOBCCW4          SHORT READ                        R4
         MVI   IOBCCW4,X'02'       SET READ OP-CODE                  R4
         MVC   IOBCCW4+5(3),MWABTEXT SET CCW ID AND READ COUNT       R4
         OI    TPBUFST+3-BUFDSECT(R15),X'40' SET WAIT-A-BIT          R4
         LA    R1,IOBCCW1          SET START OF CCWS                 R4
         B     MINITXCP            INITIATE I/O                      R4
         SPACE 2                                                     R4
MEXCP    DS    0H                                              @OZ28291
         LR    R15,MDCT            SAVE DCT ADDR FOR ASCII     @OZ28291
         L     MDCT,DCTDCB         GET ADDR OF LINE DCT        @OZ28291
MEXCPNXT DS    0H                                                    R4
         XC    LCBACK,MBSCACKX     INVERT ACK TO SEND OR EXPECT
         MVC   LCBRCB(1),MBSCDLE   SET UP
         MVC   LCBRCB+1(1),LCBACK   RESPONSE
         SPACE 1
         TM    MDCTLINE,DCTPASCI   TEST CODE TYPE
         BZ    MEXCP1              BRANCH IF EBCDIC
         TM    MSEQTYPE,MWRITSEQ   TEST SEQUENCE TYPE                R4
         BZ    MEXCP1              BRANCH IF NOT WRITE SEQUENCE      R4
         SPACE 1
         LA    R14,TPBUFST         LOCATE START OF RJE BUFFER DATA   R4
         LH    R1,$BFSZBSC         OBTAIN RJE BUFFER DATA LENGTH     R4
         CLI   IOBCCW6,X'08'       TIC TO DATA AREA?           @OZ28291
         BNE   MEXCPTR1            NO?,BRANCH                  @OZ28291
         LA    R14,TPBUFST+36      INIT DATA ADDR FOR 2780     @OZ28291
         CLI   MDCTTYPE-DCTDSECT(R15),DCTP2780 TEST TERM TYPE  @OZ28291
         BNL   MEXCPTR1            BRANCH IF NOT 2770          @OZ28291
         LA    R14,TPBUFST+12      INIT DATA ADDR FOR 2770     @OZ28291
         SPACE 1                                                     R4
MEXCPTR1 CH    R1,=H'256'          IF REMAINING LENGTH NOT GT 256,   R4
         BNH   MEXCPTR3             BR TO FINISH TRANSLATION         R4
         TR    0(256,R14),MBPASCII   ELSE TRANSLATE 256 BYTES        R4
         LA    R14,256(,R14)       THEN UPDATE BUFFER ADDRESS,       R4
         SH    R1,=H'256'           REDUCE BUFFER LENGTH,            R4
         B     MEXCPTR1              AND BR TO CONTINUE TRANSLATION  R4
         SPACE 1                                                     R4
MEXCPTR2 TR    0(*-*,R14),MBPASCII *** EXECUTE ONLY ***              R4
         SPACE 1                                                     R4
MEXCPTR3 BCTR  R1,0                REDUCE LENGTH FOR EXECUTE         R4
         EX    R1,MEXCPTR2         TRANSLATE TO END OF BUFFER        R4
         SPACE 1                                                     R4
MERREXCP TM    MSEQTYPE,MBSCSEQ+MCPUSEQ  TEST SEQUENCE TYPE          R4
         BNO   MEXCP1              BRANCH IF NOT BSC CPU SEQUENCE
         SPACE 1
         TM    MDCTLINE,DCTPWIDE   TEST LINE TYPE
         BZ    MBCEXCP             BRANCH IF NOT WIDE BAND
         L     R1,MDCTDCT          GET ADDRESS OF REMOTE DCT
         CLI   MDCTTYPE-DCTDSECT(R1),DCTP20S2 TEST TERMINAL TYPE     R4
         BNE   MBCEXCP             BRANCH IF NOT 360/20 SUB-MODEL 2  R4
         EJECT                                                       R4
         L     R14,$MWORK          POINT TO WORK AREA                R4
         STCK  0(R14)              GET                               R4
         LM    R0,R1,0(R14)         TIME                             R4
         AL    R1,$DELAYTM         ADD MODEL 20 DELAY TIME           R4
         BC    12,*+8              BRANCH IF NO OVERFLOW
         AL    R0,=F'1'            PROPAGATE OVERFLOW INTO R0
         STM   R0,R1,0(R14)        SAVE UPDATED TIME                 R4
         STCK  8(R14)              GET NEW TIME                      R4
         CLC   0(8,R14),8(R14)     COMPARE WITH LIMIT                R4
         BH    *-10                DELAY...
         SPACE 2                                                     R4
MBCEXCP  L     R1,IOBSTART         GET ADDRESS OF FIRST CCW
         TM    4(R1),X'C0'         LAST CCW OF CHAIN                R41
         BZ    MEXCP1              BRANCH IF END OF CCWS            R41
         CLI   13(R1),MBSCSEQ+MCPUSEQ+MWRITCMD  TEST COMMAND TYPE    R4
         BNE   MEXCP1              BRANCH IF NOT BSC CPU WRITE TEXT
         SPACE 1
         L     R1,8(R1)            GET ADDRESS OF TEXT
         TM    2(R1),X'B0'         TEST BLOCK CONTROL BYTE
         BNZ   MEXCP1              BRANCH IF SET, IGNORE, OR RETRY
         SPACE 1
         MVN   2(1,R1),MDCTTSEQ    SET TRANSMIT BLOCK SEQUENCE COUNT
         OI    2(R1),X'80'         SET HIGH-ORDER BIT
         IC    R1,MDCTTSEQ         INCREMENT TRANSMIT
         LA    R1,1(R1)             BLOCK SEQUENCE
         STC   R1,MDCTTSEQ           COUNT
         SPACE 1
MEXCP1   CLI   DCTBUFCT,0          TEST ACTIVE I/O COUNT
         BNE   M02                 ERROR IF NOT ZERO
         NI    MDCTATTN,255-MDCTIMER-MDCTPAWS     RESET TIMER REQUESTS
         MVI   IOBXTENT,0          INSURE EXTENT BYTE IS CLEAR
        $EXCP  (MDCT)              INITIATE I/O
         BR    ML                  RETURN
         SPACE 1
M02     $ERROR                     LINE I/O SYNCHRONIZATION ERROR
         TITLE 'HASP BSC REMOTE TERMINAL CCW SKELETONS'              R4
***********************************************************************
*                                                                     *
*        HASP REMOTE TERMINAL CCW SKELETONS FOR BSC                   *
*                                                                     *
***********************************************************************
         SPACE 3                                                     R4
MDISCCW  $CCW  X'2F',0,X'60',1,MDISCMD       BSC DISABLE COMMAND     R4
         $CCW  X'23',*-*,X'60',1,MSETMCMD    BSC SET MODE COMMAND    R4
MENBCCW  $CCW  X'27',0,X'60',1,MENBCMD       BSC ENABLE COMMAND      R4
         SPACE 2                                                     R4
MWRSPCCW $CCW  X'03',*-*,X'60',4,MWRSPCMD  BSC SYNCH COMMAND         R4
         $CCW  X'01',*-*,X'60',2,MWRSPCMD    BSC WRITE RESPONSE COMMAND
MREADCCW $CCW  X'02',*-*,X'20',*-*,MREADCMD  BSC READ TEXT COMMAND   R4
         SPACE 2                                                     R4
MWENQCCW $CCW  X'03',*-*,X'60',4,MWENQCMD  BSC SYNCH COMMAND         R4
         $CCW  X'01',*-*,X'60',1,MWENQCMD    BSC WRITE ENQUIRY COMMAND
         $CCW  X'02',*-*,X'20',2,MRREQCMD  BSC READ RESPONSE TO ENQUIRY
MWRITCCW $CCW  X'03',*-*,X'60',4,MWRITCMD  BSC SYNCH COMMAND         R4
         $CCW  X'01',*-*,*-*,*-*,MWRITCMD    BSC WRITE TEXT COMMAND  R4
         $CCW  X'01',*-*,X'60',2,MWRITCMD    BSC WRITE ETB COMMAND   R4
         $CCW  X'02',*-*,X'20',2,MRRSPCMD    BSC READ RESPONSE TO TEXT
         SPACE 2                                                     R4
MCTCCCW  $CCW  X'14',*-*,X'60',1,MENBCMD  CTC SENSE ENDS OTHER CNTRL R4
         $CCW  X'01',*-*,X'60',2,MWRITCMD  CTC WRITE COMMAND         R4
         $CCW  X'07',0,X'60',1,MPREPCMD  CTC CONTROL WAITS FOR SENSE R4
         $CCW  X'02',*-*,X'20',*-*,MREADCMD  CTC READ COMMAND        R4
         TITLE 'HASP BSC REMOTE TERMINAL CODE TABLES'                R4
MCODSECT DSECT                     DEFINE CODE TABLE DSECT           R4
MBSCSYN  DS    2XL4                SYNCHRONOUS IDLE CHARACTERS       R4
MBSCSOH  DS    0X                  START OF HEADER CHARACTER         R4
MSOHSTX  DS    XL2                 NON-TRANSPARENT START OF TEXT SEQ R4
MBSCDLE  DS    0X                  DATA LINK ESCAPE CHARACTER        R4
MDLESTX  DS    XL2,XL4             TRANSPARENT START OF TEXT SEQUENCE
MSOHENQ  DS    XL2                 MULTI-LEAVING SIGN-ON SEQUENCE    R4
MSTXSEQ  DS    0XL2,X              START OF TEXT SEQUENCE            R4
MBSCSTX  DS    X,XL4               START OF TEXT CHARACTER           R4
METBSEQ  DS    0XL2,X              END OF TEXT BLOCK SEQUENCE        R4
MBSCETB  DS    X                   END OF TEXT BLOCK CHARACTER       R4
METXSEQ  DS    0XL2,X              END OF TEXT SEQUENCE              R4
MBSCETX  DS    X,XL4               END OF TEXT CHARACTER             R4
MACK0SEQ DS    0XL2,X              EVEN ACKNOWLEDGEMENT SEQUENCE     R4
MBSCACK0 DS    X                   EVEN ACKNOWLEDGEMENT CHARACTER    R4
MACK1SEQ DS    0XL2,X              ODD ACKNOWLEDGEMENT SEQUENCE      R4
MBSCACK1 DS    X,XL4               ODD ACKNOWLEDGEMENT CHARACTER     R4
MNAKSEQ  DS    0XL2,X              NEGATIVE ACKNOWLEDGEMENT SEQUENCE R4
MBSCNAK  DS    X                   NEGATIVE ACKNOWLEDGEMENT CHARACTER
MBSCACKX DS    X                   ACKNOWLEDGEMENT CONVERSION CHARACTER
MBSCCWCH DS    X,XL4               CCW CHAINING CHARACTER            R4
MBSCENQ  DS    X                   ENQUIRY CHARACTER                 R4
MDLEEOT  DS    0XL2,X              DISCONNECT SEQUENCE               R4
MBSCEOT  DS    X                   END OF TRANSMISSION CHARACTER     R4
MBSCWACK DS    X,XL4               WAIT BEFORE TRANSMIT              R4
HASPRTAM CSECT                                                       R4
         SPACE 3                                                     R4
MEBCDIC  DS    0D                  EBCDIC CODE TABLE                 R4
         DC    X'3232323232323232'                                   R4
         DC    X'0102100201021002'                                   R4
         DC    X'012D0102012D1002'                                   R4
         DC    X'3226320310261003'                                   R4
         DC    X'1070106110701061'                                   R4
         DC    X'323D11A0323D1160'                                   R4
         DC    X'2D10376B2D10376B'                                   R4
         SPACE 3                                                     R4
MUSASCII DS    0D                  USASCII CODE TABLE                R4
         DC    X'1616161616161616'                                   R4
         DC    X'0102100201021002'                                   R4
         DC    X'0105010201051002'                                   R4
         DC    X'1617160310171003'                                   R4
         DC    X'1030103110301031'                                   R4
         DC    X'161501A016150160'                                   R4
         DC    X'0510043B0510043B'                                   R4
         TITLE 'HASP BSC REMOTE TERMINAL CONSTANTS/MESSAGES'         R4
MSAVE    EQU   $MSAVE              GENERAL REGISTER SAVE AREA        R4
MSOSAVE1 EQU   MSAVE+8             SIGN-ON REGISTER SAVE AREA       R41
MSOSAVE2 EQU   MSAVE+12            SIGN-ON REGISTER SAVE AREA       R41
MSOSAVE3 EQU   MSAVE+16            SIGN-ON REGISTER SAVE AREA       R41
MFCON31  DC    F'31'               COMPRESSION/DECOMPRESSION CONSTANT
MFCON63  DC    F'63'               COMPRESSION/DECOMPRESSION CONSTANT
MBCPEOB  DC    X'00800000'         BSC END OF OUTPUT BUFFER SEQUENCE R4
MTEMPSAV EQU   $POSTSAV            TEMPORARY REGISTER SAVE AREA      R4
MBASEFCS DC    X'8FCF'             BASIC FUNCTION CONTROL SEQUENCE   R4
*                             WAIT-A-BIT WITH TEXT SEQUENCE          R4
MWABTEXT DC    AL1(MBSCSEQ+MWRITSEQ+MCPUSEQ+MRRSPCMD,0,16)           R4
*                             WAIT-A-BIT SEQUENCE                    R4
MWABTSEQ DC    AL1(MBSCSEQ+MCPUSEQ+MRRSPCMD,0,16),X'000090CFCF00'    R4
MBPUNSEL DC    AL1(MBCDSTX,MBCDESC,C'4')     2780 PUNCH SELECT       R4
MBHTREC  DC    AL1(MBCDESC,MBCDHT,C' ') 2770/2780 TAB INITIALIZATION R4
*                                  2780 PUNCH CONTROL CHARACTERS     R4
MBHPUNCC DC    AL1(MBCDDLE,MBCDITB,MBCDSYN,MBCDSYN,MBCDDLE,MBCDSTX)  R4
MB2770CD DC    0F'0',X'83000001'   2770 OUTPUT OPEN CONSTANT         R4
*                                                                    R4
MSONWORK EQU   $SONWORK            SIGN-ON WORK SPACE                R4
MSONCODE DC    CL9'/*SIGNON'       SIGN-ON CODE                      R4
MSOMSG   $MSG  200,'XXXXXXXX STARTED ON LINEMMM'  SIGN-ON MESSAGE    R4
MSOFCODE DC    CL10'/*SIGNOFF'     SIGN-OFF CODE                     R4
MSFMSG  $MSG   203,'XXXXXXXX DISCONNECTED FROM LINEMMM' DISC MSG     R4
MSOILPMS $MSG  201,'LINEMMM -- INVALID PASSWORD'  BAD PASSWORD MSG   R4
MSOILMSG $MSG  202,'LINEMMM -- INVALID SIGN-ON'  BAD SIGN-ON MSG     R4
MCDISCON DC    0CL27' ',X'900000F0C2D3'  CPU DISCONNECT              R4
         DC    C'REMOTE DISCONNECTED',X'0000'  MESSAGE               R4
         EJECT                                                       R4
         SPACE 5                                                     R4
         LTORG                                                       R4
         TITLE 'HASP BSC REMOTE TERMINAL TRANSLATE TABLES'           R4
MBPUTRAN TR    0(*-*,R1),MBSCTRAN  BSC TRANSLATE INSTRUCTION         R4
         SPACE 2                                                     R4
MBSCTRAN DS    0D            ILLEGAL BSC TO X'40' TRANSLATE    @OZ56074
*                                                                    R4
*                X0X1X2X3X4X5X6X7X8X9XAXBXCXDXEXF                   R41
*                                                                   R41
         DC    X'404040404005064040090A0B0C404040'  0X         @OZ56074
         DC    X'404040404040164040401A4040404040'  1X         @OZ56074
         DC    X'404040234025404040402A404040402F'  2X         @OZ56074
         DC    X'404040334040364038393A4040404040'  3X         @OZ56074
         DC    192AL1(*-MBSCTRAN)                   4X-FX           R41
         SPACE 5                                                     R4
MBGASCII DS    0D             USASCII TO EBCDIC TRANSLATE TABLE      R4
*                                                                    R4
*                X0X1X2X3X4X5X6X7X8X9XAXBXCXDXEXF                    R4
*                                                                    R4
         DC    X'00010203372D2E2F1605150B0C0D0E0F'  0X               R4
         DC    X'101112133C3D322618193F271C1D1E1F' 
         DC    X'405A7F7B5B6C507D4D5D5C4E6B604B61' 
         DC    X'F0F1F2F3F4F5F6F7F8F97A5E4C7E6E6F' 
         DC    X'7CC1C2C3C4C5C6C7C8C9D1D2D3D4D5D6' 
         DC    X'D7D8D9E2E3E4E5E6E7E8E9BBBCBDBE6D' 
         DC    X'E0818283848586878889919293949596' 
         DC    X'979899A2A3A4A5A6A7A8A9FB5FFDFE07' 
         SPACE 5                                                     R4
MBPASCII DS    0D             EBCDIC TO USASCII TRANSLATE TABLE      R4
*                                                                    R4
*                X0X1X2X3X4X5X6X7X8X9XAXBXCXDXEXF                    R4
*                                                                    R4
         DC    X'000102030009007F0000000B0C0D0E0F' 
         DC    X'10111213000A0800181900001C1D1E1F'  1X               R4
         DC    X'00000000000A171B0000000000050607' 
         DC    X'0000160000000004000000001415001A' 
         DC    X'20414243444546474849002E3C282B00'  4X               R4
         DC    X'264A4B4C4D000000000021242A293B7C'  5X               R4
         DC    X'2D2F5253000000000000002C255F3E3F' 
         DC    X'000000003400000000003A2340273D22' 
         DC    X'00616263646566676869000000000000' 
         DC    X'006A6B6C6D6E6F707172000000000000' 
         DC    X'0000737475767778797A000000000000' 
         DC    X'00000000000000000000005B5C5D5E00' 
         DC    X'00414243444546474849000000000000' 
         DC    X'004A4B4C4D4E4F505152000000000000' 
         DC    X'6051535455565758595A000000000000' 
         DC    X'30313233343536373839007B007D7E00' 
         TITLE 'HASP BSC REMOTE TERMINAL CARRIAGE CONTROL TABLES'    R4
         SPACE 5                                                     R4
MP27X0CC DS    0D             2770/2780 CARRIAGE CONTROL CHARACTERS  R4
*                                                                    R4
         DC    C'M/ST//////////A/'                                   R4
         DC    C'/ABCDEFGHIJKL///'                                   R4
         DC    C'//ST//////////A4' 
         DC    C'/ABCDEFGH///////'                                   R4
         SPACE 5                                                     R4
M27X0TRT DC    XL256'00'      2770/2780 TERMINATOR SEARCH TABLE      R4
         ORG   M27X0TRT+MBCDNL                                       R4
         DC    AL1(MBCDNL)         NEW LINE CHARACTER                R4
         ORG   M27X0TRT+MBCDIRS                                      R4
         DC    AL1(MBCDIRS)        INTER-RECORD CHARACTER            R4
         ORG   M27X0TRT+MBCDIGS                                      R4
         DC    AL1(MBCDIGS)        IGS CHARACTER                     R4
         ORG   M27X0TRT+MBCDEM                                       R4
         DC    AL1(MBCDEM)         END-OF-MEDIUM CHARACTER           R4
         ORG   M27X0TRT+256                                          R4
         SPACE 2                                                     R4
         DROP  MBASE1,MBASE2,MBASE3  DROP RTAM ADDRESSABILITY       R41
         TITLE 'HASP SNA REMOTE TERMINAL OPEN ROUTINE'               R4
*                                                                    R4
*                             VTAM OPEN PROCESSING                   R4
*                                                                    R4
         SPACE 2                                                     R4
*                                  ADDRESSABILITY --                R41
         USING ICEDSECT,MICE             -- ICE                     R41
         USING RPLDSECT,MBUF             -- RPL                     R41
         USING RTAMVSUB,MBASE2,MBASE3    -- COMMON SNA SUBROUTINES  R41
         SPACE 5                                                    R41
         USING RTAMVOPE,MBASE1     ESTABLISH SNA OPEN ADDRESSABILITY R4
RTAMVOPE DS    0H                  ENTRY POINT FOR RTAM SNA OPEN     R4
         TM    MDCTSEL,DCTPOUTB    TEST DIRECTION BIT                R4
         BZ    MVOINBND            IF INBOUND GO TO INBOUND OPEN     R4
         SPACE 1                                                     R4
*                             VTAM OPEN FOR OUTPUT                   R4
         SPACE 1                                                     R4
         TM    ICESTAT,ICEALLOC    TEST PRE-ALLOCATED ICE STATUS     R4
         BZ    MVOOUTBD            TRY OPEN IF ICE STILL AVAILABLE  R41
         CL    MDCT,ICERDCT        ELSE CHECK WHICH DCT ACTIVE      R41
         BNE   MVTAMXAB            FAIL OPEN IF ANOTHER DCT HAS ICE R41
         SPACE 1                                                    R41
MVOOUTBD OI    DCTPPSW,DCTPPSWC    FORCE PRPU FCB LOAD         @OZ29556
         BAL   ML,MVRPLGET         GET OUTPUT BUF FOR BDS      @OZ29556
         OI    ICESNDST,ICEOCPND   SET END CHN TO FORCE FMH SEND NOW R4
         BAL   ML,MVFMHBDS         BUILD, SEND, & GET +RSP TO BDS    R4
         B     MVTAMXIT            RETURN TO CALLER                  R4
         SPACE 3                                                     R4
*                             VTAM OPEN FOR INPUT                    R4
         SPACE 1                                                     R4
MVOINBND LTR   MBUF,MBUF           TEST BUFFER ADDRESS               R4
         BZ    MVTAMXAB            OPEN HAS TIMED OUT IF NONE--FAIL  R4
         L     R1,RPLRLEN          GET LENGTH OF UNUSED PART OF R.U. R4
         LA    ML,MVTAMXIT         POINT TO EXIT ROUTINE             R4
         LTR   R1,R1               TEST R.U. LENGTH                  R4
         BPR   ML                  RETURN IF NOT ZERO, LEAVE BUFFER    C
                                    FOR 'GET' TO PROCESS AND FREE    R4
         B     MVRELBUF            OTHERWISE FREE BUFFER NOW & EXIT  R4
         TITLE 'HASP SNA REMOTE TERMINAL GET ROUTINE'                R4
***********************************************************************
*                                                                     *
* SNA GET                                                             *
*                                                                     *
*                                                                     *
* REGISTER USAGE                                                      *
*                                                                     *
* RTC          R0                  TRANSPARENCY COUNT REMAINING       *
*              R1                  WORK REGISTER                      *
*              R2                  WORK REGISTER                      *
* RSC/MDCT     R3                  SCB COUNT REMAINING                *
* MBUF         R4                  RPL ADDRESS                        *
* RDP/MICE     R5                  DECOMPRESSED STRING POINTER        *
* RPC/ML       R6                  PROCESSOR BUFFER COUNT REMAINING   *
* MBASE1       R7                  SNA GET BASE ADDRESS               *
* MBASE2       R8                  SNA SUBROUTINES BASE ADDRESS       *
*              R9                   - NOT USED -                      *
* JCT          R10                 JCT ADDRESS                        *
* BASE1        R11                 HCT ADDRESS                        *
* RDC/BASE2    R12                 DECOMPRESSED STRING CNT REMAINING  *
* SAVE         R13                 PCE ADDRESS                        *
* LINK         R14                 RU SCAN ROUTINE RETURN ADDRESS     *
* RPP          R15                 PROCESSOR BUFFER POINTER           *
*                                                                     *
*                                                                     *
* SNA GET WORKAREA                                                    *
*                                                                     *
*              RPLSAVEA IS USED AS SNA GET WORK AREA BUT ONLY WHILE   *
*              IN A CHAIN OF RUS.  GET STATUS IS MOVED FROM ONE RPL   *
*              TO THE NEXT WHILE IN A CHAIN.                          *
*                                                                     *
* SGWFLAGS - NOT FIRST GET IN CHAIN SWITCH (SGWNFRST)                 *
*          - EXTRA EOR SWITCH (SGWXEOR)                               *
*          - DUPLICATE FIELD SWITCH (SGWDUP)                          *
*          - TRANSPARENCY SWITCH (SGWTRN)                             *
* SGWRSAVE - SAVES GET STATUS REGS 14-12 WHILE IN A CHAIN OF RUS      *
* SGWRUA   - POINTER TO NEXT BYTE OF RU TO BE SCANNED                 *
* SGWRUE   - POINTER TO END OF RU                              @OZ27441
*                                                                     *
***********************************************************************
         SPACE 3                                                    R41
*                                                                   R41
*                             SNA GET REGISTER DEFINITIONS          R41
*                                                                   R41
         SPACE 1                                                    R41
RTC      EQU   R0                  TRANSPARENCY COUNT REMAINING     R41
RSC      EQU   R3   *MDCT*         SCB COUNT REMAINING              R41
RDP      EQU   R5   *MICE*         DECOMPRESSED STRING POINTER      R41
RPC      EQU   R6   *ML*           PROCESSOR BUFFER COUNT REMAINING R41
RDC      EQU   R12  *BASE2*        DECOMPRESS STRING COUNT REMAININGR41
RPP      EQU   R15                 PROCESSOR BUFFER POINTER         R41
         EJECT                                                      R41
***********************************************************************
*                                                                     *
* RTAMVGET  --  SNA GET INITIALIZATION                                *
*                                                                     *
* INITIALIZATION IS ENTERED EVERY TIME A $EXTPGET IS DONE.            *
* INITIALIZATION GETS AN RPL IF NECESSARY AND CALLS THE RU SCAN       *
* ROUTINE (MVGSCN) FOR THE FIRST RU IN A CHAIN.  ON SUBSEQUENT        *
* ENTRIES INITIALIZATION RESTORES SAVED STATUS AND CALLS THE MOVE     *
* SUBROUTINE (MVGMVE) TO BEGIN FILLING THE PROCESSOR BUFFER.          *
*                                                                     *
***********************************************************************
         SPACE 1                                                    R41
         USING RTAMVGET,MBASE1                                      R41
         SPACE 1                                                    R41
*                             DETERMINE IF FIRST GET OF RU CHAIN    R41
         SPACE 1                                                    R41
RTAMVGET LTR   MBUF,MBUF           IF THERE IS NO RPL BUFFER        R41
         BZ    MVGNBUF              GO GET ONE                      R41
         TM    SGWFLAGS,SGWNFRST   IF GET HAS NOT USED THIS RPL     R41
         BNO   MVGFRST              GO INIT FOR START OF CHAIN      R41
         SPACE 1                                                    R41
*                             NOT THE FIRST GET OF THE CHAIN        R41
         SPACE 1                                                    R41
         MVC   SGWRPP(4),PCER0     SAVE PROCESSOR BUFFER ADDRESS    R41
         MVC   SGWRPC+3(1),MDCTRECL SAVE PROCESSOR LRECL            R41
         LM    R14,R12,SGWRSAVE    RESTORE GET STATUS REGISTERS     R41
         B     MVGMVE              BEGIN FILLING PROCESSOR BUFFER   R41
         SPACE 1                                                    R41
*                             FIRST GET OF THE CHAIN, NO RPL BFR    R41
         SPACE 1                                                    R41
MVGNBUF  BAL   ML,MVREQBUF         GET NEXT RPL BUFFER              R41
         LTR   MBUF,MBUF           IF NO BUFFER RETURNED            R41
         BZ    MVGDUMMY             GO CREATE DUMMY RECORD          R41
         SPACE 1                                                    R41
*                             FIRST GET, GET HAS AN RPL BUFFER      R41
         SPACE 1                                                    R41
MVGFRST  OI    SGWFLAGS,SGWNFRST   SET NOT FIRST GET OF CHAIN       R41
         L     RPP,PCER0           INIT PROCESSOR BUFFER ADDR       R41
         XR    RPC,RPC             INIT PROCESSOR                   R41
         IC    RPC,MDCTRECL         BUFFER COUNT                    R41
         XR    RTC,RTC             INIT TRANSPARENCY COUNT          R41
*              THIS LINE DELETED BY APAR NUMBER                @OZ27441
         EJECT                                                      R41
***********************************************************************
*                                                                     *
* MVGSCN  --  RU SCAN ROUTINE                                         *
*                                                                     *
* THE RU SCAN ROUTINE DECODES THE SCB AND PERFORMS AN SCS SCAN ON     *
* THE STRING OF DATA BEFORE CALLING THE MOVE SUBROUTINE (MVGMVE) TO   *
* PLACE THE DATA IN THE PROCESSOR BUFFER.  NON-COMPRESSED DATA IS     *
* MADE TO APPEAR AS A NON-DUPLICATE STRING NO GREATER THAN 256        *
* BYTES.  WHEN ONE RU ENDS THE RU SCAN ROUTINE CALLS THE EMPTY RU     *
* SUBROUTINE (MVGEMTY) TO GET THE NEXT RU.                            *
*                                                                     *
***********************************************************************
         SPACE 1                                                    R41
MVGSCN   L     RDP,RPLAREA         POINT TO START OF RU             R41
         ST    RDP,SGWRUA          SAVE START OF RU                 R41
         L     R1,RPLRLEN          POINT TO                         R41
         AR    RDP,R1               END OF RU                       R41
         ST    RDP,SGWRUE          SAVE END OF RU                   R41
         L     MDCT,PCER1          POINT TO DEVICE DCT              R41
         TM    MDCTFMT,DCTPPRES    IF COMPRESSED                    R41
         BO    MVGSCB               GO DECODE SCB                   R41
         SPACE 1                                                    R41
*                             NON-COMPRESSED RU                     R41
         SPACE 1                                                    R41
*              THIS LINE DELETED BY APAR NUMBER                @OZ27441
*              THIS LINE DELETED BY APAR NUMBER                @OZ27441
*              THIS LINE DELETED BY APAR NUMBER                @OZ27441
MVGSCN1  LR    RSC,R1              GET RU LENGTH INTO RSC      @OZ27441
         L     RDP,SGWRUA          SAVE NEW                    @OZ27441
         LA    R1,0(RDP,RSC)        END OF RU                       R41
         ST    R1,SGWRUE             POINTER                        R41
         L     R1,PCER1            POINT TO DEVICE DCT              R41
         TM    MDCTFMT-DCTDSECT(R1),DCTPALTC IF NOT ASCII           R41
         BNO   MVGSNS1                        GO HANDLE AS NON-DUPL R41
         SPACE 1                                                    R41
         CH    RSC,=H'256'         CHECK RU LENGTH             @OZ27441
         BH    MVGSCN2             BR IF EXTENDED LENGTH RU    @OZ27441
         BCTR  RSC,0               TRANSLATE                        R41
         EX    RSC,MVGSTR           STRING                          R41
         LA    RSC,1(,RSC)           TO EBCDIC                      R41
         B     MVGSNS1             GO HANDLE AS NON-DUPL STRING     R41
         SPACE 1                                                    R41
MVGSTR   TR    0(0,RDP),MVGASCII   EXECUTED TRANSLATE TO EBCDIC     R41
         SPACE 1                                                    R41
*        TRANSLATE NON-COMPRESSED EXTENDED LENGTH TO EBCDIC    @OZ27441
         SPACE 1                                               @OZ27441
MVGSCN2  TR    0(256,RDP),MVGASCII TRANSLATE FIRST 256 BYTES   @OZ27441
         LA    RDP,256(,RDP)       UPDATE DATA POINTER         @OZ27441
         SH    RSC,=H'257'         DECR RU LENGTH (1 FOR EX)   @OZ27441
         EX    RSC,MVGSTR          TRANSLATE REST OF STRING    @OZ27441
         LA    RSC,257(,RSC)       RESTORE EXTENDED RU LENGTH  @OZ27441
         B     MVGSNS1             HANDLE AS NON-DUPL STRING   @OZ27441
         EJECT                                                 @OZ62776
*                             END OF RU FOUND                       R41
         SPACE 1                                                    R41
*              THIS LINE DELETED BY APAR NUMBER                @OZ27441
*              THIS LINE DELETED BY APAR NUMBER                @OZ27441
*              THIS LINE DELETED BY APAR NUMBER                @OZ27441
*              THIS LINE DELETED BY APAR NUMBER                @OZ27441
*              THIS LINE DELETED BY APAR NUMBER                @OZ27441
MVGSEND  BAL   LINK,MVGEMTY        GO GET NEXT RU              @OZ27441
         B     MVGSCN              GO PROCESS NEXT RU               R41
         SPACE 1                                                    R41
*              THIS LINE DELETED BY APAR NUMBER                @OZ27441
*              THIS LINE DELETED BY APAR NUMBER                @OZ27441
*              THIS LINE DELETED BY APAR NUMBER                @OZ27441
         SPACE 1                                                    R41
*                             DECODE SCB                            R41
         SPACE 1                                                    R41
MVGSCB   L     RDP,SGWRUA          POINT TO NEXT SCB                R41
         C     RDP,SGWRUE          IF BEYOND END OF RU         @OZ62776
         BH    MVGRERR              ISSUE ERROR MESSAGE        @OZ62776
         BE    MVGSEND             IF EQUAL HANDLE RU END      @OZ62776
         SPACE 1                                                    R41
         NI    SGWFLAGS,X'FF'-SGWDUP INIT AS NON-DUPLICATE          R41
         SLR   R2,R2               CLEAR REGISTER              @OZ27441
         IC    R2,0(,RDP)          GET SCB FROM RU                  R41
         LR    RSC,R2              INITIALIZE                       R41
         SLL   RSC,26               SCB                             R41
         SRL   RSC,26                COUNT                          R41
         SRL   R2,6                DECODE TYPE                      R41
         SLL   R2,2                 OF SCB                          R41
         LA    RDP,1(,RDP)         POINT PAST SCB                   R41
         ST    RDP,SGWRUA           AND SAVE POINTER                R41
         B     MVGSBR(R2)          CALL ROUTINE DEPENDING ON SCB    R41
         SPACE 1                                                    R41
MVGSBR   B     MVGSNS              NON-DUPLICATE SCB                R41
         B     MVGSCS              COMPACTION SCB                   R41
         B     MVGSPS              DUPLICATE PRIMES SCB             R41
         B     MVGSDS              DUPLICATE NON-PRIMES SCB    @OZ62776
         EJECT                                                 @OZ62776
*                         INVALID SCB                          @OZ62776
         SPACE 1                                               @OZ62776
MVGRERR  L     R15,RPLICE          POINT R15 TO ICE            @OZ62776
         L     R2,ICELDCT-ICEDSECT(,R15)  POINT TO LINE DCT    @OZ62776
         OI    DCTFLAGS-DCTDSECT(R2),DCTRSTRT  RESTART LINE    @OZ62776
         L     R1,$MWORK           POINT TO MESSAGE WORKAREA   @OZ62776
         MVC   0(L'MRUERR,R1),MRUERR MOVE MSG TO WORKAREA      @OZ62776
         USING MRUERR,R1           TEMP MSG ADDRESSABILITY     @OZ62776
         MVC   MRUEAPPL,ICESYMB-ICEDSECT(R15)  MOVE APPL NAME  @OZ62776
         DROP  R1                  DROP MSG ADDRESSABILITY     @OZ62776
         SPACE 1                                               @OZ62776
        $WTO   (R1),L'MRUERR,WAIT=NO,JOB=NO,  ISSUE MSG        @OZ62776X
               ROUTE=$LOG+$TP+$ERR,CLASS=$ALWAYS,PRI=$HI       @OZ62776
         SPACE 1                                               @OZ62776
         CLI   PCEID+1,PCECONID    IF REMOTE CONSOLE PROC      @OZ62776
         BE    MVTAMXAB             BRANCH TO ABNORMAL EXIT    @OZ62776
         SPACE 1                                               @OZ62776
        $WAIT  WORK,SAVE=NO        ELSE, WAIT FOR SESS TERM    @OZ62776
         SPACE 1                                               @OZ62776
         L     R1,PCER1            RESTORE DCT ADDRESS         @OZ62776
        $RESTORE                   RESTORE INPUT REGISTERS     @OZ62776
         B     MVTAMXAB            BRANCH TO ABNORMAL EXIT     @OZ62776
         EJECT                                                 @OZ62776
*                             NON-DUPLICATE SCB                     R41
         SPACE 1                                                    R41
MVGSNS   L     R1,SGWRUE           CALCULATE LENGTH                 R41
         S     R1,SGWRUA            OF RU REMAINING                 R41
         CR    RSC,R1              IF STRING IS WITHIN RU           R41
         BNH   MVGSNS1              GO CHECK FOR END OF STRING      R41
         LR    RSC,R1              IGNORE STRING EXTENDING PAST RU  R41
         SPACE 1                                                    R41
MVGSNS1  LTR   R1,RSC              IF NULL STRING OR END OF STRING  R41
         BZ    MVGSCB               GO DECODE NEXT SCB              R41
         SPACE 1                                                    R41
         L     RDP,SGWRUA          POINT TO CURRENT STRING ADDRESS  R41
         TM    SGWFLAGS,SGWTRN     IF WITHIN A TRANSPARENT STRING   R41
         BO    MVGSNTR              GO HANDLE TRANSPARENT STRING    R41
         SPACE 1                                                    R41
MVGSNS2  SLR   R2,R2               CLEAR REGISTER              @OZ27441
         CH    R1,=H'256'          TEST FOR EXTENDED LENGTH RU @OZ27441
         BNH   MVGSNS3             BRANCH IF NOT EXTENDED RU   @OZ27441
         TRT   0(256,RDP),MSCSTRAN SCAN FOR SCS                @OZ27441
         BNZ   MVGSNBR             BRANCH IF SCS FOUND         @OZ27441
         LA    RDP,256(,RDP)       ELSE UPDATE POINTER AND LEN @OZ27441
         SH    R1,=H'256'            TO CONTINUE WITH RESIDUAL @OZ27441
         SPACE 1                                               @OZ27441
MVGSNS3  BCTR  R1,0                START SCS                   @OZ27441
         EX    R1,MVGSNTRT          SCAN OF STRING                  R41
         BZ    MVGSN10             NO SCS FOUND, GO HANDLE DATA     R41
         SPACE 1                                                    R41
MVGSNBR  B     MVGSNBR(R2)         CALL RTN DEPENDING ON SCS FOUND  R41
         B     MVGSN20             NON-SCANNED SCS                  R41
         B     MVGSN30             NL IRS FF                        R41
         B     MVGSN40             TRN                              R41
         B     MVGSN20             ESC (HANDLE AS NON-SCANNED SCS)  R41
         SPACE 1                                                    R41
MVGSNTRT TRT   0(0,RDP),MSCSTRAN   EXECUTED FOR SCS SCAN            R41
         SPACE 1                                                    R41
*                             STRING CONSISTS OF ALL DATA           R41
         SPACE 1                                                    R41
MVGSN10  LR    RDC,RSC             PASS STRING LENGTH               R41
         L     RDP,SGWRUA          PASS START OF STRING             R41
         LA    R1,0(RDP,RDC)       CALCULATE AND                    R41
         ST    R1,SGWRUA            SAVE NEXT SCB ADDRESS           R41
         BAL   LINK,MVGMVE         CALL MOVE SUBROUTINE             R41
         B     MVGSCB              GO DECODE NEXT SCB               R41
         EJECT                                                 @OZ62776
*                             TRANSPARENT, NON-DUPLICATE STRING     R41
         SPACE 1                                                    R41
MVGSNTR  LTR   RTC,RTC             IF TRN COUNT HAS BEEN LOADED     R41
         BNZ   MVGSNT1              GO CHECK LENGTH OF TRN STRING   R41
         IC    RTC,0(,RDP)         PICK UP COUNT                    R41
         LA    RDP,1(,RDP)         POINT PAST COUNT IN RU           R41
         ST    RDP,SGWRUA          SAVE POINTER                     R41
         BCTR  RSC,0               DECREMENT STRING COUNTER         R41
         LTR   RTC,RTC             CHECK FOR ZERO COUNT        @OZ24292
         BNZ   MVGSNS1             NOT ZERO, CHECK FOR END     @OZ24292
         NI    SGWFLAGS,X'FF'-SGWTRN SET OUT OF TRANS STRING   @OZ24292
         B     MVGSNS1             GO CHECK FOR END OF STRING       R41
         SPACE 1                                                    R41
MVGSNT1  CLR   RTC,RSC             IF TRN IS NOT LONGER THAN SCB    R41
         BNH   MVGSNT2              GO POINT TO END OF TRN STRING   R41
         SR    RTC,RSC             CALCULATE TRN STRING REMAINING   R41
         B     MVGSN10             GO TREAT SCB STRING AS DATA      R41
         SPACE 1                                                    R41
MVGSNT2  AR    RDP,RTC             POINT TO END                     R41
         LR    R1,RDP               OF TRN STRING                   R41
         BCTR  R1,0                BACK UP ONE TO SIMULATE TRT      R41
         NI    SGWFLAGS,X'FF'-SGWTRN INDICATE                       R41
         XR    RTC,RTC                NOT IN TRN STRING             R41
         SPACE 1                                                    R41
*                             NON-SCANNED SCS                       R41
         SPACE 1                                                    R41
MVGSN20  LA    RDP,1(,R1)          POINT PAST CHAR THAT STOPPED SCANR41
         L     R1,SGWRUA           POINT TO                         R41
         AR    R1,RSC               END OF STRING                   R41
         SR    R1,RDP              IF LAST CHAR OF STRING           R41
         BZ    MVGSN10              GO GIVE STRING TO MOVER AS DATA R41
         B     MVGSNS2             GO RESTART SCS SCAN              R41
         SPACE 1                                                    R41
*                             TRN FOUND                             R41
         SPACE 1                                                    R41
MVGSN40  OI    SGWFLAGS,SGWTRN     INDICATE IN TRANSPARENT STRING   R41
         SPACE 1                                                    R41
*                             TRN/EOR FOUND                         R41
         SPACE 1                                                    R41
MVGSN30  L     RDP,SGWRUA          PASS START OF STRING             R41
         LR    RDC,R1              CALCULATE LENGTH OF              R41
         SR    RDC,RDP              STRING PRECEDING EOR/TRN        R41
         LA    R1,1(,R1)           POINT PAST EOR/TRN               R41
         ST    R1,SGWRUA            AND SAVE POINTER                R41
         SR    RSC,RDC             CALCULATE                        R41
         BCTR  RSC,0                LENGTH OF SCB STRING REMAINING  R41
         BAL   LINK,MVGMVE         CALL MOVE SUBROUTINE WITH DATA   R41
         SPACE 1                                                    R41
MVGSN35  TM    SGWFLAGS,SGWTRN     IF TRN WAS FOUND                 R41
         BO    MVGSNS1             GO HANDLE REST OF SCB STRING     R41
         BAL   LINK,MVGMEOR        CALL MOVE SUBROUTINE WITH EOR    R41
         B     MVGSNS1             GO HANDLE REST OF SCB STRING     R41
         EJECT                                                 @OZ62776
*                             COMPACTION SCB                        R41
         SPACE 1                                                    R41
MVGSCS   B     MVGSNS              TREAT AS NON-DUPL SCB, FOR NOW   R41
         SPACE 1                                                    R41
*                             DUPLICATE PRIMES SCB                  R41
         SPACE 1                                                    R41
MVGSPS   BCTR  RDP,0               BACK UP POINTER AND STORE A BLANKR41
         MVI   0(RDP),C' '          TO PRETEND DUPLICATE NON-PRIMES R41
         SPACE 1                                                    R41
*                             DUPLICATE NON-PRIMES SCB              R41
         SPACE 1                                                    R41
MVGSDS   LA    R1,1(,RDP)          POINT TO NEXT SCB                R41
         ST    R1,SGWRUA            AND SAVE POINTER                R41
         OI    SGWFLAGS,SGWDUP     INDICATE DUPLICATE FIELD         R41
         SPACE 1                                                    R41
MVGSDS1  LTR   RSC,RSC             IF NULL OR END OF SCB STRING     R41
         BZ    MVGSCB               GO DECODE NEXT SCB              R41
         TM    SGWFLAGS,SGWTRN     IF IN TRANSPARENT STRING         R41
         BO    MVGSDTR              GO HANDLE AS TRANSPARENT STRING R41
         SLR   R2,R2               CLEAR REGISTER              @OZ27441
         IC    R2,0(,RDP)          PICK UP DUPLICATE CHARACTER      R41
         IC    R2,MSCSTRAN(R2)     DO SCS SCAN ON ONE CHARACTER     R41
         B     MVGSDBR(R2)         CALL RTN DEPENDING ON SCS CHAR   R41
         SPACE 1                                                    R41
MVGSDBR  B     MVGSD10             DATA                             R41
         B     MVGSD10             NON-SCANNED SCS (HANDLE AS DATA) R41
         B     MVGSD20             NL IRS FF (EOR)                  R41
         B     MVGSD30             TRN                              R41
         B     MVGSD10             ESC (HANDLE AS NON-SCANNED SCS)  R41
         SPACE 1                                                    R41
*                             IN TRANSPARENT STRING                 R41
         SPACE 1                                                    R41
MVGSDTR  LTR   RTC,RTC             IF TRN COUNT ALREADY LOADED      R41
         BNZ   MVGSDT1              GO HANDLE TRANSPARENT STRING    R41
         IC    RTC,0(,RDP)         PICK UP TRN COUNT                R41
         BCTR  RSC,0               DECREMENT LENGTH OF DUPL STRING  R41
         B     MVGSDS1             GO CHECK FOR END OF SCB STRING   R41
         SPACE 1                                                    R41
MVGSDT1  CLR   RTC,RSC             IF TRN STRING NOT LONGER THAN SCBR41
         BNH   MVGSDT2              GO TREAT JUST TRN STRING AS DATAR41
         SR    RTC,RSC             CALC NEW LENGTH OF TRN STRING    R41
         B     MVGSD10             GO TREAT SCB STRING AS DATA      R41
         SPACE 1                                                    R41
MVGSDT2  LR    RDC,RTC             PASS FIELD LENGTH                R41
         SR    RSC,RTC             CALCULATE SCB LENGTH REMAINING   R41
         NI    SGWFLAGS,X'FF'-SGWTRN INDICATE                       R41
         XR    RTC,RTC                OUT OF TRANSPARENT STRING     R41
         BAL   LINK,MVGMVE         CALL MOVE SUBROUTINE WITH DATA   R41
         B     MVGSDS1             GO CHECK FOR END OF SCB STRING   R41
         EJECT                                                 @OZ62776
*                             DUPLICATE DATA                        R41
         SPACE 1                                                    R41
MVGSD10  LR    RDC,RSC             PASS FIELD LENGTH                R41
         BAL   LINK,MVGMVE         CALL MOVE SUBROUTINE WITH DATA   R41
         B     MVGSCB              GO DECODE NEXT SCB               R41
         SPACE 1                                                    R41
*                             DUPLICATE EOR                         R41
         SPACE 1                                                    R41
MVGSD20  BAL   LINK,MVGMEOR        CALL MOVE SUBROUTINE WITH EOR    R41
         BCT   RSC,MVGSD20         CALL AGAIN UNTIL SCB STRING ENDEDR41
         B     MVGSCB              GO DECODE NEXT SCB               R41
         SPACE 1                                                    R41
*                             DUPLICATE TRN                         R41
         SPACE 1                                                    R41
MVGSD30  OI    SGWFLAGS,SGWTRN     INDICATE IN TRANSPARENT STRING   R41
         BCTR  RSC,0               DECREMENT SCB STRING LENGTH      R41
         B     MVGSDS1             GO CHECK FOR END OF SCB STRING   R41
         EJECT                                                      R41
***********************************************************************
*                                                                     *
* MVGMVE  --  MOVE SUBROUTINE                                         *
*                                                                     *
* THE MOVE SUBROUTINE TAKES A SERIES OF VARIABLE LENGTH DATA FIELDS   *
* FROM THE RU SCAN ROUTINE AND USES THEM TO FILL THE PROCESSOR        *
* BUFFER.  WHEN THE PROCESSOR BUFFER IS FULL THE MOVE SUBROUTINE      *
* CALLS THE GET TERMINATION ROUTINE (MVGEXIT).  WHEN THE NEXT         *
* $EXTPGET IS DONE THE MOVE SUBROUTINE IS CALLED DIRECTLY BY THE      *
* GET INITIALIZATION ROUTINE (RTAMVGET).  WHEN THE MOVE ROUTINE       *
* NEEDS MORE DATA, IT RETURNS TO THE RU SCAN ROUTINE (MVGSCN).        *
*                                                                     *
***********************************************************************
         SPACE 1                                                    R41
*                             NOT EOR, MOVE DATA                    R41
         SPACE 1                                                    R41
MVGMVE   LTR   RDC,RDC             IF FIELD IS ENDED                R41
         BZR   LINK                 RETURN                          R41
         SPACE 1                                                    R41
         NI    SGWFLAGS,X'FF'-SGWXEOR EXTRA EOR DID NOT OCCUR       R41
         LR    R1,RDC              ASSUME MOVE OF FIELD LENGTH      R41
         CR    RDC,RPC             IF FIELD NOT LARGER THAN PROC BFRR41
         BNH   MVGM01               GO MOVE FIELD                   R41
         LR    R1,RPC              MOVE TO END OF PROC BFR          R41
         SPACE 1                                                    R41
MVGM01   TM    SGWFLAGS,SGWDUP     IF DUPLICATE FIELD               R41
         BO    MVGM02               GO MOVE DUPLICATE FIELD         R41
         SPACE 1                                                    R41
         CH    R1,=H'256'          TEST FOR EXTENDED LENGTH RU @OZ27441
         BNH   MVGM01A             BRANCH IF NOT EXTENDED RU   @OZ27441
         MVC   0(256,RPP),0(RDP)   MOVE FIRST 256 BYTES        @0Z27441
         SH    R1,=H'257'          DECR RU LENGTH (1 FOR EX)   @OZ27441
         EX    R1,MVGMVCXL         MOVE RESIDUAL DATA          @OZ27441
         LA    R1,257(,R1)         RESTORE EXTENDED RU LENGTH  @OZ27441
         B     MVGMBYPS            GO TO UPDATE FIELD POINTER  @OZ27441
         SPACE 1                                               @OZ27441
MVGM01A  BCTR  R1,0                DECREMENT LENGTH FOR EXECUTE@OZ27441
         EX    R1,MVGMVC1          MOVE NON-DUPLICATE FIELD         R41
         LA    R1,1(,R1)           INCREMENT LENGTH AFTER EXECUTE   R41
MVGMBYPS LA    RDP,0(RDP,R1)       UPDATE FIELD POINTER        @OZ27441
         B     MVGM03              GO UPDATE FIELD COUNT            R41
         SPACE 3                                               @OZ27441
MVGMVCXL MVC   256(*-*,RPP),256(RDP)  **** EXECUTED ONLY ****  @OZ27441
         EJECT                                                 @OZ27441
MVGM02   MVC   0(1,RPP),0(RDP)     MOVE IN FIRST BYTE               R41
         BCT   R1,MVGM02A          GO DECREMENT AGAIN, IF NOT JUST 1R41
         B     MVGM02B             GO INCREMENT FOR JUST 1 BYTE     R41
MVGM02A  BCTR  R1,0                DECREMENT LENGTH FOR EXECUTE     R41
         EX    R1,MVGMVC2          DUPLICATE FIELD                  R41
         LA    R1,1(,R1)           INCREMENT LENGTH AFTER EXECUTE   R41
MVGM02B  LA    R1,1(,R1)           INCREMENT FOR FIRST BYTE         R41
         SPACE 1                                                    R41
MVGM03   SR    RDC,R1              UPDATE FIELD COUNT               R41
         AR    RPP,R1              UPDATE PROC BFR POINTER          R41
         SR    RPC,R1              UPDATE PROC BFR COUNT            R41
         BNZR  LINK                RETURN IF PROC BFR NOT FULL      R41
         SPACE 1                                                    R41
         OI    SGWFLAGS,SGWXEOR    INDICATE EXTRA EOR MAY OCCUR     R41
         B     MVGEXIT             GO END GET PROCESSING            R41
         SPACE 1                                                    R41
*                             EOR, PROPAGATE BLANKS                 R41
         SPACE 1                                                    R41
MVGMEOR  TM    SGWFLAGS,SGWXEOR    IF NOT EXTRA EOR                 R41
         BNO   MVGPROP              GO PROPAGATE BLANKS             R41
         NI    SGWFLAGS,X'FF'-SGWXEOR EXTRA EOR FOUND               R41
         BR    LINK                RETURN                           R41
         SPACE 1                                                    R41
MVGPROP  MVI   0(RPP),C' '         PROPAGATE BLANKS                 R41
         BCT   RPC,MVGPROP1        GO DECREMENT AGAIN IF NOT JUST 1 R41
         B     MVGPROP2            ONLY ONE BYTE, SKIP MOVE         R41
MVGPROP1 BCTR  RPC,0               DECREMENT FOR EXECUTE            R41
         EX    RPC,MVGMVC2           PROCESSOR BUFFER               R41
         LA    RPC,1(,RPC)         INCREMENT LENGTH AFTER EXECUTE   R41
         SPACE 1                                                    R41
MVGPROP2 LA    RPP,1(RPP,RPC)      UPDATE PROC BFR POINTER          R41
         XR    RDC,RDC             NO FIELD DATA                    R41
         XR    RPC,RPC             PROCESSOR BUFFER FULL            R41
         B     MVGEXIT             GO END GET PROCESSING            R41
         SPACE 1                                                    R41
MVGMVC1  MVC   0(0,RPP),0(RDP)     EXECUTED TO MOVE NON-DUPL DATA   R41
MVGMVC2  MVC   1(0,RPP),0(RPP)     EXECUTED TO MOVE DUPL DATA       R41
         EJECT                                                      R41
***********************************************************************
*                                                                     *
* MVGEMTY  --  EMPTY RU SUBROUTINE                                    *
*                                                                     *
* CALLED BY THE RU SCAN ROUTINE (MVGSCN) WHEN ANOTHER RU IS NEEDED.   *
* THE EMPTY RU SUBROUTINE GETS THE NEXT RU AND RETURNS TO THE RU      *
* SCAN ROUTINE (MVGSCN).  IF THE LAST RU IN THE CHAIN IS REACHED,     *
* THE EMPTY RU SUBROUTINE CALLS THE SNA GET TERMINATION ROUTINE       *
* (MVGEXIT).                                                          *
*                                                                     *
***********************************************************************
         SPACE 1                                                    R41
*                             DETERMINE IF LAST RU IN CHAIN         R41
         SPACE 1                                                    R41
MVGEMTY  L     MICE,RPLICE         POINT TO ICE                     R41
         TM    ICERCVST,ICEINCHN   IF THE LAST RU IN CHAIN          R41
         BZ    MVGEXIT              GO FORCE EXIT                   R41
         SPACE 1                                                    R41
*                             NOT LAST RU IN CHAIN, GET NEXT RU     R41
         SPACE 1                                                    R41
         STM   R14,R12,SGWRSAVE    SAVE GET REGISTERS IN RPL        R41
         L     R1,SGWRUE           CALCULATE LENGTH                 R41
         S     R1,SGWRUA            OF RU REMAINING                 R41
         ST    R1,RPLRLEN          UPDATE RPL LENGTH REMAINING      R41
         MVC   RPLAREA(4),SGWRUA   SAVE CURRENT RPL ADDRESS         R41
         L     R1,PCER1            POINT TO DCT                     R41
        $RESTORE                   RESTORE RTAM REGISTERS           R41
         SPACE 1                                                    R41
         BAL   ML,MVREQBUF         REQUEST NEXT RPL AND RU          R41
         LTR   MBUF,MBUF           IF NO BUFFER RETURNED            R41
         BZ    MVGDUMMY             GO RETURN DUMMY FOR JOB DELETE  R41
         SPACE 1                                                    R41
         L     ML,RPLNEXT          POINT TO NEW RPL                 R41
         USING RPLDSECT,ML                                          R41
         MVC   SGWSTRT(SGWEND-SGWSTRT),SGWSTRT-RPLDSECT(MBUF)       R41X
                                   MOVE GET STATUS TO NEXT RPL      R41
         DROP  ML                                                   R41
         SPACE 1                                                    R41
         BAL   ML,MVRELBUF         RELEASE OLD RPL AND RU           R41
         SPACE 1                                                    R41
         L     MBUF,DCTBUFAD       RESTORE NEW BUFFER ADDRESS       R41
         ST    MBUF,SGWMBUF        INITIALIZE SAVED BUFFER ADDRESS  R41
         LM    R14,R12,SGWRSAVE    RESTORE GET STATUS               R41
         BR    LINK                RETURN                           R41
         EJECT                                                 @OZ62776
*                                                                   R41
*                             RETURN DUMMY TO CALLER ON JOB DELETE  R41
*                                                                   R41
         SPACE 1                                                    R41
MVGDUMMY ICM   MBUF,15,DCTBUFAD    PURGE ANY                        R41
         BZ    MVGDU1               BUFFER                          R41
         BAL   ML,MVFREEIN           THE RDCT                       R41
         ST    MBUF,DCTBUFAD          MAY OWN                       R41
MVGDU1   L     R1,PCER0            RETRIEVE USER BUFFER ADDRESS     R41
         MVI   0(R1),0             GUARANTEE NOT A VALID // JOB CARDR41
         B     MVTAMXIT            RETURN TO PROCESSOR              R41
         EJECT                                                      R41
***********************************************************************
*                                                                     *
* MVGEXIT  --  SNA GET TERMINATION ROUTINE                            *
*                                                                     *
* CALLED BY THE DATA MOVE SUBROUTINE (MVGMVE) OR, IF END OF CHAIN,    *
* BY THE EMPTY RU SUBROUTINE (MVGEMTY), SNA GET TERMINATION RETURNS   *
* TO THE PROCESSOR AND PASSES BACK EITHER A LOGICAL RECORD OR AN      *
* END OF FILE INDICATION.                                             *
*                                                                     *
***********************************************************************
         SPACE 1                                                    R41
*                             DETERMINE IF EOC CAUSED EXIT          R41
         SPACE 1                                                    R41
MVGEXIT  LTR   RPC,RPC             IF PROCESSOR BUFFER NOT FULL     R41
         BNZ   MVGEOC               THEN EOC CAUSED EXIT            R41
         SPACE 1                                                    R41
*                             EOC DID NOT CAUSE EXIT                R41
         SPACE 1                                                    R41
MVGNEOC  STM   R14,R12,SGWRSAVE    SAVE GET STATUS                  R41
         L     R1,SGWRUE           CALCULATE LENGTH                 R41
         S     R1,SGWRUA            OF RU REMAINING                 R41
         ST    R1,RPLRLEN          UPDATE RPL LENGTH REMAINING      R41
         MVC   RPLAREA(4),SGWRUA   SAVE CURRENT RPL ADDRESS         R41
         L     R1,PCER0            RETRIEVE USER BUFFER ADDRESS     R41
         SPACE 1                                                    R41
         CLC   =C'/*SIGNOFF',0(R1) IF UPPERCASE SIGNOFF             R41
         BNE   MVTAMXIT                      GO RETURN NORMALLY     R41
         SPACE 1                                                    R41
         L     R1,PCER1            RELOAD POINTER TO REMOTE DCT     R41
        $RESTORE                   RESTORE RTAM REGISTER ENVIRONMENTR41
         L     R1,ICELDCT          GET ADDRESS OF LINE DCT          R41
         OI    MDCTSTAT-DCTDSECT(R1),DCTSOFF MARK LINE FOR SIGNOFF  R41
         B     RTAMVGET            RE-ENTER TO GET ANOTHER CARD     R41
         SPACE 1                                                    R41
*                             EOC CAUSED EXIT                       R41
         SPACE 1                                                    R41
MVGEOC   C     RPP,PCER0           IF PROC BFR NOT COMPLETELY EMPTY R41
         BNE   MVGPROP              GO PROPAGATE BLANKS             R41
         L     R1,PCER1            POINT TO DCT                     R41
        $RESTORE                   RESTORE RTAM REGISTER ENVIRONMENTR41
         BAL   ML,MVRELBUF         RELEASE THE RPL AND RU           R41
         SPACE 1                                                    R41
         TM    MDCTSTAT,DCTEOF     IF EOF                           R41
         BO    MVTAMXEX            YES, EXIT WITH EOF               R41
         SPACE 1                                                    R41
         L     R0,PCER0            RESTORE CALLERS BFR ADDR         R41
         B     RTAMVGET             AND RETRY GET ON NEXT CHAIN     R41
         TITLE 'HASP SNA REMOTE TERMINAL GET TRANSLATE TABLE'        R4
         SPACE 5                                                     R4
MVGASCII DS    0D             ASCII TO EBCDIC TRANSLATE TABLE (SNA)  R4
         SPACE 1                                                     R4
*                X0X1X2X3X4X5X6X7X8X9XAXBXCXDXEXF                    R4
         SPACE 1                                                     R4
         DC    X'00010203372D2E2F1605250B0C0D0E0F'  0X               R4
         DC    X'10142404153D322618193F271C1D1E1F'  1X               R4
         DC    X'404F7F7B5B6C507D4D5D5C4E6B604B61'  2X               R4
         DC    X'F0F1F2F3F4F5F6F7F8F97A5E4C7E6E6F'  3X               R4
         DC    X'7CC1C2C3C4C5C6C7C8C9D1D2D3D4D5D6'  4X               R4
         DC    X'D7D8D9E2E3E4E5E6E7E8E94AE05A5F6D'  5X               R4
         DC    X'79818283848586878889919293949596'  6X               R4
         DC    X'979899A2A3A4A5A6A7A8A9C06AD0A107'  7X               R4
         SPACE 5                                               @OZ62776
MRUERR  $MSG   213,'INVALID DATA RECORD RECEIVED FROM APPLNAME' OZ62776
MRUEAPPL EQU   MRUERR+36,8                                     @OZ62776
         TITLE 'HASP SNA REMOTE TERMINAL PUT ROUTINE'                R4
         SPACE 3                                                     R4
*                                                                    R4
*                             SNA R.U. COMPOSER REGISTER DEFINITIONS R4
*                                                                    R4
         SPACE 3                                                     R4
RBY1     EQU   R0                  CONSTANT OF 1, WORK REGISTER      R4
REND     EQU   R1                  R.U. END ADDR, OR # UNUSED BYTES  R4
RSINK    EQU   R2   *WA*           ADDRESS OF NEXT POSITION IN R.U.  R4
RSCBL    EQU   R3   *MDCT*         NO. UNUSED BYTES IN CURRENT SCB  R41
RCPZ     EQU   R3   *MDCT*         COMPACTION WORK REGISTER         R41
RCPT     EQU   R5   *MICE*         ADDRESS OF COMPACTION TABLE      R41
RFEED    EQU   R6   *ML*           FEEDER ROUTINES RETURN ADDRESS    R4
RPLAN    EQU   R7   *MBASE1*       PLANNER ROUTINES CURRENT STATE   R41
RBASE    EQU   R8   *MBASE2*       COMPRESS/COMPACT BASE REGISTER   R41
RCPA     EQU   R10  *JCT*          COMPACTION WORK REGISTER         R41
RNUM     EQU   R11  *BASE1*        CHARACTER DUPLICATION FACTOR     R41
RCHAR    EQU   R12  *BASE2*        ADDRESS OF CHARACTER EMITTED      R4
RLCHAR   EQU   R13  *PCE*          LENGTH FOR OFFSET COMPARE LONG    R4
RGO      EQU   R13  *PCE*          WORK REG FOR WHERE-TO-GO TABLES  R41
RSRCE    EQU   R14  *LINK*         ADDRESS OF NEXT SOURCE STRING     R4
RLSRCE   EQU   R15                 LENGTH OF NEXT SOURCE STRING      R4
         SPACE 5                                                     R4
*                                                                    R4
*                             ADD/SUBTRACT LOGICAL - CONDITION CODES R4
*                                                                    R4
         SPACE 1                                                     R4
NOT      EQU   15                  ALLOW INVERSE CONDS. 'NOT-XXXX'   R4
         SPACE 1                                                     R4
*                                  LOGICAL OP.    SIGNS     COND.    R4
*                                  ----------     -----     ----     R4
         SPACE 1                                                     R4
ALSM     EQU   1                        ADD       SAME      MINUS    R4
ALDP     EQU   1                        ADD       DIFFER    PLUS     R4
SLSP     EQU   1                        SUBTR     SAME      PLUS     R4
SLDM     EQU   1                        SUBTR     DIFFER    MINUS    R4
         SPACE 1                                                     R4
ALDZ     EQU   2                        ADD       DIFFER    ZERO     R4
SLSZ     EQU   2                        SUBTR     SAME      ZERO     R4
         SPACE 1                                                     R4
ALSP     EQU   4                        ADD       SAME      PLUS     R4
ALDM     EQU   4                        ADD       DIFFER    MINUS    R4
SLSM     EQU   4                        SUBTR     SAME      MINUS    R4
SLDP     EQU   4                        SUBTR     DIFFER    PLUS     R4
         SPACE 1                                                     R4
ALSZ     EQU   8                        ADD       SAME      ZERO     R4
         SPACE 1                                                     R4
*                                  ASSUMING OVERFLOW DOES NOT OCCUR  R4
         EJECT                                                       R4
*                                                                    R4
*                             VTAM PUT PROCESSING                    R4
*                                                                    R4
         SPACE 1                                                     R4
         USING RTAMVPUT,MBASE1     ESTABLISH SNA PUT ADDRESSABILITY  R4
         SPACE 1                                                     R4
RTAMVPUT DS    0H                  ENTRY POINT FOR RTAM SNA PUT      R4
         TM    ICESNDST,ICECNCEL+ICEWTRSP TEST SESSION STATUS  @OZ26937
         BZ    MVPNWRSP            BR IF L.M. REQ NOT PENDING  @OZ26937
         BAL   ML,MVREQRSP         GO WAIT FOR RESPONSE        @OZ26937
MVPNWRSP TM    MDCTSTAT,DCTPSUSP   TEST DATA STREAM STATUS     @OZ26937
         BZ    MVPNSUSP            BR IF NOT SUSP'D FOR CMDS   @OZ26937
         BAL   ML,MVREQUME         GO WAIT FOR RESUME          @OZ26937
MVPNSUSP TM    ICESNDST,ICEINSTR   TEST STREAM STATUS          @OZ26937
         BO    MVPCPTST            BYPASS RESUME HDR IF IN STREAM   R41
         BAL   ML,MVRPLGET         GET BUFFER FOR 'RESUME' FM HEADER R4
         OI    ICESNDST,ICEOCPND   SET END CHN TO FORCE IMM FMH SEND R4
         LA    R1,FMHRESUM         LOAD 'RESUME' DATA STREAM ACTION  R4
         BAL   ML,MVFMHBLD         BUILD & SEND 'RESUME' FM HEADER   R4
         SPACE 1                                                    R41
MVPCPTST CLI   ICEACPTN,X'FF'      HAS A COMPACTION TABLE BEEN SENT R41
         BNE   MVPCPACT            YES, CONTINUE PUT PROCESSING     R41
         BAL   ML,MVPUTCP1         NO, GO SEND COMPACTION TABLE     R41
MVPCPACT CLC   ICERCPTN,DCTACPTN   IF USING SAME COMPACTION TABLE   R41
         BE    MVPINSTR             GO EXAMINE CHANNEL COMMAND CODE R41
         BAL   ML,MVPUTCPA         ELSE CHANGE TABLE SPECIFICATION  R41
         SPACE 1                                                     R4
MVPINSTR L     R1,PCER0            RETRIEVE 2ND PARAMETER (CCW ADDR) R4
         CLI   0(R1),X'03'         TEST CHANNEL COMMAND TYPE         R4
         BE    MVPNOPCC            GO TEST FOR INTERRUPT IF NOP      R4
         CLI   0(R1),X'FE'         TEST CHANNEL COMMAND TYPE        R41
         BNL   MVPTRUNC            BR IF SEND PDIR OR BUFFER TRUNC  R41
         LTR   MBUF,MBUF           TEST BUFFER ADDRESS               R4
         BNZ   MVPUTBUF            BRANCH IF NOT ZERO                R4
         SPACE 1                                                     R4
MVPRPLGT BAL   ML,MVRPLGET         GET AN OUTPUT BUFFER              R4
         MVI   SCWFLAGS,SCWTRNSP+SCWNSPAN  INITIALIZE COMPOSER FLAGS R4
         NI    MDCTFMT,255-DCTPALTC  RESET STREAM ALTERN CODE FLAG   R4
         TM    BINCMNP-ISTDBIND+ICEBIND,BINALT  TEST COMMON PROTOCOL R4
         BZ    SKIP270             BRANCH IF ALT CODE NOT TO BE USED R4
         OI    MDCTFMT,DCTPALTC    TURN ON STREAM ALTERNATE CODE BIT R4
         MVI   SCWFLAGS,SCWNSPAN   PRECLUDE TRANSPARENCY CHECK       R4
SKIP270  CLI   DCTDEVTP,DCTRPU     TEST DEVICE TYPE                  R4
         BE    SKIP280             BRANCH IF REMOTE PUNCH            R4
         MVI   SCWFLAGS,SCWTRNSP   TRANSP CHECK AND SPANNING   @OZ20661
SKIP280  MVC   SCWCCWA,MSCSCC      INITIALIZE CARRIAGE CONTRL STRING R4
         BAL   R14,MVPRPLAN        SET COMPOSER INITIAL STATE       R41
         L     R1,PCER0            BRING BACK CCW ADDRESS            R4
         CLI   0(R1),X'03'         IF NOP CCW                       R41
         BE    MVPNMORE             GO CHECK FOR INTERRUPTS         R41
         EJECT                                                      R41
MVPUTBUF SLR   R0,R0               CLEAR REG FOR REMOTE DEVICE WIDTH R4
         IC    R0,MDCTRECL         LOAD REMOTE DEVICE WIDTH          R4
         CLI   DCTDEVTP,DCTRPU     TEST DEVICE TYPE                  R4
         BE    MVPUNCH             BRANCH IF REMOTE PUNCH            R4
         CLI   0(R1),X'61'         TEST CURRENT COMMAND TYPE         R4
         BE    MVPUTFCB            BRANCH IF LOAD FCB                R4
         TM    0(R1),X'02'         TEST CURRENT COMMAND TYPE         R4
         BZ    MVPNIMED            BRANCH IF NOT IMMEDIATE COMMAND   R4
         TM    0(R1),X'80'         TEST CURRENT COMMAND TYPE         R4
         BZ    MVPUTCCI            BRANCH IF NOT SKIP                R4
         OI    SCWLCCC,X'02'       FORCE PREVIOUS COMMAND IMMEDIATE  R4
         CLC   SCWLCCC,0(R1)       COMPARE PREVIOUS CMD. TO CURRENT  R4
         BE    MVPNMORE            EXIT IF REDUNDANT SKIP           R41
         B     MVPUTCCI            REJOIN COMMON PROCESSING          R4
         SPACE 3                                                    R41
MVPUNCH  MVI   0(R1),X'79'         FORCE INTER-RECORD SEPARATOR      R4
         SPACE 1                                                     R4
MVPNIMED L     R14,0(,R1)          PICK UP DATA ADDRESS FROM CCW     R4
         LH    R15,6(,R1)          PICK UP DATA LENGTH  FROM CCW     R4
         LA    R14,0(,R14)         DISCARD OP CODE                   R4
         CLR   R15,R0              COMPARE LENGTH WITH MAXIMUM       R4
         BNH   MVPUT0              BR IF LENGTH NOT OVER MAX   @OZ29180
         LR    R15,R0              REPLACE LENGTH WITH MAXIMUM       R4
         EJECT                                                 @OZ29180
MVPUT0   TM    MDCTFEAT,DCTPCCTL   TEST FOR CARRIAGE CNTRLS    @OZ29180
         BO    MVPUTCCI            BRANCH IF YES               @OZ29180
         LH    ML,ICERULEN         COMPUTE NUMBER OF AVAIL     @OZ29180
         SL    ML,RPLRLEN             BYTES IN THE BUFFER      @OZ29180
         CR    ML,R0               COMPARE DEVICE RECORD LEN   @OZ29180
         BNL   MVPUT1              BRANCH IF ENOUGH ROOM       @OZ29180
         BAL   ML,MVRPLSND         SEND BUFFER                 @OZ29180
         B     MVPRPLGT            GET ANOTHER BUFFER          @OZ29180
         SPACE 1                                               @OZ29180
MVPUT1   L     RSINK,RPLAREA       COMPUTE ADDRESS OF NEXT     @OZ29180
         AL    RSINK,RPLRLEN         AVAILABLE BYTE IN BUFFER  @OZ29180
         LR    ML,RLSRCE           MOVE                        @OZ29180
         BCTR  ML,0                  SOURCE STRING             @OZ29180
         EX    ML,MVPUTMVC              TO BUFFER              @OZ29180
         LR    ML,R0               GET DEVICE RECORD LENGTH    @OZ29180
         SLR   ML,RLSRCE           TRAILING BLANKS REQUIRED    @OZ29180
         BP    MVPUT2              BRANCH IF NOT               @OZ39661
         AR    RSINK,RLSRCE        NEXT AVAIL BYTE IN BUFFER   @OZ29180
         MVI   0(RSINK),C' '       PAD WITH AT LEAST 1 BLANK   @OZ29180
         BCTR  ML,0                DECREMENT TRAILING BLNK CNT @OZ29180
         LTR   ML,ML               IS THE BUFFER FULL          @OZ29180
         BZ    MVPUT2              BRANCH IF YES               @OZ29180
         BCTR  ML,0                PAD REST OF BUFFER          @OZ29180
         EX    ML,MVPUTNCB           WITH BLANKS               @OZ29180
         SPACE 1                                               @OZ29180
MVPUT2   AL    R0,RPLRLEN          UPDATE THE RPL              @OZ29180
         ST    R0,RPLRLEN            RECORD LENGTH COUNT       @OZ29180
         B     MVPNMORE            LOOK FOR MORE DATA          @OZ29180
         SPACE 1                                               @OZ29180
MVPUTNCB MVC   1(*-*,RSINK),0(RSINK)    ***  EXECUTED  ***     @OZ29180
         SPACE 2                                               @OZ29180
MVPUTCCI MVC   SCWLCCC,0(R1)       MOVE COM. CODE TO WORKAREA  @OZ29180
         SPACE 1                                               @OZ29180
MVPUT    BAL   ML,MVKOMPOZ         INVOKE SNA R.U. COMPOSER    @OZ29180
         TM    SCWFLAGS,SCWMORE    TEST COMPOSER FLAGS               R4
         BZ    MVPNMORE            BRANCH IF NO MORE DATA TO COMPOSE R4
         TM    SCWFLAGS,SCWNSPAN   TEST COMPOSER FLAGS               R4
         LA    ML,MVPRPLGT         SEND RPL AND RE-ENTER AFTER CALL  R4
         BO    MVRPLSND             IF CROSS-R.U. SPANNING FORBIDDEN R4
         BAL   ML,MVRPLGET         ELSE GET ANOTHER OUTPUT BUFFER    R4
         L     WA,RPLNEXT          GET ADDRESS OF NEW BUFFER         R4
         MVC   SCWKOMSA-RPLDSECT(L'SCWKOMSA,WA),SCWKOMSA               C
                                   COPY WORK AREA TO NEW BUFFER      R4
         BAL   ML,MVRPLSND         CALL SEND ROUTINE FOR OLD BUFFER R41
         BAL   R14,MVPRPLAN        SET COMPOSER INITIAL STATE IN NEWR41
         B     MVPUT               GO CONTINUE COMPOSING            R41
         EJECT                                                      R41
MVPNOPCC LTR   MBUF,MBUF           TEST BUFFER ADDRESS               R4
         BZ    MVPRPLGT            GO GET BUF IN CASE CHAIN ENDING  R41
         SPACE 1                                                    R41
MVPNMORE TM    MDCTSEL,FMHMEDIA    TEST MEDIA TYPE                  R41
         BZ    MVPNMFUL            BRANCH IF CONSOLE           @OZ19494
         TM    ICEFLGS2,ICEBREAK   TEST FOR HIGH PRI INTERRUPT @OZ19494
         BO    MVPENDCH            BR IF YES --  END CHAIN     @OZ19494
         SPACE 1                                               @OZ19494
         PRINT OFF                 THIS SECTION DELETED BY     @OZ19494
*                                  THIS LINE DELETED BY APAR   @OZ19494
*                                  THIS LINE DELETED BY APAR   @OZ19494
*                                  THIS LINE DELETED BY APAR   @OZ19494
*                                  THIS LINE DELETED BY APAR   @OZ19494
*                                  THIS LINE DELETED BY APAR   @OZ19494
*                                  THIS LINE DELETED BY APAR   @OZ19494
*                                  THIS LINE DELETED BY APAR   @OZ19494
*                                  THIS LINE DELETED BY APAR   @OZ19494
*                                  THIS LINE DELETED BY APAR   @OZ19494
*                                  THIS LINE DELETED BY APAR   @OZ19494
*                                  THIS LINE DELETED BY APAR   @OZ19494
*                                  THIS LINE DELETED BY APAR   @OZ19494
*                                  THIS LINE DELETED BY APAR   @OZ19494
*                                  THIS LINE DELETED BY APAR   @OZ19494
*                                  THIS LINE DELETED BY APAR   @OZ19494
*                                  THIS LINE DELETED BY APAR   @OZ19494
*                                  THIS LINE DELETED BY APAR   @OZ19494
*                                  THIS LINE DELETED BY APAR   @OZ19494
*                                  THIS LINE DELETED BY APAR   @OZ19494
*                                  THIS LINE DELETED BY APAR   @OZ19494
*                                  THIS LINE DELETED BY APAR   @OZ19494
         PRINT ON                  THIS SECTION DELETED BY     @OZ19494
         SPACE 1                                                     R4
MVPNMFUL TM    SCWFLAGS,SCWFULL    TEST COMPOSER FLAGS               R4
         BZ    MVTAMXIT            RETURN TO PROCESSOR IF ROOM LEFT  R4
         B     MVPUTRPL            ELSE R.U. IS FULL, GO SEND IT     R4
         EJECT                                                      R41
MVPUTCPR MVC   ICERCPTN,DCTACPTN   SHOW REQUEST PROCESSED           R41
         LTR   MBUF,MBUF           TEST BUFFER ADDRESS              R41
         BZR   ML                  RETURN TO HANDLE COMMAND IF NONE R41
         CLC   ICERULEN,RPLRLEN+2  CHECK BUFFER LENGTH              R41
         BNH   MVRPLSND            IF FULL, SEND RPL & RE-ENTER     R41
         BAL   R14,MVPRPLAN        ELSE RESET COMPOSER STATE        R41
         BR    ML                  RETURN TO HANDLE COMMAND         R41
         SPACE 1                                                    R41
MVPUTCP1 L     R14,$CPTPOOL        FIND FIRST COMPACTION TABLE      R41
         MVC   DCTACPTN,CPTNUM-CPTDSECT(R14)  PREPARE TO SEND IT    R41
MVPUTCPA CLI   ICERCPTN,X'FF'      TEST PREVIOUS REQUEST STATUS     R41
         BNE   MVPUTCPB            BRANCH IF O.K.                   R41
         MVC   ICERCPTN,ICEACPTN   ELSE EARLIER FMH TYPE 3          R41
         BAL   R14,MVFMHCPA         FAILED--RESTORE ADDRESS         R41
         LA    R1,0            +0    OF LAST COMPACTION TABLE       R41
         ST    R1,ICECPT       +4     SUCCESSFULLY USED ON SESSION  R41
MVPUTCPB TM    MDCTFMT,DCTPCPCT    TEST DATA STREAM FORMAT          R41
         BO    MVPUTCPC            BRANCH IF COMPACTION ALLOWED     R41
         MVI   DCTACPTN,0          ELSE FORCE A SUPPRESS REQUEST    R41
MVPUTCPC CLI   DCTACPTN,0          TEST DESIRED COMPACTION TABLE #  R41
         BE    MVPUTCPR            BRANCH IF SUPPRESS REQUEST       R41
         CLC   ICEACPTN,DCTACPTN   COMPARE ACTIVE & DESIRED TABLES  R41
         BE    MVPUTCPR            BRANCH IF REACTIVATE REQUEST     R41
         SPACE 3                                                    R41
MVPTRUNC LTR   MBUF,MBUF           TEST BUFFER ADDRESS               R4
         BNZ   MVPENDCH            GO FORCE END CHAIN IF HAVE BUFFER R4
         TM    ICESNDST,ICEINCHN   TEST SESSION SEND STATUS          R4
         BZ    MVPUTFMH            BRANCH IF NOT IN CHAIN           R41
         BAL   ML,MVRPLGET         ELSE GET BUFFER JUST TO END CHAIN R4
         SPACE 2                                                    R41
MVPENDCH TM    ICESNDST,ICEINCHN   TEST SEND STREAM STATUS          R41
         BO    MVPUTEOC            GO SEND R.U. IF ALREADY IN CHAIN R41
         L     R1,RPLRLEN          OTHERWISE TEST                    R4
         LTR   R1,R1                R.U. LENGTH                      R4
         LA    ML,MVPUTFMH         LOAD RETURN FOR BUFFER FREE RTNE R41
         BZ    MVFREOUT            IF BUFFER EMPTY, DISCARD IT AND  R41C
                                    RETURN TO FM-HEADER CHECK BELOW R41
MVPUTEOC OI    ICESNDST,ICEOCPND   SET 'END OF CHAIN PENDING' FLAG  R41
         EJECT                                                      R41
MVPUTRPL BAL   ML,MVRPLSND         CALL BUFFER SEND ROUTINE          R4
         TM    ICESNDST,ICEINCHN   TEST RTAM CHAIN STATE             R4
         BO    MVTAMXIT            RETURN TO PROCESSOR IF IN CHAIN   R4
         SPACE 1                                                     R4
MVPUTFMH DS    0H                  TEST FUNCTIONS NEEDING FM HEADER R41
         CLC   ICERCPTN,DCTACPTN   IF PREV REQUEST & LATEST UNEQUAL R41
         BNE   MVPUTCPT             GO SWITCH COMPACTION TABLES     R41
         L     R1,PCER0            TEST CHANNEL                     R41
         CLI   0(R1),X'FE'          COMMAND TYPE                    R41
         BNE   MVPITRPT            BRANCH IF NOT SEND PDIR          R41
         BAL   ML,MVRPLGET         GET A BUFFER FOR TYPE 2 FM HDR   R41
         L     WA,RPLAREA          GET DATA ADDRESS IN BUFFER       R41
         L     R1,PCER0            PICK UP TYPE 2                   R41
         L     R14,0(,R1)           FM HDR ADDRESS &                R41
         LH    R15,6(,R1)            LENGTH FROM CCW                R41
         ST    R15,RPLRLEN         STORE R.U. LENGTH                R41
         BCTR  R15,0               DECREASE BY 1 FOR MACHINE LTH    R41
         EX    R15,MVPUTMVC        COPY FM HEADER INTO BUFFER       R41
         OI    RPLOPT12,RPLFMHDR   SET FORMAT (FM HDR) INDICATOR    R41
         OI    ICESNDST,ICEOCPND   SET END CHN TO FORCE IMM FMH SENDR41
         BAL   ML,MVRPLSND         CALL BUFFER SEND ROUTINE         R41
         SPACE 1                                                    R41
MVPITRPT TM    MDCTSEL,FMHMEDIA    TEST MEDIA TYPE                  R41
         BZ    MVTAMXIT            BR IF CONSOLE, IGNORE INTERRUPT  R41
         SPACE 1                                                    R41
         TM    ICEFLGS2,ICESIGNL+ICEBREAK TEST INTERRUPT FLAGS @OZ29180
         BNZ   MVPSUSPD            GO SUSPEND WITH CHANGE DIRECTION R41C
                                    IF 'SIGNAL' HAS BEEN RECEIVED   R41
         TM    ICEFLGS2,ICEOUTBK   ELSE TEST OUTBOUND TP INDICA@OZ29180
         BZ    MVTAMXIT            RETURN IF NOT INTERRUPTING FOR   R41C
                                    HIGHER PRIORITY OUTBOUND STREAM R41
         B     MVPSUSP1            GO SUSPEND WITHOUT CHG DIRECTION R41
         SPACE 1                                                     R4
MVPSUSPD OI    ICEFLAGS,ICECHDIR   SET 'CHGE DIRECTION PENDING' FLAG R4
         NI    ICEFLGS2,255-ICESIGNL-ICEBREAK RESET INTR FLAGS @OZ29180
MVPSUSP1 BAL   ML,MVRPLGET         GET A BUFFER FOR SUSPEND FM HDR  R41
         OI    ICESNDST,ICEOCPND   SET END CHN TO FORCE IMM FMH SENDR41
         LA    R1,FMHSUSPD         LOAD DATA STREAM 'SUSPEND' CODE   R4
         BAL   ML,MVFMHBLD         BUILD & SEND FMH, WAIT FOR RESUME R4
         BAL   ML,MVRPLGET         GET BUFFER FOR 'RESUME' FM HEADER R4
         OI    ICESNDST,ICEOCPND   SET END CHN TO FORCE IMM FMH SEND R4
         LA    R1,FMHRESUM         LOAD 'RESUME' DATA STREAM ACTION  R4
         LA    ML,MVPITRPT         LOAD RETURN FOR SNA FM HDR RTNE  R41
         B     MVFMHBLD            BUILD & SEND 'RESUME' FM HEADER   R4
         SPACE 1                                                    R41
MVPUTMVC MVC   0(*-*,WA),0(R14)    ** EXECUTE ONLY **               R41
         EJECT                                                      R41
*                                                                    R4
*                        CHECK IF MUST LEAVE ALT CODE TO SEND 'SVF'  R4
*                                                                    R4
         SPACE 1                                                     R4
MVPUTFCB TM    MDCTFMT,DCTPALTC    TEST STREAM FORMAT                R4
         BZ    MVPUTFNA            BRANCH IF NOT ALTERNATE CODE      R4
         L     R15,RPLRLEN         GET AND TEST                      R4
         LTR   R15,R15              CURRENT R.U. LENGTH              R4
         BZ    SKIP300             BRANCH IF R.U. EMPTY              R4
         BAL   ML,MVRPLSND         CALL BUFFER SEND ROUTINE          R4
         BAL   ML,MVRPLGET         GET ANOTHER OUTPUT BUFFER         R4
         L     R1,PCER0            BRING BACK CCW ADDRESS            R4
SKIP300  NI    MDCTFMT,255-DCTPALTC  CHG STREAM FORMAT TO EBCDIC     R4
         OI    SCWFLAGS,SCWFULL    FORCE R.U. TO CONTAIN ONLY 'SVF'  R4
         SPACE 1                                                     R4
MVPUTFNA LA    R0,181              LOAD MAX ALLOWABLE FCB LENGTH     R4
         OI    0(R1),X'02'         SET MISSING IMMEDIATE COMMAND BIT R4
         B     MVPNIMED            REJOIN MAIN-LINE PROCESSING       R4
         SPACE 3                                                    R41
*                                                                   R41
*                             SET COMPOSER PLANNER INITIAL STATE    R41
*                                                                   R41
         SPACE 1                                                    R41
MVPRPLAN LH    R0,ICERULEN         INITIALIZE                       R41
         AL    R0,RPLAREA           END OF R.U.                     R41
         BCTR  R0,0                  ADDRESS IN                     R41
         ST    R0,SCWRUEND            WORK AREA                     R41
         TM    MDCTFMT,DCTPPRES+DCTPCPCT  TEST DATA STREAM FORMAT   R41
         BZR   R14                 RETURN IF NO COMPRESSION DESIRED R41
         BM    MVPRPLA1            BRANCH IF COMPRESSION ONLY       R41
         TM    MDCTSEL,FMHMEDIA    TEST FOR CONSOLE                 R41
         BZ    MVPRPLA1            SUPPRESS COMPACTION IF CONSOLE   R41
         LA    R0,MVKQEY           POINT TO COMPACTION EMPTY STATE  R41
         CLI   ICERCPTN,0          TEST ACTIVE COMPACTION TABLE NUM R41
         BNE   MVPRPLA2            BRANCH IF COMPACT NOT SUPPRESSED R41
MVPRPLA1 LA    R0,MVKPEY           POINT TO COMPRESSION EMPTY STATE R41
MVPRPLA2 ST    R0,SCWPLAN          SET COMPOSER INITIAL STATE       R41
         SLR   R0,R0               SET COMPOSER INITIAL             R41
         ST    R0,SCWCPARS          COMPACTION RACING STATE         R41
         BR    R14                 RETURN TO CALLER                 R41
         EJECT                                                      R41
*                                                                   R41
*                             SEND COMPACTION TABLE FM HEADER       R41
*                                                                   R41
         SPACE 1                                                    R41
MVPUTCPT BAL   ML,MVRPLGET         GET A BUFFER FOR TYPE 3 FM HDR   R41
         BAL   R14,MVFMHCPA        LOOK UP COMPACTION TABLE NUMBER  R41
         B     MVPIVCPN        +0  ERROR EXIT - GO DISPLAY MESSAGE  R41
         ST    R1,ICECPT       +4  SAVE COMPACTION TABLE LOC IN ICE R41
         MVI   ICERCPTN,X'FF'      SHOW TABLE SWITCH IN PROGRESS    R41
         BAL   ML,MVFMHCPT         BUILD & SEND COMPACTION TABLE    R41
         L     R1,ICECPT           LOAD NEW COMPACTION TABLE ADDR   R41
         IC    R0,CPTNUM-CPTDSECT(,R1)  SHOW TABLE                  R41
         STC   R0,ICEACPTN               SWITCH WAS                 R41
         STC   R0,ICERCPTN                SUCCESSFUL                R41
         B     MVPINSTR            RE-ENTER TO PROCESS COMMAND      R41
         EJECT                                                      R41
MVPIVCPW $WAIT  CMB,SAVE=NO        WAIT FOR A CMB                   R41
         L      R1,PCER1           RELOAD CALLERS DCT ADDRESS       R41
        $RESTORE                   RESTABLISH RTAM REGISTERS        R41
         SPACE 1                                                    R41
MVPIVCPN DS    0H                                                   R41
        $GETCMB NUMCMB=1           GET A CMB FOR THE MESSAGE        R41
         BZ    MVPIVCPW            BR IF NO CMB -- WAIT             R41
         SPACE 1                                                    R41
         LA    WA,CMBTEXT-CMB(,R1) POINT TO CMB MESSAGE AREA        R41
         SLR   R0,R0               RELOAD INVALID COMAPACTION       R41
         IC    R0,DCTACPTN         TABLE NUMBER                     R41
         MVI   ICERCPTN,0          SUPPRESS TABLE                   R41
         MVI   DCTACPTN,0           NUMBER REQUEST                  R41
         MVC   0(L'MVPIVCM,WA),MVPIVCM  MOVE IN MESSAGE TEMPLATE... R41
         MVC   MVPIVNM(L'DCTDEVN,WA),DCTDEVN ... ADD DEVICE NAME    R4
         CVD   R0,SCWCCWA              PLACE INVALID                R41
         ED    MVPIVCT(,WA),SCWCCWA+6    TABLE NUMBER IN MESSAGE    R41
         L     JCT,PCEJCT          RELOAD CALLERS JCT ADDR FOR WTO  R41
        $WTO   (R1),L'MVPIVCM,JOB=YES,CMB=YES,WAIT=NO,  ISSUE       R41C
               ROUTE=$LOG+$TP+$UR,CLASS=$ACTION,PRI=$ST  MESSAGE    R41
         LM    R0,R1,PCER0         RELOAD R0, AND R1 ENTRY VALUES   R41
        $RESTORE                   RELOAD ACCESS METHOD REGISTERS   R41
         BAL   ML,MVFREOUT         DISCARD UNUSED BUFFER            R41
         B     MVPINSTR            RE-ENTER TO PROCESS COMMAND      R41
         SPACE 1                                                    R41
MVPIVCM $MSG   211,'RNNN.PRN COMPACTION TABLE NNN NOT FOUND'        R41
MVPIVNM  EQU   2,8                 OFFSET TO DEVICE NAME IN MESSAGE R41
MVPIVCT  EQU   27,4                OFFSET TO EDIT PATERN IN MESSAGE R41
         SPACE 1                                                    R41
         ORG   MVPIVCM+MVPIVCT     PLACE TABLE NUMBER EDIT          R41
         DC    X'40202120'          PATTERN IN MESSAGE TEMPLATE     R41
         ORG   ,                                                    R41
         CNOP  2,4                 REALIGN                          R41
         EJECT                                                      R41
***********************************************************************
*                                                                     *
*                        SNA R.U. COMPOSER                            *
*                                                                     *
*           OBJECTIVE - ACCEPT A CHANNEL COMMAND CODE IN              *
*           WORK AREA LOC 'SCWLCCC' AND A DATA ADDRESS AND            *
*           LENGTH IN REGS 'RSRCE' AND 'RLSRCE'.  ACCORDING           *
*           TO WHETHER COMPRESSION, COMPACTION, OR NEITHER            *
*           IS SPECIFIED, CALL ONE OF THREE SETS OF ROUTINES          *
*           TO TRANSFER THE DATA TO THE R.U. BUFFER.  IF AN           *
*           R.U. BUFFER BECOMES FULL DURING THE OPERATION,            *
*           AND MORE DATA REMAINS TO BE PROCESSED, RETURN TO          *
*           CALLER WITH 'SCWMORE' FLAG SET.  CALLER SHOULD            *
*           OBTAIN A NEW BUFFER, COPY COMPOSER WORK AREA AND          *
*           SAVE AREA INTO IT, SEND THE FULL R.U., AND CALL           *
*           COMPOSER AGAIN TO PROCESS THE REMAINING DATA.             *
*                                                                     *
*           IF AN R.U. BUFFER BECOMES FULL ON THE LAST BYTE           *
*           OF THE OPERATION, RETURN TO CALLER WITH THE               *
*           'SCWFULL' FLAG SET.  CALLER SHOULD SEND THE OLD           *
*           BUFFER.  IF THE R.U. BUFFER IS NOT FULL AT THE            *
*           COMPLETION OF THE OPERATION, RETURN WITH NEITHER          *
*           'SCWMORE' NOR 'SCWFULL' SET.  THE CALLER MAY              *
*           STILL SEND THE R.U. ON THE BASIS OF EXTERNAL              *
*           REQUIREMENTS TO TRUNCATE OR END THE CHAIN, ETC.           *
*                                                                     *
*           CERTAIN VALUES MUST BE STORED IN THE COMPOSER             *
*           SAVE AREA BETWEEN CALLS.  IN A NEW BUFFER,                *
*           COMPOSER FLAG BYTE 'SCWFLAGS' IS ASSUMED ZERO.            *
*           THE CARRIAGE CONTROL STRING 'SCWCCWA' SHOULD BE           *
*           INITIALIZED.  OTHER DATA STORED IN THE SAVE AREA          *
*           WILL BE MANAGED BY THE COMPOSER.                          *
*                                                                     *
*           THE COMPOSER ROUTINES ARE LABELLED AS FOLLOWS -           *
*                MVKO - GENERAL ROUTINES                              *
*                MVKD - NONCOMPRESS/NONCOMPACT FEEDER ROUTINE         *
*                MVKE - COMPRESS/COMPACT EMITTER ROUTINE              *
*                MVKF - COMPRESS/COMPACT FEEDER ROUTINE               *
*                MVKP - COMPRESSION PLANNER ROUTINES                  *
*                MVKQ - COMPACTION PLANNER ROUTINES                   *
*                MVKU - NONCOMPRESS/NONCOMPACT MOVER ROUTINE          *
*                MVKV - COMPRESSION MOVER ROUTINES                    *
*                MVKW - COMPACTION MOVER ROUTINES                     *
*                MVKZ - COMPRESS/COMPACT R.U. SEND ROUTINE            *
*                                                                     *
***********************************************************************
         SPACE 1                                                     R4
MVKOMPOZ ST    ML,SCWRETRN         SAVE RETURN ADDRESS               R4
         LA    RBY1,1              LOAD REGISTER CONSTANT OF 1       R4
         L     RSINK,RPLAREA       CALCULATE CURRENT                 R4
         AL    RSINK,RPLRLEN        R.U. POSITION                    R4
         L     REND,SCWRUEND       GET END OF R.U. ADDRESS          R41
         LA    RBASE,MVKOVSUB      GET COMPOSER SUBS ADDRESSABILITY R41
         TM    MDCTFMT,DCTPPRES    TEST DATA STREAM FORMAT           R4
         BO    MVKOMPRS            BRANCH IF COMPRESSION SPECIFIED   R4
         EJECT                                                       R4
***********************************************************************
*                                                                     *
*                   NONCOMPRESS/COMPACT FEEDER ROUTINE                *
*                                                                     *
*           OBJECTIVE - FOR IMMEDIATE COMMANDS, GENERATE THE          *
*           SCS CONTROL STRING EQUIVALENT, FEED IT TO THE             *
*           BUFFER FILL ROUTINE (B.F.R.), AND RETURN.  FOR            *
*           NON-IMMEDIATE COMMANDS, GENERATE AND FEED TRANS-          *
*           PARENT FRAME SEQUENCE TO B.F.R. IF REQUIRED.              *
*           FEED DATA STRING TO B.F.R. (ADJUSTING LENGTH TO           *
*           SUPPRESS TRAILING BLANKS, UNLESS TRANSPARENCY             *
*           FRAME GENERATION ALREADY DID THIS). GENERATE AND          *
*           FEED CHANNEL COMMAND'S SCS CONTROL STRING EQUI-           *
*           LENT TO B.F.R., AND RETURN.                               *
*                                                                     *
*           IF THE B.F.R. DETECTS A FULL BUFFER DURING THE            *
*           MOVE OF ANY STRING, RETURN FROM THE COMPOSER IS           *
*           MADE WITH FLAG 'SCWMORE' SET.  AFTER CALLER HAS           *
*           GOTTEN A NEW BUFFER AND SENT THE R.U., THE                *
*           COMPOSER IS REINVOKED TO PROCESS THE EXCESS.              *
*                                                                     *
*           ON NORMAL RETURN FLAG 'SCWMORE' IS OFF. IN ADDI-          *
*           TION, IF THE CONTROL STRING WAS JUST LONG ENOUGH          *
*           TO FILL THE LAST BUFFER (INDICATED BY B.F.R.              *
*           COND.CODE), TURN ON 'SCWFULL' FLAG TO INSTRUCT            *
*           CALLER THAT R.U. IS READY TO SEND.                        *
*                                                                     *
***********************************************************************
         SPACE 2                                                    R41
         PUSH  USING               SAVE ACCESS METHOD REGISTER USE  R41
         USING MVKOVSUB,RBASE      COMPOSER SEGMENT ADDRESSABILITY  R41
         SPACE 2                                                    R41
         SLR   REND,RSINK          CALC # OF UNUSED                 R41
         ALR   REND,RBY1            BYTES IN THE R.U.               R41
         SPACE 1                                                     R4
         TM    SCWFLAGS,SCWMORE    TEST COMPOSER FLAGS               R4
         BO    MVKUCNUE            BRANCH IF CONTINUING PREV. CALL   R4
         SPACE 1                                                     R4
         OI    SCWFLAGS,SCWMORE    INDICATE COMPOSING IN PROGRESS    R4
         TM    SCWLCCC,X'02'       TEST CURRENT COMMAND TYPE         R4
         BO    MVKDCTRL            BRANCH IF IMMEDIATE COMMAND       R4
         BAL   RFEED,MVKOTPCY      CALL TRANSPARENCY CHECK ROUTINE   R4
         BM    MVKDCTRL            BRANCH IF ZERO LENGTH IN CCW      R4
         BZ    MVKDSCAN            BRANCH IF NO VALUES BELOW X'40'   R4
         SPACE 1                                                     R4
*                        FEED TRANSPARENT FRAME SEQUENCE             R4
         SPACE 1                                                     R4
         OI    SCWFLAGS,SCWCTRL    INDICATE SOURCE IS CONTROL STRING R4
         BAL   RFEED,MVKUFILL      CALL BUFFER FILL ROUTINE          R4
         L     RLSRCE,SCWLINPT     RESTORE LENGTH OF SOURCE STRING   R4
         B     MVKDDATA            BYPASS SCAN FOR TRAILING BLANKS   R4
         EJECT                                                       R4
*                        ADJUST LENGTH TO SUPPRESS TRAILING BLANKS   R4
         SPACE 1                                                     R4
MVKDSCAN ST    RSRCE,SCWINPT       SAVE ADDRESS OF SOURCE STRING     R4
         ALR   RSRCE,RLSRCE        GENERATE ADDRESS OF LAST BYTE + 1 R4
         LA    RFEED,MVKDDATA      OPTIMIZE LOOP WITH ADDRESS IN REG R4
SKIP310  BCTR  RSRCE,0             SCAN BACKWARDS                    R4
         CLI   0(RSRCE),C' '        ELIMINATING                      R4
         BNER  RFEED                 TRAILING                        R4
         BCT   RLSRCE,SKIP310         BLANKS                         R4
         B     MVKDCTRL            GO DO CARRIAGE CTRL IF ALL BLANK  R4
         SPACE 1                                                     R4
*                        FEED DATA STRING (TEXT POINTED TO BY CCW)   R4
         SPACE 1                                                     R4
MVKDDATA L     RSRCE,SCWINPT       RESTORE ADDRESS OF SOURCE STRING  R4
         NI    SCWFLAGS,255-SCWCTRL  INDICATE SOURCE IS TEXT STRING  R4
         BAL   RFEED,MVKUFILL      CALL BUFFER FILL ROUTINE          R4
         SPACE 1                                                     R4
*                        FEED SCS CARRIAGE CONTROL STRING            R4
         SPACE 1                                                     R4
MVKDCTRL TM    MDCTFEAT,DCTPCCTL   TEST FOR CARRIAGE CONTROLS  @OZ29180
         BZ    MVKDNCTR            BRANCH IF NOT ALLOWED       @OZ29180
         BAL   RFEED,MVKOCCDE      CALL CAR'GE CTL DCODE RTN   @OZ29180
         BAL   RFEED,MVKUFILL      CALL BUFFER FILL ROUTINE          R4
         BZ    MVKDTRNC            BRANCH IF R.U. FULL               R4
MVKDNCTR NI    SCWFLAGS,255-SCWMORE  INDICATE COMPOSING CMPLTE @OZ29180
         L     REND,RPLAREA        CALCULATE AND                     R4
         SLR   RSINK,REND           STORE CURRENT                    R4
         ST    RSINK,RPLRLEN         R.U. LENGTH                     R4
         L     MBASE2,MVKOVSUB     RESTORE SNA SUBS BASE REGISTER   R41
         L     ML,SCWRETRN         RETRIEVE COMPOSER RETURN ADDRESS  R4
         BR    ML                  RETURN TO CALLER                 R41
         SPACE 3                                                     R4
*                        FORCE SCHEDULING OF FULL BUFFER             R4
         SPACE 1                                                     R4
MVKDTRNC NI    SCWFLAGS,255-SCWMORE  INDICATE COMPOSING COMPLETE     R4
         OI    SCWFLAGS,SCWFULL    FORCE BUFFER TO BE SCHEDULED      R4
         B     MVKUFLEN            BRANCH TO SET LENGTH AND RETURN   R4
         EJECT                                                       R4
***********************************************************************
*                                                                     *
*           NONCOMPRESS/NONCOMPACT BUFFER FILL ROUTINE                *
*                                                                     *
*           OBJECTIVE - ENTER AT 'MVKUFILL' TO MOVE STRING            *
*           INTO CURRENT OUTPUT BUFFER (STRING ADDR & LENGTH          *
*           IN REGS RSRCE AND RLSRCE).  REGS RBY1, REND, AND          *
*           RSINK SHOULD BE PRE-LOADED WITH 1, NUMBER UNUSED          *
*           BYTES LEFT IN BUFFER, AND ADDR OF FIRST UNUSED            *
*           POSITION, RESPECTIVELY.                                   *
*                                                                     *
*           IF THE ENTIRE STRING CANNOT FIT IN THE BUFFER,            *
*           ADDR AND LENGTH OF THE EXCESS ARE CALCULATED AND          *
*           SAVED, THE COMPOSER EXITS TO CALLER WITH FLAG             *
*           'SCWMORE' SET, AND IT IS EXPECTED THAT CALLING            *
*           CODE WILL GET NEW BUFFER, SEND OLD BUFFER, AND            *
*           CALL COMPOSER AGAIN.  SINCE 'SCWMORE' FLAG STILL          *
*           IS SET 'MVKUCNUE' IS ENTERED TO HANDLE EXCESS.            *
*                                                                     *
*           CONDITION CODES ARE SET AT EXIT AS FOLLOWS -              *
*                4  (MINUS)  STRING FITS WITH ROOM TO SPARE           *
*                8  (ZERO)   STRING FILLS LAST BUFFER POSN.           *
*                                                                     *
***********************************************************************
MVKUCNUE L     RSRCE,SCWSRCE       RELOAD ADDRESS AND LENGTH         R4
         L     RLSRCE,SCWLSRCE      OF SOURCE STRING REMAINDER       R4
         L     RFEED,SCWFEED       RELOAD FILL ROUTINE RETURN ADDR   R4
         TM    SCWFLAGS,SCWCTRL    TEST COMPOSER FLAGS               R4
         BZ    MVKUFILL            BRANCH IF NOT CONTROL STRING      R4
         ALR   RSRCE,MBUF          CONVERT OFFSET TO ADDRESS         R4
MVKUFILL SLR   REND,RLSRCE         CALC IF WHOLE STRING FITS IN R.U. R4
         BC    NOT-SLSM,SKIP320    BRANCH IF IT DOES                 R4
         ALR   RLSRCE,REND         CALC LENGTH OF PART THAT FITS     R4
SKIP320  SLR   RLSRCE,RBY1         DECREASE BY 1 FOR MACHINE LENGTH  R4
         BC    SLSM,SKIP330        BYPASS EXECUTE IF NOTHING TO MOVE R4
         EX    RLSRCE,MVKUFMVC     MOVE STRING INTO R.U.             R4
         LA    RSINK,1(RLSRCE,RSINK)  UPDATE R.U. CURRENT POSITION   R4
         LA    RSRCE,1(RLSRCE,RSRCE)  AND SOURCE REMAINDER POINTERS  R4
SKIP330  LCR   RLSRCE,REND         TEST LENGTH OF REMAINING SOURCE   R4
         BNPR  RFEED               RETURN WITH COND CODE IF ALL USED R4
         TM    SCWFLAGS,SCWNSPAN   TEST COMPOSER FLAGS               R4
         BO    MVKUNSPA            BR IF SPANNED RECORDS FORBIDDEN   R4
         TM    SCWFLAGS,SCWCTRL    OTHERWISE TEST COMPOSER FLAGS     R4
         BZ    SKIP340             BRANCH IF NOT CONTROL STRING      R4
         SLR   RSRCE,MBUF          CONVERT ADDRESS TO OFFSET         R4
SKIP340  ST    RSRCE,SCWSRCE       SAVE ADDRESS AND LENGTH           R4
         ST    RLSRCE,SCWLSRCE      OF SOURCE STRING REMAINDER       R4
         ST    RFEED,SCWFEED       SAVE BUFFER FILL RTNE RETURN ADDR R4
MVKUFLEN LH    REND,ICERULEN       SET FULL R.U.                     R4
         ST    REND,RPLRLEN         LENGTH IN RPL                    R4
MVKUNSPA L     ML,SCWRETRN         RETRIEVE COMPOSER RETURN ADDRESS  R4
         L     MBASE2,MVKOVSUB     RESTORE SNA SUBS BASE REGISTER   R41
         BR    ML                  RETURN TO CALLER WITH FULL R.U.   R4
         SPACE 1                                                     R4
MVKUFMVC MVC   0(*-*,RSINK),0(RSRCE)  ** EXECUTE ONLY **             R4
         EJECT                                                       R4
MVKOVSUB DC    A(RTAMVSUB)         SNA SUBS ADDR TO REFRESH MBASE2  R41
         SPACE 1                                                    R41
***********************************************************************
*                                                                     *
*                        SNA TRANSPARENCY CHECK ROUTINE               *
*                                                                     *
*           OBJECTIVE - TEST FOR ZERO CCW LENGTH AND FOR              *
*           APPEARANCE OF CHARACTERS IN CONTROL QUADRANT              *
*           (BELOW X'40').  IF CONTROLS OCCUR SUPPRESS                *
*           TRAILING BLANKS NOW SINCE CORRECT COUNT MUST BE           *
*           STORED IN TRANSPARENCY FRAMING SEQUENCE.  CONDI-          *
*           TION CODE IS SET AT EXIT AS FOLLOWS -                     *
*                     4  (MINUS)  CCW LENGTH WAS ZERO                 *
*                     8  (ZERO)   NO CONTROLS OCCUR IN DATA,          *
*                                 OR TRANSPARENCY CHECK NOT           *
*                                 REQUESTED                           *
*                     2  (PLUS)   'TRN' AND COUNT GENERATED,          *
*                                 ADDR AND LENGTH OF 2 IN             *
*                                 REGS 'RSRCE' AND 'RLSRCE'.          *
*                                 DATA ADDR & LTH ARE SAVED.          *
*                                                                     *
***********************************************************************
         SPACE 1                                                     R4
MVKOTPCY SLR   RLSRCE,RBY1         DECREASE BY 1 FOR MACHINE LENGTH  R4
         BCR   SLSM,RFEED          RETURN IF CCW LENGTH WAS ZERO       C
                                    (WITH COND CODE 'SLSM', 'MINUS') R4
         TM    SCWFLAGS,SCWTRNSP   TEST COMPOSER FLAGS               R4
         BZ    *+16                BYPASS EXECUTE IF TRANSPARENCY      C
                                    CHECK NOT REQUESTED              R4
         ST    REND,SCWTEND   *R1* SAVE R1 IN CASE 'TRT' SPOILS IT   R4
         ST    RSINK,SCWTSINK *R2* SAVE R2 IN CASE 'TRT' SPOILS IT   R4
         EX    RLSRCE,MVKPUTRN     CHECK FOR VALUES BELOW X'40'      R4
         LA    RLSRCE,1(,RLSRCE)   CHANGE MACHINE TO TRUE LENGTH     R4
         BZR   RFEED               RETURN IF NO VALUES BELOW X'40'     C
                                    (WITH COND CODE 'ZERO')          R4
         ALR   RLSRCE,RSRCE        COMPUTE ADDRESS OF LAST BYTE + 1 R41
         BALR  R2,0                OPTIMIZE LOOP WITH ADDRESS IN REGR41
         BCTR  RLSRCE,0            SCAN BACKWARDS                   R41
         CLI   0(RLSRCE),SCSBLANK   ELIMINATING                     R41
         BER   R2                    TRAILING BLANKS                R41
         SLR   RLSRCE,RSRCE        COMPUTE LENGTH                   R41
         ALR   RLSRCE,RBY1          OF REMAINING DATA               R41
         ST    RSRCE,SCWINPT       SAVE ADDRESS OF SOURCE STRING    R41
         STC   RLSRCE,SCWTRN+1     STORE TRANSPARENT DATA LENGTH     R4
         ST    RLSRCE,SCWLINPT     SAVE LENGTH OF SOURCE STRING      R4
         LA    RSRCE,SCWTRN        POINT TO TRANSPARENCY FRAME STRNG R4
         L     RSINK,SCWTSINK *R2* RE-CREATE R1 AND R2 VALUES        R4
         L     REND,SCWTEND   *R1*  DESTROYED BY NON-ZERO 'TRT'      R4
         LR    RLSRCE,RBY1         SET LENGTH 2 FOR 'TRN' + COUNT   R41
         AR    RLSRCE,RBY1          AND SET CONDITION CODE 'PLUS'   R41
         BR    RFEED               RETURN                            R4
         SPACE 1                                                     R4
MVKPUTRN TRT   0(*-*,RSRCE),MSCSTRAN  ** EXECUTE ** DETECT SCS CTRLS R4
         EJECT                                                       R4
***********************************************************************
*                                                                     *
*                        CARRIAGE CONTROL DECODE ROUTINE              *
*                                                                     *
*           OBJECTIVE - GENERATE ANY NECESSARY COUNT OR CODE          *
*           TO FORM THE SCS CONTROL STRING THAT MATCHES THE           *
*           CHANNEL COMMAND IN FUNCTION.  EXIT WITH ADDR OF           *
*           THE STRING IN REG 'RSRCE' AND LENGTH IN 'RLSRCE'          *
*                                                                     *
***********************************************************************
         SPACE 2                                                     R4
MVKOCCDE TM    SCWLCCC,X'80'       TEST CURRENT COMMAND TYPE         R4
         BO    MVKOCSKP            BRANCH IF SKIP                    R4
         CLI   SCWLCCC,X'63'       TEST CURRENT COMMAND TYPE         R4
         BE    MVKOCFCB            BRANCH IF LOAD FCB                R4
         NI    SCWFLAGS,255-SCWCTRL  SHOW STRING NOT IN BUFFER       R4
         LA    RSRCE,MSCSNLS       POINT TO 14 SCS 'NL' CODES        R4
         CLI   SCWLCCC,X'79'       TEST CURRENT COMMAND TYPE         R4
         BE    MVKOCIRS            BRANCH IF SUBSTITUTE PUNCH CODE   R4
         SLR   RLSRCE,RLSRCE       CLEAR REGISTER                    R4
         IC    RLSRCE,SCWLCCC      PICK UP COMMAND CODE              R4
         SRA   RLSRCE,3            EXTRACT NUMBER OF LINES TO SPACE  R4
         BNZR  ML                  RETURN IF 1, 2, 3, OR 14          R4
         LR    RLSRCE,RBY1         SET LENGTH OF 1 FOR 'CR'          R4
         SLR   RSRCE,RBY1          SLIDE POINTER TO LEFT 2 BYTES     R4
         BCTR  RSRCE,RFEED          TO POINT TO 'CR', AND RETURN     R4
         SPACE 1                                                     R4
MVKOCSKP OI    SCWFLAGS,SCWCTRL    SHOW CONTROL STRING IS IN BUFFER  R4
         SLR   RLSRCE,RLSRCE       CLEAR REGISTER                    R4
         IC    RLSRCE,SCWLCCC      PICK UP COMMAND CODE              R4
         SRL   RLSRCE,3            SHIFT CODE TO GET CHANNEL NUMBER  R4
         N     RLSRCE,MSCSMASK     MASK OFF ALL BUT LOW 4 BITS       R4
         LA    RSRCE,SCWSEL        POINT TO 'SEL'/CODE/'CR' SEQUENCE R4
         CLR   RLSRCE,RBY1         COMPARE CHANNEL NUMBER WITH 1     R4
         BNE   SKIP350             GENERATE 'SEL' IF NOT CHANNEL 1   R4
         MVI   SCWSEL-1,SCSFF      MOVE 'FORMS FEED' TO WORK AREA    R4
         LR    RLSRCE,RBY1         SET LENGTH OF 1 FOR 'FF'          R4
         BCTR  RSRCE,RFEED         SLIDE POINTER TO LEFT 1 BYTE        C
                                    TO POINT TO 'FF', AND RETURN     R4
SKIP350  IC    RLSRCE,MSCSSELN-1(RLSRCE)  USE CHAN # AS TABLE INDEX  R4
         LA    RSRCE,SCWSEL        POINT TO 'SEL'/CODE/'CR' SEQUENCE R4
         STC   RLSRCE,SCWSEL+1     STORE CHANNEL CODE IN CTRL STRING R4
         LA    RLSRCE,3            FOR SKIP AFTER WRITE INCLUDE 'CR' R4
         TM    SCWLCCC,X'02'       TEST CURRENT COMMAND TYPE         R4
         BZR   RFEED               RETURN IF NOT IMMEDIATE COMMAND   R4
         BCTR  RLSRCE,RFEED        IF IMMED ADJ LENGTH TO 2, RETURN  R4
         SPACE 1                                                     R4
MVKOCIRS LR    RLSRCE,RBY1         SET LENGTH OF 1 FOR 'IRS'         R4
         BCTR  RSRCE,RFEED         SLIDE POINTER TO LEFT 1 BYTE        C
                                    TO POINT TO 'IRS', AND RETURN    R4
         EJECT                                                       R4
*                                                                    R4
*                             HANDLE FCB ON SNA REMOTE TERMINALS     R4
*                                                                    R4
         SPACE 2                                                     R4
MVKOCFCB OI    SCWFLAGS,SCWCTRL    SHOW CONTROL STRING IS IN BUFFER  R4
         MVC   SCWSVFWA,MSCSSVF    MOVE IN MODEL SVF STRING          R4
         ST    REND,SCWTEND        FREE UP                           R4
         ST    RSINK,SCWTSINK       REGISTERS                        R4
         ST    RFEED,SCWFEED         FOR TEMP. USE                   R4
         BCTR  RLSRCE,0            DECREASE LENGTH BY 1              R4
         TM    0(RSRCE),X'C0'      TEST 1ST FCB BYTE FOR INDEXING    R4
         LA    REND,0(RLSRCE,RSRCE)  CALCULATE ADDR OF END OF STRING R4
         BNZ   SKIP360             IF INDEX BYTE PRESENT RSRCE IS OK R4
         BCTR  RSRCE,0             OTHERWISE ADJUST FOR ABSENCE      R4
SKIP360  LCR   RLSRCE,RSRCE        SAVE COMPLEMENT OF STRING ORIGIN  R4
         SPACE 2                                                     R4
MVKOCFNO IC    RSINK,1(,RSRCE)     PICK UP CHANNEL NUMBER            R4
         N     RSINK,MSCSMASK      MASK OFF ALL BUT LOW 4 BITS       R4
         BZ    MVKOCFLL            IF ZERO GO CHECK FOR LAST LINE    R4
         LA    RSINK,SVFTABWK-1(RSINK)  POINT TO CHANNEL STOP ARRAY  R4
         CLI   0(RSINK),0          TEST FOR A VALUE ALREADY SAVED    R4
         BNE   MVKOCFLL            IF PRESENT IGNORE FURTHER STOPS   R4
         LA    RFEED,1(RLSRCE,RSRCE)  CALC LINE NUMBER OF FIRST STOP R4
         STC   RFEED,0(,RSINK)     SAVE IN CHANNEL STOP ARRAY        R4
         SPACE 1                                                     R4
MVKOCFLL TM    1(RSRCE),X'10'      TEST FOR LAST FLAG                R4
         BO    MVKOCFFG            IF ON TEST IF TRULY LAST OR 8 L/I R4
         SPACE 1                                                     R4
MVKOCFIX BXLE  RSRCE,RBY1,MVKOCFNO IF OFF, INCREMENT BY 1 AND LOOP   R4
         SPACE 1                                                     R4
*                                  FCB WITH NO 'LAST' FLAG SET IS    R4
*                                   INVALID BUT WILL BE ACCEPTED     R4
         BCTR  RSRCE,0             PRETEND LAST BYTE HAD FLAG        R4
         SPACE 2                                                     R4
MVKOCFFG LR    RFEED,RLSRCE        GET COMPLEMENT OF STRING ORIGIN   R4
         ALR   RFEED,RSRCE         SUBTRACT ORIGIN FROM CURRENT ADDR R4
         BC    ALDZ,MVKOCFIX       IF 0, FLAG IS ON 1ST BYTE = 8 L/I R4
         ALR   RFEED,RBY1          IF NOT 0 ADD 1 TO GET FCB DEPTH   R4
         CLI   SVFTABWK,1          TEST FOR CHANNEL 1 AT LINE 1      R4
         BNH   MVKOCFRN            IF YES OR NOT DEFINED, GO EXIT    R4
         EJECT                                                       R4
*                                                                    R4
*                             FORCE CHANNEL 1 (TOP MARGIN) TO LINE 1 R4
*                                                                    R4
         SPACE 3                                                     R4
         SLR   RLSRCE,RLSRCE       CLEAR                             R4
         SLR   RSINK,RSINK          REGISTERS                        R4
         IC    RLSRCE,SVFTABWK     PICK UP CHANNEL 1 VALUE           R4
         BCTR  RLSRCE,0            LESS 1 TO GET ADJUSTMENT FACTOR   R4
         LA    RSRCE,SVFTABWK      START WITH CHANNEL 1 VALUE        R4
         LA    REND,SVFTABWK+11    END WITH CHANNEL 12 VALUE         R4
         SPACE 2                                                     R4
MVKOCFAJ IC    RSINK,0(,RSRCE)     GET CHANNEL STOP                  R4
         LTR   RSINK,RSINK         TEST FOR UNDEFINED (ZERO)         R4
         BZ    SKIP370             SKIP ADJUSTMENT IF UNDEFINED      R4
         SLR   RSINK,RLSRCE        OTHERWISE ADJUST                  R4
         BC    SLSP,SKIP380        SKIP WRAPAROUND IF PLUS           R4
         ALR   RSINK,RFEED         ADD IN MAX VALUE TO WRAP AROUND   R4
SKIP380  STC   RSINK,0(,RSRCE)     PUT BACK IN ARRAY                 R4
SKIP370  BXLE  RSRCE,RBY1,MVKOCFAJ LOOP                              R4
         SPACE 2                                                     R4
MVKOCFRN STC   RFEED,SVFMAXPL      SET MAX PRINT LINE VALUE          R4
         MVC   SVFTOPM,SVFTABWK    SET TOP MARGIN (CHANNEL 1)        R4
         STC   RFEED,SVFBOTM       SET BOTTOM MARGIN                 R4
         LA    RLSRCE,L'SCWSVFWA   SET SOURCE LENGTH                 R4
         LA    RSRCE,SCWSVFWA      POINT TO CONTROL STRING WORK AREA R4
         L     REND,SCWTEND        RESTORE                           R4
         L     RSINK,SCWTSINK       TEMPORARY                        R4
         L     RFEED,SCWFEED         WORK REGS                       R4
         BR    RFEED               RETURN TO CALLER                  R4
         SPACE 3                                                     R4
*                                                                    R4
*                             MODEL SCS CARRIAGE CONTROL STRINGS     R4
*                                                                    R4
         SPACE 2                                                     R4
         DS    0D                                                    R4
MSCSCC   DC    AL1(SCSTRN,0,SCSSEL,0,SCSCR)  THESE 3 CARDS MUST      R4
         DC    AL1(SCSIRS)                    APPEAR TOGETHER IN     R4
MSCSNLS  DC    14AL1(SCSNL)                    THE ORDER SHOWN       R4
MSCSMASK DC    F'15'               MASK TO ISOLATE LOW-ORDER 4 BITS  R4
MSCSSELN DC    X'8182838485868788897A7B7C'  SCS CHANNEL SELECT CODES R4
MSCSSVF  DC    XL18'2BC20F000000000000000000000000000000'  MODEL SVF R4
         TITLE 'HASP SNA REMOTE TERMINAL SCS SCAN TABLE'             R4
         SPACE 5                                                     R4
MSCSTRAN DS    0D             XLATE & TEST TABLE FOR ANY BELOW X'40' R4
*                                                                    R4
         DC    64X'04',192X'00'                                      R4
         ORG   MSCSTRAN+SCSSEL                                       R4
         DC    X'10'               1ST PART OF SECURE STRING READER  R4
         ORG   MSCSTRAN+SCSFF                                        R4
         DC    X'08'               FORM FEED - END OF INPUT RECORD   R4
         ORG   MSCSTRAN+SCSNL                                        R4
         DC    X'08'               NEW LINE - END OF INPUT RECORD    R4
         ORG   MSCSTRAN+SCSIRS                                       R4
         DC    X'08'               INTER-RECORD SEPARATOR            R4
         ORG   MSCSTRAN+SCSTRN                                       R4
         DC    X'0C'               TRANSPARENCY FRAME CHARACTER      R4
         ORG   MSCSTRAN+256                                          R4
         TITLE 'HASP SNA REMOTE TERMINAL COMPRESSION ROUTINES'       R4
***********************************************************************
*                                                                     *
*                  COMPRESS/COMPACT FEEDER ROUTINE                    *
*                                                                     *
*           OBJECTIVE - FOR IMMEDIATE COMMANDS, GENERATE THE          *
*           SCS CONTROL STRING EQUIVALENT, FEED IT TO THE             *
*           EMITTER/PLANNER/MOVER ROUTINES (E/P/M), AND               *
*           RETURN.  FOR NON-IMMEDIATE COMMANDS, GENERATE             *
*           AND FEED TRANSPARENT FRAME SEQUENCE TO E/P/M IF           *
*           REQUIRED. FEED DATA STRING TO E/P/M. GENERATE             *
*           AND FEED CHANNEL COMMAND'S EQUIVALENT SCS                 *
*           CONTROL STRING TO E/P/M, AND RETURN.                      *
*                                                                     *
*           IF THE E/P/M DETECTS A FULL BUFFER DURING THE             *
*           PROCESSING OF ANY STRING, RETURN FROM THE COM-            *
*           POSER IS MADE WITH FLAG 'SCWMORE' SET.  AFTER             *
*           CALLER HAS GOTTEN A NEW BUFFER & SENT THE R.U.,           *
*           THE COMPOSER IS REINVOKED TO PROCESS THE EXCESS.          *
*                                                                     *
*           ON NORMAL RETURN FLAG 'SCWMORE' IS OFF. IN ADDI-          *
*           TION, IF THE CONTROL STRING WAS JUST LONG ENOUGH          *
*           TO FILL THE LAST BUFFER (I.E., THE LAST EMISSION          *
*           CAUSES THE SEND ROUTINE TO BE ENTERED), TURN ON           *
*           'SCWFULL ' FLAG TO INSTRUCT CALLER THAT R.U. IS           *
*           READY TO SEND.                                            *
*                                                                     *
*           SEE PROLOGUE AT 'MVKEMITR' FOR OUTLINE OF THE             *
*           EMITTER/PLANNER/MOVER & DEFINITION OF 'EMISSION'          *
*                                                                     *
***********************************************************************
         SPACE 1                                                     R4
         DROP  RSCBL,RPLAN,RNUM,RCHAR,RLCHAR  REGS USED BY COMPOSER R41C
               MDCT,MBASE1,BASE1,BASE2,PCE  = STANDARD RTAM EQUATES R41
         SPACE 1                                                     R4
MVKOMPRS ST    R13,SCWSAV13        FREE UP REG FOR TEMPORARY USE    R41
         SPACE 1                                                     R4
         L     RPLAN,SCWPLAN       RELOAD PLANNER STATE             R41
         SLR   RCPZ,RCPZ           CLEAR INDEX REG             @OZ27430
         L     RCPA,SCWCPARS       RELOAD COMPACTION RACING STATE   R41
         L     RCPT,ICECPT         ESTABLISH COMPACTION             R41
         USING CPTDSECT,RCPT        TABLE ADDRESSABILITY            R41
         SPACE 1                                                    R41
         TM    SCWFLAGS,SCWMORE    TEST COMPOSER FLAGS              R41
         BO    MVKZCNUE            BRANCH IF CONTINUING PREV. CALL  R41
         SPACE 1                                                     R4
         OI    SCWFLAGS,SCWMORE    INDICATE COMPOSING IN PROGRESS   R41
         TM    SCWLCCC,X'02'       TEST CURRENT COMMAND TYPE        R41
         BO    MVKFCTRL            BRANCH IF IMMEDIATE COMMAND       R4
         BAL   RFEED,MVKOTPCY      CALL TRANSPARENCY CHECK ROUTINE   R4
         BM    MVKFCTRL            BRANCH IF ZERO LENGTH IN CCW      R4
         BZ    MVKFDATA            BRANCH IF NO VALUES BELOW X'40'   R4
         EJECT                                                       R4
*                        FEED TRANSPARENT FRAME SEQUENCE             R4
         SPACE 1                                                     R4
         OI    SCWFLAGS,SCWCTRL    INDICATE SOURCE IS CONTROL STRING R4
         BAL   RFEED,MVKEMITR      CALL EMITTER ROUTINE              R4
         BALR  RFEED,RPLAN         FORCE LAST EMISSION TO PLANNER    R4
         L     RNUM,MVKFPEND       GET PLANNER-END ROUTINE OFFSET   R41
         BAL   RFEED,0(RNUM,RPLAN) FORCE MOVE TO R.U. BUFFER        R41
         L     RSRCE,SCWINPT       RETRIEVE ADDRESS AND              R4
         L     RLSRCE,SCWLINPT      LENGTH OF INPUT TEXT             R4
         SPACE 1                                                     R4
*                        FEED DATA STRING (TEXT POINTED TO BY CCW)   R4
         SPACE 1                                                     R4
MVKFDATA NI    SCWFLAGS,255-SCWCTRL  INDICATE SOURCE IS TEXT STRING  R4
         BAL   RFEED,MVKEMITR      CALL EMITTER ROUTINE              R4
         CLI   0(RCHAR),C' '       TEST LAST EMISSION CHARACTER      R4
         BE    MVKFDATB            SKIP EMISSION IF TRAILING BLANKS R41
         BALR  RFEED,RPLAN         OTHERWISE FORCE LAST EMISSION     R4
MVKFDATB L     RNUM,MVKFPEND       GET PLANNER-END ROUTINE OFFSET   R41
         BAL   RFEED,0(RNUM,RPLAN) FORCE MOVE TO R.U. BUFFER        R41
         SPACE 1                                                     R4
*                        FEED SCS CARRIAGE CONTROL STRING            R4
         SPACE 1                                                     R4
MVKFCTRL BAL   RFEED,MVKOCCDE      CALL CARRIAGE CTL. DECODE ROUTINE R4
         BAL   RFEED,MVKEMITR      CALL EMITTER ROUTINE              R4
         OI    SCWFLAGS,SCWLAST    INDICATE LAST EMISSION FOR CCW    R4
         BALR  RFEED,RPLAN         FORCE LAST EMISSION TO PLANNER    R4
         L     RNUM,MVKFFEND       GET  FEEDER-END ROUTINE OFFSET   R41
         BAL   RFEED,0(RNUM,RPLAN) FORCE R.U. TO SENDABLE FORM      R41
         NI    SCWFLAGS,255-SCWLAST-SCWMORE  INDICATE COMPOSING DONE R4
         TM    SCWFLAGS,SCWNSPAN   TEST COMPOSER FLAGS               R4
         BO    MVKZFLEN            BR IF RECORD SPANNING FORBIDDEN   R4
         ST    RPLAN,SCWPLAN       SAVE PLANNER STATE                R4
         ST    RCPA,SCWCPARS       SAVE COMPACTION RACING STATE     R41
         B     MVKZFLEN            GO SET LTH, RESTORE REGS & RETURN R4
         SPACE 2                                                     R4
MVKFPEND DC    F'-4'               OFFSET TO PLANNER-END EXIT INSTR R41
MVKFFEND DC    F'-8'               OFFSET TO FEEDER-END  EXIT INSTR R41
         EJECT                                                       R4
***********************************************************************
*                                                                     *
*                   COMPACT/COMPRESS EMITTER ROUTINE                  *
*                                                                     *
*           OBJECTIVE - TAKE A STRING SUPPLIED BY THE FEEDER          *
*           ROUTINES AND BREAK IT DOWN INTO 'EMISSIONS'.              *
*           AN EMISSION IS 1 OR MORE CONSECUTIVE OCCURRENCES          *
*           OF THE SAME CHARACTER.                                    *
*                                                                     *
*           THE EMITTER EXECUTES A COMPARE-LONG WHICH LEAVES          *
*           REG 'RCHAR' POINTING AT THE 'EMISSION CHARACTER'          *
*           AND REG 'RLSRCE' SET SUCH THAT THE SUBTRACTION            *
*           'RNUM'-'RLSRCE' GIVES THE NUMBER OF OCCURRENCES           *
*           OF THE CHARACTER LESS 1.  (NOTE THE 'SLR' AMONG           *
*           THE FIRST INSTRUCTIONS OF EVERY PLANNER ROUTINE.)         *
*                                                                     *
*           THE EMITTER EXITS BY BRANCHING TO THE PLANNER             *
*           ROUTINE WHOSE ADDRESS IS IN REG 'RPLAN'.  THESE           *
*           ROUTINES EMBODY THE STRATEGY USED TO PLAN WHAT            *
*           KIND OF SCB'S SHOULD BE FORMED AND WHERE, HENCE           *
*           THE TERM 'PLANNER ROUTINE'.  FOR COMPRESSION,             *
*           THE PLANNER HAS TWO 'STATES' (NO SCB CURRENTLY            *
*           IN EFFECT--THE 'EMPTY' STATE--AND A NONCOMPRESSED         *
*           SCB IN EFFECT) AND CONSEQUENTLY TWO DIFFERENT             *
*           ROUTINES WHICH CAN BE POINTED AT BY 'RPLAN'.              *
*                                                                     *
*           PLANNER CODE ENDS BY BRANCHING BACK TO THE                *
*           EMITTER (EXCEPT WHEN AN R.U. IS FULL AND A SEND           *
*           ROUTINE INTERVENES) WHICH ADJUSTS REGISTERS AND           *
*           CONTINUES THE COMPARE-LONG.  THE LAST EMISSION            *
*           OF A STRING (WHICH RESULTS IN AN EQUAL COMPARE)           *
*           IS NOT PASSED TO THE PLANNER. INSTEAD RETURN IS           *
*           MADE TO THE FEEDER ROUTINE WHICH MAY EMIT IT BY           *
*           BRANCHING DIRECTLY TO THE PLANNER OR DISCARD IT.          *
*           TRAILING BLANKS (THE LAST EMISSION OF THE TEXT            *
*           STRING) ARE DETECTED AND SUPPRESSED IN THIS WAY.          *
*                                                                     *
*           PLANNER ROUTINES DO NOT ACTUALLY TRANSFER DATA            *
*           FROM THE SOURCE STRING TO THE R.U. BUFFER.  THIS          *
*           IS PERFORMED BY THE 'MOVER' ROUTINES.  FOR COM-           *
*           PRESSION, THERE ARE 3 MOVER ROUTINES--THE 'PRIME          *
*           MOVER', THE 'DUPLICATE (NONPRIME) MOVER', AND             *
*           THE 'NONCOMPRESSED SCB MOVER'.                            *
*                                                                     *
*           DATA TRANSFER IS DONE IN MOVE ROUTINES RATHER             *
*           THAN BYTE BY BYTE FOR EFFICIENCY REASONS.  ANY            *
*           DEFERRED MOVE MUST BE FORCED BEFORE THE FEEDER            *
*           SWITCHES FROM ONE SOURCE STRING TO ANOTHER.               *
*           'PLANNER-END' AND 'FEEDER-END' ROUTINES ARE               *
*           ASSOCIATED WITH EACH PLANNER STATE FOR FORCING            *
*           DEFERRED MOVES (POINTED TO BY BRANCHES LOCATED            *
*           4 AND 8 BYTES BEFORE THE NORMAL ENTRY POINT),             *
*           AND ONE IS INVOKED AT THE END OF EACH STRING.             *
*                                                                     *
***********************************************************************
         EJECT                                                       R4
*                                                                    R4
*           COMPACTION/COMPRESSION EMITTER ROUTINE                  R41
*                                                                   R41
         SPACE 1                                                    R41
         CNOP  4,8                 MAIN LOOP BRANCH TARGET ON DBLWD R41
MVKEMITZ LA    RPLAN,MVKQCA11      CHANGE TO ODD COMPACTION STATE   R41
         SPACE 1                                                     R4
MVKEMITR LR    RCHAR,RSRCE         SET OPERAND 1 LOC = OPERAND 2 LOCR41
         ALR   RSRCE,RBY1          OFFSET OPERAND 2 TO RIGHT 1 BYTE R41
         SLR   RLSRCE,RBY1         DECREASE OPERAND 2 LENGTH BY 1   R41
         LR    RLCHAR,RLSRCE       SET OPERAND 1 LTH = OPERAND 2 LTH R4
         LR    RNUM,RLSRCE         SAVE ORIGINAL OPERAND LENGTH     R41
         BCR   NOT-SLSP,RFEED      RTRN TO FEEDER IF SOURCE USED UP R41
         CLC   0(1,RCHAR),0(RSRCE) TEST FOR DUPLICATED CHARACTER    R41
         BNER  RPLAN               ENTER PLANNER IF NONE            R41
         CLCL  RCHAR,RSRCE         COMPARE FOR NUMBER OF OCCURRENCES R4
         SPACE 1                                                     R4
*                   'RNUM'-'RLSRCE' NOW GIVES THE NUMBER OF CONSECU- R4
*                   TIVE OCCURRENCES OF THE SAME CHARACTER, LESS 1.  R4
*                   'RCHAR' POINTS TO AN INSTANCE OF THE CHARACTER.  R4
         SPACE 1                                                     R4
         BNER  RPLAN               DRIVE PLANNER IF NOT LAST EMISS'N R4
         BR    RFEED               OTHERWISE RETURN TO FEEDER        R4
         SPACE 6                                                     R4
*                                                                    R4
*           COMPRESSION PLANNER - NONCOMPRESSED SCB STATE  (NORMAL)  R4
*                                                                    R4
         SPACE 1                                                     R4
         CNOP  0,8                 MAIN LOOP BRANCH TARGET ON DBLWD R41
         B     MVKVNCI         -8  BRANCH TO FEEDER-END  ROUTINE    R41
         B     MVKVNCI         -4  BRANCH TO PLANNER-END ROUTINE    R41
         SPACE 1                                                     R4
MVKPNC   SLR   RNUM,RLSRCE         COMPUTE # OF OCCURRENCES LESS 1   R4
         BC    SLSP,MVKPNC2        BRANCH IF DUP FACTOR GRTR THAN 1  R4
         SPACE 1                                                     R4
MVKPNC1  BCT   RSCBL,MVKEMITR      ADV SCB COUNT & GET NEXT EMISSION R4
         BCT   RNUM,MVKVNC         IF SCB FULL FORCE DUP FACTOR NEG.   C
               (ALWAYS BRANCHES)    & GO TO NONCOMPRESS SCB MOVER    R4
         SPACE 1                                                     R4
MVKPNC2  CLI   0(RCHAR),C' '       TEST SOURCE CHARACTER             R4
         BE    MVKVNCAL            END NONCOMPRESS SCB IF PRIME      R4
         CLR   RNUM,RSCBL          TEST IF EMISSION CAN FIT IN SCB   R4
         BNL   MVKVNCAL            END SCB IF NOT                    R4
         CLR   RNUM,RBY1           COMPARE (DUP FACTOR - 1) WITH 1   R4
         BH    MVKVNCAL            END IF DUP FACTOR GREATER THAN 2  R4
         SLR   RNUM,RBY1           DECREASE DUP FACTOR BY 1         R41
         BCT   RSCBL,MVKPNC1       DECREASE REMAINING SPACE IN SCB     C
               (ALWAYS BRANCHES)    BY 1 & TREAT AS IF SINGLE CHAR.  R4
         EJECT                                                       R4
*                                                                    R4
*           COMPRESSION PLANNER - EMPTY STATE  (NO CURRENT SCB)      R4
*                                                                    R4
         SPACE 1                                                     R4
         CNOP  0,8                 MAIN LOOP BRANCH TARGET ON DBLWD R41
         B     0(,RFEED)       -8  FEEDER-END AND PLANNER-          R41
         BR    RFEED           -4   END ROUTINES ARE NO-OPS         R41
         SPACE 1                                                     R4
MVKPEYRR BALR  RPLAN,RPLAN    INSTRUCTION THAT RETURNS TO CALLER OF    C
                               SCB MOVE ROUTINE 'MVKVNC', CHANGING     C
                                TO EMPTY STATE AT THE SAME TIME.     R4
         SPACE 1                                                     R4
MVKPEY   SLR   RNUM,RLSRCE         COMPUTE # OF OCCURRENCES LESS 1   R4
         BC    SLSP,MVKPEYV        BRANCH IF MORE THAN SINGLE CHAR. R41
         CLI   0(RCHAR),C' '       TEST CURRENT EMISSION             R4
         BE    MVKVPR              IF PRIME GO STORE PRIME SCB       R4
         SPACE 1                                                     R4
MVKPEYN  LA    RSCBL,63(,RSINK)    CALC WHERE FULL CAPACITY SCB ENDS R4
         CLR   RSCBL,REND          SEE IF ROOM FOR FULL CAPACITY SCB R4
         BNH   SKIP410             BRANCH IF YES                     R4
         LR    RSCBL,REND          SUBSTITUTE WHERE THE R.U. ENDS    R4
SKIP410  ST    RCHAR,SCWSRCEB      SAVE BEGIN ADDR FOR MOVE ROUTINE  R4
         SLR   RSCBL,RSINK         COMPUTE UNUSED SCB CAPACITY       R4
         BC    SLSZ,MVKZOFLO       BRANCH IF NO ROOM FOR SCB + CHAR. R4
         LA    RPLAN,MVKPNC        CHANGE TO NONCOMPRESSED STATE     R4
         ST    RSCBL,SCWSCBNC      SAVE SCB STARTING CAPACITY       R41
         MVI   0(RSINK),0          SET LENGTH ALREADY MOVED TO ZERO  R4
         BCT   RSCBL,MVKEMITR      GET NEXT EMISSION                 R4
         STC   RBY1,0(,RSINK)      IF SCB FULL ALREADY STORE COUNT=1 R4
         MVC   1(1,RSINK),0(RCHAR) MOVE IN SINGLE CHARACTER          R4
         LA    RSINK,2(,RSINK)     INCREASE PTR FOR 'RPLRLEN' CALC   R4
         BCT   RNUM,MVKZFULL       FORCE DUP FACTOR NEGATIVE & SEND    C
               (ALWAYS BRANCHES)    SINCE SHORT SCB IMPLIES FULL RU  R4
         SPACE 1                                                     R4
MVKPEYV  CLI   0(RCHAR),SCSBLANK   TEST EMISSION CHARACTER          R41
         BNE   MVKVDU              GO STORE DUP SCB IF NOT PRIME     R4
         SPACE 1                                                    R41
*                                                                    R4
*           COMPRESSION MOVER - DUPLICATE PRIME SCB                  R4
*                                                                    R4
         SPACE 1                                                    R41
MVKWPR0  SLR   RCPA,RCPA           SHOW COMPACTION NOT COMPETING    R41
         SPACE 1                                                     R4
MVKVPR   LA    RLCHAR,SCBPRIME+1(,RNUM)  GENERATE SCB (INVALID IF      C
                                         DUP FACTOR HIGHER THAN MAX) R4
         SL    RNUM,MVKVMAX        TEST DUP FACTOR HIGHER THAN MAX   R4
         STC   RLCHAR,0(,RSINK)    STORE SCB IN CASE VALID           R4
         BC    NOT-SLSM,SKIP420    RE-DO IF DUP FACTOR OVER MAX      R4
         BXLE  RSINK,RBY1,MVKEMITR OTHERWISE ADVANCE R.U. POINTER      C
                                    AND GET NEXT EMISSION            R4
         B     MVKZFULL            GO SEND R.U. IF FULL              R4
         SPACE 1                                                     R4
SKIP420  MVI   0(RSINK),SCBPRIME+63  STORE SCB WITH MAX COUNT        R4
         BXLE  RSINK,RBY1,MVKVPR   GENER. ANOTHER SCB FOR REMAINDER  R4
         B     MVKZOFLO            IF R.U. FULL, GO SEND & RE-ENTER  R4
         EJECT                                                       R4
*                                                                    R4
*           COMPRESSION MOVER - DUPLICATE NONPRIME SCB               R4
*                                                                    R4
         SPACE 1                                                     R4
*                             LOOP POINT FOR DUP FACTOR MORE THAN 63 R4
         SPACE 1                                                     R4
MVKVDUL  MVI   0(RSINK),SCBDUPLC+63  STORE SCB WITH MAX COUNT        R4
         LA    RSINK,1(,RSINK)     ADV R.U. PTR W/O CHGING COND CODE R4
         BXH   RSINK,RBY1,MVKZOFLO IF R.U. FULL GO SEND & RE-ENTER  R41
         LA    RNUM,0(RNUM,RLSRCE) BACK OUT DUP FACTOR CALCULATION. R41C
                                    CONDITION CODE STILL NOT CHANGED R4
         BCR   SLSZ,RPLAN          IF ONLY 1 OCCURRENCE LEFT, GO    R41C
                                    RE-ENTER EMPTY STATE. ELSE JUST R41C
                                     GENERATE ANOTHER DUPLICATE SCB  R4
         SLR   RNUM,RLSRCE         RECALCULATE DUP FACTOR LESS 1    R41
         SPACE 1                                                    R41
MVKWDU0  SLR   RCPA,RCPA           SHOW COMPACTION NOT COMPETING    R41
         SPACE 1                                                     R4
*                             MAIN ENTRY - DUP FACTOR LESS 1 IN RNUM R4
         SPACE 1                                                     R4
MVKVDU   CLR   RSINK,REND          COMPARE R.U. PTR WITH END OF R.U. R4
         IC    RLCHAR,0(,RCHAR)    PICK UP SOURCE CHARACTER          R4
         BNL   MVKZOFLO            GO END IF 1 BYTE AVAIL. (NEED 2)  R4
         STC   RLCHAR,1(,RSINK)    STORE SOURCE CHARACTER IN R.U.    R4
         LA    RLCHAR,SCBDUPLC+1(,RNUM)  GENERATE SCB (INVALID IF      C
                                         DUP FACTOR HIGHER THAN MAX) R4
         SL    RNUM,MVKVMAX        TEST DUP FACTOR HIGHER THAN MAX   R4
         STC   RLCHAR,0(,RSINK)    STORE SCB IN CASE VALID           R4
         LA    RLCHAR,0            ZERO BRANCH REG FOR COMPCT  @OZ25416
         BC    NOT-SLSM,MVKVDUL    RE-DO IF DUP FACTOR OVER MAX      R4
         ALR   RSINK,RBY1          ADVANCE R.U. POINTER              R4
         BXLE  RSINK,RBY1,MVKEMITR ADV R.U. PTR & GET NEXT EMISSION  R4
         B     MVKZFULL            IF R.U. FULL GO SEND IT           R4
         SPACE 3                                                    R41
MVKVMAX  DC    F'63'               MAXIMUM COUNT VALUE IN AN SCB    R41
         EJECT                                                       R4
***********************************************************************
*                                                                     *
*      COMPRESSION MOVER - NONCOMPRESSED SCB                          *
*                                                                     *
*   NOTATION USED IN FOLLOWING REMARKS HAS MEANING GIVEN.             *
*      EV.RXXXX  IS THE ENTRY VALUE OF REGISTER RXXXX.                *
*      IV.RXXXX  IS AN INTERMEDIATE VALUE OF REGISTER RXXXX.          *
*      NV.RXXXX  IS THE NEW (FINAL) VALUE OF REGISTER RXXXX.          *
*      C         REPRESENTS THE SCB COUNT.                            *
*      CA        REPRESENTS THE SCB CAPACITY (SEE BELOW).             *
*      P         REPRESENTS THE OLD SCB COUNT, THE NUMBER OF          *
*                BYTES ALREADY MOVED FROM PREVIOUS SOURCES.           *
*                                                                     *
*   SAVEWORD AND REGISTER CONTENTS AT ENTRY -                         *
*      EV.REND  = ADDRESS OF LAST BYTE IN R.U. BUFFER                 *
*      EV.RSINK = ADDRESS WHERE SCB IS TO BE STORED                   *
*      EV.RSCBL = NUMBER OF UNUSED BYTES IN THE SCB.                  *
*      SCWSCBNC = THE SCB STARTING CAPACITY.  THIS VALUE              *
*                 IS 63 IF THERE WAS ROOM IN THE R.U. FOR             *
*                 A FULL CAPACITY SCB, OTHERWISE IT IS THE            *
*                 NUMBER OF BYTES LEFT IN THE R.U. LESS 1             *
*                 = EV.REND-EV.RSINK.  RSCBL STARTS OUT               *
*                 WITH THIS VALUE AND COUNTS DOWN.                    *
*      THUS EV.RSCBL = MIN (63, EV.REND-EV.RSINK) - C                 *
*                   = VALUE SAVED IN 'SCWSCBNC'  - C                  *
*      EV.RLCHAR= ... (DON'T CARE)                                    *
*                                                                     *
*   DESIRED REGISTER CONTENTS AT EXIT -                               *
*      NV.REND  = EV.REND  (NO CHANGE)                                *
*      NV.RSINK = EV.RSINK + C + 1  (1 IS FOR SCB ITSELF)             *
*      NV.RSCBL = ... (DON'T CARE)                                    *
*      NV.RLCHAR= ... (DON'T CARE)                                    *
*                                                                     *
*   ENTRY POINTS -                                                    *
*      MVKVNC    NORMAL SCB TERMINATION ROUTINE. STORES SCB,          *
*                MOVES ANY PART OF DATA NOT MOVED PREVIOUSLY          *
*      MVKVNCAL  ENTRY POINT TO NORMAL SCB TERMINATION RTNE.          *
*                USED WHEN SCB ENDED BY PRIME/DUPLICATE SCB.          *
*      MVKVNCI   SCB INTERRUPT ROUTINE.  LIKE TERMINATION             *
*                ROUTINE, IT STORES SCB AND MOVES DATA. HOW-          *
*                EVER, IT ALSO PRESERVES REG CONTENTS NEEDED          *
*                TO ADD DATA FROM THE NEXT SOURCE STRING TO           *
*                THE SAME SCB. GETS CONTROL VIA PLANNER-END           *
*                BRANCH, RETURNS ON REG. 'RFEED'.                     *
*                                                                     *
***********************************************************************
         EJECT                                                      R41
MVKVNCI  ST    RSINK,SCWSCBA       SAVE ADDRESS OF INTERRUPTED SCB  R41
         ST    RSCBL,SCWSCBL       SAVE NUMBR OF UNUSED BYTES IN SCB R4
         SPACE 2                                                     R4
MVKVNCAL LA    RPLAN,MVKPEYV       OTHER MOVE ROUTINE ENTERS HERE TOR41C
                                    TERMINATE NONCOMPRESS SCB.  RNUM   C
                                     (DUP FACTOR - 1) IS 0 OR PLUS.  R4
         SPACE 5                                                    R41
*                                                                    R4
*           COMPRESSION MOVER - NONCOMP SCB TERMINATION ROUTINE     R41
*                                                                    R4
         SPACE 1                                                     R4
MVKVNC   L     RLCHAR,SCWSCBNC     GET  CA           (SCB CAPACITY) R41
         SLR   RLCHAR,RSCBL        GET  CA-(CA-C) = C   (SCB COUNT) R41
         IC    RSCBL,0(,RSINK)     GET  P     (COUNT PREV'LY MOVED) R41
         STC   RLCHAR,0(,RSINK)    STORE NEW SCB IN R.U.            R41
         ALR   RSINK,RSCBL         POINT PAST DATA PREVIOUSLY MOVED R41
         SLR   RLCHAR,RSCBL        DECREASE MOVE LENGTH BY  P       R41
         BC    NOT-SLSP,MVKVNCB    SKIP EXECUTE IF NOTHING TO MOVE  R41
         BCTR  RLCHAR,0            GET  C - P - 1  FOR MACHINE LTH  R41
         L     RSCBL,SCWSRCEB      RETRIEVE SOURCE STRING START ADDRR41
         EX    RLCHAR,MVKVNMVC     MOVE  C - P  CHARACTERS          R41
         LA    RSINK,1(RLCHAR,RSINK)  POINT PAST STORED SCB STRING  R41C
                                    (IV.RSINK=EV+P+(C-P-1)+1 = EV+C)   C
                                     BXLE BELOW SETS NV.RSINK=EV+C+1 R4
MVKVNCB  LTR   RNUM,RNUM           TEST IF CALL FROM OTHER MOVE RTNER41
         BM    MVKVNCFS            BRANCH IF NOT                     R4
         BXLE  RSINK,RBY1,MVKPEYRR GO CHGE TO EMPTY STATE & RE-ENTER R4
         B     MVKZOFLO            IF R.U. FULL, GO SEND & RE-ENTER  R4
         SPACE 1                                                     R4
MVKVNMVC MVC   1(*-*,RSINK),0(RSCBL)  ** EXECUTE ONLY **            R41
         SPACE 1                                                     R4
MVKVNCFS BXH   RSINK,RBY1,MVKZFULL IF R.U. FULL GO SEND             R41
         ALR   RNUM,RBY1           TEST TYPE OF MOVE ROUTINE CALL   R41
         BC    ALDM,MVKPNCS        BRANCH IF SUSPEND-TYPE CALL      R41
         LA    RPLAN,MVKPEY        ELSE FULL SCB CALL--CHANGE TO    R41
         B     MVKEMITR             EMPTY STATE & GET NEXT EMISSION R41
         EJECT                                                       R4
*                                                                    R4
*           COMPRESSION PLANNER - NONCOMPRESS SCB STATE  (SUSPEND)   R4
*                                                                    R4
         SPACE 1                                                    R41
         BR    RFEED           -4  FEEDER-END ROUTINE DOESN'T EXIST,R41C
                                    PLANNER-END ROUTINE IS NO-OP    R41
MVKPNCS  BALR  RPLAN,RFEED         CHGE TO NON-COMPRESS SUSPD STATE R41C
                                    & RETURN FROM PLANNER-END RTNE  R41
         SPACE 1                                                    R41
         SLR   RNUM,RLSRCE         COMPUTE # OF OCCURRENCES LESS 1   R4
         L     RSCBL,SCWSCBL       RELOAD OLD SCB REMAINING CAPACITY R4
         BC    SLSP,MVKPNCS2       BRANCH IF DUP FACTOR GRTR THAN 1  R4
         SPACE 1                                                     R4
MVKPNCS1 L     RSINK,SCWSCBA       BACK UP TO OLD SUSPENDED SCB      R4
         ST    RCHAR,SCWSRCEB      SAVE ADDR OF STRING TO BE ADDED   R4
         LA    RPLAN,MVKPNC        CHNGE TO NORMAL NONCOMPRESS STATE R4
         BCT   RSCBL,MVKEMITR      ADV SCB COUNT & GET NEXT EMISSION R4
         LCR   RNUM,RBY1           IF SCB FULL SHOW NOTHING SAVED    R4
         B     MVKVNC              BRANCH TO NONCOMPRESS SCB MOVER   R4
         SPACE 1                                                     R4
MVKPNCS2 LA    RPLAN,MVKPEY        ANTICIPATE CHANGE TO EMPTY STATE  R4
         CLI   0(RCHAR),C' '       TEST SOURCE CHARACTER             R4
         BE    MVKVPR              DON'T REVIVE NONCOMP SCB IF PRIME R4
         CLR   RNUM,RSCBL          TEST IF EMISSION CAN FIT IN SCB   R4
         BNL   MVKVDU              DON'T REVIVE SCB IF NOT           R4
         CLR   RNUM,RBY1           COMPARE (DUP FACTOR - 1) WITH 1   R4
         BH    MVKVDU              DON'T REVIVE IF DUP FACTOR GT 2   R4
         BCTR  RCHAR,0             BACK UP TO 1ST OF PAIR OF CHARS   R4
         BCT   RSCBL,MVKPNCS1      DECREASE REMAINING SPACE IN SCB     C
               (ALWAYS BRANCHES)    BY 1 & TREAT AS IF SINGLE CHAR.  R4
         TITLE 'HASP SNA REMOTE TERMINAL COMPACTION ROUTINES'       R41
***********************************************************************
*                                                                     *
*               COMPACTION MOVER - NONCOMPRESSED SCB                  *
*                                                                     *
*   NOTATION - SEE 'MVKVNC' PROLOG                                    *
*                                                                     *
*   REGISTER CONTENTS AT ENTRY - SAME AS 'MVKVNC', PLUS               *
*      EV.RCPA  = (BITS 1-31) COMPACTION RACING STATUS                *
*                 A VALUE GREATER THAN 3 (BUT NEVER OVER 255)         *
*                 MEANS COMPACTION IS TO BEGIN AND CAUSES THIS        *
*                 ROUTINE TO EXIT DIRECTLY TO THE CONVERTER.          *
*                 (BIT 0) IF ON, RACING BEGAN WITHIN THIS NON-        *
*                 COMP SCB--SAVEWORDS 'SCWSCBNA' AND 'SCWSCBNS'       *
*                 CONTAIN THE NONCOMP SCB ADDRESS (= EV.RSINK)        *
*                 & THE SPACE LEFT IN SCB AT TIME RACE BEGAN.         *
*                                                                     *
*   DESIRED REGISTER CONTENTS AT EXIT - SAME AS 'MVKVNC', PLUS        *
*      NV.RCPA  = EV.RCPA                                             *
*                 EXCEPT IF SIGN BIT WAS ON, IT IS TURNED OFF.        *
*                 IF THIS OCCURS & THE RESULT IS NOT ZERO, SAVE-      *
*                 WORD 'SCWSCBCA' MUST BE SET FOR THE CONVERTER.      *
*      THE FOLLOWING IS REQUIRED ONLY IF NV.RCPA IS NOT ZERO.         *
*      NV.RSCBL = ADDRESS WHERE THE PRESENTLY RACING COMPACT          *
*                 SCB WOULD END IF FILLED TO MAXIMUM CAPACITY.        *
*                                                                     *
*   MAJOR ENTRY POINTS -                                              *
*      MVKWNC    AS FOR 'MVKVNC',                                     *
*      MVKWNCAL/X       'MVKVNCAL', AND                               *
*      MVKWNCI          'MVKVNCI'  IN PRECEDING ROUTINE.              *
*                                                                     *
***********************************************************************
         SPACE 14                                                   R41
MVKWNCI  ST    RSINK,SCWSCBA       SAVE ADDRESS OF INTERRUPTED SCB  R41
         ST    RSCBL,SCWSCBL       SAVE NUMBER UNUSED BYTES IN SCB  R41
         LR    RCHAR,RCPA          SAVE RACE STATE & SETUP FLAG     R41
         SPACE 2                                                    R41
MVKWNCAX SLR   RCPA,RCPA           SHOW COMPACTION NOT COMPETING    R41
MVKWNCAL LA    RPLAN,MVKPEYV       OTHER MOVE ROUTINE ENTERS HERE TOR41C
                                    TERMINATE NONCOMPRESS SCB. RNUM R41C
                                     (DUP FACTOR - 1) IS 0 OR PLUS. R41
         EJECT                                                      R41
*                                                                   R41
*           COMPACTION MOVER - NONCOMP SCB TERMINATION ROUTINE      R41
*                                                                   R41
         SPACE 1                                                    R41
MVKWNC   L     RLCHAR,SCWSCBNC     GET  CA           (SCB CAPACITY) R41
         SLR   RLCHAR,RSCBL        GET  CA-(CA-C) = C   (SCB COUNT) R41
MVKWNC6  IC    RSCBL,0(,RSINK)     GET  P  (COUNT PREVIOUSLY MOVED) R41
         STC   RLCHAR,0(,RSINK)    STORE NEW SCB IN R.U.            R41
         ALR   RSINK,RSCBL         POINT PAST DATA PREVIOUSLY MOVED R41
         SLR   RLCHAR,RSCBL        DECREASE MOVE LENGTH BY  P       R41
         BC    NOT-SLSP,MVKWNCB    SKIP EXECUTE IF NOTHING TO MOVE  R41
         BCTR  RLCHAR,0            GET  C - P - 1  FOR MACHINE LTH  R41
         L     RSCBL,SCWSRCEB      RETRIEVE SOURCE STRING START ADDRR41
         EX    RLCHAR,MVKVNMVC     MOVE  C - P  CHARACTERS          R41
         LA    RSINK,1(RLCHAR,RSINK)  POINT PAST STORED SCB STRING  R41C
                                   (IV.RSINK=EV+P+(C-P-1)+1 = EV+C) R41C
                                    BXLE BELOW SETS NV.RSINK=EV+C+1 R41
MVKWNCB  LTR   RCPA,RCPA           TEST IF RACE BEGAN IN THIS SCB   R41
         BNP   MVKWNCR             BRANCH IF YES, OR NOT RACING     R41
MVKWNCBA L     RSCBL,SCWSCBCE      RESTORE PLANNED COMPACT SCB END  R41C
                                    IN CASE RACING BEGAN ELSEWHERE  R41
         CL    RCPA,MVKQXVA        TEST RACING STATE VALIDITY       R41
         BNL   MVKWCA              ENTER COMPACTION IF INVALID      R41
MVKWNCD  LTR   RNUM,RNUM           TEST IF CALL FROM OTHER MOVE RTNER41
         BM    MVKWNCFS            BRANCH IF NOT                    R41
         BXLE  RSINK,RBY1,MVKQEYRR GO CHGE TO EMPTY STATE & RE-ENTERR41
         B     MVKZOFLO            IF R.U. FULL, GO SEND & RE-ENTER R41
         SPACE 2                                                    R41
MVKWNCFS BXH   RSINK,RBY1,MVKZFULL IF R.U. FULL GO SEND             R41
         ALR   RNUM,RBY1           TEST TYPE OF MOVE ROUTINE CALL   R41
         BC    ALDM,MVKQNCS        RETURN IF SUSPEND-TYPE CALL      R41
         LA    RPLAN,MVKQEY        ELSE FULL SCB CALL--CHANGE TO    R41
         B     MVKEMITR             EMPTY STATE & GET NEXT EMISSION R41
         SPACE 2                                                    R41
MVKWNCP  LA    RPLAN,MVKQEPM       CAUSE REPROCESS IN EMPTY STATE   R41
MVKWNCQ  BCTR  RSINK,0             BACK UP TO END OF STORED NC SCB  R41
         LTR   RCPA,RCPA           TEST RACING STATE                R41
         BP    MVKWNCBA            BR IF DID NOT BEGIN IN THIS SCB  R41
         SPACE 1                                                    R41
MVKWNCR  BZ    MVKWNCD             BRANCH IF NOT RACING             R41
         SL    RCPA,MVKQXINO       CLEAR RACE STATE OVERLAP FLAG    R41
         BC    SLSZ,MVKWNCD        BRANCH IF RACE CALLED OFF        R41
         L     RLCHAR,SCWSCBNC     GET NONCOMP SCB MAX CAPACITY     R41
         SL    RLCHAR,SCWSCBNS     SUBTR SPACE LEFT WHEN RACE BEGAN R41
         STC   RLCHAR,SCWSCBCA     SAVE NC LENGTH UP TO RACE START  R41
         L     RSCBL,SCWSCBNA                   CALC END OF FULL    R41
         LA    RSCBL,SCB+SCBMAXCT(RLCHAR,RSCBL)  CAPACITY COMP SCB  R41
         CLR   RSCBL,REND          ATTEMPT TO FIT FULL CAPACITY SCB R41
         BNH   MVKWNCRC            BRANCH IF CAN FIT                R41
         LR    RSCBL,REND          ELSE SUBSTITUTE END OF R.U.      R41
MVKWNCRC CL    RCPA,MVKQXVA        TEST RACE STATE VALIDITY         R41
         BL    MVKWNCD             DON'T START COMPACT YET IF VALID R41
         EJECT                                                      R41
***********************************************************************
*                                                                     *
*      COMPACTION CONVERTER - CONVERT ALREADY-MOVED STRING CONTAIN-   *
*                             ING OTHER SCB TYPES TO COMPACTED FORM   *
*   OBJECTIVE -                                                       *
*        CONVERT A STRING OF NONCOMP, DUP, & PRIME DUP SCBS TO        *
*        COMPACTED FORM.  THIS ROUTINE IS NOT GENERAL & HANDLES       *
*        ONLY STRINGS OF SCBS WHICH THE EMPTY & NONCOMP PLANNERS      *
*        CONSTRUCT DURING RACING.                                     *
*                                                                     *
*   SAVEWORD AND REGISTER CONTENTS AT ENTRY -                         *
*        SCWSCBCA = (BITS 0-7) ZERO (RACE BEGAN IN EMPTY STATE),      *
*                             OR 63 (ADDING TO EXISTING COMP SCB)     *
*                   (BITS 8-23) ADDRESS OF COMPACTION SCB             *
*                   OR                                                *
*                   (BITS 0-7) 1-62 (RACE BEGAN WITHIN NONCOMP        *
*                               SCB) VALUE IS NONCOMPACT LENGTH       *
*                               UP TO POINT WHERE COMPACT STARTS      *
*                   (BITS 8-23) ADDRESS OF NONCOMPACT SCB             *
*        EV.REND  = ... (DON'T CARE)                                  *
*        EV.RSINK = ADDRESS OF LAST BYTE TO BE CONVERTED.             *
*        EV.RSCBL = ADDRESS WHERE COMPACT SCB WILL END IF             *
*                   FILLED TO MAXIMUM CAPACITY                        *
*        EV.RPLAN = ... (DON'T CARE)                                  *
*        EV.RCPA  = (BITS 0-23) ZERO (BITS 24-31 = DON'T CARE)        *
*        EV.RCHAR = POINTER & DUP FACTOR FOR CURRENT EMISSION,        *
*         & RNUM    PASSED UNCHANGED TO COMPACTION PLANNER.           *
*        EV.RLCHAR= (BITS 0-23) ZERO (BITS 24-31 = DON'T CARE)        *
*                                                                     *
*   DESIRED SAVEWORD AND REGISTER CONTENTS AT EXIT -                  *
*        SCWSCBCA = ADDRESS OF COMPACTION SCB IN ALL CASES            *
*        NV.REND  = EV.RSCBL (LIMITS BXLE/BXH IN COMPACT STATE)       *
*        NV.RSINK = EV.RSINK     ON EXIT TO  ODD COMPACT STATE        *
*                 = EV.RSINK + 1 ON EXIT TO EVEN COMPACT STATE        *
*        NV.RSCBL = 0  CLEARED FOR USE AS WORK REGISTER 'RCPZ'        *
*        NV.RPLAN = ADDRESS OF EVEN OR ODD COMPACTION PLANNER         *
*        NV.RCPA  = (BITS 0-23) ZERO (BITS 24-31 = DON'T CARE)        *
*        NV.RLCHAR= (BITS 0-23) ZERO (BITS 24-31 = DON'T CARE)        *
*                                                                     *
*   =/ NOTE /= - IN COMPACTION CODE, ANY NUMBER APPEARING IN A        *
*        SYMBOLIC LABEL REFERS TO THE STATE BEING HANDLED AT          *
*        THAT POINT.  STATE NUMBERS ARE DESCRIBED IN PROLOG           *
*        PRECEDING COMPACTION EMPTY STATE PLANNER 'MVKQEY'.           *
*                                                                     *
***********************************************************************
         EJECT                                                      R41
MVKWCA   ALR   RNUM,RLSRCE         BACK OUT DUP FACTOR CALCULATION  R41
         LR    REND,RSINK          SET UP LOOP CONTROL FOR          R41
         L     RSINK,SCWSCBCA       RESCANNING STORED STRING        R41
         TM    SCWSCBCA,SCBMAXCT   TEST FOR OVERLAP CONDITIONS      R41
         BZ    MVKWC0              BR IF RACE BEGAN IN EMPTY STATE  R41
         BO    MVKWC10             BR IF ADDING TO A COMPACTION SCB R41
         IC    RCPA,SCWSCBCA       ELSE COMPACTION SCB BEGAN WITHIN R41
         IC    RLCHAR,0(,RSINK)     NONCOMP SCB--PICK UP OLD LENGTH R41
         STC   RCPA,0(,RSINK)      STORE NEW LTH SHORTENED BY OVLAP R41
         LA    RSINK,SCB(RCPA,RSINK)  CALC COMPACTION               R41
         ST    RSINK,SCWSCBCA          SCB START ADDRESS            R41
         SLR   RLCHAR,RCPA         OLD LENGTH - NEW LENGTH = OVERLAPR41
         BCT   RLCHAR,MVKWC6       BRANCH IF OVERLAP OF AT LEAST 2  R41
         IC    RCPA,0(,RSINK)      FETCH MASTER FROM LAST BYTE OF   R41
         IC    RCPA,CPTCTT(RCPA)    NC STRING & XLATE TO 8-BIT FORM R41
         B     MVKWC1R             GO CONVERT FOLLOWING SCB         R41
         SPACE 2                                                    R41
MVKWC6   TR    0(2,RSINK),CPTCTT   TRANSLATE 2 MASTERS IN PLACE     R41
         PACK  0(1,RSINK),0(1,RSINK)  GET 1ST MASTER IN LEFT NIBBLE R41
         NC    1(1,RSINK),0(RSINK) FORM MASTER PAIR                 R41
         ALR   RSINK,RBY1          ADJUST POINTERS & GO             R41
         BCT   RLCHAR,MVKWC6D       SIMULATE NONCOMP SCB            R41
         B     MVKWC2S             IF WERE EXACTLY 2, GET NEXT SCB  R41
         SPACE 2                                                    R41
MVKWC0   TM    0(RSINK),SCBDUPLC   TEST FIRST SCB TO BE CONVERTED   R41
         BZ    MVKWC1C             BRANCH IF NONCOMP/NONDUP SCB     R41
         IC    RCPA,CPTCTT+SCSBLANK  ANTICIPATE PRIME WITH COUNT 1  R41
         BNO   MVKWC1R             BRANCH IF PRIME DUP              R41
         IC    RCPA,1(,RSINK)      ELSE TRANSLATE MASTER            R41
         IC    RCPA,CPTCTT(RCPA)    TO 8-BIT COMPACT FORM           R41
         CLI   0(RSINK),SCBDUPLC+2 SET COND CODE FOR COUNT 2 OR 3   R41
         BXLE  RSINK,RBY1,MVKWC0QA ADVANCE POINTER PAST SCB LOC &   R41C
               (ALWAYS BRANCHES)    HANDLE REMAINING 2 OR 3 MASTERS R41
         SPACE 2                                                    R41
MVKWC10  LR    RPLAN,RSINK         SAVE ADDR OF OLD COMPACT SCB     R41
         NI    0(RSINK),SCBMAXCT   USE OLD COMPACT                  R41
         IC    RCPA,0(,RSINK)       SCB COUNT TO FIND               R41
         LA    RSINK,SCB(RCPA,RSINK) STRING TO BE CONVERTED         R41
         TM    0(RSINK),SCBDUPLC-SCBPRIME+4  TEST 1ST SCB (MUST BE  R41C
                                             PRIME 3 OR DUP 3 OR 5) R41
         BNM   MVKWC2U             FINISH HANDLING PRIME 3 OR DUP 5 R41
         SPACE 1                                                    R41
MVKWC10B MVI   SCBMAXCT(RPLAN),SCBDUPLC+5  MAKE DUP 3 LOOK LIKE 5   R41
         MVI   0(RPLAN),SCBMAXCT   SHOW SCB NOW FULL                R41
         LA    RSINK,SCB+SCBMAXCT(,RPLAN)  COMPUTE START ADDRESS    R41
         ST    RSINK,SCWSCBCA               OF NEXT COMPACTION SCB  R41
         BCT   RSINK,MVKWC2W       BACK UP TO 'DUP 5' SCB & CONVERT R41C
               (ALWAYS BRANCHES)    TO 2 PAIRS + ODD M--2ND COMPACT R41C
                                     SCB COVERS 1 PAIR GIVING 3 M'S R41
         EJECT                                                      R41
MVKWC1C  IC    RLCHAR,0(,RSINK)    GET LENGTH OF NONCOMP/NONDUP SCB R41
         STC   RCPA,0(,RSINK)      REPLACE WITH ODD MASTER IF ANY   R41
MVKWC6D  IC    RCPA,0(RLCHAR,RSINK)  SAVE COPY OF LAST BYTE IN REG  R41
         SLR   RLCHAR,RBY1         DECREMENT FOR MACHINE LENGTH     R41
         EX    RLCHAR,MVKWCATR     TRANSLATE TO 8-BIT COMPACTED     R41
         LA    RSINK,1(RLCHAR,RSINK)  POINT TO END OF SCB STRING    R41
         LA    RPLAN,CPTCAT(RCPA)  TEST ATTRIBUTE OF                R41
         CLI   0(RPLAN),CPTMST      LAST BYTE IN STRING             R41
         BL    MVKWC2S             BRANCH IF NOT A MASTER           R41
         IC    RCPA,0(,RSINK)      SAVE 8-BIT TRANSLATED ODD MASTER R41
MVKWC3E  CLR   RSINK,REND          CHGE TO ODD COMPACT STATE        R41
         BNL   MVKWC11Z             IF STORED STRING EXHAUSTED      R41
MVKWC3F  TM    1(RSINK),SCBDUPLC   TEST SCB TYPE (CANNOT BE NONDUP) R41
         BO    MVKWC3H             BRANCH IF NON-PRIME DUP SCB      R41
         CLI   CPTCAT+SCSBLANK,CPTPMST  TEST PRIME CHAR ATTRIBUTE   R41
         BE    MVKWC3G             BRANCH IF PRIME IS A MASTER      R41
         STC   RCPA,0(,RSINK)      ELSE STORE ODD MASTER AS 8 BITS  R41
         IC    RCPA,CPTCTT+SCSBLANK  TRANSLATE PRIME TO             R41
         STC   RCPA,1(,RSINK)         8-BIT EQUIV & STORE           R41
         BXLE  RSINK,RBY1,MVKWC2S  ADVANCE POINTER OVER SCB LOC &   R41C
               (ALWAYS BRANCHES)    CONTINUE IN EVEN COMPACT STATE  R41
         SPACE 1                                                    R41
MVKWC3G  IC    RLCHAR,MVKQXMF(RCPA)  MOVE ODD MSTR INTO LEFT NIBBLE R41
         IC    RCPA,CPTCTT+SCSBLANK  TRANSLATE PRIME TO 8-BIT EQUIV R41
         NR    RLCHAR,RCPA         FORM & STORE                     R41
         STC   RLCHAR,0(,RSINK)     MASTER PAIR                     R41
         CLI   1(RSINK),SCBPRIME+3 SET C.C. FOR COUNT 2, 3, OR 4    R41
         BXLE  RSINK,RBY1,MVKWC2Q  RESET PTR TO ORIGINAL SCB LOC &  R41C
               (ALWAYS BRANCHES)    HANDLE REMAINING 1 2 OR 3 MSTRS R41
         SPACE 1                                                    R41
MVKWC3H  CLI   1(RSINK),SCBDUPLC+2 TEST SCB COUNT (2, 4, 5, OR 6)   R41
         BE    MVKWC3I             IF 2, HANDLE DOUBLE NON-MASTER   R41
         IC    RLCHAR,MVKQXMF(RCPA)  MOVE ODD MSTR INTO LEFT NIBBLE R41
         IC    RCPA,2(,RSINK)      TRANSLATE NON-PRIME DUP          R41
         IC    RCPA,CPTCTT(RCPA)    TO 8-BIT COMPACT EQUIVALENT     R41
         NR    RLCHAR,RCPA         FORM & STORE                     R41
         STC   RLCHAR,0(,RSINK)     MASTER PAIR                     R41
         CLI   1(RSINK),SCBDUPLC+5 SET C.C. FOR COUNT 4, 5, OR 6    R41
         BXLE  RSINK,RBY1,MVKWC2W  ADVANCE POINTER OVER SCB LOC &   R41C
               (ALWAYS BRANCHES)    HANDLE REMAINING 3 4 OR 5 MSTRS R41
         SPACE 1                                                    R41
MVKWC3I  STC   RCPA,0(,RSINK)      STORE PENDING ODD MASTER         R41
         ALR   RSINK,RBY1          ADVANCE POINTER OVER SCB LOC     R41
         IC    RCPA,1(,RSINK)      TRANSLATE NON-PRIME DUP          R41
         IC    RCPA,CPTCTT(RCPA)    TO 8-BIT COMPACT EQUIVALENT     R41
MVKWC2J  STC   RCPA,0(,RSINK)      STORE 1ST OF 2 NON-MASTERS       R41
         ALR   RSINK,RBY1          ADVANCE POINTER OVER DUP CHAR    R41
MVKWC2K  STC   RCPA,0(,RSINK)      STORE TRANSLATED NON-MASTER      R41
         BXLE  RSINK,RBY1,MVKWC2T  GO FETCH NEXT SCB IF MORE TO DO  R41
MVKWC10M LR    REND,RSCBL          USE END OF SCB TO LIMIT LOOP     R41
         SLR   RCPZ,RCPZ           CLEAR WORK REG FOR COMPACTION    R41
         LA    RPLAN,MVKQCA10      CHANGE TO EVEN                   R41
         BR    RPLAN                COMPACTION STATE                R41
         EJECT                                                      R41
MVKWC1N  IC    RCPA,1(,RSINK)      TRANSLATE NON-PRIME DUP          R41
         IC    RCPA,CPTCTT(RCPA)    TO 8-BIT COMPACT EQUIVALENT     R41
         NR    RLCHAR,RCPA         ODD MASTER & NEW CHAR FORM PAIR  R41
         CLI   0(RSINK),SCBDUPLC+3 SET C.C. FOR COUNT = 2, 3 OR 4   R41
         STC   RLCHAR,0(,RSINK)    STORE MASTER PAIR                R41
         BXLE  RSINK,RBY1,MVKWC2Q  ADVANCE PTR TO DUP CHAR LOC &    R41C
               (ALWAYS BRANCHES)    HANDLE REMAINING 1 2 OR 3 MSTRS R41
         SPACE 2                                                    R41
MVKWC2P  IC    RCPA,CPTCTT+SCSBLANK  TRANSLATE PRIME TO 8-BIT EQUIV R41
         CLI   CPTCAT+SCSBLANK,CPTPMST  TEST PRIME CHAR ATTRIBUTE   R41
         BNE   MVKWC2K             IF PRIME NOT MSTR ASSUME COUNT=1 R41
         CLI   0(RSINK),SCBPRIME+2 TEST REMAINING COUNT = 1, 2 OR 3 R41
MVKWC2Q  BL    MVKWC3E             BRANCH IF REMAINING COUNT WAS 1  R41
MVKWC0QA IC    RLCHAR,MVKQXMM(RCPA)  STORE 4-BIT                    R41
MVKWC2QB STC   RLCHAR,0(,RSINK)       MASTER PAIR                   R41
         BE    MVKWC2S             TRY FOR NEXT SCB IF COUNT WAS 2, R41C
                                    ELSE SHIFT TO ODD COMPACT STATE R41
MVKWC1R  BXH   RSINK,RBY1,MVKWC11Z ENTER ODD COMPACT STATE IF DONE  R41
         TM    0(RSINK),SCBDUPLC   TEST SCB TYPE                    R41
         BZ    MVKWC1C             BRANCH IF NONCOMP/NONDUP SCB     R41
         IC    RLCHAR,MVKQXMF(RCPA)  GET ODD MASTER IN LEFT NIBBLE  R41
         BO    MVKWC1N             BRANCH IF NON-PRIME DUP SCB      R41
         IC    RCPA,CPTCTT+SCSBLANK  FORM PAIR FROM ODD             R41
         NR    RLCHAR,RCPA            MASTER & PRIME CHAR           R41
         CLI   0(RSINK),SCBPRIME+1 SET C.C. FOR COUNT = 1 OR 2      R41
         STC   RLCHAR,0(,RSINK)    STORE MASTER PAIR                R41
         BH    MVKWC1R             IF ODD MSTR LEFT OVER, HANDLE IT R41
MVKWC2S  BXH   RSINK,RBY1,MVKWC10M ENTER EVEN COMPACT STATE IF DONE R41
MVKWC2T  TM    0(RSINK),SCBDUPLC   TEST SCB TYPE (CANNOT BE NONDUP) R41
MVKWC2U  BNO   MVKWC2P             BRANCH IF PRIME DUP SCB          R41
MVKWC2V  IC    RCPA,1(,RSINK)      TRANSLATE NON-PRIME DUP          R41
         IC    RCPA,CPTCTT(RCPA)    TO 8-BIT COMPACT EQUIVALENT     R41
         CLI   0(RSINK),SCBDUPLC+2 TEST SCB COUNT (2, 3, 4, OR 5)   R41
         BE    MVKWC2J             IF 2, HANDLE DOUBLE NON-MASTER   R41
         CLI   0(RSINK),SCBDUPLC+4 SET COND CODE FOR COUNT 3 4 OR 5 R41
MVKWC2W  IC    RLCHAR,MVKQXMM(RCPA)  STORE 4-BIT MASTER             R41
         STC   RLCHAR,0(,RSINK)       PAIR OVER SCB LOC             R41
         LA    RSINK,1(,RSINK)     ADVANCE POINTER OVER DUP CHAR    R41
         BNL   MVKWC2QB            IF 2 OR 3 LEFT GO STORE 2ND PAIR R41
         CLR   RSINK,REND          TEST IF STORED STRING EXHAUSTED  R41
         BL    MVKWC3F             GO FETCH NEXT SCB IF MORE TO DO  R41
MVKWC11Z LR    REND,RSCBL          USE END OF SCB TO LIMIT LOOP     R41
         SLR   RCPZ,RCPZ           CLEAR WORK REG FOR COMPACTION    R41
         LA    RPLAN,MVKQCA11      ENTER ODD-MASTER                 R41
         BR    RPLAN                COMPACTION STATE                R41
         SPACE 3                                                    R41
MVKWCATR TR    1(*-*,RSINK),CPTCTT XLATE TO 8-BIT COMPACT *EXECUTE* R41
         EJECT                                                      R41
*                                                                   R41
*           COMPACTION PLANNER - NONCOMPRESS SCB STATE  (SUSPEND)   R41
*                                                                   R41
         SPACE 1                                                    R41
MVKQNCS  LR    RCPA,RCHAR          RESTORE COMPACTION RACING STATE  R41
         NOPR  0               -4  FEEDER-END ROUTINE DOESN'T EXIST,R41C
                                    PLANNER-END ROUTINE IS NO-OP    R41
         BALR  RPLAN,RFEED         CHGE TO NON-COMPRESS SUSPD STATE R41C
                                    & RETURN FROM PLANNER END RTNE  R41
         SPACE 1                                                    R41
         L     RSCBL,SCWSCBL       RETRIEVE OLD SCB UNUSED CAPACITY R41
         SPACE 1                                                    R41
MVKQNCSA IC    RGO,0(,RCHAR)       PICK UP ATTRIBUTE OF EMITTED     R41
         IC    RGO,CPTCAT(RGO)      CHARACTER FROM COMPACTION TABLE R41
         L     RGO,MVKQNCST(RGO)   USE AS INDEX INTO ADDRESS TABLE  R41
         SLR   RNUM,RLSRCE         COMPUTE # OF OCCURRENCES LESS 1  R41
         BR    RGO                 BRANCH WITH CONDITION CODE SET   R41
         SPACE 2                                                    R41
MVKQNCST DS    0F           *SUSP* NON-COMP STATE ATTRIBUTE HANDLERSR41
         DC    A(MVKQNSX)          NONPRIME NOT IN COMPACTION TABLE R41
         DC    A(MVKQNTX)          PRIME    NOT IN COMPACTION TABLE R41
         DC    A(MVKQNSN)          NONPRIME COMPACTIBLE NON-MASTER  R41
         DC    A(MVKQNTN)          PRIME    COMPACTIBLE NON-MASTER  R41
         DC    A(MVKQNSM)          NONPRIME MASTER                  R41
         DC    A(MVKQNTM)          PRIME    MASTER                  R41
         SPACE 6                                                    R41
MVKQNSXX BXH   RSINK,RBY1,MVKZOFLO SEND & RE-ENTER IF NO SPACE LEFT R41
         L     RSCBL,SCWSCBL       RETRIEVE OLD SCB UNUSED CAPACITY R41
         SPACE 1                                                    R41
MVKQNSX  BC    SLSP,MVKQNSXD       BRANCH IF MORE THAN SINGLE .X.   R41
MVKQNSXA SLR   RCPA,RCPA           SHOW COMPACTION NOT COMPETING    R41
MVKQNSXB L     RSINK,SCWSCBA       RETRIEVE SUSPENDED SCB ADDRESS   R41
MVKQNSXC ST    RCHAR,SCWSRCEB      SAVE STRING START ADDR FOR MOVER R41
         LA    RPLAN,MVKQNC        CHANGE TO NORMAL NONCOMP STATE   R41
         BCT   RSCBL,MVKEMITR      ADV SCB COUNT & GET NXT EMISSION R41
         LCR   RNUM,RBY1           IF SCB FULL, KILL DUP FACTOR TO  R41
         B     MVKWNC               SHOW EMISSION HANDLED & END SCB R41
         SPACE 3                                                    R41
MVKQNSXD LA    RPLAN,MVKQEY        ANTICIPATE CHANGE TO EMPTY STATE R41
         CLR   RNUM,RBY1           IF 3 OR MORE OCCURRENCES         R41
         BH    MVKWDU0              DON'T REVIVE SCB--GEN DUP       R41
         CLR   RNUM,RSCBL          IF EMISSION WON'T FIT            R41
         BNL   MVKWDU0              DON'T REVIVE SCB--GEN DUP       R41
         BCTR  RCHAR,0             BACK UP TO 1ST OF PAIR OF CHARS  R41
         BCT   RSCBL,MVKQNSXA      DECREASE REMAINING SPACE IN SCB  R41C
               (ALWAYS BRANCHES)    BY 1 & TREAT AS IF SINGLE CHAR. R41
         EJECT                                                      R41
MVKQNTXX BXH   RSINK,RBY1,MVKZOFLO SEND & RE-ENTER IF NO SPACE LEFT R41
         L     RSCBL,SCWSCBL       RETRIEVE OLD SCB UNUSED CAPACITY R41
MVKQNTX  BC    SLSZ,MVKQNSXA       REVIVE SCB IF ONLY 1 OCCURRENCE  R41
MVKQNTXA LA    RPLAN,MVKQEY        ELSE CHANGE TO EMPTY STATE       R41
         B     MVKWPR0             DON'T REVIVE SCB, GEN PRIME      R41
         SPACE 3                                                    R41
MVKQNSN  BC    SLSZ,MVKQNTNA       BRANCH IF HANDLING SINGLE .N.    R41
         LA    RPLAN,MVKQEY        ANTICIPATE CHANGE TO EMPTY STATE R41
         CLR   RNUM,RBY1           IF 3 OR MORE OCCURRENCES         R41
         BH    MVKWDU0              DON'T REVIVE SCB--GEN DUP       R41
         OR    RCPA,RBY1           FORCE NO-RACE STATE, EXCEPT      R41
         SLR   RCPA,RBY1            SET STANDOFF STATE FOR CASES    R41C
                                     STANDOFF/.NN. OR AHEAD/.NN.    R41
         LA    RPLAN,MVKVDU        ANTICIPATE NO FIT, EXIT FOR DUP  R41
         CLR   RNUM,RSCBL          IF EMISSION WON'T FIT            R41
         BNL   MVKWNCQ              REPROCESS IN EMPTY STATE        R41
         BCTR  RCHAR,0             BACK UP TO 1ST OF PAIR OF CHARS  R41
         BCT   RSCBL,MVKQNSXB      DECREASE REMAINING SPACE IN SCB  R41C
               (ALWAYS BRANCHES)    BY 1 & TREAT AS IF SINGLE CHAR. R41
         SPACE 3                                                    R41
MVKQNTN  BC    SLSP,MVKQNTXA       GEN PRIME SCB FOR MULTIPLE .P.   R41
MVKQNTNA OR    RCPA,RBY1           FORCE NO-RACE STATE, EXCEPT      R41
         SLR   RCPA,RBY1            SET STANDOFF STATE FOR CASES    R41
         B     MVKQNSXB              STANDOFF/.N. OR AHEAD/.N.      R41
         SPACE 3                                                    R41
MVKQNTM  BC    SLSP,MVKWNCP        DON'T REVIVE SCB IF MULTIPLE .P. R41
MVKQNTMA ST    RCHAR,SCWSRCEB      SAVE STRING START ADDR FOR MOVER R41
         L     RSINK,SCWSCBA       RETRIEVE SUSPENDED SCB ADDRESS   R41
         LA    RPLAN,MVKQNC        REVERT TO NORMAL NONCOMPACT STATER41
         B     MVKQNOMA            GO HANDLE UNDER REVIVED NC SCB   R41
         EJECT                                                      R41
***********************************************************************
*                                                                     *
*                 COMPACTION MOVERS - COMPACT SCB                     *
*                                                                     *
*   MAJOR ENTRY POINTS -                                              *
*      MVKWCT    NORMAL SCB TERMINATION ROUTINE.  STORES SCB.         *
*      MVKWCTAL  ENTRY POINTS TO NORMAL TERMINATION ROUTINE           *
*         & -ZL  USED WHEN SCB ENDED BY PRIME/DUPLICATE SCB.          *
*      MVKWCTI   SCB INTERRUPT ROUTINE FOR 'EVEN' COMPACT             *
*                STATE (NO UNPAIRED MASTER).  STORES SCB LIKE         *
*                TERMINATION ROUTINE, BUT ALSO PRESERVES REG          *
*                CONTENTS NEEDED TO ADD DATA TO THE SAME SCB          *
*                FROM NEXT SOURCE STRING.  GETS CONTROL VIA           *
*                FEEDER-END BRANCH, RETURNS ON REG 'RFEED'.           *
*      MVKWCTIZ  SCB INTERRUPT ROUTINE FOR 'ODD' COMPACT              *
*                STATE (UNPAIRED 'ODD' MASTER PRESENT).  LIKE         *
*                'MVKWCTI' EXCEPT THAT ODD MASTER IS STORED           *
*                IN 8-BIT FORM AND INCLUDED IN THE SCB COUNT.         *
*      MVKWCX    SCB TERMINATION AND INTERRUPT ROUTINE FOR            *
*                'ODD' COMPACT STATE IN 16-MASTER MODE.  LIKE         *
*                'MVKWCTIZ' EXCEPT THAT ODD MASTER IS USED TO         *
*                BEGIN A NONCOMP SCB & IS NOT INCLUDED IN THE         *
*                SCB COUNT.  WHEN NONCOMP SCB CAN'T BE BEGUN          *
*                BECAUSE ONLY 1 BYTE REMAINS IN R.U., THE ODD         *
*                MASTER IS SAVED (FOR REPROCESSING IN NEXT            *
*                R.U.) AND THE 'SCWODDMF' FLAG IS SET.                *
*                                                                     *
***********************************************************************
         SPACE 2                                                    R41
MVKWCTI  ST    REND,SCWSCBCE       SAVE LONGEST ALLOWED SCB END LOC R41
         SPACE 1                                                    R41
MVKWCTAL SLR   RSINK,RBY1          BACK UP TO END OF SCB STRING     R41
MVKWCTZL LA    RPLAN,MVKPEYV       OTHER MOVE ROUTINE ENTERS HERE   R41C
                                    TO TERMINATE COMPACT SCB.  RNUM R41C
                                     (DUP FACTOR - 1) IS 0 OR PLUS. R41
         SPACE 1                                                    R41
MVKWCT   SLR   RCPA,RCPA           SHOW COMPACTION NOT COMPETING    R41
MVKWCT01 L     REND,SCWSCBCA       GET LOC OF COMPACTION SCB        R41
         LCR   RSCBL,REND                  CALCULATE                R41
         LA    RSCBL,SCBCPACT(RSINK,RSCBL)  SCB LENGTH              R41
         STC   RSCBL,0(,REND)                & STORE IT             R41
         L     REND,SCWRUEND       RESTORE END OF R.U. ADDRESS      R41
         LTR   RNUM,RNUM           TEST IF CALL FROM OTHER MOVE RTNER41
         BM    MVKWCTFS            BRANCH IF NOT                    R41
         BXLE  RSINK,RBY1,MVKQEYRR GO CHGE TO EMPTY STATE & RE-ENTERR41
         B     MVKZOFLO            IF R.U. FULL, GO SEND & RE-ENTER R41
         SPACE 1                                                    R41
MVKWCTFS BXH   RSINK,RBY1,MVKZFULL IF R.U. FULL GO SEND             R41
         ALR   RNUM,RBY1           TEST TYPE OF MOVE ROUTINE CALL   R41
         BC    ALDM,MVKQCAS        RETURN IF SUSPEND-TYPE CALL      R41
         LA    RPLAN,MVKQEY        ELSE FULL SCB CALL--CHANGE TO    R41
         B     MVKEMITR             EMPTY STATE & GET NEXT EMISSION R41
         EJECT                                                      R41
*                                                                   R41
*           COMPACTION PLANNER - COMPACTION SCB STATE  (SUSPEND)    R41
*                                                                   R41
         SPACE 1                                                    R41
         NOPR  0               -4  FEEDER-END ROUTINE DOESN'T EXIST,R41C
                                    PLANNER-END ROUTINE IS NO-OP    R41
         SPACE 1                                                    R41
MVKQCAS  BALR  RPLAN,RFEED         CHANGE TO COMPACT SUSPEND STATE  R41C
                                    & RETURN FROM PLANNER-END RTNE  R41
         SPACE 1                                                    R41
         IC    RGO,0(,RCHAR)       PICK UP 8-BIT COMPACTION         R41
         IC    RCPA,CPTCTT(RGO)     FORM OF EMITTED CHARACTER       R41
         IC    RGO,CPTCAT(RGO)     PICK UP ATTRIBUTE OF EMITTED CHARR41
         LA    RPLAN,MVKQEY        ANTICIPATE CHANGE TO EMPTY STATE R41
         L     RGO,MVKQCAST(RGO)   USE AS INDEX INTO ADDRESS TABLE  R41
         SLR   RNUM,RLSRCE         COMPUTE # OF OCCURRENCES LESS 1  R41
         BR    RGO                 BRANCH WITH CONDITION CODE SET   R41
         SPACE 2                                                    R41
MVKQCAST DS    0F      *EVEN,SUSP* COMPACT STATE ATTRIBUTE HANDLERS R41
         DC    A(MVKQEOX)          NONPRIME NOT IN COMPACTION TABLE R41
         DC    A(MVKWPR0)          PRIME    NOT IN COMPACTION TABLE R41
         DC    A(MVKQCSN)          NONPRIME COMPACTIBLE NON-MASTER  R41
         DC    X'80',AL3(MVKQCSN)  PRIME    COMPACTIBLE NON-MASTER  R41
         DC    A(MVKQCSM)          NONPRIME MASTER                  R41
         DC    A(MVKQCTM)          PRIME    MASTER                  R41
         SPACE 6                                                    R41
*                                                                   R41
*           COMPACTION MOVER - COMPACT SCB (SUSPEND IN ODD STATE)   R41
*                                                                   R41
         SPACE 1                                                    R41
MVKWCTIZ CLI   CPTNMAST,16         TEST FOR 16 MASTERS SPECIAL CASE R41
         BNL   MVKWCX              BRANCH IF PRESENT                R41
         STC   RCPA,0(,RSINK)      STORE ODD MASTER IN 8-BIT FORM   R41
         L     REND,SCWSCBCA       GET LOC OF COMPACTION SCB        R41
         LCR   RSCBL,REND                  CALCULATE                R41
         LA    RSCBL,SCBCPACT(RSINK,RSCBL)  SCB LENGTH              R41
         STC   RSCBL,0(,REND)                & STORE IT             R41
         L     REND,SCWRUEND       RESTORE END OF RU ADDRESS   @OZ66557
         BXH   RSINK,RBY1,MVKZFULL IF R.U. FULL GO SEND        @OZ43017
         EJECT                                                      R41
*                                                                   R41
*           COMPACTION PLANNER - COMPACT SCB STATE  (ODD SUSPEND)   R41
*                                                                   R41
         SPACE 1                                                    R41
         NOPR  0               -4  FEEDER-END ROUTINE DOESN'T EXIST,R41C
                                    PLANNER-END ROUTINE IS NO-OP    R41
MVKQCASZ BALR  RPLAN,RFEED         CHNGE TO ODD COMPACT SUSPD STATE R41C
                                    & RETURN FROM PLANNER-END RTNE  R41
         SLR   RCPZ,RCPZ           CLEAR COMPACTION WORK REG        R41
         IC    RGO,0(,RCHAR)       PICK UP 8-BIT COMPACTION         R41
         IC    RCPZ,CPTCTT          FORM OF EMITTED CHARACTER       R41
         IC    RGO,CPTCAT(RGO)     PICK UP ATTRIBUTE OF EMITTED CHARR41
         LA    RPLAN,MVKQEY        ANTICIPATE CHANGE TO EMPTY STATE R41
         L     RGO,MVKQCASU(RGO)   USE AS INDEX INTO ADDRESS TABLE  R41
         SLR   RNUM,RLSRCE         COMPUTE # OF OCCURRENCES LESS 1  R41
         BCTR  RSINK,RGO           BACK UP TO 8-BIT ODD MASTER LOC  R41C
               (ALWAYS BRANCHES)    & BRANCH WITH CONDITION CODE SETR41
         SPACE 2                                                    R41
MVKQCASU DS    0F       *ODD,SUSP* COMPACT STATE ATTRIBUTE HANDLERS R41
         DC    A(MVKQEOXZ)         NONPRIME NOT IN COMPACTION TABLE R41
         DC    A(MVKQEPXZ)         PRIME    NOT IN COMPACTION TABLE R41
         DC    A(MVKQCSNZ)         NONPRIME COMPACTIBLE NON-MASTER  R41
         DC    X'80',AL3(MVKQCSNZ) PRIME    COMPACTIBLE NON-MASTER  R41
         DC    A(MVKQCSMZ)         NONPRIME MASTER                  R41
         DC    A(MVKQCTMZ)         PRIME    MASTER                  R41
         SPACE 2                                                    R41
MVKQCSNZ BXH   RSINK,RBY1,MVKZOFLO SEND & RE-ENTER IF NO SPACE LEFT R41
         LR    RCPA,RCPZ           CHANGE WORK REGS FOR COMMON RTNE R41
MVKQCSN  BC    SLSP,MVKQCSNA       ABANDON SCB FOR DUP IF MULTIPLE  R41
         L     REND,SCWSCBCE       RESTORE COMPACT SCB ENDING LOC   R41
         LA    RPLAN,MVKQCA10      RESUME EVEN COMPACT STATE        R41
         B     MVKQCPMB            GO STORE SINGLE .N. & RESUME SCB R41
         SPACE 1                                                    R41
MVKQCSNA LTR   RGO,RGO             TEST ATTRIBUTE HANDLER ADDRESS   R41
         BM    MVKWPR0             JUST GEN DUP IF FLAGGED FOR PRIMER41
         CLR   RNUM,RBY1           IF 3 OR MORE OCCURRENCES         R41
         BH    MVKWDU0              ABANDON COMPACT SCB FOR DUP     R41
         L     REND,SCWSCBCE       RESTORE COMPACT SCB ENDING LOC   R41
         LA    RPLAN,MVKQCA10      RESUME EVEN COMPACT STATE        R41
         B     MVKQCONB            GO STORE DOUBLE .N. & RESUME SCB R41
         EJECT                                                      R41
*                   HANDLE NONCOMPACTIBLE NONPRIME CHAR             R41
         SPACE 1                                                    R41
MVKQCXXZ STC   RCPA,0(,RSINK)      STORE ODD MASTER IN 8-BIT FORM   R41
         BC    SLSP,MVKQCOXZ       BRANCH IF MORE THAN 1 OCCURRENCE R41
         CLI   CPTNMAST,16         TEST FOR 16 MASTERS SPECIAL CASE R41
         BL    MVKQCOXA            END SCB FOR NONCOMP SCB IF NOT   R41
         SPACE 2                                                    R41
*                                                                   R41
*           COMPACTION MOVER - COMPACT SCB (16-MASTER MODE)         R41
*                                                                   R41
         SPACE 1                                                    R41
MVKWCX   L     REND,SCWSCBCA       GET LOC OF COMPACTION SCB        R41
         LCR   RSCBL,REND                    CALCULATE              R41
         LA    RSCBL,SCBCPACT-1(RSINK,RSCBL)  SCB LENGTH            R41
         STC   RSCBL,0(,REND)                  & STORE IT           R41
         L     REND,SCWRUEND       RESTORE END OF R.U. ADDRESS      R41
         IC    RPLAN,CPTDTT(RCPA)  XLATE ODD MSTR BACK TO ORIGINAL  R41
         CLR   RSINK,REND          IF ONLY 1 BYTE LEFT IN R.U.      R41
         BNL   MVKWCXC              ODD MASTER MUST GO IN NEXT R.U. R41
         MVI   0(RSINK),SCBNONCO+1 STORE NONCOMP SCB WITH COUNT 1   R41
         STC   RPLAN,1(,RSINK)     STORE ODD MASTER UNTRANSLATED    R41
         LA    RSCBL,SCBMAXCT(,RSINK)  GET END OF FULL CAPACITY SCB R41
         CLR   RSCBL,REND          ATTEMPT TO FIT FULL CAPACITY SCB R41
         BNH   MVKWCXA             BRANCH IF CAN FIT                R41
         LR    RSCBL,REND          ELSE SUBSTITUTE END OF R.U.      R41
MVKWCXA  SLR   RSCBL,RSINK         COMPUTE UNUSED SCB CAPACITY      R41
         ST    RSCBL,SCWSCBNC      SAVE SCB STARTING CAPACITY       R41
         BCT   RSCBL,MVKWCXB       SHOW 1 BYTE OF SCB USED & BRANCH R41
         LA    RSINK,SCB+1(,RSINK) IF R.U. FULL, UPDATE POINTER FOR R41
         B     MVKZOFLO             'RPLRLEN' CALCULATION & GO SEND R41
         SPACE 3                                                    R41
MVKWCXB  LTR   RNUM,RNUM           TEST IF CALL FROM OTHER MOVE RTNER41
         BM    MVKWCXS             BRANCH IF NOT--MUST BE SUSPEND   R41
         LA    RCPA,SCWCANOT       ELSE SHOW COMPACTION NOT RACING  R41
         LA    RPLAN,MVKQNC        CHANGE TO NONCOMPACT SCB STATE   R41
         BZ    MVKQEONE            BR IF SINGLE NONCOMPACTIBLE CHAR R41
         LA    RPLAN,MVKQEY        ANTICIPATE CHANGING              R41
         LA    RSINK,SCB+1(,RSINK)  BACK TO EMPTY STATE             R41
         BR    RGO                 RETURN TO CALLER                 R41
         EJECT                                                      R41
MVKWCXC  LTR   RNUM,RNUM           IF EMISSION FOLLOWING ODD MASTER R41
         BNM   MVKWCXD              ALREADY IN PLAY (CALL WAS FROM  R41C
                                     OTHER MOVE ROUTINE) GO HANDLE  R41
         ALR   RLSRCE,RBY1         ELSE SIMULATE NORMAL R.U.        R41
         SLR   RNUM,RNUM            OVERFLOW CONDITION WITH         R41
         BCT   RSRCE,MVKZOFLO        EMISSION OF SINGLE MASTER      R41C
               (ALWAYS BRANCHES)   SEND & RE-ENTER FOR ODD MASTER   R41
         SPACE 1                                                    R41
MVKWCXD  STC   RPLAN,SCWODDM       SAVE ODD MASTER WHICH WON'T FIT  R41
         OI    SCWFLAGS,SCWODDMF   INDICATE 2 EMISSIONS BACKED UP   R41
         B     MVKZOFLO            SEND & RE-ENTER FOR ODD MASTER   R41
         SPACE 3                                                    R41
MVKWCXS  ST    RSINK,SCWSCBA       SAVE ADDRESS OF INTERRUPTED SCB  R41
         LA    RSINK,SCB+1(,RSINK) UPDTE POINTER FOR 'RPLRLEN' CALC R41
         ST    RSCBL,SCWSCBL       SAVE SCB UNUSED CAPACITY         R41
         SPACE 3                                                    R41
*                                                                   R41
*           COMPACTION PLANNER - COMPACT SCB STATE  (ODD SUSP 16-M) R41
*                                                                   R41
         SPACE 1                                                    R41
         NOPR  0               -4  FEEDER-END ROUTINE DOESN'T EXIST,R41C
                                    PLANNER-END ROUTINE IS NO-OP    R41
         BALR  RPLAN,RFEED         CHG TO 16-MAST ODD COMPACT SUSPD R41C
                                    STATE, & EXIT FROM PLANNER-END  R41
         SPACE 1                                                    R41
         SLR   RCPZ,RCPZ           CLEAR COMPACTION WORK REG        R41
         IC    RGO,0(,RCHAR)       PICK UP 8-BIT COMPACTION         R41
         IC    RCPZ,CPTCTT          FORM OF EMITTED CHARACTER       R41
         IC    RGO,CPTCAT(RGO)     PICK UP ATTRIBUTE OF EMITTED CHARR41
         L     RGO,MVKQCXST(RGO)   USE AS INDEX INTO ADDRESS TABLE  R41
         SLR   RNUM,RLSRCE         COMPUTE # OF OCCURRENCES LESS 1  R41
         BR    RGO                 BRANCH WITH CONDITION CODE SET   R41
         SPACE 2                                                    R41
MVKQCXST DS    0F   *ODD,SUSP,16M* COMPACT STATE ATTRIBUTE HANDLERS R41
         DC    A(MVKQNSXX)         NONPRIME NOT IN COMPACTION TABLE R41
         DC    A(MVKQNTXX)         PRIME    NOT IN COMPACTION TABLE R41
         DC    A(0)                CAN NEVER OCCUR                  R41
         DC    A(0)                CAN NEVER OCCUR                  R41
         DC    A(MVKQCSMX)         NONPRIME MASTER                  R41
         DC    A(MVKQCTMX)         PRIME    MASTER                  R41
         EJECT                                                      R41
***********************************************************************
*                                                                     *
*           COMPACTION PLANNER ROUTINES - STRATEGY TABLE              *
*                                                                     *
*        COMPACTION PLANNER ROUTINES USE A FINITE-STATE MACHINE       *
*        STRATEGY TO FIND THE SHORTEST WAY TO REPRESENT SOURCE        *
*        DATA AS SCB STRINGS.  F.S.M. STATES ARE NUMBERED BY          *
*        MAJOR STATE (TYPE OF SCB CURRENTLY ACTIVE) AND RACING        *
*        STATE (MOMENTARY WASTE OR SAVINGS OF COMPACT FORM OVER       *
*        THE ALTERNATIVE) AS SHOWN IN THE FOLLOWING TABLE.            *
*                                                                     *
*              COMPACTION IS - NOT RACING   BEHIND    TIED    AHEAD   *
*        MAJOR STATE -         ----------   ------    ----    -----   *
*          EMPTY (NO SCB ACTIVE)     0        1        2        3     *
*          NONCOMPACT SCB ACTIVE     4        5        6        7     *
*          COMPACT SCB ACTIVE       N/A      N/A      10       11     *
*                                                                     *
*        EACH F.S.M. STATE IS ASSOCIATED WITH A MAJOR PLANNER         *
*        ROUTINE ADDRESS (IN REG 'RPLAN') AND A VALUE (IN BITS        *
*        1-31 OF 'RCPA') AS FOLLOWS -                                 *
*                                                                     *
*        IF FSM STATE IS     0-3       4-7       10        11         *
*        RPLAN HAS ADDR OF   MVKQEY    MVKQNC    MVKQCA10  MVKQCA11   *
*        AND RCPA CONTAINS   (A)       (A)       (B)       (C)        *
*                                                                     *
*        (A)  0  IF COMPACTION CANNOT COMPETE                         *
*             1  IF COMPACTION BEHIND BY 1/2 BYTE                     *
*             2  IF COMPACTION IN STANDOFF                            *
*             3  IF COMPACTION AHEAD  BY 1/2 BYTE                     *
*        (B)  (BITS  0-23) ZERO (BITS 24-31 = DON'T CARE)             *
*        (C)  (BITS  0-23) ZERO                                       *
*             (BITS 24-31) TRANSLATED ODD MASTER (X'F-')              *
*                                                                     *
*        INPUTS TO THE F.S.M. ARE 'EMISSIONS' (SEE EMITTER            *
*        PROLOG), DEFINED BY A POINTER (IN REG 'RCHAR') AND           *
*        A DUP FACTOR (IN REG 'RNUM').  EACH EMISSION HAS ONE         *
*        OF SIX DIFFERENT ATTRIBUTE COMBINATIONS -                    *
*                                                                     *
*        STRING    A T T R I B U T E S    CPTCAT  6TH AND 7TH CHAR    *
*        SYMBOL  MASTER  IN TABLE  PRIME  OFFSET  IN HANDLER LABEL    *
*        ------  ------  --------  -----  ------  (NORM)---(SUSPD)    *
*        .X.       NO       NO       NO     +0       OX      SX       *
*        .P(X).    NO       NO      YES     +4       PX      TX       *
*        .N.       NO      YES       NO     +8       ON      SN       *
*        .P(N).    NO      YES      YES    +12       PN      TN       *
*        .M.      YES    IMPLIED     NO    +16       OM      SM       *
*        .P(M).   YES    IMPLIED    YES    +20       PM      TM       *
*                                                                     *
*        THE COMPACTION ATTRIBUTE TABLE 'CPTCAT' CONTAINS THE         *
*        OFFSETS CORRESPONDING TO THE ATTRIBUTES OF EACH OF THE       *
*        256 EBCDIC CHARACTERS, TO FACILITATE A 6-WAY BRANCH,         *
*        AN INITIAL STEP IN ALL COMPACTION PLANNER ROUTINES.          *
*                                                                     *
***********************************************************************
         EJECT                                                      R41
***********************************************************************
*                                                                     *
*           COMPACTION PLANNER - STRATEGY TABLE (CONTINUED)           *
*                                                                     *
*        PLANNER ROUTINES REACT TO THE ATTRIBUTE AND DUP FACTOR       *
*        OF EMISSIONS, SIMULATING INPUTS DRIVING AN F.S.M.            *
*        THROUGH STATE TRANSITIONS.  THE FOLLOWING TABLE SUM-         *
*        MARIZES F.S.M. STRATEGY EXCLUDING FULL-SCB OR FULL-R.U.      *
*        EXCEPTION HANDLING.  (STATES ARE SHOWN ACROSS, AND           *
*        INPUTS DOWN DUE TO SPACE LIMITATIONS.  TABLE ENTRIES         *
*        SHOW RESULTING NEW STATE.)                                   *
*                                                                     *
*                    ----------------CURRENT STATE----------------    *
*              DUP       E M P T Y         N O N C P        C P       *
*        ATTR  FACT    0   1   2   3     4   5   6   7    10  11      *
*        ==========  =============================================    *
*        .X.    1     &4   4   4   4    &4   4   4   4     4  #4      *
*               2     &0   0   0   0    &4   4   4   4     0  #0      *
*               3+    &0   0   0   0    &0   0   0   0     0  #0      *
*        ----------  ---------------------------------------------    *
*        .P(X). 1     &0   0   0   0    &4   4   4   4     0  #0      *
*               2+    &0   0   0   0    &0   0   0   0     0  #0      *
*        ----------  ---------------------------------------------    *
*        .N.    1     *6   6  10  10     4   4   6   6    10  10      *
*               2      0   0   2   2     4   4   6   6    10  10      *
*               3+     0   0   0   0     0   0   0   0     0   0      *
*        ----------  ---------------------------------------------    *
*        .P(N). 1      0   0   2   2     4   4   6   6    10  10      *
*               2+     0   0   0   0     0   0   0   0     0   0      *
*        ----------  ---------------------------------------------    *
*        .M.    1     *7  10  11  10    *5   6   7  10    11  10      *
*               2     *2   3  10  11    *6   7  10  11    10  11      *
*               3     *1   2   3  10    *1   2   3  10    11  10      *
*               4      0   1   2   3     0   1   2   3    10  11      *
*               5      0   0   1   2     0   0   1   2    *1  10      *
*               6      0   0   0   1     0   0   0   1     0  *1      *
*               7+     0   0   0   0     0   0   0   0     0   0      *
*        ----------  ---------------------------------------------    *
*        .P(M). 1     *1   2   3  10    *5   6   7  10    11  10      *
*               2      0   1   2   3     0   1   2   3    10  11      *
*               3      0   0   1   2     0   0   1   2    *1  10      *
*               4      0   0   0   1     0   0   0   1     0  *1      *
*               5+     0   0   0   0     0   0   0   0     0   0      *
*        =========================================================    *
*        &   ENTRY IS PART OF COMPRESSION-ONLY SUBSTRATEGY.           *
*        *   RACE BEGINS.  INFORMATION STORED FOR CONVERTER.          *
*        #   16-MASTER MODE REPROCESSES EMISSION IN STATE 4.          *
*                                                                     *
***********************************************************************
         EJECT                                                      R41
*                                                                   R41
*           COMPACTION PLANNER - EMPTY STATE  (NO CURRENT SCB)      R41
*                                                                   R41
         SPACE 1                                                    R41
         CNOP  0,8                 MAIN LOOP BRANCH TARGET ON DBLWD R41
         B     0(,RFEED)       -8  FEEDER-END AND PLANNER-          R41
         BR    RFEED           -4   END ROUTINES ARE NO-OPS         R41
         SPACE 1                                                    R41
MVKQEYRR BALR  RPLAN,RPLAN    INSTR THAT RETURNS TO CALLER OF SCB   R41C
                               MOVERS 'MVKWNC' & 'MVKWCT', CHANGING R41C
                                TO EMPTY STATE AT THE SAME TIME.    R41
         SPACE 1                                                    R41
MVKQEY   IC    RGO,0(,RCHAR)       PICK UP ATTRIBUTE OF EMITTED     R41
         IC    RGO,CPTCAT(RGO)      CHARACTER FROM COMPACTION TABLE R41
         L     RGO,MVKQEYAT(RGO)   USE AS INDEX INTO ADDRESS TABLE  R41
         SLR   RNUM,RLSRCE         COMPUTE # OF OCCURRENCES LESS 1  R41
         BR    RGO                 BRANCH WITH CONDITION CODE SET   R41
         SPACE 2                                                    R41
MVKQEYAT DS    0F                  EMPTY STATE ATTRIBUTE HANDLERS   R41
         DC    A(MVKQEOX)          NONPRIME NOT IN COMPACTION TABLE R41
         DC    A(MVKWPR0)          PRIME    NOT IN COMPACTION TABLE R41
         DC    A(MVKQEON)          NONPRIME COMPACTIBLE NON-MASTER  R41
         DC    A(MVKQEPN)          PRIME    COMPACTIBLE NON-MASTER  R41
         DC    A(MVKQEOM)          NONPRIME MASTER                  R41
         DC    A(MVKQEPM)          PRIME    MASTER                  R41
         SPACE 5                                                    R41
MVKQEOXZ BXH   RSINK,RBY1,MVKZOFLO SEND & RE-ENTER IF NO SPACE LEFT R41
MVKQEOX  BC    SLSP,MVKWDU0        GEN DUP SCB IF MULTIPLE .X.      R41
         SLR   RCPA,RCPA           ELSE SHOW COMPACTION NOT RACING  R41
         B     MVKQCOX4            GO START NONCOMP/NONDUP SCB      R41
         SPACE 3                                                    R41
MVKQEPXZ BXLE  RSINK,RBY1,MVKWPR0  GEN PRIME SCB IF ROOM IN R.U.    R41
         B     MVKZOFLO            ELSE GO SEND & RE-ENTER          R41
         EJECT                                                      R41
MVKQEONR SLR   RSINK,RBY1          BACK UP TO END OF SCB STRING     R41
         BAL   RPLAN,MVKWCT        GO STORE COUNT & CHK FOR RU END  R41
         SLR   RNUM,RCPA           SET COND CODE ON # OCCURRENCES-1 R41
         SPACE 1                                                    R41
MVKQEON  BC    SLSP,MVKQEONG       BR IF MORE THAN SINGLE CHARACTER R41
         CLR   RCPA,RBY1           TEST COMPACTION RACING STATUS    R41
         BH    MVKQEONF            BRANCH IF RACING, STANDOFF/AHEAD R41
         LA    RCPA,SCWSTAND       SHOW COMPACTION RACE IN STANDOFF R41
         BE    MVKQCOX4            ELSE BR IF RACING, COMPACT BEHINDR41
MVKQEONA LA    RPLAN,MVKQNC        CHANGE TO NONCOMP/NONDUP STATE   R41
MVKQEONB ST    RSINK,SCWSCBCA      SAVE POSSIBLE COMPACT SCB LOC    R41
         LA    RSCBL,SCBMAXCT(,RSINK)  GET END OF FULL CAPACITY SCB R41
         CLR   RSCBL,REND          ATTEMPT TO FIT FULL CAPACITY SCB R41
         BNH   MVKQEOND            BRANCH IF CAN FIT                R41
         LR    RSCBL,REND          ELSE SUBSTITUTE END OF R.U.      R41
MVKQEOND ST    RSCBL,SCWSCBCE      SAVE PLANNED COMPACT SCB END LOC R41
MVKQEON4 SLR   RSCBL,RSINK         COMPUTE UNUSED SCB CAPACITY      R41
         BC    SLSZ,MVKZOFLO       BRANCH IF NO ROOM FOR SCB + CHAR.R41
         ST    RSCBL,SCWSCBNC      SAVE SCB STARTING CAPACITY       R41
         MVI   0(RSINK),SCBNONCO+SCBEMPTY  SHOW NOTHING MOVED YET   R41
MVKQEONE ST    RCHAR,SCWSRCEB      SAVE STRING START ADDR FOR MOVER R41
         BCT   RSCBL,MVKEMITR      GET NEXT EMISSION                R41
         L     RSCBL,SCWSCBNC      IF SCB ALREADY                   R41
         STC   RSCBL,0(,RSINK)      FULL, STORE COUNT               R41
         ALR   RSINK,RSCBL           AND MOVE IN LAST               R41
         MVC   0(1,RSINK),0(RCHAR)    SINGLE CHARACTER              R41
         ALR   RSINK,RBY1          UPDTE POINTER FOR 'RPLRLEN' CALC R41
         BCT   RNUM,MVKZFULL       FORCE DUP FACTOR NEGATIVE & SEND R41C
               (ALWAYS BRANCHES)    SINCE SHORT SCB IMPLIES FULL RU R41
         SPACE 1                                                    R41
MVKQEONF SLR   RGO,RGO             ANTICIPATE COMPACT--CLEAR WK REG R41
         SLR   RSINK,RBY1          COMPARE END OF STORED STRING WITHR41
         CLR   RSINK,RSCBL          END OF HYPOTHETICAL COMPACT SCB R41
         BL    MVKWCA              GO COMPACT IF COVERED BY 1 SCB   R41
         LA    RCPA,SCWSTAND       SHOW COMPACTION RACE IN STANDOFF R41
         BXLE  RSINK,RBY1,MVKQEONA ELSE RESET PTR TO ORIGINAL VALUE R41C
               (ALWAYS BRANCHES)    & HANDLE AS IF RACE JUST BEGUN  R41
         SPACE 1                                                    R41
MVKQEONG SRL   RCPA,0(RNUM)        FORCE NO-RACE STATE, EXCEPT      R41
         ALR   RCPA,RCPA            SET STANDOFF STATE FOR CASES    R41C
                                     STANDOFF/.NN. OR AHEAD/.NN.    R41
         B     MVKVDU              GO GEN DUP SCB VIA COMMON MOVER  R41
         SPACE 3                                                    R41
MVKQEPN  SRL   RCPA,1(RNUM)        FORCE NO-RACE STATE, EXCEPT      R41
         ALR   RCPA,RCPA            SET STANDOFF STATE FOR CASES    R41C
                                     STANDOFF/.N. OR AHEAD/.N.      R41
         B     MVKVPR              GO GEN PRIME SCB VIA COMMON MOVERR41
         EJECT                                                      R41
MVKQEOMR SLR   RCPA,RCPA           REPROC EMISSION IN NO-RACE STATE R41
MVKQEOM  ALR   RCPA,RNUM           TEST DUP FACTOR & RACING STATE   R41
         BC    ALSZ,MVKQEOMC       BRANCH IF 1 MASTER & NOT RACING  R41
         SLR   RCPA,RNUM           TEST OLD RACING STATUS           R41
         LA    RCPA,SCWNPCOS+1(,RCPA)  GET NEW RACING STATE, STEP 1 R41
         BC    SLSP,MVKQEOMB       BRANCH IF RACING ALREADY BEGUN   R41
         ST    RSINK,SCWSCBCA      ELSE SAVE PLANNED COMPACT SCB LOCR41
         LA    RSCBL,SCBMAXCT(,RSINK)  GET END OF FULL CAPACITY SCB R41
         CLR   RSCBL,REND          ATTEMPT TO FIT FULL CAPACITY SCB R41
         BNH   MVKQEOMA            BRANCH IF CAN FIT                R41
         LR    RSCBL,REND          ELSE SUBSTITUTE END OF R.U.      R41
MVKQEOMA ST    RSCBL,SCWSCBCE      SAVE PLANNED COMPACT SCB END LOC R41
MVKQEOMB SLR   RCPA,RNUM           COMPUTE NEW RACING STATE, STEP 2 R41
         BC    NOT-SLSP,MVKWDU0    BRANCH IF UNAMBIGUOUS DUP CASE   R41
         CL    RCPA,MVKQXVA        TEST RACING STATE VALIDITY       R41
         BL    MVKVDU              GEN DUP & KEEP RACING IF VALID   R41
         SLR   RGO,RGO             ANTICIPATE COMPACT--CLEAR WK REG R41
         SLR   RSINK,RBY1          COMPARE END OF STORED STRING WITHR41
         CLR   RSINK,RSCBL          END OF HYPOTHETICAL COMPACT SCB R41
         BL    MVKWCA              GO COMPACT IF COVERED BY 1 SCB   R41
         BXLE  RSINK,RBY1,MVKQEOMR ELSE RESET POINTER TO PROPER     R41C
               (ALWAYS BRANCHES)    VALUE & REDO IN NO-RACE STATE   R41
         SPACE 1                                                    R41
MVKQEOMC LA    RCPA,SCWAHEAD       SHOW COMPACTION AHEAD BY 1 MASTERR41
         LA    RPLAN,MVKQNC        CHANGE TO NONCOMPACT SCB STATE   R41
         B     MVKQEONB            GO START NONCOMP/NONDUP SCB      R41
         SPACE 3                                                    R41
MVKQEPMR SLR   RCPA,RCPA           REPROC EMISSION IN NO-RACE STATE R41
MVKQEPM  ALR   RCPA,RBY1           COMPUTE NEW RACING STATE, STEP 1 R41
         CLR   RCPA,RBY1           TEST OLD RACING STATUS           R41
         BNE   MVKQEPMC            BRANCH IF RACING ALREADY BEGUN   R41
MVKQEPMA ST    RSINK,SCWSCBCA      ELSE SAVE PLANNED COMPACT SCB LOCR41
         LA    RSCBL,SCBMAXCT(,RSINK)  GET END OF FULL CAPACITY SCB R41
         CLR   RSCBL,REND          ATTEMPT TO FIT FULL CAPACITY SCB R41
         BNH   MVKQEPMB            BRANCH IF CAN FIT                R41
         LR    RSCBL,REND          ELSE SUBSTITUTE END OF R.U.      R41
MVKQEPMB ST    RSCBL,SCWSCBCE      SAVE PLANNED COMPACT SCB END LOC R41
MVKQEPMC SLR   RCPA,RNUM           COMPUTE NEW RACING STATE, STEP 2 R41
         BC    NOT-SLSP,MVKWPR0    BRANCH IF UNAMBIGUOUS DUP CASE   R41
         CL    RCPA,MVKQXVA        TEST RACING STATE VALIDITY       R41
         BL    MVKVPR              GEN DUP & KEEP RACING IF VALID   R41
         SLR   RGO,RGO             ANTICIPATE COMPACT--CLEAR WK REG R41
         SLR   RSINK,RBY1          COMPARE END OF STORED STRING WITHR41
         CLR   RSINK,RSCBL          END OF HYPOTHETICAL COMPACT SCB R41
         BNH   MVKWCA              GO COMPACT IF COVERED BY 1 SCB   R41
         BXLE  RSINK,RBY1,MVKQEPMR ELSE RESET POINTER TO PROPER     R41C
               (ALWAYS BRANCHES)    VALUE & REDO IN NO-RACE STATE   R41
         EJECT                                                      R41
*                                                                   R41
*           COMPACTION PLANNER - NONCOMPRESS SCB STATE (NORMAL)     R41
*                                                                   R41
         SPACE 1                                                    R41
         CNOP  0,8                 MAIN LOOP BRANCH TARGET ON DBLWD R41
         B     MVKWNCI         -8  BRANCH TO  FEEDER-END ROUTINE.   R41
         B     MVKWNCI         -4  BRANCH TO PLANNER-END ROUTINE.   R41
         SPACE 1                                                    R41
MVKQNC   IC    RGO,0(,RCHAR)       PICK UP ATTRIBUTE OF EMITTED     R41
         IC    RGO,CPTCAT(RGO)      CHARACTER FROM COMPACTION TABLE R41
         L     RGO,MVKQNCAT(RGO)   USE AS INDEX INTO ADDRESS TABLE  R41
         SLR   RNUM,RLSRCE         COMPUTE # OF OCCURRENCES LESS 1  R41
         BR    RGO                 BRANCH WITH CONDITION CODE SET   R41
         SPACE 2                                                    R41
MVKQNCAT DS    0F                  NON-COMP STATE ATTRIBUTE HANDLERSR41
         DC    A(MVKQNOX)          NONPRIME NOT IN COMPACTION TABLE R41
         DC    A(MVKQNPX)          PRIME    NOT IN COMPACTION TABLE R41
         DC    A(MVKQNON)          NONPRIME COMPACTIBLE NON-MASTER  R41
         DC    A(MVKQNPN)          PRIME    COMPACTIBLE NON-MASTER  R41
         DC    A(MVKQNOM)          NONPRIME MASTER                  R41
         DC    A(MVKQNPM)          PRIME    MASTER                  R41
         SPACE 5                                                    R41
MVKQNOX  BC    SLSP,MVKQNOXC       BRANCH IF MORE THAN SINGLE .X.   R41
MVKQNOXA SLR   RCPA,RCPA           SHOW COMPACTION NOT COMPETING    R41
MVKQNOXB BCT   RSCBL,MVKEMITR      LOOP BACK FOR NEXT EMISSION      R41
         BCT   RNUM,MVKWNC         IF SCB FULL, KILL DUP FACTOR TO  R41C
               (ALWAYS BRANCHES)    SHOW EMISSION HANDLED & END SCB R41
MVKQNOXC CLR   RNUM,RBY1           IF 3 OR MORE OCCURRENCES         R41
         BH    MVKWNCAX             GO END SCB FOR DUPLICATE        R41
         CLR   RNUM,RSCBL          IF 2 CHARACTERS WON'T FIT        R41
         BNL   MVKWNCAX             GO END SCB FOR DUPLICATE        R41
         SLR   RNUM,RBY1           DECREASE DUP FACTOR BY 1         R41
         BCT   RSCBL,MVKQNOXA      DECREASE SPACE LEFT IN SCB BY 1  R41C
               (ALWAYS BRANCHES)    & GO HANDLE AS IF SINGLE CHAR   R41
         SPACE 3                                                    R41
MVKQNPX  BC    SLSZ,MVKQNOXA       BRANCH IF SINGLE CHARACTER       R41
         B     MVKWNCAX            ELSE GO END SCB FOR PRIME DUP    R41
         EJECT                                                      R41
MVKQNON  BC    SLSP,MVKQNONC       BRANCH IF MORE THAN SINGLE .N.   R41
MVKQNONA OR    RCPA,RBY1           CHANGE NO- OR BEHIND TO NO-RACE  R41
         SLR   RCPA,RBY1            STATE, & EVEN OR AHEAD, TO EVEN R41
MVKQNONB BCT   RSCBL,MVKEMITR      LOOP BACK FOR NEXT EMISSION      R41
         BCT   RNUM,MVKWNC         IF SCB FULL, KILL DUP FACTOR TO  R41C
               (ALWAYS BRANCHES)    SHOW EMISSION HANDLED & END SCB R41
MVKQNONC CLR   RNUM,RBY1           IF 3 OR MORE OCCURRENCES         R41
         BH    MVKWNCAX             GO END SCB FOR DUPLICATE        R41
         OR    RCPA,RBY1           CHANGE NO- OR BEHIND TO NO-RACE  R41
         SLR   RCPA,RBY1            STATE, & EVEN OR AHEAD, TO EVEN R41
MVKQNOND CLR   RNUM,RSCBL          IF 2 CHARACTERS WON'T FIT        R41
         BNL   MVKWNCAL             GO END SCB FOR DUPLICATE        R41
         SLR   RNUM,RBY1           DECREASE DUP FACTOR BY 1         R41
         BCT   RSCBL,MVKQNONB      DECREASE SPACE LEFT IN SCB BY 1  R41C
               (ALWAYS BRANCHES)    & GO HANDLE AS IF SINGLE CHAR   R41
         SPACE 3                                                    R41
MVKQNPN  BC    SLSZ,MVKQNONA       BRANCH IF HANDLING SINGLE PRIME  R41
         B     MVKWNCAX            ELSE GO END SCB FOR PRIME DUP    R41
         SPACE 3                                                    R41
MVKQNOM  BC    SLSP,MVKQNOMF       BRANCH IF MORE THAN 1 MASTER     R41
MVKQNOMA IC    RNUM,MVKQNOMB(RCPA) SET UP BRANCH ON RACE=0, 1, 2, 3 R41
         AR    RCPA,RBY1           IMPROVE RACE STATE BY 1          R41
         B     MVKQN(RNUM)         TAKE 4-WAY BRANCH ON RACE STATE  R41
         SPACE 1                                                    R41
MVKQNOMB DS    0C                  NONCOMP/.M. RACE STATE HANDLERS  R41
         DC    AL1(MVKQNOMD-MVKQN) IF NOT RACING, BEGIN RACING NOW  R41
         DC    AL1(MVKQNOME-MVKQN) IF BEHIND, CONTINUE IN STANDOFF  R41
         DC    AL1(MVKQNOME-MVKQN) IF BEHIND, CONTINUE IN STANDOFF  R41
         DC    AL1(MVKQNOMC-MVKQN) IF AHEAD, GO COMPACT IF WILL FIT R41
         SPACE 1                                                    R41
MVKQN    DS    0H                  ORIGIN FOR BRANCH TABLE OFFSETS  R41
         SPACE 1                                                    R41
MVKQNOMC BM    MVKWNC              COMPACT IF RACE BEGAN IN THIS SCBR41
         L     RLCHAR,SCWSCBNC     COMPUTE WHERE CURRENT            R41
         SLR   RLCHAR,RSCBL         NONCOMPACT SCB WOULD END        R41
         LA    RPLAN,0(RLCHAR,RSINK) IF IT WERE TERMINATED NOW      R41
         CL    RPLAN,SCWSCBCE      TEST IF PLANNED COMPACT SCB      R41C
                                    WILL COVER THE NONCOMPACT SCB   R41
         BNH   MVKWNC6             GO COMPACT IF IT WILL            R41
         LA    RPLAN,MVKQNC        ELSE RELOAD NONCOMPACT STATE     R41
         SPACE 1                                                    R41
MVKQNOMD L     RCPA,MVKQXIBH       RACE STATE = BEHIND + FLAG SHOW- R41C
                                    ING RACE BEGAN INSIDE CURR SCB  R41
         ST    RSINK,SCWSCBNA      SAVE SCB ADDR  FOR LATER CALC    R41
         ST    RSCBL,SCWSCBNS      SAVE SCB SPACE FOR LATER CALC    R41
MVKQNOME BCT   RSCBL,MVKEMITR      LOOP BACK FOR NEXT EMISSION      R41
         LCR   RNUM,RBY1           IF R.U. FULL, KILL DUP FACTOR TO R41
         B     MVKWNC              SHOW EMISSION HANDLED & END SCB  R41
         EJECT                                                      R41
MVKQNSM  BC    SLSZ,MVKQNTMA       GO REVIVE SCB IF SINGLE MASTER   R41
         SLR   RCHAR,RNUM          ELSE BACK UP TO 1ST OCCURRENCE   R41
         ST    RCHAR,SCWSRCEB      SAVE STRING START ADDR FOR MOVER R41
         L     RSINK,SCWSCBA       RETRIEVE SUSPENDED SCB ADDRESS   R41
         LA    RPLAN,MVKQNC        REVERT TO NORMAL NONCOMPACT STATER41
         SPACE 1                                                    R41
MVKQNOMF SLR   RGO,RGO             CLEAR REG FOR MULTI-WAY BRANCH   R41
         CLR   RNUM,RBY1           TEST # OF OCCURRENCES LESS 1     R41
         IC    RGO,MVKQNOMH(RCPA)  TAKE 4-WAY BRANCH ON RACE STATE  R41
         BE    MVKQN(RGO)           IF EXACTLY 2 OCCURRENCES        R41
MVKQNOMG LA    RPLAN,MVKQEOM       ELSE CAUSE REPROCESSING IN EMPTY R41
         B     MVKWNC               STATE (RACE AS IS), & END SCB   R41
         SPACE 1                                                    R41
MVKQNOMH DS    0C                  NONCOMP/.MM. RACE STATE HANDLERS R41
         DC    AL1(MVKQNOMI-MVKQN) IF NOT RACING, BEGIN RACING NOW  R41
         DC    AL1(MVKQNOMK-MVKQN) IF BEHIND, CONTINUE AHEAD        R41
         DC    AL1(MVKQNOML-MVKQN) IF STANDOFF OR AHEAD & 2 MASTERS R41
         DC    AL1(MVKQNOML-MVKQN)  FIT IN PLANNED SCB, GO COMPACT  R41
         SPACE 1                                                    R41
MVKQNOMI CLR   RNUM,RSCBL          NOT RACING--IF 2 CHARS WON'T FIT R41
         BNL   MVKQNOMG             GO REPROCESS IN EMPTY STATE     R41
MVKQNOMJ L     RCPA,MVKQXIST       2 MASTERS START NEW RACE (TIED)  R41
         ST    RSINK,SCWSCBNA      SAVE SCB ADDR  FOR LATER CALC    R41
         ST    RSCBL,SCWSCBNS      SAVE SCB SPACE FOR LATER CALC    R41
         BCT   RSCBL,MVKQNOME      DECREASE SPACE LEFT IN SCB BY 1  R41C
               (ALWAYS BRANCHES)    & GO CHECK REMAINING SCB SPACE  R41
         SPACE 1                                                    R41
MVKQNOMK AL    RCPA,MVKQXNPB       COMPUTE NEW RACING STATE         R41
         CLR   RNUM,RSCBL          IF 2 CHARACTERS WON'T FIT        R41
         BNL   MVKWNCAL             GO END SCB FOR DUPLICATE        R41
         BCT   RSCBL,MVKQNOME      DECREASE SPACE LEFT IN SCB BY 1  R41C
               (ALWAYS BRANCHES)    & GO HANDLE AS FOR SINGLE CHAR  R41
         SPACE 1                                                    R41
MVKQNOML A     RCPA,MVKQXNPB       COMPUTE NEW RACING STATE         R41
         BM    MVKWNC              GO COMPACT IF RACE STATE FLAGGED R41
         L     RLCHAR,SCWSCBNC     COMPUTE WHERE CURRENT            R41
         SLR   RLCHAR,RSCBL         NONCOMPACT SCB WOULD END        R41
         LA    RPLAN,0(RLCHAR,RSINK) IF IT WERE TERMINATED NOW      R41
         CL    RPLAN,SCWSCBCE      TEST IF PLANNED COMPACT SCB      R41C
                                    WILL COVER THE NC SCB & 2 CHARS R41
         BL    MVKWNC6             GO COMPACT IF IT WILL            R41
         SLR   RCPA,RCPA           ELSE SHOW COMPACTION NOT RACING  R41
         CLR   RNUM,RSCBL          IF 2 CHARS WON'T FIT IN NONCOMP  R41
         BNL   MVKQNOMG             SCB EITHER, GO TO EMPTY STATE   R41
         LA    RPLAN,MVKQNC        ELSE RELOAD NONCOMPACT STATE     R41
         B     MVKQNOMJ            ELSE USE .MM. TO BEGIN NEW RACE  R41
         SPACE 3                                                    R41
MVKQNPM  BC    SLSZ,MVKQNOMA       BRANCH IF ONLY 1 PRIME MASTER    R41
         LA    RPLAN,MVKQEPM       ELSE CAUSE REPROCESSING IN EMPTY R41
         B     MVKWNC               STATE (RACE AS IS), & END SCB   R41
         EJECT                                                      R41
*                                                                   R41
*           COMPACTION PLANNER - COMPACT SCB STATE (NORMAL)         R41
*                                                                   R41
         SPACE 1                                                    R41
         CNOP  0,8                 MAIN LOOP BRANCH TARGET ON DBLWD R41
         B     MVKWCTI         -8  BRANCH TO FEEDER-END ROUTINE.    R41
         B     0(,RFEED)       -4  PLANNER-END ROUTINE IS NO-OP     R41
         SPACE 1                                                    R41
MVKQCA10 IC    RGO,0(,RCHAR)       PICK UP 8-BIT COMPACTION         R41
         IC    RCPA,CPTCTT(RGO)     FORM OF EMITTED CHARACTER       R41
         IC    RGO,CPTCAT(RGO)     PICK UP ATTRIBUTE OF EMITTED CHARR41
         L     RGO,MVKQCAAT(RGO)   USE AS INDEX INTO ADDRESS TABLE  R41
         SLR   RNUM,RLSRCE         COMPUTE # OF OCCURRENCES LESS 1  R41
         BR    RGO                 BRANCH WITH CONDITION CODE SET   R41
         SPACE 2                                                    R41
MVKQCAAT DS    0F           *EVEN* COMPACT STATE ATTRIBUTE HANDLERS R41
         DC    A(MVKQCOX)          NONPRIME NOT IN COMPACTION TABLE R41
         DC    A(MVKWCTAL)         PRIME    NOT IN COMPACTION TABLE R41
         DC    A(MVKQCON)          NONPRIME COMPACTIBLE NON-MASTER  R41
         DC    A(MVKQCPN)          PRIME    COMPACTIBLE NON-MASTER  R41
         DC    A(MVKQCOM)          NONPRIME MASTER                  R41
         DC    A(MVKQCPM)          PRIME    MASTER                  R41
         SPACE 5                                                    R41
*                                                                   R41
*           COMPACTION PLANNER - COMPACT SCB STATE (ODD, NORMAL)    R41
*                                                                   R41
         SPACE 1                                                    R41
         CNOP  0,8                 MAIN LOOP BRANCH TARGET ON DBLWD R41
         B     MVKWCTIZ        -8  BRANCH TO FEEDER-END ROUTINE.    R41
         B     0(,RFEED)       -4  PLANNER-END ROUTINE IS NO-OP     R41
         SPACE 1                                                    R41
MVKQCA11 IC    RGO,0(,RCHAR)       PICK UP 8-BIT COMPACTION         R41
         IC    RCPZ,CPTCTT(RGO)     FORM OF EMITTED CHARACTER       R41
         IC    RGO,CPTCAT(RGO)     PICK UP ATTRIBUTE OF EMITTED CHARR41
         L     RGO,MVKQCAZT(RGO)   USE AS INDEX INTO ADDRESS TABLE  R41
         SLR   RNUM,RLSRCE         COMPUTE # OF OCCURRENCES LESS 1  R41
         BR    RGO                 BRANCH WITH CONDITION CODE SET   R41
         SPACE 2                                                    R41
MVKQCAZT DS    0F            *ODD* COMPACT STATE ATTRIBUTE HANDLERS R41
         DC    A(MVKQCXXZ)         NONPRIME NOT IN COMPACTION TABLE R41
         DC    A(MVKQCPXZ)         PRIME    NOT IN COMPACTION TABLE R41
         DC    A(MVKQCONZ)         NONPRIME COMPACTIBLE NON-MASTER  R41
         DC    A(MVKQCPNZ)         PRIME    COMPACTIBLE NON-MASTER  R41
         DC    A(MVKQCOMZ)         NONPRIME MASTER                  R41
         DC    A(MVKQCPMZ)         PRIME    MASTER                  R41
         EJECT                                                      R41
MVKQCOX  BC    SLSP,MVKWCTAL       END SCB FOR DUP IF MULTIPLE .X.  R41
         SLR   RSINK,RBY1          POINT TO LAST BYTE OF COMPACTED  R41
MVKQCOXA BAL   RPLAN,MVKWCT         STRING & GO END THE COMPACT SCB R41
MVKQCOX4 LA    RPLAN,MVKQNC        CHANGE TO NONCOMP/NONDUP STATE   R41
         LA    RSCBL,SCBMAXCT(,RSINK)  GET END OF FULL CAPACITY SCB R41
         CLR   RSCBL,REND          ATTEMPT TO FIT FULL CAPACITY SCB R41
         BNH   MVKQEON4            BRANCH IF CAN FIT                R41
         LR    RSCBL,REND          ELSE SUBSTITUTE END OF R.U.      R41
         B     MVKQEON4            GO START NONCOMP/NONDUP SCB      R41
         SPACE 3                                                    R41
MVKQCON  BC    SLSZ,MVKQCPMB       BRANCH IF ONLY 1 OCCURRENCE      R41
MVKQCONA CLR   RNUM,RBY1           TEST # OF OCCURRENCES LESS 1     R41
         BH    MVKWCTAL            END SCB IF 3 OR MORE OCCURRENCES R41
MVKQCONB STC   RCPA,0(,RSINK)      STORE 1ST COPY OF NON-MASTER     R41
         BXLE  RSINK,RBY1,MVKQCPMB BRANCH IF 2ND COPY WILL FIT      R41
         BCT   RSINK,MVKWCTAL      ELSE BACK UP PTR TO IGNORE COPY  R41C
               (ALWAYS BRANCHES)    ALREADY STORED, & END THE SCB   R41
         SPACE 2                                                    R41
MVKQCPN  BC    SLSZ,MVKQCPMB       BRANCH IF ONLY 1 OCCURRENCE      R41
         BCT   RSINK,MVKWCTZL      ELSE BACK UP PTR TO STRING END   R41C
               (ALWAYS BRANCHES)    & GO END THE SCB FOR PRIME DUP  R41
         SPACE 2                                                    R41
MVKQCSM  LA    RPLAN,MVKQCA10      RESUME EVEN COMPACT STATE        R41
         L     REND,SCWSCBCE       RESTORE COMPACT SCB ENDING LOC   R41
MVKQCOM  BC    SLSZ,MVKEMITZ       ENTER ODD COMPACT STATE IF 1 .M. R41
MVKQCOMA CL    RNUM,MVKQXOM        CHECK DUP FACTOR VS. LIMIT       R41
         BNL   MVKQCOMF            BRANCH IF MUST LEAVE COMPACTION  R41
         IC    RCPZ,MVKQXMM(RCPA)  STORE 4-BIT                      R41
         STC   RCPZ,0(,RSINK)       MASTER PAIR                     R41
         BCT   RNUM,MVKQCOMC       BR IF MORE THAN 2 OCCURRENCES    R41
         BXLE  RSINK,RBY1,MVKEMITR ADVANCE RU PTR, GET NXT EMISSION R41
         BCT   RNUM,MVKWCTAL       IF SCB FULL, KILL DUP FACTOR TO  R41C
               (ALWAYS BRANCHES)    SHOW EMISSION HANDLED & END SCB R41
MVKQCOMC BCT   RNUM,MVKQCOMG       BRANCH IF EXACTLY 4 OCCURRENCES  R41
         BXLE  RSINK,RBY1,MVKEMITZ ADVANCE RU PTR, GET NXT EMISSION R41
         LA    RNUM,2              IF SCB FULL, RELOAD CORRECT DUP  R41
         SLR   RSINK,RNUM           FACTOR AND RESET POINTER TO     R41C
                                     EXCLUDE PAIR ALREADY STORED    R41
MVKQCOMD LA    RPLAN,MVKVDU        CAUSE EXIT TO NONPRIME DUP MOVER R41
MVKQCOME MVI   SCWSCBCA,SCBMAXCT   SET FLAG FOR ADD TO EXISTING SCB R41
         LR    RCPA,RBY1           SHOW COMPACTION BEHIND           R41
         B     MVKWCT01            GO END CURRENT COMPACTION SCB    R41
         SPACE 1                                                    R41
MVKQCOMF BNE   MVKWCTAL            BR IF COMPACTION ENDS UNCOND'LY  R41
         BCT   RSINK,MVKQCOMD      ELSE BACK UP PTR TO STRING END & R41C
               (ALWAYS BRANCHES)    END SCB FOR DUP IN BEHIND STATE R41
         SPACE 1                                                    R41
MVKQCOMG BXLE  RSINK,RBY1,MVKQCOMR ADVANCE R.U. POINTER & BRANCH    R41
         LA    RNUM,3              IF SCB FULL, RELOAD CORRECT DUP  R41
         BCT   RSINK,MVKWCTAL       FACTOR, SET PTR TO EXCLUDE PAIR R41C
               (ALWAYS BRANCHES)     ALREADY STORED, & END THE SCB  R41
         EJECT                                                      R41
MVKQCTM  LA    RPLAN,MVKQCA10      RESUME EVEN COMPACT STATE        R41
         L     REND,SCWSCBCE       RESTORE COMPACT SCB ENDING LOC   R41
         SPACE 1                                                    R41
MVKQCPM  BC    SLSZ,MVKEMITZ       ENTER ODD COMPACT STATE IF 1 .M. R41
MVKQCPMA CL    RNUM,MVKQXPM        CHECK DUP FACTOR VS. LIMIT       R41
         BNL   MVKQCPMC            BRANCH IF MUST LEAVE COMPACTION  R41
         IC    RCPA,MVKQXMM(RCPA)  STORE 4-BIT                      R41
MVKQCPMB STC   RCPA,0(,RSINK)       MASTER PAIR                     R41
         BXLE  RSINK,RBY1,MVKEMITR ADVANCE RU PTR, GET NXT EMISSION R41
         LCR   RNUM,RBY1           IF SCB FULL, KILL DUP FACTOR TO  R41
         BCT   RSINK,MVKWCT         SHOW EMISSION DONE, BACK UP PTR R41C
               (ALWAYS BRANCHES)     TO LAST BYTE, & GO END THE SCB R41
         SPACE 1                                                    R41
MVKQCPMC BNE   MVKWCTAL            BR IF COMPACTION ENDS UNCOND'LY  R41
         LA    RPLAN,MVKVPR        CAUSE EXIT TO PRIME DUP MOVER    R41
         BCT   RSINK,MVKQCOME      BACK UP POINTER TO STRING END &  R41C
               (ALWAYS BRANCHES)    END SCB FOR DUP IN BEHIND STATE R41
         SPACE 2                                                    R41
MVKQCOXZ CLI   CPTNMAST,16         TEST FOR 16 MASTERS SPECIAL CASE R41
         BL    MVKWCTZL            GO END SCB FOR DUP IF NOT        R41
         BAL   RGO,MVKWCX          ELSE END SCB VIA SPECIAL ROUTINE R41
         CLR   RNUM,RBY1           IF 3 OR MORE OCCURRENCES,        R41
         BH    MVKVDU               GO GENERATE DUPLICATE SCB       R41
         CLR   RNUM,RSCBL          IF EMISSION WON'T FIT            R41
         BNL   MVKZOFLO             R.U. IS FULL--GO SEND           R41
         SLR   RCHAR,RBY1          BACK UP TO 1ST OF PAIR OF CHARS  R41
         SLR   RSINK,RBY1          BACK UP TO ADDRESS               R41
         SLR   RSINK,RBY1           OF NON-COMPACT SCB              R41
         BCT   RSCBL,MVKQNSXC      DECREASE REMAINING SPACE IN SCB  R41C
               (ALWAYS BRANCHES)    BY 1 & TREAT AS IF SINGLE CHAR. R41
         SPACE 2                                                    R41
MVKQCPXZ STC   RCPA,0(,RSINK)      STORE ODD MASTER IN 8-BIT FORM   R41
         CLI   CPTNMAST,16         TEST FOR 16 MASTERS SPECIAL CASE R41
         BL    MVKWCTZL            END SCB FOR PRIME DUP IF NOT     R41
         LA    RGO,MVKVPR          ELSE POINT TO PRIME DUP MOVER    R41
         B     MVKWCX              GO END SCB VIA SPECIAL ROUTINE   R41
         SPACE 3                                                    R41
MVKQCONZ STC   RCPA,0(,RSINK)      STORE ODD MASTER IN 8-BIT FORM   R41
         BXH   RSINK,RBY1,MVKQEONR REVERT TO EMPTY STATE IF RU FULL R41
         BC    SLSZ,MVKQCOMQ       BRANCH IF SINGLE NON-MASTER      R41
         CLR   RNUM,RBY1           TEST # OF OCCURRENCES LESS 1     R41
         BH    MVKWCTAL            END SCB IF 3 OR MORE OCCURRENCES R41
         STC   RCPZ,0(,RSINK)      STORE 1ST COPY OF NON-MASTER     R41
         BXLE  RSINK,RBY1,MVKQCOMQ BRANCH IF 2ND COPY WILL FIT      R41
         BCT   RSINK,MVKWCTAL      ELSE BACK UP PTR TO IGNORE COPY  R41C
               (ALWAYS BRANCHES)    ALREADY STORED, & END THE SCB   R41
         EJECT                                                      R41
MVKQCPNZ STC   RCPA,0(,RSINK)      STORE ODD MASTER IN 8-BIT FORM   R41
         BC    SLSP,MVKWCTZL       END SCB BY PRIME DUP IF MULT .P. R41
         BXLE  RSINK,RBY1,MVKQCOMQ ADVANCE R.U. POINTER & BRANCH    R41
         BCT   RSINK,MVKWCTZL      IF SCB FULL, BACK UP PTR TO LAST R41C
               (ALWAYS BRANCHES)    BYTE STORED, AND GO END THE SCB R41
         SPACE 2                                                    R41
MVKQCSMX L     RSINK,SCWSCBA       RETRIEVE POINT OF INTERRUPTION   R41
MVKQCSMZ LA    RPLAN,MVKQCA11      RESUME ODD COMPACT STATE         R41
         L     REND,SCWSCBCE       RELOAD COMPACT SCB ENDING LOC    R41
         SPACE 1                                                    R41
MVKQCOMZ BC    SLSP,MVKQCOMS       BRANCH IF NOT SINGLE MASTER      R41
MVKQCOMP IC    RCPA,MVKQXMF(RCPA)  FORM PAIR FROM ODD MASTER        R41
         NR    RCPZ,RCPA            AND CURRENT EMISSION CHAR       R41
MVKQCOMQ LA    RPLAN,MVKQCA10      CHANGE TO EVEN COMPACTION STATE  R41
MVKQCOMR STC   RCPZ,0(,RSINK)      STORE GENERATED BYTE INTO R.U.   R41
         BXLE  RSINK,RBY1,MVKEMITR ADVANCE RU PTR, GET NXT EMISSION R41
         LCR   RNUM,RBY1           IF SCB FULL, KILL DUP FACTOR TO  R41
         BCT   RSINK,MVKWCT         SHOW EMISSION DONE, BACK UP PTR R41C
               (ALWAYS BRANCHES)     TO LAST BYTE, & GO END THE SCB R41
         SPACE 1                                                    R41
MVKQCOMS IC    RGO,MVKQXMF(RCPA)   FORM PAIR FROM ODD               R41
         LR    RCPA,RCPZ            MASTER AND CURRENT              R41
         NR    RCPZ,RGO              EMISSION CHARACTER             R41
         STC   RCPZ,0(,RSINK)         AND STORE IT IN R.U.          R41
         BCT   RNUM,MVKQCOMT       BR IF 2 OR MORE COPIES REMAINING R41
         BXLE  RSINK,RBY1,MVKEMITR ELSE ADVANCE, STAY IN ODD STATE  R41
         LA    RPLAN,MVKQEOMC      HAVE REMAINING MSTR REPROCESSED  R41
         BCT   RSINK,MVKWCT         IN EMPTY STATE. BACK UP TO LAST R41C
               (ALWAYS BRANCHES)     BYTE STORED, & GO END THE SCB  R41
         SPACE 1                                                    R41
MVKQCOMT LA    RPLAN,MVKQCA10      CHANGE TO EVEN COMPACT STATE     R41
         BXLE  RSINK,RBY1,MVKQCOMA GO HANDLE REMAINING OCCURRENCES  R41
         LA    RPLAN,MVKQEOM       IF SCB FULL, SET UP TO HANDLE    R41
         BCT   RSINK,MVKWCT         REMAINDER IN EMPTY STATE. BACK  R41C
               (ALWAYS BRANCHES)     UP PTR TO LAST BYTE & END SCB  R41
         SPACE 2                                                    R41
MVKQCTMX L     RSINK,SCWSCBA       RETRIEVE POINT OF INTERRUPTION   R41
MVKQCTMZ LA    RPLAN,MVKQCA11      RESUME ODD COMPACT STATE         R41
         L     REND,SCWSCBCE       RELOAD COMPACT SCB ENDING LOC    R41
         SPACE 1                                                    R41
MVKQCPMZ BC    SLSZ,MVKQCOMP       BRANCH IF ONLY 1 OCCURRENCE      R41
         IC    RGO,MVKQXMF(RCPA)   FORM PAIR FROM ODD               R41
         LR    RCPA,RCPZ            MASTER AND CURRENT              R41
         NR    RCPZ,RGO              EMISSION CHARACTER             R41
         STC   RCPZ,0(,RSINK)         AND STORE IT IN R.U.          R41
         BCT   RNUM,MVKQCPMP       BR IF 2 OR MORE COPIES REMAINING R41
         BXLE  RSINK,RBY1,MVKEMITR ELSE ADVANCE, STAY IN ODD STATE  R41
         LR    RCPA,RBY1           ELSE SHOW COMPACTION BEHIND      R41
         LA    RPLAN,MVKQEPMA      HAVE REMAINING PRIME REPROCESSED R41
         BCT   RSINK,MVKWCT01       IN EMPTY STATE. BACK UP TO LAST R41C
               (ALWAYS BRANCHES)     BYTE STORED, & GO END THE SCB  R41
         EJECT                                                      R41
MVKQCPMP LA    RPLAN,MVKQCA10      CHANGE TO EVEN COMPACT STATE     R41
         BXLE  RSINK,RBY1,MVKQCPMA GO HANDLE REMAINING OCCURRENCES  R41
         BCT   RSINK,MVKWCTZL      IF SCB FULL, BACK UP PTR TO LAST R41C
               (ALWAYS BRANCHES)     BYTE STORED, & SWITCH TO PRIME R41
         SPACE 20                                                   R41
*                                                                   R41
*                        COMPACTION PLANNER - CONSTANTS             R41
*                                                                   R41
         SPACE 2                                                    R41
MVKQXVA  DC    A(SCWAHEAD+1)       RACING STATE VALIDITY CONSTANT   R41
         SPACE 1                                                    R41
MVKQXINO DC    X'80',AL3(SCWCANOT) RACING STATE CONSTANTS           R41
MVKQXIBH DC    X'80',AL3(SCWBHIND)  WITH FLAG TO SHOW THAT          R41
MVKQXIST DC    X'80',AL3(SCWSTAND)   RACE BEGAN INSIDE NC SCB       R41
         SPACE 1                                                    R41
MVKQXNP  DC    A(SCWNPCOS+1)       RACE STATE CONSTANTS             R41
MVKQXNPB DC    A(SCWNPCOS)          FOR NONPRIME STRATEGY           R41
         SPACE 1                                                    R41
MVKQXPM  DC    A(SCWSTAND)         RACE STATE CONSTANTS             R41
MVKQXOM  DC    A(SCWNPCOS+SCWSTAND) FOR MASTER STRATEGY             R41
         SPACE 3                                                    R41
MVKQXMF  EQU   *-CPTMAST0          4-BIT MASTERS IN LEFT NIBBLE     R41
         DC    X'0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFFF'                  R41
         SPACE 3                                                    R41
MVKQXMM  EQU   *-CPTMAST0          4-BIT DOUBLE MASTERS             R41
         DC    X'00112233445566778899AABBCCDDEEFF'                  R41
         EJECT                                                      R41
***********************************************************************
*                                                                     *
*                   COMPRESS/COMPACT SEND ROUTINE                     *
*                                                                     *
*           OBJECTIVE - TO SET PROPER FLAGS AND RETURN TO             *
*           COMPOSER CALLER WHEN R.U. BUFFER FILLS.                   *
*                                                                     *
*           IF THERE IS MORE DATA TO BE PROCESSED (TRUE FOR           *
*           ENTRIES TO 'MVKZFULL' WITH 'SCWMORE' FLAG SET             *
*           AND FOR ALL ENTRIES TO 'MVKZOFLO'), ADDRESS AND           *
*           LENGTH OF THE EXCESS ARE SAVED, THE COMPOSER              *
*           EXITS TO CALLER WITH FLAG 'SCWMORE' SET, AND IT           *
*           IS EXPECTED THAT CALLING CODE WILL GET A NEW              *
*           BUFFER, SEND THE OLD BUFFER, AND CALL COMPOSER            *
*           AGAIN.  'SCWMORE' FLAG SET AT COMPOSER ENTRY              *
*           CAUSES BRANCH TO 'MVKZCNUE' TO HANDLE EXCESS.             *
*                                                                     *
*           IF FULL BUFFER HAPPENS TO COINCIDE WITH THE LAST          *
*           EMISSION FOR THIS CCW, COMPOSER RETURNS WITH              *
*           'SCWFULL ' FLAG SET INSTEAD OF 'SCWMORE'.  THE            *
*           CALLER JUST SENDS THE R.U. IN THIS CASE.                  *
*                                                                     *
***********************************************************************
         SPACE 1                                                     R4
MVKZCNUE L     RNUM,SCWNUM         RETRIEVE SAVED DUP FACTOR         R4
         LCR   RCHAR,RBY1          LOAD -1 TO CALC EMISSION ADDRESS  R4
         SPACE 1                                                     R4
         L     RSRCE,SCWSRCE       RELOAD ADDRESS AND LENGTH         R4
         L     RLSRCE,SCWLSRCE      OF SOURCE STRING REMAINDER       R4
         L     RFEED,SCWFEED       RELOAD FEEDER ROUTINE RETURN ADDR R4
         TM    SCWFLAGS,SCWCTRL    TEST COMPOSER FLAGS               R4
         BZ    MVKZCNU1            BRANCH IF NOT CONTROL STRING     R41
         ALR   RSRCE,MBUF          CONVERT OFFSET TO ADDRESS         R4
MVKZCNU1 ALR   RCHAR,RSRCE         EMISSION CHARACTER ADDR = RSRCE-1R41
         SPACE 1                                                     R4
         LTR   RNUM,RNUM           TEST EMISSION DUP FACTOR          R4
         BM    MVKEMITR            IF EXHAUSTED GO GET NEXT EMISSION R4
         ALR   RNUM,RLSRCE         FIX UP REPEAT OF DUP FACTOR CALC. R4
         SLR   RGO,RGO             CLEAR WORK REG FOR WHERE-TO-GO   R41
         TM    SCWFLAGS,SCWODDMF   TEST COMPOSER FLAGS              R41
         BZR   RPLAN               BRANCH TO EMPTY STATE PLANNER IF R41C
                                    NOT 16-MASTER ODD OVERFLOW CASE R41
         MVI   0(RSINK),SCBNONCO+1 CREATE NONCOMP SCB WITH COUNT 1  R41
         MVC   1(1,RSINK),SCWODDM  MOVE IN ODD MASTER               R41
         LA    RSCBL,SCBMAXCT      SET ORIGINAL SCB                 R41
         ST    RSCBL,SCWSCBNC       CAPACITY TO MAXIMUM             R41
         ST    RSINK,SCWSCBA       SAVE INTERRUPTED SCB ADDRESS     R41
         LA    RSINK,SCB+1(,RSINK) POINT PAST SCB AND SINGLE CHAR   R41
         NI    SCWFLAGS,255-SCWODDMF  RESET ODD MASTER SPECIAL FLAG R41
         BCT   RSCBL,MVKQNCSA      SHOW 1 BYTE OF SCB USED & GO     R41C
               (ALWAYS BRANCHES)    HANDLE BACKED-UP EMISSION IN    R41C
                                     SIMULATED NONCOMP SUSPND STATE R41
         EJECT                                                      R41
MVKZFULE OI    SCWFLAGS,SCWFULL    IF LAST FORCE CALLER TO SEND R.U.R41
         NI    SCWFLAGS,255-SCWLAST-SCWMORE  INDICATE COMPOSING DONER41
         B     MVKZFLEN            REJOIN COMMON RETURN LOGIC       R41
         SPACE 2                                                    R41
MVKZFULL DS    0H                  ENTRY USED IF RNUM ALREADY NEG.     C
                                    MEANING EMISSION TAKEN CARE OF   R4
         TM    SCWFLAGS,SCWLAST    TEST COMPOSER FLAGS               R4
         BO    MVKZFULE            BRANCH IF LAST EMISSION          R41
         SPACE 1                                                    R41
MVKZOFLO DS    0H                  ENTRY USED IF EMISSION MUST BE      C
                                    HANDLED ON RE-ENTRY W/NEW BUFFER R4
         TM    SCWFLAGS,SCWNSPAN   TEST COMPOSER FLAGS               R4
         BO    MVKZNSPA            BR IF SPANNED RECORDS FORBIDDEN   R4
         ST    RNUM,SCWNUM         SAVE EMISSION DUP FACTOR          R4
         TM    SCWFLAGS,SCWCTRL    TEST COMPOSER FLAGS               R4
         BZ    SKIP460             BRANCH IF NOT CONTROL STRING      R4
         SLR   RSRCE,MBUF          CONVERT ADDRESS TO OFFSET         R4
SKIP460  ST    RSRCE,SCWSRCE       SAVE ADDRESS AND LENGTH           R4
         ST    RLSRCE,SCWLSRCE      OF SOURCE STRING REMAINDER       R4
         ST    RFEED,SCWFEED       SAVE FEEDER RETURN ADDRESS        R4
         SPACE 1                                                     R4
MVKZFLEN L     REND,RPLAREA        CALCULATE                         R4
         SLR   RSINK,REND           R.U. LENGTH                      R4
         ST    RSINK,RPLRLEN       SET R.U. LENGTH IN RPL            R4
         SPACE 2                                                    R41
         POP   USING               RESTORE ACCESS METHOD REG USAGE  R41
         SPACE 2                                                    R41
MVKZNSPA L     SAVE,SCWSAV13       RESTORE                          R41
         L     R1,PCER1             REGISTER                        R41
         L     BASE1,PCEBASE1        ENVIRONMENT                    R41
        $RESTORE                   RESTORE ACCESS METHOD REGISTERS   R4
         L     ML,SCWRETRN         LOAD COMPOSER RETURN ADDRESS      R4
         BR    ML                  RETURN TO CALLER                  R4
         TITLE 'HASP SNA REMOTE TERMINAL CLOSE ROUTINE'              R4
*                                                                    R4
*                             VTAM CLOSE PROCESSING                  R4
*                                                                    R4
         SPACE 3                                                     R4
         USING RTAMVCLO,MBASE1     ESTABLISH SNA CLOSE ADDRESSAB'TY  R4
RTAMVNCL DS    0H                  ADDRESS OF RTAM SNA NCLOSE RTN   R41
         OI    MDCTSTAT,DCTADS     SHOW DATASET ABNORMAL TERMINATN  R41
         LA    MBASE1,RTAMVCLO-RTAMVNCL(,MBASE1) ADJUST BASE ...    R41
         ICM   MBASE1,8,=X'80'     SET CLOSE INDICATOR...      @OZ42454
         ST    MBASE1,PCESAVEA      AND SAVE IN THE PCE        @OZ42454
         SPACE 2                                                    R41
RTAMVCLO DS    0H                  ENTRY POINT FOR RTAM SNA CLOSE    R4
         TM    MDCTSEL,DCTPOUTB    TEST DIRECTION BIT                R4
         BZ    MVCINBND            IF INBOUND GO TO INBOUND CLOSE    R4
         TM    MDCTSTAT,DCTPSUSP   TEST STREAM STATUS                R4
         BZ    SKIP470             BRANCH IF NOT SUSPENDED           R4
         BAL   ML,MVREQUME         WAIT FOR RESUME IF SUSPENDED      R4
SKIP470  TM    ICESNDST,ICEWTRSP+ICECNCEL  TEST SESSION SEND STATUS  R4
         BZ    SKIP480             BR IF L.M.-SENT REQST NOT PENDING R4
         BAL   ML,MVREQRSP         ELSE WAIT FOR L.M. TO ACCEPT RESP R4
SKIP480  TM    ICESNDST,ICEINSTR   TEST STREAM SEND STATUS           R4
         BO    MVCINSTR            BYPASS RESUME HDR IF IN STREAM    R4
         BAL   ML,MVRPLGET         GET BUFFER FOR 'RESUME' FM HEADER R4
         OI    ICESNDST,ICEOCPND   SET END CHN TO FORCE IMM FMH SEND R4
         LA    R1,FMHRESUM         LOAD 'RESUME' DATA STREAM ACTION  R4
         BAL   ML,MVFMHBLD         BUILD & SEND 'RESUME' FM HEADER   R4
         SPACE 1                                                     R4
MVCINSTR TM    MDCTSTAT,DCTFLUSH   TEST STREAM STATUS                R4
         BZ    MVCTRUNC            BRANCH IF STREAM NOT ABORTING     R4
         LTR   MBUF,MBUF           TEST RDCT-OWNED BUFFER ADDRESS    R4
         BZ    MVCENDBF            IF NO BUFFER, GET ONE & SEND ADS  R4
         L     R15,RPLNEXT         TEST RPL                          R4
         LTR   R15,R15              CHAIN FIELD                      R4
         BZ    MVCENDDS            GO BUILD ADS IF OWN ONLY 1 BUFFER R4
         BAL   ML,MVFREOUT         ELSE FREE FIRST BUFFER            R4
         L     MBUF,DCTBUFAD        AND GO BUILD ADS IN              R4
         B     MVCENDDS              THE REMAINING BUFFER            R4
         SPACE 1                                                     R4
MVCTRUNC LTR   MBUF,MBUF           TEST BUFFER ADDRESS               R4
         BNZ   MVCENDCH            GO TRY END CHAIN IF HAVE BUFFER   R4
         BAL   ML,MVRPLGET         GET BUFFER FOR END CHAIN OR EDS   R4
         TM    ICESNDST,ICEINCHN   TEST STREAM SENDING STATUS        R4
         BZ    MVCENDDS            GO SEND EDS IF NOT IN CHAIN       R4
         SPACE 1                                                     R4
MVCENDCH TM    ICESNDST,ICEINCHN   TEST STREAM SENDING STATUS        R4
         BO    SKIP490             SKIP ZERO LNGTH CHECK IF IN CHAIN R4
         L     R1,RPLRLEN          TEST R.U.                         R4
         LTR   R1,R1                LENGTH                           R4
         BZ    MVCENDDS            IF ZERO DON'T BOTHER TO SEND      R4
SKIP490  OI    ICESNDST,ICEOCPND   SET 'END OF CHAIN PENDING' FLAG   R4
         BAL   ML,MVRPLSND         CALL BUFFER SEND ROUTINE          R4
         EJECT                                                       R4
*                             SEND 'END' OR 'ABORT DATA STREAM'      R4
         SPACE 1                                                     R4
MVCENDBF BAL   ML,MVRPLGET         GET ANOTHER BUFFER FOR EDS        R4
MVCENDDS L     R15,ICESDCT         GET 1ST SUSPENDED REMOTE DCT      R4
         LTR   R15,R15             TEST ADDRESS                      R4
         BNZ   MVCNOTEB            BRANCH IF SUSPENDED RDCTS EXIST   R4
         TM    BINPRIP-ISTDBIND+ICEBIND,BINPSEB  TEST PRIMARY PRTCOL R4
         BZ    MVCHGDIR            BRANCH IF NOT ALLOWED TO SEND EB  R4
         OI    ICEFLAGS,ICEEBPND   SET 'END BRACKET PENDING' FLAG    R4
         B     MVCDSTRM            GO TO SEND FM HEADER              R4
         SPACE 1                                                     R4
         USING DCTDSECT,R15        USE TEMPORARY RDCT ADDRESSABILITY R4
MVCNOTEB TM    MDCTSEL,DCTPOUTB    TEST DIRECTION BIT                R4
         BO    MVCDSTRM            BRANCH IF SUSPENDED OUTBOUND      R4
         L     R15,MDCTSDCT        GET NEXT SUSPENDED RDCT           R4
         LTR   R15,R15             TEST ADDRESS                      R4
         BNZ   MVCNOTEB            BRANCH IF REMOTE DCT PRESENT      R4
         DROP  R15                 DISCARD TEMP RDCT ADDRESSABILITY  R4
         SPACE 1                                                     R4
MVCHGDIR OI    ICEFLAGS,ICECHDIR   SET 'CHGE DIRECTION PENDING' FLAG R4
         SPACE 1                                                     R4
MVCDSTRM LA    ML,MVTAMXIT         LOAD RETURN FOR HDR SERV ROUTINE  R4
         LA    R1,FMHNMEND         SET 'END DATA STREAM' ACTION CODE R4
         OI    ICESNDST,ICEOCPND   SET END CHN TO FORCE FMH SEND NOW R4
         TM    MDCTSTAT,DCTADS     TEST FOR NCLOSE SPECIFIED        R41
         BZ    MVFMHBLD            IF NOT GO BUILD 'EDS' FM HEADER  R41
         LA    R1,FMHABEND         ELSE , BUILD 'ADS' FM HEADER     R41
         B     MVFMHBLD            BUILD, SEND, & GET +RSP TO FM HDR   C
                                    TRY STARTING NEXT STREAM & RETRN R4
         SPACE 2                                                     R4
*                                                                    R4
*                             INBOUND CLOSE PROCESSING               R4
*                                                                    R4
         SPACE 1                                                     R4
MVCINBND LA    ML,MVTAMXIT         LOAD RETURN FOR NORMAL CASE       R4
         B     MVRELBUF            ASSUME BUFFER CAUSING EDS IS        C
                                    ATTACHED. GO FREE IT & RETURN    R4
         SPACE 1                                                     R4
         DROP  MDCT                RELEASE DCT ADDRESSABILITY        R4
         TITLE 'HASP SNA REMOTE TERMINAL ACCESS METHOD EXIT ROUTINE' R4
         USING DCTDSECT,R1         ESTABLISH DCT ADDRESSABILITY      R4
         SPACE 3                                                     R4
RTAMVSUB DS    0H                  RTAM SNA SUBROUTINE BASE ADDRESS  R4
         SPACE 3                                                     R4
*                                                                    R4
*                             SNA RTAM COMMON EXIT ROUTINE           R4
*                                                                    R4
         SPACE 3                                                     R4
MVTAMXIT DS    0H                  SNA RTAM NORMAL EXIT              R4
         LM    LINK,BASE2,PCELINK  RELOAD CALLER'S REGISTERS         R4
         NI    DCTSTAT,255-DCTRTAM SHOW RTAM PROCESSING COMPLETE     R4
         LPR   R0,R1               SET POSITIVE CONDITION CODE       R4
         BR    LINK                 AND RETURN                       R4
         SPACE 5                                                     R4
MVTAMXEX DS    0H                  SNA RTAM EXCEPTION EXIT           R4
         LM    LINK,BASE2,PCELINK  RELOAD CALLER'S REGISTERS         R4
         NI    DCTSTAT,255-DCTRTAM SHOW RTAM PROCESSING COMPLETE     R4
         LNR   R0,R1               SET NEGATIVE CONDITION CODE       R4
         BR    LINK                 AND RETURN                       R4
         SPACE 5                                                     R4
MVTAMXAB DS    0H                  SNA RTAM ABNORMAL EXIT            R4
         LM    LINK,BASE2,PCELINK  RELOAD CALLER'S REGISTERS         R4
         NI    DCTSTAT,255-DCTRTAM SHOW RTAM PROCESSING COMPLETE     R4
         SR    R0,R0               SET ZERO CONDITION CODE           R4
         BR    LINK                 AND RETURN                       R4
         SPACE 5
MVTAMXOV DS    0H                  SNA RTAM OVERFLOW EXIT            R4
         LM    LINK,BASE2,PCELINK  RELOAD CALLER'S REGISTERS         R4
         NI    DCTSTAT,255-DCTRTAM SHOW RTAM PROCESSING COMPLETE     R4
         TM    DCTSTAT,DCTINUSE    SET 'ONES' (OVERFLOW) COND. CODE  R4
         BR    LINK                 AND RETURN                       R4
         SPACE 2                                                     R4
         DROP  R1                  RELEASE DCT ADDRESSABILITY        R4
         TITLE 'HASP SNA REMOTE TERMINAL SUBROUTINES'          @OZ45801
*                                                              @OZ45801
*        SNA INVALID ICE STATE DETECTED OR RPL HANDLING ERROR  @OZ45801
*                                                              @OZ45801
         SPACE 1                                               @OZ45801
MSNABND  DS    0H                                              @OZ45801
         L     R1,$MWORK           POINT TO MSG WORKAREA       @OZ45801
         MVC   0(L'MSNAERRM,R1),MSNAERRM MOVE MSG TO AREA      @OZ45801
         USING MSNAERRM,R1         SET MSG ADDRESSABILITY      @OZ45801
         MVC   MSNAELUN,ICESYMB    MOVE LUNAME TO MSG          @OZ45801
         DROP  R1                  SUSPEND MSG ADDRESSABILITY  @OZ45801
        $WTO   (R1),L'MSNAERRM,JOB=NO,WAIT=NO, ISSUE MESSAGE   @OZ45801C
               ROUTE=$LOG+$ERR+$TP,CLASS=$ALWAYS,PRI=$HI       @OZ45801
         SLR   R0,R0               CLEAR R0                    @OZ45801
         LTR   MBUF,MBUF           TEST BUFFER ADDRESS         @OZ45801
         BZ    MICEABRT            BRANCH IF NONE              @OZ45801
         ST    R0,RPLNEXT          INSURE ZERO CHAIN           @OZ45801
         LR    R2,ML               SAVE RETURN ADDRESS         @OZ45801
         BAL   ML,MVFREEIN         FREE INBOUND BUFFER         @OZ45801
         LR    ML,R2               RESTORE RETURN ADDRESS      @OZ45801
         B     MICEABRT            TERMINATE SESSION           @OZ45801
         EJECT                                                 @OZ45801
         USING DCTDSECT,MDCT       ESTABLISH DCT ADDRESSABILITY      R4
         SPACE 3                                                     R4
*                                                                    R4
*                             RPL 'SEND' ROUTINE                     R4
*                                                                    R4
         SPACE 1                                                     R4
MVRPLWTR OI    ICESNDST,ICEWTRSP   INDICATE PROC. AWAITING RESPONSE  R4
         ST    MBUF,DCTBUFAD       DEFER BUF POP-UP TILL AFTER WAIT  R4
         SPACE 1                                                     R4
MVRPLWT  ST    ML,RPLBCHN          SAVE RETURN ADDRESS               R4
        $WAIT  WORK,SAVE=NO        WAIT FOR CONDITION TO CLEAR       R4
        $RESTORE                   RESTORE ACCESS METHOD REGISTERS   R4
         L     ML,RPLBCHN          RELOAD RETURN ADDRESS             R4
         TM    ICESNDST,ICECNCEL   TEST SESSION SEND STATUS          R4
         BO    MVREQCAN            ABORT $EXTP CALL IF CHAIN CANCEL  R4
         SPACE 1                                                     R4
MVRPLSND DS    0H                  RPL SCHEDULER MAIN ENTRY POINT    R4
         CLC   ICEOUTCT,ICEOUTLM   COMPARE OUTBD CIRCULATION & LIMIT R4
         BNL   MVRPLWT             AT LIMIT, BR - WAIT AND RE-ENTER  R4
         SPACE 1                                                     R4
         MVC   DCTBUFAD,RPLNEXT    POP DCT BUFFER POINTER            R4
         TM    ICESNDST,ICEINCHN   TEST SESSION SEND STATUS          R4
         BO    MVRPLHDR            SKIP LIMIT CHECK IF IN SAME CHAIN R4
         CLC   MDCTCHLM,ICERSPCT   TEST FOR LIMIT EXCESSION          R4
         BL    MVRPLWTR            YES, BRANCH - WAIT AND RE-ENTER   R4
         SPACE 1                                                     R4
MVRPLOCH IC    R15,ICERSPCT        INCREMENT                         R4
         LA    R15,1(,R15)          OVERLAPPING                      R4
         STC   R15,ICERSPCT          CHAIN COUNT                     R4
         SPACE 1                                                     R4
MVRPLHDR LA    R15,4               SET TRANSITION # FOR IN CHN, -EOC R4
         TM    ICESNDST,ICEINCHN   TEST SESSION STATUS               R4
         BO    MVRPLNFC            BAR FI/BB/EB UNLESS 1ST IN CHAIN  R4
         SLR   R15,R15             RESET TRANSITION NUMBER TO 0      R4
MVRPLFC1 TM    ICESNDST,ICENOFMH   TEST STREAM SENDING STATUS        R4
         BO    SKIP500             BRANCH IF NO FM HEADER PENDING    R4
         OI    RPLOPT12,RPLFMHDR   SET FORMAT (FM HEADER) INDICATOR  R4
SKIP500  TM    ICEFLAGS,ICEEBPND   TEST SESSION STATUS               R4
         BZ    MVRPLFC2            BR IF END BRACKET NOT PENDING     R4
         OI    RPLRH3,RPLEB        TURN ON END BRACKET BIT IN RH     R4
MVRPLFC2 TM    ICEFLAGS,ICEINBRK   TEST SESSION STATUS               R4
         BO    MVRPLNFC            BRANCH IF ALREADY IN BRACKET      R4
         OI    ICEFLAGS,ICEBBPND   SET 'BEGIN BRACKET PENDING' FLAG  R4
         OI    RPLRH3,RPLBB        TURN ON BEGIN BRACKET BIT IN RH   R4
         OI    ICEFLAGS,ICEOUTBD   MARK STREAM AS OUTBOUND           R4
         EJECT                                                       R4
MVRPLNFC TM    ICESNDST,ICEOCPND   TEST SESSION STATUS               R4
         BZ    MVRPLNEC            BRANCH IF NOT END OF CHN          R4
         LA    R15,2(,R15)         ADD 2 TO TRANSITION NUMBER        R4
         NI    RPLVTFL2,255-RPLNFME-RPLEX  SET 'REQ DEFINITE RESP'   R4
         CLI   PCEID+1,PCEMLMID    IS THIS THE LINE MANAGER..  @OZ41311
         BE    MVRPLNWT            DON'T WAIT NOW IF L.M.      @OZ26937
         ST    ML,DCTEWF           SAVE 1ST LEVEL RETURN ADDRESS     R4
         LA    ML,MVREQWT          CLOSE WAIT FOR RESPONSE     @OZ26937
MVRPLNWT OI    ICESNDST,ICEWTRSP   INDICATE WAIT FOR RESPONSE  @OZ26937
         TM    ICEFLAGS,ICECHDIR   TEST SESSION STATUS         @OZ26937
         BZ    MVRPLNEC            BR IF CHANGE DIRECTION NOT PENDNG R4
         OI    RPLRH3,RPLCMD       TURN ON CHGE DIRECTION BIT IN RH  R4
         SPACE 1                                                     R4
MVRPLNEC TM    MDCTFMT,DCTPALTC    TEST DATA STREAM FORMAT           R4
         BZ    MVRPLCHN            SKIP XLATE IF ALT CODE FLAG OFF   R4
         L     R14,RPLAREA         GET 1ST DATA BYTE ADDRESS         R4
         L     R0,RPLRLEN          GET R.U. LENGTH                   R4
         TM    RPLOPT12,RPLFMHDR   TEST FORMAT (FM HDR) INDICATOR    R4
         BZ    MVRPLALT            BRANCH IF NO FM HEADERS           R4
         SLR   R1,R1               CLIP FM HDR OFF FRONT             R4
SKIP520  IC    R1,0(,R14)           OF R.U. BY SUBTRACTING           R4
         SLR   R0,R1                 FMH LTH FROM R.U. LTH           R4
         TM    FMHBYTE1-FMHDSECT(R14),FMHCNCAT TEST FMH CONCATENATED R4
         LA    R14,0(R1,R14)       ADD FMH LENGTH TO R.U. ADDRESS    R4
         BO    SKIP520             LOOP BACK IF MORE FM HEADERS      R4
         SPACE 1                                                     R4
*                                                                    R4
*                             R.U. ALTERNATE CODE TRANSLATION        R4
*                                                                    R4
         SPACE 1                                                     R4
MVRPLALT LTR   R0,R0               TEST LENGTH OF R.U. DATA          R4
         BNP   MVRPLCHN            BYPASS TRANSLATE IF NO DATA       R4
         OI    RPLRH3,RPLCSI       TURN ON ALTERNATE CODE BIT IN RH  R4
         BCTR  R0,0                ADJUST TRUE LENGTH TO MACHINE LTH R4
         LA    R1,255              LOAD MAX LTH FOR SINGLE EXECUTE   R4
MVRPLAL1 CLR   R1,R0               SEE IF 1 EX WILL COVER ACTUAL LTH R4
         BNH   SKIP530             BRANCH IF NOT OR IF JUST MAKES IT R4
MVRPLAL2 LR    R1,R0               LOAD REMAINDER FOR LAST EXECUTE   R4
SKIP530  EX    R1,MVRPLTRA         EXECUTE TRANSLATE TO SNA ALT CODE R4
         BNL   MVRPLCHN            EXIT IF WHOLE BUFFER DONE         R4
         LA    R14,256(,R14)       STEP TO NEXT POSITION IN BUFFER   R4
         SLR   R0,R1               REDUCE LENGTH BY 256 (R1 = 255,   R4
         BCT   R0,MVRPLAL1          +1 FOR BCT) & BRANCH IF PLUS     R4
         B     MVRPLAL2            BRANCH TO TRANSLATE LAST BYTE     R4
         SPACE 1                                                     R4
MVRPLTRA TR    0(*-*,R14),MVPASCII ** EXECUTE ONLY **                R4
         SPACE 1                                                     R4
MVRPLCHX DC    AL1(RPLFIRST)  *0*  OUT & -EOC = FIRST IN CHAIN       R4
         DC    AL1(ICEINCHN)                  = IN  & -EOC (EXCL.OR) R4
         DC    AL1(RPLONLY)   *2*  OUT &  EOC = ONLY IN CHAIN        R4
         DC    AL1(ICEOCPND)                  = OUT & -EOC (EXCL.OR) R4
         DC    AL1(RPLMIDLE)  *4*  IN  & -EOC = MIDDLE IN CHAIN      R4
         DC    AL1(0)                         = IN  & -EOC (EXCL.OR) R4
         DC    AL1(RPLLAST)   *6*  IN  &  EOC = LAST IN CHAIN        R4
         DC    AL1(ICEINCHN+ICEOCPND)         = OUT & -EOC (EXCL.OR) R4
         EJECT                                                       R4
*                                                                    R4
*                             SET R.U. CHAIN POSITION, UPDATE STATE  R4
*                                                                    R4
         SPACE 2                                                     R4
MVRPLCHN LA    R15,MVRPLCHX(R15)   USING OLD CHAIN STATE AS INDEX    R4
         MVC   RPLCHN,0(R15)        INTO TRANSITION TABLE, SET R.U.  R4
         XC    ICESNDST,1(R15)       CHAIN POSITION AND NEW STATE    R4
         SPACE 1                                                     R4
MVRPLOCR LH    R1,ICEOUTCT         INCREMENT                         R4
         LA    R1,1(,R1)            OUTBOUND                         R4
         STH   R1,ICEOUTCT           CIRCULATION                     R4
         SPACE 1                                                     R4
MVRPLRQN MVI   RPLSEQTP,VSEQSEND   SET 'SEND' CONTROL SEQUENCE       R4
         MVI   RPLREQ,RPLSNDCD     SET RPL REQUEST TYPE TO 'SEND'    R4
         SPACE 3                                                     R4
*                                                                    R4
*        ATTEMPT TO QUEUE RPL TO ICE OUTBOUND QUEUE                  R4
*                                                                    R4
         SPACE 2                                                     R4
MVRPLQOB MVC   RPLDCT+1(3),ICELDCT+1  MOVE LINE DCT ADDRESS TO RPL   R4
         ST    MICE,RPLICE         STORE ICE ADDRESS IN RPL          R4
         L     R0,ICECID           GET SESSION COMMUNICATION ID      R4
         ST    R0,RPLARG           STORE IN RPL ARG FIELD            R4
         L     R15,ICEOUTBF        TEST OUTBOUND CIRCULATION         R4
         O     R15,ICEOUTHD         FOR ANY CURRENT ACTIVITY         R4
         BZ    MVRPLXIN            EXECUTE THIS REQUEST IF NONE      R4
         LA    R1,0(,MBUF)         MOVE BUF ADDR TO 'NEW TAIL' REG.  R4
         L     MBUF,RPLNEXT        GET NEXT BUFFER ADDRESS IN CHAIN  R4
         SPACE 1                                                     R4
MVRPLQHD LM    R14,R15,ICEOUTHD    PICK UP OUTBOUND QUEUE POINTERS   R4
MVRPLQH1 LA    R0,ICEOUTHD         LOAD 'END OF QUEUE' SPECIAL VALUE R4
         LTR   R14,R14             TEST OLD HEAD ELEMENT ADDRESS     R4
         ST    R0,RPLNEXT-RPLDSECT(,R1)  STORE Q-END VALUE IN NEW BF R4
         BZ    MVRPLQUP            BRANCH IF QUEUE WAS EMPTY         R4
         USING RPLDSECT,R15        USE TEMPORARY RPL ADDRESSABILITY  R4
         CS    R0,R1,RPLNEXT       CHAIN NEW BUF TO OLD TAIL ELEMENT R4
         LR    R0,R14              NEW HEAD ELEM. = OLD HEAD ELEM.   R4
         BE    MVRPLQU1            CONTINUE IF UPDATE SUCCESSFUL     R4
         B     MVRPLQHD            ELSE START OVER FROM BEGINNING    R4
         DROP  R15                 DISCARD TEMP RPL ADDRESSABILITY   R4
         SPACE 1                                                     R4
MVRPLQUP LR    R0,R1               IF QUE EMPTY, NEW HEAD = NEW TAIL R4
MVRPLQU1 CDS   R14,R0,ICEOUTHD     UPDATE OUTBOUND QUEUE POINTERS    R4
         BER   ML                  RETURN TO CALLER IF SUCCESSFUL    R4
         LTR   R14,R14            QUEUE EMPTY..                @OZ46363
         BZ    MVRPLQUP             YES, BRANCH ....           @OZ46363
         LR    R0,R14              NO, POINT TO FIRST BUFFER   @OZ46363
         B     MVRPLQU1             AND RETRY                  @OZ46363
         EJECT                                                       R4
*                                                                    R4
*        EXECUTE THE RPL - PASS IT TO VTAM                           R4
*                                                                    R4
         SPACE 1                                                     R4
MVRPLXIN TM    ICESTAT,ICEABORT    TEST SESSION STATUS               R4
         BO    MVFREEOQ            DISCARD ALL BUFFERS IF ABORTING   R4
         ST    MBUF,ICEOUTBF       SAVE ADDR OF CURRENT OUTB BUFF    R4
         SPACE 1                                                     R4
MVRPLXBR OI    RPLEXTDS,RPLBRANC   FORCE BRANCH ENTRY (FAST PATH)      C
                                    FOR SEND/RESETSR/RECEIVE-ANY     R4
         SPACE 1                                                     R4
MVRPLXEC L     R15,=A(VEXITRPL)    SET RPL EXIT                      R4
         ST    R15,RPLECB           ROUTINE ADDRESS                  R4
         OI    RPLEXTDS,RPLEXIT    SHOW EXIT IS PRESENT              R4
         ST    SAVE,RPLPCE         SAVE PCE ADDRESS IN RPL           R4
         OI    RPLFLAG2,RPLSREGS   INDICATE RPLSAVEA IN USE    @OZ57933
         SLR   R0,R0               CLEAR REQ TYPE PARAMETER REG      R4
         LR    R1,MBUF             PLACE BUFFER ADDR IN R1 FOR VTAM  R4
         L     MBUF,RPLNEXT        GET NEXT BUFFER ADDRESS ON CHAIN  R4
         DROP  MBUF                TEMPORARILY CHANGE BASE           R4
         USING RPLDSECT,R1          FOR RPL ADDRESSABILITY           R4
         MVI   RPLOPT1,RPLSEQ+RPLASY  INDICATE ASYNCHRONOUS REQUEST  R4
         IC    R0,RPLREQ           PICK UP REQUEST TYPE FROM RPL     R4
         L     R14,RPLDACB         GET ADDRESS OF ACB                R4
         USING ACBDSECT,R14        USE TEMPORARY ACB ADDRESSABILITY  R4
         LA    R13,RPLSAVEA        GET SAVEAREA ADDR FOR VTAM        R4
         L     R15,ACBINRTN        GET ADDR OF INTERFACE ROUTINE     R4
         BALR  R14,R15             LINK TO THE INTERFACE ROUTINE     R4
         L     SAVE,RPLPCE         RESTORE PCE ADDRESS         @OZ57933
         LA    SAVE,0(,SAVE)       CLEAR HI ORDER BYTE         @OZ57933
         LTR   R15,R15             CHECK FOR SUCCESSFUL COMPLETION   R4
         BZR   ML                  RETURN TO CALLER IF ACCEPTED      R4
         EJECT                                                       R4
*                                                                    R4
*        QUEUE RETRIES TO THE LINE MANAGER                           R4
*                                                                    R4
         SPACE 1                                                     R4
         CL    R15,=F'4'           TEST GENERAL RETURN CODE          R4
         BE    MVRPLRTN            IF OK, CHECK RETURN CODE    @OZ45801
         LR    R0,R15              PUT RETURN CODE IN R0       @OZ45801
MVRPLERR STC   R0,RPLRTNCD         SET RPL RETURN CODE         @OZ45801
         MVI   RPLFDB2,FF          SET RPL FEEDBACK CODE       @OZ45801
         B     MVRPLQUE            GO QUEUE THE RPL            @OZ45801
MVRPLRTN DS    0H                                              @OZ45801
         CL    R0,=A(USFLOGIC)     TEST RECOVERY ACTION RETURN CODE  R4
         BH    MVRPLERR            TAKE DISASTER EXIT          @OZ45801
MVRPLQUE L     R0,$RJECHEQ         GET LINE MGR BUFFER QUEUE   @OZ45801
SKIP540  ST    R0,RPLNEXT          ATTEMPT TO CHAIN                  R4
         CS    R0,R1,$RJECHEQ       RETRY RPL TO QUEUE               R4
         BNE   SKIP540             RETRY IF UNSUCCESSFUL             R4
         SPACE 3                                                     R4
*                                                                    R4
*        POST THE LINE MANAGER FOR WORK                              R4
*                                                                    R4
         SPACE 1                                                     R4
         L     R14,RPLDACB         RESTORE ACB ADDRESS               R4
         L     R14,ACBLNDCT        GET ADDRESS OF LOGON DCT          R4
         USING DCTDSECT,R14        TEMPORARY DCT ADDRESSABILITY      R4
         L     R15,DCTPCE          GET LINE MANAGER PCE ADDRESS      R4
         $POST (R15),WORK          POST THE LINE MANAGER FOR WORK    R4
         BR    ML                  RETURN TO CALLER                  R4
         DROP  R14                 DISCARD LOGON DCT ADDRESSABILITY  R4
         DROP  R1                  RE-ESTABLISH NORMAL BASE          R4
         USING RPLDSECT,MBUF        FOR RPL ADDRESSABILITY           R4
         EJECT                                                       R4
*                                                                    R4
*                             CHECK IF OUTBOUND QE NEEDS RESTARTING  R4
*                                                                    R4
         SPACE 1                                                     R4
MVRPLKOQ DS    0H                  ROUTINE EXPECTS R0 TO BE ZERO     R4
         CL    R0,ICEOUTBF         COMPARE 0 & ADDR OF BUF IN VTAM   R4
         BNER  ML                  EXEC-RPL NOT NEEDED IF ONE ACTIVE R4
         CL    R0,ICEOUTHD         COMPARE 0 & 1ST ADDR ON OUTBD QUE R4
         BER   ML                  RETURN IF OUTBD QUEUE EMPTY       R4
         TM    ICESTAT,ICEABORT+ICECLOSE  TEST SESSION STATUS        R4
         BNZ   MVFREEOQ            GO FREE OUTBD QUEUE IF ABORTING   R4
         LR    R1,MBUF             SAVE CURRENT BUFFER POINTER       R4
         L     MBUF,ICEOUTHD       GET ADDR OF 1ST BUF ON OUTBOUND Q R4
         L     R14,RPLNEXT         GET NEXT BUFFER POINTER           R4
         ST    R1,RPLNEXT          CHAIN CURR BUF SO XEC-RPL POPS IT R4
         LA    R15,ICEOUTHD        LOAD SPECIAL VALUE TO CHECK Q END R4
         ST    R14,ICEOUTHD        PROMOTE NEXT BUFFER TO HEAD OF Q  R4
         CLR   R14,R15             COMPARE CHAIN PTR & SPECIAL VALUE R4
         BNE   SKIP550             BRANCH IF THIS BUFFER NOT LAST    R4
         XC    ICEOUTHD(8),ICEOUTHD  ELSE CLEAR OUTBD QUEUE POINTERS R4
         B     MVRPLXIN            GO EXECUTE RPL                    R4
         SPACE 1                                                     R4
         USING RPLDSECT,R14        USE TEMPORARY RPL ADDRESSABILITY  R4
SKIP550  C     R15,RPLNEXT         COMPARE SPEC. VALUE & 2ND CHN PTR R4
         BNE   MVRPLXIN            GO EXEC RPL IF NEW HEAD NOT LAST  R4
         ST    R14,ICEOUTTL        ELSE NEW HEAD IS ALSO NEW TAIL    R4
         B     MVRPLXIN            GO EXEC RPL AND RETURN TO CALLER  R4
         DROP  R14                 DISCARD TEMP. RPL ADDRESSABILITY  R4
         EJECT                                                       R4
*                                                                    R4
*                             MVRPLGET - GET VTAM RPL BUFFER         R4
*                                                                    R4
         SPACE 1                                                     R4
MVRPLNO  ST    ML,DCTEWF           SAVE RETURN ADDR ACROSS WAIT      R4
        $WAIT  BUF,SAVE=NO,INHIBIT=NO  WAIT FOR AVAILABLE BUFFERS    R4
        $RESTORE                   RESTORE ACCESS METHOD REGISTERS   R4
         L     ML,DCTEWF           RESTORE RETURN ADDRESS            R4
         TM    ICESNDST,ICECNCEL   TEST SESSION SEND STATUS          R4
         BO    MVREQCAN            ABORT $EXTP CALL IF CHAIN CANCEL  R4
         SPACE 1                                                     R4
MVRPLGET $GETBUF MVRPLNO,TYPE=VTAM GET A VTAM RPL BUFFER             R4
         MVI   RPLREQ-RPLDSECT(R1),RPLSNDCD  SET REQ TYPE TO 'SEND'  R4
         MVI   RPLSRTYP-RPLDSECT(R1),RPLNFSYN STYPE = REQUEST  @OZ32746C
                                   RTYPE = NDFSYN,NDFASY,NRESP @OZ32746
         L     R15,ICEADCT         GET LOGON DCT ADDRESS             R4
         L     R15,DCTACB-DCTDSECT(,R15)  STORE ADDRESS              R4
         ST    R15,RPLDACB-RPLDSECT(,R1)   OF ACB IN RPL             R4
         LA    R15,RPLNEXT         POINT TO POSSIBLE BUF CHAIN FIELD R4
         LTR   MBUF,MBUF           TEST CURRENT BUFFER ADDRESS       R4
         BNZ   SKIP560             BRANCH IF BUFFER ALREADY PRESENT  R4
         LR    MBUF,R1             ELSE NEW BUFFER IS CURRENT BUFFER R4
         LA    R15,DCTBUFAD        POINT TO DCT BUF CHAIN ANCHOR     R4
SKIP560  ST    R1,0(,R15)          STORE NEW BUFFER ADDRESS          R4
         BR    ML                  RETURN TO CALLER                  R4
         EJECT                                                       R4
*                                                                    R4
*                   PURGE SESSION'S RPLS ON REMOTE CONSOLE QUEUE     R4
*                                                                    R4
         SPACE 2                                                     R4
         USING RPLDSECT,R15        USE TEMPORARY RPL ADDRESSABILITY  R4
MVFREEIQ LA    R15,$MCONMSG-(TPBLCCAD-BUFDSECT)  SIMULATE BISYNC BUF R4
         SPACE 1                                                     R4
MVFREEC1 LA    R14,TPBLCCAD-BUFDSECT(,R15) POINT TO BISYNC CHAIN FLD R4
         SPACE 1                                                     R4
MVFREEC2 L     R15,0(,R14)         GET ADDR OF NEXT BUFFER ON QUE    R4
         SPACE 1                                                     R4
MVFREEC3 LTR   R0,R15              SAVE COPY, TEST BUFFER ADDRESS    R4
         BZ    MVFREEC4            FREE INTERCEPTED RPLS IF AT Q END R4
         TM    RPLTYPE,BUFTP+BUFRPL  TEST TP BUFFER TYPE            R41
         BNO   MVFREEC1            GET NEXT BUFFER IF BSC           R41
         LR    R1,R14              SAVE PTR TO PREDECESSOR CHAIN FLD R4
         LA    R14,RPLNEXT         POINT TO SNA RPL CHAIN FIELD      R4
         CL    MICE,RPLICE         CHECK ASSOCIATED SESSION          R4
         BNE   MVFREEC2            GET NEXT BUFFER IF NOT THIS ICE   R4
         L     R15,0(,R14)         REMOVE INTERCEPTED BUFFER         R4
         ST    R15,0(,R1)           FROM REMOTE CONSOLE QUEUE        R4
         ST    MBUF,0(,R14)        JOIN TO REST OF                   R4
         LR    MBUF,R0              RPLS BEING FREED                 R4
         B     MVFREEC3            LOOP BACK TO CHECK FOR QUE END    R4
         SPACE 1                                                     R4
MVFREEC4 LTR   R14,MBUF            TEST 1ST INTERCEPTED RPL ADDRESS  R4
         BZ    MVFREEI1            GO FREE INBOUND QUE IF NONE       R4
         L     R15,ICEINTL         ELSE LOAD AND TEST ADDRESS        R4
         LTR   R15,R15              OF LAST RPL ON INBOUND QUE       R4
         BZ    MVFREEI2            GO FREE INTERCEPTEDS IF QUE EMPTY R4
         ST    MBUF,RPLNEXT        ELSE ADD INTERCEPTEDS TO INBD QUE R4
         DROP  R15                 DISCARD TEMP RPL ADDRESSABILITY   R4
         SPACE 2                                                     R4
*                             FREE ICE INBOUND QUEUE                 R4
         SPACE 1                                                     R4
MVFREEI1 L     R14,ICEINHD         GET ADDR OF 1ST BUF ON INBND QUE  R4
         USING RPLDSECT,R14        USE TEMPORARY RPL ADDRESSABILITY  R4
         LTR   MBUF,R14            SAVE AND TEST BUFFER ADDRESS      R4
         BZR   ML                  RETURN IF NOTHING TO FREE         R4
         SLR   R15,R15             CLEAR R15 FOR NUMBER OF BUFFERS   R4
         SPACE 1                                                     R4
MVFREEI2 L     R14,RPLNEXT         GET ADDR OF NEXT BUFFER IF ANY    R4
         BCTR  R15,0               COUNT A BUFFER                    R4
         LTR   R14,R14             TEST IF ANOTHER PRESENT           R4
         BNZ   MVFREEI2            LOOP UNTIL ALL EXHAUSTED          R4
         L     R1,ICEINLM          UPDATE COUNT OF INBOUND           R4
SKIP570  LA    R0,0(R15,R1)         DATA & SYNCH DFC'S ON ICE        R4
         CS    R1,R0,ICEINLM         INBND QUE AND L.M. WORK QUE     R4
         BNE   SKIP570             RETRY UNTIL SUCCESSFUL            R4
         XC    ICEINHD(8),ICEINHD  CLEAR INBOUND QUEUE POINTERS      R4
         B     MVFREPRG            FREE ALL UNHOOKED BUFS & RETURN   R4
         DROP  R14                 DISCARD TEMP RPL ADDRESSABILITY   R4
         EJECT                                                       R4
*                                                                    R4
*                             FREE ICE OUTBOUND QUEUE                R4
*                                                                    R4
         SPACE 1                                                     R4
MVFREEOQ SLR   R0,R0               GET DOUBLE ZERO                   R4
         SLR   R1,R1                FOR COMPARE & SWAP               R4
         LM    R14,R15,ICEOUTHD    UNHOOK                            R4
SKIP580  CDS   R14,R0,ICEOUTHD      OUTBOUND                         R4
         BNE   SKIP580               QUEUE                           R4
         LTR   MBUF,MBUF           TEST CURRENT BUFFER ADDRESS       R4
         BZ    SKIP590             BRANCH IF NONE                    R4
         ST    R14,RPLNEXT         MAKE CURRENT BUFFER APPEAR        R4
         LR    R14,MBUF             TO BE 1ST ON OUTBOUND QUEUE      R4
         LTR   R15,R15             MAKE CURRENT BUFFER APPEAR        R4
         BNZ   SKIP590              TO BE LAST ON OUTBOUND QUE       R4
         LR    R15,R14               IF REAL QUEUE WAS EMPTY         R4
SKIP590  LTR   MBUF,R14            TEST 1ST UNHOOKED BUFFER ADDRESS  R4
         LH    R1,ICEOUTCT         GET OUTBOUND CIRCULATION COUNT    R4
         BNZ   SKIP592             GO FREE OUTBOUND QUEUE      @OZ44972
         LTR   R1,R1               IS ICEOUTCT ZERO...         @OZ44972
         BNZ   MVFREREQ            NO, REQUEUE ICEOUTBF        @OZ44972
         BR    ML                  NO BUFFERS TO FREE, RETURN  @OZ44972
SKIP592  DS    0H                                              @OZ44972
         ST    R0,RPLNEXT-RPLDSECT(,R15)  CLEAR END-Q SPECIAL VALUE  R4
         SPACE 1                                                     R4
         USING RPLDSECT,R14        USE TEMPORARY RPL ADDRESSABILITY  R4
MVFREEOT TM    RPLSRTYP,RPLSRESP   TEST SEND TYPE                    R4
         BO    MVFRERSP            GO CHANGE INBOUND CT IF RESPONSE  R4
         BCTR  R1,0                DECREMENT OUTBOUND CIRCULATION    R4
         CLC   RPLCNTDF(3),MSNADATA  TEST R.U. TYPE                  R4
         BNE   MVFREEOX            DON'T ADJUST COUNT IF SYNCH DFC   R4
         TM    RPLCHN,RPLLAST+RPLONLY  TEST R.U. CHAIN POSITION      R4
         BZ    MVFREEOX            NO ADJUST IF NOT END OF CHAIN     R4
         IC    R0,ICERSPCT         DECREMENT                         R4
         BCTR  R0,0                 OVERLAPPING                      R4
         STC   R0,ICERSPCT           CHAIN COUNT                     R4
         SPACE 1                                                     R4
MVFREEOX ICM   R14,15,RPLNEXT      GET NEXT UNHOOKED BUFFER          R4
         BNZ   MVFREEOT            LOOP BACK IF NOT END OF CHAIN     R4
         STH   R1,ICEOUTCT         REPLACE OUTBD CIRCULATION COUNT   R4
MVFREREQ DS    0H                                              @OZ44972
         L     MDCT,ICEADCT        LOAD LOGON DCT ADDRESS      @OZ44972
         TM    MDCTSTAT-DCTDSECT(MDCT),DCTABORT   ABORTING...  @OZ44972
         BZ    MVFREPRG                      NO,FREE THE RPL   @OZ44972
         LTR   R1,R1               IS OUTPUT COUNTER ZERO...   @OZ44972
         BZ    MVFREPRG            YES, FREE ICEOUTHD QUEUE    @OZ44972
         L     R14,ICEOUTBF        GET CURRENT BUFFER ADDRESS  @OZ64191
         CLI   RPLACTIV,X'80'      RPL ON $RJECHEQ...          @OZ64191
         BE    MVFREPRG            BR IF YES, DON'T REQUEUE    @OZ64191
         MVI   RPLRTNCD,USFDAMGE   SIMULATE CANCELLED BY       @OZ44972
         MVI   RPLFDB2,USFCLOCC      CLOSE RETURN CODE AND     @OZ44972
         L     R1,$RJECHEQ             REQUE CURRENT           @OZ44972
SKIP595  ST    R1,RPLNEXT                BUFFER ON             @OZ44972
         CS    R1,R14,$RJECHEQ             $RJECHEQ            @OZ44972
         BNE   SKIP595             RETRY UNTIL SWAPPED         @OZ44972
         B     MVFREPRG            GO FREE ICEOUTHD QUEUE      @OZ44972
MVFRERSP STH   R1,ICEOUTCT         FREE UP R1 FOR 'CS' USE           R4
         L     R0,ICEINLM          DECREMENT                         R4
SKIP600  LR    R1,R0                INBOUND DATA                     R4
         BCTR  R1,0                  + SYNCH DFC                     R4
         CS    R0,R1,ICEINLM          OUTSTANDING                    R4
         BNE   SKIP600                 REQUEST COUNT                 R4
         LH    R1,ICEOUTCT         RELOAD OUTBOUND COUNT             R4
         B     MVFREEOX             AND RESUME LOOP                  R4
         DROP  R14                 DISCARD TEMP. RPL ADDRESSABILITY  R4
         EJECT                                                       R4
         SPACE 3                                                     R4
*                                                                    R4
*                             FREE 1 BUFFER FROM INBOUND CYCLE       R4
*                                                                    R4
         SPACE 2                                                     R4
MVFRELBF L     R15,RPLNEXT         GET ADDR OF NEXT BUF ON CHAIN     R4
         SLR   R0,R0               GET ZERO                          R4
         ST    R15,DCTBUFAD        POP NEXT BUF ADDR INTO DCT        R4
         ST    R0,RPLNEXT          CLEAR BUFFER CHAIN FIELD          R4
         SPACE 2                                                     R4
MVFRESPD TM    RPLVTFL2,RPLEX      TEST TYPE OF RESPONSE REQUESTED   R4
         BO    MVFREEIN            FREE IF EXCEPTION RESPONSES ONLY  R4
         SPACE 1                                                     R4
MVFRESPN MVI   RPLSRTYP,RPLSRESP+RPLNFSYN  SET STYPE = RESP &  @OZ32746C
                                   RTYPE = NDFSYN,NDFASY,NRESP @OZ32746
         TM    RPLVTFL2,RPLNFME    TEST TYPE OF RESPONSE REQUESTED   R4
         BZ    MVRPLRQN            GO SEND IF DEFINITE RESPONSE 1    R4
         TM    RPLVTFL2,RPLRRN     TEST TYPE OF RESPONSE REQUESTED   R4
         BO    MVRPLRQN            GO SEND IF DEFINITE RESPONSE 2    R4
         SPACE 2                                                     R4
MVFREEIN TM    RPLSRTYP,RPLDFASY   TEST TYPE OF R.U. BEING FREED     R4
         BO    MVFREPRG            SKIP RESETSR CHECK IF NOT 'DFSYN' R4
         SPACE 1                                                     R4
         L     R0,ICEINLM          DECREMENT COUNT OF INBOUND,       R4
SKIP610  LR    R1,R0                OUTSTANDING DATA OR SYNCHR.      R4
         BCTR  R1,0                  DATA FLOW CONTROL RPLS, ON      R4
         CS    R0,R1,ICEINLM          ICE INBND Q OR L.M. WORK Q     R4
         BNE   SKIP610             RETRY IF UNSUCCESSFUL             R4
         TM    ICESTAT,ICERCVSP    TEST SESSION STATUS               R4
         BZ    MVFREPRG            SKIP RESETSR CHECK IF NOT CS MODE R4
         SPACE 1                                                     R4
         SRL   R0,17               HALVE INBOUND LIMIT VALUE        R41
         N     R1,=X'0000FFFF'     TRIM CURRENT COUNT VALUE         R41
         CLR   R1,R0               COMPARE 1/2 COUNT WITH LIMIT     R41
         BH    MVFREPRG            IF CNT GT 1/2 OF LMT, STILL      R41C
                                    CONGESTED - DON'T 'RESETSR' YET  R4
         SPACE 1                                                     R4
         NI    ICESTAT,255-ICERCVSP  RESET 'CONTINUE SPECIFIC' FLAG R41
         MVI   RPLREQ,RPLRSRCD     SET 'RESETSR' CODE IN RPL         R4
         NI    RPLOPT5,255-RPLDLGIN  FORCE OPTCD = CA                R4
         MVI   RPLSRTYP,0          SET RTYPE = (NDFASY,NRESP,DFSYN)  R4
         MVI   RPLSEQTP,VSEQRSCA   PRESET LINE MANAGER SEQUENCE TYPE R4
         MVC   RPLDCT+1(3),ICELDCT+1 MOVE LINE ADDR TO RPL     @OZ51016
         ST    MICE,RPLICE         STORE ICE ADDR IN RPL       @OZ51016
         L     R0,ICECID           GET SESSION COMMUN. ID      @OZ51016
         ST    R0,RPLARG            STORE IT IN RPL            @OZ51016
         B     MVRPLXBR            EXEC RPL AND RETURN         @OZ51016
         EJECT                                                       R4
         SPACE 3                                                     R4
*                                                                    R4
*                             CHECK RECEIVE-ANY LEVEL FROM LINE MGR  R4
*                                                                    R4
         SPACE 2                                                     R4
MVFREELM LA    MBUF,0(,MBUF)       PURIFY AND TEST                   R4
         LTR   MBUF,MBUF            BUFFER ADDRESS                   R4
         BNZ   MVFREPR1            REJOIN COMMON LOGIC IF HAVE BUFF  R4
         L     R15,ICEADCT         GET APPL LOGON DCT ADDRESS        R4
         SPACE 1                                                     R4
         USING DCTDSECT,R15        USE TEMP LOGON DCT ADDRESSABILITY R4
MVFRECHK CLC   MDCTRALM,MDCTRACT   COMPARE ACTIVE LIMIT & ACTIVE CNT R4
         BNHR  ML                  RETURN IF ENOUGH RECEIVE-ANY'S UP R4
         TM    MDCTSTAT,DCTSINON+DCTSOFF  TEST LOGON DCT STATUS      R4
         BNMR  ML                  LET RCV-ANY'S QUIESCE IF INACTIVE R4
         TM    MDCTSTAT,DCTABORT   TEST FOR ABORT              @OZ38130
         BOR   ML                  YES,RETURN                  @OZ38130
         SPACE 1                                                     R4
         L     WA,DCTACB           SAVE ACB ADDRESS ACROSS $GETBUF   R4
         DROP  R15                 DISCARD LOGON DCT ADDRESSABILITY  R4
         SPACE 1                                                     R4
        $GETBUF TYPE=VTAM          TRY TO GET BUFFER FOR RECEIVE-ANY R4
         BZR   ML                  IT'S OK IF CAN'T GET BUF - RETURN R4
         LA    MBUF,0(,R1)         LOAD PURIFIED BUFFER ADDRESS      R4
         ST    WA,RPLDACB          STORE ACB ADDRESS IN RPL          R4
         L     R14,=X'01000000'    LOAD CONSTANT FOR Q COUNT UPDATES R4
         L     R15,ACBLNDCT-ACBDSECT(,WA)  GET APPL LOGON DCT ADDR   R4
         B     MVFRECQE            UPDATE ACTIVE CNT & EXEC RECV-ANY R4
         SPACE 3                                                     R4
*                                                                    R4
*                             FREE 1 BUFFER FROM OUTBOUND CYCLE      R4
*                                                                    R4
         SPACE 1                                                     R4
MVFREOUT L     R15,RPLNEXT         GET ADDR OF NEXT BUF ON CHAIN     R4
         SLR   R0,R0               GET ZERO                          R4
         ST    R15,DCTBUFAD        POP NEXT BUF ADDR INTO DCT        R4
         ST    R0,RPLNEXT          CLEAR BUFFER CHAIN FIELD          R4
         EJECT                                                       R4
         SPACE 3                                                     R4
*                                                                    R4
*                                                                    R4
*                             PURGE 0 OR MORE VTAM RPL BUFFERS       R4
*                                                                    R4
         SPACE 2                                                     R4
MVFREPRG LA    MBUF,0(,MBUF)       PURIFY AND TEST                   R4
MVFREPR0 LTR   MBUF,MBUF            BUFFER ADDRESS                   R4
         BZR   ML                  RETURN IF NO MORE BUFFERS TO FREE R4
         SPACE 1                                                     R4
MVFREPR1 L     R15,RPLDACB         GO THROUGH                        R4
         USING ACBDSECT,R15         ACB TO GET                       R4
         L     R15,ACBLNDCT          APPL LOGON DCT                  R4
         USING DCTDSECT,R15           ADDRESSABILITY                 R4
         TM    MDCTSTAT,DCTSINON+DCTSOFF  TEST LOGON DCT STATUS      R4
         BNM   MVFREPR2            BYPASS BUF RECYCLING IF INACTIVE  R4
         TM    MDCTSTAT,DCTABORT   TEST FOR ABORT IN PROGRESS  @OZ38130
         BO    MVFREPR2            YES,BYPASS BUFFER RECYCLIN  @OZ38130
         L     R14,=X'01000000'    LOAD CONSTANT FOR Q COUNT UPDATES R4
         CLC   MDCTRALM,MDCTRACT   COMPARE ACTIVE LIMIT & ACTIVE CNT R4
         BH    MVFRECQE            BRANCH IF NEED ACTIVE RECEIVES    R4
         CLC   MDCTRQLM,MDCTRQCT   COMPARE AHEAD QUE LIMIT VS. COUNT R4
         BH    MVFRECQ0            BR IF AHEAD QUEUE NEEDS BUFFERS   R4
         SPACE 1                                                     R4
MVFREPR2 LR    R1,MBUF             COPY BUF ADDR TO R1 FOR $FREEBUF  R4
         L     MBUF,RPLNEXT        GET NEXT BUF ON CHAIN BEING FREED R4
        $FREEBUF (R1)              FREE THE RPL BUFFER               R4
         B     MVFREPRG            LOOP UNTIL BUF CHAIN EXHAUSTED    R4
         SPACE 2                                                     R4
MVFRECQE OR    MBUF,R14            PREPARE TO INCREMENT ACTIVE COUNT R4
MVFRECQ0 OI    RPLOPT5,RPLNODE     SET OPTCD = ANY (ALL TERMINALS)   R4
         OI    RPLOPT7,RPLQOPT     SET OPTCD = Q (WAIT IF NO DATA)   R4
         MVI   RPLSRTYP,RPLRRESP+RPLDFASY  RTYPE=(DFSYN,DFASY,RESP)  R4
         LA    R0,RPLBUFST         GET ADDRESS OF DATA AREA          R4
         ST    R0,RPLAREA          STORE IT IN RPL                   R4
         LH    R1,$BFSZSNA         INSURE CORRECT              @OZ28434
         ST    R1,RPLBUFL            SNA BUFFER SIZE           @OZ28434
         MVI   RPLSEQTP,VSEQRECV   SET L.M. SEQUENCE TO NORMAL SEQ   R4
         MVI   RPLREQ,RPLRCVCD     SET RPL REQUEST TYPE TO 'RECEIVE' R4
         STCM  R15,7,RPLDCT+1      SAVE LOGON DCT ADDR IN RPL        R4
         SLR   R0,R0               CLEAR                             R4
         ST    R0,RPLICE            ICE POINTER,                     R4
         ST    R0,RPLBCHN            RCV-ANY QE BACK-CHAIN ADDR,     R4
         ST    R0,RPLRLEN             LENGTH, AND                    R4
         STCM  R0,7,RPLCNTDF           R.U. TYPE INDICATORS          R4
         L     R0,MDCTRABF         GET RECEIVE Q COUNT & 1ST BUF AD  R4
         EJECT                                                       R4
         SPACE 3                                                     R4
MVFRECQ1 LTR   R1,R0               COPY DATA TO WORK REGISTER        R4
         ST    R0,RPLFCHN          JOIN RECEIVE Q TO CURRENT BUFFER  R4
         BZ    SKIP620             BYPASS BACK-CHN UPDATE IF 1ST BUF R4
         ST    MBUF,RPLBCHN-RPLDSECT(,R1)  BACK-CHAIN Q TO CURR BUF  R4
SKIP620  N     R1,=X'FF000000'     ISOLATE RECEIVE QUEUE COUNT       R4
         ALR   R1,MBUF             SET NEW 1ST BUF & INCREMENT COUNT R4
         CS    R0,R1,MDCTRABF      REPLACE QUEUE COUNT & 1ST BUF AD  R4
         BNE   MVFRECQ1            RETRY IF RECEIVE Q UPDATE FAILED  R4
         SPACE 1                                                     R4
         CLR   MBUF,R14            TEST FOR ACTIVE COUNT INCREMENTED R4
         BH    MVFRECVX            BRANCH TO EXEC RECEIVE-ANY IF YES R4
         OR    MBUF,R14            PREPARE TO INCREMENT AHEAD COUNT  R4
         L     R14,RPLNEXT         GET NEXT BUF OF CHAIN BEING FREED R4
         L     R0,MDCTRQBF         GET AHEAD QUE COUNT & 1ST BUF AD  R4
         SPACE 1                                                     R4
MVFRECQ2 LR    R1,R0               COPY DATA TO WORK REGISTER        R4
         ST    R0,RPLNEXT          JOIN AHEAD QUE TO CURRENT BUFFER  R4
         N     R1,=X'FF000000'     ISOLATE AHEAD QUEUE COUNT         R4
         ALR   R1,MBUF             SET NEW 1ST BUF & INCREMENT COUNT R4
         CS    R0,R1,MDCTRQBF      REPLACE QUEUE COUNT & 1ST BUF AD  R4
         BNE   MVFRECQ2            RETRY IF AHEAD QUE UPDATE FAILED  R4
         SPACE 1                                                     R4
         LA    MBUF,0(,R14)        PURIFY NEXT BUFFER ADDRESS        R4
         B     MVFREPR0            LOOP TILL BUF CHAIN EXHAUSTED     R4
         DROP  R15                 DISCARD LOGON DCT ADDRESSABILITY  R4
         SPACE 3                                                     R4
MVFRECVX CLM   R14,7,RPLNEXT+1     TEST IF MORE BUFFERS BEING FREED  R4
         BE    MVRPLXBR            IF NONE, GO EXEC RCV-ANY & RETURN R4
         L     R14,RPLNEXT         GET NEXT BUF ON CHAIN BEING FREED R4
         USING RPLDSECT,R14        USE TEMP RPL ADDRESSABILITY       R4
         ST    ML,RPLFCHN          SAVE 1ST LEVEL RETURN ADDRESS     R4
         DROP  R14                 DISCARD TEMP RPL ADDRESSABILITY   R4
         BAL   ML,MVRPLXBR         EXECUTE THE CURRENT RECEIVE-ANY   R4
         L     ML,RPLFCHN          RELOAD 1ST LEVEL RETURN ADDRESS   R4
         B     MVFREPRG            LOOP UNTIL BUF CHAIN EXHAUSTED    R4
         EJECT                                                       R4
*                                                                    R4
*                             SNA FUNCTION MGMT HEADER BUILD ROUTINE R4
*                                                                    R4
         SPACE 2                                                     R4
MVFMHBDS LA    R1,FMHBEGIN         SET FMH CODE TO 'BEGIN STREAM'    R4
MVFMHOPN NI    MDCTFMT,255-DCTPPRES-DCTPCPCT  BAN COMPRESS, COMPACT  R4
         LA    WA,ICEBIND          POINT TO BIND IMAGE               R4
         USING ISTDBIND,WA         ESTABLISH BIND IMAGE ADDRESSAB'TY R4
         OI    ICESTAT,ICEALLOC    MARK ICE ALLOCATED                R4
         TM    BINCMNP,BINALT      TEST COMMON PROTOCOL              R4
         BO    MVFMHBLD            BRANCH IF ALTERN CODE TO BE USED  R4
         TM    BINPRIP,BINPCMP     TEST PRIMARY NAU PROTOCOL         R4
         BZ    MVFMHBLD            BRANCH IF COMPRESSION NOT ALLOWED R4
         TM    MDCTFEAT,DCTPPRES+DCTPCPCT  TEST RMT DEVICE FEATURES R41
         BZ    MVFMHBLD            BR IF CAN'T SUPPORT COMPRESSION  R41
         BM    MVFMHOPP            BR IF COMPRESSION W/O COMPACTION R41
         TM    BINPFMB1,BINCMPCT   TEST PRIMARY NAU USAGE           R41
         BZ    MVFMHOPP            BRANCH IF COMPACTION NOT ALLOWED R41
         OI    MDCTFMT,DCTPCPCT    TURN ON COMPACT  FLAG            R41
MVFMHOPP OI    MDCTFMT,DCTPPRES    TURN ON COMPRESS FLAG            R41
         DROP  WA                  DISCARD BIND IMAGE ADDRESSABILITY R4
         SPACE 1                                                     R4
MVFMHBLD TM    BINCMNP-BINDSECT+ICEBIND,BINFMHD TEST COMMON PROTOCOL R4
         BZ    MVFMHNOP            SKIP BUILDING IF FM HDRS NOT USED R4
         L     WA,RPLAREA          GET ADDR WHERE FMH IS TO BE BUILT R4
         USING FMHDSECT,WA         ESTABLISH FM HDR ADDRESSABILITY   R4
         MVC   FMHDSECT(MFMHAL),MFMHA  GET PROTOTYPE TYPE 1          R4
         STC   R1,FMHPROPS         SET DATA STREAM CODE              R4
         NI    ICESNDST,255-ICEDSTRM  RESET STREAM SEND STATUS @OZ29180
         SRL   R1,5                GET FMH TYPE CODE           @OZ29180
         LA    R1,MVICEST(R1)      INDEX ICE STATE TABLE       @OZ29180
         OC    ICESNDST,0(R1)      SET FMH PENDING STATE       @OZ29180
         TM    MDCTFMT,DCTPPRES+DCTPCPCT  TEST DATA STREAM STATUS   R41
         BZ    MVFMHBL2            BRANCH IF COMPRESSION NOT USED   R41
         BM    MVFMHBL1            BRANCH IF COMPRESS W/O COMPACT   R41
         OI    FMHPROPS,FMHCPACT   SET FMH PROPERTY = COMPACTION    R41
MVFMHBL1 OI    FMHPROPS,FMHCPRSS   SET FMH PROPERTY = COMPRESSION   R41
MVFMHBL2 IC    R0,MDCTSEL          PICK UP SELECT BYTE FROM RDCT    R41
         STC   R0,FMHSEL           STORE IN FM HEADER                R4
         NI    FMHSEL,255-DCTPOUTB MASK OUT STREAM DIRECTION BIT     R4
         CLI   FMHSEL,FMHEXCH      TEST FOR EXCHANGE MEDIA     @OZ29180
         BL    MVFMHBL3            BRANCH IF NOT EXCHANGE      @OZ29180
         CLI   FMHSEL,FMHEXCH+FMHLDANY  TEST FOR EXCH MEDIA    @OZ29180
         BNH   MVFMHBL4            BRANCH IF EXCHANGE          @OZ29180
MVFMHBL3 CLI   FMHSEL,FMHCARD      TEST FOR CARD MEDIA         @OZ29180
         BL    MVFMHBL6            BRANCH IF NOT CARD          @OZ29180
         CLI   FMHSEL,FMHCARD+FMHLDANY  TEST FOR CARD MEDIA    @OZ29180
         BH    MVFMHBL6            BRANCH IF NOT CARD          @OZ29180
MVFMHBL4 CLI   0(R1),ICEBEGIN      TEST FOR BDS                @OZ29180
         BE    MVFMHBL5            BRANCH IF BDS               @OZ29180
         CLI   0(R1),ICECONT       TEST FOR CDS                @OZ29180
         BNE   MVFMHBL6            BRANCH IF NOT CDS           @OZ29180
MVFMHBL5 MVC   FMHERCL,MDCTRECL    SET RECORD LENGTH           @OZ29180
         TM    MDCTFEAT,DCTPNDST   TEST FOR BASIC/EXCHANGE     @OZ29180
         BO    MVFMHBL6            BR IF NOT BASIC EXCHANGE    @OZ29180
         OI    FMHPROPS,FMHDSTBX   SET DST BIT ON              @OZ29180
MVFMHBL6 LA    R0,MFMHAL           SET OUTPUT LENGTH           @OZ29180
         ST    R0,RPLRLEN           TO FMH LENGTH                    R4
         SPACE 1                                                     R4
MVFMHNOP TM    ICESNDST,ICEOCPND   TEST STREAM SENDING STATUS        R4
         BO    MVRPLSND            SEND FM HDR & WAIT IF END CHAIN   R4
         BR    ML                  ELSE RETURN, USER MAY APPEND DATA R4
         DROP  WA                  DISCARD FM HEADER ADDRESSABILITY  R4
         SPACE 3                                                    R41
MVFMHMVC MVC   0(*-*,R15),0(WA)    ** EXECUTE ONLY **               R41
MVFMHN16 DC    F'-16'              CONSTANT FOR LOOP CONTROL        R41
         EJECT                                                      R41
*                                                                   R41
*                             SNA FM HEADER BUILD - COMPACTION      R41
*                                                                   R41
         SPACE 1                                                    R41
         USING CPTDSECT,R1         COMPACTION TABLE ADDRESSABILITY  R41
MVFMHCPA SLR   R1,R1               LOAD TABLE NUMBER                R41
         ICM   R1,1,DCTACPTN        AS INDEX TO CPT MAP             R41
         BZR   R14                 TAKE ERROR EXIT IMMEDIATELY IF 0 R41
         L     R15,$MLLMPCE                PICK UP QUICK LOCATOR    R41
         IC    R1,MCPTMAP-PCEDSECT(R1,R15)  FROM COMPACT TABLE MAP  R41
         LTR   R1,R1               TAKE ERROR EXIT IF               R41
         BZR   R14                  TABLE DOES NOT EXIST            R41
         BCTR  R1,0                ELSE MODIFY INDEX FOR ORIGIN 0   R41
         MH    R1,MVFMHCPL         MULTIPLY BY COMPACT TABLE LENGTH R41
         AL    R1,$CPTPOOL         ADD COMPACT TABLE POOL ORIGIN    R41
         B     4(,R14)             RETURN WITH TABLE ADDRESS IN R1  R41
         SPACE 1                                                    R41
MVFMHCPL DC    Y(CPTEND-CPTDSECT)  LENGTH OF COMPACTION TABLE       R41
         SPACE 2                                                    R41
MVFMHCPT L     WA,RPLAREA          GET DATA AREA ADDRESS            R41
         USING FMHDSECT,WA         SPORADIC FM HDR ADDRESSABILITY   R41
         MVC   0(MFMHCL,WA),MFMHC  MOVE IN PROTOTYPE TYPE 3 HEADER  R41
         SLR   R0,R0               PICK UP NUMBER                   R41
         IC    R0,CPTNMAST          OF MASTERS (M)                  R41
         STC   R0,FMHBYTE3           & STORE IN FMH                 R41
         LA    R15,MFMHCL(,WA)     ADVANCE DESTINATION POINTER      R41
         LA    WA,CPTDTT+CPTMAST0  LOAD ADDRESS OF 1ST ROW TO MOVE  R41
         LR    R14,R0              COMPUTE ADDRESS OF LAST          R41
         SLL   R14,4                COMPLETE ROW TO BE MOVED        R41
         LA    R1,CPTDTT-1(R14)      LESS 1 FOR LOOP CONTROL        R41
         LCR   R14,R0              SAVE (- M) FOR LATER             R41
         L     R0,MVFMHN16         LOAD NEGATIVE 16 FOR LOOP CTRL   R41
MVFMHCP1 MVC   0(16,R15),0(WA)     MOVE A COMPLETE ROW              R41
         SLR   R15,R0              ADVANCE R.U. PTR BY -(-16) = +16 R41
         BXH   WA,R0,MVFMHCP1      LOOP FOR NEXT FULL ROW IF ANY    R41
         CLR   R14,R0              TEST FOR 16 MASTERS SPECIAL CASE R41
         BNH   MVFMHCP3            BRANCH IF YES, FM HDR COMPLETE   R41
         SLR   WA,R14              ADJUST  R.U. PTR BY  -(-M) = +M  R41C
                                    TO POINT TO FIRST PARTIAL ROW   R41
         LA    R14,15(,R14)        GET MACHINE LENGTH OF PARTIAL    R41C
                                    ROW = (16 - M) - 1 = -M + 15    R41
         L     R1,ICECPT           LOAD TABLE ORIGIN                R41
         LA    R1,CPTDTT            FOR LOOP CONTROL                R41
MVFMHCP2 EX    R14,MVFMHMVC        MOVE A PARTIAL ROW               R41
         LA    R15,1(R14,R15)      ADVANCE R.U. PTR BY PART ROW LTH R41
         BXH   WA,R0,MVFMHCP2      LOOP FOR NEXT PARTIAL ROW        R41
MVFMHCP3 L     WA,RPLAREA          UPDATE                           R41
         SLR   R15,WA               LENGTH                          R41
         ST    R15,RPLRLEN           IN RPL                         R41
         STC   R15,FMHLNGTH        SET FM HEADER LENGTH             R41
         OI    RPLOPT12,RPLFMHDR   SET FORMAT (FM HDR) INDICATOR    R41
         OI    ICESNDST,ICEOCPND   SET END CHN TO FORCE IMM FMH SENDR41
         B     MVRPLSND            CALL BUFFER SEND ROUTINE, RETURN R41
         DROP  R1,WA               DISCARD TEMPORARY ADDRESSABILITY R41
         EJECT                                                       R4
*                                                                    R4
*                             WAIT FOR RESPONSE AND/OR CANCEL CHAIN  R4
*                                                                    R4
         SPACE 1                                                     R4
MVREQRSP TM    ICESNDST,ICECNCEL   TEST STREAM SENDING STATUS        R4
         BZ    MVREQRS1            BRANCH IF CHAIN NOT CANCELLING    R4
         SPACE 1                                                     R4
MVREQCAN LR    WA,ML               ELSE SAVE 1ST LEVEL RETURN ADDR   R4
         BAL   ML,MVFREPRG         PURGE ANY BUFFERS RMT DCT MAY OWN R4
         LR    ML,WA               RESTORE 1ST LEVEL RETURN ADDRESS  R4
         ST    MBUF,DCTBUFAD       CLEAR REMOTE DCT BUFFER POINTER   R4
         SPACE 1                                                     R4
MVREQRS1 TM    ICESNDST,ICEWTRSP   TEST SESSION SEND STATUS          R4
         BZ    MVRSTATO            RESCIND BAD CHAIN IF NOT WAITING  R4
         ST    ML,DCTEWF           SAVE 1ST LEVEL RETURN ADDRESS     R4
         SPACE 1                                                     R4
MVREQWT  DS    0H                                              @OZ19494
        $WAIT WORK,SAVE=NO         WAIT FOR +FME RESPONSE            R4
        $RESTORE                   RESTORE ACCESS METHOD REGISTERS   R4
         TM    ICESNDST,ICEWTRSP   TEST WAITING-FOR-RESPONSE BIT     R4
         BO    MVREQWT             POST WASN'T FOR US IF STILL ON    R4
         L     ML,DCTEWF           RESTORE 1ST LEVEL RETURN ADDRESS  R4
         SPACE 1                                                     R4
*                             OUTBOUND STATE-MACHINE DRIVER ROUTINE  R4
         SPACE 1                                                     R4
MVRSTATO LA    R1,ICESNDST         POINT TO SEND STATUS BYTE         R4
         TM    0(R1),ICECNCEL      TEST TYPE OF CHAIN COMPLETION     R4
         BO    MVRSTATC            IF BAD, GO TO BAD CHAIN S/MACHINE R4
         TM    ICEFLAGS,ICEBBPND   TEST SESSION STATUS               R4
         BZ    SKIP640             BR IF BRACKET NOT JUST BEGUN      R4
         NI    ICESTAT,255-ICERTRPD  RESET 'RDY TO RCV PENDING' FLAG R4
SKIP640  BAL   R14,MVRSTATE        GO DRIVE GOOD CHAIN STATE MACHINE R4
         EJECT                                                 @OZ29180
*                     STATE TABLE FOR GOOD CHAIN STATE MACHINE @OZ29180
         SPACE 1                                               @OZ29180
MVFMHGUD DC    AL1(ICEINSTR)       SUCCESSFUL RESUME = IN-STREAM     R4
         DC    AL1(ICENOFMH)       SUCCESSFUL END DS = OUT-OF-STREAM R4
         DC    AL1(ICEINSTR)       SUCCESSFUL BEGIN  = IN-STREAM     R4
         DC    AL1(ICENOFMH)       SUCCESSFUL ONLY C = OUT-OF-STREAM R4
         DC    AL1(ICENOFMH)       SUCCESSFUL SUSPND = OUT-OF-STREAM R4
         DC    AL1(ICENOFMH)       SUCCESSFUL ABORT  = OUT-OF-STREAM R4
         DC    AL1(ICEINSTR)       SUCCESSFUL CONT   = IN STRM @OZ29180
         DC    AL1(0)              INVALID STATE               @OZ29180
         DC    AL1(0)              INVALID STATE               @OZ29180
         DC    AL1(0)              INVALID STATE               @OZ29180
         DC    AL1(0)              INVALID STATE               @OZ29180
         DC    AL1(0)              INVALID STATE               @OZ29180
         DC    AL1(0)              INVALID STATE               @OZ29180
         DC    AL1(0)              INVALID STATE               @OZ29180
         DC    AL1(ICENOFMH)       NO FMH PEND+OUT=OUT-OF-STRM @OZ29180
         DC    AL1(ICEINSTR)       NO FMH PEND & IN  = IN-STREAM     R4
         SPACE 1                                               @OZ29180
MVFMHSTL EQU   *-MVFMHGUD          STATE TABLE LENGTH          @OZ29180
         SPACE 1                                                     R4
         DC    AL1(MVRSTIST-MVRST) 'RESUME' - GO IN STREAM           R4
         DC    AL1(MVRSTEND-MVRST) 'END (NORMAL)' - DEALLOCATE       R4
         DC    AL1(MVRSTIST-MVRST) 'BEGIN' - GO IN STREAM            R4
         DC    AL1(MVRSTEND-MVRST) 'ONLY CHAIN' - DEALLOCATE         R4
         DC    AL1(MVRSTSDS-MVRST) 'SUSPEND' - SUSPEND & DEALLOCATE  R4
         DC    AL1(MVRSTADS-MVRST) 'END (ABORTING)' - DEALLOCATE     R4
         DC    AL1(MVRSTIST-MVRST) 'CONTINUE' - GO IN STREAM   @OZ29180
         DC    AL1(MVRSTER-MVRST)  INVALID STATE               @OZ29180
         DC    AL1(MVRSTER-MVRST)  INVALID STATE               @OZ29180
         DC    AL1(MVRSTER-MVRST)  INVALID STATE               @OZ29180
         DC    AL1(MVRSTER-MVRST)  INVALID STATE               @OZ29180
         DC    AL1(MVRSTER-MVRST)  INVALID STATE               @OZ29180
         DC    AL1(MVRSTER-MVRST)  INVALID STATE               @OZ29180
         DC    AL1(MVRSTER-MVRST)  INVALID STATE               @OZ29180
         DC    AL1(MVRSTNOP-MVRST) NO FM HDR - NO ALLOC CHANGE @OZ29180
         DC    AL1(MVRSTIST-MVRST) IN STREAM - REMAIN IN STREAM      R4
         EJECT                                                       R4
*                             INBOUND STATE-MACHINE DRIVER ROUTINE   R4
         SPACE 1                                                     R4
MVRSTATI LR    WA,ML               SAVE 1ST LEVEL RETURN ADDRESS     R4
         BALR  ML,R15              SEND +RSP AND FREE BUFFER         R4
         LR    ML,WA               RESTORE 1ST LEVEL RETURN ADDRESS  R4
         LA    R1,ICERCVST         POINT TO RECEIVE STATUS BYTE      R4
         LA    R14,MVFMHGUD        POINT TO GOOD CHAIN TRANS. TABLE  R4
         TM    0(R1),ICECNCEL      TEST TYPE OF CHAIN COMPLETION     R4
         BZ    MVRSTATE            BRANCH IF GOOD COMPLETION         R4
         TM    ICERCVST,ICEINCHN   TEST SESSION RECEIVE STATUS       R4
         BO    MVREQBUF            IF STILL IN PURGING CHAIN STATE,    C
                                    GET NEXT BUFF FROM INBOUND QUEUE   C
                                     (Q SHD BE EMPTY IF CALLER=L.M.) R4
MVRSTATC LA    R14,MVFMHBAD        POINT TO BAD CHAIN TRANS. TABLE   R4
         SPACE 1                                                     R4
*                             COMMON STATE-MACHINE DRIVER ROUTINE    R4
         SPACE 1                                                     R4
MVRSTATE SLR   R15,R15             TRANSLATE                         R4
         IC    R15,0(,R1)           OLD FMH                          R4
         SRL   R15,4                 PENDING                   @OZ29180
         NI    0(R1),255-ICEDSTRM     STATE TO                 @OZ29180
         LA    R14,0(R15,R14)          CORRECT                       R4
         OC    0(1,R1),0(R14)           NEW STATE                    R4
         IC    R15,MVFMHSTL(,R14)  FMH PEND STATE TO INDEX TBL @OZ29180
         B     MVRST(R15)          BRANCH TO CORRECT ROUTINE         R4
         EJECT                                                 @OZ29180
*                             RESCIND BAD CHAIN, RECOVER ICE STATE   R4
         SPACE 1                                                     R4
MVFMHBAD DC    AL1(ICENOFMH)       FAILING RESUME = OUT-OF-STREAM    R4
         DC    AL1(ICENOFMH)       FAILING EDS = OUT OF STREAM @OZ64921
         DC    AL1(ICENOFMH)       FAILING BEGIN  = OUT-OF-STREAM    R4
         DC    AL1(ICENOFMH)       FAILING ONLY C = OUT-OF-STREAM    R4
         DC    AL1(ICEINSTR)       FAILING SUSPND = IN-STREAM        R4
         DC    AL1(ICENOFMH)       FAILING ABORT = OUT OF STRM @OZ64921
         DC    AL1(ICEINSTR)       FAILING CONT    = IN-STREAM @OZ29180
         DC    AL1(0)              INVALID STATE               @OZ29180
         DC    AL1(0)              INVALID STATE               @OZ29180
         DC    AL1(0)              INVALID STATE               @OZ29180
         DC    AL1(0)              INVALID STATE               @OZ29180
         DC    AL1(0)              INVALID STATE               @OZ29180
         DC    AL1(0)              INVALID STATE               @OZ29180
         DC    AL1(0)              INVALID STATE               @OZ29180
         DC    AL1(ICENOFMH)       FAIL DATA+OUT = OUT-OF-STRM @OZ29180
         DC    AL1(ICEINSTR)       FAILING DATA & IN = IN-STREAM     R4
         SPACE 1                                                     R4
         DC    AL1(MVRSTSDS-MVRST) BAD 'RESUME' - RE-SUSPEND         R4
         DC    AL1(MVRSTEND-MVRST) BAD 'END (NORM)' OUT OF STRM@OZ64921
         DC    AL1(MVRSTPAB-MVRST) BAD 'BEGIN' - ABORT PROCESSOR     R4
         DC    AL1(MVRSTPAB-MVRST) BAD 'ONLY CHN' - ABORT PROCESSOR  R4
         DC    AL1(MVRSTIST-MVRST) BAD 'SUSPEND' - STAY IN STREAM    R4
         DC    AL1(MVRSTEND-MVRST) BAD 'END(ABORT)' OUT OF STRM@OZ64921
         DC    AL1(MVRSTIST-MVRST) BAD 'CONTINUE' -STAY INSTRM @OZ29180
         DC    AL1(MVRSTER-MVRST)  INVALID STATE               @OZ29180
         DC    AL1(MVRSTER-MVRST)  INVALID STATE               @OZ29180
         DC    AL1(MVRSTER-MVRST)  INVALID STATE               @OZ29180
         DC    AL1(MVRSTER-MVRST)  INVALID STATE               @OZ29180
         DC    AL1(MVRSTER-MVRST)  INVALID STATE               @OZ29180
         DC    AL1(MVRSTER-MVRST)  INVALID STATE               @OZ29180
         DC    AL1(MVRSTER-MVRST)  INVALID STATE               @OZ29180
         DC    AL1(MVRSTNOP-MVRST) OUT OF STREAM - NO CHANGE   @OZ29180
         DC    AL1(MVRSTIST-MVRST) IN STREAM - STAY IN STREAM        R4
         EJECT                                                      R41
MVRST    EQU   *                   ORIGIN FOR BRANCH TABLE OFFSETS   R4
         SPACE 1                                                     R4
MVRSTER  SLR   MBUF,MBUF           CLEAR CURRENT BUF ADDR      @OZ45801
         B     MSNABND             INVALID STATE DETECTED      @OZ45801
         SPACE 1                                               @OZ29180
MVRSTPAB OI    MDCTSTAT,DCTABORT   HALT PROCESSOR RTAM FUNCTIONS     R4
         LR    WA,R1               SAVE REGISTER ACROSS PURGE  @OZ67010
         L     MBUF,DCTBUFAD       PURGE ANY BUFFER                 R41
         BAL   ML,MVFREPRG          THE REMOTE DCT MAY OWN          R41
         LR    R1,WA               RESTORE REGISTER 1          @OZ67010
         LA    ML,MVTAMXAB         ABORT CURRENT $EXTP CALL         R41
         OI    DCTFLAGS,DCTRSTRT   TELL PRCSR TO RESTART JOB   @OZ39875
         SPACE 1                                                    R41
MVRSTADS OI    DCTFLAGS,DCTDELET   TELL PRCSR TO DELETE  JOB   @OZ39875
         B     MVRSTEND            BRANCH TO DEALLOCATE ROUTINE      R4
         SPACE 1                                                    R41
MVRSTIST TM    ICEFLAGS,ICEEBPND+ICECHDIR  TEST SESSION STATUS       R4
         BZ    MVRSTNOP            BYPASS IMPLIED SUSPND IF NO EB/CD R4
         XI    0(R1),ICEINSTR-ICENOFMH  SET NO FMH PEND, OUT OF STRM R4
         SPACE 1                                                     R4
MVRSTIMP LA    R0,ICESIMPL+ICESUSPD  LOAD IMPLIED SUSPEND CODE       R4
         B     MVRSTSD1            JOIN COMMON SUSPEND CODE         R41
         SPACE 1                                                     R4
MVRSTSDS LA    R0,ICESUSPD         LOAD EXPLICIT SUSPEND CODE        R4
         SPACE 1                                                    R41
MVRSTSD1 LA    R14,ICESDCT-(MDCTSDCT-DCTDSECT)  PTR TO SUSP Q HEAD  R41
         USING DCTDSECT,R14        GET TEMPORARY DCT ADDRESSABILITY R41
         TM    ICEFLGS2,ICEOUTBK   TEST SESSION STATUS FLAGS   @OZ29180
         BZ    MVRSTSD4            BR IF NOT OUTBD-OUTBD INTERRUPT  R41
         TM    ICEFLAGS,ICEOUTBD+ICECHDIR  TEST SESSION STATUS      R41
         BNO   MVRSTSD2            BR IF INBND INTERUPT NOT PENDNG  R41
         SPACE 1                                                    R41
         L     R15,ICESDCT         PICK UP OUTBD INTERRUPTING DCT   R41
         USING DCTDSECT,R15        ESTABLISH TEMP. ADDRESSABILITY   R41
         XC    MDCTICE,MDCTICE     CLEAR PRE-ALLOCATION POINTER     R41
         MVC   ICESDCT,MDCTSDCT     AND REMOVE FROM SUSPEND QUEUE   R41
         DROP  R15                 RELEASE TEMP. ADDRESSABILITY     R41
         B     MVRSTSD3            REJOIN COMMON PROCESSING         R41
         SPACE 1                                                    R41
MVRSTSD2 L     R14,ICESDCT         USE INTERRUPTING DCT Q ANCHOR    R41
         NI    DCTSTAT,255-DCTHOLD SHOW RDCT NO LONGER HELD         R41
         OI    MDCTSTAT,DCTPOST    SHOW RDCT WILL BE POSTED BELOW   R41
         SPACE 1                                                    R41
MVRSTSD3 NI    ICEFLGS2,255-ICEOUTBK  CLEAR OUTBD-OUTBD FLAG   @OZ29180
         SPACE 1                                                    R41
MVRSTSD4 L     R15,MDCTSDCT        GET HEAD OF SUSPENDED DCT QUEUE  R41
         ST    MDCT,MDCTSDCT       MAKE RDCT NEW SUSPEND QUEUE HEAD R41
         STC   R0,MDCTSDCT         SAVE SUSPD OR IMPLIED SUSPD FLAG R41
         DROP  R14                 DISCARD TEMP DCT ADDRESSABILITY  R41
         OI    MDCTSTAT,DCTPSUSP   INDICATE REMOTE DCT IS SUSPENDED  R4
         ST    R15,MDCTSDCT        CHAIN REST OF QUE TO CURRENT DCT R41
         B     MVRSTEN1            JOIN COMMON DE-ALLOCATION LOGIC  R41
         SPACE 1                                                     R4
MVRSTEND XC    MDCTICE,MDCTICE     CLEAR RDCT POINTER TO ICE         R4
MVRSTEN1 XC    ICERDCT,ICERDCT     CLEAR  ICE POINTER TO REMOTE DCT R41
         NI    ICESTAT,255-ICEALLOC  MARK ICE UNALLOCATED            R4
         TM    0(R1),ICENOFMH      TEST NEW STREAM STATUS            R4
         BNO   MVDALLOC            IF FMH PENDING, BDS OR ODS CAUSED   C
                                    IMPLIED SUSPEND.  BRANCH TO COM-   C
                                     PLETE BDS OR ODS ALLOCATION     R4
         SPACE 2                                               @OZ29180
MVRSTNOP TM    ICEFLAGS,ICECHDIR   TEST SESSION STATUS               R4
         BZ    SKIP670             BR IF CHG DIRECTION NOT PENDING   R4
         XI    ICEFLAGS,ICEINBND+ICEOUTBD+ICEREVFL  CHANGE DIRECTION R4
SKIP670  TM    ICEFLAGS,ICEBBPND+ICEEBPND  TEST SESSION STATUS       R4
         BNM   SKIP680             BR IF NOT BB ALONE OR EB ALONE    R4
         XI    ICEFLAGS,ICEINBRK   CHANGE BRACKET STATE              R4
SKIP680  NI    ICEFLAGS,255-ICEBBPND-ICEEBPND-ICECHDIR  CLEAR PENDS. R4
         TM    0(R1),ICECNCEL      TEST TYPE OF CHAIN COMPLETION     R4
         BZ    MVRSTRM0            BRANCH IF NOT CANCELLING          R4
         NI    0(R1),255-ICECNCEL  RESET CHAIN CANCEL INDICATOR      R4
         LTR   MBASE1,MBASE1       TEST TYPE OF $EXTP CALL           R4
         BM    MVRSTRMC            BR IF MAY NOT FLUSH (CLOSE OR LM) R4
         TM    MDCTSEL,DCTPOUTB    TEST DIRECTION BIT                R4
         BZ    MVRSTRMC            BRANCH IF NOT OUTBOUND (NOT PUT)  R4
         LA    ML,MVTAMXAB         ELSE ABORT $EXTP CALL             R4
         TM    ICEXRFBK,ICEXRCPY   TEST EXCEPTION RESPONSE FEEDBACK R41
         BZ    MVRSTRMA            BR IF NOT COPIES FUNCTION REJECT R41
         LA    ML,MVTAMXEX         ELSE SET $EXTP EXCEPTION RETURN  R41
         NI    ICEXRFBK,255-ICEXRCPY   CLEAR COPIES FUNCTION REJECT R41
         SPACE 1                                                    R41
MVRSTRMA TM    ICEXRFBK,ICEXRDNA   TEST EXCEPTION RECOVERY ACTION   R41
         BZ    MVRSTRMC            BR IF DEVICE STILL ACCEPTING DATAR41
         OI    MDCTSTAT,DCTFLUSH   ELSE SET DATA STREAM SOFT ABORT   R4
         NI    ICEXRFBK,255-ICEXRDNA TO BAR FURTHER SENDS TO DEVICE R41
         SPACE 1                                                     R4
MVRSTRMC TM    ICEFLAGS,ICEINBRK   TEST SESSION STATUS               R4
         BO    MVRSTRM1            GO FIND A STREAM IF IN BRACKET    R4
         TM    ICESTAT,ICEHOLD     TEST SESSION STATUS               R4
         BNZ   MVRSTRM0            IF YEILDING TO CONTENTION,       R41C
                                                ABORT PROCESSOR     R41
         LA    R0,VXIDGBUF+VSEQGIBB   ELSE, SETUP TO SEND           R41
         L     WA,$MLLMPCE             NULL RU (BB+EB) UNDER        R41
         B     MICEREQ2                 LINE MANAGER                R41
MVRSTRM0 TM    ICEFLAGS,ICEINBRK   TEST SESSION STATUS               R4
         BZ    MICEAEB             BRANCH IF NOW OUT OF BRACKET      R4
MVRSTRM1 TM    0(R1),ICEINSTR      TEST NEW STREAM STATUS            R4
         BOR   ML                  IF IN STREAM RETURN TO CALLER     R4
*                                  ELSE GO TRY TO START NEXT STREAM  R4
         EJECT                                                       R4
*                                                                    R4
*                             REQUEST NEXT DATA STREAM               R4
*                                                                    R4
         SPACE 1                                                     R4
MVREQSTR TM    ICESTAT,ICEALLOC    TEST ICE STATUS                   R4
         BO    MVREQRET            RETURN IF ICE ALREADY ALLOCATED   R4
         TM    ICEFLAGS,ICEOUTBD+ICEINBRK  TEST SESSION STATUS       R4
         BNZ   MVREQSPQ            IF IN BRACKET, TRY TO POP SUSP Q. R4
         L     MDCT,ICELDCT        GET ADDRESS OF LINE DCT           R4
         SPACE 1                                                     R4
MVREQJOT OI    MDCTATTN,MDCTJOB1+MDCTJOB2 SHOW IDLE SESS. AND WORK  R41
         BAL   WA,MICETIME         REQUEST SESSION DELAY INTERVAL    R4
         L     R1,DCTPCE           GET LINE MANAGER PCE ADDRESS      R4
        $POST  (R1),WORK           TAP LINE MANAGER ON SHOULDER      R4
         B     MVREQBUF            GO ACCEPT INBOUND R.U. IF ANY     R4
         SPACE 2                                                     R4
MVREQSPQ LA    MDCT,ICESDCT-(MDCTSDCT-DCTDSECT)  FAKE ZERO SUSP RDCT R4
         BM    MVREQSPI            CHECK SUSP INBND RDCT IF INBOUND  R4
         SPACE 1                                                     R4
*                             RESUME SUSPENDED OUTBOUND STREAM       R4
         SPACE 1                                                     R4
MVREQSPO LR    R15,MDCT            SAVE CURRENT REMOTE DCT ADDR      R4
         L     MDCT,MDCTSDCT       GET NEXT SUSPENDED REMOTE DCT     R4
         LTR   MDCT,MDCT           TEST ADDRESS                      R4
         BZ    MICEGIEB            IF NO RDCTS, SEND IMMED END BRKT  R4
         TM    MDCTSEL,DCTPOUTB    TEST DIRECTION BIT                R4
         BZ    MVREQSPO            KEEP SEARCHING IF NOT OUTBOUND    R4
         LTR   MDCT,MDCT           TEST IMPLIED SUSPEND/RESUME BIT   R4
         BNM   MVDRSUMO            GO ALLOCATE & POST IF NOT IMPLIED R4
         OI    ICESNDST,ICEINSTR   ELSE GO IN STREAM AUTOMATICALLY   R4
         B     MVDRSUMO            GO ALLOCATE & POST                R4
         SPACE 2                                                     R4
*                             RESUME SUSPENDED INBOUND STREAM        R4
         SPACE 1                                                     R4
MVREQSPI LR    R15,MDCT            SAVE CURRENT RDCT ADDRESS         R4
         L     MDCT,MDCTSDCT       GET ADDR OF NEXT SUSPENDED RDCT   R4
         LTR   MDCT,MDCT           TEST                              R4
         BZ    MVREQBUF            IF NO SUSPENDED RDCTS, ACCEPT ANY   C
                                    INBOUND RU (IF NONE DON'T WAIT)  R4
         TM    MDCTSEL,DCTPOUTB    TEST DIRECTION BIT                R4
         BO    MVREQSPI            KEEP SEARCHING IF NOT INBOUND     R4
         LTR   MDCT,MDCT           TEST IMPLIED SUSPEND/RESUME BIT   R4
         BM    MVDRSUMI            IF IMPLIED RESUME, GO REALLOCATE.   C
                                    IF NO IMPLIED RESUME, ACCEPT ANY   C
                                     INBOUND RU (IF NONE DON'T WAIT) R4
         EJECT                                                       R4
***********************************************************************
*                                                                     *
*           MVREQBUF  -  REQUEST DATA BUFFER FOR APPLICATION INPUT    *
*                                                                     *
*           MVDECODE  -  DECODE SNA REQUEST & FUNCTION MGMT HEADERS   *
*                                                                     *
***********************************************************************
         SPACE 1                                                     R4
MVREQBUF L     MBUF,ICEINHD        GET 1ST ADDR ON INBOUND QUEUE     R4
         LTR   MBUF,MBUF           TEST ADDRESS                      R4
         BNZ   MVREQUEU            BRANCH IF QUEUE NOT EMPTY         R4
         TM    ICESTAT,ICEALLOC    TEST SESSION STATUS               R4
         BZ    MVREQRET            RETURN IF CALLER IS CLOSE OR L.M.   C
                                    OR WAIT IF CALLER IS SUSPENDING  R4
         ST    ML,DCTEWF           SAVE 1ST LEVEL RETURN ADDRESS     R4
        $WAIT  WORK,SAVE=NO        HAVE RTAM/GET WAIT FOR INPUT      R4
        $RESTORE                   RESTORE ACCESS METHOD REGISTERS   R4
         L     ML,DCTEWF           RELOAD 1ST LEVEL RETURN ADDRESS   R4
         B     MVREQBUF            BRANCH TO TRY FOR BUFFER          R4
         SPACE 2                                                     R4
MVREQUEU L     R0,RPLNEXT          GET NEXT ADDR ON INBOUND QUEUE    R4
         ST    R0,ICEINHD          MAKE NEXT ADDR NEW QUEUE HEAD     R4
         LTR   R0,R0               TEST ADDRESS                      R4
         BNZ   MVDECODE            BRANCH IF NOT ZERO                R4
         ST    R0,ICEINTL          CLEAR TAIL ADDRESS IF QUEUE EMPTY R4
         SPACE 1                                                     R4
MVDECODE LA    R14,ICEBIND         POINT TO BIND IMAGE IN ICE        R4
         USING ISTDBIND,R14        ESTABLISH BIND IMAGE ADDRESSAB'TY R4
         L     R0,ICESTAT          COPY ICE STATE TO REGISTER        R4
         SLR   R15,R15             CLEAR REG FOR TRANSITION NUMBER   R4
         ST    R0,SHWICEWA         STORE ICE STATE COPY IN WORK AREA R4
         ST    R15,RPLNEXT         CLEAR RPL CHAINING FIELD          R4
         XC    SHWDCTWA,SHWDCTWA   CLEAR DCT FMT MASK & 'GET' FLAGS  R4
         CLC   RPLCNTDF(3),MSNADATA  TEST R.U. TYPE                  R4
         BNE   MVDFCTRL            BRANCH IF NOT DATA                R4
         TM    SHWFLAGS,ICEOUTBD   TEST SESSION STATUS               R4
         BO    MVDX2004            FAIL IF SESSION MARKED OUTBOUND   R4C
                                    (SENSE X'2004', DIRECTION ERROR) R4
         CLI   RPLRTNCD,USFXORDC   TEST RPL COMPLETION CODE          R4
         BE    MVDXRQST            ENTER PURGING CHAIN STATE         R4C
                                    IF AN EXCEPTION REQUEST          R4
         EJECT                                                       R4
*                             DRIVE CHAINING STATE-MACHINE           R4
         SPACE 1                                                     R4
         TM    SHWRCVST,ICEINCHN   TEST SESSION RECEIVE STATUS       R4
         BO    SKIP690             BRANCH IF IN CHAIN                R4
         LA    R15,4               ELSE SET TRANSITION NUMBER TO 4   R4
SKIP690  TM    RPLCHN,RPLFIRST+RPLONLY TEST R.U. CHAIN POSITION      R4
         BZ    SKIP700             BRANCH IF NOT FIRST OR ONLY       R4
         LA    R15,2(,R15)         ADD 2 TO TRANSITION NUMBER        R4
SKIP700  TM    SHWRCVST,ICECNCEL   TEST STREAM RECEIVE STATUS        R4
         BZ    SKIP710             BR IF NOT IN PURGING CHAIN STATE  R4
         LA    R15,8               RESET TRANSITION NUMBER TO 8      R4
SKIP710  TM    RPLCHN,RPLLAST+RPLONLY   TEST R.U. CHAIN POSITION     R4
         BZ    SKIP720             BRANCH IF NOT LAST OR ONLY        R4
         LA    R15,1(,R15)         ELSE ADD 1 TO TRANSITION NUMBER   R4
SKIP720  IC    R15,*+8(R15)        USE TRANS. NUMBER AS TABLE INDEX  R4
         B     MVDCH(R15)          PERFORM TRANSITION                R4
         SPACE 1                                                     R4
         DC    AL1(MVDCHNOP-MVDCH) MIC INC  = INC  (NO CHANGE)       R4
         DC    AL1(MVDCHOUT-MVDCH) LIC INC  = OUTC (SWITCH STATE)    R4
         DC    AL1(MVDCHERR-MVDCH) FIC INC  = ERROR, SENSE X'2002'   R4
         DC    AL1(MVDCHERR-MVDCH) OIC INC  = ERROR, SENSE X'2002'   R4
         DC    AL1(MVDCHERR-MVDCH) MIC OUTC = ERROR, SENSE X'2002'   R4
         DC    AL1(MVDCHERR-MVDCH) LIC OUTC = ERROR, SENSE X'2002'   R4
         DC    AL1(MVDCHINC-MVDCH) FIC OUTC = INC  (SWITCH STATE)    R4
         DC    AL1(MVDCHNOP-MVDCH) OIC OUTC = OUTC (NO CHANGE)       R4
         DC    AL1(MVDCHPRG-MVDCH) MIC/FIC PURGEC = PURGEC (DISCARD) R4
         DC    AL1(MVDCHLVP-MVDCH) LIC/OIC PURGEC = OUTC   (DISCARD) R4
         SPACE 1                                                     R4
MVDCH    EQU   *                   ORIGIN FOR BRANCH TABLE OFFSETS   R4
         SPACE 1                                                     R4
MVDCHLVP NI    ICERCVST,255-ICEINCHN  SHOW PURGED CHAIN HAS ENDED    R4
         SPACE 1                                                     R4
MVDCHPRG LA    R15,MVFREEIN        POINT TO INBND BUF PURGE ROUTINE R41
         B     MVRSTATI            GO UPDATE RECEIVING STATE MACHINE R4
         SPACE 1                                                     R4
MVDCHINC TM    BINSECP,BINSCHN     TEST SECONDARY NAU PROTOCOLS      R4
         BO    MVDCHOUT            ACCEPT IF BIND SUPPORTS CHAINING. R4
         B     MVDX400B             FAIL IF NO MULTIPLE-R.U. CHAINS  R4C
                                     (SENSE X'400B', CHNS NOT SUPPD) R4
MVDCHERR B     MVDX2002            GO ABORT ICE AND ANY STREAMS      R4
         SPACE 1                                                     R4
MVDCHOUT XI    SHWRCVST,ICEINCHN   INVERT CHAIN STATE                R4
         SPACE 1                                                     R4
MVDCHNOP EQU   *                   NO CHANGE                         R4
         EJECT                                                       R4
*                             DRIVE BRACKET STATE-MACHINE            R4
         SPACE 1                                                     R4
         SLR   R15,R15             CLEAR REG FOR TRANSITION NUMBER   R4
         TM    SHWFLAGS,ICEINBRK   TEST SESSION STATUS               R4
         BO    SKIP730             BRANCH IF IN BRACKET              R4
         LA    R15,4               ADD 4 TO TRANSITION NUMBER        R4
SKIP730  TM    RPLRH3,RPLEB        TEST REQUEST HEADER BYTE 3        R4
         BZ    SKIP740             BRANCH IF NOT END BRACKET         R4
         LA    R15,2(,R15)         ADD 2 TO TRANSITION NUMBER        R4
         OI    SHWFLAGS,ICEEBPND   SET 'END BRACKET PENDING' FLAG    R4
SKIP740  TM    RPLRH3,RPLBB        TEST REQUEST HEADER BYTE 3        R4
         BZ    *+8                 BRANCH IF NOT BEGIN BRACKET      R41
         LA    R15,1(,R15)         ADD 1 TO TRANSITION NUMBER        R4
         IC    R15,*+8(R15)        USE TRANS. NUMBER AS TABLE INDEX  R4
         B     MVDBK(R15)          PERFORM TRANSITION                R4
         SPACE 1                                                     R4
         DC    AL1(MVDBKNOP-MVDBK) -BB -EB  INB = INB (NO CHANGE)    R4
         DC    AL1(MVDBKERR-MVDBK)  BB -EB  INB = ERROR, SNS X'2003' R4
         DC    AL1(MVDBKEBP-MVDBK) -BB  EB  INB = INB AND EB PENDING R4
         DC    AL1(MVDBKERR-MVDBK)  BB  EB  INB = ERROR, SNS X'2003' R4
         DC    AL1(MVDBKNUS-MVDBK) -BB -EB OUTB = OK IF BKTS NOT USD R4
         DC    AL1(MVDBKINB-MVDBK)  BB -EB OUTB = INB                R4
         DC    AL1(MVDBKERR-MVDBK) -BB  EB OUTB = ERROR, SNS X'2003' R4
         DC    AL1(MVDBKBBP-MVDBK)  BB  EB OUTB = BB/EB PENDING     R41
         SPACE 1                                                     R4
MVDBK    EQU   *                   ORIGIN FOR BRANCH TABLE OFFSETS   R4
         SPACE 1                                                     R4
MVDBKNUS TM    RPLCHN,RPLFIRST+RPLONLY  TEST R.U. CHAIN POSITION     R4
         BZ    MVDBKNOP            BB NOT NEEDED IF NOT 1ST IN CHAIN R4
         CLC   RPLCNTDF(3),MSNADATA  TEST R.U. TYPE                  R4
         BNE   MVDBKNOP            BB NOT REQUIRED IF DATA FLOW CTRL R4
         TM    BINCMNP,BINBRAK     TEST COMMON NAU PROTOCOLS         R4
         BZ    MVDBKNOP            ALLOW CASE IF BRACKETS NOT USED     C
                                    ELSE (X'2003') BRACKET STATE ERR R4
MVDBKERR B     MVDX2003            GO ABORT ICE AND ANY STREAMS      R4
         SPACE 1                                                     R4
MVDBKBBP OI    SHWFLAGS,ICEBBPND   SET 'BEGIN BRACKET PENDING'      R41
         SPACE 1                                                    R41
MVDBKEBP TM    BINSECP,BINSSEB     TEST SECONDARY NAU PROTOCOLS      R4
         BO    MVDBKIN1            BR IF SECONDARY MAY SEND EB      R41
         B     MVDX4004            FAIL IF SECNDRY CANT SEND EB     R41*
                                   (SENSE X'4004', EB NOT ALLOWED)   R4
MVDBKINB OI    SHWFLAGS,ICEINBRK   BB/-EB, GO IN BRCKT IMMED.       R41
         OI    ICEFLAGS,ICEINBRK   INDICATE IN BRACKET         @OZ34188
         SPACE 1                                                    R41
MVDBKIN1 TM    BINCMNP,BINBRAK     TEST COMMON NAU PROTOCOLS        R41
         BZ    MVDX400C            FAIL IF BRACKETS NOT TO BE USED   R4C
                                    (SENSE X'400C' BRKTS NOT SUPPD)  R4
         TM    RPLCHN,RPLFIRST+RPLONLY  TEST R.U. CHAIN POSITION     R4
         BZ    MVDX400X            FAIL IF BB OR EB NOT 1ST IN CHAIN R4C
                                    (SENSE X'4003', BB NOT ALLOWED,    C
                                     OR X'4004', EB NOT ALLOWED)     R4
         OI    SHWFLAGS,ICEINBND   MARK SESSION FOR INBOUND FLOW     R4
         NI    SHWSTAT,255-ICEHOLD RELSE OUTBD ALLOC CONTENTION LOCK R4
         SPACE 1                                                     R4
MVDBKNOP EQU   *                   NO CHANGE                         R4
         EJECT                                                       R4
*                             TEST FOR CHANGE DIRECTION              R4
         SPACE 1                                                     R4
         TM    RPLRH3,RPLCMD       TEST REQUEST HEADER BYTE 3        R4
         BZ    SKIP750             BRANCH IF CHANGE DIRECTION NOT ON R4
         TM    RPLCHN,RPLLAST+RPLONLY  TEST R.U. CHAIN POSITION      R4
         BZ    MVDX4009            FAIL IF NOT AT END OF CHAIN       R4C
                                    (SENSE X'4009', CD NOT ALLOWED)  R4
         OI    SHWFLAGS,ICECHDIR   SET 'CHGE DIRECTION PENDING' FLAG R4
SKIP750  CLI   SHWCNTRL,0          TEST INDEX COMPUTED FROM R.U.TYPE R4
         BNE   MVDFCFIN            BRANCH IF DFC THAT ALLOWS EB/CD   R4
         SPACE 3                                                     R4
*                             TEST FOR ALTERNATE CODE                R4
         SPACE 1                                                     R4
         TM    RPLRH3,RPLCSI       TEST REQUEST HEADER BYTE 3        R4
         BZ    MVDECFMH            BRANCH IF NOT ALTERNATE CODE      R4
         TM    BINCMNP,BINALT      TEST COMMON NAU PROTOCOLS         R4
         BZ    MVDX4010            BRANCH IF ALT CODE NOT ALLOWED    R4C
                                    (SENSE X'4010', ALT CD NOT SUPD) R4
         OI    SHWTFMTM,DCTPALTC   SET 'ALT CODE' IN DCT FMT MASK    R4
         EJECT                                                       R4
*                                                                    R4
*                             IDENTIFY FM HEADER TYPE AND LEVEL      R4
*                                                                    R4
         SPACE 1                                                     R4
MVDECFMH L     R1,RPLRLEN          LEAVE R.U. LENGTH IN R1 AND R.U.  R4
         L     WA,RPLAREA           ADDR IN WA, ON RETURN TO CALLER  R4
         TM    RPLOPT12,RPLFMHDR   TEST FORMAT INDICATOR             R4
         BZ    MVDNOFMH            BRANCH IF FM HEADER NOT PRESENT   R4
         LTR   R1,R1               TEST REMAINING R.U. LENGTH        R4
         BNP   MVDNOFMH            BRANCH IF R.U. ACTUALLY NULL      R4
         TM    RPLCHN,RPLFIRST+RPLONLY  TEST R.U. CHAIN POSITION     R4
         BZ    MVDX400F            FAIL IF FM HDR NOT ON 1ST OF CHN  R4
         TM    BINCMNP,BINFMHD     TEST COMMON NAU PROTOCOLS         R4
         BZ    MVDX400F            FAIL IF FM HDRS NOT TO BE USED    R4C
                                    (SENSE X'400F', FMH NOT ALLOWED) R4
         SPACE 2                                                     R4
         USING FMHDSECT,WA         ESTABLISH FM HDR ADDRESSABILITY   R4
         SPACE 1                                                     R4
MVDECLIP SLR   R0,R0               CLIP FM HDR                       R4
         IC    R0,FMHLNGTH          OFF FRONT OF                     R4
         SLR   R1,R0                 R.U. BY MAKING                  R4
         ST    R1,RPLRLEN             LENGTH SHORTER                 R4
         ALR   R0,WA                   AND INCREASING                R4
         ST    R0,RPLAREA               ADDRESS POINTER              R4
         TM    FMHBYTE1,FMHCNCAT   TEST FM HDR CONCATENATED BIT      R4
         BO    SKIP760             BRANCH IF MORE FM HEADERS FOLLOW  R4
         NI    RPLOPT12,255-RPLFMHDR  RESET FORMAT INDICATOR IF NOT  R4
SKIP760  NI    FMHBYTE1,255-FMHCNCAT  FORCE CONCATENATED FMH BIT OFF R4
         CLI   FMHBYTE1,FMHTYPE1      TEST FMH TYPE                  R4
         BNE   MVDX1008            FAIL IF CANNOT RECOGNIZE FMH TYPE   C
                                    (SENSE X'1008', INVALID FM HDR)  R4
         SPACE 1                                                     R4
*                                                                    R4
*                             FMH TYPE 1 - DATA STREAM HEADER        R4
*                                                                    R4
         SPACE 1                                                     R4
MVDTYPE1 TM    SHWRCVST,ICENOFMH   TEST SESSION STATUS               R4
         BNO   MVDX1008            FAIL IF TYPE 1 FMH ALREADY PENDG  R4C
                                    (SENSE X'1008', INVALID FM HDR)  R4
         CLI   FMHLNGTH,MFMHAL     CHECK FM HEADER LENGTH            R4
         BNE   MVDX1008            FAIL IF LTH BAD OR UNSUPPORTED      C
                                    (SENSE X'1008', INVALID FM HDR)  R4
         CLI   FMHERCL,FF          IF RECORD LENGTH OF 255     @OZ60533
         BE    MVDX10UU             FAIL WITH SENSE X'1008'    @OZ60533
         SPACE 1                                               @OZ60533
         SLR   R15,R15             CLEAR WORK REGISTER         @OZ29180
         IC    R15,FMHPROPS        COPY PROPERTIES BYTE TO REGISTER  R4
         NI    SHWRCVST,255-ICEDSTRM  MASK DATA STREAM         @OZ29180
         SRL   R15,5               GET DATA STREAM ACTION CODE @OZ29180
         LA    R1,MVICEST(R15)     POINT TO FMH STATE FLAGS    @OZ29180
         OC    SHWRCVST,0(R1)      SET FMH PENDING STATE       @OZ29180
*                                  THIS CARD DELETED BY APAR   @OZ29180
         IC    R15,MVDDS(R15)      USE AS INDEX INTO OFFSET TABLE   R41
         TM    FMHSEL,FMHMEDIA     TEST FMH DESTINATION             R41
         BNZ   MVDDS(R15)          ENTER ROUTINE IF NOT CONSLE @OZ18406
         TM    RPLCHN,RPLONLY      ELSE, TEST FOR ONLY IN CHAIN     R41
         BO    MVDDS(R15)          BR IF YES, HANDLE CONSOLE        R41
         B     MVDX0811            FAIL IF NOT OC (X'0811')         R41
         SPACE 3                                               @OZ29180
MVICEST  DC    AL1(ICERESUM)       RESUME DATA STREAM          @OZ29180
         DC    AL1(ICENMEND)       END DATA STREAM             @OZ29180
         DC    AL1(ICEBEGIN)       BEGIN DATA STREAM           @OZ29180
         DC    AL1(ICEODS)         BEGIN/END DATA STREAM       @OZ29180
         DC    AL1(ICESPEND)       SUSPEND DATA STREAM         @OZ29180
         DC    AL1(ICEABEND)       ABORT DATA STREAM           @OZ29180
         DC    AL1(ICECONT)        CONTINUE DATA STREAM        @OZ29180
         DC    AL1(0)              RESERVED                    @OZ29180
         SPACE 1                                               @OZ29180
MVDDS    DC    AL1(MVDDSRES-MVDDS) 'RESUME DATA STREAM'        @OZ29180
         DC    AL1(MVDDSEND-MVDDS) 'END DATA STREAM' (NORMAL)        R4
         DC    AL1(MVDDSBGN-MVDDS) 'BEGIN DATA STREAM'               R4
         DC    AL1(MVDDSONL-MVDDS) 'ONLY CHAIN IN DATA STREAM'       R4
         DC    AL1(MVDDSEND-MVDDS) 'SUSPEND DATA STREAM'             R4
         DC    AL1(MVDDSEND-MVDDS) 'END DATA STREAM' (ABORTING)      R4
         DC    AL1(MVDDSCNT-MVDDS) 'CONTINUE DATA STREAM'      @OZ29180
         DC    AL1(MVDDSERR-MVDDS) ERROR, SENSE X'1008' INVALID FMH  R4
         EJECT                                                 @OZ29180
MVDDSERR B     MVDX1008            FAIL, SNS X'1008' INVALID FM HDR  R4
         SPACE 1                                                     R4
MVDDSEND TM    SHWSTAT,ICEALLOC    TEST SESSION STATUS               R4
         BO    MVDECFMH            IF ALLOCATED LOOP FOR NEXT FM HDR R4
         B     MVDX1008            FAIL IF EDS/ADS AND NOT ALLOCATED R4C
                                    (SENSE X'1008', INVALID FM HDR)  R4
         SPACE 1                                               @OZ29180
MVDDSCNT TM    SHWSTAT,ICEALLOC    TEST SESSION STATUS         @OZ29180
         BZ    MVDX1008            FAIL IF NOT ALLOCATED       @OZ29180
         TM    FMHSEL,FMHMEDIA     TEST SELECTED MEDIUM        @OZ29180
         BZ    MVDX1008            FAIL IF CONSOLE             @OZ29180
         TM    DCTDEVTP,DCTRJR     TEST FOR REMOTE READER      @OZ29180
         BZ    MVDX1008            FAIL IF NOT REMOTE READER   @OZ29180
         TM    RPLCHN,RPLONLY      TEST FOR ONLY IN CHAIN      @OZ29180
         BZ    MVDX0811            FAIL IF NOT OC              @OZ29180
         B     SKIP770             TEST FOR COMPRESS/COMPACT   @OZ29180
         SPACE 1                                               @OZ29180
MVDDSRES TM    SHWSTAT,ICEALLOC    TEST SESSION STATUS               R4
         BO    MVDX1008            FAIL IF RDS AND ALLOCATED         R4C
                                    (SENSE X'1008', INVALID FM HDR)  R4
         SPACE 1                                                     R4
MVDDSBGN TM    FMHSEL,FMHMEDIA     TEST SELECTED MEDIUM              R4
         BZ    MVDX0811            FAIL IF CONSOLE & NOT 'END D.S.'  R4C
                                    (SENSE X'0811', BREAK)           R4
         SPACE 1                                                     R4
MVDDSONL TM    SHWSTAT,ICEALLOC    TEST SESSION STATUS               R4
         BZ    SKIP770             BR IF NOT ALLOCD, ELSE IMPL SUSPD R4
         TM    MDCTSEL,FMHMEDIA    TEST ACTIVE DATA STREAM MEDIUM    R4
         BZ    MVDX1008            FAIL IF TRYING TO SUSPD CONSOLE   R4C
                                    (SENSE X'1008', INVALID FM HDR)  R4
SKIP770  NI    SHWTFMTM,255-DCTPPRES-DCTPCPCT  ASSSUME NO      @OZ29180C
                                   COMPRESSION NO COMPACTION   @OZ29180
         TM    FMHPROPS,FMHCPRSS   TEST DATA STREAM PROPERTIES @OZ29180
         BZ    MVDDS01             BRANCH IF NO COMPRESSION    @OZ29180
         TM    BINSECP,BINSCMP     TEST SEC NAU PROTOCOLS      @OZ29180
         BZ    MVDX0826            FAIL IF COMPRESSION NOT     @OZ29180C
                                   SUPPORTED                   @OZ29180
         OI    SHWTFMTM,DCTPPRES   SET COMPRESSION ON          @OZ29180
         SPACE 1                                               @OZ29180
MVDDS01  TM    FMHPROPS,FMHCPACT   TEST DATA STREAM PROPERTIES @OZ29180
         BZ    MVDDS02             BRANCH IF NO COMPACTION     @OZ29180
         TM    BINSFMB1,BINCMPCT   TEST SECONDARY PROTOCOLS    @OZ29180
         BZ    MVDX0826            FAIL IF COMPACTION NOT      @OZ29180C
                                   SUPPORTED                   @OZ29180
         OI    SHWTFMTM,DCTPCPCT   SET COMPACTION ON           @OZ29180
         DROP  R14                 DROP BIND ADDRESSABILITY    @OZ64921
MVDDS02  CLI   0(R1),ICECONT       TEST FOR CDS FMH            @OZ29180
         BE    MVDDSLRC            BRANCH IF CDS               @OZ29180
         TM    FMHSEL,FMHMEDIA     TEST SELECTED MEDIUM        @OZ29180
         BZ    MVDECFMH            LOOP IF CONSOLE. LET RDCT ADR = 0 R4
         NI    FMHBYTE3,255-FMHDMAND  FORCE DMAND SLCT BIT OFF @OZ29180
         LR    R14,MDCT            SAVE ORIGINAL DCT ADDRESS   @OZ64921
         TM    FMHPROPS,FMHBEGIN   TEST DATA STREAM ACTION           R4
         BNZ   MVDCTFND            SEEK AVAIL. RDCT IF NOT 'RESUME'  R4
         EJECT                                                       R4
*                                                                    R4
*                             FIND REMOTE DCT IN SUSPENDED CHAIN     R4
*                                                                    R4
         SPACE 1                                                     R4
         LA    MDCT,ICESDCT-(MDCTSDCT-DCTDSECT)  FAKE ZERO SUSP RDCT R4
         SPACE 1                                                     R4
MVDCTSSP LR    R15,MDCT            SAVE PREVIOUS RDCT ADDRESS        R4
         L     MDCT,MDCTSDCT       GET NEXT SUSPENDED RDCT ADDRESS   R4
         LTR   MDCT,MDCT           TEST                              R4
         BZ    MVDX0825            BR IF NO MORE RDCT'S, CAN'T ALLOC   C
                                    (SENSE X'0825', CMPON NOT AVAIL) R4
         CLC   FMHSEL,MDCTSEL      COMPARE SELECT BYTES              R4
         BNE   MVDCTSSP            LOOP FOR NEXT RDCT IF NOT A MATCH R4
         ST    R15,SHWRDCT         STORE PREV RDCT ADDR FOR REALLOC. R4
         B     MVDECFMH            LOOP BACK FOR NEXT FM HEADER      R4
         SPACE 3                                                     R4
*                                                                    R4
*                             FIND AN ELIGIBLE REMOTE DCT            R4
*                                                                    R4
         SPACE 1                                                     R4
MVDCTFND CLI   FMHSEL,FMHEXCH+FMHLDANY  TEST INCOMING MEDIUM   @OZ29180
         BH    SKIP790             BRANCH IF NOT 'EXCH'        @OZ29180
         MVZ   FMHSEL,=AL1(FMHCARD)  ELSE CHNGE EXCH TO CARD   @OZ29180
SKIP790  IC    R15,FMHSEL          GET DESIRED MEDIUM & LOGICAL DEV. R4
         SLR   R0,R0               ASSUME ZERO MASK, SPECIFIC DEVICE R4
         TM    FMHSEL,FMHLDANY     TEST FM HEADER LOGICAL DEVICE     R4
         BNO   SKIP800             BRANCH IF NOT GENERAL REQUEST     R4
         LA    R0,FMHLDANY         LOAD MASK FOR ANY AVAILABLE DEV.  R4
SKIP800  SLR   R1,R1               CLEAR REG FOR RDCT SELECT BYTE    R4
         L     MDCT,ICELDCT        GET ADDRESS OF LINE DCT           R4
         SPACE 1                                                     R4
MVDCTGET L     MDCT,MDCTDCT        GET RDCT ADDRESS                  R4
         LTR   MDCT,MDCT           TEST RDCT ADDRESS                 R4
         BZ    MVDX0825            BR IF NO MORE RDCT'S, CAN'T ALLOC   C
                                    (SENSE X'0825', CMPON NOT AVAIL) R4
         IC    R1,MDCTSEL          GET REMOTE DCT SELECT BYTE        R4
         OR    R1,R0               OVERLAY GEN. REQUEST CODE IF NEC. R4
         CLR   R1,R15              COMPARE SELECT BYTES              R4
         BNE   MVDCTGET            LOOP FOR NEXT RDCT IF NOT A MATCH R4
         TM    DCTSTAT,DCTINUSE+DCTDRAIN  TEST RDCT STATUS           R4
         BNZ   MVDCTGET            LOOP FOR NEXT RDCT IF UNAVAILABLE R4
         ST    MDCT,SHWRDCT        STORE RDCT ADDRESS FOR ALLOCATION R4
MVDDSLRC MVC   MDCTRECL,DCTLRECL   SET LRECL TO JES2 DEFAULT   @OZ29180
         CLI   FMHERCL,0           LRECL SPECIFIED IN BDS      @OZ29180
         BE    MVDECFMH            NO, LOOP FOR MORE FM HDRS   @OZ29180
         MVC   MDCTRECL,FMHERCL    SET LRECL FROM BDS FMH      @OZ29180
         B     MVDECFMH            LOOP BACK FOR MORE FM HEADERS     R4
         EJECT                                                       R4
*                                                                    R4
*                        SET ERROR SENSE CODES FOR NEGATIVE RESPONSE R4
*                                                                    R4
         SPACE 1                                                     R4
*                             C.P.M.(R.H.) ERRORS - MAJOR CODE X'40' R4
         SPACE 1                                                     R4
MVDX4003 DS    0H                  CLASSIFY                          R4
MVDX4004 EQU   *                    'SHOULD                          R4
MVDX4009 EQU   *                     NEVER                           R4
MVDX400B EQU   *                      OCCUR'                         R4
MVDX400C EQU   *                       C.P.M.                        R4
MVDX400F EQU   *                        ERRORS                       R4
MVDX4010 EQU   *                         TOGETHER                    R4
MVDX400X BAL   R15,MVDXNRSP        SEND NEGATIVE RESPONSE & RETURN   R4
         DC    AL1(RPLCPMO,0,0,0) DUMMY C.P.M. ERROR CODE            R4
         SPACE 2                                                     R4
*                             STATE ERRORS - MAJOR CODE X'20'        R4
         SPACE 1                                                     R4
MVDX2002 BAL   R15,MVDXNRSP        SEND NEGATIVE RESPONSE & RTN     R41
         DC    AL1(RPLSTATO,X'02',0,0) 'CHAIN STATE ERROR' CODE     R41
         SPACE 1                                                    R41
MVDX2003 BAL   R15,MVDXNRSP        SEND NEGATIVE RESPONSE & RTN     R41
         DC    AL1(RPLSTATO,X'03',0,0) 'BRACKET STATE ERR' CODE     R41
         SPACE 1                                                    R41
MVDX2004 BAL   R15,MVDXNRSP        SEND NEGATIVE RESPONSE & RTN     R41
         DC    AL1(RPLSTATO,X'04',0,0) 'DIRECTION ERROR' CODE       R41
         SPACE 2                                                     R4
*                             FUNC INTRPTR ERRORS - MAJOR CODE X'10' R4
         SPACE 1                                                     R4
MVDX1003 BAL   R15,MVDXNRSP        SEND NEGATIVE RESPONSE & RETURN   R4
         DC    AL1(RPLFIO,X'03',0,0) 'FUNCTION NOT SUPPORTED' CODE   R4
         SPACE 1                                                     R4
MVDX1008 BAL   R15,MVDXNRSP        SEND NEGATIVE RESPONSE & RETURN   R4
         DC    AL1(RPLFIO,X'08',0,0) 'INVALID FM HEADER' CODE        R4
         SPACE 1                                               @OZ60533
MVDX10UU BAL   R15,MVDXNRSP        SEND NEG RESP AND RETURN    @OZ60533
         DC    AL1(RPLFIO,X'08',X'20',X'0C') INVALID ERCL      @OZ60533
         SPACE 2                                                     R4
*                             REQUEST REJECT - MAJOR CODE X'08'      R4
         SPACE 1                                                     R4
MVDX0811 BAL   R15,MVDXNRSP        SEND NEGATIVE RESPONSE & RETURN   R4
         DC    AL1(RPLRRO,X'11',0,0) 'BREAK, I DON'T LIKE IT' CODE   R4
         SPACE 1                                                     R4
MVDX0819 BAL   R15,MVDXNRSP        SEND NEGATIVE RESPONSE & RETURN   R4
         DC    AL1(RPLRRO,X'19',0,0) 'RTR NOT REQUIRED' CODE         R4
         SPACE 1                                                     R4
MVDX0825 LR    MDCT,R14            RESTORE ORIGINAL DCT ADDR   @OZ64921
         BAL   R15,MVDXNRSP        SEND NEG RSP AND RETURN     @OZ64921
         DC    AL1(RPLRRO,X'25',0,0) 'COMPONENT NOT AVAILABLE' CODE  R4
         SPACE 1                                                     R4
MVDX0826 BAL   R15,MVDXNRSP        SEND NEGATIVE RESPONSE & RETURN   R4
         DC    AL1(RPLRRO,X'26',0,0) 'FUNCTION NOT SUPPORTED' CODE   R4
         EJECT                                                       R4
*                             SEND -RSP AND RESTORE PRE-CHAIN STATE  R4
         SPACE 1                                                     R4
MVDXNRSP MVC   RPLFDBK2,0(R15)     SET INBOUND SENSE FOR MSG LOGGING R4
         SPACE 1                                                     R4
MVDXRQST MVC   RPLOSENS,RPLFDBK2   COPY INBOUND TO OUTBOUND SENSE    R4
         OI    RPLVTFL2,RPLEX      TURN ON EXCEPTION RESPONSE BIT   R41
         LA    R15,MVFRESPN        POINT TO EXCEPTION RESP ROUTINE  R41
         CLC   RPLCNTDF(3),MSNADATA  TEST FAILING REQUEST TYPE       R4
         BNER  R15                 BR IF SESSION OR DATA FLOW CNTRL R41
         SPACE 1                                               @OZ64921
         USING ISTDBIND,R14        GET BIND ADDRESSABILITY     @OZ64921
         SPACE 1                                               @OZ64921
         LA    R14,ICEBIND         POINT TO BIND IMAGE IN ICE  @OZ64921
         NI    ICEFLAGS,255-ICEBBPND-ICEEBPND-ICECHDIR  RESET PENDS. R4
         TM    BINCMNP2,BINRCVR    TEST COMMON PROTOCAL        @OZ34188
         BO    MVDXPRGE            IF SENDER TAKES CARE OF RECOVERY R41C
                                    DON'T CHGE DIRECTION, JUST PURGE R4
         OI    ICEFLAGS,ICECHDIR   ELSE GO TO OUTBOUND AT NEXT EOC   R4
         SPACE 1                                                    R41
MVDXPRGE OI    ICERCVST,ICEINCHN+ICECNCEL  ENTER PURGING CHAIN STATER41
         TM    RPLCHN,RPLLAST+RPLONLY  TEST R.U. CHAIN POSITION     R41
         BZ    MVRSTATI            IF NOT EOC, STAY IN PURGE STATE  R41
         NI    ICERCVST,255-ICEINCHN  SHOW PURGED CHAIN HAS ENDED   R41
         B     MVRSTATI            GO UPDATE RECEIVING STATE MACHINER41
         SPACE 1                                                     R4
         DROP  R14                 DISCARD BIND IMAGE ADDRESSABILITY R4
         EJECT                                                       R4
*                                                                    R4
*                        HANDLE SESSION & DATA FLOW CONTROL REQUESTS R4
*                                                                    R4
         SPACE 1                                                     R4
MVDFCTRL LA    WA,MVDFCLST+MVDFCL  POINT AT LIST OF DFC & SC CODES   R4
         LA    R1,MVDFCEND         POINT AT LAST ENTRY IN LIST       R4
         LA    R0,MVDFCL           LOAD LENGTH OF ONE ENTRY          R4
SKIP820  CLC   1(3,WA),RPLCNTDF    SEARCH FOR R.U. TYPE              R4
         BE    SKIP810             BRANCH IF FOUND                   R4
         BXLE  WA,R0,SKIP820       LOOP BACK UNTIL LIST EXHAUSTED    R4
SKIP810  LA    R0,MVDFCLST         CALCULATE INDEX                   R4
         SLR   WA,R0                IN DFC LIST OF                   R4
         SRL   WA,2                  MATCHING ENTRY                  R4
         STC   WA,SHWCNTRL         SAVE INDEX IN WORK AREA           R4
         IC    R15,*+8(WA)         GET OFFSET TO HANDLING ROUTINE    R4
         B     MVDFC(R15)          BRANCH TO CORRECT ROUTINE         R4
         SPACE 1                                                     R4
         DC    AL1(MVDFCR01-MVDFC)      DATA   NOT APPLICABLE        R4
         DC    AL1(MVDFCNCL-MVDFC)    CANCEL   RESCIND PENDING STATE R4
*        DC    AL1(MVDFC***-MVDFC)        QC   NOT SUPPORTED         R4
*        DC    AL1(MVDFC***-MVDFC)       QEC   NOT SUPPORTED         R4
*        DC    AL1(MVDFC***-MVDFC)     CHASE   NOT SUPPORTED         R4
*        DC    AL1(MVDFC***-MVDFC)      RELQ   NOT SUPPORTED         R4
         DC    AL1(MVDFCERR-MVDFC)       BID   NOT SUPPORTED INBOUND R4
         DC    AL1(MVDFCRTR-MVDFC)       RTR   SEND 'RTR NOT NEEDED' R4
         DC    AL1(MVDFCLUS-MVDFC)       LUS   ONLY INTV REQD SUPPTD R4
         DC    AL1(MVDFCSIG-MVDFC)    SIGNAL   BREAK OUTBOUND STREAM R4
*        DC    AL1(MVDFC***-MVDFC)       SDT   NOT SUPPORTED         R4
*        DC    AL1(MVDFC***-MVDFC)     CLEAR   NOT SUPPORTED         R4
*        DC    AL1(MVDFC***-MVDFC)      STSN   NOT SUPPORTED         R4
*        DC    AL1(MVDFC***-MVDFC)     SHUTD   NOT SUPPORTED         R4
*        DC    AL1(MVDFC***-MVDFC)     SHUTC   NOT SUPPORTED         R4
*        DC    AL1(MVDFC***-MVDFC)       RQR   NOT SUPPORTED         R4
         DC    AL1(MVDFCRSH-MVDFC)     RSHUT   DRAIN SESSION         R4
         DC    AL1(MVDFCERR-MVDFC) ANY OTHER TYPE - NOT SUPPORTED    R4
         EJECT                                                       R4
MVDFCLST DS    0F                  DFC CODES IN RPLCNTDF/RPLCNTDC    R4
MVDFCL   EQU   4                   TABLE ENTRY LENGTH                R4
         DC    AL1(0)                   DATA   -                     R4
MSNADATA DC    AL1(RPLDATA,0,0)    (RPLCNTDF)  DATA R.U.             R4
         DC    AL1(0)                 CANCEL   -                     R4
MSNACNCL DC    AL1(RPLCNCEL,0,0)   (RPLCNTDF) 'CANCEL'               R4
*        DC    AL1(0)                     QC   -                     R4
*SNAQC   DC    AL1(RPLQC,0,0)      (RPLCNTDF) 'QUIESCE COMPLETE'     R4
*        DC    AL1(0)                    QEC   -                     R4
*SNAQEC  DC    AL1(RPLQEC,0,0)     (RPLCNTDF) 'QUIESCE AT END OF CH' R4
*        DC    AL1(0)                  CHASE   -                     R4
*SNACHSE DC    AL1(RPLCHASE,0,0)   (RPLCNTDF) 'CHASE'                R4
*        DC    AL1(0)                   RELQ   -                     R4
*SNARELQ DC    AL1(RPLRELQ,0,0)    (RPLCNTDF) 'RELEASE QUIESCE'      R4
         DC    AL1(0)                    BID   -                     R4
MSNABID  DC    AL1(0,RPLBID,0)     (RPLCNTDC) 'BID'                  R4
         DC    AL1(0)                    RTR   -                     R4
MSNARTR  DC    AL1(0,RPLRTR,0)     (RPLCNTDC) 'READY TO RECEIVE'     R4
         DC    AL1(0)                    LUS   -                     R4
MSNALUS  DC    AL1(0,RPLLUS,0)     (RPLCNTDC) 'LOGICAL UNIT STATUS'  R4
         DC    AL1(0)                 SIGNAL   -                     R4
MSNASGNL DC    AL1(0,RPLSIGNL,0)   (RPLCNTDC) 'SIGNAL'               R4
*        DC    AL1(0)                    SDT   -                     R4
*SNASDT  DC    AL1(0,0,RPLSDT)     (RPLCNTSC) 'START DATA TRAFFIC'   R4
*        DC    AL1(0)                  CLEAR   -                     R4
*SNACLR  DC    AL1(0,0,RPLCLEAR)   (RPLCNTSC) 'CLEAR'                R4
*        DC    AL1(0)                   STSN   -                     R4
*SNASTSN DC    AL1(0,0,RPLSTSN)    (RPLCNTSC) 'SET & TEST SEQUENCE'  R4
*        DC    AL1(0)                  SHUTD   -                     R4
*SNASHTD DC    AL1(0,0,RPLSHUTD)   (RPLCNTSC) 'SHUTDOWN'             R4
*        DC    AL1(0)                  SHUTC   -                     R4
*SNASHTC DC    AL1(0,0,RPLSHUTC)   (RPLCNTSC) 'SHUTDOWN COMPLETE'    R4
*        DC    AL1(0)                    RQR   -                     R4
*SNARQR  DC    AL1(0,0,RPLRQR)     (RPLCNTSC) 'REQUEST RECOVERY'     R4
         DC    AL1(0)                  RSHUT   -                     R4
MSNARSHT DC    AL1(0,0,RPLRSHUT)   (RPLCNTSC) 'REQUEST SHUTDOWN'     R4
MVDFCEND EQU   *-MVDFCL            LAST VALID ENTRY IN TABLE         R4
         EJECT                                                       R4
*                                                                    R4
*                             FINISH HANDLING DFC'S THAT ALLOW EB/CD R4
*                                                                    R4
         SPACE 1                                                     R4
MVDFCFIN L     R0,SHWSTAT          UPDATE                            R4
         ST    R0,ICESTAT           ICE STATE                        R4
         LR    WA,ML               SAVE 1ST LEVEL RETURN ADDR.      R41
         ICM   WA,8,SHWCNTRL        WITH D.F.C. TYPE INDEX          R41
         BAL   ML,MVFRESPD         SEND +RSP AND FREE BUFFER        R41
         LR    ML,WA               RESTORE 1ST LVL RETURN ADDR.     R41
         SRL   WA,24               ISOLATE D.F.C. TYPE INDEX        R41
         IC    WA,*+8(WA)          BRANCH ON D.F.C.                  R4
         B     MVDFC(WA)            TYPE USING TABLE                 R4
         SPACE 2                                                     R4
         DC    AL1(MVDFCR01-MVDFC) DATA - LOGIC ERROR                R4
         DC    AL1(MVDFCNC2-MVDFC) 'CANCEL' - SET RDCT DELETE BITS   R4
*        DC    AL1(MVDFC***-MVDFC) 'QUIESCE COMPLETE' NOT SUPPORTED  R4
*        DC    AL1(MVDFC***-MVDFC) 'QUIESCE AT END CH' NOT SUPPORTED R4
*        DC    AL1(MVDFC***-MVDFC) 'CHASE' NOT SUPPORTED             R4
*        DC    AL1(MVDFC***-MVDFC) 'RELEASE QUIESCE' NOT SUPPORTED   R4
         DC    AL1(MVDFCR01-MVDFC) 'BID' NOT SUPPORTED INBOUND       R4
         DC    AL1(MVDFCR01-MVDFC) 'RDY TO RCV' - LOGIC ERROR        R4
         DC    AL1(MVDFCLUT-MVDFC) 'LU STAT' RESET OUTB LOCK   @OZ27491
         DC    AL1(MVDFCR01-MVDFC) 'SIGNAL' - LOGIC ERROR            R4
*        DC    AL1(MVDFC***-MVDFC) 'STRT DATA TRAFFIC' NOT SUPPORTED R4
*        DC    AL1(MVDFC***-MVDFC) 'CLEAR' NOT SUPPORTED             R4
*        DC    AL1(MVDFC***-MVDFC) 'SET/TEST SEQ NBRS' NOT SUPPORTED R4
*        DC    AL1(MVDFC***-MVDFC) 'SHUTDOWN' NOT SUPPORTED          R4
*        DC    AL1(MVDFC***-MVDFC) 'SHUTDOWN COMPLETE' NOT SUPPORTED R4
*        DC    AL1(MVDFC***-MVDFC) 'REQUEST RECOVERY'  NOT SUPPORTED R4
         DC    AL1(MVDFCR01-MVDFC) 'REQUEST SHUTDOWN' - LOGIC ERROR  R4
         DC    AL1(MVDFCR01-MVDFC) ANY OTHER TYPE - LOGIC ERROR      R4
         SPACE 3                                                     R4
MVDFC    DS    0H                  ORIGIN FOR BRANCH TABLE OFFSETS   R4
         SPACE 1                                                     R4
MVDFCR01 SLR   MBUF,MBUF           CLEAR CURRENT BUFFER ADDR   @OZ45801
         B     MSNABND             ERROR IN RPL HANDLING       @OZ45801
         SPACE 1                                                     R4
MVDFCERR B     MVDX1003            FAIL, SNSE X'1003' FUNC NOT SUPPD R4
         SPACE 1                                                     R4
MVDFCRSH LR    WA,ML               SAVE 1ST LEVEL RETURN ADDRESS     R4
         BAL   ML,MVFREPRG         DISPOSE OF BUFFER                 R4
         LR    ML,WA               RESTORE 1ST LEVEL RETURN ADDRESS  R4
         B     MICETRAP            TREAT AS SESSION DRAIN REQUEST    R4
         EJECT                                                       R4
MVDFCSIG CLC   RPLSIGDA,=X'00010000'  TEST SIGNAL CODE               R4
         BNE   MVFREPRG            THROW AWAY SIGNAL IF NOT CD REQST R4
         TM    ICEFLAGS,ICEOUTBD+ICEREVFL  TEST SESSION STATUS      R41
         BZ    MVFREPRG            THROW AWAY SIGNAL IF NOT OUTBOUND R4
         TM    ICEFLAGS,ICEOUTBD   TEST SESSION STATUS              R41
         BZ    MVDFCSI2            SET FLAG IF STREAM IS SUSPENDED  R41
         TM    ICESTAT,ICEALLOC    TEST SESSION STATUS               R4
         BZ    MICEGICD            SEND CHANGE DIR IF NOT ALLOCATED  R4
         TM    ICESNDST,ICEINSTR   TEST STREAM SEND STATUS     @OZ70112
         BNO   MVDFCSI1            DELAY CD IF NOT INSTREAM    @OZ70112
         TM    ICESNDST,ICEINCHN   TEST SESSION SEND STATUS          R4
         BO    MVDFCSI1            JUST SET FLAG IF IN CHAIN         R4
         ICM   R0,7,DCTBUFAD+1     CHECK DCT BUFFER ANCHOR           R4
         BNZ   MVDFCSI1            SET FLAG IF HAVE 1ST BUF OF CHAIN R4
         TM    DCTSTAT,DCTRTAM     TEST WHERE PROCESSOR IS WAITING   R4
         BZ    MICEGICD            SEND CHANGE DIR IF NOT IN RTAM    R4
         SPACE 1                                                     R4
MVDFCSI1 TM    DCTDEVTP,DCTRPU     TEST REMOTE DEVICE TYPE           R4
         BO    MVDFCHIP            FORCE HI-PRIORITY INTRPT IF PUNCH R4
         TM    MDCTSEL,FMHMEDIA    TEST MEDIUM SELECTED              R4
         BZ    MVDFCHIP            BR IF CONSOLE - FORCE HIGH PRIO  R41
         L     MDCT,ICELDCT        GET ADDRESS OF LINE DCT           R4
         L     R15,MDCTRAT         GET ADDRESS OF RAT ENTRY          R4
         USING RATDSECT,R15        TEMPORARY RAT ADDRESSABILITY      R4
         TM    RATCONF,RATCONFC+RATCONFO  TEST CONSOLE AVAILABITY    R4
         BO    MVDFCHIP            ALWAYS HI-PRIO INTERRUPT IF AVAIL R4
MVDFCSI2 XI    ICEFLGS2,ICESIGNL   INVERT 'SIGNAL-RECEIVED'    @OZ29180
         TM    ICEFLGS2,ICESIGNL   TEST NEW FLAG VALUE         @OZ29180
         BO    MVFREPRG            IF ON, PROCESSING DONE - GO PURGE R4
         SPACE 1                                                     R4
MVDFCHIP OI    ICEFLGS2,ICESIGNL+ICEBREAK  SHOW HI-PRTY INTRP  @OZ29180
         B     MVFREPRG                    (2 CONSECUTIVE SIGNAL'S)  R4
         DROP  R15                 DISCARD TEMP RAT ADDRESSABILITY   R4
         SPACE 1                                                     R4
MVDFCRTR NI    ICESTAT,255-ICERTRPD  RESET 'READY TO RECVE PENDING'  R4
         B     MVDX0819            SEND SENSE X'0819', RTR NOT REQD  R4
         SPACE 1                                                     R4
MVDFCNCL NI    SHWRCVST,255-ICEINCHN  SHOW PURGED CHAIN ENDED        R4
         NI    SHWFLAGS,255-ICEBBPND-ICEEBPND-ICECHDIR  CLEAR PENDS. R4
         OI    SHWRCVST,ICECNCEL   SHOW CANCEL RECEIVED              R4
MVDFCLUS B     MVDCHNOP            BRANCH TO BRACKET S.M. TO HANDLE    C
                                   BB/EB/CD ON 'CANCEL'/'LUS' REQST  R4
MVDFCLUT L     R15,ICELUSTA        GET AND INCREMENT THE       @OZ27491
         LA    R15,1(,R15)          COUNT OF LUSTAT'S RECEIVED @OZ27491
         ST    R15,ICELUSTA          ON THIS SESSION           @OZ27491
MVDFCLU2 CLC   RPLFDBK2(2),=X'0001'  TEST 'LUSTAT' SENSE CODE  @OZ24835
         BNER  ML                  RETURN IF NOT 'COMPONENT AVAIL.'  R4
         NI    ICESTAT,255-ICEHOLD ELSE ALLOW OUTBD ALLOC BANNED BY  R4
         BR    ML                   YIELDING CONTENTION, AND RETURN  R4
         SPACE 1                                                     R4
MVDFCNC2 LA    R1,ICERCVST         POINT TO RECEIVE STATUS BYTE     R41
         TM    ICESTAT,ICEALLOC    TEST FOR ALLOCATED SESSION       R41
         BZ    MVRSTATC            BR IF NO, RESCIND PENDING FMH    R41
         OI    DCTFLAGS,DCTDELET+DCTRSTRT  TELL PRCSR TO CANCEL JOB R41
         B     MVRSTATC            GO RESCIND PENDING FMH IF ANY     R4
         EJECT                                                       R4
*                             FM HEADERS EXHAUSTED OR NONE PRESENT   R4
         SPACE 1                                                     R4
MVDNOFMH TM    SHWRCVST,ICEINSTR   TEST RECEIVE STATUS               R4
         BO    MVDSTATE            GO UPDATE STATE IF IN STREAM      R4
         TM    SHWRCVST,ICENOFMH   TEST RECEIVE STATUS AGAIN         R4
         BNO   MVDSTATE            GO UPDATE STATE IF FMH PENDING    R4
         TM    RPLCHN,RPLONLY      TEST R.U. CHAIN POSITION          R4
         BZ    MVDX0811            FAIL IF CNSLE RU NOT ONLY IN CHN    C
                                    (SENSE X'0811', BREAK)           R4
         LTR   R1,R1               TEST R.U. LENGTH                  R4
         BZ    MVDSTATE            DON'T PASS TO R.C.P. IF NO DATA   R4
         NI    SHWRCVST,255-ICEDSTRM  MASK OUT DATA STRM BITS  @OZ29180
         OI    SHWRCVST,ICEODS     SIMUATE 'ODS' FMH PENDING   @OZ29180
         SPACE 1                                                     R4
*                             UPDATE ICE STATE FROM WORK AREA        R4
         SPACE 1                                                     R4
MVDSTATE L     R0,SHWSTAT          UPDATE                            R4
         ST    R0,ICESTAT           ICE STATE                        R4
         TM    RPLCHN,RPLFIRST+RPLONLY  TEST R.U. CHAIN POSITION     R4
         BZ    MVDALNOP            HOLD FMH STATE IF NOT 1ST IN CHN  R4
         SLR   R15,R15             CLEAR REG FOR INDEX               R4
         IC    R15,ICERCVST        GET FMH PENDING BITS              R4
         SRL   R15,4                FROM RECEIVE STATUS        @OZ29180
         SLL   R15,1                 AND USE AS AN INDEX       @OZ47584
         LH    R15,*+8(R15)           INTO OFFSET TABLE        @OZ47584
         B     MVDAL(R15)          BRANCH INTO CORRECT ROUTINE       R4
         SPACE 1                                                     R4
         DC    AL2(MVDALRAL-MVDAL) 'RESUME' - REALLOCATE       @OZ47584
         DC    AL2(MVDALNOP-MVDAL) 'END (NORMAL)' - NO ACTION  @OZ47584
         DC    AL2(MVDALIMS-MVDAL) 'BEGIN' - ALLOCATE          @OZ47584
         DC    AL2(MVDALIMS-MVDAL) 'ONLY CHAIN' - ALLOCATE     @OZ47584
         DC    AL2(MVDALNOP-MVDAL) 'SUSPEND' - NO ACTION       @OZ47584
         DC    AL2(MVDALABT-MVDAL) 'END (ABORT)' - CANCEL JOB  @OZ47584
         DC    AL2(MVDALCDS-MVDAL) 'CONTINUE' - NO ACTION      @OZ47584
         DC    AL2(MVDALER-MVDAL) INVALID STATE                @OZ47584
         DC    AL2(MVDALER-MVDAL) INVALID STATE                @OZ47584
         DC    AL2(MVDALER-MVDAL) INVALID STATE                @OZ47584
         DC    AL2(MVDALER-MVDAL) INVALID STATE                @OZ47584
         DC    AL2(MVDALER-MVDAL) INVALID STATE                @OZ47584
         DC    AL2(MVDALER-MVDAL) INVALID STATE                @OZ47584
         DC    AL2(MVDALER-MVDAL) INVALID STATE                @OZ47584
         DC    AL2(MVDALRLS-MVDAL) OUT OF STRM, NO T1 FMH,     @OZ47584C
                                   OIC, DATA LEN 0 - RLSE BUF  @OZ47584
         DC    AL2(MVDALNOP-MVDAL) IN STRM, NO T1 FMH-NO ACT   @OZ47584
         EJECT                                                      R41
MVDAL    DS    0H                  ORIGIN FOR BRANCH TABLE OFFSETS   R4
         SPACE 1                                                     R4
MVDALER  B     MSNABND             INVALID STATE DETECTED      @OZ45801
         SPACE 1                                               @OZ29180
MVDALCDS NI    MDCTFMT,255-DCTPPRES-DCTPCPCT  TURN COMPRESSION @OZ29180
*                                  AND COMPACTION FLGS OFF     @OZ29180
         B     MVDALNOP            LINK BUFFER TO RDCT         @OZ29180
         SPACE 1                                               @OZ29180
MVDALRLS LA    R15,MVFRESPD        LOAD ADDR OF BUF DISPOSAL ROUTINE R4
         B     MVRSTATI            RELEASE RESPONSE & UPDATE STATE   R4
         SPACE 1                                                     R4
         USING DCTDSECT,R15        USE TEMPORARY RDCT ADDRESSABILITY R4
MVDALRAL L     R15,SHWRDCT         RELOAD ADDRESS OF PRECEDING RDCT  R4
         L     MDCT,MDCTSDCT       GET ADDRESS OF DESIRED RDCT       R4
         DROP  R15                 DISCARD TEMP RDCT ADDRESSABILITY  R4
         NI    MDCTFMT,255-DCTPPRES-DCTPCPCT  RESET COMPRESSION BITS R4
         LTR   MDCT,MDCT           TEST REMOTE DCT IMPLIED SUSPD BIT R4
         BNM   MVDRSUMO            LEAVE 'RDS PENDG' IF NOT IMPLIED  R4
MVDRSUMI OI    ICERCVST,ICEINSTR   ELSE GO IN STREAM AUTOMATICALLY   R4
         SPACE 1                                                     R4
MVDRSUMO L     R0,MDCTSDCT                CHAIN REMAINDER OF SUSPEND R4
         ST    R0,MDCTSDCT-DCTDSECT(,R15)  QUEUE TO PREVIOUS RDCT    R4
         XC    MDCTSDCT,MDCTSDCT   CLEAR SUSPENDED DCT CHAIN POINTER R4
         CLI   DCTDEVTP,DCTRCON    IF NOT CONSOLE DCT, GO      @OZ47584
         BNE   MVDALRCN             RECONNECT ICE AND RDCT     @OZ47584
         NI    DCTSTAT,255-DCTHOLD TURN HOLD OFF FOR RDCT      @OZ47584
         ST    MICE,MDCTICE        SAVE ICE ADDRESS FOR OPEN   @OZ47584
         B     MVDALRCN            GO RECONNECT ICE AND RDCT         R4
         SPACE 3                                                    R41
*                             PASS R.U. TO CONSOLE PROCESSOR         R4
         SPACE 1                                                     R4
MVDCNSLE OI    ICESTAT,ICEALLOC    MARK ICE ALLOCATED                R4
         LA    R15,$MCONMSG        PREPARE TO SCAN CONSOLE QUEUE     R4
         B     MVDCNSL2              TO ADD NEW BUFFER AT END        R4
         SPACE 1                                                    R41
MVDCNSL1 LA    R15,TPBLCCAD-BUFDSECT(,R1)   ASSUME BSC BUFFER CHAIN  R4
         TM    BUFTYPE-BUFDSECT(R1),BUFTP+BUFIOB TEST ASSUMPTN      R41
         BO    MVDCNSL2            VALID, SKIP NEXT                 R41
         LA    R15,RPLNEXT-RPLDSECT(,R1)    USE SNA CHAIN FIELD      R4
MVDCNSL2 L     R1,0(,R15)          LOCATE NEXT BUFFER                R4
         LTR   R1,R1               TEST FOR CHAIN END                R4
         BNZ   MVDCNSL1            NO, CONTINUE SCANNING             R4
         ST    MBUF,0(,R15)        ADD NEW BUFFER AFTER LAST         R4
         L     R15,$MCONPCE        GET ADDRESS OF REMOTE CONSOLE PCE R4
         LR    MBUF,R1             MAKE BUFFER ADDRESS UNAVAILABLE   R4
         B     MVDALPST            REJOIN COMMON ALLOCATION LOGIC    R4
         EJECT                                                      R41
*                             ALLOCATE REMOTE DCT AND ICE            R4
         SPACE 1                                                     R4
MVDALIMS TM    SHWSTAT,ICEALLOC    TEST SESSION STATUS               R4
         BZ    SKIP830             BR IF (AS EXPECTED) NOT ALLOCATED R4
         L     MDCT,PCER1          ELSE GET RDCT FOR IMPLIED SUSPEND R4
         LA    R1,ICERCVST         POINT TO STREAM RECEIVE STATUS    R4
         B     MVRSTIMP            GO SUSPND. RETRN = MVDALLOC BELOW R4
         SPACE 1                                                    R41
SKIP830  L     MDCT,ICERDCT        SEE IF PRE-ALLOCATED              R4
         LTR   MDCT,MDCT            REMOTE DCT IS PRESENT            R4
         BZ    MVDALLOC            BRANCH IF NOT                     R4
         OI    MDCTSTAT,DCTABORT   ELSE CAUSE OUTBOUND OPEN FAILURE  R4
         SLR   R0,R0               CLEAR PRE-                        R4
         ST    R0,MDCTICE           ALLOCATION                       R4
         ST    R0,ICERDCT            POINTERS                        R4
         SPACE 1                                                     R4
MVDALLOC L     MDCT,SHWRDCT        LOAD ADDR OF DESIRED RDCT         R4
         LTR   MDCT,MDCT           TEST ADDR OF DESIRED RDCT         R4
         BZ    MVDCNSLE            RDCT ADDR NOT AVAIL = RMT CONSOLE R4
         NI    DCTSTAT,255-DCTHOLD SHOW RDCT NO LONGER HELD          R4
         NI    MDCTFMT,255-DCTPPRES-DCTPCPCT  RESET COMPRESSION BITS R4
         NI    MDCTFMT,255-DCTPPRES  RESET COMPRESSION BIT           R4
         ST    MICE,MDCTICE        CONNECT ICE TO REMOTE DCT         R4
         SPACE 1                                                     R4
MVDALRCN LA    MDCT,0(,MDCT)       CLEAR SUSPEND FLAGS IF ANY        R4
         ST    MDCT,ICERDCT        RECONNECT RDCT TO ICE             R4
         OI    ICESTAT,ICEALLOC    MARK ICE ALLOCATED                R4
*                                  THIS CARD DELETED BY APAR   @OZ19494
         L     R15,DCTPCE          GET PCE ADDRESS TO POST           R4
         NI    MDCTSTAT,255-DCTPSUSP-DCTEOF  RESET SUSP & EOF FLAGS  R4
MVDALPST $POST (R15),WORK          FIRE BEGINNING/RESUMING PROCESSOR R4
         LTR   MBUF,MBUF           TEST BUF AD TO TELL WHO CALLER IS R4
         BZ    MVREQRET            NO BUF = MVREQSTR CALL, SO RETURN R4
         B     MVDALNOP            QUEUE BUFFER FOR DCT        @OZ47584
         EJECT                                                       R4
*                             LINK REQUESTED BUFFER TO REMOTE DCT    R4
         SPACE 1                                                     R4
MVDALABT OI    DCTFLAGS,DCTDELET+DCTRSTRT  PCE TO CANCEL JOB   @OZ47584
MVDALNOP NI    MDCTFMT,255-DCTPALTC  RESET ALTERNATE CODE FLAG       R4
         OC    MDCTFMT,SHWTFMTM    MERGE DCT FMT MASK INTO MDCTFMT   R4
         L     R15,DCTBUFAD        TEST IF BUFFER                    R4
         LTR   R15,R15              ON REMOTE DCT                    R4
         BZ    SKIP840             BRANCH IF NOT                     R4
         ST    MBUF,RPLNEXT-RPLDSECT(,R15)  SET UP RPL CHAIN FOR     R4
         LR    MBUF,R15                      'GET' 2-BUFFER CASE     R4
SKIP840  ST    MBUF,DCTBUFAD       CONNECT BUFFER TO NEW REMOTE DCT  R4
         SPACE 2                                                     R4
*                                                                    R4
*                             RETURN, OR WAIT IF SUSPEND IN PROGRESS R4
*                                                                    R4
         SPACE 1                                                     R4
MVREQRET TM    ICESDCT,ICESUSPD    TEST SUSPEND IN PROGRESS FLAG     R4
         BZR   ML                  RETURN IF NOT SUSPENDING          R4
         NI    ICESDCT,255-ICESUSPD  RESET SUSPEND IN PROGR FLAG     R4
         CLI   PCEID+1,PCEMLMID    IS THIS THE LINE MANAGER..  @OZ41311
         BER   ML                  IF LINE MANAGER DON'T WAIT HERE   R4
         L     MDCT,ICESDCT        RETRIEVE SUSPENDING RDCT ADDRESS  R4
         SPACE 1                                                     R4
MVREQUME ST    ML,DCTEWF           SAVE 1ST LEVEL RETURN ADDRESS     R4
        $WAIT  WORK,SAVE=NO        WAIT ON RESUME POST FROM MVDALRCN R4
        $WAIT  ABIT,SAVE=NO        GIVE COMMANDS CHANCE TO PERCOLATE R4
        $RESTORE                   RESTORE ACCESS METHOD REGISTERS   R4
         TM    MDCTSEL,DCTPOUTB    TEST DIRECTION BIT                R4
         BZ    SKIP850             SKIP EARLY OP CMD CHECK IF INBND  R4
         LTR   MBASE1,MBASE1       TEST TYPE OF $EXTP CALL           R4
         BM    SKIP850             BR IF MAY NOT BE FLUSHED (CLOSE)  R4
         TM    DCTFLAGS,DCTDELET+DCTRSTRT  $C OR $E OR $I ENTERED    R4
         BNZ   MVTAMXAB            RETURN IMMED IF OPERATOR COMMAND  R4
SKIP850  L     ML,DCTEWF           RETRIEVE 1ST LEVEL RETURN ADDRESS R4
         TM    MDCTSTAT,DCTPSUSP   TEST IF POST WAS FROM RESUME      R4
         BO    MVREQUME            REINSTATE $WAIT IF NOT            R4
         TM    MDCTSEL,DCTPOUTB    TEST DIRECTION BIT AGAIN          R4
         BOR   ML                  RETURN IF OUTBOUND - CALLER KNOWS   C
                                    IF 'RESUME D.S.' HEADER REQUIRED R4
         TM    ICERCVST,ICENOFMH   TEST STREAM RECEIVE STATUS        R4
         BO    MVREQBUF  IF NO FMH PENDING, MUST FINISH THE MVREQBUF   C
                          CALL THAT WAS INTERRUPTED BY IMPLIED SUSPD R4
         BR    ML        TO REACH HERE MVRELBUF MUST BE CALLED WITH    C
                          'SDS' PENDING. IN THIS ONE CASE, MVRELBUF    C
                           RTRNS WITH DCTBUFAD NOT 0 (PTS TO 'RDS')  R4
         EJECT                                                       R4
*                                                                    R4
*                             RELEASE BUFFER TO SNA HEADER SERVICES  R4
*                                                                    R4
         SPACE 1                                                     R4
MVRELBUF LA    R15,MVFRELBF        LOAD ADDR OF BUF DISPOSAL ROUTINE R4
         TM    ICERCVST,ICEINCHN   TEST RECEIVE STATUS               R4
         BOR   R15                 JUST FREE BUFFER IF NOT CHAIN END R4
         TM    ICERCVST,ICEINSTR   TEST RECEIVE STATUS               R4
         BO    MVRSTATI            GO FREE BUFFER IF IN STREAM       R4
         TM    ICERCVST,ICENMEND   TEST RECEIVE STATE FMH PEND @OZ29180
         BZ    MVRSTATI            FREE BUFFER IF RDS/BDS/SDS/NO FMH R4
         TM    MDCTSTAT,DCTEOF     IF EDS/ODS/ADS TEST END-OF-FILE   R4
         BO    MVRSTATI            FREE IF END-OF-FILE ALREADY SET   R4
         OI    MDCTSTAT,DCTEOF     SET END OF FILE FOR EDS/ODS/ADS   R4
         BR    ML                  RETURN TO 'GET' WITHOUT FREEING   R4
         SPACE 2                                                    R41
         LTORG                                                       R4
         SPACE 3                                                     R4
         DROP  MBASE1,MBASE2,MBASE3  DROP RTAM ROUTINES...          R41
         DROP  BASE2              ...AND LINE MANAGER ADDRESSABILTY R41
         TITLE 'HASP SNA REMOTE TERMINAL R.U. COMPOSER WORK AREA'    R4
IFGRPL   DSECT                                                       R4
         ORG   RPLBCHN                                               R4
         DS    0D                  ASSURE DBLE WRD BOUNDARY    @OZ25087
SCWKOMSA DS    0CL(11*4)      COMPOSER SAVE AREA- MUST BE COPIED     R4
SCWCCWA  DS    0CL5                SCS MODEL CARRIAGE CONTROL STRING R4
SCWTRN   DS    CL2                 SCS TRANSPARENCY CODE AND COUNT   R4
SCWSEL   DS    CL2                 SCS CHANNEL SKIP ('SEL') CODE     R4
SCWCR    DS    CL1                 SCS CARRIAGE RETURN CODE          R4
SCWODDM  DS    CL1                 SAVED ODD MASTER IN COMPACTION   R41C
                                    16-MASTER SPECIAL OVERFLOW CASE R41
SCWFLAGS DS    BL1                 COMPOSER FLAGS                    R4
SCWLCCC  DS    XL1                 LAST CHANNEL COMMAND CODE         R4
SCWINPT  DS    F                   SAVEWORD, INPUT STRING ADDRESS    R4
SCWLINPT DS    F                   SAVEWORD, INPUT STRING LENGTH     R4
         ORG   SCWINPT                                               R4
SCWSVFWA DS    0CL17               'SET VERTICAL FORMAT' WORK AREA   R4
         DS    CL2                 'FMT B' SCS CODE                  R4
SVFCOUNT DS    CL1                 # BYTES REMAINING INCL.THIS ONE   R4
SVFMAXPL DS    CL1                 MAX PRINT LINE                    R4
SVFTOPM  DS    CL1                 TOP MARGIN  (CHANNEL STOP 1)      R4
SVFBOTM  DS    0CL1                BOTTOM MARGIN                     R4
SVFTABWK DS    CL12                CHANNEL STOPS 1 THROUGH 12        R4
         DS    CL3                 RESERVED                          R4
         SPACE 1                                                     R4
SCWTEND  DS    0F                  TEMPORARY SAVEWORD, 'REND' VALUE  R4
SCWSRCEB DS    0F                  BEGIN ADDR, DATA TO MOVE INTO SCB R4
SCWSRCE  DS    F                   SAVEWORD, CURRENT SOURCE STR ADDR R4
SCWSCBA  DS    0F                  ADDRESS OF INTERRUPTED SCB        R4
SCWLSRCE DS    F                   SAVEWORD, LENGTH OF SOURCE STRING R4
SCWFEED  DS    F                   SAVEWORD, FEEDER ROUTINE RETURN   R4
SCWTSINK DS    0F                  TEMPORARY SAVEWORD, 'RSINK'      R41
SCWNUM   DS    F                   SAVEWORD, EMISSION DUPLIC. FACTOR R4
*                             END OF PORTION WHICH MUST BE COPIED    R4
SCWPLAN  DS    F                   SAVEWORD, PLANNER STATE ENTRY PT. R4
SCWCPARS DS    F                   SAVEWORD, COMPACTION RACE STATE  R41
SCWSCBL  DS    F                   SAVEWORD, UNUSED SCB CAPACITY     R4
SCWSCBNC DS    F                   SAVEWORD, STARTING SCB CAPACITY  R41
SCWRETRN DS    F                   SAVEWORD, COMPOSER RETURN ADDRESS R4
SCWSCBNA DS    0F                  SAVEWORD, OVERLAP NC SCB ADDRESS R41
SCWSCBCA DS    F                   SAVEWORD, COMPACTION SCB ADDRESS R41
SCWSCBNS DS    0F                  SAVEWORD, NC SPACE AT RACE BEGIN R41
SCWSCBCE DS    F                   SAVEWORD, FULL COMPACT SCB END   R41
SCWSAV13 DS    F                   SAVEWORD, POINTER TO PCE          R4
SCWRUEND DS    F                   SAVEWORD, ADDRESS OF R.U. END    R41
         EJECT                                                      R41
         SPACE 5                                                    R41
*                                                                    R4
*                             SCWFLAGS - SCB COMPOSER FLAGS          R4
*                                                                    R4
         SPACE 1                                                     R4
SCWMORE  EQU   B'01000000'         MORE DATA REMAINS TO BE COMPOSED  R4
SCWODDMF EQU   B'00100000'         EMITTER BACKED UP BY ODD MASTER  R41
SCWTRNSP EQU   B'00010000'         TRANSPARENCY CHECK REQUIRED       R4
SCWNSPAN EQU   B'00001000'         FORBID CROSS-R.U. RECORD SPANNING R4
SCWCTRL  EQU   B'00000100'         CONTROL (NOT TEXT) SOURCE STRING  R4
SCWFULL  EQU   B'00000010'         BUFFER READY TO SEND              R4
SCWLAST  EQU   B'00000001'         LAST EMISSION PASSED TO PLANNER   R4
         SPACE 5                                                    R41
*                                                                   R41
*                             EQUATES FOR COMPACTION RACING STATUS  R41
*                                                                   R41
         SPACE 1                                                    R41
SCWCANOT EQU   0                   COMPACTION NOT COMPETING         R41
SCWBHIND EQU   1                   COMPACTION BEHIND BY 1/2 BYTE    R41
SCWSTAND EQU   2                   COMPACTION IN STANDOFF           R41
SCWAHEAD EQU   3                   COMPACTION AHEAD  BY 1/2 BYTE    R41
SCWNPCOS EQU   2                   NON-PRIME DUP COST = 2 HALF-BYTESR41C
                                    MORE THAN PRIME DUP COST        R41
         TITLE 'RTAM     HASP SNA GET WORK AREA'                    R41
         ORG   RPLBCHN                                              R41
SGWSTRT  DS    0X                  START OF SNA GET WORK AREA       R41
         DS    X                   INBND ALLOC SAVES MDCTFMT HERE   R41
SGWFLAGS DS    BL1                 FLAGS FOR SNA GET                R41
         DS    2X                  RESERVED                         R41
         SPACE 1                                                    R41
SGWRSAVE DS    0F                  STATUS REGISTER SAVE AREA        R41
SGWLINK  DS    F                   R14  LINK                        R41
SGWRPP   DS    F                   R15  RPP                         R41
SGWRTC   DS    F                   R0   RTC                         R41
         DS    F                   R1                               R41
         DS    F                   R2                               R41
SGWRSC   DS    F                   R3   RSC                         R41
SGWMBUF  DS    F                   R4   MBUF                        R41
SGWRDP   DS    F                   R5   RDP                         R41
SGWRPC   DS    F                   R6   RPC                         R41
         DS    F                   R7   MBASE1                      R41
         DS    F                   R8   MBASE2                      R41
         DS    F                   R9                               R41
         DS    F                   R10  JCT                         R41
         DS    F                   R11  BASE1                       R41
SGWRDC   DS    F                   R12  RDC                         R41
         SPACE 1                                                    R41
SGWRUA   DS    F                   CURRENT POINTER IN RU            R41
SGWRUE   DS    F                   END OF RU (OR PORTION OF RU)     R41
SGWEND   DS    0X                  END OF SNA GET WORK AREA         R41
         SPACE 1                                                    R41
*                             SGWFLAGS  --  BIT DEFINITIONS         R41
         SPACE 1                                                    R41
SGWNFRST EQU   X'80'               NOT THE FIRST GET IN THIS CHAIN  R41
SGWXEOR  EQU   X'40'               AN EXTRA EOR MAY OCCUR           R41
SGWDUP   EQU   X'20'               RDP POINTS TO A DUPLICATE FIELD  R41
SGWTRN   EQU   X'10'               SCS SCAN IS IN TRANSPARENT STRINGR41
         TITLE 'RTAM     HASP SNA HEADER DECODE WORK AREA'          R41
*                                                                    R4
*                             SNA HEADER DECODE ROUTINE WORK AREA    R4
*                                                                    R4
         SPACE 1                                                     R4
         ORG   RPLBCHN                                               R4
SHWDCTWA DS    0D             GROUP NAME FOR NEXT 8 BYTES            R4
SHWTFMTM DS    BL1                 ATTRIB MASK TO MERGE WITH MDCTFMT R4
         DS    BL1                 RESERVED FOR 'GET' DECOMPR FLAGS  R4
SHWCNTRL DS    BL1                 D.F.C. TYPE INDEX (0 = DATA)      R4
         DS    BL1                 RESERVED                          R4
SHWRDCT  DS    F                   REMOTE DCT ALLOCATION CANDIDATE   R4
SHWICEWA DS    0F             GROUP NAME FOR NEXT 4 BYTES            R4
SHWSTAT  DS    BL1                 COPY OF ICESTAT                   R4
SHWFLAGS DS    BL1                 COPY OF ICEFLAGS                  R4
SHWRCVST DS    BL1                 COPY OF ICERCVST                  R4
         DS    BL1                 RESERVED                          R4
         SPACE 3                                                     R4
HASPRTAM CSECT                                                       R4
         TITLE 'HASP SNA REMOTE TERMINAL CONSTANTS/TABLES'           R4
*                                                                    R4
*                             SNA FUNCTION MGMT HEADER PROTOTYPES    R4
*                                                                    R4
         SPACE 3                                                     R4
MFMHA    DC    AL1(MFMHAL)         LENGTH                            R4
         DC    AL1(FMHTYPE1)       TYPE                              R4
         DC    AL1(*-*)            SELECT BYTE - SET FROM RDCT       R4
         DC    AL1(0)              SRI, DEMAND SELECT, 4-7 RES @OZ29180
         DC    AL1(*-*)            PROPERTIES - SET FROM REGISTER R1 R4
         DC    AL1(0)              RECORD LENGTH               @OZ29180
MFMHAL   EQU   *-MFMHA             DEFINE MODEL FMH LENGTH           R4
         SPACE 2                                                    R41
MFMHC    DC    AL1(*-*)            LENGTH - COMPUTED FROM # MASTERS R41
         DC    AL1(FMHTYPE3)       TYPE                             R41
         DC    AL1(FMHCPT)         CODE = DEFINE COMPACTION TABLE   R41
         DC    AL1(*-*)            NUMBER OF MASTER CHARACTERS      R41
MFMHCL   EQU   *-MFMHC             DEFINE MODEL FMH LENGTH          R41
         SPACE 5                                                     R4
MVPASCII DS    0D             EBCDIC TO ASCII TRANSLATE TABLE (SNA)  R4
         SPACE 1                                                     R4
*                X0X1X2X3X4X5X6X7X8X9XAXBXCXDXEXF                    R4
         SPACE 1                                                     R4
         DC    X'0001020313091A7F1A1A1A0B0C0D0E0F'  0X               R4
         DC    X'101A1A1A1114081A18191A1A1C1D1E1F'  1X               R4
         DC    X'1A1A1A1A120A171B1A1A1A1A1A050607'  2X               R4
         DC    X'1A1A161A1A1A1A041A1A1A1A1A151A1A'  3X               R4
         DC    X'201A1A1A1A1A1A1A1A1A5B2E3C282B21'  4X               R4
         DC    X'261A1A1A1A1A1A1A1A1A5D242A293B5E'  5X               R4
         DC    X'2D2F1A1A1A1A1A1A1A1A7C2C255F3E3F'  6X               R4
         DC    X'1A1A1A1A1A1A1A1A1A603A2340273D22'  7X               R4
         DC    X'1A6162636465666768691A1A1A1A1A1A'  8X               R4
         DC    X'1A6A6B6C6D6E6F7071721A1A1A1A1A1A'  9X               R4
         DC    X'1A7E737475767778797A1A1A1A1A1A1A'  AX               R4
         DC    X'1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A'  BX               R4
         DC    X'7B4142434445464748491A1A1A1A1A1A'  CX               R4
         DC    X'7D4A4B4C4D4E4F5051521A1A1A1A1A1A'  DX               R4
         DC    X'5C1A535455565758595A1A1A1A1A1A1A'  EX               R4
         DC    X'303132333435363738391A1A1A1A1A1A'  FX               R4
         TITLE 'HASP LINE MANAGER -- GENERAL EVENT HANDLER'          R4
         USING BUFDSECT,MBUF       ESTABLISH BUFFER ADDRESSABILITY   R4
         SPACE 1                                                     R4
HASPMLLM $ENTRY BASE=BASE2,ENTRY=NO HASP LINE MANAGER                R4
         SPACE 2                                                    R41
*                                                                   R41
*        LINE MANAGER -- PROCESSOR INITIALIZATION                   R41
*                                                                   R41
         SPACE 1                                                    R41
         ST    SAVE,MSTQE+IPOST    SET TQE POST ADDRESS             R41
         LA    R14,MSCANTBL-MSCNTSIZ SETUP FOR                      R41
         ST    R14,MSCANADR        LINE MANAGER SCANS               R41
         MVI   MSCANREQ,MSCNUNIT+MSCNRAT REQUEST INITIAL SCANS      R41
         EJECT                                                      R41
*                                                                   R41
*        LINE MANAGER -- SCAN / EVENT SETUP                         R41
*                                                                   R41
         SPACE 2                                                    R41
*        SET SCAN INDICATORS                                        R41
         SPACE 1                                                    R41
MSEARCH  DS    0H                  SEARCH FOR REQUIRED ACTIONS      R41
         L     R1,$SSVT            GET SUBSYSTEM VECTOR TABLE ADDR   R4
         USING $SVDSECT,R1         TEMPORARY SSVT ADDRESSABILITY     R4
         MVI   $SVMLLM,0           ALLOW $$POSTING                   R4
         DROP  R1                  RELEASE TEMPORARY SSVT BASE       R4
         NI    MHASPECF+$EWBPOST,255-$EWFPOST RESET IMMED POST REQ   R4
         SPACE 1                                                     R4
         MVC   MSCANIND(2),MSCANREQ GET REQ SCAN AND EVENT INDIC     R4
         XC    MSCANREQ(2),MSCANREQ RESET REQUEST INDICATOR FIELDS   R4
         SPACE 2                                                    R41
*        INDICATE BASIC TIMER EVENT  ( 1 SECOND INTERVAL )          R41
         SPACE 1                                                    R41
         TM    MSTQE+IPOST,X'80'   CHECK FOR TIMER EXPIRED           R4
         BZ    MNOTIME             BRANCH IF NO TIMER INTERRUPT     R41
         MVI   MSTQE+IPOST,X'00'   RESET TIMER POST INDICATOR        R4
         OI    MSCANIND,MSCNBACT+MSCNSLNE REQ BSC AND SNA DCT SCAN   R4
         OI    MEVNTIND,MEVNTIME   INDICATE TIMER EVENT OCCURED      R4
         SPACE 2                                                    R41
*        INDICATE DISCONNECT INTERVAL EVENT ( 32 SECOND INTERVAL )  R41
         SPACE 1                                                    R41
MNOTIME  STCK  MCLOCK              GET TIME STAMP OF THIS DISPATCH  R41
         CLC   MDISTIME,MCLOCK     CHECK DISCONNECT LOOK INTERVAL    R4
         BH    MJOBSRCH            BRANCH IF INTERV NOT YET EXPIRED  R4
         LA    R1,32               SET INTERVAL FOR NEXT             R4
         AL    R1,MCLOCK            DISCONNECT LOOK IN               R4
         ST    R1,MDISTIME           APPROXIMATELY 32 SECONDS        R4
         OI    MSCANIND,MSCNBACT+MSCNSLNE+MSCNRAT  REQUIRED SCANS   R41
         OI    MEVNTIND,MEVNDISC   INDICATE DISCONNECT EVENT         R4
         SPACE 2                                                     R4
*        INIDCATE JOB POST EVENT                                    R41
         SPACE 1                                                    R41
MJOBSRCH DS    0H                  CHECK JOB POST EVENTS             R4
         TM    MHASPECF+$EWBJOT,$EWFJOT TEST MASTER EVENT CONTROL    R4
         BO    MQSTEST             BRANCH IF NO JOB POST       @OZ32567
         OI    MSCANIND,MSCNSLNE+MSCNBACT+MSCNRAT  NEEDED SCANS     R41
         OI    MEVNTIND,MEVNPJOB   SHOW JOB POST EVENT OCCURED       R4
         OI    MHASPECF+$EWBJOT,$EWFJOT SET MASTER EVENT CONTROL     R4
         EJECT                                                 @OZ32567
         SPACE 1                                               @OZ32567
*        INDICATE SHARED QUEUE OWNED EVENT                     @OZ32567
         SPACE 1                                               @OZ32567
MQSTEST $QSUSE TYPE=TEST           TEST STATUS OF SHARED QUES  @OZ32567
         BNZ   MSCANEXT            BR IF NOT OWNED             @OZ32567
         OI    MEVNTIND,MEVNCKPT   ELSE INDICATE CHKPT OWNED   @OZ32567
         EJECT                                                      R41
*                                                                   R41
*        LINE MANAGER MAIN SCAN DRIVER                              R41
*                                                                   R41
         SPACE 2                                                    R41
MSCANEXT L     R14,MSCANADR        PICK UP CURRENT AND...           R41
         LA    R15,MSCANEND        ...LAST SCAN TABLE ENTRIES       R41
         USING MSCANTAB,R14        SHOW SCAN TABLE ADDRESSABLE      R41
         SPACE 1                                                    R41
MSCANXT1 LA    R14,MSCNEXT         BUMP TO NEXT SCAN TABLE ENTRY    R41
         CLR   R14,R15             TEST FOR END OF TABLE            R41
         BE    MSCANXIT            BRANCH IF YES, SCAN EXIT         R41
         SPACE 1                                                    R41
         SLR   R1,R1               GET SCAN CRITERIA FROM           R41
         IC    R1,MSCNID            SCAN TABLE ENTRY                R41
         LTR   R1,R1               TEST SCAN CRITERIA               R41
         BZ    MSCANEVN            BRANCH IF NONE, TRY EVENT   @OZ32567
         EX    R1,MSCANTM          TEST SCAN REQUIREMENTS           R41
         BNO   MSCANXT1            BRANCH IF NOT REQUIRED, NXT SCAN R41
         SPACE 1                                               @OZ32567
MSCANEVN IC    R1,MEVNTID          GET EVENT CRITERIA          @OZ32567
         LTR   R1,R1                FROM TABLE ENTRY           @OZ32567
         BZ    MSCANTST              BRANCH IF NONE, DO SCAN   @OZ32567
         EX    R1,MEVNTM           TEST EVENT REQUIREMENT      @OZ32567
         BNO   MSCANXT1            BR IF NOT REQ TO NEXT SCAN  @OZ32567
         SPACE 1                                               @OZ32567
MSCANTST XC    MSCANIND,MSCNID     RESET SCAN INDICATOR        @OZ32567
         EX    0,MSCNSET           SETUP FOR SCAN FOR WORK     @OZ32567
         BZ    MSCANXT1            BRNCH IF NO WRK QUEUED, SKP SCAN R41
         SPACE 1                                                    R41
MSCAN    L     MBASE1,MSCNRTN      GET SCAN PROCESSING ROUTINE ADDR R41
         L     MBASE2,MSCNBASE     SETUP                            R41
         LA    MBASE3,2048(,MBASE2) COMMON SUBROUTINE               R41
         LA    MBASE3,2048(,MBASE3)  ADDRESSABILITY (8K)            R41
         ST    R14,MSCANADR         SAVE CURRENT SCAN TABLE ADDRESS R41
         BR    MBASE1              ENTER SCAN ROUTINE               R41
         SPACE 1                                                    R41
MSCANTM  TM    MSCANIND,*-*        *** EXECUTED ***                 R41
         SPACE 1                                               @OZ32567
MEVNTM   TM    MEVNTIND,*-*        *** EXECUTED ***            @OZ32567
         SPACE 2                                                    R41
MSCANXIT LA    R14,MSCANTBL-MSCNTSIZ  RE-INITIALIZE FOR NEXT        R41
         ST    R14,MSCANADR            LINE MANAGER DISPATCH        R41
         OC    MSCANREQ,MSCANIND   SET SCANS REQUIRED ON NEXT  @OZ32567C
                                       LINE MANAGER DISPATCH   @OZ32567
         EJECT                                                      R41
*                                                                   R41
*        LINE MANAGER -- BUFFER PROCESSING                          R41
*                                                                   R41
         SPACE 1                                                    R41
MBUFSRCH DS    0H                  SEARCH READY BUFFER QUEUE         R4
         L     MBUF,$RJECHEQ       GET TOP OF RJE BUFFER QUEUE       R4
         LTR   MBUF,MBUF           CHECK FOR ANY BUFFER QUEUED       R4
         BZ    MTIMSRCH            BRANCH IF QUEUE IS EMPTY         R41
         SLR   R0,R0               GET EMPTY QUEUE INDICATOR        R41
MBUFRTRY CS    MBUF,R0,$RJECHEQ    ATTEMPT TO CLEAR QUEUE           R41
         BNE   MBUFRTRY            RETRY IF UNSUCCESSFUL            R41
MBUFIFO  L     R1,BUFCHAIN         GET ADDR OF NEXT BUFFER          R41
         LTR   R1,R1               IS ANY BUFFER CHAINED             R4
         BZ    MBUFPROC            PROCESS BUFF IF END OF CHAIN      R4
         ST    R0,BUFCHAIN         REORDER CHAINED BUFFERS           R4
         LR    R0,MBUF              FROM LIFO QUEUEING               R4
         LR    MBUF,R1               TO FIFO QUEUEING                R4
         B     MBUFIFO             LOOP UNTIL END OF CHAIN          R41
         SPACE 1                                                     R4
MBUFNEXT L     MBUF,MBUFQUE        PICK UP NEXT BUFFER ADDRESS      R41
         LTR   MBUF,MBUF           TEST FOR END OF CHAIN            R41
         BZ    MTIMSRCH            BRANCH IF YES                    R41
         L     R0,BUFCHAIN         PICK UP NEXT BUFFER ADDRESS      R41
MBUFPROC ST    R0,MBUFQUE          SAVE BUFF ADDR ON WORK QUEUE     R41
         SPACE 1                                                    R41
         L     MBASE1,MBUFBSCP     ASSUME BSC PROCESSING ROUTINE    R41
         L     MBASE2,=A(RTAMBSUB) PICK UP ADDRESSABILITY           R41
         LA    MBASE3,2048(,MBASE2) ON BSC COMMON                   R41
         LA    MBASE3,2048(,MBASE3)  SUBOUTINES                     R41
         TM    BUFTYPE,BUFTP+BUFIOB  CHECK BUFFER TYPE              R41
         BOR   MBASE1              PROCESS BSC BUFFER IF IOB        R41
         SPACE 1                                                    R41
         L     MBASE1,MBUFSNAP     GET ADDR OF SNA PROCESSING ROUTN R41
         L     MBASE2,=A(RTAMVSUB) PICK UP ADDRESSABILITY           R41
         LA    MBASE3,2048(,MBASE2) ON SNA COMMON                   R41
         LA    MBASE3,2048(,MBASE3)  SUBROUTINES                    R41
         BR    MBASE1               AND BRANCH TO HANDLE RPL        R41
         SPACE 2                                                    R41
         DS    0F                                                   R41
MBUFBSCP DC    A(MBSCPROC)         ADDR OF BSC BUFR PROCESSING RTN  R41
MBUFSNAP DC    AL1(X'80')          NO-FLUSH FLAG FOR SNA PROCESSING R41
         DC    AL3(MSNAPROC)       ADDR OF SNA BUFR PROCESSING RTN  R41
         EJECT                                                      R41
*                                                                   R41
*        LINE MANAGER -- POST SCAN PROCESSING AND WAIT              R41
*                                                                   R41
         SPACE 2                                                    R41
*        REACTIVATE LINE MANAGER MASTER TIME INTERVAL (1 SECOND)    R41
         SPACE 1                                                    R41
MTIMSRCH CLI   MSTQE+IPOST,X'20'   CHECK FOR STIMER REQUESTED       R41
         BE    MSINTVL             GO SET 1 SECOND INTERVAL         R41
         CLI   MSTQE+IPOST,X'00'   TIME EXPIRED...             @OZ40259
         BE    MSINTVL             YES,ISSUE STIMER            @OZ40259
         TM    MSTQE+IPOST,X'80'   TIME EXPIRED WHEN WAITING?  @OZ40259
         BO    MSEARCH             YES, GO SCAN FOR WORK       @OZ40259
         B     MLLMWAIT            TIME NOT EXPIRED...GO WAIT  @OZ40259
MSINTVL  LA    R1,1                GET 1 SECOND                     R41
         ST    R1,MSTQE+ITIME       TIMER INTERVAL                  R41
        $STIMER MSTQE              KICK OFF TIMER                    R4
         MVI   MSTQE+IPOST,X'40'   INDICATE TIMER INTERVAL SET       R4
         SPACE 3                                                    R41
*        LINE MANAGER WAIT - FOR NEXT DISPATCH                      R41
         SPACE 1                                                     R4
MLLMWAIT DS    0H                  WAIT FOR MORE WORK TO DO          R4
        $WAIT  WORK                WAIT FOR SOMETHING TO DO          R4
         SPACE 1                                                     R4
         B     MSEARCH             BRANCH TO SEARCH FOR WORK        R41
         TITLE 'HASP LINE MANAGER --- MAIN SCAN DIRECTORY'          R41
***********************************************************************
*                                                                     *
*                  LINE MANAGER MAIN SCAN DIRECTORY                   *
*                                                                     *
***********************************************************************
         SPACE 2                                                    R41
MSCANTAB DSECT                                                      R41
MSCNID   DS    0XL1                SCAN REQUEST FLAG                R41
MSCNRTN  DS    A                   SCAN ROUTINE ADDRESS             R41
MSCNSET  DS    A                   SCAN SETUP INSTRUCTION           R41C
                                     *** EXECUTED ***               R41
MEVNTID  DS    0XL1                EVENT REQUEST FLAG          @OZ32567
MSCNBASE DS    A                   SCAN COMMON SUBROUTINE BASE      R41
MSCNEXT  EQU   *                   NEXT SCAN TABLE ENTRY            R41
MSCNTSIZ EQU   *-MSCANTAB          SIZE OF SCAN TABLE ENTRY         R41
         SPACE 1                                                    R41
HASPRTAM CSECT                                                      R41
         SPACE 2                                                    R41
MSCANTBL DS    0F                                                   R41
         SPACE 1                                                    R41
         DC    AL1(MSCNBACT),AL3(MDCTSCAN)                          R41
         ICM   MDCT,15,MBSCACT                   ACTIVE BSC LINE    R41
         DC    AL1(0),AL3(RTAMBSUB)                  DCT SCAN  @OZ32567
         SPACE 1                                                    R41
         DC    AL1(MSCNSLOG),AL3(MSALGSCN)                          R41
         ICM   MDCT,15,MSNALOG                   ACTIVE SNA LOGON   R41
         DC    AL1(0),AL3(RTAMVSUB)                  DCT SCAN  @OZ32567
         SPACE 1                                                    R41
         DC    AL1(MSCNSLNE),AL3(MSLNESCN)                          R41
         ICM   MDCT,15,MSNALNE                   ACTIVE SNA LINE    R41
         DC    AL1(0),AL3(RTAMVSUB)                  DCT SCAN  @OZ32567
         SPACE 1                                                    R41
         DC    AL1(MSCNSIDL),AL3(MSIDLSCN)                          R41
         ICM   MDCT,15,MSNAIDL                     IDLE SNA LINE    R41
         DC    AL1(0),AL3(RTAMVSUB)                  DCT SCAN  @OZ32567
         SPACE 1                                                    R41
         DC    AL1(MSCNUNIT),AL3(MUNITSCN)                          R41
         B     MSCAN                             STARTED ($S CMD)   R41
         DC    AL1(0),AL3(RTAMBSUB)                 UNIT SCAN  @OZ32567
         SPACE 1                                                    R41
         DC    AL1(0),AL3(MLOGPROC)                                 R41
         ICM   MDCT,15,MLOGQUE                   LOGON DCT EXIT &   R41
         DC    AL1(0),AL3(RTAMVSUB)        ACB COMPLETION SCAN @OZ32567
         SPACE 1                                                    R41
         DC    AL1(0),AL3(MICEPROC)                                 R41
         ICM   MICE,15,MICEQUE                   ICE EXIT SERVICE   R41
         DC    AL1(0),AL3(RTAMVSUB)                    SCAN    @OZ32567
         SPACE 1                                                    R41
         DC    AL1(MSCNRAT),AL3(MRATPROC)                           R41
         ICM   WA,15,MSNALOG                  REMOTE AUTOLOGON @OZ32567
         DC    AL1(MEVNCKPT),AL3(RTAMVSUB)             SCAN    @OZ32567
         SPACE 1                                                    R41
MSCANEND DS    0H                                END OF SCAN TABLE  R41
         TITLE 'HASP LINE MANAGER -- CATASTROPHIC ERROR EXITS'      R41
***********************************************************************
*                                                                     *
*        C A T A S T R O P H I C   E R R O R   E X I T S              *
*                                                                     *
***********************************************************************
         SPACE 3                                                    R41
M01     $ERROR                     NON-ZERO DCT RJE BUFFER COUNT    R41
         SPACE 3                                                    R41
M03A     STM   R0,R15,M03SAVE                                  @OZ49689
M03     $ERROR                     CONTROL BLOCK SETUP LOGIC ERROR  R41
M03SAVE  DC    16F'0'              M03 REG SAVE AREA           @OZ49689
         SPACE 3                                                    R41
*                                  THIS LINE DELETED BY APAR   @OZ45801
       TITLE 'HASP LINE MANAGER -- SUBROUTINE TO REQUEST SHARED QUEUES'
         SPACE 1                                               @OZ32567
***************************************************************@OZ32567
*                                                              @OZ32567
*  LINE MANAGER -- ROUTINE TO QUEUE A BUFFER TO THE $RJECHEQ   @OZ32567
*                  AND POST THE CHECKPOINT PROCESSOR.          @OZ32567
*  ENTERED FROM MSIGNON, MDISCON AND MSNALPAR IF THE SHARED    @OZ32567
*  QUEUES ARE NOT OWNED (MEVNCHKPT IS NOT ON).                 @OZ32567
*  ON COMPLETION THE LINE MANAGER BRANCHES TO MBUFNEXT TO      @OZ32567
*  PROCESS THE NEXT BUFFER ON ITS CHANNEL END QUEUE (MBUFQUE). @OZ32567
*  MBUF CONTAINS THE ADDRESS OF THE BUFFER TO BE RE-QUEUED.    @OZ32567
*                                                              @OZ32567
***************************************************************@OZ32567
         SPACE 1                                               @OZ32567
MREQBUF  L     R0,$RJECHEQ         GET FIRST BUF ON $RJECHEQ   @OZ32567
MQRETRY  ST    R0,BUFCHAIN         CHAIN QUEUE TO MBUF         @OZ32567
         CS    R0,MBUF,$RJECHEQ    ATTEMPT TO QUEUE BUFFER     @OZ32567
         BNE   MQRETRY             RETRY IF NOT SUCCESSFUL     @OZ32567
         TM    BUFTYPE,BUFTP+BUFRPL  IF NOT SNA BUFFER         @OZ48702
         BNO   MQRSTR                 ATTEMPT TO RSTR. CHKPT.  @OZ48702
         MVI   RPLACTIV-RPLDSECT(MBUF),X'40' MARK RPL REQ.     @OZ48702
         B     MQPOST              POST CHECKPOINT             @OZ48702
MQRSTR   CLI   IOBECBCC,X'00'      NEED TO RESTORE...          @OZ48702
         BNE   MQCOUNTS            NO, NOT ZERO, CONTINUE      @OZ32567
         MVI   IOBECBCC,X'FF'      RESTORE COMPLETION CODE     @OZ32567
MQCOUNTS DS    0H                  RESET COUNTS                @OZ32567
         LH    R0,$EXCPCT          RETURN MASTER I/O COUNT     @OZ32567
         A     R0,=F'1'              TO PREVIOUS VALUE         @OZ32567
         STH   R0,$EXCPCT          STORE VALUE IN HCT          @OZ32567
         NI    MDCTATTN,255-MDCTIMER  RESET TIMER REQUEST      @OZ32567
         SLR   R0,R0               CLEAR R0                    @OZ32567
         IC    R0,DCTBUFCT         RETURN DCT I/O COUNT        @OZ32567
         A     R0,=F'1'              TO PREVIOUS VALUE         @OZ32567
         STC   R0,DCTBUFCT         STORE IN LINE DCT           @OZ32567
         L     R0,MDCTSXCP         RETURN SESSION EXCP         @OZ32567
         SL    R0,=F'1'              COUNT TO PREVIOUS         @OZ32567
         ST    R0,MDCTSXCP             VALUE IN DCT            @OZ32567
         TM    MSEQTYPE,MCPUSEQ    CHECK FOR M/L BUFFER        @OZ46465
         BNO   MQPOST              NOT M/L, SKIP SEQ UPDATE    @OZ46465
         L     MCODE,MDCTCODE      GET ADDRESSABILITY TO       @OZ46465
         USING MCODSECT,MCODE        CODE TABLE                @OZ46465
         LA    R15,TPBUFST         GET POINTER TO DATA         @OZ46465
         CLC   MSOHSTX,0(R15)      CHECK FOR TEXT              @OZ46465
         BE    MQRCVSEQ            TEXT, CHECK FOR SEQ UPDATE  @OZ46465
         CLC   MDLESTX,0(R15)      CHECK FOR TEXT              @OZ46465
         BNE   MQPOST              NOT TEXT, SKIP SEQ UPDATE   @OZ46465
MQRCVSEQ TM    2(R15),X'30'        CHECK FOR IGNORE OR RESET   @OZ46465
         BNZ   MQPOST              DO NOT UPDATE RECEIVE SEQ   @OZ46465
         IC    R15,MDCTRSEQ        RESET BLOCK                 @OZ46465
         LA    R15,15(,R15)          SEQUENCE COUNT            @OZ46465
         STC   R15,MDCTRSEQ            FOR MULTILEAVING        @OZ46465
         NI    MDCTRSEQ,X'0F'              SIGNON              @OZ46465
MQPOST   BAL   WA,MCKPOST          POST CHECKPOINT WRITER      @OZ46465
         B     MBUFNEXT            PROCESS NEW WORK            @OZ46465
         DROP  MCODE                                           @OZ46465
         SPACE 2                                               @OZ32567
*                                                              @OZ32567
*        LINE MANAGER -- ROUTINE TO POST CHECKPOINT PROCESSOR  @OZ32567
*                                                              @OZ32567
         SPACE 1                                               @OZ32567
MCKPOST  OI    MHASPECF+$EWBPOST,$EWFPOST  REQUEST IMMED POST  @OZ32567
         TM    MHASPECF+$EWBCKPT,$EWFCKPT  TEST CHECKPOINT     @OZ32567
         BOR   WA                  RETURN IF ALREADY POSTED    @OZ32567
         OI    MHASPECF+$EWBCKPT,$EWFCKPT  REQUEST CKPT POST   @OZ32567
        $POST $HASPECF,CKPW        POST CHECKPOINT PROCESSOR   @OZ32567
         BR    WA                  RETURN TO CALLER            @OZ32567
      TITLE 'HASP LINE MANAGER -- SESSION CONTROL SUBROUTINE'  @OZ32567
         SPACE 1                                                    R41
*                                  ADDRESSABILITY --                R41
         USING ICEDSECT,MICE            -- ICE                      R41
         USING RTAMVSUB,MBASE2,MBASE3   -- COMMON SNA SUBROUTINES   R41
         SPACE 2                                                    R41
*                                                                   R41
*        SUBROUTINE TO QUEUE AN ICE TO THE LINE MANAGER             R41
*                         ICE EXIT QUEUE                            R41
*                                                                   R41
         SPACE 1                                                    R41
MICEREQU IC    R0,MCOMMAND         GET EXIT ROUTINE ACTION CODE     R41
         SPACE 1                                                    R41
MICEREQ1 LR    WA,SAVE             USE WA TO ADDRESS L.M. WORK AREA R41
         SPACE 1                                                    R41
MICEREQ2 OI    MHASPECF+$EWBBUF,$EWFBUF   SHOW LINE MANAGER REQ     R41
         OI    MHASPECF+$EWBPOST,$EWFPOST  DISP ON NEXT BUFF POST   R41
         SLL   R0,24               SHIFT ACTION CODE AND CLEAR REG  R41
         L     R15,ICEXTCHN        GET ICE EXIT ROUT CHAIN FIELD    R41
         SPACE 1                                                    R41
MICECHCK LTR   R15,R15             CHECK IF ICE IS ALREADY QUEUED   R41
         BNZ   MICEUPDT            TRY TO UPDATE ACTION CODE IF YES R41
         L     R1,MICEQUE-PCEDSECT(,WA)  GET ICE QUEUE HEAD POINTER R41
         SPACE 1                                                    R41
MICERTRY LA    R14,0(,R1)          CLEAR HIGH ORDER BYTE AND        R41
         ALR   R14,R0               ADD REQ ACTION CODE TO IT       R41
         CS    R15,R14,ICEXTCHN    ATTEMPT TO STORE CHAIN ADDR      R41
         BNE   MICEUPDT            BRANCH IF CHANGED MEANWHILE      R41
         LR    R15,R14             RELOAD REG15 FOR RETRY CASE      R41
         CS    R1,MICE,MICEQUE-PCEDSECT(WA)  TRY TO PUT ICE ON Q    R41
         BER   ML                  PROCESS NEXT ICE IF CHAINED      R41
         B     MICERTRY            RETRY IF UNSUCCESSFUL            R41
         SPACE 1                                                    R41
MICEUPDT LA    R14,0(,R15)         PURIFY CHAIN ADDRESS OF ICE      R41
         ALR   R14,R0              ADD ACTION CODE TO CHAIN ADDR    R41
         CLR   R14,R15             CHECK SEVERITY OF NEW REQ ACTION R41
         BNHR  ML                  PROCESS NEXT ICE IF LOWER        R41
         CS    R15,R14,ICEXTCHN    ATTEMPT TO UPDATE ACTION CODE    R41
         BER   ML                  PROCESS NEXT ICE IF STORED       R41
         B     MICECHCK            RETRY IF UNSUCCESSFUL            R41
         EJECT                                                      R41
*                                                                   R41
*        SUBROUTINE TO FREE ICES                                    R41
*                                                                   R41
         SPACE 1                                                    R41
MICEMELT DS    0H                                                   R41
         LR    WA,ML               SAVE 1ST LEVEL RETURN ADDRESS    R41
         BAL   ML,MVFREPRG         PURGE SPECIAL SEQ BUFFER IF ANY  R41
         LR    ML,WA               RESTORE 1ST LEVEL RETURN ADDRESS R41
         ST    MBUF,ICEBUFAD       CLEAR ICE SPECIAL SEQ BUFFER PTR R41
         TM    ICESTAT,ICEDRAIN    TEST IF ICE FREE REQUIRED        R41
         BZR   ML                  JUST RETURN IF NOT               R41
         TM    ICEFLGS2,ICEFREEZ   TEST IF ICE FROZEN          @OZ45801
         BO    MICEDRY             BRANCH IF YES               @OZ45801
         LA    R0,VXIDISCN+VSEQDLGN  PRELOAD ICE-FREE SEQUENCE TYPE R41
         LH    R14,ICEOUTCT        TEST ICE OUTBOUND & INBOUND      R41
         AH    R14,ICEINCT          OUTSTANDING REQUEST COUNTS      R41
         BNZ   MICENDRY            REQUEUE ICE IF NOT ZERO     @OZ43332
         CL    R14,ICEXTCHN        CHECK IF ICE IS QUEUED      @OZ43332
         BE    MICEDRY             BRANCH IF NOT               @OZ43332
MICENDRY OI    MSTQE+IPOST,X'20'   IND TIMER SERVICE REQUIRED  @OZ43332
         B     MICEREQ1            ENTER COMMON ICE REQUEUE ROUTINE R41
         SPACE 1                                                    R41
MICEDRY  L     R15,ICEADCT         GET APPL LOGON DCT ADDR          R41
         USING DCTDSECT,R15        ALLOW LOGON DCT ADDRESSABILITY   R41
         LH    R0,MDCTSNCT         PICK UP LOGGED-ON SESSION COUNT  R41
         B     MICEFIND            REMOVE ICE FROM CHAIN       @OZ45801
         SPACE 1                                                    R41
MICEQMTY STH   R0,MDCTSNCT         CLEAR SESSION COUNT         @OZ45801
         ST    R0,MDCTICE          CLEAR ICE CHAIN                  R41
         TM    DCTSTAT,DCTDRAIN    TEST LOGON DCT STATUS            R41
         BO    MICELGNP            GO CLOSE ACB IF DRAINED          R41
         TM    DCTFLAGS,DCTRSTRT   TEST LOGON DCT STATUS            R41
         BZ    MICEFREE            GO FREE ICE IF NOT RESTARTING    R41
MICELGNP LR    MDCT,R15            POINT TO LOGON CURRENT LOGON DCT R41
         BAL   WA,MLOGSTOP          AND REQ CLOSE ACB SUBTASK POST  R41
         SPACE 1                                                    R41
MICEFREE TM    ICEFLGS2,ICEFREEZ   TEST IF ICE FROZEN          @OZ45801
         BO    MICENDEQ            BRANCH IF YES               @OZ45801
         L     R1,$ICETRAY         GET ADDR OF FIRST FREE ICE  @OZ45801
MICEDEQ  ST    R1,ICEAPCHN         CONNECT ICE TO FREE CHAIN        R41
         CS    R1,MICE,$ICETRAY    ATTEMPT TO UPDATE FREE CHAIN     R41
         BNE   MICEDEQ             RETRY IF UNSUCCESSFUL            R41
MICENDEQ SLR   MICE,MICE           SHOW ICE NO LONGER EXISTS   @OZ45801
         OI    MSCANIND,MSCNRAT    INDICATE RAT SCAN NEEDED ON THIS R41
         OI    MSCANREQ,MSCNRAT     OR NEXT LINE MANAGER DISPATCH   R41
         BR    ML                  RETURN TO CALLER                 R41
         EJECT                                                 @OZ45801
MICEFIND LA    R14,MDCTICE-ICEAPCHN+ICEDSECT PHONY ICE ADDR    @OZ45801
         SPACE 1                                               @OZ45801
         USING ICEDSECT,R14        TEMP ICE ADDRESSABILITY     @OZ45801
MICELOOP L     R1,ICEAPCHN         ADDR NEXT CHAINED ICE       @OZ45801
         CLR   R1,MICE             COMPARE ICE ADDRESS         @OZ45801
         BE    MICEREM             BRANCH IF OURS              @OZ45801
         LTR   R14,R1              TEST FOR END OF CHAIN       @OZ45801
         BNZ   MICELOOP            BRANCH IF NOT               @OZ45801
         TM    ICEFLGS2-ICEDSECT(MICE),ICEFREEZ ICE FROZEN...  @OZ45801
         BO    MICENDEQ            BRANCH IF YES               @OZ45801
         BAL   R8,M03A             ELSE, ERROR ICE NOT FOUND   @OZ45801
         SPACE 1                                               @OZ45801
MICEREM  MVC   ICEAPCHN,ICEAPCHN-ICEDSECT(MICE) DECHAIN ICE    @OZ45801
         BCTR  R0,0                DECREMENT SESSION COUNT     @OZ45801
         LTR   R0,R0               TEST SESSION COUNT          @OZ45801
         BZ    MICEQMTY            BRANCH IF NO MORE SESSIONS  @OZ45801
         STH   R0,MDCTSNCT         ELSE, UPDATE SESSION COUNT  @OZ45801
         B     MICEFREE             AND FREE THE ICE           @OZ45801
         DROP  R14                 RELEASE TEMP ICE BASE       @OZ45801
         EJECT                                                      R41
*                                                                   R41
*        DELAYED REQUEST SUBROUTINE                                 R41
*                                                                   R41
         SPACE 1                                                    R41
MICEGIBB LA    R14,VSEQGIBB        SET BB+EB RU CODE IN CASE NO BUF R41
         B     MICEGSND            REJOIN COMMON PROCESSING         R41
         SPACE 1                                                    R41
MICEGIEB LA    R0,VXIDGBUF+VSEQGIEB SET CODES EB AND BUFF FOR  @OZ64990
         L     WA,$MLLMPCE           PROCESSING BY LINE MGR    @OZ64990
         B     MICEREQ2               AND BRANCH TO QUEUE ICE  @OZ64990
         SPACE 1                                                    R41
MICEGICD TM    ICEFLAGS,ICECHDIR   TEST FOR CD ALREADY PENDING      R41
         BO    MVFREPRG            BR IF YES-- FREE ANY BUFFER      R41
         LA    R14,VSEQGICD        SET CD RU CODE IN ICE            R41
         SPACE 1                                                    R41
MICEGSND LTR   MBUF,MBUF           TEST BUFFER ADDRESS              R41
         BNZ   MICEGHAV            BRANCH IF ALREADY HAVE BUFFER    R41
         SPACE 1                                                    R41
MICEGBUF LR    WA,R14              SAVE RU TYPE CODE AROUND $GETBUF R41
        $GETBUF TYPE=VTAM          TRY TO GET BUFFER FOR NULL RU    R41
         BNZ   MICEGTBF            BRANCH IF SUCCEEDED              R41
         LA    R0,VXIDGBUF(,WA)    ELSE PUT NULL RU CODE IN R0      R41
         L     WA,$MLLMPCE         POINT TO LINE MANAGER WORK AREA  R41
         B     MICEREQ2             AND REQUEUE ICE TO LINE MANAGER R41
MICEGTBF LR    R14,WA              RESTORE NULL RU TYPE CODE        R41
         LR    MBUF,R1             MOVE NEW BUFFER TO RPL BASE REG  R41
         USING RPLDSECT,MBUF        AND SHOW RPL ADDRESSABLE        R41
         ST    MICE,RPLICE                INITIALIZE                R41
         L     R1,ICEADCT                  ICE AND ACB              R41
         MVC   RPLDACB,DCTACB-DCTDSECT(R1)  ADDRESSES               R41
         CLM   R14,1,MICEGPND+VSEQGCLS  TEST DEFERRED BUF REQ TYPE  R41
         BE    MICECBLD            BRANCH IF FOR 'CLSDST'           R41
         SPACE 1                                                    R41
MICEGHAV LA    R1,MICEGPND(R14)    POINT TO DESIRED SESSION FLAGS   R41
         OC    ICEFLAGS,0(R1)      SET DESIRED FLAGS IN ICE         R41
         MVC   RPLCNTDF(3),MSNADATA  CHANGE RU TYPE TO DATA         R41
         OI    ICESNDST,ICEOCPND   FORCE 'ONLY IN CHAIN'            R41
         XC    RPLRLEN,RPLRLEN     SET NULL R.U. LENGTH             R41
         MVI   RPLSRTYP,RPLNFSYN   SET STYPE = REQUEST AND     @OZ32746C
                                   RTYPE = NDFSYN,NDFASY,NRESP @OZ32746
         MVI   RPLVTFL2,RPLSCHED   SET POST=SCHED, DEFINITE RESP    R41
         NI    RPLOPT12,255-RPLFMHDR  RESET FM HEADER INDICATOR     R41
         B     MVRPLOCH            GO SEND CD OR EB UNDER L.M.      R41
         SPACE 2                                                    R41
MICEGPND DS    0C                  NULL R.U. PENDING ICE FLAGS      R41
         DC    AL1(ICEBBPND+ICEEBPND)  BEG/END BRKT PENDING         R41
         DC    AL1(ICEEBPND)       END BRACKET      PENDING         R41
         DC    AL1(ICECHDIR)       CHANGE DIRECTION PENDING         R41
         DC    AL1(VSEQGCLS)       CLSDST PENDING (NOT AN ICE FLAG) R41
         SPACE 2                                                    R41
         DROP  MBUF                RELEASE BUFFER ADDRESSABILITY    R41
         EJECT                                                      R41
*                                                                   R41
*        SESSION TERMINATION SUBROUTINES                            R41
*                                                                   R41
         SPACE 2                                                    R41
*                                                                   R41
*        SESSION DRAIN ENTRY -- CLOSE AT NEXT END BRACKET           R41
*                                                                   R41
         SPACE 1                                                    R41
MICETRAP OI    ICEFLGS2,ICEQUIES   CLOSE SESS. AFTER END BKT.  @OZ48863
         TM    ICESTAT,ICEALLOC    TEST SESSION STATUS              R41
         BOR   ML                  RETURN IF STILL ALLOCATED        R41
         TM    ICEFLAGS,ICEBRCKT   TEST SESSION BRACKET STATUS      R41
         BNZR  ML                  RETURN IF BRACKET STILL ACTIVE   R41
         SPACE 3                                                    R41
*                                                                   R41
*        SESSION ABORT ENTRY -- CLOSE IMMEDIATELY                   R41
*                                                                   R41
         SPACE 1                                                    R41
MICEABRT OI    ICESTAT,ICEDRAIN+ICECLOSE  REQ 'CLSDST' & FREE ICE   R41
         L     R15,ICERDCT         GET ADDRESS OF REMOTE DCT IF ANY R41
         USING DCTDSECT,R15        USE TEMP RMTE DCT ADDRESSABILITY R41
         SPACE 2                                                    R41
*        TRY TO LOCATE A SPECIAL SEQUENCE BUFFER                    R41
         SPACE 1                                                    R41
         SLR   MBUF,MBUF           CLEAR CURRENT BUFFER REGISTER    R41
         L     R0,ICEBUFAD         TEST SPECIAL SEQUENCE            R41
         LTR   R0,R0                BUFFER ADDRESS                  R41
         BNZ   MICEABUF            IF HAVE ONE, FREE ALL DCT BUFRS  R41
         L     R14,ICESDCT         GET 1ST SUSPENDED REMOTE DCT     R41
         LTR   R15,R15             TEST REMOTE DCT ADDRESS          R41
         BZ    MICEADCZ            GO ABORT SUSPENDS IF NONE        R41
         ICM   MBUF,7,DCTBUFAD+1   TEST DCT BUFFER ADDRESS          R41
         USING RPLDSECT,MBUF       SHOW BUFFER ADDRESSABLE          R41
         BZ    MICEASPQ            GO ABORT SUSPS IF NONE           R41
         ST    MBUF,ICEBUFAD       KEEP FIRST BUF FOR 'CLSDST' USE  R41
         LR    WA,MBUF             SAVE BUFFER POINTER         @OZ48702
         L     MBUF,RPLNEXT        GET NEXT DCT-OWNED BUFFER IF ANY R41
         ST    R0,RPLNEXT-RPLDSECT(,WA) CLEAR NEXT-POINTER     @OZ48702
         B     MICEABF0            GO ADJUST INBND CIRC IF NEEDED   R41
         EJECT                                                      R41
*                                                                   R41
*        SESSION ABANDON ENTRY -- FREE WITHOUT CLOSING              R41
*                                                                   R41
         SPACE 1                                                    R41
MICEABDN OI    ICESTAT,ICEABORT+ICEDRAIN  FREE ICE WITHOUT 'CLSDST' R41
         SPACE 2                                                    R41
*                                                                   R41
*        SESSION HOLD ENTRY -- PURGE QUEUES AND RESTRICT USE        R41
*                                                                   R41
         SPACE 1                                                    R41
MICEAHLD OI    ICESTAT,ICEHOLD     BLOCK ALLOCATION TO DATA STREAMS R41
         L     R15,ICERDCT         GET REMOTE DCT ADDRESS IF ANY    R41
         SPACE 2                                                    R41
*        PURGE RESIDUAL BUFFERS                                     R41
         SPACE 1                                                    R41
MICEABUF LTR   R15,R15             TEST REMOTE DCT ADDRESS          R41
         BZ    MICEABF2            BRANCH IF NONE                   R41
         ICM   R0,7,DCTBUFAD+1     TEST 1ST DCT-OWNED BUFFER ADDR   R41
         BZ    MICEABF2            BRANCH IF NONE                   R41
         LA    MBUF,0(,MBUF)       PURIFY AND TEST                  R41
         LTR   MBUF,MBUF            CURRENT BUFFER ADDRESS          R41
         BNZ   MICEABFD            BRANCH IF HAVE A CURRENT BUFFER  R41
         LR    MBUF,R0             ELSE GET ADDR OF DCT-OWNED BUFS  R41
MICEABFD CLM   MBUF,7,DCTBUFAD+1   COMPARE CURRENT BUF & DCT ANCHOR R41
         BE    MICEABF0            BRANCH IF SAME                   R41
         MVC   RPLNEXT,DCTBUFAD    ELSE CHAIN RDCT'S BUFS TO CURRNT R41
         SPACE 1                                                    R41
MICEABF0 TM    MDCTSEL,DCTPOUTB    TEST DIRECTION BIT               R41
         BO    MICEABF1            GO PURGE ANY 2ND BUF IF OUTBND   R41
         L     R0,ICEINLM          ELSE UPDATE INBOUND              R41
MICEABFR LR    R1,R0                CIRCULATION (NO. OF DATA        R41
         BCTR  R1,0                  OR SYN DFC INBOUND RPLS ON     R41
         CS    R0,R1,ICEINLM          RDCT, ICE, AND L.M. WORK Q)   R41
         BNE   MICEABFR            RETRY UNTIL UPDATE SUCCESSFUL    R41
         SPACE 1                                                    R41
MICEABF1 XC    DCTBUFAD,DCTBUFAD   CLEAR DCT BUFFER ANCHOR          R41
         SPACE 1                                                    R41
MICEABF2 LR    WA,ML               SAVE 1ST LEVEL RETURN ADDRESS    R41
         BAL   ML,MVFREPRG         PURGE CURRENT AND DCT-OWNED BUFS R41
         LR    ML,WA               RESTORE 1ST LEVEL RETURN ADDRESS R41
         SPACE 2                                                    R41
         DROP  MBUF                RELEASE RPL BUFR ADDRESSABILITY  R41
         EJECT                                                      R41
*                                                                   R41
*        ABORT SUSPENDED STREAMS   (ENTRY USED BY END BRACKET)      R41
*                                                                   R41
         SPACE 1                                                    R41
MICEAEB  DS    0H                  END BRACKET ENTRY POINT          R41
         SPACE 1                                                    R41
         SLR   R0,R0               LOAD ZERO FOR FIELD CLEARING     R41
         L     R14,ICESDCT         GET 1ST SUSPENDED REMOTE DCT     R41
         L     R15,ICERDCT         TEST REMOTE                      R41
         LTR   R15,R15              DCT ADDRESS                     R41
         BZ    MICEADCZ            IF UNALLOCATED GO ABORT SUSPNDS  R41
         SPACE 2                                                    R41
*        ABORT CURRENT REMOTE DCT                                   R41
         SPACE 1                                                    R41
MICEASPQ ST    R14,MDCTSDCT        ADD CURRENT RDCT TO SUSP QUEUE   R41
         ST    R0,ICERDCT          CLEAR CURRENT REMOTE DCT ADDRESS R41
         SPACE 2                                                    R41
*        ABORT SUSPENDED STREAMS                                    R41
         SPACE 1                                                    R41
MICEADCT OI    MDCTSTAT,DCTABORT   FORCE PROCESSOR ABORT            R41
         OI    DCTFLAGS,DCTRSTRT+DCTBKSP  RESTART JOB               R41
         NI    DCTFLAGS,255-DCTSTOP   RESET STOP BIT JUST IN CASE   R41
         NI    MDCTSTAT,255-DCTPSUSP  RESET STREAM SUSPENDED INDIC  R41
         ST    R0,MDCTICE          CLEAR DCT ICE POINTER            R41
         L     R1,DCTPCE           GET ADDRESS OF ASSOCIATED PCE    R41
         SPACE 1                                                    R41
        $POST  (R1),(IO,WORK)      POST PROCESSOR FOR IO AND WORK   R41
         SPACE 1                                                    R41
         L     R14,MDCTSDCT        GET NEXT SUSPENDED RDCT          R41
         ST    R0,MDCTSDCT         CLEAR SUSPENDED DCT CHAIN PTR    R41
         SPACE 1                                                    R41
MICEADCZ LTR   R15,R14             TEST ADDRESS                     R41
         BNZ   MICEADCT            BRANCH TO ABORT IF RDCT EXISTS   R41
         ST    R15,ICESDCT         SHOW SUSPEND QUEUE EMPTY         R41
         SPACE 2                                                    R41
*        RESET ICE STATUS                                           R41
         SPACE 1                                                    R41
         NI    ICESTAT,255-ICEALLOC  RESET                          R41
         NI    ICEFLGS2,255-ICESIGNL-ICEOUTBK-ICEBREAK  ICE    @OZ29180
         MVI   ICERCVST,ICENOFMH      STATUS                        R41
         MVI   ICESNDST,ICENOFMH       BYTES                        R41
MICEADED NI    ICEFLAGS,ICECNECT   RESET DIRECTION AND BRACKET FLGS R41
         EJECT                                                      R41
*        TEST FOR SESSION DRAIN REQUESTED                           R41
         SPACE 1                                                    R41
         TM    ICESTAT,ICEDRAIN+ICECLOSE+ICEABORT  TEST ICE    @OZ77500
         BNZ   MICEAFRQ            GO CLEAR ICE QUEUES         @OZ77500
         L     R15,ICELDCT         GET LINE DCT ADDRESS        @OZ77500
         LTR   R15,R15             TEST FOR SESSION DISC.      @OZ77500
         BZ    MICECLOS            BRANCH IF ALREADY DISC.     @OZ77500
         TM    MDCTSTAT,DCTSOFF    TEST LINE DCT STATUS             R41
         BO    MICEADRN            GO CLEAR ICE QUEUES IF DRAINING  R41
         TM    ICEFLGS2,ICEQUIES   WAIT FOR SESSION QUIESCE    @OZ48863
         BO    MICEADRN             GO CLEAR ICE FOR DRAIN     @OZ48863
         LR    MDCT,R15            COPY LINE DCT ADDR TO MDCT       R41
         B     MVREQJOT            GO SEARCH FOR NEXT STREAM        R41
         DROP  R15                 DISCARD TEMP DCT ADDRESSABILITY  R41
         SPACE 1                                                    R41
MICEADRN OI    ICESTAT,ICEDRAIN+ICECLOSE  PROPAGATE DRAIN TO ICE    R41
         SPACE 2                                                    R41
*        CLEAR ICE INBOUND & OUTBOUND QUEUES                        R41
         SPACE 1                                                    R41
MICEAFRQ LR    WA,ML               SAVE 1ST LEVEL RETURN ADDRESS    R41
         BAL   ML,MVFREEOQ         CLEAR OUTBOUND QUEUE             R41
         BAL   ML,MVFREEIQ         CLEAR INBOUND  QUEUE, AFTER 1ST  R41C
                                    PURGING REMOTE CONSOLE REQUESTS R41
         LR    ML,WA               RESTORE 1ST LEVEL RETURN ADDRESS R41
         LA    R0,VXIDISCN+VSEQDLNE  PRE-LOAD DISCONNECT CODE       R41
         L     WA,$MLLMPCE         GET POINTER TO L.M. WORK AREA    R41
         CLI   PCEID+1,PCEMLMID    IS THIS THE LINE MANAGER..  @OZ41311
         BNE   MICEREQ2            QUEUE TO L.M. FOR DISCONN IF NOT R41
         EJECT                                                      R41
*                                                                   R41
*        SESSION DISCONNECT SUBROUTINE                              R41
*                                                                   R41
         SPACE 1                                                    R41
MICEDISC DS    0H                                                   R41
         SPACE 2                                                    R41
         $QSUSE TYPE=TEST          TEST SHARED QUEUES STATUS   @OZ32567
         BZ    MICERMSG              IF QUES OWNED, DISCONNECT @OZ32567
         LA    R0,VXIDISCN+VSEQDLNE  PRE-LOAD DISC CODE        @OZ32567
         BAL   WA,MCKPOST          ELSE POST CHKPT PROCESSOR   @OZ32567
         B     MICEREQ1            REQUEUE ICE ON EXIT QUEUE   @OZ32567
         SPACE 1                                                    R41
*        WRITE SESSION DISCONNECT MESSAGE                           R41
         SPACE 1                                                    R41
MICERMSG L     R14,ICELDCT         PICK UP LINE DCT ADDRESS    @OZ32567
         LTR   R14,R14             ICE ALLOC TO LINE...        @OZ29432
         BZ    MICECLOS            NO, CLOSE SESSION           @OZ29432
         USING DCTDSECT,R14        GET LINE DCT ADDRESSABILITY      R41
         TM    ICEFLAGS,ICECNECT   TEST SESSION STATUS              R41
         BZ    MICECLIX            BR IF NOT CONNECTED         @OZ29432
         L     R1,$MWORK           GET AREA ADDRESS                 R41
         MVC   0(L'MLGOFMSG,R1),MLGOFMSG  SETUP MSG TEXT            R41
         USING MLGOFMSG,R1         ESTABLISH MSG ADDRESSABILITY     R41
         MVC   MLGOFLNE,DCTDEVN    MOVE LINE NAME INTO MESSAGE      R41
         MVC   MLGOFSYM,ICESYMB    MOVE LUNAME TO MESSAGE           R41
         DROP  R1                  RELEASE MESSAGE BASE             R41
         $WTO  (R1),L'MLGOFMSG,JOB=NO,WAIT=NO,         ISSUE        R41X
               ROUTE=$TP+$LOG,CLASS=$NORMAL,PRI=$HI    MESSAGE      R41
         SPACE 2                                                    R41
*        ADD SESSION TOTALS TO LINE COUNTERS                        R41
         SPACE 1                                                    R41
         L     R14,ICELDCT         RELOAD LINE DCT ADDRESS          R41
         SLR   WA,WA               SET INITIAL INDEX TO ZERO        R41
         LA    R0,4                SET INDEX INCREMENT TO 4         R41
         LA    R1,L'MDCTOTAL-1     GET LOOP TERMINATION INDEX       R41
MICELTOT L     R15,MDCTOTAL(WA)    GET LINE TOTAL EVENT COUNT       R41
         AL    R15,ICETOTAL(WA)    ADD SESSION EVENT COUNT          R41
         ST    R15,MDCTOTAL(WA)    STORE NEW TOTAL COUNT            R41
         L     R15,MDCTSCNT(WA)    GET REMOTE TOTAL COUNT      @OZ27491
         AL    R15,ICETOTAL(WA)    ADD SESSION EVENT TOTAL     @OZ27491
         ST    R15,MDCTSCNT(WA)    STORE NEW EVENT COUNT       @OZ27491
         BXLE  WA,R0,MICELTOT      LOOP UNTIL ALL COUNTS TOTALED    R41
*              THIS LINE DELETED BY APAR NUMBER                @OZ27491
         SPACE 1                                                    R41
MICECLIX LH    R0,MDCTSNCT         GET LINE ALLOCATED ICE COUNT     R41
         BCT   R0,MICEDFND         CHECK AND DECREMENT COUNT        R41
         EJECT                                                      R41
*        DISCONNECT REMOTE IF LAST SESSION DISCONNECT               R41
         SPACE 1                                                    R41
         STH   R0,MDCTSNCT         CLEAR ALLOCATED ICE COUNT AND    R41
         ST    R0,MDCTICE           ZERO ALLOCATED ICE CHAIN        R41
         L     R15,MDCTDCT         GET ADDR OF 1ST REMOTE DCT       R41
         ST    R0,MDCTDCT          DISCONNECT REMOTE DCT CHAIN      R41
         SPACE 3                                                    R41
*        RESET REMOTE DCTS                                          R41
         SPACE 1                                                    R41
         USING DCTDSECT,R15        USE TEMP RMT DCT ADDRESSABILITY  R41
MICERDSC ST    R0,DCTDCB           CLEAR LINE DCT PTR IN REMOTE DCT R41
         NI    MDCTSTAT,255-DCTSINON-DCTSOFF  SHOW RMT SIGNED OFF   R41
         L     R15,MDCTDCT         GET PTR TO NEXT REMOTE DCT       R41
         LTR   R15,R15             TEST FOR END OF REMOTE CHAIN     R41
         BNZ   MICERDSC            LOOP UNTIL NO MORE REMOTES       R41
         DROP  R15                 DROP REMOTE DCT ADDRESSABILITY   R41
         SPACE 3                                                    R41
*        RESET RAT CONNECTIONS                                      R41
         SPACE 1                                                    R41
         USING RATDSECT,WA         USE TEMPORARY RAT ADDRESSABILITY R41
         L     WA,MDCTRAT          SAVE ADDRESS OF RAT ENTRY        R41
         TM    RATFLAGS,RATPILUN   LUNAME PERMANENT....        @OZ46756
         BO    MICESYMB            YES, DO NOT CLEAR.          @OZ46756
         MVI   RATSYMB,X'40'       CLEAR RAT LUNAME            @OZ46756
         MVC   RATSYMB+1(7),RATSYMB   TO BLANKS.               @OZ46756
MICESYMB DS    0H                                              @OZ46756
*              THIS LINE DELETED BY APAR NUMBER                @OZ27491
         TM    MDCTSTAT,DCTLEASE+DCTSHARE  TEST FOR SHARED LINE     R41
         BO    MICELDED            DON'T CLEAR RAT LINE PTR IF YES  R41
         XC    RATLDCT,RATLDCT     RESET RAT LINE DCT POINTER       R41
         DROP  R14                 RELEASE LINE DCT ADDRESSABILITY  R41
         EJECT                                                 @OZ64289
*        INDICATE SIGN-OFF IN CHECKPOINT RECORD                     R41
         SPACE 1                                                    R41
*              THIS LINE DELETED BY APAR NUMBER                @OZ32567
MICELDED LR    R1,WA               COPY RAT ADDRESS            @OZ32567
         SL    R1,$RATABLE         WA = (RMT NUMBER -1) * RATTLE    R41
         LR    R15,R1              MULTIPLY                         R41
         ALR   R15,R1               BY                              R41
         ALR   R15,R1                THREE                          R41
         SLR   R14,R14             DIVIDE BY RATTLE                 R41
         D     R14,=A(RATTLE)       AND BY 8 GIVING OFFSET TO       R41
         D     R14,=A(8)             BYTE (QUOT) AND BIT (REMAIN)   R41
         AL    R15,$RMTSON         R15 = BYTE ADDR OF SIGNON BITS   R41
         L     R0,=A(-QUEBUSY*X'2000'-1)   GET BITS TO CLEAR BUSY   R41
         SRL   R0,0(R14)           SHIFT TO BIT OFFSET              R41
         STH   R0,MSONWORK         STORE FOR CLEAR                  R41
         NC    0(2,R15),MSONWORK   INDICATE REMOTE OFF SYSTEM       R41
         SPACE 1                                               @OZ64289
         L     R3,MCLOCK           GET CURRENT TIME            @OZ64289
         TM    RATFLAGS,RATSRMT+RATALM TEST FOR AUTOLOGON MODES     R41
         BZ    MICEDTIM            NO, BRANCH USE CURRENT TIME      R41
         AH    R3,=H'58'           ELSE, DELAY RETRY 1 MIN     @OZ64289
         SPACE 1                                               @OZ64289
         CLI   ICEINDEX,VSEQALOG         IF AUTOLOGON          @OZ64289
         BL    MICEDTIM                   SEQUENCE IS          @OZ64289
         CLI   ICEINDEX,VSEQALOG+15        PENDING,            @OZ64289
         BH    MICEDTIM                     THEN RESET         @OZ64289
         NI    RATFLAGS,FF-RATSRMT-RATALM    RAT FLAGS         @OZ64289
         SPACE 1                                               @OZ64289
         L     R1,$MWORK                    ISSUE              @OZ64289
         MVC   0(L'MALMSG1,R1),MALMSG1       AUTOLOGON         @OZ64289
         MVC   MALMSGR-MALMSG1(,R1),RATNAME   FAILED           @OZ64289
        $WTO   (R1),L'MALMSG1,WAIT=NO,JOB=NO,  MESSAGE         @OZ64289X
               ROUTE=$LOG+$TP+$ERR,CLASS=$ALWAYS,PRI=$HI       @OZ64289
         SPACE 1                                               @OZ64289
MICEDTIM ST    R3,RATIMER          STORE TIME OFF VALUE        @OZ64289
         L     MDCT,ICELDCT        GET LINE DCT ADDRESS        @OZ27491
         LR    WA,ML               SAVE 1ST LEVEL RETURN ADDR  @OZ27491
         BAL   ML,MSMFDISC         GO DO SMF PROCESSING        @OZ27491
         LR    ML,WA               RESTORE RETURN ADDRESS      @OZ27491
         EJECT                                                 @OZ64289
*        WRITE REMOTE SIGN-OFF MESSAGE                              R41
         SPACE 1                                                    R41
         L     R14,ICELDCT         RE-LOAD LINE DCT POINTER         R41
         USING DCTDSECT,R14        RE-ESTABLISH DCT ADDRESSABILITY  R41
         L     WA,MDCTRAT          RESTORE ADDRESS OF RAT      @OZ27491
         XC    MDCTRAT,MDCTRAT     SHOW REMOTE DISCONNECTED    @OZ27491
         TM    MDCTSTAT,DCTSINON   TEST FOR CONNECTED REMOTE        R41
         BZ    MICELDSC            BR IF NO, SKIP MESSAGE           R41
         L     R1,$MWORK           GET MESSAGE WORK AREA ADDR       R41
         MVC   0(L'MDSCMSG,R1),MDSCMSG  MOVE MSG TO WORK AREA       R41
         MVC   MDSCRMT-MDSCMSG(L'MDSCRMT,R1),RATNAME AND RMTID      R41
         $WTO  (R1),L'MDSCMSG,JOB=NO,WAIT=NO,  ISSUE DISCONNECT,,,  R41C
               ROUTE=$LOG+$ERR+$TP,CLASS=$ALWAYS,PRI=$HI ..MESSAGE  R41
         SPACE 1                                               @OZ64289
*        REMOVE LINE FROM ACTIVE QUEUE                              R41
         SPACE 1                                                    R41
MICELDSC L     R14,ICELDCT         RE-LOAD LINE DCT ADDRESS         R41
         L     R1,MDCTADCT         GET POINTER TO NEXT ACTIVE LNE   R41
         LA    R15,MSNALNE-MDCTADCT+DCTDSECT  GET PHONY DCT POINTER R41
         USING DCTDSECT,R15        GET TEMP LINE DCT ADDRESSABILITY R41
MICELDSL L     R0,MDCTADCT         GET ALLOCATED LINE CHAIN POINTER R41
         CLR   R0,R14              COMPARE WITH OUR LINE            R41
         BE    MICELDEQ            BRANCH IF LINE POINTS TO OURS    R41
         LTR   R15,R0              TEST FOR END OF ALLOC LINE CHAIN R41
         BNZ   MICELDSL            BRANCH TO TEST NEXT LINE IF NOT  R41
         BAL   R8,M03A             ERROR IF LINE NOT FOUND     @OZ49689
MICELDEQ ST    R1,MDCTADCT         DISCONNECT LINE FROM CHAIN       R41
         DROP  R15                 RELEASE TEMP DCT ADDRESSABILITY  R41
         NI    MDCTSTAT,255-DCTSINON-DCTSOFF  SHOW RMT SIGNED OFF   R41
         SLR   WA,WA               DISCONNECT...                    R41
         ST    WA,ICELDCT          ...LINE DCT FORM ICE             R41
         EJECT                                                 @OZ64289
*        RELEASE LINE DCT IF DRAINED                                R41
         SPACE 1                                                    R41
         TM    DCTSTAT,DCTDRAIN    TEST FOR DRAIN STATUS PENDING    R41
         BZ    MICEDOFF            SHOW LINE IS OFF SYSTEM IF NOT   R41
         DROP  WA                  RELEASE RAT ADDRESSABILITY       R41
         SPACE 1                                                    R41
        $FREUNIT (R14)             FREE THE LINE DCT                R41
         LR    R14,R1              RELOAD LINE DCT ADDRESS          R41
         $QSUSE TYPE=TEST          TEST SHARED QUEUES STATUS   @OZ32567
         BZ    MICEDORM            QUES STILL OWNED, PROCEED   @OZ32567
         NI    MEVNTIND,255-MEVNCKPT QUES NOT OWNED, RESET IND @OZ32567
         SPACE 1                                                    R41
MICEDORM $DORMANT                  INDICATE DORMANT FUNCTION   @OZ32567
         B     MICECLOS            AND SIGN OFF REMOTE              R41
         SPACE 2                                                    R41
*        PLACE LINE ON IDLE LINE QUEUE                              R41
         SPACE 1                                                    R41
MICEDOFF L     R1,MSNAIDL          GET IDLE SNA LINE CHAIN PTR      R41
         ST    R1,MDCTADCT         CONNECT IDLE LINES TO OUR LINE   R41
         ST    R14,MSNAIDL         UPDATE LINE MANAGER IDLE CHAIN   R41
         OI    MSCANIND,MSCNRAT    INDICATE RAT SCAN NEEDED         R41
         B     MICECLOS            BRANCH TO INITIATE CLSDST SEQ    R41
         EJECT                                                      R41
MDSCMSG $MSG   203,'RMTXXXXX DISCONNECTED'  SNA REMOTE DISCONN MSG  R41
MDSCRMT  EQU   MDSCMSG+2,8         REMOTE NAME                      R41
         SPACE 2                                                    R41
MLGOFMSG $MSG  210,'SESSION XXXXXXXX LOGGED OFF LINEYYYY'           R41
MLGOFSYM EQU   MLGOFMSG+10,8       LUNAME                           R41
MLGOFLNE EQU   MLGOFMSG+30,8       LINE NAME                        R41
         SPACE 1                                                    R41
MALMSG1  $MSG  207,'RMTXXXXX -- AUTOLOGON FAILED'                   R41
MALMSGR  EQU   MALMSG1+2,L'RATNAME     REMOTE NAME                  R41
         SPACE 1                                               @OZ45801
MXITMSG  $MSG  208,'      SCHEDULED FOR XXXXXXXX SNA,VTAM,YY'  @OZ45801
MXITLUN  EQU   MXITMSG+22,8        LUNAME                      @OZ45801
MXITRC   EQU   MXITMSG+40,2        RETURN CODE                 @OZ45801
MXITID   EQU   MXITMSG+2,5         EXIT NAME                   @OZ45801
MXITWORK EQU   MXITMSG+2,1         WORK FIELD FOR UNPK         @OZ45801
         SPACE 1                                               @OZ45801
MSNAERRM $MSG  212,'SNA CRITICAL ERROR ON LUNAME  '            @OZ45801
MSNAELUN EQU   MSNAERRM+24,8                                   @OZ45801
         EJECT                                                      R41
*        REMOVE ICE FROM LINE DCT CHAIN                             R41
         SPACE 1                                                    R41
MICEDFND STH   R0,MDCTSNCT         UPDATE ALLOCATED ICE COUNT       R41
         L     R0,ICEALCHN         SAVE ADDRESS OF NEXT CHAINED ICE R41
         LA    R15,MDCTICE-ICEALCHN+ICEDSECT  GET PHONY ICE ADDRESS R41
         SPACE 1                                                    R41
         USING ICEDSECT,R15        PROVIDE TEMP ICE ADDRESSABILITY  R41
MICEDEAL L     R1,ICEALCHN         GET ADDRESS OF NEXT CHAINED ICE  R41
         CLR   R1,MICE             COMPARE WITH OUR ICE             R41
         BE    MICEDREM            BRANCH IF ICE POINTS TO OURS     R41
         LTR   R15,R1              CHECK FOR END OF CHAIN           R41
         BNZ   MICEDEAL            BRANCH TO TEST NEXT ICE          R41
         BAL   R8,M03A             ERROR IF ICE NOT FOUND      @OZ49689
MICEDREM ST    R0,ICEALCHN         DISCONNECT ICE FROM CHAIN        R41
         DROP  R14,R15             DROP TEMP ICE/LINE DCT BASE      R41
         SPACE 1                                                    R41
         XC    ICEALCHN,ICEALCHN   CLEAR ICE CHAIN POINTER          R41
         XC    ICELDCT,ICELDCT     CLEAR ICE LINE DCT POINTER       R41
         EJECT                                                      R41
*                                                                   R41
*        SESSION CLSDST SUBROUTINE                                  R41
*                                                                   R41
         SPACE 1                                                    R41
MICECLOS L     MBUF,ICEBUFAD       GET SPECIAL SEQ BUFFER ADDRESS   R41
         TM    ICESTAT,ICECLOSE    TEST IF CLSDST IS REQUIRED       R41
         BZ    MICEMELT            SKIP CLSDST ATTEMPT IF NOT       R41
         NI    ICEFLAGS,255-ICECNECT RESET SESSION CONNECT     @OZ29432
         TM    ICEINDEX,VSEQSPEC   IS ICE IN SPECIAL SEQUENCE STATE R41
         MVI   ICEINDEX,VSEQCLOS   INDICATE CLSDST SEQUENCE REQ     R41
         BZ    MICECLS0            NO, DON'T WAIT              @OZ45040
         L     R15,ICEADCT         YES, GET LOGON DCT AND      @OZ45040
         TM    MDCTSTAT-DCTDSECT(R15),DCTABORT TEST FOR ABORT  @OZ45040
         BNOR  ML                  WAIT FOR SEQ TO COMPLETE    @OZ45040
         LTR   MBUF,MBUF           IS THERE A BUFFER...        @OZ45040
         BZ    MICEMELT            NO, DON'T WAIT              @OZ45040
         CLI   RPLACTIV-RPLDSECT(R4),X'80' IS IT ON $RJECHEQ.  @OZ45040
         BNE   MICEMELT            NO, GO FREE IT              @OZ45040
         BR    ML                  YES-WAIT FOR COMPLETION     @OZ45040
MICECLS0 DS    0H                                              @OZ45040
         TM    ICESTAT,ICEABORT    TEST SESSION STATUS              R41
         BO    MICEMELT            SKIP CLSDST SEQ IF ABORTING      R41
         L     R15,ICEADCT         GET APPL LOGON DCT ADDR          R41
         TM    MDCTSTAT-DCTDSECT(R15),DCTABORT  TEST APPLIC STATUS  R41
         BO    MICEMELT            SKIP CLSDST SEQ IF ABORTING      R41
         LTR   MBUF,MBUF           TEST SPECIAL SEQ BUFFER ADDRESS  R41
         LA    R14,VSEQGCLS        SET CLSDST CODE IN CASE NO BUF   R41
         BZ    MICEGBUF            BRANCH IF NEED TO GET A BUFFER   R41
         SPACE 1                                                    R41
         USING RPLDSECT,MBUF       ALLOW RPL ADDRESSABILITY         R41
MICECBLD ST    MBUF,ICEBUFAD       STORE SPECIAL SEQ BUF ADDRESS    R41
         OI    ICESTAT,ICEABORT    PREVENT FURTHER CLSDST ATTEMPTS  R41
         MVC   RPLDCT+1(3),ICEADCT+1  MOVE LOGON DCT ADDR TO ICE    R41
         ST    MICE,RPLICE         STORE ICE ADDRESS IN RPL         R41
         MVI   RPLSEQTP,VSEQCLOS   INDICATE CLSDST SEQUENCE         R41
         MVI   RPLREQ,RPLCLOSE     SHOW RPL CLSDST REQUEST TYPE     R41
         MVC   RPLARG,ICECID       MOVE VTAM CID TO RPL             R41
         MVI   RPLEXTDS,0          SHOW NOT A BRANCH ENTRY REQ      R41
         B     MVRPLXEC            PASS REQUEST TO VTAM             R41
         SPACE 2                                                    R41
         DROP  MBUF                RELEASE RPL ADDRESSABILITY       R41
         EJECT                                                      R41
*                                                                   R41
*        SUBROUTINE TO REQUEST SESSION DELAY INTERVAL               R41
*                                                                   R41
         SPACE 1                                                    R41
MICETIME L     R1,MDCTRAT          GET TERMINAL RAT ENTRY ADDR      R41
         LH    R1,RATWTIME-RATDSECT(,R1)  GET TERMINAL WAIT TIME    R41
         LTR   R1,R1               WAIT TIME INTERVAL SPECIFIED     R41
         BNZ   MICEDLAY            USE TERMINAL VALUE IF YES        R41
         LH    R1,$WAITIME         GET INSTALLATION DEFAULT VALUE   R41
         SPACE 1                                                    R41
MICEDLAY AL    R1,MDCTIMOK         COMPUTE INTERVAL EXPIRATION TIME R41
         ST    R1,ICEWTIME         STORE IN ICE                     R41
         OI    ICESTAT,ICETIMER    SHOW ICE REQS WAIT TIME CHECK    R41
         BR    WA                  RETURN TO CALLER                 R41
         SPACE 2                                                    R41
         DROP  MICE                RELEASE ICE ADDRESSABILITY       R41
         TITLE 'HASP LINE MANAGER -- SMF RECORDING SUBROUTINES'     R41
*                                                                   R41
*        WRITE LINE START SMF RECORD SUBROUTINE                     R41
*                                                                   R41
         SPACE 1                                                    R41
MSMFSTRT DS    0H                  LINE START EVENT SMF RECORD      R41
         CLI   $NUMSMFB,2          CHECK SMF OPTIONS                R41
         BLR   ML                  RETURN IF NO SMF REQ             R41
        $GETSMFB WAIT=NO           TRY TO GET SMF BUFFER            R41
         BZR   ML                  RETURN IF FAILED TO GET BUFFER   R41
         USING SMFDSECT,R1         ESTABLISH SMF BUFFER ADDRESS     R41
         TM    MDCTTYPE,DCTPSNA    CHECK LINE TYPE             @OZ27491
         BO    MSMFSNA1            BRANCH IF SNA LINE          @OZ27491
         MVI   SMFRDW+1,SMF47LN2-SMFRDW  SET RECORD LENGTH          R41
         MVI   SMFHDRTY,SMFSSETP   SET START EVENT RECORD TYPE      R41
         MVI   SMF47EVT+1,SMFLINEV SET LINE EVENT TYPE              R41
         MVI   SMF47LN1+1,SMF47LN2-SMF47LN1  SET ID SECTION LENGTH  R41
         B     MSMFWRIT            BRANCH TO QUEUE SMF RECORD       R41
         SPACE 1                                               @OZ27491
*                                                                   R41
*        WRITE REMOTE DISCONNECT RECORD SUBROUTINE                  R41
*                                                                   R41
         SPACE 1                                                    R41
MSMFDISC DS    0H                  REMOTE DISCONN EVENT SMF RECORD  R41
         CLI   $NUMSMFB,2          CHECK SMF OPTIONS           @OZ27491
         BLR   ML                  RETURN IF NO SMF REQUIRED   @OZ27491
        $GETSMFB WAIT=NO           TRY TO GET SMF BUFFER            R41
         BZR   ML                  RETURN IF FAILED TO GET BUFFER   R41
         MVI   SMFSUBID+1,SMFLOGOF INDICATE LOGOFF EVENT       @OZ27491
         MVC   SMF53CTR,MDCTSCNT   MOVE REMOTE TOTAL COUNTS    @OZ27491
MSMFSNA2 MVI   SMFHDRTY,SMF53      SET SMF RECORD TYPE         @OZ27491
         MVC   SMF53ADP,=C'SNA'    SET LINE IDENTIFIER         @OZ27491
         MVI   SMFIDLEN+1,SMF53END-SMFIDSEC  ID SEC LENGTH     @OZ27491
         MVI   SMFRDW+1,SMF53END-SMFRDW  RECORD LENGTH         @OZ27491
         B     MSMFSNA5            GO FINISH RECORD            @OZ27491
         SPACE 1                                               @OZ27491
*                                                                   R41
*        WRITE LINE STOP RECORD SUBROUTINE                          R41
*                                                                   R41
         SPACE 1                                                    R41
MSMFSTOP DS    0H                  LINE DRAIN EVENT SMF RECORD      R41
         CLI   $NUMSMFB,2          CHECK SMF OPTIONS                R41
         BLR   ML                  RETURN IF NO SMF REQ             R41
        $GETSMFB WAIT=NO           TRY TO GET SMF BUFFER            R41
         BZR   ML                  RETURN IF FAILED TO GET BUFF     R41
         TM    MDCTTYPE,DCTPSNA    CHECK LINE TYPE             @OZ27491
         BO    MSMFSNA4            BRANCH IF SNA LINE          @OZ27491
         MVI   SMF48EVT+1,SMFLINEV SET LINE EVENT TYPE              R41
         MVC   SMF48CTR,MDCTOTAL   MOVE LINE EVENT COUNTS           R41
         EJECT                                                      R41
*                                                                   R41
*        LINE STOP SMF RECORD CODE                             @OZ27491
*                                                                   R41
         SPACE 1                                                    R41
MSMFTERM MVI   SMFRDW+1,SMF48END-SMFRDW  SET RECORD LENGTH          R41
         MVI   SMFHDRTY,SMFPSETP   SET STOP EVENT RECORD TYPE       R41
*              THIS LINE DELETED BY APAR NUMBER                @OZ27491
*              THIS LINE DELETED BY APAR NUMBER                @OZ27491
*              THIS LINE DELETED BY APAR NUMBER                @OZ27491
*              THIS LINE DELETED BY APAR NUMBER                @OZ27491
MSMFNSNA L     R15,DCTDCB          GET LINE ADAPTER ADDRESS         R41
         L     R15,DCBDEBAD-DCBDSECT(,R15)  FROM THE UCB            R41
         L     R15,DEBSUCBA-DEBDSECT(,R15)   AND STORE IT IN        R41
         MVC   SMF48ADP,UCBNAME-UCBDSECT(R15)  THE SMF RECORD       R41
         SPACE 3                                                    R41
*                                                                   R41
*        COMMON SMF RECORD WRITE ROUTINE                            R41
*                                                                   R41
         SPACE 1                                                    R41
MSMFWRIT MVI   SMFSSID+1,SMFHSPID  SET HASP SUBSYSTEM ID            R41
         LH    R0,SMFRDW           COMPUTE AND STORE LENGTH OF      R41
         SH    R0,=Y(SMFSSTRT-SMFRDW)  THAT PORTION OF THE RECORD   R41
         STH   R0,SMFSSLEN          FOLLOWING THE SUBSYSTEM HDR     R41
*              THIS LINE DELETED BY APAR NUMBER                @OZ27491
*              THIS LINE DELETED BY APAR NUMBER                @OZ27491
*              THIS LINE DELETED BY APAR NUMBER                @OZ27491
*              THIS LINE DELETED BY APAR NUMBER                @OZ27491
         ICM   R15,15,MDCTRAT      ANYTHING CONNECTED          @OZ27491
         BZ    MSMFNCON            SKIP IF NOT                 @OZ27491
         MVC   SMF48RMT,RATNAME-RATDSECT(R15) SET IDENTIFICATION    R41
MSMFNCON MVC   SMF48LIN,DCTDEVN    SET LINE NAME IN RECORD     @OZ27491
         MVC   SMF48PSW,MDCTPSWD   SET PASSWORD FROM LINE           R41
MSMFQBF $QUESMFB                   QUEUE THE SMF RECORD        @OZ27491
         BR    ML                  RETURN                      @OZ27491
         EJECT                                                 @OZ27491
MSMFSNA1 MVI   SMFSUBID+1,SMFSLINE INDICATE LINE EVENT         @OZ27491
         MVI   SMFRDW+1,SMF52END-SMFRDW  LENGTH OF RECORD      @OZ27491
         MVI   SMFHDRTY,SMF52      RECORD TYPE                 @OZ27491
         MVI   SMFIDLEN+1,SMF52END-SMFIDSEC  ID SEC LENGTH     @OZ27491
MSMFSNA5 ICM   R15,15,MDCTRAT      ANYTHING CONNECTED          @OZ27491
         BZ    MSMFSNA3            NO, SKIP NEXT               @OZ27491
         MVC   SMF52RMT,RATNAME-RATDSECT(R15)  REMOTE NAME     @OZ27491
MSMFSNA3 MVC   SMF52LIN,DCTDEVN    LINE NAME                   @OZ27491
         MVC   SMF52PSW,MDCTPSWD   LINE PASSWORD               @OZ27491
         MVI   SMFPROFF+1,SMFSUBID-SMFJMR  OFFSET TO PROD SECT @OZ27491
         MVI   SMFPRLEN+1,SMFIDSEC-SMFSUBID  PROD SEC LENGTH   @OZ27491
         MVI   SMFPRNUM+1,1        PRODUCT SECTION NUMBER      @OZ27491
         MVI   SMFIDOFF+1,SMFIDSEC-SMFJMR  OFFSET TO ID SECT   @OZ27491
         MVI   SMFIDNUM+1,1        ID SECTION NUMBER           @OZ27491
         MVC   SMFVERNO,=C'01'     VERSION NUMBER              @OZ27491
         MVC   SMFSYSNM,=C'JES2'   SUBSYSTEM NAME              @OZ27491
         B     MSMFQBF             GO QUEUE RECORD FOR OUTPUT  @OZ27491
MSMFSNA4 MVI   SMFSUBID+1,SMFPLINE INDICATE LINE EVENT         @OZ27491
         MVC   SMF53CTR,MDCTOTAL   MOVE LINE COUNTERS          @OZ27491
         B     MSMFSNA2            GO CONTINUE RECORD          @OZ27491
         DROP  R1                  RELEASE SMF ADDRESSABILITY  @OZ27491
         TITLE 'HASP LINE MANAGER -- LOGON/LINE DCT INITIATION/TERMINATC
               ION SUBROUTINES'                                     R41
*                                                                   R41
*        LINE/LOGON DCT BSC/SNA COMMON ALLOCATION SUBROUTINE        R41
*                                                                   R41
         SPACE 1                                                    R41
MLDCTGET DS    0H                                                   R41
        $GETUNIT (MDCT)            TRY TO ACQUIRE LOGON/LINE DCT    R41
         BZR   WA                  RETURN IF FAILED TO GET DCT      R41
         SPACE 1                                                    R41
        $ACTIVE                    INDICATE NEW ACTIVE FUNCTION     R41
         SPACE 1                                                    R41
         XC    MDCTOTAL,MDCTOTAL   CLEAR ALL EVENT COUNTERS         R41
         SPACE 1                                                    R41
         CLI   DCTDEVTP,DCTLOG     CHECK FOR LOGON DCT              R41
         BE    MLOGSTRT            INITIALIZE LOGON DCT IF YES      R41
         TM    MDCTTYPE,DCTPSNA    CHECK LINE DCT TYPE              R41
         BO    MSNASTRT            BRANCH IF SNA INTERFACE LINE     R41
         B     MBSCSTRT            BRANCH TO INIT BSC LINE DCT      R41
         SPACE 2                                                    R41
*                                                                   R41
*        LOGON/LINE DCT BSC/SNA COMMON DE-ALLOCATION SUBROUTINE     R41
*                                                                   R41
         SPACE 1                                                    R41
MLDCTREL OI    MSCANREQ,MSCNUNIT   REQ UNIT SCAN ON NEXT DISP       R41
         OI    MHASPECF+$EWBBUF,$EWFBUF   SHOW LINE MANAGER REQ     R41
         OI    MHASPECF+$EWBPOST,$EWFPOST  DISP ON NEXT BUFF POST   R41
         SPACE 1                                                    R41
MLDCTFRE DS    0H                                                   R41
         MVI   DCTBUFCT,0          FORCE OUTST BUFF COUNT ZERO      R41
        $FREUNIT (MDCT)            FREE THE LOGON/LINE DCT          R41
         $QSUSE TYPE=TEST          TEST SHARED QUEUES STATUS   @OZ32567
         BZ    MLDCTDRM            QUES STILL OWNED, PROCEED   @OZ32567
         NI    MEVNTIND,255-MEVNCKPT QUES NOT OWNED, RESET IND @OZ32567
         SPACE 1                                                    R41
MLDCTDRM $DORMANT                  INDICATE DORMANT FUNCTION   @OZ32567
         SPACE 1                                                    R41
         BR    WA                  RETURN TO CALLER                 R41
         EJECT                                                      R41
*                                                                   R41
*        SNA LOGON DCT INITIALIZATION AND ACB OPEN SUBROUTINE       R41
*                                                                   R41
         SPACE 1                                                    R41
MLOGSTRT DS    0H                  INITIALIZE SNA LOGON DCT         R41
        $GETBUF TYPE=VTAM          ACQUIRE AND INIT VTAM BUFFER     R41
         BZ    MLDCTREL            BRANCH IF FAILED FOR BUFFER      R41
         ST    R1,DCTBUFAD         STORE BUFFER ADDRESS IN DCT      R41
         SPACE 1                                                    R41
         NI    DCTFLAGS,DCTLOGAL   RESET FLAGS -EXCEPT LOGGING      R41
         MVI   MDCTSTAT,0          RESET LOGON DCT STATUS FLAGS     R41
         MVI   MDCTRALM,1          SET MAX ACT RCV ANY BUF CN  @OZ39964
         MVI   MDCTRQLM,5          SHOW MAX PRE-FORMATTED RCVS CNT  R41
*                                   AND GO POST ACB OPEN/CLOSE TASK R41
         SPACE 2                                                    R41
*                                                                   R41
*        VTAM ACB OPEN/CLOSE SUBTASK INTERFACE SUBROUTINE           R41
*                                                                   R41
         SPACE 1                                                    R41
MLOGPOST DS    0H                                                   R41
         L     R1,$VLOGQUE         GET POINTER OF LOGON DCT QUEUE   R41
MLOGPLOP ST    R1,MDCTADCT         CHAIN THIS LOGON DCT TO QUEUE    R41
         CS    R1,MDCT,$VLOGQUE    ATTEMPT TO UPDATE QUEUE POINTER  R41
         BNE   MLOGPLOP            RETRY IF UNSUCCESSFUL            R41
         SPACE 1                                                    R41
         LA    R1,$SNAECB          GET ADDR OF OPEN/CLOSE ACB       R41
         POST  (1)                  SUBTASK ECB AND POST FOR WORK   R41
         BR    WA                  RETURN TO CALLER                 R41
         EJECT                                                      R41
*                                                                   R41
*        SNA LOGON DCT TERMINATION AND ACB CLOSE SUBROUTINE         R41
*                                                                   R41
         SPACE 1                                                    R41
MLOGSTOP DS    0H                  TERMINATE SNA LOGON DCTS         R41
         TM    MDCTSTAT,DCTABORT   TEST FOR ABORT IN PROGRESS  @OZ38130
         BO    MLOGSPRA            YES, PROCESS RABF AND RQBF  @OZ38130
         L     R14,MDCTRQBF        CHECK RECEIVE-AHEAD         @OZ38130
         LTR   R14,R14              BUFFER QUEUE ANCHOR        @OZ38130
         BZ    MLOGSTP1            BRANCH IF NOTHING TO PURGE       R41
         LA    R1,0(R14)           PURIFY ADDR OF 1ST RPL      @OZ38130
MLOGSPRC LR    R15,R14             CURRENT RPL ADDR = NEXT RPL ADDR R41
         USING RPLDSECT,R15        USE TEMPORARY RPL ADDRESSABILITY R41
         MVI   RPLRTNCD,USFDAMGE   SIMULATE RETURN CODES FOR        R41
         MVI   RPLFDB2,USFCLOCC     REQUEST CANCELLED BY CLOSE      R41
         ICM   R14,15,RPLNEXT      MORE RPL'S TO PURGE...      @OZ38130
*              THIS LINE DELETED BY APAR NUMBER                @OZ38130
         BNZ   MLOGSPRC            LOOP TILL RECEIVE-AHEAD Q EMPTY  R41
         B     MLOGSQCE                                        @OZ38130
MLOGSPRA SR    R14,R14             SET TEST REG ZERO           @OZ38130
         ICM   R14,7,MDCTRABF+1    CHECK FOR REC. ANY BUFFERS  @OZ38130
         BZ    MLOGSTP1            BR IF NOTHING TO PURGE      @OZ38130
         LR    R1,R14              SAVE RABF POINTER           @OZ38130
MLOGSPRQ LR    R15,R14             GET NEXT RPL ADDR           @OZ38130
         USING RPLDSECT,R15        TEMP. RPL ADDRESSABILITY    @OZ38130
         MVI   RPLRTNCD,USFDAMGE   SIMULATE RETURN CODES FOR   @OZ38130
         MVI   RPLFDB2,USFCLOCC     REQUEST CANCELLED BY CLOSE @OZ38130
         MVC   RPLNEXT+1(3),RPLFCHN+1  REBUILD RPLNEXT CHAIN   @OZ38130
         ICM   R14,7,RPLFCHN+1          FOR QUEING ON RJECHEQ  @OZ38130
         BNZ   MLOGSPRQ            LOOP THRU ALL RECEIVE ANY'S @OZ38130
         ST    R14,MDCTRABF        CLEAR REC. ANY QUE POINTER  @OZ38130
MLOGSQCE L     R0,$RJECHEQ         GET LM WORK QUEUE POINTER   @OZ38130
MLOGSLOP ST    R0,RPLNEXT          ADD RPLS TO I/O COMPLETION QUEUE R41
         CS    R0,R1,$RJECHEQ      ATTEMPT TO UPDATE  QUEUE POINTER R41
         BNE   MLOGSLOP            RETRY IF UNSUCCESSFUL            R41
         ST    R14,MDCTRQBF        CLEAR RECEIVE-AHEAD QUE POINTER  R41
         OI    MSCANREQ,MSCNSLOG   SET SCAN REQ ON NEXT DSP    @OZ50378
         LR    R14,R1              SAVE RPL ADDRESS            @OZ50378
         B     MLOGSOFF            BYPASS DCT DISCONNECT       @OZ50378
         DROP  R15                 DISCARD TEMP RPL ADDRESSABILITY  R41
         SPACE 1                                                    R41
MLOGSTP1 L     R0,MDCTADCT         SAVE ADDR OF NEXT CHAINED DCT    R41
         LA    R15,MSNALOG-MDCTADCT+DCTDSECT SET UP PHONY LOGON DCT R41
         SPACE 1                                                    R41
         USING DCTDSECT,R15        TEMPORARY DCT ADDRESSABILITY     R41
MLOGSFND L     R1,MDCTADCT         GET ADDR OF NEXT LOGON DCT       R41
         CLR   R1,MDCT             IS THIS DCT POINTING TO OUR DCT  R41
         BE    MLOGSDEQ            BRANCH IF THIS IS PRECEDING DCT  R41
         LTR   R15,R1              CHECK FOR END OF CHAIN           R41
         BNZ   MLOGSFND            BRANCH TO TEST NEXT LOGON DCT    R41
         BAL   R8,M03A             ERROR IF DCT NOT FOUND      @OZ49689
MLOGSDEQ ST    R0,MDCTADCT         DISCONNECT DCT FROM CHAIN        R41
         DROP  R15                 RELEASE TEMPORARY DCT BASE       R41
         SPACE 1                                                    R41
MLOGSOFF OI    MDCTSTAT,DCTSOFF    IND CLOSE ACB REQUESTED     @OZ50378
         LTR   R14,R14             IF NO RPLS WERE PURGED...   @OZ50378
         BZ    MLOGPOST             THEN POST SUBTASK          @OZ50378
         BR    WA                  ELSE, WAIT FOR NEXT DSP     @OZ50378
         EJECT                                                      R41
*                                                                   R41
*        SNA LINE DCT INITIALIZATION SUBROUTINE                     R41
*                                                                   R41
         SPACE 1                                                    R41
MSNASTRT DS    0H                  INITIALIZE SNA LINE DCTS         R41
         L     R1,MSNAIDL          GET IDLE SNA LINE DCT PNTR       R41
         ST    R1,MDCTADCT         CHAIN IDLE LINES TO DCT          R41
         ST    MDCT,MSNAIDL        UPDATE LINE MANAGER DCT PNTR     R41
         OI    MSCANIND,MSCNRAT    FORCE RAT AUTOLOGON SCAN         R41
         XC    MDCTOTAL,MDCTOTAL   CLEAR LINE COUNTS           @OZ27491
         BAL   ML,MSMFSTRT         WRITE LINE START SMF RECORD      R41
         BR    WA                  RETURN TO CALLER                 R41
         SPACE 3                                                    R41
*                                                                   R41
*        SNA LINE DCT TERMINATION SUBROUTINE                        R41
*                                                                   R41
         SPACE 1                                                    R41
MSNASTOP DS    0H                  TERMINATE SNA LINE DCTS          R41
         BAL   ML,MSMFSTOP         WRITE TERMINATION SMF RECORD     R41
         L     R0,MDCTADCT         SAVE ADDR OF NEXT CHAINED DCT    R41
         LA    R15,MSNAIDL-MDCTADCT+DCTDSECT SET UP PHONY LINE DCT  R41
         SPACE 1                                                    R41
         USING DCTDSECT,R15        TEMPORARY DCT ADDRESSABILITY     R41
MSNASNXT L     R1,MDCTADCT         GET ADDR OF NEXT LINE DCT        R41
         CLR   R1,MDCT             IS THIS DCT POINTING TO OUR DCT  R41
         BE    MSNASDSC            BRANCH IF THIS IS PRECEDING DCT  R41
         LTR   R15,R1              CHECK FOR END OF CHAIN           R41
         BNZ   MSNASNXT            BRANCH TO TEST NEXT LOGON DCT    R41
         BAL   R8,M03A             ERROR IF DCT NOT FOUND      @OZ49689
MSNASDSC ST    R0,MDCTADCT         DISCONNECT DCT FROM CHAIN        R41
         DROP  R15                 RELEASE TEMPORARY DCT BASE       R41
         SPACE 1                                                    R41
         XC    MDCTADCT,MDCTADCT   CLEAR LINE DCT CHAIN POINTER     R41
         B     MLDCTFRE            BRANCH TO FREE LINE DCT          R41
         EJECT                                                      R41
*                                  ADDRESSABILITY --                R41
         USING RTAMBSUB,MBASE2,MBASE3    -- COMMON BSC SUBROUTINES  R41
*                                                                   R41
*        BSC LINE DCT INITIALIZATION ROUTINE                        R41
*                                                                   R41
         SPACE 1                                                    R41
MBSCSTRT DS    0H                  INITIALIZE BSC LINE DCTS         R41
        $GETBUF TYPE=BSC,FIX=YES   ACQUIRE AND INIT BSC BUFFER      R41
         BZ    MLDCTREL            BRANCH IF FAILED FOR BUFFER      R41
         LR    MBUF,R1             SET UP BUFFER REGISTER           R41
         ST    MBUF,DCTBUFAD       STORE BUFFER ADDRESS IN DCT      R41
         USING BUFDSECT,MBUF       SHOW BUFFER ADDRESSABLE          R41
         SPACE 1                                                    R41
         L     R1,MBSCACT          GET ACTIVE BSC LINE DCT PNTR     R41
         ST    R1,MDCTADCT         CHAIN ACTIVE LINES TO OUR DCT    R41
         ST    MDCT,MBSCACT        UPDATE LINE MANAGER DCT PNTR     R41
         SPACE 1                                                    R41
         XC    MDCTCNTS,MDCTCNTS   CLEAR SESSION EVENT COUNTERS     R41
         BAL   ML,MSMFSTRT         WRITE LINE START SMF RECORD      R41
         SPACE 1                                                    R41
MBSCINIT MVI   MSEQTYPE,0          RESET SEQUENCE TYPE FIELD        R41
         MVI   MDCTERCT,8          RESET ERROR COUNT IN LINE        R41
         NI    DCTFLAGS,DCTLOGAL   RESET FLAGS -EXCEPT LOGGING      R41
         MVI   MDCTIMOK,255        SHOW MODEM ON HOOK               R41
         MVC   LCBMCB,MDCTMODE     SET UP SDA MODE BYTE             R41
         SPACE 1                                                    R41
         LA    MCODE,MEBCDIC       ASSUME EBCDIC CODE               R41
         TM    MDCTLINE,DCTPASCI   TEST CODE TYPE                   R41
         BZ    MBSCNASC            BRANCH IF EBCDIC                 R41
         LA    MCODE,MUSASCII      LOAD USASCII CODE                R41
         SPACE 1                                                    R41
MBSCNASC LR    R15,MDCT            ASSUME NOT LEASED LINE           R41
         TM    MDCTSTAT,DCTLEASE   TEST LINE STATUS                 R41
         BZ    MBSCNLSD            SKIP IF NOT LEASED LINE          R41
         L     R15,MDCTDCT         GET ADDRESS OF REMOTE DCT        R41
MBSCNLSD TM    MDCTLINE-DCTDSECT(R15),DCTPTRSP  TEST TRANSPARENCY   R41
         BZ    MBSCNXPR            BRANCH IF NO TRANSPARENCY        R41
         LA    MCODE,4(MCODE)      STEP TO TRANSPARENT 1/2 OF TABLE R41
         EJECT                                                 @OZ59759
MBSCNXPR ST    MCODE,MDCTCODE      SET CODE TABLE ADDRESS           R41
         SPACE 1                                                    R41
         MVI   TPBRECNT,C'E'       INDICATE EMPTY INPUT BUFFER      R41
         LA    R0,IOBCCW1          GET ADDRESS OF FIRST CCW         R41
         SPACE 1                                                    R41
         LA    R1,MBSCSEQ+MPREPSEQ REQ BSC PREPARE SEQUENCE         R41
         BAL   ML,MCCWINIT         INITIALIZE CCW'S                 R41
         TM    DCTSTAT,DCTDRAIN    DISCONNECT SEQ REQUIRED...  @OZ59759
         BZ    MBSCNXCP            BRANCH IF NOT               @OZ59759
         OI    DCTFLAGS,DCTRSTRT   SET RESTART FLAG            @OZ59759
         OI    MDCTATTN,MDCTDSC    INDICATE DISCONNECT SEQ     @OZ59759
         MVI   IOBCCW1+4,X'20'     DECHAIN DISABLE CCW         @OZ59759
         SPACE 1                                               @OZ59759
MBSCNXCP BAL   ML,MERREXCP         INITIALIZE LINE I/O         @OZ59759
         SPACE 1                                                    R41
         BR    WA                  RETURN TO CALLER                 R41
         SPACE 1                                                    R41
         DROP  MBUF                RELEASE BUFFER ADDRESSABILITY    R41
         EJECT                                                      R41
*                                                                   R41
*        BSC LINE DCT TERMINATION SUBROUTINE                        R41
*                                                                   R41
         SPACE 1                                                    R41
MBSCSTOP NI    MDCTATTN,FF-MDCTDSC RESET DISCONNECT SEQUENCE   @OZ59759
         SR    R1,R1               SET INITIAL INDEX TO ZERO        R41
         LA    R14,4               SET INDEX INCREMENT TO 4         R41
         LA    R15,L'MDCTOTAL-1    GET LOOP TERMINATION INDEX       R41
MBSCTOTL L     R0,MDCTOTAL(R1)     GET LINE TOTAL EVENT COUNT       R41
         AL    R0,MDCTCNTS(R1)     ADD SESSION EVENT COUNT          R41
         ST    R0,MDCTOTAL(R1)     STORE NEW TOTAL COUNT            R41
         BXLE  R1,R14,MBSCTOTL     LOOP UNTIL ALL COUNTS TOTALED    R41
         XC    MDCTCNTS,MDCTCNTS   RESET ALL SESSION COUNTS         R41
         SPACE 1                                                    R41
         BAL   ML,MSMFSTOP         WRITE TERMINATION SMF RECORD     R41
         SPACE 1                                                    R41
         L     R1,DCTBUFAD         LOAD BUFFER ADDR IN R1           R41
         LTR   R1,R1               TEST BUFFER ADDRESS              R41
         BZ    MBSCSDEQ            ZERO - GO TO ABNORMAL EXIT       R41
        $FREEBUF (R1)              FREE THE BUFFER                  R41
         SPACE 1                                                    R41
MBSCSDEQ L     R0,MDCTADCT         SAVE ADDR OF NEXT CHAINED LINE   R41
         LA    R15,MBSCACT-MDCTADCT+DCTDSECT  SET UP PHONY LINE DCT R41
         SPACE 1                                                    R41
         USING DCTDSECT,R15        TEMPORARY DCT ADDRESSABILITY     R41
MBSCSNXT L     R1,MDCTADCT         GET ADDR OF NEXT LINE DCT        R41
         CLR   R1,MDCT             IS THIS LINE POINTING TO OUR DCT R41
         BE    MBSCSDSC            BRANCH IF THIS IS PRECEDING DCT  R41
         LTR   R15,R1              CHECK FOR END OF CHAIN           R41
         BNZ   MBSCSNXT            BRANCH TO TEST NEXT LINE DCT     R41
         BAL   R8,M03A             ERROR IF DCT NOT FOUND      @OZ49689
MBSCSDSC ST    R0,MDCTADCT         DISCONNECT OUR DCT FROM CHAIN    R41
         DROP  R15                 RELEASE TEMPORARY DCT BASE       R41
         SPACE 1                                                    R41
         XC    MDCTADCT,MDCTADCT   CLEAR LINE DCT CHAIN POINTER     R41
         B     MLDCTFRE             DCT AND BRANCH TO FREE LINE     R41
         SPACE 2                                                    R41
         DROP  MBASE2,MBASE3       RELEASE SUBROUTINE ADDRESSABILTY R41
         SPACE 2                                                    R41
         LTORG                                                      R41
         TITLE 'HASP LINE MANAGER -- ACTIVE BSC LINE DCT WORK SCAN' R41
***********************************************************************
*                                                                     *
*        LINE MANAGER - ACTIVE BSC LINE DCT SCAN ROUTINE              *
*                                                                     *
***********************************************************************
         SPACE 1                                                    R41
*                                  ADDRESSABILITY --                R41
         USING DCTDSECT,MDCT           -- LINE DCT                  R41
         USING RTAMBSUB,MBASE2,MBASE3  -- COMMON SNA SUBROUTINES    R41
         USING MDCTSCAN,MBASE1         -- LOCAL ROUTINE BASE        R41
         SPACE 1                                                    R41
MDCTSCAN DS    0H                                                   R41
         SPACE 2                                                    R41
*                                                                   R41
*        PROPAGATE JOB POST EVENT                                   R41
*                                                                   R41
         SPACE 1                                                    R41
         TM    MEVNTIND,MEVNPJOB   TEST FOR JOB POST EVENT          R41
         BNO   MBACTIME            BRANCH IF NOT                    R41
         OI    MDCTATTN,MDCTJOB    SHOW THIS POSTED FOR JOB         R41
         EJECT                                                      R41
*                                                                   R41
*        BSC LINE DCT TIMER SERVICE SCAN                            R41
*                                                                   R41
         SPACE 1                                                    R41
MBACTIME TM    MEVNTIND,MEVNTIME   CHECK FOR TIMER INTERV EXPIRED   R41
         BZ    MBACTDSC            BRANCH IF NO TIMER SERVICE REQ   R41
         TM    MDCTATTN,MDCTIMER   DOES THIS DCT REQ TIMER SERVICE  R41
         BZ    MBACTDSC            CHECK FOR DISC INTERVAL IF NOT   R41
         SPACE 1                                                    R41
         L     MBUF,DCTBUFAD       GET ADDRESS OF BUFFER AND        R41
         USING BUFDSECT,MBUF        SHOW ADDRESSABILITY             R41
         L     MCODE,MDCTCODE      GET ADDRRESS OF CODE TABLE AND   R41
         USING MCODSECT,MCODE       SHOW ADDRESSABILITY             R41
         SPACE 1                                                    R41
         TM    MDCTATTN,MDCTPAWS   TEST FOR DELAYED I/O        @OZ74852
         BO    MBACTXIO            BRANCH IF YES               @OZ74852
         LA    ML,MBACTXCP         GET ADDR OF TIMED EXCP ROUTINE   R41
         TM    MSEQTYPE,MBSCSEQ+MCPUSEQ CHECK CCW SEQUENCE TYPE     R41
         BNO   MABORT              ABORT AND RESTART HARDWARE TERM  R41
         CLI   TPBRECNT,C'E'       TEST INPUT BUFFER STATUS         R41
         BE    MBACTXCP            BRANCH IF INPUT BUFFER IS EMPTY  R41
         TM    MDCTLINE,DCTPCTC    TEST FOR CTCA                    R41
         BZ    MTIMEWAB            SET BSC WAIT-A-BIT               R41
         SPACE 1                                                    R41
         MVC   IOBCCW2(8),IOBCCW6  MOVE WRITE CCW                   R41
         LA    R1,IOBCCW5          SET                              R41
         ST    R1,IOBCCW2           UP                              R41
         MVI   IOBCCW2,X'01'         A                              R41
         LA    R1,6                   NULL                          R41
         STH   R1,IOBCCW2+6            WAIT-                        R41
         LA    R1,IOBCCW7               A-                          R41
         ST    R1,IOBCCW4                BIT                        R41
         MVI   IOBCCW4,X'02'              SEQUENCE                  R41
         MVC   IOBCCW4+5(9),MWABTSEQ       FOR                      R41
         MVC   IOBCCW5(2),MSTXSEQ           CTC                     R41
         B     MBACTXCP                      RESPONSE               R41
         SPACE 1                                                    R41
MTIMEWAB MVC   IOBCCW2(4*8),IOBCCW5   NO,                           R41
         LA    R1,IOBCCW6            A NULL                         R41
         ST    R1,IOBCCW3             WAIT-A-BIT                    R41
         MVI   IOBCCW3,X'01'           SEQUENCE                     R41
         LA    R1,6                     FOR                         R41
         STH   R1,IOBCCW3+6              RESPONSE                   R41
         LA    R1,IOBCCW7                 TO                        R41
         ST    R1,IOBCCW5                  MULTI-                   R41
         MVI   IOBCCW5,X'02'                LEAVING                 R41
         MVC   IOBCCW5+5(9),MWABTSEQ         RJE                    R41
         MVC   IOBCCW6(2),MSTXSEQ             TERMINAL              R41
         SPACE 1                                                    R41
MBACTXCP MVC   IOBSTART,IOBRESTR   SET UP ADDRESS OF 1ST CCW        R41
         SPACE 1                                               @OZ74852
MBACTXIO BAL   ML,MERREXCP         INITIATE CCW PROGRAM        @OZ74852
         B     MBACTNXT            BRANCH TO SCAN NEXT LINE DCT     R41
         EJECT                                                      R41
*                                                                   R41
*        BSC DISCONNECT INTERVAL SCAN                               R41
*                                                                   R41
         SPACE 1                                                    R41
MBACTDSC DS    0H                                                   R41
         TM    MEVNTIND,MEVNDISC   CHECK FOR DISC INTERV EXPIRED    R41
         BZ    MBACTNXT            BRANCH IF NO DISC SEARCH REQ     R41
         TM    DCTSTAT,DCTDRAIN    ALREADY DRAINING...         @OZ38682
         BO    MBACTNXT            YES, DON'T CHECK DISC INTV  @OZ38682
         SPACE 2                                                    R41
         L     WA,MDCTRAT          GET ADDR OF REMOTES RAT ENTRY    R41
         USING RATDSECT,WA         TEMPORARY RAT ADDRESSABILITY     R41
         SPACE 1                                                    R41
         LA    R1,2                ASSUME 64 SECOND DISC INTERVAL   R41
         LTR   WA,WA               IS A REMOTE CONNECTED TO LINE    R41
         BZ    MBACTNON            SKIP IF NO REMOTE SIGNED ON      R41
         IC    R1,RATDINTV         GET DISCONN INTERVAL FROM RAT    R41
         SPACE 1                                                    R41
MBACTNON SLA   R1,5                MULTIPLY BY 32 TO GET MINUTES    R41
         BZ    MBACTNXT            BRANCH IF INTERVAL IS ZERO       R41
         AL    R1,MDCTIMOK         ADD LAST TEXT TRANSMISSION TIME  R41
         CL    R1,MCLOCK           COMPARE WITH CURRENT TIME STAMP  R41
         BH    MBACTNXT            BRANCH IF INTERVAL NOT EXPIRED   R41
         SPACE 1                                                    R41
         OI    MDCTSTAT,DCTSOFF    FORCE REMOTE SIGNOFF ACTION      R41
         OI    DCTFLAGS,DCTRSTRT   REQUEST LINE RESTART ACTION      R41
         SPACE 1                                                    R41
         DROP  WA                  RELEASE TEMPORARY RAT BASE       R41
         SPACE 2                                                    R41
MBACTNXT L     MDCT,MDCTADCT       GET ADDR OF NEXT LINE DCT        R41
         LTR   MDCT,MDCT           CHECK FOR END OF CHAIN           R41
         BNZ   MDCTSCAN            BRANCH TO PROC LINE IF NOT END   R41
         B     MSCANEXT             ELSE DO NEXT SCAN               R41
         SPACE 2                                                    R41
         DROP  MBASE1,MBASE2,MBASE3  RELEASE ROUTINE AND            R41
         DROP  MCODE,MDCT             DATA AREA ADDRESSABILITY      R41
         TITLE 'HASP LINE MANAGER -- ACTIVE SNA LOGON DCT SCAN'     R41
***********************************************************************
*                                                                     *
*                 ACTIVE SNA LOGON DCT SCAN ROUTINE                   *
*                                                                     *
***********************************************************************
         SPACE 1                                                    R41
*                                  ADDRESSABILITY --                R41
         USING DCTDSECT,MDCT            -- LOGON DCT                R41
         USING RTAMVSUB,MBASE2,MBASE3   -- COMMON SNA SUBROUTINES   R41
         USING MSALGSCN,MBASE1          -- LOCAL ROUTINE BASE       R41
         SPACE 2                                                    R41
MSALGSCN DS    0H                  SCAN SNA LOGON/LINE DCTS         R41
         SPACE 1                                                    R41
*                                                                   R41
*        $P / $E LOGON COMMAND SCAN ROUTINE                         R41
*                                                                   R41
         SPACE 1                                                    R41
MSLOGCMD MVC   MWORKQUE,MDCTADCT   SAVE ADDR OF NEXT LOGON DCT      R41
         L     MICE,MDCTICE        GET ADDR OF 1ST LOGGED ON ICE    R41
         LTR   MICE,MICE           CHECK FOR ANY ICE LOGGED ON      R41
         USING ICEDSECT,MICE       ESTABLISH ICE ADDRESSABILITY     R41
         BNZ   MSLOGRST            BRANCH TO TEST FOR RSTRT IF YES  R41
         TM    DCTSTAT,DCTDRAIN    CHECK FOR DRAIN STATUS PENDING   R41
         BO    MSLGNDRN            BRANCH TO CLOSE ACB IF DRAINING  R41
         TM    DCTFLAGS,DCTRSTRT   CHECK FOR RESTART PENDING        R41
         BZ    MSLOGNXT            BRANCH TO SCAN NEXT DCT IF NOT   R41
MSLGNDRN BAL   WA,MLOGSTOP         ENTER TERMINATION SUBROUTINE     R41
         B     MSLOGNXT            BRANCH TO PROCESS NEXT DCT       R41
         SPACE 1                                                    R41
MSLOGRST TM    DCTFLAGS,DCTRSTRT   CHECK FOR RESTART PENDING        R41
         BZ    MSLOGNXT            BRANCH TO SCAN NEXT DCT IF NOT   R41
MSLGKICE MVC   MBUFQUE,ICEAPCHN    SAVE ADDR OF NEXT LOGGED-ON ICE  R41
         BAL   ML,MICEABRT         CALL SESSION ABORT SUBROUTINE    R41
         L     MICE,MBUFQUE        GET  ADDR OF NEXT LOGGED-ON ICE  R41
         LTR   MICE,MICE           TEST FOR END OF CHAIN            R41
         BNZ   MSLGKICE            BRANCH TO ABORT ICE IF NOT       R41
         SPACE 1                                                    R41
         DROP  MICE                RELEASE ICE ADDRESSABILTY        R41
         SPACE 2                                                    R41
MSLOGNXT L     MDCT,MWORKQUE       GET ADDRESS OF NEXT LOGON DCT    R41
         LTR   MDCT,MDCT           CHECK FOR END OF CHAIN           R41
         BNZ   MSLOGCMD            PROCESS LOGON DCT IF NOT         R41
         B     MSCANEXT             ELSE, DO NEXT SCAN              R41
         SPACE 2                                                    R41
         DROP  MBASE1,MBASE2,MBASE3  RELEASE ROUTINE AND            R41
         DROP  MDCT                   LOGON DCT ADDRESSABILITY      R41
         TITLE 'HASP LINE MANAGER -- ACTIVE SNA LINE DCT SCAN'      R41
***********************************************************************
*                                                                     *
*                   SNA ACTIVE LINE DCT SCAN ROUTINE                  *
*                                                                     *
***********************************************************************
         SPACE 1                                                    R41
*                                  ADDRESSABILITY --                R41
         USING DCTDSECT,MDCT            -- LINE DCT                 R41
         USING RTAMVSUB,MBASE2,MBASE3   -- COMMON SNA SUBROUTINES   R41
         USING MSLNESCN,MBASE1          -- LOCAL ROUTINE BASE       R41
         SPACE 2                                                    R41
MSLNESCN DS    0H                  SCAN ALLOCATED SNA LINES         R41
         SPACE 1                                                    R41
MSLNECMD MVC   MWORKQUE,MDCTADCT   SAVE NEXT ACTIVE LINE DCT ADDR   R41
         L     MICE,MDCTICE        GET ADDR OF 1ST ALLOCATED ICE    R41
         USING ICEDSECT,MICE       SHOW ICE ADDRESSABLE             R41
         SPACE 2                                                    R41
*                                                                   R41
*        SNA ACTIVE LINE DCT - $E COMMAND AND DISCONNECT INTERVAL   R41
*                                         SCAN ROUTINE              R41
*                                                                   R41
         SPACE 1                                                    R41
         TM    DCTFLAGS,DCTRSTRT   CHECK FOR RESTART PENDING        R41
         BO    MSLNERST            ABORT ALL ACTIVITY IF YES        R41
         TM    MEVNTIND,MEVNDISC   CHECK FOR DISC INTERVAL EXPIRED  R41
         BZ    MSLNEJOT            GO TEST IF OUTPUT PRESENT IF NOT R41
         SPACE 1                                                    R41
         L     R1,MDCTRAT          GET ADDR OF REMOTES RAT ENTRY    R41
         SLR   R0,R0                      CLEAR REGISTER AND GET    R41
         IC    R0,RATDINTV-RATDSECT(,R1)   REMOTES DISC INTERVAL    R41
         SLA   R0,5                MULTIPLY BY 32 TO GET MINUTES    R41
         BZ    MSLNEJOT            BRANCH IF DISC CHECK DISABLED    R41
         AL    R0,MDCTIMOK         ADD LAST DATASET TRANSMISSION    R41
         CL    R0,MCLOCK            TIME AND CHECK AGAINST INTERVAL R41
         BH    MSLNEJOT            BRANCH IF INTERVAL NOT EXPIRED   R41
         SPACE 2                                                    R41
MSLNERST MVC   MBUFQUE,ICEALCHN    SAVE ADDR OF NEXT ALLOCATED ICE  R41
         BAL   ML,MICEABRT         CALL SESSION ABORT SUBROUTINE    R41
         L     MICE,MBUFQUE        GET  ADDR OF NEXT ALLOCATED ICE  R41
         LTR   MICE,MICE           TEST FOR END OF CHAIN            R41
         BNZ   MSLNERST            BRANCH TO ABORT ICE IF NOT       R41
         B     MSLNENXT            BRANCH TO PROCESS NEXT LINE      R41
         EJECT                                                      R41
*                                                                   R41
*        SNA ACTIVE LINE DCT SCAN - SESSION OUTBOUND ALLOCATION,    R41
*            SESSION SUB-SCAN       ACTIVATE RMT DEVICES WHEN WORK  R41
*                                   AND SESSION AVAILABLE           R41
         SPACE 1                                                    R41
MSLNEJOT TM    MEVNTIND,MEVNPJOB   TEST FOR JOB POST EVENT          R41
         BZ    MSLNETIM            CHECK FOR TIMER EVENT IF NOT     R41
         OI    MDCTATTN,MDCTJOB2   SET OUTPUT POST REQUEST INDIC    R41
         SPACE 2                                                    R41
*        LOCATE AVAILABLE SESSIONS                                  R41
         SPACE 1                                                    R41
MSLNETIM TM    MEVNTIND,MEVNTIME   TEST FOR TIMER INTERV EXPIRED    R41
         BZ    MSLNENXT            SCAN NEXT LINE DCT IF NOT        R41
         OI    MSTQE+IPOST,X'20'   REQUEST NEXT TIMER INTERVAL      R41
         SPACE 2                                                    R41
         LR    ML,MDCT             LOAD PHONY REMOTE DCT ADDRESS    R41
         NI    MDCTATTN,255-MDCTJOB1 RESET ANY SESSION IDLE INDIC   R41
         SPACE 1                                                    R41
MSLNTWTM TM    ICESTAT,ICETIMER    TEST FOR SESSION WAIT TIME REQ   R41
         BZ    MSLNTUSE            BRANCH TO CHECK USAGE IF NOT     R41
         SPACE 1                                                    R41
         L     R1,ICEWTIME         GET INTERVAL EXPIRATION TIME     R41
         CL    R1,MCLOCK           IS WAIT TIME INTERVAL ELAPSED    R41
         BH    MSLNTICE            WAIT FOR NEXT TIMER POP IF NOT   R41
         NI    ICESTAT,255-ICETIMER  RESET WAIT TIME INDICATOR      R41
         SPACE 2                                                    R41
MSLNTUSE TM    ICESTAT,ICEAVAIL    CHECK ICE ALLOCATION STATUS      R41
         BNZ   MSLNTICE            BRANCH IF ICE NOT AVAILABLE      R41
         ICM   R1,7,ICERDCT+1      TEST PREALLOCATION STATUS   @OZ29412
         BNZ   MSLNTICE            BRANCH IF PREALLOCATED      @OZ29412
         TM    ICEFLAGS,ICEOUTBD+ICEINBRK CHECK SESSION USAGE       R41
         BM    MSLNTICE            BRANCH IF ANY PATH IN USE        R41
         TM    DCTSTAT,DCTDRAIN    IS DRAIN STATUS PENDING     @OZ38048
         BO    MSLNTDRN            BRANCH IF YES               @OZ38048
         SPACE 1                                                    R41
         TM    MDCTSTAT,DCTSOFF    TEST FOR RMT SIGNING OFF         R41
         BZ    MSLNTCHK            NO, KEEP LOOKING FOR WORK        R41
MSLNTDRN MVC   MBUFQUE,ICEALCHN    SAVE ADDRESS OF NEXT ICE    @OZ38048
         BAL   ML,MICEABRT         AND REMOVE IDLE SESSION          R41
         L     MICE,MBUFQUE        RELOAD ADDRESS OF NEXT ICE       R41
         B     MSLNNICE            GO PROCESS NEXT ICE              R41
         SPACE 1                                                    R41
MSLNTCHK TM    MDCTATTN,MDCTJOB2   TEST FOR ANY OUTPUT QUEUED       R41
         BZ    MSLNTIDL            SHOW IDLE SESSION IF NOT         R41
         EJECT                                                      R41
*        SCAN FOR QUEUED OUTPUT -- SESSION AVAILALBLE               R41
         SPACE 1                                                    R41
         USING DCTDSECT,ML         TEMP REMOTE DCT ADDRESSABILITY   R41
MSLNTDCT L     ML,MDCTDCT          GET ADDR OF NEXT REMOTE DCT      R41
         LTR   ML,ML               CHECK FOR END OF DCT CHAIN       R41
         BZ    MSLNTNOT            BRANCH IF YES                    R41
         SPACE 1                                                    R41
         TM    MDCTSTAT,DCTPOST    CHECK IF THIS DCT ALREADY POSTED R41
         BO    MSLNTDCT            YES, BRANCH TO TRY NEXT DCT      R41
         TM    DCTSTAT,DCTDRAIN+DCTINUSE TEST DEVICE AVAILABILITY   R41
         BNZ   MSLNTDCT            SCAN NEXT DCT IF NOT AVAILABLE   R41
         SPACE 1                                                    R41
         CLI   DCTDEVTP,DCTPRPU    TEST FOR OUTPUT OR CNSLE         R41
         BL    MSLNTDCT            BRANCH IF NOT, TRY NEXT DEVICE   R41
         CLI   DCTDEVTP,DCTRPU     TEST FOR REMOTE PUNCH            R41
         BE    MSLNJGET            BRANCH IF YES, GO LOOK FOR WORK  R41
         CLI   DCTDEVTP,DCTRCON    IF NOT REMOTE CONSOLE DCT        R41
         BNE   MSLNTDC1             GO TEST FOR SEPARATOR PAGE      R41
         SPACE 1                                                    R41
         L     R15,MDCTICE         IF REMOTE CONSOLE                R41
         LTR   R15,R15              NOT PREALLOCATED                R41
         BZ    MSLNMSG1              GO TEST FOR MESSAGES           R41
         USING ICEDSECT,R15        GET TEMPORARY ICE ADDRESSABILITY R41
         TM    ICESNDST,ICEINSTR  ICE PREALLOCATED AND NOT IN  @OZ49163
         BNO   MSLNTICE             STREAM, LEAVE ON SUSP QUE  @OZ49163
         NI    ICEFLGS2,255-ICEOUTBK  RESET OUTBD-OUTBD INTRP  @OZ29180
         MVC   ICESDCT,MDCTSDCT    REMOVE FROM OTHER ICE'S SUSP QUE R41
         DROP  R15                 DISCARD TEMP ICE ADDRESSABILITY  R41
         SLR   R15,R15             CLEAR POINTERS TO                R41
         ST    R15,MDCTICE          PREALLOCATED ICE                R41
         ST    R15,MDCTSDCT          AND SUSPEND QUEUE              R41
         B     MSLNMSG1            GO SEE IF MESSAGES STILL THERE   R41
         SPACE 1                                                    R41
MSLNTDC1 TM    DCTPPSW,DCTPPSWS    IF SEPARATOR PAGE SUPPRESSED     R41
         BO    MSLNJGET             GO TEST FOR JOB OUTPUT          R41
         L     R1,MDCTRAT-DCTDSECT(,MDCT) POINT TO RAT              R41
         TM    RATCONF-RATDSECT(R1),RATCONFC  TEST FOR CONSOLE      R41
         BO    MSLNJGET            BRANCH IF SUPPORTED              R41
         SPACE 1                                                    R41
MSLNMSGS SLR   R15,R15                     CLEAR R15           @OZ45379
MSLNMSG1 L     R1,MDCTRAT-DCTDSECT(,MDCT)   POINT TO RAT       @OZ45379
         IC    R15,RATCONRT+1-RATDSECT(,R1)  MULTIPLY RMT NUM  @OZ45379
         LA    R1,0(R15,R15)         BY THREE TO                    R41
         ALR   R1,R15                 GET ADDRESS OF                R41
         AL    R1,$MSPOOLQ             MSG QUEUE ENTRY              R41
         CLC   1(1,R1),0(R1)       CHECK FOR SPOOLED OUTPUT         R41
         BNE   MSLNSDEV            YES, BRANCH - START DEVICE       R41
         SPACE 1                                                    R41
         CLI   DCTDEVTP,DCTRCON    TEST FOR REMOTE CONSOLE          R41
         BE    MSLNTDCT            BR IF YES, IGNORE PRINTER WORK   R41
         SPACE 1                                                    R41
MSLNJGET $#GET DCT=(ML),HAVE=NO    TEST FOR QUEUED OUTPUT           R41
         BZ    MSLNTDCT            NO - TRY NEXT REMOTE DCT         R41
         EJECT                                                      R41
*        IF QUEUED OUTPUT AND AVAILABLE SESSION -- START DEVICE     R41
         SPACE 1                                                    R41
MSLNSDEV NI    DCTSTAT,255-DCTHOLD MARK DCT AVAILABLE               R41
         OI    MDCTSTAT,DCTPOST    SHOW DCT POSTED                  R41
         ST    MICE,MDCTICE        SAVE ICE ADDR FOR OPEN           R41
         ST    ML,ICERDCT          SAVE PRE-ALLOCATED DCT IN ICE    R41
         L     R1,DCTPCE           GET ADDR OF PCE                  R41
        $POST  (R1),WORK           POST PCE FOR WORK                R41
         B     MSLNTIDL            BRANCH TO INDIC IDLE SESSION     R41
         DROP  ML                  DROP REMOTE DCT ADDRESSABILITY   R41
         EJECT                                                      R41
MSLNTNOT NI    MDCTATTN,255-MDCTJOB2  RESET OUTPUT QUEUED SWITCH    R41
         SPACE 1                                                    R41
MSLNTIDL OI    MDCTATTN,MDCTJOB1   SET ANY SESSION IDLE INDICATOR   R41
         SPACE 1                                                    R41
*                                                                   R41
*        SNA ACTIVE LINE DCT SCAN  - INTERRUPT OUTBOUND SESSION     R41
*        CONSOLE PRE-EMPT SUB-SCAN       FOR CONSOLE OUTPUT         R41
*                                                                   R41
         SPACE 1                                                    R41
MSLNTICE L     MICE,ICEALCHN       GET ADDR OF NEXT ALLOC ICE       R41
MSLNNICE LTR   MICE,MICE           CHECK FOR END OF ICE CHAIN       R41
         BNZ   MSLNTWTM            BRANCH TO CHECK NEW ICE          R41
         SPACE 1                                                    R41
         L     ML,MDCTDCT          POINT TO FIRST REMOTE DCT        R41
         USING DCTDSECT,ML         TEMPORARY DCT ADDRESSABILITY     R41
         CLI   DCTDEVTP,DCTRCON    TEST DEVICE TYPE                 R41
         BNE   MSLNENXT            BRANCH IF NO CONSOLE, NEXT LINE  R41
         TM    MDCTSTAT,DCTPOST    IF CONSOLE ALREADY POSTED        R41
         BO    MSLNENXT             GO TEST NEXT LINE               R41
         CL    MICE,MDCTICE        IF CONSOLE ALREADY PREALLOCATED  R41
         BNE   MSLNENXT             GO TEST NEXT LINE               R41
         SPACE 1                                                    R41
         SLR   R15,R15                     CLEAR R15           @OZ45379
         L     R1,MDCTRAT-DCTDSECT(,MDCT)   POINT TO RAT       @OZ45379
         IC    R15,RATCONRT+1-RATDSECT(,R1)  MULTIPLY RMT NUM  @OZ45379
         LA    R1,0(R15,R15)         BY THREE TO                    R41
         ALR   R1,R15                 GET ADDRESS OF                R41
         AL    R1,$MSPOOLQ             MSG QUEUE ENTRY              R41
         CLC   1(1,R1),0(R1)       CHECK FOR SPOOLED OUTPUT         R41
         BE    MSLNENXT            IF NONE GO TEST NEXT LINE        R41
         DROP  ML                  DISCARD TEMP DCT ADDRESSABILITY  R41
         L     MICE,MDCTICE        POINT TO FIRST ICE               R41
         L     R1,MDCTRAT          GET RAT ADDRESS             @OZ45379
         SLR   R15,R15             CLEAR R15                   @OZ45379
         IC    R15,RATCONRT+1-RATDSECT(,R1) GET CON RMT NUM    @OZ45379
         BCTR  R15,0               LESS 1 FOR OFFSET           @OZ45379
         MH    R15,=Y(RATTLE)      CALCULATE RAT DISPLACEMENT  @OZ45379
         A     R15,$RATABLE        GET ADDR OF RAT ENTRY       @OZ45379
         CLR   R15,R1              IF CONSOLE AND PRINTER NOT  @OZ45379
         BNE   MSLNENXT             SAME RMT, TEST NEXT LINE   @OZ45379
         SPACE 1                                               @OZ45379
MSLNTIC1 TM    ICESTAT,ICEAVAIL-ICEALLOC  IF ICE NOT AVAILABLE      R41
         BNZ   MSLNICE                     GO TEST NEXT ICE         R41
         TM    ICEFLAGS,ICEOUTBD   IF ICE NOT ALLOCATED OUTBOUND    R41
         BNO   MSLNICE              GO TEST NEXT ICE                R41
         USING DCTDSECT,ML         RE-APPLY TEMP DCT ADDRESSABILITY R41
         ST    MICE,MDCTICE        SAVE ICE ADDRESS FOR OPEN        R41
         MVC   MDCTSDCT,ICESDCT    PLACE CONSOLE DCT ON             R41
         ST    ML,ICESDCT           FRONT OF SUSPEND QUEUE          R41
         OI    ICEFLGS2,ICEOUTBK   FLAG OUTBD-OUTBD INTERRUPT  @OZ29180
         DROP  ML                  DISCARD TEMP DCT ADDRESSABILITY  R41
         B     MSLNENXT            GO TEST NEXT LINE                R41
         SPACE 1                                                    R41
MSLNICE  L     MICE,ICEALCHN       GET NEXT ICE ADDRESS             R41
         LTR   MICE,MICE           TEST FOR END OF CHAIN            R41
         BNZ   MSLNTIC1            BRANCH IF NOT                    R41
         DROP  MICE                RELEASE ICE ADDRESSABILITY       R41
         SPACE 1                                                    R41
MSLNENXT L     MDCT,MWORKQUE       GET ADDR OF NEXT LINE DCT        R41
         LTR   MDCT,MDCT           CHECK FOR END OF CHAIN           R41
         BNZ   MSLNECMD            PROCESS LINE DCT IF NOT          R41
         B     MSCANEXT             ELESE GO DO NEXT SCAN           R41
         SPACE 2                                                    R41
         DROP  MBASE1,MBASE2,MBASE3  RELEASE ROUTINE                R41
         DROP  MDCT                   AND DCT ADDRESSABILITY        R41
         TITLE 'HASP LINE MANAGER -- IDLE SNA LINE DCT SCAN'        R41
***********************************************************************
*                                                                     *
*                       SNA IDLE LINE DCT SCAN                        *
*                                                                     *
***********************************************************************
         SPACE 1                                                    R41
*                                  ADDRESSABILITY --                R41
         USING DCTDSECT,MDCT            -- LINE DCT                 R41
         USING RTAMVSUB,MBASE2,MBASE3   -- COMMON SNA SUBROUTINES   R41
         USING MSIDLSCN,MBASE1          -- LOCAL ROUTINE BASE       R41
         SPACE 2                                                    R41
MSIDLSCN DS    0H                  SCAN IDLE SNA LINE DCTS          R41
         SPACE 2                                                    R41
*                                                                   R41
*        CHECK FOR $P LNE COMMAND                                   R41
*                                                                   R41
         SPACE 1                                                    R41
MSIDLCMD MVC   MWORKQUE,MDCTADCT   SAVE NEXT IDLE LINE DCT ADDR     R41
         TM    DCTSTAT,DCTDRAIN    CHECK FOR DRAIN STATUS PENDING   R41
         BZ    MSIDLNDR            SKIP IF NO DRAIN REQ OUTSTANDING R41
         BAL   WA,MSNASTOP         ENTER TERMINATION SUBROUTINE     R41
         SPACE 1                                                    R41
MSIDLNDR L     MDCT,MWORKQUE       GET ADDR OF NEXT IDLE LINE       R41
         LTR   MDCT,MDCT           CHECK FOR END OF CHAIN           R41
         BNZ   MSIDLCMD            PROCESS LINE DCT IF NOT          R41
         B     MSCANEXT             ELSE, GO DO NEXT SCAN           R41
         SPACE 2                                                    R41
         DROP  MBASE1,MBASE2,MBASE3  RELEASE ROUTINE AND            R41
         DROP  MDCT                     DCT ADDRESSABILITY          R41
         TITLE 'HASP LINE MANAGER -- INACTIVE DCT SCAN'             R41
***********************************************************************
*                                                                     *
*             INACTIVE DCT (BSC/SNA - LNE/LGN) SCAN                   *
*                                                                     *
*                      ($S COMMAND PROCESSING)                        *
*                                                                     *
***********************************************************************
         SPACE 1                                                    R41
*                                  ADDRESSABILITY --                R41
         USING RTAMBSUB,MBASE2,MBASE3    -- COMMON BSC SUBROUTINES  R41
         USING MUNITSCN,MBASE1           -- LOCAL ROUTINE BASE      R41
         SPACE 2                                                    R41
MUNITSCN DS    0H                                                   R41
         SPACE 2                                                    R41
*                                                                   R41
*        SCAN FOR STARTED LOGON DCTS                                R41
*                                                                   R41
         SPACE 1                                                    R41
         L     MDCT,$LOGNDCT       GET ADDR OF FIRST LOGON DCT      R41
         USING DCTDSECT,MDCT        AND SHOW ADDRESSABLE            R41
         LTR   MDCT,MDCT           CHECK FOR ANY LOGON DCT THERE    R41
         BZ    MUNITNLG            BRANCH IF NOT GENERATED           R4
         SPACE 1                                                     R4
MUNITLOG BAL   WA,MLDCTGET         TRY TO GET AND INIT LOGON DCT     R4
         L     MDCT,DCTCHAIN       GET ADDRESS OF NEXT LOGON DCT     R4
         LA    MDCT,0(,MDCT)       PURIFY DCT ADDRESS               R41
         LTR   MDCT,MDCT           CHECK FOR END OF DCT CHAIN        R4
         BZ    MUNITNLG            BRANCH IF NO MORE LOGON DCTS      R4
         CLI   DCTDEVTP,DCTLOG     IS THIS STILL A LOGON DCT         R4
         BE    MUNITLOG            BRANCH TO GET DCT IF YES          R4
         SPACE 2                                                     R4
*                                                                   R41
*        SCAN FOR STARTED LINE DCTS                                 R41
*                                                                   R41
         SPACE 1                                                    R41
MUNITNLG L     MDCT,$LNEDCT        GET ADDRESS OF FIRST LINE DCT    R41
MUNITLNE BAL   WA,MLDCTGET         TRY TO GET AND INIT LINE DCT     R41
         L     MDCT,DCTCHAIN       GET ADDRESS OF NEXT DCT           R4
         LA    MDCT,0(,MDCT)       PURIFY DCT ADDRESS               R41
         LTR   MDCT,MDCT           CHECK FOR END OF DCT CHAIN       R41
         BZ    MSCANEXT            BRANCH IF YES, GO DO NEXT SCAN   R41
         CLI   DCTDEVTP,DCTLNE     IS THIS STILL A LINE DCT         R41
         BE    MUNITLNE            BRANCH TO GET LINE DCT IF YES    R41
         SPACE 2                                                     R4
         B     MSCANEXT            ELSE, GO DO NEXT SCAN            R41
         SPACE 1                                                    R41
         DROP  MBASE1,MBASE2,MBASE3  RELEASE CODE ADDRESSABILITY    R41
         TITLE 'HASP LINE MANAGER -- LOGON DCT EXIT AND ACB SUBTASK COMC
               PLETION SCAN'                                        R41
***********************************************************************
*                                                                     *
*        LOGON DCT EXIT SERVICE AND ACB SUBTASK COMPLETION SCAN       *
*                                                                     *
***********************************************************************
         SPACE 1                                                    R41
*                                  ADDRESSABILITY -                 R41
         USING DCTDSECT,MDCT             LOGON DCT                  R41
         USING RTAMVSUB,MBASE2,MBASE3    COMMON SNA SUBROUTINES     R41
         USING MLOGPROC,MBASE1           LOCAL ROUTINE BASE         R41
         SPACE 2                                                    R41
MLOGPROC DS    0H                                                   R41
         SLR   R0,R0               GET ZERO FOR CLEARING            R41
MLOGPDEQ CS    MDCT,R0,MLOGQUE     ATTEMPT TO ACQUIRE               R41
         BNE   MLOGPDEQ            BR IF NO, RETRY                  R41
         ST    MDCT,MWORKQUE        ELSE, STORE IN WORK QUEUE PTR   R41
MLOGNEXT L     MDCT,MWORKQUE       GET ADDR OF NEXT QUEUED DCT      R41
         LTR   MDCT,MDCT           CHECK FOR ANY LOGON DCT THERE    R41
         BZ    MSCANEXT            BRANCH IF END OF CHAIN           R41
         USING DCTDSECT,MDCT       PICK UP DCT ADDRESSABILITY       R41
         SLR   R0,R0               GET ZERO VALUE FOR RESET         R41
         SPACE 1                                                     R4
         NI    MFLAGS,255-MLOGGED  CLEAR MESSAGE-LOGGED FLAG        R41
         L     R15,MDCTEXIT        GET EXIT CODE AND NEXT DCT ADDR   R4
MLOGPDXT CS    R15,R0,MDCTEXIT     ATTEMPT TO RESET DCT CHAIN FIELD R41
         BNE   MLOGPDXT            RETRY IF UNSUCCESSFUL            R41
         LR    R14,R0              CLEAR R14 FOR EXIT CODE           R4
         SLDL  R14,8               ISOLATE EXIT ROUTINE CODE         R4
         SRL   R15,8               GET ADDR OF NEXT CHAINED DCT      R4
         ST    R15,MWORKQUE        SAVE DCT ADDR ON WORK QUEUE       R4
         LA    R15,X'F0'           GET MASK AND ISOLATE EXIT         R4
         NR    R15,R14              ROUTINE IDENTIFIER CODE          R4
         XR    R14,R15             GET EXIT ROUTINE COMPL CODE       R4
         SLL   R14,2               ADJUST RET CODE FOR TABLE SCAN    R4
         SRL   R15,2               ADJUST EXIT ID  FOR TABLE SCAN    R4
         L     ML,MLOGBTAB-4(R15)  GET APPROPRIATE TABLE ENTRY       R4
         BR    ML                  BRANCH TO ROUTINE           @OZ83316
*              THIS LINE DELETED BY APAR OZ83316               @OZ83316
*              THIS LINE DELETED BY APAR OZ83316               @OZ83316
         SPACE 1                                                     R4
MLOGBTAB DS    0F                  EXIT ROUTINE BRANCH TABLE         R4
         DC    A(MLOGOPEN)         OPEN  ACB  SUBTASK EVENT          R4
         DC    A(MLOGTPND)         TPEND EXIT ROUTINE EVENT          R4
         DC    A(MLOGCLOS)         CLOSE ACB  SUBTASK EVENT          R4
         EJECT                                                      R41
*                                                                   R41
*        OPEN ACB COMPLETION AND ERROR RECOVERY ROUTINE             R41
*                                                                   R41
         SPACE 1                                                    R41
MLOGOPEN DS    0H                  OPEN ACB SUBTASK COMPLETE EVENT  R41
         L     MBUF,DCTBUFAD       GET ADDR OF SETLOGON RPL          R4
         ST    R0,DCTBUFAD         INDICATE NO ACTIVE BUFFER         R4
         TM    MDCTSTAT,DCTABORT   CHECK FOR ANY ERROR IN SUBTASK    R4
         BZ    MLOGOPOK            BRANCH IF SUCCESSFUL COMPLETION   R4
         SPACE 2                                               @OZ18395
         OI    DCTSTAT,DCTDRAIN    SET LOGON DCT DRAIN STATUS  @OZ18395
         SPACE 1                                                     R4
         TM    MDCTSTAT,DCTSINON   TEST IF ACB HAS BEEN OPENED       R4
         BZ    MLOGOPER            BRANCH IF OPEN ACB FAILED         R4
         SPACE 2                                               @OZ18395
        $IOERROR (MBUF)            ISSUE I/O ERROR MESSAGE           R4
         OI    MDCTSTAT,DCTSOFF    INDICATE CLOSE ACB REQUEST  @OZ18395
         BAL   WA,MLOGPOST         CLOSE ACB                   @OZ18395
         B     MLOGOFRE             AND RELEASE BUFFER         @OZ18395
         SPACE 2                                               @OZ18395
MLOGOPER BAL   ML,MAPIEMSG         ISSUE OPEN ACB FAILED MSG         R4
*              THIS LINE DELETED BY APAR NUMBER                @OZ18395
         BAL   WA,MLDCTFRE         DISPOSE OF LOGON DCT              R4
         B     MLOGOFRE            BRANCH TO FREE BUFFER             R4
         SPACE 1                                                     R4
*              THIS LINE DELETED BY APAR NUMBER                @OZ27491
MLOGOPOK L     R1,MSNALOG          GET ACTIVE LOGON DCT PTR    @OZ27491
         ST    R1,MDCTADCT         CHAIN ACTIVE LOGON DCTS TO OURS   R4
         ST    MDCT,MSNALOG        UPDATE LINE MANAGER DCT POINTER   R4
         OI    MSCANIND,MSCNRAT    FORCE RAT AUTOLOGON SCAN         R41
         L     R1,$MWORK           GET MESSAGE WPRK AREA       @OZ83316
         MVC   0(L'MOPNMSG,R1),MOPNMSG MOVE MESSAGE TEXT       @OZ83316
         MVC   2(8,R1),DCTDEVN     MOVE LOGON NAME TO MESSAGE  @OZ83316
         SPACE 1                                               @OZ83316
        $WTO   (R1),L'MOPNMSG,JOB=NO,WAIT=NO, ISSUE MESSAGE    @OZ83316C
               ROUTE=$LOG+$TP,CLASS=$ALWAYS,PRI=$HI            @OZ83316
         SPACE 1                                                     R4
MLOGOFRE DS    0H                  FREE SETLOGON START BUFFER        R4
        $FREEBUF (MBUF)            RETURN BUFFER TO FREE POOL        R4
         B     MLOGNEXT            GO SEARCH FOR MORE WORK           R4
         SPACE 1                                               @OZ83316
MOPNMSG $MSG   091,'LOGONXXX IS ACTIVE'                        @OZ83316
         EJECT                                                       R4
*                                                                   R41
*        TPEND PORCESSING ROUTINE                                   R41
*                                                                   R41
         SPACE 1                                                     R4
MLOGTPND DS    0H                  TPEND EXIT SCHEDULED EVENT        R4
         LR    R2,R14              SAVE RETURN CODE            @OZ45801
         L     R1,$MWORK           POINT TO MSG WORKAREA       @OZ45801
         MVC   0(L'MXITMSG,R1),MXITMSG MOVE MESSAGE TEXT       @OZ45801
         USING MXITMSG,R1          SET MSG ADDRESSABILITY      @OZ45801
         MVC   MXITLUN,DCTDEVN     SET LOGON NAME              @OZ45801
         STC   R2,MXITWORK         SET RETURN CODE             @OZ45801
         UNPK  MXITRC(3),MXITWORK(2) SETUP RETURN CODE         @OZ45801
         TR    MXITRC,$HEXTRAN        AND XLATE TO EBCDIC      @OZ45801
         MVC   MXITID,=C'TPEND'    SET EXIT ID                 @OZ45801
         DROP  R1                  SUSPEND MSG ADDRESSABILITY  @OZ45801
        $WTO   (R1),L'MXITMSG,JOB=NO,WAIT=NO, ISSUE MESSAGE    @OZ45801C
               ROUTE=$LOG+$ERR+$TP,CLASS=$ALWAYS,PRI=$HI       @OZ45801
         LR    R14,R2              RESTORE RETURN CODE         @OZ45801
         SRL   R14,2               ADJUST RET CODE FOR BRANCH  @OZ38908
         LA    R1,2                CHECK FOR VTAM              @OZ46552
         CLR   R14,R1               INITIATED ABEND            @OZ46552
         BNE   MLOGNABD            NO, CHECK ACTIVE SESSIONS   @OZ46552
         OI    MDCTSTAT,DCTABORT   SHOW APPL ABORTING          @OZ46552
MLOGNABD OI    DCTSTAT,DCTDRAIN    SHOW APPL DRAINING          @OZ46552
         L     MICE,MDCTICE        GET ADDR OF 1ST  LOGGED-ON ICE    R4
         LTR   MICE,MICE           TEST IF ANY SESSIONS              R4
         LA    WA,MLOGNEXT         LOAD RETURN FOR ACB CLOSE ROUT    R4
         BZ    MLOGSTOP            GO CLOSE ACB IF NO SESSIONS       R4
         USING ICEDSECT,MICE       SHOW ICE ADDRESSABILITY          R41
*                                  THIS LINE DELETED BY APAR   @OZ46552
         LA    R1,MLOGTLIM         GET HIGHEST ALLOWED RETURN CODE   R4
         CLR   R14,R1              COMPARE RETURN CODE WITH LIMIT    R4
         BNL   MLOGTRAP            ABORT IF INVALID RET CODE   @OZ38908
         IC    R1,MLOGTTAB(R14)    PICK UP RETURN CODE ENTRY         R4
         B     MLOGT(R1)            AND BRANCH TO PROC ROUTINE       R4
         SPACE 1                                                     R4
MLOGTTAB DS    0C                  TPEND EXIT ERROR ACTION TABLE     R4
         DC    AL1(MLOGTDRN-MLOGT) ORDERLY SHUTDOWN   REQ  -DRAIN    R4
         DC    AL1(MLOGTRAP-MLOGT) QUICK   SHUTDOWN   REQ  -TERMIN   R4
         DC    AL1(MLOGTRAP-MLOGT) VTAM INIT ABEND             @OZ46552
MLOGTLIM EQU   *-MLOGTTAB          HIGHEST ALLOWED ERROR CODE        R4
         EJECT                                                 @OZ45801
MLOGT    DS    0H                  ORIGIN FOR TPEND PROC ROUTINES    R4
         SPACE 2                                                    R41
*        DRAIN ALL APPLICATION SESSIONS                             R41
         SPACE 1                                                     R4
MLOGTDRN MVC   MBUFQUE,ICEAPCHN    SAVE ADDR OF NEXT LOGGED-ON ICE   R4
         BAL   ML,MICETRAP         MARK ICE DRAINING, CLOSE IF IDLE  R4
         L     MICE,MBUFQUE        RESTORE NEXT ICE ADDRESS          R4
         LTR   MICE,MICE           CHECK FOR END OF CHAIN            R4
         BNZ   MLOGTDRN            PROCESS THIS ICE IF NOT           R4
         B     MLOGNEXT            GO SEARCH FOR MORE WORK           R4
         SPACE 2                                                    R41
*        ABORT ALL APPLICATION SESSIONS                             R41
         SPACE 1                                                     R4
*                                  THIS LINE DELETED BY APAR   @OZ46552
         SPACE 1                                                     R4
MLOGTRAP MVC   MBUFQUE,ICEAPCHN    SAVE ADDR OF NEXT LOGGED-ON ICE   R4
         BAL   ML,MICEABRT         CALL SESSION ABORT ROUTINE  @OZ62696
         L     MICE,MBUFQUE        GET  ADDR OF NEXT LOGGED-ON ICE   R4
         LTR   MICE,MICE           TEST FOR END OF CHAIN             R4
         BNZ   MLOGTRAP            GO PROCESS NEXT ICE IF NOT        R4
         B     MLOGNEXT            SEARCH FOR MORE WORK              R4
         SPACE 1                                               @OZ45801
         DROP  MICE                DROP ICE ADDRESSABILITY          R41
         EJECT                                                       R4
*                                                                   R41
*        ACB CLOSE COMPLETION PROCESSING ROUTINE                    R41
*                                                                   R41
         SPACE 1                                                    R41
MLOGCLOS DS    0H                  CLOSE ACB SUBTASK COMPLETE EVENT R41
         TM    MDCTSTAT,DCTABORT   HAS CLOSE ACB BEEN SUCCESSFUL     R4
         BZ    MLOGCLER            BRANCH IF NO ERRORS INDICATED    R41
         BAL   ML,MAPIEMSG         ISSUE CLOSE ACB FAILED MSG        R4
*              THIS LINE DELETED BY APAR NUMBER                @OZ27491
MLOGCLER TM    DCTSTAT,DCTDRAIN    CHECK DCT DRAIN STATUS      @OZ27491
         LA    WA,MLOGNEXT         LOAD RETURN FOR ACB OPEN ROUTINE  R4
         BZ    MLOGSTRT            RESTART LOGON DCT IF NO DRAIN     R4
         B     MLDCTFRE            ELSE BRANCH TO FREE LOGON DCT     R4
         EJECT                                                      R41
*                                                                   R41
*        VTAM INTERFACE (API) ERROR MESSAGE SUBROUTINE              R41
*                                                                   R41
         SPACE 1                                                    R41
MAPIEMSG DS    0H                  ISSUE JES2/VTAM API ERROR MSG    R41
         TM    MFLAGS,MLOGGED      TEST CONTROL-BLOCK HANDLING FLAGS R4
         BOR   ML                  RETURN IF EVENT ALREADY LOGGED    R4
         L     R1,$MWORK           GET MESSAGE WORKAREA ADDRESS      R4
         MVC   0(L'MAPIMSG,R1),MAPIMSG  MOVE MSG TARGET TO WORKAREA  R4
         USING MAPIMSG,R1          PROVIDE MSG ADDRESSABILITY        R4
         STC   R14,MAPIWORK        SAVE RETURN CODE IN MSG           R4
         MVC   MAPINAME,DCTDEVN    MOVE LOGON DCT NAME TO MSG        R4
         UNPK  MAPISTAT(3),MAPIWORK(2)   SET UP RETURN  CODE INFO    R4
         UNPK  MAPISTAT+2(3),MDCTXERR(2) SET UP ACB FEEDBACK INFO    R4
         TR    MAPISTAT,$HEXTRAN         TRANSLATE INFO TO EBCDIC    R4
         LA    R15,MAPIRTAB-4(R15) POINT TO REQUEST ENTRY            R4
         MVC   MAPIREQC,0(R15)     MOVE REQUEST ID TO MSG            R4
         LR    WA,R14              SAVE R14 AROUND $WTO              R4
        $WTO   (R1),L'MAPIMSG,JOB=NO,WAIT=NO,  ISSUE ERROR MESSAGE     C
               ROUTE=$LOG+$ERR+$TP,CLASS=$ALWAYS,PRI=$HI             R4
         OI    MFLAGS,MLOGGED      SHOW MESSAGE HAS BEEN LOGGED      R4
         LR    R14,WA              RESTORE R14 INDEX VALUE           R4
         BR    ML                  RETURN TO CALLER                  R4
         DROP  R1                  RELEASE MSG ADDRESSABILITY        R4
         SPACE 1                                                     R4
MAPIRTAB DC    C'OPEN',C'TPND',C'CLOS'  REQUEST TYPE TABLE           R4
*              THIS LINE DELETED BY APAR NUMBER              * @OZ32566
*              THIS LINE DELETED BY APAR NUMBER              * @OZ32566
         SPACE 1                                                     R4
MAPIMSG $MSG   092,'API ERROR ON LOGONXXX ACB,RRRR,SSCP,SSSS'  @OZ83316
MAPINAME EQU   MAPIMSG+15,8        LOGON DCT NAME                    R4
MAPIREQC EQU   MAPIMSG+28,4        REQUEST IDENTIFIER                R4
MAPIWORK EQU   MAPIMSG+30,1        WORK FIELD FOR UNPK               R4
MAPISTAT EQU   MAPIMSG+38,8        STATUS INFORMATION                R4
         SPACE 2                                                    R41
         DROP  MBASE1,MBASE2,MBASE3   RELEASE ROUTINES              R41
         DROP  MDCT                     AND DCT ADDRESSABILITY      R41
         TITLE 'HASP LINE MANAGER -- ICE EXIT ROUTINE PROCESSING SCAN'
***********************************************************************
*                                                                     *
*                 ICE EXIT ROUTINE PROCESSING SCAN                    *
*                                                                     *
***********************************************************************
         SPACE 1                                                     R4
*                                  ADDRESSABILITY -                 R41
         USING ICEDSECT,MICE             ICE                        R41
         USING RTAMVSUB,MBASE2,MBASE3    COMMON SNA SUBROUTINES     R41
         USING MICEPROC,MBASE1           LOCAL ROUTINE BASE         R41
         SPACE 2                                                    R41
MICEPROC DS    0H                                                   R41
         SLR   R0,R0               GET EMPTY QUEUE INDICATOR        R41
MICEPROQ CS    MICE,R0,MICEQUE     ATTEMPT TO CLEAR QUEUE           R41
         BNE   MICEPROQ            RETRY IF UNSUCCESSFUL            R41
         SPACE 1                                                    R41
         ST    MICE,MWORKQUE                                        R41
MICENEXT L     MICE,MWORKQUE       GET ADDR OF NEXT QUEUED ICE      R41
         LTR   MICE,MICE           CHECK FOR ANY MORE ICE           R41
         BZ    MSCANEXT            BRANCH IF END OF CHAIN           R41
         SLR   R0,R0               GET ZERO VALUE FOR RESET         R41
         SPACE 1                                                    R41
         L     R15,ICEXTCHN        GET EXIT CODE AND NEXT ICE ADDR   R4
MICEPDEX CS    R15,R0,ICEXTCHN     ATTEMPT TO RESET ICE CHAIN FIELD R41
         BNE   MICEPDEX            RETRY IF UNSUCCESSFUL            R41
         LR    R14,R0              CLEAR R14 FOR EXIT CODE           R4
         SLDL  R14,8               ISOLATE EXIT ROUTINE CODE         R4
         SRL   R15,8               GET ADDR OF NEXT CHAINED ICE      R4
         STC   R14,MCOMMAND        SAVE ACTION CODE FOR REQUEUE      R4
         ST    R15,MWORKQUE        SAVE ICE ADDR ON WORK QUEUE       R4
         LA    R15,X'F0'           GET MASK AND ISOLATE EXIT         R4
         NR    R15,R14              ROUTINE IDENTIFIER CODE          R4
         XR    R14,R15             GET EXIT ROUTINE COMPL CODE       R4
         SRL   R15,2               ADJUST EXIT ID  FOR TABLE SCAN   R41
         L     MDCT,ICEADCT        SET UP LOGON DCT ADDRESS          R4
         USING DCTDSECT,MDCT       SHOW LOGON DCT ADDRESSABLE       R41
         SLR   MBUF,MBUF           INDICATE NO CURRENT BUFFER        R4
         LA    ML,MICENEXT         SET UP COMMON RETURN ADDRESS      R4
         L     R1,MICEBTAB-4(R15)  GET APPROPRIATE TABLE ENTRY      R41
         BR    R1                  BRANCH TO PROCESSING ROUTINE     R41
         EJECT                                                 @OZ45801
MICEPRQR LA    R0,=C'RQRVY'        POINT TO EXIT NAME          @OZ45801
         LA    R2,MICEABRT         LOG EXIT AND ABORT          @OZ45801
         SPACE 2                                               @OZ45801
MICEPMSG LR    R15,R0              SAVE EXIT NAME ADDR         @OZ45801
         L     R1,$MWORK           POINT TO MSG AREA           @OZ45801
         MVC   0(L'MXITMSG,R1),MXITMSG  MOVE MSG               @OZ45801
         USING MXITMSG,R1          SET MSG ADDRESSABILITY      @OZ45801
         MVC   MXITLUN,ICESYMB     SET SESSION LUNAME          @OZ45801
         STC   R14,MXITWORK        SET RETURN CODE             @OZ45801
         UNPK  MXITRC(3),MXITWORK(2)  SETUP RET CODE INFO      @OZ45801
         TR    MXITRC,$HEXTRAN     TRANS RET CD TO EBCDIC      @OZ45801
         MVC   MXITID,0(R15)       MOVE EXIT NAME              @OZ45801
         DROP  R1                  SUSPEND ADDRESSABILITY      @OZ45801
        $WTO   (R1),L'MXITMSG,JOB=NO,WAIT=NO,  ISSUE MESSAGE   @OZ45801C
               ROUTE=$LOG+$ERR+$TP,CLASS=$ALWAYS,PRI=$HI       @OZ45801
         BR    R2                  RETURN TO CALLER            @OZ45801
         SPACE 2                                               @OZ45801
         SPACE 3                                                    R41
MICEBTAB DS    0F                  EXIT ROUTINE BRANCH TABLE        R41
         DC    A(MICELOGN)         LOGON  EXIT SCHEDULED EVENT      R41
         DC    A(MICELOGN)         SIMULATED LOGON (AUTOLOGON)      R41
         DC    A(MICEGBUF)         DEFERRED BUFFER GET ATTEMPT      R41
         DC    A(MICETRAP)         RELREQ EXIT SCHEDULED EVENT      R41
         DC    A(MICEPRQR)         SCIP EXIT SCHEDULED EVENT   @OZ45801
         DC    A(MICELOST)         LSTTRM EXIT SCHEDULED EVENT      R41
         DC    A(MICETHAW)         DISCONNECT  ROUTINE              R41
         EJECT                                                      R41
*                                                                   R41
*        LOGON EXIT PROCESSING                                      R41
*                                                                   R41
         SPACE 1                                                    R41
MICELOGN DS    0H                  LOGON EXIT SCHEDULED EVENT       R41
        $GETBUF TYPE=VTAM          ACQUIRE AND INIT VTAM BUFFER     R41
         BZ    MICEREQU            REQUEUE THIS REQUEST IF FAILED   R41
         USING RPLDSECT,MBUF       SHOW RPL ADDRESSABILITY          R41
         LR    MBUF,R1             PROVIDE BUFFER ADDRESSABILITY    R41
         ST    MBUF,ICEBUFAD       SAVE BUFFER ADDRESS IN ICE       R41
         SPACE 1                                                    R41
         LA    R15,RPLBUFST        POINT TO NIB AREA                R41
         USING NIBDSECT,R15        ESTABLISH NIB ADDRESSABILITY     R41
         XC    NIBDSECT(NIBSIZE),NIBDSECT CLEAR NIB AREA            R41
         SPACE 1                                                    R41
         OI    ICESTAT,ICEHOLD     ICE NOT ELIGIBLE FOR ALLOC       R41
         MVI   ICEINDEX,VSEQLOGN+VSEQLDEV SET ICE LOGON STATUS      R41
         ST    MICE,RPLICE         SAVE ICE ADDR IN BUFFER          R41
         STCM  MDCT,7,RPLDCT+1     SAVE DCT ADDR IN BUFFER          R41
         MVC   RPLDACB,DCTACB      MOVE ACB ADDRESS TO RPL          R41
         MVI   RPLREQ,RPLINQIR     SHOW INQUIRE REQUEST TYPE        R41
         MVI   RPLOPT8,RPLODACP    SHOW OPNDST WILL BE ACCEPT       R41
         MVI   RPLOPT9,RPLDEVCH    SHOW INQUIRE DEVCHAR REQ         R41
         LA    R0,L'ISTDVCHR       GET REQUESTED DATA LENGTH        R41
         ST    R0,RPLBUFL           AND STORE IN RPL FOR INQUIRE    R41
         SPACE 1                                                    R41
         MVI   NIBID,NIBIDD        INIT NIB IDENT  FIELD            R41
         MVI   NIBLEN,NIBLNIB      INIT NIB LENGTH FIELD            R41
         ST    MICE,NIBUSER        INIT NIB USER   FIELD            R41
         MVC   NIBSYM,ICESYMB      SHOW TERMINAL NAME IN NIB        R41
         MVC   NIBMODE,=CL8'RECORD' INDIC RECORD MODE IN NIB        R41
         MVI   NIBPROCD,PRORPLC    SHOW RPLC PROC OPT IN NIB        R41
         ST    R15,RPLARG          STORE NIB ADDRESS  IN RPL        R41
         MVI   RPLEXTDS,RPLNIB     SHOW RPLARG POINTS TO NIB        R41
         LA    R1,NIBDEVCH         GET ADDR OF NIBDEVCH FIELD       R41
         ST    R1,RPLAREA           AND STORE IN RPL FOR INQUIRE    R41
         SPACE 1                                                    R41
         CLI   MCOMMAND,VXIDALOG   TEST FOR SIMULATED LOGON         R41
         BNE   MICELOG             BRANCH IF NOT                    R41
         L     R1,ICELDCT          PICK UP PRE-ALLOCATED LINE DCT   R41
         LTR   R1,R1               TEST LINE DCT ADDRESS            R41
         BNZ   MICELGN1            LINE AVAILABLE, CONTINUE    @OZ47992
         MVI   ICEINDEX,X'00'      ZERO SPEC SEQ FOR MICECLOS  @OZ47992
         B     MICEABDN            ABANDON OPNDST ATTEMPT      @OZ47992
MICELGN1 DS    0H                                              @OZ47992
         L     R1,MDCTRAT-DCTDSECT(,R1)  LOCATE LOGON RAT ENTRY     R41
         ST    R1,NIBRAT           STORE RAT ADDRESS IN NIB         R41
         SPACE 1                                                    R41
         MVI   ICEINDEX,VSEQALOG+VSEQLDEV  SET ICE AUTOLOG STATUS   R41
         MVI   RPLOPT8,RPLODACQ    SHOW OPNDST WILL BE ACQUIRE      R41
         MVI   NIBLMODE,C' '        AND SET TO USE...               R41
         MVC   NIBLMODE+1(L'NIBLMODE-1),NIBLMODE ..DEFAULT LOGMODE  R41
         MVC   RPLSEQTP,ICEINDEX   SET RPL SPECIAL SEQUENCE TYPE    R41
         B     MVRPLXEC            PASS REQUEST TO VTAM AND RETURN  R41
         EJECT                                                      R41
MICELOG  L     R1,MDCTICE          GET LOGGED  ON ICE CHAIN         R41
         ST    R1,ICEAPCHN         CONNECT ICE TO OLD CHAIN         R41
         ST    MICE,MDCTICE         AND STORE NEW ICE CHAIN         R41
         LH    R1,MDCTSNCT         GET LOGGED  ON ICE COUNT         R41
         LA    R1,1(0,R1)          INCREMENT COUNTER BY ONE         R41
         STH   R1,MDCTSNCT          AND RESTORE COUNT VALUE         R41
         SPACE 1                                                    R41
         MVC   RPLSEQTP,ICEINDEX   SET RPL SPECIAL SEQUENCE TYPE    R41
         B     MVRPLXEC            PASS REQUEST TO VTAM AND RETURN  R41
         DROP  MBUF,R15            DROP RPL AND NIB ADDRESSABILITY  R41
         EJECT                                                      R41
*                                                                   R41
*        LOSTERM PROCESSING ROUTINE                                 R41
*                                                                   R41
         SPACE 1                                                    R41
MICELOST DS    0H                  LOSTERM EXIT SCHEDULED EVENT     R41
         SLL   R14,2               MULTIPLY INDEX BY FOUR      @OZ45801
         LR    R15,R14             SAVE RETURN CODE            @OZ45801
         LA    R2,MICELTRT         SET RETURN ADDR             @OZ45801
         LA    R0,=C'LSTRM'        SET EXIT NAME               @OZ45801
         LA    R1,MICELIMT         GET HIGHEST ALLOWED RC      @OZ45801
         CLR   R15,R1              COMP RET CD WITH LIMIT      @OZ45801
         BNL   MICEPMSG            LOG EXIT AND ABORT SESSION  @OZ45801
         L     R2,MICELTAB(R15)    POINT TO PROCESSING RTN     @OZ45801
         B     MICEPMSG            LOG EXIT AND CONTINUE       @OZ45801
         SPACE 2                                                    R41
MICELTAB DS    0F                  LOSTERM EXIT ERROR ACTION TABLE  R41
         DC    A(MICELRET)         ** NOT APPLICABLE **   - ERROR   R41
         DC    A(MICELRET)         ** NOT APPLICABLE **   - ERROR   R41
         DC    A(MICELRET)         ** NOT APPLICABLE **   - ERROR   R41
         DC    A(MICELTRT)         LU RESTART FAILED           @OZ45801
         DC    A(MICELTRT)         LU RESTART SUCCUSSFUL       @OZ45801
         DC    A(MICELTRT)         LU LOGOFF UNCONDITIONAL     @OZ45801
         DC    A(MICEAHLD)         LU RESTART IN PROCESS  - PURGE   R41
         DC    A(MICELRET)         ** NOT APPLICABLE **   - ERROR   R41
         DC    A(MICETRAP)         LU LOGOFF CONDITIONAL  - DRAIN   R41
         DC    A(MICELTRT)         LU BUFFER LIMIT EXCEEDED    @OZ45801
MICELIMT EQU   *-MICELTAB          HIGHEST ALLOWED ERROR CODE       R41
         SPACE 1                                                    R41
MICELRET BR    ML                  BRANCH TO PROCESS NEXT ICE       R41
         SPACE 1                                               @OZ45801
MICELTRT TM    ICEFLGS2,ICEFREEZ   IS ICE FROZEN...            @OZ45801
         BZ    MICEABRT            BRANCH IF NOT - CLSDST      @OZ45801
         TM    ICEFLAGS,ICECNECT   DOES SESSION EXIST...       @OZ45801
         BZ    MICEABRT            BRANCH IF NOT               @OZ45801
         NI    ICESTAT,FF-ICEABORT ELSE, RESET ABORT           @OZ45801
         B     MICEABRT             AND TERMINATE SESSION      @OZ45801
         EJECT                                                      R41
MICETHAW LTR   R14,R14             TEST DISCONNECT SUBSEQUENCE      R41
         BZ    MICEDISC            BR IF ONLY DISCONNECT FROM LINE  R41
         B     MICEMELT             ELSE, FREE ICE                  R41
         SPACE 3                                                    R41
         DROP  MBASE1,MBASE2,MBASE3  RELEASE ROUTINES AND           R41
         DROP  MICE,MDCT               DATA AREA ADDRESSABILITY     R41
         SPACE 1                                                     R4
         LTORG                                                       R4
         TITLE 'HASP LINE MANAGER -- RAT SCAN FOR AUTOLOGON'        R41
***********************************************************************
*                                                                     *
*                      RAT SCAN FOR AUTOLOGON                         *
*                                                                     *
***********************************************************************
         SPACE 1                                                    R41
*                                  ADDRESSABILITY --                R41
         USING RATDSECT,WA               -- RAT                     R41
         USING RTAMVSUB,MBASE2,MBASE3    -- COMMON SNA SUBROUTINES  R41
         USING MRATPROC,MBASE1           -- LOCAL ROUTINE BASE      R41
         SPACE 2                                                    R41
MRATPROC DS    0H                                                   R41
         L     WA,$RATABLE         GET RAT ADDRESS             @OZ32567
         LH    WC,$NUMRJE          PICK UP NUMBER OF RAT ENTRIES    R41
*              THIS LINE DELETED BY APAR NUMBER                @OZ32567
         SPACE 1                                                    R41
*                                                                   R41
*        LOCATE REMOTES IN AUTOLOGON (OR $S) MODE                   R41
*                                                                   R41
         SPACE 1                                                    R41
MRATEST  TM    RATTYPE,DCTPSNA     TEST FOR SNA TYPE REMOTES        R41
         BZ    MRATNXT             BR IF NOT, DO NEXT REMOTE        R41
         TM    RATFLAGS,RATALM+RATSRMT  IF RMT NOT IN AUTOLOG MODE  R41
         BZ    MRATNXT             GO TRY NEXT RAT ENTRY            R41
         OI    MEVNTREQ,MEVNALM    SHOW REMOTE IN AUTOLOGON MODE    R41
         TM    MEVNTREQ,MEVNTIME   CHECK FOR TIME INTERVAL EXPIRED  R41
         BZ    MRATCHEK            BRANCH IF NO, GO CHECK RAT       R41
         OI    MSTQE+IPOST,X'20'   REQUEST NEXT TIME INTERVAL       R41
MRATCHEK L     R15,RATLDCT         PICK UP LINE DCT                 R41
         USING DCTDSECT,R15        TEMP. LINE DCT ADDRESSABILITY    R41
         LTR   R15,R15             TEST FOR REMOTE SIGNED ON        R41
         BZ    MRATCHK1            BR IF NO, GO CHECK TIMER         R41
         CL    WA,MDCTRAT          TEST FOR CONNECTED REMOTE        R41
         BE    MRATNXT             BR IF NO, TRY NEXT REMOTE        R41
         DROP  R15                                                  R41
         SPACE 2                                                    R41
MRATCHK1 L     R1,MCLOCK           COMPARE CURRENT TIME             R41
         CL    R1,RATIMER           TO REMOTE SIGNOFF TIME          R41
         BL    MRATNXT             SKIP AUTOLOGON IF STILL DELAYING R41
         EJECT                                                      R41
*                                                                   R41
*        IF REMOTE IN AUTOLOGON MODE - LOOK FOR OUTPUT (OR MSGS)    R41
*                                                                   R41
MRATWTST DS    0H                                                   R41
         TM    RATFLAGS,RATSRMT    TEST FOR START RMT COMMAND       R41
         BO    MALOGON             BRANCH IF YES, SKIP WORK TEST    R41
         L     MDCT,RATRDCT        FIRST REMOTE DCT ADDRESS         R41
         USING DCTDSECT,MDCT       REMOTE DCT ADDRESSABILTY         R41
         SLR   R14,R14             MULTIPLY                         R41
         IC    R14,DCTNO+1          REMOTE NUMBER                   R41
         LA    R1,0(R14,R14)         BY THREE TO                    R41
         ALR   R1,R14                 GET ADDR OF                   R41
         AL    R1,$MSPOOLQ             MSG QUEUE ENTRY              R41
         CLC   1(1,R1),0(R1)       IF MSG ON QUEUE                  R41
         BNE   MALOGON              GO DO AUTOLOGON                 R41
         SPACE 1                                                    R41
MRATPP   TM    DCTDEVTP,DCTPRPU    IF NOT A PRINT OR PUNCH DCT      R41
         BNO   MRATNDCT             GO GET NEXT REMOTE DCT          R41
         SPACE 1                                                    R41
        $#GET  DCT=(MDCT),HAVE=NO  IF DEVICE HAS QUEUED OUTPUT      R41
         SPACE 1                                                    R41
         BNZ   MALOGON              GO DO AUTOLOGON                 R41
         SPACE 1                                                    R41
MRATNDCT L     MDCT,MDCTDCT        FIND NEXT REMOTE DCT             R41
         LTR   MDCT,MDCT           TEST FOR END OF REMOTE CHAIN     R41
         BNZ   MRATPP              LOOP, CHECK FOR WORK             R41
         DROP  MDCT                RELEASE RMT DCT ADDRESSABILITY   R41
         SPACE 1                                                    R41
         B     MRATNXT             TRY NEXT REMOTE                  R41
         EJECT                                                      R41
*                                                                   R41
*        ATTEMPT TO AUTOLOGON                                       R41
*                                                                   R41
         SPACE 1                                                    R41
MALOGON  TM    RATFLAGS,RATPILUN   TEST FOR LUNAME DEFINED          R41
         BNO   MALMSG              BR NOT DEFINED, ISSUE MESSAGE    R41
         SPACE 2                                                    R41
*        LOCATE ACTIVE APPLICATION (LOGON DCT)                      R41
         SPACE 1                                                    R41
         SLR   R1,R1               CLEAR R1                    @OZ64289
         LA    R15,$LOGNDCT-(DCTCHAIN-DCTDSECT) POINT TO 1ST LGN    R41
         USING DCTDSECT,R15        TEMP LOGON DCT ADDRESSABILITY    R41
MALOGSCN L     R15,DCTCHAIN        CHAIN TO NEXT DCT                R41
         LTR   R15,R15             TEST FOR CHAIN END               R41
         BZ    MALDCTCK            BRANCH IF YES               @OZ64289
         CLI   DCTDEVTP,DCTLOG     TEST DCT TYPE                    R41
         BNE   MALDCTCK            BRANCH IF NOT LOGON         @OZ64289
         TM    MDCTSTAT,DCTSINON+DCTSOFF    TEST DCT  AVAILABILTY   R41
         BNM   MALOGSCN            BRANCH IF NOT AVAILABLE     @OZ64289
         LTR   R1,R1               ELSE, SAVE                  @OZ64289
         BNZ   MALICECK             FIRST LOGON                @OZ64289
         LR    R1,R15                DCT ADDRESS               @OZ64289
         SPACE 1                                               @OZ64289
MALICECK LA    MICE,MDCTICE-ICEAPCHN+ICEDSECT PHONY ICE ADDR   @OZ64289
         SPACE 1                                               @OZ64289
         USING ICEDSECT,MICE       SET ICE ADDRESSABILITY      @OZ64289
MALUNSCN ICM   MICE,15,ICEAPCHN    GET NEXT CHAINED ICE        @OZ64289
         BZ    MALOGSCN            BRANCH IF NONE              @OZ64289
         CLC   ICESYMB,RATSYMB     TEST FOR ACTIVE SESSION     @OZ64289
         BE    MRATNXT             BRANCH IF YES               @OZ64289
         B     MALUNSCN            LOOP THRU ACTIVE ICES       @OZ64289
         SPACE 1                                               @OZ64289
         DROP  R15,MICE            DROP TEMP ADDRESSABILITY    @OZ64289
         SPACE 1                                               @OZ64289
MALDCTCK LTR   R15,R1              TEST IF LOGON DCT LOCATED   @OZ64289
         BZ    MSCANEXT            BRANCH IF NOT               @OZ64289
         EJECT                                                 @OZ64289
*        LOCATE AVAILABLE LINE DCT                                  R41
         SPACE 1                                                    R41
         L     MDCT,RATLDCT        PICK UP LINE DCT ADDRESS         R41
         USING DCTDSECT,MDCT       SHOW LINE DCT ADDRESSABLE        R41
         LTR   MDCT,MDCT           TEST FOR LINE DCT                R41
         BZ    MALGDLNE            BRANCH IF DCT NOT PRESENT   @OZ32443
         LR    R1,MDCT             SAVE LINE DCT FOR SEARCH    @OZ32443
         LA    MDCT,MSNAIDL-(MDCTADCT-DCTDSECT) SEARCH IDLE    @OZ32443
MALGLLNE L     MDCT,MDCTADCT         LINE DCTS                 @OZ32443
         LTR   MDCT,MDCT           TEST FOR END OF CHAIN       @OZ32443
         BZ    MRATNXT             BRANCH IF YES, NO LINE      @OZ32443
         CLR   MDCT,R1             CHECK FOR CORRECT LINE DCT  @OZ32443
         BNE   MALGLLNE            BRANCH IF NOT RIGHT LINE    @OZ32443
         B     MALGLNED            BRANCH IF LINE DCT FOUND    @OZ32443
MALGDLNE DS    0H                                              @OZ32443
         LA    MDCT,MSNAIDL-(MDCTADCT-DCTDSECT) LOCATE IDLE DCTS    R41
MALGLNES L     MDCT,MDCTADCT       FIND NEXT IDLE DCT               R41
         LTR   MDCT,MDCT           TEST FOR END OF CHAIN            R41
         BZ    MRATNXT             BRANCH IF YES, NO LINE FOUND     R41
         TM    MDCTSTAT,DCTLEASE+DCTSHARE  TEST LINE STATUS         R41
         BNZ   MALGLNES            BRANCH IF LEASED OR SHARED, SKIP R41
         CLI   MDCTPSWD,C' '       TEST LINE PASSWORD               R41
         BNE   MALGLNES            USE ONLY LINES WITHOUT PASSWORDS R41
         L     R1,MDCTRAT          PICK UP ASSOCIATED RAT ADDRESS   R41
         LTR   R1,R1               TEST FOR UN-OWNED LINE           R41
         BNZ   MALGLNES            BRANCH IF NOT, TRY NEXT LINE     R41
         EJECT                                                      R41
*        TEST FOR REMOTE ALREADY CONNECTED TO OTHER SYSTEM          R41
         SPACE 1                                                    R41
MALGLNED LR    R0,WA               COPY RAT OFFSET                  R41
         SL    R0,$RATABLE         R0 = (RMT NO -1) * RATTLE        R41
         LR    R1,R0               MULTIPLY                         R41
         ALR   R1,R0                BY                              R41
         ALR   R1,R0                 THREE                          R41
         SLR   R0,R0               DIVIDE BY EIGHT AND              R41
         D     R0,=A(RATTLE)        RATTLE GIVING OFFSET TO         R41
         D     R0,=A(8)              BYTE (QUOT) AND BIT (REMAIN)   R41
         AL    R1,$RMTSON          R1 = BYTE ADDR OF SIGNON BITS    R41
         LR    R14,R0              MOVE BIT OFFSET                  R41
         L     R0,=A(QUEBUSY*X'2000')  GET BIT TO TEST BUSY         R41
         SRL   R0,0(R14)           SHIFT TO BIT OFFSET              R41
         STH   R0,MSONWORK         STORE IN WORK AREA FOR TEST      R41
         NC    MSONWORK,0(R1)      TEST FOR RMT ON ANY OTHER SYSTEM R41
         BNZ   MRATNXT             BRANCH IF YES, TRY NEXT REMOTE   R41
         SLR   R0,R0               GET BUSY BITS                    R41
         ICM   R0,4,$SIDBUSY         FOR THIS SYSTEM                R41
         SRL   R0,3(R14)           SHIFT TO BIT OFFSET              R41
         STH   R0,MSONWORK         STORE IN WORK AREA FOR SET       R41
         SPACE 2                                                    R41
*        ALLOCATE AVAILABLE ICE                                     R41
         SPACE 1                                                    R41
         L     MICE,$ICETRAY       GET FREE ICE ADDRESS             R41
         USING ICEDSECT,MICE       ESTABLISH ICE ADDRESSABILITY     R41
MALGICER LTR   MICE,MICE           TEST ICE AVAILABILTY             R41
         BZ    MSCANEXT            BRANCH IF NONE, ABANDON SCAN     R41
         L     R14,ICEAPCHN        LOCATE NEXT ICE ON CHAIN         R41
         CS    MICE,R14,$ICETRAY   TRY TO REMOVE ICE FROM TRAY      R41
         BNE   MALGICER            BRANCH IF FAILED, RE-TRY         R41
         XC    ICEDSECT(ICESIZE),ICEDSECT  CLEAR ICE                R41
         SPACE 2                                                    R41
*        SHOW RMT ON THIS SYSTEM                                    R41
         SPACE 1                                                    R41
         OC    0(2,R1),MSONWORK    SET BITS -- SHOW RMT ON SYSTEM   R41
         EJECT                                                      R41
*        PRE-ALLOCATE (AND PRE-CONNECT) LINE-REMOTE-ICE             R41
         SPACE 1                                                    R41
MALGTBUF MVC   ICESYMB,RATSYMB     MOVE LUNAME INTO ICE             R41
         ST    R15,ICEADCT         STORE LOGON DCT ADDRESS IN ICE   R41
         ST    MDCT,ICELDCT        STORE LINE DCT ADDRESS IN        R41
         ST    MDCT,RATLDCT         ICE AND RAT ENTRY               R41
         ST    WA,MDCTRAT          STORE RAT ADDRESS IN LINE DCT    R41
         NI    DCTFLAGS,DCTLOGAL   RESET FLAGS ---EXCEPT LOGGING    R41
         L     R1,RATRDCT          PICK UP FIRST REMOTE DCT ADDRESS R41
         ST    R1,MDCTDCT          STORE REMOTE ADDRESS IN LNE DCT  R41
MALGRMT  ST    MDCT,DCTDCB-DCTDSECT(,R1)  STORE LNE DCT ADDR IN RMT R41
         L     R1,MDCTDCT-DCTDSECT(,R1)  PICK UP ADDR OF NEXT DCT   R41
         LTR   R1,R1               TEST FOR END OF REMOTE CHAIN     R41
         BNZ   MALGRMT             BRANCH IF NO, DO THIS REMOTE     R41
         SPACE 2                                                    R41
*        REMOVE LINE DCT FROM IDLE AND ADD TO ACTIVE QUEUE          R41
         SPACE 1                                                    R41
         L     R1,MDCTADCT         GET ADDRESS OF NEXT IDLE DCT     R41
         LA    R14,MSNAIDL-(MDCTADCT-DCTDSECT)  PICK UP IDLE QUEUE  R41
         USING DCTDSECT,R14        PICK UP TEMP. DCT ADDRESSABILTY  R41
MALGLDSC L     R0,MDCTADCT         LOCATE NEXT IDLE DCT             R41
         CLR   MDCT,R0             COMPARE TO ALLOCATED LINE DCT    R41
         BE    MALGLDEQ            BR IF EQUAL, GO RE-QUEUE LINE    R41
         LTR   R14,R0              ELSE, BUMP TO NEXT IDLE DCT      R41
         BNZ   MALGLDSC            BR IF NOT END OF CHAIN, LOOP     R41
         BAL   R8,M03A             ERROR-LINE NOT ON IDLE QUE  @OZ49689
         SPACE 1                                                    R41
MALGLDEQ ST    R1,MDCTADCT         REMOVE LINE DCT FROM IDLE QUEUE  R41
         DROP  R14                 RELEASE TEMP. DCT ADDRESSABILTY  R41
         L     R14,MSNALNE         PICK UP ACTIVE LINE DCT QUEUE    R41
         ST    R14,MDCTADCT        PLACE ALLOCATED LINE             R41
         ST    MDCT,MSNALNE         AT TOP OF ACTIVE LINE QUEUE     R41
         L     R1,MDCTICE          PICK UP LINE DCT ICE CHAIN       R41
         ST    R1,ICEALCHN         ADD AUTOLOGON SESSION            R41
         ST    MICE,MDCTICE         TO ALLOCATED ICE CHAIN          R41
         LH    R1,MDCTSNCT         PICK UP LINE SESSION COUNT       R41
         LA    R1,1(,R1)            INCREMENT                       R41
         STH   R1,MDCTSNCT           STORE UPDATED COUNT            R41
         SPACE 2                                                    R41
*        PLACE THE ICE OF THE LOGON DCT CHAIN                       R41
         SPACE 1                                                    R41
         USING DCTDSECT,R15        PICK UP LOGON DCT ADDRESSABILITY R41
         L     R1,MDCTICE          PICK UP LOGON DCT CHAIN          R41
         ST    R1,ICEAPCHN         PLACE ICE AT TOP                 R41
         ST    MICE,MDCTICE        REPLACE LOGON DCT ICE CHAIN      R41
         LH    R1,MDCTSNCT         INCREMENT                        R41
         LA    R1,1(,R1)            APPLICATION                     R41
         STH   R1,MDCTSNCT           SESSION COUNT                  R41
         DROP  R15                 RELEASE LOGON DCT ADDRESSABILITY R41
         EJECT                                                      R41
*        SCHEDULE THE LOGON REQUEST (SIMULATE A LOGON)              R41
         SPACE 1                                                    R41
         OI    ICESTAT,ICEABORT+ICEHOLD  PREVENT CLSDST OR ALLOC    R41
         SPACE 1                                                    R41
         LR    MDCT,WA             SAVE RAT ENTRY ADDRESS           R41
         LA    R0,VXIDALOG         SETUP ICE EXIT CODE              R41
         BAL   ML,MICEREQ1         QUEUE ICE TO THE LINE MANAGER    R41
         LR    WA,MDCT             RELOAD RAT ENTRY ADDRESS         R41
         SPACE 2                                                    R41
*                                                                   R41
*        CONTINUE SCAN -- CHECK NEXT REMOTE                         R41
*                                                                   R41
         SPACE 1                                                    R41
MRATNXT  LA    WA,RATTLE(,WA)      POINT TO NEXT RAT ENTRY          R41
         BCT   WC,MRATEST           GO CHECK NEXT RAT ENTRY         R41
         B     MSCANEXT            GO DO NEXT SCAN                  R41
         SPACE 3                                                    R41
*                                                                   R41
*        AUTOLOGON FAILED -- LUNAME NOT SPECIFIED                   R41
*                                                                   R41
         SPACE 1                                                    R41
MALMSG   NI    RATFLAGS,255-RATALM-RATSRMT  RESET AUTOLOGON FLAGS   R41
         L     R1,$MWORK           PICK UP WORK AREA ADDRESS        R41
         MVC   0(L'MALMSG1,R1),MALMSG1   MOVE MSG TO WORK AREA      R41
         USING MALMSG1,R1          TEMPORARY MESSAGE ADDRESSABILTY  R41
         MVC   MALMSGR,RATNAME     MOVE REMOTE NAME TO MESSAGE      R41
         $WTO  (R1),L'MALMSG1,WAIT=NO,JOB=NO,       ISSUE MESSAGE   R41C
               ROUTE=$LOG+$TP+$ERR,CLASS=$ALWAYS,PRI=$HI            R41
         DROP  R1                  RELEASE MESSAGE ADDRESSABILITY   R41
         SPACE 1                                                    R41
         B     MRATNXT             GO TRY NEXT REMOTE               R41
         SPACE 1                                                    R41
         SPACE 3                                                    R41
         LTORG                                                      R41
         SPACE 3                                                    R41
         DROP  MBASE1,MBASE2,MBASE3    RELEASE ROUTINES,            R41
         DROP  WA,MDCT                  RAT AND DCT ADDRESSABILITY  R41
         TITLE 'HASP LINE MANAGER -- BSC CHANNEL END PROCESSOR'     R41
***********************************************************************
*                                                                     *
*                  BSC BUFFER PROCESSING ROUTINE                      *
*                                                                     *
***********************************************************************
         SPACE 1                                                    R41
*                                  ADDRESSABILITY --                R41
         USING BUFDSECT,MBUF            -- BUFFER                   R41
         USING RTAMBSUB,MBASE2,MBASE3   -- COMMON BSC SUBROUTINES   R41
         USING MBSCPROC,MBASE1          -- LOCAL ROUTINE BASE       R41
         SPACE 3                                                    R41
MBSCPROC DS     0H                                                  R41
         SPACE 1                                                    R41
         LH    R0,$EXCPCT          DECREMENT                        R41
         S     R0,=F'1'             MASTER I/O COUNT                R41
         BM    M01                 ERROR IF NEGATIVE                R41
         STH   R0,$EXCPCT          UPDATE MASTER I/O COUNT          R41
         SPACE 1                                                    R41
         L     MDCT,BUFDCT         GET ASSOCIATED DCT ADDRESS       R41
         LA    MDCT,0(,MDCT)        PURIFY LINE DCT ADDRESS         R41
         USING DCTDSECT,MDCT         SHOW DCT ADDRESSABILITY        R41
         L     MCODE,MDCTCODE      GET ADDRESS OF CODE TABLE        R41
         USING MCODSECT,MCODE       SHOW CODE TABLE ADDRESSABILITY  R41
         SPACE 1                                                    R41
         SR    R1,R1               DECREMENT                        R41
         IC    R1,DCTBUFCT          ACTIVE                          R41
         S     R1,=F'1'              BUFFER COUNT                   R41
         BNZ   M01                 ERROR IF NOT ZERO                R41
         STC   R1,DCTBUFCT         STORE DECREMENTED BUFFER COUNT   R41
         SPACE 1                                                    R41
         L     R0,MDCTSXCP         INCREMENT                        R41
         AL    R0,=F'1'             SESSION                         R41
         ST    R0,MDCTSXCP           EXCP COUNT                     R41
         SPACE 1                                                    R41
         L     WA,IOBCSW-1         GET COMMAND ADDRESS FROM CSW     R41
         LA    WA,0(,WA)           CLEAR HIGH-ORDER BYTE            R41
         LTR   WA,WA               TEST                             R41
         BZ    MDRAINLN            MACHINE ERROR IF ZERO            R41
         SL    WA,=F'8'            GET LAST EXECUTED CSW            R41
         TM    IOBSIOCC,X'30'      TEST SIO CONDITION CODE          R41
         BZ    MBSCTST             BRANCH IF SUCCESSFUL SIO    @OZ46118
         L     WA,IOBSTART         COMPENSATE FOR UNPREDICTABLE CSW R41
         BO    MDRAINLN            BRANCH IF LINE IS NOT AVAILABLE  R41
MBSCTST  TM    IOBCSW+4,X'06'      IF ICC OR CCC, THE CSW      @OZ79642
         BNZ   MBSCDRN               IS UNPREDICTABLE          @OZ79642
         CLI   IOBECBCC,X'41'      IS IT A VALID CSW...        @OZ46118
         BE    MBSCPRC              YES, CONTINUE              @OZ46118
         TM    IOBECBCC,X'7F'      IS CSW VALID...             @OZ46118
         BO    MBSCPRC             YES, CONTINUE               @OZ46118
MBSCDRN  L     WA,IOBSTART         COMP FOR UNPREDICTABLE CSW  @OZ79642
         B     MDRAINLN            BRANCH IF CSW INVALID       @OZ46118
MBSCPRC  DS    0H                                              @OZ46118
         TM    DCTFLAGS,DCTLOGAL   TEST FOR DIAGNOSTIC LOGGING      R41
         BZ    *+8                 BRANCH IF NO DIAGNOSTIC LOGGING  R41
         BAL   ML,MCELOG           LOG CHANNEL END                  R41
         SPACE 1                                                    R41
         TM    IOBCSW+4,X'BF'      TEST FOR DISASTROUS ERRORS       R41
         BNZ   MFORCERL            BR IF ANY TO FORCE ERROR AND LOG R41
         MVC   MCOMMAND,5(WA)      COPY TP SEQ TYPE FIELD      @OZ42144
         NI    MCOMMAND,X'0F'      EXTRACT CCW TYPE INDICATOR  @OZ42144
         TM    IOBSENS0,X'90'      TEST SENSE BYTE             @OZ41880
         BNZ   MCOMMREJ            BR IF CMD REJ OR EQC        @OZ41880
         SPACE 1                                                    R41
         TM    DCTFLAGS,DCTRSTRT   TEST FOR LINE RESTART            R41
         BZ    MBSCPREP            SKIP IF NOT                      R41
         TM    MDCTSTAT,DCTSOFF    SHOULD DISCONNECT SEQ BE SENT    R41
         BO    MDRAINED            BRANCH IF YES                    R41
         B     MRSTLINE            ELSE GO ABORT AND DISCONNECT     R41
         EJECT                                                      R41
*                                                                   R41
*                             BSC PREPARE SEQUENCE PROCESSING       R41
*                                                                   R41
         SPACE 3                                                    R41
MBSCPREP TM    IOBCSW+3,X'03'      TEST CHANNEL END STATUS          R41
         BNZ   MBSCCE              BR IF UNIT CHECK OR UNIT EXCEPTN R41
         CLC   IOBCSW+5(2),6(WA)   CHECK RESIDUAL BYTE COUNT        R41
         BNE   MBSCCE              BRANCH IF NOT SAME AS INITIAL    R41
         CLI   0(WA),X'02'         CHECK FOR READ CCW               R41
         BNE   MBSCCE              BRANCH IF NOT READ
         OI    IOBSENS0,X'02'      THIS IMPOSSIBLE CONDITION CAN ONLY
         OI    IOBCSW+3,X'02'       HAPPEN ON A 2703 -- SIMULATE ERROR
         SPACE 2
MBSCCE   TM    5(WA),MPREPSEQ      TEST SEQUENCE TYPE
         BZ    MBCERDWR            BRANCH IF NOT PREPARE
         SPACE 2                                                     R4
         CLI   0(WA),X'14'         TEST FOR CTCA SENSE COMMAND       R4
         BNE   MBSCPTOF            BRANCH IF NOT                     R4
         MVI   4(WA),X'60'         RE-CHAIN CTCA SENSE COMMAND       R4
         LA    R1,IOBCCW4          R1=ADDR OF READ COMMAND     @OZ38139
         CLI   LCBMCB,X'01'        OTHER SYSTEM ISSUE WRITE... @OZ38139
         BE    MNEWSTRT            YES, ISSUE READ             @OZ38139
         LA    R1,IOBCCW2          R1 = ADDRESS OF WRITE COMMAND     R4
         CLI   LCBMCB,0            OTHER SYS ISSUE RD OR CNTL..@OZ38139
         BNE   MNEWSTRT            BRANCH IF YES                     R4
         LA    R1,IOBCCW3          R1 = ADDRESS OF CONTROL COMMAND   R4
         B     MNEWSTRT            GO START CTCA                     R4
         SPACE 2                                                     R4
MBSCPTOF BAL   ML,MSIGNOFF         CHECK FOR DRAIN OR SIGN-OFF       R4
         SPACE 2                                                     R4
         TM    IOBCSW+3,X'01'      TEST CHANNEL END STATUS
         BO    MBSCPRUE            BRANCH IF UNIT EXCEPTION
         TM    MDCTLINE,DCTPCTC    TEST LINE TYPE                    R4
         BO    MBSCPTUC            BRANCH IF CTCA                    R4
         SPACE 1                                                     R4
         CLI   MCOMMAND,MENBCMD    TEST COMMAND TYPE
         BL    MRETRY              BRANCH IF DISABLE OR SET MODE
         BE    MBSCPNAN            BRANCH IF ENABLE COMMAND
         CLI   MDCTIMOK,255        WAS MODEM ON HOOK
         BNE   MBSCPNAN            BRANCH IF NOT
         MVC   MDCTIMOK,MCLOCK     SET TIME MODEM FIRST READY
MBSCPNAN LA    R1,IOBCCW3          RESET RESTART ADDRESS
         ST    R1,IOBRESTR          TO BYPASS DISABLE AND SET MODE
         EJECT                                                       R4
MBSCPTUC TM    IOBCSW+3,X'02'      TEST CHANNEL END STATUS           R4
         BO    MBSCPRUC            BRANCH IF UNIT CHECK
         MVI   IOBCCW3,X'27'       RESET CCW3 TO ENABLE              R4
         MVI   MDCTERCT,8          RESET ERROR COUNT
         SPACE 2
         LA    R1,TPBUFST-2        COMPUTE
         AH    R1,6(,WA)            ADDRESS OF
         SH    R1,IOBCSW+5           LAST TWO BYTES
         MVC   LCBRCB,0(R1)        SAVE LAST TWO BYTES
         SPACE 2                                                     R4
         CLC   MSOHENQ,LCBRCB      TEST RESPONSE
         BE    MBSCPUST            BRANCH IF SOH-ENQ SEQUENCE
         TM    MSEQTYPE,MCPUSEQ    WAS SOH-ENQ SENT                  R4
         BNO   SKIP1320            SKIP IF NOT                       R4
         CLC   MACK0SEQ,LCBRCB     TEST RESPONSE                     R4
         BE    MBSCPUSA            BRANCH IF ACK0                    R4
SKIP1320 TM    MDCTLINE,DCTPCTC    TEST LINE TYPE                    R4
         BZ    MBSCPTNC            SKIP IF NOT CTCA                  R4
         OC    MDCTOBUF+1(3),MDCTOBUF+1 SIGNON TO BE SENT            R4
         BZ    SKIP1330            SKIP IF NOT                       R4
         OI    MSEQTYPE,MCPUSEQ    SET SENDING SOH-ENQ               R4
         LA    R1,MSOHENQ          POINY TO SOH-ENQ                  R4
         STCM  R1,7,IOBCCW2+1      SET WRITE CCW                     R4
SKIP1330 BAL   ML,MINITCDL         SETUP A DELAY                     R4
         B     MBUFNEXT            SEARCH FOR OTHER WORK             R4
         SPACE 2                                                     R4
MBSCPTNC CLC   MBSCENQ,LCBRCB+1    TEST RESPONSE                     R4
         BE    MSTARTRD            IF ENQ, START READER
         CLC   MACK0SEQ,LCBRCB     IF ACK0,
         BE    MSTARTPP             START PRINTER OR PUNCH
         CLC   MACK1SEQ,LCBRCB     IF ACK1,
         BE    MSTARTPP             START PRINTER OR PUNCH
         CLC   MBSCNAK,LCBRCB+1    TEST RESPONSE FOR NAK             R4
         BE    MBSCPTST            BRANCH IF NAK
         CLC   MBSCWACK,LCBRCB+1   IF WACK RESPONSE,           @OZ49730
         BE    MRETRY               RETRY I/O                  @OZ49730
         B     MRETRYL             OTHERWISE, LOG AND RETRY
         SPACE 2
MBSCPRUE DS    0H                  BSC PREPARE UNIT EXCEPTION
         CLI   0(WA),X'01'         CHECK FOR WRITE COMMAND
         BE    MRESTART            GO CLEAR LOST DATA IF WRITE
         B     MRETRYL             OTHERWISE, LOG AND RETRY
         EJECT
MBSCPRUC DS    0H                  BSC PREPARE UNIT CHECK
         CLI   0(WA),X'29'         TEST FOR UNSUCCESSFUL DIAL        R4
         BE    MFORCERL            IF YES, LOG AND RESTART LINE      R4
         MVI   IOBCCW3,X'27'       RESET CCW3 TO ENABLE              R4
         TM    IOBSENS0,X'02'      TEST FOR LOST DATA
         BO    MRETRY              BRANCH IF LOST DATA
         TM    IOBSENS0,X'41'      TEST FOR INT REQ OR TIMEOUT
         BZ    MRETRYL             BRANCH IF NEITHER TO LOG AND RETRY
         TM    IOBSENS0,X'40'      TEST FOR INTERVENTION REQUIRED
         BZ    MBSCPNAD            BRANCH IF NO
         TM    MDCTLINE,DCTPNADS   SHOULD REMOTE BE DISCONNECTED
         BZ    MFORCERL            IF YES, LOG AND RESTART LINE
         BAL   ML,MCERRLOG         ELSE, LOG INT REQ           @OZ29621
         SPACE 1                                                     R4
MBSCPNAD CLI   MDCTIMOK,255        IF MODEM IS OFF HOOK              R4
         BE    MBSCPTD             TEST DIAL                         R4
         OC    MDCTOBUF+1(3),MDCTOBUF+1 SIGNON TO BE SENT            R4
         BZ    MBSCPNDI            BRANCH IF NOT                     R4
         OI    MSEQTYPE,MCPUSEQ    SET SENDING SOH-ENQ               R4
         LA    R1,MSOHENQ          POINT TO SOH-ENQ                  R4
         ST    R1,IOBCCW5          SET WRITE CCW ADDRESS             R4
         MVI   IOBCCW5,X'01'       SET WRITE OP-CODE                 R4
         MVI   IOBCCW5+7,2         SET COUNT                         R4
         B     MRETRY              RETRY I/O                         R4
         SPACE 1                                                     R4
MBSCPTD  CLI   IOBCCW7,0           NEED TO DIAL                      R4
         BZ    MRETRY              SKIP DIAL SETTING IF NOT          R4
         LA    R1,IOBCCW7+1        GET ADDRESS OF DIAL DIGITS        R4
         ST    R1,IOBCCW3          STORE IN CCW3                     R4
         MVI   IOBCCW3,X'29'       SET CCW3 TO DIAL                  R4
         MVC   IOBCCW3+7(1),IOBCCW7  SET COUNT OF DIAL DIGITS        R4
         MVI   IOBCCW7,0           RESET DIAL REQUEST                R4
         LA    R1,IOBCCW1          START AT DISABLE COMMAND          R4
         B     MNEWSTRT            GO TRY DIAL                       R4
         SPACE 1                                                     R4
MBSCPNDI CLI   MCOMMAND,MREADCMD   TEST COMMAND TYPE                 R4
         BNE   MRETRY              RETRY IF NOT READ
         SPACE 1                                                     R4
MBSCPTST L     WA,MDCTDCT          GET ADDR OF FIRST REMOTE DCT
         LTR   WA,WA               TEST
         BZ    MRETRY              BRANCH IF NOT SIGNED ON
         TM    MDCTFMT-DCTDSECT(WA),DCTPROG  TEST FORMAT TYPE
         BNZ   MRETRY              BR IF PROGRAMMABLE INTERFACE
         SPACE 1                                                     R4
         CLI   IOBCCW5,X'01'       IS ENQ/EOT BEING SENT
         BNE   MBSCPNOP            BRANCH IF NO
         XI    IOBCCW5+3,MBSCEOT-MBSCENQ     ALTERNATE ENQ AND EOT
         TM    IOBCCW5+3,MBSCEOT-MBSCENQ     IS EOT TO BE SENT
         BO    MRETRY              YES, SEND IT
         EJECT                                                       R4
MBSCPNOP TM    MDCTATTN,MDCTJOB    TEST IF JOB HAS BEEN POSTED       R4
         BZ    MBSCPRNE            SET UP READ COMMAND IF NOT        R4
         BM    MRETRY              RETRY POLLING IF OUTPUT QUEUED    R4
         SPACE 1                                                     R4
         L     R1,MDCTRAT          GET TERMINAL RAT ENTRY ADDR       R4
         LH    R1,RATWTIME-RATDSECT(,R1) GET TERMINAL WAIT TIME      R4
         LTR   R1,R1               WAIT TIME INTERVAL SPECIFIED      R4
         BNZ   SKIP1340            USE TERMINAL VALUE IF YES         R4
         LH    R1,$WAITIME         GET INSTALLATION DEFAULT VALUE    R4
SKIP1340 AL    R1,MDCTIMOK         GET TIME INTERVAL EXPIRED AND     R4
         CL    R1,MCLOCK            CHECK AGAINST WAIT TIME VALUE    R4
         BH    MBSCPRNF            RETRY IF NOT YET EXPIRED    @OZ29391
         SPACE 1                                                     R4
         NI    MDCTATTN,255-MDCTJOB2    RESET QUEUE TO TEST INDIC.   R4
         L     WA,MDCTDCT-DCTDSECT(,WA) GET ADDR OF PRINTER DCT
         TM    DCTSTAT-DCTDSECT(WA),DCTDRAIN TEST STATUS
         BNZ   MBSCPRPU            BRANCH IF PRINTER IS DRAINED
         TM    DCTPPSW-DCTDSECT(WA),DCTPPSWS  TEST STATUS      @OZ20001
         BO    MBSCPRNC            BRANCH IF SEP PAGE SUPRESS  @OZ20001
         SLR   R15,R15                     CLEAR R15           @OZ45379
         L     R1,MDCTRAT                   POINT TO RAT       @OZ45379
         IC    R15,RATCONRT+1-RATDSECT(,R1)  MULTIPLY RMT NUM  @OZ45379
         LA    R1,0(R15,R15)               BY                        R4
         ALR   R1,R15                       THREE                    R4
         AL    R1,$MSPOOLQ         ADD ADDRESS OF REMOTE MSG QUEUES  R4
         CLC   1(1,R1),0(R1)       COMPARE RECORD NUMBERS
         BNE   MBSCPREQ            REMOTE MESSAGES QUEUED IF NOT EQUAL
         SPACE 1                                                     R4
MBSCPRNC DS    0H                                              @OZ20001
        $#GET  DCT=(WA),HAVE=NO    TEST FOR JOB TO PRINT
         BNZ   MBSCPREQ            BRANCH IF JOB AWAITING PRINT
         EJECT                                                       R4
MBSCPRPU DS    0H                                                    R4
         L     WA,MDCTDCT-DCTDSECT(,WA) GET ADDRESS OF PUNCH DCT
         LTR   WA,WA               IS THERE A PUNCH DCT
         BZ    MBSCPRNE            BRANCH IF NO
         TM    DCTSTAT-DCTDSECT(WA),DCTDRAIN TEST STATUS
         BNZ   MBSCPRNE            BRANCH IF PUNCH IS DRAINED
        $#GET  DCT=(WA),HAVE=NO    TEST FOR JOB TO PUNCH
         BNZ   MBSCPREQ            BRANCH IF JOB AWAITING PUNCH
         SPACE 1                                                     R4
MBSCPRNE NI    MDCTATTN,255-MDCTJOB1    RESET OUTPUT QUEUED INDIC.   R4
         SPACE 1                                               @OZ29391
MBSCPRNF MVI   IOBCCW5,X'03'       NOP ENQUIRY WRITE           @OZ29391
         TM    $RJEOPTS,$ADDSYNS   TEST ADDITIONAL IDLES OPTION      R4
         BZ    MRETRY              BR TO RETRY IF NOT SELECTED       R4
         MVI   IOBCCW4,X'03'       NOP ADD SYN WRITE                 R4
         MVI   IOBCCW4+4,X'60'     SET COMMAND CHAINING
         B     MRETRY              RETRY READ COMMAND                R4
         SPACE 1                                                     R4
MBSCPREQ MVI   IOBCCW5,X'01'       ACTIVATE ENQUIRY WRITE            R4
         TM    $RJEOPTS,$ADDSYNS   TEST ADDITIONAL IDLES OPTION      R4
         BZ    MRETRY              RETRY IF NOT SET                  R4
         MVI   IOBCCW4,X'01'       ACTIVATE ADD SYN WRITE            R4
         MVI   IOBCCW4+4,X'A0'     SET DATA CHAINING
         B     MRETRY              GO TO SEND ENQUIRY                R4
         EJECT
*
*                             BSC READ/WRITE SEQUENCE PROCESSING
*
         SPACE 2
MBCERDWR TM    5(WA),MCPUSEQ       TEST SEQUENCE TYPE                R4
         BZ    MBCENSF             BRANCH IF NOT PROGRAMMABLE INTERFACE
         OC    MDCTOBUF,MDCTOBUF   TEST OPEN AND OUTPUT STATUS       R4
         BNZ   MBCENSF             BRANCH IF REMOTE IS NOT IDLE
         BAL   ML,MSIGNOFF         CHECK FOR DRAIN OR SIGN-OFF
         SPACE 1
MBCENSF  TM    IOBCSW+3,X'02'      TEST CHANNEL END STATUS     @OZ41611
         BO    MBSCRWUC            BRANCH IF UNIT CHECK        @OZ41611
         TM    IOBCSW+3,X'01'      TEST CHANNEL END STATUS     @OZ41611
         BO    MBSCRWUE            BRANCH IF UNIT EXCEPTION    @OZ41611
         MVI   MDCTERCT,8          RESET ERROR COUNT
         SPACE 1
         TM    5(WA),MCPUSEQ       TEST SEQUENCE TYPE
         BZ    MBCE27X0            BRANCH IF NOT PROGRAMMABLE INTERFACE
         SPACE 1
         MVI   IOBECBCC,0          RESET BUFFER BUSY STATUS          R4
         OI    MDCTSTAT,DCTPBUF    INDICATE OUTPUT NOT POSTED        R4
         NI    MDCTSTAT,255-DCTPOST INDICATE NO OUTPUT SENT          R4
         CLI   0(WA),X'02'         IS THIS A READ CCW               R41
         BNE   MFORCERL            IF NOT--FORCE ERROR & RESTART    R41
         L     R1,0(WA)            R1 = ADDRESS OF RESPONSE
         CLC   MSOHSTX,0(R1)       TEST RESPONSE
         BE    MBCETEXT            BRANCH IF TEXT
         CLC   MDLESTX,0(R1)       TEST RESPONSE
         BE    MBCETEXT            BRANCH IF TRANSPARENT TEXT
         CLC   MACK0SEQ,0(R1)      TEST RESPONSE
         BNE   MBCENAK0            BRANCH IF NOT ACK0
         NI    MDCTFCS,X'BF'       TURN OFF WAIT-A-BIT INDICATION
         B     MBCEACK0            PROCESS ACK0
         SPACE 1
MBCENAK0 CLC   MSOHENQ,0(R1)       TEST RESPONSE
         BE    MBSCPUST            BRANCH IF SOH-ENQ SEQUENCE
         CLC   MNAKSEQ,0(R1)       TEST FOR CTCA NAK                 R4
         BE    MFORCERL            LOG AND RESTART LINE IF NAK       R4
         CLC   MBSCNAK,0(R1)       TEST FIRST CHARACTER
         BNE   MCWRNAKL            BRANCH IF INVALID RESPONSE
         BAL   ML,MCERRLOG         LOG NAK
         CLI   MCOMMAND,MRRSPCMD   TEST LAST WRITE TYPE
         BE    MBCENAK             BRANCH IF LAST WRITE WAS WAIT-A-BIT
         TM    5(WA),MWRITSEQ      TEST LAST WRITE TYPE
         BO    MRETRY              BRANCH IF LAST WRITE WAS TEXT
         CLC   MACK0SEQ,LCBRCB     TEST LAST RESPONSE SENT
         BE    MBCENAK             BRANCH IF ACK0
         TM    MDCTLINE,DCTPHASP   TEST LINE USAGE
         BZ    MRETRY              BRANCH IF REMOTE WORKSTATION
         B     MBCENAK             AVOID NAK-NAK IF HASP
         EJECT
MBCETEXT TM    MDCTLINE,DCTPCTC    TEST LINE TYPE                    R4
         BO    MBCETETB            BRANCH IF CTCA                    R4
         LR    R15,R1              COMPUTE                           R4
         AH    R15,6(WA)            ADDRESS
         SH    R15,IOBCSW+5          OF
         BCTR  R15,0                  LAST BYTE
         CLC   MBSCETB,0(R15)      TEST LAST BYTE
         BE    MBCETETB            BRANCH IF LAST BYTE IS ETB
         MVC   IOBSENS0,0(R15)     SAVE LAST BYTE IN SENSE INFORMATION
         B     MCWRNAKL            WRITE NAK AND LOG
MBCETETB MVC   MDCTFCS,3(R1)       SAVE FUNCTION CONTROL SEQUENCE
         SPACE 2
         TM    2(R1),X'20'         TEST FOR RESET BLOCK SEQUENCE COUNT
         BZ    *+10                BRANCH IF NOT
         MVN   MDCTRSEQ(1),2(R1)   YES, RESET COUNT
         SPACE 1
         TM    2(R1),X'30'         TEST FOR IGNORE BLOCK SEQUENCE COUNT
         BNZ   MBCENSEQ            BRANCH IF IGNORE OR RESET
         SPACE 1
         MVN   MSEQWORK+1(1),2(R1) ISOLATE RECEIVED BLOCK COUNT
         SR    R15,R15             CLEAR REGISTER
         IC    R15,MDCTRSEQ        PICK UP EXPECTED COUNT
         SH    R15,MSEQWORK        GENERATE ERROR
         BZ    MBCEUSEQ            BRANCH IF NO ERROR
         BP    *+8                 BRANCH IF NO DIGIT OVERFLOW
         LA    R15,16(R15)         CORRECT DIGIT OVERFLOW
         C     R15,=F'2'           COMPARE WITH MAXIMUM ERROR
         BNH   MBCEACK0            BRANCH IF DUPLICATE RECORD
         SPACE 1
         MVI   IOBCSW+3,0          CLEAR CHANNEL END STATUS
         MVC   IOBSENS0,MSEQWORK+1 SET UP RECEIVED BLOCK SEQUENCE COUNT
         MVC   LCBACK,MDCTRSEQ     SET UP EXPECTED COUNT
         BAL   ML,MCERRLOG         LOG SEQUENCE ERROR
         BAL   ML,MRSTRD           DELETE ALL INPUT PROCESSORS
         L     R1,0(WA)            RE-LOAD ADDRESS OF TEXT
         MVI   5(R1),0             NULLIFY TEXT
         SPACE 1
MBCEUSEQ LH    R15,MSEQWORK        INCREMENT RECEIVE
         LA    R15,1(R15)           BLOCK SEQUENCE
         STC   R15,MDCTRSEQ          COUNT
         NI    MDCTRSEQ,X'0F'      TAKE MODULO SIXTEEN
         EJECT                                                       R4
MBCENSEQ CLI   5(R1),X'E0'         TEST FOR REMOTE SEQUENCE ERROR
         BNE   MBCENSCK            BRANCH IF NOT
         MVC   IOBCSW+3(2),=X'FFFF' INDICATE REMOTE SEQUENCE ERROR
         MVN   IOBSENS0,2(R1)      SET UP RECEIVED BLOCK SEQUENCE COUNT
         MVC   LCBACK,6(R1)        SET UP EXPECTED COUNT
         NI    LCBACK,X'0F'        ISOLATE SEQUENCE COUNT
         MVC   MDCTTSEQ(1),6(R1)   SAVE EXPECTED COUNT
         L     R0,MDCTSREM         INCREMENT
         AL    R0,=F'1'             NON-SPECIFIC
         ST    R0,MDCTSREM           ERROR COUNT
         BAL   ML,MCELOG           LOG SEQUENCE ERROR
         L     R1,MDCTOBUF         IF OUTPUT BUFFER CONTAINS   @OZ39776
         CLI   TPBUFST+5-BUFDSECT(R1),X'A0' PERMISS. GRANTED   @OZ39776
         BE    MRETRY              THEN RESEND PERMISSION      @OZ39776
         BAL   ML,MRSTPP           RESTART ALL OUTPUT PROCESSORS
         L     R1,0(WA)            RE-LOAD ADDRESS OF TEXT
         SPACE 2                                                     R4
MBCENSCK LA    R1,5(R1)            GET ADDRESS OF FIRST RCB
         CLI   MCOMMAND,MRRSPCMD   TEST LAST WRITE TYPE
         BNE   MBCEDATA            BRANCH IF NOT WAIT-A-BIT
         BAL   ML,MBCNTRLR         ANALYZE CONTROL RECORD
         B     MBCEDISC            CONTINUE PROCESSING               R4
         SPACE 1
MBCEDATA ST    R1,TPBFDATA         INITIALIZE DATA POINTER
         BAL   ML,MBCNEXTR         PROCESS TEXT BUFFER
         CLI   TPBRECNT,C'E'       IS INPUT BUFFER EMPTY
         BE    *+8                 SKIP IF YES
         BAL   ML,MINITDLY         SETUP DELAY
         MVC   MDCTIMOK,MCLOCK     SET TIME OF TEXT TRANSMISSION
MBCEDISC TM    DCTFLAGS,DCTRSTRT   WAS DISCONNECT RECORD RECEIVED    R4
         BO    MRSTLINE            BRANCH IF YES                     R4
         SPACE 2                                                     R4
MBCEACK0 TM    5(WA),MWRITSEQ      TEST LAST WRITE TYPE
         BZ    MBCENTXT            BRANCH IF LAST WRITE WAS NOT TEXT
         MVC   MDCTIMOK,MCLOCK     SET TIME OF TEXT TRANSMISSION
         L     R1,MDCTOBUF         GET ADDRESS OF OUTPUT BUFFER
         MVC   MDCTOBUF+1(3),BUFCHAIN+1-BUFDSECT(R1)   DECHAIN BUFFER
         OI    MDCTSTAT,DCTPOST    INDICATE OUTPUT SENT              R4
         L     R15,BUFDCT-BUFDSECT(,R1) GET ADDRESS OF ASSOCIATED DCT
         OI    MDCTSTAT-DCTDSECT(R15),DCTPOST  SHOW I/O COMPLETE
         CLI   TPBUFST+5-BUFDSECT(R1),X'91'  TEST OUTPUT RCB
         BE    MBCONRCB            BRANCH IF CONSOLE           @OZ42466
         CLC   MDCTCMCT-DCTDSECT(,R3),$MAXCMCT  LIMIT REACHED  @OZ42466
         BNE   MBCEOUT             BRANCH IF NOT CONSOLE
MBCONRCB DS    0H                                              @OZ42466
         LR    R15,R1              R15 IS 1ST OUTPUT BUFFER ADDR
MBCERC1  L     R15,BUFCHAIN-BUFDSECT(,R15)  GET ADDR NEXT BUFFER
         LTR   R15,R15             TEST BUFFER ADDRESS
         BNZ   MBCERC2             BRANCH IF NOT END OF CHAIN
         MVI   MDCTCMCT,0          ZERO CONSOLE MESSAGE COUNT        R4
         B     MBCEOUT             GO FREE 1ST BUFFER
MBCERC2  CLI   TPBUFST+5-BUFDSECT(R15),X'91'  TEST OUTPUT RCB
         BNE   MBCERC1             LOOP IF NOT CONSOLE
MBCEOUT $FREEBUF (R1)              FREE OUTPUT BUFFER
         EJECT                                                       R4
MBCENTXT TM    MDCTFCS,X'40'       TEST REMOTE FCS
         BO    MBCENAK             BRANCH IF WAIT-A-BIT
         LR    R1,MDCT             PREPARE TO POST OUTPUT PROCESSORS
         SPACE 3
MBCENDCT L     R1,MDCTDCT-DCTDSECT(R1)  GET ADDRESS OF NEXT REMOTE DCT
         LTR   R1,R1               TEST FOR END OF CHAIN
         BZ    MBCENAK             BRANCH IF NO MORE REMOTE DCT'S
         SPACE 1
         TM    MDCTSTAT-DCTDSECT(R1),DCTPOST      TEST DCT STATUS
         BZ    MBCENDCT            BRANCH IF I/O IS NOT COMPLETE
         SPACE 1
         MVC   MFCSWORK,MDCTFCS-DCTDSECT(R1) GET UNIT FCS
         NC    MFCSWORK,MDCTFCS    APPLY REMOTE FCS
         BZ    MBCENDCT            BRANCH IF UNIT WAS NOT POSTED
         SPACE 1
         NI    MDCTSTAT,255-DCTPBUF-DCTPOST INDICATE OUTPUT POST     R4
         NI    MDCTSTAT-DCTDSECT(R1),255-DCTPOST  RESET I/O POST
         L     R15,DCTPCE-DCTDSECT(R1)  GET ADDRESS OF ASSOCIATED PCE
        $POST  (R15),WORK          POST PROCESSOR
         B     MBCENDCT            GET NEXT DCT
         SPACE 3
MBCENAK  CLI   MCOMMAND,MREADCMD   TEST LAST WRITE TYPE
         BE    MBCENWAB            BRANCH IF NOT WAIT-A-BIT
         LA    R1,MBSCSEQ+MCPUSEQ  RECONSTRUCT
         BAL   ML,MCCWINIT          CCW CHAIN
         EJECT
MBCENWAB TM    MDCTATTN,MDCTIMER   WAS A DELAY SETUP
         BO    *+8                 SKIP IF YES
         BAL   ML,MINITIO          SETUP NEXT I/O OPERATION
         TM    MDCTSTAT,DCTPBUF    WAS OUTPUT POSTED                 R4
         BZ    SKIP1350            SKIP IF YES                       R4
         OI    MDCTSTAT,DCTPOST    INDICATE OUTPUT NOT POSTED        R4
SKIP1350 TM    MDCTATTN,MDCTJOB    TEST IF JOB HAS BEEN POSTED
         BZ    MBUFNEXT            BRANCH IF NO JOB POST             R4
         NI    MDCTATTN,255-MDCTJOB     RESET JOB POST INDICATION
         TM    DCTSTAT,DCTDRAIN    TEST LINE DCT STATUS
         BO    MBUFNEXT            BRANCH IF DRAINING                R4
         TM    MDCTSTAT,DCTSOFF    TEST LINE DCT REMOTE STATUS
         BO    MBUFNEXT            BRANCH IF SIGNING OFF             R4
         SPACE 1                                                     R4
MBCENEXT L     MDCT,MDCTDCT        GET ADDRESS OF NEXT REMOTE DCT
         LTR   MDCT,MDCT           TEST FOR END OF CHAIN
         BZ    MBUFNEXT            BRANCH IF END OF CHAIN            R4
         CLI   DCTDEVTP,DCTRJR     TEST DEVICE TYPE
         BE    MBCENEXT            BRANCH IF REMOTE READER
         TM    DCTSTAT,DCTINUSE+DCTDRAIN  TEST DEVICE STATUS
         BNZ   MBCENEXT            BRANCH IF IN USE OR DRAINED
         NI    DCTSTAT,255-DCTHOLD RESET HOLD BIT
         L     R1,DCTPCE           INDICATE UNIT                     R4
        $POST  (R1),WORK            IS AVAILABLE                     R4
         B     MBCENEXT            GET NEXT DCT
         SPACE 3                                                     R4
MRSTRD   LA    R15,16*O            SET MASK FOR INPUT DELETE         R4
         B     *+8                 ENTER COMMON CODE
         SPACE 1                                                     R4
MRSTPP   LA    R15,16*Z            SET MASK FOR OUTPUT RESTART       R4
         LR    R1,MDCT             PREPARE TO SCAN REMOTE DCT'S
         SPACE 1
MRSTNEXT L     R1,MDCTDCT-DCTDSECT(R1)  GET ADDRESS OF NEXT REMOTE DCT
         LTR   R1,R1               TEST FOR END OF CHAIN
         BCR   Z,ML                RETURN IF END OF CHAIN
         TM    DCTDEVTP-DCTDSECT(R1),DCTPRPU  TEST DEVICE TYPE       R4
         EX    R15,MRSTBC          BRANCH IF NOT SELECTED TYPE       R4
         OI    DCTFLAGS-DCTDSECT(R1),DCTRSTRT+DCTBKSP  RESTART JOB
         B     MRSTNEXT            GET NEXT DCT
         SPACE 1                                                     R4
MRSTBC   BC    *-*,MRSTNEXT        *** EXECUTE ONLY ***              R4
         EJECT
MBCE27X0 L     R1,0(,WA)           GET DATA ADDRESS
         CLC   MSOHENQ,0(R1)       TEST FOR SOH-ENQ SEQUENCE
         BE    MFORCERL            RESTART LINE IF SOH-ENQ
         TM    5(WA),MWRITSEQ      TEST SEQUENCE TYPE
         BO    MBCEHDWR            BRANCH IF WRITE SEQUENCE
         CLC   MBSCSTX,TPBUFST     TEST FIRST DATA BYTE
         BE    MBCEHDRD            BRANCH IF STX
         CLC   MDLESTX,TPBUFST     TEST FIRST TWO DATA BYTES
         BE    MBCEHDRD            BRANCH IF DLE-STX
         CLC   MBSCENQ,TPBUFST     TEST FIRST DATA BYTE
         BE    MRETRY              BRANCH IF ENQ
         CLC   MBSCSOH,TPBUFST     TEST FIRST DATA BYTE
         BE    MBCENULL            BRANCH IF SOH
         B     MWRNAKL             INVALID DATA RECEIVED
         SPACE 1
MBCEHDRD LA    R1,TPBUFST-1        COMPUTE
         AH    R1,6(,WA)            ADDRESS OF
         SH    R1,IOBCSW+5           LAST BYTE
         CLC   MBSCENQ,0(R1)       TEST LAST BYTE
         BE    MWRNAK              BRANCH IF ENQ
         ST    R1,BUFEWF           SAVE ADDRESS OF LAST DATA BYTE
         NI    MDCTSTAT,255-DCTETX RESET ETX SWITCH
         CLC   MBSCETX,0(R1)       TEST TERMINATION BYTE
         BNE   *+8                 BRANCH IF NOT ETX
         OI    MDCTSTAT,DCTETX     SET ETX SWITCH, NEXT EOT IS EOF
         LH    R1,$BFSZBSC         GET                               R4
         BCTR  R1,0                 MAXIMUM                          R4
         BCTR  R1,0                  DATA LENGTH                     R4
         CLC   MBSCDLE,TPBUFST     TEST FIRST DATA BYTE
         BNE   *+6                 BRANCH IF NOT DLE
         BCTR  R1,0                REDUCE MAXIMUM DATA LENGTH
         CH    R1,IOBCSW+5         COMPARE WITH RESIDUAL LENGTH
         BH    MNORMAL             BRANCH IF DATA PRESENT
         SPACE 1
MBCENULL L     R1,IOBRESTR         SET UP
         ST    R1,IOBSTART          ADDRESS OF RESTART CCW
         BAL   ML,MEXCPNXT         READ NEXT BLOCK
         B     MBUFNEXT            SEARCH FOR OTHER WORK             R4
         EJECT                                                       R4
MBCEHDWR CLC   MBSCDLE,LCBRCB      TEST FIRST CHARACTER OF RESPONSE
         BNE   MBSCHNAK            BRANCH IF NOT DLE
         CLC   LCBACK,LCBRCB+1     TEST SECOND CHARACTER
         BE    MNORMAL             BRANCH IF ACK WAS THE ONE EXPECTED
         CLC   MBSCWACK,LCBRCB+1   TEST SECOND CHARACTER
         BE    MWRENQD             BRANCH IF WACK              @OZ74852
         CLI   MCOMMAND,MRREQCMD   TEST COMMAND TYPE
         BNE   MWRENQL             WRITE ENQUIRY IF NOT ALREADY WRITTEN
         IC    ML,LCBRCB+1         GET                               R4
         X     ML,MBSCACKX-3-MCODSECT(,MCODE)  INVERTED ACK          R4
         EX    ML,MBCEHTST         COMPARE INVERTED ACK              R4
         BE    MRETRYL             BRANCH IF COUNT CHECK TO RETRY & LOG
         B     MWRENQL             INVALID RESPONSE, WRITE ENQ & LOG
         SPACE 1
MBSCHNAK CLC   MBSCNAK,LCBRCB      TEST FOR NAK
         BNE   MBCEHENQ            BRANCH IF NOT NAK
         CLC   MBSCEOT,LCBRCB+1    TEST FOR PREVIOUS EOT
         BE    MWRENQD             BRANCH IF YES               @OZ74852
         CLI   MCOMMAND,MRREQCMD   TEST COMMAND TYPE
         BE    MRETRY              BRANCH IF RESPONSE TO ENQ   @OZ74852
         B     MRETRYL             OTHERWISE, LOG AND RETRY
         SPACE 1
MBCEHENQ CLI   MCOMMAND,MRREQCMD   TEST COMMAND TYPE
         BE    MWRENQD             BRANCH IF RESPONSE TO ENQ   @OZ74852
         B     MWRENQL             OTHEWISE, WRITE ENQUIRY AND LOG
         SPACE 1                                                     R4
MBCEHTST CLI   LCBACK,*-*          *** EXECUTE ONLY ***              R4
         SPACE 1                                               @OZ74852
MWRENQD  OI    MDCTATTN,MDCTPAWS+MDCTIMER SET FOR DELAYED ENQ  @OZ74852
         LA    R1,IOBCCW2          POINT TO ENQ                @OZ74852
         ST    R1,IOBSTART         START CCW                   @OZ74852
         L     R1,$MLLMPCE                 INDICATE $STIMER    @OZ74852
         OI    MSTQE+IPOST-PCEDSECT(R1),X'20' REQUESTED        @OZ74852
         B     MBUFNEXT            SEARCH FOR OTHER WORK       @OZ74852
         EJECT                                                 @OZ74852
MBSCRWUE DS    0H                  PROCESS BSC UNIT EXCEPTION
         CLI   0(WA),X'01'         TEST COMMAND TYPE
         BE    MRESTART            BRANCH IF WRITE COMMAND
         SPACE 2
         TM    5(WA),MCPUSEQ       TEST SEQUENCE TYPE
         BNZ   MCWRNAKL            BRANCH IF PROGRAMMABLE INTERFACE  R4
         SPACE 2
         CLC   MBSCEOT,LCBRCB+1    TEST FOR PREVIOUS EOT
         BE    MRDTEST             BRANCH IF YES
         MVC   LCBACK,MBSCACK0     SET ACK0 RESPONSE
         CLC   MBSCWACK,LCBRCB+1   TEST LAST RESPONSE
         BE    *+10                BRANCH IF WACK
         MVC   LCBACK,MBSCACK1     SET ACK1 RESPONSE TO FORCE RETRY
         MVC   LCBRCB+1(1),MBSCEOT INDICATE EOT RECEIVED
MRDTEST  CLI   MCOMMAND,MRREQCMD   TEST COMMAND TYPE
         BE    MPPSUSPD            BRANCH IF READ RESPONSE TO ENQ
         CLI   MCOMMAND,MRRSPCMD   TEST COMMAND TYPE
         BNE   METXTEST            BRANCH IF NOT READ RESPONSE
MPPSUSPD DS    0H                  SUSPEND REMOTE OUTPUT DEVICES
         LR    R1,MDCT             SEARCH REMOTE DCTS
         SPACE 1
MPPSRCH  L     R1,MDCTDCT-DCTDSECT(,R1)  GET ADDR OF NEXT RMT DCT
         LTR   R1,R1               TEST FOR END OF CHAIN
         BZ    MWRENQL             BRANCH IF END OF CHAIN
         TM    DCTSTAT-DCTDSECT(R1),DCTINUSE  TEST DEVICE STATUS
         BZ    MPPSRCH             BRANCH IF NOT IN USE
         TM    DCTPPFL-DCTDSECT(R1),DCTSUSPD  IS SUSPEND ALLOWED
         BZ    MWRENQL             BRANCH IF NO
         OI    DCTFLAGS-DCTDSECT(R1),DCTRSTRT+DCTBKSP  SUSPEND
         B     MWRENQL             GO LOG AND WRITE ENQ
         SPACE 2
METXTEST TM    MDCTSTAT,DCTETX     TEST FOR ETX
         BO    MREADEOT            BRANCH IF ETX, EOT IS REAL
         SPACE 2
         MVC   LCBACK,MBSCACK0     SET RESPONSE
         MVC   LCBRCB,MACK0SEQ      TO ACK0
         B     MRDTXT                AND READ FOR ENQ
         EJECT
MBSCRWUC DS    0H                  PROCESS BSC UNIT CHECK
         TM    IOBSENS0,X'40'      TEST SENSE BYTE
         BZ    MBUCNADS            BRANCH IF NOT INTV REQD
         TM    MDCTLINE,DCTPNADS   SHOULD REMOTE BE DISCONNECTED
         BZ    MFORCERL            IF YES, LOG AND RESTART LINE
         B     MBINTREQ            ELSE PROCESS INTV REQD
MBUCNADS DS    0H                  *
         CLI   MCOMMAND,MENBCMD    TEST COMMAND TYPE
         BE    MBINTREQ            BRANCH IF ENABLE
         SPACE 2                                                     R4
         TM    5(WA),MCPUSEQ       TEST SEQUENCE TYPE
         BZ    MBUCHDWR            BRANCH IF NOT PROGRAMMABLE INTERFACE
         SPACE 3
MCWRNAKL BAL   ML,MCERRLOG         LOG ERROR
         TM    MDCTLINE,DCTPCTC    THIS FOR CTCA                     R4
         BO    MRSTLINE            RESTART LINE IF YES               R4
         LA    R0,IOBCCW2          RECONSTRUCT
         LA    R1,MBSCSEQ+MCPUSEQ   CCW
         BAL   ML,MCCWINIT           CHAIN
         CLI   TPBRECNT,C'E'       TEST INPUT BUFFER STATUS
         BE    MWRNAK              BR IF INPUT BUFFER IS EMPTY
         SPACE 2
         LA    R1,IOBCCW7          NO, USE CCW AREA
         ST    R1,IOBCCW4          SET ADDRESS OF READ CCW
         MVI   IOBCCW4,X'02'       SET READ CCW
         MVC   IOBCCW4+5(3),MWABTSEQ    SET COMMAND TYPE AND BYTE COUNT
         B     MWRNAK              WRITE NAK
         SPACE 3
MBUCHDWR LA    R1,MBUCTAB-4        PREPARE TO SCAN UNIT CHECK TABLE  R4
         SPACE 3
MBUCSRCH LA    R1,4(,R1)           ADVANCE TO NEXT ENTRY
         CLC   0(1,R1),MCOMMAND    TEST COMMAND TYPE                 R4
         BL    MBUCSRCH            BRANCH IF TABLE ENTRY IS LOW
         BNE   MFORCERL            BRANCH IF CONDITION IS NOT IN TABLE
         SPACE 2                                                     R4
         IC    ML,1(,R1)           GET SENSE MASK                    R4
         EX    ML,MBUCSENS         TEST SENSE BITS                   R4
         BZ    MBUCSRCH            BRANCH IF ALL SELECTED BITS ARE OFF
         SPACE 2                                                     R4
         LH    R1,2(R1)            LOAD ERROR SEQUENCE DISPLACEMENT
         B     0(R1,MBASE1)        BRANCH TO ERROR SEQUENCE          R4
         SPACE 1                                                     R4
MBUCSENS TM    IOBSENS0,*-*        *** EXECUTE ONLY ***              R4
         EJECT                                                       R4
MBUCTAB  DS    0H             BSC UNIT CHECK ERROR SEQUENCE TABLE
*                                  READ           LD/TO
         DC    AL1(MREADCMD),X'01',Y(MRDTXT-MBSCPROC)          @OZ69594
*                                  READ           BO/DC/OR
         DC    AL1(MREADCMD),X'2E',Y(MWRNAKL-MBSCPROC)         @OZ69594
*                                  READ RESPONSE  BO/DC/OR/LD/TO
         DC    AL1(MRRSPCMD),X'2F',Y(MWRENQL-MBSCPROC)               R4
*                                  RD RSP TO ENQ  BO/DC/OR/LD/TO
         DC    AL1(MRREQCMD),X'2F',Y(MWRENQL-MBSCPROC)               R4
*                                  WRITE          BO
         DC    AL1(MWRITCMD),X'20',Y(MWRENQL-MBSCPROC)               R4
*                                  WRITE RESPONSE BO
         DC    AL1(MWRSPCMD),X'20',Y(MRESTART-MBSCPROC)              R4
*                                  WRITE ENQUIRY  BO
         DC    AL1(MWENQCMD),X'20',Y(MWRENQL-MBSCPROC)               R4
         DC    X'FF' 
         SPACE 10
MWRENQL  BAL   ML,MCERRLOG         LOG ERROR
         B     MWRENQ              WRITE ENQUIRY
         SPACE 5
MRDTXT   BAL   ML,MCERRLOG         LOG ERROR
         LA    R1,IOBCCW4          GET ADDRESS OF READ TEXT
         B     MNEWSTRT            INITIATE I/O
         EJECT
MBSCPUST DS    0H                                                    R4
         OI    DCTFLAGS,DCTRSTRT   ABORT ANY SIGNON ATTEMPT          R4
         BAL   ML,MABORT           ABORT ACTIVE FUNCTIONS            R4
MBSCPUSA XC    MDCTRSEQ(2),MDCTRSEQ  INIT BLOCK SEQUENCE COUNTS      R4
         MVC   MDCTFCS(2),MBASEFCS    AND FUNCTION CONTROL SEQUENCE  R4
         MVC   LCBRCB,MACK0SEQ     SET UP ACK0 RESPONSE
         LA    R0,IOBCCW2          SET UP
         TM    MDCTLINE,DCTPCTC     BEGINNING AT CCW2                R4
         BZ    SKIP1360             OR, IF CTCA,                     R4
         LA    R0,IOBCCW1           CCW1 THE                         R4
SKIP1360 LA    R1,MBSCSEQ+MCPUSEQ   BSC CPU
         BAL   ML,MCCWINIT           CCW STRING
         B     MRETRY              READ SIGN-ON RECORD
         SPACE 3
MRESTART LR    R1,WA               RESTART CCW STRING WITH READ CCW
         SPACE 1
MRSTLOOP LA    R1,8(,R1)           GET NEXT CCW
         CLI   0(R1),X'08'         TEST COMMAND CODE
         BNE   *+8                 BRANCH IF NOT TIC
         L     R1,0(,R1)           SIMULATE TIC
         CLI   0(R1),X'02'         TEST COMMAND CODE
         BE    MNEWSTRT            BRANCH IF READ
         B     MRSTLOOP            GET NEXT CCW
         SPACE 3
MWRNAKL  BAL   ML,MCERRLOG         LOG ERROR
         SPACE 1
MWRNAK   MVC   LCBRCB,MNAKSEQ      SET UP NAK RESPONSE
         SPACE 1
MWRENQ   LA    R1,IOBCCW2          GET ADDRESS OF WRITE RESP/ENQ CCW
         TM    MDCTLINE,DCTPCTC    TEST LINE TYPE                    R4
         BZ    MNEWSTRT            GO WRITE NAK/ENQ IF NOT CTCA      R4
         LA    R1,IOBCCW1          START AT CCW1 FOR CTCA            R4
         B     MNEWSTRT            WRITE NAK RESPONSE
         SPACE 3
MBINTREQ BAL   ML,MCERRLOG         LOG INTERVENTION REQUIRED
         MVC   LCBRCB,MNAKSEQ      SET UP NAK RESPONSE
         LA    R1,IOBCCW1          GET ADDRESS OF ENABLE
         B     MNEWSTRT            RESTART WITH ENABLE
         SPACE 3                                                     R4
MSTARTRD L     WA,MDCTDCT          GET ADDRESS OF FIRST REMOTE DCT
         LTR   WA,WA               TEST
         BZ    MSONOPEN            BRANCH IF REMOTE HAS NOT SIGNED ON
         MVI   IOBCCW5,X'01'              SET WRITE COMMAND          R4
         OI    IOBCCW5+3,MBSCEOT-MBSCENQ  FORCE WRITE EOT            R4
         BAL   ML,MSTUNIT                 ATTEMPT TO START RDR       R4
         B     MRETRY                     SEND EOT IF FAILED         R4
         EJECT                                                       R4
MSTARTPP CLI   IOBCCW5,X'01'       TEST COMMAND TYPE
         BNE   *+8                 BRANCH IF NOT WRITE
         OI    IOBCCW5+3,MBSCEOT-MBSCENQ     FORCE WRITE EOT
         TM    MDCTATTN,MDCTJOB    TEST FOR JOB POST                 R4
         BZ    MRETRY              RETRY COMMAND IF NOT              R4
         SPACE 1                                                     R4
         L     WA,MDCTDCT          GET ADDRESS OF FIRST REMOTE DCT
         LTR   WA,WA               TEST
         BZ    MSTARTNO            BRANCH IF REMOTE NOT SIGNED ON    R4
         TM    MDCTFMT-DCTDSECT(WA),DCTPROG  PROG-INTERFACE..  @OZ44902
         BO    MFORCERL             YES-LOG ERROR & RESTART    @OZ44902
         SPACE 2                                                     R4
         L     WA,MDCTDCT-DCTDSECT(,WA) GET ADDRESS OF PRINTER DCT
         TM    DCTPPSW-DCTDSECT(WA),DCTPPSWS      TEST STATUS
         BO    MSTARTPU            BRANCH IF SEPARATOR PAGE SUPPRESSED
         SPACE 1                                                     R4
         SLR   R15,R15                     CLEAR R15           @OZ45379
         L     R1,MDCTRAT                   POINT TO RAT       @OZ45379
         IC    R15,RATCONRT+1-RATDSECT(,R1)  MULTIPLY RMT NUM  @OZ45379
         LA    R1,0(R15,R15)               BY                        R4
         ALR   R1,R15                       THREE                    R4
         AL    R1,$MSPOOLQ         ADD ADDRESS OF REMOTE MSG QUEUES  R4
         CLC   1(1,R1),0(R1)       COMPARE RECORD NUMBERS
         BE    MSTARTPU            NO MESSAGES QUEUED IF EQUAL
         BAL   ML,MSTUNIT          ATTEMPT TO START REMOTE PRINTER
         SPACE 1
MSTARTPU L     WA,MDCTDCT-DCTDSECT(,WA)  GET ADDRESS OF PUNCH DCT    R4
         LTR   WA,WA               IS THERE A PUNCH DCT
         BZ    MSTARTPR            BRANCH IF NO
        $#GET  DCT=(WA),HAVE=NO    TEST FOR JOB TO PUNCH
         BZ    *+8                 BRANCH IF NO JOB QUEUED FOR PUNCH
         BAL   ML,MSTUNIT          ATTEMPT TO START REMOTE PUNCH
         SPACE 1                                                     R4
MSTARTPR L     WA,MDCTDCT          GET ADDRESS OF FIRST REMOTE DCT
         L     WA,MDCTDCT-DCTDSECT(,WA) GET ADDRESS OF PRINTER DCT
        $#GET  DCT=(WA),HAVE=NO    TEST FOR JOB TO PRINT
         BZ    *+8                 BRANCH IF NO JOB QUEUED FOR PRINT
         BAL   ML,MSTUNIT          ATTEMPT TO START REMOTE PRINTER
         SPACE 1                                                     R4
MSTARTNO NI    MDCTATTN,255-MDCTJOB     RESET JOB POST INDICATOR     R4
         B     MRETRY                    AND RETRY COMMAND           R4
         EJECT                                                       R4
MSTUNIT  TM    DCTSTAT-DCTDSECT(WA),DCTINUSE+DCTDRAIN  TEST STATUS
         BCR   NZ,ML               RETURN IF DEVICE IS DRAINED
         ST    MBUF,DCTBUFAD-DCTDSECT(,WA)   SET BUFFER ADDRESS
         NI    DCTSTAT-DCTDSECT(WA),255-DCTHOLD  MAKE DEVICE AVAILABLE
         L     R1,DCTPCE-DCTDSECT(,WA)  INDICATE UNIT                R4
        $POST  (R1),WORK                 IS AVAILABLE                R4
         OI    MDCTATTN,MDCTIMER   INDICATE LINE PAUSE               R4
         OI    MSTQE+IPOST,X'20'    AND TIMER ACTION REQ             R4
         B     MBUFNEXT            SEARCH FOR OTHER WORK             R4
         SPACE 1                                                     R4
MNORMAL  LA    R1,TPBUFST          INITIALIZE ADDRESSES OF
         STCM  R1,7,TPBLCCAD+1      FIRST CARRIAGE CONTROL     @OZ42674
         ST    R1,TPBFDATA           AND FIRST DATA BYTE
         MVC   MDCTIMOK,MCLOCK     SET TIME OF TEXT TRANSMISSION
         SPACE 1
MREADEOT MVC   BUFECBCC,IOBECBCC   SET COMPLETION CODE
         MVC   IOBSTART,IOBRESTR   RESET ADDRESS OF FIRST CCW
         SLR   ML,ML               INITIALIZE $POST SWITCH           R4
         LR    R1,MDCT             PREPARE TO SEARCH REMOTE DCT'S
         SPACE 1
MPOST    L     R1,MDCTDCT-DCTDSECT(R1)  GET NEXT REMOTE DCT
         LTR   R1,R1               TEST FOR END OF CHAIN
         BNZ   MPOSTACT            BR IF NO                          R4
         LTR   ML,ML                ELSE TEST $POST SWITCH           R4
         BZ    MSONGET             BRANCH IF REMOTE IS NOT SIGNED ON
         B     MBUFNEXT            BRANCH IF REMOTE IS SIGNED ON     R4
         SPACE 1                                                     R4
MPOSTACT TM    DCTSTAT-DCTDSECT(R1),DCTINUSE  TEST DCT STATUS        R4
         BZ    MPOST               BRANCH IF DCT IS NOT IN USE
         L     ML,DCTPCE-DCTDSECT(,R1)  GET PCE ADDR, SET $POST SW   R4
        $POST  (ML),WORK           FIRE UP PROCESSOR                 R4
         B     MPOST               PROCESS REST OF DCT CHAIN
         EJECT                                                       R4
MRETRYL  BAL   ML,MCERRLOG         LOG ERROR
         SPACE 1
MRETRY   L     R1,IOBRESTR         SET UP REGISTER FOR RETRY
         SPACE 1
MNEWSTRT ST    R1,IOBSTART         SET ADDRESS OF RESTART CCW
         BAL   ML,MERREXCP         INITIATE I/O
         B     MBUFNEXT            SEARCH FOR OTHER WORK             R4
         SPACE 2
MCOMMREJ CLI   MCOMMAND,MDISCMD    TEST COMMAND TYPE
         BNE   MFORCERL            BRANCH IF NOT DISABLE COMMAND
         SPACE 1
MDRAINLN CLI   IOBECBCC,X'48'      WAS I/O PURGED
         BE    MRSTLINE            RESTART LINE IF YES              R41
         CLI   IOBECBCC,X'44'      TEST FOR INTERCEPT          @OZ50711
         BNE   MNOTCTC             BRANCH IF NOT               @OZ50711
         TM    MDCTLINE,DCTPCTC    TEST FOR CTC                @OZ50711
         BZ    MRSTLINE            BRANCH IF NOT               @OZ50711
         TM    IOBCSW+3,X'90'      TEST FOR BUSY/ATTENTION     @OZ50711
         BNO   MRSTLINE            BRANCH IF NOT               @OZ50711
         NI    IOBSIOCC,X'30'      ISOLATE SIO CONDITION CODE  @OZ50711
         CLI   IOBSIOCC,X'10'      TEST FOR CONDITON CODE = 1  @OZ50711
         BNE   MRSTLINE            BRANCH IF NOT               @OZ50711
         CLI   0(WA),X'14'         TEST FOR SENSE CMD          @OZ50711
         BNE   MRSTLINE            BRANCH IF NOT               @OZ50711
         B     MRETRY              ELSE, RETRY I/O             @OZ50711
         SPACE 1                                               @OZ50711
MNOTCTC  OI    DCTSTAT,DCTDRAIN    SET DRAIN FLAG              @OZ50711
         SPACE 1
MFORCERL $QSUSE TYPE=TEST          TEST STATUS OF SHARED QUES  @OZ41592
         BNZ   MREQBUF             IF NOT OWNED, REQUE BUFFER  @OZ41592
         BAL   ML,MCERRLOG         LOG DISASTEROUS LINE ERROR  @OZ41592
         B     MRSTABOR            GO ABORT ACTIVE FUNCTIONS   @OZ41592
         SPACE 1
MRSTLINE $QSUSE TYPE=TEST          TEST STATUS OF SHARED QUES  @OZ32567
         BNZ   MREQBUF             IF NOT OWNED, REQUEUE BFR   @OZ32567
MRSTABOR BAL   ML,MABORT           ABORT ALL ACTIVE FUNCTIONS  @OZ41592
         B     MSFORCE             FORCE SIGN-OFF
         EJECT
*
*                             CHANNEL END LOGGING SUBROUTINE
*
         SPACE 3
MCERRLOG LA    R1,MDCTSREM         SET FOR NON-SPECIFIC COUNT
         CLI   0(WA),X'02'         WAS LAST COMMAND A READ
         BNE   MCERRINC            BRANCH IF NO
         TM    IOBCSW+3,X'02'      TEST UNIT STATUS
         BO    MCERRUC             BRANCH IF UNIT CHECK
         TM    5(WA),MWRITSEQ      DID WE WRITE TEXT
         BZ    MCERRINC            BRANCH IF NO
         L     R15,0(,WA)          GET READ DATA ADDRESS
         CLC   MBSCNAK,0(R15)      WAS RESPONSE A NAK
         BE    SKIP1370            SKIP IF YES                       R4
         CLC   MNAKSEQ,0(R15)      WAS RESPONSE A CTCA NAK           R4
         BNE   MCERRINC            BRANCH IF NO
SKIP1370 LA    R1,MDCTSNAK         SET FOR NAK COUNT
         B     MCERRINC            GO COUNT ERROR
MCERRUC  CLI   MCOMMAND,MREADCMD   DID WE READ TEXT
         BNE   MCERRINC            BRANCH IF NO
         TM    IOBSENS0,X'08'      DATA CHECK SENSE
         BZ    *+8                 SKIP IF NO
         LA    R1,MDCTSDCK         SET FOR DATA CHECK COUNT
         TM    IOBSENS0,X'01'      TIMEOUT SENSE
         BZ    MCERRINC            BRANCH IF NO
         LA    R1,MDCTSTO          SET FOR TIMEOUT COUNT
MCERRINC L     R0,0(,R1)           INCREMENT
         AL    R0,=F'1'             APPROPRIATE
         ST    R0,0(,R1)             ERROR COUNT
         SPACE 2
         TM    IOBCSW+3,X'02'      TEST UNIT STATUS
         BZ    MCELOG              BRANCH IF NO UNIT CHECK
         TM    IOBSENS0,X'41'      TEST FIRST SENSE BYTE
         BZ    MCELOG              BRANCH IF NOT TIMEOUT OR INT REQ
         IC    R1,MDCTERCT         INCREMENT
         LA    R1,1(R1)             ERROR
         STC   R1,MDCTERCT           COUNT
         CLI   MDCTERCT,10         COMPARE ERROR COUNT WITH MAXIMUM
         BCR   L,ML                DO NOT LOG UNTIL MAXIMUM COUNT
         SPACE 2
MCELOG   MVI   MDCTERCT,0          RESET ERROR COUNT
         CLI   0(WA),X'02'         TEST COMMAND CODE
         BNE   MCEGOLOG            BRANCH IF NOT READ
         SPACE 1
         L     R1,0(WA)            GET ADDRESS OF READ AREA
         MVC   IOBSENS1,1(R1)      MOVE RESPONSE TO SECOND SENSE BYTE
         CLC   MBSCDLE,0(R1)       TEST RESPONSE LENGTH
         BE    MCEGOLOG            BRANCH IF TWO BYTE RESPONSE
         MVC   IOBSENS1,0(R1)      MOVE RESPONSE TO SECOND SENSE BYTE
         EJECT                                                       R4
MCEGOLOG DS    0H                                                    R4
        $IOERROR (MBUF)            LOG CHANNEL END
         BR    ML                  RETURN
         TITLE 'HASP LINE MANAGER -- SIGN-ON PROCESSING'             R4
MSONOPEN DS    0H                                                    R4
         TM    MSEQTYPE,MCPUSEQ    IS THIS MULTILEAVING        @OZ56977
         BNZ   MFORCERL             YES,  ERROR CONDITION      @OZ56977
         OI    DCTFLAGS,DCTRSTRT   ABORT ANY SIGNON ATTEMPT          R4
         BAL   ML,MABORT           ABORT ACTIVE FUNCTIONS            R4
         ST    MBUF,MSONDCTB       SET BUFFER ADDRESS,               R4
         LA    MDCT,0(,MDCT)        LINE DCT ADDRESS,                R4
         ST    MDCT,MSONDCTD         AND REMOTE READER DEVICE TYPE   R4
         MVI   MSONDCTV,DCTRJR        IN DUMMY REMOTE DCT            R4
         LA    R1,MSONDCT          GET ADDRESS OF DUMMY DCT          R4
        $EXTP  OPEN,(R1)           INITIATE READ OF SIGN-ON CARD     R4
         B     MBUFNEXT            SEARCH FOR OTHER WORK             R4
         SPACE 3                                                     R4
MSONGET  ST    MBUF,MSONDCTB       SET BUFFER ADDRESS,               R4
         LA    MDCT,0(,MDCT)        LINE DCT ADDRESS,                R4
         ST    MDCT,MSONDCTD         REMOTE READER DEVICE TYPE,      R4
         MVI   MSONDCTV,DCTRJR        AND BASIC TERMINAL CODE        R4
         MVI   MSONDCTT,DCTP2770       IN DUMMY REMOTE DCT           R4
         ST    MBUF,BUFEWF         FORCE EMPTY BUFFER AFTER ONE CARD R4
         LA    R1,MSONDCT          GET ADDRESS OF DUMMY DCT          R4
        $EXTP  GET,(R1),MSONCARD   GET FIRST CARD IN BUFFER          R4
         BNP   MSONCLOS            CLOSE IF END OF FILE              R4
         SPACE 2                                                     R4
         CLC   MSONCODE,MSONCARD   TEST FOR /*SIGNON CARD            R4
         BE    MBUFNEXT            BRANCH IF /*SIGNON CARD           R4
         BAL   ML,MSOILEGL         NO, ISSUE ERROR MESSAGE           R4
         B     MBUFNEXT            SEARCH FOR OTHER WORK             R4
         SPACE 3                                                     R4
MSONCLOS LA    R1,MSONDCT          GET ADDRESS OF DUMMY DCT          R4
        $EXTP  CLOSE,(R1)          SET UP PREPARE SEQUENCE           R4
         B     MBUFNEXT            SEARCH FOR OTHER WORK             R4
         TITLE 'HASP LINE MANAGER -- DRAIN/SIGN-OFF PROCESSING'      R4
MSIGNOFF TM    DCTSTAT,DCTDRAIN    TEST LINE DCT STATUS              R4
         BO    MDRAINED            BRANCH IF DRAINED                 R4
         TM    MDCTSTAT,DCTSOFF    TEST LINE DCT REMOTE STATUS       R4
         BCR   Z,ML                RETURN IF NOT SIGN-OFF            R4
         SPACE 2                                                     R4
MDRAINED OI    DCTFLAGS,DCTRSTRT   SET LINE RESTART AFTER NEXT CE    R4
         NI    MDCTSTAT,255-DCTSOFF  RESET SIGNOFF BIT               R4
         TM    5(WA),MCPUSEQ       IS IT A MULTI-LEAVING TERMINAL    R4
         BO    MDISCPU             BRANCH IF YES                     R4
         TM    5(WA),MPREPSEQ      ARE PREPARE CCWS SETUP            R4
         BZ    MRSTLINE            IF NOT, GO ABORT AND DISCONNECT   R4
         TM    MDCTLINE,DCTPCTC    TEST LINE TYPE                    R4
         BO    MSFORCE             FORCE DISCONNECT IF CTC           R4
         LA    R0,MDLEEOT          POINT IOBCCW5 TO THE              R4
         ST    R0,IOBCCW5           DISCONNECT SEQUENCE, DLE EOT     R4
         MVI   IOBCCW5,X'01'       FORCE A WRITE                     R4
         MVI   IOBCCW5+7,2         SET LENGTH OF TWO                 R4
         MVI   IOBCCW6,X'2F'       CHANGE IOBCCW6 TO DISABLE         R4
         LA    R0,IOBCCW4          START WITH IOBCCW4                R4
         CLI   MDCTIMOK,255        WAS MODEM ON HOOK                R41
         BNE   MDISEXCP            NO, GO WRITE EOT AND DISABLE     R41
         LA    R0,IOBCCW6          YES, JUST DISABLE                R41
         B     MDISEXCP            GO SET STARTING CCW               R4
         SPACE 1                                                     R4
MDISCPU  LA    R0,IOBCCW5          RECONSTRUCT                       R4
         LA    R1,MBSCSEQ+MCPUSEQ   CCW                              R4
         BAL   ML,MCCWINIT           CHAIN                           R4
         LA    R0,TPBUFST          POINT TO IOBCCW6                  R4
         STCM  R0,7,IOBCCW6+1       TO TPBUFST                       R4
         LA    R0,L'MCDISCON+2     SET LENGTH OF                     R4
         STH   R0,IOBCCW6+6         DISCONNECT MESSAGE PLUS TWO      R4
         MVC   TPBUFST(2),MSTXSEQ  START BUFFER WITH STX SEQUENCE    R4
         MVC   TPBUFST+2(L'MCDISCON),MCDISCON  ADD DISCON MESSAGE    R4
         MVI   IOBCCW8,X'2F'       CHANGE IOBCCW8 TO DISABLE         R4
         TM    MDCTLINE,DCTPCTC    TEST LINE TYPE                    R4
         BZ    SKIP1380            SKIP IF NOT CTCA                  R4
         MVI   IOBCCW8,X'02'       SET TO READ RESPONSE              R4
SKIP1380 LA    R0,IOBCCW5          START WITH IOBCCW5                R4
MDISEXCP ST    R0,IOBSTART         STORE CCW ADDRESS IN IOBSTART     R4
         BAL   ML,MEXCP1           GO DO EXCP                        R4
         B     MBUFNEXT            SEARCH FOR OTHER WORK             R4
         EJECT                                                 @OZ59759
MSFORCE  BAL   ML,MDISCON          DISCONNECT REMOTE                 R4
         NI    MDCTSTAT,255-DCTSOFF RESET SIGN-OFF INDICATION        R4
         LA    WA,MBUFNEXT         SET UP RETURN ADDRESS             R4
         TM    DCTSTAT,DCTDRAIN    TEST LINE DCT STATUS              R4
         BZ    MBSCINIT            REINITIALIZE IF NOT DRAINED       R4
         TM    MDCTLINE,DCTPCTC    TEST FOR CTCA               @OZ59759
         BO    MBSCSTOP            BR IF YES, DRAIN LINE DCT   @OZ59759
         TM    MDCTATTN,MDCTDSC    WAS DISABLE SENT...         @OZ59759
         BZ    MBSCINIT            BR IF NOT, SETUP DISC SEQ   @OZ59759
         CLI   IOBECBCC,X'44'      DISC SEQ INTERCEPTED...     @OZ59759
         BE    MBSCINIT            BR IF YES, RETRY            @OZ59759
         B     MBSCSTOP            BRANCH TO DRAIN LINE DCT          R4
         SPACE 2                                                    R41
         DROP  MDCT,MCODE          RELEASE DCT AND CODE TABLE BASES R41
         SPACE 2                                                    R41
         DROP  MBASE1,MBASE2,MBASE3  RELEASE ROUTINES               R41
         DROP  MBUF                   AND BUFFER ADDRESSABILITY     R41
         SPACE 2                                                     R4
         LTORG                                                       R4
         TITLE 'HASP LINE MANAGER -- VTAM INTERFACE/REQ END PROCESSOR'
***********************************************************************
*                                                                     *
*                  SNA BUFFER PROCESSING ROUTINE                      *
*                                                                     *
***********************************************************************
         SPACE 1                                                    R41
*                                  ADDRESSABILITY -                 R41
         USING ICEDSECT,MICE             ICE                        R41
         USING RPLDSECT,MBUF             BUFFER (RPL)               R41
         USING RTAMVSUB,MBASE2,MBASE3    COMMON SNA SUBROUTINE      R41
         USING MSNAPROC,MBASE1           LOCAL ROUTINE BASE         R41
         SPACE 2                                                    R41
MSNAPROC DS    0H                                                   R41
         L     MDCT,RPLDCT         GET LINE OR LOGON DCT ADDRESS     R4
         USING DCTDSECT,MDCT        SHOW DCT ADDRESSABLE            R41
         NI    MFLAGS,255-MLOGGED-MWRKFLG1  CLEAR BUF HANDLING FLAGS R4
         TM    RPLSEQTP,255-VSEQRSET  TEST FOR RECEIVE ANY REQUEST   R4
         BNZ   MSNAPNRA               SKIP CHAIN MAINTENANCE IF NOT  R4
         LR    R15,MDCT            R15=LOGON DCT FOR MVFRECHK LATER  R4
         L     MICE,RPLICE         LOAD ICE ADDRESS            @OZ48702
         CLI   RPLACTIV,X'40'      HAS RPL BEEN REQUEUED...    @OZ48702
         BNE   SKIP1385            NOT REQUEUE, CONTINUE       @OZ48702
         LTR   MICE,MICE           CHECK FOR AN ICE ADDRESS    @OZ48702
         BZ    MSNAPLT3            NO ICE, CONTINUE            @OZ48702
         L     R14,ICELDCT         CHECK FOR LINE DCT PTR      @OZ48702
         LTR   R14,R14                                         @OZ48702
         BZ    MSNAPLT3            NO LINE, CONTINUE           @OZ48702
         LR    MDCT,R14            SAVE LINE DCT POINTER       @OZ48702
         STCM  MDCT,7,RPLDCT+1       FOR RPL'S OWNER           @OZ48702
         B     MSNAPLT3                                        @OZ48702
SKIP1385 DS    0H                                              @OZ48702
         CLI   RPLRTNCD,USFRESSU   TEST COMPLETION RETURN CODE       R4
         BNE   SKIP1390            IF NOT RETRYING, TAKE OFF R-A QUE R4
         CLI   RPLERROR,254        TEST RETRY COUNT VS. LIMIT        R4
*                                  THIS LINE DELETED BY APAR   @OZ48702
         BL    MSNAPLT2            LEAVE ON R-A QUE IF REQUEST RETRY R4
SKIP1390 L     ML,RPLBCHN          GET RCV-ANY BACKWRD-CHAIN POINTER R4
         L     WA,RPLFCHN          GET RCV-ANY FORWARD-CHAIN POINTER R4
         LTR   ML,ML               TEST BACKWARD-CHAIN POINTER       R4
         BNZ   MSNAPRA1            SKIP LOGON DCT UPDATE IF NOT ZERO R4
         L     R0,MDCTRABF         GET RCVE-ANY QE HEAD & ACTIVE CNT R4
SKIP1400 LR    R1,R0               COPY DATA TO WORK REG             R4
         ICM   R1,7,RPLFCHN+1      SET NEW QE HEAD, DON'T CHGE COUNT R4
         CS    R0,R1,MDCTRABF      UPDATE RCVE-ANY QE HEAD           R4
         BE    MSNAPRA2            CONTINUE IF UPDATE SUCCESSFUL     R4
         B     SKIP1400            ELSE RETRY WITH NEW ACTIVE COUNT  R4
         SPACE 1                                                     R4
MSNAPRA1 ST    WA,RPLFCHN-RPLDSECT(,ML)  TAKE BUF OFF FORWARD CHAIN  R4
MSNAPRA2 LTR   WA,WA               TEST FORWARD-CHAIN POINTER        R4
         BZ    SKIP1410            SKIP BACK-CHN UPDATE IF AT Q END  R4
         ST    ML,RPLBCHN-RPLDSECT(,WA)  TAKE BUF OFF BACKWARD CHAIN R4
SKIP1410 LR    MICE,MBUF           SAVE CURRENT BUFFER ADDRESS       R4
         BAL   ML,MVFRECHK         ISSUE NEW RECEIVE-ANY IF NEEDED   R4
         LR    MBUF,MICE           BRING BACK BUFFER ADDRESS         R4
         TM    MDCTSTAT,DCTSINON+DCTSOFF IS ACB AVAILABLE...   @OZ46523
         BM    SKIP1415            BRANCH IF YES               @OZ46523
         XC    RPLNEXT,RPLNEXT     ZERO CHAIN POINTER          @OZ46523
         LA    ML,MBUFNEXT         SET RETURN ADDRESS          @OZ46523
         B     MVFREPR2            GO PURGE THIS BUFFER        @OZ46523
SKIP1415 L     MICE,RPLICE         LOAD ICE ADDRESS            @OZ46523
         LR    R15,MDCT            R15=LOGON DCT IN CASE DESTROYED   R4
         LTR   MICE,MICE           TEST ICE ADDRESS                  R4
         BZ    MSNAPLT2            BRANCH IF ICE ADDR NOT AVAILABLE  R4
         L     R14,ICELDCT         TEST FOR LINE                     R4
         LTR   R14,R14              DCT ADDRESS                      R4
         BZ    MSNAPLT1            BRANCH IF DISCONNECTED            R4
         LR    MDCT,R14            ELSE GET LINE DCT ADDR IN MDCT    R4
         STCM  MDCT,7,RPLDCT+1     REPLACE LOGON DCT PTR WITH LINE   R4
         B     MSNAPLT1            REJOIN COMMON PROCESSING          R4
         EJECT                                                       R4
MSNAPNRA L     MICE,RPLICE         LOAD ICE ADDR (FROM RPL USER FLD) R4
         LTR   MICE,MICE           TEST FOR ICE ADDRESS PRESENT     R41
         BZ    MSNAPLT3            BR IF NO, SKIP INCREMENT         R41
         L     R15,ICEADCT         PLACE LOGON DCT ADDRESS IN R15    R4
         SPACE 1                                                     R4
MSNAPLT1 L     R14,ICETOTAL        INCREMENT ICE                     R4
         LA    R14,1(,R14)          SEND/RECEIVE                     R4
         ST    R14,ICETOTAL          TOTAL COUNT                     R4
         SPACE 1                                                     R4
         USING DCTDSECT,R15        USE TEMP LOGON DCT ADDRESSABILITY R4
MSNAPLT2 TM    DCTFLAGS,DCTLOGAL   TEST LOGON DCT STATUS             R4
         BO    MSNAPLOG            BRANCH IF DIAGNOSTIC LOGGING      R4
         DROP  R15                 DISCARD LOGON DCT ADDRESSABILITY  R4
         SPACE 1                                                     R4
MSNAPLT3 TM    DCTFLAGS,DCTLOGAL   TEST DCT STATUS                  R41
         BZ    MSNAPNOL            BRANCH IF NO DIAGNOSTIC LOGGING   R4
         SPACE 1                                                     R4
MSNAPLOG OI    MFLAGS,MLOGGED      SHOW DIAGNOSTIC LOGGING DONE      R4
        $IOERROR (MBUF)            LOG RPL REQUEST COMPLETION        R4
         SPACE 1                                                     R4
MSNAPNOL LA    ML,MBUFNEXT         LOAD COMMON RETURN FOR SNA SERVCE R4
         LA    WA,MVFREELM         POINT TO L.M. BUF DISPOSAL ROUTNE R4
         SLR   R0,R0               LOAD ZERO                         R4
         ST    R0,RPLNEXT          CLEAR BUFFER CHAIN FIELD          R4
         MVI   RPLACTIV,0          CLEAR RPL ACTIVE INDICATOR SINCE    C
                                    JES2 NEVER ISSUES 'CHECK' MACRO  R4
         LR    R15,R0              BRANCH ON                         R4
         IC    R15,RPLRTNCD         RECOVERY                         R4
         L     R15,MSNAPTAB(R15)     ACTION CODE                    R41
         CLI   RPLRTNCD,MSNAIBAD      IF IT IS LESS                 R41
         BLR   R15                     THAN ERROR LIMIT             R41
         B     MSNAPBAD            ELSE GO HANDLE ERROR RETURN CODE R41
         SPACE 1                                                     R4
MSNAPTAB DS    0F                  RECOVERY ACTION BRANCH TABLE      R4
         DC    A(MSNAPAOK)         VTAM REQUEST O.K.              +0 R4
         DC    A(MSNAXRSP)         EXCEPTION REQUEST/RESPONSE     +4 R4
         DC    A(MSNAXTMP)         TEMPORARY COND - EXECUTE RETRY +8 R4
MSNAIBAD EQU   *-MSNAPTAB          ERROR DIRECTORY ADDRESSES FOLLOW R41
         DC    A(MSNAPDMG)         DATA INTEGRITY DAMAGE         +12R41
         DC    A(MSNAPENV)         ENVIRONMENT ERROR             +16R41
         DC    A(MSNAPBUG)         LOGIC OR TIMING ERROR  +20       R41
MSNAINVL EQU   *-MSNAPTAB          HIGHER = LOGIC ERROR             R41
         EJECT                                                       R4
*                                                                    R4
*                             HANDLE NORMAL (DATA) CONTROL SEQUENCE  R4
*                                                                    R4
         SPACE 1                                                     R4
MSNAPAOK MVI   RPLERROR,0          CLEAR ERROR RETRY COUNTER         R4
         CLI   RPLFDB2,USFAOOK     TEST RPL FEEDBACK CODE            R4
         BNE   MSNAPNOK            PROBABLE LOGIC ERROR IF NOT O.K.  R4
         TM    RPLSEQTP,VSEQSPEC   TEST L.M. CONTROL SEQ TYPE        R4
         BNZ   MSNAPSPC            BRANCH IF IN SPECIAL SEQUENCE     R4
         TM    ICEINDEX,VSEQSPEC   TEST ICE L.M. CONTROL SEQ TYPE    R4
         BZ    MSNAPAK1            BR IF NOT SPECIAL SEQUENCE  @OZ37682
         CLI   ICEINDEX,VSEQLOGN+VSEQLOPD  ICE LOGON STATUS    @OZ41154
         BNE   MSNAPFLX                    HANDLE SPECIAL SEQ  @OZ41154
         MVC   RPLDCT+1(3),ICEADCT+1       GET LOGON DCT ADDR  @OZ41154
         B     MREQBUF                     GO REQUEUE BUFFER   @OZ41154
         SPACE 1                                               @OZ45801
MSNAPAK1 TM    ICESTAT,ICECLOSE+ICEABORT TEST SESSION STATUS   @OZ45801
         BNZ   MSNAPFLX            BRANCH IF CLOSING           @OZ45801
         MVC   MDCTIMOK,MCLOCK     SET LINE XMISSION TIME      @OZ45801
         LR    R15,R0              BRANCH ON                         R4
         IC    R15,RPLSEQTP         SUBSEQUENCE                      R4
         IC    R15,*+8-VSEQNORM(R15) CODE USING                      R4
         B     MSNAP(R15)             OFFSET TABLE                   R4
         SPACE 1                                                     R4
         DC    AL1(MSNAPRCV-MSNAP) RECEIVE COMPLETE                  R4
         DC    AL1(MSNAPSND-MSNAP) SEND COMPLETE                     R4
         DC    AL1(MSNAPRCS-MSNAP) RECEIVE COMPLETE & CONT-SPECIFIC  R4
         DC    AL1(MSNAPSCA-MSNAP) SESS. RESET COMPLETE (TO RCV-ANY) R4
         EJECT                                                 @OZ45801
*                                                              @OZ45801
*              HANDLE CONDITIONAL COMPLETIONS                  @OZ45801
*                                                              @OZ45801
         SPACE 1                                               @OZ45801
MSNAPNOK DS    0F                  ALIGN ON FULL WORD BDY      @OZ45801
         LA    R14,RPLFDB2         POINT TO FDBK CODE          @OZ45801
         BAL   R15,MSNAPDIR        LOOK UP IN FDBK CODE DIR    @OZ45801
         SPACE 1                                               @OZ45801
*        CODES MUST APPEAR IN ASCENDING ORDER                  @OZ45801
         SPACE 1                                               @OZ45801
         DC    AL1(USFYTCTL),AL3(MSNABEND-1) SHLD NOT OCCUR    @OZ45801
         DC    AL1(USFATSFI),AL3(MSNAPINQ-1) INQUIRE ERROR     @OZ45801
         DC    AL1(USFNOIN),AL3(MSNABEND-1)  RECEIVE ERROR     @OZ45801
         DC    AL1(USFIIINA),AL3(MSNAPINQ-1) INQUIRE ERROR     @OZ45801
         DC    AL1(USFNLGFA),AL3(MSNAPOPD-1) OPNDST ERROR      @OZ45801
         DC    X'FF',AL3(MSNABEND-1)         SHLD NOT OCCUR    @OZ45801
         SPACE 1                                               @OZ45801
MSNAPINQ CLI   RPLREQ,RPLINQIR     INQUIRE REQUEST...          @OZ45801
         BNE   MSNABEND            BRANCH IF NOT               @OZ45801
         CLI   RPLSEQTP,VSEQALOG   TEST IF THE                 @OZ45801
         BL    MSNAPINV             SESSION IS IN              @OZ45801
         CLI   RPLSEQTP,VSEQALOG+15  AUTOLOGON SEQUENCE,       @OZ45801
         BH    MSNAPINV               IF SO, BRANCH TO         @OZ45801
         B     MSNABEN1                RESET THE RAT           @OZ45801
         SPACE 1                                               @OZ45801
MSNAPINV L     R15,=A(MSNALINV)    POINT TO ERROR RTN          @OZ45801
         L     MBASE1,MSNALTAB     SET LOGON SEQ BASE          @OZ45801
         BR    R15                 GO TO ERROR ROUTINE         @OZ45801
         SPACE 1                                               @OZ45801
MSNAPOPD CLI   RPLREQ,RPLOPNDS     CHECK IF OPNDST REQUEST     @OZ45801
         BNE   MSNABEND            BRANCH IF NOT               @OZ45801
         B     MSNABEN1            ABANDON LOGON ATTEMPT       @OZ45801
         EJECT                                                      R41
*                                                                    R4
*                             SPECIAL SEQUENCES NON-ERROR PROCESSING R4
*                                                                    R4
         SPACE 1                                                     R4
MSNAPSPC CLI   RPLSEQTP,MINVVSEQ   COMPARE SEQ TYPE WITH INVALID LIM R4
         BH    MSNAPSP1            BRANCH IF INVALID           @OZ45801
         LR    R14,R0              LOAD ZERO                         R4
         LA    R15,X'F0'           BRANCH                            R4
         IC    R14,RPLSEQTP         ON LINE                          R4
         NR    R15,R14               MANAGER                         R4
         XR    R14,R15                MAJOR                          R4
         SRL   R15,2                   CONTROL                       R4
         L     R15,MSNAPSEQ-4(R15)      SEQUENCE                     R4
         BR    R15                       TYPE                        R4
         SPACE 1                                               @OZ45801
MSNAPSP1 B     MSNABEND            TERM SESSION-UNDEFINED SEQ  @OZ45801
         SPACE 1                                               @OZ45801
         SPACE 1                                                     R4
MSNAPSEQ DS    0F                  NON-ERROR CONTRL SEQ BRANCH TABLE R4
         DC    A(MSNALOGN)         SESSION INITIATION SEQUENCE       R4
         DC    A(MSNAHOLD)         SESSION HOLD   I/O SEQUENCE       R4
         DC    A(MSNACLOS)         SESSION CLOSE DOWN SEQUENCE       R4
         DC    A(MSNATERM)         SESSION ABN TERMIN SEQUENCE       R4
         DC    A(MSNARCVR)         SESSION RECOVR I/O SEQUENCE       R4
         DC    A(MSNALOGN)         SESSION AUTO-LOGON SEQUENCE      R41
MINVVSEQ EQU   (*-MSNAPSEQ)*4+15   HIGHER SEQUENCES ARE INVALID     R41
         EJECT                                                       R4
MSNAP    DS    0H                  ORIGIN FOR NORMAL SUBSEQ OFFSETS  R4
         SPACE 1                                                     R4
MSNAPSND BAL   ML,MVRPLKOQ         CHECK IF NEED EXEC FROM OUTBD QUE R4
         LA    ML,MBUFNEXT         RELOAD 1ST LEVEL RETURN ADDRESS   R4
         SPACE 1                                                     R4
MSNAPSN1 TM    RPLSRTYP,RPLSRESP   TEST SENT R.U. TYPE               R4
         BO    MVFREEIN            IF RESPONSE, USE INBND FREE RTNE  R4
         SPACE 1                                                     R4
MSNAPSN2 LH    R14,ICEOUTCT        DECREMENT                         R4
         BCTR  R14,0                ICE OUTBOUND                     R4
         STH   R14,ICEOUTCT          CIRCULATION                     R4
         CLI   RPLRTNCD,USFDAMGE   TEST RPL RETURN CODE              R4
         BNLR  WA                  JUST PURGE IF REQUEST CANCELLED   R4
         L     MDCT,ICERDCT        LOAD REMOTE DCT ADDRESS IF ANY    R4
         CLC   RPLCNTDF(3),MSNADATA  TEST SENT R.U. TYPE             R4
         BNE   MSNAPDFC            BRANCH IF DATA FLOW CONTROL       R4
         TM    RPLCHN,RPLLAST+RPLONLY  TEST R.U. CHAIN POSITION      R4
         BNZ   SKIP1420            BRANCH IF END OF CHAIN      @OZ42454
         TM    ICESNDST,ICECNCEL   ELSE TEST IF CHAIN WAS CANCELLED  R4
         BO    MSNAXRS2            IF SO, GO HANDLE DEFERRED -RSP    R4
SKIP1420 ALR   R14,R14             DOUBLE CURRENT COUNT              R4
         CH    R14,ICEOUTLM        COMPARE 2*COUNT WTH SESSION LIMIT R4
         BHR   WA                  IF COUNT .GT. 1/2 OF LIMIT, DON'T   C
                                    POST YET, JUST PURGE BUFFER      R4
         TM    ICESNDST,ICEWTRSP   TEST SESSION SEND STATUS          R4
         BZ    MSNAPOST            GO POST IF NOT WAITING FOR RESP   R4
         BR    WA                  ELSE JUST DISPOSE OF BUFFER       R4
         SPACE 1                                                    R41
MSNAPSCA BR    WA                  DISPOSE OF BUFFER                R41
         SPACE 1                                                     R4
MSNAPRCS OI    ICESTAT,ICERCVSP    SET ICE 'RECEIVE SPECIFIC' FLAG   R4
         SPACE 1                                                     R4
MSNAPRCV TM    RPLSRTYP,RPLRRESP   TEST TYPE OF UNIT RECEIVED        R4
         BO    MSNAPRSP            BRANCH IF RESPONSE                R4
         SPACE 1                                                     R4
MSNAPRC1 TM    ICESTAT,ICEALLOC    TEST SESSION STATUS               R4
         BZ    MVDECODE            DECODE UNDER L.M.IF NOT ALLOCATED R4
         L     MDCT,ICERDCT        LOAD ADDRESS OF REMOTE DCT        R4
         TM    RPLSRTYP,RPLDFASY   TEST R.U. TYPE                    R4
         BO    MVDECODE            DECODE UNDER L.M.IF EXPEDITED FLO R4
         TM    RPLCNTDC,RPLLUS     TEST R.U. TYPE                    R4
         BO    MVDECODE            DECODE UNDER L.M. IF 'L.U. STAT'  R4
         LR    R1,MBUF             HIDE BUFFER ADDRESS               R4
         SLR   MBUF,MBUF            FROM 'MVFREELM' RTNE             R4
         L     R15,ICEINTL         PLACE BUFFER ON BACK              R4
         ST    R1,ICEINTL           OF ICE INBOUND QUEUE             R4
         LTR   R15,R15             TEST FORMER TAIL ADDRESS          R4
         BZ    MSNAPOSR            IF QUE EMPTY, GO POST FOR INPUT  R41
         ST    R1,RPLNEXT-RPLDSECT(,R15)  CHAIN BUF TO OLD QUE TAIL R41
         BR    WA                  GO CHECK IF NEED ISSUE RCV-ANY    R4
         EJECT                                                       R4
*                                                                    R4
*                             HANDLE DATA FLOW CONTROL, POST=RESP    R4
*                                                                    R4
         SPACE 1                                                     R4
MSNAPDFC NI    ICESNDST,255-ICEWTRSP  RESET WAITING-FOR-RESPONSE BIT R4
         CLI   RPLRTNCD,USFAOK     TEST DFC RPL COMPLETION CODE      R4
         BNE   MSNAPDFN            BRANCH IF EXCEPTION RESP TO DFC   R4
         CLC   RPLCNTDF(3),MSNABID   TEST SUCCESSFUL DFC TYPE        R4
         BNE   MSNAPRS2            GO HANDLE IF NOT +RSP(BID)        R4
         OI    ICEFLAGS,ICEBBPND+ICEOUTBD  MARK OUTB FLOW, BBP STATE R4
         B     MSNAPOST            GO POST PROCESSOR WAITING ON BID  R4
         SPACE 2                                                     R4
MSNAPDFN ST    R0,ICEOUTBF         CLEAR ACTIVE (IN VTAM) BUF ADDR   R4
         TM    MFLAGS,MLOGGED      TEST FOR DIAGNOSTIC LOGGING       R4
         BO    MSNAPDF1            SKIP MSG IF BUF ALREADY LOGGED    R4
        $IOERROR (MBUF)            ISSUE I/O ERROR MESSAGE           R4
         OI    MFLAGS,MLOGGED      SHOW MESSAGE ALREADY LOGGED      R41
         SPACE 1                                                     R4
MSNAPDF1 CLC   RPLCNTDF(3),MSNABID  TEST RESPONSE TYPE               R4
         BNER  WA                  CAN'T HANDLE -RSP(DFC) IF NOT BID R4
         CLC   RPLSSNSI,=AL1(RPLRRI,X'13')  TEST TYPE OF -RSP(BID)   R4
         BE    MSNAPDF2            HANDLE IF BID REJECT WITHOUT RTR R41
         CLC   RPLSSNSI,=AL1(RPLRRI,X'14')  TEST TYPE OF -RSP(BID)   R4
         BNER  WA                  IF NOT RTR PENDING, DON'T HANDLE  R4
         OI    ICESTAT,ICERTRPD    ELSE SET 'RTR PENDING' FLAG       R4
MSNAPDF2 L     R14,ICEBDREJ        INCREMENT                        R41
         LA    R14,1(,R14)          BID REJECT                       R4
         ST    R14,ICEBDREJ          COUNTER                         R4
         B     MSNAPOST            GO POST WAITING PROCESSOR         R4
         EJECT                                                       R4
*                                                                    R4
*                             SNA POSITIVE RESPONSE HANDLING ROUTINE R4
*                                                                    R4
         SPACE 1                                                     R4
MSNAPRSP CLC   RPLCNTDF(3),MSNADATA  TEST RESPONSE TYPE              R4
         BE    MSNAPRSA            BRANCH IF DATA              @OZ45801
         B     MSNAXCLS            ELSE, TERMINATE SESSION     @OZ45801
         SPACE 1                                               @OZ45801
MSNAPRSA DS    0H                                              @OZ45801
         IC    R14,ICERSPCT        DECREMENT                         R4
         BCTR  R14,0                OUTSTANDING                      R4
         STC   R14,ICERSPCT          RESPONSE COUNT                  R4
         SPACE 1                                                     R4
MSNAPRS0 L     MDCT,ICERDCT        LOAD REMOTE DCT ADDRESS IF ANY    R4
         SPACE 1                                                     R4
MSNAPRS1 NI    ICESNDST,255-ICEWTRSP  RESET WAITING-FOR-RESPONSE BIT R4
         SPACE 1                                                     R4
MSNAPRS2 TM    ICESTAT,ICEALLOC    TEST SESSION STATUS               R4
         BZ    SKIP1440            ACCEPT RESP UNDER L.M. IF UNALLOC R4
         TM    DCTSTAT,DCTRTAM     TEST PROCESSOR CURRENT STATUS     R4
         BO    MSNAPOST            GO POST IF WAITING IN RTAM        R4
SKIP1440 BALR  ML,WA               ELSE DISPOSE OF RESP BUFFER AND   R4
         LA    ML,MBUFNEXT          DO STATE CHANGE UNDER L.M. FOR   R4
         B     MVRSTATO              PROCESSOR WAITING ON FORM MOUNT R4
         SPACE 5                                                    R41
*                                                                   R41
*                             POST WAITING PROCESSOR                R41
*                                                                   R41
         SPACE 1                                                    R41
MSNAPOSR ST    R1,ICEINHD          SET QUEUE HEAD = TAIL = THIS RPL R41
         SPACE 1                                                    R41
MSNAPOST LTR   MDCT,MDCT           TEST ADDR OF SENDING REMOTE DCT   R4
         BZR   WA                  JUST PURGE BUFFER IF NO DCT       R4
         L     R1,DCTPCE           GET ADDRESS OF PCE TO POST        R4
        $POST  (R1),WORK           FIRE UP PROCESSOR                 R4
         BR    WA                  DISPOSE OF BUF AS NEEDED & RETURN R4
         EJECT                                                       R4
*                                                                    R4
*                             EXCEPTION REQUESTS & RESPONSES         R4
*                                                                    R4
         SPACE 1                                                     R4
MSNAXRSP MVI   RPLERROR,0          CLEAR ERROR RETRY COUNTER         R4
         CLI   RPLFDB2,USFEXRS     TEST RPL FEEDBACK CODE            R4
         BNE   MSNAXREQ            BRANCH IF NOT EXCEPTION RESPONSE  R4
         TM    RPLSEQTP,255-VSEQRSET  TEST L.M. CONTROL SEQUENCE     R4
         BNZ   MSNAPSN2            ASSUME POST=RESP DFC IF NOT RECVE R4
         L     R14,ICEXRESP        INCREMENT ICE                     R4
         LA    R14,1(,R14)          EXCEPTION RE-                    R4
         ST    R14,ICEXRESP          SPONSE COUNT                    R4
         CLC   RPLCNTDF(3),MSNADATA  TEST RESPONSE TYPE              R4
         BNE   MSNAXCLS            GO ABORT IF NOT DATA        @OZ37680
         CLI   RPLSSEI,RPLRRI      TEST MAJOR SYSTEM SENSE CODE      R4
         BNE   MSNAXRSQ            CHECK FURTHER IF NOT REQUEST REJ R41
         L     MDCT,ICERDCT        LOAD REMOTE DCT ADDRESS IF ANY    R4
         CNOP  0,4                 ALIGN TABLE ON FULLWORD BOUNDARY  R4
         LA    R14,RPLSSMI         POINT TO MINOR SYSTEM SENSE CODE  R4
         BAL   R15,MSNAPDIR        LOOK UP IN MINOR CODE DIRECTORY   R4
         SPACE 1                                                     R4
*                             CODES MUST APPEAR IN ASCENDING ORDER   R4
         SPACE 1                                                     R4
         DC    X'01',AL3(MSNAXCLS)                       - ABORT     R4
         DC    X'02',AL3(MSNAXITV) INTERVENTION REQUIRED - HOLD ICE  R4
         DC    X'10',AL3(MSNAXCLS)                       - ABORT     R4
         DC    X'11',AL3(MSNAXBRK) BREAK (REVERSE CANCL) - CAUSE $C  R4
         DC    X'12',AL3(MSNAXPRM) INSUFFICIENT RESOURCE - HOLD ICE R41
         DC    X'13',AL3(MSNAXYLD) BEGIN BRACKET REJECT  - YIELD     R4
         DC    X'14',AL3(MSNAXRTR) BEGIN BR REJECT, RTR  - SET RTRP  R4
         DC    X'1A',AL3(MSNAXCLS)                       - ABORT     R4
         DC    X'1B',AL3(MSNAXYLD) RECEIVER IN XMIT MODE - YIELD     R4
         DC    X'1C',AL3(MSNAXPRM) PERMANENT ERROR       - HOLD ICE R41
         DC    X'23',AL3(MSNAXCLS)                       - ABORT     R4
         DC    X'25',AL3(MSNAXNAV) COMPONENT NOT AVAIL   - PURGE CHN R4
         DC    X'FF',AL3(MSNAXCLS) ANY OTHER SENSE CODES - ABORT     R4
         SPACE 3                                                    R41
MSNAXRSQ CLC   RPLFDBK2(3),=AL1(RPLFII,X'08',X'08')  TEST SENSE INFOR41
         BNE   MSNAXCLS            GO ABORT IF NOT FUNCTION REJECT  R41
         L     MDCT,ICERDCT        LOAD REMOTE DCT ADDRESS IF ANY   R41
         CNOP  0,4                 ALIGN TABLE ON FULLWORD BOUNDARY R41
         LA    R14,RPLUSNSI+1      POINT TO MINOR APPLIC SENSE CODE R41
         BAL   R15,MSNAPDIR        LOOK UP IN FUNCTION ERR DIRECTORYR41
         SPACE 1                                                    R41
*                             CODES MUST APPEAR IN ASCENDING ORDER  R41
         SPACE 1                                                    R41
         DC    X'03',AL3(MSNAXCLS)                       - ABORT    R41
         DC    X'05',AL3(MSNAXCPY) CANNOT ACCEPT COPIES  - CHG PDIR R41
         DC    X'FF',AL3(MSNAXCLS) ANY OTHER SENSE CODES - ABORT    R41
         EJECT                                                      R41
         SPACE 3                                                    R41
*                                                                    R4
*                             HANDLE RECOVERABLE NEGATIVE RESPONSES  R4
*                                                                    R4
         SPACE 1                                                     R4
MSNAXCPY OI    ICEXRFBK,ICEXRCPY   SET COPIES FUNCTION REJECTED BIT R41
         B     MSNAXERR            GO ISSUE I/O ERROR MESSAGE       R41
         SPACE 1                                                    R41
MSNAXPRM SLR   R15,R15             SHOW PERMANENT ERROR CONDITION   R41
MSNAXITV LTR   MDCT,MDCT           TEST REMOTE DCT ADDRESS           R4
         BZ    MSNAXERR            BRANCH IF NOT ALLOCATED           R4
         TM    ICESNDST,ICENOFMH   TEST SESSION SEND STATUS          R4
         BNO   MSNAXERR            DO NOT HALT IF FM HDR PENDING     R4
         LTR   R15,R15             TEST FOR TEMP OR PERM ERR   @OZ36060
         BZ    MSNAXPR2            DONT SET STOP FOR PERM ERR  @OZ36060
         OI    DCTFLAGS,DCTSTOP    HALT PROCCESOR TO ALLOW CMD @OZ36060
         OI    DCTPPSW2,DCTBFCKP    SET BACKSPACE              @OZ76305
         OI    DCTFLAGS,DCTBKSP      FROM LAST CHECKPOINT      @OZ76305
         L     R14,DCTPCE            GET PCE ADDRESSABILITY    @OZ76305
         XC    PFSBSCT-PCEDSECT(,R14),PFSBSCT-PCEDSECT(R14)    @OZ76305
         B     MSNAXERR            ELSE GO ISSUE I/O ERROR MESSAGE  R41
         SPACE 1                                               @OZ36060
MSNAXPR2 OI    DCTFLAGS,DCTRSTRT   RESTART DATA SET            @OZ36060
         CLI   DCTDEVTP,DCTRCON    CHECK FOR REMOTE CONSOLE    @OZ59095
         BE    MSNAXER2            IF CONSOLE, DON'T DRAIN     @OZ59095
         B     MSNAXERP            GO DRAIN THE DEVICE         @OZ36060
         SPACE 1                                                     R4
MSNAXRTR OI    ICESTAT,ICERTRPD    SET READY TO RECEIVE PENDING BIT  R4
MSNAXYLD OI    ICESTAT,ICEHOLD     PREVENT OUTBD ALLOCATION UNTIL    R4C
                                    'LUS' OR INBND STREAM COMPLETED  R4
         B     MSNAXRS1            TREAT AS ORDINARY CHAIN FAILURE   R4
         SPACE 1                                                     R4
MSNAXBRK LTR   MDCT,MDCT           TEST REMOTE DCT ADDRESS           R4
         BZ    MSNAXRS1            BRANCH IF NOT ALLOCATED           R4
         OI    DCTFLAGS,DCTDELET   DELETE DATA SET             @OZ27835
         OI    ICEXRFBK,ICEXRDNA   SHOW DEVICE NOT ACCEPTING DATA   R41
         B     MSNAXRS1            REJOIN COMMON -RSP PROCESSING     R4
         SPACE 1                                                     R4
MSNAXNAV LTR   MDCT,MDCT           TEST REMOTE DCT ADDRESS           R4
         BZ    MSNAXERR            BRANCH IF NOT ALLOCATED           R4
         OI    DCTFLAGS,DCTBKSP+DCTRSTRT INTERRUPT THE OUTPUT  @OZ36060
         CLI   DCTDEVTP,DCTRCON    CHECK FOR REMOTE CONSOLE    @OZ59095
         BE    MSNAXER2            IF CONSOLE, DON'T DRAIN     @OZ59095
MSNAXERP OI    DCTSTAT,DCTDRAIN    SHOW DEVICE NOT AVAILABLE   @OZ36060
MSNAXER2 DS    0H                                              @OZ59095
         OI    ICEXRFBK,ICEXRDNA   SHOW DEVICE NOT TAKING DATA @OZ36060
         SPACE 1                                                     R4
MSNAXERR TM    MFLAGS,MLOGGED      TEST FOR DIAGNOSTIC LOGGING       R4
         BO    MSNAXRS1            GO CANCEL CHAIN IF ALREADY LOGGED R4
        $IOERROR (MBUF)            ELSE LOG EXCEPTION RESPONSE       R4
         OI    MFLAGS,MLOGGED      SHOW MESSAGE ALREADY LOGGED      R41
         SPACE 1                                                     R4
MSNAXRS1 ICM   R14,1,ICERSPCT       DECREMENT                        R4
         BZ    SKIP1450              OUTSTANDING                     R4
         BCTR  R14,0                  RESPONSE COUNT                 R4
         STC   R14,ICERSPCT            (IF NOT NEGATIVE)             R4
SKIP1450 OI    ICESNDST,ICECNCEL   SHOW CHAIN IS CANCELLED     @OZ37145
         NI    ICEFLAGS,255-ICEBBPND-ICEEBPND-ICECHDIR  RESET PENDS. R4
         EJECT                                                      R41
MSNAXRS2 ICM   R0,3,ICEOUTCT       CHECK OUTBOUND CIRCULATION        R4
         BNZR  WA                  IF NOT ZERO, WAIT FOR QUIESCE OR  R4C
                                    'CANC BY PRIOR EX RESPONSE' RPL  R4
         TM    ICESNDST,ICEINCHN   TEST SESSION SEND STATUS          R4
         BZ    MSNAPRS1            LET RTAM HANDLE IF OUT OF CHAIN   R4
         SPACE 1                                                     R4
MSNAXRS3 NI    ICESNDST,255-ICEINCHN-ICEOCPND  FORCE RTAM OUT OF CHN R4
         MVC   RPLCNTDF(3),MSNACNCL  CHANGE                          R4
         MVI   RPLSRTYP,RPLNFSYN      INTERCEPTED              @OZ32746
         MVI   RPLVTFL2,RPLSCHED       RPL INTO                      R4
         MVI   RPLCHN,RPLONLY           'CANCEL' REQ                 R4
         OI    ICESNDST,ICEWTRSP   SHOW L.M.-SENT REQST EXPECTS RESP R4
         B     MVRPLOCR            SEND 'CANCEL' AND RETURN          R4
         SPACE 5                                                    R41
*                                                                    R4
*                             HANDLE EXCEPTION REQUESTS              R4
*                                                                    R4
         SPACE 1                                                     R4
MSNAXREQ CLI   RPLFDB2,USFEXRQ     TEST RPL FEEDBACK CODE            R4
         BE    MSNAXRQ2            BR IF EXCEPTION REQUEST     @OZ45801
         B     MSNABEND            ELSE, GO TO ERROR ROUTINE   @OZ45801
         SPACE 1                                               @OZ45801
MSNAXRQ2 DS    0H                                              @OZ45801
         OI    ICERCVST,ICECNCEL   SHOW CHAIN IS BEING CANCELLED     R4
         TM    MFLAGS,MLOGGED      TEST FOR DIAGNOSTIC LOGGING       R4
         BO    MSNAXRQ1            PASS IF BUFFER LOGGED       @OZ28435
        $IOERROR (MBUF)            ELSE LOG EXCEPTION REQUEST        R4
         OI    MFLAGS,MLOGGED      SHOW MESSAGE ALREADY LOGGED      R41
MSNAXRQ1 BAL   ML,MVFREEIN         PURGE BUFFER, SAVE COUNTS   @OZ28435
         LA    ML,MBUFNEXT         RESTORE RETURN ADDRESS      @OZ28435
         B     MICEABRT            GO CLOSE DOWN SESSION       @OZ28435
         EJECT                                                 @OZ45801
*                                                                    R4
*                             RE-EXECUTE RPLS TEMPORARILY REJECTED   R4
*                                                                    R4
         SPACE 1                                                     R4
MSNAXTMP L     MICE,RPLICE         LOAD ICE ADDR FROM RPL      @OZ38145
         LTR   MICE,MICE           TEST ICE ADDR               @OZ38145
         BZ    MSNAXTP2            BRANCH IF NOT AVAILABLE     @OZ38145
         L     R14,ICETEMP         INCREMENT                   @OZ38145
         LA    R14,1(,R14)          TEMPORARY                        R4
         ST    R14,ICETEMP           ERROR COUNT                     R4
MSNAXTP2 IC    R14,RPLERROR        INCREMENT                   @OZ38145
         LA    R14,1(,R14)           RPL RETRY                       R4
         STC   R14,RPLERROR           COUNT                          R4
         CLI   RPLFDB2,USFSTALF    IF TEMP NO STORAGE COND...  @OZ45801
         BE    MSNAXTP1             THEN CONTINUE              @OZ45801
         B     MSNABEND            ELSE, GO TO ERROR ROUTINE   @OZ45801
         SPACE 1                                               @OZ45801
MSNAXTP1 DS    0H                                              @OZ45801
         CLI   RPLERROR,255        TEST RPL RETRY COUNT              R4
         BL    MVRPLXEC            RETRY IF LESS THAN MAX            R4
         MVI   RPLERROR,0          CLEAR RPL RETRY COUNT       @OZ38145
         LTR   MICE,MICE           TEST ICE ADDRESS            @OZ38145
         BZ    MSNAXCLS            GO FORCE DOWN SESSION       @OZ38145
         MVI   ICEINDEX,0          SHOW ANY SPECIAL SEQ ENDED  @OZ38145
         B     MSNAXCLS            GO FORCE DOWN SESSION             R4
         EJECT                                                       R4
*                                                                    R4
*                             HANDLE 'SEND' CANCELLED BY PRIOR -RSP  R4
*                                                                    R4
         SPACE 1                                                     R4
         SPACE 1                                                     R4
MSNAPIXR L     R0,ICEOUTHD         GET ADDR OF 1ST BUF ON OUTBD QUE  R4
         LH    R1,ICEOUTCT         GET OUTBOUND CIRCULATION COUNT    R4
         LTR   R0,R0               TEST 1ST OUTBD Q BUFFER ADDRESS   R4
         BZ    MSNAPIX5            GO CHECK FOR END CHAIN IF Q EMPTY R4
         LA    R15,ICEOUTHD-RPLNEXT+RPLDSECT  GET PHONY RPL ADDRESS  R4
         SPACE 1                                                     R4
         USING RPLDSECT,R15        USE TEMPORARY RPL ADDRESSABILITY  R4
         SPACE 1                                                     R4
MSNAPIX1 LR    R14,R15             SET PRECEDING BUF ADDR = CURRENT  R4
         SPACE 1                                                     R4
MSNAPIX2 CL    R15,ICEOUTTL        COMPARE BUF ADDR WITH QUE TAIL    R4
         LR    R15,R0              ADVANCE TO NEXT BUFFER IF ANY     R4
         BE    MSNAPIX4            REPLACE WHAT REMAINS IF QUE END   R4
         SPACE 1                                                     R4
MSNAPIX3 L     R0,RPLNEXT          LOAD ADDR OF NEXT BUFFER IF ANY   R4
         TM    RPLSRTYP,RPLSRESP   TEST SEND TYPE                    R4
         BO    MSNAPIX1            LEAVE BUFFER ON QE IF A RESPONSE  R4
         CLC   RPLCNTDF(3),MSNADATA  TEST R.U. TYPE                  R4
         BNE   MSNAPIX1            LEAVE BUFFER ON QE IF (SYNC) DFC  R4
         BCTR  R1,0                DECREMENT OUTBOUND CIRCULATION    R4
         MVC   RPLNEXT,RPLNEXT-RPLDSECT(MBUF)  PLACE BEHIND ORIGINAL R4
         ST    R15,RPLNEXT-RPLDSECT(,MBUF)      X'0C0D' BUF FOR FREE R4
         ST    R0,RPLNEXT-RPLDSECT(,R14)  REMOVE FROM OUTBD QUE      R4
         TM    RPLCHN,RPLLAST+RPLONLY  TEST R.U. CHAIN POSITION      R4
         BZ    MSNAPIX2            KEEP LOOKING IF NOT END OF CHAIN  R4
         DROP  R15                 DISCARD TEMP RPL ADDRESSABILITY   R4
         SPACE 1                                                     R4
MSNAPIX4 ST    R14,ICEOUTTL        STORE ADDR OF NEW LAST BUFFER     R4
         LA    R15,ICEOUTHD-RPLNEXT+RPLDSECT  GET PHONY RPL ADDRESS  R4
         CLR   R14,R15             COMPARE TAIL PTR & PHONY VALUE    R4
         BNE   MSNAPIX5            BRANCH IF QUE STILL HAS BUFFERS   R4
         XC    ICEOUTHD(8),ICEOUTHD  ELSE CLEAR OUTBD QUE POINTERS   R4
         SPACE 1                                                     R4
MSNAPIX5 BCTR  R1,0                COUNT ORIGINAL X'0C0D' BUFFER     R4
         STH   R1,ICEOUTCT         UPDATE OUTBOUND CIRCULATION       R4
         TM    RPLCHN,RPLLAST+RPLONLY  TEST R.U. CHAIN POSITION      R4
         BNZ   MSNAPRS0            LET RTAM HANDLE IF CHAIN ENDED    R4
         BAL   ML,MSNAXRS3         SEND 1ST INTERCEPTED RPL = CANCEL R4
         LA    ML,MBUFNEXT         RESTORE 1ST LEVEL RETURN ADDRESS  R4
         B     MVFREPRG            PURGE ANY REMAINING BUFFERS       R4
         EJECT                                                       R4
*                                                                    R4
*                             HANDLE RPL BAD RETURN CODES            R4
*                                                                    R4
         SPACE 1                                                     R4
MSNAPBAD MVI   RPLERROR,0          CLEAR ERROR RETRY COUNTER         R4
         LTR   MICE,MICE           TEST ICE ADDRESS                  R4
         BZ    MSNAPBA1            DON'T REFER TO ICE IF NOT AVAIL   R4
         LA    R14,ICEOUTBF        ASSUME REGULAR OUTBOUND BUFFER   R41
         CL    MBUF,ICEBUFAD       CHK CURRENT BUF VS. SPECIAL SEQ  R41
         BNE   MSNAPBA0            BRANCH IF REGULAR OUTBOUND BUFR  R41
         MVI   ICEINDEX,0          ELSE CLEAR SPECIAL SEQ. INDEX    R41
         LA    R14,ICEBUFAD        POINT TO SPECIAL SEQ BUFFER ADDR R41
MSNAPBA0 ST    R0,0(,R14)          CLEAR APPROPRIATE BUFFER POINTER R41
         SPACE 1                                                    R41
MSNAPBA1 LA    R14,RPLFDB2         POINT TO RPL FEEDBACK CODE       R41
         CLI   RPLRTNCD,MSNAINVL   COMPARE RTNCD WITH LIMIT         R41
         BL    MSNAPDIR            IF OK LOOK UP FDBK2 IN DIRECTORY R41
         B     MSNABEND            ELSE GO TO ERROR ROUTINE    @OZ45801
         EJECT                                                      R41
*                                                                   R41
*                            LOGIC ERRORS DIRECTORY                 R41
*                                                                   R41
         SPACE 1                                                    R41
MSNAPBUG DS    0F                  ALIGN TABLE ON FULLWORD BOUNDARY R41
         SPACE 1                                                    R41
*                            CODES MUST APPEAR IN SEQUENCE          R41
         SPACE 1                                                    R41
         DC    AL1(USFCLSIP),AL3(MSNABEND-1) SHOULD NOT OCCUR  @OZ45801
         DC    AL1(USFCIDNG),AL3(MSNAIDNG-1) CID NO GOOD       @OZ45801
         DC    AL1(USFSINVC),AL3(MSNABEND-1) SHOULD NOT OCCUR  @OZ45801
         DC    AL1(USFSDFR),AL3(MSNAPFLX-1) NO SDT   - FLUSH        R41
         DC    AL1(USFILSIN),AL3(MSNABEND-1) SHOULD NOT OCCUR  @OZ45801
         DC    AL1(USFIICBE),AL3(MSNAXVTM-1) TERM NOT AVAIL    @OZ45801
         DC    AL1(USFINVNB),AL3(MSNABEND-1) SHOULD NOT OCCUR  @OZ45801
         DC    AL1(USFNOPAU),AL3(MSNAXVTM-1) INVALID OPNDST    @OZ45801
         DC    AL1(USFRSCNO),AL3(MSNABEND-1) SHOULD NOT OCCUR  @OZ45801
         DC    AL1(USFRSCNC),AL3(MSNAXVTM-1) INVALID CLSDST    @OZ45801
         DC    XL1'FF',AL3(MSNABEND-1) OTHER CODES ARE ERRORS  @OZ45801
         EJECT                                                       R4
*                                                                    R4
*                             ENVIRONMENT ERRORS DIRECTORY           R4
*                                                                    R4
         SPACE 1                                                     R4
MSNAPENV DS    0F                  ALIGN TABLE ON FULLWORD BOUNDARY R41
         SPACE 1                                                     R4
*                             CODES MUST APPEAR IN ASCENDING ORDER   R4
         SPACE 1                                                     R4
         DC    AL1(USFSBFAL),AL3(MSNAXVTM-1) TERM UNAVAIL/BIN       R41C
                                   (OPNDST)         LOGON SEQ FAILS  R4
         DC    AL1(USFTAPUA),AL3(MSNAXVTM-1) PASSED LGN REJ    @OZ45801C
                                   (CLSDST)         LOGIC ERROR      R4
         DC    AL1(USFVTHAL),AL3(MSNAXVTM-1) Z NET,QUICK CMND       R41C
                                   (OPNDST)         ABANDON CONTACT  R4
         DC    AL1(USFILRS),AL3(MSNABEND-1) INCOMPATIBLE DEF   @OZ45801C
                                   (BASIC MODE)     LOGIC ERROR      R4
         DC    AL1(USFPCF),AL3(MSNAXCLS-1) PERM CHNL/LINK FAIL      R41C
                                   (OPNDST, RECEIVE, SEND, RESETSR,    C
                                    SESSIONC)       ISSUE CLSDST     R4
         DC    AL1(USFANS),AL3(MSNAXVTM-1) AUTO NCP SHUTDOWN        R41C
                                   (OPNDST)         LOGON SEQ FAILED R4
         DC    AL1(USFVOFOC),AL3(MSNAXCLS) CANCLD BY VARY DISC      R41C
                                      (OPNDST, SEND, RESETSR,       R41C
                                      SESSIONC) - ISSUE CLSDST      R41
         DC    AL1(USFDISCO),AL3(MSNABEND-1) CNCLD BY DISC     @OZ45801C
                                   (BASIC MODE)     LOGIC ERROR      R4
         DC    AL1(USFUTSCR),AL3(MSNAXCLS-1) UNCOND TERMINATE       R41C
                                   (OPNDST, RECEIVE, SEND, RESETSR,    C
                                    SESSIONC)       ISSUE CLSDST     R4
         DC    AL1(USFSYERR),AL3(MSNAXVTM-1) VTAM LOGIC ERROR       R41C
                                   (OPNDST, CLSDST, INQUIRE)           C
                                                    ABANDON CONTACT  R4
         DC    AL1(USFDIDOL),AL3(MSNABEND-1) DIAL OUT DISC     @OZ45801C
                                   (BASIC MODE)     ABANDON CONTACT
         DC    AL1(USFDIDIL),AL3(MSNABEND-1) DIAL IN/OUT DISC  @OZ45801C
                                   (BASIC MODE)     LOGIC ERROR      R4
         DC    AL1(USFVTMNA),AL3(MSNAXVTM-1) VTAM INACT TO JES2     R41C
                                   (ANY MACRO)      ABANDON CONTACT  R4
         DC    AL1(USFABNDO),AL3(MSNABEND-1) VTAM TCB ABEND    @OZ45801C
                                   (ANY MACRO) LOGIC ERROR     @OZ34189
         DC    AL1(X'0F'),AL3(MSNAPURG-1) NO VTAM BUFFERS      @OZ45801C
                                          LET LOSTERM RUN      @OZ45801
         DC    AL1(X'10'),AL3(MSNABEND-1) COND TERM SELF       @OZ45801C
                                   (OPNDST)           LOGIC ERROR
         DC    AL1(X'11'),AL3(MSNAXVTM-1) SDT FAILED           @OZ34189*
                                   (OPNDST)       LOGON SEQ FAILS
         DC    AL1(X'FF'),AL3(MSNABEND-1) OTHER CODES ARE ERR  @OZ45801
         EJECT                                                       R4
*                                                                    R4
*                             DATA INTEGRITY DAMAGE DIRECTORY        R4
*                                                                    R4
         SPACE 1                                                     R4
MSNAPDMG DS    0F                  ALIGN TABLE ON FULLWORD BOUNDARY R41
         SPACE 1                                                     R4
*                             CODES MUST APPEAR IN ASCENDING ORDER   R4
         SPACE 1                                                     R4
         DC    AL1(USFLIORP),AL3(MSNABEND-1) VARIOUS I/O ERRS  @OZ45801C
                                   (BASIC MODE)     LOGIC ERROR      R4
         DC    AL1(USFRTRAF),AL3(MSNAPURG-1)  CONN RECOV/TRM RESTART R4C
                                   (RECEIVE, SEND,RESETSR, SESSIONC)   C
                                                    LET LOSTERM RUN  R4
         DC    AL1(USFQOPDC),AL3(MSNAXVTM-1) LU VARIED OFFLINE @OZ45801C
                                   (OPNDST)  LOGON SEQ FAILS   @OZ45801
         DC    AL1(USFCLRED),AL3(MSNACANC)  REQUEST CANCELLED  @OZ41873C
                                   (RECEIVE,SEND, RESETSR, SESSIONC)   C
                                                    PRGE BUF & CTNUE R4
         DC    AL1(USFPREXC),AL3(MSNAPIXR)  CANC BY PRIOR EXCPTN RSP   C
                                   (SEND)           RESTART OUTBD QE R4
         DC    AL1(X'FF'),AL3(MSNABEND-1) OTHER CODES ARE ERR  @OZ45801
         EJECT                                                      R41
SKIP1470 LA    R15,4(,R15)         LOOK UP CODE                      R4
MSNAPDIR CLC   0(1,R14),0(R15)      IN TABLE FOR                     R4
         BH    SKIP1470              THIS LEVEL                      R4
         TM    3(R15),X'01'        TEST BRANCH ADDR LOW-ORDER BIT    R4
         L     R15,0(,R15)         LOAD INDICATED BRANCH ADDRESS     R4
         BZR   R15                 GO TO ERROR ROUTINE IF NOT ODD    R4
         TM    MFLAGS,MLOGGED      TEST FOR DIAGNOSTIC LOGGING       R4
         BO    1(,R15)             GO TO ERR RTNE IF ALREADY LOGGED  R4
         LA    ML,1(,R15)          SAVE BRANCH ADDR ACROSS $IOERROR  R4
        $IOERROR (MBUF)            ISSUE I/O ERROR MESSAGE           R4
         OI    MFLAGS,MLOGGED      SHOW MESSAGE ALREADY LOGGED      R41
         LR    R15,ML              RESTORE ROUTINE BRANCH ADDRESS    R4
         LA    ML,MBUFNEXT         RESTORE 1ST LEVEL RETURN ADDRESS  R4
         BR    R15                 GO TO ERROR ROUTINE               R4
         SPACE 1                                                     R4
MSNAIDNG TM    RPLSEQTP,VSEQSPEC   TEST FOR SPECIAL SEQUENCE   @OZ45801
         BNZ   MSNAXVTM            BRANCH IF YES               @OZ45801
         BAL   ML,MSNAPURG         DISPOSE OF BUFFER           @OZ45801
         LA    ML,MBUFNEXT         RESTORE RETURN ADDRESS      @OZ45801
         B     MICEAHLD            ABORT STREAMS               @OZ45801
         SPACE 1                                               @OZ45801
*                                                                    R4
*                             FLUSH CANCELLED REQUESTS               R4
*                                                                    R4
         SPACE 1                                                     R4
MSNACANC TM    RPLSEQTP,VSEQSPEC   TEST FOR SPECIAL SEQUENCE   @OZ41873
         BZ    MSNAPURG            BRANCH IF NOT               @OZ41873
         CLI   RPLSEQTP,VSEQCLOS   IF CANCELLED REQUEST WAS    @OZ41873
         BE    MSNACLOS             CLSDST THEN FREE THE ICE   @OZ41873
         B     MSNAXVTM            ELSE TERMINATE THE SESSION  @OZ41873
MSNAPFLX MVI   RPLRTNCD,USFDAMGE   SIMULATE RPL                      R4
         MVI   RPLFDB2,USFCLOCC     CANCELLED CODE                   R4
         CLI   RPLSEQTP,VSEQRECV   TEST IF RPL TYPE IS RECEIVE       R4
         BNE   MSNAPURG            SKIP INBND COUNT ADJUST IF NOT    R4
         TM    RPLSRTYP,RPLRRESP   CHECK TYPE OF RECEIVE             R4
         BZ    MVFREEIN            IF REQUEST, GO FIX INBOUND COUNT  R4
         EJECT                                                 @OZ45801
         CNOP  0,4                 ALIGN TABLE ON FULLWORD BOUNDARY  R4
MSNAPURG LA    R14,RPLSEQTP        POINT TO RPL SEQUENCE TYPE        R4
         BAL   R15,MSNAPDIR        LOOK UP IN FREE ROUTINE DIRECTORY R4
         SPACE 1                                                     R4
*                             CODES MUST APPEAR IN ASCENDING ORDER   R4
         SPACE 1                                                     R4
         DC    AL1(VSEQRECV),AL3(MVFREPRG)  RECEIVE - PURGE          R4
         DC    AL1(VSEQSEND),AL3(MSNAPSN1)  SEND - MAINTAIN COUNTS   R4
         DC    AL1(VSEQRSET),AL3(MVFREEIN)  RESET CS - MAINTAIN CTS  R4
         DC    AL1(VSEQRSCA),AL3(MVFREPRG)  RESET CA - PURGE         R4
         DC    X'FF',AL3(MSNABEND-1) OTHER CODES ARE ERRORS    @OZ45801
         SPACE 3                                               @OZ45801
*                                                              @OZ45801
*              SNA CRITICAL ERROR ROUTINE                      @OZ45801
*                                                              @OZ45801
         SPACE 1                                               @OZ45801
MSNABEND SLR   R0,R0               CLEAR R0                    @OZ45801
         ST    R0,RPLNEXT          INSURE ZERO CHAIN           @OZ45801
         LTR   MICE,MICE           CHECK IF ICE AVAILABLE      @OZ45801
         BZ    MSNAXVTM            BRANCH IF NOT               @OZ45801
         L     R1,$MWORK           POINT TO MSG WORKAREA       @OZ45801
         MVC   0(L'MSNAERRM,R1),MSNAERRM MOVE MSG TO AREA      @OZ45801
         USING MSNAERRM,R1         SET MSG ADDRESSABILITY      @OZ45801
         MVC   MSNAELUN,ICESYMB    MOVE LUNAME TO MSG          @OZ45801
         DROP  R1                  SUSPEND MSG ADDRESSABILITY  @OZ45801
        $WTO   (R1),L'MSNAERRM,JOB=NO,WAIT=NO, ISSUE MESSAGE   @OZ45801C
               ROUTE=$LOG+$ERR+$TP,CLASS=$ALWAYS,PRI=$HI       @OZ45801
         TM    ICEFLAGS,ICECNECT   WAS SESSION ESTABLISHED...  @OZ45801
         BZ    MSNABEN1            BRANCH IF NOT               @OZ45801
         OI    ICEFLGS2,ICEFREEZ   INDICATE ICE FROZEN         @OZ45801
         SPACE 1                                               @OZ45801
MSNABEN1 CL    MBUF,ICEBUFAD       IS CURRRENT BUF SPEC SEQ    @OZ45801
         BNE   MSNAXVTM            BRANCH IF NOT               @OZ45801
         ST    R0,ICEBUFAD         CLEAR SPEC SEQ BUF ADDR     @OZ45801
         MVI   ICEINDEX,0          SHOW SPEC SEQ ENDED         @OZ45801
         B     MSNAXVTM            CONT SESSION TERMINATION    @OZ45801
         EJECT                                                 @OZ45801
*                                                                    R4
*                        HANDLE PERMANENT OR ENVIRONMENTAL ERRORS    R4
*                                                                    R4
         SPACE 1                                                     R4
MSNAXCLS TM    MFLAGS,MLOGGED      TEST FOR ERROR ALREADY LOGGED     R4
         BO    MSNAXCL1            JUST ABORT IF RPL ALREADY LOGGED  R4
        $IOERROR (MBUF)            ISSUE I/O ERROR MESSAGE           R4
         OI    MFLAGS,MLOGGED      SHOW RPL HAS ALREADY BEEN LOGGED  R4
         SPACE 1                                                     R4
MSNAXCL1 LTR   MICE,MICE           TEST ICE ADDRESS                  R4
         BZ    MVFREPRG            JUST FREE BUFFER IF ICE NOT AVAIL R4
         BAL   ML,MSNAXVT2         CHECK AUTOLOGON SEQUENCE    @OZ64289
         LA    ML,MBUFNEXT         RESTORE RETURN ADDRESS      @OZ64289
         TM    RPLSEQTP,VSEQSPEC   TEST L.M. CONTROL SEQ TYPE        R4
         BNZ   MICEABRT            BRANCH IF IN SPECIAL SEQUENCE     R4
         BAL   ML,MSNAPURG         ELSE DISPOSE OF BUFFER            R4
         LA    ML,MBUFNEXT         RESTORE 1ST LEVEL RETURN ADDRESS  R4
         B     MICEABRT            GO CLOSE DOWN SESSION             R4
         SPACE 2                                                     R4
MSNAXVTM TM    MFLAGS,MLOGGED      TEST FOR ERROR ALREADY LOGGED     R4
         BO    MSNAXVT1            YES -- SKIP DUPLICATE MESSAGE     R4
        $IOERROR (MBUF)            ISSUE I/O ERROR MESSAGE           R4
         OI    MFLAGS,MLOGGED      SHOW MESSAGE ALREADY LOGGED       R4
         SPACE 2                                                     R4
MSNAXVT1 LTR   MICE,MICE           TEST ICE ADDRESS                  R4
         BZ    MVFREPRG            JUST FREE BUFFER IF ICE NOT AVAIL R4
         LA    ML,MSNAXVT3         SET RETURN ADDRESS          @OZ64289
         EJECT                                                 @OZ64289
MSNAXVT2 CLI   RPLSEQTP,VSEQALOG   TEST FOR AUTOLOGON SEQUENCE @OZ64289
         BLR   ML                  RETURN IF NOT               @OZ64289
         CLI   RPLSEQTP,VSEQALOG+15 TEST FOR AUTLOGON SEQUENCE TYPE R41
         BHR   ML                  RETURN IF NOT               @OZ64289
         L     R15,ICELDCT         PICK UP ASSOCIATED LINE DCT ADDR R41
         LTR   R15,R15             TEST FOR LINE DCT PRESENT        R41
         BZR   ML                  RETURN IF NONE              @OZ64289
         L     R15,MDCTRAT-DCTDSECT(,R15)  LOAD RAT ADDRESS         R41
         NI    RATFLAGS-RATDSECT(R15),255-RATSRMT-RATALM RESET FLGS R41
         SPACE 1                                                    R41
         L     R1,$MWORK           PICK UP WORK AREA ADDRESS        R41
         MVC   0(L'MALMSG1,R1),MALMSG1    MOVE IN MESSAGE TEXT      R41
         USING MALMSG1,R1          TEMPORARY MESSAGE ADDRESSABILITY R41
         MVC   MALMSGR,RATNAME-RATDSECT(R15)  MOVE IN RMT NAME      R41
         DROP  R1                  RELEASE MSG ADDRESSABILITY       R41
         SPACE 1                                                    R41
         $WTO  (R1),L'MALMSG1,WAIT=NO,JOB=NO,    ISSUE MESSAGE      R41C
               ROUTE=$LOG+$TP+$ERR,CLASS=$ALWAYS,PRI=$HI            R41
         BR    ML                  RETURN                      @OZ64289
         EJECT                                                      R41
MSNAXVT3 LA    R15,MVFREPRG        POINT TO BUFFER FREE RTN    @OZ45801
         CLI   RPLSEQTP,MINVVSEQ   TEST IF VALID SEQ           @OZ45801
         BH    MSNAXVT4            BRANCH IF NOT               @OZ45801
         TM    RPLSEQTP,VSEQSPEC   TEST FOR SPECIAL SEQUENCE   @OZ45801
         BNZ   MSNAXVT4            BRANCH IF YES               @OZ45801
         CLI   RPLSEQTP,VSEQRSCA   TEST IF VALID SEQ           @OZ45801
         BH    MSNAXVT4            BRANCH IF NOT               @OZ45801
         SLR   R1,R1               CLEAR R1                    @OZ45801
         IC    R1,RPLSEQTP         GET SEQUENCE TYPE           @OZ45801
         SLL   R1,2                MULTIPLY BY FOUR            @OZ45801
         L     R15,MSNAXTAB(R1)    POINT TO BUFFER PURGE RTN   @OZ45801
         SPACE 1                                               @OZ45801
MSNAXVT4 BALR  ML,R15              GO PURGE BUFFER             @OZ45801
         LA    ML,MBUFNEXT         RESTORE RETURN ADDRESS      @OZ45801
         B     MICEABDN            BRANCH TO ABANDON SESSION   @OZ45801
         SPACE 1                                               @OZ45801
MSNAXRCV TM    RPLSRTYP,RPLRRESP+RPLDFASY  TEST TYPE OF RECV   @OZ45801
         BNZ   MVFREPRG            BR IF RESP OR EXP FLOW      @OZ45801
         B     MVFREEIN            ELSE PURGE, RETAIN CNTS     @OZ45801
         SPACE 2                                               @OZ45801
MSNAXTAB DS    0F                  ALIGN ON FULLWORD BDY       @OZ45801
         DC    AL4(MSNAXRCV)       RECEIVE BUFFER              @OZ45801
         DC    AL4(MSNAPSN1)       SEND BUFFER                 @OZ45801
         DC    AL4(MVFREEIN)       RESET CS BUFFER             @OZ45801
         DC    AL4(MVFREPRG)       RESET CA BUFFER             @OZ45801
         SPACE 5                                               @OZ45801
MSNALOGN DS    0H                  PROCESS SNA LOGON SEQUENCE        R4
         SLL   R14,2               ADJUST RPL SUBSEQ FOR SCAN        R4
         L     R1,MSNALTAB-4(R14)  GET ADDR OF SUBSEQ ROUTINE       R41
         L     MBASE1,MSNALTAB     SET LOGON SEQUENCE BASE     @OZ41884
         BR    R1                  ENTER PROCESSING ROUTINE          R4
         SPACE 1                                                     R4
MSNALTAB DS    0F                  LOGON SEQUENCE BRANCH TABLE       R4
         DC    AL1(X'80'),AL3(MSNALDEV)  INQ DEVCHAR COMPLETE  @OZ41884
         DC    A(MSNALPAR)         INQUIRE SESSPARM COMPLETE         R4
         DC    A(MSNALOPD)         OPNDST  ACCEPT   COMPLETE         R4
         SPACE 1                                               @OZ41884
         LTORG                                                 @OZ41884
         DROP  MBASE1                                          @OZ41884
         SPACE 2                                                     R4
         EJECT                                                       R4
         USING NIBDSECT,R15        ESTABLISH NIB  ADDRESSABILITY     R4
         USING MSNALDEV,MBASE1     SET LGN SEQ ADDRESSABILITY  @OZ41884
MSNALDEV L     R15,RPLARG          GET ADDRESS OF NIB FROM RPL       R4
         CLI   DEVTCODE,DEVLU      CHECK FOR LU TYPE TERMINAL        R4
         BNE   MSNALINV            REJECT LOGON REQUEST IF NOT      R41
         LA    R14,RPLBUFST+NIBSIZE GET AREA ADDR FOR SESSPARM       R4
         ST    R14,RPLAREA         STORE AREA ADDRESS IN RPL         R4
         ST    R14,NIBNDAR         STORE AREA ADDRESS IN NIB         R4
         LH    R1,$BFSZSNA         GET LENGTH OF SNA BUFFER          R4
         LA    R1,RPLBUFST(R1)     CALCULATE END OF BUFFER ADDR      R4
         SR    R1,R14               AND REMAINING DATA AREA LEFT     R4
         ST    R1,RPLBUFL          STORE IN RPL FOR INQUIRE          R4
         MVI   RPLOPT9,0           CLEAR INQUIRE DEVCHAR INDICATOR   R4
         MVI   RPLOPT10,RPLSPARM   SHOW INQUIRE SESSPARM REQUEST     R4
         NI    RPLSEQTP,X'F0'      SHOW RPL INQUIRE SESSION         R41
         OI    RPLSEQTP,VSEQLPAR    PARAMTERS SPECIAL SEQUENCE      R41
         NI    ICEINDEX,X'F0'      INDICATE SESSION IN              R41
         OI    ICEINDEX,VSEQLPAR    INQUIRE SESSPARM STATUS         R41
         B     MVRPLXEC            GO TO PASS REQUEST TO VTAM        R4
         DROP  R15                 RELEASE NIB ADDRESSABILITY        R4
         EJECT                                                 @OZ32567
         USING BINDSECT,R14        ESTABLISH BIND ADDRESSABILITY     R4
         USING NIBDSECT,R15        ESTABLISH NIB  ADDRESSABILITY     R4
MSNALPAR L     R14,RPLAREA         GET ADDR OF BIND IMAGE            R4
         L     R15,RPLARG          GET ADDR OF NIB                   R4
         IC    R0,BINUSEL          GET LENGTH  OF USER DATA          R4
         LA    R1,BINUSE           GET ADDRESS OF USER DATA          R4
         NC    BINDSECT(L'MBNDMASK),MBNDMASK ISOLATE VARIABLE PARMS  R4
         MVC   ICEBIND,MSNABIND    MOVE DEFAULT BIND IMAGE TO ICE    R4
         OC    ICEBIND(L'MBNDMASK),BINDSECT MERGE FIXED & VAR PARMS  R4
         LA    R14,ICEBIND         GET  DEFAULT BIND IMAGE ADDR      R4
         ST    R14,NIBNDAR         SET NIB POINTER TO BIND IMAGE     R4
         L     WA,NIBRAT           PICK UP PRE-CONNECT RAT          R41
         L     MDCT,ICELDCT         AND LINE DCT ADDRESSES          R41
         DROP  R14,R15             DROP BIND/NIB ADDRESSABILITY      R4
         SPACE 1                                                    R41
         LTR   WA,WA               RAT ADDRESS PRESENT...           R41
         BNZ   MSNALACQ            BR IF YES, GO DO OPNDST AQUIRE   R41
         SPACE 1                                                    R41
         $QSUSE TYPE=TEST          TEST STATUS OF SHARED QUES  @OZ32567
         BNZ   MREQBUF             IF NOT OWNED, REQUEUE BUFR  @OZ32567
         SPACE 1                                               @OZ32567
         MVI   MSLGNWRK,C' '       MOVE BLANK TO LOGON WORKAREA      R4
         MVC   MSLGNWRK+1(MSLGNLEN-1),MSLGNWRK   CLEAR THE AREA      R4
         BAL   R14,MDELSCAN        SCAN FOR REMOTE NAME              R4
         B     MSNALINV            REJECT LOGON IF BAD NAME          R4
         EX    R15,MSNALRMT        MOVE NAME TO WORKAREA             R4
         BAL   R14,MDELSCAN        SCAN FOR LINE PASSWORD            R4
         B     MSNALINV            REJECT LOGON IF BAD PSWD          R4
         EX    R15,MSNALNPW        MOVE LINE PASSWORD                R4
         BAL   R14,MDELSCAN        SCAN FOR REMOTE PASSWORD          R4
         B     MSNALINV            REJECT LOGON IF BAD PSWD          R4
         EX    R15,MSNALRPW        MOVE LINE PASSWORD                R4
         BAL   R14,MDELSCAN        SCAN FOR LOGON MODE               R4
         B     MSNALINV            REJECT LOGON IF BAD MODE          R4
         EX    R15,MSNALMOD        MOVE LOGON MODE                   R4
         EJECT                                                       R4
         USING RATDSECT,WA         PROVIDE RAT ADDRESSABILITY        R4
         LH    R0,$NUMRJE          GET NUMBER OF REMOTES             R4
         L     WA,$RATABLE         GET ADDRESS OF RAT                R4
         LA    R14,ICESYMB         GET ADDR OF SESSION  SYMB NAME    R4
         LA    R1,RATSYMB-RATDSECT GET DISP OF REMOTE   SYMB NAME    R4
         CLI   MSLGNAME,C' '       HAS REMOTE NAME BEEN SPECIFIED    R4
         BE    MSNALOCA            SEARCH REMOTE USING  SYMB NAME    R4
         LA    R14,MSLGNAME        GET ADDR OF LOGON RMTE NAME       R4
         LA    R1,RATNAME-RATDSECT GET DISP OF TERMINAL RMTE NAME    R4
         CLC   =C'RMT',MSLGNAME    CHECK IF SHORT RMTE NAME GIVEN    R4
         BE    MSNALOCA            BRANCH TO LOCATE OUR REMOTE       R4
         CLC   =C'REMOTE',MSLGNAME CHECK FOR CORRECT LONG FORM       R4
         BNE   MSNALINV            REJECT LOGON IF IN ERROR          R4
         MVC   MSLGNRMT(3),=C'RMT' MOVE SHORT FORM TO WORKAREA       R4
         MVC   MSLGNRMT+3(2),MSLGNAME+6 COPY REMOTE NUMBER     @OZ49222
         LA    R14,MSLGNRMT        POINT TO SHORT REMOTE NAME        R4
         SPACE 1                                                     R4
MSNALOCA LA    R15,RATDSECT(R1)    GET ADDR OF RAT ENTRY FIELD       R4
         CLC   0(8,R14),0(R15)     CHECK IF THIS IS OUR REMOTE       R4
         BE    MSNALFND            BRANCH IF CORRECT ENTRY FOUND     R4
         LA    WA,RATTLE(,WA)      STEP TO NEXT RAT ENTRY            R4
         BCT   R0,MSNALOCA         CHECK FOR END OF RAT              R4
         B     MSNALINV            GO ISSUE LOGON FAILED MSG   @OZ27491
         EJECT                                                 @OZ27491
MSNASMF  CLI   $NUMSMFB,2          CHECK SMF OPTIONS           @OZ27491
         BL    MSNALINV            BRANCH IF NO SMF REQUIRED   @OZ27491
        $GETSMFB WAIT=NO           GET AN SMF BUFFER           @OZ27491
         BZ    MSNALINV            BRANCH IF NO SMF BUFFER     @OZ27491
         USING SMFDSECT,R1         SMF ADDRESSABILITY          @OZ27491
         MVI   SMFRDW+1,SMF54END-SMFRDW  SET RECORD LENGTH     @OZ27491
         MVI   SMFHDRTY,SMF54      SET SMF RECORD TYPE         @OZ27491
         MVI   SMFPROFF+1,SMFSUBID-SMFJMR  OFFSET TO PROD SECT @OZ27491
         MVI   SMFPRLEN+1,SMFIDSEC-SMFSUBID  PROD SEC LENGTH   @OZ27491
         MVI   SMFPRNUM+1,1        PRODUCT SECTION NUMBER      @OZ27491
         MVI   SMFIDOFF+1,SMFIDSEC-SMFJMR  OFFSET TO ID SECT   @OZ27491
         MVI   SMFIDNUM+1,1        ID SECTION NUMBER           @OZ27491
         MVC   SMFVERNO,=C'01'     VERSION NUMBER              @OZ27491
         MVC   SMFSYSNM,=C'JES2'   SUBSYSTEM NAME              @OZ27491
         MVI   SMFSUBID+1,SMFLOGON INDICATE LOGON EVENT        @OZ27491
         MVI   SMFIDLEN+1,SMF54END-SMFIDSEC  ID SEC LENGTH     @OZ27491
         MVC   SMF54RPW,MSLGNRPW   REMOTE PASSWORD             @OZ27491
         MVC   SMF54PSW,MSLGNLPW   LINE PASSWORD               @OZ27491
         MVC   SMF54RMT,RATNAME    REMOTE NAME                 @OZ27491
        $QUESMFB                   QUEUE THE SMF RECORD        @OZ27491
         DROP  R1                  RELEASE SMF ADDRESSABILITY  @OZ27491
         SPACE 1                                                     R4
MSNALINV L     MDCT,ICEADCT        RELOAD LOGON DCT ADDRESS         R41
         L     R1,MDCTINVL         GET LOGON FAILED FOR PARM COUNT  R41
         LA    R1,1(,R1)           INCREMENT LOGON FAILED COUNT      R4
         ST    R1,MDCTINVL         STORE UPDATED COUNTER VALUE       R4
*              THIS LINE DELETED BY APAR NUMBER                @OZ27491
         L     R1,$MWORK           GET MESSAGE WORKAREA ADDR         R4
         MVC   0(L'MLGIMSG,R1),MLGIMSG MSG TARGET TO WORKAREA        R4
         USING MLGIMSG,R1          PROVIDE MSG ADDRESSABILITY        R4
         MVC   MLGILOG,DCTDEVN     MOVE LOGON DCT NAME TO MSG        R4
         MVC   MLGISYM,ICESYMB     MOVE SESSION SYMB NAME TO MSG     R4
         LA    R0,L'MLGIMSG        GET MESSAGE LENGTH FOR $WTO       R4
         B     MSNALREJ            BRANCH TO REJECT THIS LOGON       R4
         DROP  R1                  RELEASE MSG ADDRESSABILITY        R4
         EJECT                                                      R41
MDELSCAN DS    0H                  DELIMITER SCAN SUBROUTINE        R41
         LTR   R15,R0              CHECK AND SAVE FIELD LENGTH      R41
         BMR   R14                 ERROR RETURN IF INVALID LENGTH   R41
         BZ    8(0,R14)            NOP RETURN IF EMPTY FIELD LENGTH R41
         LR    WA,R1               SAVE FIELD START POINTER VALUE   R41
         CLI   0(R1),C'('          CHECK FOR OPEN PARENTHESIS       R41
         BNE   MDELCHCK            BRANCH IF NOT PRESENT            R41
         LA    WA,1(0,R1)          STEP PAST OPEN PARENTHESIS       R41
         BCT   R15,MDELINCR        DECREASE & CHECK FIELD LENGTH    R41
         BR    R14                 ERROR RETURN IF INVALID SYNTAX   R41
         SPACE 1                                                    R41
MDELCHCK CLI   0(R1),C' '          CHECK FOR BLANK CHARACTER        R41
         BE    MDELBLNK            BRANCH IF END OF STRING          R41
         CLI   0(R1),C','          CHECK FOR COMMA AS DELIMITER     R41
         BE    MDELCOMA            BRANCH IF END OF SUBSTRING       R41
         CLI   0(R1),C')'          CHECK FOR CLOSE PARENTHESIS      R41
         BE    MDELBLNK            HANDLE AS BLANK DELIMITER        R41
         SPACE 1                                                    R41
MDELINCR LA    R1,1(0,R1)          ADVANCE STRING POINTER           R41
         BCT   R0,MDELCHCK         CHECK FOR END OF FIELD           R41
         B     MDELBLNK            BRANCH IF END OF FIELD REACHED   R41
         SPACE 1                                                    R41
MDELCOMA LA    R1,1(0,R1)          STEP POINTER OVER COMMA          R41
         BCTR  R0,0                UPDATE FIELD LENGTH VALUE        R41
         BCTR  R15,0               ADJUST OLD TARGET LENGTH VALUE   R41
         SPACE 1                                                    R41
MDELBLNK BCTR  R15,0               DECREMENT FOR MACHINE LENGTH     R41
         SR    R15,R0              CALCULATE SUBSTRING LENGTH - 1   R41
         BM    8(0,R14)            NOP RETURN IF EMPTY SUBSTRING    R41
         CH    R15,=H'8'           CHECK FOR MAXIMUM STRING LENGTH  R41
         BL    4(0,R14)            RETURN WITH OPERAND IF GOOD      R41
         BR    R14                 ERROR RETURN IF TOO LONG         R41
         EJECT                                                       R4
MSNALFND CLI   RATPSWD,C' '        RMT PASSWORD DEFINED...     @OZ80340
         BE    MSNALCNT             NO, BYPASS COMPARISON      @OZ80340
         CLC   RATPSWD,MSLGNRPW    DO REMOTE PASSWORDS MATCH...@OZ80340
         BNE   MSNASMF             RECORD SMF,THEN FAIL LOGON  @OZ27491
MSNALCNT TM    RATTYPE,DCTPSNA     CHECK REMOTE TYPE           @OZ80340
         BNO   MSNALINV            INVALID IF NOT SNA                R4
         SPACE 2                                                     R4
         L     MDCT,RATLDCT        GET ADDRES OF LINE (OR ZERO)     R41
*              THIS LINE DELETED BY APAR NUMBER                @OZ32567
         LA    R15,MSNAIDL-MDCTADCT+DCTDSECT  SET UP PHONY LINE DCT R41
         LTR   MDCT,MDCT           TRY TO GET A LINE IF NOT          R4
         BZ    MSNALGET            TRY TO GET A LINE IF NOT          R4
         DROP  MDCT                DROP LOGON DCT ADDRESSABILITY     R4
         EJECT                                                       R4
         USING DCTDSECT,MDCT       SET LINE ADDRESSABILITY           R4
         OC    MDCTDCT,MDCTDCT     TEST FOR RMT ALREADY CONNECTED   R41
         BZ    MSNALREM            REMOVE LINE FROM IDLE CHAIN       R4
         SPACE 1                                                    R41
         SPACE 1                                                     R4
         CLC   RATRDCT,MDCTDCT     IS OUR REMOTE ACTIVE ON LINE      R4
         BNE   MSNALNOT            REJECT LOGON IF NOT               R4
         CLI   MDCTPSWD,C' '       LINE PASSWORD DEFINED...    @OZ80340
         BE    MSNALACC             NO, BYPASS COMPARISON      @OZ80340
         CLC   MSLGNLPW,MDCTPSWD   DO LINE PASSWORDS MATCH           R4
         BNE   MSNASMF             RECORD SMF,THEN FAIL LOGON  @OZ27491
         B     MSNALACC            BRANCH TO ACCEPT MULTIPLE LOGON   R4
         SPACE 1                                                     R4
MSNALGET L     MDCT,MDCTADCT-DCTDSECT(,R15)  GET NEXT IDLE LINE DCT  R4
         LTR   MDCT,MDCT           CHECK FOR ANY MORE LINES          R4
         BZ    MSNALNOT            REJECT LOGON IF NO IDLE LINE      R4
         TM    MDCTSTAT,DCTLEASE   CHECK FOR LEASED LINE DCT         R4
         BO    MSNALGNX            SKIP THIS LINE DCT IF LEASED     R41
         OC    MDCTRAT,MDCTRAT     CHECK FOR PRE-CONNECTED LINE     R41
         BNZ   MSNALGNX            BR IF YES, SKIP LINE             R41
         CLI   MDCTPSWD,C' '       LINE PASSWORD DEFINED...    @OZ80340
         BE    MSNALDSC             NO, BYPASS COMPARISON      @OZ80340
         CLC   MDCTPSWD,MSLGNLPW   COMPARE LINE PASSWORDS            R4
         BE    MSNALDSC            ALLOC THIS LINE IF PSWD MATCH     R4
MSNALGNX LR    R15,MDCT            SAVE PRECEEDING LNE DCT ADDRESS  R41
         B     MSNALGET            GO TO CHECK NEXT LINE DCT         R4
         SPACE 1                                                     R4
MSNALREM L     R1,MDCTADCT-DCTDSECT(,R15) GET ADDR OF NEXT LINE DCT  R4
         CLR   R1,MDCT             IS THIS DCT POINTING TO OURS      R4
         BE    MSNALPWC            BRANCH TO CHECK PASSWORD    @OZ67261
         LTR   R15,R1              CHECK FOR END OF CHAIN            R4
         BNZ   MSNALREM            BRANCH TO TEST NEXT LINE DCT      R4
         B     MSNALNOT            REJECT LOGON IF DCT NOT ACTIVE    R4
         SPACE 1                                               @OZ67261
MSNALPWC CLI   MDCTPSWD,C' '       LINE PASSWORD DEFINED...    @OZ80340
         BE    MSNALDSC             NO, BYPASS COMPARISON      @OZ80340
         CLC   MSLGNLPW,MDCTPSWD   DOES LINE PASSWORD MATCH    @OZ80340
         BNE   MSNALINV             NO, INVALID LOGON          @OZ77954
MSNALDSC DS    0H                                                   R41
         TM    RATFLAGS,RATPILUN   TEST FOR LUNAME SPECIFIED        R41
         BO    MSNALMVE            YES, BYPASS MOVE            @OZ41377
*              THIS LINE DELETED BY APAR NUMBER                @OZ41377
*              THIS LINE DELETED BY APAR NUMBER                @OZ41377
         MVC   RATSYMB(8),ICESYMB  MOVE IN LUNAME              @OZ41377
MSNALMVE LR    R0,WA               COPY RAT OFFSET             @OZ41377
         SL    R0,$RATABLE         R0 = (RMT NO -1) * RATTLE         R4
         LR    R1,R0               MULTIPLY                          R4
         ALR   R1,R0                BY                               R4
         ALR   R1,R0                 THREE                           R4
         SLR   R0,R0               DIVIDE BY EIGHT AND               R4
         D     R0,=A(RATTLE)        RATTLE GIVING OFFSET TO          R4
         D     R0,=A(8)              BYTE (QUOT) AND BIT (REMAIN)    R4
         AL    R1,$RMTSON          R1 = BYTE ADDR OF SIGNON BITS     R4
         LR    R14,R0              MOVE BIT OFFSET                   R4
         L     R0,=A(QUEBUSY*X'2000')  GET BIT TO TEST BUSY          R4
         SRL   R0,0(R14)           SHIFT TO BIT OFFSET               R4
         STH   R0,MSONWORK         STORE IN WORK AREA FOR TEST       R4
         NC    MSONWORK,0(R1)      TEST FOR RMT ON ANY OTHER SYSTEM  R4
         BNZ   MSNALNOX            BRANCH IF YES, --INVALID SIGNON  R41
         SLR   R0,R0               GET BUSY BITS                     R4
         ICM   R0,4,$SIDBUSY         FOR THIS SYSTEM                 R4
         SRL   R0,3(R14)           SHIFT TO BIT OFFSET               R4
         STH   R0,MSONWORK         STORE IN WORK AREA FOR SET        R4
         OC    0(2,R1),MSONWORK    SET BITS -- SHOW RMT ON SYSTEM    R4
         SPACE 2                                                     R4
         L     R0,MDCTADCT         PICK UP NEXT LINE DCT ADDRESS     R4
         ST    R0,MDCTADCT-DCTDSECT(,R15) REMOVE LINE DCT FROM CHAIN R4
         SPACE 1                                                     R4
         L     R1,MSNALNE          GET ADDR OF 1ST ALLOCATED LINE    R4
         ST    R1,MDCTADCT         CHAIN ALLOC LINES TO OUR LINE     R4
         ST    MDCT,MSNALNE        UPDATE LINE MGR ALLOC CHAIN       R4
         ST    MDCT,RATLDCT        STORE LINE DCT IN RAT             R4
         NI    DCTFLAGS,DCTLOGAL   RESET FLAGS -EXCEPT LOGGING      R41
         L     R1,RPLDCT           PICK UP LOGON DCT ADDRESS        R41
         ST    R1,DCTDCB           STORE LOGON DCT ADDRESS IN LINE  R41
         ST    WA,MDCTRAT          STORE RAT ADDRESS IN LINE DCT     R4
         L     R15,RATRDCT         GET ADDR OF FIRST REMOTE DCT      R4
         ST    R15,MDCTDCT         STORE REMOTE DCT CHAIN IN LINE    R4
         DROP  MDCT                DROP LINE DCT ADDRESSABILT        R4
         EJECT                                                       R4
         USING DCTDSECT,MDCT       GET LINE DCT ADDRESSABILITY       R4
         USING BINDSECT,R15        GET BIND ADDRESSABILITY     @OZ41377
MSNALACC LA    R15,ICEBIND         LOAD BIND IMAGE ADDRESS     @OZ41377
         ST    MDCT,ICELDCT        STORE LINE DCT IN ICE       @OZ41377
         LR    R0,R2               SAVE REG2                   @OZ41377
         LA    R14,MDCTICE-(ICEALCHN-ICEDSECT) ALCHN OFFSET    @OZ41377
MSNALACD LR    R2,R14              BACKUP PREVIOUS ICE PTR     @OZ41377
         L     R14,ICEALCHN-ICEDSECT(,R14) GET NEXT ICE PTR    @OZ41377
         LTR   R14,R14             IS THERE ONE...             @OZ41377
         BZ    MSNALACE            NO, FINISH CHAINING         @OZ41377
         LA    R1,ICEBIND-ICEDSECT(,R14) POINT TO BIND IMAGE   @OZ41377
         CLC   BINRPACE-BINDSECT(,R1),BINRPACE PREV PACE HIGH  @OZ41377
         BH    MSNALACD            YES, CHECK NEXT ICE PACE    @OZ41377
         ST    R14,ICEALCHN        NEW PACE HIGHER, CHAIN ICE  @OZ41377
MSNALACE ST    MICE,ICEALCHN-ICEDSECT(,R2)  NEW ICE IN CHAIN   @OZ41377
         LR    R2,R0               RESTORE REG2                @OZ41377
         LH    R1,MDCTSNCT         GET LOGGED ON ICE COUNT           R4
         LA    R1,1(,R1)           INCREMENT COUNT BY ONE            R4
         STH   R1,MDCTSNCT         STORE UPDATED ICE COUNTER         R4
         CH    R1,=H'0001'         FIRST SESSION....           @OZ44410
         BNE   MSNALACQ            IF NOT, CONTINUE            @OZ44410
         OI    ICEFLGS2,ICE1STLU   SET SMF REQUIRED FLAG.      @OZ44410
         SPACE 1                                                     R4
MSNALACQ LTR   MDCT,MDCT           TEST FOR LINE DCT PRESENT        R41
         BZ    MSNALABN            GONE, GO ABANDON LOGON ATTEMPT   R41
         STCM  MDCT,7,RPLDCT+1     STORE LINE DCT ADDREES IN RPL    R41
         LH    R1,RATBUFSZ         OBTAIN TERMINAL BUFFER SIZE       R4
         STH   R1,ICERULEN         SET MAXIMUM R.U. LENGTH          R41
         BAL   R14,MSNALGTH        CONVERT TO BIND-STYLE FLOATING PT R4
         MVC   MDCTIMOK,MCLOCK     SET TIME FOR DISCONNECT CHECK    R41
         OI    MSTQE+IPOST,X'20'   KICK OFF TIMER PULSES            R41
         SPACE 1                                                     R4
         USING BINDSECT,R15        ESTABLISH BIND ADDRESSABILITY     R4
         LA    R15,ICEBIND         GET ADDR OF SESSION BIND IMAGE    R4
         TM    RATFLAGS,RATEXCH    TEST FOR EXCHANGE MEDIA     @OZ29180
         BZ    MSNALNEX            BRANCH IF NOT EXCHANGE      @OZ29180
         OI    19(R15),X'20'       ALLOW SENDING EXCHANGE      @OZ29180
MSNALNEX TM    RATFLAGS,RATCARD    TEST FOR CARD MEDIA         @OZ29180
         BZ    MSNALPUN            NO, DO NOT BIND FOR CARDS   @OZ29180
         OI    19(R15),X'40'       INDICATE CARD FORMAT ALLOWED     R41
MSNALPUN TM    RATFEAT,DCTPPRES    COMPRESSION OPTION SELECTED      R41
         BZ    MSNALLTH            SKIP IF NOT SELECTED             R41
         OI    BINPRIP,BINPCMP     SHOW PRIMARY WILL SEND COMPRESSED R4
MSNALLTH STC   R1,BINSRUSZ         SET MAXIMUM INBOUND RU SIZE      R41
         STC   R1,BINPRUSZ         SET MAXIMUM OUTBOUND RU SIZE     R41
         MVC   BINPRIM(8),ICESYMB  MOVE PRIMARY LU NAME TO BIND      R4
         TM    RATFEAT,DCTPSHDR    PDIR OPTION SELECTED             R41
         BNO   MSNALHDR            NO, DO NOT BIND FOR PDIR         R41
         OI    15(R15),X'20'       YES, BIND FOR PDIR               R41
MSNALHDR TM    RATFEAT,DCTPCPCT    COMPACTION OPTION SELECTED       R41
         BNO   MSNALCPT            NO, DO NOT BIND FOR COMPACTION   R41
         OI    15(R15),X'40'       YES, BIND FOR COMPACTION         R41
         MVI   ICEACPTN,X'FF'      FORCE COMPACTION TABLE SEND      R41
MSNALCPT MVC   BINPRIM(8),ICESYMB  MOVE PRIMARY LUNAME TO BIND      R41
         TM    BINCMNP,BINALT      ALTERNATE CODE SPECIFIED    @OZ34412
         BZ    MSNANALT            NO, SKIP NEXT               @OZ34412
         NI    BINSECP,255-BINSCMP YES, SUPPRESS COMPRESSION   @OZ34412
MSNANALT NI    ICEINDEX,X'F0'      SHOW SESSION IN             @OZ34412
         OI    ICEINDEX,VSEQLOPD    OPNDST SPECIAL SEQUENCE         R41
         NI    RPLSEQTP,X'F0'      INDICATE RPL IS                  R41
         OI    RPLSEQTP,VSEQLOPD    OPNDST REQUEST TYPE             R41
         MVI   RPLREQ,RPLOPNDS     SET REQUEST TYPE TO OPNDST       R41
         NI    RPLOPT5,255-RPLDLGIN-RPLNODE SHOW SPEC AND CA OPT     R4
         NI    RPLOPT7,255-RPLQOPT RESET RPL QUEUEING OPTION         R4
         MVI   ICEINLM+1,6         SET SESSION INBOUND LIMIT   @OZ27423
         MVI   ICEOUTLM+1,3        SET SESSION OUTBOUND LIMIT  @OZ27423
         B     MVRPLXEC            BRANCH TO PASS REQ TO VTAM        R4
         EJECT                                                      R41
MSNALNOT L     MDCT,ICEADCT        RELOAD LOGON DCT ADDRESS          R4
         L     R1,MDCTNLNE         GET LOGON FAILED FOR LINE CNTR    R4
         LA    R1,1(,R1)           INCREMT LOGON FAILED COUNTER      R4
         ST    R1,MDCTNLNE         STORE UPDATED COUNTER VALUE       R4
MSNALNOX CLI   RPLSEQTP,VSEQALOG+VSEQLPAR  TEST RPL SEQUENCE TYPE   R41
         BE    MSNALABN            BRANCH IF AUTOLOGON, ABANDON     R41
         L     R1,$MWORK           GET MESSAGE WORKAREA ADDRESS     R41
         MVC   0(L'MLGFMSG,R1),MLGFMSG MSG TARGET TO WORKAREA        R4
         USING MLGFMSG,R1          PROVIDE MSG ADDRESSABILITY        R4
         MVC   MLGFRMT,RATNAME     MOVE REMOTE NAME TO MESSAGE       R4
         MVC   MLGFSYM,ICESYMB     MOVE SESSION SYMB NAME TO MSG     R4
         LA    R0,L'MLGFMSG        GET LENGTH OF ERROR MESSAGE       R4
         DROP  R1                  RELEASE MSG ADDRESSABILITY        R4
         SPACE 1                                                     R4
MSNALREJ DS    0H                  REJECT LOGON REQUEST IN ERROR     R4
        $WTO   (R1),(R0),JOB=NO,WAIT=NO, ISSUE ERROR MESSAGE           C
               ROUTE=$LOG+$ERR+$TP,CLASS=$ALWAYS,PRI=$HI             R4
         LH    R14,$BFSZSNA        RESET LENGTH SHORTENED FOR NIB    R4
         ST    R14,RPLBUFL          BACK TO FULL SNA BUFFER SIZE     R4
         MVI   RPLSEQTP,VSEQCLOS   SHOW SESSION CLSDST SEQ IN RPL    R4
         MVI   ICEINDEX,VSEQCLOS   INDICATE SESSION CLSDST STATUS    R4
         MVI   RPLREQ,RPLCLOSE     SHOW RPL CLSDST REQUEST TYPE      R4
         OI    ICESTAT,ICEDRAIN    SHOW ICE TO BE FREED AFTER CLSDST R4
         B     MVRPLXEC            BRANCH TO PASS REQ TO VTAM        R4
         DROP  WA                  RELEASE RAT ADDRESSABILITY        R4
         SPACE 2                                                    R41
MSNALABN MVI   ICEINDEX,0          CLEAR ICE INDEX FOR ABANDON      R41
         B     MICEABRT            ABORT SESSION ATTEMPT TO LOGON   R41
         EJECT                                                       R4
MSNALOPD LH    R14,$BFSZSNA        RESET LENGTH SHORTENED FOR NIB   R41
         ST    R14,RPLBUFL          BACK TO FULL SNA BUFFER SIZE    R41
         SPACE 1                                                    R41
         NI    ICESTAT,255-ICEHOLD-ICEABORT ALLOW ICE ALLOCATION    R41
         MVI   ICEINDEX,VSEQNORM   SHOW SESSION  IN NORMAL  STATUS  R41
         MVI   ICERCVST,ICENOFMH   SHOW RECV OUT OF STREAM  STATUS  R41
         MVI   ICESNDST,ICENOFMH   SHOW SEND OUT OF STREAM  STATUS  R41
         NI    ICEFLGS2,255-ICESIGNL-ICEOUTBK-ICEBREAK         @OZ29180
         LA    R15,RPLBUFST        POINT TO NIB                @OZ41884
         USING NIBDSECT,R15        SET NIB ADDRESSABILITY      @OZ41884
         TM    NIBFLG1,NIBCON      TEST IF SESSION CONNECTED   @OZ41884
         BO    MSNALCON            BRANCH IF CONNECTED         @OZ41884
         MVC   ICECID,NIBCID       SET SESSION CID             @OZ64289
         DROP  R15                 SUSPEND NIB ADDRESSABILITY  @OZ41884
         L     R15,=A(MSNAXCLS)    SESSION ABORT ROUTINE       @OZ64289
         NC    ICECID,ICECID       TEST SESSION CID            @OZ64289
         BNZ   MSNANCGO            BRANCH IF VALID             @OZ64289
         XC    ICEBUFAD,ICEBUFAD   CLEAR SPEC SEQ BUF ADDR     @OZ64289
         L     R15,=A(MSNAXVTM)    SESSION ABANDON ROUTINE     @OZ64289
MSNANCGO L     MBASE1,MBUFSNAP     REINITIALIZE BASE           @OZ64289
         BR    R15                 TERMINATE THE SESSION       @OZ41884
         SPACE 1                                               @OZ41884
MSNALCON MVC   ICECID,RPLARG       MOVE CID OF SESSION TO ICE  @OZ41884
         L     MDCT,ICELDCT        RELOAD ICE ADDRESS               R41
         LTR   MDCT,MDCT           TEST FOR LINE DCT PRESENT        R41
         BZ    MICEABRT            GONE, SESSION ABORTED            R41
         ST    R0,ICEBUFAD         CLEAR SPEC SEQ BUF ADDR     @OZ41884
         MVI   ICEFLAGS,ICECNECT   SHOW SESSION CONNECTED           R41
         SPACE 1                                                    R41
         L     R15,MDCTRAT         GET RAT  ENTRY ADDRESS           R41
         USING RATDSECT,R15        ESTABLISH RAT ADDRESSABILITY     R41
         OI    MDCTSTAT,DCTSINON   SHOW REMOTE SIGNED ON LINE       R41
         L     R14,MDCTDCT         PICK UP FIRST REMOTE DCT ADDRESS R41
         USING DCTDSECT,R14        GET REMOTE DCT ADDRESSABILITY    R41
MSNALSON OI    MDCTSTAT,DCTSINON   SHOW REMOTE IS SIGNED ON         R41
         ST    MDCT,DCTDCB         STORE LINE DCT ADDRESS IN REMOTE R41
         L     R14,MDCTDCT         GET ADDRESS OF NEXT REMOTE DCT   R41
         LTR   R14,R14             CHECK FOR END OF REMOTE DCT CHN  R41
         BNZ   MSNALSON            BRANCH TO PROCESS NEXT DCT       R41
         DROP  R14                 RELEASE REMOTE DCT ADDRESSABILTY R41
         SPACE 1                                                    R41
         NI    RATFLAGS,255-RATSRMT  FORCE $S RMT FLAG OFF          R41
         EJECT                                                      R41
         L     R1,$MWORK           GET MESSAGE WORKAREA ADDR         R4
*              THIS LINE DELETED BY APAR OZ44410               @OZ44410
         TM    ICEFLGS2,ICE1STLU   SMF RECORD REQUIRED...      @OZ44410
         BNO   MSNALOPS            BRANCH IF NOT.              @OZ44410
         MVC   0(L'MLGNMSG,R1),MLGNMSG MSG TARGET TO WORKAREA        R4
         USING MLGNMSG,R1          PROVIDE MSG ADDRESSABILITY        R4
         MVC   MLGNRMT,RATNAME     MOVE REMOTE NAME TO MESSAGE       R4
         MVC   MLGNLNE,DCTDEVN     MOVE LINE DCT NAME TO MESSAGE     R4
         MVC   MLGNSYM,ICESYMB     MOVE SESSION SYMB NAME TO MSG     R4
         DROP  R1                  RELEASE MESSAGE ADDRESSABILITY   R41
        $WTO   (R1),L'MLGNMSG,JOB=NO,WAIT=NO,  ISSUE LOGON MESSAGE     C
               ROUTE=$LOG+$TP,CLASS=$ALWAYS,PRI=$HI            @OZ74043
         SPACE 1                                                     R4
         OI    MDCTATTN,MDCTJOB1+MDCTJOB2  SHOW IDLE SESSION AND       C
                                            REQUEST SEARCH FOR WORK  R4
         XC    MDCTSCNT(20),MDCTSCNT  CLEAR REMOTE COUNTS      @OZ27491
         CLI   $NUMSMFB,2          CHECK SMF OPTIONS           @OZ27491
         BL    MICETIME            BRANCH IF NO SMF REQUIRED   @OZ27491
        $GETSMFB WAIT=NO           GET AN SMF BUFFER           @OZ27491
         BZ    MICETIME            BRANCH IF NO SMF BUFFER     @OZ27491
         USING SMFDSECT,R1         SMF ADDRESSABILITY          @OZ27491
         MVI   SMFRDW+1,SMF52END-SMFRDW  SET RECORD LENGTH     @OZ27491
         MVI   SMFHDRTY,SMF52      SET SMF RECORD TYPE         @OZ27491
         MVI   SMFPROFF+1,SMFSUBID-SMFJMR  OFFSET TO PROD SECT @OZ27491
         MVI   SMFPRLEN+1,SMFIDSEC-SMFSUBID  PROD SEC LENGTH   @OZ27491
         MVI   SMFPRNUM+1,1        PRODUCT SECTION NUMBER      @OZ27491
         MVI   SMFIDOFF+1,SMFIDSEC-SMFJMR  OFFSET TO ID SECT   @OZ27491
         MVI   SMFIDNUM+1,1        ID SECTION NUMBER           @OZ27491
         MVC   SMFVERNO,=C'01'     VERSION NUMBER              @OZ27491
         MVC   SMFSYSNM,=C'JES2'   SUBSYSTEM NAME              @OZ27491
         MVI   SMFSUBID+1,SMFLOGON INDICATE LOGON EVENT        @OZ27491
         MVI   SMFIDLEN+1,SMF52END-SMFIDSEC  ID SEC LENGTH     @OZ27491
         MVC   SMF52LIN,DCTDEVN    LINE NAME                   @OZ27491
         MVC   SMF52PSW,MDCTPSWD   LINE PASSWORD               @OZ27491
         L     R15,MDCTRAT         RESTORE RAT ADDRESS         @OZ27491
         MVC   SMF52RMT,RATNAME    REMOTE NAME                 @OZ27491
        $QUESMFB                   QUEUE THE SMF RECORD        @OZ27491
         DROP  R1                  RELEASE SMF ADDRESSABILITY  @OZ27491
         B     MICETIME            REQST TIME DELAY, FREE BUF & RTRN R4
         EJECT                                                 @OZ27491
MSNALOPS MVC  0(L'MLGNMSG2,R1),MLGNMSG2  INITIALIZE MESSAGE         R41
         USING MLGNMSG2,R1         PICK UP MSG ADDRESSABILITY       R41
         MVC   MLGNSYM2,ICESYMB    MOVE LUNAME INTO MESSAGE         R41
         MVC   MLGNLNE2,DCTDEVN    MOVE LINE NAME INTO MESSAGE      R41
         $WTO  (R1),L'MLGNMSG2,JOB=NO,WAIT=NO,   ISSUE              R41X
               ROUTE=$LOG+$TP,CLASS=$NORMAL,PRI=$HI   MESSAGE       R41
         SPACE 2                                                    R41
         OI    MDCTATTN,MDCTJOB1+MDCTJOB2     SHOW SESSION IDLE     R41
         B     MICETIME            GO REQUEST $WAITIME INTERVAL     R41
         SPACE 1                                                    R41
         DROP  R1,R15              DROP MSG AND RAT ADDRESSABILITY  R41
         EJECT                                                       R4
*                                                                    R4
*                CONVERT R.U. LENGTHS TO BIND FLOATING-POINT FORM    R4
*                                                                    R4
         SPACE 2                                                     R4
MSNALGTH LR    R0,R1               COPY LENGTH TO WORK REG           R4
         SLL   R1,4                SHIFT LENGTH INTO HI-ORDER NIBBLE R4
         SRA   R0,4                TEST VALUE                        R4
         BZR   R14                 DONE IF LESS THAN 16              R4
         SLR   R15,R15             CLEAR REG FOR CHARACTERISTIC      R4
SKIP1500 LA    R15,1(,R15)         INCREASE CHARACTERISTIC BY 1      R4
         SRA   R0,1                SHIFT OUT RIGHT-HAND BIT          R4
         BNZ   SKIP1500            LOOP UNTIL LAST BIT SHIFTED OUT   R4
         SRL   R1,4(R15)           FORM 4-BIT MANTISSA              R41
         SLL   R1,4                SHIFT INTO HI-ORDER NIBBLE        R4
         ALR   R1,R15              MERGE MANTISSA & CHARACTERISTIC   R4
         BR    R14                 RETURN TO CALLER, RESULT IN R1    R4
         EJECT                                                       R4
MSNACLOS EQU   MICEMELT            PROCESS SNA CLSDST COMPLETE RPL   R4
         SPACE 1                                                     R4
MSNAHOLD EQU   MBUFNEXT                                              R4
MSNATERM EQU   MBUFNEXT                                              R4
MSNARCVR EQU   MBUFNEXT                                              R4
         SPACE 2                                                     R4
MSNALRMT MVC   MSLGNAME(*-*),0(WA)  MOVE RMTE NAME *** EXECUTED ***  R4
MSNALNPW MVC   MSLGNLPW(*-*),0(WA)  MOVE LINE PSWD *** EXECUTED ***  R4
MSNALRPW MVC   MSLGNRPW(*-*),0(WA)  MOVE RMTE PSWD *** EXECUTED ***  R4
MSNALMOD MVC   MSLGNMOD(*-*),0(WA)  MOVE LOGN MODE *** EXECUTED ***  R4
         SPACE 2                                                     R4
MLGFMSG $MSG   204,'RMTXXXXX -- LOGON  FAILED -- SESSION ZZZZZZZZ'   R4
MLGFRMT  EQU   MLGFMSG+2,8         REMOTE  NAME                      R4
MLGFSYM  EQU   MLGFMSG+39,8        SESSION NAME                      R4
         SPACE 2                                                     R4
MLGIMSG $MSG   205,'LOGONXXX -- INVALID LOGON -- SESSION ZZZZZZZZ'   R4
MLGILOG  EQU   MLGIMSG+2,8         LOGON DCT NAME                    R4
MLGISYM  EQU   MLGIMSG+39,8        SESSION   NAME                    R4
         SPACE 2                                                     R4
MLGNMSG $MSG   200,'RMTXXXXX STARTED ON LINEYYYY SESSION ZZZZZZZZ'   R4
MLGNRMT  EQU   MLGNMSG+2,8         REMOTE   NAME                     R4
MLGNLNE  EQU   MLGNMSG+22,8        LINE DCT NAME                     R4
MLGNSYM  EQU   MLGNMSG+39,8        SESSION  NAME                     R4
         SPACE 2                                                    R41
MLGNMSG2 $MSG  209,'SESSION XXXXXXXX STARTED ON LINEYYYY'           R41
MLGNSYM2 EQU   MLGNMSG2+10,8       LUNAME                           R41
MLGNLNE2 EQU   MLGNMSG2+30,8       LINE NAME                        R41
         EJECT                                                      R41
         DROP  MDCT                                                 R41
         DROP  MBASE1,MBASE2,MBASE3   RELEASE ROUTINE               R41
         DROP  MBUF,MICE           BUFFER AND ICE ADDRESSABILTY     R41
         SPACE 2                                                     R4
         DROP  BASE2              RELEASE LINE MANAGER BASE         R41
         LTORG                                                       R4
         EJECT                                                       R4
MSNABIND DS    0CL36          DEFAULT SNA BATCH BIND IMAGE           R4
         DC    X'01'               COLD BIND REQUEST                 R4
         SPACE 1                                                     R4
*                             FM PROFILE AND TS PROFILE              R4
         SPACE 1                                                     R4
         DC    B'00000011'         FM HEADERS WILL BE USED           R4
         DC    B'00000011'         STSN   WILL NOT BE USED           R4
         SPACE 1                                                     R4
*                             SESSION PROTOCOLS                      R4
         SPACE 1                                                     R4
         DC    B'10110001'         PRIMARY   PROTOCOLS               R4
         DC    B'10100011'         SECONDARY PROTOCOLS               R4
         DC    B'01110000'         COMMON    PROTOCOLS               R4
         DC    B'10000000'         COMMON    PROTOCOLS               R4
         SPACE 1                                                     R4
*                             TRANSMISSION SERVICE USAGE             R4
         SPACE 1                                                     R4
         DC    AL1(0)              SLU SEND PACING COUNT            R41
         DC    AL1(0)              SLU RCVE PACING COUNT       @OZ41377
         DC    AL1(*-*)            MAX. INBOUND  RU SIZE             R4
         DC    AL1(*-*)            MAX. OUTBOUND RU SIZE             R4
         DC    XL2'00'             RESERVED                          R4
         DC    B'00000001'         LU PROFILE                        R4
         DC    B'00010000'         FMH SUBSET                          C
                                   CARDS MAY NOT SPAN RUS            R4
         SPACE 1                                                     R4
*                             PRIMARY LU USAGE                       R4
         SPACE 1                                                     R4
         DC    B'00000000'         INTERRUPT LEVEL 2                   C
                                   NO COMPACTION                       C
                                   NO PDIR SETUP                     R4
         DC    X'00'               RESERVED                          R4
         DC    B'10010001'         SCS CHARACTER SET USE               C
                                   BS/CR/INP/ENP/LF/SVF/               C
                                   SEL/TRN   MAY BE SENT             R4
         DC    X'00'               RESERVED                          R4
         DC    B'10000000'         DOCUMENT FORMAT ONLY             R41
         SPACE 1                                                     R4
*                             SECONDARY LU USAGE                     R4
         SPACE 1                                                     R4
         DC    B'00000000'         INTERRUPT LEVEL 2                   C
                                   NO COMPACTION                       C
                                   NO PDIR SETUP                     R4
         DC    X'00'               RESERVED                          R4
         DC    B'00000001'         SCS CHARACTER SET USE               C
                                   TRN   MAY BE SENT                 R4
         DC    X'00'               RESERVED                          R4
         DC    B'01000000'         CARDS MAY BE SENT                 R4
         SPACE 1                                                     R4
*                             ADDITIONAL INFORMATION                 R4
         SPACE 1                                                     R4
         DC    X'00'               NO CRYPTO                         R4
         DC    AL1(8)              PLU NAME LENGTH                   R4
         DC    CL8' '              PRIMARY LU NAME                   R4
         DC    AL1(0)              NO USER DATA                      R4
         EJECT                                                       R4
MBNDMASK DS    0CL26          VARIABLE BIND PARMS SELECT MASK        R4
         DC    X'00'               BIND REQUEST TYPE FIXED           R4
         SPACE 1                                                     R4
*                             FM PROFILE AND TS PROFILE              R4
         SPACE 1                                                     R4
         DC    B'00000000'         FM PROFILE FIXED                  R4
         DC    B'00000000'         TS PROFILE FIXED                  R4
         SPACE 1                                                     R4
*                             SESSION PROTOCOLS                      R4
         SPACE 1                                                     R4
         DC    B'00000010'         PRIMARY   COMPR  VARIABLE         R4
         DC    B'00000010'         SECONDARY COMPR  VARIABLE         R4
         DC    B'00001000'         ALTERNATE CODE   VARIABLE         R4
         DC    B'00000000'         COMMON PROTOCOLS FIXED            R4
         SPACE 1                                                     R4
*                             TRANSMISSION SERVICE USAGE             R4
         SPACE 1                                                     R4
         DC    AL1(1)              SLU SEND PACING FIXED            R41
         DC    X'FF'               SLU RCVE PACING MASK        @OZ41377
         DC    B'11111111'         MAX INBND RU SIZE VARIABLE        R4
         DC    B'11111111'         MAX OUTBD RU SIZE VARIABLE        R4
         DC    XL2'00'             RESERVED                          R4
         DC    B'00000000'         LU PROFILE FIXED                  R4
         DC    B'00000000'         FMH SUBSET FIXED                  R4
         SPACE 1                                                     R4
*                             PRIMARY LU USAGE                       R4
         SPACE 1                                                     R4
         DC    B'00000000'         DS  PROTOCOLS  FIXED              R4
         DC    X'00'               RESERVED                          R4
         DC    B'00000000'         SCS CHAR USAGE FIXED              R4
         DC    X'00'               RESERVED                          R4
         DC    B'00000000'         MEDIA  SELECT  FIXED              R4
         SPACE 1                                                     R4
*                             SECONDARY LU USAGE                     R4
         SPACE 1                                                     R4
         DC    B'00000000'         DS  PROTOCOLS  FIXED              R4
         DC    X'00'               RESERVED                          R4
         DC    B'00000000'         SCS CHAR USAGE FIXED              R4
         DC    X'00'               RESERVED                          R4
         DC    B'00000000'         MEDIA  SELECT  FIXED              R4
         SPACE 1                                                     R4
*                             ADDITIONAL INFORMATION                 R4
         SPACE 1                                                     R4
         DC    X'00'               NO  CRYPTO  FIXED                 R4
         TITLE 'HASP REMOTE CONSOLE PROCESSOR - INITIALIZATION'      R4
HASPRTAM CSECT                                                       R4
HASPMCON $ENTRY BASE=BASE2,ENTRY=NO REMOTE CONSOLE PROCESSOR         R4
         LA    WG,4096/2           SET                               R4
         LA    WG,4096/2(WG,BASE2) SECOND BASE                       R4
         USING HASPMCON+4096,WG                                      R4
         SPACE 10
***********************************************************************
*                                                                     *
*        HASPMCON -- REMOTE CONSOLE PROCESSOR (RCP) ENTRY POINT       *
*                                                                     *
***********************************************************************
         LH    R1,$BUFSIZE                    COMPUTE AND            R4
         LA    R1,BUFSTART+2047-BUFDSECT(,R1)  SAVE BUFFER           R4
         SRL   R1,11                            SIZE                 R4
         SLL   R1,11                             ROUNDED TO          R4
         STH   R1,RCPBFSZ                         NEXT 2K            R4
         EJECT
***********************************************************************
*                                                                     *
*        GET BUFFER FOR MESSAGE SPOOLING                              *
*                                                                     *
***********************************************************************
         CLI   $SPOLMSG,0          IF NO MSG SPOOL BUFFERS,          R4
         BE    MCDCT                DON'T GET STORAGE                R4
         MVC   RCPBFRS+1(1),$SPOLMSG  SET MSG SPOOL BUFFER COUNT     R4
         GETMAIN EU,LV=3*4096,A=RCPMSB1,MF=(E,RCPGM),BNDRY=PAGE      R4
***********************************************************************
*                                                                     *
*        FILL OUT STATIC PORTIONS OF REMOTE CONSOLE DCT               *
*                                                                     *
***********************************************************************
MCDCT    ST    SAVE,RCPPCE         POINT TO PCE                      R4
         MVI   RCPPCE,DCTINUSE     SET IN USE FLAG                   R4
         MVI   RCPDCTT,DCTRCON     REMOTE CONSOLE DEVICE TYPE        R4
         MVC   RCPFCS,=X'0040'     SET FUNCTION CONTROL SEQUENCE     R4
         MVC   RCPDEVNM,=CL8'CONSOLE' SET NAME                       R4
         EJECT
***********************************************************************
*                                                                     *
*        MISCELLANEOUS PCE INITIALIZATION                             *
*                                                                     *
***********************************************************************
         MVI   RCPIN+(CMBFLAG-CMB),X'FF' INDICATE AREA EMPTY         R4
         MVC   RCPDMXCN,MCSDMXCN   SET INITIAL CONCURRENT EXITS      R4
         TITLE 'HASP REMOTE CONSOLE PROCESSOR - SCAN FOR OUTPUT'     R4
***********************************************************************
*                                                                     *
*        MAIN LOOP                                                    *
*                                                                     *
***********************************************************************
MCL      DS    0H                                                    R4
         STCK  RCPBASET            SET BASE TIME OF THIS SCAN        R4
         BAL   LINK,MCASYNC        CLEAR READY CONCURRENT FUNCTIONS  R4
         TM    $MCONPCE,$MCONACT   ANY NEW OUTPUT ACTIVITY           R4
         BZ    MCIN                SKIP OUTPUT SCAN                  R4
***********************************************************************
*                                                                     *
*        HANDLE OUTPUT CMB TRAFFIC                                    *
*                                                                     *
***********************************************************************
MCS      DS    0H                                                    R4
         LA    WC,$BUSYRQ-(CMBCMB-CMB) POINT TO CMB ZERO             R4
         USING CMBDSECT,WC                                           R4
MCSN     LR    WB,WC               SAVE CURRENT POINTER              R4
         L     WC,CMBCMB           POINT TO NEXT CMB                 R4
         LTR   WC,WC               ANY THERE                         R4
         BZ    MCIN                DO INPUT IF NO MORE OUTPUT        R4
         TITLE 'HASP REMOTE CONSOLE PROCESSOR - WORKSTATION OUTPUT'  R4
***********************************************************************
*                                                                     *
*        HANDLE OUTPUT TO REMOTES - DEQUEUE AND SET ROUTINGS          *
*                                                                     *
***********************************************************************
         MVC   RCPROUT+1(1),CMBRMT SET REMOTE NUMBER                 R4
         LH    WA,RCPROUT          PICK UP ROUTE CODE                R4
         LTR   WA,WA               REMOTE ROUTE ZERO?          @OZ26056
         BZ    MCSRFCMB            THROW AWAY MESSAGE          @OZ26056
         CH    WA,$NUMRJE          COMPARE WITH MAXIMUM ROUTING      R4
         BH    MCSRFCMB            IGNORE MESSAGE                    R4
         BCTR  WA,0                DOWN ONE                          R4
         MH    WA,=Y(RATTLE)       MULTIPLY BY RATTLE                R4
         AL    WA,$RATABLE         POINT TO RAT ELEMENT              R4
         USING RATDSECT,WA                                           R4
         L     WF,RATRDCT          POINT TO REMOTE DCT (READER)      R4
         USING DCTDSECT,WF                                           R4
         EJECT                                                       R4
***********************************************************************
*                                                                     *
*        DETECT NEED TO DO MESSAGE SPOOLING                           *
*          1) IF REMOTE NOT SIGNED ON                                 *
*          2) IF REMOTE CONSOLE NON-OPERATIONAL OR NON-EXISTENT       *
*          3) IF NON-MULTI-LEAVING REMOTE                             *
*          4) IF LINE DCT MSG COUNT AT MAXIMUM                        *
*          5) IF LINE DCT INACTIVE                                    *
*          6) IF LINE DCT BUFFER NOT BSC (E.G., SNA BUFFER)           *
*                                                                     *
***********************************************************************
         L     WE,RATLDCT          POINT TO LINE DCT                 R4
         LTR   WE,WE               IS RMT SIGNED ON                  R4
         BZ    MCOSPOOL            GO SPOOL IF NOT                   R4
         CLM   WF,7,MDCTDCT+1-DCTDSECT(WE) LINE'S ACTIVE RMT   @OZ31398
         BNE   MCOSPOOL            NO,SPOOL                    @OZ31398
         TM    RATCONF,RATCONFC+RATCONFO TEST CONSOLE FLAGS          R4
         BNO   MCOSPOOL            GO SPOOL IF NOT                   R4
         TM    MDCTFMT,DCTPROG     TEST DATA FORMAT                  R4
         BZ    MCOSPOOL            GO SPOOL IF NOT MULTI-LEAVING     R4
         CLC   MDCTCMCT-DCTDSECT(,WE),$MAXCMCT TEST MESSAGE COUNT    R4
         BNL   MCOSPOOL            GO SPOOL IF AT LIMIT              R4
         TM    DCTSTAT-DCTDSECT(WE),DCTINUSE IS LINE DCT ACTIVE      R4
         BZ    MCOSPOOL            GO IF NOT                         R4
*              THIS LINE DELETED BY APAR NUMBER                @OZ32567
*              THIS LINE DELETED BY APAR NUMBER                @OZ32567
         TM    DCTFLAGS-DCTDSECT(WE),DCTRSTRT LINE RESTART...  @OZ32567
         BO    MCOSPOOL            YES, GO SPOOL               @OZ32567
         TM    MDCTSTAT-DCTDSECT(WE),DCTSOFF SIGNING OFF...    @OZ32567
         BO    MCOSPOOL            YES, GO SPOOL               @OZ32567
         L     R1,DCTBUFAD-DCTDSECT(,WE) POINT TO LINE BUFFER        R4
         TM    MSEQTYPE-BUFDSECT(R1),MBSCSEQ+MCPUSEQ IS REMOTE ACTIVER4
         BNO   MCOSPOOL            GO SPOOL IF NOT                   R4
***********************************************************************
*                                                                     *
*        HANDLE DIRECT TRANSMISSIONS TO REMOTE WORKSTATION - OPEN     *
*                                                                     *
***********************************************************************
         BAL   LINK,MCSORC         PREPARE CONSOLE FOR OUTPUT        R4
         DROP  WF                                                    R4
         USING DCTDSECT,WD         LAST DCT FOR REMOTE               R4
         MVI   RCPRCB,X'91'        SET FOR REMOTE OUTPUT             R4
         MVI   RCPMAXLR,120        INDICATE MAXIMUM RECORD 120       R4
         $EXTP OPEN,(R1)           OPEN CONSOLE                      R4
         EJECT                                                       R4
***********************************************************************
*                                                                     *
*        PUT MESSAGES TO REMOTE CONSOLE                               *
*                                                                     *
***********************************************************************
MCSTRL   LA    WF,CMBTIME          POINT TO TIME STAMP               R4
         SLR   R0,R0               SET                               R4
         IC    R0,CMBML            MESSAGE LENGTH ASSUMING TS REQ'D  R4
         TM    RATCONF,RATCONFT    DISPLAY TS                        R4
         BO    MCSTRT              SKIP NEXT IF YES                  R4
         LA    R1,CMBJOBID-CMBTIME GET DELTA                         R4
         ALR   WF,R1               ADJUST ORIGIN                     R4
         SLR   R0,R1               AND LENGTH TO DISPLAY JOB ID      R4
         TM    RATCONF,RATCONFJ    DISPLAY JOB ID                    R4
         BO    MCSTRT              SKIP NEXT IF YES                  R4
         LA    R1,CMBMID-CMBJOBID  GET DELTA                         R4
         ALR   WF,R1               ADJUST ORIGIN                     R4
         SLR   R0,R1               AND LENGTH TO DISPLAY JOB ID      R4
MCSTRT   ST    WF,RCPCCW           SET MESSAGE ADDRESS IN PARM LIST  R4
         ST    R0,RCPCCW+4         SET LENGTH IN LIST                R4
         LA    R1,RCPDCT           POINT TO DCT                      R4
         $EXTP PUT,(R1),RCPCCW     WRITE TO REMOTE CONSOLE           R4
         TM    RCPTSTAT,DCTPBUF    DID WRITE GO                      R4
         BZ    MCSTRTE             EXIT IF NOT                       R4
         MVC   CMBCMB-CMB(,WB),CMBCMB  REMOVE FROM CHAIN             R4
         $FRECMB CMB=(WC)          FREE CMB                          R4
         SLR   R1,R1               ZERO R1                           R4
         IC    R1,MDCTCMCT-DCTDSECT(,WE) INCREMENT                   R4
         LA    R1,1(,R1)           LINE DCT CONSOLE MESSAGE          R4
         STC   R1,MDCTCMCT-DCTDSECT(,WE) COUNT                       R4
         CLC   MDCTCMCT-DCTDSECT(,WE),$MAXCMCT  TEST LIMIT           R4
         BNL   MCSTRC              CLOSE THE CONSOLE IF NOT BELOW    R4
         EJECT                                                       R4
***********************************************************************
*                                                                     *
*        SCAN FOR CMBS FOR THIS REMOTE                                *
*                                                                     *
***********************************************************************
         BAL   LINK,MCCMBSUB       CALL CMB SCAN SUBROUTINE         R41
         LTR   WC,WC               WAS ANOTHER QUALIFYING CMB FOUND R41
         BNZ   MCSTRL              BRANCH IF YES TO PUT MSG         R41
***********************************************************************
*                                                                     *
*        CLOSE FOR NORMAL END OF CMBS FOR A GIVEN REMOTE              *
*                                                                     *
***********************************************************************
MCSTRC   LA    R1,RCPDCT           POINT TO DCT                      R4
         $EXTP CLOSE,(R1)          CLOSE CONSOLE                     R4
         XC    MDCTDCT+1(3),MDCTDCT+1 BREAK AWAY FROM REMOTE DCTS    R4
         B     MCS                 LOOK FOR WORK                     R4
***********************************************************************
*                                                                     *
*        CLOSE FOR TOO MANY MESSAGES FOR REMOTE                       *
*                                                                     *
***********************************************************************
MCSTRTE  MVC   MDCTCMCT-DCTDSECT(,WE),$MAXCMCT  SET COUNT TO LIMIT   R4
         LA    R1,RCPDCT           POINT TO DCT                      R4
         $EXTP CLOSE,(R1)          CLOSE CONSOLE                     R4
         XC    MDCTDCT+1(3),MDCTDCT+1 BREAK AWAY FROM REMOTE DCTS    R4
         DROP  WA                                                    R4
         DROP  WD                                                    R4
***********************************************************************
*                                                                     *
*        FALL THROUGH TO MESSAGE SPOOLING ROUTINE                     *
*                                                                     *
***********************************************************************
         TITLE 'HASP REMOTE CONSOLE PROCESSOR - MESSAGE SPOOLING'    R4
***********************************************************************
*                                                                     *
*        REMOTE CONSOLE MESSAGE SPOOLING ROUTINE                      *
*                                                                     *
* REGISTERS UPON ENTRY                                                *
*                                                                     *
*        WC    = ADDRESS OF CONSOLE MESSAGE BUFFER                    *
*        WB    = ADDRESS OF PREVIOUS CMB ON QUEUE                     *
*        WA    = RAT ELEMENT ADDRESS                                  *
*                                                                     *
*                                                                     *
*        NOTE -- $MSPOOLQ CONTAINS THE ADDRESS OF A TABLE WITH A      *
*        3-BYTE ENTRY FOR EACH REMOTE.                                *
*              BYTE 0 - LAST BLOCK* PRINTED                           *
*              BYTE 1 - LAST BLOCK WRITTEN                            *
*              BYTE 2 - LAST BLOCK ALLOCATED                          *
*                                                                     *
*              * BLOCK - RELATIVE BLOCK NUMBER (FOR THIS REMOTE)      *
*                        TO BE ADDED TO REMOTE NO. TIMES NO. OF       *
*                        BLOCKS PER REMOTE ($SPOLMSG) TO COME UP      *
*                        WITH RELATIVE MSG SPOOL BLOCK NO.            *
*                                                                     *
*              BYTE 0 (LAST PRINTED) IS UPDATED BY HASPPRPU WHEN      *
*                   OUTPUTTING SPOOLED MESSAGES TO REMOTE.  ALSO      *
*                   UPDATED BY RCP WHEN NEXT TO BE ALLOCATED          *
*                   CATCHES UP WITH LAST PRINTED (IN WHICH CASE       *
*                   THE OLDEST BLOCK IN THE WRAP-AROUND FILE          *
*                   WILL BE OVERWRITTEN.)                             *
*                                                                     *
*              BYTE 1 (LAST WRITTEN) IS UPDATED BY RCP WHEN THE       *
*                   WRITE EXCP FOR THE BLOCK COMPLETES.               *
*                                                                     *
*              BYTE 2 (LAST ALLOCATED) IS UPDATED BY RCP WHEN A       *
*                   NEW BUFFER TO HOLD MESSAGES FOR THIS REMOTE       *
*                   BECOMES NECESSARY.                                *
*                                                                     *
***********************************************************************
         EJECT
         USING RATDSECT,WA         ADDRESSABILITY
MCOSPOOL DS    0H                  *
         CLI   $SPOLMSG,0          IF NO MSG SPOOL BUFFERS,          R4
         BE    MCSRFCMB             BR TO THROW AWAY MSG             R4
***********************************************************************
*                                                                     *
*        INVOKE MSG SPOOLING EXIT ROUTINE TO SEE IF FUNCTION          *
*        AVAILABLE -- +0 RETURN IF FUNCTION UNAVAILABLE (DOES         *
*        NOT POINT TO DUMMY EXIT) OR UNABLE TO GET EXCLUSIVE          *
*        CONTROL OF QUEUE.                                            *
*                                                                     *
***********************************************************************
         L     R15,RCPMSXIT        POINT TO WORK ROUTINE             R4
         BALR  R10,R15             ENTER MESSAGE SPOOLING            R4
         B     MCSN                EXIT IF BUSY             + 0      R4
         ST    WB,RCPMSHDR         SAVE CMB HEADER ADDRESS  + 4      R4
         SLR   WF,WF               ZERO REGISTER                     R4
         IC    WF,RCPROUT+1        GET REMOTE OFFSET           @OZ45379
         LR    JCT,WF              MULTIPLY IT
         ALR   JCT,WF               BY
         ALR   JCT,WF                THREE TO GENERATE
         AL    JCT,$MSPOOLQ           ADDR OF THIS RMT'S MSG QUEUE   R4
         MH    WF,RCPBFRS          THIS RMT'S REC0 = ROUTE*&SPOLMSG  R4
         ST    WA,RCPREGSV+32      SAVE ADDRESS OF RAT         @OZ46955
*              THIS LINE DELETED BY APAR NUMBER                @OZ46955
         DROP  WA
         L     WB,RCPMSB1          POINT TO FIRST BUFFER             R4
         ST    WB,RCPMSCB          SAVE FOR I/O COMPLETION CHECKING  R4
         USING BUFDSECT,WB                                           R4
         SLR   WA,WA               GET LAST ALLOCATED
         IC    WA,2(,JCT)           RECORD NUMBER
MCOSNBUF DS    0H                  INITIALIZE FOR NEW SPOOL BUFFER
         ST    WB,PCEBUFAD         STORE BUFFER ADDR IN DA DCT
         LA    WA,1(,WA)           ALLOCATE RECORD
         CH    WA,RCPBFRS          IS IT MORE THAN MAX FOR THIS RMT  R4
         BL    *+6                 SKIP IF NOT
         SLR   WA,WA               ALLOCATE RECORD ZERO
         STC   WA,2(,JCT)          UPDATE LAST ALLOCATED NUMBER
         CLM   WA,1,0(JCT)         LAST ALLOCATED EQUAL LAST PRINTED
         BNE   MCOS0TTR            BRANCH IF NOT
         LA    R0,1(,WA)           INCREASE
         CH    R0,RCPBFRS           LAST                             R4
         BL    *+6                   PRINTED
         SLR   R0,R0                  BY
         STC   R0,0(,JCT)              ONE
         CLM   WA,1,1(JCT)         LAST ALLOCATED EQUAL LAST WRITTEN
         BNE   MCOS0TTR            BRANCH IF NOT
         STC   R0,1(,JCT)          INCREASE LAST WRITTEN BY ONE
         EJECT
***********************************************************************
*                                                                     *
*        COMPUTE DISK ADDRESS OF ALLOCATED BLOCK                      *
*                                                                     *
***********************************************************************
MCOS0TTR LA    R15,0(WA,WF)        ADD REC0 NUMBER FOR THIS REMOTE
         SLR   R14,R14             ZERO FOR DIVIDE
         L     WE,$TEDADDR         GET NUMBER OF RECORDS/TRACK       R4
         LH    WE,TNRT-TEDDSECT(,WE) FROM FIRST TED                  R4
         DR    R14,WE              DIVIDE BY RECORDS/TRACK           R4
         L     R1,$DACKPT          ADD BASE TT                       R4
         AH    R15,2(,R1)           TO QUOTIENT                      R4
         SLL   R15,8               POSITION AS 0TT0
         LA    R14,1(R15,R14)      ADD REMAINDER +1 GIVING 0TTR
         ST    R14,PCESEEK         STORE 0TTR IN DA DCT
        $BFRBLD (WB)               INITIALIZE BUFFER IOB AND CCWS
         MVC   HDBKEY,=C'MSPOOL'   SET DATA KEY TO 'MSPOOL'
         LA    WD,HDBSTART         ADDRESSABILITY FOR
         USING LRCDSECT,WD          LRC MESSAGE HEADERS
         LH    WE,$BUFSIZE              MAXIMUM                      R4
         SH    WE,=Y(HDBSTART-BUFSTART)  DATA SPACE                  R4
MCOSPUTM DS    0H                  ATTEMPT TO PUT MESSAGE IN BUFFER R41
         USING RATDSECT,R14        RAT ADDRESSABILITY          @OZ46955
         L     LINK,RCPREGSV+32    RESTORE ADDR OF RAT         @OZ46955
         TM    RATCONF,RATCONFT    BRANCH IF TIME              @OZ42857
         BO    MCOSMVCX              STAMP IS DESIRED          @OZ42857
         LA    R15,CMBTIME         POINT TO TIME STAMP         @OZ42857
         SLR   R1,R1               FETCH ORIGINAL              @OZ42857
         IC    R1,CMBML              TEXT LENGTH               @OZ42857
         LA    R0,CMBJOBID-CMBTIME DELTA ASSUMING JOB ID       @OZ42857
         TM    RATCONF,RATCONFJ    BRANCH IF JOB ID            @OZ42857
         BO    *+8                   IS DESIRED                @OZ42857
         LA    R0,CMBMID-CMBTIME   DELTA IF NO JOB ID          @OZ42857
         ALR   R15,R0              ADJUST ORIGIN               @OZ42857
         SR    R1,R0               COMPUTE ADJUSTED LENGTH     @OZ56773
         BNP   MCOSMVCX            BRANCH IF INVALID           @OZ56773
         STC   R1,CMBML            SET NEW TEXT LENGTH         @OZ42857
         BCTR  R1,0                MACHINE LENGTH              @OZ42857
         EX    R1,MCOSMVCZ         SHIFT TEXT LEFT             @OZ42857
         DROP  R14                 KILL RAT ADDRESSABILITY     @OZ42857
MCOSMVCX DS    0H                                              @OZ42857
         L     R1,RCPMSHDR         POINT TO CMB HEADER               R4
         SLR   R15,R15             GET CMB'S
         IC    R15,CMBML           MESSAGE LENGTH                    R4
         LA    R0,LRCTEXT-LRCDSECT(,R15) ADD LENGTH OF LRC HEADER    R4
         SR    WE,R0               ALLOCATE SPACE                    R4
         BNP   MCOSWBUF            BR IF NO ROOM FOR THIS MESSAGE
         STC   R15,LRCTLENG        STORE TEXT LENGTH IN LRC
         BCTR  R15,0               DECREMENT BY 1 FOR MOVE     @OZ44971
         EX    R15,MCOSMVC         MOVE TEXT INTO BUFFER       @OZ44971
         MVI   LRCFLAG1,0          ZERO FLAGS IN LRC
         ALR   WD,R0               POINT TO NEXT LRC                 R4
         MVI   LRCTLENG,X'FF'      SET BUFFER TERMINATOR
         MVC   CMBCMB-CMB(,R1),CMBCMB REMOVE FROM QUEUE              R4
        $FRECMB CMB=(WC)           FREE THE CMB
         LR    R15,WB              SAVE BUFFER ADDRESS              R41
         L     WB,RCPMSHDR         LOAD CMB HEADER ADDRESS          R41
         BAL   LINK,MCCMBSUB       CALL CMB SCAN SUBROUTINE         R41
         ST    WB,RCPMSHDR         SAVE CMB HEADER ADDRESS          R41
         LR    WB,R15              RESET BUFFER ADDRESS             R41
         LTR   WC,WC               WAS ANOTHER QUALIFYING CMB FOUND R41
         BNZ   MCOSPUTM            YES--GO TO PUT MSG IN BUFFER     R41
         EJECT
***********************************************************************
*                                                                     *
*        WRITE BUFFER TO MESSAGE SPOOL FILE - UP TO THREE 4096        *
*        BYTE BLOCKS MAY BE FILLED AND WRITTEN (ASSUMING THERE        *
*        ARE THAT MANY MESSAGES QUEUED UP FOR THAT REMOTE) AT         *
*        A TIME.  BEFORE RETURNING TO MAINLINE CODE, THE MSG          *
*        SPOOLING EXIT ROUTINE ADDRESS (RCPMSXIT) IS SET UP TO        *
*        POINT TO ROUTINE WHICH CHECKS FOR MESSAGE SPOOLING           *
*        WRITE COMPLETIONS (WHEN ENTERED BY 'MCASYNC' AT BEGIN-       *
*        ING OF MAIN LOOP -- WHEN CALLED AT BEGINNING OF MSG          *
*        SPOOLING ROUTINE, IT MAKES +0 RETURN (BUSY)).                *
*                                                                     *
***********************************************************************
MCOSWBUF DS    0H                  WRITE BUFFER TO SPOOL SPACE
         MVI   PCEDEVTP,PCEDAWR    SET TO WRITE                      R4
         LA    R1,PCEDADCT         POINT TO DA DCT
        $EXCP  (R1)                START WRITE TO DISK
         AH    WB,RCPBFSZ          POINT TO NEXT BUFFER              R4
         LR    R0,WB               COMPUTE AMOUNT OF
         SL    R0,RCPMSB1           TOTAL BUFFER SPACE USED          R4
         CH    R0,=Y(3*4096)       COMPARE WITH MAX BUFFER SPACE
         BNL   MCOSTIOC            BRANCH IF ALL BUFFERS USED
         LTR   WC,WC               HAVE CMBS BEEN EXHAUSTED
         BNZ   MCOSNBUF            BRANCH IF NOT TO USE NEW BUFFER
MCOSTIOC ST    WB,RCPMSLBW         SAVE ADDRESS BEYOND LAST WRITTEN  R4
         LA    R15,MCOSXIT2        POINT TO EXIT ROUTINE             R4
         ST    R15,RCPMSXIT        SET EXIT ADDRESS                  R4
         ST    JCT,RCPMSCTL        SAVE LOCATION OF QUEUE CONTROL    R4
         STC   WA,RCPMSRN          SAVE LAST WRITTEN/ALLOCATED RECNO R4
         B     MCS                 CONTINUE PROCESSING               R4
         SPACE 10                                                   R41
MCOSMVC  MVC   LRCTEXT(*-*),CMBMSG *** EXECUTE ONLY ***             R41
MCOSMVCZ MVC   CMBMSG(*-*),0(R15)  *** EXECUTE ONLY ***        @OZ42857
         DROP  WD                                                   R41
         EJECT                                                      R41
***********************************************************************
*                                                                     *
*        MCCMBSUB - CMB SCAN SUBROUTINE                               *
*                                                                     *
*                   THIS IS AN INTERNAL SUBROUTINE CALLED TO SCAN     *
*              THE REMAINING CMBS, LOOKING FOR ANOTHER CMB DESTINED   *
*              FOR THE SAME REMOTE.  IT SKIPS OVER NON-QUALIFYING     *
*              CMBS RETURNING TO CALLER WITH A HIT OR AT END OF       *
*              CMB CHAIN.                                             *
*                                                                     *
*        INPUT REGS:                                                  *
*              WB - ADDRESS OF CMB HEADER                             *
*                                                                     *
*        OUTPUT REGS:                                                 *
*              WB - UPDATED ADDRESS OF CMB HEADER                     *
*              WC - ADDRESS OF QUALIFYING CMB (IF ANY)                *
*                 - ZERO (IF NO QUALIFYING CMB)                       *
*                                                                     *
*        REGS SAVED: R14 THRU WD (WB AND WC MAY BE CHANGED)           *
*                                                                     *
***********************************************************************
MCCMBSUB STM   LINK,WD,RCPREGSV    SAVE REGS                        R41
         LR    WC,WB               POINT TO CMB HEADER              R41
MCCLOOP  LR    WD,WC               UPDATE PREVIOUS CMB POINTER      R41
         L     WC,CMBCMB           POINT TO NEXT CMB                R41
         LTR   WC,WC               END OF CMB CHAIN                 R41
         BZ    MCCRTN              YES--RETURN                      R41
         IC    R2,CMBRMT           PICK UP REMOTE NUMBER            R41
         CLM   R2,1,RCPROUT+1      DO CMB REMOTE NUMBERS MATCH      R41
         BNE   MCCLOOP             BYPASS IF NOT                    R41
MCCRTN   LR    WB,WD               SET WB = CMB HEADER ADDRESS      R41
         STM   WB,WC,RCPREGSV+20   UPDATE WB AND WC IN SAVE AREA    R41
         LM    LINK,WD,RCPREGSV    RESTORE REGS                     R41
         BR    LINK                RETURN TO CALLER                 R41
         EJECT                                                       R4
***********************************************************************
*                                                                     *
*        CHECK MSG SPOOLING WRITE COMPLETION(S) EXIT ROUTINE          *
*                                                                     *
*              THIS EXIT ROUTINE WILL BE ENTERED REPEATEDLY           *
*        VIA 'MCASYNC' AT BEGINNING OF RCP MAIN LOOP UNTIL            *
*        ALL OUTSTANDING MESSAGE SPOOLING WRITES ARE COM-             *
*        PLETE (UP TO THREE MAY BE OUTSTANDING AT ONCE).  AT          *
*        THAT TIME, A PAGE RELEASE ON THE BUFFER SPACE USED           *
*        WILL BE DONE, THE EXIT ROUTINE ADDRESS (RCPMSXIT)            *
*        WILL BE CHANGED TO POINT TO THE NEXT EXIT AND AN             *
*        IMMEDIATE BRANCH INTO THAT EXIT+4 IS TAKEN.                  *
*                                                                     *
***********************************************************************
MCOSXIT2 B     0(,R10)             PREVENT NEW USE OF FUNCTION       R4
         L     WB,RCPMSCB          POINT TO BUFFER TO CHECK          R4
MCSMSCK  TM    BUFECBCC,X'7F'      I/O COMPLETE                      R4
         BZR   R10                 RETURN TO EXIT REQUESTOR          R4
MCOSTNXT AH    WB,RCPBFSZ          POINT TO NEXT BUFFER              R4
         ST    WB,RCPMSCB          SAVE IN CASE NOT COMPLETE         R4
         C     WB,RCPMSLBW         HAVE ALL BUFFERS BEEN TESTED      R4
         BL    MCSMSCK             PREPARE TO CHECK MORE             R4
         LA    R0,2048(,WB)        INCREASE BUFFER POINTER
         N     R0,=F'-4096'         TO NEXT PAGE BOUNDARY
         L     R1,RCPMSB1          POINT TO START OF BUFFER SPACE    R4
         SLR   R0,R1               COMPUTE LENGTH OF PAGES USED
        $PGSRVC RLSE,(R1),(R0)     RELEASE USED BUFFER PAGES         R4
         LA    R15,MCOSXIT3        POINT TO EXIT                     R4
         ST    R15,RCPMSXIT        SET EXIT                          R4
         B     MCOSXT3A            SKIP NSI                          R4
         EJECT                                                       R4
***********************************************************************
*                                                                     *
*        UPDATE MESSAGE SPOOL QUEUES (EXIT)                           *
*                                                                     *
*              THIS EXIT ROUTINE IS ENTERED DIRECTLY FROM             *
*        'MCOSXIT2' AND THEN (ONLY IF UNABLE TO GET CONTROL           *
*        OF JOB QUEUE) REPEATEDLY VIA 'MCASYNC' UNTIL ABLE            *
*        TO GET CONTROL OF JOB QUEUE.  IT UPDATES BYTE 1              *
*        (LAST BLOCK WRITTEN) OF THE APPROPRIATE 3-BYTE               *
*        REMOTE ENTRY IN THE $MSPOOLQ TABLE TO AGREE WITH             *
*        BYTE 2 (LAST BLOCK ALLOCATED).  THE LOGIC IS COMPLI-         *
*        CATED BECAUSE OF SHARED SPOOL -- NOTE THAT BYTE 1            *
*        MIGHT ALREADY HAVE BEEN UPDATED BY ANOTHER MEMBER            *
*        OF THE SHARED SPOOL WHICH IS ALSO WRITING TO THE             *
*        MESSAGE SPOOLING FILE.  UPON COMPLETION OF THIS              *
*        EXIT ROUTINE THE ADDRESS OF THE DUMMY MESSAGE                *
*        SPOOLING EXIT ROUTINE (MCOSXIT1) IS STORED IN                *
*        RCPMSXIT TO ENABLE USE OF THE MESSAGE SPOOLING               *
*        FUNCTION.                                                    *
*                                                                     *
***********************************************************************
MCOSXIT3 B     0(,R10)             REJECT NEW USE OF FUNCTION        R4
MCOSXT3A OI    RCPWF,RCPWFQX       ASSUME WE MUST WAIT               R4
         $QSUSE TYPE=TEST          DO WE HAVE JOB QUEUE              R4
         BNZR  R10                 RETURN                            R4
         NI    RCPWF,255-RCPWFQX   INDICATE NO NEED TO WAIT          R4
         L     WB,RCPMSCTL         POINT TO REMOTES QUEUE CONTROL    R4
         IC    WA,RCPMSRN          PICK UP LAST RECORD NUMBER FOR SYSR4
         CLC   1(1,WB),2(WB)       COMPARE LAST WRITTEN - ALLOCATED  R4
         BE    MCOSACMB            BRANCH IF EQUAL - NO POST
         BL    MCOSAND             BRANCH IF LAST WRITTEN IS LOW
         CLM   WA,1,1(WB)          IS NEW WRITTEN GREATER THAN OLD   R4
         BH    MCOSPOST            BRANCH IF YES - POST
         B     MCOSOR              GO TEST AGAINST LAST ALLOCATED
MCOSAND  CLM   WA,1,1(WB)          IS NEW WRITTEN GREATER THAN OLD   R4
         BNH   MCOSACMB            BRANCH IF NOT - NO POST
MCOSOR   CLM   WA,1,2(WB)          IS NEW WRITTEN LE LAST ALLOCATED  R4
         BH    MCOSACMB            BRANCH IF NOT - NO POST
MCOSPOST STC   WA,1(,WB)           QUEUE COMPLETED WRITES FOR PRINT  R4
         NI    MHASPECF+$EWBJOT,255-$EWFJOT  TELL LINE MANAGER
         OI    $AQSE,QSEPMLM       INDICATE CROSS-SYSTEM $POST
MCOSACMB LA    R15,MCOSXIT1        POINT TO FIRST EXIT               R4
         ST    R15,RCPMSXIT        SET EXIT                          R4
         OI    $MCONPCE,$MCONACT   SHOW OUTPUT ACTIVITY REQUIRED     R4
         BR    R10                 EXIT                              R4
         EJECT
***********************************************************************
*                                                                     *
*        DUMMY EXIT ROUTINE -- USED FOR BOTH MESSAGE SPOOLING         *
*                              AND SPOOL OUTPUT FUNCTIONS             *
*                                                                     *
*              THIS ROUTINE WHEN ENTERED VIA 'MCASYNC' (AT            *
*        MCOSXIT1+4) RETURNS IMMEDIATELY.  WHEN ENTERED FROM          *
*        BEGINNING OF MESSAGE SPOOLING ROUTINE (MCOSPOOL) OR          *
*        SPOOL OUTPUT ROUTINE (MCSSOA), IT MAKES A +4 RETURN          *
*        (UNLESS UNABLE TO OBTAIN EXCLUSIVE CONTROL OF THE JOB        *
*        QUEUE) INDICATING THAT THE MESSAGE SPOOLING FUNC-            *
*        TION (OR SPOOL OUTPUT FUNCTION) IS AVAILABLE FOR USE.        *
*                                                                     *
***********************************************************************
MCOSXIT1 B     SKIP1510            SKIP NEXT                         R4
         BR    R10                 RETURN TO ASYNRHRONOUS EXIT TESTERR4
SKIP1510 OI    RCPWF,RCPWFQO       ASSUME WE MUST WAIT               R4
         $QSUSE TYPE=TEST          WE HAVE JOB QUEUE                 R4
         BNZR  R10                 ERROR EXIT IF NOT                 R4
         NI    RCPWF,255-RCPWFQO   INDICATE NO NEED TO WAIT          R4
         B     4(,R10)             OK EXIT IF YES                    R4
         DROP  WB                                                    R4
         EJECT                                                       R4
***********************************************************************
*                                                                     *
*        FREE CMB                                                     *
*                                                                     *
***********************************************************************
MCSRFCMB MVC   CMBCMB-CMB(,WB),CMBCMB REMOVE CMB FROM QUEUE          R4
MCSFCMB  $FRECMB CMB=(WC)          FREE CMB                          R4
         LR    WC,WB               BACK UP TO PREVIOUS CMB           R4
         B     MCSN                LOOK AT NEXT CMB                  R4
         SPACE 10
***********************************************************************
*                                                                     *
*        REMOTE CONSOLE PROCESSOR INPUT PROCESSING ROUTINES           *
*                                                                     *
***********************************************************************
MCIN     DS    0H                                                    R4
         NI    $MCONPCE,255-($MCONACT+$MCONWAT) RESET STATUS FLAGS   R4
         TITLE 'HASP REMOTE CONSOLE PROCESSOR - RECEIVE TRANSMISSIONS'
***********************************************************************
*                                                                     *
*        HANDLE COMMAND AND MESSAGE INPUT FROM LINES                  *
*                                                                     *
***********************************************************************
         USING BUFDSECT,WA                                           R4
         USING DCTDSECT,WE                                           R4
MCINL    LA    WC,RCPIN            POINT TO FAKE CMB                 R4
         CLI   CMBFLAG,X'FF'       IS THERE A CURRENT RECORD         R4
         BNE   MCINP               PUT MESSAGE INTO PROPER PLACE     R4
         L     WA,$MCONMSG         POINT TO FIRST INPUT BUFFER       R4
         LTR   WA,WA               EMPTY                             R4
         BZ    MCINN               NO MORE INPUT                     R4
         LA    WB,$MCONMSG         POINT TO QUEUE HEAD               R4
MCIL     L     WE,BUFDCT           POINT TO LINE DCT                 R4
         LA    WE,0(,WE)           PURIFY ADDRESS                    R4
         LA    R1,TPBLCCAD         POINT TO BSC CHAIN FIELD          R4
         TM    MDCTTYPE,DCTPSNA    TEST FOR SNA RPL                  R4
         BZ    MCIL1               BR IF NOT                        R41
         USING RPLDSECT,WA         USE TEMPORARY RPL ADDRESSABILITY  R4
         LA    R1,RPLNEXT          USE RPL CHAIN FIELD               R4
MCIL1    DS    0H                                                   R41
         EJECT                                                      R41
***********************************************************************
*                                                                     *
*        INITIALIZE REMOTE CONSOLE DCT FOR INPUT                      *
*                                                                     *
***********************************************************************
MCIR     MVC   0(4,WB),0(R1)       REMOVE FROM QUEUE                 R4
         LA    R1,RCPDCT           GET ADDR OF CONSOLE DCT     @OZ47992
         PRINT OFF                 THIS SECTION DELETED BY     @OZ62776
*              THIS LINE DELETED BY APAR OZ62776               @OZ62776
*              THIS LINE DELETED BY APAR OZ62776               @OZ62776
*              THIS LINE DELETED BY APAR OZ62776               @OZ62776
*              THIS LINE DELETED BY APAR OZ62776               @OZ62776
*              THIS LINE DELETED BY APAR OZ62776               @OZ62776
*              THIS LINE DELETED BY APAR OZ62776               @OZ62776
         PRINT ON                  THIS SECTION DELETED BY     @OZ62776
         ST    WE,RCPDCTL          SET LINE DCT ADDRESS ...         R41
         ST    WA,RCPDCTBF          BUFFER ADDRESS AND ...          R41
         MVI   RCPTSTAT,0            AND STATUS FLAGS               R41
         TM    MDCTTYPE,DCTPSNA    IS THIS A VTAM LINE DCT           R4
         BNO   MCIML               CHECK FOR MULTI-LEAVING IF NOT    R4
         NI    RCPFMT,255-DCTPALTC-DCTPPRES RESET FLAGS        @OZ34411
         OC    RCPFMT(1),RPLFMTSV  RETRIEVE COMPRESSION INDICATOR    R4
         MVI   RCPTTYPE,DCTPLU1    MARK SNA TYPE CONSOLE DCT         R4
         MVI   RCPTSEL,FMHCNSLE    SET MEDIUM TO INBOUND CONSLE     R41
         L     R15,RPLICE          GET ADDRESS OF ICE                R4
         USING ICEDSECT,R15        TEMPORARY ICE ADDRESSABILITY      R4
         ST    R15,RCPICE          CHAIN ICE TO DCT                  R4
         ST    R1,ICERDCT           AND  DCT TO ICE                  R4
         DROP  R15,WA              RELEASE TEMPORARY BASE REGS       R4
         USING BUFDSECT,WA         ESTABLISH BUFFER ADDRESSABILITY   R4
         B     MCICO               CONTINUE OPEN ON COMMON FIELDS    R4
MCIML    TM    MSEQTYPE,MBSCSEQ+MCPUSEQ MULTI-LEAVING SEQUENCE       R4
         BNO   MCITRM              DISCARD IF NOT                    R4
         MVI   RCPTTYPE,DCTPCPU    BSC CPU TYPE CONSOLE DCT          R4
         MVI   RCPRCB,X'92'        SET REMOTE CONSOLE INPUT RCB      R4
         DROP  WA                                                    R4
         EJECT                                                      R41
***********************************************************************
*                                                                     *
*        READ RECORD FROM REMOTE WORKSTATION                          *
*                                                                     *
*              THIS LOGIC IS COMPLICATED BY THE FACT THAT IF          *
*        THIS IS A BSC BUFFER RTAM AUTOMATICALLY GIVES US AN          *
*        EOF RETURN AND IF THIS RECORD IS IMMEDIATELY FOLLOWED        *
*        IN THE BUFFER BY ANOTHER RCP RECORD IT ALSO REQUEUES         *
*        THE BUFFER ON THE $MCONMSG QUEUE.  THIS IS NOT DONE BY       *
*        THE RTAM SNA GET ROUTINE.  NOTE THAT IN THE EOF ROU-         *
*        TINE (MCINCLOS) FOR A BSC LINE WE IMMEDIATELY BRANCH         *
*        BACK TO 'MCINBEOF' (AND EVENTUALLY TO 'MCINP') TO PRO-       *
*        CESS THE RECORD.  NOTE ALSO THAT IF AN SNA LINE, BE-         *
*        FORE BRANCHING TO 'MCINP' TO PROCESS THE RECORD, WE          *
*        EITHER REQUEUE THE BUFFER ON THE $MCONMSG QUEUE (IF          *
*        THIS RECORD FOLLOWED BY ANOTHER) OR ISSUE A $EXTP            *
*        CLOSE (IF LAST RECORD IN THE BUFFER).                        *
*                                                                     *
***********************************************************************
MCICO    MVI   RCPMAXLR,L'CMBMSG   SET TO READ MAX CMD LENGTH       R41
         TM    DCTFLAGS,DCTRSTRT   LINE RESTART...             @OZ62776
         BZ    MCINGET             BRANCH IF NOT               @OZ62776
         SPACE 1                                               @OZ62776
MCINABCL TM    MDCTTYPE,DCTPSNA    TEST DEVICE TYPE            @OZ62776
         BZ    MCITRM              BRANCH IF NOT SNA           @OZ62776
         OI    RCPTSTAT,DCTEOF     SHOW CLOSE EOF REACHED      @OZ62776
         $EXTP CLOSE,(R1)          CLOSE REMOTE CONSOLE        @OZ62776
         B     MCITRM              DISCARD RECORD              @OZ62776
         SPACE 1                                               @OZ62776
MCINGET  LA    R1,RCPDCT           INSURE DCT ADDRESSABILITY        R41
         LA    WC,RCPIN            RELOAD PHONY CMB POINT           R41
         LA    R0,CMBMSG           POINT TO INPUT AREA               R4
         MVI   CMBMSG,C' '         MOVE BLANK TO CMBMSG        @OZ27001
         MVC   CMBMSG+1(L'CMBMSG-1),CMBMSG PROPAGATE BLKS      @OZ27001
         $EXTP GET,(R1),(R0)       READ COMMAND                      R4
         BZ    MCINABCL            BRANCH IF ERROR             @OZ62776
         BM    MCINCLOS            CLOSE IF EOF                     R41
         SPACE 1                                               @OZ62776
MCINBEOF LA    R1,CMBMSG+L'CMBMSG-1 POINT OT LAST CHARACTER         R41
         LA    R0,L'CMBMSG         GET MAX LENGTH                    R4
MCINTB   CLI   0(R1),C' '          BLANK                             R4
         BNE   MCINEB              EXIT IF NOT                       R4
         BCTR  R1,0                BACK UP ONE                       R4
         BCT   R0,MCINTB           TEST FOR BLANK                    R4
         TM    MDCTTYPE,DCTPSNA    CHECK DEVICE TYPE                R41
         BO    MCINGET             BR IF SNA, TRY ANOTHER GET       R41
         B     MCIN                GO TRY NEXT BUFFER               R41
         EJECT                                                 @OZ62776
MCINEB   MVC   CMBFLAG(L'CMBFLAG+L'CMBLEVEL+L'CMBTYPE),MCINWIC SET HDR
         STC   R0,CMBML            SET LENGTH OF MESSAGE             R4
         MVC   CMBMSG(1),$RCOMCHR  SET COMMAND ID CHARACTER          R4
         MVC   CMBTO,$SYSID        SET OUR SYSTEM IDENTIFICATION     R4
         MVC   CMBFM,CMBTO         MAKE TO AND FROM THE SAME         R4
         L     R1,MDCTRAT          POINT TO RAT                      R4
         MVC   CMBRMT,RATCONRT+1-RATDSECT(R1) SET REMOTE NUMBER      R4
         XC    CMBOUT+1(L'CMBOUT-1),CMBOUT+1 ZERO REST               R4
         TM    MDCTTYPE,DCTPSNA    TEST DEVICE TYPE                 R41
         BNO   MCINP               BR IF NOT SNA -PROCESS CMB       R41
         L     R1,RPLRLEN-RPLDSECT(,WA)   GET RPL DATA LENGTH       R41
         LTR   R1,R1               CHECK FOR ADDITIONAL DATA        R41
         BNZ   MCISNREQ            BR IF MORE TO REQUEUE RPL        R41
         OI    RCPTSTAT,DCTEOF     SHOW CLOSE EOF WAS REACHED       R41
         EJECT
***********************************************************************
*                                                                     *
*        CLOSE REMOTE CONSOLE AND QUEUE MESSAGE                       *
*                                                                     *
***********************************************************************
         LA    R1,RCPDCT           RELOAD CONSOLE DCT ADDRESS       R41
         $EXTP CLOSE,(R1)         CLOSE CONSOLE                     R41
         B     MCINP               PROCESS CURRENT CMB              R41
         SPACE 5
***********************************************************************
*                                                                     *
*        CLOSE REMOTE CONSOLE - GET NEXT QUEUED BUFFER                *
*                                                                     *
***********************************************************************
MCINCLOS TM    MDCTTYPE,DCTPSNA    TEST DEVICE TYPE                 R41
         BZ    MCINBEOF            IGNORE EOF IF NOT SNA            R41
         $EXTP CLOSE,(R1)          CLOSE REMOTE CONSOLE             R41
         B     MCIN                GO PROCESS MORE INPUT            R41
         SPACE 5
***********************************************************************
*                                                                     *
*        RE-QUEUE INCOMPLETE SNA BUFFERS                              *
*                                                                     *
***********************************************************************
MCISNREQ MVC   RPLNEXT-RPLDSECT(4,WA),0(WB)  RE-QUEUE ...           R41
         ST    WA,0(,WB)                      INCOMPLETE RPL        R41
         DROP  WE                  RELEASE DCT ADDRESSABILTY        R41
***********************************************************************
*                                                                     *
*        QUEUE TO COMMAND PROCESSOR                                   *
*                                                                     *
***********************************************************************
MCINP    LA    WC,RCPINA           POINT TO FLAGS OF DUMMY CMB       R4
         BAL   R10,MCIPC           PUT COMMAND ON QUEUE              R4
         B     MCTEMW              WAIT IF NO GO            + 0      R4
MCITRM   MVI   CMBFLAG-CMB+RCPIN,X'FF' FREE AREA            + 4      R4
         B     MCIN                GET MORE INPUT                   R41
MCINWIC  DC    AL1(CMBFLAGC+CMBFLAGW+CMBFLAGR,$ALWAYS+$HI,0)         R4
MCINN    DS    0H                                                    R4
         EJECT                                                       R4
***********************************************************************
*                                                                     *
*        CHECK FOR OUTPUT ACTIVITY                                    *
*                                                                     *
*              $MCONACT FLAG IS TURNED ON WHEN OUTPUT IS QUEUED       *
*        TO RCP VIA $BUSYRQ OR WHEN ONE OF THE RCP OUTPUT FUNC-       *
*        TIONS PREVIOUSLY UNAVAILABLE BECOMES AVAILABLE.  IF ON       *
*        NOW, BRANCH TO BEGINNING OF MAIN LOOP (MCL).                 *
*                                                                     *
***********************************************************************
MCTEMW   DS    0H                  CHECK FOR OUTPUT ACTIVITY         R4
         TM    $MCONPCE,$MCONACT   IS THERE ANY ACTIVITY             R4
         BO    MCL                 LOOP IF YES                       R4
         TM    RCPWF,RCPWFQX+RCPWFQO NEED JOB QUEUE                  R4
         BNZ   MCWCKPTW            WAIT ON CHECKPOINT PROCESSOR      R4
         TM    RCPWF,RCPWFCMB      DO WE NEED CMB                    R4
         BZ    MCWWORK             WAIT ON WORK IF NOT               R4
         $WAIT CMB,INHIBIT=NO      WAIT ON CMB                       R4
         B     MCWTEST             TEST CONDITIONS                   R4
MCWCKPTW MVI   $MCONPCE,$MCONWAT   SET TO HURRY CHECKPOINT UP        R4
MCWWORK  $WAIT WORK,INHIBIT=NO     WAIT FOR WORK                     R4
MCWTEST  DS    0H                                                    R4
MCWTJQ   TM    RCPWF,RCPWFQO       OUTPUT WAITING ON JOB QUEUE       R4
         BZ    MCL                 LOOP                              R4
         $QSUSE TYPE=TEST          WE HAVE QUEUE NOW                 R4
         BNZ   MCL                 LOOP                              R4
         OI    $MCONPCE,$MCONACT   SHOW OUTPUT ACTIVITY              R4
         B     MCL                 LOOP                              R4
         EJECT                                                       R4
***********************************************************************
*                                                                     *
*        SUBROUTINE TO QUEUE COMMANDS TO COMMAND PROCESSOR            *
*                                                                     *
*        R0    = WORK                                                 *
*        R1    = WORK                                                 *
*        R2    = WORK                                                 *
*        WB    = WORK                                                 *
*        WC    = CMBFLAGS BYTE OF INPUT RECORD, WORK                  *
*        R10   = LINK                                                 *
*        LINK  = WORK                                                 *
*        R15   = WORK                                                 *
*                                                                     *
***********************************************************************
MCIPC    OC    CMBTYPE-(CMBFLAG-CMB)(L'CMBTYPE+L'CMBML),CMBTYPE-(CMBFLAC
               G-CMB)              VALIDATE LENGTH                   R4
         BZ    4(,R10)             RETURN IF ERROR                   R4
         OI    RCPWF,RCPWFCMB      ASSUME WAIT ON CMB                R4
         $GETCMB NUMCMB=2,COUNT=1  GET TWO CMBS                      R4
         BZR   R10                 RETURN IF NO CMBS                 R4
         NI    RCPWF,255-RCPWFCMB  INDICATE NO NEED TO WAIT          R4
         SLR   R15,R15             ZERO WORK                         R4
         IC    R15,CMBML-(CMBFLAG-CMB) PICK UP LENGTH OF TEXT        R4
         LA    R15,CMBMSG-CMBFLAG-1(,R15) MACHINE LENGTH OF CMB      R4
         MVC   CMBMSG+1-CMB(8,R1),=CL8' ' INSURE 9 TEXT CHARACTERS   R4
         EX    R15,MCIPDMVX        MOVE HEADER AND TEXT              R4
         LR    WC,R1               POINT TO CMB 1                    R4
         L     WB,CMBCMB           POINT TO CMB 2                    R4
         CLI   CMBTYPE,0           THIS FORMATTED CMB                R4
         BNZ   MCIPDSI             SKIP REPEAT                       R4
MCMSG    EQU   CMBJOBN-CMB         DEFINE START OF REPEAT MESSAGE    R4
         MVC   MCMSG(2,WB),MCMID   SET MESSAGE ID                    R4
         MVC   MCMSG+2(5,WB),=C'R    ' SET REMOTE ID MASK            R4
         IC    R15,CMBRMT          PICK UP REMOTE NUMBER (RESPONSE)  R4
MCIPDC   CVD   R15,RCPCCW          CONVERT TO                        R4
         UNPK  MCMSG+3(3,WB),RCPCCW+6(2) EBCDIC                      R4
         OI    MCMSG+5(WB),C'0'    FORCE SIGN                        R4
MCIPDS   CLI   MCMSG+3(WB),C'0'    FIRST CHARACTER ZERO              R4
         BNE   MCIPDM              MOVE TEXT PART                    R4
         MVC   MCMSG+3(3,WB),MCMSG+4(WB) SHIFT                       R4
         B     MCIPDS              LOOP                              R4
MCIPDM   IC    R15,CMBML           PICK UP LENGTH OF MESSAGE         R4
         BCTR  R15,0               GET MACHINE LENGTH                R4
         LA    R0,CMBL-(MCMSG+7)-1 GET MAX MACHINE LENGTH            R4
         CR    R15,R0              TOO BIG                           R4
         BNH   SKIP1660            SKIP                              R4
         LR    R15,R0              SET MAX                           R4
SKIP1660 EX    R15,MCIPDMVC        MOVE TEXT                         R4
         LA    R0,8(,R15)          UP TO FULL MESSAGE LENGTH         R4
         $WTO  (WB),(R0),JOB=NO,CMB=YES, DISPLAY COMMAND             R4C
               ROUTE=$LOG+$TP,CLASS=$NORMAL,PRI=$HI                  R4
MCIPDQ   L     R15,$SSVT           POINT TO SSVT                     R4
         USING SSVT,R15                                              R4
         L     R0,$SVCOMMQ         PICK UP QUEUE HEAD                R4
MCIPDQA  ST    R0,CMBCMB           PUT OLD BEHIND                    R4
         CS    R0,WC,$SVCOMMQ      QUEUE THE COMMAND                 R4
         BNZ   MCIPDQA             LOOP IF NOT QUEUED                R4
         DROP  R15                                                   R4
         L     R1,$COMMPCE         POINT TO COMMAND PROCESSOR PCE    R4
         $POST (R1),WORK           POST IT                           R4
         B     4(,R10)             RETURN                            R4
MCIPDMVC MVC   MCMSG+7(*-*,WB),CMBMSG *** EXECUTED INSTRUCTION ***   R4
MCIPDMVX MVC   CMBFLAG-CMB(*-*,R1),CMBFLAG-(CMBFLAG-CMB) * EXECUTED  R4
MCMID    $MSG  249                 REMOTE COMMAND MESSAGE IDENTIFIER R4
MCIPDSI  $FRECMB CMB=(WB)          FREE SECOND CMB                   R4
         B     MCIPDQ              QUEUE COMMAND                     R4
         EJECT                                                       R4
***********************************************************************
*                                                                     *
*        MCSORC - REMOTE CONSOLE DCT BUILDER                          *
*                                                                     *
*              THIS SUBROUTINE IS CALLED BY THE REMOTE CONSOLE        *
*        PROCESSOR, BEFORE TRANSMITTING OVER A LINE, TO BUILD         *
*        A REMOTE CONSOLE DCT IN THE RCP PCE WORK AREA.  ON           *
*        ENTRY, R7(WF) POINTS TO THE FIRST REMOTE DCT CHAINED         *
*        OFF THE LINE DCT.  ON EXIT, R7 IS ZERO AND R5(WD)            *
*        POINTS TO THE LAST REMOTE DCT CHAINED OFF OF THE LINE        *
*        DCT WHICH NOW POINTS TO THE NEWLY-BUILT REMOTE CONSOLE       *
*        DCT (ALSO POINTED TO BY R1).  R14(LINK) IS USED FOR          *
*        LINKAGE.                                                     *
*                                                                     *
***********************************************************************
MCSORC   DS    0H                                                    R4
         USING DCTDSECT,WF                                           R4
         XC    RCPDCTBF,RCPDCTBF   ZERO OUT BUFFER POINTER           R4
MCSORCL  LR    WD,WF               COPY DCT ADDRESS                  R4
         L     WF,MDCTDCT          POINT TO NEXT DCT                 R4
         LTR   WF,WF               END OF CHAIN                      R4
         BNZ   MCSORCL             LOOP                              R4
         DROP  WF                                                    R4
         USING DCTDSECT,WD                                           R4
         LA    R1,RCPDCT           POINT TO OUR DCT                  R4
         ST    R1,MDCTDCT          QUEUE TO END                      R4
         MVC   RCPDCTL,DCTDCB      DUPLICATE DCTDCB                  R4
         MVC   RCPTSTAT,MDCTSTAT     AND MDCTSTAT                    R4
         NI    RCPTSTAT,255-(DCTABORT+DCTPBUF)  RESET SOME FLAGS     R4
         MVC   RCPTTYPE,MDCTTYPE   DUPLICATE MDCTTYPE                R4
         MVC   RCPTLINE,MDCTLINE   DUPLICATE MDCTLINE                R4
         MVC   RCPTBFSZ,MDCTBFSZ   DUPLICATE MDCTBFSZ          @OZ50955
         BR    LINK                RETURN                            R4
         DROP  WD                                                    R4
         EJECT
***********************************************************************
*                                                                     *
*        MCASYNC - ACTIVATE CONCURRENT COMPLETION CHECKS              *
*                                                                     *
*              THIS SUBROUTINE IS CALLED FROM THE BEGINNING OF        *
*        THE REMOTE CONSOLE PROCESSOR MAIN LOOP (MCL).  IT IN         *
*        TURN ENTERS EACH OF THE FOUR EXIT ROUTINES--                 *
*              1) RCPMSXIT--MESSAGE SPOOLING                          *
*              2) RCPSOXIT--OUTPUT SPOOLING                           *
*              3) RCPSIXIT--INPUT SPOOLING                            *
*              4) RCPIOXIT--'SPECIAL INPUT' OUTPUT SPOOLING           *
*        (AT ENTRY POINT +4) TO FINISH ANY WORK IN PROGRESS.          *
*        IF NO WORK IS CURRENTLY IN PROGRESS FOR A GIVEN FUNC-        *
*        TION, THE EXIT ROUTINE ADDRESS POINTS TO DUMMY EXIT          *
*        ROUTINE WHICH WHEN ENTERED AT ENTRY+4, RETURNS IMMED-        *
*        IATELY.                                                      *
*                                                                     *
***********************************************************************
MCASYNC  ST    LINK,RCPXSAV        SAVE LINK REGISTER                R4
         LA    R1,RCPXIT           POINT TO FIRST                    R4
         LA    R0,L'RCPDMXCN/4     SET COUNT                         R4
MCASYNCL STM   R0,R1,RCPXSAV+4     SAVE                              R4
         L     R15,0(,R1)          POINT TO ROUTINE                  R4
         BAL   R10,4(,R15)         ENTER AS ASYNCHRONOUS ROUTINE     R4
         LM    R0,R1,RCPXSAV+4     RESTORE                           R4
         LA    R1,4(,R1)           UP TO NEXT                        R4
         BCT   R0,MCASYNCL         LOOP                              R4
         L     LINK,RCPXSAV        PICK UP RETURN                    R4
         BR    LINK                RETURN                            R4
         DROP  WC                                                    R4
         DROP  WG                                                    R4
         DROP  BASE2                                                 R4
         SPACE 2
***********************************************************************
*                                                                     *
*        INITIAL EXITS TO CONCURRENT OPERATION FUNCTIONS              *
*                                                                     *
***********************************************************************
MCSDMXCN DS    0F                                                    R4
         DC    A(MCOSXIT1)         INITIAL VALUE FOR RCPMSXIT        R4
         EJECT
         LTORG                                                       R4
         SPACE 2                                                     R4
         DROP  ,                   FORGET ALL ADDRESSABILITY         R4
         TITLE 'HASP VTAM API -- ACB OPEN / CLOSE SUBTASK'           R4
         SPACE 3                                                     R4
HASPVTAM $ENTRY BASE=R15,ENTRY=NO  ACB OPEN/CLOSE SUBTASK ENTRY      R4
         STM   R14,R12,12(R13)     SAVE CALLERS REGISTERS            R4
         LR    MBASE2,R15          ENTRY ADDRESS INTO BASE REG       R4
         USING HASPVTAM,MBASE2     SHOW SUBTASK ADDRESSABILITY       R4
         DROP  R15                 RELEASE TEMPORARY BASE REG        R4
         SPACE 1                                                     R4
         LA    R0,18*4             GET LENGTH VALUE OF SAVEAREA      R4
         GETMAIN R,LV=(0)          GETMAIN SAVE AREA                 R4
         SPACE 1                                                     R4
         ST    R13,4(,R1)          SAVE OLD SAVE AREA POINTER        R4
         ST    R1,8(,R13)          SAVE NEW SAVE AREA POINTER        R4
         LR    R13,R1              POINT TO NEW SAVE AREA            R4
         L     BASE1,=V(HASPNUC)   PROVIDE HCT ADDRESSABILITY        R4
         USING HCTDSECT,BASE1      SHOW HCT ADDRESSABILITY           R4
         SPACE 1                                                     R4
         SLR   R1,R1               ZERO SUBTASK                      R4
         ST    R1,$SNAECB           WORK ECB                         R4
         SPACE 1                                                     R4
         POST  $PSNAECB            VTAM SUBTASK IS AWAKE             R4
         SPACE 1                                                     R4
VACBWAIT DS    0H                                                    R4
         WAIT  1,ECB=$SNAECB       WAIT FOR WORK                     R4
         TM    $STATUS,$SYSEXIT    IS HASP TERMINATION REQUESTED     R4
         BZ    VACBWORK            BRANCH IF THIS IS WORK POST       R4
         EJECT                                                       R4
*                                                                    R4
*              SUBTASK EXIT HAS BEEN REQUESTED                       R4
*                                                                    R4
         SPACE 1                                                     R4
         LA    R0,18*4             GET LENGTH VALUE OF SAVEAREA      R4
         LR    R1,R13              HOLD CURRENT SAVE AREA POINTER    R4
         L     R13,4(R13)          RESTORE OLD SAVE AREA ADDRESS     R4
         SPACE 1                                                     R4
         FREEMAIN R,A=(1),LV=(0)   FREE SAVE AREA                    R4
         SPACE 1                                                     R4
         LM    R14,R12,12(R13)     RESTORE CALLERS REGISTERS         R4
         BR    R14                 RETURN TO CALLER                  R4
         SPACE 3                                                     R4
*                                                                    R4
*              CLEAR ECB AND GET LOGON DCT CHAIN                     R4
*                                                                    R4
         SPACE 1                                                     R4
VACBWORK SLR   R1,R1               GET ZERO VALUE FOR CLEARING       R4
         ST    R1,$SNAECB          CLEAR SUBTASK WORK ECB            R4
         SPACE 1                                               @OZ74159
VACBLOOP L     MDCT,$VLOGQUE       GET QUEUED LOGON DCT ADDR   @OZ74159
         USING DCTDSECT,MDCT       SHOW DCT ADDRESSABILITY           R4
         LTR   MDCT,MDCT           CHECK FOR ANY LOGON DCT THERE     R4
         BZ    VACBWAIT            IGNORE THIS POST IF NONE          R4
SKIP1720 L     R1,MDCTADCT         GET ADDR OF NEXT LOGON DCT  @OZ74159
         LA    R1,0(,R1)           PURIFY ADDRESS              @OZ74159
         CS    MDCT,R1,$VLOGQUE    DECHAIN LOGON DCT           @OZ74159
         BNE   SKIP1720             FROM WORK QUEUE            @OZ74159
         EJECT                                                       R4
*                                                                    R4
*              CHECK FOR OPEN OR CLOSE REQUEST                       R4
*                                                                    R4
         SPACE 1                                                     R4
VACBPROC TM    MDCTSTAT,DCTSINON   HAS ACB ALREADY BEEN OPENED       R4
         BO    VACBCLOS            BRANCH FOR CLOSE PROC IF YES      R4
         LA    R2,VXIDOPEN         GET OPEN ACB EVENT EXIT CODE      R4
         SPACE 1                                                     R4
*                                                                    R4
*              GETMAIN AREA AND BUILD ACB                            R4
*                                                                    R4
         SPACE 1                                                     R4
         LA    R0,ACBSIZE          GET LENGTH VALUE OF ACB           R4
         GETMAIN R,LV=(0)          GET AREA FOR ACB                  R4
         SPACE 1                                                     R4
         LR    MACB,R1             SAVE ACB ADDRESS AND              R4
         USING ACBDSECT,MACB         SHOW ACB ADDRESSABILITY         R4
         ST    MACB,DCTACB         STORE ACB ADDRESS IN DCT          R4
         MVI   DCTACB,X'80'        SHOW PARM LIST END INDIC          R4
         XC    ACBDSECT(ACBSIZE),ACBDSECT CLEAR ACB AREA             R4
         MVI   ACBID,ACBIDVAL      SET ACB  IDENT  FIELD             R4
         MVI   ACBSTYP,ACBSVTAM    SET ACB SUBTYPE FIELD             R4
         LA    R0,ACBSIZE          GET CONTROL BLOCK LENGTH          R4
         STH   R0,ACBLENG           AND STORE IN ACB                 R4
         LA    R0,ACBRTN           GET INVALID ACB EXIT ADDR   @OZ74456
         ST    R0,ACBINRTN          AND STORE INTO ACB FOR VTAM      R4
         MVC   ACBRTN,VACBINVL     PLACE EXIT CODE IN ACB      @OZ74456
         MVI   ACBDSOR2,ACBDORGA   SHOW DSORG ACB                    R4
         CLI   MDCTPSWD,C' '       CHECK LOGON DCT PASSWORD          R4
         BE    SKIP1730            BRANCH IF NONE SPECIFIED          R4
         LA    R0,MDCTPWDL         GET ADDR OF PASSWORD              R4
         ST    R0,ACBPASSW          AND STORE IN ACB                 R4
SKIP1730 LA    R0,VACBXLST         GET ADDR OF EXIT LIST             R4
         ST    R0,ACBEXLST          AND STORE IN ACB                 R4
         MVI   ACBDDNM,X'FF'       SHOW ACCESS METHOD VTAM           R4
         MVI   ACBOFLGS,ACBEXFG    INIT USER EXIT FLAG               R4
         LA    R0,MDCTAPNL         GET ADDR OF APPL NAME             R4
         ST    R0,ACBAPID           AND STORE IN ACB                 R4
         ST    MDCT,ACBLNDCT       STORE DCT ADDRESS IN ACB          R4
         EJECT                                                       R4
*                                                                    R4
*              OPEN ACB PROCESSING                                   R4
*                                                                    R4
         SPACE 1                                                     R4
         LA    R1,DCTACB           GET PARM LIST ADDR FOR OPEN       R4
         OPEN  MF=(E,(1))          ATTEMPT TO OPEN THE ACB           R4
         SPACE 1                                                     R4
         TM    ACBOFLGS,ACBOPEN    CHECK ACB OPEN FLAGS              R4
         BZ    VACBFAIL            BRANCH IF OPEN FAILED             R4
         OI    MDCTSTAT,DCTSINON   SHOW ACB HAS BEEN OPENED          R4
         SPACE 2                                                     R4
*                                                                    R4
*              ENABLE LOGON PROCESSING                               R4
*                                                                    R4
         SPACE 1                                                     R4
         L     R1,DCTBUFAD         GET RPL ADDR FROM DCT             R4
         USING RPLDSECT,R1         SHOW RPL ADDRESSABILITY           R4
         ST    MACB,RPLDACB        STORE ACB ADDR IN RPL             R4
         STCM  MDCT,7,RPLDCT+1     STORE DCT ADDR IN RPL             R4
         NI    RPLEXTDS,255-RPLBRANC SET NON BRANCH ENTRY REQUEST    R4
         MVI   RPLOPT1,RPLSEQ      INDICATE  SYNCHRONOUS  REQUEST    R4
         SPACE 1                                                     R4
VACBSETL LA    R0,RPLQUISE         INDICATE SETLOGON REQUEST CODE    R4
         STC   R0,RPLREQ             AND STORE IT IN RPL       @OZ18395
         L     R15,ACBINRTN        GET ADDR OF INTERFACE ROUTINE     R4
         BALR  R14,R15             LINK TO THE INTERFACE ROUTINE     R4
         SPACE 1                                                     R4
         SRA   R15,2               ADJUST SETLOGON COMPLETION CODE   R4
         BZ    VACBPOST            POST LINE MANAGER IF SUCCESSFUL   R4
         CLI   RPLRTNCD,USFRESSU   IS REQUEST RETRYABLE              R4
         BE    VACBSETL            RETRY REQUEST IF YES              R4
         OI    MDCTSTAT,DCTABORT   INDICATE SETLOGON REQ FAILED      R4
         ALR   R2,R15              GET SETLOGON EVENT COMPL CODE     R4
         B     VACBPOST            BRANCH TO POST LINE MANAGER       R4
         SPACE 2                                                     R4
*                                                                    R4
*              OPEN ACB FAILED EXIT FOR VTAM                         R4
*                                                                    R4
         SPACE 1                                                     R4
VACBINVL LA    R15,32              SET OPEN FAILED RETURN CODE       R4
         BR    R14                 RETURN TO CALLER                  R4
         EJECT                                                       R4
*                                                                    R4
*              CLOSE ACB PROCESSING                                  R4
*                                                                    R4
         SPACE 1                                                     R4
VACBCLOS TM    MDCTSTAT,DCTSOFF    IS ACB CLOSE REQUESTED            R4
         BNO   VACBLOOP             NO, SEARCH FOR MORE WORK   @OZ74159
         L     MACB,DCTACB         PICK UP ACB ADDRESS               R4
         LA    R2,VXIDCLOS         GET CLOSE ACB EVENT EXIT CODE     R4
         SPACE 1                                                     R4
         LA    R1,DCTACB           GET PARM LIST ADDR FOR CLOSE      R4
         CLOSE MF=(E,(1))          ATTEMPT TO CLOSE THE ACB          R4
         NI    MDCTSTAT,255-DCTSOFF-DCTSINON SHOW ACB CLOSED        R41
         SPACE 1                                                     R4
         SRL   R15,2               ADJUST CLOSE ACB COMPL CODE       R4
         TM    ACBOFLGS,ACBOPEN    TEST ACB OPEN FLAGS               R4
         BZ    VACBFREE            FREE ACB AREA IF SUCCESSFUL       R4
         SPACE 1                                                     R4
VACBFAIL SRL   R15,2               ADJUST OPEN/CLOSE RETURN CODE     R4
         ALR   R2,R15              GET OPEN/CLOSE ACB EVENT CODE     R4
         MVC   MDCTXERR,ACBERFLG   COPY ACB ERROR CODE TO DCT        R4
         OI    MDCTSTAT,DCTABORT   INDICATE ACB REQUEST FAILED       R4
         SPACE 2                                                     R4
*                                                                    R4
*              FREEMAIN ACB AREA                                     R4
*                                                                    R4
         SPACE 1                                                     R4
VACBFREE LA    R0,ACBSIZE          GET LENGTH OF ACB AREA            R4
         FREEMAIN R,A=(MACB),LV=(0) FREE THE ACB AREA                R4
         XC    DCTACB,DCTACB       INDICATE NO MORE ACB PRESENT      R4
         SPACE 3                                                     R4
*                                                                    R4
*              POST THE LINE MANAGER AND SEARCH FOR WORK             R4
*                                                                    R4
         SPACE 1                                                     R4
VACBPOST LR    WF,R13              SAVE REGISTER 13 ACROSS POST      R4
         BAL   ML,VDCTPOST         ENTER LINE MANAGER POST ROUTINE   R4
         LR    R13,WF              RESTORE SAVE AREA ADDRESS         R4
         B     VACBLOOP            GO SEARCH FOR MORE WORK     @OZ74159
         SPACE 1                                                     R4
         PUSH  PRINT               TURN PRINT OFF FOR          @OZ74159
         PRINT OFF                  SECTION DELETED BY APAR    @OZ74159
*              THIS LINE DELETED BY APAR OZ74159               @OZ74159
*              THIS LINE DELETED BY APAR OZ74159               @OZ74159
*              THIS LINE DELETED BY APAR OZ74159               @OZ74159
         POP   PRINT               RESET TO PRIOR PRINT OPT.   @OZ74159
         SPACE 2                                                     R4
         DROP  ,                   FORGET ALL ADDRESSABILITY         R4
         TITLE 'HASP VTAM API -- ACB EXIT LIST DEFINITION'           R4
***********************************************************************
*                                                                     *
*              COMMON VTAM ACB EXIT LIST DEFINITION                   *
*                                                                     *
***********************************************************************
         SPACE 2                                                     R4
VACBXLST EXLST AM=VTAM,            COMMON ACB EXIT LIST DEFINITION     C
               LOGON=VEXITLGN,LOSTERM=VEXITLST,TPEND=VEXITTND,         C
               RELREQ=VEXITRLR,SCIP=VEXITSCP                         R4
         TITLE 'HASP VTAM API -- LOGON EXIT ROUTINE'                 R4
***********************************************************************
*                                                                     *
*   VEXITLGN - VTAM API LOGON EXIT ROUTINE                            *
*                                                                     *
*                                                                     *
*   REGISTERS AT ENTRY                                                *
*                                                                     *
*        R1 =  ADDRESS OF PARAMETER LIST                              *
*              1ST WORD - ADDRESS OF ACB                              *
*              2ND WORD - ADDRESS OF TERMINALS SYMBOLIC NAME          *
*              3RD WORD - UNUSED                                      *
*              4TH WORD - LENGTH OF LOGON MESSAGE TEXT                *
*                                                                     *
***********************************************************************
         SPACE 2                                                     R4
         USING VEXITLGN,R15        EXIT ROUTINE INITIAL BASE         R4
VEXITLGN L     MBASE2,=A(HASPVTAM) GET COMMON BASE ADDRESS           R4
         L     BASE1,=V(HASPNUC)   PICK UP HCT ADDRESS               R4
         USING HASPVTAM,MBASE2     SHOW PERMANENT ADDRESSABILITY     R4
         USING HCTDSECT,BASE1      SHOW HCT ADDRESSABILITY           R4
         DROP  R15                 RELEASE TEMPORARY BASE REG        R4
         L     MACB,0(,R1)         GET ADDRESS OF ACB                R4
         USING ACBDSECT,MACB         AND SHOW ADDRESSABLE            R4
         L     MDCT,ACBLNDCT       GET LOGON DCT ADDRESS             R4
         USING DCTDSECT,MDCT         AND SHOW ADDRESSABLE            R4
         SPACE 1                                                     R4
         TM    MDCTSTAT,DCTSINON+DCTSOFF CHECK FOR ACB AVAILABLE     R4
         BNMR  R14                 LET CLOSE REJECT LOGON IF NOT     R4
         TM    DCTSTAT,DCTDRAIN    TEST LOGON DCT STATUS             R4
         BOR   R14                 REJECT LOGON IF DRAINING          R4
         SPACE 1                                                     R4
         L     R2,MDCTLOGN         GET LOGON COUNT FROM DCT          R4
         LA    R2,1(,R2)           INCREMENT COUNT OF LOGONS         R4
         ST    R2,MDCTLOGN         STORE UPDATED COUNT IN DCT        R4
         SPACE 1                                                     R4
         LR    ML,R14              SAVE RETURN ADDRESS               R4
         L     R2,4(,R1)           SAVE ADDR OF SYMBOLIC NAME        R4
         SPACE 1                                                     R4
         L     MICE,$ICETRAY       GET NEXT AVAILABLE ICE            R4
         USING ICEDSECT,MICE       SHOW ICE ADDRESSABILITY           R4
VEXITLIC LTR   MICE,MICE           CHECK FOR EMPTY ICE TRAY         R41
         BZ    VLOGFAIL            REJECT LOGON IF EMPTY             R4
         L     R0,ICEAPCHN         ATTEMPT TO REMOVE                R41
         CS    MICE,R0,$ICETRAY     ICE FROM TRAY                    R4
         BNE   VEXITLIC            RETRY IF FAILED                  R41
         SPACE 1                                                     R4
         XC    ICEDSECT(ICESIZE),ICEDSECT CLEAR ALL FIELDS IN ICE    R4
         SPACE 1                                                     R4
         ST    MDCT,ICEADCT        SAVE LOGON DCT ADDR IN ICE        R4
         MVC   ICESYMB,0(R2)       MOVE SYMBOLIC NAME TO ICE         R4
         L     R2,12(,R1)          GET LENGTH OF LOGON MSG           R4
         STH   R2,ICERULEN          AND STORE IN ICE                 R4
         SPACE 1                                                     R4
         LA    R2,VXIDLOGN         GET LOGON EXIT ROUT INDICATOR     R4
         B     VICEPOST            GO TO QUEUE ICE AND POST MLLM     R4
         EJECT                                                       R4
*                                                                    R4
*              NO ICE AVAILABLE - REJECT LOGON REQUEST               R4
*                                                                    R4
         SPACE 2                                                     R4
VLOGFAIL L     R1,MDCTNICE         GET LOGON FAILED FOR ICE COUNTER  R4
         LA    R1,1(,R1)           INCREMENT COUNTER                 R4
         ST    R1,MDCTNICE          AND STORE UPDATED VALUE          R4
         SPACE 1                                                     R4
         LA    R0,RPLSIZE+NIBSIZE  GET LENGTH OF REQ RPL             R4
         GETMAIN R,LV=(0)          GET AREA FOR CLOSE DEST RPL       R4
         LR    MBUF,R1             ALLOW RPL ADDRESSABILITY          R4
         USING RPLDSECT,MBUF       SHOW RPL ADDRESSABILITY           R4
         SPACE 1                                                     R4
         $BFRBLD (R1),TYPE=VTAM    INITIALIZE AREA AS VTAM BUF       R4
         SPACE 1                                                     R4
         ST    MACB,RPLDACB        STORE ACB ADDRESS IN RPL          R4
         MVI   RPLREQ,RPLCLOSE     SHOW CLSDST REQUEST TYPE         R41
         LA    R15,RPLBUFST        ESTABLISH ADDRESS OF NIB          R4
         USING NIBDSECT,R15        SHOW NIB ADDRESSABILITY           R4
         ST    R15,RPLARG          PUT NIB POINTER INTO RPL          R4
         MVI   RPLEXTDS,RPLNIB     INDICATE NIB POINTER SET         R41
         MVI   RPLOPT1,RPLSEQ      SHOW SYNCHRONOUS REQUEST          R4
         LA    R13,RPLSAVEA        ESTABLISH SAVEAREA POINTER        R4
         SPACE 1                                                     R4
         XC    NIBDSECT(NIBSIZE),NIBDSECT CLEAR NIB AREA             R4
         MVI   NIBID,NIBIDD        INITIALIZE NIB ID FIELD          R41
         MVI   NIBLEN,NIBLNIB      INITIALIZE NIB LENGTH FIELD      R41
         MVC   NIBMODE(8),=CL8'RECORD'  SHOW RECORD MODE IN NIB     R41
         MVI   NIBPROCD,PRORPLC    SHOW RPL PROC OPTION             R41
         MVC   NIBSYM,0(R2)        MOVE SYMBOLIC NAME TO NIB         R4
         SPACE 1                                                     R4
         DROP  R15                 RELEASE NIB ADDRESSABILITY        R4
         EJECT                                                       R4
VLOGCLOS LA    R0,RPLCLOSE         GET CLSDST REQUEST CODE           R4
         L     R15,ACBINRTN        GET ADDR OF INTERFACE ROUT        R4
         BALR  R14,R15             LINK TO THE INTERFACE ROUT        R4
         SPACE 1                                                     R4
         LTR   R15,R15             WAS REQUEST SUCCESSFUL            R4
         BZ    VLOGFREE            BRANCH TO FREE RPL IF YES         R4
         CLI   RPLRTNCD,USFRESSU   IS REQUEST RETRYABLE              R4
         BE    VLOGCLOS            BRANCH TO RETRY REQUEST IF YES    R4
         SPACE 3                                                     R4
VLOGFREE DS    0H                                                   R41
         LR    R2,R1               SAVE R1 ACROSS $$WTO             R41
         MVC   0(MXSSMSGL,R1),MXSSMSG MOVE MESSAGE TO WORK AREA     R41
         $$WTO (R1)                ISSUE 'MAX SESS EXCEEDED' MSG    R41
         SPACE 1                                                    R41
         LR    R1,R2               RESTORE R1 FOR FREEMAIN          R41
         LA    R0,RPLSIZE+NIBSIZE  GET LENGTH OF RPL/NIB/MSG AREA   R41
         FREEMAIN R,A=(1),LV=(0)   FREE THE AREA                    R41
         SPACE 1                                                    R41
         B     VMLMPOST            GO POST THE LINE MANAGER         R41
         BR    ML                  RETURN TO VTAM                   R41
         SPACE 2                                                    R41
         $MID  206                 MESSAGE 206 ID                   R41
MXSSMSG  WTO   '&MID.LOGON FAILED -- MAXSESS EXCEEDED',MF=L         R41
MXSSMSGL EQU   *-MXSSMSG           LENGTH OF MASS SESS MSG          R41
         SPACE 3                                                    R41
         DROP  ,                   FORGET ALL ADDRESSABILITY         R4
         TITLE 'HASP VTAM API -- LOSTERM EXIT ROUTINE'               R4
***********************************************************************
*                                                                     *
*   VEXITLST - VTAM API LOSTERM EXIT ROUTINE                          *
*                                                                     *
*                                                                     *
*        R1 =  ADDRESS OF PARAMETER LIST                              *
*                                                                     *
*              1ST WORD - ADDRESS OF ACB                              *
*              2ND WORD - CID OF TERMINAL                             *
*              3RD WORD - USERFLD/ICE ADDR                            *
*              4TH WORD - REASON CODE                                 *
*                          0 NOT APPLICABLE                           *
*                          4 NOT APPLICABLE                           *
*                          8 RESERVED                                 *
*                         12 LU RESTART FAILED                        *
*                         16 LU RESTART SUCCESSFUL                    *
*                         20 LU UNCOND TERMINATE SELF                 *
*                         24 LU RESTART IN PROCESS                    *
*                         28 RESERVED                                 *
*                         32 LU CONDIT TERMINATE SELF                 *
*                         36 LU BUFFER LIMIT EXCEEDED                 *
*                                                                     *
***********************************************************************
         SPACE 2                                                     R4
         USING VEXITLST,R15        EXIT ROUTINE INITIAL BASE         R4
VEXITLST L     MBASE2,=A(HASPVTAM) GET COMMON BASE ADDRESS           R4
         L     BASE1,=V(HASPNUC)   GET HCT ADDRESS                   R4
         USING HASPVTAM,MBASE2     SHOW PERMANENT ADDRESSABILITY     R4
         USING HCTDSECT,BASE1      SHOW HCT ADDRESSABILITY           R4
         DROP  R15                 RELEASE TEMPORARY BASE REG        R4
         L     MACB,0(,R1)         GET ADDRESS OF ACB                R4
         USING ACBDSECT,MACB         AND SHOW ADDRESSABLE            R4
         L     MDCT,ACBLNDCT       GET LOGON DCT ADDRESS             R4
         USING DCTDSECT,MDCT         AND SHOW ADDRESSABLE            R4
         TM    MDCTSTAT,DCTSINON+DCTSOFF CHECK FOR ACB AVAILABLE     R4
         BNMR  R14                 LET CLOSE HANDLE IT IF NOT        R4
         LR    ML,R14              SAVE RETURN ADDRESS               R4
         L     MICE,8(,R1)         GET ADDRESS OF ICE                R4
         USING ICEDSECT,MICE       SHOW ICE ADDRESSABILITY           R4
         L     R2,12(,R1)          GET LOSTERM REASON CODE           R4
         SRL   R2,2                 DIVIDE BY 4 TO GET INDEX        R41
         LA    R2,VXIDLOST(,R2)      ADD LOSTERM EXIT ROUTINE IDENT R41
         B     VICEPOST               AND POST ACTION TO LINE MGR   R41
         SPACE 2                                                     R4
         DROP  ,                   FORGET ALL ADDRESSABILITY         R4
         TITLE 'HASP VTAM API -- TPEND EXIT ROUTINE'                 R4
***********************************************************************
*                                                                     *
*   VEXITTND - VTAM API TPEND EXIT ROUTINE                            *
*                                                                     *
*                                                                     *
*        R1 =  ADDRESS OF PARAMETER LIST                              *
*                                                                     *
*              1ST WORD - ADDRESS OF ACB                              *
*              2ND WORD - REASON CODE                                 *
*                         0 ORDERLY SHUTDOWN - OPER COMMAND           *
*                         4 QUICK   SHUTDOWN - OPER COMMAND           *
*                         8 VTAM IS ABNORMALLY TERMINATING            *
*                                                                     *
***********************************************************************
         SPACE 2                                                     R4
         USING VEXITTND,R15        EXIT ROUTINE INITIAL BASE         R4
VEXITTND L     MBASE2,=A(HASPVTAM) GET COMMON BASE ADDRESS           R4
         L     BASE1,=V(HASPNUC)   GET HCT ADDRESS                   R4
         USING HASPVTAM,MBASE2     SHOW PERMANENT ADDRESSABILITY     R4
         USING HCTDSECT,BASE1      SHOW HCT ADDRESSABILITY           R4
         DROP  R15                 RELEASE TEMPORARY BASE REG        R4
         L     MACB,0(,R1)         GET ADDRESS OF ACB                R4
         USING ACBDSECT,MACB         AND SHOW ADDRESSABLE            R4
         L     MDCT,ACBLNDCT       GET LOGON DCT ADDRESS             R4
         USING DCTDSECT,MDCT         AND SHOW ADDRESSABLE            R4
         TM    MDCTSTAT,DCTSINON+DCTSOFF CHECK FOR ACB AVAILABLE     R4
         BNMR  R14                 LET CLOSE HANDLE IT IF NOT        R4
         LR    ML,R14              SAVE RETURN ADDRESS               R4
         L     R2,4(,R1)           GET TPEND REASON CODE             R4
         SRL   R2,2                ADJUST REASON CODE FOR EXIT IDENT R4
         LA    R2,VXIDTPND(,R2)    ADD TPEND EXIT ROUTINE IDENTIFIER R4
         B     VDCTPOST             AND POST ACTION TO LINE MANAGER  R4
         SPACE 2                                                     R4
         DROP  ,                   FORGET ALL ADDRESSABILITY         R4
         TITLE 'HASP VTAM API -- SCIP EXIT ROUTINE'                  R4
***********************************************************************
*                                                                     *
*   VEXITSCP - VTAM API SCIP EXIT ROUTINE                             *
*                                                                     *
*                                                                     *
*        R1 =  ADDRESS OF PARAMETER LIST                              *
*                                                                     *
*              1ST WORD - ADDRESS OF ACB                              *
*              2ND WORD - CID OF TERMINAL                             *
*              3RD WORD - USERFLD/ICE ADDR                            *
*              4TH WORD - RESERVED                                    *
*              5TH WORD - ADDRESS OF R/0 RPL                          *
*                                                                     *
***********************************************************************
         SPACE 2                                                     R4
         USING VEXITSCP,R15        EXIT ROUTINE INITIAL BASE         R4
VEXITSCP L     MBASE2,=A(HASPVTAM) GET COMMON BASE ADDRESS           R4
         L     BASE1,=V(HASPNUC)   GET HCT ADDRESS                   R4
         USING HASPVTAM,MBASE2     SHOW PERMANENT ADDRESSABILITY     R4
         USING HCTDSECT,BASE1      SHOW HCT ADDRESSABILITY           R4
         DROP  R15                 RELEASE TEMPORARY BASE REG        R4
         L     MACB,0(,R1)         GET ADDRESS OF ACB                R4
         USING ACBDSECT,MACB         AND SHOW ADDRESSABLE            R4
         L     MDCT,ACBLNDCT       GET LOGON DCT ADDRESS             R4
         USING DCTDSECT,MDCT         AND SHOW ADDRESSABLE            R4
         TM    MDCTSTAT,DCTSINON+DCTSOFF CHECK FOR ACB AVAILABLE     R4
         BNMR  R14                 LET CLOSE HANDLE IT IF NOT        R4
         L     MICE,8(,R1)         GET ADDRESS OF ICE FOR POST       R4
         L     MBUF,16(,R1)        GET ADDRESS OF R/O RPL            R4
         USING RPLDSECT,MBUF       SHOW RPL ADDRESSABILITY           R4
         TM    RPLCNTSC,RPLRQR     CHECK FOR RQR RECEIVED            R4
         BNOR  R14                 IGNORE REQUEST IF NOT RQR         R4
         LR    ML,R14              SAVE RETURN ADDRESS               R4
         LA    R2,VXIDSCIP         GET SCIP EXIT ROUTINE IDENTIFIER  R4
         B     VICEPOST             AND POST ACTION TO LINE MANAGER  R4
         SPACE 2                                                     R4
         DROP  ,                   FORGET ALL ADDRESSABILITY         R4
         TITLE 'HASP VTAM API -- RELREQ EXIT ROUTINE'                R4
***********************************************************************
*                                                                     *
*   VEXITRLR - VTAM API RELREQ EXIT ROUTINE                           *
*                                                                     *
*                                                                     *
*        R1 =  ADDRESS OF PARAMETER LIST                              *
*                                                                     *
*              1ST WORD - ADDRESS OF ACB                              *
*              2ND WORD - ADDRESS OF TERMINALS SYMBOLIC NAME          *
*                                                                     *
***********************************************************************
         SPACE 2                                                     R4
         USING VEXITRLR,R15        EXIT ROUTINE INITIAL BASE         R4
VEXITRLR L     MBASE2,=A(HASPVTAM) GET COMMON BASE ADDRESS           R4
         L     BASE1,=V(HASPNUC)   GET HCT ADDRESS                   R4
         USING HASPVTAM,MBASE2     SHOW PERMANENT ADDRESSABILITY     R4
         USING HCTDSECT,BASE1      SHOW HCT ADDRESSABILITY           R4
         DROP  R15                 RELEASE TEMPORARY BASE REG        R4
         L     MACB,0(,R1)         GET ADDRESS OF ACB                R4
         USING ACBDSECT,MACB         AND SHOW ADDRESSABLE            R4
         L     MDCT,ACBLNDCT       GET LOGON DCT ADDRESS             R4
         USING DCTDSECT,MDCT         AND SHOW ADDRESSABLE            R4
         TM    MDCTSTAT,DCTSINON+DCTSOFF CHECK FOR ACB AVAILABLE     R4
         BNMR  R14                 LET CLOSE HANDLE IT IF NOT        R4
         L     R2,4(,R1)           GET ADDRESS OF SYMBOLIC NAME      R4
         L     MICE,MDCTICE        GET ADDR OF FIRST LOGGED ON ICE   R4
         USING ICEDSECT,MICE       SHOW ICE ADDRESSABILITY           R4
         SPACE 1                                                     R4
VRLRSRCH CLC   ICESYMB,0(R2)       CHECK FOR SYMBOLIC NAME MATCH     R4
         BNE   SKIP1750            BRANCH IF NOT REQ ICE FOUND       R4
         LA    R2,VXIDRLRQ         GET RELREQ EXIT ROUTINE IDENT     R4
         LR    ML,R14              SET UP RETURN ADDRESS             R4
         B     VICEPOST            POST ACTION TO LINE MANAGER       R4
SKIP1750 L     MICE,ICEAPCHN       GET ADDR OF NEXT LOGGED ON ICE    R4
         LTR   MICE,MICE           CHECK FOR ANY MORE ICE THERE      R4
         BNZ   VRLRSRCH            EXAMINE NEXT ICE IF PRESENT       R4
         BR    R14                 ELSE RETURN TO VTAM               R4
         SPACE 2                                                     R4
         DROP  ,                   FORGET ALL ADDRESSABILITY         R4
         TITLE 'HASP VTAM API -- RPL REQUEST COMPLETION EXIT ROUTINE'
***********************************************************************
*                                                                     *
*   VEXITRPL - VTAM API REQUEST COMPLETION EXIT ROUTINE               *
*                                                                     *
*                                                                     *
*        R1 =  ADDRESS OF RPL                                         *
*                                                                     *
***********************************************************************
         SPACE 2                                                     R4
         USING RPLDSECT,R1         GET BUFFER ADDRESSABILITY         R4
         USING VEXITRPL,R15        EXIT ROUTINE INITIAL BASE         R4
         SPACE 1                                                     R4
VEXITRPL DS    0H                  RPL REQUEST COMPLETE EXIT ROUTINE R4
         L     MBASE2,=A(HASPVTAM) GET COMMON BASE ADDRESS           R4
         DROP  R15                 RELEASE TEMPORARY BASE REG        R4
         USING HASPVTAM,MBASE2     SHOW PERMANENT ADDRESSABILITY     R4
         L     BASE1,=V(HASPNUC)   GET HCT ADDRESS                   R4
         USING HCTDSECT,BASE1      SHOW HCT ADDRESSABILITY           R4
         LR    WF,R14              SAVE RETURN ADDRESS               R4
         LR    ML,R14              SET  RETURN ADDRESS FOR VBUFPOST  R4
         SPACE 1                                                     R4
         TM    RPLSEQTP,VSEQSPEC   CHECK RPL SEQUENCE TYPE           R4
         BNZ   VBUFPOST            BRANCH IF SPECIAL SEQUENCE        R4
         TM    RPLSEQTP,VSEQSEND   CHECK RPL NORMAL SEQUENCE TYPE    R4
         BO    VRPLSEND            BRANCH IF SEND OR RESETSR-CA SEQ  R4
         L     MDCT,RPLDCT         GET ADDRESS OF LOGON DCT          R4
         TM    MDCTSTAT-DCTDSECT(MDCT),DCTABORT   ABORTING...  @OZ38130
         BOR   WF                  IF SO, RETURN TO VTAM       @OZ38130
         CLI   RPLRTNCD,USFXORDC   CHECK RECEIVE COMPLETION          R4
         BH    VRPLRQUE            BRANCH IF COMPLETED WITH ERROR    R4
         EJECT                                                       R4
*                                                                    R4
*              RECEIVE REQUEST COMPLETION HANDLING                   R4
*                                                                    R4
         SPACE 1                                                     R4
VRPLRAOK TM    RPLSRTYP,RPLRRESP   CHECK TYPE OF RECEIVE             R4
         BO    VRPLRANY            DON'T COUNT INBOUND RESPONSES     R4
         TM    RPLSRTYP,RPLDFASY   CHECK TYPE OF  RECEIVE REQUEST    R4
         BO    VRPLRANY            BRANCH IF EXPEDITED REQUEST @OZ57933
         SPACE 1                                                     R4
         USING ICEDSECT,MICE       ESTABLISH ICE ADDRESSABILITY      R4
         L     MICE,RPLICE         GET ADDRESS OF ICE                R4
         L     WA,ICEINLM          GET INBOUND QUEUE COUNT & LIMIT   R4
SKIP1760 LA    R14,1               SET UP COUNTER INCREMENT          R4
         ALR   R14,WA              UPDATE QUEUE COUNTER VALUE        R4
         CS    WA,R14,ICEINLM      ATTEMPT TO STORE NEW VALUE        R4
         BNE   SKIP1760            RETRY IF UNSUCCESSFUL             R4
         SPACE 1                                               @OZ57933
         TM    RPLFLAG2,RPLSREGS   IS RPLSAVEA BEING USED...   @OZ57933
         BZ    VRESETSR            NO, BRANCH TO CONTINUE      @OZ57933
         NI    RPLFLAG2,FF-RPLSREGS RESET RPLSAVEA IN USE      @OZ57933
         B     VRPLRANY            SKIP RESETSR                @OZ57933
         SPACE 1                                               @OZ57933
VRESETSR SRDL  R14,16              ISOLATE QUEUE LIMIT         @OZ57933
         SRL   R15,16               AND QUEUE COUNTER                R4
         CLR   R14,R15             CHECK FOR HIGHWATER MARK          R4
         BH    VRPLRANY            BRANCH IF NOT YET REACHED         R4
*              THIS LINE DELETED BY APAR OZ57933               @OZ57933
*              THIS LINE DELETED BY APAR OZ57933               @OZ57933
         SPACE 1                                                     R4
         MVI   RPLACTIV,0          RESET RPL BUSY INDICATOR          R4
         MVI   RPLSEQTP,VSEQRSCS   SHOW RESET CS REQUEST TYPE        R4
         MVI   RPLOPT1,RPLSEQ      SHOW SYNCHRONOUS REQUEST          R4
         OI    RPLOPT5,RPLDLGIN    REQUEST RESETSR CS MODE           R4
         NI    RPLSRTYP,255-(RPLNFSYN+RPLDFASY+RPLRRESP) SYNC DFL    R4
         LA    R0,RPLRSRCD         SHOW RESETSR REQUEST CODE         R4
         LA    R13,RPLSAVEA        PROVIDE SAVE AREA FOR VTAM       R41
         L     R15,RPLDACB                 GET ADDRESS OF ACB        R4
         L     R15,ACBINRTN-ACBDSECT(,R15)  INTERFACE ROUTINE        R4
         BALR  R14,R15             LINK TO THE INTERFACE ROUTINE     R4
         NI    RPLOPT5,255-RPLDLGIN  RESET CS OPTION           @OZ20662
         LTR   R15,R15             CHECK REQUEST COMPLETION          R4
         BNZ   VRPLRQUE            POST LINE MANAGER IF ERROR        R4
         SPACE 1                                                     R4
         USING DCTDSECT,MDCT       PROVIDE DCT ADDRESSABILITY        R4
VRPLRANY L     MBUF,MDCTRQBF       GET NEXT RECEIVE ANY BUFFER       R4
SKIP1770 LTR   MBUF,MBUF           CHECK FOR ANY RPL QUEUED          R4
         BZ    VRPLRQUE            BRANCH IF QUEUE IS EMPTY          R4
         L     R0,RPLNEXT-RPLDSECT(,MBUF) GET ADDR OF NEXT BUF       R4
         CS    MBUF,R0,MDCTRQBF    ATTEMPT TO UPDATE QUEUE           R4
         BNE   SKIP1770            RETRY IF UNSUCCESSFUL             R4
         STCM  MBUF,8,RPLFLAGS     SAVE RCV AHEAD QUEUE COUNT        R4
         BAL   ML,VBUFPOST         QUEUE BUFFER TO LINE MANAGER      R4
         SPACE 1                                                     R4
         LR    R1,MBUF             GET RCV ANY RPL ADDRESSABILITY    R4
         MVI   RPLOPT1,RPLSEQ      SHOW SYNCHRONOUS REQUEST          R4
         LA    R0,RPLRCVCD         SHOW RECEIVE REQUEST CODE         R4
         LA    R13,RPLSAVEA        PROVIDE A SAVEAREA FOR VTAM       R4
         L     R15,RPLDACB                 GET ADDRESS OF ACB        R4
         L     R15,ACBINRTN-ACBDSECT(,R15)  INTERFACE ROUTINE        R4
         BALR  R14,R15             LINK TO THE INTERFACE ROUTINE     R4
         LTR   R15,R15             CHECK REQUEST COMPLETION          R4
         BZ    VRPLRAOK            BRANCH IF SUCCESSFUL RCV          R4
         CLI   RPLRTNCD,USFXORDC   CHECK RECEIVE COMPLETION          R4
         BNH   VRPLRAOK            BRANCH IF EXCEPTION RCV           R4
         SPACE 1                                                     R4
VRPLRQUE MVI   RPLFLAGS,0          INDICATE NO RCV ANY ISSUED        R4
         DROP  R1                  SUSPEND RPL ADDRESSABILITY  @OZ62716
         L     R14,MDCTRABF        GET COUNT OF ACTIVE         @OZ62716
SKIP1780 L     R15,=A(-X'01000000') RECEIVE ANY REQUESTS       @OZ62716
         ALR   R15,R14               AND DECREMENT BY ONE      @OZ62716
         CS    R14,R15,MDCTRABF    ATTEMPT TO UPDATE COUNT     @OZ62716
         BNE   SKIP1780            BRANCH IF UNSUCCESSFUL      @OZ62716
         SPACE 1                                               @OZ62716
         LR    ML,WF               SET RETURN ADDRESS          @OZ62716
         B     VBUFPOST            QUEUE BUFFER TO LINE MGR    @OZ62716
         DROP  MDCT                RELEASE DCT ADDRESSABILITY        R4
         EJECT                                                       R4
*                                                                    R4
*              SEND REQUEST COMPLETION HANDLING                      R4
*                                                                    R4
         SPACE 1                                                     R4
         USING RPLDSECT,R1         PROVIDE RPL ADDRESSABILITY        R4
VRPLSEND CLI   RPLRTNCD,USFXORDC   CHECK REQUEST COMPLETION          R4
         BH    VBUFPOST            BRANCH IF COMPLETED WITH ERROR    R4
         CLI   RPLSEQTP,VSEQRSCA   IF RESETSR CA               @OZ51016
         BE    VBUFPOST             Q BUFFER TO LM AND POST    @OZ51016
         L     MICE,RPLICE         GET ADDRESS OF ICE                R4
         SPACE 1                                                     R4
VRPLSAOK LM    R14,R15,ICEOUTHD    GET OUTBOUND QUEUE          @OZ59887
         LR    R2,R1               SAVE RPL ADDRESS            @OZ59887
         SPACE 1                                                     R4
         USING RPLDSECT,MBUF       PROVIDE RPL ADDRESSABILITY        R4
VRPLSDEQ LTR   MBUF,R14            CHECK FOR ANY BUFFER QUEUED       R4
         ST    MBUF,ICEOUTBF       SET UP ACTIVE OUTB RPL ADDR       R4
         LR    ML,WF               RESTORE RETURN ADDRESS      @OZ59887
         LR    R1,R2               RESTORE RPL ADDRESS         @OZ59887
         BZ    VBUFPOST            RETURN IF QUEUE EMPTY       @OZ59887
         CLR   R14,R15             TEST FOR LAST BUFFER ON QUEUE     R4
         BE    VRPLSNGL            BRANCH IF ONE BUFFER ONLY         R4
         L     R0,RPLNEXT          GET ADDR OF NEXT BUFFER           R4
         LR    R1,R15              GET ADDR OF LAST BUFFER           R4
         CDS   R14,R0,ICEOUTHD     ATTEMPT TO UPDATE QUEUE PNTRS     R4
         BNE   VRPLSDEQ            RETRY IF UNSUCCESSFUL             R4
         SLR   R1,R1               CLEAR TAIL BUFFER POINTER         R4
         B     VRPLSRST            BRANCH TO RESET CHAIN FIELD       R4
         SPACE 1                                                     R4
VRPLSNGL SLR   R0,R0               CLEAR HEAD BUFFER POINTER         R4
         SLR   R1,R1               CLEAR TAIL BUFFER POINTER         R4
         CDS   R14,R0,ICEOUTHD     ATTEMPT TO RESET QUEUE            R4
         BNE   VRPLSDEQ            RETRY IF UNSUCCESSFUL             R4
         LA    R0,ICEOUTHD         GET LAST BUFFER CHAIN INDIC       R4
         SPACE 1                                                     R4
VRPLSRST CS    R0,R1,RPLNEXT       ATTEMPT TO RESET CHAIN FIELD      R4
         BNE   VRPLSRST            LOOP UNTIL SUCCESSFUL             R4
         LR    R1,R2               RESTORE RPL ADDRESS         @OZ59887
         BAL   ML,VBUFPOST         QUEUE RPL TO L.M.           @OZ59887
         MVI   RPLOPT1,RPLSEQ      SHOW SYNCHRONOUS REQUEST          R4
         SLR   R0,R0               CLEAR REQUEST PARAMETER REG       R4
         IC    R0,RPLREQ           GET   REQUEST TYPE FROM RPL       R4
         LR    R1,MBUF             LOAD RPL ADDRESS                  R4
         LA    R13,RPLSAVEA        PROVIDE SAVEAREA FOR VTAM         R4
         L     R15,RPLDACB                 GET ADDRESS OF ACB        R4
         L     R15,ACBINRTN-ACBDSECT(,R15)  INTERFACE ROUTINE        R4
         BALR  R14,R15             LINK TO THE INTERFACE ROUTINE     R4
         LTR   R15,R15             CHECK FOR SUCCESSFUL COMPLETION   R4
         BZ    VRPLSAOK            BRANCH IF ERROR FREE COMPLETION   R4
         LR    ML,WF               RESTORE VTAM EXIT RETURN ADDRESS  R4
         B     VBUFPOST            QUE BUF TO L.M. & RETURN TO VTAM  R4
         DROP  ,                   FORGET ALL ADDRESSABILITY         R4
         TITLE 'HASP VTAM API -- SUBROUTINES'                        R4
***********************************************************************
*                                                                     *
*        SUBROUTINE TO QUEUE AN ICE TO THE LINE MANAGER               *
*                                                                     *
***********************************************************************
         SPACE 2                                                     R4
         USING HASPVTAM,MBASE2     SHOW COMMON ADDRESSABILITY        R4
         USING HCTDSECT,BASE1      SHOW HCT ADDRESSABILITY           R4
         USING DCTDSECT,MDCT       SHOW DCT ADDRESSABILITY           R4
         USING ICEDSECT,MICE       SHOW ICE ADDRESSABILITY           R4
         SPACE 2                                                     R4
VICEPOST DS    0H                  QUEUE THE ICE TO LINE MANAGER     R4
         L     R1,DCTPCE           GET PCE ADDRESS FROM LOGON DCT    R4
         USING PCEDSECT,R1         SHOW PCE ADDRESSABILITY           R4
         SLL   R2,24               SHIFT REQ ACTION CODE TO LEFT     R4
         L     R15,ICEXTCHN        GET ICE EXIT ROUT CHAIN FIELD     R4
VICECHCK LTR   R15,R15             CHECK IF ICE IS ALREADY QUEUED    R4
         BNZ   VICEUPDT            UPDATE ACTION CODE IF YES         R4
         L     R0,MICEQUE          GET ICE QUEUE HEAD POINTER        R4
         SPACE 1                                                     R4
VICERTRY LR    R14,R0              COPY ICE QUEUE HEAD POINTER       R4
         LA    R14,0(,R14)           PURIFY ADDRESS                  R4
         ALR   R14,R2                 ADD REQ ACTION CODE TO IT      R4
         CS    R15,R14,ICEXTCHN    ATTEMPT TO STORE CHAIN ADDR       R4
         BNE   VICEUPDT            BRANCH IF CHANGED MEANWHILE       R4
         LR    R15,R14             RELOAD REG15 FOR RETRY CASE       R4
         CS    R0,MICE,MICEQUE     ATTEMPT TO CHAIN ICE TO QUEUE     R4
         BE    VMLMPOST            POST LINE MANAGER IF QUEUED       R4
         B     VICERTRY            RETRY IF UNSUCCESSFUL             R4
         SPACE 1                                                     R4
VICEUPDT LA    R14,0(,R15)         PURIFY CHAIN ADDRESS OF ICE       R4
         ALR   R14,R2              ADD ACTION CODE TO CHAIN ADDR     R4
         CLR   R14,R15             CHECK SEVERITY OF NEW REQ ACTION  R4
         BH    VICEUDTE            IF HIGH, UPDATE EXIT CODE   @OZ44753
         CLM   R14,8,=X'64'        IF THIS IS 2ND ENTRY OF     @OZ44753
         BE    VICEUPD1             LOSTERM AND FIRST ENTRY    @OZ44753
         CLM   R14,8,=X'63'          IS STILL SCHEDULED,       @OZ44753
         BNER  ML                     QUEUE THE ICE FOR        @OZ44753
VICEUPD1 CLM   R15,8,=X'66'            SECOND ENTRY OF         @OZ44753
         BNER  ML                       LOSTERM ANYWAY         @OZ44753
VICEUDTE CS    R15,R14,ICEXTCHN    ATTEMPT UPDATE ACTION CODE  @OZ44753
         BER   ML                  RETURN TO CALLER IF STORED        R4
         B     VICECHCK            RETRY IF UNSUCCESSFUL             R4
         SPACE 2                                                     R4
         DROP  R1                  RELEASE PCE ADDRESSABILITY        R4
         EJECT                                                       R4
***********************************************************************
*                                                                     *
*        SUBROUTINE TO QUEUE A LOGON DCT TO LINE MANAGER              *
*                                                                     *
***********************************************************************
         SPACE 2                                                     R4
VDCTPOST DS    0H                  QUEUE LOGON DCT TO LINE MANAGER   R4
         L     R1,DCTPCE           PICK UP PCE ADDRESS FROM PCE      R4
         USING PCEDSECT,R1         SHOW PCE ADDRESSABILITY           R4
         SLL   R2,24               SHIFT REQ ACTION CODE TO LEFT     R4
         L     R15,MDCTEXIT        GET DCT EXIT ROUT CHAIN FIELD     R4
VDCTCHCK LTR   R15,R15             CHECK IF DCT IS ALREADY QUEUED    R4
         BNZ   VDCTUPDT            UPDATE ACTION CODE IF YES         R4
         L     R0,MLOGQUE          GET DCT QUEUE HEAD POINTER        R4
VDCTRTRY LR    R14,R0              COPY DCT QUEUE HEAD POINTER       R4
         LA    R14,0(,R14)           PURIFY ADDRESS                  R4
         ALR   R14,R2                 ADD REQ ACTION CODE TO IT      R4
         CS    R15,R14,MDCTEXIT    ATTEMPT TO STORE CHAIN ADDR       R4
         BNE   VDCTUPDT            BRANCH IF CHANGED MEANWHILE       R4
         LR    R15,R14             RELOAD REG15 FOR RETRY CASE       R4
         CS    R0,MDCT,MLOGQUE     ATTEMPT TO CHAIN DCT TO QUEUE     R4
         BE    VMLMPOST            POST LINE MANAGER IF CHAINED      R4
         B     VDCTRTRY            RETRY IF UNSUCCESSFUL             R4
         SPACE 1                                                     R4
VDCTUPDT LA    R14,0(,R15)         PURIFY CHAIN ADDRESS OF DCT       R4
         ALR   R14,R2              ADD ACTION CODE TO CHAIN ADDR     R4
         CLR   R14,R15             CHECK SEVERITY OF NEW REQ ACTION  R4
         BNHR  ML                  RETURN TO CALLER IF NOT HIGHER    R4
         CS    R15,R14,MDCTEXIT    ATTEMPT TO UPDATE ACTION CODE     R4
         BER   ML                  RETURN TO CALLER IF STORED        R4
         B     VDCTCHCK             RETRY IF UNSUCCESSFUL            R4
         SPACE 2                                                     R4
         DROP  R1                  RELEASE PCE ADDRESSABILITY        R4
         EJECT                                                       R4
***********************************************************************
*                                                                     *
*        SUBROUTINE TO QUEUE A BUFFER TO THE LINE MANAGER             *
*                                                                     *
***********************************************************************
         SPACE 2                                                     R4
         USING RPLDSECT,R1         PROVIDE RPL ADDRESSABILITY        R4
         SPACE 1                                                     R4
VBUFPOST DS    0H                  QUEUE BUFFER TO LINE MANAGER      R4
         LA    R1,0(,R1)           CLEAR HIGH ORDER BYTE RPL   @OZ20651
         L     R0,$RJECHEQ         GET BUFFER QUEUE HEAD POINTER     R4
SKIP1790 ST    R0,RPLNEXT          ADD BUFFER TO RJE REQ END QUEUE   R4
         CS    R0,R1,$RJECHEQ      ATTEMPT TO UPDATE QUEUE POINTER   R4
         BNE   SKIP1790            RETRY IF UNSUCCESSFUL             R4
         MVI   RPLACTIV,X'80'      SHOW RPL ON $RJECHEQ        @OZ44972
         DROP  R1                  RELEASE RPL ADDRESSABILITY        R4
         SPACE 3                                                     R4
***********************************************************************
*                                                                     *
*        SUBROUTINE TO POST THE LINE MANAGER (QUICK POST ATTEMPT)     *
*                                                                     *
***********************************************************************
         SPACE 2                                                     R4
VMLMPOST DS    0H                  POST THE LINE MANAGER AND JES     R4
         L     R10,=X'40000000'    GET POST COMPLETION CODE          R4
         L     R15,$SSVT           GET ADDRESS OF SSVT               R4
         USING $SVDSECT,R15        TEMPORARY SSVT ADDRESSABILITY     R4
         MVI   $SVMLLM,X'FF'       SET MLLM $POST REQUESTED          R4
         DROP  R15                 RELEASE SSVT TEMP. ADDRESSABILITY R4
         L     R15,$HASPECB        GET HASP ECB ADDRESS              R4
         MVI   $SVPOSTW(R15),X'FF' SET HASP DISPATCHER POST          R4
         SPACE 1                                                     R4
         L     R1,0(,R15)          CHECK THE ECB FOR                 R4
SKIP1800 LTR   R1,R1                HASP TASK WAITING                R4
         BM    VPOSTIT             DO LONG POST IF YES               R4
         CS    R1,R10,0(R15)       ATTEMPT TO QUICK POST             R4
         BNE   SKIP1800            RETRY IF UNSUCCESSFUL             R4
         BR    ML                  RETURN TO CALLER                  R4
         EJECT                                                       R4
***********************************************************************
*                                                                     *
*        SUBROUTINE TO POST THE LINE MANAGER (VIA BRANCH ENTRY)       *
*              (REGS R0-R2,R10-R15 VOLATILE ACROSS ROUTINE)           *
*                                                                     *
***********************************************************************
         SPACE 2                                                     R4
VPOSTIT  DS    0H                  ZERO KEY AND LOCAL LOCK FOR POST  R4
         SLR   R2,R2               ASSUME ZERO PROTECTION KEY        R4
         L     R1,PSATOLD-PSADSECT  PICK UP OLD TCB ADDRESS         R41
         LTR   R1,R1               TEST FOR NO TCB ADDR PRESENT     R41
         BZ    VPOSTLCK            SKIP MODESETS IF IN SRB MODE     R41
         SPACE 1                                                     R4
         MODESET MODE=SUP          ENTER SUPERVISOR STATE            R4
         SPACE 1                                                     R4
         MODESET EXTKEY=ZERO,SAVEKEY=(2) GET PROPER PSW KEY          R4
         SPACE 2                                                     R4
VPOSTLCK DS    0H                  GET LOCAL LOCK                    R4
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,RELATED=VPOSTREL      R4
         SPACE 1                                                     R4
         L     BASE1,=V(HASPNUC)   RELOAD HCT ADDRESS                R4
         L     R11,$HASPECB        RELOAD HASP ECB ADDRESS           R4
         DROP  BASE1               SHOW HCT ADDRESSABILITY KILLED    R4
         L     R1,CVTPTR           GET CVT ADDRESS                   R4
         USING CVTDSECT,R1         TEMPORARY CVT ADDRESSABILITY      R4
         L     R15,CVT0PT02        GET POST BRANCH ENTRY             R4
         BALR  R14,R15             ENTER POST ROUTINE                R4
         DROP  R1                  RELEASE TEMPORARY CVT BASE        R4
         EJECT                                                       R4
VPOSTREL DS    0H                  RELEASE LOCAL LOCK                R4
         SETLOCK RELEASE,TYPE=LOCAL,RELATED=VPOSTLCK                 R4
         SPACE 1                                                     R4
         L     BASE1,=V(HASPNUC)   RELOAD HCT ADDRESS                R4
         LTR   R2,R2               CHECK OLD PROTECTION KEY          R4
         BZR   ML                  RETURN TO CALLER IF IT WAS ZERO   R4
         SPACE 1                                                     R4
         MODESET EXTKEY=HASP       RETURN TO OLD PROTECT KEY         R4
         BR    ML                  RETURN TO CALLER                  R4
         SPACE 2                                                     R4
         DROP  ,                                                     R4
         SPACE 2                                                     R4
         LTORG                                                       R4
         SPACE 2                                                     R4
$DLENGTH $DLENGTH                  DISPLAY LENGTH OF ASSEMBLY        R4
APARNUM  DC    CL5'83316'          APAR NUMBER
         END   ,                                                     R4
