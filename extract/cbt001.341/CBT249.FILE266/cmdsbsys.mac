         TITLE 'CMDSBSYS -   COMMAND PROCESSOR MODULE'
***********************************************************************
***********************************************************************
***                                                                 ***
***                                                                 ***
***                                                                 ***
***                     COMMAND  SUB-SYSTEM                         ***
***                  -------------------------                      ***
***                                                                 ***
***                                                                 ***
***       CMDSBSYS -       COMMAND PROCESSOR MODULE                 ***
***                                                                 ***
***       VERSION -        1.0                                      ***
***                                                                 ***
***       MVS LEVEL -      MVS/SE  3.8.   WITHOUT  SE2 OR SU64.     ***
***                                                                 ***
***       UPDATED -        09/01/79                                 ***
***                                                                 ***
***                                                                 ***
***                                                                 ***
***********************************************************************
***********************************************************************
         EJECT
CMDSBSYS CSECT
         SPACE 1
         DC    A(CMDENTRY-CMDSBSYS)
         SPACE 1
CMDENTRY EQU   *
         SAVE  (14,12)
         LR    R12,R15
         USING CMDENTRY,R12
         LR    R2,R0               LOAD SSCVT ADDR
         L     R10,16(0,R2)        LOAD SSVT ADDR
         LR    R11,R1              LOAD SSOB ADDR
         XC    12(4,R11),12(R11)   CLEAR RETURN CODE
         LA    R3,0(0,R10)         LOAD SSVT ADDR
         USING AREA,R3
         L     R10,16(0,R11)       LOAD FUNCTION DEPENDENT AREA ADDR
         SR    R4,R4               CLEAR UCMID HOLDER
         IC    R4,11(0,R10)        SAVE UCMID OF ISSUING CONSOLE
         L     R10,4(0,R10)        LOAD CMD BUFFER ADDR
         LH    R9,0(0,R10)         LOAD COMMAND LENGTH
         SH    R9,=H'4'            SUB 4 FOR HDR PORTION
         LA    R10,4(0,R10)        TEXT ADDR
         CLI   0(R10),C'D'         DISPLAY COMMAND
*        BE    CMDCHK              YES, CHECK FOR  D DUMP CMD
         CLI   0(R10),C'#'         OUR COMMAND
         BNE   CMDOUT              NO, LET MVS OR JES2 HANDLE
         XC    SSVTTIME(4),SSVTTIME
         CLC   0(2,R10),=C'##'     MONITOR COMMAND
         BNE   *+10                NO
         MVC   SSVTTIME(4),=F'30'  INDICATE MONITOR COMMAND REQUEST
         CLC   SAVE+4(4),=F'0'     CMDSBSYS ALREADY ACTIVE
         BNE   CMDACTIV            YES, REJECT COMMAND
         ST    R13,SAVE+4          SAVE AREA
         LA    R13,SAVE               CONVENTIONS
         STC   R4,XAU              SAVE UCM ID OF ISSUING CONSOLE
         SR    R1,R1               LOAD
         IC    R1,XAU                 INPUT CONSOLE UCM ID
         CVD   R1,DOUBLE           CONVERT AND PRINT
         UNPK  INCONS(2),DOUBLE+6(2)
         OI    INCONS+1,X'F0'
*        CH    R9,=H'80'           SELF-IMPOSED MAX LENGTH
*        BH    CMDERROR            TOO HIGH, ERROR
         CH    R9,=H'2'            SELF-IMPOSED MIN LENGTH
         BL    CMDERROR            TOO LOW, ERROR
         LA    R8,CMDTABLE         COMMAND TABLE ADDR
         LA    R10,1(0,R10)        NEXT BYTE
         BCTR  R9,0                SUB 1 FROM LENGTH
         CLI   0(R10),C' '         BLANK OR COMMAND
         BNE   CMD1                COMMAND
         LA    R10,1(0,R10)        BLANK, NEXT BYTE
         BCT   R9,CMD1                MUST BE COMMAND
         B     CMDERROR            NOT COMMAND, ERROR
         EJECT
CMD1     CLI   0(R10),C'#'         SUBSYS MONITOR REQUEST
         BE    CMD2                YES, CONTINUE
         CLC   0(2,R10),=C'**'     SUBSYS CSC STOP REQUEST
         BE    CMD2                YES, CONTINUE
         CLI   0(R8),X'00'         TABLE END
         BE    CMDNOSUP            YES, COMMAND NOT SUPPORTED
         CLC   0(1,R8),0(R10)      COMMAND MATCH
         BE    CMD2                YES, CONTINUE
         LA    R8,4(0,R8)          NEXT ENTRY
         B     CMD1
         SPACE 1
CMD2     MVI   COMMAND,C' '        CLEAR COMMAND
         MVC   COMMAND+1(79),COMMAND
         SPACE 1
CMD3     CLI   0(R10),C'#'         SUBSYS MONITOR REQUEST
         BE    CMD4                YES, CONTINUE
         CLC   0(2,R10),=C'**'     SUBSYS CSC STOP REQUEST
         BE    CMD4                YES, CONTINUE
         LA    R10,1(0,R10)        NEXT BYTE
         BCT   R9,CMD4             SUB 1 FROM LENGTH
         XC    XAL,XAL             CLEAR SUB-PARM ADDR
         B     CMDISSUE            GO PROCESS COMMAND
         SPACE 1
CMD4     CLI   0(R10),C' '         BLANK
         BE    CMD3                YES, CHECK NEXT
         LA    R1,COMMAND          LOAD COMMAND AREA ADDR
         ST    R1,XAL              SAVE SUB-PARM ADDR
         LR    R6,R10              SAVE SUB-PARM START
         LA    R10,0(R9,R10)       POINT TO
         BCTR  R10,0                  LAST BYTE
         EJECT
CMD5     CR    R6,R10              CHECK FOR NON-BLANKS BACK TO START
         BNL   CMDMOVE             GO MOVE IF ALREADY THERE
         CLI   0(R10),C' '         BLANK
         BNE   CMDMOVE             NO, GO MOVE SUB-PARM
         BCT   R10,CMD5            CHECK NEXT PREVIOUS BYTE
         B     CMDERROR            THIS CANNOT HAPPEN -   I THINK
         SPACE 3
CMDMOVE  LR    R1,R10              BACK UP 4 BYTES
         SH    R1,=H'4'
         SR    R10,R6              CALCULATE MOVE LENGTH
         MVC   SYSID(4),3(R1)      SAVE RECEIVING SYSID
         CLC   0(3,R1),=C',L='     DIRECTED OUTPUT
         BNE   CMDMOVEX            NO, CONTINUE
         TM    3(R1),X'F0'         NUMERIC
         BNO   CMDERROR               CONSOLE
         TM    4(R1),X'F0'               I.D.
         BNO   CMDERROR                     CHECK
         PACK  DOUBLE(8),3(2,R1)   CONVERT
         CVB   R14,DOUBLE             SAVE AND
         BAL   R7,CONSCHK                VALIDATE
         STC   R14,XAU                      NEW UCMID
         LR    R10,R1              POINT TO COMMA
         BCTR  R10,0               BACK UP 1
         SR    R10,R6              CALCULATE MOVE LENGTH
         BNM   CMDMOVEX            GO MOVE IF NOT NEGATIVE
         XC    XAL,XAL             CLEAR SUB-PARM ADDR
         B     CMDISSUE            GO PROCESS COMMAND
         SPACE 3
CMDMOVEX EX    R10,CMDMEXEC        MOVE SUB-PARM
         B     CMDISSUE            GO PROCESS COMMAND
         SPACE 3
CMDMEXEC MVC   COMMAND(0),0(R6)
         EJECT
CSCSYS   LA    R1,COMMAND-1        COMMAND BEGIN -1
         LA    R14,COMMAND+76      COMMAND END
         CLC   COMMAND(2),=C'**'   CSC STOP REQUEST
         BNE   *+12                NO
         MVI   CSCCMD,C'*'         SET CSC STOPPED
         B     CSCSYS4
         SPACE 1
CSCSYS1  CLC   0(3,R14),=C',S='    SYSID PARM
         BE    CSCSYS2             YES
         BCTR  R14,0
         CR    R1,R14              SYSID PARM MISSING
         BNE   CSCSYS1             NO
         BR    R7
         SPACE 1
CSCSYS2  CLI   CSCCMD,C'*'         IS CSC STOPPED
         BE    CSCSYS3             YES
         MVC   SYSID(4),3(R14)     SET UP RECEIVING SYSID
         CLC   SSVTTIME(4),=F'0'   MONITOR COMMAND
         BNE   CMDNOSUP            YES, NOT ALLOWED
         MVI   SSVTTIME,C'C'
         BR    R7
         SPACE 1
CSCSYS3  LA    R1,CSCNACT          CSC NOT ACTIVE MSG
         MVI   15(R11),X'04'       INDICATE CMD SUBSYS PROCESSED
         B     CMDMSG
         SPACE 1
CSCSYS4  LA    R1,CSCSTOP          CSC NOT ACTIVE MSG
         MVI   15(R11),X'04'       INDICATE CMD SUBSYS PROCESSED
         B     CMDMSG
         EJECT
CONSCHK  L     R15,16              CVT
         L     R15,100(0,R15)      UCM BASE
         L     R9,72(0,R15)        UCM 1ST ENTRY ADDR
         LM    R4,R5,76(R15)       UCM ENTRY LENGTH AND LAST ENTRY ADDR
         SPACE 3
CONSCHK1 CLM   R14,1,26(R9)        UCM ID MATCH
         BNE   CONSCHK2            NO, CHECK NEXT
         TM    25(R9),X'10'        IS CONSOLE ACTIVE
         BNO   CONSCHK3            NO, ERROR
         BR    R7                  YES,BACK TO NORMAL
         SPACE 3
CONSCHK2 BXLE  R9,R4,CONSCHK1      NEXT UCM ENTRY
         SPACE 3
CONSCHK3 LA    R1,UCMMSG           UCM ID ERROR MSG
         MVI   15(R11),X'04'       INDICATE CMD SUBSYS PROCESSED
         B     CMDMSG
         EJECT
CMDISSUE MVC   WTOLIST(52),WTOOVLY
         BAL   R7,CSCSYS           CHECK FOR S=
         MVC   UCMID(2),INCONS     UCM ID OF INPUT CONSOLE
         MVC   CMDID(1),0(R8)      COMMAND ID FROM TABLE
         L     R1,16               CVT
         L     R1,196(0,R1)        SMCA
         CLI   SSVTTIME,C'C'       CROSS-SYSTEM COMMAND
         BE    *+10                YES
         MVC   SYSID(4),16(R1)     SYSTEM ID
         TIME  DEC
         ST    R1,DOUBLE
         UNPK  YEAR(3),DOUBLE+1(2)
         MVI   YEAR+2,C'.'
         UNPK  DAY(3),DOUBLE+2(2)
         OI    DAY+2,X'F0'
         ST    R0,DOUBLE
         UNPK  HOUR(3),DOUBLE(2)
         MVI   HOUR+2,C'.'
         UNPK  MINUTE(3),DOUBLE+1(2)
         MVI   MINUTE+2,C' '
         CLC   SSVTTIME(4),=F'30'  SUBSYS MONITOR REQUEST
         BE    CMDMON              YES, CONTINUE
         CLI   SSVTTIME,C'C'       CROSS-SYSTEM COMMAND
         BE    CMDMON              YES
         LA    R1,WTOLIST
         SR    R0,R0               LOAD
         IC    R0,XAU                 UCM ID
         SVC   35                  WTO
         MVC   XAS(1),SYSID
         MVC   XAS+1(1),DAY
         MVC   XAS+2(1),HOUR
         MVC   XAS+3(1),DAY+1
         MVC   XAS+4(1),HOUR+1
         MVC   XAS+5(1),DAY+2
         MVC   XAS+6(2),MINUTE
         EJECT
CMDBRNCH SR    R15,R15             LOAD COMMAND
         ICM   R15,7,1(R8)            MODULE ADDR
         LTR   R15,R15             ZERO MODULE ADDR
         BZ    CMDNOSUP            YES, NOT SUPPORTED
         LA    R2,XSA              XSA ADDR
         MVI   15(R11),X'04'       INDICATE CMD SUBSYS PROCESSED
         LA    R14,CMDRETN         LOAD RETURN ADDR
         BR    R15                 EXIT TO COMMAND MODULE
         SPACE 3
CSC      MVI   15(R11),X'04'       INDICATE CMD SUBSYS PROCESSED
         CLI   CSCCMD,X'00'        AVAILABLE
         BE    CSC1                YES
         LA    R1,CSCMSG
         B     CMDMSG
         SPACE 1
CSC1     MVC   HDRMSG+20(1),0(R8)  COMMAND ID
         MVC   CSCHDR(52),HDRMSG
         MVC   CSCCMD+1(77),COMMAND SUB PARM
         MVC   CSCCMD(1),0(R8)     COMMAND
         B     CMDEXIT
         EJECT
CMDMON   LA    R14,COMMAND+1
         CLI   0(R14),C' '         1 BLANK ALLOWED
         BNE   CMDMON0             YES
         LA    R14,1(0,R14)
         SPACE 1
CMDMON0  MVC   CMD##(78),0(R14)    SAVE MONITOR COMMAND
         MVC   HDRMSG(52),WTOLIST
         MVI   HDRMSG+19,C'#'
         CLI   SSVTTIME,C'C'       CROSS-SYSTEM COMMAND
         BNE   *+8                 NO
         MVI   HDRMSG+19,C'*'      YES, SO INDICATE
         MVC   HDRMSG+20(1),CMD##
         MVI   HDRMSG+21,C')'
         CLI   SSVTTIME,C'C'       CROSS-SYSTEM COMMAND
         BE    CSC                 YES
         CLI   SSVTSTAT,X'F0'      XMPOST ERROR
         BE    CMDMON3A            YES
         CLI   SSVTSTAT,X'FF'      MONITOR BUSY
         BE    CMDMON3             YES
         MVI   SSVTSTAT,X'FF'      SET MONITOR BUSY
         MVC   SSVTUMID+3(1),XAU   SAVE UCM ID
         SPACE 1
CMDMON1  LA    R4,SSVTECB          ECB TO POST
         L     R5,SSVTASCB         ASCB ADDR
         LA    R5,0(0,R5)
         STM   R14,R12,SAVE+12
         POST  (4),ASCB=(5),ERRET=CMDMON4
         MVI   15(R11),X'04'       INDICATE CMD SUBSYS PROCESSED
         B     CMDEXIT
         SPACE 1
CMDMON3  LA    R1,MONAMSG          MONITOR BUSY MSG
         MVI   15(R11),X'04'       INDICATE CMD SUBSYS PROCESSED
         B     CMDMSG
         SPACE 1
CMDMON3A LA    R1,POSTMSG          XMPOST ERROR MSG
         MVI   15(R11),X'04'       INDICATE CMD SUBSYS PROCESSED
         B     CMDMSG
         EJECT
         USING *,R15
CMDMON4  BALR  R15,0
         LA    R15,0(0,R15)
         BCTR  R15,0
         BCTR  R15,0
         STM   R0,R14,POSTSAVE
         L     R5,16               CVT
         L     R5,296(0,R5)        JESCT
         L     R5,24(0,R5)         1ST SSCVT ADDR
         SPACE 1
CMDMON4A CLC   8(3,R5),=CL3'CMD'   NAME MATCH
         BE    CMDMON4B            YES, CONTINUE
         L     R5,4(0,R5)          NEXT SSCVT
         LTR   R5,R5               ZERO SSCVT
         BNZ   CMDMON4A            NO, CONTINUE
         B     CMDMON4C
         SPACE 3
         USING AREA,R3
         DROP  R15
CMDMON4B L     R3,16(0,R5)         SSVT ADDR
         LA    R13,SAVE
         LM    R14,R12,SAVE+12
         MVI   SSVTSTAT,X'F0'      SET POST ERROR IND
         MVI   15(R11),X'04'       INDICATE CMD SUBSYS PROCESSED
         SPACE 1
CMDMON4C LM    R0,R14,POSTSAVE
         SR    R15,R15
         BR    R14
         EJECT
CMDERROR LA    R1,ERRMSG           ERROR
         MVI   15(R11),X'04'       INDICATE CMD SUBSYS PROCESSED
         B     CMDMSG
         SPACE 3
CMDNOSUP LA    R1,SUPPMSG          NOT SUPPORTED
         MVI   15(R11),X'04'       INDICATE CMD SUBSYS PROCESSED
         SPACE
CMDMSG   SR    R0,R0               LOAD
         IC    R0,XAU                 UCM ID
         SVC   35                  WTO
         SPACE 3
CMDEXIT  L     R13,4(0,R13)        LOAD PREVIOUS SAVE AREA ADDR
         XC    SAVE+4(4),SAVE+4    CLEAR PREVIOUS SAVE AREA ADDR
CMDOUT   RETURN (14,12),RC=0
         EJECT
CMDCHK   LA    R1,70
         SPACE 1
CMDCHK1  LA    R10,1(0,R10)
         CLI   0(R10),C' '         COMMAND END
         BE    CMDCHK2             YES
         BCT   R1,CMDCHK1
         B     CMDOUT
         SPACE 1
CMDCHK2  LA    R10,1(0,R10)
         CLI   0(R10),C' '         SUB PARM REACHED
         BNE   CMDCHK3             YES
         BCT   R1,CMDCHK2
         B     CMDOUT
         SPACE 1
CMDCHK3  CLC   0(2,R10),=C'D '     D DUMP COMMAND
         BE    CMDCHK4             YES
         CLC   0(2,R10),=C'D,'     D DUMP COMMAND
         BE    CMDCHK4             YES
         CLC   0(4,R10),=C'DUMP'   D DUMP COMMAND
         BNE   CMDOUT              NO
         SPACE 1
CMDCHK4  MVI   15(R11),X'04'       INDICATE MSG PROCESSED
         LA    R1,DDUMPMSG         LOAD DISPLAY DUMP MSG ADDR
         LR    R0,R4               LOAD UCMID
         SVC   35
         LA    R1,DDUMPCMD         S CHKDUMP COMMAND
         SR    R0,R0
         SVC   34
         RETURN (14,12),RC=0
         SPACE 3
CMDACTIV LA    R1,ACTVMSG          CMDSBSYS ACTIVE MSG
         MVI   15(R11),X'04'       INDICATE CMD SUBSYS PROCESSED
         LR    R0,R4               LOAD UCMID
         SVC   35
         RETURN (14,12),RC=0
         EJECT
         USING CMDRETN,R14
CMDRETN  L     R1,CMDBASE          LOAD RELATIVE OFFSET
         LA    R12,0(0,R14)        LOAD
         SR    R12,R1                 MODULE BASE ADDR
         B     CMDRETN1
         DROP  R14
         SPACE 3
         DS    0F
CMDBASE  DC    A(CMDRETN-CMDENTRY)
         SPACE 3
         USING CMDENTRY,R12
CMDRETN1 L     R1,16               CVT
         L     R1,296(0,R1)        JESCT
         L     R1,24(0,R1)         1ST SSCVT
         SPACE 3
CMDRETN2 CLC   8(3,R1),=C'CMD'     CMD SUB-SYSTEM SSCVT ENTRY
         BE    CMDRETN3            YES, CONTINUE
         L     R1,4(0,R1)          NEXT SSCVT
         B     CMDRETN2
         SPACE 3
CMDRETN3 L     R1,16(0,R1)         LOAD SSVT ADDR
         LA    R3,0(0,R1)          LOAD WORK AREA ADDR
         LA    R13,SAVE            LOAD SAVE AREA ADDR
         B     CMDEXIT
         EJECT
         LTORG
         SPACE 5
POSTSAVE DC    15F'0'
         SPACE 2
         DS    0F
SIZE     DC    X'F1',AL3(AREAEND-AREA)
         SPACE 2
         DS    0F
WTOOVLY  DS    0CL52
         DC    X'00340100'
         DC    CL4'--  ',CL8'CMDSBSYS',CL3' (#'
         DC    CL4' )  ',CL6'L=    ',CL4' ',CL8' ',CL7' ',CL4'  --'
         SPACE 2
MSGOVLY  DS    0CL52
         DC    X'00340100'
         DC    CL4'--  ',CL12'MSGSBSYS -',CL6' ',CL2' '
         DC    CL20'OUTSTANDING MESSAGES',CL4'  --'
         EJECT
ERRMSG   DS    0CL44
         DC    X'002C0100'
         DC    CL40'CMD SUBSYS -   COMMAND PARAMETER ERROR'
         SPACE 2
SUPPMSG  DS    0CL40
         DC    X'00280100'
         DC    CL36'CMD SUBSYS -   COMMAND NOT SUPPORTED'
         SPACE 2
UCMMSG   DS    0CL40
         DC    X'00280100'
         DC    CL36'CMD SUBSYS -   CONSOLE NOT ACTIVE'
         SPACE 2
ACTVMSG  DS    0CL48
         DC    X'00300100'
         DC    CL44'CMD SUBSYS -   COMMAND REJECTED, SUBSYS BUSY'
         SPACE 2
MONAMSG  DS    0CL52
         DC    X'00340100'
         DC    CL48'CMD SUBSYS -   COMMAND REJECTED, MONITOR BUSY'
         SPACE 2
CSCMSG   DS    0CL48
         DC    X'00300100'
         DC    CL44'CMD SUBSYS -   COMMAND REJECTED, CSC BUSY'
         SPACE 2
CSCSTOP  DS    0CL32
         DC    X'00200100'
         DC    CL28'CMD SUBSYS -   CSC STOPPED'
         SPACE 2
CSCNACT  DS    0CL52
         DC    X'00340100'
         DC    CL48'CMD SUBSYS -   COMMAND REJECTED, CSC NOT ACTIVE'
         SPACE 2
POSTMSG  DS    0CL52
         DC    X'00340100'
         DC    CL48'CMD SUBSYS -   XMPOST ERROR -  RESTART SUBSYS'
         SPACE 2
DDUMPMSG DS    0CL48
         DC    X'00300100'
         DC    CL44'CMD SUBSYS -   S CHKDUMP ISSUED FOR  D DUMP'
         SPACE 2
         DS    0F
DDUMPCMD DS    0CL16
         DC    X'00100000'
         DC    CL16' S CHKDUMP  '
         EJECT
AREA     DSECT
SSVT     DS    H
SSVTFNUM DS    H
SSVTFCOD DS    XL256
SSVTFRTN DS    0F
SSVTFUNC DS    0F
SSVTFUN1 DS    F
         DS    8F
SSVTMSGT DS    F
SSVTLIST DS    2F
SSVTECB  DS    F
         DS    0D
SSVTWAIT DS    CL8
SSVTTIME DS    F
SSVTASCB DS    0F
SSVTSTAT DS    X
         DS    XL3
SSVTUMID DS    F
         SPACE 3
CMDTABLE DS    20F
CMDEND   DS    F
         EJECT
         DS    0D
USERWORK DS    0CL228
DOUBLE   DS    D
SAVE     DS    18F
COMMAND  DS    CL80
INCONS   DS    CL2
         SPACE 2
         DS    0F
WTOLIST  DS    0CL52
         DS    CL19
CMDID    DS    C
         DS    CL5
UCMID    DS    CL2
         DS    CL2
SYSID    DS    CL4
         DS    CL2
YEAR     DS    CL2
         DS    C
DAY      DS    CL3
         DS    CL2
HOUR     DS    CL2
         DS    C
MINUTE   DS    CL2
         DS    CL4
PADDING  DS    CL12
         SPACE 2
XSA      DS    0CL48
         DS    5F
XAL      DS    F
XAT      DS    F
         DS    F
XAS      DS    2F
XAU      DS    X
         DS    XL7
         SPACE 2
CMD##    DS    CL78
HDRMSG   DS    CL52
DISBL    DS    CL48
         DS    0F
CSCHDR   DS    CL52
CSCCMD   DS    CL78
CSCSTABL DS    CL48
         SPACE 2
AREAEND  DS    0D
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
