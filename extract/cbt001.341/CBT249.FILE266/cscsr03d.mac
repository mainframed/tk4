         TITLE 'IEESR03D -   #O  DISPLAY I/O PENDING/ALLOC QUEUE'
***********************************************************************
***********************************************************************
***                                                                 ***
***                                                                 ***
***                                                                 ***
***                     COMMAND  SUB-SYSTEM                         ***
***                  -------------------------                      ***
***                                                                 ***
***                                                                 ***
***       IEESR03D -       #O  DISPLAY I/O PENDING/ALLOC QUEUE      ***
***                                                                 ***
***       VERSION -        1.2                                      ***
***                                                                 ***
***       MVS LEVEL -      MVS/SE  3.8.   WITHOUT  SE2 OR SU64.     ***
***                                                                 ***
***       UPDATED -        07/21/81  AXC-CBT HANDLE ESTAE           ***
***                                                                 ***
***                                                                 ***
***                                                                 ***
***********************************************************************
***********************************************************************
         EJECT
IEESR03D CSECT
         LR    R12,R15            SET ADDRESSABILITY
         USING IEESR03D,R12
         L     R0,SIZE
         GETMAIN R,LV=(0)
         LR    R13,R1
         USING WORK,R13
         USING XSA,R2
         ST    R14,SAVE           PUT RETURN ADDRESS IN UNUSED SLOT
         ST    R2,XSASAVE         SAVE XSA ADDR
         XC    UCBDMSAV(24),UCBDMSAV
         MVI   FOUND,X'00'
         MVI   IOLINE+4,C' '
         MVC   IOLINE+5(47),IOLINE+4
         MVC   IOLINE(4),=X'00340100'
         MVI   QUELINE+4,C' '
         MVC   QUELINE+5(47),QUELINE+4
         MVC   QUELINE(4),=X'00340100'
         MVC   STATUS(6),=CL6'ACTIVE'
         MVI   TYPE,C' '
         LR    R10,R13             LOAD SAVE AREA ADDR
         B     ESTAEBYP            BYPASS ESTAE LIST
ESTAEOVL ESTAE STAEXIT,CT,MF=L
ESTAEBYP MVC   ESTAELST(16),ESTAEOVL
         LA    R1,ESTAELST
         ESTAE PARAM=(10),MF=(E,(1))
         L     R3,XAL
         LA    R3,0(0,R3)
         LTR   R3,R3               ANY SUBPARMS
         BZ    UCBSCAN             NO, I/O PENDING ACTIVE AND QUEUED
         MVI   TYPE,C'A'
         CLI   0(R3),C'A'          ACTIVE ONLY
         BE    UCBSCAN             YES
         MVI   TYPE,C'Q'
         CLI   0(R3),C'Q'          QUEUED ONLY
         BE    UCBSCAN             YES
         CLI   0(R3),C'X'          ALLOCATION QUEUE REQUEST
         BE    ALLOC               YES
         MVI   TYPE,C' '
         EJECT
UCBSCAN  L     R9,16               .CVT
         L     R9,40(0,R9)         .UCB LOOKUP TABLE
         CLI   TYPE,C' '          ALL I/O PENDING
         BE    UCBSCAN1           YES
         CLI   TYPE,C'A'          ACTIVE I/O PENDING ONLY
         BNE   PROCESS1           NO, EXIT
         SPACE 1
UCBSCAN1 BAL   R7,UCBFIND          GET NEXT UCB ADDR
         LTR   R1,R1               END OF UCBS
         BZ    PROCESS1            YES, EXIT
         B     PROCESS
         EJECT
UCBFIND  EQU   *
UCBDML#0 ST    R8,UCBDMSAV         .SAVE WORK REG 1
         ST    R10,UCBDMSAV+8      .SAVE WORK REG 3
         ST    R11,UCBDMSAV+12     .SAVE WORK REG 4
         L     R8,UCBDMLOW         .SET SEARCH ARGUMENT
         SPACE 1
UCBDML#1 LA    R8,1(0,R8)          .NEXT UNIT ADDR POSSIBLE
         L     R10,=X'0000FFFF'    .SET MAX NEXT LEAST HIGH
         SPACE 1
UCBDML#2 CLC   0(2,R9),=X'FFFF'    .END OF TABLE
         BE    UCBDMOUT            .YES, GO PROCESS
         SR    R1,R1
         ICM   R1,3,0(R9)          .LOAD UCB ADDR
         LTR   R1,R1               .ZERO ADDR
         BNZ   UCBDML#4            .NO, CONTINUE
         SPACE 1
UCBDML#3 LA    R9,2(0,R9)          .NEXT UCB LOOKUP TABLE ENTRY
         B     UCBDML#2
         SPACE 1
UCBDML#4 CLI   18(R1),X'10'        GRAPHICS
         BE    UCBDML#3            YES, NEXT UCB
         CLI   18(R1),X'40'        COMM
         BE    UCBDML#3            YES, NEXT UCB
         TM    6(R1),X'8A'         BUSY AND/OR CHANNEL PROGRAM ACTIVE
         BZ    UCBDML#3            NO, NEXT UCB
         BAL   R11,UCBDMCNV        .CONVERT UNIT ADDR TO HEX
         CR    R1,R8               .UNIT EQUAL
         BL    UCBDML#3            .LOW NOT EQUAL, NEXT UCB
         LR    R10,R1              .SET NEXT LEAST HIGH UNIT ADDR
         MVC   UCBDMCUR+2(2),0(R9) .SET NEXT LEAST HIGH UCB ADDR
         B     UCBDMOUT            .GO PROCESS
         EJECT
UCBDMCNV SR    R14,R14
         SR    R15,R15
         IC    R15,13(0,R1)        .UNIT ADDR DIGIT
         TM    13(R1),X'F0'        .NUMERIC
         BO    *+8                 .YES, BYPASS VALUE ADJUST
         LA    R15,9(0,R15)        .SET VALUE TO COVER A-F
         SLL   R15,28              .SHIFT OUT ALL BUT PERTINENT
         SLDL  R14,4               .INSERT INTO RESULTS REGISTER
         IC    R15,14(0,R1)        .UNIT ADDR DIGIT
         TM    14(R1),X'F0'        .NUMERIC
         BO    *+8                 .YES, BYPASS VALUE ADJUST
         LA    R15,9(0,R15)        .SET VALUE TO COVER A-F
         SLL   R15,28              .SHIFT OUT ALL BUT PERTINENT
         SLDL  R14,4               .INSERT INTO RESULTS REGISTER
         IC    R15,15(0,R1)        .UNIT ADDR DIGIT
         TM    15(R1),X'F0'        .NUMERIC
         BO    *+8                 .YES, BYPASS VALUE ADJUST
         LA    R15,9(0,R15)        .SET VALUE TO COVER A-F
         SLL   R15,28              .SHIFT OUT ALL BUT PERTINENT
         SLDL  R14,4               .INSERT INTO RESULTS REGISTER
         LR    R1,R14              .SET RESULTS REG
         BR    R11
         SPACE 3
UCBDMOUT C     R10,=X'0000FFFF'    .ALL DONE
         BE    UCBDMEX             .YES
         ST    R10,UCBDMLOW        .NEXT LOW UNIT ADDR
         L     R1,UCBDMCUR         .LOAD UCB ADDR FOR FOUND UNIT
         B     UCBDMCON            .CONTINUE
         SPACE 1
UCBDMEX  SR    R1,R1               .CLEAR UCB ADDR REGISTER
         L     R8,UCBDMSAV         .RELOAD WORK REG 1
         L     R10,UCBDMSAV+8      .RELOAD WORK REG 3
         L     R11,UCBDMSAV+12     .RELOAD WORK REG 4
         B     UCBDMRET            .END OF UCBS
         SPACE 1
UCBDMCON L     R8,UCBDMSAV         .RELOAD WORK REG 1
         L     R10,UCBDMSAV+8      .RELOAD WORK REG 3
         L     R11,UCBDMSAV+12     .RELOAD WORK REG 4
         SPACE 1
UCBDMRET EQU   *
         BR    R7
         EJECT
PROCESS  LR    R3,R1              UCB ADDR
         LR    R4,R1              UCB ADDR
         S     R4,=F'4'           DECR ADDR -4
         L     R4,0(0,R4)         IOQ ADDR
         LA    R4,0(0,R4)
         LTR   R4,R4              ANY IOQ
         BZ    UCBSCAN1           NO, NEXT UCB
         L     R5,8(0,R4)         IOSB ADDR
         LA    R5,0(0,R5)
         LTR   R5,R5              EXIST
         BZ    UCBSCAN1           NO, NEXT UCB
         BAL   R7,CHKASID
         BAL   R7,FORMAT
         B     UCBSCAN1
         EJECT
PROCESS1 CLI   TYPE,C' '          ALL I/O PENDING
         BE    PROCESS2           YES
         CLI   TYPE,C'Q'          QUEUED I/O PENDING ONLY
         BNE   NOTFOUND           NO, EXIT
         SPACE 1
PROCESS2 L     R8,16              CVT ADDR
         L     R8,140(0,R8)       LCH ADDR
         MVC   STATUS(6),=CL6'QUEUED'
         SPACE 1
PROCESS3 CLC   16(4,R8),=F'0'     END OF LCH
         BE    NOTFOUND           YES
         CLC   0(4,R8),=X'FFFFFFFF' IOQ ADDR EXIST
         BNE   PROCESS5           YES
         SPACE 1
PROCESS4 LA    R8,32(0,R8)        NEXT LCH
         B     PROCESS3
         SPACE 1
PROCESS5 L     R4,0(0,R8)         1ST IOQ
         L     R6,4(0,R8)         LAST IOQ
         SPACE 1
PROCESS6 L     R5,8(0,R4)         IOSB ADDR
         LA    R5,0(0,R5)
         LTR   R5,R5              EXIST
         BZ    PROCESS4           NO
         L     R3,16(0,R5)        UCB ADDR
         BAL   R7,CHKASID
         BAL   R7,FORMAT
         CR    R4,R6              END OF IOQS
         BE    PROCESS4           YES
         L     R4,0(0,R4)         NEXT IOQ
         B     PROCESS6
         EJECT
ALLOC    L     R3,16              CVT
         L     R3,548(0,R3)       AQTOP
         UNPK  MASK1(13),32(7,R3)
         NC    MASK1(12),=12X'0F'
         TR    MASK1(12),=C'0123456789ABCDEF'
         MVI   MASK1+12,C' '
         UNPK  MASK2(13),39(7,R3)
         NC    MASK2(12),=12X'0F'
         TR    MASK2(12),=C'0123456789ABCDEF'
         MVI   MASK2+12,C' '
         MVC   QJOB(8),=CL8'*SYSTEM*'
         MVC   QSTAT(7),=CL7'*AQTOP*'
         LA    R1,QUELINE
         SR    R0,R0
         IC    R0,XAU
         SVC   35
         L     R4,0(0,R3)         1ST QUEUE ELEMENT
         SPACE 1
ALLOC1   CR    R3,R4              END OF CHAIN
         BE    NOALLOC            YES
         L     R1,24(0,R4)        MASK ADDR
         UNPK  MASK1(13),0(7,R1)
         NC    MASK1(12),=12X'0F'
         TR    MASK1(12),=C'0123456789ABCDEF'
         MVI   MASK1+12,C' '
         UNPK  MASK2(13),7(7,R1)
         NC    MASK2(12),=12X'0F'
         TR    MASK2(12),=C'0123456789ABCDEF'
         MVI   MASK2+12,C' '
         MVC   QSTAT(7),=CL7'WAITING'
         CLI   28(R4),C'W'        OPERATOR WAIT
         BE    ALLOC2             YES
         MVC   QSTAT(7),=CL7'PENDING'
         CLI   28(R4),C'P'        OPER REPLY PENDING
         BE    ALLOC2             YES
         MVC   QSTAT(7),=CL7'AQUEUE'
         CLI   28(R4),C'A'        A QUEUE WAIT
         BE    ALLOC2             YES
         MVC   QSTAT(7),=CL7'BQUEUE'
         CLI   28(R4),C'B'        B QUEUE WAIT
         BE    ALLOC2             YES
         MVC   QSTAT(7),=CL7'OWNING'
         CLI   28(R4),C'E'        OWNING
         BE    ALLOC2             YES
         MVC   QSTAT(7),=CL7'UNK-   '
         MVC   QSTAT+6(1),28(R4)
         SPACE 1
ALLOC2   LA    R5,16(0,R4)        ASID -6 ADDR
         BAL   R7,CHKASID         FIND JOBNAME
         MVC   QJOB(8),JOBNAME
         LA    R1,QUELINE
         SR    R0,R0
         IC    R0,XAU
         SVC   35
         MVI   FOUND,X'FF'        ANY OUTPUT
         L     R4,0(0,R4)         NEXT QUEUE ELEMENT
         B     ALLOC1
         SPACE 3
NOALLOC  CLI   FOUND,X'00'        ANY OUTPUT
         BNE   EXIT
         LA    R1,NALOCMSG
         SR    R0,R0
         IC    R0,XAU
         SVC   35
         B     EXIT
         EJECT
FORMAT   MVC   UNIT(3),13(R3)     UNIT NAME
         MVC   VOLSER(6),=CL6' '  NO VOLSER
         TM    18(R3),X'A0'       DASD OR TAPE
         BZ    *+10               NO
         MVC   VOLSER(6),28(R3)   VOLSER
         ST    R4,TEMP
         UNPK  DOUBLE(7),TEMP+1(4)
         NC    DOUBLE(6),=8X'0F'
         TR    DOUBLE(6),=C'0123456789ABCDEF'
         MVC   IOQADDR(6),DOUBLE
         SR    R1,R1
         IC    R1,4(0,R5)         DRIVER ID
         SLL   R1,3
         LA    R1,DRIVRTAB(R1)    DRIVER NAME
         MVC   DRIVER(8),0(R1)
         LA    R1,IOLINE
         SR    R0,R0
         IC    R0,XAU
         SVC   35
         MVI   FOUND,X'FF'
         BR    R7
         EJECT
CHKASID  SR    R14,R14
         ICM   R14,3,6(R5)        ASID
         CH    R14,=H'1'          MASTER
         BNH   CHKASID6           YES
         SLL   R14,2              X 4
         L     R15,16             CVT
         L     R15,556(0,R15)     ASVT
         L     R15,524(R14,R15)   ASCB
         L     R14,56(0,R15)      CSCB
         CLI   28(R14),X'03'      INIT CSCB
         BE    CHKASID2           GET JOBNAME
         SPACE 1
CHKASID1 LA    R14,0(0,R14)
         LTR   R14,R14            CSCB EXIST
         BZ    CHKASID5           NO, PRINT ASID
         MVC   JOBNAME(8),8(R14)
         BR    R7
         SPACE 1
CHKASID2 LR    R15,R14            CSCB
         SR    R1,R1
         ICM   R1,3,30(R15)       ASID
         SPACE 1
CHKASID3 L     R14,0(0,R14)       NEXT CSCB
         LTR   R14,R14            END OF CSCBS
         BNZ   CHKASID4           NO
         LR    R14,R15            ORIG CSCB
         B     CHKASID1
         SPACE 1
CHKASID4 CR    R14,R15            SAME CSCB
         BE    CHKASID1           YES
         CH    R1,30(0,R14)       ASID MATCH
         BNE   CHKASID3           NO, CHECK NEXT CSCB
         B     CHKASID1
         SPACE 1
CHKASID5 MVC   JOBNAME(4),=CL4'AS='
         UNPK  JOBNAME+4(5),6(3,R5)
         NC    JOBNAME+4(4),=4X'0F'
         TR    JOBNAME+4(4),=X'0123456789ABCDEF'
         MVI   JOBNAME+8,C' '
         BR    R7
         SPACE 1
CHKASID6 MVC   JOBNAME(8),=CL8'*MASTER*'
         BR    R7
         EJECT
         USING *,R15
STAEXIT  CH    R0,=H'12'           SDWA GOTTEN
         BE    STAEXIT1            NO, FORCE RETURN
         L     R2,=A(STAERTRY)     LOAD RETRY ADDR
         SETRP RC=4,RETADDR=(2),FRESDWA=YES,DUMP=NO
         SPACE 3
STAEXIT1 L     R0,=A(STAERTRY)     LOAD RETRY ADDR
         LA    R15,4
         BR    R14
         DROP  R15
         SPACE 3
         USING *,R15
STAERTRY L     R12,=A(IEESR03D)    LOAD ENTRY POINT ADDR
         LR    R13,R1              RELOAD WORK AREA ADDR
         DROP  R15
         LA    R1,STAEMSG          ADDRESSING ERROR
         L     R2,XSASAVE          RELOAD XSA ADDR
MSGRTN1  SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         B     EXIT
         EJECT
NOTFOUND CLI   FOUND,X'00'        ANY OUTPUT
         BNE   EXIT
         LA    R1,NFNDMSG
         SR    R0,R0
         IC    R0,XAU
         SVC   35
         SPACE 3
EXIT     EQU   *
         ESTAE 0
         L     R0,SIZE
         L     R14,SAVE
         LR    R1,R13
         FREEMAIN R,LV=(0),A=(1)
         SR    R15,R15
         BR    R14
         EJECT
         LTORG
         SPACE 3
         DS    0F
SIZE     DC    X'F1',AL3(WORKEND-WORK)
NFNDMSG  DC    X'00300100'
         DC    CL48'NO I/O REQUESTS OUTSTANDING'
NALOCMSG DC    X'00300100'
         DC    CL48'NO ALLOCATION REQUESTS OUTSTANDING'
STAEMSG  DC    X'00360100'
         DC    CL50'ERROR ENCOUNTERED IN CONTROL BLOCKS, RETRY COMMAND'
         SPACE 3
DRIVRTAB DC    CL8'IOSRESV '
         DC    CL8'IOSMISC '
         DC    CL8'EXCP    '
         DC    CL8'VSAM    '
         DC    CL8'VTAM    '
         DC    CL8'TCAM    '
         DC    CL8'OLTEP   '
         DC    CL8'PCIFETCH'
         DC    CL8'JES3    '
         DC    CL8'SS1/DSM '
         DC    CL8'PURGE   '
         EJECT
WORK     DSECT
SAVE     DS    F
XSASAVE  DS    F
TEMP     DS    F
         DS    0D
DOUBLE   DS    2F
         SPACE 3
UCBDMSAV DS    4F
UCBDMLOW DS    F
UCBDMCUR DS    F
         SPACE 3
         DS    0F
IOLINE   DS    0CL52
         DS    F
UNIT     DS    CL3
         DS    CL2
VOLSER   DS    CL6
         DS    CL2
JOBNAME  DS    CL8
         DS    CL2
IOQADDR  DS    CL6
         DS    CL2
DRIVER   DS    CL8
         DS    CL2
STATUS   DS    CL6
         DS    CL1
         SPACE 3
         DS    0F
QUELINE  DS    0CL52
         DS    F
QJOB     DS    CL8
         DS    CL2
QSTAT    DS    CL7
         DS    CL2
MASK1    DS    CL12
         DS    CL2
MASK2    DS    CL12
         DS    CL3
         SPACE 1
FOUND    DS    C
TYPE     DS    C
ESTAELST DS    4F
WORKEND  DS    0D
         EJECT
         IHASDWA
         EJECT
DSXSA    DSECT
XSA      DS    0D
XAP      DS    F                  PTR TO XCTL NAME
XAD      DS    F                  DCB PTR
XAX      DS    D                  XCTL NAME
XAE      DS    0C                 ERROR CODE
XAR      DS    F                  PTR TO PARM LIST (REG1)
XAN      DS    0C                 VERB INDEX
XAL      DS    F                  PTR TO LIST POSITION
XAV      DS    D                  VERB
XAS      DS    D                  TEMP SAVE-AREA
XAU      DS    C                  UCM ENTRY INDICATOR
         DS    C                  RESERVED
XAJ      DS    H                  TJID ENTRY INDICATOR
         DS    F                  RESERVED
         SPACE 2
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
