         TITLE 'SE2SE03D -   #A  EXTENDED DISPLAY ACTIVE'
***********************************************************************
***********************************************************************
***                                                                 ***
***                                                                 ***
***                                                                 ***
***                     COMMAND  SUB-SYSTEM                         ***
***                  -------------------------                      ***
***                                                                 ***
***                                                                 ***
***       SE2SE03D -       #A  EXTENDED DISPLAY ACTIVE              ***
***                                                                 ***
***       VERSION -        1.1                                      ***
***                                                                 ***
***       MVS LEVEL -      MVS/SE  3.8.   WITH   SE2 AND SU64.      ***
***                                                                 ***
***       UPDATED -        07/21/81  AXC-CBT HANDLE ESTAE           ***
***                        08/10/81  JCC-BCB TEST FOR END OF ASCBS  ***
***                        01/25/83  $X TESTS CORRECTED      CBT-LMB***
***                                                                 ***
***                                                                 ***
***                                                                 ***
***                                                                 ***
***********************************************************************
***********************************************************************
         EJECT
IEESE03D CSECT
         LR    R12,R15
         USING IEESE03D,R12
         L     R0,SIZE             LOAD GETMAIN AREA SIZE AND SUBPOOL
         GETMAIN R,LV=(0)
         LR    R13,R1
         USING WORK,R13
         ST    R14,SAVRET          SAVE RETURN ADDR
         MVC   PARM(10),=CL10' '
         MVI   LISTIND,C'L'        SET LIST
         MVI   SCANRET,C' '        SET FOUND
         ST    R2,XSASAVE          SAVE XSA ADDR
         USING XSA,R2
         L     R3,XAL              LOAD LIST POINTER
         LA    R3,0(0,R3)          CLEAR HIGH ORDER
         LTR   R3,R3               PARM EXIST
         BZ    STAE                NO, ALL
         LR    R7,R3               SAVE PARM START
         LA    R4,10               MAXLENGTH
         EJECT
PARM1    CLI   0(R3),C' '          END OF PARM
         BE    PARM2               YES, USE IT
         LA    R3,1(0,R3)          INCR INTO PARM
         BCT   R4,PARM1            CHECK NEXT BYTE
         B     ERROR               PARM TOO LONG
         SPACE
PARM2    LA    R6,9                MAX LENGTH-1
         SR    R6,R4               ACTUAL LENGTH
         BNP   ERROR               ZERO LENGTH                     WJB
         EX    R6,JOBMOVE          MOVE PARM INFO
         SPACE 3
STAE     LR    R10,R13             LOAD SAVE AREA ADDR
         B     ESTAEBYP            BYPASS ESTAE LIST
ESTAEOVL ESTAE STAEXIT,CT,MF=L
ESTAEBYP MVC   ESTAELST(16),ESTAEOVL
         LA    R1,ESTAELST
         ESTAE PARAM=(10),MF=(E,(1))
         B     JOBSCAN
         SPACE 3
JOBMOVE  MVC   PARM(0),0(R7)       MOVE PARM INFO
         EJECT
JOBSCAN  SR    R8,R8               CLEAR ASID
         XC    SCANTYPE(2),SCANTYPE CLEAR TYPE IND
         CLI   PARM,C'.'           JOBNAME REQUEST
         BE    JOBOUT              YES, GO PROCESS
         CLI   PARM,C' '           ALL REQUESTED
         BE    JOBOUTX             SET UP ALL, NO LIST
         TM    PARM+2,X'F0'        ONE JOB ONLY REQUEST
         BO    JOBSCAN1            YES
         CLC   PARM+2(2),=C',L'    LIST REQUESTED
         BE    JOBSCAN0            YES, CONTINUE
         MVI   LISTIND,C'D'        TURN OFF LIST
         CLC   PARM+2(2),=C',D'    DISPATCH LIST REQUEST
         BE    JOBSCAN0            NYES, CONTINUE
         MVI   LISTIND,C' '        SHORT LIST
         CLC   PARM+2(2),=C',S'    SHORT LIST REQUEST
         BNE   JOBSCAN0            NO
         MVI   LISTIND,C'S'        SHORT LIST
         SPACE
JOBSCAN0 MVI   SCANTYPE+1,X'04'    TSO USERS
         CLC   PARM(2),=C'$T'      IS REQUEST FOR TSO USERS     CBT-LMB
         BE    JOBOUT              YES, GO PROCESS
         MVI   SCANTYPE+1,X'08'    JOBS
         CLC   PARM(2),=C'$J'      IS REQUEST FOR JOBS          CBT-LMB
         BE    JOBOUT              YES, GO PROCESS
         MVI   SCANTYPE+1,X'0C'    STC
         CLC   PARM(2),=C'$S'      IS REQUEST FOR STC           CBT-LMB
         BE    JOBOUT              YES, GO PROCESS
         MVI   SCANTYPE+1,X'10'    INITS
         CLC   PARM(2),=C'$I'      IS REQUEST FOR INITS         CBT-LMB
         BE    JOBOUT              YES, GO PROCESS
         MVI   SCANTYPE+1,X'18'    ALL JOBS
         CLC   PARM(2),=C'$A'      IS REQUEST FOR INITS         CBT-LMB
         BE    JOBOUT              YES, GO PROCESS
         MVC   DOUBLE(2),=C'00'
         MVZ   DOUBLE(2),PARM
         CLC   DOUBLE(2),=C'00'    DOMAIN SPECIFIED
         BNE   ERROR               NO, PARM ERROR
         PACK  DOUBLE(8),PARM(2)
         CVB   R1,DOUBLE
         STC   R1,DOMAINTS         SAVE SCAN DOMAIN
         MVI   SCANTYPE+1,X'14'    SET DOMAIN SCAN
         B     JOBOUT
         SPACE
JOBSCAN1 LA    R4,PARM             ASID INPUT ADDR
         LA    R5,4                LOAD NUMBER OF DIGITS
         SPACE
JOBSCAN2 LA    R9,9                SET ADD BYTE
         CLI   0(R4),C'A'          VALID CHAR
         BL    ERROR               NO, ERROR
         CLI   0(R4),C'F'          VALID CHAR
         BNH   JOBSCAN3            YES, GO USE
         CLI   0(R4),C'0'          VALID CHAR
         BL    ERROR               NO, ERROR
         CLI   0(R4),C'9'          VALID CHAR
         BH    ERROR               NO, ERROR
         SR    R9,R9               CLEAR ADD BYTE
         SPACE
JOBSCAN3 IC    R7,0(0,R4)          INSERT ASID BYTE
         SLL   R7,28               SHIFT OUT JUNK
         SRL   R7,28               SHIFT BACK
         AR    R9,R7               ADD TO CALC ACTUAL DIGIT
         SLL   R9,28               SHIFT OVER DIGIT
         SLDL  R8,4                SHIFT DIGIT INTO ACCUMULATOR
         LA    R4,1(0,R4)          NEXT ASID BYTE
         BCT   R5,JOBSCAN2         GET NEXT
         B     JOBOUT
         EJECT
JOBOUTX  MVI   LISTIND,C' '
         SPACE
JOBOUT   MVC   JOBMSG1,JOBLINE1
         MVC   JOBMSG2,JOBLINE2
         MVC   JOBMSG3,JOBLINE3
         MVC   JOBMSG4,JOBLINE4
         LR    R5,R8               LOAD ASID
         LTR   R5,R5               ZERO ASID
         BZ    *+6                 YES, BYPASS ADJUST
         BCTR  R5,0                ADJUST ASID
         SLL   R5,2                MULTIPLY BY 4
         L     R4,16               CVT ADDR
         L     R4,556(0,R4)        ASVT ADDR
         L     R6,516(0,R4)        MAX # ASIDS                   JCC
         MH    R6,=H'4'            MULT BY LENGTH                JCC
         LA    R6,528(R4,R6)       FIND END OF ASID LIST         JCC
         ST    R6,ASVTEND          STORE THAT ADDR               JCC
         LA    R4,524(R5,R4)       ASCB SLOT ADDR
         B     JOBOUT4
         SPACE
JOBOUT1  L     R5,0(0,R4)          ASCB ADDR
         L     R6,56(0,R5)         CSCB ADDR
         L     R7,144(0,R5)        LOAD OUCB ADDR
         LH    R9,SCANTYPE         LOAD INCR INTO TABLE
         B     *+4(R9)             BR INTO TABLE
         B     JOBOUT2             ALL TYPES
         B     TSO                 TS USERS
         B     JOB                 JOBS
         B     STC                 STARTED TASKS
         B     JOB                 INITS
         B     DOM                 DOMAIN SCAN
         B     JOBOUT2             ALL JOBS
         SPACE
JOBOUT2  BAL   R11,ASCBFORM        GO FORMAT ASCB INFO
         UNPK  OUCB(7),145(4,R5)   OUCB ADDR
         NC    OUCB(6),=8X'0F'
         TR    OUCB(6),=C'0123456789ABCDEF'
         MVI   OUCB+6,C')'
         L     R6,144(0,R5)        OUCB ADDR
         L     R5,56(0,R5)         CSCB ADDR
         BAL   R11,CSCBFORM        GO FORMAT CSCB INFO
         BAL   R11,OUCBFORM        GO FORMAT OUCB INFO
         CLI   PARM,C'.'           JOBNAME REQUEST
         BNE   JOBOUT2A            NO, BYPASS MATCH
         CLC   PARM+1(8),JOBNAME
         BNE   JOBOUT3             NO MATCH, NO PRINT
JOBOUT2A EQU   *
         CLI   LISTIND,C'D'        DISPATCH LIST
         BE    JOBOUT5             YES, 1 LINE ONLY
         LA    R1,JOBMSG1          LOAD MSG1 ADDR
         BAL   R11,MSGRTN          GO PRINT MSG
         CLI   LISTIND,C'S'        SHORT LIST
         BE    JOBOUT3             YES, 1 LINE ONLY
         LA    R1,JOBMSG2          LOAD MSG2 ADDR
         BAL   R11,MSGRTN          GO PRINT MSG
         CLI   LISTIND,C' '        NO LIST REQUIRED
         BE    JOBOUT3             YES, BYPASS MSG2
         LA    R1,JOBMSG3
         BAL   R11,MSGRTN
         LA    R1,JOBMSG4
         BAL   R11,MSGRTN
         SPACE
JOBOUT3  LTR   R8,R8               ONE JOB ONLY
         BNZ   RETURN              YES, RETURN
         SPACE
JOBOUT4  LA    R4,4(0,R4)          INCR INTO ASVT
         C     R4,ASVTEND          END OF ASVT                   JCC
         BNL   RETURN              YES, RETURN                   JCC
         TM    0(R4),X'80'         AVAILABLE ENTRY
         BO    JOBOUT4             YES, CHECK NEXT
         B     JOBOUT1             GO USE IT
         SPACE 1
JOBOUT5  MVC   JOBMSG1+28(12),=CL12'DISPATCHABLE'
         L     R5,0(0,R4)          ASCB ADDR
         TM    208(R5),X'80'       LSMQ BIT ON
         BZ    *+10                NO, DISPATCHABLE
         MVC   JOBMSG1+28(12),=CL12' '
         LA    R1,JOBMSG1          LOAD MSG1 ADDR
         BAL   R11,MSGRTN          GO PRINT MSG
         B     JOBOUT3
         EJECT
TSO      CLI   28(R6),X'01'        TSO USER
         BE    JOBOUT2             YES, USE IT
         B     JOBOUT4
         SPACE 3
JOB      CLI   28(R6),X'03'        JOB INIT
         BE    JOBOUT2             YES, USE IT
         B     JOBOUT4
         SPACE 3
STC      CLI   28(R6),X'00'        MASTER/AUXTM
         BE    JOBOUT2             YES, USE IT
         CLI   28(R6),X'03'        JOB INIT
         BE    JOBOUT4             YES, BYPASS
         TM    18(R7),X'50'        START/MOUNT
         BZ    JOBOUT4             NO, CHECK NEXT
         B     JOBOUT2             YES, USE IT
         SPACE 3
DOM      CLC   DOMAINTS(1),40(R7)  DOMAIN MATCH     MVS/SE         WJB
         BE    JOBOUT2             YES, USE IT
         B     JOBOUT4
         EJECT
ASCBFORM LTR   R8,R8               ASID PRESENT
         BZ    ASCBFRM1            NO, CONTINUE
         SR    R14,R14             LOAD
         IC    R14,36(0,R5)
         SLL   R14,8                  ASID
         IC    R14,37(0,R5)
         CR    R14,R8              ASID MATCH
         BNE   JOBOUT4             NO, NO PRINT
         SPACE
ASCBFRM1 UNPK  DOUBLE(5),36(3,R5)
         NC    DOUBLE(4),=4X'0F'
         TR    DOUBLE(4),=C'0123456789ABCDEF'
         MVC   ASID(4),DOUBLE      SET ASID IN MSG
         SR    R9,R9
         IC    R9,43(0,R5)         DPRTY TO MSG
         CVD   R9,DOUBLE
         UNPK  DPRTY(3),DOUBLE+6(2)
         OI    DPRTY+2,X'F0'
         LH    R1,122(0,R5)        NON-VAM SLOT COUNT
         CVD   R1,DOUBLE
         UNPK  NVAMSLOT(4),DOUBLE+5(3)
         OI    NVAMSLOT+3,X'F0'
         LH    R1,120(0,R5)        VAM SLOT COUNT
         CVD   R1,DOUBLE
         UNPK  VAMSLOT(5),DOUBLE+5(3)
         OI    VAMSLOT+4,X'F0'
         MVC   SRC-3(2),=C'QP'     SET QUE POSITION IND
         LH    R1,38(0,R5)         DISP POSITION
         CVD   R1,DOUBLE
         UNPK  SRC(2),DOUBLE+6(2)
         OI    SRC+1,X'F0'
         BR    R11
         EJECT
CSCBFORM CLI   28(R5),X'03'        INIT
         BNE   CSCBFRM3            NO, GO HANDLE
         CLC   PARM(2),=C'$S'      STC REQUEST                  CBT-LMB
         BE    JOBOUT4             YES, EXIT
         LA    R9,0(0,R5)          SAVE CSCB ADDR
         SR    R10,R10             INSERT
         IC    R10,30(0,R5)
         SLL   R10,8               ASID
         IC    R10,31(0,R5)
         SPACE
CSCBFRM1 L     R5,0(0,R5)          NEXT CSCB
         LA    R5,0(0,R5)          CLEAR HIGH ORDER
         LTR   R5,R5               END OF CSCBS
         BNZ   *+10                NO, CONTINUE
         LR    R5,R9               LOAD CSCB ADDR
         B     CSCBFRM2            CONTINUE
         CR    R5,R9               SAME CSCB
         BE    CSCBFRM2            YES, USE IT
         CH    R10,30(0,R5)        SAME ASID
         BNE   CSCBFRM1            NO, CHECK NEXT
         CLC   PARM(2),=C'$I'      REQUEST FOR INITS            CBT-LMB
         BE    JOBOUT4             YES, BYPASS
         B     CSCBFRM3
         SPACE
CSCBFRM2 CLC   PARM(2),=C'$I'      REQUEST FOR INITS            CBT-LMB
         BNE   JOBOUT4             NO, BYPASS
         SPACE
CSCBFRM3 MVC   JOBNAME(8),8(R5)
         CLC   ASID(4),=C'0001'
         BCR   7,R11
         MVC   JOBNAME(8),=CL8'MASTER'
         BR    R11
         EJECT
OUCBFORM LH    R9,82(0,R6)         SWAP IN SIZE         MVS/SE     WJB
         CVD   R9,DOUBLE
         UNPK  SWAPIN(3),DOUBLE+6(2)
         OI    SWAPIN+2,X'F0'
         LH    R9,80(0,R6)         SWAP OUT SIZE        MVS/SE     WJB
         CVD   R9,DOUBLE
         UNPK  SWAPOUT(3),DOUBLE+6(2)
         OI    SWAPOUT+2,X'F0'
         CLI   41(R6),X'00'        JOB ON IN QUEUE      MVS/SE     WJB
         BE    OUCBFRM0            YES, NO SWAP REASON
         MVC   SRC-3(2),=C'SR'     SET COMMENT TO SWAP REASON
         UNPK  SRC(3),41(2,R6)     SWAP REASON         MVS/SE      WJB
         NC    SRC(2),=8X'0F'
         TR    SRC(2),=C'0123456789ABCDEF'
         MVI   SRC+2,C')'
         CLI   38(R6),X'7F'        MVS/SE LOGICAL SWAP
         BNE   OUCBFRM0            NO
         MVC   SRC(2),=C'LG'
         SPACE 1
OUCBFRM0 LH    R9,42(0,R6)         SWAP COUNT          MVS/SE      WJB
         CVD   R9,DOUBLE
         UNPK  SWP(4),DOUBLE+5(3)
         OI    SWP+3,X'F0'
         LA    R9,16(0,R6)         OUCB FLAGS BEGIN
         LA    R10,QFL             OUTPUT FLAGS BEGIN
         LA    R7,6                NUMBER OF FLAG BYTES
         SPACE
OUCBFRM1 UNPK  0(3,R10),0(2,R9)    UNPACK A FLAG BYTE
         NC    0(2,R10),=4X'0F'
         TR    0(2,R10),=C'0123456789ABCDEF'
         MVI   2(R10),C')'            AND TRANSLATE IT
         LA    R9,1(0,R9)          NEXT FLAG BYTE
         LA    R10,6(0,R10)        NEXT OUTPUT AREA
         BCT   R7,OUCBFRM1         GET NEXT
         UNPK  0(3,R10),1(2,R9)    LAST FLAG BYTE
         NC    0(2,R10),=4X'0F'
         TR    0(2,R10),=C'0123456789ABCDEF'
         MVI   2(R10),C')'
         EJECT
OUCBFRM2 UNPK  ASCB(7),45(4,R6)    ASCB ADDR         MVS/SE        WJB
         NC    ASCB(6),=8X'0F'
         TR    ASCB(6),=C'0123456789ABCDEF'
         MVI   ASCB+6,C')'
         UNPK  DOMAIN(3),40(2,R6)  DOMAIN NUMBER     MVS/SE        WJB
         NC    DOMAIN(2),=8X'0F'
         TR    DOMAIN(2),=C'0123456789ABCDEF'
         MVI   DOMAIN+2,C')'
         UNPK  NPG(3),185(2,R6)    NEW PERFORM NUMBER
         NC    NPG(2),=8X'0F'
         TR    NPG(2),=C'0123456789ABCDEF'
         MVI   NPG+2,C'/'
         UNPK  RPG(3),181(2,R6)    RESET PERFORM NUMBER
         NC    RPG(2),=8X'0F'
         TR    RPG(2),=C'0123456789ABCDEF'
         MVI   RPG+2,C'/'
         UNPK  SPG(3),183(2,R6)    SPECIFIED PERFORM NUMBER
         NC    SPG(2),=8X'0F'
         TR    SPG(2),=C'0123456789ABCDEF'
         MVI   SPG+2,C')'
         UNPK  NDP(3),26(2,R6)     NEW DPRTY
         NC    NDP(2),=8X'0F'
         TR    NDP(2),=C'0123456789ABCDEF'
         MVI   NDP+2,C'/'
         UNPK  RDP(3),27(2,R6)     REAL DPRTY
         NC    RDP(2),=8X'0F'
         TR    RDP(2),=C'0123456789ABCDEF'
         MVI   RDP+2,C')'
         BR    R11
         EJECT
         USING *,R15
STAEXIT  CH    R0,=H'12'           SDWA GOTTEN
         BE    STAEXIT1            NO, FORCE RETURN
         L     R2,=A(STAERTRY)     LOAD RETRY ADDR
         SETRP RC=4,RETADDR=(2),FRESDWA=YES,DUMP=NO
         SPACE 3
STAEXIT1 L     R0,=A(STAERTRY)     LOAD RETRY ADDR
         LA    R15,4
         BR    R14
         DROP  R15
         SPACE 3
         USING *,R15
STAERTRY L     R12,=A(IEESE03D)    LOAD ENTRY POINT ADDR
         LR    R13,R1              RELOAD WORK AREA ADDR
         DROP  R15
         LA    R1,STAEMSG          ADDRESSING ERROR
         L     R2,XSASAVE          RELOAD XSA ADDR
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         B     RETURN
         EJECT
MSGRTN   MVI   SCANRET,C'P'
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         BR    R11
         SPACE 3
ERROR    LA    R11,RETURN          LOAD RET ADDR
         LA    R1,ERRMSG           PARM ERROR
         B     MSGRTN              GO ISSUE WTO
         SPACE 3
RETURN   CLI   SCANRET,C' '        ANY FOUND
         BE    NOTFOUND            NO, TELL OPERATOR
         ESTAE 0
         L     R0,SIZE             LOAD GETMAIN SIZE AND SUBPOOL
         LR    R1,R13              LOAD GETMAIN AREA ADDR
         L     R14,SAVRET          RETURN ADDR
         FREEMAIN R,LV=(0),A=(1)
         SR    R15,R15
         BR    R14
         SPACE 3
NOTFOUND LA    R11,RETURN
         LA    R1,NFNDMSG
         B     MSGRTN
         EJECT
         LTORG
         DS    0F
SIZE     DC    X'F1',AL3(WORKEND-WORKSTRT)
         SPACE 3
         DS    0F
STAEMSG  DC    X'00360100'
         DC    CL50'ERROR ENCOUNTERED IN CONTROL BLOCKS, RETRY COMMAND'
         SPACE 3
         DS    0F
ERRMSG   DC    X'00360100'
         DC    CL50'PARAMETER ERROR'
         SPACE 3
         DS    0F
NFNDMSG  DC    X'00360100'
         DC    CL50'REQUESTED TYPE OR ASID NOT FOUND'
         EJECT
         DS    0F
JOBLINE1 DC    X'00320100'
         DC    CL9' '
         DC    C'(    ) '
         DC    C'DP(   ) '
         DC    C'SWL(   /   ) '
         DC    C'SWC(    )'
         SPACE 3
         DS    0F
JOBLINE2 DC    X'00320100'
         DC    CL4' '
         DC    C'PERF-NRS(  /  /  ) '
         DC    C'DPRTY-NR(  /  ) '
         DC    C'DMN(  )'
         SPACE 3
         DS    0F
JOBLINE3 DC    X'00320100'
         DC    CL4' '
         DC    C'Q(  ) S(  ) Y(  ) A(  ) '
         DC    C'T(  ) E(  ) U(  ) '
         SPACE 3
         DS    0F
JOBLINE4 DC    X'00320100'
         DC    CL4' '
         DC    C'AS(      ) QP(  ) '
         DC    C'OU(      ) A(    /     )'
         EJECT
WORK     DSECT
WORKSTRT DS    0D
SAVRET   DS    18F
DOUBLE   DS    2F
XSASAVE  DS    F
ASVTEND  DS    F                                                 JCC
PARM     DS    3F
SCANTYPE DS    H
LISTIND  DS    C
DOMAINTS DS    C
SCANRET  DS    C
         EJECT
         DS    0F
JOBMSG1  DS    0CL50
         DS    F
JOBNAME  DS    CL10
ASID     DS    CL9
DPRTY    DS    CL9
SWAPIN   DS    CL4
SWAPOUT  DS    CL9
SWP      DS    CL5
         SPACE 3
         DS    0F
JOBMSG2  DS    0CL50
         DS    F
         DS    CL13
NPG      DS    CL3
RPG      DS    CL3
SPG      DS    CL13
NDP      DS    CL3
RDP      DS    CL8
DOMAIN   DS    CL3
         SPACE 3
         DS    0F
JOBMSG3  DS    0CL50
         DS    F
         DS    CL6
QFL      DS    CL6
SFL      DS    CL6
YFL      DS    CL6
AFL      DS    CL6
TFL      DS    CL6
EFL      DS    CL6
UFL      DS    CL4
         SPACE 3
         DS    0F
JOBMSG4  DS    0CL50
         DS    F
         DS    CL7
ASCB     DS    CL11
SRC      DS    CL7
OUCB     DS    CL10
NVAMSLOT DS    CL5
VAMSLOT  DS    CL6
ESTAELST DS    4F
WORKEND  DS    0F
         EJECT
XSA      DSECT
XAP      DS    F
XAD      DS    F
XAX      DS    D
XAE      DS    0C
XAR      DS    F
XAN      DS    0C
XAL      DS    F
XAV      DS    D
XAS      DS    D
XAU      DS    C
         DS    C
XAJ      DS    H
         DS    F
         EJECT
         IHASDWA
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
