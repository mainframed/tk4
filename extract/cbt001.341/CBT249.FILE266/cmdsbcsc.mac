         TITLE 'CMDSBCSC -   CROSS-SYSTEM CONTROL MODULE'
***********************************************************************
***********************************************************************
***                                                                 ***
***                                                                 ***
***                                                                 ***
***                     COMMAND  SUB-SYSTEM                         ***
***                  -------------------------                      ***
***                                                                 ***
***                                                                 ***
***       CMDSBCSC -       CROSS-SYSTEM CONTROL MODULE              ***
***                                                                 ***
***       VERSION -        2.0                                      ***
***                                                                 ***
***       MVS LEVEL -      MVS/SE  3.8 WITH OR WITHOUT SE2/SP1      ***
***                                                                 ***
***       UPDATED -        02/13/81                                 ***
***                                                                 ***
***       WARNINGS -       THE CSCDATA DATA SET USED BY THIS        ***
***                        MODULE MUST BE INITIALIZED WITH 16       ***
***                        BYTES OF BINARY ZEROES.  ALLOCATE        ***
***                        THIS DATA SET WITH RECFM=U,LRECL=0,      ***
***                        BLKSIZE=16.                              ***
***                                                                 ***
***                                                                 ***
***                                                                 ***
***********************************************************************
***********************************************************************
         EJECT
CMDSBCSC CSECT
         SAVE  (14,12)                   SAVE REGISTERS
         LR    R3,R15                    ESTABLISH BASE REGISTER
         USING CMDSBCSC,R3
         ST    R13,SAVE+4                CALLERS SAVE AREA ADDRESS
         LA    R13,SAVE                  GET OUR SAVE AREA ADDRESS
         LA    R12,0(0,R1)               COMM AREA ADDRESS
         USING AREA,R12                  ADDRESSABILITY FOR COMM AREA
         LA    R2,XSA
         ST    R2,SAVER2
         ST    R12,SAVER12
         L     R1,16                     CVT
         L     R1,196(0,R1)              SMCA
         MVC   CSCSID(4),16(R1)          SAVE SYSTEM ID
         MVC   CSCIN+62(2),=H'19069'     SET FULL BLOCKSIZE
         OPEN  (CSCIN,(INPUT))           OPEN COMMUNICATION DATA SET
         TM    CSCIN+48,X'10'            Q. WAS OPEN OK ?
         BZ    CSCEXIT                   A. NO TURN OFF FACILITY
         MODESET KEY=ZERO,MODE=SUP       SWITCH INTO PROTECT KEY ZERO
         SPACE 1
***********************************************************************
*  WE NOW WAIT FOR TWENTY SECONDS, AFTER WHICH A READ WILL BE ISSUED  *
*             TO THE COMMUNICATIONS DATA SET.                         *
***********************************************************************
CSC      STIMER WAIT,DINTVL=CSCWAIT
         L     R1,16                     CVT
         L     R1,0(0,R1)                TCB WORDS
         L     R1,12(0,R1)               CURRENT ASCB
         L     R1,144(0,R1)              OUCB
         OI    17(R1),X'80'              SET NON-SWAPPABLE
         L     R1,RESETCNT               RESET COUNT
         BCT   R1,CSC1                   BR AROUND RESET
         L     R1,=F'-1'                 FORCE NEVER RESET
         MVC   CSCWAIT+4(4),=CL4'2000'   20 SECOND WAIT
         MVC   PREVCNT(4),=F'3'
         MVC   PREVSTRT(4),=F'3'
         SPACE 1
CSC1     ST    R1,RESETCNT               SAVE NEW COUNT
         BAL   R10,CSCREAD               READ CSC DATA
         CLI   CSCCMD,X'00'              COMMAND REQUEST
         BNE   CSCCOM                    YES
         SPACE 1
CSC2     CLC   CSCSID(4),4(R11)    OUTPUT OR COM REQUEST FOR THIS SYS
         BNE   CSC                 NO
         CLI   0(R11),X'00'        OUTPUT REQUEST
         BE    CSCOUT$             YES
         B     CSCLNK              NO, CMD REQUEST
         EJECT
CSCCOM   CLI   CSCCMD,C'*'         CROSS-SYSTEM TERMINATE REQUEST
         BE    CSCEXIT             YES
         CLC   0(8,R11),=8X'00'    CROSS-SYSTEM BUSY
         BE    CSCCOM1             NO
         MVI   CSCCMD,X'00'
         MVC   COMSID(4),4(R11)
         LA    R1,COMMSG           BUSY MSG
         SR    R0,R0
         IC    R0,XAU
         SVC   35
         B     CSC2
         SPACE 1
CSCCOM1  SR    R1,R1
         IC    R1,XAU
         STH   R1,8(0,R11)         SAVE UCM ID
         MVC   0(4,R11),CSCSID     SENDING SYSID
         XC    10(2,R11),10(R11)
         MVC   12(4,R11),=F'148'   COMMAND RECORD LENGTH
         MVC   16(78,R11),CSCCMD   MOVE COMMAND TO RECORD
         MVC   96(52,R11),CSCHDR   MOVE HEADER TO RECORD
         BAL   R10,CSCSYS          MOVE RECEIVING SYSID TO RECORD
         BAL   R10,CSCWRITE        REWRITE RECORD
         MVC   RECVMSG+24(1),16(R11)
         SR    R0,R0
         IC    R0,XAU
         LA    R1,RECVMSG
         SVC   35
         MVI   CSCCMD,X'00'
         B     CSC
         SPACE 3
CSCOUT$  LH    R8,8(0,R11)         UCM ID
         LH    R9,10(0,R11)        WTO COUNT
         LA    R1,96(0,R11)        HEADER ADDR
         LR    R0,R8               UCM ID
         SVC   35
         LA    R11,148(0,R11)      1ST WTO ADDR
         SPACE 1
CSCOUT1  LR    R0,R8               UCM ID
         MVC   RECWTO(80),0(R11)
         LA    R1,RECWTO           MSG ADDR
         SVC   35
         LH    R1,0(0,R11)         WTO LENGTH
         LA    R11,0(R1,R11)       NEXT MSG
         BCT   R9,CSCOUT1
         BAL   R10,CSCCLEAR        RESET DATASET TO ALLOW REUSE
         B     CSC
         EJECT
CSCLNK   MVC   4(4,R11),0(R11)     SET UP RECEIVING SYSID
         LA    R1,148(0,R11)       1ST WTO SLOT
         ST    R1,0(0,R11)         SAVE ADDR
         LA    R1,148
         ST    R1,RECORD+12        SET BASE LENGTH
         BAL   R10,CSCSET          SET UP ENTRY
         B     CSCLNK1             BYPASS COMMAND ENTRY IF INVALID CMD
         LA    R2,EXITLIST         PARM LIST FOR COMMAND
         BALR  R14,R15             BR TO COMMAND MODULE
         SPACE 3
         BALR  R15,0
         USING *,R15
         L     R3,=A(CMDSBCSC)     RELOAD ORIG ENTRY POINT
         DROP  R15
         SPACE 1
         L     R4,MODLOC
         DELETE EPLOC=(R4)
         SPACE 1
         L     R2,SAVER2
         L     R12,SAVER12
         LA    R13,SAVE
         SPACE 1
CSCLNK1  XC    RECORD(4),RECORD    INDICATE OUTPUT READY
         BAL   R10,CSCWRITE        REWRITE CSC DATA
         B     CSC
         EJECT
CSCSYS   LA    R1,16(0,R11)        COMMAND BEGIN
         LA    R8,94(0,R11)        COMMAND END
         SPACE 1
CSCSYS1  CLC   0(2,R8),=C'S='      SYSID PARM
         BE    CSCSYS3             YES
         BCTR  R8,0
         CR    R1,R8               SYSID PARM MISSING
         BNE   CSCSYS1             NO
         SPACE 1
CSCSYS2  LA    R1,CSCERR           ERROR MESSAGE
         SR    R0,R0
         IC    R0,XAU
         SVC   35
         MVI   CSCCMD,X'00'
         B     CSC
         SPACE 1
CSCSYS3  MVC   4(4,R11),2(R8)      SET UP RECEIVING SYSID
         LA    R1,CSCSTABL
         BCTR  R8,0
         MVC   0(8,R8),=CL8' '
         SPACE 1
CSCSYS4  CLC   4(4,R11),0(R1)      VALID
         BCR   8,R10               YES
         LA    R1,4(0,R1)
         CLC   0(4,R1),=F'0'       END OF SYSID TABLE
         BNE   CSCSYS4             NO, TRY NEXT
         B     CSCSYS2             INVALID, ERR MSG
         EJECT
CSCREAD  MVC   CSCIN+62(2),=H'19069' FULL BLOCKSIZE
***********************************************************************
*                                                                     *
*               READ THE COMMUNICATIONS DATA SET                      *
*                                                                     *
***********************************************************************
*
         POINT CSCIN,RECORD1
         READ  DECB1,SF,CSCIN,RECORD,'S'
         CHECK DECB1
         LA    R11,RECORD
         CLC   0(12,R11),=XL12'00' ZERO REQUEST
         BE    CSCREAD1            NO
         CLC   0(96,R11),PREVREC   SAME REQUEST
         BNE   CSCREAD1            NO
         L     R1,PREVCNT
         BCT   R1,CSCREAD2         CONTINUE
         L     R1,PREVSTRT         SET NEW COUNT
         ST    R1,PREVCNT          SAVE COUNT
         LA    R10,CSC             NEW RETURN ADDR
         MVC   TIMESID(4),4(R11)
         LA    R1,TIMEMSG          TIMEOUT MSG
         SR    R0,R0
         IC    R0,XAU
         SVC   35
         B     CSCCLEAR
         SPACE 1
CSCREAD1 MVC   PREVREC(96),0(R11)  SAVE NEW REQUEST
         LA    R1,5                SET NEW COUNT
         SPACE 1
CSCREAD2 ST    R1,PREVCNT          SAVE COUNT
         BR    R10
         EJECT
CSCCLEAR XC    RECORD(16),RECORD
         SPACE 1
CSCWRITE L     R1,RECORD+12        RECORD LENGTH
         LTR   R1,R1               ZERO LENGTH
         BNZ   CSCWRIT1            NO
         LA    R1,16               MINIMUM LENGTH
         SPACE 1
CSCWRIT1 STH   R1,CSCOUT+62       SAVE LENGTH FOR WRITE
         LR    R2,R1
***********************************************************************
*                                                                     *
*              RE-WRITE THE COMMUNICATIONS DATA SET RECORD            *
*                                                                     *
***********************************************************************
         TM    CSCOUT+48,X'10'            Q. WAS OPEN DONE ?
         BO    CSCDOIO                    A. YES DO IO OPERATION
         OPEN  (CSCOUT,(OUTPUT))          OPEN COMMUNICATIONS DATA SET
         TM    CSCOUT+48,X'10'            Q. OPEN MAKE IT ?
         BZ    CSCEXIT                    A. NO - TURN OFF FACILITY
CSCDOIO  POINT CSCOUT,RECORD1
         WRITE DECB2,SF,CSCOUT,RECORD,'S'
         CHECK DECB2
         MVC   RESETCNT(4),=F'20' RESET IN 100 SECONDS
         MVC   CSCWAIT+4(4),=CL4'0500'  5 SECOND STIMER WAIT
         MVC   PREVCNT(4),=F'5'
         MVC   PREVSTRT(4),=F'5'
         BR    R10
         SPACE 3
         USING CSCENTRY,R15
CSCENTRY STM   R13,R14,8(R2)       SAVE WORK REGS
         L     R14,RECORD+12       CURRENT LENGTH
         AH    R14,0(0,R1)         ADD WTO LENGTH
         ST    R14,RECORD+12       SAVE NEW LENGTH
         L     R14,RECORD          NEXT WTO SLOT
         LH    R13,0(0,R1)         WTO LENGTH
         BCTR  R13,0
         EX    R13,CSCMOVE         MOVE WTO TO OUTPUT
         LA    R14,1(R13,R14)      NEXT WTO SLOT
         ST    R14,RECORD          SAVE NEXT SLOT ADDR
         LH    R14,RECORD+10       WTO COUNT
         LA    R14,1(0,R14)        ADD 1
         STH   R14,RECORD+10       SAVE WTO COUNT
         LM    R13,R14,8(R2)       RELOAD ORIG REGS
         BR    R14
         SPACE 1
CSCMOVE  MVC   0(0,R14),0(R1)
         DROP  R15
         EJECT
CSCSET   TR    16(1,R11),COMTAB    MODULE NAME INDEX
         SR    R4,R4
         IC    R4,16(0,R11)        MODULE NAME INDEX
         SLL   R4,3                MULTIPLY BY 8
         LTR   R4,R4               INVALID CSC COMMAND DETECTED
         BZ    CSCSET4             YES, DO DUMMY OUTPUT
         LA    R4,MODLIST(R4)      MODULE NAME ADDR
         SR    R15,R15
         CLI   17(R11),C' '        SUB-PARM EXIST
         BE    CSCSET0             NO
         LA    R15,17(0,R11)       SUBPARM ADDR
         SPACE 1
CSCSET0  ST    R15,EXITLIST+20     SAVE SUB-PARM ADDR
         ST    R4,MODLOC           SAVE EP NAME LOCATION
         LOAD  EPLOC=(R4)
         LR    R5,R0               MODULE ADDR
         LA    R15,0(0,R5)         MODULE ADDR
         LA    R6,0(0,R1)          MODULE DOUBLEWORDS
         SLL   R6,3                MODULE LENGTH
         SH    R6,=H'6'            ADJUST SCAN LENGTH
         SPACE  1
CSCSET1  CLC   0(6,R5),=X'430020280A23'   WTO INSTRUCTIONS
         BE    CSCSET3             YES
         SPACE 1
CSCSET2  LA    R5,2(0,R5)          NEXT INSTRUCTION
         BCTR  R6,0
         BCT   R6,CSCSET1          PROCESS NEXT
         B     4(R10)
         SPACE 1
CSCSET3  MVC   0(6,R5),=X'58F0200005EF'
         B     CSCSET2
         SPACE 1
CSCSET4  L     R14,RECORD+12       CURRENT RECORD LENGTH
         LA    R1,CSCINV           MSG TO INSERT
         AH    R14,0(0,R1)         ADD MSG LENGTH
         ST    R14,RECORD+12       SAVE NEW RECORD LENGTH
         L     R14,RECORD          OUTPUT SLOT ADDRESS
         LH    R6,0(0,R1)          WTO LENGTH
         BCTR  R6,0                ADJUST FOR EXECUTED MOVE
         EX    R6,CSCMOVE          MOVE MSG TO RECORD
         MVC   RECORD+10(2),=H'1'  WTO COUNT = 1
         BR    R10
         SPACE 3
CSCEXIT  MODESET KEY=NZERO,MODE=PROB
         TM    CSCOUT+48,X'10'            Q. WAS OPEN DONE ?
         BZ    CLOSE2                     A. NO SKIP CLOSE
         CLOSE (CSCOUT)
CLOSE2   TM    CSCIN+48,X'10'            Q. WAS OPEN DONE ?
         BZ    LASTMSG                   A. NO SKIP CLOSE
         CLOSE (CSCIN)
LASTMSG  WTO   'CMD SUBSYS -   CSC FACILITY DISABLED'
         L     R13,SAVE+4
         RETURN (14,12),RC=0
         EJECT
         LTORG
         SPACE 3
RECORD1  DC    A(256)              TTRZ RECORD 1
SAVE     DS    18F
         DS    0D
CSCWAIT  DC    CL8'00002000'
CSCSID   DS    F
MODLOC   DS    F
SAVER2   DS    F
SAVER12  DS    F
RESETCNT DC    F'-1'
PREVCNT  DC    F'3'
PREVSTRT DC    F'3'
PREVREC  DC    CL96' '
RECWTO   DC    CL80' '
         SPACE 3
EXITLIST DC    A(CSCENTRY)
         DC    11F'0'
         EJECT
CSCINV   DS    0CL48
         DC    X'00300100'
         DC    CL44'CMD SUBSYS -   CSC INVALID COMMAND'
         SPACE 3
CSCERR   DS    0CL48
         DC    X'00300100'
         DC    CL44'CMD SUBSYS -   CSC PARAMETER ERROR'
         SPACE 3
RECVMSG  DS    0CL48
         DC    X'00300100'
         DC    CL44'CMD SUBSYS -   CSC #X COMMAND ACCEPTED'
         SPACE 3
COMMSG   DS    0CL48
         DC    X'00300100'
         DC    CL40'CMD SUBSYS -   CSC BUSY, CMD PENDING ON '
COMSID   DC    CL4' '
         SPACE 3
TIMEMSG  DS    0CL52
         DC    X'00340100'
         DC    CL43'CMD SUBSYS -   CSC TIMEOUT, CMD PENDING ON '
TIMESID  DC    CL4' ',C' '
         EJECT
         DS    0D
COMTAB   DC    193X'00'
*                 A B C D E F G H I
         DC    X'04000A031105000C09',XL7'00'
*                 J K L M N O P Q R
         DC    X'0B00020D01100E0F06',XL8'00'
*                 S T U V W X Y Z
         DC    X'0700000800030012',XL23'00'
         SPACE 3
MODLIST  DC    CL8' '
         DC    CL8'CSCSA03D'  1
         DC    CL8'CSCSC03D'  2
         DC    CL8'CSCSD03D'  3
         DC    CL8'CSCSE03D'  4
         DC    CL8'CSCSF03D'  5
         DC    CL8'CSCSG03D'  6
         DC    CL8'CSCSH03D'  7
         DC    CL8'CSCSI03D'  8
         DC    CL8'CSCSJ03D'  9
         DC    CL8'CSCSK03D'  A
         DC    CL8'CSCSL03D'  B
         DC    CL8'CSCSM03D'  C
         DC    CL8'CSCSO03D'  D
         DC    CL8'CSCSP03D'  E
         DC    CL8'CSCSQ03D'  F
         DC    CL8'CSCSR03D'  10
         DC    CL8'CSCSS03D'  11
         DC    CL8'CSCSZ03D'  12
         DC    CL8'        '
         DC    CL8'        '
         DC    CL8'        '
         EJECT
CSCIN    DCB   DDNAME=CSCDATA,DSORG=PS,RECFM=U,BLKSIZE=19069,          X
               MACRF=(RP),BUFNO=1
CSCOUT   DCB   DDNAME=CSCDATA,DSORG=PS,RECFM=U,BLKSIZE=19069,          X
               MACRF=(WP),BUFNO=1
         SPACE 5
RECORD   DS    CL19069
         EJECT
AREA     DSECT
SSVT     DS    H
SSVTFNUM DS    H
SSVTFCOD DS    XL256
SSVTFRTN DS    0F
SSVTFUNC DS    0F
SSVTFUN1 DS    F
         DS    8F
SSVTMSGT DS    F
SSVTLIST DS    2F
SSVTECB  DS    F
         DS    0D
SSVTWAIT DS    CL8
SSVTTIME DS    F
SSVTASCB DS    0F
SSVTSTAT DS    X
         DS    XL3
SSVTUMID DS    F
         SPACE 3
CMDTABLE DS    20F
CMDEND   DS    F
         EJECT
         DS    0D
USERWORK DS    0CL228
DOUBLE   DS    D
CMDSAVE  DS    18F
COMMAND  DS    CL80
INCONS   DS    CL2
         SPACE 2
         DS    0F
WTOLIST  DS    0CL52
         DS    CL19
CMDID    DS    C
         DS    CL5
UCMID    DS    CL2
         DS    CL2
SYSID    DS    CL4
         DS    CL2
YEAR     DS    CL2
         DS    C
DAY      DS    CL3
         DS    CL2
HOUR     DS    CL2
         DS    C
MINUTE   DS    CL2
         DS    CL4
PADDING  DS    CL12
         SPACE 2
XSA      DS    0CL48
         DS    5F
XAL      DS    F
XAT      DS    F
         DS    F
XAS      DS    2F
XAU      DS    X
         DS    XL7
         SPACE 2
CMD##    DS    CL78
HDRMSG   DS    CL52
DISBL    DS    CL48
         DS    0F
CSCHDR   DS    CL52
CSCCMD   DS    CL78
CSCSTABL DS    CL48
         SPACE 2
AREAEND  DS    0D
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
