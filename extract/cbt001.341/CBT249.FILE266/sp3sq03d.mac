         TITLE 'IEESQ03D -   #Q  ENQUEUE ANALYZER'
***********************************************************************
***********************************************************************
***                                                                 ***
***                                                                 ***
***                                                                 ***
***                     COMMAND  SUB-SYSTEM                         ***
***                  -------------------------                      ***
***                                                                 ***
***                                                                 ***
***       IEESQ03D -       #Q  ENQUEUE ANALYZER                     ***
***                                                                 ***
***       VERSION -        1.3                                      ***
***                                                                 ***
***       MVS LEVEL -      MVS/SE  3.8.   MVS/SP1.2-MVS/SP1.3       ***
***                                                                 ***
***       UPDATED -  07/21/81  -AXC-CBT HANDLE ESTAE                ***
***       UPDATED -  11/13/81  -DED-HNB MVS/SP 1.3                  ***
***       UPDATED -   9/17/82  -ADDED TOKEN FOR INCREASED           ***
***                             PROCESSING SP1.3 --- CBT            ***
***                            -CHANGED SUBPOOL PROCESSING          ***
***       UPDATED -  10/01/82  -CHGD SO OUTPUT DOESN'T HAVE UNPRINT-***
***                             ABLE CHARS WHEN EXECUTING VIA #     ***
***       UPDATED -  01/26/83  -AXC-CBT CHANGE ESTAE PARM LEN       ***
***                                                                 ***
***********************************************************************
*********************************************************************
*                                                                   *
*                      H N B  -  NOTES                              *
*                                                                   *
*                                                                   *
* NOTE - THIS CODE HAS NOT BEEN TESTED WITH A GRS RING              *
*        SCOPE=GLOBAL WILL HAVE TO BE SPECIFIED ON THE GQSCAN MACRO *
*        AND THE GQSCAN HAS TO RUN AUTHORIZED KEY ZERO.             *
*                                                                   *
* NOTE - THE 'SYSNAME=' IN IEASYS00 SHOULD SPECIFY YOUR SMFID TO    *
*        GET THE CORRECT SYSTEM NAME IN THE 'SYSTEM' FIELD,         *
*        OTHERWISE (NONA) "NONAME" WILL BE DISPLAYED.               *
*                                                                   *
* NOTE - THE "SCANAREA" MIGHT HAVE TO BE MADE LARGER FOR A SYSTEM   *
*        WITH MANY DATASETS IN USE.  IF IT IS CHANGED, THE 2ND      *
*        OPERAND ON THE "AREA" OPERAND OF THE "GQSCAN" MACRO MUST   *
*        ALSO BE CHANGED.                                           *
*                                                                   *
* NOTE - TOKEN ADDED TO GQSCAN TO ALLOW TO PROCESSING OF LONGER     *
*        ENQUE LISTS                                                *
*                                                                   *
*********************************************************************
***********************************************************************
         EJECT
IEESQ03D CSECT
         LR    R12,R15            SET ADDRESSABILITY
         USING IEESQ03D,R12
**********************************************************************
*  THE FOLLOWING O INSTRUCTION IS USED TO DETERMINE THE SUBPOOL NUMBER
*  IF RUNNING AS A SUBSYSTEM, THEN SUBPOOL 241 IS USED.
*  IF RUNNING UNDER TSO, THEN CMDSBTSO WILL MODIFY THE MASK BIT OF
*  'F1000000' TO A MASK BIT OF '00000000' AND THUS CAUSE SUBPOOL 0
*  TO BE USED. IN ORDER FOR THIS TO TAKE PLACE, THE EXACT CODING
*  CONVENTIONS USED HERE FOR THE GETMAIN MUST BE FOLLOWED:
**********************************************************************
         LA    R0,PARTWORK        SIZE OF SAVE AND WORK AREA
         A     R0,=F'00102400'    ADD IN THE SCANAREA SIZE
         O     R0,SUB241          SUBPOOL MASK
         GETMAIN R,LV=(0)
         LR    R10,R1
         USING WORK,R10
         USING XSA,R2
         B     ESTAEBYP            BYPASS ESTAE LIST
ESTAEOVL ESTAE STAEXIT,CT,MF=L
ESTAEBYP MVC   ESTAELST(20),ESTAEOVL     AXC-CBT
         LA    R1,ESTAELST
         ESTAE PARAM=(10),MF=(E,(1))
         ST    R14,SAVRET          PUT RETURN ADDRESS IN UNUSED SLOT
         ST    R2,XSASAVE          SAVE XSA ADDR
         MVC   MAJLINE(4),=X'00360100'
         MVC   MINLINE(4),=X'00360100'
         MVC   JOBLINE(4),=X'00360100'
         MVC   MAJLINE+4(8),=CL8'MAJOR='
         MVC   MINLINE+4(8),=CL8'MINOR='
         MVC   MAJOR(44),=CL44' '
         MVC   MINOR(44),=CL44' '
         MVC   TKN,=F'0'               ZERO OUT TOKEN
START    MVI   TKNSW,X'00'             INITIALIZE TOKEN SWITCH
         LA    R8,SCANAREA             ADDR OF RETURNED DATA
         LA    R9,SYSDSN               ADDR OF SYSDSN MAJOR NAME
         LA    R6,SCANSAVE             ADDR GQSCAN SAVE AREA
         EJECT
SCAN     GQSCAN AREA=((R8),102400),  ADDR AND LENGTH OF INFO RETURNED  X
               REQLIM=MAX,             MAX NUM OF OWNERS TO BE RETURNEDX
               SCOPE=ALL,              ALL SYSTEMS IN GRS RING         X
               RESNAME=((R9)),         SCAN SYSDSN                     X
               TOKEN=TKN               TOKEN FUNCTION
         EJECT
         LA    R7,BRTABLE              ADDRESS OF BRANCH TABLE
         B     0(R15,R7)               BRANCH TO APPROPRIATE ROUTINE
BRTABLE  B     CODE00                  ALLS OK
         B     CODE04                  NO RESOURCES MATCHED REQUEST
         B     CODE08                  GQSCAN AREA TOO SMALL
         B     CODE0C                  ENCOUNTERED ERROR DATA AREA NG
         B     CODE10                  INVALID SYSNAME
         SPACE 2
         EJECT
CODE00   ST    R0,RIBLNGTH             STORE RIB AND RIBE LENGTH
         LR    R7,R1                   SAVE NUMBER OF RIBS
         LA    R5,SCANAREA             ADDRESS OF GQSCAN AREA (1ST RIB)
         USING RIB,R5                  RESOURCE INFORMATION BLOCK
RIBLOOP  LR    R11,R5                  SAVE RIB POINTER
         AH    R11,RIBLNGTH            POINT TO RIB VARIABLE SECTION
         USING RIBVAR,R11              RESOURCE INFORMATION BLOCK
         SR    R8,R8                   CLEAR REG
         LH    R8,RIBVLEN              LENGTH OF VARIABLE SECTION
         MVC   MINOR(44),=44C' '       CLEAR BEFORE USING
         BCTR  R8,0                    MINUS ONE FOR EX INSTUCTION
         EX    R8,MVCDSN               MOVE DSN TO PRINT LINE
         B     SKIP                    BYPASS NEXT INSTRUCTION
MVCDSN   MVC   MINOR(1),RIBRNAME       MOVE DSN TO PRINT LINE
         DROP  R11
SKIP     MVC   MAJOR(8),SYSDSN
         LR    R11,R5                  SAVE RIB POINTER
         AH    R11,RIBLNGTH            POINT TO RIB VARIABLE SECTION
         AH    R11,RIBVLEN             POINT TO FIRST RIBE
         USING RIBE,R11                RESOURCE INFORMATION BLOCK EXT
         L     R9,RIBNRIBE             LOAD THE # OF RIBE'S
         CLC   RIBNTWE,ANYENQ          ANY WAITING FOR EXCLUSIVE ?
         BNE   SKIP1                     YES...PROCESS
         CLC   RIBNTWS,ANYENQ          ANY WAITING FOR SHARE ?
         BE    BUMPRIB                   NO....BUMP TO NEXT RIB
         EJECT
SKIP1    LA    R1,MAJLINE
         SR    R0,R0
         IC    R0,XAU
         SVC   35
         LA    R1,MINLINE
         SR    R0,R0
         IC    R0,XAU
         SVC   35
SEARCH   MVC   JOBLINE+4(52),=CL52' '  BLANK OUT THE OUTPUT AREA
         MVI   SWITCH,C'1'             SET SWITCH THAT THERE WAS ENQ
         MVC   JOBNAME(8),RIBEJBNM     JOBNAME OF REQUESTOR
         MVC   SYSTEM(4),RIBESYSN      SYSTEM NAME OF REQUESTOR
         SPACE
TEST1    TM    RIBERFLG,RIBETYPE       IS THIS EXCL OR SHARED?
         BO    SHARED                     YES..
         MVC   EXCLSHR(4),=C'EXCL'        NO...TELL USER
         B     TEST2                      NEXT TEST
SHARED   MVC   EXCLSHR(4),=C'SHR '        TELL USER
         SPACE
TEST2    TM    RIBESFLG,RIBESTAT       IS THIS GUY THE OWNER?
         BO    OWNER                      YES..
         MVC   WAIT(9),=C'*WAITING*'      TELL USER WAITING FOR DSET'S
         B     TPUTIT                     GO PRINT IT
OWNER    MVC   WAIT(9),=9C' '             TELL USER
         SPACE
TPUTIT   LA    R1,JOBLINE
         SR    R0,R0
         IC    R0,XAU
         SVC   35
         SPACE 2
BUMPRIBE AH    R11,RIBELENG            POINT TO NEXT RIBE
         BCT   R9,SEARCH               AND DO IT FOR NEXT USER
BUMPRIB  SR    R3,R3                   CLEAR THE REG
         L     R4,RIBNRIBE             NUMBER OF RIBE'S
BUMPLOOP AH    R3,RIBELENG             ADD RIBE LENGTH
         BCT   R4,BUMPLOOP             AND ADD TIMES NUMBER OF RIBE'S
         AH    R3,RIBLNGTH             ADD LENGTH OF RIB
         AH    R3,RIBVLEN              ADD LENGTH OF VARIABLE SECTION
         AR    R5,R3                   POINT TO NEXT RIB
         BCT   R7,RIBLOOP              AND LOOP UNTIL NO MORE RIBS
         SPACE
         TM    TKNSW,X'01'             WAS THERE A TOKEN?
         BC    8,FINISH                NO, GO TO EOJ
         B     START                   YES, GO REPROCESS
FINISH   CLI   SWITCH,C'1'             WAS THERE AN ENQ ?
         BE    EXIT                       YES...EXIT
         B     NOTFOUND                         TELL USER
         EJECT
EXIT     EQU   *
         ESTAE 0
         LA    R0,PARTWORK
         A     R0,=F'00102400'      ADD IN SCANAREA WORKSIZE
         O     R0,SUB241
         L     R14,SAVRET
         LR    R1,R10
         FREEMAIN R,LV=(0),A=(1)
         SR    R15,R15
         BR    R14
         EJECT
NOTFOUND LA    R1,NFNDMSG
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         B     EXIT
         SPACE 2
CODE04   LA    R1,CODE04M              DSNAME NOT FOUND
         SR    R0,R0
         IC    R0,XAU                  INSERT MCS ID
         SVC   35                      ISSUE WTO
         B     EXIT
         SPACE 2
CODE08   OI    TKNSW,X'01'             TURN TOKEN SW ON
         B     CODE00                  GO FINISH PROCESSING
         SPACE 2
CODE0C   LA    R1,CODE0CM              DSNAME NOT FOUND
         SR    R0,R0
         IC    R0,XAU                  INSERT MCS ID
         SVC   35                      ISSUE WTO
         B     EXIT
         SPACE
CODE10   LA    R1,CODE10M              DSNAME NOT FOUND
         TITLE 'CSCGE03D -   E  EXCEPTION MONITOR'
***********************************************************************
***********************************************************************
***                                                                 ***
***                                                                 ***
***                                                                 ***
***                     COMMAND  SUB-SYSTEM                         ***
***                  -------------------------                      ***
***                                                                 ***
***                                                                 ***
***       CSCGE03D -       E  EXCEPTION MONITOR                     ***
***                                                                 ***
***       VERSION -        2.1                                      ***
***                                                                 ***
***       MVS LEVEL -      MVS/SE  3.8.   WITHOUT  SE2 OR SU64.     ***
***                                                                 ***
***       UPDATED -        11/01/79                                 ***
***                                                                 ***
***                                                                 ***
***                                                                 ***
***********************************************************************
***********************************************************************
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
*                  EXCEPTION MONITOR OUTPUT MESSAGES
*               ---------------------------------------
*
*
*
*
*   SYSTEM EXCEPTION MESSAGES
*   --------------------------------------
*
*   CHANNEL XX   XXX% BUSY  FOR XXXXX SEC
*   UUU VVVVVV   XXX% BUSY  FOR XXXXX SEC
*   UUU VVVVVV   NOT READY  FOR XXXXX SEC
*   EXCESS SYSTEM PAGING FOR    XXXXX SEC
*   LOCAL PAGE I/O DEGRADED FOR XXXXX SEC
*   WTO BUFFER SHORTAGE, WQE COUNT= XXXXX
*   SQA AVAIL= XXXXXK, CSA AVAIL= XXXXXK
*
*
*
*
*   JOB RESOURCE USAGE EXCEPTION MESSAGES
*   --------------------------------------
*
*   JJJJJJJJ POSSIBLE LOOP FOR  XXXXX SEC
*   JJJJJJJJ XXX% CPU FOR       XXXXX SEC
*   JJJJJJJJ ABEND IN PROGRESS  XXXXX SEC
*   JJJJJJJJ EXCESS SWAP COUNT = XXXXX
*   JJJJJJJJ XXXXX FRAMES FOR   XXXXX SEC
*
*
*
*
*   JOB WAIT EXCEPTION MESSAGES
*   --------------------------------------
*
*    ( NOTE -   A JOB IS CONSIDERED TO BE WAITING IF IT USES 0% CPU  )
*
*
*   JJJJJJJJ ENQ SYSDSN   WAIT  XXXXX SEC       ENQ CONFLICT
*   JJJJJJJJ I/O ON UUU   WAIT  XXXXX SEC       I/O PENDING
*   JJJJJJJJ ALLOC QUEUE  WAIT  XXXXX SEC       ALLOC QUEUE
*   JJJJJJJJ REPLY NN     WAIT  XXXXX SEC       REPLY PENDING
*   JJJJJJJJ SWAP RRRRRR  WAIT  XXXXX SEC       SWAPPED OUT
*
*      RRRRRR -     ( SWAP REASON CODES )
*                   LONGWT           LONG WAIT
*                   AUXSTOR          AUXILLARY STORAGE SHORTAGE
*                   REALSTR          REAL STORAGE SHORTAGE
*                   DETWAIT          MSO DETECTED WAIT
*                   REQUEST          REQUEST SWAP
*                   ENQEXC           ENQ EXCHANGE
*                   WORKEXC          WORKLOAD EXCHANGE
*                   UNILATR          UNILATERAL
*
*
*
*   ERROR ENCOUNTERED IN CONTROL BLOCKS, RETRY COMMAND
*
*
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
CSCGE03D CSECT
         LR    R12,R15
         LA    R7,4095(0,R12)
         LA    R7,1(0,R7)
         USING CSCGE03D,R12,R7
         MODESET KEY=ZERO,MODE=SUP
         L     R0,SIZE             LOAD GETMAIN AREA SIZE AND SUBPOOL
         GETMAIN R,LV=(0)
         LR    R13,R1
         USING WORK,R13
         ST    R14,SAVRET          SAVE RETURN ADDR
         ST    R2,XSASAVE          SAVE XSA ADDR
         USING XSA,R2
         L     R3,XAL
         LA    R3,0(0,R3)
         MVI   PARM,C'A'           ALL SCANS ACTIVE
         LTR   R3,R3               ANY PARM
         BZ    *+10                NO
         MVC   PARM(1),0(R3)       SET SCAN TYPE
         LR    R10,R13             LOAD SAVE AREA ADDR
         B     ESTAEBYP            BYPASS ESTAE LIST
ESTAEOVL ESTAE STAEXIT,CT,MF=L
ESTAEBYP MVC   ESTAELST(16),ESTAEOVL
         LA    R1,ESTAELST
         ESTAE PARAM=(10),MF=(E,(1))
         EJECT
CSCSTART L     R4,16               CVT
         L     R4,604(0,R4)        RMCT
         MVC   WTOLIST(84),SRMOVLY
         L     R5,88(0,R4)         WAMT
         L     R1,THRTSOPG         TSO PERF GROUP NUMBER
         SLL   R1,2                TIMES 4
         L     R6,56(R1,R5)        WAMP OFFSET
         AR    R5,R6               WAMP ADDRESS
         SR    R14,R14
         L     R15,0(0,R5)         TOTAL ENDED TRANS
         LTR   R15,R15             ZERO TRANS
         BZ    NOTSO               YES, BYPASS 0C9
         L     R15,12(0,R5)        TOTAL ELAPSED TIME FOR ENDED TRANS
         D     R14,0(0,R5)         DIVIDE BY ENDED TRANSACTIONS
         SR    R14,R14
         D     R14,=F'1000'
         SPACE 1
NOTSO    CVD   R15,DOUBLE          AVG SECONDS RESPONSE TIME
         SRDL  R14,32
         D     R14,=F'10'
         CVD   R15,DOUBLEX
         MVC   WTOLIST+8(7),=X'402021204B2020'
         ED    WTOLIST+8(4),DOUBLE+6
         UNPK  WTOLIST+13(2),DOUBLEX+6(2)
         OI    WTOLIST+14,X'F0'
         SR    R1,R1
         IC    R1,320(0,R4)        LONG TERM CPU AVG
         CVD   R1,DOUBLE
         MVC   WTOLIST+25(4),=X'40212020'
         ED    WTOLIST+25(4),DOUBLE+6
         LH    R1,318(0,R4)        AVERAGE CPU
         CVD   R1,DOUBLE
         MVC   WTOLIST+38(4),=X'40212020'
         ED    WTOLIST+38(4),DOUBLE+6
         LH    R1,664(0,R4)        AVERAGE PAGING
         CVD   R1,DOUBLE
         MVC   WTOLIST+51(4),=X'40212020'
         ED    WTOLIST+51(4),DOUBLE+6
         LH    R1,654(0,R4)        AVERAGE UIC
         CVD   R1,DOUBLE
         MVC   WTOLIST+65(4),=X'40212020'
         ED    WTOLIST+65(4),DOUBLE+6
         LH    R1,662(0,R4)        AVERAGE ASMQ
         CVD   R1,DOUBLE
         MVC   WTOLIST+78(4),=X'40212020'
         ED    WTOLIST+78(4),DOUBLE+6
         LA    R1,WTOLIST
         SR    R0,R0
         IC    R0,XAU              MCS ID OF REQUESTING CONSOLE
         SVC   35
         MVI   WTOLIST+4,C' '
         MVC   WTOLIST+5(79),WTOLIST+4
         MVC   WTOLIST(4),=X'00540100'
         L     R8,XAA              ASCB/OUCB INFO STORAGE
         USING JOBTABLE,R8
         XC    C1BSYCNT(4),C1BSYCNT
         XC    C2BSYCNT(4),C2BSYCNT
         XC    C3BSYCNT(4),C3BSYCNT
         XC    C4BSYCNT(4),C4BSYCNT
         XC    C5BSYCNT(4),C5BSYCNT
         XC    C6BSYCNT(4),C6BSYCNT
         XC    C7BSYCNT(4),C7BSYCNT
         XC    C8BSYCNT(4),C8BSYCNT
         XC    C9BSYCNT(4),C9BSYCNT
         XC    CABSYCNT(4),CABSYCNT
         XC    CBBSYCNT(4),CBBSYCNT
         XC    CCBSYCNT(4),CCBSYCNT
         XC    CDBSYCNT(4),CDBSYCNT
         XC    CEBSYCNT(4),CEBSYCNT
         XC    CFBSYCNT(4),CFBSYCNT
         BAL   R10,CHKWQE
         BAL   R10,CHKSQA
         BAL   R10,CHKPAG
         L     R3,THRSTIMR
         CLI   PARM,C'C'           CHANNEL AND DEVICE SCAN ELIMINATE
         BE    JOBOUT              YES
         CLI   PARM,C'D'           DEVICE SCAN ELIMINATE
         BE    *+8                 YES
         BAL   R10,CHKUCB          CLEAR UCB TABLE
         BAL   R10,CHNLOOP
         EJECT
JOBOUT   L     R4,16               CVT ADDR
         L     R4,556(0,R4)        ASVT ADDR
         LA    R4,524(0,R4)        ASCB SLOT ADDR
         B     JOBOUT2
         SPACE 1
JOBOUT1  L     R5,0(0,R4)          ASCB ADDR
         LA    R5,0(0,R5)
         L     R6,56(0,R5)         CSCB ADDR
         L     R9,144(0,R5)        LOAD OUCB ADDR
         BAL   R11,ASCBFORM        GO FORMAT ASCB INFO
         SPACE 1
JOBOUT2  LA    R4,4(0,R4)          INCR INTO ASVT
         CLC   1(3,R4),=F'0'       END OF ASVT
         BE    RETURN              YES, RETURN
         TM    0(R4),X'80'         AVAILABLE ENTRY
         TITLE 'CSCGI03D -   I  JES2 INIT DISPLAY'
***********************************************************************
***********************************************************************
***                                                                 ***
***                                                                 ***
***                                                                 ***
***                     COMMAND  SUB-SYSTEM                         ***
***                  -------------------------                      ***
***                                                                 ***
***                                                                 ***
***       CSCGI03D -       I  JES2 INIT DISPLAY                     ***
***                                                                 ***
***       VERSION -        1.2                                      ***
***                                                                 ***
***       MVS LEVEL -      UP TO MVS/SP1.3                          ***
***                                                                 ***
***       UPDATED -        03/24/83                                 ***
***                                                                 ***
***       NOTE -           WHEN YOU GET AN ASSEMBLE ERROR OF 12     ***
***                        AT THE CSECT SDWA JUST IGNORE THE ERROR  ***
***                        YOU WILL BE OKAY.                        ***
***                        THE ERROR MESSAGE (AT LEAST FROM ASMBLER ***
***                        H) IS 'PREVIOUS USE OF SYMBOL IS NOT     ***
***                        THIS SECTION TYPE'.                      ***
***                                                                 ***
***                                                                 ***
***       ADD MACRO CALLED $DEB BECAUSE THE $SJB MACRO NOW          ***
***           REFERENCES DEB FIELDS WHICH MEANS THAT THE $DEB       ***
***           MACRO MUST PRECEDE THE $SJB MACRO FOR ASSEMBLER F.    ***
***                                                                 ***
***                                                                 ***
***********************************************************************
***********************************************************************
         EJECT
CSCGI03D CSECT
         LR    R12,R15
         USING CSCGI03D,R12
         L     R0,SIZE             LOAD GETMAIN AREA SIZE AND SUBPOOL
         GETMAIN R,LV=(0)
         LR    R13,R1
         USING WORK,R13
         ST    R14,SAVRET          SAVE RETURN ADDR
         ST    R2,XSASAVE          SAVE XSA ADDR
         USING XSA,R2
         LR    R10,R13             LOAD SAVE AREA ADDR
         B     ESTAEBYP            BYPASS ESTAE LIST
ESTAEOVL ESTAE STAEXIT,CT,MF=L
ESTAEBYP MVC   ESTAELST(16),ESTAEOVL
         LA    R1,ESTAELST
         ESTAE PARAM=(10),MF=(E,(1))
         USING CVTDSECT,R1        SETUP CVT BASE
         USING JESCT,R6           SETUP JESCT BASE
         USING SSCT,R3            SETUP SSCT BASE
         USING SSVT,R4            SETUP SSVT BASE
         USING PITDSECT,R5        SETUP PIT BASE
         USING SJBDSECT,R11       SETUP SJB BASE
         LA    R1,ALINE1          PRINT HEADING LINE
         SR    R0,R0
         IC    R0,XAU
         SVC   35
         LA    R1,ALINE2          PRINT HEADING LINE
         SR    R0,R0
         IC    R0,XAU
         SVC   35
         LA    R1,ALINE3          PRINT HEADING LINE
         SR    R0,R0
         IC    R0,XAU
         SVC   35
         MVI   LSW,C' '
         EJECT
CONTINUE L     R1,16              GET CVT
         L     R6,296(R1)         GET JESCT    (JES CONTROL TABLE)
         L     R3,JESSSCT         GET FIRST JES SSCT (SSCVT)
         SPACE 1
NEXTSSCT L     R4,SSCTSSVT        GET JES SSVT
         L     R5,$SVPIT          GET PIT ADDR--5.302 JES LOGIC+MAINT
         SPACE 1
NEXTPIT  MVC   IDENT(40),=CL40' ' CLEAR DETAIL LINE
         MVC   CLINEX(4),=X'00540100'
         TM    PITSTAT,PITHOLDA   PIT DRAINED $PI ?
         BNO   *+10               IF NOT CONTINUE
         MVC   STAT(6),=CL6'DRAIN'   MOVE IN DRAINED STATUS
         TM    PITSTAT,PITHOLD1   PIT DRAINED $P IN ?
         BNO   *+10               IF NOT CONTINUE
         MVC   STAT(6),=CL6'DRAIN'   MOVE IN DRAINED STATUS
         TM    PITSTAT,PITHALTA   PIT HALTED  $Z I ?
         BNO   *+10               IF NOT CONTINUE
         MVC   STAT(6),=CL6'HALT'    MOVE IN HALTED STATUS
         TM    PITSTAT,PITHALT1   PIT HALTED  $Z IN ?
         BNO   *+10               IF NOT CONTINUE
         MVC   STAT(6),=CL6'HALT'    MOVE IN HALTED STATUS
         TM    PITSTAT,PITINIT    OS INIT EXISTS FOR PIT?
         BNO   *+10               IF NOT CONTINUE
         MVC   STAT(6),=CL6'INACT'   MOVE IN INACTIVE
         TM    PITSTAT,PITBUSY    PIT BUSY ?
         BNO   *+10               IF NOT CONTINUE
         MVC   STAT(6),=CL6'ACTIV'   MOVE IN ACTIVE
         TM    PITSTAT,PITIDLE    PIT IDLE ?
         BNO   *+10               IF NOT CONTINUE
         MVC   STAT(6),=CL6'IDLE'     MOVE IN IDLE
         CLC   STAT(6),=6C' '        STATUS NOT AVAILABLE ?
         BNE   *+10               IF NOT CONTINUE
         MVC   STAT(6),=CL6'?????'   MOVE IN STATUS NOT AVAIL.
         MVC   IDENT(2),PITPATID     MOVE ID IN---FORMAT CL2
         MVC   INITNAM(8),PITCLASS   MOVE THE INIT CLASSES TO OUTPUT
         CLI   IDENT,C' '
         BNE   *+8
         MVI   IDENT,C'0'
*
*    &MAXCLAS PARAMETER ON GEN LIMITS MAX CLASSES, ABOVE MAY NEED
*    TO BE CHANGED IF OTHER THAN 8 CLASSES.
*
         TM    PITSTAT,PITBUSY    PIT BUSY ?
         BNO   PRINT              IF NOT CONTINUE
         L     R11,PITSJB         GET SJB ADDRESS
         MVC   JOBNAME(8),SJBJOBNM   GET JOBNAME FROM JOB CARD
         MVC   JOBNUM(4),SJBJOBID+4  GET JOBID FROM JOB CARD
         MVI   UCLASS,C'('
         MVI   UCLASS+2,C')'
         MVC   UCLASS+1(1),SJBJCLAS    GET USED CLASS
         EJECT
PRINT    CLI   LSW,C' '           CHECK PRINT SW FOR LEFT SIDE
         BE    MOVELEFT           MOVE IN LEFT PRINT AREA
         CLI   LSW,C'1'           CHECK PRINT SW FOR RIGHT SIDE
         BE    MOVERIGT           MOVE IN RIGHT PRINT AREA
         LA    R1,STAEMSG         WRITE ERROR LINE
         SR    R0,R0
         IC    R0,XAU
         SVC   35
         B     FINAL              END IF ERROR
         SPACE 1
PUTIT    LA    R1,CLINEX          WRITE MESSAGE LINE
         SR    R0,R0
         IC    R0,XAU
         SVC   35
         MVI   LSW,C' '           RESET PRINT SWITCH
         B     NEXTIT             GET NEXT PIT
         SPACE 1
FINAL    CLI   LSW,C' '           CHECK IF LAST DATA FILLED
         BE    EXIT               IF DONE, DON'T WRITE
         CLI   LSW,C'1'           CHECK IF LEFT ONLY FILLED
         BE    SPRIGHT            GO TO SPACE-RIGHT
         SPACE 1
LASTWR   LA    R1,CLINEX          WRITE MESSAGE LINE
         SR    R0,R0
         IC    R0,XAU
         SVC   35
         B     EXIT
         SPACE 1
MOVELEFT MVC   LSW,=C'1'          SET LEFT PRINT FLAG
         MVC   CLEFT(40),PLINE        MOVE IN LEFT SIDE
         SPACE 1
NEXTIT   L     R5,PITNEXT         GET NEXT PIT---REFER 5.200 JES2
         LTR   R5,R5              CHK R5 FOR VALID ADDR
         BZ    FINAL              END PROCESS FOR SSCT
         B     NEXTPIT            GO BACK
         SPACE 1
SPRIGHT  MVC   CRIGHT(40),=CL40' ' MOVE SPACES TO RIGHT
         B     LASTWR             GO TO LAST WRITE
         SPACE 1
MOVERIGT MVC   LSW,=C'2'          SET FULL PRINT FLAG
         MVC   CRIGHT(40),PLINE       MOVE IN RIGHT SIDE
         B     PUTIT              GO TO WRITE LINE
         EJECT
EXIT     ESTAE 0
         L     R0,SIZE             LOAD GETMAIN SIZE AND SUBPOOL
         LR    R1,R13              LOAD GETMAIN AREA ADDR
         L     R14,SAVRET          RETURN ADDR
         FREEMAIN R,LV=(0),A=(1)
         SR    R15,R15
         BR    R14
         EJECT
         USING *,R15
STAEXIT  CH    R0,=H'12'           SDWA GOTTEN
         BE    STAEXIT1            NO, FORCE RETURN
         L     R2,=A(STAERTRY)     LOAD RETRY ADDR
         SETRP RC=4,RETADDR=(2),FRESDWA=YES,DUMP=NO
         SPACE 3
STAEXIT1 L     R0,=A(STAERTRY)     LOAD RETRY ADDR
         LA    R15,4
         BR    R14
         DROP  R15
         SPACE 3
         USING *,R15
STAERTRY L     R12,=A(CSCGI03D)    LOAD ENTRY POINT ADDR
         LR    R13,R1              RELOAD WORK AREA ADDR
         DROP  R15
         SPACE 3
CTLERROR LA    R1,STAEMSG          ADDRESSING ERROR
         L     R2,XSASAVE          RELOAD XSA ADDR
         SR    R0,R0
         IC    R0,XAU
         SVC   35
         B     EXIT
         EJECT
         LTORG
         SPACE 3
         DS    0F
SIZE     DC    X'F1',AL3(WORKEND-WORKSTRT)
         SPACE 3
         DS    0F
ALINE1   DC    X'00540100'
         DC    C'INITIATOR   JOB           JOB  INIT     '
         DC    C'INITIATOR   JOB           JOB  INIT     '
         SPACE 3
         DS    0F
ALINE2   DC    X'00540100'
         DC    C'ID  STATUS  NUM  JOBNAME  CLS  CLASS    '
         DC    C'ID  STATUS  NUM  JOBNAME  CLS  CLASS    '
         SPACE 3
         DS    0F
ALINE3   DC    X'00540100'
         DC    C'--------------------------------------  '
         DC    C'--------------------------------------  '
         SPACE 3
         DS    0F
STAEMSG  DC    X'00360100'
         DC    CL50'ERROR ENCOUNTERED IN CONTROL BLOCKS, RETRY COMMAND'
         EJECT
WORK     DSECT
WORKSTRT DS    0D
DOUBLE   DS    2F
SAVRET   DS    F
XSASAVE  DS    F
LSW      DS    C                  LINE PRINT SWITCH
*
* LSW ' ' IS NO FILLED, '1' IS LEFT FILLED, '2' IS BOTH FILLED
*
         SPACE 3
PLINE    DS    0CL40
IDENT    DS    CL4
STAT     DS    CL7
JOBNUM   DS    CL6
JOBNAME  DS    CL9
UCLASS   DS    CL5
INITNAM  DS    CL9
         SPACE 3
         DS    0F
CLINEX   DS    F
CLINE    DS    0CL80
CLEFT    DS    CL40
CRIGHT   DS    CL40
         SPACE 3
ESTAELST DS    4F
         SPACE 3
WORKEND  DS    0F
         EJECT
XSA      DSECT
XAP      DS    F
XAD      DS    F
XAX      DS    D
XAE      DS    0C
XAR      DS    F
XAN      DS    0C
XAL      DS    F
XAT      DS    D
XAS      DS    D
XAU      DS    C
         DS    C
XAJ      DS    H
XAA      DS    F
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
         $DEB               GEN $DEB
         $SJB               GEN $SJB
         $PIT               GEN $PIT
         PRINT OFF
         $CVT               GEN $CVT
         $JESCT             GEN $JESCT
         $SSCT              GEN $SSCT
         $SVT               GEN $SVT
         EJECT
         IHASDWA
         END
