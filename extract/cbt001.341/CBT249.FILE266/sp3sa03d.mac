*          DATA SET TEC1283    AT LEVEL 001 AS OF 09/14/82
         TITLE 'IEESA03D -   #N  DISPLAY ENQUEUE 1ST LOAD'
***********************************************************************
***********************************************************************
***                                                                 ***
***                                                                 ***
***                                                                 ***
***                     COMMAND  SUB-SYSTEM                         ***
***                  -------------------------                      ***
***                                                                 ***
***                                                                 ***
***       IEESA03D -       #N DISPLAY ENQUEUE 1ST LOAD              ***
***                                                                 ***
***       VERSION -        2.0                                      ***
***                                                                 ***
***       MVS LEVEL -      MVS 3.8 SP2/3                            ***
***                                                                 ***
***       UPDATED -        07/22/81  AXC-CBT HANDLE ESTAE           ***
***               -        10/30/81  SP2/3  -BNSW-                  ***
***                                                                 ***
***                                                                 ***
***                                                                 ***
***********************************************************************
***********************************************************************
         EJECT
IEESA03D CSECT
         B     14(0,R15)          BRANCH AROUND ID
         DC    AL1(8)
         DC    CL8'IEESA03D'      IDENTIFIER
         LR    R12,R15            SET ADDRESSABILITY
         USING IEESA03D,R12
         LA    R0,LWKDSECT        SIZE OF SAVE-AREA AND WORK-AREA
         O     R0,SUB241          GET FROM SUBPOOL
         LR    R4,R0              SAVE SP AND LENGTH
         GETMAIN R,LV=(0)
         XC    0(256,R1),0(R1)    ZERO-OUT PART OF WORK AREA
         XC    256(256,R1),256(R1)  MORE
         LR    R13,R1
         USING WKDSECT,R13        FIRST 18 WRDS ARE SAVE-AREA
         ST    R14,SAVA           PUT RETURN ADDRESS IN UNUSED SLOT
         MVC   SUBPOOL(4),SUB241  SAVE FREEMAIN SUBPOOL
         ST    R2,XSASAVE         SAVE XSA PTR
         STH   R4,WKSIZE          SAVE SIZE
         LR    R10,R13             LOAD SAVE AREA ADDR
         B     ESTAEBYP            BYPASS ESTAE LIST
ESTAEOVL ESTAE STAEXIT,CT,MF=L
ESTAEBYP MVC   ESTAELST(16),ESTAEOVL
         LA    R1,ESTAELST
         ESTAE PARAM=(10),MF=(E,(1))
         EJECT
***********************************************************************
*
*        GET CORE FOR WORK TABLE
*
***********************************************************************
         L     R0,CORSIZ          LOAD GETMAIN SIZE
         O     R0,SUBPOOL         SUBPOOL
         STH   R0,CORESIZE        SAVE SP AND LENGTH
         GETMAIN R,LV=(0)
         LA    R1,0(0,R1)
         ST    R1,CORE            SAVE GETMAIN ADDR
***********************************************************************
*
*        PARSE INPUT STRING
*
***********************************************************************
         MVC   SJOB(8),=CL8' '
         MVI   MAJNAM,C' '
         MVC   MAJNAM+1(256),MAJNAM    CLEAR MAJOR/MINOR NAME FIELDS
         MVC   MAJNAM+257(6),MAJNAM+256
         USING XSA,R2
         L     R3,XAL             LIST POINTER
         LA    R3,0(,R3)          CLEAR HI-BYTE -- VERB INDEX
         LTR   R3,R3              PARAMETER EXIST ?
         BZ    NOPARM             NO...ASSUME DEFAULTS.
         CLI   0(R3),C'('         JOBNAME SELECT
         BNE   PRMJOBBY           NO, BYPASS
         LA    R1,SJOB-1          SELECTION NAME
         SPACE 1
PRMJOB1  LA    R1,1(0,R1)
         LA    R3,1(0,R3)
         CLI   0(R3),C')'         END OF JOBNAME
         BE    PRMJOB2            YES
         CLI   0(R3),C' '         END OF JOBNAME
         BE    PRMJOBBY           YES
         MVC   0(1,R1),0(R3)      MOVE 1 BYTE OF JOBNAME
         B     PRMJOB1
         SPACE 1
PRMJOB2  LA    R3,1(0,R3)
         SPACE 1
PRMJOBBY LR    R8,R3              START OF LIST
         CLI   0(R3),C'^'         FIND ONLY MAJOR NAMES ?
         BNE   *+8                NO
         MVI   0(R3),C'*'
         CLI   0(R3),C'*'         FIND ONLY MAJOR NAMES ?
         BE    SETMAJNM           YES..
         LA    R4,0               LENGTH COUNTER
         LA    R5,9
LOOP2    CLI   0(R3),C'/'         MAJOR/MINOR DELIMITER ?
         BE    GOTMAJOR           YES...
         CLI   0(R3),C' '         END-OF-STRING ?
         BE    PARMERR            YES...NO MINOR NAME GIVEN.
         LA    R4,1(,R4)          INCREMENT LENGTH
         LA    R3,1(,R3)          INCREMENT PTR
         BCT   R5,LOOP2           TRY NEXT CHAR
         B     BADERR             MAJOR NAME TOO LONG.
GOTMAJOR BCTR  R4,0               SET FOR EXECUTE
         LA    R6,MAJNAM          WHERE TO GO IN EXECUTE
         EX    R4,MVNAM           GET MAJOR NAME
         STH   R4,MAJLGTH         SAVE MODIFIED LENGTH
         LA    R4,0               RESET LENGTH COUNTER
         LA    R3,1(,R3)          MOVE PAST '/'
         LR    R8,R3              SAVE START OF MINOR NAME
         LA    R5,256             MAX LENGTH OF MINOR NAME
LOOP3    CLI   0(R3),C' '         END-OF-STRING
         BE    GOTMINOR           YES...
         LA    R3,1(,R3)          INCREMENT PTR
         LA    R4,1(,R4)          INCREMENT LENGTH
         BCT   R5,LOOP3
         B     BADERR             MINOR NAME TOO LONG
GOTMINOR BCTR  R4,0
         LA    R6,MINNAME         WHERE TO GO IN EXECUTE
         EX    R4,MVNAM           GET MINOR NAME
         LA    R4,1(,R4)          RESET LENGTH
         STH   R4,MINLGTH         SAVE LENGTH
***********************************************************************
*
*        SCAN FOR '*' IN MINOR NAME
*
***********************************************************************
         LA    R3,MINNAME
         LA    R4,0               COUNT OF CHAR PRIOR TO '*'
         LH    R5,MINLGTH
LOOP4    CLI   0(R3),C'^'         FIND IT ?
         BNE   *+8                NO
         MVI   0(R3),C'*'
         CLI   0(R3),C'*'         FIND IT ?
         BE    ASK                YES...
         LA    R3,1(,R3)          NO..NEXT CHAR
         LA    R4,1(,R4)          INCREMENT COUNT
         BCT   R5,LOOP4
         B     NOASK              NO '*' IN MINOR NAME
ASK      LTR   R4,R4              ANY CHAR PRIOR TO '*' ?
         BZ    ALLMINOR           NO..GET ALL MINOR NAMES
         MVI   SWTCH,X'0F'        YES..PARTIAL MINOR NAME GIVEN
         STH   R4,MINLGTH         SET NEW LENGTH
         B     NOASK              JOIN COMMON CODE
ALLMINOR MVI   SWTCH,X'F0'        SET FOR ALL MINOR NAMES
         B     NOASK
SETMAJNM MVI   MAJNAM,C'*'        SET MAJOR NAME
         XC    MAJLGTH(2),MAJLGTH SET MODIFIED LENGTH
         MVI   SWTCH+1,X'0F'      SET FOR ONLY MAJOR NAMES
***********************************************************************
*
*        NO PARAMETERS SPECIFIED, ASSUME DEFAULTS
*
***********************************************************************
NOPARM   EQU   *
         XC    MAJLGTH(4),MAJLGTH ZERO OUT NAME LENGTH FIELDS
         LA    R5,7               SET MODIFIED LENGTH OF
         STH   R5,MAJLGTH         MAJOR NAME AND MOVE IN NAME
         MVC   MAJNAM(8),=CL8'SYSIEFSD'
         MVI   MINNAME,C'*'       SET MINOR NAME
         MVI   SWTCH,X'F0'        SET FOR ALL MINOR NAMES
         EJECT
***********************************************************************
*
*        OBTAIN FIRST MAJOR QCB
*
***********************************************************************
NOASK    EQU   *
         L     R5,X'10'           CVT PTR
         LA    R3,0               CURRENT NUMBER OF TABLE ENTRIES
         LA    R5,1000            MAX NUMBER OF ENTRIES
         L     R4,CORE            START OF FREE CORE TABLE
         SPACE
         B     SP3                LEAVE OLD CODE INTACT *****
         SPACE
         L     R2,640(0,R5)       FIRST VALID MAJOR QCB
         LTR   R2,R2              DOES IT EXIST ?
         BZ    NOMAJNAM           NO...
         TM    SWTCH+1,X'0F'      OBTAIN ONLY MAJOR NAMES ?
         BZ    LOOP5              NO...CONTINUE NORMALLY
***********************************************************************
*
*        OBTAIN ONLY MAJOR QCB NAMES HERE
*
***********************************************************************
MAJLOOP  MVC   0(8,R4),16(R2)     GET MAJOR QCB NAME
         LA    R3,1(,R3)          INCREMENT COUNTER
         LA    R4,8(,R4)          NEXT TABLE ENTRY
         CR    R3,R5              OVERFLOW TABLE ?
         BH    TABLOVFL           YES...
         L     R2,0(,R2)          NEXT MAJOR QCB
         LTR   R2,R2              EXIST ?
         BNZ   MAJLOOP            YES...GO GET IT
         B     EXITOK1            ALL FINISHED.
***********************************************************************
*
*        FIND REQUESTED MAJOR NAME QCB
*
***********************************************************************
LOOP5    CLC   16(8,R2),MAJNAM    MAJOR NAMES MATCH ?
         BE    LOOKMIN            YES...FIND MINOR NAMES
         L     R2,0(,R2)          NEXT MAJOR QCB
         LTR   R2,R2              END-OF-LIST ?
         BNZ   LOOP5              NO...TRY NEXT QCB
         B     NOMAJNAM           SET ERROR CODE
         EJECT
***********************************************************************
*
*        MAJOR QCB FOUND, LOOK FOR MINOR QCB(S)
*
***********************************************************************
LOOKMIN  L     R7,8(,R2)          FIRST MINOR QCB
         LTR   R7,R7              EXIST ?
         BNZ   MINOROK            YES...SHOULDN'T FALL THRU
         B     QCBERR             SET ERROR CODE
MINOROK  TM    SWTCH,X'F0'        ALL MINOR NAMES ?
         BZ    CHKMIN             NO...
         CLC   20(3,R7),=C'SYS'   SYSTEM NAME
         BNE   CHKQEL             NO, CONTINUE
         CLC   28(2,R7),=C'.T'    SYSTEM NAME
         BNE   CHKQEL             NO, CONTINUE
         CLI   36(R7),C'.'        SYSTEM NAME
         BNE   CHKQEL             NO, CONTINUE
         MVC   NUMCHK(6),=6C'0'   SET NUMERIC FIELD
         MVZ   NUMCHK(5),23(R7)   MOVE NUMERIC ZONES
         CLC   NUMCHK(6),=6C'0'   STILL NUMERIC
         BNE   CHKQEL             NO, NOT SYSTEM NAME
         MVZ   NUMCHK(6),30(R7)   MOVE NUMERIC ZONES
         CLC   NUMCHK(6),=6C'0'   STILL NUMERIC
         BE    NEXTMIN            NO, SYSTEM NAME
CHKQEL   SR    R9,R9
         IC    R9,16(R7)          LENGTH OF MINOR QCB NAME
         CH    R9,=H'44'          GTR 44 BYTES ?
         BNH   LGTHOK             NO...USE AS IS
         LA    R9,44              YES..RESET TO 44 AND TRUNCATE NAME
LGTHOK   STC   R9,1(,R4)          PUT NAME LENGTH IN TABLE
         LA    R9,2(,R9)          INCREASE FOR FOLLOWING COMPUTATIONS
         SR    R10,R10
         LR    R11,R9             LENGTH OF MINOR NAME+CONTROL BYTES
         D     R10,=F'9'          MULTIPLE OF 9 ?
         LTR   R10,R10            ANY REMAINDER ?
         BZ    L9                 NO...
         LA    R11,1(,R11)        YES...ROUND UP
L9       STC   R11,0(,R4)         PUT NO. OF TABLE ENTRIES IN TABLE
         CLI   20(R7),C'$'        PRINTABLE NAME           AXC
         BL    UNKNOWN            NO, UNKNOWN
         CLI   20(R7),C'9'        PRINTABLE NAME
         BH    UNKNOWN            NO, UNKNOWN
         ST    R3,MINENTRY        SAVE CURRENT TABLE ENTRIES
         AR    R3,R11             INCREMENT NO. OF ENTRIES
         CR    R3,R5              OVERFLOW TABLE ?
         BH    TABLOFL2           HOPEFULLY NOT.
         BCTR  R9,0               REDUCE LENGTH
         BCTR  R9,0               TO ORIGINAL AND THEN
         BCTR  R9,0               SET FOR EXECUTE INST
         EX    R9,QCBNAME         GET MINOR QCB NAME
*                                 NO. OF TABLE SLOTS TAKEN BY NAME
UNKBACK  SR    R10,R10            MULTIPLIED BY 9 BYTES/SLOT
         M     R10,=F'9'          EQUALS TOTAL LENGTH TAKEN
         ST    R4,MINADDR
         AR    R4,R11             ADDED TO SLOT POINTER
         L     R8,8(,R7)          FIRST QEL
         LTR   R8,R8              EXIST ?
         BNZ   QELOK              YES...SHOULDN'T FALL THRU
         B     QELERR             SET ERROR CODE
         EJECT
QELOK    SR    R14,R14            INSERT
         IC    R14,14(0,R8)          ASID
         SLL   R14,8                    INTO REG 14
         IC    R14,15(0,R8)                AND MULTIPLY
         SLL   R14,2                          BY FOUR
         L     R15,16             CVT ADDR
         L     R15,556(0,R15)     ASVT ADDR
         L     R15,524(R14,R15)   ASCB ADDR
         L     R14,56(0,R15)      CSCB ADDR
         CLI   28(R14),X'03'      INIT CSCB ADDR
         BE    QELOKJOB           YES, GO HANDLE
QELOKBAK LA    R14,0(0,R14)       CLEAR HIGH ORDER
         LTR   R14,R14            CSCB ZERO
         BZ    QELOKAS            YES, GO PRINT ASID
         MVC   0(8,R4),8(R14)     JOBNAME
         CLC   SJOB(8),=CL8' '    ANY SELECTION JOB
         BE    QELOKBK            NO, BYPASS
         CLC   0(8,R4),SJOB       JOB MATCH SELECTION JOB
         BE    QELOKBK            YES, CONTINUE
         B     NEXTQELS
QELOKAS  CLC   SJOB(8),=CL8' '    ANY SELECTION JOB
         BNE   NEXTQELS           YES, NO ASID SELECTION
         MVC   0(4,R4),=CL4'AS= '
         UNPK  4(5,R4),14(3,R8)   UNPK ASID
         NC    4(4,R4),=4X'0F'    TRANSLATE TO PRINT
         TR    4(4,R4),=C'0123456789ABCDEF'
QELOKBK  MVI   8(R4),C'S'         ASSUME SHR'D ENQ
         TM    12(R8),X'10'       RESERVE
         BZ    QELOKBKX           NO, BR AROUND
         MVI   8(R4),C'R'         IND SHR RESERVE
QELOKBKX TM    12(R8),X'80'       IS IT SHR'D ?
         BO    NEXTONE            YES...
         MVI   8(R4),C'E'         NO...MUST BE EXCLUSIVE
         TM    12(R8),X'10'       RESERVE
         BZ    NEXTONE            NO, BR AROUND
         MVI   8(R4),C'X'         IND EXCL RESERVE
NEXTONE  LA    R3,1(,R3)          INCREMENT ENTRY NUMBER
         LA    R4,9(,R4)          INCREMENT TABLE LOCATION
         CR    R3,R5              TOO MANY ENTRIES IN TABLE ?
         BH    TABLOVFL           YES...IGNORE REMAINDER
         MVI   SWTCH+1,X'F0'      FLAG MINORS FOUND
         CLC   SJOB(8),=CL8' '    ANY SELECTION JOB
         BNE   NEXTMIN            YES, NEXT MINOR QCB
NEXTQEL  L     R8,0(,R8)          NEXT QEL
         LA    R8,0(,R8)          CLEAR HI-BYTE
         LTR   R8,R8              QEL EXIST ?
         BNZ   QELOK              YES.
         B     NEXTMIN            NO...GET NEXT MINOR QCB
NEXTQELS L     R8,0(,R8)          NEXT QEL
         LA    R8,0(,R8)          CLEAR HI-BYTE
         LTR   R8,R8              QEL EXIST ?
         BNZ   QELOK              YES.
         L     R3,MINENTRY        RESET NUMBER OF ENTRIES
         L     R4,MINADDR         RESET MIN NAME ADDR
         B     NEXTMIN            NO...GET NEXT MINOR QCB
         SPACE 1
CHKMIN   SR    R8,R8
         IC    R8,16(,R7)         LENGTH OF MINOR NAME
         TM    SWTCH,X'0F'        ALL NAMES STARTING WITH GIVEN ?
         BO    ALL                YES.
         CH    R8,MINLGTH         MINOR NAME LENGTHS AGREE ?
         BNE   NEXTMIN            NO...TRY ANOTHER MINOR QCB
COMP     BCTR  R8,0               LENGTHS AGREE..BUT DO NAMES ?
         EX    R8,COMPMINR        FIND OUT.
         BE    CHKQEL             YES..GET OWNER'S JOBNAME/USERID
NEXTMIN  L     R7,0(,R7)          NEXT MINOR QCB
         LTR   R7,R7              EXIST ?
         BZ    EXITOK             NO..OUTPUT DATA
         B     MINOROK            TRY THIS MINOR QCB.
ALL      LH    R8,MINLGTH         LENGTH OF MINOR NAME TO START WITH
         B     COMP               JOIN COMMON CODE
        EJECT
QELOKJOB LR    R15,R14            CSCB ADDR
         SR    R1,R1              INSERT
         IC    R1,14(0,R8)           ASID
         SLL   R1,8                     INTO
         IC    R1,15(0,R8)                 REG 1
QELOKJB1 L     R14,0(0,R14)      NEXT CSCB
         LTR   R14,R14           END OF CSCBS
         BNZ   *+10              NO, CONTINUE
         LR    R14,R15           LOAD CSCB ADDR
         B     QELOKBAK          CONTINUE
         CR    R14,R15           SAME CSCB
         BE    QELOKBAK          YES, INIT
         CH    R1,30(0,R14)      ASID MATCH
         BNE   QELOKJB1          NO, CHECK NEXT
         B     QELOKBAK          GO USE CSCB
         EJECT
SP3      DS    0H                 FOR MVS SP3, USE GQSCAN
         USING RIB,R2
         USING RIBE,R7
         USING RIBVAR,R15
         ST    R4,SPSTART         KEEP START POINT
         XC    TOKEN,TOKEN        FOR 1ST GQSCAN
         MVC   GQSCANL(GQSCANE-GQSCANP),GQSCANP SET UP LIST FORM
         MVI   SWTCHA,0           MAJOR NAME NOT FOUND YET
         SPACE
         TM    SWTCH+1,X'0F'      IF QNAME IS KNOWN
         BZ    SPLOOP5            THEN GO FIND SPECIFIC/GENERIC RNAME
*                                 ELSE FIND ALL MAJOR NAMES
***********************************************************************
*
*        OBTAIN MAJOR QCB NAMES HERE USING GQSCAN
*
***********************************************************************
         SPACE
SPMAJGQ  GQSCAN AREA=(AREA,L'AREA),TOKEN=TOKEN,MF=(E,GQSCANL),         *
               SCOPE=ALL,REQCNT=1
         ST    R15,GQRET          KEEP RC
         CH    R15,=H'8'          IF WE GET GRS ERROR
         BH    QCBERR             THEN CALL IT QCB ERROR
         CH    R15,=H'4'          IF NO MORE FOUND
         BE    EXITOK1            THEN GO CALL PRINT MODULE
         STH   R0,RIBELEN         L'RIBE
         LA    R2,AREA            A(1ST RIB)
SPMAJMAJ ST    R1,NUMRIBS         NUMBER OF MAJOR NAMES (RIBS)
         SPACE
*        CHECK FOR DUPLICATE QNAMES ALREADY IN TABLE
         LTR   R1,R3              NUMBER IN TABLE
         BZ    SPSTMAJ            NONE - GO STORE 1ST ONE
         L     R15,SPSTART        1ST IN TABLE
SPCOMAJ  CLC   0(8,R15),RIBQNAME  IF QNAME IS ALREADY IN TABLE
         BE    SPMAJNXT           THEN DON'T PUT IT IN AGAIN
         LA    R15,8(R15)         NEXT IN TABLE
         BCT   R1,SPCOMAJ         REPEAT FOR ALL IN TABLE
         SPACE
SPSTMAJ  MVC   0(8,R4),RIBQNAME   MAJ NAME INTO TABLE
         LA    R3,1(,R3)          COUNT NUMBER IN TABLE
         LA    R4,8(,R4)          NEXT TABLE ENTRY
         CR    R3,R5              TOO MANY?
         BH    TABLOVFL           YES - GET OUT
*        GET NEXT RIB
SPMAJNXT LA    R15,RIBEND         END OF RIBN
         LA    R7,RIBVAR          VAR PORTION
         AH    R7,RIBVLEN         1ST RIBE
         L     R1,RIBNRIBE        NUMBER OF RIBE'S
         MH    R1,RIBELEN         * LENGTH OF EACH
         AR    R7,R1              NEXT RIB
         LR    R2,R7
         L     R1,NUMRIBS         NUMBER STILL IN AREA
         BCT   R1,SPMAJMAJ        PROCESS THOSE IN AREA
         CLC   =F'8',GQRET        IF THERE ARE MORE
         BE    SPMAJGQ            THEN GO GET THEM
         B     EXITOK1            ELSE GO TO PRINT ROUTINE
         SPACE 3
***********************************************************************
*
*        OBTAIN RNAMES HERE FOR SPECIFIC QNAME USING GQSCAN
*
***********************************************************************
SPLOOP5  DS    0H                 FIND SPECIFIC,GENERIC OR ALL RNAMES
         GQSCAN AREA=(AREA,L'AREA),TOKEN=TOKEN,MF=(E,GQSCANL),         *
               RESNAME=(MAJNAM),SCOPE=ALL,REQCNT=1
         ST    R15,GQRET          KEEP RC
         CH    R15,=H'8'          IF WE GET GRS ERROR
         BH    QCBERR             THEN CALL IT QCB ERROR
         CH    R15,=H'4'          IF NOT FOUND
         BE    SPNOMAJ            THEN GET OUT
         MVI   SWTCHA,1           MAJ NAME WAS FOUND
         STH   R0,RIBELEN         L'RIBE
         LA    R2,AREA            A(RIB)
SPMINMAJ ST    R1,NUMRIBS         NUMBER OF RIBS
         MVI   SWTCHB,0           RNAME NOT MOVED YET
         LA    R15,RIBEND         END OF FIXED PORTION
         LA    R7,RIBVAR          VAR PORTION
         AH    R7,RIBVLEN         A(1ST RIBE)
         L     R1,RIBNRIBE        NUMBER OF RIBE'S
SPRIBE   ST    R1,NUMRIBES
         SPACE 2
*        DO REQUIRED SELECTION
         CLC   SJOB(8),=CL8' '    IF THERE IS NO SELECTION JOB
         BE    SPNOJOBS           THEN SELECT ALL JOBS
         CLC   RIBEJBNM,SJOB      ELSE CHECK JOBNAME
         BNE   SPNEXTE            NOT SPECIFIED JOB - GO ON TO NEXT
SPNOJOBS TM    SWTCH,X'F0'        ALL MINOR NAMES REQUIRED?
         BZ    SPCHKMIN           NO...
         CLC   =C'SYS',RIBRNAME   SYSTEM NAME
         BNE   SPINTAB            NO, GO PUT IN TABLE
         CLC   =C'.T',RIBRNAME+8  SYSTEM NAME
         BNE   SPINTAB            NO, CONTINUE
         CLI   RIBRNAME+16,C'.'   SYSTEM NAME
         BNE   SPINTAB            NO, CONTINUE
         MVC   NUMCHK(6),=6C'0'   SET NUMERIC FIELD
         MVZ   NUMCHK(5),23(R7)   MOVE NUMERIC ZONES
         CLC   NUMCHK(6),=6C'0'   STILL NUMERIC
         BNE   SPINTAB            NO, NOT SYSTEM NAME
         MVZ   NUMCHK(6),30(R7)   MOVE NUMERIC ZONES
         CLC   NUMCHK(6),=6C'0'   STILL NUMERIC
         BE    SPNEXTE            NO, SYSTEM NAME
         B     SPINTAB            GO PUT IN TABLE
         SPACE 2
SPCHKMIN DS    0H                 SPECIFIC OR GENERIC RNAME SELECTION
         SR    R8,R8
         IC    R8,RIBRNMLN        LENGTH OF MINOR NAME
         TM    SWTCH,X'0F'        ALL NAMES STARTING WITH GIVEN ?
         BO    SPALL              YES.
         CH    R8,MINLGTH         MINOR NAME LENGTHS AGREE ?
         BNE   SPNEXTE            NO...GO ON TO NEXT
SPCOMP   BCTR  R8,0               LENGTHS AGREE..BUT DO NAMES ?
         EX    R8,SPCLC           IF RNAMES MATCH
         BE    SPINTAB            THEN GO PUT IN TABLE
         B     SPNEXTE            ELSE GO ON TO NEXT
         SPACE
SPALL    LH    R8,MINLGTH         LENGTH OF MINOR NAME TO START WITH
         B     SPCOMP             JOIN COMMON CODE
         SPACE 2
SPINTAB  BAL   R14,SPSTORE        PUT INTO TABLE
         SPACE
SPNEXTE  AH    R7,RIBELEN         NEXT RIBE IN AREA.
         L     R1,NUMRIBES        REPEAT FOR
         BCT   R1,SPRIBE          RIBES IN AREA.
         SPACE
         LR    R2,R7              NEXT RIB
         L     R1,NUMRIBS         NUMBER OF RIBS REMAINING
         BCT   R1,SPMINMAJ        REPEAT FOR ALL RIBS IN AREA
         SPACE
         CLC   =F'8',GQRET        IF THERE ARE MORE
         BE    SPLOOP5            THEN GO GET THEM
         B     EXITOK             ELSE GO PRINT
         SPACE 3
SPNOMAJ  DS    0H                 NONE THIS TIME, DID WE
         CLI   SWTCHA,0           FIND ANY AT ALL?
         BNE   EXITOK             FOUND ON PREVIOUS GQSCAN.
         B     NOMAJNAM           THIS WAS 1ST GQSCAN - MAJ NOT FOUND
         SPACE 3
SPSTORE  DS    0H                 STORE INFO IN TABLE
         CLI   SWTCHB,0           IF THIS IS 1ST FOR THIS RESOURCE
         BE    SPSRNAM            THEN GO PUT RNAME IN TABLE
SPSJOB   EQU   *                  PUT JOB INFO INTO TABLE
         MVC   0(8,R4),RIBEJBNM   PUT JOBNAME IN TABLE
         MVI   8(R4),C'S'         ASSUME SHR'D ENQ
         TM    RIBERFLG,RIBERESV  RESERVE
         BNO   SPLOKBKX           NO, BR AROUND
         MVI   8(R4),C'R'         IND SHR RESERVE
SPLOKBKX TM    RIBERFLG,RIBETYPE  IS IT SHR'D ?
         BO    SPXTONE            YES...
         MVI   8(R4),C'E'         NO...MUST BE EXCLUSIVE
         TM    RIBERFLG,RIBERESV  RESERVE
         BNO   SPXTONE            NO, BR AROUND
         MVI   8(R4),C'X'         IND EXCL RESERVE
SPXTONE  LA    R3,1(,R3)          INCREMENT ENTRY NUMBER
         LA    R4,9(,R4)          INCREMENT TABLE LOCATION
         CR    R3,R5              TOO MANY ENTRIES IN TABLE ?
         BH    TABLOVFL           YES...IGNORE REMAINDER
         MVI   SWTCH+1,X'F0'      FLAG MINORS FOUND
         BR    R14                RETURN FROM SPSTORE
SPSRNAM  DS    0H                 PUT RESOURCE INFO INTO TABLE
         MVI   SWTCHB,1           DON'T MOVE RNAME AGAIN
         SR    R9,R9
         IC    R9,RIBRNMLN        LENGTH OF MINOR NAME
         CH    R9,=H'44'          GTR 44 BYTES ?
         BNH   SPLGTHOK           NO...USE AS IS
         LA    R9,44              YES..RESET TO 44 AND TRUNCATE NAME
SPLGTHOK STC   R9,1(,R4)          PUT NAME LENGTH IN TABLE
         LA    R9,2(,R9)          INCREASE FOR FOLLOWING COMPUTATIONS
         SR    R10,R10
         LR    R11,R9             LENGTH OF MINOR NAME+CONTROL BYTES
         D     R10,=F'9'          MULTIPLE OF 9 ?
         LTR   R10,R10            ANY REMAINDER ?
         BZ    SPL9               NO...
         LA    R11,1(,R11)        YES...ROUND UP
SPL9     STC   R11,0(,R4)         PUT NO. OF TABLE ENTRIES IN TABLE
         CLI   RIBRNAME,C'$'      PRINTABLE NAME           AXC
         BL    SPUNAME            NO, UNKNOWN
         CLI   RIBRNAME,C'9'      PRINTABLE NAME
         BH    SPUNAME            NO, UNKNOWN
         AR    R3,R11             INCREMENT NO. OF ENTRIES
         CR    R3,R5              OVERFLOW TABLE ?
         BH    TABLOFL2           HOPEFULLY NOT.
         BCTR  R9,0               REDUCE LENGTH
         BCTR  R9,0               TO ORIGINAL AND THEN
         BCTR  R9,0               SET FOR EXECUTE INST
         EX    R9,SPRNAM          MOVE MINOR NAME
*                                 NO. OF TABLE SLOTS TAKEN BY NAME
SPKBACK  SR    R10,R10            MULTIPLIED BY 9 BYTES/SLOT
         M     R10,=F'9'          EQUALS TOTAL LENGTH TAKEN
         AR    R4,R11             ADDED TO SLOT POINTER
         B     SPSJOB             GO PUT JOB INFO INTO TABLE
         SPACE 3
SPUNAME  MVC   2(7,R4),=CL7'UNKNOWN'
         MVI   1(R4),X'07'        SET MINOR NAME LENGTH
         MVI   0(R4),X'09'        SET FOR TABLE ENTRIES
         LA    R11,9              LOAD ADJUSTED LENGTH
         AR    R3,R11             INCR NO. OF ENTRIES
         CR    R3,R5              OVERFLOW TABLE
         BH    TABLOFL2           HOPEFULLY NOT
         SH    R9,=H'3'           ADJUST LENGTH
         B     SPKBACK
         SPACE 3
SPRNAM   MVC   2(0,R4),RIBRNAME   EX TO MOVE RNAME INTO TABLE
SPCLC    CLC   MINNAME(0),RIBRNAME EX TO DO RNAME SELECTION
         USING XSA,R2
         EJECT
***********************************************************************
*
*        TABLE COMPLETE, READY FOR EXIT
*
***********************************************************************
EXITOK   DS    0H
         TM    SWTCH+1,X'F0'      MINOR NAMES FOUND ?
         BZ    NOOUTPUT           NO...
EXITOK1  LA    R1,0               MESSAGE CODE=0, ALL SUCCESSFUL
SETSIZE  STH   R3,TBLSIZE         SET TABLE SIZE FOR I/O MODULE
         MVC   0(4,R4),=F'-1'     SET END OF TABLE
         SPACE 5
***********************************************************************
*
*        XCTL TO SECOND LOAD OF MODULE FOR ALL I/O
*
***********************************************************************
XCTL     EQU   *
         ESTAE 0
         STH   R1,MSGCODE         SET CODE FOR IGCSB03D
         MVC   XCTLNAME(8),=CL8'IGCSB03D' NAME OF ENTRY POINT
         L     R15,=V(IEESB03D)     SECOND LOAD
         BR    R15
         SPACE 3
UNKNOWN  MVC   2(7,R4),=CL7'UNKNOWN'
         MVI   1(R4),X'07'        SET MINOR NAME LENGTH
         MVI   0(R4),X'09'        SET FOR TABLE ENTRIES
         LA    R11,9              LOAD ADJUSTED LENGTH
         AR    R3,R11             INCR NO. OF ENTRIES
         CR    R3,R5              OVERFLOW TABLE
         BH    TABLOFL2           HOPEFULLY NOT
         SH    R9,=H'3'           ADJUST LENGTH FOR EXECUTE
         B     UNKBACK
         EJECT
***********************************************************************
*
*        ERROR MESSAGE CODES SET HERE
*
***********************************************************************
NOMAJNAM LA    R1,4               MAJOR NAME QCB NOT FOUND
         B     XCTL
         SPACE 2
QCBERR   LA    R1,8               MINOR QCB CHAIN ERROR
         B     XCTL
         SPACE 2
QELERR   LA    R1,12              QEL CHAIN ERROR
         B     XCTL
         SPACE 2
GETERR   LA    R1,16              NO FREE CORE AVAILABLE FROM GETMAIN
         B     XCTL
         SPACE 2
BADERR   LA    R1,20              INVALID MAJOR/MINOR NAME
         B     XCTL
         SPACE 2
PARMERR  LA    R1,24              NO MINOR NAME SPECIFIED
         B     XCTL
         SPACE 2
NOOUTPUT LA    R1,28              MINOR NAME QCB NOT FOUND
         B     XCTL
         SPACE 2
TABLOVFL LA    R1,32              LOST DATA--TABLE SIZE EXCEEDED
         B     SETSIZE
         SPACE 2
TABLOFL2 SR    R3,R11             TABLE OVERFLOW ON MINOR QCB NAME
         B     TABLOVFL           OMIT IT FROM TABLE
         SPACE 2
CMDERR   LA    R1,36              COMMAND ERROR
         B     XCTL
         EJECT
         USING *,R15
STAEXIT  CH    R0,=H'12'           SDWA GOTTEN
         BE    STAEXIT1            NO, FORCE RETURN
         L     R2,=A(STAERTRY)     LOAD RETRY ADDR
         SETRP RC=4,RETADDR=(2),FRESDWA=YES,DUMP=NO
         SPACE 3
STAEXIT1 L     R0,=A(STAERTRY)     LOAD RETRY ADDR
         LA    R15,4
         BR    R14
         DROP  R15
         SPACE 3
         USING *,R15
STAERTRY L     R12,=A(IEESA03D)    LOAD ENTRY POINT ADDR
         LR    R13,R1              RELOAD WORK AREA ADDR
         DROP  R15
         LA    R1,STAEMSG          ADDRESSING ERROR
         L     R2,XSASAVE          RELOAD XSA ADDR
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         B     CMDERR
         EJECT
***********************************************************************
*
*        CONSTANTS, DSECTS, ETC HERE
*
***********************************************************************
MVNAM    MVC   0(*-*,R6),0(R8)
COMPMINR CLC   MINNAME(*-*),20(R7)
QCBNAME  MVC   2(*-*,R4),20(R7)
GQSCANP  GQSCAN MF=L
GQSCANE  EQU   *                  TO GET LENGTH OF GQSCAN PARM LIST
         DS    0F
TSMSK    DC    X'00007FFF'
SUB241   DC    X'F1000000'
ENABLE   DC    X'FF'
CORSIZ   DC    F'9120'
STAEMSG  DC    X'00360100'
         DC    CL50'ERROR ENCOUNTERED IN CONTROL BLOCKS, RETRY COMMAND'
*
WKDSECT  DSECT
SAVA     DS    18F                SAVE-AREA
SUBPOOL  DS    F                  GETMAIN SUBPOOL
XSASAVE  DS    F                  EXTENDED SAVE-AREA PTR
CORE     DS    F                  POINTER TO FREE CORE TABLE
MAJLGTH  DS    H                  MODIFIED LENGTH OF MAJOR NAME
MINLGTH  DS    H                  MODIFIED LENGTH OF MINOR NAME
SWTCH    DS    H                  PROGRAM SWITCHES
***********************************************************************
*
*              SWTCH -- BIT DEFINITIONS
*
*        OFFSET   VALUE   MEANING
*       -------  ------- ---------
*          +0     X'00'   FULLLY QUALIFIED MINOR NAME GIVEN
*
*          +0     X'F0'   OBTAIN ALL MINOR NAMES
*
*          +0     X'0F'   OBTAIN ALL MINOR NAMES STARTING WITH GIVEN
*
*          +1     X'F0'   FOUND MINOR NAME, OUTPUT EXISTS
*
*          +1     X'0F'   OBTAIN ONLY MAJOR QCB NAMES
*
***********************************************************************
WKSIZE   DS    H                  SIZE OF WORK-AREA
CORESIZE DS    H                  SIZE OF FREE-CORE TABLE
MSGCODE  DS    H                  I/O MESSAGE CODE
TBLSIZE  DS    H                  NUMBER OF TABLE ENTRIES
MAJNAM   DS    CL8                MAJOR NAME
MINNAME  DS    CL255              MINOR NAME
NUMCHK   EQU   MINNAME+200
WTOLIST  DS    F                  WTO CONTROL BYTES
BUFFER   DS    CL65               WTO MESSAGE BUFFER
XCTLLIST DS    0F                 XCTL CONTROL INFO
XCTLEP   DS    F                  ADDRESS OF EP PARAMETER
XCTLDCB  DS    F                  DCB ADDRESS PARAMETER
XCTLNAME DS    CL8                ENTRY POINT NAME
         DS    0F
MINADDR  DS    F
MINENTRY DS    F
SJOB     DS    CL8                SELECTION JOB
ESTAELST DS    4F
TOKEN    DS    F                  GQSCAN TOKEN
SPSTART  DS    A                  START POINT OF QNAMES IN TABLE
GQRET    DS    F                  GQSCAN RETURN CODE
NUMRIBS  DS    F                  NUMBER OF RIB'S IN AREA
NUMRIBES DS    F                  NUMBER OF RIBE'S
RIBELEN  DS    H                  LENGTH OF RIBE
GQSCANL  GQSCAN MF=L
SWTCHA   DS    X                  0 IF MAJOR NAME NOT FOUND
SWTCHB   DS    X                  0 IF RNAME NOT MOVED YET
         DS    0D
AREA     DS    XL1024             GQSCAN RETURN AREA
LWKDSECT EQU   *-WKDSECT
DSXSA    DSECT
XSA      DS    0D
XAP      DS    F                  PTR TO XCTL NAME
XAD      DS    F                  DCB PTR
XAX      DS    D                  XCTL NAME
XAE      DS    0C                 ERROR CODE
XAR      DS    F                  PTR TO PARM LIST (REG1)
XAN      DS    0C                 VERB INDEX
XAL      DS    F                  PTR TO LIST POSITION
XAV      DS    D                  VERB
XAS      DS    D                  TEMP SAVE-AREA
XAU      DS    C                  UCM ENTRY INDICATOR
         DS    C                  RESERVED
XAJ      DS    H                  TJID ENTRY INDICATOR
         DS    F                  RESERVED
         EJECT
         PRINT NOGEN
         IHASDWA
         EJECT
         ISGRIB
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 2
         END
