         TITLE 'CSCGI03D -   I  JES2 INIT DISPLAY'
***********************************************************************
***********************************************************************
***                                                                 ***
***                                                                 ***
***                                                                 ***
***                     COMMAND  SUB-SYSTEM                         ***
***                  -------------------------                      ***
***                                                                 ***
***                                                                 ***
***       CSCGI03D -       I  JES2 INIT DISPLAY                     ***
***                                                                 ***
***       VERSION -        1.2                                      ***
***                                                                 ***
***       MVS LEVEL -      UP TO MVS/SP1.3                          ***
***                                                                 ***
***       UPDATED -        03/24/83                                 ***
***                                                                 ***
***       NOTE -           WHEN YOU GET AN ASSEMBLE ERROR OF 12     ***
***                        AT THE CSECT SDWA JUST IGNORE THE ERROR  ***
***                        YOU WILL BE OKAY.                        ***
***                        THE ERROR MESSAGE (AT LEAST FROM ASMBLER ***
***                        H) IS 'PREVIOUS USE OF SYMBOL IS NOT     ***
***                        THIS SECTION TYPE'.                      ***
***                                                                 ***
***                                                                 ***
***       ADD MACRO CALLED $DEB BECAUSE THE $SJB MACRO NOW          ***
***           REFERENCES DEB FIELDS WHICH MEANS THAT THE $DEB       ***
***           MACRO MUST PRECEDE THE $SJB MACRO FOR ASSEMBLER F.    ***
***                                                                 ***
***                                                                 ***
***********************************************************************
***********************************************************************
         EJECT
CSCGI03D CSECT
         LR    R12,R15
         USING CSCGI03D,R12
         L     R0,SIZE             LOAD GETMAIN AREA SIZE AND SUBPOOL
         GETMAIN R,LV=(0)
         LR    R13,R1
         USING WORK,R13
         ST    R14,SAVRET          SAVE RETURN ADDR
         ST    R2,XSASAVE          SAVE XSA ADDR
         USING XSA,R2
         LR    R10,R13             LOAD SAVE AREA ADDR
         B     ESTAEBYP            BYPASS ESTAE LIST
ESTAEOVL ESTAE STAEXIT,CT,MF=L
ESTAEBYP MVC   ESTAELST(16),ESTAEOVL
         LA    R1,ESTAELST
         ESTAE PARAM=(10),MF=(E,(1))
         USING CVTDSECT,R1        SETUP CVT BASE
         USING JESCT,R6           SETUP JESCT BASE
         USING SSCT,R3            SETUP SSCT BASE
         USING SSVT,R4            SETUP SSVT BASE
         USING PITDSECT,R5        SETUP PIT BASE
         USING SJBDSECT,R11       SETUP SJB BASE
         LA    R1,ALINE1          PRINT HEADING LINE
         SR    R0,R0
         IC    R0,XAU
         SVC   35
         LA    R1,ALINE2          PRINT HEADING LINE
         SR    R0,R0
         IC    R0,XAU
         SVC   35
         LA    R1,ALINE3          PRINT HEADING LINE
         SR    R0,R0
         IC    R0,XAU
         SVC   35
         MVI   LSW,C' '
         EJECT
CONTINUE L     R1,16              GET CVT
         L     R6,296(R1)         GET JESCT    (JES CONTROL TABLE)
         L     R3,JESSSCT         GET FIRST JES SSCT (SSCVT)
         SPACE 1
NEXTSSCT L     R4,SSCTSSVT        GET JES SSVT
         L     R5,$SVPIT          GET PIT ADDR--5.302 JES LOGIC+MAINT
         SPACE 1
NEXTPIT  MVC   IDENT(40),=CL40' ' CLEAR DETAIL LINE
         MVC   CLINEX(4),=X'00540100'
         TM    PITSTAT,PITHOLDA   PIT DRAINED $PI ?
         BNO   *+10               IF NOT CONTINUE
         MVC   STAT(6),=CL6'DRAIN'   MOVE IN DRAINED STATUS
         TM    PITSTAT,PITHOLD1   PIT DRAINED $P IN ?
         BNO   *+10               IF NOT CONTINUE
         MVC   STAT(6),=CL6'DRAIN'   MOVE IN DRAINED STATUS
         TM    PITSTAT,PITHALTA   PIT HALTED  $Z I ?
         BNO   *+10               IF NOT CONTINUE
         MVC   STAT(6),=CL6'HALT'    MOVE IN HALTED STATUS
         TM    PITSTAT,PITHALT1   PIT HALTED  $Z IN ?
         BNO   *+10               IF NOT CONTINUE
         MVC   STAT(6),=CL6'HALT'    MOVE IN HALTED STATUS
         TM    PITSTAT,PITINIT    OS INIT EXISTS FOR PIT?
         BNO   *+10               IF NOT CONTINUE
         MVC   STAT(6),=CL6'INACT'   MOVE IN INACTIVE
         TM    PITSTAT,PITBUSY    PIT BUSY ?
         BNO   *+10               IF NOT CONTINUE
         MVC   STAT(6),=CL6'ACTIV'   MOVE IN ACTIVE
         TM    PITSTAT,PITIDLE    PIT IDLE ?
         BNO   *+10               IF NOT CONTINUE
         MVC   STAT(6),=CL6'IDLE'     MOVE IN IDLE
         CLC   STAT(6),=6C' '        STATUS NOT AVAILABLE ?
         BNE   *+10               IF NOT CONTINUE
         MVC   STAT(6),=CL6'?????'   MOVE IN STATUS NOT AVAIL.
         MVC   IDENT(2),PITPATID     MOVE ID IN---FORMAT CL2
         MVC   INITNAM(8),PITCLASS   MOVE THE INIT CLASSES TO OUTPUT
         CLI   IDENT,C' '
         BNE   *+8
         MVI   IDENT,C'0'
*
*    &MAXCLAS PARAMETER ON GEN LIMITS MAX CLASSES, ABOVE MAY NEED
*    TO BE CHANGED IF OTHER THAN 8 CLASSES.
*
         TM    PITSTAT,PITBUSY    PIT BUSY ?
         BNO   PRINT              IF NOT CONTINUE
         L     R11,PITSJB         GET SJB ADDRESS
         MVC   JOBNAME(8),SJBJOBNM   GET JOBNAME FROM JOB CARD
         MVC   JOBNUM(4),SJBJOBID+4  GET JOBID FROM JOB CARD
         MVI   UCLASS,C'('
         MVI   UCLASS+2,C')'
         MVC   UCLASS+1(1),SJBJCLAS    GET USED CLASS
         EJECT
PRINT    CLI   LSW,C' '           CHECK PRINT SW FOR LEFT SIDE
         BE    MOVELEFT           MOVE IN LEFT PRINT AREA
         CLI   LSW,C'1'           CHECK PRINT SW FOR RIGHT SIDE
         BE    MOVERIGT           MOVE IN RIGHT PRINT AREA
         LA    R1,STAEMSG         WRITE ERROR LINE
         SR    R0,R0
         IC    R0,XAU
         SVC   35
         B     FINAL              END IF ERROR
         SPACE 1
PUTIT    LA    R1,CLINEX          WRITE MESSAGE LINE
         SR    R0,R0
         IC    R0,XAU
         SVC   35
         MVI   LSW,C' '           RESET PRINT SWITCH
         B     NEXTIT             GET NEXT PIT
         SPACE 1
FINAL    CLI   LSW,C' '           CHECK IF LAST DATA FILLED
         BE    EXIT               IF DONE, DON'T WRITE
         CLI   LSW,C'1'           CHECK IF LEFT ONLY FILLED
         BE    SPRIGHT            GO TO SPACE-RIGHT
         SPACE 1
LASTWR   LA    R1,CLINEX          WRITE MESSAGE LINE
         SR    R0,R0
         IC    R0,XAU
         SVC   35
         B     EXIT
         SPACE 1
MOVELEFT MVC   LSW,=C'1'          SET LEFT PRINT FLAG
         MVC   CLEFT(40),PLINE        MOVE IN LEFT SIDE
         SPACE 1
NEXTIT   L     R5,PITNEXT         GET NEXT PIT---REFER 5.200 JES2
         LTR   R5,R5              CHK R5 FOR VALID ADDR
         BZ    FINAL              END PROCESS FOR SSCT
         B     NEXTPIT            GO BACK
         SPACE 1
SPRIGHT  MVC   CRIGHT(40),=CL40' ' MOVE SPACES TO RIGHT
         B     LASTWR             GO TO LAST WRITE
         SPACE 1
MOVERIGT MVC   LSW,=C'2'          SET FULL PRINT FLAG
         MVC   CRIGHT(40),PLINE       MOVE IN RIGHT SIDE
         B     PUTIT              GO TO WRITE LINE
         EJECT
EXIT     ESTAE 0
         L     R0,SIZE             LOAD GETMAIN SIZE AND SUBPOOL
         LR    R1,R13              LOAD GETMAIN AREA ADDR
         L     R14,SAVRET          RETURN ADDR
         FREEMAIN R,LV=(0),A=(1)
         SR    R15,R15
         BR    R14
         EJECT
         USING *,R15
STAEXIT  CH    R0,=H'12'           SDWA GOTTEN
         BE    STAEXIT1            NO, FORCE RETURN
         L     R2,=A(STAERTRY)     LOAD RETRY ADDR
         SETRP RC=4,RETADDR=(2),FRESDWA=YES,DUMP=NO
         SPACE 3
STAEXIT1 L     R0,=A(STAERTRY)     LOAD RETRY ADDR
         LA    R15,4
         BR    R14
         DROP  R15
         SPACE 3
         USING *,R15
STAERTRY L     R12,=A(CSCGI03D)    LOAD ENTRY POINT ADDR
         LR    R13,R1              RELOAD WORK AREA ADDR
         DROP  R15
         SPACE 3
CTLERROR LA    R1,STAEMSG          ADDRESSING ERROR
         L     R2,XSASAVE          RELOAD XSA ADDR
         SR    R0,R0
         IC    R0,XAU
         SVC   35
         B     EXIT
         EJECT
         LTORG
         SPACE 3
         DS    0F
SIZE     DC    X'F1',AL3(WORKEND-WORKSTRT)
         SPACE 3
         DS    0F
ALINE1   DC    X'00540100'
         DC    C'INITIATOR   JOB           JOB  INIT     '
         DC    C'INITIATOR   JOB           JOB  INIT     '
         SPACE 3
         DS    0F
ALINE2   DC    X'00540100'
         DC    C'ID  STATUS  NUM  JOBNAME  CLS  CLASS    '
         DC    C'ID  STATUS  NUM  JOBNAME  CLS  CLASS    '
         SPACE 3
         DS    0F
ALINE3   DC    X'00540100'
         DC    C'--------------------------------------  '
         DC    C'--------------------------------------  '
         SPACE 3
         DS    0F
STAEMSG  DC    X'00360100'
         DC    CL50'ERROR ENCOUNTERED IN CONTROL BLOCKS, RETRY COMMAND'
         EJECT
         EJECT
         $DEB               GEN $DEB
         $SJB               GEN $SJB
         $PIT               GEN $PIT
         PRINT OFF
         $CVT               GEN $CVT
         $JESCT             GEN $JESCT
         $SSCT              GEN $SSCT
         $SVT               GEN $SVT
         EJECT
         IHASDWA
WORK     DSECT
WORKSTRT DS    0D
DOUBLE   DS    2F
SAVRET   DS    F
XSASAVE  DS    F
LSW      DS    C                  LINE PRINT SWITCH
*
* LSW ' ' IS NO FILLED, '1' IS LEFT FILLED, '2' IS BOTH FILLED
*
         SPACE 3
PLINE    DS    0CL40
IDENT    DS    CL4
STAT     DS    CL7
JOBNUM   DS    CL6
JOBNAME  DS    CL9
UCLASS   DS    CL5
INITNAM  DS    CL9
         SPACE 3
         DS    0F
CLINEX   DS    F
CLINE    DS    0CL80
CLEFT    DS    CL40
CRIGHT   DS    CL40
         SPACE 3
ESTAELST DS    4F
         SPACE 3
WORKEND  DS    0F
         EJECT
XSA      DSECT
XAP      DS    F
XAD      DS    F
XAX      DS    D
XAE      DS    0C
XAR      DS    F
XAN      DS    0C
XAL      DS    F
XAT      DS    D
XAS      DS    D
XAU      DS    C
         DS    C
XAJ      DS    H
XAA      DS    F
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
