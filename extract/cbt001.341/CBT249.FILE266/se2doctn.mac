#$#



















                      COMMAND  SUB-SYSTEM  COMMANDS
                  --------------------------------------





                     UPDATED ON -   DEC 30, 1981


                     VERSION -      2.5


                     WRITTEN BY -   A. R. MAGNUSON

                     UPDATED BY -   A. CASINGHINO
#$#



















                      COMMAND  SUB-SYSTEM  COMMANDS
                  --------------------------------------





                     UPDATED ON -   DEC 30, 1981


                     VERSION -      2.5


                     WRITTEN BY -   A. R. MAGNUSON

                     UPDATED BY  -  A. CASINGHINO
#$#

         COMMAND SUB-SYSTEM  -        BASIC OPERATION FLOW
-----------------------------------------------------------------------








  I------------I         I------------I            SSCVT CHAIN BUILT BY
  I    CVT     I         I   JESCT    I            NIP FROM 4 BYTE
  I  +X'128'   I-------->I   +X'18'   I---------/  NAMES IN SUBSYS NAME
  I            I         I            I       /    TABLE.
  I------------I         I------------I     /      CSECT -   IEFJESNM
                                          /        MODULE -  IEEVIPL
          /-----------------------------/
        /
      /
    /  I------------I         I------------I         I------------I
  /    I   SSCVT    I         I   SSCVT    I         I   SSCVT    I
/----->I  +X'04'    I-------->I   +X'04'   I-------->I   +X'04'   I--->
       I   'JES2'   I         I   'MSTR'   I         I   'CMD1'   I
       I            I         I            I         I   +X'16'   I---/
       I------------I         I------------I         I------------I /
                                                                  /
                                                                /
          /---------------------------------------------------/
        /
      /
    /  I-----------------------I     SSVT FOR CMD1 IS BUILT BY CMDSBINT
  /    I         SSVT          I     AT CMD1 START UP TIME.
/----->I                       I     CMDSBINT ISSUES GETMAIN FOR SSVT
       I +0   RESERVED         I     AND INITIALIZES IT.
       I +2   NO. OF FUNCTIONS I
       I +4   FUNCTION MATRIX  I
       I      (256 BYTES)      I
       I +260 CMDDUMMY ADDR    I
       I +264 CMD1 WORK AREA   I
       I-----------------------I
#$#


       I-----------------------I     GETMAIN SSVT.
       I      CMDSBINT         I     INITIALIZE SSVT.
       I-----------------------I     LOAD CMDDUMMY.
       I                       I     LOAD CMDSBSYS.
       I   INITIALIZATION      I     OVERLAY CMDDUMMY WITH CMDSBSYS.
       I                       I     ATTACH CMDSBCSC IF NECESSARY.
       I                       I     LOAD ALL COMMAND MODULES AND BUILD
       I                       I     CMD TABLE FOR USE BY CMDSBSYS.
       I                       I     STORE SSVT IN SSCVT TO ACTIVATE.
       I-----------------------I
       I                       I
       I                       I     HANDLE ALL ## COMMANDS.
       I   ## CMD MONITOR      I     STIMER WAIT IF ISSUED UNDER
       I                       I     MASTER SCHEDULER COULD LOCK OUT
       I                       I     CONSOLES.
       I-----------------------I




       I-----------------------I     READ CSCDATA DATA SET.
       I      CMDSBCSC         I     IF COMMAND, VALIDATE COMMAND AND
       I-----------------------I     WRITE IT TO CSCDATA DAT SET.
       I                       I     IF EXECUTE, LOAD, CHANGE WTO TO
       I                       I     BRANCH SEQUENCE TO SAVE OUTPUT.
       I                       I     BRANCH ENTER COMMAND MODULE.
       I  CROSS SYSTEM CONTROL I     WRITE CSCDATA DATA SET WITH
       I                       I     COMMAND OUTPUT.
       I                       I     IF OUTPUT, ISSUE WTO FOR ALL MSGS.
       I                       I     WRITE CSCDATA DATA SET TO CLEAR
       I                       I     AND ALLOW NEXT COMMAND.
       I-----------------------I




       I-----------------------I
       I      CMDSBSYS         I
       I-----------------------I
       I                       I     ENTERED FROM IEFJSREQ FOR ALL
       I   COMMAND PROCESSOR   I     COMMANDS.  OPERATES UNDER MASTER
       I                       I     SCHEDULER ADDRESS SPACE.
       I                       I     VALIDATE COMMAND.  IF NOT # OR ##
       I                       I     INDICATE COMMAND NOT PROCESSED IN
       I                       I     SSIB AND RETURN TO MASTER SCHEDLR.
       I                       I     IF ## COMMAND,  MOVE COMMAND TO
       I                       I     MONITOR CMD COMMUNICATION AREA.
       I                       I     IF CROSS SYSTEM COMMAND, MOVE
       I                       I     COMMAND TO CROSS SYSTEM CMD
       I                       I     COMMUNICATION AREA.
       I                       I     INDICATE COMMAND PROCESSED IN
       I                       I     SSIB AND RETURN TO MASTER SCHEDLR.
       I                       I     IF # COMMAND,  LOAD COMMAND MODULE
       I                       I     ADDR FROM CMD TABLE AND BRANCH.
       I-----------------------I
#$#
         CMD SUB-SYSTEM INSTALLATION



         1.  ASSEMBLE AND LINK EACH COMMAND MODULE INTO SYS1.LPALIB,
             OR SYS1.LINKLIB IF YOU PLAN TO MLPA THEM.
             NOTE THAT IEESA03D AND IEESB03D MUST BE LINKEDITED
             TOGETHER AS IEESA03D.


         2.  ASSEMBLE AND LINK CMDSBINT,CMDSBSYS, AND CMDSBCSC INTO
             SYS1.LINKLIB OR ANY LNKLSTNN LIBRARY YOU WISH.


         3.  ASSEMBLE AND LINK A DUMMY MODULE CALLED  CMDDUMMY  INTO
             SYS1.LPALIB, OR SYS1.LINKLIB IF YOU WANT TO MLPA IT.
             CMDDUMMY MUST BE AT LEAST 2048 BYTES LONG AND MUST BE
             SPECIFIED IN AN IEAFIXNN MEMBER OF PARMLIB TO CAUSE
             CMDDUMMY TO BE FIXED IN LOW CORE.
             AT SUB-SYSTEM INITIALIZATION CMDDUMMY IS OVERLAID IN LOW
             CORE WITH MODULE CMDSBSYS,  BY CMDSBINT THE COMMAND
             SUB-SYSTEM INITIALIZATION ROUTINE.


         4.  CREATE A PROC CALLED  CMD1  AND PUT IT IN SYS1.PROCLIB.

         //CMD1   PROC  A=ASE0,
         //             B='$',
         //             C=CSK0,
         //             D=DSD0,
         //             E=ESS0,
         //             F=FSF0,
         //             G='$',
         //             H=HSM0,
         //             I=ISJ0,
         //             J=JSL0,
         //             K='$',
         //             L=LSC0,
         //             M=MSO0,
         //             N=NSA0,
         //             O=OSR0,
         //             P=PSP0,
         //             Q=QSQ0,
         //             R=RSG0,
         //             S=SSH0,
         //             T=TSN0,
         //             U='$',
         //             V=VSI0,
         //             W='$',
         //             X='$',
         //             Y='$',
         //             Z='ZSZ0'
         //CMD1  EXEC PGM=CMDSBINT,TIME=1440,DPRTY=(15,10)
         // PARM='&A&B&C&D&E&F&G&H&I&J&K&L&M&N&O&P&Q&R&S&T&U&V&W&X&Y&Z'
         //SYSUDUMP  DD  SYSOUT=A
         //CSC#....  DD  DUMMY
         //CSCDATA   DD  DSN=SYS1.SYSTEM.CMDSBSYS.CSCDATA,DISP=SHR


         WHERE  -    FOR CSC#.... REPLACE .... WITH SMF SYSID OF ONE
                     OF THE SYSTEMS USING CROSS-SYSTEM COMMANDS.
                     AS MANY CSC##.... DD CARDS AS NECESSARY MAY EXIST.
#$#
         5.  ALLOCATE A ONE TRACK DATASET FOR THE CSCDATA DD IN THE
             CMD1 PROC. WRITE ONE 16 BYTE RECORD OF HEX ZEROS IN THE
             DATASET TO INITIALIZE IT.  IF YOU DO NOT WANT TO USE THE
             CROSS-SYSTEM COMMAND FACILITY DO NOT PUT THE CSCDATA
             DD CARD IN THE CMD1 JCL PROC.


         6.  SUPERZAP (OR SYSGEN IN SCHEDULER MACRO SUBSYS=CMD1),  THE
             SUB-SYSTEM NAME TABLE.

                 NAME IEEVIPL IEFJESNM
                 VER  0008  00000000
                 REP  0008  C3D4C4F1


         7.  COPY INTO A LNKLSTNN LIBRARY OR SYS1.LINKLIB ALL THE
             SUB-SYSTEM MODULES IEESA03D - IEEZS03D RENAMING THEM TO
             CSCSA03D - CSCZS03D. THESE ARE USED FOR THE CROSS-SYSTEM
             # COMMANDS AND THE TSO # COMMANDS.


         8.  SOME HELPFUL HINTS THAT MAY SAVE SOME PROBLEMS.
             A. TO LINK QCB TRACE TOGETHER USE THE FOLLOWING
                (1).  INCLUDE LIBRARY(IEESA03D)
                (2).  INCLUDE LIBRARY(IEESB03D)
                (3).  ENTRY IEESA03D
                (4).  NAME  IEESA03D(R)
             B. LINK CMDDUMMY WITH REUS, RENT LINKEDIT ATTRIBUTES.
             C. LINK CMDSBINT AND CMDSBCSC WITH AC=1 ATTRIBUTE.
             D. LINK CMDSBSYS WITH REUS, RENT AND AC=1 ATTRIBUTES.
             E. BE SURE ALL # COMMANDS (IEES*03D) ARE NOT IN ANY
                LNKLSTNN LIBRARIES. (UNLESS YOU ARE MPLAING FROM IT)
             F. MAKE SURE CMDSBSYS, CMDSBINT, AND CMDSBCSC
                ARE NOT IN LPA.
             G. MAKE SURE THAT CMDDUMMY IS IN FLPA.
             H. MAKE SURE THAT ALL # COMMANDS ARE IN LPA.
                (PLPA,MLPA, OR FLPA)
             I. WHEN LINKING THE # COMMANDS DO NOT USE RENT REUS
                ATTRIBUTES.  IT DOESNT MATTER FOR LPA BUT EXECUTION
                OF COPIED 'CSC' MODULES WITH THESE ATTRIBUTES WILL
                CAUSE 0C4'S.
#$#


         9.  THE BASE SYSTEM FOR THE CMD SUB-SYSTEM IS SE-1 WITHOUT
             SU64.  IT WILL BE NECESSARY TO REPLACE SOME MODULES IF
             YOUR SYSTEM IS NOT SE-1. THE MODULE PREFIX NAMES FOR
             REPLACEMENT MODULES ARE AS FOLLOWS -
             NSE -   NON-SE  NON-SU64       SE2 -   SE-2 AND SU64.
             SP1 -   MVS/SP1.0 1.1


         10. IF YOU WISH TO ALLOW # COMMANDS UNDER TSO,
             LINK MODULES CMDTSO, AND/OR CMDSBTSO WITH LINKEDIT
             ATTRIBUTES OF NOT REENTRANT INTO ANY LIBRARY.
             LINK GRAPHIC DISPLAY MODULES CSCGA03D, CSCGE03D, CSCGF03D,
             CSCGH03D, CSCGI03D, CSCGJ03D, CSCGO03D, CSCGQ03D,
             CSCGS03D, AND CSCGU03D,
             INTO THE SAME LIBRARY AS CMDSBTSO.
             NOTE -   REMEMBER REPLACEMENT MODULES.
             NSE -   NON-SE  NON-SU64       SE2 -   SE-2 AND SU64.
             SP1 -   MVS/SP1.0 1.1


         11. IF YOU WISH TO ALLOW # COMMANDS AT A STANDALONE 3270,
             LINK MODULE CMDSBMON WITH LINKEDIT ATTRIBUTES
             OF NOT REENTRANT INTO ANY AUTHORIZED LIBRARY.
             LINK GRAPHIC DISPLAY MODULES CSCGA03D, CSCGE03D, CSCGF03D,
             CSCGH03D, CSCGI03D, CSCGJ03D, CSCGO03D, CSCGQ03D,
             CSCGS03D, AND CSCGU03D,
             INTO THE SAME LIBRARY AS CMDSBMON.
             NOTE -   REMEMBER REPLACEMENT MODULES.
             NSE -   NON-SE  NON-SU64       SE2 -   SE-2 AND SU64.
             SP1 -   MVS/SP1.0 1.1


         12. PRIOR TO ASSEMBLING CSCGQQXX MODULES IT WILL BE NECESSARY
             TO EDIT MACRO QCOMMON IN ORDER TO PROVIDE SYS1.HASPCKPT
             DEVTYPE AND VOLSER, AND SYSTEM IDS OF ALL SYSTEMS IN A
             MULTI-ACCESS SPOOL ENVIRONMENT.
             SYSTEM IDS MUST BE SPECIFIED IN THE SAME ORDER AS THEY
             APPEAR IN THE JES2PARM MEMBER OF SYS1.PARMLIB.
             NOTE THAT THIS VERSION OF THE QUEUE COMMAND DOES NOT
             WORK WITH NJE SUPPORT AND MAY NOT WORK WITH THE DUAL
             CHECKPOINT PTF ON.
#$#
         COMMAND  SUB-SYSTEM  INITIALIZATION




               TO START  -


                           ISSUE COMMAND  (S CMD1)  WHICH WILL START
                           A JOB TO INITIALIZE AND CONNECT THE
                           COMMAND SUB-SYSTEM AND REMAIN ACTIVE TO
                           SERVICE MONITOR AND CROSS-SYSTEM COMMANDS.
                           CMD1 WILL SET ITSELF NON-SWAPPABLE.


                           IF YOU WISH TO BYPASS USE OF ANY OF THE
                           # COMMANDS, YOU MAY SO SPECIFY WHEN YOU
                           ISSUE THE START COMMAND.


                           EXAMPLE   -

                           S CMD1,D=$     (WILL ELIMINATE USE OF #D)



                           IF YOU WISH TO DISABLE ANY OF THE
                           ## COMMANDS, YOU MAY ISSUE ##$X COMMANDS
                           FOR EACH COMMAND YOU WISH TO DISABLE AFTER
                           YOU START CMD1.

                           WHERE  X -      IS THE COMMAND TO DELETE




               TO STOP THE CROSS-SYSTEM FACILITY -

                           ISSUE COMMAND (#**) WHICH WILL DISCONNECT
                           THE CROSS-SYSTEM COMMANDS AND ISSUE A
                           MESSAGE TO INDICATE CSC HAS BEEN STOPPED.




               TO END  -

                           ISSUE COMMAND (P CMD1) WHICH WILL DISCONNECT
                           THE COMMAND SUB-SYSTEM, AND ISSUE A
                           NON-ROLLABLE MESSAGE TO THE OPERATOR.


                           CMDSBSYS -   COMMAND SUB-SYSTEM TERMINATED
#$#
        COMMAND SUB-SYSTEM COMMANDS  (#X)



             ALL OF THE FOLLOWING COMMANDS HAVE SOME COMMON SYNTAX
             RULES AND SOME COMMON OUTPUT.



        SYNTAX -


             1.    THERE MUST BE 1 BLANK OR NO BLANKS BETWEEN THE #
                   AND THE COMMAND ID,  AND THERE MAY OR MAY NOT BE
                   A SPACE OR SPACES FOLLOWING THE COMMAND ID.

                   EXAMPLES -    #X    # X    #XY    #X Y    # X Y
                                ##X   ## X   ##XY   ##X Y   ## X Y

             2.    ,T=NNN   PARAMETER FOR ANY ## COMMAND SPECIFIES
                            A 1-3 DIGIT TIME LIMIT FOR THE MONITOR
                            COMMAND.  ANY VALUE FROM 1 TO 999 MAY BE
                            SPECIFIED.

             3.    IF THE  ,T=NNN  PARAMETER IS SPECIFIED IT MUST BE
                   THE LAST PARAMETER IN THE COMMAND, UNLESS THE
                   ,L=CC  PARAMETER IS ALSO SPECIFIED, IN WHICH CASE
                   THE ,T=NNN PARAMETER MUST PRECEDE IT.

             4.    ,L=CC    PARAMETER FOR ANY COMMAND DIRECTS THE
                            OUTPUT OF THE COMMAND TO THE SPECIFIED
                            CONSOLE ID.   OMISSION OF THIS PARAMETER
                            CAUSES THE COMMAND OUTPUT TO RETURN TO
                            THE CONSOLE THAT ISSUED THE COMMAND.

             5.    IF THE  ,L=CC  PARAMETER IS SPECIFIED IT MUST BE -
                       A.   THE LAST PARAMETER IN THE COMMAND
                       B.   FOR A TWO DIGIT DECIMAL CONSOLE ID

             6.    ,S=XXXX  PARAMETER FOR ANY # COMMAND SPECIFIES
                            A 4 DIGIT SYSTEM ID (FROM SMF PARMS)
                            TO SEND THE COMMAND TO.  THE COMMAND
                            IS EXECUTED ON THE SYSTEM IT IS SENT TO
                            AND THE OUTPUT IS SENT BACK TO THE
                            ISSUING CONSOLE OR THE CONSOLE
                            SPECIFIED BY THE L=NN PARAMETER.
                            COMMANDS  #T  AND ALL  ## COMMANDS
                            CANNOT BE EXECUTED CROSS-SYSTEM.


        OUTPUT -


             FOR ALL COMMANDS A HEADER LINE IS PRINTED INDICATING
             THE COMMAND ID, ISSUING CONSOLE ID, SYSTEM ID AND DATE.
             SINCE ALL COMMAND OUTPUT IS ECHOED IN THE SYSTEM LOG,
             THIS PROVIDES AN EASY IDENTIFICATION METHOD FOR
             WHICH SYSTEM AND WHAT DATE THE SYSTEM LOG REPRESENTS.


             EXAMPLE -

                   ---  CMD SBSYS (#X)  L=10  K168  76.362  ---



        ERROR RECOVERY -


             ALL COMMANDS EXECUTE IN AN ESTAE ENVIRONMENT,
             AND ISSUE APPROPRIATE MESSAGES IF AN ABEND OCCURS.
#$#
        COMMAND SUB-SYSTEM COMMANDS UNDER TSO    (# X)



        IN ORDER TO EXECUTE # COMMANDS UNDER TSO A CLIST NAMED '#'
        IS INSTALLED WHICH CALLS MODULE CMDTSO PASSING AS A
        PARAMETER THE # COMMAND AND ITS SUB-PARMS.
        NOTE THAT CROSS-SYSTEM COMMANDS CAN BE ISSUED FROM TSO
        AS IF THEY WERE ISSUED FROM AN OPERATOR CONSOLE AND THE
        OUTPUT IS RETURNED TO THE TSO TERMINAL.
        THE FOLLOWING IS A LIST OF THE '#' CLIST -

        PROC 1 CMD
        ALLOC FI(CSCDATA) DA('SYS1.SYSTEM.CMDSBSYS.CSCDATA') SHR
        CALL 'SYS1.LINKLIB(CMDTSO)' '&CMD.'
        END


        IN ORDER TO EXECUTE ## COMMANDS UNDER TSO A CLIST NAMED '##'
        IS INSTALLED WHICH CALLS MODULE CMDTSO PASSING AS A
        PARAMETER THE ## COMMAND AND ITS SUB-PARMS.
        NOTE THAT CROSS-SYSTEM COMMANDS CAN BE ISSUED FROM TSO
        AS IF THEY WERE ISSUED FROM AN OPERATOR CONSOLE AND THE
        OUTPUT IS RETURNED TO THE TSO TERMINAL.
        THE FOLLOWING IS A LIST OF THE '##' CLIST -

        PROC 1 CMD
        CALL 'SYS1.LINKLIB(CMDTSO)' '#&CMD.'
        END


        ALL OF THE FOLLOWING COMMANDS HAVE SOME COMMON SYNTAX
        RULES AND SOME COMMON OUTPUT.


        SYNTAX -


             1.    THERE MUST BE 1 BLANK BETWEEN THE  #  AND THE
                   COMMAND ID.     (# X)  OR  (## X).

             2.    THERE MAY NOT BE SPACES BETWEEN THE COMMAND ID
                   AND ANY SUB-PARAMETERS.   (# XY)  OR  (## XY).


        OUTPUT -


             FOR ALL COMMANDS A HEADER LINE IS PRINTED INDICATING
             THE COMMAND ID, SYSTEM ID, DATE, TIME, USERID, AND ASID.
             AN EXAMPLE OF THE HEADER FOLLOWS -

 ---  <TSO>  CMD SBSYS (#X)  K168  78.100  1430  TMTCE07  0023  ---




        NOTE -  A.   CERTAIN COMMANDS AND/OR SUBCOMMANDS CANNOT BE
                     EXECUTED UNDER TSO.
                     ERROR MESSAGES ARE ISSUED IF ANY OF THE FOLLOWING
                     COMMANDS ARE ISSUED.

                     1. # L    2. # T    3. # D (ZAP ONLY)
                     4. # E    5. ##C


                B.   IF THE COMMAND YOU WISH TO ENTER CONTAINS
                     A COMMA (,) SUBSTITUTE AN AT SIGN (@).

                C.   IF THE COMMAND YOU WISH TO ENTER CONTAINS
                     A SLASH-ASTERISK (/*) SUBSTITUTE A SLASH-NOT (/^).
#$#
        COMMAND SUB-SYSTEM TSO FULL SCREEN SUPPORT



        IN ORDER TO EXECUTE THE TSO FULL SCREEN MONITOR
        ENTER CMDSBTSO TO EXECUTE THE MONITOR AS A COMMAND PROCESSOR
        (EXECUTION OF PGM OR OTHER CP IS ALLOWED ONLY IN THIS MODE),
        OR CREATE A CLIST AS FOLLOWS -

        PROC 0
        ALLOC FI(CSCDATA) DA('SYS1.SYSTEM.CMDSBSYS.CSCDATA') SHR
        CALL 'SYS1.LINKLIB(CMDSBTSO)'
        END


        WHEN EXECUTED THIS PROGRAM WILL ISSUE FULL SCREEN WRITES FOR
        COMMAND OUTPUT FOR ANY # COMMAND OR ## COMMAND AS WELL AS
        SOME SPECIAL GRAPHIC DISPLAY COMMANDS.  THE FIRST DISPLAY
        PRODUCED IS A MENU SCREEN WHICH IS SELF-EXPLANATORY.
        AN AUTOMATIC REFRESH OF ANY #, ##, OR GRAPHIC DISPLAY MAY BE
        REQUESTED BY ENTERING A 2-DIGIT NUMERIC NUMBER OF SECONDS
        IN REFRESH INTERVAL, AND OPTIONALLY A NUMBER OF INTERVALS
        TO ALLOW AUTOMATIC REFRESH (DEFAULT IS 20).
        NOTE THAT CROSS-SYSTEM COMMANDS CAN BE ISSUED FROM TSO
        AS IF THEY WERE ISSUED FROM AN OPERATOR CONSOLE AND THE
        OUTPUT IS RETURNED TO THE TSO TERMINAL.


        ALL OF THE FOLLOWING COMMANDS HAVE SOME COMMON SYNTAX
        RULES AND SOME COMMON OUTPUT.


        SYNTAX -


             1.    THERE MUST NOT BE SPACES BETWEEN THE # AND THE
                   COMMAND ID.     (#X)  OR  (##X).

             2.    THERE MUST NOT BE SPACES BETWEEN THE COMMAND ID
                   AND ANY SUB-PARAMETERS.   (#XY)  OR  (##XY).


        OUTPUT -


             FOR ALL COMMANDS A HEADER LINE IS PRINTED INDICATING
             THE COMMAND ID, SYSTEM ID, DATE, TIME, USERID, AND ASID.
             AN EXAMPLE OF THE HEADER FOLLOWS -

 ---  <TSO>  CMD SBSYS (#X)  K168  78.100  1430  TMTCE07  0023  ---




        NOTE -  A.   CERTAIN COMMANDS AND/OR SUBCOMMANDS CANNOT BE
                     EXECUTED UNDER TSO.
                     ERROR MESSAGES ARE ISSUED IF ANY OF THE FOLLOWING
                     COMMANDS ARE ISSUED.

                     1. # L    2. # T    3. # D (ZAP ONLY)
                     4. # E    5. ##C    6. E (CHANNEL BUSY ONLY)
#$#
        COMMAND SUB-SYSTEM STANDALONE 3270 FULL SCREEN SUPPORT



        IN ORDER TO EXECUTE THE STANDALONE FULL SCREEN MONITOR
        CREATE A PROC AS FOLLOWS -

        //CMDSBMON  PROC  U=XXX
        //CMDSBMON  EXEC  PGM=CMDSBMON,PARM='&U.'
        //CSCDATA  DD  DSN=SYS1.SYSTEM.CMDSBSYS.CSCDATA,DISP=SHR
        //SYSUDUMP  DD  SYSOUT=A
        //CMDLOG    DD  SYSOUT=A
        //*   WHERE  XXX  IS THE 3270 UNIT ADDRESS


        WHEN EXECUTED THIS PROGRAM WILL ISSUE FULL SCREEN WRITES FOR
        COMMAND OUTPUT FOR ANY # COMMAND OR ## COMMAND AS WELL AS
        SOME SPECIAL GRAPHIC DISPLAY COMMANDS.  THE FIRST DISPLAY
        PRODUCED IS A MENU SCREEN WHICH IS SELF-EXPLANATORY.
        AN AUTOMATIC REFRESH OF ANY #, ##, OR GRAPHIC DISPLAY MAY BE
        REQUESTED BY ENTERING A 2-DIGIT NUMERIC NUMBER OF SECONDS
        IN REFRESH INTERVAL, AND OPTIONALLY A NUMBER OF INTERVALS
        TO ALLOW AUTOMATIC REFRESH (DEFAULT IS 20).
        NOTE THAT CROSS-SYSTEM COMMANDS CAN BE ISSUED
        AS IF THEY WERE ISSUED FROM AN OPERATOR CONSOLE AND THE
        OUTPUT IS RETURNED TO THE TERMINAL.


        ALL OF THE FOLLOWING COMMANDS HAVE SOME COMMON SYNTAX
        RULES AND SOME COMMON OUTPUT.


        SYNTAX -


             1.    THERE MUST NOT BE SPACES BETWEEN THE # AND THE
                   COMMAND ID.     (#X)  OR  (##X).

             2.    THERE MUST NOT BE SPACES BETWEEN THE COMMAND ID
                   AND ANY SUB-PARAMETERS.   (#XY)  OR  (##XY).


        OUTPUT -


             FOR ALL COMMANDS A HEADER LINE IS PRINTED INDICATING
             THE COMMAND ID, SYSTEM ID, DATE, TIME, USERID, AND ASID.
             AN EXAMPLE OF THE HEADER FOLLOWS -

 ---  <MON>  CMD SBSYS (#X)  K168  78.100  1430  CMDSBMON  0023  ---




        NOTE -  A.   CERTAIN COMMANDS AND/OR SUBCOMMANDS CANNOT BE
                     EXECUTED UNDER THE STANDALONE MONITOR.
                     ERROR MESSAGES ARE ISSUED IF ANY OF THE FOLLOWING
                     COMMANDS ARE ISSUED.

                     1. # T

#$#
                 COMMAND SUB-SYSTEM GENERAL MESSAGES
              -----------------------------------------




MESSAGE ->        CMD SUBSYS - COMMAND PARAMETER ERROR

DESCRIPTION ->    INVALID COMMAND STRUCTURE.

OPER ACTION ->    REENTER COMMAND.



MESSAGE ->        CMD SUBSYS - COMMAND NOT SUPPORTED

DESCRIPTION ->    INVALID COMMAND ENTERED.

OPER ACTION ->    REENTER COMMAND.



MESSAGE ->        CMD SUBSYS - CONSOLE NOT ACTIVE

DESCRIPTION ->    CONSOLE SPECIFIED BY 'L=NN' PARAMETER IS NOT ACTIVE.

OPER ACTION ->    VARY CONSOLE ONLINE BEFORE RETRYING COMMAND.



MESSAGE ->        CMD SUBSYS - S CHKDUMP ISSUED FOR D DUMP

DESCRIPTION ->    SUB-SYSTEM HAS INTERCEPTED A 'D DUMP' COMMAND
                  AND ISSUED A 'S CHKDUMP' COMMAND.

OPER ACTION ->    NONE.  INFORMATION ONLY.



MESSAGE ->        CMD SUBSYS - COMMAND SUB-SYSTEM TERMINATED

DESCRIPTION ->    SUB-SYSTEM HAS TERMINATED NORMALLY.

OPER ACTION ->    RESTART THE SUB-SYSTEM.



MESSAGE ->        ERROR ENCOUNTERED IN CONTROL BLOCKS, RETRY COMMAND

DESCRIPTION ->    AN ESTAE ROUTINE HAS BEEN ENTERED TO PROCESS AN
                  ABEND FOR THE COMMAND ENTERED.

OPER ACTION ->    REENTER COMMAND.



#$#
MESSAGE ->        CMD SUBSYS - COMMAND REJECTED, SUBSYS BUSY

DESCRIPTION ->    SUB-SYSTEM IS BUSY PROCESSING A PREVIOUS COMMAND.

OPER ACTION ->    REENTER COMMAND.  IF PROBLEM PERSISTS, RESTART
                  THE SUB-SYSTEM.



MESSAGE ->        CMD SUBSYS - COMMAND REJECTED, MONITOR BUSY

DESCRIPTION ->    MONITOR CONTROL IS BUSY PROCESSING A PREVIOUS COMMAND.

OPER ACTION ->    REENTER COMMAND.  IF PROBLEM PERSISTS FOR AN EXTENDED
                  PERIOD OF TIME, RESTART THE SUB-SYSTEM.



MESSAGE ->        CMD SUBSYS - MONITOR COMMAND ACCEPTED

DESCRIPTION ->    MONITOR CONTROL HAS ACCEPTED THE ENTERED COMMAND.

OPER ACTION ->    NONE.  INFORMATION ONLY.



MESSAGE ->        CMD SUBSYS - XMPOST ERROR - RESTART SUBSYS

DESCRIPTION ->    A CROSS-MEMORY POST ERROR HAS OCCURRED.

OPER ACTION ->    RESTART THE SUB-SYSTEM.



MESSAGE ->        CMD SUBSYS - ##X COMMAND DISABLED

DESCRIPTION ->    MONITOR COMMAND ##X HAS BEEN DISABLED.

OPER ACTION ->    TO REINSTATE COMMAND, RESTART THE SUB-SYSTEM.



MESSAGE ->        CMD SUBSYS - COMMAND NOT DISABLED

DESCRIPTION ->    MONITOR COMMAND DISABLE REQUEST HAS FAILED.

OPER ACTION ->    REENTER REQUEST.



#$#
MESSAGE ->        CMD SUBSYS - CSC PARAMETER ERROR

DESCRIPTION ->    CROSS-SYSTEM CONTROL PARAMETER ERROR.
                  MOST LIKELY THE 'S=XXXX' PARAMETER IS MISSING
                  OR INVALID.

OPER ACTION ->    REENTER COMMAND.



MESSAGE ->        CMD SUBSYS - CSC INVALID COMMAND

DESCRIPTION ->    CROSS-SYSTEM CONTROL INVALID COMMAND.
                  COMMAND DOES NOT EXIST OR IS NOT VALID WHEN
                  ISSUED AS A CROSS-SYSTEM COMMAND. (E.G. #T)

OPER ACTION ->    REENTER COMMAND.



MESSAGE ->        CMD SUBSYS - CSC #X COMMAND ACCEPTED

DESCRIPTION ->    CROSS-SYSTEM CONTROL HAS ACCEPTED THE ENTERED COMMAND.

OPER ACTION ->    NONE.  INFORMATION ONLY.



MESSAGE ->        CMD SUBSYS - CSC BUSY, CMD PENDING ON SSSS

DESCRIPTION ->    CROSS-SYSTEM CONTROL HAS DETECTED THAT A PREVIOUS
                  COMMAND ENTERED ON SOME SYSTEM IS PENDING, AND HAS
                  REJECTED THE COMMAND ENTERED.

OPER ACTION ->    REENTER COMMAND.



MESSAGE ->        CMD SUBSYS - CSC TIMEOUT, CMD PENDING ON SSSS

DESCRIPTION ->    CROSS-SYSTEM CONTROL HAS DETECTED THAT A PREVIOUS
                  COMMAND ENTERED ON SOME SYSTEM IS PENDING AND HAS
                  EXCEEDED THE EXPECTED COMPLETION TIME.  THE PENDING
                  COMMAND HAS BEEN AUTOMATICALLY RESET.

OPER ACTION ->    NONE.  INFORMATION ONLY.



MESSAGE ->        CMD SUBSYS - CSC STOPPED

DESCRIPTION ->    CROSS-SYSTEM CONTROL HAS BEEN STOPPED.

OPER ACTION ->    RESTART THE SUB-SYSTEM IF CROSS-SYSTEM COMMANDS
                  ARE DESIRED.



MESSAGE ->        CMD SUBSYS - COMMAND REJECTED, CSC NOT ACTIVE

DESCRIPTION ->    CROSS-SYSTEM CONTROL HAS BEEN STOPPED OR WAS NEVER
                  ACTIVE.

OPER ACTION ->    RESTART THE SUB-SYSTEM IF CROSS-SYSTEM COMMANDS
                  ARE DESIRED.



MESSAGE ->        CMD SUBSYS - COMMAND REJECTED, CSC BUSY

DESCRIPTION ->    CROSS-SYSTEM CONTROL IS BUSY PROCESSING A PREVIOUS
                  COMMAND.

OPER ACTION ->    REENTER COMMAND.  IF PROBLEM PERSISTS, CSC WILL
                  AUTOMATICALLY RESET THE PREVIOUS COMMAND.
#$#
      #A  COMMAND     (DISPLAY JOB STATUS -   EXPANDED  D A)



               #A   ASID       4 LINES OF OUTPUT FOR AN ASID


               #A   .JOBNAME   4 LINES OF OUTPUT FOR AN JOBNAME


               #A              2 LINES OF OUTPUT FOR ALL JOBS


               #A   0000       4 LINES OF OUTPUT FOR ALL JOBS


               #A   XX,L       4 LINES OF OUTPUT FOR SELECTED TYPE


               #A   XX         2 LINES OF OUTPUT FOR SELECTED TYPE


               #A   XX,S       1 LINE OF OUTPUT FOR SELECTED TYPE


               #A   XX,D       1 LINE OF DISPATCHABILITY OUTPUT


                    WHERE  XX   IS ONE OF THE FOLLOWING TYPES -


                    $A         SELECT ALL JOB, TSU, AND STC

                    $J         SELECT ALL JOBS

                    $S         SELECT ALL STARTED TASKS

                    $T         SELECT ALL TSO USERS

                    $I         SELECT ALL IDLE INITIATORS

                    NN         SELECT ALL JOBS IN DOMAIN -   NN
#$#
                   E X A M P L E


    TEST00   (000B) DP(112) SWL(010/016) SWC(0001)
       PERF-NRS(0B/07/0B) DPRTY-NR(70/76) DMN(01)
       Q(00) S(80) Y(40) A(58) T(83) E(00) U(00)
       AS(FE2578) SR(06) OU(FE1080) A(0063/00000)



    1ST LINE -

         TEST00                JOBNAME
         (000B)                ASID
         DP(112)               DISPATCHING PRIORITY  (FROM ASCB)
         SWL(010/016)          SWAP LOAD IN DECIMAL PAGES  (IN/OUT)
         SWC(0001)             SWAP COUNT IN DECIMAL


    2ND LINE -

         PERF-NRS(0B/07/0B)    PERFORMANCE GROUP  (NEW/RESET/SPECIFIED)
         DPRTY-NR(70/76)       DISPATCHING PRIORITY  (FROM OUCB)
         DMN(01)               DOMAIN NUMBER


    3RD LINE -

         (OUCB FLAGS -   SEE DESCRIPTION IN FE HANDBOOK)


    4TH LINE -

         AS(FE2578)            ASCB ADDRESS
         SR(06)                SWAP REASON CODE  (SEE TABLE BELOW)
         QP(01)                DISPATCHING QUEUE POSITION
         OU(FE1080)            OUCB ADDRESS
         A(0063/00000)         ADDRESS SPACE SLOTS/VIO SLOTS



         NOTE THAT IF THE SWAP REASON CODE IS  00,   QP(XX) WILL
         PRINT TO INDICATE THE DISPATCHING QUEUE POSITION.




    SWAP REASON CODES -


         01        TERMINAL WAIT -   OWAITHI
         02        TERMINAL WAIT -   INPUT
         03        LONG WAIT
         04        AUXILLARY STORAGE SHORTAGE
         05        REAL STORAGE SHORTAGE
         06        DETECTED WAIT
         07        REQUEST SWAP
         08        ENQ EXCHANGE SWAP
         09        EXCHANGE ON RECOMMENDATION VALUE
         0A        UNILATERAL SWAP
         0B        TRANSITION SWAP
         0C        LOGICAL SWAP
         0D        LOGICAL SWAP FAIL
#$#
          #C   COMMAND   (CALCULATOR, TOD, AND MSTCONS SWITCH)




         #C           DISPLAY TOD CLOCK HIGH-ORDER WORD

         #CS          DISPLAY CURRENT SMF DATA SET


         #CBNN,XX..X  SEND MESSAGE  NN  TIMES TO ALL ACTIVE
                      DISPLAY TYPE CONSOLES.


         #CMNN,XX..X  SEND MESSAGE  NN  TIMES TO THE
                      CONSOLE SPECIFIED BY THE L=XX PARAMETER


         #CXNNNN      CALCULATE CHARACTER LXYZ LOCATION FROM HEX


         #CXL-XXX-YY-Z  CALCULATE HEX LXYZ LOCATION FROM CHARACTER


         #CZ,PASSWRD  SWITCH MASTER CONSOLE DESIGNATION TO THE
                      CONSOLE SPECIFIED BY THE L=XX PARAMETER


         #C XXXX      CONVERT 1-8 DIGIT HEX VALUE TO DEC


         #C ,DDDD     CONVERT 1-8 DIGIT DEC VALUE TO HEX


         #C AAAOBBB   CALCULATOR MODE


               AAA    IS 1-8 DIGIT HEX OR ,DEC VALUE

               BBB    IS 1-8 DIGIT HEX OR ,DEC VALUE

               O      IS ARITHMETIC OPERATOR
                      +   ADD
                      -   SUBTRACT
                      .   MULTIPLY
                      /   DIVIDE
#$#
      #D  COMMAND     (DISPLAY AND ZAP CORE)

             ADDRESS SPACE FROM WHICH ADDRESS SPECIFIED IS RESOLVED
             IS THE CALLERS,  UNLESS >AAAA PREFIXES THE COMMAND SUBPARM
             WHERE  AAAA IS THE ASID OF THE ADDRESS SPACE TO DUMP/ZAP.
             EXAMPLE -    #D  >0002,0A0000


             FOR DUMPING CORE

                 #D 0000,NN          WHERE  NN  IS THE NUMBER OF LINES
                                     TO PRINT FROM 01 - 64. DEFAULT= 04


             FOR DUMPING A UCB

                 #D  U280  (WILL DUMP THE 280 UCB)


             FOR ZAPPING CORE

                 #D  0ACD/FF000000/FF160000

                     0ACD     = ADDRESS TO BE ZAPPED
                     FF000000 = DATA TO BE VERIFIED
                     FF160000 = DATA TO BE ZAPPED IN


             FOR TERMINATING AN ADDRESS SPACE

                 #D  EXIT,AAAA        TERMINATE ASID AAAA


             FOR CHANGING THE AUTHORIZED USE BIT OF SVC 107 (MODESET)

                 #D  S     SET SVC 107 USABLE BY NON-AUTH PROGRAM
                 #D  SA    SET SVC 107 NOT USABLE BY NON-AUTH PROGRAM


             FOR CHANGING AN ADDRESS SPACE STATUS

                 #D  NOSWAP,AAAA      SET ASID 'AAAA' NON-SWAPPABLE
                 #D  OKSWAP,AAAA      SET ASID 'AAAA' SWAPPABLE
                 #D  NOCANC,AAAA      SET ASID 'AAAA' NON-CANCELABLE
                 #D  OKCANC,AAAA      SET ASID 'AAAA' CANCELABLE
                 #D  CHAP,AAAA,DDD    CHAP ASID 'AAAA' TO DPRTY 'DDD'
                 #D  DOSWAP,AAAA      SWAP ASID 'AAAA' IN/OUT

             NOTE 1  -   IN ORDER FOR THE CHAP TO TAKE EFFECT THE JOB
                         MUST PASS FROM SWAPPED OUT TO SWAPPED IN.

             NOTE 2  -   IF A SET IPS COMMAND IS ISSUED OR IF THE JOB
                         CHANGES STEPS, THE JOB WILL BE RESET TO ITS
                         ORIGINAL STATE.




-----------------------------------------------------------------------
-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
-----------------------------------------------------------------------





      #E  COMMAND     (EXECUTE COMMAND)



             FOR SENDING A COMMAND

                 #E XXXXX     XXXXX -   THE COMMAND TO BE EXECUTED

                 #E V PATH(XXX,YYY,C),ONLINE    VARY PATH RANGE ON

                 #E V PATH(XXX,YYY,C),OFFLINE   VARY PATH RANGE OFF


#$#
      #F  COMMAND     (DISPLAY PAGE FRAME ASSIGNMENTS)



             #F


             TOTAL       2048  8192K
             NUCLEUS       98   392K
             TOT FIXED    130   520K
             SQA FIXED     88   352K
             CMN FIXED     12    48K
             SYS PAGES    260  1040K     SQA=  340K
             AVAILABLE     24    96K
             MASTER        16    64K     LSQA=  32K
             JES2          48   192K     LSQA=  44K
             FFGRI1        68   272K     LSQA=  28K
             TEST00        10    40K     LSQA=  32K







-----------------------------------------------------------------------
-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
-----------------------------------------------------------------------







         #F C     -       TO DISPLAY CSA VIRTUAL STORAGE USAGE



          CSA SIZE =      3752K      CSA ADDR =     790000
          SQA FREE =        56K     SQA AVAIL =     2092K
          NUC END =      0A9000     SEG END =       0B0000
          V=R SIZE =        80K      V=R ADDR =     0B4000
          PRV SIZE =      8288K      PRV ADDR =     0C8000
          FREE        SIZE=   1980K      ADDR =     790000
          ALLOCATED   SIZE=   1696K      ADDR =     97F000
          FREE        SIZE=     48K      ADDR =     B00000
          ALLOCATED   SIZE=     32K      ADDR =     B0C000
#$#
     #F R   -       TO DISPLAY THE V=R AREA SHOWING FRAME
                    ALLOCATION,  INCLUDING NO. OF FRAMES,
                    OWNING ASID AND PFT FLAGS.



             EXAMPLE OUTPUT -


                        PAGES.ASID.FLAGS
                        ----------------
                        012...0008...R-U
                        001...FFFF...A-A



             PAGES COLUMN -    NO. OF FRAMES OWNED BY THIS ASID
                               AND WITH THESE FLAGS IN DECIMAL.



             ASID COLUMN -     ASID OF ADDRESS SPACE LAST TO OWN
                               OR CURRENTLY OWNING THESE FRAMES.
                               FFFF INDICATES NO OWNER.



             FLAGS COLUMN -    THREE FLAG DIGITS WITH THE FOLLOWING
                               MEANINGS.  A - IN ANY FLAG DIGIT
                               INDICATES NO STATUS.


                   1ST DIGIT -    O     OFFLINE
                                  C     OFFLINE INTERCEPT
                                  R     V=R ALLOCATE
                                  I     V=R INTERCEPT
                                  A     AVAILABLE


                   2ND DIGIT -    B     BAD FRAME
                                  F     LONG TERM FIXED
                                  S     SQA/LSQA FRAME
                                  V     VIO FRAME


                   3RD DIGIT -    A     AVAILABLE QUEUE
                                  R     SQA RESERVED QUEUE
                                  C     COMMON QUEUE
                                  S     SQA QUEUE
                                  U     LOCAL QUEUE
                                  L     LSQA QUEUE
                                  N     NOT QUEUED
#$#
         #F MX   -        TO DISPLAY THE SPECIFIED MEGABYTE (M1 TO M9)
                          OF REAL STORAGE SHOWING FRAME ALLOCATION,
                          INCLUDING NUMBER OF FRAMES, OWNING ASID,
                          PFT FLAGS.


                          SEE  (#F R)  FOR DESCRIPTION OF OUTPUT.



                 NOTE -   MEGABYTE 0 CANNOT BE DISPLAYED AND WILL
                          CAUSE A PARM ERROR IF ATTEMPTED.
                          SINCE MEGABYTE 0 CANNOT BE VARIED
                          OFFLINE  (IT CONTAINS THE NUCLEUS),
                          THIS RESTRICTION SEEMS REASONABLE.






-----------------------------------------------------------------------
-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
-----------------------------------------------------------------------






         #F OX  -     TO DISPLAY, FOR THE SPECIFIED MEGABYTE (O1 TO O9)
                      OF REAL STORAGE,  FRAME ALLOCATION FOR OFFLINE
                      INTERCEPTED FRAMES WHICH ARE NOT YET OFFLINE,
                      INCLUDING NUMBER OF FRAMES, OWNING ASID,
                      PFT FLAGS.


                      SEE  (#F R)  FOR DESCRIPTION OF OUTPUT.



             NOTE -   MEGABYTE 0 CANNOT BE DISPLAYED AND WILL
                      CAUSE A PARM ERROR IF ATTEMPTED.
                      SINCE MEGABYTE 0 CANNOT BE VARIED
                      OFFLINE  (IT CONTAINS THE NUCLEUS),
                      THIS RESTRICTION SEEMS REASONABLE.






-----------------------------------------------------------------------
-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
-----------------------------------------------------------------------






         #F BX  -     TO DISPLAY, FOR THE SPECIFIED MEGABYTE (B1 TO B9)
                      OF REAL STORAGE,  FRAME ALLOCATION FOR
                      BAD FRAMES INCLUDING NUMBER OF FRAMES,
                      OWNING ASID AND PFT FLAGS.


                      SEE  (#F R)  FOR DESCRIPTION OF OUTPUT.



             NOTE -   MEGABYTE 0 CANNOT BE DISPLAYED AND WILL
                      CAUSE A PARM ERROR IF ATTEMPTED.
                      SINCE MEGABYTE 0 CANNOT BE VARIED
                      OFFLINE  (IT CONTAINS THE NUCLEUS),
                      THIS RESTRICTION SEEMS REASONABLE.
#$#
        #H  COMMAND      (DISPLAY  # COMMAND  HELP)



           #H         DISPLAYS COMMAND LIST

           #H X       DISPLAYS HELP FOR  COMMAND  #X

           #H #X      DISPLAYS HELP FOR  COMMAND  ##X



                    #A -   (SE)  DISPLAY JOB STATUS -  EXPANDED  D A
                    #C -   (SK)  HEX/DEC CALCULATOR AND TOD DISPLAY
                    #D -   (SD)  DISPLAY AND ZAP CORE
                    #E -   (SS)  EXECUTE A COMMAND
                    #F -   (SF)  DISPLAY PAGE FRAME ASSIGNMENTS
                    #H -   (SM)  DISPLAY HELP
                    #I -   (SJ)  DISPLAY IPS AND SWAP COUNTS
                    #J -   (SL)  MODIFIED DISPLAY ACTIVE REPLACEMENT
                    #L -   (SC)  DISPLAY LINES FOR TSO
                    #M -   (SO)  TSO MULTIPLE SEND
                    #N -   (SA)  DISPLAY ENQUEUE
                    #O -   (SR)  DISPLAY PENDING I/O AND ALLOCATION
                    #P -   (SP)  DISPLAY SU CONFIGURATION
                    #Q -   (SQ)  ANALYZE ENQUEUE CONFLICTS
                    #R -   (SG)  DISPLAY DEVICE STATUS
                    #S -   (SH)  DISPLAY LPA MODULES
                    #T -   (SN)  DISPLAY TIOT FOR A JOB
                    #V -   (SI)  DISPLAY UNIT
                    #Z -   (SZ)  MODIFIED DISPLAY ACTIVE REPLACEMENT
                    ##A -  (ZA)  MONITOR JOB ACTIVITY
                    ##B -  (ZB)  MONITOR DEVICES
                    ##C -  (ZC)  MONITOR CHANNELS
                    ##J -  (ZJ)  MONITOR JOBS
                    ##P -  (ZP)  MONITOR PAGING
                    ##S -  (ZS)  MONITOR SYSTEM INDICATORS
#$#
        #I  COMMAND      (DISPLAY IPS AND SWAP COUNTS)



               DISPLAYS CURRENT IPS MEMBER AND SWAP COUNTS
               BY REASON SINCE LAST IPL.



               CURRENT IPS -   IEAIPST2
               LGCP 100  AVCP 101  AVPG  27  AUIC  16  ASMQ  07
               TERM WAIT - OUT     (01)          0
               TERM WAIT - IN      (02)          0
               LONG WAIT           (03)        304
               AUX STOR SHORTAGE   (04)          0
               REAL STOR SHORTAGE  (05)          0
               DETECTED WAIT       (06)        932
               REQUEST SWAP        (07)         82
               ENQ EXCHANGE        (08)        112
               WORKLOAD EXCHANGE   (09)         89
               UNILATERAL SWAP     (0A)        243
               TRANSITION SWAP     (0B)         21
               LOGICAL SWAP        (0C)        289
               LOGICAL SWAP FAIL   (0D)         12






-----------------------------------------------------------------------
-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
-----------------------------------------------------------------------






         #I A      (DISPLAY ASM COUNTS)



         EXAMPLE  -

               ILRSLOTC            16
               ILRSLOTV            16
               AVAIL SLOTS        836
               TOTAL SLOTS      4,338
               VIO SLOTS            0
               ADSPC SLOTS        796
               BAD SLOTS            0



         NOTE  -      AVAIL SLOTS IS THE NUMBER OF UNRESERVED
                      LOCAL PAGE DATA SET SLOTS.

         #I C      (DISPLAY AVAILABLE PCCWS)



         EXAMPLE  -

               NUMBER OF PCCWS BUILT BY RIM 00000044
               NUMBER OF AVAILABLE PCCWS    00000030


#$#
        #I P     (DISPLAY PAGE DATA SET USAGE)



        EXAMPLE -

             PLPA  A53  PAGE01  PLPAPAGE           ERR(000)
             SIZE(1044) AVAIL(0197) USED(82%) BRST(019)
             COMN  942  PAGE02  COMMPG2            ERR(000)
             SIZE(0522) AVAIL(0438) USED(17%) BRST(021)
             LOCL  A53  PAGE02  LOCALP2            ERR(000)
             SIZE(1566) AVAIL(1110) USED(30%) BRST(027)
             LOCL  942  PAGE01  LOCALPG2           ERR(000)
             SIZE(1566) AVAIL(1105) USED(30%) BRST(038)


             SIZE AND AVAILABLE FIGURES ARE DECIMAL NUMBER OF SLOTS.

             BRST IS THE PARERQTM VALUE DIVIDED BY 256, IN DECIMAL.
             IT REPRESENTS THE AVERAGE TIME REQUIRED TO
             TRANSFER 1 PAGE.





-----------------------------------------------------------------------
-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
-----------------------------------------------------------------------


        #I R     (DISPLAY SRM VALUES)


        EXAMPLE  -

               SRM RESOURCE CONTROL TABLE
                                            THRESHOLD
                CPU UTILIZATION        45     98  101
                CPU UTIL W/ DEM PAG           95   98
                PAGING RATE             2   1000 1000
                DEMAND PAGING RATE     29     70   88
                TOTAL PAGING RATE      38
                PAGE DELAY TIME (MS)  726   1000 1000
                PAGE DELAY W/ DEM PAG        100  130
                AVG ASM QUEUE          27   1000 1000
                AVG UIC               255      2    4
                AVG AVAIL FRAMES      598


#$#

        #I S     (DISPLAY SWAP DATA SET USAGE)



        EXAMPLE -

             SWAP DS- 001  SETS- 200  PGS/SET-  12
             940  MVACAT  SYS1.SWAP01
             SIZE(2400) AVAIL(1200) USED(50%) ERR(0000)


             SIZE AND AVAILABLE FIGURES ARE DECIMAL NUMBER OF SLOTS.

             ERR  IS THE NUMBER OF ERRORS SUFFERED ON THE SWAP DS.





-----------------------------------------------------------------------
-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
-----------------------------------------------------------------------





        #I X     (DISPLAY PERFORMANCE GROUP ACTIVITY)


        EXAMPLE - (TSO PERFORMANCE GROUP 2)

             PGN PER   TR CNT   TR RATE  AB RATE  SW RATE  AVGRESP
             02   1      2366      131      146     1.23     0.78
             02   2       234      108      110     1.45     5.62
             02   3        20      156      170     1.67   110.23
             02  ALL     2620      126      134     1.31     2.21

        TR CNT -      NO. OF TRANSACTIONS
        TR RATE -     TRANSACTION SERVICE RATE
        AB RATE -     ABSORPTION RATE
        SW RATE -     SWAP RATIO
        AVGRESP -     AVERAGE RESPONSE TIME
#$#
      #J  COMMAND      (MODIFIED DISPLAY ACTIVE REPLACEMENT)

      #J T  COMMAND    (MODIFIED DISPLAY ACTIVE -  TSO ONLY)

      #J NN  COMMAND   (MODIFIED DISPLAY ACTIVE -  FOR DOMAIN  'NN')


          EXAMPLE  -

     *****   IN  QUEUE   *****     ASID DPRTY QP  FLAGS   CPU TIME
     JES2     JES2     IEFPROC     0002  253  02  NSW      1.33.01
     TEST00   STEP1                0004  117  04  IN CP    2.55.33
     TEST01   STEPX    ASMBLR      0005  119  03  IN       0.10.68
     TMSBKUP  FDR                  0006  112  05  IN       1.11.24
     *****   OUT  QUEUE   *****    ASID DPRTY SR  FLAGS   CPU TIME
     RMF      148      IEFPROC     0003  251  03  OUTLW    1.11.98


      WHERE -

         ASID    DPRTY    QP/SR    FLAGS    CPU TIME
        ------  -------  -------  -------  ----------

         NNNN     DDD     QQ/SS    XXXYY    MMM.SS.HH


        NNNN         IS THE ADDRESS SPACE IDENTIFICATION

        DDD          IS THE JOBS DISPATCHING PRIORITY

        QQ           IS THE JOBS ASCB QUEUE POSITION, WHICH IS
                     A RELATIVE DISPATCHING PRIORITY

        SS           IS THE SWAP REASON CODE AS DESCRIBED IN THE
                     DOCUMENTATION FOR THE  # A COMMAND.

        XXXYY        IS THE JOB STATUS AS DESCRIBED BELOW

        MMM.SS.HH    IS THE CPU AND SRB ACCUMULATED JOB STEP TIME



        XXX -

            IN  -   IN CORE - SWAPPED IN
            NSW -   NON-SWAPPABLE
            OUT -   SWAPPED OUT
            GOO -   IN PROCESS OF BEING SWAPPED OUT
            GOI -   IN PROCESS OF BEING SWAPPED IN
            GOB -   CURRENTLY CHANGING STATUS


        YY -

            LW  -   LONG WAIT STATUS -  EXPLICIT OR IMPLICIT
            MW  -   LONG WAIT STATUS DETECTED BY MSO (MS6)
            CP  -   SIGNIFICANT CPU USER - SET BY IRARMCPM
            A   -   AUXILLARY STORAGE SHORTAGE
            S   -   REAL STORAGE SHORTAGE






-----------------------------------------------------------------------
-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
-----------------------------------------------------------------------






      #L  COMMAND     (DISPLAY LINES FOR TSO)



                #L        (WILL SHOW USERID, ASID AND TP LINE)

                       IBMUSER   (000C)  - 3F1
#$#
      #M  COMMAND      (TSO MULTIPLE SEND)


                #M XXXXXX


                     WHERE  XXXXXX  IS A  1 - 68  DIGIT MESSAGE
                     TO BE SENT TEN TIMES TO ALL LOGGED ON TSO USERS






-----------------------------------------------------------------------
-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
-----------------------------------------------------------------------






      #N  COMMAND     (DISPLAY ENQUE -   SEE ENQ/DEQ SUMMARY)



         #N   FORMAT IS AS FOLLOWS -

          #N (ZZZZZZ)XXXXXXXX/YYYYYYYY

             WHERE   -

                XXXXXXXX       IS THE 8 DIGIT MAJOR NAME OR  '*'
                YYYYYYYY       IS THE 1 - 44 DIGIT MINOR NAME OR  '*'
                (ZZZZZZ)       IS THE 1 - 8 DIGIT JOBNAME TO LIMIT
                               THE SEARCH.   (OPTIONAL)


                 #N *

                 #N SYSDSN/*

                 #N SYSIEFSD/*

                 #N SYSDSN/SYS1.LINKLIB



                IN RESPONSE TO THE #N COMMAND THE CURRENT STATUS
                TYPES ARE:

                             SHR - SHARED USE ENQ
                             EXCL- EXCLUSIVE USE ENQ
                             RSVS- SHARED USE WITH A RESERVE
                             RSVX- EXCLUSIVE USE WITH A RESERVE
#$#
                       MVS  ENQ/DEQ  SUMMARY



     MAJOR NAME   MINOR NAME               DESCRIPTION
     ----------   ----------    -----------------------------------

     SYSDSN       -DSNAME       ENQ FOR USER OR SYSTEM DATA SETS

     SYSIEA01     IEA           ABEND IN PROGRESS

     SYSIEFSD     CHNGDEVS      UCB MANIPULATION

                  Q4            UCB MANIPULATION

                  Q6            PROTECT KEY ALTERATION

                  Q10           CSCB CHAIN MANIPULATION

                  RPLL          JOB JOURNAL DATA SET (CKPT/RSTRT)

                  STCQUE        STARTED TASK CONTROL

                  TSOQUE        TSO DATA SETS

     SYSIGGV1     MCATOPEN      MASTER CATALOG

     SYSIGGV2     -CATLGNAME    USER CATALOGS

     SYSIKJBC     -RBA          TSO BRODCAST DATA SET (REL BYTE ADDR)

     SYSIKJUA     OPENUADS      UADS DATA SET

                  -USERID       TSO USERS

     SYSLMOD      -DSNAME       LINKEDIT RESERVE

     SYSSJWTP     JSCBWTP       WRITE-TO-PROGRAMMER MESSAGES

                  -RPL+ASID     MESSAGE DATA SET PROCESSING
                                (REQUEST PARAMETER LIST + ASID)

     SYSSMF01     BUF           SMF BUFFER WRITE

     SYSZUSRL     -UCBADDR      USER LABEL PROCESSING

     SYSVSAM      -CCCCNNNX     VSAM DATA SET PROCESSING
                                (CCCC- ACB ADDR, NNN- CI NO., X- STAT)

     SYSVTOC      -VOLSER       VTOC RESERVE

     SYSZRBMF     ACTIVE        MF1 ACTIVE INDICATOR

     SYSZCAXW     CAXW          CAXWA (CATLG AUXILLARY WORK AREA)

     SYSZCSD      CSDCPUJS      CSD UPDATE

     SYSZEC16     PURGE         PURGE DATA SET PROCESSING

     SYSZIGGI     -ASID         TSB PROCESSING

     SYSZJES2     SPOOL         AWAITING SPOOL SPACE

     SYSZPCCB     PCCB          PCCP (PRIV CATLG CONTROL BLOCK)

     SYSZPGAD     PAGEADD       SERIALIZE FOR PAGEADD COMMAND

     SYSZPSWD     -DSNAME       PASSWORD DATA SET PROCESSING

     SYSZSIPS     IRARMSET      IPS SET

     SYSZTIOT     -ASID         TIOT PROCESSING

     SYSZVARY     CPU           RECONFIGURATION COMMANDS

                  VALIDATE      STORAGE VALIDATION PROCESSING

     SYSZVMV      -UCBADDR      VIRTUAL VOLUME PROCESSING

     SYSZVOLS     -VOLSER       ALL ALLOCATED VOLUMES
#$#
    #O  COMMAND   (DISPLAY OUTSTANDING I/O AND ALLOCATION REQUESTS)



     #O                DISPLAY ALL OUTSTANDING I/O

     #O A              DISPLAY ACTIVE OUTSTANDING I/O

     #O Q              DISPLAY QUEUED OUTSTANDING I/O

     #O X              DISPLAY ALLOCATION QUEUE



              I/O OUTPUT EXAMPLE -

              UUU  VVVVVV  JJJJJJJJ  IIIIII  DDDDDDDD  SSSSSSS


              WHERE -
                      UUU -         UNIT ADDR
                      VVVVVV -      VOLSER
                      JJJJJJJJ -    JOBNAME OR ASID
                      IIIIII -      IOQ ADDR
                      DDDDDDDD -    I/O DRIVER NAME
                      SSSSSSS -     STATUS (ACTIVE OR QUEUED)



              ALLOCATION OUTPUT EXAMPLE -

              *SYSTEM*  *AQTOP*  M1M1M1M1M1M1  M2M2M2M2M2M2
              JJJJJJJJ  SSSSSSS  M1M1M1M1M1M1  M2M2M2M2M2M2


              WHERE -
                      1ST LINE IS SYSTEM WIDE ALLOCATION MASK
                      AND FOLLOWING LINES ARE JOB INFO

                      JJJJJJJJ -   JOBNAME OR ASID
                      SSSSSSS -    STATUS (ACTIVE OR QUEUED)
                                   OWNING -   JOB HOLDS MASK
                                   AQUEUE -   JOB QUEUED FOR 'A' QUEUE
                                   BQUEUE -   JOB QUEUED FOR 'AB' QUEUE
                                   WAITING -  OPERATOR REPLIED 'WAIT'
                      M1M1M1M1 -   A OWNERSHIP MASK
                      M2M2M2M2 -   B OWNERSHIP MASK
#$#

         #P           DISPLAY SU CONFIGURATION



             #P         DISPLAY NON-OBSOLETE INSTALLED SU'S

             #P I       DISPLAY ALL INSTALLED SU'S

             #P C       DISPLAY ALL NON-OBSOLETE SU'S

             #P A       DISPLAY ALL SU'S





-----------------------------------------------------------------------
-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
-----------------------------------------------------------------------





      #Q  COMMAND     (ANALYZE ENQUE -   SEE ENQ/DEQ SUMMARY)



         #Q



                OUTPUT EXAMPLE -

                MAJOR= SYSDSN
                MINOR= SYS1.LINKLIB
                ROSLINK1  EXCL  RESERVE
                ROSLINK2  EXCL  RESERVE
                ROSLIST1  SHR



                IN RESPONSE TO THE #Q COMMAND THE CURRENT STATUS
                TYPES ARE:

                             SHR - SHARED USE ENQ
                             EXCL- EXCLUSIVE USE ENQ
                             RESERVE -  RESERVE INDICATOR
#$#
    #R  COMMAND   (DEVICE STATUS COMMAND)



     #R M              PENDING MOUNTS FOR TAPE

     #R T              TAPE BUSY AND PENDING MOUNTS

     #R D              DISK BUSY AND PENDING MOUNTS

     #R P              UNIT RECORD BUSY

     #R B              ALL DEVICE BUSY AND PENDING MOUNTS

     #R V              ALL PENDING VARIED OR UNLOADED DEVICES

     #R R              ALL RESERVES OUTSTANDING



     #R M=XXXXXXXX     PENDING MOUNTS FOR A JOB

     #R T=XXXXXXXX     ALLOCATED TAPE DEVICES FOR A JOB

     #R D=XXXXXXXX     ALLOCATED DISK DEVICES FOR A JOB

     #R P=XXXXXXXX     ALLOCATED UNIT RECORD DEVICES FOR A JOB

     #R B=XXXXXXXX     ALL ALLOCATED DEVICES FOR A JOB


         =XXXXXXXX     FOR ALL COMANDS IS EITHER A 4 DIGIT ASID OR A
                       1 - 8 DIGIT JOBNAME



     #R S=VVVVVV       DEVICE ON WHICH VOLUME VVVVVV IS MOUNTED


     #R U=NNN          DISPLAY SPECIFIED -

                           DEVICE          (NNN)
                           CONTROL UNIT    (NN)
                           CHANNEL         (N)






-----------------------------------------------------------------------
-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
-----------------------------------------------------------------------






      #S  COMMAND     (DISPLAY LPA MODULES)



        #S PGMNAME   WILL DISPLAY LOAD MODULES IN FLPA, MLPA OR
        PLPA. THE VIRTUAL ADDRESS AND MODULES SIZE ARE DISPLAYED
        UNLESS THE MODULE  SPECIFIED IS REPRESENDED BY A MINOR
        CDE OR LPDE, IN WHICH CASE THE VIRUAL ADDRESS AND MAJOR
        NAME ARE DISPLAYED.

        #S *ADDR    WILL DISPLAY THE NAME OF THE LOAD MODULE
        AND ITS STARTING ADDRESS AND LENGTH.


        EXAMPLE -

        BBBBBB  NNNNNNNN  AAAAAA  LLLLLL  USE=CCCC

        WHERE -      BBBBBB -      IS THE LPDE OR CDE ADDRESS
                     NNNNNNNN -    IS THE MODULE NAME
                     AAAAAA -      IS THE MODULE ADDRESS
                     LLLLLL -      IS THE MODULE LENGTH
                     CCCC -        IS THE MODULE USE COUNT
#$#
      #T  COMMAND     (DISPLAY TIOT FOR A JOB)



            #T     NNNN         DISPLAY TIOT SHORT  ASID  NNNN
            #T     NNNN,L       DISPLAY TIOT LONG   ASID  NNNN



        EXAMPLE  SHORT FORM  -

        0006  JOBNAME1  STEPNAM1  PROCNAM1
        - DDNAME1  1A0  3350    MVSA37     6609


        EXAMPLE   LONG FORM  -

        0006  JOBNAME1  STEPNAM1  PROCNAM1
        - DDNAME1  1A0  3350    MVSA37     6609
        - SYS1.LINKLIB
        - DSO=(PO)  RFM=(U  )  LRECL=00000  BLKSZ=19069



        IN THE ABOVE EXAMPLES THE 1ST LINE IS THE JOB LINE
        THE 1ST DDLINE CONTAINS  DDNAME, UNIT ADDRESS, DEVICE TYPE,
        VOLSER, AND EXCP COUNT.
        THE 2ND DD LINE CONTAINS  DSNAME.
        THE 3RD DD LINE CONTAINS  DSORG, RECFM, LRECL, AND BLKSIZE.

        NOTE THAT THIS COMMAND EXECUTES AS AN SRB AND CONSEQUENTLY
        WILL OCCASIONALLY FAIL WITH NOTHING WRONG.  IN ADDITION, THIS
        COMMAND WILL ONLY WORK FOR JOBS WHICH ARE SWAPPED IN.
        STARTED TASKS WILL NOT DISPLAY ANY EXCP COUNTS.
#$#
      #V  COMMAND     (DISPLAY UNIT)



            #V D           (DISPLAY DASD MATRIX)
            #V D1          (DISPLAY 3330-1 MATRIX)
            #V D3          (DISPLAY 3330 MATRIX)
            #V D5          (DISPLAY 3350 MATRIX)
            #V T           (DISPLAY TAPE MATRIX)


            #V CUU         (DISPLAY SINGLE UNIT)

                EX.    #V 251


           #V CUX          (DISPLAY ALL UNITS BY CONTROL UNIT)

                EX.    #V 25X


           #V CUU,CUU...   (DISPLAY ALL UNITS IN LIST)

                EX.    #V 251,363,108,288


           #V CUX,CUX...   (DISPLAY ALL UNITS IN LIST BY C.U.)

                EX.    #V 25X,36X,47X


           #V S=VOLSER     (DISPLAY UNIT FOR THIS VOLSER)

                EX.    #V S=DAA001



           COMMAND OUTPUT IS AS FOLLOWS -


                 UUU  SSSSSS  FFF  UNIT=DDDDDD  AS=AAAA  PATH=X,Y
                    DCB=MM  USR=UU  RSV=RR  FLG=11111111/22222222
                                   - OR -
                    DEVTYPE=ZZZZZZZZ        FLG=11111111/22222222


                    UUU       IS THE UNIT ADDRESS
                    SSSSSS    THE VOLUME SERIAL OR DEVICE CLASS
                    FFF       ON, OFF, OF CHG
                    DDDDDD    THE DEVICE TYPE
                    AAAA      THE ADDRESS SPACE ID
                    X,Y       THE PRIMARY,SECONDARY DEVICE PATH
                    MM        THE NO. OF OPEN DCBS TO THE DEVICE
                    UU        THE NO. OF USERS
                    RR        THE DEVICE RESERVE COUNT
                    ZZZZZZZZ  THE 4 BYTE HEX DEVICE TYPE FIELD
                    1111/2222 THE FIRST 8 BYTES OF THE UCB IN HEX
#$#


     #Z     COMMAND (MODIFIED DISPLAY ACTIVE REPLACEMENT)

     #Z T   COMMAND (MODIFIED DISPLAY ACTIVE REPLACEMENT-TSO ONLY)

     #Z NN  COMMAND (MODIFIED DISPLAY ACTIVE REPLACEMENT-FOR

          EXAMPLE -


      *****   IN   QUEUE   ***** ASID DP PG QP SC FLAGS   CPU  CPUR
      MASTER                     0001 FF 00 01 00 NSW    1437 85564
      JES2     JES2     IEFPROC  0003 FF 09 02 00 NSW    1054 85514
      CMD1     CMD1     CMD1     0004 FF 12 03 00 NSW      11 86392
      FAT067D4 PROC#1   FAT067#3 0011 75 01 13 03 IN       76 14332
      CMDSBMON CMDSBMON CMDSBMON 0014 75 01 14 01 NSW       0 86399
      TCAMB    TCAMB    TCAM     0015 FC 06 05 00 NSW    1329 85291
      P731500A CIF408#1          0023 74 01 15 02 IN       48 14355
      DUMMYWTR 480      IEFPROC  0028 00 01 17 00 NSW     130 86272
      CBTLOG   CBTLOG   CBT290   0041 FC 01 06  R NSW       0 86399
      CIC888D0 PROC#1   DFHSIP#4 0046 FB 30 08 00 NSW     240 86110
      *****   OUT  QUEUE   ***** ASID DP PG SR SC FLAGS   CPU  CPUR
      ACF2     ACF2     IEFPROC  0002 FF 01 03 05 OUTLW     2 86397
      RMF      RMF      IEFPROC  0009 FF 00 03 56 OUTLW     3 86396
      TSSO     TSSO     TSSO     0040 FF 01 03 08 OUTLW     0 86399
      NCCF     NCCF     NCCF#1   004F FF 12 06 ** OUTMW     3 86396

         WHERE -

                ASID     ADDRESS SPACE ID
                DP       DISPATCHING PRIORITY
                PG       PERFORMANCE GROUP
                QP       ASCB QUEUE POSITION, WHICH IS
                         A RELATIVE DISPATCHING PRIORITY
                SR       SWAP REASON CODE AS IN THE OUTPUT
                         OF THE #I COMMAND
                SC       SWAP COUNT
                FLAGS    JOB STATUS DESCRIBED BELOW = XXXYY
                CPU      CPU/SRB ACCUMULATED JOB STEP TIME
                CPUR     CPU STEP TIME REMAINING
                XXX -
                    IN  -   IN CORE - SWAPPED IN
                    NSW -   NON-SWAPPABLE
                    OUT -   SWAPPED OUT
                    GOO -   IN PROCESS OF BEING SWAPPED OUT
                    GOI -   IN PROCESS OF BEING SWAPPED IN
                    GOB -   CURRENTLY CHANGING STATUS
                YY -
                    LW  -   LONG WAIT STATUS
                    MW  -   DETECTED WAIT
                    CP  -   SIGNIFICANT CPU USER
                    A   -   AUXILLARY STORAGE SHORTAGE
                    S   -   REAL STORAGE SHORTAGE

#$#


     ##A  COMMAND      (MONITOR JOB ACTIVITY)

     ##A D  COMMAND    (MONITOR DOMAIN ACTIVITY)

     ##A T  COMMAND    (MONITOR TSO USERS ACTIVITY)

     ##A NN  COMMAND   (MONITOR JOB ACTIVITY -  FOR DOMAIN  'NN')


     OUTPUT IS AS FOLLOWS -


                JOBNAME AND STEPNAME

                CPU PCT -   CURRENT CPU PERCENT BUSY

                SIO/SEC -   CURRENT EXCPS PER SEC

                PAG/SEC -   CURRENT PAGING PER SEC

                WORKSET -   CURRENT REAL STORAGE USE

                ASID -      ADDRESS SPACE ID

                DSP -       DISPATCHING PRTY

                DMN -       DOMAIN NUMBER

                PGN -       PERFORMANCE GROUP NUMBER

                SWC -       SWAP COUNT


                FLAGS -     FLAGS -  XX-NN

                            XX -   IN-  IN QUEUE
                            XX -   NS-  NON-SWAPPABLE
                            NN -   QUEUE POSITION
                            XX -   OU-  OUT QUEUE
                            NN -   SWAP REASON CODE
#$#
          ##BXXX,Y     MONITOR DEVICE BUSY FOR ALL DASD

          ##BUUU,Y     MONITOR DEVICE BUSY FOR DEVICE  UUU

          ##BUUX,Y     MONITOR DEVICE BUSY FOR DEVICES ON
                       CONTROL UNIT  UU


                       WHERE Y =  D -  DEVICE LIST
                                  J -  DEVICE AND JOB LIST
                                  S -  SEEK ANALYSIS


                       OUTPUT FORMAT AS FOLLOWS -

                       UUU VVVVVV  BUSY  NN%  NN%
                       -- JJJJJJJJ       NN%  NN%

                       NOTE -   TWO PERCENT BUSY VALUES ARE
                                DISPLAYED FOR DEVICE BUSY.

                                1ST -  DEVICE BUSY TOTAL
                                2ND -  DEVICE BUSY PRIMARY CHAN





-----------------------------------------------------------------------
-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
-----------------------------------------------------------------------





          ##C          MONITOR CHANNEL BUSY
                       DISPLAY CHANNEL BUSY IN BOTH
                       NUMERIC AND BAR GRAPH FORM.


          ##CNN,Y      MONITOR CHANNEL AND DEVICE BUSY
                       DISPLAY CHANNEL AND DEVICE BUSY
                       FOR CHANNEL NN IN NUMERIC AND
                       BAR GRAPH FORM.


                       WHERE Y =  D -  DEVICE LIST
                                  J -  DEVICE AND JOB LIST



                  OUTPUT FORMAT AS FOLLOWS -

                  CHANNEL NN  BUSY       NN%
                  UUU VVVVVV  BUSY  NN%  NN%
                  -- JJJJJJJJ       NN%  NN%


                  NOTE -   TWO PERCENT BUSY VALUES ARE
                           DISPLAYED FOR DEVICE BUSY.

                           1ST -  DEVICE BUSY TOTAL
                           2ND -  DEVICE BUSY THIS CHANNEL
#$#


     ##J  COMMAND      (MONITOR JOBS)

     ##J T  COMMAND    (MONITOR TSO USERS)

     ##J NN  COMMAND   (MONITOR JOBS -  FOR DOMAIN  'NN')


          EXAMPLE  -

     *****   IN  QUEUE   *****    EXCPC   EXCPT    CPUC     CPUT
     JES2     JES2     IEFPROC      43    68,976   9.37   61.33.01
     TEST00   STEP1                 21     3,400   0.58       5.33
     TEST01   STEPX    ASMBLR      153   178,922  12.77    9.10.68
     TMSBKUP  FDR                    3       367   0.09       1.24
     *****   OUT  QUEUE   *****   EXCPC   EXCPT    CPUC     CPUT
     RMF      148      IEFPROC       0       666   0.00      11.98


      WHERE -

         EXCPC     EXCPT      CPUC      CPUT
        ------    -------    -------   -------

        XX,XXX   X,XXX,XXX   M.SS.TH  MMM.SS.TH


        EXCPC        IS THE EXCP COUNT FOR THE SAMPLED INTERVAL

        EXCPT        IS THE EXCP COUNT TOTAL FOR THE CURRENT STEP

        CPUC         IS THE CPU/SRB TIME FOR THE SAMPLED INTERVAL

        CPUT         IS THE CPU/SRB TIME TOTAL FOR THE CURRENT STEP
#$#


     ##P  COMMAND      (MONITOR PAGING)



        VIO PAGING        NNN.NN   PAGES/SEC
        SWAP PAGING       NNN.NN   PAGES/SEC
        COMMON PAGING     NNN.NN   PAGES/SEC
        ADDRSPC PAGING    NNN.NN   PAGES/SEC
        TOTAL PAGING      NNN.NN   PAGES/SEC





-----------------------------------------------------------------------
-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
-----------------------------------------------------------------------





         ##S          MONITOR SYSTEM INDICATORS
                      DISPLAYING AVERAGE, MINIMUM, AND MAXIMUM


         ##S D        MONITOR SYSTEM INDICATORS AND DOMAIN VALUES
                      DISPLAYING AVERAGE, MINIMUM, AND MAXIMUM


         ##S DA       MONITOR SYSTEM INDICATORS AND DOMAIN VALUES
                      DISPLAYING AVERAGE



                      SYSTEM INDICATORS -  LONG TERM CPU,
                           AVERAGE CPU, AVERAGE PAGING,
                           AVERAGE UIC, AND AVERAGE ASMQ.


                      DOMAIN VALUES -  WT, MIN, MAX AT INTERVAL START
                           TARGET MPL, CURRENT MPL, READY USERS,
                           GOING OUT USERS, OUT USERS, IN USERS,
                           WEIGHTED DOMAIN SERVICE
#$#

    THE FOLLOWING IS THE PRIMARY MENU SCREEN FOR CMDSBMON




 #####   CMD  SUB-SYSTEM  MONITOR   #####


 --->  ENTER  # CMDS,  ## CMDS,  OR  GRAPHIC MONITOR CMDS
              BEGINNING WHERE CURSOR IS POSITIONED


 --->  ENTER  NN/XX  TO CHANGE MONITOR REFRESH INTERVAL

              WHERE  NN  =   NUMBER OF SECONDS
                     XX  =   NUMBER OF INTERVALS


 --->  ENTER  ''Z''  OR  ''END''   TO TERMINATE


 --->  PRESS  PA1 TO STOP AUTOMATIC REFRESH
 --->  PRESS  PA2 OR CLEAR TO REPEAT THE LAST COMMAND
 --->  PRESS  PFK 1  TO DISPLAY PFK ASSIGNMENTS


 --->  ENTER  ''H''  TO OBTAIN HELP FOR GRAPHIC MONITOR CMDS
#$#

    THE FOLLOWING IS THE PFK MENU SCREEN FOR CMDSBMON




#####        PFK  ASSIGNMENTS        #####'


PFK1 =   DISPLAY PFK ASSIGNMENTS
PFK2 =   H
PFK3 =   E
PFK4 =   F
PFK5 =   J
PFK6 =   S
PFK7 =   #J
PFK8 =   #O
PFK9 =   #OX
PFK10 =  #Q
PFK11 =  ##SD
PFK12 =  05/50
PFK13 =  ##A,T=5
PFK14 =  H
PFK15 =  E
PFK16 =  F
PFK17 =  J
PFK18 =  S
PFK19 =  #J
PFK20 =  #O
PFK21 =  #OX
PFK22 =  #Q
PFK23 =  ##SD
PFK24 =  05/50



 --->  ENTER  NN=XXXX  AND PRESS PFK 1  TO CHANGE PFK FUNCTION'

              WHERE  NN -   IS THE PFK NUMBER  02 - 12'
                     XXXX - IS THE COMMAND TO BE ASSIGNED'
#$#
      GRAPHIC MONITOR COMMANDS



         ENTER  H X  FOR HELP WITH COMMAND  X'

         H -   (GH)  DISPLAY HELP
         A -   (GA)  DISPLAY JOB ACTIVITY
         E -   (GE)  DISPLAY EXCEPTIONS
         F -   (GF)  DISPLAY PAGE STATISTICS BY JOB
         J -   (GJ)  DISPLAY CPU UTILIZATION
         I -   (GI)  DISPLAY JES2 INITIATORS
         O -   (GO)  DISPLAY SYSTEM I/O ACTIVITY
         Q -   (GQ)  DISPLAY JES QUEUE  (MODIFIED Q CMD)
         S -   (GS)  DISPLAY SYSTEM INDICATORS
         U -   (GU)  DISPLAY DASD FREE SPACE
         # -   (SM)  DISPLAY HELP # COMMANDS

         FOLLOWING ARE FULL SCREEN POSITIONING COMMANDS.
         -NNN        SCROLL UP NNN LINES
         +NNN        SCROLL DOWN NNN LINES
         -           SCROLL TO TOP
         +           SCROLL TO BOTTOM
         =YXXXY      FIND STRING EQ XXX, Y IS DELIMITER
#$#
      GRAPHIC MONITOR COMMANDS



         A -         DISPLAY JOB ACTIVITY





         ANNNN       DISPLAY JOB ACTIVITY  FOR ASID NNNN


                     GRAPHIC DISPLAY OF -

                     JOBNAME,  STEPNAME,  PERCENT CPU
                     PERCENT CPU,
                     PAGE FRAME ALLOCATION,
                     PAGING IN PAGES PER SECOND,
                     AVERAGE JOB CPU UTILIZATION,
                     AVERAGE REAL FRAME USAGE,
                     CURRENT SWAP COUNT,
                     JOB I/O ACTIVITY.


                     JOB EXCEPTIONS AS FOLLOWS -

                     POSSIBLE LOOPS,
                     ABEND IN PROGRESS,
                     WAITING ON REPLIES,
                     WAITING ON ALLOCATION,
                     WAITING ON ENQUEUE CONFLICTS,
                     WAITING ON I/O PENDING,
                     WAITING TO BE SWAPPED IN.
#$#
      GRAPHIC MONITOR COMMANDS



         E -         DISPLAY EXCEPTIONS





         E -         DISPLAY ALL EXCEPTIONS
                     AUTOMATIC REFRESH MINIMUM 10 SEC

         ED -        DISPLAY EXCEPTIONS (NOT DEVICE)
                     AUTOMATIC REFRESH MINIMUM 10 SEC

         EC -        DISPLAY EXCEPTIONS (NOT CHAN/DEVICE)


                     EXCEPTIONAL SYSTEM CONDITIONS -

                     SQA SHORTAGE,
                     WTO BUFFER SHORTAGE,
                     EXCESS PAGING AND PAGE I/O BUSY,
                     EXCESS DEVICE UTILIZATION,
                     EXCESS CHANNEL UTILIZATION.


                     EXCEPTIONAL JOB CONDITIONS -

                     POSSIBLE LOOPS,
                     ABEND IN PROGRESS,
                     EXCESS JOB CPU UTILIZATION,
                     EXCESS REAL FRAME USAGE,
                     EXCESS SWAP COUNT,
                     WAITING ON REPLIES,
                     WAITING ON ALLOCATION,
                     WAITING ON ENQUEUE CONFLICTS,
                     WAITING ON I/O PENDING,
                     WAITING TO BE SWAPPED IN.
#$#



                   EXCEPTION MONITOR OUTPUT MESSAGES
                ---------------------------------------




    SYSTEM EXCEPTION MESSAGES
    --------------------------------------

    CHANNEL XX   XXX% BUSY  FOR XXXXX SEC
    UUU VVVVVV   XXX% BUSY  FOR XXXXX SEC
    UUU VVVVVV   NOT READY  FOR XXXXX SEC
    EXCESS SYSTEM PAGING FOR    XXXXX SEC
    LOCAL PAGE I/O DEGRADED FOR XXXXX SEC
    WTO BUFFER SHORTAGE, WQE COUNT= XXXXX
    SQA AVAIL= XXXXXK, CSA AVAIL= XXXXXK




    JOB RESOURCE USAGE EXCEPTION MESSAGES
    --------------------------------------

    JJJJJJJJ POSSIBLE LOOP FOR  XXXXX SEC
    JJJJJJJJ XXX% CPU FOR       XXXXX SEC
    JJJJJJJJ ABEND IN PROGRESS  XXXXX SEC
    JJJJJJJJ EXCESS SWAP COUNT = XXXXX
    JJJJJJJJ XXXXX FRAMES FOR   XXXXX SEC




    JOB WAIT EXCEPTION MESSAGES
    --------------------------------------

     ( NOTE -   A JOB IS CONSIDERED TO BE WAITING IF IT USES 0% CPU  )


    JJJJJJJJ ENQ SYSDSN   WAIT  XXXXX SEC       ENQ CONFLICT
    JJJJJJJJ I/O ON UUU   WAIT  XXXXX SEC       I/O PENDING
    JJJJJJJJ ALLOC QUEUE  WAIT  XXXXX SEC       ALLOC QUEUE
    JJJJJJJJ REPLY NN     WAIT  XXXXX SEC       REPLY PENDING
    JJJJJJJJ ???????????  WAIT  XXXXX SEC       REASON UNKNOWN
    JJJJJJJJ SWAP RRRRRR  WAIT  XXXXX SEC       SWAPPED OUT

       RRRRRR -     ( SWAP REASON CODES )
                    LONGWT           LONG WAIT
                    AUXSTOR          AUXILLARY STORAGE SHORTAGE
                    REALSTR          REAL STORAGE SHORTAGE
                    DETWAIT          MSO DETECTED WAIT
                    REQUEST          REQUEST SWAP
                    ENQEXC           ENQ EXCHANGE
                    WORKEXC          WORKLOAD EXCHANGE
                    UNILATR          UNILATERAL

#$#
      GRAPHIC MONITOR COMMANDS



         F -         DISPLAY PAGE STATISTICS





         F -         DISPLAY PAGE STATISTICS BY JOB


                     GRAPHIC DISPLAY OF -

                     PAGE FRAME ALLOCATION BY JOB AND
                     PAGING BY JOB IN PAGES PER SECOND.
#$#
      GRAPHIC MONITOR COMMANDS



         J -         DISPLAY CPU UTILIZATION






         JD -        DISPLAY CPU UTILIZATION

                     GRAPHIC DISPLAY OF -
                     ALL ACTIVE DOMAINS.


         J -         DISPLAY CPU UTILIZATION

                     GRAPHIC DISPLAY OF -
                     JOBNAME,  STEPNAME,  PERCENT CPU
                     UTILIZATION FOR ACTIVE JOBS.


         JT -        DISPLAY CPU UTILIZATION

                     GRAPHIC DISPLAY OF -
                     JOBNAME,  STEPNAME,  PERCENT CPU
                     UTILIZATION FOR ACTIVE TSO USERS.


         JNN -       DISPLAY CPU UTILIZATION

                     GRAPHIC DISPLAY OF -
                     JOBNAME,  STEPNAME,  PERCENT CPU
                     UTILIZATION FOR ALL JOBS IN DMN XX.

#$#
      GRAPHIC MONITOR COMMANDS



         I -         DISPLAY JES2 INITIATORS






         I -         DISPLAY JES2 INITIATORS


                     DISPLAY OF -

                     INITIATOR STATUS,
                     JOB NUMBER,
                     JOBNAME,
                     JOB CLASS,
                     INITIATOR CLASSES.
#$#
      GRAPHIC MONITOR COMMANDS



         O -         DISPLAY SYSTEM I/O ACTIVITY






         OXNN -      DISPLAY SYSTEM I/O ACTIVITY


                     WHERE -

                       X -   SCAN TYPE
                             A -   ALL DEVICES
                             V -   DASD AND TAPE
                             D -   DASD
                             T -   TAPE
                             U -   UNIT RECORD
                             C -   COMM AND DISPLAY

                       NN -  PERCENT BUSY THRESHOLD
                             20% BUSY IS THE DEFAULT
#$#
      GRAPHIC MONITOR COMMANDS



         Q -         DISPLAY JES QUEUE






         Q XXX       DISPLAY JES QUEUE  (MODIFIED Q CMD)


         (NNN)Q XXX  DISPLAY JES QUEUE  (MODIFIED Q CMD)


                     WHERE -

                       NNN -    IS THE NUMBER OF
                                1000 LINE SEGMENTS
                                TO INCREMENT INTO THE
                                DATA SET BEFORE
                                DISPLAY ANY DATA.

                       XXX -    IS THE Q COMMAND

                       H -         HELP WITH Q CMD
                       DI -        DISPLAY INPUT
                       DO -        DISPLAY OUTPUT
                       DA -        DISPLAY ACTIVE JOBS
                       DT -        DISPLAY ACTIVE TSO
                       DS -        DISPLAY ACTIVE STC
                       JLOG J -    DISPLAY JOBLOG JOB J
                       JCL J -     DISPLAY JOBJCL JOB J
                       JMSG J -    DISPLAY JOBMSG JOB J
                       DD J -      DISPLAY DD IDS JOB J
                       SL S -      DISPLAY SYSLOG STC S
                       L J DSID -  DISPLAY DATASET DSID
                                   JOB J


              NOTE -   J IS EITHER JOBNAME OR JOB NUMBER

              NOTE -   S IS STC NUMBER
#$#
      GRAPHIC MONITOR COMMANDS



         S -         DISPLAY SYSTEM INDICATORS






         S -         DISPLAY SYSTEM INDICATORS


                     GRAPHIC DISPLAY OF -

                     CURRENT AVERAGE CPU,
                     CURRENT LONG TERM CPU,
                     CURRENT AVERAGE PAGING,
                     CURRENT AVERAGE UIC,
                     CURRENT AVERAGE ASMQ LENGTH,  AND
                     CURRENT MPL FOR EACH DOMAIN
                     CONTAINING RUNNING JOBS.



         SA -        DISPLAY SYSTEM INDICATORS


                     GRAPHIC DISPLAY OF -

                     AVERAGE AVERAGE CPU,
                     AVERAGE LONG TERM CPU,
                     AVERAGE AVERAGE PAGING,
                     AVERAGE AVERAGE UIC,
                     AVERAGE AVERAGE ASMQ LENGTH,  AND
                     CURRENT MPL FOR EACH DOMAIN
                     CONTAINING RUNNING JOBS.
#$#
      GRAPHIC MONITOR COMMANDS



         U -         DISPLAY DASD SPACE






         U           DISPLAY DASD SPACE ALL ONLINE DASD


         U VVVV      DISPLAY DASD SPACE ON VOLUME VVVV
                     WHERE VVVV IS A 1-6 DIGIT VOLSER OR
                     VOLSER PREFIX


         U U=NNN     DISPLAY DASD SPACE ON UNIT NNN


         U D=XXXX    DISPLAY DASD SPACE ON DEVTYPE XXXX
                     (3330,3330V,3330-1,3350,2305-2)


                     DISPLAY OF -

                     UNIT, DEVTYPE, STATUS, VOLSER,
                     NO. OF DCBS OPEN, NO. OF USERS,
                     FREE CYLS, FREE TRKS, FREE EXTENTS,
                     LARGEST CONTIG EXTENT CYL/TRK
