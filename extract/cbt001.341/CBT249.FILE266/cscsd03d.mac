         TITLE 'IEESD03D -   #D  DISPLAY/ZAP CORE'
***********************************************************************
***********************************************************************
***                                                                 ***
***                                                                 ***
***                                                                 ***
***                     COMMAND  SUB-SYSTEM                         ***
***                  -------------------------                      ***
***                                                                 ***
***                                                                 ***
***       IEESD03D -       #D DISPLAY/ZAP CORE                      ***
***                                                                 ***
***       VERSION -        2.1                                      ***
***                                                                 ***
***       MVS LEVEL -      MVS/SE  3.8.   WITHOUT  SE2 OR SU64.     ***
***                                                                 ***
***       UPDATED -        07/21/81  AXC-CBT HANDLE ESTAE           ***
***                                  AXC-CBT FIX LOOP WITH #DXX,00  ***
***                                                                 ***
***                                                                 ***
***********************************************************************
***********************************************************************
         EJECT
IEESD03D CSECT
***********************************************************************
*
*        THIS MODULE ATTEMPTS TO PERFORM THE BASIC FUNCTION OF
*        DISPLAYING AND MODIFYING CORE IN ANY ADDRESS SPACE EXCEPT FOR
*        LPA MODULES.
*        THE SYNTAX ACCEPTED IS AS FOLLOWS.
*
*
*              #DEXIT,AAAA        TERMINATE MEMORY FOR ASID AAAA
*
*              #DCHAP,AAAA,DDD    SET ASID AAAA TO DPRTY=DDD
*
*              #DNOCANC,AAAA      SET ASID AAAA NON-CANCELLABLE
*
*              #DOKCANC,AAAA      SET ASID AAAA CANCELABLE
*
*              #DNOSWAP,AAAA      SET ASID AAAA NON-SWAPABLE
*
*              #DOKSWAP,AAAA      SET ASID AAAA SWAPABLE
*
*              #DUNNN
*
*              #DSSSSSS,LL
*
*              #DSSSSSS/VVVVVVVV/RRRRRRRR
*
*              #D>AAAA,SSSSSS,LL
*
*              #D>AAAA,SSSSSS/VVVVVVVV/RRRRRRRR
*
*        WHERE THE FOLLOWING MEANINGS HOLD
*              NNN      THE CUU OF THE DESIRED DEVICE. 64 BYTES ARE
*                       DUMPPED.
*              LL       NUMBER OF LINES OF 16 BYTES TO DUMP.
*                       LIMIT IS 16.
*              SSSSSS   THE ADDRESS OF THE AFFECTED AREA
*              VVVVVVVV THE VALUE EXPECTED TO BE FOUND AT XXXXXX
*              RRRRRRRR THE VALUE TO PLACE AT XXXXXX
*              AAAA     THE ASID OF THE ADDRESS SPACE TO WORK IN
*
*  THE DEFAULTS ARE:
*      - IF >AAAA IS NOT SPECIFIED THEN THE MASTER SCHEDULAR
*        ADDRESS SPACE IS USED.
*      - IF LL IS NOT SPECIFIED THEN 64 BYTES ARE DUMPPED.
*
*  NOTE:
*      - VVVVVVVV AND RRRRRRRR MUST BE 8 CHARACTERS LONG.  ALL
*        OTHER VARIABLES CAN BE SHORTER THAN SHOWN.
*
*
*
***********************************************************************
         LR    R12,R15
         USING IEESD03D,R12
         L     R0,SIZE             LOAD GETMAIN AREA SIZE AND SUBPOOL
         GETMAIN R,LV=(0)
         LR    R13,R1
         USING WORK,R13
         STM   R14,R12,SAVRET      SAVE RETURN ADDR
         ST    R2,XSASAVE          SAVE XSA ADDR
         LA    R0,WTOLIST          POINT TO START OF CLEAR
         LA    R1,WORKEND-WTOLIST   AND SET THE LENGTH
         SR    R15,R15        CLEAR LENGTH 2
         MVCL  R0,R14         CLEAR THE AREA
         USING XSA,R2
         LR    R10,R13             LOAD SAVE AREA ADDR
         B     ESTAEBYP            BYPASS ESTAE LIST
ESTAEOVL ESTAE STAEXIT,CT,MF=L
ESTAEBYP MVC   ESTAELST(16),ESTAEOVL
         LA    R1,ESTAELST
         ESTAE PARAM=(10),MF=(E,(1))
         MVC   PLINES(4),=F'4'     DEFAULT PRINT LINES
         L     R3,XAL              LOAD LIST POINTER
         LA    R3,0(0,R3)          CLEAR HIGH ORDER
         LTR   R3,R3               PARM EXIST
         BZ    NOPARM              NO, MVS MSG
         LR    R7,R3               SAVE PARM START
         CLI   0(R3),C'U'     IS THIS A UCB REQUEST
         BE    UCBLOOP        YES SO PROCESS
         CLI   0(R3),C'S'     IS THIS A SPECIAL REQUEST
         BE    SVCLOOP        YES SO PROCESS
         CLC   0(5,R3),=CL5'EXIT,' EXIT REQUEST
         BE    MEMTERM        YES SO PROCESS
         CLC   0(5,R3),=CL5'CHAP,' CHAP REQUEST
         BE    CHAP           YES SO PROCESS
         CLC   0(6,R3),=CL6'OKSWAP'  SET SWAPABLE
         BE    SETSWAP        YES SO PROCESS
         CLC   0(6,R3),=CL6'NOSWAP'  SET NON-SWAPABLE
         BE    SETSWAP1       YES SO PROCESS
         CLC   0(6,R3),=CL6'OKCANC'  SET CANCELABLE
         BE    SETCANC        YES SO PROCESS
         CLC   0(6,R3),=CL6'NOCANC'  SET NON-CANCELABLE
         BE    SETCANC1       YES SO PROCESS
         CLI   0(R3),C'>'     IS IT AN ASID
         BNE   NOTASID        NOPE SO USE THIS ASID
         LA    R3,1(R3)       POINT AT ASID NUMBER
         LA    R4,4           SET MAX LENGTH
         BAL   R11,PARMCVT    CONVERT HEX NUMBER
         STH   R1,ASID        SAVE THE TARGET ASID
         CLI   0(R3),C','     IS SYNTAX CORRECT
         BNE   ERROR          GIVE ERROR IF NOT
         LA    R3,1(R3)       SKIP OVER THE COMMA
NOTASID  LA    R4,6           SET MAXLEN FOR ADDRESS
         BAL   R11,PARMCVT    CONVERT THE ADDRESS
         ST    R1,ADDR        SAVE ADDRESS TO DUMP OF REP AT
         CLI   0(R3),C','     IS IT DUMP FORMAT
         MVI   FLAG1,FG1DUMP  SET DUMP FLAG
         BE    DUMPPREP       GO SETUP DUMP PARMS
         CLI   0(R3),C' '     IF NEXT IS BLANK USE DEFAULT TO DUMP
         BE    DOFUNC
         MVI   FLAG1,FG1REP   SET REP FLAG
         CLI   0(R3),C'/'     IS THE SYNTAX CORRECT
         BNE   ERROR          BAD SYNTAX
         TITLE 'IEESD03D  D COMMAND  --  PREPARE FOR THE REP FUNCTION'
         CLI   9(R3),C'/'     CHECK REST OF SYNTAX
         BNE   ERROR
         LA    R3,1(R3)       SKIP OVER THE '/'
         LA    R4,8           SET MAX LENGTH TO 8 A FULL WORD
         BAL   R11,PARMCVT    CONVERT THE VER VALUE
         ST    R1,ALTVER      SAVE EXPECTED VALUE
         LA    R3,1(R3)       SKIP OVER '/'
         LA    R4,8           SET MAX LENGTH
         BAL   R11,PARMCVT    CONVERT THE REP VALUE
         ST    R1,ALTREP      AND SAVE IT
         B     DOFUNC         GO SETUP TO DO FUNCTION
         TITLE 'IEESD03D  D COMMAND  --  SETUP FOR THE DUMP FUNCTION'
DUMPPREP DS    0H
         TM    1(R3),X'F0'         NUMERIC
         BNO   ERROR               NO
         TM    2(R3),X'F0'         NUMERIC
         BNO   ERROR               NO
         CLC   1(2,R3),=CL2'00'    LOOP POSSIBLE         AXC-CBT
         BE    MAX                 GIVE HIS THE MAX      AXC-CBT
         PACK  DOUBLE(8),1(2,R3)
         CVB   R1,DOUBLE
         CH    R1,=H'16'      MAX IS 256 BYTES
         BNH   *+8
MAX      LA    R1,16          SET MAX
         ST    R1,PLINES      SAVE NUMBER OF LINES
         TITLE 'IEESD03D  D COMMAND  --  PERFORM THE DESIRED FUNCTION'
*
*        CHECK FOR CROSS MEMORY FUNCTION AND IF SO VALIDATE
*        ASCB.
*
DOFUNC   L     R1,PLINES      COMPUTE THE LENGTH OF INFO TO DISPLAY
         SLL   R1,4           AS LINES*16
         ST    R1,LENGTH
         LH    R1,ASID        GET THE ASID
         LTR   R1,R1          IS IT ZERO
         BZ    DOSUBR         IF SO USE THIS ADDR SPACE  MS
         L     R3,CVTPTR      POINT TO CVT
         USING CVTMAP,R3
         L     R2,CVTTCBP     GO GET MY ASCB ADDR
         MVC   MYASCB,8(R2)   SAVE ADDR OF ASCB FOR POST
         MVC   MYTCB,0(R2)    SAVE THE TCB ADDRESS FOR STIMER
         L     R2,CVTASVT     POINT AT ASVT
         USING ASVT,R2
         C     R1,ASVTMAXU    IS ASID TOO BIG
         BH    ERROR          YES
         SLL   R1,2           ASID*4
         LA    R1,ASVTENTY-4(R1)  POINT AT DESIRED ENTRY
         MVC   TOASCB,0(R1)   MOVE THE ASCB ADDR IF ANY
         TM    TOASCB,ASVTAVAL IS THIS ASCB ADDR OR AVAILABLE
         BO    ERROR          ASID DOES NOT EXIST
         DROP  R2,R3
         L     R2,TOASCB      POINT AT ASCB
         USING ASCB,R2
         TM    ASCBRCTF,ASCBOUT   IS ASCB SWAPPED OUT
         BO    SWAPOUT
         CLC   MYASCB,TOASCB  IS THE ASCB THE MS
         BE    DOSUBR         IF SO THEN USE SUBROUTINE
*
*        NOW INITIALIZE THE SRB
*
         LA    R3,SRBAREA     POINT AT THE SRB
         USING SRBSECT,R3
         XC    SRBAREA,SRBAREA  CLEAR THE SRB
         MVC   SRBID,=C'SRB '  SET EBCDIC ID
         MVC   SRBASCB,TOASCB SET ASCB ADDR TO RUN IN
         LA    R1,D#SRBCD     POINT AT SRB CODE
         ST    R1,SRBEP       SAVE ENTRY POINT
         ST    R13,SRBPARM    SAVE PARM ADDR AS WORK AREA
         LA    R1,D#RMTR      SET ADDR OF RESOURCE MGR TERMINATION
         ST    R1,SRBRMTR     AND SAVE IT
         MVC   SRBPASID,ASID  SET ASID OF DESIRED ASCB
         DROP  R3
         EJECT
*
*        SCHEDULE SRB AND AWAIT COMPLETION
*
         XC    ECB,ECB        CLEAR DONE ECB
         XC    ECB2,ECB2      CLEAR STIMER ECB
         LA    R1,ECB         NOW SETUP THE ECBLIST
         ST    R1,ECBLIST
         LA    R1,ECB2
         ST    R1,ECBLIST+4
         MVI   ECBLIST+4,X'80'                         AXC
         L     R2,MYTCB       POINT AT TCB
         L     R2,0(0,R2)     POINT AT RB
         USING RBBASIC,R2
         ST    R1,RBEXSAVE+16 SAVE ECB2 ADDR IN RBXSA
         DROP  R2
         STIMER  REAL,D#STX,BINTVL==A(60*100) WAIT 1 MINUTE
         SCHEDULE  SRB=(R3),SCOPE=GLOBAL
         WAIT  ECBLIST=ECBLIST
         TTIMER CANCEL        CANCEL THE TIMER IF STILL EXISTS
         B     GOTBACK        GO AND CHECK COMPLETION
         SPACE 5
*
*        USE THE SRB CODE AS A SUBROUTINE
*
DOSUBR   OI    FLAG1,FG1SUBR  SET FLAG FOR SUBROUTINE
         LA    R1,DMYPRMS     SETUP DUMMY FRR PARMS
         ST    R1,FRRPRMS
         XC    DMYPRMS,DMYPRMS
         LR    R1,R13         SET UP PARM REGISTER
         LA    R15,D#SRBCD    SET ENTRY POINT ADDR
         LA    R14,GOTBACK    SET RETURN ADDRESS
         BR    R15            GO DO IT
         SPACE 5
*
*        THIS IS THE STIMER EXIT.  ITS PURPOSE IS TO POST THE
*        ECB AT ECB2 AND WAKE UP COMM TASK IF THE SRB FAILS
*        TO DO THIS WE MUST FIND THE ADDRESS OF THE ECB WHICH IS
*        SAVED IN THE XSA AREA OF THE SVRB IN COMM TASK
*
         USING *,R12
D#STX    SAVE  (14,12)
         LR    R12,R15        SET BAE REGISTER
         L     R3,CVTPTR
         L     R3,0(R3)       POINT AT TCB WORDS
         L     R3,0(R3)       POINT AT MY TCB
         L     R3,0(R3)       POINT AT MY RB
         USING RBBASIC-4,R3
D#STX1   SL    R3,=F'4'       POINT BACK TO LOOK AT INTC
         CLI   3(R3),X'01'    LOOK FOR WAIT SVC
         BE    D#STX2         IF FOUND THEN EXIT
         TM    XSTAB2,RBTCBNXT     TEST TCB FLAG
         BO    D#STX3         IF NOT FOUND PROPER RB
         L     R3,RBLINK      POINT AT PREVIOUS RB
         B     D#STX1         TRY AGAIN
D#STX2   L     R2,RBEXSAVE+16 GET ADDR OF ECB
         POST  (R2)         POST THE TIMER ECB
         RETURN (14,12)
         DROP  R12,R3
*
*        IF WE CAN NOT FIND THE RB THEN DUMP
*
D#STX3   DC    H'0'
         USING IEESD03D,R12
         TITLE 'IEESD03D  D COMMAND  --  PERFORM THE DUMP FUNCTION'
*
*        WE HAVE RETURNED FOR THE SRB FUNCTION NOW CHECK THE RESULTS
*        AND IF GOOD THEN DUMP THE PROPER PART OF MEMORY
*
GOTBACK  TM    FLAG1,FG1SUBR  ARE WE IN SUBROUTINE MOVE
         BO    GOTBK2         IF SO THEN SKIP SOME TESTS
         TM    FLAG1,FG1SRDN  HAS THE SRB COMPLETED
         BZ    SRBFAIL        IF NOT THEN TIMER CAUGHT IT
         TM    FLAG2,FG2PSTR  DID XMPOST HAVE ERROR
         BO    XMPTERR        IF SO THEN MESSGAE
         TM    FLAG2,FG2PURG  WAS SRB PURGED
         BO    SRBPGERR       IF SO THEN TELL ABOUT IT
         TM    FLAG2,FG2ERRR  TEST FOR BAD ERROR
         BO    DISTERR        GIVE MESSAGE
GOTBK2   TM    FLAG2,FG2NVER  DID VER FAIL
         BO    NOTVER         IF SO THEN ISSUE MESSAGE
         TM    FLAG2,FG2IVLD  WAS ADDR INVALID
         BO    STAEMG
         SPACE 5
*
*        NOW DUMP THE CORE SAVED IN ALTVER FOR 'LENGTH'
*        WHICH WAS FROM 'ADDR'
*
FORMAT   L     R4,PLINES           LOAD PRINT LINES
         LA    R5,ALTVER      POINT AT DATA TO DUMP
         SPACE
FORMAT1  LA    R6,PRINT            PRINT AREA ADDR
         UNPK  0(7,R6),ADDR+1(4)  UNPACK ADDR
         MVC   6(4,R6),=CL4' '     BLANK 4 BYTES
         NC    0(6,R6),=8X'0F'     TRANSLATE TO PRINT
         TR    0(6,R6),=C'0123456789ABCDEF'
         LA    R6,10(0,R6)         INCR INTO PRINT AREA
         LA    R7,4                NO. OF FULLWORDS PER LINE
         SPACE
FORMAT2  UNPK  0(9,R6),0(5,R5) UNPACK DATA
         MVC   8(2,R6),=CL4' '     BLANK 2 BYTES
         NC    0(8,R6),=8X'0F'     TRANSLATE TO PRINT
         TR    0(8,R6),=C'0123456789ABCDEF'
         LA    R6,10(0,R6)         INCR INTO PRINT AREA
         LA    R5,4(0,R5)          INCR INTO DATA
         BCT   R7,FORMAT2          GO FORMAT
         L     R2,XSASAVE     POINT AT XSA
         USING XSA,R2
         MVC   WTOLIST(4),=X'00360100'  FILL IN WTO LIST
         LA    R1,WTOLIST          LOAD WTOLIST ADDR
         SR    R0,R0
         IC    R0,XAU                 MCS ID
         SVC   35                  ISSUE WTO
         DROP  R2
         L     R1,ADDR        UPDATE ADDRESS OF DATA
         LA    R1,16(R1)
         ST    R1,ADDR
         BCT   R4,FORMAT1          NEXT LINE
         B     RETURN              EXIT
         TITLE 'IEESD03D  D COMMAND  --  SVC CHANGE FUNCTION'
SVCLOOP  L     R4,16               CVT ADDR
         L     R4,200(0,R4)        SCVT ADDR
         L     R4,132(0,R4)        SVCTABLE ADDR
         LA    R4,860(0,R4)        SVC 107 FLAGS
         CLI   1(R3),C'A'          SET AUTH
         BNE   SVCLOOP1            NO, SET NOT AUTH
         OI    0(R4),X'08'         SET NOT APF AUTH
         LA    R1,SVCMSG1
         B     MSGRTN
         SPACE 1
SVCLOOP1 NI    0(R4),X'F7'         SET NOT APF AUTH
         LA    R1,SVCMSG2
         B     MSGRTN
         TITLE 'IEESD03D  D COMMAND  --  UCB LOCATE FUNCTION'
UCBLOOP  L     R4,CVTPTR           CVT ADDR
         L     R4,CVTILK2-CVTMAP(R4)   LOOKUP TABLE ADDR
UCBLOOP1 SR    R5,R5               CLEAR ADDR
         ICM   R5,3,0(R4)          INSERT THE UCB ADDR
         BZ    UCBNEXT             NO, GET NEXT
         C     R5,=X'0000FFFF'     END OF TABLE
         BE    UCBNFND             YES, UCB NOT FOUND
         CLC   1(3,R3),13(R5)      UNIT MATCH
         BE    UCBFND              YES, UCB FOUND
UCBNEXT  LA    R4,2(0,R4)          LOAD NEXT SLOT ADDR
         B     UCBLOOP1            GO CHECK NEXT UCB
UCBFND   ST    R5,ADDR             SAVE ADDR TO DUMP AT
         OI    FLAG1,FG1DUMP  SET TO DUMP CORE
         B     DOFUNC              DUMP CORE USING SUBROUTINE
*                             BECAUSE ASID IS ZERO
         TITLE 'IEESD03D  D COMMAND  --  CHARACTER TO HEX CONVERTOR'
PARMCVT  XR    R0,R0
         LR    R1,R0          CLEAR SOME REGISTERS
         LR    R5,R4          SAVE DESIRED LENGTH IN R5
         SPACE 2
PARMCVT0 CLI   0(R3),C','     CHECK FOR DELIMITERS
         BE    PARMCVTD       IF ANY DELIMITER IS FOUND
         CLI   0(R3),C' '     THEN WE AREA DONE
         BE    PARMCVTD
         CLI   0(R3),C'/'
         BE    PARMCVTD
         CLI   0(R3),C'A'     NOW CHECK FOR HEX CHARACTERS
         BL    ERROR          AND IF INVALID THEN FLAG AS ERROR
         CLI   0(R3),C'F'
         BH    PARMCVT1       NOW TRY NUMBERICS
         NI    0(R3),X'0F'    TURN OFF ZONE
         IC    R0,0(R3)       GET THE CHARACTER
         AH    R0,=H'9'       AND ADJUST TO PROPER VALUE
         B     PARMCVT2
PARMCVT1 CLI   0(R3),C'0'     NOW SEE IF NUMERIC
         BL    ERROR          IF NOT THEN ERROR
         CLI   0(R3),C'9'     AND TRY HIGH VALUE
         BH    ERROR
         NI    0(R3),X'0F'    TURN OFF ZONE
         IC    R0,0(R3)       GET DIGIT
PARMCVT2 SLL   R1,4           CLEAR AREA
         OR    R1,R0          PUT IN NEW DIGIT
         LA    R3,1(R3)       POINT PAST
         BCT   R4,PARMCVT0    TRY AGAIN TILL EMPTY
         BR    R11            ALL DONE AND HAD EXPECTED NUMBER OF CHARS
         SPACE 3
PARMCVTD DS    0H             THE HEX NUMBER TERMINATED BEFORE FULL
         CH    R5,=H'8'       WAS A FULL WORD DESIRED
         BNER  R11            OUT IF NOT
         B     ERROR          FORCE FULLWORD TO BE PRESENT
         TITLE 'IEESD03D  D COMMAND  --  SET SWAP ROUTINE'
SETSWAP  SR    R9,R9          SET UP FOR EXECUTE
         MVC   WTOLIST+4(44),SWAPRMSG
         MVC   WTOLIST+32(13),=CL13'SWAPPABLE'
         B     SETSWAP2
         SPACE 1
SETSWAP1 LA    R9,128         SET UP FOR EXECUTE
         MVC   WTOLIST+4(44),SWAPRMSG
         MVC   WTOLIST+32(13),=CL13'NON-SWAPPABLE'
         SPACE 1
SETSWAP2 CLI   6(R3),C','     IS SYNTAX CORRECT
         BNE   ERROR          GIVE ERROR IF NOT
         LA    R3,7(0,R3)     POINT TO ASID
         LA    R4,4           SET MAX LENGTH
         BAL   R11,PARMCVT    CONVERT HEX NUMBER
         STH   R1,ASID        SAVE THE TARGET ASID
         LR    R5,R1               LOAD ASID
         SLL   R5,2                MULTIPLY BY 4
         L     R4,16               CVT ADDR
         L     R4,556(0,R4)        ASVT ADDR
         LA    R4,524(R5,R4)       ASCB SLOT ADDR
         L     R5,0(0,R4)          ASCB ADDR
         L     R4,172(0,R5)        JOBNAME POINTER
         LTR   R4,R4               ZERO
         BNZ   *+14                NO
         L     R4,176(0,R5)        JOBNAME POINTER
         LTR   R4,R4               ZERO
         BZ    *+10                YES
         MVC   WTOLIST+9(8),0(R4)  JOBNAME
         L     R5,144(0,R5)        LOAD OUCB ADDR
         NI    17(R5),X'7F'        SET SWAPPABLE
         EX    R9,SETSWAPX         SET NON-SWAPPABLE OR LEAVE SWAPPABLE
         LA    R1,WTOLIST
         MVC   WTOLIST(4),=X'00300100'
         B     MSGRTN
         SPACE 1
SETSWAPX OI    17(R5),X'00'        EXECUTED OI FOR SWAP/NOSWAP
         TITLE 'IEESD03D  D COMMAND  --  SET CANC ROUTINE'
SETCANC  LA    R9,8           SET UP FOR EXECUTE
         MVC   WTOLIST+4(44),SWAPRMSG
         MVC   WTOLIST+32(14),=CL14'CANCELABLE'
         B     SETCANC2
         SPACE 1
SETCANC1 SR    R9,R9          SET UP FOR EXECUTE
         MVC   WTOLIST+4(44),SWAPRMSG
         MVC   WTOLIST+32(14),=CL14'NON-CANCELABLE'
         SPACE 1
SETCANC2 CLI   6(R3),C','     IS SYNTAX CORRECT
         BNE   ERROR          GIVE ERROR IF NOT
         LA    R3,7(0,R3)     POINT TO ASID
         LA    R4,4           SET MAX LENGTH
         BAL   R11,PARMCVT    CONVERT HEX NUMBER
         STH   R1,ASID        SAVE THE TARGET ASID
         LR    R5,R1               LOAD ASID
         SLL   R5,2                MULTIPLY BY 4
         L     R4,16               CVT ADDR
         L     R4,556(0,R4)        ASVT ADDR
         LA    R4,524(R5,R4)       ASCB SLOT ADDR
         L     R5,0(0,R4)          ASCB ADDR
         L     R4,172(0,R5)        JOBNAME POINTER
         LTR   R4,R4               ZERO
         BNZ   *+14                NO
         L     R4,176(0,R5)        JOBNAME POINTER
         LTR   R4,R4               ZERO
         BZ    *+10                YES
         MVC   WTOLIST+9(8),0(R4)  JOBNAME
         L     R5,56(0,R5)         LOAD CSCB ADDR
         NI    7(R5),X'F7'         SET NON-CANCELABLE
         EX    R9,SETCANCX         SET CANCELABLE OR LEAVE NON-CANC
         LA    R1,WTOLIST
         MVC   WTOLIST(4),=X'00300100'
         B     MSGRTN
         SPACE 1
SETCANCX OI    7(R5),X'00'         EXECUTED OI FOR SWAP/NOSWAP
         TITLE 'IEESD03D  D COMMAND  --  EXIT ROUTINE'
MEMTERM  LA    R3,5(0,R3)     POINT TO ASID
         MVC   WTOLIST+4(44),EXITMSG
         LA    R4,4           SET MAX LENGTH
         BAL   R11,PARMCVT    CONVERT HEX NUMBER
         STH   R1,ASID        SAVE THE TARGET ASID
         LH    R8,ASID        SAVE THE TARGET ASID
         LR    R5,R1               LOAD ASID
         SLL   R5,2                MULTIPLY BY 4
         L     R4,16               CVT ADDR
         L     R4,556(0,R4)        ASVT ADDR
         LA    R4,524(R5,R4)       ASCB SLOT ADDR
         L     R5,0(0,R4)          ASCB ADDR
         L     R4,172(0,R5)        JOBNAME POINTER
         LTR   R4,R4               ZERO
         BNZ   *+14                NO
         L     R4,176(0,R5)        JOBNAME POINTER
         LTR   R4,R4               ZERO
         BZ    *+10                YES
         MVC   WTOLIST+9(8),0(R4)  JOBNAME
         CALLRTM TYPE=MEMTERM,COMPCOD=3549,ASID=(R8)
         LA    R1,WTOLIST
         MVC   WTOLIST(4),=X'00300100'
         B     MSGRTN
         TITLE 'IEESD03D  D COMMAND  --  CHAP ROUTINE'
CHAP     LA    R3,5(0,R3)     POINT TO ASID
         MVC   WTOLIST+4(44),CHAPMSG
         MVC   WTOLIST+42(3),5(R3) DPRTY
         MVC   DOUBLE(3),=C'000'
         MVZ   DOUBLE(3),5(R3)
         CLC   DOUBLE(3),=C'000'
         BNE   ERROR               NOT NUMERIC
         PACK  DOUBLE(8),5(3,R3)
         CVB   R8,DOUBLE
         LA    R4,4           SET MAX LENGTH
         BAL   R11,PARMCVT    CONVERT HEX NUMBER
         STH   R1,ASID        SAVE THE TARGET ASID
         LR    R5,R1               LOAD ASID
         SLL   R5,2                MULTIPLY BY 4
         L     R4,16               CVT ADDR
         L     R4,556(0,R4)        ASVT ADDR
         LA    R4,524(R5,R4)       ASCB SLOT ADDR
         L     R5,0(0,R4)          ASCB ADDR
         L     R4,172(0,R5)        JOBNAME POINTER
         LTR   R4,R4               ZERO
         BNZ   *+14                NO
         L     R4,176(0,R5)        JOBNAME POINTER
         LTR   R4,R4               ZERO
         BZ    *+10                YES
         MVC   WTOLIST+9(8),0(R4)  JOBNAME
         CH    R8,=H'255'          MAX DPRTY
         BH    ERROR               OVER, ERROR
         STC   R8,43(0,R5)         SET NEW DPRTY IN ASCB
         L     R5,144(0,R5)        OUCB ADDR
         STC   R8,26(0,R5)         SET NEW DPRTY IN OUCB
         LA    R1,WTOLIST
         MVC   WTOLIST(4),=X'00300100'
         B     MSGRTN
         TITLE 'IEESD03D  D COMMAND  --  ERROR ROUTINES'
         EJECT
         USING *,R15
         USING XSA,R2
STAEXIT  CH    R0,=H'12'           SDWA GOTTEN
         BE    STAEXIT1            NO, FORCE RETURN
         L     R2,=A(STAERTRY)     LOAD RETRY ADDR
         SETRP RC=4,RETADDR=(2),FRESDWA=YES,DUMP=NO
         SPACE 3
STAEXIT1 L     R0,=A(STAERTRY)     LOAD RETRY ADDR
         LA    R15,4
         BR    R14
         DROP  R15
         SPACE 3
         USING *,R15
STAERTRY L     R12,=A(IEESD03D)    LOAD ENTRY POINT ADDR
         LR    R13,R1              RELOAD WORK AREA ADDR
         DROP  R15
         LA    R1,STAEMSG          ADDRESSING ERROR
         L     R2,XSASAVE          RELOAD XSA ADDR
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         B     RETURN
STAEMG   LA    R1,STAEMSG          ADDRESSING ERROR
MSGRTN   L     R2,XSASAVE     RELOAD XSA ADDR
         USING XSA,R2
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         DROP  R2
         B     RETURN
         SPACE 3
NOTVER   LA    R1,VERMSG           NOT VERIFIED
         B     MSGRTN              GO ISSUE WTO
         SPACE 3
ERROR    LA    R1,ERRMSG           PARM ERROR
         B     MSGRTN              GO ISSUE WTO
         SPACE 3
NOPARM   LA    R1,MVSMSG           MVS
         B     MSGRTN              GO ISSUE WTO
         SPACE 3
UCBNFND  LA    R1,UCBNFMSG         UCB NOT FOUND
         B     MSGRTN              GO ISSUE WTO
         SPACE 3
SWAPOUT  LA    R1,SWAPMSG     ADDRESS SPACE SWAPPED OUT
         B     MSGRTN
         SPACE 3
DISTERR  LA    R1,DISTMSG     ERROR OCCURRED IN SRB MODE
         B     MSGRTN
         SPACE 3
SRBFAIL  DS    0H             SRB FAILED TO POST SO DUMP
         DC    H'0'
         SPACE 3
XMPTERR  LA    R1,XMPTMSG     POINT AT MSG
         B     MSGRTN
         SPACE 3
SRBPGERR LA    R1,PURGMSG     SRB WAS PURGED BEFORE PROCESS
         B     MSGRTN
         SPACE 3
RETURN   EQU   *
         ESTAE 0
         L     R0,SIZE
         LR    R1,R13              LOAD GETMAIN AREA ADDR
         L     R14,SAVRET          RETURN ADDR
         FREEMAIN R,LV=(0),A=(1)
         SR    R15,R15
         BR    R14
         EJECT
         LTORG
         DS    0F
SIZE     DC    AL1(241),AL3(WORKEND-WORKSTRT)
         SPACE 3
         DS    0F
STAEMSG  DC    X'00360100'
         DC    CL50'ERROR ENCOUNTERED IN CONTROL BLOCKS, RETRY COMMAND'
         SPACE 3
         DS    0F
VERMSG   DC    X'00360100'
         DC    CL50'DATA NOT VERIFIED'
         SPACE 3
         DS    0F
SVCMSG1  DC    X'00360100'
         DC    CL50'REQUEST COMPLETE -   SET APFAUTH'
         SPACE 3
         DS    0F
SVCMSG2  DC    X'00360100'
         DC    CL50'REQUEST COMPLETE -   SET NOAUTH'
         SPACE 3
         DS    0F
ERRMSG   DC    X'00360100'
         DC    CL50'PARAMETER ERROR'
         SPACE 3
         DS    0F
EXITMSG  DC    CL44'JOB  XXXXXXXX  TERMINATED BY CMD SUB-SYSTEM'
         SPACE 3
         DS    0F
CHAPMSG  DC    CL44'JOB  XXXXXXXX  HAS BEEN SET TO DPRTY= NNN'
         SPACE 3
         DS    0F
SWAPRMSG DC    CL44'JOB  XXXXXXXX  HAS BEEN SET '
         SPACE 3
         DS    0F
MVSMSG   DC    X'00360100'
         DC    CL50'I AM THE ALL-POWERFUL WIZARD OF MVS, YOUR MASTER '
         SPACE 3
         DS    0F
UCBNFMSG DC    X'00360100'
         DC    CL50'UNIT SPECIFIED NOT FOUND'
         SPACE 3
         DS    0F
SWAPMSG  DC    X'00360100'
         DC    CL50'ADDRESS SPACE REQUESTED IS SWAPPED OUT'
         SPACE 3
         DS    0F
DISTMSG  DC    X'00360100'
         DC    CL50'DISASTEROUS ERROR OCCURED IN SRB MODE'
         SPACE 3
         DS    0F
XMPTMSG  DC    X'00360100'
         DC    CL50'CROSS-MEMORY POST FAILED'
         SPACE 3
         DS    0F
PURGMSG  DC    X'00360100'
         DC    CL50'ADDRESS SPACE PURGING SRBS'
         DROP  R12,R13
         TITLE 'IEESD03D  D COMMAND  --  SRB MODE CODE'
D#SRBCD  DS    0D
*
*        THIS CODE PERFORMS THE FOLLOWING FUNCTIONS
*              1 ESTABLISHES AN FRR FOR ERROR RECOVERY
*              2 VERIFIES THAT THE ADDRESSES THAT ARE NEEDED DO
*                EXIST.
*              3 PERFORM THE MODIFICATION IF ALLOW AND NECESSARY
*              4 SAVE THE PROPER CORE FOR DUMPING.
*              5 CROSS-MEMORY POST THE MAIN COMMAND PROCESSOR
*
         USING WORK,R8
         USING D#SRBCD,R7
         LR    R8,R1          SET THE MAIN PARM DSECT
         LR    R7,R15         SET THE BASE REGISTER
         ST    R14,ASRBRTN    SAVE RETURN ADDR
         TM    FLAG1,FG1SUBR  IS THIS A SUBROUTINE CALL
         BO    D#SRB1         YES SO SKIP FRR
         LA    R5,D#FRRCD     POINT AT FRR CODE
         SETFRR  A,FRRAD=(R5),WRKREGS=(2,3),PARMAD=(R4)
         ST    R4,FRRPRMS     SAVE ADDR OF FRRPRMS
*
*        NOW INIT THE FRR PARM AREA AND VALIDATE THE INPUT ADDR
*
D#SRB1   L     R2,FRRPRMS     ACCESS THE 6 WORK PARM AREA
         STM   R7,R8,0(R2)    SAVE BASE AND WORK REGS
         MVI   0(R2),X'80'    SET VERIFICATION IN PROGRESS
         L     R1,ADDR        POINT AT CORE TO TROUBLE
         CLI   0(R1),0        ACCESS START OF AREA
         L     R3,LENGTH
         ALR   R3,R1          SUM THEN UP
         BCTR  R3,0           AND BACK DOWN ONE
         CLI   0(R3),0        DOES END EXIST ALSO
         MVI   0(R2),0        SET VERIFICATION FLAG OFF
         TM    FLAG1,FG1DUMP  IS IT DUMP REQUEST
         BO    D#SRB3         GO SETUP DUMP
         CLC   0(4,R1),ALTVER DOES THE INPUT VERIFY
         BE    D#SRB2         B IF YES
         MVI   FLAG2,FG2NVER  SET NOT VERIFY
         B     D#SRB3         GO AND DUMP IT
D#SRB2   MVC   0(4,R1),ALTREP DO MODIFICATION
*
*        NOW ADJSUST THE ADDR OF DUMP
*
D#SRB3   SRL   R1,4
         SLL   R1,4           ADJUST ADDR SO IT IS ON BOUNDARY
         ST    R1,ADDR        SAVE IT FOR PRINTING
         L     R2,LENGTH      GET LENGTH TO DUMP
         BCTR  R2,0
         EX    R2,D#SRBMVC    MOVE THE DATA INTO WORK
*
*        NOW WE TERMINATE PROCESSING BY DOING A CORSS
*        MEMORY POST IF NOT IN SUBROUTINE MODE
*
FRRRTY   TM    FLAG1,FG1SUBR  IS THIS SUBROUTINE MODE
         BO    D#EXIT         IF SO THEN EXIT
         SETFRR  D,WRKREGS=(2,3)
FRRPOST  L     R10,=A(X'40000000') SET CODE FOR POST
         LR    R9,R8          SAVE WORK POINTER IN SAFE REG
         LA    R11,ECB        ADDR OF ECB TO POST
         ICM   R11,8,=X'80'   FLAG AS XMPOST
         LA    R12,D#POSTR    SET POST ERROR RETURN
         L     R13,MYASCB     ASCB TO POST
         L     R15,CVTPTR     POINT AT CVT
         L     R15,CVT0PT01-CVTMAP(R15)    GET POST ENTRY POINTR
         BALR  R14,R15        GO DO POST
         DROP  R7             KILL MAIN ADDRESS
         USING *,R14          SET TEMP BASE
D#PRTN   LR    R8,R9          RESET BASE OF WORK
         SL    R14,=A(D#PRTN-D#SRBCD)  NOW HAVE CORRECTED BASE
         LR    R7,R14         SET TO PROPER REG
         DROP  R14
         USING D#SRBCD,R7     RESET MAIN BASE
         OI    FLAG1,FG1SRDN  FLAG SRB AS COMPLETED
D#EXIT   L     R14,ASRBRTN    RESTORE RETURN ADDR
         BR    R14            EXIT
D#SRBMVC MVC   ALTVER(0),0(R1)  MOVE IN THE DATA TO DUMP
         SPACE 5
*
*        POST ERROR ROUTINE  .. FLAG ERROR AND LET TIMER
*        WAKE UP COMM TASK
*
D#POSTR  LR    R8,R9          RESET WORK BASE
         OI    FLAG2,FG2PSTR  FLAG POST ERROR
         BR    R14            RETURN TO D#PRTN
         TITLE 'IEESD03D  D COMMAND  --  FRR FOR THE SRB MODE'
D#FRRCD  DS    0D
         L     R2,0(R1)       POINT AT PARM AREA
         LM    R7,R8,0(R2)    SET BASE REGS
         TM    0(R2),X'80'    ARE WE IN VALIDATION
         BZ    D#FRR1         NOPE
*
*        VALIDATION ERROR
*
         OI    FLAG2,FG2IVLD  SET FLAG FOR MESSAGE
         SETRP RECORD=NO,RC=4,RETADDR=FRRRTY,REGS,DUMP=NO,             X
               RETREGS=YES,FRESDWA=YES
         BR    R14            EXIT
         SPACE 5
*
*        ALL OTHER ERRORS
*
D#FRR1   OI    FLAG2,FG2ERRR  SET FLAG FOR MESSAGES
         SETRP RECORD=YES,RC=4,RETADDR=FRRRTY,REGS,DUMP=YES,           X
               RETREGS=YES,FRESDWA=YES
         BR    R14            EXIT
         TITLE 'IEESD03D  D COMMAND  --  RESOURCE MANAGER CLEANUP'
*
*        THIS ROUTINE RECEIVES CONTROL IF THE SRB MUST BE
*        PURGED.
*
D#RMTR   DS    0H
         USING *,R15
         LR    R7,R15         SET BASE REGISTER
         SL    R7,=A(D#RMTR-D#SRBCD)   BY COMPUTATION
         DROP  R15
         USING D#SRBCD,R7
         LR    R8,R2          SET UP POINTER TO WORK
         ST    R14,ASRBRTN    SAVE RETURN ADDR
         OI    FLAG2,FG2PURG  SET PURGED
         B     FRRPOST        GO AND POST TO CLEAN UP
         LTORG
         TITLE 'IEESD03D  D COMMAND  --  DSECTS'
XSA      DSECT
XAP      DS    F
XAD      DS    F
XAX      DS    D
XAE      DS    0C
XAR      DS    F
XAN      DS    0C
XAL      DS    F
XAV      DS    D
XAS      DS    D
XAU      DS    C
         DS    C
XAJ      DS    H
         DS    F
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
         CVT
         EJECT
         IHAASVT
         EJECT
         IHAASCB
         EJECT
         IHAFRRS
         EJECT
         IHAPSA
         EJECT
         IHASDWA
         EJECT
         IHASRB
         EJECT
         IHARB
         EJECT
WORK     DSECT
WORKSTRT DS    0D
SAVRET   DS    18F
         DS    0D
DOUBLE   DS    2F
PLINES   DS    F
XSASAVE  DS    F
WTOLIST  DS    F
PRINT    DS    52C
PST      STAE  PST,CT,MF=L
DMYPRMS  DS    6F             DUMMY AREA FOR FRR PARMS FOR SUBR MODE
FRRPRMS  DS    F              ADDRESS OF 6 WORD FRR PARM
ASRBRTN  DS    F              RETURN ADDR FOR SRB CODE
MYASCB   DS    F              ASCB ADDR OF MAIN ROUTINE
MYTCB    DS    F              TCB ADDRESS FOR MAIN ROUTINE
TOASCB   DS    F              ASCB ADDR OF SRB ROUTINE
ECB      DS    F              ECB FOR MAIN ROUTINE TO WAIT ON
ECB2     DS    F              ECB FOR STIMER TO POST
ECBLIST  DS    2F
LENGTH   DS    F              LENGTH OF STORAGE TO DUMP
SRBAREA  DS    ((SRBSIZE+3)/4)F  THE SRB ITSELF
ADDR     DS    F              ADDRESS TO PROCESS AT
ALTREP   DS    F              REPLACEMENT VALUE
ALTVER   DS    F,252C         SPACE FOR VER DATA AND DUMP DATA
ASID     DS    H              ASID OF TOASCB
FLAG1    DS    X
FG1DUMP  EQU   X'80'
FG1REP   EQU   X'40'
FG1SRDN  EQU   X'02'          IF ON SRB HAS TERMINATED
FG1SUBR  EQU   X'01'
FLAG2    DS    X
FG2NVER  EQU   X'01'          VERIFICATION FAILED
FG2IVLD  EQU   X'02'          VALIDATION FAILED
FG2ERRR  EQU   X'04'          DISASTER OCCURED IN SRB
FG2PURG  EQU   X'08'          SRB WAS PURGED
FG2PSTR  EQU   X'10'          IF ON THEN SRB POST HAD ERROR
ESTAELST DS    4F
WORKEND  DS    0F
         END
