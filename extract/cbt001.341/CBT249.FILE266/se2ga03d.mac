         TITLE 'SE2GA03D -   A  JOB ACTIVITY MONITOR'
***********************************************************************
***********************************************************************
***                                                                 ***
***                                                                 ***
***                                                                 ***
***                     COMMAND  SUB-SYSTEM                         ***
***                  -------------------------                      ***
***                                                                 ***
***                                                                 ***
***       SE2GA03D -       A  JOB ACTIVITY MONITOR                  ***
***                                                                 ***
***       VERSION -        1.0                                      ***
***                                                                 ***
***       MVS LEVEL -      MVS/SE  3.8.   WITH  SE2 AND SU64.       ***
***                                                                 ***
***       UPDATED -        04/01/80                                 ***
***                                                                 ***
***                                                                 ***
***                                                                 ***
***********************************************************************
***********************************************************************
         EJECT
CSCGA03D CSECT
         LR    R12,R15
         LA    R7,4095(0,R12)
         LA    R7,1(0,R7)
         USING CSCGA03D,R12,R7
         MODESET KEY=ZERO,MODE=SUP
         L     R0,SIZE             LOAD GETMAIN AREA SIZE AND SUBPOOL
         GETMAIN R,LV=(0)
         LR    R13,R1
         USING WORK,R13
         ST    R14,SAVRET          SAVE RETURN ADDR
         ST    R2,XSASAVE          SAVE XSA ADDR
         USING XSA,R2
         L     R3,XAL
         LA    R3,0(0,R3)
         L     R8,XAA              ASCB/OUCB INFO STORAGE
         ST    R8,ACTSTORG
         USING JOBTABLE,R8
         MVC   JOBASID(2),=H'1'    FORCE MASTER AS DEFAULT
         LTR   R3,R3               ANY PARM
         BZ    ESTAESET            NO
         SR    R0,R0
         SR    R1,R1
         LA    R5,4           SAVE DESIRED LENGTH IN R5
         EJECT
PARMCVT0 CLI   0(R3),C' '     THEN WE AREA DONE
         BE    ESTAESET       WRONG NUMBER OF CHAR
         CLI   0(R3),C'A'     NOW CHECK FOR HEX CHARACTERS
         BL    ESTAESET
         CLI   0(R3),C'F'
         BH    PARMCVT1       NOW TRY NUMBERICS
         NI    0(R3),X'0F'    TURN OFF ZONE
         IC    R0,0(R3)       GET THE CHARACTER
         AH    R0,=H'9'       AND ADJUST TO PROPER VALUE
         B     PARMCVT2
         SPACE 1
PARMCVT1 CLI   0(R3),C'0'     NOW SEE IF NUMERIC
         BL    ESTAESET       IF NOT THEN ERROR
         CLI   0(R3),C'9'     AND TRY HIGH VALUE
         BH    ESTAESET
         NI    0(R3),X'0F'    TURN OFF ZONE
         IC    R0,0(R3)       GET DIGIT
         SPACE 1
PARMCVT2 SLL   R1,4           CLEAR AREA
         OR    R1,R0          PUT IN NEW DIGIT
         LA    R3,1(R3)       POINT PAST
         BCT   R5,PARMCVT0    TRY AGAIN TILL EMPTY
         B     PARMCVTX       ALL DONE AND HAD EXPECTED NUMBER OF CHARS
         SPACE 1
PARMCVTX STH   R1,JOBASID
         SPACE 1
ESTAESET LR    R10,R13             LOAD SAVE AREA ADDR
         B     ESTAEBYP            BYPASS ESTAE LIST
ESTAEOVL ESTAE STAEXIT,CT,MF=L
ESTAEBYP MVC   ESTAELST(16),ESTAEOVL
         LA    R1,ESTAELST
         ESTAE PARAM=(10),MF=(E,(1))
         EJECT
CSCSTART L     R4,16               CVT
         L     R4,604(0,R4)        RMCT
         MVC   WTOLIST(84),SRMOVLY
         L     R5,88(0,R4)         WAMT
         L     R1,THRTSOPG         TSO PERF GROUP NUMBER
         SLL   R1,2                TIMES 4
         L     R6,80(R1,R5)        WAMP OFFSET
         AR    R5,R6               WAMP ADDRESS
         SR    R14,R14
         L     R15,0(0,R5)         TOTAL ENDED TRANS
         LTR   R15,R15             ZERO TRANS
         BZ    NOTSO               YES, BYPASS 0C9
         L     R15,12(0,R5)        TOTAL ELAPSED TIME FOR ENDED TRANS
         D     R14,0(0,R5)         DIVIDE BY ENDED TRANSACTIONS
         SR    R14,R14
         D     R14,=F'1000'
         SPACE 1
NOTSO    CVD   R15,DOUBLE          AVG SECONDS RESPONSE TIME
         SRDL  R14,32
         D     R14,=F'10'
         CVD   R15,DOUBLEX
         MVC   WTOLIST+8(7),=X'402021204B2020'
         ED    WTOLIST+8(4),DOUBLE+6
         UNPK  WTOLIST+13(2),DOUBLEX+6(2)
         OI    WTOLIST+14,X'F0'
         SR    R1,R1
         IC    R1,376(0,R4)        LONG TERM CPU AVG
         CVD   R1,DOUBLE
         MVC   WTOLIST+25(4),=X'40212020'
         ED    WTOLIST+25(4),DOUBLE+6
         LH    R1,374(0,R4)        AVERAGE CPU
         CVD   R1,DOUBLE
         MVC   WTOLIST+38(4),=X'40212020'
         ED    WTOLIST+38(4),DOUBLE+6
         LH    R1,858(0,R4)        AVERAGE PAGING
         CVD   R1,DOUBLE
         MVC   WTOLIST+51(4),=X'40212020'
         ED    WTOLIST+51(4),DOUBLE+6
         LH    R1,846(0,R4)        AVERAGE UIC
         CVD   R1,DOUBLE
         MVC   WTOLIST+65(4),=X'40212020'
         ED    WTOLIST+65(4),DOUBLE+6
         LH    R1,854(0,R4)        AVERAGE ASMQ
         CVD   R1,DOUBLE
         MVC   WTOLIST+78(4),=X'40212020'
         ED    WTOLIST+78(4),DOUBLE+6
         LA    R1,WTOLIST
         SR    R0,R0
         IC    R0,XAU              MCS ID OF REQUESTING CONSOLE
         SVC   35
         MVI   WTOLIST+4,C' '
         MVC   WTOLIST+5(79),WTOLIST+4
         MVC   WTOLIST(4),=X'00540100'
         L     R3,THRSTIMR
         BAL   R10,CHKUCB
         BAL   R10,CHKLOOP
         L     R8,XAA              ASCB/OUCB INFO STORAGE
         EJECT
JOBOUT   L     R4,16               CVT ADDR
         L     R4,556(0,R4)        ASVT ADDR
         LA    R4,524(0,R4)        ASCB SLOT ADDR
         LH    R5,JOBASID
         SLL   R5,2
         AR    R4,R5               ASCB SLOT ADDR
         L     R5,0(0,R4)          ASCB ADDR
         LA    R5,0(0,R5)
         L     R6,56(0,R5)         CSCB ADDR
         XC    SAVETIM1(16),SAVETIM1
         BAL   R11,CSCBFORM        GET STEP NAME
         CLC   JOBSTEP(8),=XL8'00' 1ST PASS
         BE    *+14                YES
         CLC   JOBSTEP(8),ACTSNAME STEPNAME MATCH
         BE    *+10                YES
         XC    JOBFLAG(90),JOBFLAG RESET COUNTERS
         MVC   JOBSTEP(8),ACTSNAME
         L     R9,144(0,R5)        LOAD OUCB ADDR
         BAL   R11,ASCBFORM        GO FORMAT ASCB INFO
         CLI   WJOB1,C' '          ANY OUTPUT
         BE    JOBOUT1             NO
         LA    R1,WTOLIST
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         MVI   WTOLIST+4,C' '
         MVC   WTOLIST+5(79),WTOLIST+4
         SPACE 1
JOBOUT1  CLI   WAITSW,X'00'        JOB WAITING
         BNE   RETURN              YES, NO I/O DISPLAY
         CLC   SAVETIM1(16),=XL16'00' 1ST PASS
         BE    RETURN              YES, NO I/O DISPLAY
         LA    R1,SEPRMSG
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         BAL   R10,CHKUCB6         GO FORMAT JOB I/O
         B     RETURN
         EJECT
ASCBFORM L     R8,XAA              JOBTABLE ADDR
         LA    R1,=CL8'*MASTER*'
         CLC   36(2,R5),=H'1'      MASTER SCHEDULER
         BE    ASCBFRM1            YES
         L     R1,172(0,R5)        JOBNAME POINTER
         LTR   R1,R1               ZERO
         BNZ   ASCBFRM1            NO
         L     R1,176(0,R5)        STC/TSU NAME POINTER
         LTR   R1,R1               ZERO
         BNZ   ASCBFRM1            NO
         LA    R1,=CL8'*UNKNWN*'
         B     ASCBFRM1            NO
         SPACE 1
ASCBFRM0 XC    JOBFLAG(90),JOBFLAG CLEAR COUNTERS
         B     ASCBFRM2
         SPACE 1
ASCBFRM1 CLC   JOBNAME(8),0(R1)    JOB/STC/TSU NAME MATCH
         BE    ASCBFRM2            YES
         MVC   JOBNAME(8),0(R1)    JOB/STC/TSU NAME
         MVC   JOBASID(2),36(R5)   JOB/STC/TSU ASID
         XC    JOBFLAG(90),JOBFLAG CLEAR COUNTERS
         EJECT
ASCBFRM2 XC    ACTCPU(8),ACTCPU
         MVI   WAITSW,X'00'
         SR    R15,R15
         ICM   R15,3,40(R5)        EXCP COUNT
         A     R15,108(0,R9)       OUCB EXCP COUNT
         ST    R15,JOBSIOCT        SIO PER SEC
         LM    R14,R15,64(R5)      TCB TIME
         SRDL  R14,22
         LR    R1,R15
         LM    R14,R15,200(R5)     SRB TIME
         SRDL  R14,22
         AR    R1,R15
         C     R1,JOBINTT          COMPARE PREVIOUS CPU TIME
         BNE   *+8                 JOB NOT WAITING
         MVI   WAITSW,X'FF'
         BL    ASCBFRM0            CURRENT LOWER,  STEP CHANGE
         L     R15,JOBINTT         LOAD PREVIOUS CPU TIME
         LTR   R15,R15             ANY PREVIOUS
         BNZ   *+8                 YES
         ST    R1,JOBINTT          PREVIOUS = CURRENT
         LR    R15,R1
         S     R15,JOBINTT         SUB PREVIOUS CPU TIME
         ST    R1,JOBINTT          PREVIOUS = CURRENT
         ST    R15,SAVETIM3        SAVE DIFFERENCE
         C     R1,JOBTIME          COMPARE PREVIOUS CPU TIME
         BNE   *+8                 JOB NOT WAITING
         MVI   WAITSW,X'FF'
         BL    ASCBFRM0            CURRENT LOWER,  STEP CHANGE
         C     R1,JOBCPUT          COMPARE PREVIOUS CPU TIME
         BL    ASCBFRM0            CURRENT LOWER,  STEP CHANGE
         L     R15,JOBCPUT         LOAD PREVIOUS CPU TIME
         LTR   R15,R15             ANY PREVIOUS
         BNZ   *+8                 YES
         ST    R1,JOBCPUT          PREVIOUS = CURRENT
         L     R15,JOBTIME         LOAD PREVIOUS CPU TIME
         LTR   R15,R15             ANY PREVIOUS
         BNZ   *+8                 YES
         ST    R1,JOBTIME          PREVIOUS = CURRENT
         LR    R15,R1
         S     R15,JOBCPUT         SUB PREVIOUS CPU TIME
         S     R1,JOBTIME          SUB PREVIOUS CPU TIME
         ST    R15,SAVETIM1        SAVE DIFFERENCE
         ST    R1,SAVETIM2         SAVE DIFFERENCE
         TIME  BIN
         L     R1,JOBINTL          OLD TIME
         LTR   R1,R1               ANY OLD TIME
         BNZ   *+8                 YES
         ST    R0,JOBINTL          OLD TIME = NEW TIME
         LR    R1,R0               BINARY TIME
         S     R1,JOBINTL          INTERVAL TIME
         ST    R0,JOBINTL          OLD TIME = NEW TIME
         LTR   R1,R1               TIME EQUAL 0
         BZ    ASCBFRMA            ZERO, NO DIVIDE 0C9
         BM    ASCBFRM0            NEGATIVE, CLEAR COUNTERS
         L     R15,SAVETIM3        LOAD DIFFERENCE
         LTR   R15,R15             NEGATIVE
         BM    ASCBFRM0            YES
         SR    R14,R14
         M     R14,=F'10'          PERCENT
         SR    R14,R14
         DR    R14,R1              PERCENT UTIL
         ST    R15,ACTCPU          SAVE CPU UTIL
         SRDL  R14,32
         M     R14,=F'100'
         DR    R14,R1              PERCENT UTIL  (HUNDREDTHS)
         ST    R15,ACTCPUH         SAVE CPU UTIL (HUNDREDTHS)
         EJECT
ASCBFRMA BAL   R10,ACTIVE          GO FORMAT JOB ACTIVITY LINES
         BAL   R10,CHKABN          CHECK FOR JOBS ABENDING
         BAL   R10,CHKFRM          CHECK FOR JOBS WITH HIGH FRAMES
         BAL   R10,CHKSWP          CHECK FOR JOBS WITH SWAP COUNTS
         TIME  BIN
         L     R1,JOBCPUL          OLD TIME
         LTR   R1,R1               ANY OLD TIME
         BNZ   *+8                 YES
         ST    R0,JOBCPUL          OLD TIME = NEW TIME
         LR    R1,R0               BINARY TIME
         S     R1,JOBCPUL          INTERVAL TIME
         LTR   R1,R1               TIME EQUAL 0
         BE    ASCBFRMB            YES
         BM    ASCBFRM0            NEGATIVE, CLEAR COUNTERS
         L     R15,SAVETIM1        LOAD DIFFERENCE
         LTR   R15,R15             NEGATIVE
         BM    ASCBFRM0            YES
         SR    R14,R14
         M     R14,=F'10'          PERCENT
         SR    R14,R14
         DR    R14,R1              PERCENT UTIL
         BAL   R10,CHKCPU          CHECK JOB CPU UTILIZATION LIMIT
         EJECT
ASCBFRMB CLI   WAITSW,X'00'        WAIT????
         BNE   ASCBFRM4            YES
         XC    JOBWAIT(4),JOBWAIT  CLEAR WAIT COUNTER
         XC    SAVETIM4(4),SAVETIM4
         TIME  BIN                 POTENTIAL LOOP
         L     R1,JOBLOOP          OLD TIME
         LTR   R1,R1               ANY OLD TIME
         BNZ   *+8                 YES
         ST    R0,JOBLOOP          OLD TIME = NEW TIME
         LR    R1,R0               BINARY TIME
         S     R1,JOBLOOP          INTERVAL TIME
         LTR   R1,R1               TIME EQUAL 0
         BCR   8,R11               YES, NO LOOP YET
         BM    ASCBFRM0            NEGATIVE, CLEAR COUNTERS
         L     R15,SAVETIM2        LOAD DIFFERENCE
         LTR   R15,R15             NEGATIVE
         BM    ASCBFRM0            YES
         SR    R14,R14
         M     R14,=F'10'          PERCENT
         SR    R14,R14
         DR    R14,R1              PERCENT UTIL
         C     R15,THRLOOPP        OVER CPU PERCENT THRESHOLD
         BNL   *+18                YES
         XC    JOBLOOP(4),JOBLOOP
         XC    JOBTIME(4),JOBTIME
         BR    R11
         LR    R14,R1
         SRDL  R14,32
         D     R14,=F'100'         LOOP SECONDS
         CVD   R15,DOUBLE
         C     R15,THRLOOPT        OVER LOOP THRESHOLD
         BCR   4,R11               NO
         CLC   36(2,R5),=H'1'      MASTER SCHEDULER
         BCR   8,R11               YES, NO LOOP CHECK
         CLC   172(4,R5),=F'0'     JOB OR STC/TSU
         BNE   *+10                JOB
         CLI   28(R6),X'01'        TSU OR STC
         BCR   7,R11               STC
         L     R1,108(0,R9)        EXCP COUNT
         L     R15,JOBEXCP         PREVIOUS EXCP COUNT
         ST    R1,JOBEXCP          SAVE PREVIOUS EXCP COUNT
         CR    R1,R15              COMPARE CURRENT TO PREVIOUS
         BL    ASCBFRM0            CURRENT LOWER,  STEP CHANGE
         BE    ASCBFRMC            NO EXCPS, POSSIBLE LOOP
         XC    JOBLOOP(4),JOBLOOP
         XC    JOBTIME(4),JOBTIME
         BR    R11
         SPACE 1
ASCBFRMC CLI   WJOB1,C' '          1ST PASS
         BNE   ASCBFRM3            NO, 2ND HALF
         MVC   WJOB1(8),JOBNAME
         MVC   WMSG1(28),=CL28'POSSIBLE LOOP FOR XXXXX SEC'
         MVC   WMSG1+17(6),=X'402020202120'
         ED    WMSG1+17(6),DOUBLE+5
         BR    R11
         EJECT
ASCBFRM3 MVC   WJOB2(8),JOBNAME
         MVC   WMSG2(28),=CL28'POSSIBLE LOOP FOR XXXXX SEC'
         MVC   WMSG2+17(6),=X'402020202120'
         ED    WMSG2+17(6),DOUBLE+5
         LA    R1,WTOLIST
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         MVI   JOBMSG,C' '
         MVC   JOBMSG+1(79),JOBMSG
         BR    R11
         SPACE 1
ASCBFRM4 CLI   WJOB1,C' '          ANY OUTPUT
         BE    ASCBFRMD            NO
         LA    R1,WTOLIST
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         MVI   WTOLIST+4,C' '
         MVC   WTOLIST+5(79),WTOLIST+4
         SPACE 1
ASCBFRMD LA    R1,WAITMSG
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         TIME  BIN
         L     R1,JOBWAIT          OLD TIME
         LTR   R1,R1               ANY OLD TIME
         BNZ   *+8                 YES
         ST    R0,JOBWAIT          OLD TIME = NEW TIME
         LR    R1,R0               BINARY TIME
         S     R1,JOBWAIT          INTERVAL TIME
         XC    JOBLOOP(4),JOBLOOP  CLEAR LOOP COUNTER
         XC    JOBCPUT(4),JOBCPUT  CLEAR CPU TIME ACCUM
         XC    JOBCPUL(4),JOBCPUL  CLEAR ELAPSED TIME ACCUM
         LTR   R1,R1               TIME EQUAL 0
         BCR   8,R11               YES, NO WAIT YET
         BM    ASCBFRM0            NEGATIVE, CLEAR COUNTERS
         LR    R14,R1
         SRDL  R14,32
         D     R14,=F'100'         WAIT SECONDS
         CVD   R15,DOUBLE
         ST    R15,CURRWAIT
         LA    R3,WMSG1
         CLI   WJOB1,C' '          1ST PASS
         BE    ASCBFRM5            YES
         LA    R3,WMSG2
         EJECT
ASCBFRM5 MVC   0(12,R3),=CL12' '
         BAL   R10,CHKENQ          CHECK ENQ OUTSTANDING
         CLI   0(R3),C' '          ANY ENQS FOR THIS JOB
         BNE   ASCBFRM6            YES
         BAL   R10,CHKALC          CHECK ALLOCATION QUEUE
         CLI   0(R3),C' '          ANY ALLOC PENDING FOR THIS JOB
         BNE   ASCBFRM6            YES
         BAL   R10,CHKQIO          CHECK I/O OUTSTANDING
         CLI   0(R3),C' '          ANY I/O FOR THIS JOB
         BNE   ASCBFRM6            YES
         BAL   R10,CHKREP          CHECK REPLY OUTSTANDING
         CLI   0(R3),C' '          ANY REPLIES FOR THIS JOB
         BNE   ASCBFRM6            YES
         L     R1,CURRWAIT         CURRENT WAIT TIME
         C     R1,THRSWPWT         OVER SWAP WAIT THRESHOLD
         BCR   4,R11               NO
         CLC   172(4,R5),=F'0'     JOB OR STC/TSU
         BNE   *+10                JOB
         CLI   28(R6),X'01'        TSU OR STC
         BCR   7,R11               STC OR INIT
         BAL   R10,CHKSRC          CHECK SWAP REASON CODE
         CLI   0(R3),C'*'          EXCLUDED SRC
         BNE   *+10                NO
         MVI   0(R3),C' '
         BR    R11
         CLI   0(R3),C' '          ANY SRC FOR THIS JOB
         BNE   ASCBFRM6            YES
         MVC   0(12,R3),=12C'?'
         SPACE 1
ASCBFRM6 CLI   WJOB1,C' '          1ST TIME
         BNE   ASCBFRM7            NO, 2ND PASS
         MVC   WJOB1(8),JOBNAME
         MVC   WMSG1+12(16),=CL16' WAIT XXXXX SEC'
         MVC   WMSG1+17(6),=X'402020202120'
         ED    WMSG1+17(6),DOUBLE+5
         BR    R11
         SPACE 1
ASCBFRM7 MVC   WJOB2(8),JOBNAME
         MVC   WMSG2+12(16),=CL16' WAIT XXXXX SEC'
         MVC   WMSG2+17(6),=X'402020202120'
         ED    WMSG2+17(6),DOUBLE+5
         LA    R1,WTOLIST
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         MVI   JOBMSG,C' '
         MVC   JOBMSG+1(79),JOBMSG
         BR    R11
         EJECT
CHKCPU   STM   R0,R15,SAVEREGS
         CVD   R15,DOUBLE
         C     R15,THRCPULP        OVER CPU PERCENT THRESHOLD
         BL    CHKCPU2             NO
         LR    R14,R1
         SRDL  R14,32
         D     R14,=F'100'         LOOP SECONDS
         CVD   R15,DOUBLEX
         C     R15,THRCPULT        OVER CPU THRESHOLD
         BL    CHKCPU3             NO
         CLI   WJOB1,C' '          1ST PASS
         BNE   CHKCPU1             NO, 2ND HALF
         MVC   WJOB1(8),JOBNAME
         MVC   WMSG1(28),=CL28'   XXX% CPU FOR   XXXXX SEC'
         MVC   WMSG1+2(4),=X'40202120'
         ED    WMSG1+2(4),DOUBLE+6
         MVC   WMSG1+17(6),=X'402020202120'
         ED    WMSG1+17(6),DOUBLEX+5
         B     CHKCPU3
         SPACE 1
CHKCPU1  MVC   WJOB2(8),JOBNAME
         MVC   WMSG2(28),=CL28'   XXX% CPU FOR   XXXXX SEC'
         MVC   WMSG2+2(4),=X'40202120'
         ED    WMSG2+2(4),DOUBLE+6
         MVC   WMSG2+17(6),=X'402020202120'
         ED    WMSG2+17(6),DOUBLEX+5
         LA    R1,WTOLIST
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         MVI   JOBMSG,C' '
         MVC   JOBMSG+1(79),JOBMSG
         B     CHKCPU3
         SPACE 1
CHKCPU2  XC    JOBCPUL(4),JOBCPUL
         XC    JOBCPUT(4),JOBCPUT
         SPACE 1
CHKCPU3  LM    R0,R15,SAVEREGS
         BR    R10
         EJECT
CHKLOOP  STIMER WAIT,DINTVL=THRINTVL
         LR    R4,R10
         BAL   R10,CHKUCB1
         LR    R10,R4
         BCT   R3,CHKLOOP
         BR    R10
         EJECT
CHKUCB   STM   R0,R15,SAVEREGS
         MVC   UCBTABND(2),=X'FFFF'
         LA    R6,UCBTAB-20
         SPACE 1
CHKUCB0  LA    R6,20(0,R6)
         CLC   0(2,R6),=X'FFFF'    END OF TABLE
         BE    CHKUCB9             YES
         CLI   2(R6),X'00'         REFERENCED LAST PASS
         BNE   *+16                YES
         XC    0(8,R6),0(R6)
         XC    16(4,R6),16(R6)
         MVI   2(R6),X'00'
         XC    8(8,R6),8(R6)
         B     CHKUCB0
         SPACE 1
CHKUCB1  XC    UCBDMSAV(24),UCBDMSAV
         STM   R0,R15,SAVEREGS
         L     R9,16               .CVT
         L     R9,40(0,R9)         .UCB LOOKUP TABLE
         SPACE 1
CHKUCB1A BAL   R10,UCBDML#0        GET NEXT UCB ADDR
         LTR   R1,R1               END OF UCBS
         BZ    CHKUCB9             YES, EXIT
         TM    3(R1),X'88'         ONLINE/ALLOCATED
         BNO   CHKUCB1A            NO
         CLI   18(R1),X'20'        DASD
         BE    *+18                YES
         L     R14,20(0,R1)        UCB EXTENSION
         CLC   JOBASID(2),14(R14)  ASID MATCH
         BNE   CHKUCB1A            NO
         LA    R1,0(0,R1)
         LR    R14,R1
         S     R14,=F'4'
         L     R14,0(0,R14)        IOQ ADDR
         LA    R14,0(0,R14)
         LTR   R14,R14             ZERO
         BZ    CHKUCB1A            YES
         L     R15,8(0,R14)        IOSB ADDR
         LA    R15,0(0,R15)
         LTR   R15,R15             ZERO
         BZ    CHKUCB1A            YES
         LA    R6,UCBTAB-20
         MVC   SAVEBUSY(4),=F'0'
         CLC   JOBASID(2),12(R14)  ASID MATCH
         BNE   CHKUCB2             NO
         CLC   JOBASID(2),6(R15)   ASID MATCH
         BNE   CHKUCB2             NO
         MVC   SAVEBUSY(4),=F'1'
         SPACE 1
CHKUCB2  LA    R6,20(0,R6)         NEXT UCB ENTRY
         CLC   0(2,R6),=X'FFFF'    END OF UCB TABLE
         BE    CHKUCB3             YES, CHECK FOR EMPTY SLOT
         CLM   R1,3,0(R6)          UCB ADDR MATCH
         BNE   CHKUCB2             NO
         B     CHKUCB5
         SPACE 1
CHKUCB3  LA    R6,UCBTAB-20
         SPACE 1
CHKUCB4  LA    R6,20(0,R6)         NEXT UCB ENTRY
         CLC   0(2,R6),=X'FFFF'    END OF UCB TABLE
         BE    CHKUCB1A            YES, NEXT UCB
         CLC   0(2,R6),=X'0000'    EMPTY SLOT
         BNE   CHKUCB4             NO, NEXT ENTRY
         SPACE 1
CHKUCB5  STCM  R1,3,0(R6)          SAVE UCB ADDR
         MVI   2(R6),X'FF'         SLOT IN USE
         L     R1,8(0,R6)
         LA    R1,1(0,R1)
         ST    R1,8(0,R6)          DEVICE BUSY
         L     R1,12(0,R6)
         A     R1,SAVEBUSY
         ST    R1,12(0,R6)         DEVICE BUSY THIS JOB
         B     CHKUCB1A
         EJECT
CHKUCB6  STM   R0,R15,SAVEREGS
         LA    R6,UCBTAB-20
         SPACE 1
CHKUCB7  LA    R6,20(0,R6)
         CLC   0(2,R6),=X'FFFF'    END OF UCB TABLE
         BE    CHKUCB9             YES, EXIT
         SR    R1,R1
         ICM   R1,3,0(R6)          UCB ADDR
         LA    R3,UCBNRDY
         LA    R4,THRUCBNR
         TM    6(R1),X'40'         NOT READY
         BO    CHKUCB7A
         LA    R3,UCBBUSY
         LA    R4,THRUCBBS
         SR    R14,R14
         L     R15,8(0,R6)         UCB BUSY COUNT
         XC    8(4,R6),8(R6)
         M     R14,=F'100'
         D     R14,THRSTIMR        PERCENT BUSY
         LH    R1,16(0,R6)         CUMULATIVE PERCENT
         LTR   R1,R1               ZERO
         BNZ   *+6                 NO
         LR    R1,R15              FAKE START
         MH    R1,=H'3'            3/4 PREVIOUS
         AR    R1,R15              1/4 CURRENT
         SRL   R1,2
         STH   R1,16(0,R6)         NEW CUM PERCENT
         SR    R14,R14
         L     R15,12(0,R6)        UCB BUSY COUNT
         XC    12(4,R6),12(R6)
         M     R14,=F'100'
         D     R14,THRSTIMR        PERCENT BUSY
         LH    R1,18(0,R6)         CUMULATIVE PERCENT
         LTR   R1,R1               ZERO
         BNZ   *+6                 NO
         LR    R1,R15              FAKE START
         MH    R1,=H'3'            3/4 PREVIOUS
         AR    R1,R15              1/4 CURRENT
         SRL   R1,2
         STH   R1,18(0,R6)         NEW CUM PERCENT
         C     R1,THRUCBLM         THRESHOLD REACHED
         BL    CHKUCB7B            NO
         SPACE 1
CHKUCB7A TIME  BIN
         L     R1,4(0,R6)          OLD TIME
         LTR   R1,R1               ANY OLD TIME
         BNZ   *+8                 YES
         ST    R0,4(0,R6)          OLD TIME = NEW TIME
         LR    R1,R0               BINARY TIME
         S     R1,4(0,R6)          INTERVAL TIME
         LTR   R1,R1               TIME EQUAL 0
         BZ    CHKUCB7             YES
         BP    CHKUCB8
         SPACE 1
CHKUCB7B XC    4(16,R6),4(R6)
         B     CHKUCB7
         EJECT
CHKUCB8  LR    R14,R1
         SRDL  R14,32
         D     R14,=F'100'         SECONDS
         LH    R1,16(0,R6)
         CVD   R1,DOUBLEY
         LH    R1,18(0,R6)
         CVD   R1,DOUBLE
         CVD   R15,DOUBLEX
         C     R15,0(0,R4)         TIME THRESHOLD REACHED
         BL    CHKUCB7             NO
         CLI   WJOB1,C' '          1ST PASS
         BNE   CHKUCB8A            NO, 2ND HALF
         MVC   WJOB1(38),0(R3)
         SR    R1,R1
         ICM   R1,3,0(R6)          UCB ADDR
         MVC   WJOB1(3),13(R1)     DEVICE ADDRESS
         MVC   WJOB1+4(6),=6C' '
         TM    18(R1),X'A0'        TAPE OR DASD
         BZ    *+10                NO
         MVC   WJOB1+4(6),28(R1)   DEVICE VOLSER
         MVC   WJOB1+27(6),=X'402020202120'
         ED    WJOB1+27(6),DOUBLEX+5
         LA    R1,UCBNRDY
         CR    R1,R3               NOT READY MESSAGE
         BE    CHKUCB7             YES, NO PERCENT
         MVC   WJOB1+11(4),=X'40202120'
         ED    WJOB1+11(4),DOUBLEY+6
         MVC   WJOB1+17(4),=X'40202120'
         ED    WJOB1+17(4),DOUBLE+6
         CLI   WJOB1+12,C' '
         BE    *+12
         MVI   WJOB1+11,C'('
         B     CHKUCB7
         CLI   WJOB1+13,C' '
         BE    *+12
         MVI   WJOB1+12,C'('
         B     CHKUCB7
         MVI   WJOB1+13,C'('
         B     CHKUCB7
         SPACE 1
CHKUCB8A MVC   WJOB2(38),0(R3)
         SR    R1,R1
         ICM   R1,3,0(R6)          UCB ADDR
         MVC   WJOB2(3),13(R1)     DEVICE ADDRESS
         MVC   WJOB2+4(6),=6C' '
         TM    18(R1),X'A0'        TAPE OR DASD
         BZ    *+10                NO
         MVC   WJOB2+4(6),28(R1)   DEVICE VOLSER
         MVC   WJOB2+27(6),=X'402020202120'
         ED    WJOB2+27(6),DOUBLEX+5
         LA    R1,UCBNRDY
         CR    R1,R3               NOT READY MESSAGE
         BE    CHKUCB8B            YES, NO PERCENT
         MVC   WJOB2+11(4),=X'40202120'
         ED    WJOB2+11(4),DOUBLEY+6
         MVC   WJOB2+17(4),=X'40202120'
         ED    WJOB2+17(4),DOUBLE+6
         CLI   WJOB2+12,C' '
         BE    *+12
         MVI   WJOB2+11,C'('
         B     CHKUCB8B
         CLI   WJOB2+13,C' '
         BE    *+12
         MVI   WJOB2+12,C'('
         B     CHKUCB8B
         MVI   WJOB2+13,C'('
         SPACE 1
CHKUCB8B LA    R1,WTOLIST
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         MVI   JOBMSG,C' '
         MVC   JOBMSG+1(79),JOBMSG
         B     CHKUCB7
         SPACE 1
CHKUCB9  LM    R0,R15,SAVEREGS
         BR    R10
         EJECT
CHKABN   L     R1,16              CVT
         L     R1,640(0,R1)       FIRST VALID MAJOR QCB
         B     CHKABN1+4          1ST MAJOR PROCESS
         SPACE 1
CHKABN1  L     R1,0(0,R1)         NEXT MAJOR
         LTR   R1,R1              EXIST
         BCR   8,R10              NO, END OF QCBS
         CLC   16(8,R1),=CL8'SYSIEA01'  ABEND QCB
         BNE   CHKABN1            NO, NEXT MAJOR
         L     R14,8(0,R1)        1ST MINOR
         LTR   R14,R14            EXIST
         BCR   8,R10              NO
         B     CHKABN3
         SPACE 1
CHKABN2  L     R14,0(0,R14)       NEXT MINOR QCB
         LTR   R14,R14            EXIST
         BCR   8,R10              NO
         SPACE 1
CHKABN3  L     R15,8(0,R14)       1ST QEL
         SPACE 1
CHKABN4  LTR   R15,R15            EXIST
         BZ    CHKABN2            NO
         CLC   JOBASID(2),14(R15) ASID MATCH
         BE    CHKABN5            YES, JOB ABENDING
         L     R15,0(0,R15)       NEXT QEL
         LA    R15,0(0,R15)
         LTR   R15,R15            EXIST
         BZ    CHKABN2            NO
         B     CHKABN4
         SPACE 1
CHKABN5  TIME  BIN
         L     R1,JOBABEND         OLD TIME
         LTR   R1,R1               ANY OLD TIME
         BNZ   *+8                 YES
         ST    R0,JOBABEND         OLD TIME = NEW TIME
         LR    R1,R0               BINARY TIME
         S     R1,JOBABEND         INTERVAL TIME
         LTR   R1,R1               TIME EQUAL 0
         BCR   8,R10               YES
         BP    CHKABN7
         SPACE 1
CHKABN6  XC    JOBABEND(4),JOBABEND
         BR    R10
         SPACE 1
CHKABN7  LR    R14,R1
         SRDL  R14,32
         D     R14,=F'100'         SECONDS
         CVD   R15,DOUBLEX
         C     R15,THRABEND        TIME THRESHOLD REACHED
         BCR   4,R10               NO
         CLI   WJOB1,C' '          1ST PASS
         BNE   CHKABN8             NO, 2ND HALF
         MVC   WJOB1(8),JOBNAME
         MVC   WMSG1(28),=CL28'ABEND IN PROGRESS XXXXX SEC'
         MVC   WMSG1+17(6),=X'402020202120'
         ED    WMSG1+17(6),DOUBLEX+5
         BR    R10
         SPACE 1
CHKABN8  MVC   WJOB2(8),JOBNAME
         MVC   WMSG2(28),=CL28'ABEND IN PROGRESS XXXXX SEC'
         MVC   WMSG2+17(6),=X'402020202120'
         ED    WMSG2+17(6),DOUBLEX+5
         LA    R1,WTOLIST
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         MVI   JOBMSG,C' '
         MVC   JOBMSG+1(79),JOBMSG
         BR    R10
         EJECT
CHKREP   L     R1,CURRWAIT         CURRENT WAIT TIME
         C     R1,THRREPWT         OVER REPLY WAIT THRESHOLD
         BCR   4,R10               NO
         L     R1,16              CVT
         L     R1,100(0,R1)       UCM BASE
         L     R1,28(0,R1)        1ST ORE
         LA    R1,0(0,R1)
         SPACE 1
CHKREP1  LTR   R1,R1              ANY OUTSTANDING REPLIES
         BCR   8,R10              NO
         CLC   JOBASID(2),24(R1)  ASID MATCH
         BE    CHKREP2            YES
         L     R1,0(0,R1)         NEXT ORE
         LA    R1,0(0,R1)
         B     CHKREP1
         SPACE 1
CHKREP2  MVC   0(12,R3),=CL12'REPLY '
         MVC   7(2,R3),4(R1)      REPLY ID
         BR    R10
         SPACE 5
CHKSRC   LA    R1,SRCTAB
         SR    R15,R15
         IC    R15,41(0,R9)        SWAP REASON CODE
         CH    R15,=H'13'          MAX SWAP REASON CODE
         BCR   2,R10               OVER MAX
         MH    R15,=H'12'
         LA    R1,0(R15,R1)        SWAP REASON CODE OUTPUT
         MVC   0(12,R3),0(R1)
         BR    R10
         EJECT
CHKFRM   L     R1,16              LOAD CVT ADDR
         L     R1,356(0,R1)       LOAD PVT ADDR
         L     R15,12(0,R1)       PFT APPARENT ADDR
         AH    R15,16(0,R1)       PFT ACTUAL ADDR
         SR    R14,R14             INDEX
         IC    R14,18(0,R1)           TO
         SLL   R14,8                      END OF
         IC    R14,19(0,R1)                 PFT
         SH    R14,16(0,R1)
         SRL   R14,4               DIVIDE BY 16
         SR    R1,R1               CLEAR FRAME COUNT
         SPACE 1
CHKFRM1  CLC   0(2,R15),JOBASID    ASID MATCH
         BNE   CHKFRM2             NO
         LA    R1,1(0,R1)          ADD 1 TO FRAME COUNT
         SPACE 1
CHKFRM2  LA    R15,16(0,R15)       NEXT PFT
         BCT   R14,CHKFRM1         PROCESS NEXT
         L     R15,JOBFRCNT        JOB FRAME COUNT  (WEIGHTED AVG)
         XC    JOBFRCNT(4),JOBFRCNT
         C     R1,THRFRAME         THRESHOLD REACHED
         BL    CHKFRM3             NO
         LTR   R15,R15             ZERO
         BNZ   *+6                 NO
         LR    R15,R1              FAKE START
         MH    R15,=H'3'           3/4 PREVIOUS
         AR    R1,R15              1/4 CURRENT
         SRL   R1,2
         ST    R1,JOBFRCNT
         CVD   R1,DOUBLE
         TIME  BIN
         L     R1,JOBFRAME         OLD TIME
         LTR   R1,R1               ANY OLD TIME
         BNZ   *+8                 YES
         ST    R0,JOBFRAME         OLD TIME = NEW TIME
         LR    R1,R0               BINARY TIME
         S     R1,JOBFRAME         INTERVAL TIME
         LTR   R1,R1               TIME EQUAL 0
         BCR   8,R10               YES
         BP    CHKFRM4
         SPACE 1
CHKFRM3  XC    JOBFRAME(4),JOBFRAME
         BR    R10
         EJECT
CHKFRM4  LR    R14,R1
         SRDL  R14,32
         D     R14,=F'100'         SECONDS
         CVD   R15,DOUBLEX
         C     R15,THRFRMTM        FRAME USAGE TIME THRESHOLD REACHED
         BCR   4,R10               NO
         CLI   WJOB1,C' '          1ST PASS
         BNE   CHKFRM5             NO, 2ND HALF
         MVC   WJOB1(8),JOBNAME
         MVC   WMSG1(28),=CL28' XXXXX FRAMES FOR XXXXX SEC'
         MVC   WMSG1+17(6),=X'402020202120'
         ED    WMSG1+17(6),DOUBLEX+5
         MVC   WMSG1(6),=X'402020202120'
         ED    WMSG1(6),DOUBLE+5
         BR    R10
         SPACE 1
CHKFRM5  MVC   WJOB2(8),JOBNAME
         MVC   WMSG2(28),=CL28' XXXXX FRAMES FOR XXXXX SEC'
         MVC   WMSG2+17(6),=X'402020202120'
         ED    WMSG2+17(6),DOUBLEX+5
         MVC   WMSG2(6),=X'402020202120'
         ED    WMSG2(6),DOUBLE+5
         LA    R1,WTOLIST
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         MVI   JOBMSG,C' '
         MVC   JOBMSG+1(79),JOBMSG
         BR    R10
         EJECT
CHKSWP   CLC   36(2,R5),=H'1'      MASTER SCHEDULER
         BCR   8,R10               YES, NO SWAP CHECK
         CLC   172(4,R5),=F'0'     JOB OR STC/TSU
         BCR   8,R10               STC OR TSO
         LH    R1,42(0,R9)         SWAP COUNT
         CVD   R1,DOUBLE
         C     R1,THRSWAP          THRESHOLD REACHED
         BCR   4,R10
         SPACE 1
CHKSWP1  CLI   WJOB1,C' '          1ST PASS
         BNE   CHKSWP2             NO, 2ND HALF
         MVC   WJOB1(8),JOBNAME
         MVC   WMSG1(28),=CL28'CURRENT SWAP COUNT = XXXXX'
         MVC   WMSG1+20(6),=X'402020202120'
         ED    WMSG1+20(6),DOUBLE+5
         BR    R10
         SPACE 1
CHKSWP2  MVC   WJOB2(8),JOBNAME
         MVC   WMSG2(28),=CL28'CURRENT SWAP COUNT = XXXXX'
         MVC   WMSG2+20(6),=X'402020202120'
         ED    WMSG2+20(6),DOUBLE+5
         LA    R1,WTOLIST
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         MVI   JOBMSG,C' '
         MVC   JOBMSG+1(79),JOBMSG
         BR    R10
         EJECT
CHKENQ   L     R1,16              CVT
         L     R1,640(0,R1)       FIRST VALID MAJOR QCB
         ST    R2,SAVEREGS
         B     CHKENQ1+4          1ST MAJOR PROCESS
         SPACE 1
CHKENQ1  L     R1,0(0,R1)         NEXT MAJOR
         LTR   R1,R1              EXIST
         BZ    CHKENQ8            NO, END OF QCBS
         MVC   MAJOR(8),16(R1)    SAVE MAJOR QCB
         L     R14,8(0,R1)        1ST MINOR
         LTR   R14,R14            EXIST
         BZ    CHKENQ1            NO
         B     CHKENQ3
         SPACE 1
CHKENQ2  L     R14,0(0,R14)       NEXT MINOR QCB
         LTR   R14,R14            EXIST
         BZ    CHKENQ1            NO
         SPACE 1
CHKENQ3  L     R15,8(0,R14)       1ST QEL
         SPACE 1
CHKENQ4  LTR   R15,R15            EXIST
         BZ    CHKENQ2            NO
         TM    12(R15),X'80'      SHARED
         BZ    CHKENQ5            NO
         L     R15,0(0,R15)       NEXT QEL
         LA    R15,0(0,R15)
         B     CHKENQ4
         SPACE 1
CHKENQ5  C     R15,8(0,R14)       IS EXCL QEL THE 1ST QEL
         BNE   CHKENQ6            NO
         L     R2,0(0,R15)        NEXT QEL
         LA    R2,0(0,R2)
         LTR   R2,R2              EXIST
         BZ    CHKENQ2            NO
         SPACE 1
CHKENQ6  L     R15,0(0,R15)       NEXT QEL
         LA    R15,0(0,R15)
         LTR   R15,R15            EXIST
         BZ    CHKENQ2            NO
         CLC   JOBASID(2),14(R15) ASID MATCH
         BE    CHKENQ7            YES, ENQ CONFLICT THIS JOB
         B     CHKENQ6
         SPACE 1
CHKENQ7  MVC   0(12,R3),=CL12'ENQ'
         MVC   4(8,R3),MAJOR
         SPACE 1
CHKENQ8  L     R2,SAVEREGS
         BR    R10
         EJECT
CHKALC   L     R1,CURRWAIT         CURRENT WAIT TIME
         C     R1,THRALCWT         OVER ALLOCATION WAIT THRESHOLD
         BCR   4,R10               NO
         L     R1,16              CVT
         L     R1,548(0,R1)       AQTOP
         L     R14,0(0,R1)        1ST QUEUE ELEMENT
         SPACE 1
CHKALC1  CR    R1,R14             END OF CHAIN
         BCR   8,R10              YES, NOT IN ALLOCATION
         SR    R15,R15
         LH    R15,22(0,R14)      ASID
         CH    R15,JOBASID        ASID MATCH
         BE    CHKALC2
         L     R14,0(0,R14)       NEXT QUEUE ELEMENT
         B     CHKALC1
         SPACE 1
CHKALC2  MVC   0(12,R3),=CL12'ALLOC QUEUE'
         BR    R10
         EJECT
CHKQIO   XC    UCBDMSAV(24),UCBDMSAV
         MVC   QIOASID(2),JOBASID  SAVE ASID
         STM   R0,R15,SAVEREGS
         L     R9,16               .CVT
         L     R9,40(0,R9)         .UCB LOOKUP TABLE
         SPACE 1
CHKQIO1  BAL   R10,UCBDML#0        GET NEXT UCB ADDR
         LTR   R1,R1               END OF UCBS
         BZ    CHKQIO3             YES, EXIT
         B     CHKQIO2
         SPACE 1
CHKQIO2  LR    R2,R1              UCB ADDR
         LR    R4,R1              UCB ADDR
         S     R4,=F'4'           DECR ADDR -4
         L     R4,0(0,R4)         IOQ ADDR
         LA    R4,0(0,R4)
         LTR   R4,R4              ANY IOQ
         BZ    CHKQIO1            NO, NEXT UCB
         L     R5,8(0,R4)         IOSB ADDR
         LA    R5,0(0,R5)
         LTR   R5,R5              EXIST
         BZ    CHKQIO1            NO, NEXT UCB
         B     CHKQIO9
         SPACE 1
CHKQIO3  L     R8,16              CVT ADDR
         L     R8,140(0,R8)       LCH ADDR
         SPACE 1
CHKQIO4  CLC   16(4,R8),=F'0'     END OF LCH
         BE    CHKQIO8A           YES, EXIT
         CLC   0(4,R8),=X'FFFFFFFF' IOQ ADDR EXIST
         BNE   CHKQIO6            YES
         SPACE 1
CHKQIO5  LA    R8,32(0,R8)        NEXT LCH
         B     CHKQIO4
         SPACE 1
CHKQIO6  L     R4,0(0,R8)         1ST IOQ
         L     R6,4(0,R8)         LAST IOQ
         SPACE 1
CHKQIO7  L     R5,8(0,R4)         IOSB ADDR
         LA    R5,0(0,R5)
         LTR   R5,R5              EXIST
         BZ    CHKQIO7A           NO
         L     R2,16(0,R5)        UCB ADDR
         CLC   QIOASID(2),6(R5)   ASID MATCH
         BE    CHKQIO8            YES
         SPACE 1
CHKQIO7A CR    R4,R6              END OF IOQS
         BE    CHKQIO5            YES
         L     R4,0(0,R4)         NEXT IOQ
         B     CHKQIO7
         SPACE 1
CHKQIO8  MVC   0(12,R3),=CL12'I/O ON'
         MVC   8(3,R3),13(R2)
         SPACE 1
CHKQIO8A LM    R0,R15,SAVEREGS
         BR    R10
         SPACE 1
CHKQIO9  C     R2,16(0,R5)        UCB ADDR MATCH
         BNE   CHKQIO8A           NO, EXIT
         CLC   QIOASID(2),6(R5)   ASID MATCH
         BE    CHKQIO8            YES
         B     CHKQIO1
         EJECT
UCBDML#0 ST    R8,UCBDMSAV         .SAVE WORK REG 1
         ST    R10,UCBDMSAV+8      .SAVE WORK REG 3
         ST    R11,UCBDMSAV+12     .SAVE WORK REG 4
         L     R8,UCBDMLOW         .SET SEARCH ARGUMENT
         SPACE 1
UCBDML#1 LA    R8,1(0,R8)          .NEXT UNIT ADDR POSSIBLE
         L     R10,=X'0000FFFF'    .SET MAX NEXT LEAST HIGH
         SPACE 1
UCBDML#2 CLC   0(2,R9),=X'FFFF'    .END OF TABLE
         BE    UCBDMOUT            .YES, GO PROCESS
         SR    R1,R1
         ICM   R1,3,0(R9)          .LOAD UCB ADDR
         LTR   R1,R1               .ZERO ADDR
         BNZ   UCBDML#4            .NO, CONTINUE
         SPACE 1
UCBDML#3 LA    R9,2(0,R9)          .NEXT UCB LOOKUP TABLE ENTRY
         B     UCBDML#2
         SPACE 1
UCBDML#4 TM    6(R1),X'8A'         BUSY AND/OR CHANNEL PROGRAM ACTIVE
         BZ    UCBDML#3            NO, NEXT UCB
         BAL   R11,UCBDMCNV        .CONVERT UNIT ADDR TO HEX
         CR    R1,R8               .UNIT EQUAL
         BL    UCBDML#3            .LOW NOT EQUAL, NEXT UCB
         LR    R10,R1              .SET NEXT LEAST HIGH UNIT ADDR
         MVC   UCBDMCUR+2(2),0(R9) .SET NEXT LEAST HIGH UCB ADDR
         B     UCBDMOUT            .GO PROCESS
         EJECT
UCBDMCNV SR    R14,R14
         SR    R15,R15
         IC    R15,13(0,R1)        .UNIT ADDR DIGIT
         TM    13(R1),X'F0'        .NUMERIC
         BO    *+8                 .YES, BYPASS VALUE ADJUST
         LA    R15,9(0,R15)        .SET VALUE TO COVER A-F
         SLL   R15,28              .SHIFT OUT ALL BUT PERTINENT
         SLDL  R14,4               .INSERT INTO RESULTS REGISTER
         IC    R15,14(0,R1)        .UNIT ADDR DIGIT
         TM    14(R1),X'F0'        .NUMERIC
         BO    *+8                 .YES, BYPASS VALUE ADJUST
         LA    R15,9(0,R15)        .SET VALUE TO COVER A-F
         SLL   R15,28              .SHIFT OUT ALL BUT PERTINENT
         SLDL  R14,4               .INSERT INTO RESULTS REGISTER
         IC    R15,15(0,R1)        .UNIT ADDR DIGIT
         TM    15(R1),X'F0'        .NUMERIC
         BO    *+8                 .YES, BYPASS VALUE ADJUST
         LA    R15,9(0,R15)        .SET VALUE TO COVER A-F
         SLL   R15,28              .SHIFT OUT ALL BUT PERTINENT
         SLDL  R14,4               .INSERT INTO RESULTS REGISTER
         LR    R1,R14              .SET RESULTS REG
         BR    R11
         SPACE 3
UCBDMOUT C     R10,=X'0000FFFF'    .ALL DONE
         BE    UCBDMEX             .YES
         ST    R10,UCBDMLOW        .NEXT LOW UNIT ADDR
         L     R1,UCBDMCUR         .LOAD UCB ADDR FOR FOUND UNIT
         B     UCBDMCON            .CONTINUE
         SPACE 1
UCBDMEX  SR    R1,R1               .CLEAR UCB ADDR REGISTER
         L     R8,UCBDMSAV         .RELOAD WORK REG 1
         L     R10,UCBDMSAV+8      .RELOAD WORK REG 3
         L     R11,UCBDMSAV+12     .RELOAD WORK REG 4
         B     UCBDMRET            .END OF UCBS
         SPACE 1
UCBDMCON L     R8,UCBDMSAV         .RELOAD WORK REG 1
         L     R10,UCBDMSAV+8      .RELOAD WORK REG 3
         L     R11,UCBDMSAV+12     .RELOAD WORK REG 4
         SPACE 1
UCBDMRET EQU   *
         BR    R10
         EJECT
CSCBFORM CLI   28(R6),X'01'        TSO USER
         BE    CSCBFRM4            YES
         CLI   28(R6),X'03'        INIT
         BNE   CSCBFRM3            NO, GO HANDLE
         LA    R9,0(0,R6)          SAVE CSCB ADDR
         SR    R10,R10             INSERT
         IC    R10,30(0,R6)
         SLL   R10,8               ASID
         IC    R10,31(0,R6)
         SPACE 1
CSCBFRM1 L     R6,0(0,R6)          NEXT CSCB
         LA    R6,0(0,R6)          CLEAR HIGH ORDER
         LTR   R6,R6               END OF CSCBS
         BNZ   *+10                NO, CONTINUE
         LR    R6,R9               LOAD CSCB ADDR
         B     CSCBFRM5            NO GOOD
         CR    R6,R9               SAME CSCB
         BE    CSCBFRM5            YES, NO GOOD
         CH    R10,30(0,R6)        SAME ASID
         BNE   CSCBFRM1            NO, CHECK NEXT
         SPACE 1
CSCBFRM2 MVC   ACTSNAME(8),64(R6)  STEP NAME
         BR    R11
         SPACE 1
CSCBFRM3 MVC   ACTSNAME(8),8(R6)   STEP NAME
         BR    R11
         SPACE 1
CSCBFRM4 MVC   ACTSNAME(8),16(R6)
         BR    R11
         SPACE 1
CSCBFRM5 MVC   ACTSNAME(8),=CL8' '
         BR    R11
         EJECT
ACTIVE   STM   R0,R15,ACTREGS
         L     R8,ACTSTORG         ASCB/OUCB INFO STORAGE
         CLI   WJOB1,C' '          ANY OUTPUT
         BE    ACTIVE0             NO
         LA    R1,WTOLIST
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         SPACE 1
ACTIVE0  MVI   ACTMSG1,C' '
         MVC   ACTMSG1+1(79),ACTMSG1
         MVC   ACTJNAME(8),JOBNAME
         MVC   ACTSNAME(8),JOBSTEP
         L     R15,ACTCPU          CPU UTIL
         LTR   R15,R15             NEGATIVE CPU
         BM    ACTIVE1             YES
         CVD   R15,DOUBLE          PERCENT TO PRINT
         MVC   ACTMSG1+19(4),=C'CPU='
         MVC   PCT1(7),=X'402020204B2020'
         ED    PCT1(4),DOUBLE+6
         MVI   ACTMSG1+22,C'='
         CH    R15,=H'46'          MAX
         BNH   *+8                 NO
         LH    R15,=H'46'          SET MAX
         EX    R15,PCTMVE1         GRAPHIC PERCENT
         LA    R15,PCTGRPH1(R15)
         MVI   0(R15),C'>'
         L     R15,ACTCPUH
         CVD   R15,DOUBLE          PERCENT TO PRINT  (HUNDREDTHS)
         UNPK  PCT1+5(2),DOUBLE+6(2)
         OI    PCT1+6,X'F0'
         B     ACTIVE2
         SPACE 1
ACTIVE1  MVC   PCT1(7),=C'**CHG**'
         B     ACTIVE2
         SPACE 1
PCTMVE1  MVC   PCTGRPH1(0),PCTLINE
         EJECT
ACTIVE2  MVC   ACTLIST1(4),=X'00540100'
         LA    R1,ACTLIST1
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         MVI   OUTMSG+4,C' '
         MVC   OUTMSG+5(79),OUTMSG+4
         L     R6,JOBPREVT
         XC    JOBINTVL(4),JOBINTVL
         TIME  BIN
         LR    R5,R0               CURRENT TIME
         SR    R5,R6               INTERVAL TIME
         ST    R0,JOBPREVT
         LTR   R6,R6               1ST TIME
         BZ    ACTIVE2A
         ST    R5,JOBINTVL         SAVE INTERVAL TIME
         SPACE 1
ACTIVE2A MVC   OUTMSG(4),=X'00540100'
         L     R14,16              LOAD CVT ADDR
         L     R3,356(0,R14)       LOAD PVT ADDR
         L     R4,12(0,R3)         PFT APPARENT ADDR
         AH    R4,16(0,R3)         PFT ACTUAL ADDR
         SR    R5,R5               INDEX
         IC    R5,18(0,R3)            TO
         SLL   R5,8                      END OF
         IC    R5,19(0,R3)                  PFT
         SH    R5,16(0,R3)
         SRL   R5,4                DIVIDE BY 16
         STM   R4,R5,PFTREGS       SAVE PFT REGS
         LH    R10,JOBASID
         BAL   R11,PAGEPRNT        GO COUNT AND FORMAT
         BAL   R11,JPAGE           GO COUNT AND FORMAT
         L     R2,XSASAVE
         LA    R1,OUTMSG           LOAD OUTPUT MSG ADDR
         SR    R0,R0
         IC    R0,XAU
         SVC   35
         SPACE 1
ACTIVE3  MVI   ACTMSG2,C' '
         MVC   ACTMSG2+1(79),ACTMSG2
         MVC   ACTMSG2(5),=C'EXCP='
         L     R15,JOBSIOCT        EXCP COUNT
         L     R14,JOBSIOPR        PREV COUNT
         LTR   R14,R14             ZERO
         BNZ   *+6                 NO
         LR    R14,R15             PREV = CURRENT
         ST    R15,JOBSIOPR
         SR    R15,R14
         CVD   R15,DOUBLE          EXCP TO PRINT
         MVC   ACTMSG2+5(6),=X'402020202120'
         ED    ACTMSG2+5(6),DOUBLE+5
         L     R14,JOBINTVL        LOAD DIFFERENCE
         LTR   R14,R14             POSITIVE
         BNP   ACTIVE3A            NO
         MVC   ACTMSG2+19(4),=C'E/S='
         SR    R14,R14
         M     R14,=F'100'
         D     R14,JOBINTVL        SIO PER SEC
         CVD   R15,DOUBLE
         MVC   PCT2(7),=X'402020204B2020'
         ED    PCT2(4),DOUBLE+6
         MVI   ACTMSG2+22,C'='
         CH    R15,=H'46'          MAX
         BNH   *+8                 NO
         LH    R15,=H'46'          SET MAX
         EX    R15,PCTMVE2         GRAPHIC PERCENT
         LA    R15,PCTGRPH2(R15)
         MVI   0(R15),C'>'
         SRDL  R14,32
         M     R14,=F'100'
         D     R14,JOBINTVL
         CVD   R15,DOUBLE          PERCENT TO PRINT  (HUNDREDTHS)
         UNPK  PCT2+5(2),DOUBLE+6(2)
         OI    PCT2+6,X'F0'
         SPACE 1
ACTIVE3A MVC   ACTLIST2(4),=X'00540100'
         LA    R1,ACTLIST2
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         SPACE 1
ACTIVE4  LM    R0,R15,ACTREGS
         BR    R10
         SPACE 1
PCTMVE2  MVC   PCTGRPH2(0),PCTLINE
         EJECT
JPAGE    L     R14,16              LOAD CVT ADDR
         L     R14,556(0,R14)      LOAD ASVT ADDR
         LA    R14,524(0,R14)      1ST ASCB SLOT
         SLL   R10,2
         LA    R14,0(R10,R14)      THIS ASID ASCB SLOT
         L     R8,ACTSTORG         ASCB/OUCB INFO STORAGE
         L     R2,JOBINTVL
         L     R8,0(0,R14)         ASCB ADDR
         L     R1,148(0,R8)        OUXB ADDR
         LA    R1,0(0,R1)
         L     R8,ACTSTORG         ASCB/OUCB INFO STORAGE
         LTR   R5,R1               VALID ADDR
         BCR   8,R11               NO
         CLC   JOBPAGES(24),=24X'00'  1ST TIME
         BE    JPAGE3              YES
         SPACE 1
JPAGE1   LTR   R2,R2               1ST PASS
         BCR   8,R11
         MVC   OUTMSG+19(9),=CL9'PGS/SEC='
         LA    R10,JOBPAGES
         L     R14,16(0,R1)        CURR PAGEIN
         S     R14,0(0,R10)        SUB PREV PAGEIN
         LTR   R14,R14             OVERFLOW
         BM    JPAGE2              YES
         LR    R15,R14             ACCUMULATE
         L     R14,20(0,R1)        CURR PAGEOUT
         S     R14,4(0,R10)        SUB PREV PAGEOUT
         LTR   R14,R14             OVERFLOW
         BM    JPAGE2              YES
         AR    R15,R14             ACCUMULATE
         L     R14,24(0,R1)        CURR PAGE RECLAIM
         S     R14,8(0,R10)        SUB PREV PAGE RECLAIM
         LTR   R14,R14             OVERFLOW
         BM    JPAGE2              YES
         SR    R15,R14             ACCUMULATE
         L     R14,28(0,R1)        CURR VIO PAGEIN
         S     R14,12(0,R10)       SUB PREV VIO PAGEIN
         LTR   R14,R14             OVERFLOW
         BM    JPAGE2              YES
         AR    R15,R14             ACCUMULATE
         L     R14,32(0,R1)        CURR VIO PAGEOUT
         S     R14,16(0,R10)       SUB PREV VIO PAGEOUT
         LTR   R14,R14             OVERFLOW
         BM    JPAGE2              YES
         AR    R15,R14             ACCUMULATE
         L     R14,36(0,R1)        CURR VIO RECLAIM
         S     R14,20(0,R10)       SUB PREV VIO RECLAIM
         LTR   R14,R14             OVERFLOW
         BM    JPAGE2              YES
         SR    R15,R14             ACCUMULATE
         SR    R14,R14
         M     R14,=F'100'
         DR    R14,R2              PAGES PER SEC
         CVD   R15,DOUBLE
         LR    R1,R15
         MVC   OUTMSG+28(10),=X'402021204B2020404040'
         ED    OUTMSG+28(4),DOUBLE+6
         SRDL  R14,32
         M     R14,=F'100'
         DR    R14,R2              HUNDREDTHS
         CVD   R15,DOUBLE
         UNPK  OUTMSG+33(2),DOUBLE+6(2)
         OI    OUTMSG+34,X'F0'
         SLL   R1,1
         C     R15,=F'50'          ROUND UP GRAPH
         BL    *+8                 NO
         LA    R1,1(0,R1)
         CH    R1,=H'46'
         BNH   *+8
         LH    R1,=H'46'          FORCE MAX
         EX    R1,PAGMVE
         LA    R1,OUTMSG+37(R1)
         MVI   0(R1),C'>'
         B     JPAGE3
         SPACE 1
JPAGE2   MVC   OUTMSG+28(18),=CL18'   0.00'
         SPACE 1
JPAGE3   MVC   JOBPAGES(24),16(R5)    SAVE OUXB PAGING ACCUM FIELDS
         BR    R11
         SPACE 1
PAGMVE   MVC   OUTMSG+37(0),PAGGRAPH
         EJECT
PAGEPRNT LM    R4,R5,PFTREGS       LOAD PFT REGS
         SR    R14,R14             CLEAR FRAME COUNT
         SR    R9,R9               CLEAR AVAILABLE FRAME COUNT
         SPACE 3
PAGEPR1  SR    R15,R15             LOAD
         IC    R15,0(0,R4)            PFT
         SLL   R15,8                     ASID
         IC    R15,1(0,R4)
         CR    R10,R15             ASID MATCH
         BNE   PAGEPR2             NO, DONT INCR FRAME COUNT
         LA    R14,1(0,R14)        ADD 1 TO FRAME COUNT
         LA    R2,1
         SPACE 3
PAGEPR2  LA    R4,16(0,R4)         NEXT PFT
         BCT   R5,PAGEPR1          PROCESS NEXT
         SPACE 3
PAGEPR3  MVC   OUTMSG+4(5),=CL5'STOR='
         SLL   R14,2               CHG FRAMES TO K
         CVD   R14,DOUBLE          CONVERT TO DECIMAL
         MVC   OUTMSG+9(7),=X'402020202120D2'
         ED    OUTMSG+9(6),DOUBLE+5
         BR    R11
         EJECT
         USING *,R15
STAEXIT  CH    R0,=H'12'           SDWA GOTTEN
         BE    STAEXIT1            NO, FORCE RETURN
         L     R2,=A(STAERTRY)     LOAD RETRY ADDR
         SETRP RC=4,RETADDR=(2),FRESDWA=YES,DUMP=NO
         SPACE 3
STAEXIT1 L     R0,=A(STAERTRY)     LOAD RETRY ADDR
         LA    R15,4
         BR    R14
         DROP  R15
         SPACE 3
         USING *,R15
STAERTRY L     R12,=A(CSCGA03D)    LOAD ENTRY POINT ADDR
         LR    R13,R1              RELOAD WORK AREA ADDR
         DROP  R15
         LA    R1,STAEMSG          ADDRESSING ERROR
         L     R2,XSASAVE          RELOAD XSA ADDR
         LA    R11,RETURN          LOAD RET ADDR
         EJECT
MSGRTN   SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         MVI   JOBMSG,C' '
         MVC   JOBMSG+1(79),JOBMSG
         BR    R11
         SPACE 3
RETURN   CLI   WJOB1,C' '          ANY OUTPUT
         BE    RETURN1             NO
         LA    R1,WTOLIST
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         SPACE 1
RETURN1  ESTAE 0
         L     R0,SIZE             LOAD GETMAIN SIZE AND SUBPOOL
         LR    R1,R13              LOAD GETMAIN AREA ADDR
         L     R2,SAVRET           RETURN ADDR
         FREEMAIN R,LV=(0),A=(1)
         MODESET KEY=NZERO,MODE=PROB
         SR    R15,R15
         LR    R14,R2
         BR    R14
         EJECT
         LTORG
         EJECT
         DS    0F
SIZE     DC    X'F1',AL3(WORKEND-WORKSTRT)
         SPACE 3
         DS    0F
STAEMSG  DC    X'00540100'
         DC    CL80'ERROR ENCOUNTERED IN CONTROL BLOCKS, RETRY COMMAND'
         SPACE 3
         DS    0F
WAITMSG  DC    X'00540100'
         DC    31C'-',CL18'   JOB  WAITING   ',31C'-'
         SPACE 3
         DS    0F
SEPRMSG  DC    X'00540100'
         DC    33C'-',CL14'   JOB  I/O   ',33C'-'
         SPACE 3
UCBNRDY  DC    CL38'XXX XXXXXX   NOT READY  FOR XXXXX SEC'
UCBBUSY  DC    CL38'XXX XXXXXX  XXX%) XXX% BUSY XXXXX SEC'
         SPACE 3
PAGGRAPH DC    C'0=1=2=3=4=5=6=7=8==10========15========20========='
PCTLINE  DC    CL51'0=========1=========2=========3=========4========='
         SPACE 3
SRMOVLY  DS    0CL84
         DC    XL4'00540100'
         DC    CL5'TSO-',CL10' '
         DC    CL6'LGCP-',CL7' '
         DC    CL6'AVCP-',CL7' '
         DC    CL6'AVPG-',CL7' '
         DC    CL7'AVUIC-',CL7' '
         DC    CL6'ASMQ-',CL6' '
         SPACE 3
SRCTAB   DC    CL12' '
         DC    CL12'SWAP TERMOUT'
         DC    CL12'SWAP TERMIN '
         DC    CL12'SWAP LONGWT '
         DC    CL12'SWAP AUXSTOR'
         DC    CL12'SWAP REALSTR'
         DC    CL12'SWAP DETWAIT'
         DC    CL12'SWAP REQUEST'
         DC    CL12'SWAP ENQEXC '
         DC    CL12'SWAP WORKEXC'
         DC    CL12'SWAP UNILATR'
         DC    CL12'SWAP TRANSIT'
         DC    CL12'SWAP LOGICAL'
         DC    CL12'SWAP LG FAIL'
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*                                                                     *
*        THRESHOLD VALUES FOR ALL DISPLAY LIMITS                      *
*                                                                     *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 5
         DS    0D
THRINTVL DC    CL8'00000020'       DEVICE MONITOR STIMER
THRSTIMR DC    F'50'               NO. OF STIMERS
THRTSOPG DC    F'13'               TSO PERFORMANCE GROUP
THRSWAP  DC    F'01'               HIGH SWAP COUNT THRESHOLD
THRFRAME DC    F'001'              HIGH FRAME USE LIMIT
THRFRMTM DC    F'05'               HIGH FRAME USE TIME THRESHOLD
THRABEND DC    F'05'               JOB ABENDING TIME THRESHOLD
THRLOOPP DC    F'05'               LOOP CPU PERCENT THRESHOLD
THRLOOPT DC    F'15'               LOOP TIME THRESHOLD
THRCPULP DC    F'01'               EXCESS JOB CPU PERCENT THRESHOLD
THRCPULT DC    F'05'               EXCESS JOB CPU TIME THRESHOLD
THRSWPWT DC    F'05'               SWAP WAIT TIME THRESHOLD
THRREPWT DC    F'05'               REPLY WAIT TIME THRESHOLD
THRALCWT DC    F'05'               ALLOCATION WAIT TIME THRESHOLD
THRUCBNR DC    F'05'               DEVICE NOT READY THRESHOLD  (DASD)
THRUCBBS DC    F'05'               DEVICE BUSY THRESHOLD       (DASD)
THRUCBLM DC    F'01'               DEVICE BUSY LIMIT           (DASD)
         EJECT
WORK     DSECT
WORKSTRT DS    0D
SAVRET   DS    18F
SAVEREGS DS    18F
ACTREGS  DS    18F
DOUBLE   DS    2F
DOUBLEX  DS    2F
DOUBLEY  DS    2F
MAJOR    DS    2F
NUMCHK   DS    2F
PARM     DS    F
WAITSW   DS    F
SAVEBUSY DS    F
ACTSTORG DS    F
ACTCPU   DS    F
ACTCPUH  DS    F
QIOASID  DS    F
XSASAVE  DS    F
PFTREGS  DS    2F
SAVETIM1 DS    F
SAVETIM2 DS    F
SAVETIM3 DS    F
SAVETIM4 DS    F
CURRWAIT DS    F
         SPACE 2
UCBDMSAV DS    4F
UCBDMLOW DS    F
UCBDMCUR DS    F
         SPACE 3
         DS    0F
ACTLIST1 DS    F
ACTMSG1  DS    0CL80
ACTJNAME DS    CL8
         DS    CL1
ACTSNAME DS    CL8
         DS    CL2
         DS    CL5
PCT1     DS    CL7
         DS    CL2
PCTGRPH1 DS    CL47
         SPACE 3
         DS    0F
ACTLIST2 DS    F
ACTMSG2  DS    0CL80
         DS    CL24
PCT2     DS    CL7
         DS    CL2
PCTGRPH2 DS    CL47
         SPACE 3
         DS    0F
OUTMSG   DS    F
FRMMSG   DS    CL80
         SPACE 3
         DS    0F
WTOLIST  DS    F
JOBMSG   DS    0CL80
WJOB1    DS    CL8
         DS    CL2
WMSG1    DS    CL15
         DS    CL1
WRSN1    DS    CL12
         DS    CL4
WJOB2    DS    CL8
         DS    CL2
WMSG2    DS    CL15
         DS    CL1
WRSN2    DS    CL12
         SPACE 3
ESTAELST DS    4F
WORKEND  DS    0F
         EJECT
JOBTABLE DSECT
         DS    5F
UCBTAB   DS    100CL20
UCBTABND DS    F
JOBNAME  DS    CL8
JOBSTEP  DS    CL8
JOBASID  DS    H
JOBFLAG  DS    H
JOBTIME  DS    F
JOBCPUT  DS    F
JOBINTT  DS    F
JOBEXCP  DS    F
JOBSIOCT DS    F
JOBSIOPR DS    F
JOBLOOP  DS    F
JOBCPUL  DS    F
JOBINTL  DS    F
JOBWAIT  DS    F
JOBFRAME DS    F
JOBFRCNT DS    F
JOBABEND DS    F
JOBINTVL DS    F
JOBPREVT DS    F
JOBPAGES DS    6F
         DS    F
         EJECT
XSA      DSECT
XAP      DS    F
XAD      DS    F
XAX      DS    D
XAE      DS    0C
XAR      DS    F
XAN      DS    0C
XAL      DS    F
XAT      DS    D
XAS      DS    D
XAU      DS    C
         DS    C
XAJ      DS    H
XAA      DS    F
         EJECT
         IHASDWA
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
