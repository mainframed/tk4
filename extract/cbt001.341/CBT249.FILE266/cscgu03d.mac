         TITLE 'CSCGU03D -   U  DISK SPACE MAP'
***********************************************************************
***********************************************************************
***                                                                 ***
***                                                                 ***
***                                                                 ***
***                     COMMAND  SUB-SYSTEM                         ***
***                  -------------------------                      ***
***                                                                 ***
***                                                                 ***
***       CSCGU03D -       U  DISK SPACE MAP                        ***
***                                                                 ***
***       VERSION -        1.2                                      ***
***                                                                 ***
***       MVS LEVEL -      MVS/SE TO MVS/SP1.3                      ***
***                                                                 ***
***       UPDATED -        01/10/82  RLL - CHANGE ESTAE PARM LENGTH ***
***                        09/27/82  CBT-AXC ADD 3375 AND 3380      ***
***                                          SUPPORT                ***
***                                                                 ***
***********************************************************************
***********************************************************************
         EJECT
CSCGU03D CSECT
         LR    R12,R15
         USING CSCGU03D,R12
         L     R0,SIZE             LOAD GETMAIN AREA SIZE AND SUBPOOL
         GETMAIN R,LV=(0)
         LR    R13,R1
         USING WORK,R13
         ST    R14,SAVRET          SAVE RETURN ADDR
         ST    R2,XSASAVE          SAVE XSA ADDR
         USING XSA,R2
         L     R3,XAL
         LA    R3,0(0,R3)
         XC    PARM(8),PARM
         LTR   R3,R3
         BZ    *+10                NO PARM
         MVC   PARM(8),0(R3)
         LR    R10,R13             LOAD SAVE AREA ADDR
         B     ESTAEBYP            BYPASS ESTAE LIST
ESTAEOVL ESTAE STAEXIT,CT,MF=L
ESTAEBYP MVC   ESTAELST(20),ESTAEOVL                  ****(RLL)****
         LA    R1,ESTAELST
         ESTAE PARAM=(10),MF=(E,(1))
         LA    R1,HDR1
         SR    R0,R0
         IC    R0,XAU
         SVC   35
         L     R9,16               .CVT
         L     R9,40(0,R9)         .UCB LOOKUP TABLE
         XC    UCBDMSAV(24),UCBDMSAV
         EJECT
CHEK     BAL   R10,UCBDML#0        GET NEXT UCB ADDR
         LTR   R1,R1               END OF UCBS
         BZ    EOJ                 YES, EXIT
         LR    R4,R1
         CLI   18(R4),X'20'   SEE IF UCB IS FOR DASD
         BNE   CHEK           NO, IGNORE IT
         TM    3(R4),X'80'    IS DEVICE ONLINE
         BZ    CHEK           NO, IGNORE IT
         TM    3(R4),X'50'    PENDING OFFLINE/UNLOAD
         BNZ   CHEK           YES, IGNORE IT
         TM    35(R4),X'80'   MOUNT PENDING
         BNZ   CHEK           YES, IGNORE IT
         CLI   28(R4),X'00'   ANY VOLUME INFORMATION?
         BE    CHEK           NO, VOLUME NOT VERIFIED YET
         CLI   PARM,X'00'     ANY VOLUME PARM
         BE    CHEK2          NO, ALL UNITS
         CLC   PARM(2),=C'D=' DEVICE TYPE
         BE    CHEK2          YES
         CLC   PARM(2),=C'U=' SINGLE UNIT
         BNE   CHEK0          NO
         CLC   PARM+2(3),13(R4)  UNIT MATCH
         BE    CHEK2          YES
         B     CHEK
         SPACE 1
CHEK0    LA    R1,7
         LA    R14,27(0,R4)
         LA    R15,PARM-1
         SPACE 1
CHEK1    BCT   R1,*+8
         B     CHEK2
         LA    R14,1(0,R14)
         LA    R15,1(0,R15)
         CLI   0(R15),X'00'   END OF CHECK
         BE    CHEK2          YES
         CLI   0(R15),X'40'   END OF CHECK
         BE    CHEK2          YES
         CLC   0(1,R14),0(R15)  VOL MATCH
         BE    CHEK1          YES
         B     CHEK
         EJECT
CHEK2    MVC   DTLLNE-4(84),DTLOVL
         MVC   CLASS(6),=CL6'3330-1' INDICATE 3330 MOD 11
         CLI   19(R4),X'0D'   IS IT A MODEL 11 3330?
         BE    CHKSTATS       YES, CHECK STATUS
         MVC   CLASS(6),=CL6'3330' INDICATE A MODEL 1 3330
         CLI   19(R4),X'09'   IS IT A MODEL 1 3330?
         BE    CHKSTATS       YES, CHECK STATUS
         MVC   CLASS(6),=CL6'3350' INDICATE A 3350
         CLI   19(R4),X'0B'   IS IT A 3350?
         BE    CHKSTATS       YES, CHECK STATUS
         MVC   CLASS(6),=CL6'3375' INDICATE A 3375         CBT-AXC
         CLI   19(R4),X'0C'   IS IT A 3375?                CBT-AXC
         BE    CHKSTATS       YES, CHECK STATUS            CBT-AXC
         MVC   CLASS(6),=CL6'3380' INDICATE A 3380         CBT-AXC
         CLI   19(R4),X'0E'   IS IT A 3380?                CBT-AXC
         BE    CHKSTATS       YES, CHECK STATUS            CBT-AXC
         MVC   CLASS(6),=CL6'2314' INDICATE 2314/2319
         CLI   19(R4),X'08'   IS IT A 2314/2319?
         BE    CHKSTATS       YES, CHECK STATUS
         MVC   CLASS(6),=CL6'2305-1' INDICATE A DRUM MODEL 1
         CLI   19(R4),X'06'   IS IT A 2305 MOD 1?
         BE    CHKSTATS       YES, CHECK STATUS
         MVC   CLASS(6),=CL6'2305-2' INDICATE A DRUM MODEL 2
         CLI   19(R4),X'07'   IS IT A MODEL 2 DRUM?
         BE    CHKSTATS       YES, CHECK STATUS
         MVC   CLASS(6),=CL6'MSSC' INDICATE THE MSS CONTROL
         CLI   19(R4),X'42'   IS IT THE MSS?
         BE    CHKSTATS       YES, CHECK STATUS
         MVC   CLASS(6),=CL6' ' UNKNOWN DEVICE TYPE
         SPACE 1
CHKSTATS TM    17(R4),X'08'   IS THIS A VIRTUAL VOLUME?
         BZ    NOTVIRT        NO, CONTINUE
         MVI   CLASS+4,C'V'  INDICATE VIRTUAL DEVICE
         SPACE 1
NOTVIRT  CLC   PARM(2),=C'D=' DEVTYPE CHECK
         BNE   NOTVIRT1       NO
         CLC   CLASS(6),PARM+2  DEV MATCH
         BNE   CHEK           NO
         SPACE 1
NOTVIRT1 MVI   STATUS,C'O'    INDICATE DEVICE UNALLOCATED
         TM    3(R4),X'08'    IS IT ALLOCATED
         BNO   *+8            YES, DONT RESET STATUS
         MVI   STATUS,C'A'    NO, INDICATE DEVICE ALLOCATED
         MVC   ATTR(3),=C'PRV'   INDICATE PRIVATE
         TM    34(R4),X'10'   IS IT PRIVATE
         BO    DOSVC          YES, CONTINUE
         MVC   ATTR(3),=C'PUB'   INDICATE PUBLIC
         TM    34(R4),X'08'   IS IT PUBLIC
         BO    DOSVC          YES, CONTINUE
         MVC   ATTR(3),=C'STG'   INDICATE STORAGE
         TM    34(R4),X'04'   IS IT STORAGE
         BO    DOSVC          YES, CONTINUE
         MVC   ATTR(3),=C'   '   CLEAR INDICATOR
         SPACE 1
DOSVC    LA    0,0(0,R4)      LOAD PNTR TO UCB INTO REG 0
         LA    R1,MSGAREA     LOAD PNTR TO MSGAREA INTO REG 1
         SVC   78             GET DATA FOR THIS DASD
         LTR   R15,R15        TEST REG 15 FOR ZERO
         BNZ   CHEK           ERROR, CHECK NEXT DEVICE
         EJECT
CNTNU    MVC   VOLUME(6),28(R4)  MOVE VOLUME SERIAL NUMBER
         MVC   ADDR(3),13(R4)    MOVE DEVICE ADDRESS
         ICM   R11,1,35(R4)   OPEN DCBS
         N     R11,=X'0000007F' TURN OFF UCBMOUNT BIT, IF ON
         CVD   R11,DBWRD      CHANGE TO PACKED DECIMAL
         MVC   DCBS(6),=X'402020202120'
         ED    DCBS(6),DBWRD+5  MOVE TO DETAIL LINE
         ICM   R11,1,38(R4)   NUMBER OF CURRENT USERS
         CVD   R11,DBWRD      CHANGE TO PACKED DECIMAL
         MVC   USRS(6),=X'402020202120'
         ED    USRS(6),DBWRD+5  MOVE TO DETAIL LINE
         PACK  DBWRD(8),FREECYL(4)
         MVC   DTLCYL(6),=X'402020202120'
         ED    DTLCYL(6),DBWRD+5
         PACK  DBWRD(8),FREETRK(4)
         MVC   DTLTRK(6),=X'402020202120'
         ED    DTLTRK(6),DBWRD+5
         PACK  DBWRD(8),FREEXTNT(4)
         MVC   DTLEXT(4),=X'40202120'
         ED    DTLEXT(4),DBWRD+6
         PACK  DBWRD(8),CONTGCYL(4)
         MVC   DTLCCY(6),=X'402020202120'
         ED    DTLCCY(6),DBWRD+5
         PACK  DBWRD(8),CONTGTRK(4)
         MVC   DTLCTR(6),=X'402020202120'
         ED    DTLCTR(6),DBWRD+5
         LA    R1,DTLLNE-4
         SR    R0,R0
         IC    R0,XAU
         SVC   35
         B     CHEK           CONTINUE
         SPACE 1
EOJ      ESTAE 0                                      ****(RLL)****
         L     R0,SIZE             LOAD GETMAIN SIZE AND SUBPOOL
         LR    R1,R13              LOAD GETMAIN AREA ADDR
         L     R14,SAVRET          RETURN ADDR
         FREEMAIN R,LV=(0),A=(1)
         SR    R15,R15
         BR    R14
         EJECT
UCBDML#0 ST    R8,UCBDMSAV         .SAVE WORK REG 1
         ST    R10,UCBDMSAV+8      .SAVE WORK REG 3
         ST    R11,UCBDMSAV+12     .SAVE WORK REG 4
         L     R8,UCBDMLOW         .SET SEARCH ARGUMENT
         SPACE 1
UCBDML#1 LA    R8,1(0,R8)          .NEXT UNIT ADDR POSSIBLE
         L     R10,=X'0000FFFF'    .SET MAX NEXT LEAST HIGH
         SPACE 1
UCBDML#2 CLC   0(2,R9),=X'FFFF'    .END OF TABLE
         BE    UCBDMOUT            .YES, GO PROCESS
         SR    R1,R1
         ICM   R1,3,0(R9)          .LOAD UCB ADDR
         LTR   R1,R1               .ZERO ADDR
         BNZ   UCBDML#4            .NO, CONTINUE
         SPACE 1
UCBDML#3 LA    R9,2(0,R9)          .NEXT UCB LOOKUP TABLE ENTRY
         B     UCBDML#2
         SPACE 1
UCBDML#4 BAL   R11,UCBDMCNV        .CONVERT UNIT ADDR TO HEX
         CR    R1,R8               .UNIT EQUAL
         BL    UCBDML#3            .LOW NOT EQUAL, NEXT UCB
         LR    R10,R1              .SET NEXT LEAST HIGH UNIT ADDR
         MVC   UCBDMCUR+2(2),0(R9) .SET NEXT LEAST HIGH UCB ADDR
         B     UCBDMOUT            .GO PROCESS
         EJECT
UCBDMCNV SR    R14,R14
         SR    R15,R15
         IC    R15,13(0,R1)        .UNIT ADDR DIGIT
         TM    13(R1),X'F0'        .NUMERIC
         BO    *+8                 .YES, BYPASS VALUE ADJUST
         LA    R15,9(0,R15)        .SET VALUE TO COVER A-F
         SLL   R15,28              .SHIFT OUT ALL BUT PERTINENT
         SLDL  R14,4               .INSERT INTO RESULTS REGISTER
         IC    R15,14(0,R1)        .UNIT ADDR DIGIT
         TM    14(R1),X'F0'        .NUMERIC
         BO    *+8                 .YES, BYPASS VALUE ADJUST
         LA    R15,9(0,R15)        .SET VALUE TO COVER A-F
         SLL   R15,28              .SHIFT OUT ALL BUT PERTINENT
         SLDL  R14,4               .INSERT INTO RESULTS REGISTER
         IC    R15,15(0,R1)        .UNIT ADDR DIGIT
         TM    15(R1),X'F0'        .NUMERIC
         BO    *+8                 .YES, BYPASS VALUE ADJUST
         LA    R15,9(0,R15)        .SET VALUE TO COVER A-F
         SLL   R15,28              .SHIFT OUT ALL BUT PERTINENT
         SLDL  R14,4               .INSERT INTO RESULTS REGISTER
         LR    R1,R14              .SET RESULTS REG
         BR    R11
         SPACE 3
UCBDMOUT C     R10,=X'0000FFFF'    .ALL DONE
         BE    UCBDMEX             .YES
         ST    R10,UCBDMLOW        .NEXT LOW UNIT ADDR
         L     R1,UCBDMCUR         .LOAD UCB ADDR FOR FOUND UNIT
         B     UCBDMCON            .CONTINUE
         SPACE 1
UCBDMEX  SR    R1,R1               .CLEAR UCB ADDR REGISTER
         L     R8,UCBDMSAV         .RELOAD WORK REG 1
         L     R10,UCBDMSAV+8      .RELOAD WORK REG 3
         L     R11,UCBDMSAV+12     .RELOAD WORK REG 4
         B     UCBDMRET            .END OF UCBS
         SPACE 1
UCBDMCON L     R8,UCBDMSAV         .RELOAD WORK REG 1
         L     R10,UCBDMSAV+8      .RELOAD WORK REG 3
         L     R11,UCBDMSAV+12     .RELOAD WORK REG 4
         SPACE 1
UCBDMRET EQU   *
         BR    R10
         EJECT
         USING *,R15
STAEXIT  CH    R0,=H'12'           SDWA GOTTEN
         BE    STAEXIT1            NO, FORCE RETURN
         L     R2,=A(STAERTRY)     LOAD RETRY ADDR
         SETRP RC=4,RETADDR=(2),FRESDWA=YES,DUMP=NO
         SPACE 3
STAEXIT1 L     R0,=A(STAERTRY)     LOAD RETRY ADDR
         LA    R15,4
         BR    R14
         DROP  R15
         SPACE 3
         USING *,R15
STAERTRY L     R12,=A(CSCGU03D)    LOAD ENTRY POINT ADDR
         LR    R13,R1              RELOAD WORK AREA ADDR
         DROP  R15
         LA    R1,STAEMSG          ADDRESSING ERROR
         L     R2,XSASAVE          RELOAD XSA ADDR
         SR    R0,R0
         IC    R0,XAU
         SVC   35
         B     EOJ
         EJECT
         LTORG
         SPACE 3
         DS    0F
SIZE     DC    X'F1',AL3(WORKEND-WORKSTRT)
         SPACE 3
         DS    0F
STAEMSG  DC    X'00360100'
         DC    CL50'ERROR ENCOUNTERED IN CONTROL BLOCKS, RETRY COMMAND'
         SPACE 3
HDR1     DC    X'00540100'
         DC    CL40'UNIT  DEVICE   STATUS    VOLSER   DCBS  '
         DC    CL40' USERS    CYLS  TRKS  EXT  CTGCYL CTGTRK'
         SPACE 3
DTLOVL   DC    X'00540100'
         DC    CL17' ',CL5'(   )',CL58' '
         EJECT
WORK     DSECT
WORKSTRT DS    0D
SAVRET   DS    18F
DOUBLE   DS    2F
DBWRD    DS    2F
XSASAVE  DS    F
PARM     DS    2F
         SPACE 3
UCBDMSAV DS    4F
UCBDMLOW DS    F
UCBDMCUR DS    F
         SPACE 3
DTLPREFX DS    F
DTLLNE   DS    0CL80
ADDR     DS    CL6            DEVICE ADDRESS
CLASS    DS    CL9            DEVICE TYPE (CLASS)
STATUS   DS    CL3            STATUS (OPEN/ALLOCATED)
ATTR     DS    CL7            MOUNT ATTRIBUTE
VOLUME   DS    CL7            VOLUME SERIAL NUMBER
DCBS     DS    CL8            OPEN DCBS
USRS     DS    CL8            OPEN DCBS
DTLCYL   DS    CL6            TOTAL FREE CYLINDERS
DTLTRK   DS    CL7            TOTAL FREE TRACKS
DTLEXT   DS    CL6            NUMBER OF EXTENTS
DTLCCY   DS    CL7            LARGEST CONTIG CYLS
DTLCTR   DS    CL6            LARGEST CONTIG ADDITIONAL TRACKS
         SPACE 3
*
*        THE FOLLOWING IS THE SVC 78 PARAMETER LIST
*
MSGAREA  DS    0CL30
         DS    CL6            CONSTANT - 'SPACE='
FREECYL  DS    CL4            TOTAL NO. FREE CYLINDERS
         DS    CL1            CONSTANT - ','
FREETRK  DS    CL4            TOTAL NO. FREE TRACKS OUTSIDE CYLS
         DS    CL1            CONSTANT - ','
FREEXTNT DS    CL4            TOTAL NO. FREE EXTENTS
         DS    CL1            CONSTANT - '/'
CONTGCYL DS    CL4            LARGEST CONTIGUOUS FREE AREA
         DS    CL1             IN CYLS AND TRKS
CONTGTRK DS    CL4
         SPACE 3
ESTAELST DS    5F                                     ****(RLL)****
         SPACE 3
WORKEND  DS    0F
         EJECT
XSA      DSECT
XAP      DS    F
XAD      DS    F
XAX      DS    D
XAE      DS    0C
XAR      DS    F
XAN      DS    0C
XAL      DS    F
XAT      DS    D
XAS      DS    D
XAU      DS    C
         DS    C
XAJ      DS    H
XAA      DS    F
         EJECT
         IHASDWA
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
