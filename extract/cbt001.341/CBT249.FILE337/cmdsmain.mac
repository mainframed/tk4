*          DATA SET XC00034    AT LEVEL 007 AS OF 01/22/82
CMDSMAIN START 0                   START THE MAIN MAN
         TITLE '***** C O M M A N D   S U B S Y S T E M  -  M A I N   SX
                Y S T E M   M O D U L E  *****'
         SAVE  (14,12),,*          SAVE HIS REGS
         LR    R10,R15             SET UP A BASE
         USING CMDSMAIN,R10        THEN USE IT
         L     R0,SAVEGM           GET THE SP & LGTH OF REGSAVE AREA
         GETMAIN  R,LV=(R0)        GO GET THE MAIN
         LTR   R15,R15             TEST FOR NO MAIN
         BNZ   NOMAIN              NO MAIN, GET OUT
         ST    R1,8(,R13)          SAVE HIS IN OURS
         ST    R13,4(,R1)          SAVE OURS IN HIS
         LR    R13,R1              POINT R13 TO OUR SAVE AREA
         LA    R6,72(,R13)         POINT R6 TO ESTAE SAVE AREA
         ESTAE ELBOMBO,RECORD=YES,SVEAREA=(R6)  SET UP ERROR ENVIRON
TOP      L     R2,16               ... CVT
         L     R2,X'128'(,R2)      ... JESCT
         L     R2,X'18'(,R2)       ... 1ST SSCVT
SSCVTLP  CLC   8(4,R2),=C'CMDS'    TEST FOR COMMAND SUB-SYS
         BC    8,FOUND             BR WHEN FOUND
         L     R2,4(,R2)           ELSE POINT TO NEXT SSCVT
         LTR   R2,R2               TEST FOR END OF THE ROAD
         BE    NOSBSYS             BR IF NO SUS-SYS EXISTS
         B     SSCVTLP             ELSE LOOP TO NEXT ENTRY
FOUND    LR    R5,R2               R5 POINTS TO THE SSCVT
         L     R6,20(,R5)          GET POINTER TO MESSAGE LIST
         LA    R11,20              SET AN ENTRY COUNTER
LOOKLOOP TM    0(R6),255           TEST FOR AN ACTIVE ENTRY
         BO    FOUND1              BR IF FOUND
         LA    R6,4(,R6)           IF NOT, POINT TO THE NEXT
         BCT   R11,LOOKLOOP        AND LOOP 'TIL END
WAIT     L     R2,16(,R5)          GET THE SSVT POINTER
         L     R2,X'114'(,R2)      LOAD THE ECB POINTER
         NI    0(R2),0             ZAP THE ECB COMP. BYTE
         WAIT  ECB=(R2)            WAIT FOR THE ECB TO BE POSTED
         B     TOP                 AND GO TO TOP WHEN DONE
         SPACE 2
FOUND1   NI    0(R6),0             FREE THE SLOT
         L     R2,0(,R6)           LOAD THE MESSAGE POINTER
         LA    R7,8(,R2)           POINT TO THE REAL MESSAGE
         CLI   0(R7),C':'          TEST FOR CORRECT MESSAGE ID
         BNE   GOOF                BR IF SOMEBODY GOFFED
         L     R8,16(,R5)          POINT TO THE SSVT
         MVC   X'11C'(2,R8),0(R7)  SAVE THIS COMMAND
         LR    R8,R2               POINT TO THE MESSAGE
         LA    R3,LIST             POINT TO THE 'ACCEPTABLE' LIST
         LH    R4,NUMBCMDS         GET THE NUMBER OF VALID CMDS
CHARLOOP CLC   1(1,R7),0(R3)       TEST FOR VALID COMMAND
         BE    CHARFND             BR IF FOUND
         LA    R3,2(,R3)           IF NOT, GO TO THE NEXT
         BCT   R4,CHARLOOP         AND LOOP 'TIL DONE
         B     GOOF2               BR IF COMMAND NOT VALID
CHARFND  MVC   76(8,R13),BASIC     MOVE IN THE BASIC MESSAGE
         MVC   80(1,R13),1(R3)     MOVE IN THE CODE CHARACTER
         LA    R9,76(,R13)         POINT TO THE MODULE NAME
         ST    R8,SAVER8           ... SAVE
         ST    R10,SAVER10         ... THE RELEVANT
         ST    R13,SAVER13         ... RETRY REGS
         LINK  EPLOC=(R9)          LINK TO PROPER MODULE
STAERET  LR    R6,R15              SAVE POSSIBLE 'END' CODE
         L     R0,SPENT            GET THE MSG BFR SP & LTH
         FREEMAIN  R,LV=(R0),A=(R8)  FREE THE MESSAGE AREA
         C     R6,=C' END'         SEE IF 'END' RETURNED
         BE    ENDIT               IF SO, GO END THIS MESS
         B     TOP                 IF NOT, GO CHECK FOR MORE MSGS
         EJECT
ENDIT    L     R2,16               ... CVT
         L     R2,X'128'(,R2)      ... JESCT
         L     R2,X'18'(,R2)       ... 1ST SSCVT
ENDLP    CLC   8(4,R2),=C'CMDS'    TEST FOR CMDSBSYS
         BC    8,FOUNDIT           BR WHEN FOUND
         L     R2,4(,R2)           ELSE POINT TO THE NEXT ENTRY
         B     ENDLP               AND LOOP 'TIL FOUND
FOUNDIT  L     R5,16(,R2)          LOAD ADDRESS OF SSVT
         MVC   16(4,R2),=F'0'      TURN OFF THE SUB-SYSTEM
         L     R0,SP1              GET THE S.P. & LENGTH
         FREEMAIN  R,LV=(R0),A=(R5)  FREE UP THE SSVT AREA
         WTO   'CMDSBSYS --- COMMAND SUB-SYSTEM TERMINATED AT REQUEST OX
               F THE OPERATOR.',ROUTCDE=(2),DESC=(4)
ENDITUP  LR    R2,R13              SAVE THE SAVE AREA POINTER
         L     R13,4(,R13)         RELOAD CALLERS R13
         L     R0,SAVEGM           LOAD THE S.P. & LGTH OF REGSAVE AREA
         FREEMAIN  R,LV=(R0),A=(R2)  FREE THE REGSAVE AREA
         LM    R14,R12,12(R13)     RELOAD THE CALLER'S REGS
         SR    R15,R15             SET THE C.C.
         BR    14                  AND RETURN TO CALLER
         EJECT
         DROP  R10                 DROP THE MAIN REG
ELBOMBO  STM   R14,R6,12(R13)      SAVE SOME REGS
         LR    R6,R15              SAVE A BASE REG
         USING ELBOMBO,R6          AND THEN USE IT
         CH    R0,=H'12'           TEST FOR NO SDWA
         BE    NOSDWA              BR IF NONE
         LR    R5,R1               POINT R5 TO THE SDWA
         USING SDWA,R5             THEN USE IT
         MVO   56(4,R13),SDWANXT1  GET THE FAILING ADDRESS
         OI    59(R13),X'0F'       INSURE CORRECT SIGN
         UNPK  48(6,R13),56(4,R13)  UNPK THE ADDRESS
         TR    48(6,R13),TRT       TRANSLATE
         MVC   ABNDWTO+85(6),48(R13)  MOVE IN THE FAILING ADDRESS
         CLC   SDWAINC1,=H'13'     TEST FOR PLAIN OL' ABEND
         BE    JUSTDOIT            BR IF SVC 13
         CLC   SDWAINC1,=H'17'     TEST FOR PAGE/SEGMENT FAULT
         BH    JUSTDOIT            BR IF SYS FAILURE (NOT 0CX)
         MVC   ABNDWTO+122(2),=C'0C'  INDICATE 0CX FAILURE
         CLC   SDWAINC1,=H'16'     TEST FOR PAGE/SEGMENT FAULT
         BL    OCOTHER             GO DO 0CX WHERE X < 10
         MVI   ABNDWTO+124,C'4'    MAKE IT A 0C4
         B     FINDCMND            THEN GO FIND THE FAILING COMMAND
OCOTHER  MVC   ABNDWTO+124(1),SDWAINC1+1  MOVE IN THE CODE
         OI    ABNDWTO+124,X'F0'   INSURE PRINTABLE
         B     FINDCMND            THEN GO FIND THE COMMAND
JUSTDOIT SR    R2,R2               ZAP A REG
         ICM   R2,3,SDWACMPC       GET THE COMPLETION CODE
         SRL   R2,4                OUT WITH THE BAD STUFF
         LTR   R2,R2               TEST FOR USER ABEND
         BZ    USER                BR IF USER CODE
STCC     SLL   R2,4                SHIFT INTO POSITION
         ST    R2,TEMP             AND SAVE THE CODE
SHORTABN OI    TEMP+3,15           INSURE THE SIGN
         UNPK  48(4,R13),TEMP      UNPACK THE ABEND CODE
         TR    48(4,R13),TRT       AND THEN TRANSLATE IT
         MVC   ABNDWTO+122(3),49(R13)  MOVE CODE TO MESSAGE
         B     FINDCMND            AND GO ON
USER     ICM   R2,3,SDWACMPC+1     GET THE USER ABEND CODE
         MVI   ABNDWTO+121,C'U'    INDICATE USER
         B     STCC                AND GO DO THE OTHER STUFF
FINDCMND L     R2,X'10'            ... CVT
         L     R2,X'128'(,R2)      ... JESCT
         L     R2,X'18'(,R2)       ... 1ST SSCVT
ABNDLP1  CLC   8(4,R2),=C'CMDS'    TEST FOR CMDSBSYS
         BE    ABNDFND             BR IF FOUND
         L     R2,4(,R2)           ELSE POINT TO THE NEXT SSCVT
         B     ABNDLP1             AND LOOP 'TIL FOUND
ABNDFND  L     R2,16(,R2)          GET THE SSVT POINTER
         MVC   ABNDWTO+160(2),X'11C'(R2)  MOVE IN THE COMMAND
ABNDWTO  WTO   ('CMDSBSYS --- FAILURE IN CMDSMAIN :'),('CMDSBSYS --- FAX
               ILING ADDRESS = XXXXXX'),('CMDSBSYS --- ABEND CODE = SXXX
               X'),('CMDSBSYS --- FAILING COMMAND = XX'),ROUTCDE=(2),  X
               DESC=(4)
         SPACE 1
*******************************************************************
*        NOW TAKE A DUMP TO SEE 'QUE PASA'                        *
*******************************************************************
         SPACE 1
         SDUMP HDR='CMDSBSYS --- COMMAND PROCESSOR DUMP',              X
               SDATA=(NUC,CSA,SQA,RGN,LSQA,LPA),QUIESCE=YES
         SPACE 1
******************************************************************
*        TELL OPERATOR HOW TO HANDLE THE ABEND.                  *
******************************************************************
         SPACE 1
         WTO   ('CMDSBSYS --- A COMMAND SUB-SYSTEM COMMAND HAS FAILED.'X
               ),('CMDSBSYS --- PLEASE NOTE THE TIME + NOTIFY JIM WHEATX
               ON !!!!!!'),ROUTCDE=(2),DESC=(4)
         SPACE 1
         SETRP WKAREA=(R5),RC=4,RETADDR=STAERETA,RETREGS=YES,RUB=RUB
         SPACE 1
         LM    R14,R6,12(R13)      RESTORE THE REGS
         BR    R14                 AND RETURN TO SYSTEM
         SPACE 1
NOSDWA   SRL   R1,12               SHIFT THE COND CODE
         ST    R1,48(,R13)         THEN SAVE IT
         MVO   56(2,R13),48(2,R13) OFFSET THE CODE
         B     SHORTABN            AND GO DO THE SHORT ABEND
         SPACE 1
         DROP  R6                  DROP THE ABEND REG
         USING CMDSMAIN,R10        RE-ESTABLICH THE BASE REG
         SPACE 3
STAERETA B     STAERET             BR TO RETRY
         EJECT
NOMAIN   WTO   'CMDSBSYS --- UNABLE TO GETMAIN A SAVE AREA; CMDSBSYS ISX
                DEAD',ROUTCDE=(2),DESC=(4)
         LM    R14,R12,12(R13)     RESTORE THE REGS
         BR    R14                 AND RETURN TO CALLER
         SPACE 2
NOSBSYS  WTO   'CMDSBSYS --- COMMAND SUB-SYSTEM NOT FOUND; UNABLE TO STX
               ART',ROUTCDE=(2),DESC=(4)
         B     ENDITUP
         SPACE 2
GOOF     WTO   'CMDSBSYS --- NON : COMMAND FOUND BY SUB-SYSTEM; IGNOREDX
                ',ROUTCDE=(2),DESC=(4)
         B     WAIT                AND GO WAIT FOR ANOTHER MESSAGE
         SPACE 2
GOOF2    WTO   'CMDSBSYS --- INVALID COMMAND; TRY AGAIN',ROUTCDE=(2),  X
               DESC=(4)
         B     WAIT                AND GO WAIT
         EJECT
         DS    0F
SAVEGM   DC    AL1(241)            S.P. 241
         DC    AL3(144)            LENGTH
SP1      DC    AL1(241)            S.P. 241
         DC    AL3(512)            SSVT LENGTH
SPENT    DC    AL1(241)            S.P. 241
         DC    AL3(120)            MESSAGE LENGTH
TEMP     DC    F'0'                TEMPORARY DATA CELL
         DC    H'0'                FILLER
RUB      DC    X'00A4'             RESTORE REGS R8,R10, + R13
SAVER8   DC    F'0'                REG 8 SAVE AREA
SAVER10  DC    F'0'                REG 10 SAVE AREA
SAVER13  DC    F'0'                REG 13 SAVE AREA
TRT      EQU   *-240
         DC    C'0123456789ABCDEF' ABND TRANSLATE TABLE
         SPACE 2
*********************************************************************
*                                                                   *
*        IN CASE YOU ARE WONDERING WHY THE MICKEY MOUSE SCHEME      *
*        FOR DETERMINING THE MODULE CALLED, THE MODULES DID NOT     *
*        ALWAYS CORRESPOND; E.G. :C WAS IEESK03D, :A WAS IEESE03D,  *
*        :H WAS IEES803D, ETC.                                      *
*                                                                   *
*********************************************************************
         SPACE 2
NUMBCMDS DC    H'35'               NO. OF VALID CMDS (08/28/80)
LIST     DC    C'AA'               :A = IEESA03D (EXPANDED D A)
         DC    C'BG'               :B = IEESB03D (DUMMIED OUT 8/28/80)
         DC    C'CC'               :C = IEESC03D (CLEAR DMP D.S.)
         DC    C'DG'               :D = IEESD03D (DUMMIED OUT 6/27/80)
         DC    C'EG'               :E = IEESE03D (DUMMIED OUT 8/28/80)
         DC    C'FF'               :F = IEESF03D (DSPLY PGE FRAMES)
         DC    C'GG'               :G = IEESG03D (IND. SYS  ACTIVE)
         DC    C'HH'               :H = IEESH03D (H E L P)
         DC    C'II'               :I = IEESI03D (DSPLY I)
         DC    C'JJ'               :J = IEESJ03D (DISPLAY JOBS)
         DC    C'KK'               :K = IEESK03D (RCT VALUES)
         DC    C'LL'               :L = IEESL03D (TSO LINES)
         DC    C'MM'               :M = IEESM03D (MONITOR A JOB)
         DC    C'NN'               :N = IEESN03D (DISPLAY ENQ'S)
         DC    C'OO'               :O = IEESO03D (I/O PEND/ALLOC QUE)
         DC    C'PP'               :P = IEESP03D (PAGES)
         DC    C'QQ'               :Q = IEESQ03D (ENQ/CONFL & RESVS)
         DC    C'RR'               :R = IEESR03D (MOUNTS)
         DC    C'SS'               :S = IEESS03D (LPA MODULES)
         DC    C'TT'               :T = IEEST03D (CPU DISPLAY)
         DC    C'UG'               :U = IEESU03D (DUMMIED OUT 8/28/80)
         DC    C'VV'               :V = IEESV03D (DISPLAY VOLUMES)
         DC    C'WG'               :W = IEESW03D (DUMMIED OUT 8/28/80)
         DC    C'XX'               :X = IEESX03D (LCH SEARCH)
         DC    C'YY'               :Y = IEESY03D (FAKE CE/DE)
         DC    C'ZZ'               :Z = IEESZ03D (END CMDSBSYS)
         DC    C'1G'               :1 = IEES103D (DUMMIED OUT 8/28/80)
         DC    C'2G'               :2 = IEES203D (DUMMIED OUT 8/28/80)
         DC    C'3G'               :3 = IEES303D (DUMMIED OUT 8/28/80)
         DC    C'44'               :4 = IEES403D (ZAP CORE)
         DC    C'55'               :5 = IEES503D (CLEAR CSA)
         DC    C'6G'               :6 = IEES603D (DUMMIED OUT 8/28/80)
         DC    C'7G'               :7 = IEES703D (DUMMIED OUT 8/28/80)
         DC    C'8G'               :8 = IEES803D (DUMMIED OUT 8/28/80)
         DC    C'9G'               :9 = IEES903D (DUMMIED OUT 8/28/80)
BASIC    DC    CL8'IEESX03D'       BASIC MODULE FORMAT
         LTORG
         EJECT
         REGS
         EJECT
         IHASDWA
         END
