         TITLE 'T S S O    T S O   C O M M A N D   P R O C E S S O R'
&WTOR    SETC  'YES'                   INCLUDE SUPPORT FOR WTOR REPLY
TSSODOCM CSECT
***********************************************************************
* THIS MODULE WILL PROCESS TSO COMMANDS. IT OBTAINS THE TSO COMMAND   *
* TO BE PROCESSED BY LOOKING THE THE TSSODATD DATA AREA, AND          *
* OBTAINING THE COMMAND BUFFER. IT THEN ATTACHES THE DEFAULT          *
* IBM TERMINAL MONITOR PROGRAM (IKJEFT01) WHICH ACTUALLY PROCESSES    *
* THE COMMAND. CONTROL IS RETURNED AFTER THE ATTACH, AND THE RETURN   *
* CODE INTERROGATED. IF NEEDED, A MESSAGE DISPLAYING THE RETURN CODE  *
* IS ISSUED.                                                          *
*                                                                     *
* NOTE THAT KEY ZERO IS REQUIRED TO ATTACH THE TMP (APF AUTH)         *
*                                                                     *
* THE TSSODOCM MODULE IS ALSO RESPONSABLE FOR SECURITY OF TSSO COMMAND*
* ATTACHED BY THE TMP. IF SECURITY LEVEL IS MEDIAL OR MAXIMAL, THIS   *
* MODULE WILL VERIFY THAT THE USER IS LOGGED ON TO TSSO. IF NOT, THE  *
* COMMAND IS REJECTED.                                                *
*                                                                     *
* IF THE USER IS LOGGED ON, THIS MODULE WILL COPY THE ACEE CREATED    *
* BY THE USER INTO THE ASXBSENV FIELD, ATTACH THE TMP, AND THEN       *
* RESTORE THAT FIELD.                                                 *
*                                                                     *
*                                                                     *
* TSSO 4.3 WILL ALLOW A NOT-LOGGED ON CONSOLE TO ISSUE THE COMMAND    *
* WITH THE DEFAULT TSSO AUTHORITY IF ONE OF THE FOLLOWING ARE TRUE    *
*                                                                     *
* 1) THE CONSOLE IS CONSOLE 0.  (USED BY JES2)                        *
* 2) THE CONSOLE IS A SUBSYSTEM CONSOLE WITH SYSTEM AUTHORITY.        *
* 3) THE SECURITY LEVEL IS SET AT "MINIMAL"                           *
*                                                                     *
***********************************************************************
* NOTE THAT MESSAGE PRODUCED BY THIS MODULE HAVE THE FORM TSSMXXXS    *
* WHERE XXX IS BETWEEN 451 AND 500.                                   *
* LAST MESSAGE NUMBER: 456
***********************************************************************
***********************************************************************
         STM   R14,R12,12(R13)    SAVE CALLERS REGSITERS
         LR    R12,R15            LOAD ENTRY POINT OF TSSO
         USING TSSODOCM,R12       GET ADDRESSIBILITY
         B     EYE1
         COPY  EYECATCH
EYE1     DS    0H
         LR    R8,R1
         GETMAIN R,LV=72           WE NEED STORAGE FOR THE SAVE AREA
         ST    R13,4(R1)          STORE ADDRESS OF CALLERS SAVE AREA
*                                  SAVE AREA
         ST    R1,8(R13)          REMEMBER WHERE THIS CORE IS
         LR    R13,R1             KEEP A COPY IN R13
         GETMAIN R,LV=1024
         LR    R11,R1
         USING DOCMDATD,R11
         L     R9,0(R8)           GET ADDRESSABLE TO DATD.
         USING DATD,R9
         GETCVT (R10)
         USING TSSOCVT,R10        NOTE: CVT DOES NOT EXIST YET...
***********************************************************************
* ACCESS TO THE SECARRAY VARIABLE IS OBTAINED THROUGH THE CVT, BUT IF *
* DOCM IS CALLED VIA INITIALIZATION, THE CVT DOES NOT AS OF YET EXIST.*
* THEREFORE, THE ADDRESS OF DATD MUST BE PASSED AS A PARAMETER...     *
***********************************************************************
         MVC   CMWTO1D(CMWTO1CE-CMWTO1C),CMWTO1C
         MVC   WTO29D(WTO29CE-WTO29C),WTO29C
         XC    SWAPFLAG(4),SWAPFLAG
************************************************************
*                                                          *
* ISSUE A TSO COMMAND BY ATTACHING THE TMP. COMMAND MUST   *
* PREVIOUSLY HAVE BEEN PLACED IN FIELD "TSOCMD" WITH LENGTH*
* IN FIELD TSOCMDL                                         *
************************************************************
ISSUECMD DS    0H
***********************************************************************
* FIRST, WE WILL PERFORM THE SECURITY CHECKS MENTIONED ABOVE          *
*                                                                     *
***********************************************************************
         TM    TSSOPFLG,X'80'           AUTHORTY CHECKING TURNED OFF?
         BO    CMDOK                   YES, ALLOW COMMAND
         CLC   SECLEVEL(4),=CL4'MINI'   MINIMAL SECURITY ?
         BE    CMDOK                   YES, ALLOW COMMAND
         CLC   CURRCONS(4),=XL4'0000'   IS THIS CONSOLE ZERO ?
         BE    CMDOK                    ALLOW CONSOLE ZERO.
***********************************************************************
* CHECK FOR SUBSYSTEM ALLOCATABLE CONSOLE WITH AT LEAST SYSTEM        *
* AUTHORITY.                                                          *
***********************************************************************
         L     R2,16             CVT
         USING CVT,R2
         L     R2,CVTCUCB        GET UCM BASE
         USING UCM,R2
         LM    R3,R5,UCMVEA      GET FIRST, LENGTH AND LAST UCME'S
         DROP  R2
         USING UCMLIST,R3
UCMSLOOP DS    0H
         CLC   CURRCONS+3(1),UCMID    IS THIS THE CONSOLE ?
         BE    UCMFOUND
         BXLE  R3,R4,UCMSLOOP
*
         WTO   'TSSM455S SEVERE ERROR LOCATING UCM BITS-> CONTACT TSSO X
               SUPPORT',DESC=(1,11)
         B     CMDOK
*
UCMFOUND DS    0H
         TM    UCMDISP2,UCMDISPL     SUBSYSTEM ALLOCATABLE CONSOLE ?
         BO    CHKCAUTH
         B     CHKTAUTH              NOT A SS CONSOLE - CHECK USER AUTH
*
CHKCAUTH DS    0H
         TM    UCMAUTHA,X'80'        SYSTEM AUTHORITY FOR CONSOLE ?
         BO    CMDOK                 YUP - ALLOW ANYTHING.
*
         L     R0,CURRCONS
         WTO   'TSSM456E INSUFFUCIENT AUTHORITY TO ISSUE TSSO COMMANDS X
               THROUGH OSCMD INTERFACE',MCSFLAG=(REG0)
*
         MVC   RETCODE(2),=H'8'      INDICATE COMMAND NOT ISSUED.
         B     ENDPROG
         DROP  R3
CHKTAUTH DS    0H
***********************************************************************
* IF WE GET HERE, THE CONSOLE IS NOT A SS CONSOLE, THEREFORE IT MUST  *
* BE A REAL ONE. CHECK IF THE CONSOLE IS LOGGED ON.                   *
***********************************************************************
         L     R8,SECARRAY        GET SECURITY ARRAY
         LTR   R8,R8
         BZ    DOCMLERR           LOGICAL ERROR IN DOCM
         LA    R3,20              MAXIMUM ENTRIES IN TABLE
DOCMLOOP DS    0H
         USING SECENTRY,R8
         TM    SECFLAGS,X'80'     ENTRY IN USE ?
         BNO   NEXTENTR
         CLC   SECCONS(2),CURRCONS+2   IS THIS THE CORRECT CONSOLE
         BE    FNDCONS                 YUP !
         B     NEXTENTR
*
NEXTENTR DS    0H
         LA    R8,SECRLGNT(R8)    TRY NEXT ENTRY
         BCT   R3,DOCMLOOP
*
***********************************************************************
* IF WE COME HERE, WE HAVE DETERMINED THAT THE CONSOLE IS NOT LOGGED  *
* ON TO TSSO...                                                       *
***********************************************************************
         LH    R1,CURRCONS+2      GET CONSOLE FOR MESSAGE
         LA    R10,WORKAREA
         CALL  JCECVTBD
         STCM  R1,B'0011',CMWTO1D+40
         WTO   MF=(E,CMWTO1D)
         MVC   RETCODE(2),=H'8'      INDICATE CONSOLE NOT LOGGED ON
         B     ENDPROG
*
*
FNDCONS  DS    0H
***********************************************************************
* HERE, WE HAVE FOUND THE CORRECT CONSOLE ENTRY. WE WILL NOT PERFORM  *
* THE SECURITY SYSTEM DEPENDENT CODE TO MAKE MVS THINK THAT TSSO IS   *
* THE USER ASSOCICATED WITH THAT SECURITY ENTRY                       *
***********************************************************************
         CLC   SECSYS(4),=CL4'RACF'   ARE WE USING RACF ?
         BE    SECRACF
         CLC   SECSYS(4),=CL4'ACF2'   ARE WE USING ACF2 ?
         BE    SECACF2
         CLC   SECSYS(4),=CL4'TOPS'   ARE WE USING TOP SECRET ?
         BE    SECTOPS
         B     DOCMLERR               LOGICAL ERROR (SIGH)
SECRACF  DS    0H
***********************************************************************
* THE RACF PIECE OF THE PUZZLE IS RELATIVELY CLEAN. SIMPLY SWAP       *
* THE ACEE POINTERS, THEN SWAP THEM BACK WHEN TMP TERMINATES.         *
***********************************************************************
         L     R2,TSSOASXB        GET THE ASXB POINTER
         USING ASXB,R2
         L     R3,SECACEE         PICK UP THE ACEE IN QUESTION
         LTR   R3,R3              JUST TO MAKE SURE
         BZ    DOCMLERR           LOGICAL ERROR HERE...
         MODESET KEY=ZERO         KEY ZERO REQUIRED...
         ST    R3,ASXBSENV        CONSIDER THE ACEE SWAPPED...
         MVC   ASXBUSER(7),SECUSER   AND COPY THE ASXBUSER ID.
         MODESET KEY=NZERO        KEY ZERO REQUIRED...
         OI    SWAPFLAG,X'80'     INDICATE A SWAP TOOK PLACE.
         B     CMDOK              NOW... GO DO THE COMMAND
SECACF2  DS    0H
***********************************************************************
* CODE FOR ACF2 SUPPORT IS REQUIRED HERE...                           *
*                                                                     *
*                                                                     *
***********************************************************************
         WTO   'TSSMACF2 ACF2 SUPPORT IS NOT IN THIS COPY OF TSSO'
         B     DOCMLERR           PROBABLY, A LOGICAL ERROR.
SECTOPS  DS    0H
***********************************************************************
* CODE FOR TOP SECRET SUPPORT IS REQUIRED HERE.                       *
*                                                                     *
*                                                                     *
***********************************************************************
        WTO   'TSSMTOPS TOP SECRET SUPPORT IS NOT IN THIS COPY OF TSSO'
         B     DOCMLERR           PROBABLY, A LOGICAL ERROR.
         DROP  R8                 SECENTRY
*
CMDOK    DS    0H
         MODESET KEY=ZERO
         LA    R1,TSSOPRMP        POINTER TO IKJEFT01 PARM LIST
         OI    0(R1),X'80'        SOMETIMES THEY HAVE SUCH SILLY RULES
         LA    R2,TSSOPRMS        GET ADDRESS OF PARMS
         ST    R2,TSSOPRMP
         XC    TSSOPECB(4),TSSOPECB  WIPE OUT THE ECB
         LA    R6,TMPNAME         HOPE THIS POINTS TO A TMP.
         LA    R7,TSSOPECB        GET REAL ECB
*
         ATTACH EPLOC=(R6),ECB=(R7),SZERO=NO,JSTCB=YES,                X
               SF=(E,ATTACHD)     (PTF1)
         ST    R1,TSSOPTCB        SAVE TCB ADDRESS
*
         WAIT  ECB=TSSOPECB       WAIT FOR TSO TO FINISH
*
         L     R7,540              PSATOLD-PSA
         USING TCB,R7
         L     R7,TCBJSCB          GET JSCB FIELD
         USING IEZJSCB,R7
         L     R7,JSCBACT          MAKE SURE ITS ACTIVE JSCB
         OI    236(R7),X'01'       SET IT BACK ON
***********************************************************************
* THE ABOVE LINE IS NEEDED BECAUSE TSO HAS THIS ANNOYING TENDENCY TO  *
* DE AUTHORIZE THAT WHICH CALLS IT... WE NEED AUTHORIZATION...        *
***********************************************************************
         DROP  R7
*
         L     R1,TSSOPECB           FINE- DETACH IKJEFT01
         C     R1,=X'40000000'       IS EVERYTHING OK WITH TMP ?
         BNE   TMPABEND              RATS !!
         B     ISSUERET
TMPABEND DS    0H
         ST    R10,SAVER10
         LA    R10,DATD
         CALL  JCECVTBH
         L     R10,SAVER10
         STM   R0,R1,WTO29D+44        GET READY TO PRINT MESSAGE
         L     R0,CURRCONS
         WTO   MCSFLAG=(REG0),MF=(E,WTO29D)
         B     ISSUERET
ISSUERET DS    0H
         LA    R1,TSSOPTCB
         DETACH (R1)
         MODESET KEY=NZERO
         XC    RETCODE(2),RETCODE   CLEAR RETURN CODE
EXIT0    DS    0H
***********************************************************************
* NOW, WE MUST SWAP THE ACEE POINTERS BACK...                         *
*                                                                     *
***********************************************************************
         TM    SWAPFLAG,X'80'       DID A SECURITY ID SWAP OCCUR ?
         BNO   ENDPROG              DONT BOTHER RESETTING AUTH.
*
         CLC   SECSYS(4),=CL4'RACF'   RACF SYSTEM ?
         BE    RESTRACF                 YEA !!
         CLC   SECSYS(4),=CL4'ACF2'   ACF2 SYSTEM...
         BE    RESTACF2                 OH WELL...
         CLC   SECSYS(4),=CL4'TOPS'   AINT COMPETITON WONDERFULL.
         BE    RESTTOPS                 YEA !!
         B     DOCMLERR
RESTRACF DS    0H
         L     R2,TSSOASXB
         USING ASXB,R2
         L     R3,TSSOACEE         GET TSSO'S ACEE.
         MODESET KEY=ZERO
         ST    R3,ASXBSENV
         MVC   ASXBUSER(7),TSSORACF+1       RESTORE THE ORIGINAL ID.
         DROP  R2
         MODESET KEY=NZERO
         B     ENDPROG
RESTTOPS DS    0H
***********************************************************************
* TOP SECRET CODE FOR SWAPPING POINTERS GOES HERE...                  *
*                                                                     *
***********************************************************************
RESTACF2 DS    0H
***********************************************************************
* ACF2 CODE FOR SWAPPING POINTERS BACK GOES HERE...                   *
*                                                                     *
***********************************************************************
         B     ENDPROG
ENDPROG  DS    0H
         LH    R8,RETCODE
         FREEMAIN R,LV=1024,A=(R11)
         LR    R1,R13              GET ADDRESS OF CORE IN R1
         L     R13,4(R13)          RESTORE R13
         FREEMAIN R,LV=72,A=(R1)    FREE UP THE CORE
ENDPROG1 DS    0H
         L     R14,12(R13)         RELOAD RETURN POINT
         LR    R15,R8              COPY RETURN CODE
         LM    R0,R12,20(R13)      RELOAD MORE REGISTERS
         BR    R14
*
DOCMLERR DS    0H
         WTO   'TSSM452S LOGICAL ERROR PROCESSING TSO COMMAND',DESC=1
         MVC   RETCODE(2),=H'8'        MOVE IN RETURN CODE
         B     ENDPROG
         EJECT
***********************************************************************
* TSSODOCM ONLY DATA CONSTANTS.
***********************************************************************
CMWTO1C  WTO   'TSSM453E COMMAND REJECTED - CONSOLE XX NOT LOGGED ON TOX
                TSSO',MF=L
CMWTO1CE EQU   *
*
WTO29C   WTO   'TSSM451A TSO COMMAND RETURN CODE WAS -->XXXXXXXX',     X
               MCSFLAG=(REG0),MF=L
WTO29CE  DS    0H
*
*
*
DOCMDATD DSECT
************************************************************
* TSSO ONLY DSECT- NOT SHARED WITH OTHER MODULES.          *
************************************************************
CMWTO1D  WTO   'TSSM453E COMMAND REJECTED - CONSOLE XX NOT LOGGED ON TOX
               TSSO',MF=L
*
WTO29D   WTO   'TSSM451A TSO COMMAND RETURN CODE WAS -->XXXXXXXX',     X
               MCSFLAG=(REG0),MF=L
*
SAVER10  DS    F
RETCODE  DS    H                  RETURN CODE FROM TSSODOCM
SWAPFLAG DS    XL4
* BYTE 1
* X'80' - SECURITY ID WAS SWAPPED
***********************************************************************
* END OF TSSODOCM ONLY VARIABLES.                                     *
***********************************************************************
*
*
***********************************************************************
* COPY IN THE DSECT FOR THE TSSO MAINLINE SHARED VARIABLES.           *
***********************************************************************
         COPY  TSSODATD
         TSSOCVT
         TSSOCMND          DSECT FOR TSSO COMMAND RING
         TSSOSECR
         PRINT NOGEN
         CVT   DSECT=YES
         IEZJSCB
         IKJTCB
         IHAASXB
         IEFJSCVT
         IEFJESCT
UCM      DSECT
         IEECUCM
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
 PUNCH ' SETCODE  AC(1)'
 PUNCH ' IDENTIFY TSSODOCM(''V 4.3.0 (PTF1) &SYSDATE &SYSTIME'') '
 PUNCH ' INCLUDE  SYSLMOD(JCECVT)'
 PUNCH ' ENTRY    TSSODOCM'
 PUNCH ' NAME     TSSODOCM(R)'
         END
