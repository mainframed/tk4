         TITLE ' N C C F   I N T E R F A C E   TO T S S O '
***********************************************************************
* THIS MODULE IS THE NCCF INTERFACE TO THE TSSO PRODUCT. THE INTERFACE*
* IS IN THE FORM OF A COMMAND PROCESSOR THAT WILL CALL THE TSSOPCMD   *
* INTERFACE. THIS INTERFACE WILL RETURN THE RESPONSE TO AN OPERATOR   *
* COMMAND, WHICH WILL THEN BE DISPLAYED AT THE NCCF OPERATORS CONSOLE *
*                                                                     *
* NOTE THAT THE NCCF OPERATOR HAS THE ABILITY TO ROUTE THESE OSCMDS   *
* AROUND THE VTAM NETWORK.                                            *
*                                                                     *
*                                                                     *
* COMMAND SYNTAX:                                                     *
*                                                                     *
*       OSCMD MVS-CMD                                                 *
*                                                                     *
* WHERE: MVS-CMD IS THE MVS, JES2 OR OTHER SUBSYSTEM COMMAND          *
*        TO BE ISSUED.                                                *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
         DSICBS DSICWB,DSITIB,DSITVB,DSIMVT,DSIPDB,DSICBH,DSISVL,      *
               DSISWB,PRINT=NO
NCFOSCMD CSECT
         EQUATES
         STM   R14,R12,12(R13)    SAVE CALLERS REGSITERS
         LR    R12,R15            LOAD ENTRY POINT OF OSCMD
         LR    R8,R1              SAVE INPUT PARMS.
         USING NCFOSCMD,R12
         B     EYE1
         COPY  EYECATCH
EYE1     DS    0H
         USING DSICWB,R8          GET ADDRESSABILITY TO DSICWB
         LA    R9,CWBSAVEA
         ST    R9,8(R13)          SAVE OUR SAVE AREA IN HIS  SAVE AREA
         ST    R13,4(R9)          SAVE HIS SAVE AREA ADDRESS
         LR    R13,R9             POINT TO SAVE AREA AND USE IT
         USING CWBSAVEA,R13       AS WORK AREA BASE REG TO.
         DROP  R8
         L     R11,CWBTIB         ADDRESS THE TIB
         USING DSITIB,R11
         L     R10,TIBTVB
         USING DSITVB,R10
         L     R9,TVBMVT
         USING DSIMVT,R9
*
         LA    R8,CWBADATD         POINT TO AUTOMATIC OSWRKARA
         DSIGET LV=4096,A=(8)     ** GET SOME STORAGE **
         LTR   R15,R15
         BNZ   GETMERR
         L     R8,CWBADATD
         USING OSCMDATD,R8         AT LAST !
         XC    0(256,R8),0(R8)            ZERO OUT DYNAMIC STORAGE
         XC    256(256,R8),256(R8)
         XC    512(256,R8),512(R8)
         XC    768(256,R8),768(R8)
         MVI   BUFMSGA,X'40'
         MVC   BUFMSGA+1(149),BUFMSGA
         MVC   ERROR1D(80),ERROR1C
         MVC   ERROR2D(80),ERROR2C
         MVC   ERROR3D(80),ERROR3C
         MVC   ERROR4D(80),ERROR4C
         MVC   ERROR5D(80),ERROR5C
         MVC   NCFWTO1D(NCFWTO1E-NCFWTO1C),NCFWTO1C
         MVC   OSCALL1D(OSCALL1E-OSCALL1C),OSCALL1C
*
         LA    R2,MVSCMD
         ST    R2,PARMCMD          SET UP PARMS TO TSSOPCMD
         LA    R2,MVSCMDL
         ST    R2,PARMCMDL
         LA    R2,USERID
         ST    R2,PARMUSER         SET UP ANOTHER PARM TO TSSOPCMD
         LA    R2,ERRORCDE
         ST    R2,PARMERR          AND ANOTHER
         LA    R2,AUTHBYTE
         ST    R2,PARMAUTH         AND ANOTHER
         LA    R2,WAITTIME
         ST    R2,PARMWTME         YET ANOTHER.
         LA    R2,MAXLINES
         ST    R2,PARMLINE         AND ANOTHER...
*
         L     R3,CWBBUF           POINT TO NCCF COMMAND BUFFER
         USING BUFHDR,R3
         LH    R1,HDRMLENG         GET LENGTH OF THE MESSAGE
*                                  NOTE THAT THIS INCLUDES (OSCMD)
         LH    R2,HDRTDISP         GET DISPLACEMENT FROM BUFFER TO
*                                  START OF MESSAGE
         LA    R5,0(R3,R2)         R5 NOW POINTS TO THE START OF THE
*                                  COMMAND TEXT
         LH    R6,HDRMLENG         LENGTH OF MESSAGE FOR LOOP CONTROL.
LOOP1    DS    0H
         CLI   0(R5),X'40'         SCAN FOR FIRST BLANK TO GET PAST
         BE    ELOOP1              COMMAND NAME (OSCMD).
         BCTR  R1,0                SUBTRACT 1 FROM TOTAL LENGTH
*                                  OF COMMANDF
         LA    R5,1(R5)            CONTINUE SEARCHING FOR BLANK
         BCT   R6,LOOP1            CONTINUE TILL END OF COMMAND
         MVC   RETCODE(4),=F'8'
         LA    R15,1
         B     ERRORRTN            ** ERROR 1 - INVALID MVS COMMAND **
ELOOP1   DS    0H
***********************************************************************
* WHEN WE GET HERE, R5 POINTS TO THE FIRST BLANK CHARACTER IN THE     *
* BUFFER, AND R1 HAS THE LENGTH OF THE BUFFER EXCLUDING THE COMMAND   *
* WE MUST NOW SEARCH FOR THE FIRST NON BLANK CHARACTER, AS THIS WILL  *
* MARK THE START OF THE MVS COMMAND TO BE ISSUED.                     *
***********************************************************************
LOOP2    DS    0H
         CLI   0(R5),C' '           FOUND ANOTHER BLANK ?
         BNE   ELOOP2               NO, STOP LOOKING
         LA    R5,1(R5)             NEXT CHARACTER
         BCTR  R1,0                 AND 1 OFF FROM LENGTH
         BCT   R6,LOOP2
         MVC   RETCODE(4),=F'8'
         LA    R15,1
         B     ERRORRTN            ** ERROR 1 - INVALID MVS COMMAND **
ELOOP2   DS    0H
         ST    R1,MVSCMDL
***********************************************************************
* WHEN WE COME HERE, R5 POINTS TO THE START OF THE MVS COMMAND TO BE  *
* ISSUED, AND R1 HAS ITS LENGTH.                                      *
***********************************************************************
         L     R4,MVSCMDL
         BCTR  R4,0
         EX    R4,MOVECMD
         B     AR2
MOVECMD  MVC   MVSCMD(0),0(R5)
AR2      DS    0H
*
         DROP  R3                ** BUFHDR **
***********************************************************************
* WE NOW HAVE THE MVS COMMAND, AND ITS LENGTH. WE MUST OBTAIN OR      *
* FABRICATE THE OTHER PARAMETERS REQUIRED BY THE TSSOPCMD ROUTINE. WE *
* WILL DO THESE ONE AT A TIME.                                        *
***********************************************************************
* THE NEXT STEP IS TO CHECK IF TSSO IS UP AND RUNNING. WE DO THIS BY  *
* EXAMINING THE TSSO CVT.                                             *
***********************************************************************
         GETCVT (R6)
         LTR   R6,R6           IS TSSO EVEN THERE ?
         BZ    ERROR3           NO, BLOW HIM AWAY
         USING TSSOCVT,R6
         TM    TSSOFLG1,TSSOGONE TSSO BLOWN AWAY ?
         BO    ERROR3
         TM    TSSOFLG2,TSSOPLOA WAS OPCMD LOADED ?
         BNO   ERROR3            BAD NEWS...
         L     R2,OPCMDADR       GET OPCMD ADDRESS
         ST    R2,AOPCMD         AND PUT IT AWAY FOR LATER
         DROP  R6
***********************************************************************
         TESTAUTH FCTN=1         ARE WE ALREADY APF AUTHORIZED ?
         LTR   R15,R15
         BZ    AUTHOK
NEEDAUTH DS    0H
         GETCVT (R6),NDSA=YES    GET THE NDSA
         USING TSSONDSA,R6
         L     R2,TSSOLX        GET TSSO LINKAGE INDEX
         DROP  R6
         O     R2,=X'00000001'  OBTAIN PC SERVICE NUMBER
         STM   R14,R12,12(R13)   REMEMBER REGS
         L     R15,=CL4'TAPF'   WHATEVER
         LA    R0,20            WHAT EVER
         PC    0(R2)            GET AUTHORIZED
         LM    R14,R12,12(R13)
         OI    FLAGS,X'80'      MARK AUTHORIZATION AS REQUIRED.
         TESTAUTH FCTN=1
         LTR   R15,R15
         BZ    AUTHOK
         LA    R15,2
         B     ERRORRTN
*
AUTHOK   DS    0H
***********************************************************************
* SET UP THE "LINES" PARAMETER.                                       *
*                                                                     *
***********************************************************************
         MVC   MAXLINES(4),=F'200'     LINES IS ALWAYS 200 MAX
*
***********************************************************************
* SET UP THE "TIME" PARAMETER                                         *
*                                                                     *
***********************************************************************
*
         MVC   WAITTIME(4),=F'150'      MAX WAIT IS 1.5 SECOND
***********************************************************************
* SET UP THE "USERID" PARAMETER                                       *
*                                                                     *
***********************************************************************
*
         MVC   USERID(8),TVBOPID      USE THE OPID FIELD
*
***********************************************************************
* SET UP THE AUTHBYTE FIELD, BY CALLING THE USER EXIT - IF PRESENT    *
*                                                                     *
***********************************************************************
         L     R15,=V(NCFOSATH)      GET ADDRESS OF EXIT
         LTR   R15,R15
         BZ    DEFAUTH
         CALL  (15),(USERID,AUTHBYTE),MF=(E,OSCALL1D)
         LTR   R15,R15
         BNZ   ERROR5
         B     GOTAUTH
DEFAUTH  DS    0H
         MVI   AUTHBYTE,B'11100001'  *********FOR NOW ***********
         B     GOTAUTH
GOTAUTH  DS    0H
***********************************************************************
* GETMAIN THE NCCF 40K BUFFER IN WHICH THE COMMAND RESPONSE IS TO     *
* BE PLACED. RETURN THE STORAGE TO FIELD NCCF40K                      *
***********************************************************************
         LA    R7,NCCF40K          POINT TO AUTOMATIC OSWRKARA
         L     R6,=F'40000'
         DSIGET LV=(6),A=(7)     ** GET SOME STORAGE **
         LTR   R15,R15
         BNZ   ERROR4
         L     R7,NCCF40K
         ST    R7,PARMSTOR
*
***********************************************************************
* WE ARE AT LAST READY FOR THE CALL TO TSSOPCMD. WE WILL              *
* LOAD THE ADDRESS OF ROUTINE, AND THE PARAMETERS, AND AWAY WE GO     *
***********************************************************************
         L     R15,AOPCMD          GET ADDRESS OF TSSOPCMD
         LA    R1,OPCMDPRM         GET ADDRESS OF OPCMD PARMS
         BALR  R14,R15             ** AND AWAY WE GO **
*
***********************************************************************
* FOLLOWING THE RETURN FROM TSSOPCMD, WE WILL EXAMINE AND DISPLAY     *
* ANY ERROR MESSAGE CODES WE MIGHT HAVE RECEIVED                      *
***********************************************************************
         LTR   R15,R15
         BNZ   OPCMDERR
*
         BAL   R14,DEAUTH
***********************************************************************
***********************************************************************
* THE OPERATOR COMMAND COMPLETED SUCESSFULLY. NOW, WE WILL            *
* DISPLAY THE RESULTS FOR THE NCCF OPERATOR                           *
***********************************************************************
         L     R4,PARMSTOR          GET ADDRESS OF STORAGE
         L     R1,0(R4)             GET NUMBER OF LINES RETURNED
         ST    R1,NUMLINES          AND KEEP FOR LATER
         LA    R4,4(R4)             START AT BEGINNING OF BUFFER
*
         L     R3,NUMLINES          LOOP CONTROL
         XR    R6,R6                LINES PRINTED SO FAR
PLOOP    DS    0H
*
         C     R3,NUMLINES          ANOTHER LINE PRINTED?
         BE    FIRST                NOPE...
*
         CH    R3,=H'1'             INDICATE TITLE LINE
         BE    LAST
*
MIDDLE   DS    0H
         OI    BUFFLAGS,X'40'       INDICATE MIDDLE LINE
         B     PUTMSGIT
*
FIRST    DS    0H
         OI    BUFFLAGS,X'80'       INDICATE FIRST  LINE
         B     PUTMSGIT
*
LAST     DS    0H
         OI    BUFFLAGS,X'20'       INDICATE LAST.  LINE
         B     PUTMSGIT
*
PUTMSGIT DS    0H
         MVC   BUFMSGA(150),0(R4)
         BAL   R14,PUTMSG
         LA    R4,150(R4)
         BCT   R3,PLOOP
*
         B     ENDPROG
PUTMSG   DS    0H
***********************************************************************
* THIS SERVICE ROUTINE WILL PUT A 150 BYTE MESSAGE OUT TO THE NCCF    *
* OPERATOR. THE MESSAGE MUST HAVE PREVIOUSLY BEEN SET UP IN VARIABLE  *
* BUFMSGA.                                                            *
***********************************************************************
         ST    R14,SAVE14B
         LA    R2,BUFFER
         USING BUFHDR,R2
*
*
         LA    R0,BUFHDRND-BUFHDR
         STH   R0,HDRTDISP
*
         MVI   HDRMTYPE,C'U'
*
         LA    R0,BUFFEND-BUFFER
         STH   R0,HDRBLENG
*
         MVC   HDRDOMID(8),MVTCURAN
*
         LA    R0,100
         STH   R0,HDRMLENG
*
         BAL   R14,GETTIME
         ST    R1,HDRTSTMP
         L     R1,CWBSWB
         TM    BUFFLAGS,X'80'                  OPTIONS=FIRST REQUESTED?
         BO    TYPEF
         TM    BUFFLAGS,X'40'               OPTIONS=MIDDLE?
         BO    TYPEM
         TM    BUFFLAGS,X'20'               OPTIONS=END?
         BO    TYPEL
         TM    BUFFLAGS,X'10'
         BO    TYPEMSG
         TM    BUFFLAGS,X'08'
         BO    TYPESEG
*
***********************************************************************
* NO SPECIAL NCCF PROCESSING IS REQUIRED...                           *
*                                                                     *
***********************************************************************
TYPEORD  DS    0H
         DSIPSS SWB=(1),TYPE=OUTPUT,BFR=(2)
         B     PSSEND
TYPEF    DS    0H
         DSIPSS SWB=(1),TYPE=OUTPUT,BFR=(2),OPTIONS=FIRST
         B     PSSEND
TYPEM    DS    0H
         DSIPSS SWB=(1),TYPE=OUTPUT,BFR=(2),OPTIONS=MIDDLE
         B     PSSEND
TYPEL    DS    0H
         DSIPSS SWB=(1),TYPE=OUTPUT,BFR=(2),OPTIONS=LAST
         B     PSSEND
TYPESEG  DS    0H
         DSIPSS SWB=(1),TYPE=OUTPUT,BFR=(2),OPTIONS=SEG
         B     PSSEND
TYPEMSG  DS    0H
         DSIPSS SWB=(1),TYPE=OUTPUT,BFR=(2),OPTIONS=MSG
         B     PSSEND
*
PSSEND   DS    0H
         CH    R15,=H'16'         RC 16 - SCREEN FILLED UP....
         BE    PSSOK              THIS IS NOT A PROBLEM
         CH    R15,=H'24'         RC 24 - FIRST, MIDDLE AND END IN
*                                 WRONG ORDER ...
         BE    PSSOK              ALSO NOT A PROBLEM
         LTR   R15,R15
         BNZ   PSSERR
*
PSSOK    DS    0H
         L     R14,SAVE14B
         MVI   BUFMSGA,X'40'
         MVC   BUFMSGA+1(149),BUFMSGA
         XC    BUFFLAGS(2),BUFFLAGS
         BR    R14
PSSERR   DS    0H
***********************************************************************
* WE COME HERE IN CASE OF AN ERROR PROCESSING THE NCCF MESSAGE. THE   *
* RETURN CODE IS (IN LIEU OF A BETTER PLACE) WRITTEN TO THE MVS       *
* OPERATORS CONSOLE.                                                  *
***********************************************************************
         ST    R10,SAVER10
         LA    R10,OSWRKARA
         LR    R1,R15
         CALL  JCECVTBD
         ST    R1,NCFWTO1D+32
         L     R10,SAVER10
         WTO   MF=(E,NCFWTO1D)
         B     ENDPROG
         XC    RETCODE(2),RETCODE
         B     ENDPROG
*
DEAUTH   DS    0H
         TM    FLAGS,X'80'            DID WE USE TSSO TO GET AUTH ?
         BNO   DEAUTHE                NO, DONT DEAUTH...
         MODESET KEY=ZERO
         L     R1,X'21C'               TCB
         USING TCB,R1
         L     R1,TCBJSCB             GET TCBJSCB
         USING IEZJSCB,R1             BASE ON JSCB
         NI     JSCBOPTS,255-JSCBAUTH FLIP BIT
         DROP  R1
         MODESET KEY=NZERO,MODE=PROB
DEAUTHE  DS    0H
         BR    R14
*
OPCMDERR DS    0H
***********************************************************************
* WE COME HERE IN CASE OF A NON ZERO RETURN CODE FROM THE TSSOPCMD    *
* MODULE. IF THIS IS THE CASE, WE WILL DISPLAY AN APPROPRIATE ERROR   *
* MESSAGE. NOTE THE THE ERROR MESSAGES ARE KEPT IN THE OPCMDMSG CSECT *
***********************************************************************
         L     R5,=V(OPCMDMSG)
         LR    R3,R15                 COPY THE RETURN CODE
*
         BAL   R14,DEAUTH
*
         BCTR  R3,0                   MULTIPLICATION WORKS BETTER
         SRL   R3,2                   DIVIDE BY 4
         M     R2,=F'80'              AND MULTIPLY BY 80
         AR    R5,R3                  R5  NOW POINTS TO THE MSG TO
*                                     BE DISPLAYED.
         LA    R5,4(R5)               POINT PAST TSO NONSENSE
         MVC   BUFMSGA(76),0(R5)
         BAL   R14,PUTMSG
         B     ENDPROG
*
ENDPROG  DS    0H
         L     R7,RETCODE
         DSIFRE R,LV=4096,A=(8)   FREEMAIN THE PRIVATE STORAGE
         L     R13,4(R13)          RESTORE R13
         B     ENDPROG1
ENDPROG1 DS    0H
         L     R14,12(R13)         RELOAD RETURN POINT
         LR    R15,R7              PICK UP RETURN CODE.
         LM    R0,R12,20(R13)      RELOAD MORE REGISTERS
         BR    R14
ERROR3   DS    0H
*
         LA    R15,3
         XC    RETCODE(4),RETCODE  NO SENSE IN RETRYING...
         B     ERRORRTN
*
ERROR4   DS    0H
*
         LA    R15,4
         XC    RETCODE(4),RETCODE  NO SENSE IN RETRYING...
         B     ERRORRTN
*
ERROR5   DS    0H
*
         BAL   R14,DEAUTH
*
         LA    R15,5
         XC    RETCODE(4),RETCODE  NO SENSE IN RETRYING...
         B     ERRORRTN
*
GETTIME  DS    0H
         ST    R14,SAVE14
         DSIDATIM AREA=PACKAREA,FORMAT=BINARY
         L     R1,PACKAREA+4
         L     R14,SAVE14
         BR    R14
GETMERR  DS    0H
         WTO   'NCFOSC01 GETMAIN FAILURE IN NCCF OSCMD MODULE',DESC=1
         LA    R7,8
         B     ENDPROG1
ERRORRTN DS    0H
***********************************************************************
* THIS IS THE ERROR HANDLER FOR THE NCFOSCMD MODULE. STANDARD PROCEDUR*
* IS TO TAKE THE ERROR CODE IN R15, AND PUT A MESSAGE OUT THE NCCF    *
* CONSOLE. THE RETURN CODE TO BE SET IS PLACED IN VARIABLE RETCODE    *
* BY THE CALLER.                                                      *
***********************************************************************
         BCTR  R15,0
         M     R14,=F'80'
         LA    R14,ERRTAB
         AR    R14,R15
         MVC   BUFMSGA(80),0(R14)
         BAL   R14,PUTMSG
         B     ENDPROG
***********************************************************************
* CONSTANTS FOR THE NCFOSCMD PROGRAM                                  *
*                                                                     *
*                                                                     *
***********************************************************************
NCFWTO1C WTO   'DSIPSS                                        ',MF=L
NCFWTO1E EQU   *
TESTMSG  DC    CL150'THIS IS A TEST OF THE EMERGENCY BROADCAST SYSTEM'
WTO1C    WTO   'DSIPSS                                        ',MF=L
WTO1CE   EQU   *
ERROR1C  DC    CL80'OSCMD TERMINATING - MISSING OR INVALID MVS COMMAND'
ERROR2C  DC    CL80'OSCMD TERMINATING - FUNCTION IS LACKING APF AUTHORIX
               ZATION'
ERROR3C  DC    CL80'OSCMD TERMINATING - TSSO IS UNAVAILABLE TO PROCESS X
               THE COMMAND'
ERROR4C  DC    CL80'OSCMD TERMINATING - NCCF WAS UNABLE TO FIND A 40K  X
               BUFFER'
ERROR5C  DC    CL80'OSCMD TERMINATING - YOU ARE NOT AUTHORIZED TO USE IX
               T'
OSCALL1C CALL  ,(0,0),MF=L
OSCALL1E EQU   *
         LTORG
***********************************************************************
* DSECT AREA FOR THE NCFOSCMD PROGRAM                                 *
*                                                                     *
*                                                                     *
***********************************************************************
OSCMDATD DSECT
FLAGS    DS    F
* X'80' WE USED THE TSSO ROUTINE TO OBTAIN APF AUTHORIZATION
OURJSCB  DS    F
NUMLINES DS    F
SAVE14   DS    F
SAVE14B  DS    F
TVBADDR  DS    F
RETCODE  DS    F
PACKAREA DS    D
BUFFER   DS    0D
         DS    XL(BUFHDRND-BUFHDR)    BUFFER HEADER FOR OUTPUT
BUFMSGA  DS    CL150
BUFFEND  EQU   *
OSWRKARA DS    CL200
*
MVSCMD   DS    CL150
*
MVSCMDL  DS    F                LENGTH OF THE MVS COMMAND
*
MAXLINES DS    F                MAXIMUM NUMBER OF LINES IN CMD RESP.
*
WAITTIME DS    F                MAXIMUM WAIT TIME, IN .01 SECS
*
AOPCMD   DS    A                ADDRESS OF THE TSSOPCMD ROUTINE
*
ERRORCDE DS    F                ERROR  CODE FROM THE TSSOPCMD MODULE
*
AUTHBYTE DS    XL2              AUTHORIZATION BYTE TO PASS TO TSSOPCMD
*
USERID   DS    CL8              USERID TO PASS TO THE TSSOPCMD ROUTINE
*
NCCF40K  DS    F                ADDRESS OF THE 40K BUFFER.
*
NCFWTO1D WTO   'DSIPSS                                        ',MF=L
*
*
BUFFLAGS DS    H
* X'80' - SPECIAL NCCF PROCESSING REQUIRED - OPTIONS=FIRST
* X'40' - SPECIAL NCCF PROCESSING REQUIRED - OPTIONS=MIDDLE
* X'20' - SPECIAL NCCF PROCESSING REQUIRED - OPTIONS=LAST
SAVER10  DS    F
OPCMDPRM DS    0D                 PARAMETER LIST FOR TSSOPCMD
PARMCMD  DS    A   0(R1)          ADDRESS OF THE MVS COMMAND
PARMCMDL DS    F   4(R1)          LENGTH OF THE MVS COMMAND
PARMWTME DS    F   8(R1)          MAXIMUM WAIT TIME - IN SECONDS
PARMLINE DS    F  12(R1)          MAXIMUM LINES FOR COMMAND
PARMAUTH DS    A  16(R1)          AUTHORIZATION BYTE FOR COMMAND
PARMUSER DS    A  20(R1)          A(USERID OF THE OSCMD FACILITY)
PARMSTOR DS    A  24(R1)          ADDRESS OF A 40K BUFFER
PARMERR  DS    A  28(R1)          ADDRESS OF A REASON CODE.
PARMREAS DS    A  32(R1)          ADDRESS OF THE REASON CODE.
ERRTAB   DS    0D
ERROR1D  DC    CL80'OSCMD TERMINATING - MISSING OR INVALID MVS COMMAND'
ERROR2D  DC    CL80'OSCMD TERMINATING - FUNCTION IS LACKING APF AUTHORIX
               ZATION'
ERROR3D  DC    CL80'OSCMD TERMINATING - TSSO IS UNAVAILABLE TO PROCESS X
               THE COMMAND'
ERROR4D  DC    CL80'OSCMD TERMINATING - NCCF WAS UNABLE TO FIND A 40K  X
               BUFFER'
ERROR5D  DC    CL80'OSCMD TERMINATING - YOU ARE NOT AUTHORIZED TO USE IX
               T'
OSCALL1D CALL  ,(0,0),MF=L
         TSSOCVT
         TSSONDSA
         OSCMDICB
         CVT   DSECT=YES
         IEFJSCVT
         IEFJESCT
         IEZJSCB
         IKJTCB
         END   NCFOSCMD
 PUNCH ' SETCODE  AC(1)'
 PUNCH ' IDENTIFY NCFOSCMD(''TSSO V 4.3.0 &SYSDATE &SYSTIME'') '
 PUNCH ' INCLUDE  SYSLMOD(NCFOSATH)'
 PUNCH ' INCLUDE  SYSLMOD(JCECVT)'
 PUNCH ' INCLUDE  SYSLMOD(OPCMDMSG)'
 PUNCH ' ENTRY    NCFOSCMD'
 PUNCH ' NAME     NCFOSCMD(R)'
         END
