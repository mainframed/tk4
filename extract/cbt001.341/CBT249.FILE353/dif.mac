//BCOOKNIT  JOB (X0002,QCC,BCOOK),'X-BRIAN COOK',
//   MSGCLASS=X,
//   MSGLEVEL=(1,1),CLASS=X,NOTIFY=BCOOK
/*JOBPARM L=999,COPIES=5
//* *****************************************************************
//* *****************************************************************
//*                                                               ***
//* TECH.SERV.SOURCE(DI)                                          ***
//*                                                               ***
//* THIS IS AN SPF APPLICATION TO DISPLAY THE STATUS OF JES2      ***
//* INITIATORS.                                                   ***
//*                                                               ***
//* *****************************************************************
//* *****************************************************************
//ASM1    EXEC PGM=IEV90,REGION=2048K,
//        PARM='OBJECT,NODECK,TERM,XREF(FULL)'
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR,
//  UNIT=SYSDA,VOL=SER=TSTRES
//         DD  DSN=SYS1.AMODGEN,DISP=SHR,
//  UNIT=SYSDA,VOL=SER=TSTRES
//         DD  DSN=SYS1.HASPSRC,DISP=SHR
//         DD  DSN=SYS2.MACLIB,DISP=SHR
//         DD  DISP=SHR,DSN=TECH.SERV.MACLIB
//SYSUT1   DD  SPACE=(CYL,(5,5)),
//             UNIT=SYSDA
//SYSUT2   DD  SPACE=(CYL,(5,5)),
//             UNIT=SYSDA
//SYSUT3   DD  SPACE=(CYL,(5,5)),
//             UNIT=SYSDA
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSPUNCH DD  DUMMY
//SYSLIN   DD   DSN=&&OBJSET,UNIT=SYSDA,SPACE=(CYL,(5,5)),
//             DISP=(MOD,PASS)
//SYSIN    DD  *
***********************************************************************
*                                                                     *
*                                                                     *
*               DISPLAY INITIATORS FACILITY (DIF)                     *
*                                                                     *
*                                                                     *
* ABSTRACT: DISPLAY STATUS OF JES2 INITIATORS.                        *
*                                                                     *
*                                                                     *
* FUNCTION: DIF IS DESIGNED TO OPERATE UNDER ISPF USING DISPLAY       *
*           MANAGEMENT SERVICES. IT PROVIDES A DISPLAY OF THE         *
*           STATUS OF JES2 INITIATORS, AND FOR AUTHORIZED USERS,      *
*           THE ABILITY TO START, STOP, AND REFORMAT INITIATORS.      *
*                                                                     *
*           DIF LOOKS AT VARIOUS JES2/SP1.3.0 CONTROL BLOCKS.         *
*                                                                     *
*                                                                     *
* EXTERNAL REFERENCE: ISPLINK                                         *
*                                                                     *
*                                                                     *
* MACROS USED: SAVE                                                   *
*              ABEND                                                  *
*              RETURN                                                 *
*              GETMAIN                                                *
*              STAX                                                   *
*              ENQ                                                    *
*              DEQ                                                    *
*              TPUT                                                   *
*              FREEMAIN                                               *
*              $JQE                                                   *
*              $JOE                                                   *
*              CVT                                                    *
*              CVTUSERS (USER)                                        *
*              TCBWORK  (USER)                                        *
*                                                                     *
*                                                                     *
* ATTRIBUTES:                                                         *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*        THIS SPF COMMAND WILL DISPLAY JES2 BATCH INITIATORS,         *
*        CLASSES ASSIGNED, AND ACTIVE JOBS UNDER THE INITS.           *
*                                                                     *
*        CHAINS THROUGH CVT , JESCT BLOCK, SSCT BLOCK,                *
*        SSVT JES2 BLOCKS AND PIT JES2 BLOCKS TO OBTAIN               *
*        INITIATOR CLASSES.                                           *
*        THEN GET SJB FROM PIT TO GET JOBNAMES, USED CLASS.           *
*                                                                     *
*        PROGRAM MUST BE ASSEMBLED WITH INPUT LIBRARY DSN             *
*           CONCATENATING 'SYS1.HASPSRC' SINCE JES2 DSECTS ARE        *
*              CONTAINED THEREIN.  THIS MEANS IF JES2 MAINTENANCE     *
*                IS APPLIED, NORMALLY ONLY A RE-ASSEMBLY WILL         *
*                   BE ALL THAT IS REQUIRED.                          *
*                                                                     *
*       NOTE, USE OF THIS ROUTINE IS LIMITED TO THOSE USERS WITH      *
*       OPERATOR AUTHORITY                                            *
*                                                                     *
*       AUGUST 1979,                                                  *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*
* NOTE THE FOLLOWING ENTRY POINT LOGIC IS NON-STANDARD. IN PARTICULAR,
*      IT WILL NOT WORK WITH CALLED PL/I PROGRAMS.
*
***********************************************************************
DIF      CSECT
         USING *,13,12
         USING CVTDSECT,R1        SETUP CVT BASE
         USING JESCT,R2           SETUP JESCT BASE
         USING SSCT,R3            SETUP SSCT BASE
         USING SSVT,R4            SETUP SSVT BASE
         USING PITDSECT,R5        SETUP PIT BASE
         USING SJBDSECT,R11       SETUP SJB BASE
         B     72(,15)
         DC    17F'0'
         STM   14,12,12(13)   SAVE CALLING PGM'S REGISTERS
         LA    R2,0(,R15)     LOAD EPA IN R2 FOR WORK REGISTER
         ST    R2,8(R13)      LINK SAVE AREAS
         ST    R13,4(R2)      SAVE THE CALLER'S R13
*
SETBASES DS    0H
         LR    R13,R2         SET SAVE AREA AND BASE 1
         LR    R12,R2         SET
         A     R12,L4096          BASE 2
*
INITFLDS DS    0H
         MVI   ATABFL,C'0'    NO ACTIVE TABLE
         MVI   TABAREA,C' '   CLEAR TAB ENTRY AREA
         MVC   TABAREA+1(79),TABAREA
         XC    ISPARMS(40),ISPARMS
*
SHOWAGIN DS    0H
         BAL   R7,SHOWNIT     DISPLAY THE INITS
*
SHOWDONE DS    0H
*                                  DELETE THE TABLE VARIABLES
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (VDELETE,                                               X
               NITLINEP),                                              X
               VL,MF=(E,ISPARMS)
*
*                                  DELETE THE TABLE VARIABLES
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (VDELETE,                                               X
               PIKN),                                                  X
               VL,MF=(E,ISPARMS)
*
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (VDELETE,                                               X
               NITID),                                                 X
               VL,MF=(E,ISPARMS)
*
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (VDELETE,                                               X
               NITCL),                                                 X
               VL,MF=(E,ISPARMS)
*
*                                  DELETE THE TABLE ITSELF
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (TBEND,                                                 X
               DIFTABLE),                                              X
               VL,MF=(E,ISPARMS)
         MVI   ATABFL,C'0'        NO ACTIVE TABLE
*
         L     R13,4(R13)     RESTORE THE CALLER'S R13
         LM    14,12,12(13)   RETURN TO OUR CALLER
         SR    15,15          SET RC=0
         BR    14             AND RETURN
*
L4096    DC    F'4096'
*
         EJECT
SHOWNIT  DS    0H
         ST    R7,DIF7HOLD SAVE THE RETURN ADDRESS
*
         MVC   SELCODE(10),SPACES SET SELECTION CODE TO SPACES
*
         CLI   ATABFL,C'0'        DO I HAVE AN ACTIVE TABLE?
         BE    ANOTAB             NOPE
*
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (VDELETE,                                               X
               NITLINEP),                                              X
               VL,MF=(E,ISPARMS)
*
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (VDELETE,                                               X
               PIKN),                                                  X
               VL,MF=(E,ISPARMS)
*
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (VDELETE,                                               X
               NITID),                                                 X
               VL,MF=(E,ISPARMS)
*
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (VDELETE,                                               X
               NITCL),                                                 X
               VL,MF=(E,ISPARMS)
*
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (TBEND,                                                 X
               DIFTABLE),                                              X
               VL,MF=(E,ISPARMS)
         MVI   ATABFL,C'0'        NO ACTIVE TABLE
ANOTAB   DS    0H
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (VDEFINE,                                               X
               NITLINEP,TABAREA,CHAR,L60),                             X
               VL,MF=(E,ISPARMS)
*
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (VDEFINE,                                               X
               NITID,IDENT,CHAR,L2),                                   X
               VL,MF=(E,ISPARMS)
*
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (VDEFINE,                                               X
               NITCL,INITNAM,CHAR,L8),                                 X
               VL,MF=(E,ISPARMS)
*
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (VDEFINE,                                               X
               PIKN,SELCODE,CHAR,L2),                                  X
               VL,MF=(E,ISPARMS)
*
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (TBCREATE,                                              X
               DIFTABLE,                                               X
               NULLENT,                                                X
               DANAMLST,                                               X
               NOWRITE),                                               X
               VL,MF=(E,ISPARMS)
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (TBVCLEAR,                                              X
               DIFTABLE),                                              X
               VL,MF=(E,ISPARMS)
         MVI   ATABFL,C'1'        AN ACTIVE TABLE
*
*
         L     R1,16              GET CVT
         L     R2,296(R1)         GET JESCT    (JES CONTROL TABLE)
         L     R3,JESSSCT         GET FIRST JES SSCT (SSCVT)
         L     R4,SSCTSSVT        GET JES SSVT
         L     R5,$SVPIT          GET PIT ADDR--5.302 JES LOGIC+MAINT
NEXTPIT  EQU   *                  NOW READY TO WRITE
         TM    PITSTAT,PITHOLDA   PIT DRAINED $PI ?
         BNO   *+10               IF NOT CONTINUE
         MVC   STAT,=C'DRAINED '  MOVE IN DRAINED STATUS
         TM    PITSTAT,PITHOLD1   PIT DRAINED $P IN ?
         BNO   *+10               IF NOT CONTINUE
         MVC   STAT,=C'DRAINED '  MOVE IN DRAINED STATUS
         TM    PITSTAT,PITHALTA   PIT HALTED  $Z I ?
         BNO   *+10               IF NOT CONTINUE
         MVC   STAT,=C'HALTED  '  MOVE IN HALTED  STATUS
         TM    PITSTAT,PITHALT1   PIT HALTED  $Z IN ?
         BNO   *+10               IF NOT CONTINUE
         MVC   STAT,=C'HALTED  '  MOVE IN HALTED  STATUS
         TM    PITSTAT,PITINIT    OS INIT EXISTS FOR PIT?
         BNO   *+10               IF NOT CONTINUE
         MVC   STAT,=C'INACTIVE'  MOVE IN INACTIVE
         TM    PITSTAT,PITBUSY    PIT BUSY ?
         BNO   *+10               IF NOT CONTINUE
         MVC   STAT,=C'ACTIVE  '  MOVE IN ACTIVE
         TM    PITSTAT,PITIDLE    PIT IDLE ?
         BNO   *+10               IF NOT CONTINUE
         MVC   STAT,=C'IDLE    '  MOVE IN IDLE
         CLC   STAT,=8C' '        STATUS NOT AVAILABLE ?
         BNE   *+10               IF NOT CONTINUE
         MVC   STAT,=C'UNAVAIL '  MOVE IN STATUS NOT AVAIL.
         CLI   PITPATID,C' '      NULL 1ST CHAR?
         BNE   IDENTOK            NO, CONTINUE
         MVC   IDENT(1),PITPATID+1 MOVE IN ID---FORMAT CL1
         B     IDENTSKP           SKIP NEXT MOVE
IDENTOK  MVC   IDENT,PITPATID     MOVE ID IN---FORMAT CL2
IDENTSKP MVC   INITNAM,PITCLASS   MOVE THE INIT CLASSES TO OUTPUT
*
*    &MAXCLAS PARAMETER ON GEN LIMITS MAX CLASSES, ABOVE MAY NEED
*    TO BE CHANGED IF OTHER THAN 8 CLASSES.
*
         TM    PITSTAT,PITBUSY    PIT BUSY ?
         BNO   PRINT              IF NOT CONTINUE
         L     R11,PITSJB         GET SJB ADDRESS
         MVC   JOBNAME,SJBJOBNM   GET JOBNAME FROM JOB CARD
         MVC   UCLASS,SJBJCLAS    GET USED CLASS
*
***********************************************************************
*
*   ADD THE DETAIL LINE TO THE TABLE
*
***********************************************************************
PRINT    DS    0H
         BAL   R7,OUTMSG        ADD THE ENTRY TO THE TABLE
*
*
         L     R5,PITNEXT         GET NEXT PIT---REFER 5.200 JES2
         LTR   R5,R5              CHK R5 FOR VALID ADDR
         BZ    SHOWSCRN           END PROCESS FOR SSCT
         B     NEXTPIT            GO BACK
*
         EJECT
*
***********************************************************************
*
*   NOW SHOW THE ISPPLIB FORMAT AND THE TABLE ON THE SCREEN
*
***********************************************************************
*
*
SHOWSCRN DS    0H
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (TBTOP,                                                 X
               DIFTABLE),                                              X
               VL,MF=(E,ISPARMS)
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (TBDISPL,                                               X
               DIFTABLE,                                               X
               DIFDATAB),                                              X
               VL,MF=(E,ISPARMS)
*
***********************************************************************
*
*   DETERMINE WHETHER ANYTHING WAS ENTERED ON THE SCREEN
*
***********************************************************************
*
         C     R15,FZEROS     COMMAND ENTERED/LINE MODIFIED??
         BNE   DUNWITIT       NOPE
GOTSTUFF DS    0H
         MVC   SELSAVE(2),SELCODE    SAVE SEL CODE
         OC    SELSAVE(2),SPACES   UPPER-CASE IT
         MVC   SELCODE(2),SPACES SET SELECTION CODE TO SPACES
         MVC   JOBNAMS(1),IDENT      SAVE INITIATOR ID
         MVC   NEWCLSS(8),INITNAM    SAVE NEW CLASSES, IF ANT
         OC    NEWCLSS(8),SPACES   UPPER-CASE IT
*
*   NOTE THIS WIPES OUT THE TABAREA AND SELCODE, SO THEY ARE SAVED,
*        ABOVE
*
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (TBGET,                                                 X
               DIFTABLE),                                              X
               VL,MF=(E,ISPARMS)
         C     R15,F8         RC=8 MEANS CRP IS AT TOP
         BE    GOTCMD         THEN A COMMAND WAS ENTERED
*
* IF THE CRP IS NOT ZERO, THEN A LINE SELECTION CODE MUST HAVE BEEN
* ENTERED. I HAVE THE CURRENT LINE, SO EDIT THE SELECTION CODE.
*
         CLI   SELSAVE,C'P'   IS IT "PURGE"
         BE    PURGE          GO DO IT
*
         CLI   SELSAVE,C'S'   IS IT "START"
         BE    START          GO DO IT
*
         CLI   SELSAVE,C'T'   IS IT "CHANGE"
         BE    CHANGE         GO DO IT
*
* ADD TESTS FOR OTHER LINE SELECTION CODES HERE
*
         B     SHOWAGIN       GO REPEAT THE DISPLAY
         EJECT
PURGE    DS    0H
*
         BAL   R7,TESTAUTH    CHECK AUTHORIZATION
*
         MVI   CMDLINE,C' '
         MVC   CMDLINE+1(71),CMDLINE
         MVC   CMDLINE(3),=C'$PI'
         MVC   CMDLINE+3(1),JOBNAMS    INITIATOR ID
*
         LA    R0,1             SET AUTH ON
         SVC   235
*
         MODESET KEY=ZERO,MODE=SUP
         SLR   R0,0                    CLEAR REG 0
         LA    R1,CMDISMF             GET ADDRESS OF COMMAND I SMF
         SVC   34                      ISSUE COMMAND VIA SVC 34
         MODESET KEY=NZERO,MODE=PROB
*
         SR    R0,0             SET AUTH OFF
         SVC   235
*
         B     SHOWAGIN       GO REPEAT THE SCREEN
*
         EJECT
START    DS    0H
*
         BAL   R7,TESTAUTH    CHECK AUTHORIZATION
*
         MVI   CMDLINE,C' '
         MVC   CMDLINE+1(71),CMDLINE
         MVC   CMDLINE(3),=C'$SI'
         MVC   CMDLINE+3(1),JOBNAMS    INITIATOR ID
*
         LA    R0,1             SET AUTH ON
         SVC   235
*
         MODESET KEY=ZERO,MODE=SUP
         SLR   R0,0                    CLEAR REG 0
         LA    R1,CMDISMF             GET ADDRESS OF COMMAND I SMF
         SVC   34                      ISSUE COMMAND VIA SVC 34
         MODESET KEY=NZERO,MODE=PROB
*
         SR    R0,0             SET AUTH OFF
         SVC   235
*
         B     SHOWAGIN       GO REPEAT THE SCREEN
*
         EJECT
CHANGE   DS    0H
*
         BAL   R7,TESTAUTH    CHECK AUTHORIZATION
*
         MVI   CMDLINE,C' '
         MVC   CMDLINE+1(71),CMDLINE
         MVC   CMDLINE(3),=C'$TI'
         MVC   CMDLINE+3(1),JOBNAMS    INITIATOR ID
         MVI   CMDLINE+4,C','          MOVE IN A COMMA
         MVC   CMDLINE+5(8),NEWCLSS   NEW CLASSES
*
         LA    R0,1             SET AUTH ON
         SVC   235
*
         MODESET KEY=ZERO,MODE=SUP
         SLR   R0,0                    CLEAR REG 0
         LA    R1,CMDISMF             GET ADDRESS OF COMMAND I SMF
         SVC   34                      ISSUE COMMAND VIA SVC 34
         MODESET KEY=NZERO,MODE=PROB
*
         SR    R0,0             SET AUTH OFF
         SVC   235
*
         B     SHOWAGIN       GO REPEAT THE SCREEN
*
CMDISMF  DC    Y(76),Y(00)
CMDLINE  DC    CL72'I SMF' COMMAND SVC 34 INPUT
*
*
         EJECT
*
TESTAUTH DS    0H
         ST    R7,AUTHHOLD    SAVE  RETURN ADDRESS
*
         L     R1,16              GET CVT POINTER
         L     R1,0(R1)           OLD/NEW POINTER
         L     R1,4(R1)           OUR TCB POINTER
         L     R15,12(R1)         OUR TIOT POINTER
         CLI   0(R15),C'A'        IS THIS SYSTEMS USER?
         BE    IAMAUTH            YUP, AUTHORIZED
         L     R1,180(R1)         JSCB POINTER
         L     R1,264(R1)         PSCB POINTER
         TM    16(R1),X'80'       DO WE HAVE OPER ABILITY?
         BO    IAMAUTH            YES, CONTINUE
NOTAUTH  DS    0H
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (TBDISPL,                                               X
               DIFTABLE,                                               X
               DIFDATAB,DIF001),                                       X
               VL,MF=(E,ISPARMS)
*
         B     SHOWAGIN       GO REPEAT THE SCREEN
*
IAMAUTH  DS    0H
         L     R7,AUTHHOLD    SAVE  RETURN ADDRESS
         BR    R7             RETURN TO OUR CALLER
         EJECT
*
*
DUNWITIT DS    0H
         L     R7,DIF7HOLD     RESTORE  RETURN ADDRESS
         BR    R7             RETURN TO OUR CALLER
         EJECT
*
*    ONLY COMMAND SUPPORTED IS "REPEAT"
*
GOTCMD   DS    0H
         MVI   TABAREA,C' '   CLEAR TAB ENTRY AREA
         MVC   TABAREA+1(79),TABAREA
*
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (TBEND,                                                 X
               DIFTABLE),                                              X
               VL,MF=(E,ISPARMS)
         MVI   ATABFL,C'0'        NO ACTIVE TABLE
*
         XC    ISPARMS(40),ISPARMS
         B     SHOWAGIN       GO REPEAT THE SCREEN
*
***********************************************************************
*
*   ADD A LINE TO THE TABLE
*
***********************************************************************
*
OUTMSG   DS    0H
         ST    R7,OUT7HOLD    RETURN ADDRESS
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (VPUT,                                                  X
               DANAMLST),                                              X
               VL,MF=(E,ISPARMS)
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (TBADD,                                                 X
               DIFTABLE),                                              X
               VL,MF=(E,ISPARMS)
         MVI   TABAREA,C' '
         MVC   TABAREA+1(79),TABAREA
         L     R7,OUT7HOLD    RETURN ADDRESS
         BR    R7             RETURN TO OUR CALLER
         TITLE 'MISCELLANEOUS CONSTANTS'
         PRINT NOGEN
         LTORG
*
         DS    0F
DIF7HOLD DS    F
OUT7HOLD DS    F
AUTHHOLD DS    F
*
*
ISPLINK  DC    V(ISPLINK)
*
FZEROS   DC    F'0'
F8       DC    F'8'
L2       DC    F'2'
L8       DC    F'8'
L60      DC    F'60'
*
TBADD    DC    C'TBADD    '
TBCREATE DC    C'TBCREATE '
TBDISPL  DC    C'TBDISPL  '
TBEND    DC    C'TBEND    '
TBGET    DC    C'TBGET    '
TBTOP    DC    C'TBTOP    '
TBVCLEAR DC    C'TBVCLEAR '
VDEFINE  DC    C'VDEFINE  '
VDELETE  DC    C'VDELETE  '
VPUT     DC    C'VPUT     '
*
NOWRITE  DC    C'NOWRITE  '
*
NULLENT  DC    C'()'
*
DANAMLST DC    C'('             DISPLAY ACTIVE NAME LIST
         DC    C'PIKN     '     SELECTION CODE
         DC    C'NITID    '     SELECTION CODE
         DC    C'NITCL    '     SELECTION CODE
         DC    C'NITLINE )'     JOB INFO
NITLINEP DC    C'(NITLINE )'    JOB INFO
PIKN     DC    C'(PIKN    )'    SELECTION CODE
NITID    DC    C'(NITID   )'    SELECTION CODE
NITCL    DC    C'(NITCL   )'    SELECTION CODE
*
DIF001   DC    C'DIF001   '
*
SPACES   DC    CL80' '
*
CHAR     DC    C'CHAR    '
*
DIFDATAB DC    C'DIFDATAB'
DIFTABLE DC    C'DIFTABLE'
*
*
         TITLE 'REGISTER EQUATES'
***********************************************************************
*                                                                     *
*        REGISTER EQUATES                                             *
*                                                                     *
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         TITLE 'WORKING STORAGE AREAS'
*
ISPARMS  DS    10F            PARM LIST FOR ISPLINK
*
*     THE ISP TABLE FLAGS INDICATE NO ACTIVE TABLE (0), OR ONE EXISTS
ATABFL   DS    XL1     DO I HAVE A CURRENT "DISPLAY ACTIVE" TABLE
*
*
TABAREA  DS    0CL80
STAT     DC    CL8' ',CL3' '
JOBNAME  DC    CL8' ',CL1' '
UCLASS   DC    CL1' ',CL11' ' (PAD)
         DS    CL52
IDENT    DC    CL2' '
INITNAM  DC    CL8' '
*
SELCODE  DS    CL2            LINE SELECTION CODE
SELSAVE  DS    CL2            LINE SELECTION CODE SAVE AREA
NEWCLSS  DS    CL8            NEW INIT CLASSES SAVE AREA
*
JOBNAMS  DS    CL1            JOBNAME SAVE AREA
BLANKS   DC    CL80' '
         PRINT OFF
         $DEB               GEN $DEB
         $CVT               GEN $CVT
         $JESCT             GEN $JESCT
         $SSCT              GEN $SSCT
         $SVT               GEN $SVT
         $PIT               GEN $PIT
         $SJB               GEN $SJB
         END
/*
//LKED1    EXEC PGM=HEWLF064,PARM=(XREF,LET,LIST,TERM),
//            COND=(4,LT,ASM1),REGION=1024K
//SYSLIN   DD   DSN=&&OBJSET,DISP=(OLD,DELETE)
//         DD   DDNAME=SYSIN
//SYSLIB   DD   DSN=SYS2.LINKLIB,DISP=SHR
//         DD   DISP=SHR,DSN=TECH.SERV.LOAD
//         DD   DISP=SHR,DSN=P.FIXDHEAD.ISPLOAD
//SYSLMOD  DD   DISP=SHR,DSN=SYS2.LINKLIB
//SYSUT1   DD   DSN=&&SYSUT1,UNIT=VIO,SPACE=(1024,(50,20))
//SYSTERM  DD   SYSOUT=*
//SYSPRINT DD   SYSOUT=*
//SYSIN    DD   *
  NAME DIF(R)
/*
