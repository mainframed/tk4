//BCOOKENQ  JOB (X0002,QCC,BCOOK),'X-BRIAN COOK',
//   MSGCLASS=X,
//   MSGLEVEL=(1,1),CLASS=X,NOTIFY=BCOOK
/*JOBPARM L=99
//* *****************************************************************
//* *****************************************************************
//*                                                               ***
//* TECH.SERV.SOURCE(ENQ)                                         ***
//*                                                               ***
//* THIS IS THE DATASET ENQATE FACILITY (ENQ) PROGRAM.            ***
//*                                                               ***
//* *****************************************************************
//* *****************************************************************
//ASM1    EXEC PGM=IEV90,REGION=2048K,
//        PARM='OBJECT,NODECK,TERM,XREF(FULL)'
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR,
//  UNIT=SYSDA,VOL=SER=TSTRES
//         DD  DSN=SYS1.AMODGEN,DISP=SHR,
//  UNIT=SYSDA,VOL=SER=TSTRES
//         DD  DSN=SYS1.HASPSRC,DISP=SHR
//         DD  DSN=SYS2.MACLIB,DISP=SHR
//SYSUT1   DD  SPACE=(CYL,(5,5)),
//             UNIT=SYSDA
//SYSUT2   DD  SPACE=(CYL,(5,5)),
//             UNIT=SYSDA
//SYSUT3   DD  SPACE=(CYL,(5,5)),
//             UNIT=SYSDA
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSPUNCH DD  DUMMY
//SYSLIN   DD   DSN=&&OBJSET,UNIT=SYSDA,SPACE=(CYL,(5,5)),
//             DISP=(MOD,PASS)
//SYSIN    DD  *
***********************************************************************
*                                                                     *
*  NOTE THE FORMAT BELOW SHOULD BE USED AT THE START OF ALL PROGRAMS  *
*       TO PROVIDE UNIFORM DOCUMENTATION.                             *
*                                                                     *
***********************************************************************
***********************************************************************
*                                                                     *
*                                                                     *
*               DATASET ENQATE FACILITY (ENQ)                         *
*                                                                     *
*                                                                     *
* ABSTRACT: ENQATE CATALOG ENTRY FOR A DATASET (IF CATALOGED) AND ALL *
*           OTHER OCCURRENCES OF THE DATASET ON DASD.                 *
*                                                                     *
*                                                                     *
* FUNCTION: ENQ IS DESIGNED TO OPERATE UNDER ISPF USING DISPLAY       *
*           MANAGEMENT SERVICES. IT PROVIDES A DISPLAY OF THE         *
*           CATALOG ENTRY FOR A DATASET, FOLLOWED BY ENTRIES FOR      *
*           EVERY NON-CATALOGED OCURRENCE OF THE DATASET. ALL ONLINE  *
*           DASD VOLUMES ARE SEARCHED.                                *
*                                                                     *
*           ENQ LOOKS AT VARIOUS MVS SP 1.3.0 CONTROL BENQKS.         *
*                                                                     *
*                                                                     *
* EXTERNAL REFERENCE: ISPLINK                                         *
*                                                                     *
*                                                                     *
* MACROS USED: SAVE                                                   *
*              ABEND                                                  *
*              RETURN                                                 *
*              GETMAIN                                                *
*              STAX                                                   *
*              ENQ                                                    *
*              DEQ                                                    *
*              TPUT                                                   *
*              FREEMAIN                                               *
*              $JQE                                                   *
*              $JOE                                                   *
*              CVT                                                    *
*              CVTUSERS (USER)                                        *
*              TCBWORK  (USER)                                        *
*                                                                     *
*                                                                     *
* ATTRIBUTES:                                                         *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
*****THIS PGM IS CALLED DSN13 IN THE FLORIDA POWER + LIGHT CO FILE   *
*************AND HAS BEEN CALLED DSNAME AT CBT************************
*                                                                    *
*       THIS IS THE SP 1.3 VERSION OF DSN                            *
*                                                                    *
*       THIS COMMAND PROCESSOR REQUEST A DATASET AND THEN SEARCHES   *
*       THE QCB CHAIN TO FIND ALL ASIDS THAT ARE ALLOCATED TO IT.    *
*       IT THEN SEARCHES THE ASIDS TO FIND THE ACTUAL JOBNAME OR     *
*       USERID ASSOCIATED IT.                                        *
*                                                                    *
*       WRITTEN BY: RICHARD G NIKULA                                 *
*                   WASHINGTON STATE DEPT. OF TRANSPORTATION         *
*                                                                    *
*       REVISED FOR SPF BY BRIAN COOK 3/17/83                        *
*                                                                    *
         EJECT
***********************************************************************
*
* NOTE THE FOLLOWING ENTRY POINT LOGIC IS NON-STANDARD. IN PARTICULAR,
*      IT WILL NOT WORK WITH CALLED PL/I PROGRAMS.
*
***********************************************************************
ENQ      CSECT
         USING *,13,12
         B     72(,15)
         DC    17F'0'
         STM   14,12,12(13)   SAVE CALLING PGM'S REGISTERS
         LA    R2,0(,R15)     LOAD EPA IN R2 FOR WORK REGISTER
         ST    R2,8(R13)      LINK SAVE AREAS
         ST    R13,4(R2)      SAVE THE CALLER'S R13
*
SETBASES DS    0H
         LR    R13,R2         SET SAVE AREA AND BASE 1
         LR    R12,R2         SET
         A     R12,L4096          BASE 2
*
INITFLDS DS    0H
         MVI   ATABFL,C'0'    NO ACTIVE TABLE
         MVC   TABAREA(77),SPACES
         MVC   DSN(44),SPACES
         MVC   NAMEFLD(44),SPACES
         XC    ISPARMS(40),ISPARMS
*
SHOWAGIN DS    0H
         BAL   R7,SHOWENQ     DISPLAY THE RESOURCE STUFF
*
SHOWDONE DS    0H
*                                  DELETE THE TABLE VARIABLES
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (VDELETE,                                               X
               ENQLINEP),                                              X
               VL,MF=(E,ISPARMS)
*
*                                  DELETE THE TABLE VARIABLES
*                                  DELETE THE TABLE ITSELF
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (TBEND,                                                 X
               ENQTABLE),                                              X
               VL,MF=(E,ISPARMS)
         MVI   ATABFL,C'0'        NO ACTIVE TABLE
*
         L     R13,4(R13)     RESTORE THE CALLER'S R13
         LM    14,12,12(13)   RETURN TO OUR CALLER
         SR    15,15          SET RC=0
         BR    14             AND RETURN
*
L4096    DC    F'4096'
*
DUNWITIT DS    0H
         L     R7,ENQ7HOLD  SET THE RETURN ADDRESS
         BR    R7                   RETURN
         EJECT
SHOWENQ  DS    0H
         ST    R7,ENQ7HOLD SAVE THE RETURN ADDRESS
*
         CLI   ATABFL,C'0'        DO I HAVE AN ACTIVE TABLE?
         BE    ANOTAB             NOPE
*
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (VDELETE,                                               X
               ENQLINEP),                                              X
               VL,MF=(E,ISPARMS)
*
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (TBEND,                                                 X
               ENQTABLE),                                              X
               VL,MF=(E,ISPARMS)
         MVI   ATABFL,C'0'        NO ACTIVE TABLE
ANOTAB   DS    0H
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (VDEFINE,                                               X
               ENQLINEP,TABAREA,CHAR,L77),                             X
               VL,MF=(E,ISPARMS)
*
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (VDEFINE,                                               X
               ENQNAMEP,NAMEFLD,CHAR,L44),                             X
               VL,MF=(E,ISPARMS)
*
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (TBCREATE,                                              X
               ENQTABLE,                                               X
               NULLENT,                                                X
               DANAMLST,                                               X
               NOWRITE),                                               X
               VL,MF=(E,ISPARMS)
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (TBVCLEAR,                                              X
               ENQTABLE),                                              X
               VL,MF=(E,ISPARMS)
         MVI   ATABFL,C'1'        AN ACTIVE TABLE
*
*
BUILDHDR DS    0H
*
         CLI   DSN,C' '      HAS A NAME BEEN REQUESTED
         BNE   DOSEARCH           YUP, GO LOOK FOR IT
*
         MVC   TABAREA(77),FIRST  SET THE FIRST-TIME-THROUGH MSG
         BAL   R7,OUTMSG        ADD THE ENTRY TO THE TABLE
         B     SHOWSCRN         GO DISPLAY THE TABLE
*
FIRST    DC    CL77' ENTER THE DSN YOU WANT TO CHECK FOR ENQUEUE''S'
*
         EJECT
DOSEARCH DS    0H
         LA    R3,DSN                ADDRESS OF DATASET NAME
         L     R4,DSNLENG
  GQSCAN AREA=(WORKAREA,12288),SCOPE=SYSTEM,RESNAME=(SYSDSN,(3),(4))
         C     R15,=F'4'
         BE    NOTALC
         LTR   R15,R15
         BNZ   SYSERR
         LA    R2,WORKAREA
         USING RIB,R2
         CLC   RIBTRIBE,RIBNRIBE    WAS AREA BIG ENOUGH TO GET ALL ?
         BE    ALLFOUND             YES
         MVC   TABAREA(77),OVERFLOW
         BAL   R7,OUTMSG
ALLFOUND EQU   *
         LA    R10,LINE             RESET OUTPUT LINE POINTER
         LH    R1,RIBVLEN           LENGTH OF VARIABLE SECTION
         LA    R2,RIBEND(R1)        TO GET TO RIBE
         DROP  R2
         USING RIBE,R2
         TM    RIBERFLG,RIBETYPE    TEST FOR TYPE OF REQUEST
         BO    SHARED                 X'80' --> SHARED
         MVC   HEADER+18(3),=C'OLD' SHOW MESSAGE AS HAS IT OLD
SHARED   EQU   *
         MVC   TABAREA(77),HEADER
         BAL   R7,OUTMSG
ASLOOP   MVC   5(8,R10),RIBEJBNM    COPY JOBNAME TO PRINT LINE
         CLI   RIBEJBNM+3,C' '      JOB COULDN'T HAVE BLANK HERE
         BE    TSOSES               BUT TSO SESSION WOULD
         MVC   0(3,R10),=C'JOB'
         B     DISPLAY
TSOSES   MVC   0(4,R10),=C'USER'
DISPLAY  MVI   4(R10),C'-'           ISN'T THIS PRETTY
         LA    R10,18(R10)          INCREMENT POINTER REGISTER
         AP    COUNT,=PL1'1'        FOUR PER LINES FOR ALLOCATIONS
         CP    COUNT,=PL1'4'        IS PRETTIER
         BNE   NEXTASID
         MVC   TABAREA(77),LINE
         BAL   R7,OUTMSG
         LA    R10,LINE             RESET POINTER
         ZAP   COUNT,=PL1'0'
         MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE         CLEAR THE LIN
NEXTASID LA    R2,RIBEEND-RIBE(R2)    NEXT ENTRY
         CLC   RIBEJBNM,=8X'FF'       FOXESS MEANS END
         BE    LASTLN
         CLI   WFLAG,C'Y'            HAS WAIT MESSAGE BEEN WRITTEN
         BE    ASLOOP
         TM    RIBESFLG,RIBESTAT     IS THIS GUY WAITING?
         BZ    PUTWTG               YES, THEN ALL LOWER TASKS WAITING
         B     ASLOOP                NO, SO FAR EVERYTHING SHARING IT
PUTWTG   DS    0H
         MVC   TABAREA(77),LINE
         BAL   R7,OUTMSG
         MVI   WFLAG,C'Y'            SHOW THAT NO NEED TO CHECK WAITING
         LA    R10,LINE             RESET POINTER
         ZAP   COUNT,=PL1'0'
         MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE         CLEAR THE LIN
         MVC   TABAREA(77),WAITING
         BAL   R7,OUTMSG
         B     ASLOOP
LASTLN   DS    0H
         MVC   TABAREA(77),LINE
         BAL   R7,OUTMSG
         B     SHOWSCRN
*
SYSERR   DS    0H
         MVC   TABAREA(77),MESSAGE
         BAL   R7,OUTMSG
         B     SHOWSCRN
NOTALC   DS    0H
         MVC   TABAREA(77),MESS2
         BAL   R7,OUTMSG
         B     SHOWSCRN
PARSERR  DS    0H
         MVC   TABAREA(77),MESS3
         BAL   R7,OUTMSG
         B     SHOWSCRN
*
         EJECT
*
***********************************************************************
*
*   NOW SHOW THE ISPPLIB FORMAT AND THE TABLE ON THE SCREEN
*
***********************************************************************
*
*
SHOWSCRN DS    0H
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (TBTOP,                                                 X
               ENQTABLE),                                              X
               VL,MF=(E,ISPARMS)
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (TBDISPL,                                               X
               ENQTABLE,                                               X
               ENQDATAB),                                              X
               VL,MF=(E,ISPARMS)
*
***********************************************************************
*
*   DETERMINE WHETHER ANYTHING WAS ENTERED ON THE SCREEN
*
***********************************************************************
*
         C     R15,FZEROS     COMMAND ENTERED/LINE MODIFIED??
         BNE   DUNWITIT       NOPE
GOTSTUFF DS    0H
         OC    NAMEFLD(44),SPACES  UPPER-CASE IT
         MVC   DSN(44),NAMEFLD    AND SAVE IT
         MVC   NAMEFLD(44),SPACES  BLANK IT OUT
*
         LA    R1,DSN
         SR    R14,14          LENGTH
         LA    R15,44          LOOP CONTROL
*
DSNLOOP1 DS    0H
         CLI   0(R1),C' '      CHECK FOR END OF DSN
         BE    DSNGOTLN        GOT IT
*
         LA    R14,1(,14)      BUMP 1
         LA    R1,1(,1)        BUMP 1
         BCT   R15,DSNLOOP1
*
DSNGOTLN DS    0H
         ST    R14,DSNLENG
         B     SHOWAGIN       GO REPEAT THE SCREEN
         EJECT
*
***********************************************************************
*
*   ADD A LINE TO THE TABLE
*
***********************************************************************
*
OUTMSG   DS    0H
         ST    R7,OUT7HOLD    RETURN ADDRESS
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (VPUT,                                                  X
               DANAMLST),                                              X
               VL,MF=(E,ISPARMS)
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (TBADD,                                                 X
               ENQTABLE),                                              X
               VL,MF=(E,ISPARMS)
         MVI   TABAREA,C' '
         MVC   TABAREA+1(79),TABAREA
         L     R7,OUT7HOLD    RETURN ADDRESS
         BR    R7             RETURN TO OUR CALLER
         TITLE 'MISCELLANEOUS CONSTANTS'
         PRINT NOGEN
         LTORG
*
         DS    0F
P3ZERO   DC    PL3'+0'
ENQ7HOLD DS    F
OUT7HOLD DS    F
*
ISPLINK  DC    V(ISPLINK)
*
L44      DC    F'44'
FZEROS   DC    F'0'
F8       DC    F'8'
L77      DC    F'77'
*
*
TBADD    DC    C'TBADD    '
TBCREATE DC    C'TBCREATE '
TBDISPL  DC    C'TBDISPL  '
TBEND    DC    C'TBEND    '
TBGET    DC    C'TBGET    '
TBQUERY  DC    C'TBQUERY  '
TBSKIP   DC    C'TBSKIP   '
TBTOP    DC    C'TBTOP    '
TBVCLEAR DC    C'TBVCLEAR '
VDEFINE  DC    C'VDEFINE  '
VDELETE  DC    C'VDELETE  '
VGET     DC    C'VGET     '
VPUT     DC    C'VPUT     '
VREPLACE DC    C'VREPLACE '
*
NOWRITE  DC    C'NOWRITE  '
*
NULLENT  DC    C'()'
*
DANAMLST DC    C'('             DATASET ENQATE NAME LIST
ENQLINE  DC    C'ENQLINE )'     JOB INFO
ENQLINE2 DC    C'ENQLINE  '     JOB INFO
ENQLINEP DC    C'(ENQLINE )'    JOB INFO
ENQNAMEP DC    C'(NCMD    )'
*
SPACES   DC    CL80' '
CZEROS   DC    CL8'00000000'
*
CHAR     DC    C'CHAR    '
*
ENQDATAB DC    C'ENQDATAB'
ENQTABLE DC    C'ENQTABLE'
*
         EJECT
*
         TITLE 'REGISTER EQUATES'
***********************************************************************
*                                                                     *
*        REGISTER EQUATES                                             *
*                                                                     *
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         TITLE 'WORKING STORAGE AREAS'
*
ISPARMS  DS    10F            PARM LIST FOR ISPLINK
*
*     THE ISP TABLE FLAGS INDICATE NO ACTIVE TABLE (0), OR ONE EXISTS
ATABFL   DS    XL1     DO I HAVE A CURRENT "DISPLAY ACTIVE" TABLE
*
DSN      DC    CL44' '
DSNLENG  DC    F'0'
NAMEFLD  DC    CL44' '
*
TABAREA  DS    CL77
         DS    CL77
*
         LTORG
         EJECT
WFLAG    DC    C'N'
LINE     DC    CL76' '
COUNT    DC    PL2'0'
WAITING  DC    CL77'FOLLOWING ARE WAITING FOR DATASET:'
HEADER   DC    CL77'DATASET ALLOCATED SHR BY:'
MESSAGE  DC    CL77'SYSTEM ERROR, REENTER COMMAND'
MESS2    DC    CL77'DATA SET NOT ALLOCATED'
MESS3    DC    CL77'PARSE ERROR, REENTER COMMAND'
OVERFLOW DC    CL77'TOO MANY ALLOCATIONS ON DATASET - TABLE OVERFLOW'
ANS      DC    A(0)
SYSDSN   DC    CL8'SYSDSN'
WORKAREA DC    12288X'FF'         ENOUGH FOR LOTS OF ALLOCATIONS
         ISGRIB
         END
/*
//LKED1    EXEC PGM=HEWLF064,PARM=(XREF,LET,LIST,TERM),
//            COND=(4,LT,ASM1),REGION=1024K
//SYSLIN   DD   DSN=&&OBJSET,DISP=(OLD,DELETE)
//         DD   DDNAME=SYSIN
//SYSLIB   DD   DSN=SYS2.LINKLIB,DISP=SHR
//         DD   DISP=SHR,DSN=TECH.SERV.LOAD
//         DD   DISP=SHR,DSN=P.FIXDHEAD.ISPLOAD
//SYSLMOD  DD   DISP=SHR,DSN=TECH.SERV.LOAD
//SYSUT1   DD   DSN=&&SYSUT1,UNIT=VIO,SPACE=(1024,(50,20))
//SYSTERM  DD   SYSOUT=*
//SYSPRINT DD   SYSOUT=*
//SYSIN    DD   *
  NAME ENQ(R)
/*
