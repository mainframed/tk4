//BCOOKSVC  JOB (X0002,QCC,BCOOK),'X-BRIAN COOK',
//   MSGCLASS=X,
//   MSGLEVEL=(1,1),CLASS=T,NOTIFY=BCOOK
/*JOBPARM L=999
//*
//* TECH.SERV.BCOOK(JES2SVC5)
//*
//ASM     EXEC PGM=IEV90,REGION=1024K,
//             PARM='OBJECT,NODECK,TERM,RENT,XREF(SHORT)'
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.AMODGEN,DISP=SHR
//         DD  DISP=SHR,DSN=SYS1.HASPSRC
//SYSUT1   DD  SPACE=(CYL,(5,5)),
//             UNIT=SYSDA
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSPUNCH DD  DUMMY
//SYSLIN   DD  DSN=&&OBJSET,UNIT=SYSDA,SPACE=(CYL,(1,1)),
//             DISP=(MOD,PASS)
//SYSIN    DD  *
         TITLE 'IGC0024B  -  JES2 SPOOL INTERFACE SVC 242'
***********************************************************************
*                                                                     *
* TITLE -      JES2 SPOOL INTERFACE SVC                               *
*                                                                     *
* RELEASE -    1.5         JES SPOOL INTERFACE RELEASE                *
*                                                                     *
* AUTHOR -     MICHAEL LEE EMIGH                                      *
*              UNITED AIR LINES - EXOKF COMPUTER CENTER               *
*              1200 W. ALGONQUIN ROAD                                 *
*              ELK GROVE VILLAGE, ILLINOIS                            *
*              PHONE: 312-952-4371                                    *
*                                                                     *
* FUNCTION -   PROVIDES INTERFACE BETWEEN AN APPLICATION PROGRAM AND  *
*              JES2 FOR READING JES2 CHECKPOINT RECORDS AND READING   *
*              OR WRITING TO THE JES2 SPOOL DATASETS.                 *
*                                                                     *
* INPUT -      STANDARD SVC LINKAGE CONVENTIONS                       *
*              REGISTER 0 - FUNCTION PARAMETER REGISTER               *
*              REGISTER 1 - FUNCTION PARAMETER REGISTER               *
*              REGISTER 3 - ADDRESS OF CVT                            *
*              REGISTER 4 - ADDRESS OF TCB                            *
*              REGISTER 5 - ADDRESS OF SVRB                           *
*              REGISTER 6 - ADDRESS OF SVC ENTRY POINT                *
*              REGISTER 7 - ADDRESS OF ASCB                           *
*              REGISTER 15 - FUNCTION CODE:                           *
*                                                                     *
*                                  FUNCTION CODE = 0   --> SSVT/SJB   *
*                                  FUNCTION CODE = 1   --> CMD        *
*                                  FUNCTION CODE = 3   --> READ SPOOL *
*                                  FUNCTION CODE = 5   --> READ JCT   *
*                                                                     *
* OUTPUT -     REGISTER 0  - FUNCTION DEPENDENT DATA                  *
*              REGISTER 1  - FUNCTION DEPENDENT DATA                  *
*              REGISTER 15 - RETURN CODE FROM FUNCTION AS FOLLOWS     *
*                 0 - NORMAL RETURN FROM FUNCTION                     *
*                 4 - JES2 NOT ACTIVE                                 *
*                 8 - INVALID FUNCTION CODE                           *
*             >= 12 - FUNCTION DEPENDENT CODE                         *
*                                                                     *
*                                                                     *
* ATTRIBUTES - REENTERANT, REUSABLE, REFRESHABLE                      *
*                                                                     *
* NOTES -      THIS CODE IS JES2 RELEASE DEPENDENT.  CURRENT JES2     *
*              RELEASE SUPPORTED IS 4.1 AND NJE R3.                   *
*                                                                     *
*                                                                     *
***********************************************************************
*  CHANGE LOG                                                         *
*                                                                     *
*  1/13/84     CHANGED SVC NUMBER TO 242, REVISED DSECTS,             *
*              UPDATED FOR JES2 SP 1.3.0. CHANGED         BRIAN COOK  *
*              COMMAND INTERFACE TO ALLOW MVS COMMANDS.          MNP  *
*                                                                     *
*  1/19/84     CHANGED JQE/JOE ACCESS TO USE CROSS                    *
*              MEMORY SERVICES INSTEAD OF SRB. ALSO       BRIAN COOK  *
*              DELETED THE READ JCT AND SSVT FUNCTIONS.          MNP  *
*                                                                     *
*  1/26/84     REMOVED GETMAIN FOR SPOOL I/O, INSTEAD                 *
*              USE PASSED PARAMETER; R0 MUST POINT        BRIAN COOK  *
*              TO WORK AREA, R1 CONTAINS MTTR.                   MNP  *
*                                                                     *
*  2/05/84     PUT ALL JOB ENTRY FORMATTING FOR JDF                   *
*              INTO THE SVC TO REDUCE OVERHEAD.           BRIAN COOK  *
*                                                                MNP  *
*                                                                     *
*  2/08/84     ADDED FUNCTION 7, SUB-SYSTEM REQUEST                   *
*              INTERFACE (IEFSSREQ).                      BRIAN COOK  *
*                                                                MNP  *
*                                                                     *
*  4/10/84     ADDED SYSEVENT DONTSWAP   TO ATTEMPT TO                *
*              AVOID ABEND 053'S.                         BRIAN COOK  *
*                                                                MNP  *
*                                                                     *
*                                                                     *
***********************************************************************
         TITLE 'IGC0024B  -  JES2 SPOOL INTERFACE SVC 242'
IGC0024B CSECT                     JES2 SPOOL INTERFACE SVC
         USING *,12
         LR    R12,R6              LOAD BASE ADDRESS
         USING RBSECT,R5           SET SVRB ADDRESSIBILITY
         USING CVT,R3              SET CVT ADDRESSIBILITY
         USING TCB,R4              SET TCB ADDRESSIBILITY
         USING ASCB,R7             SET ASCB ADDRESSIBILITY
         USING IOBNIOBA,R8         SET BUFFER ADDRESSIBILITY
         XC    JIRETURN(JISL),JIRETURN CLEAR SVRB WORK AREA
         STM   R14,R1,JIRETURN     SAVE RETURN ADDRESS AND PARM REGS
*
         CLI   JISR15+3,1          TEST
         BE    CMD                 FUNCTION CODE = 1   --> CMD
         CLI   JISR15+3,4          TEST
         BE    SSREQ               FUNCTION CODE = 4   --> SS REQUEST
*
         MVI   AXLIST+1,1          INITIALIZE AXLIST
         SLR   R1,R1               CLEAR SSVT ADDRESS REG
         SLR   R0,R0               CLEAR SJB ADDRESS
*
         L     R6,TCBJSCB          POINT TO JSCB
         LR    R15,R6              COPY JSCB ADDRESS
         L     R15,JSCBSSIB-IEZJSCB(,R15) LOAD SSIB ADDRESS
         L     R15,SSIBSUSE-SSIBEGIN(,R15) LOAD SJB ADDRESS
         LA    R0,SJBDCB-SJBDSECT(,R15) LOAD SJB DCB ADDRESS
         ST    R0,SVCDCB           STORE DCB ADDRESS IN RB SAVE
*
         L     R6,JSCBSSIB-IEZJSCB(,R6) POINT TO SSIB
         USING SSIB,R6             SSIB ADDRESSIBILITY
         L     R2,CVTJESCT         POINT TO SUBSYSTEM CNTL TBL
         USING JESCT,R2            JESCT ADDRESSIBILITY
         LA    R2,JESSSCT-(SSCTSCTA-SSCT) POINT TO SSCT HEAD
         USING SSCT,R2             SSCT ADDRESSIBILITY
         SPACE 2
         LA    R15,4               SET JES2 NOT ACTIVE ERROR CODE
INIT0    DS    0H                  SEARCH FOR JES2 SSCT
         ICM   R2,15,SSCTSCTA      POINT TO NEXT SSCT
         BZR   R14                 IF ZERO THEN ERROR
         CLC   SSCTSNAM,SSIBSSNM   JES SSCT?
         BNE   INIT0               NO, THEN LOOP
         ICM   R6,15,SSCTSSVT      LOAD SSVT ADDRESS
         BZR   R14                 IF ZERO THEN JES2 NOT ACTIVE
         USING SSVT,6              JES2 SSVT ADDRESSIBILITY
*
         MVC   SVCNUMDA(1),$SVNUMDA NUMBER OF SPOOL EXTENTS
         MVC   SVCBFSIZ(2),$SVBFSIZ BUFFER SIZE
         MVC   SVCTED(4),$SVTED    TRACK EXTENT TABLE
         MVC   SVCHCT(4),$SVHCT
*
         LA    R15,8               SET FUNCTION ERROR CODE
         LM    R0,R1,JISR0         RELOAD PARAMETER REGISTERS
         CLI   JISR15+3,1          TEST
         BE    CMD                 FUNCTION CODE = 1   --> CMD
         CLI   JISR15+3,2          TEST
         BE    GETJQES             FUNCTION CODE = 2   --> XMEM JQE/JOE
         CLI   JISR15+3,3          TEST
         BE    RDSPOOL             FUNCTION CODE = 3   --> READ SPOOL
         CLI   JISR15+3,4          TEST
         BE    SSREQ               FUNCTION CODE = 4   --> SS REQUEST
         BR    R14                 UNIDENTIFIED FUNCTION CODE
         EJECT
ERROR    DS    0H                  ERROR RETURN
         STM   R15,R1,JISR15       SAVE PARAMETER REGISTERS
*
EXIT0    DS    0H            EXIT SVC
         LM    R14,R1,JIRETURN     RELOAD REGISTERS
         BR    R14                 RETURN
JESNOTUP DS    0H            EXIT SVC
         LM    R14,R1,JIRETURN     RELOAD REGISTERS
         LA    R15,12              SET RETURN CODE
         BR    R14                 RETURN
   TITLE 'IGC0024B - FUNCTION 1 - MVS/JES2 COMMAND INTERFACE'
***********************************************************************
*                                                                     *
* TITLE -      FUNCTION 1 - MVS/JES2 COMMAND INTERFACE                *
*                                                                     *
* FUNCTION -   ISSUE A MVS/JES2 COMMAND VIA SVC 34.                   *
*                                                                     *
* INPUT -      STANDARD LINKAGE CONVENTIONS                           *
*              REGISTER 0 - CONSOLE IDENTIFICATION                    *
*              REGISTER 1 - ADDRESS OF MVS/JES2 COMMAND TEXT          *
*                                                                     *
* OUTPUT -     RETURN CODE TO APPLICATION PROGRAM                     *
*              REGISTER 15 CONTAINS RETURN CODE FROM SVC 34.          *
*                                                                     *
*                                                                     *
* NOTES -      THIS ROUTINE WILL ISSUE ANY MVS OR JES2 COMMAND.       *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
CMD      DS    0H                  ISSUE MVS/JES2 COMMAND
         SVC   34                  ISSUE COMMAND SCHEDULER SVC
         L     R14,JIRETURN        RELOAD RETURN ADDRESS
         BR    R14                 RETURN
*
         TITLE 'IGC0024B - FUNCTION 2 - XMEM JQE/JOE S'
***********************************************************************
*                                                                     *
* TITLE -      FUNCTION 2 - COPY JQES/JOE'S FROM HCT TO USER AREA     *
*                                                                     *
* INPUT -      REGISTER 0 - ADDRESS OF OUTPUT JOE'S                   *
*              REGISTER 1 - ADDRESS OF OUTPUT JQE'S                   *
*              REGISTER 3 - ADDRESS OF CVT                            *
*              REGISTER 4 - ADDRESS OF TCB                            *
*              REGISTER 5 - ADDRESS OF SVRB                           *
*              REGISTER 6 - ADDRESS OF JES2 SSVT                      *
*              REGISTER 7 - ADDRESS OF ASCB                           *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
GETJQES  DS    0H                  READ JES2 JCT
*
         BAL   R7,AXSETUP          SET UP FOR JES2 XMEM SERVICES
*
*
         L     R4,MYJQES
         L     R3,JISR1
         L     R1,FOURTYK
JQELOOP  DS    0H
         SLR   R0,R0                   SET STORAGE KEY
         MVCP  0(R1,R3),0(R4),R0       MOVE JQE'S
         BZ    SETJOES                 ALL DONE
*
         A     R4,F256                 BUMP "FROM" ADDRESS
         A     R3,F256                 BUMP "TO"   ADDRESS
         S     R1,F256                 DECREMENT LENGTH
         B     JQELOOP                 GO GET NEXT
*
SETJOES  DS    0H
*
         L     R4,MYJOES
         L     R3,JISR0
         L     R1,FOURTYK
JOELOOP  DS    0H
         SLR   R0,R0                   SET STORAGE KEY
         MVCP  0(R1,R3),0(R4),R0       MOVE JQE'S
         BZ    DONEJOES                ALL DONE
*
         A     R4,F256                 BUMP "FROM" ADDRESS
         A     R3,F256                 BUMP "TO"   ADDRESS
         S     R1,F256                 DECREMENT LENGTH
         B     JOELOOP                 GO GET NEXT
*
FOURTYK  DC    F'40960'
F256     DC    F'256'
*
DONEJOES DS    0H
*
*
         BAL   R7,AXDROP           DROP JES2 XMEM SERVICES
*
         B     EXIT0
         TITLE 'IGC0024B - FUNCTION 3 - READ JES2 SPOOL BLOCK'
***********************************************************************
*                                                                     *
* TITLE -      FUNCTION 3 - READ JES2 SPOOL BLOCK                     *
*                                                                     *
* FUNCTION -   READ A JES2 BLOCK FROM JES2 SPOOL DATASET.             *
*                                                                     *
* INPUT -      REGISTER 0 - BUFFER ADDRESS (4K) IN CALLER'S REGION    *
*              REGISTER 1 - TRACK ADDRESS OF BLOCK TO BE READ (MTTR)  *
*              REGISTER 3 - ADDRESS OF CVT                            *
*              REGISTER 4 - ADDRESS OF TCB                            *
*              REGISTER 5 - ADDRESS OF SVRB                           *
*              REGISTER 6 - ADDRESS OF JES2 SSVT                      *
*              REGISTER 7 - ADDRESS OF ASCB                           *
*                                                                     *
*                                                                     *
* OUTPUT -     REGISTER 15 - RETURN CODE                              *
*                 0 - NORMAL COMPLETION                               *
*                 4 - JES2 NOT ACTIVE                                 *
*                 8 - FUNCTION CODE ERROR                             *
*                12 - INVALID EXTENT TRACK EXTENT                     *
*                16 - INVALID TRACK ADDRESS                           *
*                20 - I/O ERROR                                       *
*                24 - SVC FAILURE                                     *
*                                                                     *
*                                                                     *
* BUFFER OUTPUT -                                                     *
*              OFFSET    LENGTH    DESCRIPTION                        *
*               +00         4      FILLER                             *
*               +04         4      FILLER                             *
*               +08         4      POINTER TO FIRST DATA BYTE         *
*                                                                     *
*                                                                     *
* NOTES -      NONE                                                   *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
RDSPOOL  DS    0H                  READ JES2 SPOOL
         LA    R15,12              ASSUME EXTENT INVALID
         CLM   R1,8,SVCNUMDA       CHECK FOR VALID EXTENT
         BNLR  R14                 IF NOT LOW THEN INVALID
         SR    R2,R2               CLEAR BUFFER LENGTH REGISTER
         ICM   R2,3,SVCBFSIZ       LOAD BUFFER SIZE
         BAL   R11,GETBUF          LINK AND GET BUFFER
         L     R0,JISR1            RELOAD MTTR
         BAL   R11,SETIOBS         LINK AND SET IOBSEEK ADDRESS
         BAL   R11,EXCP            READ A SPOOL BLOCK
         LA    R2,BUFSTART         LOAD BLOCK START ADDRESS
         LA    R1,1                LOAD BUFFER LENGTH
         LA    R0,4095(,R1)                            4096
         L     R1,JISR1            LOAD BUFFER  ADDRESS
         STM   R0,R2,IOBNIOBA      STORE IN BLOCK
         SLR   R15,R15             SET NORMAL RC
         L     R14,JIRETURN        RELOAD RETURN ADDRESS
         BR    R14                 RETURN
   TITLE 'IGC0024B - FUNCTION 4 - SUB-SYSTEM REQUEST INTERFACE'
***********************************************************************
*                                                                     *
* TITLE -      FUNCTION 4 - JES2 SUB-SYSTEM REQUEST INTERFACE         *
*                                                                     *
* FUNCTION -   ISSUE A MVS/JES2 COMMAND VIA IEFJSSREQ                 *
*                                                                     *
* INPUT -      STANDARD LINKAGE CONVENTIONS                           *
*              REGISTER 1 - ADDRESS OF SSREQ PARM LIST                *
*                                                                     *
* OUTPUT -     RETURN CODE TO APPLICATION PROGRAM                     *
*              REGISTER 15 CONTAINS RETURN CODE FROM IEFJSSREQ.       *
*                                                                     *
*                                                                     *
* NOTES -      THIS ROUTINE WILL ISSUE ANY SUBSYSTEM REQUEST.         *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
SSREQ    DS    0H                  ISSUE MVS/JES2 COMMAND
*
***                                                                 ***
**     IEFSSREQ                                                      **
***                                                                 ***
         L     R15,16              PICK UP CVT
         L     R15,296(,15)        PICK UP JESCT
         L     R15,20(,15)         PICK UP JESSSREQ
         L     R14,JIRETURN        RELOAD RETURN ADDRESS
         BR    R15                 GO DO IT
*
         L     R14,JIRETURN        RELOAD RETURN ADDRESS
         BR    R14                 GO DO IT
*
*
*
   TITLE 'IGC0024B - SUBROUTINE - SET UP THE AX FOR JES2 XMEM'
*
*
*
*
AXSETUP  DS    0H                  READ JES2 JCT
*                                      PICK UP THE JES2 ASID NUMBER
*
         SYSEVENT DONTSWAP
*
         USING PSA,0
         L     R1,FLCCVT
         USING CVT,1
         L     R14,CVTJESCT   WHILE I'M HERE, SAVE THIS
         USING JESCT,14
         L     R1,CVTASVT
         USING ASVT,1
         L     R2,ASVTMAXU  MAXIMUM NUMBER OF ADDRESS SPACES
         LA    R3,ASVTENTY  ADDRESS OF FIRST ENTRY
         DROP  1
         USING ASCB,15
ASCBLOOP DS    0H
         L     R15,0(,R3)   SET ASCB ADDRESS
         L     R4,ASCBJBNS  POINT TO JOB NAME
         CLC   0(5,R4),=C'JES2 '     IS THIS JES2
         BE    GOTJES2A     YES
         LA    R3,4(,R3)    BUMP ASVT LOOP
         BCT   R2,ASCBLOOP
*
         B     JESNOTUP
*
GOTJES2A DS    0H
         LH    R4,ASCBASID
*
         L     R1,SVCHCT               PICK UP THE JES2 HCT
         USING HCTDSECT,1
         LA    R2,$JOBQPTR             START OF JQE'S
         LA    R3,$JOTABLE             START OF JOE'S
         DROP  1
*
*                                      SET UP FOR CROSS MEMORY MOVE
*
         AXRES AXLIST=AXLIST           RESERVE AN AX
*
         LA    R0,1                    SET OUR AX TO 1
         AXSET AX=(0)
*
         SSAR  R4                      SET 'JES2' AS SECONDARY
         SLR   R0,R0                   SECONDARY KEY
         LA    R1,4                    TRUE LENGTH
         MVCP  MYJQES(R1),0(R2),R0     SET JQE START ADDRESS
         SLR   R0,R0                   SECONDARY KEY
         LA    R1,4                    TRUE LENGTH
         MVCP  MYJOES(R1),0(R3),R0     SET JOE START ADDRESS
*
         BR    R7                      RETURN
   TITLE 'IGC0024B - SUBROUTINE - RESET THE AX FOR JES2 XMEM'
AXDROP   DS    0H
*---------------------------------------------------------------------*
*                                                                     *
*        RESET PRIMARY AND SECONDARY ADDRESS SPACES TO BE THE SAME.   *
*                                                                     *
*---------------------------------------------------------------------*
*
         EPAR  R1                 EXTRACT PRIMARY ASN
         SSAR  R1
*
         SYSEVENT OKSWAP
*
         BR    R7                 GO OUT
*
         TITLE 'IGC0024B - READ/WRITE EXCP ROUTINE'
***********************************************************************
*                                                                     *
* TITLE -      READ OR WRITE ROUTINE                                  *
*                                                                     *
* FUNCTION -   ISSUE EXCP TO READ FROM OR WRITE TO THE JES2 SPOOL     *
*              DATASETS.  FOR I/O ERRORS, LOAD APPROPRIATE STATUS     *
*              INFORMATION TO BE PASSED BACK TO THE CALLING ROUTINE.  *
*                                                                     *
***********************************************************************
         SPACE 2
EXCP     DS    0H                  ISSUE EXCP TO READ OR WRITE
         XC    IOBNECB,IOBNECB     CLEAR ECB
         EXCP  IOBSTDRD            READ SPOOL BLOCK
         WAIT  ECB=IOBNECB         WAIT FOR I/O TO COMPLETE
         CLI   IOBNECB,X'7F'       NORMAL COMPLETION?
         BER   R11                 IF NORMAL THEN RETURN
         LA    R15,16              ASSUME TRACK ADDRESS ERROR
         CLI   IOBNECB,X'42'       TEST ASSUMPTION
         BE    ERROR               IF CORRECT THEN SKIP CODES
         L     R1,IOBCSW-1         LOAD LAST CCW ADDRESS + 8
         LA    R1,0(R1)            CLEAR HIGH BYTE
         SH    R1,=H'8'            POINT TO LAST CCW
         ICM   R0,8,0(R1)          INSERT OPERATION CODE
         ICM   R0,4,IOBFLAG3       INSERT IOB FLAG3 CODE
         ICM   R0,3,IOBSENS0       INSERT IOB SENSE BYTES
         ST    R0,IOBCSW-1         STORE STATUS
         LD    R0,IOBCSW-1         LOAD STATUS
         L     R1,IOBNECB          LOAD ERROR CODE
         LA    R15,20              SET I/O ERROR RC
         B     ERROR               GO THRU ERROR RETURN
     TITLE 'IGC0024B - CONVERT MTTR AND SET IOB SEEK ADDRESS'
***********************************************************************
*                                                                     *
* TITLE -      CONVERT MTTR AND SET IOB SEEK ADDRESS                  *
*                                                                     *
* FUNCTION -   CONVERT MTTR TO AN ABSOLUTE TRACK ADDRESS AND SET      *
*              THE IOB SEEK ADDRESS. FOR RPS DEVICES, THE SECTOR      *
*              IS COMPUTED AND A SET SECTOR CCW IS CONSTRUCTED.       *
*                                                                     *
***********************************************************************
         SPACE 2
SETIOBS  DS    0H                 SET IOB SEEK ADDRESS
         LA    R15,16             ASSUME INVALID TRACK ADDRESS
         LR    R3,R0               COPY MTTR
         LA    R0,0(,R3)           MAKE R0 0TTR
         XR    R3,R0               MAKE R3 M000
         ST    R3,IOBM             STORE EXTENT IN IOB
         STC   R0,IOBR             STORE RECORD NUMBER IN IB
         SRL   R3,24               SHIFT EXTENT NUMBER
         MH    R3,=AL2(TEDSIZ)     CALCULATE TRACK EXTENT ADDRESS
         L     R9,SVCTED           LOAD TRACK EXTENT TBL ADDRESS
         ALR   R9,R3               COMPUTE TED ADDRESS
         USING TEDDSECT,R9         TED ADDRESSIBILITY
         LR    R2,R0               COPY 0TTR
         SRDL  R2,40               SET TT IN R2. R3 FOR DIVIDE
         ICM   R0,15,TNTC          GET NUMBER OF TRACKS/CYLINDERS
         BZ    ERROR               IF ZERO THEN SPOOL PACK ABSENT
         DR    R2,R0               ELSE COMPUTE CC HH
         STCM  R3,3,IOBCC          STORE CC IN IOB
         STCM  R2,3,IOBHH          STORE HH IN IOB
         MVI   CCW1,X'03'          ASSUME NO RPS
         ICM   R2,15,TRPS          POINT TO EXT RPS TBL
         BZR   R11                 IF ZERO POINTER THEN NO RPS
         SLR   R3,R3               ELSE ZERO REGISTER FOR INSERT
         IC    R3,IOBR             INSERT RECORD NUMBER FROM IOB
         IC    R3,0(R3,R2)         GET CORRES SECTOR NUMBER
         STC   R3,CCW1+5           SET SECTOR DATA
         MVI   CCW1,X'23'          SET SET-SECTOR COMMAND
         BR    R11                 RETURN
         TITLE 'IGC0024B - GET AND INITIALIZE BUFFER   '
***********************************************************************
*                                                                     *
* TITLE -      GET AND INITIALIZE BUFFER                              *
*                                                                     *
* FUNCTION -   1) CLEAR BUFFER TO ZERO AND INITIALIZE INPUT/OUTPUT    *
*              BLOCK.                                                 *
*              2) CONSTRUCT CHANNEL PROGRAM.                          *
*                                                                     *
***********************************************************************
         SPACE 2
GETBUF   DS    0H                  GET BUFFER
         L     R8,JISR0          LOAD BUFFER ADDRESS REGISTER
         LR    R0,R8               SET ADDRESS FOR CLEAR
         LA    R1,4095             SET LENGTH FOR CLEAR
         SR    R15,R15             SET LENGTH TO ZERO
         MVCL  R0,R14              CLEAR BUFFER TO ZEROS
         MVI   IOBFLAG1,IOBCMDCH+IOBUNREL CMD CHAINING AND UNRELATED
         LA    R0,IOBNECB          LOAD ECB ADDRESS
         ST    R0,IOBECBPT         STORE IN IOB
         MVC   IOBDCBPT(4),SVCDCB  STORE DCB ADDRESS IN IOB
         LA    R0,IOBSEEK+8        LOAD CHANNEL PGM ADDRESS
         ST    R0,IOBSTART         STORE CP ADDRESS IN IOB
         LA    R0,CCW2             LOAD SEARCH CCW ADDRESS
         ST    R0,CCW3             STORE IN CCW3 FOR TIC
         LA    R0,BUFSTART         LOAD BUFSTART ADDRESS
         ST    R0,CCW4             STORE IN READ CCW
         LA    R0,IOBSEEK+3        LOAD SEARCH ID ADDRESS
         ST    R0,CCW2             STORE IN SEARCH ID CCW
         LA    R0,CCW1+5           LOAD SECTOR ADDRESS
         ST    R0,CCW1             STORE IN RPS CCW
         STH   R2,CCW4+6           STORE BLOCK LENGTH IN READ CCW
         OC    CCW1(LCP),CP        OR IN REST OF CHANNEL PGM
         BR    R11                 RETURN TO CALLING ROUTINE
         EJECT
      TITLE 'IGC0024B - CHANNEL PROGRAMS AND MISCELLANEOUS CONSTANTS'
FZERO    DC    F'0'
SPACES   DC    CL80' '
FPLUS1   DC    F'1'
EDMASK3P DC    XL4'2020204B'
EDMASK3  DC    XL3'202020'
EDMASK10 DC    XL10'40206B2020206B202120'
CP       DS    0D                  CHANNEL PROGRAM
CPCCW1   CCW   X'03',0,SILI+CC,1   NOP
CPCCW2   CCW   X'31',0,SILI+CC,5   SEARCH ID EQUAL
CPCCW3   CCW   X'08',0,SILI+CC,1   TIC
CPCCW4   CCW   X'06',0,SILI,0      READ DATA
         SPACE
LCP      EQU   *-CP                LENGTH OF CHANNEL PGM
         SPACE 3
         SPACE 3
         LTORG
         TITLE 'IGC0024B - MISCELLANEOUS DSECTS'
         CVT   DSECT=YES
         SPACE 2
         IKJTCB
         SPACE 2
         IEFJESCT
         SPACE 2
         IEFJSSIB
         SPACE 2
         IEZJSCB
         SPACE 2
         IHAASVT
         EJECT
         PRINT ON
         IHARB
         SPACE 2
         TITLE 'IGC0024B - SVRB SAVE AREA MAP'
         ORG   RBEXSAVE
         DS    0CL48         MAX LENGTH OF WORK AREA
JIRETURN DS    A             SVC EXIT ADDRESS
JISR15   DS    A             ENTRY REGISTER 15
JISR0    DS    A             ENTRY REGISTER 0
JISR1    DS    A             ENTRY REGISTER 1
*
MYJQES   DS    F                       JES JQE ADDRESSES
AXLIST   DS    F             AX
MYJOES   DS    F                       JES JOE ADDRESSES
SVCTED   DS    F             TRACK EXTENT TABLE
*
SVCHCT   DS    F             HCT ADDRESS
SVCDCB   DS    F             SPOOL DCB
DWORD    DS    F             START OF DOUBLE-WORD WORK AREA
SVCBFSIZ DS    H             BUFFER SIZE
SVCNUMDA DS    XL1           NUMBER OF EXTENTS IN SPOOL
         DS    XL1
*
JISL     EQU   *-JIRETURN    LENGTH OF SVRB WORK AREA
         COPY $HASPGEN
         SPACE 2
LPRFX    EQU   X'58'              BUFFER PREFIX LENGTH
CD       EQU   X'80'              DATA CHAIN
CC       EQU   X'40'              COMMAND CHAIN
SILI     EQU   X'20'              SUPPRESS INCORRECT LENGTH
SKIP     EQU   X'10'              SKIP DATA TRANSFER
PCI      EQU   X'08'              PROGRAM CONTROLLED INTERRUPTION
IDA      EQU   X'04'              INDIRECT ADDRESSING
         SPACE 2
         IEZIOB
         SPACE 2
         ORG   IOBSEEK+8
CHANPGM  DS    0D                  CHANNEL PGM AREA
CCW1     DS    D                   SET SECTOR / READ HA
CCW2     DS    D                   SEARCH ID EQUAL
CCW3     DS    D                   TIC
CCW4     DS    D                   READ KEY AND DATA
COUNT    DS    D                   DA COUNT FIELD
         SPACE 2
BUFDSECT EQU   IOBNIOBA            EQUATE BUFDSECT
         SPACE
         ORG   IOBNIOBA+LPRFX      ORG PAST PREFIX
         SPACE 1
BUFSTART DS    0D                  BUFFER START
         SPACE 3
*
IGC0024B CSECT ,
         PRINT OFF
        $SYSPARM (OFF,NOGEN,NODATA,NO,NO)
         $PSA  LIST=NO             GENERATE OS PSA DSECT
         $ASCB LIST=NO
         $CSCB LIST=NO
         $TED  DOC=NO
         $SSOB (SO,CS,JS,RQ,RR),LIST=NO     OS SSOB DSECT
         $DCB  LIST=NO             GENERATE OS DCB DSECT
         $ACB  LIST=NO             GENERATE OS ACB DSECT
         $DEB  LIST=NO             GENERATE OS DEB DSECT
         $NEL  LIST=NO             GENERATE OS NEL DSECT
         $SDWA LIST=NO             GENERATE OS SDWA DSECT
         $TGM  DOC=NO              GENERATE HASP TGM DSECT
         $TAB  DOC=NO              GENERATE HASP TAB DSECT
         $SVT  DOC=NO              GENERATE HASP SSVT DSECT
         $SJB  DOC=NO              GENERATE HASP SJB DSECT
         $PCE  DOC=NO              GENERATE HASP PCE DSECT
         $JOT  DOC=NO              GENERATE HASP JOT DSECT
         $KIT  DOC=NO              GENERATE HASP KIT DSECT
         $QSE  DOC=NO              GENERATE HASP QSE DSECT
         $IOT  DOC=NO              GENERATE HASP IOT DSECT
         $CAT  DOC=NO              GENERATE HASP CAT DSECT
         $SCAT DOC=NO              GENERATE HASP SCAT DSECT
         $RAT  DOC=NO              GENERATE HASP RAT DSECT
         $DCT  DOC=NO              GENERATE HASP DCT DSECT
         $NIT  DOC=NO              GENERATE HASP NIT DSECT
         $TQE  DOC=NO              GENERATE HASP TQE DSECT
         $PIT  DOC=NO              GENERATE HASP PIT DSECT
         $PSO  DOC=NO              GENERATE HASP PSO DSECT
         $LRC  DOC=NO              GENERATE HASP LRC DSECT
         $MITETBL DOC=NO           GENERATE HASP MITETBL DSECT
         $MIT  DOC=NO              GENERATE HASP MIT DSECT
         $RDRWORK DOC=NO           GENERATE HASP RDRWORK DSECT
         $CNVWORK DOC=NO           GENERATE HASP CNVWORK DSECT
         $PSOWORK DOC=NO           GENERATE HASP PSOWORK DSECT
         $COMWORK DOC=NO           GENERATE HASP COMWORK DSECT
         $SSCT LIST=NO             GENERATE OS SSCT DSECT
         $TRP  DOC=NO              GENERATE HASP TRP DSECT
         $TTE  DOC=NO              GENERATE HASP TTE DSECT
         $XIT  DOC=NO              GENERATE HASP XIT DSECT
         $CMB  DOC=NO              GENERATE HASP CMB DSECT
         $EXITPL DOC=NO            GENERATE HASP EXITPL DSECT
*        PRINT GEN
         $HCT  DOC=NO
         $JQE  DOC=NO
         $JOE  DOC=NO              GENERATE HASP JOE DSECT
         $JCT  DOC=NO
         $NHD  DOC=NO
         $PDDB DOC=NO              GENERATE HASP PDDB DSECT
         $KEYS DOC=NO
         $TEXT DOC=NO
         END
/*
//LKED    EXEC PGM=HEWLF064,PARM=(XREF,LET,LIST,NCAL,TERM),
//             COND=(4,LT,ASM),REGION=1024K
//SYSLIN   DD  DSN=&&OBJSET,DISP=(OLD,PASS)
//         DD  DDNAME=SYSIN
//SYSLIB   DD  DSN=SYS2.LINKLIB,DISP=SHR
//SYSLMOD  DD  DISP=SHR,UNIT=3380,VOL=SER=TSTRES,
//             DSN=SYS1.LPALIB
//SYSUT1   DD  DSN=&&SYSUT1,UNIT=VIO,SPACE=(1024,(50,20))
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
     NAME IGC0024B(R)
/*
