//BCOOKRTR  JOB (X9999,QCC,BCOOK),'X-BRIAN COOK',
//   MSGCLASS=X,
//   MSGLEVEL=(1,1),CLASS=X,NOTIFY=BCOOK
/*JOBPARM L=999
//ASM     EXEC PGM=IEV90,REGION=2048K,PARM='OBJECT,NODECK,TERM'
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.AMODGEN,DISP=SHR
//SYSUT1   DD  SPACE=(CYL,(5,5)),
//             UNIT=SYSDA
//SYSUT2   DD  SPACE=(CYL,(5,5)),
//             UNIT=SYSDA
//SYSUT3   DD  SPACE=(CYL,(5,5)),
//             UNIT=SYSDA
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSPUNCH DD  DUMMY
//SYSGO    DD   DSN=&&OBJSET,UNIT=SYSDA,SPACE=(CYL,(1,1)),
//             DISP=(MOD,PASS)
//SYSIN    DD  *
         TITLE 'RTR - REMOTE EXTERNAL WRITER'
***********************************************************************
*
*    CHANGES MADE BY BRIAN COOK, 6/2/82
*        PARAMETER LIST SPECIFICATION OF JOBNAME, JOBID, DSID, CLASS
*        CHANGED OUTPUT FILE TO QSAM, SYSOUT=A
*        REMOVED FORM AND DEST FROM SSOB
*        PRINTS ONE DSID AND GOES TO END OF JOB
*
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         TITLE 'RTR - START-UP'
RTR      CSECT
         USING *,12,11,10
         STM   R14,R12,12(R13)    SAVE INPUT REGS
*
         LR    R12,R15            SET BASE REGISTER 1
         LA    R2,1
         LA    R11,4095(R2,R12)   SET BASE REGISTER 2
         LA    R10,4095(R2,R11)   SET BASE REGISTER 3
*
         L     R2,0(R1)            GET PARM
         B     PROLOG
         DC    C'RTR 02/03/82 BRIAN COOK'
PROLOG   DS    0H
         GETMAIN R,LV=12200       GET MY SAVE AREA ADDRESS
         LR    R9,R1             SAVE GETMAIN POINTER
         ST    R13,4(R9)         STORE BACKWARDS POINTER
         ST    R9,8(R13)         STORE FORWARD POINTER
         LR    R13,R9
*
         USING DSA,R13
*
PICKUPP  DS    0H
*
**       PICK UP PARMS
*
         LH    R3,0(,R2)          PARM LENGTH
         LTR   R3,3               IF NO PARMS
         BZ    JUSTGOUT             CAN'T DO ANYTHING
*
         LA    R2,2(,R2)          TO FIRST PARM
*
PARMLOOP DS    0H
*
         CLC   0(2,R2),=C'J='      IS FIRST PARAMETER "J="
         BNE   BADPKEY
*
         CLI   6(R2),C','         RIGHT LENGTH
         BNE   BADPFOR
*
         PACK  DOUBLEWD,2(4,R2)    JES JOB NUMBER
         CVB   R1,DOUBLEWD
         STH   R1,HJID         SAVE IT
*
         LA    R2,7(,2)            BUMP TO DSID
*
         CLC   0(2,R2),=C'D='      IS NEXT PARAMETER "D="
         BNE   BADPKEY
*
         PACK  DOUBLEWD,2(3,R2)     DSID
         CVB   R1,DOUBLEWD
         STH   R1,HDSID        SAVE IT
         B     DOINIT
*
BADPKEY DS 0H
         WTO   'RTR-BAD PARM KEYWORD',ROUTCDE=11
ABEND1   ABEND 1,DUMP,STEP          BAD PARM KEYWORD
*
BADPFOR  DS    0H
         WTO   'RTR-BAD PARM KEYWORD FORMAT',ROUTCDE=11
ABEND2   ABEND 2,DUMP,STEP          BAD PARM KEYWORD
*
*
HJID     DS    H
HDSID    DS    H
*
         EJECT
DOINIT   DS    0H
         MVC   CKPTREAD(20),CREAD
*
         MVC   HASPCKPT(88),DCB1 MOVE IN CHECKPOINT DCB
         MVC   HASPACE(88),DCB2  MOVE IN SPOOL DCB
         MVC   OUTLIST(96),DCB3  MOVE IN OUTLIST DCB
*
         LA    R9,HASPCKPT
         OPEN  ((9),(INPUT))
*
         TM    HASPCKPT+48,X'10'   GOOD OPEN
         BZ    JUSTGOUT            NOPE
*
         LA    R9,HASPACE
         OPEN  ((9),(INPUT))
*
         TM    HASPACE+48,X'10'   GOOD OPEN
         BZ    JUSTGOUT            NOPE
*
         EJECT
*
GETJQES  DS    0H
         LA    R9,JQEHOLD
*
         LA    R8,HASPCKPT
         LA    R7,CKPTECB
         LA    R6,4                 LOOP CONTROL, READ 5 JQE BLOCKS
         XC    CKPTECB(4),CKPTECB
*
*
READCKJQ DS    0H
         READ  (7),SF,(8),(9),'S',MF=(E,CKPTREAD)
         CHECK (7)
         CLC   0(8,R9),=C'JES2 NJE' DO I HAVE THE JQE'S
         BNE   READCKJQ             NOPE
*
*
READNXJQ DS    0H
         A     R9,L4096
         READ  (7),SF,(8),(9),'S',MF=(E,CKPTREAD)
         CHECK (7)
         BCT   R6,READNXJQ          READ IN 5 RECORDS
*
         EJECT
OUTJQES  DS    0H
*
         LA    R6,JQEHOLD
*
         LA    R6,52(,6)      FIRST JQE
         USING JQE,6          ADDRESSABILITY
         LA    R9,393         MAXIMUM NUMBER OF JQE'S
CHECKJQE DS    0H
         CLI   JQEJNAME,C' '  NEVER USED
         BE    JQEDONE        ALL DONE WITH JQE'S
         CLI   JQEJNAME,X'00' NEVER USED
         BE    JQEDONE        ALL DONE WITH JQE'S
         CLC   JQEJOBNO(2),HJID    MATCH
         BE    GOTMYJQE       GET ANOTHER JQE
NEXTJQE  LA    R6,JQELNGTH(6) A(NEXT JQE)
         BCT   R9,CHECKJQE CHECKED ALL RETURNED JQES?
GOTMYJQE DS    0H
         CLC   FZEROS(4),JQETRAK    JCT DISK ADDRESS
         BE    ABADJCT
         MVC   READMTTR(4),JQETRAK    JCT DISK ADDRESS
         MVC   READAREA(4),JCTPTR
         BAL   R7,READSPAC
*
         L     R9,JCTPTR
         CLC   0(4,R9),=C'JCT '
         BE    GOTAJCT
*
JQEDONE  DS    0H
         WTO   'RTR-JQE NOT FOUND',ROUTCDE=11
ABEND4   ABEND 04,DUMP,STEP
*
ABADJCT  DS    0H
         WTO   'RTR-JCT NOT FOUND',ROUTCDE=11
ABEND5   ABEND 05,DUMP,STEP
*
GOTAJCT  DS    0H
         USING JCTAREA,9
*
         CLC   FZEROS(4),JCTIOT     IOT DISK ADDRESS
         BE    ABADIOT
         MVC   READMTTR(4),JCTIOT     IOT DISK ADDRESS
         MVC   SPINMTTR(4),JCTSPIOT   IOT DISK ADDRESS
         DROP  9
         MVC   READAREA(4),IOTPTR
*
*
PDDBLOOP DS    0H
         BAL   R7,READSPAC
*
         L     R9,IOTPTR
         CLC   0(4,R9),=C'IOT '
         BE    GOTAIOT
*
ABADIOT  DS    0H
         WTO   'RTR-UNABLE TO LOCATE IOT',ROUTCDE=11
ABEND6   ABEND 06,DUMP,STEP
*
GOTAIOT  DS    0H
*
         USING IOT,9
*
*
* OK, GOT THE IOT, NOW PICK UP THE PDDB'S
*
         L     R8,IOTPDDBP  END OF PDDB'S OFFSET
         LA    R8,0(8,R9)   END OF PDDB'S ADDRESS
         MVC   READMTTR(4),IOTIOTTR   NEXT IOT DISK ADDRESS
         DROP  9
PDDB1    EQU   464            OFFSET OF FIRST PDDB
TABLNGTH EQU   12             THIS IS FROM SYS1.HASPSRC($TAB)
         LA    R9,PDDB1(,9)   OFFSET OF FIRST PDDB
         USING PDDB,9
*
         CLC   PDBDSKEY(2),=X'0001'  FIRST DSID MUST BE 0001
         BE    NEXTPDDB              IF IT IS, OK.
*
         WTO   'COULD NOT FIND PDDB FOR DSID 0001',ROUTCDE=11
ABEND7   ABEND 7,DUMP,STEP
*
NEXTPDDB DS    0H
         CLC   PDBDSKEY(2),HDSID
         BE    GOTMYDSI
         LA    R9,PDBLENG(,9)        BUMP TO NEXT PDDB
         CR    R9,R8
         BL    NEXTPDDB
         L     R1,READMTTR
         LTR   R1,1
         BNZ   PDDBLOOP
         L     R1,SPINMTTR
         LTR   R1,1
         BZ    NOTMYDSI
         MVC   READMTTR(4),SPINMTTR   IOT DISK ADDRESS
         XC    SPINMTTR(4),SPINMTTR   IOT DISK ADDRESS
         B     PDDBLOOP
GOTMYDSI DS    0H
*
         MVI   READ1ST,0      TURN ON SWITCH FOR FIRST-TIME-THROUGH
*
         LA    R5,PDBMTTR     FOR FIRST-TIME-THROUGH
*
         MVI   DSNLINE-1,C' '     SET DEFAULT CARRIAGE CONTROL
         LA    R7,OUTLIST
         OPEN  ((7),(OUTPUT))
         TM    OUTLIST+48,X'10'   OPEN OK?
         BO    DOREAD1R           YUP
ABEND16  ABEND 16,DUMP,STEP
*
NOTMYDSI DS    0H
         WTO   'RTR-UNABLE TO LOCATE DSID',ROUTCDE=11
ABEND15  ABEND 15,DUMP,STEP
*
DOREAD1R DS    0H
         BAL   R7,READ1REC        GET A RECORD FROM THE SPOOL
         LTR   R15,15             DID I GET A RECORD
         BNZ   EOFDSID            NOPE, EOF
*
         LA    R7,DSNLINE         OUTPUT LINE
         CLI   CCFLAG,1           IS THERE CARRIAGE CONTROL
         BE    CHECKCC            YUP
         BCTR  R7,0               NOPE, BACK UP 1
CHECKCC  DS    0H
         CLI   0(R7),C' '         IS IT SPACES
         BE    PUTALINE           OK, PRINT IT
PUTALINE DS    0H
         PUT   OUTLIST,(7)
         B     DOREAD1R
*
EOFDSID  DS    0H
*
         LA    R7,OUTLIST
         CLOSE ((7))
         LA    R7,HASPACE
         CLOSE ((7))
         LA    R7,HASPCKPT
         CLOSE ((7))
TERME    DS    0H
*
JUSTGOUT DS    0H
*
         L     R13,4(,13)      PICK UP CALLING SAVE AREA ADDRESS
         LM    R14,12,12(R13)
         SR    R15,15
         BR    R14
*
         EJECT
READ1REC DS    0H
         ST    R7,RD1SAVE7
         CLI   READ1ST,0      FIRST TIME THROUGH?
         BE    READ1OPN       YUP
         LM    R4,R7,RD1SAVE
         B     SKIP1REC
READ1OPN DS    0H
         MVI   READ1ST,1      TURN OFF SWITCH
READ1NXT DS    0H
***********************************************************************
*                                                                     *
*   PROCESS DATASET                                                   *
*                                                                     *
***********************************************************************
NEXTDSA  L     R4,0(R5)       DISK ADDR OF NEXT BLOCK
         LTR   R4,R4          IS THE DISK ADDR ZERO?
         BZ    READ1EOF       YUP END OF DATASET.
         L     R5,IXTPTR                 POINT TO THE BLOCK
         ST    R5,READAREA               POINT TO THE BLOCK
         ST    R4,READMTTR    STORE DISK ADDR IN TABLE
         BAL   R7,READSPAC               READ IN THE BLOCK
         CLC   IXTJOBID(4),FZEROS     FIRST TIME THROUGH
         BNE   *+10
         MVC   IXTJOBID(4),4(R5) SETS THE JOBID
         CLC   IXTJOBID(4),4(R5) DOES THE JOBID MATCH?
         BNE   READ1EOF       NO. END OF DATASET.
         LA    R4,10(R5)      ADDR OF FIRST RECORD IN BLOCK
***********************************************************************
*                                                                     *
*   PROCESS RECORDS                                                   *
*                                                                     *
***********************************************************************
NEXTDSR  CLI   0(R4),X'FF'    IS LENGTH BYTE FF?
         BE    NEXTDSA        YES. END OF BLOCK.
         TM    1(R4),X'10'    IS THIS A SPANNED RECORD?
         BO    SPANSKIP       YES. SKIP IT.
         SR    R6,R6          ZERO OUT REG
         IC    R6,0(R4)       INSERT LENGTH
         LR    R7,R6          SAVE RECORD LENGTH
         LR    R1,R4          SAVE RECORD LOCATION
         MVI   CCFLAG,0       NO CARRIAGE CONTROL?
         TM    1(R4),X'80'    IS THERE CARRIAGE CONTROL?
         BZ    *+12           NO.
         LA    R1,1(,1)       BUMP 1
         MVI   CCFLAG,1       THERE IS CARRIAGE CONTROL
         TM    1(R4),X'08'    IS THIS RECORD TO BE IGNORED?
         LR    R4,R1          UPDATE RECORD POINTER
         BNZ   SKIP1REC       YES. SKIP IT.
         LTR   R7,R7          LENGTH ZERO
         BZ    SKIP1REC       YES. SKIP IT.
         BCTR  R7,0           MINUS 1
         N     R7,ZEROFF      LOP OFF LEFT BYTES
         CH    R7,=H'133'     IS THE RECORD BIGGER THAN LINE WIDTHLBDMC
         BNH   *+8            NO. USE RECORD LENGTH.
         LH    R7,=H'133'          YES. USE LINE WIDTH            LBDMC
         LA    R1,3(R1)       OFFSET PAST REC HDR
         MVI   DSNLINE,C' '
         MVC   DSNLINE+1(132),DSNLINE
         CLI   CCFLAG,1       IS THERE CARRIAGE CONTROL?
         BNE   *+6            NO. R1 IS OK
         BCTR  R1,0           MINUS 1
         EX    R7,MOVEDATA
         STM   R4,R7,RD1SAVE
         SR    R15,15         GOT A RECORD
READ1RTN DS    0H
         L     R7,RD1SAVE7
         BR    R7
READ1EOF DS    0H
         LA    R15,4          EOF
         MVI   READ1ST,0      FIRST TIME THROUGH IS FORCED
         B     READ1RTN
*
*
SKIP1REC LA    R4,3(R6,R4)    INCREMENT TO NEXT RECORD
         B     NEXTDSR        PROCESS NEXT RECORD
SPANSKIP LH    R6,2(R4)       LENGTH OF SEGMENT
         TM    1(R4),X'08'    IS THIS THE FIRST SEGMENT?
         BO    SPAN1STR       YES. USE HEADER LENGTH OF 6.
         LA    R4,4(R6,R4)    UPDATE RECORD POSITION
         B     NEXTDSR        PROCESS NEXT RECORD
SPAN1STR LA    R4,6(R6,R4)    UPDATE RECORD POSITION
         B     NEXTDSR        PROCESS NEXT RECORD
         EJECT
READSPAC DS    0H
         ST    R7,READSPA7
         CLC   FZEROS(2),READMTTR+1      ZERO TRACK ADDRESS
         BE    ABEND9                    YUP
         MVC   DDIOTRAK(3),READMTTR+1    DISK ADDRESS
         MVI   DDIOTRAK+3,0
         SR    R1,1
         ICM   R1,3,DDIOTRAK   PICK UP ABSOLUTE TT
         LA    R7,90
*
         CR    R1,R7         IS TRACK < 90
         BL    ABEND10                   YUP
*
         SR    R1,R7
         STH   R1,DDIOTRAK   SET RELATIVE TT
*
         SLL   R1,16         CLEAR LEFT BYTES
         SRL   R1,16         CLEAR LEFT BYTES
         C     R1,TTMAX      IS IT TOO BIG?
         BH    ABEND11                   YUP
*
         POINT HASPACE,DDIOTRAK
*
         L     R7,READAREA
         XC    CKPTECB(4),CKPTECB
*
         READ  CKPTECB,SF,HASPACE,(7),'S',MF=(E,CKPTREAD)
         CHECK CKPTECB
*
         CLI   CKPTECB,X'7F'             GOOD RETURN CODE
         BNE   ABEND12                   NOPE
*
         L     R7,READSPA7
         BR    R7
TTMAX    DC    F'14999'                  MAX TRACKS IN HASPACE
ABEND8   ABEND 8,DUMP,STEP
ABEND9   ABEND 9,DUMP,STEP
ABEND10  ABEND 10,DUMP,STEP
ABEND11  DC    H'0'
ABEND12  ABEND 12,DUMP,STEP
         TITLE 'LITERAL POOL'
         LTORG
JCTPTR   DC    A(JCTAREA)
IOTPTR   DC    A(IOTAREA)
IXTPTR   DC    A(IXTAREA)
ZEROFF   DC    X'00FFFFFF'
         EJECT
DOUBLEWD DS    D              PACKED DECIMAL WORK AREA
PTBDSKEY DS    CL3            DSID IN EBCDIC
CKPTECB  DS    F
RD1SAVE  DS    4F
RD1SAVE7 DS    F
DDIOTRAK DS    F
DDJCTRAK DS    F
READSPA7 DS    F
READMTTR DS    F
IXTMTTR  DS    XL4                 STARTING TRACK ADDR
IXTJOBID DS    XL4
READAREA DS    F
SPINMTTR DS    F
SAVELINK DS    A              RETURN ADDRESS HOLD FOR SHOWINIT
*
CCFLAG   DS    XL1      CARRIAGE CONTROL?
*
         DC    C' '
DSNLINE  DS    CL133
*
PJOB     DS    CL8
PJID     DS    CL8
PDSID    DS    CL8
PCLASS   DS    CL1
*
*
READ1ST  DS    X
*
*
DCB1 DCB DDNAME=HASPCKPT,DSORG=PS,RECFM=U,BLKSIZE=4096,MACRF=(RCP),    X
               LRECL=4096
DCB2 DCB DDNAME=HASPACE,DSORG=PS,RECFM=F,BLKSIZE=3664,MACRF=(RCP),     X
               LRECL=3664
DCB3 DCB DDNAME=OUTLIST,DSORG=PS,MACRF=(PM)
DCBL     EQU   *-DCB1
CREAD READ  ECB1,SF,DCB1,DUMM,'S',MF=L
LREAD    EQU   *-CREAD
DUMM     DS    XL80
L4096    DC    F'4096'
FZEROS   DC    F'0'
ZEROFOX  DC    X'00FFFFFF'
*
MOVEDATA MVC   DSNLINE(1),0(R1)
*
         TITLE 'BUFFER AREAS'
         DS    0D
         DC    C'JQE HOLD'
JQEHOLD  DS    XL20480        HOLD 5 RECORDS
         DS    0D
         DC    C'JCT HOLD'
JCTAREA  DS   0XL4096         JCT
         DS    XL8
JCTJBKEY DS    XL4
JCTSPIOT DS    XL4
JCTIOT   DS    XL4
         DS    XL4076
         DS    0D
         DC    C'IOT AREA'
IOTAREA  DS    XL4096         IOT
         DS    0D
         DC    C'IXT AREA'
IXTAREA  DS    XL4096         IXT
         DS    0D
         TITLE 'RTR - WORK AREA DSECT'
DSA      DSECT
         DS    18F                 SAVE AREA
HASPCKPT DCB DDNAME=HASPCKPT,DSORG=PS,RECFM=U,MACRF=(RCP)
HASPACE  DCB DDNAME=HASPACE,DSORG=PS,RECFM=F,MACRF=(RCP)
OUTLIST  DCB DDNAME=OUTLIST,DSORG=PS,MACRF=(PM)
CKPTREAD READ  ECB2,SF,HASPCKPT,DUMM,'S',MF=L
         TITLE 'HASP JOB QUEUE  ELEMENT (JQE) DSECT'
JQEDSECT DSECT                     HASP JOB QUEUE ENTRY DSECT
JQE      EQU   JQEDSECT            ALTERNATE NAME FOR JQE DSECT
JQEPRIO  DS    FL1                 JOB PRIORITY
JQETYPE  DS    BL1                 LOGICAL QUEUE TYPE
JQEJOBNO DS    H                   HASP JOB NUMBER
         SPACE 1                                                   SPR2
JQENEXT  DS    0A                                                  SPR2
JQEFLAGS DS    BL1                 JOB QUEUE FLAGS
JQENEXTB DS    AL3                 OFFSET OF NEXT JQE              SPR2
         SPACE 1                                                   SPR2
JQEJOE   DS    0A                                                  SPR2
JQEFLAG2 DS    BL1                 MORE JOB QUEUE FLAGS
JQEJOEB  DS    AL3                 OFFSET OF 1ST WORK-JOE          SPR2
         SPACE 1                                                   SPR2
JQEFLAG3 DS    BL1                 SOME MORE JOB QUEUE FLAGS       SPR2
JQEJCLAS DS    CL1                 JOB CLASS                       SPR2
JQEINJNO DS    H                   INITIAL JOB NUMBER              SPR2
JQETRAK  DS    XL4                 TRACK ADDRESS OF JOB CONTROL TABLE
JQESPOLS DS    XL4                 SPOOLS USED BY THIS JOB         SPR2
JQEINPND DS    H                   INPUT NODE       (BINARY)       SPR2
JQEXEQND DS    H                   EXECUTION NODE   (BINARY)       SPR2
         SPACE 1                                                   SPR2
         DS    0F                  FORCE ALIGNMENT                 SPR2
JQEDEVID DS    0AL3                DEVICE IDENTITY (SEE DCTDEVID)  SPR2
JQEPRTRT DS    0F                   PRINT ROUTE     (BINARY)       SPR2
JQEPRNOD DS    H                     NODE NUMBER                   SPR2
JQEPRREM DS    H                     REMOTE NUMBER                 SPR2
JQEPUNRT DS    0F                   PUNCH ROUTE     (BINARY)       SPR2
JQEPUNOD DS    H                     NODE NUMBER                   SPR2
JQEPUREM DS    H                     REMOTE NUMBER                 SPR2
         SPACE 1                                                   SPR2
JQEHLDCT DS    0H,X                HELD DATA SET COUNT (BITS 0-11)
JQEJBLOK DS    BL1                 JOB LOCK        (BITS 4-7)      SPR2
JQEHLDDS EQU   B'00001000'         JOB HAS HELD 3540 DATASETS      SPR2
JQEJNAME DS    CL8                 JOB NAME FROM JOB CARD
JQEJOEID DS    H                   CURRENT JOE ID NUMBER           SPR2
JQEWDSCT DS    H                   WARM START SPIN IOT         @OZ51392
*                                   AND $UNSPUN COUNT          @OZ51392
         DS    0F                  INSURE FULL-WORD BOUNDARY
JQELNGTH EQU   *-JQEDSECT          LENGTH OF JOB QUEUE ENTRY
         SPACE 5
*        HASP JOB QUEUE ENTRY DISPLACEMENTS                        SPR2
         SPACE 3
QUEPRIO  EQU   JQEPRIO-JQEDSECT    JOB PRIORITY
QUETYPE  EQU   JQETYPE-JQEDSECT    LOGICAL QUEUE TYPE
QUEJOBNO EQU   JQEJOBNO-JQEDSECT   HASP JOB NUMBER
QUEFLAGS EQU   JQEFLAGS-JQEDSECT   JOB QUEUE FLAGS
QUEFLAG2 EQU   JQEFLAG2-JQEDSECT   MORE JOB QUEUE FLAGS
QUEFLAG3 EQU   JQEFLAG3-JQEDSECT   SOME MORE JOB QUEUE FLAGS       SPR2
QUEJCLAS EQU   JQEJCLAS-JQEDSECT,L'JQEJCLAS  JOB CLASS             SPR2
QUENEXT  EQU   JQENEXT-JQEDSECT    OFFSET OF NEXT JQE              SPR2
QUENEXTB EQU   JQENEXTB-JQEDSECT   3-BYTE OFFSET OF NEXT JQE       SPR2
QUETRAK  EQU   JQETRAK-JQEDSECT    TRACK ADDRESS OF JOB CONTROL TABLE
QUEINJNO EQU   JQEINJNO-JQEDSECT   INITIAL JOB NUMBER              SPR2
QUEINPND EQU   JQEINPND-JQEDSECT   INPUT NODE                      SPR2
QUEXEQND EQU   JQEXEQND-JQEDSECT   EXECUTION NODE                  SPR2
QUEDEVID EQU   JQEDEVID-JQEDSECT   DEVICE IDENTITY (SEE DCTDEVID)
QUEPRTRT EQU   JQEPRTRT-JQEDSECT,L'JQEPRTRT   PRINT ROUTE          SPR2
QUEPUNRT EQU   JQEPUNRT-JQEDSECT,L'JQEPUNRT   PUNCH ROUTE          SPR2
QUEJOE   EQU   JQEJOE-JQEDSECT     OFFSET OF 1ST WORK-JOE          SPR2
QUEJOBB  EQU   JQEJOEB-JQEDSECT    3-BYTE OFFSET OF 1ST WORK-JOE   SPR2
QUEHLDCT EQU   JQEHLDCT-JQEDSECT   HELD DATA SET COUNT (BITS 0-11) SPR2
QUEJBLOK EQU   JQEJBLOK-JQEDSECT   HOLD QUEUE LOCK (BITS 4-7)      SPR2
QUEJNAME EQU   JQEJNAME-JQEDSECT   JOB NAME FROM JOB CARD
         EJECT
*                             HASP JOB QUEUE ENTRY BIT DEFINITIONS
         SPACE 5
*        JQETYPE                                                   SPR2
         SPACE 3
QUECLASS EQU   X'7F'               CLASS OF JOB QUEUED FOR EXECUTION
$DUMMY   EQU   X'80'               RESERVED QUEUE
$XEQ     EQU   X'40'               OS EXECUTION QUEUE
$INPUT   EQU   X'20'               INPUT QUEUE
$XMIT    EQU   X'10'               TRANSMISSION QUEUE                R4
$SETUP   EQU   X'08'               SETUP QUEUE                       R4
$RECEIVE EQU   X'04'               SYSOUT RECEIVER QUEUE             R4
$DUMPQ   EQU   X'03'               SPOOL OFFLOAD DUMP QUEUE        SPR2
$OUTPUT  EQU   X'02'               OUTPUT QUEUE                      R4
$HARDCPY EQU   X'01'               OUTPUT IN-PROGRESS QUEUE          R4
$PURGE   EQU   X'00'               PURGE QUEUE
$FREE    EQU   X'FF'               FREE QUEUE                     @SPR2
         SPACE 5
*        JQEFLAGS                                                  SPR2
         SPACE 3
QUEHOLDA EQU   X'80'               HOLD ALL JOBS
QUEHOLD1 EQU   X'40'               HOLD SINGLE JOB
QUEHOLD2 EQU   X'20'               HOLD FOR DUPLICATE JOB NAME
QUEPURGE EQU   X'10'               JOB IS TO BE PURGED
QUEOPCAN EQU   X'08'               OPERATOR ISSUED $C OR $P JOB
QUEBUSY  EQU   X'07'               JQE BUSY SYSTEM ID
         SPACE 2
*        JQEFLAG2                                                  SPR2
         SPACE 2
QUEINIT  EQU   X'80'               JOB IS INITIATOR OR SYSTEM LOG
QUEINDAF EQU   X'80'               JOB HAS INDEPENDENT MODE AFFINITY
QUESYSAF EQU   X'7F'               SYSTEM AFFINITY OF JOB
         SPACE 2                                                   SPR2
*        JQEFLAG3                                                  SPR2
         SPACE 2                                                   SPR2
QUEJOB   EQU   X'03'               BATCH JOB TYPE WHEN ZERO        SPR2
QUESTC   EQU   X'01'               STC JOB TYPE                    SPR2
QUETSU   EQU   X'02'               TSU JOB TYPE                    SPR2
QUEXMIT  EQU   X'04'               JOB DESTINED FOR ANOTHER NODE   SPR2
*                                  /*XMIT OR INTERMEDIATE NODE JOB SPR2
QUETMOD  EQU   X'08'               JOB IS BEING PROCESSED BY $TO   SPR2
JQEPOSTN EQU   JQETRAK,2           JQE POSITION
JQETOTAL EQU   JQETRAK+2,2         QUEUE TOTAL
         TITLE 'HASP PERIPHERAL DATA DEFINITION BLOCK (PDDB) DSECT'
PDDB     DSECT                     HASP PDDB DSECT             @OZ53384
         DS    0D                  HASP PDDB                   @OZ53384
PDBFLAG1 DC    0BL1'0',AL1(PDB1NULL)    FLAG BYTE              @OZ53384
PDBRECFM DC    XL1'00'             DATA SET RECORD FORMAT      @OZ53384
PDBLRECL DC    H'0'                MAXIMUM DATA SET LRECL      @OZ53384
PDBMTTR  DC    XL4'00'             STARTING TRACK ADDR         @OZ53384
*                                   OF DATA SET                @OZ53384
PDBDSKEY DC    FL2'0'              DATA SET NBR OF DATA SET    @OZ53384
PDBCLASS DC    CL1'A'              OUTPUT CLASS OF DATA SET    @OZ53384
PDBCOPYS DC    AL1(1)              COPIES OF THIS DATA SET     @OZ53384
         SPACE 1                                                   SPR2
PDBDEST  DS    0F                  DATA SET OUTPUT DEST        @OZ53384
PDBDNODE DC    H'0'                 NODE NUMBER   (BINARY)     @OZ53384
PDBDRMT  DC    H'0'                 REMOTE NUMBER (BINARY)     @OZ53384
         SPACE 1                                                   SPR2
PDBUSER  DC    0CL8' ',XL8'00'     DATASET DEST USERID/RMTID   @OZ53384
PDBCPU   DC    XL1'00'             CPU ID                      @OZ53384
PDBSEC   DC    XL1'00'             DATA SET SECURITY ID        @OZ53384
PDBFLAG2 DC    BL1'00000000'       SECOND FLAG BYTE            @OZ53384
PDBCPTN  DC    XL1'FF'             COMPACTION TABLE NUMBER     @OZ53384
PDBRECCT DC    F'0'                DATA SET RECORD COUNT       @OZ53384
PDBFORMS DC    0CL4' ',XL4'00'     FOUR-BYTE FORMS NUMBER      @OZ53384
PDBFCB   DC    CL4'****'           FOUR-BYTE 3211 FCB ID       @OZ53384
PDBUCS   DC    CL4'****'           FOUR-BYTE 1403 OR 3211      @OZ53384
*                                    UCS ID                    @OZ53384
PDBDSID  DC    CL8' '              DATASET IDENTIFICATION      @OZ53384
PDBWTRID EQU   PDBDSID,,C'C'       8-BYTE OUTPUT WRITER ID     @OZ53384
PDBRBA   DC    XL8'00'             8-BYTR CHECKPOINT RECORD    @OZ53384
PDBCHAR1 DC    CL4'****'           N/I  PRINTER XLATE TAB 1    @OZ53384
PDBCHAR2 DC    CL4'****'           N/I  PRINTER XLATE TAB 2    @OZ53384
PDBCHAR3 DC    CL4'****'           N/I  PRINTER XLATE TAB 3    @OZ53384
PDBCHAR4 DC    CL4'****'           N/I  PRINTER XLATE TAB 4    @OZ53384
PDBFLASH DC    CL4'****'           N/I  PRINTER FLASH CART ID  @OZ53384
PDBMODF  DC    CL4'****'           N/I  PRINTER COPY MOD IMAGE @OZ53384
PDBFLSHC DC    AL1(255)            N/I  PRINTER # FLASH COPIES @OZ53384
PDBMODFT DC    XL1'00'             N/I  PRINTER TBL REF CHAR   @OZ53384
PDBCOPYG DC    XL8'00'             N/I  PRINTER COPY GROUPS    @OZ53384
PDBCKPTP DC    XL2'FFFF'           NO. OF LOGICAL PAGES/CKPT   @OZ53384
PDBCKPTL DC    XL2'FFFF'           NO. OF LINES/LOGICAL PAGE   @OZ53384
PDBFLAG3 DC    BL1'00000000'       THE THIRD FLAG BYTE         @OZ53384
PDBSTAT  DC    BL1'00000000'       STATUS BYTE FOR HELD        @OZ53384
*                                    DATA SETS                 @OZ53384
PDBNAME  DC    0CL4' ',XL4'00'     OUTPUT NAME FOR THIS PDDB   @OZ53384
PDBCRTME DC    F'0'                CREATION TIME - HELD        @OZ53384
*                                    DATA SETS                 @OZ53384
PDBPLIOT DC    A(0)                PTR TO NORM IOT ---         @OZ53384
*                                      PLACE HOLDER            @OZ53384
PDBPLOFF DC    F'0'                THE OFFSET TO RELATED PDDB  @OZ53384
PDBSSOFM DC    0CL4' ',XL4'00'     SAVE FORMS AT ALLOCATION    @OZ53384
PDBLINCT DC    XL1'00'             DATASET LNE CNT (LINECNT)   @OZ53384
PDBINDEX DC    XL1'00'             3211 FCB INDEX VALUE        @OZ53384
PDBFUNC  DC    BL1'00000000'       3525 FUNCTION BYTE          @OZ53384
PDBRSVD1 DC    XL1'00'             RESERVED FOR FUTURE USE     @OZ53384
         DC    4F'0'               RESERVED FOR FUTURE USE     @OZ53384
         SPACE 1
         DS    0F
PDBLENG  EQU   *-PDDB              PDDB LENGTH                 @OZ53384
         SPACE 1
         TITLE 'HASP PDDB STATUS BIT DEFINITIONS'
         SPACE 5
*        PDBFLAG1                                                  SPR2
         SPACE 3
PDB1DSID EQU   B'10000000'         DSID IN PDBDSID/PDBWTRID FIELD    R4
PDB1NULL EQU   B'01000000'         THIS IS A NULL PDDB
PDB1LOG  EQU   B'00100000'         THIS PDDB IS FOR THE HASP JOB LOG
PDB1MDES EQU   B'00010000'         THIS PDDB IS FOLLOWED BY OTHERS
*                                  INDICATING MULTIPLE DESTINATIONS
PDB1NSOT EQU   B'00001000'         DATA SET IS NOT FOR SYSOUT
PDB1SPIN EQU   B'00000100'         THIS PDDB IS FOR A SPIN DATA SET
PDB1HOLD EQU   B'00000010'         THIS PDDB IS FOR A HELD DATA SET
PDB1PSO  EQU   B'00000001'         DATA SET MAY BE ACCESSED BY PSO
         SPACE 5                                                     R4
*        PDBFLAG2                                                  SPR2
         SPACE 3                                                     R4
PDB2TCEL EQU   B'10000000'         DATA SET IS TRAKCELL'ED           R4
PDB2OPTJ EQU   B'01000000'         OPTCD=J SPECIFIED                 R4
PDB2BRST EQU   B'00100000'         BURST=YES SPECIFIED               R4
PDB2HDST EQU   B'00010000'         HOLD DATA SET AT DESTINATION      R4
PDB2JFMS EQU   B'00001000'         PDBFORMS SET FROM JCTFORMS       R41
PDB2HLDS EQU   B'00000100'         DATA SET SPECIFICALLY HELD     @SPR2
PDB2PSOR EQU   B'00000010'         PSO ROUTE CHANGE               @SPR2
PDB2NEWS EQU   B'00000001'         JESNEWS DATA SET               @SPR2
         SPACE 5
*        PDBFLAG3                                                  SPR2
         SPACE 3                                                   SPR2
PDB3PLHD EQU   B'10000000'         PLACE HOLDER PDDB               SPR2
PDB3PSOC EQU   B'01000000'         PSO CLASS CHANGE                SPR2
PDBLNCTF EQU   B'00100000'         LINECT SPECIFIED                SPR2
PDB3STAT EQU   B'00010000'         JOB STATISTICS IN JOB LOG   @OZ51376
PDB3BRST EQU   B'00001000'         BURST (Y OR N) IN DD CARD   @OZ55601
PDBF3RV3 EQU   B'00000100'         RESERVED FOR FUTURE USE         SPR2
PDBF3RV4 EQU   B'00000010'         RESERVED FOR FUTURE USE         SPR2
PDBF3RV5 EQU   B'00000001'         RESERVED FOR FUTURE USE         SPR2
         SPACE 5                                                   SPR2
*        PDBSTAT                                               @OZ53384
         SPACE 3                                                   SPR2
PDBTGMAP EQU   X'80'               HELD DATA SET IS IN SPIN IOT    SPR2
PDBUNHLD EQU   X'40'               HELD DS IS NULL AND/OR UNPRINTABLE
PDBCAN   EQU   X'20'               HELD DATA SET IS TO BE CANCELLEDSPR2
PDBRLSE  EQU   X'10'               HELD DATA SET IS TO BE RELEASED SPR2
PDBINUSE EQU   X'07'               HELD DATA SET IS IN USE         SPR2
         SPACE 5                                                   SPR2
*              DATA SET KEYS FOR SPECIAL DATA SETS
         SPACE 3
PDBINJCL EQU   1                   INPUT JCL STATEMENTS
PDBOUHJL EQU   2                   HASP JOB LOG
PDBOUJCI EQU   3                   JCL IMAGES
PDBOUMSG EQU   4                   SYSTEM MESSAGES
PDBINTXT EQU   5                   INTERNAL TEXT
PDBINJNL EQU   6                   JOB JOURNAL
         TITLE 'JES2 IOT'
IOT      DSECT                     HASP INPUT/OUTPUT TABLE DSECT
IOTSTART EQU   *                   START OF DATA WRITTEN TO SPOOL
IOTID    DS    CL4'IOT'            IOT IDENTIFIER
IOTLENG  DS    AL2(*-*)            LENGTH OF IOT INCLUDING PREFIX    R4
*
IOTFLAG1 DS    B                   FIRST  FLAG BYTE
IOT1CKPT EQU   B'10000000'         REWRITE THIS IOT
IOT1SPIN EQU   B'00010000'         IOT TYPE IS SPINOFF
IOT1ALOC EQU   B'00001000'         IOT IS AN ALLOCATION IOT
IOT1NTPR EQU   B'00000100'         TO BE PROC. BY SPIN/HOLD       @SPR2
IOT1NEWS EQU   B'00000010'         JESNEWS IOT                    @SPR2
*
IOTFLAG2 DS    B                   SECOND FLAG BYTE
IOTJBKEY DS    XL4                 JOB IDENTIFIER KEY
IOTTRACK DS    XL4                 TRACK ADDRESS OF THIS IOT
IOTIOTTR DS    XL4                 TRACK ADDRESS OF NEXT IOT
IOTJCT   DS    A                   STORAGE ADDRESS OF JCT  -       SPR2C
                                    (REFERENCED ONLY IN ALLOCATION SPR2C
                                     IOTS)                         SPR2
IOTIOT   DS    A                   STORAGE ADDRESS OF NEXT IOT
IOTJQOFF DS    0A                  SPUN/HELD IOT -- JQE OFFSET
IOTSJB   DS    A                   ADDRESS OF SJB FOR EXECUTING JOB
IOTSPIOT DS    XL4                 TRACK ADDRESS OF NEXT SPIN IOT
IOTHDSCT DS    H                   HOLD DATA SET REQUEST NUMBER    SPR2
         DS    H                   RESERVED FOR FUTURE USE         SPR2
IOTPDDBP DS    F                   OFFSET BEYOND LAST PDDB IN IOT    R4
IOTMSTAB DS    0D,(TABLNGTH)X      MASTER TAB (DWORD ALIGNED FOR   SPR2X
                                    CDS ON TABMTTR)                SPR2
         DS    0D                  ALLIGN IOTTGMAP TO DOUBLEWORD     R4
IOTTGMAP EQU   *                   START OF TRACK GROUP MAP          R4
         SPACE 3
*              OFFSETS FROM 1ST PDDB OF FIXED PDDB'S                 R4
         SPACE 1
IOTPDBOJ EQU   0*PDBLENG           PDDB FOR INPUT JCL                R4
IOTPDBOL EQU   1*PDBLENG           PDDB FOR HASP JOB LOG             R4
IOTPDBOI EQU   2*PDBLENG           PDDB FOR JCL IMAGES               R4
IOTPDBOM EQU   3*PDBLENG           PDDB FOR SYSTEM MESSAGES          R4
IOTPDBOT EQU   4*PDBLENG           PDDB FOR INTERNAL TEXT            R4
IOTPDBON EQU   5*PDBLENG           PDDB FOR JOB JOURNAL              R4
IOTPDBOD EQU   6*PDBLENG           PDDB FOR 1ST SYSIN/SYSOUT DATASET R4
         END
/*
//LKED     EXEC PGM=HEWLF064,
//         PARM=(XREF,LET,LIST,NCAL,TERM),
//             COND=(8,LT,ASM),REGION=1024K
//SYSLIN   DD   DSN=&&OBJSET,DISP=(OLD,DELETE)
//         DD   DDNAME=SYSIN
//SYSLIB   DD   DSN=SYS2.LINKLIB,DISP=SHR
//SYSLMOD  DD   DISP=SHR,DSN=TECH.SERV.LOAD
//SYSUT1   DD   DSN=&&SYSUT1,UNIT=VIO,SPACE=(1024,(50,20))
//SYSTERM  DD   SYSOUT=*
//SYSPRINT DD   SYSOUT=*
//SYSIN    DD   *
     SETCODE AC(1)
     NAME RTR(R)
/*
//PRT EXEC PGM=RTR,
//    PARM='J=0332,D=109'
//STEPLIB  DD   DISP=SHR,DSN=TECH.SERV.LOAD
//SYSUT2  DD  DDNAME=IEFRDER
//IEFRDER DD  SYSOUT=*
//OUTLIST  DD SYSOUT=*,DCB=(LRECL=133,BLKSIZE=133,RECFM=FBA)
//SYSUDUMP DD SYSOUT=*
//HASPCKPT DD DSN=SYS1.HASPCKPT,DISP=SHR,UNIT=SYSDA,VOL=SER=SPOOL1
//HASPACE  DD DSN=SYS1.CMSPACE,DISP=SHR,UNIT=SYSDA,VOL=SER=SPOOL1
