      SUBROUTINE ANLR(NAME,DATE)
C   ***********************************
C
C   ROUTINE ANALYSES SRM CONTROL BLOCKS
C
C   ***********************************
      REAL*8 DATE
      INTEGER*4 IDATA(220), LENGTH /220/, IT4, BSRM
      INTEGER*4 CCT4(12),ICT4(8),MCT4(16),RCT4(19),RMCA4(15)
      INTEGER*4 LSCT4(3),PVT4(16)
      INTEGER*4 CCC14(18),CCC24(4),ICC4(16),MCC14(12),MCC24(20)
      INTEGER*4 RCC4(15),RMPT4(26),LSCC4(9)
      INTEGER*2 CCT(24),ICT(16),MCT(32),RCT(38),RMCA(30)
      INTEGER*2 LSCT(6),PVT(32)
      INTEGER*2 CCC1(36),CCC2(8),ICC(32),MCC1(24),MCC2(40)
      INTEGER*2 RCC(30),RMPT(52),LSCC(18),PVTL(2)
      INTEGER*2 IT2(2), NBIT,                      LCHUSE(4,3),LCH(4)
      LOGICAL*1 LTTIME(4), FIRST /.TRUE./, LTEMP(4)
C
      EQUIVALENCE (IT4,IT2(1)),(PVT4(1),PVT(1))
      EQUIVALENCE (CCT(1),CCT4(1)),(ICT(1),ICT4(1)),(MCT(1),MCT4(1)),
     * (RCT(1),RCT4(1)), (RMCA(1),RMCA4(1)), (LSCT(1),LSCT4(1))
      EQUIVALENCE (CCC1(1),CCC14(1)), (CCC2(1),CCC24(1)),
     * (ICC(1),ICC4(1)),(MCC1(1),MCC14(1)), (MCC2(1),MCC24(1)),
     * (RCC(1),RCC4(1))
      EQUIVALENCE (RMPT(1),RMPT4(1)), (LSCC(1),LSCC4(1))
      EQUIVALENCE (IDATA(1),LTTIME(1)), (IDATA(2),CCT(1)),
     * (IDATA(14),ICT(1)), (IDATA(22),MCT(1)), (IDATA(38),RCT(1)),
     * (IDATA(57),RMCA(1)), (IDATA(72),LSCT(1)), (IDATA(75),PVT(1)),
     * (IDATA(91),CCC1(1)), (IDATA(109),CCC2(1)), (IDATA(113),ICC(1)),
     * (IDATA(129),MCC1(1)), (IDATA(141),MCC2(1)), (IDATA(161),RCC(1)),
     * (IDATA(176),RMPT(1)), (IDATA(202),LSCC(1)),
     * (IDATA(220),PVTL(1))
      EQUIVALENCE (RTEMP,LTEMP(1))
C
 6001 FORMAT ('+',43X,I7)
 6002 FORMAT ('+',103X,I7)
 6003 FORMAT ('+',47X,F6.2)
 6004 FORMAT ('+',107X,F6.2)
 6005 FORMAT ('+',45X,3(Z2,'.'),Z2)
 6006 FORMAT ('+',105X,3(Z2,'.'),Z2)
 6007 FORMAT ('+',46X,Z4)
 6008 FORMAT ('+',106X,Z4)
 6009 FORMAT ('+',45X,Z8)
 6010 FORMAT ('+',106X,Z8)
C
      COMMON /SRMTIM/ BASE
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C     SABOTAGE SRM ANALYZER AND RELY ON LISTDATA
C
C     RETURN
C
C     THAT'S ALL THERE IS TO THE SABOTAGE
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      IFLAG = -1
      CALL MONRD (NAME, LENGTH, IDATA, IFLAG)
      IF (IFLAG.GT.0) GO TO 999
      AVRCPU = 0.
      AVRWKL = 0.
      AVRLCH = 0.
      AVRAVQ = 0.
      AVRUIC = 0.
      NCALLS = 0
  100 CONTINUE
      IFLAG = 0
      CALL MONRD (NAME, LENGTH, IDATA, IFLAG)
      IF (IFLAG.GT.0) GOTO 300
      NCALLS = NCALLS + 1
      IF (.NOT. FIRST) GOTO 150
C
C   WRITE OUT CONSTANTS FROM CCT, ICT, MCT, RCT, RMPT, LSCT
      FIRST = .FALSE.
      WRITE (6,5000) LTTIME, DATE
 5000 FORMAT('1SRM CONTROL CONSTANTS AT ',3(Z2,'.'),Z2,' ON ',A8)
      CALL DECVB (IDATA(1), LAST)
      NTIME = LAST
      WRITE (6,5010)
 5010 FORMAT (46X, 'CPU CONTROL CONSTANTS (CCT)',/)
      WRITE (6,5011)
 5011 FORMAT (' MINIMUM USER EXEC TIME FOR MTW COMP')
      RTEMP = CITIME(CCC14(2))
      WRITE (6,6003) RTEMP
      WRITE (6,5012)
 5012 FORMAT('+',60X,'MINIMUM INTERVAL FOR CPU UTILIZATION')
      RTEMP = CITIME(CCC14(4))
      WRITE (6,6004) RTEMP
      WRITE (6,5015)
 5015 FORMAT (' LENGTH OF MTW GROUPS - 1')
      WRITE (6,6001) CCC1(13)
      WRITE (6,5016)
 5016 FORMAT ('+', 60X, 'DP FOR UNDISPATCHED APG USERS')
      WRITE (6,6002) CCC1(11)
      WRITE (6,5019)
 5019 FORMAT (' APG HIGH VALUE')
      WRITE (6,6007) CCC1(10)
      WRITE (6,5020)
 5020 FORMAT ('+', 60X, 'APG LOW VALUE')
      WRITE (6,6008) CCC1(12)
      WRITE (6,5027)
 5027 FORMAT (' HIGH CPU UTILIZATION IMBALANCE THRESHOLD')
      RTEMP = CCC1(16) / 256.
      WRITE (6,6003) RTEMP
      WRITE (6,5028)
 5028 FORMAT ('+',60X,'LOW CPU UTILIZATION IMBALANCE THRESHOLD')
      RTEMP = CCC1(17) / 256.
      WRITE (6,6004) RTEMP
      WRITE (6,5043)
 5043 FORMAT (' DP COMPUTATION DIVISOR')
      WRITE (6,6001) CCC24(1)
      WRITE (6,5044)
 5044 FORMAT ('+',60X,'SIGNIFICANT MTW IN MICROSECONDS')
      WRITE (6,6002) CCC24(2)
C
      WRITE (6,5100)
 5100 FORMAT (/,46X,'I/O CONTROL CONSTANTS (ICT)',/)
      WRITE (6,5103)
 5103 FORMAT (' I/O LOAD BAL REC RANGE FACTOR')
      WRITE (6,6001) ICC(3)
      WRITE (6,5104)
 5104 FORMAT ('+',60X,'MAX TIME WITHOUT I/O MONITORING')
      RTEMP = CITIME(ICC4(3))
      WRITE (6,6004) RTEMP
      WRITE (6,5107)
 5107 FORMAT (' MINIMUM INTERVAL FOR I/O MONITORING')
      RTEMP = CITIME(ICC4(4))
      WRITE (6,6003) RTEMP
      WRITE (6,5108)
 5108 FORMAT ('+',60X,'MINIMUM SWAP OUT TIME FOR I/O')
      RTEMP = CITIME(ICC4(5))
      WRITE (6,6004) RTEMP
      WRITE (6,5111)
 5111 FORMAT (' LOGICAL CHANNEL COUNT')
      WRITE (6,6001) ICC(13)
      WRITE (6,5112)
 5112 FORMAT ('+',60X,'I/O LOAD BAL REC VALUE SCALING FACTOR')
      WRITE (6,6002) ICC(15)
      WRITE (6,5117)
 5117 FORMAT (' HIGH I/O UTILIZATION IMBALANCE THRESHOLD')
      WRITE (6,6001) ICC(20)
      WRITE (6,5118)
 5118 FORMAT ('+',60X,'LOW I/O UTILIZATION IMBALANCE THRESHOLD')
      WRITE (6,6002) ICC(21)
      WRITE (6,5121)
 5121 FORMAT (' MIN I/O RATE FOR USER I/O MONITORING')
      WRITE (6,6001) ICC(14)
      WRITE (6,5122)
 5122 FORMAT ('+',60X,'THRESHOLD FOR DEVICE ALLOCATION SYSEVENT')
      RTEMP = ICC(22) / 256.
      WRITE (6,6004) RTEMP
      WRITE (6,5125) ICC(23), ICC(24), ICC(25), ICC(26)
 5125 FORMAT (' LCH UTILIZATION THRESHOLDS - HI UP & MP, LOW UP & MP',
     $ 4X,4I10)
      WRITE (6,5131)
 5131 FORMAT (' DEV ALLOC THRESHOLD INITIAL VALUE - UP & MP')
      ITEMP = ICC(27) / 256
      WRITE (6,6001) ITEMP
      ITEMP = ICC(28) / 256
      WRITE (6,6002) ITEMP
      WRITE (6,5135)
 5135 FORMAT (' SIGNIFICANT USER LCH USAGE')
      WRITE (6,6001) ICC(29)
      WRITE (6,5136)
 5136 FORMAT ('+',60X,'EST DATA SET UTIL IMPACT')
      WRITE (6,6002) ICC(31)
C
      WRITE (6,5200)
 5200 FORMAT (/,44X,'STORAGE CONTROL CONSTANTS (MCT)',/)
      WRITE (6,5203)
 5203 FORMAT (' AVAIL FRAME Q DELTA FOR STEALING')
      WRITE (6,6001) MCC1(1)
      WRITE (6,5204)
 5204 FORMAT ('+',60X,'NUM PAGES TO STEAL FROM EACH USER')
      WRITE (6,6002) MCC1(2)
      WRITE (6,5237)
 5237 FORMAT (' FIRST AUX SHORTAGE THRESHOLD')
      WRITE (6,6001) MCC1(23)
      WRITE (6,5238)
 5238 FORMAT ('+',60X,'SECOND AUX SHORTAGE THRESHOLD')
      WRITE (6,6002) MCC1(24)
      WRITE (6,5243)
 5243 FORMAT (' EXEC TIME THRESH FOR PAGE RATE CALC')
      RTEMP = CITIME (MCC24(14))
      WRITE (6,6003) RTEMP
      WRITE (6,5244)
 5244 FORMAT ('+',60X,'UIC LIMIT BEFORE STEAL ADJUST')
      WRITE (6,6002) MCC24(2)
      WRITE (6,5247)
 5247 FORMAT (' TARGET WSS DECREASE DELTA')
      WRITE (6,6001) MCC2(25)
      WRITE (6,5248)
 5248 FORMAT ('+',60X,'TARGET WSS INCREASE DELTA')
      WRITE (6,6002) MCC2(26)
      WRITE (6,5277)
 5277 FORMAT (' AVAIL FRAME Q LOW THRESHOLD')
      WRITE (6,6001) MCC2(39)
      WRITE (6,5278)
 5278 FORMAT ('+',60X,'AVAIL FRAME Q OK THRESHOLD')
      WRITE (6,6002) MCC2(40)
C
      WRITE (6,5300)
 5300 FORMAT (/,47X,'RESOURCE CONTROL TABLE (RCT)',/)
      WRITE (6,5301)
 5301 FORMAT (' UIC LOW THRESHOLD')
      WRITE (6,6001) RCC(3)
      WRITE (6,5302)
 5302 FORMAT ('+',60X,'UIC HIGH THRESHOLD')
      WRITE (6,6002) RCC(4)
      WRITE (6,5303)
 5303 FORMAT (' CPU LOW THRESHOLD')
      RTEMP = RCC(5) / 16.
      WRITE (6,6003) RTEMP
      WRITE (6,5304)
 5304 FORMAT ('+',60X,'CPU HIGH THRESHOLD')
      RTEMP = RCC(6) / 16.
      WRITE (6,6004) RTEMP
      WRITE (6,5305)
 5305 FORMAT (' PAGE FAULT RATE LOW THRESHOLD')
      WRITE (6,6001) RCC(11)
      WRITE (6,5306)
 5306 FORMAT ('+',60X,'PAGE FAULT RATE HIGH THRESHOLD')
      WRITE (6,6002) RCC(12)
      WRITE (6,5307)
 5307 FORMAT (' PAGING RATE LOW THRESHOLD')
      WRITE (6,6001) RCC(7)
      WRITE (6,5308)
 5308 FORMAT ('+',60X,'PAGING RATE HIGH THRESHOLD')
      WRITE (6,6002) RCC(8)
      WRITE (6,5311)
 5311 FORMAT (' ASM QUEUED REQ LOW THRESHOLD')
      WRITE (6,6001) RCC(9)
      WRITE (6,5312)
 5312 FORMAT ('+',60X,'ASM QUEUED REQ HIGH THRESHOLD')
      WRITE (6,6002) RCC(10)
      WRITE (6,5315)
 5315 FORMAT (' DEMAND PAGING RATE LOW THRESHOLD')
      WRITE (6,6001) RCC(11)
      WRITE (6,5316)
 5316 FORMAT ('+',60X,'DEMAND PAGING RATE HIGH THRESHOLD')
      WRITE (6,6002) RCC(12)
      WRITE (6,5321)
 5321 FORMAT (' CPU UTIL LOW THRESHOLD W DEMAND PAGING')
      RTEMP = RCC(13) / 16.
      WRITE (6,6003) RTEMP
      WRITE (6,5322)
 5322 FORMAT ('+',60X,'CPU UTIL HIGH THRESHOLD W DEMAND PAGING')
      RTEMP = RCC(14) / 16.
      WRITE (6,6004) RTEMP
      WRITE (6,5325)
 5325 FORMAT (' PAGE DELAY LOW THRESHOLD W DEMAND PAGING')
      WRITE (6,6001) RCC(15)
      WRITE (6,5326)
 5326 FORMAT ('+',60X,'PAGE DELAY HIGH THRESHOLD W DEMAND PAGING')
      WRITE (6,6002) RCC(16)
      WRITE (6,5329)
 5329 FORMAT (' PAGE DELAY LOW THRESHOLD IN MILLISECONDS')
      WRITE (6,6001) RCC(17)
      WRITE (6,5330)
 5330 FORMAT ('+',60X,'PAGE DELAY HIGH THRESHOLD IN MILLISECONDS')
      WRITE (6,6002) RCC(18)
      WRITE (6,5333)
 5333 FORMAT (' LCH DEFERRED UTILIZATION THRESHOLD')
      WRITE (6,6001) RCC(20)
      WRITE (6,5334)
 5334 FORMAT ('+',60X,'LCH REQUEST RATE THRESHOLD')
      WRITE (6,6002) RCC(21)
C
      WRITE (6,5400)
 5400 FORMAT (/,47X,'EXTERNAL CONSTANTS (RMPT)',/)
      WRITE (6,5403)
 5403 FORMAT (' CPU RESOURCE FACTOR')
      WRITE (6,6001) RMPT4(2)
      WRITE (6,5404)
 5404 FORMAT ('+',60X,'I/O RESOURCE FACTOR')
      WRITE (6,6002) RMPT4(3)
      WRITE (6,5405)
 5405 FORMAT (' STORAGE RESOURCE FACTOR')
      WRITE (6,6001) RMPT4(4)
      WRITE (6,5406)
 5406 FORMAT ('+',60X,'ENQ RESIDENCY CPU SERVICE')
      WRITE (6,6002) RMPT4(5)
C     WRITE (6,5409)
C5409 FORMAT (' MAXIMUM ANALYSIS INTERVAL')
C     RTEMP = CITIME(RMPT4(7))
C     WRITE (6,6003) RTEMP
C     WRITE (6,5410)
C5410 FORMAT ('+',60X,'MINIMUM ANALYSIS INTERVAL')
C     RTEMP = CITIME(RMPT4(8))
C     WRITE (6,6004) RTEMP
      WRITE (6,5413)
 5413 FORMAT (' LENGTH OF AN SRM TIMER UNIT')
      RTEMP = CITIME(RMPT4(10))
      WRITE (6,6003) RTEMP
      WRITE (6,5414)
 5414 FORMAT ('+',60X,'NUMBER OF TUNITS PER SECOND')
      WRITE (6,6002) RMPT(21)
C     WRITE (6,5417)
C5417 FORMAT (' MINIMUM INTERVAL SERVICE VALUE')
C     WRITE (6,6001) RMPT4(11)
C     WRITE (6,5418)
C5418 FORMAT ('+',60X,'MINIMUM EXECUTION BEFORE SWAP OUT')
C     RTEMP = CITIME(RMPT4(12))
C     WRITE (6,6004) RTEMP
C     WRITE (6,5441)
C5441 FORMAT (' IEAOPT SUFFIX NUMBER')
C     WRITE (6,6001) RMPT4(13)
C     WRITE (6,5442)
C5442 FORMAT ('+',60X,'MINIMUM RTO DELAY')
C     RTEMP = CITIME(RMPT4(25))
C     WRITE (6,6004) RTEMP
C
      WRITE (6,5500)
 5500 FORMAT ('0',45X,'LOGICAL SWAP CONTROL CONSTANTS (LSCT)')
      WRITE (6,5503)
 5503 FORMAT (' LSCT LOW THRESHOLD FOR UIC')
      WRITE (6,6001) LSCC(3)
      WRITE (6,5504)
 5504 FORMAT ('+',60X,'LSCT HIGH THRESHOLD FOR UIC')
      WRITE (6,6002) LSCC(4)
      WRITE (6,5507)
 5507 FORMAT (' LSCT LOW THRESHOLD FOR ASM QUEUE')
      WRITE (6,6001) LSCC(5)
      WRITE (6,5508)
 5508 FORMAT ('+',60X,'LSCT HIGH THRESHOLD FOR ASM QUEUE')
      WRITE (6,6002) LSCC(6)
      WRITE (6,5511)
 5511 FORMAT (' LSCT LOW THRESHOLD FOR AVAILABLE FRAME COUNT')
      WRITE (6,6001) LSCC(7)
      WRITE (6,5512)
 5512 FORMAT ('+',60X,'LSCT HIGH THRESHOLD FOR AVAILABLE FRAME COUNT')
      WRITE (6,6002) LSCC(8)
      WRITE (6,5517)
 5517 FORMAT (' LSCT THINK TIME LOW THRESHOLD')
      WRITE (6,6001) LSCC4(5)
      WRITE (6,5518)
 5518 FORMAT ('+',60X,'LSCT THINK TIME HIGH THRESHOLD')
      WRITE (6,6002) LSCC4(6)
      WRITE (6,5519)
 5519 FORMAT (' LSCT THINK TIME INCREMENT')
      WRITE (6,6001) LSCC4(7)
      WRITE (6,5520)
 5520 FORMAT ('+',60X,'LSCT THINK TIME DECREMENT')
      WRITE (6,6002) LSCC4(8)
      WRITE (6,5523)
 5523 FORMAT (' LSCT CHECK THINK TIME DELTA')
      WRITE (6,6001) LSCC4(9)
C
C   WRITE OUT DATA WHICH IS RECORDED EVERY TIME
C
  150 CONTINUE
CCC   IPGIN=PVT4(3)
CCC   IPGOUT=PVT4(4)
CCC   IVIOIN=PVT4(5)
CCC   IVIOUT=PVT4(6)
CCC   IVIORC=PVT4(7)
CCC   ISWPIN=PVT4(8)
CCC   ISWPOT=PVT4(9)
CCC   IPGRC=PVT4(10)
CCC   ISWAP=PVT4(11)
CCC   ICMIN=PVT4(12)
CCC   ICMOUT=PVT4(13)
CCC   ICMRC=PVT4(14)
C
C   WRITE HEADER
C
      WRITE(6,6000) LTTIME,DATE
 6000 FORMAT ('1SRM ANALYSIS AT ',3(Z2,'.'),Z2,' ON ',A8,/,1X)
      WRITE (6,6055)
 6055 FORMAT (' BASE SRM TIME')
      BASE = 0.
      RTEMP = CTIME(BTOD)
      WRITE (6,6005) LTEMP
      WRITE (6,6018)
 6018 FORMAT ('+',60X,'CURRENT SRM TIME')
      RTEMP = CTIME(BSRM)
      WRITE (6,6006) LTEMP
      CALL DECVB (IDATA(1),NOW)
      BASE = FLOAT(NOW) * 1.0E-02 - FLOAT(BSRM) * 1.024E-03
C
C   WRITE OUT FIELDS FROM CCT
C
      WRITE (6,6100)
 6100 FORMAT (/,53X,'SRM CPU TABLE (CCT)',/)
      WRITE (6,6113)
 6113 FORMAT (' PRESENT SYSTEM CPU UTILIZATION')
      WRITE (6,6001) CCT(16)
      AVRCPU = AVRCPU + CCT(16)
      WRITE (6,6116)
 6116 FORMAT ('+',60X,'AVERAGE SYSTEM CPU UTILIZATION')
      RTEMP = CCT(17) / 256.
      WRITE (6,6004) RTEMP
      WRITE (6,6119)
 6119 FORMAT (' NUMBER OF ONLINE CPUS')
      WRITE (6,6001) CCT(20)
      WRITE (6,6120)
 6120 FORMAT('+',60X,'AVERAGE AVAILABLE FRAME COUNT')
      WRITE (6,6002) CCT(18)
      WRITE (6,6124)
 6124 FORMAT (' NO OF USERS N.S. FOR ENQS')
      WRITE (6,6001) CCT(19)
      WRITE (6,6127)
 6127 FORMAT('+',60X,'TIME OF LAST CPU IMBALANCE')
      RTEMP = CTIME(CCT4(7))
      WRITE (6,6006) LTEMP
      IT4 = 0
      IT2(2) = CCT(23)
      IT4 = IT4 * 2
      IF (IT2(1) .NE. 0) WRITE(6,6131)
 6131 FORMAT (' *LOW PRIORITY USER NOT DISPATCHED')
C
C   WRITE OUT FIELDS FROM ICT
C
      WRITE (6,6200)
 6200 FORMAT (/,53X,'SRM I/O TABLE',/)
      WRITE (6,6207)
 6207 FORMAT (' LCH UTILIZATION COMPUTATION BASE TIME')
      RTEMP = CTIME(ICT4(1))
      WRITE (6,6005) LTEMP
      WRITE (6,6210)
 6210 FORMAT ('+',60X,'LCH IMBALANCE BIT PATTERN')
      WRITE (6,6010) ICT4(2)
      WRITE (6,6213)
 6213 FORMAT (' LCH OVERUTILIZATION BIT PATTERN')
      WRITE (6,6009) ICT4(3)
      WRITE (6,6214)
 6214 FORMAT ('+',60X,'LCH UNDERUTILIZATION BIT PATTERN')
      WRITE (6,6010) ICT4(4)
C     WRITE (6,6036)
C6036 FORMAT('+',60X,'TIME OF LAST I/O IMBALANCE')
C     RTEMP=CTIME(ICT4(5))
C     WRITE(6,6006) LTEMP
C     CALL DECVB(IDATA(1),NOW)
C     IF(NOW.EQ.LAST) GOTO 200
C     DO 190 I=1,4
C     NT4=I-1
C     WRITE(6,6300)
C6300 FORMAT('0LOGICAL CHANNEL NUMBER')
C     WRITE(6,6001) NT4
C     WRITE(6,6301)
C6301 FORMAT('+',60X,'# I/O STARTED/ENQED PER SEC')
C=    RTEMP=RMCA(I*4+66)-LCHUSE(I,1)
C     RTEMP=RTEMP/(NOW-LAST)*100.
C     WRITE(6,6004) RTEMP
C     LCHUSE(I,1)=RMCA(I*4+66)
C     WRITE(6,6302)
C6302 FORMAT(' # LOGICALLY BUSY REQUESTS PER SEC')
C=    RTEMP=RMCA(I*4+67)-LCHUSE(I,2)
C     RTEMP=RTEMP/(NOW-LAST)*100.
C     WRITE(6,6003) RTEMP
C     LCHUSE(I,2)=RMCA(I*4+67)
C     WRITE(6,6303)
C6303 FORMAT('+',60X,'# PHYSICALLY BUSY REQUESTS PER SEC')
C=    RTEMP=RMCA(I*4+68)-LCHUSE(I,3)
C     RTEMP=RTEMP/(NOW-LAST)*100.
C     WRITE(6,6004) RTEMP
C     LCHUSE(I,3)=RMCA(I*4+68)
C 190 CONTINUE
C 200 CONTINUE
      IF (LAST .EQ. NOW) LAST = NOW - 100
      IT4 = 0
      IT2(2) = ICT(12)
      IT4 = IT4 * 2
      IF (IT2(1) .NE. 0) WRITE (6,6237)
 6237 FORMAT (' *SOME LOGICAL CHANNELS OVERLOADED')
      IT2(1) = 0
      IT4 = IT4 * 2
      IF (IT2(1) .NE. 0) WRITE (6,6239)
 6239 FORMAT (' *I/O LOAD BALANCING ACTIVE')
C
C   WRITE OUT FIELDS FROM MCT
C
      WRITE (6,6400)
 6400 FORMAT (/,51X,'SRM STORAGE TABLE',/)
      WRITE (6,6403)
 6403 FORMAT (' COMMON LOW WSS SPEC')
      WRITE (6,6001) MCT(3)
      WRITE (6,6404)
 6404 FORMAT ('+',60X,'COMMON HIGH WSS SPEC')
      WRITE (6,6002) MCT(4)
      WRITE (6,6407)
 6407 FORMAT (' COMMON LOW PAGE IN RATE SPEC')
      WRITE (6,6001) MCT(5)
      WRITE (6,6408)
 6408 FORMAT ('+',60X,'COMMON HIGH PAGE IN RATE SPEC')
      WRITE (6,6002) MCT(6)
      WRITE (6,6411)
 6411 FORMAT (' COMMON RECENT PAGE IN RATE')
      WRITE (6,6001) MCT(11)
      WRITE (6,6412)
 6412 FORMAT ('+',60X,'COMMON EFFECTIVE FRAME COUNT')
      WRITE (6,6002) MCT(12)
      WRITE (6,6443)
 6443 FORMAT (' SYSTEM WIDE HIGH UIC')
      WRITE (6,6001) MCT(13)
      AVRUIC = AVRUIC + MCT(13)
      WRITE (6,6444)
 6444 FORMAT ('+',60X,'NUMBER OF PAGES NEEDED BY STEAL')
      WRITE (6,6002) MCT(14)
      WRITE (6,6447)
 6447 FORMAT (' AVQ LOW INCIDENT COUNT')
      WRITE (6,6001) MCT4(8)
      IT4 = 0
      IT2(2) = MCT(31)
      IT4 = IT4 * 2
      IF (IT2(1) .NE. 0) WRITE (6,6461)
 6461 FORMAT (' *SQA FIRST LEVEL SHORTAGE')
      IT2(1) = 0
      IT4 = IT4 * 2
      IF (IT2(1) .NE. 0) WRITE (6,6464)
 6464 FORMAT (' *SQA SECOND LEVEL SHORTAGE')
      IT2(1) = 0
      IT4 = IT4 * 2
      IF (IT2(1) .NE. 0) WRITE (6,6467)
 6467 FORMAT (' *AVQ BELOW LIMIT')
      IT2(1) = 0
      IT4 = IT4 * 2
      IF (IT2(1) .NE. 0) WRITE (6,6470)
 6470 FORMAT (' *FIXED FRAMES ABOVE LIMIT')
      IT2(1) = 0
      IT4 = IT4 * 32
      IF (IT2(1) .NE. 0) WRITE (6,6473)
 6473 FORMAT (' *ASM FIRST LEVEL SHORTAGE')
      IT2(1) = 0
      IT4 = IT4 * 2
      IF (IT2(1) .NE. 0) WRITE (6,6476)
 6476 FORMAT (' *ASM SECOND LEVEL SHORTAGE')
C
C   WRITE OUT FIELDS FROM RCT
C
      WRITE (6,6500)
 6500 FORMAT (/,51X,'RESOURCE CONTROL TABLE (RCT)',/)
      WRITE (6,6505)
 6505 FORMAT (' SAMPLE INTERVAL COUNT')
      WRITE (6,6001) RCT(1)
      WRITE (6,6506)
 6506 FORMAT ('+',60X,'NUMBER OF AVAILABLE Q LOWS')
      WRITE (6,6002) RCT(4)
      WRITE (6,6509)
 6509 FORMAT (' UNREFERENCED INTERVAL COUNT AVERAGE')
      WRITE (6,6001) RCT(2)
      WRITE (6,6510)
 6510 FORMAT ('+',60X,'CPU UTILIZATION AVERAGE')
      WRITE (6,6002) RCT(3)
      WRITE (6,6513)
 6513 FORMAT (' AVAILABLE FRAME COUNT AVERAGE')
      WRITE (6,6001) RCT(5)
      AVRAVQ = AVRAVQ + RCT(5)
      WRITE (6,6514)
 6514 FORMAT ('+',60X,'ASM Q LENGTH AVERAGE')
      WRITE (6,6002) RCT(6)
      WRITE (6,6517)
 6517 FORMAT (' PAGE FAULT RATE')
      WRITE (6,6001) RCT(7)
      WRITE (6,6518)
 6518 FORMAT ('+',60X,'DEMAND PAGING RATE')
      WRITE (6,6002) RCT(8)
      WRITE (6,6521)
 6521 FORMAT (' TOTAL PAGING RATE')
      WRITE (6,6001) RCT(9)
      WRITE (6,6522)
 6522 FORMAT ('+',60X,'PAGE DELAY TIME (MILLISEC)')
      WRITE (6,6002) RCT(10)
C
C   WRITE OUT FIELDS FROM RMCA
C
      WRITE (6,6600)
 6600 FORMAT (/,51X,'SRM CONTROL TABLE (RMCA) - SWAP REASON COUNTS',/)
      WRITE (6,6603)
 6603 FORMAT (' SYSTEM SWAP-IN FAIL COUNT')
      WRITE (6,6001) RMCA(1)
      WRITE (6,6604)
 6604 FORMAT ('+',60X,'COUNT OF USERS COMING IN')
      WRITE (6,6002) RMCA(2)
      WRITE (6,6611)
 6611 FORMAT (' TERMINAL OUTPUT SWAP COUNT')
      WRITE (6,6001) RMCA4(3)
      WRITE (6,6612)
 6612 FORMAT ('+',60X,'TERMINAL INPUT SWAP COUNT')
      WRITE (6,6002) RMCA4(4)
      WRITE (6,6615)
 6615 FORMAT (' LONG WAIT SWAP COUNT')
      WRITE (6,6001) RMCA4(5)
      WRITE (6,6616)
 6616 FORMAT ('+',60X,'DETECTED WAIT SWAP COUNT')
      WRITE (6,6002) RMCA4(8)
      WRITE (6,6619)
 6619 FORMAT (' AUX STORAGE SHORTAGE SWAP COUNT')
      WRITE (6,6001) RMCA4(6)
      WRITE (6,6620)
 6620 FORMAT ('+',60X,'REAL STORAGE SHORTAGE SWAP COUNT')
      WRITE (6,6002) RMCA4(7)
      WRITE (6,6623)
 6623 FORMAT (' REQUESTED SWAP COUNT')
      WRITE (6,6001) RMCA4(9)
      WRITE (6,6624)
 6624 FORMAT ('+',60X,'ENQ EXCHANGE SWAP COUNT')
      WRITE (6,6002) RMCA4(10)
      WRITE (6,6627)
 6627 FORMAT (' EXCHANGE ON REC VALUE SWAP COUNT')
      WRITE (6,6001) RMCA4(11)
      WRITE (6,6628)
 6628 FORMAT ('+',60X,'UNILATERAL SWAP COUNT')
      WRITE (6,6002) RMCA4(12)
      WRITE (6,6631)
 6631 FORMAT (' LOGICAL SWAP COUNT')
      WRITE (6,6001) RMCA4(14)
      WRITE (6,6632)
 6632 FORMAT ('+',60X,'LOGICAL SWAP FAIL COUNT')
      WRITE (6,6002) RMCA4(15)
      WRITE (6,6637)
 6637 FORMAT (' TRANSITION SWAP COUNT')
      WRITE (6,6001) RMCA4(13)
C
C   WRITE OUT FIELDS FROM LSCT
C
      WRITE (6,6700)
 6700 FORMAT (/,51X,'LOGICAL SWAP CONTROL TABLE (LSCT)')
      WRITE (6,6705)
 6705 FORMAT (' LSCT MAXIMUM THINK TIME')
      WRITE (6,6001) LSCT4(1)
      WRITE (6,6708)
 6708 FORMAT ('+',60X,'NUMBER OF LOGICALLY SWAPPED ADDRESS SPACES')
      WRITE (6,6002) LSCT4(2)
C
      WRITE (6,6811)
 6811 FORMAT ('0# PAGE-INS/SEC')
      RTEMP = PVT4(3) - IPGIN
      RTEMP = RTEMP / (NOW - LAST) * 100.
      WRITE (6,6003) RTEMP
      WRITE (6,6812)
 6812 FORMAT ('+',60X,'# PAGE-OUTS/SEC')
      RTEMP = PVT4(4) - IPGOUT
      RTEMP = RTEMP / (NOW - LAST) * 100.
      WRITE (6,6004) RTEMP
      WRITE (6,6815)
 6815 FORMAT (' # VIO-INS/SEC')
      RTEMP = PVT4(5) - IVIOIN
      RTEMP = RTEMP / (NOW - LAST) * 100.
      WRITE (6,6003) RTEMP
      WRITE (6,6816)
 6816 FORMAT ('+',60X,'# VIO-OUTS/SEC')
      RTEMP = PVT4(6) - IVIOUT
      RTEMP = RTEMP / (NOW - LAST) * 100.
      WRITE (6,6004) RTEMP
      WRITE (6,6819)
 6819 FORMAT (' # PAGE RECLAIMS/SEC')
      RTEMP = PVT4(10) - IPGRC
      RTEMP = RTEMP / (NOW - LAST) * 100.
      WRITE (6,6003) RTEMP
      WRITE (6,6820)
 6820 FORMAT ('+',60X,'# VIO RECLAIMS')
      RTEMP = PVT4(7) - IVIORC
      RTEMP = RTEMP / (NOW - LAST) * 100.
      WRITE (6,6004) RTEMP
      LAST = NOW
      IPGIN = PVT4(3)
      IPGOUT = PVT4(4)
      IVIOIN = PVT4(5)
      IVIOUT = PVT4(6)
      IVIORC = PVT4(7)
      ISWPIN = PVT4(8)
      ISWPOT = PVT4(9)
      IPGRC = PVT4(10)
      ISWAP = PVT4(11)
      ICMIN = PVT4(12)
      ICMOUT = PVT4(13)
      ICMRC = PVT4(14)
      GO TO 100
  300 CONTINUE
      IF (FIRST) GO TO 999
      WRITE (6,6900) DATE
 6900 FORMAT ('1SRM AVERAGES ON ',A8)
      WRITE (8,8000) DATE
 8000 FORMAT ('0SRM AVERAGES ON ',A8)
      AVRCPU = AVRCPU / NCALLS
      AVRWKL = AVRWKL / NCALLS
      AVRLCH = AVRLCH / NCALLS
      AVRUIC = AVRUIC / NCALLS
      AVRAVQ = AVRAVQ / NCALLS
      WRITE (6,6901) AVRCPU
 6901 FORMAT ('0AVERAGE CPU UTILIZATION = ',F7.2)
      WRITE (8,6901) AVRCPU
      WRITE (6,6902) AVRLCH
 6902 FORMAT (' AVERAGE PAGING LCH UTILIZATION = ',F7.2)
      WRITE (8,6902) AVRLCH
      WRITE (6,6903) AVRWKL
 6903 FORMAT (' AVERAGE WLM SYSTEM WORKLOAD = ',F7.2)
      WRITE (8,6903) AVRWKL
      WRITE (6,6904) AVRUIC
 6904 FORMAT (' AVERAGE UNREFERENCED INTERVAL COUNT = ',F7.2)
      WRITE (8,6904) AVRUIC
      WRITE (6,6908) AVRAVQ
 6908 FORMAT (' AVERAGE AVAILABLE FRAME COUNT = ',F7.2)
      WRITE (8,6908) AVRAVQ
      IF (NTIME .EQ. LAST) GO TO 360
C     DO 350 I=1,4
C     NT4=I-1
C     RTEMP=LCHUSE(I,1)-LCH(I)
C     RTEMP=RTEMP/(LAST-NTIME)*100.
C     WRITE(6,6907) NT4,RTEMP
C6907 FORMAT(' AVERAGE LCH UTILIZATION FOR CHANNEL',I2,' = ',F6.2)
C     WRITE(8,6907) NT4,RTEMP
C 350 CONTINUE
  360 CONTINUE
      WRITE (8,6915)
      WRITE (6,6915)
 6915 FORMAT ('0END OF SRM ANALYSIS')
  999 CONTINUE
      RETURN
      END
