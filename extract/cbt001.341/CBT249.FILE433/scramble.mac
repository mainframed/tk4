)F FUNCTION

  The SCRAMBLE CLIST invokes a utility processor to Encipher or
  Decipher your dataset according to the NBS standard algorithm.
  You supply a 1 to 8 alpha-numeric keyword, from which a 48 bit
  code key will be produced.  This code key is applied to each 8
  bytes (64 bits) of your dataset.  Each record in the designated
  dataset is read, en- or deciphered, and re-written in place. The
  utility can handle records of FB or VB format with an LRECL in the
  range of 8 to 256 bytes.  Note that the algorithm is designed to
  work only on multiples of 8 bytes, so if the LRECL is NOT a
  multiple of 8, then up to 7 bytes per record may be unprocessed.

  WARNING: this utility operates on the actual dataset by using the
           read-and-update-in-place technique.  If you forget the key
           that you used to encipher the dataset, KISS THE DATA GOOD-BYE
           because we have no way of deciphering the data again.

  If you are hopelessly paranoid, you can encipher the enciphered
  dataset with a different key to really grunge up the data.  The
  decipherion process must be the exact inverse of the encipher process
  in order to recover the original data again.  (see example 2)


)X SYNTAX -

   SCRAMBLE dsname key
          ENCIPHER / DECIPHER
          SKIP('#recs')
                                                                       .
   Required: 'dsname' , 'key'  and 'ENCIPHER' or 'DECIPHER' keywords
   Defaults: SKIP(0)
                                                                       .
EXAMPLES -

1) to encipher dataset 'userid.MYSTUFF.PRIVATE.DATA' with the key of
'JUNK' type:

  SCRAMBLE  MYSTUFF.PRIVATE.DATA JUNK ENCIPHER

  to get it back to clear text again, type

  SCRAMBLE  MYSTUFF.PRIVATE.DATA JUNK DECIPHER

2) to really garbage up 'userid.SUPER.PRIVATE.DATA' with keys of
   'WHATME' and 'WORRY' type:

  SCRAMBLE SUPER.PRIVATE.DATA WHATME ENCIPHER
  SCRAMBLE SUPER.PRIVATE.DATA WORRY ENCIPHER

   to decipher this mess, just reverse the order as in:

  SCRAMBLE SUPER.PRIVATE.DATA WORRY DECIPHER
  SCRAMBLE SUPER.PRIVATE.DATA WHATME DECIPHER

    WARNING:  if you do these out of order, the solution to the problem
              is not unlike Rubik's Cube after 6 good twists...
+
3) you were merrily processing your dataset and POOF, the system
   crashes.   Now what do you do?

   a) Examine your dataset with SPF browse, and find the last record
      number that was processed.  If all were processed, you are in
      luck and no further action is necessary.
   b) re-run the SCRAMBLE specifying the SAME KEY you used before
      and the same ENCIPHER or DECIPHER keyword, but adding a
      SKIP(nnnn) for the number of records that were already
      processed.

)O OPERANDS -

))DSNAME  - the dataset to be en/de-ciphered. if not in quotes,
            then your userid prefix is assumed.
))KEY     - the 1 to 8 byte alpha-numeric keyword from which the 48 bit
            key is generated.
))ENCIPHER - keyword- specifies an encipher operation is requested. This
            keyword is mutually exclusive with the Decipher keyword.
))DECIPHER - keyword- specifies a decipher operation is requested. This
            keyword is mutually exclusive with the Encipher keyword.
))SKIP(#recs) - optional keyword - specifies that quantity '#recs' of
            records in dataset are to be skipped from processing, and
            the '#recs+1' record is the first record to be en/de-ciphere
            (useful if system goes down while processing your dataset)
