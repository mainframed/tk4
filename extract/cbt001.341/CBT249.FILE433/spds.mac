)F FUNCTION -
 The SPDS command allows a TSO user to access and manipulate the
 directory and selected members of a PDS or partitioned data set.

 SPDS subcommands are available to display statistics on the data set
 directory and data set usage, modify the data set directory and modify
 the DCB attributes of the data set.

 Additional subcommands can display portions of the member name
 directory, list occurances of a search string in a member, restore a
 previously deleted member, create an alias for a member, display all
 aliases for a member, locate a member with desired attributes, and
 browse, list, delete or rename a member.

 For load data sets, subcommands are available to display and modify
 the linkage attributes of a module, list the HISTORY data for a
 module and MAP the CSECT structure of a module.

 For other partitioned data sets, subcommands are available to submit
 a JCL member, edit a member, print a member and display SPF statistics
 for a member.


 SPDS command features:
    Hexadecimal member names -- member names may be entered in hex for
    any of the subcommands which accept member names (or partial member
    names) as input.  Thus, for these subcommands, x'd7c4e2f9' and PDS9
    are equivalent.  also, note that x'333' and x'0333' are equivalent.

    Default member names -- if no member name is entered for an
    ATTRIB, BROWSE, DELETE, DIRENTRY, EDIT, FIND, HISTORY, IF,
    LIST, MAP, MEMBERS, PRINTOFF, SPFEDIT, SUBMIT or TSOLIST
    subcommand, the SPDS command will use the last member name or
    member group entered for any of these subcommands; also, note
    that ALIAS, RENAME and RESTORE subcommands also modify the
    default member name.

    Member groups -- the above subcommands which allow default member
    names also accept ranges and patterns of member names.  A member
    name range is specified as name1:name2, which selects the same
    members as DISPLAY name1 name2; a pattern member name is
    specified as name1/name2, which selects the same members as
    PATTERN name1 name2.

    Sequential data sets -- the following SPDS subcommands are also
    defined for non-partitioned data sets: BROWSE, EDIT, FIND, LIST,
    PRINTOFF, SPFEDIT, SUBMIT and TSOLIST.  The documented syntax is
    unchanged except that no data may be entered corresponding to the
    member name position.

    Subcommand name abbreviations -- all subcommand names can be
    abbreviated to the first few characters of the subcommand name.
    Subcommand names are scanned in the order of output from the
    OPTIONS subcommand; the first match between the entered name
    and the subcommand name table is used.
)X SYNTAX -
     SPDS  dsname VOLUME(name) SHR/OLD  subcommand operands

 ALIASES  - NONE.
 DEFAULTS - SHR
 REQUIRED - dsname
)O OPERANDS -
  dsname       - specifies the data set name.

))VOLUME(name) - optional, specifies the volume name on which the
                 data set resides.  If a volume name is entered,
                 SYSALLDA is assumed as the unit name; otherwise,
                 the unit name from the catalog is used.  Note:
                 this parameter should be used if the data set is
                 not cataloged.

))SHR          - optional, specifies that the data set is to be
                 allocated with a disposition of SHR.

))OLD          - optional, specifies that the data set is to be
                 allocated with a disposition of OLD to prevent the
                 use of this data set by other users.

))SUBCOMMAND   - optional, specifies that SPDS is not to process
                 subcommands -- only the single subcommand entered
                 and any of its operands will be processed.

))OPERANDS     - optional, specifies any required operands for a
                 subcommand entered on the primary command line.
)S  The SPDS command has the following subcommands:
   ATTRIB xx       - list attributes of member or module XX
   ATTRIB xx reus  - assign the reusable linkage attribute to module XX
   ALIAS xx yy     - add an alias of YY to member XX
   BROWSE xx       - display member XX with SPF BROWSE
   CHANGE zzz      - switch to the data set ZZZ
   DISPLAY rr tt   - display member names in the range RR thru TT999999
   DIRENTRY xx     - dump the directory entry for member XX
   DELETE xx       - delete member XX
   DSNAME          - display allocation status of current dsname
   EDIT xx         - edit member XX
   END             - terminate the SPDS command
   EXEC ccc        - execute SPDS subcommands from the CLIST CCC
   FIND xx =fff=   - list occurances of the string FFF in member XX
   FIXPDS exp(30)  - add 30 directory blocks to the data set
   HELP sss        - list the HELP entry for subcommand SSS
   HISTORY xx      - list HISTORY data for module XX
   IF mvs/ rent    - locate the ..MVS.. modules marked as reentrant
   KLEAR or K      - clear a 327x terminal
   LIST xx         - display member XX
   MAP xx short    - map the CSECT structure of module XX in short form
   MEMBERS gg      - display member group GG
   OPTIONS         - display the menu of SPDS subcommands
   PATTERN pp dd   - display all member names containing PP and DD
   PRINTOFF xx     - print a hardcopy of member XX
   RENAME xx yy    - rename member XX to YY
   RESTORE xx hhh  - resurrect member XX at TTR HHH
   SPFEDIT xx      - edit member XX with SPF edit
   SUBMIT xx       - submit JCL member XX
   TSO yy z1 z2    - invoke the TSO routine YY with operands Z1 and Z2
   TSOLIST xx      - display member XX with TSO list
   USAGE           - list directory and data set statistics
   ABEND           - a HELP entry to explain SPDS ABEND processing
   ATTN            - a HELP entry to explain resetattention handling
   GROUP           - a HELP entry to explain member name forms allowed
   UPDATE          - a HELP entry to explain SPDS SHR updates
=ATTRIB=A=AT=ATT=ATTR=ATTRI
)F  The ATTRIB subcommand lists the attributes of a member.

 If the data set is not a load library, SPF statistics are displayed
 for members last saved by SPF edit, any SSI information is formatted
 and displayed and the following alias information is displayed:
   a. If the member is an alias, the name of any corresponding real
      members will be displayed.
   b. If the member is not an alias, the name of any corresponding
      alias members and any apparent aliases will be displayed.

 If the data set is a load library, the following linkage-editor
 attributes are identified:
   AUTH      - APF authorized
   DC        - downward compatible (the module can be reprocessed by
               a level E linkage-editor).
   LOAD ONLY - only loadable (OL -- the module can be brought into main
               storage only with a load macro)
   NOT EDIT  - not editable (the module cannot be linkage-edited)
   NOT EXEC  - not executable (the linkage-editor noted an error and
               LET processing was not requested)
   OVERLAY   - overlay load module structure
   PAGE      - page alignment required
   REFR      - refreshable (replaceable by a new copy during execution)
   RENT      - reentrant (executable by several tasks simultaneously)
   REUS      - reusable (executable by several tasks in serial order)
   SCTR      - scatter load module structure
   SSI       - SSI information in hexadecimal
   TEST      - linked with the TEST option

 In addition, the ATTRIB subcommand can add or delete several linkage
 attributes for a load module.  When the ATTRIB subcommand is changing
 a module's attributes and the module is reentrant, the reusable
 attribute is also added as is done by the linkage-editor.

 If the member is an alias, the name of any corresponding real members
 will be displayed if any exist; otherwise, the module name from the
 alias directory entry (the real module name at the time the alias was
 created) is displayed.

 If the member is not an alias, the name of any corresponding alias
 members and any apparent aliases will be displayed.

 Caution: this subcommand modifies the data set if linkage-edit
 attributes are modified.  To ensure data set integrity, you should
 allocate the data set as OLD or be aware of the data set update
 protection provided by the SPDS command for SHR allocations
 (for details, see HELP update).
)X SYNTAX -
     ATTRIB  member  AUTH/NOAUTH   EDIT/NOEDIT   EXEC/NOEXEC
                     LOAD/NOLOAD   PAGE/NOPAGE   REFR/NOREFR
                     RENT/NORENT   REUS/NOREUS
                     LKEDDATE/NOLKEDDATE
                     ALIASINFO/NOALIASINFO

 ALIASES  - A, AT, ATT, ATTR, ATTRI, ATTRIB
 DEFAULTS - member, LKEDDATE, ALIASINFO
 REQUIRED - none.
)O OPERANDS -
  member  -  optional, specifies the name of the member(s) whose
             attributes are to be displayed or the name of the load
             module whose attributes are to be updated.  Default
             member names, member name ranges and member name patterns
             are allowed; for more information, enter HELP GROUP.

 The following linkage attribute modifications can be requested for
 load modules:
))AUTH    -  authorize the module with APF
))NOAUTH  -  remove APF authorization from the module
))EDIT    -  allow the module to be linkage-edited
))NOEDIT  -  disallow linkage-editing of the module
))EXEC    -  allow execution of the module
))NOEXEC  -  disallow execution of the module
))LOAD    -  allow module use only by a load macro
))NOLOAD  -  allow module use by any means
))PAGE    -  require page alignment for the module
))NOPAGE  -  allow standard alignment for the module
))REFR    -  add the refreshable attribute
))NOREFR  -  remove the refreshable attribute
))RENT    -  add the reentrant attribute (and the reusable attribute)
))NORENT  -  remove the reentrant attribute
))REUS    -  add the reusable attribute
))NOREUS  -  remove the reusable attribute

))LKEDDATE    -  provide the date of the last linkage-edit if possible
))NOLKEDDATE  -  do not provide the date of the last linkage-edit
))ALIASINFO   -  provide the name of alias or real members
))NOALIASINFO -  do not provide any alias or real member data
=ALIAS=AL=ALI=ALIA
)F   The ALIAS subcommand assigns an alias name to a named member.

  If the data set is not a load library, the alias name may be used
  as an alternate name for the identified member.

  If the data set is a load library, then if the alias name is an
  imbedded external name within the load module, that external name
  will be used as the alias entry point; otherwise, the entry point
  of the named member will also be used as the alias entry point.

  An alias name may be assigned to a member which is already an alias.


  Caution: this subcommand modifies the data set. To ensure data set
  integrity, you should allocate the data set as OLD or be aware of
  the data set update protection provided by the SPDS command for SHR
  allocations (for details, see HELP update).
)X SYNTAX -
     ALIAS  membername aliasname

 ALIASES  - AL, ALI, ALIA, ALIAS
 DEFAULTS - none.
 REQUIRED - membername, aliasname
)O OPERANDS -
 membername - specifies the member to which an alias is to be assigned.

 aliasname  - Specifies the alias name to be assigned.  Note that
              this alias name becomes the SPDS default member name.
=BROWSE=BROWS=BROW=BRO=BR=B
)F    The BROWSE subcommand enters SPF BROWSE for a member.

  When the first BROWSE or SPFEDIT subcommand is entered, SPDS calls
  an SPF interface which invokes SPDS recursively as an SPF dialog;
  SPF browse service is then directly invoked for each subsequent
  BROWSE subcommand.
)X SYNTAX -
     BROWSE  member

 ALIASES  - B, BR, BRO, BROW, BROWS, BROWSE
 DEFAULTS - member
 REQUIRED - none.
)O OPERANDS -
 member   -    optional, specifies the member name(s) to be browsed.
               Default member names, member name ranges and member
               name patterns are allowed; for more information, enter
               HELP GROUP.

               Note: if : is entered for the member name position, SPF
               will be requested to provide a member selection screen.
=CHANGE=C=CH=CHA=CHAN=CHANG=PDS=PD
)F The CHANGE or PDS subcommand switches SPDS to a different data set.
)X SYNTAX -
     CHANGE  dsname VOLUME(name) SHR/OLD

 ALIASES  - PD, PDS, C, CH, CHA, CHAN, CHANG, CHANGE
 DEFAULTS - SHR or previously used data set if no operands are entered
 REQUIRED - none.
)O OPERANDS -
  dsname       - optional, specifies the name of a different data set.
                 If no data set name is entered, the previously used
                 data set will be assumed.

))VOLUME(name) - optional, specifies the volume name on which the
                 data set resides.  If a volume name is entered,
                 SYSALLDA is assumed as the unit name; otherwise,
                 the unit name from the catalog is used.  Note:
                 this parameter should be used if the data set is
                 not cataloged.

))SHR          - optional, specifies that the data set is to be
                 allocated with a disposition of SHR.

))OLD          - optional, specifies that the data set is to be
                 allocated with a disposition of OLD to prevent the
                 use of this data set by other users.
=DISPLAY=D=DI=DIS=DISP=DISPL=DISPLA
)F    The DISPLAY subcommand lists member names from the data set
   directory.

   Note that -A is added following a displayed member name if the
   member name is an alias.  The member name is listed in a combined
   hexadecimal/character format if it does not contain upper-case
   alphanumeric characters (including @, $ and #) or if the first
   character is numeric.  Unprintable characters (for 3270-type
   devices) in a member name are displayed as periods.
)X SYNTAX -
     DISPLAY  name1 name2

 ALIASES  - D, DI, DIS, DISP, DISPL, DISPLA, DISPLAY
 DEFAULTS - entire directory
 REQUIRED - none.
)O OPERANDS -
 name1    - optional, specifies the starting member name (or portion
            of the member name) at which the display is to start. if
            omitted, the entire directory is displayed.

 name2    - optional, specifies the ending member name (or portion of
            the member name) after which the display is to stop.  If
            omitted, the display continues to the end of the directory.
=DIRENTRY=DIR=DIRE=DIREN=DIRENT=DIRENTR
)F The DIRENTRY subcommand dumps the directory entry of a member.

 OFFSET  NAME      DESCRIPTION  (from GC28-1049, debugging handbook #3)
 ------  --------  ----------------------------------------------------
  00     PDS2NAME  CL8   -- member name
  08     PDS2TTRP  XL3   -- TTR of first block of data
  0B     PDS2INDC  X'80' -- member is an alias
                   X'60' -- number of TTR's following (0 - 3)
                   X'1F' -- number of halfwords following (0 - 31)

 *** Load module section only:
  0C     PDS2TTRT  XL4   -- first text TTR, x'00'
  10     PDS2TTRN  XL4   -- overlay: note list TTR, number of entries
                            scatter: translation table TTR, x'00'
  14     PDS2ATR1  X'F0' -- reentrant, reusable, overlay, test
                   X'0F' -- only loadable, scatter, executable, 1 text
  15     PDS2ATR2  X'F0' -- not DC, text origin=0, EP=0, no rld items
                   X'0F' -- not EDIT, test symbols, LKED F, refreshable
  16     PDS2STOR  XL3   -- total contiguous storage required
  19     PDS2FTBL  XL2   -- length of first text block
  1B     PDS2EPA   XL3   -- entry point address of this member
  1E     PDS2FTB1  XL2   -- x'8000' processed by OS/VS linkage-editor
                            x'2000' page alignment required
                            x'1000' SSI information is present
                            x'0800' APF information is valid
  20     PDS2FTB3  XL1   -- # of RLD records (DF/DS LKED for MVS/XA)

 *** Scatter load module section only:
  +0     PDS2SLSZ  XL2   -- number of bytes in scatter list
  +2     PDS2TTSZ  XL2   -- number of bytes in translation table
  +4     PDS2ESDT  XL2   -- ESD CSECT identifier of first text block
  +6     PDS2ESDC  XL2   -- ESD CSECT identifier of entry point

 *** Alias load module section only:
  +0     PDS2EPM   XL3   -- entry point address of real member
  +3     PDS2MNM   CL8   -- original member name of real member

 *** SSI section (note this section is on a halfword boundary):
  +0     PDSSSIW   XL4   -- SSI information

 *** APF section for OS/VS load modules:
  +0     PDSAPFCT  X'01' -- length of following APF information
  +1     PDSAPFAC  XL1   -- 0 is not authorized; otherwise, authorized
)X SYNTAX -
     DIRENTRY  member

 ALIASES  - DIR, DIRE, DIREN, DIRENT, DIRENTR, DIRENTRY
 DEFAULTS - member
 REQUIRED - none.
)O OPERANDS -
 member -   optional, specifies the name of the member(s) whose
            directory entry is to be dumped.  Default member names,
            member name ranges and member name patterns are allowed;
            for more information, enter HELP GROUP.
=DELETE=DE=DEL=DELE=DELET=SC=SCR=SCRA=SCRAT=SCRATC=SCRATCH
)F   The DELETE or SCRATCH subcommand deletes a member from the
  data set.

  Caution: this subcommand modifies the data set. To ensure data set
  integrity, you should allocate the data set as OLD or be aware of
  the data set update protection provided by the SPDS command for SHR
  allocations (for details, see HELP update).
)X SYNTAX -
     DELETE  member

 ALIASES  - DE, DEL, DELE, DELET, DELETE,
            SC, SCR, SCRA, SCRAT, SCRATC, SCRATCH
 DEFAULTS - member
 REQUIRED - none.
)O OPERANDS -
 member -   optional, specifies the name of the member(s) to be
            deleted.  Default member names, member name ranges and
            member name patterns are allowed; for more information,
            enter HELP GROUP.

            If asterisk notation is used to represent a member or a
            member group or if only a simple member name is entered,
            the represented members will be deleted without prompting.

            If a member name is not entered or if a member group name
            is entered, a yes/no prompt will be provided by member name
            to allow selective member deletion.
=EDIT=E=ED=EDI
)F  The EDIT subcommand edits a member.  The TSO EDIT command is used;
 if a member does not exist, EDIT will start in "insert" mode.

 If an EDIT type keyword is entered, that keyword is passed to EDIT
 as the descriptive qualifier; otherwise, a descriptive qualifier is
 computed as follows:
   1. If the low-level qualifier of the partitioned data set name is
      one of the valid descriptive qualifiers for EDIT (ASM, BASIC,
      CLIST, CNTL, COBOL, DATA, IPLI, LIST, PLI, TEXT or VSBASIC),
      that qualifier is passed to EDIT.
   2. If the low-level qualifier is FORT, GOFORT is passed to EDIT.
   3. Otherwise, the data type qualifier is not a valid descriptive
      qualifier and the general descriptive qualifier, DATA, is
      passed to EDIT.
)X SYNTAX -
     EDIT  member NONUM ASIS  OLD/NEW  ASM/BASIC/CLIST/CNTL/COBOL/DATA/
                                       FORTE/FORTG/FORTGI/FORTH/GOFORT/
                                       IPLI/LIST/PLI/PLIF/TEXT/VSBASIC

 ALIASES  - E, ED, EDI, EDIT
 DEFAULTS - member, EDIT type based on the SPDS data set name
 REQUIRED - none.
)O OPERANDS -
 member   - optional, specifies the member name(s) to be passed (along
            with the data set name) to the TSO EDIT command.  Default
            member names, member name ranges and member name patterns
            are allowed; for more information, enter HELP GROUP.

))NONUM   - optional, specifies that the member is to be edited without
            line numbers.

))ASIS    - optional, specifies that the member is to be edited with
            upper and lower-case data.

))OLD     - optional, specifies that SPDS is to check that the member
            exists before calling EDIT.

))NEW     - optional, specifies that SPDS is to check that the member
            does not exist before calling EDIT.

 EDIT type keywords are as follows:
))ASM     -  EDIT type is assembly
))BASIC   -  EDIT type is BASIC
))CLIST   -  EDIT type is CLIST
))CNTL    -  EDIT type is CNTL
))COBOL   -  EDIT type is COBOL
))DATA    -  EDIT type is DATA
))FORTE   -  EDIT type is FORTRAN level "E"
))FORTG   -  EDIT type is FORTRAN level "G"
))FORTGI  -  EDIT type is FORTRAN level "GI"
))FORTH   -  EDIT type is FORTRAN level "H"
))GOFORT  -  EDIT type is GOFORT
))IPLI    -  EDIT type is IPLI
))LIST    -  EDIT type is LIST
))PLI     -  EDIT type is PLI
))PLIF    -  EDIT type is PLI (F-level)
))TEXT    -  EDIT type is TEXT
))VSBASIC -  EDIT type is VSBASIC
=END=EN
)F   The END subcommand terminates the SPDS command.
)X SYNTAX -
     END

 ALIASES  - EN, END
)O OPERANDS -
 no operands are supported.
=EXEC=EX=EXE=%
)F   The EXEC or % subcommand executes a CLIST containing SPDS
  subcommands.  The TSO CLIST processor is used; both implicit (%... )
  and explicit (EXEC ... ) call forms are supported.
)X SYNTAX -
     EXEC  clistname 'operands'   /     %clistmem  operands

 ALIASES  - %, EX, EXE, EXEC
 DEFAULTS - none.
 REQUIRED - clistname or clistmem
)O OPERANDS -
 clistname - specifies the CLIST data set name.

 clistmem  - specifies the name of a member in the CLIST partitioned
             data set allocated to FILE(SYSPROC).

 operands  - optional, may include any parameters for the CLIST.
=FIND=F=FI=FIN
)F  The FIND subcommand displays portions of a member which contain a
  search string.  Optionally, the THEN or ELSE keywords may be entered
  to allow conditional execution of other subcommands.

 Unprintable characters for 3270-type devices are translated to periods
 before they are displayed.

 The FIND formats are NUM, SNUM, NONUM, MULTILINE, LINEDUMP, BLOCK
 and DUMP.  The default format is initially NUM; however, each time
 a format operand is entered on a LIST or FIND subcommand, the value
 entered is used as the output format for subsequent LIST and FIND
 subcommands.  Also, note the following:
   1. Formats NUM, SNUM and NONUM limit the search and display length
      for logical records to 256 characters.
   2. Formats BLOCK and DUMP apply to physical records; the other
      formats apply to logical records.
   3. If the entire member is input, a summary line is displayed
      stating the number of lines (records for BLOCK or DUMP formats)
      in the member.
   4. Formats MULTILINE, LINEDUMP, BLOCK and DUMP display only those
      segments of a record which contain the search string; however,
      a following segment will also be displayed if the string spans
      a segment boundary.
)X SYNTAX -
     FIND  member 'string' NUM/SNUM/NONUM/MULTILINE/LINEDUMP/BLOCK/DUMP
                           SKIPREC(n) MAXIN(n) MAXOUT(n)
                           SKIPCOL(n) MAXLEN(n) FIRST/NOFIRST
                        THEN(ATTRIB/BROWSE/DIRENTRY/DELETE/
                             EDIT/END/HISTORY/LIST/MAP/MEMBERS/
                             PRINTOFF/SPFEDIT/SUBMIT/TSOLIST)
                        ELSE(ATTRIB/BROWSE/DIRENTRY/DELETE/
                             EDIT/END/HISTORY/LIST/MAP/MEMBERS/
                             PRINTOFF/SPFEDIT/SUBMIT/TSOLIST)

 ALIASES  - F, FI, FIN, FIND
 DEFAULTS - member, previous string,  NUM or previous LIST/FIND format,
                    SKIPREC(0), MAXIN(9999999), MAXOUT(9999999),
                    SKIPCOL(0), MAXLEN(99999), NOFIRST
 REQUIRED - none.
)O OPERANDS -
 member      -  optional, specifies the name of the member(s) to be
                scanned.  Default member names, member name ranges
                and member name patterns are allowed; for more
                information, enter HELP GROUP.

 string      -  optional, the string to be searched for.  It is coded
                as a delimited string like +searched for+.  If the
                string is not entered or is null, the last string
                entered will be used. The string may contain one to
                16 characters.

                As an alternative, hexadecimal data may be entered as
                a string delimited with x's like x0123456789abcdefx.
                Note that the string may contain one to 32 characters
                and that x333x and x0333x are equivalent.

 FIND format control keywords are as follows:
))NUM        -  The line number field (the last 8 bytes of a fixed-
                format record or the first 8 bytes otherwise) of
                each logical record is examined; if the field is not
                numeric, formatting is switched to NONUM mode for the
                remainder of the member.

                For SPF-saved members, the high-order six digits of
                the line number field is formatted; otherwise, the
                low-order six digits of the line number field is
                formatted by suppressing leading zeroes.  The line
                number segment is followed by a blank and up to 249
                characters of data from the logical record.  Note that
                the formatted line including the line number segment
                and the following blank is scanned for the search
                string.

))SNUM       -  The line number field (the last 8 bytes of a fixed-
                format record or the first 8 bytes otherwise) is
                discarded.  Up to 256 bytes from a logical record are
                searched or displayed.

))NONUM      -  Up to 256 bytes from a logical record are searched or
                displayed.

))MULTILINE  -  Logical records are formatted with a decimal character
                displacement count and segments of (line width - 10)
                characters.  A blank line is output to separate
                segments displayed by record.  Only formatted segments
                which contain the search string are displayed;
                however, a following segment will also be displayed if
                the string spans a segment boundary.

))LINEDUMP   -  Logical records are formatted with a hexadecimal byte
                displacement field, segments of up to 32 characters of
                hexadecimal data and up to 16 bytes of equivalent
                characters surrounded by asterisks.  A blank line is
                output to separate segments displayed by record.  Only
                formatted segments which contain the search string are
                displayed; however, a following segment will also be
                displayed if the string spans a segment boundary.

))BLOCK      -  Physical records are formatted with a decimal
                character displacement count and segments of (line
                width - 10) characters.  A blank line and a header are
                output to separate segments displayed by record.  Only
                formatted segments which contain the search string are
                displayed; however, a following segment will also be
                displayed if the string spans a segment boundary.

))DUMP       -  Physical records are formatted with a hexadecimal byte
                displacement field, segments of up to 32 characters of
                hexadecimal data and up to 16 bytes of equivalent
                characters surrounded by asterisks.  A blank line and
                a header are output to separate segments displayed by
                record.  Only formatted segments which contain the
                search string are displayed; however, a following
                segment will also be displayed if the string spans a
                segment boundary.

 FIND control keywords are as follows:
))SKIPREC(n)  - n is coded as 0 through 9999999 to specify the number
                of logical records (physical records for BLOCK or
                DUMP formats) to ignore at the beginning of a member.

))MAXIN(n)    - n is coded as 0 through 9999999 to specify the maximum
                number of logical records (physical records for BLOCK
                or DUMP formats) to input for a member after
                satisfying any SKIPREC operand.

))MAXOUT(n)   - n is coded as 0 through 9999999 to specify the maximum
                number of logical records (partial logical records for
                MULTILINE or LINEDUMP formats; partial physical records
                for BLOCK or DUMP formats) to output for a member.

))SKIPCOL(n)  - n is coded as 0 through 99999 to specify the number
                of columns to ignore at the beginning of each logical
                record (physical record for BLOCK or DUMP formats).

                Note: for NUM or SNUM output format with OS/VS record
                format V or U, SKIPCOL(0) positions the data formatter
                to the first data position after the line number field.

))MAXLEN(n)   - n is coded as 0 through 99999 to specify the maximum
                length of a logical record (physical record for BLOCK
                or DUMP formats) to search or display.

))FIRST       - Specifies that any remaining data in the member is
                to be listed after the first occurance of the string.

))NOFIRST     - Specifies that normal FIND processing is to be in
                effect.

 FIND conditional keywords are as follows:
))THEN(action) - The THEN subcommand is executed if the string is
                 found in a member.  The subcommand may be ATTRIB,
                 BROWSE, DIRENTRY, DELETE, EDIT, END, HISTORY, LIST,
                 MAP, MEMBERS, PRINTOFF, SPFEDIT, SUBMIT or TSOLIST.

))ELSE(action) - The ELSE subcommand is executed if the string is not
                 found in a member.  The subcommand may be ATTRIB,
                 BROWSE, DIRENTRY, DELETE, EDIT, END, HISTORY, LIST,
                 MAP, MEMBERS, PRINTOFF, SPFEDIT, SUBMIT or TSOLIST.
=FIXPDS=FIXPD=FIXP=FIX
)F   The FIXPDS subcommand can perform several utility functions for
  partitioned data sets.  Any one use of the FIXPDS subcommand can
  modify the DCB and optionally, either expand the PDS directory or
  reinitialize the PDS directory.

  After the FIXPDS subcommand gains control, it comments on the data
  set action to be taken and any potential error conditions; it then
  waits for a user response to a prompt before changing the data set.

  Following are more detailed implementation notes on each of the
  different functions available through the FIXPDS subcommand:
    1.  EXPANDDIR (expand the directory)
        A.  If no members exist in the data set, RESETDIR is used
        B.  The names of any members that will be moved out of the
            way of the expanded directory are listed
        C.  If any of these members are in use by an SPF edit session,
            a warning message is issued
        D.  As each member is moved, an informational message is issued
        E.  The additional directory blocks are written
        F.  DCB is invoked to make any DCB changes
    2.  RESETDIR (reset the directory)
        A.  If any members exist in the data set, a warning message
            is issued
        B.  The data set's directory blocks are rewritten with null
            data, destroying any existing member information
        C.  The end of data marker (DS1LSTAR) is reset to indicate
            an empty partitioned data set
        D.  DCB is invoked to make any DCB changes
    3.  DCB (modify the DCB attributes)
        A.  The data set is opened for output with any new DCB
            parameters
        B.  The data set is closed before control is returned for
            the next SPDS subcommand


  Caution: this subcommand modifies the data set. To ensure data set
  integrity, you should allocate the data set as OLD or be aware of
  the data set update protection provided by the SPDS command for SHR
  allocations (for details, see HELP update).
)X SYNTAX -
     FIXPDS  EXPANDDIR(Addblks) / RESETDIR(Totblks) / DCB
               LRECL(L1)
               BLKSIZE(L2)
               RECFM(F/FB/FT/FBT/FA/FBA/FTA/FBTA/FM/FBM/FTM/FBTM/
                     V/VB/VT/VBT/VA/VBA/VTA/VBTA/VM/VBM/VTM/VBTM/
                     U/UT/UA/UM/UTA/UTM)

 ALIASES  - FIX, FIXP, FIXPD, FIXPDS
 DEFAULTS - LRECL(previous value),
              BLKSIZE(previous value),
                RECFM(previous value)
 REQUIRED - EXPANDDIR, RESETDIR or DCB
)O OPERANDS -
))EXPANDDIR(Addblks) - specifies that the directory is to be expanded
                       by the number of specified directory blocks.
                       Addblks may be entered as a number from 1
                       through 99999 and it defaults to 50.

))RESETDIR(Totblks)  - specifies that the directory is to be over-
                       written with the specified number of directory
                       blocks.  Totblks may be entered as a number
                       from 1 through 99999 and it defaults to the
                       number of directory blocks already allocated.

))DCB                - specifies that only the DCB for the data set
                       is to be modified.

))LRECL(L1)   - specifies a new DCB LRECL value for the data set.
                L1 defaults to its previous value for the data set
                or may be entered as a number from 1 through 32767.

))BLKSIZE(L2) - specifies a new DCB BLKSIZE value for the data set.
                L2 defaults to its previous value for the data set
                or may be entered as a number from 1 through 32767.

))RECFM(Newr) - specifies a new DCB RECFM value for the data set.  Newr
                defaults to its previous value for the data set or may
                be entered as any of the following:
                F, FB, FT, FBT, FA, FBA, FTA, FBTA, FM, FBM, FTM, FBTM,
                V, VB, VT, VBT, VA, VBA, VTA, VBTA, VM, VBM, VTM, VBTM,
                U, UT, UA, UM, UTA or UTM.
=HELP=H=HE=HEL
)F   The HELP subcommand lists data from the HELP data set.  The TSO
  HELP command is used; if the HELP subcommand is entered without
  operands, a list of valid subcommands is displayed.
)X SYNTAX -
     HELP  subcommand FUNCTION SYNTAX OPERAND/OPERAND(k)

 ALIASES  - H, HE, HEL, HELP
 DEFAULTS - none.
 REQUIRED - none.
)O OPERANDS -
 subcommand  - optional, specifies the name of a subcommand (or the
               alias name of a subcommand) for which HELP is to be
               displayed.  if the subcommand name is omitted, a list
               of valid subcommands is displayed.

))FUNCTION   - specifies that function information for the subcommand
               is to be displayed.

))SYNTAX     - specifies that syntax information for the subcommand
               is to be displayed.

))OPERAND(k) - specifies that information for the keyword identified
               in the (k) operand is to be displayed.  if the (k)
               operand is omitted, information on all operands of the
               subcommand will be displayed.
=HISTORY=HI=HIS=HIST=HISTO=HISTOR
)F  The HISTORY subcommand displays the last linkage-edit date for a
 module and lists any CSECT IDR data assigned to a load module.
)X SYNTAX -
     HISTORY  member  MODULE(Partm)       TRANS(Partt)/NOTRANS
                      USER(Partu)/NOUSER  ZAP(Partz)/NOZAP

 ALIASES  - HI, HIS, HIST, HISTO, HISTOR, HISTORY
 DEFAULTS - member
 REQUIRED - none.
)O OPERANDS -
 member          - optional, specifies the name(s) of the load module
                   for which a HISTORY summary is to be produced.
                   Default member names, member name ranges and member
                   name patterns are allowed; for more information,
                   enter HELP GROUP.

))MODULE(Partm)  - specifies that CSECTS defined by the partial name,
                   Partm, are to be listed. Partm may be entered as a
                   partial CSECT name with one to eight characters.

                   Note that if MODULE(Partm) is entered, any TRAN,
                   USER or ZAP keywords apply only to CSECT's whose
                   names match the partial CSECT name, Partm.

))TRAN(Partt)    - specifies that CSECTS identified as having been
                   assembled or compiled by the translator defined by
                   the partial name, Partt, are to be listed. Partt
                   may be entered as a partial translator name with
                   one to ten characters.

))NOTRANS        - specifies that no translator data is to be listed.

))USER(Partu)    - specifies that user IDR data which matches the
                   partial name, Partu, is to be listed. Partu may
                   be entered as partial IDR data with one to eight
                   characters.

))NOUSER         - specifies that no user IDR data is to be listed.

))ZAP(Partz)     - specifies that zap IDR data which matches the
                   partial name, Partz, is to be listed. Partz may be
                   entered as partial zap IDR data with one to eight
                   characters.

))NOZAP          - specifies that no zap information is to be listed.
=IF=I
)F   The IF subcommand searches for members meeting defined conditions.
  The action to be taken is specified by the THEN and ELSE keywords.
  Either the THEN or ELSE keyword may be omitted and a default of
  THEN(ATTRIB) is provided if both are omitted.

  If all conditions are true for a given member, any THEN action is
  taken for that member; otherwise, one or more conditions were not
  true and any ELSE action is taken for the member.
)X SYNTAX for RECFM(F) or RECFM(V) data sets:
     IF member   ALIAS/NOALIAS    SSI/NOSSI
                 USERID(Partus)/NOUSERID
                 TTR(Lttr:Httr)
               THEN(ATTRIB/BROWSE/DIRENTRY/DELETE/
                    EDIT/END/HISTORY/LIST/MAP/MEMBERS/
                    PRINTOFF/SPFEDIT/SUBMIT/TSOLIST)
               ELSE(ATTRIB/BROWSE/DIRENTRY/DELETE/
                    EDIT/END/HISTORY/LIST/MAP/MEMBERS/
                    PRINTOFF/SPFEDIT/SUBMIT/TSOLIST)

   SYNTAX for RECFM(U) data sets:
     IF member   ALIAS/NOALIAS    AUTH/NOAUTH   DC/NODC
                 EDIT/NOEDIT      EXEC/NOEXEC   FLEVEL/NOFLEVEL
                 LOAD/NOLOAD      PAGE/NOPAGE   OVERLAY/NOOVERLAY
                 REFR/NOREFR      RENT/NORENT   REUS/NOREUS
                 SCTR/NOSCTR      SSI/NOSSI     TEST/NOTEST
                 VSLKED/NOVSLKED  LKED(Partl)   MODULE(Partm)
                 TRAN(Partt)      USER(Partu)   ZAP(Partz)
                 TTR(Lttr:Httr)
               THEN(ATTRIB/BROWSE/DIRENTRY/DELETE/
                    EDIT/END/HISTORY/LIST/MAP/MEMBERS/
                    PRINTOFF/SPFEDIT/SUBMIT/TSOLIST)
               ELSE(ATTRIB/BROWSE/DIRENTRY/DELETE/
                    EDIT/END/HISTORY/LIST/MAP/MEMBERS/
                    PRINTOFF/SPFEDIT/SUBMIT/TSOLIST)

 ALIASES  - I, IF
 DEFAULTS - member, THEN(ATTRIB) if neither THEN nor ELSE is entered
 REQUIRED - none.
)O OPERANDS -
 member      -  optional, specifies the name of the member(s) whose
                attributes are to be examinded.  Default member
                names, member name ranges and member name patterns
                are allowed; for more information, enter HELP GROUP.

))ALIAS      -  specifies that alias members are desired.
))NOALIAS    -  specifies that non-alias members are desired.
))AUTH       -  specifies that APF authorized modules are desired.
))NOAUTH     -  specifies that non-authorized modules are desired.
))DC         -  specifies that downward-compatible modules are desired.
))NODC       -  specifies that no downward-compatible modules are
                desired.
))EDIT       -  specifies that modules which can be reprocessed by
                the linkage-editor are desired.
))NOEDIT     -  specifies that modules which can not be reprocessed by
                the linkage-editor are desired.
))EXEC       -  specifies that modules which are marked as
                "executable" are desired.
))NOEXEC     -  specifies that modules which are marked as
                "not executable" are desired.
))FLEVEL     -  specifies that modules processed by the
                F-level linkage-editor are desired.
))NOFLEVEL   -  specifies that modules not processed by the
                F-level linkage-editor are desired.
))LOAD       -  specifies that modules marked as "LOAD ONLY"
                are desired.
))NOLOAD     -  specifies that modules not marked as "LOAD ONLY"
                are desired.
))PAGE       -  specifies that modules marked for loading on
                a page boundary are desired.
))NOPAGE     -  specifies that modules not marked for loading on
                a page boundary are desired.
))OVERLAY    -  specifies that modules marked as being "in overlay"
                are desired.
))NOOVERLAY  -  specifies that modules not marked as being "in overlay"
                are desired.
))REFR       -  specifies that refreshable modules are desired.
))NOREFR     -  specifies that non-refreshable modules are desired.
))RENT       -  specifies that reentrant modules are desired.
))NORENT     -  specifies that non-reentrant modules are desired.
))REUS       -  specifies that reusable modules are desired.
))NOREUS     -  specifies that non-reusable modules are desired.
))SCTR       -  specifies that scatter-loaded modules are desired.
))NOSCTR     -  specifies that no scatter-loaded modules are desired.
))SSI        -  specifies that members with SSI data are desired.
))NOSSI      -  specifies that members without SSI data are desired.
))TEST       -  specifies that modules linked with "TEST" are desired.
))NOTEST     -  specifies that modules without the "TEST" attribute
                are desired.
))VSLKED     -  specifies that modules linked by the MVS OS/VS
                linkage-editor are desired.
))NOVSLKED   -  specifies that modules not linked by the MVS OS/VS
                linkage-editor are desired.

))LKED(Partl)    - specifies that modules identified as linked by the
                   linkage-editor defined by the partial name, Partl,
                   are desired.  Partl may be entered as a partial
                   linkage-editor name with one to ten characters.

))MODULE(Partm)  - specifies that modules with CSECTS defined by the
                   partial name, Partm, are desired.  Partm may be
                   entered as a partial CSECT name with one to eight
                   characters.

                   Note that if MODULE(Partm) is entered, any TRAN,
                   USER or ZAP keywords apply only to CSECT's whose
                   names match the partial CSECT name, Partm.

))TRAN(Partt)    - specifies that modules with CSECTS identified as
                   having been assembled or compiled by the translator
                   defined by the partial name, Partt, are desired.
                   Partt may be entered as a partial translator name
                   with one to ten characters.

))USER(Partu)    - specifies that modules with user IDR data which
                   matches the partial name, Partu, are desired.  Partu
                   may be entered as partial IDR data with one to
                   eight characters.

))ZAP(Partz)     - specifies that modules with zap IDR data which
                   matches the partial name, Partz, are desired.  Partz
                   may be entered as partial zap IDR data with one to
                   eight characters.

))USERID(Partus) - specifies that members identified as having been
                   saved by SPF edit whose userid's match the partial
                   name, Partus, are desired.  Partus may be entered as
                   a partial TSO userid with one to seven characters.

))NOUSERID       - specifies that members saved without SPF statistics
                   are desired.

))TTR(Lttr:Httr) - specifies that members whose data is in the TTR
                   range specified are desired.

                   Lttr defaults to 0 and may be entered as a
                   hexadecimal TTR value from 0 through FFFFFF.

                   Httr defaults to FFFFFF and may be entered as
                   a hexadecimal TTR value from 0 through FFFFFF.

))THEN(action)   - The THEN subcommand is executed if all conditions
                   are true for a member.  The subcommand may be
                   ATTRIB, BROWSE, DIRENTRY, DELETE, EDIT, END,
                   HISTORY, LIST, MAP, MEMBERS, PRINTOFF, SPFEDIT,
                   SUBMIT or TSOLIST.

                   Note that if neither a THEN nor ELSE operand is
                   entered, THEN(ATTRIB) is the default condition.

))ELSE(action)   - The ELSE subcommand is executed if any condition
                   is not true for a member.  The subcommand may be
                   ATTRIB, BROWSE, DIRENTRY, DELETE, EDIT, END,
                   HISTORY, LIST, MAP, MEMBERS, PRINTOFF, SPFEDIT,
                   SUBMIT or TSOLIST.

                   Note that if neither a THEN nor ELSE operand is
                   entered, THEN(ATTRIB) is the default condition.
=LIST=L=LI=LIS
)F  The LIST subcommand displays data from a member.

 Unprintable characters for 3270-type devices are translated to periods
 before they are displayed.

 The LIST formats are NUM, SNUM, NONUM, MULTILINE, LINEDUMP, BLOCK
 and DUMP.  The default format is initially NUM; however, each time
 a format operand is entered on a LIST or FIND subcommand, the value
 entered is used as the output format for subsequent LIST and FIND
 subcommands.  Also, note the following:
   1. Formats NUM, SNUM and NONUM limit the display length for logical
      records to 256 characters.
   2. Formats BLOCK and DUMP apply to physical records; the other
      formats apply to logical records.
   3. If the entire member is input, a summary line is displayed
      stating the number of lines (records for BLOCK or DUMP formats)
      in the member.
)X SYNTAX -
     LIST  member NUM/SNUM/NONUM/MULTILINE/LINEDUMP/BLOCK/DUMP
                  SKIPREC(n) MAXIN(n) MAXOUT(n)
                  SKIPCOL(n) MAXLEN(n)

 ALIASES  - L, LI, LIS, LIST
 DEFAULTS - member, NUM or previous LIST/FIND format,
                    SKIPREC(0), MAXIN(9999999), MAXOUT(9999999),
                    SKIPCOL(0), MAXLEN(99999)
 REQUIRED - none.
)O OPERANDS -
 member      -  optional, specifies the name of the member(s) to be
                listed.  Default member names, member name ranges and
                member name patterns are allowed; for more information,
                enter HELP GROUP.

 LIST format keywords are as follows:
))NUM        -  The line number field (the last 8 bytes of a fixed-
                format record or the first 8 bytes otherwise) of
                each logical record is examined; if the field is not
                numeric, formatting is switched to NONUM mode for the
                remainder of the member.

                For SPF-saved members, the high-order six digits of
                the line number field is formatted; otherwise, the
                low-order six digits of the line number field is
                formatted by suppressing leading zeroes.  The line
                number segment is followed by a blank and up to 249
                characters of data from a logical record.

))SNUM       -  The line number field (the last 8 bytes for a fixed-
                format record or the first 8 otherwise) is discarded.
                Up to 256 bytes from a logical record are displayed.

))NONUM      -  Up to 256 bytes from a logical record are displayed.

))MULTILINE  -  Logical records are formatted with a decimal character
                displacement count and segments of (line width - 10)
                characters.  A blank line is output to separate
                displayed records.

))LINEDUMP   -  Logical records are formatted with a hexadecimal byte
                displacement field, segments of up to 32 characters of
                hexadecimal data and up to 16 bytes of equivalent
                characters surrounded by asterisks.  A blank line is
                output to separate displayed records.

))BLOCK      -  Physical records are formatted with a decimal character
                displacement count and segments of (line width - 10)
                characters.  A blank line and a header line are output
                to separate displayed records.

))DUMP       -  Physical records are formatted with a hexadecimal byte
                displacement field, segments of up to 32 characters of
                hexadecimal data and up to 16 bytes of equivalent
                characters surrounded by asterisks.  A blank line and a
                header line are output to separate displayed records.

 LIST control keywords are as follows:
))SKIPREC(n)  - n is coded as 0 through 9999999 to specify the number
                of logical records (physical records for BLOCK or
                DUMP formats) to ignore at the beginning of a member.

))MAXIN(n)    - n is coded as 0 through 9999999 to specify the maximum
                number of logical records (physical records for BLOCK
                or DUMP formats) to input for a member after
                satisfying any SKIPREC operand.

))MAXOUT(n)   - n is coded as 0 through 9999999 to specify the maximum
                number of logical records (physical records for BLOCK
                or DUMP formats) to output for a member.

))SKIPCOL(n)  - n is coded as 0 through 99999 to specify the number
                of columns to ignore at the beginning of each logical
                record (physical record for BLOCK or DUMP formats).

                Note:  for NUM or SNUM output format with OS/VS record
                format V or U, SKIPCOL(0) positions the data formatter
                to the first data position after the line number field.

))MAXLEN(n)   - n is coded as 0 through 99999 to specify the maximum
                length of a logical record (physical record for BLOCK
                or DUMP formats) to display.
=MAP=M=MA
)F  The MAP subcommand lists the CSECT structure of a load module.
 This MAP is similar in nature to the MAP produced by the MAP option
 of the linkage-editor.

 The name of the module entry point is displayed in the MAP summary
 information.  Note that if a mapped module is an alias, the MAP
 subcommand will display the name of the corresponding real module
 if the FULL operand is entered or defaulted to.
)X SYNTAX -
     MAP  member  FULL/SHORT/ENTRY  MODULE(partm)

 ALIASES  - M, MA, MAP
 DEFAULTS - member, FULL
 REQUIRED - none.
)O OPERANDS -
 member   - optional, specifies the name of the load module(s) for
            which a module MAP is to be produced.  Default member
            names, member name ranges and member name patterns are
            allowed; for more information, enter HELP GROUP.

))FULL   -  a full CSECT map is to be provided

))SHORT  -  a CSECT map with all CSECTS but no entries within CSECTS
            is to be provided; also, no alias information is to be
            provided.

))ENTRY  -  only the ENTRY point symbol is to be provided; also, no
            alias information is to be provided.

))MODULE(Partm)  - specifies that CSECTS defined by the partial name,
                   Partm, are to be listed. Partm may be entered as a
                   partial CSECT name with one to eight characters.
=MEMBERS=ME=MEM=MEMB=MEMBE=MEMBER
)F    The MEMBERS subcommand lists member names from the data set
   directory.  Only those member names in the specified member group
   are displayed.

   Note that the MEMBERS subcommand may be used to check member names
   in a given group before invoking another subcommand which processes
   member groups.

   Note that -A is added following a displayed member name if the
   member name is an alias.  The member name is listed in a combined
   hexadecimal/character format if it does not contain upper-case
   alphanumeric characters (including @, $ and #) or if the first
   character is numeric.  Unprintable characters (for 3270-type
   devices) in a member name are displayed as periods.
)X SYNTAX -
     MEMBERS  memgroup

 ALIASES  - ME, MEM, MEMB, MEMBE, MEMBER, MEMBERS
 DEFAULTS - memgroup
 REQUIRED - none.
)O OPERANDS -
 memgroup - optional, specifies the group of members whose names
            are to be displayed.  Default member names, member name
            ranges and member name patterns are allowed; for more
            information, enter HELP GROUP.
=OPTIONS=O=OP=OPT=OPTI=OPTIO=OPTION
)F  The OPTIONS subcommand displays the subcommands (or options)
 supported by the SPDS command. Note that this display varies
 when a non-partitioned data set is being processed.
)X SYNTAX -
     OPTIONS

 ALIASES  - O, OP, OPT, OPTI, OPTIO, OPTION, OPTIONS
)O OPERANDS -
 no operands are supported.
=PATTERN=P=PA=PAT=PATT=PATTE=PATTER
)F    The PATTERN subcommand lists member names from the data set
   directory.  Only those member names which contain the PATTERN
   name segments specified are displayed.

   One or two member name segments may be entered as patterns.  If two
   segments are entered, both segments must occur in a member name for
   it to be displayed.  For example, with the pattern segments xx and
   1x, members named M1X4XX, M1XX and XX1X would be displayed by this
   subcommand while members named X1X or MXX13X would not be displayed.

   Note that -A is added following a displayed member name if the
   member name is an alias.  The member name is listed in a combined
   hexadecimal/character format if it does not contain upper-case
   alphanumeric characters (including @, $ and #) or if the first
   character is numeric.  Unprintable characters (for 3270-type
   devices) in a member name are displayed as periods.
)X SYNTAX -
     PATTERN  segment1 segment2

 ALIASES  - P, PA, PAT, PATT, PATTE, PATTER, PATTERN
 DEFAULTS - none.
 REQUIRED - segment1
)O OPERANDS -
 segment1 -  specifies a name segment which must be found in a
             member name for the member name to be displayed.

 segment2 -  optional, specifies a second name segment which must
             also be found in a member name for the member name to
             be displayed.
=PRINTOFF=PRINTOF=PRINTO=PRINT=PRIN=PRI=PR
)F    The PRINTOFF subcommand prints a hardcopy list of a member.  The
   TSO PRINTOFF command is used; any desired PRINTOFF operands may
   be added after the member name.
)X SYNTAX -
     PRINTOFF  member operands

 ALIASES  - PR, PRI, PRIN, PRINT, PRINTO, PRINTOF, PRINTOFF
 DEFAULTS - member, no operands
 REQUIRED - none.
)O OPERANDS -
 member   -  optional, specifies the member name(s) to be passed
             (along with the data set name) to the TSO PRINTOFF
             command.  Default member names, member name ranges and
             member name patterns are allowed; for more information,
             enter HELP GROUP.

 operands -    optional, may include any desired TSO PRINTOFF operands.
=RENAME=R=RE=REN=RENA=RENAM
)F   The RENAME subcommand assigns a new name to a named member.

  Caution: this subcommand modifies the data set. To ensure data set
  integrity, you should allocate the data set as OLD or be aware of
  the data set update protection provided by the SPDS command for SHR
  allocations (for details, see HELP update).
)X SYNTAX -
     RENAME  curname newname

 ALIASES  - R, RE, REN, RENA, RENAM, RENAME
 DEFAULTS - none.
 REQUIRED - curname, newname
)O OPERANDS -
 curname  - specifies the current name of the member.

 newname  - specifies the new name for the member.  Note that this
            new name becomes the SPDS default member name.
=RESTORE=RES=REST=RESTO=RESTOR
)F   The RESTORE subcommand resurrects a deleted member at the given
  TTR address.  Deleted members remain in a partitioned data set until
  the data set is compressed.

  Restrictions: the attributes authorized, load only, not editable, not
  executable, page boundary, reentrant, refreshable and reusable can
  not be determined from load module records; however, these attributes
  can be assigned to a restored load module with the attrib subcommand.
  also, note that SPF statistics and SSI information cannot be restored
  for a member.

  If the data set is a load library, then if the member name is an
  imbedded external name within the load module, that external name
  will be used as the entry point; otherwise, the first CSECT in the
  load module will be used as the entry point.

  Caution: this subcommand modifies the data set. To ensure data set
  integrity, you should allocate the data set as OLD or be aware of
  the data set update protection provided by the SPDS command for SHR
  allocations (for details, see HELP update).
)X SYNTAX -
     RESTORE  member ttr   SEARCH/NOSEARCH/DISPLAY

 ALIASES  - RES, REST, RESTO, RESTOR, RESTORE
 DEFAULTS - NOSEARCH
 REQUIRED - member, ttr address
)O OPERANDS -
 member    - specifies the name of the member to be resurrected.
             This member name becomes the SPDS default member name.

 ttr       - specifies the starting relative track address of the
             member in one to six hexadecimal digits.

))SEARCH   - successive deleted members found after the provided TTR
             address are to be displayed followed by a yes/no prompt.
             This display cycle is to continue until a yes response
             is entered; then, the displayed member is to be restored.

))NOSEARCH - the deleted member at the provided TTR address is to be
             restored.

))DISPLAY  - successive deleted members found after the provided TTR
             address are to be displayed; no deleted member is to be
             restored.
=SPFEDIT=SPFEDI=SPFED=SPFE=SPF=SP=S
)F    The SPFEDIT subcommand enters SPF edit for a member.

  When the first BROWSE or SPFEDIT subcommand is entered, SPDS calls
  an SPF interface which invokes SPDS recursively as an SPF dialog;
  SPF edit service is then directly invoked for each subsequent
  SPFEDIT subcommand.
)X SYNTAX -
     SPFEDIT  member  OLD/NEW

 ALIASES  - S, SP, SPF, SPFE, SPFED, SPFEDI, SPFEDIT
 DEFAULTS - member
 REQUIRED - none.
)O OPERANDS -
 member   -    optional, specifies the name of the member(s) to be
               edited.  Default member names, member name ranges and
               member name patterns are allowed; for more information,
               enter HELP GROUP.

               Note: if : is entered for the member name position, SPF
               will be requested to provide a member selection screen.

))OLD     -    SPDS will verify that the member exists before
               invoking SPF EDIT service.

))NEW     -    SPDS will verify that the member does not exist before
               invoking SPF EDIT service.
=SUBMIT=SU=SUB=SUBM=SUBMI
)F  The SUBMIT subcommand submits a JCL member.  The TSO SUBMIT
 command is used; any desired SUBMIT operands may be specified after
 the member name.
)X SYNTAX -
     SUBMIT  member operands

 ALIASES  - SU, SUB, SUBM, SUBMI, SUBMIT
 DEFAULTS - member, no operands
 REQUIRED - none.
)O OPERANDS -
  member  -  optional, specifies the member name(s) to be passed
             (along with the data set name) to the TSO SUBMIT command.
             Default member names, member name ranges and member
             name patterns are allowed; for more information, enter
             HELP GROUP.

  operands - optional, may include any desired TSO SUBMIT operands.
=TSO=TS=T
)F    The TSO subcommand may be used to invoke any TSO command
   processor.  Any desired operands may be specified after the TSO
   command processor name.
)X SYNTAX -
     TSO  command operands

 ALIASES  - T, TS, TSO
 DEFAULTS - none.
 REQUIRED - command
)O OPERANDS -
 member   -    specifies the command processor to be given control.

 operands -    optional, may include any desired operands.
=TSOLIST=TSOLIS=TSOLI=TSOL
)F    The TSOLIST subcommand lists a member.  The TSO LIST command is
   used; any desired LIST operands may be specified after the member
   name.
)X SYNTAX -
     TSOLIST  member operands

 ALIASES  - TSOL, TSOLI, TSOLIS, TSOLIST
 DEFAULTS - member, no operands
 REQUIRED - none.
)O OPERANDS -
 member   -    optional, specifies the member name(s) to be passed
               (along with the data set name) to the TSO list command.
               Default member names, member name ranges and member
               name patterns are allowed; for more information, enter
               HELP GROUP.

 operands -    optional, may include any desired TSO list operands.
=USAGE=U=US=USA=USAG
)F  The USAGE subcommand displays statistics on the partitioned data
 set being processed.

 In addition, the USAGE subcommand displays the allocated DDNAME, data
 set name, data set disposition, DCB subparameters (RECFM, LRECL and
 BLKSIZE), and the disk volume name and unit in a pseudo-JCL format.

 The statistics displayed include:
   the number of directory blocks allocated
   the number of directory blocks currently in use
   the number of disk storage tracks used by the directory
   the maximum number of member entries in a directory block
   the number of members in the directory
   the number of member names which are alias names
   the number of disk storage tracks allocated
   the number of disk storage tracks currently not in use
   the number of disk storage extents required for the data set
)X SYNTAX -
     USAGE

 ALIASES  - U, US, USA, USAG, USAGE
)O OPERANDS -
   no operands are supported
=ABEND=ABEN=ABE=AB=ESTAE=ESTAI=STAE
)F  The ABEND HELP entry is provided to explain ABEND processing
 performed by SPDS. In general, SPDS will recover from ABEND's with
 its ESTAE and ESTAI recovery routines.


 In the following, the ABEND processing provided by SPDS is described
 in more detail:

  1.  The SPDS program uses different recovery routines depending on
      the subcommand being executed.  The routine used will perform any
      cleanup and initialization functions required to restart SPDS.

  2.  For internal SPDS subcommands, recovery is performed by writing
      an error message and ignoring the subcommand.

  3.  For the external subcommands SPFEDIT or BROWSE, no ESTAE recovery
      is attempted.

  4.  For the other external SPDS subcommands (EDIT, EXEC, HELP,
      PRINTOFF, SUBMIT, TSO xxx, and TSOLIST), the subcommand processor
      is forcibly detached and any ABEND message for the detach is
      suppressed.

  5.  Certain external programs reached via the TSO subcommand (such
      as CALL) will terminate SPDS with a "READY" message if the
      program it invokes ABEND's.  Note, however, that if a null line
      is entered at this point, SPDS will gain control again.
)X SYNTAX - none.
)O OPERANDS - none.
=ATTN=PA1=ATTE=ATTEN=ATTENT=ATTENTI=ATTENTIO
)F  The ATTN HELP entry is provided to explain the attention processing
 performed by SPDS. In general, an attention (the PA1 key) may be used
 to terminate the current SPDS subcommand and two attentions in a row
 may be used to terminate the SPDS command.

 Note that the normal SPDS attention processing is not performed for
 SPFEDIT or BROWSE subcommands.  Any member group will be terminated
 by an attention; however, in other respects, attentions are ignored.


 In the following, the attention processing provided by SPDS is
 described in more detail:

  1.  An single (double for EDIT) attention should terminate any
      member group in progress.

  2.  An attention at a prompt for a data set should terminate SPDS.

  3.  An attention at the normal subcommand prompt of "ENTER OPTION"
      should provide another "ENTER OPTION" prompt; another attention
      at this point should terminate SPDS.

  4.  For subcommands SPFEDIT or BROWSE, no "ENTER OPTION" prompt
      is provided by SPDS:
       a.  A single attention should terminate any member group in
           progress.
       b.  Any additional attentions should be ignored.

  5.  For other SPDS subcommands, an single (double for EDIT)
      attention should result in an "ENTER OPTION" prompt; the
      processing action taken at this point depends on the data
      entered next:
       a.  Another attention should terminate the SPDS command.
       b.  A null line should cause the interrupted subcommand to
           continue at the point of interruption.  Note: any messages
           awaiting output at the time of the interrupt will be lost.
       c.  If a subcommand is entered and the currently executing
           subcommand is external to SPDS (EDIT, EXEC, HELP, PRINTOFF,
           SUBMIT, TSO xxx, or TSOLIST), the subcommand processor
           should be forcibly detached and the ABEND message should
           be suppressed.
       d.  An entered subcommand should be given control without delay.
)X SYNTAX - none.
)O OPERANDS - none.
=GROUPS=G=GR=GRO=GROU=GROUP=GROUP.
)F  The group HELP entry is provided to explain the various member
 name forms allowed.  Member names may be entered in either character
 or hexadecimal mode for any subcommand which processes member names.

 Character member names may be from one to eight bytes long with no
 imbedded blanks, commas or parentheses.

 Hexadecimal member names may contain from one to sixteen hexadecimal
 digits delimited by x' and '.  X'd7c4e2f9' and PDS9 are entirely
 equivalent; also, x'333' and x'0333' are equivalent.


 Subcommands ATTRIB, BROWSE, DELETE, DIRENTRY, EDIT, FIND, HISTORY,
 IF, LIST, MAP, MEMBERS, PRINTOFF, SPFEDIT, SUBMIT and TSOLIST allow
 additional member name specifications.  A member name range or member
 name pattern specifies what is called a member group.

 When a member group is being processed, the subcommand processing
 routine is re-executed for each member in the group.  Specifically,
 note the following:

  1.  Default member name -- if no member name is specified, the
      last member name or member group entered for any of the above
      subcommands will be assumed.

  2.  Asterisk member name -- if * is entered in the member name
      position, the last member name or member group entered for
      any of the above subcommands will be assumed.

  3.  Member name range -- any of these subcommands may process all
      members in a range by specifying a beginning partial member
      name, a colon, and a ending partial member name (either or
      both of the partial names may be null).

      Logic from the DISPLAY subcommand is used to select members;
      the subcommand processes these selected members in alphabetic
      order.  the following specifications would process the same
      member names:
            subcommand  :              and    DISPLAY
            subcommand  part1:         and    DISPLAY  part1
            subcommand  :part2         and    DISPLAY  x'00' part2
            subcommand  part1:part2    and    DISPLAY  part1 part2

  4.  Member name pattern -- any of these subcommands may process all
      members whose names contain pattern characters by specifying a
      member name segment, a slash, and another member name segment
      (either, not both, of the member name segments may be null).

      Logic from the PATTERN subcommand is used to select members;
      the subcommand processes these selected members in alphabetic
      order.  the following specifications would process the same
      member names:
            subcommand  seg1/          and    PATTERN  seg1
            subcommand  /seg2          and    PATTERN  seg2
            subcommand  seg1/seg2      and    PATTERN  seg1 seg2
)X SYNTAX - none.
)O OPERANDS - none.
=UPDATE=UP=UPD=UPDA=UPDAT
)F  The update HELP entry is provided to explain the update data
 set protection implemented for certain SPDS subcommands.

 If the data set is allocated as OLD, the STOW DCB is left open after
 the first data set update.  For OLD allocations exclusive use of the
 data set is assured and the following does not apply.

 If the data set is allocated as SHR (SHR was specifically requested
 or SHR was defaulted to), certain SPDS subcommands which update the
 data set such as ALIAS, ATTRIB (with attributes to be changed),
 DELETE, FIXPDS, RENAME or RESTORE could cause data set integrity
 problems if the data set is also being updated by other users.


 To circumvent this problem, SPDS uses the following SPF RESERVE
 logic to maintain data set integrity during data set updates.

  1.  A  RESERVE  (SPFDSN,DSNAME,E,44,SYSTEMS),UCB=ADDRESS
      is performed.

  2.  If the data set is a load library, then a linkage-editor
      RESERVE or ENQUE is performed as appropriate:
       A.  On a shared DASDI volume,
           RESERVE  (SYSIEWLP,DSNAME,E,44,SYSTEMS),UCB=ADDRESS
       B.  On a non-shared DASDI volume,
           ENQ  (SPFIEWLP,DSNAME,E,44,SYSTEM)

  3.  The data set STOW DCB is opened

  4.  All data set updates are performed.
       A.  For the ATTRIB subcommand, the STOW DCB is left open
           while an entire member group is being processed.
       B.  For the DELETE subcommand, the STOW DCB is left open
           while an entire member group is being processed if no
           yes/no prompting is being provided for each member.

  5.  The data set STOW DCB is closed

  6.  DEQ's are performed to remove the RESERVE's and ENQ's
)X SYNTAX - none.
)O OPERANDS - none.
