*/ ***************************************************************** /*
*                                                                     *
*  LIBSPOOL - JES2 SYSMSG SPOOLING SYSTEM:  A LIBRARIAN EXTERNAL WTR  *
*                                                                     *
*/****************************************************************** /*
*/*                                                                  */
*/*                                                                  */
*/*       WRITTEN BY :             SAM J. BASS              (SJB)    */
*/*                                OCCIDENTAL SYSTEMS INC.           */
*/*                                5 GREENWAY PLAZA EAST             */
*/*                                HOUSTON, TEXAS 77046              */
*/*                                (713) 840-2178                    */
*/*                                                                  */
*/*       DISCLAMER:               THIS PROGRAM HAS BEEN FULLY       */
*/*                                TESTED AT OSI, BUT I CLAIM NO     */
*/*                                RESPONSIBILITY FOR THIS PROGRAM   */
*/*                                PROCESSING THE WRONG JES2         */
*/*                                SYSOUT DATASETS                   */
*/*                                                                  */
*/*       MODIFIED BY :            ROBERT P DZIALAK         (RPD)    */
*/*                                OCCIDENTAL CHEMICAL CORPORATION   */
*/*                                360 RAINBOW BLVD. SOUTH           */
*/*                                NIAGARA FALLS , NEW YORK 14303    */
*/*                                (716) 286-3251                    */
*/*                                                                  */
*/****************************************************************** /*
*/****************************************************************** /*
* DATA NAME 'MSGCLIST' DEFINES THE MSGCLASSES TO BE SERVICED        RPD
* INCLUDE ONLY MSGCLASSES TO BE USED                                RPD
&RECLASS SETC  'J'                                                  SJB
&PRODID  SETC  'P'   FIRST CHARACTER OF USERID                      RPD
&DUMMYCLS SETC 'Z'   JES2 DUMMY SYSOUT CLASS                        RPD
&SYSOUTMX SETA 750   RECORD LIMIT FOR EACH NON JCL SYSOUT           RPD
&MSGCLCC0 SETC 'W'   MSGCLASS-PRINT IF ANY CONDITION CODE GREATER 0 RPD
&MSGCLPRT SETC 'X'   MSGCLASS-PRINT JCL ALWAYS                      RPD
         EJECT                                                      SJB
*/ ***************************************************************** /*
*                                                                     *
*    SAMPLE STARTED TASK JCL:                                         *
*                                                                     *
*    //LIBSPOOL PROC DEBUG=                                           *
*    //IEFPROC  EXEC PGM=JCLLIST,TIME=1439,PARM=&DEBUG                *
*    //SYSPRINT DD  DUMMY                                             *
*    //REPORT   DD  SYSOUT=A                                          *
*    //SNAP     DD  SYSOUT=A                                          *
*    //SYSABEND DD  SYSOUT=A                                          *
*    //OSJOB    DD  DUMMY                                             *
*    //MASTER   DD  DISP=SHR,DSN=SYSX.JCLLIST.LIBRARY                 *
*    //SYSIN    DD  &&SYSIN,DISP=(NEW,DELETE),UNIT=SYSDA,             *
*    //             SPACE=(CYL,(10,10)),                              *
*    //             DCB=(RECFM=FB,LRECL=80,BLKSIZE=6160)              *
*                                                                     *
*    NOTE THAT THE TASK WILL REMAIN IN AN 'OUTPUT LONG-WAIT' AND      *
*    WILL ISSUE AN STIMER EVERY 10 SECONDS TO CHECK FOR THE PRESENCE  *
*    OF ANY SYSOUT='MSGCLIST' CLASS OUTPUT.                           *
*                                                                     *
*        THE MODULE MUST BE MARKED AC=1 AND MUST RESIDE IN            *
*        AN AUTHORIZED LIBRARY IFA STEPLIB IS USED OR MUST            *
*        MUST BE IN A LINKLIST LIBRARY. THIS MODULE IS                *
*        NOT REENTRANT.                                               *
*                                                                     *
*/ ================================================================= /*
*                                                                     *
*  OS MACROS USED BY THIS MODULE:                                     *
*                                                                     *
*  IEFSSREQ     EXTRACT      QEDIT        WAIT         GET     WTO    *
*  IEFZB4D0     MODESET      SYNADRLS     TTIMER       SNAP    PUT    *
*  IEFJESCT     DYNALLOC     SYNADAF      STIMER       OPEN    DCBD   *
*  IEFJSSOB     QEDIT        DCB          CLOSE        CALL    WTOR   *
*  CONNECT      RELEASE      LINK         LIBWTO                      *
*                                                                     *
*/ ================================================================= /*
*                                                                     *
*  UPON ISSUANCE OF AN OPERATOR PAUSE COMMAND, A WTO IS ISSUED BY     *
*  JCLLIST THAT TERMINATION IS IN PROGRESS.                           *
*                                                                     *
*/ ================================================================= /*
*                                                                     *
*  NAMING CONVENTIONS OF MODULES PLACED ON THE LIBRARIAN SPOOL        *
*                                                                     *
*    TO INSURE UNIQUE LIBRARIAN NAMES, THE LIBSPOOL MODULE NAME       *
*    IS CONSTRUCTED AS FOLLOWS:                                       *
*                                                                     *
*               BYTE  1   - LETTER A THRU Z                           *
*               BYTES 2-4 - JULIAN DAY NUMBER                         *
*               BYTES 5-8 - JES2 JOB NUMBER                           *
*                                                                     *
*    IF A MODULE IS FOUND TO ALREADY EXIST ON THE LIBSPOOL DATA SET   *
*    THEN AN  'B' REPLACES THE A (ETC.) IN BYTE ONE.                  *
*                                                                     *
*/ ================================================================= /*
*                                                                     *
*  CRITERIA UPON WHICH JCLLIST WILL SET THE PRINT FLAG AND FORCE A    *
*  JOB TO BE PRINTED AND WILL ALSO BE ADDED TO THE LIBRARIAN SPOOL)   *
*                                                                     *
*      ---------------------------------------------------------      *
*      -*-  ANY OF THE FOLLOWING IBM MESSAGE IDENTIFICATIONS -*-      *
*      ---------------------------------------------------------      *
*                                                                     *
*  IEF251I - JOB CANCELLED                                            *
*  IEF283I - NOT DELETED X                                            *
*  IEF287I - NOT RECTLGD/CATALGD/UNCATLGD                             *
*  IEF450I - ABEND           IEF452I - JOBFAIL/JOB NOT RUN JCL ERROR  *
*  IEF451I - ENDED BY CC     IEF453I - JOB FAILED - JCL ERROR         *
*                                                                     *
*              IF ANY ERRORS ARE FOUND THEN THE SYSOUT DATASETS       *
*              ARE RELEASED FROM THE HOLD QUEUE.                      *
*                                                                     *
*  CONDITION CODES ARE ALSO CHECKED AS FOLLOWS:                       *
*                                                                     *
*            &MSGCLCC0  - JCL WILL BE PRINTED IF ANY STEP IN THE JOB  *
*                         HAS A CONDITION CODE GREATER THAN 0.
*                                                                     *
*            &MSGCLPRT  - JCL WILL ALWAYS BE PRINTED                  *
*                                                                     *
*            MSGCLASS ? - ALL OTHER MSGCLASSES WILL BE PROCESSED      *
*                         WITHOUT ANY CHECKING OF CONDITION CODES.    *
*                                                                     *
*/ ================================================================= /*
*    THIS VERSION OF JCLLIST WILL COLLECT SYSOUTS #1,2,3,4 AND        *
*    ANY OTHER SYSOUT OF THE JOB THAT MATCHES THE MESSAGE CLASS OF    *
*    THE JOB. EG. //DDNAME DD SYSOUT=*                                *
*/ ================================================================= /*
*                                                                   SJB
*              SNAPID              LOCATION                         SJB
*                                                                   SJB
*              1                   JCLLIST/GETDS    (SSREQ)         SJB
*              2                   LIBMAIN/NEXTSSRQ (SSREQ)         SJB
*              3                   LIBMAIN/CLOSBPSO (SSREQ)         SJB
*              4                   LIBMAIN/ALLOCDS  (DYNALLOC)      SJB
*              5                   LIBMAIN/LIBINIT  (SYSIN OPEN)    SJB
*              6                   LIBMAIN/LIBFAIR  (BAD MASTOPN)   SJB
*              7                   LIBMAIN/LIBFAIR  (BAD MASTMOD)   SJB
*              8                   LIBMAIN/UNALLOC  (DYNALLOC)      SJB
*              9                   LIBMAIN/OPENIN   (BAD OPEN PSO)  SJB
*              10                  LIBMAIN/CLOSEOUT (BAD LIBRARY)   SJB
*                                                                   SJB
*                                                                     *
*/ ================================================================= /*
*                                                                   SJB
         PUNCH ' SETCODE AC(1) '                                    SJB
         PUNCH ' INCLUDE SYSLIB(TSOFAIR) '                          SJB
         PUNCH ' ORDER JCLLIST,LIBMAIN,SSREQ,TSOFAIR '              SJB
JCLL     TITLE 'LIBSPOOL: JCLLIST - LIBRARIAN/JES2 EXTERNAL WRITER' SJB
         PRINT ON,GEN,NODATA                                        SJB
         PRINT GEN                                                  SJB
         MACRO                                                      SJB
&LABEL   LIBWTO &MSG                                                SJB
         LCLC  &ID                                                  SJB
&ID      SETC  '&SYSNDX'                                            SJB
&LABEL   TM    FLAG2,$DEBUG                                         SJB
         BNO   WTO&ID                                               SJB
         PUSH  PRINT                                                SJB
*        WTO   &MSG                                                 SJB
         PRINT OFF                                                  SJB
         WTO   &MSG                                                 SJB
         POP   PRINT                                                SJB
WTO&ID   DS    0H                                                   SJB
         MEND                                                       SJB
         EJECT                                                      SJB
JCLLIST  CSECT                                                      SJB
         SPACE 3                                                    SJB
R0       EQU   0                                                    SJB
R1       EQU   1                                                    SJB
R2       EQU   2                                                    SJB
R3       EQU   3                                                    SJB
R4       EQU   4                                                    SJB
R5       EQU   5                                                    SJB
R6       EQU   6                                                    SJB
R7       EQU   7                                                    SJB
R8       EQU   8                                                    SJB
R9       EQU   9                                                    SJB
R10      EQU   10                                                   SJB
R11      EQU   11                                                   SJB
R12      EQU   12                                                   SJB
R13      EQU   13                  SAVE AREA POINTER                SJB
R14      EQU   14                  BASE REG FOR SVC 99 PARAM        SJB
R15      EQU   15                                                   SJB
         EJECT                                                      SJB
         CONNECT LWORK1,WORK1,BASE=R12,CLEAR=YES,PARM=R10           SJB
         EJECT                                                      SJB
         L     R1,0(,R10)          GET ADDR OF PARM FIELD           SJB
         LH    R2,0(R1)            GET LENGTH OF PARM               SJB
         LTR   R2,R2               ANY PARM                         SJB
         BZ    NOPARM                                               SJB
         C     R2,=F'80'           LENGTH > 80                      SJB
         BL    *+8                 NO                               SJB
         LA    R2,80               YES                              SJB
         BCTR  R2,0                -1 FOR EXECUTE                   SJB
         EX    R2,MVCPARM          MOVE IN PARM FIELDS              SJB
NOPARM   EXTRACT COMMLPTR,FIELDS=COMM GET ADDR OF ECB AND CIB PTRS  SJB
         SPACE 1                                                    SJB
         L     R2,COMMLPTR         GET COMMAND LIST ADDRESS         SJB
         USING COMMADDR,R2         ESTABLISH ADDRESSABILITY         SJB
         LM    R9,R10,COMMADDR     GET COMMAND ECB AND CIB POINTERS SJB
*        ST    R9,CMNDECBP         STORE ECB POINTER IN ECBLIST     SJB
*        MVI   CMNDECBP,X'80'      INDICATE LAST ECB PTR IN LIST    SJB
         ST    R9,CMDECBP2         STORE ECB POINTER IN OTHER ECBLISTJB
         SPACE 1                                                    SJB
         QEDIT ORIGIN=COMMCIB,BLOCK=(R10) FREE CIB                  SJB
         QEDIT ORIGIN=COMMCIB,CIBCTR=1    INDICATE 1 CIB TO BE CHAINEDB
         SPACE 2                                                    SJB
         USING SSOB,R10            ESTABLISH ADDRESSABILITY         SJB
         LA    R10,LWASSOB                                          SJB
*                                                                   SJB
         EJECT                                                      SJB
*                                                                   SJB
*              MISCELLANEOUS INITIALIZATION                         SJB
*                                                                   SJB
         MVI   FLAG2,X'00'                                          SJB
         CLC   =C'DEBUG',PARMCARD  IS IT DEBUG                      SJB
         BNE   *+8                 NO                               SJB
         OI    FLAG2,$DEBUG        YES, TURN ON FLAG                SJB
*                                                                   SJB
         OI    FLAG2,$TITLE                                         SJB
*                                                                   SJB
         MVC   LWADCBRP,RPTDCB     MOVE IN RPT DCB                  SJB
         LA    R4,LWADCBRP                                          SJB
         OPEN  ((R4),(OUTPUT))     OPEN IT                          SJB
*                                                                   SJB
         LA    R1,MSGCLIST         LOAD ADDR. OF BEGINNING MSGCLASS RPD
         ST    R1,CURMCLAD         LIST AND INIT. ITS SAVE AREA     RPD
         SPACE 3                                                    SJB
*                                                                   SJB
GETDS    DS    0H                                                   SJB
*                                                                   SJB
         MVI   FLAG,$FIRST         $FIRST ON, INITILIZE SSOB        SJB
         MVI   FLAG3,$FRSTPSO      INDICATE WE ARE REQUESTING THE   RPD
*                                  FIRST SYSOUT OF A NEW JOB        RPD
*                                                                   SJB
*              GO DO A SUB-SYSTEM REQUEST FOR NEW JOB               SJB
*                                                                   SJB
         L     R15,=A(SSREQ)                                        SJB
         LA    R1,WORK1            POINT TO MAIN WORK AREA          SJB
         BALR  R14,R15                                              SJB
*                                                                   SJB
*              END OF SUB-SYSTEM REQUEST                            SJB
*                                                                   SJB
         SPACE 3                                                    SJB
         MVI   SNAPID,1                                             SJB
         LH    R15,RETCODE         GET IEFSSREQ RETURN CODE         SJB
         LTR   R15,R15             SUBSYSTEM REQUEST SUCCESSFUL?    SJB
         BNZ   SNAPIT              NO. TERMINATE WRITER             SJB
*                                                                   SJB
*              IF GOOD RC THEN GO  CALL LIBRARIAN                   SJB
*                                                                   SJB
         C     R15,SSOBRETN        DID WE GET A DATA SET FROM JES?  SJB
         BE    CALLLIB             YES. GO CALL LIBRARIAN           SJB
*                                                                   SJB
         LA    R1,4                FOR 'COMPARE'                    SJB
         C     R1,SSOBRETN         ARE WE OUT OF ELIGIBLE DATA SETS?SJB
         BNE   SNAPIT              NO. SOMETHING WRONG. TERMINATE   SJB
*                                                                   RPD
*  ENTERING THIS CODE MEANS THAT NO OUTPUT EXISTED IN JES FOR THE   RPD
*  MSGCLASS THAT WAS REQUESTED. THE NEXT CLASS IN THE LIST WILL NOW RPD
*  BE LOOKED AT.                                                    RPD
*                                                                   RPD
CHGMSGCL L     R1,CURMCLAD         LOAD ADDRESS OF CURRENT MSGCLASS RPD
         LA    R1,1(R1)            INCREMENT TO THE NEXT CLASS      RPD
         ST    R1,CURMCLAD         SAVE THIS ADDRESS                RPD
         CLI   0(R1),C' '          ARE WE AT THE END OF THE LIST    RPD
         BNE   SETWAIT             NOT YET                          RPD
         LA    R1,MSGCLIST         LOAD ADDR. OF BEGINNING OF LIST  RPD
         ST    R1,CURMCLAD         SAVE THIS ADDRESS                RPD
*
SETWAIT  DS    0H                                                   SJB
         SPACE 1                                                    SJB
         MODESET KEY=ZERO          GET INTO KEY ZERO                SJB
         SPACE 1                                                    SJB
*                                                                   SJB
WAIT     DS    0H                                                   SJB
         STIMER REAL,POSTWAIT,BINTVL=WTIME TO KILL SOME TIME        SJB
         SPACE 1                                                    SJB
         MVI   STIMRECB,X'00'      CLEAR ECB                        SJB
         L     R2,ECBL2PTR         POINT TO SECOND ECBLIST          SJB
         SPACE 1                                                    SJB
         WAIT  1,ECBLIST=(R2),LONG=YES WAIT FOR WORK, CMND, STIMER EXIT
         SPACE 1                                                    SJB
*                                                                   SJB
         TM    STIMRECB,X'40'      WERE WE POSTED BY STIMER EXIT?   SJB
         LA    R3,GETDS            PREPARE TO REQUEST A DATA SET IF YES
         BO    RESETPK             YES. GET OUT OF KEY 0 AND CONTINUEJB
         SPACE 1                                                    SJB
         TTIMER CANCEL             CANCEL REMAINDER OF TIMER INTERVALJB
         SPACE 1                                                    SJB
CHKCMND  L     R2,CMDECBP2         GET COMMAND ECB ADDRESS          SJB
         TM    0(R2),X'50'         DID OPERATOR ENTER A COMMAND?    SJB
         MVI   0(R2),X'00'         CLEAR ECB IN ANY EVENT           SJB
         LA    R3,STOPWTR          PREPARE TO TERMINATE IF STOP CMNDSJB
         BO    RESETPK             IT IS. GET OUT OF KEY 0 AND HALT SJB
         LA    R3,FREECIB          PREPARE TO FREE CIB IF MODIFY CMNDJB
         BM    RESETPK             FREE CIB AND GO REQUEST A DATA SETJB
         B     WAIT                GO WAIT FOR CMND OR END OF INTERVALB
         SPACE 1                                                    SJB
         SPACE 1                                                    SJB
FREECIB  L     R2,COMMLPTR         GET COMMAND LIST ADDRESS         SJB
         L     R3,COMMCIB          GET CIB POINTER                  SJB
         SPACE 1                                                    SJB
         QEDIT ORIGIN=COMMCIB,BLOCK=(R3) FREE CIB                   SJB
         QEDIT ORIGIN=COMMCIB,CIBCTR=1   INDICATE 1 CIB TO BE CHAINEDJB
         SPACE 1                                                    SJB
         B     GETDS               GO REQUEST A DATA SET FROM JES   SJB
         SPACE 2                                                    SJB
RESETPK  DS    0H                                                   SJB
         MODESET KEY=NZERO         GET OUT OF KEY ZERO              SJB
         SPACE 1                                                    SJB
         BR    R3                  CONTINUE AS DETERMINED EARLIER   SJB
         DROP  R2                                                   SJB
         EJECT                                                      SJB
CALLLIB  DS    0H                                                   SJB
         LIBWTO 'ENTERED CALLLIB'                                   SJB
*                                                                   SJB
         LA    R1,WORK1            PASS WORK AREA ADDR              SJB
         L     R15,=A(LIBMAIN)                                      SJB
         BALR  14,15               CALL LIBRARIAN                   SJB
*                                                                   SJB
*              SNAPID IS SET IN LIBMAIN ROUTINE                     SJB
*                                                                   SJB
         LTR   R15,R15             WAS CALL GOOD?                   SJB
         BNZ   SNAPIT              NO GO SNAP                       SJB
*                                                                   SJB
         LIBWTO 'EXIT    CALLLIB'                                   SJB
*                                                                   RPD
         TM    FLAG3,$FRSTPSO      CHECK IF JOB WAS PROCESSED       RPD
         BO    CHGMSGCL            NO. GO WAIT THEN CHANGE MSGCLASS RPD
*                                                                   RPD
         B     GETDS               NO. GO WAIT FOR WORK OR OPER CMNDSJB
         EJECT                                                      SJB
STOPWTR  OI    SSSOFLG2,SSSOCTRL   INDICATE WRITER TERMINATING      SJB
         SPACE 1                                                    SJB
         MODESET MODE=SUP          GET INTO SUPERVISOR STATE        SJB
         SPACE 1                                                    SJB
         LA    R1,LWASSPRM         LOAD ADDRESS OF SSOB             SJB
         SPACE 1                                                    SJB
         IEFSSREQ                  TELL SUBSYSTEM WE ARE SHUTTING DOWNB
         SPACE 1                                                    SJB
         MODESET MODE=PROB         GET OUT OF SUPERVISOR STATE      SJB
         SPACE 2                                                    SJB
ENDWTR   WTO 'LIBSPOOL:  JCLLIST IS SHUTTING DOWN',ROUTCDE=2,DESC=4 SJB
         SPACE 1                                                    SJB
         B     MAINRET                                              SJB
MAINRET  DS    0H                                                   SJB
         LA    R4,LWADCBRP         ADDR OR REPORT DCB               SJB
         CLOSE ((R4))              CLOSE REPORT FILE                SJB
         FREEPOOL ((R4))                                            RPD
         LH    R15,RETCODE         RELOAD RETCODE                   SJB
         RELEASE LWORK1,RC=(15)                                     SJB
         SPACE 2                                                    SJB
SNAPIT   DS    0H                                                   SJB
         LA    R4,SNAPDCB                                           SJB
         OPEN  ((R4),(OUTPUT))     FOR SNAP, FOLLOWING              SJB
         SPACE 1                                                    SJB
         LA    R2,0(,R13)                                           SJB
         LA    R3,LWORK1(,R13)                                      SJB
         SR    R5,R5                                                SJB
         IC    R5,SNAPID                                            SJB
         SNAP  DCB=SNAPDCB,ID=(5),PDATA=ALL,                        SJBX
               STORAGE=((2),(3))                                    SJB
         SPACE 1                                                    SJB
         B     STOPWTR             TERMINATE WRITER                 SJB
         PUSH  USING               SAVE BASE REGISTER INFORMATION   SJB
         DROP  R12                 DROP PROGRAM BASE REGISTERS      SJB
         EJECT                                                      SJB
POSTWAIT EQU   *                   STIMER EXIT                      SJB
         USING POSTWAIT,R15        ESTABLISH ADDRESSABILITY         SJB
         STM   R14,R12,12(R13)     SAVE REGISTERS                   SJB
         SPACE 1                                                    SJB
         POST  STIMRECB            INDICATE END OF INTERVAL         SJB
         SPACE 1                                                    SJB
         LM    R14,R12,12(R13)     RESTORE REGISTERS                SJB
         BR    R14                 RETURN TO SYSTEM                 SJB
         SPACE 1                                                    SJB
         POP   USING               RESTORE PREVIOUS BASE REG STATUS SJB
         EJECT                                                      SJB
MVCPARM  MVC   PARMCARD(*-*),2(R1) MOVE IN PARM FIELD               SJB
COMMLPTR DC    A(0)                PTR FROM EXTRACT (TO ECB & CIB PTRS)
*                                                                   SJB
CMNDECBP DC    X'80',AL3(0)        PTR TO ECB POSTED WHEN CMD ISSUE SJB
*                                                                   SJB
ECBL2PTR DC    A(CMDECBP2)         PTR TO SECOND ECBLIST            SJB
CMDECBP2 DC    A(0)                PTR TO COMMAND ECB               SJB
TIMRECBP DC    X'80',AL3(STIMRECB) PTR TO ECB POSTED BY STIMER EXIT SJB
STIMRECB DC    F'0'                ECB POSTED BY STIMER EXIT        SJB
WTIME    DC    F'1000'             10 SECOND INTERVAL FOR STIMER    RPD
BLANKS   DC    CL80' '             BLANKS                           SJB
*
MSGCLIST DC    CL8'WX      '    STRING OF MSGCLASSES TO BE SERVICED RPD
MSGCLSTP DC    C' '             STOP BYTE FOR MSGCLASS STRING       RPD
*
         LTORG                                                      SJB
         EJECT                                                      SJB
SNAPDCB  DCB   DDNAME=SNAP,DSORG=PS,MACRF=W,                        SJB*
               RECFM=VBA,LRECL=125,BLKSIZE=882                      SJB
         EJECT                                                      SJB
RPTDCB   DCB   DDNAME=REPORT,DSORG=PS,MACRF=PM,                     SJB*
               RECFM=FB,LRECL=90,BLKSIZE=6210                       SJB
         DS    0F                                                   SJB
RPTDCBL  EQU   *-RPTDCB                                             SJB
         DROP  R12                 DROP PROGRAM BASE REGISTERS      SJB
         EJECT                                                      SJB
*                                                                   SJB
*        LIBMAIN - DOES PROCESSING OF ALL DATA FOR 1 JOB ONLY       SJB
*                                                                   SJB
*        REG   INPUT               USAGE                            SJB
*                                                                   SJB
*        R1    PARM REG            PARM/WORK REG                    SJB
*        R2    N/A                 LIBPUT RECORD ADDR               SJB
*        R3    N/A                 LENGTH OF INPUT RECORD           SJB
*        R4    N/A                 WORK REG                         SJB
*        R5    N/A                 ADDR OF INPUT RECORD             SJB
*        R6    N/A                 BASE REG #2                      SJB
*        R7    N/A                 BAL  REG FOR LIBPUT              SJB
*        R8    N/A                 BAL  REG FOR READNEXT            SJB
*        R9    N/A                 BAL  REG FOR OTHER ROUTINES      SJB
*        R10   N/A                 BASE REG FOR SSOB                SJB
*        R11   N/A                 BASE REG FOR WORK1 DSECT         SJB
*        R12   N/A                 BASE REG #1                      SJB
*        R13   N/A                 SAVE AREA REG                    SJB
*        R14   RETURN ADDR         BALR REG                         SJB
*        R15   ENTRY POINT         BALR REG/ RETURN CODE            SJB
         SPACE 3                                                    SJB
LIBMAIN  CSECT                                                      SJB
         CONNECT LWORK2,WORK2,BASE=(R12,R6),CLEAR=YES,PARM=R11      SJB
         EJECT                                                      SJB
         USING SSOB,R10            ESTABLISH ADDRESSABILITY         SJB
         USING WORK1,R11           GET ADDR. TO 1 SAVEAREA          SJB
         LA    R10,LWASSOB         ADDR OF SSOB                     SJB
         LIBWTO 'ENTERED LIBMAIN'                                   SJB
*                                                                   SJB
         TM    FLAG2,$TITLE        IS TITLE REQUIRED NOW            SJB
         BNO   NOTITLE             NO,                              SJB
         LA    R2,TITLE1                                            SJB
         BAL   R7,RPTPUT                                            SJB
         LA    R2,TITLE2                                            SJB
         BAL   R7,RPTPUT                                            SJB
         NI    FLAG2,255-$TITLE    TURN OFF TITLE FLAG              SJB
NOTITLE  DS    0H                                                   SJB
*                                                                   RPD
         CLI   SPACEPID,C'&PRODID' IS &PRODID = SPACE               RPD
         BE    INITLOOP            YES, DO NOT RESTRICT USER ID     RPD
         CLI   SSSOUSER,C'&PRODID' IS FIRST CHARACTER OF USER ID =P RPD
         BE    INITLOOP            YES, PROCESS THIS JOB            RPD
         OI    FLAG,$CLOSING       TURN ON CLOSING FLAG             RPD
         MVI   FLAG3,X'00'         TURN OFF FIRST REQ. FLAG         RPD
         BAL   R9,ALLOCDS          GO ALLOCATE IT                   RPD
         BAL   R9,FREEREQD         FREE SYSOUT AND REQ TO DUMMY     RPD
         B     CLOSNRPT            GO DELETE ALL THE OTHER SYSOUTS  RPD
*                                  FOR THIS JOB.                    RPD
*                                                                   SJB
         EJECT                                                      SJB
INITLOOP DS    0H                                                   SJB
         MVI   FLAG4,X'00'         TURN OFF PRINTING REASON FLAG4   RPD
         MVI   FLAG5,X'00'         TURN OFF PRINTING REASON FLAG5   RPD
         BAL   R9,LIBINIT          INIT, SINCE THIS IS FIRST TIME   SJB
ALLOCLOP DS    0H                                                   SJB
         BAL   R9,ALLOCDS          GO ALLOCATE IT                   SJB
*                                  FOR THIS JOB AND SET R8          SJB
         TM    FLAG3,$FRSTPSO      DID WE GET JCL FOR THIS JOB      RPD
         BNO   OPENLOOP            YES,OPEN AND LOOK AT THE RECORDS RPD
         BAL   R9,FREEKEEP         FREE THIS SYSOUT                 RPD
         MVC   LWACLOSE,CLOSE                                       RPD
         CLOSE (LWADCBOT),MF=(E,LWACLOSE)  CLOSE SYSIN FILE         RPD
         RELEASE LWORK2,RC=0       RETURN WITH SWITCH TO            RPD
*                                  $FRSTPSO ON TO SHOW WE SHOULD    RPD
*                                  WAIT THEN GET NEXT MSGCLASS      RPD
OPENLOOP DS    0H                                                   SJB
         BAL   R9,OPENIN           OPEN INPUT FILE                  SJB
*                                                                   SJB
READNEXT GET   LWADCBIN            GET RECORD ADDR                  SJB
         LR    R5,R1               SAVE INPUT RECORD ADDR           SJB
*                                                                   SJB
         LA    R1,LWADCBIN                                          SJB
         USING IHADCB,R1                                            SJB
         LH    R3,DCBLRECL         GET INPUT RECORD LENGTH          SJB
         TM    DCBRECFM,DCBRECU    IS THIS RECFM=U                  SJB
         BO    READNXT1            YES, THEN SKIP                   SJB
         TM    DCBRECFM,DCBRECV    IS THIS RECFM=V                  SJB
         BZ    READNXT1            NOPE, THEN SKIP                  SJB
         DROP  R1                                                   SJB
         LA    R1,4                LENGTH OF RDW                    SJB
         SR    R3,R1               SUBTRACT FROM LRECL              SJB
         LA    R5,4(,R5)           REPOSITION PAST RDW              SJB
READNXT1 DS    0H                                                   SJB
*                                                                   SJB
         LA    R2,CARDOUT          GET CARD OUTPUT ADDR             SJB
         MVC   CARDOUT,BLANKS2                                      SJB
*              R8 IS INITIALLY SET IN ALLOCDS FOR PSO# 2,3,4        SJB
*              AND THE CHECK ROUTINE SETS IT ALSO                   SJB
         BR    R8                  GO TO CHECK ROUTINE              SJB
*              AND WRITE THE OUTPUT RECORDS                         SJB
         EJECT                                                      SJB
EOF      DS    0H                                                   SJB
         LIBWTO 'ENTERED EOF     '                                  SJB
*                                                                   SJB
         MVC   LWACLOSE,CLOSE                                       SJB
         LA    R4,LWADCBIN                                          SJB
         CLOSE ((R4)),MF=(E,LWACLOSE) CLOSE INPUT FILE              SJB
         FREEPOOL ((R4))                                            RPD
         SPACE 2                                                    SJB
*                                                                   SJB
         BAL   R9,FREEKEEP         FREE KEEP PSO                    SJB
*                                                                   SJB
*              GET NEXT PSO#                                        SJB
*                                                                   SJB
         B     NEXTSSRQ            GET NEXT PSO FOR THIS JOB        SJB
*                                                                   SJB
NEXTSSRQ DS    0H                                                   SJB
         LIBWTO 'ENTERED NEXTSSRQ'                                  SJB
*                                                                   SJB
         SPACE 3                                                    SJB
*                                                                   SJB
*              GO DO A SUB-SYSTEM REQUEST                           SJB
*                                                                   SJB
         L     R15,=A(SSREQ)                                        SJB
         LA    R1,WORK1            POINT TO MAIN WORK AREA          SJB
         BALR  R14,R15                                              SJB
*                                                                   SJB
*              END OF SUB-SYSTEM REQUEST                            SJB
*                                                                   SJB
         SPACE 3                                                    SJB
         MVI   SNAPID,2                                             SJB
         LH    R15,RETCODE         GET IEFSSREQ RETURN CODE         SJB
         LTR   R15,R15             SUBSYSTEM REQUEST SUCCESSFUL?    SJB
         BNZ   SNAPIT2             NO. TERMINATE WRITER             SJB
*                                                                   SJB
         C     R15,SSOBRETN        DID WE GET A DATA SET FROM JES?  SJB
         BE    ALLOCLOP            YES. GO ALLOC IT                 SJB
*                                                                   SJB
         LA    R1,4                FOR 'COMPARE'                    SJB
         C     R1,SSOBRETN         ARE WE OUT OF ELIGIBLE DATA SETS?SJB
         BNE   SNAPIT2             NO. SOMETHING WRONG. TERMINATE   SJB
         B     NOPSOLFT            NO PSO DSN LEFT                  SJB
         SPACE 3                                                    SJB
*                                                                   SJB
         SPACE 3                                                    SJB
*                                                                   SJB
NOPSOLFT DS    0H                                                   SJB
         LIBWTO 'ENTERED NOPSOLFT'                                  SJB
         CLC   DSFLAGS,ALLDS       DID WE PROCESS 2,3,4 PSO         SJB
         BE    CLOSEOUT            YES, THEN CLOSEOUT               SJB
         OI    FLAG,$PRINT         NOPE, THEN TURN ON PRINT FLAG    SJB
         B     CLOSEOUT                                             SJB
CLOSEOUT DS    0H                                                   SJB
         LIBWTO 'ENTERED CLOSEOUT'                                  SJB
         MVC   DSCERROR,DASHES     ASSUME NO PRINT ERROR            RPD
         TM    FLAG,$PRINT         SEE IF NOT ALLDS OR JCL ERROR    SJB
         BNO   CLOSNERR                                             SJB
         MVC   DSCERROR,=C'PRINTED' MOVE IN ERROR FLAG              SJB
CLOSNERR LA    R2,SELCARD          -SEL  CARD                       SJB
         BAL   R7,LIBPUT           PUT IT OUT                       SJB
         LA    R2,DSCCARD          -DESC CARD                       SJB
         BAL   R7,LIBPUT           PUT IT OUT                       SJB
         LA    R2,ENDCARD          -END  CARD                       SJB
         BAL   R7,LIBPUT           PUT IT OUT                       SJB
*                                                                   SJB
         MVC   LWACLOSE,CLOSE                                       SJB
         LA    R4,LWADCBOT                                          SJB
         CLOSE ((R4)),MF=(E,LWACLOSE)                               SJB
         FREEPOOL ((R4))                                            RPD
         OI    FLAG,$CLOSING       INDICATE WE ARE CLOSING          SJB
*                                                                   SJB
         LA    R1,LIBPARM                                           SJB
         LINK  EP=LIBRARY          LINK TO LIBRARY                  SJB
         LR    R5,R15              SAVE R15                         SJB
*                                                                   SJB
         LA    R4,LWADCBRP         ADDR OR REPORT DCB               SJB
         USING IHADCB,R4                                            SJB
         TM    DCBOFLGS,DCBOFOPN   DID OPEN WORK?                   SJB
         DROP  R4                                                   SJB
         BNO   CLOSNRPT            NO                               SJB
         MVC   CARDOUT,BLANKS2                                      SJB
         MVC   CARDOUT+00(8),ADDJOB MOVE IN MEMBER NAME             RPD
         MVC   CARDOUT+10(8),PGMJOBN MOVE IN JOBNAME                SJB
         MVC   CARDOUT+20(7),PGMUSER MOVE IN USERID                 SJB
         MVC   CARDOUT+30(5),DSCDATE MOVE IN JOB BEGIN DATE         SJB
         MVC   CARDOUT+40(4),DSCTON  MOVE IN JOB BEGIN TIME         SJB
         MVC   CARDOUT+50(4),DSCTOFF MOVE IN JOB STOP  TIME         SJB
         MVC   CARDOUT+63(1),DSCMSGCL MOVE IN MSGCLASS              RPD
         MVC   CARDOUT+70(7),DSCERROR MOVE IN ERROR FLAG            SJB
*                                                                   RPD
         MVC   DSCDATE(5),=C'YYDDD' REINITIALIZE FOR NEXT JOB. THE  RPD
         MVC   DSCTON(4),=C'HHMM'   NEXT JOB MAY NOT BE SCHDULED    RPD
         MVC   DSCTOFF(4),=C'HHMM'  NO IEF375I AND IEF376I MESSAGES RPD
*                                   WILL BE FOUND.                  RPD
         LTR   R5,R5                                                SJB
         BZ    CLOSEMSG                                             SJB
         MVC   CARDOUT+80(10),=CL10'LIB ERROR'                      SJB
         WTO 'LIBSPOOL: JCLLIST HAS LIBRARY ERROR',ROUTCDE=2,DESC=4 SJB
         MVI   SNAPID,10           SET SNAP NUMBER                  SJB
         STH   R5,RETCODE          SAVE RETURN CODE                 SJB
CLOSEMSG LA    R4,LWADCBRP                                          SJB
         PUT   (R4),CARDOUT                                         SJB
         CLI   SNAPID,10           WAS THERE A LIBRARY ERROR        SJB
         BE    SNAPIT2             YES, THEN TERMINATE              SJB
CLOSNRPT DS    0H                                                   SJB
*                                                                   SJB
         MVI   SSSODSN,X'00'       INDICATE NEW JOB GROUP           SJB
         EJECT                                                      SJB
*                                                                   SJB
*              ONCE WE GET TO THIS POINT ALL SYSOUTS OF THE         RPD
*              JOB WHICH MATCH THE MSGCLASS OF THE JOB WILL         RPD
*              STILL BE AROUND.                                     RPD
*                                                                   RPD
*              FOR THESE PSO'S, RE-AQUIRE PSO, ALLOC AND            RPD
*              FREE-REQR IF $PRINT ERROR FLAG OR                    RPD
*              FREE-DEL  IF NO ERROR                                RPD
*                                                                   SJB
         LA    R5,999              LOAD MAX LOOP COUNT              SJB
CLOSLOOP DS    0H                                                   SJB
CLOSBPSO DS    0H                  RETURN FROM ALLOCDS IF           SJB
*                                  BADPSO# ENCOUNTERED (BAD PSO     SJB
*                                  HAS BEEN FREE-RLSE)              SJB
*                                                                   SJB
*              GO DO A SUB-SYSTEM REQUEST                           SJB
*                                                                   SJB
         L     R15,=A(SSREQ)                                        SJB
         LA    R1,WORK1            POINT TO MAIN WORK AREA          SJB
         BALR  R14,R15                                              SJB
*                                                                   SJB
*              END OF SUB-SYSTEM REQUEST                            SJB
*                                                                   SJB
         SPACE 3                                                    SJB
         MVI   SNAPID,3                                             SJB
         LH    R15,RETCODE         GET IEFSSREQ RETURN CODE         SJB
         LTR   R15,R15             SUBSYSTEM REQUEST SUCCESSFUL?    SJB
         BNZ   SNAPIT2             NO. TERMINATE WRITER             SJB
*                                                                   SJB
         C     R15,SSOBRETN        DID WE GET A DATA SET FROM JES?  SJB
         BE    CLOSALOC            YES. GO ALLOC IT                 SJB
*                                                                   SJB
         LA    R1,4                FOR 'COMPARE'                    SJB
         C     R1,SSOBRETN         ARE WE OUT OF ELIGIBLE DATA SETS?SJB
         BNE   SNAPIT2             NO. SOMETHING WRONG. TERMINATE   SJB
         B     LIBRET              NO PSO DSN LEFT                  SJB
*                                                                   SJB
CLOSALOC DS    0H                                                   SJB
         BAL   R9,ALLOCDS          ALLOC DSN                        SJB
         TM    FLAG,$PRINT         WAS THERE AN ERROR               SJB
         BO    CLOSRLSE            YES, DO FREE RLSE, REQUEUECLS    SJB
         TM    FLAG5,$FNDCCMS      WAS CONDITION CODE MESSAGE FOUND RPD
         BNO   CLOSRLSE            NO ABEND OR NORMAL STEP COMPLETE RPD
*                                  IN JOB-PRINT JCL                 RPD
         BAL   R9,FREEREQD         FREE REQUEUE TO DUMMY CLASS      RPD
*        BAL   R9,FREEDEL          ELSE, DO FREE DELETE             SJB
         B     CLOSINCR            GO TO BCT                        SJB
CLOSRLSE DS    0H                                                   SJB
         BAL   R9,FREEREQR         FREE REQUEUE CLASS RLSE          SJB
CLOSINCR DS    0H                                                   SJB
         BCT   R5,CLOSLOOP         GO TO IT                         SJB
         B     LIBRET                                               SJB
         EJECT                                                      SJB
*                                                                   SJB
         EJECT                                                      SJB
LIBRET   DS    0H                                                   SJB
         LIBWTO 'ENTERED LIBRET'                                    SJB
*        MVC   LWACLOSE,CLOSE                                       SJB
*        CLOSE (LWADCBOT),MF=(E,LWACLOSE)                           SJB
         RELEASE LWORK2,RC=0                                        SJB
         SPACE 3                                                    SJB
LIBRET2  DS    0H                                                   SJB
         LIBWTO 'ENTERED LIBRET2'                                   SJB
*                                                                   SJB
         MVC   LWACLOSE,CLOSE                                       SJB
         CLOSE (LWADCBOT),MF=(E,LWACLOSE)                           SJB
*                                                                   SJB
         LH    R15,RETCODE                                          SJB
         LTR   R15,R15             IS R15 > 0                       SJB
         BNP   *+8                 YES                              SJB
         LA    R15,32              NOPE, GIVE A BAD RETCODE         SJB
         RELEASE LWORK2,RC=(15)                                     SJB
         EJECT                                                      SJB
ALLOCDS  DS    0H                                                   SJB
*                                                                   SJB
*              ENTERED BY A        BALR   R9,ALLOCDS                SJB
*                                                                   SJB
         LIBWTO 'ENTERED ALLOCDS'                                   SJB
         MVC   CARDOUT(44),SSSODSN                                  SJB
         LA    R2,CARDOUT                                           SJB
         BAL   R7,RPTPUT2                                           SJB
*                                                                   SJB
         MVC   ALDDNAM,BLANKS2     MOVE BLANKS TO DDNAME            SJB
         MVC   ALDSN,SSSODSN       MOVE DSNAME INTO ALLOCATE TEXT U SJB
         USING S99RB,R14           ESTABLISH ADDRESSABILITY         SJB
         LA    R14,S99AREA         SET UP SVC 99 PARM AREA BASE REG SJB
         MVI   S99VERB,S99VRBAL    INDICATE ALLOC. TO BE PERFORMED  SJB
         LA    R1,ALTUPTR          ADDR OF ALLOCATION TEXT UNIT PTRSSJB
         ST    R1,S99TXTPP         STORE IN SVC 99 REQUEST BLOCK    SJB
         LA    R1,S99PARM          LOAD ADDRESS OF SVC 99 PARM AREA SJB
         DROP  R14                                                  SJB
         SPACE 1                                                    SJB
         DYNALLOC                  PERFORM DYNAMIC ALLOCATION       SJB
         SPACE 1                                                    SJB
         STH   R15,RETCODE         SAVE SVC 99 RETURN CODE          SJB
         MVI   SNAPID,4            IDENTIFY SNAP ORIGIN             SJB
         LTR   R15,R15             TEST SVC 99 RETURN CODE          SJB
         BNZ   SNAPIT2             NO GOOD. SNAP AND TERMINATE      SJB
         SPACE 2                                                    SJB
*                                                                   SJB
         MVC   CARDOUT(44),SSSODSN                                  SJB
         LA    R2,CARDOUT                                           SJB
         BAL   R7,RPTPUT2                                           SJB
*                                                                   SJB
         CLC   SSSODSN+14(5),PSODS IS THIS A PSO DATA SET?          SJB
         BNE   BADPSO#             NO. GO DELETE IT                 SJB
         CLI   SSSODSN+19,C'1'     DETERMINE IF THIS                RPD
         BL    BADPSO#                IS A DATA SET WE              SJB
         CLI   SSSODSN+19,C'4'           WISH TO PROCESS            SJB
         BH    BADPSO#             IE PSO #2(LOG), #3(JCL), #4(MSG) SJB
*                                  PSO #1(JCL)-NOT INTERPRETED(ACF) RPD
*                                                                   RPD
         MVI   FLAG3,X'00'         INDICATE JCL GOTTEN FOR THIS JOB RPD
*                                                                   SJB
*              STORE PSO# RELATIVE TO 0 IN DSTYPE                   SJB
*                                                                   SJB
         TM    FLAG,$CLOSING       ARE WE CLOSEING                  SJB
         BO    ALLOCDS1            YES                              SJB
*                                                                   SJB
         CLI   SSSODSN+19,C'1'     PSO #1-JOB NOT INTERPRETED (ACF) RPD
         BNE   PSO234              PAST INTERPRETATION              RPD
         LA    R8,OTHERDS          BRANCH ADDRESS FOR OTHER SYSOUTS RPD
         B     ALLOCDS0            CONTINUE                         RPD
*                                                                   SJB
PSO234   XR    R4,R4               CLEAR                            SJB
         IC    R4,SSSODSN+19       GET PSO NUMBER (EBCDIC)          SJB
         LA    R1,242              CONVERT PSO NUMBER TO BINARY AND SJB
         SR    R4,R1               CHANGE SCALE: 0=LOG, 1=JCL, 2=MSGSJB
         STC   R4,DSTYPE           SAVE CURRENT DATA SET TYPE       SJB
         STC   R4,DSFLAGS(R4)      SAVE IT ALSO IN DSFLAGS+0(R4)    SJB
         LR    R8,R4               COMPUTE OFFSET IN                SJB
         SLL   R8,2                   BRANCH-ADDRESS TABLE          SJB
         L     R8,DSPRCAD(R8)      GET APPROPRIATE BRANCH ADDRESS   SJB
         SPACE 1                                                    SJB
*                                                                   SJB
ALLOCDS0 MVC   CARDOUT(08),ALDDNAM                                  RPD
         LA    R2,CARDOUT                                           SJB
         BAL   R7,RPTPUT2                                           SJB
*                                                                   SJB
ALLOCDS1 DS    0H                                                   SJB
         BR    R9                                                   SJB
         SPACE 3                                                    SJB
BADPSO#  DS    0H                                                   SJB
         TM    FLAG,$CLOSING       ARE WE CLOSEING                  SJB
         BO    ALLOCDS1            YES, RETURN TO CLOSALOC PAR.     SJB
*                                                                   RPD
         TM    FLAG3,$FRSTPSO      WHAT SYSOUT IS THIS FOR THIS JOB RPD
         BO    ALLOCDS1            FIRST SYSOUT NOT 1,2,3, OR 4     RPD
*                              RETURN WITH $FRSTPSO ON WHICH WILL   RPD
*                              CAUSE A WAIT AND THEN A SUBSYSTEM    RPD
*                              REQUEST FOR THE NEXT MSGCLASS.       RPD
*                                         HOPEFULLY THE NEXT TIME   RPD
*                              A REQUEST IS MADE FOR THIS MSGCLASS  RPD
*                              WE WILL GET THE JCL FIRST FOR A NEW  RPD
*                              JOB.                                 RPD
*                              CODE COULD BE INSERTED HERE TO TEST  RPD
*                              IF THE JOB BELONGING TO THIS SYSOUT  RPD
*                              IS NOT EXECUTING. IF SO THEN QUEUE   RPD
*                              THIS SYSOUT TO BE PRINTED.           RPD
*                                                                   RPD
         LA    R8,OTHERDS          BRANCH ADDRESS FOR OTHER SYSOUTS RPD
         B     ALLOCDS0                                             RPD
*                                                                   RPD
         EJECT                                                      SJB
LIBINIT  DS    0H                                                   SJB
*                                                                   SJB
*              ENTERED BY A        BALR   R9,LIBINIT                SJB
*                                                                   SJB
*              OPEN LIBRARIAN SYSIN FILE                            SJB
*              CREATE AND WRITE -ADD CARD                           SJB
*              CREATE AND WRITE -PGMR CARD                          SJB
*                                                                   SJB
         LIBWTO 'ENTERED LIBINIT'                                   SJB
         MVC   LWAOPEN,OPEN                                         SJB
         MVC   LWADCBOT,OUTDCB     MOVE IN MODEL                    SJB
         LA    R4,LWADCBOT                                          SJB
         OPEN  ((R4),(OUTPUT)),MF=(E,LWAOPEN)                       SJB
*                                  OPEN LIBRARIAN SYSIN FILE        SJB
         USING IHADCB,R4                                            SJB
         TM    DCBOFLGS,DCBOFOPN   DID OPEN WORK?                   SJB
         DROP  R4                                                   SJB
         BO    SYSINOK             YES                              SJB
*                                                                   SJB
         MVI   SNAPID,5            SET SNAPID                       SJB
         LA    R15,24              SET FUNNY RC                     SJB
         STH   R15,RETCODE         SAVE IT                          SJB
         B     SNAPIT2             SNAP IT                          SJB
SYSINOK  DS    0H                                                   SJB
*                                                                   SJB
         TIME  DEC                 GET JULIAN DAY FOR MODULE NAME   RPD
         STH   R1,JULDTEPK         STORE PACKED JULIAN DATE         RPD
         UNPK  JULIANDY,JULDTEPK   UNPACK JULIAN DATE               RPD
*                                                                   RPD
         MVC   ADDJOB+1(3),JULIANDY+0 MOVE JULIAN DAY TO -ADD CARD  RPD
         MVC   ADDJOB+4(4),SSSOJOBI+4 MOVE IN JOB# TO -ADD CARD     RPD
         MVI   ADDJOB+0,C'A'       INITIALIZE TO SEQ. CHAR TO "A"   RPD
         BAL   R7,LIBFAIR          CHECK AND SEE IF OK              SJB
         MVC   DSCJOB,ADDJOB       MOVE IN JOB# TO -DSC CARD        SJB
         MVC   SELJOB,ADDJOB       MOVE IN JOB# TO -SEL CARD        SJB
*                                                                   SJB
         MVC   PGMJOBN,SSSOJOBN    MOVE JOBNAME TO -PGMR FIELD      SJB
         MVC   PGMUSER,SSSOUSER    MOVE USERID  TO -PGMR FIELD      SJB
*                                                                   SJB
*              TRANSLATE ALL BLANKS TO '.' IN -PGMR CARD(OPERANDS)  SJB
*                                                                   SJB
         LA    R1,PGMJOBN          GET JOBNAME ADDR                 SJB
         LA    R2,L'PGMJOBN+L'PGMUSER LENGTH TO CHECK               SJB
TRANS1   DS    0H                                                   SJB
         CLI   0(R1),C' '          IS IT BLANK                      SJB
         BE    TRANS2              YES                              SJB
         CLI   0(R1),X'00'         IS IT NULL                       SJB
         BNE   TRANS3              NO                               SJB
TRANS2   MVI   0(R1),C'.'          YES, TRANSLATE                   SJB
TRANS3   LA    R1,1(,R1)           ADD ONE                          SJB
         BCT   R2,TRANS1                                            SJB
*                                                                   SJB
         MVC   DLMJOB,ADDJOB       MOVE IN JOB# TO -DSC CARD        SJB
*        LA    R2,DLMCARD          PUT OUT -DLM CARD                SJB
*        BAL   R7,LIBPUT                                            SJB
*                                                                   SJB
         LA    R2,OPTCARD          PUT OUT -OPT CARD                SJB
         BAL   R7,LIBPUT                                            SJB
*                                                                   SJB
         LA    R2,ADDCARD          PUT OUT -ADD CARD                SJB
         BAL   R7,LIBPUT                                            SJB
*                                                                   SJB
         LA    R2,PGMCARD          PUT OUT -PGMR CARD               SJB
         BAL   R7,LIBPUT                                            SJB
*                                                                   SJB
         BR    R9                  RETURN                           SJB
*                                                                   SJB
         EJECT                                                      SJB
LIBFAIR  DS    0H                                                   SJB
*                                                                   SJB
*              LIBRARIAN FAIR      BAL  R7,LIBFAIR                  SJB
*                                                                   SJB
*              THIS CHECKS TO SEE IF THE MODULE NAME TO BE ADDED    SJB
*              TO LIBRARY EXISTS. IF SO THEN THE LAST               SJB
*              CHARACTER OF ADDJOB (AJJJNNNN) IN INCREMENTED        RPD
*              AND THE TEST IS MADE AGAIN. THIS PROCESS CONTINUES   SJB
*              UNTIL THE NAME IS UNIQUE OR UNTIL THE CHARACTER      SJB
*              '@' IS REACHED $PRINT IS TURNED ON                   SJB
*                                                                   SJB
         LIBWTO 'ENTERED LIBFAIR  '                                 SJB
         CALL  MASTOPN,(0,FAIRFLG),VL                               SJB
         CLI   FAIRFLG,C'0'        DID LIBRARIAN OPEN WORK          SJB
         BNE   FAIRBAD1            NOPE, BAD                        SJB
*                                                                   SJB
         MVC   FAIRMOD,BLANKS2                                      SJB
         MVC   FAIRMOD(8),ADDJOB   MOVE IN ADDJOB                   RPD
         LA    R4,FAIRSEQ                                           SJB
FAIRCHK  DS    0H                                                   SJB
         CALL  MASTMOD,(FAIRMOD,FAIRFLG),VL SEE IF MODULE EXISTS    SJB
         CLI   FAIRFLG,C'1'        DOES IT EXIST                    SJB
         BE    FAIRXIT1            NO, THEN EXIT THIS ONES OK       SJB
         CLI   FAIRFLG,C'0'        NORMAL RETURN CODE               SJB
         BNE   FAIRBAD2            BAD RETURN CODE                  SJB
         LA    R4,1(,R4)           GET NEW SEQUENCE CHARACTER ADDR  SJB
         MVC   FAIRMOD+0(1),0(R4)  MOVE IN NEW CHARACTER            RPD
         CLI   0(R4),C'@'          IS THIS THE END                  SJB
         BE    FAIRXIT2                                             SJB
         B     FAIRCHK                                              SJB
FAIRXIT2 DS    0H                                                   SJB
         OI    FLAG,$PRINT                                          SJB
FAIRXIT1 DS    0H                                                   SJB
         MVC   ADDJOB,FAIRMOD                                       SJB
         CALL  MASTCLS,                                             SJB
         BR    R7                                                   SJB
*                                                                   SJB
FAIRBAD1 DS    0H                  MASTOPN FAILED                   SJB
*                                                                   SJB
         MVI   SNAPID,6            SET SNAPID                       SJB
         LA    R15,24              SET FUNNY RC                     SJB
         STH   R15,RETCODE         SAVE IT                          SJB
         B     SNAPIT2             SNAP IT                          SJB
*                                                                   SJB
FAIRBAD2 DS    0H                  MASTMOD FAILED                   SJB
*                                                                   SJB
         MVI   SNAPID,7            SET SNAPID                       SJB
         LA    R15,24              SET FUNNY RC                     SJB
         STH   R15,RETCODE         SAVE IT                          SJB
         B     SNAPIT2             SNAP IT                          SJB
FAIRSEQ  DC    C'ABCDEFGHIJKLMNOPQRSTUVWXYZ@'                       SJB
FAIRMOD  DC    CL8' '                                               SJB
FAIRFLG  DC    C' '                                                 SJB
         EJECT                                                      SJB
FREEKEEP DS    0H                                                   SJB
*                                                                   SJB
*              FREEKEEP SYSOUT     BAL  R9,FREEKEEP                 SJB
*                                                                   SJB
         LIBWTO 'ENTERED FREEKEEP'                                  SJB
         LA    R1,TUFRKEPH         KEEP, HOLD                       SJB
         ST    R1,LWAUALTU                                          SJB
         B     UNALLOC                                              SJB
FREERLSE DS    0H                                                   SJB
*                                                                   SJB
*              FREERLSE SYSOUT     BAL  R9,FREERLSE                 SJB
*                                                                   SJB
         LIBWTO 'ENTERED FREERLSE'                                  SJB
         LA    R1,TUFRKEPR         KEEP, RELEASE                    SJB
         ST    R1,LWAUALTU                                          SJB
         B     UNALLOC                                              SJB
         SPACE 3                                                    SJB
FREEDEL  DS    0H                                                   SJB
*                                                                   SJB
*              FREEDEL SYSOUT      BAL R9,FREEDEL                   SJB
*                                                                   RPD
         CLC   SSSODSN+14(6),PSODS     CHECK IF PSO #2(MSG)         RPD
         BNE   SKIPWTOS                DO NOT WTO FOR OTHER PSOS    RPD
         MVC   SUCCESS+26(8),SSSOJOBN                               RPD
         MVC   SUCCESS+35(4),SSSOJOBI+4                             RPD
         MVC   SUCCESS+40(1),SSSOCLAS                               RPD
SUCCESS  WTOR  'LIBSPOOL: XXXXXXXX-YYYY-Z - SUCCESSFULLY COMPLETED',   X
               RPLYAREA,1,RPLYECB,ROUTCDE=2                         RPD
*                                                                   SJB
SKIPWTOS LIBWTO 'ENTERED FREEDEL'                                   SJB
         LA    R1,TUFRDEL          DELETE, RELEASE                  SJB
         ST    R1,LWAUALTU                                          SJB
         B     UNALLOC                                              SJB
         SPACE 3                                                    SJB
FREEREQH DS    0H                                                   SJB
*                                                                   SJB
*              FREEREQ HOLD SYSOUT BAL R9,FREEREQH                  SJB
*                                                                   SJB
         LIBWTO 'ENTERED FREEREQH'                                  SJB
         LA    R1,TUFRREQH         CHANGE CLASS, HOLD               SJB
         ST    R1,LWAUALTU                                          SJB
         B     UNALLOC                                              SJB
         SPACE 3                                                    SJB
FREEREQR DS    0H                                                   SJB
*                                                                   SJB
*              FREEREQ RLSE SYSOUT BAL R9,FREEREQR                  SJB
*                                                                   RPD
         CLC   SSSODSN+14(6),PSODS     CHECK IF PSO #2(MSG)         RPD
         BNE   SKIPWTOF                DO NOT WTO FOR OTHER PSOS    RPD
         MVC   FAILURE+26(8),SSSOJOBN                               RPD
         MVC   FAILURE+35(4),SSSOJOBI+4                             RPD
         MVC   FAILURE+40(1),SSSOCLAS                               RPD
TSTABEND TM    FLAG4,$ABEND            TEST IF ABEND FOUND          RPD
         BNO   TSTCANCL                NO                           RPD
         MVC   FAILURE+44(22),ABNDMES INDICATE ABEND                RPD
         B     FAILURE                 WRITE IT                     RPD
TSTCANCL TM    FLAG4,$CANCEL           TEST IF CANCEL FOUND         RPD
         BNO   TSTNOTCA                NO                           RPD
         MVC   FAILURE+44(22),CNCLMES INDICATE ABEND/JCL ERROR      RPD
         B     FAILURE                 WRITE IT                     RPD
TSTNOTCA TM    FLAG4,$NOTCAT           TEST IF NOT CATALOGED FOUND  RPD
         BNO   TSTNOTDL                NO                           RPD
         MVC   FAILURE+44(22),NOTCMES INDICATE NOT CATALOGED FOUND  RPD
         B     FAILURE                 WRITE IT                     RPD
TSTNOTDL TM    FLAG4,$NOTDEL           TEST IF NOT DELETED FOUND    RPD
         BNO   TSTENDCC                NO                           RPD
         MVC   FAILURE+44(22),NOTDMES INDICATE NOT DELETED FOUND    RPD
         B     FAILURE                 WRITE IT                     RPD
TSTENDCC TM    FLAG4,$ENDEDCC          TEST IF ENDED BY CC          RPD
         BNO   TSTJCLER                NO                           RPD
         MVC   FAILURE+44(22),ENDBYCC INDICATE ENDED BY COND. CODE  RPD
         B     FAILURE                 WRITE IT                     RPD
TSTJCLER TM    FLAG4,$JCLERR           TEST IF JCL ERROR            RPD
         BNO   TSTBADCC                NO                           RPD
         MVC   FAILURE+44(22),JCLERRM INDICATE JCL ERROR            RPD
         B     FAILURE                 WRITE IT                     RPD
TSTBADCC TM    FLAG4,$BADCC            TEST IF BAD COND CODE FOUND  RPD
         BNO   TSTFNDCC                NO                           RPD
         MVC   FAILURE+44(22),BADCMES INDICATE BAD COND CODE FOUND  RPD
         B     FAILURE                 WRITE IT                     RPD
TSTFNDCC TM    FLAG5,$FNDCCMS          TEST IF COND CODE MESSAGE    RPD
         BO    TSTPRTCL                COND CODE MESSAGE FOUND      RPD
         MVC   FAILURE+44(22),PRTDMES INDICATE PRINTED-NO PROBLEM   RPD
         B     FAILURE                 WRITE IT                     RPD
TSTPRTCL MVC   FAILURE+44(22),PRTCMES INDICATE PRINT MSGCLASS JOB   RPD
         B     FAILURE                 WRITE IT                     RPD
FAILURE  WTOR  'LIBSPOOL: XXXXXXXX-YYYY-Z - MMMMMMMMMMMMMMMMMMMMMM',   X
               RPLYAREA,1,RPLYECB,ROUTCDE=2                         RPD
*                                                                   RPD
SKIPWTOF LIBWTO 'ENTERED FREEREQR'                                  SJB
         LA    R1,TUFRREQR         CHANGE CLASS, RELEASE            SJB
         ST    R1,LWAUALTU                                          SJB
         B     UNALLOC                                              SJB
         SPACE 3                                                    SJB
FREEREQD DS    0H                                                   SJB
         CLI   SPACEPID,C'&PRODID' IS &PRODID = SPACE               RPD
         BE    CKIFPSO2            YES, DO NOT RESTRICT USER ID     RPD
         CLI   SSSOUSER,C'&PRODID' IS FIRST CHARACTER OF USER ID =P RPD
         BNE   SKIPWTOD            NO, WTOR NOT NEEDED, DELETEING   RPD
*                                  A NON-PROUCTION USER ID JOB      RPD
*                                                                   SJB
*              FREEREQ RLSE SYSOUT BAL R9,FREEREQD-REQUEUE TO DUMMY SJB
*                                                                   RPD
CKIFPSO2 CLC   SSSODSN+14(6),PSODS     CHECK IF PSO #2(MSG)         RPD
         BNE   SKIPWTOD                DO NOT WTO FOR OTHER PSOS    RPD
         MVC   SUCCESSD+26(8),SSSOJOBN                              RPD
         MVC   SUCCESSD+35(4),SSSOJOBI+4                            RPD
         MVC   SUCCESSD+40(1),SSSOCLAS                              RPD
SUCCESSD WTOR  'LIBSPOOL: XXXXXXXX-YYYY-Z - SUCCESSFULLY COMPLETED',   X
               RPLYAREA,1,RPLYECB,ROUTCDE=2
*                                                                   RPD
SKIPWTOD LIBWTO 'ENTERED FREEREQD'                                  SJB
         LA    R1,TUFRREQD         CHANGE CLASS, RELEASE TO DUMMY   SJB
         ST    R1,LWAUALTU                                          SJB
         B     UNALLOC                                              SJB
         EJECT                                                      SJB
UNALLOC  DS    0H                                                   SJB
         CLC   =XL8'00',ALDDNAM    IS IT NULLS                      SJB
         BER   R9                  YES, EXIT                        SJB
         CLC   =CL8' ',ALDDNAM     IS IT BLANKS                     SJB
         BER   R9                  YES, EXIT                        SJB
         MVC   UALDDNAM,ALDDNAM    MOVE DDNAME TO UNALLOCATION TXT  SJB
         LIBWTO 'ENTERED UNALLOC'                                   SJB
         USING S99RB,R14           ESTABLISH ADDRESSABILITY         SJB
         LA    R14,S99AREA         SET UP SVC 99 PARM AREA BASE REG SJB
         MVI   S99VERB,S99VRBUN    INDICATE UNALLOCATION TO BE DONE SJB
*                                                                   SJB
         L     R1,LWAUALTU         ADDR OF UNALLOCATION TU PTRS     SJB
*                                                                   SJB
         ST    R1,S99TXTPP         STORE IN SVC 99 REQUEST BLOCK    SJB
         LA    R1,S99PARM          LOAD ADDRESS OF SVC 99 PARM AREA SJB
         DROP  R14                                                  SJB
         SPACE 1                                                    SJB
         DYNALLOC                  PERFORM DYNAMIC UNALLOCATION     SJB
*        SPACE 1                                                    SJB
         STH   R15,RETCODE         SAVE SVC 99 RETURN CODE          SJB
         MVI   SNAPID,8            IDENTIFY SNAP ORIGIN             SJB
         LTR   R15,R15             TEST SVC 99 RETURN CODE          SJB
         BNZ   SNAPIT2             NO GOOD. SNAP AND TERMINATE      SJB
         BR    R9                  RETURN                           SJB
         EJECT                                                      SJB
OPENIN   DS    0H                                                   SJB
*                                                                   SJB
*              OPEN INPUT          BALR   R9,OPENIN                 SJB
*                                                                   SJB
         LIBWTO 'ENTERED OPENIN '                                   SJB
*                                                                   SJB
         MVC   LWADCBIN,INDCB                                       SJB
         LA    R4,LWADCBIN         INPUT DCB                        SJB
         USING IHADCB,R4           ESTABLISH ADDRESSABILITY         SJB
*                                                                   SJB
         MVC   DCBDDNAM,ALDDNAM    MOVE DDNAME AS SET BY SVC 99 TO DCBB
         OPEN  ((R4),(INPUT))      OPEN INPUT DATA SET              SJB
         SPACE 1                                                    SJB
         XC    RETCODE,RETCODE     CLEAR RETURN CODE FIELD          SJB
         MVI   SNAPID,9            IDENTIFY SNAP ORIGIN             SJB
         TM    DCBOFLGS,DCBOFOPN   WAS OPEN SUCCESSFUL?             SJB
         BZ    SNAPIT2             NO. SNAP AND TERMINATE           SJB
         DROP  R4                                                   SJB
         BR    R9                                                   SJB
         SPACE 3                                                    SJB
LIBPUT   DS    0H                                                   SJB
*                                                                   SJB
*              LIBPUT              BAL  R7,LIBPUT                   SJB
*                                                                   SJB
         LIBWTO 'ENTERED LIBPUT  '                                  SJB
         TM    FLAG,$CLOSING       ARE WE CLOSING A JOB             SJB
         BO    LIBPUT1             YES, OUTPUT FILE IS CLOSED       SJB
         LA    R4,LWADCBOT                                          SJB
         PUT   (R4),((R2))         PUT OUT RECORD                   SJB
LIBPUT1  LA    R2,CARDOUT          GET CARD OUTPUT ADDR             SJB
         MVC   CARDOUT,BLANKS2                                      SJB
         BR    R7                                                   SJB
         SPACE 3                                                    SJB
RPTPUT2  DS    0H                                                   SJB
*                      DEBUGGING                                    SJB
*              RPTPUT2             BAL  R7,RPTPUT2                  SJB
*                                                                   SJB
         LIBWTO 'ENTERED RPTPUT2'                                   SJB
         TM    FLAG2,$DEBUG        IS THIS DEBUG OPTION             SJB
         BNO   RPTPUT1             NO, THEN SKIP                    SJB
RPTPUT   DS    0H                                                   SJB
*                                                                   SJB
*              RPTPUT              BAL  R7,RPTPUT                   SJB
*                                                                   SJB
         LIBWTO 'ENTERED RPTPUT '                                   SJB
         LA    R4,LWADCBRP                                          SJB
         USING IHADCB,R4                                            SJB
         TM    DCBOFLGS,DCBOFOPN   DID OPEN WORK?                   SJB
         DROP  R4                                                   SJB
         BNO   RPTPUT1             NO, EXIT NO REPORT               SJB
         PUT   (R4),((R2))         PUT OUT RECORD                   SJB
RPTPUT1  LA    R2,CARDOUT          GET CARD OUTPUT ADDR             SJB
         MVC   CARDOUT,BLANKS2                                      SJB
         BR    R7                                                   SJB
         EJECT                                                      SJB
SNAPIT2  DS    0H                                                   SJB
*                                                                   SJB
*                                                                   SJB
*                                                                   SJB
         LIBWTO 'ENTERED SNAPIT2'                                   SJB
         B     LIBRET2                                              SJB
*                                                                   SJB
*                                                                   SJB
*                                                                   SJB
         EJECT
*/ ***************************************************************** /*
*                                                                     *
*  THE FOLLOWING BLOCKS OF CODE DEFINE THE CRITERIA BY WHICH JOBS     *
*  ARE SELECTED FOR POSSIBLE PRINTING BY LIBSPOOL.  EACH OF THE 3     *
*  COMPONENTS, JES2 JOB LOG, JCL, AND SYSTEM MESSAGE BLOCKS (SMB'S/   *
*  ALLOCATION/DEALLOCATION MESSAGES) OF ALL CLASS 'MSGCLIST' JOBS ARE *
*  SCANNED FOR THE OCCURRENCE OF SIGNIFICANT MESSAGE IDENTIFICATION   *
*  NUMBERS WHICH INDICATE THAT AN EXCEPTIONAL CONDITION OCCURRED DUR- *
*  ING JOB PROCESSING (EG. JCL ERROR, ABEND, NOT CAT 2, ETC.). UPON   *
*  THE OCCURRENCE OF THESE MESSAGE ID'S THE JOB IS FLAGGED FOR SUBSE- *
*  QUENT PRINTING; OTHERWISE, JOB START/STOP INFORMATION IS EXTRACT-  *
*  ED FOR INCLUSION ON A LIBRARIAN COMMENT CARD DURING THE PROCESS OF *
*  ADDING THE JOB TO THE LIBSPOOL.                                    *
*                                                                     *
*/ ***************************************************************** /*
*                                                                   SJB
*              R2 = OUTPUT BUFFER ADDR                              SJB
*              R3 = LENGTH OF INPUT RECORD                          SJB
*              R5 = INPUT RECORD ADDR                               SJB
*              R7 = BAL REG FOR LIBPUT                              SJB
*              R8 = POINTS TO RETURN ADDR FROM READNEXT             SJB
*                                                                   SJB
         EJECT                                                      SJB
JES2JLOG DS    0H                                                   SJB
         LIBWTO 'ENTERED JES2LOG'                                   SJB
         MVC   DSCMSGCL,SSSOCLAS   SAVE MSGCLASS OF JOB             RPD
         BAL   R8,READNEXT         SET CONT. ADDR AND IGNORE FIRST LINE
         MVC   0(80,R2),0(R5)      MOVE LINE (80 CHARS) TO LIB IOAREA
         MVI   0(R2),C'1'          SET NEW PAGE ASA CHAR
         BAL   R7,LIBPUT           RETURN TO LIBRARIAN WITH LOG TITLE
         MVI   0(R2),C'0'          SET DOUBLE SPACE ASA CHAR
         LA    R7,READNEXT         SET NEXT ENTRY BRANCH ADDR
         BAL   R8,LIBPUT           SET CONT. ADDR; RET WITH BLANK LINE
         SPACE 1
         MVI   0(R5),C' '          INSERT SINGLE SPACE ASA CHAR
         CLC   20(5,R5),IEF45      IS THIS AN IEF45* MSG?
         BNE   NOTIEF45            NO. CONTINUE
         CLI   25(R5),C'3'         IEF450 TO IEF453?
         BH    CONTDS1             NO. CONTINUE
         CLI   25(R5),C'0'         IEF450I ?                        RPD
         BNE   NOT450I             NO. CONTINUE                     RPD
         OI    FLAG4,$ABEND        INDICATE ABEND/JCL ERROR         RPD
         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD
NOT450I  CLI   25(R5),C'1'         IEF451I ?                        RPD
         BNE   NOT451I             NO. CONTINUE                     RPD
         OI    FLAG4,$ENDEDCC      INDICATE ENDED BY CONDITION CODE RPD
         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD
NOT451I  OI    FLAG4,$JCLERR       INDICATE JCL ERROR (IEF452(3)I)  RPD
         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD
SETPRT   OI    FLAG,$PRINT         INDICATE JOB IS TO BE PRINTED
         B     CONTDS1             CONTINUE
NOTIEF45 CLC   20(7,R5),IEF251I    IS THIS A 'JOB CANCELLED' MSG?
         BNE   NOTIEF25            NO. CONTINUE                     RPD
         OI    FLAG4,$CANCEL       INDICATE CANCEL MESSAGE          RPD
         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD
NOTIEF25 CLC   20(8,R5),IIP026I    EMULATOR 'WRITE, DATA CHECK' MSG?
         BE    SETPRT              YES. GO FLAG JOB FOR PRINTING
         CLC   20(2,R5),REPLY      IS THIS AN OPERATOR REPLY?
         BNE   CONTDS1             NO. CONTINUE
         LA    R1,23(R5)           STARTING ADDRESS FOR SCAN
         LA    R14,1               INCREMENT FOR BXLE
         LA    R15,10(R1)          LAST ADDRESS FOR SCAN
CHKCANCL CLC   1(6,R1),CANCEL      IS THIS A CANCEL REPLY?  WJS/01APR80
         BNE   INCRCNCL            GO INCREMENT                     RPD
         OI    FLAG4,$CANCEL       INDICATE CANCEL MESSAGE          RPD
         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD
INCRCNCL BXLE  R1,R14,CHKCANCL     CONTINUE CHECK FOR 'CANCEL'
         B     CONTDS1             NO 'CANCEL'. CONTINUE
         SPACE 1
JCLDS    MVI   0(R2),C'1'          SET NEW PAGE ASA CHAR (OS/JCL)
         BAL   R7,LIBPUT           RETURN TO LIBRARIAN WITH LOG TITLE
         BALR  R8,0                SET CONT. ADDRESS
         LA    R3,1(R3)            COMPENSATE FOR INSERTED ASA CHAR
         MVC   1(79,R2),0(R5)      MOVE 79 CHARS TO LIB IOAREA
         BCTR  R5,0                COMPENSATE FOR INSERTED ASA CHAR
         B     CONTDS2             CONTINUE PROCESSING OF LINE
         SPACE 1
MSGDS    MVI   4(R5),C'1'          INSERT NEW PAGE ASA CHAR (SMB'S)
         BALR  R8,0                SET CONT. ADDRESS
         CLC   1(7,R5),IEF375I     IS THIS A 'JOB START'/IEF375I MSG?
         BNE   NOT375              NO.
         MVC   DSCDATE,31(R5)      MOVE START DATE TO -DESC CARD    SJB
         MVC   DSCTON,37(R5)       MOVE START TIME TO -DESC CARD    SJB
         B     CONTDS1             CONTINUE
NOT375   CLC   1(7,R5),IEF376I     IS THIS A 'JOB END'/IEF376I MSG?
         BNE   NOT376              NO.
         MVC   DSCTOFF,37(R5)      MOVE STOP TIME TO -DESC CARD     SJB
         B     CONTDS1             CONTINUE
NOT376   CLC   1(7,R5),IEF287I     IS THIS IEF287I/(NOT CATALOGED) MSG?
         BNE   NOT287              NO, CONTINUE                     RPD
         OI    FLAG4,$NOTCAT       INDICATE NOT CATALOGED MESSAGE   RPD
         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD
NOT287   CLC   1(7,R5),IEF283I     IS THIS IEF283I/(NOT DELETED X) MSG?
         BNE   NOT283              NO, CONTINUE                     RPD
         OI    FLAG4,$NOTDEL       INDICATE NOT DELETED MESSAGE     RPD
         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD
*
NOT283   CLC   1(7,R5),IEF142I     IS THIS A CONDITION CODE MESSAGE RPD
         BNE   CONTDS1             NO. CONTINUE                     RPD
         OI    FLAG5,$FNDCCMS      INDICATE CONDITION CODE MESSAGE  RPD
*                                  FOUND-PRINT TYPRUN=SCAN          RPD
         CLI   SSSOCLAS,C'&MSGCLCC0' CK FOR CC > 0 PRINT MSGCLASS   RPD
         BE    FINDCC              GO FIND COND CODE AND CHECK IT   RPD
         CLI   SSSOCLAS,C'&MSGCLPRT' CK FOR PRINT ALWAYS MSGCLASS   RPD
         BNE   CONTDS1             NO COND CODE TEST FOR THIS CLASS RPD
         OI    FLAG4,$PRTMSGC      INDICATE PRINT MESSAGE CLASS     RPD
         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD
*
FINDCC   LA    R1,10(R5)           STARTING ADDRESS FOR SCAN        RPD
         LA    R14,1               INCREMENT FOR BXLE               RPD
         LA    R15,35(R5)          LAST ADDRESS FOR SCAN            RPD
CHKCCCOM CLC   0(4,R1),CCCOMMON    IS THIS A ' - S' FROM CC MESSAGE RPD
         BE    CHKMSGCL            YES. GO CHECK COND CODE          RPD
         BXLE  R1,R14,CHKCCCOM     CONTINUE CHECK FOR COMMON ' - S' RPD
         B     SETPRT              ADDRESSES EXHAUSTED - PRINT IT   RPD
CHKMSGCL CLI   SSSOCLAS,C'&MSGCLCC0' CK FOR CC > 0 MSGCLASS         RPD
         BE    ALLOWCC0            YES, GO CHECK AGAINST MAX.       RPD
*
ALLOWCC0 CLC   33(4,R1),CC0000     COMPARE CONDITION CODE TO 0      RPD
         BE    CONTDS1             CONDITION CODE 0 IS OK           RPD
         OI    FLAG4,$BADCC        INDICATE BAD CONDITION CODE      RPD
         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD
ALLOWCC4 CLC   33(4,R1),CC0005     COMPARE CONDITION CODE TO 5      RPD
         BL    CONTDS1             CONDITION CODE 4 OR LESS IS OK   RPD
         OI    FLAG4,$BADCC        INDICATE BAD CONDITION CODE      RPD
         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD
*                                                                   RPD
OTHERDS  XC    RECRDCTR,RECRDCTR   ZERO SYSOUT RECORD COUNTER       RPD
         CLI   0(R5),X'00'         CHECK FOR VARIABLE LENGTH RECORD RPD
         BE    VWCARCTL            ASSUME VARIABLE WITH ASA CHAR.   RPD
         CLI   0(R5),C'1'          CHECK FOR CHAN 1 SKIP IN SYSOUT  RPD
         BE    FWCARCTL            ASSUME SYSOUT HAS ASA CHARACTERS RPD
         CLI   0(R5),C' '          CHECK FOR SPACE SKIP IN SYSOUT   RPD
         BE    FWCARCL1            ASSUME SYSOUT HAS ASA CHARACTERS RPD
         MVI   0(R2),C'1'          SET NEW PAGE ASA CHAR            RPD
         BALR  R8,0                SET CONTINUATION ADDRESS         RPD
         LH    R1,RECRDCTR         GET RECORD COUNT FOR THIS SYSOUT RPD
         LA    R1,1(R1)            INCREMENT FOR CURRENT RECORD     RPD
         CH    R1,MAXLINES         CK MAXIMUM ALLOWED FOR A SYSOUT  RPD
         BH    TOOMANYL            MAXIMUM HAS BEEN REACHED         RPD
         STH   R1,RECRDCTR         SAVE NEW RECORD COUNT FOR SYSOUT RPD
         LA    R3,1(R3)            COMPENSATE FOR INSERTED ASA CHAR RPD
         MVC   1(79,R2),0(R5)      MOVE 79 CHARS TO LIB IOAREA      RPD
         BCTR  R5,0                COMPENSATE FOR INSERTED ASA CHAR RPD
         B     CONTDS2             CONTINUE PROCESSING OF LINE      RPD
VWCARCTL MVI   4(R5),C'1'          INSERT NEW PAGE ASA CHAR         RPD
         BALR  R8,0                SET CONT. ADDRESS                RPD
         LA    R1,4                LENGTH OF RDW                    RPD
         SR    R3,R1               SUBTRACT FROM LRECL              RPD
         LA    R5,4(R5)            REPOSITION PAST RDW              RPD
         LH    R1,RECRDCTR         GET RECORD COUNT FOR THIS SYSOUT RPD
         LA    R1,1(R1)            INCREMENT FOR CURRENT RECORD     RPD
         CH    R1,MAXLINES         CK MAXIMUM ALLOWED FOR A SYSOUT  RPD
         BH    TOOMANYL            MAXIMUM HAS BEEN REACHED         RPD
         STH   R1,RECRDCTR         SAVE NEW RECORD COUNT FOR SYSOUT RPD
         B     CONTDS1             CONTINUE PROCESSING OF LINE      RPD
FWCARCL1 MVI   0(R5),C'1'          SET NEW PAGE ASA CHAR            RPD
FWCARCTL BALR  R8,0                SET CONTINUATION ADDRESS         RPD
         LH    R1,RECRDCTR         GET RECORD COUNT FOR THIS SYSOUT RPD
         LA    R1,1(R1)            INCREMENT FOR CURRENT RECORD     RPD
         CH    R1,MAXLINES         CK MAXIMUM ALLOWED FOR A SYSOUT  RPD
         BH    TOOMANYL            MAXIMUM HAS BEEN REACHED         RPD
         STH   R1,RECRDCTR         SAVE NEW RECORD COUNT FOR SYSOUT RPD
         B     CONTDS1             CONTINUE PROCESSING OF LINE      RPD
TOOMANYL LH    R3,LMTMSGLN         LOAD LENGTH OF LIMIT MESSGE      RPD
         EX    R3,LIMITREC         TELL SYSOUT LIMIT EXCEEDED       RPD
         LA    R7,EOF              SET TO CLOSE THIS SYSOUT/CONTINU RPD
         B     LIBPUT              WRITE MESSAGE AND CLOSE SYSOUT   RPD
         EJECT
*                                                                   SJB
*              IF LRECL < 80 OR COLS 81-132 IS BLANK, THEN          SJB
*              ONLY PUT 1 RECORD TO LIBRARIAN                       SJB
*                                                                   SJB
CONTDS1  C     R3,EIGHTY           IS RECORD LENGTH LESS THAN 80?
         BL    SHORTREC            YES. GO PROCESS AS SUCH
         MVC   0(80,R2),0(R5)      MOVE LINE (80 CHARS) TO LIB IOAREA
CONTDS2  BAL   R7,LIBPUT           RETURN TO PANVALET WITH RECORD
         S     R3,EIGHTY           IS RECORD LENGTH EXACTLY 80 BYTES?
         BNP   READNEXT            YES. GO GET NEXT LINE            SJB
         BCTR  R3,0                FOR EXECUTE
         EX    R3,COMPREC          IS REST OF RECORD BLANK?
         BE    READNEXT            YES. GO GET NEXT LINE
         LA    R5,79(R5)           POINT TO LAST CHAR ALREADY WRITTEN
         MVI   0(R5),X'FE'         INSERT CONTINUATION CHAR
         LA    R3,2(R3)            RESET TO ACTUAL LENGTH OF REMAINDER
SHORTREC BCTR  R3,0                FOR EXECUTE
         EX    R3,MOVEREC          MOVE SHORT OR BALANCE OF LONG RECORD
         LA    R7,READNEXT         BRANCH ADDR FOR NEXT ENTRY
         B     LIBPUT              RETURN TO PANVALET WITH INPUT REC
*                                                                   SJB
         SPACE 3                                                    SJB
COMPREC  CLC   80(*-*,R5),BLANKS2  REMAINDER OF RECORD BLANK?       SJB
MOVEREC  MVC   0(*-*,R2),0(R5)     MOVE REMAINDER TO IOAREA         SJB
LIMITREC MVC   0(*-*,R2),LIMITMSG  MOVE LIMIT MESSAGE TO IOAREA     RPD
         EJECT                                                      SJB
SYNEXIT  SYNADAF ACSMETH=QSAM      INPUT (JES2) DATA SET SYNAD      SJB
         SPACE 1                                                    SJB
         MVI   0(R2),C'-'          INSERT TRIPLE SPACE ASA CC CHAR  SJB
         MVC   1(78,R2),50(R1)     MOVE ERROR MESSAGE TO LIB IOAREA SJB
         SPACE 1                                                    SJB
         SYNADRLS                  RESTORE R13                      SJB
         SPACE 1                                                    SJB
         BAL   R7,LIBPUT           RETURN TO LIBRARIAN WITH ERROR   SJB
         B     EOF                                                  SJB
         EJECT                                                      SJB
*                                                                   SJB
*              ALLOC   DSN FROM JES2                                SJB
*                                                                   SJB
         DS    0F                                                   SJB
S99PARM  DC    X'80',AL3(S99AREA)  ADDRESS OF SVC 99 REQUEST BLOCK  SJB
S99AREA  DC    AL1(S99RBEND-S99RB) LENGTH OF REQUEST BLOCK          SJB
         DC    X'01'               VERB CODE                        SJB
         DC    XL6'00'                                              SJB
         DC    A(ALTUPTR)          POINTER TO LIST OF TEXT UNIT PTRSSJB
         DC    XL8'00'                                              SJB
         SPACE 1                                                    SJB
ALTUPTR  DC    A(ALDSTU)           ADDR OF DSNAME TEXT UNIT         SJB
         DC    A(ALDDTU1)          ADDR OF DDNAME TEXT UNIT         SJB
         DC    A(ALSSTU)           ADDR OF SUBSYSTEM TEXT UNIT      SJB
         DC    X'00',AL3(ALDDTU)   ADDR OF DDNAME TEXT UNIT         SJB
         DC    X'00',AL3(ALDSP1TU) ADDR OF DISP1  TEXT UNIT         SJB
         DC    X'80',AL3(ALDSP2TU) ADDR OF DISP2  TEXT UNIT         SJB
         SPACE 1                                                    SJB
ALDSTU   DC    X'0002'             ALLOCATION BY DSNAME             SJB
         DC    X'0001'             ONE PARAMETER                    SJB
         DC    X'002C'             LENGTH OF PARAMETER              SJB
ALDSN    DC    CL44' '             DSNAME                           SJB
         DS    0H                                                   SJB
ALDDTU1  DC    X'0001'             ALLOCATION BY DDNAME             SJB
         DC    X'0001'             ONE PARAMETER                    SJB
         DC    X'0008'             LENGTH OF DDNAME                 SJB
         DC    CL8'JES2DDNM'       DDNAME FOR ALLOCATION            SJB
ALSSTU   DC    X'005C'             SUBSYSTEM DATA SET ALLOCATION    SJB
         DC    X'0000'             ONE PARAMETER                    SJB
         DC    X'0004'             LENGTH OF PARAMETER              SJB
ALSSN    DC    CL4'JES2'           SUBSYSTEM NAME                   SJB
         DS    0H                                                   SJB
ALDDTU   DC    X'0055'             RETURN WITH DDNAME               SJB
         DC    X'0001'             ONE PARAMETER                    SJB
         DC    X'0008'             LENGTH OF PARAMETER              SJB
ALDDNAM  DC    CL8' '              AREA FOR DDNAME                  SJB
         DS    0H                                                   SJB
ALDSP1TU DC    X'0004'             DISP1                            SJB
         DC    X'0001'             ONE PARAMETER                    SJB
         DC    X'0001'             LENGTH OF PARAMETER              SJB
         DC    X'02'               DISP1=MOD                        SJB
         DS    0H                                                   SJB
ALDSP2TU DC    X'0005'             DISP2                            SJB
         DC    X'0001'             ONE PARAMETER                    SJB
         DC    X'0001'             LENGTH OF PARAMETER              SJB
         DC    X'08'               DISP2=KEEP                       SJB
         EJECT                                                      SJB
*                                                                   SJB
*              UNALLOC DELETE,     RELEASE                          SJB
*                                                                   SJB
TUFRDEL  DC    A(UALDDTU)          ADDR OF UNALLOCATION DDNAME TXT  SJB
         DC    X'00',AL3(UALFRDEL) FREE DELETE                      SJB
         DC    X'80',AL3(UALFRREL) RELEASE FROM HOLD                SJB
*                                                                   SJB
*              UNALLOC KEEP,       RELEASE                          SJB
*                                                                   SJB
TUFRKEPR DC    A(UALDDTU)          ADDR OF UNALLOCATION DDNAME TXT  SJB
         DC    X'00',AL3(UALFRKEP) FREE KEEP                        SJB
         DC    X'80',AL3(UALFRREL) RELEASE FROM HOLD                SJB
*                                                                   SJB
*              UNALLOC KEEP,       HOLD                             SJB
*                                                                   SJB
TUFRKEPH DC    A(UALDDTU)          ADDR OF UNALLOCATION DDNAME TXT  SJB
         DC    X'00',AL3(UALFRKEP) FREE KEEP                        SJB
         DC    X'80',AL3(UALFRHLD) PUT ON HOLD                      SJB
*                                                                   SJB
*              UNALLOC KEEP,       CHANGE CLASS, RELEASE            SJB
*                                                                   SJB
TUFRREQR DC    A(UALDDTU)          ADDR OF UNALLOCATION DDNAME TXT  SJB
         DC    X'00',AL3(UALFRKEP) FREE KEEP                        SJB
         DC    X'00',AL3(UALFRREQ) REQUEUE THE CLASS                SJB
         DC    X'80',AL3(UALFRREL) RELEASE FROM HOLD                SJB
*                                                                   RPD
TUFRREQD DC    A(UALDDTU)          ADDR OF UNALLOCATION DDNAME TXT  RPD
         DC    X'00',AL3(UALFRKEP) FREE KEEP                        RPD
         DC    X'00',AL3(UALFRRQD) REQUEUE THE CLASS TO DUMMY       RPD
         DC    X'80',AL3(UALFRREL) RELEASE FROM HOLD                RPD
*                                                                   RPD
*              UNALLOC KEEP,       CHANGE CLASS, HOLD               SJB
*                                                                   SJB
TUFRREQH DC    A(UALDDTU)          ADDR OF UNALLOCATION DDNAME TXT  SJB
         DC    X'00',AL3(UALFRKEP) FREE KEEP                        SJB
         DC    X'00',AL3(UALFRREQ) REQUEUE THE CLASS                SJB
         DC    X'80',AL3(UALFRHLD) PUT ON HOLD                      SJB
         EJECT                                                      SJB
UALDDTU  DC    X'0001'             UNALLOCATION BY DDNAME           SJB
         DC    X'0001'             ONE PARAMETER                    SJB
         DC    X'0008'             LENGTH OF PARAMETER              SJB
UALDDNAM DC    CL8' '              DDNAME TO BE UNALLOCATED         SJB
         DS    0H                                                   SJB
UALFRDEL DC    X'0005'             OVERIDING DISP2 SPECIFICATION    SJB
         DC    X'0001'             ONE PARAMETER                    SJB
         DC    X'0001'             LENGTH OF PARAMETER              SJB
         DC    X'04'            4= DELETE DATA SET                  SJB
         DS    0H                                                   SJB
UALFRKEP DC    X'0005'             OVERIDING DISP2 SPECIFICATION    SJB
         DC    X'0001'             ONE PARAMETER                    SJB
         DC    X'0001'             LENGTH OF PARAMETER              SJB
         DC    X'08'            8= KEEP   DATA SET                  SJB
         DS    0H                                                   SJB
UALFRREL DC    X'000A'             RELEASE HELD DSN                 SJB
         DC    X'0000'             NO PARAMETER                     SJB
         DS    0H                                                   SJB
UALFRHLD DC    X'0059'             HOLD QUEUE                       SJB
         DC    X'0000'             NO PARAMETER                     SJB
         DS    0H                                                   SJB
UALFRREQ DC    X'0018'             RELEASE HELD DSN                 SJB
         DC    X'0001'             1 PARAMETER                      SJB
         DC    X'0001'             LENGTH                           SJB
         DC    C'&RECLASS'         REQUEUE CLASS                    SJB
         DS    0H                                                   RPD
UALFRRQD DC    X'0018'             RELEASE HELD DSN                 RPD
         DC    X'0001'             1 PARAMETER                      RPD
         DC    X'0001'             LENGTH                           RPD
         DC    C'&DUMMYCLS'        DUMMY REQUE CLASS                RPD
         EJECT                                                      SJB
         SPACE 2                                                    SJB
DSPRCAD  DS    0F                  INITIAL BRANCH-ADDRESS TABLE     SJB
         DC    A(JES2JLOG)         ADDRESS FOR PROCESSING LOG DATA SET
         DC    A(JCLDS)            ADDRESS FOR PROCESSING JCL DATA SET
         DC    A(MSGDS)            ADDRESS FOR PROCESSING MSG DATA SET
         SPACE 2                                                    SJB
EIGHTY   DC    F'80'               OUTPUT RECORD SIZE               SJB
LIBPARM  DC    X'80',AL3(LIBPARM2) PARMS EXPECTED BY LIBRARY        SJB
         CNOP  2,4                                                  SJB
LIBPARM2 DC    AL2(L'LIBPARM3)     PARMS EXPECTED BY LIBRARY        SJB
LIBPARM3 DC    C'NRJS,NJTA'        PARMS EXPECTED BY LIBRARY        SJB
BLANKS2  DC    CL80' '             BLANKS                           SJB
DASHES   DC    CL7'-------'        DASHES OR PRINTED                RPD
RPLYECB  DC    F'0'                                                 RPD
RPLYAREA DC    X'00'                                                RPD
JULIANDY DC    CL3' '              JULIAN DATE                      RPD
JULDTEPK DC    H'0'                PACKED JULIAN DATE               RPD
RECRDCTR DC    H'0'                NON JCL SYSOUT RECORD COUNTER    RPD
MAXLINES DC    H'&SYSOUTMX'        NON JCL MAXIMUM SYSOUT LINES     RPD
LMTMSGLN DC    H'40'               LENGTH OF SYSOUT LIMIT MESSAGE   RPD
         DS    0D                                                   SJB
         LTORG                                                      SJB
PSODS    DC    C'PS0002'           PSO DATA SET IDENTIFIER          RPD
IEF375I  DC    C'IEF375I'          'JOB START' MSG NUMBER
IEF376I  DC    C'IEF376I'          'JOB STOP' MSG NUMBER
IEF287I  DC    C'IEF287I'          'NOT CATALOGUED 2' MSG NUMBER
IEF283I  DC    C'IEF283I'          'NOT DELETED 8' MSG NUMBER
IEF251I  DC    C'IEF251I'          'JOB CANCELLED' MSG NUMBER
IEF45    DC    C'IEF45'            FOR LOCATING JCL ERROR MSGS, ETC
IIP026I  DC    C'+IIP026I'         EMULATOR 'WRITE, DATA CHECK' MSG NO.
REPLY    DC    CL2'R '             START OF OPERATOR REPLY
CANCEL   DC    C'CANCEL'           REQUIRED FOR SCAN (PRINT CRITERION)
ALLDS    DC    X'000102'           INDICATING 3 DATA SETS FOUND FOR JOB
         SPACE 1                                                    RPD
IEF142I  DC    C'IEF142I'          STEP END CONDITION CODE MESSAGE  RPD
SPACEPID DC    C' '                SPACE FOR NON RESTRICT USER ID   RPD
CCCOMMON DC    C' - S'             COMMON CHARACTERS IN CC MESSAGE  RPD
CC0000   DC    C'0000'             CONDITION CODE 0000              RPD
CC0005   DC    C'0005'             CONDITION CODE 0005              RPD
LIMITMSG DC    C' **** LIBSPOOL SYSOUT LIMIT EXCEEDED ****'         RPD
ABNDMES  DC    C'*****  ABENDED  ***** '                            RPD
CNCLMES  DC    C'*** JOB CANCELLED *** '                            RPD
NOTCMES  DC    C'DATA SET NOT CATALOGED'                            RPD
NOTDMES  DC    C' DATA SET NOT DELETED '                            RPD
ENDBYCC  DC    C'JOB ENDED BY COND CODE'                            RPD
JCLERRM  DC    C'***** JCL ERROR ***** '                            RPD
BADCMES  DC    C'CONDITION CODE > 0000 '                            RPD
PRTDMES  DC    C'PRINTED - NOT EXECUTED'                            RPD
PRTCMES  DC    C'PRINTED - PRINT MSGCLS'                            RPD
ENDLMMSG EQU   *
         SPACE 1                                                    SJB
         EJECT                                                      SJB
OPTCARD  DC    CL9'-OPT '          LIBRARIAN OPT CARD KEYWORD       SJB
         DC    C'NOPC,NOPR,NOEXEC'                                  SJB
         DC    (80-(*-OPTCARD))C' '                                 SJB
         SPACE 1                                                    SJB
ADDCARD  DC    CL9'-ADD '          LIBRARIAN ADD CARD KEYWORD       SJB
ADDJOB   DC    C'AJJJNNNN'         LIBNAME (AJJJNNNN)               RPD
         DC    C',NOCHK,UNCON,NOLIST,NORESEQ,SEQ=/81,8,10,10/'      SJB
         DC    (80-(*-ADDCARD))C' '                                 SJB
         SPACE 1                                                    SJB
DLMCARD  DC    CL9'-DLM '          LIBRARIAN ADD CARD KEYWORD       SJB
DLMJOB   DC    C'AJJJNNNN'         LIBNAME (AJJJNNNN)               RPD
         DC    (80-(*-DLMCARD))C' '                                 SJB
         SPACE 1                                                    SJB
SELCARD  DC    CL9'-SEL '          LIBRARIAN SEL CARD KEYWORD       SJB
SELJOB   DC    C'AJJJNNNN'         LIBNAME (AJJJNNNN)               RPD
         DC    C',NOCHK,UNCON,NOLIST,NORESEQ,SEQ=/81,8,10,10/'      SJB
         DC    (80-(*-SELCARD))C' '                                 SJB
         SPACE 1                                                    SJB
PGMCARD  DC    CL9'-PGMR '         LIBRARIAN PGMR CARD              SJB
PGMJOBN  DC    CL08' '             JOBNAME                          SJB
PGMUSER  DC    CL07' '             USERID                           SJB
         DC    (80-(*-PGMCARD))C' '                                 SJB
         SPACE 1                                                    SJB
DSCCARD  DC    CL9'-DESC'          LIBRARIAN DESC CARD              SJB
DSCJOB   DC    C'AJJJNNNN'         LIBNAME (AJJJNNNN)               RPD
DSCDATE  DC    C'YYDDD'            JOB START DATE                   SJB
DSCTON   DC    C'HHMM'             JOB START TIME                   SJB
DSCTOFF  DC    C'HHMM'             JOB STOP  TIME                   SJB
DSCERROR DC    C'PRINTED'          NO ERROR ASSUMED                 SJB
DSCMSGCL DC    C' '                MSGCLASS OF JOB                  RPD
         DC    (80-(*-DSCCARD))C' '                                 SJB
         SPACE 1                                                    SJB
ENDCARD  DC    CL9'-END  '         LIBRARIAN END  CARD              SJB
         DC    (80-(*-ENDCARD))C' '                                 SJB
         SPACE 1                                                    SJB
         EJECT                                                      SJB
TITLE1   DC    CL90' '                                              RPD
         ORG   TITLE1                                               SJB
         DC    CL10'MODULE    '                                     SJB
         DC    CL10'          '                                     SJB
         DC    CL10'          '                                     SJB
         DC    CL10'JOB START '                                     SJB
         DC    CL10'JOB START '                                     SJB
         DC    CL10'JOB STOP  '                                     SJB
         DC    CL10'  JOB     '                                     RPD
         DC    CL10'REROUTED  '                                     SJB
         DC    CL10'LIBRARY   '                                     SJB
         ORG   TITLE1+90                                            RPD
TITLE2   DC    CL90' '                                              RPD
         ORG   TITLE2                                               SJB
         DC    CL10'NAME      '                                     SJB
         DC    CL10'JOBNAME   '                                     SJB
         DC    CL10'USERID    '                                     SJB
         DC    CL10'DATE      '                                     SJB
         DC    CL10'TIME      '                                     SJB
         DC    CL10'TIME      '                                     SJB
         DC    CL10'MSGCLASS  '                                     RPD
         DC    CL10'TO PRINT  '                                     SJB
         DC    CL10'ERROR     '                                     SJB
         ORG   TITLE2+90                                            RPD
         EJECT                                                      SJB
INDCB    DCB   DDNAME=DUMMY,DSORG=PS,MACRF=GL,                      SJB*
               EODAD=EOF,EROPT=ACC,SYNAD=SYNEXIT                    SJB
         DS    0F                                                   SJB
INDCBL   EQU   *-INDCB                                              SJB
         EJECT                                                      SJB
OUTDCB   DCB   DDNAME=SYSIN,DSORG=PS,MACRF=PM,                      SJB*
               RECFM=FB,LRECL=80,BLKSIZE=6160                       SJB
         DS    0F                                                   SJB
OUTDCBL  EQU   *-OUTDCB                                             SJB
         EJECT                                                      SJB
OPEN     OPEN  (0),MF=L                                             SJB
CLOSE    CLOSE (0),MF=L                                             SJB
         SPACE 3                                                    SJB
EOSNAP   EQU   *                   END OF STORAGE AREA TO BE SNAPPEDSJB
DNAME    DS    CL8                 NAME LEFT JUSTIFIED              SJB
         DROP  R11,R12,R6                                           SJB
         EJECT                                                      SJB
SSREQ    CSECT                                                      SJB
         CONNECT LWORK3,WORK3,BASE=R12,CLEAR=YES,PARM=R11           SJB
         USING WORK1,R11           USE MAIN TASK WORK AREA          SJB
         USING SSOB,R10            GET ADDR. TO 1 SAVEAREA          SJB
         LIBWTO 'ENTERED SSREQ'                                     SJB
         LA    R10,LWASSOB         GET ADDRESS OF IEFSSREQ PARM     SJB
*                                                                   SJB
*              THE $FIRST FLAG MUST BE TURNED ON EACH TIME A NEW    SJB
*              JOB IS TO BE SELECTED                                SJB
*                                                                   SJB
         TM    FLAG,$FIRST         IS THIS THE 1ST REQUEST          SJB
         BNO   SSREQ1              NOPE                             SJB
         NI    FLAG,255-$FIRST     TURN OFF FIRST FLAG              SJB
*                                                                   SJB
         MVC   DSFLAGS,=3X'FF'     INITILIZE DSFLAGS                SJB
*                                                                   SJB
         XC    LWASSOB,LWASSOB     CLEAR IT OUT                     SJB
         ST    R10,LWASSPRM        SET SSOB ADDR                    SJB
         MVI   LWASSPRM,X'80'      INDICATE LAST PARM               SJB
*                                                                   SJB
*              INITILIZE SSOB REQUEST BLOCK                         SJB
*                                                                   SJB
         MVC   SSOBID,=CL4'SSOB'   SSOB ID                          SJB
         LA    R1,SSOBHSIZ                                          SJB
         STH   R1,SSOBLEN          STORE IN LENGTH                  SJB
         LA    R1,SSOBSOUT                                          SJB
         STH   R1,SSOBFUNC         STORE IN FUNCTION                SJB
         L     R1,LWASSIB@         GET SSIB ADDR                    SJB
         ST    R1,SSOBSSIB         STORE IN SSIB ADDR               SJB
         LA    R1,0                                                 SJB
         ST    R1,SSOBRETN         STORE IN RETN CODE               SJB
         LA    R1,SSSOBGN                                           SJB
         ST    R1,SSOBINDV         STORE IN INDV ADDR               SJB
*                                                                   SJB
*              INITILIZE SSSO REQUEST BLOCK                         SJB
*                                                                   SJB
         LA    R1,SSSOSIZE+SSSOXSIZ                                 SJB
         STH   R1,SSSOLEN          STORE IN SSSO LENGTH             SJB
*                                                                   SJB
*SSSODSID+....                                                      SJB
*         +8 IS PROGRAMMER NAME                                     SJB
*         +8+20 IS ACCOUNTING FIELDS                                SJB
*         +8+20+37 IS USERID                                        SJB
*                                                                   SJB
SSSOPGMR EQU   SSSODSID+8,20       PROGRAMMER NAME                  SJB
SSSOACCT EQU   SSSODSID+8+20,37    ACCOUNTING FIELDS                SJB
SSSOUSER EQU   SSSODSID+8+20+37,7  USERID                           SJB
SSSOXSIZ EQU   SSSOUSER+7-SSSOPGMR LENGTH OF EXTRA POOP             SJB
*                                                                   SJB
         MVI   SSSOFLG1,SSSOSCLS   SELECT BY CLASS                  SJB
         OI    SSSOFLG1,SSSODST    SELECT BY DEST                   SJB
         OI    SSSOFLG1,SSSOHLD    SELECT BY HELD DSNS TOO          SJB
*                                                                   SJB
         NI    SSSOFLG2,255-SSSOCTRL SUBSYSTEM TO RETURN A DATASET  SJB
*                                                                   SJB
         MVC   SSSODEST,=CL8'LOCAL'                                 SJB
PSOCLASS L     R1,CURMCLAD         LOAD ADDR. OF MSGCLASS TO GET    RPD
         MVC   SSSOCLSL(1),0(R1)   MOVE IN THIS CLASS               RPD
         MVI   SSSODSN,X'00'       INDICATE INITIAL ENTRY FOR IEFSSREQ
         B     SSREQ2                                               SJB
         EJECT                                                      SJB
SSREQ1   DS    0H                                                   SJB
*                                                                   SJB
*              IF THIS IS NOT THE FIRST TIME THROUGH THEN           SJB
*              TURN ON THE SELECT BY JOBID SO WE WILL GET ONLY      SJB
*              SYSOUT FOR THE JOB THAT HAS BEEN SELECTED BY THE     SJB
*              FIRST CALL. THIS INSURES THAT WE GET NOBODY ELSE     SJB
*              UNTIL WE ARE THROUGH WITH THIS JOBIDS SYSOUT         SJB
*                                                                   SJB
         OI    SSSOFLG1,SSSOSJBI   SELECT BY JOB ID (JOB#)          SJB
SSREQ2   DS    0H                                                   SJB
         MVI   SSSORESV,X'01'      TELL JES2 TO FILL IN EXTRA POOP  SJB
         SPACE 1                                                    SJB
         MODESET MODE=SUP,KEY=ZERO GET INTO SUPERVISOR STATE        SJB
         SPACE 1                                                    SJB
         LA    R1,LWASSPRM         LOAD ADDRESS OF SSOB             SJB
         SPACE 1                                                    SJB
         IEFSSREQ                  ISSUE SUBSYSTEM REQUEST          SJB
         SPACE 1                                                    SJB
         STH   R15,RETCODE         SAVE IEFSSREQ RETURN CODE        SJB
         MVC   LWASSIB@,SSOBSSIB                                    SJB
         SPACE 3                                                    SJB
         MODESET MODE=PROB,KEY=NZERO GET OUT OF SUPERVISOR STATE    SJB
         SPACE 3                                                    SJB
         LH    R15,RETCODE                                          SJB
         RELEASE LWORK3,RC=(R15)                                    SJB
         LTORG                                                      SJB
         EJECT                                                      SJB
WORK1    DSECT                                                      SJB
SAVE1    DS    9D                                                   SJB
LWASSPRM DS    A                   PARM FIELD FOR SSOB              SJB
LWASSOB  DS    CL(SSOBLEN1+SSSOXSIZ)                                SJB
         DS    0F                  EXTRA                            SJB
RDRSTIME DS    XL8                 RDR START TIME/DATE OF JOB       SJB
LWAOPEN  DS    F                                                    SJB
LWACLOSE DS    F                                                    SJB
LWASSIB@ DS    A                                                    SJB
LWAUALTU DS    A                                                    SJB
LWADCBIN DS    CL(INDCBL)                                           SJB
LWADCBOT DS    CL(OUTDCBL)                                          SJB
LWADCBRP DS    CL(RPTDCBL)                                          SJB
DSFLAGS  DC    X'000102'           0=LOG, 1=JCL, 2=MSG DS PROCESSED SJB
FLAG     DS    X                   MULTI-PURPOSE FLAG BYTE          SJB
$FIRST   EQU   X'80'               SET WHEN NEW JOB IS NEEDED       SJB
$PRINT   EQU   X'40'               TO INDICATE JOB IS TO BE PRINTED SJB
$CLOSING EQU   X'20'               TO INDICATE CLOSING OUT OF JOB   SJB
FLAG2    DS    X                   MULTI-PURPOSE FLAG BYTE          SJB
$TITLE   EQU   X'80'               INDICATE TITLE LINE TO PUT OUT   SJB
$DEBUG   EQU   X'40'               TO INDICATE DEBUGGING            SJB
FLAG3    DS    X                   FIRST OR NEXT SYSOUTS OF A JOB   RPD
$FRSTPSO EQU   X'80'               INDICATE FIRST SYSOUT FOR JOB    RPD
FLAG4    DS    X                   REASON FOR PRINTING FLAG         RPD
$ABEND   EQU   X'80'               ABEND FOUND                      RPD
$ENDEDCC EQU   X'40'               ENDED BY CONDITION CODE FOUND    RPD
$JCLERR  EQU   X'20'               JCL ERROR FOUND                  RPD
$CANCEL  EQU   X'10'               CANCEL FOUND                     RPD
$NOTCAT  EQU   X'08'               NOT CATALOGUED FOUND             RPD
$NOTDEL  EQU   X'04'               NOT DELETED FOUND                RPD
$BADCC   EQU   X'02'               BAD CONDITION CODE FOUND         RPD
$PRTMSGC EQU   X'01'               ALWAYS PRINT MSGCLASS ON JOB     RPD
FLAG5    DS    X                   REASON FOR PRINTING FLAG         RPD
$FNDCCMS EQU   X'80'               FOUND CONDITION CODE MESSAGE     RPD
SNAPID   DS    X                                                    SJB
RETCODE  DS    H                   RETURN CODE                      SJB
DSTYPE   DS    X                   DATA SET TYPE FLAG (LOG,JCL,MSG) SJB
CARDOUT  DS    CL80                                                 SJB
PARMCARD DS    CL80                                                 SJB
CURMCLAD DS    F                PTR TO CURRENT MSGCLASS             RPD
LWORK1   EQU   *-WORK1                                              SJB
*                                                                   SJB
WORK2    DSECT                                                      SJB
SAVE2    DS    9D                                                   SJB
LWORK2   EQU   *-WORK2                                              SJB
         SPACE 3                                                    SJB
WORK3    DSECT                                                      SJB
SAVE3    DS    9D                                                   SJB
LWORK3   EQU   *-WORK3                                              SJB
         SPACE 3                                                    SJB
DIRECTRY DSECT                     LIB DIRECTORY ENTRY DSECT        SJB
DPASS    DS    CL4                 PASSWORD                         SJB
DADATE   DS    CL6                 ADDED DATE       MMDDYY          SJB
DUDATE   DS    CL6                 LAST UPDATE DATE MMDDYY          SJB
DCARDS   DS    PL3                 NUMBER OF CARDS                  SJB
DPGMR    DS    CL15                PROGRAMMER NAME                  SJB
DPROC    DS    CL8                 FIRST 8 BYTES OF PROC PARAMETER  SJB
DDESC    DS    CL30                MODULE DESCRIPTION               SJB
DCSEQ    DS    BL1                 STARTING COLUMN FOR SEQ          SJB
DLSEQ    DS    BL2                 LENGTH OF SEQ                    SJB
DISEQ    DS    BL2                 INCREMENT VALUE FOR SEQ          SJB
DSSEQ    DS    BL2                 STARTING VALUE FOR SEQ           SJB
DANUM    DS    BL2                 ACCESS NUMBER                    SJB
DUNUM    DS    BL2                 UPDATE NUMBER                    SJB
DENUM    DS    BL1                 EXTENT NUMBER                    SJB
DBNUM    DS    BL1                 BLOCKS NUMBER                    SJB
DLDATE   DS    CL6                 LAST ACCESS DATE   MMDDYY        SJB
DFILL    DS    CL6                                                  SJB
         EJECT                                                      SJB
COMMADDR DSECT                     POINTED TO BY COMMLPTR           SJB
COMMECB  DS    A                   POINTER TO COMMAND ECB           SJB
COMMCIB  DS    A                   POINTER TO COMMAND INPUT BUFFER  SJB
         SPACE 3                                                    SJB
         CVT   DSECT=YES           CVT MAPPING                      SJB
         EJECT                                                      SJB
         IEFJESCT                  JES COMMUNICATION TABLE DSECT    SJB
         EJECT                                                      SJB
         IEFJSSOB (SO)             SSOB DSECT WITH PSO FUNCTION     SJB
         EJECT                                                      SJB
         IEFZB4D0                  SVC 99 REQUEST BLOCK DSECT       SJB
         EJECT                                                      SJB
         DCBD  DSORG=PS,DEVD=DA    DCB DSECT                        SJB
         SPACE 3                                                    SJB
         END   ,                                                    SJB
