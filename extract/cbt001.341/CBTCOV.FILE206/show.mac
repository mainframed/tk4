CONSOLE  TITLE 'TSO COMMAND PROCESSOR: OPERATOR CONSOLE MONITOR'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
SHOW     CSECT                         INITIALIZATION                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
         SAVE  (14,12),,SHOW_&SYSDATE_&SYSTIME
         LR    R11,R15                 BASE REGISTER 1
         USING SHOW,R11
         LA    R12,4080(R11)           BASE REGISTER 2
         USING SHOW+4080,R12
         LR    R9,R1                   CPPL
         ST    R13,SAVEAREA+4          SAVEAREA BACKWARD CHAIN
         LA    R15,SAVEAREA
         ST    R15,8(R13)              SAVEAREA FORWARD CHAIN
         LR    R13,R15
         TM    0(R9),X'80'             Q. INVOKED AS COMMAND PROCESSOR
         BO    CPERROR                 ...NO
         L     R1,CPPLPSCB-CPPL(R9)    PSCB
         TM    X'10'(R1),X'80'         Q. OPER AUTHORIZED (PSCBATR1)
         BZ    INIT110                 ...NO
         OI    AUTH,X'80'              AUTHORIZED FOR COMMAND ENTRY
         CLC   0(3,R1),=C'TEC'         Q. TEC USERID
         BNE   INIT110                 ...NO
         OI    AUTH,X'40'              ALL COMMANDS AUTHORIZED
         B     INIT110                 CONTINUE
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
INIT110  DS    0H
         GTSIZE
         ST    R0,MAXLINES             MAXIMUM TERMINAL LINES (3270)
         STH   R1,TERMLINE             TERMINAL LINE SIZE
         L     R1,CPPLCBUF-CPPL(R9)    TSO COMMAND BUFFER
         LH    R2,2(R1)                DATA START = DATA POSITION
         BCTR  R2,0                        ADJUSTED RELATIVE
         LA    R2,0(R2,R1)                     + BUFFER START
         LH    R3,0(R1)                BUFFER END = BUFFER LENGTH
         LA    R3,0(R3,R1)                 + BUFFER START
         LR    R5,R3                   DATA END
         SR    R3,R2                   DATA LENGTH = DATA END - START
         CH    R3,=H'4'                Q. MINIMUM DATA ENTERED
         BL    INIT114                 ...NO
         LA    R4,1                    INDEX
         S     R5,=F'4'                DATA END = END - KEYWORD LENGTH
INIT112  DS    0H
         CLC   =C'line',0(R2)          Q. LINE MODE KEYWORD SPECIFIED
         BE    INIT114                 ...YES
         CLC   =C'LINE',0(R2)
         BE    INIT114                 ...YES
         BXLE  R2,R4,INIT112           CONTINUE
         B     INIT116                 DEFAULT TERMINAL MODE
INIT114  DS    0H
         XC    MAXLINES,MAXLINES       LINE MODE
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
INIT116  DS    0H
         CALL  CLRSCRN
         STFSMODE ON,INITIAL=YES
         STM   R0,R15,EXITSAVE         EXIT SAVEAREA
         ESTAE PARAM=EXITSAVE,MF=(E,ESATEL)
         L     R2,X'10'                CVT (FLCCVT)
         L     R2,X'64'(R2)            UCM BASE (CVTCUCB)
         MVC   COMMTASK,X'FA'(R2)      COMMUNICATIONS TASK ASID
         MVC   UCMSTACK(3*4),X'48'(R2) UCM ENTRIES: FIRST, LENGTH, LAST
         LA    R3,0(R2)                VALIDATE
         SL    R3,=F'4'                    - 4
         L     R3,0(R3)                UCM PREFIX (UCMPRFXP)
         L     R5,0(R3)                MASTER CONSOLE UCME (UCMMCENT)
         L     R6,X'1C'(R5)            RDCM (UCBXB)
         LTR   R6,R6                   Q. DISPLAY DEVICE
         BZ    INIT119                 ...NO
         ST    R5,MASTUCME
         ST    R5,CURRUCME             CURRENT CONSOLE UCM ENTRY
         MVC   CONSOLE+3(1),X'1A'(R5)  CONSOLE ID (UCMID)
         B     INIT120                 CONTINUE
INIT119  DS    0H
         LA    R1,MCERRMSG             MESSAGE
         LA    R0,L'MCERRMSG           MESSAGE LENGTH
         TPUT  (1),(0)
         B     CMD190                  FIND CONSOLE
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
INIT120  DS    0H
         STAX  DEFER=YES
         LA    R0,1                    APF AUTHORIZATION ON
         SVC   242                     ISSUE AUTHORIZATION SVC
         LA    R1,MODE1                KEY ZERO
         MODESET MF=(E,(1))
         L     R5,CURRUCME             CURRENT CONSOLE UCM ENTRY
         TM    X'19'(R5),X'10'         Q. ACTIVE CONSOLE (UCMUF)
         BZ    GCERROR                 ...NO
         TM    X'19'(R5),X'04'         Q. CHANGING STATUS (UCMAT04)
         BNZ   GCERROR                 ...YES
         L     R6,X'1C'(R5)            RDCM (UCBXB)
         LTR   R6,R6                   Q. DISPLAY DEVICE
         BZ    GCERROR                 ...NO
         L     R7,0(R6)                TDCM (DCMADTRN)
         LTR   R7,R7                   Q. DISPLAY DEVICE
         BZ    GCERROR                 ...NO
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
         CLC   COMMTASK,=H'1'          Q. COMMTASK IN MASTER SCHEDULER
         BE    INIT124                 ...YES, TDCM MUST BE IN CSA
         LA    R2,1
         AXSET AX=(R2)                 PCAUTH AX = 1
         LTR   R15,R15                 Q. AX FUNCTION SUCCESSFUL
         BNZ   AXERROR                 ...NO
         LH    R2,COMMTASK             COMMTASK ASID
         SSAR  R2                      COMMTASK SECONDARY ASID
         LA    R3,AXTDCM               ALTERNATE TDCM
         LA    R1,L'AXTDCM             ALTERNATE TCMD LENGTH
INIT122  DS    0H
         MVCP  0(R1,R3),0(R7),R2
         BZ    INIT123                 ...COMPLETE
         LA    R7,255(R7)              INCREMENT SENDING ADDRESS
         LA    R3,255(R3)              INCREMENT RECIEVING ADDRESS
         SH    R1,=H'255'              DECREMENT LENGTH
         B     INIT122                 CONTINUE
INIT123  DS    0H
         EPAR  R2                      PRIMARY ASID
         SSAR  R2                      SECONDARY ASID
         LA    R7,AXTDCM               ALTERNATE TDCM
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
INIT124  DS    0H
         OC    MASTUCME,MASTUCME       Q. MASTER CONSOLE AVAILABLE
         BNZ   INIT126                 ...YES
         MVC   CONSOLE+3(1),X'1A'(R5)  CONSOLE ID (UCMID)
INIT126  DS    0H
         L     R1,X'0C'(R5)            UCB ADDRESS (UCMUCB)
         MVC   DEVICE,X'0D'(R1)        UCBNAME
         MVC   COPTIONS,X'10A'(R7)     CONSOLE OPTIONS
         SR    R1,R1                   CLEAR
         IC    R1,X'1A'(R5)            CONSOLE ID (UCMID)
         CVD   R1,WORK
         MVC   EDIT(L'EDITID),EDITID
         ED    EDIT(L'EDITID),WORK+6
         MVC   INFOID,EDIT+1
         MVC   INFOUCB,DEVICE
         MVC   INFOCON,CCON
         MVC   INFODEL,CDEL
         IC    R1,CSEG
         CVD   R1,WORK
         MVC   EDIT(L'EDITSEG),EDITSEG
         ED    EDIT(L'EDITSEG),WORK+6
         MVC   INFOSEG,EDIT+2
         IC    R1,CRNUM
         CVD   R1,WORK
         MVC   EDIT(L'EDITRNUM),EDITRNUM
         ED    EDIT(L'EDITRNUM),WORK+6
         MVC   INFORNUM,EDIT+2
         LH    R1,CRTME
         CVD   R1,WORK
         MVC   EDIT(L'EDITRTME),EDITRTME
         ED    EDIT(L'EDITRTME),WORK+6
         MVC   INFORTME,EDIT+2
         MVC   LLINE,X'F0'(R7)         LINE LENGTH (DCMLGNTH)
         MVC   LDATA,X'FC'(R7)         MAXIMUM DATA LENGTH (DCMAXLGN)
         MVC   LINEINDX,X'104'(R7)     DCM LINE LENGTH (DCMCORLN)
         LH    R2,LINEINDX             3270 CONTROL LENGTH = LINE LEN
         SH    R2,LLINE                    - DISPLAY LINE LENGTH
         STH   R2,LCNTL
         LH    R2,LINEINDX             LINE PREFIX LENGTH = LINE LEN
         SH    R2,LDATA                    - MAXIMUM DATA LENGTH
         STH   R2,LPREFIX
         LH    R0,LCNTL                LINE 3270 CONTROL LENGTH
         L     R1,X'30'(R7)            SCREEN IMAGE BUFFER (DCMASCRN)
         SLR   R1,R0                       - 3270 CONTROL LENGTH
         ST    R1,@BUFFER              BUFFER ADDRESS
         L     R2,X'38'(R7)            SCREEN LENGTH POINTER (DCMWTBUF)
         SLR   R2,R1                   BUFFER LENGTH = END - START
         SLR   R2,R0                       - 3270 CONTROL LENGTH
         ST    R2,@LBUFFER
         SRDL  R2,32                   SHIFT FOR DIVIDE
         LH    R1,LINEINDX             DCM LINE LENGTH
         DR    R2,R1                   LINE COUNT = LENGTH / LINE LEN
         ST    R3,DCMLINES
         STM   R0,R15,EXITSAVE         ATTENTION SAVEAREA
         OC    MAXLINES,MAXLINES       Q. 3270 DEVICE
         BZ    DISP100                 ...NO
         L     R2,MAXLINES             INFO AREA = TERMINAL LINES
         SH    R2,=H'4'                    - INFO AREA LINES
         MH    R2,TERMLINE                     * LINE SIZE
         SRDL  R2,32                   SHIFT
         D     R2,=F'64'               MODULO 64
         N     R3,=X'0000003F'         INSURANCE?
         STC   R2,INFOCLR+1            SCREEN OFFSET MODULO 64 COLUMN
         STC   R3,INFOCLR              SCREEN OFFSET MODULO 64 ROW
         TR    INFOCLR,SCRPOS          TRANSLATE TO 3270 ADDRESS
         L     R0,MAXLINES             MAXIMUM TERMINAL LINES
         C     R0,DCMLINES             Q. TERMINAL LINES > DCM LINES
         BH    INIT128                 ...YES
         S     R0,=F'3'                DCM LINES = TERMINAL LINES - 3
         ST    R0,DCMLINES
         MH    R0,LINEINDX             BUFFER LENGTH = LINES * LENGTH
         ST    R0,@LBUFFER
INIT128  DS    0H
         CH    R1,TERMLINE             Q. LINE SIZE > TEMINAL LINE SIZE
         BH    DISP100                 ...YES
         XC    MAXLINES,MAXLINES       LINE MODE
         B     DISP100                 CONTINUE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
DISP100  DS    0H                      CONSOLE DISPLAY ROUTINE        *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
         STAX  DEFER=YES
         LA    R0,1                    APF AUTHORIZATION ON
         SVC   242                     ISSUE AUTHORIZATION SVC
         CLI   ATTN,X'FF'              Q. ATTENTION ENTERED
         BE    CMD100                  ...YES
         LA    R1,MODE1                KEY ZERO
         MODESET MF=(E,(1))
         CLC   COMMTASK,=H'1'          Q. COMMTASK IN MASTER SCHEDULER
         BE    DISP104                 ...YES, BUFFER MUST BE IN CSA
         LA    R2,1
         LH    R5,COMMTASK             COMMTASK ASID
         SSAR  R5                      COMMTASK SECONDARY ASID
         L     R2,@BUFFER              SCREEN IMAGE BUFFER
         L     R3,@LBUFFER             BUFFER LENGTH
         LA    R4,BUFFER               BUFFER
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
DISP102  DS    0H
         MVCP  0(R3,R4),0(R2),R5       SCREEN IMAGE BUFFER
         BZ    DISP103                 ...COMPLETE
         LA    R2,255(R2)              INCREMENT SENDING ADDRESS
         LA    R4,255(R4)              INCREMENT RECIEVING ADDRESS
         SH    R3,=H'255'              DECREMENT LENGTH
         B     DISP102                 CONTINUE
DISP103  DS    0H
         EPAR  R2                      PRIMARY ASID
         SSAR  R2                      SECONDARY ASID
         B     DISP106                 CONTINUE
DISP104  DS    0H
         L     R2,@BUFFER              SCREEN IMAGE BUFFER
         L     R3,@LBUFFER             BUFFER LENGTH
         LA    R4,BUFFER               BUFFER
         LR    R5,R3
         MVCL  R4,R2                   SCREEN IMAGE BUFFER
DISP106  DS    0H
         LA    R1,MODE2                USER KEY
         MODESET MF=(E,(1))
         STAX  ATTNEXIT,USADDR=EXITSAVE
         STAX  DEFER=NO
         LTR   R15,R15                 Q. STAX SUCCESSFUL
         BNZ   EXIT                    ...NO
         OC    MAXLINES,MAXLINES       Q. LINE MODE
         BZ    DISP110                 ...YES
         CLI   AUTO,X'FF'              Q. AUTOMATIC REFRESH MODE
         BNE   DISP200                 ...NO
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
DISP110  DS    0H                      BUFFER ANALYSIS                *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
         LA    R8,1                    INITIAL DISPLAY LINE COUNT
         LA    R4,BUFFER               BUFFER AREA
         XR    R5,R5                   CLEAR
         LH    R5,LINEINDX             DCM LINE LENGTH
         L     R6,@LBUFFER             SCREEN IMAGE BUFFER LENGTH
         LA    R6,0(R6,R4)             END OF BUFFER
         SLR   R6,R5                   LAST LINE IN BUFFER
         LR    R10,R5                  TPUT LENGTH = LINE LENGTH
         SL    R10,=F'5'                   - CNTL HEADER LENGTH
         LR    R3,R5                   COMPARE EXEC LEN = LINE LENGTH
         SL    R3,=F'11'                   - CNTL, SCT FLAGS, ADJUSTED
         C     R3,=A(L'LAST1)          Q. COMPARE LENGTH < FIELD LENGTH
         BL    DISP112                 ...YES
         LA    R3,L'LAST1-1            LIMIT TO FIELD LENGTH ADJUSTED
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
DISP112  DS    0H
         LR    R1,R6                   BUFFER LINE
         EX    R3,CLCLAST1             Q. LAST LINE DISPLAYED
         BNE   DISP116                 ...NO
         CR    R1,R4                   Q. AT TOP OF BUFFER
         BNH   DISP114                 ...YES
         SLR   R1,R5                   PREVIOUS LINE = LINE - LINE LEN
         EX    R3,CLCLAST2             Q. LAST LINE DISPLAYED
         BNE   DISP116                 ...NO
         CR    R1,R4                   Q. AT TOP OF BUFFER
         BNH   DISP114                 ...YES
         SLR   R1,R5                   PREVIOUS LINE = LINE - LINE LEN
         EX    R3,CLCLAST3             Q. LAST LINE DISPLAYED
         BNE   DISP116                 ...NO
         CR    R1,R4                   Q. AT TOP OF BUFFER
         BNH   DISP114                 ...YES
         SLR   R1,R5                   PREVIOUS LINE = LINE - LINE LEN
         EX    R3,CLCLAST4             Q. LAST LINE DISPLAYED
         BNE   DISP116                 ...NO
DISP114  DS    0H
         LA    R4,0(R5,R6)             NEXT BUFFER LINE
         BCT   R8,DISP200              DISPLAY REMAINING BUFFER LINES
         STIMER WAIT,BINTVL=WAITTIME   WAIT
         B     DISP100                 CONTINUE
DISP116  DS    0H
         LA    R8,1(R8)                LINE COUNT = LINE COUNT + 1
         SLR   R6,R5                   PREVIOUS LINE = LINE - LINE LEN
         CR    R6,R4                   Q. AT TOP OF BUFFER
         BH    DISP112                 ...NO
         L     R8,DCMLINES             DCM LINE COUNT
         B     DISP200                 DISPLAY ENTIRE BUFFER
         SPACE 1
CLCLAST1 CLC   LAST1(*-*),10(R1)
CLCLAST2 CLC   LAST2(*-*),10(R1)
CLCLAST3 CLC   LAST3(*-*),10(R1)
CLCLAST4 CLC   LAST4(*-*),10(R1)
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
DISP200  DS    0H                      TERMINAL DISPLAY ROUTINE       *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
         OC    MAXLINES,MAXLINES       Q. 3270 MODE
         BZ    DISP210                 ...NO
         TIME  DEC
         ST    R0,WORK
         MVC   EDIT(L'EDITTIME),EDITTIME
         ED    EDIT(L'EDITTIME),WORK
         MVC   INFOTIME,EDIT+1
         L     R2,MAXLINES             INFO AREA = TERMINAL LINES
         SH    R2,=H'4'                    - INFO AREA LINES
         C     R2,DCMLINES             Q. ROOM FOR INFO AREA
         BH    DISP202                 ...YES
         MH    R2,LINEINDX             BUFFER END = LAST LINE * LENGTH
         AL    R2,=A(BUFFER)               + BUFFER AREA
         L     R3,LHDRINFO             INFO HEADER LENGTH
         LA    R4,INFOHDR              INFO HEADER
         B     DISP204                 CONTINUE
DISP202  DS    0H
         LA    R2,BUFFER               END OF BUFFER = BUFFER AREA
         AL    R2,@LBUFFER                 + BUFFER LENGTH
         L     R3,LSCRINFO             INFO AREA LENGTH
         LA    R4,INFOAREA             INFO AREA
DISP204  DS    0H
         LR    R5,R3
         MVCL  R2,R4                   CLEAR FILL AREA
         LA    R2,L'FSBUFFER           TPUT LENGTH = WCC LENGTH
         AL    R2,@LBUFFER                 + BUFFER LENGTH
         AL    R2,LSCRINFO                     + INFO AREA LENGTH
         TPUT  FSBUFFER,(R2),FULLSCR
         C     R15,=A(12)              Q. TPUT SUCCESSFUL
         BNL   TPERROR                 ...NO
         MVC   CMDATTR,=AL1(HIUNPROT)
         XC    INPUT(L'CMD),INPUT      CLEAR
         LH    R5,LINEINDX             DCM LINE LENGTH
         LA    R1,BUFFER               LAST LINE = BUFFER AREA
         AL    R1,@LBUFFER                 + BUFFER LENGTH
         SLR   R1,R5                           - LINE LENGTH
         MVC   LAST1,10(R1)
         SLR   R1,R5                   PREVIOUS LINE = LINE - LINE LEN
         MVC   LAST2,10(R1)
         SLR   R1,R5                   PREVIOUS LINE = LINE - LINE LEN
         MVC   LAST3,10(R1)
         SLR   R1,R5                   PREVIOUS LINE = LINE - LINE LEN
         MVC   LAST4,10(R1)
         CLI   AUTO,X'FF'              Q. AUTOMATIC REFRESH MODE
         BNE   CMD110                  ...NO
         B     DISP290                 CONTINUE
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
DISP210  DS    0H                      LINE MODE DISPLAY              *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
         LA    R9,5(R4)                TEXT
         EX    R10,CLCSPACE            Q. LINE ALL SPACES
         BE    DISP212                 ...YES
         TPUT  (9),(10)
         C     R15,=A(12)              Q. TPUT SUCCESSFUL
         BNL   TPERROR                 ...NO
         LR    R1,R4                   LAST LINE DISPLAYED
         MVC   LAST1,10(R1)
         SLR   R1,R5                   PREVIOUS LINE = LINE - LINE LEN
         MVC   LAST2,10(R1)
         SLR   R1,R5                   PREVIOUS LINE = LINE - LINE LEN
         MVC   LAST3,10(R1)
         SLR   R1,R5                   PREVIOUS LINE = LINE - LINE LEN
         MVC   LAST4,10(R1)
DISP212  DS    0H
         ALR   R4,R5                   NEXT LINE = LINE + LINE LENGTH
         BCT   R8,DISP210
         SPACE 1
DISP290  DS    0H                      CONSOLE DISPLAY EXIT           *
         STIMER WAIT,BINTVL==A(200)    WAIT 2 SECONDS
         B     DISP100                 CONTINUE
         SPACE 1
CLCSPACE CLC   0(*-*,R9),SPACES
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
CMD100   DS    0H                      COMMAND PROCESSING ROUTINE     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
         MVI   ATTN,X'00'              RESET ATTENTION INDICATOR
         STFSMODE ON,INITIAL=YES
         CALL  CLRSCRN
CMD102   DS    0H
         TPUT  PROMPT,L'PROMPT
         C     R15,=A(12)              Q. TPUT SUCCESSFUL
         BNL   TPERROR                 ...NO
         OC    MAXLINES,MAXLINES       Q. 3270 DEVICE
         BNZ   CMD110                  ...YES
         TGET  CMD,L'CMD
         C     R15,=A(12)              Q. TGET SUCCESSFULL
         BNL   TGERROR                 ...NO
         C     R15,=A(8)               Q. ATTENTION
         BE    CMD100                  ...YES
         LA    R2,4(R1)                INPUT LENGTH + 4
         STH   R2,COMMAND              RDW LENGTH
         MVC   CMDCHECK,CMD
         OC    CMDCHECK,SPACES         UPPER CASE INPUT TEXT
         CALL  CLRSCRN
         B     CMD120                  CONTINUE
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
CMD110   DS    0H                      3270 COMMAND INPUT             *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
         XC    LAST1,LAST1             CLEAR
         TGET  CMD,256,ASIS,WAIT       INPUT
         C     R15,=A(12)              Q. TGET SUCCESSFULL
         BNL   TGERROR                 ...NO
         C     R15,=A(8)               Q. ATTENTION
         BE    CMD100                  ...YES
         CLI   ATTN,X'FF'              Q. ATTENTION ENTERED
         BE    CMD100                  ...YES
         SL    R1,=F'6'                INPUT LENGTH - 3270 CONTROL
         LA    R2,4(R1)                INPUT LENGTH + 4
         STH   R2,COMMAND              RDW LENGTH
         MVC   KEY,CMD                 TERMINAL KEY ENTERED
         MVC   CMD(L'CMD-6),CMD+6      INPUT TEXT
         XC    CMD+L'CMD-6(6),CMD+L'CMD-6
         MVC   CMDCHECK,CMD
         OC    CMDCHECK,SPACES         UPPER CASE INPUT TEXT
         CLI   KEY,NULLKEY             Q. ANYTHING ENTERED
         BE    CMD900                  ...NO
         CLI   KEY,ENTERKEY            Q. ENTER KEY
         BE    CMD120                  ...YES
         CLI   KEY,CLEARKEY            Q. CLEAR KEY
         BE    CMD900                  ...YES
         CLI   KEY,PA1KEY              Q. PA1 KEY
         BE    CMD900                  ...YES
         CLI   KEY,PA2KEY              Q. PA2 KEY
         BE    CMD900                  ...YES
         CLI   KEY,PA3KEY              Q. PA3 KEY
         BE    CMD900                  ...YES
         NI    KEY,X'0F'               EXTRACT PFKEY (13-24 = 1-12)
         XR    R2,R2                   CLEAR
         IC    R2,KEY                  PFKEY
         BCTR  R2,0                    ADJUST RELATIVE
         MH    R2,=AL2(L'PFENTRY)          * ENTRY LENGTH
         LA    R2,PFTABLE(R2)          PFENTRY = PFTABLE + DISPLACEMENT
         C     R2,PFTEND               Q. VALID PROGRAM FUNCTION ENTRY
         BNL   CMD900                  ...NO
         CLC   =C'PFK=',CMDCHECK       Q. PROGRAM FUNCTION ASSIGNMENT
         BNE   CMD112                  ...NO
         MVC   0(L'PFENTRY,R2),CMD+4   RE-ASSIGN PROGRAM FUNCTION
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
CMD112   DS    0H
         MVC   CMD(L'PFENTRY),0(R2)    PFKEY CMD
         MVC   COMMAND(2),=AL2(L'PFENTRY+4) RDW LENGTH
         MVC   CMDCHECK,CMD
         OC    CMDCHECK,SPACES         UPPER CASE INPUT TEXT
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
CMD120   DS    0H                      COMMAND VALIDATION             *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
         CLC   =H'4',COMMAND           Q. ANY DATA ENTERED ?
         BZ    CMD900                  ...NO
         CLC   =C'END ',CMDCHECK       Q. 'END'
         BE    EXIT                    ...YES
         CLC   =C'AUTO',CMDCHECK       Q. AUTOMATIC REFRESH REQUEST
         BE    CMD140                  ...YES
         CLC   =C'HELP',CMDCHECK       Q. HELP REQUEST
         BE    CMD160                  ...YES
         CLC   =C'PFK',CMDCHECK        Q. PFK DISPLAY REQUEST
         BE    CMD170                  ...YES
         CLC   =C'SWITCH',CMDCHECK     Q. CONSOLE SWITCH REQUEST
         BE    CMD190                  ...YES
         CLC   =C'RECALL',CMDCHECK     Q. CMD RECALL REQUEST
         BE    CMD180                  ...YES
         MVI   PREVCMD,0               NOT RECALL
         L     R1,PREVCMD              CURRENT COMMAND ENTRY
         XC    0(L'CMD,R1),0(R1)       CLEAR
         LH    R2,COMMAND              WPL LENGTH
         SH    R2,=H'5'                    - RDW, ADJUSTED FOR EXECUTE
         EX    R2,MVCCMD               MOVE COMMAND USING LENGTH
         LA    R1,L'PREVAREA(R1)       NEXT COMMAND ENTRY
         C     R1,PREVCMDE             Q. PAST LAST ENTRY
         BL    CMD122                  ...NO
         L     R1,PREVCMDS             FIRST ENTRY
CMD122   DS    0H
         ST    R1,PREVCMD              CURRENT ENTRY
         TM    AUTH,X'80'              Q. OPER AUTHORIZED
         BZ    CMD900                  ...NO
         TM    AUTH,X'40'              Q. TEC USER
         BO    CMD200                  ...YES
         CLI   CMD,C'0'                Q. WTOR REPLY
         BNL   CMD200                  ...YES
         LA    R1,CMDTABLE             COMMAND VALIDATION TABLE
         XR    R2,R2                   CLEAR
CMD124   DS    0H
         IC    R2,0(R1)                COMMAND VALIDATION ENTRY LENGTH
         EX    R2,CLCCMD               Q. VALID COMMAND
         BE    CMD200                  ...YES
         LA    R1,2(R2,R1)             NEXT COMMAND ENTRY
         C     R1,CMDTEND              Q. COMMAND TABLE END
         BL    CMD124                  ...NO
         B     CMD900                  COMMAND NOT AUTHORIZED
         SPACE 1
MVCCMD   MVC   0(*-*,R1),CMD
CLCCMD   CLC   CMDCHECK(*-*),1(R1)
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
CMD140   DS    0H                      AUTO COMMAND PROCCESSING       *
         XI    AUTO,X'FF'              SWITCH AUTO REFRESH INDICATOR
         B     CMD900                  CONTINUE
         SPACE 1
CMD160   DS    0H                      HELP COMMAND PROCCESSING       *
         CALL  CLRSCRN
         L     R4,HELP                 HELP AREA
CMD162   DS    0H
         C     R4,HELPEND              Q. END OF HELP AREA
         BNL   DISP100                 ...YES
         TPUT  (4),L'HELPLINE
         LA    R4,L'HELPLINE(R4)       NEXT HELP MESSAGE
         B     CMD162                  CONTINUE
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
CMD170   DS    0H                      PFK COMMAND PROCCESSING        *
         CALL  CLRSCRN
         LA    R4,PFTABLE              PROGRAM FUNCTION TABLE
         ZAP   PFK#,=P'1'              PFK NUMBER
CMD172   DS    0H
         C     R4,PFTEND               Q. END OF PROGRAM FUNCTION TABLE
         BNL   CMD174                  ...YES
         MVC   PFKDESC,0(R4)           PFK ASSIGNMENT VALUE
         MVC   PFK,PFKEDIT             PFK NUMBER EDIT PATTERN
         ED    PFK,PFK#
         TPUT  PFKMSG,LPFKMSG
         LA    R4,L'PFENTRY(R4)        NEXT PROGRAM FUNCTION
         AP    PFK#,=P'1'              INCREMENT PFK NUMBER
         B     CMD172                  CONTINUE
CMD174   DS    0H
         TPUT  SPACES,1
         B     DISP100                 CONTINUE
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
CMD180   DS    0H                      CMD RECALL PROCCESSING         *
         LA    R1,1
         L     R2,PREVCMD              CURRENT ENTRY
         CLI   PREVCMD,0               Q. PREVIOUS CMD RECALL
         BE    CMD182                  ...NO
         L     R2,PREVCMDR             PREVIOUS CMD RECALLED
CMD182   DS    0H
         S     R2,=A(L'PREVAREA)       PREVIOUS COMMAND
         C     R2,PREVCMDS             Q. PAST FIRST ENTRY
         BNL   CMD184                  ...NO
         BCT   R1,DISP100              ONE TIME ONLY
         L     R2,PREVCMDE             COMMAND TABLE END
         S     R2,=A(L'PREVAREA)       LAST COMMAND
CMD184   DS    0H
         OC    0(L'PREVAREA,R2),0(R2)  Q. NULL COMMAND
         BZ    CMD182                  ...YES
         MVI   PREVCMD,1               CMD RECALL
         ST    R2,PREVCMDR             CMD RECALLED
         MVC   CMDATTR,=AL1(UNPROT)
         MVC   INPUT(L'CMD),0(R2)      COMMAND DISPLAY
         B     DISP100                 CONTINUE
         SPACE 1
CMD190   DS    0H                      CONSOLE SWITCH PROCCESSING     *
         CLC   =C'SWITCH MASTER',CMD   Q. SWITCH TO MASTER REQUEST
         BNE   CMD192                  ...NO
         OC    MASTUCME,MASTUCME       Q. MASTER CONSOLE AVAILABLE
         BZ    DISP100                 ...NO
         MVC   CURRUCME,MASTUCME       MASTER CONSOLE UCME
         B     INIT120                 CONTINUE
CMD192   DS    0H
         LM    R3,R5,UCMSTACK          UCM ENTRIES: FIRST, LENGTG, LAST
         OC    CURRUCME,CURRUCME       Q. CURRENT CONSOLE ACTIVE
         BZ    CMD198                  ...NO
         L     R3,CURRUCME             CURRENT CONSOLE
         B     CMD198                  CONTINUE
CMD194   DS    0H
         TM    X'19'(R3),X'10'         Q. ACTIVE CONSOLE (UCMUF)
         BZ    CMD198                  ...NO
         TM    X'19'(R3),X'04'         Q. CHANGING STATUS (UCMAT04)
         BNZ   CMD198                  ...YES
         L     R6,X'1C'(R3)            RDCM (UCBXB)
         LTR   R6,R6                   Q. DISPLAY DEVICE
         BZ    CMD198                  ...NO
         L     R7,0(R6)                TDCM (DCMADTRN)
         LTR   R7,R7                   Q. DISPLAY DEVICE
         BZ    CMD198                  ...NO
         ST    R3,CURRUCME             CURRENT CONSOLE
         B     INIT120                 CONTINUE
CMD198   DS    0H
         BXLE  R3,R4,CMD194            NEXT UCM ENTRY
         OC    CURRUCME,CURRUCME       Q. PAST CURRENT CONSOLE
         BZ    GCERROR                 ...YES
         XC    CURRUCME,CURRUCME       CLEAR
         LM    R3,R5,UCMSTACK          UCM ENTRIES: FIRST, LENGTH, LAST
         B     CMD194                  CONTINUE
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
CMD200   DS    0H                      OPERATOR COMMAND PROCCESSING   *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
         OI    COMMAND+2,X'41'         QUEUE UNCOND. TO UCMID IN R0
         OI    COMMAND+3,X'04'         NO HARD COPY
         LA    R1,COMMAND              COMMAND BUFFER
         CLI   CMD,C'0'                Q. WTOR REPLY
         BNL   CMD202                  ...YES
         L     R0,CONSOLE              CONSOLE I.D.
         SVC   35                      ISSUE WTO SVC
CMD202   DS    0H
         LA    R1,MODE1                KEY ZERO
         MODESET MF=(E,(1))
         LA    R1,COMMAND              COMMAND BUFFER
         L     R0,CONSOLE              CONSOLE I.D.
         SVC   34                      ISSUE MGCR/QEDIT SVC
         STIMER WAIT,BINTVL==A(100)    WAIT 1.00 SECONDS
         CLC   CURRUCME,MASTUCME       Q. CURRENT CONSOLE MASTER
         BE    CMD900                  ...YES
         OC    MASTUCME,MASTUCME       Q. MASTER CONSOLE AVAILABLE
         BZ    CMD900                  ...NO
         XC    COMMAND,COMMAND         CLEAR
         MVC   CURRUCME,MASTUCME       MASTER CONSOLE UCME
         B     INIT120                 SWITCH TO MASTER, CONTINUE
         SPACE 1
CMD900   DS    0H                      COMMAND PROCCESSING EXIT       *
         XC    COMMAND,COMMAND         CLEAR
         B     DISP100                 CONTINUE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
EXIT     DS    0H                      RETURN TO TMP                  *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
         STFSMODE OFF
         CLI   ERROR,0                 Q. ERROR ENCOUNTERED
         BNE   EXIT100                 ...YES
         CALL  CLRSCRN
EXIT100  DS    0H
         LA    R0,1                    APF AUTHORIZATION ON
         SVC   242                     ISSUE AUTHORIZATION SVC
         LA    R1,MODE1                KEY ZERO
         MODESET MF=(E,(1))
         CLC   COMMTASK,=H'1'          Q. COMMTASK IN MASTER SCHEDULER
         BE    EXIT102                 ...YES, NO CROSS MEMORY
         LA    R2,1
         AXSET AX=(R2)                 PCAUTH AX = 1
         EPAR  R2                      EXTRACT PRIMARY ASID
         SSAR  R2                      RESET SECONDARY ASID
         SR    R2,R2                   CLEAR
         AXSET AX=(R2)                 PCAUTH AX = 0
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
EXIT102  DS    0H
         LA    R1,MODE2                USER KEY
         MODESET MF=(E,(1))
         XR    R0,R0                   APF AUTHORIZATION OFF
         SVC   242                     ISSUE AUTHORIZATION SVC
         SR    R15,R15
         IC    R15,ERROR               RETURN CODE
         L     R13,4(R13)              PREVIOUS SAVEAREA
         RETURN (14,12),T,RC=(15)
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
ATTNEXIT DS    0H                      ATTENTION EXIT ROUTINE         *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
         STM   R14,R12,12(R13)         SAVE REGISTERS
         LM    R1,R3,0(R1)             TAIE, IBUF, USADDR
         LM    R2,R12,8(R3)            RESTORE REGISTERS (EXITSAVE)
         MVI   ATTN,X'FF'              INDICATE ATTENTION ENTERED
         MVC   4(4,R1),=A(DISP100)     RETURN ADDRESS
         MVC   8(64,R1),EXITSAVE       RETURN REGISTERS
ATTN900  DS    0H
         LM    R14,R12,12(R13)         RESTORE REGISTERS
         LA    R15,0                   RETURN CODE
         BR    R14                     RETURN
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                      ERROR ROUTINES                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
CPERROR  DS    0H                      NOT INVOKED AS COMMAND PROCESSOR
         MVI   ERROR,4                 ERROR CODE
         L     R1,X'218'               CURRENT TCB
         L     R1,12(R1)               CURRENT TIOT
         MVC   CPERRWTO+34(8),0(R1)    JOBNAME
         WTO   MF=(E,CPERRWTO)
         LA    R1,CPERRMSG             MESSAGE
         LA    R0,L'CPERRMSG           MESSAGE LENGTH
         TPUT  (1),(0)
         B     EXIT                    EXIT
         SPACE 1
GCERROR  DS    0H                      NO GRAPHICS CONSOLES ACTIVE
         MVI   ERROR,8                 ERROR CODE
         LA    R1,GCERRMSG             MESSAGE
         LA    R0,L'GCERRMSG           MESSAGE LENGTH
         TPUT  (1),(0)
         B     EXIT                    EXIT
         SPACE 1
AXERROR  DS    0H                      PCAUTH AX ERROR
         MVI   ERROR,12                ERROR CODE
         LA    R1,AXERRMSG             MESSAGE
         LA    R0,L'AXERRMSG           MESSAGE LENGTH
         TPUT  (1),(0)
         B     EXIT                    EXIT
         SPACE 1
TPERROR  DS    0H                      TPUT ERROR
         STC   R15,ERROR               ERROR CODE
         LA    R1,TPERRMSG             MESSAGE
         LA    R0,L'TPERRMSG           MESSAGE LENGTH
         TPUT  (1),(0)
         B     EXIT                    EXIT
         SPACE 1
TGERROR  DS    0H                      TGET ERROR
         STC   R15,ERROR               ERROR CODE
         LA    R1,TGERRMSG             MESSAGE
         LA    R0,L'TGERRMSG           MESSAGE LENGTH
         TPUT  (1),(0)
         B     EXIT                    EXIT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
ESTAEXIT DS    0H                      ESTAE EXIT ROUTINE             *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
         USING ESTAEXIT,15
         CH    0,=H'12'                Q. SDWA GOTTEN
         BE    ESTAE900                ...NO, FORCE RETURN
         USING SDWA,1
         L     R12,SDWAPARM            EXITSAVE
         LM    R2,R12,8(R12)           RESTORE REGISTERS
         DROP  15
         MVC   ABCODE,SDWAABCC         COMPLETION CODE
         MVC   ABPSW,SDWAEC1           EC MODE PSW AT TIME OF ERROR
         MVC   ABADD,SDWAAEC1          ADDITIONAL EC MODE DATA
         MVC   ABREGS(64),SDWAGRSV     REGISTERS 0-15 AT TIME OF ERROR
         MVC   SDWASRSV(64),EXITSAVE   RETRY REGISTERS
         SETRP RC=4,RETADDR=ABEND100,FRESDWA=YES,                      X
               RETREGS=YES,DUMP=IGNORE
         DROP  1
ESTAE900 DS    0H
         LA    0,EXIT                  RETRY ADDRESS
         LA    15,4                    ESTAE RETURN CODE
         BR    14                      RETURN TO RTM
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
ABEND100 DS    0H                      ABEND RECOVERY PROCESSING      *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
         ESTAE 0
         MVI   ERROR,X'FF'             ERROR CODE
         L     R4,ABCODE               RTM ABEND CODE
         N     R4,=X'00FFF000'         Q. SYSTEM ABEND CODE
         BZ    ABEND102                ...NO
         SRL   R4,4                    SHIFT RIGHT
         ST    R4,WORK
         UNPK  ABCODE,WORK(4)          OFFSET HEX DIGITS
         TR    ABCODE,HEXTABLE         CONVERT TO HEX CHARACTERS
         MVI   ABENDMSG+6,C'S'         ABEND TYPE
         MVC   ABENDMSG+7(3),ABCODE    ABEND CODE
         B     ABEND104                CONTINUE
ABEND102 DS    0H
         L     R4,ABCODE               RTM ABEND CODE
         N     R4,=X'00000FFF'         Q. USER ABEND CODE
         BZ    ABEND104                ...NO
         SLL   R4,8                    SHIFT LEFT
         ST    R4,WORK
         UNPK  ABCODE,WORK(4)          OFFSET HEX DIGITS
         TR    ABCODE,HEXTABLE         CONVERT TO HEX CHARACTERS
         MVI   ABENDMSG+6,C'U'         ABEND TYPE
         MVC   ABENDMSG+7(3),ABCODE    ABEND CODE
ABEND104 DS    0H
         LA    R1,ABENDMSG             MESSAGE
         LA    R0,L'ABENDMSG           MESSAGE LENGTH
         TPUT  (1),(0)
         UNPK  WORK(9),ABPSW(5)        PSW
         MVC   ABENDPSW+11(8),WORK
         UNPK  WORK(9),ABPSW+4(5)      PSW
         MVC   ABENDPSW+20(8),WORK
         UNPK  WORK(9),ABADD(5)        ADDITIONAL EC MODE DATA
         MVC   ABENDPSW+29(8),WORK
         UNPK  WORK(9),ABADD+4(5)      ADDITIONAL EC MODE DATA
         MVC   ABENDPSW+38(8),WORK
         TR    ABENDPSW+11(35),HEXTABLE
         LA    R1,ABENDPSW             MESSAGE
         LA    R0,L'ABENDPSW           MESSAGE LENGTH
         TPUT  (1),(0)
         UNPK  WORK(9),ABREGS(5)       REG 0
         MVC   ABENDREG+11(8),WORK
         UNPK  WORK(9),ABREGS+4(5)     REG 1
         MVC   ABENDREG+20(8),WORK
         UNPK  WORK(9),ABREGS+8(5)     REG 2
         MVC   ABENDREG+29(8),WORK
         UNPK  WORK(9),ABREGS+12(5)    REG 3
         MVC   ABENDREG+38(8),WORK
         MVC   ABENDREG+6(4),=CL4'0-15'
         TR    ABENDREG+11(35),HEXTABLE
         LA    R1,ABENDREG             MESSAGE
         LA    R0,L'ABENDREG           MESSAGE LENGTH
         TPUT  (1),(0)
         MVC   ABENDREG+6(4),SPACES
         UNPK  WORK(9),ABREGS+16(5)    REG 4
         MVC   ABENDREG+11(8),WORK
         UNPK  WORK(9),ABREGS+20(5)    REG 5
         MVC   ABENDREG+20(8),WORK
         UNPK  WORK(9),ABREGS+24(5)    REG 6
         MVC   ABENDREG+29(8),WORK
         UNPK  WORK(9),ABREGS+28(5)    REG 7
         MVC   ABENDREG+38(8),WORK
         TR    ABENDREG+11(35),HEXTABLE
         LA    R1,ABENDREG             MESSAGE
         LA    R0,L'ABENDREG           MESSAGE LENGTH
         TPUT  (1),(0)
         UNPK  WORK(9),ABREGS+32(5)    REG 8
         MVC   ABENDREG+11(8),WORK
         UNPK  WORK(9),ABREGS+36(5)    REG 9
         MVC   ABENDREG+20(8),WORK
         UNPK  WORK(9),ABREGS+40(5)    REG 10
         MVC   ABENDREG+29(8),WORK
         UNPK  WORK(9),ABREGS+44(5)    REG 11
         MVC   ABENDREG+38(8),WORK
         TR    ABENDREG+11(35),HEXTABLE
         LA    R1,ABENDREG             MESSAGE
         LA    R0,L'ABENDREG           MESSAGE LENGTH
         TPUT  (1),(0)
         UNPK  WORK(9),ABREGS+48(5)    REG 12
         MVC   ABENDREG+11(8),WORK
         UNPK  WORK(9),ABREGS+52(5)    REG 13
         MVC   ABENDREG+20(8),WORK
         UNPK  WORK(9),ABREGS+56(5)    REG 14
         MVC   ABENDREG+29(8),WORK
         UNPK  WORK(9),ABREGS+60(5)    REG 15
         MVC   ABENDREG+38(8),WORK
         TR    ABENDREG+11(35),HEXTABLE
         LA    R1,ABENDREG             MESSAGE
         LA    R0,L'ABENDREG           MESSAGE LENGTH
         TPUT  (1),(0)
         B     EXIT                    EXIT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                      DATA AREA                      *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
SAVEAREA DS    18F
EXITSAVE DS    16F                     EXIT REGISTER 0-15 SAVEAREA
ERROR    DC    X'00'                   ERROR CODE
WORK     DS    2D
EDIT     DS    2D
AUTH     DC    X'00'                   AUTHORIZATION INDICATOR
AUTO     DC    X'00'                   AUTOMATIC REFRESH INDICATOR
ATTN     DC    X'00'                   ATTENTION INDICATOR
COMMTASK DC    H'0'                    COMMUNICATIONS TASK ASID
MASTUCME DC    A(0)                    MASTER CONSOLE UCME ADDRESS
UCMSTACK DC    3A(0)                   UCM ENTRIES: FIRST, LENGTH, LAST
CURRUCME DC    A(0)                    CURRENT CONSOLE UCME ADDRESS
CONSOLE  DC    F'0'                    CONSOLE I.D. (000000FF)
DEVICE   DC    C'CUU'                  DEVICE ADDRESS
COPTIONS DS    0XL8                    CONSOLE OPTIONS
CDEL     DC    CL2' '                      DELETE
CCON     DC    CL1' '                      CONVERSATIONAL MODE
CSEG     DC    XL1'00'                     SEGMENT
CDISPLAY DC    XL1'00'                     DISPLAY AREA
CRNUM    DC    XL1'00'                     ROLL NUMBER
CRTME    DC    XL2'0000'                   ROLL TIME
@BUFFER  DC    F'0'                    SCREEN IMAGE BUFFER ADDRESS
@LBUFFER DC    F'0'                    SCREEN IMAGE BUFFER LENGTH
DCMLINES DC    F'0'                    DCM LINE COUNT
LCNTL    DC    H'0'                    LINE 3270 CONTROL LENGTH
LPREFIX  DC    H'0'                    LINE PREFIX LENGTH
LLINE    DC    H'0'                    DISPLAY LINE LENGTH
LDATA    DC    H'0'                    MAXIMUM LINE LENGTH
LINEINDX DC    H'0'                    LENGTH OF DCM LINE IN CORE
TERMLINE DC    H'0'                    TERMINAL LINE SIZE
MAXLINES DC    F'0'                    TERMINAL LINE COUNT (3270)
WAITTIME DC    F'200'                  2 SECONDS
MODE1    MODESET KEY=ZERO,MODE=SUP,MF=L
MODE2    MODESET KEY=NZERO,MODE=PROB,MF=L
ESATEL   ESTAE ESTAEXIT,CT,MF=L
ABCODE   DC    F'0'                    ESTAEXIT RTM COMPLETION CODE
ABPSW    DC    D'0'                    ESTAEXIT RTM ERROR PSW
ABADD    DC    D'0'                    ESTAEXIT RTM EC MODE ADDITIONAL
ABREGS   DC    16F'0'                  ESTAEXIT RTM ERROR REGS 0-15
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
COMMAND  DC    2H'0'                   SVC 34, 35 INPUT RDW
CMD      DC    CL120' ',CL256' '       INPUT BUFFER
CMDCHECK DC    CL24' '                 UPPER CASE INPUT BUFFER
CMDTABLE DS    0F                      COMMAND VALIDATION TABLE
         DC    AL1(L'CMD#1-1)
CMD#1    DC    C'$D'                       JES2 DISPLAY
         DC    AL1(L'CMD#2-1)
CMD#2    DC    C'V '                       VARY COMMANDS
         DC    AL1(L'CMD#3-1)
CMD#3    DC    C'#W'                       CMD SUBSYS W COMMAND
         DC    AL1(L'CMD#4-1)
CMD#4    DC    C'#J'                       CMD SUBSYS J COMMAND
         DC    AL1(L'CMD#5-1)
CMD#5    DC    C'D '                       DISPLAY COMMAND
         DC    AL1(L'CMD#6-1)
CMD#6    DC    C'C U='                     CANCELLING TSO USER
CMDTEND  DC    A(CMDTEND)              COMMAND VALIDATION TABLE END
         SPACE 1
KEY      DC    XL1'00'                 TERMINAL KEY ENTERED
PFTABLE  DS    0F                      PROGRAM FUNCTION TABLE
PFENTRY  DS    0CL20                       ENTRY LENGTH
PF#1     DC    CL20'HELP                '  PFK1 / PFK13
PF#2     DC    CL20'$DI,L=Z             '  PFK2 / PFK14
PF#3     DC    CL20'END                 '  PFK3 / PFK15
PF#4     DC    CL20'PFK                 '  PFK4 / PFK16
PF#5     DC    CL20'#W                  '  PFK5 / PFK17
PF#6     DC    CL20'#J                  '  PFK6 / PFK18
PF#7     DC    CL20'$DA,ALL,L=Z         '  PFK7 / PFK19
PF#8     DC    CL20'D NET,PENDING       '  PFK8 / PFK20
PF#9     DC    CL20'SWITCH              '  PFK9 / PFK21
PF#10    DC    CL20'AUTO                '  PFK10 / PFK22
PF#11    DC    CL20'RECALL              '  PFK11 / PFK23
PF#12    DC    CL20'SWITCH MASTER       '  PFK12 / PFK24
PFTEND   DC    A(PFTEND)               PROGRAM FUNCTION TABLE END
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
PFKMSG   DC    CL10' ',CL4'PFK',CL4' XXX',C' - ',CL(L'PFENTRY)' '
LPFKMSG  EQU   *-PFKMSG
         ORG   PFKMSG+14
PFK      DC    CL4' XXX'               PFK NUMBER DISPLAY
         ORG   PFKMSG+21
PFKDESC  DC    CL(L'PFENTRY)' '        PFK ASSIGNMENT VALUE
         ORG
PFK#     DC    PL2'1'                  PFK COUNTER
PFKEDIT  DC    X'40202120'             PFK NUMBER EDIT PATTERN
PREVCMDS DC    A(PREVAREA)             PREVIOUS COMMAND TABLE START
PREVCMD  DC    A(PREVAREA)             CURRENT COMMAND ENTRY
PREVCMDR DC    A(PREVAREA)             PREVIOUS COMMAND RECALL ENTRY
PREVCMDE DC    A(PREVAEND)             PREVIOUS COMMAND TABLE END
HELP     DC    A(HELPAREA)             HELP MESSAGE AREA
HELPEND  DC    A(HELPAEND)             HELP MESSAGE AREA END
TPERRMSG DC    C'SHOW - TPUT ERROR'
TGERRMSG DC    C'SHOW - TGET ERROR'
CPERRWTO WTO   'INVALID USE OF SHOW COMMAND - XXXXXXXX',ROUTCDE=8,     X
               MF=L
CPERRMSG DC    C'SHOW - MUST BE INVOKED AS A TSO COMMAND PROCESSOR'
MCERRMSG DC    C'SHOW - MASTER CONSOLE IS NOT A DISPLAY DEVICE'
GCERRMSG DC    C'SHOW - NO DISPLAY CONSOLES ARE ACTIVE'
AXERRMSG DC    C'SHOW - CROSS MEMORY AUTHORIZATION FAILED'
ABENDMSG DC    C'ABEND  --  PROCESSING SHOW COMMAND'
ABENDPSW DC    C'      PSW  XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX'
ABENDREG DC    C'      N-N  XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX'
SPACES   DC    CL256' '
UNDRLINE DC    80C'_'
HEXTABLE DC    CL240' ',C'0123456789ABCDEF'
SCRPOS   DS    0H                      MODULO 64 TRANSLATE TABLE
         DC    X'40C1C2C3C4C5C6C7C8C94A4B4C4D4E4F'
         DC    X'50D1D2D3D4D5D6D7D8D95A5B5C5D5E5F'
         DC    X'6061E2E3E4E5E6E7E8E96A6B6C6D6E6F'
         DC    X'F0F1F2F3F4F5F6F7F8F97A7B7C7D7E7F'
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
         LTORG
         SPACE 1
AXTDCM   DS    CL333                   CROSS-MEMORY TDCM SAVE
         SPACE 1
LAST4    DC    CL80'---- FOURTH FROM LAST LINE DISPLAYED ----'
LAST3    DC    CL80'---- THIRD FROM LAST LINE DISPLAYED  ----'
LAST2    DC    CL80'---- SECOND FROM LAST LINE DISPLAYED ----'
LAST1    DC    CL80'---- LAST LINE DISPLAYED             ----'
         SPACE 1
PROMPT   DC    C'ENTER COMMAND OR END BELOW:'
         SPACE 1
INFOAREA DC    AL1(RA)                 INPUT FIELD CONTROL
INFOCLR  DC    XL2'4040',X'00'             REPEAT 3270 ADDRESS, FILL
INFOHDR  DC    AL1(SF),AL1(PROTECT),79C'_'
INFOLINE DC    CL83' '
         ORG   INFOLINE
         DC    AL1(SF),AL1(HIPROT),C'CONSOLE'
INFOID   DC    CL3' ',CL8' ',AL1(SF),AL1(PROTECT),C'UCB='
INFOUCB  DC    C'CUU',C'    RTME='
INFORTME DC    C'00',C',RNUM='
INFORNUM DC    C'00',C',SEG='
INFOSEG  DC    C'00',C',CON='
INFOCON  DC    C'N',C',DEL='
INFODEL  DC    C'R '
         ORG
         ORG   *-10
         DC    AL1(SF),AL1(HIPROT)
INFOTIME DC    C'99:99:99'
         ORG
         DC    AL1(SF),AL1(HIPROT),C'COMMAND INPUT ===>',AL1(SF)
CMDATTR  DC    AL1(HIUNPROT),AL1(IC)
INPUT    DC    (L'CMD)X'00'            INPUT AREA
         DC    AL1(SF),AL1(PROTECT)
LINFOHDR EQU   *-INFOHDR
LINFO    EQU   *-INFOAREA
LHDRINFO DC    A(LINFOHDR)             INFO HEADER LENGTH
LSCRINFO DC    A(LINFO)                INFO AREA LENGTH
         SPACE 1
EDITID   DS    0C' 009'
         DC    X'40202120'
EDITSEG  DC    X'40212020'
EDITRNUM DC    X'40212020'
EDITRTME DC    X'40212020'
EDITTIME DS    0C' 99:99:99'
         DC    X'4021207A20207A2020'
         SPACE 1
FSBUFFER DC    AL1(WCC)                FULLSCREEN WRITE CONTROL CHAR
BUFFER   DS    CL4096                  OUTPUT BUFFER
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                      NON-ADDRESSABLE DATA AREA      *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
PREVAREA DS    0CL(L'CMD)
         DC    (10*L'PREVAREA)X'00'
PREVAEND DS    0C
         SPACE 1
HELPAREA DS    0C
H        DS    0CL70
HELPLINE DS    0CL(L'H)
 DC CL(L'H)'   SHOW COMMAND - HELP                                    '
 DC CL(L'H)'                                                          '
 DC CL(L'H)'   DISPLAY MODES:                                         '
 DC CL(L'H)'      3270 - FULL SCREEN AND PFK SUPPORT                  '
 DC CL(L'H)'      AUTO - 3270 MODE AUTOMATIC SCREEN UPDATE            '
 DC CL(L'H)'      LINE - NON-3270 OR 132 CHARACTER LINE               '
 DC CL(L'H)'                                                          '
 DC CL(L'H)'   COMMAND ENTRY:                                         '
 DC CL(L'H)'      CONSOLE COMMANDS SUPPORTED IF AUTHORIZED            '
 DC CL(L'H)'      AUTO OR LINE MODE - MASH ATTN KEY FOR PROMPT        '
 DC CL(L'H)'                                                          '
 DC CL(L'H)'   CONTROL COMMANDS:                                      '
 DC CL(L'H)'      END    - EXIT SHOW                                  '
 DC CL(L'H)'      HELP   - DISPLAY HELP SCREEN                        '
 DC CL(L'H)'      AUTO   - SWITCH 3270 SCREEN UPDATE MODE             '
 DC CL(L'H)'      PFK    - DISPLAY PFK ASSIGNMENTS                    '
 DC CL(L'H)'      PFK=X  - ASSIGN FUNCTION X TO PFK MASHED            '
 DC CL(L'H)'      RECALL - RECALL PREVIOUS COMMAND                    '
 DC CL(L'H)'      SWITCH - CHANGE TO NEXT CONSOLE                     '
 DC CL(L'H)'      SWITCH MASTER - CHANGE TO MASTER CONSOLE            '
 DC CL(L'H)'                                                          '
HELPAEND EQU   *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                      DSECTS AND EQUATES             *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
         PRINT NOGEN
         IKJCPPL
         IHASDWA
         PRINT GEN
         SPACE 1
         EQUREG
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
*                                  ATTENTION IDENTIFICATION VALUES
NULLKEY  EQU   X'60'
ENTERKEY EQU   X'7D'
PA1KEY   EQU   X'6C'
PA2KEY   EQU   X'6E'
PA3KEY   EQU   X'6B'
CLEARKEY EQU   X'6D'
PFK01    EQU   X'01'
PFK02    EQU   X'02'
PFK03    EQU   X'03'
PFK04    EQU   X'04'
PFK05    EQU   X'05'
PFK06    EQU   X'06'
PFK07    EQU   X'07'
PFK08    EQU   X'08'
PFK09    EQU   X'09'
PFK10    EQU   X'0A'
PFK11    EQU   X'0B'
PFK12    EQU   X'0C'
*                                  ATTRIBUTE BYTES
DARKUNPR EQU   X'4D'                   NON-DISPLAY, UNPROTECTED, MDT
UNPROT   EQU   X'C5'                   NORMAL INT., UNPROTECTED, MDT
HIUNPROT EQU   X'C9'                   HI-INTENSITY, UNPROTECTED, MDT
PROTECT  EQU   X'F0'                   NORMAL INTENSITY, PROTECTED
HIPROT   EQU   X'F8'                   HI-INTENSITY, PROTECTED
*                                  WRITE CONTROL CHARACTER
WCC      EQU   X'C3'                   KEYBOARD RESTORE,
*                                          RESET MODIFIED DATA TAG
ALARMON  EQU   X'04'                   SOUND ALARM
*                                  BUFFER CONTROL ORDERS
SF       EQU   X'1D'                   START FIELD
SBA      EQU   X'11'                   SET BUFFER ADDRESS
IC       EQU   X'13'                   INSERT CURSOR
PT       EQU   X'05'                   PROGRAM TAB
RA       EQU   X'3C'                   REPEATE TO ADDRESS
EUA      EQU   X'12'                   ERASE UNPROTECTED TO ADDRESS
*                                  COMMAND CODES
ERALLUN  EQU   X'6F'                   ERASE ALL UNPROTECTED
ERWRITE  EQU   X'F5'                   ERASE/WRITE
RDBUFF   EQU   X'F2'                   READ BUFFER
RDMOD    EQU   X'F6'                   READ MODIFIED
RDMODALL EQU   X'6E'                   READ MODIFIED ALL
WR       EQU   X'F1'                   WRITE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
         END
