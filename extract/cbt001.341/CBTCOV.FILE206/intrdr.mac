         TITLE 'INTRDR - PROVIDE CHECKING FOR USERS OF INTERNAL READER'
INTRDR   CSECT
         SAVE  (14,12),,*
         STDLK
         L     R3,PSATOLD              GET CURRENT TCB
         L     R4,TCBTIO(R3)           GET TIOT
         MVC   SUBMITR,0(R4)           SAVE THE JOBNAME
         LA    R4,S99BLKPT             PTR TO REQUEST BLK
         LA    R7,S99BLK               IT FOLLOWS - REQUEST BLK
         ST    R7,S99BLKPT             SAVE PTR TO PTR TO PTR.....
         USING S99RBP,R4               DUMMY
         USING S99RB,R7                DUMMY
         MVI   S99RBPTR,S99RBPND       WHY? CAN ONLY BE ONE
         MVC   S99RBLN(20),ALS99       FORMAT THE REQUEST BLK
         LA    R6,TEXTPTR              POINTER TO THE POINTERS
         ST    R6,S99TXTPP             PUT IT IN THE RB
         LR    R1,R4                   LOAD ADDR OF RB
         DYNALLOC                      ALLOC IT!
         LTR   RF,RF                   DID IT DO GOOD?
         BNZ   ALNOPE                  NOPE
         IC    R2,ALDDLEN+1            LENGTH OF DDNAME
         BCTR  R2,0                    DOWN 1 FOR MVC
         EX    R2,DDMOVEA              MOVE IT TO ACB
         DROP  R4
         L     R3,TCBJSCB(R3)          JSCB ADDR
         L     R3,JSCBJCTA(R3)         JCT ADDR
         LA    R3,16(R3)               GO PAST PREFIX
         ICM   R3,B'0111',JCTACTAD(R3) ACT ADDR
         LA    R3,16(R3)               GO PAST PREFIX - AGAIN
         LA    R3,33(R3)               POINT TO ACCT FIELD
         ST    R3,JOBACCT              FOR FEDACCT
         OPEN  (DCBIN,,ACBOUT,OUTPUT)
GETIT    DS    0H
         GET   DCBIN
         LR    R4,R1                   SAVE THE CHILDREN
         ST    R1,RCDADDR              SAVE FOR LATER
         CLC   =C'//',0(R1)            JCL?
         BE    JCLCARD                 YES, BRANCH
         CLC   =C'/*MESSAGE D=',0(R1)  SPECIAL /*MESSAGE CARD
         BE    MSGCARD
         CLC   =C'/*SETUP D=',0(R1)    SPECIAL /*SETUP CARD
         BE    SETUPCRD
         B     PUTIT
         EJECT
         TITLE 'INTRDR - PROCESS JCL CARDS'
JCLCARD  DS    0H
         TRT   0(70,R4),TRTBLNK        FIND THE FIRST BLANK
         BZ    PUTIT                   THIS CARD HAS NO BLANKS
         LA    R5,70(R4)               POINT TO COL 71
         SR    R5,R1                   REMAINDER OF CARD
         BCTR  R5,0                    DOWN 1 FOR EXECUTE
         LR    R4,R1                   POINT TO FIRST BLANK
         EX    R5,NOBLANK              FIND THE FIRST NON-BLANK
         BZ    PUTIT                   THIS CARD IS ALL BLANKS
         BCTR  R1,0                    BLANKS AROUND JOB
         CLC   =C' JOB ',0(R1)         IS THIS A JOB CARD?
         BNE   PUTIT                   NO
         LA    R4,5(R1)                POINT PAST JOB
         EX    R5,NOBLANK              FIND NEXT NON-BLANK
         BZ    PUTIT                   THE REST ARE BLANKS
         CLI   0(R1),C'('              ACCT CODES IN PARENS?
         BNE   NOBUMP                  NO
         LA    R1,1(R1)                POINT TO ACCT CODES
NOBUMP   DS    0H
         ST    R1,ACCT                 LOAD ACCT ADDR FOR FEDACCT
         LA    R1,ACCT                 PARMS FOR FEDACCT
         L     R4,RCDADDR              GET RCD BACK
         LA    R4,2(R4)                POINT TO JOBNAME
         CLI   0(R3),C'P'              PRODUCTION USER
         BE    TECOK                   THIS GUY'S OK
         CLC   =C'T369',0(R3)          TEC USER?
         BE    TECOK                   THIS GUY'S OK
         CLC   SUBMITR(7),0(R4)       SUBMITTER AND SUBMITTEE SAMO-SAMO
         BE    TECOK                   YES
         CLC   =C' JOB ',8(R4)         ROOM TO PUT IN JOBNAME?
         BNE   INVLDJOB                NO
         MVC   0(7,R4),SUBMITR         PUT IT IN
         MVI   7(R4),X'7C'             AND 1 MORE
TECOK    DS    0H
         ST    R4,JOBNAME              STORE THE ADDR FOR FEDACCT
         LINK  EP=FEDACCT              GO CHECK ACCT CODES
         LTR   RF,RF                   ARE THEY GOODY GOODY?
         BNZ   NOGOOD                  NO
         OI    JOBSTMNT,X'01'          WE GOT A GOOD JOB
*        TM    JOBSTMNT,X'02'          WERE THERE ANY BEFORE?
*        BZ    TURNON                  NO
*        ENDREQ RPL=INTRPL             CLOSE PREVIOUS JOB
TURNON   DS    0H
*        OI    JOBSTMNT,X'02'          MAYBE MULTIPLE JOBS
PUTIT    DS    0H
         TM    JOBSTMNT,X'01'          DID WE EVER HAVE A JOB?
         BZ    GETIT                   NO
         L     R1,RCDADDR              GET THE RCD ADDR
         MVC   JCL,0(R1)               ACB IO AREA
PUTIT2   DS    0H
         PUT   RPL=INTRPL              PUT TO INTERNAL READER
         B     GETIT                   GO AGAIN
         TITLE 'INTRDR - PROCESS SPECIAL /*MESSAGE AND /*SETUP CARDS'
* SPECIAL PROCESSING FOR /*MESSAGE AND /*SETUP CARD
* IF D= FOLLOWS MESSAGE OR SETUP, ASSUME A DATASET NAME IS PRESENT
* ISOLATE THE DATASET NAME, AND LOOK IT UP IN THE CATALOG
* INSERT AN ADDITIONAL CARD WITH THE FIRST FIVE VOLUME SERIAL NUMBERS
MSGCARD  DS    0H
         LA    R6,12(,R1)              -> DATASET NAME
         B     CAMLST01
SETUPCRD DS    0H
         LA    R6,10(,R1)              -> DATASET NAME
CAMLST01 DS    0H
         CLI   0(R6),X'40'             FIRST CHARACTER BLANK?
         BE    PUTIT
         LA    R1,44(,R6)              POINT PAST DATASET NAME
         TRT   0(44,R6),TRTBLNK
         SR    R1,R6                   GET LENGTH OF DATASET NAME
         BCTR  R1,0                    ADJUST FOR MOVE
         MVI   DSNAME,X'40'            CLEAR DATASET NAME FIELD
         MVC   DSNAME+1(L'DSNAME-1),DSNAME
         EX    R1,MVCDSN
         LOCATE CAMLIST
         LTR   RF,RF                   LOCATE OKAY
CAMLST02 DS    0H                      JUST A LABEL FOR DEBUGGING
         BNZ   PUTIT                   NO, JUST PUT ORIGINAL CARD
         L     R1,RCDADDR              GET THE RCD ADDR
         MVC   0(44,R6),DSNAME         RETURN DSNAME (GDG RESOLVED)
         MVC   JCL,0(R1)               ACB IO AREA
         PUT   RPL=INTRPL              PUT TO INTERNAL READER
         MVC   JCL(10),=C'/*MESSAGE D='   NOTE D= NOT MOVED, SAVE LITS
         MVC   JCL+10(70),JCL+9        CLEAR REST OF FIELD
         LA    R6,JCL+12
         LH    R1,LOCAREA              GET NUMBER OF VOLUMES
         CH    R1,=H'8'                CAN ONLY HANDLE EIGTH VOLUMES
         BNH   CAMLST05
         LA    R1,8
CAMLST05 DS    0H
         LA    R7,LOCAREA+2            POINT TO FIRST VOLSER
CAMLST10 DS    0H
         MVC   0(6,R6),4(R7)           MOVE VOLSER
         LA    R7,12(,R7)              -> NEXT VOLSER
         MVI   6(R6),C','              INSERT COMMA
         LA    R6,7(,R6)               BUMP OVER
         BCT   R1,CAMLST10             AND DO APPROPRIATE TIMES
         CLC   LOCAREA(2),=H'8'        WAS THERE MORE THAN EIGHT
         BH    CAMLST20
         BCTR  R6,0                    BACKUP ONE CHARACTER
         MVI   0(R6),C' '              AND REMOVE COMMA
         B     PUTIT2
CAMLST20 DS    0H
         MVC   0(5,R6),=C'+MORE'       INDICATE MORE
         B     PUTIT2
MVCDSN   MVC   DSNAME(0),0(R6)
         TITLE 'INTRDR - DYNAMIC ALLOCATION FAILURE ANALYSIS'
ALNOPE   DS    0H
         ST    RF,RETCODE              SAVE SVC99 RETURN CODE
         MVC   WTOVERB,S99VERB         GET VERB CODE
         TR    WTOVERB,DECTAB          MAKE IT DECIMAL
         UNPK  WORK(5),S99FLG11(3)     GET FLAGS 1 CODE
         NC    WORK(5),=X'0F0F0F0F00'  TURN OFF SIGNS
         MVC   WTOFLG1,WORK            MOVE TO WTO AREA
         TR    WTOFLG1,DECTAB          MAKE IT DECIMAL
         UNPK  WORK(5),S99ERROR(3)     GET ERROR CODE
         NC    WORK(5),=X'0F0F0F0F00'  TURN OFF SIGNS
         MVC   WTOERR,WORK             MOVE TO WTO AREA
         TR    WTOERR,DECTAB           MAKE IT DECIMAL
         UNPK  WORK(5),S99INFO(3)      GET INFO CODE
         NC    WORK(5),=X'0F0F0F0F00'  TURN OFF SIGNS
         MVC   WTOINFO,WORK            MOVE TO WTO AREA
         TR    WTOINFO,DECTAB          MAKE IT DECIMAL
         UNPK  WORK(5),S99FLG21(3)     1ST PART OF FLAGS 2
         NC    WORK(5),=X'0F0F0F0F00'  TURN OFF SIGNS
         MVC   WTOFLG21,WORK           MOVE TO WTO AREA
         TR    WTOFLG21,DECTAB         MAKE IT DECIMAL
         UNPK  WORK(5),S99FLG23(3)     2ND PART OF FLAGS 2
         NC    WORK(5),=X'0F0F0F0F00'  TURN OFF SIGNS
         MVC   WTOFLG22,WORK           MOVE TO WTO AREA
         TR    WTOFLG22,DECTAB         MAKE IT DECIMAL
         MVC   WTOAL+8(WTOLEN),WTOWORK
WTOAL    WTO   'VERB=X FLAG1=XXXX ERROR=XXXX INFO=XXXX FLAG2=XXXXXXXX',C
               ROUTCDE=11
         B     RETURN                  GET OUT
         TITLE 'INTRDR - RETURNS'
NOGOOD   DS    0H
         ST    RF,RETCODE              THEN SAVE IT
         L     RF,MSGTBL(RF)           GET PTR TO APPROPRIATE MSG
         MVC   WTO+8(L'ACCTMSG0),0(RF) INVALID ACCT CODES
         B     WTO
INVLDJOB DS    0H
         MVC   WTO+8(L'JOBMSG),JOBMSG  JOB NAME NOT = SUBMITTER
         LA    RF,20                   SET A RETURN CODE
         ST    RF,RETCODE              THEN SAVE IT
WTO      WTO   '                                      ',ROUTCDE=11
         CLC   RETCODE,=F'9'           NEED TO CLOSE?
         BL    RETURN                  NO
ENDIT    DS    0H
         ENDREQ RPL=INTRPL
         CLOSE (DCBIN,,ACBOUT)
         B     RETURN                  GET OUT
RETURN   DS    0H
         L     RF,RETCODE              PICK UP RETURN CODE
         L     RD,4(RD)
         RETURN (14,12),RC=(15)
DDMOVEA  MVC   ACBOUT+ACBDDNM,ALDDNAM
NOBLANK  TRT   0(0,R4),TRTNONB
         TITLE 'INTRDR - CONSTANTS, WORK AREAS, ETC.'
         LTORG
WORK     DS    D
RCDADDR  DS    F
ACCT     DS    F
JOBNAME  DS    F
RDRADDR  DC    A(RDRNAME)
JOBACCT  DS    F
TSOJOBN  DC    A(SUBMITR)
RDRNAME  DC    C'INTRDR'
RETCODE  DC    F'0'
TEXTPTR  DC    A(ALTXT1)
         DC    A(ALTXT2)
         DC    A(ALTXT3)
         DC    X'80'
         DC    AL3(ALTXT4)
DYNCODE  DC    F'0'
S99BLKPT DS    F
S99BLK   DS    CL20
ALS99    DC    AL1(S99RBEND-S99RB),AL1(S99VRBAL),18AL1(0)
ALTXT1   DC    AL2(DALSYSOU),AL2(1),AL2(1),C'A'
ALTXT1LN EQU   *-ALTXT1
ALTXT2   DC    AL2(DALSPGNM),AL2(1),AL2(6),C'INTRDR'
ALTXT2LN EQU   *-ALTXT2
ALTXT3   DC    AL2(DALCLOSE),AL2(0)
ALTXT3LN EQU   *-ALTXT3
ALTXT4   DC    AL2(DALRTDDN),AL2(1)
ALDDLEN  DC    AL2(8)
ALDDNAM  DC    CL8' '
ALTXT4LN EQU   *-ALTXT4
ACCTMSG0 DC    C'INTERNAL ERROR, CALL TECH SUPPORT  '
ACCTMSG1 DC    C'INVALID FORMAT                     '
ACCTMSG2 DC    C'INVALID RUNTYPE                    '
ACCTMSG3 DC    C'INVALID DEPARTMENT FIELD           '
ACCTMSG4 DC    C'INVALID LOCATION FIELD             '
ACCTMSG5 DC    C'INVALID APPLICATION                '
ACCTMSG6 DC    C'PROJECT NUMBER REQUIRED            '
ACCTMSG7 DC    C'INVALID REQUEST FROM THIS READER   '
ACCTMSG8 DC    C'INVALID FOR THIS USER              '
ACCTMSG9 DC    C'ACCOUNT INVALID FROM SUBMITTING JOB'
ACCTMSGA DC    C'JOBNAME INVALID FROM SUBMITTING JOB'
MSGTBL   DS    0F
         DC    A(ACCTMSG0)
         DC    A(ACCTMSG1)
         DC    A(ACCTMSG2)
         DC    A(ACCTMSG3)
         DC    A(ACCTMSG4)
         DC    A(ACCTMSG5)
         DC    A(ACCTMSG6)
         DC    A(ACCTMSG7)
         DC    A(ACCTMSG8)
         DC    A(ACCTMSG9)
         DC    A(ACCTMSGA)
JOBMSG   DC    C'SUBMITTER ID AND JOBNAME NOT EQUAL '
DECTAB   DC    C'0123456789ABCDEF'
WTOWORK  EQU   *
         DC    C'VERB='
WTOVERB  DS    C
         DC    C' FLAG1='
WTOFLG1  DS    CL4
         DC    C' ERROR='
WTOERR   DS    CL4
         DC    C' INFO='
WTOINFO  DS    CL4
         DC    C' FLAG2='
WTOFLG21 DS    CL4
WTOFLG22 DS    CL4
WTOLEN   EQU   *-WTOWORK
TRTNONB  DC    64X'FF'
         DC    X'00'
         DC    191X'FF'
TRTBLNK  DC    64X'00'
         DC    X'FF'
         DC    191X'00'
JOBSTMNT DC    X'0'
SUBMITR  DS    CL8
JCL      DS    CL80
PSATOLD  EQU   X'21C'
TCBTIO   EQU   X'C'
TIOENTRY EQU   X'18'
DCBDDNAM EQU   X'28'
ACBDDNM  EQU   X'28'
TCBJSCB  EQU   X'B4'
JSCBJCTA EQU   X'104'
JCTACTAD EQU   X'28'
CAMLIST  CAMLST NAME,DSNAME,,LOCAREA
DSNAME   DS    CL44
         DS    0D
LOCAREA  DS    XL265
INTRPL   RPL   ACB=ACBOUT,AREA=JCL,AREALEN=80,OPTCD=(ADR),RECLEN=80
ACBOUT   ACB   MACRF=(ADR,SEQ,OUT)
DCBIN    DCB   DSORG=PS,MACRF=(GL),EODAD=ENDIT,DDNAME=SYSUT1
         IEFZB4D0
         IEFZB4D2
         END
