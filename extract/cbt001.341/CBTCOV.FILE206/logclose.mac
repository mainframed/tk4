         TITLE 'IMS LOG CLOSER ROUTINE'
*  CLOSE BASEREGS REGS=(R12,R4)
LOGCLOSE CSECT
         BAL   15,12(0,15)
         DC    AL1(6)
         DC    CL6'LCLOSE'
         DS    0H
         STM   14,12,12(13)
         BALR  12,0
         USING *,12,4
         L     R7,0(,R1)
         LA    0,0+72(0,0)
         BAL   1,*+4
         SVC   10
         ST    0,0(0,1)
         XC    4(68,1),4(1)
         ST    1,8(0,13)
         ST    13,4(0,1)
         LM    0,1,20(13)
         L     13,8(0,13)
         B     STARTIT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
MOVEPARM MVC   PARM(0),2(R7)
STARTIT  EQU   *
         LH    R6,0(,R7)               MOVE LENGTH OF PARM TO REG 6
         LTR   R6,R6                   PARM SUPPLIED?
         BZ    START                   NO, USE DEFAULTS
         BCTR  R6,0                    SUBTRACT ONE FOR MOVE
         EX    R6,MOVEPARM             MOVE PARM TO STORAGE
         MVC   RECSYS,SYSTEM           MOVE SYSTEM ID INTO REC 6 TYPE 7
START    EQU   *
         OPEN  (LOGIN,,LOGOUT,(OUTPUT),SYSPRINT,(OUTPUT))
         LH    R7,LOGIN+62              GET BLKSIZE
         LR    R8,R7
         MH    R8,=H'3'                 TRIPLE BUFFERING
         GETMAIN R,LV=(8)
         ST    R1,BUF1                  SAVE FOR DEBUG
         LR    R8,R1                    POINT TO FIRST BUFFER
         LA    R9,0(R7,R8)                 SECOND
         ST    R9,BUF2
         LA    R10,0(R7,R9)             THIRD
         ST    R10,BUF3
         SR    R2,R2         INPUT BLOCK COUNTER
         SR    R3,R3         OUTPUT BLOCK COUNTER
*                            PRIMT BUFFERS
         READ  INDECB,SF,LOGIN,(8)
         CHECK INDECB
         LA    R2,1(R2)
         LR    R10,R8
BALCHK1  BAL   R11,CHECK
         READ  INDECB,SF,,(9),MF=E
         CHECK INDECB
         LA    R2,1(R2)
         LR    R10,R9
BALCHK2  BAL   R11,CHECK
         L     R10,BUF3      NEWEST MOST AVAILABLE BUFFER R10
         B    READ
*                            GET INTO IT
MAINLOOP EQU   *
         LR    R7,R8
         LR    R8,R9         SWAP BUFFERS
         LR    R9,R10
         LR    R10,R7
*                            READ A BLOCK INTO CURRENT INPUT BUFFER
READ     EQU   *
         READ  INDECB,SF,LOGIN,(10),MF=E
         CHECK INDECB
         LA    R2,1(R2)      INCR COUNT OF INPUT BLOCKS
BALCHK3  BAL   R11,CHECK
         WRITE OUTDECB,SF,LOGOUT,(8),'S'
         CHECK OUTDECB
         LA    R3,1(R3)
         B     MAINLOOP
         SPACE 3
SYNAD    WTO   'SYNAD EXIT TAKEN, ASSUMING EOF',ROUTCDE=(11)
         LH    R1,LOGIN+62              GET BUFFER LENGTH
         LA    R7,0(R1,R10)             POINT TO END OF BUFFER
         SNAP  DCB=SYSPRINT,STORAGE=((10),(7))
         SPACE 3
ENDOFILE EQU   *
         WTO   'END OF FILE ENCOUNTERED',ROUTCDE=(11)
         LTR    R8,R8
         BZ    ABEND3
         ST    R9,NXLASTIN
         ST    R8,FRSTOUT
         SPACE 3
SCANLAST EQU   *
         LR    R5,R9         SCAN TO THE LAST SEGM IN BLOCK
         LH    R6,0(R5)
         LA    R6,0(R5,R6)   ADDRES OF END OF BLOCK
         LA    R5,4(R5)      POINT TO FIRST SEGM
ADD      LR    R7,R5         SAVE
         AH    R5,0(R5)
         CR    R5,R6
         BL    ADD
         CLI   2(R7),X'00'   ANY SPANNED RECS????
         BZ    WRITALL       NOPE.
         CLI   2(R7),X'01'   BEGINNING OF LAST REC???
         BNE   TRYAG
         WTO   'TRUNCATING BEGINNING OF SPANNED REC',ROUTCDE=(11)
         BCTR  R6,0
         SNAP   DCB=SYSPRINT,STORAGE=((7),(6))
         LH    R6,0(R9)      DELTE THE REC FROM BLOCK
         SH    R6,0(R7)
         STH   R6,0(R9)
         B     WRITALL
         SPACE 3
TRYAG    EQU   *
*                            DELETE THE LAST BLOCK AND SCAN BACLWARDS
*
*                            BECAUSE
*                            BECAUSE OF MIDDLE SEGMENT OR INDING SEGM
         WTO   'TRUNCATING LAST BLOCK',ROUTCDE=(11)
         SH    R7,=H'4'
         SNAP   DCB=SYSPRINT,STORAGE=((7),(5))
         L    R9,FRSTOUT
         SR    R6,R6
         ST    R6,NXLASTIN
         MVC   TRYAG(4),ABENDA
         B     SCANLAST
         SPACE 3
ABEND    L     R6,NXLASTIN
         LTR   R6,R6
         BZ    ABENDIT
         ST    R6,FRSTOUT
         MVC   NXLASTIN(4),LASTIN
         LR    R9,R6
         B     SCANLAST
         SPACE 3
ABENDIT  EQU   *
         WTO   'UNABLE TO TRACE BACK LAST LRECL',ROUTCDE=(11)
         WTO   'REPROCESS MY OUTPUT-LOGOUT',ROUTCDE=(11)
         SR    R6,R6
         ST    R6,RECORDCT
         ST    R6,FRSTOUT
         STC    R6,CHECKPT
         STC    R6,MVSW
         MVC   CHECKPT+1(15),CHECKPT
         CLOSE  (LOGIN,,LOGOUT)
         B     START
         SPACE 3
WRITALL  L     R6,FRSTOUT
         LTR   R6,R6
         BZ    ABEND3
         BAL   R11,WRITOUT
         L     R6,NXLASTIN
         LTR   R6,R6
         BZ    CLOSEUP
         BAL   R11,WRITOUT
         L     R6,LASTIN
         LTR   R6,R6
         BZ    CLOSEUP
         BAL   R11,WRITOUT
         SPACE 3
CLOSEUP  EQU   *
         CVD   R2,DBLWD
         UNPK  WTO1+8(8),DBLWD
         OI    WTO1+15,X'F0'
WTO1     WTO   'XXXXXXXX BLOCKS IN',ROUTCDE=(11)
         CVD   R3,DBLWD
         UNPK  WTO2+8(8),DBLWD(8)
         OI    WTO2+15,X'F0'
WTO2     WTO   'XXXXXXXX BLOCKS OUT',ROUTCDE=(11)
         L    R7,RECORDCT
         BCTR  R7,0
         CVD   R7,DBLWD
         UNPK    WTO3+8(15),DBLWD(8)
         OI    WTO3+22,C'0'
WTO3     WTO   'XXXXXXXXXXXXXXX--LAST RECORD ENCOUNTERED',ROUTCDE=(11)
CONT2    EQU   *
         CLC   ANSWER,=C'YES'
         BNE   NOREC
         TIME
         ST    R0,RECTIME
         ST    R1,RECDATE
         LA    R6,REC6
         WRITE OUTDECB,SF,LOGOUT,(6),MF=E
         CHECK OUTDECB
NOREC    EQU   *
         CLOSE (LOGIN,,LOGOUT,,SYSPRINT)
         CLI   CHECKPT+3,X'00'
         BNE   CONT1
         MVC   WTO5+8(13),=C'****  NO  ***'
         B    WTO5
CONT1    UNPK  WTO5+8(5),CHECKPT(4)
         OI    WTO5+12,C'0'
         UNPK  WTO5+14(7),CHECKPT+4(4)
         OI    WTO5+20,C'0'
WTO5     WTO   '     /        LAST USABLE CHECK POINT',ROUTCDE=(11)
         WTO   'SUCCESSFUL EOF TO OUTPUT LOG',ROUTCDE=(11)
         TERME
         SPACE 3
ABEND3   WTO   'NO DATA ON INPUT TAPE',ROUTCDE=(11)
         ABEND 231,DUMP
         SPACE 3
WRITOUT  EQU   *
         CLC   0(2,R6),=H'4'
         BNH   CLOSEUP
         ST    R7,HOLDIT
         LH    R7,0(R6)
         SH    R7,=H'4'
         AR    R7,R6
         MVC   RECOUNT,0(R7)
         L     R7,RECOUNT
         AH    R7,=H'1'
         ST    R7,RECOUNT
         L     R7,HOLDIT
         WRITE OUTDECB,SF,LOGOUT,(6),MF=E
         CHECK OUTDECB
         LA    R3,1(R3)
         BR    R11
         SPACE 3
CHECK    EQU   *
         L    R7,RECORDCT
         LR    R5,R10
         LH    R6,0(R5)
         LA    R6,0(R6,R5)
         LA    R5,4(R5)
LOOK     EQU   *
         TM    MVSW,X'03'               ANY PREVIOUS INCOMPLETE
         BNZ   MVSWON                     CHECKPOINT DATA
         CLI   2(R5),X'00'
         BE    LOOK2
         CLI   2(R5),X'02'
         BE   LOOK2
         B     CHKSEQ
LOOK2    CLI   4(R5),X'40'
         BNE   CHKSEQ
*              SETRMINE IF WANTED DATE AND TIME STAMP ARE WITHIN THIS
*                  SEGMENT.  RECOVER THE DATA OR SET FOR ITS RECOVERY
         LA    R14,5(R5)
*
*              DETERMINE IF CHECKPOINT RECORD TYPE IS IN SEGMENT
*
         CR    R14,R6
         BL    COMPARE1
         OI    MVSW,X'01'         NOPE...
         B    CHKSEQ
*                                 CHECKTYPE IS IN THE CURRENT SEGMENT
COMPARE1 EQU   *
         CLI   0(R14),X'01'
         BNE   ISIT98
*
*        CHECK FOR SPECIAL CASE OF SPANNED RECORD WHERE
*              RECORD TYPE WAS NOT IN FIRST SEGMENT
*
         TM    MVSW,X'01'
         BNO   COMPARE
         NI    MVSW,X'FE'
         LA    R14,11(,R5)
         B     MVC2
COMPARE  EQU   *
         LA    R14,20(,R5)              IS ALL OF DATE/TIME IN SEGMENT
         CR    R14,R6
         BL    MOVEALL            YES...
*                                 NO.  ATTEMT TO RECOVER PART OF IT.
         OI    MVSW,X'02'         MOPE...
         LR    R14,R6
         LA    R15,12(R5)
*                                 IS ANY OF IT HERE????
         SR    R14,R15
         BNP   MOVEALL1           NOPE....
         BZ    MOVEALL1           NOPE....
*              PICK UP FIRST PARE AND SET IP TO GET REST
         LA    R15,7
         SR    R15,R14
         STC   R15,RESTMOVE
         LA    R15,4
         ST    R15,DISP
         LA    R15,CHECKPT+8(R14)
         ST    R15,PICKUP
         BCTR  R14,0
         STC   R14,MVC1+1
         LA    R14,12(R5)
         B     MVC0
         SPACE 3
*              ALL OF IT OUTSEDE THIS SEGMENT
MOVEALL1 EQU   *
         MVI   RESTMOVE,X'07'
         LA    R15,12
         SH    R15,0(R5)
         ST    R15,DISP
         LA    R15,CHECKPT+8
         ST    R15,PICKUP
         B    CHKSEQ
         SPACE 3
*              ALL OF IT IS INSIDE THIS SEGMENT
MOVEALL  EQU   *
         LA    R14,12(R5)
MVC2     EQU   *
         MVI   MVC1+1,X'07'
MVC0     LA    R15,CHECKPT+8
MVC1     MVC   0(0,R15),0(R14)
         B    CHKSEQ
         SPACE 3
*              TRAP UNCOMPLETE EVENTS
MVSWON   EQU   *
         TM    MVSW,X'01'
         BNO   MVSW2ON
         LA    R14,4(R5)
         B    COMPARE1
MVSW2ON  EQU   *
         LR    R14,R5
         NI    MVSW,X'FD'
         A    R14,DISP
         MVC   MVC1+1(1),RESTMOVE
         L     R15,PICKUP
         B    MVC1
         SPACE 3
ISIT98   EQU   *
         CLI   0(R14),X'98'
         BNE   CHKSEQ
         OI    MVSW,X'80'
         EJECT
CHKSEQ   EQU   *
         CLI   2(R5),X'00'
         BE    COMPARE2
         CLI   2(R5),X'01'
         BE    SAVE4
         CLI   2(R5),X'02'
         BE    COMPAR20
*              THIS LEAVES        X'11'
         SPACE 1
SAVE4    EQU   *
         AH    R5,0(R5)
         SH    R5,=H'4'
         MVC   RCDSAVE(4),0(R5)
         B     ENDOFBLK
         SPACE 1
COMPAR20 EQU   *
         CLC   0(2,R5),=H'8'
         BNL   COMPARE2
         LA    R14,4(R5)
         L     R15,RCDSAVE
         AH    R5,0(R5)
LOOPX    EQU   *
         SLL   R15,8
         IC    R15,0(R14)
         LA    R14,1(R14)
         CR    R14,R5
         BL    LOOPX
         ST    R15,RCDSAVE
         LA    R14,RCDSAVE
         SH    R5,=H'4'
         B     COMPAR2A
         SPACE 1
COMPARE2 EQU *
         AH    R5,0(R5)
         SH    R5,=H'4'
         LR    R14,R5
         SPACE 1
COMPAR2A EQU   *
         C     R7,0(R14)
         BNE   PSUDOEOF
         LA    R7,1(R7)
         LA    R5,4(R5)
COMPAR2B CR    R5,R6
         BNL   ENDOFBLK
         B     LOOK
         SPACE 3
PSUDOEOF EQU   *
         LTR    R7,R7
         BZ    INITR7
         ST    R7,RECORDCT
         WTO   'SEQUENCE ERROR DETECTED TAKING EOF EXIT',ROUTCDE=(11)
         B     ENDOFILE
         SPACE 3
ENDOFBLK EQU   *
         ST    R7,RECORDCT
         TM    MVSW,X'80'               WAS THIS A X'98' RECORD TYPE
         BNO   EOB2                     IF IT WAS, IT HAS NOW PASSED
         MVC   CHECKPT(8),CHECKPT+8     SEQ CHECK AND THIS CHECKPOINT
         NI    MVSW,X'7F'               IS USABLE FOR RESTART
EOB2     EQU   *
         BR    R11
         SPACE 3
INITR7   EQU   *
         L    R7,0(R14)
         CVD   R7,DBLWD
         UNPK  WTO4+8(15),DBLWD(8)
         OI    WTO4+22,X'F0'
WTO4     WTO  'XXXXXXXXXXXXXXX  FIRST SEQUENCE NUMBER',ROUTCDE=(11)
         B    COMPAR2A
         EJECT
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,RECFM=VBA,MACRF=(W),           X
               BLKSIZE=882,LRECL=125
LOGIN    DCB   DDNAME=LOGIN,DSORG=PS,RECFM=VB,MACRF=(R),               C
               EODAD=ENDOFILE,SYNAD=SYNAD
LOGOUT   DCB   DDNAME=LOGOUT,DSORG=PS,RECFM=VB,MACRF=(W)
         LTORG
DBLWD    DC    D'0'
LASTIN   DC    F'0'
NXLASTIN DC    F'0'
FRSTOUT  DC    F'0'
ABENDA   B     ABEND
DISP     DC    F'00'
PICKUP   DC    F'00'
RECORDCT  DC   F'0'
CHECKPT  DC    XL16'00'
MVSW     DC    X'00'
RESTMOVE DC    X'00'
RCDSAVE  DC    F'0'
SAVEAREA DC    18F'0'
BUF1     DS    F
BUF2     DS    F
BUF3     DS    F
REC6     DC    X'00240000'
         DS    0CL32
         DC    X'00200000'
RECTYPE  DC    X'06'
         DS    CL3
RECSYS   DS    CL4
         DC    X'FFFFFF'
RECID    DC    X'07'
         DS    F
RECDATE  DS    CL4
RECTIME  DS    CL4
RECOUNT  DS    CL4
PARM     DS    0CL7
SYSTEM   DC    CL4'IMS '
ANSWER   DC    CL3'YES'
BLKLEN   DC    H'0'
HOLDIT   DS    F
         END
