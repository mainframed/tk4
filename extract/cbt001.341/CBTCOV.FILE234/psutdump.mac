PSUTDUMP CSECT
*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*
*   PRODUCTION SERVICES UTILITY DUMP                                *
*                                                                   *
*   FOR INFORMATION CALL: GEORGE RAMAS                              *
*                         OAKLAND, CALIFORNIA 94610                 *
*                         (415)-763-0540                            *
*           STARTING 1990 (510)                                     *
*                                                                   *
*   THIS UTILITY IS SUPPORTED BY OPERATIONS SUPPORT SERVICES        *
*                                                                   *
*   ***IMPORTANT NOTE***                                            *
*                                                                   *
*   WHEN YOU ARE ASSEMBLING THIS SOURCE, YOU MUST HAVE THE IBM      *
*   MACRO 'IEFJFCBN' AND 'IEFJFCBX' IN YOUR MACLIB.  THESE ARE IBM  *
*   COPYWRITTEN MACROS AND CANNOT BE COPIED TO A NON IBM SHOP.      *
*   UNDER PENALTY OF THE BIG BLUE BOX.                              *
*                                                                   *
*   PSUTDUMP IS A SUPER IEBGENER. IT WILL ALLOW YOU TO HAVE         *
*   UP TO 99 INPUTS AND 99 OUTPUTS.  IT CAN BE USED FOR BACKUP      *
*   PURPOSES, PRINTING OR COPY DATA SETS OR ANY COMBINATION         *
*   TOGETHER. FOR RESTART PURPOSES, YOUR SHOULD KEEP YOUR PRINT     *
*   AND BACKUP STEPS SEPARATE.                                      *
*                                                                   *
*   PSUTDUMP WILL ACCEPT A PARM OF 'CHK'. IF PRESENT, THIS          *
*   PARM WILL PREVENT THE OPENING OF OUTPUT DATASETS IF THE         *
*   INPUT DATASET IS EMPTY.  DO NOT USE THIS PARAMETER WHEN         *
*   STACKING OUTPUT DATA SETS.  THIS IS TO BE USED ONLY WHEN        *
*   CREATING SEPARATE AND INDIVIDUAL OUTPUTXX TAPE DATA SETS.       *
*   WITH THE UNIT PARAMETER OF 'UNIT=(TAPE,,DEFER)' SHOULD BE USED. *
*                                                                   *
*   IF DCB INFORMATION IS NOT SPECIFIED FOR OUTPUTXX IT WILL BE     *
*   COPIED FROM INPUTXX.  ALL RECFM MUST BE IDENTICAL IN THE FIRST  *
*   CHARACTER (IE, 'F'BA , 'V'B, 'F'BM OR 'U' FOR ALL OUTPUTXX.     *
*   YOU CANNOT HAVE A FB GOING TO A VB OR VISA VERSA.               *
*                                                                   *
*   YOU CAN SHORTEN THOUGH AN LRECL ON YOUR INPUTTXX IF YOUR        *
*   SPECIFY THE SHORTEN LRECL ON THE DCB FOR OUTPUTXX.              *
*   THIS CAN BE USED ONLY WHEN A SMALLER PORTION OF A RECORD        *
*   INSTEAD THE ENTIRE LRECL.                                       *
*                                                                   *
*   THIS PROGRAM WILL ALSO DISPLAY IN YOUR SYSOUT SECTION AT THE    *
*   END OF YOUR LISTING THE FOLLOWING INFORMATION:                  *
*                                                                   *
*   EXECUTING JOB NAME                                              *
*   PROC STEP                                                       *
*   JOB STEP                                                        *
*   DDNAME (INPUTXX OUTPUTXX)                                       *
*   INPUTXX RECORD COUNT (SHOWS SEPARATE RECORD COUNTS FOR ALL      *
*                         CANCATENATED DATA SETS) DISK OR TAPE(S)   *
*                                                                   *
*   OUTPUTXX RECORD COUNT (WILL DISPLAY A SEPARATE RECORD COUNT     *
*                          IF OUTPUT IS TAPE, THEN A FINAL TOTAL)   *
*                                                                   *
*   RECFM-LRECL-BLKSIZE FOR INPUTXX AND OUTPUTXX DD                 *
*                                                                   *
*   WHEN MULTIPLE OUTPUT FILES ARE CREATED (REEL 1, 2, 3),          *
*   RECORDS COUNTS FOR EACH SEPARATE TAPE WILL BE DISPLAYED.        *
*   THIS WILL SHOW OUTPUTXX STATISTICS FOR UP TO 20 OUTPUT TAPES    *
*   AND A GRAND TOTAL FOR THE OUTPUT FILE WILL SHOW A FINAL TOTAL   *
*   NUMBER OF RECORDS TOTALLY WRITTEN TO YOUR OUTPUT DD.            *
*                                                                   *
*   USE THE FOLLOWING CODING RULES TO CREATE YOUR JCL.              *
*                                                                   *
*   WHEN DCB IS NOT SPECIFIED, IT WILL BE COPIED FROM INPUT         *
*                                                                   *
*     USE WHEN CREATING BACKUP FILES                                *
*                                                                   *
*     //BACKUP  EXEC PGM=PSUTDUMP                                   *
*     //*                                                           *
*     //INPUT01    DD  DSN=FNBP.TRAN1025.CHECKING,                  *
*     //               DISP=OLD                                     *
*     //*                                                           *
*     //INPUT02    DD  DSN=FNBP.DEPS2510.CHECKING,                  *
*     //               DISP=OLD                                     *
*                                                                   *
*     //OUTPUT01   DD  DSN=FNBP.BKUP4505.CHECKING(+1),              *
*     //               DISP=(,CATLG,DELETE),                        *
*     //               UNIT=TAPE,                                   *
*     //               VOL=(,RETAIN),                               *
*     //               LABEL=(1,SL,RETPD=30),                       *
*     //               DCB=(FNBDSCB,RECFM=FB,LRECL=80,BLKSIZE=9440) *
*     //*                                                           *
*     //OUTPUT02   DD  DSN=FNBP.DEPS4504.CHECKING,                  *
*     //               DISP=(,CATLG,DELETE),                        *
*     //               UNIT=AFF=OUTPUT01,                           *
*     //               VOL=REF=*.OUTPUT01,                          *
*     //               LABEL=(2,SL,RETPD=30),                       *
*     //               DCB=(FNBDSCB,RECFM=FB,LRECL=80,BLKSIZE=9440) *
*     //*                                                           *
*     //SYSOUT     DD  SYSOUT=*                                     *
*     //SYSUDUMP   DD  DUMMY   **USE ONLY WHEN NECESSARY**          *
*                                                                   *
*      THIS STEP WILL CREATE AN OUTPUT ONLY IF THERE IS INPUT DATA. *
*      DO NOT STACK FILES WHEN USING PARM VALUE, LABEL ERRORS MAY   *
*      OCCUR IF DATA IS MISSING BETWEEN LABEL FILES.                *
*                                                                   *
*     //CHECK   EXEC PGM=PSUTDUMP,PARM='CHK'                        *
*     //*                                                           *
*     //INPUT01    DD  DSN=FNBP.TRAN1025.CHECKING,                  *
*     //               DISP=OLD                                     *
*     //*                                                           *
*     //INPUT02    DD  DSN=FNBP.DEPS2510.CHECKING,                  *
*     //               DISP=OLD                                     *
*                                                                   *
*     //OUTPUT01   DD  DSN=FNBP.BKUP6505.SAVINGS(+1),               *
*     //               DISP=(,CATLG,DELETE),                        *
*     //               UNIT=(TAPE80,,DEFER),                        *
*     //               LABEL=(1,SL,RETPD=30),                       *
*     //               DCB=(FNBDSCB,RECFM=FB,LRECL=80,BLKSIZE=9440) *
*     //*                                                           *
*     //OUTPUT02   DD  DSN=FNBP.DEPS4504.SLIPS(+1),                 *
*     //               DISP=(,CATLG,DELETE),                        *
*     //               UNIT=(TAPE80,,DEFER),                        *
*     //               LABEL=(1,SL,RETPD=30),                       *
*     //               DCB=(FNBDSCB,RECFM=FB,LRECL=80,BLKSIZE=9440) *
*     //*                                                           *
*     //SYSOUT     DD  SYSOUT=*                                     *
*     //SYSUDUMP   DD  DUMMY   **USE ONLY WHEN NECESSARY**          *
*                                                                   *
*     USE WHEN COPYING INPUT DATA TO DISK (TAPE AND DISK CAN BE     *
*                                          MIXED)                   *
*                                                                   *
*     //COPYDSK EXEC PGM=PSUTDUMP                                   *
*     //*                                                           *
*     //INPUT01    DD  DSN=FNBP.HOSP5015.PATIENTS,                  *
*     //               DISP=OLD                                     *
*     //*                                                           *
*     //INPUT02    DD  DSN=FNBP.PAYM6025.LATE,                      *
*     //               DISP=OLD                                     *
*                                                                   *
*     //OUTPUT01   DD  DSN=FNBP.HOSP5015.PATIENTS(+1),              *
*     //               DISP=(,CATLG,DELETE),                        *
*     //               UNIT=SYSDA,                                  *
*     //               SPACE=(TRK,(3,1),RLSE),                      *
*     //               DCB=(FNBDSCB,RECFM=FB,LRECL=80,BLKSIZE=9440) *
*     //*                                                           *
*     //OUTPUT02   DD  DSN=FNBP.PAYM6025.LATE(+1),                  *
*     //               DISP=(,CATLG,DELETE),                        *
*     //               UNIT=SYSDA,                                  *
*     //               SPACE=(TRK,(3,1),RLSE),                      *
*     //               DCB=(FNBDSCB,RECFM=FB,LRECL=80,BLKSIZE=9440) *
*     //*                                                           *
*     //SYSOUT     DD  SYSOUT=*                                     *
*     //SYSUDUMP   DD  DUMMY   **USE ONLY WHEN NECESSARY**          *
*                                                                   *
*                                                                   *
*     USE WHEN SENDING DATA TO PRINT                                *
*                                                                   *
*     //PRINT1 EXEC PGM=PSUTDUMP                                    *
*     //*                                                           *
*     //INPUT01    DD  DSN=FNBP.CHEK3005.REGISTER,                  *
*     //               DISP=OLD                                     *
*     //*                                                           *
*     //INPUT02    DD  DSN=FNBP.HOSP3005.PATIENTS,                  *
*     //               DISP=OLD                                     *
*     //*                                                           *
*     //INPUT03    DD  DSN=FNBP.BANK3005.LOANS,                     *
*     //               DISP=OLD                                     *
*     //*                                                           *
*     //OUTPUT01   DD  SYSOUT=(C,,8011),                            *
*     //               DCB=BLKSIZE=133                              *
*     //*                                                           *
*     //OUTPUT02   DD  SYSOUT=(C,,8011),                            *
*     //               DCB=BLKSIZE=133                              *
*     //*                                                           *
*     //OUTPUT03   DD  SYSOUT=(C,,8011),                            *
*     //               DCB=BLKSIZE=133                              *
*                                                                   *
* >>OR //   DCB=(RECFM=FBA,LRECL=133,BLKSIZE=9310)                  *
*                                                                   *
*     //SYSOUT     DD  SYSOUT=*                                     *
*     //SYSUDUMP   DD  DUMMY   **USE ONLY WHEN NECESSARY**          *
*                                                                   *
*                                                                   *
*      PSUTDUMP ERROR MESSAGE:                                      *
*                                                                   *
*      PSUTDUMP10 ** NUMBERING SEQUENCE IS NOT CORRECT FOR INPUTXX  *
*                     AND OUTPUTXX CHECK NUMBERING OR SPELLING      *
*                                                                   *
*      PSUTDUMP20 ** YOU HAVE DUPLICATE DD NUMBERS IN YOUR INPUTXX  *
*                     OR OUTPUTXX STATEMENTS                        *
*                                                                   *
*      PSUTDUMP30 ** ARE THERE EQUAL NUMBERING DD STATEMENTS FOR    *
*                     INPUTXX AND OUTPUTXX OR MISSPELLED DD         *
*                     STATEMENTS.                                   *
*                                                                   *
*      PSUTDUMP40 ** LRECL SPECIFIED ON OUTPUT DOES NOT MATCH       *
*                      INPUT DCB                                    *
*                                                                   *
*      PSUTDUMP60 ** INVALID PARM VALUE SPECIFIED                   *
*                                                                   *
*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*
*        SOURCE MODIFICATION ON 02/07/80 TO ALLOW FOR INPUT(TAPE)
*          TO OUTPUT(DASD,UNIT RECORD, OR TAPE)
*
*    SOURCE MODIFICATION ON 12/13/88 TO DISPLAY RECORD COUNTS
*    SOURCE MODIFICATION ON 05/08/89 TO COPY DCB FROM INPUT TO OUTPUT
*
*
*        REGISTER ASSIGNMENT
*        0 - STANDARD LINKAGE
*        1 - STANDARD LINKAGE
*        2 - TRT MAY DESTROY THE CONTENTS OF THIS REG
*        3 - INITIALIZATION AND WORKINK REG
*        4 - "               "    "      "
*        5 - INPUT DCB
*        6 - OUTPUT DCB
*        7 - OUTPUT DD TABLE
*        8 - INPUT DD TABLE
*        9 -
*       10 -
*       11 - FIRST BASE
*       12 - SECOND BASE
*
*
         MACRO
         IEFJFCBE &DSECT=YES    */
*%JFCBEL1 : ;
*
*/********************************************************************/
*/*                                                                  */
*/*  MODULE NAME = IEFJFCBE                                          */
*/*                                                                  */
*/*  DESCRIPTIVE NAME =  JOB FILE CONTROL BLOCK EXTENSION            */
*/*                      FOR 3800 PRINTER KEYWORDS                   */
*/*                                                                  */
*/*  COPYRIGHT  =                                                    */
*/*               5740-XC6                                       @R1C*/
*/*               CONTAINS RESTRICTED MATERIALS OF IBM           @R1C*/
*/*               (C) COPYRIGHT IBM CORP.  1979, 1986            @R1C*/
*/*               LICENSED MATERIAL - PROPERTY OF IBM            @R1C*/
*/*               REFER TO COPYRIGHT INSTRUCTIONS                @R1C*/
*/*               FORM NUMBER G120-2083.                         @R1C*/
*/*                                                                  */
*/*  STATUS     = OS/VS2 JBB2220                                 @R1C*/
*/*                                                                  */
*/*  INVOCATION =                                                    */
*/*      BAL  - IEFJFCBE                                             */
*/*             USING ON JFCBE GIVES ADDRESSABILITY FOR ALL SYMBOLS. */
*/*             DSECT IS PRODUCED UNLESS DSECT=NO IS SPECIFIED.      */
*/*      PL/S - %INCLUDE SYSLIB(IEFJFCBE)                        @R1A*/
*/*             DCL JFCBEPTR PTR(31)                                 */
*/*                                                                  */
*/*  FUNCTION   = THIS MACRO MAPS THE JOB FILE CONTROL BLOCK         */
*/*               EXTENSION FOR THE 3800.                            */
*/*                                                                  */
*/*  CHANGE ACTIVITY   =  R1                                     @R1C*/
*/*                                                                  */
*/*  $R1 = PA20586 JBB2220 851014 PDD7: PA20586                  @R1A*/
*/********************************************************************/
*/* A - PROLOGUE                                                 @R1A*/
*/*------------------------------------------------------------------*/
*%GOTO JFCBEL2;  /*
         SPACE 1
         AIF   ('&DSECT' EQ 'NO').JFCBE10
JFCBE    DSECT  , -                                            @Y17CP9A
         AGO   .JFCBE20
.JFCBE10 ANOP
         DS    0F -                                            @Y17CP9A
JFCBE    EQU   * -                                             @Y17CP9A
.JFCBE20 ANOP
JFCBEXTR DS    CL3 -          SVA FOR NEXT EXTENSION
*                             BLOCK                            @Y17CP9A
JFCBETYP DS    B -            TABLE ID OF JFCBE                @Y17CP9A
JFCBEID  EQU   41 -           JFCBE IDENTIFIER                 @Y17CP9A
JFCBFLAG DS    B -            FLAG BYTE                        @Y17CP9A
JFCBEOPN EQU   X'80' -        USER OPEN EXIT MODIFIED THIS BLOCK
*                             (MDC304)                         @Y17CP9A
JFCBE003 EQU   X'40',,C'X' -  RESERVED                         @Y17CP9A
JFCBE004 EQU   X'20',,C'X' -  RESERVED                         @Y17CP9A
JFCBE005 EQU   X'10',,C'X' -  RESERVED                         @Y17CP9A
JFCBE006 EQU   X'08',,C'X' -  RESERVED                         @Y17CP9A
JFCBCFS  EQU   X'04' -        CONTINUOUS FORM STACKING         @Y17CP9A
JFCBBST  EQU   X'02' -        BURST FORM STACKING              @Y17CP9A
JFCBE007 EQU   X'01',,C'X' -  RESERVED                         @Y17CP9A
JFCIDTRC DS    FL1 -          TABLE REFERENCE CHARACTER FOR COPY
*                             MODIFICATION PATTERN             @Y17CP9A
JFCBE008 DS    XL1 -          RESERVED                         @Y17CP9A
JFCIMTOT DS    FL1 -          NUMBER OF IMAGE COPIES           @Y17CP9A
JFCBMAGT DS    CL4 -          FORMS IMAGE CARTRIDGE ID         @Y17CP9A
JFCMODIF DS    CL4 -          COPY MODIFICATION ID             @Y17CP9A
JFCBE009 DS    CL4 -          RESERVED  (MDC301)               @Y17CP9A
JFCBTRS1 DS    CL4 -          NAME OF TRANSLATE TABLE 1        @Y17CP9A
JFCBTRS2 DS    CL4 -          NAME OF TRANSLATE TABLE 2        @Y17CP9A
JFCBTRS3 DS    CL4 -          NAME OF TRANSLATE TABLE 3        @Y17CP9A
JFCBTRS4 DS    CL4 -          NAME OF TRANSLATE TABLE 4        @Y17CP9A
JFCGROUP DS    0CL8 -         OUTPUT DISTRIBUTION IN GROUPS    @Y17CP9A
JFCGRP1  DS    FL1 -          FOR FIRST GROUP, NUMBER OF TIMES EACH
*                             PAGE IS PRINTED BEFORE GOING TO NEXT
*                             PAGE                             @Y17CP9A
JFCGRP2  DS    FL1 -          FOR SECOND GROUP, NUMBER OF TIMES EACH
*                             PAGE IS PRINTED BEFORE GOING TO NEXT
*                             PAGE                             @Y17CP9A
JFCGRP3  DS    FL1 -          FOR THIRD GROUP, NUMBER OF TIMES EACH
*                             PAGE IS PRINTED BEFORE GOING TO NEXT
*                             PAGE                             @Y17CP9A
JFCGRP4  DS    FL1 -          FOR FOURTH GROUP, NUMBER OF TIMES EACH
*                             PAGE IS PRINTED BEFORE GOING TO NEXT
*                             PAGE                             @Y17CP9A
JFCGRP5  DS    FL1 -          FOR FIFTH GROUP, NUMBER OF TIMES EACH
*                             PAGE IS PRINTED BEFORE GOING TO NEXT
*                             PAGE                             @Y17CP9A
JFCGRP6  DS    FL1 -          FOR SIXTH GROUP, NUMBER OF TIMES EACH
*                             PAGE IS PRINTED BEFORE GOING TO NEXT
*                             PAGE                             @Y17CP9A
JFCGRP7  DS    FL1 -          FOR SEVENTH GROUP, NUMBER OF TIMES EACH
*                             PAGE IS PRINTED BEFORE GOING TO NEXT
*                             PAGE                             @Y17CP9A
JFCGRP8  DS    FL1 -          FOR EIGHTH GROUP, NUMBER OF TIMES EACH
*                             PAGE IS PRINTED BEFORE GOING TO NEXT
*                             PAGE                             @Y17CP9A
JFCBE010 DS    XL132 -        RESERVED                         @Y17CP9A
JFCBELEN EQU   *-JFCBE -      LENGTH OF JFCB EXTENSION
*                             (MDC302)                         @Y17CP9A
JFCBEULN EQU   JFCBE010-JFCBE LENGTH OF USED FIELDS IN JFCB EXTENSION
*                             (MDC303)                         @Y17CP9A
         MEND  , -    */
*%JFCBEL2 : ;
*
*DECLARE
*  1 JFCBE    BASED(JFCBEPTR)  BDY(WORD),/*                  @Y17CP9A*/
*   2 JFCBEXTR    CHAR(3),               /* SVA FOR NEXT EXTENSION
*                                           BLOCK            @Y17CP9A*/
*   2 JFCBETYP    BIT(8),                /* TABLE ID OF
*                                           JFCBE            @Y17CP9A*/
*%JFCBEID='''29''X';                     /* JFCBE IDENTIFIER @Y17CP9A*/
*   2 JFCBFLAG    BIT(8),                /* FLAG BYTE        @Y17CP9A*/
*    3 JFCBEOPN BIT(1),                  /* USER OPEN EXIT MODIFIED
*                                           THIS BLOCK
*                                           (MDC304)         @Y17CP9A*/
*    3 JFCBE003 BIT(1),                  /* RESERVED         @Y17CP9A*/
*    3 JFCBE004 BIT(1),                  /* RESERVED         @Y17CP9A*/
*    3 JFCBE005 BIT(1),                  /* RESERVED         @Y17CP9A*/
*    3 JFCBE006 BIT(1),                  /* RESERVED         @Y17CP9A*/
*    3 JFCBCFS  BIT(1),                  /* CONTINUOUS FORM
*                                           STACKING         @Y17CP9A*/
*    3 JFCBBST  BIT(1),                  /* BURST FORM
*                                           STACKING         @Y17CP9A*/
*    3 JFCBE007 BIT(1),                  /* RESERVED         @Y17CP9A*/
*   2 JFCIDTRC    BIT(8),                /* TABLE REFERENCE CHARACTER
*                                           FOR COPY MODIFICATION
*                                           PATTERN          @Y17CP9A*/
*   2 JFCBE008    CHAR(1),               /* RESERVED         @Y17CP9A*/
*   2 JFCIMTOT    PTR(8),                /* NUMBER OF IMAGE
*                                           COPIES           @Y17CP9A*/
*   2 JFCBMAGT    CHAR(4) BDY(WORD),     /* FORMS IMAGE CARTRIDGE
*                                           ID               @Y17CP9A*/
*   2 JFCMODIF    CHAR(4) BDY(WORD),     /* COPY MODIFICATION
*                                           ID               @Y17CP9A*/
*   2 JFCBE009    CHAR(4) BDY(WORD),     /* RESERVED
*                                           (MDC301)         @Y17CP9A*/
*   2 JFCBTRS1    CHAR(4) BDY(WORD),     /* NAME OF TRANSLATE TABLE
*                                           1                @Y17CP9A*/
*   2 JFCBTRS2    CHAR(4) BDY(WORD),     /* NAME OF TRANSLATE TABLE
*                                           2                @Y17CP9A*/
*   2 JFCBTRS3    CHAR(4) BDY(WORD),     /* NAME OF TRANSLATE TABLE
*                                           3                @Y17CP9A*/
*   2 JFCBTRS4    CHAR(4) BDY(WORD),     /* NAME OF TRANSLATE TABLE
*                                           4                @Y17CP9A*/
*   2 JFCGROUP    CHAR(8) BDY(WORD),     /* OUTPUT DISTRIBUTION IN
*                                           GROUPS           @Y17CP9A*/
*    3 JFCGRP1     PTR(8),               /* FOR FIRST GROUP, NUMBER
*                                           OF TIMES EACH PAGE IS
*                                           PRINTED BEFORE GOING TO
*                                           NEXT PAGE        @Y17CP9A*/
*    3 JFCGRP2     PTR(8),               /* FOR SECOND GROUP, NUMBER
*                                           OF TIMES EACH PAGE IS
*                                           PRINTED BEFORE GOING TO
*                                           NEXT PAGE        @Y17CP9A*/
*    3 JFCGRP3     PTR(8),               /* FOR THIRD GROUP, NUMBER
*                                           OF TIMES EACH PAGE IS
*                                           PRINTED BEFORE GOING TO
*                                           NEXT PAGE        @Y17CP9A*/
*    3 JFCGRP4     PTR(8),               /* FOR FOURTH GROUP, NUMBER
*                                           OF TIMES EACH PAGE IS
*                                           PRINTED BEFORE GOING TO
*                                           NEXT PAGE        @Y17CP9A*/
*    3 JFCGRP5     PTR(8),               /* FOR FIFTH GROUP, NUMBER
*                                           OF TIMES EACH PAGE IS
*                                           PRINTED BEFORE GOING TO
*                                           NEXT PAGE        @Y17CP9A*/
*    3 JFCGRP6     PTR(8),               /* FOR SIXTH GROUP, NUMBER
*                                           OF TIMES EACH PAGE IS
*                                           PRINTED BEFORE GOING TO
*                                           NEXT PAGE        @Y17CP9A*/
*    3 JFCGRP7     PTR(8),               /* FOR SEVENTH GROUP, NUMBER
*                                           OF TIMES EACH PAGE IS
*                                           PRINTED BEFORE GOING TO
*                                           NEXT PAGE        @Y17CP9A*/
*    3 JFCGRP8     PTR(8),               /* FOR EIGHTH GROUP, NUMBER
*                                           OF TIMES EACH PAGE IS
*                                           PRINTED BEFORE GOING TO
*                                           NEXT PAGE        @Y17CP9A*/
*   2 JFCBE010    CHAR(132) BDY(WORD);   /* RESERVED         @Y17CP9A*/
*%JFCBELEN='LENGTH(JFCBE)';              /* LENGTH OF JFCB EXTENSION
*                                           (MDC302)         @Y17CP9A*/
*%JFCBEULN='LENGTH(JFCBE) - LENGTH(JFCBE010)'; /* LENGTH OF USED
*                                           FIELDS IN JFCB EXTENSION
*                                           (MDC303)         @Y17CP9A*/
*
*
*        %GOTO JFCBL1;          /*
         MACRO
         IEFJFCBN &LIST=NO   ,   */
*%JFCBL1 : ;
*
*/********************************************************************/
*/*                                                                  */
*/*  MODULE NAME = IEFJFCBN                                      @L1A*/
*/*                                                                  */
*/*  DESCRIPTIVE NAME = JOB FILE CONTROL BLOCK                   @L1A*/
*/*                                                                  */
*/*  COPYRIGHT = 5740-XC6                                    @YA05186*/
*/*              CONTAINS RESTRICTED MATERIALS OF IBM            @P2C*/
*/*              (C) COPYRIGHT IBM CORP. 1983, 1986              @P2C*/
*/*              LICENSED MATERIAL - PROPERTY OF IBM             @P2C*/
*/*              REFER TO COPYRIGHT INSTRUCTIONS                 @P2C*/
*/*              FORM NUMBER G120-2083.                          @P2C*/
*/*                                                                  */
*/*  STATUS = OS/VS2 JBB2220                                 @YA05186*/
*/*                                                                  */
*/*  MODULE TYPE = MACRO                                         @L1A*/
*/*                                                                  */
*/*  INVOCATION =                                                @L1C*/
*/*      BAL  - IEFJFCBN                                         @P2C*/
*/*             A DSECT CARD SHOULD PRECEDE THE MACRO CALL.          */
*/*             INFMJFCB GIVES ADDRESSABILITY FOR ALL SYMBOLS.       */
*/*      PL/S - %INCLUDE SYSLIB(IEFJFCBN)                        @P2C*/
*/*             DCL JFCBPTR PTR(31)                              @P2C*/
*/*                                                                  */
*/*  NOTES =                                                     @L1A*/
*/*      F.E.'S                                                      */
*/*          MICROFICHE LISTING - IEFJFCBN                           */
*/*                                                                  */
*/*      DEVELOPERS                                                  */
*/*          BAL LISTING  - SPECIFY LIST=YES ON MACRO CALL.          */
*/*          PL/S LISTING - SPECIFY %IHALIST='YES' BEFORE INCLUDE.   */
*/*                                                                  */
*/*      FOR INTEGRATION A LISTING SHOULD NOT BE REQUESTED.          */
*/*                                                                  */
*/*  CHANGE ACTIVITY = L1,H1,P1,P2,YA05186                   @YA05186*/
*/*   $L1= ANSI78 JBB2110 820702 PD43: SUPPORT FOR ANSI-78       @L1A*/
*/*   $H1= 3480 JBB2125 830420 PDFB: PHYSICAL BLOCK IDENTIFIER   @H1A*/
*/*                                  FOR 3480 TAPE SUPPORT       @H1A*/
*/*   $P1= PAJ0028 JBB2125 830420 PDFB: FIX DECLARE FOR JFCRESRV @P1A*/
*/*   $P2= PA20586 JBB2220 851014 PDD7: PA20586                  @P2A*/
*/*                                                                  */
*/********************************************************************/
*/*  C - CLEANUP THE PROLOGUE                                    @P2A*/
*/*  C - ALL REFERENCES TO 'TTR' (COMMENTS) CHANGED TO 'SVA'     @P2A*/
*/*  A - CHANGE DECLARE FOR JFCRESRV TO EQUAL DECLARE SIZE       @P1A*/
*/*  A - SUPPORT FOR PHYSICAL BLOCK IDENTIFIER                   @H1A*/
*/*  A - SUPPORT FOR LRECL=NNNNNK FOR ANSI--ONE BIT USED TO      @L1A*/
*/*      INDICATE THAT K WAS SPECIFIED ON THE LRECL PARAMETER.   @L1A*/
*/*  C - CHANGED BYTE JFCBLTYP SO THAT RESERVED BIT JFCRSV38 @YA03334*/
*/*      IS NOW JFCDSEQN WHICH INDICATES DATASET SEQUENCE    @YA03334*/
*/*      NUMBER WAS SPECIFIED ON THE LABEL= PARAMETER.       @YA03334*/
*/*  A - DECLARED STRUCTURE TO THE JFCAMPTR FIELD. THE       @YA05186*/
*/*      STRUCTURE SHOWS THE PLACEMENT OF THE SVA WITHIN     @YA05186*/
*/*      THE 4 CHARACTER FIELD.                              @YA05186*/
*/*------------------------------------------------------------------*/
*%GOTO JFCBL2;  /*
         PUSH  PRINT
         AIF   ('&LIST' EQ 'YES').JFCB1
         PRINT OFF
.JFCB1   ANOP
         SPACE 1
         DS    0F
INFMJFCB EQU   *
JFCBQNAM DS    0CL8 -    PROCESS QUEUE NAME SPECIFIED BY THE QNAME
*                        KEYWORD  (TCAM)
JFCBDSNM DS    CL44 -    DATA SET NAME
JFCIPLTX DS    0CL7 -    MODULE NAME OF NETWORK CONTROL PROGRAM (TCAM)
*                                                                ICB391
JFCBELNM DS    CL8 -     ELEMENT NAME OR RELATIVE GENERATION NUMBER.
*                        TYPE OF AREA (INDEX, PRIME OR OVERFLOW) FOR
*                        AN INDEXED SEQUENTIAL DATA SET ONLY.
JFCBTSDM DS    B -       JOB MANAGEMENT/DATA MANAGEMENT INTERFACE
JFCCAT   EQU   X'80' -   DATA SET IS CATALOGED
JFCVSL   EQU   X'40' -   VOLUME SERIAL LIST HAS BEEN CHANGED
JFCSDS   EQU   X'20' -   DATA SET IS A SYSIN OR SYSOUT DATA SET
JFCTTR   EQU   X'10' -   A JOB STEP IS TO BE RESTARTED.  USE JFCBOTTR
*                        INSTEAD OF DS1LSTAR FIELD TO REPOSITION DATA
*                        SET IF AUTOMATIC STEP RESTART OCCURS.  (THIS
*                        JOB HAD ABEND PROCESSING FOR A DATA SET OPENED
*                        FOR MOD.)
JFCNWRIT EQU   X'08' -   DO NOT WRITE BACK THE JFCB DURING OPEN
*                        PROCESSING
JFCNDSCB EQU   X'04' -   DO NOT MERGE DSCB OR LABEL FIELDS INTO THIS
*                        JFCB
JFCNDCB  EQU   X'02' -   DO NOT MERGE DCB FIELDS INTO THIS JFCB
JFCPAT   EQU   X'01' -   THE PATTERNING DSCB IS COMPLETE
JFCBDSCB DS    CL3 -     SVA OF THE FORMAT 1 DSCB FOR DATA SET
*                        PART ON THE FIRST VOLUME OF THE DATA SET
*                                                                ICB398
JFCFCBID DS    0CL4 -    FORMS CONTROL BUFFER IMAGE IDENTIFICATION FOR
*                        THE 3211 PRINTER OR DATA PROTECTION IMAGE
*                        IDENTIFICATION FOR THE 3525 CARD PUNCH WITH
*                        THE READ AND PRINT FEATURES OR FORMAT RECORD
*                        ID                                      MDC007
JFCBFRID DS    0CL4 -    LAST 4 CHARACTERS OF A PDS MEMBER TO BE USED
*                        IN THE INTERPRETATION OF DOCUMENTS READ BY
*                        3886 DEVICE FOR THIS STEP               MDC024
JFCRBIDO DS    0CL4 -    THE PHYSICAL LOCATION ON THE TAPE       @H1A
*                        OF THE FIRST STANDARD-LABEL HEADER      @H1A
*                        RECORD TO BE PROCESSED BY OPEN          @H1A
JFCAMCRO DS    BL2 -     VSAM CHECKPOINT/RESTART OPTION INDICATORS
*                                                                ICB438
JFCAMSTR DS    H -       NUMBER OF STRINGS                       ICB438
JFCBADBF DS    H -       NUMBER OF DATA BUFFERS                  ICB438
JFCNLREC DS    H -       LOGICAL RECORD LENGTH FOR VSAM          ICB438
JFCVINDX DS    H -       MASS STORAGE SYSTEM COMMUNICATOR (MSSC) VOLUME
*                        SELECTION INDEX  (MDC308)             @Z30LP9A
JFCBLTYP DS    B -       LABEL TYPE
JFCDSEQN EQU   X'80' -   DATASET SEQUENCE NUMBER WAS CODED ON LABEL
*                        PARAMETER                             @YA03334
JFCBAL   EQU   X'40' -   AMERICAN NATIONAL STANDARD TAPE LABELS (AL OR
*                        IF BIT 4 IS ALSO ON, AUL)
JFCBLTM  EQU   X'20' -   UNLABELLED TAPE CREATED BY DOS MAY HAVE
*                        LEADING TAPE MARK.  OPEN/CLOSE/EOV AND RESTART
*                        MUST SPACE OVER A TAPE MARK IF ONE EXISTS.
*                                                                ICB398
JFCBLP   EQU   X'10' -   BYPASS LABEL PROCESSING
JFCSUL   EQU   X'0A' -   USER LABEL
JFCNSL   EQU   X'04' -   NONSTANDARD LABEL
JFCSL    EQU   X'02' -   STANDARD LABEL
JFCNL    EQU   X'01' -   NO LABEL
JFCBOTTR DS    0CL3 -    DASD MOD DATA SET - IF AUTOMATIC STEP RESTART
*                        WAS REQUESTED, SVA OF THE END-OF-DATA
*                        INDICATOR EXISTING WHEN THE DATA SET WAS FIRST
*                        OPENED DURING THE ORIGINAL EXECUTION OF THE
*                        CURRENT STEP
JFCBUFOF DS    FL1 -     TAPE DATA SET - THIS FIELD CONTAINS THE BUFFER
*                        OFFSET (DCB SUBPARAMETER VALUE)
JFCBFOFL EQU   X'80' -   IF 1, THE OFFSET EQUALS FOUR AND THE BUFFER
*                        OFFSET FIELD OF EACH BLOCK (D-FORMAT RECORDS)
*                        CONTAINS THE BLOCK LENGTH (SPECIFIED BY
*                        BUFOFF=L).
*                        IF 0, THE OFFSET IS AS SPECIFIED IN THE
*                        REMAINING SEVEN BITS AND THE BUFFER OFFSET
*                        FIELD OF EACH BLOCK DOES NOT CONTAIN THE
*                        BLOCK LENGTH.
JFCFUNC  DS    0B -      FUNCTION INDICATORS FOR THE 3525 CARD PUNCH
*                        (SPECIFIED BY THE FUNC PARAMETER)       ICB392
JFCFNCBI EQU   X'80' -   I - INTERPRET (PUNCH AND PRINT TWO LINES)
*                                                                ICB392
JFCFNCBR EQU   X'40' -   R - READ                                ICB392
JFCFNCBP EQU   X'20' -   P - PUNCH                               ICB392
JFCFNCBW EQU   X'10' -   W - PRINT                               ICB392
JFCFNCBD EQU   X'08' -   D - DATA PROTECTION                     ICB392
JFCFNCBX EQU   X'04' -   X - THIS DATA SET IS TO BE PRINTED.  THIS MAY
*                        BE CODED WITH PW OR RPW TO DISTINGUISH THE
*                        DATA SET TO BE PRINTED FROM THE DATA SET TO
*                        BE PUNCHED.                             ICB392
JFCFNCBT EQU   X'02' -   T - TWO-LINE PRINT SUPPORT REQUEST.  THE
*                        SECOND PRINT LINE IS LOCATED ON CARD LINE
*                        THREE.                                  ICB392
JFCRSV31 EQU   X'01',,C'X' RESERVED
JFCBFLSQ DS    H -       FOR MAGNETIC TAPE DEVICES, FILE SEQUENCE
*                        NUMBER
JFCBVLSQ DS    H -       VOLUME SEQUENCE NUMBER
JFCBMASK DS    0CL8 -    DATA MANAGEMENT MASK
JFCBOPS1 DS    BL5 -     OPEN ROUTINE INTERNAL SWITCHES
JFCBFLG1 DS    B -       FLAG BYTE
JFCSTAND EQU   X'80' -   VOLUME LABEL PROCESSING STANDARD
JFCSLCRE EQU   X'40' -   CREATION OF A STANDARD LABEL IS NECESSARY
JFCSLDES EQU   X'20' -   DESTRUCTION OF A STANDARD LABEL IS NECESSARY
JFCDUAL  EQU   X'10' -   DUAL-DENSITY CHECK DETECTED
JFCOPEN  EQU   X'0F' -   OPEN ROUTINE INTERNAL SWITCHES
JFCBPWBP EQU   X'01' -   PASSWORD BYPASS INDICATOR               MDC010
JFCBFLG2 DS    B -       FLAG BYTE OF OPEN SWITCHES
JFCINOP  EQU   X'80' -   TREAT THE INOUT OPTION OF OPEN AS INPUT
JFCOUTOP EQU   X'40' -   TREAT THE OUTIN OPTION OF OPEN AS OUTPUT
JFCDEFER EQU   X'20' -   SET ONLY IN A JFCB RECORDED IN A DATA SET
*                        DESCRIPTOR RECORD (DSDR) BY THE CHECKPOINT
*                        ROUTINE.  INDICATES THAT THE DATA SET RELATED
*                        TO THE JFCB IS BEING PROCESSED SEQUENTIALLY,
*                        AT THE CHECKPOINT, ON A VOLUME OTHER THAN THE
*                        VOLUME ON WHICH PROCESSING BEGAN IN THE
*                        CURRENT STEP.  WHEN RESTART OCCURS, THIS BIT
*                        CAUSES DEFERRED VOLUME MOUNTING.
JFCNRPS  EQU   X'20' -   USE BY OPEN ROUTINES - SET TO INDICATE THAT
*                        THIS DATA SET RESIDES ON A NON-RPS DEVICE.
*                        RESET TO ZERO WHEN OPEN PROCESSING IS
*                        COMPLETED.                              ICB495
JFCMODNW EQU   X'10' -   DISPOSITION OF THIS DATA SET HAS BEEN CHANGED
*                        FROM MOD TO NEW.  DISPOSITION (IN JFCBIND2)
*                        WILL BE RESTORED TO MOD AFTER OPEN.
JFCSDRPS EQU   X'08' -   USE SEARCH DIRECT FOR ROTATIONAL POSITION
*                        SENSING (RPS) DEVICES                   ICB398
JFCTRACE EQU   X'04' -   GTF TRACE IS TO OCCUR DURING OPEN/CLOSE/EOV
*                        AND DYNAMIC ALLOCATION PROCESSING OF DCB
*                                                                ICB392
JFCBBUFF EQU   X'02' -   INDICATOR TO OPEN THAT A NON-ZERO VALUE IN
*                        JFCBOTTR IS NOT TO PREVENT THE NORMAL STORING
*                        BY OPEN OF A SVA IN JFCBOTTR.  BEFORE OPEN -
*                        JFCBUFOF (OFFSET 67) CONTAINS A BUFFER OFFSET
*                        OR INVALID INFORMATION RESULTING FROM A
*                        JFCB-TO-JFCB MERGE.  AFTER OPEN - OPEN MAY
*                        HAVE STORED A SVA IN JFCBOTTR (OFFSET 67), IN
*                        WHICH CASE OPEN WILL HAVE SET THIS BIT TO
*                        ZERO.
JFCRCTLG EQU   X'01' -   OPEN HAS UPDATED THE SVA.  SCHEDULER STEP
*                        TERMINATION ROUTINE IS TO RECATALOG THIS DATA
*                        SET AND PLACE IN THE CATALOG ENTRY THE DSCB
*                        SVA CONTAINED IN JFCBDSCB IF THIS DATA SET IS
*                        CATALOGED.                              ICB398
JFCBOPS2 DS    B -       OPEN ROUTINE INTERNAL SWITCHES
JFCBCRDT DS    CL3 -     DATA SET CREATION DATE (YDD, Y=YEAR AND
*                        DD=DAY)
JFCBXPDT DS    CL3 -     DATA SET EXPIRATION DATE (YDD)
JFCBIND1 DS    B -       INDICATOR BYTE 1
JFCRLSE  EQU   X'C0' -   RELEASE EXTERNAL STORAGE
JFCLOC   EQU   X'30' -   DATA SET HAS BEEN LOCATED
JFCADDED EQU   X'0C' -   NEW VOLUME HAS BEEN ADDED TO THE DATA SET
JFCGDG   EQU   X'02' -   DATA SET IS A MEMBER OF A GENERATION DATA
*                        GROUP
JFCPDS   EQU   X'01' -   DATA SET IS A MEMBER OF A PARTITIONED DATA SET
         SPACE 1
********************************************************************
*
*    THE FOLLOWING FOUR BIT SETTINGS ARE FROM AN OLD MAPPING MACRO
*      THESE  FOUR WILL BE REMOVED IN A FUTURE RELEASE. USE THE
*      FOREGOING SYMBOLS FOR JFCBIND1
*
********************************************************************
JFCBRLSE EQU   X'40' -   BITS 0 & 1 - EXTERNAL STORAGE RELEASE
*                        INDICATOR
JFCBLOCT EQU   X'10' -   BITS 2 & 3 - DATA SET HAS BEEN LOCATED
JFCBNEWV EQU   X'04' -   BITS 4 & 5 - NEW VOLUME ADDED TO DATA SET
JFCBPMEM EQU   X'01' -   BITS 6 & 7 - DATA SET IS A MEMBER OF A
*                        PDS OR GDG
********************************************************************
         SPACE 1
JFCBIND2 DS    B -       INDICATOR BYTE 2
JFCDISP  EQU   X'C0' -   BIT PATTERN FOR NEW, MOD, OLD
JFCNEW   EQU   X'C0' -   NEW DATA SET
JFCMOD   EQU   X'80' -   MOD DATA SET
JFCOLD   EQU   X'40' -   OLD DATA SET
JFCBRWPW EQU   X'30' -   PASSWORD IS REQUIRED TO WRITE BUT NOT TO READ
*                        (DATA SET SECURITY)
JFCSECUR EQU   X'10' -   PASSWORD IS REQUIRED TO READ OR TO WRITE
*                        (DATA SET SECURITY)
JFCSHARE EQU   X'08' -   SHARED DATA SET
JFCENT   EQU   X'04' -   DELETE THIS JFCB BEFORE ALLOCATION FOR A
*                        RESTARTED GENERATION DATA GROUP
JFCREQ   EQU   X'02' -   STORAGE VOLUME REQUESTED
JFCTEMP  EQU   X'01' -   TEMPORARY DATA SET
         SPACE 1
********************************************************************
*
*   THE FOLLOWING THREE BIT SETTINGS ARE FROM AN OLD MAPPING MACRO
*      THESE THREE WILL BE REMOVED IN A FUTURE RELEASE. USE THE
*      FOREGOING SYMBOLS FOR JFCBIND2
*
********************************************************************
JFCBSTAT EQU   X'40' -   BITS 0 & 1 - DATA SET STATUS (NEW,
*                        OLD OR MOD)
JFCBSCTY EQU   X'10' -   BIT 3 DATA SET SECURITY INDICATOR
JFCBGDGA EQU   X'04' -   BITS 4 & 5 - THIS JFCB IS A MEMBER OF A
*                        GDG-ALL REQUEST
********************************************************************
         SPACE 1
JFCAMPTR DS    0A -      POINTER TO AMPBLK FOR ADDITIONAL VSAM
*                        PARAMETERS                              ICB438
JFCAMSVA DS    0CL3 -    SVA OF THE AMPX CONTROL BLOCK EXTENSION
*                        TO THE JFCB                            YA05186
JFCBUFNO DS    0XL1 -    NUMBER OF BUFFERS REQUIRED FOR THIS DATA SET
*                        (ACCESS METHODS OTHER THAN TCAM AND QTAM)
JFCBUFIN DS    0XL1 -    BITS 0-3 CONTAIN THE NUMBER OF BUFFERS
*                        ASSIGNED INITIALLY FOR RECEIVING OPERATIONS
*                        FOR EACH LINE IN A LINE GROUP  (TCAM)
JFCBFOUT DS    0XL1 -    BITS 4-7 CONTAIN THE NUMBER OF BUFFERS
*                        ASSIGNED INITIALLY FOR SENDING OPERATIONS FOR
*                        EACH LINE IN A LINE GROUP  (TCAM)
JFCBUFRQ DS    XL1 -     NUMBER OF BUFFERS REQUIRED FOR EACH LINE
*                        (QTAM)
JFCBGNCP DS    0FL1 -    FOR GAM, THIS FIELD IS USED FOR THE NUMBER OF
*                        IOB'S CONSTRUCTED BY THE OPEN ROUTINE.
*                        MAXIMUM NUMBER IS 99.                   MDC025
JFCBHIAR DS    0BL1 -    BUFFER POOL LOCATION IN MAIN STORAGE
*                        (HIERARCHY)
JFCBFALN DS    0BL1 -    BUFFER ALIGNMENT
JFCBFTEK DS    B -       BUFFERING TECHNIQUE
JFCHIER  EQU   X'84' -   BITS 0 AND 5 DESCRIBE MAIN STORAGE HIERARCHY.
*                        BOTH BITS OFF, HIERARCHY 0.
*                        BIT 0 OFF AND BIT 5 ON, HIERARCHY 1.
JFCSIM   EQU   X'40' -   S - SIMPLE BUFFERING
JFCBBFTA EQU   X'60' -   A - FOR QSAM LOCATE MODE PROCESSING OF SPANNED
*                        RECORDS, AUTOMATIC RECORD AREA CONSTRUCTION
*                        DURING LOGICAL RECORD INTERFACE PROCESSING.
*                        OPEN IS TO CONSTRUCT A RECORD AREA IF IT
*                        AUTOMATICALLY CONSTRUCTS BUFFERS.
JFCBBFTR EQU   X'20' -   R - FOR BSAM CREATE BDAM PROCESSING OR BDAM
*                        PROCESSING OF UNBLOCKED SPANNED RECORDS,
*                        SOFTWARE TRACK OVERFLOW.  OPEN FORMS A SEGMENT
*                        WORK AREA POOL AND STORES THE ADDRESS OF THE
*                        SEGMENT WORK AREA CONTROL BLOCK IN THE DCBEOBW
*                        FIELD OF THE DATA CONTROL BLOCK.  WRITE USES
*                        A SEGMENT WORK AREA TO WRITE A RECORD AS ONE
*                        OR MORE SEGMENTS.
*                        FOR BSAM INPUT PROCESSING OF UNBLOCKED SPANNED
*                        RECORDS WITH KEYS, RECORD OFFSET PROCESSING.
*                        READ READS ONE RECORD SEGMENT INTO THE RECORD
*                        AREA.  THE FIRST SEGMENT OF A RECORD IS
*                        PRECEDED IN THE RECORD AREA BY THE KEY.
*                        SUBSEQUENT SEGMENTS ARE AT AN OFFSET EQUAL TO
*                        THE KEY LENGTH.
JFCEXC   EQU   X'10' -   E - EXCHANGE BUFFERING
JFCDYN   EQU   X'08' -   DYNAMIC BUFFERING
JFCHIER1 EQU   X'04' -   HIERARCHY 1 MAIN STORAGE
JFCDWORD EQU   X'02' -   D - DOUBLE WORD BOUNDARY
JFCFWORD EQU   X'01' -   F - FULL WORD NOT A DOUBLE WORD BOUNDARY
JFCBUFL  DS    H -       BUFFER LENGTH
JFCEROPT DS    B -       ERROR OPTION.  DISPOSITION OF PERMANENT ERRORS
*                        IF USER RETURNS FROM A SYNCHRONOUS ERROR
*                        EXIT.  (QSAM)
JFCACC   EQU   X'80' -   ACCEPT
JFCSKP   EQU   X'40' -   SKIP
JFCABN   EQU   X'20' -   ABNORMAL END OF TASK
JFCTOPT  EQU   X'10' -   ON-LINE TERMINAL TEST (BTAM)            ICB349
JFCRSV02 EQU   X'08',,C'X' RESERVED
JFCRSV03 EQU   X'04',,C'X' RESERVED
JFCRSV04 EQU   X'02',,C'X' RESERVED
JFCRSV05 EQU   X'01',,C'X' RESERVED
JFCTRTCH DS    0CL1 -    TAPE RECORDING TECHNIQUE FOR 7-TRACK TAPE
JFCEVEN  EQU   X'23' -   E - EVEN PARITY
JFCTRAN  EQU   X'3B' -   T - EOD/EBCDIC TRANSLATION
JFCCONV  EQU   X'13' -   C - DATA CONVERSION
JFCTREV  EQU   X'2B' -   ET - EVEN PARITY AND TRANSLATION
JFCKEYLE DS    0XL1 -    DIRECT ACCESS KEY LENGTH
JFCCODE  DS    0BL1 -    CONVERSION CODE (PAPER TAPE)
JFCNOCON EQU   X'80' -   N - NO CONVERSION
JFCBCD   EQU   X'40' -   I - IBM BCD
JFCFRI   EQU   X'20' -   F - FRIDEN
JFCBUR   EQU   X'10' -   B - BURROUGHS
JFCNCR   EQU   X'08' -   C - NATIONAL CASH REGISTER
JFCASCII EQU   X'04' -   A - ASCII (8-TRACK)
JFCTTY   EQU   X'02' -   T - TELETYPE
JFCRSV32 EQU   X'01',,C'X' RESERVED
JFCMODE  DS    0BL1 -    MODE OF OPERATION (CARD READER, CARD PUNCH)
*                                                                ICB394
JFCSTACK DS    0BL1 -    STACKER SELECTION (CARD READER, CARD PUNCH)
JFCBIN   EQU   X'80' -   C - COLUMN BINARY MODE
JFCEBCD  EQU   X'40' -   E - EBCDIC MODE
JFCMODEO EQU   X'20' -   0 - OPTICAL MARK READ MODE (3505 ONLY)  ICB394
JFCMODER EQU   X'10' -   R - READ COLUMN ELIMINATE MODE (3505 AND 3525
*                        WITH READ FEATURE)                      ICB394
JFCRSV06 EQU   X'08',,C'X' RESERVED
JFCRSV07 EQU   X'04',,C'X' RESERVED
JFCTWO   EQU   X'02' -   2 - STACKER TWO
JFCONE   EQU   X'01' -   1 - STACKER ONE
JFCPRTSP DS    B -       NORMAL PRINTER SPACING
JFCSPTHR EQU   X'19' -   3 - SPACE THREE LINES
JFCSPTWO EQU   X'11' -   2 - SPACE TWO LINES
JFCSPONE EQU   X'09' -   1 - SPACE ONE LINE
JFCSPNO  EQU   X'01' -   0 - NO SPACING
JFCDEN   DS    B -       TAPE DENSITY - 2400/3400 SERIES MAGNETIC TAPE
*                        UNITS
JFC200   EQU   X'03' -   7-TRACK 200 BPI
JFC556   EQU   X'43' -   7-TRACK 556 BPI
JFC800   EQU   X'83' -   7-TRACK AND 9-TRACK 800 BPI
JFC1600  EQU   X'C3' -   9-TRACK 1600 BPI
JFC6250  EQU   X'D3' -   9-TRACK 6250 BPI                        ICB474
JFCBABFS DS    0FL3 -    TOTAL BUFFER SIZE FOR ALL VSAM BUFFERS  ICB438
JFCLIMCT DS    0CL3 -    SEARCH LIMIT (BDAM)
         DS    CL1 -     RESERVED
JFCTRKBL DS    CL2 -     DATA SET OPENED FOR MOD - IF AUTOMATIC STEP
*                        RESTART WAS REQUESTED, TRACK BALANCE EXISTING
*                        WHEN THE DATA SET WAS FIRST OPENED DURING THE
*                        ORIGINAL EXECUTION OF THE CURRENT STEP
JFCDSORG DS    0BL2 -    DATA SET ORGANIZATION BEING USED
JFCDSRG1 DS    B -       BYTE 1 OF JFCDSORG
JFCORGIS EQU   X'80' -   INDEXED SEQUENTIAL
JFCORGPS EQU   X'40' -   PHYSICAL SEQUENTIAL
JFCORGDA EQU   X'20' -   DIRECT
JFCORGCX EQU   X'10' -   BTAM OR QTAM LINE GROUP                 MDC011
JFCORGCQ EQU   X'08' -   QTAM DIRECT ACCESS MESSAGE QUEUE        MDC012
JFCORGMQ EQU   X'04' -   QTAM PROBLEM PROGRAM MESSAGE QUEUE      MDC013
JFCORGPO EQU   X'02' -   PARTITIONED
JFCORGU  EQU   X'01' -   UNMOVABLE - THE DATA CONTAINS LOCATION
*                        DEPENDENT INFORMATION
JFCDSRG2 DS    B -       BYTE 2 OF JFCDSORG
JFCORGGS EQU   X'80' -   GRAPHICS
JFCORGTX EQU   X'40' -   TCAM LINE GROUP                         MDC014
JFCORGTQ EQU   X'20' -   TCAM MESSAGE QUEUE                      MDC015
JFCRSV13 EQU   X'10',,C'X' RESERVED, BINARY ZERO
JFCORGAM EQU   X'08' -   VSAM                                    ICB438
JFCORGTR EQU   X'04' -   TCAM 3705                               MDC016
JFCRSV15 EQU   X'02',,C'X' RESERVED, BINARY ZERO
JFCRSV16 EQU   X'01',,C'X' RESERVED, BINARY ZERO
JFCRECFM DS    B -       RECORD FORMAT
JFCFMREC EQU   X'C0' -   HIGH-ORDER TWO BITS OF JFCRECFM TO BE TESTED
*                        FOR RECORD FORMAT
JFCUND   EQU   X'C0' -   U - UNDEFINED
JFCFIX   EQU   X'80' -   F - FIXED
JFCVAR   EQU   X'40' -   V - VARIABLE
JFCRCFM  EQU   X'E0' -   RECORD FORMAT (USASI/USASCII)
JFCVARD  EQU   X'20' -   D - VARIABLE (FORMAT D FOR USASI/USASCII)
JFCRFO   EQU   X'20' -   T - TRACK OVERFLOW
JFCRFB   EQU   X'10' -   B - BLOCKED - MAY NOT OCCUR WITH UNDEFINED
JFCRFS   EQU   X'08' -   S - FOR FIXED LENGTH RECORD FORMAT, STANDARD
*                        BLOCKS.  NO TRUNCATED BLOCKS OR UNFILLED
*                        TRACKS ARE EMBEDDED IN THE DATA SET.
*                        FOR VARIABLE LENGTH RECORD FORMAT, SPANNED
*                        RECORDS.
JFCCHAR  EQU   X'06' -   CONTROL CHARACTER
JFCASA   EQU   X'04' -   A - AMERICAN NATIONAL STANDARD (ASA) CONTROL
*                        CHARACTER
JFCMAC   EQU   X'02' -   M - MACHINE CODE CONTROL CHARACTER
JFCNOCC  EQU   X'00' -   NO CONTROL CHARACTER
JFCOPTCD DS    B -       OPTION CODES
         SPACE 1
*              QSAM - BSAM - BPAM
JFCWVCSP EQU   X'80' -   W - WRITE VALIDITY CHECK
JFCALLOW EQU   X'40' -   U - ALLOW A DATA CHECK CAUSED BY AN INVALID
*                        CHARACTER (1403 PRINTER WITH UCS FEATURE)
JFCPCIBT EQU   X'20' -   C - CHAINED SCHEDULING USING THE PROGRAM
*                        CONTROLLED INTERRUPTION
JFCBCKPT EQU   X'10' -   BYPASS EMBEDDED DOS CHECKPOINT RECORDS ON TAPE
*                                                                ICB398
JFCRSV18 EQU   X'08',,C'X' RESERVED
JFCREDUC EQU   X'04' -   Z - USE REDUCED ERROR RECOVERY PROCEDURE
*                        (MAGNETIC TAPE)   (EXCP ALSO)
JFCSRCHD EQU   X'04' -   USE SEARCH DIRECT (SD), INSTEAD OF SEARCH
*                        PREVIOUS, ON ROTATIONAL POSITION SENSING (RPS)
*                        DEVICE.  (DIRECT ACCESS)
JFCRSV21 EQU   X'02',,C'X' RESERVED
JFCOPTJ  EQU   X'01' -   J - 3800 CONTROL CHARACTER  (MDC301)  @Z40MP9A
         SPACE 1
*              BISAM - QISAM
JFCWVCIS EQU   X'80' -   W - WRITE VALIDITY CHECK
JFCRSV17 EQU   X'40',,C'X' RESERVED
JFCMAST  EQU   X'20' -   M - MASTER INDEXES
JFCIND   EQU   X'10' -   I - INDEPENDENT OVERFLOW AREA
JFCCYL   EQU   X'08' -   Y - CYLINDER OVERFLOW AREA
JFCRSV19 EQU   X'04',,C'X' RESERVED
JFCDEL   EQU   X'02' -   L - DELETE OPTION
JFCREORG EQU   X'01' -   R - REORGANIZATION CRITERIA
         SPACE 1
*              BDAM
JFCWVCBD EQU   X'80' -   W - WRITE VALIDITY CHECK
JFCOVER  EQU   X'40' -   TRACK OVERFLOW
JFCEXT   EQU   X'20' -   E - EXTENDED SEARCH
JFCFEED  EQU   X'10' -   F - FEEDBACK
JFCACT   EQU   X'08' -   A - ACTUAL ADDRESSING
JFCRSV20 EQU   X'04',,C'X' RESERVED
JFCRSV22 EQU   X'02',,C'X' RESERVED
JFCREL   EQU   X'01' -   R - RELATIVE BLOCK ADDRESSING
         SPACE 1
*              USASI/USASCII
JFCOPTQ  EQU   X'08' -   EBCDIC TO ASCII OR ASCII TO EBCDIC
*                        TRANSLATION REQUIRED
         SPACE 1
*              TCAM
JFCSDNAM EQU   X'80' -   SOURCE OR DESTINATION NAME PRECEDES MESSAGE
*                        (AFTER CONTROL BYTE)
JFCWUMSG EQU   X'40' -   WORK UNIT IS A MESSAGE (DEFAULT WORK UNIT IS
*                        A RECORD)
JFCCBWU  EQU   X'20' -   CONTROL BYTE PRECEDES WORK UNIT
JFCBLKSI DS    0H -      MAXIMUM BLOCK SIZE
JFCBUFSI DS    0H -      MAXIMUM BUFFER SIZE
JFCBAXBF DS    H -       NUMBER OF INDEX BUFFERS (VSAM)          ICB438
JFCAMSYN DS    0CL8 -    MODULE NAME FOR SYNAD ROUTINE FOR VSAM  ICB438
JFCLRECL DS    H -       LOGICAL RECORD LENGTH
JFCNCP   DS    0FL1 -    NUMBER OF CHANNEL PROGRAMS.  NUMBER OF READ OR
*                        WRITE REQUESTS WHICH MAY BE ISSUED PRIOR TO A
*                        CHECK.  NUMBER OF IOB'S GENERATED.
*                        (MAXIMUM NUMBER IS 99.)
*                        NOTE - GAM USES JFCBFTEK FOR THIS INFORMATION
*                        AND DOES NOT USE THIS FIELD AT ALL.
JFCBUFMX DS    FL1 -     THE MAXIMUM NUMBER OF BUFFERS TO BE USED FOR
*                        DATA TRANSFER FOR EACH LINE IN THIS LINE
*                        GROUP  (TCAM)
JFCBFSEQ DS    0FL1 -    TAPE POSITIONING INFORMATION FOR CHECKPOINT
*                        RESTART.  THIS FIELD IS USED TO PASS A
*                        PHYSICAL FILE SEQUENCE COUNT FROM CHECKPOINT
*                        TO RESTART.  THE COUNT TELLS THE PHYSICAL
*                        POSITION OF THE TAPE VOLUME THAT WAS BEING
*                        PROCESSED WHEN THE CHECKPOINT WAS TAKEN.
*                                                               SA60703
JFCNTM   DS    0FL1 -    THE NUMBER OF TRACKS THAT DETERMINE THE
*                        DEVELOPMENT OF A MASTER INDEX.  MAXIMUM
*                        NUMBER IS 99.  (ISAM)
JFCPCI   DS    B -       PROGRAM-CONTROLLED INTERRUPTION (PCI) FLAG
*                        BYTE  (TCAM)
JFCPCIX1 EQU   X'80' -   PCI=(X,) RECEIVE OPERATIONS             ICB473
JFCPCIX2 EQU   X'40' -   PCI=(,X) SEND OPERATIONS
*                        X INDICATES THAT AFTER THE FIRST BUFFER IS
*                        FILLED (ON RECEIVE OPERATIONS) OR EMPTIED (ON
*                        SEND OPERATIONS), A PCI OCCURS DURING THE
*                        FILLING OR EMPTYING OF THE NEXT BUFFER.  THE
*                        FIRST BUFFER REMAINS ALLOCATED AND ANOTHER
*                        IS ALLOCATED.                           ICB473
JFCPCIA1 EQU   X'20' -   PCI=(A,) RECEIVE OPERATIONS
JFCPCIA2 EQU   X'10' -   PCI=(,A) SEND OPERATIONS
*                        A INDICATES THAT AFTER THE FIRST BUFFER IS
*                        FILLED (ON RECEIVE OPERATIONS) OR EMPTIED (ON
*                        SEND OPERATIONS), A PCI OCCURS DURING THE
*                        FILLING OR EMPTYING OF THE NEXT BUFFER.  THE
*                        FIRST BUFFER IS DEALLOCATED.  A BUFFER IS
*                        ALLOCATED IN PLACE OF THE DEALLOCATED BUFFER.
JFCPCIN1 EQU   X'08' -   PCI=(N,) RECEIVE OPERATIONS
JFCPCIN2 EQU   X'04' -   PCI=(,N) SEND OPERATIONS
*                        N INDICATES THAT NO PCI'S ARE TAKEN DURING
*                        FILLING (ON RECEIVE OPERATIONS) OR EMPTYING
*                        (ON SEND OPERATIONS) OF BUFFERS.  BUFFERS
*                        ARE DEALLOCATED AT THE END OF TRANSMISSION.
JFCPCIR1 EQU   X'02' -   PCI=(R,) RECEIVE OPERATIONS
JFCPCIR2 EQU   X'01' -   PCI=(,R) SEND OPERATIONS
*                        R INDICATES THAT AFTER THE FIRST BUFFER IS
*                        FILLED (ON RECEIVE OPERATIONS) OR EMPTIED (ON
*                        SEND OPERATIONS), A PCI OCCURS DURING THE
*                        FILLING OR EMPTYING OF EACH SUCCEEDING BUFFER.
*                        THE COMPLETED BUFFER IS DEALLOCATED, BUT NO
*                        NEW BUFFER IS ALLOCATED TO TAKE ITS PLACE.
         SPACE 2
*******************************************************************
*
*              NORMAL 108 SEGMENT
*
JFCRESRV DS    0BL4 -    FIRST BYTE CONTAINS NUMBER OF BYTES FOR TIME
*                        OF DAY.  SECOND BYTE CONTAINS NUMBER OF BYTES
*                        FOR DATE.  THIRD BYTE CONTAINS NUMBER OF
*                        BYTES FOR OUT SEQ.  FOURTH BYTE CONTAINS
*                        NUMBER OF BYTES IN.  (TCAM)
JFCRBIDC DS    0CL4 -    THE PHYSICAL LOCATION OF WHAT WILL BE THE @H1A
*                        FIRST STANDARD-LABEL HEADER RECORDS OF    @H1A
*                        THE NEXT DATASET ON THE TAPE VOLUME       @H1A
JFCRKP   DS    H -       THE RELATIVE POSITION OF THE FIRST BYTE OF THE
*                        KEY WITHIN EACH LOGICAL RECORD.  MAXIMUM VALUE
*                        IS LOGICAL RECORD LENGTH MINUS KEY LENGTH.
JFCCYLOF DS    XL1 -     THE NUMBER OF TRACKS TO BE RESERVED ON EACH
*                        CYLINDER TO HOLD RECORDS THAT OVERFLOW FROM
*                        OTHER TRACKS ON THAT CYLINDER.  MAXIMUM VALUE
*                        IS 99.
JFCDBUFN DS    CL1 -     RESERVED
JFCINTVL DS    XL1 -     INTENTIONAL DELAY, IN SECONDS, BETWEEN
*                        PASSES THROUGH A POLLING LIST (QTAM)
*              END OF NORMAL 108 SEGMENT
*******************************************************************
         SPACE 2
*******************************************************************
*
*              108 PRINTER SEGMENT
*
*        NOTE  THIS SEGMENT REPLACES THE NORMAL 108 SEGMENT IF
*              THE DD STATEMENT USES THE UCS PARAMETER.
*
         ORG   JFCRESRV
JFCUCSID DS    CL4 -     NAME OF THE UCS IMAGE TO BE LOADED
JFCUCSOP DS    B -       OPERATION OF THE UCS IMAGE TO BE LOADED
JFCBEXTP EQU   X'80' -   JFCB EXTENSION PRESENT FOR 3800 DEVICE
*                        (MDC302)                              @Z40MP9A
JFCFOLD  EQU   X'40' -   UCS IMAGE IS TO BE LOADED IN THE FOLD MODE
JFCRSV25 EQU   X'20',,C'X' RESERVED
JFCVER   EQU   X'10' -   UCS IMAGE IS TO BE VERIFIED
JFCFCBAL EQU   X'08' -   FORMS ARE TO BE ALIGNED
JFCFCBVR EQU   X'04' -   FORMS CONTROL BUFFER (FCB) IMAGE IS TO BE
*                        VERIFIED
JFCRSV26 EQU   X'02',,C'X' RESERVED
JFCRSV27 EQU   X'01',,C'X' RESERVED
*              END OF 108 PRINTER SEGMENT
*******************************************************************
         SPACE 2
JFCOUTLI DS    0FL3 -    SMF - SYSOUT LIMIT.  BINARY REPRESENTATION OF
*                        THE OUTLIM= PARAMETER ON THE SYSOUT DD
*                        STATEMENT.  THE MAXIMUM NUMBER OF LOGICAL
*                        RECORDS SPECIFIED FOR THIS OUTPUT DATA SET.
*                                                                MDC017
JFCTHRSH DS    0FL1 -    RECORDS TO BE USED
JFCCPRI  DS    B -       PRIORITY BETWEEN SEND AND RECEIVE OPERATIONS
*                        (TCAM)
JFCRSV53 EQU   X'80',,C'X' RESERVED                              MDC020
JFCRSV54 EQU   X'40',,C'X' RESERVED                              MDC019
JFCRSV55 EQU   X'20',,C'X' RESERVED                              MDC018
JFCRSV33 EQU   X'10',,C'X' RESERVED
JFCRSV34 EQU   X'08',,C'X' RESERVED
JFCRECV  EQU   X'04' -   RECEIVE PRIORITY                        MDC018
JFCEQUAL EQU   X'02' -   EQUAL PRIORITY                          MDC019
JFCSEND  EQU   X'01' -   SEND PRIORITY                           MDC020
JFCSOWA  DS    H -       LENGTH, IN BYTES, OF THE USER-PROVIDED WORK
*                        AREA (QTAM)
JFCBNTCS DS    XL1 -     NUMBER OF OVERFLOW TRACKS
JFCBNVOL DS    XL1 -     NUMBER OF VOLUME SERIAL NUMBERS
JFCBVOLS DS    0CL30 -   THE FIRST FIVE VOLUME SERIAL NUMBERS  @Z30LP9A
         DS    CL22 -    FIRST 22 BYTES OF JFCBVOLS            @Z30LP9A
JFCMSVGP DS    CL8 -     MASS STORAGE VOLUME GROUP FROM WHICH TO
*                        SELECT A VOLUME  (MDC306)             @Z30LP9A
JFCBEXTL DS    XL1 -     LENGTH OF BLOCK OF EXTRA VOLUME SERIAL NUMBERS
*                        (BEYOND FIVE)
JFCBEXAD DS    CL3 -     SYSTEM VIRTUAL ADDRESS (SVA) OF FIRST JFCB
*                        EXTENSION BLOCK FOR VOLUME SERIAL NUMBERS OR
*                        SVA OF JFCB EXTENSION BLOCK FOR 3800
*                        (MDC303)                              @Z40MP9A
JFCBPQTY DS    0CL3 -    PRIMARY QUANTITY OF DIRECT ACCESS STORAGE
*                        REQUIRED
JFCRUNIT DS    CL3 -     UNIT TYPE (EBCDIC) OF A DEVICE AT A REMOTE
*                        TERMINAL.  THE FIRST TWO CHARACTERS ARE RD
*                        (READER), PR (PRINTER) OR PU (PUNCH).  THE
*                        THIRD CHARACTER IS A NUMBER FROM 1 TO 9 ICB387
JFCBCTRI DS    B -       SPACE PARAMETERS
JFCBSPAC EQU   X'C0' -   BIT PATTERN FOR SPACE REQUESTS
JFCBABS  EQU   X'00' -   ABSTR REQUEST
JFCBAVR  EQU   X'40' -   AVERAGE BLOCK LENGTH REQUEST
JFCBTRK  EQU   X'80' -   TRK REQUEST
JFCBCYL  EQU   X'C0' -   CYL REQUEST
JFCBMSGP EQU   X'20' -   REQUEST IS FOR A MASS STORAGE VOLUME GROUP
*                        (MSVGP) VOLUME  (MDC307)              @Z30LP9A
JFCRSV29 EQU   X'10',,C'X' RESERVED
JFCONTIG EQU   X'08' -   CONTIG REQUEST
JFCMIXG  EQU   X'04' -   MXIG REQUEST
JFCALX   EQU   X'02' -   ALX REQUEST
JFCROUND EQU   X'01' -   ROUND REQUEST
JFCBSQTY DS    0CL3 -    SECONDARY QUANTITY OF DIRECT ACCESS STORAGE
*                        REQUIRED
JFCRQID  DS    H -       QUEUE IDENTIFICATION (QID) USED BY ACCESS
*                        METHOD TO DETERMINE THE REMOTE TERMINAL
*                        LOCATION FOR THIS JOB.                  ICB387
         DS    X -       LAST BYTE OF JFCBSQTY  (MDC304)       @XM05457
JFCFLGS1 DS    B -       FLAG BYTE (ICB488)                     SA53458
JFCBDLET EQU   X'80' -   IF ONE, DELETE THE DATA SET USED WHEN
*                        EXTENDING THE JOB QUEUE OR SPOOL DATA SETS
*                        (OS/VS1)  (MDC305)                    @XM05457
JFCTOPEN EQU   X'40' -   TAPE DATA SET HAS BEEN OPENED           MDC026
JFCBADSP EQU   X'20' -   AUTOMATIC DATA SET PROTECTION INDICATOR
*                        (MDC310)                              @Z40RP9A
JFCBPROT EQU   X'10' -   RACF PROTECT REQUESTED (OS/VS2)
*                        (MDC314)                              @G32HP9A
JFCBCEOV EQU   X'08' -   IF ONE, CHKPT=EOV SPECIFIED FOR THIS DATA SET
*                        (MDC312)                              @Z30JP9A
JFCVRDS  EQU   X'04' -   VIO DATA SET                            MDC006
JFCBCKDS EQU   X'02' -   DATA SET IS CHECKPOINT DATASET        @ZA52824
JFCBUAFF EQU   X'01' -   UNIT AFFINITY SPECIFIED FOR THIS DATA SET
*                        (ICB488)                               SA53458
JFCBDQTY DS    CL3 -     QUANTITY OF DIRECT ACCESS STORAGE REQUIRED FOR
*                        A DIRECTORY OR AN EMBEDDED INDEX AREA
JFCBSPNM DS    0AL3 -    MAIN STORAGE ADDRESS OF THE JFCB WITH WHICH
*                        CYLINDERS ARE SPLIT (OS/VS1) (MDC315) @ZA18180
JFCBFLG3 DS    B -       FLAG BYTE (OS/VS2)  (MDC316)          @ZA18180
JFCDQDSP EQU   X'80' -   REQUEST DEQUEUE OF TAPE VOLUME WHEN DEMOUNTED
*                        (MDC317)                              @ZA18180
JFCBEXP  EQU   X'40' -   EXPIRATION DATE SPECIFIED  (MDC318)   @ZA27139
JFCBBFTK EQU   X'20' -   LRECL=NNNNNK WAS SPECIFIED                @L1C
JFCPOSID EQU   X'10' -   JFCRBIDO CONTAINS THE PHYSICAL LOCATION   @H1A
*                        ON THE TAPE OF THE FIRST STANDARD-LABEL   @H1A
*                        HEADER RECORD TO BE PROCESSED BY OPEN     @H1A
JFCBRV04 EQU   X'08',,C'X' - RESERVED                          @ZA18180
JFCBRV05 EQU   X'04',,C'X' - RESERVED                          @ZA18180
JFCBRV06 EQU   X'02',,C'X' - RESERVED                          @ZA18180
JFCBRV07 EQU   X'01',,C'X' - RESERVED                          @ZA18180
JFCBRV08 DS    H -       RESERVED (OS/VS2)                     @ZA18180
JFCBABST DS    H -       RELATIVE ADDRESS OF FIRST TRACK TO BE
*                        ALLOCATED
JFCBSBNM DS    AL3 -     MAIN STORAGE ADDRESS OF THE JFCB FROM WHICH
*                        SPACE IS TO BE SUBALLOCATED
JFCBDRLH DS    CL3 -     AVERAGE DATA BLOCK LENGTH
JFCBVLCT DS    XL1 -     VOLUME COUNT
JFCBSPTN DS    XL1 -     NUMBER OF TRACKS PER CYLINDER TO BE USED BY
*                        THIS DATA SET WHEN SPLIT CYLINDER IS INDICATED
JFCBLGTH EQU   176 -     LENGTH OF JFCB
JFCBEND  EQU   *
         POP   PRINT
         MEND  ,  */
*% JFCBL2:;
*%IF IKEPLS=''  %THEN
*    %GOTO JFCBL3;
*%IHALPUSH='@LISTPUSH';
*%IHALPOP='@LISTPOP';
*%IHALOFF='@LISTOFF';
*IHALPUSH;
*%IF IHALIST='YES'  %THEN
*    %GOTO JFCBL3;
*IHALOFF;
*%JFCBL3 : ;
*
*DECLARE
*  1 INFMJFCB BASED(JFCBPTR) BDY(WORD),
*   2 JFCBDSNM CHAR(44) BDY(WORD), /* DATA SET NAME                  */
*    3 JFCBQNAM CHAR(8) BDY(WORD), /* PROCESS QUEUE NAME SPECIFIED BY
*                                     THE QNAME KEYWORD  (TCAM)      */
*   2 JFCBELNM CHAR(8) BDY(WORD),  /* ELEMENT NAME OR RELATIVE
*                                     GENERATION NUMBER.  TYPE OF
*                                     AREA (INDEX, PRIME OR OVERFLOW)
*                                     FOR AN INDEXED SEQUENTIAL DATA
*                                     SET ONLY.                      */
*    3 JFCIPLTX CHAR(7) BDY(WORD), /* MODULE NAME OF NETWORK CONTROL
*                                     PROGRAM  (TCAM)          ICB391*/
*   2 JFCBTSDM BIT(8),             /* JOB MANAGEMENT/DATA MANAGEMENT
*                                     INTERFACE                      */
*    3 JFCCAT   BIT(1),            /* DATA SET IS CATALOGED          */
*    3 JFCVSL   BIT(1),            /* VOLUME SERIAL LIST HAS BEEN
*                                     CHANGED                        */
*    3 JFCSDS   BIT(1),            /* DATA SET IS A SYSIN OR SYSOUT
*                                     DATA SET                       */
*    3 JFCTTR   BIT(1),            /* A JOB STEP IS TO BE RESTARTED.
*                                     USE JFCBOTTR INSTEAD OF
*                                     DS1LSTAR FIELD TO REPOSITION
*                                     DATA SET IF AUTOMATIC STEP
*                                     RESTART OCCURS.  (THIS JOB HAD
*                                     ABEND PROCESSING FOR A DATA SET
*                                     OPENED FOR MOD.)               */
*    3 JFCNWRIT BIT(1),            /* DO NOT WRITE BACK THE JFCB
*                                     DURING OPEN PROCESSING         */
*    3 JFCNDSCB BIT(1),            /* DO NOT MERGE DSCB OR LABEL
*                                     FIELDS INTO THIS JFCB          */
*    3 JFCNDCB  BIT(1),            /* DO NOT MERGE DCB FIELDS INTO
*                                     THIS JFCB                      */
*    3 JFCPAT   BIT(1),            /* THE PATTERNING DSCB IS COMPLETE*/
*   2 JFCBDSCB CHAR(3) BDY(WORD,2),/* SVA OF THE FORMAT 1
*                                     DSCB FOR DATA SET PART ON THE
*                                     FIRST VOLUME OF THE DATA SET
*                                                              ICB398*/
*   2 JFCFCBID CHAR(4) BDY(WORD),  /* FORMS CONTROL BUFFER IMAGE
*                                     IDENTIFICATION FOR THE 3211
*                                     PRINTER OR DATA PROTECTION
*                                     IMAGE IDENTIFICATION FOR THE
*                                     3525 CARD PUNCH WITH THE READ
*                                     AND PRINT FEATURES OR FORMAT
*                                     RECORD ID                MDC007*/
*    3 JFCBFRID CHAR(4) BDY(WORD), /* LAST 4 CHARACTERS OF A PDS
*                                     MEMBER TO BE USED IN THE
*                                     INTERPRETATION OF DOCUMENTS
*                                     READ BY 3886 DEVICE FOR THIS
*                                     STEP                     MDC024*/
*     4 JFCRBIDO CHAR(4) BDY(WORD), /* THE PHYSICAL LOCATION ON THE
*                                      TAPE OF THE FIRST STANDARD-LABEL
*                                      HEADER RECORD TO BE PROCESSED
*                                      BY OPEN                   @H1A*/
*       5 JFCAMCRO CHAR(2) BDY(WORD),/* VSAM CHECKPOINT/RESTART OPTION
*                                     INDICATORS               ICB438*/
*       5 JFCAMSTR FIXED(15) BDY(WORD,3),/* NUMBER OF STRINGS    @H1C*/
*   2 JFCBADBF FIXED(15) BDY(WORD), /* NUMBER OF DATA BUFFERS  ICB438*/
*   2 JFCNLREC FIXED(15) BDY(WORD,3), /* LOGICAL RECORD LENGTH FOR
*                                     VSAM                     ICB438*/
*   2 JFCVINDX FIXED(15) BDY(WORD), /* MASS STORAGE SYSTEM
*                                     COMMUNICATOR (MSSC) VOLUME
*                                     SELECTION INDEX
*                                     (MDC308)               @Z30LP9A*/
*   2 JFCBLTYP BIT(8) BDY(WORD,3), /* LABEL TYPE                     */
*    3 JFCDSEQN BIT(1),            /* DATASET SEQUENCE NUMBER CODED
*                                     ON LABEL PARAMETER     @YA03334*/
*    3 JFCBAL   BIT(1),            /* AMERICAN NATIONAL STANDARD TAPE
*                                     LABELS (AL OR IF BIT 4 IS ALSO
*                                     ON, AUL)                       */
*    3 JFCBLTM  BIT(1),            /* UNLABELLED TAPE CREATED BY DOS
*                                     MAY HAVE LEADING TAPE MARK.
*                                     OPEN/CLOSE/EOV AND RESTART MUST
*                                     SPACE OVER A TAPE MARK IF ONE
*                                     EXISTS.                  ICB398*/
*    3 JFCBLP   BIT(1),            /* BYPASS LABEL PROCESSING        */
*    3 JFCSUL   BIT(1),            /* USER LABEL                     */
*    3 JFCNSL   BIT(1),            /* NONSTANDARD LABEL              */
*    3 JFCSL    BIT(1),            /* STANDARD LABEL                 */
*    3 JFCNL    BIT(1),            /* NO LABEL                       */
*   2 JFCBOTTR CHAR(3) BDY(WORD,4),/* DASD MOD DATA SET - IF AUTOMATIC
*                                     STEP RESTART WAS REQUESTED, SVA
*                                     OF THE END-OF-DATA INDICATOR
*                                     EXISTING WHEN THE DATA SET WAS
*                                     FIRST OPENED DURING THE
*                                     ORIGINAL EXECUTION OF THE
*                                     CURRENT STEP                   */
*    3 JFCBUFOF PTR(8),            /* TAPE DATA SET - THIS FIELD
*                                     CONTAINS THE BUFFER OFFSET (DCB
*                                     SUBPARAMETER VALUE)            */
*     4 JFCBFOFL BIT(1),           /* IF 1, THE OFFSET EQUALS FOUR
*                                     AND THE BUFFER OFFSET FIELD OF
*                                     EACH BLOCK (D-FORMAT RECORDS)
*                                     CONTAINS THE BLOCK LENGTH
*                                     (SPECIFIED BY BUFOFF=L).
*                                     IF 0, THE OFFSET IS AS
*                                     SPECIFIED IN THE REMAINING
*                                     SEVEN BITS AND THE BUFFER
*                                     OFFSET FIELD OF EACH BLOCK DOES
*                                     NOT CONTAIN THE BLOCK LENGTH.  */
*    3 JFCBFLSQ FIXED(15),         /* FOR MAGNETIC TAPE DEVICES,
*                                     FILE SEQUENCE NUMBER           */
*     4 JFCFUNC  BIT(8),           /* FUNCTION INDICATORS FOR THE
*                                     3525 CARD PUNCH (SPECIFIED BY
*                                     THE FUNC PARAMETER)      ICB392*/
*      5 JFCFNCBI BIT(1),          /* I - INTERPRET (PUNCH AND PRINT
*                                     TWO LINES)               ICB392*/
*      5 JFCFNCBR BIT(1),          /* R - READ                 ICB392*/
*      5 JFCFNCBP BIT(1),          /* P - PUNCH                ICB392*/
*      5 JFCFNCBW BIT(1),          /* W - PRINT                ICB392*/
*      5 JFCFNCBD BIT(1),          /* D - DATA PROTECTION      ICB392*/
*      5 JFCFNCBX BIT(1),          /* X - THIS DATA SET IS TO BE
*                                     PRINTED.  THIS MAY BE CODED
*                                     WITH PW OR RPW TO DISTINGUISH
*                                     THE DATA SET TO BE PRINTED FROM
*                                     THE DATA SET TO BE PUNCHED.
*                                                              ICB392*/
*      5 JFCFNCBT BIT(1),          /* T - TWO-LINE PRINT SUPPORT
*                                     REQUEST.  THE SECOND PRINT LINE
*                                     IS LOCATED ON CARD LINE THREE.
*                                                              ICB392*/
*      5 JFCRSV31 BIT(1),          /* RESERVED                 ICB392*/
*   2 JFCBVLSQ FIXED(15),          /* VOLUME SEQUENCE NUMBER         */
*   2 JFCBMASK CHAR(8) BDY(WORD),  /* DATA MANAGEMENT TASK           */
*    3 JFCBOPS1 CHAR(5),           /* OPEN ROUTINE INTERNAL SWITCHES */
*    3 JFCBFLG1 BIT(8),            /* FLAG BYTE                      */
*     4 JFCSTAND BIT(1),           /* VOLUME LABEL PROCESSING
*                                     STANDARD                       */
*     4 JFCSLCRE BIT(1),           /* CREATION OF A STANDARD LABEL
*                                     IS NECESSARY                   */
*     4 JFCSLDES BIT(1),           /* DESTRUCTION OF A STANDARD LABEL
*                                     IS NECESSARY                   */
*     4 JFCDUAL  BIT(1),           /* DUAL-DENSITY CHECK DETECTED    */
*     4 JFCOPEN  BIT(4),           /* OPEN ROUTINE INTERNAL SWITCHES */
*      5 *        BIT(3),          /* OPEN ROUTINE INTERNAL SWITCHES */
*      5 JFCBPWBP BIT(1),          /* PASSWORD BYPASS INDICATOR
*                                                              MDC010*/
*    3 JFCBFLG2 BIT(8),            /* FLAG BYTE OF OPEN SWITCHES     */
*     4 JFCINOP  BIT(1),           /* TREAT THE INOUT OPTION OF OPEN
*                                     AS INPUT                       */
*     4 JFCOUTOP BIT(1),           /* TREAT THE OUTIN OPTION OF OPEN
*                                     AS OUTPUT                      */
*     4 JFCDEFER BIT(1),           /* SET ONLY IN A JFCB RECORDED IN
*                                     A DATA SET DESCRIPTOR RECORD
*                                     (DSDR) BY THE CHECKPOINT
*                                     ROUTINE.  INDICATES THAT THE
*                                     DATA SET RELATED TO THE JFCB IS
*                                     BEING PROCESSED SEQUENTIALLY,
*                                     AT THE CHECKPOINT, ON A VOLUME
*                                     OTHER THAN THE VOLUME ON WHICH
*                                     PROCESSING BEGAN IN THE CURRENT
*                                     STEP.  WHEN RESTART OCCURS,
*                                     THIS BIT CAUSES DEFERRED VOLUME
*                                     MOUNTING.                      */
*      5 JFCNRPS  BIT(1),          /* USE BY OPEN ROUTINES - SET TO
*                                     INDICATE THAT THIS DATA SET
*                                     RESIDES ON A NON-RPS DEVICE.
*                                     RESET TO ZERO WHEN OPEN
*                                     PROCESSING IS COMPLETED. ICB495*/
*     4 JFCMODNW BIT(1),           /* DISPOSITION OF THIS DATA SET
*                                     HAS BEEN CHANGED FROM MOD TO
*                                     NEW.  DISPOSITION (IN JFCBIND2)
*                                     WILL BE RESTORED TO MOD AFTER
*                                     OPEN.                          */
*     4 JFCSDRPS BIT(1),           /* USE SEARCH DIRECT FOR
*                                     ROTATIONAL POSITION SENSING
*                                     (RPS) DEVICES            ICB398*/
*     4 JFCTRACE BIT(1),           /* GTF TRACE IS TO OCCUR DURING
*                                     OPEN/CLOSE/EOV AND DYNAMIC
*                                     ALLOCATION PROCESSING OF DCB
*                                                              ICB392*/
*     4 JFCBBUFF BIT(1),           /* INDICATOR TO OPEN THAT A
*                                     NON-ZERO VALUE IN JFCBOTTR IS
*                                     NOT TO PREVENT THE NORMAL
*                                     STORING BY OPEN OF A SVA IN
*                                     JFCBOTTR.  BEFORE OPEN -
*                                     JFCBUFOF (OFFSET 67) CONTAINS
*                                     A BUFFER OFFSET OR INVALID
*                                     INFORMATION RESULTING FROM A
*                                     JFCB-TO-JFCB MERGE.  AFTER
*                                     OPEN - OPEN MAY HAVE STORED A
*                                     SVA IN JFCBOTTR (OFFSET 67), IN
*                                     WHICH CASE OPEN WILL HAVE SET
*                                     THIS BIT TO ZERO.              */
*     4 JFCRCTLG BIT(1),           /* OPEN HAS UPDATED THE SVA.
*                                     SCHEDULER STEP TERMINATION
*                                     ROUTINE IS TO RECATALOG THIS
*                                     DATA SET AND PLACE IN THE
*                                     CATALOG ENTRY THE DSCB SVA
*                                     CONTAINED IN JFCBDSCB IF THIS
*                                     DATA SET IS CATALOGED.   ICB398*/
*    3 JFCBOPS2 BIT(8),            /* OPEN ROUTINE INTERNAL SWITCHES */
*   2 JFCBCRDT CHAR(3) BDY(WORD),  /* DATA SET CREATION DATE (YDD,
*                                     Y=YEAR AND DD=DAY)             */
*   2 JFCBXPDT CHAR(3) BDY(WORD,4),/* DATA SET EXPIRATION DATE (YDD) */
*   2 JFCBIND1 BIT(8),             /* INDICATOR BYTE 1               */
*    3 JFCRLSE  BIT(2),            /* RELEASE EXTERNAL STORAGE       */
*    3 JFCLOC   BIT(2),            /* DATA SET HAS BEEN LOCATED      */
*    3 JFCADDED BIT(2),            /* NEW VOLUME HAS BEEN ADDED TO
*                                     THE DATA SET                   */
*    3 JFCGDG   BIT(1),            /* DATA SET IS A MEMBER OF A
*                                     GENERATION DATA GROUP          */
*    3 JFCPDS   BIT(1),            /* DATA SET IS A MEMBER OF A
*                                     PARTITIONED DATA SET           */
*   2 JFCBIND2 BIT(8),             /* INDICATOR BYTE 2               */
*    3 JFCDISP  BIT(2),            /* BIT PATTERN FOR NEW, MOD, OLD  */
*% DCL JFCNEW CHAR;
*% JFCNEW = '''11''B';             /* NEW DATA SET                   */
*% DCL JFCMOD CHAR;
*% JFCMOD = '''10''B';             /* MOD DATA SET                   */
*% DCL JFCOLD CHAR;
*% JFCOLD = '''01''B';             /* OLD DATA SET                   */
*    3 JFCSECUR BIT(2),            /* DATA SET SECURITY              */
*% DCL JFCBSCTY CHAR;
*% JFCBSCTY = '''01''B';           /* PASSWORD IS REQUIRED TO READ OR
*                                     TO WRITE (DATA SET SECURITY)   */
*% DCL JFCBRWPW CHAR;
*% JFCBRWPW = '''11''B';           /* PASSWORD IS REQUIRED TO WRITE
*                                     BUT NOT TO READ (DATA SET
*                                     SECURITY)                      */
*    3 JFCSHARE BIT(1),            /* SHARED DATA SET                */
*    3 JFCENT   BIT(1),            /* DELETE THIS JFCB BEFORE
*                                     ALLOCATION FOR A RESTARTED
*                                     GENERATION DATA GROUP          */
*    3 JFCREQ   BIT(1),            /* STORAGE VOLUME REQUESTED       */
*    3 JFCTEMP  BIT(1),            /* TEMPORARY DATA SET             */
*   2 JFCAMPTR PTR(31),            /* POINTER TO AMPBLK FOR
*                                     ADDITIONAL VSAM PARAMETERS
*                                                              ICB438*/
*    3 JFCBUFRQ CHAR(1),           /* NUMBER OF BUFFERS REQUIRED FOR
*                                     EACH LINE (QTAM)               */
*     4 JFCBUFNO CHAR(1),          /* NUMBER OF BUFFERS REQUIRED FOR
*                                     THIS DATA SET (ACCESS METHODS
*                                     OTHER THAN TCAM AND QTAM)      */
*      5 JFCBUFIN BIT(4),          /* THE NUMBER OF BUFFERS ASSIGNED
*                                     INITIALLY FOR RECEIVING
*                                     OPERATIONS FOR EACH LINE IN A
*                                     LINE GROUP  (TCAM)       MDC021*/
*      5 JFCBFOUT BIT(4),          /* THE NUMBER OF BUFFERS ASSIGNED
*                                     INITIALLY FOR SENDING
*                                     OPERATIONS FOR EACH LINE IN A
*                                     LINE GROUP  (TCAM)       MDC022*/
*    3 JFCBGNCP PTR(8),            /* FOR GAM, THIS FIELD IS USED FOR
*                                     THE NUMBER OF IOB'S CONSTRUCTED
*                                     BY THE OPEN ROUTINE.  MAXIMUM
*                                     NUMBER IS 99.            MDC025*/
*     4 JFCBHIAR CHAR(1),          /* BUFFER POOL LOCATION IN MAIN
*                                     STORAGE (HIERARCHY)            */
*      5 JFCBFALN CHAR(1),         /* BUFFER ALIGNMENT               */
*       6 JFCBFTEK BIT(8),         /* BUFFERING TECHNIQUE            */
*        7 JFCHIER  BIT(1),        /* BITS 0 AND 5 DESCRIBE MAIN
*                                     STORAGE HIERARCHY.  BOTH BITS
*                                     OFF, HIERARCHY 0.  BIT 0 OFF
*                                     AND BIT 5 ON, HIERARCHY 1.     */
*        7 JFCBBFTA BIT(2),        /* A - FOR QSAM LOCATE MODE
*                                     PROCESSING OF SPANNED RECORDS,
*                                     AUTOMATIC RECORD AREA
*                                     CONSTRUCTION DURING LOGICAL
*                                     RECORD INTERFACE PROCESSING.
*                                     OPEN IS TO CONSTRUCT A RECORD
*                                     AREA IF IT AUTOMATICALLY
*                                     CONSTRUCTS BUFFERS.            */
*         8 JFCSIM   BIT(1),       /* S - SIMPLE BUFFERING           */
*         8 JFCBBFTR BIT(1),       /* R - FOR BSAM CREATE BDAM
*                                     PROCESSING OR BDAM PROCESSING
*                                     OF UNBLOCKED SPANNED RECORDS,
*                                     SOFTWARE TRACK OVERFLOW.  OPEN
*                                     FORMS A SEGMENT WORK AREA POOL
*                                     AND STORES THE ADDRESS OF THE
*                                     SEGMENT WORK AREA CONTROL BLOCK
*                                     IN THE DCBEOBW FIELD OF THE
*                                     DATA CONTROL BLOCK.  WRITE USES
*                                     A SEGMENT WORK AREA TO WRITE A
*                                     RECORD AS ONE OR MORE SEGMENTS.
*                                     FOR BSAM INPUT PROCESSING OF
*                                     UNBLOCKED SPANNED RECORDS WITH
*                                     KEYS, RECORD OFFSET PROCESSING.
*                                     READ READS ONE RECORD SEGMENT
*                                     INTO THE RECORD AREA.  THE
*                                     FIRST SEGMENT OF A RECORD IS
*                                     PRECEDED IN THE RECORD AREA BY
*                                     THE KEY.  SUBSEQUENT SEGMENTS
*                                     ARE AT AN OFFSET EQUAL TO THE
*                                     KEY LENGTH.                    */
*        7 JFCEXC   BIT(1),        /* E - EXCHANGE BUFFERING         */
*        7 JFCDYN   BIT(1),        /* DYNAMIC BUFFERING              */
*        7 JFCHIER1 BIT(1),        /* HIERARCHY 1 MAIN STORAGE       */
*        7 JFCDWORD BIT(1),        /* D - DOUBLE WORD BOUNDARY       */
*        7 JFCFWORD BIT(1),        /* F - FULL WORD NOT A DOUBLE
*                                     WORD BOUNDARY                  */
*    3 JFCBUFL  FIXED(15) BDY(WORD,3), /* BUFFER LENGTH              */
*   2 JFCEROPT BIT(8),             /* ERROR OPTION.  DISPOSITION OF
*                                     PERMANENT ERRORS IF USER
*                                     RETURNS FROM A SYNCHRONOUS
*                                     ERROR EXIT  (QSAM)             */
*    3 JFCACC   BIT(1),            /* ACCEPT                         */
*    3 JFCSKP   BIT(1),            /* SKIP                           */
*    3 JFCABN   BIT(1),            /* ABNORMAL END OF TASK           */
*    3 JFCTOPT  BIT(1),            /* ON-LINE TERMINAL TEST
*                                     (BTAM)                   ICB349*/
*    3 JFCRSV02 BIT(1),            /* RESERVED                       */
*    3 JFCRSV03 BIT(1),            /* RESERVED                       */
*    3 JFCRSV04 BIT(1),            /* RESERVED                       */
*    3 JFCRSV05 BIT(1),            /* RESERVED                       */
*   2 JFCTRTCH CHAR(1) BDY(WORD,2);/* TAPE RECORDING TECHNIQUE
*                                     FOR 7-TRACK TAPE               */
*% DCL JFCEVEN CHAR;
*% JFCEVEN ='''23''X';             /* E - EVEN PARITY                */
*% DCL JFCTRAN CHAR;
*% JFCTRAN = '''3B''X';            /* T - EOD/EBCDIC TRANSLATION     */
*% DCL JFCCONV CHAR;
*% JFCCONV = '''13''X';            /* C - DATA CONVERSION            */
*% DCL JFCTREV CHAR;
*% JFCTREV = '''2B''X';            /* ET - EVEN PARITY AND
*                                     TRANSLATION                    */
*
*DECLARE
*%IF IKEPLS='2'  %THEN
*    %GOTO JFCA1;
*  1 JFCKEYLE CHAR(1) BASED(ADDR(JFCTRTCH)) BDY(WORD,2),
*%GOTO JFCA2;
*%JFCA1 : ;
*  1 JFCKEYLE CHAR(1) DEF(JFCTRTCH) BDY(WORD,2),
*%JFCA2 : ;
*                                  /* DIRECT ACCESS KEY LENGTH       */
*   2 JFCCODE  BIT(8) BDY(BYTE),   /* CONVERSION CODE (PAPER TAPE)   */
*    3 JFCNOCON BIT(1),            /* N - NO CONVERSION              */
*    3 JFCBCD   BIT(1),            /* I - IBM BCD                    */
*    3 JFCFRI   BIT(1),            /* F - FRIDEN                     */
*    3 JFCBUR   BIT(1),            /* B - BURROUGHS                  */
*    3 JFCNCR   BIT(1),            /* C - NATIONAL CASH REGISTER     */
*    3 JFCASCII BIT(1),            /* A - ASCII (8-TRACK)            */
*    3 JFCTTY   BIT(1),            /* T - TELETYPE                   */
*    3 JFCRSV32 BIT(1);            /* RESERVED                       */
*
*DECLARE
*%IF IKEPLS='2'  %THEN
*    %GOTO JFCA3;
*  1 JFCSTACK BIT(8) BASED(ADDR(JFCTRTCH)) BDY(WORD,2),
*%GOTO JFCA4;
*%JFCA3 : ;
*  1 JFCSTACK BIT(8) DEF(JFCTRTCH) BDY(WORD,2),
*%JFCA4 : ;
*                                  /* STACKER SELECTION (CARD READER,
*                                     (CARD PUNCH)                   */
*   2 JFCMODE  BIT(8) BDY(WORD,2), /* MODE OF OPERATION (CARD READER,
*                                     (CARD PUNCH)             ICB394*/
*    3 JFCBIN   BIT(1),            /* C - COLUMN BINARY MODE         */
*    3 JFCEBCD  BIT(1),            /* E - EBCDIC MODE                */
*    3 JFCMODEO BIT(1),            /* O - OPTICAL MARK READ MODE
*                                     (3505 ONLY)              ICB394*/
*    3 JFCMODER BIT(1),            /* R - READ COLUMN ELIMINATE MODE
*                                     (3505 AND 3525 WITH READ
*                                     FEATURE)                 ICB394*/
*    3 JFCRSV06 BIT(1),            /* RESERVED                       */
*    3 JFCRSV07 BIT(1),            /* RESERVED                       */
*    3 JFCTWO   BIT(1),            /* 2 - STACKER TWO                */
*    3 JFCONE   BIT(1);            /* 1 - STACKER ONE                */
*
*DECLARE
*%IF IKEPLS='2'  %THEN
*    %GOTO JFCA5;
*  1 JFCSPPRT BASED(ADDR(JFCTRTCH)) BDY(WORD,2),
*%GOTO JFCA6;
*%JFCA5 : ;
*  1 JFCSPPRT DEF(JFCTRTCH) BDY(WORD,2),
*%JFCA6 : ;
*   2 JFCPRTSP BIT(8) BDY(WORD,2), /* NORMAL PRINTER SPACING         */
*% DCL JFCSPTHR CHAR;
*% JFCSPTHR='''19''X';             /* 3 - SPACE 3 LINES              */
*% DCL JFCSPTWO CHAR;
*% JFCSPTWO='''11''X';             /* 2 - SPACE 2 LINES              */
*% DCL JFCSPONE CHAR;
*% JFCSPONE='''09''X';             /* 1 - SPACE 1 LINE               */
*% DCL JFCSPNO CHAR;
*% JFCSPNO='''01''X';              /* 0 - NO SPACING                 */
*   2 JFCDEN   BIT(8),             /* TAPE DENSITY - 2400/3400 SERIES
*                                     MAGNETIC TAPE UNITS            */
*% DCL JFC200 CHAR;
*%JFC200 ='''03''X';               /* 7-TRACK 200 BPI                */
*% DCL JFC556 CHAR;
*%JFC556 ='''43''X';               /* 7-TRACK 556 BPI                */
*% DCL JFC800 CHAR;
*%JFC800 ='''83''X';               /* 7-TRACK AND 9-TRACK 800 BPI    */
*% DCL JFC1600 CHAR;
*%JFC1600 ='''C3''X';              /* 9-TRACK 1600 BPI               */
*% DCL JFC6250 CHAR;
*%JFC6250 ='''D3''X';              /* 9-TRACK 6250 BPI         ICB474*/
*   2 JFCBABFS PTR(24) BDY(WORD,4),/* TOTAL BUFFER SIZE FOR ALL VSAM
*                                     BUFFERS                  ICB438*/
*    3 JFCLIMCT CHAR(3) BDY(WORD,4),/* SEARCH LIMIT (BDAM)           */
*     4 *        CHAR(1),          /* RESERVED                       */
*     4 JFCTRKBL CHAR(2) BDY(WORD),/* DATA SET OPENED FOR MOD - IF
*                                     AUTOMATIC STEP RESTART WAS
*                                     REQUESTED, TRACK BALANCE
*                                     EXISTING WHEN THE DATA SET WAS
*                                     FIRST OPENED DURING THE
*                                     ORIGINAL EXECUTION OF THE
*                                     CURRENT STEP                   */
*   2 JFCDSORG BIT(16) BDY(WORD,3),/* DATA SET ORGANIZATION BEING
*                                     USED                           */
*    3 JFCDSRG1 BIT(8),            /* BYTE 1 OF JFCDSORG             */
*     4 JFCORGIS BIT(1),           /* INDEXED SEQUENTIAL             */
*     4 JFCORGPS BIT(1),           /* PHYSICAL SEQUENTIAL            */
*     4 JFCORGDA BIT(1),           /* DIRECT                         */
*     4 JFCORGCX BIT(1),           /* BTAM OR QTAM LINE GROUP  MDC011*/
*     4 JFCORGCQ BIT(1),           /* QTAM DIRECT ACCESS MESSAGE
*                                     QUEUE                    MDC012*/
*     4 JFCORGMQ BIT(1),           /* QTAM PROBLEM PROGRAM MESSAGE
*                                     QUEUE                    MDC013*/
*     4 JFCORGPO BIT(1),           /* PARTITIONED                    */
*     4 JFCORGU  BIT(1),           /* UNMOVABLE - THE DATA CONTAINS
*                                     LOCATION DEPENDENT INFORMATION */
*    3 JFCDSRG2 BIT(8),            /* BYTE 2 OF JFCDSORG             */
*     4 JFCORGGS BIT(1),           /* GRAPHICS                       */
*     4 JFCORGTX BIT(1),           /* TCAM LINE GROUP          MDC014*/
*     4 JFCORGTQ BIT(1),           /* TCAM MESSAGE QUEUE       MDC015*/
*     4 JFCRSV13 BIT(1),           /* RESERVED, BINARY ZERO          */
*     4 JFCORGAM BIT(1),           /* VSAM                     ICB438*/
*     4 JFCORGTR BIT(1),           /* TCAM 3705                MDC016*/
*     4 JFCRSV15 BIT(1),           /* RESERVED, BINARY ZERO          */
*     4 JFCRSV16 BIT(1),           /* RESERVED, BINARY ZERO          */
*   2 JFCRECFM BIT(8) BDY(WORD),   /* RECORD FORMAT                  */
*    3 JFCRCFM  BIT(3),            /* RECORD FORMAT (USASI/USASCII)
*                                                              MDC023*/
*%DCL JFCVARD CHAR;
*%JFCVARD='''001''B';              /* D - VARIABLE (FORMAT D FOR
*                                     USASI/USASCII)                 */
*     4 JFCFMREC BIT(2),           /* BITS INDICATING RECORD FORMAT  */
*% DCL JFCUND CHAR;
*% JFCUND = '''11''B';             /* U - UNDEFINED                  */
*% DCL JFCFIX CHAR;
*% JFCFIX = '''10''B';             /* F - FIXED                      */
*% DCL JFCVAR CHAR;
*% JFCVAR = '''01''B';             /* V - VARIABLE                   */
*     4 JFCRFO   BIT(1),           /* T - TRACK OVERFLOW             */
*    3 JFCRFB   BIT(1),            /* B - BLOCKED - MAY NOT OCCUR
*                                     WITH UNDEFINED                 */
*    3 JFCRFS   BIT(1),            /* S - FOR FIXED LENGTH RECORD
*                                     FORMAT, STANDARD BLOCKS.  NO
*                                     TRUNCATED BLOCKS OR UNFILLED
*                                     TRACKS ARE EMBEDDED IN THE DATA
*                                     SET.
*                                     FOR VARIABLE LENGTH RECORD
*                                     FORMAT, SPANNED RECORDS.       */
*    3 JFCCHAR  BIT(2),            /* CONTROL CHARACTER              */
*% DCL JFCASA CHAR;
*% JFCASA = '''10''B';             /* A - AMERICAN NATIONAL STANDARD
*                                     (ASA) CONTROL CHARACTER        */
*% DCL JFCMAC CHAR;
*% JFCMAC = '''01''B';             /* M - MACHINE CODE CONTROL
*                                     CHARACTER                      */
*% DCL JFCNOCC CHAR;
*% JFCNOCC ='''00''B';             /* NO CONTROL CHARACTER           */
*    3 *        BIT(1),            /* RESERVED                       */
*   2 JFCOPTCD BIT(8) BDY(WORD,2), /* OPTION CODES                   */
*    3 JFCWVCSP BIT(1),            /* QSAM-BSAM-BPAM - W - WRITE
*                                     VALIDITY CHECK                 */
*     4 JFCWVCIS BIT(1),           /* BISAM-QISAM - W - WRITE
*                                     VALIDITY CHECK                 */
*      5 JFCWVCBD BIT(1),          /* BDAM - W - WRITE VALIDITY
*                                     CHECK                          */
*       6 JFCSDNAM BIT(1),         /* TCAM - SOURCE OR DESTINATION
*                                     NAME PRECEDES MESSAGE (AFTER
*                                     CONTROL BYTE)                  */
*    3 JFCALLOW BIT(1),            /* QSAM-BSAM-BPAM - U - ALLOW A
*                                     DATA CHECK CAUSED BY AN
*                                     INVALID CHARACTER (1403
*                                     PRINTER WITH UCS FEATURE)      */
*     4 JFCRSV17 BIT(1),           /* RESERVED                       */
*      5 JFCOVER  BIT(1),          /* BDAM - TRACK OVERFLOW          */
*       6 JFCWUMSG BIT(1),         /* TCAM - WORK UNIT IS A MESSAGE
*                                     (DEFAULT WORK UNIT IS A RECORD)*/
*    3 JFCPCIBT BIT(1),            /* QSAM-BSAM-BPAM - C - CHAINED
*                                     SCHEDULING USING THE PROGRAM
*                                     CONTROLLED INTERRUPTION        */
*     4 JFCMAST  BIT(1),           /* BISAM-QISAM - M - MASTER
*                                     INDEXES                        */
*      5 JFCEXT   BIT(1),          /* BDAM - E - EXTENDED SEARCH     */
*       6 JFCCBWU  BIT(1),         /* TCAM - CONTROL BYTE PRECEDES
*                                     WORK UNIT                      */
*    3 JFCBCKPT BIT(1),            /* QSAM-BSAM-BPAM - BYPASS
*                                     EMBEDDED DOS CHECKPOINT
*                                     RECORDS ON TAPE         ICB398*/
*     4 JFCIND   BIT(1),           /* BISAM-QISAM - I - INDEPENDENT
*                                     OVERFLOW AREA                  */
*      5 JFCFEED  BIT(1),          /* BDAM - F - FEEDBACK            */
*    3 JFCRSV18 BIT(1),            /* RESERVED                       */
*     4 JFCCYL   BIT(1),           /* BISAM-QISAM - Y - CYLINDER
*                                     OVERFLOW AREA                  */
*      5 JFCACT   BIT(1),          /* BDAM - A - ACTUAL ADRESSING    */
*       6 JFCOPTQ  BIT(1),         /* USASI/USASCII - EBCDIC TO ASCII
*                                     OR ASCII TO EBCDIC TRANSLATION
*                                     REQUIRED                       */
*    3 JFCREDUC BIT(1),            /* QSAM-BSAM-BPAM-EXCP - Z -
*                                     USE REDUCED ERROR RECOVERY
*                                     PROCEDURE (MAGNETIC TAPE)      */
*     4 JFCRSV19 BIT(1),           /* RESERVED                       */
*      5 JFCRSV20 BIT(1),          /* RESERVED                       */
*       6 JFCSRCHD BIT(1),         /* QSAM-BSAM-BPAM - USE SEARCH
*                                     DIRECT (SD) INSTEAD OF SEARCH
*                                     PREVIOUS ON ROTATIONAL POSITION
*                                     SENSING (RPS) DEVICE.  (DIRECT
*                                     ACCESS)                        */
*    3 JFCRSV21 BIT(1),            /* RESERVED                       */
*     4 JFCDEL   BIT(1),           /* BISAM-QISAM - L - DELETE
*                                     OPTION                         */
*      5 JFCRSV22 BIT(1),          /* RESERVED                       */
*    3 JFCOPTJ  BIT(1),            /* QSAM-BSAM-BPAM - J - 3800
*                                     CONTROL CHARACTER
*                                     (MDC301)               @Z40MP9A*/
*     4 JFCREORG BIT(1),           /* BISAM-QISAM - R -
*                                     REORGANIZATION CRITERIA        */
*      5 JFCREL   BIT(1),          /* BDAM - R - RELATIVE BLOCK
*                                     ADDRESSING                     */
*   2 JFCBLKSI FIXED(15) BDY(WORD,3), /* MAXIMUM BLOCK SIZE          */
*    3 JFCBUFSI FIXED(15) BDY(WORD,3), /* MAXIMUM BUFFER SIZE        */
*     4 JFCBAXBF FIXED(15) BDY(WORD,3), /* NUMBER OF INDEX BUFFERS
*                                     (VSAM)                   ICB438*/
*   2 JFCAMSYN CHAR(8) BDY(WORD),  /* MODULE NAME FOR SYNAD ROUTINE
*                                     FOR VSAM                 ICB438*/
*    3 JFCLRECL FIXED(15) BDY(WORD), /* LOGICAL RECORD LENGTH        */
*    3 JFCNCP   CHAR(1) BDY(WORD,3), /* NUMBER OF CHANNEL PROGRAMS.
*                                     NUMBER OF READ OR WRITE
*                                     REQUESTS WHICH MAY BE ISSUED
*                                     PRIOR TO A CHECK.  NUMBER OF
*                                     IOB'S GENERATED.  (MAXIMUM
*                                     NUMBER IS 99.)
*                                     NOTE - GAM USES JFCBFTEK FOR
*                                     THIS INFORMATION AND DOES
*                                     NOT USE THIS FIELD AT ALL.     */
*     4 JFCBUFMX CHAR(1),          /* THE MAXIMUM NUMBER OF BUFFERS
*                                     TO BE USED FOR DATA TRANSFER
*                                     FOR EACH LINE IN THIS LINE
*                                     GROUP  (TCAM)                  */
*    3 JFCNTM   CHAR(1) BDY(WORD,4), /* THE NUMBER OF TRACKS THAT
*                                     DETERMINE THE DEVELOPMENT OF A
*                                     MASTER INDEX.  MAXIMUM NUMBER
*                                     IS 99.  (ISAM)                 */
*     4 JFCBFSEQ PTR(8),           /* TAPE POSITIONING INFORMATION
*                                     FOR CHECKPOINT RESTART.  THIS
*                                     FIELD IS USED TO PASS A
*                                     PHYSICAL FILE SEQUENCE COUNT
*                                     FROM CHECKPOINT TO RESTART.
*                                     THE COUNT TELLS THE PHYSICAL
*                                     POSITION OF THE TAPE VOLUME
*                                     THAT WAS BEING PROCESSED WHEN
*                                     THE CHECKPOINT WAS TAKEN.
*                                                             SA60703*/
*      5 JFCPCI   BIT(8),          /* PROGRAM-CONTROLLED INTERRUPTION
*                                     (PCI) FLAG BYTE (TCAM)         */
*       6 JFCPCIX1 BIT(1),         /* PCI=(X,) RECEIVE OPERATIONS
*                                                              ICB473*/
*       6 JFCPCIX2 BIT(1),         /* PCI=(,X) SEND OPERATIONS
*                                     X INDICATES THAT AFTER THE
*                                     FIRST BUFFER IS FILLED (ON
*                                     RECEIVE OPERATIONS) OR EMPTIED
*                                     (ON SEND OPERATIONS), A PCI
*                                     OCCURS DURING THE FILLING OR
*                                     EMPTYING OF THE NEXT BUFFER.
*                                     THE FIRST BUFFER REMAINS
*                                     ALLOCATED AND ANOTHER IS
*                                     ALLOCATED.               ICB473*/
*       6 JFCPCIA1 BIT(1),         /* PCI=(A,) RECEIVE OPERATIONS    */
*       6 JFCPCIA2 BIT(1),         /* PCI=(,A) SEND OPERATIONS
*                                     A INDICATES THAT AFTER THE
*                                     FIRST BUFFER IS FILLED (ON
*                                     RECEIVE OPERATIONS) OR EMPTIED
*                                     (ON SEND OPERATIONS), A PCI
*                                     OCCURS DURING THE FILLING OR
*                                     EMPTYING OF THE NEXT BUFFER.
*                                     THE FIRST BUFFER IS DEALLOCATED.
*                                     A BUFFER IS ALLOCATED IN PLACE
*                                     OF THE DEALLOCATED BUFFER.     */
*       6 JFCPCIN1 BIT(1),         /* PCI=(N,) RECEIVE OPERATIONS    */
*       6 JFCPCIN2 BIT(1),         /* PCI=(,N) SEND OPERATIONS
*                                     N INDICATES THAT NO PCI'S ARE
*                                     TAKEN DURING FILLING (ON
*                                     RECEIVE OPERATIONS) OR EMPTYING
*                                     (ON SEND OPERATIONS) OF BUFFERS.
*                                     BUFFERS ARE DEALLOCATED AT THE
*                                     END OF TRANSMISSION.           */
*       6 JFCPCIR1 BIT(1),         /* PCI=(R,) RECEIVE OPERATIONS    */
*       6 JFCPCIR2 BIT(1),         /* PCI=(,R) SEND OPERATIONS
*                                     R INDICATES THAT AFTER THE
*                                     FIRST BUFFER IS FILLED (ON
*                                     RECEIVE OPERATIONS) OR EMPTIED
*                                     (ON SEND OPERATIONS), A PCI
*                                     OCCURS DURING THE FILLING OR
*                                     EMPTYING OF EACH SUCCEEDING
*                                     BUFFER.  THE COMPLETED BUFFER
*                                     IS DEALLOCATED, BUT NO NEW
*                                     BUFFER IS ALLOCATED TO TAKE
*                                     ITS PLACE.                     */
*
* /*******************************************************************/
* /*                                                                 */
* /*                     NORMAL 108 SEGMENT                          */
* /*                                                                 */
* /*******************************************************************/
*
*    3 JFCRESRV CHAR(4) BDY(WORD), /* FIRST BYTE CONTAINS NUMBER OF
*                                     BYTES FOR TIME OF DAY.  SECOND
*                                     BYTE CONTAINS NUMBER OF BYTES
*                                     FOR DATE.  THIRD BYTE CONTAINS
*                                     NUMBER OF BYTES FOR OUTSEQ.
*                                     FOURTH BYTE CONTAINS NUMBER OF
*                                     BYTES IN.  (TCAM)              */
*     4 JFCRBIDC CHAR(4) BDY(WORD),   /* THE PHYSICAL LOCATION OF WHAT
*                                        WILL BE THE FIRST STANDARD-
*                                        LABEL HEADER RECORD OF THE
*                                        NEXT DATASET ON THE TAPE
*                                        VOLUME                  @H1A*/
*      5 JFCRKP   FIXED(15) BDY(WORD), /* THE RELATIVE POSITION OF THE
*                                     FIRST BYTE OF THE KEY WITHIN
*                                     EACH LOGICAL RECORD.  MAXIMUM
*                                     VALUE IS LOGICAL RECORD LENGTH
*                                     MINUS KEY LENGTH.          @P1C*/
*     5 JFCCYLOF CHAR(1),          /* THE NUMBER OF TRACKS TO BE
*                                     RESERVED ON EACH CYLINDER TO
*                                     HOLD RECORDS THAT OVERFLOW
*                                     FROM OTHER TRACKS ON THAT
*                                     CYLINDER.  MAXIMUM VALUE IS
*                                     99.                            */
*     5 JFCDBUFN CHAR(1),          /* RESERVED                   @P1C*/
*   2 JFCINTVL CHAR(1) BDY(WORD);  /* INTENTIONAL DELAY, IN SECONDS,
*                                     BETWEEN PASSES THROUGH A
*                                     POLLING LIST (QTAM)            */
*
* /*******************************************************************/
* /*                                                                 */
* /*                     END OF NORMAL 108 SEGMENT                   */
* /*                                                                 */
* /*******************************************************************/
*
* /*******************************************************************/
* /*                                                                 */
* /*                     108 PRINTER SEGMENT                         */
* /*                                                                 */
* /*     NOTE  THIS SEGMENT REPLACES THE NORMAL 108 SEGMENT IF       */
* /*           THE DD STATEMENT USES THE UCS PARAMETER.              */
* /*                                                                 */
* /*******************************************************************/
*
*DECLARE
*%IF IKEPLS='2'  %THEN
*    %GOTO JFCA7;
*  1 JFCUCSEG BASED (ADDR(JFCRESRV)) BDY(WORD),
*%GOTO JFCA8;
*%JFCA7 : ;
*  1 JFCUCSEG DEF(JFCRESRV) BDY(WORD),
*%JFCA8 : ;
*   2 JFCUCSID CHAR(4) BDY(WORD),  /* NAME OF THE UCS IMAGE TO BE
*                                     LOADED                         */
*   2 JFCUCSOP BIT(8),             /* OPERATION OF THE UCS IMAGE TO
*                                     BE LOADED                      */
*    3 JFCBEXTP BIT(1),            /* JFCB EXTENSION PRESENT FOR 3800
*                                     DEVICE  (MDC302)       @Z40MP9A*/
*    3 JFCFOLD  BIT(1),            /* UCS IMAGE IS TO BE LOADED IN
*                                     THE FOLD MODE                  */
*    3 JFCRSV25 BIT(1),            /* RESERVED                       */
*    3 JFCVER   BIT(1),            /* UCS IMAGE IS TO BE VERIFIED    */
*    3 JFCFCBAL BIT(1),            /* FORMS ARE TO BE ALIGNED        */
*    3 JFCFCBVR BIT(1),            /* FORMS CONTROL BUFFER (FCB)
*                                     IMAGE IS TO BE VERIFIED        */
*    3 JFCRSV26 BIT(1),            /* RESERVED                       */
*    3 JFCRSV27 BIT(1),            /* RESERVED                       */
*
* /*******************************************************************/
* /*                                                                 */
* /*                     END OF 108 PRINTER SEGMENT                  */
* /*                                                                 */
* /*******************************************************************/
*
*   2 JFCOUTLI PTR(24) BDY(WORD,2),/* SMF - SYSOUT LIMIT.  BINARY
*                                     REPRESENTATION OF THE OUTLIM=
*                                     PARAMETER ON THE SYSOUT DD
*                                     STATEMENT.  THE MAXIMUM NUMBER
*                                     OF LOGICAL RECORDS SPECIFIED
*                                     FOR THIS OUTPUT DATA SET.      */
*    3 JFCTHRSH CHAR(1),           /* RECORDS TO BE USED             */
*     4 JFCCPRI  BIT(8),           /* PRIORITY BETWEEN SEND AND
*                                     RECEIVE OPERATIONS (TCAM)      */
*      5 JFCRSV53 BIT(1),          /* RESERVED                 MDC020*/
*      5 JFCRSV54 BIT(1),          /* RESERVED                 MDC019*/
*      5 JFCRSV55 BIT(1),          /* RESERVED                 MDC018*/
*      5 JFCRSV33 BIT(1),          /* RESERVED                       */
*      5 JFCRSV34 BIT(1),          /* RESERVED                       */
*      5 JFCRECV  BIT(1),          /* RECEIVE PRIORITY         MDC018*/
*      5 JFCEQUAL BIT(1),          /* EQUAL PRIORITY           MDC019*/
*      5 JFCSEND  BIT(1),          /* SEND PRIORITY            MDC020*/
*    3 JFCSOWA  FIXED(15),         /* LENGTH, IN BYTES, OF THE USER-
*                                     PROVIDED WORK AREA (QTAM)      */
*   2 JFCBNTCS CHAR(1),            /* NUMBER OF OVERFLOW TRACKS      */
*   2 JFCBNVOL CHAR(1),            /* NUMBER OF VOLUME SERIAL NUMBERS*/
*   2 JFCBVOLS CHAR(30) BDY(WORD,3),/* THE FIRST FIVE VOLUME SERIAL
*                                     NUMBERS                        */
*    3 JFCAVOLS (5) CHAR(6);       /* THE FIRST FIVE VOLUME SERIAL
*                                     NUMBERS                @Z30LP9A*/
*
*DECLARE
*%IF IKEPLS='2'  %THEN
*    %GOTO JFCA9;
*  1 JFCBS001 BASED(ADDR(JFCBVOLS)) BDY(WORD,3), /*          @Z30LP9A*/
*%GOTO JFCA10;
*%JFCA9 : ;
*  1 JFCBS001 DEF(JFCBVOLS) BDY(WORD,3), /*                  @Z30LP9A*/
*%JFCA10 : ;
*   2 *        CHAR(22),           /* FIRST 22 BYTES OF
*                                     JFCBVOLS               @Z30LP9A*/
*   2 JFCMSVGP CHAR(8) BDY(WORD),  /* MASS STORAGE VOLUME GROUP FROM
*                                     WHICH TO SELECT A VOLUME
*                                     (MDC306)               @Z30LP9A*/
*   2 JFCBEXTL CHAR(1),            /* LENGTH OF BLOCK OF EXTRA VOLUME
*                                     SERIAL NUMBERS (BEYOND FIVE)   */
*   2 JFCBEXAD CHAR(3),            /* SYSTEM VIRTUAL ADDRESS (SVA)
*                                     OF FIRST JFCB EXTENSION BLOCK
*                                     FOR VOLUME SERIAL NUMBERS OR
*                                     SVA OF JFCB EXTENSION BLOCK
*                                     FOR 3800  (MDC303)     @Z40MP9A*/
*   2 JFCBPQTY CHAR(3) BDY(WORD),  /* PRIMARY QUANTITY OF DIRECT
*                                     ACCESS STORAGE REQUIRED        */
*    3 JFCRUNIT CHAR(3),           /* UNIT TYPE (EBCDIC) OF A DEVICE
*                                     AT A REMOTE TERMINAL.  THE
*                                     FIRST TWO CHARACTERS ARE RD
*                                     (READER), PR (PRINTER) OR PU
*                                     (PUNCH).  THE THIRD CHARACTER
*                                     IS A NUMBER FROM 1 TO 9. ICB387*/
*   2 JFCBCTRI BIT(8),             /* SPACE PARAMETERS               */
*    3 JFCBSPAC BIT(2),            /* SPACE MASK BITS                */
*%DCL JFCBABS CHAR;
*% JFCBABS = '''00''B';            /* ABSTR REQUEST                  */
*%DCL JFCBAVR CHAR;
*% JFCBAVR = '''01''B';            /* AVERAGE BLOCK LENGTH REQUEST   */
*% DCL JFCBTRK  CHAR;
*% JFCBTRK = '''10''B';            /* TRK REQUEST                    */
*% DCL JFCBCYL CHAR;
*% JFCBCYL = '''11''B';            /* CYL REQUEST                    */
*    3 JFCBMSGP BIT(1),            /* REQUEST IS FOR A MASS STORAGE
*                                     VOLUME GROUP (MSVGP) VOLUME
*                                     (MDC307)               @Z30LP9A*/
*    3 JFCRSV29 BIT(1),            /* RESERVED                       */
*    3 JFCONTIG BIT(1),            /* CONTIG REQUEST                 */
*    3 JFCMIXG  BIT(1),            /* MXIG REQUEST                   */
*    3 JFCALX   BIT(1),            /* ALX REQUEST                    */
*    3 JFCROUND BIT(1),            /* ROUND REQUEST                  */
*   2 JFCBSQTY CHAR(3) BDY(WORD),  /* SECONDARY QUANTITY OF DIRECT
*                                     ACCESS STORAGE REQUIRED        */
*    3 JFCRQID  FIXED(15),         /* QUEUE IDENTIFICATION (QID) USED
*                                     BY ACCESS METHOD TO DETERMINE
*                                     THE REMOTE TERMINAL LOCATION
*                                     FOR THIS JOB.            ICB387*/
*   2 JFCFLGS1 BIT(8),             /* FLAG BYTE (ICB488)      SA53458*/
*    3 JFCBDLET BIT(1),            /* IF ONE, DELETE THE DATA SET
*                                     USED WHEN EXTENDING THE JOB
*                                     QUEUE OR SPOOL DATA SETS
*                                     (OS/VS1)  (MDC305)     @XM05457*/
*    3 JFCTOPEN BIT(1),            /* TAPE DATA SET HAS BEEN OPENED
*                                                              MDC026*/
*    3 JFCBADSP BIT(1),            /* AUTOMATIC DATA SET PROTECTION
*                                     INDICATOR  (MDC310)    @Z40RP9A*/
*    3 JFCBPROT BIT(1),            /* RACF PROTECT REQUESTED (OS/VS2)
*                                     (MDC314)               @G32HP9A*/
*    3 JFCBCEOV BIT(1),            /* IF ONE, CHKPT=EOV SPECIFIED FOR
*                                     THIS DATA SET (MDC312) @Z30JP9A*/
*    3 JFCVRDS  BIT(1),            /* VIO DATA SET             MDC006*/
*    3 JFCBCKDS BIT(1),            /* DATA SET IS CHECKPOINT DATA SET
*                                                            @ZA52824*/
*    3 JFCBUAFF BIT(1),            /* UNIT AFFINITY SPECIFIED FOR
*                                     THIS DATA SET (ICB488)  SA53458*/
*   2 JFCBDQTY CHAR(3) BDY(WORD),  /* QUANTITY OF DIRECT ACCESS
*                                     STORAGE REQUIRED FOR A
*                                     DIRECTORY OR AN EMBEDDED INDEX
*                                     AREA                           */
*   2 JFCBSPNM PTR(24) BDY(WORD,4),/* MAIN STORAGE ADDRESS OF THE
*                                     JFCB WITH WHICH CYLINDERS ARE
*                                     SPLIT (OS/VS1)
*                                     (MDC315)               @ZA18180*/
*    3 JFCBFLG3 BIT(8),            /* FLAG BYTE (OS/VS2)
*                                     (MDC316)               @ZA18180*/
*     4 JFCDQDSP BIT(1),           /* REQUEST DEQUEUE OF TAPE VOLUME
*                                     WHEN DEMOUNTED
*                                     (MDC317)               @ZA18180*/
*     4 JFCBEXP  BIT(1),           /* EXPIRATION DATE SPECIFIED
*                                     (MDC318)               @ZA27139*/
*     4 JFCBBFTK BIT(1),      /* LRECL=NNNNNK WAS SPECIFIED      @L1A*/
*     4 JFCPOSID BIT(1),           /* JFCRBIDO CONTAINS THE PHYSICAL
*                                     LOCATION ON THE TAPE OF THE FIRST
*                                     STANDARD-LABEL HEADER RECORD TO
*                                     BE PROCESSED BY OPEN       @H1A*/
*     4 JFCBRV04 BIT(1),           /* RESERVED               @ZA18180*/
*     4 JFCBRV05 BIT(1),           /* RESERVED               @ZA18180*/
*     4 JFCBRV06 BIT(1),           /* RESERVED               @ZA18180*/
*     4 JFCBRV07 BIT(1),           /* RESERVED               @ZA18180*/
*    3 JFCBRV08 FIXED(15),         /* RESERVED (OS/VS2)      @ZA18180*/
*   2 JFCBABST FIXED(15),          /* RELATIVE ADDRESS OF FIRST TRACK
*                                     TO BE ALLOCATED                */
*   2 JFCBSBNM PTR(24) BDY(WORD),  /* MAIN STORAGE ADDRESS OF THE
*                                     JFCB FROM WHICH SPACE IS TO
*                                     BE SUBALLOCATED                */
*   2 JFCBDRLH CHAR(3) BDY(WORD,4),/* AVERAGE DATA BLOCK LENGTH      */
*   2 JFCBVLCT CHAR(1),            /* VOLUME COUNT                   */
*   2 JFCBSPTN CHAR(1),            /* NUMBER OF TRACKS PER CYLINDER
*                                     TO BE USED BY THIS DATA SET
*                                     WHEN SPLIT CYLINDER IS
*                                     INDICATED                      */
*   2 JFCBEND  CHAR(0) BDY(WORD);
* DCL JFCAMSVA DEF(JFCAMPTR) CHAR(3); /* SVA OF THE AMPX CONTROL
*                                     BLOCK EXTENSION TO THE JFCB
*                                                             YA05186*/
*% DCL JFCBLGTH CHAR;
*% JFCBLGTH ='176';                /* LENGTH OF JFCB                 */
*%IF IKEPLS=''  %THEN
*    %GOTO JFCBL4;
*IHALPOP;
*%JFCBL4 : ;
*        %GOTO JFCBPRO;  /*
         MACRO
         IEFJFCBX
.*/      %JFCBPRO: ;
*/********************************************************************/
*/*                                                                  */
*/*  MODULE NAME = IEFJFCBX                                          */
*/*                                                                  */
*/*  DESCRIPTIVE NAME =  JOB FILE CONTROL BLOCK EXTENSION            */
*/*                                                                  */
*/*  COPYRIGHT  =                                                    */
*/*               5740-XC6                                       @R1C*/
*/*               CONTAINS RESTRICTED MATERIALS OF IBM           @R1C*/
*/*               (C) COPYRIGHT IBM CORP.  1973, 1986            @R1C*/
*/*               LICENSED MATERIAL - PROPERTY OF IBM            @R1C*/
*/*               REFER TO COPYRIGHT INSTRUCTIONS                @R1C*/
*/*               FORM NUMBER G120-2083.                         @R1C*/
*/*                                                                  */
*/*  STATUS =     OS/VS2 JBB2220                                 @R1C*/
*/*                                                                  */
*/*  INVOCATION =                                                    */
*/*      BAL  - IEFJFCBX                                         @R1A*/
*/*             USING ON JFCBX GIVES ADDRESSABILITY FOR ALL      @R1A*/
*/*             SYMBOLS.                                         @R1A*/
*/*      PL/S - %INCLUDE SYSLIB(IEFJFCBX)                        @R1A*/
*/*             DCL JFCBXPTR PTR(31)                             @R1A*/
*/*                                                                  */
*/*  FUNCTION   = THIS MACRO MAPS THE JOB FILE CONTROL BLOCK         */
*/*               EXTENSION.                                         */
*/*                                                                  */
*/*  CHANGE ACTIVITY   =  R1                                     @R1C*/
*/*                                                                  */
*/*  $R1 = PA20586 JBB2220 851014 PDD7: PA20586                  @R1A*/
*/********************************************************************/
*/* A - PROLOGUE                                                 @R1A*/
*/*------------------------------------------------------------------*/
*%GOTO JFCBXBSL;        /*
*
JFCBXTTR DS    CL3 -    SVA FOR NEXT EXTENSION BLOCK
         DS    CL1 -    RESERVED
JFCBXVOL DS    15CL6 -  MAXIMUM NO. OF 15-SIX BYTE VOL. SER. NUMBERS
         DS    CL2 -    RESERVED
JFCBXNAM DS    CL44 -   ALIAS NAME FOR DSNAME IN THE JFCB  (MDC002)
*                                                                YM3584
JFCBXDEV DS    CL4 -    DEVICE TYPE RETRIEVED FROM CATALOG FOR
*                       RECATALOG  (MDC003)                      YM3584
         DS    CL28 -   RESERVED
JFCBXNXT DS    A -      ADDRESS OF NEXT JFCB EXTENSION           MDC001
         MEND  , -    */
*%JFCBXBSL : ;
*
* DECLARE
* 1 JFCBX BASED (JFCBXPTR) BDY(DWORD) ,
*      5 JFCBXTTR CHAR(3),            /* SVA FOR NEXT EXTENSION
*                                        BLOCK                       */
*      5 *    CHAR(1),                /* RESERVED                    */
*      5 JFCBXVOL (15) CHAR(6),       /* MAXIMUM NO. OF 15-SIX BYTE
*                                        VOL. SER. NUMBERS           */
*      5 *             CHAR(2),       /* RESERVED                    */
*      5 JFCBXNAM      CHAR(44),      /* ALIAS NAME FOR DSNAME IN
*                                        THE JFCB  (MDC002)    YM3584*/
*      5 JFCBXDEV      CHAR(4),       /* DEVICE TYPE RETRIEVED FROM
*                                        CATALOG FOR RECATALOG
*                                        (MDC003)              YM3584*/
*      5 *             CHAR(28),      /* RESERVED                    */
*      5 JFCBXNXT      PTR(31);       /* ADDRESS OF NEXT JFCB
*                                        EXTENSION             MDC001*/
*
         USING  IHADCB,5
*
         PRINT NOGEN
         YREGS
         STM   R14,12,12(13)       SAVE CALLERS REGS.
         BALR  R11,0               LOAD BASE REG.
         USING *,11                ESTABLISH ADDRESSABILITY.
         USING *+4095,12           ESTABLISH ADDRESSABILITY.
         LA    R12,4095(11)
         ST    R13,SAVEAREA+4      CHAIN SAVE AREAS.
         LR    R15,13                "    "     "
         LA    R13,SAVEAREA          "    "     "
         ST    R13,8(15)             "    "     "
         BAL   R10,SETPARM
         LA    R8,INTABLE          LOAD ADDR OF INPUT DD TABLE.
         LA    R7,OUTABLE          LOAD ADDR OF OUTPUT DD TABLE.
         LA    R5,INPUT            LOAD ADDR OF INPUT DCB.
         LA    R6,OUTPUT           LOAD ADDR OF OUTPUT DCB.
         L     R3,16               -> TO CVT.
         L     R3,0(R3)            -> TO TCB ->'R IN CVT.
         L     R3,4(R3)            -> TO TCB.
         L     R3,12(R3)           -> TO TIOT.
         ST    R3,TIOTPTR          -> TO TIOT.
*
         BAL   R10,OPENSOUT
         BAL   R10,DSPTITLE
*
         LA    R4,24               SO NEXT INST WILL -> TO DD ENTRY.
SCAN     LA    R3,0(R4,R3)         -> TO NEXT OR FIRST DD ENTRY.
         LTR   R4,R4               SET COND CODE.
         BZ    SORTIT              ALL DD'S CHECKED - GO SORT THEM.
         IC    R4,0(R3)            NEXT TIME WILL -> TO NEXT ENTRY.
         CLC   4(5,R3),DDNAME(R5)  IS IT AN INPUT DD ?
         BNE   SCAN2               NO - GO SEE IF IT'S AN OUTPUT DD.
         CLI   11(R3),C' '         INPUT DD NAME LENGTH OF 7 ?
         BNE   SCAN                NO GO GET NEXT DD ENTRY.
         TRT   9(2,R3),NUMTAB      IS INPUT DD NUMBER NUMERIC ?
         BC    R7,SCAN             NO GO GET NEXT DD ENTRY.
         MVC   0(2,R8),9(R3)       YES PUT IT IN THE INPUT TABLE.
         LA    R8,2(R8)            -> TO NEXT SPACE IN INPUT DD TABLE.
         B     SCAN                GO GET NEXT DD ENTRY.
SCAN2    CLC   4(6,R3),DDNAME(R6)  IS IT AN OUTPUT DD ?
         BNE   SCAN                NO GO GET NEXT DD ENTRY.
         TRT   10(2,R3),NUMTAB     IS OUTPUT DD NUMBER NUMERIC ?
         BC    R7,SCAN             NO GO GET NEXT DD ENTRY.
         MVC   0(2,R7),10(R3)      YES PUT IT IN THE OUTPUT DD TABLE.
         LA    R7,2(R7)            -> TO NEXT SPACE IN OUTPUT DD TABLE.
         B     SCAN                GO GET NEXT DD ENTRY.
*********************************************************************
*
SORTIT   SR    R3,3                ZERO IN REG 3.
         LA    R2,INTABLE          ADDR OF INPUT DD TABLE IN REG 2.
         SH    R8,=H'2'            -> REG 8 TO LAST ENTRY IN TABLE.
         LR    R4,R2               SAVE ->'R TO 1ST ENTRY IN TABLE.
         BAL   R10,CHECK           GO SORT INPUT TABLE.
         SR    R3,R3               RESET REG 3 TO ZERO.
         LA    R2,OUTABLE          ADDR OF OUTPUT DD TABEL IN REG 2.
         LR    R8,R7               ADDR OF LAST ENTRY NOT USED OF
*                                  OF OUTPUT DD TABLE FROM REG 7 - 8.
         SH    R8,=H'2'            -> REG 8 TO LAST ENTRY IN TABLE.
         LR    R4,R2               SAVE ->'R TO 1ST ENTRY IN TABLE.
         BAL   R10,CHECK           GO SORT OUTPUT DD TABLE.
         CLC   INTABLE,OUTABLE     IS THERE AN INPUT DD FOR EACH OUTPUT
*                                  DD AND CONVERSLY.
         BE    DOIT                YES THEN CONTINUE PROCESSING.
        WTO    '*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*',  X
               'PSUTDUMP30 DD NUMBERING IS UNEQUAL, CHECK DD  ',       X
               '           NUMBERING, POSSIBLE DUPLICATE NUMBERS',     X
               '           OR THERE IS NOT A ONE FOR ONE NUMBERING',   X
               '*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*',  X
               ROUTCDE=(2)
         ABEND 30,DUMP,STEP          NO THEN ABEND WITH USER ABEND 30.
DOIT     EQU   *
         MVC   DDNAME+5(2,5),0(4)  SET UP FIRST DD TO BE DUMPED.
         MVC   DDNAME+6(2,6),0(4)  SET UP FIRST DD TO BE DUMPED TO.
RUN      DS    0H
         MVC   DDNAME+5(2,5),0(4)  SET UP  DD TO BE DUMPED.
         MVC   DDNAME+6(2,6),0(4)  SET UP  DD TO BE DUMPED TO.
*
         BAL   R10,INITCTR
         OPEN  (INPUT,(INPUT))
*
         RDJFCB (INPUT)          GET INFO FOR 1ST FILE
         MVC   INJFCB,INFMJFCB
         MVC   IRECFM,JFCRECFM
         MVC   ILRECL,JFCLRECL
         MVC   IBLKSI,JFCBLKSI
RDJFOUT  DS    0H
         RDJFCB (OUTPUT)
         MVC   ORECFM,JFCRECFM
         MVC   OLRECL,JFCLRECL
         MVC   OBLKSI,JFCBLKSI
         CLC   ORECFM,IRECFM      OUTPUT RECFM SAME AS INPUT?
         BE    SAME01
         CLI   ORECFM,B'0'        RECFM UNSPECIFIED?
         BE    DUPRECFM           YES
*
*   COMPARE HI 2 BITS
*
         MVC   IRECFMHI,IRECFM
         NI    IRECFMHI,B'11000000'
         MVC   ORECFMHI,ORECFM
         NI    ORECFMHI,B'11000000'
         CLC   IRECFMHI,ORECFMHI  FIXED, VAR, UNDEF SAME?
         BE    SAME01             YES, LEAVE ALONE
        WTO    '*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*',  X
               'PSUTDUMP40 RECFM INCOMPATIBLE                 ',       X
               '*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*',  X
               ROUTCDE=(2)
         ABEND 40,DUMP,STEP          NO THEN ABEND WITH USER ABEND 40.
DUPRECFM DS    0H
         MVC   JFCRECFM,IRECFM    FORCE SAME AS INPUT
         MVC   ORECFM,JFCRECFM
SAME01   DS    0H
         CLC   JFCLRECL,=H'0'     OUTPUT LRECL UNSPECIFIED?
         BNE   SAME02
         MVC   JFCLRECL,ILRECL    YES, FORCE SAME AS INPUT
         MVC   OLRECL,JFCLRECL
SAME02   DS    0H
         CLC   JFCBLKSI,=H'0'     OUTPUT BLKSI UNSPECIFIED?
         BNE   SAME03
         MVC   JFCBLKSI,IBLKSI    YES, FORCE SAME AS INPUT
         MVC   OBLKSI,JFCBLKSI
SAME03   DS    0H
         MVC   OUTJFCB,INFMJFCB   SAVE OUTPUT JFCB
         BAL   R14,OPFORMAT
         MVC   OPVOL,=C'*NONE*'
         MVC   INFMJFCB(176),INJFCB RESTORE JFCB FROM INPUT
*
GET      GET   INPUT               READ INPUT RECORD.
         ST    R1,IPRCD
*
CHKDCB   DS    0H
         CLI   DCBSW,C'2'          TAKEN DCB EXIT?
         BNE   CHKOPEN             NO
         MVI   DCBSW,C'1'          RESET
         BAL   R10,DSPIPCNT        DISPLAY INPUT COUNTS
         RDJFCB (INPUT)            GET INFO FOR NEXT FILE
         B     GET                 REDO LAST READ
*
CHKOPEN  DS    0H
         CLI   OPENSW,C'Y'         IS OUTPUT OPEN?
         BE    CHKEOV
*
         MVI   OPENSW,C'Y'
         MVC   INFMJFCB(176),OUTJFCB
         OPEN  (OUTPUT,(OUTPUT)),TYPE=J
         RDJFCB (OUTPUT)         GET INFO FOR OUTPUT FILE
         BAL   R14,OPFORMAT      FORMAT OUTPUT JFCB INFO
         MVC   INFMJFCB(176),INJFCB RESTORE INPUT JFCB
*
CHKEOV   DS    0H
         CLI   EOVSW,C'Y'          VOLUME CHANGE?
         BNE   PUT                 NO
         MVI   EOVSW,C'N'          RESET
         BAL   R10,DSPIPCNT        DISPLAY INPUT COUNTS
         BAL   R10,INCRVOL         POINT TO NEXT VOL SER
*
PUT      DS    0H
         L     R3,IPRCD
         TM    ORECFM,JFCVAR       IS OUTPUT VARIABLE?
         BZ    PUT05               NO
         CLC   0(2,R3),OLRECL      IS LRECL < MAX?
         BNH   PUT05               YES
         MVC   0(2,R3),OLRECL      NO, TRUNCATE
PUT05    DS    0H
         PUT   OUTPUT,(R3)         WRITE RECORD
INCRCTR  DS    0H
         AP    IRCDCTR,=P'1'       INCR INPUT  COUNTER
         AP    ORCDCTR,=P'1'       INCR OUTPUT COUNTER
         B     GET                 GO GET ANOTHER ONE.
IPRCD    DS    F                   ADDRESS OF INPUT RECORD
IRECFM   DS    B                   INPUT RECFM
IRECFMHI DS    B                   INPUT RECFM HI 2 BITS
ILRECL   DS    H                   INPUT LRECL
IBLKSI   DS    H                   INPUT BLKSIZE
ORECFM   DS    B                   OUTPUT RECFM
ORECFMHI DS    B                   OUPUT RECFM HI 2 BITS
OLRECL   DS    H                   OUTPUT LRECL
OBLKSI   DS    H                   OUTPUT BLKSIZE
*******************************************************************
*
EODAD    DS    0H
         BAL   R10,DSPIPCNT
         CLOSE (INPUT)
         CLI   OPENSW,C'Y'   IS OUTPUT FILE OPEN?
         BE    CLOSEOP
         CLI   OSPARM,C'C'   SHOULD IT BE?
         BE    FREEPOOL      NO, 'CHK' PARM PRESENT
         MVI   OPENSW,C'Y'
         MVC   INFMJFCB(176),OUTJFCB  RESTORE OUTPUT JFCB
         OPEN  (OUTPUT,(OUTPUT)),TYPE=J
         RDJFCB (OUTPUT)         GET INFO FOR OUTPUT FILE
         BAL   R14,OPFORMAT      FORMAT OUTPUT JFCB INFO
CLOSEOP  DS    0H
         CLOSE (OUTPUT)
         FREEPOOL OUTPUT
FREEPOOL DS    0H
         BAL   R10,DSPOPCNT
         FREEPOOL INPUT
         LA    R4,2(R4)       POINT TO NEXT ENTRY IN TABLE.
         CR    R4,R7          AT END OF TABLE ?
         BL    RUN            NO GO DUMP NEXT FILE.
*
*                 E O J
*
         CLOSE SYSOUT
         L     R13,SAVEAREA+4 YES
         LM    R14,12,12(13)  RETURN
         SR    R15,15         TO
         BR    14             CALLER
********************************************************************
*
SORT     LA    R2,2(2)        INCR TO NEXT 2 ENTRIES IN TABLE.
         USING SORTWORK,2
CHECK    CR    R2,R8          AT END OF UNSORTED TABLE ?
         BE    TABLEND        YES GO SEE IF WE'RE DONE.
         BL    COMPARE        NO CHECK SEQ.
         WTO   '*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*',      X
               'PSUTDUMP10 NUMBERING SEQUENCE NOT CORRECT, CHECK',     X
               '           NUMBERING SEQUENCE OR DD NAME SPELLING',    X
               '*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*',      X
               ROUTCDE=(2)
         ABEND 10,DUMP,STEP   DD STATMENT MISSING FOR INPUT OR OUTPUT.
COMPARE  CLC   LOW,NEXT       NO ARE THESE 2 ITEMS IN SEQ ?
         BL    SORT           YES GO TO NEXT ONE.
         BH    SWAP           NOT IN SEQ GO SWAP THEM.
        WTO    '*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*',  X
               'PSUTDUMP20   DUPLICATE INPUT OR OUTPUT DD NUMBERING',  X
               '           CHECK INPUT AND OUTPUT SEQUENCE NUMBERS',   X
               '*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*',  X
               ROUTCDE=(2)
*                             CANT HAVE 2 DD NAMES THE SAME
         ABEND 20,DUMP,STEP   WHAT ARE YOU TRYING TO DO ???
SWAP     LH    R3,LOW         SAVE LOW OUT OF SEQ ITEM IN REG 3.
         MVC   LOW,NEXT       MOVE LOW ITEM DOWN IN TABLE.
         STH   R3,NEXT        PUT HIGH ITEM WHERE LOW ITEM WAS.
         B     SORT           GO TO CHECK NEXT ONE.
TABLEND  CH    R3,=H'0'       IS WHOLE TABLE IN SEQ ?
         BER   10             YES RETURN
         SH    R8,=H'2'       NO REDUCE SEARCH TABLE SIZE.
         LR    R2,4           RESET REG 2 TO -> TO TOP OF TABLE.
         SR    R3,3           RESET REG 3 TO ZERO.
         B     CHECK          GO BACK THROUGH AGAIN.
*
IPDCBEX  DS    0H
         STM   R0,R15,DCBSAVE      SAVE LINKAGE REGISTER
         LA    R13,SAVEAREA
*
         CLI   DCBSW,C'0'          1ST TIME?
         BNE   SETRERD             NO, SET REREAD SW
         OI    DCBOFLGS,X'08'      SET FOR UNLIKE ATTRIBUTES
         MVI   DCBSW,C'1'          SET TO NOT 1ST TIME
         B     DCBEXIT
SETRERD  DS    0H
         MVI   DCBSW,C'2'          SET TO REDO LAST READ
         B     DCBEXIT
*
DCBEXIT  DS    0H
         LM    R0,R15,DCBSAVE
         BR    14
DCBSAVE  DS    9D
DCBSW    DC    C'0'
OPENSW   DC    C'N'
INJFCB   DS    CL176
OUTJFCB  DS    CL176
*
IPEOVEX  DS    0H
         STM   R0,R15,EOVSAVE      SAVE LINKAGE REGISTER
         LA    R13,SAVEAREA
*
         MVI   EOVSW,C'Y'          INDICATE NEW VOLUME
RDJ02    DS    0H
*
EOVEXIT  DS    0H
         LM    R0,R15,EOVSAVE
         BR    14
EOVSAVE  DS    9D
EOVSW    DC    C'N'
*
INCRVOL  DS    0H
         ST    R10,INCS10       SAVE LINKAGE REGISTER
*
         L     R10,IVOLPTR
         LA    R10,6(R10)          INCREMENT VOLSER POINTER
         ST    R10,IVOLPTR
         L     R10,INCS10
         BR    R10
INCS10   DS    F
IVOLPTR  DS    F
*
OPEOVEX  DS    0H
         STM   R0,R15,OEOVSAVE     SAVE LINKAGE REGISTER
         LA    R13,SAVEAREA
*
         CLC   OVOLCTR,=F'21'      LUMP ALL VOLS > 20 INTO 21
         BNL   MAXOVOL
         L     R10,OVOLCTR
         LA    R10,1(R10)          INCREMENT VOLSER COUNTER
         ST    R10,OVOLCTR         SAVE VOL COUNTER
         L     R10,OCNTPTR         GET POINTER TO COUNT TABLE
         ZAP   0(8,R10),ORCDCTR    STORE LAST VOL'S RECORD COUNT
         AP    OTOTCNT,ORCDCTR     ADD TO TOTAL COUNT
         ZAP   ORCDCTR,=P'0'
         LA    R10,8(R10)          POINT TO NEXT COUNT ENTRY
         ST    R10,OCNTPTR
MAXOVOL  DS    0H
*
OEOVEXIT DS    0H
         LM    R0,R15,OEOVSAVE
         BR    14
OEOVSAVE DS    9D
OVOLCTR  DS    F                 NUMBER OF O/P VOLUMES
OCNTPTR  DS    F                 NBR OF RECORD COUNTS IN OCNTTBL
OTOTCNT  DS    PL8'0'
OCNTTBL  DS    21PL8             MAX OF 21 VOLUMES
*
DSPIPCNT DS    0H
         STM   R2,R10,DSPSVA
*
         MVC   ZSUPPWK,ZSUPP
         ED    ZSUPPWK,IRCDCTR
         MVC   IPCNT,ZSUPP8
         ZAP   IRCDCTR,=P'0'
*
         CLC   IVOLPTR,=F'120'     MORE THAN 20 VOLUMES?
         BL    CHK5VOLS            NO
         MVC   IPVOL,=6C'*'        YES
         B     MOVERECL
*
CHK5VOLS DS    0H
         CLC   IVOLPTR,=F'30'     MORE THAN 5 VOLUMES?
         BL    MOVEVOL            NO
* GET VOL SER FROM JFCB EXTENSION
         MVC   JFCBXPTR+1(3),JFCBEXAD
         L     R10,JFCBXPTR
         LA    R10,20(R10)        POINT TO VOL SER LIST
         A     R10,IVOLPTR        ADD VOL POINTER
         S     R10,=F'30'         SUBTRACT LENGTH OF 1ST 5 VOLS
         MVC   IPVOL,0(R10)
         B     MOVERECL
*
MOVEVOL  DS    0H
         LA    R10,JFCBVOLS
         A     R10,IVOLPTR
         MVC   IPVOL,0(R10)
*
MOVERECL DS    0H
         LA    R2,0                SET R2 TO ZERO
         LH    R2,JFCLRECL         LOAD LRECL
         CVD   R2,CVDWRK
         MVC   ZSUPPWK,ZSUPP
         ED    ZSUPPWK,CVDWRK
         MVC   IPLRECL,ZSUPP5
*
         LA    R2,0                SET R2 TO ZERO
         LH    R2,JFCBLKSI         LOAD BLKSIZE
         CVD   R2,CVDWRK
         MVC   ZSUPPWK,ZSUPP
         ED    ZSUPPWK,CVDWRK
         MVC   IPBLK,ZSUPP7
*
         MVC   RECFMWK,JFCRECFM
         BAL   R10,SETRECFM
         MVC   IPRECFM,RECFMSET
*
         MVC   IPDSN,JFCBDSNM
*
         LA    R0,IPMSG
         BAL   R10,WRITSOUT
         MVC   IPMSG,=133C' '
         ZAP   IRCDCTR,=P'0'
*
         LM    R2,R10,DSPSVA
         BR    10
*
JFCBXPTR DC    F'0'
*
OPFORMAT DS    0H
         STM   R2,R15,FORMSA
*
         LA    R2,0                SET R2 TO ZERO
         LH    R2,JFCLRECL         LOAD LRECL
         CVD   R2,CVDWRK
         MVC   ZSUPPWK,ZSUPP
         ED    ZSUPPWK,CVDWRK
         MVC   OPLRECL,ZSUPP5
*
         LA    R2,0                SET R2 TO ZERO
         LH    R2,JFCBLKSI         LOAD BLKSIZE
         CVD   R2,CVDWRK
         MVC   ZSUPPWK,ZSUPP
         ED    ZSUPPWK,CVDWRK
         MVC   OPBLK,ZSUPP7
*
         MVC   RECFMWK,JFCRECFM
         BAL   R10,SETRECFM
         MVC   OPRECFM,RECFMSET
*
         MVC   OPDSN,JFCBDSNM
*
         LM    R2,R15,FORMSA
         BR    14
*
FORMSA   DS    14F
*
DSPOPCNT DS    0H
         STM   R2,R10,DSPSVA
*
         RDJFCB (OUTPUT)         GET INFO FOR OUTPUT FILE
         L     R10,OCNTPTR         GET POINTER TO COUNT TABLE
         ZAP   0(8,R10),ORCDCTR    STORE LAST VOL'S RECORD COUNT
         AP    OTOTCNT,ORCDCTR     ADD TO TOTAL COUNT
*
         LA    R7,0                VOL COUNTER
         LA    R8,JFCBVOLS         VOLUME LIST
         LA    R9,OCNTTBL          TABLE OF COUNTS BY VOLSER
*
PUT1VOL  DS    0H
         MVC   ZSUPPWK,ZSUPP
         ED    ZSUPPWK,0(R9)       RECORD COUNT
         MVC   OPCNT,ZSUPP8
         CLI   OPENSW,C'N'         WAS OUTPUT OPENED?
         BE    UNOPENED
         C     R7,=F'20'           PAST VOL NUMBER 20?
         BNL   OPVOL21
         C     R7,=F'5'            PAST VOL NUMBER 5?
         BNL   OPVOL6
         MVC   OPVOL,0(R8)         VOL SER
         B     PUTOPMSG
OPVOL6   DS    0H
* GET VOL SER FROM JFCB EXTENSION
         MVC   JFCBXPTR+1(3),JFCBEXAD
         L     R10,JFCBXPTR
         LA    R10,20(R10)        POINT TO VOL SER LIST
         AR    R10,R8             ADD VOL POINTER
         S     R10,=A(JFCBVOLS+30) SUBTRACT LENGTH OF 1ST 5 VOLS
         MVC   OPVOL,0(R10)
         B     PUTOPMSG
OPVOL21  DS    0H
         MVC   OPVOL,=C'*MORE*'
         B     PUTOPMSG
UNOPENED DS    0H
         MVC   OPVOL,=C'*NONE*'
         B     PUTOPMSG
*
PUTOPMSG DS    0H
         LA    R0,OPMSG
         BAL   R10,WRITSOUT
         MVC   OPDDGRP,=9C' '
         C     R7,OVOLCTR
         BE    CHKOPTOT
         LA    R7,1(R7)              NEXT VOL NUMBER
         LA    R8,6(R8)              NEXT VOL SER
         LA    R9,8(R9)              NEXT RECORD COUNT
         B     PUT1VOL
CHKOPTOT DS    0H
         CLC   OVOLCTR,=F'0'
         BE    CLROPMSG
         MVC   OPMSG,=133C' '
         MVC   OPCNT,=8C'-'
         LA    R0,OPMSG
         BAL   R10,WRITSOUT
         MVC   ZSUPPWK,ZSUPP
         ED    ZSUPPWK,OTOTCNT     TOTAL RECORD COUNT
         MVC   OPCNT,ZSUPP8
         LA    R0,OPMSG
         BAL   R10,WRITSOUT
CLROPMSG DS    0H
         MVC   OPMSG,=133C' '
*
         LA    R0,=133C' '
         BAL   R10,WRITSOUT
*
         LM    R2,R10,DSPSVA
         BR    10
DSPSVA   DS    11F
TIOTWK   DS    H
*
FINDTIOT DS    0H
         ST    R10,FINDS10         SAVE LINKAGE REGISTER
*
         L     R3,TIOTPTR          ADDRESS OF TIOT
         LH    R4,TIOTWK           SO NEXT INST WILL -> TO DD ENTRY.
         LA    R3,0(R4,R3)         -> TO NEXT OR FIRST DD ENTRY.
*
         L     R10,FINDS10          RESTORE LINKAGE REGISTER
         BR    10
FINDS10  DS    F
*
SETRECFM DS    0H
         ST    R10,SETRS10         SAVE LINKAGE REGISTER
*
         MVC   RECFMSET,=CL5' '
         MVC   RECFMWK1,RECFMWK
         TM    RECFMWK1,B'10000000' FIXED?
         BNZ   FMFIX
         MVC   RECFMWK1,RECFMWK
         TM    RECFMWK1,B'01000000' VARIABLE?
         BNZ   FMVAR
FMUND    DS    0H
         MVI   RECFM1,C'U'
         B     CHKBLK
FMFIX    DS    0H
         MVI   RECFM1,C'F'
         B     CHKBLK
FMVAR    DS    0H
         MVI   RECFM1,C'V'
         B     CHKBLK
CHKBLK   DS    0H
         MVC   RECFMWK1,RECFMWK
         TM    RECFMWK1,B'00010000' BLOCKED?
         BZ    CHKASA
         MVI   RECFM2,C'B'
CHKASA   DS    0H
         MVC   RECFMWK1,RECFMWK
         TM    RECFMWK1,B'00000100' ASA?
         BNZ   FMASA
         MVC   RECFMWK1,RECFMWK
         TM    RECFMWK1,B'00000010' MACHINE?
         BNZ   FMMACH
         B     SETRECFX
FMASA    DS    0H
         MVI   RECFM3,C'A'
         B     SETRECFX
FMMACH   DS    0H
         MVI   RECFM3,C'M'
         B     SETRECFX
SETRECFX DS    0H
*
         L     R10,SETRS10          RESTORE LINKAGE REGISTER
         BR    10
SETRS10  DS    F
*
DSPTITLE DS    0H
         ST    R10,DSPTS10         SAVE LINKAGE REGISTER
         MVC   JOBNAME,0(R3)
         CLC   =C' ',16(R3)        IF JOBSTEP SPACE, NOT A PROC
         BE    NOTPROC
         MVC   PROCSTEP,8(R3)
         MVC   JOBSTEP,16(R3)
         B     DSPSTEP
*
NOTPROC  DS    0H
         MVC   PROCSTEP,=CL8'*NONE*'
         MVC   JOBSTEP,08(R3)
*
DSPSTEP  DS    0H
         LA    R0,TITLMSG
         BAL   R10,WRITSOUT
*
         LA    R0,=133C' '
         BAL   R10,WRITSOUT
*
         LA    R0,STEPMSG
         BAL   R10,WRITSOUT
*
         LA    R0,=133C' '
         BAL   R10,WRITSOUT
*
         LA    R0,HDGMSG1
         BAL   R10,WRITSOUT
*
         LA    R0,HDGMSG2
         BAL   R10,WRITSOUT
*
         L     R10,DSPTS10          RESTORE LINKAGE REGISTER
         BR    10
DSPTS10  DS    F
*
GETDSN   DS    0H                  POINT TO JFCB
         ST    R10,GETDS10         SAVE LINKAGE REGISTER
*
         MVC   JFCBADDR,=4X'00'
         MVC   JFCBADDR+1(3),X'0C'(R3)  MOVE TIOEJFCB
         L     R10,JFCBADDR
         MVC   JFCBDSN,16(R10)           MOVE DATASET NAME
*
         L     R10,GETDS10          RESTORE LINKAGE REGISTER
         BR    10
GETDS10  DS    F
JFCBADDR DS    F
JFCBDSN  DS    CL52
*
OPENSOUT DS    0H
         ST    R10,OPENS10         SAVE LINKAGE REGISTER
*
         OPEN  (SYSOUT,OUTPUT)        OPEN SYSOUT
         B      OPENEXIT
SOUTERR  WTO   'UNABLE TO OPEN SYSOUT - ABNORMAL TERMINATION'
         ABEND 60,DUMP,STEP
*
OPENEXIT DS    0H
         L     R10,OPENS10          RESTORE LINKAGE REGISTER
         BR    10
OPENS10  DS    F
*
SETPARM  DS    0H
         ST    R10,PARMS10         SAVE LINKAGE REGISTER
*
         MVI   OSPARM,C' '
         L     R10,0(R1)
         CLC   =H'0',0(R10)        IS PARM LENGTH = 0?
         BE    PARMEXIT
         CLC   =H'3',0(R10)        IS PARM LENGTH = 3?
         BNE   BADPARM
         CLC   =C'CHK',2(R10)
         BNE   BADPARM
         MVC   OSPARM,=C'C'
         MVC   TITLMODE,=C'(CHECK MODE)'
         B     PARMEXIT
BADPARM  DS    0H
        WTO    '*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*',  X
               'PSUTDUMP60 INVALID PARM VALUE SPECIFIED       ',       X
               '*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*',  X
               ROUTCDE=(2)
         ABEND 60,DUMP,STEP
*
PARMEXIT DS    0H
         L     R10,PARMS10          RESTORE LINKAGE REGISTER
         BR    R10
PARMS10  DS    F
OSPARM   DS    CL1
*
INITCTR  DS    0H
         ST    R10,INITS10         SAVE LINKAGE REGISTER
         MVI   OPENSW,C'N'         OUTPUT OPEN SWITCH
         ZAP   IRCDCTR,=P'0'       ZERO RECORD COUNTER
         ZAP   ORCDCTR,=P'0'       ZERO RECORD COUNTER
         ZAP   OTOTCNT,=P'0'       ZERO TOTAL COUNTER
         MVI   DCBSW,C'0'          SET TO 1ST TIME
         MVI   EOVSW,C'N'
         MVC   IVOLPTR,=F'0'
         MVC   OVOLCTR,=F'0'
         MVC   OCNTPTR,=A(OCNTTBL)
*
         MVC   IPDDNAM,DDNAME(R5)
         MVI   IPCOLON,C':'
         MVC   OPDDNAM,DDNAME(R6)
         MVI   OPCOLON,C':'
*
         L     R10,INITS10          RESTORE LINKAGE REGISTER
         BR    10
INITS10  DS    F
*
WRITSOUT DS     0H
         ST    R10,WRITS10
*
         PUT   SYSOUT
*
         L     R10,WRITS10
         BR    10
WRITS10  DS    F
*-------------------------------------------------
*
SAVEAREA DC    9D'0'
INTABLE  DC    CL200' '
OUTABLE  DC    CL200' '
*
NUMTAB   DS    0D
         DC    X'F00102030405060708090A0B0C0D0E0F'
         DC    X'101112131415161718191A1B1C1D1E1F'
         DC    X'202122232425262728292A2B2C2D2E2F'
         DC    X'303132333435363738393A3B3C3D3E3F'
         DC    X'404142434445464748494A4B4C4D4E4F'
         DC    X'505152535455565758595A5B5C5D5E5F'
         DC    X'606162636465666768696A6B6C6D6E6F'
         DC    X'707172737475767778797A7B7C7D7E7F'
         DC    X'808182838485868788898A8B8C8D8E8F'
         DC    X'909192939495969798999A9B9C9D9E9F'
         DC    X'A0A1A2A3A4A5A6A7A8A9AAABACADAEAF'
         DC    X'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF'
         DC    X'C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF'
         DC    X'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF'
         DC    X'E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF'
         DC    X'00000000000000000000FAFBFCFDFEFF'
*
INPUT    DCB   DSORG=PS,MACRF=GL,DDNAME=INPUT,EODAD=EODAD,EXLST=IEXLST
OUTPUT   DCB   DSORG=PS,MACRF=PM,DDNAME=OUTPUT,EXLST=OEXLST
SYSOUT   DCB   DDNAME=SYSOUT,DSORG=PS,MACRF=PM,RECFM=FBA,              X
               LRECL=133,BLKSIZE=133
*
IEXLST   DS    0F
         DC    X'05',AL3(IPDCBEX)
         DC    X'06',AL3(IPEOVEX)
         DC    X'87',AL3(INFMJFCB)
*
OEXLST   DS    0F
         DC    X'06',AL3(OPEOVEX)
         DC    X'87',AL3(INFMJFCB)
*
*   FILE STATISTICS MESSAGES
*
DDLEN    EQU  9
CNTLEN   EQU  8
DSNLEN   EQU  44
VOLLEN   EQU  6
RECFMLEN EQU  5
LRECLLEN EQU  5
BLKLEN   EQU  5
*
DDCOL    EQU  2
CNTCOL   EQU  DDCOL+DDLEN+1
DSNCOL   EQU  CNTCOL+CNTLEN+1
VOLCOL   EQU  DSNCOL+DSNLEN+1
RECFMCOL EQU  VOLCOL+VOLLEN+1
LRECLCOL EQU  RECFMCOL+RECFMLEN+1
BLKCOL   EQU  LRECLCOL+LRECLLEN+1
*
IRCDCTR  DC    PL8'0'
ORCDCTR  DC    PL8'0'
TIOTPTR  DS    F                ADDRESS OF TIOT
RECFMWK  DS    CL1
RECFMWK1 DS    CL1
RECFMSET DS    0CL5
         DS    CL2
RECFM1   DS    CL1
RECFM2   DS    CL1
RECFM3   DS    CL1
*
CVDWRK   DS    D
ZSUPP    DC    C' ',13X'20',X'2120'
*
ZSUPPWK  DS    0CL16
         DS    CL8
ZSUPP8   DS    0CL8
         DS    CL1
ZSUPP7   DS    0CL7
         DS    CL2
ZSUPP5   DS    0CL5
         DS    CL2
ZSUPP3   DS    CL3
*
TITLMSG  EQU   *
         DC    C'1'
         DC    132C'-'
         ORG   TITLMSG+26
         DC    C'  P S U T D U M P  '
         DS    CL5
TITLMODE DS    CL12
         ORG
*
STEPMSG  DC    CL133' '
         ORG   STEPMSG+1
         DC    C'  JOB: '
JOBNAME  DS    CL8
         DC    C'  PROC STEP: '
PROCSTEP DS    CL8
         DC    C'  JOB STEP: '
JOBSTEP  DS    CL8
         ORG
*
HDGMSG1  DC    CL133' '
         ORG   HDGMSG1-1+DDCOL
         DC    CL10'  DDNAME'
         ORG   HDGMSG1-1+CNTCOL
         DC    CL09'   COUNT'
         ORG   HDGMSG1-1+DSNCOL
         DC    CL45'DSNAME'
         ORG   HDGMSG1-1+VOLCOL
         DC    CL06'VOLSER'
         ORG   HDGMSG1-1+RECFMCOL
         DC    CL06'RECFM'
         ORG   HDGMSG1-1+LRECLCOL
         DC    CL06'LRECL'
         ORG   HDGMSG1-1+BLKCOL
         DC    CL07'BLKSIZE'
         ORG
*
HDGMSG2  DC    CL133' '
         ORG   HDGMSG2-1+DDCOL
         DC    09C'-'
         ORG   HDGMSG2-1+CNTCOL
         DC    08C'-'
         ORG   HDGMSG2-1+DSNCOL
         DC    44C'-'
         ORG   HDGMSG2-1+VOLCOL
         DC    6C'-'
         ORG   HDGMSG2-1+RECFMCOL
         DC    05C'-'
         ORG   HDGMSG2-1+LRECLCOL
         DC    05C'-'
         ORG   HDGMSG2-1+BLKCOL
         DC    07C'-'
         ORG
*
IPMSG    DC    CL133' '
         ORG   IPMSG-1+DDCOL
         DS    CL1
IPDDNAM  DS    CL7
IPCOLON  DC    C':'
         ORG   IPMSG-1+CNTCOL
IPCNT    DS    CL8
         ORG   IPCNT+CNTLEN-1
IPSIGN   DS    CL1
         ORG   IPMSG-1+DSNCOL
IPDSN    DS    CL44
         ORG   IPMSG-1+VOLCOL
IPVOL    DS    CL6
         ORG   IPMSG-1+RECFMCOL
IPRECFM  DS    CL5
         ORG   IPMSG-1+LRECLCOL
IPLRECL  DS    CL5
         ORG   IPMSG-1+BLKCOL
IPBLK    DS    CL7
         ORG
*
OPMSG    DC    CL133' '
         ORG   OPMSG-1+DDCOL
OPDDGRP  DS    0CL9
OPDDNAM  DS    CL8
OPCOLON  DC    C':'
         ORG   OPMSG-1+CNTCOL
OPCNT    DS    CL8
         ORG   OPCNT+CNTLEN-1
OPSIGN   DS    CL1
         ORG   OPMSG-1+DSNCOL
OPDSN    DS    CL44
         ORG   OPMSG-1+VOLCOL
OPVOL    DS    CL6
         ORG   OPMSG-1+RECFMCOL
OPRECFM  DS    CL5
         ORG   OPMSG-1+LRECLCOL
OPLRECL  DS    CL5
         ORG   OPMSG-1+BLKCOL
OPBLK    DS    CL7
         ORG
*
         IEFJFCBN
*
         LTORG
*
*
SORTWORK DSECT
LOW      DS    CL2
NEXT     DS    CL2
         DSECT
DCBS     DCBD  DSORG=PS
LRECL    EQU   DCBLRECL-IHADCB
BLKSIZE  EQU   DCBBLKSI-IHADCB
RECFM    EQU   DCBRECFM-IHADCB
DDNAME   EQU   DCBDDNAM-IHADCB
TIOTOFF  EQU   DCBTIOT-IHADCB
         END
