//PGRD002A JOB (H0004H000),'DIETES, R. M.',
//             NOTIFY=PGRD,MSGLEVEL=(1,1),
//             MSGCLASS=X,PRTY=8,CLASS=Q
/*JOBPARM LINECT=60,ROOM=W240
//*-------------------------------------------------------------------*
//* REFER:   TECH.SERVICE.INSTLIB(HEB0020 )                           *
//* COMPID:  MVS/SP - 1.3.3                                           *
//* DATE:    07/02/86                                                 *
//* DOC:     THIS USERMOD WILL APPLY THE 'NOT CATLG 2' MODIFICATION   *
//*          INTO MODULE IEFAB4FD (LMOD IEFW21SD).                    *
//*                                                                   *
//* UPDATE:  07/15/88 .RMD. UPDATED FOR MVS/XA 2.2.0           @XA22001
//*-------------------------------------------------------------------*
//ASM        EXEC   ASMHC,PARM.ASM='NODECK,OBJECT'
//ASM.SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR,DCB=BLKSIZE=12960,
//             UNIT=3380,VOL=SER=MVSRES
//             DD  DSN=SYS1.AMODGEN,DISP=SHR,UNIT=3380,VOL=SER=MVSDLB
//ASM.SYSIN    DD  *
AB4FD     TITLE 'IEFAB4FD--DE-ALLOCATION MESSAGE ASSEMBLY MODULE'
***********************************************************************
**                                                                   **
**       MVS 'NOT CATLGD X' AND 'NOT DELETED X' MODIFICATION.        **
**       MODULE 'IEFAB4FD' IS THE MODIFIED MODULE.  SOURCE CODE FOR  **
**       FOR THIS MODULE WAS OBTAINED FROM THE MICROFICHE PLS        **
**       LISTING.                                                    **
**                                                                   **
**   I - INTERNAL PROCESSING                                         **
**                                                                   **
**       THIS MODIFICATION DOES THE FOLLOWING (IN RC00029 ROUTINE)   **
**       A) EXAMINES THE FIRST SEVEN CHARACTERS OF THE MESSAGE TO    **
**          DETERMINE IF IT IS EITHER 'IEF283I' OR 'IEF287I'.        **
**       B) IF NEITHER, EXIT IS MADE TO REGULAR PROCESSING.          **
**       C) IF IT IS ONE OF THE DESIRED MESSAGES, THE ADDRESS OF THE **
**          LINKAGE CONTROL TABLE (LCT) IS CALCULATED FROM THE FIFTH **
**          PARAMETER PASSED TO IEFAB4FD (LCTJSCB).                  **
**       D) THE ADDRESS OF THE PROBLEM PROGRAM CSCB (LCT+0) AND THE  **
**          DUMMY TCB (LCT+8) ARE PICKED UP.  (THESE ARE FILLED-IN   **
**          BY 'IEFBB410'.)                                          **
**       E) THE DUMMY TCB IS CHECKED TO DETERMINE IS AN ABEND HAS    **
**          ALREADY OCCURRED.                                        **
**       F) IF AN ABEND HAS OCCURRED, EXIT IS MADE TO REGULAR        **
**          PROCESSING.                                              **
**       G) IF AN ABEND HAS NOT OCCURRED, TURN ON THE ABEND BIT IN   **
**          THE DUMMY TCB (TCBFA AT TCB+1D) AND MOVE A SYSTEM '999'  **
**          ABEND CODE TO THE DUMMY TCB (TCB+11) AND THEN TURN ON    **
**          THE CANCELLED BIT IN THE PROBLEM PROGRAM CSCB            **
**          (CHCLD AT CSCB+7).                                       **
**       H) CONTINUE WITH NORMAL DE-ALLOCATION PROCESSING AS WE ARE  **
**          NOW AT LABEL 'XIT'.                                      **
**                                                                   **
**  II - EXTERNAL PROCESSING                                         **
**                                                                   **
**       WHEN MODULE 'IEFBB410' REGAINS CONTROL, THE TCB AND CSCB    **
**       FLAGS ARE INTERROGATED.  IF THEY ARE ON, FURTHER            **
**       PROCESSING (DE-ALLOCATION) OF THE JOB (AND THE JOB) ARE     **
**       CANCELLED.                                                  **
**                                                                   **
** III - IPL WITH A CLPA IS REQUIRED TO IMPLEMENT THIS USERMOD.      **
**                                                                   **
***********************************************************************
         SPACE 1
IEFAB4FD CSECT
IEFAB4FD AMODE 31                       ADDRESS MODE           @XA22001
IEFAB4FD RMODE ANY                      RESIDENCE MODE         @XA22001
         EXTRN IEEAB400                 EXTERNAL REFERENCE     @XA22001
MAINENT  DS    0H                       ENTRY POINT ALIGNMENT
         USING *,R15                    SET TEMPORARY BASE REGISTER
         B     PROLOG                   AND JUMP AROUND I.D.
         DC    AL1(22)                  FLAGS                  @XA22001
         DC    C'IEFAB4FD 85098 '       I.D. AND DATE          @XA22001
         DC    C'JBB2220'               FMID FOR MVS/XA 2.2.0  @XA22001
         DC    X'00'                    FILLER                 @XA22001
         DROP  R15                      DROP UNNESSARY BASE REGISTER
         SPACE 1
PROLOG   STM   R14,R12,12(R13)          SAVE REGISTERS
         BALR  R12,R00                  SET NEW BASE
PSTART   DS    0H                       ENTRY POINT ALIGNMENT
         USING PSTART,R12               INFORM ASSEMBLER
         SLR   R15,R15                  CLEAR WORK REG         @XA22001
         IC    R15,SIZDATD              MESSAGE AREA SUBPOOL   @XA22001
         SLR   R00,R00                  CLEAR WORK REG         @XA22001
         ICM   R00,7,SIZDATD+1          SIZE OF MESSAGE AREA   @XA22001
       MODESET EXTKEY=SCHED,SAVEKEY=(2) GET SCHED KEY; SAVE USER KEY
*      GSPACE  RU,LV=(0),SP=(15)        GET WORKING STORAGE    @XA22001
         L     R00,SIZDATD                  SUBPOOL AND LENGTH @XA22001
         LR    R01,R13                      SET ADDR IN R1     @XA22001
         L     R15,GS0002C                  SET GSPACE EP.     @XA22001
         CNOP  2,4                          ALIGNMENT          @XA22001
GS0002L  BALR  R14,R15                      CALL GSPACE        @XA22001
         B     GS0002E                      +0 NORMAL RETURN   @XA22001
         B     GS0002D                      +4 REQUIRES GETMN  @XA22001
GS0002C  DC    V(GSPACE)                    GSPACE PRIMARY EP  @XA22001
GS0002V  DC    V(GSPACE1)                   GSPACE SECNDRY EP  @XA22001
GS0002D  SVC   10                           GETMAIN SVC        @XA22001
         LTR   R00,R14                      RETURN NECESSARY   @XA22001
         L     R15,GS0002V                  SET SECNDRY EP     @XA22001
         BNZ   GS0002L                      RETURN TO GSPACE   @XA22001
GS0002E  EQU   *                                               @XA22001
         LR    R11,R01                  SAVE STORAGE ADDRESS
         USING DATD,R11                 PROVIDE DSECT ADDRESSABILITY
         ST    R13,SA00001+4            SET UP NEW SAVE AREA
         STC   R02,OLDKEY               PLUG IN OLD USER KEY
       MODESET KEYADDR=(2)              RESET TO USER KEY
         LM    R00,R02,20(R13)          LOAD USER REGISTERS
         ST    R11,8(,R13)              BACK-CHAIN SAVE AREA
         LR    R13,R11                  FORWARD-CHAIN SAVE AREA
       MODESET EXTKEY=ZERO              GO TO SUPERVISOR KEY
         MVC   PC00001(20),0(R01)       SAVE PARAMETER LIST
       MODESET EXTKEY=SCHED             GO TO SCHEDULER KEY
         L     R02,PC00001              LOAD A(FDFCNMAP)
         TM    WTPONLY(R02),B'00100000' IS REQUEST- WTP ONLY
         BNZ   RF00022                  NO.... DO WTO ONLY
         L     R10,PC00001+8            LOAD A(MSGLNTH)
         L     R14,PC00001+12           LOAD A(FLAGLNTH)
         L     MSGLNTH,BUFLNTH(,R10)    LOAD LENGTH OF BUFFER
         SL    MSGLNTH,FLGSLNTH(,R14)   CALC LENGTH OF MESSAGE
         L     R10,PC00001+4            LOAD PTR TO A(MSGBUFFR)
         LR    FLGSPTR,MSGLNTH          SAVE MSG LENGTH
         AL    FLGSPTR,BUFFPTR(,R10)    CALC PTR TO FLAGS
         B     RC00022                  CONTINUE.....
         SPACE 1
RF00022  L     R10,PC00001+8            LOAD A(MSGLNTH)
         L     MSGLNTH,BUFLNTH(,R10)    LOAD MESSAGE LENGTH
         SPACE 1
RC00022  XC    WTOBUFFR(138),WTOBUFFR   CLEAR WTO/WTP PARMLIST
         LA    R10,WTOBUFFR             ADDRESS WTO BUFFER
         ST    R10,WPLPTR               SAVE A(WTOBUFFR)
         LA    R14,4                    *-----------------------------*
         ALR   R14,MSGLNTH              * LENGTH OF WTP PARM LIST     *
         STH   R14,WPLLGH(,R10)         *-----------------------------*
         LR    R15,MSGLNTH              COPY MSGLNGTH
         BCTR  R15,0                    MACHINE LENGTH
         L     R00,PC00001+4            LOAD PTR TO A(MSGBUFFR)
         LR    R01,R00
         L     R04,BUFFPTR(,R01)        LOAD A(MSGBUFFR)
         EX    R15,SM00334              MOVE MSG INTO WTP BUFR
         L     R02,PC00001              LOAD A(FDFCNMAP)
         TM    WTPONLY(R02),B'00100000' IS REQUEST- WRITE TO PGMR ONLY
         BNO   RF00033                  YES...
         ALR   R14,R10
         OI    WPLROUTK(R14),B'00100000'  SET WTP ROUTE CODE
         OI    WPLMCSFA(R10),B'10000000'  INDICATE ROUTING CODE GIVEN
         B     RC00033                  CONTINUE.....
         SPACE 1
RF00033  DS    0H
         L     R10,WPLPTR               LOAD A(WPL PARM LIST)
         LH    R02,WPLLGH(,R10)         LOAD WPL LENGTH
         ALR   R02,R10                  CALC A(WPL FLAGS)
         L     R04,PC00001+12           LOAD A(FLAGLNTH)
         L     R05,FLGSLNTH(,R04)       LOAD LENGTH OF FLAGS
         BCTR  R05,0                    MACHINE LENGTH
         EX    R05,SM00338              MOVE FLAGS TO WTP LIST
         L     R06,PC00001              LOAD A(FDFCNMAP)
         TM    RDCODES(R06),B'10000000' ROUTE/DESC CODES PRESENT
         BNO   RF00040                  NO....
         OI    WPLMCSFA(R10),B'10000000' INDICATE ROUTE/DESC CODES
RF00040  L     R10,PC00001               LOAD A(FDFCNMAP)
         TM    MSGTYFLG(R10),B'01000000' MESSAGE TYPE FLAGS PRESENT
         BNO   RC00033                   NO....
         L     R10,WPLPTR                LOAD A(WPL)
         OI    WPLMCSFD(R10),B'00010000' INDICATE MSGTYPE FLAGS
         SPACE 1
*        CALL  IEEAB400,(WPLPTR,JSCBPTR)  BUFFER WTP & ISSUE MESSAGE
RC00033  LA    R10,WPLPTR               *-----------------------------*
         ST    R10,AL00001              * BUILD CALL                  *
         L     R10,PC00001+16           *           PARAMETER LIST    *
         ST    R10,AL00001+4            *-----------------------------*
         L     R15,CV00058              LOAD ENTRY ADDR FOR IEEAB400
         LA    R01,AL00001              POINT TO PARMLIST
         BALR  R14,R15                  GO TO IEEAB400
         EJECT
***********************************************************************
**                                                                   **
**     BEGIN NOT CATLGD X, NOT DELETED X MODIFICATION                **
**                                                                   **
***********************************************************************
         SPACE 1
         CLC   WTOBUFFR+4(7),=C'IEF283I'   Q. NOT DELETED X
         BE    GOTITD                      YES-GO TO MODIFICATION
         CLC   WTOBUFFR+4(7),=C'IEF287I'   Q. NOT CATLGD X
         BNE   XIT                      NO-EXIT TO NORMAL
GOTITD   MODESET EXTKEY=ZERO            TO SUPERVISOR KEY
         L     R01,PC00001+16           LOAD A(LCTJSCB) PTR
         LA    R01,0(0,R01)             CLEAR HI-ORDER BYTE OF R01
         LA    R10,360                  OFFSET LCT+0 TO LCTJSCB
         SR    R01,R10                  PTR TO BEGINNING OF LCT
         LR    R10,R01                  NOW SET INTO R10
         SPACE 1                                                    RMD
         CLC   504(8,R10),=C'ENDOFLCT'  CHECK FOR VALID LCT         RMD
         BNE   RESETPK                  NO.... EXIT TO NORMAL       RMD
         SPACE 1                                                    RMD
         L     R01,LCTTCBAD(,R01)       ADDR OF INIT/PP DUMMY TCB
         SPACE 1
         TM    TCBFLGS1(R01),TCBFA      Q. ABENDED ALREADY
         BNZ   RESETPK                  YES-EXIT TO NORMAL
         SPACE 1
         L     R10,LCTCSCBA(0,R10)      ADDR OF PP CSCB
         OI    CHACT(R10),X'04'         CHCLD FLAG TO ON IN CSCB
         OI    TCBFLGS1(R01),TCBFA      ABEND FLAG ON IN INIT/PP TCB
         OI    TCBCMPC(R01),B'10011001'    SET ABEND CODE '99'
         OI    TCBCMPC+1(R01),B'10010000'  SET ABEND CODE '9'
RESETPK  MODESET EXTKEY=SCHED           BACK TO SCHEDULER KEY FOR FREE
         SPACE 1
**********************************************************************
**                                                                  **
**         RESUME IEFAB4FD NORMAL PROCESSING                        **
**                                                                  **
**********************************************************************
         SPACE 1
XIT      IC    R02,OLDKEY               SET-UP
         L     R13,4(,R13)              * PICK UP SAVE-AREA ADDRESS *
         SLR   R15,R15                                         @XA22001
         IC    R15,SIZDATD              SELECT SUBPOOL NO.     @XA22001
         SLR   R00,R00                                         @XA22001
         ICM   R00,7,SIZDATD+1                                 @XA22001
         LR    R01,R11                  FREEMAIN
*      FSPACE  RU,LV(0),A=(1),SP=(15)   DO FREE MAIN           @XA22001
         L     R00,SIZDATD                 SUBPOOL AND LENGTH  @XA22001
         L     R15,GS0006C                 FSPACE EP IN R15    @XA22001
         CNOP  2,4                         ALIGNMENT           @XA22001
GS0006L  BALR  R14,R15                     CALL FSPACE         @XA22001
         B     GS0006E                     +0 NORMAL RETURN    @XA22001
         B     GS0006D                     +4 REQUIRES FMAIN   @XA22001
GS0006C  DC    V(FSPACE)                                       @XA22001
GS0006D  SVC   10                                              @XA22001
GS0006E  EQU   *                                               @XA22001
       MODESET KEYADDR=(2)              BACK TO USER KEY
         SLR   R15,R15                  SET RETURN REGISTER TO ZERO
         L     R14,12(,R13)             RELOAD RETURN REGISTER
         LM    R00,R12,20(R13)          RELOAD CALLERS REGISTERS
         BR    R14                      RETURN TO CALLER........
         TITLE 'DATA AREAS, CONSTANTS, DSECTS, EQUATES, MISC....'
DATA     DS    0H
SM00334  MVC   WPLTXT(0,R10),MSGBUFFR(R04)  ** EXECUTED **     @XA22001
SM00338  MVC   WPLFLGS(0,R02),INFLAGS(FLGSPTR) EXECUTED **     @XA22001
         DS    0F
SIZDATD  DC    AL1(230)                     SUBPOOL
         DC    AL3(((ENDDATD-DATD+7)/8)*8)  DATA LENGTH@XA22001
CV00058  DC    A(IEEAB400+X'80000000')                         @XA22001
         DS    0F
A4FDPTCH DC    (50)X'00'              * PATCH AREA *
ENDDATA  EQU   *
         DS    0F                       ALIGNMENT
DATD     DSECT
SA00001  DS    18F                      SAVE AREA
PC00001  DS    5F                       IEFAB4FD PARAMETER LIST
AL00001  DS    2A                       PARAMETER LIST FOR CALL
         DS    0D
WPLPTR   DS    A                        WPL PARAM LIST PTR
WTOBUFFR DS    CL138                    WTO/WPL BUFFER
OLDKEY   DS    AL1                      SAVEAREA FOR USER KEY
         DS    0D
ENDDATD  EQU   *
         SPACE 1
IEFAB4FD CSECT
R00      EQU   00
R01      EQU   01
R02      EQU   02
R03      EQU   03
FLGSPTR  EQU   R03                      PTR TO MSG FLAGS
R04      EQU   04
R05      EQU   05
R06      EQU   06
R07      EQU   07
R08      EQU   08
R09      EQU   09
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
MSGLNTH  EQU   R02
INFLAGS  EQU   0
MSGBUFFR EQU   0
WPLRF    EQU   0
WPLRPTR  EQU   WPLRF
WPL      EQU   0
WPLLGH   EQU   WPL
WPLMCSF  EQU   WPL+2
WPLMCSF1 EQU   WPLMCSF
WPLMCSFA EQU   WPLMCSF1
WPLMCSFD EQU   WPLMCSF1
WPLMCSF2 EQU   WPLMCSF+1
WPLTXT   EQU   WPL+4
WPLFLGS  EQU   R00
WPLDESC  EQU   WPLFLGS
WPLDESC1 EQU   WPLDESC
WPLDESC2 EQU   WPLDESC+1
WPLROUT  EQU   WPLFLGS+2
WPLROUT1 EQU   WPLROUT
WPLROUT2 EQU   WPLROUT+1
WPLROUTK EQU   WPLROUT2
WPLMSGTY EQU   WPLFLGS+4
WPLMSGT1 EQU   WPLMSGTY
WPLMSGT2 EQU   WPLMSGTY+1
WPLLS01  EQU   R00
WPLLTF   EQU   WPLLS01
WPLLTF1  EQU   WPLLTF
WPLML    EQU   0
WPLMLLTF EQU   WPLML+2
WPLMLLT1 EQU   WPLMLLTF
FUNCMAP  EQU   0
RDCODES  EQU   FUNCMAP
MSGTYFLG EQU   FUNCMAP
WTPONLY  EQU   FUNCMAP
BUFFPTR  EQU   0
BUFLNTH  EQU   0
FLGSLNTH EQU   0
JSCBPTR  EQU   0
LCTCSCBA EQU   0
LCTTCBAD EQU   8
TCBFA    EQU   X'80'
TCBFLGS1 EQU   29
CHACT    EQU   7
TCBCMPC  EQU   17
         END   IEFAB4FD,('HEB0020 ',0220,88197)
//ASM.SYSLIN DD DSN=&&LOADSET,DISP=(,PASS),SPACE=(CYL,(5,1)),
//           UNIT=SYSDA,DCB=(RECFM=F,LRECL=80,BLKSIZE=80)
//STEP2   EXEC PGM=GIMSMP,REGION=4000K
//STEPCAT  DD  DSN=CATALOG.VMVSCAT,DISP=SHR                    @XA22001
//SMPCSI   DD  DSN=GLOBAL.CSI,DISP=SHR                         @XA22001
//SMPHOLD  DD  DUMMY
//SMPOUT   DD  SYSOUT=*
//SMPRPT   DD  SYSOUT=*
//SMPLIST  DD  SYSOUT=*
//SMPSNAP  DD  DUMMY
//SYSPRINT DD  SYSOUT=*
//SMPPTFIN DD  *
++USERMOD (HEB0020) .
++VER     (Z038)     FMID(JBB2220) .
++MOD     (IEFAB4FD) DISTLIB(AOSB3) .
// DD DSN=&&LOADSET,DISP=(OLD,DELETE)
//SMPCNTL DD *
  SET      BDY(GLOBAL) .
  RECEIVE  .
  SET      BDY(MVSTZN) .
  APPLY    SELECT (HEB0020) CHECK .
