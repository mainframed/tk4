00010000PROC 0 DEBUG ID(&SYSUID.) NEW PARM(00) TLIB0 TLIB1 VOLUME()
00020000/*********************************************************************/
00030000/* REFER   IPO1.CMDPROC(IPCS)                       COMPID  SYSTEMS  */
00040000/* THIS CLIST ALLOCATES IPCS DUMP DIRECTORY AND IPCS PRINT FILES     */
00050000/* PRIOR TO INVOKING THE IPCS COMMAND.                               */
00060000/* IF OPTION 'NEW' IS SPECIFIED THEN A NEW DUMP DIRECTORY IS CREATED.*/
00070000/*********************************************************************/
00080004GLOBAL DSN LVL VOLSER CPUV VOLV DEVTV NODEV
00090000IF &DEBUG = THEN CONTROL NOMSG
00100000   $C QSPF
00110000      IF &LASTCC = 4 THEN DO
00120000                          WRITE **** CANNOT ENTER IPCS UNDER ISPF ****
00130000                          EXIT
00140000                          END
00150000IF &DEBUG = THEN CONTROL MSG
00160000CONTROL NOFLUSH END(QUAZ)
00170000IF &DEBUG NE DEBUG THEN CONTROL NOLIST MSG PROMPT
00180000ELSE DO
00190000   CONTROL LIST PROMPT CONLIST SYMLIST MSG
00200000IF &NEW = NEW THEN GOTO ASKNEW
00210000   WRITE LEVEL IS &LVL
00220000   WRITE &DEBUG ID(&SYSUID.) &NEW PARM(&PARM) VOLUME(&VOLUME)
00230000   READ &JUNK
00240000QUAZ
00250000CLRSCRN
00260000   WRITE
00270000   WRITENR ENTER AN ALTERNATE TASKLIB DSN OR PRESS ENTER:
00280000   READ &TLIB0
00290000   IF &TLIB0^=  THEN SET &TLIB0='&TLIB0'
00300000   SET &TLIB1 =
00310000CLRSCRN
00320000IF &DEBUG = THEN CONTROL NOMSG
00330000FREE  F(IPCSDDIR IPCSPRNT SYMPDS)
00340000IF &DEBUG = THEN CONTROL MSG
00350000/*********************************************************************/
00360000/* ALLOCATE SYMPDS FOR SYMDUMP                                       */
00370000/*********************************************************************/
00380000ALLOC F(SYMPDS) DS('AOST.SYMDUMP.OBJ') SHR
00390000/*********************************************************************/
00400000/* DELETE THE OLD DUMP DIRECTORY AND ALLOCATE A NEW ONE              */
00410000/*********************************************************************/
00420007 
00430000IF &NEW EQ NEW THEN DO
00440005                    WRITE ENTER CORRECT VOLSER FOR ALLOCATION
00450005                    WRITE WCC1 = ATDI1A      WCC2 = ATDI2A
00460005                    WRITENR ENTER VOLSER FOR DATASETS:
00470005                    READ &VOLUME
00480007 
00490007NEWDS: +
00500000   CONTROL LIST
00510000      DELETE 'AIPCS.&ID..DEBUG' CLUSTER
00520000      DEFINE CLUSTER (NAME('AIPCS.&ID..DEBUG') VOL(&VOLUME.) +
00530000                     IMBED OWNER(&ID) REPLICATE UNIQUE) +
00540000             INDEX   (NAME('AIPCS.&ID..DEBUGI') TRACKS(1)) +
00550000             DATA    (NAME('AIPCS.&ID..DEBUGD') CYLINDERS(3) +
00560000                     KEYS(128,0) BUFFERSPACE(X'10000') +
00570000                     CONTROLINTERVALSIZE(X'1000'))
00580000      IPCSDDIR 'AIPCS.&ID..DEBUG'   /* INITIALIZE THE DUMP DIRECTORY */
00590000   CONTROL NOLIST
00600000QUAZ
00610000/*********************************************************************/
00620000/* ALLOCATE THE DUMP DIRECTORY AND PRINT FILES                       */
00630000/*********************************************************************/
00640000IF &DEBUG ^= DEBUG THEN CONTROL NOMSG
00650000DEL IPCSPRNT.LIST
00660000ASKNEW: +
00670000   $C WHATIF DATASET('AIPCS.&ID..DEBUG') CATALOGED
00680000      IF &LASTCC = 4 THEN DO
00690000                          SET &NEW = NEW
00700006                          WRITE *** IPCS DATASETS NOT ALLOCATED :
00710000                          WRITE ENTER CORRECT VOLSER FOR ALLOCATION
00720000                          WRITE WCC1 = ATDI1A      WCC2 = ATDI2A
00730000                          WRITENR ENTER VOLSER FOR DATASETS:
00740000                          READ &VOLUME
00750000                          GOTO NEWDS
00760000                          QUAZ
00770000CONTROL MSG
00780000ALLOC FI(IPCSDDIR) DA('AIPCS.&ID..DEBUG') SHR
00790000ALLOC FI(IPCSPRNT) DS(IPCSPRNT.LIST) NEW SPA(19,10) TR
00800000/*********************************************************************/
00810000/* INVOKE IPCS AND SET UP AN INITIAL SETDEF IPCS SUBCOMMAND          */
00820000/*********************************************************************/
00830000IF &TLIB0=  && &TLIB1= THEN GOTO INVOKEIT
00840000   IF &DEBUG ^= DEBUG THEN CONTROL NOMSG
00850000   FREE F(BUGTASK)
00860000   CONTROL MSG
00870000   ALLOC F(BUGTASK) DS(&TLIB0 &TLIB1) SHR
00880000   @C CONCAT (TASKLIB$ BUGTASK)
00890000INVOKEIT: +
00900000   SET &MENU=MENU
00910000   %TSET
00920000   $C IPCS PARM(&PARM)
00930000   IF &DEBUG=DEBUG THEN READ &JUNK
00940000   %MENU &DEBUG &MENU &NEW
