00010000PROC 0 SU() DEBUG
00020000/*********************************************************************/
00030000/* REFER   IPO1.CMDPROC(LISTSU)                                      */
00040000/* COMPID  SYSTEMS                                                   */
00050000/* DOC     THIS CLIST EXECUTES UNDER IPCS TO DIPLAY ALL SUS THAT     */
00060000/*         ARE CURRENTLY INSTALLED ON A SYSTEM THAT IS IN THE        */
00070000/*         DUMP BEING ANALYZED. OPTIONALLY, IT CHECK FOR A           */
00080000/*         SPECIFIED SU.                                             */
00090000/*                                                                   */
00100000/*********************************************************************/
00110000/******************************************************************/
00120000/* INITIALIZATION                                                 */
00130000/******************************************************************/
00140000IF &DEBUG=DEBUG THEN CONTROL SYMLIST CONLIST LIST
00150000SET &RCODE=0                       /* SET RETURN CODE             */
00160000SET &SUCTR=0                       /* 1ST SU TO CHECK             */
00170000SET &SUEND=100                     /* HIGHEST POSSIBLE            */
00180000/******************************************************************/
00190000/* INSURE THAT A SU BIT STRING IS AVAILABLE                       */
00200000/******************************************************************/
00210000COMPARE ADDRESS(4C.%+414) LEN(4)   /* VALID PTR TO BIT STRING     */+
00220000  WITH(VALUE(X'00000000'))         /* INSURE NOT ZERO             */+
00230000  MASK(X'00FFFFFF')
00240000IF &LASTCC=0 THEN +
00250000  DO
00260000    WRITE ==> ERROR: SU BIT STRING NOT AVAILABLE
00270000    SET &RCODE=8                   /* ERROR RETURN CODE           */
00280000    GOTO EXIT
00290000  END
00300000ELSE                               /* HAVE SU BIT STRING ADDRESS  */
00310000EQ SUBITADD 4C.%+414% PTR          /* SU BIT STRING ADDRESS       */
00320000/******************************************************************/
00330000/* PROCESS THE SU#, IF ANY, AND INSURE THAT IT IS VALID           */
00340000/******************************************************************/
00350000IF &SU^=   THEN                    /* SPECIFIC SU# SPECIFIED      */+
00360000  IF &SU>&SUEND THEN               /* INSURE VALID SU NUMBER      */+
00370000    DO
00380000      WRITE ==> ERROR: SU(&SU) IS GREATER THAN MAX(&SUEND)
00390000      SET &RCODE=8                 /* ERROR RETURN CODE           */
00400000      GOTO EXIT
00410000    END
00420000  ELSE                             /* HAVE VALID SU NUMBER        */+
00430000    DO
00440000      SET &SUCTR=&SU               /* START OF LOOP               */
00450000      SET &SUEND=&SU               /* END OF LOOP CONTROL         */
00460000    END
00470000ELSE                               /* USE ALL POSSIBLE SUS        */
00480000/******************************************************************/
00490000/* SET UP THE HEADER AND PAGE CONTROL                             */
00500000/******************************************************************/
00510000NOTE '*************************************************************+
00520000******' PAGE
00530000NOTE '***    DISPLAY OF SU(&SUCTR:&SUEND)                  -
00540000                   ***'
00550000NOTE '*************************************************************+
00560000******'
00570000/******************************************************************/
00580000/* PROCESS ONE OR MORE SU BIT TESTS                               */
00590000/******************************************************************/
00600000SET &MASK=&STR(8040201008040201)   /* BIT TESTS MASKS FOR A BYTE  */
00610000DO WHILE &SUCTR<=&SUEND            /* CHECK EACH SU               */
00620000  SET &OFFSET=&SUCTR/8             /* BYTE OFFSET INTO STRING     */
00630000  SET &SUBV=2*(&SUCTR//8)+1        /* MASK SUBSTRING VALUE        */
00640000  IF &SUBV=1 AND                   /* START OF NEW BYTE    AND    */+
00650000    &SU=   THEN                    /* NO SU# SPECIFIED            */+
00660000    DO
00670000      COMPARE ADDR(SUBITADD+&OFFSET.N) /* CHECK THIS BYTE FOR     */+
00680000      LEN(1) WITH(VALUE(X'00'))        /* ALL ZEROS               */
00690000      IF &LASTCC=0 THEN            /* NO SU BITS ON               */+
00700000        DO
00710000          SET &SUCTR=&SUCTR+8      /* STEP TO NEXT BYTE           */
00720000          GOTO LOOPEND             /* CONTINUE IN LOOP            */
00730000        END
00740000      ELSE                         /* MUST BE AT LEAST ONE BIT ON */
00750000    END
00760000  ELSE                             /* NOT FIRST BIT OR SPECIFIC SU*/
00770000  SET &VALUE=&SUBSTR(&SUBV:&SUBV+1,&MASK)
00780000  COMPARE ADDR(SUBITADD+&OFFSET.N) /* TEST FOR SU BIT             */+
00790000    LENGTH(1) WITH(VALUE(X'&VALUE'))/*   BEING SET TO A           */+
00800000    MASK(X'&VALUE')                /*   ONE                       */
00810000  IF &LASTCC=0 THEN +
00820000    NOTE 'SU &SUCTR IS INSTALLED'
00830000  ELSE +
00840000    IF &SU^=   THEN                /* TELL USER IF SPECIFIED      */+
00850000      NOTE 'SU &SU IS NOT INSTALLED'
00860000    ELSE
00870000  SET &SUCTR=&SUCTR+1              /* STEP TO NEXT SU(BIT)        */
00880000LOOPEND: END                       /* END OF SU BIT TEST LOOP     */
00890000EXIT: EXIT CODE(&RCODE)
