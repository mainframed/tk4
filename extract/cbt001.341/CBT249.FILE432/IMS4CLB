00010001PROC     0 TEST NOTEST
00020001IF       &TEST = TEST +
00030001THEN     CONTROL PROMPT   LIST   CONLIST   SYMLIST MSG
00040001ELSE     CONTROL PROMPT NOLIST NOCONLIST NOSYMLIST
00050000GLOBAL &HEXVALUE &VALUE &RELCODE
00060000/**********************************************************************/
00070000/*     H     H   EEEEEEE    AAAAA    DDDDDD    EEEEEEE   RRRRRR       */
00080000/*     H     H   E         A     A   D     D   E         R     R      */
00090000/*     HHHHHHH   EEEEEEE   AAAAAAA   D     D   EEEEEEE   RRRRRR       */
00100000/*     H     H   E         A     A   D     D   E         R   R        */
00110000/*     H     H   EEEEEEE   A     A   DDDDDD    EEEEEEE   R     R      */
00120000/*                                                                    */
00130000/**********************************************************************/
00140000/*  CLIST NAME: IMS4CLB           REL/DATE: 1.0/01.__.79              */
00150000/*                                                                    */
00160000/*  DOC: THIS CLIST WILL FIND THE CLB FOR A RELATIVE LINE, AND RELATED*/
00170000/*       COMMUNICATIONS CONTROL BLOCKS, IN ONE OF TWO WAYS. THE       */
00180000/*       THE RELATIVE LINE# AND RELATIVE PTERM#, OR THE LTERM NAME,   */
00190000/*       MUST BE PROVIDED. IF THE RELATIVE LINE# AND PTERM# NUMBERS   */
00200000/*       ARE PROVIDED, WE GO DIRECTLY TO THE CLB POOL. IF AN LTERM    */
00210000/*       NAME IS GIVEN, WE DO A FIND ON THAT NAME IN THE CNT POOL,    */
00220000/*       AND FIND THE ASSOCIATED CTB, THEN CLB, FROM THERE.           */
00230000/*                                                                    */
00240000/*  SYMBOLS EQUATED:  CLBLLL = THE CLB FOR A RELATIVE LINE NUMBER     */
00250000/*                    CTBLLLPP = CTB FOR A REL PTERM ON A REL LINE    */
00260000/*                    CTTLLLPP = CTT FOR A REL PTERM ON A REL LINE    */
00270000/*                    CIBLLLPP = CIB FOR A REL PTERM ON A REL LINE    */
00280000/*                    CCBLLLPP = CCB FOR A REL PTERM ON A REL LINE    */
00290000/*                    CNTTT = THE CNT FOR A NAMED LTERM               */
00300000/*                    WHERE LLL = 3 (OR MORE) DIGIT REL LINE NUMBER   */
00310000/*                          PP = 2 (OR MORE) DIGIT REL PTERM NUMBER   */
00320000/*                          TT = LOGICAL TERMINAL NAME                */
00330000/*                                                                    */
00340000/*  SYMBOLS FOUND: SAME AS ABOVE                                      */
00350000/*                                                                    */
00360000/*  RETURN: NONE                                                      */
00370000/*                                                                    */
00380000/*  DEPENDENCIES: 1) THIS CLIST REQUIRES THAT TSO COMMAND             */
00390000/*                   CLRSCRN BE INSTALLED IN YOUR ENVIRONMENT.        */
00400000/*                                                                    */
00410000/*                2) THIS CLIST REQUIRES THAT CLIST 'HEX' BE          */
00420000/*                   INSTALLED AND CONCATENATED TO YOUR LOGON.        */
00430000/*                                                                    */
00440000/*  USE: WHEN ENTERED, THIS CLIST ASKS THE USER WHETHER HE WANTS TO   */
00450000/*       FIND THE CONTROL BLOCKS VIA REL LNE/REL PTERM, OR BY AN      */
00460000/*       LTERM NAME. IF VIA REL LNE/REL PTERM, WE COUNT THRU THE      */
00470000/*       CLBPOOL FOR THE REL LNE, THEN RUN DOWN CTB'S TIL WE GET      */
00480000/*       TO THE CORRECT REL PTERM. EQUATES ARE DONE ON THE CLB        */
00490000/*       FOR THE LINE AND PTERM REQUESTED.                            */
00500000/*       IF THE LTERM NAME IS SUPPLIED, WE USE THE BOUNDARIES OF THE  */
00510000/*       CNT POOL, FOUND FROM THE SCD, AND DO AN IPCS 'FIND NOBREAK'  */
00520000/*       FOR THE NAME. IF WE FIND THE LTERM'S CNT, WE EQUATE IT BY    */
00530000/*       THE LTERM NAME, BUT THE ASSOCIATED CTB, CLB, CIB, CTT, AND   */
00540000/*       CCB, ARE EQUATED BY REL LNE#/REL PTERM# FOUND IN CTB+X'5C'.  */
00550000/*                                                                    */
00560000/*RGM******************************************************************/
00570000          EVAL SCD+14 L(2)     /* CHECK TO SEE IF WE'RE INIT'ED */
00580000          IF &LASTCC^=276 THEN DO
00590000     WRITE THE RELEASE FIELD AT SCD+X'14' IS INVALID. RE-INITIALIZATION
00600000     WRITENR MAY BE NECESSARY. DEPRESS ENTER TO EXIT.
00610000           READ
00620000           EXIT            /* IF NOT, DO NOT CONTINUE */
00630000           END
00640000 BEGIN:     /* CLRSCRN */    /* CLEAR THE SCREEN */ +
00650000WRITE  +++IMS4CLB
00660000WRITE     THIS CLIST WILL FIND A CLB, CTB, CTT, CIB, AND CCB, BASED ON
00670000WRITE     THE INPUT GIVEN. IF YOU HAVE THE RELATIVE LINE# AND RELATIVE
00680000WRITE     PTERM#, WE WILL FIND THE CLB. OTHERWISE, WE WILL FIND THE
00690000WRITE     LTERM NAME IN THE CNT POOL. IN EITHER CASE, WE THEN FIND THE
00700000WRITE     ASSOCIATED CTB, AN FROM THERE ALL THE OTHER CONTROL BLOCKS.
00710000           WRITE
00720000WRITE SYMBOLS EQUATED:  CLBLLL = THE CLB FOR A RELATIVE LINE NUMBER
00730000WRITE                   CTBLLLPP = CTB FOR A REL PTERM ON A REL LINE
00740000WRITE                   CTTLLLPP = CTT FOR A REL PTERM ON A REL LINE
00750000WRITE                   CIBLLLPP = CIB FOR A REL PTERM ON A REL LINE
00760000WRITE                   CCBLLLPP = CCB FOR A REL PTERM ON A REL LINE
00770000WRITE                   CNTTT = THE CNT FOR A NAMED LTERM
00780000WRITE                   WHERE LLL = 3 (OR MORE) DIGIT REL LINE NUMBER
00790000WRITE                         PP = 2 (OR MORE) DIGIT REL PTERM NUMBER
00800000WRITE                         TT = LOGICAL TERMINAL NAME
00810000            WRITE
00820000            EVAL SCD+4AC L(2)       /* GET LEN OF CLB */
00830000            SET &CLBLEN=&LASTCC
00840000            EVAL SCD+4D0 L(2)       /* GET LEN OF CTB */
00850000            SET &CTBLEN=&LASTCC
00860000            EVAL SCD+4D8 L(2)       /* DITTO CIB */
00870000            SET &CIBLEN=&LASTCC
00880000            EVAL SCD+490 L(2)       /* CTT */
00890000            SET &CTTLEN=&LASTCC
00900000            EVAL SCD+530 L(2)       /* CCB */
00910000            SET &CCBLEN=&LASTCC
00920000            WRITENR DO YOU WANT THE PRINT OPTION? (Y)/N ===>
00930000            SET &PAD1=&STR(00)      /* SET UP PADS FOR CONCATENATION */
00940000            SET &PAD2=&STR(0)    /* WHILE USER IS READING THE ABOVE */
00950000            READ &ANS            /* GET Y OR N ANSWER */
00960000 IF &ANS=N THEN SETD NOPRINT DISPLAY(NOMACH NOREQ SYMBOL NOREM STOR)
00970000           ELSE SETD PRINT DISPLAY(NOMACH NOREQ SYMBOL NOREM STORAGE)
00980000 NEXTLINE:  /* CLRSCRN */ +
00990000 WRITE +++ OPTIONS
01000000 WRITE             1) ENTER A RELATIVE LINE# AND PTERM#
01010000 WRITE             2) ENTER AN LTERM NAME
01020000 WRITE             X) EXIT
01030000 WRITE
01040000 WRITENR ENTER OPTION ===>
01050000 READ &OPT
01060000 IF &OPT=1 THEN GOTO PROMPT          /* GOTTA ASK FOR LINE/PTERM */
01070000 IF &OPT=2 THEN GOTO VIACNT          /* GOTTA ASK FOR LTERM NAME */
01080000 IF &OPT=X THEN EXIT                 /* USER WANTS OUT */
01090000            WRITENR &OPT DOES NOT COMPUTE. DEPRESS ENTER AND TRY AGAIN.
01100000            GOTO CONTINUE            /* OTHERWISE TRY AGAIN */
01110000 VIACNT: WRITE
01120000         WRITE ENTER LTERM NAME YOU WISH TO SEE, OR DEPRESS ENTER TO
01130000         WRITENR RETURN TO OPTIONS MENU. ===>
01140000            READ &LTN                /* READ LTERM NAME */
01150000            IF &LTN= THEN GOTO NEXTLINE  /* BACK TO BEGINNING*/
01160000            L CNT&LTN NODISPLAY     /* CHECK TO SEE IF ALREADY EQUATED*/
01170000            IF &LASTCC=0 THEN GOTO SKIPFIND /* YES - SKIP FINDING IT */
01180000            EVAL SCD+4F0 LE(2)
01190000            SET &CNTLEN=&LASTCC       /* GET CNT LEN FOR EQUATE */
01200000  FNDLTERM: F C'&LTN' AD(CNTSTRT:CNTEND) NOBREAK NODISPLAY /* DO FIND*/
01210000            IF &LASTCC^=0 THEN DO        /* FIND IS N/G, BUT COULD BE*/
01220000            WRITE COULD NOT FIND CNT FOR &LTN IN CNT POOL. IT EITHER
01230000            WRITE DOESN'T EXIST, OR IT RESIDES IN UNAVAILABLE STORAGE.
01240000            GOTO HITENTER       /* STORAGE IS NOT IN DUMP. TRY AGAIN.*/
01250000            END
01260000            EQ CNT&LTN X-18 LEN(&CNTLEN) STR(CNT)  /* DO EQU */
01270000  SKIPFIND: /* CLRSCRN */ +
01280000            L CNT&LTN                         /* LIST IT */
01290000            WRITE
01300000            EVAL CNT&LTN+24% LE(4)     /* SEE IF THE CTB STORAGE IS */
01310000            IF &LASTCC=12 THEN DO       /* AVAILABLE */
01320000               EVAL CNT&LTN+24 LE(4)    /* IF NOT GIVE USER MSG. */
01330000               %HEX &LASTCC             /* WE CANNOT CONTINUE */
01340000               WRITE
01350000      WRITE THE CTB FOR CNT&LTN IS AT &HEXVALUE, WHICH IS UNAVAILABLE.
01360000      WRITE WITHOUT THE CTB, WE CANNOT FIND THE REST OF THE CONTROL
01370000     WRITENR BLOCKS ASSOCIATED WITH CNT&LTN.. DEPRESS ENTER TO CONTINUE.
01380000               GOTO CONTINUE
01390000            END
01400000  GETCTB:   EVAL CNT&LTN+24%+5C LE(2)      /* IF SO FIND, */
01410000            SET &LLL=&LASTCC
01420000            EVAL CNT&LTN+24%+5E LE(2)     /* LET'S FIND THE LINE/PTERM*/
01430000            SET &PP=&LASTCC
01440000            WRITE
01450000            WRITE &LTN IS ON RELATIVE LINE &LLL PTERM &PP..
01460000            SET &LENL=&LENGTH(&LLL)            /* GET LEN OF INPUT */
01470000            IF &LENL GE 3 THEN GOTO SKIPPAD3  /* IF GE 3 DIGITS, GOOD */
01480000            SET &PAD=&STR(&&PAD&LENL)  /* OTHERWISE PAD IT FOR EQU */
01490000            SET &LLL=&STR(&STR(&PAD)&LLL)  /* MAKE LINE >= 3 DIGITS */
01500000  SKIPPAD3: SET &LENP=&LENGTH(&PP)          /* SAME PROCESS FOR PTERM */
01510000            IF &LENP GE 2 THEN GOTO SKIPPAD4 /* MAKE IT >= 2 DIGITS */
01520000            SET &PP=&STR(&PAD2&PP)
01530000  SKIPPAD4: SET &N=&STR(&LLL&PP)    /* CREATE LINEPTERM STRING FOR EQU*/
01540000            EQU CTB&N CNT&LTN+24% L(&CTBLEN) STR(CTB) /* EQU CTB */
01550000            WRITE
01560000            WRITENR DEPRESS ENTER TO CONTINUE
01570000            READ
01580000 LISTCTB:   /* CLRSCRN */                            /* LIST CTB */ +
01590000            L CTB&N                                  /* LIST CTB */
01600000            EQ CLB&LLL CTB&N+4% LE(&CLBLEN) STR(CLB)
01610000            L CLB&LLL                            /* EQU AND LIST CLB */
01620000 THEREST:   WRITE
01630000            WRITENR DEPRESS ENTER TO CONTINUE.
01640000            READ
01650000            /* CLRSCRN */
01660000            EQ CTT&N CTB&N+0% LE(&CTTLEN) STR(CTT) /* EQU AND LIST CTT*/
01670000            L CTT&N
01680000            EVAL CTB&N+25 LE(3)   /* SEE IF WE HAVE A CCB ON THIS CTB*/
01690000            IF &LASTCC=0 THEN DO
01700000               WRITE
01710000               WRITE THE TERMINAL IS NOT CONNECTED TO A CONVERSATIONAL
01720000               WRITE TRANSACTION, AND THEREFORE DOESN'T HAVE A CCB.
01730000               GOTO SKIPCCB     /* NO - ISSUE MSG AND SKIP EQU */
01740000            END
01750000            EQ CCB&N CTB&N+24% LE(&CCBLEN) STR(CCB)   /* YES, DO EQU */
01760000            L CCB&N                                   /* AND LIST */
01770000  SKIPCCB:  EVAL CTB&N+2D LE(3)               /* DO SAME AS ABOVE FOR */
01780000            IF &LASTCC=0 THEN DO              /* CIB */
01790000               WRITE
01800000               WRITE THIS TERMINAL HAS NO CIB CONNECTED TO THE CTB.
01810000               GOTO HITENTER
01820000            END
01830000            EQ CIB&N CTB&N+2C% LE(&CIBLEN) STR(CIB)   /* EQU CIB */
01840000            L CIB&N                                 /* LIST CIB */
01850000 HITENTER:  WRITE
01860000            WRITENR DEPRESS ENTER TO CONTINUE.
01870000            GOTO CONTINUE
01880000 PROMPT:    WRITE
01890000 PROMPT1:   WRITE ENTER RELATIVE LINE NUMBER IN DECIMAL, OR DEPRESS
01900000            WRITENR ENTER TO RETURN ===>
01910000            READ &LLL
01920000            IF &LLL= THEN GOTO NEXTLINE   /* DO PROMPTING AND CHECKING*/
01930000            EVAL SCD+4AE L(2)             /* FOR REL LINE NUM */
01940000            SET &CLBNUM=&LASTCC
01950000            IF &CLBNUM LT &LLL THEN DO
01960000               WRITE
01970000               WRITE ERROR: THERE ARE ONLY &CLBNUM LINES IN THE SYSTEM.
01980000               GOTO PROMPT
01990000            END
02000000  PROMPT2:  WRITE
02010000            WRITE ENTER RELATIVE PTERM NUMBER IN DECIMAL, OR DEPRESS
02020000            WRITENR ENTER TO RETURN ===>
02030000            READ &PP
02040000            IF &PP= THEN GOTO NEXTLINE  /* DO PROMPTING AND CHECKING */
02050000            IF &PP LE 0 THEN DO         /* FOR PTERM NUM */
02060000               WRITE
02070000               WRITE ERROR: RELATIVE PTERM NUMBER MUST BE >= 1.
02080000               GOTO PROMPT2
02090000            END              /* ISSUE INFORMATIVE MSG */
02100000            WRITE
02110000            WRITE LOOKING FOR RELATIVE LINE &LLL PTERM &PP..
02120000            WRITE
02130000            SET &SAVELINE=&LLL         /* BUILD PADDED STRING 5 DIGITS*/
02140000            SET &SAVETERM=&PP                  /* LONG FOR EQUATES */
02150000            SET &LENL=&LENGTH(&LLL)            /* CONSISTING OF */
02160000            IF &LENL GE 3 THEN GOTO SKIPPAD1   /* LINE OF 3 (OR MORE)*/
02170000            SET &PAD=&STR(&&PAD&LENL)          /* DIGITS, AND PTERM */
02180000            SET &LLL=&STR(&STR(&PAD)&LLL)      /* OF 2 (OR MORE)  */
02190000SKIPPAD1:   SET &LENP=&LENGTH(&PP)             /* DIGITS */
02200000            IF &LENP GE 2 THEN GOTO SKIPPAD2
02210000            SET &PP=&STR(&PAD2&PP)
02220000SKIPPAD2:   SET &N=&STR(&LLL&PP)             /* CREATE STRING FOR EQU*/
02230000            L CLB&LLL NODISPLAY     /* SEE IF THIS LINE ALREADY FOUND*/
02240000               IF &LASTCC=0 THEN DO    /* IF SO SEE IF STORAGE IS */
02250000                  /* CLRSCRN */         /* AVAILABLE  */
02260000                  EVAL CLB&LLL LE(4)
02270000                  IF &LASTCC=0 THEN GOTO LISTCLB   /* ALREADY HAVE CLB*/
02280000               END
02290000            SET &NUM=&SAVELINE-1      /* OTHERWISE DO MATH TO GET CLB*/
02300000            SET &NUM=&STR(&NUM*&CLBLEN) /*CLBSTRT+(CLBLEN*(RELLNE-1))*/
02310000            %HEX &NUM
02320000            EVAL CLBSTRT+&HEXVALUE LE(4)  /* SEE IF STORAGE IS AVAIL */
02330000            IF &LASTCC=12 THEN DO  /* IF NOT, THERE'S ANOTHER WAY   */
02340000              WRITE
02350000             WRITE CLB&LLL IS UNAVAILABLE. WE NOW MUST TRY TO FIND THE
02360000             WRITE CTB BY DOING AN IPCS FIND ON THE HEX'LINE/PTERM' AT
02370000             WRITE CTB+5C BETWEEN CTBSTRT/CTBEND. THIS MAY TAKE A WHILE.
02380000              SET &HEXPAD1=&STR(000)       /* USE SAME PRINCIPAL */
02390000              SET &HEXPAD2=&STR(00)        /* AS ABOVE TO CREATE A */
02400000              SET &HEXPAD3=&STR(0)         /* PADDED STRING.        */
02410000              %HEX &SAVELINE               /* BUT THIS TIME, ITS AN */
02420000              SET &LLLHEX=&HEXVALUE        /* EIGHT (8) DIGIT HEX   */
02430000              SET &LENL=&LENGTH(&LLLHEX)    /* VALUE THAT WE NEED TO */
02440000              IF &LENL=4 THEN GOTO SKIPPAD5 /* DO AN IPCS 'FIND' WITH.*/
02450000              SET &PAD=&STR(&&HEXPAD&LENL)    /* THE FIND WILL LOOK */
02460000              SET &LLLHEX=&STR(&STR(&PAD)&LLLHEX)  /* FOR THE */
02470000 SKIPPAD5:    %HEX &SAVETERM            /* HEX 'LINE/PTERM' STASHED */
02480000              SET &PPHEX=&HEXVALUE       /* AT X'5C' INTO EACH CTB. */
02490000              SET &LENP=&LENGTH(&PPHEX)   /* IF WE FIND IT, WE CAN */
02500000              IF &LENP=4 THEN GOTO SKIPPAD6  /* FIND ALL OTHER */
02510000              SET &PAD=&STR(&&HEXPAD&LENP)   /* CONTROL BLOCKS. */
02520000              SET &PPHEX=&STR(&STR(&PAD)&PPHEX) /* OTHERWISE, WE'RE */
02530000 SKIPPAD6:    SET &LPHEX=&STR(&LLLHEX&PPHEX) /* DOWN THE TUBES. */
02540000      FIND X'&LPHEX' AD(CTBSTRT:CTBEND) BDY(4) NOBREAK NODISPLAY
02550000            IF &LASTCC^=0 THEN DO        /* FIND IS N/G, BUT COULD BE*/
02560000            WRITE COULD NOT FIND CTB FOR LINE&LLL PTERM&PP.. IT EITHER
02570000            WRITE DOESN'T EXIST, OR IT RESIDES IN UNAVAILABLE STORAGE.
02580000            GOTO DEAD           /* STORAGE IS NOT IN DUMP. TRY AGAIN.*/
02590000            END                 /* NO LUCK AT ALL..... */
02600000            EQ CTB&N X-5C LEN(&CTBLEN) STR(CTB)   /* FOUND IT, DO EQU */
02610000            GOTO LISTCTB         /* GOTO LIST IT */
02620000            END
02630000            EQ CLB&LLL CLBSTRT+&HEXVALUE LEN(&CLBLEN) STR(CLB) /* EQU*/
02640000            /* CLRSCRN */                               /* THE CLB */
02650000 LISTCLB:   L CLB&LLL                   /* LIST THE CLB */
02660000            SET &P1=&SAVETERM-1      /* FIND THE CTB THE QUICK WAY */
02670000            SET &P1=&STR(&P1*&CTBLEN)  /* CLB POINTS TO 1ST CTB, SO */
02680000            %HEX &P1       /* ALL WE NEED DO IS INCREMENT FROM THERE. */
02690000            EQ CTB&N CLB&LLL+4C%+&HEXVALUE LE(&CTBLEN) STR(CTB) /* EQU*/
02700000            EVAL CLB&LLL+4C%+&HEXVALUE LE(4)   /* CTB */
02710000            IF &LASTCC=12 THEN DO      /* SEE IF STORAGE IS AVAILABLE.*/
02720000               L CTB&N
02730000  DEAD:        WRITE
02740000      WRITE WITHOUT THE CTB, WE CANNOT FIND THE REST OF THE CONTROL
02750000     WRITENR BLOCKS ASSOCIATED WITH CLB&LLL.. DEPRESS ENTER TO CONTINUE.
02760000               GOTO CONTINUE
02770000             END
02780000             EVAL CTB&N+5C LE(2)   /* FOUND CTB, NOW IS USER SUPPLIED*/
02790000             IF &LASTCC^=&SAVELINE THEN DO  /* PTERM NUMBER VALID? */
02800000                WRITE
02810000                WRITE THERE IS NO PTERM&PP ON RELATIVE LINE&LLL..
02820000                GOTO HITENTER   /* SORRY, BUT USER MUST TRY AGAIN. */
02830000             END
02840000             L CTB&N      /* YES, IT ALL CHECKS. LIST THE CTB. */
02850000             GOTO THEREST   /* GO DO EQUATES AND LISTS ON THE OTHERS.*/
02860000 CONTINUE:   READ
02870000             GOTO NEXTLINE
