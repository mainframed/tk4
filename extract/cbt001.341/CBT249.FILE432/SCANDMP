00010002PROC 0 PRINT NOPRINT TERMINAL NOTERMINAL TEST NOTEST
00020000/*********************************************************************/
00030000/*                                                                   */
00040000/*  CLIST NAME: SCANDMP                REL/DATE  2.00 / 04.14.80     */
00050000/*                                                                   */
00060000/*  FUNCTION: TO SCAN THE DEFAULT DUMP FOR THE ABENDING TCB AND      */
00070000/*            EQUATE CERTAIN INFORMATION                             */
00080000/*                                                                   */
00090000/*  SYMBOLS EQUATED: NONE                                            */
00100000/*                                                                   */
00110000/*  SYMBOLS USED: PRINT   - FOR HARDCOPY OUTPUT                      */
00120000/*                TERMINAL- FOR TERMINAL OUTPUT                      */
00130000/*                TEST    - OPTIONAL PARM FOR DEBUGING               */
00140000/*                                                                   */
00150000/*  RETURN: THIS CLIST WILL RETURN TO CALLER.                        */
00160000/*                                                                   */
00170000/*  CLIST CALLED BY: USER                                            */
00180000/*                                                                   */
00190000/*  CLISTS CALLED: SCANFAIL                                          */
00200000/*                 DUMPDSN                                           */
00210000/*                                                                   */
00220000/*  DEPENDENCIES: MUST BE CALLED AS A SUBCOMMAND OF IPCS             */
00230000/*                                                                   */
00240000/*  USE: SCAN THE DEFUALT DUMP TO GATHER INFORMATION.                */
00250000/*                                                                   */
00260000/*********************************************************************/
00270000    IF &TEST NE TEST THEN CONTROL MSG NOSYM NOCON NOLIST NOPROMPT
00280001      ELSE                CONTROL MSG   SYM   CON   LIST   PROMPT
00290000    IF &PRINT EQ  AND &NOPRINT EQ  THEN                                +
00300005      DO                                               /* DO LOOP #1 */
00310001      WRITENR DO YOU WANT PRINT THE OUTPUT? Y/(N)  ===>
00320001      READ &ANS
00330001      END                                              /* DO END  #1 */
00340000    IF &ANS EQ Y  THEN SET &PRINT = PRINT
00350000    IF &PRINT EQ PRINT THEN SETDEF PRINT
00360000    ELSE SETDEF NOPRINT
00370000    IF &NOTERMINAL EQ NOTERMINAL THEN SETDEF NOTERMINAL
00380000    SETDEF DISPLAY(SYMBOL,NOMACHINE)
00390000    NOTE ' **************************************************** ' PAGE
00400000    NOTE '                      SCANDMP                         '
00410000    %DUMPDSN
00420000    NOTE ' **************************************************** '
00430004    SET &RC=0000                        /* SET DEFAULT RETURN CODE   *  /
00440004    SET &DEL=                           /* SET NO DELETE FOR SYSUT1  *  /
00450004    SET &ERROR=                         /* INITIALIZE ERROR TO NULLS *  /
00460004    SET &FLG=&STR(00000000)             /* INIT FLAG VARIABLE        *  /
00470004    LIST TITLE                          /* USED TO FOR DUMP INITZATN *  /
00480000/*********************************************************************/
00490004/* LOCATE THE FAILING ADDRESS SPACE AND PRINT DATA                   */
00500000/*********************************************************************/
00510004    %SCANFAIL &TEST                     /* CLIST TO FIND FAILING TCB */
00520004    IF &RC  GE  8 THEN GOTO NODATA      /* NO FAILING TASK FOUND     */
00530004    SET &ERROR=NOSTOR                   /* IF ANY ERRORS THEN SKIP   */
00540004    EQ  JOBNAME TIOT LEN(8) CHAR        /* SAVE JOBNAME              */
00550004    EQ  STEPNAME TIOT+8 LEN(8) CHAR     /* SAVE STEPNAME             */
00560004    LIST JOBNAME
00570004    LIST STEPNAME
00580004    EQ ASID ASCB+24 LEN(2) HEX
00590004    LIST  ASID
00600004    EQ COMPCODE  TCB+10 LEN(4) HEX      /* COMPLETION CODE        */
00610004    LIST COMPCODE
00620004    EQ PSW    RTM2WA+7C  LEN(8) HEX     /* PSW                    */
00630004    LIST  PSW
00640004    EQ MODULE RTM2WA+8C  LEN(8) CHAR    /* MODULE                 */
00650004    LIST  MODULE
00660004    EQ ENTRYPT RTM2WA+94  LEN(4) HEX    /* ENTRY POINT            */
00670004    LIST ENTRYPT
00680004    EQ REGS   RTM2WA+3C  LEN(64)        /* REGISTER 0-15          */
00690004    LIST REGS
00700004    LIST  TCB STR(TCB)
00710004    EQ RB TCB+0% STR(RB)
00720004    NOTE ' '
00730004    NOTE '          *** MOST RECENT RB IS LISTED FIRST ****'
00740000RBLOOP:                                                                +
00750004    LIST RB STR(RB) DISPLAY(REQUEST)
00760008    IF &LASTCC^=0 THEN DO            /* IF NON-ZERO THEN             */
00770008      GOTO LISTRTM2
00780008      END
00790004    COMPARE ADDR(RB+1C%+100)  LEN(4)                                   +
00800004      WITH (VALUE(C'TCB ')) LEN(4)
00810004    IF &LASTCC NE 0 THEN DO
00820004      EQ RB RB+1C% STR(RB)
00830004      GOTO RBLOOP
00840004      END
00850000LISTRTM2:                                                              +
00860010    LIST  RTM2WA  STR(RTM2WA) L(256)
00870009    EQUATE RTM2WAX TCB+E0% STR(RTM2WA) LEN(256)
00880000RTM2LOOP:                                                              +
00890000    COMPARE ADDR(RTM2WAX)           /* CHECK FOR VALID    RTM2PWA   */ +
00900000      WITH(VALUE(C'RTM2'))     LEN(4)
00910000    IF &LASTCC^=0 THEN DO            /* IF NON-ZERO THEN             */
00920000      GOTO ENDC
00930000      END
00940000    COMPARE ADDR(RTM2WAX+16C)       /* CHECK FOR NON-ZERO RTM2PWA   */+
00950000      WITH(VALUE(X'00000000')) LEN(4)      /* TCB COMPLETION CODE    */
00960000    IF &LASTCC^=0 THEN DO            /* IF NON-ZERO THEN             */
00970009      EQUATE RTM2WAX RTM2WAX+16C% STR(RTM2WA) LEN(256)
00980010      L RTM2WAX STR(RTM2WA) L(256)
00990000      GOTO RTM2LOOP
01000000      END
01010004    GOTO ENDC
01020000NODATA:                                                                +
01030004    NOTE '  ABENDING TCB NOT FOUND '
01040000/*********************************************************************/
01050000/* CLEANUP AND GET OUT                                               */
01060000/*********************************************************************/
01070000ENDC:                                   /* ALL EXITS HERE            */+
01080000    NOTE ' '
01090000    NOTE ' ********************************************************** '
01100000    NOTE ' *               SCANDMP END                              * '
01110000    NOTE ' ********************************************************** '
01120000    SETDEF NOPRINT
01130003    SYSCALL IEFBR14
01140004    EXIT
