00000010PROC 1 DATA LENGTHOFDATA(4) CHARACTER HEXADECIMAL X DEBUG
00000020/*********************************************************************/
00000030/* CLIST RETRIEVE .......IPCS SUBCOMMAND TO RETRIEVE DATA FROM A     */
00000040/*         DUMP AND RETURN IT IN A GLOBAL CLIST VARIABLE.            */
00000050/*                                                                   */
00000060/* THE ADDRESS OF THE DATA TO BE RETURN IS THE REQUIRED FIRST PARM   */
00000070/* THE LENGTH OF DATA IS OPTIONAL AND DEFAULTS TO 4 BYTES            */
00000080/* THE CONVERSION IS EITHER HEX OR CHARACTER, HEX IS DEFAULT         */
00000090/*                                                                   */
00000091/* INVOKED BY ... SCANDMP                                            */
00000092/*                                                                   */
00000093/*                                                                   */
00000100/*********************************************************************/
00000110/*********************************************************************/
00000120/* INITIALIZATION OF CLIST VARIABLES                                 */
00000130/*********************************************************************/
00000140 GLOBAL RVAL                             /* DEFINE GLOBAL FOR RETURN */
00000150 CONTROL NOMSG NOFLUSH                   /* SET UP CONTROL OPTIONS   */
00000160 IF &DEBUG = DEBUG THEN                  /* IF DEBUG MODE THEN       */+
00000170   CONTROL MSG LIST CONLIST SYMLIST      /*   SET ALL LIST OPTIONS   */
00000180 SET HSTR=&STR(0123456789ABCDEF          /* SET HEX CONVERSION STR   */
00000190 SET CSTR=&STR(-
00000200................................................................-
00000210 ......... .<.+|.......... $*.;^-/..........%_>?..........:#@.="-
00000220.ABCDEFGHI.......JKLMNOPQR........STUVWXYZ......0123456789......-
00000230.ABCDEFGHI.......JKLMNOPQR........STUVWXYZ......0123456789......)
00000240/*********************************************************************/
00000250/* VALIDATE LENGTH PARAMETER                                         */
00000260/*********************************************************************/
00000270 IF &DATATYPE(&LENGTHOFDATA) NE NUM THEN /* IF NOT NUMERIC LENGTH    */+
00000280     SET &LENGTHOFDATA = 1               /*    THEN SET DEFAULT LEN  */
00000290 ELSE                                    /* ELSE                     */+
00000300   IF &LENGTHOFDATA LE 0 THEN            /*   IF LENGTH IS TOO SMALL */+
00000310     SET &LENGTHOFDATA = 1               /*     SET TO MIN VALUE     */
00000320 IF &CHARACTER EQ CHARACTER THEN         /* CHARACTER CONVERSION     */+
00000330   DO                                    /*                          */
00000340     IF &LENGTHOFDATA GT 256 THEN        /* CHECK MAX LENGTH         */+
00000350       SET D = &LENGTHOFDATA*2           /* SET LIST LENGTH          */
00000360     SET &LD = &LENGTHOFDATA*2           /* SET LIST LENGTH          */
00000370   END                                   /*                          */
00000380 ELSE                                    /* ELSE HEX CONVERSION      */+
00000390   DO                                    /*                          */
00000400     IF &LENGTHOFDATA GT 128 THEN        /* CHECK MAX HEX LENGTH     */+
00000410       SET LENGTHOFDATA=128              /*  SET MAX HEX LENGTH      */
00000420     SET &LD = &LENGTHOFDATA             /* SET LIST LENGTH          */
00000430   END                                   /*                          */
00000440/*********************************************************************/
00000450/* VALIDATE DATA PARAMETER TO SEE IF DATA EXISTS                     */
00000460/*********************************************************************/
00000470 SET RVAL=&SUBSTR(1:&LD,&STR(&CSTR))     /* SET DEFAULT STRING       */
00000480 LIST &DATA. LEN(&LENGTHOFDATA.) CHAR    /* IPCS LIST TO VALIDATE    */
00000490 IF &LASTCC >4 THEN                      /* CHECK LIST RETURN CODE   */+
00000500   EXIT CODE(16)                         /*  EXIT IF NON-ZERO        */
00000510/*********************************************************************/
00000520/* DATA RETRIEVED A BYTE AT A TIME VIA EVALUATE SUBCOMMAND           */
00000530/*********************************************************************/
00000540 SET OFF = 0                             /* INITIALIZE OFFSET        */
00000550 SET RVAL=                               /* INITIALIZE RETURN STR    */
00000560 IF &CHARACTER EQ CHARACTER THEN         /* IF CHARACTER CONVERSION  */+
00000570   DO WHILE &OFF LT &LENGTHOFDATA        /*  LOOP THRU BYTE BY BYTE  */
00000580  /*******************************************************************/
00000590  /* GET A BYTE AND CONVERT IT TO CHARACTER                          */
00000600  /*******************************************************************/
00000610     EVALUATE &DATA+&OFF.N LENGTH(1)     /* GET BYTE VALUE IN LASTCC */
00000620     SET CC  = &LASTCC+1                 /* CREATE INDEX INTO CSTR   */
00000630     SET RVAL= &STR(&RVAL&SUBSTR(&CC,&STR(&CSTR))) /* ADD CHAR TO STR*/
00000640     SET OFF = &OFF+1                    /* BUMP TO NEXT BYTE        */
00000650   END                                   /*                          */
00000660 ELSE                                    /* ELSE HEX CONVERSION      */+
00000670   DO WHILE &OFF LT &LENGTHOFDATA        /* GET A BYTE AT A TIME     */
00000680  /*******************************************************************/
00000690  /* GET A BYTE AND CONVERT IT TO HEXADECIMAL                        */
00000700  /*******************************************************************/
00000710     EVALUATE &DATA+&OFF.N LENGTH(1)     /* GET BYTE VALUE IN LASTCC */
00000720     SET CC  = &LASTCC                   /* SAVE LASTCC              */
00000730     SET RVAL= &STR(&RVAL&SUBSTR(&EVAL(&CC/16+1),&HSTR)+
00000740               &SUBSTR(&EVAL(&CC//16+1),&HSTR)) /* ADD BYTE TO STR   */
00000750     SET OFF = &OFF+1                    /* BUMP TO NEXT BYTE        */
00000760   END                                   /*                          */
00000770/*********************************************************************/
00000780/* THEN EXIT WITH DATA IN GLOBAL VARIABLE RVAL                       */
00000790/*********************************************************************/
00000800 EXIT CODE(0)                            /* EXIT - ALL'S WELL        */
