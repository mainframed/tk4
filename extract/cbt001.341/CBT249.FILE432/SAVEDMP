00010000PROC 1 DUMPDSNAME UNCONDITIONAL DEBUG VOLUME(IPCS01) IPCSPARM(00)      +
00020000  PREFIX(IPOIPCS) ADMIN(IPOUSER)
00030000 /********************************************************************/
00040000 /* REFER:  IPO1.CMDPROC(SAVEDMP)                                    */
00050000 /* COMPID: OPER                                                     */
00060000 /* DOC THIS CLIST IS USED BY SAVEDMP PROCEDURE FOR DETERMINING      */
00070000 /*     IF THE DUMP IS A DUPLICATE OF A PREVIOUSLY SAVED DUMP        */
00080000 /*     IT USES IPCS TO RETRIEVE INFORMATION FROM THE DUMP AND TO    */
00090000 /*     MANAGE RECORDING OF THE PROBLEM AND THE DUMP.                */
00100000 /*                                                                  */
00110000 /*  PARAMETERS:                                                     */
00120000 /*     DUMPDSNAME = DUMP DATASET NAME (CATALOGED)                   */
00130000 /*     UNCONDITIONAL = SAVE DUMP EVEN IF A DUPLICATE                */
00140000 /*     DEBUG = GIVES FULL OUTPUT OF CLIST EXECUTION FOR DEBUG       */
00150000 /*     VOLUME = VOLUME SERIAL ON WHICH DUMPS ARE TO BE SAVED        */
00160000 /*     IPCSPARM = IPCS INITIALIZATION PARM NUMBER                   */
00170000 /*     PREFIX = HIGH LEVEL DSNAME FOR SAVED DUMPS                   */
00180000 /*                                                                  */
00190000 /*  ADDITIONAL FILES NEEDED:                                        */
00200000 /*     SYSPRINT FOR AMDPRDMP MESSAGE FILE                           */
00210000 /*     SYSPROC  FOR CLISTS INVOKED WITH % - 'IPO1.CMDPROC'          */
00220000 /*     PRINTER  FOR AMDPRDMP DUMP OUTPUT                            */
00230000 /*     IPCSDDIR FOR IPCS                                            */
00240000 /*     DMPLST   FOR DUPLICATE DUMP SYMPTOM STRING                   */
00250000 /*  FORMAT OF DMPLST FILE:                                          */
00260000 /*     RECFM(F B) LRECL(132) DSORG(PS) .... OPENED FOR UPDATE       */
00270000 /*  RECORD TYPES:                                                   */
00280000 /*     MASTER PROBLEM HEADER RECORD:                                */
00290000 /*        FIRST RECORD, $ IN COL1,PROB# IN COLS 3:7                 */
00300000 /*     COMMENT RECORD: * IN COL 1                                   */
00310000 /*        * IN COL 1 FOLLOWED BY ANY COMMENT                        */
00320000 /*     SYMPTOM STRING RECORD:                                       */
00330000 /*        ALPHABETIC IN COL 1 (PROBLEM NUMBER)                      */
00340000 /*     FREE RECORD:                                                 */
00350000 /*        BLANK IN COL 1                                            */
00360000 /*                                                                  */
00370000 /*  ADDITIONAL NOTES:                                               */
00380000 /*     THIS CLIST NEEDS A MASTER PROBLEM IN THE IPCS PROBLEM        */
00390000 /*     DIRECTORY. THE MASTER PROBLEM IS USED INITIALLY AS           */
00400000 /*     A PROBLEM WITH WHICH TO ASSOCIATE THE DUMP, SO THAT          */
00410000 /*     THE IPCS PROBLEM ANALYSIS SUBCOMMANDS CAN BE EXECUTED        */
00420000 /*     AGAINST THE DUMP. SEE CLIST SAVEDMPI                         */
00430000 /********************************************************************/
00440000/*********************************************************************/
00450000/* INITIALIZATION                                                    */
00460000/*********************************************************************/
00470000  SET &RC=0000                          /* SET DEFAULT RETURN CODE   */
00480000  SET &OPEN=N                           /* SET TO Y WHILE DMPLST OPEN*/
00490000  SET &DEL=                             /* SET NO DELETE FOR SYSUT1  */
00500000  SET &ERROR=                           /* INITIALIZE ERROR TO NULLS */
00510000  GLOBAL RVAL                           /* GLOBAL USED BY %IPOEVAL   */
00520000  CONTROL NOMSG NOFLUSH END(ENDO) NOPROMPT/* NO MESSAGES FOR FREE    */
00530000  FREE FI(SYSUT1,TAPE,IPCSPRNT,SYSIN,SYSUT2) /* FREE FILES NEEDED    */+
00540000    ATTR(V,F,FB4104)                    /* AND ATTRIBUTE LISTS  USED */
00550000  IF &DEBUG EQ DEBUG THEN               /* SEE EVERYTHING IN DEBUG   */+
00560000    CONTROL LIST MSG CONLIST SYMLIST    /*                           */
00570000  ELSE CONTROL NOLIST MSG               /* ELSE MINIMAL OUTPUT       */
00580000/*********************************************************************/
00590000/* GLOBAL ERROR BLOCK                                                */
00600000/*********************************************************************/
00610000  ERROR DO                              /* THIS IS THE ONE ANY ONLY  */
00620000ERRORS:                                 /* BRANCH LABEL FOR FORCED   */+
00630000    SET &CODE=&LASTCC                   /* SAVE LASTCC               */
00640000    SET &Y=&LENGTH(&STR(&ERROR))        /* GET LENGTH OF ERROR STRING*/
00650000    IF &Y EQ 0 THEN                     /* IF NULL THEN JUST RETURN  */+
00660000      RETURN                            /* RETURN                    */
00670000    IF &Y LE 8 THEN                     /* JUST A LABEL              */+
00680000      GOTO &ERROR                       /* THEN BRANCH TO IT         */
00690000    WRITE ====>&SUBSTR(9:&Y,&STR(&ERROR))<=== CODE=&CODE
00700000    GOTO &SUBSTR(1:8,&STR(&ERROR))      /* AND BRANCH TO LABEL       */
00710000  ENDO                                  /* END ERROR BLOCK           */
00720000/*********************************************************************/
00730000/* ATTEMPT TO ALLOCATE THE FILES NEEDED IN THIS CLIST                */
00740000/*********************************************************************/
00750000  ATTRIB FB4104 RECFM(F) LRECL(4104)    /* DCB ATTRIBUTES FOR A      */+
00760000    BLKSIZE(4104) DSORG(PS)             /* DUMP DATASET              */
00770000  SET &ERROR=&STR(ENDC12  ALLOCATION FOR FILE SYSIN FAILED)
00780000  ATTRIB F RECFM(F B) LRECL(80)         /* ATTRIUTE LIST FOR SYSIN   */+
00790000    BUFNO(2) BLKSIZE(800) DSORG(PS)     /* DO NOT NEED MUCH          */
00800000  ALLOC FI(SYSIN) SP(2,2) BLOCK(6160)   /* ALLOCATE SYSIN TEMP. FILE */+
00810000    USING(F)                            /*  FOR AMDPRDMP INPUT       */
00820000  SET &ERROR=&STR(ENDC12  ALLOCATION FOR FILE IPCSPRNT FAILED)
00830000  ATTRIB V RECFM(V A) LRECL(125)        /* ATTRIUTE LIST FOR IPCSPRNT*/+
00840000    BUFNO(1) BLKSIZE(129) DSORG(PS)     /* FORCE A WRITE WITH BUFNO=1*/
00850000  ALLOC FI(IPCSPRNT) SP(2,2) BLOCK(6144)/* ALLOCATE IPSCPRNT TEMP FIL*/+
00860000    USING(V)                            /* FORCE A WRITE EACH TIME   */
00870000  SET &ERROR=&STR(ENDC12  ALLOCATION FOR &DUMPDSNAME. FAILED)
00880000  ALLOC FI(TAPE) DA(&DUMPDSNAME) OLD    /* ALLOCATE DUMP TO FILE TAPE*/
00890000  SET &ERROR=&STR(ENDC12  OPEN OF FILE DMPLST FAILED)
00900000  OPENFILE DMPLST UPDATE                /* OPEN SYMPTOM STRING FILE  */
00910000  SET &OPEN=Y                           /* SET FLAG TO INDICATE OPEN */
00920000/*********************************************************************/
00930000/* READ MASTER PROBLEM NUMBER RECORD FROM FILE DMPLST                */
00940000/*      MUST BE FIRST RECORD IN FILE. FORMAT:$ PROB# COMMENTS        */
00950000/*********************************************************************/
00960000  SET &ERROR=(ENDC12  NO DMPLST OR INVALID DMPLST HEADER RECORD)/*   */
00970000  GETFILE DMPLST                        /* GET DMPLST HEADER RECORD  */
00980000  SET SYSDVAL=&STR(&DMPLST)             /* INIT SYSDVAL FOR READDVAL */
00990000  READDVAL TAG PROB COMMENTS            /* GET FIELDS FROM RECORD    */
01000000  IF &STR(&TAG) NE &STR($) THEN         /* CHECK FOR HEADER RECORD   */+
01010000    GOTO ERRORS                         /* BRANCH TO ERROR ROUTINE   */
01020000  IF &DATATYPE(&PROB) NE NUM THEN       /* CHECK IF FOR NUMERIC PROB#*/+
01030000    GOTO ERRORS                         /* IF NOT THEN EXIT WITH ERR */
01040000/*********************************************************************/
01050000/* GET INTO IPCS MODE TO CHECK DUMP AND RETRIEVE A SYMPTOM STRING    */
01060000/*********************************************************************/
01070000  SET &ERROR=&STR(ENDC12  IPCS INITIALIZATION FAILED)
01080000  IPCS PARM(&IPCSPARM.)                 /*   GET INTO IPCS           */
01090000  SETDEF DSN(&DUMPDSNAME.) PROB(&PROB)  /* IPCS SET DEFAULTS SUB-CMND*/+
01100000    NOPRINT TERMINAL NOCONFIRM          /* WITH DUMP AND MASTER PROB */
01110000  SET &ERROR=                           /* UNDO ERROR CONDITION      */
01120000  IF &DEBUG EQ THEN                     /* CHECK IF NOT IN DEBUG MODE*/+
01130000    CONTROL NOMSG                       /* THEN NO COMMAND OUTPUT    */
01140000  ADDDSN                                /* ADD DSNAME UNCONDITIONALLY*/
01150000/*********************************************************************/
01160000/* CHECK FOR A VALID DUMP. FORCE IPCS DUMP INITIALIZATION            */
01170000/*********************************************************************/
01180000  DROPDUMP &DUMPDSNAME.                 /* DROP SYMBOL TABLE ENTRIES */
01190000  SET &ERROR=&STR(ENDC08  DUMP DATASET &DUMPDSNAME. IS EMPTY)
01200000  LIST TITLE                            /* USED TO FOR DUMP INITZATN */
01210000  SET &ERROR=                           /* UNDO ERROR CONDITION      */
01220000  SET &FLG=&STR(&SYSDATE)               /* INIT FLAG VARIABLE        */
01230000  SET &CC= &STR(&SYSTIME)               /* INIT COMPLETION CODE VAR  */
01240000  SET &MOD=&STR(*UNKNOWN)               /* INIT MOD NAME VAR         */
01250000  %IPOEVAL TITLE+14 LEN(100) CHAR       /* CALL CLIST TO RETURN TITLE*/
01260000  SET &TLE=&STR(&RVAL)                  /* SAVE TITLE FROM GLOBAL VAR*/
01270000/*********************************************************************/
01280000/* LOCATE THE FAILING ADDRESS SPACE AND TCB                          */
01290000/*********************************************************************/
01300000  SET &ERROR=                           /* IF ANY ERRORS THEN SKIP   */
01310000  %FINDFAIL &DEBUG                      /* CLIST TO FIND FAILING TCB */
01320000  IF &CODE EQ 8 THEN GOTO NOSTOR        /* NO FAILING TASK FOUND     */
01330000  IF &CODE EQ 12 THEN DO                /* INVALID DUMP DATA         */
01340000    SET &MOD=&STR(*UNKNWN*)             /* INIT MOD NAME VAR         */
01350000    GOTO NOSTOR                         /* GO PAST                   */
01360000  ENDO
01370000  SET &ERROR=NOSTOR                     /* IF ANY ERRORS THEN SKIP   */
01380000  %IPOEVAL RTM2WA+B4 LEN(4) HEX &DEBUG  /* RTM FLAGS                 */
01390000  SET &FLG=&STR(&RVAL)                  /* SAVE FLAGS                */
01400000  %IPOEVAL TCBADDR+10 LEN(4) HEX &DEBUG /* COMPLETION CODE           */
01410000  SET &CC=&STR(&RVAL)                   /* SAVE COMPLETION CODE      */
01420000  %IPOEVAL RTM2WA+8C LEN(8) CHAR &DEBUG /* MODULE NAME               */
01430000  SET &MOD=&STR(&RVAL)                  /* SAVE ABENDING MODULE NAME */
01440000/*********************************************************************/
01450000/* CREATE SYMPTOM STRING FLGS||CODE||MODNAME||TITLE                  */
01460000/*********************************************************************/
01470000NOSTOR:                                 /* CREATE SYMPTOM STRING     */+
01480000  WRITE ----- SAVEDMP SYMPTOM STRINGS ---&STR(-)
01490000  WRITE ====> DUMP TITLE  ====> &TLE
01500000  WRITE ====> ABEND FLAGS ====> &FLG
01510000  WRITE ====> ABEND CODE  ====> &CC
01520000  WRITE ====> MODULE NAME ====> &MOD
01530000  WRITE
01540000  SET &ERROR=                           /* UNDO ERROR CONDITIONS     */
01550000  SET &SIMSTR=&STR(&FLG&CC&MOD&TLE)     /* SET SYMPTOM STRING VAR    */
01560000  SET &SIMSTRE=&LENGTH(&STR(&SIMSTR))+8 /* OFFSET OF LAST CHARACTER  */
01570000/*********************************************************************/
01580000/* SEARCH DMPLST FILE FOR DUPLICATE SYMPTOM STRING                   */
01590000/*********************************************************************/
01600000SRCSIM:                                 /* SEARCH FOR SYMPTOM STRING */+
01610000  SET &ERROR=&STR(ENDC12  NO FREE RECORDS IN FILE DMPLST)
01620000  GETFILE DMPLST                        /* GET NEXT RECORD           */
01630000  SET &ERROR=                           /* UNDO ERROR CONDITION      */
01640000  IF &SUBSTR(01:01,&STR(&DMPLST)) EQ &STR(*) THEN /* COMMENT RECORD  */+
01650000    GOTO SRCSIM                         /* THEN GO GET ANOTHER RECD  */
01660000  IF &SUBSTR(01:01,&STR(&DMPLST)) EQ &STR( ) THEN /* FREE RECORD     */+
01670000    GOTO SAVDMP                         /* THEN NOT A DUP GO SAVE IT */
01680000  IF &UNCONDITIONAL EQ UNCONDITIONAL THEN /* CHK UNCONDTIONAL SAVE   */+
01690000    GOTO SRCSIM                         /* THEN SKIP NEXT COMPARE    */
01700000  IF &SUBSTR(09:&SIMSTRE,&STR(&DMPLST)) NE &STR(&SIMSTR) THEN /* CHCK*/+
01710000    GOTO SRCSIM                         /* IF STRING ^= GET ANOTHER  */
01720000/*********************************************************************/
01730000/* DUPLICATE PROBLEMS GOTO RESET SECTION TO RESET THE DUMP           */
01740000/*********************************************************************/
01750000  END /*IPCS*/                          /* GET OUT OF IPCS MODE      */
01760000  SET &RC=4                             /* SET RETURN CODE 4 FOR DUPS*/
01770000  SET PROB2=&SUBSTR(1:8,&STR(&DMPLST))
01780000  SEND 'SAVEDMP DETECTED DUPLICATE DUMP OF PROBLEM &PROB2',OPER(10)
01790000  WRITE DUPLICATE OF PROBLEM &PROB2
01800000/*********************************************************************/
01810000/* RESET DUMP DATASET WITH AMDPRDMP AND DUMMY INPUT                  */
01820000/*********************************************************************/
01830000  SET &ERROR=                           /* NO-OP ERROR CONDITION     */
01840000  CONTROL NOMSG                         /* NO MESSAGE FROM FREE      */
01850000  ALLOC FI(SYSUT2) DUMMY                /* ALLOCATE OUTPUT FILE      */
01860000  SET &ERROR=&STR(F1        RESET OF DUMP DATASET FAILED)
01870000  IF &DEBUG NE DEBUG THEN               /* CONDITIONALLY RESET DUMP  */+
01880000    CALL 'SYS1.LINKLIB(AMDPRDMP)'       /* PUT AN EOF                */
01890000F1: SET &ERROR=
01900000  GOTO ENDC                             /* EXIT                      */
01910000/*********************************************************************/
01920000/* FOR NEW PROBLEM THEN DO AN IPCS ADDPROB                           */
01930000/*********************************************************************/
01940000SAVDMP:                                 /* CREATE A NEW PROBLEM      */+
01950000  ADDPROB ABS('&TLE') DEF GR(SAVEDMP)   /* ADD NEW PROBLEM AS DEFAULT*/+
01960000    DESC('&SYSDATE &SYSTIME &TLE')      /* SET DESCRIPTION FOR PROB  */+
01970000    OWNER(&ADMIN)                       /* SET OWNER ID - A MUST     */
01980000/*********************************************************************/
01990000/* LIST THE PROB TO IPCSPRNT DATASET TO BE READ LATTER               */
02000000/*********************************************************************/
02010000  LISTPROB PRINT NOTERM DSN DESC        /* LIST PROBLEM TO IPCSPRNT  */
02020000  END  /* IPCS */                       /* GET OUT OF IPCS           */
02030000/*********************************************************************/
02040000/* GET PROBLEM NUMBER BY READING IPCSPRNT DATASET FROM LISTPROB ABOVE*/
02050000/*********************************************************************/
02060000  SET &ERROR=&STR(ENDC12  COULD NOT READ IPCSPRNT FILE )
02070000  OPENFILE IPCSPRNT INPUT               /* OPEN IPCSPRNT FILE FOR IN */
02080000  GETFILE  IPCSPRNT                     /* IGNORE 1ST RECORD         */
02090000  GETFILE  IPCSPRNT                     /* IGNORE 2ND RECORD         */
02100000  GETFILE  IPCSPRNT                     /* IGNORE 3RD RECORD         */
02110000  GETFILE  IPCSPRNT                     /* USE 4TH RECORD            */
02120000  SET &ERROR=                           /* UNDO ERROR CONDITION      */
02130000  CLOSFILE IPCSPRNT                     /* CLOSE THE IPCSPRNT FILE   */
02140000  SET SYSDVAL = &STR(&IPCSPRNT)         /* INIT SYSDVAL FOR READDVAL */
02150000  READDVAL XXX PROBNAME                 /* GET THE PROBLEM NUMBER    */
02160000  IF &LENGTH(&PROBNAME) NE 8 THEN DO    /* DOUBLE CHECK FOR VALID    */
02170000MSGERR:                                 /* ERROR CODE FOR PROB# ERR  */+
02180000    WRITE * * * PROBLEM COULD NOT BE READ FROM IPCSPRNT * * *
02190000    GOTO ENDC12                         /* EXIT WITH ERROR CODE      */
02200000  ENDO
02210000  SET PROBNUM=&SUBSTR(4:8,&PROBNAME)    /* GET PROBLEM NUMBER        */
02220000  IF &DATATYPE(&PROBNUM) NE NUM THEN    /* CHECK NUMERIC PROB#       */+
02230000    GOTO MSGERR                         /* IF INVALID PROB# BR OUT   */
02240000/*********************************************************************/
02250000/* BUILD AMDPRDMP CONTROL STATEMENTS FOR A HARDCOPY FORMAT PRINT     */
02260000/*********************************************************************/
02270000  SET &ERROR=&STR(ENDC12  COULD NOT PUT RECORDS TO FILE SYSIN)
02280000  OPENFILE SYSIN OUTPUT                 /* OPEN SYSIN FOR OUTPUT     */
02290000  SET SYSIN =&STR( FORMAT )             /* MOVE IN FORMAT CNTL STMT  */
02300000  PUTFILE SYSIN                         /* PUT TO FILE               */
02310000  SET SYSIN =&STR( END    )             /* SET UP END CNTL STMT      */
02320000  PUTFILE SYSIN                         /* PUT TO FILE               */
02330000  CLOSFILE SYSIN                        /* CLOSE FILE                */
02340000/*********************************************************************/
02350000/* ALLOCATE A DATASET INTO WHICH PRDMP COPIES THE DUMP               */
02360000/*********************************************************************/
02370000  SET &ERROR=&STR(ENDC12  ERROR ALLOCATING +
02380000             &PREFIX..SAVEDMP.&PROBNAME)
02390000  ALLOC FI(SYSUT2) SP(10,3) VOL(&VOLUME.) CYL /* ALLOC SAVED DUMP DS */+
02400000    DA('&PREFIX..SAVEDMP.&PROBNAME') RELEASE USING(FB4104) /*       */
02410000  SET &ERROR=&STR(ENDC12  AMDPRDMP COPY ERROR) /*UP FOR PRDMP ERROR  */
02420000  CALL  'SYS1.LINKLIB(AMDPRDMP)'        /* CALL PRINT DUMP           */
02430000  FREE FI(TAPE)
02440000  ALLOC FI(TAPE)   DA('&PREFIX..SAVEDMP.&PROBNAME') SHR /*            */
02450000  FREE FI(SYSUT2)
02460000  SET &ERROR=&STR(IPCS02  AMDPRDMP PRINT ERROR) /*  FOR PRDMP ERROR  */
02470000  CALL  'SYS1.LINKLIB(AMDPRDMP)'        /* CALL PRINT DUMP           */
02480000/*********************************************************************/
02490000/* GET BACK INTO IPCS TO ADD THE NEW DATASET TO THE NEW PROBLEM      */
02500000/*********************************************************************/
02510000IPCS02: +
02520000  IPCS PARM(&IPCSPARM.)                 /*   GET INTO IPCS           */
02530000  SETDEF DA('&PREFIX..SAVEDMP.&PROBNAME') /* SET IPCS DEFAULTS      */+
02540000    PROB(&PROBNUM) NOPRINT NOTERM NOCON /* FOR NEW PROBLEM           */
02550000  ADDDSN DA('&PREFIX..SAVEDMP.&PROBNAME')     /* ADD DSNAME TO PROB */+
02560000    DESC('ADDED BY SAVEDMP &SYSDATE &SYSTIME') /*                    */
02570000  END  /* IPCS */                       /* GET OUT OF IPCS           */
02580000  SEND 'PROBLEM &PROBNAME HAS BEEN ADDED BY SAVEDMP +
02590000    &SYSDATE &SYSTIME',OPERATOR(10)     /* SEND MESSAGE TO OPERATOR  */
02600000/*********************************************************************/
02610000/* UPDATE DMPLST  FILE WITH THE NEW SYMPTOM STRING                   */
02620000/*********************************************************************/
02630000  SET DMPLST=&STR(&PROBNAME&SIMSTR)     /* CREATE NEW DMPLST REOCRD  */
02640000  SET &ERROR=&STR(ENDC12  COULD NOT UPDATE FILE DMPLST )
02650000  PUTFILE DMPLST                        /* PUT IT IN THE FILE        */
02660000  GOTO ENDC
02670000/*********************************************************************/
02680000/* CLEANUP AND GET OUT                                               */
02690000/*********************************************************************/
02700000ENDC12:                                 /* SET RETURN CODE OF 12     */+
02710000  SET &RC=&RC+4                         /*                           */
02720000  SET &DEL=DELETE                       /* SET TO DELETE SYSUT1 FILE */
02730000ENDC08:                                 /* SET RETURN CODE OF 08     */+
02740000  SET &RC=&RC+8                         /*                           */
02750000ENDC:                                   /* ALL EXITS HERE            */+
02760000  SET &ERROR=                           /* RETURN ON ALL ERRORS      */
02770000  CONTROL NOMSG NOFLUSH                 /* NO MORE MESSAGES          */
02780000  END                                   /* END IPCS                  */
02790000  IF &OPEN EQ Y THEN                    /* IF DMPLST FILE OPEN THEN  */+
02800000    CLOSFILE DMPLST                     /*   CLOSE FILE DMPLST       */
02810000  FREE  FI(SYSUT1) &DEL                 /* FREE SYSUT1 FILE          */
02820000  FREE  FI(TAPE,IPCSPRNT)               /* FREE TAPE   FILE          */+
02830000        ATTR(V,F,FB4104)                /* FREE TAPE   FILE          */
02840000  WRITE ====> SAVEDMP ENDED CODE=&RC <====
02850000  EXIT CODE(&RC)                        /* EXIT WITH CODE &RC        */
