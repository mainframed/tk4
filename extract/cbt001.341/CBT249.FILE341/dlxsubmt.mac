         TITLE 'DELUXE BATCH JOB SUBMISSION FACILITY'
*        PROGRAM MUST BE LINKED AC=1 INTO AN AUTHORIZED LIBRARY
DLXSUBMT CSECT
         SAVE  (14,12),,*               SAVE OS  REGISTERS
         LR    R12,R15                  ESTABLISH R12 AS BASE REG
         USING DLXSUBMT,R12             TELL ASSEMBLER
         ST    R13,SAVEAREA+4           SAVE OS SAVE AREA ADDRESS
         LR    R6,R13                   SAVE IT IN R6
         LA    R13,SAVEAREA             POINT R13 AT OUR SAVE AREA
         ST    R13,8(R6)                STORE OUR SAVEAREA ADDR IN OS
* END OF PROLOGUE                       SAVE AREA
*
*
*        THIS CODE WILL CHECK FOR EXECUTION AUTHORIZATION.
*        THE FOLLOWING CONDITIONS MUST EXIST FOR
*        EXECUTION TO BE ALLOWED:
*           EITHER  SPECIAL TSO USERID (T27611) :
*                           ( ASCBTSB NOT = 0 (TSO) AND
*                             TIOCNJOB = T27611 )
*           OR  ( ( EXECUTING AS A STARTED TASK:
*                           ( ASCBJBNS NOT = 0  AND
*                             ASCBJBNI = 0      AND
*                             ASCBTSB = 0 ) )
*                  AND
*                 ( SYSUT2 IS SYSOUT DATASET:
*                           ( JFCBTSDM = JFCSDS ) ) )
*
*
AUTHCHK  EQU   *
         L     R2,16                    ADDRESS OF CVT
         L     R2,0(R2)                 ADDRESS OF TCB ADDRESS WORDS
         L     R2,4(R2)                 ADDRESS OF CURRENT TCB
         L     R2,12(R2)                ADDRESS OF THIS TCBS TIOT
         CLC   0(8,R2),=CL8'T27611  '   IS IT SPECIAL USERID?
         BE    AUTHCHKX                 YES BYPASS REST OF CHECKS
         L     R2,16                    ADDRESS OF CVT
         L     R2,0(R2)                 ADDRESS OF TCB/ASCB ADDRESSES
         L     R2,12(R2)                ADDRESS OF CURRENT ASCB
         L     R3,60(R2)                ADDRESS OF TSB
         LTR   R3,R3                    IF IT IS ZERO THIS IS NOT
         BZ    AUTHCHK2                 A TSO USER
         MVI   RETCODE+3,X'0C'          RETURN CODE 12
         B     TERMINAT                 TERMINATE
AUTHCHK2 EQU   *
         L     R3,176(R2)               STC/MNT/LOGON JOBNAME PTR
         LTR   R3,R3                    IF THIS IS NON-ZERO THIS MAY
         BNZ   AUTHCHK3                 BE A STARTED TASK OTHERWISE IT
         MVI   RETCODE+3,X'0C'          IS A BATCH JOB AND WE WILL
         B     TERMINAT                 TERMINATE
AUTHCHK3 EQU   *
         L     R3,172(R2)               INITIATED JOB JOBNAME PTR
         LTR   R3,R3                    IF THIS IS ZERO WE ARE A STC
         BZ    AUTHCHK4                 OTHERWISE WE WILL
         MVI   RETCODE+3,X'0C'          SET RETURN CODE 12
         B     TERMINAT                 AND TERMINATE
AUTHCHK4 EQU   *
         LA    R3,JFCBAREA              ADDRESS OF WORKAREA TO R3
         USING JFCB,R3                  TELL ASSEMBLER
         RDJFCB (SYSUT2)
         TM     JFCBTSDM,JFCSDS         CHECK FOR SYSIN/SYSOUT
         BO     AUTHCHKX                IF SO OK ELSE
         MVI    RETCODE+3,X'0C'         SET RETURN CODE 12
         B      TERMINAT                AND TERMINATE
         DROP   R3                      DONE WITH R3
AUTHCHKX EQU   *
         OPEN  (SYSUT1,,SYSUT2,(OUTPUT)) OPEN FILES
BEGLOOP  EQU   *                        COPY DATASET UNTIL USER AND
*                                       PASSWORD HAVE BEEN FOUND AND
*                                       APPROPRIATELY PROCESSED
         BAL   R10,GETUT1               GO GET A RECORD
         B     USERROUT                 GO CHECK PARAMETERS
CONTINP1 EQU   *                        WE HAVE PROCESSED THE CARD
*                                       AND EITHER FOUND OR NOT FOUND
*                                       THE PARAMETERS WE WANT
         BAL   R10,CHNGCARD             PROCESS ACCORDINGLY
CONTINP2 EQU   *
         BAL   R10,PUTUT2               PUT THE RECORD
         CLI   COPYSW,C'1'              READY FOR COPY?
         BNE   BEGLOOP                  CONTINUE
COPYLOOP EQU   *                        COPY REST OF DATASET
         BAL   R10,GETUT1               GET A RECORD
         BAL   R10,PUTUT2               PUT IT
         B     COPYLOOP                 CONTINUE
ENDUT1   EQU   *                        END OF FILE ON INPUT ROUTINE
         CLOSE (SYSUT1,,SYSUT2)         CLOSE FILES
         B     TERMINAT                 AND GET OUT
* BEGINNING OF EPILOGUE
TERMINAT L     R13,SAVEAREA+4           LOAD OS SAVE AREA ADDR TO R13
         L     R15,RETCODE              LOAD STORED RETURN CODE
         RETURN (14,12),RC=(15)         RETURN TO OS RC=R15
* END OF EPILOUGE
GETUT1   EQU   *                        GET RECORD SUBROUTINE
         MVI   RECAREA,C' '             CLEAR RECAREA POSITION 1
         MVC   RECAREA+1(L'RECAREA-1),RECAREA  AND PROPAGATE
         GET   SYSUT1,RECAREA           GET THE RECORD
         BR    R10                      RETURN
PUTUT2   EQU   *                        PUT RECORD SUBROUTINE
         PUT   SYSUT2,RECAREA           PUT THE RECORD
         BR    R10                      RETURN
USERROUT EQU   *
         CLI   USERSW,C'1'              HAVE WE CHECKED USER BEFORE?
         BE    CONTINP1                 IF SO WE ARE DONE WITH THIS
*                                       CARD AND SHOULD COPY IT
         MVI   USERSW,C'1'              INDICATE WE HAVE BEEN HERE
         LA    R1,RECAREA               R1 PTS TO COL 1 OF CARD
         LA    R7,65(R1)                R7 PTS TO COL 66 OF CARD
         LA    R1,3(R1)                 R1 PTS TO COL 4 OF CARD
USERCHK  EQU   *
         LR    R4,R7                    R4 HAS ADDRESS OF COL 66
         SR    R4,R1                    R4 HAS NO OF COLS TO WORK WITH
         EX    R4,TRTINSTU              EXEC TRT, R4 HAS LENGTH
         BZ    PASSROUT                 'U' NOT FOUND IN CARD
         CLC   0(5,R1),=C'USER='        R1 PTS TO LAST BYTE TRANSLATED
         BE    LOADUSER                 GO SAVE USERID
         CR    R7,R1                    HOW MANY COLS HAVE BEEN TRTD?
         BE    PASSROUT                 USER NOT FOUND CHECK FOR PW
         LA    R1,1(R1)                 R1 POINTS TO NEXT COL RIGHT
         B     USERCHK                  TRY AGAIN
LOADUSER EQU   *                        LOAD USER INTO USER SAVE AREA
         LA    R1,5(R1)                 BUMP PASS USER=
         LR    R5,R1                    SAVE R1 FOR MOVE
         LA    R7,RECAREA               GET ADDRESS OF LAST POSSIBLE
         LA    R7,70(R7)                CHARACTER IN R7
         LA    R4,0                     R4 IS LENGTH OF MOVE
LOADUSE1 EQU   *                        COUNT LOOP
         CLI   0(R1),C','               END OF USERID
         BE    LOADUSE2                 GO MOVE USERID
         CLI   0(R1),C' '               END OF USERID
         BE    LOADUSE2                 GO MOVE USERID
         CR    R7,R1                    END OF CARD
         BE    LOADUSE2                 GO MOVE USERID
         LA    R1,1(R1)                 BUMP R1
         LA    R4,1(R4)                 BUMP R4
         B     LOADUSE1                 CONTINUE
LOADUSE2 EQU   *                        MOVE USERID
         STCM  R4,B'0001',USERIDLT      STORE USERID LENGTH
         BCTR  R4,R0                    DECREMENT FOR EXECUTE
         EX    R4,MOVEUSER              EXECUTE MOVE LENGTH IN R4
         BAL   R10,GETPASSW             GET PASSWORD FROM RACF
         B     PASSROUT                 GO TO PASSWORD ROUTINES
GETPASSW EQU   *                        ROUTINE TO GET AND DECRYPT
*                                       THE PASSWORD FROM THE RACF
*                                       DATASET FOR THE USERID FOUND
*                                       IN PREVIOUS ROUTINES
         ICHEINTY LOCATE,TYPE='USR',ACTIONS=ACTLST,WKAREA=RACFWORK,    X
               ENTRY=USERIDLT
         LH    R4,RACFLNGT              GET LENGTH OF RACFFLD
         STH   R4,PASSWDLT+2            STORE IT
         LA    R2,RACFFLD               ADDRESS OF ENCRYPTED PASSWORD
         L     R6,0(R2)                 GET FIRST 4 BYTES
         L     R4,=X'F0000000'          WORK ON FIRST 4 BYTES
         SR    R5,R5                    ZERO R5
         LR    R8,R6                    GET FIRST 4 BYTES
         SRL   R8,3                     SHIFT RIGHT THREE
         XR    R6,R8                    XOR THEM
         NR    R6,R4                    AND THEM
         ST    R6,PASSWD                STORE FIRST 4 BITS
         SR    R7,R7                    ZERO R7
         LA    R1,15                    LOOP COUNTER 15 4 BIT SEGMENTS
DECRYPT1 EQU   *
         LM    R8,R9,0(R2)              GET ENCRYPTED PASSWORD
         NR    R6,R4
         NR    R7,R5
         SRDL  R4,4
         NR    R8,R4
         NR    R9,R5
         SRDL  R6,4
         XR    R8,R6
         XR    R9,R7
         SLDL  R6,1
         XR    R8,R6
         XR    R9,R7
         NR    R8,R4
         NR    R9,R5
         LR    R6,R8
         LR    R7,R9
         SRDL  R6,3
         XR    R8,R6
         XR    R9,R7
         NR    R8,R4
         NR    R9,R5
         LM    R6,R7,PASSWD
         OR    R6,R8
         OR    R7,R9
         STM   R6,R7,PASSWD
         BCT   R1,DECRYPT1
         STM   R6,R7,PASSWD
         BR    R10                      RETURN
PASSROUT EQU   *
         CLI   PASSSW,C'1'              HAVE WE CHECKED PASS BEFORE?
         BE    CONTINP1                 IF SO WE ARE DONE WITH THIS
*                                       CARD AND SHOULD COPY IT
         MVI   PASSSW,C'1'              INDICATE WE HAVE BEEN HERE
         LA    R1,RECAREA               R1 PTS TO COL 1 OF CARD
         LA    R7,61(R1)                R7 PTS TO COL 62 OF CARD
         LA    R1,3(R1)                 R1 PTS TO COL 4 OF CARD
PASSCHK  EQU   *
         LR    R4,R7                    R4 HAS ADDRESS OF COL 66
         SR    R4,R1                    R4 HAS NO OF COLS TO WORK WITH
         EX    R4,TRTINSTP              EXEC TRT, R4 HAS LENGTH
         BZ    USERROUT                 'U' NOT FOUND IN CARD
         CLC   0(9,R1),=C'PASSWORD='    R1 PTS TO LAST BYTE TRANSLATED
         BE    LOADPASS                 GO SAVE USERID
         CR    R7,R1                    HOW MANY COLS HAVE BEEN TRTD?
         BE    USERROUT                 PW NOT FOUND CHECK FOR USER
         LA    R1,1(R1)                 R1 POINTS TO NEXT COL RIGHT
         B     PASSCHK                  TRY AGAIN
LOADPASS EQU   *                        LOAD USER INTO USER SAVE AREA
         LA    R1,9(R1)                 BUMP PASS PASSWORD=
         ST    R1,PASSADDR              SAVE R1 FOR MOVE
         LA    R7,RECAREA               GET ADDRESS OF LAST POSSIBLE
         LA    R7,70(R7)                CHARACTER IN R7
         LA    R4,0                     R4 IS LENGTH OF MOVE
LOADPAS1 EQU   *                        COUNT LOOP
         CLI   0(R1),C','               END OF USERID
         BE    LOADPAS2                 GO MOVE USERID
         CLI   0(R1),C' '               END OF USERID
         BE    LOADPAS2                 GO MOVE USERID
         CR    R7,R1                    END OF CARD
         BE    LOADPAS2                 GO MOVE USERID
         LA    R1,1(R1)                 BUMP R1
         LA    R4,1(R4)                 BUMP R4
         B     LOADPAS1                 CONTINUE
LOADPAS2 EQU   *                        MOVE USERID
         ST    R4,PASSLNGT              STORE CARD PASSWORD LENGTH
         B     USERROUT
CHNGCARD EQU   *                        MAKE APPROPRIATE CHANGES
         L     R1,PASSADDR              GET ADDRESS OF PASSWORD
         LTR   R1,R1                    CHECK TO SEE IF FOUND YET
         BZ    CHNGCRD2                 CONTINUE UNTIL FOUND
         MVI   COPYSW,C'1'              INDICATE CHANGES WERE MADE
         L     R2,PASSLNGT              LENGTH OF CARD PASSWORD
         L     R4,PASSWDLT              LENGTH OF ACTUAL PASSWORD
         CLR   R2,R4                    CHECK LENGTHS
         BNER  R10                      NOT EQUAL WE ARE DONE
CHNGCRD1 EQU   *                        ELSE DO THE MOVE
         BCTR  R4,R0                    DECREMENT FOR EXECUTE
         EX    R4,CARDMOVE              MOVE TO THE CARD
         BR    R10
CHNGCRD2 EQU   *                        RESET APPROPRIATE SWITCHES
         MVI   USERSW,C'0'              SET USER NEED CHECKING
         MVI   PASSSW,C'0'              SET PASSWORD NEEDS CHECKING
         BR    R10
SAVEAREA DC    18F'0'                   OUR SAVE AREA
RETCODE  DC    F'0'                     SAVE AREA FOR RETURN CODE
RECAREA  DC    CL80' '
         CNOP  0,4                      ALIGN
TRTINSTP TRT   0(0,R1),TRANTBLP         TRT INST IS USED VIA EX INST
TRTINSTU TRT   0(0,R1),TRANTBLU         TRT INST IS USED VIA EX INST
MOVEUSER MVC   USERID(0),0(R5)          MVC INST USED TO MOVE USERID
CARDMOVE MVC   0(0,R1),PASSWD           MVC INST USED TO MOVE PASSWD
********************** CONSTANTS *************************************
TRANTBLP DS    0CL256                   TRANSLATE TABLE
         DC    215X'00'
LETTERP  DC    X'D7'                    THIS BYTE REPRESENTS A 'P'
         DC    40X'00'                  FILL OUT TABLE
TRANTBLU DS    0CL256                   TRANSLATE TABLE
         DC    228X'00'
LETTERU  DC    X'E4'                    THIS BYTE REPRESENTS A 'U'
         DC    27X'00'                  FILL OUT TABLE
SHIFT    DC    F'61'                    INITIAL SHIFT VALUE
PURIFY   DC    7X'00',X'07'             PURIFY HIGH ORDER BITS
WORK     DC    2F'0'                    WORK SAVE FOR ENC/DEC
********************** SWITCHES AND HOLD AREAS ***********************
COPYSW   DC    C'0'                     0 = STILL PROCCESSING USER AND
*                                       PASSWORD, 1 = READY TO COPY
PASSSW   DC    C'0'                     0 = HAVE NOT CHECKED PASS,
*                                       1 = PASS HAS BEEN CHECKED FOR
USERSW   DC    C'0'                     0 = HAVE NOT CHECKED USER,
*                                       1 = USER HAS BEEN CHECKED FOR
CARDSW   DC    C'0'                     0 = HAVE NOT CHECKED USER OR
*                                       PASSWORD, U = HAVE CHECK USER,
*                                       P = HAVE CHECKED FOR PASSWORD
         CNOP  0,4
USERIDLT DC    AL1(0)                   LENGTH OF USERID
USERID   DC    CL8' '                   8 BYTE USER ID FIELD
         CNOP  0,4
PASSWD   DC    XL8'0000000000000000'    8 BYTE PASSWORD FIELD ACTUAL
PASSWDLT DC    F'0'                     4 BYTE PASSWORD LENGTH ACTUAL
PASSLNGT DC    F'0'                     LENGTH OF PASSWORD ON CARD
PASSADDR DC    F'0'                     ADDRESS OF PASSWORD ON CARD
RACFWORK EQU   *                        WORK AREA FOR RACF MGR
         DC    F'40'
         DC    XL24'00'
RACFLNGT DC    XL2'00'                  LENGTH OF FIELD RETURNED
RACFFLD  DC    XL8'00'                  FIELD VALUE
         DC    XL2'00'                  FILL OUT 40
ACTLST   ICHEACTN MF=L,FIELD=PASSWORD,RUN=YES
         PRINT NOGEN
SYSUT1   DCB   DDNAME=SYSUT1,EODAD=ENDUT1,DSORG=PS,LRECL=80,RECFM=FB,  X
               MACRF=(GM)
SYSUT2   DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=(PM),LRECL=80,BLKSIZE=80,  X
               RECFM=FB,EXLST=RDJFLIST
         PRINT GEN
RDJFLIST DC    X'07',AL3(JFCBAREA)
JFCBAREA DC    176X'0'
         LTORG
         PRINT NOGEN
* JFCB DSECT
JFCB     DSECT
         IEFJFCBN LIST=YES
         EQUATE                         REGISTER EQUATES
         PRINT GEN
         END   DLXSUBMT
