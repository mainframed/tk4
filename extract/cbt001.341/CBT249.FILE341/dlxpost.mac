DLXPOST1 CSECT
         STM   R14,R12,12(R13)
         LR    R11,R15
         USING DLXPOST1,R11
         ST    R13,SAVEAREA+4
         LR    R6,R13
         LA    R13,SAVEAREA
         ST    R13,8(R6)
* END OF PROLOUGE
CKPARM   L     R3,0(R1)       GET PARM ADDRESS
         CLC   0(2,R3),X'0000'    SEE IF NO PARM
         BE    CKPARMX
         CLC   2(4,R3),=C'ASIS'   SEE IF PARM IS ASIS
         BNE   CKPARMX
         MVI   ASIS,C'1'         SET ASIS FLAG
CKPARMX  EQU   *
* INITIALIZE RECORD AREAS AND OPEN FILES
         OPEN  (INDCB,(INPUT),INOCL,(INPUT))
         MVC   INAREA(133),SPACEIN        CLEAR INPUT AND
         MVC   OUTAREA(133),SPACEOUT      OUTPUT AREAS
         LA    R7,INDCB
         USING IHADCB,R7
CHECKU   EQU   *
         TM    DCBRECFM,X'C0'   TEST FOR UNDEFINED RECORDS WHICH WE
         BNO   CHKASIS          WILL NOT HANDLE SO WE WILL SET A
         MVI   RETCODE+3,X'08'  RETURN CODE OF 8 AND CLOSE UP
         B     CLOSIT           SHOP
CHKASIS  EQU   *                   CHECK FOR ANSI CONTROL
         CLI   ASIS,C'1'
         BNE   MOVEDEF
         MVC   INRECFM,DCBRECFM
         MVC   INLRECL,DCBLRECL
         MVC   INBLKSI,DCBBLKSI
MOVEDEF  EQU   *
         DROP  R7
         LA    R7,OUTDCB
         USING IHADCB,R7
         MVC   DCBRECFM,INRECFM
         MVC   DCBLRECL,INLRECL
         MVC   DCBBLKSI,INBLKSI
         DROP  R7
         LA    R7,INDCB
         USING IHADCB,R7
         OPEN  (OUTDCB,(OUTPUT))
* TRANSFER OCL FROM SYSIN TO OUTPUT AT END CHECK INPUT TEXT RECFM
OCLOOP   EQU   *
         GET   INOCL,INAREA
         CLI   ASIS,C'1'
         BNE   MOVE80
         MVC   OUTAREA+1(80),INAREA
         B     MOVEDONE
MOVE80   EQU   *
         MVC   OUTAREA(80),INAREA
MOVEDONE EQU   *
         BAL   R10,PUTOUT
         B     OCLOOP
* THIS ROUTINE CHECKS FOR THE TYPE OF CARRIAGE CONTROL IN USE IF
* ANY AND BRANCHES TO THE CORRECT CODE TO HANDLE IT
CHECKIN  EQU   *
         LA    R7,INDCB
         USING IHADCB,R7
         CLI   ASIS,C'1'
         BE    READIT
CHECKA   EQU   *                   CHECK FOR ANSI CONTROL
         TM    DCBRECFM,X'04'
         BO    READITA
CHECKM   EQU   *                   CHECK FOR MACHINE CONTROL
         TM    DCBRECFM,X'02'
         BO    READITM
*      NEITHER A NOR M MUST BE NONE
         B     READIT
* THIS ROUTINE (READITA THROUGH ENDLOOPA) IS FOR ANSI CARRIAGE CONTROL
READITA  EQU   *
         BAL   R10,GETIN           GET A RECORD
* START OF CHECK FOR SPACING BEFORE PRINTING
         CLI   INCTL,X'F0'         DOUBLE SPACE BEFORE
         BNE   NOTF0
         BAL   R10,PUTOUT
         B     MOVETXTA
NOTF0    CLI   INCTL,X'60'         TRIPLE SPACE BEFORE
         BNE   NOT60
         BAL   R10,PUTOUT
         BAL   R10,PUTOUT
         B     MOVETXTA
NOT60    CLI   INCTL,X'F1'         HEAD OF FORM FEED BEFORE
         BNE   NOTF1               MUST BE X'4E' NOSPACE SKIP IT
         MVC   OUTAREA(6),=C',FEED '  MOVE IN FORM FEED
         BAL   R10,PUTOUT           AND PRINT IT
         B     MOVETXTA
NOTF1    CLI   INCTL,X'4E'     CHECK FOR OVERPRINT IF NOT IT
         BNE   MOVETXTA        MUST BE A SINGLE SPACE
         MVI   RETCODE+3,X'04' IF OVERPRINT MOVE IN A RETURN CODE OF 4
         B     READITA         TO WARN OF POSSIBLE ERROR DUE TO 6670S
*                              LACK OF SUPPORT FOR OVERPRINTING
*                              THIS WOULD PROBABLY BE A GOOD POINT
*                              TO PUT IN SUPPORT FOR HIGHLIGHTING
*
* ACTUAL TEXT MOVE AND PRINT
MOVETXTA MVC   OUTAREA(133),INAREA+1 MOVE ALL BUT CARRIAGE CTL
         BAL   R10,PUTOUT           AND PRINT IT
ENDLOOPA EQU   *
         MVC   INAREA(132),SPACEIN
         B     READITA           LOOP BACK AND GET ANOTHER RECORD
* THIS ROUTINE (READITM THROUGH ENDLOOPM) IS FOR MACHINE CONTROL CHARS
READITM  EQU   *
         BAL   R10,GETIN           GET A RECORD
* START OF CHECK FOR SPACING BEFORE PRINTING
         CLI   INCTL,X'13'         DOUBLE SPACE BEFORE
         BNE   NOT13
         BAL   R10,PUTOUT
         B     MOVETXTM
NOT13    CLI   INCTL,X'1B'         TRIPLE SPACE BEFORE
         BNE   NOT1B
         BAL   R10,PUTOUT
         BAL   R10,PUTOUT
         B     MOVETXTM
NOT1B    CLI   INCTL,X'8B'         HEAD OF FORM FEED BEFORE
         BNE   MOVETXTM            MOVE AND SPACE 1
         MVC   OUTAREA(6),=C',FEED '  MOVE IN FORM FEED
         BAL   R10,PUTOUT           AND PRINT IT
         B     ENDLOOPM           NO PRINT POSSIBLE
* ACTUAL TEXT MOVE AND PRINT
MOVETXTM MVC   OUTAREA(133),INAREA+1 MOVE ALL BUT CARRIAGE CTL
         BAL   R10,PUTOUT           AND PRINT IT
* START OF CHECKS FOR SPACING AFTER PRINTING
         CLI   INCTL,X'11'        DOUBLE SPACE AFTER
         BNE   NOT11
         BAL   R10,PUTOUT
         B     ENDLOOPM
NOT11    CLI   INCTL,X'19'        TRIPLE SPACE AFTER
         BNE   NOT19
         BAL   R10,PUTOUT
         BAL   R10,PUTOUT
         B     ENDLOOPM
NOT19    CLI   INCTL,X'89'        HEAD OF FORM FEED AFTER
         BNE   ENDLOOPM
         MVC   OUTAREA(6),=C',FEED '  MOVE IN FORM FEED
         BAL   R10,PUTOUT           AND PRINT IT
ENDLOOPM EQU   *
         MVC   INAREA(132),SPACEIN
         B     READITM           LOOP BACK AND GET ANOTHER RECORD
* THIS ROUTINE (READIT THROUGH ENDLOOP) IS FOR NO CARRIAGE CONTROL
READIT   EQU   *
         BAL   R10,GETIN           GET A RECORD
MOVETXT  MVC   OUTAREA(133),INAREA MOVE ALL
         BAL   R10,PUTOUT           AND PRINT IT
ENDLOOP  EQU   *
         MVC   INAREA(132),SPACEIN
         B     READIT            LOOP BACK AND GET ANOTHER RECORD
CLOSIT   CLOSE (INDCB,,INOCL)
         DROP  R7
         LA    R7,OUTDCB
         USING IHADCB,R7
         TM    DCBOFLGS,DCBOFOPN
         BNO   OUTNOPN
         CLOSE (OUTDCB)
OUTNOPN  EQU   *
* BEGINNING OF EPILOUGE
         L     R13,SAVEAREA+4
         L     R15,RETCODE
         RETURN (14,12),RC=(15)
* END OF EPILOUGE
PUTOUT   EQU   *
         ST    R10,PUTOUTR
         PUT   OUTDCB,OUTAREA
         MVC   OUTAREA(133),SPACEOUT
         L     R10,PUTOUTR
         BR    R10
PUTOUTR  DS    F
GETIN    EQU   *
         MVC   INAREA(133),SPACEIN
         ST    R10,GETINR
         GET   INDCB,READAREA
CHECKF   EQU   *
         TM    DCBRECFM,X'80'   TEST FOR FIXED LENGTH RECORDS
         BNO   MOVEV            IF NOT F MUST BE VARIABLE
         MVC   INAREA(133),READAREA
         B     GETINOUT
MOVEV    EQU   *
         LH    R5,DCBLRECL      GET LENGTH OF RECORD
         SH    R5,=H'5'         DECREMENT 1 FOR EX AND 4 FOR RDW
         EX    R5,MVCINST       EXECUTE THE MOVE
GETINOUT EQU   *
         MVC   READAREA(137),SPACREAD
         L     R10,GETINR
         BR    R10
GETINR   DS    F
         PRINT NOGEN
INOCL    DCB   DDNAME=SYSIN,DSORG=PS,MACRF=(GM),EODAD=CHECKIN
INDCB    DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=(GM),EODAD=CLOSIT
OUTDCB   DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=(PM)
         PRINT GEN
MVCINST  MVC   INAREA(0),READAREA+4
RETCODE  DC    F'0'
ASIS     DC    CL1'0'
INRECFM  DC    XL1'90'
INLRECL  DC    XL2'0085'
INBLKSI  DC    XL2'0085'
SPACEIN  DC    CL1' '
INAREA   DS    0CL133
INCTL    DS    CL1' '
         DS    CL132' '
         DC    C' '
SPACEOUT DC    CL1' '
OUTAREA  DS    CL132' '
SPACREAD DC    CL1' '
READAREA DS    CL137' '
SAVEAREA DC    18F'0'
         EQUATE
         PRINT NOGEN
         DCBD  DSORG=QS
         PRINT GEN
         END   DLXPOST1
