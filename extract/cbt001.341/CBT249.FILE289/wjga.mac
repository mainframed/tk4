WJGA     TITLE 'W J G A  --- TGET ASIS INTERFACE ROUTINE'
***********************************************************************
*                                                                     *
*        WJGA                                                         *
*                                                                     *
***********************************************************************
         SPACE 4
***********************************************************************
*                                                                     *
*        THIS ROUTINE IS AN INTERFACE BETWEEN HIGH LEVEL              *
*        LANGUAGES AND THE TSO TGET ASIS SVC. IT ALLOWS               *
*        A PLI OR COBOL PROBRAM TO PERFORM VERY RUDIMENTARY           *
*        SCREEN FORMATTING AND INFORMATION RETRIEVAL FROM             *
*        TSO.                                                         *
*                                                                     *
*        FOR A FULL DESCRIPTION, SEE THE PERTINENT ARAMCO             *
*        COMMENT.                                                     *
*                                                                     *
*        ATTRIBUTES: NORENT, NOREUS                                   *
*                                                                     *
***********************************************************************
         SPACE 4
WJGA     CSECT
         ENTRY WJGAPLI
         REGS
         EJECT
***********************************************************************
*                                                                     *
*        INITIALIZE.                                                  *
*                                                                     *
***********************************************************************
*                                                                     *
WJGA     CSECT
         SAVE  (14,12)
         USING WJGA,R15
         LA    R14,0          ENTRY FROM WJGA
         B     GO
         DC    CL8'WJGA'
WJGAPLI  SAVE  (14,12)
         USING WJGAPLI,R15
         LA    R14,4          ENTRY FROM WJGAPLI
         B     GO
         DC    CL8'WJGAPLI'
GO       BALR  R2,0
         USING *,R2
         ST    R13,SAVE+4
         LA    R13,SAVE
         ST    R1,PARM        SAVE PARM ADDRESS
         LM    R3,R4,0(R1)    POINT AT CALLER'S PARMS
         LTR   R14,R14        IS IT PLI ?
         BZ    BYPLI          NO, BRANCH
         L     R3,0(R3)       YES, STRIP DOPE VECTORS
         L     R4,0(R4)
BYPLI    ST    R4,ADDRRET     SAVE RETURN POINTER
         SR    R5,R5          ZERO R5
         SPACE 4
***********************************************************************
*                                                                     *
*        ISSUE TGET ASIS.                                             *
*                                                                     *
***********************************************************************
*                                                                     *
         LA    R4,BUFFER      POINT AT MY TGET BUFFER
         TGET  BUFFER,2048,ASIS
         LTR   R15,R15        RETURN CODE O.K. ?
         BNZ   ERROR1         NO, BRANCH
         LR    R7,R1          SAVE LEN OF TGET DATA
         EJECT
***********************************************************************
*                                                                     *
*        DECODE AID.                                                  *
*                                                                     *
***********************************************************************
*                                                                     *
         LA    R6,AIDTABLE    CHECK OUT AID
AIDLOOP  CLI   0(R6),X'FF'    END OF TABLE ?
         BE    ERROR2         YES, BRANCH
         CLC   3(1,R6),BUFFER IS THIS THE ONE ?
         BE    AIDFOUND       YES, BRANCH
         LA    R6,4(R6)       NO, KEEP LOOKING
         B     AIDLOOP
AIDFOUND MVC   0(3,R3),0(R6)  PUT IN CALLERS BUFFER
         LA    R3,3(R3)       AND BUMP POINTERS
         CH    R7,=H'3'       IS IT A PA KEY ?
         BE    ENDBUF         YES, WE'RE DONE
         BAL   R10,IOTORC     GO CONVERT CURSOR ADDRESS
         SPACE 4
***********************************************************************
*                                                                     *
*        MOVE DATA FROM TGET BUFFER TO USER BUFFER.                   *
*                                                                     *
***********************************************************************
*                                                                     *
         SR    R9,R9          CLEAR R9
BUFLOOP  CLI   0(R4),X'11'    SBA ?
         BE    ENDLOOP        YES, BRANCH
         MVC   0(1,R3),0(R4)  NO, MOVE A BYTE OF DATA
         LA    R9,1(R9)       BUMP POINTER
         LA    R4,1(R4)
         BCTR  R7,0
BUMP     LA    R3,1(R3)       AND BUMP POINTERS & COUNTERS
         LTR   R7,R7          END OF TGET BUFFER
         BNP   SAVELEN        YES, BRANCH
         B     BUFLOOP
ENDLOOP  LTR   R9,R9          R9 = 0 ?
         BZ    ENDLOOPA
         STH   R9,0(R8)       SAVE LENGTH
ENDLOOPA BAL   R10,IOTORC
         LR    R8,R3          SAVE START OF NEXT FIELD
         XC    0(2,R8),0(R8)  CLEAR NEXT LENGTH FIELD
         SR    R9,R9          ZERO R9
         LA    R3,1(R3)       BUMP POINTERS
         B     BUMP
SAVELEN  STH   R9,0(R8)       SAVE LENGTH OF LAST FIELD
         XC    0(4,R3),0(R3)  PUT TERMINATOR ON
         EJECT
***********************************************************************
*                                                                     *
*        EXIT TO CALLER.                                              *
*                                                                     *
***********************************************************************
*                                                                     *
ENDBUF   LA    R15,=F'0'
EXIT     L     R14,ADDRRET
         ST    R15,0(R14)     RETURN CODE
         SR    R15,R15
         L     R13,4(R13)
         RETURN (14,12),T,RC=(15)
         SPACE 4
***********************************************************************
*                                                                     *
*        SUBROUTINE - CONVERT IO INTERFACE ADDR TO ROW/COL.           *
*                                                                     *
***********************************************************************
*                                                                     *
IOTORC   SR    R14,R14        ZERO R14
         SR    R15,R15
         IC    R14,1(R4)      BYTE 1
         N     R14,=F'63'
         IC    R15,2(R4)      BYTE 2
         N     R15,=F'63'
         SLL   R14,6
         AR    R15,R14        R15 NOW HAS BUF ADDR REL TO ZERO
         SR    R14,R14
         D     R14,=F'80'     CHANGE TO ROW/COLUMN
         LA    R14,1(R14)     BUMP COL
         LA    R15,1(R15)     BUMP ROW
         STH   R15,0(R3)
         STH   R14,2(R3)      PUT IN CALLER BUFFER
         LA    R3,4(R3)
         LA    R4,3(R4)       BUMP POINTERS, ETC.
         SH    R7,=H'3'
         BR    R10
         EJECT
***********************************************************************
*                                                                     *
*        ISSUE AN ERROR AND QUIT.                                     *
*                                                                     *
***********************************************************************
*                                                                     *
ERROR1   LA    R15,ERROR1L
         B     EXIT
ERROR2   LA    R15,ERROR2L
         B     EXIT
         EJECT
***********************************************************************
*                                                                     *
*        CONSTANTS, ETC.                                              *
*                                                                     *
***********************************************************************
*                                                                     *
ERROR1L  DC    AL2(L'ERROR1M)
ERROR1M  DC    C'TGET ERROR'
ERROR2L  DC    AL2(L'ERROR2M)
ERROR2M  DC    C'INVALID AID'
PARM     DS    F
ADDRRET  DS    F
SAVE     DS    18F
AIDTABLE DC    C'NOP',X'60'
         DC    C'ENT',X'7D'
         DC    C'P01',X'F1'
         DC    C'P02',X'F2'
         DC    C'P03',X'F3'
         DC    C'P04',X'F4'
         DC    C'P05',X'F5'
         DC    C'P06',X'F6'
         DC    C'P07',X'F7'
         DC    C'P08',X'F8'
         DC    C'P09',X'F9'
         DC    C'P10',X'7A'
         DC    C'P11',X'7B'
         DC    C'P12',X'7C'
         DC    C'P13',X'C1'
         DC    C'P14',X'C2'
         DC    C'P15',X'C3'
         DC    C'P16',X'C4'
         DC    C'P17',X'C5'
         DC    C'P18',X'C6'
         DC    C'P19',X'C7'
         DC    C'P20',X'C8'
         DC    C'P21',X'C9'
         DC    C'P22',X'4A'
         DC    C'P23',X'4B'
         DC    C'P24',X'4C'
         DC    C'IDF',X'7E'
         DC    C'TRQ',X'F0'
         DC    C'CRD',X'E6'
         DC    C'CLR',X'6D'
         DC    C'PA1',X'6C'
         DC    C'PA2',X'6E'
         DC    C'PA3',X'6B'
         DC    X'FF'
BUFFER   DS    XL2500
         END
