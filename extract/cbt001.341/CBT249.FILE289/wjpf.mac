WJPF     TITLE 'W J P F  ---  FULL-SCREEN TPUT INTERFACE ROUTINE'
***********************************************************************
*                                                                     *
*        W J P F                                                      *
*                                                                     *
***********************************************************************
         SPACE 4
***********************************************************************
*                                                                     *
*        THIS ROUTINE IS AN INTERFACE BETWEEN HIGH LEVEL              *
*        LANGUAGES AND THE TSO TPUT FULLSCREEN SVC. IT                *
*        ALLOWS A PLI OR COBOL PROGRAM TO PERFORM VERY                *
*        RUDIMENTARY SCREEN FORMATTING FROM TSO.                      *
*                                                                     *
*        FOR A FULL DESCRIPTION, SEE THE PERTINENT ARAMCO             *
*        COMMENT                                                      *
*                                                                     *
*        ATTRIBUTES: NORENT, REUS                                     *
*                                                                     *
***********************************************************************
          SPACE 4
WJPF     CSECT
         REGS
         EJECT
***********************************************************************
*                                                                     *
*        INITIALIZE                                                   *
*                                                                     *
***********************************************************************
*                                                                     *
WJPF     CSECT
         SAVE  (14,12)
         USING WJPF,R15
         LA    R14,0
         B     GO
         DC    CL8'WJPF'
GO       BALR  R2,0
         USING *,R2
         ST    R13,SAVE+4
         LA    R13,SAVE
         ST    R1,PARM
         LM    R3,R4,0(R1)    POINT AT CALLER'S PARMS
         ST    R4,ADDRRET     SAVE RETURN POINTER
         LA    R4,OUTPUT
         EJECT
***********************************************************************
*                                                                     *
*        SEARCH COMMAND TABLE FOR REQUESTED COMMAND.                  *
*                                                                     *
***********************************************************************
*                                                                     *
         CLC   0(2,R3),=C'WR' PLAIN OLD WRITE ?
         BE    BYEW           YES, SKIP ERASE WRITE
         CLC   0(2,R3),=C'EW' ERASE WRITE ?
         BNE   ERROR1         NO SIGNAL ERROR
         MVC   0(10,R4),=X'1140403C5D7F00114040' RA 24,80,X'00'
         LA    R4,10(R4)                   SBA 1,1
BYEW     LA    R3,3(R3)       BUMP INPUT POINTER
         EJECT
***********************************************************************
*                                                                     *
*        SEARCH BUFFER CTL TABLE FOR REQUESTED COMMAND.               *
*                                                                     *
***********************************************************************
*                                                                     *
BUFLOOP  CLI   0(R3),X'FF'    END OF BUFFER ?
         BE    TPUT           YES, OUTPUT IS DONE
         TM    0(R3),X'80'    IS IT BUFFER CTL ORDER ?
         BNO   MOVEDATA       NO, MUST BE DATA
         LA    R6,BUFTABLE    POINT TO BUF CTL TABLE
CTLLOOP  CLI   0(R6),X'FF'    END TABLE ?
         BE    ERROR2         YES, ERROR
         CLC   0(2,R6),0(R3)  IS THIS THE BUFFER CTL ?
         BE    CTLFOUND       YES, BRANCH
         LA    R6,3(R6)       NO, BRANCH
         B     CTLLOOP
         SPACE 4
***********************************************************************
*                                                                     *
*        BRANCH INTO LIST FOR PROPER HANDLER.                         *
*                                                                     *
***********************************************************************
*                                                                     *
CTLFOUND SR    R15,R15        CLEAR R15
         IC    R15,2(R6)      GET BUF CTL
         B     CTLTYPE(R15)   AND DECODE IT
CTLTYPE  B     CTLBA
         B     CTLSF
         B     CTLIC
         B     CTLRA
         B     CTLEU
         EJECT
***********************************************************************
*                                                                     *
*        SET BUFFER ADDRESS.                                          *
*                                                                     *
***********************************************************************
*                                                                     *
CTLBA    MVI   0(R4),X'11'    SET BUFFER ADDRESS
         LA    R3,2(R3)       POINT AT ADDRESS
         LA    R4,1(R4)
         BAL   R10,RCTOIO     CONVER TO INTERFACE CODE
         B     BUFLOOP
         SPACE 4
***********************************************************************
*                                                                     *
*        START FIELD (SET ATTRIBUTE BYTE).                            *
*                                                                     *
***********************************************************************
*                                                                     *
CTLSF    MVI   0(R4),X'1D'    START FIELD
         MVC   1(1,R4),2(R3)  SET ATTRIBUTE BYTE
         LA    R4,2(R4)
         LA    R3,3(R3)       BUMP POINTERS
         B     BUFLOOP
         SPACE 4
***********************************************************************
*                                                                     *
*        INSERT CURSOR.                                               *
*                                                                     *
***********************************************************************
*                                                                     *
CTLIC    MVI   0(R4),X'13'    INSERT CURSOR
         LA    R3,2(R3)
         LA    R4,1(R4)       BUMP POINTERS
         B     BUFLOOP
         EJECT
***********************************************************************
*                                                                     *
*        REPEAT TO ADDRESS.                                           *
*                                                                     *
***********************************************************************
*                                                                     *
CTLRA    MVI   0(R4),X'3C'    REPEAT TO ADDRESS
         LA    R3,2(R3)
         LA    R4,1(R4)       BUMP POINTERS
         BAL   R10,RCTOIO     CONVERT TO INTERFACE ADDRESS
         MVC   0(1,R4),0(R3)
         LA    R3,1(R3)
         LA    R4,1(R4)       BUMP POINTERS
         B     BUFLOOP
         SPACE 4
***********************************************************************
*                                                                     *
*        ERASE ALL UNPROTECTED.                                       *
*                                                                     *
***********************************************************************
*                                                                     *
CTLEU    MVI   0(R4),X'12'    ERASE UNPROTECTED TO ADDRESS
         LA    R3,2(R3)
         LA    R4,1(R4)       BUMP POINTERS
         BAL   R10,RCTOIO     CONVERT TO INTERFACE ADDRESS
         B     BUFLOOP
         EJECT
***********************************************************************
*                                                                     *
*        MOVE DISPLAY DATA TO OUTPUT BUFFER.                          *
*                                                                     *
***********************************************************************
*                                                                     *
MOVEDATA LH    R11,0(R3)      GET LENGTH OF FIELD
         CH    R11,=H'2048'   IS IT TOO LONG ?
         BH    ERROR4         YES, QUIT
         LA    R10,2(R3)      POINT AT DATA
         LR    R5,R11         SET TO LENGTH
         MVCL  R4,R10         MOVE THE DATA
         LH    R1,0(R3)       GET LENGTH AGAIN
         LA    R3,2(R1,R3)
         B     BUFLOOP
         SPACE 4
***********************************************************************
*                                                                     *
*        ISSUE TPUT FULLSCREEN.                                       *
*                                                                     *
***********************************************************************
*                                                                     *
TPUT     LA    R1,OUTPUT
         SR    R4,R1          GET LENGTH OF BUFFER
         LR    R0,R4
         O     R1,=X'03000000' SET TPUT FULLSCREEN
         TPUT  (R1),(R0),R
         LTR   R15,R15        IS IT O.K. ?
         BNZ   ERROR5         NO, ERROR
         LA    R15,=F'0'      RETURN O.K.
         SPACE 4
***********************************************************************
*                                                                     *
*        RETURN TO CALLER.                                            *
*                                                                     *
***********************************************************************
*                                                                     *
EXIT     L     R14,ADDRRET
         ST    R15,0(R14)
         SR    R15,R15
         L     R13,4(R13)
         RETURN (14,12),T,RC=(15)
         EJECT
***********************************************************************
*                                                                     *
*        SUBROUTINE - CONVERT ROW/COL ADDRESS TO IO INTERFACE ADDRESS.*
*                                                                     *
***********************************************************************
*                                                                     *
RCTOIO   SR    R15,R15        CLEAR R15
         LH    R15,0(R3)
         CH    R15,=H'24'     IS ROW GT 24 ?
         BH    ERROR3         YES, ERROR
         BCTR  R15,0
         SR    R14,R14        CLEAR R14
         LH    R14,2(R3)      GET COLUMN
         CH    R14,=H'80'     IS IT GT 80 ?
         BH    ERROR3         YES, ERROR
         MH    R15,=H'80'
         BCTR  R14,0
         AR    R15,R14        GET POSITION REL TO 0
         STC   R15,IOADDR+1
         SRL   R15,6
         STC   R15,IOADDR
         NI    IOADDR+1,X'3F'
         TR    IOADDR(2),TRTABLE
         MVC   0(2,R4),IOADDR MOVE INTERFACE ADDRES INTO BUF
BUMP     LA    R4,2(R4)
         LA    R3,4(R3)       BUMP POINTERS
         BR    R10
         EJECT
***********************************************************************
*                                                                     *
*        RETURN ERROR MESSAGE TO CALLER.                              *
*                                                                     *
***********************************************************************
*                                                                     *
ERROR1   LA    R15,ERROR1M
         B     EXIT
ERROR2   LA    R15,ERROR2M
         B     EXIT
ERROR3   LA    R15,ERROR3M
         B     EXIT
ERROR4   LA    R15,ERROR4M
         B     EXIT
ERROR5   LA    R15,ERROR5M
         B     EXIT
         EJECT
***********************************************************************
*                                                                     *
*        CONSTANTS, ETC.                                              *
*                                                                     *
***********************************************************************
*                                                                     *
ADDRRET  DS    F
PARM     DS    F
SAVE     DS    18F
ERROR1M  DC    AL2(L'ERROR1MG)
ERROR1MG DC    C'INVALID COMMAND PASSED'
ERROR2M  DC    AL2(L'ERROR2MG)
ERROR2MG DC    C'INVALID BUFFER CONTROL ORDER'
ERROR3M  DC    AL2(L'ERROR3MG)
ERROR3MG DC    C'INVALID BUFFER ADDRESS'
ERROR4M  DC    AL2(L'ERROR4MG)
ERROR4MG DC    C'DATA LENGTH GRATER THAN 2K'
ERROR5M  DC    AL2(L'ERROR5MG)
ERROR5MG DC    C'BAD TPUT RETURN CODE'
BUFTABLE DC    C'BA',X'00'
         DC    C'SF',X'04'
         DC    C'IC',X'08'
         DC    C'RA',X'0C'
         DC    C'EU',X'10'
         DC    X'FF'
IOADDR   DC    X'0000'
TRTABLE  DC    X'40C1C2C3C4C5C6C7C8C94A4B'
         DC    X'4C4D4E4F50D1D2D3D4D5D6D7'
         DC    X'D8D95A5B5C5D5E5F6061E2E3'
         DC    X'E4E5E6E7E8E96A6B6C6D6E6F'
         DC    X'F0F1F2F3F4F5F6F7F8F97A'
         DC    X'7B7C7D7E7F'
         LTORG *
OUTPUT   DS    XL6000
         END
