 /* GENDCL : PROGRAM TO GENERATE DCL FOR PROGRAMS SCREEN AND UUFP */
 GENDCL:
   PROC(PARM) OPTIONS(MAIN) REORDER;
   DCL
      PLIXOPT CHAR(50) VAR EXT INIT('ISASIZE(18312)');
   DCL
      PARM CHAR(100) VAR;
   DCL
      CONVERT BIT INIT('1'B);
   DCL
      PRINTER FILE STREAM OUTPUT PRINT;
   DCL
      LOWERCASE CHAR(26) INIT('abcdefghijklmnopqrstuvwxyz');
   DCL
      UPPERCASE CHAR(26) INIT('ABCDEFGHIJKLMNOPQRSTUVWXYZ');
   DCL
      (#SH INIT(24),                    /* SCREEN HEIGTH */
      #SW INIT(80)) FIXED BIN STATIC;   /* SCREEN WIDTH*/
   DCL
      Q PIC'99';
   DCL
      (LAST,
      TEMP) CHAR(#SH*#SW);
   DCL
      XLAST(#SH) CHAR(#SW) DEF(LAST);
   DCL
      XXLAST(#SH*#SW) CHAR DEF(LAST);
   DCL
      XTEMP(#SH) CHAR(#SW) DEF(TEMP);
   DCL
      XXTEMP(#SH*#SW) CHAR DEF(TEMP);
   DCL
      (TENS,
      DIGITS)CHAR(#SW+3)VAR INIT('   ');
   DCL
      AST CHAR(#SW+4) INIT(('  '××REPEAT('*',#SW+2)));
   DCL
      TOP PIC'Z9';
   DCL
      (LINE,
      MASK)CHAR(#SW);
   DCL
      XLINE(#SW) CHAR DEF(LINE);
   DCL
      XMASK (#SW) CHAR DEF(MASK);
   DCL
      MARKER CHAR INIT('^');
   DCL
      LONGLINE CHAR(#SW+3);
   DCL
      XLONGLINE(#SW+3) CHAR DEF(LONGLINE);
   DCL
      1 CURRENTDATE,
         2(YEAR,
         MONTH,
         DAY)PIC'99';
   DCL
      TIMEOFDAY PIC'(6)9' BASED(ADDR(CLOCK));
   DCL
      CLOCK CHAR(6);
   DCL
      MON(12) CHAR(3) INIT('JAN','FEB','MAR','APR','MAY', 'JUN','JUL',
   'AUG','SEP','OCT','NOV','DEC');
   DCL
      TYPE CHAR(4) STATIC;
   DCL
      1 BRCS  UNAL,
         3 BRCS_SROW BIT(16),
         3 BRCS_SCOL BIT(16);
   DCL
      TEST CHAR INIT('Y');
   DCL
      (DATE,
      TRANSLATE,
      UNSPEC,
      VERIFY,
      CEIL,
      CHAR,
      INDEX,
      ADDR,
      PLIDUMP,
      LENGTH,
      REPEAT,
      STRING,
      SUBSTR,
      TIME) BUILTIN;
   DCL
      INFILE FILE RECORD INPUT ENV(RECSIZE(80));
   DCL
      (CROW,
      CCOL) PIC'99' INIT(0);
   DCL
      (ROW,
      SROW,
      SCOL,
      COL) FIXED BIN(15);
   DCL
      (M,
      SAVEMSG,
      MSG)CHAR(#SW*#SH) VAR INIT('');
   DCL
      ATTRIBCHAR CHAR(32) VAR INIT('');
   DCL
      OUTFILE FILE RECORD OUTPUT ENV(RECSIZE(80));
   DCL
      1 OUTLINE,
         3 OUTAREA CHAR(72),
         3 RECSOUT PIC'(8)9' INIT(0);
   DCL
      SIZE FIXED BIN INIT(0);
   DCL
      PARAM FILE STREAM INPUT;
   DCL
      BUFFERSIZE FIXED BIN INIT(3072);
   DCL
      FLEN PIC'9999';
   DCL
      CURSORROW PIC'99' INIT(1);
   DCL
      CURSORCOL PIC'99' INIT(2);
   DCL
      I FIXED BIN;
   DCL
      ATTRIBPOS FIXED BIN;
   DCL
      NAME(32) CHAR INIT('#'/*UNPROTECTED*/,'!'/*UNPROTECTED,NONDISPLAY
  */,'@'/*PROTECTED*/, '^'/*PROTECTED,HIGHLIGHTED*/, '&'/*UNPROTECTED,
  HIGHLIGHTED*/,(27)(' '));
   DCL
      VALUE(32) BIT(8) INIT('11000001'B,'01001101'B, '11110000'B,
   '11111000'B,'11001001'B,(27)('0'B));
   DCL
      ATTRIBBIN BIT(32*8) VAR INIT('0000000'B) AUTO/*DUMMY ENTRY*/;
   DCL
      CONCAT CHAR(3);
   DCL
      FIELDNAME CHAR(20) VAR INIT('S');
   DCL
      NOW CHAR(20);
   DCL
      DC CHAR(2) INIT('EW')/*ERASE WRITE*/;
   DCL
      WCC CHAR INIT('C')/*RESTORE KEYBOARD AND RESET MDT'S*/;
 %PAGE;
      ON ERROR
         BEGIN;
            ON ERROR
               SNAP SYSTEM;
            CALL PLIDUMP('TFCAB');
         END;
  %SKIP(3);
      IF PARM^='' THEN
         IF SUBSTR(PARM,1,1)='0' THEN
            CONVERT='0'B;
  %PAGE;
      CALL GETPARM;
      SIZE=SIZE+3;
      CALL GENHEADS;
      ON ENDFILE(INFILE)
         SIGNAL ERROR;
      CALL READFILE;
      DO ROW=1 TO #SH;
         LINE=XLAST(ROW);
         DO COL=1 TO #SW;
            IF INDEX(ATTRIBCHAR,SUBSTR(LINE,COL,1))^=0 THEN
               DO;
                  CALL GENMSG;
                  SROW=ROW;
                  SCOL=COL;
                  MSG='';
               END;
            MSG=MSG××SUBSTR(LINE,COL,1);
         END;
      END;
      MSG=MSG××SAVEMSG;
      CALL GENMSG;
      SIZE=SIZE+9;
      CALL GENTAILS;
      IF SIZE>BUFFERSIZE THEN
         DO;
            PUT FILE(SYSPRINT) LIST (
             '*** WARNING *** SIZE OF DECLARATION > TPUT BUFFER SIZE');
            PUT FILE(SYSPRINT) SKIP LIST('DECLARATION SIZE IS',SIZE);
            PUT FILE(SYSPRINT) SKIP
            LIST('TPUT BUFFER SIZE IS',BUFFERSIZE);
         END;
 %PAGE;
 GETPARM:
   PROC;
      ON ENDFILE(PARAM)
         GO TO CONTINUE;
      GET FILE(PARAM)
      DATA(CURSORROW,CURSORCOL,NAME,VALUE,FIELDNAME, TEST,BUFFERSIZE);
 CONTINUE:
      PUT FILE(PRINTER) PAGE LIST('PARAMETER VALUES USED FOR THIS RUN');
      PUT FILE(PRINTER) SKIP(2);
      PUT FILE(PRINTER) SKIP DATA(CURSORROW);
      PUT FILE(PRINTER) SKIP DATA(CURSORCOL);
      PUT FILE(PRINTER) SKIP DATA(FIELDNAME);
      PUT FILE(PRINTER) SKIP DATA(TEST);
      PUT FILE(PRINTER) SKIP DATA(BUFFERSIZE);
      PUT FILE(PRINTER) SKIP DATA(NAME);
      PUT FILE(PRINTER) SKIP DATA(VALUE);
      NOW=FIELDNAME;
      UNSPEC(NOW)=UNSPEC(NOW)×UNSPEC((20)' ');
      FIELDNAME=SUBSTR(NOW,1,LENGTH(FIELDNAME));
      UNSPEC(TEST)=UNSPEC(TEST)×UNSPEC(' ');
      DO I=1 TO 32;
         IF NAME(I)^=' ' THEN
            DO;
               IF VALUE(I)='0'B THEN
                  SIGNAL ERROR;
               ATTRIBCHAR= ATTRIBCHAR××NAME(I);
               ATTRIBBIN=ATTRIBBIN××VALUE(I);
            END;
      END;
   END GETPARM;
 %PAGE;
 GENHEADS:
   PROC;
      IF TEST='Y' THEN
         DO;
            OUTAREA=' TEST:PROC OPTIONS(MAIN) REORDER;';
            RECSOUT=RECSOUT+1;
            WRITE FILE(OUTFILE)FROM(OUTLINE);
            OUTAREA=
            ' DCL WJFS ENTRY(CHAR(*),CHAR(3)),CLEAR ENTRY;';
            RECSOUT=RECSOUT+1;
            WRITE FILE(OUTFILE)FROM(OUTLINE);
            OUTAREA=
            ' DCL AID CHAR(3) STATIC, ADDR BUILTIN;';
            RECSOUT=RECSOUT+1;
            WRITE FILE(OUTFILE)FROM(OUTLINE);
            OUTAREA=
            ' DCL S CHAR(10000) BASED(ADDR('××FIELDNAME××'));';
            RECSOUT=RECSOUT+1;
            WRITE FILE(OUTFILE)FROM(OUTLINE);
         END;
      PUT STRING(OUTAREA)
      EDIT( ' /* THIS DECLARATION WAS GENERATED ON : ',DATE(),' */') (
       A,P'99/99/99',A);
      RECSOUT=RECSOUT+1;
      WRITE FILE(OUTFILE)FROM(OUTLINE);
      OUTAREA=' DCL 1 '××FIELDNAME××' UNAL,';
      RECSOUT=RECSOUT+1;
      WRITE FILE(OUTFILE)FROM(OUTLINE);
      OUTAREA=' 5 '××FIELDNAME××'_DC CHAR(2) INIT('''××DC××'''),';
      RECSOUT=RECSOUT+1;
      WRITE FILE(OUTFILE)FROM(OUTLINE);
      OUTAREA=
      ' 5 '××FIELDNAME××'_WCC CHAR(1) INIT('''××WCC××'''),';
      RECSOUT=RECSOUT+1;
      WRITE FILE(OUTFILE)FROM(OUTLINE);
   END GENHEADS;
 %PAGE;
 READFILE:
   PROC;
      DO ROW=1 TO #SH;
         READ FILE(INFILE) INTO(XLAST(ROW));
      END;
      DO TOP=1 TO CEIL(#SW/10);
         DIGITS=DIGITS××'1234567890';
         TENS=TENS××(8)' '××TOP;
      END;
      TEMP=' ';
      IF CONVERT THEN
         DO I=1 TO #SH*#SW;
            IF VERIFY(XXLAST(I),LOWERCASE)=0 THEN
               XXTEMP(I)=MARKER;
         END;
      STRING(CURRENTDATE)=DATE();
      CLOCK=SUBSTR(TIME(),1,6);
      IF TIMEOFDAY<120000 THEN
         TYPE='A.M.';
      ELSE
         DO;
            TYPE='P.M.';
            TIMEOFDAY=TIMEOFDAY-120000;
         END;
      PUT FILE(PRINTER)
      EDIT('INPUT TO PROGRAM',
      DAY,MON(MONTH),' 19',YEAR,TIMEOFDAY,TYPE) (PAGE,A,
      SKIP(2), P'Z9B',A(3),A(3),P'99BBBBBB',P'Z9.99.99BB',A(4));
      PUT FILE(PRINTER)SKIP EDIT(TENS,DIGITS,AST)(SKIP,A);
      DO Q=1 TO #SH;
         IF CONVERT THEN
            LINE=TRANSLATE(XLAST(Q),UPPERCASE,LOWERCASE);
         ELSE
            LINE=XLAST(Q);
         PUT FILE(PRINTER) EDIT(Q××'*'××LINE××'*'××Q)(SKIP,A);
         MASK= XTEMP(Q);
         IF INDEX(MASK,MARKER)^=0 THEN
            DO;
               LONGLINE=' ';
               DO I=1 TO #SW;
                  IF XMASK(I)=MARKER THEN
                     XLONGLINE(I+3)='_';
               END;
               PUT FILE(PRINTER)
               EDIT(LONGLINE)(SKIP(0),A);
            END;
      END;
      PUT FILE(PRINTER) EDIT(AST,TENS,DIGITS)(SKIP,A);
      PUT FILE(PRINTER) SKIP(2)
      EDIT( 'CURSOR IS POSITIONED AT ROW ',CURSORROW, ', COLUMN ',
       CURSORCOL)(A,P'Z9',A,P'Z9');
   END READFILE;
 %PAGE;
 GENMSG:
   PROC;
      CROW=SROW;
      CCOL=SCOL;
      IF MSG='' THEN
         RETURN;
      ATTRIBPOS=INDEX(ATTRIBCHAR,SUBSTR(MSG,1,1));
      IF ATTRIBPOS=0 THEN
         DO;
            SAVEMSG=MSG;
            RETURN;
         END;
      OUTAREA=
      ' 5 '××FIELDNAME××'_BA'××CROW××CCOL××' CHAR(2) INIT(''BA''),';
      RECSOUT=RECSOUT+1;
      WRITE FILE(OUTFILE)FROM(OUTLINE);
      OUTAREA=
      ' 5 '××FIELDNAME××'_ROW'××CROW××CCOL××' FIXED BIN(15) '
      ××'INIT('××CROW××'),';
      RECSOUT=RECSOUT+1;
      WRITE FILE(OUTFILE)FROM(OUTLINE);
      OUTAREA=
      ' 5 '××FIELDNAME××'_COL'××CROW××CCOL××' FIXED BIN(15) '
      ××'INIT('××CCOL××'),';
      RECSOUT=RECSOUT+1;
      WRITE FILE(OUTFILE)FROM(OUTLINE);
      OUTAREA=
      ' 5 '××FIELDNAME××'_SF'××CROW××CCOL××' CHAR(2) INIT(''SF''),';
      RECSOUT=RECSOUT+1;
      WRITE FILE(OUTFILE)FROM(OUTLINE);
      OUTAREA= ' 5 '××FIELDNAME××'_ATT'××CROW××CCOL××
      ' BIT(8) INIT('''××CHAR(SUBSTR(ATTRIBBIN,8*ATTRIBPOS,8))××'''B),';
      RECSOUT=RECSOUT+1;
      WRITE FILE(OUTFILE)FROM(OUTLINE);
      MSG=SUBSTR(MSG,2,LENGTH(MSG)-1);
      SIZE=SIZE+11+LENGTH(MSG);
      IF LENGTH(MSG)=0 THEN
         DO;
            OUTAREA=' 5 '××FIELDNAME××'_LEN'××CROW××CCOL××
            ' FIXED BIN(15) INIT(0),';
            RECSOUT=RECSOUT+1;
            WRITE FILE(OUTFILE)FROM(OUTLINE);
            RETURN;
         END;
      M='';
      DO I=1 TO LENGTH(MSG);
         IF SUBSTR(MSG,I,1)='''' THEN
            M=M××'''';
         M=M××SUBSTR(MSG,I,1);
      END;
      FLEN=LENGTH(M);
      OUTAREA=' 5 '××FIELDNAME××'_LEN'××CROW××CCOL××
      ' FIXED BIN(15) INIT('××FLEN××'),';
      RECSOUT=RECSOUT+1;
      WRITE FILE(OUTFILE)FROM(OUTLINE);
      PUT STRING(OUTAREA)
      EDIT( ' /* FIELD AT ROW ',SROW,', COLUMN ',SCOL,
       ' WITH ATTRIBUTE SYMBOL ', NAME(ATTRIBPOS),' */')(
       A,P'Z9',A,P'Z9',A,A,A);
      RECSOUT=RECSOUT+1;
      WRITE FILE(OUTFILE)FROM(OUTLINE);
      OUTAREA=' 5 '××FIELDNAME××'_FLD'××
      CROW××CCOL×× ' CHAR('××FLEN××') INIT((';
      RECSOUT=RECSOUT+1;
      WRITE FILE(OUTFILE)FROM(OUTLINE);
      CONCAT=' ';
      DO WHILE(LENGTH(M)>60);
         DO I=60 TO 50 BY -1;
            IF SUBSTR(M,I,1)=' ' THEN
               GO TO LAB1;
         END;
         I=60;
 LAB1:
         OUTAREA=CONCAT××''''××SUBSTR(M,1,I)××'''';
         RECSOUT=RECSOUT+1;
         WRITE FILE(OUTFILE)FROM(OUTLINE);
         CONCAT=' ××';
         IF I<LENGTH(M) THEN
            M=SUBSTR(M,I+1,LENGTH(M)-I);
      END;
      IF LENGTH(M)^=0 THEN
         OUTAREA=CONCAT××''''××M××''')),';
      ELSE
         OUTAREA=' )),';
      RECSOUT=RECSOUT+1;
      WRITE FILE(OUTFILE)FROM(OUTLINE);
   END GENMSG;
 %PAGE;
 GENTAILS:
   PROC;
      N=N+1;
      OUTAREA=
      ' 5 '××FIELDNAME××'_BC'××' CHAR(2) INIT(''BA''),';
      RECSOUT=RECSOUT+1;
      WRITE FILE(OUTFILE)FROM(OUTLINE);
      PUT STRING(OUTAREA)
      EDIT( ' /* CURSOR IS POSITIONED AT ROW ',CURSORROW, ', COLUMN ',
       CURSORCOL,' */')(A,P'Z9',A,P'Z9');
      RECSOUT=RECSOUT+1;
      WRITE FILE(OUTFILE)FROM(OUTLINE);
      OUTAREA=
      ' 5 '××FIELDNAME××'_CURSORROW'××' FIXED BIN(15) INIT('××
      CURSORROW××'),';
      RECSOUT=RECSOUT+1;
      WRITE FILE(OUTFILE)FROM(OUTLINE);
      OUTAREA=
      ' 5 '××FIELDNAME××'_CURSORCOL'××' FIXED BIN(15) INIT('××
      CURSORCOL××'),';
      RECSOUT=RECSOUT+1;
      WRITE FILE(OUTFILE)FROM(OUTLINE);
      OUTAREA=' 5 '××FIELDNAME××'_IC'××' CHAR(2) INIT(''IC''),';
      RECSOUT=RECSOUT+1;
      WRITE FILE(OUTFILE)FROM(OUTLINE);
      OUTAREA=
      ' 5 '××FIELDNAME××'_END BIT(8) INIT(''11111111''B);';
      RECSOUT=RECSOUT+1;
      WRITE FILE(OUTFILE)FROM(OUTLINE);
      PUT STRING(OUTAREA)
      EDIT( ' /* THE ABOVE DECLARATION IS ',SIZE,' BYTES LONG */')(
       A,P'ZZZ9');
      RECSOUT=RECSOUT+1;
      WRITE FILE(OUTFILE)FROM(OUTLINE);
      IF TEST='Y' THEN
         DO;
            OUTAREA=' DO UNTIL(AID=''P02'');';
            RECSOUT=RECSOUT+1;
            WRITE FILE(OUTFILE)FROM(OUTLINE);
            OUTAREA=' CALL wjfs(S,AID);';
            RECSOUT=RECSOUT+1;
            WRITE FILE(OUTFILE)FROM(OUTLINE);
            OUTAREA=' END;';
            RECSOUT=RECSOUT+1;
            WRITE FILE(OUTFILE)FROM(OUTLINE);
            OUTAREA=' CALL CLEAR;';
            RECSOUT=RECSOUT+1;
            WRITE FILE(OUTFILE)FROM(OUTLINE);
            OUTAREA=' END TEST;';
            RECSOUT=RECSOUT+1;
            WRITE FILE(OUTFILE)FROM(OUTLINE);
         END;
   END GENTAILS;
   %SKIP(3);
   END GENDCL;
