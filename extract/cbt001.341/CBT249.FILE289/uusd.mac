* PROCESS INTERRUPT;
 /* UUSD : A PROGRAM TO FACILITATE DESIGN OF 3270 SCREENS */
 UUSD:
   PROC(PARM) OPTIONS(MAIN) REORDER;
 %SKIP(3);
 /*
   * SUBROUTINES WJPF AND WJGA MUST BE LINKED WITH PROGRAM.
   * IF YOU HAVE TROUBLE ENDING PROGRAM (IE AFTER PRESSING PA1) THEN
     COMPILE WITH NOINTERRUPT. THE ONLY DIFFERENCE IS THAT THE SCREEN IS
     NOT CLEARED BEFORE RETURNING CONTROL TO THE TERMINAL.
   * #S,#SH,#SW ARE PARAMETERS DEFING THE TERMINAL. FOR A DIFFERENT
     TERMINAL YOU NEED ONLY CHANGE THESE (UNLESS THE TERMINAL COMMANDS
     ARE DIFFERENT FROM THOSE FOR THE 3270 IN WHICH CASE YOU WILL HAVE
     TO CHANGE WJPF AND WJGA AS WELL).
 */
 %PAGE;
   DCL
      PLIXOPT CHAR(50) VAR EXT INIT('ISASIZE(51728)');
   DCL
      (#S INIT(8),                     /* MAX NUMBER OF FILES */
      #SH INIT(24),                    /* SCREEN HEIGHT       */
      #SW INIT(80))                    /* SCREEN WIDTH        */
      FIXED BIN STATIC;
   DCL
      SESSION FILE RECORD OUTPUT;
   DCL
      PARM CHAR(100) VAR;
   DCL
      UUSDMSG CHAR(60);
   DCL
      CONVERT BIT INIT('1'B);
   DCL
      1 CURRENTDATE,
         2(YEAR,
         MONTH,
         DAY)PIC'99' ;
   DCL
      CLOCK CHAR(6);
   DCL
      TIMEOFDAY PIC'(6)9' BASED(ADDR(CLOCK));
   DCL
      MON(12) CHAR(3) INIT('JAN','FEB','APR','MAR','MAY', 'JUN','JUL',
   'AUG','SEP','OCT','NOV','DEC');
   DCL
      TYPE CHAR(4);
   DCL
      ERRORMSG CHAR(80) VAR BASED(FINGER);
   DCL
      TUBE11 CHAR INIT(' ');
   DCL
      MSGAREA(10) CHAR(#SW-1);
   DCL
      PRINTED BIT INIT('0'B);
   DCL
      LOWERCASE CHAR(26) INIT('abcdefghijklmnopqrstuvwxyz');
   DCL
      UPPERCASE CHAR(26) INIT('ABCDEFGHIJKLMNOPQRSTUVWXYZ');
   DCL
      STREAM CHAR(1000) VAR;
   DCL
      MESSAGES FIXED BIN INIT(0);
   DCL
      STRINGX CHAR(11) BASED(ADDR(X));
   DCL
      STRINGY CHAR(90) BASED(ADDR(Y));
   DCL
      STRINGZ CHAR(9) BASED(ADDR(Z));
   DCL
      1 Z UNAL,
         2(FILL23 CHAR(2) INIT('BA'),
         CURSORROW FIXED BIN,
         FILL24 FIXED BIN INIT(2),
         FILL25 CHAR(2) INIT('IC'),
         FILL26 CHAR INIT(HIGH(1)));
   DCL
      1 Y UNAL,
         2(FILL32 CHAR(2) INIT('BA'),
         REPLYROW FIXED BIN,
         FILL33 FIXED BIN INIT(1),
         FILL34 CHAR(2) INIT('SF'),
         FILL35 BIT(8) INIT('11000001'B),
         FILL36 FIXED BIN INIT((#SW-1)),
         FILL37 CHAR(#SW-1) INIT(' '));
   DCL
      1 X UNAL,
         2(FILL27 CHAR(2) INIT('BA'),
         MSGROW FIXED BIN,
         FILL28 FIXED BIN INIT(1),
         FILL29 CHAR(2) INIT('SF'),
         FILL30 BIT(8) INIT('01100000'B),
         FILL31 FIXED BIN INIT((#SW-1)));
   DCL
      Q PIC'99';
   DCL
      (WJGA,
      WJPF)ENTRY(CHAR(*),PTR)OPTIONS(ASM INTER);
   DCL
      AREA CHAR(13+(#SH*#SW-1)+4);
   DCL
      RTNCODE FIXED BIN(31) BASED(FINGER);
   DCL
      FINGER PTR;
   DCL
      KEY CHAR(3);
   DCL
      TERMINATOR CHAR(4) INIT(LOW(4));
   DCL
      PICTURE CHAR(5000) BASED(ADDR(FILLER1));
   DCL
      1 FILLER1 UNAL,
         2(F1 CHAR(3) INIT('EWC'),
         F2 CHAR(2) INIT('BA'),
         F3 FIXED BIN INIT(1),
         F4 FIXED BIN INIT(1),
         F5 CHAR(2) INIT('SF'),
         F6 BIT(8) INIT('11010001'B),
         F7 FIXED BIN INIT((#SH*#SW-1)),
         TUBE CHAR(#SH*#SW-1),
         F8 CHAR(2) INIT('BA'),
         F9 FIXED BIN INIT(1),
         F10 FIXED BIN INIT(2),
         F11 CHAR(2) INIT('IC'),
         F12 CHAR INIT(HIGH(1)));
   DCL
      (LAST,
      TEMP) CHAR(#SH*#SW);
   DCL
      XLAST(#SH) CHAR(#SW) DEF(LAST);
   DCL
      XXLAST(#SH*#SW) CHAR DEF(LAST);
   DCL
      XTEMP(#SH) CHAR(#SW) DEF(TEMP);
   DCL
      XXTEMP(#SH*#SW) CHAR DEF(TEMP);
   DCL
      WANT FIXED BIN INIT(1);
   DCL
      HAVE FIXED BIN INIT(-1);
   DCL
      PRINTER FILE STREAM OUTPUT PRINT;
   DCL
      CLEAR CHAR(5000) BASED(ADDR(FILLER2));
   DCL
      1 FILLER2 UNAL,
         2(F13 CHAR(3) INIT('EWC'),
         F14 CHAR(2) INIT('BA'),
         F15 FIXED BIN INIT(1),
         F16 FIXED BIN INIT(1),
         F17 CHAR(2) INIT('SF'),
         F18 BIT(8) INIT('11010001'B),
         F19 FIXED BIN INIT((#SH*#SW-1)),
         F20 CHAR(#SH*#SW-1) INIT(' '),
         F21 CHAR(2) INIT('IC'),
         F22 CHAR INIT(HIGH(1)));
   DCL
      SCREEN FILE RECORD ENV(RECSIZE(80));
   DCL
      DDNAME(#S) CHAR(8) INIT( 'SCREEN1', 'SCREEN2', 'SCREEN3',
   'SCREEN4', 'SCREEN5', 'SCREEN6', 'SCREEN7', 'SCREEN8', 'SCREEN9');
   DCL
      (SAVE,
      STORE)(#S,#SH)CHAR(#SW);
   DCL
      I FIXED BIN;
   DCL
      REPLY CHAR(79);
   DCL
      FILE(#S) BIT;
   DCL
      (TENS,
      DIGITS)CHAR(#SW+3)VAR INIT('   ');
   DCL
      AST CHAR(#SW+4) INIT(('  '××REPEAT('*',#SW+2)));
   DCL
      TOP PIC'Z9';
   DCL
      (LINE,
      MASK)CHAR(#SW);
   DCL
      XLINE(#SW) CHAR DEF(LINE);
   DCL
      XMASK (#SW) CHAR DEF(MASK);
   DCL
      MARKER CHAR INIT('^');
   DCL
      LONGLINE CHAR(#SW+3);
   DCL
      XLONGLINE(#SW+3) CHAR DEF(LONGLINE);
   DCL
      (LOW,
      TRANSLATE,
      PLIDUMP,
      DATE,
      TIME,
      HIGH,
      LENGTH,
      REPEAT,
      ADDR,
      CEIL,
      STRING,
      SUBSTR,
      VERIFY,
      ONCODE,
      CHAR,
      UNSPEC,
      INDEX)BUILTIN;
 %PAGE;
      UUSDMSG='WHICH SCREEN DO YOU WANT DISPLAYED ? (1 TO '××
                 SUBSTR(CHAR(#S),8,2)××')';
      FILE='0'B;
      DO TOP=1 TO CEIL(#SW/10);
         DIGITS=DIGITS××'1234567890';
         TENS=TENS××(8)' '××TOP;
      END;
 %SKIP(3);
      ON ATTN
         BEGIN;
            CALL CLEARSCREEN;
            STOP;
         END;
 %SKIP(3);
      ON ERROR
         BEGIN;
            ON ERROR SNAP
               SYSTEM;
            CALL PLIDUMP('TFCAB');
         END;
 %SKIP(3);
      IF PARM^='' THEN
         IF SUBSTR(PARM,1,1)='0' THEN
            CONVERT='0'B;
 %PAGE;
      DO WHILE('1');
         IF HAVE^=WANT THEN
            DO;
               IF FILE(WANT)='0'B THEN
                  CALL TRYTOGETFILE;
               HAVE=WANT;
            END;
         IF PRINTED THEN
            PRINTED='0'B;
         ELSE
            DO;
               XTEMP=STORE(HAVE,*);
               TUBE11=SUBSTR(TEMP,1,1);
               TUBE=SUBSTR(TEMP,2);
            END;
         CALL WRITESCREEN;
         CALL READSCREEN;
         SELECT(KEY);
            WHEN('P01')
               WANT=1;
            WHEN('P02')
               WANT=2;
            WHEN('P03')
               WANT=3;
            WHEN('P04')
               WANT=4;
            WHEN('P05')
               WANT=5;
            WHEN('P06')
               WANT=6;
            WHEN('P07')
               WANT=7;
            WHEN('P08')
               WANT=8;
            WHEN('P09')
               DO;
                  PRINTED='1'B;
                  WRITE FILE(SESSION) FROM(TUBE);
               END;
            WHEN('P10')
               STORE(HAVE,*)=SAVE(HAVE,*);
            WHEN('P11')
               DO;
                  TEMP=TUBE11××TUBE;
                  STORE(HAVE,*)=XTEMP;
               END;
            WHEN('P12')
               CALL PRINTSCREEN;
            WHEN('P13')
               WANT=1;
            WHEN('P14')
               WANT=2;
            WHEN('P15')
               WANT=3;
            WHEN('P16')
               WANT=4;
            WHEN('P17')
               WANT=5;
            WHEN('P18')
               WANT=6;
            WHEN('P19')
               WANT=7;
            WHEN('P20')
               WANT=8;
            WHEN('P21')
               DO;
                  PRINTED='1'B;
                  WRITE FILE(SESSION) FROM(TUBE);
               END;
            WHEN('P22')
               STORE(HAVE,*)=SAVE(HAVE,*);
            WHEN('P23')
               DO;
                  TEMP=TUBE11××TUBE;
                  STORE(HAVE,*)=XTEMP;
               END;
            WHEN('P24')
               CALL PRINTSCREEN;
            WHEN('PA2')
               EXIT;
            WHEN('ENT')
               DO;
                  DO UNTIL(KEY='ENT');
                     CALL
                     MSGREPLY(
                     'ENTER THE CHARACTER YOU WANT INSERTED INTO'××
                     ' ROW 1, COLUMN 1 OF THE SCREEN ?');
                  END;
                  TEMP=SUBSTR(REPLY,1,1)××TUBE;
                  STORE(HAVE,*)=XTEMP;
                  CALL WRITEFILE(HAVE);
               END;
            OTHERWISE
               ;
         END;
      END;
 %PAGE;
 TRYTOGETFILE:
   PROC;
      DO UNTIL(WANT^=0);
         IF HAVE<0 THEN
            WANT=0;
         DO WHILE(WANT<1 × WANT>#S);
            CALL
            MSGREPLY(UUSDMSG);
            IF VERIFY(REPLY,' 1234567890')^=0 × REPLY=' ' THEN
               WANT=0;
            ELSE
               GET STRING(REPLY) LIST(WANT);
         END;
         CALL READFILE(WANT);
         IF ^FILE(WANT) THEN
            WANT=0;
      END;
   END TRYTOGETFILE;
 %PAGE;
 READSCREEN:
   PROC;
      AREA=LOW(LENGTH(AREA));
      CALL WJGA(AREA,FINGER);
      IF RTNCODE^=0 THEN
         CALL BADCODE(2);
      KEY=SUBSTR(AREA,1,3);
      IF SUBSTR(AREA,4,4)=TERMINATOR× SUBSTR(AREA,8,4)=TERMINATOR THEN
         RETURN;
      TUBE=SUBSTR(AREA,14,UNSPEC(SUBSTR(AREA,12,2)));
   END READSCREEN;
 %PAGE;
 WRITESCREEN:
   PROC;
      LAST=TUBE11××TUBE;
      CALL WJPF(PICTURE,FINGER);
      IF RTNCODE^=0 THEN
         CALL BADCODE(1);
   END WRITESCREEN;
 %PAGE;
 CLEARSCREEN:
   PROC;
      CALL WJPF(CLEAR,FINGER);
      IF RTNCODE^=0 THEN
         CALL BADCODE(1);
   END CLEARSCREEN;
 %PAGE;
 WRITEFILE:
   PROC(N);
   DCL
      N FIXED BIN;
      OPEN FILE(SCREEN)TITLE(DDNAME(N))OUTPUT;
      SAVE(N,*)=STORE(N,*);
      DO I=1 TO #SH;
         WRITE FILE(SCREEN) FROM(SAVE(N,I));
      END;
      CLOSE FILE(SCREEN);
   END WRITEFILE;
 %PAGE;
 READFILE:
   PROC(N);
   DCL
      N FIXED BIN;
      ON UNDF(SCREEN)
         BEGIN;
            IF ONCODE=84 THEN
               DO;
                  CLOSE FILE(SCREEN);
                  CALL
                  SAVEMSG(
      '*** ERROR *** YOU HAVE NOT ALLOCATED A DATA SET FOR THIS SCREEN.'
                   );
                  GO TO EXIT;
               END;
         END;
      OPEN FILE(SCREEN) TITLE(DDNAME(N))INPUT;
      ON UNDF(SCREEN)
         SYSTEM;
      ON ENDFILE(SCREEN)
         BEGIN;
            CLOSE FILE(SCREEN);
            CALL
            SAVEMSG(
    '*** WARNING *** THE DATA SET IS EMPTY OR CONTAINS TOO LITTLE DATA.'
             );
            DO UNTIL(REPLY='Y'×REPLY='N');
               CALL
               SAVEMSG(
               'DO YOU WANT A BLANK SCREEN WRITTEN TO THE DATA SET');
               CALL MSGREPLY( ' AND THEN DISPLAYED ? (Y OR N)');
               UNSPEC(REPLY)=UNSPEC(REPLY)×
               UNSPEC(REPEAT(' ',LENGTH(REPLY)));
            END;
            IF REPLY='Y' THEN
               DO;
                  FILE(N)='1'B;
                  STORE(N,*)=' ';
                  CALL WRITEFILE(N);
               END;
            GO TO EXIT;
         END;
      DO I=1 TO #SH;
         READ FILE(SCREEN)INTO(SAVE(N,I));
      END;
      STORE(N,*)=SAVE(N,*);
      CLOSE FILE(SCREEN);
      FILE(N)='1'B;
 EXIT:
   END READFILE;
 %PAGE;
 PRINTSCREEN:
   PROC;
      PRINTED='1'B;
      IF INDEX(TUBE,MARKER)=0 THEN
         DO;
            LAST=TUBE11××TUBE;
            IF CONVERT THEN
               TEMP=TRANSLATE(LAST,REPEAT(MARKER,26),LOWERCASE);
            ELSE
               TEMP=LAST;
         END;
      ELSE
         DO;
            TEMP=TUBE11××TUBE;
            IF CONVERT THEN
               DO I=1 TO #SW*#SH;
                  IF VERIFY(XXLAST(I),LOWERCASE)=0 THEN
                     XXTEMP(I)=MARKER;
               END;
         END;
      STRING(CURRENTDATE)=DATE();
      CLOCK=SUBSTR(TIME(),1,6);
      IF TIMEOFDAY<120000 THEN
         TYPE='A.M.';
      ELSE
         DO;
            TYPE='P.M.';
            TIMEOFDAY=TIMEOFDAY-120000;
         END;
      PUT FILE(PRINTER)
      EDIT(DAY,MON(MONTH),' 19',YEAR,TIMEOFDAY,TYPE) (
       PAGE, P'Z9B',A(3),A(3),P'99BBBBBB',P'Z9.99.99BB',A(4));
      PUT FILE(PRINTER)SKIP(2) EDIT(TENS,DIGITS,AST)(SKIP,A);
      DO Q=1 TO #SH;
         IF CONVERT THEN
            LINE=TRANSLATE(XLAST(Q),UPPERCASE,LOWERCASE);
         ELSE
            LINE=XLAST(Q);
         PUT FILE(PRINTER) EDIT(Q××'*'××LINE××'*'××Q)(SKIP,A);
         MASK= XTEMP(Q);
         IF INDEX(MASK,MARKER)^=0 THEN
            DO;
               LONGLINE=' ';
               DO I=1 TO #SW;
                  IF XMASK(I)=MARKER THEN
                     XLONGLINE(I+3)='_';
               END;
               PUT FILE(PRINTER)
               EDIT(LONGLINE)(SKIP(0),A);
            END;
      END;
      PUT FILE(PRINTER) EDIT(AST,TENS,DIGITS)(SKIP,A);
   END PRINTSCREEN;
 %PAGE;
 SAVEMSG:
   PROC(N);
   DCL
      N CHAR(*);
      MESSAGES=MESSAGES+1;
      MSGAREA(MESSAGES)=N;
   END SAVEMSG;
 %PAGE;
 MSGREPLY:
   PROC(N);
   DCL
      N CHAR(*);
      CALL SAVEMSG(N);
      STREAM='';
      STREAM='EWC';
      DO I=1 TO MESSAGES;
         MSGROW=I;
         STREAM=STREAM××STRINGX××MSGAREA(I);
      END;
      REPLYROW,CURSORROW=MESSAGES+1;
      MESSAGES=0;
      STREAM=STREAM××STRINGY××STRINGZ;
      AREA=STREAM;
      CALL WJPF(AREA,FINGER);
      IF RTNCODE^=0 THEN
         CALL BADCODE(1);
      AREA=LOW(LENGTH(AREA));
      REPLY=' ';
      CALL WJGA(AREA,FINGER);
      IF RTNCODE^=0 THEN
         CALL BADCODE(2);
      KEY=SUBSTR(AREA,1,3);
      IF SUBSTR(AREA,4,4)=TERMINATOR× SUBSTR(AREA,8,4)=TERMINATOR THEN
         RETURN;
      REPLY=SUBSTR(AREA,14,UNSPEC(SUBSTR(AREA,12,2)));
   END MSGREPLY;
 %PAGE;
 BADCODE:
   PROC(N);
   DCL
      N FIXED BIN;
      IF N=1 THEN
         PUT FILE(SYSPRINT) EDIT('*** ERROR IN WJPF ***')(SKIP,A);
      ELSE
         PUT FILE(SYSPRINT) EDIT('*** ERROR IN WJGA ***')(SKIP,A);
      PUT FILE(SYSPRINT) EDIT(ERRORMSG)(SKIP,A);
      SIGNAL ERROR;
   END BADCODE;
 %SKIP(3);
   END UUSD;
