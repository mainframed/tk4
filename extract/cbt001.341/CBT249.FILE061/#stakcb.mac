* %GOTO STAKPLS ;  /*
         MACRO
&N       #STAKCB &DSECT=NO
         AIF (K'&N LT 5).GEN
.MSG1 MNOTE 9,'STACK NAME INVALID OR TOO LONG - 4 BYTES OR LESS REQD'
         MEXIT
.GEN     ANOP
         EJECT
*                                                                     *
*                                                                     *
*        S T A C K   C O N T R O L   B L O C K                        *
*                                                                     *
*                                                                     *
         AIF   ('&DSECT' EQ 'YES').DSG
         AIF   ('&DSECT' EQ 'NO').NODSG
         MNOTE 9,'INVALID DSECT SPECIFICATION - MUST BE YES OR NO'
         MEXIT
.DSG     ANOP
&N       DSECT
         AGO   .GENN
.NODSG   ANOP
&N     DS   0F .
.GENN    ANOP
        SPACE
#STK&N DS   F .           POINTER TO CURRENT LINE IN STACK
#TOP&N DS   F .           POINTER TO TOP OF STACK
#END&N DS   F .           POINTER TO END OF STACK
#NOW&N DS   F .           POINTER TO CURRENT FRAME OF STACK
#MVC&N DS   F .           INPUT LINESIZE FOR PUT
#SIZ&N DS   F .           NUMBER OF ENTRIES IN STACK
#SCR&N DS   F .           SCREEN FRAME SIZE IN BYTES
#LPF&N DS   F .           NUMBER OF LINES IN A FRAME
#LEN&N DS   F .           LENGTH OF STACK SPACE IN BYTES
#SNR&N DS   F .           SIGNAL TO NOISE RATIO
#TT1&N DS   CL79 .        TITLE LINE ONE
#TT2&N DS   CL79 .        TITLE LINE TWO
#TT3&N DS   CL79 .        TITLE LINE THREE
#SSS&N DS   0F .          START OF STACK
*
*      E N D   O F   S T A C K   C O N T R O L   B L O C K
*
       MEND
* */ %STAKPLS : ;
*    DECLARE  1  STAKCB  BASED(STAK_PTR) UNAL,
*                2  #STK_N POINTER,
*                2  #TOP_N POINTER,
*                2  #END_N POINTER,
*                2  #NOW_N POINTER,
*                2  #MVC_N FIXED BINARY(31,0),
*                2  #SIZ_N FIXED BINARY(31,0),
*                2  #SCR_N FIXED BINARY(31,0),
*                2  #LPF_N FIXED BINARY(31,0),
*                2  #LEN_N FIXED BINARY(31,0),
*                2  #SNR_N FIXED BINARY(31,0),
*                2  #TT1_N CHAR(79),
*                2  #TT2_N CHAR(79),
*                2  #TT3_N CHAR(79),
*                2  #SSS_N(4096) CHAR(1) ;
*
*    DECLARE #STACK(100) CHAR(79) BASED(#TOP_N);
*
