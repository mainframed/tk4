* %GOTO IOCBPLS; /*
         MACRO
&NAME    IOCB
         EJECT
         SPACE
&NAME    DS    0D .               ------------- <===============I O C B
IOCBFMT  DS    A .                × I O C B   ×
IOCBIMG  DS    A .                × I M A G E ×
IOCBDECB DS    A .                -------------
IOCBCUR  DS    H .                CURSOR OFFSET FROM START OF IMAGE
         SPACE
*                                                                    *
*        I O C B   C O N T R O L   F L A G S                         *
*                                                                    *
         SPACE 2
IOCBFLGS DS    X .            FLAG-S (SERVICE)
IOCBFNWR EQU   X'80'                NO WRITE
IOCBFNRD EQU   X'40'                NO READ
IOCBFW8  EQU   X'C0'                WAIT (CHECK) ONLY
IOCBFNWT EQU   X'20'                NO WAIT
IOCBFCUR EQU   X'10'                CURSOR ADDRESS SPECIFIED
IOCBFNBP EQU   X'04'                BEEP NOT OVERRIDDEN
IOCBFNRR EQU   X'02'                RESTORE NOT OVERRIDDEN
IOCBFNRS EQU   X'01'                RESET NOT OVERRIDDEN
         SPACE 2
IOCBFLGT DS    X .            FLAG-T (TYPE)
IOCBTTSO EQU   X'80'                TERMINAL RUNNING UNDER TSO
IOCBTBSC EQU   X'40'                TERMINAL RUNNING UNDER BTAM
IOCBTDSP EQU   X'20'                DISPLAY  TERMINAL
IOCBTHCY EQU   X'10'                HARDCOPY TERMINAL
IOCBTCMD EQU   X'08'                TERMINAL IS OPERATOR CONSOLE
IOCBTF04 EQU   X'04'
IOCBTF02 EQU   X'02'
IOCBTBAL EQU   X'01'               IOCBLOAD SERVICE SUPPORTED
         SPACE 2
IOCBFLGL DS    X .            FLAG-L (LOG)
IOCBLALL EQU   X'80'               LOG ALL SCREENS
IOCBLNOW EQU   X'40'               LOG CURRENT SCREEN
IOCBLBAD EQU   X'20'               LOG FACILITY BROKEN
IOCBLHEX EQU   X'10'               LOG SCREEN IN HEX
IOCBLDEC EQU   X'08'               LOG SCREEN IN DECIMAL
IOCBLF04 EQU   X'04'               RESERVED
IOCBLF02 EQU   X'02'                  ..
IOCBLF01 EQU   X'01'               RESERVED
         EJECT
*                                                                    *
*        I O C B   C O N T R O L   F L A G S                         *
*                                                                    *
         SPACE 2
IOCBFLGC DS    X .            FLAG-C  (CONTROL)
IOCBCCLR EQU   X'80'               CLEAR SCREEN ON ENTRY
IOCBCDLS EQU   X'40'               DISPLAY LOGO SCREEN
IOCBCTIM EQU   X'20'               DO NOT DISPLAY TIME STAMP
IOCBCINT EQU   X'10'               DO NOT DISPLAY INTERVAL
IOCBCRAO EQU   X'08'               RETURN AID ONLY ON PFK
IOCBCFRA EQU   X'04'               RETURN AID ONLY (FORCE ALL)
IOCBCF02 EQU   X'02'                  ..
IOCBCF01 EQU   X'01'               RESERVED
         SPACE 2
IOCBFLGD DS    X .            FLAG-D  (DELAY)
IOCBDYON EQU   X'80'               IOCBWAIT DELAY TO BE USED
IOCBDFRC EQU   X'40'               FORCE DELAY IF TSO
IOCBDASK EQU   X'20'               PROMPT FOR INTERVAL UPDATE
IOCBDPK2 EQU   X'10'               PASS PFK2 OUT TO PROGRAM
IOCBDLAY EQU   X'08'               FORCE USE OF IOCBWAIT CURRENT
IOCBDF04 EQU   X'04'                  ..
IOCBDF02 EQU   X'02'                  ..
IOCBDF01 EQU   X'01'               RESERVED
         SPACE 2
IOCBFLGM DS    X .            FLAG-M (MISCELLANEOUS)
IOCBMF80 EQU   X'80'               RESERVED
IOCBMF40 EQU   X'40'               RESERVED
IOCBMF20 EQU   X'20'               RESERVED
IOCBMF10 EQU   X'10'               RESERVED
IOCBMF08 EQU   X'08'               RESERVED
IOCBMF04 EQU   X'04'               RESERVED
IOCBMF02 EQU   X'02'               RESERVED
IOCBMF01 EQU   X'01'               RESERVED
         EJECT
*                                                                    *
*        A I D    A N D    S Y M B O L I C    V A L U E S            *
*                                                                    *
         SPACE 2
IOCBAID  DS    X                  AID RETURNED AFTER READ
AIDENT   EQU   X'7D'              ENTER KEY
AIDSYSRQ EQU   X'F0'              SYSTEM REQUEST/TEST REQUEST
AIDPF1   EQU   X'F1'              PF KEY 01
AIDPF2   EQU   X'F2'              PF KEY 02
AIDPF3   EQU   X'F3'              PF KEY 03
AIDPF4   EQU   X'F4'              PF KEY 04
AIDPF5   EQU   X'F5'              PF KEY 05
AIDPF6   EQU   X'F6'              PF KEY 06
AIDPF7   EQU   X'F7'              PF KEY 07
AIDPF8   EQU   X'F8'              PF KEY 08
AIDPF9   EQU   X'F9'              PF KEY 09
AIDPF10  EQU   X'7A'              PF KEY 10
AIDPF11  EQU   X'7B'              PF KEY 11
AIDPF12  EQU   X'7C'              PF KEY 12
AIDPF13  EQU   X'C1'              PF KEY 13
AIDPF14  EQU   X'C2'              PF KEY 14
AIDPF15  EQU   X'C3'              PF KEY 15
AIDPF16  EQU   X'C4'              PF KEY 16
AIDPF17  EQU   X'C5'              PF KEY 17
AIDPF18  EQU   X'C6'              PF KEY 18
AIDPF19  EQU   X'C7'              PF KEY 19
AIDPF20  EQU   X'C8'              PF KEY 20
AIDPF21  EQU   X'C9'              PF KEY 21
AIDPF22  EQU   X'4A'              PF KEY 22
AIDPF23  EQU   X'4B'              PF KEY 23
AIDPF24  EQU   X'4C'              PF KEY 24
AIDPA1   EQU   X'6C'              ATTENTION
AIDPA2   EQU   X'6E'              CANCEL
AIDCAN   EQU   AIDPA2             CANCEL
AIDPA3   EQU   X'6B'              PA3
AIDCLR   EQU   X'6D'              CLEAR
AIDNULL  EQU   X'00'              NULL INPUT SIGNAL AID
AIDNOP   EQU   X'60'              NULL INPUT SIGNAL AID
         SPACE 2
IOCBWCC  DS    X                  WRITE CONTROL CHARACTER
IOCBWBP  EQU   X'04'              BEEP
IOCBWRR  EQU   X'02'              WCC RESTORE
IOCBWRS  EQU   X'01'              WCC RESET MDT
IOCBRSV1 DS    XL2 .              RESERVED FOR FUTURE USE
IOCBISWK DS    0CL8 .
IOCBFWDW DS    F .                TIMESTAMP WORK AREA
IOCBPSGN DS    X .                   ..      ..   ..
IOCBRSV2 DS    XL3 .
         EJECT
IOCBTDCB DS    F .                TDCB POINTER
IOCBLOG  DS    F .                LOG WORK AREA POINTER
IOCBWAIT DS    F .                DELAY SERVICE COUNTER
IOCBTERM DS    0CL12 .            TERMINAL TYPE WORK AREA
IOCBROWS DS    F .                ROWS IN DISPLAY
IOCBCOLS DS    F .                COLS IN DISPLAY (LINESIZE)
IOCBXBUF DS    F .                TGET EXTRA BUFFER
IOCBCTRL DS    XL4 .                 ..      ..   ..
IOCBTIME DS    CL24 .             TIMESTAMP WORK AREA
IOCBNAME DS    CL8 .              NAME OF CURRENT MONITOR
IOCBSHOW DS    CL11 .            INTERVAL DISPLAY AREA
IOCBITVL DS    CL12 .
IOCBSSTH DS    CL5 .              INTERVAL WORK    AREA
IOCBEND  DS    CL8 .              DYNAMIC INPUT SCRATCH AREA
IOCBLOAD DS    F .                SERVICE ROUTINE ADDRESS
IOCBTEST DS    F .                CONTROL ROUTINE ADDRESS
         DS    0D .
STAMPLEN EQU   IOCBEND-IOCBCTRL
         SPACE 3
         MEND
* **/
1
* %IOCBPLS: ;
*/*                                                                 */
*/*                                                                 */
*/*     P L / 1         I O C B    D E F I N I T I O N              */
*/*                                                                 */
*/*                                                                 */
* DCL 1 IOCB,
*    2  IOCBFMT     PTR,                /* FORMAT STRING POINTER    */
*    2  IOCBIMG     PTR,                /* IMAGE ARRAY POINTER      */
*    2  IOCBDECB    PTR,                /* IO DECB POINTER          */
*    2  IOCBCUR     FIXED BINARY(15,0)   INIT(0),
*                                       /* -CURSOR OFFSET IN IMAGE  */
*                                       /*                          */
*                                       /*                          */
*    2  IOCBFLGS,   /*             FLAG-S (SERVICE)                 */
*       3  IOCBFNWR BIT(1) INIT('0'B),/*NO WRITE                    */
*       3  IOCBFNRD BIT(1) INIT('0'B),/*NO READ                     */
*       3  IOCBFW8  BIT(1) INIT('0'B),/*WAIT (CHECK) ONLY           */
*       3  IOCBFNWT BIT(1) INIT('0'B),/*NO WAIT                     */
*       3  IOCBFCUR BIT(1) INIT('0'B),/*CURSOR ADDRESS SPECIFIED    */
*       3  IOCBFNBP BIT(1) INIT('1'B),/*BEEP NOT OVERRIDDEN         */
*       3  IOCBFNRR BIT(1) INIT('1'B),/*RESTORE NOT OVERRIDDEN      */
*       3  IOCBFNRS BIT(1) INIT('1'B),/*RESET NOT OVERRIDDEN        */
*    2  IOCBFLGT,   /*             FLAG T (TYPE)                    */
*       3  IOCBTTSO BIT(1) INIT('0'B),/*TERMINAL RUNNING UNDER TSO  */
*       3  IOCBTBSC BIT(1) INIT('0'B),/*TERMINAL RUNNING UNDER BTAM */
*       3  IOCBTDSP BIT(1) INIT('0'B),/*DISPLAY  TERMINAL           */
*       3  IOCBTHCY BIT(1) INIT('0'B),/*HARDCOPY TERMINAL           */
*       3  IOCBTCMD BIT(1) INIT('0'B),/*TERMINAL IS OPERATOR CONS   */
*       3  IOCBTF04 BIT(1) INIT('0'B),/*                            */
*       3  IOCBTF02 BIT(1) INIT('0'B),/*                            */
*       3  IOCBTF01 BIT(1) INIT('0'B),/*                            */
*    2  IOCBFLGL,   /*             FLAG-L (LOG)                     */
*       3  IOCBLALL BIT(1) INIT('0'B),/*LOG ALL SCREENS             */
*       3  IOCBLNOW BIT(1) INIT('0'B),/*LOG CURRENT SCREEN          */
*       3  IOCBLBAD BIT(1) INIT('0'B),/*LOG FACILITY BROKEN         */
*       3  IOCBLHEX BIT(1) INIT('0'B),/*LOG SCREEN IN HEX           */
*       3  IOCBLDEC BIT(1) INIT('0'B),/*LOG SCREEN IN DECIMAL       */
*       3  IOCBLF04 BIT(1) INIT('0'B),/*RESERVED                    */
*       3  IOCBLF02 BIT(1) INIT('0'B),/*                            */
*       3  IOCBLF01 BIT(1) INIT('0'B),/*RESERVED                    */
1
*/*                                                                 */
*/*                                                                 */
*/*     P L / 1         I O C B    D E F I N I T I O N              */
*/*                                                                 */
*/*                                                                 */
*    2  IOCBFLGC,   /*             FLAG-C  (CONTROL)                */
*       3  IOCBCCLR BIT(1) INIT('1'B),/*CLEAR SCREEN ON ENTRY       */
*       3  IOCBCDLS BIT(1) INIT('0'B),/*DISPLAY LOGO SCREEN         */
*       3  IOCBCTIM BIT(1) INIT('0'B),/*DO NOT DISPLAY TIME STAMP   */
*       3  IOCBCINT BIT(1) INIT('0'B),/*DO NOT DISPLAY INTERVAL     */
*       3  IOCBCRAO BIT(1) INIT('1'B),/*RETURN AID ONLY ON PFK      */
*       3  IOCBCFRA BIT(1) INIT('0'B),/*RETURN AID ONLY (FORCE ALL) */
*       3  IOCBCF02 BIT(1) INIT('0'B),/*                            */
*       3  IOCBCF01 BIT(1) INIT('0'B),/*RESERVED                    */
*    2  IOCBFLGD,   /*             FLAG-D  (DELAY)                  */
*       3  IOCBDYON BIT(1) INIT('1'B),/*IOCBWAIT DELAY TO BE USED   */
*       3  IOCBDFRC BIT(1) INIT('0'B),/*FORCE DELAY IF TSO          */
*       3  IOCBDASK BIT(1) INIT('0'B),/*PROMPT FOR INTERVAL UPDATE  */
*       3  IOCBDPK2 BIT(1) INIT('0'B),/*PASS PFK2 OUT TO PROGRAM    */
*       3  IOCBDLAY BIT(1) INIT('0'B),/*FORCE USE OF IOCBWAIT CURR  */
*       3  IOCBDF04 BIT(1) INIT('0'B),/*                            */
*       3  IOCBDF02 BIT(1) INIT('0'B),/*                            */
*       3  IOCBDF01 BIT(1) INIT('0'B),/*RESERVED                    */
*    2  IOCBFLGM,   /*             FLAG-M (MISCELLANEOUS)           */
*       3  IOCBMF80 BIT(1),    /*       RESERVED                    */
*       3  IOCBMF40 BIT(1),    /*       RESERVED                    */
*       3  IOCBMF20 BIT(1),    /*       RESERVED                    */
*       3  IOCBMF10 BIT(1),    /*       RESERVED                    */
*       3  IOCBMF08 BIT(1),    /*       RESERVED                    */
*       3  IOCBMF04 BIT(1),    /*       RESERVED                    */
*       3  IOCBMF02 BIT(1),    /*       RESERVED                    */
*       3  IOCBMF01 BIT(1),    /*       RESERVED                    */
1
*/*                                                                 */
*/*                                                                 */
*/*     P L / 1         I O C B    D E F I N I T I O N              */
*/*                                                                 */
*/*                                                                 */
*    2  IOCBAID     BIT(8),    /*   AID RETURNED AFTER READ         */
*    2  IOCBWCC,    /*              WRITE CONTROL CHARACTER         */
*       3  IOCBWBP  BIT(1),    /*       BEEP                        */
*       3  IOCBWRR  BIT(1),    /*       WCC RESTORE                 */
*       3  IOCBWRS  BIT(1),    /*       WCC RESET MDT               */
*       3  IOCBRSV1 BIT(5),    /*       RESERVED FOR FUTURE USE     */
*    2  IOCBISWK ,  /*                                              */
*       3  IOCBFWDW FIXED BINARY(31,0), /*   TIMESTAMP              */
*       3  IOCBPSGN CHAR(1),            /*            WORK          */
*       3  IOCBRSV2 CHAR(3) ,           /*                AREA      */
*    2  IOCBTDCB    FIXED BINARY(31,0), /*   TDCB POINTER           */
*    2  IOCBLOG     FIXED BINARY(31,0), /*   LOG WORK AREA POINTER  */
*    2  IOCBWAIT    FIXED BINARY(31,0), /*   IO SERVICE DELAY TIME  */
*    2  IOCBTERM,                       /*   TERMINAL CONTROL AREA  */
*       3  IOCBROWS FIXED BINARY(31,0), /*   ROWS IN DISPLAY        */
*       3  IOCBCOLS FIXED BINARY(31,0), /*   COLUMNS IN DISPLAY     */
*       3  IOCBXBUF FIXED BINARY(31,0), /*   EXTERNAL TGET BUFFER   */
*    2  IOCBCTRL    CHAR(4),            /*   CONTROL FIELD          */
*    2  IOCBTIME    CHAR(24),           /*   TIMESTAMP              */
*    2  IOCBNAME    CHAR(8),            /*   CURRENT DISPLAY NAME   */
*    2  IOCBSHOW    CHAR(11),           /*   ACTION WORD FIELD      */
*    2  IOCBITVL    CHAR(12),           /*   INTERVAL CONSTANT      */
*    2  IOCBSSTH    CHAR(5),            /*   INTERVAL VALUE         */
*    2  IOCBEND     CHAR(8),            /*   END OF IOCB PROPER     */
*    2  IOCBLOAD    PTR,                /*   SERVICE ROUTINE PTR    */
*    2  IOCBTEST    BIT(32)  ;          /*                          */
*/*                                                                 */
*/*                                                                 */
*/*     E N D    O F    I O C B    D E F I N I T I O N              */
*/*                                                                 */
*/*                                                                 */
1
*/*                                                                 */
*/*                                                                 */
*/*     3 2 7 7   A I D   T Y P E    D E F I N I T I O N S          */
*/*                                                                 */
*/*                                                                 */
*   DECLARE AIDNULL  BIT(8) INIT('00000000');    /* 00 NO INPUT     */
*   DECLARE AIDENT   BIT(8) INIT('01111101');    /* 7D ENTER KEY    */
*   DECLARE AIDPF1   BIT(8) INIT('11110001');    /* F1 PF KEY 01    */
*   DECLARE AIDPF2   BIT(8) INIT('11110010');    /* F2 PF KEY 02    */
*   DECLARE AIDPF3   BIT(8) INIT('11110011');    /* F3 PF KEY 03    */
*   DECLARE AIDPF4   BIT(8) INIT('11110100');    /* F4 PF KEY 04    */
*   DECLARE AIDPF5   BIT(8) INIT('11110101');    /* F5 PF KEY 05    */
*   DECLARE AIDPF6   BIT(8) INIT('11110110');    /* F6 PF KEY 06    */
*   DECLARE AIDPF7   BIT(8) INIT('11110111');    /* F7 PF KEY 07    */
*   DECLARE AIDPF8   BIT(8) INIT('11111000');    /* F8 PF KEY 08    */
*   DECLARE AIDPF9   BIT(8) INIT('11111001');    /* F9 PF KEY 09    */
*   DECLARE AIDPF10  BIT(8) INIT('01111010');    /* 7A PF KEY 10    */
*   DECLARE AIDPF11  BIT(8) INIT('01111011');    /* 7B PF KEY 11    */
*   DECLARE AIDPF12  BIT(8) INIT('01111100');    /* 7C PF KEY 12    */
*   DECLARE AIDPF13  BIT(8) INIT('11000001');    /* C1 PF KEY 13    */
*   DECLARE AIDPF14  BIT(8) INIT('11000010');    /* C2 PF KEY 14    */
*   DECLARE AIDPF15  BIT(8) INIT('11000011');    /* C3 PF KEY 15    */
*   DECLARE AIDPF16  BIT(8) INIT('11000100');    /* C4 PF KEY 16    */
*   DECLARE AIDPF17  BIT(8) INIT('11000101');    /* C5 PF KEY 17    */
*   DECLARE AIDPF18  BIT(8) INIT('11000110');    /* C6 PF KEY 18    */
*   DECLARE AIDPF19  BIT(8) INIT('11000111');    /* C7 PF KEY 19    */
*   DECLARE AIDPF20  BIT(8) INIT('11001000');    /* C8 PF KEY 20    */
*   DECLARE AIDPF21  BIT(8) INIT('11001001');    /* C9 PF KEY 21    */
*   DECLARE AIDPF22  BIT(8) INIT('01001010');    /* 4A PF KEY 22    */
*   DECLARE AIDPF23  BIT(8) INIT('01001011');    /* 4B PF KEY 23    */
*   DECLARE AIDPF24  BIT(8) INIT('01001100');    /* 4C PF KEY 24    */
*   DECLARE AIDPA1   BIT(8) INIT('01101100');    /* 6C ATTENTION    */
*   DECLARE AIDPA2   BIT(8) INIT('01101110');    /* 6E CANCEL       */
*   DECLARE AIDPA3   BIT(8) INIT('01101011');    /* 6B PA3          */
*   DECLARE AIDCLR   BIT(8) INIT('01101101');    /* 6D CLEAR        */
1
