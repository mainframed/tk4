++USERMOD(BF00021).
++VER (Z038) FMID(HOZ1202) PRE(UZ52797)  /* ***LEVEL SET***
    THIS MODIFICATION IMPLEMENTS THE BATCH ACCESS OF INFO/MGMT WHICH
    WAS OMITTED BY IBM IN ITS DEVELOPMENT.  THE FUNCTIONS ARE:
       1. ELIMINATE CHECK FOR SCREEN SIZE IN BLGI2TI.
       2. ON ANY FORCED TGET RESPOND IF PANEL IS NOT IN TABLE RESPOND
          WITH ';PR S U,2,INFORPT'. IF PANEL IS IN TABLE THEN DO A
          GETLINE MACRO AND PUT REPLY BACK INTO BUFFER.  IF GETLINE
          RETURNS ERROR OR EOF THEN REPLY WITH ';QUIT'.  THE TABLE IS
          AS OF NOW:
                         BLG1M234 (PRINT COMPLETE)
                         BLG1M212 (REPORT COMPLETE)
                         BLG1M410 (PURGE VERIFICATION)
    */.
++ZAP (BLGI2TI).
  NAME   BLGI2TI
*
**    THIS ZAP TURNS OFF THE GTSIZE CHECK FOR ATLEAST 3270 SCREEN
**    SIZE
*
  VER A0 4740        TEST FOR # ROWS < 24
  REP A0 4700        IGNORE TEST
  VER A8 47B0        TEST FOR # COLS >= 80
  REP A8 47F0        MARK ALWAYS TRUE
++ZAP (BLGI2TRW).
  EXPAND BLGI2TRW(336)
  NAME    BLGI2TRW
*
**    THIS ZAP RETURNS THE STRING ';PR S U,2,INFORPT' ON ANY TGET WITH
**    RETURNED BUFFER LENGTH IS ZERO, UNLESS THE SCREEN IS BLG1M234
**    OR BLG1M212 OR BLG1M410
*
  VER 05AC 5840,B054     TEST FOR ORIGINAL INST
  VER 0684 0000,0120     TEST FOR ORIGINAL AREA LENGTH
  VER 06C0 0000          TEST FOR NEW PATCH AREA
  REP 05AC 47F0,C6A4        B  PATCH AREA
  REP 0684 0000,013C     SET NEW DSA LENGTH
  REP 06C0 5840,B054        L 4,84(11)      ACCESS TBUF (OVERLAID IN)
  REP 06C4 1266             LTR 6,6         LENGTH ZERO?
  REP 06C6 4770,C594        BNZ RETURN      IF NOT THEN RETURN
  REP 06CA 5810,5004        L 1,4(5)        CYCLE THROUGH
  REP 06CE 5820,1000        L 2,0(1)           BLOCKS TO GET
  REP 06D2 5830,2008        L 3,8(2)             INPUT BUFFER OF SCREEN
  REP 06D6 D20A,3000,C7AC * MVC 0(11,3),A   MOVE IN 'QUIT' RESPONSE
  REP 06DC 4160,000B        LA 6,11         SET LENGTH OF 'QUIT'
  REP 06E0 BFFF,4010        ICM 15,15,16(4) GET OUT BUF ADDR
  REP 06E4 4780,C594        BZ RETURN       IF ZERO SKIP
  REP 06E8 D507,F01E,C7C8   CLC 30(8,15),ENTER IS THIS BLG0ENTR
  REP 06EE 4780,C702        BE  GET         IF SO THEN CONSIDER IN TAB
  REP 06F2 41E0,C7D0        LA  14,TABLE    POINT AT TABLE
  REP 06F6 9500,E000   LOOP CLI 0(14),0     END OF TABLE?
  REP 06FA 4780,C6F4        BE  PRINT       YES SO PRINT SCREEN
  REP 06FE D507,F016,E000   CLC 22(8,15),0(14) CHECK AGAINST TABLE
  REP 0704 4780,C702        BE GET          IF FOUND THEN DO GETLINE
  REP 0708 41E0,E008        LA 14,8(14)     GET NEXT ENTRY
  REP 070C 47F0,C6DA        B   LOOP        TRY AGAIN
*
**     PUT ';PR S U,2,INFORPT' COMMAND IN BUFFER
*
  REP 0710 4160,0017  PRINT LA 6,23         SET LENGHT OF 'PRINT'
  REP 0714 D20F,3007,C7B7 * MVC 7(16,3),D   MOVE IN 'PRINT'
  REP 071A 47F0,C594        B  RETURN       ALL DONE
*
**     DO GETLINE MACRO AND PUT RESPONSE IN BUFFER
*
  REP 071E 5810,2004  GET   L  1,4(2)       SET R1->CPPL
  REP 0722 58E0,1004        L  14,4(1)      GET UPT ADDR
  REP 0726 58F0,100C        L  15,12(1)     GET ECT ADDRE
  REP 072A 4110,B120        LA  1,IOPL      GET ADDR OF WORKAREA
  REP 072E 50E0,1000        ST 14,0(1)      SAVE ADDR OF UPT
  REP 0732 50F0,1004        ST 15,4(1)      SAVE ADDR OF ECT
  REP 0736 41E0,B138        LA  14,ECB      POINT AT ECB
  REP 073A 50E0,1008        ST  14,8(1)     SAVE ADDR OF ECB
  REP 073E 41E0,B130        LA  14,GTPB     POINT AT GTPB
  REP 0742 50E0,100C        ST  14,12(1)    SAVE ADDR OF GTPB
  REP 0746 D707,B130,B130   XC  GTPB(8),GTPB
  REP 074C 9280,B132        MVI GTPB+2,X'80'  SET FLAGS
  REP 0750 58F0,0010        L   15,16       GET CVT ADDR
  REP 0754 9180,F15C        TM  348(15),X'80'  IS GETLINE LOADED
  REP 0758 47E0,C74A        BNO IKJ@0001    NO BRANCH TO LINK
  REP 075C 58F0,F15C        L   15,348(15)  YES BALR TO GETLINE
  REP 0760 05EF             BALR 14,15      DO GETLINE
  REP 0762 47F0,C762        B   IKJ$0001    ALL DONE
  REP 0766 0700      IKJ@0001 NOPR 0
  REP 0768 45F0,C760        BAL 15,*+20   BRANCH AROUND CONSTANTS
  REP 076C 0000,0000        DC  A(*+8)      CANT ZAP RELO ADDR
  REP 0770 0000,0000        DC  F'0'        DCB ADDR PARM
  REP 0774 C9D2,D1C7,C5E3,D340     DC C'IKJGETL'
  REP 077C 0000  0A06       SVC 6           DONT PUT IN SVC
  REP 077E 49F0,C7A6 IKJ$0001 CH 15,RC      SEE IF END OF CLIST
  REP 0782 4780,C702        BE  GET         IF SO REISSUE GETLINE
  REP 0786 59F0,C7A8        C   15,MARC     CHECK RETURN CODE
  REP 078A 4720,C594        BH  RETURN      RETURN IF BAD
  REP 078E 58F0,B134        L   15,GTPB+4   GET ADDR OF BUFFER
  REP 0792 4810,F000        LH  1,0(15)     GET LENGTH OF BUFFER
  REP 0796 5B10,C7A8        S   1,MARC      CHECK LENGTH >4
  REP 079A 47D0,C594        BNP RETURN      THEN RETURN QUIT
  REP 079E 0610             BCTR  1,0       GET MACHINE LENGTH
  REP 07A0 4410,C7A0        EX   1,MOVEIT   MOVE IN DATA
  REP 07A4 4160,1007        LA   6,7(1)     MOVE IN LENGTH
  REP 07A8 181F             LR   1,15       MOVE IN DATA
  REP 07AA 4800,1000        LH   0,0(1)     GET LENGTH
  REP 07AE BF08,C7C7        ICM  0,8,SUBPOOL GET SUBPOOL VALUE
  REP 07B2 4110,1000        LA   1,0(1)     CLEAR TOP BYTE
  REP 07B6 0A0A             SVC  10         FREE RESPONSE
  REP 07B8 47F0,C594        B    RETURN     AND RETURN
  REP 07BC D200,3006,F004 MOVEIT MVC 6(0,3),4(15)  MOVE IN DATA
  REP 07C2 0010        RC   DC   H'16'      RC FOR END OF CLIST
  REP 07C4 0000,0004   MARC DC   F'4'       CHECK FOR RC AND LEN
  REP 07C8 7D5C,F711,5CF6,5ED8  A  DC X'7D5CF7115CF6',C';QUIT'
  REP 07D0 E4C9,E3
  REP 07D3 D7D9,40E2,40E4,6BF2  D  DC C'PR S U,2,INFORPT'
  REP 07DB 6BC9,D5C6,D6D9,D7E3
  REP 07E3 01                   SUBPOOL DC X'01'
  REP 07E4 C2D3,C7F0,C5D5,E3D9  ENTER    DC  C'BLG0ENTR'   MAIN MENU
  REP 07EC C2D3,C7F1,D4F2,F3F4  TABLE    DC  C'BLG1M234'   PRINT END
  REP 07F4 C2D3,C7F1,D4F2,F1F2           DC  C'BLG1M212'   REPORT END
  REP 07FC C2D3,C7F1,D4F4,F1F0           DC  C'BLG1M410'   PURGE VERIFY
  REP 0804 0000,0000,0000,0000           DC  XL8'00'  END OF TABLE
