//GUYSRC  JOB (U32048050058,17F),GUY,CLASS=E,MSGCLASS=N,NOTIFY=GUY
/*ROUTE PRINT LOCAL
// EXEC ASMFCL,MAC1='SYS1.AMODGEN'
SFT8MVXX CSECT
***********************************************************************
*
*        THIS PROGRAM'S PURPOSE IS FETCH AN SRC FROM THE NORMAL SRC
*        LIBRARY INTO AN SPF-COMPATIBLE LIBRARY SO THAT THE SRCS CAN
*        EDITED.  ALSO CAN BE WORKED IN THE REVERSE ORDER.
*
*
*
*        ****
*              THIS PROGRAM IS A TSO COMMAND PROCESSOR
*                                                      ****
*
*              CURRENT SYNTAX
*
*                                        ×-       -×
*               GETSRC     MEMBER(MEM1)  ×,PUTBACK ×
*                                        ×-       -×
*
*
*                              WHERE MEM1 IS THE SRC NAME
*
*
*
*
*
*                                       GUY L. ALBERTELLI
*                                       BFGOODRICH
*                                       500 S. MAIN STREET
*                                       AKRON, OHIO    44318
*
*                                       216/374-4071
*
*
*
***********************************************************************
         SAVE  (14,12),,GETOSRC_&SYSDATE_&SYSTIME
         LR    R12,R15             SET BASE REG
         USING SFT8MVXX,R12
         ST    R13,SAVE+4          CHAIN SAVE AREAS
         LA    R13,SAVE            POINT TO SAVE AREA
*
**       SAVE CPPL ADDRESS
*
         LR    R11,R1
         USING CPPL,R11
*
**       PARSE PARM LIST TO CHECK FOR OPTIONS
**             1. SETUP PPL
**             2. CALL PARSE
*
         LA    R3,MYPPL            POINT PPL
         USING PPL,R3              SETUP ADDRESSABILITY
         MVC   PPLUPT,CPPLUPT      MOVE THE UPT ADDR
         MVC   PPLECT,CPPLECT      MOVE THE ECT ADDR
         MVC   PPLCBUF,CPPLCBUF    MOVE THE BUFFER POINTER
         LR    R1,R3               MOVE INTO PROPER REGISTER
         CALLTSSR EP=IKJPARS
         LTR   R15,R15
         BZ    *+6
         DC    H'0'
         L     R8,ANSPTR           GET ANSWER AREA
         USING IKJPARMD,R8         SETUP ADDRESSABILITY
*
**       MOVE MEMBER NAME
*
         L     R1,FRSMEM           GET ADDR OF FIRST MEMBER
         LTR   R1,R1
         BZ    ERROR4              GIVE ERROR MESSAGE
         LH    R2,FRSMEM+4         GET LENGTH
         BCTR  R2,0                GET MACHINE LENGTH
         LA    R3,MEMONE           POINT TO OUTPUT FIELD
         EX    R2,MEMOVE           MOVE THE MEMBER'
*
**       SEE WHETHER PUT BACK WAS SPECIFIED
*
         CLI   PUTBACK+1,0         WAS IT SPECIFIED
         BE    NOPE
         EJECT
*
**       OPEN FILE FOR PUTBACK STATE
*
         OPEN  (BLGMSRC,(INPUT),BLGSRC,(OUTPUT))
         TM    BLGSRC+DCBOFLG,X'10'
         BZ    ERROR1
*
**       ACCESS THE MEMBER
*
         FIND  BLGMSRC,MEMONE,D    LOOK FOR MEMBER
         LTR   R15,R15             SEE IF FOUND
         BNZ   ERROR2
*
**       GET THE MEMBER
*
         READ  FIRSTONE,SF,BLGMSRC,SKELTON,MF=E
         CHECK FIRSTONE
*
**       CREATE THE MEMBER
*
         WRITE SECONE,SF,BLGSRC,SKELTON,MF=E
         CHECK SECONE
*
**       STOW THE MEMBER
*
         MVC   STOLIST(8),MEMONE
         STOW  BLGSRC,STOLIST,R
         CH    R15,=H'8'
         BH    ERROR3
         B     CLOSE               ALL DONE
         EJECT
*
**       OPEN FILE FOR NORMAL STATE
*
NOPE     OPEN  (BLGSRC,(INPUT),BLGMSRC,(OUTPUT))
         TM    BLGSRC+DCBOFLG,X'10'
         BZ    ERROR1
*
**       ACCESS THE MEMBER
*
         FIND  BLGSRC,MEMONE,D     LOOK FOR MEMBER
         LTR   R15,R15             SEE IF FOUND
         BNZ   ERROR2
*
**       GET THE MEMBER
*
         READ  FIRSTONE,SF,BLGSRC,SKELTON,MF=E
         CHECK FIRSTONE
*
**       CREATE THE MEMBER
*
         WRITE SECONE,SF,BLGMSRC,SKELTON,MF=E
         CHECK SECONE
*
**       STOW THE MEMBER
*
         MVC   STOLIST(8),MEMONE
         STOW  BLGMSRC,STOLIST,R
         CH    R15,=H'8'
         BH    ERROR3
*
**       CLOSE AND EXIT
*
CLOSE    CLOSE (BLGSRC,,BLGMSRC)
*
**       EXIT
*
EXIT     DS    0H
*
**       FREE STORAGE
*
         IKJRLSA ANSPTR            FREE STORAGE
         L     R13,4(R13)
         RETURN (14,12),RC=0
         EJECT
*
**       ERROR MESSAGE ROUTINES
*
ERROR1   LA    R8,EXIT             SET RETURN
         LA    R2,ERR1             POINT AT ERROR MESSAGE
         B     ERRMSG              GO AND ISSUE MESSAGE
ERROR2   LA    R8,CLOSE            SET RETURN
         LA    R2,ERR2             POINT AT ERROR MESSAGE
         B     ERRMSG              GO AND ISSUE MESSAGE
ERROR3   LA    R8,CLOSE            SET RETURN
         LA    R2,ERR3             POINT AT ERROR MESSAGE
         B     ERRMSG              GO AND ISSUE MESSAGE
ERROR4   LA    R8,CLOSE            SET RETURN
         LA    R2,ERR4             POINT AT ERROR MESSAGE
         B     ERRMSG              GO AND ISSUE MESSAGE
*
**       ISSUE ERROR MESSAGE
*
ERRMSG   DS    0H
         L     R3,CPPLUPT          GET UPT ADDRESS
         L     R4,CPPLECT          GET ECT ADDRESS
         PUTLINE PARM=OUTLIN,UPT=(R3),ECT=(R4),                        X
               OUTPUT=((R2),TERM,SINGLE,DATA),MF=(E,OUTIOPL)
         BR    R8
         EJECT
*
**       EXECUTED INSTRUCTIONS
*
MEMOVE   MVC   0(0,R3),0(R1)       MOVE IN MEMBER NAME
         EJECT
*
**       DSECT
*
         PRINT NOGEN
         CVT   DSECT=YES
         PRINT GEN
         IKJCPPL
         IKJIOPL
         IKJPPL
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
SFT8MVXX CSECT
*
**       DATA
*
SAVE     DC    18F'0'
MYPPL    DC    A(0,0,MYECB,PARMS,ANSPTR,0,0)
MYECB    DC    A(0)                ECB
ANSPTR   DC    A(0)
MEMONE   DC    CL8' '
STOLIST  DC    CL8' ',AL4(0)
DCBOFLG  EQU   48
         WRITE SECONE,SF,0,0,MF=L
         READ  FIRSTONE,SF,0,0,MF=L
BLGSRC   DCB   BLKSIZE=600,LRECL=600,DSORG=PO,MACRF=(R,W),             X
               RECFM=F,DDNAME=BLGSRC
BLGMSRC  DCB   BLKSIZE=600,LRECL=60,DSORG=PO,MACRF=(R,W),              X
               RECFM=FB,DDNAME=BLGMSRC
OUTLIN   PUTLINE OUTPUT=(0,TERM,SINGLE,DATA),MF=L
OUTIOPL  DS    4F
         EJECT
*
**       ERROR MESSAGES
*
ERR1     DC    AL2(ERR1E-*,0),C'BLGSRC DID NO OPEN'
ERR1E    EQU   *
ERR2     DC    AL2(ERR2E-*,0),C'MEMBER NOT FOUND'
ERR2E    EQU   *
ERR3     DC    AL2(ERR3E-*,0),C'STOW FAILED'
ERR3E    EQU   *
ERR4     DC    AL2(ERR4E-*,0),C'MEMBER PARAMETER MUST BE USED'
ERR4E    EQU   *
         EJECT
*
**       FORMAT OF COMMAND
*
         PRINT NOGEN
PARMS    IKJPARM DSECT=IKJPARMD
MEMBERS  IKJKEYWD
           IKJNAME 'MEMBER',SUBFLD=MEMFLD
PUTBACK  IKJKEYWD
           IKJNAME 'PUTBACK'
*
*
MEMFLD   IKJSUBF
FRSMEM     IKJIDENT 'FIRST MEMBER',                                    X
               PROMPT='MEMBER NAME',                                   X
               MAXLNTH=8,FIRST=ALPHA,OTHER=ALPHANUM
*
*
         IKJENDP
SKELTON  DS    0F,XL600
         END
//LKED.SYSLMOD DD DSN=SYS1.CMDLIB(GETSRC),DISP=SHR,UNIT=,SPACE=
