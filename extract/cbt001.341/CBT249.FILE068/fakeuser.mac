//GUYUSER JOB (U32048050058,17F),GUY,CLASS=E,MSGCLASS=N,NOTIFY=GUY
/*ROUTE PRINT LOCAL
// EXEC ASMFCL,MAC1='SYS1.AMODGEN'
SFT8MV92 CSECT
***********************************************************************
*
*        THIS PROGRAM FUNCTIONS ONLY IN A BATCH TMP ENVIRONMENT.  ITS
*        PURPOSE IS TO FILL IN THE PSCB BLOCK TO SIMULATE THE LOGON
*        OF A USERID AND THE UADS DATASET ACCESS.
*
*        CURRENT FUNCTIONS:
*              1.  FILL IN THE USERID AND LENGTH
*                    (USERID = FIRST 7 CHARS OF THE JOBNAME)
*              2.  IF THE OPERAND 'MOUNT' IS SPECIFIED THEN
*                    GRANT THE MOUNT AUTHORITY
*
*        ****
*              THIS PROGRAM IS A TSO COMMAND PROCESSOR
*                                                      ****
*
*              CURRENT SYNTAX
*                            -     -
*                           ×       ×
*               FAKEUSER    × MOUNT ×
*                           ×       ×
*                            -     -
*
*
*
*
***********************************************************************
         SAVE  (14,12),,FAKEUSER_&SYSDATE_&SYSTIME
         LR    R12,R15             SET BASE REG
         USING SFT8MV92,R12
         USING PSA,R0              ADDRESSABILITY FOR AREA
         ST    R13,SAVE+4          CHAIN SAVE AREAS
         LA    R13,SAVE            POINT TO SAVE AREA
         L     R9,PSATOLD          GET OLD TCB
         USING TCB,R9              SETUP ADDRESSABILITY FOR TCB
*
**       SAVE CPPL ADDRESS
*
         LR    R11,R1
         USING CPPL,R11
*
**       PARSE PARM LIST TO CHECK FOR OPTIONS
**             1. SETUP PPL
**             2. CALL PARSE
*
         LA    R3,MYPPL            POINT PPL
         USING PPL,R3              SETUP ADDRESSABILITY
         MVC   PPLUPT,CPPLUPT      MOVE THE UPT ADDR
         MVC   PPLECT,CPPLECT      MOVE THE ECT ADDR
         MVC   PPLCBUF,CPPLCBUF    MOVE THE UPT ADDR
         LR    R1,R3               MOVE INTO PROPER REGISTER
         CALLTSSR EP=IKJPARS
         LTR   R15,R15
         BZ    *+6
         DC    H'0'
         L     R8,ANSPTR           GET ANSWER AREA
         USING IKJPARMD,R8         SETUP ADDRESSABILITY
*
**       VALIDATE THAT THIS IS A BATCH TMP ENVIRONMENT
*
         L     R1,PSAAOLD          GET ASCB ADDR
         L     R1,ASCBTSB-ASCB(R1) GET TSB ADDRESS
         LA    R1,0(R1)            CLEAR TOP BYTE
         LTR   R1,R1               DOES TERMINAL BLOCK EXIST
         BNZ   EXIT                IF SO THEN EXIT  -  TSO TMP ENVIR
*
**       GET CURRENT PSCB BLOCK INTO OUR CORE
*
         L     R0,CPPLPSCB         POINT AT PSCB
         LA    R1,PSCBU-PSCB+L'PSCBU GET LENGTH
         LA    R2,MYPSCB
         LR    R3,R1               GET LENGTH
         MVCL  R2,R0               COPY PSCB
         LA    R10,MYPSCB
         USING PSCB,R10            SETUP ADDRESSABILITY FOR PSCB
*
**       SET USERID AND LENGTH INTO PSCB
*
         L     R1,TCBTIO           GET TIOT ADDRESS
         MVC   PSCBUSER(7),0(R1)   MOVE IN JOBNAME FROM TIOT
         LA    R1,7                MAX LENGTH
         LA    R2,PSCBUSER+6       LAST CHARACTER
USERLN   CLI   0(R2),C' '          CHECK FOR BLANK
         BNE   USERLN1             IF NOT THEN END OF ID
         BCTR  R2,0                DECREMENT ADDRESS
         BCT   R1,USERLN           IF NOT LAST THEN TRY AGAIN
USERLN1  STC   R1,PSCBUSRL         SAVE LENGTH
*
**       HANDLE MOUNT ATTRIBUTE
*
         CLI   MOUNT+1,1           WAS MOUNT SPECIFIED
         BNE   NOMOUNT             NOT SPECIFIED
         OI    PSCBATR1,PSCBVMNT   SET MOUNT AUTHORITY
NOMOUNT  DS    0H
*
**       MOVE DATA BACK INTO ORIGINAL PSCB
*
         L     R2,CPPLPSCB         GET REAL PSCB
         LA    R3,PSCBU-PSCB+L'PSCBU GET LENGTH
         LA    R4,MYPSCB           GET MY COPY (UPDATED)
         LR    R5,R3               COPY LENGTH
         L     R0,TCBRBP
         USVC  GETKEY,KEY=0
         MVCL  R2,R4               MOVE IN COPY
*        L     R1,PSAAOLD          GET ADDRESS OF ASCB
*        ST    R7,ASCBTSB-ASCB(R1) SAVE ADDRESS OF TSB
         L     R0,TCBRBP
         USVC  RESTKEY
*
**       EXIT
*
EXIT     DS    0H
*
**       FREE STORAGE
*
         IKJRLSA ANSPTR            FREE STORAGE
         L     R13,4(R13)
         RETURN (14,12),RC=0
         EJECT
*
**       DSECT
*
         PRINT NOGEN
         IHAPSA
         CVT    DSECT=YES
         IHAASCB
         IKJTCB
         PRINT GEN
         IKJTSB
         IKJPSCB
         IKJCPPL
         IKJPPL
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
SFT8MV92 CSECT
*
**       DATA
*
SAVE     DC    18F'0'
MYPPL    DC    A(0,0,MYECB,PARMS,ANSPTR,0,0)
MYECB    DC    A(0)                ECB
ANSPTR   DC    A(0)
MYPSCB   DC    ((PSCBU-PSCB+L'PSCBU+3)/4)A(0)
PARMS    IKJPARM DSECT=IKJPARMD
MOUNT    IKJKEYWD
           IKJNAME 'MOUNT'
         IKJENDP
         END
//LKED.SYSLMOD DD DSN=SYS1.CMDLIB(FAKEUSER),DISP=SHR,UNIT=,SPACE=
