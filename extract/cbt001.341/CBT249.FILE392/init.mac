INIT     QSTART T='QUEUE COMMAND - INITIALIZATION ROUTINES',      TEC01C
               $PCE,          NEEDED FOR NJE $HCT                 TEC01C
               $JOE,                                              TEC01C
               $JOT,                                              TEC01C
               $KIT,                                              TEC01C
               $DAS,                                              TEC01C
               $XECB,                                             TEC01C
               $SCAT,                                             TEC01C
               $LCK,                                              TEC01C
               $BUFFER,                                           TEC01C
               $JCT,                                              TEC01C
               $CAT,                                              TEC01C
               $TAB,                                              TEC01C
               $QSE,                                              TEC01C
               $PDDB,                                             TEC01C
               $IOT,                                              TEC01C
               $TGM,                                              TEC01C
               $JQE,                                              TEC01C
               $HCT,                                              TEC01C
               $MIT,                                              TEC01C
               $SVT,                                              TEC01C
               CVT,                                               TEC01C
               JESCT,                                             TEC01C
               SSCT,                                              TEC01C
               ASVT,                                              TEC01C
               $HASPEQU                                           TEC01
***********************************************************************
* RNB CHANGES:                                                        *
*            (3) RNB03 - IF RACF OPTION IS SET, AND IF AUTHORIZED,    *
*                        AND IF QNEWUSR IS NON-NULL, CHANGE ACEEUSER  *
*                        SO USER WILL BE AUTHORIZED TO OPEN CKPT/SPOOL*
***********************************************************************
         GBLB  &QSP33         MVS/SP1.3.3 OPTION                  TEC01
         GBLB  &QSP           MVS/SP OPTION                       UF020
         GBLB  &QDBC          DBC    OPTION                       UF024
         GBLB  &QRACF         RACF OPTION                         RNB03
         GBLB  &QRNB          RNB OPTION FLAG                     RNB05
***********************************************************************
*                                                                     *
*   LOAD QCOMMON                                                      *
*                                                                     *
***********************************************************************
*
****
*******  IF YOU WANT TO CHANGE THE NAME FOR THE COMMON AREA,
****               THIS IS THE ONLY REFERENCE TO IT.
*
         L     R11,=V(QCOMMON) ADDR OF QCOMMON                    UF002
         LTR   R11,R11        SEE IF LINKED IN                    UF002
         BNZ   LOADED         YES, CONTINUE                       UF002
         SPACE 1                                                  UF002
         LOAD  EP=QUEUECMN    QUEUE COMMON AREA
         LR    R11,R0         ADDR OF QCOMMON
         SPACE 1                                                  UF002
LOADED   DS    0H                                                 UF002
         L     R1,4(R13)      PREVIOUS SAVE AREA
         ST    R11,64(R1)     UPDATE R11 IN PREVIOUS SAVE AREA
         ST    R1,QFRSTSA     STORE ADDR OF FIRST SAVEAREA IN QCOMMON
         USING QDAIR,R10      BASE REG FOR DAIR WORK
         L     R10,QVDAIR     LOAD BASE REG
         USING QCKPT,R9       BASE REG FOR CKPT WORK
         L     R9,QVCKPT      LOAD BASE REG
         USING QDISPLAY,R8    BASE REG FOR DISPLAY WORK
         L     R8,QVDSPL      LOAD BASE REG
         USING WORK,R13       ADDRESSING FOR SAVE/WORK AREA       UF024
***********************************************************************
*                                                                     *
*   MOVE PARMS FROM CPPL TO DAPL                                      *
*                                                                     *
***********************************************************************
         USING CPPL,R2        ADDR OF CPPL IS IN R2
         MVC   DAPLUPT,CPPLUPT USER PROFILE TABLE
         MVC   DAPLPSCB,CPPLPSCB PROTECTED STORAGE CNTL BLK
         MVC   DAPLECT,CPPLECT ENVIRONMENT CNTL TABLE
         AIF   (&QRNB).RNB02      SKIP IF AT RNB                  RNB02
******************************************************************UF010
*                                                                 UF010
*   CHECK PSCB FOR ACCOUNT AUTHORITY                              UF010
*     ONLY GUYS WITH WHITE HATS NEED APPLY....                    UF010
******************************************************************UF010
         L     R1,CPPLPSCB    ADDRESS OF PSCB                     UF010
         USING PSCB,R1        ADDRESSING FOR PSCB                 UF010
         TM    PSCBATR1,PSCBACCT  TEST FOR ACCOUNT AUTHORITY      UF010
         BZ    NOTOPER        NO, SKIP THIS                       UF010
         OI    QFLAG1,QFLG1OPR    SET OPER AUTH                   UF010
         OI    QXAUTH,1           SET PRIV AUTH                   UF010
         AIF   (NOT &QDBC).NODBC1 SKIP IF DBC NOT INSTALLED       UF024
******************************************************************UF024
*                                                                 UF024
*   IF USER HAS OPER AUTHORITY, ESTABLISH ESTAE ENVIRONMENT       UF024
*                                                                 UF024
******************************************************************UF024
         LOAD  EP=DBC,ERRET=NOTOPER  LOAD ESTAE ROUTINE           UF024
         LR    R3,R0          ADDR OF ROUTINE                     UF024
         MVC   WORKAREA(DBCMFLN),DBCMFL GET ESTAE PARM LIST       UF024
         ESTAE (R3),MF=(E,WORKAREA)  CREATE THE ESTAE             UF024
         OI    QFLAG1,QFLG1DBC  INDICATE NEED TO DELETE AT TERM   UF024
         B     NOTOPER        CONTINUE PROCESSING                 UF024
DBCMFL   ESTAE ,MF=L          LIST FORM OF ESTAE                  UF024
DBCMFLN  EQU   *-DBCMFL       LENGTH OF LIST FORM ESTAE           UF024
.NODBC1  ANOP                                                     UF024
.RNB02   ANOP                                                     RNB02
NOTOPER  DS    0H                                                 UF010
***********************************************************************
*                                                                     *
*   MOVE COMMAND BUFFER TO REPLY BUFFER                               *
*                                                                     *
***********************************************************************
         L     R1,CPPLCBUF    ADDR OF COMMAND BUFFER
         LH    R3,0(R1)       LENGTH OF COMMAND BUFFER
         LH    R4,2(R1)       OFFSET TO FIRST DATA BYTE
         LA    R1,4(R1,R4)    FIRST DATA BYTE
         SR    R3,R4          SUBTRACT OFFSET FROM LENGTH
         SH    R3,=H'4'       SUBTRACT OVERHEAD
         SH    R3,=H'1'       IS LENGTH ZERO?
         BM    SKIP           YES. SKIP IT.
         EX    R3,OCBUF       TRANSLATE TO UPPER CASE
         CLC   =C'CKPT(',0(1) IS REQUEST FOR CKPT?
         BE    CKPT           YES. DO IT.
         MVC   QDREPLY,QBLANK BLANK THE REPLY LINE
         CH    R3,=H'62'      IS LENGTH OVER 63?
         BNH   OK             NO. USE IT.
         LA    R3,62          USE MAXIMUM LENGTH
OK       EX    R3,MVCBUF      MOVE THE DATA
         LA    R3,1(R3)       INCREMENT TO TRUE LENGTH
         STH   R3,QDRLNG      STORE REPLY LENGTH
***********************************************************************
*                                                                     *
*   LOCATE LOGON ID, MOVE TO QLOGON                                   *
*                                                                     *
***********************************************************************
SKIP     L     R1,16          ADDR OF CVT
         L     R1,0(R1)       ADDR OF DISPATCH QUEUE
         L     R1,12(R1)      ADDR OF CURRENT ASCB
         L     R1,176(R1)     ADDR OF JOBNAME
         MVC   QLOGON,0(R1)   MOVE JOBNAME TO QLOGON
***********************************************************************
*                                                                     *
*   OBTAIN BLOCK ADDR TABLE FOR LISTDS                                *
*                                                                     *
***********************************************************************
         GETMAIN R,LV=65536
         ST    R1,QGETA1      SAVE START ADDR OF GETMAIN
         ST    R1,QCSTART     STORE STARTING ADDR OF TABLE
         A     R1,=F'65536'   END OF TABLE
         ST    R1,QCEND
***********************************************************************
*                                                                     *
*   ALLOCATE HASPCKPT                                                 *
*                                                                     *
***********************************************************************
         MVC   DA08DDN,=CL8'HASPCKPT' DDNAME FOR ALLOCATE
         MVC   DA08PDSN,=A(DSNCKPT) DSNAME FOR ALLOCATE
         MVI   DAIRFLAG,X'08' REQUEST ALLOCATE FUNCTION
         L     R15,=V(ALLOCATE) ADDR OF ALLOCATE MODULE
         BALR  R14,R15        GO TO IT
***********************************************************************
*                                                                     *
*   OPEN HASPCKPT, READ FIRST BLOCK OF CHECKPOINT                     *
*                                                                     *
***********************************************************************
         AIF   (NOT &QRACF).RNB03B                                RNB03
         TESTAUTH FCTN=1             APF-AUTHORIZED?              RNB03
         LTR   R15,R15                                            RNB03
         BNZ   RNB03A                /NO  - CAN'T CHG ACEEUSER    RNB03
*                                    /YES -                       RNB03
         RACSTAT ,                   IS RACF UP?                  RNB03
         LTR   R15,R15                                            RNB03
         BNZ   RNB03A                /NO  - CAN'T CHG ACEEUSER    RNB03
*                                    /YES -                       RNB03
         CLI   QNEWUSR,0             IS THERE A NEW USERID TO USE?RNB03
         BE    RNB03A                /NO  - CAN'T CHG ACEEUSER    RNB03
*                                    /YES - CHANGE ACEEUSER TO    RNB03
*                                           ALLOW ACCESS TO THE   RNB03
*                                           SPOOL/CKPT DATA SETS  RNB03
         L     R2,CVTPTR             CVT                          RNB03
         USING CVT,R2                #####                        RNB03
         L     R2,CVTTCBP            TCB WORDS                    RNB03
         L     R2,12(,R2)            CURRENT ASCB                 RNB03
         USING ASCB,R2               #####                        RNB03
         L     R2,ASCBASXB           ASXB                         RNB03
         USING ASXB,R2               #####                        RNB03
         ICM   R2,15,ASXBSENV        ACEE                         RNB03
         BZ    RNB03A                FORGET IT IF NO ACEE         RNB03
         USING ACEE,R2               #####                        RNB03
         CLC   =C'ACEE',ACEEACEE     REALLY AN ACEE?              RNB03
         BNE   RNB03A                /NO  - FORGET IT             RNB03
         MVC   QUSRSAV,ACEEUSER      /YES - SAVE CURRENT USERID   RNB03
         STAX  DEFER=YES             DON'T ALLOW ATTENTION'S      RNB03
         MODESET KEY=ZERO            GET KEY ZERO TO UPDATE ACEE  RNB03
         MVC   ACEEUSER,QNEWUSR      SET NEW USERID               RNB03
         MODESET KEY=NZERO           BACK TO USER KEY             RNB03
RNB03A   EQU   *                                                  RNB03
.RNB03B  ANOP                                                     RNB03
         OPEN  MF=(E,HOCKPT)  OPEN HASPCKPT
         L     R2,QCSTART     USE TABLE AREA FOR IOAREA
         POINT HASPCKPT,TIR3  POINT PAST SYNC RECORDS
         READ  HDECB1,SF,,(R2),MF=E READ FIRST RECORD
         CHECK HDECB1
*                                                                 UF039
*        GETMAIN DECB WORK AREA FOR CKPT ROUTINE                  UF039
*                                                                 UF039
         SR    R0,R0          CLEAR FOR IC                        UF039
         IC    R0,DCBNCP-IHADCB+HASPCKPT  NUMBER OF CHANNEL PGMS  UF039
         MH    R0,=Y(HDECB1L) TIMES LENGTH OF A DECB              UF039
         GETMAIN R,LV=(0)     GET ENOUGH STORAGE                  UF039
         ST    R1,QCDECBPT    SAVE ADDRESS FOR CKPT ROUTINE       UF039
         AIF   (&QSP33).QSP3X1                                    TEC02
***********************************************************************
*                                                                     *
*   COMPUTE OFFSET TO FIRST PDDB IN IOT                               *
*                                                                     *
***********************************************************************
         USING $SAVEBEG,R2    BASE REG FOR CHECKPOINT
         AIF   (&QSP).QSP1                                        UF020
         LH    R5,$NUMTGV     NUMBER OF TRACK GROUPS PER VOLUME
         LA    R5,7(R5)       ROUND UP TO MULTIPLE OF 8
         SRL   R5,3           DIVIDE BY 8
         SR    R0,R0          ZERO OUT R0
         IC    R0,$NUMDA      NUMBER OF SPOOL VOLUMES
         MR    R4,R0          LENGTH OF TRACK GROUP MAP IN R5
         AGO   .QSP2                                              UF020
.QSP1    ANOP                                                     UF020
         LH    R5,$NUMTG      NUMBER OF TRACK GROUPS PER VOLUME   UF020
         LA    R5,7(R5)       ROUND UP TO MULTIPLE OF 8           UF020
         SRL   R5,3           DIVIDE BY 8                         UF020
.QSP2    ANOP                                                     UF020
         LR    R1,R5          SAVE LENGTH OF TRACK GROUP MAP
         LA    R5,IOTTGMAP-IOTSTART+TGMAP-TGMDSECT+3(R5) OFFSET
         N     R5,=F'-4'      ROUND TO FULL WORD BOUNDARY
         ST    R5,QCPDDB1     SAVE OFFSET TO FIRST PDDB IN IOT
         AIF   (NOT &QSP).QSP3                                    UF020
***********************************************************************
*                                                                     *
*   COMPUTE NUMBER OF JIX BLOCKS ON CKPT                              *
*                                                                     *
***********************************************************************
         LH    R5,$NUMJBNO    NUMBER OF JOB NUMBERS               UF020
         LA    R5,1(,R5)       PLUS 1 FOR HEADER                  UF020
         SLL   R5,1           TIMES LENGTH OF 2                   UF020
         LA    R5,4095(R5)    PREPARE TO ROUND                    UF020
         SRL   R5,12          DIVIDE BY 4096                      UF020
         STH   R5,QCJIXL      NUMBER OF BLOCKS FOR JIX            UF020
.QSP3    ANOP                                                     UF020
***********************************************************************
*                                                                     *
*   COMPUTE NUMBER OF JQE BLOCKS ON CKPT                              *
*                                                                     *
***********************************************************************
         LH    R6,$MAXJOBS    NUMBER OF JQES
         LA    R6,1(,R6)       PLUS 1 FOR EYE-CATCHER
         MH    R6,=AL2(JQELNGTH) MULTIPLY BY LENGTH OF JQE
         LA    R6,4095(R6)    PREPARE TO ROUND
         SRL   R6,12          DIVIDE BY 4096
         STH   R6,QCJQTL      NUMBER OF BLOCKS FOR JQES
***********************************************************************
*                                                                     *
*   COMPUTE NUMBER OF JOT BLOCKS IN CKPT                              *
*                                                                     *
***********************************************************************
         LH    R3,$NUMJOES    NUMBER OF JOES
         LA    R3,NJOTPRFX(,R3) ADJUSTED LENGTH OF JOT PREFIX
         MH    R3,=AL2(JOESIZE) MULTIPLY BY LENGTH OF JOE
         LA    R3,4095(R3) PREPARE TO ROUND
         SRL   R3,12          DIVIDE BY 4096
         STH   R3,QCJOTL      NUMBER OF BLOCKS FOR JOT
***********************************************************************
*                                                                     *
*   COMPUTE TOTAL LENGTH OF QSES                                      *
*                                                                     *
***********************************************************************
         LA    R4,QSELEN      QSE LENGTH
         MH    R4,$QSENO      MULTIPLY LENGTH TIMES NUMBER OF QSES
         AIF   (NOT &QSP).QSP5                                    UF020
         ALR   R4,R5          ADD ONE BYTE FOR EACH JIX BLOCK     UF020
******************************************************************UF020
*                                                                 UF020
*   COMPUTE NUMBER OF MSQ BLOCKS ON CKPT                          UF020
*                                                                 UF020
******************************************************************UF020
         LH    R1,$NUMRJE     NUMBER OF REMOTES                   UF020
         MH    R1,=Y(3)       TIMES LENGTH OF 3                   UF020
         LA    R1,3(,R1)       PLUS HEADER LENGTH                 UF020
         LA    R1,4095(R1)    PREPARE TO ROUND                    UF020
         SRL   R1,12          DIVIDE BY 4096                      UF020
         ALR   R4,R1          ADD 1 BYTE FOR EACH BLOCK           UF020
******************************************************************UF020
*                                                                 UF020
*   COMPUTE NUMBER OF RSO BLOCKS ON CKPT                          UF020
*                                                                 UF020
******************************************************************UF020
         LH    R1,$NUMRJE     NUMBER OF REMOTES                   UF020
         LA    R1,4095(R1)    PREPARE TO ROUND                    UF020
         SRL   R1,12          DIVIDE BY 4096                      UF020
         ALR   R4,R1          ADD 1 BYTE FOR EACH BLOCK           UF020
******************************************************************UF020
*                                                                 UF020
*   COMPUTE NUMBER OF LCK BLOCKS ON CKPT                          UF020
*                                                                 UF020
******************************************************************UF020
*        LH    R1,$NUMLCK     NUMBER OF LOAD CKPT ELEMENTS        UF020
         LA    R1,9*7         NUMBER OF LOAD CKPT ELEMENTS        UF020
         MH    R1,=Y(LCKSIZE) TIMES LENGTH OF EACH                UF020
         LA    R1,4095(R1)    PREPARE TO ROUND                    UF020
         SRL   R1,12          DIVIDE BY 4096                      UF020
         ALR   R4,R1          ADD 1 BYTE FOR EACH BLOCK           UF020
.QSP5    ANOP                                                     UF020
         ALR   R4,R6          ADD ONE BYTE FOR EACH JQE BLOCK
         ALR   R4,R3          ADD ONE BYTE FOR EACH JOT BLOCK
         AGO   .QSP3X2                                            TEC02
.QSP3X1  ANOP                                                     TEC02
***********************************************************************
*                                                                     *
*     FIND KIT ( CHECKPOINT INFORMATION TABLE)                        *
*                                                                     *
***********************************************************************
         USING $SAVEBEG,R2    BASE REG FOR CHECKPOINT
         LA    R3,$SAVEEND-$SAVEBEG(R2)   POINT TO QSES           TEC02
*   COMPUTE TOTAL LENGTH OF QSES                                  TEC02
         LA    R4,QSELEN      QSE LENGTH                          TEC02
         MH    R4,$QSENO      MULTIPLY LENGTH TIMES NUMBER OF QSESTEC02
         ALR   R3,R4          POINT TO DAS                        TEC02
*   COMPUTE TOTAL LENGTH OF DASS                                  TEC02
         ST    R3,QCDASA      SAVE INIT DAS ADDRESS FOR SPOOL ALLOCEC02
         LA    R4,DASSIZ      DAS LENGTH                          TEC02
         MH    R4,=AL2($MAXDA) MULTIPLY LEN TIMES NUMBER OF DASS  TEC02
         ALR   R3,R4          POINT TO KITS                       TEC02
         USING KITDSECT,R3                                        TEC02
***********************************************************************
*                                                                     *
*     FIND NUMBER OF TGM BLOCKS ON CKPT                               *
*                                                                     *
***********************************************************************
         CLC   KITID,=CL4'TGM ' IS THIS THE RIGHT KIT ???         TEC02
         BNE   ABORT3         NO BLOW UP                          TEC02
         LH    R6,KITRECN     SAVE NUMBER OF TGM RECORDS          TEC02
***********************************************************************
*                                                                     *
*     FIND NUMBER OF JIX BLOCKS ON CKPT                               *
*                                                                     *
***********************************************************************
         LA    R3,KITLNGTH(R3) POINT TO NEXT KIT                  TEC02
         CLC   KITID,=CL4'JIX ' IS THIS THE RIGHT KIT ???         TEC02
         BNE   ABORT3         NO BLOW UP                          TEC02
         LH    R5,KITRECN     SAVE NUMBER BLOCKS                  TEC02
         ST    R5,QCJIXL      SAVE NUMBER OF JIX RECORDS          TEC02
         AH    R6,KITRECN     ADD TO RECORD ACCUMULATOR           TEC02
         MVC   QCJIXA,KITORG  SAVE DISPLACEMENT IN BUFFER TO JIX  TEC02
***********************************************************************
*                                                                     *
*     FIND NUMBER OF JQE BLOCKS ON CKPT                               *
*                                                                     *
***********************************************************************
         LA    R3,KITLNGTH(R3) POINT TO NEXT KIT                  TEC02
         CLC   KITID,=CL4'JQE ' IS THIS THE RIGHT KIT ???         TEC02
         BNE   ABORT3         NO BLOW UP                          TEC02
         LH    R5,KITRECN     SAVE NUMBER BLOCKS                  TEC02
         ST    R5,QCJQTL      SAVE NUMBER OF JQE RECORDS          TEC02
         AH    R6,KITRECN     ADD TO RECORD ACCUMULATOR           TEC02
         MVC   QCJQTA,KITORG  SAVE DISPLACEMENT IN BUFFER TO JQT  TEC02
***********************************************************************
*                                                                     *
*     FIND NUMBER OF JOE BLOCKS ON CKPT                               *
*                                                                     *
***********************************************************************
         LA    R3,KITLNGTH(R3) POINT TO NEXT KIT                  TEC02
         CLC   KITID,=CL4'JOE ' IS THIS THE RIGHT KIT ???         TEC02
         BNE   ABORT3         NO BLOW UP                          TEC02
         LH    R5,KITRECN     SAVE NUMBER BLOCKS                  TEC02
         ST    R5,QCJOTL      SAVE NUMBER OF JOE RECORDS          TEC02
         AH    R6,KITRECN     ADD TO RECORD ACCUMULATOR           TEC02
         MVC   QCJOTA,KITORG  SAVE DISPLACEMENT IN BUFFER TO JQT  TEC02
         DROP  R3
.QSP3X2  ANOP                                                     TEC02
***********************************************************************
*                                                                     *
*   COMPUTE HASPACE BUFFER SIZE                                       *
*                                                                     *
***********************************************************************
         LH    R5,$BUFSIZE    BLKSIZE FOR HASPACE
         STH   R5,HASPACE+62  STORE IN DCB
         STH   R5,HDECB2+6    STORE IN DECB
         LA    R5,63(R5)      PREPARE TO ROUND
         N     R5,=F'-64'     ROUND TO 64 BYTE BOUNDARY
***********************************************************************
*                                                                     *
*   OBTAIN BUFFERS FOR HASPCKPT AND HASPACE                           *
*                                                                     *
***********************************************************************
         LR    R14,R5         HASPACE BUFFER SIZE
         MH    R14,=H'3'      3 BUFFERS
         ST    R6,QCRECN      STORE RECORD COUNT OF
*                             NUMBER OF NON-MASTER BLOCKS IN CKPT DS
         SLL   R6,12          MULTIPLY BY 4096
         LA    R0,256(R6,R14) ADD CKPT BUFFERS, HASPACE BUFFERS, SLOP
         A     R0,$MASTERL    ADD LENGTH OF MASTER RECORD
         ST    R0,QGETL2      SAVE LENGTH OF GETMAIN AREA
         GETMAIN R,LV=(0)     OBTAIN BUFFERS
         ST    R1,QGETA2      SAVE ADDRESS OF GETMAIN AREA
         ST    R1,QCMSTA      BUFFER FOR FIRST CKPT REC
         A     R1,$MASTERL    BUMP PAST MASTER RECORD
         A     R1,=F'32'
         N     R1,=F'-32'     ALLIGN IT
*    SET UP JIX POINTER
         L     R6,QCJIXA      CHANGE OFFSET
         LA    R6,0(R6,R1)      TO ABSOLUTE
         ST    R6,QCJIXA        ADDRESS
*    SET UP JQT POINTER
         L     R6,QCJQTA      CHANGE OFFSET
         LA    R6,0(R6,R1)      TO ABSOLUTE
         ST    R6,QCJQTA        ADDRESS
*    SET UP JOT POINTER
         L     R6,QCJOTA      CHANGE OFFSET
         LA    R6,0(R6,R1)      TO ABSOLUTE
         ST    R6,QCJOTA        ADDRESS
*    SET UP JCT BUFFER POINTER
         L     R6,QCJOTL      NUMBER OF JOT RECORDS
         SLL   R6,12           TIMES 4096
         A     R6,QCJOTA      GIVES ADDRESS OF END OF JOT
         ST    R6,QCJCTA      SAVE AS ADDRESS OF JCT BUFFER
*    SET UP IOT BUFFER POINTER
         AH    R6,$BUFSIZE
         ST    R6,QCIOTA      BUFFER FOR IOT BLOCKS
*    SET UP DATA BUFFER POINTER
         AH    R6,$BUFSIZE
         ST    R6,QCBLKA      BUFFER FOR DATA BLOCKS
*    SET UP JQE HEADER POINTER
         L     R6,QCJQTA
         ST    R6,QCJQHEAD    BUFFER POINTER FOR JQE HEAD
***********************************************************************
*                                                                     *
*   ALLOCATE AND OPEN HASPACE                                         *
*                                                                     *
***********************************************************************
         L     R3,QCDASA       ADDR OF DAS TABLE
         USING DASDSECT,R3     COVER DAS
.EXIT    ANOP
         MVC   DA08DDN,=CL8'HASPACE' DDNAME FOR ALLOCATE
         MVC   DA08PDSN,=A(DSNSPACE) DSNAME FOR ALLOCATE
         LA    R4,9           MAX POSSIBLE SPOOLS FOR QUEUE       UF020
         AIF   (&QSP).QSP10                                       UF020
         IC    R4,$NUMDA      MAXIMUM NUMBER OF SPOOL VOLUMES
.QSP10   ANOP                                                     UF020
         LA    R7,QCDCBL      LENGTH OF HASPACE DCB
         MR    R6,R4          COMPUTE LENGTH OF DCB POOL
         GETMAIN R,LV=(R7)    OBTAIN DCB POOL
         ST    R7,QGETL3      SAVE LENGTH OF GETMAIN
         ST    R1,QGETA3      SAVE ADDRESS OF GETMAIN
         LR    R7,R1          SAVE ADDR OF DCB POOL
         LA    R8,QCSPOOLS-4  ADDR OF OPEN LIST
         SR    R6,R6          ACTUAL NUMBER OF SPOOL VOLUMES
         MVC   DA08SER(5),$SPOOL PATTERN FOR VOLSER
SPOOL1   LA    R5,DEVTAB      ADDR OF DEVICE CHARACTERISTICS TBL
         TM    DASFLAG,DASEXSTS+DASSELEC  EXISTS..SELECTABLE
         BNO   SPOOL4         NO...TRY NEXT.
SPOOL2   CLI   0(R5),X'FF'    IS THIS THE END OF TABLE?
         BE    ABORT          YES. UNSUPPORTED DEVICE TYPE.
         CLC   0(1,R5),DASTYPE IS THIS A MATCH?
         BE    SPOOL3         YES. GO WITH IT.
         LA    R5,12(R5)      NEXT TABLE ENTRY
         B     SPOOL2         TRY NEXT ENTRY
SPOOL3   MVC   150(2,R8),2(R5) MOVE TRK/CYL TO TRK/CYL LIST
         MVC   DA08UNIT,4(R5) MOVE UNIT NAME
         MVC   DA08SER+5(1),DASVOLID+5 LAST DIGIT OF VOLSER
         LA    R6,1(R6)       INCREASE COUNT BY ONE
         STC   R6,DA08DDN+7   UPDATE DDNAME
         OI    DA08DDN+7,X'F0' MAKE IT A VALID NUMBER
         L     R15,=V(ALLOCATE) ADDR OF ALLOCATE MODULE
         BALR  R14,R15        GO TO IT
         MVC   0(QCDCBL,R7),HASPACE MOVE PATTERN DCB TO POOL
         MVC   47(1,R7),DA08DDN+7 UPDATE THE DDNAME
         ST    R7,4(R8)       STORE DCB ADDR IN OPEN LIST
         LA    R7,QCDCBL(R7)  INCREMENT TO NEXT DCB
         LA    R8,4(R8)       NEXT ENTRY IN OPEN LIST
SPOOL4   LA    R3,DASSIZ(R3)  NEXT VOLUME
         BCT   R4,SPOOL1      BRANCH IF MORE VOLUMES.
         OI    0(R8),X'80'    INDICATE END OF OPEN LIST
         OPEN  MF=(E,QCSPOOLS) OPEN HASPACE
         AIF   (NOT &QRACF).RNB03D                                RNB03
         CLI   QUSRSAV,0           DID WE CHANGE ACEEUSER?        RNB03
         BE    RNB03C              /NO  - SKIP THIS CODE          RNB03
*                                  /YES - PUT USERID BACK         RNB03
         L     R2,CVTPTR             CVT                          RNB03
         USING CVT,R2                #####                        RNB03
         L     R2,CVTTCBP            TCB WORDS                    RNB03
         L     R2,12(,R2)            CURRENT ASCB                 RNB03
         USING ASCB,R2               #####                        RNB03
         L     R2,ASCBASXB           ASXB                         RNB03
         USING ASXB,R2               #####                        RNB03
         ICM   R2,15,ASXBSENV        ACEE                         RNB03
         USING ACEE,R2               #####                        RNB03
         MODESET KEY=ZERO            GET KEY ZERO TO UPDATE ACEE  RNB03
         MVC   ACEEUSER,QUSRSAV      SET OLD USERID               RNB03
         MODESET KEY=NZERO           BACK TO USER KEY             RNB03
         STAX  DEFER=NO              ALLOW ATTENTION INTERRUPTS   RNB03
RNB03C   EQU   *                                                  RNB03
.RNB03D  ANOP                                                     RNB03
***********************************************************************
*                                                                     *
*   GO HOME                                                           *
*                                                                     *
***********************************************************************
         QSTOP
***********************************************************************
*                                                                     *
*   PROCESS REQUEST FOR DIFFERENT UNIT AND VOL ON SYS1.HASPCKPT       *
*                                                                     *
***********************************************************************
*
*** FORMAT - QUEUE CKPT(UNIT,VOLSER)
*
CKPT     MVC   DA08UNIT(16),QBLANK BLANK THE UNIT AND VOLSER FIELDS
         LA    R5,DA08UNIT    START OF UNIT FIELD
         LA    R6,DA08SER     START OF VOLSER FIELD
         SH    R3,=H'4'       SUBTRACT OVERHEAD FROM LENGTH
CKPT1    CLI   5(R1),C','     IS THIS THE END OF UNIT FIELD?
         BE    CKPT2          YES. PROCESS VOLSER NEXT.
         MVC   0(1,R5),5(R1)  MOVE ONE BYTE OF UNIT NAME
         LA    R5,1(R5)       ADD 1 TO RECEIVING ADDR
         LA    R1,1(R1)       ADD 1 TO SENDING ADDR
         BCT   R3,CKPT1       BRANCH IF NOT EXHAUSTED.
         B     ABORT2         INVALID PARAMETERS.
CKPT2    CLI   6(R1),C')'     IS THIS THE END OF VOLSER FIELD?
         BE    CKPT3          YES. CONTINUE PROCESSING.
         MVC   0(1,R6),6(R1)  MOVE ONE BYTE TO VOLSER
         LA    R6,1(R6)       ADD ONE TO RECEIVING ADDR
         LA    R1,1(R1)       ADD ONE TO SENDING ADDR
         BCT   R3,CKPT2       BRANCH IF NOT EXHAUSTED.
         B     ABORT2         INVALID PARAMETER.
CKPT3    CLI   DA08UNIT,C' '  IS THERE A UNIT?
         BE    ABORT2         NO. INVALID.
         CLI   DA08SER,C' '   IS THERE A VOLSER?
         BE    ABORT2         NO. INVALID.
         CLI   DA08BLK,0      DID WE GO TOO FAR?
         BE    SKIP           NO. EVERTHING LOOKS GOOD.
ABORT2   TPUT  MESSAGE2,L'MESSAGE2,EDIT,MF=(E,QTPUT) TELL THE USER
         ABEND 97,DUMP        QUIT
***********************************************************************
*                                                                     *
*   UNSUPPORTED DEVICE TYPE. ABORT.                                   *
*                                                                     *
***********************************************************************
ABORT    TPUT  MESSAGE,L'MESSAGE,EDIT,MF=(E,QTPUT)   TELL THE USER
         ABEND 98,DUMP        QUIT.
***********************************************************************
*                                                                     *
*   KIT LITERAL MISMATCH.                                             *
*                                                                     *
***********************************************************************
ABORT3   TPUT  MESSAGE3,L'MESSAGE3,EDIT,MF=(E,QTPUT) TELL THE USERTEC02
         ABEND 99,DUMP        QUIT.                               TEC02
***********************************************************************
*                                                                     *
*   MISCELLANY                                                        *
*                                                                     *
***********************************************************************
         LTORG
OCBUF    OC    0(1,R1),QBLANK TRANSLATE COMMAND TO UPPER CASE
MVCBUF   MVC   QDREPLY(1),0(R1) MOVE DATA TO REPLY
DEVTAB   DC    X'0900',H'19',CL8'3330' DEVTYPE,TRK/CYL,DEVNAME
         DC    X'0B00',H'30',CL8'3350'
         DC    X'0D00',H'19',CL8'3330-1'
         DC    X'0E00',H'15',CL8'3380'                            UF037
         DC    X'FFFF'
         DS    0F
TIR3     DC    X'00000300'    POINT PAST SYNC RECORDS
DSNCKPT  DC    H'13',CL44'SYS1.HASPCKPT'
DSNSPACE DC    H'12',CL44'SYS1.HASPACE'
MESSAGE  DC    C'UNSUPPORTED DEVICE TYPE SPECIFIED FOR SPOOL'
MESSAGE2 DC    C'INVALID PARAMETER SPECIFIED - CKPT(UNIT,VOLSER)'
MESSAGE3 DC    C'ERROR IN ORDER OR LOCATION OF KIT ON CHPT'       TEC02
WORK     DSECT ,                                                  UF024
         DS    18F                 SAVEAREA PORTION               UF024
WORKAREA DS    D                   START OF SCRATCH WORK AREA     UF024
         SPACE 1                                                  UF024
SYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023
INIT     CSECT ,                                                  UF023
         GBLC  &VERSION
         AIF   (&QSP33).QSP33                                     TEC01
&VERSION SETC  '0'
         AIF   (NOT &QSP).QSP99A                                  UF020
$MAXNODE EQU   1000           FOR SP2 $JOT DSECT                  UF020
         AGO   .QSP99B                                            UF020
.QSP99A  ANOP                                                     UF020
$MAXNODE EQU   99             FOR NJE $JOT DSECT                  UF001
.QSP99B  ANOP                                                     UF020
SAVE     EQU   13             NEEDED FOR NJE $PCE                 UF001
         $PCE  ,              NEEDED FOR NJE $HCT                 UF001
         $JOE
         $JOT
NJOTPRFX EQU   (JOTJOES-JOTDSECT)/JOESIZE
BASE1    EQU   0
$RPS     EQU   0
$MSGID   EQU   0
$DUPVOLT EQU   0
$PRIOOPT EQU   0
$PRTBOPT EQU   0
$PRTRANS EQU   0
$QSONDA  EQU   0
         AIF   (NOT &QSP).QSP99                                   UF020
*        EQUATES REQUIRED FOR $HCT EXPANSION                      UF020
FF       EQU   X'FF'                                              UF020
$CMBDEF  EQU   15                                                 UF020
$JQEDEF  EQU   100                                                UF020
$MAXDA   EQU   32                                                 UF020
$MAXJBNO EQU   9999                                               UF020
$SMFDEF  EQU   5                                                  UF020
$TGDEF   EQU   3072                                               UF020
JCT      EQU   10                                                 UF020
         $LCK  ,                                                  UF020
.QSP99   ANOP                                                     UF020
         $BUFFER                                                  UF020
         $JCT  ,                                                  UF020
         $CAT  ,                                                  UF020
         $TAB
         $QSE
         $PDDB                                                    UF021
         $IOT
         $TGM
         $JQE
         $HCT
.QSP33   ANOP                                                     TEC01
         IKJCPPL
         IKJPSCB                                                  UF010
         AIF   (NOT &QRACF).RNB03E                                RNB03
         PUSH  PRINT                                              RNB03
         PRINT NOGEN                                              RNB03
         CVT   DSECT=YES                                          RNB03
         IHAASCB ,                                                RNB03
         IHAASXB ,                                                RNB03
         IHAACEE ,                                                RNB03
         POP   PRINT                                              RNB03
.RNB03E  ANOP                                                     RNB03
         IHADCB DSORG=PS                                          UF039
         QCOMMON
SYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023
         END
