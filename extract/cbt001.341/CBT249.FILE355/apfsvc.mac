         TITLE 'APF Authorization SVC-###'
         PRINT NOGEN
***********************************************************************
*                                                                     *
*                                                                     *
*                 A             PPPPPPPPPPP      FFFFFFFFFFFFF        *
*                AAA            PPPPPPPPPPPP     FFFFFFFFFFFFF        *
*               AA AA           PP         PP    FF                   *
*              AA   AA          PP         PP    FF                   *
*             AA     AA         PPPPPPPPPPPP     FFFFFFFFFFF          *
*            AAAAAAAAAAA        PPPPPPPPPPP      FFFFFFFFFFF          *
*           AAAAAAAAAAAAA       PP               FF                   *
*          AA           AA      PP               FF                   *
*         AA             AA     PP               FF                   *
*        AA               AA    PP               FF                   *
*                                                                     *
*                                                                     *
*        SSSSSSSSSSSS       VV               VV       CCCCCCCCCCC     *
*        SSSSSSSSSSSS        VV             VV       CCCCCCCCCCCCC    *
*        SS                   VV           VV        CC               *
*        SS                    VV         VV         CC               *
*        SSSSSSSSSSSS           VV       VV          CC               *
*        SSSSSSSSSSSS            VV     VV           CC               *
*                  SS             VV   VV            CC               *
*                  SS              VV VV             CC               *
*        SSSSSSSSSSSS               VVV              CCCCCCCCCCCCC    *
*        SSSSSSSSSSSS                V                CCCCCCCCCCCC    *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*  Program Name: IGC00###    Alias: APFAUTH   Macro: APFAUTH          *
*                                                                     *
*  Function:                                                          *
*    This SVC dynamically authorizes a program.  The SVC grants       *
*    authorization only to programs residing outside the private      *
*    area.  The second use of this SVC is to remove a                 *
*    program's authorization.  This function may be invoked by        *
*    any program, i.e. it need not reside outside the private         *
*    area.  The third use of this SVC is to test a progrsm's          *
*    authorization.                                                   *
*                                                                     *
*                                                                     *
*  Input:  Register 0 - Request Code                                  *
*          0 => Request to test                                       *
*          1 => Request to remove authorization                       *
*          2 => Request to grant authorization                        *
*                                                                     *
*  Processing:                                                        *
*    Based on the request code passed to the SVC and where in         *
*    memory (only for granting authorization)                         *
*      1. APF authorization is turned on                              *
*      2. APF authorization is turned off                             *
*      3. APF authorization status is reported                        *
*                                                                     *
*  Output:                                                            *
*    1. Register 1  - For test authorization, gives authorization     *
*                     status.                                         *
*       0 => Program is not authorized                                *
*       1 => Program is authorized                                    *
*    2. Register 15 - Return Code                                     *
*       0 => Authorization has been tested, granted or removed as     *
*            requested by the request code in register 0.             *
*       4 => The program requested authorization to be granted or     *
*            removed, but already was in the state requested.         *
*       8 => An invalid request code was specified in register 0.     *
*    3. JSCB Authorization - is set according to the request code     *
*             passed to the SVC.                                      *
*                                                                     *
*                                                                     *
*  User Abends:                                                       *
*    ### - the program requested authorization, however it did not    *
*          reside in the pageable link pack area.                     *
*                                                                     *
*  Attributes:                                                        *
*    SVC Type-3                                                       *
*    No Locks Held                                                    *
*    Reenterent                                                       *
*    Refreasable                                                      *
*    Reusable                                                         *
*                                                                     *
*  External References:                                               *
*    Routines- None                                                   *
*    Data Areas - 1. CVT  (Read Only)                                 *
*                 2. TCB  (Read Only)                                 *
*                 3. RB   (Read Only)                                 *
*                 4. JSCB (Read and Write)                            *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*  Author:                                                            *
*      Thomas J. Bigley                                               *
*      Chicago Title and Trust Company                                *
*      37th Floor                                                     *
*      30 N. LaSalle St.                                              *
*      Chicago, Illinois 60602                                        *
*      (312) 630-6302                                                 *
*                                                                     *
*  Maintenance History:                                               *
*      1.  15 Feb 81     Initial writing - Version-1                  *
*      2.  10 Jan 82     Rewrite - Version-2                          *
*                          a. Using structured macros                 *
*                          b. Fix COMMON area checking                *
*                          c. Allow execution fron NUCLEUS area       *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
* GLOBALS                                                             *
*                                                                     *
*                Assembler Global Definitions                         *
*                                                                     *
* NOT EXECUTED                                                        *
***********************************************************************
         SPACE 2
         GBLC  &LEVEL
         GBLC  &VERSION
         GBLC  &RELEASE
         GBLC  &MOD
         GBLC  &FIX
         GBLC  &NAME
         SPACE 2
&NAME    SETC  'IGC00###' Program CSECT name (1:8)
         SPACE 2
&VERSION SETC  'V2'       Current version of program - V#
&RELEASE SETC  'R1'       Current release of program - R#
&MOD     SETC  'M0'       Current modification level - M#
&FIX     SETC  'F0'       Fix number for this modification level - F#
         SPACE 2
&LEVEL   SETC  '&VERSION'.'&RELEASE'.'&MOD'.'&FIX'
         EJECT
***********************************************************************
* PROLOG                                                              *
*                                                                     *
*             DISPLAY REPLY TSO Command Processor Prolog              *
*                                                                     *
* NOT EXECUTABLE                                                      *
***********************************************************************
         SPACE 2
&NAME    START 0
         SPACE 1
         USING &NAME,SVCBASE
         B     START
         SPACE 1
         DC    CL8'&NAME',CL2' '    Program name
         DC    CL8'&LEVEL',CL2' '   Program level
         SPACE 1
         DC    C'&SYSTIME',CL1' '   Time of assembly
         DC    C'&SYSDATE',CL2' '   Date of assembly
         SPACE 1
         DC    A(&NAME)             Beginning address of program
         DC    A(ENDPGM-1)          Ending address of program
         DC    A(ENDPGM-&NAME)      Program length
         EJECT
***********************************************************************
* EQUATES                                                             *
*                                                                     *
*               Register Assignments And Equates                      *
*                                                                     *
* NOT EXECUTABLE                                                      *
***********************************************************************
         SPACE 2
R0       EQU   0    Passed Request Code
R1       EQU   1    Returned Authorization State
R2       EQU   2    JSCB
R3       EQU   3    CVT
R4       EQU   4    TCB
R5       EQU   5    SVRB / RB
R6       EQU   6    SVC Entry Point
R7       EQU   7    ASCB
R8       EQU   8    Work
R9       EQU   9    Work
R10      EQU   10   Work
R11      EQU   11   Work
R12      EQU   12   Work
R13      EQU   13   Work
R14      EQU   14   SVC Return Address / Level Return Address
R15      EQU   15   Return Code
         SPACE 2
PSABASE  EQU   R0
         USING PSA,PSABASE
JSCBBASE EQU   R2   Job Step Control Block address (JSCB)
         USING IEZJSCB,JSCBBASE
CVTBASE  EQU   R3   Communications Vector Table address (CVT)
         USING CVT,CVTBASE
TCBBASE  EQU   R4   Task Control Block address (TCB)
         USING TCB,TCBBASE
RBBASE   EQU   R5
         USING RBBASIC,RBBASE
SVCBASE  EQU   R6   SVC Entry address
ASCBBASE EQU   R7   Address Space Control Block Address (ASCB)
         USING ASCB,ASCBBASE
REQSTCDE EQU   R8   The validated svc request code
RETURN   EQU   R14  SVC and level return register
RTRNCODE EQU   R15  SVC Return Code
         EJECT
***********************************************************************
* SVC-###                                                             *
*                                                                     *
*                        APF Authorization SVC                        *
*                                                                     *
* LEVEL-0                                                             *
***********************************************************************
         SPACE 2
         DS    0H
START    EQU   *
         SPACE 1
         IF (C,R0,GT,=F'0'),           IF Request is valid             X
               AND,                                                    X
               (C,R0,LE,=F'2')
            LR    REQSTCDE,R0             Use the request code
            ELSE                          ELSE
            L     REQSTCDE,=F'3'          Set error request code
            ENDIF                         ENDIF
         SPACE 1
         LA    REQSTCDE,1(REQSTCDE)       Add 1 for CASE statement
         CASENTRY REQSTCDE                CASE: request code
         SPACE 1
         CASE  1                          CASE-1: Report authorization
           L     JSCBBASE,TCBJSCB            Addressability to JSCB
           IF (TM,JSCBOPTS,JSCBAUTH,O)       IF Authorization on
              LA    R1,1                        Indicate authorized
              ELSE                              ELSE
              SR    R1,R1                       Indicate not authorized
              ENDIF                             ENDIF
           SR    RTRNCODE,RTRNCODE           Set return code
         SPACE 1
         CASE  2                          CASE-2: Remove authorization
           L     JSCBBASE,TCBJSCB            Addressability to JSCB
           IF (TM,JSCBOPTS,JSCBAUTH,O)      If Authorization on
              NI    JSCBOPTS,X'FF'-JSCBAUTH    Turn off authorization
              SR    RTRNCODE,RTRNCODE          Set return code
              ELSE                             ELSE
              LA    RTRNCODE,4                 Set return code
              ENDIF                            ENDIF
         SPACE 1
         CASE  3                          CASE-3: Set authorization
         L     RBBASE,RBLINK                Addressability to RB
         IF (CLC,RBOPSW+5(3),GE,CVTSHRVM+1), IF From COMMON area       X
               OR,                              OR                     X
               (CLC,RBOPSW+5(3),LT,CVTNUCB+1)   From NUCLEUS area
            L     JSCBBASE,TCBJSCB             Addressability to JSCB
            IF (TM,JSCBOPTS,JSCBAUTH,Z)        IF Not authorized
               OI    JSCBOPTS,JSCBAUTH            Set authorization on
               SR    RTRNCODE,RTRNCODE            Set return code
               ELSE                               ELSE
               LA    RTRNCODE,4                   Set return code
               ENDIF                              ENDIF
            ELSE                               ELSE
            ABEND ###                          Abend Ilegal Request
            ENDIF                              ENDIF
         SPACE 1
         CASE  4                          CASE-4: Invalid request code
           LA    RTRNCODE,8                 Set return code
         ENDCASE
         SPACE 1
         BR    RETURN                     Return
         EJECT
***********************************************************************
* CONSTANTS                                                           *
*                                                                     *
*                        Rear Only Constants                          *
*                                                                     *
* Not Executable                                                      *
***********************************************************************
         SPACE 2
         LTORG
         SPACE 2
ENDPGM   EQU   *
         EJECT
         PRINT GEN
         IHAPSA
         EJECT
         IEZJSCB
         EJECT
         CVT   DSECT=YES,LIST=YES
         EJECT
         IKJTCB LIST=YES
         EJECT
         IHARB
         EJECT
         IHAASCB
         SPACE 3
         END
