         TITLE 'TSO / TPAM Interface Extended Function SVC - SVC###'
         PRINT NOGEN
***********************************************************************
*                                                                     *
*                                                                     *
*       TTTTTTTTTTTTTT       SSSSSSSSSSSS        OOOOOOOOOOO          *
*       TTTTTTTTTTTTTT       SSSSSSSSSSSS       OOOOOOOOOOOOO         *
*             TT             SS                 OO         OO         *
*             TT             SS                 OO         OO         *
*             TT             SSSSSSSSSSSS       OO         OO         *
*             TT             SSSSSSSSSSSS       OO         OO         *
*             TT                       SS       OO         OO         *
*             TT                       SS       OO         OO         *
*             TT             SSSSSSSSSSSS       OOOOOOOOOOOOO         *
*             TT             SSSSSSSSSSSS        OOOOOOOOOOO          *
*                                                                     *
*                                                                     *
*        SSSSSSSSSSSS       VV               VV       CCCCCCCCCCC     *
*        SSSSSSSSSSSS        VV             VV       CCCCCCCCCCCCC    *
*        SS                   VV           VV        CC               *
*        SS                    VV         VV         CC               *
*        SSSSSSSSSSSS           VV       VV          CC               *
*        SSSSSSSSSSSS            VV     VV           CC               *
*                  SS             VV   VV            CC               *
*                  SS              VV VV             CC               *
*        SSSSSSSSSSSS               VVV              CCCCCCCCCCCCC    *
*        SSSSSSSSSSSS                V                CCCCCCCCCCCC    *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*  Program Name: IGC00###    Alias: TSOTPAM   Macro: TSOTPAM          *
*                                                                     *
*  Function:                                                          *
*    This SVC provides locally developed extensions to the            *
*    TSO / TPAM interface.                                            *
*                                                                     *
*                                                                     *
*  Input:                                                             *
*    1. Register 0 - Request Code:                                    *
*         0 => Return indication of TSO-TPAM / TSO-BATCH / BATCH      *
*         1 => Return indication of VTAM / TCAM                       *
*         2 => Return terminal type                                   *
*         3 => Return the terminal ID                                 *
*         4 => Return the terminal mode of FULL SCREEN / LINE         *
*         5 => Return SPF indicator                                   *
*         6 => Return the TSO application ID                          *
*         7 => Return terminal I/O transaction status                 *
*         8 => Set the last terminal I/O transaction to output        *
*         9 => Set the last terminal I/O transaction to input         *
*    2. Register 1 - Data Area Pointer for Request Code:              *
*         0 => Pointer to 2 full words for TSO indicator              *
*         1 => Pointer to a full word for TP access method indicator  *
*         2 => Pointer to a full word for terminal type               *
*         3 => Pointer to 2 full words for terminal ID                *
*         4 => Pointer to 2 full words for terminal mode              *
*         5 => Pointer to 2 full words for SPF indicator              *
*         6 => Pointer to 2 full words for the TSO application ID     *
*         7 => Pointer to a full word for 3270 I/O transaction status *
*                                                                     *
*  Processing:                                                        *
*    For request codes 0 thru 5 the requested information is returned *
*    when possible and if not a return code is set indicating failure.*
*    For request codes 6 and 7 the TVWAIOTR bit of the TVWAFLG6 is    *
*    set to "IN" or "OUT" as requested.                               *
*                                                                     *
*  Output:                                                            *
*    1. Data Area pointed to by Register 1 for request code:          *
*         0 => TSO indicator-                                         *
*              "TSOTPAM " => TSO running under terminal control       *
*              "TSOBATCH" => TSO running batch                        *
*              "BATCH   " => Batch job, i.e. not TSO                  *
*         1 => TP Access Method indicator-                            *
*              "VTAM" => TSO terminal running under VTAM              *
*              "TCAM" => TSO terminal running under TCAM              *
*         2 => Terminal type indicator-                               *
*              "3270" => TSO terminal is a 3270 (VTAM or TCAM)        *
*              "TWX " => TSO terminal is a TWX device (TCAM)          *
*              "2741" => TSO terminal is a 2741 (TCAM)                *
*              "1050" => TSO terminal is a 1050 (TCAM)                *
*              "3767" => TSO terminal is a 3767/3770 (VTAM)           *
*              "USER" => TSO terminal is a user defined device (VTAM) *
*         3 => Terminal ID as defined to VTAM or TCAM                 *
*         4 => Terminal mode indicator-                               *
*              "FULLSCRN" => Full screen mode                         *
*              "LINEMODE" => Line mode                                *
*         5 => SPF indicator-                                         *
*              "SPFON   " => Full screen mode                         *
*              "SPFOFF  " => Line mode                                *
*         6 => Application ID for this TSO / VTAM session             *
*         7 => 3270 terminal I/O transaction status indicator-        *
*              "IN " => 3270's last I/O was a TGET (VTAM)             *
*              "OUT" => 3270's last I/O was a TPUT                    *
*    2. Register 15 - Return Code:                                    *
*         0 => SVC completed sucessfully.                             *
*         4 => SVC was to set the I/O status, but the requested       *
*              status was the same as the request.                    *
*         8 => SVC was passed an invalid request code                 *
*        12 => SVC was not running under a TSO session connected to a *
*              terminal and thus the specified request could not be   *
*              honored.                                               *
*        16 => SVC was running under TSO / TCAM and the request is    *
*              only valid for TSO / VTAM, thus the request was not    *
*              honored.                                               *
*        20 => SVC was running under TSO / VTAM and the request is    *
*              only valid for TSO / TCAM, thus the request was not    *
*              honored.                                               *
*        24 => SVC was running under TSO but not a 3270 the request   *
*              is valid only for 3270's, thus the request was not     *
*              honored.                                               *
*                                                                     *
*  Attributes:                                                        *
*    SVC Type-3                                                       *
*    No Locks Held                                                    *
*    Reenterent                                                       *
*    Refreasable                                                      *
*    Reusable                                                         *
*                                                                     *
*  External References:                                               *
*    Routines- None                                                   *
*    Data Areas - 1. ASCB (Read Only)                                 *
*                 2. TCB  (Read Only)                                 *
*                 3. JSCB (Read Only)                                 *
*                 4. TSB  (Read Only)                                 *
*                 5. TSBX (Read Only)                                 *
*                 6. TVWA (Read and Write)                            *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*  Author:                                                            *
*      Thomas J. Bigley                                               *
*      Chicago Title and Trust Company                                *
*      37th Floor                                                     *
*      30 N. LaSalle St.                                              *
*      Chicago, Illinois 60602                                        *
*      (312) 630-6302                                                 *
*                                                                     *
*  Maintenance History:                                               *
*      1.  15 Feb 82     Initial writing                              *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
* GLOBALS                                                             *
*                                                                     *
*                Assembler Global Definitions                         *
*                                                                     *
* NOT EXECUTED                                                        *
***********************************************************************
         SPACE 2
         GBLC  &LEVEL
         GBLC  &VERSION
         GBLC  &RELEASE
         GBLC  &MOD
         GBLC  &FIX
         GBLC  &NAME
         SPACE 2
&NAME    SETC  'IGC00###' Program CSECT name (1:8)
         SPACE 2
&VERSION SETC  'V1'       Current version of program - V#
&RELEASE SETC  'R1'       Current release of program - R#
&MOD     SETC  'M0'       Current modification level - M#
&FIX     SETC  'F0'       Fix number for this modification level - F#
         SPACE 2
&LEVEL   SETC  '&VERSION'.'&RELEASE'.'&MOD'.'&FIX'
         EJECT
***********************************************************************
* PROLOG                                                              *
*                                                                     *
*             VTAM / TSO Extened Function SVC Prolog                  *
*                                                                     *
* NOT EXECUTABLE                                                      *
***********************************************************************
         SPACE 2
&NAME    START 0
         SPACE 1
         USING &NAME,SVCBASE
         B     START
         SPACE 1
         DC    CL8'&NAME',CL2' '    Program name
         DC    CL8'&LEVEL',CL2' '   Program level
         SPACE 1
         DC    C'&SYSTIME',CL1' '   Time of assembly
         DC    C'&SYSDATE',CL2' '   Date of assembly
         SPACE 1
         DC    A(&NAME)             Beginning address of program
         DC    A(ENDPGM-1)          Ending address of program
         DC    A(ENDPGM-&NAME)      Program length
         EJECT
***********************************************************************
* EQUATES                                                             *
*                                                                     *
*               Register Assignments And Equates                      *
*                                                                     *
* NOT EXECUTABLE                                                      *
***********************************************************************
         SPACE 2
R0       EQU   0    Passed Request Code
R1       EQU   1    Data Area Pointer
R2       EQU   2    Work
R3       EQU   3    CVT (Not currently used)
R4       EQU   4    TCB
R5       EQU   5    SVRB (Not currently used)
R6       EQU   6    SVC Entry Point
R7       EQU   7    ASCB
R8       EQU   8    Valid request code
R9       EQU   9    Work
R10      EQU   10   Work / JSCB
R11      EQU   11   TVWA
R12      EQU   12   TSBX
R13      EQU   13   TSB
R14      EQU   14   SVC Return Address
R15      EQU   15   Return Code
         SPACE 2
TCBBASE  EQU   R4   Task Control Block Address (TCB)
         USING TCB,TCBBASE
SVCBASE  EQU   R6   SVC Entry address
ASCBBASE EQU   R7   Address Space Control Block Address (ASCB)
         USING ASCB,ASCBBASE
REQSTCDE EQU   R8   The validated SVC request code
JSCBBASE EQU   R10  Job Step Control Block Address (JSCB)
         USING IEZJSCB,JSCBBASE
TVWABASE EQU   R11  TSO/VTAM Work Area Address (TVWA)
         USING TVWA,TVWABASE
TSBXBASE EQU   R12  TSO Terminal Status Block Extension Address (TSBX)
         USING TSBX,TSBXBASE
TSBBASE  EQU   R13  TSO Terminal Status Block Address (ASCB)
         USING TSB,TSBBASE
RETURN   EQU   R14  SVC and level return register
RTRNCODE EQU   R15  SVC Return Code
         EJECT
***********************************************************************
* SVC-###                                                             *
*                                                                     *
*            TSO / TPAM Interface Extended Function SVC               *
*                                                                     *
* LEVEL-0                                                             *
***********************************************************************
         SPACE 2
         DS    0H
START    EQU   *
         SPACE 1
         IF (C,R0,GE,=F'0'),           IF Request is valid             X
               AND,                                                    X
               (C,R0,LE,=F'9')
            LR    REQSTCDE,R0             Use the request code
            ELSE                          ELSE
            L     REQSTCDE,=F'10'         Set error request code
            ENDIF                         ENDIF
         SPACE 1
         LA    REQSTCDE,1(REQSTCDE)       Add 1 for CASE statement
         SPACE 1
         CASENTRY REQSTCDE                CASE: request code
         EJECT
         CASE  1                          CASE-1: Report TSO
           L     JSCBBASE,TCBJSCB           Point to JSCB
           IF (CLC,JSCBPSCB,GT,=F'0')       IF TSO
              IF (CLC,ASCBTSB,GT,=F'0')        IF TSO with terminal
                 MODESET EXTKEY=TCB,WORKREG=2     Set key to user
                 MVC   0(8,R1),=C'TSOTPAM '       Report TSO / TPAM
                 MODESET EXTKEY=ZERO              Set key to zero
                 ELSE                             ELSE
                 MODESET EXTKEY=TCB,WORKREG=2     Set key to user
                 MVC   0(8,R1),=C'TSOBATCH'       Report TSO / BATCH
                 MODESET EXTKEY=ZERO              Set key to zero
                 ENDIF                            ENDIF
              ELSE                             ELSE
              MODESET EXTKEY=TCB,WORKREG=2     Set key to user
              MVC   0(8,R1),=C'BATCH   '       Report BATCH
              MODESET EXTKEY=ZERO              Set key to zero
              ENDIF                            ENDIF
           SR    RTRNCODE,RTRNCODE           Indicate success
         EJECT
         CASE  2                          CASE-2: Report VTAM / TCAM
           IF (CLC,ASCBTSB,GT,=F'0')        IF TSO with terminal
              L     TSBBASE,ASCBTSB            Point to TSB
              IF (TM,TSBFLG5,TSBVTAM,O)        IF VTAM
                 MODESET EXTKEY=TCB,WORKREG=2     Set key to user
                 MVC   0(4,R1),=C'VTAM'           Report VTAM
                 MODESET EXTKEY=ZERO              Set key to zero
                 ELSE                             ELSE
                 MODESET EXTKEY=TCB,WORKREG=2     Set key to user
                 MVC   0(4,R1),=C'TCAM'           Report TCAM
                 MODESET EXTKEY=ZERO              Set key to zero
                 ENDIF                            ENDIF
              SR    RTRNCODE,RTRNCODE          Indicate success
              ELSE                             ELSE
              LA    RTRNCODE,12                Indicate not TSO / TPAM
              ENDIF                            ENDIF
         EJECT
         CASE  3                          CASE-3: Report teminal type
           IF (CLC,ASCBTSB,GT,=F'0')        IF TSO with terminal
              L     TSBBASE,ASCBTSB            Point to TSB
              IF (TM,TSBFLG5,TSBVTAM,O)        IF VTAM
                 L     TSBXBASE,TSBEXTNT          Point to TSBX
                 IF (CLI,TSBXTMTP,EQ,X'01')       IF 3270
                    MODESET EXTKEY=TCB,WORKREG=2     Set key to user
                    MVC   0(4,R1),=C'3270'           Report 3270
                    MODESET EXTKEY=ZERO              Set key to zero
                    ELSE                             ELSE
                    IF (CLI,TSBXTMTP,EQ,X'02')       IF 3767 or 3770
                       MODESET EXTKEY=TCB,WORKREG=2     Set key to user
                       MVC   0(4,R1),=C'3767'           Report 3767
                       MODESET EXTKEY=ZERO              Set key to zero
                       ELSE                             ELSE
                       MODESET EXTKEY=TCB,WORKREG=2     Set key to user
                       MVC   0(4,R1),=C'USER'           Report USER
                       MODESET EXTKEY=ZERO              Set key to zero
                       ENDIF                            ENDIF
                    ENDIF                            ENDIF
                 ELSE                             ELSE
                 IF (TM,TSBSTAT,TSB3270,O)        IF 3270
                    MODESET EXTKEY=TCB,WORKREG=2     Set key to user
                    MVC   0(4,R1),=C'3270'           Report 3270
                    MODESET EXTKEY=ZERO              Set key to zero
                    ELSE                             ELSE
                    IF (TM,TSBTERM1,TSBC2741,O)      IF 2741
                       MODESET EXTKEY=TCB,WORKREG=2     Set key to user
                       MVC   0(4,R1),=C'2741'           Report 3270
                       MODESET EXTKEY=ZERO              Set key to zero
                       ELSE                             ELSE
                       IF (TM,TSBTERM1,TSBCTWX,O)       IF TWX
                          MODESET EXTKEY=TCB,WORKREG=2     User key
                          MVC   0(4,R1),=C'TWX '           Report TWX
                          MODESET EXTKEY=ZERO              Key zero
                          ELSE                             ELSE
                          MODESET EXTKEY=TCB,WORKREG=2     User key
                          MVC   0(4,R1),=C'1050'           Report 1050
                          MODESET EXTKEY=ZERO              Key zero
                          ENDIF                            ENDIF
                       ENDIF                            ENDIF
                    ENDIF                            ENDIF
                 ENDIF                            ENDIF
              SR    RTRNCODE,RTRNCODE          Indicate success
              ELSE                             ELSE
              LA    RTRNCODE,12                Indicate not TSO / TPAM
              ENDIF                            ENDIF
         EJECT
         CASE  4                          CASE-4: Report terminal mode
           IF (CLC,ASCBTSB,GT,=F'0')        IF TSO with terminal
              L     TSBBASE,ASCBTSB            Point to TSB
              IF (TM,TSBFLG5,TSBVTAM,O)        IF VTAM
                 L     TSBXBASE,TSBEXTNT          Point to TSBX
                 L     TVWABASE,TSBXTVWA          Point to the TVWA
                 IF (TM,TVWAFLG5,TVWAFSM,O)       IF FULL SCREEN
                    MODESET EXTKEY=TCB,WORKREG=2     Set key to user
                    MVC   0(8,R1),=C'FULLSCRN'       Report full screen
                    MODESET EXTKEY=ZERO              Set key to zero
                    ELSE                             ELSE
                    MODESET EXTKEY=TCB,WORKREG=2     Set key to user
                    MVC   0(8,R1),=C'LINEMODE'       Report line mode
                    MODESET EXTKEY=ZERO              Set key to zero
                    ENDIF                            ENDIF
                 SR    RTRNCODE,RTRNCODE          Indicate success
                 ELSE                             ELSE
                 LA    RTRNCODE,16                Indicate not VTAM
                 ENDIF                            ENDIF
              ELSE                             ELSE
              LA    RTRNCODE,12                Indicate not TSO / TPAM
              ENDIF                            ENDIF
         EJECT
         CASE  5                          CASE-5: Report SPF
           IF (CLC,ASCBTSB,GT,=F'0')        IF TSO with terminal
              L     TSBBASE,ASCBTSB            Point to TSB
              IF (TM,TSBFLG5,TSBSPF,O)         IF SPF
                 MODESET EXTKEY=TCB,WORKREG=2     Set key to user
                 MVC   0(8,R1),=C'SPFON   '       Report SPF on
                 MODESET EXTKEY=ZERO              Set key to zero
                 ELSE                             ELSE
                 MODESET EXTKEY=TCB,WORKREG=2     Set key to user
                 MVC   0(8,R1),=C'SPFOFF  '       Report SPF off
                 MODESET EXTKEY=ZERO              Set key to zero
                 ENDIF                            ENDIF
              SR    RTRNCODE,RTRNCODE          Indicate success
              ELSE                             ELSE
              LA    RTRNCODE,12                Indicate not TSO / TPAM
              ENDIF                            ENDIF
         EJECT
         CASE  6                          CASE-6: Report terminal ID
           IF (CLC,ASCBTSB,GT,=F'0')        IF TSO with terminal
              L     TSBBASE,ASCBTSB            Point to TSB
              LM    R9,R10,TSBTRMID            Get terminal ID
              MODESET EXTKEY=TCB,WORKREG=2     Set key to user
              STM   R9,R10,0(R1)               Report terminal ID
              MODESET EXTKEY=ZERO              Set key to zero
              SR    RTRNCODE,RTRNCODE          Indicate success
              ELSE                             ELSE
              LA    RTRNCODE,12                Indicate not TSO / TPAM
              ENDIF                            ENDIF
         EJECT
         CASE  7                          CASE-7: Report application ID
           IF (CLC,ASCBTSB,GT,=F'0')        IF TSO with terminal
              L     TSBBASE,ASCBTSB            Point to TSB
              IF (TM,TSBFLG5,TSBVTAM,O)        IF VTAM
                 L     TSBXBASE,TSBEXTNT          Point to TSBX
                 L     TVWABASE,TSBXTVWA          Point to the TVWA
                 LM    R9,R10,TVWAPPL             Get application ID
                 MODESET EXTKEY=TCB,WORKREG=2     Set key to user
                 STM   R9,R10,0(R1)               Report application ID
                 MODESET EXTKEY=ZERO              Set key to zero
                 SR    RTRNCODE,RTRNCODE          Indicate success
                 ELSE                             ELSE
                 LA    RTRNCODE,16                Indicate not VTAM
                 ENDIF                            ENDIF
              ELSE                             ELSE
              LA    RTRNCODE,12                Indicate not TSO / TPAM
              ENDIF                            ENDIF
         EJECT
         CASE  8                          CASE-8: Report I/O status
           IF (CLC,ASCBTSB,GT,=F'0')        IF TSO with terminal
              L     TSBBASE,ASCBTSB            Point to TSB
              IF (TM,TSBFLG5,TSBVTAM,O)        IF VTAM
                 L     TSBXBASE,TSBEXTNT          Point to TSBX
                 L     TVWABASE,TSBXTVWA          Point to the TVWA
                 IF (TM,TVWAFLG6,TVWAIOTR,O)      IF I/O Status IN
                    MODESET EXTKEY=TCB,WORKREG=2     Set key to user
                    MVC   0(4,R1),=C'IN  '           Report IN
                    MODESET EXTKEY=ZERO              Set key to zero
                    ELSE                             ELSE
                    MODESET EXTKEY=TCB,WORKREG=2     Set key to user
                    MVC   0(4,R1),=C'OUT '           Report OUT
                    MODESET EXTKEY=ZERO              Set key to zero
                    ENDIF                            ENDIF
                 SR    RTRNCODE,RTRNCODE          Indicate success
                 ELSE                             ELSE
                 LA    RTRNCODE,16                Indicate not VTAM
                 ENDIF                            ENDIF
              ELSE                             ELSE
              LA    RTRNCODE,12                Indicate not TSO / TPAM
              ENDIF                            ENDIF
         EJECT
         CASE  9                          CASE-9: Set I/O to output
           IF (CLC,ASCBTSB,GT,=F'0')        IF TSO with terminal
              L     TSBBASE,ASCBTSB            Point to TSB
              IF (TM,TSBFLG5,TSBVTAM,O)        IF VTAM
                 L     TSBXBASE,TSBEXTNT          Point to TSBX
                 L     TVWABASE,TSBXTVWA          Point to the TVWA
                 IF (TM,TVWAFLG6,TVWAIOTR,O)      IF I/O Status IN
                    NI    TVWAFLG6,X'FF'-TVWAIOTR    Turn off - output
                    SR    RTRNCODE,RTRNCODE          Indicate success
                    ELSE                             ELSE
                    LA    RTRNCODE,4                 Already set
                    ENDIF                            ENDIF
                 ELSE                             ELSE
                 LA    RTRNCODE,16                Indicate not VTAM
                 ENDIF                            ENDIF
              ELSE                             ELSE
              LA    RTRNCODE,12                Indicate not TSO / TPAM
              ENDIF                            ENDIF
         EJECT
         CASE  10                         CASE-10: Set I/O to input
           IF (CLC,ASCBTSB,GT,=F'0')        IF TSO with terminal
              L     TSBBASE,ASCBTSB            Point to TSB
              IF (TM,TSBFLG5,TSBVTAM,O)        IF VTAM
                 L     TSBXBASE,TSBEXTNT          Point to TSBX
                 L     TVWABASE,TSBXTVWA          Point to the TVWA
                 IF (TM,TVWAFLG6,TVWAIOTR,Z)      IF I/O Status OUT
                    OI    TVWAFLG6,TVWAIOTR          Turn on - input
                    SR    RTRNCODE,RTRNCODE          Indicate success
                    ELSE                             ELSE
                    LA    RTRNCODE,4                 Already set
                    ENDIF                            ENDIF
                 ELSE                             ELSE
                 LA    RTRNCODE,16                Indicate not VTAM
                 ENDIF                            ENDIF
              ELSE                             ELSE
              LA    RTRNCODE,12                Indicate not TSO / TPAM
              ENDIF                            ENDIF
         EJECT
         CASE  11                         CASE-11: Invalid request code
           LA    RTRNCODE,8                  Indicate invalid request
         ENDCASE
         SPACE 1
         BR    RETURN                     Return
         EJECT
***********************************************************************
* CONSTANTS                                                           *
*                                                                     *
*                        Rear Only Constants                          *
*                                                                     *
* Not Executable                                                      *
***********************************************************************
         SPACE 2
         LTORG
         SPACE 2
ENDPGM   EQU   *
         EJECT
         PRINT GEN
         IHAASCB
         EJECT
         IEZJSCB
         EJECT
         IKJTCB
         EJECT
         IKTTVWA
         EJECT
         IKJTSB
         EJECT
         IKTTSBX
         SPACE 3
         END
