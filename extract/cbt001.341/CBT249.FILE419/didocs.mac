DIDOCS   TITLE 'D I D O C S - DISPLAY CONSOLE SUPPORT FOR DCMS '
         SPACE
*.
* DIDOCS
*
*
* THIS PROGRAM WILL DO CONSOLE SIMULATION FOR A DCMS TERMINAL.
* IT GOES OUT AND FINDS A GRAPHICS (3277) ACTIVE CONSOLE AND USES
* THAT CONSOLES SCREEN IMAGE FOR OUTPUT AND UCM-ID FOR SVC 34.
* THIS PROGRAM REQUIRES AUTHORIZATION TO USE THE SVC 34 INTERFACE
*  AND MODESET MACRO.
* CODE HAS BEEN MODIFIED TO ALLOW THIS VERSION TO RUN UNDER SP 1.3.2
*  AND SP 2.1.2.  OUR INSTALLATION (HAMILTON STANDARD) HAS RUN THIS
*  SAME CODE UNDER SP1.3.2 AND SP2.1.2 WITH NO MODIFICATIONS.
* SPECIAL CODE HAS BEEN ADDED TO SUPPORT OUR CONSOLE CONFIFURATION.
* JES COMMANDS CAN BE ENTERED WITHOUT MODIFICATION!!
* OS COMMANDS MUST BE PREFIXED WITH A LETTER "R".
*    EXAMPLES:   R64U OR RS JES2
* WE RUN MSX/MSI/GCD HERE SO OS COMMANDS CAN ALSO BE ENTERED AS
*  FOLLOWS: .A S JES2   OR   .B S JES2 (WE HAVE 2 SYSTEMS)
* CONSOLES CAN BE SWITCHED BY ENTERING A CX WHERE X IS CONSOLE
*  IDENTIFIER FROM "D C" OUTPUT - INSTALLATION DEPENDENT<=============
* CAN ALSO SWITCH CONSOLES BY TYPING IN CONSOLE ADDRESS, THIS IS ALSO
*  DEPENDENT ON EACH INSTALLATIONS CONSOLE ADDRESSES.
*
*
* TO USE IT SIMPLY SAY.. DIDOCS (OR SOMETHING YOUR INSTALLATION HAS
*                                TO RUN PROGRAMS AUTHORIZED THRU TSO)
*
* ERROR MESSAGES -
*  NO ACCEPTABLE (3277) CONSOLES FOUND
*
*
* A NULL INPUT CAUSES THE SCREEN TO BE UPDATED. (SO YOU CAN
* USE IT UN-AUTHORIZED SO LONK AS YOU DONT TYPE ANYTHING IN).
*
* COMMANDS ARE NOT BROADCAST TO THE CONSOLE BEING USED SO YOU CAN
* HAVE SOME FUN WITH YOUR OPERATORS. THE COMMAND ENTERED IS PLACED
* ON THE LINE BELOW THE INPUT LINE.
*
*
*    .  -----
*      × PA1 ×   TERMINATES DIDOCS, ALSO "//" OR "END" OR "/*"
*      ×     ×
*       -----
*
* IF YOU HAVE ANY QUESTIONS PLEASE CALL:
*
*     TONU KUUSIK            THE ORIGINAL VERSION
*     HAMILTON STANDARD             BY
*     AIRPORT ROAD           FRED LUDDY OF AMDAHL CORP.
*     WINDSOR LOCKS, CT. 06096
*  PHONE:
*     (203) - 623 - 1621   EXT. 5670
*
*.
CONS     XSTART ,
         EJECT
*
         TITLE 'INITIALIZATION CODE FOR SP3/XA VERSION'
         EXTRACT TPKASID,'S',FIELDS=(ASID)  GET MY OWN ASID
         L     R1,CVTPTR                GET CVT POINTER
         L     R1,CVTCUCB-CVT(R1)       UCMBASE POINTER
         USING UCM,R1                   ADDRESS UCMBASE
         MVC   COMMASID(2),UCMCTID      GET ASID OF COMMTASK
         DROP  R1                       DROP UCMBASE ADDR
         MODESET KEY=ZERO
         AXEXT ASID=COMMASID            GET AX OF COMMTASK
         STH   R0,COMMAX                STORE IT
         AXSET AX=COMMAX                SET OUR AX TO IT
         STH   R0,ORIGAX                STORE ORIGINAL AX
         MODESET KEY=NZERO
         TITLE 'D I D O C S - DISPLAY CONSOLE SUPPORT FOR DCMS '
WJCSTF   EQU   *
         MVC   UNITWJCC,UNITWJCA
         LA    R1,16
         L     R1,0(R1)
         L     R1,204(R1)
         CLI   22(R1),X'AF'
         BE    WJCSTX
         MVC   UNITWJCC,UNITWJCB
         MVC   CONSA1,CONSB1
         MVC   CONSA2,CONSB2
         MVC   CONSA3,CONSB3
         MVC   ERMSG2+30(30),ERMSG3+30
WJCSTX   EQU   *
         MVC   UNITWJC,UNITWJCC
         MVC   CONSA1,UNITWJCC
         LR    R1,R5
*
WJCST    EQU   *
         MODESET KEY=ZERO
         L     R1,CVTPTR           AND IN THE BEGINNING...
         L     R1,CVTCUCB-CVT(R1)  ...
         USING UCM,R1
         LM    R3,R5,UCMVEA        R3 -> TO THE FIRST UCME
*                                   R4 CONTAINS UCME LENGTH
*                                    R5 -> TO THE LASST UCME
DID0     EQU   *                   SEARCH FOR SOMETHING USEFUL
         USING UCMLIST,R3
***
         L     R1,UCMUCB           DEBUGGING
         MVC   UNITXXX(3),13(R1)   ...
***
         TM    UCMATR,UCMUF        IS IT ACTIVE ?
         BZ    DID1                NO.. UNUSEABLE
         L     R10,UCMXB           IS IT GRAPHICS ?
         LTR   R10,R10             ...
         BZ    DID1                NO.. USELESS
         USING DCMTSRT,R10         POINT TO THE DCM
         L     R6,DCMADTRN         FIND  THE PAGEABLE DCM (TDCM)
         LTR   R6,R6               DOES IT EXIST ?
         BZ    DID1                NO...
         USING DCMSTRT,R6          A LITTLE
***TPK***CLI   DCMIONDX,X'10'      IS IT A 3270 ? CAUSE 0C4 IN SP3
         MVC   XUCMID,UCMID        SAVE THIS
         CLC   UNITXXX,UNITWJC
         BNE   DID1
         BE    GOTONE              YES BY DINGLES !
*                                      DINGLES ?
DID1     EQU   *
         BXLE  R3,R4,DID0          GET THE NEXT ENTRY
         MVC   SCREEN(79),ERMSG NO ACCEPTABLE CONSOLES
         MVC   SCREEN+79(79),ERMSG2
         MVC   SCREEN+158(79),ERMSG3
         MVC   UNITXXX,UNITWJCC
         BAL   R9,WRITE            WRITE THE SCREEN
*        B     END1                FINI
         B     GOT2
         EJECT
*
* A CONSOLE HAS BEEN FOUND COPY THE SCREEN AND DISPLAY IT FER THE USER
*        R3 ->  UCME
*        R10 -> RDCM
*        R6 ->  TDCM     (NOW IN THE ADDRESS SPACE OF COMMTASK)
*
GOTONE   EQU   *
         MODESET KEY=ZERO
         LH    R1,COMMASID             ASID OF COMMTASK        TPK
         SSAR  R1                      SASID = COMMTASK        TPK
         LA    R9,2                    LENGTH OF MOVE          TPK
         XR    R11,R11                 STORAGE KEY = 0         TPK
         MVCP  PGMMSGAL(R9),DCMMSGAL,R11                       TPK
         LA    R9,4                    LENGTH OF MOVE          TPK
         XR    R11,R11                 STORAGE KEY = 0         TPK
         MVCP  PGMASCRN(R9),DCMASCRN,R11                       TPK
         L     R7,PGMASCRN                                     TPK
         XR    R1,R1                                           TPK
         LH    R1,PGMMSGAL                                     TPK
******** LH    R1,DCMMSGAL         NUMBER  OF LINES IN MSG AREA
******** L     R7,DCMASCRN         POINT TO  THE  FIRST INPUT LINE
         LA    R8,SCREEN           OUTPUT LINE
GOT1     EQU   *
         LA    R9,74               LENGTH OF MOVE            TPK
         XR    R11,R11             STORAGE KEY = 0           TPK
         MVCP  0(R9,R8),4(R7),R11                            TPK
*******  MVC   0(74,R8),4(R7)      MOVE A LINE               TPK
         TR    0(74,R8),BLANKTAB   GET IT READABLE
         LA    R8,79(,R8)          OUR SIZE
         LA    R7,84(,R7)          THEIRS
         BCT   R1,GOT1             GET EM ALL
*******  L     R1,DCMAINS          DOESN'T APPEAR TO BE USED
         LA    R8,79(,R8)          SKIP PFK LINE
         MVC   0(UNITLEN,R8),UNITMSG MOVE OUR INSTRUCTION LINE
         LA    R8,(3*79)(,R8)      SKIP INPUT LINE
         MVC   0(L'DCMSWARN,R8),DCMSWARN
         LH    R1,MYASID           SET SASID = PASID = HASID   TPK
         SSAR  R1                  DOIT                        TPK
         MODESET KEY=NZERO                                     TPK
         BAL   R9,WRITE            DOIT JACK !!!
         CLI   IOCBAID,AIDPA1      WELL ?
         BE    END1
GOT2     EQU   *
         CLI   ENTRLNE,C' '        NULL INPUT ?
         STFSMODE ON
         BE    GOTONE
         CLI   ENTRLNE,C'$'        JES COMMAND ?
         BE    CONTIN
         CLI   ENTRLNE,C'.'        MSX COMMAND ?
         BE    CONTIN
         CLI   ENTRLNE,C'R'        CONSOLE REPLY OR OS COMMAND?
         BNE   CONTIN0
         MVC   ENTRLNE(79),ENTRLNE+1
         MVI   ENTRLNE+79,C' '
         B     CONTIN
CONTIN0  CLC   ENTRLNE(3),UNITWJCC
         BNE   CONTIN1
         MVC   UNITWJC,UNITWJCC
         MVI   ENTRLNE,C' '
         MVC   ENTRLNE+1(79),ENTRLNE RESET INPUT
         B     WJCST
CONTIN1  CLC   ENTRLNE(3),CONSA2
         BNE   CONTIN2
         MVC   UNITWJC,CONSA2
         MVI   ENTRLNE,C' '
         MVC   ENTRLNE+1(79),ENTRLNE RESET INPUT
         B     WJCST
CONTIN2  CLC   ENTRLNE(3),CONSA3
         BNE   CONTIN2X
         MVC   UNITWJC,CONSA3
         MVI   ENTRLNE,C' '
         MVC   ENTRLNE+1(79),ENTRLNE RESET INPUT
         B     WJCST
CONTIN2X CLC   ENTRLNE(3),CONSA4
         BNE   CONTIN2Y
         MVC   UNITWJC,CONSA4
         MVI   ENTRLNE,C' '
         MVC   ENTRLNE+1(79),ENTRLNE RESET INPUT
         B     WJCST
CONTIN2Y CLC   ENTRLNE(3),CONSA5
         BNE   CONTIN3
         MVC   UNITWJC,CONSA5
         MVI   ENTRLNE,C' '
         MVC   ENTRLNE+1(79),ENTRLNE RESET INPUT
         B     WJCST
CONTIN3  EQU   *
         CLC   ENTRLNE(2),=C'C1'
         BNE   CONTIN4
         MVC   UNITWJC,CONSA1
         MVI   ENTRLNE,C' '
         MVC   ENTRLNE+1(79),ENTRLNE RESET INPUT
         B     WJCST
CONTIN4  CLC   ENTRLNE(2),=C'C2'
         BNE   CONTIN4X
         MVC   UNITWJC,CONSA2
         MVI   ENTRLNE,C' '
         MVC   ENTRLNE+1(79),ENTRLNE RESET INPUT
         B     WJCST
CONTIN4X CLC   ENTRLNE(2),=C'C4'
         BNE   CONTIN4Y
         MVC   UNITWJC,CONSA4
         MVI   ENTRLNE,C' '
         MVC   ENTRLNE+1(79),ENTRLNE RESET INPUT
         B     WJCST
CONTIN4Y CLC   ENTRLNE(2),=C'C5'
         BNE   CONTIN5
         MVC   UNITWJC,CONSA5
         MVI   ENTRLNE,C' '
         MVC   ENTRLNE+1(79),ENTRLNE RESET INPUT
         B     WJCST
CONTIN5  CLC   ENTRLNE(2),=C'C3'
         BNE   CONTIN6
CONT560  MVC   UNITWJC,CONSA3
         MVI   ENTRLNE,C' '
         MVC   ENTRLNE+1(79),ENTRLNE RESET INPUT
         B     WJCST
CONTIN6  CLC   ENTRLNE(2),=C'/*'
         BE    CONTEND
         CLC   ENTRLNE(2),=C'//'
         BE    CONTEND
         CLC   ENTRLNE(3),=C'END'
         BE    CONTEND
         MVC   UNITWJC(3),ENTRLNE
         MVI   ENTRLNE,C' '
         MVC   ENTRLNE+1(79),ENTRLNE RESET INPUT
         B     WJCST
CONTEND  EQU   *
***TPK***ERASES THE SCREEN
         B     END1
CONTIN   EQU   *
*B560    B     CONT560        COMMENT FOR 480, DO BRANCH FOR 560
         MVI   CMNDBUF,C' '
         MVC   CMNDBUF+1(79),CMNDBUF
         MVC   CMNDBUF(79),ENTRLNE
         MVI   ENTRLNE,C' '
         MVC   ENTRLNE+1(79),ENTRLNE RESET INPUT
         OC    CMNDBUF(79),ENTRLNE
         MVC   DCMSWARN(L'DCMSWARN),CMNDBUF
         MODESET KEY=ZERO
         LA    R1,CMND             WELL ?
         XR    R0,R0
         IC    R0,XUCMID           OUR MAN IN THE COMM TASK
         SVC   34                  FIRE HIM THRU
         LR    R2,R15              SAVE RETURN CODE
         MODESET KEY=NZERO
         STIMER WAIT,BINTVL=WAITTIME
         LTR   R15,R2
         BZ    GOTONE              FIND OUT WUTS HAPPENIN
         SPACE  1
***
* SEE IF  WE ARE HERE BY A PREVIOUS MARRIAGE ...
*
         SPACE 1
         MVC   ENTRLNE(LNOTAUTH),NOTAUTH
         LR    R1,R15              SHOW R/C
         BAL   R9,CVTPRT           DO IT
         STCM  R15,B'1111',NOTR15  ...
         BAL   R9,WRITE            ...
         MVI   ENTRLNE,C' '
         MVC   ENTRLNE+1(79),ENTRLNE RESET INPUT
         B     GOTONE
END1     EQU   *
         STFSMODE OFF
         ERASES THE SCREEN
         L     R13,4(R13)
         RETURN (14,12),RC=0      RETURN TO XCNTRL
         EJECT
CVTPRT   EQU   *
         ST    R1,CVTB
         UNPK  CVTA(9),CVTB(5)
         TR    CVTA(8),HEXTAB
         LM    R14,R15,CVTA
         BR    R9
         SPACE 2
WRITE    EQU   *
         CLI   UNITXXX,C'B'             WJC83028
         BNE   WRITE2                   WJC83028
         MVC   SCREEN+1580(50),UNITMSG  WJC82263 UNCOMNT FOR 3279
         MVC   SCREEN+1659(79),ERMSG3   WJC82263 UNCOMNT FOR 3279
WRITE2   EQU   *                        WJC83028
         TRMIO IOCB,FORMAT=SCR1,IMAGE=SCREEN BEEP=YES
         BR    R9
         TITLE 'D I D O C S - DATA AREAS AND THE LIKE'
IOCB     IOCB
SCR1     SFMT
SCREEN   FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79,ALPHA,CURSOR=AFTER
         FIELD 79
SCR24    FIELD 79
         SFEND
WAITTIME DC    F'0100'             WAIT 1 SECONDS
*
*
UNITWJC  DC    CL3'   '
*
UNITWJCA DC    CL3'480'     B51 A168  <<==CHANGE THESE ADDR CONSTANTS
CONSA1   DC    CL3'480'  C1 B51       <<==   "    """
CONSA2   DC    CL3'5CB'  C2 BA1       <<==   "    """
CONSA3   DC    CL3'560'  C3           <<==   "    """
CONSA4   DC    CL3'BA1'  C4           <<==   "    """
CONSA5   DC    CL3'BA0'  C5           <<==   "    """
*                                     <<==   "    """
UNITWJCB DC    CL3'4E0'         B168  <<==   "    """
CONSB1   DC    CL3'4E0'  C1           <<==   "    """
CONSB2   DC    CL3'4E0'  C2           <<==   "    """
CONSB3   DC    CL3'4E0'  C3           <<= AS THEY CHANGE IN THE SYSTEM
*
UNITWJCC DC    CL3'   '         WHICHEVER CPU YOUR ON
*
*
SCREEN   DC    24CL79' '           THISS IS THE MAN
ENTRLNE  EQU   SCREEN+(79*21)      WOOPS
CVTA     DC    D'0',X'0'               PLUS A GARBAGE BYTE
CVTB     DC    F'0'
HEXTAB   EQU   *-C'0'
         DC    C'0123456789ABCDEF'
ERMSG    DC    C'>>> NO ACCEPTABLE (3277)  CONSOLES FOUND,             X
                                         '
ERMSG2   DC    C'>>> RE-ENTER CONSOLE ADDRESS!! (480 / 5CB / 560 / BA1 X
               / BA0)                    '
ERMSG3   DC    C'                                                      X
                                         '
DCMSWARN DC    C'IEE163I MODE= DCMS'
         SPACE 1
UNITMSG  DC    C'DCMS SIMULATED CONSOLE USING DIDOCS CONSOLE AT-'
UNITXXX  DC    CL3' '
UNITLEN  EQU   *-UNITMSG
         SPACE 1
NOTAUTH  DC    C'*** POSSIBLY NOT AUTHORIZED SVC 34 R/C = '
NOTR15   DC    CL4' '
LNOTAUTH EQU   *-NOTAUTH
         SPACE 1
CMND     DC    H'75',H'0'
CMNDBUF  DC    CL80' '
CMNDLEN  EQU   *-CMND
XUCMID   DC    X'0'
         EJECT
         TITLE 'DATA AREA ADDED FOR MVS/SP3'
TPKASID  DC    F'0'
         ORG   TPKASID+2
MYASID   DS    H
         ORG
AX0      DC    H'0'               AUTH INDEX OF 0
AX1      DC    H'1'               AUTH INDEX OF 1
PGMMSGAL DC    H'0'               NUMBER OF MESSAGE LINES ON SCREEN
PGMASCRN DC    F'0'               ADDRESS OF FIRST CONSOLE BUFFER LINE
PGMMAINS DC    F'0'               ADDRESS OF CONSOLE INSTRUCTION LINE
COMMASID DC    H'3'               ASID OF COMMTASK ADDRESS SPACE
COMMAX   DC    H'0'               AX OF COMMTASK
ORIGAX   DC    H'0'               ORIGINAL AX OF OUR TASK
         EJECT
         TITLE 'D I D O C S - LITERALS PLUS TRANSLATE TABLE'
         LTORG
BLANKTAB DC    CL256' '
         ORG   BLANKTAB+C'Ö'
         DC    C'Ö.<(+×',X'50'
         ORG   BLANKTAB+C'!'
         DC    C'!$*);^-/'
         ORG   BLANKTAB+C','
         DC    C',%_>?'
         ORG   BLANKTAB+C':'
         DC    C':#@''="'
         ORG   BLANKTAB+X'81'      TRANSLATE LOWER CASE TO UPPER
         DC    C'ABCDEFGHI'
         ORG   BLANKTAB+X'91'      ...
         DC    C'JKLMNOPQR'
         ORG   BLANKTAB+X'A2'      ...
         DC    C'STUVWXYZ '
         ORG   BLANKTAB+C'A'
         DC    C'ABCDEFGHI'
         ORG   BLANKTAB+C'J'
         DC    C'JKLMNOPQR'
         ORG   BLANKTAB+C'S'
         DC    C'STUVWXYZ '
         ORG   BLANKTAB+C'0'
         DC    C'0123456789'
         ORG
         TITLE 'MVS UCM DEFINITION'
         IEECUCM FORMAT=NEW
         TITLE 'MVS RESIDENT DCM DEFINITION (RDCM)'
         IEERDCM
         TITLE 'MVS TRANSIENT DCM DEFINITION (TDCM)'
         IEETDCM
         TITLE 'MVS CVT DEFINITION'
         CVT   DSECT=YES
         END
