SPFCOPY  TITLE 'SPFCOPY  -  COPY TEMPORARY DATA SET INTO SPF MEMBER'
***********************************************************************
*                                                                     *
*                                                                     *
*        PURPOSE/FUNCTION:                                            *
*                                                                     *
*              1. COPY A 'CARD' DECK FROM A TEMPORARY DATA SET INTO   *
*                 AN SPF LIBRARY, MAINTAINING INTEGRITY BY            *
*                 ENQUEUING ON 'SPFDSN'/DSNAME                        *
*        OUTPUT:                                                      *
*              PDS MEMBER                                             *
*              DIRECTORY ENTRY                                        *
*                                                                     *
*        RETURN CODES:                                                *
*              0 = NORMAL COMPLETION                                  *
*              4 = SPF LIBRARY DIRECTORY WAS FULL OR DIRECTORY I/O    *
*                  ERROR OCCURRED                                     *
*                                                                     *
*                                                                     *
*        DATA SETS REQUIRED:                                          *
*              SYSPRINT - DATA SET TO RECEIVE MESSAGES                *
*              SYSUT1 - DATA SET CONTAINING OBJECT DECK               *
*              SYSUT2 - PDS TO RECEIVE OBJECT DECK                    *
*                                                                     *
*                                                                     *
*        REGISTER USAGE:                                              *
*              R12 - BASE REGISTER (RBASE)                            *
*              R11 - SECOND BASE REGISTER (RBASE2)                    *
*              R13 - SAVE/WORK AREA POINTER (RSAVE)                   *
*                                                                     *
*                                                                     *
*        ABEND CODES:                                                 *
*              2 - SYSPRINT DATA SET WOULD NOT OPEN                   *
*              3 - MEMBER NOT GIVEN ON SYSUT2 DD STATEMENT            *
*              4 - SYSUT1 DATA SET WOULD NOT OPEN                     *
*              5 - SYSUT2 DATA SET WOULD NOT OPEN                     *
*              6 - IMPOSSIBLE RETURN FROM STOW                        *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*              MACRO DEFINITIONS                                      *
*                                                                     *
***********************************************************************
         MACRO
         XRABEND &N,&DUMP,&STEP
XRABEND&N ABEND &N,&DUMP,&STEP
         MEND
         EJECT
***********************************************************************
*                                                                     *
*              REGISTER EQUATES                                       *
*                                                                     *
***********************************************************************
SPFCOPY  CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
RPARM    EQU   R1                       POINTER TO PARM INFORMATION
RBASE    EQU   R12                      BASE REGISTER
RSAVE    EQU   R13                      SAVE/WORK AREA POINTER
         EJECT
***********************************************************************
*                                                                     *
*              SPFCOPY ENTRY POINT                                    *
*                                                                     *
***********************************************************************
XR000    STM   R14,R12,12(R13)          SAVE REGISTERS
         LR    RBASE,R15                SET UP BASE REGISTER
         USING XR000,RBASE
         GETMAIN R,LV=XRWORKLN          GET CORE FOR SAVE/WORK AREA
         ST    R1,8(0,R13)              LINK BOTH
         ST    R13,4(0,R1)              SAVEAREAS
         LR    RSAVE,R1                 GET ADDR OF SAVE/WORK AREA
         USING XRWORK,RSAVE
         MVI   XRFLGS2,0                CLEAR FLAGS
         MVC   XROBJID,XRBLANKS         INITIALIZE OBJECT DECK ID
         EJECT
***********************************************************************
*                                                                     *
*              OPEN DATA SETS                                         *
*                                                                     *
***********************************************************************
         MVC   XRDCBOUT,XRLSTOU         INSTALL DCB IN WORKAREA
         LA    R1,XRDCBOUT              GET DCB ADDR
         ST    R1,XRDCBLST              STORE DCB ADDRS IN OPEN PLIST
         OC    XRDCBLST,XROPENL         OR IN FLAG BYTES
         OPEN  MF=(E,XRDCBLST)          OPEN LISTING DCBS
         USING IHADCB,R1
         LA    R1,XRDCBOUT              GET DCB ADDR
         TM    DCBOFLGS,X'10'           DID DCB OPEN?
         BNO   XRABEND2                 BRANCH IF NO - ABEND
         EJECT
***********************************************************************
*                                                                     *
*              COPY OBJECT DECK TO LIBRARY                            *
*                                                                     *
***********************************************************************
         MVC   XRDCBPCH,XROBJIN         INSTALL DCB IN WORKAREA
         MVC   XRDCBLIB,XROBJOU         INSTALL DCB IN WORKAREA
         LA    R0,XRDCBPCH              GET DCB ADDR
         LA    R1,XRDCBLIB              GET DCB ADDR
         STM   R0,R1,XRDCBOBJ           STORE DCB ADDRS IN OPEN PLIST
         OC    XRDCBOBJ,XROPENO         OR IN FLAG BYTES
         USING IHADCB,R1
         LA    R0,XREXLST               GET ADDR OF DCB EXIT LIST
         O     R0,DCBRECFM              OR IN RECFM BITS
         ST    R0,DCBEXLST              STORE EXIT LIST ADDR / RECFM
         DROP  R1
         LA    R0,XRJFCB                GET JFCB AREA ADDR
         ST    R0,XREXLST               STORE JFCB ADDR IN EXIT LIST
         MVI   XREXLST,X'87'            SET JFCB AREA/END OF LIST BITS
         XC    XRJFCB,XRJFCB            ZERO OUT JFCB
         RDJFCB MF=(E,XRDCBOBJ+4)       READ IN JFCB
         NC    XRJFCB,XRJFCB            IS JFCB STILL ZERO?
         BZ    XRABEND5                 BRANCH IF YES - NO JFCB - ABEND
         CLC   XRJFCB+44(8),XRBLANKS    MEMBER SPECIFIED?
         BE    XRABEND3                 BRANCH IF NO - ABEND
         MVC   XROBJID,XRJFCB+44        SAVE MEMBER NAME
         OPEN  MF=(E,XRDCBOBJ)          OPEN OBJECT DCBS
         USING IHADCB,R1
         LA    R1,XRDCBPCH              GET DCB ADDR
         TM    DCBOFLGS,X'10'           DID DCB OPEN?
         BNO   XRABEND4                 BRANCH IF NO - ABEND
         LA    R1,XRDCBLIB              GET DCB ADDR
         TM    DCBOFLGS,X'10'           DID DCB OPEN?
         BNO   XRABEND5                 BRANCH IF NO - ABEND
         LH    R0,DCBBLKSI              GET SIZE OF A BLOCK
         DROP  R1
         GETMAIN R,LV=(0)               GET BUFFER OF APPROPRIATE SIZE
         ST    R1,XROBUFAD              SAVE BUFFER ADDRESS
         BAL   R14,XRSETOBJ             GO SET UP BUFFER POINTERS
         MVC   XRDECB,XRWRITE           INSTALL DECB IN WORKAREA
         BAL   R14,XRENQIT              ENQ ON SYSUT2
         EJECT
***********************************************************************
*                                                                     *
*              COPY OBJECT DECK                                       *
*                                                                     *
***********************************************************************
XR855    BAL   R14,XRGETOBJ             READ A CARD
         BAL   R14,XRPUTOBJ             WRITE IT OUT
         B     XR855                    LOOP TIL EOF
         EJECT
***********************************************************************
*                                                                     *
*              STOW MEMBER IN DIRECTORY                               *
*                                                                     *
***********************************************************************
XR860    EQU   *
         XC    XRTTRC,XRTTRC            CLEAR TTR AND CONTROL BYTE
         BAL   R14,XRCLROBJ             FLUSH SHORT BLOCK
         STOW  XRDCBLIB,XRSTWLST,R      STOW MEMBER NAME/TTR/STAMP
         B     XR867(R15)               BRANCH ON STOW RETURN CODE
XR867    B     XR870                    MEMBER REPLACED
         B     XRABEND6                 IMPOSSIBLE CONDITION WITH R OPT
         B     XR875                    MEMBER ADDED - NOT FOUND
         B     XR880                    DIRECTORY FULL
         B     XR885                    DIRECTORY I/O ERROR
XR870    LA    R2,XRMSGRPL              POINT TO MESSAGE
         LA    R3,L'XRMSGRPL-1          GET MSG LEN MINUS ONE FOR EX
         B     XR895                    GO PRINT MESSAGES
XR875    LA    R2,XRMSGADD              POINT TO MESSAGE
         LA    R3,L'XRMSGADD-1          GET MSG LEN MINUS ONE FOR EX
         B     XR895                    GO PRINT MESSAGES
XR880    LA    R2,XRMSGFUL              POINT TO MESSAGE
         LA    R3,L'XRMSGFUL-1          GET MSG LEN MINUS ONE FOR EX
         OI    XRFLGS2,XRDIRERR         OBJLIB DIRECTORY ERROR
         B     XR895                    GO PRINT MESSAGE
XR885    LA    R2,XRMSGIOE              POINT TO MESSAGE
         LA    R3,L'XRMSGIOE-1          GET MSG LEN MINUS ONE FOR EX
         OI    XRFLGS2,XRDIRERR         OBJLIB DIRECTORY ERROR
         B     XR895                    GO PRINT MESSAGE
XR895    MVI   XRLSTBUF,C' '            BLANK OUT LIST
         MVC   XRLSTBUF+1(L'XRLSTBUF-1),XRLSTBUF  BUFFER
         EX    R3,XRMVC4                MOVE MESSAGE INTO LIST BUFFER
         MVI   XRLSTCTL,XRSKPCH1        FORCE EJECT ON NEXT WRITE
         MVC   XRLSTBUF+8(8),XROBJID    INSERT OBJECT ID
         BAL   R14,XRPUTLST             OUTPUT MESSAGE
         EJECT
***********************************************************************
*                                                                     *
*              CLOSE/DEQ OBJECT DATA SETS AND FREE OBJECT BUFFER      *
*                                                                     *
***********************************************************************
         LA    R1,XRDCBLIB              GET DCB ADDRESS
         USING IHADCB,R1
         LH    R0,DCBBLKSI              GET BLOCKSIZE (BUFFER SIZE)
         DROP  R1
         L     R1,XROBUFAD              GET BUFFER ADDRESS
         FREEMAIN R,LV=(0),A=(1)        FREE OBJECT BUFFER
         CLOSE MF=(E,XRDCBOBJ)          CLOSE OBJECT DATA SETS
         DEQ   MF=(E,XRENQDEQ)          DEQ ON OBJECT LIBRARY
         FREEPOOL XRDCBPCH              FREE BUFFER POOL FOR SYSUT1 DS
         EJECT
***********************************************************************
*                                                                     *
*              CLOSE LISTING DATA SET                                 *
*                                                                     *
***********************************************************************
         CLOSE MF=(E,XRDCBLST)          CLOSE LISTING DATA SET
         FREEPOOL XRDCBOUT              FREE BUFFER POOL FOR SYSPRINT
         EJECT
***********************************************************************
*                                                                     *
*              TERMINATION                                            *
*                                                                     *
***********************************************************************
         L     R2,4(0,RSAVE)            GET PREVIOUS SAVEAREA ADDRESS
         SR    R15,R15                  SET RETURN CODE TO ZERO
         TM    XRFLGS2,XRDIRERR         DID OBJLIB PDS DIR ERROR OCCUR?
         BZ    XR997                    BRANCH IF NO - RTN CODE = 0
         LA    R15,4                    YES - RETURN CODE = 4
XR997    LR    R3,R15                   SAVE RTN CODE ACROSS FREEMAIN
         FREEMAIN R,LV=XRWORKLN,A=(RSAVE)    FREE SAVE/WORK AREA
         LR    R15,R3                   SET RETURN CODE
         LR    R13,R2                   SET SAVEAREA ADDRESS
         L     R14,12(0,R13)            GET RETURN ADDRESS
         LM    R0,R12,20(R13)           RESTORE REGISTERS
         BR    R14                      RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*              WRITE LISTING DATA SET                                 *
*                                                                     *
***********************************************************************
XRPUTLST LA    R0,XRLSTBUF              GET ADDRESS OF LISTING BUFFER
         ST    R14,XRIORTN              SAVE RETURN ADDRESS
         PUT   XRDCBOUT,(0)             PUT A LINE TO THE LISTING
         L     R14,XRIORTN              GET RETURN ADDRESS
         BR    R14                      RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*              READ OBJECT DATA SET                                   *
*                                                                     *
***********************************************************************
XRGETOBJ ST    R14,XRIORTN              SAVE RETURN ADDRESS
         GET   XRDCBPCH,XROBJCRD        GET A CARD FROM THE OBJECT DECK
         L     R14,XRIORTN              GET RETURN ADDRESS
         BR    R14                      RETURN TO CALLER
***********************************************************************
*                                                                     *
*              END-OF-FILE ROUTINE FOR OBJECT DATA SET                *
*                                                                     *
***********************************************************************
XREOFOBJ B     XR860
         EJECT
***********************************************************************
*                                                                     *
*              WRITE OBJECT DATA SET                                  *
*                                                                     *
***********************************************************************
XRCLROBJ OI    XRFLGS2,XRCLRBUF         INDICATE FLUSH OF SHORT BUFFER
XRPUTOBJ ST    R14,XRIORTN              SAVE RETURN ADDRESS
         STM   R3,R5,XROBJSAV           SAVE WORK REGISTERS
         LM    R3,R5,XRBUFCTL           LOAD BUFFER CONTROL REGISTERS
         TM    XRFLGS2,XRCLRBUF         IS THIS A BUFFER FLUSH CALL?
         BO    XRPOBJ10                 BRANCH IF YES
         MVC   0(L'XROBJCRD,R3),XROBJCRD     MOVE CARD IMAGE TO BUFFER
         BXLE  R3,R4,XRPOBJ40           BRANCH IF NOT END OF BUFFER
         B     XRPOBJ20                 GO OUTPUT FULL BUFFER
XRPOBJ10 S     R3,XROBUFAD              GET SIZE OF SHORT BUFFER
         BZ    XRPOBJ30                 BRANCH IF NOTHING TO FLUSH
         LA    R4,XRDCBLIB              GET DCB ADDR
         USING IHADCB,R4
         LH    R5,DCBBLKSI              GET STANDARD BLOCKSIZE
         STH   R3,DCBBLKSI              STORE SHORT BLOCKSIZE
XRPOBJ20 L     R3,XROBUFAD              POINT TO OUTPUT BUFFER
         WRITE XRDECB,SF,XRDCBLIB,(R3),MF=E  WRITE OUT THE BLOCK
         CHECK XRDECB                   WAIT FOR COMPLETION
         TM    XRFLGS2,XRCLRBUF         IS THIS A BUFFER FLUSH CALL?
         BNO   XRPOBJ40                 BRANCH IF NO
         NI    XRFLGS2,X'FF'-XRCLRBUF   RESET FLUSH FLAG
         STH   R5,DCBBLKSI              RESET ORIGINAL BLOCKSIZE
         DROP  R4
XRPOBJ30 B     XRSOBJ10                 GO SET BUFFER CONTROL REGISTERS
XRPOBJ40 STM   R3,R5,XRBUFCTL           SAVE NEW BUFFER CONTROL REGS
         LM    R3,R5,XROBJSAV           RESTORE WORK REGISTERS
         L     R14,XRIORTN              GET RETURN ADDRESS
         BR    R14
XRSETOBJ STM   R3,R5,XROBJSAV           SAVE WORK REGISTERS
         ST    R14,XRIORTN              SAVE RETURN ADDRESS
XRSOBJ10 L     R3,XROBUFAD              GET ADDRESS OF BUFFER
         LA    R4,L'XROBJCRD            GET LRECL
         LR    R5,R3
         USING IHADCB,R14
         LA    R14,XRDCBLIB             GET DCB ADDR
         AH    R5,DCBBLKSI              GET END OF BUFFER ADDR
         SR    R5,R4                    POINT TO LAST RECORD IN BUFFER
         DROP  R14
         STM   R3,R5,XRBUFCTL           SET BUFFER CONTROL REGISTERS
         LM    R3,R5,XROBJSAV           RESTORE WORK REGISTERS
         L     R14,XRIORTN              GET RETURN ADDRESS
         BR    R14                      RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*              ENQ ON SYSUT2 DATA SET                                 *
*                                                                     *
***********************************************************************
*
XRENQIT  ST    R14,XRIORTN                   SAVE RETURN ADDRESS
         LA    R1,XRDCBLIB                   GET SYSUT2 DCB
         L     R1,(DCBDEBAD-IHADCB)(,R1)     GET DEB ADDR
         L     R1,(DEBUCBAD-DEBDASD)+32(,R1) GET UCB ADDR
         TM    UCBTBYT2-UCBOB(R1),UCBRR      SHARED?
         BO    XRRESIT                       /YES - USE RESERVE INSTEAD
         MVC   XRENQDEQ(XRENQLEN),XRENQLST   MOVE ENQ LIST TO WORKAREA
         ENQ   (,XRJFCB),MF=(E,XRENQDEQ)     ENQ ON SPF DATA SET
XRENQRET L     R14,XRIORTN                   RETURN TO CALLER
         BR    R14
XRRESIT  MVC   XRENQDEQ(XRRESLEN),XRRESLST   MOVE IN RESERVE LIST
         LA    R2,0(,R1)                     PUT UCB ADDR IN R2
         RESERVE (,XRJFCB,,,SYSTEMS),        RESERVE SPF DATA SET      $
               UCB=(R2),MF=(E,XRENQDEQ),
         B     XRENQRET
         EJECT
***********************************************************************
*                                                                     *
*              ABEND ROUTINES                                         *
*                                                                     *
***********************************************************************
         XRABEND 2                      SYSPRINT WOULD NOT OPEN
         XRABEND 3                      SYSUT2 MEMBER NOT GIVEN
         XRABEND 4                      SYSUT1 WOULD NOT OPEN
         XRABEND 5                      SYSUT2 WOULD NOT OPEN
         XRABEND 6                      IMPOSSIBLE RETURN FROM STOW
         EJECT
***********************************************************************
*                                                                     *
*              CONSTANTS                                              *
*                                                                     *
***********************************************************************
XRBLANKS DC    CL8' '
XRQNAME  DC    CL8'SPFDSN'              QNAME FOR ENQ/DEQ OF OBJ
XRMSGRPL DC    C'MEMBER XXXXXXXX REPLACED IN LIBRARY'
XRMSGADD DC    C'MEMBER XXXXXXXX ADDED TO LIBRARY'
XRMSGFUL DC    C'MEMBER XXXXXXXX NOT USABLE - DIRECTORY FULL'
XRMSGIOE DC    C'MEMBER XXXXXXXX NOT USABLE - DIRECTORY I/O ERROR'
         EJECT
***********************************************************************
*                                                                     *
*              OPEN/CLOSE, ENQ/DEQ AND WRITE PARAMETER LISTS          *
*                                                                     *
***********************************************************************
XROPENL  OPEN  (0,(OUTPUT)),MF=L   OPEN LIST FOR LISTING DCBS
XROPENLL EQU   *-XROPENL
XROPENO  OPEN  (0,(INPUT),0,(OUTPUT)),MF=L   OPEN LIST FOR OBJECT DCBS
XROPENOL EQU   *-XROPENO
XRENQLST ENQ   (XRQNAME,0,E,44,SYSTEM),MF=L  ENQ/DEQ LIST FOR OBJ/XSYM
XRENQLEN EQU   *-XRENQLST
XRRESLST RESERVE (XRQNAME,0,E,44,SYSTEMS),UCB=0,MF=L  RESERVE LIST
XRRESLEN EQU   *-XRRESLST
         WRITE XRWRITE,SF,MF=L          WRITE LIST FOR OBJECT DATE SET
XRDECBLN EQU   *-XRWRITE
         EJECT
***********************************************************************
*                                                                     *
*              EXECUTED INSTRUCTIONS                                  *
*                                                                     *
***********************************************************************
XRMVC4   MVC   XRLSTBUF+1(0),0(R2)      MOVE MESSAGE INTO LIST BUFFER
         EJECT
***********************************************************************
*                                                                     *
*              LITERAL POOL                                           *
*                                                                     *
***********************************************************************
         LTORG
         EJECT
***********************************************************************
*                                                                     *
*              DCB FOR WRITING LISTING                                *
*                                                                     *
***********************************************************************
XRLSTOU  DCB   DDNAME=SYSPRINT,DSORG=PS,BLKSIZE=121,LRECL=121,         X
               MACRF=(PM),RECFM=FM
XRLSTOU$ EQU   *-XRLSTOU
         EJECT
***********************************************************************
*                                                                     *
*              DCB FOR READING OBJECT DECK                            *
*                                                                     *
***********************************************************************
XROBJIN  DCB   DDNAME=SYSUT1,DSORG=PS,EODAD=XREOFOBJ,LRECL=80,         X
               MACRF=(GM),RECFM=FB
XROBJIN$ EQU   *-XROBJIN
         EJECT
***********************************************************************
*                                                                     *
*              DCB FOR WRITING OBJECT MEMBER                          *
*                                                                     *
***********************************************************************
XROBJOU  DCB   DDNAME=SYSUT2,DSORG=PO,LRECL=80,MACRF=(W),RECFM=FB,     X
               EXLST=0
XROBJOU$ EQU   *-XROBJOU
         EJECT
***********************************************************************
*                                                                     *
*              SAVE/WORK AREA DSECT                                   *
*                                                                     *
***********************************************************************
XRWORK   DSECT
XRSAVE   DS    18F                      STANDARD OS SAVEAREA
XRIORTN  DS    F                        RTN ADDR FROM I/O ROUTINES
XRBUFCTL DS    3F                       OBJLIB BUFFER CONTROL REGISTERS
XROBJSAV DS    3F                       I/O ROUTINE WORKREG SAVEAREA
XRDCBLST DS    XL(XROPENLL)             LISTING DCBS OPEN/CLOSE LIST
XRDCBOBJ DS    XL(XROPENOL)             OBJECT DCBS OPEN/CLOSE LIST
XREXLST  DS    A                        XSYMBOL/SYSUT2 DCB EXIT LIST
XROBUFAD DS    A                        ADDRESS OF OBJLIB OUTPUT BUFFER
         DS    0F
XRSTWLST DS    0XL12                    STOW LIST
XROBJID  DS    CL8                      OBJECT ID
XRTTRC   DS    XL4                      TTR AND CONTROL BYTE
XRFLGS2  DS    X                        SECOND FLAG BYTE
XRCLRBUF EQU   X'10'                    CLEAR OBJLIB SHORT BUFFER
XRDIRERR EQU   X'04'                    OBJLIB DIRECTORY WAS FULL OR
*                                       DIRECTORY I/O ERROR OCCURRED
         DS    0F
XRDECB   DS    XL(XRDECBLN)             DECB FOR OBJECT LIBRARY WRITES
         DS    0F
XRDCBOUT DS    XL(XRLSTOU$)             LISTING OUTPUT DCB
         DS    0F
XRDCBPCH DS    XL(XROBJIN$)             OBJECT INPUT DCB
         DS    0F
XRDCBLIB DS    XL(XROBJOU$)             OBJECT OUTPUT DCB
         DS    0F
XRJFCB   DS    XL176                    OBJECT JFCB
XROBJCRD DS    XL80                     OBJECT DECK CARD INPUT AREA
XRENQDEQ DS    XL(XRRESLEN)             SYSUT2 ENQ/DEQ/RESERVE PARMS
XRLSTBUF DS    CL121                    LISTING INPUT/OUTPUT AREA
XRLSTCTL EQU   XRLSTBUF                 CONTROL CHARACTER
XRSKPCH1 EQU   X'89'                    SKIP TO CH1 AFTER PRINTING
XRWORKLN EQU   *-XRWORK
         EJECT
***********************************************************************
*                                                                     *
*              DSECT FOR DCB                                          *
*                                                                     *
***********************************************************************
         DCBD  DSORG=PS,DEVD=DA
         IEZDEB
         IEFUCBOB
         END   SPFCOPY
