//O1003592 JOB (VSP,008),
//         ' JIM OLEKSIW ',CLASS=F,MSGLEVEL=1,
//         TIME=5,MSGCLASS=R
//*
//*   THIS PROGRAM ELIMINATES UNCATALOGUED TSO DATASETS.
//*   USERS MAY SUBMIT JOBS WITH DISP=(,CATLG) SEVERAL TIMES ...
//*   NO JCL ERROR RESULTS, BUT THE NEW DATASET IS STILL CREATED
//*   AND NOT CATALOGUED AT THE END OF THE RUN. THE POOR USER CAN'T
//*   FIGURE OUT WHY HIS PROGRAM RAN BUT HIS DATASET DID NOT CHANGE.
//*   THERE IS A FIX AVAILABLE FOR THIS SITUATION, BUT I DO NOT HAVE IT
//*   HERE AT NUSCO.
//*     SOURCE CODE: SAS    (USES A MODIFICATION FROM SAS.SAMPLE)
//*     WE HAVE 4 OS CVOL CATALOGS FOR TSO USERS ... THIS READS EACH
//*     CVOL CATALOG AND COMPARES AGAINST THE VTOCS.
//*     JIM OLEKSIW   / NORTHEAST UTILITIES SERVICE COMPANY
//*     P.O. BOX 270  / HARTFORD, CONNECTICUT   06101
//*
//LISTCVOL EXEC PGM=LISTCVOL
//DD1 DD UNIT=3350,VOL=SER=CICS02,DISP=SHR,DSNAME=SYSCTLG
//DD2 DD UNIT=3350,VOL=SER=SASPK2,DISP=SHR,DSNAME=SYSCTLG
//DD3 DD UNIT=3350,VOL=SER=PANPK4,DISP=SHR,DSNAME=SYSCTLG
//DD4 DD UNIT=3350,VOL=SER=SMFPK1,DISP=SHR,DSNAME=SYSCTLG
//SYSPRINT DD DSN=&&LISTC,SPACE=(TRK,(40,10),RLSE),
//   DISP=(,PASS),UNIT=SCRATCH
//SYSIN DD *
 LISTCTLG VOL=3350=CICS02
 LISTCTLG VOL=3350=SASPK2
 LISTCTLG VOL=3350=PANPK4
 LISTCTLG VOL=3350=SMFPK1
//DASD  EXEC SAS79
//FT11F001  DD  SYSOUT=*
//FT12F001  DD  SYSOUT=*
//USER  DD DSN=&&CATLG,DISP=(,PASS),
// UNIT=SCRATCH,SPACE=(CYL,(5,1))
//USTSO4 DD  VOL=SER=USTSO4,UNIT=3350,DISP=OLD
//USTSO2 DD  VOL=SER=USTSO2,UNIT=3350,DISP=OLD
//USTSO3 DD  VOL=SER=USTSO3,UNIT=3350,DISP=OLD
//USTSO1 DD  VOL=SER=USTSO1,UNIT=3350,DISP=OLD
//ZAPDUP  DD SYSOUT=R (A,INTRDR)
//*
//*  YOU CAN READ IN JOB DIRECTLY INTO THE INTERNAL READER ....
//*
//CAT1  DD  DSN=&&LISTC,DISP=(OLD,DELETE)
//SYSIN     DD  *
*-------------------------- MAPDISK -----------------------------*
×                                                                ×
× THIS CODE READS IN THE DSCBS OF THE VTOC AND PRODUCES A LISTING×
× OF ALL DATA SETS WITH THEIR ATTRIBUTES AND ALLOCATION DATA.    ×
×                                                                ×
× A VTOC DD STATEMENT SHOULD BE IN THE JCL LIKE:                 ×
×    //VTOC DD DSN=VTOC,VOL=SER=THISVOL,UNIT=DISK,DISP=SHR       ×
×                                                                ×
×                                                                ×
× FIELD AS WELL AS THE KEY AND DATA IN THE RECORD. THIS IS WHY   ×
× OFFSETS ARE 5 MORE THAN INDICATED IN THE SYSTEMS CONTROL BLOCKS×
×                                                                ×
×                                                                ×
× DATA SETS WITH MORE THAN 3 EXTENTS HAVE EXTENSION DSCBS.       ×
× FORMAT 1 AND 2 DSCBS THAT POINT TO FORMAT 3 DSCBS ARE OUTPUT   ×
× TO SEPARATE DATASETS SO THAT THEY CAN BE MERGED TO FIND OUT    ×
× ALL THE ALLOCATION DATA.                                       ×
×                                                            JPS ×
*----------------------------------------------------------------*;
DATA LAST ; * THIS IS A DUMMY DATASET ;

 MACRO DISK1
DATA FIRST(KEEP=DSNAME CREATED EXPIRES  DS1DSSN
              EXTENTS DSORG RECFM UNUSED  ALOC BLKSIZE
              LRECL SECALOC USED R TRACKS VOLSER) ;
    *FREE(KEEP=LOC CYL TRACK TOTAL RECN)
     FMT1(KEEP=DSNAME CREATED EXPIRES  DS1DSSN DS1VOLSQ
              EXTENTS DSORG RECFM1-RECFM4 ALOC BLKSIZE
              LRECL SECALOC USED R TRACKS CCHHR VOLSER)
     FMT2(KEEP=CCHHR TOCCHHR)
     FMT3(KEEP=CCHHR ALLOC3);  LENGTH DEFAULT=4;

  *-------READ DSCB AND DETERMINE WHICH FORMAT------*;
  INFILE %


  MACRO DISK2       VTOC CCHHR COLUMN=COL;
  INPUT @50 DSCBTYPE ?1. @;
      IF DSCBTYPE=1 THEN GOTO FORMAT1;
      IF DSCBTYPE=2 THEN GOTO FORMAT2;
      IF DSCBTYPE=3 THEN GOTO FORMAT3;
      IF DSCBTYPE=5 THEN GOTO FORMAT5;
      IF DSCBTYPE=4 THEN INPUT @70 TRKCYL PIB2.; RETAIN TRKCYL;
      IF DSCBTYPE=. THEN NULL+1; _ERROR_=0;
      IF NULL>500 THEN STOP; RETURN;

FORMAT1:                                    *---REGULAR DSCB TYPE---*;
  INPUT DSNAME $6-49
      @51 DSS1DSSN  $6. @57 DS1VOLSQ PIB2.
      @59 YC PIB1. DAYC PIB2.
          YE PIB1. DAYE PIB2.
      EXTENTS PIB1. @88 DSORG1 PIB1. @90 RECFM0 PIB1.
      @92 BLKSIZE PIB2. LRECL PIB2. KEYLENG PIB1.
      @100 ALO PIB1. SECALOC PIB3. USED PIB2. R PIB1.@;

         IF DAYC < 366 AND DAYC > 0 THEN
      IF YC>0 THEN CREATED=DATEJUL(1000*YC+DAYC);
         IF DAYE < 366 AND DAYE > 0 THEN
      IF YE>0 THEN EXPIRES=DATEJUL(1000*YE+DAYE);
      FORMAT CREATED EXPIRES  DATE7.;

      *--------- DSORG RECODING--------; DSORG='  ';
      IF MOD(INT(DSORG1/2),2) THEN DSORG='PO';
      IF DSORG1>=32 THEN DSORG='DA';IF DSORG1>=64 THEN DSORG='PS';
      IF DSORG1>=128 THEN DSORG='IS';
      *-------- RECFM RECODING --------;
      RECFM1=' '; Z=INT(RECFM0/64);
      IF Z=1 THEN RECFM1='V'; IF Z=2 THEN RECFM1='F';
      IF Z=3 THEN RECFM1='U';
      RECFM2=' '; IF MOD(INT(RECFM0/16),2) THEN RECFM2='B';
      RECFM3=' '; IF MOD(INT(RECFM0/4),2) THEN RECFM3='A';
      RECFM4=' '; IF MOD(INT(RECFM0/8),2) THEN RECFM4='S';
         LENGTH RECFM $4 ;
         RECFM = RECFM1 ×× RECFM2 ××RECFM3 ×× RECFM4 ;

      *-------- ALLOC TYPE RECODING -------;
      ALOC='   '; Z=INT(ALO/64);       IF Z=1 THEN ALOC='BLK';
      IF Z=2 THEN ALOC='TRK';          IF Z=3 THEN ALOC='CYL';
      *-------- ALLOCATED SPACE --------;INPUT @111@;
      TRACKS=0; LINK EXL; LINK EXL; LINK EXL;
      IF EXTENTS<=3 THEN GOTO OUTD;
        INPUT CCHHR $5.;*OUTPUT FMT1; RETURN;
   OUTD: UNUSED = TRACKS - USED ;
      OUTPUT FIRST; RETURN;

*-----ROUTINES TO COLLECT EXTENT INFORMATION-----*;
EXL4: LINK EXL; LINK EXL; LINK EXL;
EXL:  INPUT IND PIB1. +1 (CCLO HHLO CCHI HHHI)(PIB2.)@;
      IF IND=0 THEN RETURN;
      TRACKS+  TRKCYL  *(CCHI-CCLO)+HHHI-HHLO+1;
      RETURN;

FORMAT2:                                    *---ISAM DSCB---*;
      INPUT @1 CCHHR $CHAR5. @141 TOCCHHR $CHAR5.
                             @141 Z IB5.;
     *IF Z^=0 THEN OUTPUT FMT2; RETURN;

FORMAT3: TRACKS=0;                          *---CONTINUATION DSCB---*;
      INPUT @1 CCHHR $CHAR5. @10@;
      LINK EXL4; INPUT +1@;
      IF IND>0 THEN LINK EXL4;
      IF IND>0 THEN LINK EXL4;
      IF IND>0 THEN LINK EXL;
      ALLOC3=TRACKS;*OUTPUT FMT3; RETURN;
      FORMAT CCHHR $HEX10.;

FORMAT5:  INPUT @10@; RECN+1;               *---FREE SPACE EXTENTS---*;
EXT:  INPUT LOC PIB2. CYL PIB2. TRACK PIB1.@;
      IF LOC=0 THEN RETURN; IF COL=50 THEN INPUT +1@;
      TOTAL=20*CYL+TRACK;
     *OUTPUT FREE;
      IF COL<140 THEN GOTO EXT;
  RETURN;
DATA BOTH ; SET FIRST LAST ;
PROC DELETE DATA=LAST ;
PROC DATASETS  DDNAME=USER ;
  CHANGE BOTH=LAST ; DELETE FIRST ; %
;
DISK1 USTSO1 DISK2 ;
DISK1 USTSO2 DISK2 ;
DISK1 USTSO3 DISK2 ;
DISK1 USTSO4 DISK2 ;
****** SAS PROGRAM TO ANALYZE DATASETS AND BACKUP ;
DATA TSOCAT  ;
         INFILE CAT1 ;
         CATALOG='TSO ' ;
         INPUT @2 DSNAME $44.  VOLSER $52-57 ;
         IF VOLSER = 'USTSO1' OR VOLSER ='USTSO2'
         OR VOLSER = 'USTSO3' OR VOLSER ='USTSO4' THEN OUTPUT ;
PROC SORT   DATA=TSOCAT ;
         BY DSNAME VOLSER ;
PROC SORT   DATA=LAST   ;
         BY DSNAME VOLSER ;
DATA WORK.TEMP ;
         MERGE    LAST                        TSOCAT        ;
         BY DSNAME VOLSER ;
DATA LAST ; SET WORK.TEMP ;
         IF VOLSER='      ' THEN DELETE ;
*PROC PRINT DATA=LAST ;
* TITLE TSO CATALOG VOLUME ;
DATA BOTH ;
         SET LAST; BY DSNAME ;
         IF VOLSER='USTSO1' OR
            VOLSER='USTSO2' OR
            VOLSER='USTSO3' OR
            VOLSER='USTSO4'  ;
         FILE ZAPDUP  NOPRINT  NOTITLES LRECL=80 RECFM=FB BLKSIZE=4000 ;
         IF DSNAME='SYSCTLG' THEN DELETE ;
            RETAIN START 1 CURRENT; DROP START CURRENT ;
            IF START     THEN DO ;
               CURRENT = TODAY() ;
               PUT '//TSOCLEAN JOB (STC,008),SYSTEMS,MSGLEVEL=1,'/
                   '//  MSGCLASS=A,CLASS=F, ' /
                   '//  TYPRUN=HOLD,TIME=1 ' /
                   '//S1  EXEC PGM=IEFBR14  ' ;
            END ;
            START=0 ;
         DSNY = SUBSTR(DSNAME,1,4)    ;  DROP DSNY ;
         DSNX = TRIM(DSNAME) ×× ','   ;  DROP DSNX ;
         IF '@PL.' = DSNY THEN DELETE ; * NO APL DATASETS ;
         IF CREATED = CURRENT THEN DELETE ; * DAY OLD DATASETS ONLY ;
         IF 'SYS8' = DSNY THEN DELETE ;  * NO SYSTEM EDIT DATASETS ;
         IF CATALOG='   ' ;  * HANDLE THE UNCATALOGED GUYS ;
         PUT '//DD' _N_   Z6. '  DD  DSN=' DSNX
             / '//     DISP=(OLD,DELETE),'
             / '//     UNIT=3350,VOL=SER=' VOLSER  ;
PROC PRINT DATA=BOTH;
         TITLE UNCATALOGUED DATASETS RESIDING ON SEVERAL VOLUMES ;
    VAR DSNAME TRACKS UNUSED CREATED VOLSER
    BLKSIZE LRECL RECFM DSORG  ALOC SECALOC ;
PROC MEANS DATA=BOTH MAXDEC=2 ;
PROC SORT DATA=LAST; BY DESCENDING TRACKS ;
DATA BIG150;SET LAST; IF _N_ > 200 THEN STOP ;
PROC PRINT DATA=BIG150          ;
    TITLE 200 LARGEST DATASETS ;
    VAR DSNAME TRACKS UNUSED CREATED VOLSER
    BLKSIZE LRECL RECFM DSORG  ALOC SECALOC ;
PROC SORT DATA=LAST;
         BY VOLSER DSNAME ;
PROC MEANS  SUM DATA=LAST  MEAN STD  MAXDEC=1  N ;
         VAR TRACKS ;
         BY VOLSER ;
         TITLE  ** TOTAL TRACKS IN USE ON ALL VOLUMES ** ;
