DIRBUILD TITLE 'ISPF DIRECTORY TABLE BUILD UTILITY'
*---------------------------------------------------------------------*
* NAME:        DIRBUILD                                               *
*                                                                     *
* FUNCTION:    READ THE DIRECTOR OF A SPECIFIED PDS AND BUILD AN ISPF *
*              TABLE OF THE MEMBER NAMES WHICH CAN THEN BE USED BY    *
*              OTHER ISPF PROGRAM'S.                                  *
*                                                                     *
* INPUT:       THE NAME OF THE ISPF TABLE IS PASSED AS THE PARM       *
*              IF NO PARM IS PASSED THE NAME OF THE TABLE IS DIRTBL.  *
*                                                                     *
*              THE SECOND ITEM IN THE PARM MAY BE THE VARIABLE NAME   *
*              CONTAINING THE FULLY QUALIFIED DSNAME OF THE PDS.      *
*              IF THIS FIELD IS NOT PASSED THEN THE VARIABLE NAME     *
*              USED WILL BE PDSDSN.                                   *
*                                                                     *
*                                                                     *
* TABLE  FORMAT:                                                      *
*                                                                     *
*        FIELD                                                        *
*        SIZE  NAME     DESCRIPTION                                   *
*        8     DIRNAME  MEMBER NAME                                   *
*        10    DIRACT   LAST ACTION FIELD OR ALIAS INDICATOR          *
*        60    DIRCOMM  AVAILABLE FOR USER COMMENTS                   *
*        5     SVERMOD  ISPF VER.MOD                                  *
*        8     SCDATE   ISPF CREATE DATE                              *
*        8     SUDATE   ISPF UPDATE DATE                              *
*        5     SUTIME   ISPF UPDATE TIME                              *
*        5     SSIZE    ISPF SIZE                                     *
*        5     SINIT    ISPF INITIAL SIZE                             *
*        5     SMOD#    ISPF MODIFIED STATEMENTS                      *
*        8     SUSER    ISPF UPDATE USER ID                           *
*                                                                     *
*        NOTE: THE ISPF STATISTICS WILL BE MAINTAINED IF YOU USE      *
*              ISPF TO EDIT A MEMBER BUT THE TABLE WILL NOT BE        *
*              UPDATED TO REFLECT THE CHANGED STATS UNLESS YOU DO     *
*              SO IN YOUR PROGRAM.                                    *
*                                                                     *
*        NOTE: IF THE MEMBER IS AN ALIAS THEN THE DIRACT  FIELD       *
*              WILL BE INITIALIZED WITH THE WORD ALIAS.               *
*                                                                     *
*        NOTE 3: ISPF VARIABLE $$$DSN WILL CONTAIN THE DSNAME OF THE  *
*                DATASET USED FOR THE TABLE AND CAN BE USED IN THE    *
*                DIRTBL PANEL.                                        *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
*    SAMPLE CLIST USING DIRBUILD:                                     *
*                                                                     *
*    PROC 1 DSN                                                       *
*    SET &DIRDSN = &DSN                                               *
*    ISPEXEC VPUT DIRDSN                                              *
*    ISPEXEC SELECT PGM(FIXUPDSN) PARM(DIRDSN)                        *
*    ISPEXEC SELECT PGM(DIRBUILD) PARM(DIRTABL,DIRDSN)                *
*    DISPF: +                                                         *
*    ISPEXEC TBDISPL DIRTABL  PANEL(DIRTBL)                           *
*            GOTO DOIT                                                *
*    DISP: +                                                          *
*          ISPEXEC TBDISPL DIRTABL                                    *
*    DOIT: +                                                          *
*          SET &LCC = &LASTCC                                         *
*          IF &LCC > 4 THEN GOTO CLOSE                                *
*          IF &SELECT = S THEN WRITE MEMBER NAME = &DIRNAME           *
*          SET &SELECT =                                              *
*          GOTO DISP                                                  *
*    CLOSE: +                                                         *
*             ISPEXEC TBCLOSE DIRTABL                                 *
*---------------------------------------------------------------------*
* AUTHOR:                                                             *
*        LIONEL DYCK                                                  *
*        ROCKWELL INTERNATIONAL                                       *
*        PO BOX 2515                                                  *
*        SEAL BEACH, CALIFORNIA 90740                                 *
*        MAIL  CODE 110-SH28                                          *
*        PHONE (213) 594-1125                                         *
*---------------------------------------------------------------------*
* WARRENTY: NONE                                                      *
*---------------------------------------------------------------------*
         EJECT
DIRBUILD $PROLOG
         L     R1,0(R1)             * LOAD ADDR OF PARM
         LH    R2,0(R1)             * LOAD LENGTH OF PARM
         LTR   R2,R2                * LENGTH OF ZERO
         BZ    NOPARM               * NO - BYPASS MOVE
         LR    R3,R2                   SAVE LEN OF PARM    *LBD 05/84*
         BCTR  R3,R0                   LESS ONE            *LBD 05/84*
         LA    R2,TBLNAME           -> TABLE NAME
         MVC   TBLNAME,BLANKS          CLEAR DEF TABLE NAME
         LA    R1,2(R1)             -> START OF PARM
MVP1     MVC   0(1,R2),0(R1)           MOVE TABLE NAME
         BCTR  R3,R0                   LESS ONE            *LBD 05/84*
         LTR   R3,R3                   END OF PARM         *LBD 05/84*
         BZ    NOPARM                  YES                 *LBD 05/84*
         LA    R1,1(R1)                -> NEXT CHAR
         LA    R2,1(R2)                BUMP TBLNAME POINTER
         CLI   0(R1),C' '              END OF PARM ?
         BNH   NOPARM                  YES
         CLI   0(R1),C','              END OF TBLNAME ?
         BNE   MVP1                    YES
         LA    R1,1(R1)                -> NEXT CHAR
         MVC   PDSDSN+1(8),BLANKS      CLEAR DEF PDSDSN VAR
         LA    R2,PDSDSN+1             -> PDSDSN
MVP2     MVC   0(1,R2),0(R1)           MOVE ISPF VAR NAME FOR PDS
         BCTR  R3,R0                   LESS ONE            *LBD 05/84*
         LTR   R3,R3                   END OF PARM         *LBD 05/84*
         BZ    NOPARM                  YES                 *LBD 05/84*
         LA    R1,1(R1)                -> NEXT CHAR
         LA    R2,1(R2)                BUMP PDSDSN NAME POINTER
         CLI   0(R1),C' '              END OF PARM ?
         BNH   NOPARM                  YES
         B     MVP2                                        *LBD 05/84*
NOPARM   EQU   *
         CALL  ISPLINK,(VDEFINE,PDSDSN,VPDSDSN,CHAR,LPDSDSN),VL
         EJECT                                              *LBD 03/84*
         CALL  ISPLINK,(VGET,PDSDSN),VL
         EJECT                                              *LBD 03/84*
         CALL  ISPLINK,(VDEFINE,$$$DSN,V$$$DSN,CHAR,L$$$DSN),VL
         EJECT
         MVC   V$$$DSN,VPDSDSN         UPDATE DISPLAY DSN *LBD 10/84*
         CALL  ISPLINK,(VPUT,$$$DSN,SHARED),VL
         EJECT
         ALLOC DDNRET=ALLDDN,DSN=ALLDSN,DISP=SHR,ERROR=S99FAIL
         MVC   PDSDD+40(8),ALLDDN+2
         EJECT                                              *LBD 03/84*
         CALL  ISPLINK,(VDEFINE,DIRNAME,VDIRNAME,CHAR,LDIRNAME),VL
         EJECT                                              *LBD 03/84*
         CALL  ISPLINK,(VDEFINE,DIRACT,VDIRACT,CHAR,LDIRACT),VL
         EJECT                                              *LBD 03/84*
         CALL  ISPLINK,(VDEFINE,DIRCOMM,VDIRCOMM,CHAR,LDIRCOMM),VL
         EJECT                                              *LBD 03/84*
         CALL  ISPLINK,(VDEFINE,SVERMOD,VSVERMOD,CHAR,LSVERMOD),VL
         EJECT                                              *LBD 03/84*
         CALL  ISPLINK,(VDEFINE,SCDATE,VSCDATE,CHAR,LSCDATE),VL
         EJECT                                              *LBD 03/84*
         CALL  ISPLINK,(VDEFINE,SUDATE,VSUDATE,CHAR,LSUDATE),VL
         EJECT                                              *LBD 03/84*
         CALL  ISPLINK,(VDEFINE,SUTIME,VSUTIME,CHAR,LSUTIME),VL
         EJECT                                              *LBD 03/84*
         CALL  ISPLINK,(VDEFINE,SSIZE,VSSIZE,CHAR,LSSIZE),VL
         EJECT                                              *LBD 03/84*
         CALL  ISPLINK,(VDEFINE,SINIT,VSINIT,CHAR,LSINIT),VL
         EJECT                                              *LBD 03/84*
         CALL  ISPLINK,(VDEFINE,SMOD#,VSMOD#,CHAR,LSMOD#),VL
         EJECT                                              *LBD 03/84*
         CALL  ISPLINK,(VDEFINE,SUSER,VSUSER,CHAR,LSUSER),VL
         EJECT                                              *LBD 03/84*
         CALL  ISPLINK,(TBCREATE,TBLNAME,,NAMES,NOWRITE,REPLACE),VL
         CH    R15,=H'04'
         BNH   TBCOK
         ABEND 1
         EJECT                                              *LBD 03/84*
TBCOK    DS    0H
         OPEN  (PDSDD)            OPEN FOR RDJFCB           *LBD 03/84*
         CLOSE PDSDD              AND CLOSE IT FOR NOW      *LBD 03/84*
         RDJFCB PDSDD                                       *LBD 03/84*
         TM    JFCRECFM,JFCUND    UNDEFINED (LOAD LIB ?)    *LBD 03/84*
         BO    OPEN               YES - SKIP ISPF FLAG SET  *LBD 03/84*
         SETON ISPF               SET ISPF FLAG             *LBD 03/84*
         EJECT                                              *LBD 03/84*
OPEN     DS    0H                                           *LBD 03/84*
         OPEN  (PDSDD)
         USING PDS2,R10                ADDRESSABILITY TO PDS DIR
READ     GET   PDSDD
         LR    R10,R1                  -> DIR BLOCK
         LH    R9,0(R10)
         AR    R9,R10                  -> END OF DIR BLOCK
         LA    R10,2(R10)              -> PAST BLOCK LEN
PLPS     CLI   PDS2NAME,X'FF'          LAST BLOCK ?
         BE    CLOSE                   YES
         MVC   VDIRNAME,PDS2NAME
         LA    R1,VDIRCOMM
         TM    PDS2INDC,PDS2ALIS       ALIAS ?
         BZ    DOIT                    NO
         MVC   VDIRACT(5),=CL5'ALIAS'
         B     ADDIT                                        *LBD 03/84*
DOIT     DS    0H
         IFOFF ISPF,ADDIT         IF NO SPF THEN ADDIT      *LBD 03/84*
         DROP  R10                                          *LBD 03/84*
         USING SPFDSECT,R10                                 *LBD 03/84*
         TM    SPFFLAG,X'0F'      AND SPF STATS             *LBD 03/84*
         BNO   ADDIT              NO - SKIP IT              *LBD 03/84*
         MVC   VSUSER(7),SPFUSER                            *LBD 03/84*
         SR    R1,R1                                        *LBD 03/84*
         IC    R1,SPFVER                                    *LBD 03/84*
         CVD   R1,DWD                                       *LBD 03/84*
         UNPK  VSVERMOD(2),DWD+6(2)                         *LBD 03/84*
         MVI   VSVERMOD+2,C'.'                              *LBD 03/84*
         SR    R1,R1                                        *LBD 03/84*
         IC    R1,SPFMODV                                   *LBD 03/84*
         CVD   R1,DWD                                       *LBD 03/84*
         UNPK  VSVERMOD+3(2),DWD+6(2)                       *LBD 03/84*
         OC    VSVERMOD(2),=X'F0F0'                         *LBD 03/84*
         OC    VSVERMOD+3(2),=X'F0F0'                       *LBD 03/84*
         L     R1,SPFCDATE                                  *LBD 03/84*
         BAL   R14,DATECONV                                 *LBD 03/84*
         MVC   VSCDATE(8),0(R1)                             *LBD 03/84*
         L     R1,SPFUDATE                                  *LBD 03/84*
         BAL   R14,DATECONV                                 *LBD 03/84*
         MVC   VSUDATE(8),0(R1)                             *LBD 03/84*
         SR    R1,R1                                        *LBD 03/84*
         IC    R1,SPFUTIME                                  *LBD 03/84*
         SLL   R1,4                                         *LBD 03/84*
         ST    R1,FWD                                       *LBD 03/84*
         UNPK  DWD(2),FWD                                   *LBD 03/84*
         MVC   VSUTIME(2),DWD                               *LBD 03/84*
         MVI   VSUTIME+2,C':'                               *LBD 03/84*
         SR    R1,R1                                        *LBD 03/84*
         IC    R1,SPFUTIME+1                                *LBD 03/84*
         SLL   R1,4                                         *LBD 03/84*
         ST    R1,FWD                                       *LBD 03/84*
         UNPK  DWD(2),FWD                                   *LBD 03/84*
         MVC   VSUTIME+3(2),DWD                             *LBD 03/84*
         OC    VSUTIME(2),=X'F0F0'                          *LBD 03/84*
         OC    VSUTIME+3(2),=X'F0F0'                        *LBD 03/84*
         LH    R1,SPFSIZE                                   *LBD 03/84*
         CVD   R1,DWD                                       *LBD 03/84*
         MVC   ED,=X'402020202021'                          *LBD 03/84*
         ED    ED,DWD+5                                     *LBD 03/84*
         MVC   VSSIZE,ED+1                                  *LBD 03/84*
         LH    R1,SPFINIT                                   *LBD 03/84*
         CVD   R1,DWD                                       *LBD 03/84*
         MVC   ED,=X'402020202021'                          *LBD 03/84*
         ED    ED,DWD+5                                     *LBD 03/84*
         MVC   VSINIT,ED+1                                  *LBD 03/84*
         LH    R1,SPFMOD                                    *LBD 03/84*
         CVD   R1,DWD                                       *LBD 03/84*
         MVC   ED,=X'402020202021'                          *LBD 03/84*
         ED    ED,DWD+5                                     *LBD 03/84*
         MVC   VSMOD#,ED+1                                  *LBD 03/84*
         DROP  R10                                          *LBD 03/84*
         EJECT                                              *LBD 03/84*
ADDIT    DS    0H                                           *LBD 03/84*
         USING PDS2,R10                ADDRESSABILITY TO PDS DIR
         CALL  ISPLINK,(TBADD,TBLNAME),VL
         MVC   VDIRACT,BLANKS
         MVC   VDIRCOMM,BLANKS
         MVC   VDIRNAME,BLANKS
         MVC   VSVERMOD(VSEND-VSVERMOD),BLANKS              *LBD 03/84*
         SR    R1,R1
         NI    PDS2INDC,X'1F'
         IC    R1,PDS2INDC
         LA    R1,6(R1)
         SLA   R1,1
         AR    R10,R1
         CR    R10,R9
         BL    PLPS
         B     READ                    GET NEXT ENTRY
         EJECT                                              *LBD 03/84*
CLOSE    CLOSE PDSDD
         CALL  ISPLINK,(TBTOP,TBLNAME),VL
         $EPILOG
         EJECT
S99FAIL  S99FAIL
         $EPILOG 4
         EJECT
         EJECT
         LTORG
         BITSW ISPF                                         *LBD 03/84*
FWD      DS    F                                            *LBD 03/84*
DWD      DS    D                                            *LBD 03/84*
ED       DS    CL6                                          *LBD 03/84*
         SPACE 2
BLANKS   DC    CL80' '
CHAR     DC    C'CHAR'
VDEFINE  DC    C'VDEFINE'
VGET     DC    C'VGET'
VPUT     DC    C'VPUT'                                    *LBD 10/84*
SHARED   DC    C'SHARED'                                  *LBD 10/84*
TBCREATE DC    C'TBCREATE'
NOWRITE  DC    C'NOWRITE'
REPLACE  DC    C'REPLACE'
TBADD    DC    C'TBADD'
TBTOP    DC    C'TBTOP'
TBLNAME  DC    CL8'DIRTBL'
PDSDSN   DC    C'(PDSDSN  )'
ALLDSN   DC    A(VPDSDSN),AL2(L'VPDSDSN)
VPDSDSN  DC    CL44' '
LPDSDSN  DC    A(L'VPDSDSN)
$$$DSN   DC    C'($$$DSN  )'                              *LBD 10/84*
V$$$DSN  DC    CL44' '                                    *LBD 10/84*
L$$$DSN  DC    A(L'V$$$DSN)                               *LBD 10/84*
NAMES    DC    C'(DIRNAME,DIRACT,DIRCOMM'
         DC    C',SVERMOD,SCDATE,SUDATE,SUTIME'            *LBD 03/84*
         DC    C',SSIZE,SINIT,SMOD#,SUSER)'                *LBD 03/84*
DIRNAME  DC    C'(DIRNAME)'       MEMBER NAME
DIRACT   DC    C'(DIRACT)'        AVAILABLE FOR ACTION INDICATOR
DIRCOMM  DC    C'(DIRCOMM)'       AVAILABLE FOR COMMENTS OR ADDIT INFO
VDIRNAME DC    CL8' '
VDIRACT  DC    CL10' '
VDIRCOMM DC    CL60' '
LDIRNAME DC    A(L'VDIRNAME)
LDIRACT  DC    A(L'VDIRACT)
LDIRCOMM DC    A(L'VDIRCOMM)
         SPACE 2                                            *LBD 03/84*
VSVERMOD DC    CL5' '             ISPF VER.MOD              *LBD 03/84*
VSCDATE  DC    CL8' '             ISPF CREATE DATE          *LBD 03/84*
VSUDATE  DC    CL8' '             ISPF UPDATE DATE          *LBD 03/84*
VSUTIME  DC    CL5' '             ISPF UPDATE TIME          *LBD 03/84*
VSSIZE   DC    CL5' '             ISPF SIZE                 *LBD 03/84*
VSINIT   DC    CL5' '             ISPF INITIAL SIZE         *LBD 03/84*
VSMOD#   DC    CL5' '             ISPF MOD STATEMENT NUMBER *LBD 03/84*
VSUSER   DC    CL8' '             LAST UPDATE USER          *LBD 03/84*
VSEND    EQU   *                                            *LBD 03/84*
         SPACE 2                                            *LBD 03/84*
SVERMOD  DC    C'(SVERMOD)'                                 *LBD 03/84*
SCDATE   DC    C'(SCDATE)'                                  *LBD 03/84*
SUDATE   DC    C'(SUDATE)'                                  *LBD 03/84*
SUTIME   DC    C'(SUTIME)'                                  *LBD 03/84*
SSIZE    DC    C'(SSIZE)'                                   *LBD 03/84*
SINIT    DC    C'(SINIT)'                                   *LBD 03/84*
SMOD#    DC    C'(SMOD#)'                                   *LBD 03/84*
SUSER    DC    C'(SUSER)'                                   *LBD 03/84*
         SPACE 2                                            *LBD 03/84*
LSVERMOD DC    A(L'VSVERMOD)                                *LBD 03/84*
LSCDATE  DC    A(L'VSCDATE)                                 *LBD 03/84*
LSUDATE  DC    A(L'VSUDATE)                                 *LBD 03/84*
LSUTIME  DC    A(L'VSUTIME)                                 *LBD 03/84*
LSSIZE   DC    A(L'VSSIZE)                                  *LBD 03/84*
LSINIT   DC    A(L'VSINIT)                                  *LBD 03/84*
LSMOD#   DC    A(L'VSMOD#)                                  *LBD 03/84*
LSUSER   DC    A(L'VSUSER)                                  *LBD 03/84*
         EJECT
         DYNSPACE ,
         EJECT
PDSDD    DCB   DSORG=PS,MACRF=GL,DDNAME=PDSDD,EODAD=CLOSE,             X
               LRECL=256,BLKSIZE=256,RECFM=F,EXLST=RJFCB
         EJECT
RJFCB    DC    X'87',AL3(INFMJFCB)                          *LBD 03/84*
         IEFJFCBN LIST=YES                                  *LBD 03/84*
         EJECT                                              *LBD 03/84*
DATECONV ZAP   MX001M,=P'01'           INITIALIZE MONTH
         ZAP   T001BL+2(2),=P'28'      INITIALIZE FEB
         ST    R1,R1001ST              STORE JULIAN DATE
         XC    W001X,W001X             ZERO WORK AREA
         MVC   W001X+3(1),R1001ST+1    MOVE YEAR INTO WORK
         L     R1,W001X                LOAD YEAR INTO REGISTER
         SLL   R1,4                    SHIFT LEFT 1/2 BYTE
         ST    R1,W001X                STORE YEAR INTO WORK AGAIN
         OI    W001X+3,X'0F'           CONVERT YEAR INTO PACKED FORMAT
         ZAP   YR001X,W001X            SAVE YEAR
         DP    W001X,=P'04'            DIVIDE YEAR BY 4
         CP    W001X+2(2),=P'00'       IF REMAINDER THEN LEAP YEAR
         BNE   XNOLEAPX                NOT A LEAP YEAR
         ZAP   T001BL+2(2),=P'29'      SET MONTH 2 EQUAL TO 29 DAYS
XNOLEAPX LA    1,T001BL                SET POINTER TO MONTH TABLE
         L     2,=F'02'                SET COUNTER
         LA    3,MX001M-1              SET POINTER TO END OF TABLE
XCPR01   CP    R1001ST+2(2),0(2,1)     COMPARE DAYS TO MONTH DABLE
         BNH   XDATEX                  LESS THAN TABLE
         AP    MX001M,=P'01'           INCRIMENT MONTH COUNTER
         SP    R1001ST+2(2),0(2,1)     SUB TABLE DAY FORM JULIAN DAY
         BXLE  1,2,XCPR01              CONTINUE SCAN
XDATEX   ZAP   DYXX,R1001ST+2(2)       SET DAY
         UNPK  W001X,DYXX              UNPACK DAY
         OI    W001X+3,X'F0'           RESET SIGN
         MVC   XD1(2),W001X+2          MOVE DAY TO O/P AREA
         UNPK  W001X,MX001M            UNPACK MONTH
         OI    W001X+3,X'F0'           RESET SIGN
         MVC   XM1(2),W001X+2          MOVE MONTH TO O/P AREA
         UNPK  W001X,YR001X            UNPACK YEAR
         OI    W001X+3,X'F0'           RESER SIGN
         MVC   XY1(2),W001X+2          MOVE YEAR TO O/P AREA
         LA    R1,XM1                  LOAD REGISTER WITH ADDR OF CAL
         BR    R14                     RETURN               *LBD 03/84*
         LTORG                         LITERAL POOL
W001X    DC    F'00'
T001BL   EQU   *                       MONTH TABLE
         DC    PL2'31'
         DC    PL2'28'
         DC    PL2'31'
         DC    PL2'30'
         DC    PL2'31'
         DC    PL2'30'
         DC    PL2'31'
         DC    PL2'31'
         DC    PL2'30'
         DC    PL2'31'
         DC    PL2'30'
         DC    PL2'31'
MX001M   DC    PL2'00'                 MONTH WORK AREA
R1001ST  DC    F'00'                   REGISTER SAVE AREA FOR REG
YR001X   DC    PL2'00'                 YEAR WORK AREA
DYXX     DC    PL2'00'                 DAY WORK AREA
XM1      DC    CL2'  '                 MONTH O/P AREA
         DC    C'/'
XD1      DC    CL2'  '                 DAY O/P AREA
         DC    C'/'
XY1      DC    CL2'  '                 YEAR O/P AREA
         EJECT                                              *LBD 03/84*
SPFDSECT DSECT                                              *LBD 03/84*
SPFNAME  DS    CL8                MEMBER NAME               *LBD 03/84*
         DS    CL3                TTR OF MEMBER             *LBD 03/84*
SPFFLAG  DS    X                  IF X'0F' THEN ISPF STATS  *LBD 03/84*
SPFVER   DS    X                  SPF VERSION               *LBD 03/84*
SPFMODV  DS    X                  SPF MODIFICATION LEVEL    *LBD 03/84*
         DS    CL2                WHO KNOWS                 *LBD 03/84*
SPFCDATE DS    CL4                00YYDDDF CREATE DATE      *LBD 03/84*
SPFUDATE DS    CL4                00YYDDDF LAST USE DATE    *LBD 03/84*
SPFUTIME DS    CL2                HHMM LAST USE TIME        *LBD 03/84*
SPFSIZE  DS    CL2                BINARY SIZE               *LBD 03/84*
SPFINIT  DS    CL2                BINARY ORIG SIZE          *LBD 03/84*
SPFMOD   DS    CL2                BINARY # MOD STATEMENTS   *LBD 03/84*
SPFUSER  DS    CL7                UPDATE USER ID            *LBD 03/84*
         DS    CL3                WHO KNOWS                 *LBD 03/84*
         EJECT
         IHAPDS PDSBLDL=NO
         EJECT
         IEFZB4D0
         EJECT
         IEFZB4D2
         END
