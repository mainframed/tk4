         TITLE 'CVAF SUB-ROUTINE'
*------- ----- ------------------ ------------------------*
* NAME:  CVAFSUB                                          *
*                                                         *
* FUNCTION:    PROVIDE A COMMON SUBROUTINE TO READ        *
*              AND REPORT ON DATASETS IN A VTOC.          *
*              SUPPORTS BOTH INDEXED AND NON-INDEXED      *
*              VTOCS.                                     *
*                                                         *
* ENTRY:       REG 1 POINTS TO A DATA AREA CONTAINING     *
*              CONTROL INFORMATION AS FOLLOWS:            *
*                                                         *
*              OFFSET 0 OPTION FLAG                       *
*              01  PERFORM INITIALIZATION FUNCTIONS       *
*              02  CONTINUE READING VTOC                  *
*              03  PERFORM TERMINATION FUNCTIONS          *
*              04  PROCESS INDIVIDUAL DATASET             *
*                                                         *
*              OPTION 01                                  *
*              +1 (8) DDNAME FOR ALLOCATED TO VTOC        *
*              +9 (44) OPTIONAL DATA SET PREFIX           *
*                                                         *
*              THE DDNAME FOR THE VTOC MUST HAVE BEEN     *
*              PREALLOCATED....                           *
*                                                         *
*              OPTION 02                                  *
*              NO OTHER INFORMATION REQUIRED              *
*                                                         *
*              OPTION 03                                  *
*              NO OTHER INFORMATION REQUIRED              *
*                                                         *
*              OPTION 04                                  *
*              +1(6)  VOLSER OF DATASET                   *
*              +7(44) DATASET NAME                        *
*                                                         *
* RETURN:      THE FIRST 4 BYTES  OF THE ENTRY DATA       *
*              AREA WILL CONTAIN  THE ADDRESS OF A        *
*              LIST OF POINTERS TO INFORMATION ABOUT      *
*              A SPECIFIC DATASET AS FOLLOWS:             *
*                                                         *
*              +0 (4)       44    ADDR OF DATASET NAME    *
*              +4 (4)       6     ADDR OF VOLSER          *
*              +8 (4)       8     ADDR OF DSORG           *
*              +C (4)       6     ADDR OF LRECL           *
*              +10 (4)      6     ADDR OF BLKSIZE         *
*              +14 (4)      3     ADDR OF RECFM           *
*              +18 (4)      6     ADDR OF TRACKS ALLOCATED*
*              +1C (4)      6     ADDR OF CREATE DATE     *
*              +20 (4)      6     ADDR OF REFERENCE DATE  *
*              +24 (4)      4     ADDR OF # OF EXTENTS    *
*              +28 (4)      6     ADDR OF TRACKS USED     *
*                                                         *
*              REG 15 RETURN CODES:                       *
*                                 0 = ALL OK              *
*                                 4 = END OF VTOC         *
*                                 8 = OBTAIN ERROR        *
*                                 ALL OTHERS ARE CVAF     *
*                                 RETURN CODES.           *
*------- ----- ------------------ ------------------------*
* THIS SUBROUTINE HAS BEEN USED ON BOTH INDEXED AND       *
* NON-INDEXED VTOCS AND HAS BEEN VERIFIED AGAINST THE     *
* OUTPUT OF SUCH PROGRAMS A IEHLIST AND VTOCLIST. WHILE   *
* I DO NOT WARRENT THAT IT WILL CONTINUE TO WORK IN THE   *
* FUTURE OR BE SUPPORTED, IT DOES WORK AND IF ANY PROBLEMS*
* OR IMPROVEMENTS ARE MADE --- PLEASE LET THE AUTHOR KNOW.*
*                                                         *
* AUTHOR: LIONEL DYCK                                     *
*         ROCKWELL INTERNATIONAL                          *
*         PO BOX 2515                                     *
*         SEAL BEACH, CALIFORNIA 90740                    *
*         (213) 594-1125                                  *
*         MAIL CODE 110-SH28                              *
*                                                         *
*------- ----- ------------------ ------------------------*
CVAFSUB  $PROLOG R12
         EJECT
         L     R1,0(R1)                * LOAD ADDR OF PARM
         CLI   0(R1),X'01'             INITIAL OPTION ?
         BE    INIT                    YES
         CLI   0(R1),X'02'             CONTINUE
         BE    CONT                    YES
         CLI   0(R1),X'03'             TERMINATE OPTION ?
         BE    TERM                    YES
         CLI   0(R1),X'04'             SPECIFIC DSN ?
         BE    ONEDS                   YES
         $EPILOG 98                    UNKNOWN OPTION
         SPACE 1
CONT     DS    0H
         L     R5,DEBADDR
         LR    R10,R1                  LOAD RET ADDR
         B     READ                    CONTINUE READING
         SPACE 1
TERM     DS    0H
         B     EOF                     INSURE FILES CLOSED
         SPACE 1
ONEDS    DS    0H
         SETON DS1                     SET FLAG FOR 1 DSN
         MVC   F3BUFFER(44),7(R1)      MOVE DSN
         MVC   OVOL,1(R1)              MOVE VOLSER
         LR    R10,R1                  LOAD RET ADDR
         OBTAIN CAMLST1
         LTR   R15,R15                 FORMAT 4 OK
         BNZ   EOFDSE                  ERROR
         LA    R1,BUFFER
         USING IECSDSL4,R1
         MVC   TRKCYL(2),DS4DEVCT+2    SAVE TRKS/CYL
         DROP  R1
         OBTAIN CAMLST2
         LTR   R15,R15
         BNZ   EOFDSE                  DSN NOT FOUND
         LA    R9,BUFFER-44            -> DATA
         B     NOCLVL                  GO FOR IT
         EJECT
INIT     DS    0H
         LR    R10,R1                  LOAD RET ADDR
         LA    R1,1(R1)                SKIP OPTION
         LA    R2,VTOCDCB
         USING IHADCB,R2
         MVC   DCBDDNAM,=CL8' '        CLEAR DDNAME
         MVC   DCBDDNAM(8),0(R1)       MOVE DDNAME
         LA    R1,8(R1)                PAST DDNAME
         CLI   0(R1),C' '              ANY INDEX ?
         BE    FIXJFCB                 NO
         LA    R2,LEVEL                   YES
MVLVLC   DS    0H
         MVC   0(1,R2),0(R1)
         LA    R2,1(R2)
         LA    R1,1(R1)
         CLI   0(R1),C' '
         BE    STLENLVL
         B     MVLVLC
STLENLVL DS    0H
         LA    R1,LEVEL
         SR    R2,R1
         BCTR  R2,R0                   LESS 1
         STH   R2,LENLVL
         SETON LVLFLAG                 SET FLAG ON
         EJECT
FIXJFCB  DS    0H
         RDJFCB VTOCDCB
         OI    JFCBTSDM,JFCNWRIT       TURN WRITE BACK FLAG ON
         MVC   JFCBDSNM,DSN4           SET FOR VTOC
         MVC   OVOL,JFCBVOLS           SET VOLSER
         XC    BFLHFL,BFLHFL
         OI    BFLHFL,BFLHDSCB         READ DSCB W/BUFFER
         MVI   BFLHNOE,1               SET FOR 1 ENTRY
         LA    R1,BUFFER
         ST    R1,BFLEBUF              SAVE ADDR
         LA    R1,140
         STC   R1,BFLELTH              SAVE LENGTH
         OI    BFLEFL,BFLECHR
         EJECT
OPENV    OPEN  VTOCDCB,TYPE=J
         LA    R2,VTOCDCB
         USING IHADCB,R2
         L     R5,DCBDEBAD               -> DEB
         ST    R5,DEBADDR
         DROP  R2
         USING DEBBASIC,R5
         ICM   R4,7,DEBSUCBB           -> UCB
         DROP  R5
         CVAFTST UCB=(R4)
         CH    R15,=H'08'              HAS IX VTOC
         BNE   NOIX                    NO
         SETON IX
         LA    R1,96
         STC   R1,BFLELTH              SAVE LENGTH
         IFOFF LVLFLAG,READIX
         MVC   RETDSN,LEVEL            SET INITIAL SEARCH ARG
         B     READIX
         EJECT
NOIX     DS    0H
         MVC   F3BUFFER(44),7(R1)      MOVE DSN
         OBTAIN CAMLST1
         LA    R1,BUFFER
         USING IECSDSL4,R1
         MVC   TRKCYL(2),DS4DEVCT+2    SAVE TRKS/CYL
         MVC   BUFFER(44),DSN4         SET INITIAL DSN
         B     READNIX
         DROP  R1
READ     DS    0H
         IFOFF IX,READNIX
READIX   DS    0H
         IFON  FIRST,READIXD
         MVC   BUFFER(44),DSN4         SET INITIAL DSN
         CVAFDIR ACCESS=READ,DEB=(R5),DSN=BUFFER,BUFLIST=BUFLIST
         SETON FIRST
         L     R1,BFLEBUF              -> BUFFER
         USING IECSDSL4,R1
         MVC   LASTDSCB,DS4HPCHR       SAVE HIGHEST DSCB
         MVC   TRKCYL(2),DS4DEVCT+2    SAVE TRKS/CYL
         DROP  R1
         B     READ
         SPACE 2
READIXD  CVAFSEQ ACCESS=GT,BUFLIST=BUFLIST,DEB=(R5),                   X
               DSN=RETDSN
         B     DOIT
READNIX  CVAFSEQ ACCESS=GT,BUFLIST=BUFLIST,DEB=(R5)
         EJECT
DOIT     DS    0H
         USING CVPL,R1
         CLI   CVSTAT,0                ANY STATUS
         BE    CKSTAT
         CLI   CVSTAT,STAT032          END OF DATA
         BE    EOF                     YES - ALL OK
         SR    R11,R11
         IC    R11,CVSTAT
         B     EOFE
         DROP  R1
CKSTAT   DS    0H
         LTR   R15,R15
         BZ    READOK
         C     R15,=F'04'
         BE    EOF
         EJECT
READOK   EQU   *
         IFON  IX,DOIXDSN
         CLC   LASTDSCB,BFLEARG        LAST DSCB ?
         BE    EOF                     YES
         L     R9,BFLEBUF              -> BUFFER
         USING IECSDSL1,R9
         CLI   DS1FMTID,C'1'           FORMAT 1 DSCB ?
         BNE   READ                    NO
         MVC   RETDSN,DS1DSNAM         MOVE DSNAME
         DROP  R9
         L     R9,BFLEBUF              -> BUFFER
         B     CKDSORG
         EJECT
DOIXDSN  DS    0H
         L     R9,BFLEBUF              -> BUFFER
         S     R9,=F'44'               LESS DSN LEN
         USING IECSDSL1,R9
CKDSORG  DS    0H
         IFOFF LVLFLAG,NOCLVL
         LH    R4,LENLVL
         LTR   R4,R4
         BZ    NOCLVL
         EX    R4,LVLCLC               SAME LEVEL ?
         BNE   READ                    NO - SKIP IT
NOCLVL   DS    0H
         LA    R4,VSAM
         TM    DS1DSORG+1,X'08'        VSAM
         BO    MVDSORG
         LA    R4,ISAM
         TM    DS1DSORG,DS1DSGIS       ISAM
         BO    MVDSORG
         LA    R4,PS
         TM    DS1DSORG,DS1DSGPS       PS
         BO    MVDSORG
         LA    R4,DA
         TM    DS1DSORG,DS1DSGDA       DA
         BO    MVDSORG
         LA    R4,PO
         TM    DS1DSORG,DS1DSGPO       PO
         BO    MVDSORG
         LA    R4,UNK
MVDSORG  MVC   DSORG,0(R4)
         EJECT
         LH    R4,DS1BLKL              BLKSIZE
         CVD   R4,DWK
         MVC   BLKSIZE(6),=X'402020202021'
         ED    BLKSIZE(6),DWK+5
         LH    R4,DS1LRECL             LRECL
         CVD   R4,DWK
         MVC   LRECL(6),=X'402020202021'
         ED    LRECL(6),DWK+5
         MVC   CDATE(6),=X'20214B202020'
         MVC   RDATE(6),=X'20214B202020'
         XR    R4,R4
         IC    R4,DS1CREDT
         CVD   R4,DWK
         ICM   R3,B'0011',DWK+L'DWK-2
         ICM   R4,B'0011',DS1CREDT+1
         CVD   R4,DWK
         SRL   R3,4
         STC   R3,DWK+5
         ED    CDATE,DWK+5
         SPACE
         XR    R4,R4
         IC    R4,DS1REFD
         CVD   R4,DWK
         ICM   R3,B'0011',DWK+L'DWK-2
         ICM   R4,B'0011',DS1REFD+1
         CVD   R4,DWK
         SRL   R3,4
         STC   R3,DWK+5
         ED    RDATE,DWK+5
         CLC   RDATE+3(3),=C'000'      ANY DATE HERE
         BNE   RDATEOK
         MVC   RDATE(6),=C'**.****'
RDATEOK  DS    0H
         SPACE
         SR    R8,R8
         IC    R8,DS1NOEPV             # OF EXTENTS
         CVD   R8,DWK
         MVC   EXT(4),=X'40202021'
         ED    EXT(4),DWK+6
         EJECT
****     DETERMINE RECORD FORMAT
         MVC   RECFM,=CL3' '           RESET RECFM
         LA    R4,RECFM
         TM    DS1RECFM,DCBRECU        UNDEF
         BNO   NOU
         MVI   0(R4),C'U'
         LA    R4,1(R4)
         B     CKB
NOU      TM    DS1RECFM,DCBRECV        VARIABLE
         BZ    NOV
         MVI   0(R4),C'V'
         LA    R4,1(R4)
         B     CKB
NOV      TM    DS1RECFM,DCBRECF        FIXED
         BZ    NOF
         MVI   0(R4),C'F'
         LA    R4,1(R4)
         B     CKB
NOF      MVI   0(R4),C'?'
         LA    R4,1(R4)
CKB      DS    0H                      CHECK BLOCKING
         TM    DS1RECFM,DCBRECBR
         BZ    NOB
         MVI   0(R4),C'B'
         LA    R4,1(R4)
NOB      DS    0H
         TM    DS1RECFM,DCBRECSB       SPANNED ?
         BZ    NOS
         MVI   0(R4),C'S'
         LA    R4,1(R4)
NOS      DS    0H
         TM    DS1RECFM,DCBRECCA       ASA CC
         BZ    NOA
         MVI   0(R4),C'A'
         B     OKREC
NOA      TM    DS1RECFM,DCBRECCM       MACH CC
         BZ    OKREC
         MVI   0(R4),C'M'
OKREC    DS    0H
         EJECT
*        DETERMINE TRACKS USED
         CLC   DS1EXT1,=10X'00'   NULL DATASET
         BE    NULLDS             YES
         XC    EXTENTW(EXTENTWL),EXTENTW CLEAR ALL EXTS
         MVC   EXTENT1A,DS1EXT1
         CLC   DS1PTRDS,=XL5'0'        ANY FMT 3 ?
         BE    DOF3A                   NO - SKIP OBTAIN
         MVC   VTOCADDR,DS1PTRDS       GET -> FMT 3
         OBTAIN CAMLIST                GET IT
         LTR   R15,R15                 OK ?
         BE    DOF3                    YES
         MVC   TRACKSU+1(5),=C'ERROR'
         B     RETURN
DOF3     DS    0H
         LA    R7,F3BUFFER
         USING IECSDSL3,R7
         MVC   EXTENT3A,DS3EXTNT
         MVC   EXTENT3B,DS3ADEXT
         DROP  R7
DOF3A    DS    0H
         LA    R7,EXTENTW
EXTENTS  EQU   *
         USING EXTENT,R7
         CLI   EXTTYPE,0
         BNH   EXTLOOP
         LH    R1,EXTLOCC
         MH    R1,TRKCYL
         AH    R1,EXTLOHH
         LH    R0,EXTHICC
         MH    R0,TRKCYL
         AH    R0,EXTHIHH
         BCTR  R1,0
         SR    R0,R1
         AH    R0,TRKS
         STH   R0,TRKS
         SPACE
EXTLOOP  LA    R7,EXTNEXT
         BCT   R8,EXTENTS
         SPACE
EXTCVRT  EQU   *
         ICM   R8,B'11',DS1LSTAR
         CLI   DS1LSTAR+2,0                                       82089
         BNH   LSTAR0
         LA    R8,1(R8)
LSTAR0   DS    0H
         STH   R8,TRKSU
         EJECT
FMTSIZE  DS    0H
         LH    R3,TRKS                 GET TRACK COUNT
         XC    TRKS,TRKS               CLEAR IT
         CVD   R3,DWK                  CONVERT ALLOC TRKS
         MVC   TRACKS(6),=X'402020202021' EDIT MASK
         ED    TRACKS(6),DWK+5         EDIT IT
         LH    R3,TRKSU                GET TRACK COUNT
         XC    TRKSU,TRKSU             CLEAR IT
         CVD   R3,DWK                  CONVERT ALLOC TRKS
         MVC   TRACKSU(6),=X'402020202021'
         ED    TRACKSU(6),DWK+5        EDIT IT
         B     RETURN
         SPACE 2
NULLDS   DS    0H
         MVC   TRACKSU(6),=CL6'0'
         MVC   TRACKS(6),=CL6'0'
         EJECT
RETURN   DS    0H
         LA    R1,RETPARM
         ST    R1,0(R10)               SAVE RET ADDR
         $EPILOG 0
         EJECT
EOFDSE   $EPILOG 8                     OBTAIN ERROR
         SPACE 1
EOF      CLOSE (VTOCDCB,FREE)
         SETOF FIRST
         $EPILOG 4
EOFE     CLOSE (VTOCDCB,FREE)
         SETOF FIRST
         LR    R15,R11
         $EPILOG
         LTORG
         BITSW IX,LVLFLAG,FIRST,DS1
DWK      DC    D'0'                    WORK AREA
ISAM     DC    CL8'ISAM'
PS       DC    CL8'PS'
DA       DC    CL8'DA'
PO       DC    CL8'PO'
VSAM     DC    CL8'VSAM'
UNK      DC    CL8'UNKNOWN'
LVLCLC   CLC   LEVEL(0),RETDSN         ** EXECUTED **
DEBADDR  DC    A(0)
TRKCYL   DC    H'0'                    TRKS/CYL FROM FMT4
TRKS     DC    H'0'
TRKSU    DC    H'0'
LENLVL   DC    H'0'
LEVEL    DC    CL44' '
EXTCOUNT DC    X'00'
LASTDSCB DC    XL5'00'
         DS    0F
EXLST    DC    X'09000000'
         DC    X'87',AL3(JFCBDSNM)
         EJECT
         IEFJFCBN LIST=YES
         EJECT
VTOCDCB  DCB   DSORG=DA,DDNAME=CVAFVTOC,EXLST=EXLST,MACRF=E
         EJECT
CAMLIST  CAMLST SEEK,VTOCADDR,OVOL,F3BUFFER
CAMLST1  CAMLST SEARCH,DSN4,OVOL,BUFFER
CAMLST2  CAMLST SEARCH,F3BUFFER,OVOL,BUFFER
DSN4     DC    44X'04'                 FORMAT4 DSCB
VTOCADDR DC    XL5'0'
F3BUFFER DC    CL140' '
EXTENTW  DS    0H
EXTENT1A DC    XL30'0'
EXTENT3A DC    XL40'0'
EXTENT3B DC    XL90'0'
EXTENTWL EQU   *-EXTENTW
         SPACE 2
BUFLIST  ICVAFBFL DSECT=NO
BUFFER   DC    CL140'  '               ACTUAL DATA
RETDSN   DC    CL44'  '                ACTUAL DSN
OVOL     DC    CL6' '                  VOLSER
DSORG    DC    CL8' '                  DSORG
LRECL    DC    CL6' '                  LRECL
BLKSIZE  DC    CL6' '                  BLKSIZE
RECFM    DC    CL3' '                  RECFM
TRACKS   DC    CL6' '                  TRACKS ALLOC
CDATE    DC    CL6' '                  CREATE DATE
RDATE    DC    CL6' '                  REFERENCE DATE
EXT      DC    CL4' '                  # EXTENTS
TRACKSU  DC    CL6' '                  TRACKS USED
RETPARM  DC    A(RETDSN,OVOL,DSORG)
         DC    A(LRECL,BLKSIZE,RECFM,TRACKS)
         DC    A(CDATE,RDATE,EXT,TRACKSU)
         EJECT
         DSECT
         IECSDSL1 (1)
         EJECT
         DSECT
         IECSDSL1 (3)
         EJECT
         DSECT
         IECSDSL1 (4)
         EJECT
CVPL     ICVAFPL DSECT=YES
         EJECT
         DCBD  DSORG=DA
         EJECT
         IEZDEB
         EJECT
EXTENT   DSECT
EXTTYPE  DS    BL1
EXTSEQ   DS    XL1
EXTLOCC  DS    HL2
EXTLOHH  DS    HL2
EXTHICC  DS    HL2
EXTHIHH  DS    HL2
EXTNEXT  EQU   *
         END
