MCNVTCAT TITLE 'IPO-SUPPLIED MVS CATALOG CONVERSION PROGRAM            C
                        '
*/* REFER:  IPO1.SAMPLIB(MCNVTCAT)
*/* COMPID: SYSTEM
*/* DOCL    THIS PROGRAM IS USED TO CONVERT ONE MVS CATALOG INTO
*/*         ANOTHER MVS CATALOG BY GENERATING IDCAMS CONTROL
*/*         STATEMENTS FROM A LISTING OF THE SOURCE CATALOG.
*/*
***********************************************************************
*                                                                     *
*             MODULE NAME = MCNVTCAT                                  *
*                                                                     *
*             DESCRIPTIVE NAME =  MVS/SP SYSTEM IPO SUPPLIED          *
*                 PROGRAM TO CONVERT AN MVS CATALOG.                  *
*                                                                     *
*             COPYRIGHT = 5750 AA9                                    *
*                         INTERNATIONAL BUSINESS MACHINES CORPORATION *
*                         1978, 1980                                  *
*                                                                     *
*             FUNCTION =                                              *
*                REBUILD USERCATALOG, NONVSAM, AND GDG ENTRIES        *
*                AND THEIR ASSOCIATIONS FROM A IDCAMS LISTCAT         *
*                LISTING OF A PREVIOUS MVS CATALOG.                   *
*                                                                     *
*                OPERATION =                                          *
*                                                                     *
*                  THIS PROGRAM WILL READ THE OUTPUT OF AN IDCAMS     *
*                  'LISTCAT ALL'    COMMAND AND PRODUCE CONTROL       *
*                  CARDS TO IMPORT THE USER CATALOGS AND DEFINE THEIR *
*                  ASSOCIATIONS, DEFINE NONVSAM DATA SETS AND INCLUDE *
*                  THEIR ASSOCIATIONS, AND DEFINE GDGS AND THEIR      *
*                  ASSOCIATIONS.                                      *
*                                                                     *
*                 A PARAMETER MAY BE SPECIFIED WHICH WILL BE USED AS  *
*                 THE CATALOG AND PASSWORD FOR EACH OPERATION.  SPECIFY
*                 AS    PARM='CATNAME/PASSWORD'   ON THE EXECUTE CARD.*
*                THIS CAN BE USED TO ELIMINATE THE PROMPTING FOR THE  *
*                MASTER CATALOG'S PASSWORD OR TO SPECIFY AN           *
*                ALTERNATE CATALOG NAME.                              *
*                                                                     *
*                NOTE THAT THE OUTPUT OF LISTCAT DEFAULTS TO          *
*                LRECL=125,BLKSIZE=625,RECFM=VBA .                    *
*                                                                     *
*                NOTE:  ALL NONVSAM DATA SETS WHOSE NAME BEGINS WITH  *
*                'SYSCTLG.'  WILL BE CHANGED TO  'SYSCTLG.VXXXXXX'    *
*                WHERE XXXXXX IS THE VOLSER ON WHICH THE DATA SET     *
*                RESIDES.  THIS IS DONE TO PICK UP ADDED              *
*                SUPPORT FROM SU8(DATA MANAGEMENT)                    *
*                                                                     *
*                                                                     *
*              NOTES =                                                *
*                                                                     *
*                 DEPENDENCIES = CHARACTER IS EBCDIC.  REASSEMBLE     *
*                    IF A DIFFERENT CHARACTER SET IS NEEDED.          *
*                                                                     *
*                 RESTRICTIONS =                                      *
*                    OUTPUT CONTROL STATEMENTS ALLOW FOR A MAXIMUM    *
*                        OF SIX VOLUMES PER DATA SET.                 *
*                    INPUT IS DEPENDENT ON FORMAT OF IDCAMS           *
*                        'LISTCAT ALL' OUTPUT.                        *
*                                                                     *
*                 REGISTER CONVENTIONS = STANDARD CONVENTIONS.        *
*                    REGISTERS 0,1,2,3 = WORK REGISTERS               *
*                    REGISTERS 4,5,6   = UNUSED                       *
*                    REGISTER  7       = OUTPUT INDEX VALUE           *
*                    REGISTERS 8       = BAL REGISTER                 *
*                    REGISTER  9       = WORK                         *
*                    REGISTER  10      = DEVTAB ENTRY COUNTER         *
*                    REGISTER  11      = DEVTAB ENTRY POINTER         *
*                    REGISTER  12      = ADDRESSABILITY TO MCNVTCAT   *
*                                              CSECT                  *
*                    REGISTER  13      = SAVE AREA REGISTER           *
*                    REGISTERS 14,15   = WORK REGISTERS               *
*                                                                     *
*                PATCH LABEL = PATCH (UNUSED AND INTIALIZED TO        *
*                   'ZAP*'S)                                          *
*                                                                     *
*             MODULE TYPE = PROCEDURE                                 *
*                                                                     *
*                PROCESSOR = ASM                                      *
*                                                                     *
*                MODULE SIZE = 3K                                     *
*                                                                     *
*                ATTRIBUTES = PROBLEM PROGRAM, NON-REENTRANT          *
*                                                                     *
*             ENTRY POINTS = MCNVTCAT (ONLY ENTRY POINT)              *
*                                                                     *
*                LINKAGE =                                            *
*                   STANDARD FROM EXECUTE STATEMENT                   *
*                                                                     *
*             INPUT = STANDARD PARAMETER LIST FROM EXECUTE            *
*                STATEMENT.  IF PARAMETER EXISTS, IT IS ASSUMED       *
*                TO BE IN THE FORMAT  'CATNAME/PASSWORD' AND IS       *
*                INSERTED IN THE IDCAMS OUTPUT CONTROL STATEMENTS.    *
*                                                                     *
*             OUTPUT = IDCAMS CONTROL STATEMENTS TO REBUILD THE       *
*                CATALOG ENTRIES SPECIFIED ABOVE.                     *
*                                                                     *
*             EXIT - NORMAL = AT PROGRAM END VIA BRANCH REGISTER 14   *
*                                                                     *
*                OUTPUT = IDCAMS CONTROL STATEMENTS VIA 'CONTROL'     *
*                    DD STATEMENT.                                    *
*                                                                     *
*                RETURN CODE = ZERO                                   *
*                                                                     *
*             EXIT - ERROR = AT PROGRAM END VIA BRANCH REGISTER 14    *
*                                                                     *
*                OUTPUT = ERROR MESSAGE INDICTING SOME ENTRIES        *
*                   NOT CONVERTED BECAUSE MORE THAN 5 VOLUMES         *
*                                                                     *
*                RETURN CODE =  4                                     *
*                                                                     *
*             EXIT - ERROR = AT PROGRAM END VIA BRANCH REGISTER 14    *
*                                                                     *
*                OUTPUT = ERROR MESSAGE FROM OPEN INDICATING DD       *
*                   STATEMENT MISSING.                                *
*                                                                     *
*                RETURN CODE =  16                                    *
*                                                                     *
*             EXTERNAL REFERENCES =                                   *
*                                                                     *
*                ROUTINES = NONE                                      *
*                                                                     *
*                DATA AREAS = DEVNAMET(DEVICE NAME TABLE)             *
*                                                                     *
*                CONTROL BLOCKS = NONE                                *
*                                                                     *
*             TABLES = NONE                                           *
*                                                                     *
*             MACROS = SAVE,RETURN,OPEN,GET,PUT,CLOSE,LOAD            *
*                                                                     *
*             CHANGE ACTIVITY = NONE                                  *
*                                                                     *
*             MESSAGES = NONE                                         *
*                                                                     *
*             ABEND CODES = NONE                                      *
*                                                                     *
***********************************************************************
         EJECT
MCNVTCAT CSECT
         SAVE  (14,12),,MCNVTCAT.IPO.&SYSTIME..&SYSDATE SAVE REGISTERS
         LR    R12,R15            LOAD BASE REGISTER
         USING MCNVTCAT,R12       ESTABLISH ADDRESSABILITY TO CSECT
         LA    R2,SAVE            GET SAVE AREA ADDRESS
         ST    R13,4(R2)          CHAIN SVVE AREAS
         ST    R2,8(R13)          CHAIN SAVE AREAS
         LR    R13,R2             POINT TO NEW SAVE AREA
         L     R2,0(R1)           ADDRESS OF PARAMETER LIST
         MVC   LASTCC,=F'16'      INIT RETURN CODE            /*FIX1*/
         LOAD  EP=DEVNAMET        LOAD DEVICE NAME TABLE
         ST    R0,DEVADDR         ...AND SAVE ITS ADDRESS
         LH    R3,0(R2)           LENGTH OF PARM LIST
         LA    R2,2(R2)           ADDRESS OF DATA IN PARM LIST
         LTR   R3,R3              ANY DATA ?
         BZ    NOPARM             NO...SKIP PARM PROCESSING
         SPACE
***
***  PROCESS PARM
***
***
         CH    R3,=H'55'          IS PARM TOO LONG(LEN+2,DSN=44,/=1,
*                                 PASSWORD=8)
         BH    NOPARM             YES...ASSUME NO PARM
         BCTR  R3,0               DECR LEN BY 1 FOR EX INST.
         EX    R3,MVCCAT          MOVE PARM TO CAT DATA AREA
         MVI   CATFLAG,1          SET FLAG TO INCLUDE CAT IN CTL STMTS
NOPARM   OPEN  (LIST,INPUT)       OPEN INPUT D.S.(LISTCAT OUTPUT)
         TM    LIST+48,X'10'      DID OPEN WORK?
         BNO   RETURN4            NO...EXIT WITH RETURN CODE 4
         OPEN  (CONTROL,OUTPUT)   OPEN OUTPUT D.S.(CTL STMTS)
         TM    CONTROL+48,X'10'   DID OPEN WORK?
         BNO   RETURN4            NO...EXIT WITH RETURN CODE 4
         XC    LASTCC,LASTCC      RESET RETURN CODE           /*FIX1*/
         SPACE 3
READ     BAL   R8,GET             READ LISTCAT RECORD
         MVC   OUT,BLANKS         CLEAR OUTPUT LINE
READ2    CLC   DATA+66(4),=CL4'TIME'  IS THIS A LISTING HEADER?
         BE    READ               YES...GET ANOTHER RECORD
         CLC   DATA(25),BLANKS    IS THIS A LISTING HEADER?
         BE    READ               YES...GET ANOTHER RECORD
         CLC   DATA(7),=CL7'NONVSAM'  NONVSAM ENTRY?
         BE    NONV               YES...BR TO PROCESS IT
         CLC   DATA+3(7),=CL7'NONVSAM'  GDG NONVSAM ENTRY?
         BE    NONV               YES...BR TO PROCESS IT
         CLC   DATA(11),=CL11'USERCATALOG'  USER CATALOG?
         BE    USER1              YES...BR TO PROCESS IT
         CLC   DATA(8),=CL8'GDG BASE' GDG BASE?
         BE    GDG                YES...BR TO PROCESS IT
         CLI   DATA,C' '          NULL LINE?
         BE    READ               YES...GET ANOTHER RECORD
         CLC   =C'ALIAS',DATA     ALIAS RECDS NOT PRC'D HERE  /*FIX1*/
         BE    READ               BR TO SKIP RECORD           /*FIX1*/
         CLC   =C'VOLUME',DATA    VOL   RECDS NOT PRC'D HERE  /*FIX1*/
         BE    READ               BR TO SKIP RECORD           /*FIX1*/
         MVC   OUT+1(3),=C'/* '   NO...UNSUPPORTED TYPE
         MVC   OUT+4(48),DATA     .....COPY INPUT TO OUTPUT
         MVC   OUT+54(26),=CL26'NOT PROCESSED */' ..AND DOCUMENT
         PUT   CONTROL,OUT        .....TELL ABOUT IT
         B     READ               GET ANOTHER RECORD
         SPACE 3
USER1    MVC   OUT,USE1           SET UP USER CATALOG CTL STMTS
         MVC   OUT2,USE2          SET UP USER CATALOG STMTS
         MVC   OUT+19(44),DATA+16 MOVE CATALOG NAME TO OUTPUT
         MVC   RELATE(44),DATA+16 SAVE CATALOG NAME FOR ALIAS'S
         LA    R9,USER2           SET LOOP ADDRESS TO NSI
USER2    BAL   R8,GET             GET NEXT RECORD
         CLC   DATA+66(4),=CL4'TIME' IS THIS A LISTING HEADER?
         BE    USER2              YES...BR TO GET ANOTHER RECORD
         CLC   DATA(25),BLANKS    IS THIS A LISTING HEADER?
         BE    USER2              YES...BR TO GET ANOTHER RECORD
         CLC   DATA+7(6),=CL6'VOLSER' IS THIS THE VOLSER LINE?
         BNE   CHKASOC            NO...CHECK FOR ASSOCIATIONS
         BAL   R9,DEVALL          VOLSER...BR TO CONVERT DEVICE TYPE
         MVC   OUT2+15(8),0(R11)  MOVE DEVICE TYPE TO OUTPUT
         BAL   R14,STRIPVOL       DELETE LEADING DASHES FROM VOLSER
*                                 THIS COULD BE INCORRECT, BUT LISTCAT
*                                 PADS VOLSERS OF LESS THAN 6 CHARS
*                                 WITH DASHES ON THE LEFT.
         MVC   OUT2+29(6),DATA+25 MOVE VOLSER TO OUTPUT
         BAL   R8,PUT             WRITE USER CATALOG CTL STMTS
         B     USER2              LOOP TO GET POSSIBLE ASSOCIATIONS
         SPACE 3
GDG      MVC   OUT,GDG1           SET UP GDG BASE CTL STMTS
         MVC   OUT2,GDG2          SET UP GDG BASE CTL STMTS
         MVC   OUT+19(44),DATA+16 MOVE ENTRY NAME TO OUTPUT
GDGL     BAL   R8,GET             GET NEXT RECORD
         CLC   DATA+66(4),=CL4'TIME' IS THIS A LISTING HEADER?
         BE    GDGL               YES...BR TO GET ANOTHER RECORD
         CLC   DATA(25),BLANKS    IS THIS A LISTING HEADER?
         BE    GDGL               YES...BR TO GET ANOTHER RECORD
         CLC   DATA+7(5),=CL5'LIMIT' IS THIS THE LIMIT LINE?
         BNE   GDGL               NO...BR TO GET NEXT LINE
         MVC   OUT2+16(3),DATA+28 MOVE LIMIT TO OUTPUT
         CLI   OUT2+16,C'-'       LEADING DASH ?
         BNE   GDGL3              NO...BR TO PROCESS NEXT FIELD
         MVI   OUT2+16,C' '       YES...BLANK IT OUT
         CLI   OUT2+17,C'-'       TWO LEADING DASHES?
         BNE   GDGL3              NO...BR TO PROCESS NEXT FIELD
         MVI   OUT2+17,C' '       YES...MAKE BOTH BLANK
GDGL3    MVC   OUT2+21(30),DATA+36 MOVE KEYWORDS TO OUTPUT
*                                 SCR/NOSRC   EMP/NOEMP
         BAL   R8,PUT             WRITE GDG BASE CTL STMTS
         B     READ               LOOP TO GET NEXT RECORD
         SPACE 3
NONV     MVC   OUT,NON1           SET UP NONVSAM CTL STMTS
         MVC   OUT2,NON2          SET UP NONVSAM CTL STMTS
         MVC   OUT3,NON3          SET UP NONVSAM CTL STMTS
         MVC   OUT4,NON4          SET UP NONVSAM CTL STMTS
         LA    R7,16              INDEX INTO OUTPUT LINE FOR MULTIPLE
*                                 VOLUME, FSEQN, DEVT .
         MVC   OUT+19(44),DATA+16 MOVE DATA SET NAME TO OUTPUT LINE
         MVC   RELATE(44),DATA+16 SAVE IN CASE IT IS OS CATALOG
         LA    R9,NONV2           SET ADDRESS TO NSI
NONV2    BAL   R8,GET             GET NEXT RECORD
         CLC   DATA+66(4),=CL4'TIME' IS THIS A LISTING HEADER?
         BE    NONV2              YES...GET ANOTHER RECORD
         CLC   DATA(25),BLANKS    IS THIS A LISTING HEADER?
         BE    NONV2              YES...GET ANOTHER RECORD
         CLC   DATA+7(6),=CL6'VOLSER' IS THIS THE VOLSER LINE?
         BNE   PUTVOL             NO...BR TO CHECK FOR ASSOCIATIONS
         CH    R7,=H'55'          CHECK FOR MAX NUMBER OF VOLS/*FIX1*/
         BNL   BYPASS1            TOO MANY VOLS EXIT          /*FIX1*/
         BAL   R9,DEVALL          BR TO CONVERT DEVICE TYPE
         LA    R1,OUT2(R7)        INDEX INTO OUTPUT LINE
         MVC   0(8,R1),DEVTYPE    MOVE DEVICE TYPE TO OUTPUT LINE
         LA    R1,OUT4(R7)        INDEX INTO OUTPUT LINE
         BAL   R14,STRIPVOL       DELETE LEADING DASHES FROM VOLSER
*                                 THIS COULD BE INCORRECT, BUT LISTCAT
*                                 PADS VOLSERS OF LESS THAN 6 CHARS
*                                 WITH DASHES ON THE LEFT.
         MVC   0(6,R1),DATA+25    MOVE VOLUME TO OUTPUT LINE
         CLC   RELATE(8),=C'SYSCTLG.' IS THIS AN OS CATALOG
         BNE   FS                 NO... BR TO PROCESS FILE SEQ NUM
         MVC   RELATE+8(36),BLANKS YES...BLANK END OF DSN
         MVI   RELATE+8,C'V'      SET CAT NAME TO SYSCTLG.V--------
         MVC   RELATE+9(6),0(R1)  MOVE VOLSER TO CAT NAME
*                                 SYSCTLG.VXXXXXX WHERE XXXXXX IS THE
*                                 VOLUME ON WHICH THE OS CATALOG
*                                 RESIDES WILL ENABLE SELECTABLE UNIT
*                                 8(DATA MANAGEMENT) CODE.
         MVC   OUT+19(44),RELATE  MOVE TO OUTPUT LINE AS NEW DSN
FS       LA    R1,OUT3(R7)        INDEX INTO OUTPUT LINE
         MVC   0(8,R1),DATA+88    MOVE FILE SEQ NUM TO OUTPUT LINE
         LA    R7,9(R7)           INDEX INTO OUTPUT LINE FOR NEXT ENTRY
         B     NONV2              LOOP TO GET NEXT VOLSER
*                                                             /*FIX1*/
* ENTER TO TO PUT DATA BYPASSED MESSAGE                       /*FIX1*/
*                                                             /*FIX1*/
BYPASS1  DS    0H                                             /*FIX1*/
         MVC   WTOM+058(30),OUT+19                            /*FIX1*/
         MVC   LASTCC,=F'4'                                   /*FIX1*/
*               4567890123456789012345678901234567890123456789012345678
WTOM     WTO   '-> MORE THAN 5 VOLUMES DATASET NOT CONVERTED. DSN=12345X
               6789012345678901234567890',ROUTCDE=11          /*FIX1*/
         B     READ                                           /*FIX1*/
***
***   USE SYSTEM DEVICE NAME TABLE
***
***
DEVALL   L     R1,DEVADDR         ADDRESS OF DEVICE NAME TABLE
         L     R10,0(R1)          NUMBER OF ENTRIES
         LA    R11,4(R1)          ADDRESS OF FIRST ENTRY
         MVC   TEMP,DATA+51       MOVE DEVICE TYPE TO TEMP FIELD
         TR    TEMP,TRTAB         TRANSLATE FROM CHAR->PSEUDO BINARY
         PACK  DWORD,TEMP         STRIP OF ZONE FIELD
         LM    R0,R1,DWORD        LOAD IN REG FOR SHIFT
         SRDL  R0,4               SHIFT OF SIGN DIGIT FROM PACK
         ST    R1,SCANTAG         STORE IN SCAN ARGUMENT
DEVLP    DS    0H
         CLC   08(4,R11),SCANTAG  IS THIS THE DEVICE TYPE
         BE    DEVFND             YES... BR TO DEVICE FOUND
DEVLP@   LA    R11,12(R11)        .. INCR TO NEXT TABLE ENTRY
         BCT   R10,DEVLP          LOOP UNTIL END OF TABLE
         LA    R11,DATA+51        SET DEVICE TYPE TO LISTCAT DATA.
*                                 WILL SHOW ON OUTPUT AS CHARACTER
*                                 REPRESENTATION OF HEX FROM UCB
*                                 INSTEAD OF UNITNAME SUCH AS 3330.
*
DEVFND   MVC   DEVTYPE(8),0(R11)  SAVE DEVICE TYPE
         BR    R9                 RETURN TO MAINLINE CODE
         SPACE 3
CHKASOC  CLC   DATA+5(12),=CL12'ASSOCIATIONS' IS THIS THE ASSOC LINE?
         BNER  R9                 NO...RETURN TO MAINLINE CODE
ALIASCHK BAL   R8,GET             YES...GET ALIAS ASSOCIATED WITH THIS
*                                 CATALOG
         CLC   DATA+66(4),=CL4'TIME' IS THIS A LISTING RECORD?
         BE    ALIASCHK           YES...BR TO GET ANOTHER RECORD
         CLC   DATA(25),BLANKS    IS THIS A LISTING RECORD?
         BE    ALIASCHK           YES... BR TO GET ANOTHER RECORD
         CLC   DATA+7(5),=CL5'ALIAS' IS THIS THE ALIAS ENTRY LINE?
         BNE   READ2              NO...BR TO GET ANOTHER RECORD
ALIAS    MVC   OUT,ALIAS1         YES..ALIAS - SET UP ALIAS CTL STMTS
         MVC   OUT2,ALIAS2        SET UP ALIAS CTL STMTS
         MVC   OUT2+15(44),DATA+16 MOVE INDEX NAME TO OUTPUT
         MVC   OUT+19(44),RELATE  MOVE RELATED CATALOG NAME TO OUTPUT
         BAL   R8,PUT             WRITE REOCRDS
         B     ALIASCHK           BR TO CHECK FOR MORE ALIAS RECORDS
         SPACE 3
EOF      CLOSE (LIST)             AT END OF INPUT, CLOSE FILE
         CLOSE (CONTROL)          CLOSE OUTPUT FILE ALSO
RETURN4  L    R15,LASTCC          LOAD RETURN CODE            /*FIX1*/
         L    R13,4(R13)          POINT TO SAVE AREA FOR CALLERS REGS
         RETURN (14,12),,RC=(15)  RETURN TO CALLER - RC= REG 15
         SPACE 3
STRIPVOL LA    R15,6              MAX LENGTH OF VOLSER
STRIPV2  CLI   DATA+25,C'-'       IS LEADING CHARACTER A DASH?
         BNER  R14                NO, RETURN TO MAINLINE
         MVC   DATA+25(6),DATA+26 SHIFT VOLSER,STRIPPING OFF LEADING
*                                 DASH.  NOTE - LISTCAT PADS VOLSERS
*                                 ON LEFT WITH DASHES,BUT DASHES ARE
*                                 VALID CHARACTERS IN VOLSER.
         BCT   R15,STRIPV2        LOOP THROUGH VOLSER
         BR    R14                RETURN TO MAINLINE
*     COMMON OUTPUT ROUTINE
PUT      PUT   CONTROL,OUT        WRITE FIRST OUTPUT LINE
         CLI   CATFLAG,0          WAS CATALOG NAME SPECIFIED?
         BNE   PUT2               YES..BRANCH TO PROCESS CAT/PASS REC
         PUT   CONTROL,OUT2       NO...WRITE SECOND RECORD AND
         BR    R8                 RETURN
PUT2     MVI   OUT2+66,C'-'       INDICATE RECORD 2 IS CONTINUED
         PUT   CONTROL,OUT2       WRITE SECOND RECORD
         PUT   CONTROL,CAT        WRITE CATALOG/PASSWORD RECORD
         BR    R8                 RETURN
*       COMMON INPUT ROUTINE
GET      MVC   AREA,BLANKS        CLEAR INPUT AREA SINCE RECS ARE VBA
         GET   LIST,AREA          READ NEX RECORD OF LISTCAT
         BR    R8                 RETURN
         SPACE 3
PUTVOL   CLC   DATA+5(12),=CL12'ASSOCIATIONS' IS THIS ASSOC LINE?
         BNER  R9                 NO...RETURN TO LOOP
         PUT   CONTROL,OUT        YES..WRITE FIRST LINE
         PUT   CONTROL,OUT2       WRITE SECOND LINE
         CLI   SCANTAG,X'80'      IS DEVICE TYPE A TAPE?
         BNE   PUT4               NO...BR(FILE SEQ NUM NOT NECESSARY)
         PUT   CONTROL,OUT3       WRITE FILE SEQ NUMBER OF TAPE(S)
PUT4     CLI   CATFLAG,0          WAS CATALOG NAME SPECIFIED?
         BNE   PUT5               YES..BRANCH TO PROCESS IT
         PUT   CONTROL,OUT4       NO...WRITE LAST RECORD AND
         B     ALIASCHK           BR TO CHECK FOR ALIAS ASSOCIATIONS
PUT5     MVI   OUT4+66,C'-'       INDICATE RECORD TO BE CONTINUED
         PUT   CONTROL,OUT4       WRITE LINE
         PUT   CONTROL,CAT        WRITE CATALOG/PASSWORD RECORD
         B     ALIASCHK           BR TO CHECK FOR ALIAS ASSOCIATIONS
         SPACE 3
LASTCC   DC    F'0'                                           /*FIX1*/
*                                                             /*FIX1*/
ALIAS1   DC    CL80'    DEF  ALIAS(REL(                                X
                           ) -'   PART 1 OF 2 DEFINE ALIAS RECORD
ALIAS2   DC    CL80'          NAME(123456789012345678901234567890123456X
               78901234))'        PRT 2 OF DEFINE ALIAS RECORD
         SPACE 3
GDG1     DC    CL80' DEF  GDG    (NAME(                                X
                           ) -'   PART 1 OF 2 DEFINE GDG RECORD
GDG2     DC    CL80'          LIMIT(   )                               X
                           )  '   PART 2 OF 2 DEFINE GDG RECORD
         SPACE 3
NON1     DC    CL80' DEF  NONVSAM(NAME(                                X
                           ) -'   PART 1 OF 4 DEFINE NONVSAM RECORD
NON2     DC    CL80'          DEVT(                                    X
                           ) -'   PART 2 OF 4 DEFINE NONVSAM RECORD
NON3     DC    CL80'          FSEQN(                                   X
                           ) -'   PART 3 OF 4 DEFINE NONVSAM RECORD
NON4     DC    CL80'          VOL(                                     X
                           ) )'   PART 4 OF 4 DEFINE NONVSAM RECORD
         SPACE 3
USE1     DC    CL80' IMPORT      OBJ( (                                X
                             -'   PART 1 OF 2 IMPORT USERCATALOG
USE2     DC    CL80'          DEVT(        ) VOL(      ))) CONNECT     X
                              '   PART 2 OF 2 IMPORT USERCATALOG
         SPACE 3
CAT      DC    CL80'          CAT(                                     X
                               ) ' LONG ENOUGH FOR 44 CHAR/8CHAR
BLANKS   DC    CL256' '           CONSTANT OF BLANKS FOR INITIALIZATION
AREA     DS    CL256              I/O AREA
         ORG   AREA               REDEFINE I/O AREA
VARLEN   DS    XL4                VBA LENGTH FILED
CHARCTL  DS    X                  VBA CARRIAGE CONTROL FIELD
DATA     DS    CL251              DATA FROM LISTCAT
OUT      DS    CL80               OUTPUT AREA
OUT2     DS    CL80               OUTPUT AREA
OUT3     DS    CL80               OUTPUT AREA
OUT4     DS    CL80               OUTPUT AREA
DEVTYPE  DS    CL8                SAVE AREA FOR DEVICE TYPE
TEMP     DS    CL8                WORK AREA
DEVADDR  DS    F                  ADDR OF DEVICE NAME TABLE
SCANTAG  DS    F                  HEX DEVICE TYPE FIELD
DWORD    DS    D                  DOUBLE WORD WORK AREA
TRTAB    DC    XL256'00'          TRANSLATE TABLE FOR CONVERSION
         ORG   TRTAB+C'A'         OF CHAR HEX TO ZONE HEX
         DC    X'FAFBFCFDFEFF'    TR 'ABCDEF' X'FAFBFCFDFEFF'
         ORG   TRTAB+C'0'         ORG TO X'F0'
         DC    C'0123456789'      TR '0123456789' -> '0123456789'
         ORG   TRTAB+256          ORG TO END OF TABLE
MVCCAT   MVC   CAT+14(0),0(R2)    EXECUTED INSTR.- MOVE CAT NAME TO REC
CATFLAG  DC    X'00'              0-> NO CATNAME; 1->CATALOG SPECIFIED
SAVE     DS    18F                REGISTER SAVE AREA
RELATE   DS    CL44               SAVE AREA FOR RELATED CATALOG NAME
LIST     DCB   DDNAME=LIST,DSORG=PS,MACRF=GM,EODAD=EOF INPUT DCB
CONTROL  DCB   DDNAME=CONTROL,DSORG=PS,MACRF=PM       OUTPUT DCB
PATCH    DC    8CL4'ZAP*'         PATCH AREA
R0       EQU   0                  REGISTER EQUATE
R1       EQU   1                  REGISTER EQUATE
R2       EQU   2                  REGISTER EQUATE
R3       EQU   3                  REGISTER EQUATE
R4       EQU   4                  REGISTER EQUATE
R5       EQU   5                  REGISTER EQUATE
R6       EQU   6                  REGISTER EQUATE
R7       EQU   7                  REGISTER EQUATE
R8       EQU   8                  REGISTER EQUATE
R9       EQU   9                  REGISTER EQUATE
R10      EQU   10                 REGISTER EQUATE
R11      EQU   11                 REGISTER EQUATE
R12      EQU   12                 REGISTER EQUATE
R13      EQU   13                 REGISTER EQUATE
R14      EQU   14                 REGISTER EQUATE
R15      EQU   15                 REGISTER EQUATE
         END   MCNVTCAT
