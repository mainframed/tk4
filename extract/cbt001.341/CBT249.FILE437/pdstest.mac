* FROM CBT FILE 316
         TITLE 'P D S T E S T  - TEST A PDS FOR ERRORS (BATCH) '
*-$DOC@---------------------------------------------------------------*
*                                                                     *
*        THIS PROGRAM WILL TEST A LOAD MODULE PDS FOR INTEGRITY.      *
*        IT WILL RUN THE DIRECTORY ISSUING A 'LOAD' AGAINST EACH      *
*        MEMBER AND IF THE LOAD ABENDS, TRAP THE ABEND AND TELL       *
*        YOU ABOUT IT. NICE TO KNOW IF YOU HAVE DAMAGED LOAD MODULES  *
*        IN YOUR PRODUCTION LIBRARIES OR SYSTEM LIBRARIES. WE RUN IT  *
*        ONCE A WEEK ON ALL SYSTEM LIBRARIES. YOU THEN WILL NOT GET   *
*        GET NASTY SURPRISES A MONTH FROM NOW ( S706'S ).  CODE       *
*        WAS ORGINIALLY WRITTEN BY UCLA AND WE HAVE CONVERTED IT      *
*        FROM THE VERSION THAT RAN ON OS/MVT TO MVS ( WHAT LITTLE     *
*        HAD TO BE DONE ).                                            *
*                                                                     *
*        JIM MARSHALL                                                 *
*        AIR FORCE DATA SERVICES CENTER                               *
*        PENTAGON                                                     *
*        IBM OPERATING SYSTEM SUPPORT BRANCH                          *
*        CMIS - ROOM 1C1039                                           *
*        WASHINGTON D.C.  20330                                       *
*        (202) 695-1274                                               *
*                                                                     *
*        2 -3032'S                                                    *
*        MVS/JES2/TSO/SPF/VTAM/TCAM                                   *
*        MSS 3850 - IBM 3800                                          *
*        INQUIRE  ( BOO-HISS )                                        *
*                                                                     *
*  CHANGE LOG:                                                        *
*                                                                     *
*    28 JULY 1981 - CLEANED UP THE CODE FROM UCLA, THEM COLLEGE       *
*                   KIDS LOVE TO CODE THEIR OWN MACROS. WORKS ON      *
*                   MVS NOW.                                          *
*    07 SEPT 1983 - FIX TO CHECK FOR ONLY DD'S PREFIXED WITH @        *
*                   (LIONEL DYCK, ROCKWELL INTERNATIONAL)             *
*                                                                     *
*    29 OCT  1984 - CHECK FOR IEFRDER DD TO SUPPORT STARTED TASK.     *
*                   MOVED IDENTIFY MACRO SECTION BEFORE ATTACH        *
*                   TO PREVENT IEA703I 806-4 LOOP ON ENTRY POINT      *
*                   MEMCHECK.                                         *
*                   ADDED ERRET TO LOAD MACRO TO INTERCEPT ERRORS     *
*                   WITH LESS OVERHEAD AND TO CAPTURE LOAD ABEND      *
*                   AND REASON CODE.                                  *
*                   ADDED TTIMER CANCEL SO THAT THE 15 SECONDS        *
*                   FOR THE STIMER APPLIES TO EACH "LOADED" LOAD      *
*                   MODULE, RATHER THAN THE ENTIRE LIBRARY.           *
*                   (JEFF SILVERSMITH, ROCKWELL INTERNATIONAL)        *
*                                                                     *
*                                                                     *
*-$DOC$---------------------------------------------------------------*
         MACRO
&NAME    MESSAGE &THING,&MAX=100,&TYPE=CALL
         LCLA    &LEN,&COUNT,&LIM
         AIF   ('&TYPE' EQ 'TEXT').TEXT
.*
.*  CALL PRINT ROUTINE WITH BUFFER ADDR
.*
&NAME    LA    7,&THING .             POINT TO MESSAGE(S)
         BAL   8,PRINT .                LINK TO PRINT ROUTINE
         MEXIT
.*
.*  GENERATE MESSAGE TEXT
.*
.TEXT    ANOP
&LEN     SETA  K'&THING-2
         AIF   (&LEN GT &MAX).MERROR
&LIM     SETA  &LEN
&COUNT   SETA  2
.LOOP    AIF   (&COUNT GT &LIM).OUT
         AIF   ('&THING'(&COUNT,1) NE '''').GOON
&LEN     SETA  &LEN-1
&COUNT   SETA  &COUNT+1
.GOON    ANOP
&COUNT   SETA  &COUNT+1
         AGO   .LOOP
.OUT     ANOP
&LEN     SETA  &LEN-1                   EXECUTE LENGTH
         DC    AL1(&LEN)
&NAME    DC    C&THING
         AGO   .MEXIT
.MERROR  MNOTE 8,'MESSAGE TEXT LONGER THAN LRECL=&MAX (&LEN)'
.MEXIT   SPACE 1
         MEND
         EJECT
**********************************************************************
*                                                                    *
*  PDSTEST                                                           *
*                                                                    *
*  TESTS ALL MEMBERS IN DIRECTORY OF DATASET SPECIFIED BY ANY        *
*  DD CARDS OTHER THAN SYSPRINT FOR ERRORS BY TRYING TO LOAD AND     *
*  DELETE THEM.                                                      *
*  A LIST IS PRINTED OF ALL SUCH BAD MEMBERS, THE ABEND CODE         *
*  RECEIVED DURING THE LOAD/DELETE, AND THE LIBRARY DSN.             *
*                                                                    *
*  TO GET A FULL LISTING OF ALL MEMBERS FOUND IN THE LIBRARY ALONG   *
*  WITH THOSE WITH ERRORS, CODE PARM=LIST OR PARM=L.  TO JUST GET    *
*  A LIST OF THOSE WITH ERRORS, CODE PARM=NOLIST OR PARM=N OR        *
*  LEAVE OUT THE PARM PARAMETER (IE:  PARM=NOLIST IS DEFAULT)        *
*                                                                    *
*  MACROS USED:     SAVE, OPEN, RDJFCB, READ, CHECK, LOAD            *
*                   DELETE, PUT, CLOSE, RETURN, IEFJFCBN,            *
*                   WAIT, POST, ATTACH, DETACH, MESSAGE (USER),      *
*                   STIMER, ABEND, IDENTIFY                          *
*                                                                    *
*                                                                    *
*  PROGRAMMER  -  VIC TOLOMEI                                        *
*                                                                    *
*                                                                    *
*  LAST UPDATE - 6/7/73                                              *
*                                                                    *
**********************************************************************
         SPACE 5
*        REGEQU            RRN/PRC 23OCT79
         EJECT
PDSTEST  CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SAVE  (14,12),,*
         LR    R12,R15
         USING PDSTEST,R12
         SPACE 1
*  PICK UP THE PARM
         SPACE 1
         L     R1,0(R1)                 PICK UP PARMLIST PTR
         MVI   LISTFLAG,NOLIST          ASSUME PARM=N DEFAULT
         OC    0(2,R1),0(R1)            WAS THERE A PARM?
         BZ    NOPARM                   NO - PARM=N THEN
         CLI   2(R1),C'L'               PARM=L?
         BNE   NOPARM                   NO - PARM=N
         MVI   LISTFLAG,LIST            YES - MAKE IT PARM=L
         SPACE 1
NOPARM   LA    R1,SAVEAREA
         ST    R1,8(R13)                LSA
         ST    R13,4(R1)                HSA
         LR    R13,R1                   CURRENT SA
         SPACE 1
*  OPEN PRINT FILE
         SPACE 1
         OPEN  (DCBOUT,OUTPUT)          OPEN PRINT FILE
         TM    DCBOUT+48,X'10'          DID IT OPEN
         BO    START                    YES - GO ON
ARGH     L     R13,4(R13)               RESTORE SA PTR
         RETURN (14,12),RC=16           GO AWAY WITH RETURN CODE
         EJECT
*  THE PRINT FILE IS OPEN.
*  FIND THE TIOT AND GET ALL DDNAMES WHICH ARE NOT SYSPRINT AND
*  OPEN THEM FOR PDSTEST PROCESSING
         SPACE 2
START    MESSAGE FIRSTMSG               PRINT OUT INITIALIZATION MSG
         MESSAGE DBLSPACE               DOUBLE SPACE
         MESSAGE DBLSPACE               DOUBLE SPACE
*        L     R6,16      RRN/PRC 23OCT79 CVT
*        L     R6,0(R6)   RRN/PRC 23OCT79 TCB PTRS
*        L     R6,4(R6)   RRN/PRC 23OCT79 ACTIVE TCB
*        L     R6,12(R6)  RRN/PRC 23OCT79 TIOT
         LA    R5,24                    FIRST OFFSET FOR DDNAME
         EXTRACT ANSWADDR,'S',FIELDS=(TIOT)  RRN/PRC 23OCT79
         L       R6,ANSWADDR                 RRN/PRC 23OCT79
         SPACE 2
*  BRING UP THE SUBTASK WHICH WILL DO ALL THE ACTUAL LOADING/DELETING
*  AND LET IT SIT THERE WHILE I FIND IT A MEMBER TO WORK ON.
         SPACE 2
         BAL   R8,ATTACH                ATTACH THE SUBTASK
         SPACE 1
*  SCAN THE TIOT FOR APPLICABLE DDNAMES
         SPACE 1
DDLOOP   AR    R6,R5                    PTR TO DDNAME IN TIOT
         IC    R5,0(R6)                 GET LENGTH OF DATA FIELD
         LTR   R5,R5                    END OF TIOT?
         BZ    GOAWAY                   YES - END PDSTEST PROCESSING
         CLI   4(R6),C'@'          DDNAME START WITH @ ?     *LBD*
         BE    OKDD                YES - LETS DO IT          *LBD*
         CLC   4(8,R6),=CL8'IEFRDER '  LOOK FOR IEFRDER DD   *JSS*
         BE    OKDD                     YES - LETS DO IT     *JSS*
         B     DDLOOP              NO - KEEP SCANNING        *LBD*
*        LA    R10,DDTAB                PT TO TABLE OF UGLY DDNAMES
*ADDLP   CLI   0(R10),X'FF'             END OF TABLE?
*        BE    OKDD                     YES - WE'RE OK
*        CLC   4(8,R6),0(R10)           DDNAME IN TABLE?
*        BE    DDLOOP                   YES - IGNORE AND GET ANOTHER
*        LA    R10,8(R10)               NO - UPDATE TABLE PTR
*        B     BADDLP                   GO ON
         SPACE 1
OKDD     MVC   DCBPS+40(8),4(R6)        NO - MOVE DDNAME TO PS DCB
         MVC   DCBPO+40(8),4(R6)        MOVE DDNAME TO PO DCB FOR LOAD
         MVI   UGHFLAG,OKMEMS           NO BAD MEMBERS YET
         SPACE 1
         OPEN  (DCBPS,INPUT)            OPEN THE PS FILE FOR THE READS
         TM    DCBPS+48,X'10'           DID PS OPEN?
         BO    PSOPENED                 YES - GO ON
         BAL   R8,PRINTCLS              CLOSE PRINT FILE
         B     ARGH                     GO AWAY WITH BAD RETURN CODE
         SPACE 1
PSOPENED RDJFCB DCBPS                   GET THE JFCB
         SPACE 1
         MVC   DSN(44),JFCBDSNM-JFCB+XJFCB DSN OK - MOVE DSN TO MSG
         MESSAGE DBLSPACE               DOUBLE SPACE
         MESSAGE STARTMSG               SAY WHAT LIBRARY WE START WITH
         CLI   JFCDSORG-JFCB+XJFCB,JFCORGPO   IS THIS PARTITIONED?
         BNE   DUMBDSN                  NO - HOW CAN I LOAD THAT???
         CLI   JFCRECFM-JFCB+XJFCB,JFCUND  DSORG=PO BUT RECFM=U?
         BE    ITSAPDS                  YES - GO ON
DUMBDSN  MESSAGE NOTPO                  SAY DATASET IS NOT PO
         B     BYEDD                    GO GET ANOTHER DD CARD
         SPACE 1
ITSAPDS  LA    R0,OPENIT                TELL SUBTASK TO OPEN PO DCB
         XC    ECBMS(4),ECBMS           CLEAR MY ECB FOR WAIT
         POST  ECBSS,(0)                POST HIM
         WAIT  1,ECB=ECBMS              WAIT TILL HE'S DONE
         MVI   POSTCODE+3,NORM          NOW SAY JUST LOAD
         XR    R10,R10                  INTIALIZE COUNT OF MEMBERS
         EJECT
*  READ THE DIRECTORY AND LOAD/DELETE ALL GOOD MEMBERS UNTIL THE
*  DIRECTORY IS EXHAUSTED
         SPACE 2
MLOOP    READ  DECB,SF,DCBPS,DIR,256    GET A DIRECTORY BLK
         CHECK DECB                     DONE?
         LA    R3,DIR                   PT TO THE DIRECTORY
         LH    R2,0(R3)                 LENGTH OF DIR USED
         BCTR  R2,0                     -1
         BCTR  R2,0                     -2 FOR REAL LEN
         LA    R3,2(R3)                 PT TO REAL PART OF DIRECTORY
         XR    R4,R4                    CLEAR WORK REG (INDICATORS)
         SPACE 1
*  LOOK FOR THE MEMBERS NOW
         SPACE 1
MLOOP2   CLC   0(4,R3),=XL8'FFFFFFFFFFFFFFFF'   END OF DIRECTORY?
         BE    EODAD                    YES - GO AWAY WITH GOOD STUFF
         MVC   MEMBER(8),0(R3)          SAVE FOR STAE JUST IN CASE
         LA    R10,1(R10)               WE HAVE A MEM, UPDATE COUNT
         SPACE 1
*  WE HAVE A MEMBER.  PRINT IT OUT IF NECESSARY (PARM=L) AND THEN
*  GIVE THE SUBTASK A KICK AND GET HIM STARTED ON IT
         SPACE 1
         CLI   LISTFLAG,LIST            WAS IT PARM=L?
         BNE   KICKHIM                  NO - GET SUBTASK GOING
         MVC   TELLMEM(8),MEMBER        MOVE MEMBER NAME INTO MESSAGE
         MESSAGE MEMMSG                 PRINT IT OUT
KICKHIM  XC    ECBMS(4),ECBMS           CLEAR OUT ECB TO PREVENT LOOP
         L     R0,POSTCODE              PICK UP THE POSTCODE
         POST  ECBSS,(0)                KICK (SUBTASK START) WITH CODE
         WAIT  1,ECB=ECBMS              WAIT FOR HIS OK (MAIN START)
         SPACE 1
*  NOW THAT I HAVE CONTROL BACK, GET ANOTHER MEMBER
         SPACE 1
         IC    R4,11(R3)                PICK UP INDICATORS
         LA    R3,12(R3)                PT TO USER DATA
         SH    R2,=H'12'                DECREMENT AMNT USABLE DIR LEFT
         SLL   R4,27                    KILL HI ORDER BIT OF INDICATORS
         SRL   R4,26                    MOVE BACK AND *2 FOR HALFWORDS
         AR    R3,R4                    UPDATE DIRECTORY PTR
         SR    R2,R4                    DECREMENT AMNT LEFT COUNTER
         MVI   POSTCODE+3,NORM          TELL HIM JUST A LOAD
         BNP   MLOOP                    DONE WITH THIS BLK, GET ANOTHER
         B     MLOOP2                   GO ON SCANNING WITH THIS BLK
         TITLE 'P D S T E S T --- PROGRAM EXIT ROUTINES'
*  NORMAL END OF LIBRARY EXIT (END OF DIRECTORY)
         SPACE 2
EODAD    XC    ECBMS(4),ECBMS           CLEAR OUT ECB FOR WAIT
         LA    R0,CLOSEIT               TELL SUBTASK TO CLOSE HIS PO...
         POST  ECBSS,(0)                DCB USING THE POSTCODE
         WAIT  1,ECB=ECBMS              WAIT TILL HE IS DONE
         CLI   UGHFLAG,BADMEMS          DID WE FIND A BAD MEMBER?
         BE    NASTY                    YES - GO ON
         MESSAGE OKMSG                  GIVE THE GOOD NEWS
NASTY    CVD   R10,DBLW                 MAKE NUMBER OF MEMBERS DEC
         MVC   NUMMEMS(5),EDMASK        MOVE EDIT MASK TO MSG
         ED    NUMMEMS-1(6),DBLW+5      MOVE IN NUMBER OF MEMBERS
         MESSAGE NUMMSG                 AND TELL THE MAN
BYEDD    EQU   *
         MESSAGE ENDLMSG                SAY GOOD-BYE TO THIS LIBRARY
         BAL   R8,PSCLOSE               CLEAN UP MY INPUT FILE
         B     DDLOOP                   AND COME BACK TO GET ANOTHER DD
         SPACE 5
*  ACTUAL I/O ERROR IN THE DIRECTORY ITSELF
         SPACE 2
SYNAD    MESSAGE IOERMSG1               SAY WE HAVE AN I/O ERROR
         MESSAGE IOERMSG2               AND SAY THAT WE ARE GIVING UP
*  SO GIVE UP BY GOING TO 'GOAWAY'
         SPACE 5
GOAWAY   BAL   R8,DETACH                WE'RE ALL DONE - KILL SUBTASK
         MESSAGE DBLSPACE               SKIP(2)
         MESSAGE DBLSPACE               SKIP(2)
         MESSAGE ENDMSG                 ALL DONE
         BAL   R8,PRINTCLS              CLOSE SYSPRINT
         L     R13,4(R13)               RESTORE SA PTR
         RETURN (14,12),RC=0            GO AWAY WITH COLORS
         TITLE 'P D S T E S T --- SUBTASK'
**********************************************************************
**********************************************************************
***                                                                ***
***          SUBTASK WHICH DOES THE LOADNG/DELETING                ***
***                                                                ***
**********************************************************************
**********************************************************************
         SPACE 2
         USING *,R15
MEMCHECK L     R12,=A(PDSTEST)          ADDRBLTY
         DROP  R15
MORESUB  WAIT  1,ECB=ECBSS              WAIT FOR MAIN'S GO-AHEAD
         MVI   ECBSS,0                  CLEAR ECB
         CLI   ECBSS+3,OPENIT           WHAT DOES HE WANT ME TO DO?
         BL    LOADIT                   0.....JUST LOAD (FILE OPEN)
         BE    POOPEN                   4.....OPEN THE FILE, THEN LOAD
         CLOSE DCBPO                    8.....CLOSE THE FILE (PO)
         B     POSTMAIN                 ALL DONE - GO BACK TO MAIN
*
POOPEN   OPEN  (DCBPO,INPUT)            OPEN PO FOR LOAD
         TM    DCBPO+48,X'10'           DID IT WORK
         BO    POSTMAIN                 YES - GO ON WITH SUBTASK
         BCR   0,1                      DRAIN THE PIPELINE
         EX    0,*                      ABEND WITH 0C3 (WON'T HAPPEN)
LOADIT   STIMER REAL,STIMEXIT,BINTVL==A(15*100)  15 SECS TO LOAD RIGHT
* MAIN POSTED ME - TRY THE LOAD
         LOAD  EPLOC=MEMBER,DCB=DCBPO,ERRET=ERRLOAD   *JSS*
         B     DELETE                                 *JSS*
ERRLOAD  EQU   *                                      *JSS*
* REG 1 - ABEND CODE ; REG 15 - REASON CODE           *JSS*
         ST    R1,LOADR1                              *JSS*
         SLL   R1,8           SET UP FOR UNPK         *JSS*
         ST    R15,LOADR15                            *JSS*
         UNPK  LOADCODE(5),LOADR1+2(3)  GET ABEND CODE*JSS*
         MVC   CODE(3),LOADCODE+1   MOVE TO MSG       *JSS*
         MVI   CODE+6,C' '                            *JSS*
         UNPK  LOADCODE+1(3),LOADR15+3(2) GET REASON  *JSS*
         MVI   LOADCODE,X'F0'                         *JSS*
         TR    LOADCODE(3),TRTAB        HEX           *JSS*
         MVC   CODEX(3),LOADCODE        HEX REASON    *JSS*
         MESSAGE BADMSG  TELL EVERYONE THE BAD MEMBER *JSS*
         MVI   UGHFLAG,BADMEMS  SAY WE FOUND A BADDIE *JSS*
DELETE   EQU   *                                      *JSS*
         DELETE EPLOC=MEMBER            IT WORKED - SO GET RID OF IT
         TTIMER CANCEL        CANCEL STIMER           *JSS*
POSTMAIN POST  ECBMS,0                  DONE - WAKE MAIN TO GET ANOTHER
         B     MORESUB                  START ALL OVER FOR NEW MEMBER
         SPACE 9
*  SUBTASK ABEND EXIT WHEN BAD MEMBER IS FOUND
         SPACE 2
         USING *,R15
EXIT     L     R12,=A(PDSTEST)          GET ADDRESSABILITY
         DROP  R15
         LR    R9,R14                   SAVE RET ADDR (FOR PUT)
         UNPK  CODE(7),ECBSC+1(4)       GET ABEND CODE FROM ECB
         TR    CODE(6),TRTAB            HEX
         MVI   CODE+6,C' '
         MESSAGE BADMSG                 TELL EVERYONE THE BAD MEMBER
         MVI   UGHFLAG,BADMEMS          SAY WE FOUND A BAD MEMBER
*
*  WAKE UP MAIN TASK TO GET ANOTHER MEMBER WHILE WIPED OUT SUBTASK
*  IS BEING DETACHED AND THEN RESTARTED
*
         BAL   R8,DETACH                GET RID OF OLD SUBTASK
         BAL   R8,ATTACH                AND START UP A NEW ONE
         LA    R0,OPENIT                TELL SUBTASK TO OPEN DCB AGAIN
         POST  ECBSS,(0)                BECAUSE ABEND CLOSED IT
         BR    R9                       RETURN TO OS
         SPACE 9
*  SUBTASK STIMER EXIT IF LOAD GOES INTO A LOOP.  STIMER WILL BOMB
*  AFTER 10 REAL TIME SECONDS.  THE SUBTASK WILL THEN ABEND WITH A
*  S322 (WILL BE REFLECTED AS A BAD MODULE WITH CODE 322).
         SPACE 2
         USING *,R15
STIMEXIT L     R12,=A(PDSTEST)          GET ADDRBILITY
         DROP  R15
         LH    R1,=XL2'322'             SYSTEM COMPLETION CODE 322
         SLL   R1,12                    SHIFT IT UP FOR SYSTEM CODE
         ABEND (1)                      AND LET'S KILL THIS SUBTASK
         TITLE 'P D S T E S T  ---  UTILITY BAL ROUTINES'
**********************************************************************
********************************  PRINT  *****************************
**********************************************************************
         SPACE 3
PRINT    BCTR  R7,0                     PT TO MESSAGE TEXT LEN
         MVI   OUTBUFF,C' '             CLEAR OUT
         MVC   OUTBUFF+1(99),OUTBUFF    THE OUTPUT BUFFER
         XR    R15,R15                  CLEAR OUT REG FOR IC
         IC    R15,0(R7)                GET THE EX LEN OF THE TEXT
         EX    R15,MSGMVC               MOVE TEXT TO BUFFER
         PUT   DCBOUT,OUTBUFF           PUT IT OUT
         BR    R8                       RETURN TO CALLER
         SPACE 1
MSGMVC   MVC   OUTBUFF(0),1(R7)         <<< EXECUTED >>>
         SPACE 6
**********************************************************************
********************************  ATTACH  ****************************
**********************************************************************
         SPACE 3
ATTACH   XC    ECBS(8),ECBS             CLEAR THE ECBS
         SPACE 1
*   PHONY UP A CDE FOR THE ATTACH
         IDENTIFY EPLOC=X,ENTRY=MEMCHECK CREATE DUMMY CDE FOR SUBTASK
         SPACE 2
         ATTACH EPLOC=X,ETXR=EXIT,ECB=ECBSC
         ST    R1,SUBTCB                SAVE THE SUBTASK TCB PTR
         BR    R8                       RETURN TO CALLER
         EJECT
**********************************************************************
********************************  DETACH  ****************************
**********************************************************************
         SPACE 3
DETACH   DETACH SUBTCB,STAE=NO          GOOD BYE SUBTASK
         BR    R8                       RET TO CALLER
         SPACE 6
**********************************************************************
********************************  PSCLOSE  ***************************
**********************************************************************
         SPACE 3
PSCLOSE  CLOSE DCBPS                    CLOSE BSAM PS READ DCB
         BR    R8                       RETURN TO CALLER
         SPACE 6
**********************************************************************
**********************************  PRINTCLS  ************************
**********************************************************************
         SPACE 3
PRINTCLS CLOSE DCBOUT                   CLOSE SYSPRINT
         BR    R8                       RETURN TO CALLER
         TITLE 'P D S T E S T --- CONSTANTS AND WORKAREAS'
ANSWADDR DS    F         RRN/PRC 23OCT79 ADDR OF TIOT
SAVEAREA DS    18F                      SAVEAREA
DIR      DS    0D,256X                  DIRECTORY BUFFER
         DC    C'0123456789ABCDEF'
TRTAB    EQU   *-256                    HEX
         SPACE 1
EDMASK   DC    X'2020202120'            EDIT MASK FOR NUMBER OF MEMS
DBLW     EQU   DIR                      SCRATCH DBLW
         SPACE 1
EXLST    DC    0F'0',X'87',AL3(XJFCB)
XJFCB    EQU   DIR                      JFCB (USE UNUSED DIR BUFFER)
         SPACE 1
ECBS     EQU   *
ECBSC    DS    F                        SUBTASK COMPLETION
ECBSS    DS    F                        SUBTASK START
ECBMS    DS    F                        MAIN TASK START
SUBTCB   DS    A                        ADDRESS OF SUBTASK'S TCB
X        DC    CL8'MEMCHECK'            PHONY CDE NAME
LOADR1   DS    F                        REG1 FROM LOAD
LOADR15  DS    F                        REG15 FROM LOAD
LOADCODE DC    XL7'00'                  HEX WORK AREA FOR REG15 LOAD
POSTCODE DC    F'0'                     POSTCODE COM FROM MAIN TO SUB
NORM     EQU   X'00'                    JUST NORMAL LOAD
OPENIT   EQU   X'04'                    OPEN THE FILE, THEN LOAD
CLOSEIT  EQU   X'08'                    JUST CLOSE THE FILE
         SPACE 1
UGHFLAG  DS    X                        WHETHER WE FOUND A BAD MEMBER
OKMEMS   EQU   X'00'                    NO WE DID NOT
BADMEMS  EQU   X'FF'                    YES WE DID
LISTFLAG DS    X                        WHETHER TO PRINT FULL MEM LIST
NOLIST   EQU   X'00'                    NO, JUST MEMBERS WITH ERRORS
LIST     EQU   X'FF'                    YES, ALL MEMBERS
         SPACE 3
*  TABLE OF DDNAMES WHICH ARE NOT TO BE OPENED FOR TESTING
         SPACE 1
*DTAB    DC    CL8'SYSPRINT'
*        DC    CL8'SYSUDUMP'
*        DC    CL8'SYSABEND'
*        DC    CL8'STEPLIB '
*        DC    CL8'JOBLIB  '
*        DC    CL8'PGM=*.DD'
*        DC    CL8'        '
*        DC    X'FF'                    END OF TABLE
         SPACE 3
OUTBUFF  DS    100C                     OUTPUT BUFFER
*
BADMSG   MESSAGE ' *****  MEMBER WITH ERROR:    XXXXXXXX   CODE=WWWWWW X
                *****',TYPE=TEXT
MEMBER   EQU   BADMSG+30                WHICH MEMBER
CODE     EQU   BADMSG+46                ABEND CODE
CODEX    EQU   BADMSG+49                REASON CODE
FIRSTMSG MESSAGE '0==========   PDSTEST --- VALIDITY CHECK MEMBERS OF PX
               ARTITIONED DATA SETS   ==========',TYPE=TEXT
STARTMSG MESSAGE '0PDSTEST PROCESSING BEGUN ON THE FOLLOWING LIBRARY:  X
                12345678.12345678.12345678.12345678.12345678',TYPE=TEXT
DSN      EQU   STARTMSG+54              WHERE DSN GOES
MEMMSG   MESSAGE '        MEMBER SELECTED:      XXXXXXXX',TYPE=TEXT
TELLMEM  EQU   MEMMSG+30
ENDLMSG  MESSAGE ' PDSTEST PROCESSING COMPLETE ON THIS LIBRARY',       X
               TYPE=TEXT
NUMMSG   MESSAGE ' NUMBER OF MEMBERS SELECTED:   XXXXX',TYPE=TEXT
NUMMEMS  EQU   NUMMSG+31                WHERE NUMBER OF MEMBERS GOES
ENDMSG   MESSAGE '0==========   P D S T E S T   N O R M A L   E N D   OX
                F   P R O G R A M   ==========',TYPE=TEXT
NOTPO    MESSAGE ' >>>>>>>>>>   DATA SET HAS INVALID STRUCTURE ... IGNOX
               RED   <<<<<<<<<<',TYPE=TEXT
OKMSG    MESSAGE '        NO MEMBERS WITH ERRORS FOUND',TYPE=TEXT
IOERMSG1 MESSAGE '1**********   UNRECOVERTABLE I/O ERROR ENCOUNTERED INX
                THE DIRECTORY   **********',TYPE=TEXT
IOERMSG2 MESSAGE '0PROCESSING WILL TERMINATE',TYPE=TEXT
DBLSPACE MESSAGE '0',TYPE=TEXT
         EJECT
DCBPO    DCB   MACRF=R,DSORG=PO,DDNAME=SYSLIB,RECFM=U
         SPACE 10
DCBPS    DCB   MACRF=R,DSORG=PS,DDNAME=X,RECFM=U,EODAD=EODAD,          X
               EXLST=EXLST
         SPACE 10
DCBOUT   DCB   MACRF=PM,DSORG=PS,BLKSIZE=7200,LRECL=100,RECFM=FBA,     X
               DDNAME=SYSPRINT
         SPACE 10
         LTORG
         EJECT
JFCB     DSECT
         IEFJFCBN
         SPACE 2
         END
