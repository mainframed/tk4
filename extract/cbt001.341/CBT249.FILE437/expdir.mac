         TITLE 'INCREASE PDS DIRECTORY INPLACE'           *LBD 02/84*
*---------------------------------------------------------*LBD 02/84*
*        MODIFIED BY LIONEL DYCK                          *LBD 02/84*
*                    ROCKWELL INTERNATIONAL               *LBD 02/84*
*                    P.O. BOX 2515                        *LBD 02/84*
*                    SEAL BEACH,  CALIF 90740             *LBD 02/84*
*                    MAIL CODE 110-SH28                   *LBD 02/84*
*                    (213) 594-1125                       *LBD 02/84*
*                                                         *LBD 02/84*
*        COMMENTED OUT THE LINK TO AOFF                   *LBD 02/84*
*        MOVED LOCAL MACROS INLINE                        *LBD 02/84*
*        CHANGED DDNAME TO PDS                            *LBD 02/84*
*        CHANGED ROUTCDE=(2,11) TO (11)                   *LBD 02/84*
*        CHANGED CSECT NAME TO EXPDIR                     *LBD 02/84*
*                                                         *LBD 02/84*
*---------------------------------------------------------*LBD 02/84*
         EJECT                                            *LBD 02/84*
***********************************************************************
***********************************************************************
***********************************************************************
**                                                                   **
**    RELEASE:      2.0                                              **
**    DATE:         11/18/82                                         **
**    UPDATED BY:   CBT - LAUREEN BEAUCHAINE                         **
**    CHANGES MADE:-SP3 SUPPORT                                      **
**                 -HARD CODED DSECTS CONVERTED TO IBM DSECTS        **
**                 -THE LEAVE MACRO WAS REPLACED WITH RETURN CODE    **
**                 -CBT SECURITY ROUTINE LINKED TO                   **
**                 -CODE FOR OPERATOR INTERVENTION DELETED           **
**                 -CK FOR 3 CHAR PARM ADDED                         **
**                 -CK IF DATASET IS ALLOCATED TO PDS DDNAME         **
***********************************************************************
***********************************************************************
***********************************************************************
*
**LEVEL 030************************************************************
* PROGRAMMER NAME -                                                 6J5
*      J. NUCKOLLS                                                  6J5
* REQUESTED BY -                                                    6J5
*      BLG                                                          6J5
* EFFECTIVE DATE -                                                  6J5
*                                                                   6J5
* DESCRIPTION -                                                     6J5
*      REPAIR LABEL  OF DIRECTORY READ POINTER                      6J5
**LEVEL 029************************************************************
***********************************************************************
* PROGRAMMER NAME -                                                 BN4
*         GOLDBERG                                                  BN4
* REQUESTED BY -                                                    BN4
*         ME                                                        BN4
* EFFECTIVE DATE -                                                  BN4
*         ASAP                                                      BN4
* DESCRIPTION -                                                     BN4
*         CORRECT RESTART OF TABLE AFTER OVERFLOW                   BN4
***********************************************************************
***********************************************************************
* PROGRAMMER NAME -                                                 BN4
*         GOLDBERG                                                  BN4
* REQUESTED BY -                                                    BN4
*         ME                                                        BN4
* EFFECTIVE DATE -                                                  BN4
*         SOON                                                      BN4
* DESCRIPTION -                                                     BN4
*         DOCUMENTATION                                             BN4
***********************************************************************
DIR      TITLE 'DIRECTORY EXPANSION PROGRAM'
***********************************************************************
* PROGRAMMER NAME -                                                   *
*         GOLDBERG                                                    *
* REQUESTED BY -                                                      *
*         ME                                                          *
* EFFECTIVE DATE -                                                    *
*         ANY TIME (UTILITY)                                          *
* PARM USAGE -                                                        *
*         THREE BYTE NUMERIC NUMBER OF DIRECTORY BLOCKS               *
*               TO ADD TO THIS PDS                                    *
* INPUT  FILES -                                                      *
*       PDS - FOR DIRECTORY AND MOVED DATA                            *
* OUTPUT FILES -                                                      *
*       PDS - FOR DIRECTORY EXPANSION AND MOVED MEMBERS               *
* MODULES USED -                                                      *
*              IEEPCNVT - RESIDENT CONVERT ROUTINE (TTR/MBBCCHHR)     *
* PROGRAM SWITCHES -                                                  *
*        GOSW - GO/NOGO SWITCH FOR MOVER FUNCTION TO INDICATE         *
*              OPTIONS IN EFFECT AND COMPLETION OF FUNCTIONS.         *
* REGISTER USAGE -                                                    *
*        R1 - INTER ROUTINE PARAMETERS                                *
*        R2 - ALTERNATE TABLE POINTER                                 *
*         R3 R4 R5 BXLE FOR MOVER TABLE                               *
*         R10 BAL REG FOR ALL INTERNAL ROUTINES                       *
*         ALL OTHERS ARE STANDARD AND WORK REGS                       *
* PROGRAM DESCRIPTION -                                               *
*         THIS ROUTINE WILL EXTEND THE NUMBER OF DIRECTORY ENTRIES    *
*               OF A PDS BY THE AMOUNT PASSED IN THE PARM FIELD.      *
*               THE DIRECTORY IS READ TO ESTABLISH CURRENT            *
*               BOUNDARIES AND THEN THE TRACK CONTAINING THE          *
*               NEW EOF MARKER IS CALCULATED.  FROM THIS, WE ARE      *
*               ABLE TO EXAMINE THE DIRECTORY TO DETERMINE IF         *
*               ANY MEMBERS NEED TO BE MOVED IN ORDER TO MAKE         *
*               THE EXTENSION.  IF MEMBERS NEED TO BE MOVED,          *
*               A SET OF INPUT AND OUTPUT PO DCB'S ARE OPENED         *
*               AND THE APPROPRIATE MEMBERS ARE MOVED UNTILL          *
*               THE AREA IS CLEAR.  THE PDS ENTRIES ARE THEN          *
*               ESTABLISHED.                                          *
*                                                                     *
*  ACCESS METHODS -                                                   *
*        EXCP FOR DIRECTORY WORK                                      *
*        BPAM FOR DATA WORK                                           *
*                                                                     *
*  INTERNAL ROUTINES (PHYSICAL ORDER)                                 *
*                                                                     *
*        READDIR -                                                    *
*              PHYSICAL READ OF THE DIRECTORY                         *
*        GETDIR -                                                     *
*              LOGICAL READ OF THE DIRECTORY                          *
*        WRITEDIR -                                                   *
*              PHYSICAL WRITE OF DIRECTORY (COUNT/KEY/DATA)           *
*        WRITEEOF -                                                   *
*              WRITE END OF FILE (DIRECTORY)                          *
*        ADVTTRN -                                                    *
*              ADVANCE TTRN USED FOR DIRECTORY I/O                    *
*        SETNOTE -                                                    *
*              NOTELIST SETUP ROUTINE AND TABLE BUILD                 *
*        UPDNOTE -                                                    *
*              NOTELIST RECORD UPDATE ROUTINE                         *
*        CONVTTR -                                                    *
*              TTR TO MBBCCHHR ROUTINE                                *
*        SETCAM -                                                     *
*              CAMLST SETUP FOR FORMAT 4 READING                      *
*                                                                     *
*  DSECTS USED -                                                      *
*                                                                     *
*        TAB -                                                        *
*              DIRECTORY ENTRY TABLE FOR MOVER ROUTINES               *
*        PDS -                                                        *
*              SIMILAR TO TAB FOR USE AGAINST LOGICAL PDS             *
*              DIRECTORY RECORD                                       *
*        IOB -                                                        *
*              FOR USE BY PHYSICAL I/O ROUTINES TO ADDRESS IOB        *
*              FIELDS REQUIRED FOR I/O AND CHECKING                   *
*        NOTAB -                                                      *
*              NOTE LIST COMPARE AND UPDATE CONTROL TABLE             *
*        DSCB -                                                       *
*              ADDRESS FORMAT 1 AND 4 DSCB FOR VALIDATION             *
*        IHAUCB -                                                     *
*              FOR CHECKING VOLUME/TTR0 IN SETCAM ROUTINE             *
*                                                                     *
***********************************************************************
         TITLE 'LOCAL MACROS'                             *LBD 02/84*
         MACRO
&N       SORT  &TAB,&SEQ=H,&KEY=
         LCLC  &CL1,&CL2,&TL1,&TL2,&DISP
&N       DS    0H
         AIF   ('&TAB'(1,1) EQ '(').REG
&TL1     SETC  'L'''
&TL2     SETC  '&TAB'
         AGO   .LOK
.REG     ANOP
         AIF   (T'&TAB(2) NE 'O').ROK
         MNOTE 0,'NO ENTRY LENGTH / GENERATION TERMINATED'
         MEXIT
.ROK     ANOP
&TL1     SETC  '&TAB(2)'
&TL2     SETC  ''
.LOK     ANOP
         AIF   (T'&KEY EQ 'O').DKEY
&DISP    SETC  '&KEY(1)'
         AIF   (T'&KEY(2) EQ 'O').DLEN
&CL1     SETC  '&KEY(2)'
&CL2     SETC  ''
         AGO   .COK
.DKEY    ANOP
&DISP    SETC  '0'
.DLEN    ANOP
&CL1     SETC  '&TL1'
&CL2     SETC  '&TL2'
.COK     ANOP
*GJS* SORT MACRO   CHANGE LEVEL 0-0
         AIF   (T'&TAB(2) EQ 'O').LA
         AIF   ('&TAB(1)' EQ '1').R1
         LR    1,&TAB(1)
         AGO   .R1
.LA      ANOP
         LA    1,&TAB
.R1      ANOP
ST#1&SYSNDX LR 14,1
         LA    15,&TL1&TL2.(1)
         CLI   0(15),X'FF'
         BE    ST#5&SYSNDX
ST#2&SYSNDX CLC &DISP.(&CL1&CL2,14),&DISP.(15)
         BN&SEQ ST#3&SYSNDX
         LR    14,15
ST#3&SYSNDX LA 15,&TL1&TL2.(15)
         CLI   0(15),X'FF'
         BNE   ST#2&SYSNDX
         CR    14,1
         BNH   ST#4&SYSNDX
         XC    0(&TL1&TL2,1),0(14)
         XC    0(&TL1&TL2,14),0(1)
         EX    0,*-12
ST#4&SYSNDX LA 1,&TL1&TL2.(1)
         B     ST#1&SYSNDX
ST#5&SYSNDX EQU *
*
         MEND
         EJECT                                            *LBD 02/84*
         MACRO
&NAME    IOBGEN &DCB=,&CCWS=,&ECB=,&FLAGS=
         LCLB  &FLG(3)                  FLAG1 BIT ID
         LCLA  &FCNT,&LCNT
         AIF   (T'&FLAGS EQ 'O').NOFLG
&FCNT    SETA  N'&FLAGS
.LOOP1   ANOP
&LCNT    SETA  1
.LOOP2   AIF   ('&FLAGS(&FCNT)' EQ 'DCCCUN'(&LCNT,2)).SET
.UPLP    ANOP
&LCNT    SETA  &LCNT+2
         AIF   (&LCNT LT 6).LOOP2
&FCNT    SETA  &FCNT-1
         AIF   (&FCNT GT 0).LOOP1
         AGO   .NOFLG
.SET     ANOP
&FLG((&LCNT+1)/2) SETB 1
         AGO   .UPLP
.NOFLG   ANOP
&NAME    DS    0F                       ALIGN
         DC    B'&FLG(1)&FLG(2).0000&FLG(3).0'  FLAG BYTE 1
         DC    AL3(0)                   FILL
         DC    A(&ECB)                  ECB ADDRESS
         DC    2A(0)
         DC    A(&CCWS)                 CCW STRING ADDRESS
         DC    A(&DCB)                  DCB ADDRESS
         DC    2A(0)
         DS    CL8                      MBBCCHHR AREA FOR DA
         MEND
         EJECT                                            *LBD 02/84*
         MACRO
&NAME    INIT  &RG=1,&PC=,&REQ=,&PATCH=,&SAVE=,&PARM=,&PGM=,&ENTRY
         GBLB  &ACSC1(8)
         GBLA  &ACSC2(4)
         GBLC  &ACSC3(4)
         LCLA  &A1,&A2,&A3,&A4
         SPACE 2
***********************************************************************
*        INIT MACRO - PROGRAM ENTRY AND HOUSEKEEPING                  *
***********************************************************************
         SPACE 2
         AIF   (T'&REQ EQ 'O').REGS
         AIF   ('&REQ' EQ 'NO').EREGS
         MNOTE 0,'INVALID ''REQ'' PARAM, NO ASSUMED'
         AGO   .EREGS
.REGS    ANOP
.* ISSUE EQUR MACRO FOR REGISTER EQUATED SYMBOLS
         EQUR
.EREGS   ANOP
.* CHECK PC AND SET APPROPRIATE SWITCH
         AIF   (T'&PC EQ 'O').NOPCX
         AIF   ('&PC' NE 'ARM' AND '&PC' NE 'YES').NOPC
&ACSC1(1) SETB 1
         AGO   .NOPCX
.NOPC    ANOP
         MNOTE 0,'INVALID PC, IGNORED'
.NOPCX   AIF   (T'&ENTRY EQ 'O').NOENTRY
         AIF   ('&ENTRY' EQ 'ENTRY').ENTOK
         MNOTE 4,'INVALID POSITIONAL OPERAND, NO ENTRY GENERATED'
         AGO   .NOENTRY
.ENTOK   ANOP
         ENTRY &NAME
.NOENTRY ANOP
&NAME    DS    0H
*---------------------------------------------------------------------*
*        ISSUE SAVE MACRO                                             *
*---------------------------------------------------------------------*
         SAVE  (14,12),,&SYSECT-&SYSDATE-&SYSTIME
         SPACE 2
*---------------------------------------------------------------------*
*        SAVE PARM, GET SAVE AREA, SET UP BASE REGS                   *
*---------------------------------------------------------------------*
         SPACE 2
         LR    2,1                      SAVE PASSED PARAMS
.NPARM1  AIF   (T'&SAVE EQ 'O').NOSAVE
         USING &NAME,15                 SET UP BASE
&ACSC3(1) SETC '&SAVE'                  SAVE LENGTH
         LA    0,&SAVE+72+&ACSC1(1)*4   SET GETMAIN LENGTH
* ISSUE GETMAIN FOR SAVE AREA AND WORK SPACE
         GETMAIN R,LV=(0)
.CHAIN   ST    13,4(1)                  SAVE BACKWARD POINTER
         ST    1,8(13)                  SAVE FORWARD POINTER
         LR    13,1                     SET SAVE AREA
         DROP  15
         AGO   .ADDRS
.NOSAVE  USING &NAME,15                 SET UP BASE
         CNOP  0,4                      SET ON BOUNDRY
         BAL   1,*+76+&ACSC1(1)*4       SET REG SAVE PLUS WORK AREA
         USING *,13
         DS    18F                      SAVE AREA
         AIF   (NOT &ACSC1(1)).CHAIN
         DS    F                        SPIE SAVE AREA
         AGO   .CHAIN
.ADDRS   AIF   (T'&SAVE EQ 'O').NSAV1
         AIF   (T'&RG NE 'O').OKBASE
         MNOTE 4,'YOU REQUESTED NO BASE REGISTERS, WILL GIVE YOU ONE'
&A1      SETA  1
         AGO   .NOBASE
.OKBASE  ANOP
&A1      SETA  &RG
.NOBASE  ANOP
&A2      SETA  11
&A3      SETA  1
&A4      SETA  0
         BALR  12,0                     SET BASE REG
         USING *,12
.ADRLP   ANOP
&A1      SETA  &A1-1
         AIF   (&A1 EQ 0).EADDR
         LA    &A2,4095(&A2+1)          SET MORE BASES
         USING *+4095*&A3-&A4-4*&A3-&ACSC1(1)*4,&A2
&A3      SETA  &A3+1
&A2      SETA  &A2-1
         AGO   .ADRLP
.NSAV1   ANOP
         AIF   (T'&RG EQ 'O').OKBASE1
         AIF   (T'&RG NE 'O').OKBASE1
         MNOTE 4,'YOU REQUESTED NO BASE REGISTERS, WILL GIVE YOU ONE'
&A1      SETA  1
         AGO   .NOBASE1
.OKBASE1 ANOP
&A1      SETA  &RG
.NOBASE1 ANOP
&A2      SETA  12
&A3      SETA  1
&A4      SETA  82
         AGO   .ADRLP
.EADDR   AIF   (T'&PARM EQ 'O').PATCHS
         SPACE 2
*---------------------------------------------------------------------*
*        SAVE PARM ADDRESS OR INFO                                    *
*---------------------------------------------------------------------*
         SPACE 2
         AIF   ('&PARM(2)' NE 'ADDR').NPARM2
         ST    2,&PARM(1)               SAVE PARM ADDRESS POINTER
         AGO   .PATCHS
.NPARM2  AIF   ('&PARM(2)' NE 'DATA').NPARM3
         L     1,0(0,2)                 GET PARM ADDRESS
         LH    3,0(0,1)                 GET LENGTH
         LA    3,1(0,3)                 SET FOR MVC
         EX    3,*+8                    DO THE MOVE
         B     *+10                     GO AROUND
         MVC   &PARM(1).(0),0(1)        EXECUTED MOVE
         AGO   .PATCHS
.NPARM3  MNOTE 4,'INVALID ''PARM'' PARAM, NO INFO SAVED'
.PATCHS  AIF   ('&PATCH' EQ 'NO').LEAVE
         AIF   ('&PATCH' NE 'YES').LEAVE
         SPACE 2
*---------------------------------------------------------------------*
*        PATCH AREA                                                   *
*---------------------------------------------------------------------*
         B     *+104                    GO AROUND
         NOP   *                        SET UP ADDRESS INDICATOR
         DC    96X'00'                  CLEAR PATCH AREA
.LEAVE   AIF   ('&PC' NE 'YES').NPCYES
         SPACE 2
*---------------------------------------------------------------------*
*        ISSUE SPIEPC MACRO                                           *
*---------------------------------------------------------------------*
         SPACE 2
         SPIEPC
.NPCYES ANOP
         SPACE 2
         AIF   (T'&PGM EQ 'O').OUT
*        ISSUE WTO FOR PROGRAM NAME
         SPACE
         WTO   '&PGM EXECUTING',ROUTCDE=11
         SPACE
.OUT     ANOP
         LR 1,2                         RESTORE PARM INFO
         SPACE 2
         MEND
         EJECT                                            *LBD 02/84*
   MACRO
   EQUR
         GBLB  &ACSC1(8)
         GBLA  &ACSC2(4)
         GBLC  &ACSC3(4)
         AIF   (&ACSC1(3)).DID
&ACSC1(3) SETB 1
         SPACE 2
***********************************************************************
*        EQUR MACRO - REGISTER EQUATES                                *
***********************************************************************
         SPACE 2
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 2
         MEXIT
.DID     MNOTE 0,'REG EQUATES PREVIOUSLY ISSUED, IGNORED'
   MEND
         TITLE 'INCREASE PDS DIRECTORY INPLACE'           *LBD 02/84*
EXPDIR   START 0                                                    A94
         SPACE 2                                                    BF4
*        PRINT NOGEN                                                BF4
         SPACE 2                                                    A04
X        INIT  RG=2,PARM=(PARML,DATA),PGM=EXPDIR                    A94
         SPACE 2                                                    A94
*---------------------------------------------------------------------*
*                                                                     *
*        DSECT ADDRESSABILITY                                         *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
         USING TAB,R3                   GENERAL ADDRESSING OF       A94
*                                       MOVER TABLE                 A94
         SPACE 2                                                    A04
***********************************************************************
*    VERIFY THAT THE PARM BEING PASSED IS 3 BYTES LONG AND THAT IT    *
*    IS BEING EXECUTED AS A MODULE NOT A COMMAND PROCESSOR            *
***********************************************************************
          CLC   PARML,=X'0003'           IS THE PARM LENGTH 3?      LMB
*         BC    8,SECURITY               YES, GO CONTINUE           LMB
          BC    8,DOIT                                    *LBD 02/84*
          BC    7,ERR17                  NO, SEND ERROR MSG + EOJ   LMB
***********************************************************************
*            CBT SECURITY CODE                                        *
***********************************************************************
*ECURITY LINK  EP=AOFF
DOIT     DS    0H                                         *LBD 02/84*
***********************************************************************
*---------------------------------------------------------------------*
*        INITIALIZE FOR PROCESSING -                                  *
*              OPEN DATASET FOR DIRECTORY COUNTING                    *
*---------------------------------------------------------------------*
         SPACE 2                                                    A94
         MVC   MSG1NO,PARMD             SET EXPANSION AMOUNT INTO   A94
*                                       VERIFY MESSAGE              A94
         RDJFCB DIRECT                  READ JFCB FOR OPEN AND NAME A94
***********************************************************************
* CHECK IF A DATASET WAS ALLOCATED TO PDS                           LMB
***********************************************************************
         CLI   JFCBDSNM,X'00'           IS IT ZERO                  LMB
         BC    7,JFCBWORK               NO, CONTINUE PROCESSING     LMB
         BC    8,ERR18                  YES, SEND MSG + EOJ         LMB
JFCBWORK OI    JFCBTSDM,JFCNWRIT        SET NO REWRITE BY OPEN      A04
         MVC   MSG1NAM,JFCBDSNM         SET DATASET NAME IN MESSAGE A94
         MVC   CAMDSN,JFCBDSNM          SET FOR DSCB READ           BF4
         MVC   CAMVOL,JFCBVOLS          SET VOLID                   BF4
         OBTAIN CAM                     GET DSCB                    BF4
         LTR   R15,R15                  ANY ERROR                   BF4
         BNZ   ERR15                    YES                         BF4
         SPACE 2                                                    BF4
         USING IECSDSL1,R1              DSCB1 DSECT
         SPACE 2                                                    BF4
         LA    R1,CAMWK-44              ADDRESS DATA                BF4
         CLI   DS1DSORG,X'02'           PO                          BF4
         BNE   ERR14                    NO                          BF4
         BAL   R10,SETCAM               SETUP FOR FORMAT 4 LOOK     BH4
         OBTAIN CAM4                    GET IT                      BH4
         LTR   R15,R15                                              BF4
         BNZ   ERR15                    ERROR IN OBTAIN             BF4
         LA    R1,CAMWK                 POINT TO DSCB               BH4
         AH    R1,=H'44'                PASS THE 44 BYTE KEY
         USING IECSDSL4,R1              DSCB4 DSECT
         CLI   DS4IDFMT,X'F4'           FORMAT4                     BH4
         BNE   ERR15                    IMPROPER OBTAIN             BH4
         MVC   DIRTK+3(1),DS4DEVDB      SET NUMBER OF DIRECTORIES   BF4
*                                       TO MAKE DEVICE INDEPENDENT  BF4
         SPACE 2                                                    BF4
         DROP  R1                       RELEASE ADDRESSABILITY      BF4
         SPACE 2                                                    BF4
         OPEN  (DIRECT,UPDAT),TYPE=J    SET EXCP FILE OPEN          A94
         MVC   TTRN,BEGINTTR            RESET EXCP POINTER          A94
         SPACE 2                                                    A04
*---------------------------------------------------------------------*
*        COUNT DIRECTORY BLOCKS AND NOTE OLD EOF ADDRESS (TTR)        *
*---------------------------------------------------------------------*
         SPACE 2                                                    A04
READL1   EQU   *                                                    A94
         BAL   R10,READDIR              READ THE DIRECTORY          A94
         B     READL1A                  OK, NOT EOF                 A94
         B     READL1X                  EOF FOUND                   A94
READL1A  EQU   *                                                    A94
         AP    DIRCNT,=P'1'             ADD TO DIRECTORY COUNT      A94
         B     READL1                   GO FOR MORE                 A94
READL1X  EQU   *                        END OF FILE FIRST PASS      A94
         AP    DIRCNT,=P'1'             ACCOUNT FOR EOF MARKER      A94
         PACK  WK1,PARMD(3)             GET EXTENSION AMOUNT        A94
         AP    DIRCNT,WK1               GET TOTAL REQUIRED          A94
         CVB   R0,DIRCNT                SET FOR BINARY              A94
         SRDA  R0,32                    SET TO GET TT VALUE         A94
         D     R0,DIRTK                 GET TT VALUE FOR EOF        A94
         STH   R1,TTLIM                 THIS IS WHERE EOF WILL GO   A94
         MVC   EOF1TTR,TTRN             SAVE CURRENT POINTER TO     A94
*                                       OLD DIRECTORY EOF           A94
         SPACE 2                                                    A04
*---------------------------------------------------------------------*
*        RESET DIRECTORY READING AND FILL TABLE WITH MOVER            *
*              CANDIDATES (TT WITHIN RANGE OF DIRECTORY EXTEND)       *
*                                                                     *
*        REGISTER 1 USED FOR PDS PASSING IN THIS ROUTINE              *
*---------------------------------------------------------------------*
         SPACE 2                                                    BA4
         USING PDS,R1                   ADDRESS REAL DIRECTORY      BA4
         SPACE 2                                                    A04
FILLSET  EQU   *                                                    BL4
         L     R6,TABAMT                GETMAIN AMOUNT              BL4
         GETMAIN R,LV=(R6)              TABLE                       BL4
         ST    R1,TABPTR                SET BXLE NO 1 (2 SET)       BL4
         LA    R1,0(R1,R6)              END OF TABLE                BL4
         S     R1,TABPTR+4              BACK OFF ONE ELEMENT        BL4
         ST    R1,TABPTR+8              SET BXLE NO 3               BL4
         LM    R3,R5,TABPTR             SET UP TABLES TO CLEAR      A94
*                                       NEW DIRECTORY AREAS         A94
         MVC   TTRN,BEGINTTR            RESET BOF                   A94
         XC    GETDIRS2,GETDIRS2        RESET DIRECTORY READ POINTER6J5
*                                       TO FORCE PHYSICAL READ IN   BN4
*                                       CASE OF TABLE RESTART       BN4
FILLTAB  EQU   *                                                    A94
         BAL   R10,GETDIR               GET A DIRECTORY RECORD      A94
         CLI   0(R1),255                END OF DIRECTORY            A94
         BE    ENDTAB                   YES, CLOSE OFF TABLE        A94
         CLC   TTLIM,PDS2TTRP           IN MOVER RANGE              A94
         BL    FILLTAB                  NO                          A94
         TM    PDS2INDC,PDS2NOTE        NOTE LIST PRESENT           A04
         BZ    FILLTAB1                 NO                          BA4
         BO    ERR9                     CANNOT HANDLE 3             BA4
         CLI   PDS2ZERO,0               IS FIRST PROPER             BA4
         BNE   ERR9                     CANNOT HANDLE THIS          BA4
         TM    PDS2INDC,X'40'           NOTE LIST PRESENT           BA4
         BZ    FILLTAB1                 NO                          BA4
         CLI   PDS2NL,0                 PROPER NOTE LIST            BA4
         BZ    ERR9                     NO, EMPTY                   BA4
FILLTAB1 EQU   *                                                    BA4
         MVC   TABNAME(TABLN),0(R1)     MOVE IN THE DIRECTORY       A94
         BXLE  R3,R4,FILLTAB            DO MORE                     A94
         L     R6,TABAMT                SET FOR FREEMAIN, TABLE     BL4
*                                       HAS OVERFLOWED AND WE WILL  BL4
*                                       GET A LARGER AREA           BL4
         L     R1,TABPTR                GET ADDRESS                 BL4
         FREEMAIN R,LV=(R6),A=(1)       FREE TABLE                  BL4
         AR    R6,R6                    DOUBLE AREA                 BL4
         ST    R6,TABAMT                SET NEW AMOUNT              BL4
         B     FILLSET                  TRY AGAIN WITH LARGER TABLE BL4
         SPACE 2                                                    BA4
*---------------------------------------------------------------------*
*        END REG 1 USAGE FOR PDS                                      *
*---------------------------------------------------------------------*
         SPACE
         DROP  R1                                                   BA4
         SPACE 2                                                    BA4
*---------------------------------------------------------------------*
*        CLOSE OFF TABLE (OR TRUNCATE FOR MULTIPLE PASSES)            *
*---------------------------------------------------------------------*
         SPACE 2                                                    BA4
ENDTAB   EQU   *                                                    A94
         MVI   0(R3),255                CLOSE IT OFF                A94
         LR    R5,R3                    RESET BXLE CONSTANTS        A94
         BCTR  R5,0                     TO NEW VALUES               A94
         L     R3,TABPTR                RESET TO BEGINNING OF TABLE A94
         CLI   0(R3),255                EMPTY TABLE                 A94
         BE    EXTEND                                               A94
         SORT  (R3,TABLN),KEY=(8,3)                                 A94
         SPACE 2                                                    A04
*---------------------------------------------------------------------*
*        VALIDATE ALIASES IN TABLE                                    *
*---------------------------------------------------------------------*
         SPACE 2                                                    A04
VALIDAT  EQU   *                                                    A04
         TM    TABINDC,PDS2ALIA         IS IT AN ALIAS              A04
         BNO   VALIDX                   NO, TRY ANOTHER             A04
         L     R2,TABPTR                SET TO LOOK FOR MEMBER      A04
VALIDA   EQU   *                                                    A04
         TM    TABINDC-TAB(R2),PDS2ALIA IS THIS AN ALIAS            A04
         BO    VALIDB                   YES, DONT COMPARE           A04
         CLC   TABTTRP,TABTTRP-TAB(R2)  MATCH ON TTR                A04
         BE    VALIDX                   YES, ITS OK                 A04
VALIDB   EQU   *                                                    A04
         BXLE  R2,R4,VALIDA             TRY MORE                    A04
         B     ERR10                    NO MATCH IN TABLE           A04
VALIDX   EQU   *                                                    A04
         BXLE  R3,R4,VALIDAT            TRY ANOTHER FOR ALIAS MATCH A04
         L     R3,TABPTR                RESET POINTER, ALL OK       A04
         SPACE 2                                                    A04
*---------------------------------------------------------------------*
*        INITIALIZE MOVER                                             *
*---------------------------------------------------------------------*
         SPACE 2                                                    A04
         SPACE 2                                                    A04
         NOP   MOVE1                    ONE TIME ONLY THROUGH OPEN  A04
         OI    *-3,X'F0'                SET BRANCH FOR ONE TIME     A04
         OPEN  (DATAIN,,DATAOUT,OUTPUT) SET PO DCBS FOR MOVER       A94
         LH    R6,DCBBLKSI+DATAIN       BLOCKSIZE FOR IOAREA        BA4
         GETMAIN R,LV=(R6)              GET FOR NOTE LIST           BA4
         ST    R1,IONOTE                SET IN HOLDER               BA4
         GETMAIN R,LV=(R6)              GET FOR NORMAL DATA         BA4
         ST    R1,IOPOINT               SAVE FOR I/O                A94
         SPACE 2                                                    A04
*---------------------------------------------------------------------*
*        MOVE MEMBERS HERE (NO ALIASES) AND STOW REPLACE EACH         *
*              ONE.  NOTE - AFTER EACH MOVED, LOOK FOR ASSOCIATED     *
*              ALIASES AND DO STOW REPLACE ON THESE IF THEY           *
*              EXIST.                                                 *
*---------------------------------------------------------------------*
         SPACE 2                                                    A04
MOVE1    EQU   *                                                    A94
         TM    TABINDC,PDS2ALIA         IS THIS ONE AN ALIAS        A94
         BO    MOVENEXT                 YES, SKIP FOR NOW           A94
         TM    TABINDC,PDS2NOTE         ANY NOTES                   BA4
         BZ    MOVE2                    NO, DONT WORRY HERE         BA4
         SR    R0,R0                                                BF4
         ICM   R0,HIGH3,TABTTRT         SET TTRN                    BF4
         LA    R2,TEXTADR               SET MBBCCHHR RETURN         BF4
         BAL   R10,CONVTTR              CONVERT                     BF4
         OI    GOSW,TEXTGO              INDICATE TEXT LOOK REQ      BA4
         TM    TABINDC,X'40'            ANY NOTE LIST               BA4
         BZ    MOVE2                    NO                          BA4
         BAL   R10,SETNOTE              GO SET UP NOTES AND THE     BA4
*                                       NOTE COMPARE TABLE          BA4
*                                       ROUTINE WILL SET BITS IN    BA4
*                                       GOSW.                       BA4
*                                       ROUTINE                     BA4
MOVE2    EQU   *                                                    BA4
         MVC   FINDTTR,TABTTRP          SET TTR VALUE FOR FIND      A94
         FIND  DATAIN,FINDTTR,C         LOCATE THE MEMBER           A94
MOVERD   EQU   *                                                    A94
         L     R6,IOPOINT               GET BUFFER                  A04
         READ  DECB1,SF,DATAIN,(R6),'S' READ THE DATA               A04
         CHECK DECB1                                                A94
         LH    R6,DCBBLKSI+DATAIN       GET BLOCKSIZE FOR RECORD SIZA94
         L     R1,DECB1+16              IOB POINTER                 A94
         SH    R6,14(R1)                SUB RESIDUAL COUNT          A94
         STH   R6,DCBBLKSI+DATAOUT      SET BLOCKSIZE FOR WRITE     A04
         TM    GOSW,NOTEGO1             NOTE FIND IN PROGRESS       BA4
         BZ    MOVERDA                  NO                          BA4
         CLC   NOTEADR,DCBFDAD+DATAIN   SAME RECORD                 BA4
         BNE   MOVERDA                  NO                          BA4
         CH    R6,NOTESIZE              SAME LENGTH                 BA4
         BNE   ERR12                    NO, SOME ERROR              BA4
         TM    GOSW,NOTEGO2             STILL IN PROGRESS           BF4
         BO    ERR13                    YES, ERROR                  BF4
         L     R6,IONOTE                GET ADDRESS OF RECORD       BA4
         B     MOVERDB                  PUT THIS ONE OUT INSTEAD    BA4
MOVERDA  EQU   *                                                    BA4
         L     R6,IOPOINT               GET BUFFER ADDRESS          A04
MOVERDB  EQU   *                                                    BA4
         WRITE DECB2,SF,DATAOUT,(R6),'S' WRITE IT OUT               A04
         CHECK DECB2                    OK                          A94
         TM    GOSW,NOTEGO2             NOTES IN PROGRESS           BA4
         BZ    MOVERD1                  NO                          BA4
         BAL   R10,UPDNOTE              GO TRY TO UPDATE NOTE LIST  BA4
MOVERD1  EQU   *                                                    BA4
         TM    GOSW,NOTEGO1             LOOKING FOR NOTE RECORD     BA4
         BZ    MOVERD2                  NO                          BA4
         CLC   NOTEADR,DCBFDAD+DATAIN   FOUND                       BA4
         BNE   MOVERD2                  NO                          BA4
         NOTE  DATAOUT                  FIND NEW TTR                BA4
         STCM  R1,HIGH3,TABTTRN         SET IN NOTE LIST AREA       BA4
         NI    GOSW,255-NOTEGO1         INDICATE SET                BA4
MOVERD2  EQU   *                                                    BA4
         TM    GOSW,TEXTGO              TEXT IN PROGRESS            BA4
         BZ    MOVERD                   NO                          BA4
         CLC   TEXTADR,DCBFDAD+DATAIN   COMPARE MBBCCHHR ADDRESSES  BA4
         BNE   MOVERD                   NOT SAME, CONT              BA4
         NOTE  DATAOUT                  FIND NEW TTR IN OUTPUT      BA4
         STCM  R1,HIGH3,TABTTRT         SET IN DIRECTORY            BA4
         NI    GOSW,255-TEXTGO          TURN OFF, FOUND             BA4
         B     MOVERD                   DO ANOTHER BLOCK            A94
         SPACE 2                                                    A04
*---------------------------------------------------------------------*
*        SET MEMBER INTO PDS (STOW)                                   *
*---------------------------------------------------------------------*
         SPACE
MOVESTW  EQU   *                                                    A94
         CLI   GOSW,0                   ALL OK                      BA4
         BNE   ERR11                    NO, ERROR IN TEXTREC        BA4
         STOW  DATAOUT,(R3),R           SET NEW ONE                 A94
         LTR   R15,R15                  ALL OK                      A94
         BNZ   ERR3                     NO, LETS GET OUT            A94
         SPACE 2                                                    A04
*---------------------------------------------------------------------*
*        LOOK FOR ALIASES TO BE MOVED FOR THE MEMBER JUST             *
*              MOVED IN THE PREVIOUS SECTION                          *
*---------------------------------------------------------------------*
         SPACE 2                                                    A04
MOVEAL   EQU   *                                                    A94
         L     R2,TABPTR                POINT TO TABLE AGAIN        A94
MOVEAL1  EQU   *                                                    A94
         CLI   0(R2),255                END OF TABLE                A94
         BE    MOVENEXT                 YES, DO ANOTHER ONE         A94
         CLC   FINDTTR,TABTTRP-TAB(R2)  SAME TTR                    A94
         BNE   MOVEAL3                  NO, NEXT ONE                A94
         TM    TABINDC-TAB(R2),PDS2ALIA ALIAS                       A94
         BNO   ERR4                     NO, THIS IS AN EROR         A94
MOVEAL2  EQU   *                                                    A94
         MVC   TABTTRP-TAB(L'TABTTRP,R2),TABTTRP SET SAME TTR       A94
         TM    TABINDC,PDS2NOTE         ANY NOTE                    BA4
         BZ    MOVEAL2A                 NO                          BA4
         MVC   TABTTRT-TAB(L'TABTTRT,R2),TABTTRT SET TEXT ADDR      BA4
         TM    TABINDC,X'40'            ANY NOTE LIST               BA4
         BZ    MOVEAL2A                 NO                          BA4
         MVC   TABTTRN-TAB(L'TABTTRN,R2),TABTTRN SET IN ALIAS       BA4
MOVEAL2A EQU   *                                                    BA4
         STOW  DATAOUT,(R2),R           DO THIS REPLACE             A94
         LTR   R15,R15                  ALL OK                      A94
         BNZ   ERR5                     NO, GET OUT NOW             A94
MOVEAL3  EQU   *                                                    A94
         BXLE  R2,R4,MOVEAL1            ANOTHER                     A94
MOVENEXT EQU   *                                                    A94
         BXLE  R3,R4,MOVE1              TRY ANOTHER                 A94
         SPACE 2                                                    A04
*---------------------------------------------------------------------*
*        RECHECK THE MOVER TABLE JUST IN CASE ANY OF THE              *
*              MEMBERS WERE MOVED BUT NOT ALL CLEARED THE AREA        *
*              REQUIRED FOR THE NEW DIRECTORY ENTRIES                 *
*---------------------------------------------------------------------*
         SPACE 2                                                    A04
         L     R3,TABPTR                SET FOR ANOTHER PASS        A94
RETRY    EQU   *                                                    A94
         CLC   TTLIM,TABTTRP            CHECK OUT                   A94
         BL    ENDTAB                   ALL OK                      A94
         BXLE  R3,R4,RETRY              AGAIN AND SHRINK LIST       A94
         B     ENDTAB                   CLOSE OFF                   A94
         SPACE 2                                                    A04
*---------------------------------------------------------------------*
*        EXTEND THE DIRECTORY INTO CLEAR SPACE PROVIDED IN THE FRONT  *
*              OF THE PDS BY THE ABOVE ROUTINES                       *
*---------------------------------------------------------------------*
         SPACE 2                                                    A04
EXTEND   EQU   *                                                    A94
         CLOSE (DATAIN,,DATAOUT)        CLOSE THE DATASETS(NEW TTR) A94
         MVC   TTRN,EOF1TTR             SET FOR WRITE               A94
EXTEND1  EQU   *                                                    A94
         BAL   R10,WRITEDIR             PUT OUT DIRECTORY           A94
         SP    WK1,=P'1'                REDUCE COUNT                A94
         BP    EXTEND1                  LOOP IT FOR ALL             A94
         BAL   R10,WRITEEOF             DO EOF MARK                 A94
         CLC   TTLIM,TTRN               CHECK OUT TRACK             A94
         BNE   ERR6                     NO GOOD                     A94
         CLOSE DIRECT                   END EXCP MODE               A94
         LR    R2,R13        SAVE CURRENT WORK-SAVE AREA
         L     R13,4(R2)     PICK UP LAST SAVE AREA
         LM    R14,R12,12(R13)    RESTORE REGS
         MVI   12(R13),X'FF' SET RETURN INDICATION
         BR    R14           RETURN
         SPACE 2                                                    A04
         DROP  R3                       DROP REM1INING REG          BA4
         SPACE
*---------------------------------------------------------------------*
*        END OF MAINLINE CODE                                         *
*---------------------------------------------------------------------*
         EJECT
*---------------------------------------------------------------------*
*        ERROR ROUTINES                                               *
*---------------------------------------------------------------------*
         SPACE 2                                                    A04
ERR1     DS    0H                                                   A04
         LA    R1,EM1                   GET MESSAGE                 A04
         B     ERRX                     WRITE AND EXIT              A04
ERR2     LA    R1,EM2                                               A04
         B     ERRX                                                 A04
ERR3     LA    R1,EM3                                               A04
         B     ERRX                                                 A04
ERR4     LA    R1,EM4                                               A04
         B     ERRX                                                 A04
ERR5     LA    R1,EM5                                               A04
         B     ERRX                                                 A04
ERR6     LA    R1,EM6                                               A04
         B     ERRX                                                 A04
ERR7     LA    R1,EM7                                               A04
         B     ERRX                                                 A04
ERR8     LA    R1,EM8                                               A04
         B     ERRX                                                 A04
ERR9     LA    R1,EM9                                               A04
         B     ERRX                                                 A04
ERR10    LA    R1,EM10                                              A04
         B     ERRX                                                 A04
ERR11    LA    R1,EM11                                              BA4
         B     ERRX                                                 BA4
ERR12    LA    R1,EM12                                              BA4
         B     ERRX                                                 BA4
ERR13    LA    R1,EM13                                              BF4
         B     ERRX                                                 BF4
ERR14    LA    R1,EM14                                              BF4
         B     ERRX                                                 BF4
ERR15    LA    R1,EM15                                              BF4
         B     ERRX                                                 BF4
ERR16    LA    R1,EM16                                              BH4
         B     ERRX                                                 BH4
ERR17    LA    R1,EM17                                              BH4
         B     ERRX                                                 BH4
ERR18    LA    R1,EM18                                              BH4
         B     ERRX                                                 BH4
         SPACE 2                                                    A04
ERRX     DS    0H                                                   A04
         WTO   MF=(E,(1))                                           A04
         ABEND 101,DUMP                                             A04
         EJECT
*---------------------------------------------------------------------*
*        ERROR MESSAGES                                               *
*---------------------------------------------------------------------*
         SPACE
EM1      WTO   'EXPDIR - JOB TERMINATED BY OPERATOR',                  X
               ROUTCDE=(11),MF=L
EM2      WTO   'EXPDIR - TABLE OVERFLOW',                              X
               ROUTCDE=(11),MF=L
EM3      WTO   'EXPDIR - STOW ERROR ON MEMBER',                        X
               ROUTCDE=(11),MF=L
EM4      WTO   'EXPDIR - DIRECTORY ERROR/ ALIAS SEARCH',               X
               ROUTCDE=(11),MF=L
EM5      WTO   'EXPDIR - STOW ERROR ON ALIAS',                         X
               ROUTCDE=(11),MF=L
EM6      WTO   'EXPDIR - TRACK MISMATCH AFTER EXTEND',                 X
               ROUTCDE=(11),MF=L
EM7      WTO   'EXPDIR - DIRECTORY WRITE ERROR',                       X
               ROUTCDE=(11),MF=L
EM8      WTO   'EXPDIR - DIRECTORY READ ERROR',                        X
               ROUTCDE=(11),MF=L
EM9      WTO   'EXPDIR - NOTE LIST ENCOUNTERED, CANNOT HANDLE',        X
               ROUTCDE=(11),MF=L
EM10     WTO   'EXPDIR - ALIAS WITH NO MEMBER FOUND',                  X
               ROUTCDE=(11),MF=L
EM11     WTO   'EXPDIR - LOAD MODULE NOTE LIST ERROR',                 X
               ROUTCDE=(11),MF=L
EM12     WTO   'EXPDIR - NOTE LIST RECORD SIZE ERROR',                 X
               ROUTCDE=(11),MF=L
EM13     WTO   'EXPDIR - NOTE LIST RECORD UPDATE INCOMPLETE',          X
               ROUTCDE=(11),MF=L
EM14     WTO   'EXPDIR - PDS NOT PARTITION ORGANIZATION',              X
               ROUTCDE=(11),MF=L
EM15     WTO   'EXPDIR - OBTAIN ERROR',                                X
               ROUTCDE=(11),MF=L
EM16     WTO   'EXPDIR - UCB LOOKUP ERROR',                            X
               ROUTCDE=(11),MF=L
EM17     WTO   'EXPDIR-PARM MUST BE 3 CHARS'                           X
               ROUTCDE=(11),MF=L
EM18     WTO   'EXPDIR - DATASET MUST BE ALLOCATED TO PDS',            X
               ROUTCDE=(11),MF=L
         EJECT
*---------------------------------------------------------------------*
*        MAINLINE CONSTANTS AND WORK AREAS                            *
*---------------------------------------------------------------------*
         SPACE
         LTORG
         SPACE
GOSW     DC    AL1(0)                   GO/ NOGO SWITCH             BA4
NOTEADR  DS    CL8                      MBBCCHHR FOR NOTE           BA4
NOTESIZE DS    H                        SIZE OF NOTE RECORD         BA4
IONOTE   DS    F                        NOTE IO WORKAREA            BA4
TEXTADR  DS    CL8                      MBBCCHHR AREA FOR TEXT REC  BA4
BEGINTTR DC    X'000001'                BOF TTR POINTER             A94
TABPTR   DC    A(0,TABLN,0)             BXLE CONSTANTS              A04
TABAMT   DC    A(TABLN*11)              INITIAL ROOM FOR 10         BL4
NOTEPTR  DC    A(NOTETAB)               ADDRESS OF NOTE TABLE       BA4
NOTEPTRA DS    F                        NOTE LIST POINTER (WORKING) BA4
DBL      DS    D                        ALIGNED WORK AREA           A04
TTRN     DC    X'000001',X'00'          TTRN FOR WORK               A94
EOF1TTR  DS    CL3                      TTR HOLDER FOR OLD EOF      A94
TTLIM    DS    H                        TT LIMIT VALUE              A94
DIRCNT   DS    0D                       DIRECTORY COUNT ALIGNED     A94
         DC    PL8'0'                   INITIAL VALUE               A94
WK1      DS    CL3                      EXTENSION HOLD AREA         A94
PARML    DS    H                                                    A94
PARMD    DS    CL50                     DATA AREA                   A94
DIRTK    DC    F'28'                    DIRECTORY ENTRIES PER TRACK A94
*                                       SET FOR 3330                A94
IOPOINT  DS    F                        I/O HOLDER                  A94
MSGECB   DC    F'0'                     WOTR WAIT ECB               A94
FINDTTR  DC    X'000000',X'00'          TTRN FOR FIND MACRO         A94
REPLY    DC    C' '                     VALIDITY REPLY AREA         A94
*        THIS  WTOR IS NOT USED IN THIS MODULE            *LBD 02/84*
MSG1     WTOR  'EXPDIR - VER XXX EXPANSION   DSN=ZZZZZZZZZZZZZZZZZZZZZZX
               ZZZZZZZZZZZZZZZZZZZZZZ',REPLY,1,MSGECB,MF=L
MSG1NO   EQU   MSG1+12+15,3                                         A94
MSG1NAM  EQU   MSG1+12+33,44                                        A04
         EJECT
*---------------------------------------------------------------------*
*        READ DIRECTORY (EXCP)                                        *
*---------------------------------------------------------------------*
*.....................................................................*
*        THIS ROUTINE WILL READ A PHYSICAL DIRECTORY BLOCK AND        *
*              RETURN ITS ADDRESS IN REGISTER ONE.  NOTE THAT         *
*              REGISTER 2 IS USED AND NOT RESTORED IN THIS ROUTINE.   *
*                                                                     *
*        THERE ARE NO CALLING PARAMETERS TO THIS ROUTINE AND ALL      *
*              AREAS USED ARE ASSUMED TO BE PROPERLY INITIALIZED.     *
*              THE TTRN FIELD WILL BE UPPED IN THIS ROUTINE SO THAT   *
*              THE CALLER NEED NOT BE CONCERNED WITH POSITIONING.     *
*.....................................................................*
         SPACE 2                                                    A04
         USING IOBSTDRD,R1              IOB DSECT
         SPACE 2                                                    A04
READDIR  DS    0H                                                   A04
         ST    R10,READDSV              SAVE LINKAGE                A04
         LA    R1,READIOB               GET THE IOB                 A04
         L     R0,TTRN                  SET TTRN                    BF4
         LA    R2,IOBSEEK               MBBCCHHR AREA               BF4
         BAL   R10,CONVTTR              SET MBBCCHHR                A04
         LA    R1,READIOB
         EXCP  (1)                      DO THE I/O                  A04
         WAIT  ECB=EXCPECB              WAIT FOR COMPLETION         A04
         LA    R1,READIOB               RELOAD                      BF4
         CLI   EXCPECB,X'7F'            ALL OK                      A04
         BE    READDI1                  YES, SIGNAL GOOD            A04
         CLI   EXCPECB,X'41'            NORMAL POST FOR UEX         A04
         BNE   ERR8                     NO, ERROR                   A04
         TM    IOBUSTAT,IOBUEX          EOF                         A04
         BNO   ERR8                     NO, ERROR                   A04
         L     R10,READDSV              GET LINKAGE                 A04
         B     4(R10)                   GO TO EOF                   A04
READDI1  EQU   *                                                    A04
         BAL   R10,ADVTTRN              UP THE TTRN                 A04
         LA    R1,EXCPDATA              POINT TO DATA AREA          A04
         L     R10,READDSV              RESTORE LINKAGE             A04
         BR    R10                                                  A04
         SPACE 2                                                    A04
         DROP  R1                                                   A04
         SPACE
READDSV  DS    F                        SAVE LINKAGE                A04
         LTORG
         EJECT
*---------------------------------------------------------------------*
*        GET DIRECTORY ENTRY SUBROUTINE                               *
*---------------------------------------------------------------------*
*.....................................................................*
*        THIS ROUTINE WILL READ AND RETURN TO THE CALLER A LOGICAL    *
*              RECORD FROM THE DIRECTORY OF THE PDS.  NOTE THAT       *
*              ONLY THE STANDARD WORK REGS ARE USED AND ARE NOT       *
*              RESTORED.  NOTE ALSO THAT NO END OF FILE CHECK IS      *
*              DONE AND THE CALLER SHOULD DETECT LOGICAL END OF FILE  *
*              WHICH WILL OCCUR BEFORE PHYSICAL END OF FILE.          *
*.....................................................................*
         SPACE 2                                                    A04
         USING PDS,R1                   ADDRESSABILITY              A04
         SPACE
GETDIR   DS    0H                       ALIGN                       A94
         ST    R10,GETDIRSV             SAVE LINKAGE                A04
         L     R1,GETDIRS1              GET CURRENT POINTER         A94
         SR    R6,R6                    CLEAR WORK REG              A94
         IC    R6,PDS2INDC              GET USER LENGTH             A94
         N     R6,=F'31'                CLEAR UNWANTED              A94
         SLL   R6,1                     GET BYTES                   A94
         LA    R1,12(R1,R6)             POINT TO NEXT ENTRY         A94
         C     R1,GETDIRS2              OFF THE END                 A94
         BL    GETDIRX                  NO, GIVE IT TO CALLER       A94
         BAL   R10,READDIR              GET PHYSICAL                A94
         LR    R6,R1                    SET FOR END CALC            A94
         AH    R6,0(R1)                 END POINTER                 A94
         ST    R6,GETDIRS2              SET NEW END                 A94
         LA    R1,2(R1)                 POINT TO ENTRY              A94
GETDIRX  EQU   *                                                    A94
         ST    R1,GETDIRS1              SAVE CURRENT POINTER        A94
         L     R10,GETDIRSV             RESTORE LINKAGE             A04
         BR    R10                      RETURN TO CALLER            A94
         SPACE 2                                                    A04
         DROP  R1                                                   A04
         SPACE 2                                                    A94
GETDIRS1 DC    F'0'                     POINTER TO CURRENT          A94
GETDIRS2 DC    F'0'                     END POINTER                 A94
GETDIRSV DS    F                        LINKAGE SAVE                A94
         LTORG
         EJECT
*---------------------------------------------------------------------*
*        WRITE DIRECTORY ROUTINE                                      *
*---------------------------------------------------------------------*
*.....................................................................*
*        THIS ROUTINE WILL WRITE A PHYSICAL BLOCK TO THE PDS.         *
*              NOTE REGISTER 2 USAGE IN THIS ROUTINE.  THE TTRN       *
*              FIELD IS ALSO UPPED HERE TO ALLOW SEQUENTIAL WRITING   *
*              WITH MULTIPLE CALLS.  THE KDD FIELDS OF THE            *
*              COUNT RECORD ARE ASSUMED TO BE SET FOR THIS ROUTINE.   *
*.....................................................................*
         SPACE 2                                                    A04
         USING IOBSTDRD,R1              IOB DSECT
         SPACE
WRITEDIR DS    0H                                                   A94
         ST    R10,WRITDSV              SAVE LINKAGE                A94
         LA    R1,WRITEIOB              GET OUR IOB                 A94
         L     R0,TTRN                  SET FOR CONVERT             BF4
         LA    R2,IOBSEEK               SET RECEIVING AREA          BF4
         BAL   R10,CONVTTR              CONVERT TTR TO MBBCCHHR     A94
         MVC   EXCPADR,IOBCC            GET INTO RECORD             A94
         SR    R6,R6                    CLEAR WORK REG              A94
         IC    R6,IOBR                  GET RECORD NUMBER           A94
         BCTR  R6,0                     REDUCE FOR SEARCH           A94
         STC   R6,IOBR                  RESET IN SEEK               A04
         EXCP  (1)                      DO THE EXCP BIT             A94
         WAIT  ECB=EXCPECB              WAIT FOR COMPLETION         A94
         CLI   EXCPECB,X'7F'            ALL OK                      A94
         BNE   ERR7                     NO, GET OUT                 A94
         BAL   R10,ADVTTRN              ADVANCE THE TTR POINTER     A94
         L     R10,WRITDSV              RESTORE LINKAGE             A94
         BR    R10                      RETURN TO CALLER            A94
         SPACE 2                                                    A04
         DROP  R1                                                   A04
         SPACE
WRITDSV  DS    F                        SAVE LINKAGE                A94
         LTORG
         EJECT
*---------------------------------------------------------------------*
*        WRITE EOF MARK ROUTINE                                       *
*---------------------------------------------------------------------*
*.....................................................................*
*        THIS ROUTINE WRITES THE EOF RECORD TO THE PDS AND MUST BE    *
*              THE LAST PHYSICAL WRITE GIVEN TO THE FILE.  IT WILL    *
*              SET THE KDD FIELD TO ZERO (EOF) AND CALL NORMAL        *
*              FILE OUTPUT.  NOTE THAT IT WILL ALSO REDUCE THE        *
*              TTRN FIELD SO THAT WE ARE POINTING TO THE EOF          *
*              RECORD.                                                *
*.....................................................................*
         SPACE
WRITEEOF DS    0H                                                   A04
         ST    R10,WRITEFSV             SAVE LINKAGE                A04
         XC    EXCPKDD,EXCPKDD          SET KEY AND DATA TO ZERO    A04
         BAL   R10,WRITEDIR             WRITE IT OUT                A04
         CLI   TTRN+2,1                 RECORD ONE                  A04
         BNE   WRITEFA                  NO, ADJUST RECORD NO        A04
         LH    R6,TTRN                  GET TTR                     A04
         BCTR  R6,0                     REDUCE TRACK                A04
         STH   R6,TTRN                  RESET                       A04
         MVC   TTRN+2(1),DIRTK+3        RESET RECORD NO             A04
         B     WRITEFX                  EXIT                        A04
WRITEFA  EQU   *                                                    A04
         IC    R6,TTRN+2                RECORD NO                   A04
         BCTR  R6,0                     REDUCE                      A04
         STC   R6,TTRN+2                RESET RECORD                A04
WRITEFX  EQU   *                                                    A04
         L     R10,WRITEFSV             RELOAD LINKAGE              A04
         BR    R10                      RETURN TO CALLER            A04
         SPACE 2                                                    A04
WRITEFSV DS    F                        LINKAGE SAVE                A04
         LTORG
         EJECT
*---------------------------------------------------------------------*
*        ADVANCE THE TTRN FIELD                                       *
*---------------------------------------------------------------------*
*.....................................................................*
*        THIS ROUTINE WILL ADVANCE THE TTRN FIELD FOR PHYSICAL        *
*              I/O ROUTINES USING THE VALUE GOTTEN FROM THE           *
*              FORMAT 4 DSCB FOR NUMBER OF PDS BLOCKS PER TRACK.      *
*.....................................................................*
         SPACE 2                                                    A04
ADVTTRN  DS    0H                                                   A04
         ICM   R6,LOW3,TTRN             GET THE TTR                 A04
         LA    R6,1(R6)                 UP R VALUE                  A04
         CLM   R6,LOW1,DIRTK+3          RECORD VALUE EXCEEDED       A04
         BNH   ADVTTRNX                 NO                          A04
         LA    R6,256(R6)               BUMP TT VALUE               A04
         IC    R6,=AL1(1)               SET R VALUE                 A04
ADVTTRNX EQU   *                                                    A04
         STCM  R6,LOW3,TTRN             RESTORE TTRN FIELD          A04
         BR    R10                      RETURN TO CALLER            A04
         SPACE 2                                                    A04
         LTORG
         EJECT
*---------------------------------------------------------------------*
*        NOTE LIST POINTER AND TABLE BUILD ROUTINE                    *
*---------------------------------------------------------------------*
*.....................................................................*
*        THIS ROUTINE WILL CONSTRUCT THE NOTELIST TABLE FROM THE      *
*              NOTE LIST RECORD.  THE ADDRESS OF THE RECORD IS        *
*              OBTAINED FROM THE DIRECTORY ENTRY IN THE MOVER         *
*              TABLE AND CONVERTED TO MBBCCHHR FORM FOR CHECKING      *
*              DURING THE COPYING OF THE MEMBER.  THE NOTE LIST       *
*              IS THEN READ AND TTR INFORMATION IS CONVERTED TO       *
*              MBBCCHHR FORM AND PROPER ADDRESSES ARE PLACED IN       *
*              THE NOTELIST TABLE TO ALLOW A SUBSTITUTE               *
*              RECORD TO BE CREATED AND SUBSEQUENTLY PUT OUT          *
*              DURING THE COPY OPERATION.  NOTE THAT THE WORK         *
*              REGISTERS ARE USED DURING A CALLING SEQUENCE SO        *
*              THE ONLY ROUTINE WHICH COULD BE USED IS THE CONVERT    *
*              TO MBBCCHHR ROUTINE (CONVTTR) SINCE IT SAVES ALL       *
*              REGISTERS.                                             *
*.....................................................................*
         SPACE 2                                                    BA4
         USING TAB,R3                                               BA4
         USING NOTAB,R8                                             BA4
         SPACE 2                                                    BA4
SETNOTE  DS    0H                                                   BA4
         ST    R10,SETNOTSV             SAVE LINKAGE                BA4
         SR    R0,R0                    CLEAR                       BF4
         ICM   R0,HIGH3,TABTTRN         GET TTRN                    BF4
         LA    R2,NOTEADR               MBBCCHHR RETURN             BF4
         BAL   R10,CONVTTR              GO CONVERT                  BF4
         OI    GOSW,NOTEGO1+NOTEGO2     SET ALL NOTE ACTIVE         BA4
         MVC   FINDTTR,TABTTRN          SET FOR POINT TO THE        BA4
*                                       NOTE RECORD                 BA4
         POINT DATAIN,FINDTTR           SET FOR IO                  BA4
         L     R6,IONOTE                GET IO AREA                 BA4
         READ  DECB3,SF,DATAIN,(R6),'S' READ NOTE LIST              BA4
         CHECK DECB3                                                BA4
         LH    R7,DCBBLKSI+DATAIN       GET SIZE IN R7              BA4
         L     R1,DECB3+16              IOB                         BA4
         SH    R7,14(R1)                RES COUNT                   BA4
         STH   R7,NOTESIZE              SET SIZE OF RECORD          BA4
         SR    R7,R7                                                BA4
         IC    R7,TABNL                 GET NUMBER OF ENTRIES IN LISBA4
         L     R8,NOTEPTR               POINT TO THE TABLE          BA4
SETNOTE1 EQU   *                                                    BA4
         L     R0,0(R6)                 PICK UP A TTRN              BA4
         LA    R2,NOTABSK               GET SEEK ADDRESS IN TABLE   BA4
         BAL   R10,CONVTTR              CONVERT                     BF4
         ST    R6,NOTABAD               SAVE ADDRESS OF NOTE        BA4
         LA    R8,NOTABLN(R8)           NEXT AREA                   BA4
         LA    R6,4(R6)                 NEXT TTRN                   BA4
         BCT   R7,SETNOTE1              AGAIN                       BA4
         MVI   NOTABSK,255              CLOSE OFF TABLE             BA4
         MVC   NOTEPTRA,NOTEPTR         SET NEW WORK POINTER        BA4
         L     R8,NOTEPTR               RELOAD                      BA4
         SORT  (R8,NOTABLN),KEY=(0,8)   SORT JUST IN CASE           BA4
         L     R10,SETNOTSV             RELOAD LINKAGE              BA4
         BR    R10                                                  BA4
         SPACE 2                                                    BA4
         DROP  R3,R8                                                BA4
         SPACE 2                                                    BA4
SETNOTSV DS    F                                                    BA4
         LTORG
         EJECT
*---------------------------------------------------------------------*
*        UPDATE NOTE LIST RECORD                                      *
*---------------------------------------------------------------------*
*.....................................................................*
*        THIS ROUTINE WILL CHECK THE NOTELIST TABLE FOR A MATCH       *
*              AGAINST THE RECORD JUST PROCESSED BY READ AND          *
*              WILL UPDATE THE SUBSTITUTE NOTE RECORD                 *
*              ACCORDINGLY.  NOTE THAT ONLY ONE COMPARE TO THE        *
*              FIRST MEMBER OF THE TABLE IS REQUIRED SINCE THE        *
*              TABLE IS IN ASCENDING ORDER.                           *
*.....................................................................*
         SPACE 2                                                    BE4
         USING NOTAB,R6                                             BE4
         SPACE 2                                                    BE4
UPDNOTE  DS    0H                                                   BE4
         ST    R10,UPDNOTSV             SAVE LINKAGE                BE4
         L     R6,NOTEPTRA              GET CURRENT POINTER         BE4
         CLC   NOTABSK,DCBFDAD+DATAIN   IS THIS MATCH               BE4
         BNE   UPDNOTEX                 NO, EXIT                    BE4
         NOTE  DATAOUT                  GET CORRESPONDING OUTPUT    BE4
         L     R7,NOTABAD               ADDRESS OF THIS POINTER     BE4
         STCM  R1,HIGH3,0(R7)           SET IN OUTPUT RECORD        BE4
         LA    R6,NOTABLN(R6)           NEXT ONE                    BE4
         ST    R6,NOTEPTRA              RESET CURRENT               BE4
         CLI   0(R6),255                END OF TABLE                BE4
         BNE   UPDNOTEX                 NO, EXIT                    BE4
         NI    GOSW,255-NOTEGO2         INDICATE COMPLETE           BE4
UPDNOTEX EQU   *                                                    BE4
         L     R10,UPDNOTSV             RELOAD LINKAGE              BE4
         BR    R10                      EXIT TO CALLER              BE4
         SPACE 2                                                    BE4
         DROP  R6                                                   BE4
         SPACE 2                                                    BF4
UPDNOTSV DS    F                                                    BF4
         SPACE 2                                                    BE4
         LTORG
         EJECT
*---------------------------------------------------------------------*
*        CONVERT TTRN TO MBBCCHHR IN IOB SEEK FIELD                   *
*---------------------------------------------------------------------*
*.....................................................................*
*        THIS ROUTINE WILL CALL THE RESIDENT TTRN TO MBBCCHHR         *
*              ROUTINE TO CONVERT FOR PHYSICAL I/O OR                 *
*              DCBFDAD COMPARISON.  REGISTER 0 AND 2 ARE              *
*              ASSUMED TO BE LOADED WITH THE REQUIRED PARAMETERS      *
*              (TTRN AND POINTER TO MBBCCHHR AREA).  NOTE THAT        *
*              SINCE REGISTERS ARE DESTROYED BY THE RESIDENT          *
*              ROUTINE, WE WILL PRESERVE ALL REGS IN THIS ROUTINE.    *
*.....................................................................*
         SPACE 2                                                    A04
CONVTTR  DS    0H                                                   A04
         STM   R1,R13,CONVSAV           SAVE ALL REGS               A04
         L     R1,DCBDEBAD+DIRECT       GET DEBAD FROM DCB          A04
         L     R15,16                   GET CVT                     A04
         L     R15,CVTPCNVT(R15)        RESIDENT CONVERT ROUTINE    A04
         BALR  R14,R15                  GO CONVERT                  A04
         USING *,R14                    ADDRESSABILITY              A04
         LM    R1,R13,CONVSAV           RESTORE REGS                A04
         DROP  R14                                                  A04
         BR    R10                      RETURN TO CALLER            A04
         SPACE 2                                                    A04
CONVSAV  DS    13F                      SAVE AREA FOR REGS          A04
         LTORG
         EJECT
*---------------------------------------------------------------------*
*        SET UP CAM AREAS FOR VTOC READ                               *
*---------------------------------------------------------------------*
*.....................................................................*
*        THIS ROUTINE IS USED TO SET UP THE CAMLST AREAS FOR A        *
*              SEEK TYPE OBTAIN OF THE FORMAT 4 DSCB BY THE           *
*              INITIALIZATION ROUTINE TO GET THE NUMBER OF            *
*              DIRECTORY BLOCKS PER TRACK ON THE PDS DEVICE.          *
*              THE RESIDENT CONVERT ROUTINE IS USED TO CONVERT THE    *
*              TTR0 FROM THE UCB TO MBBCCHHR OF THE DEVICE BY         *
*              USING A FAKE DEB WHICH INDICATES THE DATASET IS        *
*              THE WHOLE VOLUME.                                      *
*.....................................................................*
         SPACE 2                                                    BH4
         USING UCBCMSEG,R1
         SPACE 2                                                    BH4
SETCAM   DS    0H                                                   BH4
         L     R15,16                   CVT                         BH4
         L     R14,CVTILK2(R15)         POINT TO UCBS               BH4
         SR    R1,R1                    CLEAR WORK REG              BH4
         B     SETCAM2                  CONT                        BH4
SETCAM1  EQU   *                                                    BH4
         LA    R14,2(R14)               NEXT UCB                    BH4
SETCAM2  EQU   *                                                    BH4
         CLC   0(2,R14),=X'FFFF'        END OF CHAIN                BH4
         BE    ERR16                    YES, ERROR                  BH4
         ICM   R1,LOW2,0(R14)           PICK UP UCB ADDRESS         BH4
         BZ    SETCAM1                  DUMMY                       BH4
         CLI   UCBTYP+2,X'20'           DASD                        BH4
         BNE   SETCAM1                  NO, TRY AGAIN               BH4
         CLC   CAMVOL,UCBVOLI           CORRECT ONE                 BH4
         BNE   SETCAM1                  NO, AGAIN                   BH4
         ST    R1,CAMUCB                SET IN FAKE DEB             BH4
         L     R0,UCBVTOC               GET TTR0 OF VTOC            BH4
         LA    R2,CAMSK                 SEEK ADDRESS FOR CONVERT    BH4
         LA    R1,CAMDEB                GET FAKE DEB FOR CONVERT    BH4
         STM   R5,R13,SETCAMSV          SAVE REGS                   BH4
         L     15,CVTPCNVT(R15)         GET CONVERT ADDRESS         BH4
         BALR  R14,R15                  GO TP IT                    BH4
         USING *,R14                                                BH4
         LM    R5,R13,SETCAMSV          RELOAD REGS                 BH4
         DROP  R14                                                  BH4
         BR    R10                      RETURN TO CALLER            BH4
         SPACE 2                                                    BH4
         DROP  R1                                                   BH4
         SPACE 2                                                    BH4
SETCAMSV DS    9F                       SAVE CLOBERRED REGS         BH4
         LTORG
         EJECT
*---------------------------------------------------------------------*
*        E X C P   A R E A S                                          *
*---------------------------------------------------------------------*
         SPACE 2                                                    A04
WRITEIOB IOBGEN FLAGS=(UN,CC),ECB=EXCPECB,DCB=DIRECT,                  X
               CCWS=WRITECCW
READIOB  IOBGEN FLAGS=(UN,CC),ECB=EXCPECB,DCB=DIRECT,                  X
               CCWS=READCCW
WRITECCW CCW   SEARCH,WRITEIOB+32+3,X'40',5                         A04
         CCW   TIC,*-8,0,0                                          A04
         CCW   WCKD,EXCPAREA,X'20',8    LET HARDWARE FILL IN ZEROS  A04
READCCW  CCW   SEARCH,READIOB+32+3,X'40',5                          A04
         CCW   TIC,*-8,0,0                                          A04
         CCW   RD,EXCPDATA,X'00',256                                A04
         SPACE 2                                                    A04
EXCPECB  DC    F'0'                     EXCP ECB FOR IOS POSTING    A04
EXCPAREA DS    0D                                                   A04
EXCPCNT  DS    0CL8                     COUNT FIELD                 A04
EXCPADR  DS    CL5                      CCHHR ADDRESS               A04
EXCPKDD  DS    0CL3                     KDD AREA                    A04
         DC    AL1(8),AL2(256)          INITIALIZE FOR WRITE        A04
EXCPKEY  DS    CL8                      KEY AREA                    A04
EXCPDATA DS    CL256                    DIRECTORY DATA AREA         A04
         EJECT
*---------------------------------------------------------------------*
*        OBTAIN WORK AREAS                                            *
*---------------------------------------------------------------------*
         SPACE 2                                                    BF4
CAM4     CAMLST SEEK,CAMSKA,CAMVOL,CAMWK                            BH4
CAM      CAMLST SEARCH,CAMDSN,CAMVOL,CAMWK                          BF4
CAMSK    DS    0CL8                                                 BH4
         DS    CL3                                                  BH4
CAMSKA   DS    CL5                                                  BH4
CAMVOL   DS    CL6                                                  BF4
CAMDSN   DS    CL44                                                 BF4
CAMWK    DS    0D                                                   BF4
         DS    148C                                                 BF4
         SPACE 2                                                    BH4
CAMDEB   DS    0D                                                   BH4
         DC    4A(0)                                                BH4
         DC    AL1(1)                                               BH4
         DC    AL3(0)                                               BH4
         DC    A(0)                                                 BK4
         DC    BL1'00001111'                                        BH4
         DC    AL3(0)                                               BH4
         DC    AL1(4)                                               BH4
         DC    AL3(0)                                               BH4
*        FIRST AND ONLY EXTENT                                      BH4
CAMUCB   DS    0F                       UCB ADDRESS                 BH4
         DC    BL1'11000000'                                        BH4
         DC    AL3(0)                                               BH4
         DC    3AL2(0)                                              BH4
         DC    2X'FFFF'                                             BH4
         DC    X'7FFF'                                              BH4
         EJECT
*---------------------------------------------------------------------*
*        D C B ' S                                                    *
*---------------------------------------------------------------------*
         SPACE 2                                                    A94
DIRECT   DCB   DDNAME=PDS,DSORG=PS,MACRF=E,                            X
               EXLST=JFCBX
         SPACE 2                                                    A94
DATAIN   DCB   DDNAME=PDS,DSORG=PO,MACRF=R,EODAD=MOVESTW            A94
         SPACE 2                                                    A94
DATAOUT  DCB   DDNAME=PDS,DSORG=PO,MACRF=W                          A04
JFCBX    DS    0F                                                   A04
         DC    X'87'                                                A04
         DC    AL3(JFCB)                                            A04
         SPACE 2                                                    A04
JFCB     DS    CL176                                                A04
JFCBDSNM EQU   JFCB,44                                              A04
JFCBTSDM EQU   JFCB+52                                              A04
JFCBVOLS EQU   JFCB+118                                             BF4
         SPACE 2                                                    BA4
*---------------------------------------------------------------------*
*        NOTE WORK TABLE                                              *
*---------------------------------------------------------------------*
         SPACE 2                                                    BA4
NOTETAB  DS    256CL12                                              BA4
         EJECT
*---------------------------------------------------------------------*
*        MISCELLANEOUS EQUATES                                        *
*---------------------------------------------------------------------*
         SPACE 2                                                    A04
CVTPCNVT EQU   28                                                   A04
CVTILK2  EQU   40                                                   BH4
DCBFDAD  EQU   5                                                    BA4
DCBBLKSI EQU   62                                                   A04
DCBDEBAD EQU   44                                                   A04
JFCNWRIT EQU   X'08'                                                A04
HIGH3    EQU   14                                                   BA4
LOW3     EQU   7                                                    A04
LOW2     EQU   3                                                    BH4
LOW1     EQU   1                                                    A04
SEARCH   EQU   X'31'                                                A04
TIC      EQU   X'08'                                                A04
WCKD     EQU   X'1D'                                                A04
RD       EQU   X'06'                                                A04
         SPACE 2                                                    BA4
*---------------------------------------------------------------------*
*        GO/NOGO EQUATES                                              *
*---------------------------------------------------------------------*
         SPACE
TEXTGO   EQU   X'80'                                                BA4
NOTEGO1  EQU   X'40'                                                BA4
NOTEGO2  EQU   X'20'                                                BA4
         EJECT
*---------------------------------------------------------------------*
*        DSECTS                                                       *
*---------------------------------------------------------------------*
         SPACE 2                                                    A04
TAB      DSECT
TABNAME  DS    CL8                                                  A94
TABTTRP  DS    CL3                                                  A94
TABINDC  DS    CL1                                                  A94
TABTTRT  DS    CL3                                                  BA4
TABZERO  DS    CL1                                                  BA4
TABTTRN  DS    CL3                                                  BA4
TABNL    DS    CL1                                                  BA4
TABDATA  DS    CL54                                                 BA4
TABLN    EQU   *-TAB                                                A94
         SPACE 2                                                    A04
PDS      DSECT
         DS    CL8                                                  A94
PDS2TTRP DS    CL3                                                  A94
PDS2INDC DS    CL1                                                  A94
PDS2ALIA EQU   X'80'                                                A94
PDS2NOTE EQU   X'60'                                                A94
PDS2TTRT DS    CL3                                                  BA4
PDS2ZERO DS    CL1                                                  BA4
PDS2TTRN DS    CL3                                                  BA4
PDS2NL   DS    CL1                                                  BA4
         SPACE 2                                                    A04
IOBUEX   EQU   X'01'                                                A04
******** IOB DSECT:
         IEZIOB             IOB DSECT
         SPACE 2                                                    BA4
NOTAB    DSECT
NOTABSK  DS    CL8                                                  BA4
NOTABAD  DS    CL4                                                  BA4
NOTABLN  EQU   *-NOTAB                                              BA4
         SPACE 2                                                    BF4
**********DSCB DSECT:
         IECSDSL1 (1,4)     DSCB FORMAT1 + 4 DSECT
         SPACE 2                                                    A04
**********UCB DSECT:
         IEFUCBOB           UCB DSECT
         END   EXPDIR                                               A94
