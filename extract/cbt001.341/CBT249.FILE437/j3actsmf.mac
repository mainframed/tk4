         TITLE 'JES3 ACTIVITY SMF EXTRACTOR AND REPORT - VERSION 1.0'
*---------------------------------------------------------*
*        NAME: J3ACTSMF                                   *
*                                                         *
*    FUNCTION: TO GENERATE A SUMMARY REPORT OF THE        *
*              ACTIVITY OF JES3 BASED ON SMF RECORDS      *
*              6, 26 AND 57.                              *
*                                                         *
*       INPUT: SMF RECORD TYPES 6  (OUTPUT)               *
*                               26 (JOB PURGE)            *
*                               57 (NJE)                  *
*                                                         *
*      OUTPUT: REPORT 1 - SYSOUT CLASS USAGE              *
*              REPORT 2 - PRINT ACTIVITY BY PRINTER       *
*              REPORT 3 - JOB CLASS USAGE                 *
*              REPORT 4 - NJE ACTIVITY BY DESTINATION NODE*
*                                                         *
*        JCL:  SYSPRINT - SYSOUT REPORT DD                *
*              SMFTAPE  - SMF INPUT FILE                  *
*              HISTORY  - HISTORY RECORD (OUTPUT)         *
*                                                         *
*        PARM: NODENAME           USED FOR REPORT TITLE   *
*                                 AND HISTORY RECORDS     *
*                                                         *
*                                                         *
*        ABENDS:                                          *
*              1   NO PARM SPECIFIED                      *
*              2   SORTQ FAILED                           *
*                                                         *
*---------------------------------------------------------*
*---------------------------------------------------------*
* AUTHOR:      LIONEL DYCK                                *
*              ROCKWELL INTERNATIONAL                     *
*              PO BOX 2515                                *
*              2201 SEAL BEACH BLVD.                      *
*              SEAL BEACH, CALIF  90740                   *
*              MAIL CODE 110-SH28                         *
*              PHONE (213) 594-1125                       *
*              COMNET 374-1125                            *
*---------------------------------------------------------*
*---------------------------------------------------------*
         EJECT
J3ACTSMF $PROLOG R11,R12
         EJECT
         L     1,0(1)              * LOAD ADDR OF PARM
         LH    2,0(1)              * LOAD LENGTH OF PARM
         LTR   2,2                 * LENGTH OF ZERO
         BZ    NONODE              * NO - BYPASS MOVE
         BCTR  2,0                 * SUBTRACT LENGTH BY 1
         EX    2,MOVENODE          * EXECUTE THE MOVE
         B     NODEOK
NONODE   DS    0H
         ABEND 1                  NO PARM
         SPACE 1
MOVENODE MVC   NODE(0),2(1)
NODEOK   EQU   *
         EJECT
         OPEN  (SYSPRINT,OUTPUT,SMFTAPE)
         SPACE 2
*
**       ACQUIRE TABLE FOR SYSOUT CLASS AND DEST ANALYSIS
*
         L     R2,SOCSIZE         SIZE OF SYSOUT CLASS TBL
         GETMAIN R,LV=(R2)        AND GETMAIN IT
         ST    R1,SOCADDR         SAVE ADDR
         AR    R1,R2              ADD SIZE TO BASE
         S     R1,=A(SOCENT)      LESS 1 ENT FOR BXLE
         ST    R1,SOCEADDR        AND SAVE IT
         SPACE 2
*
**       ACQUIRE JOB CLASS ANALYSIS
*
         L     R2,JOBSIZE         SIZE OF JOB ANALYSIS TABLE
         GETMAIN R,LV=(R2)        AND GETMAIN IT
         ST    R1,JOBADDR         SAVE ADDR
         AR    R1,R2              ADD SIZE TO BASE
         S     R1,=A(JOBENT)      LESS 1 ENT FOR BXLE
         ST    R1,JOBEADDR        AND SAVE IT
         SPACE 2
*
**       ACQUIRE NJE ANALYSIS
*
         L     R2,NETSIZE         SIZE OF NJE ANALYSIS TABLE
         GETMAIN R,LV=(R2)        AND GETMAIN IT
         ST    R1,NETADDR         SAVE ADDR
         AR    R1,R2              ADD SIZE TO BASE
         S     R1,=A(NETENT)      LESS 1 ENT FOR BXLE
         ST    R1,NETEADDR        AND SAVE IT
         EJECT
READ     GET   SMFTAPE
         LR    R5,R1              -> INPUT RECORD
         USING SMFRCD6,R5         INITIAL USING
*
**       GET FROM AND TO DATE/TIME
*
         CP    FDATE,SMF6DTE
         BH    NEWFDATE
         CP    TDATE,SMF6DTE
         BL    NEWTDATE
         CLC   FTIME,SMF6TME
         BH    NEWFTIME
         CLC   TTIME,SMF6TME
         BL    NEWTTIME
         B     VERTYPE
NEWFDATE DS    0H
         MVC   FDATE,SMF6DTE
         MVC   FTIME,SMF6TME
         B     VERTYPE
NEWTDATE DS    0H
         MVC   TDATE,SMF6DTE
         MVC   TTIME,SMF6TME
         B     VERTYPE
NEWFTIME DS    0H
         MVC   FTIME,SMF6TME
         B     VERTYPE
NEWTTIME DS    0H
         MVC   TTIME,SMF6TME
         B     VERTYPE
         EJECT
*
**       VERIFY WE HAVE CORRECT SMF RECORD TYPES
*
VERTYPE  DS    0H
         CLC   SMF6RTY,=X'06'     TYPE 6 ?
         BE    DOSMF6             YES
         CLC   SMF6RTY,=X'1A'     TYPE 26 ?
         BE    DOSMF26
         CLC   SMF6RTY,=X'39'     TYPE 57 ?
         BE    DOSMF57
         B     READ               GO GET NEXT RECORD
         EJECT
DOSMF6   DS    0H
         USING SOC,R7
         L     R7,SOCADDR         -> SOC TABLE
         LA    R8,SOCENT          LOAD ENT SIZE
         L     R9,SOCEADDR        -> END OF TABLE
         SPACE 1
*
**       CHECK FOR SPECIAL CLASS OF OUTPUT
*
         LA    R1,RCLSTBL         -> ROCKWELL CLASS TABLE
SOCRLP   DS    0H
         CLC   SMF6UIF+2(2),0(R1)
         BE    SETRSOC
         LA    R1,4(R1)
         CLI   0(R1),X'FF'
         BNE   SOCRLP
         CLI   SMF6OWC,C' '       BLANK CLASS
         BE    SETOTHER
         CLI   SMF6OWC,X'00'      NULL CLASS
         BE    SETOTHER
         B     SOC1               TAKE WHAT WE HAVE
SETRSOC  DS    0H
         CLI   3(R1),C'V'         VPS CLASS ?
         BE    SETVPS             YES - SET DEST = VPS
         CLI   3(R1),C'D'         DISK-TO-PRINT
         BE    CHECKDTP           YES                     *LBD 01/85*
         CLI   3(R1),C'S'         STANDARD
         BNE   SETRSRCX           NO - SET CLASS
         CLI   SMF6OWC,X'00'      NULL CLASS ?
         BE    SETRSRCX           YES - SET OUR CLASS
         CLI   SMF6OWC,C' '       BLANK CLASS ?
         BE    SETRSRCX           YES - SET OUR CLASS
         B     SOC1               ELSE LEAVE ALONE
         SPACE 1
CHECKDTP DS    0H                                         *LBD 01/85*
         CLI   SMF6RSVU,X'00'     ANY . OR * RECORDS ?    *LBD 01/85*
         BE    SETRSRCX           NO - KEEP CURRENT CLASS *LBD 01/85*
         MVI   SMF6OWC,X'15'      SET AS DTP* CLASS       *LBD 01/85*
         B     SOC1               GO PROCESS
         SPACE 1
SETVPS   DS    0H                 ALL VPS OUTPUT IS FLAGGED AS
         MVC   SMF6OUT,=CL8'VPS'  THE SAME DEST FOR OUR PURPOSES.
         B     SOC1
         SPACE 1
SETRSRCX DS    0H
         MVC   SMF6OWC(1),2(R1)
         B     SOC1
SETOTHER DS    0H
         MVI   SMF6OWC,X'04'
SOC1     DS    0H
         CLI   SOC,X'00'          NULL ENTRY ?
         BE    HAVESOC
         CLC   SOC,SMF6OWC        SAME CLASS
         BE    HAVESOC            YES
         BXLE  R7,R8,SOC1         KEEP LOOKING
HAVESOC  DS    0H
         CLI   SOCDEST,X'00'      NULL ENTRY ?
         BE    HAVESOCD
         CLC   SOCDEST,SMF6OUT    SAME DEST ?
         BE    HAVESOCD           YES
         BXLE  R7,R8,SOC1
HAVESOCD DS    0H
         MVC   SOC,SMF6OWC        SAVE CLASS
         MVC   SOCDEST,SMF6OUT    SAVE DEST
         L     R1,SOCL            LOAD LINE COUNT
         A     R1,SMF6NLR         ADD
         ST    R1,SOCL            AND SAVE
         B     READ
         DROP  R5,R7
         EJECT
DOSMF26  DS    0H
         USING SMFRCD26,R5        ESTAB ADDRESSABILITY
         USING JCLASS,R7
         L     R7,JOBADDR         -> JOB TABLE
         LA    R8,JOBENT          LOAD ENT SIZE
         L     R9,JOBEADDR        -> END OF TABLE
         CLC   SMF26JID(3),=C'TSU'  TSO USER
         BE    TSUJOB             YES
         CLC   SMF26JID(3),=C'STC'  STC
         BE    STCJOB             YES
         CLI   SMF26CLN,C' '      ANY CLASS ?
         BE    NOCLASS            NO
         CLI   SMF26CLN,X'00'     ANY CLASS ?
         BNE   FINDCLAS           YES
NOCLASS  DS    0H
         MVC   SMF26CLN,=CL8' NOCLASS'
         B     FINDCLAS           YES
STCJOB   DS    0H
         MVI   SMF26CLN,X'FF'
         MVC   SMF26CLN+1,=CL7'STC'
         B     FINDCLAS           YES
TSUJOB   DS    0H
         MVI   SMF26CLN,X'FF'
         MVC   SMF26CLN+1,=CL7'TSO'
FINDCLAS DS    0H
         CLI   JCLASS,X'00'       AVAILABLE CLASS ?
         BE    HAVECLAS           YES
         CLC   JCLASS,SMF26CLN    SAME CLASS ?
         BE    HAVECLAS           YES
         BXLE  R7,R8,FINDCLAS     KEEP LOOKING
HAVECLAS DS    0H
         MVC   JCLASS,SMF26CLN    SAVE CLASS
         L     R1,JCNT            LOAD USE COUNT
         LA    R1,1(R1)           INCR BY 1
         ST    R1,JCNT            AND SAVE IT
         SPACE 1
**       ORG UP FOR PROCESSOR USE COUNTS
         LH    R1,SMF26LN1
         AR    R5,R1              BUMP BASE
***      CHECK THE PROCESSOR ID'S  FOR RDR C/I EXEC AND OUTPUT
         CLI   SMF26RID+1,X'00'   READER JOB ?
         BE    CKCID              NO
         L     R1,JRID
         LA    R1,1(R1)
         ST    R1,JRID
CKCID    CLI   SMF26CID+1,X'00'   C/I JOB ?
         BE    CKXID
         L     R1,JCID
         LA    R1,1(R1)
         ST    R1,JCID
CKXID    CLI   SMF26XID+1,X'00'   EXEC JOB ?
         BE    CKOID
         L     R1,JXID
         LA    R1,1(R1)
         ST    R1,JXID
CKOID    CLI   SMF26OID+1,X'00'   OUTPUT PROCESSING
         BE    READ               NO - GET NEXT RECORD
         L     R1,JOID
         LA    R1,1(R1)
         ST    R1,JOID
         B     READ               AND GO GET NEXT RECORD
         DROP  R5,R7
         EJECT
DOSMF57  DS    0H
         USING SMFNJRCD,R5
         USING NETDEST,R7
         L     R7,NETADDR
         LA    R8,NETENT
         L     R9,NETEADDR
DONET    DS    0H
         CLI   NETDEST,X'00'      AVAIL SLOT
         BE    HAVENDST           YES
         CLC   NETDEST,SMFNJDST   SAME DEST
         BE    HAVENDST           YES
         BXLE  R7,R8,DONET
HAVENDST DS    0H
         MVC   NETDEST,SMFNJDST
         CLI   SMFNJIND,C'J'      JB TYPE
         BE    NETJB              YES
*        ASSUME TYPE SO
         L     R1,NETSRCNT        LOAD COUNT
         A     R1,SMFNJRCT        ADD COUNT
         ST    R1,NETSRCNT        AND SAVE IT
         L     R1,NETSUCNT        LOAD USE COUNT
         LA    R1,1(R1)           UP BY 1
         ST    R1,NETSUCNT        AND SAVE IT
         B     READ               GO GET NEXT RECORD
NETJB    DS    0H
         L     R1,NETJRCNT        LOAD COUNT
         A     R1,SMFNJRCT        ADD COUNT
         ST    R1,NETJRCNT        AND SAVE IT
         L     R1,NETJUCNT        LOAD USE COUNT
         LA    R1,1(R1)           UP BY 1
         ST    R1,NETJUCNT        AND SAVE IT
         B     READ               GO GET NEXT RECORD
         DROP  R5,R7
         EJECT
ENDOFSMF DS    0H
         CLOSE SMFTAPE
         MVC   DWD(4),FTIME        TIME
         L     R1,DWD
         LA    R15,TFTIME
         BAL   R14,TIMEX
         MVC   DWD(4),TTIME        TIME
         L     R1,DWD
         LA    R15,TTTIME
         BAL   R14,TIMEX
         MVC   TFDATE(6),=X'20214B202020'
         MVC   TTDATE(6),=X'20214B202020'
         ED    TFDATE,FDATE+1
         ED    TTDATE,TDATE+1
         EJECT
*
**       PREPARE THE SYSOUT CLASS AND DESTINATION ACTIVITY REPORT
*
         SPACE 1
         USING SOC,R7
         L     R7,SOCADDR         -> TABLE
         LA    R8,SOCENT
         L     R9,SOCEADDR
         SR    R2,R2
         SR    R3,R3
S1       DS    0H
         CLI   SOC,X'00'          END OF TABLE
         BE    S1DO
         LA    R2,1(R2)           UP COUNTER
         LA    R3,SOCENT(R3)
         BXLE  R7,R8,S1
S1DO     DS    0H
         STH   R3,SOCLENS
         LTR   R2,R2              ANY INFO TO SORT ?
         BZ    NOSOC              NO - SO SKIP IT
         SETON DOHIST
         ST    R2,SQSIZE
         ST    R8,SQLEN
         MVC   SQNSTRT,=A(1)
         MVC   SQNWIDTH,=A(1)
*
**       CALL SORTQ FOR SYSOUT CLASS
*
         L     R7,SOCADDR
         CALL  SORTQ,((R7),SQSIZE,SQLEN,SQIERR,SQNSTRT,SQNWIDTH,       X
               SQTYPE,SQSEQ),VL
         L     R15,SQIERR
         LTR   R15,R15
         BNZ   SORTNQ
         EJECT
*
**       SORT DONE - NOW REPORT IT
*
         L     R7,SOCADDR
         LA    R8,SOCENT
         L     R9,SOCEADDR
         ZAP   LCNT,=P'99'
         LA    R3,SOCL1           -> SOC TITLE LINE
         ST    R3,STITLE          SAVE NEW SUB TITLE
         MVC   SOCS(1),SOC        INITIALIZE SYSOUT CLASS
         SR    R10,R10            INITIALIZE COUNTER
         XC    SOCTOT,SOCTOT      CLEAR TOTAL COUNTER
SOCP1    DS    0H
         CLC   SOC,SOCS           SAME CLASS
         BE    SOCT1
         CVD   R10,DWD            CONVERT TO DECIMAL
         A     R10,SOCTOT
         ST    R10,SOCTOT         SAVE IT
         MVC   OLINE+5(1),SOCS
         CLI   SOCS,X'C0'         STANDARD CLASS ?
         BH    SE11
         SR    R1,R1
         IC    R1,SOCS            LOAD INDEX VALUE
         SLL   R1,2               MULTIPLY BY 4
         LA    R2,CLASSTBL(R1)    -> INDEX INTO CLASS TABLE
         MVC   OLINE+5(4),0(R2)   AND MOVE CLASS VALUE
         SPACE 2
SE11     DS    0H
         MVC   OLINE+10(11),=X'2020206B2020206B202020'
         ED    OLINE+9(12),DWD+3
         B     SOCPUT1
SOCPUT1  DS    0H
         LA    R3,OLINE
         BAL   R10,OUTROU
         MVC   OLINE,BLINE        CLEAR OLINE
SOCCE1   DS    0H                 CHECK FOR
         CLI   SOC,X'00'          END OF TABLE
         BE    ENDSOC1            YES
         SR    R10,R10
SOCT1    DS    0H
         A     R10,SOCL
         MVC   SOCS,SOC
         BXLE  R7,R8,SOCP1
ENDSOC1  DS    0H
         L     R10,SOCTOT
         CVD   R10,DWD            CONVERT TO DECIMAL
         MVC   OLINE+3(5),=C'TOTAL'
         MVC   OLINE+10(11),=X'2020206B2020206B202020'
         ED    OLINE+9(12),DWD+3
         LA    R3,BLINE
         BAL   R10,OUTROU
         LA    R3,OLINE
         BAL   R10,OUTROU
         EJECT
*
**       CALL SORTQ FOR DESTINATION
*
         L     R7,SOCADDR
         LA    R8,SOCENT
         L     R9,SOCEADDR
         SR    R2,R2
S2       DS    0H
         CLI   SOC,X'00'          END OF TABLE
         BE    S2DO
         LA    R2,1(R2)           UP COUNTER
         BXLE  R7,R8,S2
S2DO     DS    0H
         LTR   R2,R2              ANY INFO TO SORT ?
         BZ    NOSOC              NO - SO SKIP IT
         ST    R2,SQSIZE          SAVE COUNT OF ENTRIES IN TABLE
         ST    R8,SQLEN           SAVE ENTRY SIZE
         MVC   SQNSTRT,=A(SOCDEST-SOC+1)  SET UP START COLUMN
         MVC   SQNWIDTH,=A(8)     SET UP WIDTH OF SORT FIELD
         L     R7,SOCADDR
         CALL  SORTQ,((R7),SQSIZE,SQLEN,SQIERR,SQNSTRT,SQNWIDTH,       X
               SQTYPE,SQSEQ),VL
         L     R15,SQIERR
         LTR   R15,R15
         BNZ   SORTNQ
         EJECT
*
**       SORT DONE - NOW REPORT IT
*
         MVC   OLINE,BLINE        CLEAR OUTPUT LINE
         MVC   DESTS,BLINE        AND DEST SAVE AREA
         L     R7,SOCADDR
         LA    R8,SOCENT
         L     R9,SOCEADDR
         ZAP   LCNT,=P'99'
         LA    R3,SOCL2           -> DEST TITLE LINE
         ST    R3,STITLE          SAVE NEW SUB TITLE
         MVC   DESTS,SOCDEST      INIT DEST
         SR    R10,R10            INITIALIZE COUNTER
SOCP2    DS    0H
         CLC   SOCDEST,DESTS      SAME DESTINATION
         BE    SOCT2
         CVD   R10,DWD            CONVERT TO DECIMAL
         SR    R10,R10            RE-INIT COUNTER
         IFON  COL1,SOCC2
         MVC   OLINE+5(8),DESTS
         MVC   OLINE+15(11),=X'2020206B2020206B202020'
         ED    OLINE+14(12),DWD+3
         SETON COL1
         B     SOCPUT2
SOCC2    DS    0H
         MVC   OLINE+35(8),DESTS
         MVC   OLINE+45(11),=X'2020206B2020206B202020'
         ED    OLINE+44(12),DWD+3
         SETOF COL1
SOCPUT2  DS    0H
         IFON  COL1,SOCCE2
         LA    R3,OLINE
         BAL   R10,OUTROU
SOCCE2   DS    0H                 CHECK FOR
         CLI   SOCDEST,X'00'      END OF TABLE
         BE    ENDSOC2            YES
         SR    R10,R10
SOCT2    DS    0H
         A     R10,SOCL
         MVC   DESTS,SOCDEST      REINIT DEST
         BXLE  R7,R8,SOCP2
ENDSOC2  DS    0H
         IFOFF COL1,ENDSOC
         LA    R3,OLINE
         BAL   R10,OUTROU
         B     ENDSOC
NOSOC    DS    0H                 NO SOC RECORDS TO REPORT ON
         LA    R3,SOCNOR          -> INFO LINE
         BAL   R10,OUTROU         AND TELL SOMEONE
ENDSOC   DS    0H
         MVC   OLINE,BLINE
         DROP  R7
         EJECT
*
**       PREPARE THE JOB (SMF 26) INFORMATION REPORT
*
         SPACE 1
         USING JCLASS,R7
         L     R7,JOBADDR         -> TABLE
         LA    R8,JOBENT          GET SIZE OF ENTRY
         L     R9,JOBEADDR        -> END OF TABLE -1
         SR    R2,R2
         SR    R3,R3
J1       DS    0H
         CLI   JCLASS,X'00'       END OF TABLE
         BE    J1DO
         LA    R2,1(R2)           UP COUNTER
         LA    R3,JOBENT(R3)
         BXLE  R7,R8,J1
J1DO     DS    0H
         STH   R3,JOBLENS
         LTR   R2,R2              ANY INFO TO SORT ?
         BZ    NOJOB              NO - SO SKIP IT
         SETON DOHIST
         ST    R2,SQSIZE          SAVE RECORD COUNT
         ST    R8,SQLEN           SAVE LENGTH OF ENTRY
         MVC   SQNSTRT,=A(1)
         MVC   SQNWIDTH,=A(8)     SORT BY JOB CLASS
*
**       CALL SORTQ FOR JOB CLASS ANAYLSIS
*
         L     R7,JOBADDR
         CALL  SORTQ,((R7),SQSIZE,SQLEN,SQIERR,SQNSTRT,SQNWIDTH,       X
               SQTYPE,SQSEQ),VL
         L     R15,SQIERR
         LTR   R15,R15
         BNZ   SORTNQ
         EJECT
*
**       SORT DONE - NOW REPORT IT
*
         L     R7,JOBADDR
         LA    R8,JOBENT
         L     R9,JOBEADDR
         ZAP   LCNT,=P'99'
         LA    R3,JOBL1           -> JOB TITLE LINE
         ST    R3,STITLE          SAVE NEW SUB TITLE
         LA    R3,JOBL2           -> JOB TITLE LINE 2
         ST    R3,STITLE2         SAVE NEW SUB TITLE 2
         MVC   SCLASS,JCLASS      INITIALIZE JOB CLASS
         SR    R10,R10            INITIALIZE COUNTER
         XC    JOBTOT,JOBTOT      CLEAR TOTAL COUNTER
         XC    JOBTOTR,JOBTOTR    CLEAR TOTAL COUNTER
         XC    JOBTOTC,JOBTOTC    CLEAR TOTAL COUNTER
         XC    JOBTOTX,JOBTOTX    CLEAR TOTAL COUNTER
         XC    JOBTOTO,JOBTOTO    CLEAR TOTAL COUNTER
         EJECT
DOJOB    DS    0H
         CLI   JCLASS,X'FF'       SPECIAL CLASS ?
         BE    SPECJOB            YES
         CLI   JCLASS,X'00'       END OF TABLE ??
         BE    ENDJOB             YES
         L     R1,JOBTOT          LOAD TOTAL COUNTER
         L     R2,JCNT            LOAD CLASS USE COUNTER
         AR    R1,R2              ADD THEM AND
         ST    R1,JOBTOT          SAVE TOTAL COUNTER
         MVC   OLINE+10(8),JCLASS SET JOB CLASS IN OLINE
         L     R1,JCNT            LOAD TOTAL USE COUNT
         CVD   R1,DWD             CONVERT TO DECIMAL
         MVC   OLINE+20(6),=X'20206B202020'
         ED    OLINE+19(7),DWD+5  EDIT IT
         SPACE 2
         L     R1,JOBTOTR         LOAD TOTAL RDR JOB COUNTER
         L     R2,JRID            LOAD CLASS RDR JOB COUNTER
         AR    R1,R2              ADD THEM AND THEN
         ST    R1,JOBTOTR         SAVE THEM
         SPACE 2
         L     R1,JOBTOTC         LOAD TOTAL C/I JOB COUNTER
         L     R2,JCID            LOAD CLASS C/I JOB COUNTER
         AR    R1,R2              ADD THEM AND THEN
         ST    R1,JOBTOTC         SAVE THEM
         SPACE 2
         L     R1,JOBTOTX         LOAD TOTAL EXEC JOB COUNTER
         L     R2,JXID            LOAD CLASS EXEC JOB COUNTER
         AR    R1,R2              ADD THEM AND THEN
         ST    R1,JOBTOTX         SAVE THEM
         SPACE 2
         L     R1,JOBTOTO         LOAD TOTAL OUTPUT JOB COUNTER
         L     R2,JOID            LOAD CLASS OUTPUT JOB COUNTER
         AR    R1,R2              ADD THEM AND THEN
         ST    R1,JOBTOTO         SAVE THEM
         SPACE 2
         LA    R3,OLINE
         BAL   R10,OUTROU         GO PRINT IT
         BXLE  R7,R8,DOJOB
SPECJOB  DS    0H
         MVC   OLINE,BLINE
         IFON  SC,SPECJOBA
         LA    R3,OLINE
         BAL   R10,OUTROU
         SETON SC
SPECJOBA DS    0H
         MVC   OLINE+10(7),JCLASS+1  MOVE CLASS TYPE
         L     R1,JCNT            LOAD TOTAL USE COUNT
         CVD   R1,DWD             CONVERT TO DECIMAL
         MVC   OLINE+20(6),=X'20206B202020'
         ED    OLINE+19(7),DWD+5  EDIT IT
         LA    R3,OLINE
         BAL   R10,OUTROU         GO PRINT IT
         BXLE  R7,R8,DOJOB
         SETOF SC
         EJECT
ENDJOB   DS    0H
         MVC   OLINE,BLINE        CLEAR OUTPUT LINE
         LA    R3,OLINE
         BAL   R10,OUTROU         PRINT A BLANK LINE
         MVC   OLINE+30(30),=CL30'TOTAL JOBS PROCESSED'
         L     R1,JOBTOT
         CVD   R1,DWD
         MVC   OLINE+20(6),=X'20206B202020'
         ED    OLINE+19(7),DWD+5  EDIT IT
         LA    R3,OLINE
         BAL   R10,OUTROU
         SPACE 2
         MVC   OLINE,BLINE        CLEAR OUTPUT LINE
         MVC   OLINE+30(30),=CL30'TOTAL READER JOBS PROCESSED'
         L     R1,JOBTOTR
         CVD   R1,DWD
         MVC   OLINE+20(6),=X'20206B202020'
         ED    OLINE+19(7),DWD+5  EDIT IT
         LA    R3,OLINE
         BAL   R10,OUTROU
         SPACE 2
         MVC   OLINE,BLINE        CLEAR OUTPUT LINE
         MVC   OLINE+30(30),=CL30'TOTAL C/I JOBS PROCESSED'
         L     R1,JOBTOTC
         CVD   R1,DWD
         MVC   OLINE+20(6),=X'20206B202020'
         ED    OLINE+19(7),DWD+5  EDIT IT
         LA    R3,OLINE
         BAL   R10,OUTROU
         SPACE 2
         MVC   OLINE,BLINE        CLEAR OUTPUT LINE
         MVC   OLINE+30(30),=CL30'TOTAL EXEC JOBS PROCESSED'
         L     R1,JOBTOTX
         CVD   R1,DWD
         MVC   OLINE+20(6),=X'20206B202020'
         ED    OLINE+19(7),DWD+5  EDIT IT
         LA    R3,OLINE
         BAL   R10,OUTROU
         SPACE 2
         MVC   OLINE,BLINE        CLEAR OUTPUT LINE
         MVC   OLINE+30(30),=CL30'TOTAL OUTPUT JOBS PROCESSED'
         L     R1,JOBTOTO
         CVD   R1,DWD
         MVC   OLINE+20(6),=X'20206B202020'
         ED    OLINE+19(7),DWD+5  EDIT IT
         LA    R3,OLINE
         BAL   R10,OUTROU
         LA    R3,BLINE           PRINT A BLANK LINE
         BAL   R10,OUTROU
         LA    R3,JOBE1           AND NOW THE NOCLASS EXPLAINATION
         BAL   R10,OUTROU
         B     ENDJOB2
NOJOB    DS    0H
         LA    R3,JOBNOR
         BAL   R10,OUTROU
ENDJOB2  DS    0H
         EJECT
*
**       PREPARE THE NETWORK ACTIVITY TABLE TO REPORT ON
*
         SPACE 1
         USING NETTBL,R7
         L     R7,NETADDR         -> TABLE
         LA    R8,NETENT
         L     R9,NETEADDR
         SR    R2,R2
         SR    R3,R3
N1       DS    0H
         CLI   NETDEST,X'00'      END OF TABLE
         BE    N1DO
         LA    R2,1(R2)           UP COUNTER
         LA    R3,NETENT(R3)
         BXLE  R7,R8,N1
N1DO     DS    0H
         STH   R3,NETLENS
         LTR   R2,R2              ANY INFO TO SORT ?
         BZ    NONET              NO - SO SKIP IT
         SETON DOHIST
         ST    R2,SQSIZE
         ST    R8,SQLEN
         MVC   SQNSTRT,=A(1)
         MVC   SQNWIDTH,=A(8)
*
**       CALL SORTQ FOR NETWORK ACTIVIY REPORT
*
         L     R7,NETADDR
         CALL  SORTQ,((R7),SQSIZE,SQLEN,SQIERR,SQNSTRT,SQNWIDTH,       X
               SQTYPE,SQSEQ),VL
         L     R15,SQIERR
         LTR   R15,R15
         BNZ   SORTNQ
         EJECT
*
**       SORT DONE - NOW REPORT IT
*
         L     R7,NETADDR
         LA    R8,NETENT
         L     R9,NETEADDR
         ZAP   LCNT,=P'99'
         MVC   OLINE,BLINE
         LA    R3,NETL1           -> NET TITLE LINE
         ST    R3,STITLE          SAVE NEW NET TITLE
         LA    R3,NETL2           -> NET TITLE LINE
         ST    R3,STITLE2         SAVE NEW NET TITLE 2
         XC    NETJTOT,NETJTOT    CLEAR TOTAL COUNTER
         XC    NETSTOT,NETSTOT    CLEAR TOTAL COUNTER
         XC    NETJTOTU,NETJTOTU  CLEAR TOTAL COUNTER
         XC    NETSTOTU,NETSTOTU  CLEAR TOTAL COUNTER
DONJE    DS    0H
         CLI   NETDEST,X'00'      END OF TABLE ?
         BE    ENDNET
         MVC   OLINE+7(8),NETDEST
         L     R1,NETSRCNT        LOAD SYSOUT RECORD COUNT
         CVD   R1,DWD
         L     R2,NETSTOT         GET RECORD TOTAL
         AR    R2,R1              ADD
         ST    R2,NETSTOT         AND SAVE IT
         MVC   OLINE+20(11),=X'2020206B2020206B202020'
         ED    OLINE+19(12),DWD+3
         L     R1,NETJRCNT        LOAD JOB RECORD COUNT
         CVD   R1,DWD
         L     R2,NETJTOT         GET RECORD TOTAL
         AR    R2,R1              ADD
         ST    R2,NETJTOT         AND SAVE IT
         MVC   OLINE+50(11),=X'2020206B2020206B202020'
         ED    OLINE+49(12),DWD+3
         L     R1,NETSUCNT        LOAD USE COUNT
         CVD   R1,DWD
         L     R2,NETSTOTU
         AR    R2,R1
         ST    R2,NETSTOTU
         MVC   OLINE+35(6),=X'20206B202020'
         ED    OLINE+34(7),DWD+5  EDIT IT
         L     R1,NETJUCNT        LOAD USE COUNT
         CVD   R1,DWD
         L     R2,NETJTOTU
         AR    R2,R1
         ST    R2,NETJTOTU
         MVC   OLINE+65(6),=X'20206B202020'
         ED    OLINE+64(7),DWD+5  EDIT IT
         LA    R3,OLINE
         BAL   R10,OUTROU
         BXLE  R7,R8,DONJE
         B     ENDNET
NONET    DS    0H
         MVC   OLINE,BLINE
         LA    R3,NETNOR
         BAL   R10,OUTROU
         B     ENDNET2
         EJECT
ENDNET   DS    0H
         MVC   OLINE,BLINE
         LA    R3,OLINE
         BAL   R10,OUTROU
         SPACE 1
         MVC   OLINE+20(30),=CL30'TOTAL JB NJE JOBS'
         L     R2,NETJTOTU
         CVD   R2,DWD
         MVC   OLINE+13(6),=X'20206B202020'
         ED    OLINE+12(7),DWD+5  EDIT IT
         LA    R3,OLINE
         BAL   R10,OUTROU
         SPACE 2
         MVC   OLINE+20(30),=CL30'TOTAL SO NJE JOBS'
         L     R2,NETSTOTU
         CVD   R2,DWD
         MVC   OLINE+13(6),=X'20206B202020'
         ED    OLINE+12(7),DWD+5  EDIT IT
         LA    R3,OLINE
         BAL   R10,OUTROU
         SPACE 2
         MVC   OLINE+20(30),=CL30'TOTAL JB NJE RECORDS'
         L     R2,NETJTOT
         CVD   R2,DWD
         MVC   OLINE+8(11),=X'2020206B2020206B202020'
         ED    OLINE+7(12),DWD+3
         LA    R3,OLINE
         BAL   R10,OUTROU
         SPACE 2
         MVC   OLINE+20(30),=CL30'TOTAL SO NJE RECORDS'
         L     R2,NETSTOT
         CVD   R2,DWD
         MVC   OLINE+8(11),=X'2020206B2020206B202020'
         ED    OLINE+7(12),DWD+3
         LA    R3,OLINE
         BAL   R10,OUTROU
ENDNET2  DS    0H
         EJECT
EXIT     DS    0H
         CLOSE SYSPRINT
         EJECT
*
**
***      GENERATE THE HISTORY RECORDS
**
*
         IFOFF DOHIST,NOHIST
         OPEN  (HISTORY,OUTPUT)
         TESTOPEN HISTORY,NOHIST
         SR    R4,R4
         AH    R4,SOCLENS         ADD ACTUAL SOC TABLE SIZE
         AH    R4,JOBLENS         ADD ACTUAL JOB TABLE SIZE
         AH    R4,NETLENS         ADD ACTUAL NET TABLE SIZE
         AH    R4,=AL2(HISTHDRL)  ADD SIZE OF HEADER
         GETMAIN R,LV=(R4)        AND GETMAIN HIST RECORD
         LR    R5,R1              SAVE ENTRY ADDR
         USING HISTREC,R5
         STH   R4,HRDW            SET RDW UP
         MVC   HNODE,NODE         SET UP NODE
         MVC   HFDATE,FDATE       FROM DATE
         MVC   HTDATE,TDATE            TO DATE
         MVC   HFTIME,FTIME       FROM TIME
         MVC   HTTIME,TTIME            TO TIME
         SPACE 2
*        MOVE  THE SOC TABLE TO THE HIST RECORD
         LH    R7,SOCLENS         LOAD SOC TABLE SIZE
         STH   R7,HLSOC           SAVE LEN
         LA    R8,HSOCT           -> O/P LOC FOR SOC
         LR    R9,R7              SET O/P LEN
         L     R6,SOCADDR         -> SOC TABLE
         MVCL  R8,R6
         SPACE 2
*        MOVE  THE JOB TABLE TO THE HIST RECORD
         LH    R7,JOBLENS         LOAD JOB TABLE SIZE
         STH   R7,HLJOB           SAVE LEN
         LA    R8,HJOBT           -> O/P LOC FOR JOB TABLE
         LH    R1,SOCLENS
         AR    R8,R1              -> START OF JOB TABLE
         LR    R9,R7              SET O/P LEN
         L     R6,JOBADDR         -> JOB TABLE
         MVCL  R8,R6
         SPACE 2
*        MOVE  THE NET TABLE TO THE HIST RECORD
         LH    R7,NETLENS         LOAD NET TABLE SIZE
         STH   R7,HLNET           SAVE LEN
         LA    R8,HNETT           -> O/P LOC FOR NET TABLE
         LH    R1,SOCLENS
         AR    R8,R1              -> START OF JOB TABLE
         LH    R1,JOBLENS
         AR    R8,R1              -> START OF NET TABLE
         LR    R9,R7              SET O/P LEN
         L     R6,NETADDR         -> NET TABLE
         MVCL  R8,R6
         SPACE 2
         PUT   HISTORY,0(R5)
         SPACE 2
*        FREE  THE HISTORY RECORD
         FREEMAIN R,LV=(R4),A=(R5)
NOHIST   DS    0H
         EJECT
*        FREE  THE SYSOUT ANALYSIS DATA TABLE
         L     R2,SOCADDR
         L     R3,SOCSIZE
         FREEMAIN R,LV=(R3),A=(R2)
         SPACE 2
*        FREE  THE JOB ANALYSIS DATA TABLE
         L     R2,JOBADDR
         L     R3,JOBSIZE
         FREEMAIN R,LV=(R3),A=(R2)
         SPACE 2
*        FREE  THE NET ANALYSIS DATA TABLE
         L     R2,NETADDR
         L     R3,NETSIZE
         FREEMAIN R,LV=(R3),A=(R2)
         SPACE 2
         $EPILOG 0
         SPACE 2
SORTNQ   ABEND 2
         EJECT
OUTROU   DS    0H
         CP    LCNT,=P'56'
         BH    NEWPAGE
         AP    LCNT,=P'01'
         PUT   SYSPRINT,0(R3)
         BR    R10
NEWPAGE  DS    0H
         PUT   SYSPRINT,TITLE
         L     R2,STITLE
         PUT   SYSPRINT,0(R2)
         PUT   SYSPRINT,BLINE
         L     R2,STITLE2
         PUT   SYSPRINT,0(R2)
         PUT   SYSPRINT,0(R3)
         ZAP   LCNT,=P'05'
         BR    R10
         EJECT
*        OPEN  EXIT FOR SYSPRINT DCB
*              IF NO BLKSIZE SPECIFIED THEN SET TO LRECL
         SPACE
EXLSYSP  DS    0H
         USING IHADCB,R1
         CLC   DCBBLKSI(2),DCBLRECL BLKSIZE OK ?
         BER   R14                YES - RETURN
         CLC   DCBBLKSI(2),=H'0' BLKSIZE SPECIFIED
         BNER  R14                YES
         MVC   DCBBLKSI(2),DCBLRECL        FIX IT
         DROP  R1
         BR    R14                AND RETURN
         EJECT
************************************************************
*                                                          *
*         SUBROUTINE TO CONVERT TIME TO HH.MM.SS           *
*                                                          *
************************************************************
         SPACE
*         INPUT: TIME IN R1, OUTPUT ADDRESS IN R15
         SPACE
TIMEX    SLR   R0,R0
         D     R0,=F'360000'
         CVD   R1,DWD
         OI    DWD+7,X'0F'
         UNPK  0(2,R15),DWD+6(2)
         LR    R1,R0
         SLR   R0,R0
         D     R0,=F'6000'
         CVD   R1,DWD
         OI    DWD+7,X'0F'
         UNPK  3(2,R15),DWD+6(2)
         LR    R1,R0
         SLR   R0,R0
         D     R0,=F'100'
         CVD   R1,DWD
         OI    DWD+7,X'0F'
         UNPK  6(2,R15),DWD+6(2)
         MVI   2(R15),C'.'
         MVI   5(R15),C'.'
         BR    R14
         EJECT
SMFTAPE  DCB   DSORG=PS,MACRF=GL,DDNAME=SMFTAPE,BFTEK=A,               X
               EODAD=ENDOFSMF
         EJECT
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,RECFM=FBA,            X
               LRECL=121,EXLST=EXLSYSP
         EJECT
HISTORY  DCB   DSORG=PS,MACRF=PM,DDNAME=HISTORY,RECFM=VB,              X
               LRECL=8192,BLKSIZE=8196
         EJECT
         LTORG
         EJECT
*
**       PARM DATA USED FOR SORTQ CALLS
*
SQSIZE   DC    A(0)               NUMBER OF ELEMENTS
SQLEN    DC    A(0)               LEN OF ELEMENT
SQIERR   DC    A(0)               RETURN CODE
SQNSTRT  DC    A(0)               START COLUMN
SQNWIDTH DC    A(0)               WIDTH OF ELEMENT
SQTYPE   DC    C'CH'              CHARACTER
SQSEQ    DC    C'A'               ASCENDING
         EJECT
*
**       CONSTANTS AND WORK AREAS
*
DWD      DS    D
FWD      EQU   DWD,4
LCNT     DC    PL2'99'
STITLE   DC    A(BLINE)           SUB TITLE ADCON
STITLE2  DC    A(BLINE)           SUB TITLE ADCON
DESTS    DC    CL8' '
SOCS     EQU   DESTS,1
SCLASS   DC    CL8' '             SAVE CLASS
SOCTOT   DC    F'0'               TOTAL PRINT LINES
FDATE    DC    PL4'99999'         FROM DATE
TDATE    DC    PL4'0'             TO DATE
FTIME    DC    X'FFFFFFFF'        FROM TIME
TTIME    DC    F'0'               TO TIME
JOBTOT   DC    F'0'               TOTAL JOBS
JOBTOTR  DC    F'0'               TOTAL READER JOBS
JOBTOTC  DC    F'0'               TOTAL C/I JOBS
JOBTOTX  DC    F'0'               TOTAL EXECUTION JOBS
JOBTOTO  DC    F'0'               TOTAL OUTPUT JOBS
NETSTOT  DC    F'0'               NJE SYSOUT RECORD COUNT
NETJTOT  DC    F'0'               NJE JOB RECORD COUNT
NETSTOTU DC    F'0'               NJE SYSOUT RECORD USE COUNT
NETJTOTU DC    F'0'               NJE JOB RECORD USE COUNT
SOCLENS  DC    H'0'
JOBLENS  DC    H'0'
NETLENS  DC    H'0'
OLINE    DC    CL121' '
BLINE    DC    CL121' '
         EJECT
         BITSW COL1,SC,DOHIST
         EJECT
*
**       CLASS CODE TABLE FOR SPECIAL ROCKWELL CLASSES
*
RCLSTBL  DS    0H
         DC    AL2(160),X'01',C' '     AQRT
         DC    AL2(190),X'02',C' '     CRT
         DC    AL2(520),X'03',C'D'     DISK-TO-PRINT
         DC    AL2(521),X'03',C'D'     DISK-TO-PRINT
         DC    AL2(522),X'03',C'D'     DISK-TO-PRINT
         DC    AL2(620),X'03',C'D'     DISK-TO-PRINT
         DC    AL2(621),X'03',C'D'     DISK-TO-PRINT
         DC    AL2(622),X'03',C'D'     DISK-TO-PRINT
         DC    AL2(211),X'05',C' '     MYLAR TAPE PUNCH
         DC    AL2(201),X'06',C' '     MYLAR TAPE READ
         DC    AL2(210),X'07',C' '     PAPER TAPE PUNCH
         DC    AL2(200),X'08',C' '     PAPER TAPE READ
         DC    AL2(150),X'09',C' '     REMOTE TAPE TO TAPE
         DC    AL2(110),X'0A',C' '     TAPE DUMP DSP
         DC    AL2(120),X'0B',C' '     CARD TO TAPE DSP
         DC    AL2(140),X'0C',C' '     TAPE TO CARD DSP
         DC    AL2(170),X'0D',C' '     CARD TO PRINT DSP
         DC    AL2(180),X'0E',C' '     TAPE TO TAPE DSP
         DC    AL2(180),X'0F',C' '     TAPE TO PRINT DSP
         DC    AL2(900),X'10',C' '     DISPLAY DSP
         DC    AL2(420),X'11',C'V'     VPS PRINT OUTPUT
         DC    AL2(130),X'12',C' '     SPOOL DSP
         DC    AL2(400),X'13',C' '     NETWORK JOB
         DC    AL2(20),X'14',C'S'      STANDARD PRINT
         DC    AL2(21),X'14',C'S'      STANDARD PRINT
         DC    AL2(22),X'14',C'S'      STANDARD PRINT
         DC    AL2(60),X'14',C'S'      STANDARD PRINT
         DC    AL2(61),X'14',C'S'      STANDARD PRINT
         DC    AL2(62),X'14',C'S'      STANDARD PRINT
         DC    4X'FF'                  END OF TABLE
         EJECT
*
**       REVERSE ABOVE TABLE
*
CLASSTBL DS    0H        X'CODE'
         DC    CL4'N/A'    00     NOT USED
         DC    CL4'AQRT'   01     AQRT
         DC    CL4'CRT'    02     CRT
         DC    CL4'DTP'    03     DISK-TO-PRINT
         DC    CL4'OTHR'   04     OTHER CLASS
         DC    CL4'MTP'    05     MYLAR TAPE PUNCH
         DC    CL4'MTR'    06     MYLAR TAPE READ
         DC    CL4'PTP'    07     PAPER TAPE PUNCH
         DC    CL4'PTR'    08     PAPER TAPE READ
         DC    CL4'RMTT'   09     REMOTE TAPE TO TAPE
         DC    CL4'TD'     0A     TAPE DUMP
         DC    CL4'CT'     0B     CARD TO TAPE DSP
         DC    CL4'TC'     0C     TAPE TO CARD
         DC    CL4'CP'     0D     CARD TO PRINT
         DC    CL4'TT'     0E     TAPE TO TAPE
         DC    CL4'TP'     0F     TAPE TO PRINT
         DC    CL4'DISP'   10     DISPLAY DSP
         DC    CL4'VPS'    11     VPS PRINT OUTPUT
         DC    CL4'SPOL'   12     SPOOL DSP
         DC    CL4'NET'    13     NETWORK JOB
         DC    CL4'PRT'    14     STANDARD PRINT ?
         DC    CL4'DTP*'   15     DISK-TO-PRINT WITH .* RECORDS
         EJECT
*
**       REPORT TITLES
*
TITLE    DC    CL121'1'
         ORG   TITLE+10
         DC    C'JES3 SYSTEM ACTIVITY REPORT'
         DC    C' FOR CENTER '
NODE     DC    CL8' '
         DC    C' FROM '
TFDATE   DC    CL6' ',C'/'
TFTIME   DC    CL8' '
         DC    C'  TO '
TTDATE   DC    CL6' ',C'/'
TTTIME   DC    CL8' '
         ORG   ,
         SPACE 1
NETNOR   DC    CL121' '
         ORG   NETNOR+10
         DC    C'NO SMF TYPE 57 RECORDS FOUND SO NO NJE'
         DC    C' ACTIVITY REPORT WILL BE GENERATED '
         ORG   ,
         SPACE 1
JOBNOR   DC    CL121' '
         ORG   JOBNOR+10
         DC    C'NO SMF TYPE 26 RECORDS FOUND SO NO JOB CLASS'
         DC    C' ACTIVITY REPORT WILL BE GENERATED '
         ORG   ,
         SPACE 1
SOCNOR   DC    CL121' '
         ORG   SOCNOR+10
         DC    C'NO SMF TYPE 6 RECORDS FOUND SO NO SYSOUT CLASS OR'
         DC    C' DESTINATION ACTIVITY REPORT WILL BE GENERATED '
         ORG   ,
         SPACE 1
NETL1    DC    CL121' '
         ORG   NETL1+10
         DC    C'NJE ACTIVITY REPORT BY DESTINATION NODE'
         ORG   ,
         SPACE 1
NETL2    DC    CL121' '
         ORG   NETL2+7
         DC    C'NODE'
         ORG   NETL2+17
         DC    C'SYSOUT RECORDS'
         ORG   NETL2+36
         DC    C'USAGE'
         ORG   NETL2+50
         DC    C'JOB RECORDS'
         ORG   NETL2+66
         DC    C'USAGE'
         ORG   ,
         SPACE 1
JOBE1    DC    CL121' '
         ORG   JOBE1+10
         DC    C'JOBS WITH NOCLASS ARE EITHER OUTPUT ONLY OR'
         DC    C' NJE STORE AND FORWARD'
         ORG   ,
         SPACE 1
JOBL1    DC    CL121' '
         ORG   JOBL1+10
         DC    C'JOB ACTIVITY REPORT BY CLASS'
         ORG   ,
         SPACE 1
JOBL2    DC    CL121' '
         ORG   JOBL2+10
         DC    C'CLASS'
         ORG   JOBL2+20
         DC    C' COUNT'
         ORG   ,
         SPACE 1
SOCL1    DC    CL121' '
         ORG   SOCL1+10
         DC    C'SYSOUT CLASS ACTIVITY REPORT BY CLASS'
         ORG   ,
         SPACE 1
SOCL2    DC    CL121' '
         ORG   SOCL2+10
         DC    C'SYSOUT ACTIVITY REPORT BY LOCATION'
         ORG   ,
         SPACE 1
         EJECT
*
**       EQUATES FOR ENTRY COUNTS IN TABLES
*
SOCENTC  EQU   600                COUNT OF SYSOUT/DEST ENTRIES
JOBENTC  EQU   1200               COUNT OF JOB CLASS ENTRIES
NETENTC  EQU   200                COUNT OF NET TABLE ENTRIES
         SPACE 2
SOCADDR  DS    A                  ADDRESS OF SOC TABLE
SOCEADDR DS    A                  END OF TABLE
SOCSIZE  DC    A(SOCENT*SOCENTC)  SIZE OF TABLE
         SPACE 2
JOBADDR  DS    A                  ADDRESS OF JOB TABLE
JOBEADDR DS    A                  END OF TABLE
JOBSIZE  DC    A(JOBENT*JOBENTC)  SIZE OF TABLE
         SPACE 2
NETADDR  DS    A                  ADDRESS OF NET TABLE
NETEADDR DS    A                  END OF TABLE
NETSIZE  DC    A(NETENT*NETENTC)  SIZE OF TABLE
         EJECT
T6       DSECT
         IFASMFR 6
         EJECT
T26      DSECT
         IFASMFR 26
         EJECT
T57      DSECT
         IATYNSM
         EJECT
         DCBD  DSORG=PS
         EJECT
SOCTBL   DSECT
SOC      DS    C                  SYSOUT CLASS
         DS    CL3                RESERVED FOR FUTURE USE
SOCL     DS    CL4                LINE COUNT
SOCDEST  DS    CL8                OUTPUT DEST
SOCENT   EQU   *-SOC              SIZE OF ENTRY
         EJECT
JOBTBL   DSECT
JCLASS   DS    CL8                JOB CLASS
JCNT     DS    CL4                USAGE COUNT
JRID     DS    CL4                COUNTER INPUT PROC
JCID     DS    CL4                COUNTER CONV PROC
JXID     DS    CL4                COUNTER EXEC PROC
JOID     DS    CL4                COUNTER OUTPUT PROC
JOBENT   EQU   *-JCLASS           SIZE OF ENTRY
         EJECT
NETTBL   DSECT
NETDEST  DS    CL8                DESTINATION NODE
NETJRCNT DS    CL4                JB RECORD COUNT
NETSRCNT DS    CL4                SO RECORD COUNT
NETJUCNT DS    CL4                JB USE COUNT
NETSUCNT DS    CL4                SO USE COUNT
NETENT   EQU   *-NETDEST          SIZE OF ENTRY
         SPACE 2
HISTREC  DSECT
HRDW     DS    H
         DS    H
HNODE    DS    CL8                NODE NAME
HFDATE   DS    CL4                FROM DATE
HFTIME   DS    CL4                FROM TIME
HTDATE   DS    CL4                TO DATE
HTTIME   DS    CL4                TO TIME
HLSOC    DS    CL2                LEN OF SOC TABLE
HLJOB    DS    CL2                LEN OF JOB TABLE
HLNET    DS    CL2                LEN OF NET TABLE
HISTHDRL EQU   *-HRDW             LEN OF HEADER
HSOCT    DS    0H                 SOC TABLE
HJOBT    DS    0H                 JOB TABLE
HNETT    DS    0H                 NET TABLE
         SPACE 2
         END
         COPY  SORTQ
         COPY  SORTAQ
         END
