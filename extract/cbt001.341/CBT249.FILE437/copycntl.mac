         TITLE 'COPY CONTROL UTILITY'
*---------------------------------------------------------------------*
*  MODULE: COPYCNTL                                                   *
*                                                                     *
*  DESCRIPTIVE NAME: CONTROL ACCESS TO SOURCE OR MACRO ELEMENTS       *
*                                                                     *
*  FUNCTION: THIS PROGRAM WILL CONTROL ACCESS TO ANY SOURCE OR        *
*            MACRO LIBRARY AND WILL PERFORM THE FOLLOWING FUNCTIONS:  *
*                                                                     *
*            COPY     -  COPY A SOURCE ELEMENT AND LOG AN ENTRY IN    *
*                        A CONTROL FILE.  AND INFORM THE COPIER IF    *
*                        ANYONE ELSE CURRENTLY HAS A COPY OF THE      *
*                        ELEMENT AND DISPLAY THE HISTORY OF THE       *
*                        ELEMENT.                                     *
*                                                                     *
*            FINISHED -  LOG THE USE OF AN ELEMENT COMPLETE IN THE    *
*                        CONTROL LOG.                                 *
*                                                                     *
*            CANCEL   -  LOG THE USE OF AN ELEMENT CANCELLED IN THE   *
*                        CONTROL LOG.                                 *
*                                                                     *
*  DD'S REQUIRED:                                                     *
*                                                                     *
*            CNTL     -  A CONTROL LOG PDS WHERE THE MEMBER NAME      *
*                        IS THE NAME OF THE ELEMENT COPIED.           *
*                                                                     *
*            WORK     -  A SEQUENTIAL WORK FILE.                      *
*                                                                     *
*            ELEMIN   -  THE INPUT LIBRARY ( A PDS)                   *
*                                                                     *
*            ELEMOUT  -  THE OUTPUT LIBRARY ( A PDS)                  *
*                                                                     *
*  PARMS:                                                             *
*            MEMBER=  -  ELEMENT NAME TO BE PROCESSED                 *
*            M=                                                       *
*                                                                     *
*            MODID=   -  SMP USERMOD ID                               *
*            ID=                                                      *
*                                                                     *
*            CODE=    -  PROCESSING CODE                              *
*            C=                                                       *
*                                                                     *
*  CODES:                                                             *
*            C        -  COPY ELEMENT                                 *
*                                                                     *
*            F        -  FLAG ELEMENT AS FINISHED                     *
*                                                                     *
*            X        -  FLAG ELEMENT AS CANCELLED                    *
*                                                                     *
*                                                                     *
*                                                                     *
*  NOTES:                                                             *
*                                                                     *
*            ACCESS IS MADE TO THE ACT TO ACQUIRE THE PROGRAMMER      *
*            NAME WHICH IS ASSUME TO BE THE FIRST 10 BYTES OF THE     *
*            ACCOUNTING INFORMATION.                                  *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*---------------------------------------------------------------------*
         EJECT
COPYCNTL $PROLOG
         L     1,0(1)              * LOAD ADDR OF PARM
         LH    2,0(1)              * LOAD LENGTH OF PARM
         LTR   2,2                 * LENGTH OF ZERO
         BZ    NOPARM              * NO - BYPASS MOVE
         LA    R4,2(R1)            * -> PARM DATA
         LR    R5,R4
         AR    R5,R2               * -> END OF PARM DATA
PLOOP    EQU   *
*---------------------------------------------------------------------*
         CLC   =C'MEMBER=',0(R4)
         BE    MEM
         CLC   =C'M=',0(R4)
         BE    MEMS
*---------------------------------------------------------------------*
         CLC   =C'MODID=',0(R4)
         BE    MODID
         CLC   =C'ID=',0(R4)
         BE    MODIDS
*---------------------------------------------------------------------*
         CLC   =C'CODE=',0(R4)
         BE    DOCODE
         CLC   =C'C=',0(R4)
         BE    CODES
*---------------------------------------------------------------------*
         B     INCR
         EJECT
DOCODE   LA    R4,5(R4)            -> CODE=
         B     MVCODE
CODES    LA    R4,2(R4)            -> C=
MVCODE   MVC   CODE,0(R4)
         B     INCR
         EJECT
MEMS     LA    R4,2(R4)            -> M=NAME
         B     DOMEM
MEM      LA    R4,7(R4)            -> MEMBER=NAME
DOMEM    LA    R7,MEMBER
MLOOP    EQU   *
         CLI   0(R4),C','
         BE    INCR
         CLI   0(R4),C' '
         BL    INCR
         MVC   0(1,R7),0(R4)
         LA    R7,1(R7)
         LA    R4,1(R4)
         CR    R4,R5
         BH    ENDSCAN
         B     MLOOP
         EJECT
MODIDS   LA    R4,3(R4)            -> MOD ID
         B     DOMID
MODID    LA    R4,6(R4)            -> MOD ID
DOMID    LA    R7,MOD#
M#LP     EQU   *
         CLI   0(R4),C','
         BE    INCR
         CLI   0(R4),C' '
         BL    INCR
         MVC   0(1,R7),0(R4)
         LA    R7,1(R7)
         LA    R4,1(R4)
         CR    R4,R5
         BH    ENDSCAN
         B     M#LP
         EJECT
INCR     EQU   *
         LA    R4,1(R4)
         CR    R4,R5
         BNL   ENDSCAN
         B     PLOOP
ENDSCAN  EQU   *
         B     DOIT
NOPARM   EQU   *
         ABEND 1                   NO PARM
DOIT     EQU   *
         MVC   INUSE(8),MEMBER
         MVC   NOUSE(8),MEMBER
         MVC   NOTNEW(8),MEMBER
         MVC   BPARM(8),MEMBER
         CLI   CODE,C'F'
         BE    FINCODE
         CLI   CODE,C'X'
         BE    CANCODE
         CLI   CODE,C'N'           NEW ELEMENT
         BE    NEWCODE
         CLI   CODE,C'C'
         BE    RJFCB               OK
         ABEND 2                   INVALID CODE
CANCODE  SETON FIN
         MVC   STATUS,CANSTAT
         B     FINDCB
NEWCODE  SETON NEWENT,NEWF
         MVC   STATUS,ACTSTAT
         B     FINDCB
FINCODE  SETON FIN
         MVC   STATUS,FINSTAT
         B     FINDCB
RJFCB    EQU   *
         RDJFCB  IN
         LA    R2,INJFCB
         USING INFMJFCB,R2
         MVC   JFCBELNM,MEMBER
         OI    JFCBTSDM,X'08'      DO NOT WRITE BACK
         OI    JFCBIND1,JFCPDS     FLAG AS PDS MEMBER
         RDJFCB  OUT
         LA    R2,OUTJFCB
         MVC   JFCBELNM,MEMBER
*        ALLOW WRITE BACK OF JFCB
         OI    JFCBIND1,JFCPDS     FLAG AS PDS MEMBER
         MVC   JFCBSQTY,=AL3(30)   SET SECONDARY
         B     FINDCB
DOCOPY   EQU   *
         OPEN  (IN,,OUT,OUTPUT),TYPE=J
READ     GET   IN
         LR    R2,R1
         PUT   OUT,(R2)
         B     READ
EOF      EQU   *
         CLOSE (IN,,OUT)
         MVC   COPYMSG(8),MEMBER
         TPT   COPYMSG
         SETON COPIED
         B     DONEW
FINDCB   $FINDCB OSACT=R2
         MVC   PGMRNAME,X'21'(R2)  MOVE PROGRAMMER NAME
*                                       FROM ACF2 AUCB
         $STCK NOGEN
         IFON  FIN,DOGO
         OPEN  CNTL
         BLDL  CNTL,BLIST
         LR    R3,R15              SAVE RETURN CODE
         CLOSE CNTL
         LTR   R3,R3
         BZ    GOTONE
         TPT   NOUSE
         SETON NEWENT
         B     DOGO
GOTONE   IFOFF NEWENT,DOGO
         TPT   NOTNEW
         B     LEAVE
DOGO     RDJFCB  CNTLA
         LA    R2,CJFCB
         USING INFMJFCB,R2
         MVC   JFCBELNM,MEMBER
         OI    JFCBTSDM,X'08'      DO NOT WRITE BACK
         OI    JFCBIND1,JFCPDS     FLAG AS PDS MEMBER
         IFON  NEWENT,DONEW
         OPEN  CNTLA,TYPE=J
         OPEN  (WORK,OUTPUT)
         IFON  FIN,RA
         TPT   INUSE
         TPT   TITLE
RA       GET   CNTLA
         LR    R3,R1
         IFON  FIN,RAPUT
         CLC   STATUS-RECORD(10,R3),ACTSTAT
         BE    ACT
         AP    FINP,=P'01'
         B     TPUT
ACT      AP    ACTP,=P'01'
         B     TPUT
TPUT     TPUT  (R3),REND-RECORD
RAPUT    PUT   WORK,(R3)
         B     RA
RAE      CLOSE (CNTLA,,WORK)
         CP    ACTP,FINP
         BE    DONEW
         SETON CONF
         TPT   CONFMSG
         TGET  CONFMSG,5
         OC    CONFMSG(5),=CL5' '  MAKE UPPER CASE
CONFCLC  CLC   CONFMSG(5),=C'FORCE'  FORCE THE COPY
         BE    DONEWX
         TPT   COPYCAN
         B     $EPILOG             ASSUME CANCEL OF COPY
DONEWX   EQU   *
         MVC   XSTAT,=CL10'CONFLICT'
DONEW    EQU   *
         IFON  FIN,OPENR
         IFON  NEWF,OPENR
         IFOFF COPIED,DOCOPY
OPENR    OPEN  (CNTLA,OUTPUT),TYPE=J
         IFON  NEWF,PUTIT
         OPEN  WORK
RW       GET   WORK
         LR    R3,R1
         PUT   CNTLA,(R3)
         IFON  ISPUT,RW
         CLC   MOD#-RECORD(L'MOD#,R3),MOD#
         BNE   RW
         PUT   CNTLA,RECORD
         SETON ISPUT
         B     RW
RWE      DS    0H
         IFON  ISPUT,PC1                                    *LBD 01/84*
         IFON  COPIED,PUTIT                                 *LBD 12/83*
         IFOFF ISPUT,PC                                     *LBD 12/83*
PUTIT    PUT   CNTLA,RECORD
         SETON ISPUT
PC1      CLOSE WORK                                         *LBD 01/84*
PC       IFON  ISPUT,PCLOSE
         IFON  COPIED,PCLOSE                                *LBD 12/83*
         MVC   NOACTMSG(7),MEMBER                           *LBD 12/83*
         TPT   NOACTMSG
         CLOSE CNTLA                                        *LBD 12/83*
         B     LEAVE                                        *LBD 12/83*
PCLOSE   DS    0H
         CLOSE CNTLA
         IFON  COPIED,LEAVE
$EPILOG  IFOFF FIN,LEAVE
         MVC   FINCANMG(8),MEMBER
         MVC   FINCANST,STATUS
         TPT   FINCANMG
LEAVE    $EPILOG
         BITSW NEWENT,FIN,CONF,COPIED,NEWF,ISPUT,FOUND
NOUSE    DC    C'         IS NOT CURRENTLY IN USE'
NOTNEW   DC    C'         IS NOT A NEW ELEMENT - USE COPY'
INUSE    DC    C'         CHANGE HISTORY'
COPYMSG  DC    C'         HAS BEEN SUCCESSFULLY COPIED AND LOGGED'
NOACTMSG DC    C'         HAS NEVER BEEN COPIED OR INVALID USERMOD SPECX
               IFIED'                                       *LBD 12/83*
FINCANMG DC    CL40' '
         ORG   FINCANMG+9
         DC    C'PROCESSING HAS BEEN '
FINCANST DC    CL10' '
         ORG
TITLE    DC    C'PROG NAME   DATE      TIME      STATUS'
BLIST    DS    0F
BLDL     DC    AL2(1),AL2(58)
BPARM    DC    CL80' '
CODE     DC    C' '                C = COPY  F = COMPLETED X = CANCEL
MEMBER   DC    CL8' '
         ORG
DAY      DS    C
RECORD   DC    CL80' '
         ORG   RECORD
PGMRNAME DC    CL10' '
         DC    CL2' '
DATE     DC    CL8' '
         DC    CL2' '
TIME     DC    CL8' '
         DC    CL2' '
STATUS   DC    CL10'ACTIVE'
         DC    CL2' '
MOD#     DC    CL8' '
         DC    CL2' '
XSTAT    DC    CL10' '
REND     EQU   *                   END OF RECORD
         ORG
CONFMSG  DC    CL70' '
         ORG   CONFMSG
         DC    C'POSSIBLE CONFLICT REPLY FORCE TO CONTINUE COPY OR '
         DC    C' ANYTHING TO CANCEL '
         ORG
COPYCAN  DC    C'***** COPY CANCELED *****'
ACTP     DC    PL2'0'
FINP     DC    PL2'0'
FINSTAT  DC    CL10'COMPLETED'
CANSTAT  DC    CL10'CANCELED'
ACTSTAT  DC    CL10'ACTIVE'
CNTL     DCB   DSORG=PO,MACRF=R,DDNAME=CNTL
CNTLA    DCB   DSORG=PS,MACRF=(GL,PM),DDNAME=CNTL,EODAD=RAE,           *
               EXLST=CLIST,RECFM=FB,LRECL=80
WORK     DCB   DSORG=PS,MACRF=(PM,GL),DDNAME=WORK,EODAD=RWE,           *
               BLKSIZE=6160,RECFM=FB,LRECL=80
IN       DCB   DSORG=PS,MACRF=GL,DDNAME=ELEMIN,EODAD=EOF,EXLST=INLST,  *
               RECFM=FB,LRECL=80
OUT      DCB   DSORG=PS,MACRF=PM,DDNAME=ELEMOUT,EXLST=OUTLST,RECFM=FB, *
               LRECL=80
INLST    DC    X'87',AL3(INJFCB)
INJFCB   DC    CL176' '
CLIST    DC    X'87',AL3(CJFCB)
CJFCB    DC    CL176' '
OUTLST   DC    X'87',AL3(OUTJFCB)
OUTJFCB  DC    CL176' '
         EJECT
         DSECT
         IEFJFCBN
         END
