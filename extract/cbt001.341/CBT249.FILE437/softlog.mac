SOFTLOG  TITLE 'ISPF TABLE BUILD FOR LOGREC SOFTWARE EVENT HISTORY'
***********************************************************************
*        THIS PROGRAM IS A SUBROUTINE WHICH RUNS UNDER ISPF.
*        IT READS AN ACCUMULATION (HISTORY) DATA SET CREATED BY EREP
*        AND MAKES ENTRIES IN A TABLE NAMED SOFTLOG. ENTRIES ARE MADE
*        ONLY FOR EOD, IPL, AND SOFTWARE RECORDS--ALL OTHERS ARE
*        IGNORED. IT IS ASSUMED THAT THE CALLER HAS OPENED THE SOFTLOG
*        TABLE WITH THE APPROPRIATE VARIABLE NAMES DEFINED.
***********************************************************************
         EJECT
SOFTLOG  CSECT
SOFTWARE DSECT                     EREP SOFTWARE RECORD
HDRTYP   DS    B                   CLASS/SOURCE
HDROPRN  DS    B                   SYSTEM/RELEASE LEVEL
HDRIS    DS    B                   RECORD INDEPENDENT SWITCHES
HDRDS    DS    BL3                 RECORD DEPENDENT SWITCHES
HDRCNT   DS    B                   RECORD COUNT
         DS    B
HDRTM    DS    F                   SYSTEM DATE OF INCIDENT
         DS    F                   SYSTEM TIME OF INCIDENT
HDRCPID  DS    B                   MACHINE VERSION CODE
CPU      DS    XL3                 CPU SERIAL NUMBER
         DS    XL2                 CPU MACHINE MODEL NUMBER
         DS    H                   MAXIMUM LENGTH OF LOGOUT AREA
JOBID    DS    CL8                 JOB NAME
         IHASDWA DSECT=NO          SDWA
ERRORID  DS    0XL10               RTM-GENERATED ERROR IDENTIFIER
         DS    XL2                 SEQUENCE NUMBER
         DS    XL2                 CPU IDENTIFIER
         DS    XL2                 ASID
         DS    XL4                 TIME STAMP
         EJECT
IPLEOD   DSECT                     EREP IPL OR EOD RECORD
CLASRC   DS    B                   CLASS/SOURCE
OPSYS    DS    B                   SYSTEM/RELEASE LEVEL
SW1      DS    BL4                 RECORD SWITCHES
         DS    BL2                 NOT USED
DATE     DS    F                   SYSTEM DATE
TIME     DS    F                   SYSTEM TIME
CPUSER   DS    B                   MACHINE VERSION CODE
CPUSER1  DS    XL3                 CPU SERIAL NUMBER
CPUMODEL DS    XL2                 CPU MACHINE MODEL NUMBER
MCELLNG  DS    H                   NOT USED
SUBSYSID DS    B                   DEVICE TYPE/PROGRAM THAT CAUSED IPL
         DS    BL3                 NOT USED
REASON   DS    CL2                 ALPHANUMERIC REASON FOR IPL
         DS    BL2                 NOT USED
CHANASSN DS    BL8                 CHANNEL TYPE ASSIGNED TO SYSTEM
HIGHADDR DS    F                   ADDRESS LAST VALID BYTE OF STORAGE
         DS    BL4                 RESERVED
LASTACT  DS    BL8                 LAST ACTIVITY TIME AND DATE
         EJECT
***********************************************************************
*        INITIALIZATION
***********************************************************************
SOFTLOG  CSECT
         SAVE  (14,12)
         USING SOFTLOG,15
         MODID ,
         DROP  15
         LR    12,15
         USING SOFTLOG,12
         ST    13,SAVE+4
         LA    13,SAVE
         EJECT
***********************************************************************
*        DEFINE ISPF TABLE VARIABLES
***********************************************************************
         CALL  ISPLINK,(VDEFINE,NCOUNT,VCOUNT,FIXED,LCOUNT),VL
         CALL  ISPLINK,(VDEFINE,NCOMPMOD,VCOMPMOD,CHAR,LCOMPMOD),VL
         CALL  ISPLINK,(VDEFINE,NCPU,VCPU,CHAR,LCPU),VL
         CALL  ISPLINK,(VDEFINE,NCSECTID,VCSECTID,CHAR,LCSECTID),VL
         CALL  ISPLINK,(VDEFINE,NDATE,VDATE,CHAR,LDATE),VL
         CALL  ISPLINK,(VDEFINE,NJOBNAME,VJOBNAME,CHAR,LJOBNAME),VL
         CALL  ISPLINK,(VDEFINE,NREASON,VREASON,CHAR,LREASON),VL
         CALL  ISPLINK,(VDEFINE,NRECTYP,VRECTYP,CHAR,LRECTYP),VL
         CALL  ISPLINK,(VDEFINE,NSEQNO,VSEQNO,CHAR,LSEQNO),VL
         CALL  ISPLINK,(VDEFINE,NTIME,VTIME,CHAR,LTIME),VL
         EJECT
***********************************************************************
*        PROCESS EREP DATA
***********************************************************************
         OPEN  (ACCIN,INPUT)       OPEN DATA SET
GET      EQU   *
         GET   ACCIN               GET A RECORD
         LR    11,1                RECORD BASE
         USING SOFTWARE-4,11
         MVI   VARIABLE,C' '       CLEAR VARIABLES
         MVC   VARIABLE+1(VARSIZE-1),VARIABLE
*----------------------------------------------------------------------
*        DATE
*----------------------------------------------------------------------
         MVC   WORK(7),=X'F020204B202020' 0YY.DDD
         ED    WORK(7),HDRTM+1     EDIT DATE
         MVC   VDATE,WORK+1        MOVE DATE
*----------------------------------------------------------------------
*        TIME
*----------------------------------------------------------------------
         MVC   WORK(12),=X'F021207A20207A20204B2020' 0HH:MM:SS.TH
         ED    WORK(12),HDRTM+4    EDIT TIME
         MVC   VTIME,WORK+1        MOVE TIME
*----------------------------------------------------------------------
*        CPU NAME
*----------------------------------------------------------------------
         LA    3,CPUTABLE          POINT TO CPU NAME/SERIAL TABLE
         LA    4,L'CPUTABLE        GET LENGTH OF ENTRY
         LA    5,CPUEND            POINT TO END OF TABLE
CPULOOP  EQU   *
         CLC   1(3,3),CPU          DOES ENTRY MATCH?
         BE    CPUFOUND            YES, BRANCH
         BXLE  3,4,CPULOOP         NO, LOOP TO NEXT ENTRY
         MVI   VCPU,C'?'           UNKNOWN CPU
         B     TYPE                BRANCH
CPUFOUND EQU   *
         MVC   VCPU,0(3)           MOVE CPU NAME
*----------------------------------------------------------------------
*        EVENT COUNTERS PER CPU
*----------------------------------------------------------------------
         L     1,4(3)              GET CPU COUNT POINTER
         L     2,0(1)              GET CPU COUNT
         LA    2,1(2)              INCREMENT BY ONE
         ST    2,0(1)              STORE CPU COUNT
*----------------------------------------------------------------------
*        DETERMINE RECORD TYPE
*----------------------------------------------------------------------
TYPE     EQU   *
         CLI   HDRTYP,X'40'        IS IT ABEND?
         BE    SFTABN
         CLI   HDRTYP,X'42'        IS IT PROGRAM INTERRUPT
         BE    SFTPI
         CLI   HDRTYP,X'44'        IS IT SYSTEM RESTART
         BE    SFTRST
         CLI   HDRTYP,X'48'        IS IT MACHINE CHECK
         BE    SFTMCH
         CLI   HDRTYP,X'4F'        IS IT LOST RECORD?
         BE    SFT
         CLI   HDRTYP,X'50'        IS IT IPL?
         BE    IPL
         CLI   HDRTYP,X'80'        IS IT END OF DAY?
         BE    EOD
         CLI   HDRTYP,X'81'        IS IT END OF DAY?
         BE    EOD
         CLI   HDRTYP,X'84'        IS IT END OF DAY?
         BE    EOD
         B     GET                 BRANCH - IGNORE
SFTABN   EQU   *
         MVC   VRECTYP,=C'SFT-ABN' ABEND
         B     DETAIL              BRANCH
SFTPI    EQU   *
         MVC   VRECTYP,=C'SFT-PI ' PROGRAM INTERRUPT
         B     DETAIL              BRANCH
SFTRST   EQU   *
         MVC   VRECTYP,=C'SFT-RST' SYSTEM RESTART
         B     DETAIL              BRANCH
SFTMCH   EQU   *
         MVC   VRECTYP,=C'SFT-MCH' MACHINE CHECK
         B     DETAIL              BRANCH
SFT      EQU   *
         MVC   VRECTYP,=CL7'SFT'   LOST RECORD
         MVC   VREASON,=CL8'LOST'  MOVE REASON
         B     DONE                BRANCH
IPL      EQU   *
         MVC   VRECTYP,=CL7'IPL'   IPL
         B     DONE
EOD      EQU   *
         MVC   VRECTYP,=CL7'EOD'   END OF DAY
         B     DONE
DETAIL   EQU   *
*----------------------------------------------------------------------
*        JOB NAME
*----------------------------------------------------------------------
         MVC   VJOBNAME,JOBID      MOVE JOB NAME
*----------------------------------------------------------------------
*        ABEND CODE
*----------------------------------------------------------------------
         UNPK  WORK(9),SDWAABCC(5) CONVERT ABEND CODE
         NC    WORK(8),=8X'0F'
         TR    WORK(8),=C'0123456789ABCDEF'
         MVC   VREASON,WORK        MOVE REASON (ABEND CODE)
*----------------------------------------------------------------------
*        MODULE NAME
*----------------------------------------------------------------------
         MVC   VCOMPMOD,SDWAMODN   MOVE MODULE NAME
*----------------------------------------------------------------------
*        CSECT NAME
*----------------------------------------------------------------------
         MVC   VCSECTID,SDWACSCT   MOVE CSECT NAME
*----------------------------------------------------------------------
*        ERROR ID
*----------------------------------------------------------------------
         TM    HDRDS,X'20'         IS THERE AN ERRORID?
         BZ    DONE                NO, BRANCH
         LH    10,0(11)            GET LRECL
         LA    10,0(10,11)         GET END OF RECORD
         S     10,=F'10'           GET END MINUS TEN
         LH    1,0(10)             CONVERT SEQUENCE NUMBER TO DECIMAL
         CVD   1,WORK
         MVC   WORK+8(6),=X'F02020202020'
         ED    WORK+8(6),WORK+5
         MVC   VSEQNO,WORK+9       MOVE SEQUENCE NUMBER
*----------------------------------------------------------------------
*        ADD ISPF TABLE ROW
*----------------------------------------------------------------------
DONE     EQU   *
         CALL  ISPLINK,(TBADD,TABLENAM),VL
         B     GET                 GO GET ANOTHER RECORD
         DROP  11
         EJECT
***********************************************************************
*        TERMINATION
***********************************************************************
CLOSE    EQU   *
         CLOSE (ACCIN)             CLOSE ACCUMULATION DATA SET
         FREEPOOL ACCIN            FREE BUFFER POOL
*----------------------------------------------------------------------
*        PUT EVENT COUNTERS INTO ISPF SHARED VARIABLE POOL
*----------------------------------------------------------------------
         CALL  ISPLINK,(VPUT,NCOUNT),VL UPDATE CPU COUNTERS
         L     13,SAVE+4
         RETURN (14,12),RC=0       RETURN
         DROP  12
         EJECT
***********************************************************************
*        DATA AND WORK AREAS
***********************************************************************
SAVE     DC    18F'0'              SAVE AREA
WORK     DC    2D'0'               WORK AREA
*----------------------------------------------------------------------
ACCIN    DCB   DDNAME=ACCIN,       ACCUMULATION DATA SET               *
               DSORG=PS,                                               *
               EODAD=CLOSE,                                            *
               MACRF=GL
*----------------------------------------------------------------------
CHAR     DC    C'CHAR'
FIXED    DC    C'FIXED'
TABLENAM DC    CL8'SOFTLOG'
TBADD    DC    C'TBADD'
VDEFINE  DC    C'VDEFINE'
VPUT     DC    C'VPUT'
*----------------------------------------------------------------------
VCOUNT   DS    0F                  CPU EVENT COUNTERS
VA       DC    F'0'
VC       DC    F'0'
VE       DC    F'0'
VH       DC    F'0'
VI       DC    F'0'
VK       DC    F'0'
VL       DC    F'0'
VM       DC    F'0'
*----------------------------------------------------------------------
VARIABLE DS    0C                  TABLE VARIABLE VALUES
VCOMPMOD DC    CL8'CCCCCCCC'
VCPU     DC    C'X'
VCSECTID DC    CL8'CCCCCCCC'
VDATE    DC    C'YY.DDD'
VJOBNAME DC    CL8'CCCCCCCC'
VREASON  DC    CL8'XXXXXXXX'
VRECTYP  DC    C'CCC-CCC'
VSEQNO   DC    CL5'NNNNN'
VTIME    DC    C'HH:MM:SS.TH'
VARSIZE  EQU   *-VARIABLE
*----------------------------------------------------------------------
*                                  TABLE VARIABLE NAMES
NCOUNT   DC    C'(A,C,E,H,I,K,L,M)'
NCOMPMOD DC    C'(COMPMOD)'
NCPU     DC    C'(CPU)'
NCSECTID DC    C'(CSECTID)'
NDATE    DC    C'(DATE)'
NJOBNAME DC    C'(JOBNAME)'
NREASON  DC    C'(REASON)'
NRECTYP  DC    C'(RECTYP)'
NSEQNO   DC    C'(SEQNO)'
NTIME    DC    C'(TIME)'
*----------------------------------------------------------------------
*                                  TABLE VARIABLE LENGTHS
LCOUNT   DC    A(L'VCOUNT)
LCOMPMOD DC    A(L'VCOMPMOD)
LCPU     DC    A(L'VCPU)
LCSECTID DC    A(L'VCSECTID)
LDATE    DC    A(L'VDATE)
LJOBNAME DC    A(L'VJOBNAME)
LREASON  DC    A(L'VREASON)
LRECTYP  DC    A(L'VRECTYP)
LSEQNO   DC    A(L'VSEQNO)
LTIME    DC    A(L'VTIME)
*----------------------------------------------------------------------
CPUTABLE DS    0D                  CPU NAME VS. SERIAL NUMBER
         DC    C'A',XL3'020864',A(VA)
         DC    C'A',XL3'220864',A(VA)
         DC    C'C',XL3'020043',A(VC)
         DC    C'C',XL3'220043',A(VC)
         DC    C'E',XL3'120351',A(VE)
         DC    C'E',XL3'320351',A(VE)
         DC    C'H',XL3'020351',A(VH)
         DC    C'H',XL3'220351',A(VH)
         DC    C'I',XL3'020393',A(VI)
         DC    C'I',XL3'220393',A(VI)
         DC    C'K',XL3'020274',A(VK)
         DC    C'K',XL3'050059',A(VK)
         DC    C'L',XL3'020359',A(VL)
         DC    C'M',XL3'020983',A(VM)
         DC    C'M',XL3'050033',A(VM)
CPUEND   EQU   *-L'CPUTABLE
         EJECT
         END   ,
