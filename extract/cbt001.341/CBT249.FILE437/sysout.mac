SYSOUT   TITLE '                   SYSOUT DATA-SET PROCESSOR'
*---------------------------------------------------------------------*
* MODULE NAME: SYSOUT                                                 *
*---------------------------------------------------------------------*
* FUNCTION   : TO PROCESS HELD SYSOUT DATA-SETS FOR THE CURRENTLY     *
*              RUNNING JOB BY:                                        *
*              1) SELECTING ALL BAL LISTINGS TO                       *
*                 FICHE AND-OR TO THE SPECIFIED OUTPUT                *
*                 VOLUME OR MSGVP                                     *
*              2) SELECTING ALL NON-BAL LISTINGS TO                   *
*                 DD OTHER                                            *
*              3) COPYING ALL INPUT TO COPY DD                        *
*              4) IDCAMS IS INVOKED TO DELETE AND UNCATALOG THE       *
*                 LISTING FILE PRIOR TO ALLOCATION ON MSS OR DASD     *
*              5) SUBMIT A JOB TO  PRINT THE ASSEMBLY LISTING IF      *
*                 THE MVSGP OR VOLUME OPTION IS CHOSEN.               *
*                 AND JOB IS CODED IN THE PARM.                       *
*---------------------------------------------------------------------*
* NOTE1  :     THE FICHE DD STATEMENT IS DYNAMICALLY ALLOCATED        *
*              AND FREED FOR EACH ASSEMBLY LISTING.  IF YOU ARE       *
*              UNDER JES3 THEN YOU WILL NEED TO HAVE A FORMAT PR CARD *
*              SPECIFYING THE OUTPUT DEST AND FORM # OR ---           *
*              YOU CAN CHANGE THE ALLOC MACRO FOR THE FICHE DD TO     *
*              INCLUDE THE DEST AND FORM #                            *
*              (FORM # IS A MAX OF 4 CHARACTERS FOR DYNALLOC)         *
*---------------------------------------------------------------------*
* NOTE2  :     THE OUTPUT SHOULD IN SYSOUT=(A,WTRNAME) TO BE          *
*              PROCESSED.  IT SHOULD NOT BE IN A TSO HOLD CLASS !!!   *
*                           (UNLESS YOU PLAN TO RUN THIS PROCESSOR    *
*                                                   UNDER TSO)        *
*---------------------------------------------------------------------*
* NOTE3  :     NOSPL REQUIRES THAT THE INPUT FILE HAVE THE DDNAME     *
*              OF INPUT.                                              *
*---------------------------------------------------------------------*
* NOTE4  :     TO USE NOSPL FOR SMP SYSPRINT YOU WILL HAVE TO CODE    *
*              A DCB OF RECFM=FBA,LRECL=121,BLKSIZE=1210 ON THE       *
*              SMP SYSPRINT DD CARD IF IT IS POINTED TO TAPE OR       *
*              DASD. - THIS IS FOR NOSPL ONLY...... DO NOT CODE       *
*              A DCB ON YOUR SMP SYSPRINT UNLESS THIS IS YOUR         *
*              OUTPUT WTR .                                           *
*                                                                     *
*              RECFM=FBM WILL BE HONORED FOR FICHE AND BAL OUTPUT     *
*                                                                     *
*---------------------------------------------------------------------*
* PARMS      : THE CONTROLLING PARMS ARE                              *
*                                                                     *
*              CLASS=X WHERE X IS THE OUTPUT CLASS(S) WHICH ARE       *
*                      HELD FOR THIS JOB WHICH YOU WISH THIS PROGRAM  *
*                      TO PROCESS.                                    *
*                      ABBREVIATION: C=X                              *
*              REQ=Y   WHERE Y IS THE OUTPUT CLASS WHICH YOUR         *
*                      OUTPUT WILL BE REQUE'D TO.                     *
*                      IT WILL ALSO BE REROUTED TO LOCAL  **          *
*                      ABBREVIATION: R=Y                              *
*              MSVGP=ZZZZ  WHERE ZZZZ IS THE MSVGP NAME WHERE         *
*                      THE BAL LISTINGS WILL BE PLACED.               *
*                      ABBREVIATION: M=ZZZZ                           *
*              VOL=VOLSER  THE VOLSER FOR OUTPUT IF NOT MSVGP FOR     *
*                      THE BAL LISTINGS WILL BE PLACED.               *
*                      ABBREVIATION: V=VOLSER                         *
*              UNIT=UNIT   THE DEVICE TYPE OF THE VOLSER              *
*                      ABBREVIATION: U=UNIT                           *
*              PREFIX=AAAA WHERE AAAA IS THE PREFIX FOR THE           *
*                      DATA-SETS WHEN THEY ARE ALLOCATED ON MSS.      *
*                      ABBREVIATION: P=PREFIX                         *
*              JOBID = XXXX WHERE XXXX IS THE JES JOB NUMBER          *
*                      ABBREVIATION: J=XXXX                           *
*                      IF XXXX = 0 THEN NO JOBID WILL BE USED         *
*              DEBUG   TURN ON THE DEBUG OPTION - SNAPS ALL OVER      *
*              FICHE    GENERATE FICHE             (AUTOCOM II)       *
*              SUBMIT SUBMIT A JOB TO PRINT TO HARDCOPY THE ASSEMBLY  *
*                    LISTING (ONLY IF MSVGP OR VOLUME IS ALSO CODED)  *
*                    IF SPECIFIED THEN SUBMITCC IS ALSO REQUIRED !!!  *
*              WTR = UNIQUE NAME (I.E. YOUR NAME) THIS IS USED        *
*                    AS THE OUTPUT WRITER NAME ON YOUR SYSOUT         *
*                    DD.  EX.  SYSOUT=(A,LIONEL)                      *
*                *** REQUIRED FOR BATCH MODE ***                      *
*                      ABBREVIATION: W=NAME                           *
*              NOSPL    INPUT IS FROM INPUT DD NOT SPOOL              *
*                    - IF CODED WTR & JOBID ARE IGNORED               *
*              BAL1= XXXXX  WHERE XXXXX IS THE NAME OF THE ASSEMBLY   *
*                    TO BEGIN PRINTING FROM                           *
*                      ABBREVIATION: B1=XXXX                          *
*              BAL2= YYYYY  WHERE YYYYY IS THE NAME OF THE ASSEMBLY   *
*                    TO STOP  PRINTING AT                             *
*                      ABBREVIATION: B2=YYYY                          *
*---------------------------------------------------------------------*
* DD'S                                                                *
*              OTHER - ALL OUTPUT OTHER THAN THE ASSEMBLY LISTINGS.   *
*              COPY  - A COMPLETE COPY OF THE SPOOLED INPUT           *
*              REPORT- A REPORT OF WHAT PROCESSING HAS BEEN DONE      *
*              SYSPRINT - REQUIRED FOR USE BY IDCAMS                  *
*              SUBMITCC - REQUIRED IF SUBMIT SPECIFIED (FOR CC'S)     *
*              INPUT    - NOSPL OPTION POINT TO SEQUENTIAL INPUT      *
*                         AND THE SPOOL WILL NOT BE ACCESSED.         *
*---------------------------------------------------------------------*
* REGISTER USAGE:                                                     *
*                                                                     *
*              R4  -  SSOB BASE                                       *
*              R8 -   BAL REGISTER                                    *
*              R9 -   BASE REGISTER                                   *
*              R10 -  BASE REGISTER                                   *
*              R11 -  BASE REGISTER                                   *
*---------------------------------------------------------------------*
* SNAP  CODES:                                                        *
*                                                                     *
*               1  BEFORE REQUEST IEFSSREQ                            *
*               2  AFTER REQUEST IEFSSREQ                             *
*               3  RETURN CODE 16                                     *
*               4  UNKNOWN SSOB RETURN CODE                           *
*               5  AFTER DYNALLOC OF SYSOUT INPUT FILE                *
*               6  NO PREFIX SPECIFIED                                *
*               7  AFTER DYNALLOC OF OUTPUT ON REAL VOL               *
*               8  AFTER DYNALLOC OF OUTPUT ON MSVGP                  *
*               9  AFTER IEFSSREQ FOR COMPLETE ON SYSOUT INPUT        *
*               10 JUST BEFORE TERMINATION                            *
*               11 JUST BEFORE TERMINATION                            *
*               99 S99FAIL                                            *
*---------------------------------------------------------------------*
* ABEND CODES:                                                        *
*                                                                     *
*               1  - BAD SSOB RETURN (1ST)                            *
*               2  - DYNAMIC ALLOC FAILURE FOR INPUT OR OUTPUT FILE   *
*               3  - BAD SSOB RETURN (2ND)                            *
*               4  - INVALID JOBID SPECIFIED                          *
*               5  - NO PREFIX SPECIFIED FOR OUTPUT DATA-SET          *
*                    BUT MSVGP OR VOL WAS SPECIFIED.                  *
*               6  - NO UNIT SPECIFIED FOR OUTPUT DATA-SET            *
*                    BUT YOU DID SPECIFY A VOLSER,                    *
*                    OR YOU SPECIFIED AN UNKNOWN UNIT.                *
*               7  - WTR NOT SPECIFIED IN BATCH MODE                  *
*---------------------------------------------------------------------*
* MACROS USED:  $PROLOG,PARM,$EPILOG,OPEN,CLOSE,ALLOC,DCB,DCBD,       *
*               IFON,IFOFF,BITSW,SETOF,SETON,IEFTIOT1,EXTRACT,        *
*               MODESET,IEFSSREQ,ABEND,S99FAIL,DYNSPACE,              *
*               GET,PUT,IEFJSSOB,IEFJSSIB,IEFZB4D0,IEFZB4D2,          *
*               IEFJESCT,CVT,CALL                                     *
*                                                                     *
*               (PLUS MANY INTERNAL ALLOC MACROS)                     *
*                                                                     *
*---------------------------------------------------------------------*
*  THIS MODULE WAS CODED BY LIONEL B. DYCK                            *
*                           ROCKWELL INTERNATIONAL                    *
*                           P.O. BOX 2515                             *
*                           SEAL BEACH, CAL 90740                     *
*                           (213) 594-1125                            *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
*   THIS CODE WORKS AT ROCKWELL IN A MVS-JES3 ENVIRONMENT, IT MAY     *
*   OR MAY NOT WORK IN YOURS.                                         *
*   IF YOU MAKE ANY CHANGES TO THIS CODE PLEASE LET ME KNOW SO THAT   *
*   I MAY INCORPORATE IT INTO THE NEXT VERSION.                       *
*---------------------------------------------------------------------*
         EJECT
*---------------------------------------------------------------------*
*        INTERNAL USE ONLY MACROS                                     *
*---------------------------------------------------------------------*
         SPACE 3
         MACRO
&L       @PUT  &DCB,&DATA
&L       PUT   &DCB,&DATA
         AP    &DCB.C,=P'01'       INCR OUTPUT COUNTER
         MEND
         SPACE 3
         MACRO
&L       @GET  &DCB
&L       GET   &DCB
         LH    R2,IN+X'52'         LOAD LRECL
         AP    &DCB.C,=P'01'       INCR OUTPUT COUNTER
         MEND
         SPACE 3
         MACRO
&L       @UP   &X
&L       UNPK  COUNT,&X
         OI    COUNT+7,X'F0'
         MVC   TLC(8),=CL8'&X'
         PUT   REPORT,TL
         MEND
*---------------------------------------------------------------------*
*---------------------------------------------------------------------*
         EJECT
SYSOUT   $PROLOG 9,10,11
         EJECT
*---------------------------------------------------------------------*
*        EXTRACT PARM FROM EXEC CARD                                  *
*---------------------------------------------------------------------*
         PARM
         EJECT
*---------------------------------------------------------------------*
*        ARE WE TSO ?                                                 *
*---------------------------------------------------------------------*
         EXTRACT ANS,'S',FIELDS=(TSO)
         L     R1,ANS              -> ANS
         TM    0(R1),TSO           ?
         BZ    MPARM               NO - MOVE PARM
         SETON TSOB                ELSE TURN ON TSO BIT
MPARM    MVC   RLP+2(100),PARM
*        R2 CONTAINS THE LENGTH OF THE PARM -1
         AH    R2,=H'01'           FIX UP R2
         LR    R4,R2               AND PLACE IN REG 4
         CLI   PARM,C' '           ANY PARM ?
         BE    ENDPARM             NO - SKIP
         LA    R5,PARM             -> PARM DATA
         LR    R6,R5
         AR    R6,R2               -> END OF PARM
         EJECT
*---------------------------------------------------------------------*
*        PARSE THE PARM                                               *
*---------------------------------------------------------------------*
PLOOP    EQU   *
         CLC   =C'CLASS=',0(R5)
         BE    DOCLASS
         CLC   =C'C=',0(R5)
         BE    PDOCLASS
         CLC   =C'NOSPL',0(R5)
         BE    DONOSPL
         CLC   =C'MSVGP=',0(R5)
         BE    DOMSVGP
         CLC   =C'M=',0(R5)
         BE    PDOMSVGP
         CLC   =C'WTR=',0(R5)
         BE    DOWTR
         CLC   =C'W=',0(R5)
         BE    PDOWTR
         CLC   =C'FICHE',0(R5)
         BE    DOFICHE1
         CLC   =C'PREFIX=',0(R5)
         BE    DOPREFX
         CLC   =C'P=',0(R5)
         BE    PDOPREFX
         CLC   =C'JOBID=',0(R5)
         BE    DOJOBID
         CLC   =C'J=',0(R5)
         BE    PDOJOBID
         CLC   =C'SUBMIT',0(R5)    SUBMIT JOB TO PRINT ??
         BE    DOSUBSET            YES - GO SET FLAG SUBMIT
         CLC   =C'DEBUG',0(R5)
         BE    DODEBUG
         CLC   =C'VOL=',0(R5)
         BE    DOVOL
         CLC   =C'V=',0(R5)
         BE    PDOVOL
         CLC   =C'UNIT=',0(R5)
         BE    DOUNIT
         CLC   =C'U=',0(R5)
         BE    PDOUNIT
         CLC   =C'REQ=',0(R5)
         BE    DOREQ
         CLC   =C'R=',0(R5)
         BE    PDOREQ
         CLC   =C'BAL1=',0(R5)
         BE    DOBAL1
         CLC   =C'B=',0(R5)
         BE    PDOBAL1
         CLC   =C'BAL2=',0(R5)
         BE    DOBAL2
         CLC   =C'B=',0(R5)
         BE    PDOBAL2
PLA      LA    R5,1(R5)
         BCT   R4,PLOOP
         B     ENDPARM
         EJECT
DODEBUG  LA    R5,5(R5)
         SETON DEBUG
         B     PLA
         SPACE
DOSUBSET LA    R5,7(R5)            POINT PAST SUBMIT,
         SETON SUBMIT              AND SET ON THE FLAG
         ALLOC DDN='SUBMITWK',UNIT='SYSVIO',SPACE=(TRK,10)
         OPEN  (SUBMITCC,,SUBMITWK,OUTPUT)
RSUBA    GET   SUBMITCC
         LR    R2,R1
         PUT   SUBMITWK,(R2)
         B     RSUBA
EOFSUB   CLOSE (SUBMITCC,,SUBMITWK,REREAD)
         B     PLA                 AND CONTINUE THE PARM SCAN
DONOSPL  LA    R5,5(R5)
         SETON NOSPL
         B     PLA
         SPACE
DOFICHE1 LA    R5,5(R5)
         SETON FICHEB
         B     PLA
         SPACE
PDOREQ   LA    R5,2(R5)
         B     MREQ
DOREQ    LA    R5,4(R5)
MREQ     MVC   REQC(1),0(R5)
         SETON REQ
         B     PLA
         EJECT
*---------------------------------------------------------------------*
*        FIND BAL1 NAME                                               *
*---------------------------------------------------------------------*
PDOBAL1  LA    R5,2(R5)
         B     DB1
DOBAL1   LA    R5,5(R5)
DB1      LA    R1,0(R5)
BLP      CLI   0(R1),C','          END OF BAL
         BE    MVBALS
         CR    R1,R6               END OF PARM ?
         BE    MVBALS
         LA    R1,1(R1)
         B     BLP
MVBALS   SR    R1,R5
         CH    R1,=H'00'
         BE    PLA                 NO BAL
         BCTR  R1,R0               REDUCE BY 1 FOR MOVE
         EX    R1,MVBAL
         SETON BAL1B
         B     PLA
MVBAL    MVC   BALNAME(0),0(R5)
         EJECT
*---------------------------------------------------------------------*
*        FIND BAL2 NAME  - END OF SEARCH FOR ASSEMBLY LISTINGS        *
*---------------------------------------------------------------------*
PDOBAL2  LA    R5,2(R5)
         B     DB2
DOBAL2   LA    R5,5(R5)
DB2      LA    R1,0(R5)
BLP2     CLI   0(R1),C','          END OF BAL
         BE    MVBAL2
         CR    R1,R6               END OF PARM ?
         BE    MVBAL2
         LA    R1,1(R1)
         B     BLP2
MVBAL2   SR    R1,R5
         CH    R1,=H'00'
         BE    PLA                 NO BAL
         BCTR  R1,R0               REDUCE BY 1 FOR MOVE
         EX    R1,MVBALS2
         SETON BAL2B
         B     PLA
MVBALS2  MVC   BALNAME2(0),0(R5)
         EJECT
*---------------------------------------------------------------------*
*        FIND OUTPUT CLASS TO PROCESS                                 *
*---------------------------------------------------------------------*
PDOCLASS LA    R5,2(R5)
         B     DCL
DOCLASS  LA    R5,6(R5)
DCL      LA    R1,0(R5)
CLP      CLI   0(R1),C','          END OF CLASS
         BE    MVCLS
         CR    R1,R6               END OF PARM ?
         BE    MVCLS
         LA    R1,1(R1)
         B     CLP
MVCLS    SR    R1,R5
         CH    R1,=H'00'
         BE    PLA                 NO CLASS
         BCTR  R1,R0               REDUCE BY 1 FOR MOVE
         EX    R1,MVCLASS
         B     PLA
MVCLASS  MVC   CLASS(0),0(R5)
         EJECT
*---------------------------------------------------------------------*
*        FIND WHERE TO PUT OUTPUT DATA-SET                            *
*---------------------------------------------------------------------*
PDOVOL   LA    R5,2(R5)
         B     DVOL
DOVOL    LA    R5,4(R5)
DVOL     LA    R1,0(R5)
VLP      CLI   0(R1),C','
         BE    MVVOL
         CR    R1,R6               END OF PARM ?
         BE    MVVOL
         LA    R1,1(R1)
         B     VLP
MVVOL    SR    R1,R5
         CH    R1,=H'00'
         BE    PLA
         BCTR  R1,R0               REDUCE BY 1 FOR MOVE
         EX    R1,MVCVOL
         SETON VOLB
         B     PLA
MVCVOL   MVC   VOLSER(0),0(R5)
         EJECT
*---------------------------------------------------------------------*
*        FIND WHERE TO PUT OUTPUT DATA-SET UNIT                       *
*---------------------------------------------------------------------*
PDOUNIT  LA    R5,2(R5)
         B     PDU
DOUNIT   LA    R5,5(R5)
PDU      LA    R1,0(R5)
ULP      CLI   0(R1),C','
         BE    MVDEV
         CR    R1,R6               END OF PARM ?
         BE    MVDEV
         LA    R1,1(R1)
         B     ULP
MVDEV    SR    R1,R5
         CH    R1,=H'00'
         BE    PLA
         STH   R1,UNITL
         BCTR  R1,R0               REDUCE BY 1 FOR MOVE
         EX    R1,MVCDEV
         SETON UNITB
         B     PLA
MVCDEV   MVC   UNIT(0),0(R5)
         EJECT
*---------------------------------------------------------------------*
*        FIND OUTPUT HIGH LEVEL INDEX                                 *
*---------------------------------------------------------------------*
PDOPREFX LA    R5,2(R5)
         B     DPR
DOPREFX  LA    R5,7(R5)
DPR      LA    R1,0(R5)
PRXLP    CLI   0(R1),C','
         BE    MVPRFX
         CR    R1,R6               END OF PARM ?
         BE    MVPRFX
         LA    R1,1(R1)
         B     PRXLP
MVPRFX   SR    R1,R5
         CH    R1,=H'00'
         BE    PLA
         BCTR  R1,R0               REDUCE BY 1 FOR MOVE
         EX    R1,MVCPRFX
         LA    R8,ODSN
         AR    R8,R1
         LA    R8,1(R8)            CORRENT FOR BCTR
         ST    R8,NAMEP
         B     PLA
MVCPRFX  MVC   PREFIX(0),0(R5)
         EJECT
*---------------------------------------------------------------------*
*        FIND SPECIAL WTR NAME                                        *
*---------------------------------------------------------------------*
PDOWTR   LA    R5,2(R5)
         B     DOW
DOWTR    LA    R5,4(R5)
DOW      LA    R1,0(R5)
WTRLP    CLI   0(R1),C','
         BE    MVWTR
         CR    R1,R6               END OF PARM ?
         BE    MVWTR
         LA    R1,1(R1)
         B     WTRLP
MVWTR    SR    R1,R5
         CH    R1,=H'00'
         BE    PLA
         BCTR  R1,R0               REDUCE BY 1 FOR MOVE
         EX    R1,MVCWTR
         SETON WTRN
         B     PLA
MVCWTR   MVC   WTRNAME(0),0(R5)
         EJECT
*---------------------------------------------------------------------*
*        FIND MSVGP FOR OUTPUT DATA-SETS                              *
*---------------------------------------------------------------------*
PDOMSVGP LA    R5,2(R5)
         B     DOM
DOMSVGP  LA    R5,6(R5)
DOM      LA    R1,0(R5)
MSVLP    CLI   0(R1),C','          END OF MSVGP
         BE    MVMSV
         CR    R1,R6               END OF PARM ?
         BE    MVMSV
         LA    R1,1(R1)
         B     MSVLP
MVMSV    SR    R1,R5
         CH    R1,=H'00'
         BE    PLA                 NO MSVGP
         STH   R1,MSVGPL           SAVE LENGTH
         BCTR  R1,R0               REDUCE BY 1 FOR MOVE
         EX    R1,MVMSVGP
         SETON MSS
         B     PLA
MVMSVGP  MVC   MSVGP(0),0(R5)
         EJECT
*---------------------------------------------------------------------*
*        FIND JOBID IF SPECIFIED                                      *
*---------------------------------------------------------------------*
PDOJOBID LA    R5,2(R5)
         B     DOJ
DOJOBID  LA    R5,6(R5)
DOJ      LA    R1,0(R5)
JLP      CLI   0(R1),C','
         BE    JMV
         CR    R1,R6               END OF PARM ?
         BE    JMV
         LA    R1,1(R1)
         B     JLP
JMV      SR    R1,R5
         CH    R1,=H'00'
         BE    PLA                 NO MSVGP
         LA    R3,5                LOAD LEN OF JOBID
         SR    R3,R1               SUB LEN OF SUPPLIED ID
         LA    R2,JOBID
         AR    R2,R3               ADD TO -> FOR MOVE
         BCTR  R1,R0               REDUCE BY 1 FOR MOVE
         EX    R1,JMOVE
         SETON JOB
         CLC   JOBID,=CL5'0'       J=0?
         BNE   PLA
         SETON JOB0                YES - SET ON FLAG
         B     PLA
JMOVE    MVC   0(,R2),0(R5)
         EJECT
*---------------------------------------------------------------------*
*        END OF PARM PARSEING                                         *
*---------------------------------------------------------------------*
ENDPARM  EQU   *
         EJECT
         IFON  VOLB,LIDC
CKMSS    IFOFF MSS,NOIDC
         EJECT
*------------------------------------------------------------------*
*  LOAD IDCAMS AND ALLOC SYSIN TO BE USED TO DELETE AND UNCATALOG  *
*  ANY PRE-EXISTING LISTING FILES.                                 *
*------------------------------------------------------------------*
LIDC     LOAD  EP=IDCAMS
         ST    R0,IDCAMS
         ALLOC DDNRET=SYSINDD,UNIT='SYSVIO',SPACE=(TRK,1)
         LTR   R15,R15
         BNZ   S99FAIL
         LA    R1,SYSIN
         USING IHADCB,R1
         MVC   DCBDDNAM,SYSINDD+2
         MVC   IDCSYSIN,SYSINDD+2
         DROP  R1
NOIDC    EQU   *
         EJECT
         IFON  NOSPL,CDB
         IFON  TSOB,CDB
         IFON  WTRN,CDB
         IFON  JOB0,CDB            FORGET CHECK IF JOB0
         ABEND 7,DUMP              WTR MUST BE SPECIFIED IN BATCH
         EJECT
*---------------------------------------------------------------------*
*        OPEN OUTPUT FILES                                            *
*---------------------------------------------------------------------*
CDB      IFOFF DEBUG,OPEN
         OPEN  (SNAP,OUTPUT)
OPEN     OPEN  (COPY,OUTPUT,OTHER,OUTPUT,REPORT,OUTPUT)
         PUT   REPORT,RL1
         PUT   REPORT,RLPT
         PUT   REPORT,RLP
         PUT   REPORT,BLANKS
         EJECT
*---------------------------------------------------------------------*
*        SET UP SSOB FOR SPOOL ACCESS                                 *
*---------------------------------------------------------------------*
DOEX     EXTRACT ANS,'S',FIELDS=(TIOT)
         L     R5,ANS
         USING TIOT1,R5
         SPACE
         LA    R4,XSSOB
         USING SSOB,R4
         MVC   SSOBID,=C'SSOB'     INITIALIZE SSOB
         MVC   SSOBLEN,=AL2(SSOBHSIZ)
         MVC   SSOBFUNC,=AL2(SSOBSOUT)
         MVC   SSSOLEN,=AL2(SSSOSIZE)
         IFON  JOB,SJOBID          GO SET JOB ID
         OI    SSSOFLG1,SSSOHLD+SSSOSCLS+SSSOSJBN
         MVC   SSSOJOBN,TIOCNJOB   SET JOBNAME INTO SSOB
         MVC   RJOBN,TIOCNJOB   SET JOBNAME INTO REPORT MSG
         DROP  R5
         B     LSSOBGN
SJOBID   EQU   *
         OI    SSSOFLG1,SSSOHLD+SSSOSCLS
         IFON  JOB0,LSSOBGN
         OI    SSSOFLG1,SSSOSJBI
         MVC   SSSOJOBI,JOBID#
         MVC   RJOBN,JOBID#        MOVE JOBID INTO REPORT MSG
LSSOBGN  EQU   *
         IFOFF WTRN,NWTR
         OI    SSSOFLG1,SSSOSPGM   SET WTR NAME SELECTION FLAG
         MVC   SSSOPGMN,WTRNAME
NWTR     LA    R1,SSOBGN
         ST    R1,SSOBINDV
         MVC   SSSOCLSL,CLASS      CLASS FROM PARM
         SPACE
DOIT     EQU   *
         IFOFF DEBUG,NOS1
         SNAP  DCB=SNAP,ID=1,PDATA=(REGS,JPA)
NOS1     EQU   *
         IFON  NOSPL,OPIN
         EJECT
*---------------------------------------------------------------------*
*        ISSUE SUB SYSTEM REQUEST FOR FIRST SPOOL DATA-SET            *
*---------------------------------------------------------------------*
         MODESET MODE=SUP,KEY=ZERO
         XC    SSSOFLG2,SSSOFLG2
         XC    SSSODSN,SSSODSN
         XC    SSSOUFLG,SSSOUFLG
         LA    R1,SSOBPARM
         IEFSSREQ
         LR    R2,R15              SAVE RTN CODE
         MODESET MODE=PROB,KEY=NZERO
         IFOFF DEBUG,NOS2
         SNAP  DCB=SNAP,ID=2,PDATA=(REGS,JPA)
NOS2     EQU   *
         LTR   R2,R2
         BNZ   NOTOK
CKRTN    CLC   SSOBRETN,=AL4(SSSORTOK)
         BE    DOALLOC
         CLC   SSOBRETN,=AL4(SSSOEODS)
         BE    EODS
         CLC   SSOBRETN,=AL4(SSSOUNAV)
         BE    CODE16
         CLC   SSOBRETN,=AL4(SSSODUPJ) DUPLICATE JOB #
         BE    GETJOB              GET JOB ID FROM SSIB
         IFOFF DEBUG,NOS3
         SNAP  DCB=SNAP,ID=4,PDATA=(REGS,JPA)
NOS3     EQU   *
         B     EXIT
CODE16   IFON  FIRST,GETJOB
         IFOFF DEBUG,NOS4
         SNAP  DCB=SNAP,ID=3,PDATA=(REGS,JPA)
NOS4     EQU   *
         IFON  PROC,EXIT
         PUT   REPORT,CODE16M
         B     EXIT
NOTOK    ABEND 1,DUMP
BADJOBID ABEND 4,DUMP
GETJOB   EQU   *
         IFON  JOB,BADJOBID
         SETON FIRST
         L     R2,SSOBSSIB
         USING SSIB,R2
         MVC   SSSOJOBI,SSIBJBID
         OI    SSSOJOBI+3,X'F0'    FIX BLANK IN JOB ID
         OI    SSSOFLG1,SSSOSJBI   USE JOB NUMBER
         B     DOIT
         DROP  R2
         EJECT
*---------------------------------------------------------------------*
*        ALLOC SPOOL DATA-SET                                         *
*---------------------------------------------------------------------*
DOALLOC  EQU   *
         SETON PROC
         MVC   SODSNM,SSSODSN
         ALLOC DDNRET=DDN,DSN=DSNAME,SSREQ=YES
         LTR   R15,R15
         BNZ   S99FAIL
         LA    R1,IN
         USING IHADCB,R1
         MVC   DCBDDNAM,DDN+2
         DROP  R1
         IFOFF DEBUG,NOS5
         SNAP  DCB=SNAP,ID=5,PDATA=(REGS,JPA)
NOS5     EQU   *
         EJECT
*---------------------------------------------------------------------*
*        OPEN INPUT DATA-SET AND PROCESS                              *
*---------------------------------------------------------------------*
*        1. OPEN INPUT FILE                                           *
*        2. READ RECORD AND CHECK FOR START OF BAL LISTING            *
*           OR END OF BAL LISTING                                     *
*        3. IF START OF BAL LISTING THEN OPEN OUTPUT IF SPECIFIED     *
*        4. OPEN FICHE IF SPECIFIED                                   *
*        5. COPY IF COPY DD IS OPEN                                   *
*        6. COPY NON-BAL RECORDS TO OTHER DD IF OPEN                  *
*---------------------------------------------------------------------*
OPIN     OPEN  (IN)
*
LENSDTBL EQU   30*121              30 121 BYTE ENTRIES
*                                  USED TO FIND THE 1ST SD
*
         GETMAIN R,LV=LENSDTBL
         LR    R5,R1
         LA    R6,121
         LA    R7,LENSDTBL(R5)
         STM   R5,R7,SDTBLA
*
READ     @GET  IN
         MVC   LINE,BLANKS
         BCTR  R2,R0
         EX    R2,LINEMVC
         LA    R2,LINE
         TM    COPY+X'30',X'10'
         BZ    NCOPY
         @PUT  COPY,LINE
NCOPY    EQU   *
         IFON  ASM,PUTIT
         SETOF MACHB                                           *LBD*
         MVI   SKIP1,C'1'          SET FOR ANSI CC SKIP TO 1
         CLC   =C'EXTERNAL SYMBOL',48(R2)      FIND BAL LISTING
         BE    SETASM
         SETON MACHB               SET FOR ASMH                *LBD*
         MVI   SKIP1,X'8B'         SET FOR MACH CC SKIP TO 1
CKASMH   CLC   =C'EXTERNAL SYMBOL',47(R2)      FIND BAL LISTING ASMH
         BNE   POTHER
SETASM   SETON ASM                 FOUND START OF LISTING
         LM    R5,R7,SDTBLA        -> SD SAVE TABLE
         MVC   0(121,R5),LINE        SAVE ESD TITLE
         AR    R5,R6               -> NEXT ENTRY
         @GET  IN
         MVC   LINE,BLANKS
         BCTR  R2,R0
         EX    R2,LINEMVC
         LA    R2,LINE
         MVC   0(121,R5),LINE        SAVE SYMBOL TITLE
         AR    R5,R6               -> NEXT ENTRY
         TM    COPY+X'30',X'10'
         BZ    NCOPY1
         @PUT  COPY,LINE
NCOPY1   EQU   *
         MVC   ASMTIME,LINE+107
         MVC   ASMDATE,LINE+113
SDLP     @GET  IN
         MVC   LINE,BLANKS
         BCTR  R2,R0
         EX    R2,LINEMVC
         TM    COPY+X'30',X'10'
         BZ    NCOPY2
         @PUT  COPY,LINE
NCOPY2   EQU   *
         MVC   0(121,R5),LINE
         CLC   =C'SD',11(R1)
         BE    DLA
         BXLE  R5,R6,SDLP
*        GIVE UP - AND TAKE WHAT I HAVE
DLA      LA    R2,LINE
         ST    R5,LASTREC
         MVC   MODNAME,LINE+1
         MVC   RMODNAME,MODNAME
         IFOFF BAL1B,TST2B
         IFON  BALFND,TST2B
         CLC   MODNAME,BALNAME
         BNE   READ
         SETON BALFND
TST2B    EQU   *
         IFOFF BAL2B,BALOP
         CLC   MODNAME,BALNAME2
         BNE   BALOP
         B     EXIT1               LEAVE
BALOP    BAL   R8,OPENOUT          GO OPEN DASD OR MSVGP OUTPUT
         BAL   R8,OPENF            GO OPEN FICHE
         TM    FICHE+X'30',X'10'
         BZ    SDOUT
         MVC   RFMNAME,MODNAME
         @PUT  FICHE,F1CC
         AP    RFCNTP,=P'01'
         @PUT  FICHE,F2CC
         AP    RFCNTP,=P'01'
         @PUT  FICHE,F3CC
         AP    RFCNTP,=P'01'
FPL      EQU   *
         L     R7,LASTREC          -> LAST RECORD
         L     R5,SDTBLA           -> FIRST RECORD
FSDPL    @PUT  FICHE,0(R5)
         AP    RFCNTP,=P'01'
         BXLE  R5,R6,FSDPL
SDOUT    TM    OUT+X'30',X'10'
         BZ    READ
         @PUT  OUT,SKIP1           PUT SKIP TO CHANNEL 1
         L     R7,LASTREC          -> LAST RECORD
         L     R5,SDTBLA           -> FIRST RECORD
SDPL     @PUT  OUT,0(R5)
         BXLE  R5,R6,SDPL
         B     READ
PUTIT    EQU   *
         TM    FICHE+X'30',X'10'
         BZ    TMOUT
         @PUT  FICHE,LINE
         AP    RFCNTP,=P'01'
TMOUT    TM    OUT+X'30',X'10'
         BZ    CKEND
         @PUT  OUT,LINE
         AP    RMCNTP,=P'01'
CKEND    CLC   =C'TOTAL RECORDS PRINTED',1(R2)
         BE    ASMEND
         CLC   =C'LINES OUTPUT',10(R2)             ASM H
         BNE   READ
         CLC   =C'CARDS OUTPUT',35(R2)             ASM H
         BE    ASMEND
         B     READ
         EJECT
*---------------------------------------------------------------------*
*        OPEN FICHE SYSOUT FILE - AUTOCOM II SUPPORT ONLY             *
*---------------------------------------------------------------------*
OPENF    EQU   *
         IFON  FICHEB,ALLF         FICHE FLAG ON
         BR    R8                  BYPASS
ALLF     ALLOC DDN='FICHE',SYSOUT='A'
         LTR   R15,R15
         BNZ   S99FAIL
         SNAP  DCB=SNAP,ID=11,PDATA=(REGS,JPA)
         MVI   FICHE+X'24',ANSICC                               *LBD*
         IFOFF MACHB,DOOPF                                      *LBD*
         MVI   FICHE+X'24',MACHCC                               *LBD*
DOOPF    OPEN  (FICHE,OUTPUT)
         ZAP   RFCNTP,=P'00'                                    *LBD*
         BR    R8
         EJECT
*---------------------------------------------------------------------*
*        OPEN OUTPUT LISTING FILE                                     *
*---------------------------------------------------------------------*
OPENOUT  EQU   *
         CLI   PREFIX,C' '         DO WE HAVE A PREFIX ?
         BE    NOPRE               NO - GIVE UP
         MVC   ODSN,BLANKS
         MVC   ODSN(8),PREFIX
         L     R3,NAMEP            -> LEVEL 2 OF OUTPUT DSN
         MVI   0(R3),C'.'
         LA    R3,1(R3)
         MVC   0(8,R3),MODNAME     SET UP OUTPUT DSN
         LA    R5,7                SET SEARCH LIMIT
OLP      CLI   1(R3),C' '          FIND END OF MODNAME
         BE    OMV                 FOUND
         LA    R3,1(R3)
         BCT   R5,OLP
OMV      MVC   1(8,R3),=C'.LISTING'
         IFON  MSS,OPMSS
         IFON  VOLB,OPVOL
         BR    R8
NOPRE    EQU   *
         IFON  VOLB,AB5
         IFON  MSS,AB5
         BR    R8
AB5      EQU   *
         IFOFF DEBUG,NOS6
         SNAP  DCB=SNAP,ID=6,PDATA=(REGS,JPA)
NOS6     EQU   *
DAB5     ABEND 5,DUMP
         EJECT
*---------------------------------------------------------------------*
*        OPEN OUTPUT LISTING FILE ON READ DASD                        *
*        AFTER DELETEING PREFIX.MODNAME.LISTING VIA IDCAMS            *
*---------------------------------------------------------------------*
OPVOL    IFOFF UNITB,UNITERR
MVCRDSN  MVC   RDSN,ODSN
         MVC   IDCDSN,ODSN
         OPEN  (SYSIN,OUTPUT)
         PUT   SYSIN,IDCARD
         CLOSE SYSIN
         L     R15,IDCAMS
         CALL  (15),(IDCOPT,IDCDDNS),VL
         SPACE
         ALLOC DSN=ODSNP,UNIT=UNITP,VOL=VOLP,DISP=(NEW,CATLG),        XX
               SPACE=(TRK,(120,120),RLSE),DDNRET=DDNO
         LTR   R15,R15
         BNZ   S99FAIL
         LA    R1,OUT
         USING IHADCB,R1
         MVC   DCBDDNAM,DDNO+2
         DROP  R1
         IFOFF DEBUG,NOS7
         SNAP  DCB=SNAP,ID=7,PDATA=(REGS,JPA)
NOS7     EQU   *
DOOPO    EQU   *
         MVI   OUT+X'24',ANSICC                                 *LBD*
         IFOFF MACHB,DOOPO2                                     *LBD*
         MVI   OUT+X'24',MACHCC                                 *LBD*
DOOPO2   OPEN  (OUT,OUTPUT)
         ZAP   RMCNTP,=P'03'
         BR    R8
         SPACE
UNITERR  ABEND 6,DUMP              VOL BUT NO UNIT SPECIFIED
         EJECT
*---------------------------------------------------------------------*
*        OPEN OUTPUT LISTING FILE ON MSS                              *
*        AFTER DELETEING PREFIX.MODNAME.LISTING VIA IDCAMS            *
*---------------------------------------------------------------------*
OPMSS    EQU   *
         MVC   RDSN,ODSN
         MVC   IDCDSN,ODSN
         OPEN  (SYSIN,OUTPUT)
         PUT   SYSIN,IDCARD
         CLOSE SYSIN
         L     R15,IDCAMS
         CALL  (15),(IDCOPT,IDCDDNS),VL
         SPACE
         ALLOC DSN=ODSNP,UNIT='3330V',DISP=(NEW,CATLG),               XX
               MSVGP=MSVGPP,                                           *
               SPACE=(TRK,(120,120),RLSE),DDNRET=DDNMO
         LTR   R15,R15
         BNZ   S99FAIL
         LA    R1,OUT
         USING IHADCB,R1
         MVC   DCBDDNAM,DDNMO+2
         DROP  R1
         IFOFF DEBUG,NOS8
         SNAP  DCB=SNAP,ID=8,PDATA=(REGS,JPA)
NOS8     EQU   *
         B     DOOPO
         EJECT
*---------------------------------------------------------------------*
*        MISC ROUTINES                                                *
*---------------------------------------------------------------------*
POTHER   EQU   *
         TM    OTHER+X'30',X'10'
         BZ    READ
         @PUT  OTHER,LINE
         B     READ
ASMEND   SETOF ASM
         TM    OUT+X'30',X'10'
         BZ    NORL3
         UNPK  RMCNTD,RMCNTP
         OI    RMCNTD+5,X'F0'
         PUT   REPORT,RL3
NORL3    EQU   *
         IFOFF FICHEB,DOCLOSE
         TM    FICHE+X'30',X'10'
         BZ    DOCLOSE
         UNPK  RFCNTD,RFCNTP
         OI    RFCNTD+5,X'F0'
         PUT   REPORT,RLF
DOCLOSE  CLOSE (OUT,FREE,FICHE,FREE)
         IFOFF SUBMIT,READ         NO SUBMIT - SKIP IT
         IFON  MSS,DOSUB           OK TO DO SUBMIT
         IFOFF VOLB,READ           NOT OK TO DO SUBMIT
DOSUB    DS    0H
         OPEN  (INTRDR,OUTPUT)
         TM    INTRDR+X'30',X'10'  IS IT OPEN ?
         BZ    READ                NO - SKIP IT
         MVC   JDSN,ODSN           MOVE DSN TO JCL
         $FINDCB OSACT=(R2)        GET OS ACT FOR ACCOUNTING INFO
         MVC   JACCT,X'21'(R2)     AND MOVE IT TO JOBCARD
         $FINDCB TIOT=(R2)         GET TIOT ADDR
         MVC   JNAME,0(R2)         MOVE JOBNAME TO JOBCARD
SUBIT    PUT   INTRDR,J1
         PUT   INTRDR,J2
         PUT   INTRDR,J3
         PUT   INTRDR,J4
         PUT   INTRDR,J5
         PUT   INTRDR,J6
         OPEN  (SUBMITWK)
GSUB     GET   SUBMITWK
         LR    R2,R1
         PUT   INTRDR,(R2)
         B     GSUB
EOFSUBC  CLOSE (SUBMITWK,REREAD)
         PUT   INTRDR,J7
         AP    INTRDRC,=P'07'      INCR INTRDR COUNT
         CLOSE INTRDR
         B     READ
         EJECT
*---------------------------------------------------------------------*
*        END OF INPUT FILE                                            *
*---------------------------------------------------------------------*
EOJ      CLOSE (IN,FREE)
         IFON  NOSPL,EXIT
         IFOFF REQ,DEL
         OI    SSSOUFLG,SSSOSETC+SSSOROUT
         MVC   SSSOCLAS,REQC
         MVC   SSSOPGMN,=CL8' '
         B     COMP
DEL      OI    SSSOUFLG,SSSODELC
COMP     OI    SSSOFLG2,SSSOCTRL   MARK AS COMPLETE
         MODESET MODE=SUP,KEY=ZERO
         LA    R1,SSOBPARM
         IEFSSREQ
         LR    R2,R15              SAVE RTN CODE
         MODESET MODE=PROB,KEY=NZERO
         LTR   R2,R2
         BNZ   NOTOK2
         IFOFF DEBUG,NOS9
         SNAP  DCB=SNAP,ID=9,PDATA=(REGS,JPA)
NOS9     EQU   *
         IFON  EOF,EXIT
         MVI   SSSOCLAS,C' '
         IFOFF WTRN,NWTR
         MVC   SSSOPGMN,WTRNAME
         B     DOIT
EODS     EQU   *
         PUT   REPORT,EODSM
         B     $EPILOG
$EPILOG  EQU   *
         SETON EOF
         B     EOJ
         EJECT
*---------------------------------------------------------------------*
*        END OF JOB PROCESSING                                        *
*---------------------------------------------------------------------*
EXIT1    EQU   *
         CLOSE (IN)
EXIT     EQU   *
         PUT   REPORT,BLANKS
         @UP   COPYC
         @UP   OUTC
         @UP   INC
         @UP   FICHEC
         @UP   OTHERC
         @UP   INTRDRC
         CLOSE (INTRDR,,COPY,,OTHER,,REPORT)
         IFOFF DEBUG,NOS10
         SNAP  DCB=SNAP,ID=10,PDATA=(REGS,JPA)
         CLOSE SNAP
NOS10    EQU   *
         L     R5,SDTBLA
         LTR   R5,R5               DID WE EVER DO THE GETMAIN ?
         BZ    GETOUT
         FREEMAIN R,LV=LENSDTBL,A=(R5)
GETOUT   $EPILOG
NOTOK2   ABEND 3,DUMP
         EJECT
*---------------------------------------------------------------------*
*        DYNAMIC ALLOCATION FAILURE ROUTINE                           *
*---------------------------------------------------------------------*
S99FAIL  EQU   *
         S99FAIL
         SNAP  DCB=SNAP,ID=99,PDATA=(REGS,JPA)
         ABEND 2,DUMP
         EJECT
*---------------------------------------------------------------------*
*        DATA AREAS                                                   *
*---------------------------------------------------------------------*
         LTORG
         EJECT
*---------------------------------------------------------------------*
*        FLAG AND BIT DEFINITIONS                                     *
*---------------------------------------------------------------------*
         BITSW FIRST,ASM,EOF,REQ,MSS,UNITB,VOLB,JOB
         BITSW DEBUG,FICHEB,WTRN,TSOB,PROC,NOSPL,JOB0
         BITSW BAL1B,BALFND,BAL2B,MACHB,SUBMIT
TSO      EQU   128
ANSICC   EQU   X'94'                    FBA CC                  *LBD*
MACHCC   EQU   X'92'                    MACH CC                 *LBD*
         EJECT
*---------------------------------------------------------------------*
*        RESERVED SPACE FOR DYNAMIC ALLOCATION MACRO USAGE            *
*---------------------------------------------------------------------*
         DYNSPACE
         SPACE 4
*---------------------------------------------------------------------*
*        OUTPUT LINES                                                 *
*---------------------------------------------------------------------*
RL1      DC    CL121'1    SYSOUT PROCESSING REPORT '
RLPT     DC    CL121'0 PROCESSING PARM:'
RLP      DC    CL121' '
RL2      DC    CL121' '
         ORG   RL2+5
         DC    C'PROCESSING JOB '
RJOBN    DC    CL8' '
         ORG
RL3      DC    CL121' '
         ORG   RL3+5
         DC    C'PROCESSING MODULE '
RMODNAME DC    CL8' '
         DC    CL5' ',C'DSN='
RDSN     DC    CL26' '
         DC    CL4' ',C'COUNT='
RMCNTD   DC    CL6' '
         ORG
RLF      DC    CL121' '
         ORG   RLF+5
         DC    C'PROCESSING MODULE '
RFMNAME  DC    CL8' '
         DC    CL5' ',C'TO MICROFICHE'
         DC    CL21' ',C'COUNT='
RFCNTD   DC    CL6' '
         ORG
EODSM    DC    CL121'0*** END OF AVAILABLE DATA-SETS ***'
CODE16M  DC    CL121'0*** UNABLE TO PROCESS NOW ***'
F1CC     DC    CL121'1 CUSTOM'
         ORG   F1CC+1
         DC    X'0D'
         ORG
F2CC     DC    CL121'1 INIT TL1 64 OPER 6 '
         ORG   F2CC+1
         DC    X'0D'
         ORG   F2CC+22
         DC    X'7D'
MODNAME  DC    CL8' '
         DC    CL15' ',C'DATE = '
ASMDATE  DC    CL8' '
         DC    CL5' ',C'TIME = '
ASMTIME  DC    CL5' '
         ORG   F2CC+82
         DC    X'7D',C' END'
         ORG
F3CC     DC    CL121'1 INIT IKEY CLEAR END'
         ORG   F3CC+1
         DC    X'0D'
         ORG
LINE     DC    CL121' '
SKIP1    DC    X'8B'               DEF MACH
BLANKS   DC    CL121' '
         EJECT
*---------------------------------------------------------------------*
*        DATA-AREAS                                                   *
*---------------------------------------------------------------------*
PARM     DC    CL100' '
         SPACE
LINEMVC  MVC   LINE(0),0(R1)
CLASS    DC    CL8'A '             MUST NOT BE A TSO HOLD CLASS
REQC     DC    C' '                REQ CLASS
WTRNAME  DC    CL8' '
PREFIX   DC    CL8' '              PREFIX
BALNAME  DC    CL8' '              BAL LISTING TO START AT
BALNAME2 DC    CL8' '              BAL LISTING TO STOP AT
SDTBLA   DS    3F                  R5-R6-R7
LASTREC  DS    F                   -> LAST RECORD IN TABLE
         EJECT
*---------------------------------------------------------------------*
*        DYNAMIC ALLOCATION DATA AREAS                                *
*---------------------------------------------------------------------*
JOBID#   DC    CL8' '
         ORG   JOBID#
         DC    C'JOB'
JOBID    DC    CL5'00000'
         SPACE
MSVGPP   DC    A(MSVGP)
MSVGPL   DC    AL2(L'MSVGP)
MSVGP    DC    CL8' '
         SPACE
DSNAME   DC    A(SODSNM)
         DC    AL2(L'SODSNM)
SODSNM   DC    CL44' '             SYSOUT SPOOL DSN FOR INPUT
         SPACE
VOLP     DC    A(VOLSER)
         DC    AL2(6)
VOLSER   DC    CL6' '
         SPACE
UNITP    DC    A(UNIT)
UNITL    DC    AL2(6)
UNIT     DC    CL6' '
         SPACE
ODSNP    DC    A(ODSN)
         DC    AL2(26)
ODSN     DC    CL26' '
         SPACE
IDCAMS   DS    F
         SPACE
IDCDDNS  DC    AL2(IDCDL)
IDCDDN   DC    4XL8'00'
IDCSYSIN DC    XL8'00'
         DC    XL8'00'
IDCDL    EQU   *-IDCDDN
         SPACE
IDCOPT   DC    AL2(IDCOPTL)
IDCOPS   DC    C' MARGINS(1 80) '
IDCOPTL  EQU   *-IDCOPS
         SPACE
IDCARD   DC    CL80' '
         ORG   IDCARD+3
         DC    C'DELETE '
IDCDSN   DC    CL26' '
         ORG
         SPACE
NAMEP    DS    F
ANS      DS    F
COPYC    DC    PL6'00'
OUTC     DC    PL6'00'
INC      DC    PL6'00'
FICHEC   DC    PL6'00'
OTHERC   DC    PL6'00'
INTRDRC  DC    PL6'00'
RFCNTP   DC    PL3'0'
RMCNTP   DC    PL3'0'
TL       DC    CL121' '
         ORG   TL+5
         DC    C'DDNAME='
TLC      DC    CL8' '
         DC    C'      RECORDS ='
COUNT    DC    CL8' '
         ORG
SSOBPARM DC    X'80',AL3(XSSOB)
         DS    0D
XSSOB    DC    140X'00'
         EJECT
*---------------------------------------------------------------------*
*        DATA CONTROL BLOCKS                                          *
*---------------------------------------------------------------------*
         PRINT NOGEN
IN       DCB   DSORG=PS,MACRF=GL,DDNAME=INPUT,EODAD=EOJ
OUT      DCB   DSORG=PS,MACRF=PM,DDNAME=OUT,RECFM=FBA,LRECL=121,       X
               BLKSIZE=6171
REPORT   DCB   DSORG=PS,MACRF=PM,DDNAME=REPORT,RECFM=FBA,LRECL=121,    X
               BLKSIZE=121
OTHER    DCB   DSORG=PS,MACRF=PM,DDNAME=OTHER,RECFM=FBA,LRECL=121,     X
               BLKSIZE=121
FICHE    DCB   DSORG=PS,MACRF=PM,DDNAME=FICHE,RECFM=FBA,LRECL=121,     X
               BLKSIZE=121
COPY     DCB   DSORG=PS,MACRF=PM,DDNAME=COPY,RECFM=FBA,LRECL=121,      X
               BLKSIZE=6171
SNAP     DCB   DSORG=PS,MACRF=W,DDNAME=SNAP,RECFM=VBA,LRECL=125,       X
               BLKSIZE=882
SYSIN    DCB   DSORG=PS,MACRF=PM,DDNAME=BLANK,LRECL=80,BLKSIZE=80,     X
               RECFM=F
INTRDR   DCB   DSORG=PS,MACRF=PM,DDNAME=INTRDR,RECFM=F,BLKSIZE=80,     X
               BUFNO=1,LRECL=80
SUBMITCC DCB   DSORG=PS,MACRF=GL,DDNAME=SUBMITCC,EODAD=EOFSUB
SUBMITWK DCB   DSORG=PS,MACRF=(GL,PM),DDNAME=SUBMITWK,EODAD=EOFSUBC, X X
               LRECL=80,BLKSIZE=800,RECFM=FB
         PRINT GEN
         EJECT
J1       DC    CL80'//'
         ORG   J1+2
JNAME    DC    CL8' '
         DC    C' '
         DC    C'JOB '
         DC    X'7D'               FIRST QUOTE ON JOBCARD
JACCT    DC    CL52' '             ACCTING INFO
         DC    X'7D'               ENDING QUOTE
         DC    C','
         ORG
J2       DC    CL80'// MSGCLASS=0,TIME=1,PRTY=3,REGION=512K'
J3       DC    CL80'//PRINT  EXEC PGM=PRNTMODS'
J4       DC    CL80'//STEPLIB DD DSN=AOST.LOAD,DISP=SHR'
J5       DC    CL80'//'
         ORG   J5+2
         DC    C'INPUT DD DISP=SHR,DSN='
JDSN     DC    CL26' '
         ORG
J6       DC    CL80'//SYSIN DD *'
J7       DC    CL80'/*EOF'         END OF FILE FOR READER
         EJECT
*---------------------------------------------------------------------*
*        MAPPING MACROS                                               *
*---------------------------------------------------------------------*
         TITLE 'SSOB'
         IEFJSSOB SO
         TITLE 'SSIB'
         IEFJSSIB
         TITLE 'TIOT'
         DSECT
         IEFTIOT1
         TITLE 'SVC 99 PARM LIST'
         IEFZB4D0
         TITLE 'SVC 99 TEXT UNIT KEYS'
         IEFZB4D2
         TITLE 'JES CT'
         IEFJESCT
         TITLE 'CVT'
         CVT
         TITLE 'DCB DSECT'
         DCBD  DSORG=PS
         END
