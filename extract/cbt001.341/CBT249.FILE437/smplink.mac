         TITLE 'LINK EDIT DRIVER 03-02-83'
*---------------------------------------------------------------------*
*  MODULE NAME:  SMPLINK                                              *
*                                                                     *
*  DESCRIPTION:  THIS PROGRAM IS DESIGNED TO LINK EDIT MODULES        *
*                BASED UPON THE LINK EDIT CONTROL INFORMATION         *
*                CONTAINED IN THE SMPCDS.  THIS ALLOWS TESTING        *
*                OF NEW OR CHANGED MODULES PRIOR TO RUNNING           *
*                SMP.                                                 *
*                                                                     *
*                                                                     *
*  JCL:  //STEP EXEC PGM=SMPLINK,PARM= (SEE BELOW)                    *
*        //OBJ      DD DSN = OBJ DECK (SEQUENTIAL FILE)               *
*        //SYSLMOD  DD DSN= LOAD MODULE LIBRARY                       *
*        //DD??     DD DSN=  SYSLIB WHERE ORIGINAL MODULE IS          *
*        //SYSPRINT DD SYSOUT=                                        *
*        //SMPCDS   DD DSN= SMP CDS                                   *
*        //SYSUT1   DD WORK FILE FOR IEWL                             *
*   X    //SMPJCLIN DD DSN = DSN FOR JCLIN CARDS (JCLIN OPTION ONLY)  *
*                                                                     *
*   X = REQUIRED FOR JCLIN OPTION                                     *
*                                                                     *
*                                                                     *
*  SUBPROGRAMS:                                                       *
*        SMPDATA - CALLED VIA A LINK MACRO TO RETURN CDS INFORMATION  *
*                                                                     *
*                                                                     *
*  PARM OPTIONS:                                                      *
*                                                                     *
*        MEMBER=  MODULE NAME TO BE LINKEDITED                        *
*        M=                                                           *
*                                                                     *
*        JCLIN    GENERATE IEWL FOR JCLIN ONLY - OUTPUT TO DD SMPJCLIN*
*                                                                     *
*   THE FOLLOWING ARE USED ONLY IF THE MEMBER SPECIFIED IS A NEW      *
*   MODULE AND NOT FOUND IN THE CDS.                                  *
*                                                                     *
*        OPT=  RENT, REUS OR REFR                                     *
*        O=                                                           *
*                                                                     *
*        LMOD= LOAD MODULE NAME IF NOT SAME AS MEMBER                 *
*        L=                                                           *
*                                                                     *
*        DISTLIB=  DLIB DATA SET                                      *
*        D=                                                           *
*                                                                     *
*        SYSLIB=   TARGET DATASET FOR LINKEDIT                        *
*        S=                                                           *
*                                                                     *
*        AUTH= Y OR N  FOR AC=1                                       *
*        A=                                                           *
*                                                                     *
*---------------------------------------------------------------------*
* AUTHOR:  LIONEL DYCK                                                *
*          ROCKWELL INTERNATIONAL                                     *
*          PO BOX 2515                                                *
*          SEAL BEACH, CALIF 90740                                    *
*          (213) 594-1125                                             *
*---------------------------------------------------------------------*
*  SMP LEVEL 4 IS INVOKED TO DETERMINE THE APPROPRIATE LINK EDIT      *
*  CHARACTERISTICS.                                                   *
*---------------------------------------------------------------------*
*  GUARANTEE -  NON IS EXPRESSED OR IMPLIED BY THE DISTRIBUTION       *
*  OF THIS CODE.  USE IT AT YOUR OWN RISK.                            *
*---------------------------------------------------------------------*
         EJECT
SMPLINK  $PROLOG
         L    1,0(1)            * LOAD ADDR OF PARM
         LH   2,0(1)            * LOAD LENGTH OF PARM
         LTR   2,2              * LENGTH OF ZERO
         BZ    NOPARM           * NO - BYPASS MOVE
         LA    R4,2(R1)         * -> PARM DATA
         LR    R5,R4
         AR    R5,R2            * -> END OF PARM DATA
PLOOP    EQU   *
*---------------------------------------------------------------------*
         CLC   =C'JCLIN',0(R4)
         BE    SETJCLIN
*---------------------------------------------------------------------*
         CLC   =C'MEMBER=',0(R4)
         BE    MEM
         CLC   =C'M=',0(R4)
         BE    MEMS
*---------------------------------------------------------------------*
         CLC   =C'LMOD=',0(R4)          USED ONLY IF NEW ENTRY
         BE    LMOD$
         CLC   =C'L=',0(R4)
         BE    LMODS
*---------------------------------------------------------------------*
         CLC   =C'OPT=',0(R4)           USED ONLY IF NEW ENTRY
         BE    DOOPT
         CLC   =C'O=',0(R4)
         BE    OPTS
*---------------------------------------------------------------------*
         CLC   =C'AUTH=',0(R4)           USED ONLY IF NEW ENTRY
         BE    DOAUTH
         CLC   =C'A=',0(R4)
         BE    AUTHS
*---------------------------------------------------------------------*
         CLC   =C'DISTLIB=',0(R4)        USED ONLY IF NEW ENTRY
         BE    DODIST$
         CLC   =C'D=',0(R4)
         BE    DODIST$S
*---------------------------------------------------------------------*
         CLC   =C'SYSLIB=',0(R4)         USED ONLY IF NEW ENTRY
         BE    DOSYSL$
         CLC   =C'S=',0(R4)
         BE    DOSYSL$S
*---------------------------------------------------------------------*
         B     INCR
         EJECT
SETJCLIN EQU   *                   SET JCLIN FLAG
         SETON JCLIN
         LA    R4,5(R4)
         B     INCR
         EJECT
DOSYSL$S LA    R4,2(R4)         -> S=SYSLIB
         B     DOSYSL@
DOSYSL$  LA    R4,8(R4)         -> SYSLIB=SYSLIB
DOSYSL@  LA    R7,SYSLIB
SLLOOP   EQU   *
         CLI   0(R4),C','
         BE    INCR
         CLI   0(R4),C' '
         BL    INCR
         MVC   0(1,R7),0(R4)
         LA    R7,1(R7)
         LA    R4,1(R4)
         CR    R4,R5
         BH    ENDSCAN
         B     SLLOOP
         EJECT
DODIST$S LA    R4,2(R4)         -> D=DISTLIB
         B     DODIST@
DODIST$  LA    R4,8(R4)         -> DISTLIB=DISTLIB
DODIST@  LA    R7,DISTLIB
DLLOOP   EQU   *
         CLI   0(R4),C','
         BE    INCR
         CLI   0(R4),C' '
         BL    INCR
         MVC   0(1,R7),0(R4)
         LA    R7,1(R7)
         LA    R4,1(R4)
         CR    R4,R5
         BH    ENDSCAN
         B     DLLOOP
         EJECT
LMODS    LA    R4,2(R4)         -> L=LMOD NAME
         B     DOLMOD$
LMOD$    LA    R4,5(R4)         -> LMOD=LMOD NAME
DOLMOD$  LA    R7,OPTLMOD
LMLOOP   EQU   *
         CLI   0(R4),C','
         BE    INCR
         CLI   0(R4),C' '
         BL    INCR
         MVC   0(1,R7),0(R4)
         LA    R7,1(R7)
         LA    R4,1(R4)
         CR    R4,R5
         BH    ENDSCAN
         B     LMLOOP
         EJECT
MEMS     LA    R4,2(R4)         -> M=NAME
         B     DOMEM
MEM      LA    R4,7(R4)         -> MEMBER=NAME
DOMEM    LA    R7,MEMBER
MLOOP    EQU   *
         CLI   0(R4),C','
         BE    INCR
         CLI   0(R4),C' '
         BL    INCR
         MVC   0(1,R7),0(R4)
         LA    R7,1(R7)
         LA    R4,1(R4)
         CR    R4,R5
         BH    ENDSCAN
         B     MLOOP
         EJECT
AUTHS    LA    R4,2(R4)         -> A=
         B     ALA
DOAUTH   LA    R4,5(R4)         -> AUTH=
ALA      CLI   0(R4),C'Y'
         BE    SETAUTH
*        ASSUME AUTH=N
         B     INCR
SETAUTH  SETON AUTH
         B     INCR
         EJECT
OPTS     LA    R4,2(R4)         -> O=
         B     OLA
DOOPT    LA    R4,4(R4)         -> OPT=
OLA      LA    R7,OPTATT
O#LP     EQU   *
         CLI   0(R4),C','
         BE    INCR
         CLI   0(R4),C' '
         BL    INCR
         MVC   0(1,R7),0(R4)
         LA    R7,1(R7)
         LA    R4,1(R4)
         CR    R4,R5
         BH    ENDSCAN
         B     O#LP
         EJECT
INCR     EQU   *
         LA    R4,1(R4)
         CR    R4,R5
         BNL   ENDSCAN
         B     PLOOP
ENDSCAN  EQU   *
         LA    R1,DISTLIB
         CLI   OPTLMOD,C' '
         BNE   DOIT
         MVC   OPTLMOD,MEMBER
         B     DOIT
NOPARM   EQU   *
         ABEND 1                        NO PARM
DOIT     EQU   *
         L     R1,PARMPTR          GET ++MOD INFORMATION
         LINK  EP=SMPDATA
         LTR   R15,R15
         BNZ   NEWMOD
         L     R5,DADDR
         LA    R6,80
         LR    R7,R5
         A     R7,DATALEN
         SR    R7,R6
         IFON  GLMOD,DOLMOD
SMPLP    CLI   0(R5),X'00'
         BE    GETLMOD
         CLC   =C'DISTLIB',0(R5)
         BE    DODIST
         CLC   =C'LMOD',0(R5)
         BNE   SMPINCR
         MVC   OPTLMOD,10(R5)        MOVE LMOD NAME
         MVC   MEMBER,10(R5)         MOVE LMOD NAME
         MVC   FUNCTION(4),=C'LMOD'
         B     GETLMOD
SMPINCR  BXLE  R5,R6,SMPLP
         ABEND 11
DODIST   MVC   DISTLIB,10(R5)
         MVC   DLIBDS,DISTLIB
         MVC   DLIBDSN,DISTLIB
         LA    R1,DISTLIB
DLP      CLI   0(R1),C' '
         BE    DODM
         LA    R1,1(R1)
         B     DLP
DODM     MVI   0(R1),C'('
         MVC   1(8,R1),MEMBER
         LA    R1,2(R1)
DLP2     CLI   0(R1),C' '
         BE    DODM2
         LA    R1,1(R1)
         B     DLP2
DODM2    MVI   0(R1),C')'
         B     SMPINCR
NEWMOD   EQU   *
         IFON  GLMOD,NOPTLMOD
         MVC   MEMBER,OPTLMOD
GETLMOD  SETON GLMOD
         MVC   FUNCTION(4),=C'LMOD'
         B     DOIT
DOLMOD   IFON  JCLIN,OPJCLIN
         OPEN  (SYSLIN,OUTPUT)
         B     SMPLP2
OPJCLIN  OPEN  (SMPJCLIN,OUTPUT)
SMPLP2   CLI   0(R5),X'00'
         BE    ENDLMOD
         CLC   =C'SYSLIB',0(R5)
         BE    DOSYSLIB
         CLC   =C'LEPARM',0(R5)
         BE    DOLEPARM
         CLC   =C'++LMODIN',0(R5)
         BE    DOLECNTL
         B     SMPINCR2
SMPINCR2 BXLE  R5,R6,SMPLP2
         ABEND 22
DOLECNTL EQU   *
         IFOFF JCLIN,DOLECLP
DOLECLP  AR    R5,R6
         CLI   0(R5),X'00'
         BE    ENDLMOD
         IFON  JCLIN,PJCLIN
         PUT   SYSLIN,0(R5)
         B     DOLECLP
PJCLIN   PUT   SMPJCLIN,0(R5)
         B     DOLECLP
DOSYSLIB EQU   *
         IFON  JCLIN,SMPSYSLB
         MVC   SYSLIB,=CL8'SYSLIB'
         LA    R9,SYSLIB+5
         B     SLP
SMPSYSLB MVC   SYSLIB,10(R5)
         MVC   SYSLDSN,10(R5)
         LA    R9,SYSLIB
SLP      CLI   0(R9),C' '
         BE    SMOVE
         LA    R9,1(R9)
         B     SLP
SMOVE    MVI   0(R9),C'('
         LA    R9,1(R9)
         MVC   0(8,R9),MEMBER
SLP2     CLI   0(R9),C' '
         BE    MMOVE
         LA    R9,1(R9)
         B     SLP2
MMOVE    MVI   0(R9),C')'
         IFON  JCLIN,SMPINCR2
         PUT   SYSLIN,INCLUDEN
         PUT   SYSLIN,INCLUDEO
         B     SMPINCR2
DOLEPARM EQU   *                        -> ATTRIB'S
         CLC   =C'COPY',10(R5)
         BE    NOLEPARM
         CLC   =C'STD',10(R5)
         BE    NOLEPARM
         MVI   ATTC,C','
         MVC   ATT,10(R5)
NOLEPARM IFOFF JCLIN,SMPINCR2
         MVC   LEATT,ATTC
         LA    R1,LEATT
LELP     CLI   0(R1),C' '
         BE    DOLEATT
         LA    R1,1(R1)
         B     LELP
DOLEATT  MVI   0(R1),C''''
         PUT   SMPJCLIN,J1
         PUT   SMPJCLIN,J2
         PUT   SMPJCLIN,J3
         PUT   SMPJCLIN,J6
         PUT   SMPJCLIN,J4
         PUT   SMPJCLIN,J5
         PUT   SMPJCLIN,INCLUDED
         B     SMPINCR2
ENDLMOD  EQU   *
         MVC   NAME,MEMBER
         LA    R9,NAME
NLP      CLI   0(R9),C' '
         BE    NREP
         LA    R9,1(R9)
         B     NLP
NREP     MVC   0(3,R9),=C'(R)'
         IFON  JCLIN,PJCLNCD
         PUT   SYSLIN,NAMECD
         CLOSE (SYSLIN)
         B     DOLINK
PJCLNCD  PUT   SMPJCLIN,NAMECD
         PUT   SMPJCLIN,J7
         CLOSE SMPJCLIN
         B     EXIT
NOPTLMOD MVC   NAME,OPTLMOD
NLA      LA    R2,NAME
NLP2     CLI   0(R2),C' '
         BE    MN2
         LA    R2,1(R2)
         B     NLP2
MN2      MVC   0(3,R2),=C'(R)'
         CLI   OPTATT,C' '
         BE    TESTJCL
         MVI   ATTC,C','
         MVC   ATT,OPTATT
TESTJCL  IFOFF JCLIN,OP2
         OPEN  (SMPJCLIN,OUTPUT)
         MVC   LEATT,ATTC
         LA    R1,LEATT
LELP$    CLI   0(R1),C' '
         BE    DOLEATT$
         LA    R1,1(R1)
         B     LELP$
DOLEATT$ MVI   0(R1),C''''
         MVC   DLIBDS,DISTLIB
         MVC   DLIBDSN,DISTLIB
         LA    R1,DISTLIB
DLP$     CLI   0(R1),C' '
         BE    DODM$
         LA    R1,1(R1)
         B     DLP$
DODM$    MVI   0(R1),C'('
         MVC   1(8,R1),MEMBER
         LA    R1,2(R1)
DLP2$    CLI   0(R1),C' '
         BE    DODM2$
         LA    R1,1(R1)
         B     DLP2$
DODM2$   MVI   0(R1),C')'
         PUT   SMPJCLIN,J1
         PUT   SMPJCLIN,J2
         PUT   SMPJCLIN,J3
         PUT   SMPJCLIN,J6
         MVC   SYSLDSN,SYSLIB
         PUT   SMPJCLIN,J4
         PUT   SMPJCLIN,J5
         PUT   SMPJCLIN,INCLUDED
         IFOFF AUTH,NJCL
         PUT   SMPJCLIN,SETCODE
NJCL     PUT   SMPJCLIN,NAMECD
         PUT   SMPJCLIN,J7
         CLOSE SMPJCLIN
         B     EXIT
OP2      OPEN  (SYSLIN,OUTPUT)
         PUT   SYSLIN,INCLUDEN
         IFOFF AUTH,POP2
         PUT   SYSLIN,SETCODE
POP2     PUT   SYSLIN,NAMECD
         CLOSE SYSLIN
         B     DOLINK
DOLINK   LA    R1,LPARM
         CLC   ATT,BLANKS
         BNE   LINK
         MVI   ATTC,C' '                WIPE OUT COMMA
LINK     LINK  EP=IEWL
EXIT     $EPILOG
         BITSW GLMOD,AUTH,JCLIN
ABEND    ABEND 200
EOF$     ABEND 300
         LTORG
         SPACE
PARMPTR  DC    A(WORDS)
WORDS    DC    A(FUNCTION,MEMBER,DATALEN)
FUNCTION DC    CL8'MOD'
MEMBER   DC    CL8' '
BLANKS   DC    CL80' '
DATALEN  DC    A(100*80)
DADDR    DC    A(DATA)
         SPACE
         SPACE
INCLUDEO DC    CL80' '                  INCLUDE ORIG MODULE
         ORG   INCLUDEO
         DC    C' INCLUDE '
SYSLIB   DC    CL8' '
         ORG
INCLUDED DC    CL80' '                  INCLUDE ORIG MODULE
         ORG   INCLUDED
         DC    C' INCLUDE '
DISTLIB  DC    CL8' '
         ORG
INCLUDEN DC    CL80' INCLUDE OBJ'       INCLUDE NEW OBJ DECK
NAMECD   DC    CL80' '
         ORG   NAMECD+1
         DC    C'NAME '
NAME     DC    CL8' '
         ORG
SETCODE  DC    CL80' SETCODE AC(1)  '
         DS    0F
LPARM    DC    X'80',AL3(LPTR)
LPTR     DC    AL2(LINKLEN)
LINKATTS DC    C'XREF,LIST,LET,NCAL,SIZE=(768K,100K)'
ATTC     DC    C' '
ATT      DC    CL20' '
LINKLEN  EQU   *-LINKATTS
OPTATT   DC    CL20' '
OPTLMOD  DC    CL8' '
INVALIDM DC    C'** ELEMENT SPECIFIED NOT FOUND IN CDS  -  PROCESSING '
         DC    C'CONTINUES **'
INVALIDL EQU   *-INVALIDM
         DS    0F
SMPPARM  DC    X'80',AL3(SMPPARMD)
SMPPARMD DC    AL2(6),C'DATE=U'
         SPACE 2
SMPOUT   DCB   DSORG=PS,MACRF=GL,DDNAME=SMPOUT,EODAD=EOF$
SMPCNTL  DCB   DSORG=PS,MACRF=PM,DDNAME=SMPCNTL,LRECL=80,RECFM=FB,    XX
               BLKSIZE=80
SYSLIN   DCB   DSORG=PS,MACRF=PM,DDNAME=SYSLIN,LRECL=80,RECFM=FB,     XX
               BLKSIZE=3120
SMPJCLIN DCB   DSORG=PS,MACRF=PM,DDNAME=SMPJCLIN,LRECL=80,RECFM=FB,   XX
               BLKSIZE=6160
J1       DC    CL80' '
         ORG   J1
         DC    C'//LINK  EXEC PGM=IEWL,PARM=''XREF,LIST,LET,NCAL'
         DC    C',SIZE=(768K,100K)'
LEATT    DC    CL10' '
         ORG
J2       DC    CL80'//SYSUT1  DD UNIT=SYSDA,SPACE=(CYL,(1,1))'
J3       DC    CL80'//'
         ORG   J3+2
DLIBDS   DC    CL8' ',C' DD DISP=SHR,DSN=SYS1.'
DLIBDSN  DC    CL8' '
         ORG
J4       DC    CL80'//'
         ORG   J4+2
         DC    C'SYSLMOD DD DISP=SHR,DSN=SYS1.'
SYSLDSN  DC    CL8' '
         ORG
J5       DC    CL80'//SYSLIN  DD *'
J6       DC    CL80'//SYSPRINT DD SYSOUT=A'
J7       DC    CL80'/*'
DATA     DC    100XL80'00'
         END
