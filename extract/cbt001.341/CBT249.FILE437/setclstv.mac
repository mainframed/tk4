         MACRO  ,
&LABEL   STUFFIT &FIELD,&KEYWD
         LCLC   &S
&S       SETC   '&SYSNDX'
         SPACE  1
&LABEL   L     R7,&KEYWD
.SKP1    ANOP  ,
         LH    R6,&KEYWD+4     (R6)= LENGTH OF ELEMENT
         BAL   R9,LOCVAR       GO FIND THE CLIST VARIABLE
         LTR   R1,R1           ANY LUCK?
         BZ    SKPA&S          NO.. SPLIT
         SPACE 1
         L     R15,&FIELD      GET ADDR OF FIELD TO STUFF
         LH    R14,&FIELD+4    GET LENGTH OF FIELD TO STUFF
         BAL   R9,SETVAR       GO STUFF IT AWAY INTO CLIST VAR
SKPA&S   DS    0H
         SPACE 1
         MEND
SETCLSTV $PROLOG
         LM    R2,R6,0(R1)
*        R2 = -> CLIST VARIABLE NAME
*        R3 = -> HALFWORD LEN OF VARIABLE NAME
*        R4 = -> VALUE TO BE STUFFED INTO CLIST VARIABLE
*        R5 = -> HALFWORD LEN OF VALUE
*        R6 = ADDR OF ECT
         ST    R2,VARNAME
         LH    R3,0(R3)
         STH   R3,VARLEN
         ST    R4,VALNAME
         LH    R5,0(R5)
         STH   R5,VALLEN
         ST    R6,ECTADDR
         SPACE
STUFFIT  STUFFIT  VALNAME,VARNAME
*.....................................................................*
*        EXIT                                                         *
*.....................................................................*
         SPACE
         SR    R15,R15
         IC    R15,RETCODE
         $EPILOG
         SPACE 2
         EJECT
*.....................................................................*
*  SUBROUTINE LOCVAR:                                                 *
*  PURPOSE: LOCATE ADDRESS OF VARABLE IN CLIST TO POKE STUFF INTO.    *
*                                                                     *
*  ENTER WITH :                                                       *
*                                                                     *
*       (R7) = ADDR OF CLIST VARIABLE TO FIND                         *
*       (R6) = LENGTH OF VARIABLE TO EXAMINE                          *
*                                                                     *
*       BAL R9,LOCVAR                                                 *
*                                                                     *
* ON RETURN:  (R1) = 0   NOT FOUND                                    *
*             (R1) ^=0   (R1) = ADDR OF CLIST VARIABLE ELEMENT        *
*                                                                     *
*   REGISTERS USED:  R3,R4,R5,R6,R7,R8 (RESTORED)                     *
*                    R1                (NOT RESTORED)                 *
*.....................................................................*
         SPACE
LOCVAR   STM   R3,R8,SAVEREGS
         L     R5,ECTADDR         R5->ECT
         L     R5,4(,R5)          R5->IOSRL
         L     R4,0(,R5)          R4->TOP OF STACK
CKCLIST  TM    0(R4),X'08'        CLIST ELEMENT?
         BO    GOTCL              YES->WE HAVE A CLIST
         S     R4,=F'4'           R4=R4-4 (NEXT ELEMENT DOWN ON STACK)
         C     R4,4(,R5)          R4<BOTTOM OF STACK PTR?
         BNL   CKCLIST            NO ->STILL IN STACK; GO CHECK IT
         MVI   RETCODE,128        YES->SET RC=128
         LA    R1,0               NO POINTER FOR THE WICKED
         LM    R3,R8,SAVEREGS     RESTORE REGISTERS
         BR    R9                 EXIT LOCVAR WITH ERROR
         SPACE 1
GOTCL    DS    0H                 R7->VARIABLE NAME
*                                 R6=VAR LENGTH FOR LENGTH COMPARE
         L     R5,0(,R4)          R5->LSD
         L     R5,12(,R5)         R5->EXECDATA
         L     R5,0(,R5)          R5->SNTAB
         L     R4,8(,R5)          R4==USED TABLE LENGTH
         LA    R4,0(R4,R5)        R4->END OF TABLE USED
         LA    R3,12(,R5)         R3->FIRST SNTAB ENTRY
         LR    R1,R6              R1=R6  VARIABLE NAME LENGTH
         BCTR  R1,R0              R1=R1-1 FOR EXECUTED COMPARE
         EJECT ,
RLOOP    LH    R2,6(,R3)          R2=NAME LENTH
         CR    R6,R2              SAME LENGTH?
         BNE   LOOPCHK            NO -> CHECK DONE
         EX    R1,EXCLC           COMPARE NAMES
         BE    GOTIT
LOOPCHK  LA    R3,8(R2,R3)        POINT TO NEXT ENTRY
         CR    R3,R4              DONE?
         BL    RLOOP              NO->CONTINUE
         SPACE 1
RERR     LA    R1,0               SET NO FOUND AND SPLIT
         MVI   RETCODE,64         YES->SET RC=64
         LM    R3,R8,SAVEREGS     RESTORE REGISTERS
         BR    R9                 EXIT LOCVAR WITH ERROR
         SPACE 1
GOTIT    EQU   *
         L     R1,0(,R3)          GET VALUE ADDR
         LM    R3,R8,SAVEREGS     RESTORE REGISTERS
         BR    R9                 RETURN
         SPACE 1
EXCLC    CLC   0(0,R7),8(R3)      EXECUTED
         EJECT
*.....................................................................*
* SUBROUTINE SETVAR:                                                  *
*                                                                     *
* PURPOSE:  MOVE STUFF FROM DESIRED FIELD INTO CLIST VARIABLE FIELD   *
*                                                                     *
* ON ENTRY (R1) = ADDR CLIST VAR POINTER                              *
*          (R15)= ADDRESS OF INPUT FIELD (THE MOVEE...)               *
*          (R14) = LENGTH OF INPUT FIELD (L'MOVEE......)              *
*                                                                     *
*   BAL  R9,SETVAR                                                    *
*                                                                     *
*   ON RETURN:                                                        *
*                                                                     *
*.....................................................................*
         SPACE
*
SETVAR   DS    0H                 R1->VALUE TABLE ENTRY
         STM   R2,R4,SAVEREGS
ROOMCHK  CH    R14,2(,R1)         ROOM FOR INPUT?
         BNH   SM                 YES->MOVE IT.
         MVI   RETCODE,32         SET RC=32
         LH    R14,2(,R1)         NO ->GET HIS LENGTH
SM       BCTR  R14,0              R14=R14-1 = MACHINE LENGTH
         SPACE 1
SKIPCPRS DS    0H
         SPACE 1
         CLI   0(R15),C' '        IS FIRST CHAR A BLANK?
         BE    SETNULL            YEP...SKIP MOVE AND SET LENG=0
         EX    R14,SMOVE          MOVE IT
         LA    R14,1(,R14)        BUMP REAL COUNT
UPDTCNT  STH   R14,0(,R1)         AND SAVE COUNT AWAY
         LM    R2,R4,SAVEREGS
         BR    R9
         SPACE 1
SETNULL  SR    R14,R14
         B     UPDTCNT
         SPACE 1
SMOVE    MVC   4(0,R1),0(R15)     EXECUTED
SAVEAREA DS    18F
SAVEREGS DS    16F
RETCODE  DC    X'00'
*
VARNAME  DC    A(0)
VARLEN   DC    H'0'
VALNAME  DC    A(0)
VALLEN   DC    H'0'
*
ECTADDR  DC    F'0'
         END
