DAHB     TITLE 'DATA AREA HANDBOOK GENERATION PROGRAM   V3'
*---------------------------------------------------------------------*
*        NAME: DAHANDBK                                               *
*---------------------------------------------------------------------*
*        DESCRIPTIVE NAME = DATA AREA HANDBOOK GENERATOR              *
*---------------------------------------------------------------------*
*                                                                     *
*        FUNCTION :  THIS PROGRAM IS DESIGNED TO GENERATE             *
*        A DATA AREA HANDBOOK SIMILIAR TO THE MVS DEBUGGING           *
*        HANDBOOK.  IT DOES THIS BY:                                  *
*                                                                     *
*        1) READING THE OUTPUT OF AN ASSEMBLY OF ALL MAPPING          *
*           MACROS DESIRED TO BE INCLUDED IN THE HANDBOOK             *
*                                                                     *
*        2) DETERMINING IF IT HAS A MACRO, COMMENT, DATA              *
*           EQUATE OR 'CALLED' MACRO.                                 *
*                                                                     *
*        3) DETERMINE IF THERE IS A LABEL, IF SO THEN THAT IS         *
*           USED FOR THE TABLE OF CONTENTS.  IF NOT THEN THE          *
*           MACRO ITSELF BECOMES THE NAME FOR THE TOC.                *
*                                                                     *
*        4) SAVES  OFFSET, SYMBOL AND EQU VALUE                       *
*           NOTE: THE EQU VALUE PRINTED IS EDITED FOR ONLY            *
*           THE SIGNIFICANT BYTE.                                     *
*                                                                     *
*        5) AT END OF MACRO DEFINITION - SORT THE SAVED               *
*           ENTRIES TO GENERATE A CROSS-REFERENCE USING               *
*           A SLICK BUBBLE SORT.                                      *
*---------------------------------------------------------------------*
*                                                                     *
*        NOTE: 'CALLED' MACROS ARE DETERMINED BY A GENERATED          *
*              COMMENT IDENTIFYING THEM WITH IATY IN COL 50           *
*              (THIS IS A JES3 CONVENTION ONLY)                       *
*                                                                     *
*        NOTE 2: ALL CODE IS ASSUMED TO BE PROPERLY ALIGNED           *
*                                                                     *
*---------------------------------------------------------------------*
*PARM:          'L=XX,TITLE'                                          *
*               WHERE L=XX IS THE PAGE SIZE AND IS OPTIONAL AND IF    *
*               SPECIFIED MUST BE FIRST.                              *
*               THE TITLE CONSISTS OF UP TO 45 CHARACTERS             *
*               TO BE PRINTED ON THE TOP AND BOTTOM OF EVERY PAGE     *
*        DEFAULT: DATA AREA HANDBOOK                                  *
*---------------------------------------------------------------------*
*        JCL:                                                         *
*        EXEC PGM=DAHANDBK,PARM='XXX'                                 *
*        INPUT DD : OUTPUT OF ASSEMBLER                               *
*        TITLE DD : GENERATED TABLE OF CONTENTS                       *
*        OUTPUT DD: GENERATED HANDBOOK                                *
*---------------------------------------------------------------------*
*        ABENDS:                                                      *
*                                                                     *
*        1 - INVALID LENGTH PARM                                      *
*            DROP PARM SIZE BACK TO 45 OR LESS CHARACTERS             *
*                                                                     *
*        2 - EXCEEDED 4000 ENTRY TABLE FOR SYMBOLS                    *
*            CHANGE LABEL TABSIZ                                      *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
*        MACROS USED:                                                 *
*        $PROLOG, $EPILOG, BITSW, IFON, IFOFF, SETON, SETOF           *
*        ABEND, OPEN, CLOSE, DCB, GET, PUT, GETMAIN, FREEMAIN         *
*        $STCK                                                        *
*                                                                     *
*        THESE MACROS ARE COMPLIMENTS OF IBM AND THE SHARE MVS TAPE   *
*---------------------------------------------------------------------*
*        AUTHOR: LIONEL DYCK                                          *
*                ROCKWELL INTERNATIONAL                               *
*                P.O. BOX 2515                                        *
*                SEAL BEACH, CALIF 90740                              *
*                (213) 596-9473                                       *
*---------------------------------------------------------------------*
*        THIS PROGRAM IS A QUICK AND DIRTY ATTEMPT TO REMEDY          *
*        WHAT IBM DOES NOT SEE AS A PROBLEM.  THIS PROGRAM            *
*        COMES WITH NO GUARENTEE ALTHOUGH THE AUTHOR WILL BE          *
*        HAPPY TO ACCEPT ANY IMPROVEMENTS THAT YOU MAKE.              *
*---------------------------------------------------------------------*
*        NOTE : THIS PROGRAM HAS BEEN TESTED WITH THE JES3 1.3.1      *
*               MACROS ASSEMBLED USING THE ASSEMBLER H.               *
*---------------------------------------------------------------------*
*---------------------------------------------------------------------*
         EJECT
DAHANDBK $PROLOG R11,R12
         EJECT
*---------------------------------------------------------------------*
*        PROCESS THE PARM:  THE PARM CAN CONTAIN ANY COMMENT TO BE    *
*        PLACED ON THE TOP AND BOTTOM OF EACH PAGE WITH THE DATE-TIME *
*---------------------------------------------------------------------*
         SPACE
         L     1,0(1)             * LOAD ADDR OF PARM
         LH    2,0(1)             * LOAD LENGTH OF PARM
         LTR   2,2                * LENGTH OF ZERO
         BZ    NOPARM             * NO - BYPASS MOVE
         LA    R3,2(R1)
         CLC   =C'L=',2(R1)        LINES PER PAGE SPECIFIED ?
         BNE   CKLEN
         LA    R3,2(R1)
         PACK  LINEPPG,2(2,R3)
         LA    R3,3(R3)
         SH    R2,=H'07'           REDUCE LENGTH FOR TITLE MOVE
CKLEN    CH    R2,=H'45'          * CHECK MAX LENGTH
         BH    BADPARM            * INVALID LENGTH PARM
         BCTR  2,0                * SUBTRACT LENGTH BY 1
         LTR   R2,R2
         BZ    NOPARM
         BM    NOPARM
         EX    2,MVPARM           * EXECUTE THE MOVE
         B     GOTPARM
BADPARM  ABEND 1                  * LET EVERYONE KNOW OF IT
MVPARM   MVC   PARM(0),0(R3)
NOPARM   EQU   *
         MVC   PARM,DPARM
GOTPARM  EQU   *
         SP    LINEPPG,=P'02'      REDUCE BY 2 FOR BOTTOM OF PAGE
         ZAP   DWK,LINEPPG
         SP    DWK,=P'05'      REDUCE BY 5 LINES
         CVB   R6,DWK              CONVERT TO BINARY
         LR    R5,R6
         SR    R4,R4
         M     R4,=A(SYML)         MULTIPLY BY ENTRY LENGTH
         ST    R5,COL2PTR          AND SAVE FOR FUTURE
         ST    R6,COL#             SAVE COLUMNS PER PAGE
         MVC   COVPARM,PARM
         MVC   BPARM,PARM
         MVC   TPARM,PARM
         EJECT
         $STCK NOGEN
         SPACE
         MVC   TLDATE,DATE
         MVC   COVDATE,DATE
         EJECT
         OPEN  (MAPIN,,BOOKOUT,OUTPUT,TITLE,OUTPUT)
         PUT   TITLE,COV1
         LA    R2,15
PT       PUT   TITLE,BLANKS
         BCT   R2,PT
         PUT   TITLE,COV2
         PUT   TITLE,BLANKS
         PUT   TITLE,BLANKS
         PUT   TITLE,COV3
         PUT   TITLE,COV1
         L     R2,TABSIZ
         GETMAIN R,LV=(R2)
         ST    R1,TBLA            SAVE TABLE ADDRESS
         AR    R1,R2
         ST    R1,TABEND          SAVE END OF TAB ADDR
         L     R2,=A(SYML)        LOAD ENTRY LENGTH
         ST    R2,TABENT          SAVE
         USING TABLE,R5
         LM    R5,R7,TABLM
         SR    R7,R6              -> END OF TABLE-1 ENTRY FOR BXLE
CLRALL   EQU   *
         XC    SYM(SYML),SYM      CLEAR TABLE
         BXLE  R5,R6,CLRALL
         LM    R5,R7,TABLM        AND LOAD IT
         SR    R7,R6              -> END OF TABLE-1 ENTRY FOR BXLE
         SR    R9,R9              INIT COUNTER
READ     GET   MAPIN
         LR    R4,R1              SAVE -> INPUT RECORD
         CLI   39(R4),C'0'        ANYTHING HERE
         BL    READ               NO - KEEP LOOKING
         CLI   40(R4),C'*'        COMMENT ?
         BE    READ
         CLC   40(2,R4),=C'+*'    GENERATED COMMENT ?
         BNE   CKMAC              NO CHECK FOR MACRO
         CLC   50(4,R4),=C'IATY'  JES3 INNER MACRO
         BE    INNERMAC           YES
         B     READ               IGNORE THE RESET OF THE CARDS
CKMAC    CLI   40(R4),C'+'        GENERATED CARD ?
         BE    GENED              YES
         CLI   40(R4),C' '        POSSIBLE MACRO CARD ?
         BE    GETMACNM           YES - GET MACRO NAME
         B     READ               IGNORE THE RESET OF THE CARDS
GENED    EQU   *                  IGNORE NON-DESIRED CODE
         CLC   41(8,R4),BLANKS    LABEL PRESENT ?
         BE    READ               NO - SKIP THIS CARD
         MVC   SYM,41(R4)         MOVE LABEL
         MVC   OLSYM,SYM          MOVE TO OUTPUT LINE
         CLC   50(3,R4),=C'EQU'   IS THIS AN EQUATE ?
         BE    ISEQU              YES
         CLC   =C'DSECT',50(R4)   IS THIS A DSECT   ?
         BE    ISDSECT            YES
         CLC   =C'DS',50(R4)      A DS ?
         BE    ISDS               YES
         CLC   =C'DC',50(R4)      A DC ?
         BNE   READ               NO - SKIP THIS RECORD
ISDS     EQU   *
         LA    R1,OLDEF           -> OUTPUT DEF
         LA    R2,56(R4)          -> INPUT DEF
         LA    R3,12              LOAD MAX LEN OF DEFINITION
MVDEF    CLC   0(2,R2),=CL2' '    END OF DEF
         BE    MVOFF              YES
         CLI   0(R2),X'7D'        ' ?
         BE    MVDEFL
         CLC   0(3,R2),=C' - '
         BE    MVOFF
         MVC   0(1,R1),0(R2)      MOVE DEF TO OUTPUT
         LA    R1,1(R1)           INCR -> OLDEF
         LA    R2,1(R2)           INCR -> DEFINITION
         BCT   R3,MVDEF           KEEP LOOPING
         B     MVOFF
MVDEFL   EQU   *
         MVC   0(1,R1),0(R2)      MOVE DEF TO OUTPUT
         LA    R1,1(R1)           INCR -> OLDEF
         LA    R2,1(R2)           INCR -> DEFINITION
         CLC   0(2,R2),=X'7D40'   END OF DEF ?
         BE    MVLST              YES
         BCT   R3,MVDEFL          KEEP LOOPING
         B     MVOFF
MVLST    MVC   0(1,R1),0(R2)      MOVE LAST CHAR OF DEF
MVOFF    MVC   OFF,3(R4)          MOVE OFFSET OF LABEL
         MVC   OLOFF,OFF          MOVE OFFSET TO OUTPUT LINE
         MVC   SOFF,OFF           MOVE OFFSET OF SAVE FOR EQU
FCOMM    LA    R2,51              LOAD LEN OF COMMENTS SEARCH
         LA    R8,56(R4)          -> START OF OPERANDS
FINDCOM  EQU   *
         CLI   0(R8),C' '         BLANK ?
         BE    FBLANK             YES
         LA    R8,1(R8)           -> NEXT CHAR
         BCT   R2,FINDCOM         KEEP LOOPING
FBLANK   EQU   *
         CLI   0(R8),C' '         BLANK ?
         BE    FBLOOP             YES
         CLI   0(R8),C'-'         DASH  ?
         BE    FBLOOP             YES
         CLI   0(R8),C''''        QUOTE ?
         BNE   DOCOMM             NO
FBLOOP   LA    R8,1(R8)           -> NEXT CHAR
         BCT   R2,FBLANK          KEEP LOOPING
DOCOMM   EX    R2,MOVECOMM
         B     INCRSYM
MOVECOMM MVC   OLCOMM(0),0(R8)    MOVE COMMENT (EXECUTED)
ISDSECT  MVC   OLCOMM(11),=C'DSECT LABEL'
         SETON ISDSCT
         B     PUTIT              SKIP INCR AND PUTIT
ISEQU    MVC   OFF,SOFF
         OC    VAL(9),BLANKS      INIT VAL AS BLANKS
         CLI   26(R4),C'A'
         BL    NOTFEQU
         MVC   VAL(8),26(R4)
         MVI   VALQ,X'7D'
         MVI   VALQB,X'7D'
         MVI   OLX2,X'7D'
         B     GOTEQU
NOTFEQU  EQU   *
         CLC   28(2,R4),=C' 0'    3 BYTE EQU ?
         BE    NOT3EQU
         MVC   VAL(6),28(R4)
         MVI   VAL+6,X'7D'
         CLI   VAL,C' '           BLANK FOR 1ST
         BNE   GOTEQU             NO
         OI    VAL,X'F0'          YES - MAKE ZERO
         B     GOTEQU
NOT3EQU  CLC   30(2,R4),=C'00'    HALF WORD EQU ?
         BE    NOTHEQU
         MVC   VAL(4),30(R4)
         MVI   VAL+4,X'7D'
         B     GOTEQU
NOTHEQU  EQU   *                  ASSUME 1 BYTE EQU
         MVC   VAL(2),32(R4)      MOVE EQU VALUE
         MVI   VAL+2,X'7D'
GOTEQU   MVC   OLVAL,VAL          MOVE EQU VALUE
         MVC   OLX1,=C'X'''
         SETON EQU                FLAG AS EQU
         B     FCOMM              GO FIND COMMENT
INCRSYM  EQU   *
         LA    R9,1(R9)           INCR COUNTER
         BXLE  R5,R6,CLRENT       CLEAR NEXT ENTRY
         ABEND 2                  END OF TABLE
CLRENT   EQU   *
         XC    SYM(SYML),SYM
         B     PUTIT
GETMACNM EQU   *
         CLI   50(R4),C' '        NO MACRO NAME
         BE    IGNORE             YES - ASSUME PROPER ALIGNMENT
         CLC   50(3,R4),=C'END'   IS THIS THE END ?
         BE    IGNORE             YES - IGNORE IS
         CLC   =C'COPY',50(R4)    IS THIS A COPY  ?
         BE    IGNORE             YES - IGNORE IS
         CLC   =C'DS ',50(R4)     IS THIS A DS    ?
         BE    IGNORE             YES - IGNORE IS
         CLC   =C'DC ',50(R4)     IS THIS A DC    ?
         BE    IGNORE             YES - IGNORE IS
         CLC   =C'EQU ',50(R4)    IS THIS AN EQU  ?
         BE    IGNORE             YES - IGNORE IS
         CLC   =C'COPY',50(R4)    IS THIS A COPY  ?
         BE    IGNORE             YES - IGNORE IS
         CLC   50(5,R4),=C'DSECT'  IS THIS A DSECT CARD ?
         BE    IGNORE             YES - IGNORE IT
         CLC   50(5,R4),=C'PRINT'  IS THIS A PRINT CARD ?
         BE    IGNORE             YES - IGNORE IT
         IFON  HAVEMAC,DOSORT
DOIT     EQU   *
         SETON HAVEMAC
         CLI   41(R4),C' '        LABEL PRESENT ?
         BE    NOLAB              USE MACRO ITSELF FOR TITLE
         MVC   TITLEMAC(50),BLANKS
         MVC   TITLEMAC,41(R4)    MACRO LABEL
         B     MVB
NOLAB    MVC   TITLEMAC(50),50(R4)  MOVE MACRO ITSELF
MVB      MVC   OLINE,BLANKS
         MVC   TLMAC,BLANKS
         LA    R1,TLMAC
         LA    R2,TITLEMAC
         LA    R3,8
MTL1     CLI   0(R2),C' '           END OF TLMAC ?
         BE    DTL2                YES
         MVC   0(1,R1),0(R2)
         LA    R2,1(R2)
         LA    R1,1(R1)
         BCT   R3,MTL1
DTL2     MVC   TLMAC2,BLANKS
         LA    R1,TLMAC2+7
         LA    R2,TITLEMAC+7
         LA    R3,8
MBM      CLI   0(R2),C' '
         BE    MINC
         MVC   0(1,R1),0(R2)
         BCTR  R1,R0
MINC     BCTR  R2,R0
         BCT   R3,MBM
         MVC   OLSYM(L'TITLEMAC),50(R4)
         SETON TITPAGE,EQU
         B     NEWPAGE
INNERMAC EQU   *
         MVC   INNMAC,50(R4)      MOVE INNER MACRO NAME
         SETON INMAC
         B     DOTIT
IGNORE   EQU   *
         B     READ
COMMCARD EQU   *
         MVC   OLSYM(80),40(R4)
PUTIT    EQU   *
         AP    LINECTR,=P'01'
         CP    LINECTR,LINEPPG
         BNL   NEWPAGE
         B     PUTOL
NEWPAGE  EQU   *
         IFON  TITPAGE,NOLAST
         IFON  EQU,NOD
         PUT   BOOKOUT,DASHLINE
NOD      EQU   *
         AP    LINECTR,=P'01'
         CP    LINECTR,LINEPPG
         BNL   DOLAST
         PUT   BOOKOUT,BLANKS
         B     NOD
DOLAST   EQU   *
         MVC   BOTMAC1,TLMAC
         MVC   BOTMAC2,TLMAC2
         MVC   BPAGE1,PAGE
         MVC   BPAGE2,PAGE
         PUT   BOOKOUT,BOTTEMTL
         PUT   BOOKOUT,BOTTEMTO
NOLAST   EQU   *
         ZAP   LINECTR,=P'04'
         AP    PAGECTR,=P'01'
         UNPK  PAGE(5),PAGECTR
         OI    PAGE+4,X'F0'
         IFOFF TITPAGE,NPUT
         MVC   TITLEPAG,PAGE
DOTIT    AP    TITLEPC,=P'01'
         CP    TITLEPC,LINEPPG
         BL    NTPUT
         PUT   TITLE,TITLETL
         PUT   TITLE,BLANKS
         PUT   TITLE,TITLE2
         PUT   TITLE,TITLE3
         PUT   TITLE,BLANKS
         ZAP   TITLEPC,=P'03'
NTPUT    IFON  INMAC,CLRINMAC
         PUT   TITLE,TITLEL
NPUT     SETOF TITPAGE
         PUT   BOOKOUT,TL1
         PUT   BOOKOUT,BLANKS
         PUT   BOOKOUT,BLANKS
PUTOL    EQU   *
         IFON  EQU,CLRLINE
         IFON  ISDSCT1,CLRLINE
         PUT   BOOKOUT,DASHLINE
CLRLINE  EQU   *
         PUT   BOOKOUT,OLINE
         MVC   OLINE,BLANKS       CLEAR OUTPUT LINE
         SETOF EQU,ISDSCT1
         IFOFF ISDSCT,READ
         PUT   BOOKOUT,DASHLINE
         SETOF ISDSCT
         SETON ISDSCT1
         B     READ
CLRINMAC SETOF INMAC
         MVC   TITLENPG,PAGE
         PUT   TITLE,TITLEIM
         B     READ
         EJECT
*------- START OF SORT ROUTINE ------------------------------------*
         SPACE
DOSORT   EQU   *
         LTR   R9,R9              ANY TO SORT
         BZ    ENDTBLP            NO - SKIP IT
         PUT   BOOKOUT,DASHLINE
         MVC   BOTMAC1,TLMAC
         MVC   BOTMAC2,TLMAC2
CKLAST   AP    LINECTR,=P'01'
         CP    LINECTR,LINEPPG
         BNL   DOLASTS
         PUT   BOOKOUT,BLANKS
         B     CKLAST
DOLASTS  EQU   *
         MVC   BPAGE1,PAGE
         MVC   BPAGE2,PAGE
         PUT   BOOKOUT,BOTTEMTL
         PUT   BOOKOUT,BOTTEMTO
DOSORTIT LM    R5,R6,TBLA         -> TABLE
         LR    R10,R9             COUNT OF ENTRIES TO SORT
SORTL1   EQU   *
         CLC   SYM,SYML(R5)
         BNH   BUMPIT
         XC    SYM(SYML),SYML(R5)  SWAP
         XC    SYML(SYML,R5),SYM  ENTRIES
         XC    SYM(SYML),SYML(R5)  QUICKLY
BUMPIT   AR    R5,R6
         BCT   R10,SORTL1
         BCT   R9,DOSORTIT
         SPACE
*------- END OF SORT ROUTINE --------------------------------------*
         EJECT
         AP    PAGECTR,=P'01'
         UNPK  PAGE(5),PAGECTR
         OI    PAGE+4,X'F0'
         PUT   BOOKOUT,TL1
         PUT   BOOKOUT,TLS2
         PUT   BOOKOUT,TL2
         PUT   BOOKOUT,CTITLE
         PUT   BOOKOUT,CTD
         ZAP   LINECTR,=P'04'
         LM    R5,R7,TABLM
         SR    R7,R6              -> END OF TABLE-1 ENTRY FOR BXLE
         CLI   SYM,X'00'          1ST ENT NULL ?
         BNE   FIRSTOK
         AR    R5,R6              -> SECOND ENTRY WHICH IS GOOD
FIRSTOK  L     R3,COL#            ENTRIES PER COLUMN VALUE
         LR    R8,R5              -> TO FIRST COLUMN
         A     R8,COL2PTR          AND POINT TO COL 2
         USING TABLEB,R8
PLOOP    EQU   *
         CLI   SYM,X'00'          NULL ENTRY
         BE    ENDTBLP
         MVC   COLSYM,SYM
         MVC   COLOFF,OFF
         CLI   VAL,C'A'
         BL    NOVALA
         MVC   COLX1,=C'X'''
         MVC   COLVAL,VAL
         OC    COLOFF,BLANKS      INSURE REAL CHARS
NOVALA   CLI   SYMB,C'A'          NULL ENTRY
         BL    LASTCOLB           YES
         MVC   COLSYMB,SYMB
         MVC   COLOFFB,OFFB
         CLI   VALB,C'A'
         BL    NOVALB
         MVC   COLX1B,=C'X'''
         MVC   COLVALB,VALB
         OC    COLOFFB,BLANKS     INSURE REAL CHARS
NOVALB   AP    LINECTR,=P'01'
         CP    LINECTR,LINEPPG
         BNL   NEWPAGES
         B     PUTOLS
LASTCOLB EQU   *
         SETON LCOLB
         B     NOVALB
NEWPAGES EQU   *
         IFON  LCOLB,ENDTBLP
         MVC   BPAGE1,PAGE
         MVC   BPAGE2,PAGE
         MVC   BOTMAC1,TLMAC
         MVC   BOTMAC2,TLMAC2
CKLASTS  AP    LINECTR,=P'01'
         CP    LINECTR,LINEPPG
         BNL   DOLASTSX
         PUT   BOOKOUT,BLANKS
         B     CKLASTS
DOLASTSX PUT   BOOKOUT,BOTTEMTL
         PUT   BOOKOUT,BOTTEMTO
         IFON  EOFFLG,STOPALL
         IFON  ENDCROS,OFFCROS
         L     R3,COL#            ENTRIES PER COLUMN VALUE
         LR    R5,R8
         SR    R5,R6
         LR    R8,R5           -> TO FIRST COLUMN
         A     R8,COL2PTR          AND POINT TO COL 2
         SR    R8,R6               REDUCE BY 1
         ZAP   LINECTR,=P'05'
         AP    PAGECTR,=P'01'
         UNPK  PAGE(5),PAGECTR
         OI    PAGE+4,X'F0'
         PUT   BOOKOUT,TL1
         PUT   BOOKOUT,TLS2
         PUT   BOOKOUT,TL2
         PUT   BOOKOUT,CTITLE
         PUT   BOOKOUT,CTD
PUTOLS   EQU   *
         PUT   BOOKOUT,OLINE
         MVC   OLINE,BLANKS       CLEAR OUTPUT LINE
INCRIT   LA    R8,SYML(R8)
         LA    R5,SYML(R5)
         CR    R8,R7              END OF TABLE ?
         BNL   ENDTBLP            YES
         CR    R5,R7              END OF TABLE ?
         BNL   ENDTBLP            YES
         BCT   R3,PLOOP
         B     NEWPAGES
ENDTBLP  EQU   *
         SETOF LCOLB
         SETON ENDCROS
         B     NEWPAGES
OFFCROS  SETOF ENDCROS
         EJECT
         LM    R5,R7,TABLM
         SR    R7,R6              -> END OF TABLE-1 ENTRY FOR BXLE
CLRLOOP  EQU   *
         XC    SYM(SYML),SYM      CLEAR TABLE
         BXLE  R5,R6,CLRLOOP
         LM    R5,R7,TABLM
         SR    R7,R6              -> END OF TABLE-1 ENTRY FOR BXLE
         SR    R9,R9              INIT COUNTER
         B     DOIT
STOPALL  EQU   *
         CLOSE (MAPIN,,BOOKOUT)
         L     R2,TABSIZ
         L     R3,TBLA
         FREEMAIN  R,LV=(R2),A=(R3)
         $EPILOG
         SPACE
EOF      SETON EOFFLG
         B     DOSORT
         EJECT
         PRINT NOGEN
MAPIN    DCB   DSORG=PS,MACRF=GL,DDNAME=INPUT,EODAD=EOF
BOOKOUT  DCB   DSORG=PS,MACRF=PM,DDNAME=OUTPUT,LRECL=80,RECFM=FBA
TITLE    DCB   DSORG=PS,MACRF=PM,DDNAME=TITLE,LRECL=80,RECFM=FBA
         PRINT GEN
         EJECT
         LTORG
         BITSW ISDSCT1,ISDSCT,INMAC,EQU,HAVEMAC,EOFFLG,TITPAGE,LCOLB
         BITSW ENDCROS
TABLM    DS    0F
TBLA     DS    F                  START OF TABLE
TABENT   DS    F                  ENTRY SIZE
TABEND   DS    F                  END OF TABLE
TABSIZ   DC    A(SYML*4000)       SIZE OF TABLE FOR GET-FREEMAIN
         SPACE
DWK      DS    D
COL#     EQU   DWK,4
COL2PTR  EQU   DWK+4,4
BLANKS   DC    CL80' '
         SPACE
SOFF     DS    CL4                SAVE FOR OFFSET
DAY      DS    C
PAGECTR  DC    PL3'0'
LINECTR  DC    PL2'99'
TITLEPC  DC    PL2'99'
LINEPPG  DC    PL2'54'            LINES PER PAGE
TLMAC    DC    CL8' '
TLMAC2   DC    CL8' '
PAGE     DC    CL5' '
TIME     DC    CL8' '
         SPACE
DASHLINE DC    CL2'+',76C'_',CL2' '
         SPACE
TITLETL  DC    CL80'1'
         ORG   TITLETL+6
         DC    C'TABLE OF CONTENTS  '
TPARM    DC    CL45' '
         ORG   TITLETL+66
DATE     DC    CL8' '
         ORG
TITLE2   DC    CL80' '
         ORG   TITLE2+6
         DC    C'MACRO  '
         ORG   TITLE2+71
         DC    C'PAGE'
         ORG
TITLE3   DC    CL80'+'
         ORG   TITLE3+6
         DC    69C'_'
         ORG
         SPACE
TITLEIM  DC    CL80' '
         ORG   TITLEIM+8
INNMAC   DC    CL8' '
         ORG   TITLEIM+70
TITLENPG DC    CL5' '
         ORG
         SPACE
TITLEL   DC    CL80' '
         ORG   TITLEL+6
TITLEMAC DC    CL8' '
         ORG   TITLEL+70
TITLEPAG DC    CL5' '
         ORG
BOTTEMTL DC    CL80'0'
         ORG   BOTTEMTL+2
BOTMAC1  DC    CL8' '
         ORG   BOTTEMTL+70
BOTMAC2  DC    CL8' '
         ORG
BOTTEMTO DC    CL80' '
         ORG   BOTTEMTO+2
BPAGE1   DC    CL5' ',CL5' '
         DC    CL8' '
BPARM    DC    CL45' '
         ORG   BOTTEMTO+68
         DC    CL5' '
BPAGE2   DC    CL5' '
         ORG
         SPACE
CTITLE   DC    CL80' '
         ORG   CTITLE+5
         DC    C'SYMBOL',CL5' '
         DC    C'OFFSET  '
         ORG   CTITLE+40
         DC    C'SYMBOL',CL5' '
         DC    C'OFFSET  '
         ORG
CTD      DC    CL80'+'            UNDERLINE FOR CTITLE
         ORG   CTD+5
         DC    6C'_',CL5' '
         DC    6C'_'
         ORG   CTD+40
         DC    6C'_',CL5' '
         DC    6C'_'
         ORG
         SPACE
OLINE    DC    CL80' '
         ORG   OLINE+2
OLOFF    DC    CL4' '             OFFSET
         DC    CL3' '
OLSYM    DC    CL8' '             LABEL
         DC    CL3' '
OLX1     DC    CL2' '
OLVAL    DC    CL8' '             EQUATE VALUE
OLX2     DC    C' '
         ORG   OLX1
OLDEF    DC    CL13' '            DEFINITION
         ORG   OLX1+11
         DC    CL4' '
OLCOMM   DC    CL50' '            COMMENTS
         SPACE
         ORG   OLINE+5            CROSS REF LINE
COLSYM   DC    CL8' '             SYMBOL
         DC    CL3' '
COLOFF   DC    CL4' '             OFFSET
         DC    C' '
COLX1    DC    CL2' '
COLVAL   DC    CL9' '
         ORG   OLINE+40
COLSYMB  DC    CL8' '             SYMBOL
         DC    CL3' '
COLOFFB  DC    CL4' '             OFFSET
         DC    C' '
COLX1B   DC    CL2' '
COLVALB  DC    CL9' '
         ORG
TLS2     DC    CL80' '
         ORG   TLS2+5
         DC    C'CROSS REFERENCE '
         ORG
TL1      DC    CL80'1'
         ORG   TL1+5
PARM     DC    CL45' '
         DC    CL14' ',C'DATE: '
TLDATE   DC    CL8' '
         ORG
DPARM    DC    CL45'DATA AREA HANDBOOK '
TL2      DC    CL80' '
         EJECT
COV1     DC    CL80'1'
COV2     DC    CL80' '
         ORG   COV2+30
COVPARM  DC    CL45' '
         ORG
COV3     DC    CL80' '
         ORG   COV3+30
         DC    C'DATE '
COVDATE  DC    CL8' '
         ORG
         EJECT
         DSECT
TABLE    EQU   *
SYM      DS    CL8
OFF      DS    CL4
VAL      DS    CL8
VALQ     DS    C
SYML     EQU   *-SYM
         SPACE
         DSECT
TABLEB   EQU   *
SYMB     DS    CL8
OFFB     DS    CL4
VALB     DS    CL8
VALQB    DS    C
SYMBL    EQU   *-SYMB
         SPACE
         END
