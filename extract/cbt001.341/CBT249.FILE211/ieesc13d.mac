IEESC03D CSECT
  TITLE 'IEESC03D  -  #L  -  LIST TSO LINES AND THEIR USERS.       '
***********************************************************************
*
*        IEESC03D - PRINT OUT TP JOB NAME OR TSO USERID, ASID
*                   AND TCAM LINE ADDRESS
*
*        ON ENTRY :
*                  R2  = A(EXTENDED SAVE-AREA)
*                  R15 = ENTRY POINT
*
*        CSECT  NAME : IEESC03D
*        MODULE NAME : IGCSC03D
*
*        ATTRIBUTES   : REENTRANT, AND REUSABLE
*
*
***********************************************************************
         B     14(0,R15)          BRANCH AROUND ID
         DC    AL1(8)
         DC    CL8'IEESC03D'      IDENTIFIER
         LR    R12,R15            SET ADDRESSABILITY
         USING IEESC03D,R12
         LA    R0,LWKDSECT        SIZE OF SAVE-AREA AND WORK-AREA
         O     R0,SUB241          GET FROM SUB-POOL 241
         GETMAIN R,LV=(0)
         LR    R13,R1
         USING WKDSECT,R13        FIRST 18 WRDS ARE SAVE-AREA
         USING XSA,R2
         XC    0(LWKDSECT,R13),0(R13)  ZERO-OUT WORK AREA
         ST    R14,SAVA           PUT RETURN ADDRESS IN UNUSED SLOT
         ST    R2,XSASAVE         SAVE XSA POINTER
         SR    R3,R3              CLEAR REGISTER
         IC    R3,XAU             R3 = CONSOL ID FOR MCS
         MVI   WTOLIST+2,X'01'    MCSFLAGS = QREG0
         XC    SWTCH,SWTCH        ZERO-OUT SWTCH
         LA    R6,BUFFER          START OF BUFFER
         MVI   BUFFER,C' '        BLANK-OUT BUFFER
         MVC   BUFFER+1(49),BUFFER
         LA    R7,2               ENTRIES PER LINE
         L     R11,16             CVT ADDR
         L     R9,556(0,R11)      LOAD ASVT ADDR
         LA    R9,520(0,R9)       ASVT ENTRY ADDR
         B     NEXTONE            GO GET ASCB
         EJECT
***********************************************************************
*
*        LOOP THRU ALL ASCBS
*
***********************************************************************
LOOP1    LM    R10,R11,56(R8)      LOAD CSCB/TSB ADDR
         LTR   R11,R11             ANY TSB
         BZ    NEXTONE             NO, NOT TP USER
         MVI   SWTCH,X'F0'         OUTPUT EXISTS
         MVC   1(8,R6),8(R10)      JOBNAME
         MVI   10(R6),C'('         BRACKET ASCB
         UNPK  11(5,R6),36(3,R8)   UNPACK ASID
         NC    11(4,R6),=4X'0F'       AND
         TR    11(4,R6),=C'0123456789ABCDEF' TRANSLATE
         MVI   15(R6),C')'         BRACKET ASID
         MVI   17(R6),C'-'
         UNPK  18(5,R6),82(3,R11)  UNPACK LINE ADDR
         NC    19(3,R6),=4X'0F'       AND
         TR    19(3,R6),=C'0123456789ABCDEF' TRANSLATE
         MVI   18(R6),C' '
         MVI   22(R6),C' '
         LA    R6,ENTRYSIZ(0,R6)   INCR INTO BUFFER
         BCT   R7,NEXTONE          NEXT ASCB
         LA    R4,50               MSG LENGTH
         BAL   R14,IOCS            GO WTO
         LA    R7,2                ENTRIES PER LINE
         LA    R6,BUFFER           LOAD BUFFER ADDR
         MVI   0(R6),C' '
         MVC   1(49,R6),0(R6)
         SPACE 3
NEXTONE  LA    R9,4(0,R9)          INCR INTO ASVT
         L     R8,0(0,R9)          LOAD ASCB ADDR
         LA    R8,0(0,R8)          CLEAR HIGH ORDER
         LTR   R8,R8               END OF ASCBS
         BZ    LOOP2               YES, EXIT
         TM    0(R9),X'80'         ASID ASSIGNED
         BO    NEXTONE             NO, CHECK NEXT
         B     LOOP1
         SPACE 3
LOOP2    CH    R7,=H'2'            ANY TO WRITE
         BE    CLEANUP             NO, EXIT
         LA    R4,50               MSG LENGTH
         BAL   R14,IOCS            WRITE LAST
         EJECT
***********************************************************************
*
*        RELEASE ALL CORE AND RETURN
*
***********************************************************************
CLEANUP  TM    SWTCH,X'F0'        DID OUTPUT EXIST ?
         BZ    NOOUTPUT           NO...
         SPACE 2
CLNUPX   LA    R0,LWKDSECT        SIZE OF CORE
         O     R0,SUB241          RETURN TO SUB-POOL 241
         LR    R1,R13             START OF CORE
         L     R14,SAVA
         FREEMAIN R,LV=(0),A=(1)
         SR    R15,R15
         BR    R14                RETURN
         EJECT
***********************************************************************
*
*        I/O CONTROL SECTION
*
*        ON ENTRY :
*                  R2  = XSA BASE. XSW=VECTOR,RETURN,RESERVED
*                  R4  = LENGTH OF MESSAGE
*                  R14 = RETURN ADDRESS
*
***********************************************************************
IOCS     DS    0H
OPER     LA    R4,4(,R4)          ADD CONTROL BYTES TO LENGTH
         STH   R4,WTOLIST         SET LENGTH IN CONTROL FIELD
         ST    R14,XSW+4          KEEP THE RETURN ADDRESS.
         L     R15,XSW            FIND THE IOS ROUTINE.
         LA    R1,WTOLIST         WTO FORMAT MESSAGE.
         BALR  R14,R15            DO THE TPUT/WTO.
         L     R14,XSW+4          PICKUP KLUGE RETURN.
         BR    R14                RETURN
         EJECT
***********************************************************************
*
*        ISSUE ERROR MESSAGES HERE
*
***********************************************************************
NOOUTPUT MVC   BUFFER(LMSG),MSG   SET ERROR MESSAGE
         LA    R4,LMSG
         SPACE 2
         BAL   R14,IOCS
         B     CLNUPX
         EJECT
***********************************************************************
*
*        DSECTS, EQUATES, TABLES, ETC.
*
***********************************************************************
         SPACE 2
         DS    0F                 ALIGN ON FULL WORD BOUNDARY
SUB241   DC    X'F1000000'        MASK FOR SUB-POOL 241
ENTRYSIZ EQU   24                 SIZE OF EACH ENTRY IN BUFFER
MSG      DC    C'   ***    NO ACTIVE TP USERS    ***'
LMSG     EQU   *-MSG
         SPACE 2
WKDSECT  DSECT
SAVA     DS    18F                SAVE-AREA
XSASAVE  DS    F                  EXTENDED SAVE-AREA ADDRESS
WTOLIST  DS    F                  WTO CONTROL WORD
BUFFER   DS    CL50               WTO BUFFER
SWTCH    DS    CL1
LWKDSECT EQU   *-WKDSECT
         SPACE 2
         DSXSA
         REGS
         END
