*          DATA SET CBT386     AT LEVEL 003 AS OF 11/07/76
*          DATA SET CBT386     AT LEVEL 002 AS OF 11/07/76
         MACRO
         REGS
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         MEND
         MACRO
&NAME    PRIME &REG=12,&SAVE=,&ID=,&LV=0
.* PRIME WILL SAVE REGISTERS, CREATE A NEW SAVE AREA, CHAIN THE NEW
.* SAVE AREA TO THE CALLERS SAVE AREA, ESTABLISH ADDRESSABILITY,
.* OPTIONALLY OBTAIN ADDITIONAL STORAGE AND IN GENERAL PERFORM THE
.* NECESSARY ENTRY LINKAGE.
.* IF THE USER DOES NOT SPECIFY WHAT REGISTER HE REQUIRES FOR A BASE,
.* TWELVE IS USED.  NOTE..IF REG= IS SPECIFIED TO BE 0, 1, 13, 14, OR
.* 15  A WARNING MESSAGE IS ISSUED.
.* IF THE USER SPECIFIES A SAVE AREA VIA THE SAVE= OPERAND THEN PRIME
.* WILL CHAIN THE USERS SAVE AREA TO THE CALLERS SAVE AREA. IF THE
.* USER DOES NOT SPECIFY SAVE,THEN PRIME WILL OBTAIN A NEW SAVE AREA
.* VIA THE GETMAIN SVC.  AN ADDITIONAL AMOUNT OF STORAGE MAY BE
.* OBTAINED AT THIS TIME BY SPECIFIEING THE LV=, OPERAND.  IF LV IS NOT
.* SPECIFIED IN REGISTER NOTATION, 4023 IS THE MAXIMUM VALUE.
.* IF THE USER SPECIFIES SAVE=NONE, PRIME WILL NOT OBTAIN A NEW AREA.
.* REG 13 WILL POINT TO THE NEW 18 WORD SAVE AREA FOLLOWED BY THE EXTRA
.* STORAGE AREA.
         LCLA  &A,&B
         LCLC  &E,&F,&G,&H
         MNOTE *,'&REG WILL BE USED AS A BASE REGISTER'
         AIF   ('&NAME' EQ '').NONAME
&NAME    DS    0H
.NONAME  ANOP
         AIF   ('&ID' EQ '').CONT4
         AIF   ('&ID' EQ '*').SPEC
&A       SETA  ((K'&ID+2)/2)*2+4
         BAL   15,&A.(0,15)             GET PGM MASK AND BRANCH AROUND
         USING *,&REG
&A       SETA  K'&ID
         DC    AL1(&A)
.CONTB   AIF   (&A GT 32).SPLIT
.CONTAA  AIF   (&A GT 8).BRAK
&E       SETC  '&ID'(&B+1,&A)
         DC    CL&A'&E'
         AGO   .CONT1
.BRAK    ANOP
&E       SETC  '&ID'(&B+1,8)
         DC    CL8'&E'
&B       SETA  &B+8
&A       SETA  &A-8
         AGO   .CONTAA
.SPLIT   ANOP
&E       SETC  '&ID'(&B+1,8)
&F       SETC  '&ID'(&B+9,8)
&G       SETC  '&ID'(&B+17,8)
&H       SETC  '&ID'(&B+25,8)
         DC    CL32'&E.&F.&G.&H'
&B       SETA  &B+32
&A       SETA  &A-32
         AGO   .CONTB
.SPEC    AIF   ('&NAME' EQ '').CSECTN
&E       SETC  '&NAME'
&A       SETA  1
.CONTQ   AIF   ('&E'(1,&A) EQ '&E').LVE
&A       SETA  &A+1
         AGO   .CONTQ
.LVE     ANOP
&B       SETA  ((&A+2)/2)*2+4
         BAL   15,&B.(0,15)             GET PGM MASK AND BRANCH AROUND
         USING *,&REG
         DC    AL1(&A)
         DC    CL&A'&E'
         AGO   .CONT1
.CSECTN  AIF   ('&SYSECT' EQ '').E4
&E       SETC  '&SYSECT'
&A       SETA  1
         AGO   .CONTQ
.E4      IHBERMAC 78,360
.CONT4   ANOP
         BALR  15,0                     R15 NOW CONTAINS PGM MASK
         USING *,&REG
.CONT1   ANOP
         AIF   ('&REG' EQ '0' OR '&REG' EQ '1' OR '&REG' EQ '13').ERR1
         AIF   ('&REG' EQ '14' OR '&REG' EQ '15').ERR1
.CONT3   ANOP
         DS    0H
         STM   14,12,12(13)             SAVE REGS IN CALLERS AREA
         LR    &REG,15                  SET TRUE BASE EQUAL EP
         AIF ('&SAVE' EQ 'NONE').A
         AIF   ('&SAVE' EQ '').C
         AIF   ('&SAVE'(1,1) EQ '(').F
         LA    1,&SAVE                  SET R1 EQ USERS SAVE ADDRESS
         AGO   .D
.F       ANOP
         AIF   ('&SAVE' EQ '(1)').D
         LR    1,&SAVE(1)               PICK UP USERS SAVE AREA
         AGO   .D
.C       ANOP
         AIF   ('&LV'(1,1) EQ '(').E
.*         AIF   ('&LV' GT '4023').ERR2
         LA    0,&LV.+72(0,0)           PARAMETER FOR GETMAIN
         AGO   .CONT2
.E       ANOP
         AIF   ('&LV' EQ '(0)').CONT2
         LA    0,72(&LV(1).,0)          PARAMETER FOR GETMAIN
.CONT2   ANOP
         BAL   1,*+4                    INDICATE GETMAIN
         SVC   10                       ISSUE SVC 10
         ST    0,0(0,1)                 SAVE LENGTH IN 1ST WORD
.D       ANOP
         XC    4(68,1),4(1)             CLEAR AREA
         ST    1,8(0,13)                CHAIN FORWARD
         ST    13,4(0,1)                CHAIN BACKWARD
         LM    0,1,20(13)               RESET R0 AND R1
         L     13,8(0,13)               SET SAVE AREA REGISTER
.A       ANOP
         MEXIT
.ERR1    MNOTE 'ILLEGAL BASE REGISTER SPECIFIED'
         AGO   .CONT3
.ERR2    MNOTE 'LV GT 4023, LV REQUEST NOT HONORED'
         LA    0,72(0,0)                PARAMETER FOR GETMAIN
         AGO   .CONT2
         MEND
         MACRO
&NAME    TERME &OP=,&SAVE=,&LV=0
.* TERME WILL RESTORE REGISTERS, UNCHAIN SAVE AREAS, RELEASE DYNAMIC
.* STORAGE OBTAINED BY THE PRIME MACRO, RESET THE PGM MASK AND IN
.* GENERAL PERFORM THE NECESSARY EXIT LINKAGE.
.* TERME WILL FREE THE USERS SAVE AREA PLUS THE NUMBER OF BYTES
.* SPECIFIED BY THE LV OPERAND UNLESS THE USER IMPLIES THAT THE SAVE
.* AREA WAS NOT OBTAINED VIA A GETMAIN.  THE USER IMPLIES THIS BY
.* SPECIFYING SAVE= SOME VALUE OR SYMBOL.
.* IF THE USER SPECIFIED SAVE=NONE IN THE PRIME MACRO, HE SHOULD DO
.*  THE SAME FOR TERME.
.* THE USER MAY CHOOSE TO FOLLOW THE TERME MACRO WITH THE XCTL MACRO
.* RATHER THAN BRANCH ON 14.  THE USER ACCOMPLISHES THIS BY CODING
.* OP=XCTL.
         AIF   ('&NAME' EQ '').F
&NAME    DS    0H
.F       ANOP
         AIF ('&SAVE' EQ 'NONE').C
         L     13,4(0,13)              GET PTR TO USERS AREA
         STM   0,1,20(13)               TEMPORARY SAVE OF R0 AND R1
         AIF   ('&SAVE' NE '').C
         AIF   ('&LV'(1,1) EQ '(').E
         AIF   ('&LV' EQ '0').CONT
         AIF   ('&LV' GT '4023').ERR
         LA    0,&LV.+72(0,0)           PARAMETER FOR FREEMAIN
         AGO   .CONT
.E       ANOP
         AIF   ('&LV' EQ '(0)').CONT
         LA    0,72(&LV(1).,0)          PARAMETER FOR FREEMAIN
.CONT    ANOP
         L     1,8(0,13)                GET SAVE AREA ADDRESS
         LA    1,0(0,1)                 INDICATE FREEMAIN
         AIF   ('&LV' NE '0').CONTC
         L     0,0(0,1)                 LENGTH IS IN 1ST WORD OF AREA
.CONTC   ANOP
         SVC   10                       ISSUE SVC 10
.C       ANOP
         L     14,16(0,13)              RESET
         SPM   14                       PGM MASK
         L     14,12(0,13)              RESTORE
         LM    0,12,20(13)              REGISTERS
         XC    8(4,13),8(13)            DEQUEUE SAVE AREA
         AIF   ('&OP' EQ 'XCTL').D
         BR    14                       RETURN TO CALLER
         MEXIT
.D       ANOP
         BALR  15,0                     ESTABLISH ADDRESSABILITY
         USING *,15
         MEXIT
.ERR     MNOTE 'LV GT 4023, LV REQUEST NOT HONORED'
         LA    0,72(0,0)                PARAMETER FOR FREEMAIN
         AGO   .CONT
         MEND
         MACRO
&N       CENTER &M,&LEN=133,&FILL=' '
         LCLA  &AL1,&AL2,&AL3
&AL1     SETA  K'&M
         AIF   ('&M'(1,1) NE '''').A
&AL1     SETA  &AL1-2
.A       ANOP
         AIF   (&AL1 GT &LEN).D
&AL2     SETA  (&LEN-&AL1)/2
&AL3     SETA  &LEN-&AL1-&AL2
.F       ANOP
         AIF   ('&N' EQ '').E
&N       EQU   *
.E       AIF   (&AL3 EQ 0).C
         DC    &AL3.C&FILL
.C       AIF   ('&M'(1,1) EQ '''').B
         DC    CL&AL1'&M'
         AIF   (&AL2 EQ 0).END
         DC    &AL2.C&FILL
         MEXIT
.B       DC    CL&AL1&M
         AIF   (&AL2 EQ 0).END
         DC    &AL2.C&FILL
         MEXIT
.D       ANOP
&AL2     SETA  0
&AL3     SETA  0
         AGO   .F
.END     MEND
SGIN     TITLE 'S G I N D E X --- MAIN PROGRAM'
         MACRO
&N       CALL  &A
&N       L     R15,=A(&A)
         BALR  R14,R15
         MEND
**********************************************************************
* TSSGINDX USES THE OUTPUT FROM STAGE1 TO PRODUCE A CROSS            *
*REFERENCE INDEX OF ALL MAJOR NAMES(LIBRARIES,MODULES,ENTRY POINTS,  *
*ALIASES, MACROS, ETC) IN THE SYSTEM. IT IS ADAPTED FROM A NASA      *
*PROGRAM NAMED SGINDEX.                                              *
*ORIGINAL WORK BY PAUL SASSMAN OF NAVY SECURITY GROUP CIRCA 1971.    *
*MODS TO ADD MVS SUPPORT, 8LPI, AND USE CALCOMPS XYTEX DATE UTILITY  *
*  BY CLARK HUNTER      CHRYSLER PARTS DIVISION                      *
*                       26311 LAWRENCE AVE.                          *
*                       CENTERLINE, MICHIGAN 48015                   *
*                       CIMS 423-10-17                               *
*                       PHONE (313) 497-0548/524/520/533             *
**********************************************************************
*  J C L :                                                           *
*//INDEX     EXEC   PGM=TSSGINDX,REGION=128K                         *
*//STEPLIB   DD     . . .                                            *
*//SYSPRINT  DD     SYSOUT=A  (DCB HARD CODED AT FBA/133/798)        *
*//SYSPUNCH  DD     RESEQUENCED DECK (DCB HARD CODED AT F/80/80)     *
*//SORTMSG   DD     SORT MESSAGES (USE SYSOUT FOR IBM SORT)          *
*//SORTWK01-XX      SORT WORK                                        *
*//*SORTLIB  DD     (FOR IBM SORT)                                   *
*//SYSIN     DD     STAGE 1 OUTPUT                                   *
*                                                                    *
**********************************************************************
         LCLA  &LINCT         LINE COUNTER PER PAGE
&LINCT   SETA  56             75 LINES PER PAGE
SGINDEX  START
         PRIME SAVE=MAINSAVE,ID=SGINDEX
         LM    R11,R12,BASES
         USING SGINDEX,R11,R12
         OPEN  (IN,INPUT,PR,OUTPUT,NEW,OUTPUT)
         MVC   HDR1+116(4),=C'PAGE'
*         MVI   DTVFLAG,GETDATE     GET SYSDATE
*         LA    R1,=A(DTV)          CALL
*         L     R15,=V(XYUTDTTM)    XYTEX DATE CONVERTOR
*         BALR  R14,R15             CALL
*         MVC   HDR1+80(22),REPTFORM
*         MVC   HDR1+80+24(8),DTVCHR
*         L     R15,=V(SYSDATCV)
*         LA    R1,DATEPARM
*         BALR  R14,R15
         LA    R1,SP1
         LINK  EP=SORT
         CALL  PRTPAGE            PRINT LAST PAGE
         CLOSE (IN,,PR,,NEW)
         TERME SAVE=MAINSAVE
         TITLE 'S G I N D E X --- SORT OUTPUT EXIT'
E35      PRIME SAVE=SORTSAVE
         LM    R11,R12,BASES
         USING SGINDEX,R11,R12
         L     R1,0(R1)           ADDRESS OF RECORD
         LTR   R1,R1
         BNZ   E351
         TERME SAVE=SORTSAVE,OP=XCTL
         LA    R15,8              DO NOT RETURN
         BR    R14
         DROP  R15
E351     LM    R3,R4,EX5SAV       R3=ADDRESS, R4= LINE COUNTER
         MVC   0(58,R3),0(R1)
         LA    R3,133(R3)
         BCT   R4,E35TERM         BRANCH IF MORE ROOM THIS COLUMN
         TM    RUNFLAG,COL2
         BO    E35PR              BRANCH IF END OF COL 2
         OI    RUNFLAG,COL2
         LA    R3,OUTPAGE+68
         LA    R4,&LINCT
E35TERM  STM   R3,R4,EX5SAV
         TERME SAVE=SORTSAVE,OP=XCTL
         LA    R15,4              DELETE RECORD
         BR    R14
         DROP  R15
E35PR    CALL  PRTPAGE
         NI    RUNFLAG,255-COL2
         LA    R3,OUTPAGE+2
         LA    R4,&LINCT
         B     E35TERM
         TITLE 'S G I N D E X --- SORT INPUT EXIT - MAIN LINE'
E15      PRIME SAVE=SORTSAVE
         LM    R11,R12,BASES
         USING SGINDEX,R11,R12
         L     R1,WTG
         LM    R3,R4,EX5SAV
         BR    R1                 ALLOWS MULTIPLE RETURN POINTS
INITE15  SR    R3,R3
FIRSTIME MVI   RDRFLAG,REXEC      READ TO NEXT 'EXEC' CARD
         CALL  READER             ..
         MVC   STEP,BLANKS
BEGINA   CLI   INB+2,C' '         IS THERE A STEP NAME
         BE    PGMNM              NO, SKIP THIS
         MVI   SCANFLAG,0
         CALL  FLDSCAN
         MVC   ITEM,FIELD
         MVC   STEP,FIELD
         MVC   USE,=C'STEPNAME'
         MVC   LIB,BLANKS
         MVC   WTG,=A(PGMNM)
         B     E15TERM
PGMNM    MVI   SCANFLAG,SPACE
         CALL  FLDSCAN            RETURNS 'EXEC'
         MVI   SCANFLAG,SPACE+EQUAL
         CALL  FLDSCAN            RETURNS PROGRAM NAME
         CLI   EQFIELD,C' '        BLANK = PROC EXEC
         BNE   NOPROC
         MVC   ITEM,FIELD          USE PROC NAME
         MVC   USE,=CL8'PROCEXEC'
         B     PROCEXEC
NOPROC   DS    0H
         MVC   ITEM,EQFIELD
         MVC   USE,=CL8'EXEC'
PROCEXEC MVC   LIB,BLANKS
         MVC   WTG,=A(WHICH)
         B     E15TERM
WHICH    CLC   EQFIELD(4),=C'IEWL'
         BE    LINKTYPE
         CLC   FIELD(4),=C'LINK'
         BE    LINKMVS
         CLC   FIELD(3),=C'ASM'
         BE    ASMTYPE
         CLC   EQFIELD(3),=C'ASM'
         BE    ASMTYPE
         CLC   EQFIELD(7),=C'IEBCOPY'
         BE    COPYTYPE
         MVI   RDRFLAG,0
         CALL  READER
         B     FIRSTIME
E15TERM  STM   R3,R4,EX5SAV
         AP    RECIN,=P'1'
         LA    R1,INSRTBUF
         TERME SAVE=SORTSAVE,OP=XCTL
         LA    R15,12
         BR    R14
         DROP  R15
         TITLE 'S G I N D E X --- PROCESS LINK EDIT STEPS'
LINKMVS  MVC   DDNAME,=CL8'    UNIT'  TRICK DDNAME
         LA    R3,7                LEN-1
         B     LINKMVS2            ENTER
LINKTYPE MVC   DDNAME,=CL8'SYSLMOD'
         LA    R3,6               LEN-1
LINKMVS2 CALL  JCLSCAN
         MVC   LMODLIB,DSNAME
         CLI   MEMBER,C' '
         BE    LINK1A
         MVC   ITEM,MEMBER
         MVC   LIB,LMODLIB
         MVC   USE,=CL8'LINK'
         MVC   WTG,=A(LINK1A)
         B     E15TERM
LINK1A   MVI   RDRFLAG,RNJCL+RNCONT
LINK1    CALL  READER             RETURNS A LKED CONTROL CARD
         MVI   RDRFLAG,RNCONT
         CLC   INB(2),=C'/*'
         BE    FIRSTIME
         CLC   INB(2),=C'//'
         BE    FIRSTIME
         MVI   SCANFLAG,SPACE
         CALL  FLDSCAN
         MVC   USE,FIELD
         CLC   FIELD(5),=C'ALIAS'
         BE    LINK3
         CLC   FIELD(6),=C'CHANGE'
         BE    LINK4
         CLC   FIELD(5),=C'ENTRY'
         BE    LINK3
         CLC   FIELD(7),=C'INCLUDE'
         BE    LINK8
         CLC   FIELD(4),=C'NAME'
         BE    LINK3
         CLC   FIELD(7),=C'REPLACE'
         BE    LINK5
         B     LINK1
LINK8    CALL  FLDSCAN
         MVI   SCANFLAG,0
         MVC   LIB,FIELD
         B     LINK6
LINK3    MVC   LIB,LMODLIB
         B     LINK6
LINK5    MVC   LIB,BLANKS
LINK6    CALL  FLDSCAN
         MVI   SCANFLAG,0
         MVC   ITEM,FIELD
         MVC   WTG,=A(LINK7)
         B     E15TERM
LINK7    CLI   0(R3),C','
         BE    LINK6
         B     LINK1
LINK4    CALL  FLDSCAN
         MVC   LIB,FIELD
         MVI   SCANFLAG,0
         CALL  FLDSCAN
         MVC   ITEM,FIELD
         MVC   WTG,=A(LINK4A)
         B     E15TERM
LINK4A   LA    R3,1(R3)
         BCTR  R4,0
         CLI   0(R3),C','
         BE    LINK4
         B     LINK1
         TITLE 'S G I N D E X --- PROCESS ASSEMBLE STEPS'
ASMTYPE  MVC   DDNAME,=CL8'SYSPUNCH'
         LA    R1,INB+10           QUICK AND DIRTY FOR MVS MOD=
         LA    R0,60               LIMIT
ASMMVS1  DS    0H                  FIND MOD= PARAMETER IF ANY
         CLC   =C'MOD=',0(R1)
         BE    ASMMVS2             HIT
         LA    R1,1(R1)            BUMP
         BCT   R0,ASMMVS1          LOOP
         B     ASMMVS3             RESUME NORMAL MVT MODE
ASMMVS2  DS    0H                  MOVE MODULE NAME IN
         MVC   ITEM,4(R1)          ASSUME IT IS 8 CHAR LONG
         MVC   LIB,=CL8' '         BLANK
         B     ASMMVS4             PROCESS THIS ITEM
ASMMVS3  DS    0H                  MVT MODE - FIND SYSPUNCH DD STMT
         LA    R3,7               LENGTH -1
         CALL  JCLSCAN
         MVC   ITEM,MEMBER
         MVC   LIB,DSNAME
ASMMVS4  DS    0H                  PROCESS MVS ITEM
         MVC   USE,=CL8'SYSPUNCH'
         MVC   WTG,=A(ASM1)
         B     E15TERM
ASM1     MVI   RDRFLAG,RNCONT+RNJCL
ASM2     CALL  READER
         MVI   RDRFLAG,RNCONT
         CLC   INB(2),=C'/*'
         BE    FIRSTIME
         CLC   INB(2),=C'//'
         BE    FIRSTIME
         CLI   INB,C'*'           COMMENT CARD ?
         BE    ASM2
         MVI   SCANFLAG,SPACE
         CALL  FLDSCAN
         LA    R5,#OPCODES
         LA    R6,OPCODES
ASM3     CLC   FIELD(8),0(R6)
         BE    ASM2
         LA    R6,8(R6)
         BCT   R5,ASM3
         MVC   ITEM,FIELD
         MVC   LIB,BLANKS
         MVC   USE,=CL8'MACRO'
         MVC   WTG,=A(ASM2)
         B     E15TERM
         TITLE 'S G I N D E X --- PROCESS COPY STEPS'
COPYTYPE MVI   RDRFLAG,RNCONT+RNJCL
COPYLOOP CALL  READER
         CLC   INB(2),=C'/*'
         BE    FIRSTIME
         CLC   INB(2),=C'//'
         BE    FIRSTIME
         MVI   RDRFLAG,RNCONT
         MVI   SCANFLAG,SPACE
         CALL  FLDSCAN
         CLC   FIELD(6),=C'SELECT'
         BE    COPYSEL
         CLC   FIELD(7),=C'EXCLUDE'
         BE    COPYX
         CLC   FIELD(4),=C'COPY'
         BNE   COPYLOOP
         MVI   SCANFLAG,SPACE+EQUAL
         CALL  FLDSCAN
         MVC   COPYHOLD,EQFIELD   OUTDD NAME
         MVI   SCANFLAG,EQUAL
         CALL  FLDSCAN            INDD NAME
         MVC   ITEM,EQFIELD
         MVC   LIB,BLANKS
         MVC   USE,=CL8'COPYFROM'
         MVC   WTG,=A(COPYLOOP)
         B     E15TERM
COPYSEL  MVC   LIB,COPYHOLD
         MVC   USE,=CL8'COPYTO'
COPY4    MVI   SCANFLAG,SPACE
         CALL  FLDSCAN            RETURNS "MEMBER"
         MVI   SCANFLAG,0
COPY2    CALL  FLDSCAN
         MVC   ITEM,FIELD
         MVC   WTG,=A(COPY3)
         B     E15TERM
COPY3    CLI   0(R3),C','
         BE    COPY2
         B     COPYLOOP
COPYX    MVC   LIB,COPYHOLD
         MVC   USE,=CL8'EXCLUDE'
         B     COPY4
EOFIN    LA    R3,OUTPAGE+2
         LA    R4,&LINCT
         STM   R3,R4,EX5SAV       FOR THE E35 EXIT
         LA    R13,SORTSAVE
         TERME SAVE=SORTSAVE,OP=XCTL
         LA    R15,8
         BR    R14
         DROP  R15
         TITLE 'S G I N D E X --- READER'
READER   PRIME SAVE=RSAVE
         LM    R11,R12,BASES
         USING SGINDEX,R11,R12
         C     R3,=A(INB+2)
         BE    RDRPREV
READER0  MVC   PREVCONT,INB+71
         TM    RUNFLAG,FIXPRF
         BZ    RDRGET
         NI    RUNFLAG,255-FIXPRF
         MVC   INB,INB2
         B     NOPRINT
RDRGET   GET   IN,INB
NOPRINT  LA    R3,INB+2
         LA    R4,70
         CLI   INB+79,C' '         SEQ# IN
         BNE   *+8                 YES - TEST OPTION
         NI    RUNFLAG,255-NOSEQ   RESET
         TM    RUNFLAG,NOSEQ
         BO    READER1            DO NOT SEQUENCE DECK
         AP    SEQ#,=P'10000'
         UNPK  WC(9),SEQ#
         MVC   INB+72(8),WC+1
         OI    INB+79,X'F0'
READER1  MVC   CARD,INB+72
         PUT   NEW,INB
         AP    LINE#,=P'1'
         CP    LINE#,=P'&LINCT'
         BL    RDRPRT
RDRPG    SP    LINE#,LINE#
         AP    PG#,=P'1'
         MVC   HDR1+120(4),=X'40202120'
         ED    HDR1+120(4),PG#
         MVC   PAGE+4(4),HDR1+120
         PUT   PR,HDR1
         PUT   PR,UNDER1
         PUT   PR,BLANKS
RDRPRT   PUT   PR,INBFIL
RDRPREV  TM    RDRFLAG,RNCONT
         BZ    RDR3
         CLI   PREVCONT,C' '
         BNE   READER0
RDR3     TM    RDRFLAG,REXEC
         BO    READER3
         TM    RDRFLAG,RNJCL
         BO    READER4
RDRTERM  TERME SAVE=RSAVE,OP=XCTL
         CLC   INB(2),=C'//'
         BNE   RDRTERM2
         LA    R3,INB+2
         LA    R4,69
         BR    R14
RDRTERM2 LA    R3,INB
         LA    R4,71
         BR    R14
         DROP  R15
READER3  CLC   INB(2),=C'//'
         BNE   READER0
         MVI   SCANFLAG,SPACE
         CALL  FLDSCAN
         CLC   FIELD(4),=C'EXEC'
         BNE   READER0
         B     RDRTERM
READER4  CLC   INB(2),=C'//'
         BE    READER0
         CLC   INB(2),=C'/*'
         BE    READER0
         B     RDRTERM
         TITLE 'S G I N D E X --- INDEX PAGE PRINT'
PRTPAGE  PRIME SAVE=LOWSAVE
         LM    R11,R12,BASES
         USING SGINDEX,R11,R12
         MVC   THUMB1,OUTPAGE+2
         AP    PG#,=P'1'
         MVC   HDR1+120(4),=X'40202120'
         ED    HDR1+120(4),PG#
         PUT   PR,HDR1
         PUT   PR,UNDER1
         PUT   PR,HDR2
         PUT   PR,UNDER2
         PUT   PR,BLANKS
         LA    R3,OUTPAGE
         LA    R4,&LINCT
PRLOOP   PUT   PR,(R3)
         MVC   THUMB2,68(R3)
         MVC   0(133,R3),BLANKS
         LA    R3,133(R3)
         BCT   R4,PRLOOP
         MVC   THUMBA,THUMB1
         PUT   PR,THUMB
         MVC   THUMBA,THUMB2
         PUT   PR,THUMB
         TERME SAVE=LOWSAVE
         LTORG
         TITLE 'S G I N D E X --- FIELD SCAN'
FLDSCAN  PRIME SAVE=LOWSAVE       R3 & R4 ARE SET ON ENTRY
         LM    R11,R12,BASES
         USING SGINDEX,R11,R12
         MVC   FIELD,BLANKS
         MVC   EQFIELD,BLANKS
         TM    SCANFLAG,SPACE
         BZ    FLD1               DO NOT SKIP LEADING BLANKS, ETC
         CLI   0(R3),C' '
         BE    FLD2               NO LEADING NON-BLANKS
         EX    R4,TRTB
         BC    10,FLDTERM         NOT FOUND OR LAST ONE
         SR    R1,R3              DIFFERENCE -> R1
         AR    R3,R1              ADD START
         SR    R4,R1              SUBTRACT BYTES USED
* NOW POINTING TO 1ST BLANK
FLD2     EX    R4,TRTNB           FIND START OF GOOD STUFF
         BC    8,FLDTERM          NOT FOUND
         SR    R1,R3
         AR    R3,R1
         SR    R4,R1
* NOW POINTING TO 1ST GOOD CHARACTER
FLD1     TRT   0(1,R3),TRTDELT    ALWAYS SKIP A LEADING DELIMITER
         BC    8,FLD1A
         LA    R3,1(R3)
         BCTR  R4,0
         B     FLD1
FLD1A    EX    R4,TRTDEL
         BC    8,FLDALL
         LR    R5,R3
         SR    R1,R3
         AR    R3,R1
         SR    R4,R1
         BCTR  R1,0               REDUCE FOR MVC
         EX    R1,FLDMVC          MOVE RESULT TO FIELD
         TM    SCANFLAG,EQUAL     IS SECTION AFTER '=' WANTED ALSO?
         BZ    FLDTERM            NO, RETURN
         CLI   0(R3),C'='
         BNE   FLDTERM            THERE ISN'T ONE ANYWAY
         LA    R3,1(R3)
         BCTR  R4,0
         EX    R4,TRTDEL
         BC    8,FLDEQALL
         LR    R5,R3
         SR    R1,R3
         AR    R3,R1
         SR    R4,R1
         BCTR  R1,0
         EX    R1,FLDEQMVC
FLDTERM  STM   R3,R4,WD
         TERME SAVE=LOWSAVE,OP=XCTL
         LM    R3,R4,WD
         BR    R14
         DROP  R15
FLDALL   LR    R5,R3
         EX    R4,FLDMVC
         LA    R3,1(R3,R4)
         SR    R4,R4
         B     FLDTERM
FLDEQALL LR    R5,R3
         EX    R4,FLDEQMVC
         LA    R3,1(R3,R4)
         SR    R4,R4
         B     FLDTERM
         TITLE 'S G I N D E X --- JCLSCAN'
JCLSCAN  PRIME SAVE=JSAVE
         LM    R11,R12,BASES
         USING SGINDEX,R11,R12
         MVI   RDRFLAG,RNCONT     DSN IS ALWAYS ON 1ST CARD
         MVC   DSNAME,BLANKS
         MVC   MEMBER,BLANKS
         STC   R3,JCLCLC+1
JCLCLC   CLC   INB+2(*-*),DDNAME
         BE    JCLCF
         SR    R3,R3
         CALL  READER
         CLC   INB(2),=C'//'
         BNE   JCLTERM
         B     JCLCLC
JCLCF    LA    R5,INB+3
         LA    R6,65
JCLDSNS  CLC   0(4,R5),=C'DSN='
         BE    JCLDSN4
         CLC   0(4,R5),=C'OBJ='
         BE    JCLDSN4
         CLC   0(5,R5),=C'NAME='
         BE    JCLDSN5
         CLC   0(7,R5),=C'DSNAME='
         BE    JCLDSN7
         LA    R5,1(R5)
         BCT   R6,JCLDSNS
         CLI   INB+71,C' '
         B     JCLCONT
         BNE   JCLCONT
*        ABEND 3,DUMP             NO DSNAME ON CARD
JCLCONT  MVI   RDRFLAG,0
         SR    R3,R3
         CALL  READER
         B     JCLCF
JCLDSN7  LA    R5,2(R5)
JCLDSN5  LA    R5,1(R5)
JCLDSN4  LA    R5,4(R5)
         LR    R3,R5
         LA    R4,INB+71
         SR    R4,R3
         MVI   SCANFLAG,0
         CALL  FLDSCAN
         LA    R5,FIELD
         CLC   FIELD(5),=C'SYS1.'
         BNE   JCL1
         LA    R5,FIELD+5
JCL1     MVC   DSNAME,0(R5)
         CLC   =C'MOD=',0(R3)      MVS MEMBER NAME
         BNE   JCL1OS              NO
         CALL  FLDSCAN
         MVC   MEMBER,FIELD+4
         B     JCLTERM             OUT
JCL1OS   DS    0H
         CLI   0(R3),C'('
         BNE   JCLTERM            NO MEMBER NAME
         CALL  FLDSCAN
         MVC   MEMBER,FIELD
JCLTERM  TERME SAVE=JSAVE
         TITLE 'S G I N D E X --- WORK AREAS && CONSTANTS'
         REGS
BASES    DC    A(SGINDEX,SGINDEX+4096)
MAINSAVE DS    18F
IN       DCB   DDNAME=SYSIN,                                           X
               DSORG=PS,                                               X
               MACRF=GM,                                               X
               EODAD=EOFIN
PR       DCB   DDNAME=SYSPRINT,                                        X
               DSORG=PS,                                               X
               MACRF=PM,                                               X
               RECFM=FBA,                                              X
               LRECL=133,                                              X
               BLKSIZE=798
NEW      DCB   DDNAME=SYSPUNCH,                                        X
               DSORG=PS,                                               X
               MACRF=PM,                                               X
               RECFM=F,                                                X
               BLKSIZE=80,                                             X
               LRECL=80
SP1      DS    0F                 SORT PARAMETERS
         DC    X'80',AL3(SP2+2)
SP2      DC    A(32,SS,ES,RS,ER,E15,E35,40000),X'FF00',C'AP'
SS       DC    C' SORT FIELDS=(1,38,CH,A),SIZE=E3500 '
ES       EQU   *
RS       DC    C' RECORD TYPE=F,LENGTH=58 '
ER       EQU   *
SORTSAVE DS    18F
THUMB    DC    CL125' '
THUMBA   DC    CL8' '
THUMB1   DC    CL8' '
THUMB2   DC    CL8' '
EX5SAV   DS    2F
INSRTBUF DS    0CL58
ITEM     DC    CL8' '
         DC    CL2' '
LIB      DC    CL8' '
         DC    CL2' '
USE      DC    CL8' '
         DC    CL2' '
STEP     DC    CL8' '
         DC    CL2' '
PAGE     DC    CL8' '
         DC    CL2' '
CARD     DC    CL8' '
WTG      DC    A(INITE15)         WHERE TO GO SWITCH FOR E15 EXIT
FIELD    DS    CL80
EQFIELD  DS    CL80
BLANKS   DC    CL133' '
DDNAME   DS    CL8
MEMBER   DS    CL8
DSNAME   DS    CL8
LMODLIB  DC    CL8' '
OPCODES  DC    C'DC      AIF     AGO     ANOP    CSECT   PRINT   END   X
                 ENTRY   DS      TITLE   SR      BR      '
         DC    CL8'EXTRN'
#OPCODES EQU   (*-OPCODES)/8
INB2     DS    CL80
COPYHOLD DS    CL8
PREVCONT DS    C                  COL 72 OF PREVIOUS CARD
SEQ#     DC    PL5'0'
WC       DS    CL50
LINE#    DC    P'99'
INBFIL   DC    CL26' '
INB      DC    CL80' '
         DC    CL27' '
PG#      DC    PL2'0'
RSAVE    DS    18F
HDR1     DC    C'1'
         CENTER 'SYSGEN INDEX LISTING',LEN=132
UNDER1   DC    C'+'
         CENTER '____________________',LEN=132
HDR2     DC    C'0 '
         DC    C'  ITEM    LIBRARY     USE       STEP      PAGE      CAX
               RD  '
         DC    CL8' '
         DC    C'  ITEM    LIBRARY     USE       STEP      PAGE      CAX
               RD  '
         DC    CL18' '
UNDER2   DC    C'+ '
         DC    C'________  ________  ________  ________  ________  ____X
               ____'
         DC    CL8' '
         DC    C'________  ________  ________  ________  ________  ____X
               ____'
         DC    CL18' '
DATEPARM DS    0F
         DC    X'80',AL3(HDR1+104)
LOWSAVE  DS    18F
WD       DS    D
TRTB     TRT   0(0,R3),TRTBT
TRTNB    TRT   0(0,R3),TRTNBT
TRTDEL   TRT   0(0,R3),TRTDELT
FLDMVC   MVC   FIELD(0),0(R5)
FLDEQMVC MVC   EQFIELD(0),0(R5)
JSAVE    DS    18F
RUNFLAG  DC    X'40'
COL2     EQU   X'80'              0->COL 1 , 1->COL 2
NOSEQ    EQU   X'40'              1->DO NOT RESEQUENCE NEW DECK
FIXPRF   EQU   X'20'              FIXING A SYSPRINT CARD
RDRFLAG  DC    X'00'
REXEC    EQU   X'80'              SCAN TO NEXT 'EXEC' CARD
RNJCL    EQU   X'40'              SCAN TO NEXT NON-JCL CARD
RNCONT   EQU   X'20'              SCAN TO NEXT NON-CONTINUATION CARD
SCANFLAG DC    X'00'
SPACE    EQU   X'80'              SKIP LEADING BLANKS ETC
EQUAL    EQU   X'40'              ALSO RETURN PORTION AFTER '='
RECIN    DC    PL4'0'
TRTBT    DC    64X'00',X'FF',191X'00'
TRTNBT   DC    64X'FF',X'00',191X'FF'
TRTDELT  DC    64X'00',X'FF',12X'00',X'FF',15X'00',X'FF',13X'00',X'FF'
         DC    18X'00',X'FF',129X'00'
*         XYUTADTV
         LTORG
OUTPAGE  DC    &LINCT.CL133'       FIRST TIME'
         END
