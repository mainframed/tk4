*          DATA SET CBT824     AT LEVEL 001 AS OF 11/06/77
   TITLE 'IEESI03D  -  # V  -  COMMAND TO INTERROGATE DEVICE STATUS'
***********************************************************************
*
*
*        # V IS INTENDED TO BE USED TO DISPLAY THE STATUS OF DEVICES.
*        THE DEVICES MAY BE SPECIFIED EITHER BY UNIT ADDRESS OR BY
*        SERIAL NUMBER OF THE VOLUME MOUNTED ON THE DEVICE.
*        EXAMPLES..
*
*                  # V U=250      DISPLAYS  STATUS OF UCB '250'
*                  # V U=25X      DISPLAYS STATUS OF UCB'S 250 THRU 257
*                  # V S=DAPROD   DISPLAYS  STATUS OF UCB ON WHICH
*                                 VOLUME SERIAL DAPROD IS MOUNTED.
*                  # V 25X,36X,47X  (SHORT FORM FOR 'U=' OPTION)
*
*
*
*        FORMAT OF DISPLAY FOR UCB'S..
*
*
*           UUU  SSSSSS  FFF  UNIT=DDDDDD  AS=AAAA  PATH=X,Y
*              DCB=MM  USR=UU  RSV=RR  FLG=11111111/22222222
*
*                              - OR -
*
*           UUU  SSSSSS  FFF  UNIT=DDDDDD  AS=AAAA  PATH=X,Y
*              DEVTYPE=ZZZZZZZZ        FLG=11111111/22222222
*
*
*                       UUU     IS THE UNIT ADDRESS
*                       SSSSSS  IS THE VOLUME SERIAL OR DEVICE CLASS
*                               (******   IF NO VOLUME IS MOUNTED)
*                               (DEVCLASS - U.R., COMM, DISP, CONS)
*                       FFF     ON, OFF, OF CHG
*                       DDDDDD  IS THE DEVICE TYPE
*                       AAAA    IS THE ADDRESS SPACE ID
*                       X,Y     IS THE PRIMARY,SECONDARY DEVICE PATH
*                       MM      IS THE NO. OF OPEN DCBS TO THE DEVICE
*                       UU      IS THE NO. OF USERS
*                       RR      IS THE DEVICE RESERVE COUNT
*                       ZZZZZZ  IS THE 4 BYTE HEX DEVICE TYPE FIELD
*                       111/222 IS THE FIRST 8 BYTES OF THE UCB IN HEX
*
*
***********************************************************************
         EJECT
IEESI03D CSECT
         LR    R12,R15             ESTABLISH BASE
         USING IEESI03D,R12
         USING XSA,R2              'USE' XSA BASE
         USING WTO,R13             'USE' WTO AREA BASE
         L     R0,SIZE
         GETMAIN R,LV=(0)          GET WTO AREA
         LR    R13,R1              PUT WTO ADDR IN WTO BASE
         ST    R14,SAVRET          SAVE RETURN ADDR
         MVC   WTOCTL1(52),WOVL1
         MVC   WTOCTL2(52),WOVL2
         MVC   ERRMSG(4),=X'00240100'
         L     R7,XAL              GET PTR TO INPUT PARM
         LA    R7,0(R7)            CLEAR HI BYTE
         LTR   R7,R7               IS THERE A PARM ?
         BZ    NOTHING             NO
         CLI   1(R7),C'='          IS OUT BOY USING KEYWORDS ?
         BNE   UNIT                NO, ASSUME HE WANTS UNITS
         CLI   0(R7),C'U'          IS REQUEST BY UNIT ?
         BE    SETUNIT             YES
         CLI   0(R7),C'S'          IS REQUEST BY SERIAL ?
         BE    SERIAL              YES
         B     GOOF                ERROR
         EJECT
SERIAL   LA    R5,EXSER            SET FOR SERIAL SEARCH
         BAL   R10,UCBSRCH         GO TRY TO FIND THE SERIAL NO.
         LTR   R15,R15             DID WE FIND IT ?
         BZ    EXIT                YEP
         B     GOOF                NOPE
         SPACE 3
SETUNIT  LA    R7,2(R7)            SKIP THE 'U='
         SPACE 1
UNIT     MVI   WCU,X'00'           INITIALIZE GHOST SUPPRESSOR
         LA    R5,EXUCB            SET FOR SEARCH FOR SPECIFIC UCB
         CLI   2(R7),C'X'          IS THIS REQ. FOR 'ALL' UCB'S
         BNE   DOIT                NO
         LA    R5,EXUCBX           SET SEARCH FOR 'ALL' UCB'S
         SPACE 3
DOIT     BAL   R10,UCBSRCH         GO TRY TO FIND THE UCB
         LTR   R15,R15             DID WE SUCCEED ?
         BNZ   GOOF                ERROR IN REQUEST
         CLI   3(R7),C','          ARE THERE MORE UNITS ?
         BNE   EXIT                NO
         LA    R7,4(R7)            BUMP TO NEXT UNIT
         B     UNIT                PROCESS NEW UNIT
         SPACE 3
GOOF     MVC   EUNIT(9),0(R7)      SEARCH FAILED
         SPACE 1
NOTHING  MVC   EUNIT+9(23),ERRTEXT     0095
         LA    R1,ERRMSG           MESSAGE IN WTO FORMAT.
         L     R15,XSW             FIND THE IO ROUTINE.0097
         BALR  R14,R15             ISSUE THE TPUT/WTO.0098
EXIT     LR    R1,R13
         L     R14,SAVRET          RELOAD RETURN ADDR
         L     R0,SIZE
         FREEMAIN R,LV=(0),A=(1)          FREE WTO AREA
         SR    R15,R15             CLEAR RETURN CODE
         BR    R14                 EXIT
         EJECT
UCBSRCH  LA    R15,4               ASSUME BAD RETURN
         L     R4,16               GET CVT PTR
         L     R4,40(0,R4)         GET UCB HALFWORD VECTOR
         SPACE 1
UCBLOOP  SR    R3,R3               LOAD NEXT
         ICM   R3,3,0(R4)             UCB ADDR
         CLC   0(2,R4),=X'FFFF'    END OF UCB LOOKUP TABLE
         BCR   8,R10               YES, END
         LTR   R3,R3               IS THERE A UCB ?
         BZ    NEXTUCB             NULL UCB
         EX    0,0(R5)             COMPARE SOMETHING IN THE UCB
         BE    AHIT                BRANCH IF WE LIKED IT
         SPACE 1
NEXTUCB  LA    R4,2(R4)            BUMP PTR TO NEXT UCB
         B     UCBLOOP             CONTINUE SEARCH
         EJECT
AHIT     CLC   WUNIT,13(R3)        IS THIS AN OPCHAN GHOST ?
         BE    NEXTUCB             YES, EXORCISE IT AND CONTINUE
         CLI   0(R7),C'S'          IS IT A SEARCH BY SERIAL ?
         BE    MVUNAME             YES
         CLC   WCU,5(R3)           IS THIS AN OPCHAN GHOST ?
         BCR   2,R10               YES, EXORCISE IT AND QUIT
         MVC   WCU,5(R3)           SAVE LAST UNIT ADDR FOR COMPARE
         SPACE 1
MVUNAME  MVC   WUNIT,13(R3)        MOVE UNIT ADDR TO WTO AREA
         TM    18(R3),X'A0'        IS IT TAPE OR DISK ?
         BZ    MVSTAT              NEITHER
         MVC   WSER,28(R3)         MOVE VOLSER
         CLI   WSER,X'00'          IS THERE A VOLSER
         BNE   MVSTAT              YES
         MVC   WSER(6),=6C'*'      INSERT 'NO VOLSER' INDICATOR
         SPACE 1
MVSTAT   MVC   WONOFF(3),=CL3'OFF'
         TM    3(R3),X'C0'         ON/OFF/CHG FLAGS
         BZ    MVSTAT1             OFFLINE
         MVC   WONOFF(3),=CL3'CHG'
         BO    MVSTAT1             CHANGING STATUS
         TM    3(R3),X'40'         CHG FLAG
         BO    MVSTAT1             CHANGING STATUS
         MVC   WONOFF(3),=CL3'ON'
         SPACE 1
MVSTAT1  L     R1,20(0,R3)         UCB EXTENTION ADDR
         UNPK  WASID(5),14(3,R1)   ASID
         TR    WASID(4),TABLE
         MVI   WASID+4,C' '
         UNPK  WDMCT(3),35(2,R3)   NO. OF OPEN DCBS
         TR    WDMCT(2),TABLE
         MVI   WDMCT+2,C' '
         UNPK  WUSCT(3),38(2,R3)   NO. OF USERS
         TR    WUSCT(2),TABLE
         MVI   WUSCT+2,C' '
         UNPK  WRSCT(3),36(2,R3)   NO. OF RESERVES
         TR    WRSCT(2),TABLE
         MVI   WRSCT+2,C' '
         UNPK  WFLG1(9),0(5,R3)    1ST 4 BYTES OF UCB
         TR    WFLG1(8),TABLE
         MVI   WFLG1+8,C'/'
         UNPK  WFLG2(9),4(5,R3)    2ND 4 BYTES OF UCB
         TR    WFLG2(8),TABLE
         MVI   WFLG2+8,C' '
         EJECT
DEVRCHAN DS    0H
*
*        ACCESS LOGICAL CHAN. TABLE ENTRY FOR THIS DEVICE.
*        PRINT PRIMARY AND SECONDARY CHANNEL PATHS.
*
         SR    R1,R1
         IC    R1,10(0,R3)         LCHQ INDEX/32
         SLL   R1,5                TIMES 32 = LCHQ INDEX
         L     R8,16               CVT
         L     R8,140(0,R8)        LCHQ TABLE
         ALR   R8,R1               THIS UCBS ENTRY
         L     R1,16(0,R8)         CHAN PATH LIST
         SR    R8,R8
         IC    R8,0(0,R1)          PRIM. CHAN.
         LA    R8,CHANNELS(R8)
         MVC   WPATH(1),0(R8)      PRI. CHAN PATH
         CLI   2(R1),X'FF'         OPTCHAN?
         BNE   DEVCHAN1            YES
         B     DEVTYPE
         SPACE 1
DEVCHAN1 SR    R8,R8
         IC    R8,2(0,R1)          SEC. CHAN.
         MVI   WPATH+1,C','
         LA    R8,CHANNELS(R8)
         MVC   WPATH+2(1),0(R8)    SEC. CHAN. PATH
         EJECT
DEVTYPE  SR    R0,R0
         CL    R0,16(0,R3)         SEE IF NULL UCBTYPE FIELD
         BNE   DEVT1               NO
         MVC   WDEVT(6),=CL6'DUMMY'  DUMMY UCB
         B     WRITEIT
         SPACE 1
DEVT1    DS    0H
         LA    R1,DEVCNUM          NUM. OF DEV. CLASSWS
         LA    R6,DEVCLASS         ADDR. OF TABLE
         SPACE 1
DEVT2    CLC   18(1,R3),0(R6)      SEE IF EQ TO THIS ENTRY
         BE    DEVT3               YES,GO PROCESS
         LA    R6,1(0,R6)          TRY NEXT ENTRY
         BCT   R1,DEVT2
         MVC   WDEVT(6),=CL6'*UNK*'
         B     WRITEIT
         SPACE 1
DEVT3    LA    R6,DEVCNUM          NUM. OF ENTRIES
         SR    R6,R1
         SLL   R6,2                INDEX * 4 FOR OTHER TABLES
         LA    R1,DEVCTAB          ADDR. OF BRANCH TABLE
         ALR   R1,R6               THIS CLASS ENTRY
         L     R1,0(0,R1)
         BR    R1
         SPACE 3
DEVTS    CLC   19(1,R3),0(R14)     THIS ENTRY?
         BE    DEVTS1              YES
         LA    R14,1(0,R14)        NEXT ENTRY
         BCT   R1,DEVTS
         MVC   WDEVT(6),=CL6'*UNK*'
         BR    R11
         SPACE 1
DEVTS1   SR    R9,R1               INDEX
         MH    R9,=H'6'            TIMES 6 FOR BYTE OFFSET
         ALR   R15,R9              ADDR. EBCDIC
         MVC   WDEVT(6),0(R15)
         BR    R11
         EJECT
TAPEUCB  LA    R1,TAPENUM          NUM. TABLE ENTRIES
         LA    R14,TAPETAB         TABLE ADDR.
         LA    R15,TAPENAME        EBCDIC NAME
         LR    R9,R1
         BAL   R11,DEVTS
         B     DEVTDSP
         SPACE 3
COMMUCB  MVC   WDEVT(6),=CL6'COMM'
         MVC   WSER(6),=CL6'COMM'
         B     DEVTDSP
         SPACE 3
DASDUCB  DS    0H
         LA    R1,DASDNUM          NUM. TABLE ENTRIES
         LA    R14,DASDTAB         TABLE ADDR.
         LA    R15,DASDNAME        EBCDIC NAME
         LR    R9,R1
         BAL   R11,DEVTS
         B     WRITEIT
         EJECT
DISPUCB  DS    0H
         TM    3(R3),X'02'         SEE IF CONSOLE
         BNO   DISPUCB1            NO
         MVC   WSER(6),=CL6'CONS'
         B     DISPUCB2
         SPACE 1
DISPUCB1 MVC   WSER(6),=CL6'DISP'
         SPACE 1
DISPUCB2 LA    R1,DISPNUM          MUN. OF ENTRIES
         LA    R14,DISPTAB         TABLE ADDR.
         LA    R15,DISPNAME        EBCDIC
         LR    R9,R1
         BAL   R11,DEVTS
         TM    16(R3),X'01'        TEST FOR MODEL
         BNO   DISPUCB3
         MVC   WDEVT+4(2),=C'-1'      MODEL 1
         SPACE 1
DISPUCB3 TM    16(R3),X'02'
         BNO   DEVTDSP
         MVC   WDEVT+4(2),=C'-2'      MODEL 2
         B     DEVTDSP
         SPACE 3
URUCB    LA    R1,URNUM          NUM. TABLE ENTRIES
         LA    R14,URTAB         TABLE ADDR.
         LA    R15,URNAME        EBCDIC NAME
         LR    R9,R1
         MVC   WSER(6),=CL6'U.R.'
         BAL   R11,DEVTS
         B     DEVTDSP
         EJECT
WRITEIT  LA    R1,WTOCTL1          MESSAGE IN WTO FORMAT.
         L     R15,XSW             FIND THE IO ROUTINE.
         BALR  R14,R15             ISSUE THE TPUT/WTO.
         LA    R1,WTOCTL2          MESSAGE IN WTO FORMAT.
         L     R15,XSW             FIND THE IO ROUTINE.
         BALR  R14,R15             ISSUE THE TPUT/WTO.
         MVC   WTOCTL2(52),WOVL2
         SR    R15,R15             SET ZERO RET CODE
         CLI   0(R7),C'S'          IS IT A REQ. BY SERIAL ?
         BE    NEXTUCB       YES, CONTINUE SEARCH IN CASE OF DUPLICATES
         CLI   2(R7),C'X'          IS IT A REQ FOR ALL UNITS
         BE    NEXTUCB             YES, GET THE REST OF THE UCB'S
         BR    R10                 RETURN
         SPACE 3
DEVTDSP  MVC   WTODISP+3(22),=CL22'DEVTYPE='
         UNPK  WDMCT+4(9),16(5,R3) HEX DEVICE TYPE
         TR    WDMCT+4(8),TABLE
         MVI   WDMCT+12,C' '
         B     WRITEIT
         SPACE 3
EXUCB    CLC   13(3,R3),0(R7)      FIND SPECIFIC UCB
EXUCBX   CLC   13(2,R3),0(R7)      FIND ALL UCB'S FOR A GIVEN CTL UNIT
EXSER    CLC   28(6,R3),2(R7)      FIND UCB BY SERIAL NO.
         EJECT
         LTORG
         DS    0F
SIZE     DC    X'F1',AL3(WTOEND-WTO)
         SPACE 3
WOVL1    DC    X'00340100'
         DC    CL18' ',CL13'UNIT=',CL9'AS=',CL8'PATH='
         SPACE 3
WOVL2    DC    X'00340100'
         DC    CL11'   DCB=',CL8'USR=',CL8'RSV=',CL21'FLG='
         SPACE 3
TABLE    EQU   *-X'F0'
CHANNELS DC    C'0123456789ABCDEF'
         SPACE 3
ERRTEXT  DC    CL23'  UNIT OR VOL NOT FOUND'
         EJECT
DEVCLASS DS    0F
         DC    X'80'               TAPE
         DC    X'40'               COMM.
         DC    X'20'               DASD
         DC    X'10'               DISP
         DC    X'08'               UR
DEVCNUM  EQU   *-DEVCLASS
         SPACE 3
DEVCTAB  DS    0F
*
*        BRANCH TABLE FOR DEVICE CLASS PROCESSING
*
         DC    A(TAPEUCB)
         DC    A(COMMUCB)
         DC    A(DASDUCB)
         DC    A(DISPUCB)
         DC    A(URUCB)
         EJECT
URTAB    DS    0F
         DC    X'06'               3505
         DC    X'08'               1403
         DC    X'09'               3211
         DC    X'0E'               3800
         DC    X'0C'               3525
         DC    X'0A'               1443
         DC    X'04'               2501
         DC    X'10'               2671
URNUM    EQU   *-URTAB
         SPACE 3
URNAME   DS    0F
         DC    CL6'3505'
         DC    CL6'1403'
         DC    CL6'3211'
         DC    CL6'3800'
         DC    CL6'3525'
         DC    CL6'1443'
         DC    CL6'2501'
         DC    CL6'2671'
         SPACE 3
TAPETAB  DS    0F
         DC    X'01'               2400
         DC    X'03'               3400
TAPENUM  EQU   *-TAPETAB
         SPACE 3
TAPENAME DS    0F
         DC    CL6'2400'
         DC    CL6'3400'
         SPACE 3
DASDTAB  DS    0F
         DC    X'07'               2305-2
         DC    X'09'               3330
         DC    X'0A'               3340
         DC    X'0D'               3330-11
         DC    X'0B'               3350
DASDNUM  EQU   *-DASDTAB
         SPACE 3
DASDNAME DS    0F
         DC    CL6'2305-2'
         DC    CL6'3330  '
         DC    CL6'3340  '
         DC    CL6'3330-1'
         DC    CL6'3350  '
         EJECT
DISPTAB  DS    0F
         DC    X'09'               3277
         DC    X'0A'               3284
         DC    X'0B'               3286
         DC    X'08'               3066
DISPNUM  EQU   *-DISPTAB
         SPACE 3
DISPNAME DS    0H
         DC    CL6'3277'
         DC    CL6'3284'
         DC    CL6'3286'
         DC    CL6'3066'
         EJECT
WTO      DSECT
ERRMSG   DS    CL4
EUNIT    DS    CL32
         SPACE 3
         DS    0F
WTOCTL1  DS    CL4
WUNIT    DS    CL3
         DS    CL2
WSER     DS    CL6
         DS    CL2
WONOFF   DS    CL3
         DS    CL7
WDEVT    DS    CL6
         DS    CL5
WASID    DS    CL4
         DS    CL7
WPATH    DS    CL3
         SPACE 3
         DS    0F
WTOCTL2  DS    CL4
WTODISP  DS    CL7
WDMCT    DS    CL2
         DS    CL6
WUSCT    DS    CL2
         DS    CL6
WRSCT    DS    CL2
         DS    CL6
WFLG1    DS    CL8
         DS    CL1
WFLG2    DS    CL8
         DS    CL1
         SPACE 3
WCU      DS    CL1
SAVRET   DS    F
WTOEND   DS    0D
         EJECT
         DSXSA
         REGS
         END
