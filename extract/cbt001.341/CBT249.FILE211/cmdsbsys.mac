*          DATA SET CBT562     AT LEVEL 002 AS OF 04/03/77
         TITLE 'COMMAND SUB-SYSTEM PROCESSOR'
CMDSBSYS CSECT
         SPACE 3
         DC    A(WTOENTRY-CMDSBSYS)
         DC    A(CMDENTRY-CMDSBSYS)
         DC    A(MSGENTRY-CMDSBSYS)
         SPACE 3
CMDENTRY EQU   *
         SAVE  (14,12)
         LR    R12,R15
         USING CMDENTRY,R12
         LR    R2,R0               LOAD SSCVT ADDR
         L     R10,16(0,R2)        LOAD SSVT ADDR
         LR    R11,R1              LOAD SSOB ADDR
         XC    12(4,R11),12(R11)   CLEAR RETURN CODE
         LA    R3,0(0,R10)         LOAD SSVT ADDR
         USING AREA,R3
         L     R10,16(0,R11)       LOAD FUNCTION DEPENDENT AREA ADDR
         SR    R4,R4               CLEAR UCMID HOLDER
         IC    R4,11(0,R10)        SAVE UCMID OF ISSUING CONSOLE
         L     R10,4(0,R10)        LOAD CMD BUFFER ADDR
         LH    R9,0(0,R10)         LOAD COMMAND LENGTH
         SH    R9,=H'4'            SUB 4 FOR HDR PORTION
         LA    R10,4(0,R10)        TEXT ADDR
         CLI   0(R10),C'#'         OUR COMMAND
         BNE   CMDOUT              NO, LET MVS OR JES2 HANDLE
         CLC   0(2,R10),=C'#*'     SUBSYS TERMINATION REQUEST
         BE    CMDSTOP             YES, GET OUT
         CLC   SAVE+4(4),=F'0'     CMDSBSYS ALREADY ACTIVE
         BNE   CMDACTIV            YES, REJECT COMMAND
         ST    R13,SAVE+4          SAVE AREA
         LA    R13,SAVE               CONVENTIONS
         STC   R4,XAU              SAVE UCM ID OF ISSUING CONSOLE
         SR    R1,R1               LOAD
         IC    R1,XAU                 INPUT CONSOLE UCM ID
         CVD   R1,DOUBLE           CONVERT AND PRINT
         UNPK  INCONS(2),DOUBLE+6(2)
         OI    INCONS+1,X'F0'
         CH    R9,=H'80'           SELF-IMPOSED MAX LENGTH
         BH    CMDERROR            TOO HIGH, ERROR
         CH    R9,=H'2'            SELF-IMPOSED MIN LENGTH
         BL    CMDERROR            TOO LOW, ERROR
         LA    R8,CMDTABLE         COMMAND TABLE ADDR
         LA    R10,1(0,R10)        NEXT BYTE
         BCTR  R9,0                SUB 1 FROM LENGTH
         CLI   0(R10),C' '         BLANK OR COMMAND
         BNE   CMD1                COMMAND
         LA    R10,1(0,R10)        BLANK, NEXT BYTE
         BCT   R9,CMD1                MUST BE COMMAND
         B     CMDERROR            NOT COMMAND, ERROR
         EJECT
CMD1     CLI   0(R8),X'00'         TABLE END
         BE    CMDNOSUP            YES, COMMAND NOT SUPPORTED
         CLC   0(1,R8),0(R10)      COMMAND MATCH
         BE    CMD2                YES, CONTINUE
         LA    R8,4(0,R8)          NEXT ENTRY
         B     CMD1
         SPACE 3
CMD2     MVI   COMMAND,C' '        CLEAR COMMAND
         MVC   COMMAND+1(79),COMMAND
         SPACE 3
CMD3     LA    R10,1(0,R10)        NEXT BYTE
         BCT   R9,CMD4             SUB 1 FROM LENGTH
         XC    XAL,XAL             CLEAR SUB-PARM ADDR
         B     CMDISSUE            GO PROCESS COMMAND
         SPACE 3
CMD4     CLI   0(R10),C' '         BLANK
         BE    CMD3                YES, CHECK NEXT
         LA    R1,COMMAND          LOAD COMMAND AREA ADDR
         ST    R1,XAL              SAVE SUB-PARM ADDR
         LR    R6,R10              SAVE SUB-PARM START
         LA    R10,0(R9,R10)       POINT TO
         BCTR  R10,0                  LAST BYTE
         EJECT
CMD5     CR    R6,R10              CHECK FOR NON-BLANKS BACK TO START
         BNL   CMDMOVE             GO MOVE IF ALREADY THERE
         CLI   0(R10),C' '         BLANK
         BNE   CMDMOVE             NO, GO MOVE SUB-PARM
         BCT   R10,CMD5            CHECK NEXT PREVIOUS BYTE
         B     CMDERROR            THIS CANNOT HAPPEN -   I THINK
         SPACE 3
CMDMOVE  LR    R1,R10              BACK UP 4 BYTES
         SH    R1,=H'4'
         SR    R10,R6              CALCULATE MOVE LENGTH
         CLC   0(3,R1),=C',L='     DIRECTED OUTPUT
         BNE   CMDMOVEX            NO, CONTINUE
         TM    3(R1),X'F0'         NUMERIC
         BNO   CMDERROR               CONSOLE
         TM    4(R1),X'F0'               I.D.
         BNO   CMDERROR                     CHECK
         PACK  DOUBLE(8),3(2,R1)   CONVERT
         CVB   R14,DOUBLE             SAVE AND
         BAL   R7,CONSCHK                VALIDATE
         STC   R14,XAU                      NEW UCMID
         LR    R10,R1              POINT TO COMMA
         BCTR  R10,0               BACK UP 1
         SR    R10,R6              CALCULATE MOVE LENGTH
         BNM   CMDMOVEX            GO MOVE IF NOT NEGATIVE
         XC    XAL,XAL             CLEAR SUB-PARM ADDR
         B     CMDISSUE            GO PROCESS COMMAND
         SPACE 3
CMDMOVEX EX    R10,CMDMEXEC        MOVE SUB-PARM
         B     CMDISSUE            GO PROCESS COMMAND
         SPACE 3
CMDMEXEC MVC   COMMAND(0),0(R6)
         EJECT
CONSCHK  L     R15,16              CVT
         L     R15,100(0,R15)      UCM BASE
         L     R9,72(0,R15)        UCM 1ST ENTRY ADDR
         LM    R4,R5,76(R15)       UCM ENTRY LENGTH AND LAST ENTRY ADDR
         SPACE 3
CONSCHK1 CLM   R14,1,26(R9)        UCM ID MATCH
         BNE   CONSCHK2            NO, CHECK NEXT
         TM    25(R9),X'10'        IS CONSOLE ACTIVE  @@@@@@@@@@@@
         BC    0,CONSCHK3          NO, ERROR          @@@@@@@@@@@@
         BR    R7                  YES,BACK TO NORMAL
         SPACE 3
CONSCHK2 BXLE  R9,R4,CONSCHK1      NEXT UCM ENTRY
         SPACE 3
CONSCHK3 LA    R1,UCMMSG           UCM ID ERROR MSG
         MVI   15(R11),X'04'       INDICATE CMD SUBSYS PROCESSED
         B     CMDMSG
         EJECT
CMDISSUE MVC   WTOLIST(52),WTOOVLY
         MVC   UCMID(2),INCONS     UCM ID OF INPUT CONSOLE
         MVC   CMDID(1),0(R8)      COMMAND ID FROM TABLE
         L     R1,16               CVT
         L     R1,196(0,R1)        SMCA
         MVC   SYSID(4),16(R1)     SYSTEM ID
         TIME  DEC
         ST    R1,DOUBLE
         UNPK  YEAR(3),DOUBLE+1(2)
         MVI   YEAR+2,C'.'
         UNPK  DAY(3),DOUBLE+2(2)
         OI    DAY+2,X'F0'
         ST    R0,DOUBLE
         UNPK  HOUR(3),DOUBLE(2)
         MVI   HOUR+2,C'.'
         UNPK  MINUTE(3),DOUBLE+1(2)
         MVI   MINUTE+2,C' '
         LA    R1,WTOLIST
         SR    R0,R0               LOAD
         IC    R0,XAU                 UCM ID
         SVC   35                  WTO
         SR    R15,R15             LOAD COMMAND
         ICM   R15,7,1(R8)            MODULE ADDR
         LTR   R15,R15             ZERO MODULE ADDR
         BZ    CMDNOSUP            YES, NOT SUPPORTED
         LA    R2,XSA              XSA ADDR
         MVI   15(R11),X'04'       INDICATE CMD SUBSYS PROCESSED
         LA    R14,CMDRETN         LOAD RETURN ADDR
         BR    R15                 EXIT TO COMMAND MODULE
         EJECT
CMDERROR LA    R1,ERRMSG           ERROR
         MVI   15(R11),X'04'       INDICATE CMD SUBSYS PROCESSED
         B     CMDMSG
         SPACE 3
CMDNOSUP LA    R1,SUPPMSG          NOT SUPPORTED
         MVI   15(R11),X'04'       INDICATE CMD SUBSYS PROCESSED
         SPACE
CMDMSG   SR    R0,R0               LOAD
         IC    R0,XAU                 UCM ID
         SVC   35                  WTO
         SPACE 3
CMDEXIT  L     R13,4(0,R13)        LOAD PREVIOUS SAVE AREA ADDR
         XC    SAVE+4(4),SAVE+4    CLEAR PREVIOUS SAVE AREA ADDR
CMDOUT   RETURN (14,12),RC=0
         SPACE 3
CMDACTIV LA    R1,ACTVMSG          CMDSBSYS ACTIVE MSG
         MVI   15(R11),X'04'       INDICATE CMD SUBSYS PROCESSED
         LR    R0,R4               LOAD UCMID
         SVC   35
         RETURN (14,12),RC=0
         EJECT
CMDSTOP  MVI   15(R11),X'04'       INDICATE CMD SUBSYS PROCESSED
         WTO   'COMMAND SUB-SYSTEM TERMINATED',DESC=2
         L     R0,SIZE             LOAD SSVT AND WORK AREA SIZE
         L     R1,16(0,R2)         LOAD SSVT AND WORK AREA ADDR
         XC    16(4,R2),16(R2)     CLEAR SSVT ADDR IN SSCVT
         FREEMAIN R,LV=(0),A=(1)   FREE AREA
         RETURN (14,12),RC=0
         EJECT
         USING CMDRETN,R14
CMDRETN  L     R1,CMDBASE          LOAD RELATIVE OFFSET
         LA    R12,0(0,R14)        LOAD
         SR    R12,R1                 MODULE BASE ADDR
         B     CMDRETN1
         DROP  R14
         SPACE 3
         DS    0F
CMDBASE  DC    A(CMDRETN-CMDENTRY)
         SPACE 3
         USING CMDENTRY,R12
CMDRETN1 L     R1,16               CVT
         L     R1,296(0,R1)        JESCT
         L     R1,24(0,R1)         1ST SSCVT
         SPACE 3
CMDRETN2 CLC   8(3,R1),=C'ALT'     CMD SUB-SYSTEM SSCVT ENTRY @@@@@@@@
         BE    CMDRETN3            YES, CONTINUE
         L     R1,4(0,R1)          NEXT SSCVT
         B     CMDRETN2
         SPACE 3
CMDRETN3 L     R1,16(0,R1)         LOAD SSVT ADDR
         LA    R3,0(0,R1)          LOAD WORK AREA ADDR
         LA    R13,SAVE            LOAD SAVE AREA ADDR
         B     CMDEXIT
         EJECT
WTOENTRY EQU   *
         BR    R14
         EJECT
MSGENTRY EQU   *
         BR    R14
         EJECT
         LTORG
         SPACE 5
         DS    0F
SIZE     DC    X'F1',AL3(AREAEND-AREA)
         SPACE 3
         DS    0F
WTOOVLY  DS    0CL52
         DC    X'00340100'
         DC    CL4'--  ',CL8'CMDSBSYS',CL3' (#'
         DC    CL4' )  ',CL6'L=    ',CL4' ',CL8' ',CL7' ',CL4'  --'
         SPACE 3
ERRMSG   DS    0CL48
         DC    X'00300100'
         DC    CL44'CMD SUBSYS -   COMMAND PARAMETER ERROR'
         SPACE 3
SUPPMSG  DS    0CL48
         DC    X'00300100'
         DC    CL44'CMD SUBSYS -   COMMAND NOT SUPPORTED'
         SPACE 3
UCMMSG   DS    0CL48
         DC    X'00300100'
         DC    CL44'CMD SUBSYS -   CONSOLE NOT ACTIVE'
         SPACE 3
ACTVMSG  DS    0CL48
         DC    X'00300100'
         DC    CL44'CMD SUBSYS -   COMMAND REJECTED, SUBSYS BUSY'
         EJECT
AREA     DSECT
SSVT     DS    H
SSVTFNUM DS    H
SSVTFCOD DS    XL256
SSVTFRTN DS    0F
SSVTFUNC DS    0F
SSVTFUN1 DS    F
SSVTFUN2 DS    F
SSVTFUN3 DS    F
         DS    7F
         SPACE 2
CMDTABLE DS    20F
CMDEND   DS    F
         SPACE 2
         DS    0D
USERWORK DS    0CL228
DOUBLE   DS    D
SAVE     DS    18F
COMMAND  DS    CL80
INCONS   DS    CL2
         SPACE 2
         DS    0F
WTOLIST  DS    0CL52
         DS    CL19
CMDID    DS    C
         DS    CL5
UCMID    DS    CL2
         DS    CL2
SYSID    DS    CL4
         DS    CL2
YEAR     DS    CL2
         DS    C
DAY      DS    CL3
         DS    CL2
HOUR     DS    CL2
         DS    C
MINUTE   DS    CL2
         DS    CL4
PADDING  DS    CL12
         SPACE 2
XSA      DS    0CL48
         DS    5F
XAL      DS    F
         DS    4F
XAU      DS    X
         DS    XL7
XSW      DS    18F               STANDARDS IO DRIVER AREA.
XSAEND   EQU   *
JOBTABLE DS    30CL12
JOBEND   DS    F
         SPACE 2
AREAEND  DS    0D
         EJECT
         REGS
         END
