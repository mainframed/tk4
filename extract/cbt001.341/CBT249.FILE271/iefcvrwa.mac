*%GOTO CNVPROLG;
         MACRO
         IEFCVRWA
*
*%CNVPROLG:;
*/*
*   MACMEAN  IEFCVRWA MEANS CONVERTER WORK AREA
*   MACCOMP  Y-2  SC1B9/PZD11
*   MACSTAT  Y-2  74038/VS02718                                 YM02718
*
***********************************************************************
*                                                                     *
*   IEFCVRWA MAPS DATA FIELDS AND SWITCHES UNIQUE TO THE CONVERTER.   *
*   IT MUST BE INVOKED IMMEDIATELY FOLLOWING IEFCOMWA, TO INSURE      *
*   CORRECT ADDRESSABILITY. REGISTER 12 IS THE BASE REGISTER ACROSS   *
*   THE ENTIRE WORK AREA MAPPED BY BOTH IEFCOMWA AND IEFCVRWA.        *
*   THEREFORE DISPLACEMENTS FOR THE CONVERTER WORK AREA MUST BE A     *
*   CONTINUATION OF THOSE FOR THE COMMON WORK AREA.                   *
*                                                                     *
*   THIS MACRO IS NEW FOR VS2/RELEASE 2.                        Y02668*
*                                                                     *
***********************************************************************
**/
*%GOTO CNVWAPLS;
*/*
*
CVRWA    DS    0F                  START OF CONVERTER WORK AREA. Y02668
*
*  POINTERS, WORK AND DATA AREAS.
*
PDCBP    DS    F                        PROCLIB DCB OR NOTED TTR
IWAINTS3 DS    F                   PTR TO EXIT LIST ACCT ENTRY     AABA
IWAINTS4 DS    F                   PTR TO BLOCKED PROCLIB BUFFER   AABA
CWABPROC EQU   IWAINTS4
IWAINTS5 DS    F                   PTR TO JOB MNGMT RECORD         AABA
CWATXTEX DS    F                   PTR TO TEXT EXIT RTNE ADDR.
RSTMT    DS    F                        PTR TO RDR STMT
         DS    CL1                      VERB #
*                                          NULL=0
*                                          JOB=1
*                                          EXEC=2
*                                          DD=4
*                                          PROC=8                  AAAA
SSE      EQU   128                         DD STMT SEQUENCE ERROR
CRE      EQU   64   BIT 1         MISPLACED SYSCHK DD STMT         AACA
         DS    CL1                      NAME LENGTH
         DS    CL1                      RELATIVE LIST PTR
         DS    CL1                 RESERVED.
PSTMT    DS    2F                       SAME AS RDR PARM LIST
VERB     EQU   4                        OFFSET FOR VERB BYTE
NAMEL    EQU   5                        OFFSET FOR NAME LENGTH
LISTPTR  EQU   6                        OFFSET FOR REL LIST PTR
*                                  PROCLIB MERGE CONTROL DATA
PDNM     DS    CL8                      PROC DD NAME            YM02703
PSNM     DS    CL8                      PROC STEP NAME          YM02703
RDNM     DS    CL8                      RDR DD NAME             YM02703
RSNM     DS    CL8                      RDR STEP NAME           YM02703
PPSN     DS    CL8                      PREVIOUS PROC STEP NAME YM02703
IWAPARM  DS    F   ADDRESS OF THE PARAMETER LIST USED FOR          O106
*                     PROCESSING IN-LINE PROCEDURES                O106
*                     SET AND USED BY IEFVINA AND IEFVEA           O106
DREFB    DS    CL176        SYMBOLIC PARAMETER TABLE             Y02668
IWAJOBS5 DS    F                   CHKP/REST - PTR TO SYSCHK DD    AAAA
IWAWKBF  DS    F   ADDRESS OF THE WORK AREA GOTTEN BY IEFVHCB      O106
IWASTAPL DS    F         POINTER TO R/I STAE PARAMETER LIST      A39047
CWAJMRPT DS    F                   POINTER TO JMR.
IWANELJC DS    F         NEL JCL POINTER FIELD.                    I272
*                        STORED BY IEFVH1. USED BY IEFVFA FOR      I272
*                            INPUT TO POST SCAN ROUTINE            I272
TBEGP    DS    F                        TEXT BEGIN POINTER
TKEYP    DS    F                        TEXT KEY POINTER
TNUMP    DS    F                        TEXT NUMBER POINTER
TLENP    DS    F                        TEXT LENGTH POINTER
TENDP    DS    F                        TEXT END POINTER
AODSPCSA DS    F                   SAVE RETURN REGISTER IN VFA.  Y02668
AOFDTMP1 DS    F                   ADDR OF SPECIAL FIND ROUTINE. Y02668
AOKSCHSA DS    8F                  AOKSRCHR REG SAVE AREA.       Y02668
AOGACSA  EQU   AOKSCHSA            GET AND CLEAR RTNE SAVE AREA. Y02668
*                                                                Y02668
AOKSR1SA DS    2F                  AOKSR1 REG SAVE AREA.         Y02668
AOHEBSA  DS    F                   VHEB RETURN REG SAVE AREA.    Y02668
AODFLTSA DS    7F                  AODFAULT REG SAVE AREA.       Y02668
AOBSKSA  DS    F                   AOBASEKY REG SAVE AREA.       Y02668
CWASAVPT DS    F                   PTR TO SAVE AREA OF CVR'S     Y02668*
                                   CALLER - ALSO USED BY         Y02668*
                                   SUBSYSTEM AT TEXT EXIT.       Y02668
AOFDPCSV DS    CL8                 PROCEDURE NAME.               Y02668
AOSCHKYS DS    CL8                 LIST OF KEYS FOR AOKSRCHR.    Y02668
IWABPAM  DS    CL3                 BPAM ACCESS METHOD ADDRESS M3739O106
*                       SET AND USED BY IEFVEA FOR PROCESSING      O106
*                       IN-LINE PROCEDURES                         O106
*
AOKSRPRM DS    CL3                 AOKSR1 PARM LIST.             Y02668
AOKSRNBR EQU   AOKSRPRM            NUMBER OF PARAMS THIS KEYWORD.Y02668
AOKSRSCT EQU   AOKSRPRM+1          LENGTH OF PARAM OR SUBLIST CT.
AOKSRBY3 EQU   AOKSRPRM+2          LENGTH OF PARAM IF AOKSRCT IS Y02668*
                                   A SUBLIST COUNT.              Y02668
IWANLRC  DS    H                   NUMBER RECORDS (BLOCKED PROC)   AABA
CURLE    DS    H                        CURRENT LEVEL
LASLE    DS    H                        LAST LEVEL
AOSTRLTH DS    H                   LENGTH OF TEXT STRING.        Y02668
IWAWRNMS DS    CL1                 WARNING MESSAGE CODE.         Y02668
CWACHIDL DS    CL1                 CHECKID LENGTH.               Y02668
*
*  SWITCH BYTES.
*
IWAJMSGL DS    CL1                 MSGLEVEL VALUE.               Y02668
AOMSGLV0 EQU   X'00'               BIT SETTING FOR MSGLEVEL=1.   Y02668
AOMSGLV1 EQU   X'10'               BIT SETTING FOR MSGLEVEL=1.   Y02668
AOMSGLV2 EQU   X'20'               BIT SETTING FOR MSGLEVEL=2.   Y02668
*
AOSW2    DS    CL1                 SWITCH BYTE.
AOPROCNM EQU   X'08'               PROCNAME POSITIONAL ON EXEC.  Y02668
AOSW3    DS    CL1                                               Y02668
AOBTCHSW EQU   X'01'               RETURN TO VHA FLAG.           Y02668
AOFDPCL  DS    CL1                 LENGTH OF PROCEDURE NAME.     Y02668
IWAEXTS  DS    CL1            SPECIAL CALLER EXITS                I171
IWASFIND EQU   2                        BIT-6 SPECIAL PROCLIB FINDI171
IWAFINDP DS    CL3                      ENTRY POINT FOR 'FIND' ISSI171
*                                       FOR SPECIAL PROCLIB ACCESSI171
OSW2     DS    CL1                 OPTION SWITCHES FROM PARM FIELD
CMAUTH   EQU   3                        BITS-6,7 COMMAND AUTHORIZATION
SWA      DS    CL1                 SWITCH A
JTOP     EQU   128                      BIT-0  JOB TO PROCESS
JHS      EQU   64                       BIT-1 JOB HAS A STEP
EOFR     EQU   2                        BIT-6 EOF RECEIVED
DLM      EQU   1                        BIT-7 DLM KWD SPECIFIED YM03459
SWB      DS    CL1                 SWITCH B
CXP      EQU   128                      BIT-0 CONTINUATION EXP BY SCAN
CXPN     EQU   64                       BIT-1 CONT EXP & NOT RECEIVED
CXPC     EQU   32                       BIT-2 CONT EXP & CANCELLED
FRCV     EQU   2                        BIT-6 1ST STMT RECEIVED
SWC      DS    CL1                 SWITCH C
IOERR    EQU   64                       BIT-1 I/O ERROR ON INPUT
NRCV     EQU   32                       BIT-2 RDR NULL RECEIVED
PEXP     EQU   16                       BIT-3 PROCEDURE EXEC STMT EXPEC
SWD      DS    CL1                 SWITCH D
FEXRCV   EQU   32                       BIT-2 1ST EXEC RCVD THIS JOB
SYMPRC   EQU   1                        BIT-7 FIRST ACCESS OF PROC AAAA
SWV      DS    CL1           SCAN SWITCHES     288               A24895
*                  THIS BYTE OF SWITCHES MOVED FROM SWA TO GIVE  A24895
*                            IT LIFE ACROSS CALLS OF IEFVFB.     A24895
OVKEYSWZ EQU   SWV           IF ON, THIS KEY OVERRIDDEN  187     A24895
OVKEYSW  EQU   128                                               A24895
PROCERRZ EQU   SWV           IF ON, ERROR THIS STATEMENT  187    A24895
PROCERR  EQU   64                                                A24895
VERBCSWZ EQU   SWV           187                                 A24895
VERBCSW  EQU   32                                                A24895
FBFLUSHZ EQU   SWV           SYMBOLIC PARM FLUSH INDICATOR       A24895
FBFLUSH  EQU   16                                                A24895
AMPSWZ   EQU   SWV           IF ON,TEXT DEFINES A SYMBOLIC PARM  A24895
AMPSW    EQU   8                                                 A24895
FBLITRLZ EQU   SWV    IF ON, TEXT IS LITERAL(ENCLOSED IN QUOTES) A24895
FBLITRL  EQU   4                                                 A24895
FPRNSWZ  EQU   SWV           IF ON, INDICATES LEFT PAREN         A24895
FPRNSW   EQU   2                                                 A24895
LPBYSWZ  EQU   SWV           IF ON, BYPASS LEFT PAREN CHECK      A24895
LPBYSW   EQU   1                                                 A24895
CLEARVZ  EQU   SWV           187                                 A24895
CLEARV   EQU   OVKEYSW+PROCERR+VERBCSW+FBFLUSH+AMPSW+FBLITRL+FPRNSW 895
*                                  PROC STATEMENT PARAM LIST
CRSW1    DS    CL1                CHECKPOINT RESTART SWITCHES      AACA
CPFLG    EQU   128  BIT 0         GET/FREE SYSCHK DD STMT CORE     AACA
CRRES1   EQU   16   BIT 3         RESERVED                         AACA
         DS    CL1                 RESERVED                      Y02668
SYMTTR   DS    F                   TTR OF FIRST SYMBUF
IWANELEN DS    CL1      LENGTH OF NEL,SET BY IEFVH1,USED BY
*                           IEFVH2,IEFVHN,ETC.
*
SWY      DS    CL1                 SCAN SWITCHES
SWZ      DS    CL1                 CONTROL AND SCAN JOINT SWITCHES
CMT      EQU   128                      COMMENT SWITCH
DDOV     EQU   64                       DD OVERRIDE SWITCH
ENDS     EQU   32                       END SCAN SWITCH
COLST    EQU   16                       COLUMN 72 SWITCH
JOBSW    EQU   8                        JOB SWITCH
EXECSW   EQU   4                        EXEC SWITCH
DDSW     EQU   2                        DD SWITCH
SNPSW    EQU   1                        STATEMENT SYSOUT SWITCH.
RCHAR1   DS    CL1                 RESERVED                     YM00373
CWALINK  DS    F                   PTR TO TEXT EXIT LINK AREA   YM00373
CWALINKL DS    F                   LTH OF LINK AREA             YM00373
CWAPSENM DS    CL8                 POST SCAN EXIT NAME          YM00373
CDAUTHWA DS    F                   COMD AUTH CONVERSION WK AREA.YM02718
RBLOCK   DS    20F                 BLOCK OF UNNAMED RES'D WDS.  YM02718
RFULLA   DS    F                   RESERVED                     YM02718
RFULLB   DS    F                   RESERVED                     YM02718
RFULLC   DS    F                   RESERVED                     YM02718
RFULLD   DS    F                   RESERVED                     YM02718
RFULLE   DS    F                   RESERVED                     YM02718
*          ********************************************************
*          *                                                      *
*          *             END OF CONVERTER WORK AREA.              *
*          *                                                      *
*          ********************************************************
*
CVRWAEND DS    0C                                               YM00373
CVRWALTH EQU   CVRWAEND-CVRWA      LTH OF CVR WORK AREA.         Y02668
WALTH    EQU   CVRWAEND-COMWA      LTH OF CVR+COMMON WORK AREAS. Y02668
         MEND
**/
*%CNVWAPLS:;
*DCL
* 1 CVRWA BASED(ADDR(COMWA)+LENGTH(COMWA)) BDY(WORD),        /*Y02668*/
*
*/*  POINTERS, WORK AND DATA AREAS                             Y02668*/
*
*   2 PDCBP    PTR(31),      /* PROCLIB DCB OR NOTED TTR       Y02668*/
*   2 IWAINTS3 PTR(31),      /* PTR TO EXIT LIST ACCT ENTRY    Y02668*/
*   2 IWAINTS4,              /*                                Y02668*/
*     3 CWABPROC PTR(31),    /* PTR TO BLOCKED PROCLIB BUFFER  Y02668*/
*   2 IWAINTS5 PTR(31),      /* PTR TO JOB MNGMT RECORD        Y02668*/
*   2 CWATXTEX PTR(31),      /* PTR TO TEXT EXIT RTNE ADDRESS  Y02668*/
*   2 RSTMT,                 /*                                Y02668*/
*     3 RSTMTPTR PTR(31),    /* PTR TO RDR STMT                Y02668*/
*     3 VERB,                /* VERB #                         Y02668*/
*       4 SSE      BIT(1),   /* DD STMT SEQUENCE ERROR         Y02668*/
*       4 CRE      BIT(1),   /* MISPLACED SYSCHECK DD STMT     Y02668*/
*       4 *        BIT(6),   /* NULL=0 JOB=1 EXEC=2 DD=4 PROC=8Y02668*/
*     3 NAMEL    FIXED(8),   /* LENGTH OF NAME                 Y02668*/
*     3 LISTPTR  FIXED(8),   /* RELITIVE LIST POINTER          Y02668*/
*     3 *        CHAR(1),    /* UNUSED                         Y02668*/
*   2 PSTMT,                 /*                                Y02668*/
*     3 STMTPTRP PTR(31),    /* PTR TO RDR STMT                Y02668*/
*     3 VERBP,               /* VERB #                         Y02668*/
*       4 SSEP     BIT(1),   /* DD STMT SEQUENCE ERROR         Y02668*/
*       4 CREP     BIT(1),   /* MISPLACED SYSCHECK DD STMT     Y02668*/
*       4 *        BIT(6),   /* NULL=0 JOB=1 EXEC=2 DD=4 PROC=8Y02668*/
*     3 NAMELP   FIXED(8),   /* LENGTH OF NAME                 Y02668*/
*     3 LISTPTRP FIXED(8),   /* RELITIVE LIST POINTER          Y02668*/
*     3 *        CHAR(1),    /* UNUSED                         Y02668*/
*
*/*  PROCLIB MERGE CONTROL DATA                                Y02668*/
*
*   2 PDNM     CHAR(8),      /* PROC DD NAME                   Y02668*/
*   2 PSNM     CHAR(8),      /* PROC STEP NAME                 Y02668*/
*   2 RDNM     CHAR(8),      /* RDR DD NAME                    Y02668*/
*   2 RSNM     CHAR(8),      /* RDR STEP NAME                  Y02668*/
*   2 PPSN     CHAR(8),      /* PREVIOUS PROC STEP NAME        Y02668*/
*   2 IWAPARM  PTR(31),      /* ADDRESS OF PARAMETER LIST USED Y02668*/
*                            /* FOR PROCESSING IN-LINE PROCS   Y02668*/
*   2 DREFB    CHAR(176) BDY(WORD), /* SYSMOLIC PARM TABLE     Y02668*/
*   2 IWAJOBS5 PTR(31),      /* CHKP/REST - PTR TO SYSCHK DD   Y02668*/
*   2 IWAWKBF  PTR(31),      /* PTR TO VHCB WORK AREA          Y02668*/
*   2 IWASTAPL PTR(31),      /* PTR TO STAE PARAMETER LIST     Y02668*/
*   2 CWAJMRPT PTR(31),      /* PTR TO JMR                     Y02668*/
*   2 IWANELJC PTR(31),      /* PTR TO NEL JCL FIELD. PST/SCAN Y02668*/
*   2 TBEGP    PTR(31),      /* TEXT BEGIN POINTER             Y02668*/
*   2 TKEYP    PTR(31),      /* TEXT KEY POINTER               Y02668*/
*   2 TNUMP    PTR(31),      /* TEXT NUMBER POINTER            Y02668*/
*   2 TLENP    PTR(31),      /* TEXT LENGTH POINTER            Y02668*/
*   2 TENDP    PTR(31),      /* TEXT END POINTER               Y02668*/
*   2 AODSPCSA PTR(31),      /* SAVE RETURN REGISTER IN VFA    Y02668*/
*   2 AOFDTMP1 PTR(31),      /* ADDR OF SPECIAL FIND ROUTINE   Y02668*/
*   2 AOKSCHSA,              /* AOKSRCHR REG SAVE AREA.        Y02668*/
*     3 AOGACSA  CHAR(32),   /* GET AND CLEAR RTNE SAVE AREA   Y02668*/
*   2 AOKSR1SA CHAR(8),      /* AOKSR1 REG SAVE AREA           Y02668*/
*   2 AOHEBSA  PTR(31),      /* VHEB RETURN REG SAVE AREA      Y02668*/
*   2 AODFLTSA CHAR(28),     /* AODFAULT REG SAVE AREA         Y02668*/
*   2 AOBSKSA  PTR(31),      /* AOBASEKY REG SAVE AREA         Y02668*/
*   2 CWASAVPT PTR(31),      /* PTR TO SAVE AREA OF CVR'S      Y02668*/
*                            /* CALLER - ALSO USED BY SUBSYSTEMY02668*/
*                            /* AT TEXT EXIT                   Y02668*/
*   2 AOFDPCSV CHAR(8),      /* PROCEDURE NAME                 Y02668*/
*   2 AOSCHKYS CHAR(8),      /* LIST OF KEYS FOR AOKSRCHR      Y02668*/
*   2 IWABPAM  CHAR(3),      /* BPAM ACCESS METHOD ADDRESS SET Y02668*/
*                            /* AND USED BY IEFVEA FOR         Y02668*/
*                            /* PROCESSING IN-LINE PROCEDURES  Y02668*/
*
*   2 AOKSRPRM,              /* AOKSR1 PARM LIST               Y02668*/
*     3 AOKSRNBR CHAR(1),    /* NUMBER OF PARMS IN KEYWORD     Y02668*/
*     3 AOKSRSCT CHAR(1),    /* LENGTH OF PARM OR SUBLIST CNT  Y02668*/
*     3 AOKSRBY3 CHAR(1),    /* LENGTH OF PARM IF AOKSRCT IS A Y02668*/
*                            /* SUBLIST COUNT                  Y02668*/
*   2 IWANLRC  FIXED(15),    /* NUMBER OF RECORDS (BLKED PROC) Y02668*/
*   2 CURLE    FIXED(15),    /* CURRENT LEVEL                  Y02668*/
*   2 LASLE    FIXED(15),    /* LAST LEVEL                     Y02668*/
*   2 AOSTRLTH FIXED(15),    /* LENGTH OF TEXT STRING          Y02668*/
*   2 IWAWRNMS CHAR(1),      /* WARNING MESSAGE CODE           Y02668*/
*   2 CWACHIDL CHAR(1),      /* CHECKID LENGTH                 Y02668*/
*
*/*  SWITCH BYTES                                              Y02668*/
*
*   2 IWAJMSGL CHAR(1),      /* MSGLEVEL VALUE                 Y02668*/
*                            /* '00'X FOR MSGLEVEL=1           Y02668*/
*                            /* '10'X FOR MSGLEVEL=1           Y02668*/
*                            /* '20'X FOR MSGLEVEL=2           Y02668*/
*   2 AOSW2,                 /* SWITCH BYTE                    Y02668*/
*     3 *        BIT(4),     /* UNUSED                         Y02668*/
*     3 AOPROCNM BIT(1),     /* PROCNAME POSITIONAL ON EXEC    Y02668*/
*     3 *        BIT(3),     /* UNUSED                         Y02668*/
*   2 AOSW3,                 /* SWITCH BYTE                    Y02668*/
*     3 *        BIT(7),     /* UNUSED                         Y02668*/
*     3 AOBTCHSW BIT(1),     /* RETURN TO VHA FLAG             Y02668*/
*   2 AOFDPCL  CHAR(1),      /* LENGTH OF PROCEEDURE NAME      Y02668*/
*   2 IWAEXTS,               /* SPECIAL CALLER EXITS           Y02668*/
*     3 *        BIT(6),     /* UNUSED                         Y02668*/
*     3 IWASFIND BIT(1),     /* BIT-6 SPECIAL PROCLIB FIND     Y02668*/
*     3 *        BIT(1),     /* UNUSED                         Y02668*/
*   2 IWAFINDP CHAR(3),      /* ENTRY POINT FOR 'FIND'FOR      Y02668*/
*                            /* SPECIAL PROCLIB ACCESS         Y02668*/
*   2 OSW2     CHAR(1),      /* OPTION SWITCHES FROM PARM FIELDY02668*/
*                            /* BITS-6,7 COMMAND AUTHORIZATION Y02668*/
*   2 SWA,                   /* SWITCH A                       Y02668*/
*     3 JTOP     BIT(1),     /* JOB TO PROCESS                 Y02668*/
*     3 JHS      BIT(1),     /* JOB HAS A STEP                 Y02668*/
*     3 *        BIT(4),     /* UNUSED                         Y02668*/
*     3 EOFR     BIT(1),     /* EOF RECIEVED                   Y02668*/
*     3 DLM      BIT(1),     /* DLM KEYWORD SPECIFIED         YM03459*/
*   2 SWB,                   /* SWITCH B                       Y02668*/
*     3 CXP      BIT(1),     /* CONTINUATION EXPECTED BY SCAN  Y02668*/
*     3 CXPN     BIT(1),     /* CONT EXP AND NOT RECEIVED      Y02668*/
*     3 CXPC     BIT(1),     /* CONT EXP AND CANCELLED         Y02668*/
*     3 *        BIT(3),     /* UNUSED                         Y02668*/
*     3 FRCV     BIT(1),     /* FIRST STATEMENT RECEIVED       Y02668*/
*     3 *        BIT(1),     /* UNUSED                         Y02668*/
*   2 SWC,                   /* SWITCH C                       Y02668*/
*     3 *        BIT(1),     /* UNUSED                         Y02668*/
*     3 IOERR    BIT(1),     /* I/O ERROR ON INPUT             Y02668*/
*     3 NRCV     BIT(1),     /* RDR NULL RECEIVED              Y02668*/
*     3 PEXP     BIT(1),     /* PROC EXEC STMT EXPECTED        Y02668*/
*     3 *        BIT(4),     /* UNUSED                         Y02668*/
*   2 SWD,                   /* SWITCH D                       Y02668*/
*     3 *        BIT(2),     /* UNUSED                         Y02668*/
*     3 FEXRCV   BIT(1),     /* FIRST EXEC RECEIVED            Y02668*/
*     3 *        BIT(4),     /* UNUSED                         Y02668*/
*     3 SYMPRC   BIT(1),     /* FIRST ACCESS OF PROC           Y02668*/
*   2 SWV,                   /* SCAN SWITCHES                  Y02668*/
*     3 OVKEYSW  BIT(1),     /* THIS KEY OVERRIDDEN            Y02668*/
*     3 PROCERR  BIT(1),     /* ERROR THIS STATEMENT           Y02668*/
*     3 VERBCSW  BIT(1),     /*                                Y02668*/
*     3 FBFLUSH  BIT(1),     /* SYMBOLIC PARM FLUSH INDICATOR  Y02668*/
*     3 AMPSW    BIT(1),     /* TEXT DEFINES A SYMBOLIC PARM   Y02668*/
*     3 FBLITRL  BIT(1),     /* TEXT IS LITERAL                Y02668*/
*     3 FPRNSW   BIT(1),     /* INDICATES LEFT PAREN           Y02668*/
*     3 LPBYSW   BIT(1),     /* BYPASS LEFT PAREN CHECK        Y02668*/
*   2 CRSW1,                 /* CHECKPOINT RESTART SWITCHES    Y02668*/
*     3 CPFLG    BIT(1),     /* GET/FREE SYSCHK DD STMT CORE   Y02668*/
*     3 *        BIT(2),     /* UNUSED                         Y02668*/
*     3 CRRES1   BIT(1),     /* RESERVED                       Y02668*/
*     3 *        BIT(4),     /* UNUSED                         Y02668*/
*   2 *        CHAR(1),      /* RESERVED                       Y02668*/
*   2 SYMTTR   PTR(31),      /* TTR OF FIRST SYMBUF            Y02668*/
*   2 IWANELEN FIXED(8),     /* LENGTH OF NEL                  Y02668*/
*   2 SWY      CHAR(1),      /* SCAN SWITCHES                  Y02668*/
*   2 SWZ,                   /* CONTROL AND SCAN SWITCHES      Y02668*/
*     3 CMT      BIT(1),     /* COMMENT SWITCH                 Y02668*/
*     3 DDOV     BIT(1),     /* DD OVERIDE SWITCH              Y02668*/
*     3 ENDS     BIT(1),     /* END SCAN SWITCH                Y02668*/
*     3 COLST    BIT(1),     /* COLUMN 72 SWITCH               Y02668*/
*     3 JOBSW    BIT(1),     /* JOB SWITCH                     Y02668*/
*     3 EXECSW   BIT(1),     /* EXEC SWITCH                    Y02668*/
*     3 DDSW     BIT(1),     /* DD SWITCH                      Y02668*/
*     3 SNPSW    BIT(1),     /* STATEMENT SYSOUT SWITCH        Y02668*/
*   2 RCHAR1   CHAR(1),      /* RESERVED                      YM00373*/
*   2 CWALINK  FIXED(31),    /* PTR TO TEXT EXIT LINK AREA    YM00373*/
*   2 CWALINKL FIXED(31),    /* LTH OF LINK AREA              YM00373*/
*   2 CWAPSENM CHAR(8),      /* POST SCAN EXIT NAME           YM02718*/
*   2 CDAUTHWA FIXED(32),    /* COMD AUTH CONVERSION WRK AREA YM02718*/
*   2 RBLOCK   CHAR(80) BDY(WORD), /* BLOCK OF RESERVED WORDS YM02718*/
*   2 RFULLA   FIXED(32),    /* RESERVED                      YM02718*/
*   2 RFULLB   FIXED(32),    /* RESERVED                      YM02718*/
*   2 RFULLC   FIXED(32),    /* RESERVED                      YM02718*/
*   2 RFULLD   FIXED(32),    /* RESERVED                      YM02718*/
*   2 RFULLE   FIXED(32);    /* RESERVED                      YM02718*/
*
*/*************************************************************Y02668*/
*/*                                                            Y02668*/
*/*  END OF CONVERTER WORK AREA -                              Y02668*/
*/*  TO GET LENGTH OF CONVERTER WORK AREA USE THE LENGTH       Y02668*/
*/*  FUNCTION OF THE NAME  CVRWA                               Y02668*/
*/*                                                            Y02668*/
*/*************************************************************Y02668*/
* LINE TO PREVENT SPF FROM RESEQUENCING THIS MEMBER
