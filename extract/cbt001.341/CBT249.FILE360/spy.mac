         TITLE 'S P Y --  MVS Console SPY Program  --  Vesrion 3.1'
***********************************************************************
*                                                                     *
*                                 S P Y                               *
*                                                                     *
*                               02/26/82                              *
*                                                                     *
*                       Operator Console Monitor                      *
*                                                                     *
*     This program displays the contents of all active graphic        *
*     operator's consoles on a TSO crt. The operator's screen can be  *
*     either a 327x or a 370-168 intrgrated console with 35 lines.    *
*     The TSO user can use any 327x terminal.                         *
*                                                                     *
*     SPY must be APF authorized.  This may be acomplished either by  *
*     standard means or the use of the AUTH macro (AUTH calls the WDA *
*     authorization SVC).  The operator console buffers and control   *
*     blocks are now in fetch protected storage. Be sure to place the *
*     'SPY' command in IKJEFTE2 and/or IKJEFTE8 so that it will       *
*     retain APF authorization from TSO.                              *
*                                                                     *
*     SPY gives a TSO user the capability to enter any                *
*     console operator command. This facility is protected by a       *
*     simple 3 character password (in VIPWORD) to prevent some        *
*     from entering an operator command by accident. This             *
*     authorization is automaticly assigned if a user has OPER.       *
*     THE SYNTAX IS:                                                  *
*                                                                     *
*     JES COMMAND:  $...  ANY JES COMMAND ...                         *
*     OS COMMAND:   /...  ANY OS COMMAND ...  (THE / IS STRIPPED OFF) *
*                                                                     *
*     Typing the 3-letter VIP password 'TOGGLES' the VIP flag.        *
*     This facility works by passing the command to the "COMMAND"     *
*     probram as a parm, who in turn executes it using SVC 34.        *
*     SPY, COMMAND, SWAP and QUEUE must all be APF authorized if they *
*     are to work properly in conecrt. NOTE that the response to      *
*     the command appears ONLY on the screen you are watching at the  *
*     time. Also, your commands have the same console authority as the*
*     screen you are watching, including the master console!  The     *
*     moral being don't watch the master console and accidentally     *
*     enter '/Q' or something like that...                            *
*                                                                     *
*     This probram will probably require both the SYS1.AMODGEN and    *
*     SYS1.APVTMACS macro libraries to assemble properly.             *
*     SPY was developed on a 370/168 MVS Release 3.7. This version    *
*     will work ONLY on MVS/SP 1.3.0 or above.                        *
*                                                                     *
*          Steve Langley                                              *
*          Southern California Edison                                 *
*          P.O. Box 800                                               *
*          Rosemead, Calif. 91770                                     *
*          1-213-572-3435                                             *
*                                                                     *
         EJECT
*                                                                     *
*       The above version has been additionally modified at WDA       *
*       to use BEGIN and FINISH macros.  Other changes will be        *
*       marked with WDA#xx where xx is the change number.             *
*       Questions and comments may be sent to                         *
*                                                                     *
*          Joseph A Martin                                            *
*          State of Wisconsin    (WDA)                                *
*          DH&SS - OIS - WSRCC                                        *
*          P.O. Box 7850                                              *
*          Madison, Wisc. 53707-7850                                  *
*          1-608-266-9525                                             *
*                                                                     *
***********************************************************************
         SPACE
***********************************************************************
*                                                                     *
*                                                                     *
*  COMMAND     DESCRIPTION                                            *
*                                                                     *
*     B        End SPY                                                *
*     C        Switch monitor to console 1                            *
*     Cxx      Switch monitor to console xx                           *
*     Dxx      Set delay to xx tenths seconds                         *
*     E        End SPY                                                *
*     F        Freeze display on current page                         *
*     H        Display the help for PFkeys                     WDA#01 *
*     L        Link to SWAP program (If available)                    *
*     Q        Link to QUEUE program (If available)            WDA#01 *
*     R        Release display                                        *
*     S        Status of all consoles                                 *
*     W        Start timer mode for 30 seconds                        *
*     Wxx      Start timer mode for xx seconds                        *
*     W0       Start timer mode until interrupt                       *
*     ?        Display this page                                      *
*     1        Display mode 1                                         *
*     2        Display mode 2                                         *
*                                                                     *
*  Hitting interrupt will stop the wait timer                         *
*                                                                     *
*     Display modes 1 and 2 are only useful when watching a large     *
*     35-line 3066 370-168 integrated console from a 24-line 327x-2   *
*     TSO terminal. These modes are:                                  *
*                                                                     *
*     Display mode 1 - Page 1 = top 22 lines                          *
*                      Page 2 = bottom 12 lines                       *
*     Display mode 2 - Page 1 = top 22 lines                          *
*                      Page 2 = bottom 22 lines                       *
*                                                                     *
***********************************************************************
         EJECT
*--------------MODIFICATION.LOG---------------------------------------*
*                                                                     *
*  Programmer  ×  Date  × #xx ×  Summary of changes made to program   *
*--------------+--------+-----+---------------------------------------*
* Joe Martin   ×01/23/84× #01 × Carried forward several changes that  *
*              ×        ×     × we had made to previous SPY versions. *
*              ×        ×     × Added BEGIN and FINISH macro support, *
*              ×        ×     × moved several things to a DSECT that  *
*              ×        ×     × is pointed to by R13 (from BEGIN) and *
*              ×        ×     × added R10 as a base register.         *
*              ×        ×     × Also added AUTH macro support.        *
*              ×        ×     × Added support for XCTL to QUEUE cmd,  *
*              ×        ×     × and removed all the PCF2 "X" support. *
*              ×        ×     ×                                       *
* Joe Martin   ×01/23/84× #02 × Changed ERROR message handling and    *
*              ×        ×     × the input line format on the display. *
*              ×        ×     ×                                       *
* Joe Martin   ×01/23/84× #03 × Added PFKey support and associated    *
*              ×        ×     × Help facilities.  Added "#" macros    *
*              ×        ×     × for definition of some screens.       *
*              ×        ×     ×                                       *
* Joe Martin   ×02/22/84× #04 × Added SNAP support for debugging in   *
*              ×        ×     × an authorized environment as the TSO  *
*              ×        ×     × TEST command is not usable there.     *
*              ×        ×     × There are currently 2 SNAPs in the    *
*              ×        ×     × code that may be used as samples or   *
*              ×        ×     × moved as needed.  To triger the SNAP  *
*              ×        ×     × function "ZNAP" must be entered.      *
*              ×        ×     ×                                       *
*---------------------------------------------------------------------*
         EJECT
         PRINT ON,NOGEN
SPY      BEGIN AUTHOR=WDA,BASE=(R12,R11,R10),                   WDA#01 X
               SAVE=(WDASAVE,WDASLEN,0)                         WDA#01
         SPACE
***********************************************************************
*                                                                     *
*                       Program Initialization                        *
*                                                                     *
***********************************************************************
         BAL   R14,INITSCAN       initialize ikjscan parmlist
         GTSIZE ,                 get screen size
         LTR   R0,R0              R0 = number of lines per screen
         BZ    HARDCOPY           if nonzero assume a CRT is in use
***********************************************************************
*                                                                     *
*                       This terminal is a CRT                        *
*                                                                     *
***********************************************************************
CRT      DS    0H
         STH   R0,LPSCREEN        R0 = lines per screen
         STH   R1,CPLINE          R1 = characters per line
         CH    R0,=H'24'          is user on a 3277?
         BE    FLSCREEN           yes, just continue
         MVI   MOD4FLG,X'FF'      set 3278-4 flag ON
         MVC   CMDCTRL(3),R41C1   row 41, col 1
         MVC   PHEADING(3),R42C1  row 42, col 1
         MVC   R24C1(3),R43C1     row 43, col 1
FLSCREEN DS    0H
         CLI   TESTFLAG,X'00'     testflag bypasses several things
         BNE   SKPTST3
         STFSMODE ON,INITIAL=YES  turn on VTAM fullscreen mode
         LA    R3,STAXLIST        R3 = address if stax list macro
         STAX  ATTNEXIT,MF=(E,(3)) attn exit trap
SKPTST3  DS    0H
         B     BLDUCMS            continue with processing UCMS
***********************************************************************
*                                                                     *
*                    This terminal is a hardcopy                      *
*                                                                     *
***********************************************************************
HARDCOPY DS    0H
         STSIZE SIZE=80           otherwise, hardcopy; set LSIZE=80
         MVI   CRTFLAG,X'00'      we are using a hardcopy
         MVC   CMDCTRL(6),BLANKS  zap out 327x cntrl chars
         MVC   PHEADING(5),BLANKS zap out 327x cntrl chars      WDA#01
         MVC   HELP(14),BLANKS    zap out 327x cntrl chars
         MVC   PFKHELP(14),BLANKS zap out 327x cntrl chars      WDA#03
***********************************************************************
*                                                                     *
*          Build a table of UCM addresses (One per console)           *
*                                                                     *
***********************************************************************
BLDUCMS  DS    0H
         L     R4,CVTPTR          R4 = address of CVT
         USING CVT,R4
         L     R4,CVTCUCB         R4 = addr of 'CUCB' (UCM base)
         DROP  R4
         USING UCM,R4
         LR    R2,R4              R2 = R4
         S     R2,=F'4'           R2 = addr of addr of UCM prefix
         L     R2,0(R2)           R2 = addr of UCM prefix
         USING UCMPRFX,R2
         L     R5,UCMVEA          R5 = addr of first UCM entry
         L     R6,UCMVEZ          R6 = length of each UCM entry
         L     R7,UCMVEL          R7 = addr of last UCM entry
         LA    R8,UCMTAB+16       R8 = addr of UCMTAB
         L     R9,UCMTABE         R9 = addr of end of UCMTAB
         XR    R3,R3              R3 = 0 (number of valid UCMS) WDA#01
UCMLOOP  DS    0H
         ST    R5,0(R8)           save UCM address in UCMTAB
         LA    R3,1(R3)           R3 = R3 + 1  (one more UCM)   WDA#01
         C     R5,UCMMCENT        is this UCM the Master Console UCM?
         BNE   UCMNEXT            NO;  go look at next UCM entry
         ST    R3,CONSOLE         YES; look at this one first   WDA#01
UCMNEXT  DS    0H
         LA    R8,16(R8)          R8 = addr of next UCMTAB entry
         CR    R8,R9              does R8 point past end of UCMTAB?
         BNL   UCMFULL            YES; leave loop
         AR    R5,R6              R5 = addr of next UCM entry
         CR    R5,R7              does R5 point past UCM entries?
         BL    UCMLOOP            NO; keep going
         B     UCMDONE            YES; table complete
UCMFULL  DS    0H
         MVC   ERROR(36),ERRMSG5  UCM table too small           WDA#02
UCMDONE  DS    0H
         STH   R3,NUMUCMS         save number of UCMs found     WDA#01
         MVC   CONSOLE(4),=F'1'   make default console = 1      WDA#01
         DROP  R2,R4
***********************************************************************
*                                                                     *
*         Here we go... Use MODESET to put us in key 0                *
*                                                                     *
***********************************************************************
SETAUTH  DS    0H                                                  SP3
         CLI   TESTFLAG,X'00'
         BNE   SKPTST4
         TESTAUTH FCTN=1          check users authority         WDA#01
         LTR   R15,R15            check the return code         WDA#01
         BZ    GOTAUTH            skip auth acquire             WDA#01
         MVI   AUTHFLAG,X'FF'     indicate that we got auth     WDA#01
         AUTH  ON                 issue magic svc to get auth   WDA#01
GOTAUTH  DS    0H                                               WDA#01
         MODESET MODE=SUP                                          SP3
         ESAR  R5                 ged sec ASID                     SP3
         ST    R5,SASID           keep if for later                SP3
         AXSET AX=ONE             set AX to allow SSAR             SP3
         GETMAIN R,LV=820         GETMAIN area for TDCM            SP3
         ST    R1,LOCDCM          save the address                 SP3
SKPTST4  DS    0H
***********************************************************************
*                                                                     *
*                            Top of loop                              *
*              Locate screen buffer and prepare to TPUT               *
*                                                                     *
***********************************************************************
NEXTPAGE DS    0H
         CLI   ATTNFLG,X'00'      was ATTN hit?
         BE    NOATTN             NO, continue loop
         MVI   ATTNFLG,X'00'      YES, reset flag and process it
         MVC   TIME(3),BLANKS     blank out timer field
         MVI   WAITFLG,X'00'      turn off wait flag
         XC    TIMER,TIMER        set timer to 0
NOATTN   DS    0H
         LA    R5,UCMTAB          R5 = addr of UCMTAB
         L     R4,CONSOLE         R4 = console to be displayed
         CH    R4,NUMUCMS         is number too high?
         BNH   GETUCM             NO, continue
RESETCN  DS    0H
         MVC   ERROR(36),ERRMSG1  console undefined             WDA#02
RESETCN1 DS    0H
         L     R4,OLDCONS         reset to old console
         ST    R4,CONSOLE         and save it
GETUCM   DS    0H
         SLL   R4,4               multiply by 16
         LA    R5,0(R5,R4)        R5 = addr of addr of UCM
         LR    R1,R5              R1 = addr of UCMTAB entry
         L     R5,0(R5)           R5 = addr of UCM
         USING UCMLIST,R5
         L     R6,UCMXB           R6 = addr of RDCM
         USING DCMTSRT,R6
         LTR   R6,R6              is this a graphics console?
         BP    GRAPHICS           yes
***********************************************************************
*                                                                     *
*       This is not an operator graphic console - give ERRMSG4        *
*                                                                     *
***********************************************************************
         LA    R5,UCMTAB          R5 = addr of UCMTAB
         MVC   ERROR(36),ERRMSG4  non-graphic console           WDA#02
         B     RESETCN1           reset the consloe number
***********************************************************************
*                                                                     *
*   This is a graphic console - build trailer line with consdata      *
*                                                                     *
***********************************************************************
GRAPHICS DS    0H
         BAL   R14,CONSDATA       call consdata rtn
*       Setup to copy pageable DCM to our address space            SP3
         L     R5,DCMADTRN        addr of TDCM - 'FROM' for MVCP   SP3
         LA    R7,CONASID         get 'CONSOLE' ASID               SP3
         SSAR  R7                 set 'CONSOLE' as SECONDARY       SP3
         L     R7,LOCDCM          'TO' addr for MVCP               SP3
         LA    R3,820             length to move                   SP3
         SR    R15,R15            'FROM' key                       SP3
MOVEDCM  DS    0H
         MVCP  0(R3,R7),0(R5),R15 move the data                    SP3
         BZ    DCMMOVED           branch if move complete          SP3
         LA    R5,256(R5)         bump 'FROM' addr                 SP3
         LA    R7,256(R7)         bump 'TO' addr                   SP3
         SH    R3,=H'256'         decrement true length            SP3
         B     MOVEDCM            go get the rest                  SP3
DCMMOVED DS    0H
         L     R5,SASID           restore previous secondary -     SP3
         SSAR  R5                 should be same as primary        SP3
         L     R7,LOCDCM          addr of our copy of DCM          SP3
         USING DCMSTRT,R7
***********************************************************************
*                                                                     *
*    Fillin operators command input buffer and set VIP flag indicator *
*                                                                     *
***********************************************************************
         MVC   LASTLINE(79),DCMINPUT move in input buffer line
         MVI   MODE+1,C' '        blank out VIP indicator
         CLI   VIPFLG,X'FF'       is the VIP flag on?
         BNE   CHKINTEG           nope
         MVI   MODE+1,C'*'        turn on VIP indicator
***********************************************************************
*                                                                     *
*                         Check console type                          *
*                                                                     *
***********************************************************************
CHKINTEG DS    0H
         MVI   INTEGFLG,X'FF'     turn on 3066 console flag
         CLC   DCMMSGAL(2),=H'30' is this really a 3066 console?
         BE    CHKMODEL           YES; chk if it will fit on our term
         MVI   INTEGFLG,X'00'     NO; turn off 3066 console flag
*        CLC   DCMMSGAL(2),=H'20' is this 327x-2 type console?     AEI
*        BNE   NOTSUPRT           NO;  not supported, so ABEND     AEI
         MVI   FREEZE,C'F'        YES; freeze display
         MVI   PAGE,C'1'               on page 1 of user's CRT
         MVC   TPUTLEN(4),MOD2TPUT set TPUT length for short screen
         B     MOD2               and treet user to MOD2 for now
***********************************************************************
*                                                                     *
*        This operator's console is neither a 24-line 327x-2 nor      *
*        a 35-line 3066 370-168 indegrated console, so ABEND.         *
*                                                                     *
***********************************************************************
NOTSUPRT DS    0H
         LA    R1,ERRMSG6         R1 = addr of string to TPUT
         LA    R0,26              R0 = length of TPUT
         BAL   R14,TERMPUT        do a TPUT
         ABEND 999                ABEND with U999
***********************************************************************
*                                                                     *
*     This is a 35-line 3066 operators console. If the user has a     *
*     43-line 3278-4 there is no problem, the whole thing can be      *
*     displayed at once. However, if the user has a 24-line 327x-2    *
*     we will have to break the display into 2 pages so it will fit.  *
*                                                                     *
***********************************************************************
CHKMODEL DS    0H
         CLI   MOD4FLG,X'FF'      is this a 3278-4? (43 lines)
         BNE   MOD2               NO - must be a MOD2 (24 lines)
***********************************************************************
*                                                                     *
*                  User has a 43-line 3278-4 CRT                      *
*                                                                     *
*        We can just freeze the display on 'PAGE 1' and continue      *
*                                                                     *
***********************************************************************
         MVI   FREEZE,C'F'        freeze the display
         MVI   PAGE,C'1'          on PAGE 1 intentially
         MVC   TPUTLEN(4),MOD4TPUT set length for full 3278-4 screen
         L     R8,DCMASCRN        R8 = addr of screen buffer + 6
         LA    R4,BUF             R4 = addr of output buffer
         LA    R5,M4BUFLEN        R5 = 3278-4 buffer len (35 lines)
         LA    R9,M4BUFLEN        R9 = 3278-4 buffer len (35 lines)
         B     MOVEBUFF
***********************************************************************
*                                                                     *
*                  User has a 24-line 327x-2 CRT                      *
*                                                                     *
*        This oper console will have to be displayed in two segments  *
*        or 'PAGES' since 35 lines won't fit in this 24 line tube.    *
*                                                                     *
***********************************************************************
MOD2     CLI   PAGE,C'1'          are we on page 1?
         BNE   ONTWO              NO, so we must be on 2
         CLI   FREEZE,C'F'        are we frozen on page 1?
         BNE   PAGE2              NO, so display page 2
         B     PAGE1              YES, so display page 1
ONTWO    CLI   FREEZE,C'F'        are we frozen on page 2?
         BE    PAGE2              YES, so display page 2
PAGE1    MVI   PAGE,C'1'          page = 1
         L     R8,DCMASCRN        R8 = addr of screen image buffer + 6
         LA    R4,BUF             R4 = addr of output buffer
         LA    R5,M2BUFLEN        R5 = length of output buf (21 lines)
         LA    R9,M2BUFLEN        R9 = console buffer len   (21 LINES)
         B     MVETRAIL           go move the buffer
PAGE2    MVI   PAGE,C'2'          page = 2
         L     R8,DCMASCRN        R8 = addr of screen image buffer + 6
         CLI   MODE,C'2'          are we in display mode 2?
         BE    DMODE2             YES, branch to DMODE2
DMODE1   LA    R8,LEN22(R8)       move pointer down 23 lines
         LA    R9,LEN13           R9 = length of last 12 lines
         B     CONTINUE           jump around mode 2 display
DMODE2   LA    R8,LEN9(R8)        move pointer down 9 lines
         LA    R9,LEN21           R9 = length of source buffer
CONTINUE LA    R4,BUF             R4 = addr of output buffer
         LA    R5,M2BUFLEN        R5 = length of output buffer
MVETRAIL MVC   ENDMOD2(TRAILEN),CMDCTRL move in trailer
***********************************************************************
*                                                                     *
*               Move the screen image buffer into buf                 *
*                                                                     *
***********************************************************************
MOVEBUFF STM   R4,R9,MOVEBSAV     keep regs                        SP3
*        Setup to copy console buffer to out address space.        SP3
*        First fill area with spaces                               SP3
         L     R9,=X'40000000'    make blank the pad, length=0     SP3
         LA    R8,*               not that it really matters       SP3
         MVCL  R4,R8              pad with spaces                  SP3
         LA    R4,CONASID         get 'CONSOLE' ASID               SP3
         SSAR  R4                 set 'CONSOLE' as secondary       SP3
         LM    R4,R9,MOVEBSAV     get back addresses, lengths      SP3
         SR    R15,R15            'FROM' key                       SP3
MOVEBFR  MVCP  0(R9,R4),0(R8),R15 move it                          SP3
         BZ    BFRMOVED           get out when all moved           SP3
         LA    R8,256(R8)         bump 'FROM' addr                 SP3
         LA    R4,256(R4)         bump 'TO' addr                   SP3
         SH    R9,=H'256'         decrement true length            SP3
         B     MOVEBFR            get the rest                     SP3
BFRMOVED L     R4,SASID           restore previous secondary -     SP3
         SSAR  R4                 should be same as primary.       SP3
         DROP  R5,R6,R7
         CLI   CRTFLAG,X'FF'      is this a CRT?
         BE    TPUTCRT            YES, process as a CRT
***********************************************************************
*                                                                     *
*             User has a line-at-a-time hardcopy terminal             *
*                                                                     *
***********************************************************************
         XR    R8,R8              R8 = counter = 0
         LA    R1,BUF             set pointer to first line of buffer
         ICM   R1,8,EDITFLG       edit mode
         L     R0,=F'78'          R0 length of output line
NEXTL    LR    R3,R1              save R1 since TPUT zaps it
         CLC   0(78,R1),BLANKS    is the entire line x'40's     WDA#01
         BE    NEXTL1             YES, don't print the line     WDA#01
         BAL   R14,TERMPUT        print one line on hardcopy
NEXTL1   LA    R8,1(R8)           add 1 to counter              WDA#01
         C     R8,=F'21'          have we printed last line?
         BE    DOLAST2            YES, continue
         LA    R1,80(R3)          NO, point to next line
         CLI   INTEGFLG,X'FF'     is this an integrated console?
         BE    NOT3270            YES
         MVC   0(5,R1),BLANKS     blank out 3270 ctrl chars
         LA    R1,4(R1)           add 4 extra bytes to skip ctrl chars
NOT3270  L     R0,=F'78'          load length of line
         ICM   R1,8,EDITFLG       edit mode
         B     NEXTL              print next line
DOLAST2  LA    R1,LASTLINE        R1 = addr of string to TPUT
         LA    R0,79              R0 = length of TPUT
         BAL   R14,TERMPUT        do a TPUT
         LA    R1,HEADING         R1 = addr of string to TPUT
         LA    R0,79              R0 = length of TPUT
         BAL   R14,TERMPUT        do a TPUT
         OC    USERLINE(72),BLANKS make command line blanks     WDA#01
         LA    R1,USERLINE        R1 = addr of string to TPUT
         LA    R0,79              R0 = length of TPUT
         BAL   R14,TERMPUT        do a TPUT
         B     CHKWAIT            go check the wait timer
***********************************************************************
*                                                                     *
*               Display the operator's screen on a 327x               *
*                                                                     *
***********************************************************************
TPUTCRT  LA    R1,CLEAR           R1 = addr of output stream
         L     R0,TPUTLEN         R0 = length of TPUT
         ICM   R1,8,FULLSCR       set ASIS type for TPUT
         BAL   R14,TERMPUT        do a TPUT; display entire screen
***********************************************************************
*                                                                     *
*      If we are in wait mode do a STIMER for the necessary length    *
*      of time, then calculate and display the new timer count.       *
*      If count has hit zero, turn off wait flag.                     *
*                                                                     *
***********************************************************************
CHKWAIT  MVC   USERLINE(72),NULLS null out error field          WDA#02
         CLI   WAITFLG,X'FF'      is the wait flag on?
         BNE   READCHAR           NO, so go get a command
         STIMER WAIT,BINTVL=DELAY wait for delay * .01 seconds
         L     R2,TIMER           R2 = current value of timer
         BCTR  R2,0               timer = timer - 1
         ST    R2,TIMER           store new value of timer
         CVD   R2,WORK            convert to decimal
         MVC   SCRATCH(4),PATTERN move in edit pattern
         ED    SCRATCH(4),WORK+6  edit in console number
         MVC   TIME(3),SCRATCH+1  move time left into place
         LTR   R2,R2              has timer hit zero?
         BNZ   NEXTPAGE           NO, continue to count
         MVC   TIME(3),BLANKS     clear counter field
         XI    WAITFLG,X'FF'      toggle wait flag off
         B     NEXTPAGE           and go on as if nothing happened..
***********************************************************************
*                                                                     *
*                       Read command from user                        *
*                                                                     *
***********************************************************************
READCHAR XC    CREPLY(86),CREPLY  clear out the input line      WDA#03
         CLI   CRTFLAG,X'FF'      is this a 327x terminal       WDA#03
         BNE   GETHCOPY           NO - go do TPUT edit          WDA#03
         TGET  CREPLY,86,ASIS     get input line                WDA#03
         CLI   SNAPFLG,X'FF'      do we snap                    WDA#04
         BNE   SKPSNP02           NO - branch                   WDA#04
         STM   R15,R1,SAVER15X    save the registers            WDA#04
         LA    R0,CREPLY          point at start of snap area   WDA#04
         ST    R0,SNAPBGN         save start address            WDA#04
         LA    R1,CREPLY+85       point at end of snap area     WDA#04
         ST    R1,SNAPEND         save end address              WDA#04
         MVI   SNAPEND,X'80'      indicate end of parms         WDA#04
         LA    R0,SNAPBGN         point at beginning of list    WDA#04
         SNAP  DCB=SNAPDCB,LIST=(R0),ID=2                       WDA#04
         LM    R15,R1,SAVER15X    restore the registers         WDA#04
SKPSNP02 DS    0H                                               WDA#04
         LTR   R15,R15            was return code 0             WDA#03
         BNZ   GETERROR           NO - go tell user             WDA#03
         OC    REPLY(80),BLANKS   convert chars to upper case   WDA#03
         ST    R1,DATACHRS        save count of data entener    WDA#03
         CLI   CREPLY,X'6E'       is this a reshow? (VTAM ONLY) WDA#03
         BE    NEXTPAGE           YES, go refresh the display   WDA#03
         CLI   CREPLY,X'7D'       was this "ENTER"              WDA#03
         BNE   PFKCHK01           NO - go check PFK entries     WDA#03
         B     CHKREPLY           go upcase and check reply     WDA#03
GETHCOPY DS    0H                                               WDA#03
         TGET  REPLY,80,EDIT      get input line                WDA#03
         LTR   R15,R15            was return code 0             WDA#03
         BNZ   GETERROR           NO  - go tell user            WDA#03
         OC    REPLY(80),BLANKS   convert chars to upper case   WDA#03
CHKREPLY DS    0H                                               WDA#03
         CLI   REPLY,C' '         just a blank?                 WDA#03
         BE    NEXTPAGE           YES, go refresh the display   WDA#03
         B     REALCMDS           check out command             WDA#03
GETERROR DS    0H                                               WDA#03
         MVC   ERROR(36),ERRMSG8  move in the error message     WDA#03
         B     NEXTPAGE           go display error              WDA#03
***********************************************************************
*                                                                     *
*              PFK routine  - add or change PFK meanings              *
*                           - use the PFK entry as a command          *
*                                                                     *
***********************************************************************
PFKCHK01 DS    0H                                               WDA#03
         LA    R2,PFKTABLE        get start of table            WDA#03
PFKCHK02 DS    0H                                               WDA#03
         CLC   CREPLY(1),0(R2)    do we match the entry         WDA#03
         BE    PFKCHK03           YES, continue                 WDA#03
         LA    R2,40(R2)          point at next entry           WDA#03
         CLI   0(R2),X'FF'        end of table????              WDA#03
         BE    REALCMDS           not in table-check command    WDA#03
         B     PFKCHK02           go try next PFK entry         WDA#03
PFKCHK03 DS    0H                                               WDA#03
         L     R1,DATACHRS        reload data count from TGET   WDA#03
         C     R1,=F'3'           was it PFK+DATA or just PFK?  WDA#03
         BE    PFKCHK04           nodata => just PFK...         WDA#03
         C     R1,=F'42'          check for command too long    WDA#03
         BH    PFKERROR           tell user if too long         WDA#03
         MVC   4(36,R2),REPLY     move command to table         WDA#03
         B     REALCMDS           go see fi command is OK       WDA#03
PFKCHK04 DS    0H                                               WDA#03
         MVC   REPLY(36),4(R2)    move in the command           WDA#03
         MVI   REPLY+36,C' '      make sure blank follows cmd.  WDA#03
         B     REALCMDS           go do command processing      WDA#03
PFKERROR DS    0H                                               WDA#03
         MVC   ERROR(36),ERRMSG9  move message to buffer        WDA#03
         B     NEXTPAGE           redisplay                     WDA#03
***********************************************************************
*                                                                     *
*               Check for system operator commands                    *
*                                                                     *
***********************************************************************
REALCMDS DS    0H                                               WDA#03
         CLI   VIPFLG,X'FF'       are we in VIP mode?
         BNE   PARSECMD           NO, so continue
         LA    R3,OPERCMDL        get address of cmd length     WDA#01
         ST    R3,OPERPRM         store address in parm list    WDA#01
         LA    R3,OPERCN          get address of cons number    WDA#01
         ST    R3,OPERPRM1        store address in parm list    WDA#01
         MVI   OPERPRM1,X'80'     indicate end of parm list     WDA#01
OPER     CLI   REPLY,C'/'         is this an OS operator command?
         BNE   JES                NO, check for JES command
         MVC   OPERCMD(79),REPLY+1 YES; quit and blank out reply field
         MVI   OPERCMD+79,C' '    blank out column 80
         B     DOCMD              branch to COMMAND and SVC34
JES      CLI   REPLY,C'$'         is this a JES command?
         BNE   PARSECMD           NO, continue
         SPACE
*removed MVC   SCRATCH(3),REPLY   save 3 chars of reply         WDA#01
*   "    OC    SCRATCH(3),BLANKS  convert to upper case         WDA#01
*   "    CLC   SCRATCH(3),=CL3'$TA' is this a $TA command?      WDA#01
*   "    BE    CMDOKAY              YES; command is okay        WDA#01
*   "    CLC   SCRATCH(2),=CL2'$T'  is this a $Tx command?      WDA#01
*   "    BE    CMDRSTR              YES; command is restricted  WDA#01
*   "    CLC   SCRATCH(3),=CL3'$VS' is this a $VS command?      WDA#01
*   "    BNE   CMDOKAY            NO;  command is okay          WDA#01
*CMDRSTR DS    0H                                               WDA#01
*        MVC   ERROR(36),ERRMSG7  YES; put in error message     WDA#02
*removed B     NEXTPAGE           and continue on               WDA#01
         SPACE
CMDOKAY  DS 0H
         MVC   OPERCMD(80),REPLY  move cmd in form reply field
DOCMD    DS 0H
         MVC   REPLY(80),BLANKS   blank out reply field
         LA    R3,OPERCMD+79      R3 = addr of last column
         LA    R1,OPERCMD         R1 = addr of first column
NXTCHAR  DS 0H
         CLI   0(R3),C' '         is this a blank?
         BNE   LASTCHAR           NO; this is last char in cmd
         BCTR  R3,0               R3 = R3 - 1
         CR    R3,R1              is whole thing blank?
         BL    NEXTPAGE           YES; something wrong, but cont anyway
         B     NXTCHAR            NO;  go look at next char
LASTCHAR DS 0H
         SR    R3,R1              R3 = R3 - R1
         LA    R3,1(R3)           R3 = R3 + 1
         STH   R3,OPERCMDL        save cmd length
         L     R3,SAVEUPT         R3 = addr of UPT
         USING UPT,R3
         NI    UPTSWS,X'FF'-UPTWTP turn off 'WTP'
         MVC   OPERCN(4),CONSOLE  save console id in command parms
         CLI   SNAPFLG,X'FF'      do we snap                    WDA#04
         BNE   SKPSNP01           NO - branch                   WDA#04
         LA    R1,OPERPRM         R1 = addr of parmlist for     WDA#04
         ST    R1,SNAPBGN         save start address            WDA#04
         LA    R1,96(,R1)         point at the end of area      WDA#04
         ST    R1,SNAPEND         save end address              WDA#04
         MVI   SNAPEND,X'80'      indicate end of parms         WDA#04
         LA    R0,SNAPBGN         point at beginning of list    WDA#04
         SNAP  DCB=SNAPDCB,LIST=(R0),ID=1                       WDA#04
         LA    R1,CLEAR           R1 = addr of output stream    WDA#04
         L     R0,TPUTLEN         R0 = length of TPUT           WDA#04
         ICM   R1,8,FULLSCR       set ASIS type for TPUT        WDA#04
SKPSNP01 DS    0H                                               WDA#04
         LA    R1,OPERPRM         R1 = addr of parmlist for 'COMMAND'
         LINK  EP=COMMAND         execute operator command
         OI    UPTSWS,UPTWTP      turn on 'WTP'
         B     NEXTPAGE           continue
         EJECT
***********************************************************************
*                                                                     *
*          Convert command to upper case and call IKJSCAN             *
*                                                                     *
*    This call to IKJSCAN is completely unnecessary to the operation  *
*    of SPY. It is included solely to allow the 'X' feature of        *
*    PCF2 to operate. If you do not have PCF2, this could be removed. *
*                                                                     *
***********************************************************************
PARSECMD DS    0H
         B     PARSECNT           continue - bypass PCF2 stuff  WDA#01
         SPACE
* PCF2   The following code was left as it was received - while WDA#01
* PCF2   we have PCF2 we don't really want anyone "X"ing here.  WDA#01
* PCF2   Note: The lines with two *'s were commented when I     WDA#01
* PCF2         began removing the PCF2 support code. - JM.      WDA#01
* PCF2         Also-There was other code for PCF2 in INITSCAN.  WDA#01
         SPACE
* PCF2   MVC   CPREPLY(79),REPLY  move in the reply area
* PCF2   XC    CBUF(4),CBUF       clear offset and length
* PCF2   MVI   CBUF+1,84          move in length of 84
* PCF2   MVC   CSPLBLOK(24),CSPLSAVE  copy in CSPL block
* PCF2   XC    CSOABLOK(8),CSOABLOK
**PCF2   L     R2,SAVEJSCB        R2 = addr of out JSCB        AEI SP3
**PCF2   USING IEZJSCB,R2                                      AEI SP3
**PCF2   NI    JSCBOPTS,X'FF'-JSCBAUTH turn off for PCFSCAN    AEI SP3
* PCF2   LA    R1,CSPLBLOK        R1 = addr of cmd scan parm list
* PCF2   L     R15,ADDRSCAN       R15 = addr of IKJSCAN
* PCF2   BALR  R14,R15            invoke IKJSCAN
**PCF2   OI    JSCBOPTS,JSCBAUTH  turn on APF bit again        AEI SP3
**PCF2   DROP  R2                                              AEI SP3
* PCF2   LA    R1,CSOABLOK        R1 = addr of cmd scan output area
* PCF2   USING CSOA,R1
* PCF2   TM    CSOAFLG,CSOANOC    is the buffer empty?
* PCF2   BO    NEXTPAGE           YES; just go refresh
* PCF2   DROP  R1
         SPACE
PARSECNT DS    0H                                               WDA#01
         EJECT
***********************************************************************
*                                                                     *
*                       W  --  Enter wait mode                        *
*                                                                     *
***********************************************************************
CWAIT    CLI   REPLY,C'W'         do we shift to wait mode?
         BNE   CDELAY             NO, so continue
         XI    WAITFLG,X'FF'      turn on wait flag
         LA    R2,30              set default value = 30
         LA    R15,CONVBIN        branch to conversion rtn
         BALR  R14,R15            EBCDIC to binary
         MVC   SCRATCH(4),PATTERN move in edit pattern
         ED    SCRATCH(4),WORK+6  edit in console number
         MVC   TIME(3),SCRATCH+1  move time left into place
         ST    R2,TIMER           store starting timer value
         B     NEXTPAGE           all set - go display next page
***********************************************************************
*                                                                     *
*            D  --  Set timer delay in tenths of a second             *
*                                                                     *
***********************************************************************
CDELAY   CLI   REPLY,C'D'         are we changing the time delay?
         BNE   CCONSOLE           NO, so continue
         LA    R2,10              set default value = 10 tenths second
         LA    R15,CONVBIN        branch to conversion routine
         BALR  R14,R15            EBCDIC to binary
         MVC   SCRATCH(5),DPATTRN move in edit pattern
         ED    SCRATCH(5),WORK+6  edit in delay time
         MVC   PAUSE(3),SCRATCH+2 move time left into place
         MH    R2,=H'10'          convert to 100ths of a second
         ST    R2,DELAY           store wait delay value
         B     NEXTPAGE           all set - go display next page
***********************************************************************
*                                                                     *
*                    C  --  Set console number                        *
*                                                                     *
***********************************************************************
CCONSOLE CLI   REPLY,C'C'         do we change consoles?
         BNE   BYE                NO, so continue
         L     R2,CONSOLE         set default consloe
         ST    R2,OLDCONS         save old console #
         LA    R15,CONVBIN        branch to
         BALR  R14,R15            EBCDIC->binary converter
         ST    R2,CONSOLE         store R2 away as console number
         B     NEXTPAGE           continue
***********************************************************************
*                                                                     *
*                        B  --  Terminate SPY                         *
*                                                                     *
***********************************************************************
BYE      CLI   REPLY,C'B'         is it a 'B'?
         BE    DONE               YES, so quit
***********************************************************************
*                                                                     *
*                        E  --  Terminate SPY                         *
*                                                                     *
***********************************************************************
END      CLI   REPLY,C'E'         is is an 'E'?
         BE    DONE               YES, so quit
***********************************************************************
*                                                                     *
*               F  --  Freeze display on current page                 *
*                                                                     *
***********************************************************************
F        CLI   REPLY,C'F'         is it an 'F'?
         BNE   R                  NO, so continue on
         MVI   FREEZE,C'F'        turn on freeze indicator
         B     NEXTPAGE           continue
***********************************************************************
*                                                                     *
*           R  --  Release freeze on current page display             *
*                                                                     *
***********************************************************************
R        CLI   REPLY,C'R'         is it an 'R'?
         BNE   MODE1              NO, so continue on
         MVI   FREEZE,C'R'        turn off freeze indicator
         B     NEXTPAGE           continue
***********************************************************************
*                                                                     *
*                1  --  Shift to mode 1 type display                  *
*                                                                     *
***********************************************************************
MODE1    CLI   REPLY,C'1'         do we shift to mode 1 dislpay?
         BNE   MODE2              NO, so continue
         MVI   MODE,C'1'          set mode indicator
         B     NEXTPAGE
***********************************************************************
*                                                                     *
*                2  --  Shift to mode 2 type display                  *
*                                                                     *
***********************************************************************
MODE2    CLI   REPLY,C'2'         do we shift to mode 2 display?
         BNE   GETHELP            NO, so continue
         MVI   MODE,C'2'          set mode indicator
         B     NEXTPAGE
***********************************************************************
*                                                                     *
*           ?  --  List help for SPY commands on terminal             *
*                                                                     *
***********************************************************************
GETHELP  CLI   REPLY,C'?'         asking for help?
         BNE   GETHPFK            NO, so continue
         LA    R1,HELP            R1 = addr of help page
         LA    R0,HLENGTH         R0 = length of help page
         ICM   R1,8,FULLSCR       insert ASIS cntl chars
         BAL   R14,TERMPUT        do a TPUT; display HELP
         B     READCHAR
***********************************************************************
*                                                                     *
*                    H  --  DISPLAY PFK ASSIGNMENTS                   *
*                                                                     *
***********************************************************************
GETHPFK  CLI   REPLY,C'H'         do we want PFK help?          WDA#03
         BNE   GETSTAT            NO, so continue               WDA#03
         LA    R1,12              set counter for first pass    WDA#03
         LA    R2,PFKTABLE        point at PFK table            WDA#03
         LA    R3,PFKLIST+3       point at help display (01-12) WDA#03
PFKLOOP1 MVC   1(2,R3),2(R2)      move in PFK number            WDA#03
         MVC   4(36,R3),4(R2)     move in PFK command           WDA#03
         LA    R3,83(R3)          point at next help entry      WDA#03
         LA    R2,40(R2)          point at next PFK command     WDA#03
         BCT   R1,PFKLOOP1        go do next PFK                WDA#03
         LA    R3,PFKLIST+40+3    point at help dislpay (13-24) WDA#03
         LA    R1,12              set counter for second pass   WDA#03
PFKLOOP2 MVC   1(2,R3),2(R2)      move in PFK number            WDA#03
         MVC   4(36,R3),4(R2)     move in PFK command           WDA#03
         LA    R3,83(R3)          point at next help entry      WDA#03
         LA    R2,40(R2)          point at next PFK command     WDA#03
         BCT   R1,PFKLOOP2        go do next PFK                WDA#03
         LA    R1,PFKHELP         point at display              WDA#03
         LA    R0,PFKHLEN         get length of display         WDA#03
         ICM   R1,8,FULLSCR       insert ASIS cntl chars        WDA#03
         BAL   R14,TERMPUT        do a TPUT; display PFKHELP    WDA#03
         B     READCHAR           go get next input             WDA#03
***********************************************************************
*                                                                     *
*           S  --  List status page for all defined consoles          *
*                                                                     *
***********************************************************************
GETSTAT  CLI   REPLY,C'S'         asking for status report?
         BNE   SWAPLINK           NO; continue
         BAL   R14,CLRBUF         clear buffer
         LH    R5,NUMUCMS         R5 = number of consoles       WDA#01
         LA    R2,UCMTAB+16       R2 = addr of first console entry
         XR    R4,R4              clear R4
         LA    R4,BUF             R4 = addr of TPUT buffer
         LA    R3,23              R3 = number of lines on screen
STLOOP   LR    R1,R2              R1 = addr of UCMTAB entry
         BAL   R14,CONSDATA       call console data routine
         MVC   0(45,R4),CONNUM    save results in buffer
         LA    R4,80(R4)          R4 = addr of next line in buffer
         LA    R2,16(R2)          R2 = addr of next UCMTAB entry
         BCT   R3,NOTFULL         branch if the screen not full
FULL     LA    R1,HEADER          R1 = addr of TPUT buffer
         LA    R0,STATLEN         R0 = length of TPUT buffer
         ICM   R1,8,FULLSCR       insert ASIS cntl chars
         BAL   R14,TERMPUT        do a TPUT; display status page
         BAL   R14,CLRBUF         clear buffer
         LA    R4,BUF             R4 = addr of TPUT buffer
         LA    R3,23              R3 = number of lines on screen
         BCT   R5,MORE            more entries?                 WDA#01
         B     NEXTPAGE           NO; continue
MORE     TGET  REPLY,1            pause for enter
         B     STLOOP             and loop
NOTFULL  BCT   R5,STLOOP          loop if more                  WDA#01
         LA    R1,HEADER          R1 = addr of TPUT buffer
         LA    R0,STATLEN         R0 = length of TPUT buffer
         ICM   R1,8,FULLSCR       insert ASIS cntl chars
         BAL   R14,TERMPUT        do a TPUT; dislpay status page
         TGET  REPLY,1            pause for enter
         B     NEXTPAGE
***********************************************************************
*                                                                     *
*                    L  --  Link to SWAP program                      *
*                                                                     *
***********************************************************************
SWAPLINK CLI   REPLY,C'L'         should we XCTL to SWAP?
         BNE   QUEUE              NO, SO continue               WDA#01
         CLI   TESTFLAG,X'00'     was testflag set?
         BNE   SKPTST5            YES, skip the MODESET
         MODESET MODE=PROB        don't need sup state anymore
         CLI   AUTHFLAG,X'FF'     check if we got auth          WDA#01
         BNE   SKPTST5            if not then continue          WDA#01
         AUTH  OFF                unauthorize SPY for XCTL      WDA#01
SKPTST5  DS    0H
         L     R13,4(R13)         get caller's save area ptr    WDA#01
         L     R1,24(R13)         get original parm area ptr    WDA#01
         XCTL  (2,12),EP=SWAP     XCTL to SWAP
***********************************************************************
*                                                                     *
*                    Q  --  Link to QUEUE program               WDA#01*
*                                                                     *
***********************************************************************
QUEUE    CLI   REPLY,C'Q'         should we XCTL to SWAP?       WDA#01
         BNE   VIP                NO, SO continue               WDA#01
         CLI   TESTFLAG,X'00'     was testflag set?             WDA#01
         BNE   SKPTSTQ            YES, skip the MODESET         WDA#01
         MODESET MODE=PROB        don't need sup state anymore  WDA#01
         CLI   AUTHFLAG,X'FF'     check if we got auth          WDA#01
         BNE   SKPTSTQ            if not then continue          WDA#01
         AUTH  OFF                unauthorize SPY for XCTL      WDA#01
SKPTSTQ  DS    0H
         L     R13,4(R13)         get caller's save area ptr    WDA#01
         L     R1,24(R13)         get original parm area ptr    WDA#01
         XCTL  (2,12),EP=QUEUE    XCTL to QUEUE                 WDA#01
***********************************************************************
*                                                                     *
*                       Check for VIP password                        *
*                                                                     *
***********************************************************************
VIP      CLC   REPLY(3),VIPWORD   was VIP password entered?
         BNE   SNAPCHK            NO, continue                  WDA#04
         XI    VIPFLG,X'FF'       toggle VIP flag
         B     NEXTPAGE
***********************************************************************
*                                                                     *
*                       Check for SNAP request                        *
*                                                                     *
***********************************************************************
SNAPCHK  CLC   REPLY(4),=C'ZNAP'  was SNAP requested?           WDA#04
         BNE   BADCMD             NO, continue                  WDA#04
         XI    SNAPFLG,X'FF'      toggle SWAP flag              WDA#04
         CLI   SNAPFLG,X'FF'      do we turn snap on            WDA#04
         BNE   SNAPCLS            NO - turn snap off            WDA#04
SNAPOPN  DS    0H                                               WDA#04
         OPEN  (SNAPDCB,OUTPUT)   open file for output          WDA#04
         MVI   HEADING2+4,C'-'    set the indicator             WDA#04
         B     SNAPXIT            exit SNAPCHK                  WDA#04
SNAPCLS  DS    0H                                               WDA#04
         CLOSE SNAPDCB            close the file                WDA#04
         MVI   HEADING2+4,C':'    reset the indicator           WDA#04
SNAPXIT  DS    0H                                               WDA#04
         B     NEXTPAGE                                         WDA#04
***********************************************************************
*                                                                     *
*                      Command was invalid                            *
*                                                                     *
***********************************************************************
BADCMD   MVC   ERROR(36),ERRMSG3  command was invalid           WDA#02
         MVC   USERCMD(42),REPLY  put bad cmd in display line   WDA#02
         B     NEXTPAGE
***********************************************************************
*                                                                     *
*                     All done - prepare to end                       *
*                                                                     *
***********************************************************************
DONE     DS    0H
         CLI   CRTFLAG,X'00'      is this a hardcopy?
         BE    ALLDONE            YES, we are done
*-WAS-*  TPUT  CLR,CLRLEN,FULLSCR NO, clear the screen (TCAM)   WDA#01
         CLI   TESTFLAG,X'00'     check the testflag
         BNE   SKPTST6
         STFSMODE OFF             turn off fullscreen mode
SKPTST6  DS    0H
ALLDONE  DS    0H
         CLI   TESTFLAG,X'00'     check testflag again
         BNE   SKPTST7
         L     R1,LOCDCM          prepare to freemain TDCM area    SP3
         FREEMAIN R,LV=820,A=(1)  do the freemain                  SP3
         AXSET AX=ZERO            auth index back to 0             SP3
         MODESET MODE=PROB        go back to problem state         SP3
         CLI   AUTHFLAG,X'FF'     check if we got auth          WDA#01
         BNE   SKPTST7            if not  then continue         WDA#01
         AUTH  OFF                issue magic svc to not auth   WDA#01
SKPTST7  DS    0H
         CLI   SNAPFLG,X'FF'      is snap onen                  WDA#04
         BNE   FINISHS            NO - quit                     WDA#04
         CLOSE SNAPDCB            close the file                WDA#04
FINISHS  DS    0H                                               WDA#04
         FINISH RC=0              return to system              WDA#01
***********************************************************************
*                                                                     *
*            Convert EBCDIC numbers from user into binary             *
*                                                                     *
***********************************************************************
CONVBIN  CVD   R2,WORK            conbert to decimal
         CLI   REPLY+1,C' '       was a number entened?
         BE    RTRN               NO, use the default
         CLI   REPLY+1,C'0'       is the hex code < X'F0' ?
         BL    BADCHAR            YES, error
         CLI   REPLY+1,C'9'       is the hex code > X'F9' ?
         BH    BADCHAR            YES, error
         PACK  WORK(8),REPLY+1(1) pack EBCDIC (assume 1 digit)
         CLI   REPLY+2,C' '       were 2 digits entered?
         BE    CVB                NO, don't do the 2 digit pack
         CLI   REPLY+2,C'0'       is the hex code < X'F0' ?
         BL    BADCHAR            YES, error
         CLI   REPLY+2,C'9'       is the hex code > X'F9' ?
         BH    BADCHAR            YES, error
         PACK  WORK(8),REPLY+1(2) pack again, with 2 digits this time
CVB      CVB   R2,WORK            get binary value
RTRN     BR    R14                return to mainline
BADCHAR  MVC   ERROR(36),ERRMSG2  console number error          WDA#02
         B     RTRN               return
***********************************************************************
*                                                                     *
*                            C L R B U F                              *
*                                                                     *
*               Clear the entire buf area to hex zeros                *
*                                                                     *
***********************************************************************
CLRBUF   STM   R2,R5,SAVE25       save regs 2 - 5
         LA    R2,BUF             R2 = addr of buffer
         LA    R3,M4BUFLEN        R3 = length of buffer (35 lines)
         LA    R4,BLANKS          R4 = addr of blanks
         LA    R5,1               R5 = length of blank
         ICM   R5,8,BLANKS        setup pad char = X'40'
         MVCL  R2,R4              clear the area
         LM    R2,R5,SAVE25       restore registers
         BR    R14                return to caller
***********************************************************************
*                                                                     *
*                         T E R M P U T                               *
*                                                                     *
*          Do a TPUT to the terminal; R0 and R1 hold parms            *
*                                                                     *
***********************************************************************
TERMPUT  DS    0H
         TPUT  (1),(0),R          print one line on hardcopy
         BR    R14                return to caller
***********************************************************************
*                                                                     *
*          Setup and initialize parameter list for IKJSCAN            *
*                                                                     *
***********************************************************************
INITSCAN STM   R15,R4,SAVE154     save the registers
         L     R3,CVTPTR          R3 = addr of CVT
         L     R3,0(R3)           R3 = addr of addr of TCB
         L     R3,4(R3)           R3 = addr of TCB
         USING TCB,R3
         ICM   R3,7,TCBJSCBB      R3 = addr of JSCB
         ST    R3,SAVEJSCB        SAVE addr of JSCB
         DROP  R3
         USING IEZJSCB,R3
         L     R4,JSCBPSCB        R4 = addr of PSCB
         DROP  R3
         USING PSCB,R4
         L     R3,PSCBUPT         R3 = addr of UPT
         ST    R3,SAVEUPT         SAVE addr of UPT
         TM    PSCBATR1,PSCBCTRL  does user have OPER auth      WDA#01
         BNO   SKIPAUTH           NO, skip VIP set              WDA#01
         XI    VIPFLG,X'FF'       set VIP flag                  WDA#01
         SPACE
SKIPAUTH DS    0H
* PCF2   The following code was left as it was received - while WDA#01
* PCF2   we have PCF2 we don't really want anyone "X"ing here.  WDA#01
* PCF2   LA    R2,CSPLSAVE        R2 = addr of cmd scan parm list
* PCF2   USING CSPL,R2
* PCF2   ST    R3,CSPLUPT         save UPT addr
* PCF2   L     R3,PSCBRLGB        R3 = addr of relogon buffer
* PCF2   L     R3,256(R3)         R3 = addr of ECT
* PCF2   ST    R3,CSPLECT         save ECT addr
* PCF2   SR    R3,R3              clear R3 to init CPECB        WDA#01
* PCF2   ST    R3,CPECB           initialize CPECB              WDA#01
* PCF2   LA    R3,CPECB           R3 = addr of face ECB for this CP
* PCF2   ST    R3,CSPLECB         save ECB addr
* PCF2   SR    R3,R3              clear R3 to init FLAGWORD     WDA#01
* PCF2   ST    R3,FLAGWORD        initialize FLAGWORD           WDA#01
* PCF2   LA    R3,FLAGWORD        R3 = addr of CSPL flag word
* PCF2   ST    R3,CSPLFLG         save flag addr
* PCF2   LA    R3,CSOABLOK        R3 = addr of cmd scan output area
* PCF2   ST    R3,CSPLOA          save output area addr
* PCF2   LA    R3,CBUF            R3 = addr of 'CMD BUFFER'
* PCF2   ST    R3,CSPLCBUF        save CBUF addr
* PCF2   DROP  R2,R4
* PCF2   LOAD  EP=IKJSCAN
* PCF2   ST    R0,ADDRSCAN
         SPACE
         LM    R15,R4,SAVE154     restore regs 15 - 4
         BR    R14                return to caller
         EJECT
***********************************************************************
*                                                                     *
*                          C O N S D A T A                            *
*                                                                     *
*              Fillin the data line for a given console               *
*                                                                     *
***********************************************************************
CONSDATA STM   R0,R15,SAVECDAT    save the registers
         L     R5,0(R1)           R5 = addr of UCM
         USING UCMLIST,R5
         L     R6,UCMXB           R6 = addr of RDCM
         USING DCMTSRT,R6
         MVC   CONNUM(48),BLANKS  blank out console type field
         XR    R3,R3              clear R3
         ICM   R3,1,UCMID         load the console number
         CVD   R3,WORK            convert to decimal in work
         MVC   SCRATCH(4),PATTERN move in edit pattern
         ED    SCRATCH(4),WORK+6  edit in console number
         MVC   CONNUM(2),SCRATCH+2   move console number into place
         MVC   LOCATION(12),4(R1) move in console location description
         MVI   SLASH,C'/'         move '/' to SLASH
         MVC   STATUS(6),=CL6'INACTV' set default = 'INACTV'
         TM    UCMATR,UCMUF       is this device active?
         BNO   NOTACT             NO
         MVC   STATUS(6),=CL6'ACTIVE' set status = 'ACTIVE'
NOTACT   DS    0H
         TM    UCMDISP1,UCMDISPA  is this a master console?
         BNO   AUTH               NO
         MVC   STATUS(6),=CL6'MASTER' YES
AUTH     TM    UCMAUTHA,UCMAUTH1  is this console SYSTEM authorized?
         BNO   AUTH1              NO
         MVC   SYS(3),=CL3'SYS '  YES
AUTH1    TM    UCMAUTHA,UCMAUTH2  is it I/O authorized?
         BNO   AUTH2              NO
         MVC   IO(3),=CL3'I/O'    YES
AUTH2    TM    UCMAUTHA,UCMAUTH3  is it CONS authorized?
         BNO   AUTHDONE           NO
         MVC   CONS(3),=CL3'CON'  YES
AUTHDONE DS    0H
         LTR   R6,R6              is this a graphics console?
         BP    NOTHARD            YES
         MVC   STATUS(6),=CL6'HRDCPY'
NOTHARD  DS    0H
         L     R7,UCMUCB          R7 = addr of UCB
         MVC   UNIT(3),13(R7)     move unit addr into line
         L     R5,UCMALTEN        R5 = addr of alternate UCM
         L     R7,UCMUCB          R7 = addr of UCB
         MVC   ALTUNIT(3),13(R7)  move unit addr into line
         LM    R0,R15,SAVECDAT    restore registers
         BR    R14                return to caller
         DROP  R5,R6
SAVECDAT DS    16F
         DROP  12
***********************************************************************
*                                                                     *
*                          A T T N E X I T                            *
*                                                                     *
*         Trap users attention interrupts and flag for reset          *
*                                                                     *
***********************************************************************
ATTNEXIT LR    R7,R15             establish
         USING ATTNEXIT,R7        addressability.
         MVI   ATTNFLG,X'FF'      set attn flag
         BR    R14                return to caller
         DROP  R7
***********************************************************************
*                                                                     *
*                         C O N S T A N T S                           *
*                                                                     *
***********************************************************************
         DS    0D
OLDCONS  DC    F'1'               previous console number
CONSOLE  DC    F'1'               console to be looked at
TPUTLEN  DC    A(MOD2LEN)         length of mod2 TPUT
MOD4TPUT DC    A(MOD4LEN)         length of mod4 TPUT
MOD2TPUT DC    A(MOD2LEN)         length of mod2 TPUT
TIMER    DC    F'30'              seconds left on timer
DELAY    DC    F'100'             delay for 100 hundredths of a second
MOD4FLG  DC    X'00'              X'FF' indicates 3278-4 in use
ATTNFLG  DC    X'00'              X'FF' indicates attn was trapped
TESTFLAG DC    X'00'              X'FF' indicates test mode
CRTFLAG  DC    X'FF'              X'FF' indicates CRT in use
WAITFLG  DC    X'00'              X'00' indicates not in wait mode
VIPFLG   DC    X'00'              X'FF' indicates VIP mode
INTEGFLG DC    X'00'              X'FF' indicates 35-line 3066  console
AUTHFLAG DC    X'00'              X'FF' we had to get auth      WDA#01
FULLSCR  DC    X'03'              TPUT fullscreen flag
EDITFLG  DC    X'00'              TPUT edit flag
VIPWORD  DC    C'ZZZ'             VIP password
R41C1    #SBA  (41,1)             3278-4  --  ROW 41, COL 1
R42C1    #SBA  (42,1)             3278-4  --  ROW 42, COL 1
R43C1    #SBA  (43,1)             3278-4  --  ROW 43, COL 1
PATTERN  DC    X'40202020'        edit pattern field
DPATTRN  DC    X'4021204B20'      edit pattern field
PAD      DC    C' '               pad character for movebuff MVC
STAXLIST STAX  ATTNEXIT,MF=L      parm list for attention trap
BLANKS   DC    CL80' '            X'40's for various things
NULLS    DC    XL80'00'           X'00's for various things
SNAPFLG  DC    X'00'              X'FF' indicates SNAP mode     WDA#04
SNAPDCB  DCB   MACRF=(W),                                       WDA#04 X
               DDNAME=SNAPOUT,                                  WDA#04 X
               RECFM=VBA,DSORG=PS,                              WDA#04 X
               LRECL=125,BLKSIZE=1632                           WDA#04
***********************************************************************
*                                                                     *
*               327x screen clear control characters                  *
*                                                                     *
***********************************************************************
*CLR     DC    X'C1'              WCC - write                   WDA#01
*        DC    X'115D7E'          SBA to R24, C80 (FSE 5.0)     WDA#01
*        DC    X'114040'          SBA to Row 1, Col 1           WDA#01
*        DC    X'3C404000'        fill screen with nulls        WDA#01
*        DC    X'114040'          SBA to Row 1, Col 1           WDA#01
*        DC    X'13'              insert cursor                 WDA#01
*CLRLEN  EQU   *-CLR                                            WDA#01
***********************************************************************
*                                                                     *
*                  Display screen - Header section                    *
*                                                                     *
***********************************************************************
HEADER   DS    0H
CLEAR    EQU   *
         #WCC  RESET              reset the MDT bits            WDA#01
         #SPFTAG TYPE=1           normal fullscreen indicator   WDA#01
         #SBA  (1,1)              SBA to Row 1, Col 1           WDA#01
         #RA   (1,1),X'00'        fill screen with nulls        WDA#01
         #SBA  (1,1)              SBA to Row 1, Col 1           WDA#01
         #SF   PROT,HIGH          start field - protected       WDA#01
         DC    X'40'              one blank for the heck of it  WDA#01
***********************************************************************
*                                                                     *
*                 Display screen image buffer section                 *
*                                                                     *
***********************************************************************
BUF      DC    21CL84' '          operator's screen buffer
         DC    22CL84' '          plus extra for 3278-4
***********************************************************************
*                                                                     *
*               Display screen - Trailer section                      *
*                                                                     *
***********************************************************************
TRAILER  DS    0H
CMDCTRL  #SBA  (22,1)             SBA to Row 22, Col 1
         #SF   PROT,HIGH          attr byte - protected, high intensity
LASTLINE DC    CL79' '            operators command input line
PHEADING #SBA  (23,1)             SBA to Row 23, Col 1
         #SF   PROT,HIGH          attr byte - protected, high intensity
HEADING  DC    CL8'CONSOLE '
CONNUM   DC    CL2' 1'            console number
         DC    CL1' '
LOCATION DC    CL12' '
         DC    CL2' '
UNIT     DC    CL3' '             CUU of console
SLASH    DC    CL1'/'
ALTUNIT  DC    CL3' '
         DC    CL2' '
STATUS   DC    CL6' '             Master console
         DC    CL2' '
SYS      DC    CL4' '             SYS  authorization
IO       DC    CL4' '             I/O  authorization
CONS     DC    CL3' '             CONS authorization
         DC    CL3' '
TIME     DC    CL3' '             seconds remaining on timer
         DC    CL1'/'
PAUSE    DC    CL3'1.0'           delay in seconds
         DC    CL2' '
HEADING2 DC    CL5'Mode:'
FREEZE   DC    C'F'               freeze/release mode
MODE     DC    CL1'2'             display mode 2/1
         DC    CL1' '
         DC    CL5'Page '
PAGE     DC    CL1'2'             page number
R24C1    #SBA  (24,1)             SBA to Row 24, Col 1
         #SF   ,                  attr byte - unprotected, low intens.
         #IC   ,                  insert cursor
USERLINE DS    0CL72              users line                    WDA#02
USERCMD  DC    CL36' '            command input area            WDA#02
ERROR    DC    CL36' '            error message field           WDA#02
ENDTRAIL EQU   *                                                WDA#02
ONE      DC    H'1'               to set AX 1                      SP3
ZERO     DC    H'0'               to set AX 0                      SP3
CONASID  EQU   5                  'CONSOLE' ASID                   SP3
         LTORG
***********************************************************************
*                                                                     *
*                     Error and warning messages                      *
*                                                                     *
***********************************************************************
ERRMSG1  DC    CL36'ERROR - Console Not Defined         '       WDA#02
ERRMSG2  DC    CL36'ERROR - Non-numeric Value           '       WDA#02
ERRMSG3  DC    CL36'ERROR - Command is Invalid - Reenter'       WDA#02
ERRMSG4  DC    CL36'ERROR - Console Unviewable - Not CRT'       WDA#02
ERRMSG5  DC    CL36'WARNING - UCM Table is Full         '       WDA#02
ERRMSG6  DC    CL36'ERROR - Terminal is Invalid         '       WDA#02
ERRMSG7  DC    CL36'ERROR - Command is Restricted       '       WDA#02
ERRMSG8  DC    CL36'ERROR - Return code > 0 from TGET.  '       WDA#03
ERRMSG9  DC    CL36'ERROR - Command > 36 chars for PFkey'       WDA#03
***********************************************************************
*                                                                     *
*                           User help page                            *
*                                                                     *
***********************************************************************
HELP     #WCC  RESET              reset the MDT bits            WDA#03
         #SPFTAG TYPE=1           normal fullscreen indicator   WDA#03
         #SBA  (1,1)              SBA to Row 1, Col 1           WDA#03
         #RA   (1,1),X'00'        fill screen with nulls        WDA#03
         #SBA  (1,1)              SBA to Row 1, Col 1           WDA#03
         #SF   PROT,HIGH          start protected field         WDA#03
         DC    C'S P Y   --- Version 3.1'                       WDA#03
         #SBA  (2,1)                                            WDA#03
         DC    C'Command     Description'                       WDA#03
         #SBA  (4,1)                                            WDA#03
         DC    C'    B        End SPY'                          WDA#03
         #SBA  (5,1)                                            WDA#03
         DC    C'    C        Switch monitor to Console 1'      WDA#03
         #SBA  (6,1)                                            WDA#03
         DC    C'    Cxx      Switch monitro to Consloe xx'     WDA#03
         #SBA  (7,1)                                            WDA#03
         DC    C'    Dxx      Set delay to xx tenths seconds'   WDA#03
         #SBA  (8,1)                                            WDA#03
         DC    C'    E        End SPY'                          WDA#03
         #SBA  (9,1)                                            WDA#03
         DC    C'    F        Freeze display on current page'   WDA#03
         #SBA  (10,1)                                           WDA#03
         DC    C'    H        Display PFK assignments   '       WDA#03
         #SBA  (11,1)                                           WDA#03
         DC    C'    L        Link to SWAP program'             WDA#03
         #SBA  (12,1)                                           WDA#03
         DC    C'    Q        Link to QUEUE program'            WDA#03
         #SBA  (13,1)                                           WDA#03
         DC    C'    R        Release display '                 WDA#03
         #SBA  (14,1)                                           WDA#03
         DC    C'    W        Start timer mode for 30 seconds'  WDA#03
         #SBA  (15,1)                                           WDA#03
         DC    C'    Wxx      Start timer mode for xx seconds'  WDA#03
         #SBA  (16,1)                                           WDA#03
         DC    C'    W0       Start timer mode until inturrupt' WDA#03
         #SBA  (17,1)                                           WDA#03
         DC    C'    ?        Display this page'                WDA#03
         #SBA  (18,1)                                           WDA#03
         DC    C'    1        Display mode 1'                   WDA#03
         #SBA  (19,1)                                           WDA#03
         DC    C'    2        Display mode 2'                   WDA#03
         #SBA  (21,1)                                           WDA#03
         DC    C'Hitting inturrupt will stop the wait timer.'   WDA#03
         #SBA  (24,1)             Row 24, Col 1                 WDA#03
         DC    C'Hit ENTER to continue'                         WDA#03
         #SBA  (24,23)            ROW 24, COL 23                WDA#03
         #SF                      START UNPROTECTED FIELD       WDA#03
         #IC   ,                  INSERT CURSOR HERE            WDA#03
         DC    CL36'        '     REPLY AREA                    WDA#03
         #SF   SKIP               START SKIP FIELD              WDA#03
HLENGTH  EQU   *-HELP             LENGTH OF HELP TPUT
         EJECT
***********************************************************************
*                                                                     *
*                     User pfkey help page                            *
*                                                                     *
***********************************************************************
         DS    0F                 allignment                    WDA#03
PFKHELP  #WCC  RESET              reset the MDT bits            WDA#03
         #SPFTAG TYPE=1           normal fullscreen indicator   WDA#03
         #SBA  (1,1)              SBA to Row 1, Col 1           WDA#03
         #RA   (1,1),X'00'        fill screen with nulls        WDA#03
         #SBA  (1,1)              SBA to Row 1, Col 1           WDA#03
         #SF   PROT,HIGH          start protected field         WDA#03
         DC    C'SPY - Current PFkey assignments  '             WDA#03
         #SBA  (3,1)                                            WDA#03
         DC    2CL40'PFK Command     '                          WDA#03
PFKLIST  EQU   *                  used as start of help table   WDA#03
         #SBA  (4,1)                                            WDA#03
         DC    CL80'        '     area for pfkeys 01 and 13     WDA#03
         #SBA  (5,1)                                            WDA#03
         DC    CL80'        '     area for pfkeys 02 and 14     WDA#03
         #SBA  (6,1)                                            WDA#03
         DC    CL80'        '     area for pfkeys 03 and 15     WDA#03
         #SBA  (7,1)                                            WDA#03
         DC    CL80'        '     area for pfkeys 04 and 16     WDA#03
         #SBA  (8,1)                                            WDA#03
         DC    CL80'        '     area for pfkeys 05 and 17     WDA#03
         #SBA  (9,1)                                            WDA#03
         DC    CL80'        '     area for pfkeys 06 and 18     WDA#03
         #SBA  (10,1)                                           WDA#03
         DC    CL80'        '     area for pfkeys 07 and 19     WDA#03
         #SBA  (11,1)                                           WDA#03
         DC    CL80'        '     area for pfkeys 08 and 20     WDA#03
         #SBA  (12,1)                                           WDA#03
         DC    CL80'        '     area for pfkeys 09 and 21     WDA#03
         #SBA  (13,1)                                           WDA#03
         DC    CL80'        '     area for pfkeys 10 and 22     WDA#03
         #SBA  (14,1)                                           WDA#03
         DC    CL80'        '     area for pfkeys 11 and 23     WDA#03
         #SBA  (15,1)                                           WDA#03
         DC    CL80'        '     area for pfkeys 12 and 24     WDA#03
         #SBA  (16,1)                                           WDA#03
         #SF   SKIP               start protected field         WDA#03
         #SBA  (18,10)                                          WDA#03
         DC    CL45'The PFkey assignment for any PFkey may be ' WDA#03
         #SBA  (19,10)                                          WDA#03
         DC    CL45'changed by entering the desired command on' WDA#03
         #SBA  (20,10)                                          WDA#03
         DC    CL45'the command line and hitting the PFKey '    WDA#03
         #SBA  (21,10)                                          WDA#03
         DC    CL45'that you want the command assigned to.'     WDA#03
         #SBA  (23,1)                                           WDA#03
         #SF   PROT,HIGH          start protected field         WDA#03
         #SBA  (24,1)             Row 24, Col 1                 WDA#03
         DC    C'Hit ENTER to continue'                         WDA#03
         #SBA  (24,23)            Row 24, Col 23                WDA#03
         #SF                      start unprotected field       WDA#03
         #IC   ,                  insert cursor here            WDA#03
         DC    CL36'        '     replu area                    WDA#03
         #SF   SKIP               start skip field              WDA#03
PFKHLEN  EQU   *-PFKHELP          length of help screen         WDA#03
         EJECT
***********************************************************************
*                                                                     *
*              PFKey default definitions                              *
*                                                                     *
***********************************************************************
PFKTABLE DS    0D                 start pf pkkey definitions    WDA#03
PFK01    DC    X'F1',X'00',C'01'                                WDA#03
         DC    CL36'HELP - This PFK display '   PFK definitions WDA#03
PFK02    DC    X'F2',X'00',C'02'                                WDA#03
         DC    CL36'?    - SPY Subcommands  '   SPY subcommands WDA#03
PFK03    DC    X'F3',X'00',C'03'                                WDA#03
         DC    CL36'END  - Terminate SPY    '   Terminate SPY   WDA#03
PFK04    DC    X'F4',X'00',C'04'                                WDA#03
         DC    CL36'C1   - Master console   '   Console 1       WDA#03
PFK05    DC    X'F5',X'00',C'05'                                WDA#03
         DC    CL36'C3   - Tape Console     '   Console 3       WDA#03
PFK06    DC    X'F6',X'00',C'06'                                WDA#03
         DC    CL36'C5   - Printer Console  '   Console 5       WDA#03
PFK07    DC    X'F7',X'00',C'07'                                WDA#03
         DC    CL36'LINK to SWAP            '   Link to SWAP    WDA#03
PFK08    DC    X'F8',X'00',C'08'                                WDA#03
         DC    CL36'QUEUE Command           '   Link to QUEUE   WDA#03
PFK09    DC    X'F9',X'00',C'09'                                WDA#03
         DC    CL36'W50  - Display 50 Scrns.'   50 Screens      WDA#03
PFK10    DC    X'7A',X'00',C'10'                                WDA#03
         DC    CL36'/D R,L,J                '   Display replies WDA#03
PFK11    DC    X'7B',X'00',C'11'                                WDA#03
         DC    CL36'/D A,L                  '   Display tasks   WDA#03
PFK12    DC    X'7C',X'00',C'12'                                WDA#03
         DC    CL36'/D T                    '   Display time    WDA#03
PFK13    DC    X'C1',X'00',C'13'                                WDA#03
         DC    CL36'HELP                    '                   WDA#03
PFK14    DC    X'C2',X'00',C'14'                                WDA#03
         DC    CL36'?                       '                   WDA#03
PFK15    DC    X'C3',X'00',C'15'                                WDA#03
         DC    CL36'END                     '                   WDA#03
PFK16    DC    X'C4',X'00',C'16'                                WDA#03
         DC    CL36'C1                      '                   WDA#03
PFK17    DC    X'C5',X'00',C'17'                                WDA#03
         DC    CL36'C3                      '                   WDA#03
PFK18    DC    X'C6',X'00',C'18'                                WDA#03
         DC    CL36'C5                      '                   WDA#03
PFK19    DC    X'C7',X'00',C'19'                                WDA#03
         DC    CL36'LINK                    '                   WDA#03
PFK20    DC    X'C8',X'00',C'20'                                WDA#03
         DC    CL36'QUEUE                   '                   WDA#03
PFK21    DC    X'C9',X'00',C'21'                                WDA#03
         DC    CL36'W50                     '                   WDA#03
PFK22    DC    X'4A',X'00',C'22'                                WDA#03
         DC    CL36'/D R,L,J                '                   WDA#03
PFK23    DC    X'4B',X'00',C'23'                                WDA#03
         DC    CL36'/D A,L                  '                   WDA#03
PFK24    DC    X'4C',X'00',C'24'                                WDA#03
         DC    CL36'/D T                    '                   WDA#03
PFKEND   DC    XL4'FFFFFFFF'      End of PFKey table            WDA#03
***********************************************************************
*                                                                     *
*                            U C M T A B                              *
*                                                                     *
*        The UCMTAB table is built at SPY initialization time.        *
*        one entry is filled in for each consloe that has been        *
*        iogened into the system. The 12 byte description field       *
*        allows you to tag each console with some mnemonic that       *
*        is easier to remember than console numbers. If UCMTAB is     *
*        not defined large enough to hold all the consoles, a         *
*        WARNING is issued but SPY continues anyway.                  *
*                                                                     *
***********************************************************************
         DS    0F
UCMTABE  DC    A(TABEND)
NUMUCMS  DC    H'0'
         DS    0F
UCMTAB   DC    A(0),CL12' '
         DC    A(0),CL12'Master Cons.'    console 1
         DC    A(0),CL12'IBM Service '    console 2
         DC    A(0),CL12'Tape Complex'    console 3
         DC    A(0),CL12'Data Control'    console 4
         DC    A(0),CL12'UREC Complex'    console 5
         DC    A(0),CL12'Tape Library'    console 6
         DC    A(0),CL12'Tape Labels '    console 7
         DC    A(0),CL12'            '    console 8
         DC    A(0),CL12'            '    console 9
         DC    A(0),CL12'            '    console 10
         DC    A(0),CL12'            '    console 11
         DC    A(0),CL12'            '    console 12
         DC    A(0),CL12'            '    console 13
         DC    A(0),CL12'            '    console 14
         DC    A(0),CL12'            '    console 15
         DC    A(0),CL12'            '    console 16
         DC    A(0),CL12'            '    console 17
         DC    A(0),CL12'            '    console 18
         DC    A(0),CL12'            '    console 19
         DC    A(0),CL12'            '    console 20
         DC    A(0),CL12'            '    console 21
         DC    A(0),CL12'            '    console 22
         DC    A(0),CL12'            '    console 23
         DC    A(0),CL12'            '    console 24
         DC    A(0),CL12'            '    console 25
TABEND   DS    0H
***********************************************************************
*                                                                     *
*                           E Q U A T E S                             *
*                                                                     *
*     NOTE That a 'LINE' is defined as 84 bytes; this is because      *
*     DIDOCS builds the operator screen buffer lines as 79 bytes of   *
*     text + 5 control bytes. This consists of an SBA (X'11xxyy')     *
*     and an attribute byte (X'1Dxx').                                *
*                                                                     *
***********************************************************************
LEN9     EQU   9*84               number of bytes in  9 lines
LEN21    EQU   21*84              number of bytes in 21 lines
LEN22    EQU   22*84              number of bytes in 22 lines
LEN13    EQU   13*84              number of bytes in 13 lines
M2BUFLEN EQU   21*84              length of buffer 3278-2
M4BUFLEN EQU   35*84              length of buffer 3278-4
STATLEN  EQU   BUF-CLEAR+80*23    length of 'STATUS' page buffer
HEADLEN  EQU   BUF-HEADER         length of header
TRAILEN  EQU   ENDTRAIL-TRAILER   length of trailer
MOD4LEN  EQU   ENDTRAIL-HEADER    length of TPUT for MOD4
MOD2LEN  EQU   MOD4LEN-LEN22      length of TPUT for MOD2
ENDMOD2  EQU   BUF+M2BUFLEN       addr of trailer for 3278-2
         EJECT
***********************************************************************
*                                                                     *
*        This DSECT for save areas, flags etc.                  WDA#01*
*        R13 is the base - BEGIN macro does it.                 WDA#01*
*                                                                     *
***********************************************************************
WDADSECT DSECT
WDASAVE  DS    18F                OS save area                  WDA#01
SAVE154  DS    6F
SAVE25   DS    4F
LPSCREEN DS    H                  lines per screen
CPLINE   DS    H                  characters per line
MOVEBSAV DS    6F                 REG SAVE AREA - R4:R9            SP3
WORK     DS    D                  work area for packs
SCRATCH  DS    D                  scratch area for char. manip
SASID    DS    F                  area for previous sec ASID       SP3
LOCDCM   DS    F                  addr of GETMAINed area for TDCM  SP3
SAVEJSCB DS    F                  save addr of JSCB
OPERPRM  DS    A(OPERCMDL)        parmlist for 'COMMAND'
OPERPRM1 DS    XL1'80',AL3(OPERCN) second parm for 'COMMAND'
OPERCN   DS    F'0'               console authority
OPERCMDL DS    H'0'               command length
OPERCMD  DS    CL80' '            command text
CBUF     DC    AL2(84),AL2(0)     PCF2 - command buffer prefix
CPREPLY  DC    CL80' '            PCF2 - command input buffer   WDA#01
DATACHRS DS    F                  TGET character count          WDA#03
CREPLY   DC    XL6'000000000000'  TGET ASIS prefix              WDA#03
REPLY    DC    CL80' '            user's command input buffer
SAVEUPT  DS    F                  PCF2 save addr of UPT
CSPLBLOK DS    6F                 PCF2 cmd scan parmeter list
CSPLSAVE DS    6F                 PCF2 CSPL area
CPECB    DS    F                  PCF2 fake ECB for this CP     WDA#01
FLAGWORD DS    F                  PCF2 flag word                WDA#01
CSOABLOK DS    2F                 PCF2 cmd scan output area
ADDRSCAN DS    A                  PCF2 support
SAVER15X DS    3F                 SNAP support                  WDA#04
SNAPBGN  DS    F                  SNAP start address            WDA#04
SNAPEND  DS    F                  SNAP ending address           WDA#04
WDASLEN  EQU   *-WDASAVE          length for GETMAIN from BEGIN WDA#01
         EJECT
***********************************************************************
*                                                                     *
*                System control block mapping DSECTS                  *
*                                                                     *
*     all macros except for IEERDCM and IEETDCM can be found in       *
*     either 'SYS1.MACLIB' or 'SYS1.AMODGEN'. the two exceptions      *
*     are in 'SYS1.APVTMACS'; they are also distributed with the      *
*     source to 'SPY'.                                                *
*                                                                     *
***********************************************************************
         CVT   DSECT=YES          Communications Vector Vable
         SPACE 2
         IEECUCM FORMAT=NEW,DSECT=YES,LIST=YES
         SPACE 2
         IEERDCM ,                Resident Display Control Molule
         SPACE 2
         IEETDCM ,                Pageable Display Control Module
         SPACE 2
         IEZJSCB ,                Job Step Control Block
         SPACE 2
         IKJCSOA ,                Command Scam Output Area
         SPACE 2
         IKJCSPL ,                Command Scan Parameter List
         SPACE 2
         IKJPSCB ,                Protected Step Control Block
         SPACE 2
         IKJTCB  ,                Task Control Block
         SPACE 2
         IKJUPT  ,                User Profile Table
         SPACE 2
         END   SPY
