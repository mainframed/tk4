ISPTCM   TITLE  'TCMGEN MACRO LISTING'
         PRINT  ON,GEN
         MACRO
&LABEL   TCMGEN &COMMAND,              COMMAND TO ADD TO THE TABLE     X
               &TYPE=COMMAND,          TYPE OF MACRO EXECUTION         X
               &FLAGS=CP               COMMAND EXECUTION FLAGS
.*
.*     MACRO - TCMGEN
.*    AUTHOR - JOSEPH A MARTIN
.*   ADDRESS - STATE OF WISCONSIN
.*             DEPARTMENT OF HEALTH AND SOCIAL SERVICES
.*             OFFICE OF INFORMANTION SYSTEMS
.*             WILSON STREET REGIONAL COMPUTING CENTER
.*             ONE WEST WILSON STREET - ROOM B253
.*             P.O. BOX 7850
.*             MADISON, WI. 53707-7850
.*     PHONE - (608) 266-9525
.*
.*     NOTES - THIS MACRO WAS WRITTEN IN RESPONSE TO APAR OZ64211.
.*             SEE INFO/MVS ENTRY E130403 FOR PARTICULARS.
.*
.*    CODING - THERE ARE THREE PARAMETERS USED BY THIS MACRO.
.*             THE FIRST IS A POSITIONAL PARAMETER WHICH IS
.*             USED FOR THE COMMAND OR CLIST NAME BEING ENTERED.
.*             THE SECOND IS A KEYWORD PARAMETER WHICH REPRESENTS
.*             TYPE OF ENTRY BEING REQUESTED.  "TYPE" MAY HAVE THE
.*             VALUES OF "COMMAND", "START", OR "END".
.*             "TYPE=COMMAND" IS THE DEFAULT.
.*             THE THIRD IS A KEYWORD PARAMETER WHICH INDICATES THE
.*             FLAG VALUES TO BE SET IN THE TABLE.  "FLAGS" MAY HAVE
.*             THE VALUES OF "CP", "CLIST", "NOLOG", "NOSPF", AND
.*             "BLDL".  "FLAGS=CP" IS THE DEFAULT.
.*
.*
.*   EXAMPLE -
.*             ISPTCM   TCMGEN ,TYPE=START
.*             CMD001   TCMGEN TEST1,FLAGS=CP
.*             CMD002   TCMGEN TEST2,FLAGS=(CP,NOLOG)
.*             CMD003   TCMGEN TEST3,FLAGS=(CP,NOLOG,BLDL)
.*             CMD004   TCMGEN TEST4
.*             CMDEND   TCMGEN ,TYPE=END,FLAGS=BLDL
.*                      END   ISPTCM
.*
         LCLA  &FLAGCNT,&TEMPCNT       COUNT OF FLAGS
         GBLB  &BADFLG                 ERROR FLAG
         GBLB  &STRTFLG                TYPE=START FLAG
         LCLB  &BIT0,&BIT1,&BIT2,&BIT3 FLAG BITS 0-3
         LCLB  &BIT4,&BIT5,&BIT6,&BIT7 FLAG BITS 4-7
         LCLC  &CMDFLAG                COMMAND FLAG
         LCLC  &CMDNAME                COMMAND FLAG
&CMDFLAG SETC  '        '              INITIALIZE VARIABLE
.*
         AIF   ('&TYPE'(1,1) EQ 'C').DOCMD
         AIF   ('&TYPE'(1,1) EQ 'S').DOSTART
         AIF   ('&TYPE'(1,1) EQ 'E').DOEND
         MNOTE  8,'WTCM001 - "TYPE" VALUE NOT START, END OR COMMAND'
&BADFLG  SETB  1
         MEXIT
.*
.DOSTART ANOP
         AIF   (NOT &STRTFLG).DOSTRT1
         MNOTE  8,'WTCM002 - MULTIPLE TYPE=START NOT ALLOWED'
&BADFLG  SETB  1
         MEXIT
.*
.DOSTRT1 ANOP
&STRTFLG SETB  1                       INDICATE START HAS BEEN DONE
ISPTCM   CSECT
         DC    CL8'ISPTCM'             MODULE AND CSECT NAME
         DC    A(TABLSTRT)             OFFSET TO START OF TABLE
         DC    C'DATE=&SYSDATE,TIME=&SYSTIME' DATE AND TIME STAMP
         DC    D'0'                    SPACE AT FRONT OF TABLE
TABLSTRT DS    0H                      START OF TABLE
         SPACE
         MEXIT
.*
.DOEND   ANOP
         AIF   ('&COMMAND' EQ '').DOEND1
         MNOTE  4,'WTCM003 - COMMAND NOT ALLOWED ON "END" - IGNORED'
.*
.DOEND1  ANOP
&CMDNAME SETC  '99999999'              SETUP END OF TABLE ENTRY
&LABEL   TCMGEN &CMDNAME,FLAGS=(&FLAGS)
         MEXIT
.*
.DOCMD   ANOP
         AIF   (&STRTFLG).DOCMD1
         MNOTE  4,'WTCM004 - TYPE=START NOT SPECIFIED - DEFAULTING'
         TCMGEN TYPE=START             FORCE TYPE=START
.*
.DOCMD1  ANOP
         AIF   (N'&FLAGS EQ 0).ERCMD1  ZERO FLAGS NOT ALLOWED
         AIF   (N'&FLAGS GT 5).ERCMD2  MAX OF 5 FLAGS ALLOWED
         AGO   .DOCMD2
.*
.ERCMD1  ANOP
         MNOTE  8,'WTCM005 - ZERO FLAGS NOT ALLOWED'
&BADFLG  SETB  1
         MEXIT
.*
.ERCMD2  ANOP
         MNOTE  8,'WTCM006 - MORE THAN 5 FLAGS NOT ALLOWED'
&BADFLG  SETB  1
         MEXIT
.*
.DOCMD2  ANOP
&FLAGCNT SETA  N'&FLAGS                GET NUMBER OF THE FLAGS
&TEMPCNT SETA  0                       INITIALIZE FLAG COUNTER
.*
.DOFLGS  ANOP
&TEMPCNT SETA  &TEMPCNT+1
         AIF   (&TEMPCNT GT &FLAGCNT).ENDFLGS    ALL FLAGS DONE
         AIF   ('&FLAGS(&TEMPCNT)' EQ 'NOLOG').NOLOG  BIT3
         AIF   ('&FLAGS(&TEMPCNT)' EQ 'NOSPF').NOSPF  BIT4
         AIF   ('&FLAGS(&TEMPCNT)' EQ 'CLIST').CLIST  BIT5
         AIF   ('&FLAGS(&TEMPCNT)' EQ 'CP').CP        BIT6
         AIF   ('&FLAGS(&TEMPCNT)' EQ 'BLDL').BLDL    BIT7
         MNOTE  8,'WTCM007 - FLAG VALUE "&FLAGS(&TEMPCNT)" INVALID'
&BADFLG  SETB  1
         AGO   .DOFLGS
.*
.NOLOG   ANOP
&BIT3    SETB  1                       SET THE NOLOG FLAG BIT
         AGO   .DOFLGS
.*
.NOSPF   ANOP
&BIT4    SETB  1                       SET THE NOSPF FLAG BIT
         AGO   .DOFLGS
.*
.CLIST   ANOP
&BIT5    SETB  1                       SET THE CLIST FLAG BIT
         AGO   .DOFLGS
.*
.CP      ANOP
&BIT6    SETB  1                       SET THE CP FLAG BIT
         AGO   .DOFLGS
.*
.BLDL    ANOP
&BIT7    SETB  1                       SET THE BLDL FLAG BIT
         AGO   .DOFLGS
.*
.ENDFLGS ANOP
         AIF   (&BADFLG).DOEXIT
&CMDFLAG SETC  '&BIT0&BIT1&BIT2&BIT3&BIT4&BIT5&BIT6&BIT7'
         AIF   ('&COMMAND' NE '99999999').DOCMD3
&LABEL   DC    XL8'FFFFFFFFFFFFFFFF'   SETUP THE END OF TABLE
         DC    BL1'&CMDFLAG'           SETUP THE COMMAND FLAG(S)
         AGO   .DOEXIT
.*
.DOCMD3  ANOP
&CMDNAME SETC  '&COMMAND'
         AIF   ('&COMMAND' NE '').DOCMD4
&CMDNAME SETC  '        '
.*
.DOCMD4  ANOP
&LABEL   DC    CL8'&CMDNAME'           SETUP THE COMMAND NAME
         DC    BL1'&CMDFLAG'           SETUP THE COMMAND FLAG(S)
.*
.DOEXIT  ANOP
         SPACE
         MEXIT
.*
.DOERROR ANOP
         MNOTE 16,'WTCM099 - TERMINATING GEN DUE TO PREVIOUS ERRORS'
         MEND
ISPTCM   TITLE  'ISPF COMMAND TABLE'
*
* START OF TABLE ENTRIES FOR ISPTCM
*
ISPTCM   TCMGEN ,TYPE=START
         SPACE 2
*
* ENTRIES THAT WILL BE KNOWN AS TSO COMMANDS TO ISPF
*
ACF      TCMGEN ACF
ACFCOMP  TCMGEN ACFCOMP
ACFDEL   TCMGEN ACFDEL
ACFNRULE TCMGEN ACFNRULE
         EJECT
*
* ENTRIES THAT WILL BE KNOWN AS TSO CLISTS TO ISPF
*
         SPACE
ASMSRC   TCMGEN ASMSRC,FLAGS=CLIST
BYEBYE   TCMGEN BYEBYE,FLAGS=CLIST
CALC     TCMGEN CALC,FLAGS=CLIST
DUMPS    TCMGEN DUMPS,FLAGS=CLIST
GDGUTIL  TCMGEN GDGUTIL,FLAGS=CLIST
INFOMVS  TCMGEN INFOMVS,FLAGS=CLIST
IPCS     TCMGEN IPCS,FLAGS=CLIST
LIDS     TCMGEN LIDS,FLAGS=CLIST
LSTDMPS  TCMGEN LSTDMPS,FLAGS=CLIST
PF       TCMGEN PF,FLAGS=CLIST
PRTSRC   TCMGEN PRTSRC,FLAGS=CLIST
RMF      TCMGEN RMF,FLAGS=CLIST
RSVP     TCMGEN RSVP,FLAGS=CLIST
RULECHG  TCMGEN RULECHG,FLAGS=CLIST
RULEPW   TCMGEN RULEPW,FLAGS=CLIST
RULESCHG TCMGEN RULESCHG,FLAGS=CLIST
TAPEINQ  TCMGEN TAPEINQ,FLAGS=CLIST
         EJECT
*
* ENTRIES FOR COMMANDS THAT ARE NOT TO BE LOGGED UNDER ISPF
*
PROT     TCMGEN PROT,FLAGS=(CP,NOLOG)
PROTECT  TCMGEN PROTECT,FLAGS=(CP,NOLOG)
         EJECT
*
* ENTRIES FOR COMMANDS THAT ARE NOT TO BE ENTERED UNDER ISPF
*
ISPF     TCMGEN ISPF,FLAGS=NOSPF
ISPSTART TCMGEN ISPSTART,FLAGS=NOSPF
PDF      TCMGEN PDF,FLAGS=NOSPF
SPF      TCMGEN SPF,FLAGS=NOSPF
TEST     TCMGEN TEST,FLAGS=NOSPF
LOGON    TCMGEN LOGON,FLAGS=NOSPF
LOGOFF   TCMGEN LOGOFF,FLAGS=NOSPF
         EJECT
*
* ENTRIES THAT WILL REQUIRE A BLDL FROM ISPF
*
         EJECT
*
* 10 ADDITIONAL ENTRIES AVAILABLE TO BE ZAPPED IN IF NECESSARY
*
EXTRA01  TCMGEN
EXTRA02  TCMGEN
EXTRA03  TCMGEN
EXTRA04  TCMGEN
EXTRA05  TCMGEN
EXTRA06  TCMGEN
EXTRA07  TCMGEN
EXTRA08  TCMGEN
EXTRA09  TCMGEN
EXTRA10  TCMGEN
         EJECT
*
* END OF TABLE  INDICATOR WITH DEFAULT OF BLDL
*
CMDEND   TCMGEN ,TYPE=END,FLAGS=BLDL
         SPACE 2
         END   ISPTCM
