         TITLE 'W.S.R.C.C.  <IDCMSGEN>  GENERATE IDCAMS INPUT CARDS FRO*
               M OBJECTS IN YOUR VSAM CATALOG - J A SHELL'
*---------------------------------------------------------------------*
*                                                                     *
*                             <IDCMSGEN>                              *
*                                                                     *
*           ACCESS METHOD SERVICES (IDCAMS) SUPPORT UTILITY           *
*                                                                     *
*      IDCMSGEN WILL ALLOW YOU TO CREATE AN IDCAMS SOURCE DECK        *
*      FROM MOST OBJECTS IN YOUR VSAM CATALOG. THIS WILL ALLOW        *
*      YOU TO REPLACE MISSING IDCAMS DECKS OR, PERHAPS, DISPENSE      *
*      WITH SAVING THEM IN THE FIRST PLACE. IT WILL GENERATE...       *
*        (1) DELETE-DEFINE-LISTCAT CLUSTER CARDS FOR ANY NORMAL       *
*                ESDS, KSDS OR RRDS, VIA SYSIN CARDS;                 *
*        (2) ALL IMPORT CONNECT CARDS FOR RELATED UCAT'S, AND         *
*        (3) ALL DEFINE ALIAS OR NONVSAM CARDS, FOR A MCAT, VIA       *
*                THE EXECUTE CARD PARM FIELD.                         *
*                                                                     *
*                       *** SAMPLE JCL ***                            *
*                                                                     *
*      //GEN     EXEC PGM=IDCMSGEN   <,PARM='...'>                    *
*      //STEPCAT  DD  DISP=SHR,DSN=CATALOG.VIBM840                    *
*      //STEPLIB  DD  DISP=SHR,DSN=ADM.DP59031.LOADLIB                *
*      //SYSUDUMP DD  SYSOUT=A,HOLD=YES                               *
*      //SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(1,1)), IDCAMS SYSIN      *
*      //         DCB=(BLKSIZE=80,LRECL=80,RECFM=F)                   *
*      //SYSUT2   DD  UNIT=SYSDA,SPACE=(CYL,(1,1)),        SYSPRINT   *
*      //         DCB=(BLKSIZE=629,LRECL=125,RECFM=VB)                *
*      //SYSPRINT DD  SYSOUT=A,HOLD=YES             IDCMSGEN SYSPRINT *
*      //SYSUT3   DD  SYSOUT=B,HOLD=YES                      SYSPUNCH *
*      //SYSIN    DD  *,DCB=BLKSIZE=80                       SYSIN    *
*         ...CONTROL CARDS...                                         *
*      /*                                                             *
*                                                                     *
*      ...WHERE THE PARM FIELD CAN BE USED FOR ALIAS/NVSAM/UCAT,      *
*        OR SYSIN CARDS CAN BE USED FOR CLUSTERS, BUT NOT BOTH!!!     *
*            IF A VALID PARM IS DETECTED, SYSIN IS IGNORED.           *
*                                                                     *
*                         VALID PARM FORMAT                           *
*      COLUMN  CODE  MEANING                                          *
*         1      A   GENERATE ALL DEFINE ALIAS CARDS...               *
*                N   GENERATE ALL DEFINE NONVSAM CARDS...             *
*                U   GENERATE ALL IMPORT CONNECT UCAT CARDS...        *
*                        ...FOR THE DEFAULT CATALOG.                  *
*                                                                     *
*         2      ,   (MUST BE COMMA IF CATALOG OVERRIDE FOLLOWS)      *
*                                                                     *
*       3-46   XXXX  OVERRIDING VALUE (MAX 44 BYTES) TO BE INSERTED   *
*                    IN ALL CATALOG PARAMETERS. CAN BE 'CATNAME/PSWD' *
*                    IF LENGTH LIMIT NOT EXCEEDED. USEFUL FOR CATALOG *
*                    MIGRATIONS.                                      *
*                                                                     *
*       AN INVALID PARM WILL PRINT, AND THEN GO SCAN THE SYSIN.       *
*      THIS, OR A VALID CODE FOLLOWED BY A NON-COMMA, CAN BE USED     *
*          TO ADD A DOCUMENTARY COMMENT TO THE OUTPUT LISTING.        *
*---------------------------------------------------------------------*
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*                         CONTROL CARD FORMAT                         *
*      FIELD  MAXLEN  CONTENTS                                        *
*        1      53    ENTRYNAME/PASSWORD OF CLUSTER TO BE GENERATED.  *
*                     IT MUST BEGIN IN CARD COLUMN 1 AND CONTAIN NO   *
*                     EMBEDDED BLANKS. ENTRYNAME MUST BE DEFINABLE    *
*                     AS A CLUSTER (NO AIX/MCAT/UCAT).                *
*                                                                     *
*        2      --    AT LEAST ONE BLANK MUST FOLLOW FIELD 1 IF A     *
*                     CATNAME/PASSWORD IS TO BE PROVIDED.             *
*                                                                     *
*        3      53    CATNAME/PASSWORD OF CONTROLLING CATALOG.        *
*                     IF THE VALUE WOULD EXTEND PAST CARD COLUMN 71,  *
*                     CODE A NON-BLANK CHARACTER IN CARD COLUMN 72,   *
*                     AND CODE THE ENTIRE VALUE BEGINNING IN CARD     *
*                     COLUMN 1 OF THE NEXT CARD.                      *
*                                                                     *
*        4       1    ANY NON-BLANK CHARACTER IN CARD COLUMN 72       *
*                     WILL INDICATE A DESIRE TO CONTINUE THIS         *
*                     REQUEST IN THE NEXT CARD. HOWEVER, IF THE       *
*                     SCAN FINDS TWO DISTINCT FIELDS SEPARATED BY     *
*                     AND TERMINATED BY AT LEAST ONE BLANK, IT        *
*                     WILL IGNORE ANY VALUE IN CARD COLUMN 72.        *
*                                                                     *
*                              NOTES.                                 *
*                                                                     *
*      1. THIS PROGRAM ATTEMPTS TO MINIMIZE THE NUMBER OF CARDS       *
*         IT WILL GENERATE. THEREFORE, IT WILL NOT GENERATE A         *
*         PARAMETER IF IT IS THE NORMAL SYSTEM DEFAULT. IF YOUR       *
*         INSTALLATION ALTERS THE NORMAL DEFAULTS, YOU MUST ALSO      *
*         ALTER THIS PROGRAM. ALSO, IF A PARAMETER IS IDENTICAL       *
*         FOR BOTH THE DATA AND INDEX COMPONENT, IT WILL BE SHOWN     *
*         AT THE CLUSTER LEVEL ONLY.                                  *
*                                                                     *
*      2. THIS PROGRAM WILL REQUIRE ACCESS TO THE <DTYP2UNT>          *
*         SUBROUTINE. THIS WILL COMPARE THE UCB-TYPE HEX DEVICE       *
*         CODE SHOWN IN THE IDCAMS LISTING WITH THE SYSTEM            *
*         DEVICE NAME TABLE, MODULE <DEVNAMET>, AND RETURN A          *
*         LEGITIMATE UNITNAME WHICH CAN BE INSERTED IN IDCAMS CARDS.  *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*---------------------------------------------------------------------*
         EJECT
IDCMSGEN CSECT
R0       EQU   0                   *************
R1       EQU   1                   *           *
R2       EQU   2                   * REGISTERS *
R3       EQU   3                   *    ARE    *
R4       EQU   4                   *  EQUATED  *
R5       EQU   5                   *    TO     *
R6       EQU   6                   *  SYMBOLS  *
R7       EQU   7                   *    SO     *
R8       EQU   8                   *   THEY    *
R9       EQU   9                   *   WILL    *
R10      EQU   10                  *   SHOW    *
R11      EQU   11                  *    ON     *
R12      EQU   12                  *   CROSS   *
R13      EQU   13                  * REFERENCE *
R14      EQU   14                  *           *
R15      EQU   15                  *************
         USING *,R15               INITIALLY USE ENTRY AS BASE REGISTER
         B     $BG0001             BRANCH AROUND CONSTANTS
         DC    CL8'IDCMSGEN'       CSECT ID
         DC    C'_',C'&SYSDATE.@&SYSTIME._' SYSTEM DATE AND TIME
$BG0001A DS    18F                 MY REGISTER SAVE AREA
$BG0001D DC    A($BG0001A+4096)
         DC    A($BG0001A+8192)
$BG0001  DS    0H
         STM   R14,R12,12(R13)     SAVE CLG PGMS REGS
         LA    R3,$BG0001A         LOAD ADDR OF MY REG SAVE AREA
         ST    R13,4(R3)           STORE ADDR OF CLG SAVE IN MINE
         ST    R3,8(R13)           STORE ADDR OF MY SAVE IN CLG PGM
         LR    R13,R3              POINT REG 13 AT MY SAVE AREA
         DROP  R15                 DROP INITIAL BASE REGISTER
         USING $BG0001A,R13,R12,R10
         L     R12,$BG0001D        LOAD 2ND BASE REGISTER
         L     R10,$BG0001D+4      LOAD 3RD BASE REGISTER
         L     R3,0(R1)            LOAD ADDRESS AND
         LH    R4,0(R3)                 LENGTH OF PARM INFORMATION
         LTR   R4,R4               WAS PARM OMITTED (LENGTH=0)...
         BZ    GETIME                 ..YES, BYPASS PARM PROCESSING
* P A R M   P R O C E S S I N G * * * * * * * * * * * * * * * * * * * *
         LA    R3,2(R3)            INCREMENT PAST THE LENGTH
         CLI   0(R3),X'40'         1ST BYTE OF PARM BLANK...
         BE    ENDPARM                ..YES, BYPASS PARM PROCESSING
         MVC   LCNAME,BLANKS       CLEAR ENTRIES NAME LITERAL
         MVC   INCC(9),=C'0  *PARM*' RESET INCARD LITERAL
         CH    R4,=H'80'           IS PARM MORE THAN 80 BYTES...
         BNH   MOVEPARM               ..NO, GO MOVE IT TO INCARD
         LH    R4,=H'80'              ..YES, TRUNCATE IT TO EIGHTY
MOVEPARM BCTR  R4,0                DECREMENT LENGTH FOR EXECUTE
         EX    R4,MVCPARM          MOVE PARM TO INCARD
ACHK     EQU   *
         CLI   0(R3),C'A'          ALIAS REQUEST...
         BNE   NCHK                   ..NO, GO CHECK FURTHER
         MVC   LCPARM(5),=C'ALIAS'    ..YES, INDICATE LISTCAT ALIAS
         MVC   DFPMTYPE,=C'ALIAS'            INDICATE DEFINE ALIAS
         B     ENDPARM                       AND CONTINUE PROCESSING
*
NCHK     EQU   *
         CLI   0(R3),C'N'          NONVSAM REQUEST...
         BNE   UCHK                   ..NO, GO CHECK FURTHER
         MVC   LCPARM(7),=C'NONVSAM'  ..YES, INDICATE LISTCAT NONVSAM
         MVC   DFPMTYPE,=C'NVSAM'            INDICATE DEFINE NVSAM
         B     ENDPARM                       AND CONTINUE PROCESSING
*
UCHK     EQU   *
         CLI   0(R3),C'U'              USERCATALOG REQUEST...
         BNE   BADPARM                    ..NO, GO PUT ERROR MESSAGE
         MVC   LCPARM(11),=C'USERCATALOG' ..YES, INDICATE LISTCAT UCAT
         MVC   DFPMCMND(23),=CL23' IMPORT CONNECT OBJ ( ('
         MVI   DFNVVSNO+13,C')'                  AND INSERT RT PAREN
* IF PARM='X,CATNAME/PSWD'    ...WHERE X IS A VALID PARM REQUEST CODE,
* THE DATA FOLLOWING THE COMMA (REQUIRED) WILL BE USED TO FILL ALL CAT
* PARAMETERS (MAXIMUM 44 BYTES) WITHOUT ANY FURTHER DATA CHECKING!!!!!
ENDPARM  EQU   *
         CLI   1(R3),C','          IS REQUEST CODE FOLLOWED BY COMMA...
         BNE   GETIME                 ..NO, GET CAT INFO FROM '-' LINE
         MVC   DFPMCTNM,INCARD+2      ..YES, USE IT (HOPE ITS CORRECT),
         MVI   DASHSW+1,X'F0'                AND IGNORE '-' LINE INFO
         B     GETIME              CONTINUE PROCESSING
*
MVCPARM  MVC   INCARD(1),0(R3)     *** EXECUTED ***
*
BADPARM  EQU   *
         MVC   INMSG,STARS         FLAG PARM DATA AS ERRONEOUS
         BAL   R11,PUTSIN          GO PRINT BAD PARM INFO
         MVC   INCC(9),=C'0 *SYSIN*' RESET PRINT LINE LITERAL
GETIME   EQU   *
*        TIME  DEC                 GET CURRENT DATE/DECIMAL TIME * * *
         LA    R1,2                LOAD PARAMETER REG1 (DEC)         *
         SVC   11                  ISSUE TIME SVC                    *
         ST    R1,DBLWRD+4         MOVE JULIAN DATE INTO CORE AND
         ED    HDATE,DBLWRD+5           EDIT INTO HEADER LITERAL
         ST    R0,DBLWRD           MOVE DECIMAL TIME INTO CORE THEN
         MVO   DBLWRD+4(4),DBLWRD(3)    SHIFT INTO PACKED FORMAT AND
         ED    HTIME,DBLWRD+4           EDIT INTO HEADER LITERAL
*        OPEN  (SINDCB,(INPUT),PRTDCB,(OUTPUT),UT3DCB,(OUTPUT)) * * * *
         LA    R1,SINOB            LOAD PARAMETER REG1                *
         SVC   19                  ISSUE OPEN SVC                     *
         CLI   LCPARM,C'E'         NON-PARM REQUEST...
         BNE   PUTLCAT                ..NO, GO PUT LISTC CARDS
GETNSIN  EQU   *
         BAL   R11,GETSIN          GET SYSIN RECORD
         ZAP   LINECTR,LINECTR     FORCE PAGING AND
         SR    R3,R3               ZERO BYTE COUNT
         LA    R4,INWORK           POINT AT CARD COLUMN ONE
         LA    R5,53               SET STOPPER FOR SCAN
         MVC   CLNMWK,BLANKS       BLANK CLUSTER NAME AND
         MVC   CTNMWK,BLANKS             CATALOG NAME WORK AREAS
         LA    R6,CLNMWK           POINT AT CLUSTER NAME WORK
         BAL   R11,BSCAN           EXTRACT CLUSTER NAME/PASSWORD
         MVC   DLNAME,CLNMWK       MOVE NAME TO DELETE
         MVC   DFCLNAME,CLNMWK                  DEFINE CLUSTER
         MVC   LCNAME,CLNMWK                AND LISTCAT CARDS
         LA    R5,18(R5)           UP COUNT TO BYTES LEFT IN CARD
         CLC   INWORK(71),BLANKS   IS REST OF CARD BLANK...
         BNE   GTCTNM                 ..NO, GO EXTRACT CATALOG NAME
         CLI   INWORK+71,X'40'     IS THIS CARD CONTINUED...
         BE    PUTLCAT                ..NO, GO PUT LISTCAT W/O CAT
         BAL   R11,PUTSIN          GO PRINT EXHAUSTED CARD
         BAL   R11,GETSIN          GET NEXT SYSIN RECORD
         CLC   INWORK(71),BLANKS   IS ENTIRE CARD BLANK...
         BE    PUTLCAT                ..YES, GO PUT LISTCAT W/O CAT
         LA    R4,INWORK           POINT AT CARD COLUMN ONE
         LA    R5,71               SET BYTES LEFT IN CARD
GTCTNM   EQU   *
         CLI   0(R4),X'40'         IS NEXT BYTE BLANK...
         BNE   CTNMB1                 ..NO, CATALOG NAME BYTE 1
         LA    R4,1(R4)               ..YES, POINT AT NEXT BYTE AND
         BCT   R5,GTCTNM                     CHECK IT (IF ANY)
         B     PUTLCAT             SHOULD NEVER HAPPEN
*                                  NOW AT 1ST BYTE OF CATALOG NAME
CTNMB1   EQU   *
         MVI   INWORK+71,X'40'     INSURE BLANK STOPPER IN COL 72
         SR    R3,R3               ZERO BYTE COUNT
         LA    R6,CTNMWK           POINT AT CATALOG NAME WORK
         CH    R5,=H'53'           BYTES LEFT MORE THAN 53...
         BNH   BYTST2                 ..NO, EXTRACT CATALOG NAME/PSWD
         LA    R5,53                  ..YES, RESET TO MAXIMUM OF 53
BYTST2   EQU   *
         BAL   R11,BSCAN           EXTRACT CATALOG NAME/PASSWORD
         MVC   DLCTNM,CTNMWK       MOVE NAME TO DELETE
         MVC   DFCTNM,CTNMWK                    DEFINE CLUSTER
         MVC   LCCTNM,CTNMWK                AND LISTCAT CARDS
PUTLCAT  EQU   *
         BAL   R11,PUTSIN          PRINT GOOD INPUT CARD
         MVC   INCC(9),=C'0*SYSUT1*' SET PRINT LINE LITERAL
*        OPEN  (UT1DCB,(OUTPUT))   OPEN SYSUT1 * * * * * * * * * * * *
         MVI   UT1OB,X'8F'         SET OPTION BYTE FOR OPEN          *
         LA    R1,UT1OB            LOAD PARAMETER REG1               *
         SVC   19                  ISSUE OPEN SVC                    *
         MVC   INCARD,LCCMND       MOVE -LISTC-ENT- CARD TO OUTPUT
         BAL   R11,PUTUT1          GO PUT/PRINT IDCAMS INPUT CARD
*LISTCAT ALIAS                                                -
*LISTCAT ENT ( XXXXXXXX.XXXXXXXX.XXXXXXXX.XXXXXXXX/PASSWORD ) -
*LISTCAT NVSAM                                                -
         CLI   CTNMWK,X'40'        IS CATALOG NAME WORK BLANK...
         BE    PUTALC                 ..YES, GO PUT -ALL- CARD
         MVC   INCARD,LCCAT        MOVE -CAT- CARD TO OUTPUT
         BAL   R11,PUTUT1          GO PUT/PRINT IDCAMS INPUT CARD
*  CATALOG ( XXXXXXXX.XXXXXXXX.XXXXXXXX.XXXXXXXX/PASSWORD ) -
PUTALC   EQU   *
         MVC   INCARD,LCALC        MOVE -ALL- CARD TO OUTPUT
         BAL   R11,PUTUT1          GO PUT/PRINT IDCAMS INPUT CARD
*  ALL
*        CLOSE (UT1DCB)            CLOSE SYSUT1 * * * * * * * * * * * *
         MVI   UT1OB,X'80'         SET OPTION BYTE FOR CLOSE          *
         LA    R1,UT1OB            LOAD PARAMETER REG1                *
         SVC   20                  ISSUE CLOSE SVC                    *
*        LINK  EP=IDCAMS,PARAM=(FWZERO,DDS),VL=1,ERRET=LINK1RET * * * *
         LA    R1,PARAM            LOAD PARAMETER REG1                *
         LA    R15,LINKLIST        LOAD PARAMETER REG15               *
         SVC   6                   ISSUE LINK SVC (IDCAMS)            *
LINK1RET EQU   *
         ST    R15,RETCODE         SAVE RETURN CODE FROM IDCAMS
         LTR   R15,R15             IS RETURN CODE ZERO...
         BNZ   BELLYUP                ..NO, BELLY UP
*        OPEN  (UT2DCB,(INPUT))    OPEN SYSUT2 * * * * * * * * * * * *
         LA    R1,UT2OB            LOAD PARAMETER REG1               *
         SVC   19                  ISSUE OPEN SVC                    *
GETCLNM  EQU   *
         BAL   R11,GETUT2          GET/PRINT CLUSTER NAME LINE
         CLC   LCPARM,UT2AREA+1    ALIAS/NONVSAM/UCAT NAME LINE...
         BE    PARMRUN                ..YES, GO EXTRACT NAME
         CLC   =C'CLUS',UT2AREA+1  CLUSTER NAME LINE...
         BNE   GETCLNM                ..NO, GO GET NEXT LINE
*CLUSTER ------- ACVSAM.DP590.ACF2INFO
         MVC   CTLBYTES(NBRLINES),BLANKS BLANK CONTROL BYTES FOR OUTPUT
         BAL   R11,GETUT2          GET/PRINT IDCAMS LISTING LINE
         CLC   =C'IN-C',UT2AREA+6  IN-CAT NAME LINE...
         BNE   T4OWNR                 ..NO, GO TEST FOR OWNER
*     IN-CAT --- SKK.VSAM.USERCAT
         SR    R3,R3               ZERO BYTE COUNT
         LA    R4,UT2AREA+17       POINT AT 1ST BYTE OF CATALOG NAME
         LA    R5,44               SET STOPPER FOR SCAN (NO PSWD)
         LA    R6,CTNMWK           POINT AT CATALOG NAME WORK
         BAL   R11,BSCAN           EXTRACT CATALOG NAME (ONLY)
         MVC   DLCTNM,CTNMWK       MOVE NAME TO DELETE
         MVC   DFCTNM,CTNMWK                    DEFINE CLUSTER
         MVC   LCCTNM,CTNMWK                AND LISTCAT CARDS
GETOWNR  EQU   *
         BAL   R11,GETUT2          GET/PRINT OWNER-IDENT LINE
*     HISTORY
*       OWNER-IDENT----------ACF     CREATION----------81.205     RCVY-
T4OWNR   EQU   *
         CLC   =C'OWNE',UT2AREA+8  OWNER-IDENT LINE...
         BNE   GETOWNR                ..NO, GO GET NEXT LINE
         CLC   =C'(NUL',UT2AREA+26 IS OWNER VALUE (NULL)...
         BE    NOOWNR                   ..YES, SUPPRESS LINE
         MVC   DFCLOWNR,UT2AREA+24      ..NO, MOVE VALUE TO LINE AND
         TR    DFCLOWNR,UNFILTBL              BLANK LEADING DASHES
         B     GETXPIRE            GO GET EXPIRATION DATE
*
NOOWNR   EQU   *
         MVI   CTLBYTES+OWNRLINE,C'*' SUPPRESS OWNER CARD
GETXPIRE EQU   *
         BAL   R11,GETUT2          GET/PRINT EXPIRATION DATE LINE
         MVC   DFCLEDAT,QMS        FILL EXPIRE DATE WITH QM-S
         CLC   =C'EXPI',UT2AREA+37 EXPIRATION DATE LINE...
         BNE   GETDATA                ..NO, JUST LEAVE QM-S
*       RELEASE----------------2     EXPIRATION--------00.000     RCVY-
         CLC   =C'.000',UT2AREA+57    ..YES, IS IT NULL...
         BE    NOEXPIRE                         ..YES, SUPPRESS LINE
         MVC   DFCLEDAT(2),UT2AREA+55   MOVE YY AND
         MVC   DFCLEDAT+2(3),UT2AREA+58      DDD TO EXPIRE DATE CARD
         B     GETDATA             GO GET THE DATA NAME
*
NOEXPIRE EQU   *
         MVI   CTLBYTES+EDATLINE,C'*' SUPPRESS EXPIRE DATE AND
         MVI   CTLBYTES+PURGLINE,C'*'          DELETE PURGE CARD
GETDATA  EQU   *
         BAL   R11,GETUT2          GET/PRINT DATA NAME LINE
*     PROTECTION-PSWD-----(NULL)     RACF----------------(NO)
*     ASSOCIATIONS
*       DATA-----ACVSAM.DP590.ACF2INFO.DATA
*       INDEX----ACVSAM.DP590.ACF2INFO.INDEX
         CLC   =C'DATA',UT2AREA+4  DATA NAME LINE...
         BNE   GETDATA                ..NO, GO GET NEXT LINE
*   DATA ------- ACVSAM.DP590.ACF2INFO.DATA
         MVC   DFDANAME,BLANKS     BLANK THE RECEIVING FIELD
         SR    R3,R3               ZERO BYTE COUNT
         LA    R4,UT2AREA+17       POINT AT 1ST BYTE OF DATA NAME
         LA    R5,44               SET STOPPER FOR SCAN (NO PSWD)
         LA    R6,DFDANAME         POINT AT RECEIVING FIELD
         BAL   R11,BSCAN           EXTRACT DATA NAME (ONLY)
GETDATTR EQU   *
         BAL   R11,GETUT2          GET/PRINT DATA ATTRIBUTES HEADER
*     IN-CAT --- SKK.VSAM.USERCAT
*     HISTORY
*       OWNER-IDENT-------(NULL)     CREATION----------81.205     RCVY-
*       RELEASE----------------2     EXPIRATION--------00.000     RCVY-
*     PROTECTION-PSWD-----(NULL)     RACF----------------(NO)
*     ASSOCIATIONS
*       CLUSTER--ACVSAM.DP590.ACF2INFO
         CLC   =C'ATTR',UT2AREA+6  DATA ATTRIBUTES HEADER LINE...
         BNE   GETDATTR               ..NO, GO GET NEXT LINE
*     ATTRIBUTES
         BAL   R11,GETUT2          GET/PRINT 1ST ATTRIBUTES LINE
*       KEYLEN----------------44     AVGLRECL-------------400     BUF..
         MVC   DFCLKYLN,QMS        FILL KEY LENGTH WITH QM-S
         CLC   =C'KEYL',UT2AREA+8  KEY LENGTH FIELD...
         BNE   DOARECL                ..NO, JUST LEAVE QM-S
         CLC   =C'-0',UT2AREA+30   KEY LENGTH ZERO ( NOT KSDS)...
         BE    NOKSDS                 ..YES, NOT A KSDS
         MVC   DFCLKYLN,UT2AREA+29    ..NO, MOVE VALUE TO LINE AND
         TR    DFCLKYLN,UNFILTBL            BLANK LEADING DASHES
         MVI   CTLBYTES+ESDSLINE,C'*' SUPPRESS NONINDEXED AND
         MVI   CTLBYTES+RRDSLINE,C'*'          NUMBERED CARDS
         B     DOARECL             GO GET AVGLRECL
*
NOKSDS   EQU   *
         MVI   CTLBYTES+KSDSLINE,C'*'      SUPPRESS KEYS AND
         MVC   CTLBYTES+INDXLINE(NOILINES),STARS    ALL INDEX CARDS
DOARECL  EQU   *
         MVC   DFCLAVRS,QMS        FILL AVGLRECL WITH QM-S
         CLC   =C'AVGL',UT2AREA+37 AVGLRECL FIELD...
         BNE   DOBUFSP                ..NO, JUST LEAVE QM-S
         MVC   DFCLAVRS,UT2AREA+56    ..YES, MOVE VALUE TO LINE AND
         TR    DFCLAVRS,UNFILTBL             BLANK LEADING DASHES
DOBUFSP  EQU   *
*..BUFSPACE-----------10240     CISIZE--------------4096
         MVC   DFCLBSPC,QMS        FILL BUFSPACE WITH QM-S
         CLC   =C'BUFS',UT2AREA+66 BUFSPACE FIELD...
         BNE   DODCISZ                ..NO, JUST LEAVE QM-S
         MVC   DFCLBSPC,UT2AREA+81    ..YES, MOVE VALUE TO LINE AND
         TR    DFCLBSPC,UNFILTBL             BLANK LEADING DASHES
DODCISZ  EQU   *
         MVC   DFCLCISZ,QMS        FILL CLUSTER CISZ AND
         MVC   DFDACISZ,QMS                DATA CISZ WITH QM-S
         MVI   CTLBYTES+CCISLINE,C'*' SUPPRESS CLUSTER CISZ LINE
         CLC   =C'CISI',UT2AREA+95 DATA CISIZE FIELD...
         BNE   GETRKP                 ..NO, JUST LEAVE QM-S
         MVC   DFDACISZ,UT2AREA+114   ..YES, MOVE VALUE TO LINE AND
         TR    DFDACISZ,UNFILTBL             BLANK LEADING DASHES
         MVC   DFCLCISZ,DFDACISZ   SAVE IN CLUSTER CISZ, JUST IN CASE
GETRKP   EQU   *
         BAL   R11,GETUT2          GET/PRINT 2ND ATTRIBUTES LINE
*       RKP-------------------32     MAXLRECL------------4088     EXC..
         CLI   CTLBYTES+KSDSLINE,C'*'   KSDS...
         BE    DOMRECL                     ..NO, BYPASS RKP
         MVC   DFCLRKP,QMS         FILL RKP WITH QM-S
         CLC   =C'RKP-',UT2AREA+8  RKP FIELD...
         BNE   DOMRECL                ..NO, JUST LEAVE QM-S
         MVC   DFCLRKP,UT2AREA+27     ..YES, MOVE VALUE TO LINE AND
         TR    DFCLRKP,UNFILTBL              BLANK LEADING DASHES
DOMRECL  EQU   *
         MVC   DFCLMXRS,QMS        FILL MAXLRECL WITH QM-S
         CLC   =C'MAXL',UT2AREA+37 MAXLRECL FIELD...
         BNE   DOEXCP                 ..NO, JUST LEAVE QM-S
         MVC   DFCLMXRS,UT2AREA+56    ..YES, MOVE VALUE TO LINE AND
         TR    DFCLMXRS,UNFILTBL             BLANK LEADING DASHES
DOEXCP   EQU   *
*..EXCPEXIT----------(NULL)     CI/CA----------------120
         MVC   DFCLEXCP,QMS        FILL EXCPEXIT WITH QM-S
         CLC   =C'EXCP',UT2AREA+66 EXCPEXIT FIELD...
         BNE   GETDSHRO               ..NO, JUST LEAVE QM-S
         CLC   =C'(NUL',UT2AREA+84 IS EXCPEXIT VALUE (NULL)...
         BE    NOEXCPEX               ..YES, SUPPRESS LINE
         MVC   DFCLEXCP,UT2AREA+82    ..NO, MOVE VALUE TO LINE AND
         TR    DFCLEXCP,UNFILTBL            BLANK LEADING DASHES
         B     GETDSHRO            GO GET SHARE OPTIONS
*
NOEXCPEX EQU   *
         MVI   CTLBYTES+EXCPLINE,C'*' SUPPRESS EXCPEXIT CARD
GETDSHRO EQU   *
         BAL   R11,GETUT2          GET/PRINT 3RD ATTRIBUTES LINE
*       RECORDS/CI------------63     MAXRECS---------16515072  *(RRDS)*
         CLC   =C'RECO',UT2AREA+8  RECORDS/CI LINE (RRDS ONLY)...
         BE    GETDSHRO               ..YES, BYPASS IT
*       SHROPTNS(2,4)   RECOVERY     SUBALLOC         NOERASE     IND..
         MVC   DFCLSHRO,QMS        FILL SHARE OPTIONS WITH QM-S
         CLC   =C'SHRO',UT2AREA+8  SHROPTNS FIELD...
         BNE   DOSPEED                ..NO, JUST LEAVE QM-S
         MVC   DFCLSHRO,UT2AREA+17    ..YES, MOVE VALUE TO LINE
DOSPEED  EQU   *
         CLC   =C'SPEE',UT2AREA+27 SPEED ATTRIBUTE...
         BE    DOUNIQUE               ..YES, LEAVE LINE ON
         MVI   CTLBYTES+SPEDLINE,C'*' SUPPRESS SPEED (RECOVERY)
DOUNIQUE EQU   *
         CLC   =C'UNIQ',UT2AREA+37 UNIQUE ATTRIBUTE...
         BE    DOERASE                ..YES, LEAVE LINE ON
         MVI   CTLBYTES+UNIQLINE,C'*' SUPPRESS UNIQUE (SUBALLOCATE)
DOERASE  EQU   *
         CLC   =C' ERA',UT2AREA+55 ERASE ATTRIBUTE...
         BE    DODSORG                ..YES, LEAVE LINE ON
         MVI   CTLBYTES+ERASLINE,C'*' SUPPRESS ERASE (NOERASE)
DODSORG  EQU   *
*..INDEXED       NOWRITECHK     NOIMBED       NOREPLICAT
         CLI   CTLBYTES+KSDSLINE,X'40'  INDEXED (KSDS)...
         BE    DOWCK                       ..YES, ALL SET, GO ON
         CLC   =C'NONI',UT2AREA+66      NONINDEXED (ESDS)...
         BE    RRDSOFF                     ..YES, GO SUPPRESS RRDS
*                                       NUMBERED (RRDS)
         MVI   CTLBYTES+ESDSLINE,C'*'   SUPPRESS ESDS (RRDS)
         B     DOWCK                         AND GO ON
*
RRDSOFF  EQU   *
         MVI   CTLBYTES+RRDSLINE,C'*'   SUPPRESS RRDS (ESDS)
DOWCK    EQU   *
         CLC   =C' WRI',UT2AREA+79 WRITECHECK ATTRIBUTE...
         BE    DOIMBED                ..YES, LEAVE LINE ON
         MVI   CTLBYTES+WTCKLINE,C'*' SUPPRESS WRITECHK (NOWRITECHK)
DOIMBED  EQU   *
         CLC   =C'IMBE',UT2AREA+95 IMBED ATTRIBUTE...
         BE    GETORDRD               ..YES, LEAVE LINE ON
         MVI   CTLBYTES+IMBDLINE,C'*' SUPPRESS IMBED (NOIMBED)
GETORDRD EQU   *
         BAL   R11,GETUT2          GET/PRINT 4TH ATTRIBUTES LINE
*       UNORDERED        NOREUSE     NONSPANNED
         CLC   =C'ORDE',UT2AREA+8  ORDERED ATTRIBUTE...
         BE    DOREUSE                ..YES, LEAVE LINE ON
         MVI   CTLBYTES+ORDRLINE,C'*' SUPPRESS ORDERED (UNORDERED)
DOREUSE  EQU   *
         CLC   =C' REU',UT2AREA+26 REUSE ATTRIBUTE...
         BE    DOSPAND                ..YES, LEAVE LINE ON
         MVI   CTLBYTES+RUSELINE,C'*' SUPPRESS REUSE (NOREUSE)
DOSPAND  EQU   *
         CLC   =C'SPAN',UT2AREA+37 SPANNED ATTRIBUTE...
         BE    GETPCIF                ..YES, LEAVE LINE ON
         MVI   CTLBYTES+SPANLINE,C'*' SUPPRESS SPANNED (NONSPANNED)
GETPCIF  EQU   *
         BAL   R11,GETUT2          GET/PRINT % CI FREESPACE LINE
*     STATISTICS
*       REC-TOTAL------------588     SPLITS-CI-------------51     EXCPS
*       REC-DELETED----------131     SPLITS-CA--------------0     EXTEN
         CLC   =C'FREE',UT2AREA+37 FREESPACE-% LINE...
         BNE   GETPCIF                ..NO, GO GET NEXT LINE
*       REC-INSERTED---------705     FREESPACE-%CI---------30     SYSTE
         MVC   DFCLPCIF,QMS        FILL % CI FREESPACE WITH QM-S
         CLC   =C'-%CI',UT2AREA+46 % CI FREESPACE...
         BNE   GETPCAF                ..NO, JUST LEAVE QM-S
         MVC   DFCLPCIF,UT2AREA+58    ..YES, MOVE VALUE TO LINE AND
         TR    DFCLPCIF,UNFILTBL             BLANK LEADING DASHES
GETPCAF  EQU   *
         BAL   R11,GETUT2          GET/PRINT % CA FREESPACE LINE
*       REC-UPDATED---------1688     FREESPACE-%CA---------30
         MVC   DFCLPCAF,QMS        FILL % CA FREESPACE WITH QM-S
         CLC   =C'-%CA',UT2AREA+46 % CA FREESPACE...
         BNE   CHKFSPC                ..NO, JUST LEAVE QM-S
         MVC   DFCLPCAF,UT2AREA+58    ..YES, MOVE VALUE TO LINE AND
         TR    DFCLPCAF,UNFILTBL             BLANK LEADING DASHES
CHKFSPC  EQU   *
         CLC   =C'  0   0',DFCLPCIF     BOTH VALUES ZERO...
         BNE   GETDSPAC                    ..NO, LET LINE GO
         MVI   CTLBYTES+FSPCLINE,C'*'      ..YES, SUPPRESS FREESPACE
GETDSPAC EQU   *
         BAL   R11,GETUT2          GET/PRINT 1ST ALLOCATION LINE
*       REC-RETRIEVED----1447165     FREESPC-BYTES----1740800
*     ALLOCATION
         CLC   =C'SPAC',UT2AREA+8  1ST ALLOCATION LINE...
         BNE   GETDSPAC               ..NO, GO GET NEXT LINE
*       SPACE-TYPE------CYLINDER     HI-ALLOC-RBA-----1966080
         CLC   =C'TYPE',UT2AREA+14 ALLOCATION TYPE LINE...
         BNE   BADDALOC               ..NO, FLAG AS BAD ALLOCATION
         MVI   CTLBYTES+CCYLLINE,C'*' SUPPRESS CLUSTER CYLINDERS
         MVI   CTLBYTES+CTRKLINE,C'*'      AND CLUSTER TRACKS CARDS
         CLC   =C'-CYL',UT2AREA+23 CYLINDER ALLOCATION...
         BE    DCYLALOC               ..YES, GO GET NUMBERS
DTRKALOC EQU   *
         MVI   CTLBYTES+DCYLLINE,C'*' SUPPRESS DATA CYLINDERS CARD
         MVC   DFDAPTRK,QMS        FILL PRIMARY DATA TRKS WITH QM-S
         BAL   R11,GETUT2          GET/PRINT 2ND ALLOCATION LINE
*       SPACE-PRI--------------4     HI-USED-RBA-------491520
         CLC   =C'PRI-',UT2AREA+14 PRIMARY ALLOCATION LINE...
         BNE   DSECTRKS               ..NO, JUST LEAVE QM-S
         MVC   DFDAPTRK,UT2AREA+27 MOVE VALUE TO LINE AND
         TR    DFDAPTRK,UNFILTBL        BLANK LEADING DASHES
DSECTRKS EQU   *
         MVC   DFDASTRK,QMS        FILL SECONDARY DATA TRKS WITH QM-S
         BAL   R11,GETUT2          GET/PRINT 3RD ALLOCATION LINE
*       SPACE-SEC--------------0
         CLC   =C'SEC-',UT2AREA+14 SECONDARY ALLOCATION LINE...
         BNE   DENDSPA                ..NO, JUST LEAVE QM-S
         MVC   DFDASTRK,UT2AREA+27 MOVE VALUE TO LINE AND
         TR    DFDASTRK,UNFILTBL        BLANK LEADING DASHES
         B     DENDSPA             GO GET VOLUME SERIAL
*
BADDALOC EQU   *
         MVC   DFDAPCYL,QMS        FILL DATA PRI-CYLS,
         MVC   DFDASCYL,QMS             DATA SEC-CYLS,
         MVC   DFDAPTRK,QMS             DATA PRI-TRKS AND
         MVC   DFDASTRK,QMS             DATA SEC-TRKS WITH QM-S
         B     DENDSPA             GO GET VOLUME SERIAL
*
DCYLALOC EQU   *
         MVI   CTLBYTES+DTRKLINE,C'*' SUPPRESS DATA TRACKS CARD
         MVC   DFDAPCYL,QMS        FILL PRIMARY DATA CYLS WITH QM-S
         BAL   R11,GETUT2          GET/PRINT 2ND ALLOCATION LINE
*       SPACE-PRI--------------4     HI-USED-RBA-------491520
         CLC   =C'PRI-',UT2AREA+14 PRIMARY ALLOCATION LINE...
         BNE   DSECCYLS               ..NO, JUST LEAVE QM-S
         MVC   DFDAPCYL,UT2AREA+29 MOVE VALUE TO LINE AND
         TR    DFDAPCYL,UNFILTBL        BLANK LEADING DASHES
DSECCYLS EQU   *
         MVC   DFDASCYL,QMS        FILL SECONDARY DATA CYLS WITH QM-S
         BAL   R11,GETUT2          GET/PRINT 3RD ALLOCATION LINE
*       SPACE-SEC--------------0
         CLC   =C'SEC-',UT2AREA+14 SECONDARY ALLOCATION LINE...
         BNE   DENDSPA                ..NO, JUST LEAVE QM-S
         MVC   DFDASCYL,UT2AREA+29 MOVE VALUE TO LINE AND
         TR    DFDASCYL,UNFILTBL        BLANK LEADING DASHES
DENDSPA  EQU   *
         MVI   CTLBYTES+CVOLLINE,C'*' SUPPRESS CLUSTER VOLUMES LINE
         MVC   DFDAVOL,BLANKS      BLANK ALL DATA VOLSER-S
         LA    R1,DFDAVOL-7        POINT AT VOLSER POSITION ZERO
         LA    R2,6                     AND SET SCAN LIMIT
         STM   R1,R2,R1R2SAV       SAVE STARTING ADDRESSES FOR SCAN
         MVI   SWDVL+1,X'70'       RESET UNCONDITIONAL BRANCH TO BNE
GETDVOLS EQU   *
         BAL   R11,GETUT2          GET/PRINT NEXT LINE
*     VOLUME
         CLC   =C'INDE',UT2AREA+4  INDEX NAME LINE...
         BE    DOINDEX                ..YES, GO SAVE INDEX NAME
         CLC   =C'VOLS',UT2AREA+8  VOLSER LINE...
SWDVL    BNE   GETDVOLS               ..BNE/B AFTER SIXTH VOLSER *MDFD*
*       VOLSER------------DSK500     PHYREC-SIZE---------4096     HI-AL
         LM    R1,R2,R1R2SAV       LOAD SCAN ADDRESSES
         CLC   0(6,R1),UT2AREA+26  DOES NEW VOLSER EQUAL PREVIOUS...
         BE    GETDVOLS               ..YES, THEN IGNORE IT & GO ON
         MVC   7(6,R1),UT2AREA+26  MOVE VOLSER AND
         MVI   14(R1),C')'              CLOSING PAREN TO CARD
         BCT   R2,RDY4NXTD
         MVI   SWDVL+1,X'F0'       RESET BNE TO UNCONDITIONAL BRANCH
         B     GETDVOLS                 AND GO GET NEXT LINE
*
RDY4NXTD EQU   *
         LA    R1,7(R1)            POINT AT NEXT VOLSER POSITION
         STM   R1,R2,R1R2SAV       SAVE NEXT ADDRESSES FOR SCAN
         B     GETDVOLS                 AND GO GET NEXT LINE
*       DEVTYPE------X'3050200B'     PHYRECS/TRK------------4     HI-US
*       VOLFLAG------------PRIME     TRACKS/CA-------------30
*       EXTENTS:
*       LOW-CCHH-----X'001E0000'     LOW-RBA----------------0     TRACK
*       HIGH-CCHH----X'0021001D'     HIGH-RBA---------1966079
*
DOINDEX  EQU   *
         MVC   DFCLVOL,DFDAVOL     SAVE IN CLUSTER VOLSER, JUST IN CASE
*   INDEX ------ ACVSAM.DP590.ACF2INFO.INDEX
         MVC   DFIXNAME,BLANKS     BLANK THE RECEIVING FIELD
         SR    R3,R3               ZERO BYTE COUNT
         LA    R4,UT2AREA+17       POINT AT 1ST BYTE OF INDEX NAME
         LA    R5,44               SET STOPPER FOR SCAN (NO PSWD)
         LA    R6,DFIXNAME         POINT AT RECEIVING FIELD
         BAL   R11,BSCAN           EXTRACT INDEX NAME (ONLY)
GETIATTR EQU   *
         BAL   R11,GETUT2          GET/PRINT INDEX ATTRIBUTES HEADER
*     IN-CAT --- SKK.VSAM.USERCAT
*     HISTORY
*       OWNER-IDENT-------(NULL)     CREATION----------81.205     RCVY-
*       RELEASE----------------2     EXPIRATION--------00.000     RCVY-
*     PROTECTION-PSWD-----(NULL)     RACF----------------(NO)
*     ASSOCIATIONS
*       CLUSTER--ACVSAM.DP590.ACF2INFO
         CLC   =C'ATTR',UT2AREA+6  INDEX ATTRIBUTES HEADER LINE...
         BNE   GETIATTR               ..NO, GO GET NEXT LINE
*     ATTRIBUTES
         BAL   R11,GETUT2          GET/PRINT 1ST ATTRIBUTES LINE
*       KEYLEN----------------44     AVGLRECL---------------0     BUF..
*..BUFSPACE---------------0     CISIZE--------------2048
         MVC   DFIXCISZ,QMS        FILL INDEX CISZ WITH QM-S
         CLC   =C'CISI',UT2AREA+95 INDEX CISIZE FIELD...
         BNE   GETISHRO               ..NO, JUST LEAVE QM-S
         MVC   DFIXCISZ,UT2AREA+114   ..YES, MOVE VALUE TO LINE AND
         TR    DFIXCISZ,UNFILTBL             BLANK LEADING DASHES
GETISHRO EQU   *
         BAL   R11,GETUT2          GET/PRINT NEXT ATTRIBUTES LINE
*       RKP-------------------32     MAXLRECL------------2041     EXCPE
         CLC   =C'SHRO',UT2AREA+8  SHROPTNS FIELD...
         BNE   GETISHRO               ..NO, GET NEXT ATTRIBUTES LINE
*       SHROPTNS(2,4)   RECOVERY     SUBALLOC         NOERASE     NOW..
*..NOWRITECHK       NOIMBED     NOREPLICAT     UNORDERED
         CLC   =C'REPL',UT2AREA+95 REPLICATE ATTRIBUTE...
         BE    GETISPAC               ..YES, LEAVE LINE ON
         MVI   CTLBYTES+REPLLINE,C'*' SUPPRESS REPLICATE (NOREPLICATE)
GETISPAC EQU   *
         BAL   R11,GETUT2          GET/PRINT 1ST ALLOCATION LINE
*       NOREUSE
*     STATISTICS
*       REC-TOTAL--------------1     SPLITS-CI--------------0     EXCPS
*       REC-DELETED------------0     SPLITS-CA--------------0     EXTEN
*       REC-INSERTED-----------0     FREESPACE-%CI----------0     SYSTE
*       REC-UPDATED------------0     FREESPACE-%CA----------0
*       REC-RETRIEVED----------0     FREESPC-BYTES------63488
*     ALLOCATION
         CLC   =C'SPAC',UT2AREA+8  1ST ALLOCATION LINE...
         BNE   GETISPAC               ..NO, GO GET NEXT LINE
*       SPACE-TYPE---------TRACK     HI-ALLOC-RBA-------65536
         CLC   =C'TYPE',UT2AREA+14 ALLOCATION TYPE LINE...
         BNE   BADIALOC               ..NO, FLAG AS BAD ALLOCATION
         CLC   =C'-CYL',UT2AREA+23 CYLINDER ALLOCATION...
         BE    ICYLALOC               ..YES, GO GET NUMBERS
ITRKALOC EQU   *
         MVI   CTLBYTES+ICYLLINE,C'*' SUPPRESS INDEX CYLINDERS CARD
         MVC   DFIXPTRK,QMS        FILL PRIMARY INDEX TRKS WITH QM-S
         BAL   R11,GETUT2          GET/PRINT 2ND ALLOCATION LINE
*       SPACE-PRI--------------4     HI-USED-RBA---------2048
         CLC   =C'PRI-',UT2AREA+14 PRIMARY ALLOCATION LINE...
         BNE   ISECTRKS               ..NO, JUST LEAVE QM-S
         MVC   DFIXPTRK,UT2AREA+27 MOVE VALUE TO LINE AND
         TR    DFIXPTRK,UNFILTBL        BLANK LEADING DASHES
ISECTRKS EQU   *
         MVC   DFIXSTRK,QMS        FILL SECONDARY INDEX TRKS WITH QM-S
         BAL   R11,GETUT2          GET/PRINT 3RD ALLOCATION LINE
*       SPACE-SEC--------------0
         CLC   =C'SEC-',UT2AREA+14 SECONDARY ALLOCATION LINE...
         BNE   IENDSPA                ..NO, JUST LEAVE QM-S
         MVC   DFIXSTRK,UT2AREA+27 MOVE VALUE TO LINE AND
         TR    DFIXSTRK,UNFILTBL        BLANK LEADING DASHES
         B     IENDSPA             GO GET VOLUME SERIAL
*
BADIALOC EQU   *
         MVC   DFIXPCYL,QMS        FILL INDEX PRI-CYLS,
         MVC   DFIXSCYL,QMS             INDEX SEC-CYLS,
         MVC   DFIXPTRK,QMS             INDEX PRI-TRKS AND
         MVC   DFIXSTRK,QMS             INDEX SEC-TRKS WITH QM-S
         B     IENDSPA             GO GET VOLUME SERIAL
*
ICYLALOC EQU   *
         MVI   CTLBYTES+ITRKLINE,C'*' SUPPRESS DATA TRACKS CARD
         MVC   DFIXPCYL,QMS        FILL PRIMARY INDEX CYLS WITH QM-S
         BAL   R11,GETUT2          GET/PRINT 2ND ALLOCATION LINE
*       SPACE-PRI--------------4     HI-USED-RBA---------2048
         CLC   =C'PRI-',UT2AREA+14 PRIMARY ALLOCATION LINE...
         BNE   ISECCYLS               ..NO, JUST LEAVE QM-S
         MVC   DFIXPCYL,UT2AREA+29 MOVE VALUE TO LINE AND
         TR    DFIXPCYL,UNFILTBL        BLANK LEADING DASHES
ISECCYLS EQU   *
         MVC   DFIXSCYL,QMS        FILL SECONDARY DATA CYLS WITH QM-S
         BAL   R11,GETUT2          GET/PRINT 3RD ALLOCATION LINE
*       SPACE-SEC--------------0
         CLC   =C'SEC-',UT2AREA+14 SECONDARY ALLOCATION LINE...
         BNE   IENDSPA                ..NO, JUST LEAVE QM-S
         MVC   DFIXSCYL,UT2AREA+29 MOVE VALUE TO LINE AND
         TR    DFIXSCYL,UNFILTBL        BLANK LEADING DASHES
IENDSPA  EQU   *
         MVC   DFIXVOL,BLANKS      BLANK ALL INDEX VOLSER-S
         LA    R1,DFIXVOL-7        POINT AT VOLSER POSITION ZERO
         LA    R2,6                     AND SET SCAN LIMIT
         STM   R1,R2,R1R2SAV       SAVE STARTING ADDRESSES FOR SCAN
         MVI   SWIVL+1,X'70'       RESET UNCONDITIONAL BRANCH TO BNE
GETIVOLS EQU   *
         BAL   R11,GETUT2          GET/PRINT NEXT LINE
*     VOLUME
         CLC   =C'VOLS',UT2AREA+8  VOLSER LINE...
SWIVL    BNE   GETIVOLS               ..BNE/B AFTER SIXTH VOLSER *MDFD*
*       VOLSER------------DSK500     PHYREC-SIZE---------2048     HI-AL
         LM    R1,R2,R1R2SAV       LOAD SCAN ADDRESSES
         CLC   0(6,R1),UT2AREA+26  DOES NEW VOLSER EQUAL PREVIOUS...
         BE    GETIVOLS               ..YES, THEN IGNORE IT & GO ON
         MVC   7(6,R1),UT2AREA+26  MOVE VOLSER AND
         MVI   14(R1),C')'              CLOSING PAREN TO CARD
         BCT   R2,RDY4NXTI
         MVI   SWIVL+1,X'F0'       RESET BNE TO UNCONDITIONAL BRANCH
         B     GETIVOLS                 AND GO GET NEXT LINE
*
RDY4NXTI EQU   *
         LA    R1,7(R1)            POINT AT NEXT VOLSER POSITION
         STM   R1,R2,R1R2SAV       SAVE NEXT ADDRESSES FOR SCAN
         B     GETIVOLS                 AND GO GET NEXT LINE
*       DEVTYPE------X'3050200B'     PHYRECS/TRK------------8     HI-US
*       VOLFLAG------------PRIME     TRACKS/CA--------------1
*       EXTENTS:
*       LOW-CCHH-----X'00190008'     LOW-RBA----------------0     TRACK
*       HIGH-CCHH----X'0019000B'     HIGH-RBA-----------65535
*
EOUT2    EQU   *
*        CLOSE (UT2DCB)            CLOSE SYSUT2 * * * * * * * * * * * *
         LA    R1,UT2OB            LOAD PARAMETER REG1                *
         SVC   20                  ISSUE CLOSE SVC                    *
         CLI   LCPARM,C'E'         NON-PARM REQUEST...
         BNE   WRAPUP                 ..NO, GO WRAP IT UP
         PACK  DBLWRD,DFCLBSPC     PACK BUFFERSPACE NUMBER AND
         CVB   R1,DBLWRD                CONVERT IT TO BINARY
         PACK  DBLWRD,DFCLCISZ     PACK DATA CONTROLINTERVALSIZE AND
         CVB   R2,DBLWRD                CONVERT IT TO BINARY
         SLA   R2,1                GET SIZE OF TWO DATA BUFFERS
         CLI   CTLBYTES+INDXLINE,C'*' IS THIS A KSDS...
         BE    CKBUFSP                   ..NO, INDEX BUFFERS NOT REQD
         PACK  DBLWRD,DFIXCISZ     PACK INDEX CONTROLINTERVALSIZE AND
         CVB   R0,DBLWRD                CONVERT IT TO BINARY
         AR    R2,R0               ADD SIZE OF ONE INDEX BUFFER
CKBUFSP  EQU   *
         CR    R1,R2               IS BUFFERSPACE DEFAULT (2D+1I)...
         BNE   CKCISZ                 ..NO, LEAVE BUFFERSPACE
         MVI   CTLBYTES+BSPCLINE,C'*' ..YES, SUPPRESS BUFFERSPACE CARD
CKCISZ   EQU   *
         CLI   CTLBYTES+INDXLINE,C'*' IS THIS A KSDS...
         BE    MVDA2CL1                  ..NO, MOVE DATA CISZ TO CLUSTR
         CLC   DFDACISZ,DFIXCISZ   DOES DATA CISZ = INDEX CISZ...
         BNE   CKVOLS                 ..NO, LEAVE DATA/INDEX CISZ
         MVI   CTLBYTES+ICISLINE,C'*' ..YES, SUPPRESS INDEX CISZ
MVDA2CL1 EQU   *
         MVI   CTLBYTES+DCISLINE,C'*'        SUPPRESS DATA CISZ AND
         MVI   CTLBYTES+CCISLINE,X'40'       ACTIVATE CLUSTER CISZ
CKVOLS   EQU   *
         CLI   CTLBYTES+INDXLINE,C'*' IS THIS A KSDS...
         BE    MVDA2CL2                  ..NO, MOVE DATA VOLS TO CLUSTR
         CLC   DFDAVOL,DFIXVOL     DOES DATA VOLS = INDEX VOLS...
         BNE   CKCYLS                 ..NO, LEAVE DATA/INDEX VOLS
         MVI   CTLBYTES+IVOLLINE,C'*' ..YES, SUPPRESS INDEX VOLUMES
MVDA2CL2 EQU   *
         MVI   CTLBYTES+DVOLLINE,C'*'        SUPPRESS DATA VOLUMES AND
         MVI   CTLBYTES+CVOLLINE,X'40'       ACTIVATE CLUSTER VOLUMES
CKCYLS   EQU   *
         CLI   CTLBYTES+DCYLLINE,C'*' IS DATA ALLOCATION CYLINDERS...
         BE    CKTRKS                    ..NO, MUST BE TRACKS
         CLI   CTLBYTES+ICYLLINE,C'*' IS INDEX ALLOCATION CYLINDERS...
         BE    PUTOUT                    ..NO, JUST LEAVE THINGS AS IS
         CLC   DFDAPCYL(7),DFIXPCYL   DATA CYLS = INDEX CYLS...
         BNE   PUTOUT                    ..NO, JUST LEAVE THINGS AS IS
         MVI   CTLBYTES+DCYLLINE,C'*' SUPPRESS DATA CYLINDERS
         MVI   CTLBYTES+ICYLLINE,C'*'          INDEX CYLINDERS AND
         MVI   CTLBYTES+CCYLLINE,X'40'      ACTIVATE CLUSTER CYLINDERS
         MVC   DFCLPCYL(7),DFDAPCYL   MOVE DATA CYLS TO CLUSTER CYLS
         B     PUTOUT                 GO BEGIN OUTPUT CYCLE
*
CKTRKS   EQU   *
         CLI   CTLBYTES+ITRKLINE,C'*' IS INDEX ALLOCATION TRACKS...
         BE    PUTOUT                    ..NO, JUST LEAVE THINGS AS IS
         CLC   DFDAPTRK(7),DFIXPTRK   DATA TRKS = INDEX TRKS...
         BNE   PUTOUT                    ..NO, JUST LEAVE THINGS AS IS
         MVI   CTLBYTES+DTRKLINE,C'*' SUPPRESS DATA TRACKS
         MVI   CTLBYTES+ITRKLINE,C'*'          INDEX TRACKS AND
         MVI   CTLBYTES+CTRKLINE,X'40'      ACTIVATE CLUSTER TRACKS
         MVC   DFCLPTRK(7),DFDAPTRK   MOVE DATA TRKS TO CLUSTER TRKS
PUTOUT   EQU   *
         LA    R3,CTLBYTES         POINT AT LIST OF CONTROL BYTES
         LA    R6,BOLCTBL                        AND IDCAMS CARDS
         LA    R5,99               SET SAFETY STOPPER
         MVC   INCC(9),=C'0*SYSUT3*' SET PRINT LINE LITERAL
OUTEST   EQU   *
         CLI   0(R3),X'40'         PUT OUT THIS CARD...
         BNE   EOTCHK                 ..NO, CHECK FOR END OF TABLE
         BAL   R11,PUTUT3             ..YES, GO PUT/WRITE OUTPUT CARD
EOTCHK   EQU   *
         CLI   0(R3),X'FF'         END OF TABLE...
         BE    EOTABLE                ..YES, GO SET UP FOR NEXT REQ
         LA    R3,1(R3)            UP THE CONTROL BYTE AND
         LA    R6,80(R6)             IDCAMS CARD POINTERS
         BCT   R5,OUTEST           GO PROCESS NEXT IDCAMS CARD
EOTABLE  EQU   *
         SP    LINECTR,LINECTR     FORCE PAGING FOR NEXT REQUEST
GETNXT   EQU   *
         MVC   INCC(9),=C'0 *SYSIN*' SET PRINT LINE LITERAL
         B     GETNSIN             GO GET NEXT SYSIN CARD
*
PARMRUN  EQU   *
*ALIAS --------- ACFNCP
*NONVSAM ------- IPO1.CMDPROC
         MVC   CTLBYTES(NBRPLINS),BLANKS BLANK CONTROL BYTES FOR OUTPUT
         CLI   UT2AREA+1,C'U'      USERCATALOG ENTRY...
         BE    UCAT0                  ..YES, SUPPRESS OTHER LINES
         MVC   DFPMNAME,UT2AREA+17 MOVE ALIAS/NVSAM NAME TO IDCAMS CARD
         CLI   UT2AREA+1,C'A'      ALIAS ENTRY...
         BE    ALIAS0                 ..YES, SUPPRESS OTHER LINES
NVSAM0   EQU   *
         MVI   CTLBYTES+ARELLINE,C'*' SUPPRESS ALIAS REL LINE
NVSAM1   EQU   *
         BAL   R11,GETUT2          GET/PRINT OWNER-IDENT LINE
*     HISTORY
*       OWNER-IDENT-------(NULL)     CREATION----------83.013
         CLC   =C'OWNE',UT2AREA+8  OWNER-IDENT LINE...
         BNE   NVSAM1                 ..NO, GO GET NEXT LINE
         CLC   =C'(NUL',UT2AREA+26 IS OWNER VALUE (NULL)...
         BE    NVSAM2                 ..YES, SUPPRESS LINE
         MVC   DFNVONAM,UT2AREA+24    ..NO, MOVE VALUE TO LINE AND
         TR    DFNVONAM,UNFILTBL            BLANK LEADING DASHES
         B     NVSAM3              GO GET EXPIRATION DATE
*
NVSAM2   EQU   *
         MVI   CTLBYTES+NOWNLINE,C'*' SUPPRESS OWNER LINE
NVSAM3   EQU   *
         BAL   R11,GETUT2          GET/PRINT EXPIRATION DATE LINE
         MVC   DFNVXYY(5),QMS      FILL EXPIRE DATE WITH QM-S
         CLC   =C'EXPI',UT2AREA+37 EXPIRATION DATE LINE...
         BNE   NVSAM5                 ..NO, JUST LEAVE QM-S
*       RELEASE----------------2     EXPIRATION--------00.000
         CLC   =C'.000',UT2AREA+57    ..YES, IS IT NULL...
         BE    NVSAM4                           ..YES, SUPPRESS LINE
         MVC   DFNVXYY,UT2AREA+55  MOVE YY AND
         MVC   DFNVXDDD,UT2AREA+58      DDD TO EXPIRE DATE (TO) CARD
         B     NVSAM5              GO GET THE VOLSER CARD
*
NVSAM4   EQU   *
         MVI   CTLBYTES+NXDTLINE,C'*' SUPPRESS EXPDT LINE
NVSAM5   EQU   *
         BAL   R11,GETUT2          GET/PRINT VOLSER LINE
*     VOLUMES
*       VOLSER------------******     DEVTYPE------X'00000000'     FSEQN
         CLC   =C'VOLS',UT2AREA+8  VOLSER LINE...
         BNE   NVSAM5                 ..NO, GO GET NEXT LINE
         MVC   DFNVVSNO,UT2AREA+26 MOVE VOLSER TO VOLUMES CARD
         CLC   DFNVVSNO(6),STARS   IS VOLSER ALL ASTERISKS...
         BNE   NVSAM7                 ..NO, GO EXTRACT DEVICE TYPE
         MVC   DFNVVSNO,NULLSER    MOVE '******' TO VOLUMES CARD
NVSAM6   EQU   *
         MVC   DFNVUNIT,NULLDEVT   MOVE '  0000  ' TO DEVICETYPES CARD
         B     NVSAM8              GO EXTRACT FILE SEQUENCE NUMBER
*
NVSAM7   EQU   *
         TR    UT2AREA+52(8),TBLA  TRANSLATE DEVTYPE VALUE
         PACK  DBLWRD,UT2AREA+52(9)     CONVERT TO BINARY FULLWORD
         MVC   DEVTYPE,DBLWRD+3         AND SAVE IT IN CORE
         LA    R1,CALLIST          LOAD PARAMETER REG1     *** CALL ***
         L     R15,=V(DTYP2UNT)    LOAD ENTRY ADDRESS                 *
         BALR  R14,R15             BRANCH TO ENTRY POINT              *
NVSAM8   EQU   *
         CLC   =C'--0 ',UT2AREA+87 IS FILE SEQUENCE NUMBER NULL...
         BE    NVSAM9                 ..YES, GO SUPPRESS LINE
         MVC   DFNVFNBR,UT2AREA+82    ..NO, MOVE VALUE TO LINE AND
         TR    DFNVFNBR,UNFILTBL            BLANK LEADING DASHES
         B     NVSAM10             GO GET ASSOCIATIONS LINE
*
NVSAM9   EQU   *
         MVI   CTLBYTES+NFSNLINE,C'*' SUPPRESS FSEQN LINE
NVSAM10  EQU   *
         BAL   R11,GETUT2          GET/PRINT ASSOCIATIONS LINE
*     ASSOCIATIONS
         B     PUTPARM             GO PUT OUT DEFINE NVSAM CARDS
*
UCAT0    EQU   *
*USERCATALOG --- ATMS.VSAM.USERCAT
         MVC   DFPMNAME(46),UT2AREA+16    MOVE UCAT NAME TO IDCAMS CARD
         MVI   CTLBYTES+ARELLINE,C'*'     SUPPRESS ALIAS REL LINE
         MVC   CTLBYTES+NFSNLINE(3),STARS SUPPRESS NVSAM LINES
UCAT1    EQU   *
         BAL   R11,GETUT2          GET/PRINT ASSOCIATIONS LINE
*     HISTORY
*       RELEASE----------------2
*     VOLUMES
*       VOLSER------------STC83E     DEVTYPE------X'3010200E'     VOLFL
         CLC   =C'VOLS',UT2AREA+8  VOLSER LINE...
         BNE   UCAT1                  ..NO, GO GET NEXT LINE
         MVC   DFNVVSNO,UT2AREA+26 MOVE VOLSER TO VOLUMES CARD
         TR    UT2AREA+52(8),TBLA  TRANSLATE DEVTYPE VALUE
         PACK  DBLWRD,UT2AREA+52(9)     CONVERT TO BINARY FULLWORD
         MVC   DEVTYPE,DBLWRD+3         AND SAVE IT IN CORE
         LA    R1,CALLIST          LOAD PARAMETER REG1     *** CALL ***
         L     R15,=V(DTYP2UNT)    LOAD ENTRY ADDRESS                 *
         BALR  R14,R15             BRANCH TO ENTRY POINT              *
         BAL   R11,GETUT2          GET/PRINT ASSOCIATIONS LINE
*     ASSOCIATIONS
         B     PUTPARM             GO PUT OUT IMPORT CONNECT CARDS
*
ALIAS0   EQU   *
         MVC   CTLBYTES+NDVTLINE(5),STARS SUPPRESS ALL NVSAM LINES
ALIAS1   EQU   *
         BAL   R11,GETUT2          GET/PRINT ASSOCIATIONS LINE
*     HISTORY
*       RELEASE----------------2
*     ASSOCIATIONS
         CLC   =C'ASSO',UT2AREA+6  ASSOCIATIONS LINE...
         BNE   ALIAS1                 ..NO, GO GET NEXT LINE
         BAL   R11,GETUT2          GET/PRINT NONVSAM/USERCAT NAME LINE
*       NONVSAM--SYSCTLG.VDSK803
*       USERCAT--SKK.VSAM.USERCAT
         MVC   DFALRNAM,UT2AREA+17 MOVE NAME TO RELATE CARD
PUTPARM  EQU   *
         LA    R3,CTLBYTES         POINT AT LIST OF CONTROL BYTES
         LA    R6,BOPCTBL                        AND IDCAMS CARDS
         LA    R5,99               SET SAFETY STOPPER
         MVC   INCC(9),=C'0*SYSUT3*' SET PRINT LINE LITERAL
OUTEST2  EQU   *
         CLI   0(R3),X'40'         PUT OUT THIS CARD...
         BNE   EOTCHK2                ..NO, CHECK FOR END OF TABLE
         BAL   R11,PUTUT3             ..YES, GO PUT/WRITE OUTPUT CARD
EOTCHK2  EQU   *
         CLI   0(R3),X'FF'         END OF TABLE...
         BE    EOTABLE2               ..YES, GO SET UP FOR NEXT REQ
         LA    R3,1(R3)            UP THE CONTROL BYTE AND
         LA    R6,80(R6)             IDCAMS CARD POINTERS
         BCT   R5,OUTEST2          GO PROCESS NEXT IDCAMS CARD
EOTABLE2 EQU   *
         MVI   SUPRSW,C'Y'         SUPPRESS SYSUT2 PRINT TILL NEXT NAME
         B     GETCLNM             GO GET NEXT ALIAS/NVSAM NAME
*
WRAPUP   EQU   *
*        CLOSE (SINDCB,,PRTDCB,,UT3DCB) * * * * * * * * * * * * * * * *
         MVI   PRTOB,X'00'         SET OPTION BYTE FOR CLOSE          *
         MVI   UT3OB,X'80'         SET OPTION BYTE FOR CLOSE          *
         LA    R1,SINOB            LOAD PARAMETER REG1                *
         SVC   20                  ISSUE CLOSE SVC                    *
*        FINISH RC=RETCODE
         L     R15,RETCODE         LOAD RETURN CODE FROM FIELD
         L     R13,4(R13)          RESTORE POINTER TO CALLING PGM SAVE
         L     R14,12(R13)         LOAD RETURN ADDRESS
         LM    R0,R12,20(R13)      RESTORE REGS 0 THRU 12
         BR    R14                 RETURN TO CALLING PROGRAM
*
BSCAN    EQU   *
         CLI   0(R4),X'40'         FIRST/NEXT BYTE BLANK...
         BE    EOSCAN                 ..YES, GO CHECK NAME LENGTH
         MVC   0(1,R6),0(R4)          ..NO, MOVE BYTE TO WORK AREA
         MVI   0(R4),X'40'                     THEN BLANK SOURCE
         LA    R3,1(R3)            INCREMENT BYTE COUNT
         LA    R4,1(R4)                      INPUT POINTER AND
         LA    R6,1(R6)                      OUTPUT POINTER
         BCT   R5,BSCAN            GO CHECK NEXT BYTE (IF ANY)
         CLI   0(R4),X'40'         NO MORE, NEXT BYTE BLANK...
         BNE   NAME2LNG               ..NO, NAME TOO LONG
EOSCAN   EQU   *
         LTR   R3,R3               IS BYTE COUNT ZERO...
         BZ    NONAME                 ..YES, NO NAME FOUND
         MVI   1(R6),C')'          INSERT TRAILING RIGHT PARENTHESIS
         BR    R11                 RETURN TO MAIN LOGIC
*
NAME2LNG EQU   *
         MVC   INMSG,=CL28'NAME/PASSWORD > 53 BYTES ***'
         B     ERRMSG
*
NONAME   EQU   *
         MVC   INMSG,=CL28'CC-1 BLANK (NO CLUSTER) ***'
ERRMSG   EQU   *
         LA    R9,INCC             POINT AT PRINT LINE
         BAL   R11,PUTSIN          GO PRINT INPUT CARD WITH MSG
         CLI   INWORK+71,X'40'     IS BAD CARD CONTINUED...
         BE    GETNXT                 ..NO, GO GET NEXT SYSIN CARD
         BAL   R11,GETSIN          GET CONTINUATION OF BAD CARD
         MVC   INMSG,=CL28'*** FLUSHED ***'
         B     ERRMSG                   AND GO FLUSH IT
*
BELLYUP  EQU   *
         ABEND 1,DUMP
*
GETSIN   EQU   *
         MVC   INMSG,BLANKS        BLANK INPUT CARD MESSAGE AREA
         L     R1,=A(SINDCB)       LOAD ADDRESS OF DCB
         GET   (1),INCARD          GET NEXT SYSIN RECORD
         MVC   INWORK,INCARD       MOVE CARD TO WORK AREA
         BR    R11                 RETURN TO MAIN LOGIC
*
GETUT2   EQU   *
         MVC   UT2AREA,BLANKS      MOVE BLANKS TO RECORD AREA
         L     R1,=A(UT2DCB)       LOAD ADDRESS OF DCB
         GET   (1),UT2RDW          GET SYSUT2 RECORD
         CLI   UT2AREA,X'40'       CCTL = SINGLE-SPACE...
         BE    SWUT2AX                ..YES, GO TO PRINT/BYPASS SWITCH
         CLI   UT2AREA,C'0'        CCTL = DOUBLE-SPACE...
         BE    CC0CHKS                ..YES, GO CHECK IT'S CONTENT
         CLI   UT2AREA,C'-'        CCTL = TRIPLE-SPACE...
DASHSW   DS    0H
         BNE   TURNAON                ..NO, GO ACTIVATE SWUT2C
*        B     TURNAON                ..WHO CARES, GOT CAT FROM PARM
*                             LISTING FROM CATALOG -- CATALOG.VMSPCAT
         MVC   DFPMCTNM,UT2AREA+54 SAVE CATALOG NAME IN PARM CAT CARD
TURNAON  EQU   *
         OI    SWUT2C+1,X'F0'      RESET NOP TO BRANCH
RSTBYPS  EQU   *
         NI    SWUT2A+1,X'0F'      RESET BRANCH TO NOP
         NI    SWUT2B+1,X'0F'      RESET BRANCH TO NOP
SWUT2C   DS    0H
         B     GETUT2              BRANCH/NOP WHEN CLUSTER HITS  *MDFD*
         B     PRTUT2              GO PRINT CLUSTER NAME LINE
*
SWUT2AX  EQU   *
SWUT2A   DS    0H
         NOP   GETUT2              NOP/BR WHEN BYPASSING INPUT   *MDFD*
         B     PRTUT2              GO PRINT SYSUT2 LINE
*
SETBYPS  EQU   *
         OI    SWUT2A+1,X'F0'      RESET NOP TO BRANCH
         OI    SWUT2B+1,X'F0'      RESET NOP TO BRANCH
         B     GETUT2              GO READ NEXT LINE
*
CC0CHKS  EQU   *
         NI    SWUT2C+1,X'0F'      RESET BRANCH TO NOP
         CLC   =C'CLUS',UT2AREA+1       CLUSTER NAME LINE...
         BE    RSTBYPS                     ..YES, GO RESET BYPASS
         CLC   =C'ALIA',UT2AREA+1       ALIAS NAME LINE...
         BE    RSTSUPR                     ..YES, GO RESET SUPRSW
         CLC   =C'NONV',UT2AREA+1       NONVSAM NAME LINE...
         BE    RSTSUPR                     ..YES, GO RESET SUPRSW
         CLC   =C'USER',UT2AREA+1       USERCATALOG NAME LINE...
         BE    RSTSUPR                     ..YES, GO RESET SUPRSW
SWUT2B   DS    0H
         NOP   GETUT2              NOP/BR WHEN BYPASSING INPUT   *MDFD*
         CLC   =C'DATA',UT2AREA+4       DATA NAME LINE...
         BE    PRTUT2                      ..YES, GO PRINT IT
         CLC   =C'INDE',UT2AREA+4       INDEX NAME LINE...
         BE    PRTUT2                      ..YES, GO PRINT IT
         CLC   UT2AREA+1(120),BLANKS    BLANK LINE...
         BE    SETBYPS                     ..YES, GO SET BYPASS
         CLC   =C'THE NUMB',UT2AREA+10  RECAP HEADING...
         BE    SETBYPS                     ..YES, GO SET BYPASS
         CLC   =C'IDC',UT2AREA+1        ERROR MESSAGE LINE...
         BE    PRTUT2                      ..YES, GO PRINT IT
         MVI   UT2AREA,X'40'            OVERFLOW LINE, RESET TO SGLSPC
         B     SWUT2AX                    GO TO PRINT/BYPASS SWITCH
*
RSTSUPR  EQU   *
         MVI   SUPRSW,C'N'         TURN OFF SUPPRESS SWITCH
         B     RSTBYPS                  GO RESET BYPASS
*
PRTUT2   EQU   *
         CLI   SUPRSW,C'Y'         SHOULD SYSUT2 PRINT BE SUPPRESSED...
         BE    GETUT2                 ..YES, GO GET NEXT LINE
         LA    R9,UT2AREA          POINT AT PRINT LINE
PUTPRT   EQU   *
         CP    LINECTR,=P'0'       ANY LINES LEFT...
         BP    PUTDTL                 ..YES, GO PRINT DETAIL
         MVC   HPAGE,=XL3'202120'  MOVE MASK TO HEADER AND
         ED    HPAGE-1(4),PAGENBR       EDIT PAGE NUMBER ONTO IT
         L     R1,=A(PRTDCB)       LOAD DCB ADDRESS
         PUT   (1),HEADER          PRINT PROGRAM HEADER
         AP    PAGENBR,=P'1'       INCREMENT PAGE NUMBER
         ZAP   LINECTR,=P'58'      RESET LINE COUNTER
         MVI   0(R9),C'0'          FORCE DOUBLE SPACE
PUTDTL   EQU   *
         L     R1,=A(PRTDCB)       LOAD DCB ADDRESS
         PUT   (1),(9)             PUT SYSPRINT RECORD
         CLI   0(R9),C'0'          DOUBLE SPACE...
         BNE   SUB1L                  ..NO, JUST SUBTRACT FOR ONE LINE
         SP    LINECTR,=P'1'       DECREMENT THE LINE COUNTER
SUB1L    EQU   *
         SP    LINECTR,=P'1'       DECREMENT THE LINE COUNTER
         MVI   0(R9),X'40'         RESET TO SINGLE SPACE
         BR    R11                 RETURN TO MAIN LOGIC
*
PUTUT1   EQU   *
         L     R1,=A(UT1DCB)       LOAD DCB ADDRESS
         PUT   (1),INCARD          WRITE IDCAMS SYSIN CARD
         LA    R9,INCC             POINT AT LINE TO BE PRINTED
         B     PUTPRT              GO PRINT IMAGE OF CARD
*
PUTUT3   EQU   *
         MVC   INCARD,0(R6)        MOVE CARD TO WORK AREA
         L     R1,=A(UT3DCB)       LOAD DCB ADDRESS
         PUT   (1),INCARD          PUT IDCAMS CONTROL CARD
PUTSIN   EQU   *
         LA    R9,INCC             POINT AT PRINT LINE AND
         B     PUTPRT                   GO WRITE IT OUT
*
CHKBLKSI EQU   *
         OC    62(2,R1),62(R1)     IS DCBBLKSI NON-ZERO...
         BCR   7,R14                  ..YES, RETURN TO OPEN PROCESSING
         MVC   62(2,R1),82(R1)        ..NO, OVERLAY WITH DCBLRECL
         BR    R14                 RETURN TO OPEN PROCESSING
*
         EJECT
DBLWRD   DS    D
*
         DS    0F
SINOB    DC    X'00',AL3(SINDCB)   SYSIN    OPTION BYTE/DCB ADDRESS
PRTOB    DC    X'0F',AL3(PRTDCB)   SYSPRINT OPTION BYTE/DCB ADDRESS
UT3OB    DC    X'8F',AL3(UT3DCB)   SYSUT3   OPTION BYTE/DCB ADDRESS
UT2OB    DC    X'80',AL3(UT2DCB)   SYSUT2   OPTION BYTE/DCB ADDRESS
UT1OB    DC    X'8F',AL3(UT1DCB)   SYSUT1   OPTION BYTE/DCB ADDRESS
*
         DS    0F
DCBFIX   DC    X'85',AL3(CHKBLKSI) DCB EXIT TO PLUG MISSING BLKSIZE
*
RETCODE  DS    F                   RETURN CODE
*
FWZERO   DC    A(0)
*
*        LINK PARAMETER LIST - POINTERS TO...
PARAM    DC    A(FWZERO)              ..PARM INFORMATION (NONE)
         DC    X'80',AL3(DDS)         ..ALTERNATE DDNAMES
*
LINKLIST DC    A(EP)               ADDRESS OF ENTRY POINT NAME
         DC    X'80'               RETURN REQUESTED INDICATOR
         DC    AL3(0)              DCB ADDRESS (NONE)
         DC    A(LINK1RET)         RETURN ADDRESS
*
EP       DC    CL8'IDCAMS'         ENTRY POINT NAME
*
LINECTR  DC    PL2'0'              LINE COUNTER
*
PAGENBR  DC    PL2'1'              PAGE NUMBER
*
         CNOP  2,4
DDS      DC    H'48'               ALTERNATE DDNAMES FOR...
         DC    8F'0'
         DC    CL8'SYSUT1'            ..SYSIN
         DC    CL8'SYSUT2'            ..SYSPRINT
*
R1R2SAV  DS    2F
*
CALLIST  CALL  ,(DEVTYPE,DFNVUNIT),VL,MF=L
*
NULLSER  DC    XL8'7D5C5C5C5C5C5C7D' LITERAL '******'
NULLDEVT DC    CL8'  0000  '
*
DEVTYPE  DC    XL4'00000000'       DEVICE TYPE
*
TBLA     DS    0F                  VALID DISPLAY-HEX CHARACTER TABLE
         DC    193X'00'            HEX 00 TO C0
         DC    XL6'FAFBFCFDFEFF'       C1 TO C6 (ALPHA A-F)
         DC    41X'00'                 C7 TO EF
         DC    CL10'0123456789'        F0 TO F9 (NUMERIC 0-9)
         DC    6X'00'                  FA TO FF
*
UNFILTBL DS    0F
         DC    X'000102030405060708090A0B0C0D0E0F'    HEX 00 - 0F
         DC    X'101112131415161718191A1B1C1D1E1F'    HEX 10 - 1F
         DC    X'202122232425262728292A2B2C2D2E2F'    HEX 20 - 2F
         DC    X'303132333435363738393A3B3C3D3E3F'    HEX 30 - 3F
         DC    X'404142434445464748494A4B4C4D4E4F'    HEX 40 - 4F
         DC    X'505152535455565758595A5B5C5D5E5F'    HEX 50 - 5F
         DC    X'406162636465666768696A6B6C6D6E6F'    HEX 60 - 6F
         DC    X'707172737475767778797A7B7C7D7E7F'    HEX 70 - 7F
         DC    X'808182838485868788898A8B8C8D8E8F'    HEX 80 - 8F
         DC    X'909192939495969798999A9B9C9D9E9F'    HEX 90 - 9F
         DC    X'A0A1A2A3A4A5A6A7A8A9AAABACADAEAF'    HEX A0 - AF
         DC    X'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF'    HEX B0 - BF
         DC    X'C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF'    HEX C0 - CF
         DC    X'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF'    HEX D0 - DF
         DC    X'E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF'    HEX E0 - EF
         DC    X'F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF'    HEX F0 - FF
*
CLNMWK   DC    CL55' '             CLUSTER(/PASSWORD) NAME WORK
*
CTNMWK   DC    CL55' '             CATALOG(/PASSWORD) NAME WORK
*
BLANKS   DC    CL121' '            LITERAL BLANKS
*
QMS      DC    121CL1'?'           LITERAL QUESTION MARKS
*
STARS    DC    121CL1'*'           LITERAL ASTERISKS
*
CC72SAV  DC    CL1' '              CONTINUATION CHARACTER (CC72) SAVE
*
SUPRSW   DC    CL1'N'              SUPPRESS SYSUT2 PRINTOUT SWITCH
*
CTLBYTES DC    100XL1'FF'          BYTES TO CONTROL CARD OUTPUT
*
*--------------------------------------------------------------------*
* IDCAMS CONTROL CARD TABLE
BOLCTBL  DS    0F                  BEGINNING OF LISTCAT CARD TABLE
*------------------------------------------------------* L I N E   0 1
DLCMND   DS    0CL80
         DC    CL10' DELETE ( '
DLNAME   DC    CL55'XXXXXXXX.XXXXXXXX.XXXXXXXX.XXXXXXXX/PASSWORD'
         DC    CL5' '
         DC    CL10'-'
*------------------------------------------------------* L I N E   0 2
DLPURGE  DC    CL70'            PURGE '
         DC    CL10'-'
*
PURGLINE EQU   (DLPURGE-BOLCTBL)/80
*------------------------------------------------------* L I N E   0 3
DLCAT    DS    0CL80
         DC    CL13'   CATALOG ( '
DLCTNM   DC    CL55'XXXXXXXX.XXXXXXXX.XXXXXXXX.XXXXXXXX/PASSWORD'
         DC    CL12' '
*------------------------------------------------------* L I N E   0 4
DFCLCMND DC    CL70' DEFINE CLUSTER '
         DC    CL10'-'
*------------------------------------------------------* L I N E   0 5
DFCLNMC  DS    0CL80
         DC    CL19'          ( NAME ( '
DFCLNAME DC    CL46'XXXXXXXX.XXXXXXXX.XXXXXXXX.XXXXXXXX.XXXXXXXX'
         DC    CL5' '
         DC    CL10'-'
*------------------------------------------------------* L I N E   0 6
DFCLBSC  DS    0CL80
         DC    CL26'            BUFFERSPACE ( '
DFCLBSPC DC    CL9'NNNNNNNNN'
         DC    CL35' ) '
         DC    CL10'-'
*
BSPCLINE EQU   (DFCLBSC-BOLCTBL)/80
*------------------------------------------------------* L I N E   0 7
DFCLCIC  DS    0CL80
         DC    CL34'            CONTROLINTERVALSIZE ( '
DFCLCISZ DC    CL5'NNNNN'
         DC    CL31' ) '
         DC    CL10'-'
*
CCISLINE EQU   (DFCLCIC-BOLCTBL)/80
*------------------------------------------------------* L I N E   0 8
DFCLCYC  DS    0CL80
         DC    CL24'            CYLINDERS ( '
DFCLPCYL DC    CL3'NNN'
         DC    CL1' '
DFCLSCYL DC    CL3'NNN'
         DC    CL39' ) '
         DC    CL10'-'
*
CCYLLINE EQU   (DFCLCYC-BOLCTBL)/80
*------------------------------------------------------* L I N E   0 9
DFCLERC  DC    CL70'            ERASE '
         DC    CL10'-'
*
ERASLINE EQU   (DFCLERC-BOLCTBL)/80
*------------------------------------------------------* L I N E   1 0
DFCLEXC  DS    0CL80
         DC    CL28'            EXCEPTIONEXIT ( '
DFCLEXCP DC    CL8'XXXXXXXX'
         DC    CL34' ) '
         DC    CL10'-'
*
EXCPLINE EQU   (DFCLEXC-BOLCTBL)/80
*------------------------------------------------------* L I N E   1 1
DFCLFSC  DS    0CL80
         DC    CL24'            FREESPACE ( '
DFCLPCIF DC    CL3'NNN'
         DC    CL1' '
DFCLPCAF DC    CL3'NNN'
         DC    CL39' ) '
         DC    CL10'-'
*
FSPCLINE EQU   (DFCLFSC-BOLCTBL)/80
*------------------------------------------------------* L I N E   1 2
DFCLIMC  DC    CL70'            IMBED '
         DC    CL10'-'
*
IMBDLINE EQU   (DFCLIMC-BOLCTBL)/80
*------------------------------------------------------* L I N E   1 3
DFCLKYC  DS    0CL80
         DC    CL19'            KEYS ( '
DFCLKYLN DC    CL3'NNN'
         DC    CL1' '
DFCLRKP  DC    CL5'NNNNN'
         DC    CL42' ) '
         DC    CL10'-'
*
KSDSLINE EQU   (DFCLKYC-BOLCTBL)/80
*------------------------------------------------------* L I N E   1 4
DFCLNIC  DC    CL70'            NONINDEXED '
         DC    CL10'-'
*
ESDSLINE EQU   (DFCLNIC-BOLCTBL)/80
*------------------------------------------------------* L I N E   1 5
DFCLNMBR DC    CL70'            NUMBERED '
         DC    CL10'-'
*
RRDSLINE EQU   (DFCLNMBR-BOLCTBL)/80
*------------------------------------------------------* L I N E   1 6
DFCLORC  DC    CL70'            ORDERED '
         DC    CL10'-'
*
ORDRLINE EQU   (DFCLORC-BOLCTBL)/80
*------------------------------------------------------* L I N E   1 7
DFCLOWC  DS    0CL80
         DC    CL20'            OWNER ( '
DFCLOWNR DC    CL8'NNNNNNNN'
         DC    CL42' ) '
         DC    CL10'-'
*
OWNRLINE EQU   (DFCLOWC-BOLCTBL)/80
*------------------------------------------------------* L I N E   1 8
DFCLRSC  DS    0CL80
         DC    CL25'            RECORDSIZE ( '
DFCLAVRS DC    CL5'NNNNN'
         DC    CL1' '
DFCLMXRS DC    CL5'NNNNN'
         DC    CL34' ) '
         DC    CL10'-'
*------------------------------------------------------* L I N E   1 9
DFCLREPL DC    CL70'            REPLICATE '
         DC    CL10'-'
*
REPLLINE EQU   (DFCLREPL-BOLCTBL)/80
*------------------------------------------------------* L I N E   2 0
DFCLRUC  DC    CL70'            REUSE '
         DC    CL10'-'
*
RUSELINE EQU   (DFCLRUC-BOLCTBL)/80
*------------------------------------------------------* L I N E   2 1
DFCLSOC  DS    0CL80
         DC    CL27'            SHAREOPTIONS ( '
DFCLSHRO DC    CL3'N,N'
         DC    CL40' ) '
         DC    CL10'-'
*------------------------------------------------------* L I N E   2 2
DFCLSNC  DC    CL70'            SPANNED '
         DC    CL10'-'
*
SPANLINE EQU   (DFCLSNC-BOLCTBL)/80
*------------------------------------------------------* L I N E   2 3
DFCLSDC  DC    CL70'            SPEED '
         DC    CL10'-'
*
SPEDLINE EQU   (DFCLSDC-BOLCTBL)/80
*------------------------------------------------------* L I N E   2 4
DFCLTOC  DS    0CL80
         DC    CL17'            TO ( '
DFCLEDAT DC    CL5'NNNNN'
         DC    CL48' ) '
         DC    CL10'-'
*
EDATLINE EQU   (DFCLTOC-BOLCTBL)/80
*------------------------------------------------------* L I N E   2 5
DFCLTKC  DS    0CL80
         DC    CL21'            TRACKS ( '
DFCLPTRK DC    CL5'NNNNN'
         DC    CL1' '
DFCLSTRK DC    CL5'NNNNN'
         DC    CL38' ) '
         DC    CL10'-'
*
CTRKLINE EQU   (DFCLTKC-BOLCTBL)/80
*------------------------------------------------------* L I N E   2 6
DFCLUQC  DC    CL70'            UNIQUE '
         DC    CL10'-'
*
UNIQLINE EQU   (DFCLUQC-BOLCTBL)/80
*------------------------------------------------------* L I N E   2 7
DFCLVLC  DS    0CL80
         DC    CL22'            VOLUMES ( '
DFCLVOL  DC    CL48'XXXXXX'
         DC    CL10'-'
*
CVOLLINE EQU   (DFCLVLC-BOLCTBL)/80
*------------------------------------------------------* L I N E   2 8
DFCLWCC  DC    CL70'            WRITECHECK '
         DC    CL10'-'
*
WTCKLINE EQU   (DFCLWCC-BOLCTBL)/80
*------------------------------------------------------* L I N E   2 9
DFCLRPC  DC    CL70'            ) '
         DC    CL10'-'
*------------------------------------------------------* L I N E   3 0
DFDACMND DC    CL70'        DATA '
         DC    CL10'-'
*------------------------------------------------------* L I N E   3 1
DFDANMC  DS    0CL80
         DC    CL19'          ( NAME ( '
DFDANAME DC    CL46'XXXXXXXX.XXXXXXXX.XXXXXXXX.XXXXXXXX.XXXXXXXX'
         DC    CL5' '
         DC    CL10'-'
*------------------------------------------------------* L I N E   3 2
DFDACIC  DS    0CL80
         DC    CL34'            CONTROLINTERVALSIZE ( '
DFDACISZ DC    CL5'NNNNN'
         DC    CL31' ) '
         DC    CL10'-'
*
DCISLINE EQU   (DFDACIC-BOLCTBL)/80
*------------------------------------------------------* L I N E   3 3
DFDACYC  DS    0CL80
         DC    CL24'            CYLINDERS ( '
DFDAPCYL DC    CL3'NNN'
         DC    CL1' '
DFDASCYL DC    CL3'NNN'
         DC    CL39' ) '
         DC    CL10'-'
*
DCYLLINE EQU   (DFDACYC-BOLCTBL)/80
*------------------------------------------------------* L I N E   3 4
DFDATKC  DS    0CL80
         DC    CL21'            TRACKS ( '
DFDAPTRK DC    CL5'NNNNN'
         DC    CL1' '
DFDASTRK DC    CL5'NNNNN'
         DC    CL38' ) '
         DC    CL10'-'
*
DTRKLINE EQU   (DFDATKC-BOLCTBL)/80
*------------------------------------------------------* L I N E   3 5
DFDAVLC  DS    0CL80
         DC    CL22'            VOLUMES ( '
DFDAVOL  DC    CL48'XXXXXX'
         DC    CL10'-'
*
DVOLLINE EQU   (DFDAVLC-BOLCTBL)/80
*------------------------------------------------------* L I N E   3 6
DFDARPC  DC    CL70'            ) '
         DC    CL10'-'
*------------------------------------------------------* L I N E   3 7
DFIXCMND DC    CL70'        INDEX '
         DC    CL10'-'
*
INDXLINE EQU   (DFIXCMND-BOLCTBL)/80
*------------------------------------------------------* L I N E   3 8
DFIXNMC  DS    0CL80
         DC    CL19'          ( NAME ( '
DFIXNAME DC    CL46'XXXXXXXX.XXXXXXXX.XXXXXXXX.XXXXXXXX.XXXXXXXX'
         DC    CL5' '
         DC    CL10'-'
*
IXNMLINE EQU   (DFIXNMC-BOLCTBL)/80
*------------------------------------------------------* L I N E   3 9
DFIXCIC  DS    0CL80
         DC    CL34'            CONTROLINTERVALSIZE ( '
DFIXCISZ DC    CL5'NNNNN'
         DC    CL31' ) '
         DC    CL10'-'
*
ICISLINE EQU   (DFIXCIC-BOLCTBL)/80
*------------------------------------------------------* L I N E   4 0
DFIXCYC  DS    0CL80
         DC    CL24'            CYLINDERS ( '
DFIXPCYL DC    CL3'NNN'
         DC    CL1' '
DFIXSCYL DC    CL3'NNN'
         DC    CL39' ) '
         DC    CL10'-'
*
ICYLLINE EQU   (DFIXCYC-BOLCTBL)/80
*------------------------------------------------------* L I N E   4 1
DFIXTKC  DS    0CL80
         DC    CL21'            TRACKS ( '
DFIXPTRK DC    CL5'NNNNN'
         DC    CL1' '
DFIXSTRK DC    CL5'NNNNN'
         DC    CL38' ) '
         DC    CL10'-'
*
ITRKLINE EQU   (DFIXTKC-BOLCTBL)/80
*------------------------------------------------------* L I N E   4 2
DFIXVLC  DS    0CL80
         DC    CL22'            VOLUMES ( '
DFIXVOL  DC    CL48'XXXXXX'
         DC    CL10'-'
*
IVOLLINE EQU   (DFIXVLC-BOLCTBL)/80
*------------------------------------------------------* L I N E   4 3
DFIXRPC  DC    CL70'            ) '
         DC    CL10'-'
*
IXRPLINE EQU   (DFIXRPC-BOLCTBL)/80
NOILINES EQU   (IXRPLINE-INDXLINE)+1
*------------------------------------------------------* L I N E   4 4
DFCAT    DS    0CL80
         DC    CL13'   CATALOG ( '
DFCTNM   DC    CL55'XXXXXXXX.XXXXXXXX.XXXXXXXX.XXXXXXXX/PASSWORD'
         DC    CL12' '
*------------------------------------------------------* L I N E   4 5
LCCMND   DS    0CL80
         DC    CL7' LISTC '
LCPARM   DC    CL6'ENT ( '
LCNAME   DC    CL55'XXXXXXXX.XXXXXXXX.XXXXXXXX.XXXXXXXX/PASSWORD'
         DC    CL2' '
         DC    CL10'-'
*------------------------------------------------------* L I N E   4 6
LCCAT    DS    0CL80
         DC    CL13'   CATALOG ( '
LCCTNM   DC    CL55'XXXXXXXX.XXXXXXXX.XXXXXXXX.XXXXXXXX/PASSWORD'
         DC    CL2' '
         DC    CL10'-'
*------------------------------------------------------* L I N E   4 7
LCALC    DC    CL80'         ALL '
*--------------------------------------------* E N D   O F   T A B L E
EOLCTBL  DS    0F                  END OF LISTCAT CARD TABLE
NBRLINES EQU   (EOLCTBL-BOLCTBL)/80
*--------------------------------------------------------------------*
* IDCAMS CARDS FOR ALIAS OR NONVSAM DEFINES
BOPCTBL  DS    0F                  BEGINNING OF PARM CARD TABLE
*--------------------------------------------------------* P A R M   1
DFPMCMND DC    CL8' DEFINE '                          ALIAS/NVSAM/UCAT
DFPMTYPE DC    CL5'ALIAS',CL10' ( NAME ( '
DFPMNAME DC    CL44' ',CL3' ) '
         DC    CL10'-'
*--------------------------------------------------------* P A R M   2
DFALRLAT DC    CL17'        RELATE ( '                ALIAS
DFALRNAM DC    CL44' ',CL9' ) ) '
         DC    CL10'-'
*
ARELLINE EQU   (DFALRLAT-BOPCTBL)/80
*--------------------------------------------------------* P A R M   3
DFNVDEVT DC    CL15'        DEVT ( '                        NVSAM/UCAT
DFNVUNIT DC    CL8'UNITNAME',CL47' ) '
         DC    CL10'-'
*
NDVTLINE EQU   (DFNVDEVT-BOPCTBL)/80
*--------------------------------------------------------* P A R M   4
DFNVFSNO DC    CL30'        FILESEQUENCENUMBERS ( '         NVSAM
DFNVFNBR DC    CL8'0',CL32' ) '
         DC    CL10'-'
*
NFSNLINE EQU   (DFNVFSNO-BOPCTBL)/80
*--------------------------------------------------------* P A R M   5
DFNVOWNR DC    CL16'        OWNER ( '                       NVSAM
DFNVONAM DC    CL8'OWNERID ',CL46' ) '
         DC    CL10'-'
*
NOWNLINE EQU   (DFNVOWNR-BOPCTBL)/80
*--------------------------------------------------------* P A R M   6
DFNVEXDT DC    CL13'        TO ( '                          NVSAM
DFNVXYY  DC    CL2'YY'
DFNVXDDD DC    CL3'DDD',CL52' ) '
         DC    CL10'-'
*
NXDTLINE EQU   (DFNVEXDT-BOPCTBL)/80
*--------------------------------------------------------* P A R M   7
DFNVVOLS DC    CL18'        VOLUMES ( '                     NVSAM/UCAT
DFNVVSNO DC    CL8'VOLSER  ',CL44' ) ) '
         DC    CL10'-'
*
NVOLLINE EQU   (DFNVVOLS-BOPCTBL)/80
*--------------------------------------------------------* P A R M   8
DFPMCAT  DC    CL13'   CATALOG ( '                    ALIAS/NVSAM/UCAT
DFPMCTNM DC    CL44'XXXXXXXX.XXXXXXXX.XXXXXXXX.XXXXXXXX.XXXXXXXX'
         DC    CL23' ) '
*--------------------------------------------* E N D   O F   T A B L E
EOPCTBL  DS    0F                  END OF PARM CARD TABLE
NBRPLINS EQU   (EOPCTBL-BOPCTBL)/80
*--------------------------------------------------------------------*
HEADER   DC    CL1'1'
HDATE    DC    XL6'21204B202020'             YY.DDD
HTIME    DC    XL10'402021204B20204B2020'    HH.MM.SS
         DC    CL20' '
         DC    CL76'W.S.R.C.C.---SYSTEM SUPPORT UTILITIES---IDCMSGEN'
         DC    CL5'PAGE '
HPAGE    DC    CL3' '
*
UT2RDW   DS    F                   RECORD DESCRIPTOR WORD
UT2AREA  DS    CL121               SYSUT2 RECORD AREA
*
INCC     DC    CL11'0 *SYSIN* <'
INCARD   DC    CL80' '             SYSIN RECORD AREA
         DC    CL2'> '
INMSG    DC    CL28' '
*
INWORK   DC    CL80' '             SYSIN WORK AREA
*
         LTORG
*
PRTDCB   DCB   DDNAME=SYSPRINT,DSORG=PS,LRECL=121,MACRF=(PM),          X
               RECFM=FBA
*
SINDCB   DCB   DDNAME=SYSIN,DSORG=PS,LRECL=80,MACRF=(GM),RECFM=FB,     X
               EODAD=WRAPUP
*
UT1DCB   DCB   BLKSIZE=80,DDNAME=SYSUT1,DSORG=PS,LRECL=80,             X
               MACRF=(PM),RECFM=F
*
UT2DCB   DCB   DDNAME=SYSUT2,DSORG=PS,LRECL=125,MACRF=(GM),            X
               RECFM=VBA,EODAD=EOUT2
*
UT3DCB   DCB   DDNAME=SYSUT3,DSORG=PS,LRECL=80,MACRF=(PM),RECFM=FB,    X
               EXLST=DCBFIX
*
         END
