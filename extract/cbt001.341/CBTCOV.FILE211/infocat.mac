*PROCESS GN,SEQ(73,77),A,OF;
 INFOCAT: PROC REORDER OPTIONS(MAIN);
-/*---------------------------------------------------------------------
   THIS PROGRAM READS THE OUTPUT OF IDCAMS "LISTCAT ALL" AND PRODUCES
   INPUT FOR INFO/MVS BLGOZB PROGRAM.  BLGOZC MAY BE USED TO CREATE
   AN INFO/MVS-SEARCHABLE DATA BASE.
 ---------------------------------------------------------------------*/
         DCL INREC CHAR(255) VARYING STATIC,
             CARD  CHAR(80)  STATIC     INIT((80)' '),
             SYSIN  FILE RECORD SEQUENTIAL INPUT,
             SYSUT1 FILE RECORD SEQUENTIAL INPUT,
             SYSUT2 FILE RECORD SEQUENTIAL OUTPUT
                    ENV(VB RECSIZE(255) BLKSIZE(3120) TOTAL),
             1 OUT1 STATIC,     /* HEADER LINE */
               2 SEQ#1   PIC '99999999' INIT(0),
               2 ID      CHAR(2)        INIT('H '),
               2 ENTRYL  CHAR(1)        INIT('U'),
               2 ENTRYN  PIC '999999'   INIT(0),
               2 FIL102  CHAR(16)       INIT(' S=VSAM C=GX6 L='),
               2 NPIC    PIC '9999'     INIT(0),
             1 OUT2 STATIC,     /* TITLE LINE 1 */
               2 SEQ#2   PIC '99999999' INIT(0),
               2 ID      CHAR(2)        INIT('T '),
               2 TIMEX   CHAR(15)       INIT((15)' '),
               2 DATET   CHAR(09)       INIT((09)' '),
               2 FIL201  CHAR(09)       INIT('CATALOG: '),
               2 CATNAME CHAR(37)       INIT((37)' '),
             1 OUT3 STATIC,     /* TITLE LINE 2 */
               2 SEQ#3   PIC '99999999' INIT(0),
               2 ID      CHAR(2)        INIT('T '),
               2 FIL301  CHAR(7)        INIT('ENTRY: '),
               2 ENTRYT  CHAR(11)       INIT((11)' '),
               2 FIL302  CHAR(1)        INIT(' '),
               2 ENTRY   CHAR(43)       INIT((43)' '),
             1 OUT4 STATIC,     /* KEYWORD LINE */
               2 SEQ#4   PIC '99999999' INIT(0),
               2 ID      CHAR(2)        INIT('K '),
               2 TEXT4   CHAR(70)       INIT((70)' '),
             1 OUT5 STATIC,     /* BLANK LINE BETWEEN KEYWORD / TEXT */
               2 SEQ#5   PIC '99999999' INIT(0),
               2 TEXT5   CHAR(1)        INIT(' '),
             1 OUT6 STATIC,     /* TEXT LINE */
               2 SEQ#6   PIC '99999999' INIT(0),
               2 TEXT6   CHAR(72)       INIT((72)' '),
             1 OUT7 STATIC,     /* END LINE */
               2 SEQ#7   PIC '99999999' INIT(0),
               2 ID      CHAR(4)        INIT('$EOM'),
             G3REC CHAR(80) VARYING STATIC INIT(' '),
             (EOF1,EOF2) CHAR(1) STATIC INIT('N'),
             KEY(1024)  CHAR(12) VARYING STATIC,
             LINE(1024) CHAR(72) VARYING STATIC,
             (SEQ#,ENT#,NK,P,I,NT,LX,#IN)
             FIXED BIN(15) STATIC INIT(0);
         ON ENDFILE(SYSUT1) EOF1 = 'Y';
         ON ENDFILE(SYSIN)  EOF2 = 'Y';
         ON UNDEFINEDFILE(SYSIN)  EOF2 = 'Y';
0/*      CREATE DATA BASE TITLE ENTRY */
0        SEQ# = 1;
         G3REC = '00000001H G000003 ';
         WRITE FILE(SYSUT2) FROM(G3REC);
         SEQ# = 2;
         G3REC = '00000002T DATA BASE TITLE ENTRY ';
         WRITE FILE(SYSUT2) FROM(G3REC);
         READ FILE(SYSIN) INTO(CARD);
         DO WHILE (EOF2 = 'N');
           SEQ# = SEQ# + 1;
           SEQ#6 = SEQ#;
           SUBSTR(TEXT6,2,71) = SUBSTR(CARD,1,71);
           WRITE FILE(SYSUT2) FROM(OUT6);
           READ FILE(SYSIN) INTO(CARD);
           END;
         SEQ# = SEQ# + 1;
         SEQ#7 = SEQ#;
         WRITE FILE(SYSUT2) FROM(OUT7);
0/*      READ FIRST RECORD */
0        READ FILE(SYSUT1) INTO(INREC);
         #IN = 1;
0/*      CREATE FIRST ENTRY */
0        CALL KEYWORD('TITLE');
         CALL ADD('THIS FILE (U) IS THE OUTPUT FROM IDCAMS "LISTCAT ALL"
 .');
         CALL WRITE;
0/*      LOOP WHILE READING INPUT */
0        DO WHILE (EOF1 = 'N');
0/*        PAGE HEADING */
0          IF SUBSTR(INREC,1,9) = '1IDCAMS  ' THEN DO;
             IF TIMEX = ' ' THEN DO;
               TIMEX = SUBSTR(INREC,68,15);
               DATET = SUBSTR(INREC,90,09);
               END;
             GO TO READ;
             END;
0/*        PAGE SUB-HEADING */
0          IF SUBSTR(INREC,1,1) = '-' THEN
           IF SUBSTR(INREC,31,24) = 'LISTING FROM CATALOG -- ' THEN DO;
             IF SUBSTR(INREC,55) ^= CATNAME THEN DO;
               CALL WRITE;
               CATNAME = SUBSTR(INREC,55);
               END;
             GO TO READ;
             END;
0/*        NEW ENTRY */
0          IF SUBSTR(INREC,1,7)  = '0ALIAS '
            × SUBSTR(INREC,1,9)  = '0CLUSTER '
            × SUBSTR(INREC,1,9)  = '0NONVSAM '
            × SUBSTR(INREC,1,11) = '0PAGESPACE '
            × SUBSTR(INREC,1,13) = '0USERCATALOG '
            × SUBSTR(INREC,1,8)  = '0VOLUME ' THEN DO;
             CALL WRITE;
             ENTRYT = SUBSTR(INREC,2,INDEX(INREC,' ')-2);
             CALL KEYWORD(SUBSTR(INREC,2,INDEX(INREC,' ')-2));
             ENTRY = SUBSTR(INREC,18);
             CALL KEYWORD(SUBSTR(INREC,18));
             END;
0          IF SUBSTR(INREC,1,46) =
           '0         THE NUMBER OF ENTRIES PROCESSED WAS:' THEN DO;
             CALL WRITE;
             ENTRYT  = 'STATISTICS';
             ENTRY   = 'ENTRY';
             CALL KEYWORD('STATISTICS');
             END;
0          IF SUBSTR(INREC,1,17) = '0   DATA ------- '
            × SUBSTR(INREC,1,17) = '0   INDEX ------ '
            × SUBSTR(INREC,1,17) = '        ALIAS----'
            × SUBSTR(INREC,1,17) = '        NONVSAM--' THEN
           CALL KEYWORD(SUBSTR(INREC,18));
0          IF SUBSTR(INREC,1,17) = '          DSN----' THEN
           CALL KEYWORD(SUBSTR(INREC,18,
           INDEX(SUBSTR(INREC,18,45),' ')-1));
0          IF SUBSTR(INREC,1,26) = '        VOLSER------------' THEN
           CALL KEYWORD(SUBSTR(INREC,27,
           INDEX(SUBSTR(INREC,27,7),' ')-1));
0          IF SUBSTR(INREC,1,26) = '        OWNER-IDENT-------' THEN
           IF SUBSTR(INREC,27,6) ^= '(NULL)' THEN
           CALL KEYWORD(SUBSTR(INREC,27,
           INDEX(SUBSTR(INREC,27,9),' ')-1));
0          I = LENGTH(INREC);
           DO WHILE (SUBSTR(INREC,I,1) = ' ');
             I = I - 1;
             END;
           IF I > 71 THEN DO;
             CALL ADD(SUBSTR(INREC,1,71));
             CALL ADD(SUBSTR(INREC,72));
             END;
           ELSE DO;
             CALL ADD(INREC);
             END;
 READ:     READ FILE(SYSUT1) INTO(INREC);
           #IN = #IN + 1;
           END;
         CALL WRITE;
         RETURN;
1/*      ADD A LINE OF TEXT TO THE CURRENT ENTRY */
0ADD:    PROC(X);
         DCL X CHAR(*);
         IF NT < 1024 THEN DO;
           NT = NT + 1;
           LINE(NT) = ' '××X;
           END;
         ELSE DO;
           PUT SKIP(2) EDIT ('MAXIMUM ENTRY LINES EXECEEDED.  ',
           'INPUT RECORD NUMBER ',#IN,'.',
           'LINE IGNORED: "',X,'".')(2 A,P 'ZZ,ZZZ,ZZ9',A,SKIP,3 A);
           END;
         RETURN;
         END ADD;
1/*      WRITE OUT THE CURRENT ENTRY */
0WRITE:  PROC;
         IF NK = 0 THEN RETURN;
         ENT# = ENT# + 1;
         ENTRYN = ENT#;
         SEQ# = SEQ# + 1;
         SEQ#1 = SEQ#;
         NPIC = NT + 5;
         WRITE FILE(SYSUT2) FROM(OUT1);
         SEQ# = SEQ# + 1;
         SEQ#2 = SEQ#;
         WRITE FILE(SYSUT2) FROM(OUT2);
         SEQ# = SEQ# + 1;
         SEQ#3 = SEQ#;
         WRITE FILE(SYSUT2) FROM(OUT3);
         P = 1;
         TEXT4 = (70)' ';
         DO I = 1 TO NK;
           IF P + LENGTH(KEY(I)) > 70 THEN
             DO;
             SEQ# = SEQ# + 1;
             SEQ#4 = SEQ#;
             WRITE FILE(SYSUT2) FROM(OUT4);
             P = 1;
             TEXT4 = (70)' ';
             END;
           SUBSTR(TEXT4,P,LENGTH(KEY(I))) = KEY(I);
           P = P + LENGTH(KEY(I)) + 1;
           END;
         SEQ# = SEQ# + 1;
         SEQ#4 = SEQ#;
         WRITE FILE(SYSUT2) FROM(OUT4);
         SEQ# = SEQ# + 1;
         SEQ#5 = SEQ#;
         WRITE FILE(SYSUT2) FROM(OUT5);
         DO I = 1 TO NT;
           SEQ# = SEQ# + 1;
           SEQ#6 = SEQ#;
           TEXT6 = LINE(I);
           WRITE FILE(SYSUT2) FROM(OUT6);
           END;
         SEQ# = SEQ# + 1;
         SEQ#7 = SEQ#;
         WRITE FILE(SYSUT2) FROM(OUT7);
         NK,NT = 0;
         RETURN;
         END;
1/*      ADD A KEYWORD TO THE CURRENT ENTRY */
0KEYWORD: PROC(X);
         DCL X CHAR(*);
         IF VERIFY(X,' ') = 0 × LENGTH(X) < 2 THEN RETURN;
         IF NK = 0 THEN DO;
           NK = 1;
           KEY(1) = X;
           RETURN;
           END;
         ELSE IF NK < 1024 THEN DO;
           DO I = 1 TO NK;
             IF X = KEY(I) THEN RETURN;
             END;
           NK = NK + 1;
           KEY(NK) = X;
           END;
         ELSE DO;
           PUT SKIP(2) EDIT ('MAXIMUM KEYWORDS EXECEEDED.  ',
           'INPUT RECORD NUMBER ',#IN,'.',
           'KEYWORD IGNORED: "',X,'".')(2 A,P 'ZZ,ZZZ,ZZ9',A,SKIP,3 A);
           END;
         RETURN;
         END KEYWORD;
         END;
