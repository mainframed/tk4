         TITLE ' T S S O    I N I T I A L I Z A T I O N   (PART2)'
***********************************************************************
TSSOINI2 CSECT
***********************************************************************
* THIS MODULE IS THE SECOND PART OF TSSO INITIALIZATION. IT'S PURPOSE *
* IS TO PROCESS THE TSSO PARMLIB PARAMETERS. THESE PARAMETERS WILL    *
* COME FROM THE SYS1.PARMLIB DATASET, WHICH IS DYNAMICALLY ALLOCATED  *
* USING THE TSO ALLOCATE COMMAND. THIS MODULE WILL PROCESS THESE      *
* PARAMETERS, AND STORE THE RESULTS INTO THE COMMON TSSO DATA AREA    *
*                                                                     *
* LAST MESSAGE NUMBER IN THE TSSI SEQUENCE IS TSSI019X                *
***********************************************************************
*                                                                     *
* MODIFIED                                                            *
*    14DEC92  GLA  ADD MPF SUPPRESSION CONTROL STATMENT TO SUPPORT    *
*                  ADDITION OF MPF SUPPRESSED MESSAGE ELIMINATION     *
*                  FROM DAVE CARTWRIGHT AT SPRECHER ENERGIE AG        *
*                                                                     *
***********************************************************************
         STM    R14,R12,12(R13)    SAVE CALLERS REGSITERS
         LR     R12,R15            LOAD ENTRY POINT OF TSSO
         USING  TSSOINI2,R12       GET ADDRESSIBILITY
         B     EYE1
         COPY  EYECATCH
EYE1     DS    0H
         LR     R8,R1              ADDRESS THE TSSO DATA AREA.
         GETMAIN R,LV=72           WE NEED STORAGE FOR THE SAVE AREA
         ST     R13,4(R1)          STORE ADDRESS OF CALLERS SAVE AREA
*                                  SAVE AREA
         ST     R1,8(R13)          REMEMBER WHERE THIS CORE IS
         LR     R13,R1             KEEP A COPY IN R13
*
         L      R9,0(R8)
         USING  DATD,R9
***********************************************************************
* INITIALIZE TSSOINI2 DSECT VARIABLES
***********************************************************************
         GETMAIN R,LV=4096
         LR    R11,R1
         USING TSSOVARS,R11
         MVC   LINK1D(LINK1CE-LINK1C),LINK1C
         XC    RETCODE(2),RETCODE         ASSUME OK UNTIL PROVEN WRONG.
***********************************************************************
* ESTABLISH DEFAULTS FOR PARMLIB PARAMETERS IN CASE ONE IS LEFT OUT
***********************************************************************
         MVC   TMPNAME(8),=CL8'IKJEFT01'  DEFAULT TMP NAME
         MVI   TSSOSRC,C'#'               DEFAULT SYSTEM RECOGNITION
*                                         CHARACTER
         MVC   TSSOTABN(8),=CL8'NONE'     DEFAULT NAME FOR TSSO TABLE
         MVC   TSSORACF+1(8),=CL8'NONE'   ESTABLISH DEFAULT
         MVC   INISEC(4),=CL4'MINI'      DEAFULT SECURITY IS MINIMAL
         MVC   SECSYS(4),=CL4'RACF'      AND THE PACKAGE IS RACF.
         MVC   MAXCMDS(4),=F'15'           DEFAULT MAXIMUM NUMBER OF
*                                         SIMULTANEOUS COMMANDS
*
         MVC   ININUMSS(4),=F'1'         DEFAULT ONE SUBSYSTEM CONSOLE
*
         MVC   TMEOTVL(4),=F'15'          DEFAULT 15 MINUTES...
*
         MVI   TSSOSWAP,C'Y'              DEFAULT IS NON-SWAP
         MVI   STARFORC,C'N'              DEFAULT IS NO FORCE.
         MVC   TSSOPROM,C'N'              DEFAULT NOPROMPT
         MVC   MAXWTO(4),=F'100'          DEFAULT MAXWTO VALUE = 100
         MVI   TSSOMPF,C'N'         DEFAULT IS TO IGNORE MPF    14DEC92
*
         LA    R7,SSIARRAY                GET INIT ENTRY FOR SSI ARRAY
         MVC   0(2,R7),=H'9'
         MVC   8(8,R7),=CL8'TSSOSS09'     PREINITIALIZE THE TWO DEFAULT
         LA    R7,36(R7)                  ENTRIES FOR SUBSYSTEM
         MVC   0(2,R7),=H'10'             CODES 9 AND 10.
         MVC   8(8,R7),=CL8'TSSOSS10'
         MVC   SSICOUNT(2),=H'2'          MOVE IN DEFAULT SSI COUNT
***********************************************************************
* END PARMLIB DEFAULT SETTING
***********************************************************************
         L     R8,PARMPTR         GET ADDRESS OF PARM FIELD IN R8
         L     R8,0(R8)
         LH    R7,0(R8)           GET LENGTHS OF PARMS
         LTR   R7,R7              WAS THERE ONE ?
         BZ    NOPARM
         LA    R8,2(R8)           POINT TO MEMBER NAME
         BCTR  R7,0               FOR EX
***********************************************************************
* TSSO 4.3 - CHECK FOR SPECIAL CHARACTERS PROCEEDING THE MEMBER NAME  *
* IF "*" IS PRESENT, ASSUME PROMPTING. IF '/' IS PRESENT, ASSUME FORCE*
* = YES ON TSSO START COMMAND. THIS MAKES LIFE EASIER...              *
***********************************************************************
         CLI   0(R8),C'*'         IS PROMPTING DESIRED ?
         BNE   CHKSPC2            NO, MOVE ON
*
         OI    PARMFLAG,X'40'     INDICATE PROMPTING REQUIRED.
         LA    R8,1(R8)
         BCTR  R7,0
*
CHKSPC2  DS    0H
         CLI   0(R8),C'/'         IS FORCE REQUIRED ?
         BNE   CHKSPC3            NO, MOVE ON
         MVI   STARFORC,C'Y'      SO INIDICATED.
*
         LA    R8,1(R8)
         BCTR  R7,0
*
CHKSPC3  DS    0H
         LTR   R7,R7              ANY PARAMETERS LEFT ?
         BNH   NOPARM
         EX    R7,MOVEPARM        AND MOVE THE MEMBER NAME
         B     AR1
MOVEPARM MVC   PARMMEM(0),0(R8)   ** EXECUTED **
AR1      DS    0H
         B     ALLOPARM           GOT THE MEMBER- GO ALLOCATE PARMLIB
*
*
NOPARM   DS    0H
         MVC   PARMMEM(8),=CL8'TSSOPARM'
ALLOPARM DS    0H
         MVC   TSSOCMDL(2),=H'50'
         MVC   TSSOCMD(50),ALPRMLIB   MOVE IN TSO COMMAND TO ALLOC PARM
         OI    TSSOPFLG,X'80'         IGNORE AUTHORITY CHECKING
         LINK  EP=TSSODOCM,PARAM=((R9)),ERRET=CMDFAIL,SF=(E,LINK1D),   X
               MF=(E,LINKPARM)
         NI    TSSOPFLG,255-X'80'     DEFAULT - AUTH CHECKING.
GOTMEM   DS    0H
         OC    PARMMEM(8),=CL8' '        MAKE UPPER CASE
***********************************************************************
*  READ INPUT FROM SYS1.PARMLIB. THE TSSO MEMBER NAME FROM PARMLIB
*  WILL BE PASSED AS A PARAMETER, ALLOWING MULTIPLE TSSO PARAMETER
*  MEMBERS. THE DEFAULT MEMBER NAME WILL BE "TSSOPARM". IF THE START
*  COMMAND IS ISSUED LIKE  "S TSSO,PARM='NEWPARMS' THEN TSSO WILL
*  GO OUT AND USE SYS1.PARMLIB(NEWPARMS) FOR TSSO INPUT.
***********************************************************************
         CLC   PARMMEM(8),=CL8'PROMPT'   WAS PROMPTING REQUESTED?
         BNE   PROMPTNO                  NO, NO NEED
         OI    PARMFLAG,X'40'            INDICATE PROMPTING DESIRED
         MVC   PARMMEM(8),=CL8' '        BLANK OUT PARMMEM
         LA    R7,WTORECB
         XC    WTORECB(4),WTORECB
         LA    R8,PARMMEM
         WTOR  ,(R8),8,(R7),MF=(E,WTOR25D)   ** PROMPT **
         WAIT  ECB=WTORECB
         OC    PARMMEM(8),=CL8' '        MAKE UPPER CASE
PROMPTNO DS    0H
         LA    R7,PARMDCBD        GET PARMLIB DCB
         OPEN  ((R7),INPUT),MF=(E,OPEND)   OPEN IT !!!
         USING IHADCB,R7
         TM    DCBOFLGS,DCBOFOPN   OPEN SUCCESSFULL ?
         BNO   NPARMDCB            NOPE, MUST NOT BE THERE. PRETEND
*                                  NO PARAMETERS.
         CLC   DCBLRECL(2),=H'80'  LRECL IS 80 BYTES ?
         BNE   NPARM3              NOPE, SORRY...
*
         LH    R0,DCBBLKSI         GET BLOCK SIZE OF PARMLIB
         ST    R0,PARMBLK          REMEMBER BLOCK SIZE
*
         GETMAIN R,LV=(0)          GETMAIN 1 BUFFER
         ST    R1,PARMBUF          REMEMBER WHERE IT IS
         OI    PARMFLAG,X'80'      INDICATE STORAGE OBTAINED
*
         FIND  (R7),PARMMEM,D     FIND MEMBER
         LTR   R15,R15             IS IT THERE ?
         BNZ   NPARM2              NOPE, ASSUME ALL DEFAULTS
         XR    R3,R3               R3 WILL BE USED FOR NUMBER OF BYTES
*                                  PROCESSED IN THE BLOCK
READLOOP DS    0H
         L     R8,PARMBUF
         LA    R7,PARMDCBD
         READ  DECB,SF,(R7),(R8),MF=E          PUT IT INTO BUFFER
         CHECK DECB
         L     R1,DECB+16          ADDRESS OF IOB
         LH    R1,14(R1)           RESIDUAL I/O COUNT
         LH    R0,DCBBLKSI         GET DCB BLOCKSIZE
         SR    R0,R1               GET NUMBER OF CHARS IN BUFFER
         STH   R0,PARMREAD         ACTUAL NUMBER OF BYTES IN BUFFER
***********************************************************************
* R8 WILL POINT TO THE CURRENT RECORD BEING PROCESSED.
*    OR THE INPUT BUFFER FOR THE PROMPTING WTOR
***********************************************************************
PARMLOOP DS    0H
***********************************************************************
* WE WILL CALL THE NOW INFAMOUS TSSO PARSE ROUTINE TO SCAN THE
* PARMLIB INPUT
***********************************************************************
PRSCHECK DS    0H
         ST    R8,PARS1            PARM 1 IS THE ADDRESS OF STRING
*
         MVC   PARS2(4),=F'80'     PARM 2 GETS THE LENGTH OF THE STRING
*
         MVI   PARARRAY,X'40'
         MVC   PARARRAY+1(49),PARARRAY
         LA    R6,PARARRAY
         ST    R6,PARS3
         MVC   PARARRAY(2),=H'3'   MAXIMUM OF THREE TOKENS...
*
         LA    R6,PARSSEP          GET ADDRESS OF SEPERATOR CHARACTERS
         ST    R6,PARS4
         MVC   PARSSEP(4),=CL4',='
*
         LA    R1,PARSPARM         LOAD UP PARM REGISTER
         CALL  TSSOPARS
***********************************************************************
* THE ARRAY SHOULD NOW BE FILLED WITH ALL KINDS OF GOOD STUFF.
***********************************************************************
         LA    R5,PARARRAY+2      POINT TO FIRST TOKEN
***********************************************************************
* THIS SECTION OF CODE MAY BE ENTERED OUT OF EITHER THE PARMLIB
* INPUT ROUTINE, OR THE PROMPTING ROUTINE. THE ENTRY FROM THE PROMPT
* ROUTINE IS NON OBVIOUS (READ  KLUDGE) SO BEWARE.
***********************************************************************
         CLC   0(8,R5),=CL8'SRC'      WAS IT SRC?
         BE    PRSSRC                 YUP, GO HANDLE IT.
*
         CLC   0(8,R5),=CL8'TABLE  '  WAS IT TABLE ?
         BE    PRSTABLE               YUP, GO HANDLE IT.
*
         CLC   0(8,R5),=CL8'MAXCMDS'  WAS IT MAXCMD ?
         BE    PRSMAXCM               YUP, GO HANDLE IT.
*
         CLC   0(8,R5),=CL8'TIMEOUT'  WAS IT TIMEOUT?
         BE    PRSTMEOT               YUP, GO HANDLE IT.
*
         CLC   0(8,R5),=CL8'NUMCONS'  WAS IT NUMBER OF SS CONSOLES ?
         BE    PRSNUMSS               YUP, GO HANDLE IT.
*
         CLC   0(8,R5),=CL8'NONSWAP'  WAS IT NONSWAP ?
         BE    PRSNSWAP               YUP, GO HANDLE IT.
*
         CLC   0(8,R5),=CL8'PROMPT'   WAS IT PROMPT ?
         BE    PRSPROM                YUP, GO HANDLE IT.
*
         CLC   0(8,R5),=CL8'END    '  WAS IT END     ?
         BE    PRSEND                 YUP, GO HANDLE IT.
*
         CLC   0(8,R5),=CL8'RACFID '  WAS IT REQUEST FOR RACF ID?
         BE    PRSRACF                YUP, GO HANDLE IT.
*
         CLC   0(8,R5),=CL8'MAXWTO '  WAS IT REQUEST FOR MAXIMUM WTOS ?
         BE    PRSMAXWT               YUP, GO HANDLE IT.
*
         CLC   0(8,R5),=CL8'SUBSYS '  WAS IT REQUEST FOR A SUBSYSTEM
*                                     INTERFACE REQUEST ROUTINE ?
         BE    PRSSSI                 YUP, GO HANDLE IT.
*
         CLC   0(8,R5),=CL8'SECSYS'   DEFINING A SECURITY SYSTEM ?
         BE    PRSSECS                OK, NO PROBLEM.
*
         CLC   0(8,R5),=CL8'SECLEVEL' DEFINING A SECURITY LEVEL ?
         BE    PRSSECL                LETS SEE WHAT'S WHAT.
*                                                               14DEC92
         CLC   0(8,R5),=CL8'MPFSUPP'  REQUESTING TO IGNORE MPF  14DEC92
*                                     SUPPRESSED MESSAGES       14DEC92
         BE    PRSMPF                                           14DEC92
*
         CLI   0(R5),C'*'             WAS IT A COMMENT ?
         BE    PARMNEXT
         B     PRSINV
PRSTMPNM DS    0H
* PROCESS ALTERNATE TMP REQUEST
         CLI   16(R5),X'40'           ANYTHING THERE ?
         BE    PRSNEQU
         MVC   TMPNAME(8),16(R5)
         B     PARMNEXT
PRSSRC   DS    0H
***********************************************************************
* PROCESS THE  SRC  PARAMETER STATEMENT                               *
***********************************************************************
         CLI   16(R5),X'40'           ANYTHING THERE ?
         BE    PRSNEQU
         MVC   TSSOSRC(1),16(R5)
         B     PARMNEXT
*
PRSTABLE DS    0H
***********************************************************************
* PROCESS THE  TABLE PARAMETER STATEMENT                              *
***********************************************************************
         CLI   16(R5),X'40'           ANYTHING THERE ?
         BE    PRSNEQU
         MVC   TSSOTABN(8),16(R5)
         B     PARMNEXT
*
PRSTMEOT DS    0H
***********************************************************************
* PROCESS THE  TIMEOUT PARAMETER STATEMENT.                           *
***********************************************************************
* THIS PARAMETER DEFINES HOW LONG TSSO SHOULD WAIT FOR A COMMAND
* BEFORE TIMING OUT A CONSOLE (LOGGING IT OFF). THE VALUE SPECIFIED IS
* IN MINUTES, BUT IT IS INTERNALLY CONVERTED TO SECONDS.
***********************************************************************
         LA    R0,1                  ASSUME 1 DIGIT.
         CLI   17(R5),X'40'          IF BLANK, WE HAVE ONLY ONE DIGIT
         BE    TMONEDIG              INDEED, TWO DIGITS
         CLI   18(R5),X'40'          ANYTHING IN THE NEXT COLUMN ?
         BNE   TMEOTINV              YUP - THIS CANT BE RIGHT.
         LA    R0,2                  OTHERWISE, TWO DIGITS
TMONEDIG DS    0H                    ALL THIS, JUST TO GET THE LENGTH
*                                    INTO R0
         LA    R1,16(R5)             POINTER TO PARSE STRING
         LA    R10,DATD              POINT R10 TO WORKAREA.
         CALL  JCECVTDB              CONVERT THE SUCKER.
         BNZ   TMEOTINV              PROBLEM...
         LTR   R1,R1                 ANY RESULTS ?
         BZ    TMEOTINV              YUP, APPARAENTLY OK.
         B     TMEOTOK
TMEOTINV DS    0H
         WTO   'TSSI018E INVALID TIMEOUT PARAMETER- DEFAULT (15) USED'
         B     PARMNEXT
TMEOTOK  DS    0H
         ST    R1,TMEOTVL            STORE RESULTS..
         B     PARMNEXT
*
*
PRSNUMSS DS    0H
***********************************************************************
* PROCESS THE  NUMBER OF SUBSYSTEM CONSOLES PARAMETER.                *
***********************************************************************
* THIS PARAMETER DEFINES HOW MANY SUBSYSTEM CONSOLES TSSO SHOULD
* ALLOCATE.
***********************************************************************
         LA    R0,1                  ASSUME 1 DIGIT.
         CLI   17(R5),X'40'          IF BLANK, WE HAVE ONLY ONE DIGIT
         BE    SSONEDIG              INDEED, TWO DIGITS
         CLI   18(R5),X'40'          ANYTHING IN THE NEXT COLUMN ?
         BNE   SSCONINV              YUP - THIS CANT BE RIGHT.
         LA    R0,2                  OTHERWISE, TWO DIGITS
SSONEDIG DS    0H                    ALL THIS, JUST TO GET THE LENGTH
*                                    INTO R0
         LA    R1,16(R5)             POINTER TO PARSE STRING
         LA    R10,DATD              POINT R10 TO WORKAREA.
         CALL  JCECVTDB              CONVERT THE SUCKER.
         BNZ   SSCONINV              PROBLEM...
         LTR   R1,R1                 ANY RESULTS ?
         BZ    SSCONINV              YUP, APPARAENTLY OK.
         B     SSCONOK
SSCONINV DS    0H
         WTO   'TSSI019E INVALID NUMCONS PARAMETER SPECIFIED (1) USED'
         B     PARMNEXT
SSCONOK  DS    0H
         ST    R1,ININUMSS           STORE RESULTS..
***********************************************************************
* CHECK IF A DEDICATED SUBSYSTEM CONSOLE IS REQUESTED...              *
***********************************************************************
         CLC   32(8,R5),=CL8'DEDICATE'   WAS DEDICATED REQUESTED ?
         BNE   SSCONNOD                  DOESNT LOOK THAT WAY.
         OI    PARMFLAG,X'10'            SET INDICATOR
SSCONNOD DS    0H
         B     PARMNEXT
*
*
PRSMAXCM DS    0H
***********************************************************************
* PROCESS THE  MAXCMD PARAMETER STATEMENT                             *
***********************************************************************
* UP TO 99 MAX COMMANDS MAY BE SPECIFIED. CHECK TO SEE IF ONE DIGIT
* OR 2 WAS SPECIFIED, THEN CALL THE CONVERT ROUTINE TO FIGURE OUT
* WHAT IS WAS.
***********************************************************************
         LA    R0,1                  ASSUME 1 DIGIT.
         CLI   17(R5),X'40'          IF BLANK, WE HAVE ONLY ONE DIGIT
         BE    CMONEDIG              INDEED, TWO DIGITS
         CLI   18(R5),X'40'          ANYTHING IN THE NEXT COLUMN ?
         BNE   MAXCMINV              YUP - THIS CANT BE RIGHT.
         LA    R0,2                  OTHERWISE, TWO DIGITS
CMONEDIG DS    0H                    ALL THIS, JUST TO GET THE LENGTH
*                                    INTO R0
         LA    R1,16(R5)             POINTER TO PARSE STRING
         LA    R10,DATD              POINT R10 TO WORKAREA.
         CALL  JCECVTDB              CONVERT THE SUCKER.
         BNZ   MAXCMINV              PROBLEM...
         LTR   R1,R1                 ANY RESULTS ?
         BZ    MAXCMINV              YUP, APPARAENTLY OK.
         B     MAXCMOK
MAXCMINV DS    0H
         WTO   'TSSI002E INVALID MAXCMDS PARAMETER- DEFAULT (15) USED'
         B     PARMNEXT
MAXCMOK  DS    0H
         ST    R1,MAXCMDS            STORE RESULTS..
         B     PARMNEXT
*
PRSMAXWT DS    0H
***********************************************************************
* THIS IS THE PARSE ROUTINE FOR THE MAXIMUM WTO PARMLIB ENTRY. THIS   *
* ROUTINE WILL DETERMINE HOW MANY DIGITS WERE SPECIFIED FOR THE MAXWTO*
* VALUE, AND CALL THE NIFTY EBCIDIC DECIMAL TO BINARY SUB TO DO THE   *
* CONVERSION. THIS VALUE IS THEN STORED AT MAXWTO. UP TO 4 DIGITS MAY *
* BE SPECIFIED.                                                       *
***********************************************************************
         XR    R1,R1                 START THE COUNT.
         LA    R2,16(R5)
WTLOOP   DS    0H
*
         CLI   0(R2),X'40'           LOOKING FOR BLANK.
         BE    WTBLANK               AHH. FOUND IT !
         LA    R1,1(R1)              INCREMENT COUNT.
         CH    R1,=H'5'              TO BIG ?
         BE    MAXWTINV              YUP, DONT ALLOW.
         LA    R2,1(R2)              TRY NEXT DIGIT.
         B     WTLOOP
*
WTBLANK  DS    0H
***********************************************************************
* NOTE, R1 HAS COUNT OF DIGITS.
***********************************************************************
         LR    R0,R1                 COPY COUNT OF DIGITS.
         LA    R1,16(R5)             POINT TO START OF STRING TO CNVT.
         LA    R10,DATD
         CALL  JCECVTDB              CONVERT THE SUCKER.
         BNZ   MAXWTINV              YUP, APPARAENTLY BAD ONES.
         LTR   R1,R1                 ANY RESULTS ?
MAXWTOK  DS    0H
         ST    R1,MAXWTO             STORE RESULTS..
         B     PARMNEXT
*
MAXWTINV DS    0H
         WTO   'TSSI003E INVALID MAXWTO PARAMETER- DEFAULT TAKEN (100)'
         B     PARMNEXT
*
*
PRSNSWAP DS    0H
***********************************************************************
* PROCESS THE  NONSWAP PARAMETER STATEMENT                            *
***********************************************************************
         CLI   16(R5),X'40'         ANYTHING THERE ?
         BE    PRSNEQU              NOPE.. SORRY.
         MVC   TSSOSWAP(1),16(R5)
         B     PARMNEXT
*
PRSPROM  DS    0H
         CLI   16(R5),C'Y'          DOES THE ANSWER START WITH "Y"?
         BNE   PRSPROME
         OI    PARMFLAG,X'40'       INDICATE PROMPTING REQUESTED
PRSPROME DS    0H
         B     PARMNEXT
*
PRSRACF  DS    0H
***********************************************************************
* PROCESS THE  RACFID  PARAMETER STATEMENT                            *
***********************************************************************
         TM    PARMFLAG,X'20'    ARE WE IN PARSE MODE ?
         BNO   RACFNPRS          NO, OK TO ACCEPT RACF PARAMETER.
         WTO   'TSSI004E RACFID PARAMETER REJECTED- NOT ACCEPTED IN PROX
               MPT MODE'
         B     PARMNEXT
RACFNPRS DS    0H
         CLI   16(R5),X'40'       ANYTHING THERE ?
         BE    PRSNEQU
         MVC   TSSORACF+1(8),16(R5)
         LA    R10,8
         LA    R1,TSSORACF+1
         XR    R5,R5
RLOOP    DS    0H                GET THE LENGTH
         CLI   0(R1),X'40'       OF THE USER ID AS
         BE    RLOOPEND          REQUIRED BY THE RACINIT MACRO
         LA    R5,1(R5)
         LA    R1,1(R1)
         BCT   R10,RLOOP
RLOOPEND DS    0H
         STC   R5,TSSORACF
         B     PARMNEXT
*
PRSSSI   DS    0H
***********************************************************************
* PROCESS THE SUBSYS PARAMETER STATEMENT. THIS STATEMENT IS NEW WITH  *
* TSSO VERSION 4.2, AND WILL CONTROL THE LOADING OF THE SUBSYSTEM     *
* INTERFACE ROUTINES. THE SYNTAX IS:                                  *
*
* SUBSYS NN = MODULE-NAME
*
* ERROR WILL NOT BE DETECTED AT THIS TIME, BUT WILL BE DETECTED       *
* WHEN LOADING THE MODULES. THIS ROUTINE WILL MEARLY FILL AN ARRAY    *
* WITH INFORMATION.
***********************************************************************
         XR    R1,R1                 START THE COUNT.
         LA    R2,16(R5)
SSILOOP  DS    0H
*
         CLI   0(R2),X'40'           LOOKING FOR BLANK.
         BE    SSIBLANK              AHH. FOUND IT !
         LA    R1,1(R1)              INCREMENT COUNT.
         CH    R1,=H'3'              TO BIG ?
         BH    SSIPRMBD              YUP, DONT ALLOW.
         LA    R2,1(R2)              TRY NEXT DIGIT.
         B     SSILOOP
*
SSIBLANK DS    0H
***********************************************************************
* NOTE, R1 HAS COUNT OF DIGITS.
***********************************************************************
         LR    R0,R1                 COPY COUNT OF DIGITS.
         LA    R1,16(R5)             POINT TO START OF STRING TO CNVT.
         LA    R10,DATD
         CALL  JCECVTDB              CONVERT THE SUCKER.
         BNZ   SSIPRMBD              YUP, APPARAENTLY BAD ONES.
         CH    R1,=H'1'              ANY RESULTS ?
         BL    SSIPRMBD
         CH    R1,=H'255'            MAX 255 FOR SUBSYSTEM
         BH    SSIPRMBD
SSIPRMOK DS    0H
* ONCE WE HAVE A VALID SUBSYS STATEMENT, WE WILL STORE IT IN THE SSI
* ARRAY, FOR LATER LOADING. WE MUST VERIFY THAT THIS ENTRY WILL NOT
* SQUASH OTHER ENTRIES.., OR IF IT DOES, USE THE LATER ENTRY
         LA    R7,SSIARRAY           START AT BEGINNING OF ARRAY
         LR    R2,R1                 COPY REGISTER CONTAINING SSICODE
         LA    R6,10                 MAX COUNT OF SSI ENTRIES.
SSIALOOP DS    0H
         CH    R2,0(R7)
         BE    ENTFOUND              THIS MEANS THAT THIS SSI CODE IS
*                                    THE SAME AS SOMETHING PREVIOUSLY
*                                    USED, THEREFORE, THIS ENTRY IN
*                                    SSIARRAY WILL BE USED
         CLC   0(2,R7),=XL2'0000'    BLANK ENTRY ?
         BE    ENTFOUND
         LA    R7,36(R7)
         BCT   R6,SSIALOOP           AT MOST 10 ENTRIES...
*
         WTO   'TSSI005S SSI ARRAY OVERFLOW- TSSO TERMINATING',DESC=(1)
         OI    PARMFLAG,X'01'        INDICATE SEVERE ERROR...
         MVC   RETCODE(2),=H'12'     MOVE IN RETURN CODE.
*
ENTFOUND DS    0H
         CLI   32(R5),C' '           ANY THIRD PARM ON THIS LINE ?
         BE    SSIPRMBD              GUESS NOT...
         CLC   0(2,R7),=XL2'0000'    IS THIS A BLANK ENTRY ?
         BNE   NOUPSSIC              NO, DONT UPDATE SSICOUNT
         LH    R6,SSICOUNT           RAISE SSICOUNT BY 1
         LA    R6,1(R6)
         STH   R6,SSICOUNT           AND PUT IT BACK
NOUPSSIC DS    0H
         STH   R2,0(R7)              STORE RESULTS..
         MVC   8(8,R7),32(R5)        AND STORE NAME OF LOAD MODULE
         B     PARMNEXT
*
SSIPRMBD DS    0H
         WTO   'TSSI006E INVALID SUBSYS CONTROL CARD - RECORD IGNORED'
         B     PARMNEXT
*
*
PRSSECS  DS    0H
***********************************************************************
* WHAT WE HAVE HERE IS AN ATTEMPT TO PROCESS THE SECSYS INITIATION    *
* STATEMENT. CURRENTLY SUPPORTED VALUES ARE RACF AND ACF2.            *
*                                                                     *
* NOTE THAT THIS PARAMETER CANNOT BE SPECIFIED IN PROMPT MODE.        *
*                                                                     *
***********************************************************************
         TM    PARMFLAG,X'20'      PROMPT MODE ACTIVE ?
         BO    SECSNPRM            YUP, LETS NOT PROCESS THE PARM.
         CLI   16(R5),X'40'        ANYTHING THERE ?
         BE    PRSNEQU
         CLC   16(8,R5),=CL8'RACF' WAS RACF SPECIFIED ?
         BE    SECSRACF            YUP - WE CAN LIVE WITH THAT.
*
         CLC   16(8,R5),=CL8'ACF2' HOW BOUT ACF2 ?
         BE    SECSACF2            YUP, WE CAN LIVE WITH THAT, IF THE
*                                  INSTALLATION CAN.
         CLC   16(8,R5),=CL8'TOPS' HOW BOUT TOP SECRET ?
         BE    SECSTOPS            YUP, WE CAN LIVE WITH THAT, IF THE
*                                  INSTALLATION CAN.
         WTO   'TSSI014A SECSYS PARAMETER REJECTED - UNSUPPORTED SECURIX
               TY SYSTEM'
         B     SECSEND
SECSRACF DS    0H
***********************************************************************
* WE COME HERE IF RACF IS SELECTED AS THE SECURITY SYSTEM.
***********************************************************************
         MVC   SECSYS(4),=CL4'RACF'
         B     SECSEND
SECSACF2 DS    0H
***********************************************************************
* WE COME HERE IF ACF2 IS SELECTED AS THE SECURITY SYSTEM.
***********************************************************************
         MVC   SECSYS(4),=CL4'ACF2'
         B     SECSEND
SECSTOPS DS    0H
***********************************************************************
* WE COME HERE IF TOP SECRET IS SELECTED AS THE SECURITY SYSTEM
***********************************************************************
         MVC   SECSYS(4),=CL4'TOPS'
         B     SECSEND
*
SECSNPRM DS    0H
         WTO   'TSSI015A SECSYS PARAMETER REJECTED - INVALID IN "PROMPTX
               " MODE'
         B     SECSEND
SECSEND  DS    0H
         B     PARMNEXT
*
*
*
PRSSECL  DS    0H
***********************************************************************
* HERE, WE WILL PROCESS THE SECLEVEL CONTROL STATEMENT. SUPPORTED     *
* VALUES ARE MINIMAL AND MAXIMAL.                                     *
*                                                                     *
* NOTE THAT THIS PARAMETER CANNOT BE SPECIFIED IN PROMPT MODE.        *
*                                                                     *
***********************************************************************
         TM    PARMFLAG,X'20'      PROMPT MODE ACTIVE ?
         BO    SECLNPRM            YUP, LETS NOT PROCESS THE PARM.
         CLI   16(R5),X'40'        ANYTHING THERE ?
         BE    PRSNEQU
         CLC   16(8,R5),=CL8'MINIMAL'  WAS MINIMAL SPECIFIED ?
         BE    SECLMINI            YUP - WE CAN LIVE WITH THAT.
*
         CLC   16(8,R5),=CL8'MAXIMAL'  WAS MAXIMIAL SPECIFIED ?
         BE    SECLMAXI            YUP, WE CAN LIVE WITH THAT, IF THE
*
         CLC   16(8,R5),=CL8'MEDIAL'   WAS MEDIAL   SPECIFIED ?
         BE    SECLMEDI            YUP, WE CAN LIVE WITH THAT, IF THE
*                                  INSTALLATION CAN.
         WTO   'TSSI016A SECLEVEL PARAMETER REJECTED - TRY "MINIMAL" ORX
               "MAXIMAL"'
         B     SECLEND
SECLMINI DS    0H
***********************************************************************
* WE COME HERE IF THE SECURITY LEVEL IS MINIMAL.
***********************************************************************
         MVC   INISEC(4),=CL4'MINI'
         B     SECLEND
SECLMAXI DS    0H
***********************************************************************
* WE COME HERE IF THE SECURITY LEVEL IS MAXIMAL
***********************************************************************
         MVC   INISEC(4),=CL4'MAXI'
         B     SECLEND
SECLMEDI DS    0H
***********************************************************************
* WE COME HERE IF THE SECURITY LEVEL IS MEDIAL
***********************************************************************
         MVC   INISEC(4),=CL4'MEDI'
         B     SECLEND
SECLNPRM DS    0H
         WTO   'TSSI017A SECLEVEL PARAMETER REJECTED - INVALID IN "PROMX
               PT" MODE'
         B     SECLEND
SECLEND  DS    0H
         B     PARMNEXT
*                                                               14DEC92
PRSMPF   DS    0H                                               14DEC92
****************************************************************14DEC92
* PROCESS THE  MPFSUPP PARAMETER STATEMENT                     *14DEC92
****************************************************************14DEC92
         MVC   TSSOMPF,16(R5)       SAVE PARAMETER              14DEC92
         B     PARMNEXT                                         14DEC92
*
*
*
PRSEND   DS    0H
         TM    PARMFLAG,X'20'      WAS END ENTERED FROM PROMPT MODE ?
         BO    ENDPARMS            YUP, BEAM ME UP SCOTTY.
         B     PARMEND
PARMNEXT DS    0H
         TM    PARMFLAG,X'20'      ARE WE IN PROMTING MODE ?
         BO    CHKPROMP            IF IN PROMPTING MODE, PROMPT
         LA    R8,80(R8)
         LA    R3,80(R3)
         CH    R3,PARMREAD         ARE WE AT END OF BLOCK YET?
         BL    PARMLOOP
         XR    R3,R3
         XR    R8,R8
         B     READLOOP
*
PRSINV   DS    0H
         MVC   WTO16D+32(8),0(R5)     MOVE IN VERB FOR MESSAGE
         WTO   MF=(E,WTO16D)          INVALID (YIPES!)  (MSG7)
         B     PARMNEXT               GO GET NEXT RECORD
*
PRSNEQU  DS    0H
         MVC   WTO17D+32(8),0(R5)     MOVE IN VERB FOR MESSAGE
         WTO   MF=(E,WTO17D)          INVALID FORMAT    (MSG8)
         B     PARMNEXT               GO GET NEXT RECORD
*
NPARMDCB DS    0H
         WTO   'TSSI009E MISSING PARMLIB DD STATEMENT- DEFAULTS TAKEN'
         B     PARMEND
NPARM2   DS    0H
         MVC   WTO18D+20(8),PARMMEM
         WTO   MF=(E,WTO18D)           MEMBER NOT FOUND - (MSG10)
         B     PARMEND
NPARM3   DS    0H
         WTO   'TSSI011E SYS1.PARMLIB IS NOT BLOCKED AT 80 BYTES- PARMLX
               IB INPUT IGNORED'
         B     PARMEND
PARMEND  DS    0H
NEGPROM  DS    0H
         LA    R7,PARMDCBD         (PTF 2)
         TM    DCBOFLGS,DCBOFOPN   IS THE SUCKER OPEN ?
         BNO   CHKPROMP            NOPE, MUST NOT BE THERE. SEE IF
*                                  PROMPTING WAS REQUESTED.
         CLOSE ((R7),LEAVE),MF=(E,CLOSED)
*
         MVC   TSSOCMDL(2),=H'20'
         MVC   TSSOCMD(20),FRPRMLIB   MOVE IN TSO COMMAND TO FREE PARM
         OI    TSSOPFLG,X'80'         IGNORE AUTHORITY CHECKING
         LINK  EP=TSSODOCM,PARAM=((R9)),SF=(E,LINK1D),                 X
               MF=(E,LINKPARM)
         NI    TSSOPFLG,255-X'80'     ALLOW AUTH CHECKING
*
         TM    PARMFLAG,X'80'      DID WE GET STORAGE ?
         BNO   NOGETM              NOPE, DONT BOTHER WITH FREEMAIN
         L     R0,PARMBLK
         L     R1,PARMBUF
         FREEMAIN R,LV=(R0),A=(R1)
         DROP  R7
NOGETM   DS    0H
CHKPROMP DS    0H
         TM    PARMFLAG,X'01'      SEVERE ERROR IN INITIALIZATION ?
         BO    ENDPARMS            YUP.. FORGET ALL THAT OTHER STUFF
         OI    PARMFLAG,X'20'      INDICATE WE ARE INPROMPTING MODE.
         TM    PARMFLAG,X'40'      WAS PROMPTING DESIRED ?
         BNO   ENDPARMS            NO, GO TO END PARMS ROUTINE
         XC    WTORECB(4),WTORECB
         LA    R7,WTORECB
         LA    R8,PROMPINP
         MVC   PROMPINP(80),=CL80' '    BLANK OUT RESPONSE AREA
         WTOR  ,(R8),80,(R7),MF=(E,WTOR26D)   ** PROMPT **  (MSG12)
         WAIT  ECB=WTORECB
         OC   PROMPINP(80),=CL80' '     UPPERCASE
         B    PRSCHECK                  GO DO THE PARM
ENDPARMS DS    0H
ENDPROG  DS   0H
*
         LH    R8,RETCODE          PICK UP RETURN CODE
*
         FREEMAIN R,LV=4096,A=(R11)
         LR    R1,R13              GET ADDRESS OF CORE IN R1
         L     R13,4(R13)          RESTORE R13
         FREEMAIN R,LV=72,A=(R1)    FREE UP THE CORE
ENDPROG1 DS    0H
         L     R14,12(R13)         RELOAD RETURN POINT
         LR    R15,R8              RELOAD RETURN CODE
         LM    R0,R12,20(R13)      RELOAD MORE REGISTERS
         BR    R14
*
CMDFAIL  DS    0H
         WTO 'TSSI013S UNABLE TO ISSUE TSO COMMANDS- TSSO TERMINATING',X
               DESC=(1)
         LA    R8,8
         STH   R8,RETCODE
         B     ENDPROG
*
ERROR12  DS    0H
         LA    R8,12
         STH   R8,RETCODE
         B     ENDPROG
*
***********************************************************************
* TSSOINI2 ONLY DATA CONSTANTS.                                       *
*                                                                     *
***********************************************************************
LINK1C   LINK  EP=TSSODOCM,SF=L
LINK1CE  EQU   *
ALPRMLIB DC    CL50'ALLOC FI(PARMLIB) DSN(''SYS1.PARMLIB'') SHR'
FRPRMLIB DC    CL20'FREE FI(PARMLIB)'
         EJECT
***********************************************************************
* TSSOINI2 ONLY DSECT.
*                                                                     *
***********************************************************************
TSSOVARS DSECT
LINKPARM DS    F           PARAMETER FOR RE-ENTRANT LINK MACRO
RETCODE  DS    H           RETURN CODE FROM TSSOINI2
LINK1D   LINK  EP=TSSODOCM,SF=L
         COPY  TSSODATD
         TSSOCVT
         DCBD  DSORG=PO,DEVD=DA
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
 PUNCH ' SETCODE  AC(1)'
 PUNCH ' IDENTIFY TSSOINI2(''V 4.3.0 &SYSDATE &SYSTIME'') '
 PUNCH ' INCLUDE  SYSLMOD(JCECVT)'
 PUNCH ' INCLUDE  SYSLMOD(TSSOPARS)'
 PUNCH ' ENTRY    TSSOINI2'
 PUNCH ' NAME     TSSOINI2(R)'
         END
