DISPAOF  MENTER 12,EQU,COM=DISPAOF,CP=CP
         B     EYE1
         COPY  EYECATCH
EYE1     DS    0H
***********************************************************************
* THIS IS THE TSSO DISPLAY AOF COMMAND. THE COMMAND WILL OPERATE ON   *
* EITHER THE CURRENT TSSO AOF TABLE, LOCATED OFF THE TSSO CVT, OR     *
* A TABLE THAT IS LOCATED IN A LOAD LIBRARY ACCESSABLE TO THE         *
* PROGRAM.                                                            *
*                                                                     *
*
* SYNTAX:
*
*      DISPAOF  MSGID(MSG-IDENTIFIER) TABLE(TABLE-NAME) TEST
*                                     ALTTAB
*
*      DISPAOF  ENTRYID(ENTRY-IDENTIFIER) TABLE(TABLE-NAME) TEST
* WHERE:
*    MSGID- THE OS MESSAGE IDENTIFIER THAT YOU WANT INFORMATION ABOUT
*    ENTID- THE ENTRY IDENTIFIER YOU WANT INFO ABOUT.
*    TABNAME-  THE TSSO AOF TO LOAD PRIOR TO PROCESSING
*    TEST -    INCLUDE INFORMATION ON THE TESTS TO PERFORM FOR EACH
*              MESSAGE ID.
***********************************************************************
*
* VERSION IDENTIFIER:  TSSO VERSION 4.3
* AUTHOR. MARC SCHARE
*
* MODIFIED FOR TSSO 4.3
*    1) SUPPORT THE ENTRYID FIELD IN AOF TABLE ENTRIES.
*
*
*
***********************************************************************
* THE FIRST STEP IS TO PARSE THE INPUT, AND DETERMINE WHAT THE USER IS
* AFTER.
***********************************************************************
         LA    R11,4095(R12)
         LA    R11,1(R11)
         USING DISPAOF+4096,R11
         SETPARSE PCL=DISPARSE
         LA    R10,CORE
         LINK  EP=IKJPARS
         L     R9,MYANS
         USING IKJPARMD,R9
*
         LH    R2,MSGID              OBTAIN THE MESSAGE ID PARM
         CH    R2,=H'1'              SPECIFIED ?
         BNE   NOMSGSPE              WE NEED A MESSAGEID
         LH    R3,MSGSUBID+4            PICK UP THE LENGTH
         ST    R3,LMSGID             REMEMBER LENGTH OF MESSAGE ID
         L     R4,MSGSUBID
         BCTR  R3,0                  SUBTRACT ONE FOR EXECUTE
         MVC   MSGSPEC(8),BLANK      BLANK MSGSPEC TO BEGIN WITH.
         EX    R3,MOVEMSG
         B     ARD1
MOVEMSG  MVC   MSGSPEC(0),0(R4)      ** EXECUTED **
ARD1     DS    0H
         OI    FLAGS,X'80'           FLAG MESSAGE AS SPECIFIED.
         B     CHEKTBL
NOMSGSPE DS    0H
         MVC   MSGSPEC(8),BLANK      NO MESSAGE SPECIFIED- PRT EM ALL.
*
CHEKTBL  DS    0H
         LH    R2,TABLEID            OBTAIN THE TABLE ID SPECIFIED
         LTR   R2,R2                 SPECIFIED ?
         BZ    NOTABLE               WE NEED A MESSAGEID
         LH    R3,TABSUBID+4            PICK UP THE LENGTH
         L     R4,TABSUBID
         BCTR  R3,0                  SUBTRACT ONE FOR EXECUTE
         EX    R3,MOVETAB
         OI    FLAGS,X'40'           INDICATE TABLE NAME WAS SPECIFIED
         B     ARD2
MOVETAB  MVC   TABSPEC(0),0(R4)      ** EXECUTED **
ARD2     DS    0H
         B     CHEKTEST
*
NOTABLE  DS    0H
         MVC   TABSPEC(8),=CL8' '
         B     CHEKTEST
*
CHEKTEST DS    0H
         LH    R2,TEST               OBTAIN THE TABLE ID SPECIFIED
         CH    R2,=H'1'              SPECIFIED ?
         BNE   NOTEST                TEST WAS NOT SPECIFIED...
         OI    FLAGS,X'10'
NOTEST   DS    0H
         B     CHEKENTR              CHECK IF ENTRY PARM SPECIFIED..
*
CHEKENTR DS    0H
         LH    R2,ENTRY              CHECK IF SPECIFIED
         CH    R2,=H'1'              WELL? WAS IT?
         BNE   NOENTRY               GUESS NOT...
         LH    R3,ENTSUBID+4         GET THE PDL FOR THE SPECIFIED ENT
         ST    R3,LENTID             FOR COMPARES LATER ON
         L     R4,ENTSUBID           POINT TO THE STRING
         OI    FLAGS,X'20'           FLAG ENTRY AS SPECIFIED
         BCTR  R3,0
         EX    R3,MOVEENT
         B     ARD3
MOVEENT  MVC   ENTSPEC(0),0(R4)
ARD3     DS    0H
         B     ENDENTRY
NOENTRY  DS    0H
         MVC   ENTSPEC(8),=CL8'ALL'
         B     ENDENTRY
ENDENTRY DS    0H
*
         DROP  R9
HAVEPARM DS    0H
***********************************************************************
* NOW THAT WE HAVE THE PARAMETERS, WE WILL EITHER USE THE CURRENT     *
* TABLE ID, IN STORAGE, OR LOAD THE TABLE THAT WAS SPECIFIED... IN    *
* EITHER CASE, WE WILL FORMAT THE ENTRIES BY WALKING THROUGH THE TABLE*
***********************************************************************
         TM    FLAGS,X'40'           WAS TABLE SPECIFIED ?
         BO    LOADTABL              NO, GO LOAD THE TABLE.
         GETCVT  R2                  START WITH TSSO CVT
         LTR   R2,R2
         BZ    ERROR2
         USING TSSOCVT,R2
         L     R2,TSSOTABL           GET TSSO TABLE ADDRESS
         LTR   R2,R2
         BZ    ERROR6                GET TSSO CURRENT TABLE ADDR.
         ST    R2,TABADDR
         DROP  R2
         B     GOTTABL
LOADTABL DS    0H
         LOAD  EPLOC=TABSPEC,ERRET=TABERROR
         ST    R0,TABADDR
         B     GOTTABL
TABERROR DS    0H
         B     ERROR3
GOTTABL  DS    0H
***********************************************************************
* WE NOW HAVE A TSSO TABLE, POINTED TO BY THE ADDRESS IN TABADDR      *
* WE CAN (FINALLY) START PROCESSING THE TABLE                         *
***********************************************************************
         L     R2,TABADDR            LOAD ADDRESS OF TABLE
         CLC   4(8,R2),=CL8'TSSOTABL'   VALID TSSO TABLE ?
         BNE   ERROR4
         CLC   44(8,R2),=CL8'TSSO 4.3'  CURRENT LEVEL OF TSSO TABLE ?
         BNE   ERROR5
         PUTLINE PARM=PUTBLOK,OUTPUT=(HEAD0H,TERM,SINGLE,DATA),        X
               MF=(E,IOPLADS)
         PUTLINE PARM=PUTBLOK,OUTPUT=(BLANKH,TERM,SINGLE,DATA),        X
               MF=(E,IOPLADS)
         MVC   HEAD1+12(8),20(R2)       MOVE IN TABLE NAME
         MVC   HEAD1+28(8),28(R2)       MOVE IN DATE ASSEMBLED
         MVC   HEAD1+44(8),36(R2)       MOVE IN TIME ASSEMBLED
         PUTLINE PARM=PUTBLOK,OUTPUT=(HEAD1H,TERM,SINGLE,DATA),        X
               MF=(E,IOPLADS)
         MVC   HEAD2+12(8),12(R2)       MOVE IN TABLE ID
         MVC   HEAD2+31(8),44(R2)       MOVE IN VERSION IDENTIFIER
         PUTLINE PARM=PUTBLOK,OUTPUT=(HEAD2H,TERM,SINGLE,DATA),        X
               MF=(E,IOPLADS)
         PUTLINE PARM=PUTBLOK,OUTPUT=(BLANKH,TERM,SINGLE,DATA),        X
               MF=(E,IOPLADS)
         L     R2,0(R2)                 POINT TO THE FIRST RECORD IN
*                                       THE TSSO AOF.
         XC    RECCOUNT(4),RECCOUNT     BLANK IT OUT...
MSGLOOP  DS    0H
***********************************************************************
* HERE, WE HAVE THE ADDRESS OF A MSGID RECORD. WE MUST FORMAT THE
* RECORD, AND LOOP DOWN. R2 WILL POINT TO THE RECORD
***********************************************************************
         LTR   R2,R2                 IS THIS A RECORD ?
         BZ    ENDRECS               NOPE, NO MORE RECORDS !
*
         CLC   4(8,R2),=CL8'ZZZZZZZZ'   END OF RECORD INDICATOR
         BE    ENDRECS                  YUP, THIS IS IT.
*
         L     R1,RECCOUNT
         LA    R1,1(R1)
         ST    R1,RECCOUNT
*
***********************************************************************
* BEFORE WE ACTUALLY GO AND PRINT A MESSAGE ID, WE WILL CHECK IF      *
* THE ENTRY ID, OR MESSAGE ID WAS SPECIFIED. THE MESSAGE MUST PASS    *
* ALL TESTS BEFORE ACTUALLY BEING PRINTED.                            *
***********************************************************************
PRETEST1 DS    0H
         TM    FLAGS,X'80'            WAS MESSAGE SPECIFIED ?
         BNO   PRETEST2               NO, GO AND CHECK ENTRY ID.
*
CHECKMSG DS    0H
         L     R1,LMSGID              GET LENGTH OF MESSAGE ID
         BCTR  R1,0
         EX    R1,COMMSGID
         BE    PRETEST2
         OI    FLAGS,X'04'            REMEMBER MSGID SPOTTED
         B     AR7
COMMSGID CLC   4(0,R2),MSGSPEC        IS THIS THE MESSAGE DESIRED ?
AR7      DS    0H
         BNE   NEXTREC                NO, GO SEEK NEXT RECORD.
*
PRETEST2 DS    0H
         TM    FLAGS,X'20'            WAS ENTRY SPECIFIED ?
         BNO   PRETEST3
         L     R1,LENTID              GET LENGTH OF ENTRY ID
         BCTR  R1,0
         EX    R1,COMPEID
         BNE   NEXTREC
         OI    FLAGS,X'08'
         B     ARD6
COMPEID  CLC   32(0,R2),ENTSPEC       IS THIS THE RIGHT ENTRY ?
ARD6     DS    0H
*
PRETEST3 DS    0H
*
         B     PRTMSG                 GO GET NEXT RECORD
PRTMSG   DS    0H
         PUTLINE PARM=PUTBLOK,OUTPUT=(BLANKH,TERM,SINGLE,DATA),        X
               MF=(E,IOPLADS)
         LH    R1,24(R2)             PICK UP RECORD ID.
         CALL  JCECVTBD
         STCM  R1,B'1111',LINE0+14
*
         MVC   LINE0+32(8),32(R2)  AND GET THE ENTRY NAME.
*
         PUTLINE PARM=PUTBLOK,OUTPUT=(LINE0H,TERM,SINGLE,DATA),        X
               MF=(E,IOPLADS)
*
         MVC   LINE1+12(8),4(R2)     MOVE IN MESSAGE ID.
         MVC   LINE1+30(8),12(R2)    MOVE IN ACTION CODE.
         CLC   26(2,R2),=CL2'YE'     ECHO= YES SPECIFIED ?
         BE    ECHOYES
         CLC   26(2,R2),=CL2'NO'     ECHO= NO SPECIFIED ?
         BE    ECHONO
         CLC   26(2,R2),=CL2'LO'     ECHO=LOG SPECIFIED ?
         BE    ECHOLOG
ECHOYES  DS    0H
         MVC   LINE1+46(3),=CL3'YES'
         B     ENDECHO
ECHONO   DS    0H
         MVC   LINE1+46(3),=CL3'NO'
         B     ENDECHO
ECHOLOG  DS    0H
         MVC   LINE1+46(3),=CL3'LOG'
         B     ENDECHO
ENDECHO  DS    0H
PROCMTCH DS    0H
         L     R1,28(R2)             PICK UP MATCHLIM VALUE...
         C     R1,=F'999999'         ANY SPECIFIED ?
         BE    DEFMLIM               DEFAULT MATCHLIM USED.
         CALL  JCECVTBD
         STCM  R1,B'1111',LINE1+60   PUT LIMIT OUT ...
         B     ENDMLIM
DEFMLIM  DS    0H
         MVC   LINE1+60(4),=CL4'NONE'
         B     ENDMLIM
ENDMLIM  DS    0H
         PUTLINE PARM=PUTBLOK,OUTPUT=(LINE1H,TERM,SINGLE,DATA),        X
               MF=(E,IOPLADS)
         MVC   LINE2+13(67),BLANK       BLANK OUT ACTION TEXT
         LH    R3,40(R2)             LOAD UP ACTION TEXT LENGTH
         LTR   R3,R3                 IS THERE ANY ?
         BNZ   LOADATEX              YUP, LOAD UP ACTION TEXT
         MVC   LINE2+13(22),=CL22'*** NO ACTION TEXT ***'
         B     GOTATEXT
LOADATEX DS    0H
         BCTR  R3,0                  FOR EXECUTE
         EX    R3,MOVATEXT           MOVE THE ACTION TEXT
         B     ARD5
MOVATEXT MVC   LINE2+13(0),42(R2)    ** EXECUTED **
ARD5     DS    0H
GOTATEXT DS    0H
         PUTLINE PARM=PUTBLOK,OUTPUT=(LINE2H,TERM,SINGLE,DATA),        X
               MF=(E,IOPLADS),TERMPUT=(EDIT)
         L     R3,20(R2)
         PUTLINE PARM=PUTBLOK,OUTPUT=(BLANKH,TERM,SINGLE,DATA),        X
               MF=(E,IOPLADS)
CHKPOST  DS    0H
***********************************************************************
* SINCE THE ACTION=POST FUNCTION MAY OCCASIONALLY SEE DYNAMIC         *
* ALTERATION OF THE AOF TABLE OCCURING, LETS CHECK ITS STATUS, AND    *
* DISPLAY IF ANYONE IS USING IT.                                      *
***********************************************************************
         CLC   12(8,R2),=CL8'POST'    ACTION=POST SPECIFIED ?
         BNE   PSTPOST
         TM    42(R2),X'80'           IS THIS ENTRY ACTIVE ?
         BNO   PSTPOST
*
         MVC   LINE6+9(8),32(R2)      MOVE IN THE ENTRY ID
*
         L     R1,50(R2)              GET THE ASCB.
         CALL  JCECVTBH
         STCM  R0,B'1111',LINE6+46
         STCM  R1,B'1111',LINE6+50
         PUTLINE PARM=PUTBLOK,OUTPUT=(LINE6H,TERM,SINGLE,DATA),        X
               MF=(E,IOPLADS)
PSTPOST  DS    0H
***********************************************************************
* NOW, WE MUST START HANDLING THE TEST ENTRY CASES. ANY NUMBER OF
* TEST ENTRIES MAY HAVE BEEN SPECIFIED. THE FIRST IS POINTED TO BY
* 20(R2) IN THE MSGID MAIN CONTROL BLOCK. SUBSEQUENT TEST PARMS ARE
* POINTED TO BY THE FIRST WORD IN EACH TEST PARAMETER CONTROL BLOCK.
* R3 WILL POINT TO THE TEST CONTROL BLOCK
********************************************************************
         TM    FLAGS,X'10'       TEST SPECIFIED ?
         BNO   NEXTREC           NOPE, FORGET ALL TEST CONDITIONS
TLOOP    DS    0H
         LTR   R3,R3             ANY ADDITIONAL TEST ENTRIES ?
         BZ    ENDTESTS
         L     R1,6(R3)          LOAD SUBSTR OR WORD NUMBER
         ST    R1,WORD1          TUCK AWAY
         L     R1,10(R3)         LOAD LENGTH
         ST    R1,WORD2          TUCK AWAY
         MVC   WORDSEPS(4),14(R3) TUCK SEPARATORS AWAY, JUST IN CASE.
         CLC   4(2,R3),=CL2'W'   WORD TYPE ?
         BE    WORDTYPE          HANDLE IT
         CLC   4(2,R3),=CL2'S'   SUBSTRING TYPE ?
         BE    SUBSTYPE          HANDLE IT
         CLC   4(2,R3),=CL2'P'   SUBSTRING TYPE ?
         BE    SUBSTYPE          HANDLE IT
********************************************************************
* HERE, IT IS OF UNKNOWN TYPE. BEAR UP UNDER THE PRESSURE, AND
* INFORM USER. THIS SHOULD NEVER HAPPEN.
********************************************************************
         MVC   LINE3W(80),=CL80'*** UNKNOWN TEST TYPE ***'
         B     WORDTYPE          PRINT THE ERROR MESSAGE.
WORDTYPE DS    0H
         L     R1,WORD1          GET WORD NUMBER
         CALL  JCECVTBD          CONVERT
         STCM  R1,B'0011',LINE3W+12
         L     R1,WORD2          LOAD LENGTH
         CALL  JCECVTBD          CONVERT
         STCM  R1,B'0011',LINE3W+27
         MVC   LINE3W+44(4),WORDSEPS     MOVE IN SEPARATORS
         PUTLINE PARM=PUTBLOK,OUTPUT=(LINE3WH,TERM,SINGLE,DATA),       X
               MF=(E,IOPLADS)
         B     MATCHTEX
SUBSTYPE DS    0H
         L     R1,WORD1          GET SUBSTRING START
         CALL  JCECVTBD          CONVERT
         STCM  R1,B'0111',LINE3S+22
         L     R1,WORD2          LOAD LENGTH
         CALL  JCECVTBD          CONVERT
         STCM  R1,B'0011',LINE3S+38
         PUTLINE PARM=PUTBLOK,OUTPUT=(LINE3SH,TERM,SINGLE,DATA),       X
               MF=(E,IOPLADS)
         B     MATCHTEX
********************************************************************
* NEXT, GO AND FORMAT THE MATCH STRING- IE THE STRING THAT TSSO/AOF
* WILL BE MATCHING AGAINST.
********************************************************************
MATCHTEX DS    0H
         MVC   LINE4+12(80),BLANK       BLANK OUT MATCHING TEXT.
         LH    R4,18(R3)             GET LENGTH OF MATCHING TEXT
         BCTR  R4,0
         EX    R4,MOVEMTEX           MOVE THE MATCHING TEXT
         B     ARD4
MOVEMTEX MVC   LINE4+12(0),20(R3)    ** EXECUTED **
ARD4     DS    0H
         PUTLINE PARM=PUTBLOK,OUTPUT=(LINE4H,TERM,SINGLE,DATA),        X
               MF=(E,IOPLADS)
********************************************************************
* NOW, LOOP BACK TO GET THE NEXT TEST ENTRY.
********************************************************************
         MVI   LINE4+12,X'40'
         MVC   LINE4+13(117),LINE4+12
         L     R3,0(R3)              GET ADDRESS OF NEXT ENTRY
         MVC   LINE4(12),=CL12'MATCH TEXT:'
         MVI   STARS,C'-'
         MVC   STARS+1(79),STARS
         PUTLINE PARM=PUTBLOK,OUTPUT=(STARSH,TERM,SINGLE,DATA),        X
               MF=(E,IOPLADS)
         B     TLOOP
ENDTESTS DS    0H
********************************************************************
* WE GET HERE WHEN THERE ARE NO MORE TEST ENTRIES TO PROCESS.
* WE MUST PICK UP THE NEXT MESSAGE ID ENTRY, AND WORK ON THAT.
********************************************************************
         MVI   STARS,C'*'
         MVC   STARS+1(79),STARS
         PUTLINE PARM=PUTBLOK,OUTPUT=(STARSH,TERM,SINGLE,DATA),        X
               MF=(E,IOPLADS)
NEXTREC  DS    0H
         L     R2,0(R2)              GET NEXT RECORD
         B     MSGLOOP
*
ENDRECS  DS    0H
         TM    FLAGS,X'80'           WAS AN ENTRY ID SPECIFIED ?
         BNO   NOMSGIDS              NO, DONT WORRY ABOUT IT
*
         TM    FLAGS,X'04'           WAS IT FOUND ?
         BO    MSGSPFND              YUP, DONT WORRY ABOUT IT.
*
         MVC   LINE7+11(8),MSGSPEC
         PUTLINE PARM=PUTBLOK,OUTPUT=(LINE7H,TERM,SINGLE,DATA),        X
               MF=(E,IOPLADS)
*
         PUTLINE PARM=PUTBLOK,OUTPUT=(BLANKH,TERM,SINGLE,DATA),        X
               MF=(E,IOPLADS)
NOMSGIDS DS    0H
MSGSPFND DS    0H
*
CHKENTID DS    0H
         TM    FLAGS,X'20'           WAS AN ENTRY ID SPECIFIED ?
         BNO   NOENTID               NO, DONT WORRY ABOUT IT
*
         TM    FLAGS,X'08'           WAS IT FOUND ?
         BO    ENTSPFND              YUP, DONT WORRY ABOUT IT.
*
         MVC   LINE5+9(8),ENTSPEC
         PUTLINE PARM=PUTBLOK,OUTPUT=(LINE5H,TERM,SINGLE,DATA),        X
               MF=(E,IOPLADS)
*
         PUTLINE PARM=PUTBLOK,OUTPUT=(BLANKH,TERM,SINGLE,DATA),        X
               MF=(E,IOPLADS)
ENTSPFND DS    0H
NOENTID  DS    0H
         L     R1,RECCOUNT
         CALL  JCECVTBD
         STCM  R1,B'1111',TRAIL+31
         PUTLINE PARM=PUTBLOK,OUTPUT=(TRAILH,TERM,SINGLE,DATA),        X
               MF=(E,IOPLADS)
         B     ENDPROG
*
ERROR1   DS    0H
         PUTLINE PARM=PUTBLOK,OUTPUT=(ERROR1H,TERM,SINGLE,DATA),       X
               MF=(E,IOPLADS)
         B     ENDPROG
ERROR2   DS    0H
         PUTLINE PARM=PUTBLOK,OUTPUT=(ERROR2H,TERM,SINGLE,DATA),       X
               MF=(E,IOPLADS)
         B     ENDPROG
ERROR3   DS    0H
         PUTLINE PARM=PUTBLOK,OUTPUT=(ERROR3H,TERM,SINGLE,DATA),       X
               MF=(E,IOPLADS)
         B     ENDPROG
ERROR4   DS    0H
         PUTLINE PARM=PUTBLOK,OUTPUT=(ERROR4H,TERM,SINGLE,DATA),       X
               MF=(E,IOPLADS)
         B     ENDPROG
ERROR5   DS    0H
         PUTLINE PARM=PUTBLOK,OUTPUT=(ERROR5H,TERM,SINGLE,DATA),       X
               MF=(E,IOPLADS)
         B     ENDPROG
ERROR6   DS    0H
         PUTLINE PARM=PUTBLOK,OUTPUT=(ERROR6H,TERM,SINGLE,DATA),       X
               MF=(E,IOPLADS)
         B     ENDPROG
ENDPROG  DS    0H
         MLEAVE
CORE     DS    CL200            USED BY PARSE ROUTINE
MSGSPEC  DS    CL8              MESSAGE ID AS SPECIFIED BY USER
TABSPEC  DC    CL8' '           TABLE NAME SPECIFIED FOR LOAD
ENTSPEC  DS    CL8              ENTRY ID SPECIFIED BY USER
TABADDR  DS    A                ADDRESS OF AOF TABLE FOR THIS RUN
LENTID   DS    F                LENGTH OF THE SPECIFIED ENTRY ID
LMSGID   DS    F                LENGTH OF THE SPECIFIED MSG ID
WORD1    DS    F                FOR TEST CASES: SUBSTR START, OR WORD
WORD2    DS    F                FOR TEST CASES: LENGTH
WORDSEPS DS    CL4              FOR TEST CASES: SEPARATOR CHARS
RECCOUNT DS    F                TOTAL NUMBER OF MSGID RECORDS
FLAGS    DC    H'0'
* FIRST BYTE:
* X'80' - A MSGID WAS SPECIFIED
* X'40' - A TABLE NAME WAS SPECIFIED.
* X'20' - A ENTRY ID WAS SPECIFIED ...
* X'10' - TEST WAS SPECIFIED...
* X'08' - ENTRY ID WAS SPECIFIED, AND ACTUALLY FOUND IN THE TABLE.
* X'04' - MSG   ID WAS SPECIFIED, AND ACTUALLY FOUND IN THE TABLE.
BLANKH   DC    H'80',H'0'
BLANK    DC    CL80' '
*
STARSH   DC    H'80',H'0'
STARS    DC    80C'*'
*
ERROR1H  DC    H'80',H'0'
ERROR1T  DC    CL80'A MESSAGE ID MUST BE SPECIFIED- REQUEST ABORTED'
*
ERROR2H  DC    H'80',H'0'
ERROR2T  DC    CL80'TSSO IS UNABLE TO LOAD THE INSTORAGE VERSION OF THEX
                TABLE'
*
ERROR3H  DC    H'80',H'0'
ERROR3T  DC    CL80'LOAD ERROR TRYING TO LOAD THE TSSO TABLE           X
                     '
*
ERROR4H  DC    H'80',H'0'
ERROR4T  DC    CL80'THE TABLE LOADED IS NOT A VALID TSSO TABLE         X
               '
ERROR5H  DC    H'80',H'0'
ERROR5T  DC    CL80'THE TABLE LOADED IS AT AN INCORRECT LEVEL AND MUST X
               BE REASSEMBLED'
*
ERROR6H  DC    H'80',H'0'
ERROR6T  DC    CL80'THE TSSO AUTOMATED OPERATIONS FACILITY IS NOT ACTIVX
               E'
*
HEAD0H   DC    H'80',H'0'
HEAD0    DC    CL80'T S S O  AUTOMATED OPERATIONS FACILITY TABLE DISPLAX
               Y (VERSION 4.3)'
*
HEAD1H   DC    H'80',H'0'
HEAD1    DC    CL80'TABLE NAME: XXXXXXXX, DATE: XXXXXXXX, TIME: XXXXXXXC
               X'
*
HEAD2H   DC    H'80',H'0'
HEAD2    DC    CL80'TABLE ID  : XXXXXXXX, VERSION: XXXXXXXX            C
               '
*
LINE0H   DC    H'80',H'0'
LINE0    DC    CL80'ENTRY NUMBER: XXXX, ENTRY NAME: XXXXXXXX'
*
LINE1H   DC    H'80',H'0'
LINE1    DC    CL80'MESSAGE ID: XXXXXXXX, ACTION: XXXXXXXX, ECHO: XXX ,C
               MATCHLIM XXXX'
*
LINE2H   DC    H'80',H'0'
LINE2    DC    CL80'ACTION TEXT:                                       C
                   '
*
LINE3SH  DC    H'80',H'0'
LINE3S   DC    CL80'SUBSTRING STARTING AT XXX, FOR LENGTH XX'
*
LINE3WH  DC    H'80',H'0'
LINE3W   DC    CL80'WORD NUMBER XX, FOR LENGTH XX, SEPARATORS: "XXXX"'
*
LINE4H   DC    H'80',H'0'
LINE4    DC    CL133'MATCH TEXT:'
*
LINE5H   DC    H'80',H'0'
LINE5    DC    CL133'ENTRY ID XXXXXXXX IS NOT FOUND IN THE TABLE'
*
LINE6H   DC    H'80',H'0'
LINE6    DC    CL133'ENTRY ID XXXXXXXX IS BEING WAITED FOR BY ASCB XXXXX
               XXXX'
*
LINE7H   DC    H'80',H'0'
LINE7    DC    CL133'MESSAGE ID XXXXXXXX IS NOT FOUND IN THE TABLE'
*
TRAILH   DC    H'80',H'0'
TRAIL    DC    CL133'TOTAL NUMBER OF TABLE ENTRIES: XXXX'
*
*
********************************************************************
* THIS IS THE DESCRIPTION OF THE COMMAND SYNTAX, AS PARSE WANTS IT *
********************************************************************
DISPARSE IKJPARM
MSGID    IKJKEYWD
         IKJNAME 'MSGID',SUBFLD=MSGSUB
TABLEID  IKJKEYWD
         IKJNAME 'ALTTAB',SUBFLD=TABSUB
         IKJNAME 'TABLE',SUBFLD=TABSUB
TEST     IKJKEYWD
         IKJNAME 'TEST'
ENTRY    IKJKEYWD
         IKJNAME 'ENTRY',SUBFLD=ENTSUB
MSGSUB   IKJSUBF
MSGSUBID IKJIDENT 'MSG',PROMPT='MSG NUMBER',FIRST=ALPHANUM,            X
               OTHER=ALPHANUM,ASTERISK,                                X
               HELP=('AN OS MESSAGE IDENTIFIER - 1-8 CHARACTERS '),    X
               MAXLNTH=8
TABSUB   IKJSUBF
TABSUBID IKJIDENT 'TAB',PROMPT='TABLE NAME',FIRST=ALPHANUM,            X
               OTHER=ALPHANUM,                                         X
               HELP=('TSSO AOF TABLE TO LOAD BEFORE PROCESSING  '),    X
               MAXLNTH=8
ENTSUB   IKJSUBF
ENTSUBID IKJIDENT 'ENT',PROMPT='ENTRY IDENTIFIER',FIRST=ALPHANUM,      X
               OTHER=ALPHANUM,                                         X
               HELP=('TSSO AOF TABLE ENTRY ID')
         IKJENDP
         IKJIOPL
         IEFJESCT
         IEFJSCVT
         IEFJSSVT
         CVT   DSECT=YES
         TSSOCVT
         END   DISPAOF
 PUNCH ' SETCODE  AC(0)'
 PUNCH ' IDENTIFY DISPAOF(''TSSO V 4.3 &SYSDATE &SYSTIME'') '
 PUNCH ' INCLUDE  SYSLMOD(JCECVT)'
 PUNCH ' ENTRY    DISPAOF'
 PUNCH ' NAME     DISPAOF(R)'
         END
