°                       TSO TIME SHARING SUBSYSTEM OPTION

                                  USER'S GUIDE
¸
¸
¸
¸
¸
¸
¸

°                                                                     1
¯
¸
¸
¸
¸
¸
¸
¸

°                         For further information, please contact:

°                         Marc Schare
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
°                                                                     2
¯
¸
°          TSO TIME SHARING SUBSYSTEM USER'S GUIDE

          CONTENTS

          Introduction^

          Current Version^

          Planning the Installation^

          Installation^

          TSSO Parameters^

°          SRC^

°          TABLE^

°          MAXCMDS^

°          MAXWTO^

°          NONSWAP^

°          PROMPT^

°          SECSYS^

°          SECLEVEL^

°          RACFID^

°          END^

°          Comments^

          TSSO Start Command Options^

          Operator Productivity Facility (OPF)^

°          Automated Operations Facility (AOF)

°          Introduction^

°          Creating the AOF Table^

°          TABENTRY Operands^

°          Assembling and Link-Editing the Module^

°          Storing the Module^

          Recovery Procedures^

          Appendices

°          Appendix A.  TSSO Command Reference
°          Appendix B.  TSSO Control Commands
°          Appendix C.  Table of Processing Modules
°          Appendix D.  Sample AOF Table
°          Appendix E.  AOF Algorithm
°          Appendix F.  Sample TSSO Parameter Deck
¸
¸
¸

°                                                                     3
¯
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸

°                                                                     1
¯
°          TSSO User's Guide
¸
°          INTRODUCTION

°          This document describes the Time Sharing Subsystem Option (TS
°          a  package designed to increase operator productivity by auto
°          ing tasks which need not be performed manually. TSSO performs
°          function through two integrated components. The Operator  Pro
°          tivity  Facility (OPF) extends the power of TSO to the MVS op
°          tor's  console,  and  the  Automated  Operations  Facility  (
°          enhances an installation's ability to control system events b
°          on  console message traffic.  TSSO also enhances end-user pro
°          tivity by allowing end-user access to the MVS command  subsys
°          This  document  describes  the installation of TSSO, TSSO par
°          ters, and the use of the two components.
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
°          2
¯
°                                                                  TRS-8
°                                                              Issue 1,
°                                                          TSSO User's G
¸
°          CURRENT VERSION

°          This document describes the function of TSSO Version 4, Relea
°          (TSSO 4.2).  All features described here will continue to wor
°          subsequent versions of the Time Sharing Subsystem  Option  un
°          specified in a future version of this document.

°          SUMMARY OF NEW FEATURES IN RELEASE 4.2

°          A  description  of  the  new  features of TSSO Version 4.2 ca
°          found in member RELGUIDE in the TSSO.VERS42.ASM data set.
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸

°
¯
°          TRS-85-xx
°          Issue 1, date
°          TSSO User's Guide
¸
°          PLANNING FOR TSSO INSTALLATION

°          ø   Software prerequisites

°          ø   disclaimers

°          ø   TSSO security issues

°          ø   planning for subsystem consoles

°          ø   reveiw remainder of document before proceeding with insta
°              tion (parameter values, AOF table,etc.)
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸

°          4
¯
°                                                                  TRS-8
°                                                              Issue 1,
°                                                          TSSO User's G
¸
°          INSTALLATION

°          INSTALLATION PROCEDURES

°          Upon completion of the planning phase, TSSO is ready  to  be
°          stalled.    The installation of TSSO is outlined in the follo
°          step-by-step procedure.  TSSO is distributed in a  single  pa
°          tioned  data  set,  which contains all source modules, proced
°          and documentation.  Although this data set may be called  by
°          name, this document assumes a name of TSSO.VERS42.ASM.

°          1.  Download  the TSSO.VERS42.ASM data set to DASD.  About 3
°              inders of 3380 space is required.  If you received your
°              of  the TSSO subsystem from the CBT tape, simply copy it
°              data set with this name.  If you received a  tape,  then
°              TSSO  subsystem  is in IEBCOPY format on the first file.
°              tape will be non-labeled, so use the  LABEL=(1,NL)  param
°              when downloading TSSO.

°          2.  Create two data sets for the TSSO modules with the charac
°              istics RECFM=U, LRECL=0, BLKSIZE=13030, DSORG=PO.

°              a.  TSSO.VERS42.LOAD will be an intermediate data set for
°                  sembling TSSO modules.

°              b.  SYS1.TSSOLOAD will contain the TSSO production module

°              One  cylinder  of  3380  DASD  space should be sufficient
°              these data sets.

°          3.  Assemble the TSSO source modules using the  procedure  AS
°              in  TSSO.VERS42.ASM.  You will need to EDIT the procedure
°              add the appropriate installation job cards and local acco
°              ing information.

°              If you will be running the TSSO subsystem on MVS/370, or
°              MVS/370 and MVS/XA, the SYSLIB DD statement must be  poin
°              to the SYS1.MACLIB and SYS1.AMODGEN data sets for MVS/370
°              you  will be running the subsystem exclusively on MVS/XA,
°              SYSLIB  DD  statement  may  point  to  the  XA  versions
°              SYS1.MACLIB and SYS1.AMODGEN.

°              NOTE:     If  you do not have TSO/E Release 2 installed,
°                        of the assemblies will fail.

°          4.  Copy the load modules from  TSSO.VERS42.LOAD  into  the
°              duction  library SYS1.TSSOLOAD.  The library TSSO.VERS42.
°              should remain on the system as  an  intermediate  library

°
¯
°          TRS-85-xx
°          Issue 1, date
°          TSSO User's Guide
¸
°              contain  assembled  TSSO load modules and assembled Autom
°              Operations Facility tables.

°          5.  Update the SYS1.PARMLIB data set with one or more TSSO pa
°              eter decks.  The default member is TSSOPARM; however,  al
°              nate members may be selected when TSSO is started.  Note
°              the  TSSO parameter decks must be located in SYS1.PARMLIB
°              TSSO will dynamically allocate this data  set.    Review
°              sections  "Security" and "TSSO Parameters" for informatio
°              TSSO parameters.  Appendix F gives an example of a  TSSO
°              rameter  deck,  and a sample TSSO parameter deck may be f
°              in member SAMPPARM in the TSSO.VERS42.ASM data set.
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸

°          6
¯
°                                                                  TRS-8
°                                                              Issue 1,
°                                                          TSSO User's G
¸
°          6.  Identify TSSO to MVS as a subsystem.  In the subsystem  n
°              table,  member IEFSSNxx in SYS1.PARMLIB, make an entry of
°              form

°                   TSSO

°          7.  Include SYS1.TSSOLOAD in the IEAAPFxx member of SYS1.PARM
°              This allows the TSSO subsystem to run APF authorized.

°          8.  Include a TSSO start-up procedure in  the  SYS1.PROCLIB
°              set.    Note  that, because TSSO may be started by the ma
°              scheduler, this procedure must be in SYS1.PROCLIB, not  i
°              PROCLIB  defined  to  JES2.   A sample procedure for star
°              TSSO is in member TSSOPROC in the TSSO.VERS42.ASM data se

°          9.  Give the TSO commands supplied with TSSO  APF  authorizat
°              Update   the  installation  CSECT  IKJEFTE2  in  load  mo
°              IKJEFT02 to include the following commands:   ALTAOF,  CA
°              CPCMD,  REPLY,  OSCMD, OSWTO, OSWTOH, and OSASK.  Under T
°              Release 2.1, this CSECT is in the load  module  IKJTABLS.
°              this  release  of  TSO/E  is  installed,  a  separate cop
°              IKJTABLS may be used by TSSO if included in the SYS1.TSSO
°              data set.

°          10. Create the TSSO Automated Operations Facility table(s).
°              structions  for  preparing  the table are found later in
°              document.

°          11. If you will be running TSSO with RACF support and MINIMAL
°              curity, add a RACF ID for TSSO.  Also add a RACF ID for
°              to  SYS1.UADS.  This will allow TSSO to assume the TSO at
°              butes (e.g. ACCOUNT, SUBMIT or MOUNT) that  the  installa
°              desires.  If you will be running with MEDIAL or MAXIMAL s
°              rity,  you  may  wish  to add additional RACF or ACF2 and
°              user IDs for each operator who will be logging on.

°          12. IPL TSSO to refresh the subsystem name table.  Note that,
°              TSSO was previously installed, this step is not necessary
¸
¸
¸

°
¯
°          TRS-85-xx
°          Issue 1, date
°          TSSO User's Guide
¸
°          TSSO PARAMETERS

°          TSSO parameters provide an installation with a flexible mecha
°          for  altering  TSSO processing.  Parameters are entered in on
°          more decks and stored as members in SYS1.PARMLIB.    The  def
°          member  is  TSSOPARM, and it is recommended that TSSOPARM be
°          ated for daily processing.

°          Parameters can be entered in any order, and if  two  entries
°          specified  for  the  same parameter, the last entry takes pre
°          ence.

°          SYSTEM RECOGNITION CHARACTER (SRC) PARAMETER

°          SRC defines the character that TSSO will use  to  recognize
°          operator  commands.   For example, if this character is "#",
°          will intercept and process all operator commands starting wit
°          "#".  The syntax is

°               SRC = char

°          where  char  is  the  character that TSSO will use.   The def
°          character is a "#".

°          SUBSYS PARAMETER

°          SUBSYS defines subsystem interface exits and  the  routines
°          will handle the exit functions.  The syntax is

°               SUBSYS nn = module-name

°          where nn is the subsystem interface function code and module-
°          is  the  name  of the routine that will handle the function.
°          may specify as many SUBSYS parameters as desired.    However,
°          there  are multiple entries with the same function code, only
°          last appearance of the code will be honored.

°          By default, TSSO includes two SUBSYS entries,  one  for  func
°          code  9  which intercepts WTO messages (the AOF facility) and
°          for function code 10 which intercepts operator commands (the
°          facility).   Therefore, be careful that you do not enter a SU
°          parameter with code 9 or 10; otherwise, your entries  will  o
°          ride the defaults and disable the AOF and OPF facilities.
¸

°          8
¯
°                                                                  TRS-8
°                                                              Issue 1,
°                                                          TSSO User's G
¸
°          TABLE PARAMETER

°          TABLE  defines the name of the TSSO Automated Operations Faci
°          (AOF) table.  The AOF table contains information used  to  in
°          cept  and  responding  to operating system messages.  Informa
°          describing how to create this table is specified  later  in
°          document.   There is no default.  If this parameter is not sp
°          fied, the AOF is deactivated.  Note that this table  can  be
°          loaded  (and  AOF  activated) at any time with the ".RELOAD"
°          operator command described later.  The syntax is

°               TABLE = table-name

°          where table-name is the load module name that contains a TSSO
°          table.

°          MAXCMDS PARAMETER

°          MAXCMDS defines the maximum number of  concurrent  commands
°          TSSO  will  hold for processing.   TSSO processes commands in
°          order in which they are entered, on a  first in-first out  ba
°          Any  commands  that  are entered while TSSO is processing ano
°          command are queued for execution.  The MAXCMDS parameter  def
°          the  size  of that queue.   Too small a number is undesirable
°          cause it is advantageous to be able to enter many  TSSO  comm
°          at a time.  Too large a number is also undesirable because it
°          comes  difficult  to detect when a TSSO command may be loopin
°          awaiting terminal input.  The syntax is

°               MAXCMDS=nn

°          where nn defines the maximum number  of  simultaneous  TSSO
°          mands.  Note that TSSO requires 256 bytes for each command in
°          common  service area (CSA).  The default value is 15 simultan
°          commands.

°          MAXWTO PARAMETER

°          MAXWTO defines the maximum number of WTOs TSSO will issue for
°          TSO given command.  The parameter is designed to prevent cons
°          flooding with TSO commands that produce  many  lines  of  out
°          The syntax is

°               MAXWTO=nnn

°          where  nnn  is the maximum number of WTOs TSSO will allow for
°          one command.  TSSO will issue a message when this  limit  is
°          ceeded.
°
¯
°          TRS-85-xx
°          Issue 1, date
°          TSSO User's Guide
¸
°          NONSWAP PARAMETER

°          NONSWAP  defines  whether TSSO will run non-swappable.  If "Y
°          entered, TSSO will issue the appropriate SYSEVENT to MVS  to
°          clare  itself non-swappable.   Any other entry will cause TSS
°          be swapped out whenever it has no work.   This can  cause  se
°          performance  degradation  when  using the subsystem.  The def
°          value is "Y".  The syntax is

°               NONSWAP={Y/N}

°          where "Y" will mark the TSSO address space non-swappable.

°          PROMPT PARAMETER

°          PROMPT defines whether or not the operator will be  prompted
°          addtional TSSO parameters at start-up time.  The syntax is

°               PROMPT={Y/N}

°          If PROMPT=Y is specified, TSSO will enter prompt mode after p
°          essing  all  the parameters in PARMLIB and allow the MVS oper
°          to enter or override parameters (except security-related  par
°          ters).    For example, if you use a different AOF table used
°          day, you would want to be prompted so that you can enter the
°          BLE parameter.

°          NOTE:  Prompt  mode  may also be specified at start-up time.
°                 the next section for more information.

°          SECSYS PARAMETER

°          SECSYS defines the security system used by the installation.
°          syntax is

°               SECSYS={RACF/ACF2}

°          The default is RACF.
¸
¸
°          ¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿

°          *Using the #.LOGON command, which will assign each console a
°          arate RACFID parameter.
°          10
¯
°                                                                  TRS-8
°                                                              Issue 1,
°                                                          TSSO User's G
¸
°          SECLEVEL PARAMETER

°          SECLEVEL defines the security level of  the  installation.
°          syntax is

°               SECLEVEL={MINIMAL/MEDIAL/MAXIMAL}

°               MINIMAL   Default.  This level operates the same way as
°                         Version 4.1; that is, only the RACF security p
°                         uct  is supported and the RACFID parameter is
°                         to determine TSSO's authority level.    Theref
°                         all TSSO commands will execute with TSSO's aut
°                         ity, regardless of the console's authority lev
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸

°
¯
°          TRS-85-xx
°          Issue 1, date
°          TSSO User's Guide
¸
°               MEDIAL    This level requires all consoles using TSSO to
°                         on*  using the appropriate security system (ei
°                         RACF or ACF2).  All data set access  checking
°                         TSSO commands and CLISTs is based on the conso
°                         logon  ID authority.   Note that this does not
°                         clude TSSO control commands, which follow  a
°                         ferent   authorization   mechanism.     these
°                         accessable to all consoles.

°               MAXIMAL   This level is extremely restrictive.  All cons
°                         using TSSO must log on using the appropriate s
°                         rity system.  Any console that does not log on
°                         locked out of all commands.

°          RACFID PARAMETER

°          RACFID defines a default RACF ID for the TSSO subsystem, allo
°          TSSO  to  access  data  sets  with the authority of that RACF
°          This implies that RACF commands can be entered from the MVS
°          sole  through  the  use of TSSO.  If the installation has not
°          stalled the RACF program product, this parameter must be omit
°          The syntax is

°               RACFID=RACF-id

°          where RACF-id is the RACF identifier that TSSO will assume.
°          parameter has no default. If it is not specified, TSSO will
°          cute  with  the  default RACF authority.   RACFID is used onl
°          SECLEVEL=MINIMAL; otherwise, the parameter is ignored, since
°          DIAL  and  MAXIMAL  levels grant authority based on the conso
°          logon ID.

°          CAUTION:   TSSO does not require a password to acquire this
°                     authority,  and  care must be taken to ensure that
°                     of this parameter does not violate installation  s
°                     rity standards.

°          A  recent small programming enhancement (SPE) to the JES2 sub
°          tem has enhanced TSSO's ability to control production batch
°          that  may  use RACF-protected data sets.  JES2 will now propa
°          the RACF ID and group from the current  address  space  for
°          submitted  through the internal reader.  TSSO can submit jobs
°          ing the TSO SUBMIT command, and those jobs can  acquire  the
°          thority of the TSSO address space.
¸

°          12
¯
°                                                                  TRS-8
°                                                              Issue 1,
°                                                          TSSO User's G
¸
°          END PARAMETER

°          END marks the end of TSSO parameter input. The syntax is

°               END

°          with  no  operands.   If prompt mode was enabled, the MVS con
°          operator will be prompted for additional  TSSO  parameters  a
°          the END parameter is processed.

°          * (COMMENTS) PARAMETER

°          The "*" parameter allows an installation to place comments in
°          TSSO initialization deck.  The line will be ignored by TSSO.
°          syntax is

°               * any-text

°          where  any-text  is any descriptive comments the installation
°          want to include in the initialization deck.
¸
¸
¸
¸
¸
¸
¸
¸
¸

°
¯
°          TRS-85-xx
°          Issue 1, date
°          TSSO User's Guide
¸
°          TSSO START COMMAND OPTIONS

°          TSSO provides the installation with a great deal  of  flexibi
°          at  start-up time.   The following forms of the MVS START com
°          may be used to start TSSO. In any of these  forms,  the  SUB=
°          parameter  may  only  be specified   if the JES2 subsystem is
°          Specifying of SUB=JES2 allows TSSO to use JES2 services  such
°          PRINTOFF and SUBMIT.

°          ø   S TSSO,SUB=JES2

°              This   directs   TSSO  to  use  the  default  parmlib  me
°              "TSSOPARM" for TSSO parameters.  This is the  usual  form
°              the  TSSO start command and can be executed from the JES2
°              itialization deck.

°          ø   S TSSO,PARM=parm-member,SUB=JES2

°              This directs TSSO to use an alternate TSSO parameter deck
°              SYS1.PARMLIB for parameters.  Default is TSSOPARM.

°          ø   S TSSO,PARM='PROMPT',SUB=JES2

°              This  directs TSSO to prompt the MVS console operator for
°              name of a member in SYS1.PARMLIB to be used  for  paramet
°              After  processing the named member, TSSO will also prompt
°              MVS console operator for additional parameters, even  if
°              parameter  deck specifies PROMPT=N.  Use of PARM='PROMPT'
°              lows an installation to specify TSSO parameters* without
°              tering them previously into SYS1.PARMLIB.  This can be us
°              in  emergency situations; for example, if you need to ent
°              parameter on a one-time basis, or if you are  locked  out
°              SYS1.PARMLIB and need to enter a different parameter.
¸
°          NOTES ON THE SUB=JES2 PARAMETER

°          The SUB=JES2 parameter should be specified in all  but  emerg
°          situations.  Note that the SUB=JES2 parameter is an MVS direc
°          to  direct  processing of the TSSO procedure JCL to the JES2
°          system.  It is not a parameter in the TSSO procedure  and  th
°          fore  cannot  be  overridden.    If the SUB=JES2 parameter is

°          ¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿

°          *Except  the  security-related  parameters  SECSYS, SECLEVEL,
°          RACFID.
°          14
¯
°                                                                  TRS-8
°                                                              Issue 1,
°                                                          TSSO User's G
¸
°          used, the MVS operator must issue the ".J" TSSO command to  a
°          TSSO to use JES2 services.

°          Although  TSSO  has  not  been tested using the JES3 product,
°          interfaces should be the same because TSSO uses standard  sub
°          tem interface calls.
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸

°
¯
°          TRS-85-xx
°          Issue 1, date
°          TSSO User's Guide
¸
°          THE TSSO OPERATOR PRODUCTIVITY FACILITY (OPF)

°          OVERVIEW

°          The  TSSO Operator Productivity Facility (OPF) is a powerful
°          which, in conjunction with the Automated Operations Facility,
°          automate many procedures that currently must  be  done  manua
°          OPF extends the power of TSO to the MVS operator's console by
°          lowing  TSO  commands  and CLISTS to be executed from an MVS
°          sole, with the response going back to the invoking console.
°          includes all TSO functions which use  standard  interfaces  (
°          the  exceptions noted below), and control functions unique to
°          TSSO environment that alter TSSO options and display TSSO  in
°          mation.

°          OPF also allows TSO users to issue MVS commands and get respo
°          returned  to  the  terminal or to CLIST variables.  TSO users
°          usually restricted to INFO console authority; see page x for
°          tails.

°          TSO COMMANDS UNDER TSSO

°          Most TSO commands may be run under control of the TSSO subsys
°          The requirements for such commands are as follows:

°          1.  The command must use standard TSO interfaces (namely, GET
°              and  PUTLINE) to perform I/O.  The command should not req
°              input of any kind, other than normal TSO command paramete

°          2.  The command should not attempt to use full screen process
°              A command that issues  the  STFSMODE  FULLSCRN=YES  macro
°              ACF/VTAM  environments can hang the TSSO subsystem, forci
°              restart.

°          3.  The command should be tested under batch TSO  before  run
°              it under TSSO, since TSO assumes that TSSO-initiated comm
°              are running in background mode.

°          TSSO CONTROL COMMANDS

°          TSSO  supports  a number of commands that are not directed to
°          TMP for execution.  These commands are handled directly by  T
°          and are used to alter or query TSSO processing options.  See
°          tion Appendix B for more information.
¸
°          16
¯
°                                                                  TRS-8
°                                                              Issue 1,
°                                                          TSSO User's G
¸
°          TSO COMMANDS DISTRIBUTED WITH TSSO

°          A  number  of TSO commands that are designed to run with the
°          subsystem are distributed with the base code.    A  complete
°          scription of TSO commands may be found in Appendix A.

°          TSO  commands  used primarily from CLISTs include the "OS fam
°          and the REPLY command.  These are designed  to  provide  serv
°          such  as communicating with the MVS operator and issuing mess
°          to the MVS console, communicating with the MVS command subsys
°          and communicating with programs that have issued WTORs.  Appl
°          tions of these commands are described below.  Table 1  summar
°          the behavior of the OS family in each environment.

°          Other  commands  provided  are auxiliary TSSO command process
°          These include the  CACHE  command  for  controlling  3880-21
°          3880-23  cache  devices,  the LINKLIST command for displaying
°          system LNKLST concatenation, and the VOLSER and  VALLOC  comm
°          for displaying UCB information for DASD devices.  Also, the C
°          command  allows  an MVS console operator running in a virtual
°          chine under VM/SP, VM/SP HPO or the VM/XA migration aid to  i
°          CP commands and get the response back to the console invoking
°          command.

°          The OSCMD Command

°          OSCMD allows you to issue any MVS command (JES2, VTAM, etc.).
°          OSCMD  is  issued  on a command line, the response is returne
°          the terminal.  However, OSCMD is most useful when issued  fro
°          CLIST,  where  the  response is returned to CLIST variables.
°          CLIST can be designed to manipulate these  variables  to  pro
°          readable responses to the user.  For example, the JES command
°          queries  the  status  of all jobs on the system.  The output
°          $DN could be filtered so that the  information  will  be  pri
°          only for certain job names.

°          The syntax of OSCMD is

°               OSCMD mvs-cmd

°          where mvs-cmd is any MVS command.  Input and output variables
°          described in Appendix A.

°          Authority Checking with OSCMD

°          Because  OSCMD allows a TSO user to issue any MVS command, st
°          security must be enforced to prevent unauthorized users from
°          suing   dangerous   system   commands.      When  issued  fro
°          TSSO-initiated CLIST, OSCMD checks the authority of the  invo
°          console  and only permits commands of that level.  When issue
°
¯
°          TRS-85-xx
°          Issue 1, date
°          TSSO User's Guide
¸
°          a TSO user, OSCMD checks the installation authority of the us
°          ID.  By default, all TSO users have INFO-only  authority.
°          authority can be granted on a per-user basis.

°          Examples

°          (compare and contrast CLIST and nonCLIST use)

°          The OSWTO and OSWTOH Commands

°          OSWTO and OSWTOH allow you to write messages to the operator
°          sole.   OSWTOH highlights the message.  These commands can be
°          sued only from a TSSO-initiated CLIST,  since  the  send  com
°          allows you to send messages to the operator under TSO.

°          The syntax of the commands is

°               OSWTO message
°               OSWTOH message

°          where message is the text of the message issued.

°          Examples

°          The OSASK Command

°          OSASK  allows  you  to  ask the operator a question and get a
°          sponse.  If it is issued from a TSO command  line,  the  resp
°          goes  to the user's terminal.  However, like OSCMD, OSASK is
°          useful when issued from a CLIST, where the response  is  retu
°          to  CLIST  variables which can then be manipulated.  So that
°          is not delayed too long for an operator reply, the  maximum
°          time   is  60  seconds,  after  which  the  default  response
°          "NOREPLY".

°          The syntax of OSASK is

°               OSASK question

°          Input and output variables are described in Appendix A.

°          Examples

°          The OSPAUSE Command

°          to be supplied
¸

°          18
¯
°                                                                  TRS-8
°                                                              Issue 1,
°                                                          TSSO User's G
¸
°          Using the WRITE Statement in TSSO CLISTs

°          In previous releases of TSSO, operator commands  and  highlig
°          messages  could only be issued using the WRITE statement with
°          *COM and *HI keywords.  These facilities still work under rel
°          4.2, and CLISTs written with them can be used  unaltered.
°          ever,  note  that the difference between these facilities and
°          commands OSCMD, OSWTO, OSWTOH, and OSPAUSE is that TSSO proce
°          *COM and *HI directives after the CLIST  has  completed,  whe
°          the TSSO commands will be executed immediately.  Care must th
°          fore  be taken in designing CLISTs with *COM and *HI, because
°          TSO commands in the CLIST are executed before  any  MVS  comm
°          are issued by TSSO.

°          The   *COM   and   *HI  facilities  are  available  only  thr
°          TSSO-initiated CLISTs.

°          *COM Keyword

°          The *COM keyword used in the WRITE statements also enables yo
°          issue MVS commands.  When an output line in the  SYSTSPRT  ou
°          stream (the output from the TSO command or CLIST) begins with
°          keyword "*COM", TSSO will execute the remainder of that state
°          as  an  MVS operator command.   The syntax of this extended W
°          statement is

°               WRITE *COMnnn oscmd

°               where

°               nnn     is a delay factor directing TSSO to delay  nnn
°                       onds  after  processing the command.  This is us
°                       when operating system commands have a  time  dep
°                       ency on each other.

°               oscmd   is an MVS operator command to be executed.  The
°                       mand  could  be an MVS command, JES command, or
°                       another TSSO command.  Note that the command wil
°                       executed with the authority of the console that
°                       ginally invoked the TSSO command.

°          *HI Keyword

°          The *HI keyword allows you to write highlighted messages  on
°          MVS console.  The syntax is

°               WRITE *HI message

°          where  message  is  the message to be highlighted on the MVS
°          sole.
°
¯
°          TRS-85-xx
°          Issue 1, date
°          TSSO User's Guide
¸
°          Example

°                  PROC 0
°                  /****************************************************
°                  /* This CLIST will bring up the system address
°                  /* spaces related to VTAM. Note that delays are used
°                  /* achieve proper timing
°                  /****************************************************
°                  WRITE *COM30 S NETWORK    /* START THE NETWORK
°                  WRITE *COM3 S TSO         /* START TCAS
°                  WRITE *COM $SLOGON1
°                                            /* NOTE THAT COMMENTS CANNO
°                                            /* PLACED ON THE SAME LINE
°                                            /* JES2 COMMANDS
°                  EXEC 'SYS1.TSSOPROC(SLINES)' /* START JES2 LINES
°                  WRITE *HI TSSN001I NETWORK INITIALIZED
°                                               /* SEND MSG TO CONSOLE
°                                               /* AND HILIGHT IT
°                  EXIT

°          Guidelines and Suggestions for Writing CLISTs

°          1.  CLISTs can be used to write operator HELP procedures  to
°              MVS console.  This is demonstrated in the following CLIST

°                      PROC 0
°                      /************************************************
°                      /* This CLIST will provide HELP information to th
°                      /* operator on the current status of the NJE LINE
°                      /* between JES2 systems
°                      /************************************************
°                      WRITE NJE LINK BETWEEN A and B is line 12
°                      WRITE NJE LINK BETWEEN A and C is line 16
°                      WRITE NJE LINK BETWEEN B and C is line 20
°                      WRITE NJE LINK BETWEEN C and A is line 19
°                      WRITE NJE LINK BETWEEN C and B is line 24
°                      WRITE NJE LINK BETWEEN B and A is line 13
°                      WRITE
°                      WRITE This list is current as of January 3, 1985.
°                      WRITE assistance, contact Alan Grossman at extens
°                      EXIT CODE(0)

°          2.  The REPLY command is useful in CLISTS to automate operati
°              procedures  with  products  that  communicate to the oper
°              through the WTOR interface (e.g., NCCF and IMS).   For  e
°              ple,  if numerous NCCF commands are to be executed, these
°              be executed in a TSSO CLIST using the REPLY command with
°              sage ID DSI802A. See the description of the REPLY command
°              Appendix A.

°          20
¯
°                                                                  TRS-8
°                                                              Issue 1,
°                                                          TSSO User's G
¸
°          3.  Comments may be placed at the end of MVS commands because
°              treats  them  as  MVS command comments.  However, JES2 tr
°              CLIST comments as data and tries to use them in  forming
°              command.  Therefore, do not place CLIST comments on JES2
°              mands;  place  them  on the lines following the command.
°              example, the following CLIST  is  invalid  because  it  w
°              produce an invalid JES2 command.

°                      PROC 0
°                      WRITE *COM $TEXIT6,ENABLE  /* ENABLE THE EXIT */
°                      EXIT

°              This  situation  is remedied in MVS/SP JES2 Release 1.3.6
°              MVS/XA JES2 Release 2.1.5.  The example on page x shows
°              ments for both MVS and JES2 commands.

°          4.  Symbolic substitution can be used in TSSO CLISTS as shown
°              low.

°                      PROC 2 UNIT VOLSER USE()
°                      /*****************************************/
°                      /* This CLIST will mount MVS volumes     */
°                      /* using a command in operator friendly  */
°                      /* syntax. Note the optional PUBLIC      */
°                      /* parameter.                            */
°                      /*****************************************/
°                      WRITE *COM3 VARY &UNIT,ONLINE
°                      IF &USE = THEN +
°                      DO
°                        WRITE *COM MOUNT &UNIT,VOL=(SL,&VOLSER)
°                      END
°                      ELSE +
°                      DO
°                        WRITE *COM MOUNT &UNIT,VOL=(SL,&VOLSER),USE=&US
°                      END
°                      WRITE *HI MNT001I VOLUME &VOLSER NOW MOUNTED ON &
°                      WRITE *COM D U,,,&UNIT,1
°                      EXIT

°          5.  Since operations personnel will be using OPF, the recomme
°              tion is to allow them to write their own CLISTS.

°          6.  TSSO CLISTS are invoked in the same fashion as TSSO comma
°              The  normal  TSO search sequence is followed. The recomme
°              tion is to allocate a SYS1.TSSOPROC data set and allocate
°              to  DDNAME SYSPROC in the TSSO bringup deck. The SYSPROC
°              set may also be dynamically allocated through the  TSO  A
°              CATE command. Lastly, the TSO EXEC command may be used to
°              ecute TSSO CLISTS.

°
¯
°          TRS-85-xx
°          Issue 1, date
°          TSSO User's Guide
¸
°          7.  Use  OSWTOH and WRITE *HI with caution. Do not highlight
°              sages unless their importance warrants it, because your o
°              ations staff will learn to ignore highlighted  messages,
°              this can be harmful to your overall system operations.
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸

°          22
¯
°                                                                  TRS-8
°                                                              Issue 1,
°                                                          TSSO User's G
¸
°          TSSO AUTOMATED OPERATIONS FACILITY

°          INTRODUCTION

°          A  high percentage of MVS commands are issued in response to
°          tem or subsystem messages, and these responses are  predeterm
°          by  the  contents of the messages.  The TSSO Automated Operat
°          Facility (AOF) frees the MVS console operator from routine  t
°          by  automating  responses  to  system messages.   AOF is a ta
°          driven monitor that intercepts messages and carries  out  one
°          four  actions:  suppresses, highlights, or lowlights the mess
°          or issues an MVS, JES2 or subsystem command.   Because  AOF
°          not require the services of the TSSO address space, any numbe
°          messages can be processed simultaneously.

°          There are three steps required to install this facility; brie

°          1.  Create the AOF table.

°          2.  Assemble and link-edit the table into load module format.

°          3.  Store the module in SYS1.TSSOLOAD.

°          These steps are described in detail below.

°          Note  that  the  table can be updated at any time.  Also, you
°          create multiple tables, although only one  can  be  active  a
°          time.    Multiple  tables may be useful so that different set
°          commands can be used at different times (e.g., first, second
°          third shifts).  You can change the active table in two ways:

°          1.  By  changing  the TABLE= parameter in the parameter deck;
°              new table will be available the next time TSSO is brought

°          2.  By dynamically reloading the table with the  "#.RELOAD"
°              mand; the new table will be available immediately.

°          CREATING THE AOF TABLE

°          There are three macros required to create the table:  TABSTAR
°          start  the  table,  TABENTRY  to specify actions on messages,
°          TABEND to end the table.

°          TABSTART is always the first macro  and  can  be  specified
°          once.  It takes the form

°               loadname TABSTART ID=table-id

°
¯
°          TRS-85-xx
°          Issue 1, date
°          TSSO User's Guide
¸
°          where  loadname is the name of this TSSO table and table-id i
°          eye-catching name to identify the table in a dump.  table-id
°          also be displayed on the DISPAOF and .QT commands.  The  load
°          label is used as the CSECT name and must be used as the load
°          ule name.

°          TABEND is always the last macro, signifying the end of the ta
°          TABEND  must be present; otherwise, unpredictable things may
°          pen, none of them pleasant.

°          TABENTRY  macros  are  entered  between  TABSTART   and   TAB
°          TABENTRY  macros  generate  entries in the AOF table and take
°          form

°               TABENTRY MSG=msg-id,ACTION=action
°                          {,TEXT='operator-cmd'}
°                          {,TEXT=(condition)}
°                          {,MATCHLIM=n}
°                          {,ECHO={YES/NO/LOG}}

°          A sample AOF table, demonstrating most  of  the  capabilities
°          TSSO/AOF  and  all  forms  of  the  TABENTRY  macro,  is  in
°          TSSO.VERS42.ASM data set in member AOFIVP.

°          TABENTRY OPERANDS

°          The MSG Operand

°          MSG identifies an MVS, JES2, or subsystem message as  defined
°          MVS/XA  System  Messages  (GC28-1376  and  -1377)  or its MVS
°          equivalent.  msg-id is the first seven or eight characters of
°          console message.  msg-id may also be an asterisk (*), which
°          match on all console messages.  MSG=* is useful with the TEST
°          erand described later.

°          The ACTION Operand

°          The  following actions may be taken in response to the identi
°          message:

°          1.  Suppress (i.e., do not print) the  message  at  the  cons
°              The macro takes the form

°              TABENTRY MSG=msg-id,ACTION=SUPPRESS

°          2.  Highlight  the  message  at the console.   This is useful
°              highlighting important messages.  The macro takes the for

°              TABENTRY MSG=msg-id,ACTION=HILIGHT
°          24
¯
°                                                                  TRS-8
°                                                              Issue 1,
°                                                          TSSO User's G
¸
°          3.  Lowlight the message at the console.  This reverses  the
°              tensity  of  MVS messages that are automatically highligh
°              The macro takes the form

°              TABENTRY MSG=msg-id,ACTION=LOWLIGHT

°          4.  Reply to a Write to Operator with Reply (WTOR) message.
°              macro takes the form

°              TABENTRY MSG=msg-id,ACTION=REPLY,TEXT='reply-text'

°              where reply-text is the text of the reply; TSSO will auto
°              ically format the reply message as R msg-no,reply-text.
°              that msg-id must be a WTOR message.

°          5.  Issue  an  operator  command in response to a message and
°              tract part of the message to use in the command.   The  m
°              takes the form

°              TABENTRY MSG=msg-id,ACTION=OSCMD,TEXT='operator-cmd'

°              operator-cmd  can  be an MVS command, JES2 command, TSSO
°              mand, or TSSO CLIST.   Rules for coding  TEXT  are  descr
°              later.

°          6.  Print  an operator command at the console rather that exe
°              it. This allows you to test an operator command that  res
°              from  a  TABENTRY  before executing it.   The macro takes
°              form

°              TABENTRY MSG=msg-id,ACTION=OSCMDT,TEXT='operator-cmd'

°              The rules are the same as for OSCMD above.

°          7.  Carry out the specified action if and  only  if  the  mes
°              meets  certain  conditions, such as matching a particular
°              name.  To do this, include the TEST operand in your  TABE
°              macro as follows:

°              TABENTRY MSG=msg-id,ACTION=action
°                              TEST=(condition)
°                              {TEXT='operator-cmd'}

°              where condition tests portions of the message by substrin
°              word.  Rules for coding the TEST operand are described la

°              NOTE:  TEXT  can only be used if ACTION=OSCMD, OSCMDT, or
°                     PLY.

°
¯
°          TRS-85-xx
°          Issue 1, date
°          TSSO User's Guide
¸
°          There is no limit on the number of TABENTRY macros  that  may
°          specified  in  a given AOF table. Note that TSSO will process
°          of the entries in the TSSO/AOF table for every WTO or  WTOR
°          sage.   This implies that multiple ACTION= operands may be sp
°          fied for the same msg-id, by specifying multiple TABENTRY mac
°          TSSO does not stop after processing one  ACTION=  directive,
°          continues until the end of the table.

°          The TEXT Operand

°          The  OSCMD action allows you to specify an operator command t
°          performed in response to a particular message.   Optionally,
°          may  select one or more portions of the message to include in
°          command.  This is useful for extracting  a  data  set  name,
°          name,  or other variable information from a message and embed
°          it in the command to be executed.  The two formatting options
°          the  TEXT parameter allow you to extract this information by
°          string or by word.

°          To select information by substring, use the format

°               \Snnn,yy\

°          where nnn is the starting character position and yy is the nu
°          of characters to select.  For example, suppose you want to re
°          the text of /*MESSAGE cards whenever they are encountered in
°          job stream.  JES2 issues a $HASP104 message, and you want to
°          ture  characters  1  through  72 of the card.  Thus, the TABE
°          would look like this:

°               TABENTRY MSG=$HASP104,ACTION=OSCMD,TEXT='#RECMSG MSG(''\

°          Note that nnn must be left-padded with zeroes.

°          To select information by word, use the format

°               \Wabcdnn\

°          where a, b, c, and d define the word separator characters, an
°          identifies the word's position.  A word can be a  maximum  of
°          characters.  For example, given the message

°               IEF176I WTR 1A4 WAITING FOR WORK ...

°          you might want to purge the writer 1A4 with the command

°               PURGE 1A4
¸
°          26
¯
°                                                                  TRS-8
°                                                              Issue 1,
°                                                          TSSO User's G
¸
°          To  do this, you want to extract the third word from the mess
°          which identifies the external writer name.   Thus,  the  TABE
°          macro would look like this:

°               TABENTRY MSG=IEF176I,ACTION=OSCMD,TEXT='PURGE \W    03\'

°          Note that if you do not need to define four separator charact
°          you must pad the field with blanks.  Also, nn must be left-pa
°          with a zero.

°          Multiple "S" and "W" options can be used in one TEXT operand.
°          AOF  detects an error in the TEXT parameter as a result of a
°          W option, a message is issued and processing is terminated.

°          The TEST Operand

°          The TEST operand allows you to respond selectively to message
°          "testing" the text.  For example, when payroll jobs complete,
°          may want to highlight the message, whereas  you  want  to  ig
°          other  job  completion messages.   The TEST operand allows yo
°          match on message text by substring or word.

°          To match by substring, use the format

°               (S,nnn,yy,'literal-string')

°          where you want to find the character string literal-string st
°          ing in character position nnn for a length of yy characters.
°          example, (S,32,07,'PAYROLL') would look for PAYROLL in  chara
°          positions 32 through 38.

°          To match by word order, use the format

°               (W,nn,yy,'literal-string','abcd')

°          where  you  want  to  find the character string literal-strin
°          word number nn with a word length of yy characters; and a, b,
°          and  d  define  the  word  separator  characters.    For exam
°          (W,03,07,'PAYROLL',', ') would look for PAYROLL as the third
°          with seven characters separated by blanks or commas.

°          Thus, the whole TABENTRY macro for our example could be eithe

°               TABENTRY MSG=$HASP395,ACTION=HILITE,TEST=((S,32,07,'PAYR
°          or
°               TABENTRY MSG=$HASP395,ACTION=HILITE,TEST=((W,03,07,'PAYR

°          It is possible to test on all WTO or WTOR messages by  specif
°          MSG=*.   For example, if you want to highlight all JES end-of
°          messages, you would test for a first word of $HASP and  a  se
°
¯
°          TRS-85-xx
°          Issue 1, date
°          TSSO User's Guide
¸
°          word (i.e., job name) of ENDOFDAY.  The TABENTRY macro would
°          like this:

°               TABENTRY MSG=*,ACTION=HILIGHT,
°                    TEST=((W,1,5,'$HASP',' '),(W,2,7,'ENDOFDAY',' '))

°          Notes on the TEST Operand

°          1.    Each  TEST  condition, as well as the entire TEST param
°              list, must be enclosed in parentheses.

°          2.  There are multiple way to do the same test, as shown  in
°              examples  above.  However, it is generally easier to matc
°              words rather than substrings.

°          3.  "Logical and" and "logical or" test conditions  can  be
°              structed with the TEST operand.

°              a.  To  construct a "logical and", specify all the condit
°                  to be met in one TEST operand:

°                  TEST=((condition1),(condition2),(condition3))

°              b.  To construct a "logical or",  specify  multiple  TABE
°                  macros  with  the same MSG, ACTION, and TEXT operands
°                  with different TEST operands:

°                  TABENTRY MSG=msg-id,ACTION=action,TEST=((condition1))

°                  TABENTRY MSG=msg-id,ACTION=action,TEST=((condition2))

°                  TABENTRY MSG=msg-id,ACTION=action,TEST=((condition3))

°          4.  When using the TEST operand, TABENTRY  macros  can  be  q
°              lengthy.   To continue a macro on the next line, enter an
°              in column 72.   Since the TABENTRY  macro  follows  the
°              ventions  for  the IBM assembler language, the next line
°              continuation must start in column 16. Note that blank cha
°              ters are not permitted, except if they are  inside  quota
°              marks.

°          The MATCHLIM Operand

°          MATCHLIM  specifies  the  maximum  number  of  times a partic
°          action can be executed during a  TSSO  session  (?).    When
°          MATCHLIM value is exceeded, ?

°          For example, if VTAM crashes you may want TSSO to issue a res
°          procedure immediately.

°          28
¯
°                                                                  TRS-8
°                                                              Issue 1,
°                                                          TSSO User's G
¸
°               TABENTRY MSG=?,ACTION=OSCMD,TEXT=?

°          You  may,  however,  want  to limit the number of restarts in
°          event VTAM has a serious problem that is not solved by a rest

°               TABENTRY MSG=?,ACTION=OSCMD,TEXT=?,MATCHLIM=2

°          The ECHO Operand

°          Specifying ECHO=YES will echo the command or reply  of  the
°          operand to the console before the action is executed.  Specif
°          ECHO=LOG  will  echo the command or reply in the system log.
°          default is ECHO=NO.

°          ASSEMBLING AND LINK-EDITING THE TABLE

°          Assemble and link edit your AOF table into load  module  form
°          submitting   a   batch   job   similar   to  the  sample  in
°          TSSO.VERS42.ASM data set, member ASMTABLE.  You may tailor a
°          of this data set to your specifications as follows:

°          1.  Include the appropriate installation-dependent informatio
°              the JOB card.

°          2.  Change the SYSIN DD card to point to your AOF table.

°          3.  Change the load library name in the LKED.SYSLMOD step to
°              of your choice. (Optional)

°          4.  Change the NAME statement in the linkage editor control c
°              to match the label on the TABSTART macro in your AOF tabl

°          Note that the Assembler parameters RENT and NOALIGN must be p
°          ent.

°          A return code of 0 indicates that the assembly was successful

°          STORING THE MODULE

°          When  the table assembly is successful, copy the load module
°          TSSO.VERS42.LOAD  (or  the  appropriate  data   set)   into
°          SYS1.TSSOLOAD  data set.   To activate the new AOF table, use
°          procedures as described previously in this document.
¸

°
¯
°          TRS-85-xx
°          Issue 1, date
°          TSSO User's Guide
¸
°          RECOVERY PROCEDURES

°          TSSO operates as a proper subsystem under MVS. Because  of  t
°          it  can  run without support of a Job Entry Subsystem or comm
°          cations subsystem.  Therefore, TSSO will initialize even  if
°          or VTAM will not.  Through the use of several command process
°          TSSO provides facilities for repairing critical MVS files or
°          modules in the event a subsystem does not initialize.

°          The  EF  command  allows  the MVS console operator to perform
°          edit commands on the file allocated to DDNAME "EDITFILE".
°          DDNAME  could  have  been pre-allocated through the ALLOCATE
°          mand.  The syntax of the EF command is

°               EF (;cmd1;cmd2;cmd3...;cmdn)

°          where cmd1 ...cmdn are TSO EDIT commands.

°          The PDS command* allows you to rename, delete or otherwise ma
°          ulate  members of a partitioned data set.  The PDS command of
°          a wide range of facilities and can be used to recover from a
°          riety of subsystem problems.

°          Lastly, you can also use the standard TSO facilities, such as
°          ALLOCATE  command,  to correct JCL or other initialization er
°          in major subsystems.  The full range of TSO commands  are  av
°          able to assist in problem resolution.
¸
¸
¸
¸
¸
¸
°          ¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿

°          *A public domain  TSO  facility  written  by  Bruce  Leland
°          Hitachi.
°          30
¯
°                                                                  TRS-8
°                                                         Issue 1, July
°                                         Appendix A. TSSO Command Refer
¸
°          APPENDIX A. TSSO COMMAND REFERENCE

°          This  appendix describes the TSO command processors that are
°          tributed with  TSSO.    Unless  otherwise  noted,  these  com
°          processors can be issued by TSO users as well as the TSSO sub
°          tem.    The  commands  are  documented one-to-a-page for easy
°          sertion into existing operator procedure books.
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
°
¯
°          CACHE                       TRS-85-05                       C
°                                 Issue 1, July 1985
°                         Appendix A. TSSO Command Reference
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸

°          A-32
¯
°          CACHE                       TRS-85-05                       C
°                                 Issue 1, July 1985
°                         Appendix A. TSSO Command Reference
¸
°          NAME:  CACHE

°          AVAILABLE UNDER TSO:  Yes

°          DESCRIPTION

°               The  CACHE  command  controls  the  operation  of   3880
°               3880-21,  3880-13 or 3880-23 cache devices from the MVS
°               sole.  As distributed by IBM, software support for these
°               vices is contained in the IDCAMS program available with
°               the MVS console operator cannot control or  even  query
°               device.    The  CACHE command will format an IDCAMS comm
°               attach IDCAMS, and  write  the  results  using  the  PUT
°               interface.    When issued under TSSO, these results are
°               displayed on the MVS console.

°          SYNTAX

°               CACHE cache-device {action} {SUBSYS} {LEGEND}

°          PARAMETERS

°               cache-device   A 3-digit UCB address or a 6-character vo
°                              serial.

°               action         Action to be performed by the CACHE comma

°                              ON       Format the appropriate  IDCAMS
°                                       mand  (SETCACHE)  to  turn the c
°                                       unit on.

°                              OFF      Format the appropriate  IDCAMS
°                                       mand  (SETCACHE)  to  turn the c
°                                       unit off.

°                              LIST     Format a LISTDATA  command  to
°                                       cache statistics (e.g., READ hit
°                                       tio).

°                              STATUS   (default)  Provide  information
°                                       cerning the current  status  of
°                                       cache device.
¸

°
¯
°          CACHE                       TRS-85-05                       C
°                                 Issue 1, July 1985
°                         Appendix A. TSSO Command Reference
¸
°               SUBSYS         Provide  information about the entire 335
°                              3380 string.

°               LEGEND         Provide a verbose description of  the  fo
°                              of  the IDCAMS output.  (This is probably
°                              appropriate for display at the console.)

°          Issuing Other Commands through IDCAMS with CACHE

°               There are some commands that you may want to  issue  to
°               cache  controller  through  IDCAMS that are not supporte
°               this command.  For these occasions, an alternate form of
°               CACHE command is provided.

°                    CACHE * CMD('idcams-cmd')

°               where idcams-cmd is any command accepted by  IDCAMS.
°               can  be a cache command, such as BINDDATA, or a command
°               has nothing to do with cache devices, such as LISTC.

°          EXAMPLES

°               Example 1.  Turn on the cache device for the volume  at
°                           263.

°                           CACHE 263 ON

°               Example 2.  Turn off volume JESSPL to the cache device.

°                           CACHE JESSPL OFF

°               Example 3.  Turn volume PGMPRO on to the cache device.

°                           CACHE PGMPRO ON

°               Example 4.  Print  status  information  for the cache de
°                           covering volume PGMPRO.

°                           CACHE PGMPRO

°               Example 5.  Print status information for all volumes cov
°                           by the cache device covering volume PGMPRO.
¸
°          A-34
¯
°          CACHE                       TRS-85-05                       C
°                                 Issue 1, July 1985
°                         Appendix A. TSSO Command Reference
¸

°                           CACHE PGMPRO SUBSYS

°               Example 6.  Print statistics for the  cache  device  at
°                           265.

°                           CACHE 265 LIST

°               Example 7.  Issue  the  IDCAMS  LISTC command and return
°                           reply to the invoking console.

°                           CACHE * CMD('LISTC')
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
°
¯
°          CPCMD                       TRS-85-05                       C
°                                 Issue 1, July 1985
°                         Appendix A. TSSO Command Reference
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸

°          A-36
¯
°          CPCMD                       TRS-85-05                       C
°                                 Issue 1, July 1985
°                         Appendix A. TSSO Command Reference
¸
°          NAME:  CPCMD

°          AVAILABLE UNDER TSO:  Yes

°          DESCRIPTION

°               The CPCMD command allows the MVS operator of a  virtual
°               chine  to  issue  CP commands on a VM/SP, VM/SP HPO or V
°               system.   Any CP command of  the  appropriate  CP  privi
°               class  is allowed.   The response of the command is retu
°               to the invoking console.  Note that this command  will
°               function under TSO and return the response to the CP com
°               to the invoking TSO user.

°          SYNTAX

°               CPCMD cp-cmd

°          PARAMETERS

°               cp-cmd    Any VM CP command.

°          EXAMPLES

°               Example 1.  Issue  the CP QUERY NAMES command and return
°                           response to the invoking console.

°                           CPCMD QUERY NAMES

°               Example 2.  Direct VM to attach the device  at  3F0  to
°                           virtual  machine configuration at virtual de
°                           3F0.

°                           CPCMD ATTACH 3F0 * 3F0

°                           Note that the device must also be varied on-
°                           by the MVS operator.   The MVS  virtual  mac
°                           would  need command privilege class "B" to i
°                           this command.
¸
¸
°
¯
°          DISPAOF                     TRS-85-05                     DIS
°                                 Issue 1, July 1985
°                         Appendix A. TSSO Command Reference
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸

°          A-38
¯
°          DISPAOF                     TRS-85-05                     DIS
°                                 Issue 1, July 1985
°                         Appendix A. TSSO Command Reference
¸
°          NAME:  DISPAOF

°          AVAILABLE UNDER TSO:  Yes

°          DESCRIPTION

°               The DISPAOF command displays the contents of TSSO/AOF ta
°               which control the operation of the TSSO Automated Operat
°               Facility.  The DISPAOF command can query either  the  ac
°               TSSO/AOF table or a table that has been assembled and is
°               siding  on  DASD.   By default, DISPAOF will display all
°               tries in  the  running  TSSO/AOF  table.    The  informa
°               displayed  includes  the  TSSO/AOF table name, ID parame
°               date and time assembled, and TSSO version number.  For
°               message  displayed,  the  table entry number, MSG ID, AC
°               directive and ACTION TEXT will be displayed.    TEST  co
°               tions  will  not  be  displayed unless the TEST paramete
°               specified.  Optionally, the display can be  limited  to
°               lected message IDs.

°               Information about alternate TSSO/AOF tables can be displ
°               by  using  the table-name parameter.   Alternate tables
°               previously have been assembled and placed  (in  load  mo
°               form) into the SYS1.TSSOLOAD dataset.

°          SYNTAX

°               DISPAOF {ENTRY(entry-id)}
°               {MSG(msg-id)} {TABLE(table-name)} {TEST}

°          PARAMETERS

°                                   The entry number of the AOF table ma

°               MSG(msg-id)         A  1-  to 8-character message identi
°                                   specified in the TSSO/AOF TABENTRY m
°                                   MSG parameter.

°               TABLE(table-name)   An alternate TSSO AOF table name.
°                                   table  must  previously have been as
°                                   bled and available to TSSO.

°               TEST                For each message, display any TEST
°                                   ditions that exist.
¸
°
¯
°          DISPAOF                     TRS-85-05                     DIS
°                                 Issue 1, July 1985
°                         Appendix A. TSSO Command Reference
¸
°          EXAMPLES

°               Example 1.  Display the running TSSO/AOF table with all
°                           sage IDs, action directives, and action text

°                           DISPAOF

°               Example 2.  Display  all entries in the running TSSO/AOF
°                           ble with a message ID of $HASP395.

°                           DISPAOF MSG($HASP395)

°               Example 3.  Display all entries and all test  conditions
°                           the running AOF table for message ID $HASP35

°                           DISPAOF MSG($HASP350) TEST

°               Example 4.  Display  all entries and all test conditions
°                           message IKT021D in load module AOFNEW.

°                           DISPAOF MSG(IKT021D) TABLE(AOFNEW) TEST

°               Example 5.  Display the third entry in the active AOF ta

°                           DISPAOF ENTRY(3)
¸
¸
¸
¸
¸
¸
¸
¸

°          A-40
¯
°          LINKLIST                    TRS-85-05                    LINK
°                                 Issue 1, July 1985
°                         Appendix A. TSSO Command Reference
¸
°          NAME:  LINKLIST

°          AVAILABLE UNDER TSO:  Yes

°          DESCRIPTION

°               The LINKLIST command displays the list of the data  sets
°               the  current MVS LNKLST concatenation.  This command is
°               valid in an MVS/XA environment, because the  information
°               not available in MVS/370.

°          SYNTAX

°               LINKLIST
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸

°
¯
°          OSASK                       TRS-85-05                       O
°                                 Issue 1, July 1985
°                         Appendix A. TSSO Command Reference
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸

°          A-42
¯
°          OSASK                       TRS-85-05                       O
°                                 Issue 1, July 1985
°                         Appendix A. TSSO Command Reference
¸
°          NAME:  OSASK

°          AVAILABLE UNDER TSO:  Yes

°          DESCRIPTION

°               OSASK  allows  you  to ask the operator a question and g
°               response.  If it is issued from a TSO command line, the
°               sponse  goes to the user's terminal.  If it is issued fr
°               CLIST, the response goes to CLIST variables (see below).

°          SYNTAX

°               OSASK question

°          PARAMETERS

°               question    Question to be sent to the operator's consol

°          CLIST VARIABLES

°               Variable    Definition

°               REPLYWAIT   The number of seconds you are  willing  to
°                           for  a  reply  to  the question.   This can
°                           value from 1 to 60; default is 60.

°               REPLY       Text of the reply to the question.

°               REPLYW      The number of words in the operator's reply.

°               REPLYWn     The nth word of the reply.

°          EXAMPLES

°               Example 1.
¸
¸

°
¯
°          OSCMD                       TRS-85-05                       O
°                                 Issue 1, July 1985
°                         Appendix A. TSSO Command Reference
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸

°          A-44
¯
°          OSCMD                       TRS-85-05                       O
°                                 Issue 1, July 1985
°                         Appendix A. TSSO Command Reference
¸
°          NAME:  OSCMD

°          AVAILABLE UNDER TSO:  Yes

°          DESCRIPTION

°               OSCMD allows you to  issue  any  MVS  command  (JES2,  V
°               etc.).    If  it is issued from a TSO commmand line, the
°               sponse is returned to the terminal.  If it is issued fro
°               CLIST, the response goes to the CLIST variables (see bel
°               Note that, when OSCMD is issued from a TSSO-initiated CL
°               OSCMD  checks the authority of the invoking console and
°               permits commands of that level.  When issued by a TSO  u
°               OSCMD  checks  the  installation authority of the user's
°               By default, all TSO users have INFO-only authority; full
°               thority can be granted on a per-user basis.

°          SYNTAX

°               OSCMD mvs-cmd

°          PARAMETERS

°               os-cmd      Any MVS command.

°          CLIST VARIABLES

°               Input Variables    Definition

°               CMDWAIT=nn         Maximum number of second you are  wil
°                                  to wait for the command to finish.  n
°                                  a  value  from  1 to 60; default is 2
°                                  nonCLIST execution.  If the CMDWAIT v
°                                  is exceeded, the only  response  retu
°                                  will be an echo of the original OSCMD

°               MAXCMDOUT=nnn      Maximum  number  of lines of response
°                                  want returned from the command.  nnn
°                                  value from 1 to 200; default is  200
°                                  nonCLIST  execution.    If  the MAXCM
°                                  variable is omitted, OSCMD will issue
¸

°
¯
°          OSCMD                       TRS-85-05                       O
°                                 Issue 1, July 1985
°                         Appendix A. TSSO Command Reference
¸
°                                  command and return immediately,  assu
°                                  that no response is desired.

°               Output Variable     Definition

°               CMDOUT              The number of lines returned by the
°                                   sage.

°               CMDOUTn             The nth line returned by the message
°                                   is  a  value  from  1 to 200; defaul
°                                   200.
°                                   NOTE:  CMDOUT1 is always an echo of
°                                   original command.

°               CMDOUTmW0           The number of words in the mth line.

°               CMDOUTmWn           The mth line, the nth word in the li

°          EXAMPLES

°               Example 1.
¸
¸
¸
¸
¸
¸
¸
¸
¸
°          A-46
¯
°          OSPAUSE                     TRS-85-05                     OSP
°                                 Issue 1, July 1985
°                         Appendix A. TSSO Command Reference
¸
°          NAME:  OSPAUSE
¸
°          DESCRIPTION

°               OSPAUSE  delays  processing  of  a command for the speci
°               number of seconds.  Uses?

°          SYNTAX

°               OSPAUSE

°          PARAMETERS

°          EXAMPLES
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸

°
¯
°          OSWTO and OSWTOH            TRS-85-05            OSWTO and OS
°                                 Issue 1, July 1985
°                         Appendix A. TSSO Command Reference
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸

°          A-48
¯
°          OSWTO and OSWTOH            TRS-85-05            OSWTO and OS
°                                 Issue 1, July 1985
°                         Appendix A. TSSO Command Reference
¸
°          NAME:  OSWTO and OSWTOH

°          AVAILABLE UNDER TSO:  No

°          DESCRIPTION

°               OSWTO and OSWTOH allow you to write messages to  the  op
°               tor's  console.   OSWTOH highlights the message.  These
°               mands can be issued only from a TSSO-initiated CLIST.

°          SYNTAX

°               OSWTO message

°               OSWTOH message

°          PARAMETERS

°               message     The text of the message to be sent to the op
°                           tor.

°          EXAMPLES

°               Example 1.
¸
¸
¸
¸
¸
¸
¸

°
¯
°          REPLY                       TRS-85-05                       R
°                                 Issue 1, July 1985
°                         Appendix A. TSSO Command Reference
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸

°          A-50
¯
°          REPLY                       TRS-85-05                       R
°                                 Issue 1, July 1985
°                         Appendix A. TSSO Command Reference
¸
°          NAME:  REPLY

°          AVAILABLE UNDER TSO:  Yes

°          DESCRIPTION

°               The REPLY command is used to reply to MVS WTOR messages
°               ter  the  WTOR  has appeared on the MVS console.* You do
°               need to know the MVS reply number to respond  to  the  W
°               The REPLY command can, therefore, be used to automate op
°               tional  procedures with products that communicate to the
°               erator through the WTOR interface (e.g., NCCF, IMS, GDDM

°          SYNTAX

°               REPLY MSG(msg-id) TEXT(reply-text)

°          PARAMETERS

°               MSG(msg-id)       The  message  you  are  replying to (e
°                                 DSI802A)

°               TEXT(reply-text)  The text of the reply you wish to give
°                                 response to the WTOR.

°          Notes on Using REPLY with IMS/VS

°               There  are  some installations that run multiple version
°               the IMS/VS program product.  All of the subsystems issue
°               same message ID as a WTOR.  For these installations, an
°               ternate form of the REPLY command is available to direct
°               plies to the correct IMS subsystem:

°                    REPLY IMS(ims-id) TEXT(reply-text)
¸

°          ¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿

°          *Contrast this to the ACTION=REPLY directive in  TSSO/AOF,  w
°          replies  to  messages  the  instant  they  are generated.   T
°          TSSO/AOF and the REPLY command combine to give full  coverage
°          automating responses to MVS WTORs.
¸
°
¯
°          REPLY                       TRS-85-05                       R
°                                 Issue 1, July 1985
°                         Appendix A. TSSO Command Reference
¸
°               where  ims-id  is the name of the IMS subsystem to which
°               wish to direct the response, and reply-text  is  as  def
°               above.  In this way IMS procedures can be automated.

°          EXAMPLES

°               Example 1.  Shut down the NCCF program product.

°                           REPLY MSG(DSI802A) TEXT('CLOSE IMMED')

°               Example 2.  Reply to message USRWT01.

°                           REPLY MSG(USRWTO1) TEXT('DISPLAY FIELDS')

°               Example 3.  Issue the IMS command DISPLAY ACTIVE on IMS
°                           system ZFF.

°                           REPLY IMS(ZFF) TEXT('/DIS A')

°               Example 4.  Issue  the IMS command NRESTART on IMS subsy
°                           PRO.

°                           REPLY IMS(PRO) TEXT('NRE CHECKPOINT 0 FMT AL
¸
¸
¸
¸
¸
¸
¸

°          A-52
¯
°          SPMON                       TRS-85-05                       S
°                                 Issue 1, July 1985
°                         Appendix A. TSSO Command Reference
¸
°          NAME:  SPMON

°          AVAILABLE UNDER TSO:  Yes

°          DESCRIPTION

°               The SPMON command displays system  information  to  the
°               console operator.  By default SPMON will display the fol
°               ing  information:   percentage of CPU busy, average Unre
°               enced Interval Count (UIC), average paging rate,  number
°               TSO  users,  number  of started tasks, number of batch j
°               and number of inactive initiators.  In addition, if  par
°               ters  are  specified to SPMON, the following job-related
°               formation is printed:  JOBNAME, number of service  units
°               current  transaction, swap-in/swap-out status, and numbe
°               active frames in real storage.

°          SYNTAX

°               SPMON  {job-parm {type-parm}}

°          PARAMETERS

°               job-parm    A 1- to 8-character string for matching  on
°                           name,  or  "ALL"  to  display information on
°                           jobs.

°               type-parm   This directs SPMON to  print  information  a
°                           selected  types  of jobs.   Legal values are
°                           (?), STC (?), TSO (TSO users), or ALL (?).
°                           fault is ALL.

°          EXAMPLES

°               Example 1.  Display the general system information only.

°                           SPMON

°               Example 2.  Display  general  system  information as wel
°                           information on all jobs, TSO  users  or  sta
°                           tasks that start with "BCR".

°                           SPMON BCR
¸
°
¯
°          SPMON                       TRS-85-05                       S
°                                 Issue 1, July 1985
°                         Appendix A. TSSO Command Reference
¸
°               Example 3.  Display  general system information and info
°                           tion about all TSO users whose  user  IDs  b
°                           with "PY".

°                           SPMON PY TSO
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
°          A-54
¯
°          VALLOC and VOLSER           TRS-85-05           VALLOC and VO
°                                 Issue 1, July 1985
°                         Appendix A. TSSO Command Reference
¸
°          NAME:  VALLOC and VOLSER

°          AVAILABLE UNDER TSO:  Yes

°          DESCRIPTION

°               The  VALLOC  and  VOLSER commands display UCB and ALLOCA
°               information.  By default, the commands will display info
°               tion for the MVS SYSRES (IPL) device.  If a volume seria
°               specified, the command will  locate  the  device  using
°               standard MVS UCBSCAN service and display the UCB address
°               the UCB itself.* The command will also inform the MVS op
°               tor if the volume is not found.

°          SYNTAX

°               VALLOC {volser}

°               VOLSER {volser}

°          PARAMETERS

°               volser    A  6-character DASD volume identifier.

°          EXAMPLES

°               Example 1.  Display the UCB address and allocation  info
°                           tion for volume PPBFX2.

°                           VALLOC PPBFX2
¸
°          ¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿

°          *The  commands use the TSSO "*COM" interface to issue appropr
°          MVS commands.  to display UNIT or ALLOCATION  information.
°          VOLSER  command  issues the "D U,,,ucb-address,1" MVS system
°          mand,     while     the     VALLOC     command     issues
°          "D U,,ALLOC,ucb-address,1"  MVS  command.    Note that, when
°          command is issued under regular TSO, the  MVS  commands  are
°          generated  and  the invoker of the command will see the forma
°          command including the *COM keyword.
¸
°
¯
°          VALLOC and VOLSER           TRS-85-05           VALLOC and VO
°                                 Issue 1, July 1985
°                         Appendix A. TSSO Command Reference
¸
°               Example 2.  Display UCB information for the MVS SYSRES (
°                           pack.

°                           VOLSER

°               Example 3.  Display the UCB address for volume SYSRES.

°                           VOLSER SYSRES
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸

°          A-56
¯
°                                                                  TRS-8
°                                                         Issue 1, July
°                                          Appendix B. TSSO Control Comm
¸
°          APPENDIX B. TSSO CONTROL COMMANDS

°          TSSO  control  commands  are used to direct TSSO processing.
°          such commands start with the TSSO  System  Recognition  Chara
°          (SRC).  The examples below assume that "#" is the TSSO SRC.

°          Note  that  TSSO control commands may be treated exactly as o
°          TSO commands when used in a TSSO CLIST.  For example, a CLIST
°          process directives and then issue a .RELOAD command to reload
°          TSSO/AOF table.  It is also possible for a CLIST  to  consist
°          nothing  but TSSO commands. For example, a CLIST could be wri
°          to query all the TSSO parameters.

°          GENERAL COMMANDS

°          Various parameters of the TSSO subsystem can be queried using
°          #.Q family of commands.

°          #.Q LOGON    Displays the console ID and the user ID of all
°                       soles logged on to TSSO.

°          #.Q MAXCMD   Returns the value of the MAXCMDS parameter speci
°                       at TSSO startup.

°          #.Q MAXWTO   Returns  the value of the MAXWTO parameter speci
°                       at TSSO startup.

°          #.Q RACF     Returns the name of the TSSO RACF user identifie

°          #.Q SWAP     Indicates if TSSO is running non-swappable.

°          #.Q T        Returns the name of the TSSO AOF table.   Additi
°                       information  displayed  includes the value speci
°                       on the ID parameter of the TABSTART  macro  and
°                       date and time the AOF table was assembled.

°          #.Q VERS     Displays  the TSSO Version identifier (TSSO 4.2)
°                       the date and times that the TSSO, TSSOWTO,  and
°                       subsystem interface were last assembled.

°          RESTRICTED COMMANDS

°          The following commands are restricted to consoles with system
°          thority.
¸
°
¯
°          TRS-85-05
°          Issue 1, July 1985
°          Appendix B. TSSO Control Commands
¸
°          #.ABEND               Abnormally   terminates  the  TSSO  add
°                                space. This is a TSSO debugging  aid  w
°                                should not be used in normal operation.

°          #.J                   Requests  a  job identification number
°                                the primary subsystem.  This is require
°                                TSSO will be using the primary  subsyst
°                                services.    These services include sub
°                                ting jobs (with the TSO SUBMIT command)
°                                using the PRINTOFF command.   Note that
°                                TSSO  was  started using the "SUB=JES2"
°                                rameter, this command will have no effe

°          #.LOGOFF              Logs off the console.

°          #.LOGON user-id       Logs on the invoking console to TSSO.

°          #.M                   Manipulates the  TSSO  debugging  facil
°                                This  command  should  not  be  used  u
°                                normal circumstances.

°          #.P                   Terminates the Time Sharing  Subsystem
°                                tion.  TSSO can be restarted through th
°                                TSSO" command as described on page x.

°          #.RELOAD table-name   Loads  a TSSO Automated Operations Faci
°                                table identified by table-name.  If  ta
°                                name='NONE',  then  the AOF is deactiva
°                                If an error occurs while processing the
°                                ble, AOF is deactivated.   The most  co
°                                errors  include  table-name not being f
°                                and table-name not being a valid  TSSO
°                                table.
¸
¸
¸
¸
¸

°          B-2
¯
°                                                                  TRS-8
°                                                         Issue 1, July
°                                        Appendix C. TSSO Processing Mod
¸
°          APPENDIX C. SUMMARY OF TSSO PROCESSING MODULES

°          TSSO        The  TSSO  mainline routine.   This module is inv
°                      when the MVS START command is issued for TSSO.

°          TSSOSSSM    The TSSO subsystem support module.  This module
°                      tains  the subsystem interface routines and is LO
°                      by TSSO.

°          TSSOWTO     This module copies the SYSTSPRT file to the MVS
°                      sole  through the WTO macro.  It also issues the
°                      mands specified through TSSO OPF.

°          TSSOESTA    The TSSO ESTAE routine.   This module  is  loaded
°                      part of TSSO startup.

°          TSSOPARS    The TSSO parse routine used to parse PARMLIB inpu
°                      well  as  MVS  console messages in support of the
°                      formatting directive in AOF.

°          JCECVT      The TSSO convert routine used to perform data con
°                      sions.

°          CACHE       The TSO CACHE command.

°          LINKLIST    The TSO LINKLIST command.

°                      REPLYLOA

°          REPLY and   The TSO REPLY command and the module  it  loads
°                      global storage.

°          VALLOC      The TSSO VALLOC command.

°          VOLSER      The TSSO VOLSER command.

°          CPCMD       The TSSO CPCMD command.

°          DISPAOF     The  TSSO DISPAOF command for displaying the cont
°                      of AOF tables.

°          SPMON       The TSSO SPMON command.

°          EF          The TSSO EDIT facility command.

°          MULT        The TSSO MULT command.
¸
°
¯
°          TRS-85-05
°          Issue 1, July 1985
°          Appendix D. Sample AOF Table
¸
°          APPENDIX D. SAMPLE AOF TABLE

°          This is the sample AOF table  distributed  with  TSSO  in  me
°          AOFIVP of the TSSO.VERS42.ASM data set.

°          *************************************************************
°          * THIS IS A SAMPLE AUTOMATED OPERATIONS FACILITY TABLE. IT IS
°          * PART OF THE TSSO INSTALLATION VERIFICATION PROCEDURE. IT CO
°          * OF A SUBSET OF ALL POSSIBLE ENTRIES IN A TSSO/AOF TABLE.
°          *
°          * THIS AOF TABLE CAN BE USED IN CONJUNCTION WITH THE AOF/IVP,
°          * DISTRIBUTED WITH TSSO.
°          *
°          *
°          *************************************************************
°          AOFIVP   TABSTART ID=IVPTABLE
°          *************************************************************
°          * FIRST, A COUPLE OF REPLIES TO STANDARD ANNOYING MVS   MESSA
°          *************************************************************
°          *
°          *************************************************************
°          * REPLY '' TO VTAM INITIALIZATION MESSAGE
°          *************************************************************
°                   TABENTRY MSG=IST051A,ACTION=REPLY,TEXT=' '
°          *
°          *************************************************************
°          * REPLY 'SIC' TO TCAS TERMINATION MESSAGE
°          *************************************************************
°                   TABENTRY MSG=IKT010D,ACTION=REPLY,TEXT='SIC'
°          *************************************************************
°          * REPLY 'SIC' TO TCAS TERMINATION MESSAGE
°          *************************************************************
°          *
°                   TABENTRY MSG=IKT012D,ACTION=REPLY,TEXT='U'
°          *************************************************************
°          * REPLY 'POST' TO IMS BRINGUP ON UCB MESSAGE
°          *************************************************************
°          *
°                   TABENTRY MSG=IEC804A,ACTION=REPLY,TEXT='POST'
°          *
°          *************************************************************
°          * THE NEXT ENTRY POINTS OUT THE HILIGHTING FEATURE. IEE704I I
°          * MESSAGE ID FOR   REPLY 05 IS NOT OUTSTANDING.
°          *************************************************************
¸

°          D-4
¯
°                                                                  TRS-8
°                                                         Issue 1, July
°                                               Appendix E. Sample AOF T
¸
°                   TABENTRY MSG=IEE704I,ACTION=HILIGHT
°          *
°          *************************************************************
°          * THE NEXT ENTRY DEMONSTRATES A POSSIBLE USE FOR THE OSCMD FE
°          * IEE043I IS THE MESSAGE YOU GET WHEN A SYSTEM LOG DATASET IS
°          * TO A GIVEN OUTPUT CLASS. THE #LOGWTRR4 PROGRAM (OR CLIST) C
°          * USED TO PROCESS THE LOG DATASET. THE XWTR PROC    CAN ALSO
°          * YOU CAN CAUSE THIS TO OCCUR BY ISSUING THE "W Z" COMMAND.
°          *************************************************************
°                   TABENTRY MSG=IEE043I,ACTION=OSCMD,
°                         TEXT='#LOGWTRR4'
°          *
°          *************************************************************
°          * WHEN THE LOGWTR PROGRAM TERMINATES, MESSAGE IEF176I IS ISSU
°          * INDICATING THE LOGWTR IS LOOKING FOR WORK. HAVE TSSO PURGE
°          * NOTE HOW IT USES THE DDD FROM THE MESSAGE TO FIGURE OUT WHA
°          * PURGE. NOTE THAT THIS WILL WORK FOR ANY EXTERNAL WRITER.
°          * THIS IS AN EXAMPLE OF "WORD" FORMATTING IN THE TEXT= PARM.
°          *************************************************************
°                   TABENTRY MSG=IEF176I,ACTION=OSCMD,
°                         TEXT='P \\\\W    03\\\\'
°          *
°          *************************************************************
°          * THE NEXT EXAMPLE SHOWS POSITIONAL FORMATTING IN THE COMMAND
°          * THE $HASP104 MESSAGE IS ISSUED WHENEVER A //*MESSAGE CARD I
°          * ENCOUNTERED IN THE JOB STREAM. THE #RECMSG CLIST MEARLY REC
°          * A DATASET (USING CLIST OPENFILE/PUTFILE/CLOSFILE TECHNIQUES
°          * TEXT OF THE MESSAGE.
°          *************************************************************
°                   TABENTRY MSG=$HASP104,ACTION=OSCMD,
°                         TEXT='#RECMSG JOB(''\\\\P001,72\\\\'')'
°          *
°          *************************************************************
°          * ANOTHER EXAMPLE OF THE USE OF THE HILIGHTING FEATURE. HILIG
°          * MESSAGE INDICATING THAT VTAM IS UP.
°          *************************************************************
°                   TABENTRY MSG=IST020I,ACTION=HILIGHT
°          *
°          *************************************************************
°          * IN ADDITION TO  HILIGHTING THE VTAM INITIALIZATION MESSAGE,
°          * THE #VTAMR4 CLIST. THIS CLIST IS A OPERATOR CLIST THAT ISSU
°          * MVS START COMMANDS FOR VTAM DEPENDANT PROGRAM PRODUCT, LIKE
°          * AND TSO.
°          *
°          *************************************************************
°                   TABENTRY MSG=IST020I,ACTION=OSCMD,TEXT='#VTAMR4'
°          *
¸
°
¯
°          TRS-85-05
°          Issue 1, July 1985
°          Appendix D. Sample AOF Table
¸
°          *************************************************************
°          * DSI802A IS THE NCCF MESSAGE SAYING THAT YOU CAN ISSUE A VAL
°          * OPERATOR COMMAND. YOU DO NOT NEED TO KNOW THE MESSAGE NUMBE
°          * THIS COMMAND, BECAUSE YOU CAN REPLY TO IT USING THE REPLY C
°          * SO WE LOWLIGHT THE MESSAGE, AND ALLOW IT TO ROLL OFF THE SC
°          * THIS IS AN EXAMPLE OF THE LOWLIGHTING FEATURE.
°          *************************************************************
°                   TABENTRY MSG=DSI802A,ACTION=LOWLIGHT
°          *
°          *************************************************************
°          * THIS IS AN EXAMPLE OF A SUPPRESS CONDITION. $HASP309 IS A M
°          * THAT JES2 ISSUES EVERY TIME AN INITIATOR GOES INACTIVE. THI
°          * IS NOW SUPPRESSED.
°          *************************************************************
°                   TABENTRY MSG=$HASP309,ACTION=SUPPRESS
°          *************************************************************
°          * WE WILL NOW DISPLAY SOME OF THE POWER OF THE TEST CONDITION
°          * FOLLOWING DEMONSTRATIONS ALL TRAP THE $HASP395 JOB ENDED ME
°          * HOWEVER, THE ACTION= PARAMETER IS EXECUTED ONLY IF ALL COND
°          * FOR THE TESTS ARE MET. FOR EXAMPLE, OUR FIRST CASE WILL ONL
°          * HILIGHT THE MESSAGE IF THE JOB THAT HAS ENDED IS NAMED "PAY
°          * THIS TEST CASE SPECIFIES THAT (1) WORDS ARE BEING TESTED, (
°          * IT IS THE SECOND WORD WE ARE INTERESTED IN, (3), WE ARE INT
°          * THE FIRST SEVEN CHARACTERS OF THAT WORD, (4), WE WISH TO MA
°          * STRING 'PAYROLL', AND      (5), WE WILL USE FOUR BLANKS AS
°          * SEPARATOR CHARACTERS WHEN DEFINING A WORD.
°          * NOTE THAT THE DOUBLE PARENTHESIS ARE REQUIRED.
°          *************************************************************
°                   TABENTRY  MSG=$HASP395,ACTION=HILIGHT,
°                         TEST=((W,2,7,'PAYROLL','    '))
°          *
°          *************************************************************
°          * THE NEXT ENTRY IS AN EXAMPLE OF A TEST CONDITION BASED ON S
°          * OR COLUMNS. THE ENTRY WILL TRAP THE JES2 $HASP648 MESSAGE,
°          * THE RESPONSE TO A $DU,STA. THIS ENTRY WILL SUPPRESS ALL LIN
°          * THE JES2 RESPONSE THAT ARE SNA LINES (COLS 20 THROUGH 22 =
°          *
°          *************************************************************
°                   TABENTRY  MSG=$HASP628,ACTION=SUPPRESS,
°                         TEST=((S,20,3,'SNA'))
°          *
°          *************************************************************
°          * THE NEXT ENTRY IS AN EXAMPLE OF A LOGICAL AND CONDITION BET
°          * CASES. BOTH CRITERIA MUST BE SATISFIED FOR THE TESTS TO PAS
°          * THE TEST CASE IS AN MVS/JES2 JOB,  AWAITING EXECUTION IN A
°          * JOB CLASS. THIS ENTRY WILL TAKE A $DN COMMAND, AND ISSUE AN
°          * TO RAISE THE PRIORITY OF JOBS AWAITING EXECUTION IN CLASS 9
¸
°          D-6
¯
°                                                                  TRS-8
°                                                         Issue 1, July
°                                               Appendix E. Sample AOF T
¸
°          * (YES, I REALIZE THIS DOESN'T MAKE MUCH SENSE, BUT ITS GOOD
°          * PURPOSES).
°          * NOTE THAT THE THIRD WORD IS CHECKED FOR "AWAITING" AND THE
°          * WORD IS CHECK FOR EXECUTION, AND THE FIFTH WORD IS THE JOB
°          * ALSO NOTE HOW THE SECOND WORD OF THE MESSAGE (THE JOB NAME)
°          * IN FORMING THE TEXT= OPERAND. OSCMDT WILL BE USED SO THE CO
°          * DOESN'T ACTUALLY GET ISSUED.
°          * NOTE ALSO THAT YOU DON'T NEED TO SPECIFY FOUR BLANKS- ONE I
°          * SUFFICIENT WHEN GENERATING TEST CASES.
°          *************************************************************
°                   TABENTRY MSG=$HASP608,ACTION=OSCMDT,
°                         TEXT='$T''\\\\W    02\\\\'',P=15',
°                         TEST=((W,3,8,'AWAITING','  '),(W,4,9,'EXECUTIO
°                         ,(W,5,1,'9',' '))
°          *
°          *************************************************************
°          * THE LAST CASE IS A GENERIC MESSAGE. THIS MESSAGE IS MATCHED
°          * EVERY SINGLE WTO OR WTOR THAT COME ACROSS, EXCEPT IT MUST S
°          * PASS THE TEST CONDITIONS. THIS EXAMPLE I WILL GIVE HILIGHTS
°          * MESSAGES CONCERNING JOB ENDOFDAY.THESE MESSAGES ALL START W
°          * $HASP (WORD 1) AND CONTAIN THE JOBNAME IN WORD 2.
°          *
°          *************************************************************
°                   TABENTRY MSG=*,ACTION=HILIGHT,
°                         TEST=((W,1,5,'$HASP',' '),(W,2,7,'ENDOFDAY','
°          *************************************************************
°          * THIS TABEND MACRO DEFINES THE END OF THE AUTOMATED OPERATIO
°          * FACILITY TABLE.
°          *
°          * DO NOT LEAVE THE TABEND MACRO OUT OF THIS ASSEMBLY.
°          *
°          *************************************************************
°                   TABEND
¸
¸
¸
¸
¸

°
¯
°          TRS-85-05
°          Issue 1, July 1985
°          Appendix E. AOF Text Processing Algorithm
¸
°          APPENDIX E. TSSO/AOF - TEXT PROCESSING ALGORITHM

°          This section descibes the algorithm used in forming the MVS o
°          ator  commands  issued as a result of processing the ACTION=O
°          directive under the TSSO Automated Operations Facility.

°          Definition of Terms

°               action-text  is the parameter specified in the TEXT  ope
°                            of the TABENTRY macro.

°               WTOTEXT      is  the  text  of  the console message that
°                            matched by the MSG  parameter.  Therefore,
°                            first  8  bytes of WTOTEXT must have matche
°                            entry in the AOF table, as specified by the
°                            parameter.

°               cmd-buffer   is the buffer that will be passed to MVS to
°                            executed as an operator command.

°          Algorithm

°          1.  Copy  characters from action-text to cmd-buffer until no
°              characters are found, or a "\\" is located.  The  "\\"  i
°              significance  indicator that indicates to AOF that charac
°              or words from WTOTEXT are to be copied.  When a  signific
°              indicator  is detected, go to step 2. When no more charac
°              remain in action-text, pass the command to MVS for proces
°              and terminate.

°          2.  The character after the significance indicator determines
°              type of formatting to be performed. Two characters  are
°              missible.  The  "S"  directive indicates substring format
°              and the "W" directive indicates word formatting. If the c
°              acter is a "S", go to step 3; if the character is a  "W",
°              to step 4.

°          3.  To  use substring formatting, the syntax, including the l
°              ing "\\S" must be

°                   \\Snnn,yy\\

°              where nnn are numeric characters that  specify  the  star
°              position in WTOTEXT, and the yy indicates the number of c
°              acters  starting  from  position nnn to copy into the com
°              buffer.   Thus, it is possible to  include  all  or  part
¸
°          E-8
¯
°                                                                  TRS-8
°                                                         Issue 1, July
°                                  Appendix E. AOF Text Processing Algor
¸
°              WTOTEXT  in  the operator command to be issued.  For exam
°              if

°                   \\S032,08\\

°              was coded, then character positions 32-39 of WTOTEXT woul
°              copied to cmd-buffer. The syntax for the substring  param
°              is  very  rigid.    Leading zeroes must be specified, and
°              final "\\" must be present.  Processing continues at  ste
°              with the character following the final "\\"

°          4.  A word is defined as a string of characters separated by
°              arator characters. The maximum size of a word is 16 bytes
°              use the word formatting option, code

°                   \\Wabcdnn\\

°              where  a,  b, c and d specify separator characters to be
°              in the definition of a word, and nn is a numeric value  i
°              cating which word to use. The selected word is then copie
°              cmd-buffer.  For example, if

°                   \\W=,  03\\

°              were  coded,  it would be interpreted as word formatting
°              the next four characters  "=", ",", " ", and " " used as
°              separator characters.   In this example, the  third  word
°              copied  from  WTOTEXT  into cmd-buffer. The syntax of the
°              directive if very strict. If you do not need  four  separ
°              characters, you must code blanks (as in the example). The
°              meric specification must have two digits (including a lea
°              zero if required) and the terminating "\\" is required. P
°              essing  continues at step 1, with the character following
°              last "\\".  Note that a word is at  most,  16  characters
°              length, and is copied to cmd-buffer without leading or tr
°              ing blanks.

°          Note   that   the   formatting  options  are  available  only
°          ACTION=OSCMD or ACTION=OSCMDT is specified.
¸
¸
¸

°
¯
°          TRS-85-05
°          Issue 1, July 1985
°          Appendix F. Sample Parameter Deck
¸
°          APPENDIX F. TSSO SAMPLE PARAMETER DECK

°          The parameter deck  shown  below  is  in  file  SAMPPARM  in
°          TSSO.VERS42.ASM data set.
***********************************************************************
* THIS IS A TYPICAL TSSO PARAMETER DECK FOR A TYPICAL SYSTEM. THE     *
* DOCUMENTATION IS   IN "TSSO SYSTEM PROGRAMMERS GUIDE- RELEASE 4.2   *
* THESE VALUES SHOULD WORK AS DEFAULTS.                               *
***********************************************************************
NONSWAP=Y
************************************************************
* TSSO WILL BE RUNNING NON-SWAPABBLE                       *
************************************************************
*
TABLE=AOFR4
************************************************************
* THE TABLE NAME FOR TSSO AOF WILL BE AOFR4                *
************************************************************
*
RACFID=TSSO
************************************************************
* TSSO WILL ASSUME A RACF USERID OF "TSSO" ON STARTUP      *
************************************************************
*
SRC=#
************************************************************
* THE COMMAND RECOGNITION CHARACTER IS A POUND SIGN ('#')  *
************************************************************
*
MAXCMDS=15
************************************************************
* TSSO WILL HANDLE AT MOST 15 SIMULTANEOUS COMMANDS        *
************************************************************
*
MAXWTO=250
************************************************************
* TSSO WILL ISSUE AT MOST 250 WTOS FOR ANY ONE COMMAND     *
************************************************************
*
PROMPT=NO
************************************************************
* DO NOT PROMPT THE MVS OPERATOR FOR ADDITIONAL TSSO       *
* PARAMETERS                                               *
************************************************************
*
SECSYS=RACF
***********************************************************************
* THE SECURITY SYSTEM IN USE WILL BE THE RESOURCE ACCESS CONTROL      *
* FACILITY.                                                           *
***********************************************************************
*
SECLEVEL=MEDIAL
***********************************************************************
* WE WILL BE USING THE "MEDIAL" LEVEL OF SECURITY, REQURING ALL THAT  *
* ALL CONSOLES LOG ON PRIOR TO ISSUING ANY TSSO COMMANDS.             *
***********************************************************************
*
SUBSYS 9 = TSSOSS09
***********************************************************************
* THE "TSSOSS09" ROUTINE, SUPPLIED WITH TSSO, WILL BE PROCESSING      *
* THE WTO AND WTOR MESSAGES WHEN AOF IS ACTIVE. ANY OTHER SELECTION   *
* MAY CAUSE TSSO TO FAIL.                                             *
***********************************************************************
*
SUBSYS 10 = TSSOSS10
***********************************************************************
* THE "TSSOSS10" ROUTINE, SUPPLIED WITH TSSO, WILL BE PROCESSING      *
* THE MVS AND SUBSYSTEM COMMANDS. ANY OTHER SELECTION MAY MAKE TSSO   *
* FAIL.                                                               *
***********************************************************************
*
TIMEOUT = 30
***********************************************************************
* IF THE SECLEVEL PARAMETER IS EVER SET TO "MAX", CONSOLES WILL TIME  *
* OUT AFTER THIRTY MINUTES OF INACTIVITY...                           *
***********************************************************************
END
