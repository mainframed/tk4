        TITLE  'T S S O   C O N T R O L   C O M M A N D S'
***********************************************************************
* THIS MODULE WILL PROCESS THE TSSO CONTROL COMMANDS. THESE COMMANDS  *
* ALL START WITH A "#.".                                              *
* PARAMETERS:                                                         *
* ON ENTRY, R1 POINTS TO THE TSSO DATA AREA (DATD). THE TSSO CONTROL  *
* COMMAND IN QUESTION (NOTE THAT THE FACT THAT IT IS A CONTROL        *
* COMMAND IS VERIFIED IN THE MAINLINE MODULE) IS PARSED AND PROCESSED *
*            THE DATA AREA "TSSOCMD" HAS THE COMMAND IN QUESTION, AND *
* THE TSSO VARIABLE "CURRCONS" HAS THE CONSOLE ID IN QUESTION.        *
* NOTE: LAST MESSAGE NUMBER WAS TSSC142X                              *
***********************************************************************
*                                                                     *
* MODIFIED                                                            *
*   15OCT92  GLA  SUPPORT ES/9000 HARDWARE SYSTEM CONSOLE (UCMID 100) *
*                 JUST LIKE INTERNAL MVS COMMANDS (UCMID 0).          *
*   20OCT92  GLA  USE NEW DSECT FOR AOF TABLE                         *
*   30OCT92  GLA  INVOKE NEW MODULE TO LOAD AN AOF TABLE AND BUILD    *
*                 THE BINARY INDEX HEADER.                            *
*                                                                     *
***********************************************************************
* RETURN CODES:                                                       *
* R15 = 0: TSSOCCMD PROCESSED THE TSSO DIRECTIVE SUCCESSFULLY         *
* R15 = 8: THE COMMAND WAS NOT PROCESSED.                             *
* IN ADDITION, THE FOLLOWING BIT FLAGS IN THE DATA AREA FLAG CCMDFLAG *
* ARE RETURNED:
*
* X'80' REQUEST TO STOP TSSO
* X'40' UPON COMPLETION OF THIS CONTROL COMMAND, LIST THE SYSTSPRT
*       FILE.
***********************************************************************
TSSOCCMD CSECT
         EQUATES
         STM   R14,R12,12(R13)    SAVE CALLERS REGSITERS
         LR    R12,R15            LOAD ENTRY POINT OF TSSO
         USING TSSOCCMD,R12       GET ADDRESSIBILITY
         B     EYE1
         COPY  EYECATCH
EYE1     DS    0H
         LA    R8,4095(R12)       GET ADDRESSABILITY TO REST OF MOD
         LA    R8,1(R8)           FINISH THE JOB
         USING TSSOCCMD+4096,R8
         LR    R9,R1
         GETMAIN R,LV=72           WE NEED STORAGE FOR THE SAVE AREA
         ST    R13,4(R1)          STORE ADDRESS OF CALLERS SAVE AREA
*                                  SAVE AREA
         ST    R1,8(R13)          REMEMBER WHERE THIS CORE IS
         LR    R13,R1             KEEP A COPY IN R13
*
         GETMAIN R,LV=1024         GET STORAGE FOR A LOCAL
         LR    R11,R1             DATA AREA
         USING CCMDDATD,R11       AND TELL ASSEMBLER
***********************************************************************
* WE MUST PICK UP THE ADDRESS OF THE TSSO DATA AREA. THIS IS PASSED   *
* THROUGH REG 1 AND COPIED TO REG 8 IN THE LINKAGE ABOVE. SINCE R9    *
* IS THE BASE FOR THE DATA AREA, WE WILL PICK UP THE ADDRESS.         *
* THE TSSO PARSE ROUTINE WILL BE USED TO PARSE THE COMMAND. THIS IS   *
* PROBABLY TOUGHER THEN IT NEEDS TO BE, BUT IT PROVIDES A CLEANER     *
* INTERFACE FOR PEOPLE TO WRITE THERE OWN COMMANDS.                   *
***********************************************************************
         MVC   CCWTO1D(CCWTO1CE-CCWTO1C),CCWTO1C
         MVC   CCWTO2D(CCWTO2CE-CCWTO2C),CCWTO2C
         MVC   CCWTO3D(CCWTO3CE-CCWTO3C),CCWTO3C
         MVC   CCWTO4D(CCWTO4CE-CCWTO4C),CCWTO4C
         MVC   CCWTO5D(CCWTO5CE-CCWTO5C),CCWTO5C
         MVC   POST1D(POST1CE-POST1C),POST1C
         USING DATD,R9
         GETCVT  (R10)                 ADDRESS THE TSSO CVT
         USING TSSOCVT,R10
         ST    R10,CVTADDR             REMEMBER CVT ADDRESS
*
***********************************************************************
* FIRST,WE GO OFF AND FIND THE UCM ENTRIES FOR THE CONSOLE, AND       *
* PROCEED TO GET ITS AUTHORIZATION BITS...                            *
***********************************************************************
         MVC   CONSOLE(4),CURRCONS   COPY CURRCONS...
         L     R2,16             GET CVT
         USING CVT,R2
         L     R2,CVTCUCB        GET UCM BASE
         USING UCM,R2
         LM    R3,R5,UCMVEA      GET FIRST, LENGTH AND LAST UCME'S
         DROP  R2
         USING UCMLIST,R3
         CLC   CONSOLE(4),=XL4'00000000'  IS THIS CONSOLE 0 ?
         BE    CONSOLE0
         CLC   CONSOLE(4),=F'100'  IS THIS HARDWARE SYS CON     15OCT92
         BE    CONSOLE0            YES, TREAT AS UCMID 0        15OCT92
UCMSLOOP DS    0H
         CLC   CONSOLE+3(1),UCMID       IS THIS THE CONSOLE ?
         BE    UCMFOUND
         BXLE  R3,R4,UCMSLOOP
*
         WTO   'TSSC101S SEVERE ERROR LOCATING UCM BITS-> CONTACT TSSO X
               SUPPORT',DESC=(1,11)
         B     ENDPROG
CONSOLE0 DS    0H
         MVI   AUTHBITS,B'11100000'   CONSOLE 0 - SYS/IO/CONSOLE AUTH
         B     PASTUCM
*
UCMFOUND DS    0H
         MVC   AUTHBITS(1),UCMAUTH    COPY AUTHORIZATION FLAGS FROM
         DROP  R3
*                                     UCM OF DESIGNATED CONSOLE
*
PASTUCM  DS    0H
***********************************************************************
* PARSE THE COMMAND USING THE TSSO PARSE SERVICE ROUTINE              *
*                                                                     *
***********************************************************************
         LA    R1,TSSOCMD              POINT TO THE INPUT BUFFER
         LA    R1,1(R1)                POINT PAST THE "."
         ST    R1,PARS1                AND STORE ADDRESS OF THE STRING
*
         LA    R1,126
         ST    R1,PARS2                GET ADDRESS OF THE STRING
*
         MVI   PARARRAY,C' '
         MVC   PARARRAY+1(129),PARARRAY
         LA    R1,PARARRAY
         MVC   0(2,R1),=H'10'          MAXIMUM OF TEN TOKENS
         ST    R1,PARS3
*
         MVC   PARSSEP(4),=CL4',='     PARSE CHARACTERS
         LA    R1,PARSSEP
         ST    R1,PARS4
*
         LA    R1,PARSPARM             GET PARM LIST TO TSSOPARS
         CALL  TSSOPARS                GO FOR IT...
*
         LA    R2,PARARRAY+2           POINT TO FIRST TOKEN...
         LA    R7,CMDTABLE             AND TO COMMAND TABLE
SRCHLOOP DS    0H
         CLC   0(8,R7),0(R2)           IS THIS THE COMMAND ?
         BE    CMDFOUND                YUP, GOT THE COMMAND
         CLC   0(8,R7),=CL8'ZZZZZZZZ'  IS THIS THE END OF THE TABLE ?
         BE    CMDNFND                 NO, COMMAND IS NOT FOUND
         LA    R7,16(R7)               POINT AT NEXT COMMAND
         B     SRCHLOOP                AND KEEP LOOKING
CMDNFND  DS    0H
***********************************************************************
* WE COME HERE IF THE COMMAND IS NOT FOUND IN THE TABLE...            *
*                                                                     *
***********************************************************************
         L     R0,CONSOLE
         WTO   'TSSC102E INVALID TSSO CONTROL COMMAND',MCSFLAG=(REG0)
         B     ENDPROG
CMDFOUND DS    0H
***********************************************************************
* HERE, THE COMMAND IS FOUND. WE WILL CHECK TO SEE IF IT IS RESTRICTED*
* TO CONSOLES WITH SYSTEM AUTHORITY, AND IF SO, CHECK TO SEE IF SAID  *
* AUTHORITY EXISTS. NOTE THAT R7 POINTS TO THE COMMAND IN QUESTION.   *
***********************************************************************
         TM    12(R7),B'10000000'     IS COMMAND RESTRICTED?
         BNO   GODOCMD                YUP, BETTER CHECK IT...
         TM    AUTHBITS,X'80'         SYSTEM AUTHORITY ?
         BO    GODOCMD                YUP! GREAT, GO TO IT !
         L     R0,CONSOLE
         WTO   'TSSC103E RESTRICTED T S S O   COMMAND',MCSFLAG=(REG0)
         B     ENDPROG
***********************************************************************
* HERE, THE COMMAND IS UNRESTRICTED, OR THE REQUIREMENTS HAVE BEEN    *
* SATISFIED. WE WILL BRANCH TO THE COMMAND IS QUESTION.               *
***********************************************************************
GODOCMD  DS    0H
         L     R2,8(R7)               GET ADDRESS OF COMMAND
         B     0(R2)                  AND GO FOR IT !!!
*
*
*
*
***********************************************************************
* START OF CODE FOR THE SUBCOMMANDS.                                  *
* ABEND TSSO CONTROL COMMAND                                          *
***********************************************************************
ABENDIT  DS    0H
         WTO   'TSSC104S TSSO ABENDING AT OPERATOR DEMAND',DESC=(1)
         DC    X'00000000'
***********************************************************************
* STC TSSO CONTROL COMMAND                                            *
*                                                                     *
***********************************************************************
STC      DS    0H
         TM    TSSOFLG1,TSSOJBID   DO WE HAVE AN ID ALREADY ?
         BO    ENDPROG             YES, DO NOTHING
         BAL   R14,REQJOBID
         B     ENDPROG
         SPACE
MONITOR  DS    0H
***********************************************************************
* MONITOR TSSO CONTROL COMMAND                                        *
*                                                                     *
***********************************************************************
         LA    R1,PARARRAY+18        GET SECOND PARAMETER.
         CLI   0(R1),C'0'            MONITORING BEING TURNED OFF ?
         BE    MONOFF                YUP...
         CLI   0(R1),C'1'            MONITORING BEING TURNED ON ?
         BE    MONON                 YUP...
         L     R0,CONSOLE
         WTO   'TSSC105S INVALID TSSO MONITORING CONTROL COMMAND',     X
               MCSFLAG=(REG0)
         B     ENDPROG
MONON    DS    0H
         OI    TSSOFLG2,TSSOMON       TURN MONITORING ON
         B     ENDPROG
MONOFF   DS    0H
         NI    TSSOFLG2,255-TSSOMON   TURN MONITORING OFF
         B     ENDPROG
*
*
*
*
*
RELOAD   DS    0H
***********************************************************************
* THE RELOAD COMMAND WILL DYNAMICALLY RELOAD A BRAND NEW AOF TABLE.   *
*                                                                     *
***********************************************************************
         L     R6,TSSOTABL        CHECK TO SEE IF FUNCTION ACTIVE
         LTR   R6,R6              WELL.. IS IT ?
         BZ    NODEL              NO FUNCTION, NO NEED TO DELETE
***********************************************************************
* IN TSSO 4.3, WE NEED TO SEE IF ANYONE IS WAITING ON AN OUTSTANDING  *
* OSWAIT EVENT, IF SO, WE NEED TO POST THEM WITH A COMPCODE OF FFF    *
***********************************************************************
         L     R6,0(R6)           POINT TO FIRST RECORD IN TABLE.
         USING AOFNTRY,R6         SETUP ADDRESSABILITY
         XR    R4,R4              FLAG...
         ST    R4,TSSOTABL        IMMEDIATELY SHUT OFF TABLE
RELALOOP DS    0H
         CLC   AOFMSGID,=CL8'ZZZZZZZZ' END OF TABLE ?
         BE    RELEOT                  YES, END OF TABLE...
         CLC   AOFACTN,=CL8'POST'      IS THIS ACTION=POST ?
         BNE   RELNENT                 NO, CHECK NEXT ENTRY
         TM    AOFPFLG,AOFP1WT         IS IT BEING WAITED ON ?
         BNO   RELNENT                 NO, DO BOTHER...
         L     R2,AOFPECB              GET ECB TO POST
         L     R3,AOFPASCB             GET THE ADDRESS SPACE...
         POST  (R2),X'FFF',ASCB=(R3),ERRET=NOAOF,MF=(E,POST1D)
         LA    R4,1
         B     RELNENT
RELNENT  DS    0H
         L     R6,AOFNXT
         B     RELALOOP
         DROP  R6
*
RELEOT   DS    0H
         LTR   R4,R4              ANYBODY WAITING ?
         BZ    DODEL
*
         WTO   'TSSC142I RELOAD DELAYED - ACTIVE OSWAITS IN PROGRESS'
         MVC   DINTVL(8),=CL8'00000500'   WAIT FIVE SECONDS....
         STIMER WAIT,DINTVL=DINTVL
*
DODEL    DS    0H
         L     R1,TSSOBSTH              GET POINTER TO INDEX TABLEOCT92
         L     R0,0(,R1)                GET LENGTH AND SUBPOOL  30OCT92
         XC    TSSOBSTH(TSSOBSTL+4-TSSOBSTH),TSSOBSTH CLR PTRS  30OCT92
         XC    TSSOTABL,TSSOTABL        INDICATE NO POINTER     30OCT92
         FREEMAIN R,LV=(0),A=(1)        GET RID OF INDEX TABLE  30OCT92
         LA    R6,TSSOTABN        GET CURRENT TABLE NAME
         DELETE EPLOC=(R6)           DELETE IT !
         MVC   TSSOTABN(8),=CL8' '
NODEL    DS    0H
         MVC   TSSOTABN(8),PARARRAY+18 POINT TO MODULE TO RELOAD TABLE
         CLC   TSSOTABN(8),=CL8'NONE'     OPERATOR WANTS NO REPLIES?
         BNE   LOADNTAB                  NO, LOAD NEW TABLE
*
* HERE, THE OPERATOR HAS REQUESTED WE SUPPRESS THE WTO REPLY FUNCTION
NOAOF    DS    0H
         XR    R6,R6
         ST    R6,TSSOTABL
         MVC   TSSOTABN(8),=CL8'NONE'
         WTO   'TSSC106I TSSO AUTOMATED OPERATOR FACILITY DEACTIVATED  X
               ',DESC=(1)
         B     ENDPROG
*
LOADNTAB DS    0H
         LR    R1,R9                    POINT AT DATD           30OCT92
         LINK  EP=TSSOLAOF              GET NEW TABLE AND INDEX 30OCT92
         L     R0,CONSOLE
         WTO   'TSSC107I TSSO AUTOMATED OPERATOR FACILITY TABLE RELOADEX
               D',MCSFLAG=(REG0)
         B     QUERYTAB           MIGHT AS WELL, OPERATOR WILL ANYWAY
*
*
LOGON    DS    0H
***********************************************************************
* HERE, WE PROCESS THE #.LOGON COMMAND. WE FORMAT THE PARAMETER LIST, *
* AND CALL THE SECURITY EXIT ROUTINE.                                 *
*                                                                     *
***********************************************************************
         CLC   SECLEVEL(4),=CL4'MINI'
         BE    LGNBSLVL                  NO LOGONS IF SECURITY NOT MAX
         CLI   PARARRAY+18,X'40'         ANY SECOND PARAMETER ?
         BE    LGNBDPRM                  NO - BAD PARAMETERS...
         CLI   PARARRAY+34,X'40'         ANY THIRD  PARAMETER ?
         BE    LGNBDPRM                  NO - BAD PARAMETERS...
         XC    NEWENTAD(4),NEWENTAD
         LA    R7,20
         L     R6,SECARRAY               PICK UP ADDRESS OF ARRAY
         LTR   R6,R6                     ANY THERE ?
         BZ    LGNERROR
LGNLOOP  DS    0H
         USING TSSOSECR,R6
         TM    SECFLAGS,X'80'            ENTRY IN USE ?
         BNO   NEWENTRY                  NO, THIS WILL BE USED IF
*                                        USER IS NOT LOGGED ON.
         CLC   SECUSER(8),PARARRAY+18    IS USER ALREADY LOGGED ON
         BE    LGNDUPL
         L     R1,CONSOLE
         CH    R1,SECCONS                CONSOLE ALREADY LOGGED ON ?
         BE    LGNDUPLC
         B     LGNELOOP
*
NEWENTRY DS    0H
         L     R1,NEWENTAD               DO WE ALREADY HAVE A NEW ENTRY
         LTR   R1,R1                     LETS SEE...
         BNZ   LGNELOOP                  YUP...
         ST    R6,NEWENTAD               REMEMBER ADDRESS OF NEW ENTRY
*
LGNELOOP DS    0H
         LA    R6,SECRLGNT(R6)           INCREMENT TO NEXT ENTRY
         BCT   R7,LGNLOOP                GET NEXT ENTRY
*
***********************************************************************
* AT THIS POINT IN LOGON PROCESSING, WE HAVE COMPLETED A SEARCH FOR   *
* DUPLICATE LOGONS.. NEXT, WE MUST SEE IF WE ENCOUNTERED ANY BLANK    *
* ENTRIES ALONG THE WAY.                                              *
***********************************************************************
         L     R6,NEWENTAD               GET ADDDRESS OF NEW TABLE ENT
         LTR   R6,R6
         BZ    LGNFULL                   NO ROOM IN  ARRAY !
* NOTE: R6 POINTS TO THE ADDRESS OF THE NEW TABLE ENTRY.
         MVC   PRMUSER(8),PARARRAY+18
         MVC   PRMPASS(8),PARARRAY+34
         MVC   PRMCONS(2),CONSOLE+2
         MVC   PRMACEE(4),4(R6)          PLACE TO PUT ACEE'S
         CLC   SECSYS(4),=CL4'RACF'      CALLING RACF ?
         BE    LGNRACF
         CLC   SECSYS(4),=CL4'ACF2'      CALLING ACF2 ?
         BE    LGNACF2
         CLC   SECSYS(4),=CL4'TOPS'      CALLING TOP SECRET ?
         BE    LGNRACF
         B     ENDPROG
LGNRACF  DS    0H
         LA    R1,SECPRM
         XC    PRMFLAGS(2),PRMFLAGS      CLEAR FLAGS
         OI    PRMFLAGS,X'80'            INDICATE LOGON PROCESSING
         LINK  EP=TSSLRACF,ERRET=LGNERROR
         LTR   R15,R15
         BNZ   LGNBAD
         B     LGNOK
LGNACF2  DS    0H
         LA    R1,SECPRM
         XC    PRMFLAGS(2),PRMFLAGS      CLEAR FLAGS
         LINK  EP=TSSLACF2,ERRET=LGNERROR
         LTR   R15,R15
         BNZ   LGNBAD
         B     LGNOK
LGNOK    DS    0H
         USING TSSOSECR,R6
         OI    SECFLAGS,X'80'         INDICATE ENTRY IN USE
         MVC   SECCONS(2),PRMCONS     INDICATE CONSOLE ID
         MVC   SECACEE(4),PRMACEE     COPY ACEE (OR ACF2 EQUIVALENT)
         MVC   SECUSER(8),PRMUSER     COPY USER ID
         TIME  BIN
         ST    R1,SECRDATE            GET INITIAL DATE
         ST    R0,SECRTIME            AND ALSO GET TIME...
         B     ENDPROG
LGNBAD   DS    0H
         B     ENDPROG
*
*
*
LGNBDPRM DS    0H
         L     R0,CONSOLE
         WTO  'TSSC138E LOGON COMMAND REJECTED - PARAMETER MISSING',   X
               MCSFLAG=(REG0)
         B     ENDPROG
*
LGNBSLVL DS    0H
         L     R0,CONSOLE
         WTO  'TSSC135E LOGON COMMAND REJECTED - SECURITY LEVEL IS MINIX
               MAL',MCSFLAG=(REG0)
         B     ENDPROG
LGNDUPL  DS    0H
         L     R0,CONSOLE
         WTO  'TSSC131E LOGON COMMAND REJECTED - USER ALREADY LOGGED ONX
               ',MCSFLAG=(REG0)
         B     ENDPROG
LGNDUPLC DS    0H
         L     R0,CONSOLE
         WTO  'TSSC132E LOGON COMMAND REJECTED - CONSOLE ALREADY LOGGEDX
                ON',MCSFLAG=(REG0)
         B     ENDPROG
LGNFULL  DS    0H
         L     R0,CONSOLE
         WTO  'TSSC133E LOGON COMMAND REJECTED - TSSO MAX USERS (20)  AX
               LREADY LOGGED ON',MCSFLAG=(REG0)
         B     ENDPROG
LGNERROR DS    0H
         WTO  'TSSC134S LOGON/LOGOFF COMMAND REJECTED - LOGICAL ERROR IX
               N PROCESSING',DESC=1
         B     ENDPROG
         DROP  R6
*
*
*
LOGOFF   DS    0H
***********************************************************************
* WE COME HERE TO LOG A USER OFF THE TSSO SUBSYSTEM. THIS IS ACCOMPLIS*
* BY SIMPLY TURNING OFF THE IN USE BIT IN THE CONSOLES ENTRY IN THE   *
* SECURITY ARRAY.                                                     *
*                                                                     *
***********************************************************************
*
         CLC   SECLEVEL(4),=CL4'MINI'
         BE    LGOBSLVL                  NO LOGONS IF SECURITY NOT MAX
         LA    R7,20
         L     R6,SECARRAY               PICK UP ADDRESS OF ARRAY
         LTR   R6,R6                     ANY THERE ?
         BZ    LGNERROR
LGNLOOP2 DS    0H
         USING TSSOSECR,R6
         TM    SECFLAGS,X'80'            ENTRY IN USE ?
         BNO   LGOELOOP                  NO, THIS CANNOT BE ENTRY FOR
*                                        THIS CONSOLE.
         L     R1,CONSOLE
         CH    R1,SECCONS                CONSOLE ALREADY LOGGED ON ?
         BE    LOGOCONS                  YEA!! GOT THE CORRECT CONSOLE
*
LGOELOOP DS    0H
         LA    R6,SECRLGNT(R6)           INCREMENT TO NEXT ENTRY
         BCT   R7,LGNLOOP2               GET NEXT ENTRY
         B     LGONLOG                   USER MUST NOT BE LOGGED ON
*
***********************************************************************
* AT THIS POINT IN LOGOFF PROCESSING, WE HAVE FOUND THE CONSOLE THAT  *
* MUST BE LOGGED OFF... WE WILL FORMAT THE PARAMETER LIST FOR THE     *
* SECURITY SYSTEM, AND PROCEED TO LOG THE CONSOLE OFF.                *
***********************************************************************
* NOTE: R6 POINTS TO THE ADDRESS OF THE NEW TABLE ENTRY.
LOGOCONS DS    0H
         MVC   PRMUSER(8),8(R6)          PICK UP USER ID
         MVC   PRMCONS(2),CONSOLE+2
         MVC   PRMACEE(4),4(R6)          PLACE TO PUT ACEE'S
         CLC   SECSYS(4),=CL4'RACF'      CALLING RACF ?
         BE    LGORACF
         CLC   SECSYS(4),=CL4'ACF2'      CALLING ACF2 ?
         BE    LGOACF2
         CLC   SECSYS(4),=CL4'TOPS'      CALLING TOP SECRET ?
         BE    LGORACF
         B     ENDPROG
LGORACF  DS    0H
         LA    R1,SECPRM
         XC    PRMFLAGS(2),PRMFLAGS      CLEAR FLAGS
         OI    PRMFLAGS,X'40'            INDICATE LOGOFF
         LINK  EP=TSSLRACF,ERRET=LGNERROR
         LTR   R15,R15
         BNZ   LGOBAD
         B     LGOOK
LGOACF2  DS    0H
         XC    PRMFLAGS(2),PRMFLAGS      CLEAR FLAGS
         OI    PRMFLAGS,X'40'            INDICATE LOGOFF
         LA    R1,SECPRM
         LINK  EP=TSSLACF2,ERRET=LGNERROR
         LTR   R15,R15
         BNZ   LGOBAD
         B     LGOOK
LGOBSLVL DS    0H
         L     R0,CONSOLE
         WTO   'TSSC136I LOGOFF COMMAND REJECTED - SECLEVEL = MINIMAL',X
               MCSFLAG=(REG0)
         B     ENDPROG
LGONLOG  DS    0H
         L     R0,CONSOLE
         WTO   'TSSC137I LOGOFF COMMAND REJECTED - CONSOLE IS NOT LOGGEX
               D ON',MCSFLAG=(REG0)
         B     ENDPROG
LGOOK    DS    0H
***********************************************************************
* NOTE - IT IS THE RESPONSIBILITY OF THE SECURITY MODULES, TSSLRACF   *
* AND TSSLACF2 TO PROCESS THE LOGOFF ROUTINES, AND TO PRODUCE A       *
* WTO TO THE CONSOLE INDICATING SUCCESSFULL LOGOFF.                   *
***********************************************************************
         USING TSSOSECR,R6
         NI    SECFLAGS,255-X'80'     INDICATE ENTRY NO LONGER IN USE
         XC    SECCONS(2),SECCONS     ZERO CONSOLE ID
         XC    SECACEE(4),SECACEE     ZERO ACEE (OR ACF2 EQUIVALENT)
         B     ENDPROG
LGOBAD   DS    0H
***********************************************************************
* NOTE, IF THE LOGOFF WAS BAD, IT IS THE RESPONSABILITY OF THE        *
* SECURITY MODULES (TSSLRACF OR TSSLACF2) TO PRODUCE ANY DESCRIPTIVE  *
* MESSAGES THAT MAY HAVE CAUSED THE FAILURE.                          *
***********************************************************************
         B     ENDPROG
         DROP  R6
*
*
*
*
QUERY    DS    0H
***********************************************************************
* THE QUERY COMMAND HAS A MASSIVE AMOUNT OF SUBCOMMANDS. WE HAVE YET  *
* ANOTHER TABLE TO SCAN TO DETERMINE THE OPERANDS OF THE QUERY COMMAND*
*                                                                     *
*                                                                     *
***********************************************************************
         LA    R2,PARARRAY+18          POINT TO FIRST TOKEN...
         LA    R7,QRYTABLE             AND TO COMMAND TABLE
SRCHQLOP DS    0H
         CLC   0(8,R7),0(R2)           IS THIS THE COMMAND ?
         BE    QCMDFND                 YUP, GOT THE COMMAND
         CLC   0(8,R7),=CL8'ZZZZZZZZ'  IS THIS THE END OF THE TABLE ?
         BE    QCMDNFND                NO, COMMAND IS NOT FOUND
         LA    R7,16(R7)               POINT AT NEXT COMMAND
         B     SRCHQLOP                AND KEEP LOOKING
QCMDNFND DS    0H
***********************************************************************
* WE COME HERE IF THE COMMAND IS NOT FOUND IN THE TABLE...            *
*                                                                     *
***********************************************************************
         L     R0,CONSOLE
         WTO   'TSSC110E INVALID TSSO QUERY COMMAND',MCSFLAG=(REG0)
         B     ENDPROG
QCMDFND  DS    0H
         TM    12(R7),B'10000000'     RESTRICTED QUERY COMMAND ?
         BNO   GODOQRY                NO, SEEMS OK...
         TM    AUTHBITS,X'80'         SYSTEM AUTHORITY ?
         BO    GODOQRY                YUP! GREAT, GO TO IT !
         L     R0,CONSOLE
         WTO   'TSSC111E RESTRICTED T S S O QUERY COMMAND',MCSFLAG=(REGX
               0)
         B     ENDPROG
***********************************************************************
* HERE, THE COMMAND IS UNRESTRICTED, OR THE REQUIREMENTS HAVE BEEN    *
* SATISFIED. WE WILL BRANCH TO THE COMMAND IS QUESTION.               *
***********************************************************************
GODOQRY  DS    0H
         L     R2,8(R7)               GET ADDRESS OF COMMAND
         B     0(R2)                  AND GO FOR IT !!!
*
QUERYVRS DS    0H
         L     R0,CONSOLE
         WTO   MF=(E,WTO27D)           WRITE IT OUT  (MSG 112)
         L     R1,WTOADDR              GET ADDRESS OF TSSOWTO MODULE
         MVC   WTO28D+13(8),=CL8'TSSOWTO'
         MVC   WTO28D+21(5),=CL5' '
         MVC   WTO28D+46(8),10(R1)         GET DATE OF ASSEMBLY
         MVC   WTO28D+62(8),18(R1)         GET TIME OF ASSEMBLY
         L     R0,CONSOLE
         WTO   MF=(E,WTO28D)         (MSG 113)
* NOW, WE MUST LOOP THROUGH THE SSIARRAY VARIABLES, AND PROCESS THE
* INFORMATION CONTAINED THEREIN.
         LH    R6,SSICOUNT
         LA    R7,SSIARRAY
SSILOOP  DS    0H
         MVC   WTO28D+13(8),8(R7)       MOVE SSI MODULE NAME
         LH    R1,0(R7)              GET SUBSYS NUMBER
         MVI   WTO28D+22,C'('
         LA    R10,DATD
         CALL  JCECVTBD              CONVERT IT TO DECIMAL
         L     R10,CVTADDR
         STCM  R1,B'0011',WTO28D+23
         MVI   WTO28D+25,C')'
         MVC   WTO28D+46(8),20(R7)   PICK UP DATE OF ASSEMBLY
         MVC   WTO28D+62(8),28(R7)   AND NOW GET TIME
         L     R0,CONSOLE
         WTO   MF=(E,WTO28D)         AND DISPLAY FOR OPERATOR (MSG 113)
         LA    R7,36(R7)             GET THE NEXT ENTRY
         BCT   R6,SSILOOP            REPEAT FOR ALL SUBSYS MODULES
         B     ENDPROG               COMMAND TERMINATED.
*
QUERYRCF DS    0H
***********************************************************************
* THE QRACF COMMAND                                                   *
*                                                                     *
***********************************************************************
         MVC   WTO24D+41(8),TSSORACF+1 GET RACF USER ID
         L     R0,CONSOLE
         WTO   MF=(E,WTO24D)           WRITE IT OUT   (MSG 114)
         B     ENDPROG
*
QUERYSWP DS    0H
***********************************************************************
* THE QSWAP COMMAND                                                   *
*                                                                     *
***********************************************************************
         CLI   TSSOSWAP,C'Y'        CHECK IT OUT.
         BNE   QUERNSWP             NOPE...
         L     R0,CONSOLE
         WTO   'TSSC115I TSSO IS RUNNING NON SWAPPABLE',MCSFLAG=(REG0)
         B     ENDPROG
QUERNSWP DS    0H
         L     R0,CONSOLE
         WTO   'TSSC116E TSSO IS RUNNING SWAPPABLE- PERFORMANCE MAY BE X
               DEGRADED',MCSFLAG=(REG0)
         B     ENDPROG
QMAXCMD  DS    0H
***********************************************************************
* THE QMAXCMDS COMMAND                                                *
*                                                                     *
***********************************************************************
         L     R1,MAXCMDS        GET MAX COMMANDS
         LA    R10,DATD          R10 MUST POINT TO WORKAREA FOR CONVERT
         CALL  JCECVTBD          FROM BINARY TO DECIMAL
         L     R10,CVTADDR
         STH   R1,WTO22D+42
         L     R0,CONSOLE
         WTO   MF=(E,WTO22D)     (MSG 117)
         B     ENDPROG
*
QTMEOUT  DS    0H
***********************************************************************
* THE QUERT TIMEOUT COMMAND                                           *
*                                                                     *
***********************************************************************
         L     R1,SECTMEOT       GET TSSO TIMEOUT VALUE.
         LA    R10,DATD          R10 MUST POINT TO WORKAREA FOR CONVERT
         XR    R0,R0
         CALL  JCECVTBD          FROM BINARY TO DECIMAL
         L     R10,CVTADDR
         STCM  R1,B'0011',CCWTO4D+41
         L     R0,CONSOLE
         WTO   MF=(E,CCWTO4D)         (MSG 139)
         B     ENDPROG
*
QMAXWTO  DS    0H
***********************************************************************
* THE QMAXWTO COMMAND                                                 *
*                                                                     *
***********************************************************************
         L     R1,MAXWTO         GET MAXIMUM WTO VALUE.
         LA    R10,DATD          R10 MUST POINT TO WORKAREA FOR CONVERT
         XR    R0,R0
         CALL  JCECVTBD          FROM BINARY TO DECIMAL
         L     R10,CVTADDR
         STCM  R1,B'1111',WTO36D+43
         L     R0,CONSOLE
         WTO   MF=(E,WTO36D)         (MSG 118)
         B     ENDPROG
*
QUERYSCO DS    0H
***********************************************************************
* THE QSCON COMMAND                                                   *
*                                                                     *
***********************************************************************
         TM    TSSOFLG1,TSSOSCON DO WE HAVE A CONSOLE ID ?
         BNO   SCONOFF           SORRY...
         L     R6,SSCONSAD       GET SSCONS CB ADDRESS
         USING SSCONCBH,R6       GET THE HEADER...
         L     R1,SSCONREQ       GET NUMBER OF SSCONS REQUESTED
         LA    R10,DATD
         CALL  JCECVTBD
         STCM  R1,B'0011',WTO49D+13   #REQUESTED
*
         L     R1,SSCONAMT       GET NUMBER OF SSCONS ALLOCATED
         LA    R10,DATD
         CALL  JCECVTBD
         STCM  R1,B'0011',WTO49D+46   ALLOCATED...
         L     R0,CONSOLE
         WTO   MF=(E,WTO49D)     (MSG 140) - SSCONS REQUESTED/ALLOC
*
*
         L     R7,SSCONAMT       GET THE NUMBER OF SS CONSOLES
         LA    R5,SSCONFIR       POINT TO FIRST ELEMENT
QSCONLOP DS    0H
         USING SSCONCB,R5
         L     R1,SSCONNUM       GET TSSO CONSOLE ID...
         LA    R10,DATD          R10 MUST POINT TO WORKAREA FOR CONVERT
         XR    R0,R0
         CALL  JCECVTBD          FROM BINARY TO DECIMAL
         L     R10,CVTADDR
         STCM  R1,B'0011',WTO48D+31    CONSOLE ID
         TM    SSCONFLG,X'80'          SS CONSOLE IN USE ?
         BNO   SCONNUSE                NO, NOT IN USE
         MVC   WTO48D+36(18),=CL18'IN USE, USERID IS '
         MVC   WTO48D+54(8),SSCONUID
         B     SCONPRT
SCONNUSE DS    0H
         TM    SSCONFLG,X'40'          MAYBE IT IS DEDICATED ?
         BNO   SCONDNUS
*
         MVC   WTO48D+36(26),=CL26'DEDICATED TO TSSO'
         B     SCONPRT
*
SCONDNUS DS    0H
         MVC   WTO48D+36(26),=CL26'NOT IN USE'
         B     SCONPRT                 PRINT THE LINE
*
SCONPRT  DS    0H
         L     R0,CONSOLE
         WTO   MF=(E,WTO48D)           (MSG 119)
         LA    R5,SSCONCBL(R5)
         BCT   R7,QSCONLOP             GET NEXT ONE
         B     ENDPROG
SCONOFF  DS    0H
         L     R0,CONSOLE
         WTO   'TSSC120E TSSO DOES NOT HAVE ANY SUBSYSTEM CONSOLES',   X
               MCSFLAG=(REG0)
         B     ENDPROG
         DROP  R6
         DROP  R5
*
QUERYSEC DS    0H
***********************************************************************
* THE QUERY SECURITY COMMAND                                          *
*                                                                     *
***********************************************************************
         CLC   SECLEVEL(4),=CL4'MINI'
         BE    QSECMINI
         CLC   SECLEVEL(4),=CL4'MAXI'
         BE    QSECMAXI
         CLC   SECLEVEL(4),=CL4'MEDI'
         BE    QSECMEDI
         B     QSECERR
QSECMINI DS    0H
         MVC   CCWTO1D+31(8),=CL8'MINIMAL'
         B     QSECSECS
QSECMAXI MVC   CCWTO1D+31(8),=CL8'MAXIMAL'
         B     QSECSECS
QSECMEDI MVC   CCWTO1D+31(8),=CL8'MEDIAL'
         B     QSECSECS
*
QSECSECS DS    0H
         MVC   CCWTO1D+51(4),SECSYS
         L     R0,CONSOLE
         WTO   MF=(E,CCWTO1D)           (MSG 126)
         B     ENDPROG
QSECERR  DS    0H
         WTO   'TSSC127S ERROR PROCESSING Q SEC COMMAND',DESC=1
         B     ENDPROG
*
QUERYXME DS    0H
***********************************************************************
* PROCESS THE QUERY XMEM COMMAND. THIS COMMAND DISPLAYS THE VALUE OF  *
* THE TSSO LX INDEX.                                                  *
*                                                                     *
***********************************************************************
         L     R10,CVTADDR           PICK UP THE TSSO CVT
         TM    TSSOFLG2,TSSOXMON     IS XMEM ON ?
         BNO   NOXMEM                NO XMEM SERVICES
         GETCVT (R7),NDSA=YES        GET THE NDSA
         USING TSSONDSA,R7
         L     R1,TSSOLX             GET THE TSSO LX
         DROP  R7
         LA    R10,DATD
         CALL  JCECVTBH              CONVERT
         STCM  R0,B'1111',CCWTO5D+39
         STCM  R1,B'1111',CCWTO5D+43
         L     R0,CONSOLE
         WTO   MF=(E,CCWTO5D),MCSFLAG=(REG0)
         B     ENDPROG
NOXMEM   DS    0H
         L     R0,CONSOLE
         WTO   'TSSC141I TSSO CROSS MEMORY SERVICES ENVIRONMENT NOT ESTX
               ABLISHED',MCSFLAG=(REG0)
         B     ENDPROG
QUERYLGN DS    0H
***********************************************************************
* PROCESS THE QUERY LOGONS COMMAND. THIS COMMAND WILL DISPLAY ALL     *
* USERS LOGGED ON TO THE SECURITY SYSTEM.                             *
*                                                                     *
***********************************************************************
         XR    R7,R7                         KEEP COUNT OF # OF USERS
         CLC   SECLEVEL(4),=CL4'MINI'        MINIMAL SECURITY ?
         BE    LGNSMINI
         L     R6,SECARRAY                   GET ADDRESS OF SECARRAY
         LTR   R6,R6                         ANY ?
         BZ    LGNSERR
         LA    R5,20                         MAXIMUM ENTRIES
LGNSLOOP DS    0H
         USING TSSOSECR,R6
         TM    SECFLAGS,X'80'          IN USE?
         BZ    LGNSELOP                NO, IGNORE IT.
***********************************************************************
* HERE, WE HAVE AN ENTRY IN THE TABLE. WE WILL FORMAT THE ENTRY AND   *
* WTO IT OUT TO THE OPERATOR.                                         *
***********************************************************************
         LA    R10,DATD
         LH    R1,SECCONS
         CALL  JCECVTBD
         L     R10,CVTADDR
         STCM  R1,B'0011',CCWTO2D+25
         MVC   CCWTO2D+34(8),SECUSER
         L     R0,CONSOLE
         WTO   MF=(E,CCWTO2D)          (MSG 128)
         LA    R7,1(R7)
LGNSELOP DS    0H
         LA    R6,SECRLGNT(R6)
         BCT   R5,LGNSLOOP
*
         LA    R10,DATD
         LR    R1,R7
         CALL  JCECVTBD
         L     R10,CVTADDR
         STCM  R1,B'0011',CCWTO3D+13   (MSG 131)
         L     R0,CONSOLE
         WTO   MF=(E,CCWTO3D)
         B     ENDPROG
*
LGNSMINI DS    0H
         L     R0,CONSOLE
         WTO   'TSSC129E Q LOGON CONTROL COMMAND INVALID IF SECLEVEL ISX
                MINIMAL',MCSFLAG=(REG0)
         B     ENDPROG
*
LGNSERR  DS    0H
         WTO   'TSSC130S Q LOGON CONTROL COMMAND ENCOUNTERED A SEVERE EX
               RROR- CONTACT TSSO SUPPORT',DESC=(1)
         B     ENDPROG
         DROP  R6
*
*
QUERYTAB DS    0H
***********************************************************************
* THE ALL IMPORTANT .QT COMMAND                                       *
*                                                                     *
***********************************************************************
         L     R6,TSSOTABL       GET ADDRESS OF TABLE
         LTR   R6,R6
         BNZ   QTABREAL
         L     R0,CONSOLE
         WTO   'TSSC121I TSSO AUTOMATED OPERATIONS FACILITY IS NOT ACTIX
               VE',MCSFLAG=(REG0)
         B     ENDQUERY
QTABREAL DS    0H
         MVC   WTO15D+33(8),TSSOTABN
         L     R0,CONSOLE
         WTO   MF=(E,WTO15D)         (MSG 122)
         MVC   WTO38D+23(8),12(R6)  INSERT TABLE ID.
         MVC   WTO38D+39(8),28(R6)  INSERT DATE ASSEMBLED
         MVC   WTO38D+55(8),36(R6)  INSERT TIME.
         L     R0,CONSOLE
         WTO   MF=(E,WTO38D)        (MSG 123)
         B     ENDQUERY
ENDQUERY DS    0H
         B     ENDPROG
*
*
*
*
*
LISTREQ  DS    0H
***********************************************************************
* THE #.L COMMAND WILL LIST THE OUTPUT FROM THE LAST TSSO COMMAND OR  *
* CLIST AT SOME OTHER CONSOLE.                                        *
*                                                                     *
***********************************************************************
         MVC   CCMDFLAG+2(2),CONSOLE+2   ASSUME SOURCE CONSOLE.
         CLI   PARARRAY+18,C' '           L=N OR L=NN, CONSOLE ID
         BE    LISTSCON                   JUST L, USE SOURCE CONSOLE
         CLI   PARARRAY+18,C'0'
         BL    LISTSCON
*
         CLI   PARARRAY+19,C'0'
         BL    LISTID1
         PACK  DOUBLE,PARARRAY+18(2)
         B     AR10
LISTID1  PACK  DOUBLE,PARARRAY+18(1)
AR10     DS    0H
         CVB   R0,DOUBLE
         LTR   R0,R0
         BZ    LISTSCON
         STH   R0,CCMDFLAG+2
LISTSCON DS    0H
         OI    CCMDFLAG,X'40'       SET FLAG INDICATING LIST OUTPUT
         B     ENDPROG
*
*
*
*
STOPREQ  DS   0H
***********************************************************************
* THIS A A REQUEST TO TERMINATE THE TSSO SUBSYSTEM...                 *
***********************************************************************
         OI   CCMDFLAG,X'80'        INDICATE OPERATORS DESIRES...
         B    ENDPROG               OH WELL...
EXIT0    DS   0H
ENDPROG  DS   0H
         LR     R1,R13              GET ADDRESS OF CORE IN R1
         L      R13,4(R13)          RESTORE R13
         FREEMAIN R,LV=72,A=(R1)    FREE UP THE CORE
ENDPROG1 DS     0H
         L      R14,12(R13)         RELOAD RETURN POINT
         XR     R15,R15
         LM     R0,R12,20(R13)      RELOAD MORE REGISTERS
         BR     R14
*
REQJOBID DS    0H
***********************************************************************
* THIS IS THE SUBROUTINE TO REQUEST A JOB ID FROM THE PRIMARY JOB     *
* ENTRY SUBSYSTEM. TSSO WILL MAKE THE SUBSYSTEM CALL TO JES REQUESTING*
* THAT IT BE KNOWN.                                                   *
***********************************************************************
         L     R3,16               CVTPTR
         USING CVT,R3
         L     R4,CVTJESCT         JES CONTROL TABLE
         USING JESCT,R4
*              FOR SUBSYSTEMS, SSIBSSNM IS MSTR, SSIBJBID IS NAME
*              FOR STC,        SSIBSSNM IS JES2, SSIBJBID IS STC NNNN
         MVC   PRIMSSIB+8(4),JESPJESN
         LR    R6,R14
         LA    R5,$SVSSOB           GET ADDRESS OF AN SSOB
         USING SSOB,R5              ADDRESS IT
         MVC   SSOBID(4),=C'SSOB'   FILL IN  "SSOB" HEADER
         LA    R15,SSOBHSIZ         GET LENGTH  OF HEADER
*                                   FROM IEFJSSOBH (COMMON HEADER)
         STH   R15,SSOBLEN          FILL IN LENGTH FIELD
         LA    R15,SSOBRQST         GET "REQUEST" IDENTIFIER
         STH   R15,SSOBFUNC         AND STORE IN FUNCTION FIELD
         LA    R15,$SVSSIB           GET ADDRESS OF OUR NEW SSIB
         MVC   $SVSSIB(36),PRIMSSIB  FILL IN ALL FIELDS FROM MODEL
         ST    R15,SSOBSSIB          STORE IN OUR SSOB
         LA    R15,SSRRBGN          GET ADDRESS OF FUNCTION DEPENDENT
*                                   AREA
         ST    R15,SSOBINDV         AND STORE AWAY
         LA    R1,$SVSSOBA           POINT TO ADDRESS FIELD TO CONTAIN
*                                   A(SSOB)
         ST    R5,0(R1)             PUT ADDRESS OF OUR SSOB INTO IT
         OI    0(R1),X'80'          FLIP ON HIGH ORDER BIT
*                                   AS REQUIRED BY IEFSSREQ
         LA    R15,8
         STH   R15,SSRRLEN          COMPLETE SSOB EXTENSION BY
*                                   FILLING IN LENGTH FIELD OF 8
         LA    R15,$SVRRECB         GIVE IT AN ECB
         ST    R15,SSRRSECB         AND TELL IT WHERE IT IS
         DROP  R5                  SSOB
         SPACE
         LR    R5,R1                SAVE R5 ACROSS THE MODESET
         MODESET MODE=SUP
         LR    R1,R5                AND RETRIEVE IT
         SPACE
         IEFSSREQ
         LR    R5,R15               SAVE RETURN CODE FROM IEFSSREQ
         MODESET MODE=PROB
*
         MODESET KEY=ZERO
*
         LR    R15,R5               AND RETRIEVE IT.
         LTR   R15,R15
         BZ    OKREQ
         WTO   'TSSC124E TSSO IS UNABLE TO OBTAIN A JOB IDENTIFIER FROMX
               THE JOB ENTRY SUBSYSTEM'
         BR    R6
OKREQ    DS    0H                  WE HAVE A JOB ID
         OI    TSSOFLG1,TSSOJBID   WE HAVE A JOB ID
*
*              OPENING A SYSOUT DATA SET WILL CAUSE A 913-C0 ABEND
*              UNLESS THE JSCB POINTS TO A JES2 SSIB.  WE COULD
*              MODIFY THE SSIB, OR POINT THE JSCB TO A NEW SSIB.
*              THE LATTER IS USED HERE.  THE OTHER METHOD HAS
*              NOT BEEN TESTED.
*
         SPACE
         SPACE
         LA    R1,$SVSSIB          POINT TO OUR SSIB
         L     R15,TSSOJSCB
         STCM  R1,7,X'13D'(R15)    JSCBSSIB-JSCB(,R15)
         OI    TSSOFLG1,TSSOJSMD   INDICATE JSCB MODIFIED
         SPACE
         BR    R6
***********************************************************************
* CONSTANTS AREA FOR TSSOCCMD VARIABLES ONLY                          *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
CCWTO1C  WTO   'TSSC126I SECURITY LEVEL IS XXXXXXXX, SYSTEM IS XXXX',  X
               MF=L,MCSFLAG=(REG0)
CCWTO1CE EQU   *
*
CCWTO2C  WTO   'TSSC128I CONSOLE ID: XX, USER XXXXXXXX',               X
               MF=L,MCSFLAG=(REG0)
CCWTO2CE EQU   *
*
CCWTO3C  WTO   'TSSC131I XX CONSOLES CURRENTLY LOGGED ON TO TSSO',     X
               MF=L,MCSFLAG=(REG0)
CCWTO3CE EQU   *
*
*
CCWTO4C  WTO   'TSSC139I CONSOLES WILL "TIME OUT" IN XX MINUTES',      X
               MF=L,MCSFLAG=(REG0)
CCWTO4CE EQU   *
*
CCWTO5C  WTO   'TSSC140I TSSO LX RESERVED VALUE IS XXXXXXXX',          X
               MF=L,MCSFLAG=(REG0)
CCWTO5CE EQU   *
*
POST1C   POST  ,ASCB=0,ERRET=0,MF=L
POST1CE  DS    0H
*
CMDTABLE DS    0H
***********************************************************************
* THE FORMAT OF THE TSSO CONTROL COMMANDS TABLE IS AS FOLLOWS.        *
* 8 BYTES: COMMAND NAME                                               *
* 4 BYTES: ADDRESS OF ROUTINE TO HANDLE IT                            *
* 4 BYTES: FLAGS                                                      *
*          BYTE 1:
*          X'80'     COMMAND REQUIRES AT LEAST SYSTEM AUTHORITY
***********************************************************************
         DC    CL8'P       ',AL4(STOPREQ),X'80000000'       RESTRICTED
         DC    CL8'L       ',AL4(LISTREQ),X'00000000'   NOT RESTRICTED
         DC    CL8'M       ',AL4(MONITOR),X'80000000'       RESTRICTED
         DC    CL8'J       ',AL4(STC),X'80000000'           RESTRICTED
         DC    CL8'Q       ',AL4(QUERY),X'00000000'     NOT RESTRICTED
         DC    CL8'RELOAD  ',AL4(RELOAD),X'80000000'        RESTRICTED
         DC    CL8'ABEND   ',AL4(ABENDIT),X'80000000'       RESTRICTED
         DC    CL8'LOGON   ',AL4(LOGON),X'00000000'  NOT  RESTRICTED
         DC    CL8'LOGOFF  ',AL4(LOGOFF),X'00000000'   NOT RESTRICTED
         DC    CL8'ZZZZZZZZ',AL4(0),X'00000000'         END OF TABLE.
QRYTABLE DS    0H
***********************************************************************
* THE FORMAT OF THE TSSO QUERY CONTROL COMMAND TABLE IS AS FOLLOWS    *
* 8 BYTES: COMMAND NAME                                               *
* 4 BYTES: ADDRESS OF ROUTINE TO HANDLE IT                            *
* 4 BYTES: FLAGS                                                      *
*          BYTE 1:
*          X'80'     COMMAND REQUIRES AT LEAST SYSTEM AUTHORITY
***********************************************************************
         DC    CL8'T       ',AL4(QUERYTAB),X'00000000'  NOT RESTRICTED
         DC    CL8'TABLE   ',AL4(QUERYTAB),X'00000000'  NOT RESTRICTED
         DC    CL8'MAXCMD  ',AL4(QMAXCMD),X'00000000'   NOT RESTRICTED
         DC    CL8'MAXWTO  ',AL4(QMAXWTO),X'00000000'   NOT RESTRICTED
         DC    CL8'TIMEOUT ',AL4(QTMEOUT),X'00000000'   NOT RESTRICTED
         DC    CL8'SWAP    ',AL4(QUERYSWP),X'00000000'  NOT RESTRICTED
         DC    CL8'RACF    ',AL4(QUERYRCF),X'80000000'      RESTRICTED
         DC    CL8'VERS    ',AL4(QUERYVRS),X'00000000'  NOT RESTRICTED
         DC    CL8'SCON    ',AL4(QUERYSCO),X'00000000'  NOT RESTRICTED
         DC    CL8'SEC     ',AL4(QUERYSEC),X'00000000'  NOT RESTRICTED
         DC    CL8'LOGON   ',AL4(QUERYLGN),X'00000000'  NOT RESTRICTED
         DC    CL8'XMEM    ',AL4(QUERYXME),X'00000000'  NOT RESTRICTED
         DC    CL8'ZZZZZZZZ',AL4(0),X'00000000'         END OF TABLE.
CCMDDATD DSECT
***********************************************************************
* DATA AREA FOR TSSOCCMD VARIABLES ONLY                               *
*                                                                     *
***********************************************************************
CCWTO1D  WTO   'TSSC126I SECURITY LEVEL IS XXXXXXXX, SYSTEM IS XXXX',  X
               MF=L,MCSFLAG=(REG0)
*
CCWTO2D  WTO   'TSSC128I CONSOLE ID: XX, USER XXXXXXXX',               X
               MF=L,MCSFLAG=(REG0)
*
CCWTO3D  WTO   'TSSC131I XX CONSOLES CURRENTLY LOGGED ON TO TSSO',     X
               MF=L,MCSFLAG=(REG0)
*
CCWTO4D  WTO   'TSSC139I CONSOLES WILL "TIME OUT" IN XX MINUTES',      X
               MF=L,MCSFLAG=(REG0)
CCWTO5D  WTO   'TSSC140I TSSO LX RESERVED VALUE IS XXXXXXXX',          X
               MF=L,MCSFLAG=(REG0)
*
POST1D   POST  ,ASCB=0,ERRET=0,MF=L
*
CONSOLE  DS    F            CONSOLE INVOKING THIS COMMAND
NEWENTAD DS    F            ADDRESS OF NOT IN USE ENTRY IN SECURITY
CVTADDR  DS    F            ADDRESS OF THE TSSO CVT
*                           ARRAY
DINTVL   DS    CL8          TIME INTERVAL.
AUTHBITS DS    X
***********************************************************************
* PARAMETERS TO PASS TO THE SECURITY LOGON ROUTINE.                   *
*                                                                     *
***********************************************************************
SECPRM   DS    0H
PRMFLAGS DS    XL2
* X'80'  ROUTINE CALLED FOR LOGON
* X'40'  ROUTINE CALLED FOR LOGOFF.
PRMCONS  DS    CL2
PRMACEE  DS    CL4
PRMUSER  DS    CL8
PRMPASS  DS    CL8
         COPY  TSSODATD
         TSSOCVT
         TSSONDSA
         TSSOSECR
         TAOFNTRY
         SSCONCBH
         SSCONCB
         CVT   DSECT=YES
         IEFJESCT
         IEFJSCVT
         IEFJSSVT
         IEFJSSIB
         IEFJSSOB (CM,RR),CONTIG=YES
         IEZJSCB
UCM      DSECT
         IEECUCM
         END   TSSOCCMD
 PUNCH ' SETCODE  AC(1)'
 PUNCH ' IDENTIFY TSSOCCMD(''TSSO V 4.3.0  &SYSDATE &SYSTIME'') '
 PUNCH ' INCLUDE  SYSLMOD(JCECVT)'
 PUNCH ' INCLUDE  SYSLMOD(TSSOPARS)'
 PUNCH ' ENTRY    TSSOCCMD'
 PUNCH ' NAME     TSSOCCMD(R)'
         END
