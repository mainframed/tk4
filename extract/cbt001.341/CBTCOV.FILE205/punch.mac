PUNC     TITLE '                        PREPARE FOR A COMPILE AND PUNCH*
                A DECK'
PUNCH    CSECT
         PRIME
         XC    SAVEAREA(72),SAVEAREA    CLEAR SAVEAREA
         ST    R12,BASE                 STORE BASE ADDR
         L     R10,0(R1)                LOAD ADDR OF PASSAREA
         USING PASSAREA,R10
         ST    R10,LINKLIST              SAVE ADDR OF PASSAREA IN LIST
         ST    R10,POLNKLST             SAVE ADDR OF PASSAREA IN LIST
         TM    INDBITS,LISTIND          CHECK IF A LIST
         BNO   NOLIST                   NO - BYPASS
         MVI   EXIT3B+1,X'00'           MAKE BRANCH A NOP
         MVI   EXIT4B+1,X'00'           MAKE BRANCH A NOP
         LOAD  EPLOC=HEADING            LOAD HEADING ROUTINE
         ST    R0,HEADADDR              SAVE ENTRY POINT ADDR
         LA    R7,45                    GET FIRST LINECOUNT
         ST    R7,LINECNT               SAVE LINE COUNT
NOLIST   DS    0H                       BYPASS
       DEVTYPE DDNAME,                  ADDR OF DDNAME                 *
               TYPEWORD                 ADDR OF RECEIVING WORDS
         LTR   R15,R15                  DID WE GET THE INFO
         BNZ   ERR1                     NO GIVE ERROR
         TM    TYPEWORD+2,X'20'         IS IT A DA DEVICE
         BNO   SEQUENTL                 NO MUST BE SEQUENTIAL DEVICE
        RDJFCB SYSPUNCH                 GET DSNAME & VOLSER FOR OBTAIN
         LTR   R15,R15                  DID IT WORK
         BNZ   ERR2                     NO - ERROR
        OBTAIN CAMLST1                  OBTAIN FOR DSORG
         TM    DS1DSORG,X'40'           IS IT SEQUENTIAL
         BO    SEQUENTL                 YES - PROCESS AS SEQUENTIAL
         TM    DS1DSORG,X'02'           CHECK FOR PARTITIONED ORG
         BO    PARTITON                 HANDLE AS PARTITIONED
         CLC   JFCBDQTY,=3X'00'         ARE ANY DIRECTORY BLKS ALLOC
         BNE   PARTITON                 YES - TREAT AS PARTITIONED
         B     SEQUENTL                 ELSE DEFAULT TO SEQUENTIAL
SEQUENTL DS    0H                       HANDLE AS A SEQUENTIAL DATA SET
         OPEN  (INPUT,OUTPUT,                                          *
               SYSPUNCH,(OUTPUT,LEAVE))
         LA    R1,LINKLIST              GET ADDR OF LINKLIST
         LINK  EPLOC=EXPAND,            LINK TO EXPAND                 *
               MF=(E,(1))               PARM ADDR IN R1
EOJ      DS    0H                       END - OF - JOB
         TM    INDBITS,LISTIND          WAS A LIST REQUESTED
         BNO   TERME                    NO - GO TERMINATE
        DELETE EPLOC=HEADING             DELETE THE MODULE
TERME    DS    0H                       TERMINATE
         CLOSE (INPUT,,SYSPUNCH,,SYSPUNPO) MAKE SURE ALL DCB'S CLOSED
         L     R15,CONDCODE             LOAD RETURN CODE
         TERME
         EJECT
PARTITON DS    0H                       TREAT AS A PARTITIONED DS
         LA    R2,SYSPUNPO              LOAD DCB ADDR
         USING IHADCB,R2                ESTABLISH ADDRESSABILITY
         OPEN  (INPUT,OUTPUT,                                          *
               SYSPUNPO,OUTPUT)
         MVC   MAXBLKSI+2(2),DCBBLKSI   MOVE THE BLKSIZE
         DROP  R2
         L     R0,MAXBLKSI              LOAD BLKSIZE
       GETMAIN R,LV=(0)                 GET MAIN FOR BUFFER
         ST    R1,SAVE                  START A BEGINNING
         ST    R1,DECB+12               STORE BUFFER ADDR IN WRITE MACR
         L     R0,MAXBLKSI              GET SIZE AGAIN
         AR    R1,R0                    ADD TO R1 FOR END ADDR
         ST    R1,BUFENDAD              STORE END ADDR
         MVC   BLDLNAME,NAME            DEFAULT TO NAME
         TM    INDBITS,NEWNMIND         CHECK IF NEWNAME PROCESSING
         BNO   NONEWNM                  NO - PROCEED
         MVC   BLDLNAME,NEWNAME         MOVE NEW NAME
NONEWNM  DS    0H                       NOT NEWNAME PROCESSING
         BLDL  SYSPUNPO,BLDLLIST        CHECK IF MEMBER EXISTS
         CLM   R15,1,=X'04'             WAS IT FOUND?
         BE    ADDMEMB                  NO - MUST BE ADD OR REPL
         LTR   R15,R15                  CHECK FOR I/O ERROR
         BNZ   ERR4                     I/O ERROR
         TM    INDBITS,REPLCTL          CHECK IF REPLACE
         BNO   ERR5                     GIVE ERROR MESG
ADDMEMB  DS    0H                       MAY BE EITHER ADD OR REPL
         LA    R1,POLNKLST              LOAD ADDR OF LIST
         LINK  EPLOC=EXPAND,            LINK TO EXPAND                 *
               MF=(E,(1))
        L     R0,MAXBLKSI              GET SIZE TO BE FREED
         L     R1,DECB+12               GET ADDR TO BE FREED
      FREEMAIN R,LV=(0),A=(1)           FREE THE BUFFER
         MVC   STOWNAME,BLDLNAME        MOVE THE NAME FOR STOW
         STOW  SYSPUNPO,STOWNAME,R      DO THE STOW
         CLM   R15,1,=X'08'             WAS IT ADDED
         BE    EOJ                      YES - OKAY
         LTR   R15,R15                  WAS IT REPLACED
         BZ    EOJ                      YES - OKAY
         B     ERR6                     ELSE ERROR
         EJECT
EXIT3    DS    0H                       EXIT ROUTINE FOR PARTITIONED
         STM   R14,R12,12(R13)          SAVE REGISTERS
         USING EXIT3,R15                ESTABLISH ADDRESSABILITY
         L     R12,BASE                 PICK UP BASE ADDR
         DROP  R15
         LA    R2,SAVEAREA              GET SAVE AREA ADDR
         ST    R2,8(R13)                CHAIN SAVE AREAS
         ST    R13,4(R2)                CHAIN SAVE AREAS
         LR    R13,R2                   GET NEW SAVE AREA ADDR
         L     R10,LINKLIST             GET PASSAREA ADDR
         L     R2,BUFENDAD              GET BUFFER END ADDR
         L     R3,SAVE                  GET STEP ADDR INTO BUFFER
         LTR   R1,R1                    WAS RECORD PASSED
         BZ    EXIT3END                 NO - LAST RECORD
         LR    R4,R1                    SAVE R1 IN R4
         MVC   0(80,R3),0(R1)           LAY RECORD INTO BUFFER
         LA    R3,80(R3)                ADD 80 TO BUFFER STEP
         LR    R0,R1                    GET RECORD ADDR
         PUT   INPUT                    WRITE RECORD
EXIT3B   B     EXIT3CHK                 SWITCH FOR LIST=ALL
         L     R7,LINECNT               GET PRESENT LINE COUNT
         BCT   R7,EXIT3NOH              SUBTRACT ONE AND CHECK
         LA    R1,LINKLIST              LOAD PASS PARM
         L     R15,HEADADDR             GET ADDR OF MODULE
         BALR  R14,R15                  GO TO THE MODULE
         LR    R7,R15                   PICK UP NEW LINE COUNT
EXIT3NOH DS    0H                       NO HEADING NEEDED NOW
         ST    R7,LINECNT               SAVE PRESENT LINE COUNT
         L     R1,DCBADDR               GET DCB ADDR
         MVC   CARDIMAG+41(80),0(R4)    MOVE RECORD TO PRINT
         PUT   (1),CARDIMAG             WRITE THE RECORD
EXIT3CHK DS    0H                       BYPASS POINT FOR NO LIST
         CR    R3,R2                    CHK IF AT END OF BUFFER
         BL    EXIT3RET                 NO - RETURN
EXIT3WRT DS    0H                       WRITE RECORD TO LIB
         WRITE DECB,                    DECB NAME                      *
               SF,                      STANDARD FORWARD               *
               SYSPUNPO,                DCB ADDR                       *
               CARDIMAG                 DUMMY BUFFER ADDR- NOT USED ***
         CHECK DECB                     CHECK THE I/O
         L     R3,DECB+12               GET START ADDR AGAIN
EXIT3RET DS    0H                       RETURN TO EXPAND
         ST    R3,SAVE                  SAVE STEP ADDR INTO BUFFER
         L     R13,4(R13)               STEP BACK ONE SAVEAREA
         LM    R14,R12,12(R13)          RESTORE REGISTERS
         BR    R14                      RETURN
EXIT3END DS    0H                       EXPAND HAS PASSED LAST RECORD
         L     R2,DECB+12               GET BUFFER START ADDR
         SR    R3,R2                    GET LENGTH OF LAST BUFFER
         LTR   R3,R3                    CHEK IF ZERO
         BZ    EXIT3RET                 RETURN IF ZERO - FINISHED
         LA    R2,SYSPUNPO              GET DCB ADDR
         USING IHADCB,R2
         STH   R3,DCBBLKSI              PUT NEW BLKSIZE IN DCB
         DROP  R2
         B     EXIT3WRT                 GO WRITE LAST BUFFER
         EJECT
EXIT4    DS    0H                       EXIT TO EXPAND
         STM   R14,R12,12(R13)          SAVE REGISTERS
         USING EXIT4,R15
         L     R12,BASE                 GET BASE REGISTER ADDRESS
         DROP  R15
         LA    R2,SAVEAREA              GET SAVEAREA ADDR
         ST    R2,8(R13)                CHAIN
         ST    R13,4(R2)                     SAVEAREAS
         LR    R13,R2                   GET NEW SAVEAREA ADDR
         L     R10,LINKLIST             GET PASS AREA ADDR
         LTR   R1,R1                    CHECK REGISTER ONE
         BZ    EXIT4END                 IF ZERO - FINISHED
         LR    R2,R1                    SAVE RECORD ADDRESS
         LR    R0,R1                    LOAD POINTER TO CARD
         PUT   INPUT                    PUT ONE RECORD
         LR    R0,R2                    POINT TO RECORD
         PUT SYSPUNCH                   PUT THE RECORD
EXIT4B   B     EXIT4END                 BYPASS LISTING
         L     R7,LINECNT               GET THE LINE COUNT
         BCT   R7,NOHEAD                KEEP LINE COUNT
         LA    R1,LINKLIST              GET ADDR OF PASSLIST
         L     R15,HEADADDR             LOAD ENTRY POINT ADDR
         BALR  R14,R15                  LINK TO HEADING ROUTINE
         LR    R7,R15                   GET NEW LINE COUNT
NOHEAD   DS    0H                      BYPASS HEADING
         ST    R7,LINECNT               SAVE LINE COUNT
         L     R1,DCBADDR               GET DCB ADDRESS
         MVC   CARDIMAG+41(80),0(R2)    MOVE THE CARD
         PUT   (1),CARDIMAG             PUT THE CARD
EXIT4END DS    0H                       FINISHED
         L     R13,4(R13)               GET SAVE AREA ADDR
         LM    R14,R12,12(R13)          RESTORE REGISTERS
         BR    R14                      RETURN
         EJECT
ERR1     DS    0H
ERR2     DS    0H
ERR3     DS    0H
ERR4     DS    0H
ERR6     DS    0H
         MVI   CONDCODE+3,X'10'         SET RETURN CODE TO 16
         B     EOJ                      GO TERMINATE
ERR5     DS    0H                       BLDL WAS SUCCESSFUL FOR ADD
         MVC   CARDIMAG(L'MESG5),MESG5  MOVE MESSAGE TO BE PRINTED
         B     PUTMESG                  GO PRINT THE MESSAGE
PUTMESG  DS    0H                       WRITE ERROR MESSAGES
         L     R1,DCBADDR               GET ADDR OF DCB FOR MSG FILE
         PUT   (1),CARDIMAG             WRITE THE MESSAGE
         MVI   CONDCODE+3,X'10'         SET RETURN CODE TO 16
         B     EOJ                      GO TERMINATE
         EJECT
         USING IHADCB,R1
DCBEXITI DS    0H                       DCB EXIT FOR INPUT
         CLC   DCBBLKSI,=2X'00'         CHECK IF ZERO
         BNER  R14                      RETURN IF NOT ZERO
         MVC   DCBBLKSI,=H'400'         MAKE BLKSIZE 400
         BR    R14                      RETURN
         SPACE 2
DCBEXITS DS    0H                       DCB EXIT FOR SYSPUNCH
         CLC   DCBBLKSI,=2X'00'         CHECK IF BLKSIZE ZERO
         BNER  R14                      RETURN IF NOT ZERO
         MVC   DCBBLKSI,=H'400'         MAKE BLKSIZE 400
         BR    R14                      RETURN
         DROP  R1
         SPACE 2
         EJECT
BASE     DS    F
LINECNT  DS    F
HEADADDR DS    F
MAXBLKSI DC    F'0'                     BLKSIZE OF PARTITIONED FILE
CONDCODE DC    F'0'
BUFENDAD DS    F
SAVE     DS    F
EXPAND   DC    CL8'EXPAND'
HEADING  DC    CL8'HEADING'
DDNAME   DC    CL8'SYSPUNCH'
MESG5    DC    C'0IZG026I ATTEMPT TO ADD A MEMBER WHICH PRESENTLY EXIST*
               S ON THE EXPANDED LIBRARY'
TYPEWORD DC    2F'0'
EXLSTSP  DC    0F'0',X'05',AL3(DCBEXITS),X'87',AL3(JFCBDSNM)
EXLSTIN  DC    0F'0',X'85',AL3(DCBEXITI)
SAVEAREA DS    18F
LINKLIST DS    F                        ADDRESS OF PASSAREA
         DC    A(EXIT4)
POLNKLST DS    F
         DC    A(EXIT3)
BLDLLIST DC    H'1',Y(58)
BLDLNAME DS    CL8
BLDLTTR  DS    CL3
BLDLK    DS    CL1
BLDLC    DS    CL1
         ORG   BLDLNAME
         DS    CL58                     MAKE AT LEAST 58 CHARACTERS
         DS    0H                       ALIGN STOW LIST ON HALF WORD
STOWNAME DS    CL8
TTR      DS    CL3
C        DC    X'00'
CARDIMAG DC    CL133' '
CAMLST1 CAMLST SEARCH,                                                 *
               JFCBDSNM,                                               *
               JFCBVOLS,                                               *
               DS1FMTID
FMT1DSCB DS    0D                       ALIGN ON DOUBLEWORD
      IECSDSL1 (1)                      GENERATE FMT 1 DSCB
         DS    CL52                     PADDING FOR OBTAIN
      IEFJFCBN ,                        GENERATE A JFCB
INPUT    DCB   DDNAME=INPUT,                                           *
               DSORG=PS,                                               *
               MACRF=PM,                                               *
               EXLST=EXLSTIN,                                          *
               RECFM=FB,                                               *
               LRECL=80
SYSPUNCH DCB   DDNAME=SYSPUNCH,                                        *
               RECFM=FB,                                               *
               MACRF=PM,                                               *
               LRECL=80,                                               *
               DSORG=PS,                                               *
               EXLST=EXLSTSP
SYSPUNPO DCB   DDNAME=SYSPUNCH,                                        *
               DSORG=PO,                                               *
               MACRF=W,                                                *
               LRECL=80,                                               *
               RECFM=FB,                                               *
               EXLST=EXLSTSP
PASSAREA PASSAREA
         DCBD  DSORG=PS,DEVD=DA
         END
