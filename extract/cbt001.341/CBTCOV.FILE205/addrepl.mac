ADRP     TITLE '                        ADD OR REPLACE A MEMBER'
*        CSECT NAME -- ADDREPL
*        OTHER ENTRY POINTS -- NONE
*        LANGUAGE -- IBM 370 ASSEMBLER F
*        ATTRIBUTES -- NOT REUSABLE, NOT REENTRANT
*        SUBROUTINES USED -- NONE
*        ATTACH, LINK, OR LOAD TO -- SQUEEZE
*        OPERATING SYSTEM -- OS/370/MVT REL 21.6
*        DATE WRITTEN -- 26 DECEMBER 1972
*        AUTHOR -- P. MICHAEL HENDERSON
*        INSTALLATION -- MIDDLE SOUTH SERVICES
*                        200 WEST BANK EXPRESSWAY
*                        GRETNA, LOUISIANA 70053
         EJECT
ADDREPL  CSECT
         PRIME
         ST    R12,BASE                 SAVE BASE ADDR
         XC    SAVEAREA(72),SAVEAREA    CLEAR SAVEAREA
         L     R10,0(R1)                GET ADDR OF PASS AREA
         USING PASSAREA,R10
         ST    R10,SQUZEPRM             STORE ADDR IN LIST
***********************************************************************
*
*    THIS ROUTINE IS LOAD'ED INSTEAD OF CALL'ED BECAUSE I ALWAYS
*    FORGET TO INCLUDE THE SUBROUTINE WHEN LINKING THIS MODULE.
*                                             THE AUTHOR
*
***********************************************************************
         LOAD  EP=HEADING               LOAD HEADING PROGRAM
         ST    R0,HEADING               STORE ENTRY ADDRESS
         LA    R7,45                    LOAD LINE COUNT
NOLIST   DS    0H                       LISTING BYPASS
         MVC   DSN(44),PDSDSN           MOVE DATA SET NAME TO MESSAGE
RETRY    DS    0H                       HERE TO RETRY AN ADD OR REPL
         OPEN  (INPUT,OUTPUT,                                          *
               WORK03,INPUT)
SEQCARDS DS    0H                 SEQUENCE THE CARDS
         ZAP   SEQNO,NEW1               PUT COUNT OF NEXT CARD IN SEQNO
         SR    R2,R2                    CLEAR R2
         SR    R3,R3                    CLEAR R3
         IC    R2,SEQDSPMT              LOAD DISPLACEMENT IN R2
         PACK  WORK(1),SEQLEN           MOVE AND INVERT NIBBLES
         OI    WORK,X'07'               MAKE LAST NIBBLE A 7.  LEN-1 OF
*                                       SEQNO FIELD
         IC    R3,WORK                  LOAD IN R3 FOR EXECUTED UNPK
         LR    R4,R3                    LOAD R3 IN R4
         SRL   R4,4                     SHIFT OUT LAST 4 BITS
SQUZLINK DS    0H                 LINK TO SQUEEZE PGM
         STM   R2,R8,BUFFADDR           STORE REGISTERS
         LA    R1,SQUZEPRM              LOAD ADDR OF PARM LIST
         LINK  EP=SQUEEZE,MF=(E,(1))    LINK TO SQUEEZE
         CLM   R15,1,=X'14'             CHECK IF RETURN CODE IS 20
         BNE   NOREORG                  NO - THEN BYPASS REORG
         CLOSE (INPUT,,WORK03)          CLOSE THE FILES
         L     R15,REORGADR             GET ADDR OF REORG ROUTINE
         BALR  R14,R15                  GO TO THE ROUTINE
         XC    CARDCNT,CARDCNT          CLEAR THE COUNT OF CARDS
         B     RETRY                    GO RETRY THE UPDATE
NOREORG  DS    0H                       HERE IF NOT A D37 OR E37 ABEND
         LTR   R15,R15                  CHECK RETURN CODE
         BNZ   EOJ                      RETURN IF NOT ZERO
         TM    INDBITS,REPLIND          WAS IT REPLACED
         BO    REPLACED                 YES - GIVE STANDARD MESSAGE
         MVC   ADDED,=CL8'ADDED'        ELSE INDICATED ADDED
REPLACED DS    0H                       MEMBER WAS REPLACED
         L     R9,CARDCNT               GET NUMBER OF CARDS PASSED
         M     R8,=F'8000'              MULTIPLY BY 80 * 100
         L     R5,BLKSIZE               GET BLKSIZE OF COMPRESSED LIB
         L     R1,NUMBLKS               GET NUMBER OF BLKS WRITTEN
         MR    R4,R1                    MULTIPLY TO NUMBER OF BYTES
         A     R5,LASTBLK               ADD SIZE OF LAST BLK
         DR    R8,R5                    DIVIDE INPUT BYTES BY OUTPUT
         CVD   R9,WORK                  CONVERT RESULT TO DECIMAL
         ED    COMPFACT,WORK+5          EDIT RESULT
         MVC   MEMNAME,NAME             MOVE MEMBER NAME
         MVI   CARDIMAG,X'40'           BLANK THE FIELD
         MVC   CARDIMAG+1(L'CARDIMAG-1),CARDIMAG
         MVC   CARDIMAG(L'MESG1),MESG1  MOVE THE MESSAGE
         L     R1,DCBADDR               GET DCB ADDRESS
         PUT   (1),CARDIMAG             PUT THE RECORD
         MVI   CARDIMAG,X'40'           MOVE ONE BLANK
         MVC   CARDIMAG+1(L'CARDIMAG-1),CARDIMAG  BLANK ENTIRE FIELD
         MVC   CARDIMAG(L'MESG2),MESG2  MOVE THE MESSAGE
         L     R1,DCBADDR               GET DCB ADDR
         PUT   (1),CARDIMAG             PUT THE MESSAGE
         SR    R15,R15                  SET ZERO RETURN CODE
EOJ      DS    0H                       TERMINATE
         LR    R11,R15                  SAVE R15
         CLOSE (INPUT,,WORK03)          CLOSE DATA SETS
        DELETE EP=HEADING               DELETE THE HEADING MODULE
         LR    R15,R11                  RESTORE R15
         TERME                          TERMINATE PROGRAM
         SPACE 2
         EJECT
EXIT1    DS    0H                       EXIT ROUTINE FOR SQUEEZE
         STM   R14,R12,12(R13)          SAVE REGISTERS
         USING EXIT1,R15
         L     R12,BASE                 LOAD BASE REGISTER
         DROP  R15
         LA    R2,SAVEAREA              GET SAVEAREA ADDR
         ST    R2,8(R13)                CHAIN
         ST    R13,4(R2)                     SAVEAREAS
         LR    R13,R2                   GET NEW SAVEAREA ADDR
         LM    R2,R8,BUFFADDR           RESTORE REGISTERS
EXIT1GET DS    0H                       LOOP TO GET CARD
         GET   WORK03                   GET A CARD
         CLC   0(2,R1),CTLCDIND         CHK FIRST TWO CHARACTERS
         BE    EXIT1GET                 LOOP TILL NOT FOUND
         L     R5,CARDCNT               GET COUNT OF CARDS
         LA    R5,1(R5)                 ADD ONE
         ST    R5,CARDCNT               STORE COUNT
         LR    R5,R1                    SAVE R1
         LR    R0,R1                    LOAD POINTER TO CARD
         TM    INDBITS,SEQIND           ARE WE TO SEQ THESE CARDS
         BNO   EXIT1RET                 NO - BYPASS SEQ'ING CODE
         LR    R8,R1                    GET ADDR OF CARD
         AR    R8,R2                    ADD LENGTH TO SEQ FIELD
         EX    R3,UNPKSEQ               UNPACK THE SEQ NUMBER
         AR    R8,R4                    POINT TO LAST BYTE IN FIELD
         OI    0(R8),X'F0'              MAKE ZONE 'F'
         AP    SEQNO,INCR               GET THE NEXT CARD NUMBER
EXIT1RET DS    0H                       RETURN POINT
         PUT   INPUT                    CREATE SEQ DATA SET
         TM    INDBITS,LISTIND          WAS A LIST REQUESTED
         BNO   EXIT1LST                 NO - BYPASS GIVING A LIST
         BCT   R7,NOHEAD                BYPASS HEADING WITH COUNT
         LA    R1,SQUZEPRM              LOAD ADDR OF LIST
         L     R15,HEADING              GET ADDR OF HEADING ROUTINE
         BALR  R14,R15                  GO TO HEADING ROUTINE
         LR    R7,R15                   GET NEW LINE COUNT
NOHEAD   DS    0H                       BYPASS HEADING
         ST    R7,BUFFADDR+20           STORE NEW LINE COUNT
         L     R1,DCBADDR               GET DCB ADDRESS
         MVC   CARDIMAG+41(80),0(R5)    MOVE THE CARD
         PUT   (1),CARDIMAG             PUT THE IMAGE
EXIT1LST DS    0H                       PYPASS GIVING A LIST
         LR    R1,R5                    RESTORE REGISTERS
EXIT1GO  DS    0H                       GET OUT
         L     R13,4(R13)               GET SAVE AREA ADDR
         LM    R14,R0,12(R13)           RESTORE
         LM    R2,R12,28(R13)              REGISTERS
         BR    R14                      RETURN
EXIT1END DS    0H                       END OF DATA
         SR    R1,R1                    CLEAR R1
         B     EXIT1GO                  GO RETURN ONE LAST TIME
UNPKSEQ  UNPK  0(0,R8),SEQNO(8)         EXECUTED INSTRUCTION
         EJECT
         USING IHADCB,R1
DCBEXITI DS    0H                       DCB EXIT FOR INPUT
         CLC   DCBBLKSI,=2X'00'         CHECK IF ZERO
         BCR   7,R14                    RETURN IF ZERO
         MVC   DCBBLKSI,=H'400'         DEFAULT TO 400
         BR    R14                      RETURN
         SPACE 2
DCBEXIT3 DS    0H                       DCB EXIT FOR WORK 03
         CLC   DCBBLKSI,=2X'00'         CHECK IF ZERO
         BCR   7,R14                    BRANCH IF NOT ZERO
         MVC   DCBBLKSI,=H'400'         DEFAULT TO 400
         BR    R14                      RETURN
         DROP  R1
         EJECT
WORK     DS    D
SEQNO    DC    PL8'0'
BASE     DS    F
HEADING  DS    F
CARDCNT  DC    F'0'
BUFFADDR DS    7F
SAVEAREA DS    18F
EXLST03  DC    0F'0',X'85',AL3(DCBEXIT3)
SQUZEPRM DC    A(0)                     ADDRESS OF PASSAREA
         DC    A(EXIT1)
EXLSTIN  DC    0F'0',X'85',AL3(DCBEXITI)
         CNOP  2,4
MESG1    DS    0CL86
         DC    C'0IZG013I MEMBER NAME XXXXXXXX REPLACED IN '
DSN      DS    11F                      DATA SET NAME FROM RDJFCB
         ORG   MESG1+21
MEMNAME  DS    CL8
         DS    CL1
ADDED    DS    CL8
         ORG
MESG2    DS    0CL59
         DC    C'0IZG015I COMPRESSION FACTOR FOR THIS SOURCE CODE ='
COMPFACT DC    X'402021204B2020'
         DC    C'/1'
CARDIMAG DC    CL133' '
INPUT    DCB   DDNAME=INPUT,                                           *
               DSORG=PS,                                               *
               MACRF=PM,                                               *
               EXLST=EXLSTIN,                                          *
               RECFM=FB,                                               *
               LRECL=80
WORK03   DCB   DDNAME=WORK03,                                          *
               DSORG=PS,                                               *
               MACRF=GL,                                               *
               EXLST=EXLST03,                                          *
               RECFM=FB,                                               *
               LRECL=80,                                               *
               EODAD=EXIT1END
PASSAREA PASSAREA
         EJECT
         DCBD  DSORG=PS,DEVD=DA
         END
