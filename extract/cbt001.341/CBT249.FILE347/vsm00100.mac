VSM00100 CSECT
         TITLE 'VSM00100 => VIRTUAL STORAGE MEMORY MAPPER'
***********************************************************************
*                                                                     *
*    SYSTEM -           VIRTUAL STORAGE MONITOR                       *
*                                                                     *
*    VERSION -          1.1                                           *
*                                                                     *
*    MODNAME -          VSM00100                                      *
*                                                                     *
*    DESCRIPTIVE NAME - VIRTUAL STORAGE MEMORY MAPPER                 *
*                                                                     *
*    AUTHOR -           R.P. SHANNON                                  *
*                       HALLMARK CARDS                                *
*                       ENFIELD DISTRIBUTION CENTER                   *
*                                                                     *
*    DATE -             9/1/82                                        *
*                                                                     *
*    FUNCTION -         THIS MODULE WILL MAP VIRTUAL STORAGE . IT     *
*                       WILL SHOW THE HIGH AND LOW VIRTUAL ADDRESS    *
*                       OF SQA, PLPA, CSA, THE PRIVATE AREA AND THE   *
*                       NUCLEUS. IT WILL ALSO SHOW THE SIZE OF EACH   *
*                       AREA IN MEG AND IN K.                         *
*                                                                     *
*    ATTRIBUTES -       REUS                                          *
*                                                                     *
*    REGS AT ENTRY-     R1   - INTER MODULE LINKAGE                   *
*                       R14  - RETURN ADDRESS                         *
*                       R15  - EPA                                    *
*                                                                     *
*    REG USAGE     -    R0   - WORK REG                               *
*                       R10  - LINKAGE AREA POINTER                   *
*                       R11  - BASE REG                               *
*                       R13  - SAVE AREA                              *
*                       R14  - RETURN ADDR                            *
*                       R15  - ADDR OF CALLED MODULES                 *
*                                                                     *
*    REGS AT EXIT -     R14  - RETURN ADDRESS                         *
*                                                                     *
*    LABELS             SOME OF THE FIELD USAGE IN THIS MODULE CAN    *
*                       BE DETERMINED BY THE FIRST CHARACTER OF THE   *
*                       FIELD. THE KEYS ARE:                          *
*                            @ - FIELD IS IN INTER-MODULE LINKAGE     *
*                                AREA                                 *
*                            # - FIELD IS PART OF THE OUTPUT SCREEN   *
*                            $ - DSECT                                *
*                                                                     *
*    MACROS -           $DQE       => RYO DQE DSECT                   *
*                       $GDA       => RYO DQE DSECT                   *
*                       $LNKSECT   => LINKAGE AREA DSECT              *
*                       $PQE       => RYO PQE                         *
*                       $SPQE      => RYO SPQE                        *
*                       HMAP       => SCREEN BUILDER                  *
*                                                                     *
*    MODS -                                                           *
*          VERSION 1.0  - BASE                                        *
*                                                                     *
*          VERSION 1.1  - 1. REMOVED AUTOMATIC UPSHIFT OF KEYBOARD    *
*                                                                     *
***********************************************************************
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11                  BASE REG
R12      EQU   12
R13      EQU   13                  GETMAINED ADDRESSABILITY
R14      EQU   14                  RETURN ADDRESS
R15      EQU   15                  EPA/RC
         EJECT
***********************************************************************
*        STANDARD OS LINKAGE                                          *
***********************************************************************
         SPACE
         SAVE  (14,12),,VSM00100+&SYSDATE&SYSTIME   SAVE CALLER'S REGS
         LR    R11,R15                  LOAD BASE REG
         USING VSM00100,R11             CSECT ADDRESSABILITY
         LA    R2,SAVEAREA              CREATE SAVEAREA CHAIN
         ST    R2,8(R13)                FORWARD CHAIN POINTER
         ST    R13,SAVEAREA+4           BACKWARD CHAIN POINTER
         LR    R13,R2                   POINT TO MY SAVEAREA
         EJECT
P000100  DS    0H
         LR    R10,R1                  POINT TO LINKAGE AREA
         USING $LNKSECT,R10            DSECT ADDRESSABILITY
         SPACE
         LA    R2,CLRAREA              CLEAR
         LA    R3,CLEARLEN             WORK
         LR    R4,R2                   FIELDS
         LA    R5,0                    WITH
         MVCL  R2,R4                   ZEROS
         SPACE
P000200  DS    0H
         L     R4,@GDA             LOAD GDA ADDR INTO R4TY
         USING $GDA,R4             DSECT ADDRESSABILITY
         SPACE
         MVC   PVTLOW,PASTRT       DETERMINE BEGIN PRIVATE AREA ADDR
         MVC   PVTSIZE,PASIZE      DETERMINE PRIVATE AREA SIZE
         L     R3,CSAPQEP          CSA PQE POINTER
         LA    R3,0(R3)            CLEAR HIGH ORDER BYTE
         L     R5,SQASPQEP         SQA SPQE POINTER
         LA    R5,0(R5)            CLEAR HIGH ORDER BYTE
         DROP  R4                  DROP GDA ADDRESSABILITY
         SPACE
         USING $PQE,R3             PQE DSECT ADDRESSABILITY
         MVC   CSASIZE,PQESIZE     DETERMINE CSA SIZE
         LR    R4,R5               SQA SPQE POINTER NOW IN R4
         DROP  R3                  DROP CSA PQE ADDRESSABILITY
         SPACE
         USING $SPQE,R4            SPQE DSECT ADDRESSABILITY
         L     R3,SPDQEPTR         POINT TO DQE
         LA    R3,0(R3)            CLEAR HIGH ORDER BYTE
         DROP  R4                  DROP SPQE DSECT ADDRESSABILITY
         SPACE
         USING $DQE,R3             DQE DSECT ADDRESSABILITY
         MVC   SQALOW,DQEBLKAD     DETERMINE SQA BEGIN ADDR
         MVC   SQASIZE,DQELNTH     DETERMINE SQA SIZE
         DROP  R3                  DROP DQE DSECT ADDRESSABILITY
         EJECT
***********************************************************************
*        DO THE CALCULATIONS                                          *
***********************************************************************
P000300  DS    0H
         L     R3,@CSALOW      ADD THE CSA LOW ADDR AND THE
         A     R3,CSASIZE      CSA SIZE TO COMPUTE THE
         ST    R3,LPALOW       LPA LOW ADDR
         BCTR  R3,0            DECREMENT BY +1 TO
         ST    R3,CSAHIGH      FIND CSA HIGH ADDR
         SPACE
         L     R3,SQALOW       DECREMENT THE SQA LOW
         BCTR  R3,0            ADDR BY +1 TO FIND
         ST    R3,LPAHIGH      LPA HIGH ADDR
         SPACE
         S     R3,LPALOW       SUBTRACT LPA LOW ADDR FROM LPA
         ST    R3,LPASIZE      HIGH ADDR TO FIND LPA SIZE
         SPACE
         L     R3,@CSALOW      DECREMENT THE CSA LOW ADDR
         BCTR  R3,0            BY +1 GIVING THE
         ST    R3,PVTHIGH      PVT HIGH ADDR
         SPACE
         L     R3,@VRLINE      SUBTRACT THE HIGH NUCLEUS ADDR
         S     R3,@NUCHIGH     AND THE SYSTEM AREA FROM
         S     R3,K16          THE V=R LINE TO
         ST    R3,VRSIZE       FIND V=R REGION SIZE
         SPACE
         L     R3,@NUCHIGH     STORE VALUE IN @NUCHIGH
         ST    R3,NUCSIZE      AS NUC SIZE AND DECREMENT
         BCTR  R3,0            BY +1 TO OBTAIN
         ST    R3,NUCHIGH      THE PROPER NUC HIGH ADDR
         EJECT
***********************************************************************
*        FORMAT DATA TO BE OUTPUT AND OUTPUT IT                       *
***********************************************************************
P000400  DS    0H
         SR    R2,R2                 CLEAR R2
         SR    R3,R3                 CLEAR R3
         SR    R4,R4                 CLEAR R4
         SR    R5,R5                 CLEAR R5
         SR    R6,R6                 CLEAR R6
         SPACE
         L     R4,TEN                SET R4 TO TEN
         L     R5,ONEMEG             LOAD ONE MEG INTO R4
         SPACE 3
         MVC   FIVEBYTE,@MAXCORE     MOVE SQA HIGH ADDR TO FIVEBYTE
         UNPK  TENBYTE,FIVEBYTE      UNPACK
         TR    TENBYTE+1(8),TRTABLE  TRANSLATE
         MVC   #SQAHIGH,TENBYTE+1    MOVE TO SCREENN
         SPACE
         MVC   FIVEBYTE,SQALOW       MOVE SQA HIGH ADDR TO FIVEBYTE
         UNPK  TENBYTE,FIVEBYTE      UNPACK
         TR    TENBYTE+1(8),TRTABLE  TRANSLATE
         MVC   #SQALOW,TENBYTE+1     MOVE TO OUTPUT SCREEN
         SPACE
         L     R3,SQASIZE            DETERMINE SQA SIZE IN MEGS
         MR    R2,R4                 BY MULT X 10
         DR    R2,R5                 THEN DIVIDING BY 1 MEG
         CVD   R3,DBLEWORD           CONVERT TO PROPER
         MVC   #SQASIZE,EDIT1        FORMAT THEN
         ED    #SQASIZE,DBLEWORD+6   MOVE TO OUTPUT SCREEN
         SPACE
         L     R3,SQASIZE            DETERMINE SQA SIZE IN K
         SRA   R3,10                 BY DIVIDING BY 1024
         CVD   R3,DBLEWORD           CONVERT
         MVC   #SQASIZK,EDIT2        EDIT
         ED    #SQASIZK,DBLEWORD+5   MOVE TO OUTPUT SCREEN
         SPACE 3
         MVC   FIVEBYTE,LPAHIGH      MOVE LPA HIGH ADDR TO FIVEBYTE
         UNPK  TENBYTE,FIVEBYTE      UNPACK
         TR    TENBYTE+1(8),TRTABLE  TRANSLATE TO DISPLAY
         MVC   #LPAHIGH,TENBYTE+1    MOVE TO SCREEN
         SPACE
         MVC   FIVEBYTE,LPALOW       MOVE SQA HIGH ADDR TO FIVEBYTE
         UNPK  TENBYTE,FIVEBYTE      UNPACK
         TR    TENBYTE+1(8),TRTABLE  TRANSLATE TO DISPLAY
         MVC   #LPALOW,TENBYTE+1     MOVE TO SCREEN
         SPACE
         SR    R2,R2                 CLEAR R2
         SR    R3,R3                 CLEAR R3
         L     R3,LPASIZE            DETERMINE LPA SIZE IN MEG
         MR    R2,R4                 BY MULT X 10
         DR    R2,R5                 THEN DIVIDING BY 1 MEG
         CVD   R3,DBLEWORD           CONVERT
         MVC   #LPASIZE,EDIT1        EDIT
         ED    #LPASIZE,DBLEWORD+6   MOVE TO OUTPUT SCREEN
         SPACE
         SR    R2,R2                 CLEAR R2
         L     R3,LPASIZE            DETERMINE LPA SIZE IN K
         LA    R3,1(R3)              BY BUMPING UP BY +1
         SRA   R3,10                 THEN BY DIVIDING BY 1024
         CVD   R3,DBLEWORD           CONVERT
         MVC   #LPASIZK,EDIT2        EDIT
         ED    #LPASIZK,DBLEWORD+5   MOVE TO OUTPUT SCREEN
         SPACE 3
         MVC   FIVEBYTE,CSAHIGH      MOVE CSA HIGH ADDR TO FIVEBYTE
         UNPK  TENBYTE,FIVEBYTE      UNPACK IT AND TRANSLATE TO
         TR    TENBYTE+1(8),TRTABLE  TRANSLATE TO DISPLAY
         MVC   #CSAHIGH,TENBYTE+1    MOVE TO OUTPUT SCREEN
         SPACE
         MVC   FIVEBYTE,@CSALOW      MOVE CSA HIGH ADDR TO FIVEBYTE
         UNPK  TENBYTE,FIVEBYTE      UNPACK
         TR    TENBYTE+1(8),TRTABLE  TRANSLATE TO DISPLAY
         MVC   #CSALOW,TENBYTE+1     MOVE TO OUTPUT SCREEN
         SPACE
         SR    R2,R2                 CLEAR R2
         SR    R3,R3                 CLEAR R3
         L     R3,CSASIZE            DETERMINE CSA SIZE IN MEG
         MR    R2,R4                 BY MULT X 10
         DR    R2,R5                 THEN DIVIDING BY 1 MEG
         CVD   R3,DBLEWORD           CONVERT
         MVC   #CSASIZE,EDIT1        EDIT
         ED    #CSASIZE,DBLEWORD+6   MOVE TO OUTPUT SCREEN
         SPACE
         SR    R2,R2                 CLEAR R2
         L     R3,CSASIZE            DETERMINE CSA SIZE IN K
         SRA   R3,10                 BY DIVIDING BY 1024
         CVD   R3,DBLEWORD           CONVERT
         MVC   #CSASIZK,EDIT2        EDIT
         ED    #CSASIZK,DBLEWORD+5   MOVE TO OUTPUT SCREEN
         SPACE 3
         MVC   FIVEBYTE,PVTHIGH      MOVE PVT HIGH ADDR TO FIVEBYTE
         UNPK  TENBYTE,FIVEBYTE      UNPACK
         TR    TENBYTE+1(8),TRTABLE  TRANSLATE TO DISPLAY
         MVC   #PVTHIGH,TENBYTE+1    MOVE TO OUTPUT SCREEN
         SPACE
         MVC   FIVEBYTE,PVTLOW       MOVE PVT LOW ADDR TO FIVEBYTE
         UNPK  TENBYTE,FIVEBYTE      UNPACK
         TR    TENBYTE+1(8),TRTABLE  TRANSLATE TO DISPLAY
         MVC   #PVTLOW,TENBYTE+1     MOVE TO OUTPUT SCREEN
         SPACE
         SR    R2,R2                 CLEAR R2
         SR    R3,R3                 CLEAR R3
         L     R3,PVTSIZE            DETERMINE PVT AREA SIZE IN MEG
         MR    R2,R4                 BY MULTIPLYING X 10
         DR    R2,R5                 THEN DIVIDING BY 1 MEG
         CVD   R3,DBLEWORD           CONVERT
         MVC   #PVTSIZE,EDIT1        EDIT
         ED    #PVTSIZE,DBLEWORD+6   MOVE TO OUTPUT SCREEN
         SPACE
         SR    R2,R2                 CLEAR R2
         L     R3,PVTSIZE            DETERMINE PVT AREA SIZE IN K
         SRA   R3,10                 BY DIVIDING BY 1024
         CVD   R3,DBLEWORD           CONVERT
         MVC   #PVTSIZK,EDIT2        EDIT
         ED    #PVTSIZK,DBLEWORD+5   MOVE TO OUTPUT SCREEN
         SPACE 3
         MVC   FIVEBYTE,NUCHIGH      MOVE NUC HIGH ADDR TO FIVEBYTE
         UNPK  TENBYTE,FIVEBYTE      UNPACK
         TR    TENBYTE+1(8),TRTABLE  TRANSLATE TO DISPLAY
         MVC   #NUCHIGH,TENBYTE+1    MOVE TO OUTPUT SCREEN
         SPACE
         MVC   FIVEBYTE,NUCLOW       MOVE NUC LOW ADDR TO FIVEBYTE
         UNPK  TENBYTE,FIVEBYTE      UNPACK
         TR    TENBYTE+1(8),TRTABLE  TRANSLATE TO DISPLAY
         MVC   #NUCLOW,TENBYTE+1     MOVE TO OUTPUT SCREEN
         SPACE
         SR    R2,R2                 CLEAR R2
         SR    R3,R3                 CLEAR R3
         L     R3,NUCSIZE            DETERMINE NUC SIZE IN MEG
         MR    R2,R4                 BY MULT X 10
         DR    R2,R5                 THEN DIVIDING BY 1 MEG
         CVD   R3,DBLEWORD           CONVERT
         MVC   #NUCSIZE,EDIT1        EDIT
         ED    #NUCSIZE,DBLEWORD+6   MOVE TO OUTPUT SCREEN
         SPACE
         SR    R2,R2                 CLEAR R2
         L     R3,NUCSIZE            DETERMINE NUC SIZE IN K
         SRA   R3,10                 BY DIVIDING BY 1024
         CVD   R3,DBLEWORD           CONVERT
         MVC   #NUCSIZK,EDIT2        EDIT AND MOVE TO
         ED    #NUCSIZK,DBLEWORD+5   MOVE TO OUTPUT SCREEN
         SPACE 3
         MVC   FIVEBYTE,@VRLINE      MOVE V=R ADDR TO TENBYTE
         UNPK  TENBYTE,FIVEBYTE      UNPACK
         TR    TENBYTE+1,TRTABLE     CONVERT TO DISPLAY
         MVC   #VRLINE,TENBYTE+1     MOVE TO SCREEN
         SPACE
         SR    R2,R2                 CLEAR R2
         SR    R3,R3                 CLEAR R3
         L     R3,VRSIZE             DETERMINE V=R SIZE IN K
         SRA   R3,10                 BY DIVIDING BY 1024
         CVD   R3,DBLEWORD           CONVERT
         MVC   #VRSIZE,EDIT3         EDIT
         ED    #VRSIZE,DBLEWORD+6    MOVE TO OUTPUT SCREEN
         EJECT
P000500  DS    0H
         MVI   @RSPONSE,C' '         MOVE BLANK TO RESPONSE
         SR    R0,R0                 CLEAR R0
         LA    R0,#SCREEN            LOAD SCREEN ADDRESS
         ST    R0,@PUTAREA           SAVE ADDR IN LINKAGE AREA
         LA    R0,#SCRNLEN           LOAD SCREEN LENGTH
         ST    R0,@PUTLEN            STORE IN LINKAGE AREA
         LR    R1,R10                POINT TO LINKAGE
         L     R15,@IOMOD            LOAD ADDR OF TERMINAL I/O MODULE
         BALR  R14,R15               GO DO TERMINAL IO
         SPACE
         CLI   @RSPONSE,C'R'         REFRESH THE SCREEN ? (THIS IS DUMB
*                                    BECAUSE THE VALUES WON'T CHANGE)
         BE    P000500               BIF YES
         SPACE 3
P999999  DS   0H
         L    R13,SAVEAREA+4         PREPARE TO BOOGIE
         RETURN (14,12)              B O O G I E
         EJECT
SAVEAREA DC   18F'0'              MY SAVE AREA
CLRAREA  EQU  *
ZERO     DC   F'0'
INPUT    DS   F                   INPUT AREA FOR TGET
FIVEBYTE DS   XL5
DBLEWORD DC   D'0'                DOUBLE WORD WORK AREA
TENBYTE  DS   XL10
MAXCORE  DS   F                   MAXIMUM STORAGE AVAILABLE
SQALOW   DS   F                   BEGINNING SQA ADDR
SQASIZE  DS   F                   BEGINNING SQA ADDR
LPALOW   DS   F                   LOWEST LPA ADDR
LPAHIGH  DS   F                   HIGHEST LPA ADDR
LPASIZE  DS   F                   SIZE OF LPA
CSAHIGH  DS   F                   HIGHEST CSA ADDR
CSASIZE  DS   F                   SIZE OF CSA
PVTLOW   DS   F                   LOWEST PVT AREA ADDR
PVTHIGH  DS   F                   HIGHEST PVT AREA ADDR
PVTSIZE  DS   F                   SIZE OF PRIVATE AREA
VRLINE   DS   F                   V=R LINE
VRSIZE   DS   F                   V=R SIZE
NUCLOW   DS   F                   LOWEST NUCLEUS ADDR
NUCHIGH  DS   F                   HIGHEST NUCLEUS ADDR
NUCSIZE  DS   F                   NUCLEUS SIZE
CLEARLEN EQU  *-CLRAREA
TEN      DC   X'0000000A'         TEN IN HEX
ONEMEG   DC   X'00100000'         ONE MEGABYTE
K16      DC   X'00004000'         16 K
TRTABLE  DS   0CL256
         DC   CL240' '
         DC   X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'
EDIT1    DC   X'4020214B20'       EDIT PATTERN FOR SIZE IN MEG
EDIT2    DC   X'402020202120'     EDIT PATTERN FOR SIZE IN K
EDIT3    DC   X'40202120'         EDIT PATTERN FOR V=R SIZE
         DS   0F
#SCREEN  EQU  *
         DC   X'C31140403C404000'
         HMAP R=1,C=1,A=(ASKIP,BRT)
         DC   C'SELECT OPTION =>'
         HMAP R=1,C=18,A=(UNPROT,FSET,IC)
         DS   CL1
         HMAP R=3,C=29,A=(ASKIP,BRT)
         DC   C'VIRTUAL STORAGE MAP'
         HMAP R=5,C=24,A=(ASKIP,NORM)
         DC   C'SQA'
         HMAP R=5,C=29,A=(ASKIP,NORM)
#SQAHIGH DS   CL8
         HMAP R=5,C=39,A=(ASKIP,NORM)
         DC   C'SIZE ='
         HMAP R=5,C=46,A=(ASKIP,NORM)
#SQASIZE DS   CL5
         HMAP R=5,C=52,A=(ASKIP,NORM)
         DC   C'MEG'
         HMAP R=6,C=29,A=(ASKIP,NORM)
#SQALOW  DS   CL8
         HMAP R=6,C=45,A=(ASKIP,NORM)
#SQASIZK DS   CL6
         HMAP R=6,C=52,A=(ASKIP,NORM)
         DC   C'K'
         SPACE
         HMAP R=8,C=23,A=(ASKIP,NORM)
         DC   C'PLPA'
         HMAP R=8,C=29,A=(ASKIP,NORM)
#LPAHIGH DS   CL8
         HMAP R=8,C=39,A=(ASKIP,NORM)
         DC   C'SIZE ='
         HMAP R=8,C=46,A=(ASKIP,NORM)
#LPASIZE DS   CL5
         HMAP R=8,C=52,A=(ASKIP,NORM)
         DC   C'MEG'
         HMAP R=9,C=29,A=(ASKIP,NORM)
#LPALOW  DS   CL8
         HMAP R=9,C=45,A=(ASKIP,NORM)
#LPASIZK DS   CL6
         HMAP R=9,C=52,A=(ASKIP,NORM)
         DC   C'K'
         SPACE
         HMAP R=11,C=24,A=(ASKIP,NORM)
         DC   C'CSA'
         HMAP R=11,C=29,A=(ASKIP,NORM)
#CSAHIGH DS   CL8
         HMAP R=11,C=39,A=(ASKIP,NORM)
         DC   C'SIZE ='
         HMAP R=11,C=46,A=(ASKIP,NORM)
#CSASIZE DS   CL5
         HMAP R=11,C=52,A=(ASKIP,NORM)
         DC   C'MEG'
         HMAP R=12,C=29,A=(ASKIP,NORM)
#CSALOW  DS   CL8
         HMAP R=12,C=45,A=(ASKIP,NORM)
#CSASIZK DS   CL6
         HMAP R=12,C=52,A=(ASKIP,NORM)
         DC   C'K'
         SPACE
         HMAP R=14,C=20,A=(ASKIP,NORM)
         DC   C'PRIVATE'
         HMAP R=14,C=29,A=(ASKIP,NORM)
#PVTHIGH DS   CL8
         HMAP R=14,C=39,A=(ASKIP,NORM)
         DC   C'SIZE ='
         HMAP R=14,C=46,A=(ASKIP,NORM)
#PVTSIZE DS   CL5
         HMAP R=14,C=52,A=(ASKIP,NORM)
         DC   C'MEG'
         HMAP R=15,C=23,A=(ASKIP,NORM)
         DC   C'AREA'
         HMAP R=15,C=29,A=(ASKIP,NORM)
#PVTLOW  DS   CL8
         HMAP R=15,C=45,A=(ASKIP,NORM)
#PVTSIZK DS   CL6
         HMAP R=15,C=52,A=(ASKIP,NORM)
         DC   C'K'
         SPACE
         HMAP R=17,C=19,A=(ASKIP,NORM)
         DC   C'V=R LINE'
         HMAP R=17,C=29,A=(ASKIP,NORM)
#VRLINE  DS   CL8
         HMAP R=17,C=39,A=(ASKIP,NORM)
         DC   C'SIZE ='
         HMAP R=17,C=47,A=(ASKIP,NORM)
#VRSIZE  DS   CL4
         HMAP R=17,C=52,A=(ASKIP,NORM)
         DC   C'K'
         SPACE
         HMAP R=19,C=20,A=(ASKIP,NORM)
         DC   C'NUCLEUS'
         HMAP R=19,C=29,A=(ASKIP,NORM)
#NUCHIGH DS   CL8
         HMAP R=19,C=39,A=(ASKIP,NORM)
         DC   C'SIZE ='
         HMAP R=19,C=46,A=(ASKIP,NORM)
#NUCSIZE DS   CL5
         HMAP R=19,C=52,A=(ASKIP,NORM)
         DC   C'MEG'
         HMAP R=20,C=29,A=(ASKIP,NORM)
#NUCLOW  DS   CL8
         HMAP R=20,C=45,A=(ASKIP,NORM)
#NUCSIZK DS   CL6
         HMAP R=20,C=52,A=(ASKIP,NORM)
         DC   C'K'
#SCRNLEN EQU  *-#SCREEN
         EJECT
         SPACE 4
         $GDA                     GENERAL DATA AREA DSECT
         SPACE 4
         $PQE                     POOL QUEUE ELEMENT DSECT
         SPACE 4
         $SPQE                    SUBPOOL QUEUE ELEMENT DSECT
         SPACE 4
         $DQE                     DESCRIPTOR QUEUE ELEMENT DSECT
         $LNKSECT                 LINKAGE AREA DSECT
         LTORG
         END
