         TITLE 'IEESI03D -   #V  EXTENDED DISPLAY UNITS'
***********************************************************************
***********************************************************************
***                                                                 ***
***                                                                 ***
***                                                                 ***
***                     COMMAND  SUB-SYSTEM                         ***
***                  -------------------------                      ***
***                                                                 ***
***                                                                 ***
***       IEESI03D -       #V  EXTENDED DISPLAY UNITS               ***
***                                                                 ***
***       VERSION -        2.0                                      ***
***                                                                 ***
***       MVS LEVEL -      MVS/XA 2.1.1                             ***
***                                                                 ***
***       UPDATED -        07/21/81  AXC-CBT HANDLE ESTAE           ***
***                        01/11/82  RLL-CHANGE ESTAE PARM LENGTH   ***
***                        09/27/82  AXC-CBT ADD 3375 AND 3380      ***
***                                  SUPPORT                        ***
***                        02/07/84  DEM-SNET UCB SCAN ROUTINE      ***
***                                      MODIFIED FOR XA.           ***
***                                                                 ***
***                                                                 ***
***********************************************************************
***********************************************************************
         EJECT
IEESI03D CSECT
         LR    R12,R15             ESTABLISH BASE
         USING IEESI03D,R12
         USING XSA,R2              'USE' XSA BASE
         USING WTO,R13             'USE' WTO AREA BASE
         L     R0,SIZE
         GETMAIN R,LV=(0)          GET WTO AREA
         LR    R13,R1              PUT WTO ADDR IN WTO BASE
         ST    R14,SAVRET          SAVE RETURN ADDR
         ST    R2,XSASAVE          SAVE XSA ADDR
         MVC   WTOCTL1(52),WOVL1
         MVC   WTOCTL2(52),WOVL2
         MVC   WTOCTL3(52),WOVL3
         MVC   ERRMSG(4),=X'00240100'
         LA    R1,WORKAREA         *XA
         ST    R1,PARMWA           *XA
         LA    R1,ADDRUCB          *XA
         ST    R1,PARMUCB          *XA
         MVI   PARMUCB,X'80'       *XA END PARAMETER LIST
         LR    R10,R13             LOAD SAVE AREA ADDR
         B     ESTAEBYP            BYPASS ESTAE LIST
ESTAEOVL ESTAE STAEXIT,CT,MF=L
ESTAEBYP MVC   ESTAELST(20),ESTAEOVL                  ****(RLL)****
         LA    R1,ESTAELST
         ESTAE PARAM=(10),MF=(E,(1))
         L     R7,XAL              GET PTR TO INPUT PARM
         LA    R7,0(R7)            CLEAR HI BYTE
         LTR   R7,R7               IS THERE A PARM ?
         BZ    NOTHING             NO
         CLI   2(R7),C' '          COULD THIS BE A MATRIX REQUEST
         BNE   PARMNMTR            NO
         CLC   0(2,R7),=C'D1'      IS REQUEST 3330-1 MATRIX
         BE    MATRIXA             YES
         CLC   0(2,R7),=C'D3'      IS REQUEST 3330 MATRIX
         BE    MATRIXB             YES
         CLC   0(2,R7),=C'D5'      IS REQUEST 3350 MATRIX
         BE    MATRIXC             YES
         CLC   0(2,R7),=C'D7'      IS REQUEST 3375 MATRIX   AXC-CBT
         BE    MATRIXF             YES                      AXC-CBT
         CLC   0(2,R7),=C'D8'      IS REQUEST 3380 MATRIX   AXC-CBT
         BE    MATRIXG             YES                      AXC-CBT
         CLI   0(R7),C'D'          IS REQUEST DASD MATRIX
         BE    MATRIXD             YES
         CLI   0(R7),C'T'          IS REQUEST TAPE MATRIX
         BE    MATRIXE             YES
PARMNMTR CLI   1(R7),C'='          IS OUT BOY USING KEYWORDS ?
         BNE   UNIT                NO, ASSUME HE WANTS UNITS
         CLI   0(R7),C'U'          IS REQUEST BY UNIT ?
         BE    SETUNIT             YES
         CLI   0(R7),C'S'          IS REQUEST BY SERIAL ?
         BE    SERIAL              YES
         B     GOOF                ERROR
         EJECT
SERIAL   LA    R5,EXSER            SET FOR SERIAL SEARCH
         LA    R1,1(0,R7)          SCAN VOLSER
         SPACE 1
SERIAL1  LA    R1,1(0,R1)          NEXT BYTE
         CLI   0(R1),C' '          END OF VOLSER
         BNE   SERIAL1             NO
         SR    R1,R7               VOLSER LENGTH +2
         SH    R1,=H'3'            VOLSER LENGTH -1
         CH    R1,=H'5'            VOLSER MAX
         BH    GOOF                OVER MAX
         ST    R1,VLSERLEN         VOLSER LENGTH -1
         BAL   R10,UCBSRCH         GO TRY TO FIND THE SERIAL NO.
         L     R15,RETCODE
         LTR   R15,R15             DID WE FIND IT ?
         BZ    EXIT                YEP
         B     GOOF                NOPE
         SPACE 3
SETUNIT  LA    R7,2(R7)            SKIP THE 'U='
         SPACE 1
UNIT     MVI   WCU,X'00'           INITIALIZE GHOST SUPPRESSOR
         LA    R5,EXUCB            SET FOR SEARCH FOR SPECIFIC UCB
         CLI   2(R7),C'X'          IS THIS REQ. FOR 'ALL' UCB'S
         BNE   DOIT                NO
         LA    R5,EXUCBX           SET SEARCH FOR 'ALL' UCB'S
         SPACE 3
DOIT     BAL   R10,UCBSRCH         GO TRY TO FIND THE UCB
         L     R15,RETCODE
         LTR   R15,R15             DID WE SUCCEED ?
         BNZ   GOOF                ERROR IN REQUEST
         CLI   3(R7),C','          ARE THERE MORE UNITS ?
         BNE   EXIT                NO
         LA    R7,4(R7)            BUMP TO NEXT UNIT
         B     UNIT                PROCESS NEW UNIT
         SPACE 3
GOOF     MVC   EUNIT(9),0(R7)      SEARCH FAILED
         SPACE 1
NOTHING  MVC   EUNIT+9(23),ERRTEXT               SET
         SR    R0,R0                              UP
         LA    R1,ERRMSG                              MESSAGE
         IC    R0,XAU                                 ERROR
         SVC   35
         SPACE 3
EXIT     EQU   *
         ESTAE 0                                      ****(RLL)****
         LR    R1,R13
         L     R14,SAVRET          RELOAD RETURN ADDR
         L     R0,SIZE
         FREEMAIN R,LV=(0),A=(1)          FREE WTO AREA
         SR    R15,R15             CLEAR RETURN CODE
         BR    R14                 EXIT
         EJECT
UCBSRCH  MVI   RETCODE+3,X'04'     ASSUME BAD RETURN
         XC    RETCODE(3),RETCODE
         XC    WCU(1),WCU
         XC    UCBDMCUR(4),UCBDMCUR
         XC    UCBDMLOW(4),UCBDMLOW
         XC    WORKAREA,WORKAREA
         L     R9,16               .CVT
         SPACE 1
UCBLOOP  BAL   R6,MATRXUCB
         LTR   R3,R1               END OF UCBS
         BCR   8,R10               YES
         CLI   0(R7),C'S'          IS IT A SEARCH BY SERIAL ?
         BE    UCBLOOP1            YES
         EX    0,0(R5)             COMPARE SOMETHING IN THE UCB
         BE    AHIT                BRANCH IF WE LIKED IT
         B     UCBLOOP
         SPACE 1
UCBLOOP1 L     R1,VLSERLEN         VOLSER LENGTH -1
         EX    R1,0(0,R5)          COMPARE VOLSERS
         BNE   UCBLOOP             NOT EQUAL
         B     AHIT                BRANCH IF WE LIKED IT
         EJECT
AHIT     CLC   WUNIT,13(R3)        IS THIS AN OPCHAN GHOST ?
         BE    UCBLOOP             YES, EXORCISE IT AND CONTINUE
         CLI   0(R7),C'S'          IS IT A SEARCH BY SERIAL ?
         BE    MVUNAME             YES
         CLC   WCU,5(R3)           IS THIS AN OPCHAN GHOST ?
         BCR   2,R10               YES, EXORCISE IT AND QUIT
         MVC   WCU,5(R3)           SAVE LAST UNIT ADDR FOR COMPARE
         SPACE 1
MVUNAME  MVC   WUNIT,13(R3)        MOVE UNIT ADDR TO WTO AREA
         TM    18(R3),X'A0'        IS IT TAPE OR DISK ?
         BZ    MVSTAT              NEITHER
         MVC   WSER,28(R3)         MOVE VOLSER
         CLI   WSER,X'00'          IS THERE A VOLSER
         BNE   MVSTAT              YES
         MVC   WSER(6),=6C'*'      INSERT 'NO VOLSER' INDICATOR
         SPACE 1
MVSTAT   MVC   WONOFF(3),=CL3'OFF'
         TM    3(R3),X'C0'         ON/OFF/CHG FLAGS
         BZ    MVSTAT1             OFFLINE
         MVC   WONOFF(3),=CL3'CHG'
         BO    MVSTAT1             CHANGING STATUS
         TM    3(R3),X'40'         CHG FLAG
         BO    MVSTAT1             CHANGING STATUS
         MVC   WONOFF(3),=CL3'ON'
         SPACE 1
MVSTAT1  L     R1,20(0,R3)         UCB EXTENTION ADDR
         UNPK  WASID(5),14(3,R1)   ASID
         TR    WASID(4),TABLE
         MVI   WASID+4,C' '
         UNPK  WDMCT(3),35(2,R3)   NO. OF OPEN DCBS
         TR    WDMCT(2),TABLE
         MVI   WDMCT+2,C' '
         UNPK  WUSCT(3),38(2,R3)   NO. OF USERS
         TR    WUSCT(2),TABLE
         MVI   WUSCT+2,C' '
         UNPK  WRSCT(3),36(2,R3)   NO. OF RESERVES
         TR    WRSCT(2),TABLE
         MVI   WRSCT+2,C' '
         UNPK  WFLG1(9),0(5,R3)    1ST 4 BYTES OF UCB
         TR    WFLG1(8),TABLE
         MVI   WFLG1+8,C'/'
         UNPK  WFLG2(9),4(5,R3)    2ND 4 BYTES OF UCB
         TR    WFLG2(8),TABLE
         MVI   WFLG2+8,C' '
         EJECT
DEVTYPE  SR    R0,R0
         CL    R0,16(0,R3)         SEE IF NULL UCBTYPE FIELD
         BNE   DEVT1               NO
         MVC   WDEVT(6),=CL6'DUMMY'  DUMMY UCB
         B     WRITEIT
         SPACE 1
DEVT1    DS    0H
         LA    R1,DEVCNUM          NUM. OF DEV. CLASSWS
         LA    R6,DEVCLASS         ADDR. OF TABLE
         SPACE 1
DEVT2    CLC   18(1,R3),0(R6)      SEE IF EQ TO THIS ENTRY
         BE    DEVT3               YES,GO PROCESS
         LA    R6,1(0,R6)          TRY NEXT ENTRY
         BCT   R1,DEVT2
         MVC   WDEVT(6),=CL6'*UNK*'
         B     WRITEIT
         SPACE 1
DEVT3    LA    R6,DEVCNUM          NUM. OF ENTRIES
         SR    R6,R1
         SLL   R6,2                INDEX * 4 FOR OTHER TABLES
         LA    R1,DEVCTAB          ADDR. OF BRANCH TABLE
         ALR   R1,R6               THIS CLASS ENTRY
         L     R1,0(0,R1)
         BR    R1
         SPACE 3
DEVTS    CLC   19(1,R3),0(R14)     THIS ENTRY?
         BE    DEVTS1              YES
         LA    R14,1(0,R14)        NEXT ENTRY
         BCT   R1,DEVTS
         MVC   WDEVT(6),=CL6'*UNK*'
         BR    R11
         SPACE 1
DEVTS1   SR    R8,R1               INDEX
         MH    R8,=H'6'            TIMES 6 FOR BYTE OFFSET
         ALR   R15,R8              ADDR. EBCDIC
         MVC   WDEVT(6),0(R15)
         BR    R11
         EJECT
TAPEUCB  LA    R1,TAPENUM          NUM. TABLE ENTRIES
         LA    R14,TAPETAB         TABLE ADDR.
         LA    R15,TAPENAME        EBCDIC NAME
         LR    R8,R1
         BAL   R11,DEVTS
         B     DEVTDSP
         SPACE 3
COMMUCB  MVC   WDEVT(6),=CL6'COMM'
         MVC   WSER(6),=CL6'COMM'
         B     DEVTDSP
         SPACE 3
DASDUCB  DS    0H
         LA    R1,DASDNUM          NUM. TABLE ENTRIES
         LA    R14,DASDTAB         TABLE ADDR.
         LA    R15,DASDNAME        EBCDIC NAME
         LR    R8,R1
         BAL   R11,DEVTS
         MVC   WTOCTL3M+3(8),=CL8'PRIVATE'
         TM    34(R3),X'10'        PRIVATE
         BO    DASDUCB1            YES
         MVC   WTOCTL3M+3(8),=CL8'STORAGE'
         TM    34(R3),X'04'        STORAGE
         BO    DASDUCB1            YES
         MVC   WTOCTL3M+3(8),=CL8'PUBLIC'
         TM    34(R3),X'08'        PUBLIC
         BO    DASDUCB1            YES
         MVC   WTOCTL3M+3(8),=CL8' '
         SPACE 1
DASDUCB1 MVC   WTOCTL3M+11(8),=CL8'RESERVED'
         TM    3(R3),X'20'         RESERVED
         BO    DASDUCB2            YES
         MVC   WTOCTL3M+11(8),=CL8'RESIDENT'
         TM    3(R3),X'04'         RESIDENT
         BO    DASDUCB2            YES
         MVC   WTOCTL3M+11(8),=CL8'REMOVE'
         SPACE 1
DASDUCB2 MVC   WTOCTL3M+20(8),=CL8'PAGING'
         TM    34(R3),X'40'        PAGING
         BO    DASDUCB3            YES
         MVC   WTOCTL3M+20(8),=CL8'SYSRES'
         TM    3(R3),X'02'         SYSRES
         BO    DASDUCB3            YES
         MVC   WTOCTL3M+20(8),=CL8'CATALOG'
         TM    34(R3),X'01'        CATALOG
         BO    DASDUCB3            YES
         MVC   WTOCTL3M+20(8),=CL8' '
         SPACE 1
DASDUCB3 MVC   WTOCTL3M+29(19),=CL19'DAVV MOUNT PENDING '
         TM    37(R3),X'40'        DAVV MOUNT PENDING
         BO    DASDUCB4            YES
         MVC   WTOCTL3M+29(19),=CL19'DAVV IN CONTROL    '
         TM    37(R3),X'80'        DAVV IN CONTROL
         BO    DASDUCB4            YES
         MVC   WTOCTL3M+29(19),=CL19'RESERVE PENDING    '
         TM    37(R3),X'20'        RESERVE PENDING
         BO    DASDUCB4            YES
         MVC   WTOCTL3M+29(19),=CL19'3330V ATTN RECEIVED'
         TM    37(R3),X'08'        3330V ATTENTION RECEIVED
         BO    DASDUCB4            YES
         MVC   WTOCTL3M+29(19),=CL19'3330V ATTN OVERDUE '
         TM    37(R3),X'02'        3330V ATTENTION PENDING
         BO    DASDUCB4            YES
         MVC   WTOCTL3M+29(19),=CL19'CYL FAULT PENDING  '
         TM    37(R3),X'04'        3330V CYLINDER FAULT PENDING
         BO    DASDUCB4            YES
         MVC   WTOCTL3M+29(19),=CL19' '
         SPACE 1
DASDUCB4 TM    34(R3),X'01'        CATALOG
         BO    DASDUCB3            YES
         CLI   19(R3),X'09'        3330
         BNE   WRITEIT             NO
         TM    17(R3),X'08'        VIRTUAL VOLUME
         BNO   WRITEIT             NO
         MVC   WDEVT(6),=CL6'3330V'
         B     WRITEIT
         EJECT
DISPUCB  DS    0H
         TM    3(R3),X'02'         SEE IF CONSOLE
         BNO   DISPUCB1            NO
         MVC   WSER(6),=CL6'CONS'
         B     DISPUCB2
         SPACE 1
DISPUCB1 MVC   WSER(6),=CL6'DISP'
         SPACE 1
DISPUCB2 LA    R1,DISPNUM          MUN. OF ENTRIES
         LA    R14,DISPTAB         TABLE ADDR.
         LA    R15,DISPNAME        EBCDIC
         LR    R8,R1
         BAL   R11,DEVTS
         TM    16(R3),X'01'        TEST FOR MODEL
         BNO   DISPUCB3
         MVC   WDEVT+4(2),=C'-1'      MODEL 1
         SPACE 1
DISPUCB3 TM    16(R3),X'02'
         BNO   DEVTDSP
         MVC   WDEVT+4(2),=C'-2'      MODEL 2
         B     DEVTDSP
         SPACE 3
URUCB    LA    R1,URNUM          NUM. TABLE ENTRIES
         LA    R14,URTAB         TABLE ADDR.
         LA    R15,URNAME        EBCDIC NAME
         LR    R8,R1
         MVC   WSER(6),=CL6'U.R.'
         BAL   R11,DEVTS
         B     DEVTDSP
         EJECT
WRITEIT  SR    R0,R0               CLEAR R0
         LA    R1,WTOCTL1
         IC    R0,XAU              GET UCMID IF REQUESTING CONSOLE
         SVC   35
         SR    R0,R0
         LA    R1,WTOCTL2
         IC    R0,XAU
         SVC   35
         CLC   WTOCTL3(52),WOVL3
         BE    WRITEIT1
         SR    R0,R0
         LA    R1,WTOCTL3
         IC    R0,XAU
         SVC   35
         SPACE 1
WRITEIT1 MVC   WTOCTL2(52),WOVL2
         MVC   WTOCTL3(52),WOVL3
         MVI   RETCODE+3,X'00'     SET ZERO RET CODE
         CLI   0(R7),C'S'          IS IT A REQ. BY SERIAL ?
         BE    UCBLOOP       YES, CONTINUE SEARCH IN CASE OF DUPLICATES
         CLI   2(R7),C'X'          IS IT A REQ FOR ALL UNITS
         BE    UCBLOOP             YES, GET THE REST OF THE UCB'S
         BR    R10                 RETURN
         SPACE 3
DEVTDSP  MVC   WTODISP+3(22),=CL22'DEVTYPE='
         UNPK  WDMCT+4(9),16(5,R3) HEX DEVICE TYPE
         TR    WDMCT+4(8),TABLE
         MVI   WDMCT+12,C' '
         B     WRITEIT
         SPACE 3
EXUCB    CLC   13(3,R3),0(R7)      FIND SPECIFIC UCB
EXUCBX   CLC   13(2,R3),0(R7)      FIND ALL UCB'S FOR A GIVEN CTL UNIT
EXSER    CLC   28(0,R3),2(R7)      FIND UCB BY SERIAL NO.
         EJECT
MATRIXA  LA    R5,MATRXD1
         B     MATRIX
MATRIXB  LA    R5,MATRXD3
         B     MATRIX
MATRIXC  LA    R5,MATRXD5
         B     MATRIX
MATRIXD  LA    R5,MATRXD
         B     MATRIX
MATRIXE  LA    R5,MATRXT
         B     MATRIX
MATRIXF  LA    R5,MATRXD7                                   AXC-CBT
         B     MATRIX                                       AXC-CBT
MATRIXG  LA    R5,MATRXD8                                   AXC-CBT
         B     MATRIX                                       AXC-CBT
         SPACE 1
MATRXD1  CLC   18(2,R3),=X'200D'   3330-1
MATRXD3  CLC   18(2,R3),=X'2009'   3330
MATRXD5  CLC   18(2,R3),=X'200B'   3350
MATRXD7  CLC   18(2,R3),=X'200C'   3375                     AXC-CBT
MATRXD8  CLC   18(2,R3),=X'200E'   3380                     AXC-CBT
MATRXD   CLC   18(1,R3),=X'20'     DASD
MATRXT   CLC   18(1,R3),=X'80'     TAPE
         SPACE 1
MATRIX   BAL   R6,MATRXHD
         LA    R7,MATRXLN          MATRIX OUTPUT LINE
         MVC   MATRXCU(6),=CL6' '
         MVC   MATRXPTH(6),=CL6' '
         MVC   MATRXLN(32),=16C'. '
         MVC   MATRXWTO(4),=X'00300100'
         XC    WCU(1),WCU
         XC    UCBDMCUR(4),UCBDMCUR
         XC    UCBDMLOW(4),UCBDMLOW
         L     R9,16               .CVT
         L     R9,40(0,R9)         .UCB LOOKUP TABLE
         SPACE 1
MATRIX1  BAL   R6,MATRXUCB
         LTR   R3,R1               END OF UCBS
         BZ    MATRIX4             YES
         EX    0,0(0,R5)           CHECK UCB
         BNE   MATRIX1             WRONG TYPE
         CLI   WCU,X'00'           1ST TIME
         BNE   MATRIX2             NO
         BAL   R6,MATRXCHN
         MVC   MATRXCU(2),13(R3)   CU ADDR
         MVI   MATRXCU+2,C'X'
         MVC   WCU(1),14(R3)       SAVE CU ADDR
         SPACE 1
MATRIX2  CLC   WCU(1),14(R3)       CU MATCH
         BE    MATRIX3             YES
         BAL   R6,MATRXPRT         PRINT A LINE
         MVC   WCU(1),14(R3)
         MVC   MATRXLN(32),=16C'. '
         MVC   MATRXCU(2),13(R3)   CU ADDR
         MVI   MATRXCU+2,C'X'
         BAL   R6,MATRXCHN
         SPACE 1
MATRIX3  SR    R1,R1
         IC    R1,5(0,R3)          CU ADDR
         SLL   R1,28               SHIFT OUT CONTROL UNIT ADDR
         SRL   R1,27               SHIFT BACK  X 2
         LA    R1,MATRXLN(R1)      MATRIX PRINT POSITION
         MVI   0(R1),C'*'          MARK OFFLINE
         TM    3(R3),X'80'         ONLINE?
         BZ    *+8                 NO
         MVI   0(R1),C'0'          MARK ONLINE
         B     MATRIX1
         SPACE 1
MATRIX4  BAL   R6,MATRXPRT
         B     EXIT
         SPACE 1
MATRXHD  LA    R1,MATRXTIT
         B     MATRXPRX
         SPACE 1
MATRXPRT LA    R1,MATRXWTO
         SPACE 1
MATRXPRX SR    R0,R0
         IC    R0,XAU
         SVC   35
         BR    R6
         EJECT
MATRXCHN DS    0H
*
*        ACCESS LOGICAL CHAN. TABLE ENTRY FOR THIS DEVICE.
*        PRINT PRIMARY AND SECONDARY CHANNEL PATHS.
*
         SR    R1,R1
         IC    R1,10(0,R3)         LCHQ INDEX/32
         SLL   R1,5                TIMES 32 = LCHQ INDEX
         L     R14,16              CVT
         L     R14,140(0,R14)      LCHQ TABLE
         ALR   R14,R1              THIS UCBS ENTRY
         L     R1,16(0,R14)        CHAN PATH LIST
         SR    R14,R14
         IC    R14,0(0,R1)         PRIM. CHAN.
         LA    R14,CHANNELS(R14)
         MVC   MATRXPTH(1),0(R14)  PRI. CHAN PATH
         CLI   2(R1),X'FF'         OPTCHAN?
         BNE   MATRXCH1            YES
         MVI   MATRXPTH+1,C' '
         MVI   MATRXPTH+2,C' '
         BR    R6
         SPACE 1
MATRXCH1 SR    R14,R14
         IC    R14,2(0,R1)         SEC. CHAN.
         MVI   MATRXPTH+1,C','
         LA    R14,CHANNELS(R14)
         MVC   MATRXPTH+2(1),0(R14)   SEC. CHAN. PATH
         BR    R6
         EJECT
MATRXUCB ST    R10,UCBDMSAV+8
         ST    R8,UCBDMSAV
         ST    R11,UCBDMSAV+12
         L     R8,UCBDMLOW
         SPACE 1
UCBDML#1 L     R10,=X'0000FFFF'    .SET MAX NEXT LEAST HIGH
         LA    R8,1(0,R8)
         SPACE 1
UCBDML#2 L     R15,1076(0,R9)      *XA
         LA    R1,PARMLST          *XA
         BALR  R14,R15             *XA
         LTR   R15,R15             *XA
         BNZ   UCBDMOUT            *XA
         L     R1,ADDRUCB          *XA
         LTR   R1,R1               .ZERO ADDR
         BNZ   UCBDML#4            .NO, CONTINUE
         B     UCBDML#2            *XA
         SPACE 1
UCBDML#3 LA    R9,2(0,R9)          .NEXT UCB LOOKUP TABLE ENTRY
         B     UCBDML#2
         SPACE 1
UCBDML#4 BAL   R11,UCBDMCNV        .CONVERT UNIT ADDR TO HEX
         CR    R1,R8               .UNIT EQUAL
         BL    UCBDML#2            .LOW NOT EQUAL, NEXT UCB
         LR    R10,R1              .SET NEXT LEAST HIGH UNIT ADDR
         B     UCBDMOUT            .GO PROCESS
         EJECT
UCBDMCNV SR    R14,R14
         SR    R15,R15
         IC    R15,13(0,R1)        .UNIT ADDR DIGIT
         TM    13(R1),X'F0'        .NUMERIC
         BO    *+8                 .YES, BYPASS VALUE ADJUST
         LA    R15,9(0,R15)        .SET VALUE TO COVER A-F
         SLL   R15,28              .SHIFT OUT ALL BUT PERTINENT
         SLDL  R14,4               .INSERT INTO RESULTS REGISTER
         IC    R15,14(0,R1)        .UNIT ADDR DIGIT
         TM    14(R1),X'F0'        .NUMERIC
         BO    *+8                 .YES, BYPASS VALUE ADJUST
         LA    R15,9(0,R15)        .SET VALUE TO COVER A-F
         SLL   R15,28              .SHIFT OUT ALL BUT PERTINENT
         SLDL  R14,4               .INSERT INTO RESULTS REGISTER
         IC    R15,15(0,R1)        .UNIT ADDR DIGIT
         TM    15(R1),X'F0'        .NUMERIC
         BO    *+8                 .YES, BYPASS VALUE ADJUST
         LA    R15,9(0,R15)        .SET VALUE TO COVER A-F
         SLL   R15,28              .SHIFT OUT ALL BUT PERTINENT
         SLDL  R14,4               .INSERT INTO RESULTS REGISTER
         LR    R1,R14              .SET RESULTS REG
         BR    R11
         SPACE 3
UCBDMOUT C     R10,=X'0000FFFF'    .ALL DONE
         BE    UCBDMEX             .YES
         L     R1,ADDRUCB
         B     UCBDMRET            .CONTINUE
         SPACE 1
UCBDMEX  SR    R1,R1               .CLEAR UCB ADDR REGISTER
UCBDMRET DS    0H
         L     R8,UCBDMSAV
         L     R10,UCBDMSAV+8
         L     R11,UCBDMSAV+12
         BR    R6
         EJECT
         USING *,R15
STAEXIT  CH    R0,=H'12'           SDWA GOTTEN
         BE    STAEXIT1            NO, FORCE RETURN
         L     R2,=A(STAERTRY)     LOAD RETRY ADDR
         SETRP RC=4,RETADDR=(2),FRESDWA=YES,DUMP=NO
         SPACE 3
STAEXIT1 L     R0,=A(STAERTRY)     LOAD RETRY ADDR
         LA    R15,4
         BR    R14
         DROP  R15
         SPACE 3
         USING *,R15
STAERTRY L     R12,=A(IEESI03D)    LOAD ENTRY POINT ADDR
         LR    R13,R1              RELOAD WORK AREA ADDR
         DROP  R15
         LA    R1,STAEMSG          ADDRESSING ERROR
         L     R2,XSASAVE          RELOAD XSA ADDR
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         B     EXIT
         EJECT
         LTORG
         DS    0F
SIZE     DC    X'F1',AL3(WTOEND-WTO)
         SPACE 3
STAEMSG  DC    X'00360100'
         DC    CL50'ERROR ENCOUNTERED IN CONTROL BLOCKS, RETRY COMMAND'
         SPACE 3
MATRXTIT DC    X'00300100'
         DC    CL12'CUU         '
         DC    CL32'0 1 2 3 4 5 6 7 8 9 A B C D E F'
         SPACE 3
WOVL1    DC    X'00340100'
         DC    CL18' ',CL13'UNIT=',CL9'AS=',CL8' '
         SPACE 3
WOVL2    DC    X'00340100'
         DC    CL11'   DCB=',CL8'USR=',CL8'RSV=',CL21'FLG='
         SPACE 3
WOVL3    DC    X'00340100'
         DC    CL48' '
         SPACE 3
TABLE    EQU   *-X'F0'
CHANNELS DC    C'0123456789ABCDEF'
         SPACE 3
ERRTEXT  DC    CL23'  UNIT OR VOL NOT FOUND'
         EJECT
DEVCLASS DS    0F
         DC    X'80'               TAPE
         DC    X'40'               COMM.
         DC    X'20'               DASD
         DC    X'10'               DISP
         DC    X'08'               UR
DEVCNUM  EQU   *-DEVCLASS
         SPACE 3
DEVCTAB  DS    0F
*
*        BRANCH TABLE FOR DEVICE CLASS PROCESSING
*
         DC    A(TAPEUCB)
         DC    A(COMMUCB)
         DC    A(DASDUCB)
         DC    A(DISPUCB)
         DC    A(URUCB)
         EJECT
URTAB    DS    0F
         DC    X'06'               3505
         DC    X'08'               1403
         DC    X'09'               3211
         DC    X'0E'               3800
         DC    X'0C'               3525
         DC    X'0A'               1443
         DC    X'04'               2501
         DC    X'10'               2671
URNUM    EQU   *-URTAB
         SPACE 3
URNAME   DS    0F
         DC    CL6'3505'
         DC    CL6'1403'
         DC    CL6'3211'
         DC    CL6'3800'
         DC    CL6'3525'
         DC    CL6'1443'
         DC    CL6'2501'
         DC    CL6'2671'
         SPACE 3
TAPETAB  DS    0F
         DC    X'01'               2400
         DC    X'03'               3400
TAPENUM  EQU   *-TAPETAB
         SPACE 3
TAPENAME DS    0F
         DC    CL6'2400'
         DC    CL6'3400'
         SPACE 3
DASDTAB  DS    0F
         DC    X'07'               2305-2
         DC    X'09'               3330
         DC    X'0A'               3340
         DC    X'0D'               3330-11
         DC    X'0B'               3350
         DC    X'0C'               3375                     AXC-CBT
         DC    X'0E'               3380                     AXC-CBT
DASDNUM  EQU   *-DASDTAB
         SPACE 3
DASDNAME DS    0F
         DC    CL6'2305-2'
         DC    CL6'3330  '
         DC    CL6'3340  '
         DC    CL6'3330-1'
         DC    CL6'3350  '
         DC    CL6'3375  '                                  AXC-CBT
         DC    CL6'3380  '                                  AXC-CBT
         EJECT
DISPTAB  DS    0F
         DC    X'09'               3277
         DC    X'0A'               3284
         DC    X'0B'               3286
         DC    X'08'               3066
DISPNUM  EQU   *-DISPTAB
         SPACE 3
DISPNAME DS    0H
         DC    CL6'3277'
         DC    CL6'3284'
         DC    CL6'3286'
         DC    CL6'3066'
         SPACE 3
PARMLST  DS    0D                  *XA
PARMWA   DS    AL4                 *XA
PARMDEVT DC    AL4(DEVCLAS)        *XA
PARMUCB  DC    X'80'               *XA
         DS    AL3                 *XA
DEVCLAS  DC    X'00'               *XA
         EJECT
WTO      DSECT
USAVAREA DS    18F                 *XA SAVEAREA USED BY UCB SCAN RTN
ERRMSG   DS    CL4
EUNIT    DS    CL32
         SPACE 3
         DS    0F
WTOCTL1  DS    CL4
WUNIT    DS    CL3
         DS    CL2
WSER     DS    CL6
         DS    CL2
WONOFF   DS    CL3
         DS    CL7
WDEVT    DS    CL6
         DS    CL5
WASID    DS    CL4
         DS    CL7
WPATH    DS    CL3
         SPACE 3
         DS    0F
WTOCTL2  DS    CL4
WTODISP  DS    CL7
WDMCT    DS    CL2
         DS    CL6
WUSCT    DS    CL2
         DS    CL6
WRSCT    DS    CL2
         DS    CL6
WFLG1    DS    CL8
         DS    CL1
WFLG2    DS    CL8
         DS    CL1
         SPACE 3
         DS    0F
WTOCTL3  DS    CL4
WTOCTL3M DS    CL48
         SPACE 3
         DS    0F
MATRXWTO DS    CL4
MATRXCU  DS    CL6
MATRXPTH DS    CL6
MATRXLN  DS    CL32
         SPACE 3
WCU      DS    CL1
SAVRET   DS    F
XSASAVE  DS    F
RETCODE  DS    F
VLSERLEN DS    F
UCBDMLOW DS    F
UCBDMCUR DS    F
UCBDMSAV DS    4F
ESTAELST DS    5F                                     ****(RLL)****
ADDRUCB  DS    F                   *XA
         DS    0D                  *XA
WORKAREA DS    CL100               *XA
WTOEND   DS    0D
         EJECT
XSA      DSECT
XAP      DS    F
XAD      DS    F
XAX      DS    D
XAE      DS    0C
XAR      DS    F
XAN      DS    0C
XAL      DS    F
XAV      DS    D
XAS      DS    D
XAU      DS    C
         DS    C
XAJ      DS    H
         DS    F
         EJECT
         IHASDWA
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
