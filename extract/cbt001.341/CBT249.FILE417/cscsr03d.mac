         TITLE 'XA1SR03D -   #O  DISPLAY I/O PENDING/ALLOC QUEUE'
***********************************************************************
***********************************************************************
***                                                                 ***
***                                                                 ***
***                                                                 ***
***                     COMMAND  SUB-SYSTEM                         ***
***                  -------------------------                      ***
***                                                                 ***
***                                                                 ***
***       XA1SR03D -       #O  DISPLAY I/O PENDING/ALLOC QUEUE      ***
***                                                                 ***
***       VERSION -        2.1.1                                    ***
***                                                                 ***
***       MVS LEVEL -      FROM MVS/XA  2.1.1                       ***
***                                                                 ***
***       UPDATED -        07/21/81  AXC-CBT HANDLE ESTAE           ***
***                        01/11/82  RLL-CHANGE ESTAE PARM LENGTH   ***
***                                  RLL-CHECK FOR UNIT RECORD UCB  ***
***                                  RLL-CHECK ALLOC BITS           ***
***                        10/19/82  INTEL UPDATE THE I/O DRIVER    ***
***                                  TABLE                          ***
***                        06/04/84  DED-CNB MVS/XA 2.1.1           ***
***                                  IF YOU HAVE A 3880-11          ***
***                                  DON'T BE SUPRISED IF IT        ***
***                                  SHOWS UP MORE THAN ONCE, IT    ***
***                                  HAS MULTIPLE EXPOSURES.        ***
***                                                                 ***
***********************************************************************
***********************************************************************
         EJECT
IEESR03D CSECT
IEESR03D AMODE 24
IEESR03D RMODE 24
         SPLEVEL SET=2
         LR    R12,R15            SET ADDRESSABILITY
         USING IEESR03D,R12
         L     R0,SIZE
         GETMAIN R,LV=(0)
         LR    R13,R1
         USING WORK,R13
         USING XSA,R2
         ST    R14,SAVE           PUT RETURN ADDRESS IN UNUSED SLOT
         ST    R2,XSASAVE         SAVE XSA ADDR
         MVI   DEVCLASS,X'00'      DO ALL DEVICE CLASSES      *CNB/XA*
         XC    WORKAREA,WORKAREA   CLEAR WORK AREA            *CNB/XA*
         LA    R1,WORKAREA         GET ADDRESS OF WORKAREA    *CNB/XA*
         ST    R1,PARMWA           STORE ADDRESS OF WORK AREA *CNB/XA*
         LA    R1,DEVCLASS         START ADDRESS IN PARMLIST  *CNB/XA*
         ST    R1,PARMDEVT         START ADDRESS IN PARMLIST  *CNB/XA*
         LA    R1,ADDRUCB          ADDR TO STORE UCB ADDRESS  *CNB/XA*
         ST    R1,PARMUCB          STORE ADDRESS IN PARMLIST  *CNB/XA*
         MVI   PARMUCB,X'80'       INDICATE END OF PARM LIST  *CNB/XA*
         MVI   FOUND,X'00'
         MVI   IOLINE+4,C' '
         MVC   IOLINE+5(47),IOLINE+4
         MVC   IOLINE(4),=X'00350100'
         MVI   QUELINE+4,C' '
         MVC   QUELINE+5(50),QUELINE+4
         MVC   QUELINE(4),=X'00350100'
         MVI   TYPE,C' '
         LR    R10,R13             LOAD SAVE AREA ADDR
         B     ESTAEBYP            BYPASS ESTAE LIST
ESTAEOVL ESTAE STAEXIT,CT,MF=L
ESTAEBYP MVC   ESTAELST(20),ESTAEOVL                  ****(RLL)****
         LA    R1,ESTAELST
         ESTAE PARAM=(10),MF=(E,(1))
         SR    R3,R3
         L     R3,XAL
         LA    R3,0(0,R3)
         LTR   R3,R3               ANY SUBPARMS
         BZ    UCBFIND             NO, I/O PENDING ACTIVE AND QUEUED
         MVI   TYPE,C'A'
         CLI   0(R3),C'A'          ACTIVE ONLY
         BE    UCBFIND             YES
         MVI   TYPE,C'Q'
         CLI   0(R3),C'Q'          QUEUED ONLY
         BE    PROCESS2            YES
         CLI   0(R3),C'X'          ALLOCATION QUEUE REQUEST
         BE    ALLOC               YES
         MVI   TYPE,C' '
         EJECT
UCBSCAN  CLI   TYPE,C' '          ALL I/O PENDING
         BE    UCBFIND            YES
         CLI   TYPE,C'A'          ACTIVE I/O PENDING ONLY
         BNE   PROCESS1           NO, EXIT
         SPACE 1
UCBFIND  L     R9,CVTPTR
         EJECT
         USING CVTMAP,R9
UCBNEXT  SR    R11,R11                                       *CNB/XA*
         SR    R0,R0                                         *CNB/XA*
         L     R11,AMODE24A                                  *CNB/XA*
         BSM   0,R11                                         *CNB/XA*
AMODE24A DC    A(CONT24A+X'00000000')                        *CNB/XA*
         DS    0H                                            *CNB/XA*
CONT24A  LA    R1,PARMLIST        UCBSCAN PARMLIST ADDR      *CNB/XA*
         L     R15,CVTUCBSC       GET SCAN SERVICE ROUTINE   *CNB/XA*
         BALR  R14,R15            GO TO SCAN SCERVICE RTN    *CNB/XA*
         LTR   R15,R15            END OF UCBS?               *CNB/XA*
         BNZ   UCBEND             YES, END                   *CNB/XA*
         SR    R11,R11                                       *CNB/XA*
         L     R11,ADDRUCB        ADDR TO UCB DSECT          *CNB/XA*
         USING UCBOB,R11
         CLC   UCBNAME(3),SAVEOLD SAME UCB?                  *CNB/XA*
         BE    UCBNEXT                                       *CNB/XA*
         MVC   SAVEOLD(3),UCBNAME                            *CNB/XA*
         SPACE
         CLI   UCBTBYT3,UCB3DISP  DISPLAY?
         BE    UCBNEXT
         CLI   UCBTBYT3,UCB3COMM  COMM
         BE    UCBNEXT
         CLI   UCBTBYT3,UCB3UREC  UNIT RECORD
         BE    UCBNEXT
         TM    UCBFLA,UCBSTRT+UCBHALT+UCBCLEAR ACT CHAN PROG *CNB/XA*
         BZ    UCBNEXT            NO, NEXT UCB               *CNB/XA*
         B     PROCESS                                       *CNB/XA*
         SPACE
UCBRET   B     UCBNEXT                                       *CNB/XA*
UCBEND   B     PROCESS1            YES, EXIT                 *CNB/XA*
         EJECT
PROCESS  SR    R3,R3                                         *CNB/XA*
         SR    R4,R4                                         *CNB/XA*
         SR    R0,R0                                         *CNB/XA*
         L     R4,AMODE31A                                   *CNB/XA*
         BSM   0,R4                                          *CNB/XA*
AMODE31A DC    A(CONT31A+X'80000000')                        *CNB/XA*
         DS    0H                                            *CNB/XA*
CONT31A  LR    R3,R11             UCB ADDR                   *CNB/XA*
         SR    R4,R4                                         *CNB/XA*
         LR    R4,R11             UCB ADDR                   *CNB/XA*
         S     R4,=F'4'           DECR ADDR -4
         L     R4,0(0,R4)         IOQ ADDR
         LA    R4,0(0,R4)
         LTR   R4,R4              ANY IOQ
         BZ    UCBNEXT            NO, NEXT UCB
         SR    R5,R5                                         *CNB/XA*
         L     R5,8(0,R4)         IOSB ADDR
         LA    R5,0(0,R5)
         LTR   R5,R5              EXIST
         BZ    UCBNEXT            NO, NEXT UCB
         BAL   R7,CHKASID
         BAL   R7,FORMAT
         B     UCBNEXT
         EJECT
PROCESS1 CLI   TYPE,C' '          ALL I/O PENDING
         BE    EXIT               YES
         CLI   TYPE,C'Q'          QUEUED I/O PENDING ONLY
         BNE   NOTFOUND           NO, EXIT
         SPACE 1
PROCESS2 MVC   IOLINE(52),QMSG1   * CNB/XA * NO LCH? UNDER XA
         LA    R1,IOLINE
         SR    R0,R0
         IC    R0,XAU
         SVC   35
         B     EXIT
         DROP  R9,11
         EJECT
ALLOC    SR    R3,R3                                          *CNB/XA*
         SR    R0,R0                                          *CNB/XA*
         L     R3,AMODE31                                     *CNB/XA*
         BSM   0,R3                                           *CNB/XA*
AMODE31  DC    A(CONT31+X'80000000')                          *CNB/XA*
         DS    0H                                             *CNB/XA*
CONT31   SR    R0,R0                                          *CNB/XA*
         SR    R3,R3                                          *CNB/XA*
         L     R3,16              CVT
         L     R3,548(0,R3)       AQTOP
         UNPK  MASK1(13),32(7,R3)
         NC    MASK1(12),=12X'0F'
         TR    MASK1(12),=C'0123456789ABCDEF'
         MVI   MASK1+12,C' '
*        UNPK  MASK2(13),39(7,R3)                     ****(RLL)****
         UNPK  MASK2(13),38(7,R3)                     ****(RLL)****
         NC    MASK2(12),=12X'0F'
         TR    MASK2(12),=C'0123456789ABCDEF'
         MVI   MASK2+12,C' '
         MVC   QJOB(8),=CL8'*SYSTEM*'
         MVC   QSTAT(7),=CL7'*AQTOP*'
         SR    R1,R1                                         *CNB/XA*
         LA    R1,QUELINE
         SR    R0,R0
         IC    R0,XAU
         SVC   35
         L     R4,0(0,R3)         1ST QUEUE ELEMENT
         SPACE 1
ALLOC1   CR    R3,R4              END OF CHAIN
         BE    NOALLOC            YES
*        L     R1,24(0,R4)        MASK ADDR           ****(RLL)****
         SR    R1,R1                                         *CNB/XA*
         LA    R1,29(0,R4)        MASK ADDR           ****(RLL)****
         UNPK  MASK1(13),0(7,R1)
         NC    MASK1(12),=12X'0F'
         TR    MASK1(12),=C'0123456789ABCDEF'
         MVI   MASK1+12,C' '
*        UNPK  MASK2(13),7(7,R1)                      ****(RLL)****
         UNPK  MASK2(13),6(7,R1)                      ****(RLL)****
         NC    MASK2(12),=12X'0F'
         TR    MASK2(12),=C'0123456789ABCDEF'
         MVI   MASK2+12,C' '
         MVC   QSTAT(7),=CL7'WAITING'
         CLI   28(R4),C'W'        OPERATOR WAIT
         BE    ALLOC2             YES
         MVC   QSTAT(7),=CL7'PENDING'
         CLI   28(R4),C'P'        OPER REPLY PENDING
         BE    ALLOC2             YES
         MVC   QSTAT(7),=CL7'AQUEUE'
         CLI   28(R4),C'A'        A QUEUE WAIT
         BE    ALLOC2             YES
         MVC   QSTAT(7),=CL7'BQUEUE'
         CLI   28(R4),C'B'        B QUEUE WAIT
         BE    ALLOC2             YES
         MVC   QSTAT(7),=CL7'OWNING'
         CLI   28(R4),C'E'        OWNING
         BE    ALLOC2             YES
         MVC   QSTAT(7),=CL7'UNK-   '
         MVC   QSTAT+6(1),28(R4)
         SPACE 1
ALLOC2   SR    R5,R5                                         *CNB/XA*
         LA    R5,16(0,R4)        ASID -6 ADDR
         BAL   R7,CHKASID         FIND JOBNAME
         MVC   QJOB(8),JOBNAME
         SR    R1,R1                                         *CNB/XA*
         LA    R1,QUELINE
         SR    R0,R0                                         *CNB/XA*
         IC    R0,XAU
         SVC   35
         MVI   FOUND,X'FF'        ANY OUTPUT
         L     R4,0(0,R4)         NEXT QUEUE ELEMENT
         B     ALLOC1
         SPACE 3
NOALLOC  SR    R5,R5
         SR    R0,R0
         L     R5,AMODE24                                    *CNB/XA*
         BSM   0,R5                                          *CNB/XA*
AMODE24  DC    A(CONT24+X'00000000')                         *CNB/XA*
         DS    0H                                            *CNB/XA*
CONT24   CLI   FOUND,X'00'        ANY OUTPUT
         BNE   EXIT
         SR    R1,R1                                         *CNB/XA*
         LA    R1,NALOCMSG
         SR    R0,R0
         IC    R0,XAU
         SVC   35
         B     EXIT
         EJECT
FORMAT   MVC   UNIT(3),13(R3)     UNIT NAME
         MVC   VOLSER(6),=CL6' '  NO VOLSER
         TM    18(R3),X'A0'       DASD OR TAPE
         BZ    *+10               NO
         MVC   VOLSER(6),28(R3)   VOLSER
         ST    R4,TEMP
         UNPK  DOUBLE(7),TEMP+1(4)
         NC    DOUBLE(6),=8X'0F'
         TR    DOUBLE(6),=C'0123456789ABCDEF'
         MVC   IOQADDR(6),DOUBLE
         SR    R1,R1                                         *CNB/XA*
         IC    R1,4(0,R5)         DRIVER ID
         SLL   R1,3
         LA    R1,DRIVRTAB(R1)    DRIVER NAME
         MVC   DRIVER(8),0(R1)
         MVC   STATUS(6),=CL6'ACTIVE'
         MVC   BL1(2),=2C' '                                 *CNB/XA*
         MVC   BL2(2),=2C' '                                 *CNB/XA*
         MVC   BL3(2),=2C' '                                 *CNB/XA*
         MVC   BL4(2),=2C' '                                 *CNB/XA*
         MVC   BL5(2),=2C' '                                 *CNB/XA*
         MVC   BL6(20),=20C' '                               *CNB/XA*
         MVC   IOLINE+0(4),=X'00350100'                      *CNB/XA*
         SR    R1,R1                                         *CNB/XA*
         LA    R1,IOLINE
         SR    R0,R0
         IC    R0,XAU
         SVC   35
         MVI   FOUND,X'FF'
         BR    R7
         EJECT
CHKASID  SR    R8,R8                                         *CNB/XA*
         ICM   R8,3,6(R5)        ASID
         CH    R8,=H'1'          MASTER
         BNH   CHKASID6           YES
         SLL   R8,2              X 4
         SR    R15,R15                                       *CNB/XA*
         L     R15,16             CVT
         L     R15,556(0,R15)     ASVT
         L     R15,524(R8,R15)   ASCB
         L     R8,56(0,R15)      CSCB
         CLI   28(R8),X'03'      INIT CSCB
         BE    CHKASID2           GET JOBNAME
         SPACE 1
CHKASID1 LA    R8,0(0,R8)
         LTR   R8,R8            CSCB EXIST
         BZ    CHKASID5           NO, PRINT ASID
         MVC   JOBNAME(8),8(R8)
         BR    R7
         SPACE 1
CHKASID2 LR    R15,R8            CSCB
         SR    R1,R1                                         *CNB/XA*
         ICM   R1,3,30(R15)       ASID
         SPACE 1
CHKASID3 L     R8,0(0,R8)       NEXT CSCB
         LTR   R8,R8            END OF CSCBS
         BNZ   CHKASID4           NO
         LR    R8,R15            ORIG CSCB
         B     CHKASID1
         SPACE 1
CHKASID4 CR    R8,R15            SAME CSCB
         BE    CHKASID1           YES
         CH    R1,30(0,R8)       ASID MATCH
         BNE   CHKASID3           NO, CHECK NEXT CSCB
         B     CHKASID1
         SPACE 1
CHKASID5 MVC   JOBNAME(4),=CL4'AS='
         UNPK  JOBNAME+4(5),6(3,R5)
         NC    JOBNAME+4(4),=4X'0F'
         TR    JOBNAME+4(4),=X'0123456789ABCDEF'
         MVI   JOBNAME+5,C' '
         BR    R7
         SPACE 1
CHKASID6 MVC   JOBNAME(8),=CL8'*MASTER*'
         BR    R7
         EJECT
         USING *,R15
STAEXIT  CH    R0,=H'12'           SDWA GOTTEN
         BE    STAEXIT1            NO, FORCE RETURN
         L     R2,=A(STAERTRY)     LOAD RETRY ADDR
         SETRP RC=4,RETADDR=(2),FRESDWA=YES,DUMP=NO
         SPACE 3
STAEXIT1 L     R0,=A(STAERTRY)     LOAD RETRY ADDR
         SR    R5,R5
         SR    R0,R0                                         *CNB/XA*
         L     R5,AMODE24X                                   *CNB/XA*
         BSM   0,R5                                          *CNB/XA*
AMODE24X DC    A(CONT24X+X'00000000')                        *CNB/XA*
         DS    0H                                            *CNB/XA*
CONT24X  SR    R15,R15
         LA    R15,4
         BR    R14
         DROP  R15
         SPACE 3
         USING *,R15
STAERTRY L     R12,=A(IEESR03D)    LOAD ENTRY POINT ADDR
         LR    R13,R1              RELOAD WORK AREA ADDR
         DROP  R15
         LA    R1,STAEMSG          ADDRESSING ERROR
         L     R2,XSASAVE          RELOAD XSA ADDR
MSGRTN1  SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         B     EXIT
         EJECT
NOTFOUND CLI   FOUND,X'00'        ANY OUTPUT
         BNE   EXIT
         SR    R1,R1                                         *CNB/XA*
         LA    R1,NFNDMSG
         SR    R0,R0
         IC    R0,XAU
         SVC   35
         SPACE 3
EXIT     EQU   *
         ESTAE 0                                      ****(RLL)****
         SR    R0,R0                                         *CNB/XA*
         L     R0,SIZE
         SR    R14,R14                                       *CNB/XA*
         L     R14,SAVE
         SR    R1,R1                                         *CNB/XA*
         LR    R1,R13
         FREEMAIN R,LV=(0),A=(1)
         SR    R15,R15
         BR    R14
         EJECT
         LTORG
         SPACE 3
         DS    0F
SIZE     DC    X'F1',AL3(WORKEND-WORK)
NFNDMSG  DC    X'00350100'
         DC    CL50'NO SUBCHANNEL I/O REQUESTS OUTSTANDING            '
NALOCMSG DC    X'00350100'
         DC    CL50'NO ALLOCATION REQUESTS OUTSTANDING                '
QMSG1    DC    X'00350100'
         DC    CL50'QUEUED I/O NOT SUPPORTED IN XA MODE               '
STAEMSG  DC    X'00350100'
         DC    CL50'ERROR ENCOUNTERED IN CONTROL BLOCKS, RETRY COMMAND'
         SPACE 3
DRIVRTAB DC    CL8'IOSRESV '
         DC    CL8'IOSMISC '
         DC    CL8'EXCP    '
         DC    CL8'VSAM    '
         DC    CL8'VTAM    '
         DC    CL8'TCAM    '
         DC    CL8'OLTEP   '
         DC    CL8'PCIFETCH'
         DC    CL8'JES3    '
         DC    CL8'MSC/MSS '
         DC    CL8'PURGE   '
         DC    CL8'VPSS    '
         DC    CL8'CRYPTO  '
         DC    CL8'ASM     '
         DC    CL8'SUSP/RES'
         DC    CL8'DYN/PATH'                                 *CNB/XA*
         DC    CL8'DAVV    '                                 *CNB/XA*
         DC    CL8'SVC33   '                                 *CNB/XA*
         DC    CL8'CLR RECV'                                 *CNB/XA*
         DC    CL8'SVC16PRG'                                 *CNB/XA*
         DC    CL8'ALT PATH'                                 *CNB/XA*
         DC    CL8'MIH     '                                 *CNB/XA*
         EJECT
WORK     DSECT
SAVE     DS    F
XSASAVE  DS    F
TEMP     DS    F
         DS    0D
DOUBLE   DS    2F
         SPACE 3
         DS    0F
IOLINE   DS    0CL50
         DS    F
UNIT     DS    CL3
BL1      DS    CL2                                           *CNB/XA*
VOLSER   DS    CL6
BL2      DS    CL2                                           *CNB/XA*
JOBNAME  DS    CL8
BL3      DS    CL2                                           *CNB/XA*
IOQADDR  DS    CL6
BL4      DS    CL2                                           *CNB/XA*
DRIVER   DS    CL8
BL5      DS    CL2                                           *CNB/XA*
STATUS   DS    CL6
BL6      DS    CL20                                          *CNB/XA*
         SPACE 3
         DS    0F
QUELINE  DS    0CL50
         DS    F
QJOB     DS    CL8
         DS    CL2
QSTAT    DS    CL7
         DS    CL2
MASK1    DS    CL12
         DS    CL2
MASK2    DS    CL12
         DS    CL20
         SPACE 1
SAVEOLD  DS    CL3                                           *CNB/XA*
FOUND    DS    C
TYPE     DS    C
ENDUCBX  DS    C                                             *CNB/XA*
         DS    0D
PARMLIST DS    3F                                            *CNB/XA*
         ORG   PARMLIST
PARMWA   DS    F                                             *CNB/XA*
PARMDEVT DS    F                                             *CNB/XA*
PARMUCB  DS    F                                             *CNB/XA*
         ORG
DEVCLASS DS    CL1                                           *CNB/XA*
ADDRUCB  DS    F                                             *CNB/XA*
         DS    0D
WORKAREA DS    CL100                                         *CNB/XA*
         DS    0F
ESTAELST DS    5F                                     ****(RLL)****
WORKEND  DS    0D
         EJECT
DSXSA    DSECT
XSA      DS    0D
XAP      DS    F                  PTR TO XCTL NAME
XAD      DS    F                  DCB PTR
XAX      DS    D                  XCTL NAME
XAE      DS    0C                 ERROR CODE
XAR      DS    F                  PTR TO PARM LIST (REG1)
XAN      DS    0C                 VERB INDEX
XAL      DS    F                  PTR TO LIST POSITION
XAV      DS    D                  VERB
XAS      DS    D                  TEMP SAVE-AREA
XAU      DS    C                  UCM ENTRY INDICATOR
         DS    C                  RESERVED
XAJ      DS    H                  TJID ENTRY INDICATOR
         DS    F                  RESERVED
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
         IHASDWA
         EJECT
         CVT   DSECT=YES                                     *CNB/XA*
         EJECT
         IEFUCBOB PREFIX=YES                                 *CNB/XA*
         END
