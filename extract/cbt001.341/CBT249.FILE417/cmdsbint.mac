         TITLE 'CMDSBINT -   INITIALIZATION AND MONITOR MODULE'
***********************************************************************
***********************************************************************
***                                                                 ***
***                                                                 ***
***                                                                 ***
***                     COMMAND  SUB-SYSTEM                         ***
***                  -------------------------                      ***
***                                                                 ***
***                                                                 ***
***       CMDSBINT -       INITIALIZATION AND MONITOR MODULE        ***
***                                                                 ***
***       VERSION -        2.0                                      ***
***                                                                 ***
***       MVS LEVEL -      MVS/XA SP2.1.1                           ***
***                                                                 ***
***       UPDATED -        12/15/79                                 ***
***                                                                 ***
***                        02/02/84 SNET-JAL 31-BIT CODING ADDED    ***
***                                                                 ***
***                                                                 ***
***                                                                 ***
***********************************************************************
***********************************************************************
         EJECT
CMDSBINT CSECT
         SAVE  (14,12)
         LR    R3,R15
         USING CMDSBINT,R3
         ST    R13,SAVE+4
         LA    R13,SAVE
         L     R4,0(0,R1)          PARM ADDR
         LH    R5,0(0,R4)          PARM LENGTH
         LA    R4,2(0,R4)          PARM BEGIN
         LA    R7,TABLE            LOAD INIT TABLE ADDR
         LTR   R5,R5               ANY PARMS
         BNZ   PARM                YES, PROCESS
         SPACE 1
         ABEND 78,DUMP
         SPACE 3
PARM     CLI   0(R4),C'$'          BYPASSED OR NON-EXISTANT CMD
         BE    PARM2               YES, NEXT PARM
         MVC   0(4,R7),0(R4)       SET IN INIT TABLE
         LA    R7,4(0,R7)          NEXT TABLE SLOT
         C     R7,=A(TABEND)       ANY MORE SLOTS
         BE    PARMEND             NO, JUST USE THESE
         SPACE 1
PARM1    LA    R4,3(0,R4)          NEXT PARM-1
         SH    R5,=H'3'            DECR PARM LENGTH
         SPACE 1
PARM2    LA    R4,1(0,R4)          NEXT PARM
         BCTR  R5,0                DECR PARM LENGTH
         LTR   R5,R5               ARE ALL PARMS PROCESSED
         BP    PARM                NO, CONTINUE
         EJECT
PARMEND  MODESET KEY=ZERO,MODE=SUP
         SPACE 1
         L     R0,SIZE             LOAD SIZE AND SUBPOOL
         SPACE 1
         GETMAIN R,LV=(0)
         SPACE 1
         LR    R4,R1               SAVE ADDR OR SSVT AND WORK AREA
         USING AREA,R4
         XC    SSVT(4),SSVT        CLEAR SSVT 1ST 4 BYTES
         MVI   SSVTFNUM+1,X'01'    SET NO. OF SUPPORTED FUNCTIONS
         XC    SSVTFCOD(256),SSVTFCOD  CLEAR FUNCTION MATRIX
         XC    SSVTFUNC(156),SSVTFUNC  CLEAR REST OF SSVT
         XC    USERWORK(228),USERWORK  CLEAR WORK AREA
         XC    CMDXSA(48),CMDXSA   CLEAR # XSA
         XC    XSA(48),XSA         CLEAR ## XSA
         XC    CSCCMD(78),CSCCMD   CLEAR CSC COMMAND AREA
         XC    CSCSTABL(48),CSCSTABL CLEAR CSC SYSID TABLE
         MVI   SSVTSTAT,X'FF'      SET MONITOR BUSY INDICATOR
         MVI   SSVTFCOD+9,X'01'    SUPPORT CMD ENTRY
         LA    R1,SSVTECB          COMMAND ANSWER ECB
         ST    R1,SSVTLIST         ECB ADDR TO ECB LIST
         L     R1,16               CVT
         L     R1,0(0,R1)          TCB WORDS
         L     R1,12(0,R1)         CURRENT ASCB
         ST    R1,SSVTASCB         SAVE CMD1 ASCB ADDR
         L     R1,56(0,R1)         CSCB ADDR
         L     R1,40(0,R1)         STOP/MODIFY ECB ADDR
         ST    R1,SSVTLIST+4       ECB ADDR TO LIST
         MVI   SSVTLIST+4,X'80'    END OF LIST INDICATOR
         LA    R1,SSVTWAIT         WAIT TIME FIELD
         ST    R1,XAT              SAVE ADDR IN XSA
         EJECT
         L     R1,16               CVT
         L     R1,0(0,R1)          TCB WORDS
         L     R1,12(0,R1)         CURRENT ASCB
         SR    R15,R15             -JAL/XA-
         L     R15,AMODE31         -JAL/XA-
         BSM   0,R15               -JAL/XA-
AMODE31  DC    A(OUCBCONT+X'80000000') -JAL/XA-
OUCBCONT DS    0H                  -JAL/XA-
         L     R1,144(0,R1)        OUCB
         OI    17(R1),X'80'        SET NON-SWAPPABLE
         LA    R15,AMODE24         -JAL/XA-
         BSM   0,R15               -JAL/XA-
AMODE24  DS    0H                  -JAL/XA-
         L     R1,16               CVT
         L     R1,0(0,R1)          TCB WORDS
         L     R1,4(0,R1)          CURRENT TCB
         L     R1,12(0,R1)         TIOT
         LA    R1,24(0,R1)         DD ENTRIES
         LA    R14,CSCSTABL        CSC SYSID TABLE
         SPACE 1
CSCLOOP  CLC   4(8,R1),=CL8'CSCDATA'
         BE    CSCATCH             CSCDATA DD FOUND, ATTACH CMDSBCSC
         CLC   4(4,R1),=CL4'CSC#'
         BE    CSCLOOP2            CSC SYSID DD FOUND
         SPACE 1
CSCLOOP1 SR    R15,R15
         IC    R15,0(0,R1)         DD ENTRY LENGTH
         LA    R1,0(R15,R1)        NEXT DD ENTRY
         LTR   R15,R15             END OF TIOT
         BNZ   CSCLOOP             NO, CHECK NEXT
         L     R15,CSCTCB          CSC SUB-TASK TCB
         LTR   R15,R15             CSC ATTACHED
         BNZ   NOCSC               YES, CONTINUE
         MVI   CSCCMD,C'*'         INDICATE CSC NOT ACTIVE
         B     NOCSC
         SPACE 1
CSCLOOP2 MVC   0(4,R14),8(R1)      CSC SYSID
         LA    R14,4(0,R14)        NEXT ENTRY
         B     CSCLOOP1
         SPACE 1
CSCATCH  LA    R1,AREA
         XC    TERMECB(4),TERMECB
         ATTACH EP=CMDSBCSC,ECB=TERMECB
         ST    R1,CSCTCB           SAVE CSC TCB ADDR
         B     CSCLOOP1
NOCSC    EQU   *
         EJECT
         LOAD  EP=CMDSBSYS         LOAD CMD SUB-SYSTEM MODULE
         SPACE 1
         LR    R10,R0              LOAD FROM ADDR
         LA    R11,0(0,R1)         LOAD LENGTH
         SLL   R11,3               MULT NO. OF DOUBLEWORDS BY 8
         SPACE 1
         LOAD  EP=CMDDUMMY         LOAD DUMMY FLPA MODULE ADDR
         SPACE 1
         LR    R8,R0               SAVE
         A     R8,0(0,R10)            FUNCTION 1
         ST    R8,SSVTFUN1               ADDR IN SSVT
         LR    R8,R0               LOAD TO ADDR
         LA    R9,0(0,R1)          LOAD LENGTH
         SLL   R9,3                MULT NO. OF DOUBLEWORDS BY 8
         EJECT
*
*   THE FOLLOWING PAGE FIX CODE WILL FIX CMDDUMMY IN PLPA
*   ELIMINATING THE REQUIREMENT TO PUT IT IN A FIX LIST
*
*   THE ABOVE IS NOT TRUE YOU STILL NEED TO PUT
*   CMDDUMMY IN THE FIX LIST
*
PGFIX    LR    R5,R8               ... MODULE START
         SRL   R5,12               ... START PAGE
         LA    R6,0(R9,R8)         ... MODULE END
         SRL   R6,12               ... END PAGE
         XC    FIXECB(4),FIXECB    ... CLEAR PGFIX ECB
         PGFIX R,A=(5),ECB=FIXECB  ... FIX 1ST PAGE
         WAIT  ECB=FIXECB          ...
         CR    R5,R6               ... IS MODULE IN 1 OR 2 PAGES
         BE    PGFIX1              ... 1 PAGE, BYPASS 2ND PGFIX
         XC    FIXECB(4),FIXECB    ... CLEAR PGFIX ECB
         PGFIX R,A=(6),ECB=FIXECB  ... FIX 2ND PAGE
         WAIT  ECB=FIXECB          ...
         SPACE 1
PGFIX1   EQU   *
         EJECT
         MVCL  R8,R10              MOVE IN SUB-SYS MODULE
         L     R5,16               CVT
         L     R6,0(0,R5)          TCB WORDS
         L     R6,4(0,R6)          CURRENT TCB
         L     R6,12(0,R6)         TIOT
         L     R5,296(0,R5)        JESCT
         L     R5,24(0,R5)         1ST SSCVT ADDR
         EJECT
SSCVT1   CLC   8(4,R5),8(R6)       NAME MATCH
         BE    SSCVT2              YES, CONTINUE
         L     R5,4(0,R5)          NEXT SSCVT
         LTR   R5,R5               ZERO SSCVT
         BNZ   SSCVT1              NO, CONTINUE
         SPACE 1
         ABEND 77,DUMP             INIT ERROR
         SPACE 3
SSCVT2   LA    R7,TABLE            INPUT TABLE
         LA    R12,CMDTABLE        OUTPUT TABLE
         XC    0(84,R12),0(R12)    CLEAR OUTPUT TABLE
         SPACE 3
SSCVT3   MVC   CMDNAME+3(2),1(R7)  FINISH NAME
         SPACE 1
         LOAD  EPLOC=CMDNAME       LOAD IT
         SPACE 1
         CLI   3(R7),C'0'          TEST VERSION
         BNE   SSCVT5              YES, GET DUMMY TO OVERLAY
         ST    R0,0(0,R12)         SAVE ADDRESS
         MVC   0(1,R12),0(R7)      SAVE COMMAND ID
         DELETE EPLOC=CMDNAME
         EJECT
SSCVT4   LA    R7,4(0,R7)          INCR INPUT TABLE
         LA    R12,4(0,R12)        INCR OUTPUT TABLE
         CLI   0(R7),X'00'         END OF INPUT
         BE    SSCVT6              YES, EXIT
         B     SSCVT3              CONTINUE
         SPACE 3
SSCVT5   LR    R10,R0              SAVE TEST MODULE ADDR
         LA    R11,0(0,R1)         SAVE FROM LENGTH
         SLL   R11,3               MULT NO. OF DOUBLEWORDS BY 8
         MVC   TESTNAME+7(1),3(R7) FINISH NAME
         SPACE 1
         LOAD  EPLOC=TESTNAME
         SPACE 1
         ST    R0,0(0,R12)         SAVE ADDRESS
         MVC   0(1,R12),0(R7)      SAVE COMMAND ID
         LR    R8,R0               SAVE DUMMY MODULE ADDR
         LA    R9,2048             SAVE TO LENGTH
         MVCL  R8,R10              MOVE IN TEST MODULE
         B     SSCVT4              NEXT
         SPACE 3
SSCVT6   ST    R4,16(0,R5)         SAVE SSVT ADDR IN SSCVT
         LA    R8,CMD##TAB
         SPACE 1
SSCVT7   CLC   0(4,R8),=F'0'       END OF COMMANDS
         BE    WAIT                YES
         MVC   CMD#ID(1),0(R8)     SET UP COMMAND MODULE NAME
         LOAD  EPLOC=CMD#NAME
         ST    R0,0(0,R8)          SAVE MODULE ADDR
         MVC   0(1,R8),CMD#ID      RESTORE COMMAND ID
         LA    R8,4(0,R8)          NEXT COMMAND
         B     SSCVT7
         EJECT
WAIT     XC    SSVTECB(4),SSVTECB
         MVI   SSVTSTAT,X'00'      SET MONITOR READY INDICATOR
         WAIT  ECBLIST=SSVTLIST
         L     R1,SSVTASCB         ASCB ADDR
         L     R1,56(0,R1)         CSCB ADDR
         L     R14,40(0,R1)        ECB ADDR
         TM    0(R14),X'40'        STOP COMMAND ISSUED
         BZ    CMDPROC             NO
         WTO   'CMD SUBSYS -   COMMAND SUB-SYSTEM TERMINATED',DESC=2
         XC    16(4,R5),16(R5)     DISCONNECT CMD SUBSYS
         CLI   CSCCMD,C'*'         CSC ACTIVE
         BE    EXIT                NO, BYPASS DETACH
         MVI   CSCCMD,C'*'         INDICATE SHUTDOWN
         WAIT  ECB=TERMECB
         LA    R1,CSCTCB
         DETACH (1)
         SPACE 1
EXIT     LR    R1,R4               GETMAIN AREA
         L     R0,SIZE
         FREEMAIN R,LV=(0),A=(1)
         SPACE 3
RETURN   L     R13,SAVE+4
         SPACE 1
         RETURN (14,12),RC=0
         EJECT
CMDPROC  MVC   XAU(1),SSVTUMID+3
         MVC   SSVTWAIT(8),=8C'0'
         XC    SSVTTIME(4),SSVTTIME
         LA    R1,CMD##
         CLI   0(R1),C'$'          TABLE ENTRY DELETE REQUEST
         BE    CMDDEL              YES
         LA    R8,CMD##+73
         SPACE 1
CMDPROCA CLC   0(2,R8),=C'T='      TIME PARM
         BE    CMDPROCB            YES
         BCTR  R8,0                PREVIOUS CHARACTER
         CR    R1,R8               BACK TO BEGINNING
         BE    CMDPROC0            YES, NO T= PARM
         B     CMDPROCA
         SPACE 1
CMDPROCB LA    R1,PACK+3           TARGET FIELD
         MVC   PACK(4),=C'0000'
         CLI   4(R8),C' '          SENDING BYTE BLANK
         BE    *+12                YES, DONT MOVE
         MVC   0(1,R1),4(R8)       MOVE IT
         BCTR  R1,0                NEXT TARGET BYTE
         CLI   3(R8),C' '          SENDING BYTE BLANK
         BE    *+12                YES, DONT MOVE
         MVC   0(1,R1),3(R8)       MOVE IT
         BCTR  R1,0                NEXT TARGET BYTE
         CLI   2(R8),C' '          SENDING BYTE BLANK
         BE    *+10                YES, DONT MOVE
         MVC   0(1,R1),2(R8)       MOVE IT
         MVC   DOUBLE(4),=C'0000'
         MVZ   DOUBLE(4),PACK
         CLC   DOUBLE(4),=C'0000'  IS IT NUMERIC
         BE    CMDPROCC            YES
         MVC   PACK(4),=C'0000'
         SPACE 1
CMDPROCC PACK  DOUBLE(8),PACK(4)
         CVB   R15,DOUBLE          SECONDS TO BINARY
         SR    R14,R14
         ST    R15,SSVTTIME        SAVE BINARY SECONDS
         D     R14,=F'60'          CALCULATE MINUTES AND SECONDS
         CVD   R15,DOUBLE          MINUTES
         UNPK  SSVTWAIT+2(2),DOUBLE+6(2)
         OI    SSVTWAIT+3,X'F0'
         CVD   R14,DOUBLE          SECONDS
         UNPK  SSVTWAIT+4(2),DOUBLE+6(2)
         OI    SSVTWAIT+5,X'F0'
         MVC   0(4,R8),=CL4' '
         BCTR  R8,0
         CLI   0(R8),C','
         BNE   *+8
         MVI   0(R8),C' '
         EJECT
CMDPROC0 LA    R8,CMD##TAB         ## COMMAND TABLE
         SPACE 1
CMDPROC1 CLC   CMD##(1),0(R8)      COMMAND MATCH
         BE    CMDPROC3            YES
         LA    R8,4(0,R8)          NEXT TABLE ENTRY
         CLC   0(4,R8),=F'0'       END OF TABLE
         BNE   CMDPROC1            NO
         SPACE 1
CMDPROC2 SR    R0,R0
         IC    R0,XAU
         LA    R1,NOTSPMSG         COMMAND NOT SUPPORTED MSG
         SVC   35
         B     WAIT
         SPACE 1
CMDPROC3 SR    R0,R0
         IC    R0,XAU
         LA    R1,MONMSG           MONITOR COMMAND ACCEPTED MSG
         SVC   35
         LA    R1,CMD##+1          SUB-PARM ADDR
         CLI   0(R1),C' '          1 BLANK ALLOWED
         BNE   CMDPROC4            NOT BLANK
         LA    R1,1(0,R1)          NEXT CHAR
         CLI   0(R1),C' '          ANY SUB-PARM
         BNE   CMDPROC4            YES
         XC    XAL(4),XAL          CLEAR SUB-PARM ADDR
         B     CMDPROC5
         SPACE 1
CMDPROC4 ST    R1,XAL              SUB-PARM ADDR
         SPACE 1
CMDPROC5 STM   R14,R12,SAVE+12     SAVE REGS
         LA    R2,XSA              XSA ADDR
         L     R15,0(0,R8)         LOAD COMMAND MODULE ADDR
         LA    R15,0(0,R15)
         LTR   R15,R15             ZERO ADDR
         BZ    CMDPROC2            YES, NOT SUPPORTED
         BALR  R14,R15             BRANCH TO COMMAND MODULE
         EJECT
         USING CMDRETN,R14
CMDRETN  L     R1,CMDBASE
         LA    R3,0(0,R14)         LOAD RETURN POINT
         SR    R3,R1               CALC ENTRY POINT
         DROP  R14
         LM    R14,R12,SAVE+12     RELOAD REGS
         B     WAIT
         SPACE 3
CMDDEL   LA    R15,1(0,R1)         COMMAND ID
         LA    R1,CMD##TAB         COMMAND TABLE
         SPACE 1
CMDDEL1  CLC   0(1,R15),0(R1)      COMMAND MATCH
         BE    CMDDEL2             YES
         LA    R1,4(0,R1)          NEXT ENTRY
         CLC   0(4,R1),=F'0'       END OF TABLE
         BNE   CMDDEL1             NO, CHECK NEXT
         B     CMDDEL3             YES, NOT FOUND, IGNORE
         SPACE 1
CMDDEL2  MVI   0(R1),X'00'         DISABLE COMMAND
         MVC   DISBL(4),=X'00300100'
         MVC   DISBL+4(44),=CL44'CMD SUBSYS -   ##X  COMMAND DISABLED'
         MVC   DISBL+21(1),0(R15)
         SR    R0,R0
         IC    R0,XAU
         LA    R1,DISBL
         SVC   35
         B     WAIT
         SPACE 1
CMDDEL3  SR    R0,R0
         IC    R0,XAU
         LA    R1,NOTDSMSG
         SVC   35
         B     WAIT
         EJECT
         LTORG
         SPACE 5
SAVE     DS    18F
         DS    0D
DOUBLE   DS    2F
CSCTCB   DC    F'0'
TERMECB  DS    F
FIXECB   DS    F
PACK     DS    F
SIZE     DC    X'F1',AL3(AREAEND-AREA)
CMDBASE  DC    A(CMDRETN-CMDSBINT)
         SPACE 1
         DS    0D
CMDNAME  DC    CL8'IEEXX03D'
CMD#NAME DC    CL4'IEEZ'
CMD#ID   DC    C' '
         DC    CL3'03D'
TESTNAME DC    CL8'CMDTESTX'
         SPACE 1
TABLE    DC    20F'0'
TABEND   DC    F'0'
         SPACE 1
         DS    0F
CMD##TAB DC    C'A',AL3(0)
         DC    C'B',AL3(0)
         DC    C'C',AL3(0)
         DC    C'J',AL3(0)
         DC    C'P',AL3(0)
         DC    C'S',AL3(0)
         DC    F'0'
         SPACE 1
NOTSPMSG DC    X'00300100'
         DC    CL44'CMD SUBSYS -   COMMAND NOT SUPPORTED'
         SPACE 1
NOTDSMSG DC    X'00300100'
         DC    CL44'CMD SUBSYS -   COMMAND NOT DISABLED'
         SPACE 1
MONMSG   DC    X'00300100'
         DC    CL44'CMD SUBSYS -   MONITOR COMMAND ACCEPTED'
         EJECT
         DS    0D
XSA      DS    0CL48
         DS    5F
XAL      DS    F
XAT      DS    F
         DS    F
XAS      DS    2F
XAU      DS    X
         DS    XL7
         EJECT
AREA     DSECT
SSVT     DS    H
SSVTFNUM DS    H
SSVTFCOD DS    XL256
SSVTFRTN DS    0F
SSVTFUNC DS    0F
SSVTFUN1 DS    F
         DS    8F
SSVTMSGT DS    F
SSVTLIST DS    2F
SSVTECB  DS    F
         DS    0D
SSVTWAIT DS    CL8
SSVTTIME DS    F
SSVTASCB DS    0F
SSVTSTAT DS    X
         DS    XL3
SSVTUMID DS    F
         SPACE 3
CMDTABLE DS    20F
CMDEND   DS    F
         SPACE 3
         DS    0D
USERWORK DS    CL228
         SPACE 3
CMDXSA   DS    0CL48
         DS    5F
CMDXAL   DS    F
         DS    4F
CMDXAU   DS    X
         DS    XL7
         SPACE 3
CMD##    DS    CL78
HDRMSG   DS    CL52
DISBL    DS    CL48
         DS    0F
CSCHDR   DS    CL52
CSCCMD   DS    CL78
CSCSTABL DS    CL48
         SPACE 3
AREAEND  DS    0D
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
