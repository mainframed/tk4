 TEC039: PROC OPTIONS(MAIN);
1/*---------------------------------------------------------------*/
 /*                                                               */
 /*   THIS PROGRAM WILL PROCESS THE MACROS USED AS INPUT TO THE   */
 /*   STAGE 1 OF A SYSGEN OR I/O GEN TO PRODUCE A MAP BY CHANNEL  */
 /*   OF ALL THE DEVICES ON THAT CHANNEL. IT INTERROGATES THE     */
 /*   'IODEVICE' MACROS TO DETERMINE THE DEVICE TYPES AND ADDRESS */
 /*   RANGES ASSOCIATED WITH THE DEVICE TYPE. THIS INFORMATION IS */
 /*   STORED IN A TABLE WHICH IS KEYED BY DEVICE ADDRESS. THE     */
 /*   CONSOLE MACROS ARE THEN PROCESSED TO RESET THE DEVICE TYPE  */
 /*   INDICATORS FOR THE CONSOLE ADDRESS TO INDICATE MASTER       */
 /*   CONSOLE (MCON) OR SECONDARY CONSOLE (SCON).  THE PROGRAM    */
 /*   WILL ALSO DETECT OPT CHAN AND PROPAGATE THE DEVICE TYPE     */
 /*   TO THE ALTERNATE ADDRESS.                                   */
 /*                                                               */
 /*   THE PROGRAM CAN HANDLE UP TO 256 DEVICES PER CHANNEL WITH   */
 /*   A MAXIMUM OF 16 CHANNELS.                                   */
 /*                                                               */
 /*   THE INPUT IS CARD IMAGE RECORDS (OBVIOUSLY) THRU FILE       */
 /*   'SYSIN'. THE OUTPUT IS 'VBA,LRECL=121' THRU FILE 'SYSPRINT'.*/
 /*                                                               */
 /*   THE REPORT IS PRINTED IN A 16X16 MATRIX FOR EACH CHANNEL.   */
 /*   EACH CHANNEL APPEARS ON A SEPARATE PAGE. THIS PROGRAM USES  */
 /*   THE VERTICAL BAR AND UNDERLINE CHARACTERS TO CONSTRUCT      */
 /*   THE BOXES IN THE MATRIX, SO IF YOU DON'T HAVE THESE IN YOUR */
 /*   PRINT CHAIN, YOU SHOULD FIND SOMETHING ELSE TO USE.         */
 /*                                                               */
 /*   FOR THOSE OF YOU WITH 3800 PRINTERS, USE CHARS=GS15         */
 /*                                                               */
 /*---------------------------------------------------------------*/
1DCL
 CARD                      CHAR(80)   INIT(' '),
 STMT                      CHAR(1000) VARYING,
 HEXSTR                    CHAR(16)   INIT('0123456789ABCDEF'),
 HEX(0:15)                 CHAR(1)    BASED(HEX_ADDR),
 HEX_ADDR                  POINTER,
 L1_ADDR                   POINTER,
 L3_ADDR                   POINTER,
 DATE                      BUILTIN,
 ADDR                      BUILTIN,
 ICHAN                     FIXED BIN(15,0),
 IUNIT                     FIXED BIN(15,0),
 IADDR                     FIXED BIN(15,0),
 IOFFSET                   FIXED BIN(15,0),
 SAVE_UNIT                 CHAR(4),
 SAVE_ADDR                 CHAR(3),
 SAVE_DEVICE               CHAR(4),
001  UCBS(4096),
     05  ADDRESS           CHAR(3),
     05  DEVICE            CHAR(4),
     05  OPTCH             CHAR(1),
001  LINE1,
     05  LFILL1            CHAR(3)   INIT(' '),
     05  LADDRS(16),
         10  LBAR1         CHAR(1)   INIT('×'),
         10  LOPT          CHAR(1)   INIT(' '),
         10  LDEV          CHAR(4),
         10  LBLANK        CHAR(1)   INIT(' '),
     05  LBAR2             CHAR(1)   INIT('×'),
001  LINE3,
     05  L3BLANK1          CHAR(3),
     05  L3ADDRS(16),
         10  L3BLANK2      CHAR(2)   INIT(' '),
         10  L3ADDR        CHAR(3),
         10  L3BLANK3      CHAR(2)   INIT(' '),
     05  L3BLANK4          CHAR(1)   INIT(' '),
0L1                        CHAR(116) BASED(L1_ADDR),
 L3                        CHAR(116) BASED(L3_ADDR),
001  SAVE_OVERLAY          BASED(CUA_ADDR),
     05  SAVE_CH           CHAR(1),
     05  SAVE_CU           CHAR(1),
     05  SAVE_UA           CHAR(1);
0ON ENDFILE(SYSIN) GO TO EOF;
0ON ENDPAGE(SYSPRINT)
   BEGIN;
     PUT EDIT(SUBSTR(DATE,3,2),'/',SUBSTR(DATE,5,2),'/',
              SUBSTR(DATE,1,2),'UCB MAP FROM STAGE 1 INPUT',
              'PROGRAM: TEC039')
             (PAGE,COL(1),A(2),A(1),A(2),A(1),A(2),COL(52),A(28),
                   X(10),A(15));
   END;
0L1_ADDR = ADDR(LINE1);
 L3_ADDR = ADDR(LINE3);
 HEX_ADDR = ADDR(HEXSTR);
 CUA_ADDR = ADDR(SAVE_ADDR);
 /*                                                                  */
 /*                INITIALIZE THE UCB TABLE                          */
 /*                                                                  */
0DO ICHAN = 0 TO 15;
   DO IUNIT = 0 TO 15;
     DO IADDR = 0 TO 15;
       IOFFSET = (ICHAN*256) + (IUNIT*16) + IADDR + 1;
       ADDRESS(IOFFSET) = HEX(ICHAN) ×× HEX(IUNIT) ×× HEX(IADDR);
       DEVICE(IOFFSET)  = ' ';
     END;
   END;
 END;
1LOOP:
0  GET FILE(SYSIN) EDIT(CARD)(COL(1),A(80)); /* READ A CARD          */
   IF SUBSTR(CARD,72,1) ^= ' ' THEN          /* IF IT'S CONTINUED    */
     DO;                                     /*   THEN               */
       DO I = 71 TO 1 BY -1;                 /*     FIND THE END     */
         IF SUBSTR(CARD,I,1) ^= ' ' THEN     /*      .               */
           DO;                               /*      .               */
             J = I;                          /*      .               */
             I = 0;                          /*      .               */
           END;                              /*      .               */
       END;                                  /*      .               */
       STMT = STMT ×× SUBSTR(CARD,1,J);      /*     ADD TO LAST CARD */
       GO TO LOOP;                           /*     AND TRY AGAIN    */
     END;                                    /*                      */
   STMT = STMT ×× CARD;                      /* ADD TO LAST CARD     */
0  IF INDEX(STMT,'IODEVICE') > 0 THEN        /* IF THIS IS 'IODEVICE'*/
     DO;                                     /*   THEN               */
       I = INDEX(STMT,'ADDRESS=') + 8;       /*   FIND THE ADDRESS   */
       IF SUBSTR(STMT,I,1) = '(' THEN        /*   IF IT'S A LIST     */
         DO;                                 /*     THEN             */
           SAVE_ADDR = SUBSTR(STMT,I+1,3);   /*     SAVE THE ADDRESS */
                                             /*     AND THE COUNT    */
           ICOUNT    = SUBSTR(STMT,I+5,INDEX(SUBSTR(STMT,I+5),')')-1);
         END;                                /*                      */
       ELSE                                  /*   IF SINGLE DEVICE   */
         DO;                                 /*     THEN             */
           SAVE_ADDR = SUBSTR(STMT,I,3);     /*     SAVE THE ADDRESS */
           ICOUNT    = 1;                    /*     AND SAY IT'S ONE */
         END;                                /*                      */
       J = INDEX(STMT,'UNIT=') + 5;          /*   FIND THE UNIT TYPE */
       K = INDEX(SUBSTR(STMT,J),',');        /*     .                */
       L = INDEX(SUBSTR(STMT,J),' ');        /*     .                */
       IF K = 0 THEN K = 999;                /*     .                */
       K = MIN(K,L);                         /*     .                */
       SAVE_UNIT = SUBSTR(STMT,J,K-1);       /*   AND SAVE IT        */
       IF INDEX(STMT,'MODEL=11') > 0 &       /*   IF IT'S A MOD II   */
          SAVE_UNIT='3330'           THEN    /*     THEN             */
               SAVE_UNIT = '3331';           /*     SAY SO           */
       IF INDEX(STMT,'3330V') > 0 THEN       /*   IF IT'S MSS        */
          SAVE_UNIT = '333V';                /*     THEN SAY SO      */
       ICHAN = INDEX(HEXSTR,SAVE_CH)-1;      /*   COMPUTE CHANNEL    */
       IUNIT = INDEX(HEXSTR,SAVE_CU)-1;      /*   COMPUTE CU         */
       IADDR = INDEX(HEXSTR,SAVE_UA)-1;      /*   COMPUTE UNIT       */
       I = (ICHAN*256)+(IUNIT*16)+IADDR+1;   /*   COMPUTE OFFSET     */
       DO J = 0 TO ICOUNT-1;                 /*   SET UCBS ENTRIES   */
         DEVICE(I+J) = SAVE_UNIT;            /*   FOR EACH DEVICE    */
       END;
       IOPT = INDEX(STMT,'OPTCHAN=');        /*   FIND OPTCHAN       */
       IF IOPT > 0 THEN                      /*   DEVICE OPTCHAN'D?  */
          DO;                                /*                      */
            SAVE_CH = SUBSTR(STMT,IOPT+8,1); /*   GET OPT CHANNEL    */
            ICHAN = INDEX(HEXSTR,SAVE_CH)-1; /*   COMPUTE OPT CHANNEL*/
            I = (ICHAN*256)+(IUNIT*16)+IADDR+1;
            DO J = 0 TO ICOUNT-1;            /*   SET UCB ENTRIES    */
              DEVICE(I+J) = SAVE_UNIT;       /*   FOR EACH DEVICE    */
              OPTCH(I+J)  = '*';             /*   INDICATE OPTCHAN   */
            END;
          END;
     END;
1IF INDEX(STMT,'CONSOLE') > 0 THEN           /*  IF IT'S A CONSOLE   */
     DO;                                     /*    THEN              */
       I = INDEX(STMT,'=') + 1;              /*    FIND OUT WHAT KIND*/
       J = INDEX(STMT,'MCONS');              /*      'MASTER CONSOLE'*/
       K = INDEX(STMT,'SECONS');             /*      'SECONDARY'     */
       L = INDEX(STMT,'O-');                 /*      'OUTPUT ONLY'   */
       IF L > 0 THEN I = I + 2;              /*                      */
       SAVE_ADDR = SUBSTR(STMT,I,3);         /*    AND PUT IT IN THE */
       IF J > 0 THEN SAVE_UNIT = 'MCON';     /*    UCB TABLE         */
       IF K > 0 THEN SAVE_UNIT = 'SCON';     /*                      */
       ICHAN = INDEX(HEXSTR,SAVE_CH)-1;      /*  COMPUTE CHANNEL     */
       IUNIT = INDEX(HEXSTR,SAVE_CU)-1;      /*  COMPUTE CU          */
       IADDR = INDEX(HEXSTR,SAVE_UA)-1;      /*  COMPUTE UNIT        */
       I = (ICHAN*256)+(IUNIT*16)+IADDR+1;   /*  COMPUTE UCB OFFSET  */
       DEVICE(I) = SAVE_UNIT;                /*  AND SAVE DEVICE TYPE*/
     END;
0STMT = '';                                  /*  RESET STATEMENT     */
 GO TO LOOP;                                 /*  AND GET NEXT ONE    */
0EOF:
0  DO ICHAN = 0 TO 15;                       /*  DO FOR 15 CHANNELS  */
      SIGNAL ENDPAGE(SYSPRINT);              /*  TOP OF PAGE         */
      PUT SKIP(2) EDIT('CHANNEL:',ICHAN,     /*  PRINT CHANNEL INFO  */
                       '(',HEX(ICHAN),'00-',HEX(ICHAN),'FF)')
                  (COL(1),A(9),X(1),F(2),X(1),(2)A(1),A(3),A(1),A(3));
      PUT SKIP(1);
      DO IUNIT = 0 TO 15;                    /*  DO FOR 15 CU'S      */
         DO IADDR = 0 TO 15;                 /*   AND 15 UNITS ADDRS */
            IOFFSET = (ICHAN*256)+(IUNIT*16)+IADDR+1;
            LDEV(IADDR+1) = DEVICE(IOFFSET); /*   LOAD DEVICE TYPE   */
            LOPT(IADDR+1) = OPTCH(IOFFSET);  /*   INDICATE IF OPTCHAN*/
            LBAR1(IADDR+1) = '×';            /*                      */
            L3ADDR(IADDR+1) = ADDRESS(IOFFSET); /*LOAD DEVICE ADDRESS*/
         END;                                /*                      */
         PUT EDIT(L1)(SKIP(2),A(120));       /*   PRINT THE LINES    */
         PUT EDIT(REPEAT('_',112))(SKIP(0),COL(4),A(113));
         PUT EDIT(L3)(SKIP(1),A(120));
      END;
   END;
0END TEC039;
