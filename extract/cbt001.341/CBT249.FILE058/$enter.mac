         MACRO
&NAME    $ENTER &BASE=R3,&CSECT=YES,&SAVE=,&RENT=,&SP=1,&SPM=YES,      +
               &CHAIN=YES
         MNOTE *,'       $ENTER    VERSION 003 05/07/75  04/29/76  GPW'
.**********************************************************************
.*                                                                    *
.* $ENTER                                                             *
.*                                                                    *
.* FUNCTION       PROVIDE ENTRY CODING TO ESTABLISH BASE REGISTERS,   *
.*                ALLOCATE AND CHAIN SAVE AREAS, SET PROGRAM MASK,    *
.*                AND OBTAIN WORK AREA FOR RE-ENTRANT PROGRAMS.       *
.*                                                                    *
.* DESCRIPTION    THE MACRO WILL GENERATE CODE TO ESTABLISH ONE OR    *
.*                MORE BASE REGISTERS.  IT IS ASSUMED THAT STANDARD   *
.*                IBM LINKAGE CONVENTIONS HAVE BEEN FOLLOWED AND THAT *
.*                REGISTER 15 CONTAINS THE ADDRESS OF THE ENTRY       *
.*                POINT.  USER SPECIFIED OR DEFAULT BASE REGISTERS    *
.*                ARE INITIALIZED.  THE FIRST BASE REGISTER CONTAINS  *
.*                THE ADDRESS OF THE ENTRY POINT, AND SUCCESSIVE BASE *
.*                REGISTER ADDRESSES ARE INCREMENTED BY 4096.  THE    *
.*                DEFAULT BASE REGISTER IS REGISTER 3.  IF REGISTER 2 *
.*                IS SPECIFIED AS A BASE REGISTER, IT WILL BE         *
.*                ALLOWED, BUT A WARNING MESSAGE WILL BE DISPLAYED.   *
.*                REGISTERS 0, 1, 13, 14, AND 15 MAY NOT BE           *
.*                SPECIFIED AS BASE REGISTERS.  ALL REGISTER          *
.*                SPECIFICATIONS MUST BE MADE AS MNEMONICS (EG,       *
.*                REGISTER 3 IS R3).                                  *
.*                                                                    *
.*                IDENTIFICATION CONSTANTS SPECIFYING THE DATE AND    *
.*                TIME OF ASSEMBLY ARE CONSTRUCTED IN THE ENTRY       *
.*                CODING.  THESE VALUES ARE DISPLAYED IN DUMPS AND    *
.*                MAY BE USED TO VERIFY THAT THE PROPER VERSION OF    *
.*                THE ROUTINE HAS BEEN USED.                          *
.*                                                                    *
.*                ALL BITS OF THE PROGRAM MASK ARE SET.  IBM          *
.*                TRANSFERS CONTROL TO THE USER PROGRAM WITH ALL      *
.*                PROGRAM MASK BITS OFF.  IF SPM=NO IS SPECIFIED,     *
.*                THE PROGRAM MASK WILL BE UNALTERED.                 *
.*                                                                    *
.*                THE USER MAY SPECIFY THE NAME OF A WORK AREA OF 18  *
.*                FULLWORDS TO BE USED AS A SAVE AREA.  IF A USER     *
.*                AREA IS NOT SUPPLIED, AN 18 FULLWORD AREA IS        *
.*                ALLOCATED AND INITIALIZED TO ZERO.  THE ADDRESS OF  *
.*                THE SAVE AREA IS LOADED INTO REGISTER 13 AND IT IS  *
.*                CHAINED TO THE SAVE AREA OF THE CALLING PROGRAM.    *
.*                                                                    *
.*                THE USER MAY SPECIFY THAT THE MACRO IS NOT TO       *
.*                OBTAIN A SAVE AREA OR CHAIN SAVE AREAS BY           *
.*                SPECIFYING CHAIN=NO.  THE USER IS THEN              *
.*                RESPONSIBLE FOR SAVE AREA CHAINING.                 *
.*                                                                    *
.*                REGISTER EQUIVALENCES (R0  EQU  0, ETC.) ARE        *
.*                GENERATED FOR THE FIRST USAGE OF THE MACRO.         *
.*                                                                    *
.*                A CSECT DEFINITION WILL BE GENERATED UNLESS         *
.*                CSECT=NO IS SPECIFIED.  IF CSECT=NO IS SPECIFIED,   *
.*                AN ENTRY STATEMENT WILL BE GENERATED.               *
.*                                                                    *
.*                RE-ENTRANT CODING IS SUPPORTED.  FOR RE-ENTRANT     *
.*                CODING, THE USER MUST SPECIFY THE LENGTH OF A       *
.*                WORK AREA.  THE WORK AREA IS OBTAINED FROM SUBPOOL  *
.*                1 UNLESS OTHERWISE SPECIFIED.  THE FIRST 18 WORDS   *
.*                OF THE WORK AREA ARE USED FOR THE SAVE AREA.        *
.*                                                                    *
.* SYNTAX         NAME     $ENTER    BASE=(REG1,...,REGN)             *
.*                                   CSECT=NO                         *
.*                                   SAVE=SYM                         *
.*                                   RENT=LEN                         *
.*                                   SP=NUMBER                        *
.*                                   SPM=NO                           *
.*                                   CHAIN=NO                         *
.*                                                                    *
.*                NAME   - A SYMBOLIC TAG ASSIGNED TO THE FIRST       *
.*                         INSTRUCTION GENERATED.                     *
.*                                                                    *
.*                BASE   - THE REGISTERS TO BE USED AS BASE           *
.*                         REGISTERS.  THE DEFAULT IS R3.  THE FIRST  *
.*                         REGISTER SPECIFIED WILL CONTAIN THE        *
.*                         ADDRESS OF THE ENTRY POINT, AND SUCCEEDING *
.*                         BASE VALUES WILL BE INCREMENTED BY 4096.   *
.*                         REGISTERS 0, 1, 13, 14, AND 15 MAY NOT BE  *
.*                         SPECIFIED AS BASE REGISTERS.  REGISTERS    *
.*                         MUST BE SPECIFIED IN MNEMONIC FORM (EG,    *
.*                         R3 FOR REGISTER 3).                        *
.*                                                                    *
.*                CSECT  - CSECT=NO SPECIFIES THAT CODING FOR AN      *
.*                         ENTRY POINT RATHER THAN A CSECT IS TO BE   *
.*                         GENERATED.                                 *
.*                                                                    *
.*                SAVE   - SPECIFIES THE NAME OF A USER DEFINED 18    *
.*                         WORD SAVE AREA TO BE USED INSTEAD OF       *
.*                         GENERATING AN IN-LINE SAVE AREA.  IF RENT  *
.*                         IS SPECIFIED, SAVE MUST SPECIFY THE NAME   *
.*                         ASSIGNED TO THE FIRST 18 WORDS IN THE      *
.*                         WORK AREA.                                 *
.*                                                                    *
.*                RENT   - SPECIFIES THAT RE-ENTRANT CODE IS TO BE    *
.*                         GENERATED.  LEN IS THE LENGTH OF A WORK    *
.*                         AREA TO BE OBTAINED BY A GETMAIN.          *
.*                                                                    *
.*                SP     - SPECIFIES THE SUBPOOL FROM WHICH THE WORK  *
.*                         AREA FOR RE-ENTRANT CODING IS TO BE        *
.*                         OBTAINED.  DEFAULT IS SUBPOOL 1.           *
.*                                                                    *
.*                SPM    - SPM=NO SPECIFIES THAT THE PROGRAM MASK IS  *
.*                         NO TO BE ALTERED.                          *
.*                                                                    *
.*                CHAIN  - CHAIN=NO SPECIFIES THAT SAVE AREA ARE NOT  *
.*                         TO BE CHAINED.  THIS OPTION IS INTENDED    *
.*                         FOR USE ONLY BY HIGH ACTIVITY RE-ENTRANT   *
.*                         MODULES WHERE THE OVERHEAD OF              *
.*                         GETMAIN/FREEMAIN IS TO BE AVOIDED.         *
.*                                                                    *
.* ERRORS         THE NAME FIELD MUST BE SPECIFIED.  IF IT IS NOT, A  *
.*                GENERATED NAME, $ENTNNNN WILL BE GENERATED AND A    *
.*                SEVERITY 8 MNOTE IS GENERATED.  IF NO CODE WERE     *
.*                GENERATED AND NO BASE REGISTER DEFINED, THE ERROR   *
.*                LISTING WOULD BE LARGE.  TO REDUCE THE SIZE OF THE  *
.*                ERROR LISTING AND ALLOW OTHER ERRORS TO BE FOUND,   *
.*                THE MACRO WILL EXPAND.                              *
.*                                                                    *
.*                                                                    *
.* EXAMPLE        EX1      $ENTER                                     *
.*                                                                    *
.*                EX2      $ENTER CSECT=NO                            *
.*                                                                    *
.*                EX3      $ENTER BASE=(R3,R4,R5)                     *
.*                                                                    *
.*                EX4      $ENTER BASE=R12,RENT=DSECTLEN,SAVE=SAVEAREA*
.*                                                                    *
.* GLOBAL SYMBOLS                                                     *
.*                                                                    *
.*                NAME     TYPE  USE                                  *
.*                                                                    *
.*                &ENCOUNT   A   SET TO 1 AFTER REGISTER EQUIVALENCES *
.*                               GENERATED TO PREVENT EQUIVALENCES    *
.*                               FROM BEING GENERATED FOR LATER USES. *
.*                                                                    *
.* MACROS USED                                                        *
.*                                                                    *
.*                GETMAIN                                             *
.*                                                                    *
.* UPDATE SUMMARY                                                     *
.*                                                                    *
.*      VERSION   DATE     CHANGE                                     *
.*                                                                    *
.*        003   04/29/76   CHAIN KEYWORD ADDED                        *
.*                                                                    *
.*                                                                    *
.**********************************************************************
.*
         GBLA  &ENCOUNT
.*
         LCLA  &PARMNO,&REGNO
         LCLC  &REG,&CHAR,&LAST,&USING,&TEMP,&ID,&FIRST
.*
&ID      SETC  '&NAME'
         AIF   ('&NAME' NE '').CKCSECT
&ID      SETC  '$ENT&SYSNDX'
         MNOTE 8,'NAME OPERAND REQUIRED, NOT SPECIFIED. &ID WILL BE USE+
               D.'
.CKCSECT AIF   ('&CSECT' NE 'NO').CSECT
         AIF   ('&SYSECT' NE '').CKEQU
         MNOTE 8,'ENTRY POINT SPECIFIED, BUT NO CSECT DEFINED'
.CSECT   ANOP
         SPACE
&ID      CSECT
.CKEQU   AIF   (&ENCOUNT EQ 1).SKIPEQU
         SPACE
***********************************************************************
*                                                                     *
*                      REGISTER EQUIVALENCES                          *
*                                                                     *
***********************************************************************
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
.*
&ENCOUNT SETA  1
         SPACE
.SKIPEQU AIF   ('&CSECT' NE 'NO').CSECT2
         AIF   ('&SYSECT' EQ '').CSECT2
.*-------ENTRY POINT
         ENTRY &ID
         USING &ID,R15                  DEFINE BASE REGISTER
&ID      B     14(R15)                  BRANCH AROUND ID
         DC    AL1(8)                   IDENTIFIER LENGTH
         DC    CL8'&ID'                 ENTRY POINT NAME
         DC    CL1' '                   SPACER
         AGO   .STREGS
.*-------CSECT
.CSECT2  USING &ID,R15                  DEFINE BASE REGISTER
         B     28(0,R15)                BRANCH AROUND ID
         DC    AL1(23)                  IDENTIFIER LENGTH
         DC    CL8'&ID'                 CSECT NAME
         DC    CL1' '                   SPACER
         DC    CL8'&SYSDATE'            DATE OF ASSEMBLY
         DC    CL1' '                   SPACER
         DC    CL5'&SYSTIME'            TIME OF ASSEMBLY
.STREGS  STM   R14,R12,12(R13)          SAVE REGISTERS
&PARMNO  SETA  1                        INITIALIZE COUNTER
.CKBASE  ANOP
&REG     SETC  '&BASE(&PARMNO)'(1,3)
         AIF   ('&REG'(1,1) NE 'R').SKIPBAS
&TEMP    SETC  '&REG'(2,2)
&REGNO   SETA  &TEMP
         AIF   (&REGNO LT 2).BADBASE
         AIF   (&REGNO GT 12).BADBASE
         AIF   (&REGNO NE 2).SETBASE
         MNOTE 0,'*** WARNING - R2 IS A BASE REGISTER. TRANSLATE AND TE+
               ST INSTRUCTION WILL DESTROY CONTENTS.'
.SETBASE ANOP
         AIF   ('&FIRST' NE '').SETBAS2
         LR    &REG,R15                 LOAD BASE ADDRESS
&FIRST   SETC  '&REG'                   SAVE REGISTER
         AGO   .SETLAST
.SETBAS2 LA    &REG,4095(&LAST)         ADD 4095 TO LAST BASE
         LA    &REG,1(&REG)             ADD 1 MORE
.SETLAST ANOP
&LAST    SETC  '&REG'
&USING   SETC  '&USING.,&REG'
         AGO   .NEXTBAS
.SKIPBAS MNOTE 8,'*&REG* IS AN INVALID REGISTER FORM, IGNORED'
         AGO   .NEXTBAS
.BADBASE MNOTE 8,'*&REG* IS AN INVALID BASE REGISTER, IGNORED'
.NEXTBAS ANOP
&PARMNO  SETA  &PARMNO+1
         AIF   (&PARMNO LE N'&BASE).CKBASE
         DROP  R15                      DISCONTINUE R15 BASE
         USING &ID.&USING               DEFINE BASE REGISTERS
.*-------SEE IF PROGRAM MASK IS TO BE SET
         AIF   ('&SPM' EQ 'NO').NOSPM
         LA    R15,15                   LOAD PGM MASK SETTING
         SLA   R15,24                   SHIFT TO BITS 4-7
         SPM   R15                      SET PGM MASK AND COND
.NOSPM   AIF   ('&CHAIN' EQ 'NO').DONE
         AIF   ('&RENT' NE '').GETMAIN
         LR    R15,R13                  SAVE OLD SAVEAREA ADDR
         AIF   ('&SAVE' NE '').LOADSAV
         CNOP  0,4                      FULL WORD ALIGNMENT
         BAL   R13,*+76                 LOAD SAVEAREA ADDR
         DC    18F'0'                   SAVE AREA
         AGO   .CHAIN
.LOADSAV LA    R13,&SAVE                LOAD NEW SAVEAREA ADDR
         AGO   .CHAIN
.GETMAIN MNOTE *,' GETMAIN R,LV=&RENT,SP=&SP'
         GETMAIN R,LV=&RENT,SP=&SP      GET STORAGE
* END OF GETMAIN - $ENTER
         LR    R15,R13                  SAVE OLD SAVEAREA ADDR
         LR    R13,R1                   LOAD STORAGE ADDRESS
         USING &SAVE,R13                DEFINE BASE REGISTER
         L     R1,24(R15)               RESTORE REG 1 CONTENTS
.CHAIN   ST    R15,4(R13)               CHAIN SAVE AREAS
         ST    R13,8(R15)
.DONE    ANOP
         MEND
