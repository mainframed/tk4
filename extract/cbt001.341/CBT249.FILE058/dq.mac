         TITLE 'DISCLAIMER - INSTALLATION INSTRUCTIONS'
***********************************************************************
*                                                                     *
*     THIS PROGRAM, DEVELOPED AT FPL OR SUPPLIED BY OTHER USERS       *
*     ON A NON-RESTRICTIVE BASIS, IS OF GENERAL INTEREST              *
*     SUBMITTED FOR UNRESTRICTED DISTRIBUTION.  THIS PROGRAM          *
*     HAS MET A BASIC SET OF PROGRAMMING AND DOCUMENTATION            *
*     STANDARDS, BUT MAY NOT HAVE BEEN PROGRAM TESTED IN ANY          *
*     FORMAL FASHION BY FPL.  THE USER IS EXPECTED TO MAKE THE        *
*     FINAL EVALUATION AS TO THE USEFULLNESS IN HIS OWN               *
*     ENVIRONMENT.                                                    *
*                                                                     *
*     FPL MAKES NO WARRANTY, EXPRESSED OR IMPLIED, INCLUDING, BUT     *
*     NOT LIMITED TO, THE IMPLIED WARRANTIES OR MERCHANTABILITY AND   *
*     FITNESS FOR A PARTICULAR PUTPOSE AS TO THE DOCUMENTATION,       *
*     FUNCTION, OR PERFORMANCE OF THESE PROGRAMS.                     *
*                                                                     *
*     ACCEPTANCE AND USE OF THIS PROGRAM CONSTITUTES A RELEASE        *
*     FROM LIABILITY OF FPL FOR ANY PROBLEMS USE OF THE PROGRAM       *
*     MAY CAUSE AT THE USER'S INSTALLATION.                           *
*                                                                     *
*     USERS ARE INVITED TO SUBMIT SUGGESTIONS OR ERROR DOCUMENTATION  *
*     TO FPL, HOWEVER, NO PROMISE CAN BE MADE THAT SUCH SUGGESTIONS   *
*     WILL BE IMPLEMENTED OR ERRORS CORRECTED.  SUBMIT COMMENTS TO:   *
*              COORDINATOR OF TECHNICAL SYSTEMS                       *
*              COMPUTER OPERATIONS DEPARTMENT                         *
*              FLORIDA POWER & LIGHT COMPANY - GENERAL OFFICE         *
*              P. O. BOX  529100                                      *
*              MIAMI, FLORIDA  33152                                  *
*                                                                     *
*     THIS PROGRAM IS MADE AVAILABLE BY FPL WITHOUT CHARGE OR         *
*     CONSIDERATION.  RECIPIENTS ARE FREE TO MAKE THIS PROGRAM        *
*     AVAILABLE TO OTHERS IN LIKE MANNER.  IT MAY NOT BE SOLD.        *
*                                                                     *
* INSTALLATION INSTRUCTIONS                                           *
*                                                                     *
*     THIS CODE IS DEPENDENT UPON THE CONTROL BLOCK STRUCTURE OF      *
*     JES2.  IT HAS BEEN TESTED UNDER RELEASES 4.0 AND 4.1.  IT       *
*     MAY OR MAY NOT WORK WITH OTHER VERSIONS OF JES2.  IT MUST       *
*     BE ASSEMBLED WITH THE JES2 SOURCE DATA SET, SYS1.HASPSRC,       *
*     AS A MACRO LIBRARY.  CERTAIN VALUES IN JES2PARM MUST BE         *
*     SPECIFIED AS VALUES OF SYMBOLIC PARAMETERS, AND SOME VALUES     *
*     MUST BE OBTAINED FROM AN IEHDASDR DUMP OF THE CHECKPOINT        *
*     RECORD.  SEE DATA DEPENDENT SECTION.                            *
*                                                                     *
*     THIS MODULE IS REFRESHABLE AND MAY BE INCLUDED IN THE LINK      *
*     PACK AREA.  IT MAY ALSO BE EXECUTED IN THE BACKGROUND UNDER     *
*     TSO.                                                            *
*                                                                     *
***********************************************************************
SS0811   TITLE 'DISPLAY JOBS AWAITING EXECUTION OR OUPUT'
***********************************************************************
*                                                                     *
* SS0811       ALIAS DQ                                               *
*                                                                     *
* FUNCTION     DISPLAY STATUS OF JOBS IN JES2 JOB QUEUES              *
*                                                                     *
* DESCRIPTION  THE JES2 CHECKPOINT RECORD IS READ FROM                *
*              SYS1.HASPCKPT AND THE JOB QUEUE ENTRIES ARE            *
*              PROCESSED.  FOR EACH SELECTED JOB, THE JOBNAME,        *
*              JES2 JOB NUMBER, CLASS, QUEUE POSITION, AND            *
*              NUMBER OF JOBS HELD UP TO AND INCLUDING THE            *
*              DISPLAYED JOB IS DISPLAYED.  AN INDICATOR IS           *
*              DISPLAYED IF THE JOB IS HELD OR IN EXECUTION.          *
*                                                                     *
*              JOBS WHICH MATCH THE USERID (PLUS ADDITIONAL           *
*              CHARACTERS) ARE DISPLAYED.  THE USER MAY OVERRIDE      *
*              THIS DEFAULT AND ENTER A NEW STRING AS AN OPERAND.     *
*              AN * MAY BE SPECIFIED TO SELECT ALL JOBS.              *
*                                                                     *
* RESTRICTIONS AND LIMITATIONS                                        *
*                                                                     *
*              FOR JOBS AWAITING OUTPUT, ONLY "OUT" IS SHOWN.         *
*              THE OUTPUT CLASS IS NOT INDICATED IN THE CHECKPOINT    *
*              RECORD, NOR IS A HELD DATA SET INDICATED.              *
*                                                                     *
*              SINCE THE JES2 CHECKPOINT RECORD WHICH RESIDES         *
*              ON DISK MUST BE ALLOCATED AND READ, EXCESSIVE          *
*              USE OF THIS COMMAND CAN CAUSE PERFORMANCE DEGRADATION  *
*              FOR BOTH TSO AND JES2.  A REASONABLE TIME SHOULD       *
*              BE ALLOWED TO ELAPSE BETWEEN COMMAND EXECUTIONS.       *
*                                                                     *
* SYNTAX       DQ   JOBIDENT/*                                        *
*                                                                     *
*              DEFAULTS - JOBIDENT DEFAULTS TO USERID                 *
*              REQUIRED - NONE                                        *
*                                                                     *
* OPERANDS     JOBID - AN IDENTIFIER WHICH IS COMPARED TO EACH        *
*                      JOBNAME IN THE JES2 QUEUES.  WHEN A MATCH      *
*                      IS FOUND, THE JOB IS DISPLAYED.  IF A          *
*                      JOBNAME IS LONGER THAN THE JOBID, BUT          *
*                      CONTAINS THE JOBID IN THE INITIAL CHARACTERS,  *
*                      IT IS CONSIDERED A MATCH.                      *
*                                                                     *
*                      IF AN * IS ENTERED, ALL JOBS ARE DISPLAYED.    *
*                                                                     *
* SUBCOMMANDS  DQ HAS NO SUBCOMMANDS.                                 *
*                                                                     *
* ERROR CONDITIONS                                                    *
*                                                                     *
*              ABEND USER 0001 - AN ERROR OCCURRED READING THE JES2   *
*                      CHECKPOINT RECORD.  RETRY THE COMMAND.  IF     *
*                      THE ERROR PERSISTS, GET A DUMP AND CONTACT     *
*                      TECHNICAL SYSTEMS.                             *
*                                                                     *
* EXAMPLE      SHOW ALL JOBS FOR LOGGED ON USER (WEST).               *
*                                                                     *
*                  DQ                                                 *
*                                                                     *
*                  JOBNAME  JES# CLASS  POS(HELD) FLAG                *
*                  WESTBR14 0104   A              EXEC                *
*                  WEST0811 0110   A   0005(0001) HELD                *
*                  WESTPDS  0111   A   0006(0001)                     *
*                  WESTTAPE 0095   B   0005(0005) HELD                *
*                  WESTPRNT 0066  OUT  0034(0000)                     *
*                                                                     *
* FPL MACROS USED                                                     *
*                                                                     *
*              $ENTER      ENTRY CODING                               *
*              $RTRN       EXIT CODING                                *
*              #TSOBLKS    CONSTRUCT TSO CONTROL BLOCKS               *
*              #TSOMSG     CONSTRUCT TSO MESSAGE IN PUTLINE FORMAT    *
*                                                                     *
* IBM MACROS USED                                                     *
*                                                                     *
*              LINK        INVOKE A TSO SERVICE ROUTINE               *
*              OPEN        OPEN A DATA SET                            *
*              EXCP        READ CHECKPOINT RECORD                     *
*              WAIT        WAIT FOR COMPLETION OF EXCP                *
*              CLOSE       CLOSE DATA SET                             *
*              DCB         DEFINE DATA CONTROL BLOCK                  *
*              GETMAIN     OBTAIN WORKING STORAGE                     *
*              PUTLINE     DISPLAY MESSAGE                            *
*              IKJPARM     BEGIN PARSE PARAMETER CONTROL LIST         *
*              IKJIDENT    DESCRIBE POSITIONAL PARAMETER              *
*              IKJENDP     TERMINATE PARAMETER CONTROL LIST           *
*              IKJDAP08    DESCRIBE DYNAMIC ALLOCATION CONTROL BLOCK  *
*              IKJDAP18    DESCRIBE DYNAMIC ALLOCATION CONTROL BLOCK  *
*                                                                     *
* JES2 MACROS USED   (SYS1.HASPSRC REQUIRED AS A MACLIB)              *
*                                                                     *
*              $JQE        DESCRIBE JOB QUEUE ENTRY                   *
*                                                                     *
* TSO SERVICE ROUTINES USED                                           *
*                                                                     *
*              PARSE       PROCESS COMMAND PARAMETERS                 *
*              IKJDAIR     DYNAMIC ALLOCATION INTERFACE ROUTINE       *
*              PUTLINE     DISPLAY MESSAGES AT TSO TERMINAL           *
*                                                                     *
*                                                GORDON P. WEST 09/77 *
***********************************************************************
         TITLE 'UPDATE LOG'
***********************************************************************
*                                                                     *
* UPDATE LOG                                                          *
*                                                                     *
* 02/22/78     ADDED CODE TO PROCESS SETUP AND STARTED TASK QUEUES    *
*                                                                     *
* 06/12/78     CHANGED CSECT NAME TO CONFORM TO FPL STANDARDS         *
*              CHANGED DEPENDENT DATA FOR JES2 4.1                    *
*                                                                     *
***********************************************************************
         TITLE 'LINKAGE EDITOR CONTROL RECORDS'
***********************************************************************
*                                                                     *
*        THE FOLLOWING PUNCH STATEMENT(S) CAUSE LINKAGE EDITOR        *
*        CONTROL STATEMENTS TO BE INCLUDED IN THE OBJECT OUTPUT.      *
*                                                                     *
*        IF MESSAGE IEW0731 IS GENERATED (ALIAS NAME MATCHES MEMBER   *
*        NAME) IT MAY BE IGNORED'                                     *
*                                                                     *
***********************************************************************
*
         PUNCH '  ALIAS DQ       &SYSDATE  &SYSTIME     IGNORE IEW0731'
         TITLE 'DEPENDENT DATA'
         LCLC  &CHKPT
         LCLA  &BUFSIZE,&NUMDA,&NUMTGV
&BUFSIZE SETA  4008                    FROM JES2PARM
&NUMDA   SETA  2                       FROM JES2PARM
&NUMTGV  SETA  2081                    FROM JES2PARM
&CHKPT   SETC  'SPOOL1'                FROM JES2PARM
         SPACE
CLASSA   EQU   X'3C'                   OFFSET TO CLASS A POINTER
*                                        FROM IEHDASDR DUMP OF CHECKPT
OUTPUT   EQU   X'28'                   OFFSET TO OUTPUT QUEUE POINTER
*                                        FROM IEHDASDR DUMP OF CHECKPT
SETUP    EQU   X'34'                   OFFSET TO SETUP QUEUE POINTER
*                                        FROM IEHDASDR DUMP OF CHECKPT
STARTED  EQU   X'38'                   OFFSET TO STARTED TASK QUEUE PTR
*                                        FROM IEHDASDR DUMP OF CHECKPT
QUESIZE  EQU   X'2EB4'                 LENGTH OF JOB QUEUE RECORD
*                                        FROM IEHDASDR DUMP OF CHECKPT
CVTPTR   EQU   16                      POINTER TO CVT
CVTPCNVT EQU   28                      FROM CVT MACRO
CVTASVT  EQU   556                     FROM CVT MACRO
ASVTENTY EQU   528                     FROM IHAASVT MACRO
ASCBCSCB EQU   56                      FROM IHAASCB MACRO
CHTRKID  EQU   28                      FROM IEECHAIN MACRO
CHKEY    EQU   8                       FROM IEECHAIN MACRO
CHSTEP   EQU   64                      FROM IEECHAIN MACRO
CHPROCSN EQU   32                      FROM IEECHAIN MACRO
CHJOBID  EQU   X'02'                   FROM IEECHAIN MACRO
CHPTR    EQU   0                       FROM IEECHAIN MACRO
         TITLE 'ENTRY LINKAGE'
S0811    $ENTER BASE=R12,                                              +
               SAVE=SAVEAREA,                                          +
               RENT=DSECTLEN
         TITLE 'CONSTRUCT TSO CONTROL BLOCKS'
***********************************************************************
*                                                                     *
*        CONSTRUCT TSO CONTROL BLOCKS                                 *
*                                                                     *
***********************************************************************
         #TSOBLKS DSECT,ECB=DQECB,                                     +
               CPPL=(R11,R1),                                          +
               IOPL=(R10,DQIOPL,DQPTPB),                               +
               DAPL=(R9,DQDAPL),                                       +
               PPL=(R8,DQPPL,DQPCL,DQANS)
         TITLE 'INITIALIZE DATA AREAS'
***********************************************************************
*                                                                     *
*        INITIALIZE DATA AREAS                                        *
*                                                                     *
***********************************************************************
         MVC   JOBIDENT,BLANKS         INITIALIZE IDENTIFICATION STRING
         MVC   CLASS,BLANKS            INITIALIZE JOB CLASS
         MVI   FLAGS,X'00'             INITIALIZE FLAGS
         MVC   MSG(MSGLEN),MODELMSG    COPY MESSAGE BLOCKS
         MVC   OPEN(IOLEN),MODELIO     COPY I/O BLOCKS
         XC    SPOOLECB,SPOOLECB       CLEAR ECB
         LA    R1,SPOOLECB             LOAD ECB ADDRESS
         STCM  R1,B'0111',IOBECBPT     STORE IN IOB
         LA    R1,CHKPT                LOAD DCB ADDRESS
         ST    R1,IOBDCBPT             STORE IN IOB
         LA    R1,IOBSEEK+3            LOAD SEEK ADDRESS POINTER
         STCM  R1,B'0111',READJOBQ+1   STORE IN CHANNEL PROGRAM
         LA    R1,READJOBQ             LOAD CHANNEL PROGRAM ADDRESS
         STCM  R1,B'0111',READJOBQ+9   STORE IN TIC
         LA    R1,SPOOLIOB             LOAD IOB ADDRESS
         STCM  R1,B'0111',CHKPT+28     STORE IN DCB
         TITLE 'PARSE COMMAND OPERANDS'
***********************************************************************
*                                                                     *
*        PARSE COMMAND OPERANDS                                       *
*                                                                     *
***********************************************************************
         LA    R1,PPL                  LOAD PPL ADDRESS
         LINK  EP=IKJPARS              PARSE COMMAND OPERANDS
         LTR   R15,R15                 TEST RETURN CODE
         BNZ   USERID                  IF ERROR, USE USERID
         L     R8,DQANS                LOAD ANSWER AREA ADDRESS
         USING DQPDL,R8                PDE ADDRESSABILITY
         TM    JOBID+6,X'80'           TEST FOR OPERAND NOT PRESENT
         BZ    USERID                  USE USERID
         L     R1,JOBID                LOAD ADDRESS OF PARAMETER
         CLI   0(R1),C'*'              TEST FOR ALL JOBS
         BNE   MOVEID
         OI    FLAGS,$ALLJOBS          SET ALL JOBS INDICATOR
         B     RELEASE
MOVEID   LH    R8,JOBID+4              LOAD LENGTH OF JOBID
         DROP  R8
         BCTR  R8,0                    REDUCE BY 1
         EX    R8,MOVENAME             COPY JOBID
         B     RELEASE
USERID   L     R1,CPPLPSCB             LOAD ADDRESS OF PSCB (USERID)
         SR    R8,R8
         IC    R8,7(R1)                LOAD USERID LENGTH
         BCTR  R8,0                    REDUCE BY 1
         MVC   JOBIDENT(7),0(R1)       COPY USERID TO JOBIDENT
RELEASE  IKJRLSA DQANS                 RELEASE PARSE STORAGE
*--------SET UP DAPB'S
         LA    R1,DQPDSN               LOAD DSNAME FIELD ADDRESS
         ST    R1,DQDSN                SAVE IT
         LA    R7,DA18DAPB             LOAD FREE DAPB ADDRESS
         USING DAPB18,R7               DEFINE BASE REGISTER
         XC    DAPB18(DA18LEN),DAPB18  ZERO OUT CONTROL BLOCK
         MVC   DA18CD,=X'0018'         MOVE IN BLOCK CODE
         XC    DA18PDSN,DA18PDSN       ZERO DSNAME ADDRESS POINTER
         MVC   DA18DDN,=CL8'HASPCKPT'  MOVE IN DDNAME
         MVC   DA18MNM,=CL8' '         BLANK OUT MEMBER NAME
         MVC   DA18SCLS,=CL2' '        BLANK OUT SYSOUT CLASS
         MVI   DA18DPS2,DA18KEEP       DISP=KEEP
         MVI   DA18CTL,DA18PERM
         MVC   DA18JBNM,=CL8' '        BLANK OUT MEMBER NAME
         LA    R7,DA08DAPB             LOAD ALLOCATE DAPB ADDRESS
         USING DAPB08,R7               DEFINE BASE REGISTER
         XC    DAPB08(DA08LEN),DAPB08  ZERO OUT CONTROL BLOCK
         MVC   DA08CD,=X'0008'         MOVE IN BLOCK CODE
         MVC   DA08PDSN,DQDSN          MOVE IN DSNAME ADDRESS
         MVC   DA08DDN,=CL8'HASPCKPT'  MOVE IN DDNAME
         MVC   DA08UNIT,=CL8' '        BLANK OUT UNIT NAME
         MVC   DA08SER,=CL8'&CHKPT'    MOVE IN VOLUME SERIAL
         MVC   DA08MNM,=CL8' '         BLANK OUT MEMBER NAME
         MVC   DA08PSWD,=CL8' '        BLANK OUT PASSWORD
         MVI   DA08DSP1,DA08SHR        DISP=(SHR,KEEP,KEEP)
         MVI   DA08DPS2,DA08KEEP
         MVI   DA08DPS3,DA08KEP
         MVC   DA08ALN,=CL8' '         BLANK OUT ATTRIBUTE LIST NAME
         DROP  R7
         TITLE 'ALLOCATE THE DATA SET'
***********************************************************************
*                                                                     *
*              ALLOCATE THE DATA SET                                  *
*                                                                     *
***********************************************************************
*--------SET UP ALLOCATE DAPB
SETUPDDN LA    R7,DA08DAPB              LOAD ALLOCATE DAPB ADDRESS
         USING DAPB08,R7                DEFINE BASE REGISTER
         ST    R7,DAPLDAPB              STORE DAPB ADDRESS IN DAPL
         LA    R1,DAPL                  LOAD DAPL ADDRESS
         LINK  EP=IKJDAIR               LINK TO DAIR
         LTR   R15,R15                  TEST RETURN CODE
         BZ    OPENCKPT
         C     R15,=F'20'               TEST FOR FILE IN USE
         BNE   ERRDAIR
         LA    R1,DA18DAPB              LOAD FREE DAPB ADDRESS
         ST    R1,DAPLDAPB              STORE IN DAPL
         LA    R1,DAPL                  LOAD DAPL ADDRESS
         LINK  EP=IKJDAIR               FREE THE FILE
         LTR   R15,R15                  TEST RETURN CODE
         BNZ   ERRDAIR
         LA    R1,DA08DAPB              LOAD ALLOCATE DAPB ADDRESS
         ST    R1,DAPLDAPB              STORE IN DAPL
         LA    R1,DAPL                  LOAD DAPL ADDRESS
         LINK  EP=IKJDAIR               FREE THE FILE
         LTR   R15,R15                  TEST RETURN CODE
         BNZ   ERRDAIR
         TITLE 'OPEN FILES'
***********************************************************************
*                                                                     *
*        OPEN CHECKPOINT                                              *
*                                                                     *
***********************************************************************
OPENCKPT OPEN  (CHKPT,(INPUT)),MF=(E,OPEN)  OPEN SYS1.HASPCKPT
*        TM    CHKPT+48,X'10'          TEST FOR SUCCESSFUL OPEN
*        BZ
         L     R0,=X'00000100'         LOAD TTRN OF CHECKPOINT RECORD
         L     R1,CHKPT+44             LOAD DEB ADDRESS
         LA    R2,QLOCREC1             LOAD ADDRESS FOR MBBCCHHR
         L     R14,16                  LOAD CVT ADDRESS
         L     R15,CVTPCNVT(R14)       LOAD CONVERSION ROUTINE ADDRESS
         LA    R3,SAVE913              LOAD SAVE AREA ADDRESS
         STM   R9,R13,0(R3)            SAVE RESISTERS
         BALR  R14,R15                 GO TO CONVERSION ROUTINE
         LM    R9,R13,0(R3)            RESTORE REGISTERS
         TITLE 'OBTAIN STORAGE'
***********************************************************************
*                                                                     *
*        OBTAIN WORKING STORAGE                                       *
*                                                                     *
***********************************************************************
         GETMAIN R,LV=16384            GET 16K FOR CHECKPOINT RECORD
         STCM  R1,B'0111',RJQDATA+1    STORE ADDRESS IN CHANNEL PGM
         ST    R1,QCURRENT             INITIALIZE JQE POINTER
         TITLE 'READ CHECKPOINT RECORD'
***********************************************************************
*                                                                     *
*        READ CHECKPOINT RECORD                                       *
*                                                                     *
***********************************************************************
         MVC   IOBSEEK(8),QLOCREC1     JOB Q DISK ADDR INTO IOB
         LA    R1,CHKPT                DCB PTR FOR CHKPT DATA SET
         ST    R1,IOBDCBPT             STORE IN IOB
         LA    R2,READJOBQ             CCW FOR READ
         STCM  R2,B'0111',IOBSTART     STORE IN IOB
         SPACE 2
         EXCP  SPOOLIOB                START READ
         SPACE 2
         WAIT  ECB=SPOOLECB            WAIT FOR COMPLETE
         SPACE 2
         CLI   SPOOLECB,X'7F'          TEST FOR ERROR
         BE    *+8                     GO ON IF IO IS GOOD
         BAL   R14,ABEND               IF BAD GO ABEND
         CLOSE (CHKPT),MF=(E,OPEN)     CLOSE CHECKPOINT
*--------FREE THE DATA SET
FREE     LA    R7,DA18DAPB             LOAD FREE DAPB ADDRESS
         ST    R7,DAPLDAPB             STORE DAPB ADDRESS IN DAPL
         LA    R1,DAPL                 LOAD DAPL ADDRESS
         LINK  EP=IKJDAIR              LINK TO DAIR
         LTR   R15,R15                 TEST RETURN CODE
         BNZ   ERRDAIR
         SPACE 2
***********************************************************************
*                                                                     *
*        FIND A JOB ON THE INPUT QUEUE                                *
*                                                                     *
***********************************************************************
         LA    R2,36                   LOAD QUEUE COUNTER
         L     R3,QCURRENT             LOAD ADDRESS OF CHECKPT REC
         LA    R3,CLASSA(R3)           LOAD CLASS A ANCHOR ADDRESS
SETHDR   LA    R1,CLASSES-1(R2)        LOAD ADDRESS OF CLASS CHAR
         MVC   CLASS+2(1),0(R1)        COPY TO HEADER
         NC    0(2,R3),0(R3)           TEST FOR 0 ANCHOR
         BZ    NEXTQ
         BAL   R4,DISPLAY              GO TO DISPLAY SUBROUTINE
NEXTQ    LA    R3,2(R3)                INCREMENT TO NEXT CLASS ANCHOR
         BCT   R2,SETHDR               DECREMENT COUNTER
         TITLE 'PROCESS SPECIAL QUEUES'
***********************************************************************
*                                                                     *
*        PROCESS SPECIAL QUEUES                                       *
*                                                                     *
*        SETUP QUEUE                                                  *
*        STARTED TASK QUEUE                                           *
*        OUTPUT QUEUE                                                 *
*                                                                     *
***********************************************************************
         SPACE 1
         L     R3,QCURRENT             LOAD ADDRESS OF CHKPT REC
         LA    R3,SETUP(R3)            LOAD SETUP ANCHOR ADDRESS
         MVC   CLASS,=C'SETUP'         RESET HEADER
         NC    0(2,R3),0(R3)           TEST FOR NO CHAIN
         BZ    STARTASK
         BAL   R4,DISPLAY
         SPACE 1
STARTASK L     R3,QCURRENT             LOAD ADDRESS OF CHKPT REC
         LA    R3,STARTED(R3)          LOAD STARTED TASK ANCHOR ADDR
         MVC   CLASS,=C' STC '         RESET HEADER
         NC    0(2,R3),0(R3)           TEST FOR NO CHAIN
         BZ    OUTPUTQ
         BAL   R4,DISPLAY
         SPACE 1
OUTPUTQ  L     R3,QCURRENT             LOAD ADDRESS OF CHKPT REC
         LA    R3,OUTPUT(R3)           LOAD OUTPUT ANCHOR ADDRESS
         MVC   CLASS,=C' OUT '         RESET HEADER
         NC    0(2,R3),0(R3)           TEST FOR NO CHAIN
         BZ    TESTJOBS
         BAL   R4,DISPLAY
         TITLE 'RETURN LINKAGE'
***********************************************************************
*                                                                     *
*        RETURN LINKAGE                                               *
*                                                                     *
***********************************************************************
         SPACE 1
TESTJOBS TM    FLAGS,$FOUND            SEE IF ANY JOBS FOUND
         BO    RETURN
         PUTLINE OUTPUT=(NOJOBS,,,DATA),MF=(E,IOPL)
RETURN   $RTRN
         TITLE 'PROCESS A QUEUE'
***********************************************************************
*                                                                     *
*        SUBROUTINE TO PROCESS A QUEUE CHAIN AND DISPLAY              *
*        DATA FOR JOBS WHICH MEET SELECTION CRITERIA.                 *
*                                                                     *
***********************************************************************
DISPLAY  SR    R5,R5                   RESET COUNTER
         SR    R6,R6                   RESET HELD COUNTER
         LH    R7,0(R3)                LOAD FIRST POINTER
CALCDISP SLA   R7,2                    MULT BY 4
         A     R7,QCURRENT             ADD ADDRESS OF CHKPT REC
         USING JQE,R7
         CLC   JQEJNAME,=CL8'INIT'     SKIP INITIATORS
         BE    NEXTJQE
         TM    JQEFLAGS,QUEBUSY        TEST FOR EXECUTING
         BNZ   NOTHELD
         LA    R5,1(R5)                COUNT JOB
         TM    JQEFLAGS,QUEHOLDA+QUEHOLD1+QUEHOLD2   TEST FOR HOLD
         BZ    NOTHELD
         LA    R6,1(R6)                INCREMENT HELD COUNT
NOTHELD  TM    FLAGS,$ALLJOBS          TEST FOR ALL JOBS
         BO    THISJOB
         EX    R8,COMPNAME             TEST JOB NAME
         BNE   NEXTJQE
THISJOB  MVC   JOBNAME,JQEJNAME        COPY JOB NAME
         LH    R1,JQEJOBNO             LOAD JOB NUMBER
         CVD   R1,WORK                 CONVERT TO DECIMAL
         OI    WORK+7,X'0F'            SET SIGN
         UNPK  JOBNO,WORK+5(3)         UNPACK
         MVC   JCLASS,CLASS            COPY JOB CLASS
         TM    JQEFLAGS,QUEBUSY        TEST FOR EXECUTING
         BNZ   EXEC
         CVD   R5,WORK                 CONVERT POSITION
         OI    WORK+7,X'0F'
         UNPK  POS,WORK+5(3)
         CVD   R6,WORK                 CONVERT HELD COUNT
         OI    WORK+7,X'0F'
         UNPK  #HELD,WORK+5(3)
         MVI   #HELD-1,C'('
         MVI   #HELD+4,C')'
         TM    JQEFLAGS,QUEHOLDA+QUEHOLD1+QUEHOLD2   TEST FOR HOLD
         BZ    NOTHELD2
         MVC   HELD,=C'HELD'           INDICATE HELD
         B     NOTHELD2
*--------GET STEPNAME AND PROCSTEPNAME FOR EXECUTING JOBS
EXEC     MVC   HELD,=C'EXEC'           INDICATE EXECUTING
         L     R15,CVTPTR              LOAD CVT ADDRESS
         L     R15,CVTASVT(R15)        LOAD ASVT ADDRESS
         LA    R15,ASVTENTY(R15)       LOAD FIRST ASVT ENTRY ADDRESS
TESTAVAL TM    0(R15),X'80'            SEE IF IN USE
         BO    NEXTASVT                SKIP UNUSED ENTRIES
         L     R1,0(R15)               LOAD ASCB ADDRESS
         L     R1,ASCBCSCB(R1)         LOAD CSCB ADDRESS
         LTR   R1,R1                   WATCH OUT FOR NO CSCB
         BZ    NEXTASVT
TESTJOBN CLC   JOBNAME,CHKEY(R1)       COMPARE JOB NAMES
         BNE   NEXTCSCB
         MVC   STEPNAME,CHSTEP(R1)     COPY STEP NAME
         MVC   PROCSTEP,CHPROCSN(R1)   COPY PROCEDURE STEP NAME
*        TM    CHTRKID(R1),CHJOBID     TEST FOR A JOB
         B     NOTHELD2
NEXTCSCB L     R1,CHPTR(R1)            GO TO NEXT CSCB
         LTR   R1,R1                   TEST FOR END OF CHAIN
         BNZ   TESTJOBN
NEXTASVT LA    R15,4(R15)              LOAD NEXT ASVT ENTRY ADDRESS
         CLC   =X'80000000',0(R15)     TEST FOR LAST ENTRY
         BNE   TESTAVAL
*--------DISPLAY DATA FOR JOB
NOTHELD2 TM    FLAGS,$FOUND            TEST FOR HEADER
         BO    DISPLINE
         PUTLINE OUTPUT=(HEADER,,,DATA),MF=(E,IOPL)
DISPLINE PUTLINE OUTPUT=(MSG,,,DATA),MF=(E,IOPL)  DISPLAY LINE
         OI    FLAGS,$FOUND            INDICATE A JOB FOUND
         MVC   JOBNAME(54),BLANKS
NEXTJQE  LH    R7,JQECHAIN             LOAD NEXT POINTER
         LTR   R7,R7                   TEST FOR ZERO
         BNZ   CALCDISP
         BR    R4                      RETURN
         SPACE 2
COMPNAME CLC   JOBIDENT(0),JQEJNAME    << EXECUTED INSTRUCTION >>
         DROP  R7
         TITLE 'ERROR IN DYNAMIC ALLOCATION'
***********************************************************************
*                                                                     *
*        ERROR IN DYNAMIC ALLOCATION                                  *
*                                                                     *
***********************************************************************
         SPACE 2
ERRDAIR  ST    R15,DAIRRC              STORE RETURN CODE
         LA    R1,DAPL                 LOAD DAPL ADDRESS
         ST    R1,DFDAPLP              STORE IN DAIRFAIL PARM LIST
         LA    R1,DAIRRC               LOAD RETURN CODE ADDRES
         ST    R1,DFRCP                STORE IN DAIRFAIL PARM LIST
         LA    R1,MSGWTRAD             LOAD MESSAGE WRITER ADDRESS
         ST    R1,DFJEFF02             STORE IN DAIRFAIL PARM LIST
         XC    MSGWTRAD,MSGWTRAD       ZERO MESSAGE WRITER ADDRESS
         LA    R1,1                    SET UP CALLER ID
         STH   R1,ID
         LA    R1,ID                   LOAD ID ADDRESS
         ST    R1,DFIDP                STORE IN DAIRFAIL PARM LIST
         LA    R1,DAIRFAIL             LOAD DAIRFAIL PARM LIST ADDR
         LINK  EP=IKJEFF18             LINK TO DAIRFAIL ROUTINE
         B     RETURN
         SPACE 3
ABEND    ABEND 1,DUMP                  EXCP FAILED
         TITLE 'CONSTANT DATA'
***********************************************************************
*                                                                     *
*        CONSTANT DATA                                                *
*                                                                     *
***********************************************************************
         LTORG
MOVENAME MVC   JOBIDENT(0),0(R1)       << EXECUTED INSTRUCTION >>
CLASSES  DC    C'9876543210ZYXWVUTSRQPONMLKJIHGFEDCBA'
NOJOBS   #TSOMSG 'NO JOBS FOUND'
HEADER #TSOMSG 'JOBNAME  JES# CLASS  POS(HELD) FLAG  STEPNAME PROCSTEP'
*               JJJJJJJJ ####  XXX  ####(####) XXXX  SSSSSSSS PPPPPPPP
BLANKS   DC    CL54' '
DQPDSN   DC    H'13',CL44'SYS1.HASPCKPT'
MODELMSG #TSOMSG ' ',LENGTH=54
         PUTLINE MF=L
MSGLEN   EQU   *-MODELMSG
MODELIO  DS    0D                      DOUBLE WORD ALIGNMENT
         SPACE 2
         OPEN  (,),MF=L
         SPACE 2
***********************************************************************
*                                                                     *
*        IOB                                                          *
*                                                                     *
***********************************************************************
         DC    F'0'
         DC    X'42000000'
         DC    X'00'
         DC    AL3(*-*)
         DC    X'00'
         DC    7X'00'
         DC    X'00'
         DC    3X'00'
         DC    A(*-*)              DCB POINTER
         DC    X'00',3X'00'
         DC    H'0'
         DC    H'0'
         DC    2F'0'
         SPACE 2
***********************************************************************
*                                                                     *
*        CHANNEL PGM TO READ CHECKPOINT RECORD                        *
*                                                                     *
***********************************************************************
         CCW   X'31',*-*,X'60',5       SEACH ID EQUAL
         CCW   X'08',*-*,0,1           TIC *-8
         CCW   X'06',0,X'40',QUESIZE   READ DATA
         CCW   X'03',0,X'20',1         NOP
***********************************************************************
*                                                                     *
*        DCB'S                                                        *
*                                                                     *
***********************************************************************
         DCB   DDNAME=HASPCKPT,                                        +
               MACRF=E,                                                +
               DSORG=PS,                                               +
               IOBAD=*-*,                                              +
               DEVD=DA
         EJECT
IOLEN    EQU   *-MODELIO
         TITLE 'JES2 CONROL BLOCKS'
***********************************************************************
*                                                                     *
*        JES2 CONTROL BLOCKS                                          *
*                                                                     *
***********************************************************************
         $JQE  DOC=YES
         TITLE 'TSO CONTROL BLOCK DSECTS'
***********************************************************************
*                                                                     *
*              TSO CONTROL BLOCK DSECTS                               *
*                                                                     *
***********************************************************************
         SPACE 3
DQPCL    IKJPARM DSECT=DQPDL
JOBID    IKJIDENT 'JOB IDENTIFIER',                                    +
               ASTERISK,               REMOVE TO PREVENT ALL JOBS OPT  +
               MAXLNTH=8,                                              +
               FIRST=ALPHA,                                            +
               OTHER=ALPHANUM
         IKJENDP
         SPACE 2
         IKJDAP18
DA18LEN  EQU   *-DAPB18                 DAPB LENGTH
         SPACE
         IKJDAP08
DA08LEN  EQU   *-DAPB08                 DAPB LENGTH
         TITLE 'DATA AREAS'
***********************************************************************
*                                                                     *
*        DATA AREAS                                                   *
*                                                                     *
***********************************************************************
DQDSECT  DSECT
SAVEAREA DS    18F                     SAVE AREA
SAVE913  DS    5F                      SAVE AREA
JOBIDENT DC    CL8' '
WORK     DS    D
QLOCREC1 DS    XL8                     CCHHR OF CHECKPOINT DATA SET
FLAGS    DC    X'00'
$FOUND   EQU   X'40'
$ALLJOBS EQU   X'20'
CLASS    DC    CL5' '
MSG      #TSOMSG ' ',LENGTH=54
         ORG   MSG
         DS    H,H                     MESSAGE HEADER
JOBNAME  DC    CL8' '
         DC    C' '
JOBNO    DC    CL4' '
         DC    C' '
JCLASS   DC    CL5' '
         DC    C' '
POS      DC    CL4' '
         DC    C' '                    (
#HELD    DC    CL4' '
         DC    C'  '                   )
HELD     DC    CL4' '
         DC    CL2' '
STEPNAME DC    CL8' '
         DC    C' '
PROCSTEP DC    CL8' '
         ORG
DQPTPB   PUTLINE MF=L
DQANS    DS    A
DQECB    DC    F'0'
DQPPL    DS    0F
         ORG   *+PPLLEN
DQIOPL   DS    0F
         ORG   *+IOPLLEN
DQDSN    DS    A
         SPACE
DAIRRC   DS    F                        DAIRFAIL PARAMETERS
MSGWTRAD DS    A
ID       DS    H
         SPACE
         DS    0F                       FULLWORD ALIGNMENT
DAIRFAIL EQU   *
DFDAPLP  DS    A                        ADDRESS OF DAPL
DFRCP    DS    A                        ADDRESS OF RETURN CODE
DFJEFF02 DS    A                        ADDRESS OF MESSAGE WRITER
DFIDP    DS    A                        ADDRESS OF IDENTIFIER
DFCPPLP  DS    A                        ADDRESS OF CPPL
         SPACE
DQDAPL   DS    0F                       FULLWORD ALIGNMENT
         ORG   *+DAPLLEN
         SPACE
DA18DAPB DS    0F                       FULLWORD ALIGNMENT
         ORG   *+DA18LEN
         SPACE
DA08DAPB DS    0F                      FULLWORD ALIGNMENT
         ORG   *+DA08LEN
         SPACE
QCURRENT DS    A
         SPACE 3
         EJECT
         SPACE 2
         DS    0D                      DOUBLE WORD ALIGNMENT
OPEN     OPEN  (,),MF=L
         SPACE 2
***********************************************************************
*                                                                     *
*        IOB                                                          *
*                                                                     *
***********************************************************************
SPOOLECB DC    F'0'
SPOOLIOB DC    X'42000000'
IOBECBCC DC    X'00'
IOBECBPT DC    AL3(*-*)
IOBFLAG3 DC    X'00'
IOBCSW   DC    7X'00'
IOBSIOCC DC    X'00'
IOBSTART DC    3X'00'
IOBDCBPT DC    A(*-*)              DCB POINTER
IOBRESTR DC    X'00',3X'00'
         DC    H'0'
         DC    H'0'
IOBSEEK  DC    2F'0'
         SPACE 2
***********************************************************************
*                                                                     *
*        CHANNEL PGM TO READ CHECKPOINT RECORD                        *
*                                                                     *
***********************************************************************
READJOBQ CCW   X'31',*-*,X'60',5       SEACH ID EQUAL
         CCW   X'08',*-*,0,1           TIC *-8
RJQDATA  CCW   X'06',0,X'40',QUESIZE   READ DATA
         CCW   X'03',0,X'20',1         NOP
         SPACE 2
         EJECT
***********************************************************************
*                                                                     *
*        DCB'S                                                        *
*                                                                     *
***********************************************************************
CHKPT    DCB   DDNAME=HASPCKPT,                                        +
               MACRF=E,                                                +
               DSORG=PS,                                               +
               IOBAD=*-*,                                              +
               DEVD=DA
DSECTLEN EQU   *-DQDSECT
         END
