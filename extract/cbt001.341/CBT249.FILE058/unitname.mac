UNITNAME TITLE 'DISPLAY DEVICES DEFINED BY UNIT NAMES'
***********************************************************************
*                                                                     *
* UNITNAME                                                            *
*                                                                     *
* FUNCTION     LIST DEVICES DEFINED BY UNIT NAMES.                    *
*                                                                     *
* DESCRIPTION  THE DEVICE NAME TABLE (DEVNAMET), DEVICE MASK          *
*              TABLE (DEVMASKT), UCB LOOKUP TABLE, AND UCB'S          *
*              ARE USED TO CONSTRUCT A LIST OF EACH UNIT NAME         *
*              (GENERIC AND ESOTERIC) AND THE DEVICE ADDRESSES        *
*              AND TYPES DEFINED BY EACH NAME.                        *
*                                                                     *
*              THE DEVICE NAME TABLE CONSISTS OF 12 BYTE ENTRIES      *
*              WHICH SPECIFY THE 8 BYTE NAME OF THE GROUP AND         *
*              THE 4 BYTE DEVICE TYPE CODE.                           *
*                                                                     *
*              DEVICE TYPE CODES MAY BE FOUND IN SPL: DATA MANAGMENT. *
*              FOR ESOTERIC NAMES, THE DEVICE TYPE CODE IS -          *
*                 BYTES 1-2  A COUNT WHICH INDICATES THE POSITION     *
*                            OF THE UNITNAME MACRO IN STAGE 1 OF      *
*                            SYSGEN.                                  *
*                 BYTES 3-4  A CODE WHICH INDICATES THE DEVICE CLASS  *
*                            (DISK, UNIT RECORD, ETC.).               *
*                                                                     *
*              THE DEVICE MASK TABLE DEFINES WHICH DEVICES ARE        *
*              DEFINED BY EACH CLASS.  EACH ENTRY CONSISTS OF A       *
*              8 BYTE HEADER CONSISTING OF A COUNT OF THE NUMBER      *
*              OF DEVICES IN THE CLASS AND THE DEVICE TYPE CODE       *
*              OF THE CLASS.  THE REMAINING BYTES HAVE BIT SETTINGS   *
*              WHICH CORRESPOND TO ENTRIES IN THE UCB LOOKUP TABLE.   *
*              IF THE BIT IS ON, THE DEVICE IS DEFINED IN THE GROUP.  *
*              IF THE BIT IS NOT ON, THE DEVICE IS NOT DEFINED.       *
*                                                                     *
*              THE UCB LOOKUP TABLE IS A TABLE OF 2 BYTE ENTRIES      *
*              FOR EACH DEVICE IN THE SYSTEM (PLUS SOME ADDITIONAL    *
*              UNUSED ENTRIES SET TO 0000).  EACH ENTRY CONTAINS      *
*              THE ADDRESS OF THE UCB WHICH DEFINES THE DEVICE.       *
*              THE END OF THE TABLE IS DEFINED BY AN ENTRY OF         *
*              X'FFFF').                                              *
*                                                                     *
* JOB CONTROL LANGUAGE                                                *
*                                                                     *
*              //UNIT   EXEC  PGM=UNITNAME                            *
*              //SYSPRINT DD  SYSOUT=A                                *
*              //SYSUDUMP DD  SYSOUT=A                                *
*                                                                     *
* CONDIDERATIONS                                                      *
*                                                                     *
*              A TABLE GENERATED AT SYSGEN (IEFDEVPT) IS REQUIRED     *
*              BY THIS PROGRAM TO DETERMINE THE SIZE OF AN ENTRY. A   *
*                //OBJPDS01 DD  DISP=SHR,DSNAME=SYS1.OBJPDS01         *
*              STATEMENT MUST BE INCLUDED IN THE LINK STEP JCL.       *
*              THIS TABLE MUST CORRESPOND TO THE SYSTEM AND           *
*              CONFIGURATION UNDER WHICH THE PROGRAM IS EXECUTED.     *
*                                                                     *
*                                                GORDON P. WEST 05/77 *
***********************************************************************
*
*        PUNCH LINKAGE EDITOR CONTROL STATEMENTS
*
         PUNCH '  ENTRY   UNITNAME'
         PUNCH '  INCLUDE OBJPDS01(IEFDEVPT)'
*
         TITLE 'ENTRY LINKAGE'
UNITNAME $ENTER BASE=R12
         TITLE 'OPEN FILES AND LOAD TABLES'
         OPEN  (SYSPRINT,OUTPUT)
         L     R1,=V(IEFDEVPT)         LOAD TABLE ADDRESS
         LH    R8,2(R1)                LOAD NUMBER OF UCB'S
         LA    R8,31(R8)               ADD 31
         SRA   R8,5                    DIVIDE BY 32
         SLA   R8,2                    MULTIPLY BY 4
         LOAD  EP=DEVMASKT             LOAD MASK TABLE
         LR    R10,R0                  COPY ADDRESS
         LH    R9,0(R10)               LOAD NUMBER OF ENTRIES
         LA    R10,4(R10)              BUMP PAST HEADER
         LOAD  EP=DEVNAMET             LOAD NAME TABLE
         LR    R11,R0                  COPY ADDRESS
         LR    R6,R11                  SAVE TABLE ADDRESS
         LA    R11,4(R11)              BUMP PAST HEADER
         L     R7,16                   LOAD CVT ADDRESS
         L     R7,40(R7)               LOAD UCB LOOKUP TABLE ADDRESS
         TITLE 'PROCESS NEXT UNIT NAME'
NEXTUNIT CLC   4(4,R10),8(R11)         COMPARE DEVICE TYPE CODES
         BNE   ERROR
         PUT   SYSPRINT,HEADER         SKIP TO NEW PAGE AND PRINT HDR
         MVI   LINE,C'0'               DOUBLE SPACE
         MVC   UNITNAM,0(R11)          COPY UNITNAME
         UNPK  WORKAREA(9),4(5,R10)    CONVERT DEVTYPE TO EBCDIC
         TR    WORKAREA,TRTABLE
         MVC   DEVTYPE,WORKAREA        COPY INTO PRINT LINE
         LR    R5,R7                   COPY UCB LOOKUP TABLE ADDRESS
         LA    R10,8(R10)              BUMP PAST HEADER
         LR    R2,R8                   COPY # BYTES PER ENTRY
LOADMASK LA    R3,B'10000000'          LOAD BIT MASK
         TITLE 'TEST BITS AND DISPLAY UNITS'
TESTBIT  EX    R3,TESTMASK             SEE IF BIT IS ON
         BZ    NEXTUCB
         SR    R15,R15
         ICM   R15,B'0011',0(R5)       LOAD UCB ADDRESS
         MVC   UNITADDR,13(R15)        COPY UNIT ADDRESS
         UNPK  WORKAREA(9),16(5,R15)   UNPACK UCBTYPE
         TR    WORKAREA,TRTABLE        TRANSLATE TO EBCDIC
         MVC   DEVTYPE2,WORKAREA       MOVE INTO PRINT LINE
         LR    R1,R6                   LOAD TABLE ADDRESS
         L     R0,0(R1)                LOAD NUMBER OF ENTRIES
         LA    R1,4(R1)                BUMP TO FIRST ENTRY
COMPDEV  CLC   18(2,R15),10(R1)        COMPARE DEVTYPES
         BE    COPYDEV
         LA    R1,12(R1)               INCREMENT TO NEXT DEV
         BCT   R0,COMPDEV
         LA    R1,=C'????????'         UNIDENTIFIED DEVICE
COPYDEV  MVC   DEVTP,0(R1)             COPY DEVICE NAME
         PUT   SYSPRINT,LINE           PRINT LINE
         MVC   LINE,BLANKS             BLANK LINE
NEXTUCB  LA    R5,2(R5)                BUMP TO NEXT UCB ENTRY
         SRA   R3,1                    SHIFT MASK RIGHT 1 BIT
         BNZ   TESTBIT                 LOOP IF NOT DONE WITH BYTE
         LA    R10,1(R10)              INCREMENT POINTER
         BCT   R2,LOADMASK
         TITLE 'INCREMENT TO NEXT NAME'
ENDUCB   LA    R11,12(R11)             POINT TO NEXT NAME TABLE ENTRY
         BCT   R9,NEXTUNIT
         TITLE 'DELETE TABLES AND RETURN'
TERM     DELETE EP=DEVMASKT
         DELETE EP=DEVNAMET
         CLOSE SYSPRINT
         $RTRN RC=0
         TITLE 'ERROR - DEVICE TYPES DO NOT MATCH'
ERROR    PUT   SYSPRINT,ERRORMSG
         B     TERM
         TITLE 'DATA AREAS'
         LTORG
TESTMASK TM    0(R10),X'00'
TRTABLE  EQU   *-X'F0'
         DC    C'0123456789ABCDEF'
BLANKS   DC    CL133' '
HEADER   DC    CL133'1UNITNAME            DEVTYPE             ADR      +
                DEVTYPE   DEVICE'
LINE     DC    CL133' '
UNITNAM  EQU   LINE+1,8
DEVTYPE  EQU   LINE+21,8
UNITADDR EQU   LINE+41,3
DEVTYPE2 EQU   LINE+51,8
DEVTP    EQU   LINE+61,8
WORKAREA DS    2D
ERRORMSG DC    CL133'0*** ERROR *** DEVICE TYPES DO NOT MATCH.'
SYSPRINT DCB   DDNAME=SYSPRINT,                                        +
               MACRF=PM,                                               +
               DSORG=PS,                                               +
               RECFM=FBA,                                              +
               LRECL=133,                                              +
               BLKSIZE=133
         END
