         TITLE 'DISCLAIMER - INSTALLATION INSTRUCTIONS'
***********************************************************************
*                                                                     *
*     THIS PROGRAM, PROVIDED BY FPL, IS OF GENERAL INTEREST           *
*     SUBMITTED FOR UNRESTRICTED DISTRIBUTION.  THIS PROGRAM          *
*     HAS MET A BASIC SET OF PROGRAMMING AND DOCUMENTATION            *
*     STANDARDS, BUT MAY NOT HAVE BEEN PROGRAM TESTED IN ANY          *
*     FORMAL FASHION BY FPL.  THE USER IS EXPECTED TO MAKE THE        *
*     FINAL EVALUATION AS TO THE USEFULLNESS IN HIS OWN               *
*     ENVIRONMENT.                                                    *
*                                                                     *
*     FPL MAKES NO WARRANTY, EXPRESSED OR IMPLIED, INCLUDING, BUT     *
*     NOT LIMITED TO, THE IMPLIED WARRANTIES OR MERCHANTABILITY AND   *
*     FITNESS FOR A PARTICULAR PUTPOSE AS TO THE DOCUMENTATION,       *
*     FUNCTION, OR PERFORMANCE OF THESE PROGRAMS.                     *
*                                                                     *
*     ACCEPTANCE AND USE OF THIS PROGRAM CONSTITUTES A RELEASE        *
*     FROM LIABILITY OF FPL FOR ANY PROBLEMS USE OF THE PROGRAM       *
*     MAY CAUSE AT THE USER'S INSTALLATION.                           *
*                                                                     *
*     USERS ARE INVITED TO SUBMIT SUGGESTIONS OR ERROR DOCUMENTATION  *
*     TO FPL, HOWEVER, NO PROMISE CAN BE MADE THAT SUCH SUGGESTIONS   *
*     WILL BE IMPLEMENTED OR ERRORS CORRECTED.  SUBMIT COMMENTS TO:   *
*              COORDINATOR OF TECHNICAL SYSTEMS                       *
*              SYSTEMS & PROGRAMMING DEPARTMENT                       *
*              FLORIDA POWER & LIGHT COMPANY - GENERAL OFFICE         *
*              P. O. BOX  529100                                      *
*              MIAMI, FLORIDA  33152                                  *
*                                                                     *
*     THIS PROGRAM IS MADE AVAILABLE BY FPL WITHOUT CHARGE OR         *
*     CONSIDERATION.  RECIPIENTS ARE FREE TO MAKE THIS PROGRAM        *
*     AVAILABLE TO OTHERS IN LIKE MANNER.  IT MAY NOT BE SOLD.        *
*                                                                     *
* INSTALLATION INSTRUCTIONS                                           *
*                                                                     *
*     THIS MODULE MAY BE ASSEMBLED AND LINKED INTO A LIBRARY IN THE   *
*     LINK LIST OR SPECIFIED AS A STEPLIB IN THE EXECUTION JCL.       *
*                                                                     *
*     BEFORE ASSEMBLING THE MODULE, INSURE THAT ALL THE REQUIRED      *
*     MACROS ARE AVAILABLE.  SOME MACROS FROM SYS1.AMODGEN MAY BE     *
*     REQUIRED.  THE $ENTER MACRO USES SYSTEM VARIABLE SYMBOLS        *
*     &SYSDATE AND &SYSTIME.  THESE SYMBOLS ARE NOT SUPPORTED BY ALL  *
*     ASSEMBLERS.  IF THE ASSEMBLER TO BE USED DOES NOT SUPPORT THESE *
*     SYMBOLS, THE $ENTER MACRO MUST BE MODIFIED.                     *
*                                                                     *
***********************************************************************
SS0108   TITLE 'PDS MEMBER NAME INSERTION UTILITY'
***********************************************************************
*                                                                     *
* SS0108                                                              *
*                                                                     *
* FUNCTION     SS0108 MAY BE USED TO GENERATE CARD IMAGE RECORDS      *
*              CONTAINING THE NAMES OF MEMBERS OF A PDS.              *
*                                                                     *
* DESCRIPTION  THE USER SUPPLIES A MASTER CARD WHICH CONTAINS         *
*              SPECIAL CHARACTERS WHICH ARE TO BE REPLACED BY         *
*              THE MEMBER NAMES.  THE DEFAULT SPECIAL CHARACTER       *
*              IS @, BUT THE PARM FIELD MAY BE USED TO DESIGNATE      *
*              A DIFFERENT SPECIAL CHARACTER.                         *
*                                                                     *
*              THE USER MAY SELECT ALL MEMBERS IN THE PDS, ALL        *
*              MEMBERS WHICH START WITH A SPECIFIED CHARACTER         *
*              STRING (PREFIX), OR ALL MEMBERS WHICH DO NOT START     *
*              WITH A SPECIFIED PREFIX.                               *
*                                                                     *
*              IF THE SPECIAL CHARACTER APPEARS MORE THAN ONCE IN     *
*              A RECORD, THE SAME MEMBER NAME IS SUBSTITUTED EACH     *
*              TIME.  IF NO SPECIAL CHARACTERS APPEAR IN THE RECORD,  *
*              IT IS DUPLICATED N TIMES WHERE N IS THE NUMBER OF      *
*              MEMBERS SELECTED.                                      *
*                                                                     *
*              THE CARDS PRODUCED MAY BE PUNCHED AS BLOCKS OF ALL     *
*              LIKE CARDS TOGETHER, OR MAY BE INTERLEAVED.            *
*                                                                     *
*              THE OUTPUT RECORDS MAY BE SEQUENCED WITH A STARTING    *
*              VALUE OF 10 AND INCREMENT OF 10, THE IDENTIFICATION    *
*              FIELD CAN BE SET TO BLANKS, OR THE CAN BE COPIED       *
*              FROM THE INPUT MASTER.                                 *
*                                                                     *
*              COLUMN 72 IS ALWAYS COPIED FROM THE MASTER RECORD AS   *
*              IT MAY BE SIGNIFICANT AS A CONTINUATION COLUMN.        *
*                                                                     *
* ATTRIBUTES   SS0108 IS WRITTEN IN ASSEMBLY LANGUAGE.                *
*                                                                     *
* ENVIRONMENT  IBM 370/360                                            *
*              OS/VS  OS/MVT                                          *
*                                                                     *
* INPUT        INPUT CONSISTS OF:                                     *
*                                                                     *
*              1.  A PARTITIONED DATA SET,                            *
*                                                                     *
*              2.  A SEQUENTIAL DATA SET CONTAINING MASTER RECORDS.   *
*                                                                     *
* OUTPUT       OUTPUT CONSISTS OF:                                    *
*                                                                     *
*              1.  A SEQUENTIAL DATA SET CONTAINING THE OUTPUT        *
*                  CARD IMAGE RECORDS,                                *
*                                                                     *
*              2.  A MESSAGE DATA SET CONTAINING A LIST OF THE NAMES  *
*                  OF THE MEMBERS OF THE PDS, A LISTING OF THE INPUT  *
*                  MASTER RECORDS, AND ERROR MESSAGES.                *
*                                                                     *
* JOB CONTROL LANGUAGE                                                *
*                                                                     *
*              EXEC        SPECIFIES THE PROGRAM NAME AND SUPPLIES    *
*                          PARM INFORMATION FOR THE PROGRAM.          *
*                                                                     *
*              SYSPRINT DD DEFINES THE MESSAGE DATA SET.              *
*                                                                     *
*              SYSUT1 DD   DEFINES THE INPUT PARTITIONED DATA SET.    *
*                                                                     *
*              SYSUT2 DD   DEFINES THE OUTPUT CARD IMAGE DATA SET.    *
*                                                                     *
*              SYSIN  DD   CONTAINS THE MASTER RECORDS.               *
*                                                                     *
* PARM INFORMATION                                                    *
*                                                                     *
*              THE PARM FIELD OF THE EXEC STATEMENT MAY BE USED TO    *
*              SPECIFY THE INSERTION CHARACTER, SPECIFY THAT OUTPUT   *
*              RECORDS ARE TO BE INTERLEAVED, AND TO INCREASE THE     *
*              SIZE OF INTERNAL PROGRAM TABLES.                       *
*                                                                     *
*              VALID PARAMETER VALUES ARE:                            *
*                                                                     *
*              CHAR=X          SPECIFIES A SINGLE CHARACTER USED IN   *
*                              THE MASTER RECORD TO DESIGNATE WHERE   *
*                              MEMBER NAMES ARE TO BE INSERTED.  THE  *
*                              DEFAULT IS @.  ANY CHARACTER MAY BE    *
*                              SPECIFIED EXCEPT BLANK OR COMMA.       *
*                                                                     *
*              INTERLEAVE=N    SPECIFIES THAT THE OUTPUT RECORDS ARE  *
*                              TO BE INTERLEAVED.  N SPECIFIES THE    *
*                              NUMBER OF CARDS TO BE INPUT AND        *
*                              DETERMINES THE SIZE OF AN INTERNAL     *
*                              TABLE.  IF ALL OUTPUT RECORDS ARE TO   *
*                              BE INTERLEAVED, N MUST BE EQUAL TO OR  *
*                              GREATER THAN THE NUMBER OF INPUT       *
*                              RECORDS.  IF INTERLEAVE=5, AND 7       *
*                              MASTER RECORDS ARE PROVIDED, THE FIRST *
*                              5 WILL BE INTERLEAVED TOGETHER, THEN   *
*                              THE LAST 2 WILL BE INTERLEAVED.        *
*                                                                     *
*              POWER=N         SPECIFIES THAT THE SIZE OF THE MEMBER  *
*                              NAME TABLE IS TO BE INCREASED BY THE   *
*                              FACTOR N.  THE DEFAULT TABLE SIZE IS   *
*                              2K.  THE NUMBER OF MEMBER NAMES THAT   *
*                              WILL FIT IN THE TABLE DEPENDS ON THE   *
*                              LENGTHS OF THE MEMBER NAMES.           *
*                                                                     *
*              IDFIELD=BLANKS  SPECIFIES THE CONTENTS OF THE ID       *
*                      NUMBER  FIELD (COL 73-80) OF THE OUTPUT        *
*                      SAME    RECORDS.  BLANKS SPECIFIES THAT THE    *
*                              ID FIELD IS TO CONTAIN BLANKS.         *
*                              NUMBER SPECIFIES THAT THE RECORDS ARE  *
*                              TO BE SEQUENCED WITH A STARTING VALUE  *
*                              OF 10 AND INCREMENT OF 10.  THIS IS    *
*                              THE DEFAULT.  SAME SPECIFIES THAT THE  *
*                              ID FIELD OF THE OUTPUT RECORDS         *
*                              ARE TO BE COPIED FROM THE INPUT MASTER *
*                              RECORDS.                               *
*                                                                     *
*              SELECT=PREFIX   SPECIFIES THAT ONLY MEMBERS WHOSE      *
*                              NAME BEGINS WITH THE PREFIX SPECIFIED  *
*                              ARE TO BE PROCESSED.  OTHER MEMBERS    *
*                              ARE BYPASSED.  THE PREFIX MUST         *
*                              CONSIST OF 1 TO 7 CHARACTERS.          *
*                                                                     *
*              EXCLUDE=PREFIX  SPECIFIES THAT MEMBERS WHOSE NAMES     *
*                              BEGIN WITH THE SPECIFIED PREFIX ARE    *
*                              TO BE BYPASSED.  ALL OTHER MEMBERS     *
*                              ARE PROCESSED.  THE PREFIX MUST        *
*                              CONSIST OF 1 TO 7 CHARACTERS.          *
*                                                                     *
*              BLANKS ARE IGNORED IN PROCESSING THE PARAMETER FIELD.  *
*              ANY KEYWORD OPERAND MAY BE SPECIFIED BY USING ONLY     *
*              THE INITIAL LETTERS IN THE KEYWORD.  IF A KEYWORD IS   *
*              SPECIFIED MORE THAN ONCE IN THE PARAMETER FIELD, THE   *
*              LAST VALUE IS USED.  IF AN ERRORS ARE ENCOUNTERED IN   *
*              PROCESSING THE PARAMETER FIELD, THE ERRORS ARE         *
*              DISPLAYED AND THE PROGRAM IS TERMINATED.               *
*                                                                     *
* UTILITY CONTROL STATEMENTS                                          *
*                                                                     *
*              THE UTILITY CONTROL STATEMENTS ARE THE MASTER RECORDS  *
*              FOR SUBSTITUTION.  THE RECORDS MUST CONTAIN ONE        *
*              SPECIAL CHARACTER FOR EACH PLACE WHERE THE MEMBER      *
*              NAMES ARE TO BE INSERTED.  THE STATEMENT WILL BE       *
*              SHIFTED TO MAKE ROOM FOR THE INSERTED MEMBER NAME.     *
*              IF THE LENGTH OF THE SUBSTITUTED LINE EXCEEDS 71       *
*              CHARACTERS, AN ERROR MESSAGE WILL BE PRINTED, AND      *
*              THE RECORD WILL NOT BE PLACED IN THE OUTPUT CARD       *
*              IMAGE DATA SET.                                        *
*                                                                     *
* EXAMPLE      DATA SET TEMP.PDS CONTAINS 5 MEMBERS; MEMBER1,         *
*              MEMB2, MEM3, XXXXXXXX, AND Z9999999.  LIBRARIAN        *
*              CONTROL RECORDS TO TRANSFER THESE MEMBERS FROM         *
*              THE PDS TO A MASTER FILE ARE TO BE GENERATED.          *
*                                                                     *
*              //COPY   EXEC  PGM=SS0108,PARM='INT=10'                *
*              //SYSPRINT DD  SYSOUT=A                                *
*              //SYSUT1   DD  DISP=SHR,DSNAME=TEMP.PDS                *
*              //SYSUT2   DD  SYSOUT=B                                *
*              //SYSIN    DD  *                                       *
*              -ADD  @                                                *
*              -AUX  DDNAME(@)                                        *
*              -EMOD                                                  *
*              /*                                                     *
*                                                                     *
*              THE OUTPUT GENERATED WILL BE:                          *
*                                                                     *
*              -ADD  MEMBER1                                          *
*              -AUX  DDNAME(MEMBER1)                                  *
*              -EMOD                                                  *
*              -ADD  MEMB2                                            *
*              -AUX  DDNAME(MEMB2)                                    *
*              -EMOD                                                  *
*              -ADD  MEM3                                             *
*              -AUX  DDNAME(MEM3)                                     *
*              -EMOD                                                  *
*              -ADD  XXXXXXXX                                         *
*              -AUX  DDNAME(XXXXXXXX)                                 *
*              -EMOD                                                  *
*              -ADD  Z9999999                                         *
*              -AUX  DDNAME(Z9999999)                                 *
*              -EMOD                                                  *
*                                                                     *
*              IF INTERLEAVE HAD NOT BEEN SPECIFIED IN THE PARM       *
*              FIELD, THE OUTPUT WOULD HAVE BEEN:                     *
*                                                                     *
*              -ADD  MEMBER1                                          *
*              -ADD  MEMB2                                            *
*              -ADD  MEM3                                             *
*              -ADD  XXXXXXXX                                         *
*              -ADD  Z9999999                                         *
*              -AUX  DDNAME(MEMBER1)                                  *
*              -AUX  DDNAME(MEMB2)                                    *
*              -AUX  DDNAME(MEM3)                                     *
*              -AUX  DDNAME(XXXXXXXX)                                 *
*              -AUX  DDNAME(Z9999999)                                 *
*              -EMOD                                                  *
*              -EMOD                                                  *
*              -EMOD                                                  *
*              -EMOD                                                  *
*              -EMOD                                                  *
*                                                                     *
* RETURN CODES                                                        *
*               0 - SUCCESSFUL COMPLETION.                            *
*               4 - ONE OR MORE RECORDS EXCEEDED 71 COLUMNS AND       *
*                   WERE NOT WRITTEN TO THE OUTPUT FILE.              *
*               8 - MEMBER NAME TABLE EXCEEDED, NO OUTPUT PRODUCED.   *
*                   NO MEMBERS SELECTED, NO OUTPUT PRODUCED.          *
*              12 - ERROR IN PARM FIELD, NO OUTPUT PRODUCED.          *
*              16 - UNABLE TO OPEN A FILE (SYSIN, SYSUT1, OR SYSUT2), *
*                   NO OUTPUT PRODUCED.                               *
* ABEND CODES                                                         *
*              USER 0001 - UNABLE TO OPEN SYSPRINT, NO OUTPUT         *
*                          PRODUCED.                                  *
*                                                                     *
* FPL MACROS USED                                                     *
*                                                                     *
*              $ENTER      ENTRY LINKAGE                              *
*              $RETURN     EXIT LINKAGE                               *
*                                                                     *
* IBM MACROS USED                                                     *
*                                                                     *
*              OPEN        OPEN FILES                                 *
*              CLOSE       CLOSE FILES                                *
*              DCB         CONSTRUCT DATA CONTROL BLOCK               *
*              GET         OBTAIN A SINGLE LOGICAL RECORD             *
*              PUT         OUTPUT A SINGLE LOGICAL RECORD             *
*              READ        OBTAIN A PHYSICAL RECORD                   *
*              GETMAIN     OBTAIN STORAGE                             *
*              FREEMAIN    RELEASE STORAGE                            *
*              ABEND       TERMINATE PROGRAM ABNORMALLY               *
*                                                                     *
* REGISTER USAGE                                                      *
*                                                                     *
*     REGISTER USAGE IS DOCUMENTED VIA COMMENTS IN THE PROGRAM        *
*                                                                     *
*                                                 9/76 GORDON P. WEST *
***********************************************************************
         TITLE 'ENTRY CODING'
SS0108   $ENTER BASE=(R12,R11)
         LR    R2,R1                    SAVE PARM ADDRESS
         ZAP   #MEMBERS,=P'0'           ZERO NUMBER OF MEMBERS IN LIB
         ZAP   #USED,=P'0'              ZERO NUMBER OF MEMBERS USED
         ZAP   CARDCNT,=P'0'            ZERO CARD COUNT
         TITLE 'OPEN FILES'
***********************************************************************
*                                                                     *
*        OPEN FILES                                                   *
*                                                                     *
*              R0  - LINKAGE REGISTER                                 *
*              R1  - LINKAGE REGISTER                                 *
*              R2  - PARM ADDRESS                                     *
*              R3  - NOT USED                                         *
*              R4  - NOT USED                                         *
*              R5  - NOT USED                                         *
*              R6  - NOT USED                                         *
*              R7  - NOT USED                                         *
*              R8  - NOT USED                                         *
*              R9  - NOT USED                                         *
*              R10 - NOT USED                                         *
*              R11 - BASE REGISTER                                    *
*              R12 - BASE REGISTER                                    *
*              R13 - SAVE AREA                                        *
*              R14 - LINKAGE REGISTER                                 *
*              R15 - LINKAGE REGISTER                                 *
*                                                                     *
***********************************************************************
         SPACE 2
         MVI   CC,X'00'                 CLEAR CONDITION CODE
         OPEN  (SYSPRINT,OUTPUT,                                       X
               SYSIN,INPUT,                                            X
               SYSUT1,INPUT,                                           X
               SYSUT2,OUTPUT)
         TM    SYSPRINT+48,X'10'        TEST FOR SUCCESSFUL OPEN
         BNZ   CKSYSIN
         ABEND 0001
CKSYSIN  TM    SYSIN+48,X'10'
         BNZ   CKSYSUT1
         PUT   SYSPRINT,ERRMSG1
         MVI   CC,16                    SET CONDITION CODE
CKSYSUT1 TM    SYSUT1+48,X'10'
         BNZ   CKSYSUT2
         PUT   SYSPRINT,ERRMSG2
         MVI   CC,16                    SET CONDITION CODE
CKSYSUT2 TM    SYSUT2+48,X'10'
         BNZ   CKCODE
         PUT   SYSPRINT,ERRMSG3
         MVI   CC,16                    SET CONTITION CODE
CKCODE   CLI   CC,X'00'                 TEST CONDITION CODE
         BNE   RETURN
         TITLE 'PROCESS PARAMETER LIST'
***********************************************************************
*                                                                     *
*        PROCESS PARAMETER LIST                                       *
*                                                                     *
*              R0  - LINKAGE REGISTER                                 *
*              R1  - LINKAGE REGISTER/WORK REGISTER                   *
*              R2  - PARM FIELD POINTER                               *
*              R3  - PARM FIELD LENGTH COUNTER                        *
*              R4  - WORK AREA POINTER                                *
*              R5  - SWITCH                                           *
*              R6  - NOT USED                                         *
*              R7  - NOT USED                                         *
*              R8  - WORK AREA INCREMENT                              *
*              R9  - WORK AREA LIMIT                                  *
*              R10 - NOT USED                                         *
*              R11 - BASE REGISTER                                    *
*              R12 - BASE REGISTER                                    *
*              R13 - SAVE AREA                                        *
*              R14 - LINKAGE REGISTER/WORK REGISTER                   *
*              R15 - LINKAGE REGISTER/WORK REGISTER                   *
*                                                                     *
***********************************************************************
         SPACE 2
         MVI   SPECCHAR,C'@'            SET DEFAULT SPECIAL CHARACTER
         MVI   FLAGS,@NUMBER            SET DEFAULT ID OPTIONS
         L     R2,0(R2)                 LOAD PARM FIELD ADDRESS
         LH    R3,0(R2)                 LOAD PARM FIELD LENGTH
         LA    R2,2(R2)                 STEP OVER LENGTH FIELD
         SPACE 2
         LTR   R3,R3                    TEST FOR NO PARAMETER LIST
         BZ    NOPARM
         BCTR  R3,0                     REDUCE LENGTH BY 1
         EX    R3,COPYPARM              COPY PARM FIELD
         PUT   SYSPRINT,PARMFLD         PRINT PARM FIELD
         LA    R3,1(R3)                 ADD BACK THE 1
         SPACE 2
NEXTPARM LTR   R3,R3
         BNH   DONEPARM
         LA    R4,PARM                  LOAD WORK AREA ADDRESS
         LR    R15,R4                   SAVE IT FOR LATER
         LA    R8,1                     SET WORK AREA INCREMENT
         LA    R9,16(R4)                SET WORK AREA LIMIT
         MVC   0(17,R4),=CL17' '        BLANK WORK AREA
         MVC   REASON,REASON-1          BLANK OUT REASON AREA
SCANPARM CLI   0(R2),C','               TEST FOR COMMA
         BE    ENDPARM
         CLI   0(R2),C' '               TEST FOR A BLANK
         BE    INCRPARM
         MVC   0(1,R4),0(R2)            COPY CHARACTER TO WORK AREA
         BXLE  R4,R8,INCRPARM           INCREMENT WORK AREA POINTER
         MVC   REASON(19),=C' PARAMETER TOO LONG'
         B     BADPARM
INCRPARM LA    R2,1(R2)                 INCREMENT PARM FIELD POINTER
         BCT   R3,SCANPARM              DECREMENT COUNTER AND LOOP
         EJECT
***********************************************************************
*                                                                     *
*        PARAMETER OBTAINED, FIND =                                   *
*                                                                     *
***********************************************************************
         SPACE 2
ENDPARM  LA    R2,1(R2)                 STEP PAST THE COMMA
         BCTR  R3,0                     DECREMENT THE COUNTER
         LR    R1,R4                    COPY WORK AREA POINTER
         SR    R1,R15                   GET LENGTH OF WORK AREA
         BZ    NEXTPARM                 ZERO LENGTH, SKIP IT
         LR    R4,R15                   RESET POINTER
FINDEQ   CLI   0(R4),C'='               SCAN FOR EQUALS
         BE    GOTEQUAL
         LA    R4,1(R4)                 INCREMENT POINTER
         BCT   R1,FINDEQ                DECREMENT COUNTER AND LOOP
         MVC   REASON(15),=C' NO EQUALS SIGN'
         B     BADPARM
         EJECT
***********************************************************************
*                                                                     *
*        CHECK THE KEYWORD                                            *
*                                                                     *
***********************************************************************
         SPACE 2
GOTEQUAL LR    R14,R4                   COPY POINTER
         SR    R14,R15                  CALCULATE LENGTH OF KEYWORD
         BCTR  R14,0                    DECREMENT BY 1
         SR    R5,R5                    ZERO REGISTER 5
         EX    R14,COMPCHAR             TEST FOR CHAR
         BE    $CHAR
         EX    R14,COMPOWER             TEST FOR POWER
         BE    $POWER
         EX    R14,COMPSEL              TEST FOR SELECT
         BE    $SELECT
         EX    R14,COMPEXCL             TEST FOR EXCLUDE
         BE    $EXCLUDE
         CLI   0(R15),C'I'              DOES KEYWORD BEGIN WITH I
         BNE   BADKEYWD
         LTR   R14,R14                  AT LEAST 2 CHARACTERS
         BZ    AMBIG
         EX    R14,COMPINT              TEST FOR INTERLEAVE
         BE    $INTER
         EX    R14,COMPID               TEST FOR IDFIELD
         BE    $IDFIELD
         B     BADKEYWD
         SPACE 2
COMPCHAR CLC   0(0,R15),=C'CHAR'
COMPINT  CLC   0(0,R15),=C'INTERLEAVE'
COMPOWER CLC   0(0,R15),=C'POWER'
COMPID   CLC   0(0,R15),=C'IDFIELD'
COMPSEL  CLC   0(0,R15),=C'SELECT'
COMPEXCL CLC   0(0,R15),=C'EXCLUDE'
         EJECT
***********************************************************************
*                                                                     *
*        CHAR=                                                        *
*                                                                     *
***********************************************************************
         SPACE 2
$CHAR    CH    R1,=H'2'                 TEST LENGTH (EQUALS AND CHAR)
         BL    NOVALUE
         BH    CHARLONG
         MVC   SPECCHAR,1(R4)           COPY CHARACTER
         B     NEXTPARM
         EJECT
***********************************************************************
*                                                                     *
*        IDFIELD=                                                     *
*                                                                     *
***********************************************************************
         SPACE 2
$IDFIELD LA    R4,1(R4)                 INCREMENT PAST =
         BCT   R1,PROCID                DECREMENT COUNT AND TEST IT
         B     NOVALUE
PROCID   BCTR  R1,0                     REDUCE COUNT BY 1
         EX    R1,COMPBLNK              TEST FOR BLANK
         BE    $IDBLNK
         EX    R1,COMPNUM               TEST FOR NUMBER
         BE    $IDNUM
         EX    R1,COMPSAME              TEST FOR SAME
         BE    $IDSAME
         MVC   REASON(22),=C' INVALID IDFIELD VALUE'
         B     BADPARM
$IDSAME  OI    FLAGS,@SAME              SET FLAG TO SAME
         B     NEXTPARM
$IDBLNK  OI    FLAGS,@BLANK             SET FLAG TO BLANK
         B     NEXTPARM
$IDNUM   OI    FLAGS,@NUMBER            SET FLAG TO SEQUENCE
         B     NEXTPARM
         SPACE 2
COMPBLNK CLC   0(0,R4),=C'BLANKS'
COMPNUM  CLC   0(0,R4),=C'NUMBER'
COMPSAME CLC   0(0,R4),=C'SAME'
         EJECT
***********************************************************************
*                                                                     *
*        POWER=   OR   INTERLEAVE=                                    *
*                                                                     *
***********************************************************************
         SPACE 2
$POWER   LA    R5,4(R5)                 +4
$INTER   EQU   *                        +0
         SPACE 2
         LA    R4,1(R4)                 STEP OVER =
         BCT   R1,EVAL                  DECREMENT COUNTER AND TEST
         B     NOVALUE
EVAL     LR    R0,R1                    COPY COUNT
         LR    R15,R4                   COPY COUNTER
VALIDATE CLI   0(R15),C'0'              TEST AGAINST ZERO
         BL    BADNUM
         CLI   0(R15),C'9'              TEST AGAINST NINE
         BH    BADNUM
         LA    R15,1(R15)               INCREMENT POINTER
         BCT   R0,VALIDATE              DECREMENT COUNT, TEST, AND LOOP
         BCTR  R1,0                     RECUCE COUNT BY 1
         EX    R1,PACK                  PACK THE NUMBER
         CVB   R15,VALUE                CONVERT TO BINARY
         B     BRANCH(R5)               SPLIT TO PROPER OPTION
         SPACE
BRANCH   B     $$INTER                  INTERLEAVE
         SPACE 2
         ST    R15,POWERVAL             STORE VALUE
         B     NEXTPARM
         SPACE 2
$$INTER  ST    R15,#CARDS               STORE VALUE
         B     NEXTPARM
         EJECT
***********************************************************************
*                                                                     *
*        SELECT=  OR  EXCLUDE=                                        *
*                                                                     *
***********************************************************************
         SPACE 2
$SELECT  TM    FLAGS,@EXCLUDE           MAKE SURE EXCLUDE NOT SPECIFIED
         BNZ   CONFLICT
         OI    FLAGS,@SELECT            INDICATE SELECT SPECIFIED
         B     PROCSEEX
$EXCLUDE TM    FLAGS,@SELECT            MAKE SURE SELECT NOT SPECIFIED
         BNZ   CONFLICT
         OI    FLAGS,@EXCLUDE           INDICATE SELECT/EXCLUDE ENTERED
PROCSEEX LA    R4,1(R4)                 STEP PAST =
         BCT   R1,PROCPREF              DECREMENT COUNT
         B     NOVALUE
PROCPREF C     R1,=F'7'                 MUST BE 7 OR LESS CHARS IN PFX
         BH    PFXLONG
         BCTR  R1,0                     REDUCE COUNT BY 1
         EX    R1,COPYPFX               COPY PREFIX INTO SAVE AREA
         ST    R1,PFXLEN                STORE LENGTH-1
         B     NEXTPARM
         EJECT
***********************************************************************
*                                                                     *
*        PARAMETER FIELD INVALID                                      *
*                                                                     *
***********************************************************************
         SPACE 2
NOVALUE  MVC   REASON(19),=C' NO VALUE SPECIFIED'
         B     BADPARM
         SPACE 2
CHARLONG MVC   REASON(36),=C' CHAR VALUE MUST BE SINGLE CHARACTER'
         B     BADPARM
         SPACE 2
BADNUM   MVC   REASON(21),=C' NON-NUMERIC IN VALUE'
         B     BADPARM
         SPACE 2
BADKEYWD MVC   REASON(16),=C' INVALID KEYWORD'
         B     BADPARM
         SPACE 2
AMBIG    MVC   REASON(12),=C' I AMBIGUOUS'
         B     BADPARM
         SPACE 2
CONFLICT MVC   REASON(40),=C' SELECT AND EXCLUDE BOTH APPEAR IN PARMS'
         B     BADPARM
         SPACE 2
PFXLONG  MVC   REASON(28),=C' PREFIX EXCEEDS 7 CHARACTERS'
         SPACE 2
BADPARM  PUT   SYSPRINT,INVALID         PRINT INVALID PARM
         MVI   INVALID,C' '             SET CARRIAGE CONTROL
         MVI   CC,12                    SET CONDITION CODE
         B     NEXTPARM
         SPACE 2
COPYPARM MVC   PARMDATA(0),0(R2)        COPY PARM FIELD TO MESSAGE
NOPARM   PUT   SYSPRINT,NOPARMS         PRINT MESSAGE
         SPACE 2
DONEPARM CLI   CC,X'00'                 TEST CONDITION CODE
         BNE   RETURN
         TITLE 'OBTAIN STORAGE FOR INPUT RECORDS'
***********************************************************************
*                                                                     *
*        GET STORAGE FOR INPUT RECORDS - SIZE DETERMINED BY           *
*                                        INTERLEAVE VALUE             *
*                                                                     *
***********************************************************************
         SPACE 2
         L     R3,#CARDS                LOAD NUMBER OF CARDS
         MH    R3,=H'80'                MULTIPLY BY 80
         GETMAIN R,LV=(R3),SP=1         GET STORAGE
         ST    R1,ACARDS                SAVE THE ADDRESS
         LA    R3,0(R3,R1)              ADD LENGTH OF AREA
         BCTR  R3,0                     REDUCE BY 1
         ST    R3,ENDCARDS              SAVE IT
         TITLE 'OBTAIN STORAGE FOR MEMBER NAME TABLE'
***********************************************************************
*                                                                     *
*        GET STORAGE FOR MEMBER NAMES  - SIZE DETERMINED BY           *
*                                        POWER VALUE                  *
*                                                                     *
***********************************************************************
         SPACE 2
         L     R3,POWERVAL              LOAD POWER VALUE
         MH    R3,=H'2048'              MULTIPLY BY 2K
         GETMAIN R,LV=(R3),SP=1         GET STORAGE
         ST    R1,ANAMES                SAVE THE ADDRESS
         LA    R3,0(R3,R1)              ADD LENGTH OF AREA
         BCTR  R3,0                     REDUCE BY 1
         ST    R3,ENDNAMES              SAVE IT
         SPACE 2
         L     R3,ANAMES                LOAD START OF TABLE ADDRESS
         SR    R4,R4                    ZERO INCREMENT FOR NOW
         L     R5,ENDNAMES              LOAD END OF TABLE ADDRESS
         L     R2,PFXLEN                LOAD PREFIX LENGTH
         TITLE 'READ MEMBER NAMES FROM PDS'
***********************************************************************
*                                                                     *
*        READ MEMBER NAMES FROM PDS                                   *
*                                                                     *
*              R0  - LINKAGE REGISTER                                 *
*              R1  - LINKAGE REGISTER                                 *
*              R2  - PREFIX LENGTH                                    *
*              R3  - MEMBER NAME TABLE POINTER                        *
*              R4  - MEMBER NAME TABLE INCREMENT                      *
*              R5  - MEMBER NAME TABLE LIMIT                          *
*              R6  - OUTPUT LINE POINTER                              *
*              R7  - DIRECTORY RECORD POINTER/OUTPUT LINE LIMIT       *
*              R8  - DIRECTORY RECORD LENGTH COUNTER                  *
*              R9  - NOT USED                                         *
*              R10 - NOT USED                                         *
*              R11 - BASE REGISTER                                    *
*              R12 - BASE REGISTER                                    *
*              R13 - SAVE AREA                                        *
*              R14 - LINKAGE REGISTER                                 *
*              R15 - LINKAGE REGISTER                                 *
*                                                                     *
***********************************************************************
         SPACE 2
READPDS  READ  ECB1,                    READ A DIRECTORY BLOCK         X
               SF,                                                     X
               SYSUT1,                                                 X
               LIBDIR,                                                 X
               'S'
         CHECK ECB1                     WAIT FOR COMPLETION
         LA    R7,LIBDIR+8              LOAD COUNT ADDRESS
         LH    R8,LIBDIR+8              LOAD COUNT
         LA    R8,0(R7,R8)              LOAD END OF ENTRY ADDRESS
         LA    R7,2(R7)                 STEP OVER COUNT
         SPACE 2
NAMELOOP CR    R7,R8                    SEE IF DONE
         BNL   READPDS
         CLC   0(8,R7),=8X'FF'          TEST FOR END
         BE    PDSEOF
         LA    R4,8                     LOAD MEMBER NAME LENGTH
         TM    FLAGS,@SELECT+@EXCLUDE   SELECT/EXCLUDE SPECIFIED?
         BZ    FINDEND
         EX    R2,COMPNAME              TEST NAME
         BE    NAMEQUAL
         TM    FLAGS,@EXCLUDE           NOT EQUAL
         BZ    NEXTNAME
         B     FINDEND
NAMEQUAL TM    FLAGS,@SELECT            EQUAL
         BZ    NEXTNAME
         SPACE 2
FINDEND  BCTR  R4,0                     REDUCE LENGTH BY 1
         LA    R1,0(R4,R7)              LOAD CHARACTER ADDRESS
         CLI   0(R1),C' '               TEST FOR BLANK
         BE    FINDEND                  IF SO, DECREMENT AND GO AGAIN
         STC   R4,0(R3)                 NOT BLANK, SAVE LENGTH-1
         EX    R4,MOVENAME              COPY NAME INTO TABLE
         LA    R4,2(R4)                 LOAD TABLE ENTRY LENGTH
         BXH   R3,R4,NAMEFULL           INCREMENT AND TEST TABLE PTR
         AP    #USED,=P'1'              INCREMENT MEMBERS USED COUNTER
NEXTNAME NI    11(R7),X'1F'             SAVE USER DATA LENGTH
         IC    R4,11(R7)                LOAD ENTRY LENGTH (HALFWORDS)
         SLA   R4,1                     DOUBLE TO GET BYTES
         LA    R7,12(R4,R7)             POINT TO NEXT ENTRY
         AP    #MEMBERS,=P'1'           INCREMENT MEMBER COUNT
         B     NAMELOOP
         SPACE 2
NAMEFULL PUT   SYSPRINT,ERRMSG4         TOO MANY NAMES
         MVI   CC,8                     SET CONDITION CODE
         B     FREEMAIN
         SPACE 2
MOVENAME MVC   1(0,R3),0(R7)            COPY MEMBER NAME TO TABLE
         SPACE 2
PDSEOF   CLOSE SYSUT1                   FINISHED WITH DIRECTORY
         LR    R5,R3                    SAVE END OF TABLE ADDRESS
         BCTR  R5,0                     REDUCE BY 1
         ED    MEMBCNT,#MEMBERS         EDIT MEMBER COUNT
         ED    USEDCNT,#USED            EDIT USED COUNT
         CP    #MEMBERS,=P'1'           TEST FOR ONE MEMBER IN DATA SET
         BNE   TESTUSED
         MVC   MEMBCNT+15,=C', '        BLANK OUT S
TESTUSED CP    #USED,=P'1'              TEST FOR ONE MEMBER SELECTED
         BNE   PRINTHDR
         MVI   USEDCNT+15,C' '          BLANK OUT S
PRINTHDR PUT   SYSPRINT,LINE1           PRINT LINE
         MVI   LINE1,C'0'               SET DOUBLE SPACE
         L     R3,ANAMES                LOAD TABLE ADDRESS
         LA    R2,2                     INITIALIZE LINE COUNTER
         LA    R8,1                     LOAD LINE COUNT INCREMENT
         LA    R9,60                    LOAD LINE COUNT LIMIT
         CR    R3,R5                    SEE IF ANY MEMBERS SELECTED
         BL    BLANKOUT
         PUT   SYSPRINT,NOMEMBRS        PUT ERROR MESSAGE
         MVI   CC,8                     SET CONDITION CODE
         B     RETURN
BLANKOUT LA    R6,LINE1+1               OUTPUT POINTER
         LA    R7,LINE1+100             END OF OUTPUT LINE
         MVC   LINE1+1(132),=CL132' '   BLANK OUT LINE
PROCMEM  IC    R4,0(R3)                 LOAD MEMBER LENGTH-1
         EX    R4,PRINTMEM              COPY MEMBER NAME TO OUTPUT LINE
         LA    R4,2(R4)                 LOAD TABLE ENTRY LENGTH
         BXH   R3,R4,PRINTLST           INCREMENT AND TEST POINTER
         LA    R6,10(R6)                INCREMENT OUTPUT POINTER
         CR    R6,R7                    TEST FOR END OF LINE
         BL    PROCMEM
         PUT   SYSPRINT,LINE1           PRINT LINE
         MVI   LINE1,C' '               SET SPACING TO SINGLE LINE
         BXLE  R2,R8,BLANKOUT           INCREMENT AND TEST LINE COUNT
         SR    R2,R2                    RESET LINE COUNT
         MVI   LINE1,C'1'               SET CONTROL CHAR TO TOP OF FORM
         B     BLANKOUT
PRINTMEM MVC   0(0,R6),1(R3)            COPY MEMBER NAME
PRINTLST PUT   SYSPRINT,LINE1           PRINT LAST LINE
         PUT   SYSPRINT,LINE2           PRINT LINE
         LA    R2,3(R2)                 INCREMENT LINE COUNTER
         SR    R10,R10                  CLEAR R10
         LR    R11,R5                   COPY LIMIT ADDRESS
         DROP  R11
         TITLE 'READ AND PROCESS MASTER RECORDS'
***********************************************************************
*                                                                     *
*        READ AND PROCESS MASTER RECORDS                              *
*                                                                     *
*              R0  - LINKAGE REGISTER/WORK REGISTER                   *
*              R1  - LINKAGE REGISTER/WORK REGISTER                   *
*              R2  - LINE COUNTER                                     *
*              R3  - MEMBER NAME TABLE POINTER                        *
*              R4  - INPUT RECORD ARRAY POINTER                       *
*              R5  - START OF FIELD POINTER                           *
*              R6  - END OF FIELD POINTER                             *
*              R7  - END OF RECORD                                    *
*              R8  - INPUT RECORD ARRAY INCREMENT                     *
*              R9  - INPUT RECORD ARRAY LIMIT                         *
*              R10 - MEMBER NAME TABLE INCREMENT                      *
*              R11 - MEMBER NAME TABLE LIMIT                          *
*              R12 - BASE REGISTER                                    *
*              R13 - SAVE AREA                                        *
*              R14 - LINKAGE REGISTER                                 *
*              R15 - LINKAGE REGISTER/WORK REGISTER                   *
*                                                                     *
***********************************************************************
         SPACE 2
READRECD L     R4,ACARDS                LOAD CARD ARRAY ADDRESS
         LA    R8,80                    LOAD CARD ARRAY INCREMENT
         L     R9,ENDCARDS              LOAD CARD ARRAY LIMIT
         MVI   OUTLINE,C' '             SET CONTROL TO SINGLE SPACE
GETCARD  GET   SYSIN,(R4)               READ A CARD
         MVC   OUTLINE+1(80),0(R4)      COPY RECORD TO OUTPUT AREA
         LA    R2,1(R2)                 INCREMENT LINE COUNT
         CH    R2,=H'60'                TEST AGAINST LIMIT
         BNH   PRINTIT
         MVI   OUTLINE,C'1'             SET CONTROL TO HEAD OF FORM
         LA    R2,1                     SET LINE COUNT TO 1
PRINTIT  PUT   SYSPRINT,OUTLINE         PRINT IT
         BXLE  R4,R8,GETCARD            INCREMENT AND TEST POINTER
         MVI   EOF,C'N'                 SPECIFY NOT END OF FILE
PROCESS  LR    R9,R4                    SAVE ADDRESS OF LAST ENTRY
         BCTR  R9,0                     REDUCE BY 1
         L     R3,ANAMES                LOAD TABLE POINTER
PROCNAME L     R4,ACARDS                INITIALIZE POINTER
PROCCARD LR    R5,R4                    INITIALIZE START OF FIELD
         LR    R6,R5                    INITIALIZE END OF FIELD
         LA    R7,70(R5)                LOAD END OF RECORD ADDRESS
         LA    R0,RECDOUT+70            LOAD END OF OUTPUT LINE ADDRESS
         LA    R1,RECDOUT               LOAD START OF OUTPUT LINE ADDR
         MVC   0(132,R1),=CL132' '      BLANK OUT OUTPUT RECORD
*--------BEGIN SCAN OF INPUT LINE
INSCAN   CLC   SPECCHAR,0(R6)           TEST FOR SPECIAL CHARACTER
         BE    FOUND
         LA    R6,1(R6)                 INCREMENT TO NEXT CHARACTER
         CR    R6,R7                    TEST FOR END OF INPUT LINE
         BH    PUTCARD
         B     INSCAN                   LOOP AGAIN
         SPACE 2
FOUND    LR    R15,R6                   LOAD SPECIAL CHARACTER ADDRESS
         SR    R15,R5                   SUBTRACT BEGIN ADDRESS
         BZ    LOADLEN
         BCTR  R15,0                    SUBTRACT 1
         EX    R15,COPYTEXT             COPY TEXT TO OUTPUT RECORD
         LA    R1,1(R15,R1)             INCREMENT OUTPUT POINTER
LOADLEN  IC    R10,0(R3)                LOAD MEMBER NAME LENGTH-1
         EX    R10,COPYNAME             COPY MEMBER NAME
         LA    R1,1(R10,R1)             INCREMENT OUTPUT POINTER
         LA    R5,1(R6)                 RESET INPUT FIELD POINTERS
         LR    R6,R5
         CR    R1,R0                    SEE IF OUTPUT LINE IS TOO LONG
         BNH   INSCAN
TOOLONG  LA    R2,2(R2)                 INCREMENT LINE COUNT
         CH    R2,=H'60'                TEST AGAINST MAXIMUM
         BL    PRINTIT2
         LA    R2,1                     RESET LINE COUNTER
         PUT   SYSPRINT,RESTORE         RESTORE PAGE
PRINTIT2 PUT   SYSPRINT,RECDOUT-1       PRINT SUBSTITUTED LINE
         PUT   SYSPRINT,ERRMSG5         PRINT ERROR MESSAGE
         MVI   CC,4                     SET CONDITION CODE
         B     NEXTCARD
COPYTEXT MVC   0(0,R1),0(R5)            COPY LINE TEXT
COPYNAME MVC   0(0,R1),1(R3)            COPY MEMBER NAME
         SPACE 2
PUTCARD  LR    R15,R6                   COPY TEXT FOLLOWING LAST
         SR    R15,R5                        SPECIAL CHARACTER
         BCTR  R15,0
         EX    R15,COPYTEXT
         LA    R1,1(R15,R1)             POINT TO NEXT CHARACTER
BACKUP   BCTR  R1,0                     BACK UP 1 CHARACTER
         CLI   0(R1),C' '               FIND LAST NON-BLANK
         BE    BACKUP
         CR    R1,R0                    TEST FOR RECORD TOO LONG
         BH    TOOLONG
         MVC   RECDOUT+71(1),71(R4)     COPY COLUMN 72 FROM INPUT
         TM    FLAGS,@BLANK             TEST FOR ID FIELD BLANK
         BNZ   BLANKID
         TM    FLAGS,@SAME              TEST FOR SEQUENCE
         BZ    SEQUENCE
         MVC   RECDOUT+72(8),72(R4)     COPY ID FIELD FROM INPUT
         B     PUNCH
BLANKID  MVC   RECDOUT+72(8),=CL8' '    MOVE IN BLANKS
         B     PUNCH
SEQUENCE AP    CARDCNT,=P'10'           INCREMENT CARD COUNT
         UNPK  RECDOUT+72(8),CARDCNT    UNPACK INTO ID FIELD
         OI    RECDOUT+79,X'F0'         SET F ZONE
PUNCH    PUT   SYSUT2,RECDOUT           PUNCH CARD
         SPACE 2
NEXTCARD BXLE  R4,R8,PROCCARD           POINT TO NEXT CARD
         SPACE 2
         IC    R10,0(R3)                LOAD MEMBER NAME LENGTH-1
         LA    R10,2(R10)               GET TABLE ENTRY LENGTH
         BXLE  R3,R10,PROCNAME          INCREMENT AND TEST TABLE PTR
         SPACE 2
         CLI   EOF,C'N'                 TEST FOR END OF INPUT FILE
         BE    READRECD
         TITLE 'FREE STORAGE OBTAINED FOR TABLES'
***********************************************************************
*                                                                     *
*        FREE STORAGE OBTAINED FOR MEMBER NAME TABLE AND INPUT        *
*        RECORD TABLE.                                                *
*                                                                     *
***********************************************************************
         SPACE 2
FREEMAIN L     R4,ACARDS                LOAD ADDRESS OF GETMAINED STOR.
         L     R3,#CARDS                CALCULATE LENGTH
         MH    R3,=H'80'
         FREEMAIN R,LV=(R3),A=(R4),SP=1 FREE STORAGE
         L     R4,ANAMES                LOAD NAME TABLE ADDRESS
         L     R3,POWERVAL              CALCULATE LENGTH
         MH    R3,=H'2048'
         FREEMAIN R,LV=(R3),A=(R4),SP=1 FREE STORAGE
         TITLE 'EXIT CODING'
***********************************************************************
*                                                                     *
*        CLOSE FILES AND RETURN                                       *
*                                                                     *
***********************************************************************
         SPACE 2
RETURN   CLOSE (SYSPRINT,,SYSIN,,SYSUT2)
         SR    R15,R15                  RESTORE RETURN CODE
         IC    R15,CC
         $RTRN RC=(R15)                 RETURN
         TITLE 'END OF FILE ON SYSIN'
***********************************************************************
*                                                                     *
*        END OF FILE ON SYSIN                                         *
*                                                                     *
***********************************************************************
         SPACE 2
EOFSYSIN MVI   EOF,C'Y'                 SET EOF INDICATOR
         C     R4,ACARDS                SEE IF ANYTHING IN INPUT BUFFER
         BNE   PROCESS                  YES - PROCESS IT
         B     FREEMAIN                 NO  - QUIT
         TITLE 'DATA'
***********************************************************************
*                                                                     *
*        DATA                                                         *
*                                                                     *
***********************************************************************
         SPACE 2
         LTORG
         SPACE 2
ACARDS   DS    A                        ADDRESS OF INPUT CARD STORAGE
ENDCARDS DS    A                        ADDRESS OF END OF CARD STORAGE
ANAMES   DS    A                        ADDRESS OF NAME TABLE
ENDNAMES DS    A                        ADDRESS OF END OF NAME TABLE
POWERVAL DC    F'1'                     POWER VALUE
#CARDS   DC    F'1'                     NUMBER OF INPUT RECORDS
#MEMBERS DC    PL4'0'                   MEMBERS IN LIBRARY COUNT
#USED    DC    PL4'0'                   MEMBERS USED COUNT
CARDCNT  DC    PL4'0'                   CARD COUNT
PACK     PACK  VALUE,0(0,R4)
COMPNAME CLC   PREFIX(0),0(R7)          TEST AGAINST PREFIX
COPYPFX  MVC   PREFIX(0),0(R4)          COPY PREFIX
PREFIX   DS    CL8                      PREFIX
PFXLEN   DS    F                        PREFIX LENGTH-1
VALUE    DS    D                        WORK AREA FOR DECIMAL CONVERT
CC       DS    X                        CONDITION CODE
FLAGS    DS    X                        OPTIONS
@BLANK   EQU   X'01'                       BLANK ID FIELD
@NUMBER  EQU   X'02'                       NUMBER ID FIELD
@SAME    EQU   X'04'                       ID FIELD SAME AS INPUT
@SELECT  EQU   X'08'                       SELECT SPECIFIED
@EXCLUDE EQU   X'10'                       EXCLUDE SPECIFIED
EOF      DS    C                        END OF INPUT FILE INDICATOR
         TITLE 'MESSAGES'
LINE2    DC    C'0INSERTION CHARACTER IS '                      24   24
SPECCHAR DC    C' '                                              1   25
         DC    CL108' '                                        108  133
         SPACE
         DC    C'0'                     CONTROL CHARACTER FOR PRINT
OUTLINE  DC    CL132' '                 INPUT RECORD
         SPACE
         DC    C' '                     CONTROL CHARACTER FOR PRINT
RECDOUT  DS    CL80                     OUTPUT RECORD
         DC    CL52' '                  PADDING FOR PRINT
         SPACE
RESTORE  DC    CL133'1'
         SPACE
ERRMSG5  DC    CL133' SUBSTITUTED LINE EXCEEDS 72 CHARACTERS'
         TITLE 'DATA CONTROL BLOCKS'
SYSPRINT DCB   DDNAME=SYSPRINT,                                        X
               DSORG=PS,                                               X
               MACRF=(PM),                                             X
               RECFM=FA,                                               X
               LRECL=133,                                              X
               BLKSIZE=133
         EJECT
SYSIN    DCB   DDNAME=SYSIN,                                           X
               DSORG=PS,                                               X
               MACRF=(GM),                                             X
               RECFM=FB,                                               X
               LRECL=80,                                               X
               EODAD=EOFSYSIN
         EJECT
SYSUT1   DCB   DDNAME=SYSUT1,                                          X
               DSORG=PS,                                               X
               MACRF=R,                                                X
               RECFM=U,                                                X
               BLKSIZE=264,                                            X
               KEYLEN=8,                                               X
               EODAD=PDSEOF
         EJECT
SYSUT2   DCB   DDNAME=SYSUT2,                                          X
               DSORG=PS,                                               X
               MACRF=(PM),                                             X
               RECFM=FB,                                               X
               LRECL=80,                                               X
               BLKSIZE=3120
         TITLE 'MESSAGES'
ERRMSG1  DC    CL133' UNABLE TO OPEN SYSIN'
ERRMSG2  DC    CL133' UNABLE TO OPEN SYSUT1'
ERRMSG3  DC    CL133' UNABLE TO OPEN SYSUT2'
ERRMSG4  DC    CL133' MEMBER NAMES EXCEED BUFFER - INCREASE POWER VALUEX
               .'
NOMEMBRS DC    CL133' NO MEMBERS SELECTED, PROGRAM TERMINATED'
INVALID  DC    C'0INVALID PARAMETER FIELD SPECIFIED - '         37   37
PARM     DC    CL17' '                                          17   54
         DC    C' - '                                            3   57
REASON   DC    CL76' '                                          76  133
         SPACE
PARMFLD  DC    C'1PARM FIELD - '                                14   14
PARMDATA DC    CL119' '                                        119  133
NOPARMS  DC    CL133'1NO PARAMETER FIELD SPECIFIED'
         SPACE
LINE1    DC    C'-LIBRARY CONTAINS '                            18   18
MEMBCNT  DC    X'4020202020202120'                               8   26
         DC    C' MEMBERS,'                                      9   35
USEDCNT  DC    X'4020202020202120'                               8   43
         DC    CL90' MEMBERS SELECTED.'                         90  133
         SPACE
         DS    0D                       ALIGNMENT
LIBDIR   DS    XL8,XL256                DIRECTORY RECORD
         END
