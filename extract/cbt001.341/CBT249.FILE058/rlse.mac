         TITLE 'DISCLAIMER - INSTALLATION INSTRUCTIONS'
***********************************************************************
*                                                                     *
*     THIS PROGRAM, DEVELOPED AT FPL OR SUPPLIED BY OTHER USERS       *
*     ON A NON-RESTRICTIVE BASIS, IS OF GENERAL INTEREST              *
*     SUBMITTED FOR UNRESTRICTED DISTRIBUTION.  THIS PROGRAM          *
*     HAS MET A BASIC SET OF PROGRAMMING AND DOCUMENTATION            *
*     STANDARDS, BUT MAY NOT HAVE BEEN PROGRAM TESTED IN ANY          *
*     FORMAL FASHION BY FPL.  THE USER IS EXPECTED TO MAKE THE        *
*     FINAL EVALUATION AS TO THE USEFULLNESS IN HIS OWN               *
*     ENVIRONMENT.                                                    *
*                                                                     *
*     FPL MAKES NO WARRANTY, EXPRESSED OR IMPLIED, INCLUDING, BUT     *
*     NOT LIMITED TO, THE IMPLIED WARRANTIES OR MERCHANTABILITY AND   *
*     FITNESS FOR A PARTICULAR PUTPOSE AS TO THE DOCUMENTATION,       *
*     FUNCTION, OR PERFORMANCE OF THESE PROGRAMS.                     *
*                                                                     *
*     ACCEPTANCE AND USE OF THIS PROGRAM CONSTITUTES A RELEASE        *
*     FROM LIABILITY OF FPL FOR ANY PROBLEMS USE OF THE PROGRAM       *
*     MAY CAUSE AT THE USER'S INSTALLATION.                           *
*                                                                     *
*     USERS ARE INVITED TO SUBMIT SUGGESTIONS OR ERROR DOCUMENTATION  *
*     TO FPL, HOWEVER, NO PROMISE CAN BE MADE THAT SUCH SUGGESTIONS   *
*     WILL BE IMPLEMENTED OR ERRORS CORRECTED.  SUBMIT COMMENTS TO:   *
*              COORDINATOR OF TECHNICAL SYSTEMS                       *
*              SYSTEMS & PROGRAMMING DEPARTMENT                       *
*              FLORIDA POWER & LIGHT COMPANY - GENERAL OFFICE         *
*              P. O. BOX  529100                                      *
*              MIAMI, FLORIDA  33152                                  *
*                                                                     *
*     THIS PROGRAM IS MADE AVAILABLE BY FPL WITHOUT CHARGE OR         *
*     CONSIDERATION.  RECIPIENTS ARE FREE TO MAKE THIS PROGRAM        *
*     AVAILABLE TO OTHERS IN LIKE MANNER.  IT MAY NOT BE SOLD.        *
*                                                                     *
* INSTALLATION INSTRUCTIONS                                           *
*                                                                     *
*     THIS MODULE MAY BE ASSEMBLED AND LINKED INTO A LIBRARY IN THE   *
*     LINK LIST OR SPECIFIED AS A STEPLIB IN THE TSO LOGON PROCEDURE. *
*     THE COMMAND MAY BE INVOKED FROM TSO BY ENTERING THE NAME OR AN  *
*     ALIAS OF THE MODULE.                                            *
*                                                                     *
*     BEFORE ASSEMBLING THE MODULE, INSURE THAT ALL THE REQUIRED      *
*     MACROS ARE AVAILABLE.  SOME MACROS FROM SYS1.AMODGEN MAY BE     *
*     REQUIRED.  THE $ENTER MACRO USES SYSTEM VARIABLE SYMBOLS        *
*     &SYSDATE AND &SYSTIME.  THESE SYMBOLS ARE NOT SUPPORTED BY ALL  *
*     ASSEMBLERS.  IF THE ASSEMBLER TO BE USED DOES NOT SUPPORT THESE *
*     SYMBOLS, THE $ENTER MACRO MUST BE MODIFIED.                     *
*                                                                     *
*     THE SOURCE PROVIDED IS OPERATING SYSTEM DEPENDENT.  SPECIFY THE *
*     DESIRED OPERATING SYSTEM AS THE VALUE FOR &OPSYSTM.             *
*                                                                     *
*     THE MODULE MAY BE LINKED WITH ATTRIBUTES RENT AND REFR AND IS   *
*     ELIGIBLE FOR INCLUSION IN THE LINK PACK AREA.                   *
*                                                                     *
***********************************************************************
RLSE     TITLE 'RELEASE UNUSED SPACE'
***********************************************************************
*                                                                     *
* NAME         RLSE                                                   *
*                                                                     *
* FUNCTION     THE RLSE COMMMAND IS USED TO RELEASE UNUSED SPACE IN   *
*              SEQUENTIAL OR PARTITIONED DATA SETS.                   *
*                                                                     *
* DESCRIPTION  THE USER MAY SPECIFY ONE OR MORE DATA SET NAMES.  THE  *
*              DATA SETS WILL BE ALLOCATED, OPENED FOR OUTPUT,        *
*              CLOSED, AND FREED.  DATA SETS WHICH ARE NOT SEQUENTIAL *
*              OR PARTITIONED WILL NOT BE PROCESSED.                  *
*                                                                     *
*              UNCATALOGED DATA SETS MAY BE PROCESSED BY SPECIFYING   *
*              THE VOLUME SERIAL WITH THE VOLUME KEYWORD OR BY        *
*              PRE-ALLOCATING THEM WITH THE ALLOCATE COMMAND.         *
*                                                                     *
* RESTRICTIONS AND LIMITATIONS                                        *
*              ONLY SEQUENTIAL OR PARTITIONED DATA SETS MAY BE        *
*              PROCESSED.                                             *
*                                                                     *
*              IF THE DATA SET IS ALLOCATED IN CYLINDERS, SPACE CAN   *
*              ONLY BE RELEASED IN WHOLE CYLINDERS.                   *
*                                                                     *
* SYNTAX       RLSE  (DATA-SET-LIST)  VOLUME(SERIAL)                  *
*                                                                     *
*              REQUIRED - DATA-SET-LIST                               *
*              DEFAULTS - NONE                                        *
*                                                                     *
* OPERANDS     DATA-SET-LIST                                          *
*                   SPECIFIES THE NAMES OF ONE OR MORE DATA SETS FOR  *
*                   WHICH UNUSED SPACE IS TO BE RELEASED.  THE DATA   *
*                   SET NAMES CONFORM TO TSO DATA SET NAMING          *
*                   CONVENTIONS.                                      *
*                                                                     *
*              VOLUME(SERIAL)                                         *
*                   VOLUME SERIAL FOR PROCESSING UNCATALOGED DATA     *
*                   SETS.  THIS SERIAL APPLIES TO ALL DATA SETS IN    *
*                   THE DATA-SET-LIST.                                *
*                                                                     *
* SUBCOMMANDS  RLSE HAS NO SUBCOMMMANDS.                              *
*                                                                     *
* MESSAGES                                                            *
*              RLSE0001I UNABLE TO INTERPRET COMMAND                  *
*                                                                     *
*                   THE PARSE SERVICE ROUTINE WAS UNABLE TO INTERPRET *
*                   THE COMMAND OPERANDS.  THE COMMAND MAY BE TOO     *
*                   LONG OR A LARGER REGION IS REQUIRED.              *
*                                                                     *
*              RLSE0002I DATA SET DSNAME NOT SEQUENTIAL OR            *
*                   PARTITIONED.                                      *
*                                                                     *
*                   THE SPECIFIED DATA SET HAS AN ORGAINZATION OTHER  *
*                   THAN SEQUENTIAL OR PARTITIONED AND WILL NOT BE    *
*                   PROCESSED.                                        *
*                                                                     *
*              RLSE0003I UNABLE TO OPEN DSNAME                        *
*                                                                     *
*                   THE SPECIFIED DATA SET FAILED TO OPEN AND WILL    *
*                   NOT BE PROCESSED.                                 *
*                                                                     *
*                                                                     *
*              RLSE0004I DATA SET DSNAME NOT ON VOLUME SERIAL         *
*                                                                     *
*                   THE SPECIFIED DATA SET IS NOT ON THE VOLUME       *
*                   INDICATED.                                        *
*                                                                     *
*              RLSE0005I RLSE DONE                                    *
*                                                                     *
*                   THE RLSE COMMAND HAS COMPLETED PROCESSING.        *
*                                                                     *
* EXAMPLE      RELEASE SPACE FROM DATA SETS WEST.TEST.PDS AND         *
*              SS.TEMPLIB.  USER WEST IS LOGGED ON.                   *
*                                                                     *
*                   RLSE  (TEST.PDS 'SS.TEMPLIB')                     *
*                                                                     *
* ATTRIBUTES   REUSABLE                                               *
*              RE-ENTRANT                                             *
*              REFRESHABLE                                            *
*              RLSE MAY BE PLACED IN THE LINK PACK AREA               *
*                                                                     *
* FPL MACROS USED -                                                   *
*                                                                     *
*              $ENTER     ENTRY LINKAGE                               *
*              $RTRN      RETURN LINKAGE                              *
*              #TSOBLKS   CONSTRUCT TSO CONTROL BLOCKS                *
*              #TSOMSG    CONSTRUCT MESSAGE IN PUTLINE FORMAT         *
*                                                                     *
* IBM MACROS USED -                                                   *
*                                                                     *
*              OPEN       OPEN A DATA SET                             *
*              CLOSE      CLOSE A DATA SET                            *
*              DCB        CONSTRUCT A DATA CONTROL BLOCK              *
*              LINK       INVOKE A SERVICE ROUTINE                    *
*              PUTLINE    DISPLAY A MESSAGE AT THE TERMINAL           *
*              IKJPARM    BEGIN PARSE PARAMETER LIST                  *
*              IKJPOSIT   DEFINE A POSITIONAL PARAMETER               *
*              IKJIDENT   DEFINE A POSITIONAL PARAMETER               *
*              IKJKEYWD   DEFINE A KEYWORD PARAMETER                  *
*              IKJNAME    DEFINE A KEYWORD                            *
*              IKJSUBF    DEFINE A SUBFIELD                           *
*              IKJENDP    END PARSE PARAMETER LIST                    *
*              IKJDAP04   DEFINE SEARCH DAIR PARAMETER LIST           *
*              IKJDAP08   DEFINE ALLOCATE DAIR PARAMETER LIST         *
*              IKJDAP18   DEFINE FREE DAIR PARAMETER LIST             *
*                                                                     *
* SERVICE ROUTINES USED                                               *
*                                                                     *
*              PUTLINE    DISPLAY A LINE AT THE TERMINAL              *
*              PARSE      INTERPRET COMMAND OPERANDS                  *
*              DAIR       DYNAMIC ALLOCATION INTERFACE ROUTINE        *
*                                                                     *
* RETURN CODES                                                        *
*                                                                     *
*               0 - SUCCESSFUL                                        *
*               4 - NOT USED                                          *
*               8 - NOT USED                                          *
*              12 - NOT USED                                          *
*              16 - UNABLE TO PARSE OPERAND                           *
*                                                                     *
* AUTHOR                                                              *
*       GORDON P. WEST, 9-76.                                         *
*                                                                     *
* REGISTER ASSIGNMENTS -                                              *
*                                                                     *
*         0 - STANDARD LINKAGE                                        *
*         1 - STANDARD LINKAGE - COUNT FOR EX INSTRUCTIONS - WORK     *
*         2 - WORK REGISTER                                           *
*         3 - WORK REGISTER                                           *
*         4 - DAPB04 BASE REGISTER                                    *
*         5 - DAPB08 BASE REGISTER                                    *
*         6 - DAPB18 BASE REGISTER                                    *
*         7 - PDE POINTER                                             *
*         8 - PPL BASE REGISTER - PDE BASE REGISTER                   *
*         9 - DAPL BASE REGISTER                                      *
*        10 - IOPL BASE REGISTER                                      *
*        11 - CPPL BASE REGISTER                                      *
*        12 - PROGRAM BASE REGISTER                                   *
*        13 - SAVE AREA ADDRESS - WORK AREA BASE REGISTER             *
*        14 - STANDARD LINKAGE                                        *
*        15 - STANDARD LINKAGE                                        *
*                                                                     *
***********************************************************************
         TITLE 'UPDATE LOG'
***********************************************************************
*                                                                     *
* MODIFICATIONS                                                       *
*       TERRY E. MUSKOFF, 9-77.  CORRECTED BUG WHICH CAUSED A DATA    *
*       SET TO BE CREATED (AND NOT CATALOGUED) WHEN A DATA SET        *
*       WHICH WAS NOT IN THE CATALOG WAS SPECIFIED IN THE LIST.       *
*                                                                     *
*       TERRY E. MUSKOFF, 9-77.  ADDED THE VOLUME KEYWORD TO THE      *
*       COMMAND TO ALLOW IT TO BE USED ON DATA SETS WHICH ARE NOT     *
*       CATALOGUED.                                                   *
*                                                                     *
* 10/31/77   GORDON P. WEST (FPL) - USE DAIR CODE X'0004' (CATALOG    *
*            SEARCH) TO DETERMINE IF DATA SET EXISTS IF VOLUME        *
*            PARAMETER IS NOT SPECIFIED.                              *
*                                                                     *
*            CHANGE PUTLINE OUTPUT TYPE TO INFOR TO PERMIT USE        *
*            OF TEXT INSERTION FEATURE OF PUTLINE.                    *
*                                                                     *
***********************************************************************
         TITLE 'ENTRY CODING'
RLSE     $ENTER BASE=R12,RENT=DSECTLEN,SAVE=SAVEAREA
         TITLE 'SET UP TSO CONTROL BLOCKS'
***********************************************************************
*                                                                     *
*              SET UP TSO CONTROL BLOCKS                              *
*                                                                     *
***********************************************************************
         SPACE 2
         #TSOBLKS DSECT,ECB=RLSEECB,                                   +
               CPPL=(R11,R1),                                          +
               IOPL=(R10,RLSEIOPL,RLSEPTPB),                           +
               DAPL=(R9,RLSEDAPL),                                     +
               PPL=(R8,RLSEPPL,RLSEPCL,RLSEANS)
*--------BUILD PTPB AND OLD
         MVC   RLSEPTPB(PTPBLEN),MODPTPB
         XC    RLSEOLD(OLDLEN),RLSEOLD
         LA    R1,DSNINSRT              LOAD INSERT BLOCK ADDRESS
         ST    R1,OLDINS1               STORE IN OLD
         LA    R1,VOLINSRT              LOAD SECOND INSERT BLOCK ADDR
         ST    R1,OLDINS2
         EJECT
*--------SET UP DAPB'S
         LA    R1,RLSEPDSN              LOAD DSNAME FIELD ADDRESS
         ST    R1,RLSEDSN               SAVE IT
         LA    R4,DA04DAPB              LOAD SEARCH DAPB ADDRESS
         USING DAPB04,R4                DEFINE BASE REGISTER
         XC    DAPB04(DA04LEN),DAPB04   ZERO OUT CONTROL BLOCK
         MVC   DA04CD,=X'0004'          MOVE IN BLOCK CODE
         MVC   DA04PDSN,RLSEDSN         DSNAME POINTER
         LA    R5,DA08DAPB              LOAD ALLOCATE DAPB ADDRESS
         USING DAPB08,R5                DEFINE BASE REGISTER
         XC    DAPB08(DA08LEN),DAPB08   ZERO OUT CONTROL BLOCK
         MVC   DA08CD,=X'0008'          MOVE IN BLOCK CODE
         MVC   DA08PDSN,RLSEDSN         MOVE IN DSNAME ADDRESS
         MVC   DA08DDN,=CL8'RLSEDDN'    MOVE IN DDNAME - BELOW ALSO
         MVC   DA08UNIT,=CL8' '         BLANK OUT UNIT NAME
         MVC   DA08SER,=CL8' '          BLANK OUT SERIAL
         MVC   DA08MNM,=CL8' '          BLANK OUT MEMBER NAME
         MVC   DA08PSWD,=CL8' '         BLANK OUT PASSWORD
         MVI   DA08DSP1,DA08MOD         DISP=(MOD,KEEP,KEEP) - BELOW
         MVI   DA08DPS2,DA08KEEP                                ALSO
         MVI   DA08DPS3,DA08KEP
         MVI   DA08CTL,DA08RLSE         RELEASE EXCESS SPACE
         MVC   DA08ALN,=CL8' '          BLANK OUT ATTRIBUTE LIST NAME
         LA    R6,DA18DAPB              LOAD FREE DAPB ADDRESS
         USING DAPB18,R6                DEFINE BASE REGISTER
         XC    DAPB18(DA18LEN),DAPB18   ZERO OUT CONTROL BLOCK
         MVC   DA18CD,=X'0018'          MOVE IN BLOCK CODE
         XC    DA18PDSN,DA18PDSN        ZERO DSNAME ADDRESS POINTER
         MVC   DA18DDN,=CL8'RLSEDDN'    MOVE IN DDNAME - BELOW ALSO
         MVC   DA18MNM,=CL8' '          BLANK OUT MEMBER NAME
         MVC   DA18SCLS,=CL2' '         BLANK OUT SYSOUT CLASS
         MVI   DA18DPS2,DA18KEEP        DISP=KEEP
         MVI   DA18CTL,DA18PERM
         MVC   DA18JBNM,=CL8' '         BLANK OUT MEMBER NAME
*--------SET UP OPEN LIST FORM
         MVC   OPENLIST(OPENLEN),MODLOPEN
         TITLE 'PARSE COMMAND OPERANDS'
***********************************************************************
*                                                                     *
*              PARSE COMMAND OPERANDS                                 *
*                                                                     *
***********************************************************************
         SPACE 2
         LA    R1,PPL                   LOAD PPL ADDRESS
         LINK  EP=IKJPARS               PARSE THE OPERANDS
         LTR   R15,R15                  TEST PARSE RETURN CODE
         BNZ   ERRPARS
         L     R8,RLSEANS               LOAD ANSWER AREA ADDRESS
         USING RLSEPDL,R8               DEFINE BASE REGISTER
         TITLE 'PROCESS VOLUME SERIAL'
***********************************************************************
*                                                                     *
*              PROCESS VOLUME SERIAL                                  *
*                                                                     *
***********************************************************************
         SPACE 2
         TM    PVOL+6,X'80'             IS THERE A VOLUME SPECIFIED?
         BZ    NOVOL                    NO
         LH    R1,PVOL+4                YES - GET LENGTH
         LTR   R1,R1                    IS LENGTH NULL?
         BZ    NOVOL                    YES
         BCTR  R1,0                     REDUCE LENGTH BY 1
         LA    R2,DA08SER               GET OUTPUT ADDRESS
         L     R3,PVOL                  GET INPUT ADDRESS
         EX    R1,MOVENAME              MOVE THE VOLUME SERIAL NUMBER
         XC    VOLINSRT(4),VOLINSRT     CLEAR OFFSET IN MESSAGE
         MVC   VOLINSRT+4(6),DA08SER    COPY VOLUME SERIAL
         LA    R1,1+4(R1)               LENGTH = SERIAL + HEADER
         STH   R1,VOLINSRT              STORE LENGTH
NOVOL    DS    0H
         TITLE 'CONSTRUCT DATA SET NAME'
***********************************************************************
*                                                                     *
*              CONSTRUCT DATA SET NAME                                *
*                                                                     *
***********************************************************************
         LA    R7,DSNAME                LOAD PDE ADDRESS
SETUPNXT LA    R2,RLSEPDSN+2            LOAD DSNAME FIELD ADDRESS
         MVI   0(R2),C' '               BLANK OUT DSNAME
         MVC   1(43,R2),0(R2)
         MVI   DA08CTL,DA08RLSE         RLSE EXCESS SPACE
         TM    6(R7),X'40'              TEST FOR NAME IN QUOTES
         BNZ   MOVEREST
*--------HAVE DAIR APEND USERID TO DSNAME
         OI    DA04CTL,DA04UID          SET FLAG IN SEARCH DAPB
         OI    DA08CTL,DA08UID          SET FLAG IN ALLOC DAPB
*--------MOVE REMAINDER OF NAME
MOVEREST L     R3,0(R7)                 LOAD INPUT DSNAME ADDRESS
         LH    R1,4(R7)                 LOAD INPUT DSNAME LENGTH
         STH   R1,RLSEPDSN              STORE LENGTH
         BCTR  R1,0                     REDUCE LENGTH BY 1
         EX    R1,MOVENAME              COPY INPUT DSNAME
         XC    DSNINSRT(4),DSNINSRT     CLEAR OFFSET IN MESSAGE
         MVC   DSNINSRT+4(44),RLSEPDSN+2  COPY DSNAME
         LA    R1,1+4(R1)               LENGTH = DSN + HEADER
         STH   R1,DSNINSRT              STORE LENGTH
         SPACE 2
         TITLE 'MAKE SURE THE DATA SET REQUESTED EXISTS'
***********************************************************************
*                                                                     *
*              IF VOLUME IS SPECIFIED, ALLOCATE THE DATA SET TO       *
*              DETERMINE IF IT EXISTS.  IF VOLUME IS NOT SPECIFIED,   *
*              SEARCH THE CATALOG.                                    *
*                                                                     *
*              ALLOCATE THE DATA SET - DISP=(OLD,KEEP)                *
*                                                                     *
*              EXTRA ALLOCATION WITH DISP=OLD IS REQUIRED             *
*              BECAUSE ALLOCATION WITH DISP=MOD WILL CREATE           *
*              A NEW DATA SET IF IT DOES NOT ALREADY EXIST.           *
*                                                                     *
***********************************************************************
         SPACE 2
         TM    PVOL+6,X'80'             SEE IF VOLUME SPECIFIED
         BO    ALLOCOLD                 IF SO, DO ALLOCATE
*--------SEARCH CATALOG FOR DSNAME
         ST    R4,DAPLDAPB              STORE SEARCH DAPB ADDR IN DAPL
         LA    R1,DAPL                  DAPL ADDRESS TO REGISTER 1
         LINK  EP=IKJDAIR               LINK TO DAIR
         LTR   R15,R15                  TEST RETURN CODE
         BNZ   ERRDAIR
         B     ALLOCMOD
*--------ALLOCATE THE DATA SET DISP=OLD
ALLOCOLD MVI   DA08DSP1,DA08OLD         MAKE THE DISP=OLD
         MVC   DA08DDN,=CL8' '          CLEAR THE DDNAME
         ST    R5,DAPLDAPB              STORE DAPB ADDRESS IN DAPL
         LA    R1,DAPL                  LOAD DAPL ADDRESS
         LINK  EP=IKJDAIR               LINK TO DAIR
         LTR   R15,R15                  TEST RETURN CODE
         BZ    FREEOLD                  DATA SET EXISTS
         MVC   RLSEOLD,=F'3'            THREE TEXT SEGMENTS
         LA    R1,RLSE0004              LOAD MESSAGE ADDRESS
         ST    R1,OLDTEXT               STORE IN OLD
         MVC   DSNINSRT+2(2),MSG4DSN    MOVE IN OFFSET COUNT
         MVC   VOLINSRT+2(2),MSG4VOL
         PUTLINE OUTPUT=RLSEOLD,MF=(E,IOPL)   DISPLAY MESSAGE
         B     GETNEXT                  GO PROCESS NEXT DSNAME
         SPACE 2
FREEOLD  MVC   DA18DDN,DA08DDN          COPY OVER THE DDNAME
         ST    R6,DAPLDAPB              STORE IN DAPL
         LA    R1,DAPL                  LOAD DAPL ADDRESS
         LINK  EP=IKJDAIR               FREE THE FILE
         LTR   R15,R15                  TEST RETURN CODE
         BNZ   ERRDAIR
         TITLE 'RE-ALLOCATE THE DATA SET WITH DISP=MOD'
***********************************************************************
*                                                                     *
*              ALLOCATE THE DATA SET - DISP=(MOD,KEEP)                *
*                                                                     *
***********************************************************************
*--------SET UP ALLOCATE DAPB
ALLOCMOD MVI   DA08DSP1,DA08MOD         MAKE DISP=MOD
         MVC   DA08DDN,=CL8'RLSEDDN'    MOVE IN THE DDNAME
         MVC   DA18DDN,=CL8'RLSEDDN'    MOVE DDNAME TO FREE DAPB
         ST    R5,DAPLDAPB              STORE DAPB ADDRESS IN DAPL
         LA    R1,DAPL                  LOAD DAPL ADDRESS
         LINK  EP=IKJDAIR               LINK TO DAIR
         LTR   R15,R15                  TEST RETURN CODE
         BZ    TESTORG                  GOOD ALLOCATION
         C     R15,=F'20'               FILE IN USE?
         BNE   ERRDAIR                  NO - ALLOCATION ERROR
         ST    R6,DAPLDAPB              STORE IN DAPL
         LA    R1,DAPL                  LOAD DAPL ADDRESS
         LINK  EP=IKJDAIR               FREE THE FILE
         LTR   R15,R15                  TEST RETURN CODE
         BNZ   ERRDAIR
         ST    R5,DAPLDAPB              STORE IN DAPL
         LA    R1,DAPL                  LOAD DAPL ADDRESS
         LINK  EP=IKJDAIR               TRY TO ALLOC THE FILE AGAIN
         LTR   R15,R15                  TEST RETURN CODE
         BNZ   ERRDAIR
         EJECT
***********************************************************************
*                                                                     *
*              BE SURE DSORG IS PS OR PO                              *
*                                                                     *
***********************************************************************
TESTORG  TM    DA08DSO,X'40'            TEST FOR SEQUENTIAL
         BNZ   COPYDCB
         TM    DA08DSO,X'02'            TEST FOR PARTITIONED
         BNZ   COPYDCB
         MVC   RLSEOLD,=F'2'            TWO TEXT SEGMENTS
         LA    R1,RLSE0002              LOAD MESSAGE ADDRESS
         ST    R1,OLDTEXT               STORE IN OLD
         MVC   DSNINSRT+2(2),MSG2DSN    MOVE IN OFFSET COUNT
         PUTLINE OUTPUT=RLSEOLD,MF=(E,IOPL)   DISPLAY MESSAGE
         B     GETNEXT
*--------INITIALIZE DCB
COPYDCB  MVC   RLSEDCB(DCBLEN),PSDCB    COPY DCB
         TITLE 'OPEN AND CLOSE DATA SET TO RELEASE SPACE'
***********************************************************************
*                                                                     *
*              OPEN AND CLOSE DATA SET TO RELEASE SPACE               *
*                                                                     *
***********************************************************************
         SPACE
*--------OPEN THE DATA SET
         LA    R1,OPENLIST              LOAD ADDRESS OF OPEN LIST FORM
         LA    R2,RLSEDCB               LOAD DCB ADDRESS
         OPEN  ((R2),OUTPUT),MF=(E,(R1))     OPEN THE DATA SET
         TM    RLSEDCB+48,X'10'         SEE IF IT OPENED
         BNZ   CLOSE
         MVC   RLSEOLD,=F'2'            TWO TEXT SEGMENTS
         LA    R1,RLSE0003              LOAD MESSAGE ADDRESS
         ST    R1,OLDTEXT               STORE IN OLD
         MVC   DSNINSRT+2(2),MSG3DSN    MOVE IN OFFSET COUNT
         PUTLINE OUTPUT=RLSEOLD,MF=(E,IOPL)   DISPLAY MESSAGE
         B     FREE
*--------CLOSE THE DATA SET TO RELEASE SPACE
CLOSE    LA    R1,OPENLIST              LOAD ADDRESS OF OPEN LIST FORM
         CLOSE ((R2)),MF=(E,(R1))       THIS RELEASES FREE SPACE
*--------FREE THE DATA SET
FREE     ST    R6,DAPLDAPB              STORE DAPB ADDRESS IN DAPL
         LA    R1,DAPL                  LOAD DAPL ADDRESS
         LINK  EP=IKJDAIR               LINK TO DAIR
         LTR   R15,R15                  TEST RETURN CODE
         BNZ   ERRDAIR
*--------GET NEXT DSNAME
GETNEXT  L     R7,24(R7)                LOAD NEXT PDE ADDRESS
         C     R7,=X'FF000000'          TEST FOR LAST DSNAME
         BNE   SETUPNXT
         MVC   RLSEOLD,=F'1'            ONE TEXT SEGMENT
         LA    R1,RLSE0005              MESSAGE ADDRESS
         ST    R1,OLDTEXT               STORE INTO OLD
         PUTLINE OUTPUT=RLSEOLD,MF=(E,IOPL)
         B     NORMAL
         TITLE 'ERROR IN DYNAMIC ALLOCATION'
***********************************************************************
*                                                                     *
*              ERROR IN DYNAMIC ALLOCATION                            *
*                                                                     *
***********************************************************************
         SPACE 2
ERRDAIR  ST    R15,DAIRRC               STORE RETURN CODE
         LA    R1,DAPL                  LOAD DAPL ADDRESS
         ST    R1,DFDAPLP               STORE IN DAIRFAIL PARM LIST
         LA    R1,DAIRRC                LOAD RETURN CODE ADDRES
         ST    R1,DFRCP                 STORE IN DAIRFAIL PARM LIST
         LA    R1,MSGWTRAD              LOAD MESSAGE WRITER ADDRESS
         ST    R1,DFJEFF02              STORE IN DAIRFAIL PARM LIST
         XC    MSGWTRAD,MSGWTRAD        ZERO MESSAGE WRITER ADDRESS
         LA    R1,1                     SET UP CALLER ID
         STH   R1,ID
         LA    R1,ID                    LOAD ID ADDRESS
         ST    R1,DFIDP                 STORE IN DAIRFAIL PARM LIST
         LA    R1,DAIRFAIL              LOAD DAIRFAIL PARM LIST ADDR
         LINK  EP=IKJEFF18              LINK TO DAIRFAIL ROUTINE
         B     GETNEXT
         TITLE 'PARSE ERROR'
***********************************************************************
*                                                                     *
*              PARSE ERROR                                            *
*                                                                     *
***********************************************************************
         SPACE 2
ERRPARS  C     R15,=F'8'                SEE IF ATTENTION ENTERED
         BE    NORMAL
         MVC   RLSEOLD,=F'1'            ONE TEXT SEGMENT
         LA    R1,RLSE0001              MESSAGE ADDRESS
         ST    R1,OLDTEXT               STORE INTO OLD
         PUTLINE OUTPUT=RLSEOLD,MF=(E,IOPL)
         LA    R15,16                   SET RETURN CODE
         B     EXIT
         TITLE 'EXIT CODING'
***********************************************************************
*                                                                     *
*              END OF ROUTINE                                         *
*                                                                     *
***********************************************************************
         SPACE 2
NORMAL   SR    R15,R15                  LOAD RETURN CODE
EXIT     $RTRN RC=(R15),RENT=DSECTLEN
         TITLE 'DATA AREA - CONSTANTS'
***********************************************************************
*                                                                     *
*              CONSTANTS                                              *
*                                                                     *
***********************************************************************
         SPACE
MOVENAME MVC   0(0,R2),0(R3)            MOVE DSNAME
         SPACE
RLSE0001 #TSOMSG 'RLSE0001I UNABLE TO INTERPRET COMMAND'
         SPACE
RLSE0002 #TSOMSG 'RLSE0002I DATA SET  NOT SEQUENTIAL OR PARTITIONED'
MSG2DSN  DC    H'19'                    OFFSET FOR DSNAME INSERTION
         SPACE
RLSE0003 #TSOMSG 'RLSE0003I UNABLE TO OPEN '
MSG3DSN  DC    H'25'                    OFFSET FOR DSNAME INSERTION
         SPACE
RLSE0004 #TSOMSG 'RLSE0004I DATA SET  NOT ON VOLUME '
MSG4DSN  DC    H'19'                    OFFSET FOR DSNAME INSERTION
MSG4VOL  DC    H'34'                    OFFSET FOR VOLUME INSERTION
         SPACE
RLSE0005 #TSOMSG 'RLSE0005I RLSE DONE'
         SPACE
PSDCB    DCB   DDNAME=RLSEDDN,MACRF=PM,DSORG=PS
MODPTPB  PUTLINE MF=L
PTPBLEN  EQU   *-MODPTPB
MODLOPEN OPEN  (,),MF=L
OPENLEN  EQU   *-MODLOPEN
         SPACE
***********************************************************************
*                                                                     *
*              LITERAL POOL                                           *
*                                                                     *
***********************************************************************
         SPACE
         LTORG
         TITLE 'PARSE CONTROL BLOCKS'
***********************************************************************
*                                                                     *
*              PARSE CONTROL BLOCKS                                   *
*                                                                     *
***********************************************************************
         SPACE 2
RLSEPCL  IKJPARM DSECT=RLSEPDL
DSNAME   IKJPOSIT DSNAME,LIST,PROMPT='DATA SET NAME',                  +
               HELP=('THE NAME OF THE DATASET TO HAVE IT''S EXCESS DISK+
                SPACE RELEASED')
*
VOL      IKJKEYWD
         IKJNAME 'VOLUME',SUBFLD=SVOL
SVOL     IKJSUBF
PVOL     IKJIDENT 'SERIAL NUMBER',PROMPT='SERIAL NUMBER',              +
               MAXLNTH=6,FIRST=ALPHA,OTHER=ALPHANUM,                   +
               HELP=('THE 6 CHARACTER VOLUME SERIAL NUMBER',           +
               'THE SERIAL NUMBER (WHICH MUST START WITH A LETTER)',   +
               'THE SERIAL NUMBER WHICH APPLIES TO ALL DSNAMES IN THE L+
               IST')
         IKJENDP
         TITLE 'TSO CONTROL BLOCK DSECTS'
***********************************************************************
*                                                                     *
*              TSO CONTROL BLOCK DSECTS                               *
*                                                                     *
***********************************************************************
         SPACE 2
         IKJDAP04
DA04LEN  EQU   *-DAPB04                 DAPB LENGTH
         SPACE
         IKJDAP08
DA08LEN  EQU   *-DAPB08                 DAPB LENGTH
         SPACE
         IKJDAP18
DA18LEN  EQU   *-DAPB18                 DAPB LENGTH
         TITLE 'WORK AREA DSECT'
***********************************************************************
*                                                                     *
*              WORK AREA DSECT                                        *
*                                                                     *
***********************************************************************
         SPACE 2
RLSEDS   DSECT
SAVEAREA DS    18F                      SAVE AREA
RLSEDSN  DS    A
RLSEECB  DS    F                        EVENT CONTROL BLOCK
RLSEANS  DS    A                        PARSE ANSWER AREA ADDRESS
RLSEPDSN DS    H,CL44
DSNINSRT #TSOMSG ' ',LENGTH=44          DSNAME INSERTION BLOCK
VOLINSRT #TSOMSG ' ',LENGTH=6           VOLUME INSERTION BLOCK
OPENLIST OPEN  (,),MF=L                 OPEN CONTROL BLOCK LIST FORM
         SPACE
DAIRRC   DS    F                        DAIRFAIL PARAMETERS
MSGWTRAD DS    A
ID       DS    H
         SPACE
         DS    0F                       FULLWORD ALIGNMENT
DAIRFAIL EQU   *
DFDAPLP  DS    A                        ADDRESS OF DAPL
DFRCP    DS    A                        ADDRESS OF RETURN CODE
DFJEFF02 DS    A                        ADDRESS OF MESSAGE WRITER
DFIDP    DS    A                        ADDRESS OF IDENTIFIER
DFCPPLP  DS    A                        ADDRESS OF CPPL
         SPACE
RLSEDAPL DS    0F                       FULLWORD ALIGNMENT
         ORG   *+DAPLLEN
         SPACE
RLSEPTPB PUTLINE MF=L                   PUTLINE PARAMETER BLOCK
         SPACE
RLSEOLD  DS    F                        INSERTION BLOCK COUNT
OLDTEXT  DS    A                        POINTER TO MESSAGE TEXT
OLDINS1  DS    A                        POINTER TO FIRST INSERT BLOCK
OLDINS2  DS    A                        POINTER TO SECOND INSERT BLOCK
OLDLEN   EQU   *-RLSEOLD
         SPACE
RLSEIOPL DS    0F                       FULLWORD ALIGNMENT
         ORG   *+IOPLLEN
         SPACE
RLSEPPL  DS    0F                       FULLWORD ALIGNMENT
         ORG   *+PPLLEN
         SPACE
DA04DAPB DS    0F                       FULLWORD ALIGNMENT
         ORG   *+DA04LEN
         SPACE
DA08DAPB DS    0F                       FULLWORD ALIGNMENT
         ORG   *+DA08LEN
         SPACE
DA18DAPB DS    0F                       FULLWORD ALIGNMENT
         ORG   *+DA18LEN
         SPACE
RLSEDCB  DCB   DDNAME=RLSEDDN,MACRF=PM,DSORG=PS
         SPACE
DCBLEN   EQU   *-RLSEDCB                LENGTH OF DCB
DSECTLEN EQU   *-RLSEDS                 LENGTH OF WORK AREA
         END
