         TITLE 'DISCLAIMER - INSTALLATION INSTRUCTIONS'
***********************************************************************
*                                                                     *
*     THIS PROGRAM, DEVELOPED AT FPL OR SUPPLIED BY OTHER USERS       *
*     ON A NON-RESTRICTIVE BASIS, IS OF GENERAL INTEREST              *
*     SUBMITTED FOR UNRESTRICTED DISTRIBUTION.  THIS PROGRAM          *
*     HAS MET A BASIC SET OF PROGRAMMING AND DOCUMENTATION            *
*     STANDARDS, BUT MAY NOT HAVE BEEN PROGRAM TESTED IN ANY          *
*     FORMAL FASHION BY FPL.  THE USER IS EXPECTED TO MAKE THE        *
*     FINAL EVALUATION AS TO THE USEFULLNESS IN HIS OWN               *
*     ENVIRONMENT.                                                    *
*                                                                     *
*     FPL MAKES NO WARRANTY, EXPRESSED OR IMPLIED, INCLUDING, BUT     *
*     NOT LIMITED TO, THE IMPLIED WARRANTIES OR MERCHANTABILITY AND   *
*     FITNESS FOR A PARTICULAR PUTPOSE AS TO THE DOCUMENTATION,       *
*     FUNCTION, OR PERFORMANCE OF THESE PROGRAMS.                     *
*                                                                     *
*     ACCEPTANCE AND USE OF THIS PROGRAM CONSTITUTES A RELEASE        *
*     FROM LIABILITY OF FPL FOR ANY PROBLEMS USE OF THE PROGRAM       *
*     MAY CAUSE AT THE USER'S INSTALLATION.                           *
*                                                                     *
*     USERS ARE INVITED TO SUBMIT SUGGESTIONS OR ERROR DOCUMENTATION  *
*     TO FPL, HOWEVER, NO PROMISE CAN BE MADE THAT SUCH SUGGESTIONS   *
*     WILL BE IMPLEMENTED OR ERRORS CORRECTED.  SUBMIT COMMENTS TO:   *
*              COORDINATOR OF TECHNICAL SYSTEMS                       *
*              COMPUTER OPERATIONS DEPARTMENT                         *
*              FLORIDA POWER & LIGHT COMPANY - GENERAL OFFICE         *
*              P. O. BOX  529100                                      *
*              MIAMI, FLORIDA  33152                                  *
*                                                                     *
*     THIS PROGRAM IS MADE AVAILABLE BY FPL WITHOUT CHARGE OR         *
*     CONSIDERATION.  RECIPIENTS ARE FREE TO MAKE THIS PROGRAM        *
*     AVAILABLE TO OTHERS IN LIKE MANNER.  IT MAY NOT BE SOLD.        *
*                                                                     *
***********************************************************************
TAPEMAP  TITLE 'TAPE MAPPING PROGRAM'
***********************************************************************
*                                                                     *
* NAME         SS0104 ALIAS TAPEMAP                                   *
*                                                                     *
* FUNCTION     LIST THE CONTENTS OF A STANDARD OR NON-LABELLED TAPE.  *
*              INFORMATION PROVIDED CONSISTS OF:                      *
*                                                                     *
*               1.  FILE NUMBER.                                      *
*               2.  DATA SET NAME (SL ONLY).                          *
*               3.  RECORD FORMAT.                                    *
*               4.  RECORD LENGTH (SL ONLY).                          *
*               5.  BLOCK SIZE.                                       *
*               6.  NUMBER OF BLOCKS.                                 *
*               7.  USER LABEL COUNT (SL ONLY).                       *
*               8.  RECORDING DENSITY.                                *
*               9.  LENGTH OF FILE (IN FEET).                         *
*              10.  CUMULATIVE TAPE LENGTH (IN FEET).                 *
*              11.  FILE CREATION DATE (SL ONLY).                     *
*              12.  FILE EXPIRATION DATE (SL ONLY).                   *
*              13.  NAME OF JOB WHICH CREATED FILE (SL ONLY).         *
*              14.  NAME OF STEP WHICH CREATED FILE (SL ONLY).        *
*              15.  SECURITY CODE (SL ONLY).                          *
*              16.  VOLUME SEQUENCE NUMBER (SL ONLY).                 *
*                                                                     *
*              ITEMS INDICATED WITH SL ONLY ARE DISPLAYED ONLY FOR    *
*              STANDARD LABEL TAPES.                                  *
*                                                                     *
* DESCRIPTION  THE TAPE IS PROCESSED BY THE PROGRAM AS BLP.  IF THE   *
*              FIRST RECORD IS A VOL1 HEADER, THE TAPE IS CONSIDERED  *
*              STANDARD LABEL, OTHERWISE, IT IS CONSIDERED            *
*              NON-LABELLED.                                          *
*                                                                     *
*              FOR STANDARD LABEL TAPES, ALL INFORMATION DISPLAYED    *
*              FOR EACH FILE IS TAKEN FROM THE LABELS.  THE VOLUME    *
*              SERIAL IS TAKEN FROM THE VOL1 HEADER RECORD, AND THE   *
*              DENSITY DISPLAYED IN THE HEADER IS THE TRUE TAPE       *
*              RECORDING DENSITY.  A CHECK IS MADE TO SEE IF THE FILE *
*              SEQUENCE NUMBER AND DENSITY CODE TAKEN FROM THE LABEL  *
*              ARE CORRECT.  IF NOT, THEY ARE BRACKETED BY ><.  THE   *
*              DATA SET NAME FIELD CONTAINS ONLY 17 CHARACTERS.  THEY *
*              ARE THE LAST 17 CHARACTERS OF THE DATA SET NAME        *
*              SPECIFIED WHEN THE TAPE WAS CREATED.                   *
*                                                                     *
*              FOR NON-LABELLED TAPES, THE PROGRAM ATTEMPTS TO        *
*              IDENTIFY THE RECORD FORMAT AND BLKSIZE AS FOLLOWS:     *
*                                                                     *
*                   THE RECORD FORMAT IS DISPLAYED AS V IF THE FIRST  *
*                   HALFWORD OF EACH BLOCK IS EQUAL TO THE LENGTH OF  *
*                   THE BLOCK.  IF NOT, BUT ALL RECORDS ARE THE SAME  *
*                   LENGTH, OR ONLY THE LAST BLOCK IS SHORT, THE      *
*                   RECORD FORMAT IS INDICATED AS F (THIS IS ACTUALLY *
*                   FS FORMAT).  THE RECORD FORMAT IS DISPLAYED AS U  *
*                   IF THE ABOVE CONTIDIONS ARE NOT MET.              *
*                                                                     *
*                   BLKSIZE IS GIVEN AS THE LARGEST BLOCK READ.       *
*                                                                     *
*              FOR BOTH STANDARD AND NON-LABELLED TAPES, THE FOOTAGE  *
*              CALCULATIONS ARE BASED ON THE MAXIMUM BLOCK SIZE,      *
*              NOMINAL INTERBLOCK GAP LENGTH, AND THE TRUE TAPE       *
*              DENSITY.                                               *
*                                                                     *
*              PROCESSING IS TERMINATED BY A DOUBLE TAPE MARK.        *
*                                                                     *
* ENVIRONMENT  OS/VS2, OS/MVT                                         *
*              APF AUTHORIZED (MVS)                                   *
*              BACKGROUND                                             *
*                                                                     *
* INPUT        THE ONLY INPUT SOURCE IS THE TAPE TO BE MAPPED.        *
*                                                                     *
* OUTPUT       OUTPUT CONSISTS OF A LISTING OF THE TAPE CONTENTS.     *
*                                                                     *
*              FIELD DESCRIPTIONS (HEADER)                            *
*                                                                     *
*                   VOLUME SERIAL - THE VOLUME SERIAL OF THE TAPE     *
*                        BEING MAPPED.  FOR STANDARD LABEL TAPES, THE *
*                        SERIAL IS OBTAINED FROM THE VOL1 HEADER      *
*                        RECORD.  FOR NON-LABELLED TAPES, IT IS THE   *
*                        SERIAL NUMBER SPECIFIED IN THE TAPE DD       *
*                        STATEMENT.                                   *
*                                                                     *
*                   DENSITY - THIS IS THE TRUE TAPE RECORDING DENSITY *
*                        EXPRESSED AS BOTH A CODE (0-4) AND AS BPI.   *
*                                                                     *
*                   LABEL TYPE - DEFINES THE LABEL TYPE OF THE TAPE.  *
*                        IT IS EITHER STANDARD, NON-LABELLED, OR LTM. *
*                        LTM INDICATES A NON-LABELLED TAPE WITH A     *
*                        LEADING TAPE MARK.                           *
*                                                                     *
*                   OWNER ID - THE OWNER ID IS TAKEN FROM THE VOL1    *
*                        HEADER OF A STANDARD LABEL TAPE.  IT IS      *
*                        BLANK FOR A NON-LABELLED TAPE.               *
*                                                                     *
*              FIELD DESCRIPTIONS (DATA LINES)                        *
*                                                                     *
*                   FILE NUMBER - THE FILE SEQUENCE NUMBER.  FOR      *
*                        STANDARD LABEL TAPES IT IS OBTAINED FROM THE *
*                        HDR1 LABEL.  IF THIS VALUE DOES NOT AGREE    *
*                        WITH THE COUNT KEPT BY THE PROGRAM, IT IS    *
*                        BRACKETED BY ><.                             *
*                                                                     *
*                   DATA SET NAME - THE LAST 17 CHARACTERS OF THE     *
*                        DATA SET NAME SPECIFIED WHEN THE DATA SET    *
*                        WAS CREATED.  IT IS OBTAINED FROM THE HDR1   *
*                        RECORD OF A STANDARD LABEL TAPE AND IS NOT   *
*                        PRINTED FOR NON-LABELLED TAPES.              *
*                                                                     *
*                   RECFM - RECORD FORMAT.  FOR STANDARD LABEL TAPES, *
*                        THIS VALUE IS OBTAINED FROM THE HDR2 LABEL.  *
*                        FOR NON-LABELLED TAPES, IT IS V IF THE FIRST *
*                        HALFWORD OR EACH RECORD EQUALS THE LENGTH OF *
*                        THE RECORD.  IF NOT, IT IS F IF ALL BLOCKS   *
*                        ARE THE SAME LENGTH OR ALL BLOCKS ARE THE    *
*                        SAME LENGTH EXCEPT THE LAST BLOCK WHICH IS   *
*                        SHORTER.  IT IS U IF THE ABOVE CONDITIONS    *
*                        ARE NOT MET.                                 *
*                                                                     *
*                   LRECL - LOGICAL RECORD LENGTH.  FOR STANDARD      *
*                        LABEL TAPES THIS VALUE IS OBTAINED FROM THE  *
*                        HDR2 LABEL.  IT IS NOT PROVIDED FOR          *
*                        NON-LABELLED TAPES.                          *
*                                                                     *
*                   BLKSIZE - MAXIMUM BLOCK (PHYSICAL RECORD) SIZE.   *
*                        FOR STANDARD LABEL TAPES, THIS VALUE IS      *
*                        OBTAINED FROM THE HDR2 LABEL.  FOR           *
*                        NON-LABELLED TAPES, IT IS THE SIZE OF THE    *
*                        LARGEST BLOCK READ.                          *
*                                                                     *
*                   BLOCKS - THE NUMBER OF BLOCKS IN THE FILE.  FOR   *
*                        STANDARD LABEL TAPES, THIS VALUE IS OBTAINED *
*                        FROM THE EOF1 OR EOV1 LABEL.  FOR            *
*                        NON-LABELLED TAPES, IT IS THE NUMBER OF      *
*                        BLOCKS READ.                                 *
*                                                                     *
*                   UL - USER LABEL COUNT.  THIS VALUE IS NOT PRINTED *
*                        FOR NON-LABELLED TAPES.                      *
*                                                                     *
*                   DEN - TAPE DENSITY.  FOR STANDARD LABEL TAPES,    *
*                        THIS VALUE IS OBTAINED FROM THE HDR2 LABEL.  *
*                        IF IT DOES NOT AGREE WITH THE TRUE TAPE      *
*                        DENSITY AS SHOWN IN THE HEADER LINE, IT IS   *
*                        BRACKETED BY ><.  FOR NON-LABELLED TAPES,    *
*                        THIS IS THE TRUE DENSITY.                    *
*                                                                     *
*                   F.  FT.  - NUMBER OF FEET IN THE FILE.  THIS      *
*                        VALUE IS BASED ON THE TRUE DENSITY, BLOCK    *
*                        COUNT, MAXIMUM BLOCK SIZE, AND NOMINAL       *
*                        INTERBLOCK GAP SIZES.                        *
*                                                                     *
*                   R.  FT.  - ACCUMULATED REEL FOOTAGE.              *
*                                                                     *
*                   CR.  DATE - THE DATE THE FILE WAS CREATED.  THIS  *
*                        VALUE IS OBTAINED FROM THE HDR1 LABEL AND IS *
*                        NOT PROVIDED FOR NON-LABELLED TAPES.         *
*                                                                     *
*                   EX.  DATE - THE EXPIRATION DATE.  THIS VALUE IS   *
*                        OBTAINED FROM THE HDR1 LABEL AND IS NOT      *
*                        PROVIDED FOR NON-LABELLED TAPES.             *
*                                                                     *
*                   JOBNAME - NAME OF THE JOB WHICH CREATED THE FILE. *
*                        THIS VALUE IS OBTAINED FROM THE HDR2 LABEL   *
*                        AND IS NOT PROVIDED FOR NON-LABELLED TAPES.  *
*                                                                     *
*                   STEPNAME - THE NAME OF THE STEP WHICH CREATED THE *
*                        FILE.  THIS VALUE IS OBTAINED FROM THE HDR2  *
*                        LABEL AND IS NOT PROVIDED FOR NON-LABELLED   *
*                        TAPES.                                       *
*                                                                     *
*                   SEC - SECURITY INDICATOR.  THIS VALUE IS OBTAINED *
*                        FROM THE HDR1 LABEL AND IS NOT PROVIDED FOR  *
*                        NON-LABELLED TAPES.THE MEANING OF THE CODES  *
*                        ARE:                                         *
*                        0 - NO SECURITY.                             *
*                        1 - READ, WRITE, DELETE SECURITY.            *
*                        3 - WRITE AND DELETE SECURITY.               *
*                                                                     *
*                   VSEQ - VOLUME SEQUENCE NUMBER.  THIS VALUE IS     *
*                        OBTAINED FROM THE HDR1 LABEL AND IS THE      *
*                        ORDER OF THE VOLUME WITHIN A MULTI-VOLUME    *
*                        GROUP CREATED AT THE SAME TIME.              *
*                                                                     *
* CONSIDERATIONS                                                      *
*                                                                     *
*              ABEND CODES:                                           *
*                                                                     *
*                   U1000 - SYSPRINT DD STATEMENT MISSING (NO DUMP).  *
*                                                                     *
*                   U1001 - PROCESSING ERROR.  THIS ABEND WILL BE     *
*                        PRECEEDED BY AN ERROR MESSAGE TO SYSPRINT    *
*                        AND WILL PRODUCE A DUMP.                     *
*                                                                     *
*              ERROR MESSAGES:                                        *
*                                                                     *
*                   UNABLE TO OPEN TAPE DD STATEMENT                  *
*                        THE TAPE DD STATEMENT FAILED TO OPEN.  THE   *
*                        RUN TERMINATES WITH CONDITION CODE 16.  NO   *
*                        DUMP IS PRODUCED.                            *
*                                                                     *
*                   PERMANENT I/O ERROR:  XXXXXXXXXX                  *
*                        A PERMANENT I/O ERROR WAS DETECTED.  THE     *
*                        DATA REPRESENTED BY XXXXXXXXXX IS PROVIDED   *
*                        BY THE SYNAD ROUTINE.  SEE THE SYNADAF MACRO *
*                        DESCRIPTION FOR A DESCRIPTION OF THIS DATA.  *
*                        THIS MESSAGE IS FOLLOWED BY A U1001 ABEND.   *
*                                                                     *
*                   TAPE MARK EXPECTED, NOT FOUND                     *
*                        A TAPE MARK WAS EXPECTED AT THE END OF THE   *
*                        DATA FILE, BUT WAS NOT DETECTED.  THIS       *
*                        MESSAGE IS FOLLOWED BY A U1001 ABEND.        *
*                                                                     *
*                   UNEXPECTED TAPE MARK ENCOUNTERED ATTEMPTING TO    *
*                   READ XXXX RECORD                                  *
*                        DURING PROCESSING OF A STANDARD LABEL TAPE,A *
*                        TAPE MARK WAS DETECTED DURING AN ATTEMPT TO  *
*                        READ THE RECORD TYPE DEFINED BY XXXX.  THIS  *
*                        MESSAGE IS FOLLOWED BY A U1001 ABEND.        *
*                                                                     *
*                   XXXX RECORD TYPE EXPECTED, NOT FOUND              *
*                        DURING PROCESSING OF A STANDARD LABEL TAPE,  *
*                        RECORD TYPE XXXX WAS EXPECTED, BUT WAS NOT   *
*                        FOUND.  THIS MESSAGE IS FOLLOWED BY A U1001  *
*                        ABEND.                                       *
*                                                                     *
* PARAMETERS   THIS PROGRAM USES NO PARAMETERS.                       *
*                                                                     *
* EXECUTION    DDNAMES                                                *
*                                                                     *
*              TAPE     DEFINES THE TAPE TO BE MAPPED.  ONLY UNIT AND *
*                       VOLUME SERIAL ARE REQUIRED.  THE VOLUME       *
*                       SERIAL IS USED IN THE MESSAGE TO THE OPERATOR *
*                       TO MOUNT THE TAPE.  IF A FILE NUMBER OTHER    *
*                       THAN 1 IS SPECIFIED, MAPPING BEGINS AT THE    *
*                       FILE SPECIFIED AND THE TAPE IS TREATED AS     *
*                       NON-LABELLED.                                 *
*                                                                     *
*              SYSPRINT DEFINES THE OUTPUT LISTING DATA SET.          *
*                                                                     *
* EXAMPLE                                                             *
*                                                                     *
*              //TMAP   EXEC  PGM=TAPEMAP                             *
*              //SYSPRINT DD  SYSOUT=*                                *
*              //TAPE     DD  UNIT=TAPE,VOL=SER=VOLSER                *
*              //SYSUDUMP DD  SYSOUT=*                                *
*                                                                     *
* FPL MACROS USED  (IN MAINLINE OR SUBROUTINES)                       *
*              $ENTER   - ENTRY LINKAGE                               *
*              $RTRN    - RETURN LINKAGE                              *
*              $CALL    - INVOKE A SUBROUTINE                         *
*                                                                     *
* IBM MACROS USED  (IN MAINLINE OR SUBROUTINES)                       *
*              ABEND    - ABNORMAL TERMINATE                          *
*              CHECK    - WAIT FOR I/O COMPLETION                     *
*              CLOSE    - CLOSE A DATA FILE                           *
*              CNTRL    - POSITION TAPE                               *
*              DCB      - DEFINE A DATA CONTROL BLOCK                 *
*              EXCP     - EXECUTE CHANNEL PROGRAM (PHYSICAL I/O)      *
*              EXTRACT  - OBTAIN TIOT ADDRESS                         *
*              OPEN     - OPEN A DATA FILE                            *
*              PUT      - PRINT A DATA RECORD                         *
*              RDJFCB   - READ JOB FILE CONTROL BLOCK                 *
*              READ     - READ A BLOCK FROM TAPE                      *
*              SYNADAF  - ANALYZE SYNAD ERROR                         *
*              SYNALRLS - RELEASE SYNAD WORK AREA                     *
*              TIME     - TIME                                        *
*              WAIT     - WAIT                                        *
*                                                                     *
* AUTHOR       THIS PROGRAM WAS BASED ON A PROGRAM WRITTEN BY         *
*              C. L. TURNER (UMSL) AND RECEIVED FROM LSU.             *
*              THE ORIGINAL PROGRAM INCLUDED MODIFICATIONS BY         *
*              R. NESTOR,  P. J. CAUDLL,  E. R. VANCE, (UMSL),        *
*              AND ERIC STRATMANN (LSU DEPT OF EXP. STAT.).           *
*                                                                     *
*              IT WAS RE-WRITTEN BY GORDON P. WEST OF FLORIDA         *
*              POWER & LIGHT COMPANY TO INCLUDE ADDITIONAL COMMENTS,  *
*              MNEMONIC REGISTER NOTATION, 6250 BPI SUPPORT,          *
*              LTM SUPPORT, REVISED OUTPUT FORMAT, CONSOLIDATION OF   *
*              NL AND SL SUBROUTINES, AUTOMATIC BLP SPECIFICATION     *
*              (IF NOT SPECIFIED IN JCL), AND A FEW OTHER MINOR       *
*              GOODIES.                                               *
*                                                                     *
* REGISTER USAGE                                                      *
*                                                                     *
*              R0  - LINKAGE                                          *
*              R1  - LINKAGE                                          *
*              R2  - FILE COUNTER                                     *
*              R3  - LINE COUNTER                                     *
*              R4  - NUMBER OF BLOCK SIZE CHANGES (NL TAPES)          *
*              R5  - BLOCK COUNT (NL TAPES) / USER LABEL COUNT (SL)   *
*              R6  - NOT USED                                         *
*              R7  - NOT USED                                         *
*              R8  - NOT USED                                         *
*              R9  - NOT USED                                         *
*              R10 - LINE INCREMENT                                   *
*              R11 - LINE LIMIT                                       *
*              R12 - PROGRAM BASE REGISTER                            *
*              R13 - SAVE AREA ADDRESS - DATA BASE REGISTER           *
*              R14 - LINKAGE                                          *
*              R15 - LINKAGE                                          *
*                                                                     *
***********************************************************************
         SPACE 2
***********************************************************************
*                                                                     *
* UPDATE LOG                                                          *
*                                                                     *
* 03/07/78     EOD AFTER VOL1 WILL NOW RESULT IN UNEXPECTED TAPE      *
*              MARK                                                   *
*                                                                     *
***********************************************************************
         TITLE 'LINKAGE EDITOR CONTROL RECORDS'
***********************************************************************
*                                                                     *
*        THE FOLLOWING PUNCH STATEMENT(S) CAUSE LINKAGE EDITOR        *
*        CONTROL STATEMENTS TO BE INCLUDED IN THE OBJECT OUTPUT.      *
*                                                                     *
*        IF MESSAGE IEW0731 IS GENERATED (ALIAS NAME MATCHES MEMBER   *
*        NAME) IT MAY BE IGNORED'                                     *
*                                                                     *
***********************************************************************
*
         PUNCH '  ALIAS TAPEMAP  &SYSDATE  &SYSTIME     IGNORE IEW0731'
         PUNCH '  SETCODE AC(1)            REMOVE IF NOT MVS'
         TITLE 'ENTRY LINKAGE'
SS0104   $ENTER BASE=R12,                                              +
               SAVE=SAVE
         USING SAVE,R13
         TITLE 'OPEN FILES'
***********************************************************************
*                                                                     *
*        OPEN FILES                                                   *
*                                                                     *
***********************************************************************
         SPACE
         OPEN  (SYSPRINT,OUTPUT)       OPEN PRINT FILE
         TM    SYSPRINT+48,X'10'       TEST FOR SUCCESSFUL OPEN
         BO    GETDEN
         ABEND 1000
GETDEN   $CALL EP=DENTAPE,             GET TRUE TAPE DENSITY           +
               PARAM=(DENSITY,FILENO)
         LTR   R15,R15                 TEST RETURN CODE
         BZ    OPENTAPE
         PUT   SYSPRINT,NOTAPE         DISPLAY ERROR MESSAGE
         CLOSE SYSPRINT
         LA    R15,16                  SET CONDITION CODE 16
         B     RETURN
OPENTAPE OPEN  (TAPE,INPUT)            OPEN TAPE TO BE MAPPED
         TITLE 'INITIALIZATION'
***********************************************************************
*                                                                     *
*        INITIALIZATION                                               *
*                                                                     *
***********************************************************************
         SPACE
         LA    R3,99                   LINE COUNT - FORCE NEW PAGE
         LA    R10,1                   LINE COUNT INCREMENT
         LA    R11,50                  DATA LINE LIMIT
         LH    R2,FILENO               INITIALIZE FILE NUMBER
         $CALL EP=WKDATE,              GET CURRENT DATE AND TIME       +
               PARAM=OUTDATE
         XC    CUMTOTAL,CUMTOTAL       ZERO OUT CUMTOTAL
         XC    USERLBLS,USERLBLS       ZERO OUT USER LABEL COUNT
         MVC   DEN,DENSITY             COPY DENSITY TO HEADER
         SR    R1,R1                   SET BPI CODE
         IC    R1,DENSITY
         N     R1,=X'0000000F'         ISOLATE DIGIT
         SLA   R1,2                    MULTIPLY BY 4
         LA    R1,DENTABLE(R1)         POINT TO DENSITY IN BPI
         MVC   BPI,0(R1)               COPY INTO TITLE
         TITLE 'VOL1 HEADER PROCESSING'
***********************************************************************
*                                                                     *
*        VOL1 HEADER PROCESSING                                       *
*                                                                     *
*             VOLUME SERIAL                                           *
*             OWNER ID                                                *
*                                                                     *
***********************************************************************
         SPACE
         MVC   EODAD,=AL3(LTM)         SET EOD ADDRESS
         READ  TAPEIN,                 READ VOL1 HEADER                +
               SF,                                                     +
               MF=E
         CHECK TAPEDECB                WAIT FOR COMPLETION
         LH    R1,DCBLRECL             LOAD RECORD LENGTH
         ST    R1,RECLEN               SAVE IT
         CLC   RECLEN,=F'80'           TEST FOR 80 BYTE RECORD
         BNE   NONLABEL
         CLC   VOLID,=C'VOL1'          TEST FOR VOL1 HEADER
         BNE   NONLABEL
         MVI   LABELTYP,C'S'           INDICATE STANDARD LABEL
         MVC   LABEL,=CL12'  STANDARD  '
         MVC   OUTVOL,VOLSER           COPY VOLUME SERIAL
         MVC   OUTOWNER,VOLOWNER       COPY OWNER ID
         TITLE 'HDR1 PROCESSING'
***********************************************************************
*                                                                     *
*        HDR1 PROCESSING                                              *
*                                                                     *
*             FILE SEQUENCE NUMBER                                    *
*             DSNAME                                                  *
*             VOLUME SEQUENCE NUMBER                                  *
*             CREATION DATE                                           *
*             EXPIRATION DATE                                         *
*             SECURITY CODE                                           *
*             VOLUME SEQUENCE NUMBER                                  *
*                                                                     *
***********************************************************************
         SPACE
         MVC   EODAD,=AL3(UTM)         RESET EOD ADDRESS AFTER VOL1
READHDR1 MVC   RECTYPE,=C'HDR1'        SET RECORD TYPE EXPECTED
         READ  TAPEIN,                 READ HDR1 RECORD                +
               SF,                                                     +
               MF=E
         CHECK TAPEDECB                WAIT FOR COMPLETION
         MVC   EODAD,=AL3(UTM)         RESET EOD ADDRESS
         CLC   HDRID,RECTYPE           TEST FOR HDR1
         BNE   BADREC
         MVC   OUTDSN,DSNAME           MOVE THE DSN
         MVC   OUTVSEQN,VOLSEQ         MOVE VOL.SEQ. #
         PACK  WORK,DSSEQ
         CVB   R1,DWORK                CONVERT FILE NUMBER TO BINARY
         STH   R1,FILENO               STORE IN FOOTAGE WORK AREA
         MVC   VORK,PATTRN
         ED    VORK,WORK
         MVC   OUTFILE,VORK+4          MOVE FILE #
         CR    R1,R2                   COMPARE FILE # IN LABEL TO COUNT
         BE    GETCRDAT
         MVI   OUTFILE-1,C'>'          CALL ATTENTION TO DIFFERENCE
         MVI   OUTFILE+4,C'<'
GETCRDAT PACK  DATEWORK,CRDATE+1(5)    PACK CREATION DATE
         BAL   R14,GDATE               CONVERT TO MM/DD/YY
         MVC   OUTCRDAT,MMDDYY         COPY TO OUTPUT LINE
         PACK  DATEWORK,EXDATE+1(5)    PACK EXPIRATION DATE
         BAL   R14,GDATE               CONVERT TO MM/DD/YY
         MVC   OUTEXDAT,MMDDYY         COPY TO OUTPUT LINE
         MVC   OUTSEC,SECURITY         COPY SECURITY INDICATOR
         TITLE 'HDR2 PROCESSING'
***********************************************************************
*                                                                     *
*        HDR2 PROCESSING                                              *
*                                                                     *
*             RECFM                                                   *
*             LRECL                                                   *
*             BLKSIZE                                                 *
*             JOBNAME                                                 *
*             STEPNAME                                                *
*                                                                     *
***********************************************************************
         SPACE
         MVC   RECTYPE,=C'HDR2'        INDICATE RECORD TYPE EXPECTED
         READ  TAPEIN,                 READ HDR2 RECORD                +
               SF,                                                     +
               MF=E
         CHECK TAPEDECB                WAIT FOR COMPLETION
         CLC   HDRID,RECTYPE           TEST FOR HDR2
         BNE   BADREC
         MVC   OUTDEN,DENLABEL         COPY DENSITY FROM LABEL
         CLC   DEN,DENLABEL            SEE IF IT IS CORRECT
         BE    PACKBLK
         MVI   OUTDEN-1,C'>'           CALL ATTENTION TO DIFFERENCE
         MVI   OUTDEN+1,C'<'
PACKBLK  PACK  WORK,BLKSIZE            BLOCK SIZE
         CVB   R1,DWORK                CONVERT TO BINARY
         ST    R1,BLKSZE               SAVE IN FOOTAGE WORK AREA
         MVC   VORK,PATTRN
         ED    VORK,WORK
         MVC   OUTBLOCK,VORK+3         MOVE BLOCKSIZE
         PACK  WORK,LRECL              LRECL
         MVC   VORK,PATTRN
         ED    VORK,WORK
         MVC   OUTLRECL,VORK+3         MOVE LRECL
         MVC   OUTJOBN,JOBNAME         COPY JOBNAME
         MVC   OUTSTEP,STEPNAME        COPY STEPNAME
         SPACE
         LA    R1,OUTRECFM             LOAD THE ADDR OF RECFM
         MVC   0(1,R1),RECFM           MOVE IN THE FORMAT
         LA    R1,1(R1)                INCREMENT OUTPUT POINTER
         CLI   BLOCKING,C'B'           TEST FOR BLOCKED
         BNE   GBS
         MVI   0(R1),C'B'              INDICATE BLOCKED
         LA    R1,1(R1)                INCREMENT OUTPUT POINTER
         B     GBA
GBS      CLI   BLOCKING,C'S'           TEST FOR SPANNED OR STANDARD
         BNE   GBR
         MVI   0(R1),C'S'              INDICATE SPANNED OR STANDARD
         LA    R1,1(R1)                INCREMENT OUTPUT POINTER
         B     GBA
GBR      CLI   BLOCKING,C'R'           TEST FOR B AND S
         BNE   GBA
         MVC   0(2,R1),=C'BS'          INDICATE BS
         LA    R1,2(R1)                INCREMENT OUTPUT POINTER
GBA      MVC   0(1,R1),CC              CONTROL CHAR TYPE, IF ANY
         TITLE 'READ PAST USER HEADER LABELS IF ANY'
***********************************************************************
*                                                                     *
*        READ THROUGH USER LABELS IF ANY ARE PRESENT                  *
*                                                                     *
***********************************************************************
         SPACE
         MVC   EODAD,=AL3(CNTRL)       RESET EOD ADDRESS
         SR    R5,R5                   ZERO USER LABEL COUNT
READUHL  READ  TAPEIN,                 READ THROUGH USER LABELS        +
               SF,                                                     +
               MF=E
         CHECK TAPEDECB                WAIT FOR COMPLETION
         LA    R5,1(R5)                COUNT A USER LABEL
         B     READUHL
         TITLE 'FORWARD SPACE PAST DATA RECORDS'
***********************************************************************
*                                                                     *
*        FORWARD SPACE PAST DATA RECORDS                              *
*                                                                     *
***********************************************************************
         SPACE
CNTRL    ST    R5,USERLBLS             SAVE USER LABEL COUNT
         CVD   R5,DWORK                CONVERT TO DECIMAL
         MVC   VORK,PATTRN             MOVE IN EDIT PATTERN
         ED    VORK,WORK               EDIT UL COUNT
         MVC   OUTUL,VORK+7            COPY TO OUTPUT LINE
         CNTRL TAPE,                   HIGH SPEED PAST THE DATA        +
               FSM
         SPACE
         MVC   EODAD,=AL3(READEOF)     RESET EOD ADDRESS
         READ  TAPEIN,                 READ TAPE MARK                  +
               SF,                                                     +
               MF=E
         CHECK TAPEDECB                WAIT FOR COMPLETION
         PUT   SYSPRINT,NULINE         PRINT WHAT DATA WE'VE GOT
         PUT   SYSPRINT,NOTMK          INDICATE NO TAPE MARK
         B     ABEND                   QUIT
         TITLE 'COMPLETE OUTPUT LINE AND PRINT'
***********************************************************************
*                                                                     *
*        COMPLETE OUTPUT LINE AND PRINT                               *
*                                                                     *
***********************************************************************
         SPACE
READEOF  MVC   EODAD,=AL3(UTM)         RESET EOD ADDRESS
         MVC   RECTYPE,=C'EOF1'        INDICATE RECORD EXPECTED
         READ  TAPEIN,                 READ EOF1                       +
               SF,                                                     +
               MF=E
         CHECK TAPEDECB                WAIT FOR COMPLETION
         CLC   HDRID,RECTYPE           TEST FOR EOF1
         BE    EOF1REC
         CLC   HDRID,=C'EOV1'          IT MIGHT BE AN EOV INSTEAD
         BNE   BADREC
EOF1REC  PACK  WORK,BLKCOUNT           CONVERT NUMBER OF BLOCKS
         CVB   R1,DWORK
         ST    R1,NUMBLKS              SAVE BLOCK COUNT
         MVC   VORK,PATTRN
         ED    VORK,WORK
         MVC   OUTNUMBL,VORK+2         COPY TO OUTPUT LINE
         $CALL EP=FOOTAGE,             GET FILE AND REEL FOOTAGE       +
               PARAM=LABELTYP
         MVC   OUTFFT,FILEFT+2         COPY IN FILE FOOTAGE
         MVC   OUTRFT,REELFT+2         COPY IN REEL FOOTAGE
         BXLE  R3,R10,PUTLINE          INCREMENT LINE COUNT AND TEST
         AP    PAGENO,=P'1'            INCREMENT PAGE NUMBER
         MVC   PAGE,=X'40202120'       MOVE IN EDIT MASK
         ED    PAGE,PAGENO             EDIT IN PATE NUMBER
         PUT   SYSPRINT,HEADER1        PRINT HEADERS
         PUT   SYSPRINT,HEADER2
         PUT   SYSPRINT,LINE1
         PUT   SYSPRINT,HEADER3
         LA    R3,1                    RESET LINE COUNT
         MVI   NULINE,C'0'             MAKE IT DOUBLE SPACE FIRST LINE
PUTLINE  PUT   SYSPRINT,NULINE         WRITE OUT LINE W/ TAPE FILE INFO
         MVI   NULINE,C' '             BLANK OUT OUTPUT LINE
         MVC   NULINE+1(132),NULINE
         LA    R2,1(R2)                INCREMENT FILE COUNTER
         CLC   DATA(4),=C'EOV1'        IS LABEL EOV1 ?
         BNE   READEOF2                IF NOT THEN READ NEW RECORD
         PUT   SYSPRINT,MULTVOL        IF SO THEN TELL THE USER
         B     EOV                     FORCE END OF VOLUME
READEOF2 MVC   EODAD,=AL3(EOF)         RESET EOD ADDRESS
         TITLE 'PASS THROUGH TRAILER RECORDS'
***********************************************************************
*                                                                     *
*        PASS THROUGH TRAILER RECORDS                                 *
*                                                                     *
***********************************************************************
         SPACE
READEND  READ  TAPEIN,                 READ TO TAPE MARK               +
               SF,                                                     +
               MF=E
         CHECK TAPEDECB                WAIT FOR COMPLETION
         B     READEND
         SPACE
EOF      MVC   EODAD,=AL3(EOV)         RESET EOD ADDRESS
         B     READHDR1                GO TO READ HDR1
         TITLE 'LEADING TAPE MARK PROCESSING'
***********************************************************************
*                                                                     *
*        LEADING TAPE MARK                                            *
*                                                                     *
*        FILE 1 HAS NO RECORDS, TREAT AS NON-LABELLED                 *
*                                                                     *
***********************************************************************
         SPACE
LTM      MVI   LABELTYP,C'N'           TREAT AS NON-LABELLED
         MVC   LABEL,=CL12'    LTM     '
         $CALL EP=TAPEVOL,             GET TAPE SERIAL                 +
               PARAM=OUTVOL
         SR    R4,R4                   NO BLOCK SIZE CHANGES
         SR    R5,R5                   BLOCK COUNT
         XC    BLKSZE,BLKSZE           BLOCK SIZE
         B     ENDFILE                 JOIN NON-LABELLED PROCESSING
         TITLE 'NON-LABELLED TAPE PROCESSING'
***********************************************************************
*                                                                     *
*        NON-LABELLED TAPE PROCESSING                                 *
*                                                                     *
***********************************************************************
         SPACE 2
NONLABEL MVI   LABELTYP,C'N'           INDICATE NON LABELLED
         MVC   LABEL,=CL12'NON-LABELLED'
         $CALL EP=TAPEVOL,             GET VOLUME SERIAL FROM UCB      +
               PARAM=OUTVOL
         B     SKIPREC1                RECORD 1 ALREADY READ
         SPACE
NEXTFILE READ  TAPEIN,                 READ FIRST RECORD IN FILE       +
               SF,                                                     +
               MF=E
         CHECK TAPEDECB                WAIT FOR COMPLETION
         LH    R1,DCBLRECL             LOAD BLOCK LENGTH
         ST    R1,RECLEN
         SPACE
SKIPREC1 MVC   BLKSZE,RECLEN           SET UP RECORD LENGTH
         SR    R4,R4                   ZERO CHANGE COUNTER
         LA    R5,1                    INITIALIZE BLOCK COUNTER
         MVC   EODAD,=AL3(ENDFILE)     SET UP EOD ADDRESS
         MVI   VAR,C'Y'                INDICATE POSSIBLE V RECFM
         CLC   DCBLRECL,DATA           SEE IF FIRST HALFWORD = LENGTH
         BE    LOOP
         MVI   VAR,C'N'                CAN'T BE VARIABLE
LOOP     READ  TAPEIN,                 READ A BLOCK                    +
               SF,                                                     +
               MF=E
         CHECK TAPEDECB                WAIT FOR COMPLETION
         LH    R1,DCBLRECL             LOAD RECORD LENGTH
         ST    R1,RECLEN
         LA    R5,1(R5)                COUNT RECORD
         CLC   DCBLRECL,DATA           SEE IF FIRST HALFWORD = LENGTH
         BE    TESTF
         MVI   VAR,C'N'                IF NOT, CAN'T BE VARIABLE
TESTF    MVI   LAST,C'N'
         CLC   BLKSZE,RECLEN           COMPARE RECORD LENGTH
         BE    LOOP
         LA    R4,1(R4)                COUNT A BLOCK LENGTH CHANGE
         MVI   LAST,C'Y'
         BH    LOOP
         MVI   LAST,C'N'
         MVC   BLKSZE,RECLEN           SAVE NEW MAX BLOCK LENGTH
         B     LOOP
         TITLE 'END OF DATA'
***********************************************************************
*                                                                     *
*        END OF DATA - SET UP OUTPUT                                  *
*                                                                     *
***********************************************************************
         SPACE 2
ENDFILE  STH   R2,FILENO               SAVE FILE NUMBER
         CVD   R2,DWORK                CONVERT FILE NUMBER
         MVC   VORK,PATTRN             MOVE IN EDIT PATTERN
         ED    VORK,WORK               EDIT FILE NUMBER
         MVC   OUTFILE,VORK+4          COPY FILE NUMBER
         MVC   OUTDEN,DENSITY          COPY DENSITY
         ST    R5,NUMBLKS              SAVE BLOCK COUNT
         CVD   R5,DWORK                CONVERT BLOCK COUNT
         MVC   VORK,PATTRN             MOVE IN EDIT PATTERN
         ED    VORK,WORK               EDIT BLOCK COUNT
         MVC   OUTNUMBL,VORK+2         COPY INTO OUTPUT LINE
         L     R5,BLKSZE               SET UP MAX BLOCK SIZE
         CVD   R5,DWORK                CONVERT BLOCK SIZE
         MVC   VORK,PATTRN             MOVE IN EDIT PATTERN
         ED    VORK,WORK               EDIT BLOCK SIZE
         MVC   OUTBLOCK,VORK+3         COPY INTO OUTPUT LINE
         MVI   OUTRECFM,C'V'           SET UP RECFM
         CLI   VAR,C'Y'                SEE IF VARIABLE OK
         BE    GETFEET2
         MVI   OUTRECFM,C'F'           SET UP RECFM
         C     R4,=F'1'                TEST NUMBER OF BLKSIZE CHANGES
         BL    GETFEET2                0  - RECFM=F
         BH    RECFMU                  >1 - RECFM=U
         CLI   LAST,C'Y'               =1 - WAS LAST RECORD SHORT?
         BE    GETFEET2                YES - RECFM=F
RECFMU   MVI   OUTRECFM,C'U'           NO  - RECFM=U
GETFEET2 $CALL EP=FOOTAGE,             GET FOOTAGE                     +
               PARAM=LABELTYP
         MVC   OUTFFT,FILEFT+2         COPY FOOTAGE TO OUTPUT LINE
         MVC   OUTRFT,REELFT+2
         TITLE 'PRINT OUTPUT LINE'
***********************************************************************
*                                                                     *
*        PRINT OUTPUT LINE                                            *
*                                                                     *
***********************************************************************
         SPACE
         BXLE  R3,R10,PUTLINE2         TEST LINE COUNT
         AP    PAGENO,=P'1'            INCREMENT PAGE NUMBER
         MVC   PAGE,=X'40202120'       MOVE IN EDIT MASK
         ED    PAGE,PAGENO             EDIT IN PATE NUMBER
         PUT   SYSPRINT,HEADER1        PRINT HEADERS
         PUT   SYSPRINT,HEADER2
         PUT   SYSPRINT,LINE1
         PUT   SYSPRINT,HEADER3
         LA    R3,1                    RESET LINE COUNT
         MVI   NULINE,C'0'             DOUBLE SPACE FIRST LINE
PUTLINE2 PUT   SYSPRINT,NULINE         PRINT DATA LINE
         MVI   NULINE,C' '             BLANK OUT LINE
         MVC   NULINE+1(132),NULINE
         LA    R2,1(R2)                INCREMENT FILE NUMBER
         MVC   EODAD,=AL3(EOV)         RESET EOD ADDRESS
         B     NEXTFILE
         TITLE 'END OF TAPE'
***********************************************************************
*                                                                     *
*        END OF TAPE REACHED                                          *
*                                                                     *
***********************************************************************
         SPACE
EOV      PUT   SYSPRINT,GOODBY
         CLOSE (TAPE,DISP,SYSPRINT)
         SR    R15,R15
         SPACE 2
RETURN   $RTRN RC=(R15)
         TITLE 'ERROR ROUTINES'
***********************************************************************
*                                                                     *
*        ERROR ROUTINES                                               *
*                                                                     *
***********************************************************************
         SPACE
*--------UNEXPECTED TAPE MARK DETECTED
UTM      MVC   UTMMSG+53(4),RECTYPE    SET UP MESSAGE
         PUT   SYSPRINT,UTMMSG         PRINT MESSAGE
         B     ABEND
         SPACE
*--------WRONG RECORD READ
BADREC   MVC   BADRECMG+1(4),RECTYPE   SET UP MESSAGE
         PUT   SYSPRINT,BADRECMG       PRINT MESSAGE
         B     ABEND
         SPACE
*--------SYNAD ERROR
SYNAD    SYNADAF  ACSMETH=BSAM
         MVC   NL+38(78),50(R1)        MOVE MESSAGE TO PRINT AREA
         SYNADRLS
         PUT   SYSPRINT,NL
         SPACE
*--------TERMINATE WITH DUMP
ABEND    ABEND 1001,DUMP               GET A DUMP
         SPACE
*--------DCB ABEND ROUTINE
DCBABEND TM    3(R1),X'04'             TEST "IGNORE" OPTION BIT
         BZ    HOPE                    IF ZERO THEN ABEND
         MVI   3(R1),X'04'             IGNORE THE ABEND
HOPE     BR    R14                     RETURN & HOPE FOR THE BEST
         TITLE 'DATE CONVERSION SUBROUTINE'
***********************************************************************
*                                                                     *
*              CONVERT JULIAN DATE TO MM/DD/YY FORM                   *
*              ADAPTED FROM SUBROUTINE GDATE                          *
*              DATE IS RETURNED AS MM/DD/YYJJJB                       *
*                                                                     *
***********************************************************************
         SPACE
GDATE    LA    R1,MMDDYY               LOAD OUTPUT AREA ADDRESS
         USING OUTPUT,R1
         CP    DATE,=PL3'0'
         BE    NODATE
         UNPK  JULIAN,DATE             UNPACK DATE
         OI    JULDAY+2,X'F0'          SET ZONE
         MVI   BLANK,C' '              SET BLANK
         MVC   TARGET,=PL3'0'          00 00 0C
         MVO   YEAR2,YEAR              00 0Y YC
         DP    TARGET,=P'4'            0Q QC RC
         CP    REM,=P'0'               TEST REMAINDER
         BE    LEAP
         CP    DAY,=P'59'              TEST FOR BEFORE FEB 29
         BNH   LEAP
         AP    DAY,=P'1'               ADJUST TO LEAP YEAR
LEAP     LA    R15,TABLE               LOAD TABLE ADDRESS
         USING CALENDAR,R15            SET BASE ADDRESS
         ZAP   MONTHP,=P'1'            SET MONTH TO 1
LOOP1    CP    DAY,DAYS                SEE IF MORE DAYS THAN THIS MNTH
         BNH   DATERTRN
         SP    DAY,DAYS                SUBTRACT DAYS IN THIS MONTH
         AP    MONTHP,=P'1'            ADD 1 TO MONTH
         LA    R15,LEN(R15)            INCREMENT TO NEXT MONTH
         B     LOOP1
DATERTRN UNPK  MO,MONTHP               UNPACK MONTH
         OI    MO+1,X'F0'              SET ZONE
         UNPK  DA,DAY                  UNPACK DAY
         OI    DA+1,X'F0'              SET ZONE
         MVI   SLASH1,C'/'             SET SLASH
         MVI   SLASH2,C'/'             SET SLASH
         BR    R14                     RETURN
NODATE   MVC   MMDDYY,=CL12' '         BLANK DATE FIELD
         BR    R14                     RETURN
         SPACE
         DROP  R1,R15
         TITLE 'DATA AREA'
***********************************************************************
*                                                                     *
*        DATA AREA                                                    *
*                                                                     *
***********************************************************************
         SPACE
         LTORG
         SPACE 3
SAVE     DS    18F                     SAVE AREA
PATTRN   DC    XL8'4020202020202120'
         DS    0D
DWORK    DC    F'0'
WORK     DS    1F
VORK     DS    1D
RECLEN   DS    F                       RECORD LENGTH
RECTYPE  DS    CL4                     RECORD TYPE TO BE READ
DENTABLE DC    C' 200'                 0
         DC    C' 556'                 1
         DC    C' 800'                 2
         DC    C'1600'                 3
         DC    C'6250'                 4
LAST     DS    C
VAR      DS    C                       Y IF POSSIBLE RECFM = V
PAGENO   DC    PL2'0'                  PAGE NUMBER
         SPACE
TAPEIN   READ  TAPEDECB,               READ A TAPE RECORD              +
               SF,                                                     +
               TAPE,                                                   +
               DATA,                                                   +
               'S',                                                    +
               MF=L
         EJECT
*--------FOLLOWING IS A WORK AREA FOR FOOTAGE ROUTINE
LABELTYP DS    C                       LABEL TYPE
DENSITY  DS    C                       DENSITY CODE
FILENO   DS    H                       FILE SEQUENCE NUMBER IN BINARY
BLKSZE   DS    F                       BLOCK SIZE IN BINARY
NUMBLKS  DS    F                       NUMBER OF BLOCKS IN BINARY
USERLBLS DS    F                       USER LABELS IN BINARY
CUMTOTAL DS    F                       CUMULATIVE REEL TOTAL
FILEFT   DS    CL8                     FILE FOOTAGE IN EBCDIC
REELFT   DS    CL8                     REEL FOOTABE IN EBCDIC
*--------END OF FOOTAGE ROUTINE PARAMETERS
         SPACE 3
*--------MESSAGES
         SPACE
MULTVOL  DC    CL133'0       THIS DATASET IS CONTINUED ON ANOTHER TAPE'
         SPACE
HEADER1  DC    CL133'1                                            SYSTE+
               M SUPPORT UTILITIES - TAPE MAP PROGRAM'
         SPACE
HEADER2  DC    CL133'0VOLUME SERIAL  ---DENSITY--  -LABEL TYPE-  -OWNER+
                ID-  -------------------DATE-------------------'
         SPACE
LINE1    DC    CL133' '
         ORG   LINE1
         DC    CL4' '
OUTVOL   DC    CL6' '                  VOLUME SERIAL
         DC    CL6' '
DEN      DC    C' '                    DENSITY CODE
         DC    C' ('
BPI      DC    CL4' '                  BITS PER INCH
         DC    C' BPI)  '
LABEL    DC    CL12' '
         DC    CL2' '
OUTOWNER DC    CL10' '                 OWNER ID
         DC    CL2' '
OUTDATE  DC    CL42' '                 CURRENT DATE AND TIME
         DC    C'            PAGE'
PAGE     DC    CL4' '                  PAGE NUMBER
         ORG
         SPACE 2
HEADER3  DC    CL133'0 FILE  --DATA SET NAME-- RECFM LRECL BLKSIZE BLOC+
               KS UL DEN F. FT. R. FT. CR. DATE EX. DATE JOBNAME  STEPN+
               AME SEC VSEQ'
         SPACE 2
NULINE   DC    CL133' '
         ORG   NULINE
         DC    C'  '                   CARRIAGE CONTROL
OUTFILE  DC    CL4' '                  FILE SEQUENCE NUMBER
         DC    C'  '
OUTDSN   DC    CL17' '                 DATA SET NAME
         DC    CL2' '
OUTRECFM DC    CL3' '                  RECORD FORMAT
         DC    CL2' '
OUTLRECL DC    CL5' '                  LOGICAL RECORD LENGTH
         DC    CL2' '
OUTBLOCK DC    CL5' '                  BLOCK SIZE
         DC    CL2' '
OUTNUMBL DC    CL6' '                  NUMBER OF BLOCKS
         DC    CL2' '
OUTUL    DC    C' '                    NUMBER OF USER LABELS
         DC    CL2' '
OUTDEN   DC    C' '                    DENSITY FROM LABEL
         DC    CL2' '
OUTFFT   DC    CL6' '                  FILE FOOTAGE
         DC    C' '
OUTRFT   DC    CL6' '                  REEL FOOTAGE
         DC    C' '
OUTCRDAT DC    CL8' '                  CREATION DATE
         DC    C' '
OUTEXDAT DC    CL8' '                  EXPIRATION DATE
         DC    C' '
OUTJOBN  DC    CL8' '                  JOB NAME
         DC    C' '
OUTSTEP  DC    CL8' '                  STEP NAME
         DC    CL2' '
OUTSEC   DC    C' '                    SECURITY INDICATOR
         DC    CL2' '
OUTVSEQN DC    CL4' '                  VOUME SEQUENCE NUMBER
         ORG
         SPACE 2
GOODBY   DC    CL133'-       END OF UTILITY - TAPE IS MAPPED'
NOTAPE   DC    CL133'-UNABLE TO OPEN TAPE DD STATEMENT.'
NL       DC    CL133'-PERMANENT I/O ERROR READING LABELS:'
NOTMK    DC    CL133'0TAPE MARK EXPECTED, NOT FOUND'
UTMMSG   DC    CL133'-UNEXPECTED TAPE MARK ENCOUNTERED ATTEMPTING TO RE+
               AD ____ RECORD.'
BADRECMG DC    CL133'-____ RECORD TYPE EXPECTED, NOT FOUND'
         EJECT
TAPE     DCB   DDNAME=TAPE,            DDNAME                          +
               DSORG=PS,               DATA SET ORGANIZATION           +
               MACRF=RC,               MACRO FORM                      +
               EODAD=LTM,              END OF DATA ADDRESS             +
               EXLST=RANOFF,           EXIT LIST ADDRESS               +
               RECFM=U,                RECORD FORMAT                   +
               BLKSIZE=32760,          MAXIMUM BLOCK SIZE              +
               DEVD=TA,                TAPE DATA SET                   +
               SYNAD=SYNAD,            SYNAD ROUTINE ADDRESS           +
               BUFNO=1                 ONE BUFFER
         SPACE
EODAD    EQU   TAPE+33,3               END OF DATA ADDRESS
DCBLRECL EQU   TAPE+82,2               RECORD LENGTH
         SPACE
RANOFF   DS    0F                      FULL WORD ALIGNMENT FOR EXLST
         DC    X'11'                   CODE FOR DCB ABEND
         DC    AL3(DCBABEND)           ADDRESS OF OFF-THE-END ROUTINE
         DC    X'80000000'             END OF EXLST
         EJECT
SYSPRINT DCB   DDNAME=SYSPRINT,                                        +
               DSORG=PS,                                               +
               MACRF=PM,                                               +
               RECFM=FBA,                                              +
               LRECL=133,                                              +
               BLKSIZE=133,
         EJECT
***********************************************************************
*                                                                     *
*        CALENDAR TABLE - NUMBER OF DAYS IN EACH MONTH (LEAP YEAR)    *
*                                                                     *
***********************************************************************
         SPACE
TABLE    DC    PL2'31'                  JANUARY
         DC    PL2'29'                  FEBRUARY
         DC    PL2'31'                  MARCH
         DC    PL2'30'                  APRIL
         DC    PL2'31'                  MAY
         DC    PL2'30'                  JUNE
         DC    PL2'31'                  JULY
         DC    PL2'31'                  AUGUST
         DC    PL2'30'                  SEPTEMBER
         DC    PL2'31'                  OCTOBER
         DC    PL2'30'                  NOVEMBER
         DC    PL2'31'                  DECEMBER
         SPACE 2
***********************************************************************
*                                                                     *
*        WORK AREA                                                    *
*                                                                     *
***********************************************************************
         SPACE
DATEWORK DS    0F                       DATE
         DS    C                        FILLER
DATE     DS    0CL3                     JULIAN DATE - PACKED DECIMAL
YEAR     DS    C                        YEAR - NO SIGN
DAY      DS    CL2                      DD DS
MONTHP   DS    PL2                      0M MS
TARGET   DS    0CL3                     00 0Y YS  -  0Q QS RS
         DS    C                        0Q         PART OF QUOTIENT
YEAR2    DS    0PL2                     0Y YS      YEAR AND SIGN
         DS    C                        QS         QUOTIENT AND SIGN
REM      DS    C                        RS         REMAINDER AND SIGN
         DS    0F                       FULLWORD ALIGNMENT
MMDDYY   DC    CL12' '                  WORK AREA FOR FINAL DATE
         EJECT
DATA     DS    CL32760
         SPACE 2
         ORG   DATA
VOLID    DS    CL4                     VOL1
VOLSER   DS    CL6                     VOLUME SERIAL
         DS    CL31
VOLOWNER DS    CL10                    OWNER ID
         SPACE 2
         ORG   DATA
HDRID    DS    CL4                     HDR1, EOF1, OR EOV1
DSNAME   DS    CL17                    DATA SET NAME
         DS    CL6                     DATA SET SERIAL NUMBER
VOLSEQ   DS    CL4                     VOLUME SEQUENCE NUMBER
DSSEQ    DS    CL4                     DATA SET SEQUENCE NUMBER
         DS    CL4                     GENERATION NUMBER
         DS    CL2                     VERSION NUMBER
CRDATE   DS    CL6                     CREATION DATE
EXDATE   DS    CL6                     EXPIRATION DATE
SECURITY DS    CL1                     SECURITY CODE
BLKCOUNT DS    CL6                     BLOCK COUNT
         DS    CL13                    SYSTEM CODE
         DS    CL7                     RESERVED
         SPACE 2
         ORG   DATA
         DS    CL4                     HDR2, EOF2, OR EOV2
RECFM    DS    CL1                     RECFM
BLKSIZE  DS    CL5                     BLKSIZE
LRECL    DS    CL5                     LRECL
DENLABEL DS    CL1                     DEN
         DS    CL1                     DATA SET POSITION
JOBNAME  DS    CL8                     JOBNAME
         DS    CL1                     /
STEPNAME DS    CL8                     STEPNAME
TECH     DS    CL2                     RECORDING TECHNIQUE
CC       DS    CL1                     CONTROL CHARACTER
         DS    CL1                     RESERVED
BLOCKING DS    CL1                     BLOCK ATTRIBUTE
         DS    CL41                    RESERVED
         EJECT
***********************************************************************
*                                                                     *
*        CALENDAR TABLE DSECT                                         *
*                                                                     *
***********************************************************************
         SPACE
CALENDAR DSECT
DAYS     DS    PL2                      DAYS IN MONTH
LEN      EQU   *-DAYS                   LENGTH OF ENTRY
         SPACE 2
***********************************************************************
*                                                                     *
*        OUTPUT AREA DSECT                                            *
*                                                                     *
***********************************************************************
         SPACE
OUTPUT   DSECT                          OUTPUT DSECT
MO       DS    CL2                      MONTH
SLASH1   DS    C                        SLASH
DA       DS    CL2                      DAY
SLASH2   DS    C                        SLASH
JULIAN   DS    0CL5                     JULIAN DATE - EBCDIC
YR       DS    CL2                      YEAR
JULDAY   DS    CL3                      JULIAN DAY
BLANK    DS    C                        BLANK
         TITLE 'TAPEMAP - TAPE MAPPING PROGRAM - SUBROUTINE FOOTAGE'
***********************************************************************
*                                                                     *
* NAME             FOOTAGE                                            *
*                                                                     *
* FUNCTION         CALCULATE FOOTAGE FOR A FILE AND ACCUMULATE        *
*                  REEL FOOTAGE.                                      *
*                                                                     *
* DESCRIPTION      FOOTAGE IS CALLED FROM THE MAPPING ROUTINES AND    *
*                  IS PROVIDED WITH A WORK AREA.  THE FOOTAGE FOR     *
*                  THE FILE (BASED ON BLKSIZE, NUMBER OF BLOCKS,      *
*                  AND TAPE DENSITY IS CALCULATED AND MOVED INTO      *
*                  THE OUTPUT AREA.  TOTAL REEL LENGTH IS ALSO        *
*                  CALCULATED AND MOVED INTO THE OUTPUT AREA.         *
*                                                                     *
* PARAMETERS       FOOTAGE IS PASSED THE ADDRESS OF A WORK AREA       *
*                  WHICH CONTAINS INPUT DATA AND IS UPDATED BY        *
*                  FOOTAGE.  THE WORK AREA INCLUDES -                 *
*                                                                     *
*                  TAPE LABEL TYPE INDICATOR (STANDARD, NON-LABELLED) *
*                  DENSITY CODE                                       *
*                  RECORD LENGTH                                      *
*                  NUMBER OF RECORDS                                  *
*                  NUMBER OF USER LABELS                              *
*                  CUMULATIVE REEL COUNT   (UPDATED)                  *
*                  FILE FOOTAGE IN EBCDIC  (UPDATED)                  *
*                  REEL FOOTAGE IN EBCDIC  (UPDATED)                  *
*                                                                     *
* REGISTER USAGE   R0  - LINKAGE                                      *
*                  R1  - LINKAGE                                      *
*                  R2  - POINTER TO DENSITY CONSTANTS                 *
*                  R3  - NOT USED                                     *
*                  R4  - FOOTAGE CALCULATION WORK                     *
*                  R5  - FOOTAGE CALCULATION WORK                     *
*                  R6  - NOT USED                                     *
*                  R7  - NOT USED                                     *
*                  R8  - NOT USED                                     *
*                  R9  - NOT USED                                     *
*                  R10 - NOT USED                                     *
*                  R11 - WORK AREA BASE                               *
*                  R12 - PROGRAM BASE                                 *
*                  R13 - SAVE AREA                                    *
*                  R14 - LINKAGE                                      *
*                  R15 - LINKAGE                                      *
*                                                                     *
***********************************************************************
         TITLE 'ENTRY CODING'
FOOTAGE  $ENTER BASE=R12
         L     R11,0(R1)               LOAD WORK AREA ADDRESS
         USING LABELTYP,R11            WORK AREA ADDRESSABILITY
         CLI   DEN,C'4'                TEST FOR 6250 BPI
         BE    CALC6250
         CLI   DEN,C'3'                TEST FOR 1600 BPI
         BE    CALC1600
         CLI   DEN,C'2'                TEST FOR 800 BPI
         BNE   FOOTRTRN
         TITLE 'FOOTAGE CALCULATIONS FOR 800 BPI, NRZI'
***********************************************************************
*                                                                     *
*        FOOTAGE CALCULATIONS FOR 800 BPI, NRZI                       *
*                                                                     *
*        (BYTES/800 + .6IN)*BLOCKS = (BYTES+480)*BLOCKS/800           *
*                                                                     *
*        LABEL = ((UL+2)*80/800 + (UL+2)(.6IN))*2                     *
*              = (UL+2)*(1120)/800                                    *
*                                                                     *
*        VOLUME LABEL = 80/800 + .6IN = 560/800                       *
*                                                                     *
*        FULL REEL COUNT = 13,440,000                                 *
*                                                                     *
***********************************************************************
         SPACE
         SR    R4,R4                   CLEAR FOR DIVIDE
         L     R5,BLKSZE               LOAD BLOCKSIZE
         A     R5,=F'480'              ADD 480 FOR .6 IN IBG
         M     R4,NUMBLKS              MULTIPLY BY BLOCKSIZE
         CLI   LABELTYP,C'S'           TEST FOR STANDARD LABELS
         BNE   SAVE800
         L     R1,USERLBLS             LOAD USER LABEL COUNT
         LA    R1,2(R1)                ADD 2 FOR STANDARD LABELS
         MH    R1,=H'1120'             MULTIPLY BY 1120
         AR    R5,R1                   ADD TO COUNTER
         CLC   =H'1',FILENO            TEST FOR FIRST FILE
         BNE   SAVE800
         A     R5,=F'560'              ADD 560 FOR LABEL
SAVE800  LA    R2,DATA800              ADDRESS OF 800 BPI CONSTANTS
         B     FOOTEDIT
         TITLE 'FOOTAGE CALCULATIONS FOR 1600 BPI, PE'
***********************************************************************
*                                                                     *
*        FOOTAGE CALCULATIONS FOR 1600 BPI, PE                        *
*                                                                     *
*        ((BYTES+82)/1600 + .6IN)*BLOCKS = (BYTES+1042)*BLOCKS/1600   *
*                                                                     *
*        LABEL = ((UL+2)*162/1600 + (UL+2)(.6IN))*2                   *
*              = (UL+2)*(2244)/1600                                   *
*                                                                     *
*        VOLUME LABEL = (80+82)/1600 + .6IN = 1122/1600               *
*                                                                     *
*        FULL REEL COUNT = 26,880,000                                 *
*                                                                     *
***********************************************************************
         SPACE
CALC1600 SR    R4,R4                   CLEAR FOR DIVIDE
         L     R5,BLKSZE               LOAD BLOCKSIZE
         A     R5,=F'1042'             ADD 1042 FOR .6 IN IBG
         M     R4,NUMBLKS              MULTIPLY BY BLOCKSIZE
         CLI   LABELTYP,C'S'           TEST FOR STANDARD LABELS
         BNE   SAVE1600
         L     R1,USERLBLS             LOAD USER LABEL COUNT
         LA    R1,2(R1)                ADD 2 FOR STANDARD LABELS
         MH    R1,=H'2244'             MULTIPLY BY 2244
         AR    R5,R1                   ADD TO COUNTER
         CLC   =H'1',FILENO            TEST FOR FIRST FILE
         BNE   SAVE1600
         A     R5,=F'1122'             ADD 1122 FOR LABEL
SAVE1600 LA    R2,DATA1600             ADDRESS OF 1600 BPI CONSTANTS
         B     FOOTEDIT
         TITLE 'FOOTAGE CALCULATIONS FOR 6250 BPI, GCR'
***********************************************************************
*                                                                     *
*        FOOTAGE CALCULATIONS FOR 6250 BPI, GCR                       *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*        FULL REEL COUNT = 260,409,600                                *
*                                                                     *
***********************************************************************
         SPACE
CALC6250 SR    R4,R4                   CLEAR FOR DIVIDE
         L     R5,BLKSZE               LOAD BLOCKSIZE
         D     R4,=F'1106'             DIVIDE BY 1106
         LR    R1,R4                   SAVE REMAINDER
         M     R4,=F'1600'             FOR EVERY 1106, 1580 + 20 RESYNC
         SR    R0,R0
         D     R0,=F'7'                7 BYTE GROUPS
         LA    R1,1(R1)                ADD 1 TO QUOTIENT
         MH    R1,=H'10'               FOR EVERY 7, YOU GET 10
         AR    R5,R1                   ADD IT TO TOTAL
         A     R5,=F'2898'             ADD 2898 FOR IBG AND CONTROL
         M     R4,NUMBLKS              MULTIPLY BY NUMBER OF BLOCKS
         CLI   LABELTYP,C'S'           TEST FOR STANDARD LABELS
         BNE   SAVE6250
         L     R1,USERLBLS             LOAD USER LABEL COUNT
         LA    R1,2(R1)                ADD 2 FOR STANDARD LABELS
         MH    R1,=H'6036'             MULTIPLY BY 6036
         AR    R5,R1                   ADD TO TOTAL
         CLC   =H'1',FILENO            TEST FOR FIRST FILE
         BNE   SAVE6250
         A     R5,=F'3018'             ADD 3018 FOR VOL LABEL
SAVE6250 LA    R2,DATA6250             ADDRESS OF 6250 BPI CONSTANTS
         TITLE 'CONVERT THE BIT COUNTS TO FEET AND EDIT'
***********************************************************************
*                                                                     *
*        CONVERT THE BIT COUNTS TO FEET AND EDIT                      *
*                                                                     *
***********************************************************************
         SPACE
FOOTEDIT LR    R1,R5                   COPY
         A     R1,CUMTOTAL             ADD PREVIOUS TOTAL
         ST    R1,CUMTOTAL             STORE NEW TOTAL
         A     R5,0(R2)                ROUND OFF
         D     R4,4(R2)                DIVIDE BY (BPI/10)*12
         CVD   R5,PACKDEC              CONVERT TO DECIMAL
         MVC   FILEFT,=X'4040202021204B20'  MOVE IN MASK
         ED    FILEFT,PACKDEC+5        EDIT IT
         LR    R5,R1                   COPY CUMULATIVE TOTAL
         SR    R4,R4
         A     R5,0(R2)                ROUND OFF
         D     R4,4(R2)                DIVIDE BY (BPI/10)*12
         CVD   R5,PACKDEC              CONVERT TO DECIMAL
         MVC   REELFT,=X'4040202021204B20'  MOVE IN MASK
         ED    REELFT,PACKDEC+5
FOOTRTRN $RTRN RC=0                    RETURN
         TITLE 'DATA AREAS'
***********************************************************************
*                                                                     *
*        DATA AREAS                                                   *
*                                                                     *
***********************************************************************
         SPACE
         LTORG
         SPACE
DATA800  DC    F'480'
         DC    F'960'                  800/10*12 (BITS PER FOOT/10)
DATA1600 DC    F'960'
         DC    F'1920'                 1600/10*12 (BITS PER FOOT/10)
DATA6250 DC    F'5425'
         DC    F'10850'                9042/10*12 (BITS PER FOOT/10)
PACKDEC  DS    D
         TITLE 'TAPEVOL SUBROUTINE - GET VOLUME SERIAL'
***********************************************************************
*                                                                     *
* NAME         TAPEVOL                                                *
*                                                                     *
* FUNCTION     OBTAIN VOLUME SERIAL OF TAPE TO BE MAPPED.             *
*                                                                     *
* DESCRIPTION  OBTAIN THE VOLUME SERIAL FROM THE UCB.  EXTRACT IS     *
*              USED TO OBTAIN THE TIOT ADDRESS.  THE TIOT IS          *
*              SEARCHED TO FIND THE ENTRY FOR THE TAPE DDNAME.        *
*              THE TIOT ENTRY IS USED TO LOCATE THE UCB, AND THE      *
*              VOLUME SERIAL IS EXTRACTED FROM THE UCB.               *
*                                                                     *
* PARAMETERS   VOLSER   - THE ADDRESS OF A 6 BYTE FIELD TO RECEIVE    *
*                         THE VOLUME SERIAL.                          *
*                                                                     *
* FPL MACROS USED - SEE COMMENTS IN MAINLINE ROUTINE                  *
*                                                                     *
* IBM MACROS USED - SEE COMMENTS IN MAINLINE ROUTINE                  *
*                                                                     *
* AUTHOR       ED VANCE  (UMSL)                                       *
*                                                                     *
* MODIFICATIONS                                                       *
*              ERIC STRATMANN, LSU DEPT OF EXP. STAT.    08/15/76     *
*              GORDON WEST, FLORIDA POWER & LIGHT CO.    12/01/77     *
*                   ADDED COMMENTS                                    *
*                   ADDED FPL MACROS                                  *
*                   ADDED REGISTER NOTATION                           *
*                                                                     *
* REGISTER USAGE                                                      *
*                                                                     *
*              R0  - LINKAGE                                          *
*              R1  - LINKAGE                                          *
*              R2  - PARM ADDRESS                                     *
*              R3  - TIOT/UCB ENTRY POINTER                           *
*              R4  - LENGTH OF TIOT DD ENTRY                          *
*              R5  - NOT USED                                         *
*              R6  - NOT USED                                         *
*              R7  - NOT USED                                         *
*              R8  - NOT USED                                         *
*              R9  - NOT USED                                         *
*              R10 - NOT USED                                         *
*              R11 - NOT USED                                         *
*              R12 - PROGRAM BASE                                     *
*              R13 - SAVE AREA                                        *
*              R14 - LINKAGE                                          *
*              R15 - LINKAGE                                          *
*                                                                     *
***********************************************************************
         TITLE 'ENTRY LINKAGE'
TAPEVOL  $ENTER BASE=R12
         SPACE
         L     R2,0(R1)               LOAD PARAMETER ADDRESS
         SPACE
*--------GET TIOT ADDRESS
         EXTRACT ADRTIOT,FIELDS=(TIOT)
         L     R3,ADRTIOT              GET TIOT ADDRESS
         LA    R3,24(R3)               INCREMENT TO FIRST DD ENTRY
         SR    R4,R4                   ZERO R4 FOR IC
*--------FIND TIOT ENTRY FOR TAPE DDNAME
TIOTLOOP IC    R4,0(R3)                INSERT LENGTH OF DD ENTRY
         LTR   R4,R4                   END OF LIST ?
         BZ    NOTFOUND                DDNAME NOT THERE
         CLC   =CL8'TAPE',4(R3)        ELSE IS DDNAME = TAPE ?
         BE    GETUCB                  IF SO THEN GET UCB
         AR    R3,R4                   ELSE INCREMENT TO NEXT DD ENTRY
         B     TIOTLOOP                EXAMINE NEXT DD ENTRY
*--------GET UCB ADDRESS AND SERIAL FROM UCB
GETUCB   LA    R3,16(R3)               INCREMENT TO UCB ADDRESS FIELD
         L     R3,0(R3)                GET UCB ADDRESS INTO R3
         MVC   0(6,R2),28(R3)          MOVE VOLSER TO PARAMETER
         $RTRN RC=0                    NORMAL RETURN
         SPACE
NOTFOUND $RTRN RC=4                    ERROR RETURN - DDNAME NOT FOUND
         SPACE 3
         LTORG
         SPACE
ADRTIOT  DS    A                       TIOT ADDRESS FROM EXTRACT
         TITLE 'TAPE MAPPING PROGRAM - SUBROUTINE DENTAPE - GET TAPE DE+
               NSITY'
***********************************************************************
*                                                                     *
* NAME         DENTAPE - SUBROUTINE OF TAPEMAP                        *
*                                                                     *
* FUNCTION     DETERMINE TAPE DENSITY                                 *
*                                                                     *
* DESCRIPTION  READ AN 80 BYTE RECORD FROM THE INPUT TAPE (DATA       *
*              TRANSFER IS SUPPRESSED).  DETERMINE TAPE DENSITY       *
*              BY CHECKING SENSE INFORMATION.  DENSITY INDICATED      *
*              IN DCB IS NOT ACCURATE.                                *
*                                                                     *
*              A RETURN CODE OF 0 INDICATES THAT THE DENSITY WAS      *
*              OBTAINED.  A RETURN CODE OF 16 INDICATES THAT          *
*              THE TAPE DD FAILED TO OPEN.                            *
*                                                                     *
* PARAMETERS   A ONE BYTE FIELD TO CONTAIN THE DENSITY                *
*              INDICATOR -                                            *
*                   2 -  800 BPI (NRZI)                               *
*                   3 - 1600 BPI (PE)                                 *
*                   4 - 6250 BPI (GCR)                                *
*                                                                     *
* FPL MACROS USED - SEE COMMENTS IN MAINLINE                          *
*                                                                     *
* IBM MACROS USED - SEE COMMENTS IN MAINLINE                          *
*                                                                     *
* AUTHOR       UNKNOWN.  PROGRAM RECEIVED AS PART OF TAPEMAP          *
*              PROGRAM FROM LSU (FROM UMSL).                          *
*                                                                     *
* MODIFICATIONS                                                       *
*              GORDON P. WEST, FLORIDA POWER & LIGHT CO.   12/01/77   *
*                   ADDED COMMENTS                                    *
*                   ADDED FPL MACROS                                  *
*                   ADDED 6250 BPI CHECK                              *
*                   ADDED CHECK FOR SUCCESSFUL OPEN                   *
*                   ADDED SET FILE TO 1 IF NOT SPECIFIED              *
*                   ADDED SET TO BLP IF NOT SPECIFIED                 *
*                                                                     *
* REGISTER USAGE                                                      *
*                                                                     *
*              R0  - LINKAGE                                          *
*              R1  - LINKAGE                                          *
*              R2  - INITIAL FILE NUMBER                              *
*              R3  - NOT USED                                         *
*              R4  - NOT USED                                         *
*              R5  - NOT USED                                         *
*              R6  - NOT USED                                         *
*              R7  - NOT USED                                         *
*              R8  - NOT USED                                         *
*              R9  - NOT USED                                         *
*              R10 - NOT USED                                         *
*              R11 - PARM LIST                                        *
*              R12 - PROGRAM BASE                                     *
*              R13 - SAVE AREA                                        *
*              R14 - LINKAGE                                          *
*              R15 - LINKAGE                                          *
*                                                                     *
***********************************************************************
         TITLE 'ENTRY LINKAGE'
DENTAPE  $ENTER BASE=R12
         SPACE
         L     R11,0(R1)               LOAD DENSITY ADDRESS
         L     R2,4(R1)                LOAD INITIAL FILE NUMBER ADDRESS
         SPACE
***********************************************************************
*                                                                     *
*        SET FILE NUMBER TO 1 IF NOT SPECIFIED                        *
*                                                                     *
***********************************************************************
         SPACE
         RDJFCB TAPEDEN                READ JFCB
         LH    R1,JFCBFLSQ             LOAD FILE NUMBER
         LTR   R1,R1
         BNZ   STFILENO
         LA    R1,1                    SET FILE TO 1
         STH   R1,JFCBFLSQ             STORE IN JFCB
         OI    JFCBMASK,X'80'          REWRITE JFCB AT OPEN
STFILENO STH   R1,0(R2)                RETURN INITIAL FILE NUMBER
         SPACE
***********************************************************************
*                                                                     *
*        SET LABEL TYPE TO BLP IF NOT SPECIFIED                       *
*                                                                     *
*        ***** NOTE *****   IN MVS, APF AUTHORIZATION IS REQUIRED TO  *
*                           CHANGE THE LABEL TYPE TO BLP.  IF BLP IS  *
*                           SPECIFIED IN JCL, JFCB WILL NOT BE        *
*                           CHANGED.                                  *
*                                                                     *
***********************************************************************
         SPACE
         TM    JFCBLTYP,JFCBLP         TEST FOR BLP
         BO    OPENTAP
         MVI   JFCBLTYP,JFCBLP         SET LABEL PROCESSING TO BLP
         OI    JFCBMASK,X'80'          REWRITE JFCB AT OPEN
OPENTAP  OPEN  (TAPEDEN,INPUT),TYPE=J  OPEN TAPE
         TM    TAPEDEN+48,X'10'        TEST FOR SUCCESSFUL OPEN
         BO    EXCP
         LA    R15,16                  SET RETURN CODE
         B     DENRTRN
EXCP     EXCP  TAPEIOB                 EXECUTE READ
         WAIT  ECB=TAPEECB             WAIT FOR COMPLETION OF READ
         SPACE
         MVI   0(R11),C'3'             SET DENSITY TO 3
         TM    SENSINFO+3,X'04'        TEST FOR PE MODE
         BNZ   EXIT
         MVI   0(R11),C'2'             SET DENSITY TO 2
         L     R1,TAPEDEN+44           LOAD DEB ADDRESS
         L     R1,32(R1)               LOAD UCB ADDRESS
         CLI   19(R1),X'01'            TEST FOR 2400 SERIES DRIVE
         BE    EXIT
         TM    SENSINFO+6,X'08'        TEST FOR 3400-3, -5, OR -7
         BZ    EXIT
         MVI   0(R11),C'4'             SET DENSITY TO 4
EXIT     CLOSE (TAPEDEN,REREAD)        CLOSE TAPE
         SR    R15,R15                 ZERO RETURN CODE
DENRTRN  $RTRN RC=(R15)                RETURN
         TITLE 'DATA AREAS'
***********************************************************************
*                                                                     *
*        DATA AREAS                                                   *
*                                                                     *
***********************************************************************
         SPACE
         LTORG
         SPACE
SENSINFO DC    24X'00'                 SENSE INFORMATION
         SPACE 2
CHPGM    CCW   X'02',0,X'70',80        READ 80 BYTES (SUPPRESS DATA)
         CCW   X'04',SENSINFO,X'20',24 SENSE
         SPACE
TAPEECB  DC    F'0'                    EVENT CONTROL BLOCK
         SPACE
TAPEIOB  DS    0F                      IOB MUST BE ON FULL-WORD BDRY
         DC    X'02'                   FLAGS 1
         DC    X'00'                   FLAGS 2
         DC    X'0000'                 FIRST TWO SENSE BYTES
         DC    X'00'                   ECB CODE
         DC    AL3(TAPEECB)            ADDRESS OF ECB
         DC    X'00'                   FLAGS 3
         DC    7X'00'                  CHANNEL STATUS WORD
         DC    X'00'                   SIO CODE
         DC    AL3(CHPGM)              CHANNEL PGM ADDR
         DC    X'00'                   RESERVED
         DC    AL3(TAPEDEN)            DCB ADDR
         DC    X'00'                   REPOSITION MODIFIER
         DC    X'000000'               RESTART ADDRESS
         DC    X'0000'                 BLOCK COUNT INCREMENT
         DC    X'0000'                 ERROR COUNTS
         EJECT
TAPEDEN  DCB   DDNAME=TAPE,                                            +
               MACRF=E,                                                +
               DSORG=PS,                                               +
               IOBAD=TAPEIOB,                                          +
               DEVD=TA,                                                +
               EXLST=TAPEEXIT
         SPACE
TAPEEXIT DC    X'87',AL3(JFCB)
         SPACE
JFCB     DS    0F
         DS    XL176
JFCBFLSQ EQU   JFCB+68,2               FILE SEQUENCE NUMBER
JFCBMASK EQU   JFCB+72,8               DATA MANAGMENT MASK
JFCBLTYP EQU   JFCB+66,1               LABEL TYPE FIELD
JFCBLP   EQU   X'10'                   LABEL = BLP
         SPACE
         TITLE 'TAPE MAPPING PROGRAM - CURRENT DATE ROUTINE'
***********************************************************************
*                                                                     *
* NAME        WKDATE                                                  *
*                                                                     *
* FUNCTION    GET CURRENT DATE AND TIME AND RETURN AS DAY OF WEEK,    *
*             DAY, MONTH, YEAR, HOUR, MINUTE, SECOND, AM/PM.          *
*                                                                     *
* DESCRIPTION GREGORIAN CALENDAR -                                    *
*                                                                     *
*             EACH "COMMON" YEAR CONTAINS 365 DAYS, EACH "LEAP"       *
*             YEAR CONTAINS 366 DAYS.  YEARS DIVISIBLE BY 4 ARE       *
*             LEAP YEARS, EXCEPT CENTESIMAL YEARS WHICH ARE LEAP      *
*             YEARS IF DIVISIBLE BY 400.                              *
*                                                                     *
*             A YEAR FOLLOWING A COMMON YEAR WILL START ONE DAY       *
*             LATER THAN THE COMMON YEAR (IF A COMMON YEAR STARTS     *
*             ON MONDAY, THE FOLLOWING YEAR WILL START ON TUESDAY).   *
*             YEARS FOLLOWING LEAP YEARS WILL START 2 DAYS LATER.     *
*             365/7 = 52, REMAINDER 1.  366/7 = 52, REMAINDER 2.      *
*                                                                     *
*             EACH 400 YEAR GROUP CONTAINS 303 COMMON YEARS AND       *
*             97 LEAP YEARS - 303 * 1 + 97 * 2 = 497.  497/7 =        *
*             59, REMAINDER 0.  THEREFORE, CALENDARS CYCLE EVERY      *
*             400 YEARS.  MULTIPLES OF 400 YEARS CAN BE DISCARDED.    *
*                                                                     *
*             EACH 100 YEARS SHIFTS THE STARTING DAY 5 DAYS (24       *
*             LEAP YEARS, 76 COMMON YEARS - 76+2*24=124. 124/7 =      *
*             59, REMAINDER 5).                                       *
*                                                                     *
*             FOR EACH 4 YEARS IN A CENTURY, ADJUST THE STARTING      *
*             DAY 5 DAYS (3 FOR COMMON YEARS, 2 FOR THE LEAP YEAR).   *
*                                                                     *
*             REM1 = REMAINDER(YEAR/400)   (DISCARD QUOTIENT)         *
*                                                                     *
*             QOT2 = QUOTIENT(REM1/100)    (HUNDREDS - ADJUST 5)      *
*             REM2 = REMAINDER(REM1/100)                              *
*                                                                     *
*             QOT3 = QUOTIENT(REM2/4)      (FOURS - ADJUST 5)         *
*             REM3 = REMAINDER(REM2/4)     (SINGLES - ADJUST 1)       *
*                                                                     *
*             ADD 2 FOR QUADRACENTESIMAL YEAR (1600, 2000, ETC.)      *
*             FIRST DAY OF A QUADRACENTESIMAL YEAR IS A SATURDAY.     *
*                                                                     *
*             ADJUSTMENT = 5*QOT2 + 5*QOT3 + REM3 + 2                 *
*                                                                     *
*             INDEX = (ADJUSTMENT + (DAY-1))/7                        *
*                                                                     *
*             IF INDEX = 0, DAY IS SATURDAY                           *
*                        1         SUNDAY                             *
*                        2         MONDAY                             *
*                        3         TUESDAY                            *
*                        4         WEDNESDAY                          *
*                        5         THURSDAY                           *
*                        6         FRIDAY                             *
*                                                                     *
* PARAMETERS  ADDRESS OF A 42 BYTE AREA TO RECEIVE THE DATE AND TIME. *
*                                                                     *
* FPL MACROS USED - SEE COMMENTS IN MAINLINE                          *
*                                                                     *
* IBM MACROS USED - SEE COMMENTS IN MAINLINE                          *
*                                                                     *
* REGISTER USAGE                                                      *
*                                                                     *
*              R0  - LINKAGE                                          *
*              R1  - LINKAGE                                          *
*              R2  - DAY OF WEEK WORK REGISTER                        *
*              R3  - PARM LIST ADDRESS                                *
*              R4  - WORK - REMAINDER                                 *
*              R5  - WORK - QUOTIENT                                  *
*              R6  - NOT USED                                         *
*              R7  - NOT USED                                         *
*              R8  - NOT USED                                         *
*              R9  - NOT USED                                         *
*              R10 - NOT USED                                         *
*              R11 - CORRECTION ACCUMULATOR                           *
*              R12 - PROGRAM BASE                                     *
*              R13 - SAVE AREA                                        *
*              R14 - LINKAGE                                          *
*              R15 - LINKAGE                                          *
*                                                                     *
***********************************************************************
         TITLE 'ENTRY LINKAGE'
WKDATE   $ENTER BASE=R12
         L     R3,0(R1)                PARM FIELD ADDRESS
         USING PARMFLD,R3              PARM FIELD ADDRESSABILITY
         MVC   ZDAY(42),=CL42' '
*--------GET TIME
         TIME
         ST    R1,TIMEDATE             REG 1 CONTAINS JULIAN OOYYDDDS
         MVC   ZAPM,=C'AM'             REG 0 CONTAINS TIME HHMMSSTH
         C     R0,=X'12000000'         TEST FOR AFTER NOON
         BL    TEST00
         MVC   ZAPM,=C'PM'             INDICATE PM
         S     R0,=X'12000000'         SUBTRACT 12 HOURS
TEST00   C     R0,=X'01000000'         TEST FOR 00 HOURS
         BNL   CONVTIME
         A     R0,=X'12000000'         MAKE IT 12
CONVTIME ST    R0,TWORD                STORE ADJUSTED TIME
         MVC   ZTIME,=X'21207A20207A2020'  MOVE IN EDIT MASK
         ED    ZTIME-1(9),TWORD        EDIT TIME INTO OUTPUT AREA
*--------GET DAY, MONTH, YEAR
         CVB   R5,PACKDATE             CONVERT YEAR TO BINARY
         SR    R4,R4                   PREPARE FOR DIVIDE
         D     R4,=F'1000'             R0 = DAY, R1 = YEAR
         ST    R4,BINDAY               STORE DAY
         LA    R5,1900(R5)             MAKE IT 19XX
         ST    R5,BINYEAR              SAVE YEAR
         CVD   R5,PACKDATE             CONVERT YEAR TO DECIMAL
         MVC   ZYEAR-2(6),=X'402021202020'  MOVE IN EDIT MASK
         ED    ZYEAR-2(6),PACKDATE+5   EDIT IN YEAR
         LA    R5,TABLE1               ADDRESS OF DAYS IN MONTH TABLE
         LA    R2,1                    INITIALIZE MONTH COUNTER
         TM    BINYEAR+3,X'03'         SEE IF A LEAP YEAR
         BZ    FINDMNTH
         C     R4,=F'59'               NOT LEAP YEAR - SEE IF JAN, FEB
         BL    FINDMNTH
         LA    R4,1(R4)                ADD 1 TO JULIAN DAY
FINDMNTH CH    R4,0(R5)                TEST DAY
         BL    GOTMONTH
         SH    R4,0(R5)
         LA    R5,2(R5)                INCREMENT MONTH POINTER
         LA    R2,1(R2)                INCRENENT MONTH COUNTER
         B     FINDMNTH
GOTMONTH CVD   R4,PACKDATE             CONVERT DAY OF MONTH TO DEC
         MVC   TWORD,=X'40202120'      MOVE IN EDIT MASK
         ED    TWORD,PACKDATE+6        EDIT
         MVC   ZDATE,TWORD+2           MOVE INTO OUTPUT AREA
         SLA   R2,4                    MULTIPLY BY 16
         LA    R2,TABLE2-16(R2)        LOAD ADDRESS OF MONTH
         MVC   ZMONTH(9),0(R2)         MOVE MONTH INTO OUTPUT AREA
*--------GET DAY OF WEEK
         L     R5,BINYEAR              LOAD YEAR
         SR    R4,R4                   PREPARE FOR DIVIDE
         D     R4,=F'400'              THROW OUT 400 YEAR GROUPS
         LTR   R5,R4                   TEST REMAINDER
         BZ    ADDDAY
         BCTR  R5,0                    SUBTRACT 1 FROM REMAINDER
         SR    R4,R4                   PREPARE FIE DIVIDE
         D     R4,=F'100'              SPLIT OUT CENTURIES
         MH    R5,=H'5'                SHIFT 5 DAYS PER CENTURY
         LR    R2,R4                   COPY REMAINDER
         SRA   R2,2                    REMAINDER/4
         MH    R2,=H'5'                SHIFT 5 DAYS FOR 4 YEAR GROUPS
         N     R4,=X'00000003'         ONE DAY FOR EACH REMAINDER
         AR    R5,R4                   ADD CENTURY ADJUSTMENT
         AR    R5,R2                   4 YEAR GROUP ADJUSTMENT
         LA    R5,2(R5)                ADJUST 2 FOR QUADRACENTESIMAL YR
ADDDAY   A     R5,BINDAY               ADD DAY OF THIS YEAR
         BCTR  R5,0                    SUBTRACT 1
         SR    R4,R4                   PREPARE FOR DIVIDE
         D     R4,=F'7'                DIVIDE BY 7
         SLA   R4,4                    TIMES 16
         LA    R4,TABLE3(R4)           POINT TO DAY
         MVC   ZDAY,0(R4)              COPY IT TO OUTPUT AREA
*--------RETURN TO CALLING PROGRAM
         $RTRN RC=0
         SPACE
         DROP  R3
         EJECT
***********************************************************************
*                                                                     *
*        DATA AREAS                                                   *
*                                                                     *
***********************************************************************
         SPACE
         LTORG
         SPACE
***********************************************************************
*                                                                     *
*        DAYS IN MONTH TABLE                                          *
*                                                                     *
***********************************************************************
         SPACE
TABLE1   DC    H'31'                   JANUARY
         DC    H'29'                   FEBRUARY  (LEAP YEAR)
         DC    H'31'                   MARCH
         DC    H'30'                   APRIL
         DC    H'31'                   MAY
         DC    H'30'                   JUNE
         DC    H'31'                   JULY
         DC    H'31'                   AUGUST
         DC    H'30'                   SEPTEMBER
         DC    H'31'                   OCTOBER
         DC    H'30'                   NOVEMBER
         DC    H'31'                   DECEMBER
         SPACE
***********************************************************************
*                                                                     *
*        MONTH NAME TABLE                                             *
*                                                                     *
***********************************************************************
         SPACE
TABLE2   DC    CL16'JANUARY'
         DC    CL16'FEBRUARY'
         DC    CL16'MARCH'
         DC    CL16'APRIL'
         DC    CL16'MAY'
         DC    CL16'JUNE'
         DC    CL16'JULY'
         DC    CL16'AUGUST'
         DC    CL16'SEPTEMBER'
         DC    CL16'OCTOBER'
         DC    CL16'NOVEMBER'
         DC    CL16'DECEMBER'
         SPACE
***********************************************************************
*                                                                     *
*        DAY OF WEEK NAME TABLE                                       *
*                                                                     *
***********************************************************************
         SPACE
TABLE3   DC    CL16'SATURDAY,'         JAN 1, 0000 WOULD HAVE BEEN SAT
         DC    CL16'SUNDAY,'
         DC    CL16'MONDAY,'
         DC    CL16'TUESDAY,'
         DC    CL16'WEDNESDAY,'
         DC    CL16'THURSDAY,'
         DC    CL16'FRIDAY,'
         SPACE
PACKDATE DS    0D
         DC    XL4'00'
TIMEDATE DS    F
BINDAY   DS    F                       JULIAN DAY IN BINARY
BINYEAR  DS    F                       YEAR IN BINARY
TWORD    DS    F
         EJECT
***********************************************************************
*                                                                     *
*        PARAMETER LIST DESCRIPTION                                   *
*                                                                     *
***********************************************************************
         SPACE
PARMFLD  DSECT
ZDAY     DC    CL10' '                 DAY OF WEEK
         DC    CL2' '
ZDATE    DC    CL2' '                  DATE
         DC    CL1' '
ZMONTH   DC    CL9' '                  MONTH
         DC    CL1' '
ZYEAR    DC    CL4' '                  YEAR
         DC    CL2' '
ZTIME    DC    CL8' '                  TIME HH:MM:SS
         DC    CL1' '
ZAPM     DC    CL2' '                  AM/PM
         END
