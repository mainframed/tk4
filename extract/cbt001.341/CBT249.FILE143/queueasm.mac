//ITLACDGA JOB (991000CG,341),'C.GRIFFIN',CLASS=S,NOTIFY=ITLACDG,
// MSGCLASS=T
//QASM     PROC MBR=
//ASM      EXEC PGM=IFOX00,
//*
//* ASSEMBLE QUEUE SOURCE
//*
//  PARM='LOAD,NODECK,TERM,STMT,NUM,RENT,BUF(MAX)',REGION=2048K
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR,DCB=BLKSIZE=19040
//         DD  DSN=SYS1.AMODGEN,DISP=SHR          SYSGEN MACRO LIBRARY
//         DD  DSN=SYS1.HASPSRC,DISP=SHR          JES2 MACRO LIBRARY
//         DD  DSN=ITLACDG.DISTRIB.ASM,DISP=SHR   Q MACROS
//**       DD  DSN=SYS1.ACFMAC,DISP=SHR           ACF2 MACRO LIBRARY
//**
//**  NOTE THAT IF YOUR INSTALLATION HAS
//**  CAMBRIDGE SYSTEMS GROUP'S SECURITY PACKAGE (ACF2)
//**  THEN YOU MUST INCLUDE IT'S MACRO LIBRARY IN THE
//**  ASSEMBLY SYSLIB STREAM. OTHERWISE YOU WON'T PICK
//**  UP THE 'COPY CODE' THAT ACF2 INSERTS IN THE JES2
//**  MAPPING MACROS
//**
//**  IF YOU DO NOT HAVE ACF2 INSTALLED, SIMPLY REMOVE THE
//**  ABOVE CONCATENATION AND QUEUE WILL ASSEMBLE JUST FINE
//**
//SYSUT1   DD  SPACE=(CYL,(5,5)),UNIT=VIO         VIO UNIT
//SYSUT2   DD  SPACE=(CYL,(5,5)),UNIT=VIO         VIO UNIT
//SYSUT3   DD  SPACE=(CYL,(5,5)),UNIT=VIO         VIO UNIT
//SYSPRINT DD  SYSOUT=*
//SYSTERM  DD  SYSOUT=Q,HOLD=YES
//SYSGO    DD  DSN=&&LOADSET,DISP=(MOD,PASS),UNIT=SYSDA,
//  SPACE=(3200,(5000,1500)),DCB=(BLKSIZE=3200,LRECL=80,RECFM=FB)
//SYSIN    DD  DSN=ITLACDG.DISTRIB.ASM(&MBR),DISP=SHR
// PEND
//*
//*
//**** ASSEMBLE ALL THE REENTRANT MODULES
//*
//*
//QUEUE EXEC QASM,MBR=Q1          QUEUE
//ALLOC EXEC QASM,MBR=Q2          ALLOCATE
//CKPT  EXEC QASM,MBR=Q3          CKPT
//DDNAM EXEC QASM,MBR=Q4          DDNAME
//DISPL EXEC QASM,MBR=Q5          DISPLAY
//FINDJ EXEC QASM,MBR=Q6          FINDJOB
//FORMA EXEC QASM,MBR=Q7          FORMAT
//HELP  EXEC QASM,MBR=Q8          HELP
//HEXBL EXEC QASM,MBR=Q9          HEXBLK
//INIT  EXEC QASM,MBR=Q10         INIT
//JCL   EXEC QASM,MBR=Q11         JCL
//JLOG  EXEC QASM,MBR=Q12         JLOG
//JMSG  EXEC QASM,MBR=Q13         JMSG
//LIST  EXEC QASM,MBR=Q14         LIST
//LISTD EXEC QASM,MBR=Q15         LISTDS
//PARSE EXEC QASM,MBR=Q16         PARSE
//READS EXEC QASM,MBR=Q17         READSPC
//REPOS EXEC QASM,MBR=Q18         REPOS
//SAVE  EXEC QASM,MBR=Q19         SAVE
//SEARC EXEC QASM,MBR=Q20         SEARCH
//SYSLO EXEC QASM,MBR=Q21         SYSLOG
//PDDB  EXEC QASM,MBR=Q22         PDDB
//INITS EXEC QASM,MBR=Q23         INITS
//ACTIV EXEC QASM,MBR=Q24         ACTIVE
//SYSOU EXEC QASM,MBR=Q25         SYSOUT
//*
//LKED     EXEC PGM=IEWL,PARM='XREF,LIST,LET,NCAL,RENT,REUS',
//      COND=(7,LT)
//*
//*
//**** LINK THE REENTRANT MODULES TO FORM THE QUEUE COMMAND
//*
//*
//SYSLMOD  DD  DSN=ITLACDG.CMDLIB,DISP=SHR
//SYSUT1   DD  UNIT=VIO,SPACE=(2048,(300,100))
//SYSPRINT DD  SYSOUT=*
//SYSLIB   DD  DSN=ITLACDG.CMDLIB,DISP=SHR
//SYSLIN   DD  DSN=&&LOADSET,DISP=(OLD,DELETE)
//         DD  *
  ORDER QUEUE(P),PARSE,DISPLAY,DDNAME,CKPT
  ORDER FORMAT,SEARCH,READSPC,HELP,ACTIVE
  ORDER FINDJOB,PDDB,REPOS,JCL,JLOG,JMSG,INIT
  ORDER LIST,LISTDS,ALLOCATE,SAVE,SYSLOG,HEXBLK,SYSOUT
  ENTRY QUEUE
  ALIAS Q
  NAME QUEUE(R)
/*
//ASM2     EXEC PGM=IFOX00,
//  PARM='OBJ,NODECK,TERM,STMT,NUM,BUF(MAX)',REGION=1024K
//*
//*
//**** ASSEMBLE AND LINK THE NON REENTRANT COMMON MODULE
//*
//*
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR,DCB=BLKSIZE=19040
//         DD  DSN=ITLACDG.DISTRIB.ASM,DISP=SHR   Q MACROS
//SYSUT1   DD  SPACE=(CYL,(5,5)),UNIT=VIO
//SYSUT2   DD  SPACE=(CYL,(5,5)),UNIT=VIO
//SYSUT3   DD  SPACE=(CYL,(5,5)),UNIT=VIO
//SYSPRINT DD  SYSOUT=*
//SYSTERM  DD  SYSOUT=Q,HOLD=YES
//SYSGO    DD  DSN=&&LOADSET,UNIT=SYSDA,SPACE=(3200,(500,100)),
//  DISP=(MOD,PASS),DCB=(BLKSIZE=3200,LRECL=80,RECFM=FB)
//SYSIN    DD  DSN=ITLACDG.DISTRIB.ASM(Q0),DISP=SHR
//*
//LKED2  EXEC PGM=IEWL,PARM='XREF,LIST,LET,NCAL',
//            COND=(7,LT,ASM2)
//*
//****  LINK EDIT THE NON RE-ENTRANT MODULE
//*
//SYSLMOD  DD  DSN=ITLACDG.CMDLIB,DISP=SHR
//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(2,1))
//SYSPRINT DD  SYSOUT=*
//SYSLIB   DD  DSN=ITLACDG.CMDLIB,DISP=SHR
//SYSLIN   DD  DSN=&&LOADSET,DISP=(OLD,DELETE)
//         DD  *
 ORDER QCOMMON(P)
 ENTRY QCOMMON
 NAME  QUEUECMN(R)
/*
