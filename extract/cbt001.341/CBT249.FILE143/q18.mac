REPOS    QSTART 'QUEUE COMMAND - DATASET REPOSITIONING ROUTINES'
         USING QCKPT,R10      BASE REG FOR CKPT WORK AREA
         L     R10,QVCKPT     LOAD BASE REG
         USING QDISPLAY,R9    BASE REG FOR DISPLAY WORK AREA
         L     R9,QVDSPL      LOAD BASE REG
         USING WORK,R13       BASE REG FOR LOCAL WORK AREA
***********************************************************************
*                                                                     *
*   BRANCH TO PROPER ROUTINE                                          *
*                                                                     *
***********************************************************************
         CLC   QPDSID,=H'0'   IS THERE A VALID DATASET?
         BNE   GO             YES. GO AHEAD.
         QTILT '*** YOU ARE NOT PROCESSING A VALID DATASET ***'
GO       LH    R1,QCODEH      LOAD FUNCTION CODE
         CH    R1,=H'32'      IS THE FUNCTION SUPPORTED?
         BH    STOP           NO. RETURN.
         B     *+4(R1)        BRANCH TO ROUTINE
         B     TILT           0 OFFSET
         B     FIND           4
         B     FINDTIME       8
         B     COLUMN         12
         B     AT             16
         B     PLUS           20
         B     MINUS          24
         B     TOP            28
         B     BOTTOM         32
TILT     QTILT '*** PARAMETER IS INVALID OR OMITTED ***'
***********************************************************************
*                                                                     *
*   REPOSITION VERTICALLY                                             *
*                                                                     *
***********************************************************************
* SKIP FORWARD
PLUS     CLC   HF,QSUBNAME    HALF FORWARD?                 *HMD 11/80*
         BE    PLUSB          YES, CONTINUE                 *HMD 11/80*
         CLC   PF,QSUBNAME    PAGE FORWARD?                 *HMD 07/79*
         BNE   PLUS1          NOPE, CONTINUE                *HMD 07/79*
PLUSB    SR    R2,R2          CLEAR REG. 2                  *HMD 11/80*
         ICM   R2,3,QLNG1     CHECK LENGTH OF PARM          *HMD 07/79*
         BP    PLUSA          PARM IS GREATER THAN ZERO     *HMD 07/79*
         LA    R2,1           LENGTH OF ONE ASSUMED         *HMD 07/79*
         STH   R2,QLNG1       SAVE LENGTH FOR SUBROUTINE    *HMD 07/79*
         O     R2,=F'240'     MAKE INTO ZONED DIGIT         *HMD 07/79*
         STC   R2,QPARM1      ASSUME 1 PAGE ENTERED         *HMD 07/79*
PLUSA    BAL   R4,NUMERIC     CHECK FOR NUMBERS             *HMD 07/79*
         CLC   HF,QSUBNAME    HALF FORWARD?                 *HMD 11/80*
         BNE   PLUSPF         NOPE, PAGE FORWARD            *HMD 11/80*
         MP    COUNT,P11      MULTIPLY COUNT BY 1/2 PAGE    *HMD 11/80*
         B     PLUSC          BRANCH AROUND 'PAGE' CODE     *HMD 11/80*
PLUSPF   MP    COUNT,P21      MULTIPLY COUNT BY 1   PAGE    *HMD 11/80*
PLUSC    AP    QPREC,COUNT    ADD TO CURRENT RECORD         *HMD 07/79*
         BP    RESUME         IF OVERFLOW, DISPLAY LAST REC *HMD 07/79*
         B     BOTTOM         CONTINUE WITH DISPLAY         *HMD 07/79*
PLUS1    BAL   R4,NUMERIC     VALIDATE PARAMETER
         AP    QPREC,COUNT    ADD COUNT TO CURRENT RECORD
         B     RESUME         CALL LISTDS
* SKIP BACKWARD
MINUS    CLC   HB,QSUBNAME    HALF BACKWARD?                *HMD 11/80*
         BE    MINUSB                                       *HMD 11/80*
         CLC   PB,QSUBNAME    PAGE BACKWARD?                *HMD 07/79*
         BNE   MINUS1         NOPE, CONTINUE                *HMD 07/79*
MINUSB   SR    R2,R2          CLEAR REG. 2                  *HMD 07/79*
         ICM   R2,3,QLNG1     CHECK LENGTH OF PARM          *HMD 07/79*
         BP    MINUSA         PARM IS GREATER THAN ZERO     *HMD 07/79*
         LA    R2,1           LENGTH OF ONE                 *HMD 07/79*
         STH   R2,QLNG1       SAVE LENGTH FOR SUBROUTINE    *HMD 07/79*
         O     R2,=F'240'     MAKE INTO ZONED DIGIT         *HMD 07/79*
         STC   R2,QPARM1      SAVE PARAMETER                *HMD 07/79*
MINUSA   BAL   R4,NUMERIC     CHECK FOR NUMBERS             *HMD 07/79*
         CLC   HB,QSUBNAME    THE HALFBACK HAS THE BALL     *HMD 11/80*
         BNE   MINUSHB        UNSUCCESSFUL PASS             *HMD 11/80*
         MP    COUNT,P11      MULITIPLY BY 1/2 PAGE         *HMD 11/80*
         B     MINUSC         BRANCH AROUND PAGE CODE       *HMD 11/80*
MINUSHB  MP    COUNT,P21      MULTIPLY  BY 1   PAGE         *HMD 11/80*
MINUSC   SP    QPREC,COUNT    SUBTRACT FROM CURRENT REC #   *HMD 07/79*
         BP    RESUME         RESUME DISPLAY IF POSITIVE    *HMD 07/79*
         B     TOP            SET CURRENT RECORD AT TOP     *HMD 07/79*
MINUS1   BAL   R4,NUMERIC     VALIDATE PARAMETER
         SP    QPREC,COUNT    SUBTRACT COUNT FROM CURRENT RECORD
         BP    RESUME         CALL LISTDS IF RESULT POSITIVE.
* TOP OF DATASET
TOP      ZAP   QPREC,=P'1'    SET CURRENT RECORD TO TOP OF DS
* RESUME AT CURRENT RECORD
RESUME   L     R15,=V(LISTDS) ADDR OF LISTDS MODULE
         BALR  R14,R15        GO TO IT
STOP     QSTOP
* BOTTOM OF DATASET
BOTTOM   ZAP   QPREC,=P'9999999' SET CURRENT RECORD TO LARGEST
         B     RESUME         CALL LISTDS
* POSITION TO THIS RECORD
AT       BAL   R4,NUMERIC     VALIDATE PARAMETER
         ZAP   QPREC,COUNT    INDICATE REPOSITION NO
         B     RESUME         CALL LISTDS
* CHECK THE PARMETER FOR VALID NUMERIC AND PACK IT
NUMERIC  LH    R2,QLNG1       LENGTH OF PARM
         SH    R2,=H'1'       IS THE COUNT FIELD ZERO?
         BM    RESUME         YES. RESUME FROM CURRENT POSITION.
         CH    R2,=H'15'      GREATER THAN MAX LENGTH?      *HMD 06/79*
         BNH   NUMOK          NO, NUMBERS ARE OK.           *HMD 06/79*
         LA    R2,15          FORCE MAX LENGTH OF 15        *HMD 06/79*
NUMOK    DS    0H             CONTINUE WITH SUBROUTINE      *HMD 06/79*
         MVC   QFZONES,QFZONE INITIALIZE NUMERIC CHECK
         EX    R2,MVZ         MOVE THE ZONES FOR VALIDITY CHECK
         CLC   QFZONES,QFZONE IS THE FIELD NUMERIC?
         BNE   TILT           NO. TILT.
         EX    R2,PACK        PACK THE FIELD INTO COUNT
         BR    R4             RETURN
* EXECUTED INSTRUCTIONS
MVZ      MVZ   QFZONES(1),QPARM1 CHECK FOR NUMERIC
PACK     PACK  COUNT,QPARM1(1) PACK COUNT
***********************************************************************
*                                                                     *
*   REPOSITION HORIZONTALLY                                           *
*                                                                     *
***********************************************************************
COLUMN   XC    QPOFFSET,QPOFFSET   DEFAULT TO COLUMN 1      *HMD 05/79*
         BAL   R4,NUMERIC     VALIDATE PARAMETER
         CP    COUNT,=P'255'  IS THE COUNT FIELD TOO BIG?
         BH    TILT           YES. TILT.
         SP    COUNT,=P'1'    COLUMN RELATIVE TO ZERO
         BM    TILT           INVALID. TILT.
         CVB   R5,COUNT       CONVERT TO BINARY
         STH   R5,QPOFFSET    STORE IN QPOFFSET
         B     RESUME         CALL LISTDS
***********************************************************************
*                                                                     *
*   LOCATE SPECIFIC RECORD                                            *
*                                                                     *
***********************************************************************
FIND     CLI   QSUBNAME+1,C'A' IS THE REQUEST FOR FIND ALL?
         BE    FIND2          YES. DO NOT UPDATE RECORD POINTER.
         AP    QPREC,=P'1'    START SEARCH AT NEXT RECORD
FIND2    CLI   QPARM1,C' '    IS THERE A PARAMETER?
         BE    RESUME         NO. CONTINUE WITH PREVIOUS FIND.
         LA    R2,QDREPLY+62  END OF USER REPLY
         LA    R3,61          MAXIMUM LENGTH OF PARM
         SH    R3,QOFF1       OFFSET TO FIRST PARM
LOOP     CLC   0(1,R2),QPARM1 IS THIS THE DELIMITER?
         BE    FOUND          YES. CONTINUE.
         BCTR  R2,0           TRY THE PREVIOUS BYTE
         BCT   R3,LOOP        IS THE LENGTH FIELD EXHAUSTED?
         B     TILT           YES. TILT.
FOUND    BCTR  R3,0           DECREMENT LENGTH BY 1
         LA    R2,QDREPLY+1   ADDR OF REPLY + 1
         AH    R2,QOFF1       ADDR OF FIRST BYTE OF PARM
         EX    R3,MVC         MOVE PARM TO QPFIND
         STH   R3,QPLNG       SAVE LENGTH-1 OF PARM
         B     COLTEST        TEST IF COL KEYWORD IS HERE   *HMD 11/80*
MVC      MVC   QPFIND(1),0(R2) MOVE PARM TO QPFIND
         EJECT                                              *HMD 11/80*
***********************************************************************
*                                                                     *
*   COLUMN RANGE FOR FIND                                             *
*                                                                     *
***********************************************************************
COLTEST  DS    0H             COLUMN TEST FOR FIND          *HMD 11/80*
         XC    QOFFS,QOFFS    RESET COLUMN OFFSETS          *HMD 11/80*
         XC    QOFFE,QOFFE                                  *HMD 11/80*
         LA    R2,3(R2,R3)    PREPARE FOR NEXT FIELD        *HMD 11/80*
         LA    R3,QDREPLY+55  END OF USER REPLY AREA        *HMD 11/80*
LOOP1    CLC   0(3,R2),=CL3'COL'     * COLUMN PARM?         *HMD 11/80*
         BE    FOUNDA         EUREKA                        *HMD 11/80*
         LA    R2,1(R2)       NO LOOK AT NEXT FIELD         *HMD 11/80*
         CR    R2,R3          END OF REPLY?                 *HMD 11/80*
         BH    RESUME         YES, COLUMN INVALID           *HMD 11/80*
         B     LOOP1          KEEP LOOKING                  *HMD 11/80*
FOUNDA   DS    0H             YES, WE'VE FOUND IT           *HMD 11/80*
         LA    R2,3(R2)       NEXT FIELD....                *HMD 11/80*
         CLI   0(R2),C'('     LP PRESENT?                   *HMD 11/80*
         BNE   PRESUME        NO, EXIT                      *HMD 11/80*
         LA    R2,1(R2)       NEXT FIELD                    *HMD 11/80*
         LA    R3,QDREPLY+62  END OF REPLY                  *HMD 11/80*
         LR    R5,R2          SAVE START OF THIS FIELD      *HMD 11/80*
         MVI   QDELIMIT,C','  LOOKING FOR DELIMETER = ','   *HMD 11/80*
         BAL   R7,CHKDEL      GO CHECK THE DELIMITER        *HMD 11/80*
         CVB   R6,COUNT       CONVERT START COL TO BIN      *HMD 11/80*
         LTR   R6,R6          OFFSET OF ZERO?               *HMD 11/80*
         BZ    PRESUME        YES. GO INDICATE AN ERROR     *HMD 11/80*
         BCTR  R6,0           DECREMENT OFFSET BY 1         *HMD 11/80*
         STH   R6,QOFFS       SAVE START COLUMN             *HMD 11/80*
         LA    R2,1(R2)       NEXT FIELD                    *HMD 11/80*
         LR    R5,R2          SAVE START OF FIELD           *HMD 11/80*
         MVI   QDELIMIT,C')'  LOOKING FOR DELIMETER = ')'   *HMD 11/80*
         BAL   R7,CHKDEL      CHECK THE DELIMETER           *HMD 11/80*
         CVB   R6,COUNT       CONVERT END VALUE TO BIN      *HMD 11/80*
         LTR   R6,R6          USER SPECIFY ZERO END COL     *HMD 11/80*
         BZ    PRESUME        YES. GO INDICATE ERROR        *HMD 11/80*
         BCTR  R6,0           BUMP DOWN BY 1                *HMD 11/80*
         STH   R6,QOFFE       SAVE END COLUMN VALUE         *HMD 11/80*
         CLC   QOFFS,QOFFE    IS START GT END COLUMN?       *HMD 11/80*
         BNL   PRESUME        YES, TELL USER OF ERROR       *HMD 11/80*
         B     RESUME         CONTINUE WITH NORMAL PROCESS  *HMD 11/80*
CHKDEL   DS    0H                                           *HMD 11/80*
         CLC   0(1,R2),QDELIMIT    DELIMITER FOUND?         *HMD 11/80*
         BE    CHK010         YES, GO PROCESS               *HMD 11/80*
         LA    R2,1(R2)       NO, LOOK AT NEXT FIELD        *HMD 11/80*
         CR    R2,R3          END OF REPLY?                 *HMD 11/80*
         BH    PRESUME        YES, EXIT                     *HMD 11/80*
         B     CHKDEL         NO, CHECK AGAIN.              *HMD 11/80*
CHK010   LR    R4,R2          SAVE DELIMITER ADDRESS        *HMD 11/80*
         SR    R4,R5          LENGTH OF SUB-PARM            *HMD 11/80*
         BNP   PRESUME        ZERO, NEGATIVE, ERROR         *HMD 11/80*
         CH    R4,=H'3'       LENGTH TOO LONG?              *HMD 11/80*
         BH    PRESUME        YES, DISGARD COLUMN SEARCH    *HMD 11/80*
         BCTR  R4,0           DOWN 1 FOR EXECUTE            *HMD 11/80*
         MVC   QFZONES,QFZONE INITIALIZE FOR NUM TEST       *HMD 11/80*
         EX    R4,MVZ1        TEST FOR NUMBERS              *HMD 11/80*
         CLC   QFZONES,QFZONE IS IT NUMERIC?                *HMD 11/80*
         BNE   PRESUME        NO, EXIT WITH MESSAGE         *HMD 11/80*
         EX    R4,PACK1       PACK THE VALUE                *HMD 11/80*
         BR    R7             RETURN TO CALLER              *HMD 11/80*
PRESUME  DS    0H             ERROR ROUTINE                 *HMD 11/80*
         XC    QOFFS,QOFFS    CLEAR START COLUMN            *HMD 11/80*
         XC    QOFFE,QOFFE    CLEAR END   COLUMN            *HMD 11/80*
         QTILT ' *** ERROR IN COLUMN SPECIFICATION ***'     *HMD 11/80*
MVZ1     MVZ   QFZONES(1),0(R5)                             *HMD 11/80*
PACK1    PACK  COUNT,0(1,R5)                                *HMD 11/80*
         EJECT                                              *HMD 11/80*
***********************************************************************
*                                                                     *
*   REPOSITION IN SYSLOG DATASET BY TIME OF DAY                       *
*                                                                     *
***********************************************************************
FINDTIME CLI   QPARM1,C' '    IS THE PARM OMITTED?
         BE    TILT           YES. TILT.
         B     RESUME         CALL LISTDS
***********************************************************************
*                                                                     *
*   MISCELLANY                                                        *
*                                                                     *
***********************************************************************
PF       DC    C'PF'           PAGE FORWARD                 *HMD 07/79*
PB       DC    C'PB'           PAGE BACKWARD                *HMD 07/79*
HF       DC    C'HF'           HALF FORWARD                 *HMD 11/80*
HB       DC    C'HB'           HALF BACKWARD                *HMD 11/80*
P21      DC    P'21'           MULTIPLICAND IN 'PF' COMMAND *HMD 07/79*
P11      DC    P'11'           MULTIPLICAND IN 'HF' COMMAND *HMD 11/80*
         LTORG
         QCOMMON
WORK     DSECT
         DS    CL72
COUNT    DS    D
         END
