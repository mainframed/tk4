SEARCH   QSTART 'QUEUE COMMAND - JQE AND JOE SEARCH AND FORMAT'
         GBLB  &NJE           NJE RELEASE 3.1 SUPPORT   NJE *HMD 07/80*
         USING QCKPT,R10      BASE REG FOR CKPT WORK AREA
         L     R10,QVCKPT     LOAD BASE REG
         USING JQEDSECT,R9    BASE REG FOR JQE DSECT
         USING JOEDSECT,R8    BASE REG FOR JOE DSECT
         USING WORK,R13       BASE REG FOR LOCAL WORK AREA
***********************************************************************
*                                                                     *
*   BRANCH TO PROPER ROUTINE                                          *
*                                                                     *
***********************************************************************
         LH    R1,QCODEH      LOAD FUNCTION CODE INTO R1
         AIF   (&NJE).LBL001  USE NJE HIGHEST VALUE         *HMD 05/81*
         CH    R1,=H'48'      IS THE FUNCTION SUPPORTED?
         AGO   .LBL002                                      *HMD 05/81*
.LBL001  ANOP                                               *HMD 05/81*
         CH    R1,=H'52'      IS THE FUNCTION SUPPORTED?    *HMD 05/81*
.LBL002  ANOP                                               *HMD 05/81*
         BH    STOP           NO. RETURN.
         B     *+4(R1)        BRANCH TO ROUTINE
         B     ST             0 OFFSET
         B     DA             4
         B     DI             8
         B     AO   DO        12
         B     AI             16
         B     AO             20
         B     HI             24
         B     HO             28
         B     DT             32
         B     DJ             36
         B     DS             40
         B     DQ             44                            *HMD 11/80*
         B     DF             48                            *HMD 11/80*
         AIF   (NOT &NJE).LBL003                            *HMD 01/81*
         B     DX             52  NJE DISPLAY XMIT QUEUE    *HMD 01/81*
.LBL003  ANOP                                               *HMD 01/81*
***********************************************************************
*                                                                     *
*   STATUS - FIND ALL JOBS THAT MATCH LEVEL                           *
*                                                                     *
***********************************************************************
ST       CLI   QPARM1,C' '    DID USER SPECIFY LEVEL?
         BNE   ST2            NO. USE QLOGON.
         MVC   QPARM1,QLOGON  MOVE USER PARM1 TO LEVEL
ST2      BAL   R2,PARMLEN     DETERMINE PARM LENGTH
* SEARCH THE TSO QUEUE
         USING JQTDSECT,R1    BASE REG FOR JQT
DJ2      LH    R6,QLNG1       LENGTH OF COMPARE FOR LEVEL
         L     R1,QCJQHEAD    LOAD ADDR OF JQT
         LA    R4,JQTTSU      ADDR OF TSO QUEUE
         MVI   QCLASS,0       INDICATE THIS IS THE TSO QUEUE
         BAL   R2,SRCHJQE     SEARCH THE QUEUE
         AIF   (NOT &NJE).LBL004                            *HMD 01/81*
         B     DJX            END OF QUEUE                  *HMD 01/81*
         AGO   .LBL005                                      *HMD 01/81*
.LBL004  ANOP                                               *HMD 01/81*
         B     DJ3            END OF QUEUE
.LBL005  ANOP                                               *HMD 01/81*
         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?
         BNE   SKIPJQE        NO. SKIP THIS RECORD.
         B     PRTJQE         PRINT THE RECORD
         AIF   (NOT &NJE).LBL006                            *HMD 01/81*
* SEARCH THE TRANSMIT QUEUE                                 *HMD 01/81*
DJX      LH    R6,QLNG1       LENGTH OF COMPARE FOR LEVEL   *HMD 01/81*
         L     R1,QCJQHEAD    LOAD ADDR OF JQT              *HMD 01/81*
         LA    R4,JQTXMT      GET ADDR OF XMIT QUEUE        *HMD 01/81*
         MVI   QCLASS,16      INDICATE THIS IS XMIT QUEUE   *HMD 01/81*
         BAL   R2,SRCHJQE     SEARCH THE QUEUE              *HMD 01/81*
         B     DJ3            END OF QUEUE                  *HMD 01/81*
         EX    R6,STCLC       IS JOBNAME EQUAL TO LEVEL?    *HMD 01/81*
         BNE   SKIPJQE        NO. SKIP THIS RECORD          *HMD 01/81*
         B     PRTJQE         PRINT THE RECORD              *HMD 01/81*
.LBL006  ANOP                                               *HMD 01/81*
* SEARCH THE SYSTEM QUEUE
DJ3      L     R1,QCJQHEAD    LOAD ADDR OF JQT
         LA    R4,JQTSTC      ADDR OF STC QUEUE
         MVI   QCLASS,4       INDICATE THIS IS THE STC QUEUE
         BAL   R2,SRCHJQE     SEARCH THE QUEUE
         B     DJ4            END OF QUEUE
         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?
         BNE   SKIPJQE        NO. SKIP THIS RECORD.
         B     PRTJQE         PRINT THE RECORD
* SEARCH FOR HELD OUTPUT
DJ4      L     R1,QCJQHEAD    LOAD ADDR OF JQT
         LA    R4,JQTOUT      ADDR OF $OUTPUT QUEUE
         DROP  R1
         MVI   QCLASS,8       INDICATE THIS IS THE HELD OUT QUEUE
         BAL   R2,SRCHJQE     SEARCH THE QUEUE
         B     ST3            END OF QUEUE
         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?
         BNE   SKIPJQE        NO. SKIP THIS RECORD.
         CLI   JQEHLDCT,0     ARE THERE ANY HELD DATASETS? (PART 1)
         BNE   PRTJQE         YES. PRINT THE RECORD.
         TM    JQEHQLOK,X'F0' ARE THERE ANY HELD DATASETS? (PART 2)
         BNZ   PRTJQE         YES. PRINT THE RECORD.
         B     REJJQE         REJECT THE RECORD
* SEARCH INPUT QUEUES
ST3      MVI   QCLASS,192     START WITH CLASS A
ST4      BAL   R2,NEXTJQT     FIND NEXT QUEUE
         BAL   R2,SRCHJQE     SEARCH THE QUEUE
         B     ST4            END OF QUEUE
         CLI   JQEFLAGS,0     IS THE JOB EXECUTING OR HELD?
         BNE   ST7            YES. SPECIAL HANDLING.
         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?
         BNE   SKIPJQE        NO. SKIP THIS RECORD.
         B     PRTJQE         PRINT THE JQE
ST7      EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?
         BNE   REJJQE         NO. SKIP THIS RECORD.
         B     PRT2JQE        PRINT THE RECORD WITHOUT INCR COUNT
* SEARCH OUTPUT QUEUES
ST5      MVI   QCLASS,192     START WITH CLASS A
ST6      BAL   R2,NEXTJOT     DETERMINE NEXT QUEUE
         BAL   R2,SRCHJOE     SEARCH A JQE QUEUE
         B     ST6            END OF QUEUE
         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?
         BNE   SKIPJOE        NO. SKIP THIS RECORD.
         B     PRTJOE         PRINT THE RECORD
* COMPARE USED TO CHECK LEVEL
STCLC    CLC   QPARM1(1),JQEJNAME IS THE JOBNAME EQUAL TO LEVEL?
***********************************************************************
*                                                                     *
*   DQ - PRINT SUMMARY OF ALL JOBS IN THE INPUT QUEUES                *
*                                                                     *
***********************************************************************
* SEARCH ALL QUEUES                                         *HMD 11/80*
DQ       DS    0H                                           *HMD 11/80*
         MVI   QCLASS,192     START WITH CLASS 'A'          *HMD 11/80*
         MVC   QDHLINE,DQHEADER     MOVE IN THE HEADING     *HMD 11/80*
DQ1      BAL   R2,NEXTJQT     FIND THE NEXT QUEUE           *HMD 11/80*
         ZAP   QCOUNTE,=P'0'  ZERO COUNT FOR EXECUTING JOBS *HMD 11/80*
         ZAP   QCOUNTA,=P'0'  ZERO COUNT FOR AWAITING JOBS  *HMD 11/80*
         ZAP   QCOUNTH,=P'0'  ZERO COUNT FOR HELD JOBS      *HMD 11/80*
         BAL   R2,SRCHJQE     SEARCH THE QUEUE              *HMD 11/80*
         B     DQ4            END OF QUEUE                  *HMD 11/80*
         TM    JQEFLAGS,QUEBUSY   IS THIS EXECUTING?        *HMD 11/80*
         BZ    DQ2            NO, NEXT TEST                 *HMD 11/80*
         AP    QCOUNTE,=P'1'  YES, BUMP COUNTER             *HMD 11/80*
         B     SKIPJQE        YES, PROCESS NEXT JQE         *HMD 11/80*
DQ2      TM    JQEFLAGS,QUEHOLDA+QUEHOLD1+QUEHOLD2          *HMD 11/80*
*                             IS THIS A HELD JOB?           *HMD 11/80*
         BZ    DQ3            NO, NEXT TEST                 *HMD 11/80*
         AP    QCOUNTH,=P'1'  YES, BUMP COUNTER             *HMD 11/80*
         B     SKIPJQE        PROCESS NEXT JQE              *HMD 11/80*
DQ3      CLI   JQEFLAGS,0     IS THIS JOB AWAITING XEQ      *HMD 11/80*
         BNE   SKIPJQE        NO, SKIP JQE                  *HMD 11/80*
         AP    QCOUNTA,=P'1'  ADD 1 TO COUNTER              *HMD 11/80*
         B     SKIPJQE        PROCESS NEXT JQE              *HMD 11/80*
DQ4      CLC   QCOUNT,=PL3'0' IS THIS QUEUE EMPTY           *HMD 11/80*
         BE    DQ1            YES, TRY THE NEXT QUEUE       *HMD 11/80*
         MVC   QDMSG,DQLINE   MOVE IN DETAIL LINE           *HMD 11/80*
         MVC   FCOUNT,ED5     MOVE IN                       *HMD 11/80*
         ED    FCOUNT,QCOUNTE     NUMBER OF JOBS            *HMD 11/80*
         MVC   QECOUNT,FCOUNT+3           IN EXECUTION      *HMD 11/80*
         MVC   FCOUNT,ED5     MOVE IN                       *HMD 11/80*
         ED    FCOUNT,QCOUNTA     NUMBER OF JOBS            *HMD 11/80*
         MVC   QACOUNT,FCOUNT+3           AWAITING EXECUTION*HMD 11/80*
         MVC   FCOUNT,ED5     MOVE IN                       *HMD 11/80*
         ED    FCOUNT,QCOUNTH     NUMBER OF JOBS            *HMD 11/80*
         MVC   QHCOUNT,FCOUNT+3           IN HELD STATUS    *HMD 11/80*
         MVC   FCOUNT,ED5     MOVE IN THE TOTAL NO. OF JOBS *HMD 11/80*
         ED    FCOUNT,QCOUNT     IN THIS QUEUE              *HMD 11/80*
         MVC   CLASS,QCLASS   MOVE IN QUEUE CLASS           *HMD 11/80*
         BAL   R2,DISPLAY                                   *HMD 11/80*
         B     DQ1                                          *HMD 11/80*
         EJECT                                              *HMD 11/80*
***********************************************************************
*                                                                     *
*   DF - PRINT SUMMARY OF ALL JOBS IN THE OUTPUT QUEUES               *
*                                                                     *
***********************************************************************
DF       MVI   QCLASS,192     START WITH CLASS A            *HMD 11/80*
         MVC   QDHLINE,DFHEADER   MOVE IN THE HEADING       *HMD 11/80*
DF1      BAL   R2,NEXTJOT     FIND NEXT QUEUE               *HMD 11/80*
         ZAP   QCOUNTE,=P'0'  ZERO COUNT FOR JOBS PRINTING  *HMD 11/80*
         ZAP   QCOUNTH,=P'0'  ZERO COUNT FOR JOBS PUNCHING  *HMD 11/80*
         BAL   R2,SRCHJOE     SEARCH THE QUEUE              *HMD 11/80*
         B     DF2            END OF QUEUE                  *HMD 11/80*
         TM    JOEFLAG,$JOEPRT                              *HMD 11/80*
         BNO   DFX            TRY THE PUNCH QUEUE           *HMD 11/80*
         AP    QCOUNTE,=P'1'  ADD 1 TO THE COUNTER          *HMD 11/80*
         B     SKIPJOE        PROCESS NEXT JOE              *HMD 11/80*
DFX      TM    JOEFLAG,$JOEPUN                              *HMD 11/80*
         BNO   SKIPJOE        NEITHER PRINT OR PUNCH        *HMD 11/80*
         AP    QCOUNTH,=P'1'  ADD 1 TO THE COUNTER          *HMD 11/80*
         B     SKIPJOE        PROCESS NEXT JOE              *HMD 11/80*
DF2      CLC   QCOUNT,=PL3'0' QUEUE EMPTY?                  *HMD 11/80*
         BE    DF1            TRY NEXT QUEUE                *HMD 11/80*
         MVC   QDMSG,DFLINE   MOVE IN HEADER                *HMD 11/80*
         MVC   FCOUNT,ED5     ALSO EDIT PATTERN             *HMD 11/80*
         ED    FCOUNT,QCOUNTE EDIT PRINT COUNT              *HMD 11/80*
         MVC   QECOUNT,FCOUNT+3                             *HMD 11/80*
         MVC   FCOUNT,ED5     MOVE IN EDIT PATTERN          *HMD 11/80*
         ED    FCOUNT,QCOUNTH EDIT PUNCH COUNT              *HMD 11/80*
         MVC   QACOUNT,FCOUNT+3                             *HMD 06/81*
         MVC   FCOUNT,ED5     MOVE IN EDIT PATTERN          *HMD 11/80*
         ED    FCOUNT,QCOUNT  MOVE IN TOTAL QUEUE COUNT     *HMD 11/80*
         MVC   CLASS,QCLASS   MOVE IN QUEUE CLASS           *HMD 11/80*
         BAL   R2,DISPLAY     GO DISPLAY IT                 *HMD 11/80*
         B     DF1            PROCESS NEXT QUEUE            *HMD 11/80*
         EJECT                                              *HMD 11/80*
***********************************************************************
*                                                                     *
*   DJ - FIND A SPECIFIC JOB                                          *
*                                                                     *
***********************************************************************
DJ       CLI   QPARM1,C' '    DID USER SPECIFY JOBNAME?
         BE    DJ9            NO. TILT.
         MVC   QLNG1,=H'7'    COMPARE FOR 8 CHARACTERS
         B     DJ2            USE THE STATUS ROUTINES
DJ9      QTILT '*** YOU MUST SPECIFY JOBNAME ***'
***********************************************************************
*                                                                     *
*   DI - PRINT ALL JOBS IN INPUT QUEUES                               *
*                                                                     *
***********************************************************************
DI       CLI   QPARM1,C' '    DID USER SPECIFY CLASS?
         BNE   DI5            YES. LIMIT TO ONE QUEUE.
* SEARCH ALL QUEUES
         MVI   QCLASS,192     START WITH CLASS A
DI2      BAL   R2,NEXTJQT     DETERMINE NEXT QUEUE
         BAL   R2,SRCHJQE     SEARCH A JQE QUEUE
         B     DI2            END OF QUEUE
         B     PRTJQE         PRINT THE RECORD
* SEARCH ONLY ONE QUEUE
DI5      MVC   QCLASS,QPARM1  USER SPECIFIED CLASS
         BAL   R2,FINDJQT     FIND QUEUE
         BAL   R2,SRCHJQE     SEARCH THE QUEUE
         B     STOP           END OF QUEUE
         B     PRTJQE         PRINT THE RECORD
***********************************************************************
*                                                                     *
*   AI - PRINT JOBS IN INPUT QUEUES THAT ARE AVAILABLE FOR SELECTION  *
*                                                                     *
***********************************************************************
AI       CLI   QPARM1,C' '    DID USER SPECIFY CLASS?
         BNE   AI5            YES. LIMIT TO ONE QUEUE.
* SEARCH ALL QUEUES
         MVI   QCLASS,192     START WITH CLASS A
AI2      BAL   R2,NEXTJQT     DETERMINE NEXT QUEUE
         BAL   R2,SRCHJQE     SEARCH A JQE QUEUE
         B     AI2            END OF QUEUE
         CLI   JQEFLAGS,0     IS THE JOB BUSY OR HELD?
         BNE   REJJQE         YES. SKIP IT.
         B     PRTJQE         PRINT THE RECORD
* SEARCH ONLY ONE QUEUE
AI5      MVC   QCLASS,QPARM1  USER SPECIFIED CLASS
         BAL   R2,FINDJQT     FIND QUEUE
         BAL   R2,SRCHJQE     SEARCH THE QUEUE
         B     STOP           END OF QUEUE
         CLI   JQEFLAGS,0     IS THE JOB BUSY OR HELD?
         BNE   REJJQE         YES. SKIP IT.
         B     PRTJQE         PRINT THE RECORD
***********************************************************************
*                                                                     *
*   AO - PRINT AVAILABLE JOBS IN THE OUTPUT QUEUE                     *
*                                                                     *
***********************************************************************
AO       CLI   QPARM1,C' '    DID USER SPECIFY CLASS?
         BNE   AO5            YES. LIMIT TO ONE QUEUE.
* SEARCH ALL QUEUES
         MVI   QCLASS,192     START WITH CLASS A
AO2      BAL   R2,NEXTJOT     DETERMINE NEXT QUEUE
         BAL   R2,SRCHJOE     SEARCH A JQE QUEUE
         B     AO2            END OF QUEUE
         B     PRTJOE         PRINT THE RECORD
* SEARCH ONLY ONE QUEUE
AO5      MVC   QCLASS,QPARM1  USER SPECIFIED CLASS
         BAL   R2,FINDJOT     FIND QUEUE
         BAL   R2,SRCHJOE     SEARCH THE QUEUE
         B     STOP           END OF QUEUE
         B     PRTJOE         PRINT THE RECORD
***********************************************************************
*                                                                     *
*   HI - PRINT JOBS IN INPUT QUEUES THAT ARE HELD                     *
*                                                                     *
***********************************************************************
HI       CLI   QPARM1,C' '    DID USER SPECIFY CLASS?
         BNE   HI5            YES. LIMIT TO ONE QUEUE.
* SEARCH ALL QUEUES
         MVI   QCLASS,192     START WITH CLASS A
HI2      BAL   R2,NEXTJQT     DETERMINE NEXT QUEUE
         BAL   R2,SRCHJQE     SEARCH A JQE QUEUE
         B     HI2            END OF QUEUE
         TM    JQEFLAGS,X'E0' IS THE JOB HELD?
         BZ    REJJQE         NO. SKIP IT.
         B     PRTJQE         PRINT THE RECORD
* SEARCH ONLY ONE QUEUE
HI5      MVC   QCLASS,QPARM1  USER SPECIFIED CLASS
         BAL   R2,FINDJQT     FIND QUEUE
         BAL   R2,SRCHJQE     SEARCH THE QUEUE
         B     STOP           END OF QUEUE
         TM    JQEFLAGS,X'E0' IS THE JOB HELD?
         BZ    REJJQE         NO. SKIP IT.
         B     PRTJQE         PRINT THE RECORD
***********************************************************************
*                                                                     *
*   HO - LIST ALL JOBS WITH HELD OUTPUT                               *
*                                                                     *
***********************************************************************
         USING JQTDSECT,R1    BASE REG FOR JQT
HO       L     R1,QCJQHEAD    LOAD ADDR OF JQT
         LA    R4,JQTOUT      ADDR OF $OUTPUT QUEUE
         DROP  R1
         MVI   QCLASS,8       INDICATE THIS IS THE HELD OUT QUEUE
         BAL   R2,SRCHJQE     SEARCH THE QUEUE
         B     STOP           END OF QUEUE
         CLI   JQEHLDCT,0     ARE THERE ANY HELD DATASETS? (PART 1)
         BNE   PRTJQE         YES. PRINT THE RECORD.
         TM    JQEHQLOK,X'F0' ARE THERE ANY HELD DATASETS? (PART 2)
         BNZ   PRTJQE         YES. PRINT THE RECORD.
         B     REJJQE         REJECT THE RECORD
***********************************************************************
*                                                                     *
*   DA - FIND ALL EXECUTING JOBS                                      *
*                                                                     *
***********************************************************************
DA       MVI   QCLASS,192     START WITH CLASS A
DA2      BAL   R2,NEXTJQT     DETERMINE NEXT QUEUE
         BAL   R2,SRCHJQE     SEARCH THE QUEUE
         B     DA2            END OF QUEUE
         TM    JQEFLAGS,QUEBUSY IS THE JOB EXECUTING?
         BZ    REJJQE         NO. REJECT IT.
         B     PRTJQE         PRINT THE RECORD
***********************************************************************
*                                                                     *
*   DT - LIST ALL TSO USERS                                           *
*                                                                     *
***********************************************************************
         USING JQTDSECT,R1    BASE REG FOR JQT
DT       L     R1,QCJQHEAD    LOAD ADDR OF JQT
         LA    R4,JQTTSU      ADDR OF TSO QUEUE
         DROP  R1
         MVI   QCLASS,0       INDICATE THIS IS THE TSO QUEUE
         BAL   R2,SRCHJQE     SEARCH THE QUEUE
         B     STOP           END OF QUEUE
         B     PRTJQE         PRINT THE RECORD
***********************************************************************
*                                                                     *
*   DS - LIST ALL SYSTEM STARTED TASKS                                *
*                                                                     *
***********************************************************************
         USING JQTDSECT,R1    BASE REG FOR JQT
DS       L     R1,QCJQHEAD    LOAD ADDR OF JQT
         LA    R4,JQTSTC      ADDR OF STC QUEUE
         DROP  R1
         MVI   QCLASS,4       INDICATE THIS IS THE STC QUEUE
         BAL   R2,SRCHJQE     SEARCH THE QUEUE
         B     STOP           END OF QUEUE
         B     PRTJQE         PRINT THE RECORD
         AIF   (NOT &NJE).LBL007                            *HMD 05/81*
***********************************************************************
*                                                                     *
*   DX - LIST JOBS QUEUED FOR TRANSMIT TO ANOTHER NODE                *
*                                                                     *
***********************************************************************
         USING JQTDSECT,R1    BASE REG FOR JQT              *HMD 05/81*
DX       L     R1,QCJQHEAD    LOAD ADDR OF JQT              *HMD 01/81*
         LA    R4,JQTXMT      GET ADDR OF XMIT QUEUE        *HMD 01/81*
         DROP  R1             NO NEED FOR BASE NOW          *HMD 05/81*
         MVI   QCLASS,16      INDICATE THIS IS XMIT QUEUE   *HMD 01/81*
         BAL   R2,SRCHJQE     SEARCH THE QUEUE              *HMD 01/81*
         B     STOP           END OF QUEUE                  *HMD 01/81*
         B     PRTJQE         PRINT THE RECORD              *HMD 01/81*
.LBL007  ANOP                 COME HERE IF WE ARE NOT NJE   *HMD 05/81*
***********************************************************************
*                                                                     *
*   DETERMINE LENGTH OF LEVEL                                         *
*                                                                     *
***********************************************************************
PARMLEN  LA    R3,7           MAXIMUM LENGTH OF 8
         LA    R4,QPARM1+7    END OF FIELD
PARMLEN2 CLI   0(R4),C' '     IS THIS BYTE BLANK?
         BNE   PARMLEN3       NO. THIS IS THE LENGTH
         BCTR  R4,0           TRY PREVIOUS BYTE
         BCT   R3,PARMLEN2    LOOP
PARMLEN3 STH   R3,QLNG1       STORE THE LENGTH OF LEVEL
         BR    R2             RETURN TO CALLER
***********************************************************************
*                                                                     *
*   SEARCH A JQE QUEUE                                                *
*                                                                     *
***********************************************************************
SRCHJQE  ZAP   QCOUNT,=P'0'   ZERO THE QUEUE COUNT
         LH    R9,0(R4)       LOAD FIRST JQE OFFSET
NEXTJQE  SLA   R9,2           MULTIPLY BY 4
         BZR   R2             END OF QUEUE. RETURN.
         A     R9,QCJQTA      ADD BASE TO OFFSET
         B     4(R2)          DETERMINE ELIGIBILITY
PRTJQE   AP    QCOUNT,=P'1'   INCREMENT COUNT
PRT2JQE  SR    R1,R1          INDICATE THIS IS A JQE
         L     R15,=V(FORMAT) ADDR OF PRINT MODULE
         BALR  R14,R15        PRINT THE JQE IN R9
REJJQE   LH    R9,JQECHAIN    LOAD OFFSET TO NEXT JQE
         B     NEXTJQE        GET THE NEXT JQE
SKIPJQE  AP    QCOUNT,=P'1'   INCREMENT COUNT
         B     REJJQE         CONTINUE
***********************************************************************
*                                                                     *
*   SEARCH A JOE QUEUE                                                *
*                                                                     *
***********************************************************************
SRCHJOE  ZAP   QCOUNT,=P'0'   ZERO THE QUEUE COUNT
FIRSTJOE LH    R8,0(R4)       LOAD FIRST JQE OFFSET
         LTR   R8,R8          IS THE QUEUE EMPTY?
         BZR   R2             YES. RETURN TO CALLER.
         XC    PRIORITY(12),PRIORITY ZERO OUT HIGHEST POINTERS
NEXTJOE  SLA   R8,2           MULTIPLY BY 4
         BZ    TESTJOE        END OF QUEUE. PASS HIGHEST TO CALLER.
         A     R8,QCJOTA      ADD BASE TO OFFSET
         LH    R9,JOEJQE      OFFSET TO JQE
         SLA   R9,2           MULTIPLY BY 4
         BZ    TRYJOE         THIS JOE ALREADY USED. TRY NEXT ONE.
         A     R9,QCJQTA      ADD BASE TO OFFSET
         LA    R7,255         PRESET MAXIMUM PRIORITY
         TM    JQEPRIO,240    IS THIS JOB PRIORITY 15?
         BO    HIGHJOE        YES. PASS TO CALLER.
         LA    R1,16          PRESET PRIORITY ONE
         CLI   JQETYPE,$HARDCPY IS THE JOB EXECUTING?
         BNE   EXECJOE        YES. USE PRIORITY ONE.
         IC    R1,JQEPRIO     INSERT JQE PRIORITY
EXECJOE  IC    R7,JOEPRIO     INSERT JOE PRIORITY
         AR    R7,R1          ADD PRIORITIES
         SRL   R7,1           BECAUSE HASP DOES IT, THAT'S WHY
HIGHJOE  C     R7,PRIORITY    IS THIS LESS THAN PREVIOUS HIGH?
         BL    TRYJOE         YES. TRY NEXT ONE.
         STM   R7,R9,PRIORITY NO. REPLACE PREVIOUS HIGH.
TRYJOE   LH    R8,JOENEXT     ADDR OF NEXT JOE
         B     NEXTJOE        TRY NEXT JOE
TESTJOE  LM    R7,R9,PRIORITY LOAD ADDR OF HIGHEST JOE
         LTR   R8,R8          WAS THE QUEUE EMPTY?
         BZR   R2             YES. END OF QUEUE.
         MVC   JOEJQE,=H'0'   INDICATE THIS JOE USED
         B     4(R2)          DETERMINE ELIGIBILITY
PRTJOE   LA    R1,4           INDICATE THIS IS A JOE
         AP    QCOUNT,=P'1'   INCREMENT COUNT
         L     R15,=V(FORMAT) ADDR OF PRINT MODULE
         BALR  R14,R15        PRINT THE JOE IN R9
REJJOE   B     FIRSTJOE       GET THE NEXT JOE
SKIPJOE  AP    QCOUNT,=P'1'   INCREMENT COUNT
         B     REJJOE         CONTINUE
***********************************************************************
*                                                                     *
*   DETERMINE INPUT QUEUE                                             *
*                                                                     *
***********************************************************************
FINDJQT  TR    QCLASS,CLASSTBL DETERMINE OFFSET
         LH    R4,QCLASSH     LOAD TABLE OFFSET
         BCTR  R4,0           SUBTRACT 1
         STH   R4,QCLASSH     RESTORE VALUE
         B     NEXTJQT2       CONTINUE
NEXTJQT  TR    QCLASS,CLASSTBL DETERMINE OFFSET FROM FIRST CLASS
         LH    R4,QCLASSH     LOAD TABLE OFFSET
         CH    R4,=H'36'      IS THIS THE LAST QUEUE?
         BNL   NEXTJQT9       YES. GO HOME.
NEXTJQT2 TR    QCLASS,NAMETBL MOVE CLASS NAME TO QCLASS
         AR    R4,R4          MULTIPLY BY 2
         USING JQTDSECT,R1    BASE REG FOR JQT
         L     R1,QCJQHEAD    LOAD ADDR OF JQT
         LA    R4,JQTCLSA(R4) NEXT QUEUE
         DROP  R1
         BR    R2             RETURN TO CALLER
NEXTJQT9 CLI   QCODE,0        IS THIS A STATUS REQUEST?
         BE    ST5            YES. GO TO STATUS.
         CLI   QCODE,36       IS THIS A DJ REQUEST?
         BNE   STOP           NO. GO HOME.
         B     ST5            YES. GO TO STATUS.
***********************************************************************
*                                                                     *
*   DETERMINE OUTPUT QUEUE                                            *
*                                                                     *
***********************************************************************
FINDJOT  TR    QCLASS,CLASSTBL DETERMINE OFFSET
         LH    R4,QCLASSH     LOAD TABLE OFFSET
         BCTR  R4,0           SUBTRACT 1
         STH   R4,QCLASSH     RESTORE VALUE
         B     NEXTJOT2       CONTINUE
NEXTJOT  TR    QCLASS,CLASSTBL DETERMINE OFFSET FROM FIRST CLASS
         LH    R4,QCLASSH     LOAD TABLE OFFSET
         CH    R4,=H'36'      IS THIS THE LAST QUEUE?
         BNL   STOP           YES. GO HOME.
NEXTJOT2 TR    QCLASS,NAMETBL MOVE CLASS NAME TO QCLASS
         AR    R4,R4          MULTIPLY BY 2
         USING JOTDSECT,R1    BASE REG FOR JOT
         L     R1,QCJOTA      LOAD ADDR OF JOT
         LA    R4,JOTCLSQ(R4) NEXT QUEUE
         DROP  R1
         BR    R2             RETURN TO CALLER
***********************************************************************
*                                                                     *
*   CALL DISPLAY ROUTINE                                              *
*                                                                     *
***********************************************************************
DISPLAY  LA    R1,QDMSG       SAVE ADDRESS                  *HMD 11/80*
         ST    R1,QDMSGA           OF THE MESSAGE           *HMD 11/80*
         MVC   QDMLNG,=H'80'          SET THE LENGTH        *HMD 11/80*
         L     R15,=V(DISPLAY) BRANCH TO                    *HMD 11/80*
         BALR  R14,R15             DISPLAY ROUTINE          *HMD 11/80*
         BR    R2             RETURN TO CALLER              *HMD 11/80*
***********************************************************************
*                                                                     *
*   GO HOME                                                           *
*                                                                     *
***********************************************************************
STOP     QSTOP
         LTORG
***********************************************************************
*                                                                     *
*   TABLES FOR CLASS DETERMINATION                                    *
*                                                                     *
***********************************************************************
NAMETBL  DC    C'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'
CLASSTBL DC    192X'01'
         DC    X'00010203040506070809',7X'00'
         DC    X'0A0B0C0D0E0F101112',8X'00'
         DC    X'131415161718191A',6X'00'
         DC    X'1B1C1D1E1F2021222324',6X'00'
***********************************************************************
*                                                                     *
*   MISCELLANEOUS GARBAGE                                             *
*                                                                     *
***********************************************************************
         AIF   (NOT &NJE).NOEQU                         NJE *HMD 07/80*
$MAXNODE EQU   99           MAXIMUM ALLOWABLE NODES     NJE *HMD 07/80*
.NOEQU   ANOP                                           NJE *HMD 07/80*
ED5      DC    X'402020202120'                              *HMD 11/80*
DQHEADER DC    CL80'*** INPUT QUEUES ***'
DQLINE   DC    CL80' INPUT                        EXECUTING      WAITINX
               G      HELD'
DFHEADER DC    CL80'*** OUTPUT QUEUES ***'
DFLINE   DS    0CL80
         DC    C' OUTPUT                       PRINTING        PUNCH'
         DC    C'ING                            '
         $JQE
         $JOE
         $JOT
         $JQT
WORK     DSECT
         DS    CL80
PRIORITY DS    3F
         QCOMMON
         ORG   QDMSG                                        *HMD 11/80*
         DS    CL9                                          *HMD 11/80*
CLASS    DS    CL1                                          *HMD 11/80*
         DS    CL2                                          *HMD 11/80*
QTCOUNT  DS    CL6                                          *HMD 11/80*
         DS    CL7                                          *HMD 11/80*
QECOUNT  DS    CL3                                          *HMD 11/80*
         DS    CL12                                         *HMD 11/80*
QACOUNT  DS    CL3                                          *HMD 11/80*
         DS    CL10                                         *HMD 11/80*
QHCOUNT  DS    CL3                                          *HMD 11/80*
         ORG   QTCOUNT                                      *HMD 11/80*
FCOUNT   DS    CL6                                          *HMD 11/80*
         END
