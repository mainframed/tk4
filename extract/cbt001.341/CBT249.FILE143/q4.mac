DDNAME   QSTART 'QUEUE COMMAND - LIST DDNAMES AND DSIDS FOR A JOB'
         GBLB  &NJE           FOR NJE RELEASE 3.0 SUPPORT   *HMD 11/80*
         USING QCKPT,R10      BASE REG FOR CHECKPOINT WORK AREA
         L     R10,QVCKPT     LOAD BASE REG
         USING QDISPLAY,R9    BASE REG FOR DISPLAY WORK AREA
         L     R9,QVDSPL      LOAD BASE REG
         USING WORK,R13       WORK AREA FOR DDNAME          *HMD 06/79*
***********************************************************************
*                                                                     *
*   CALL FINDJOB TO LOCATE THE JQE, JCT, AND IOT                      *
*                                                                     *
***********************************************************************
         L     R15,=V(FINDJOB) ROUTINE TO FIND JOB
         BALR  R14,R15        GO TO IT
***********************************************************************
*                                                                     *
*   DETERMINE JOB TYPE  (STC/BATCH OR TSO)                            *
*                                                                     *
***********************************************************************
         USING JCTDSECT,R1    BASE REG FOR JCT              *HMD 11/80*
         USING PDBDSECT,R2    BASE REG FOR PDDB
         USING IOTDSECT,R3    BASE REG FOR IOT
         L     R1,QCJCTA      A(JCT)                        *HMD 11/80*
         CLC   JCTJOBID(3),=CL3'TSU'   /TSO USER?           *HMD 11/80*
         BE    DDTSO          YES, GO PROCESS               *HMD 11/80*
         DROP  R1                                           *HMD 11/80*
***********************************************************************
*                                                                     *
*   LOCATE PDDB NUMBER 5                                              *
*                                                                     *
***********************************************************************
DDJOB    L     R3,QCIOTA      LOAD BASE REG
         LR    R4,R3          BASE OF IOT
         A     R4,IOTPDDBP    OFFSET BEYOND LAST PDDB
         LR    R2,R3          BASE OF IOT
         A     R2,QCPDDB1     OFFSET TO FIRST PDDB IN IOT
         MVC   QPDSID,=H'0'   NULLIFY VALIDITY FOR LISTDS
FINDDS   CLC   =H'5',PDBDSKEY IS THIS THE DATASET?
         BE    FOUNDDS        YES. CONTINUE.
         LA    R2,PDBLENG(R2) NO. LOOK AT NEXT PDDB.
         CR    R2,R4          HAVE WE GONE PAST THE LAST PDDB?
         BL    FINDDS         NO. TRY AGAIN.
         QTILT '*** JOB DOES NOT HAVE DD TABLE ***'
FOUNDDS  L     R4,PDBMTTR     DISK ADDR OF FIRST BLOCK
         L     R5,QCBLKA      ADDR OF DATASET BLOCK IOAREA
         MVC   QDMSG,QBLANK   BLANK OUT THE MESSAGE AREA
         B     FIRST          PROCESS DATASET
***********************************************************************
*                                                                     *
*   PROCESS DATASET                                                   *
*                                                                     *
***********************************************************************
NEXTBLK  L     R4,0(R5)       DISK ADDR OF NEXT BLOCK
FIRST    LTR   R4,R4          IS THE DISK ADDR ZERO?
         BZ    END            YES. END OF DATASET.
         BAL   R8,READ        READ A BLOCK
         CLC   QPJOBID,4(R5)  DOES THE JOBID MATCH?
         BNE   END            NO. END OF DATASET.
         CLC   =H'5',8(R5)    IS THE DSID 5?
         BNE   END            NO. END OF DATASET.
         LA    R4,10(R5)      ADDR OF FIRST RECORD IN BLOCK
***********************************************************************
*                                                                     *
*   PROCESS RECORDS                                                   *
*                                                                     *
***********************************************************************
NEXTREC  CLI   0(R4),X'FF'    IS LENGTH BYTE FF?
         BE    NEXTBLK        YES. END OF BLOCK.
         TM    1(R4),X'10'    IS THIS A SPANNED RECORD?
         BO    SPAN           YES. SKIP IT.
         SR    R6,R6          ZERO OUT REG
         IC    R6,0(R4)       INSERT LENGTH
         TM    5(R4),2        IS THIS AN EXEC RECORD?
         BO    EXEC           YES. PROCESS IT.
         TM    5(R4),4        IS THIS A DD RECORD?
         BO    DD             YES. PROCESS IT.
SKIPREC  LA    R4,3(R6,R4)    INCREMENT TO NEXT RECORD
         B     NEXTREC        PROCESS NEXT RECORD
SPAN     LH    R6,2(R4)       LENGTH OF SEGMENT
         TM    1(R4),X'08'    IS THIS THE FIRST SEGMENT?
         BO    SPANFRST       YES. USE HEADER LENGTH OF 6.
         LA    R4,4(R6,R4)    INCREMENT TO NEXT RECORD
         B     NEXTREC        PROCESS NEXT RECORD
SPANFRST LA    R4,6(R6,R4)    INCREMENT TO NEXT RECORD
         B     NEXTREC        PROCESS NEXT RECORD
END      QSTOP
***********************************************************************
*                                                                     *
*   PROCESS AN EXEC RECORD                                            *
*                                                                     *
***********************************************************************
EXEC     MVC   STEPNAME,QBLANK BLANK OUT THE STEPNAME
         CLI   7(R4),X'94'    IS THERE A STEPNAME?
         BNE   SKIPREC        NO. SKIP THE REST.
         SR    R1,R1          ZERO OUT R1
         IC    R1,9(R4)       LENGTH OF STEPNAME
         SH    R1,=H'1'       DECREMENT BY 1
         BM    SKIPREC        STEPNAME WAS ZERO LENGTH.
         EX    R1,MVCSTEP     MOVE THE STEPNAME
         B     SKIPREC        CONTINUE PROCESSING
***********************************************************************
*                                                                     *
*   PROCESS DD RECORDS                                                *
*                                                                     *
***********************************************************************
DD       TM    6(R4),X'30'    IS THIS A SYSIN OR SYSOUT DD?
         BZ    SKIPREC        NO. SKIP THE RECORD.
         MVC   DDN,QBLANK     BLANK OUT THE DDNAME
         MVC   DSID,QBLANK    BLANK OUT THE DSID
         LA    R7,7(R4)       ADDR OF FIRST KEY
         LR    R8,R6          REMAINING LENGTH OF RECORD
         SR    R15,15         ZERO OUT R15
         SR    R14,R14        ZERO OUT R14
         SR    R1,R1          ZERO OUT R1
TRYFLD   CLI   0(R7),X'6E'    IS THIS THE DDNAME?
         BE    DDKEY          YES. PROCESS IT.
         CLI   0(R7),X'4A'    IS THIS THE DSNAME?
         BNE   NEXTFLD        NO, GET NEXT FIELD            *HMD 11/80*
         CLC   3(3,R7),=C'JES' IS THIS TRULY A JES2 DATASET *HMD 11/80*
         BE    DSKEY          YES. PROCESS IT.
NEXTFLD  IC    R1,1(R7)       NUMBER OF SUBFIELDS
         LA    R7,2(R7)       UPDATE LOCATION
         SH    R8,=H'2'       REMAINING COUNT
         SR    R8,R1          REMAINING COUNT
         BNP   SKIPREC        RECORD IS EXHAUSTED
         LTR   R1,R1          ARE THERE ANY SUBFIELDS?
         BZ    TRYFLD         NO. TRY NEXT FIELD.
LOOPFLD  TM    0(R7),X'80'    IS THIS A SUB-SUB-FIELD
         BZ    NOSUB          NO. CONTINUE.
         NI    0(R7),X'7F'    CLEAR THE HEX 80 BIT
         IC    R14,0(R7)      NUMBER OF SUB-SUB-FIELDS
         LA    R7,1(R7)       UPDATE LOCATION
         SH    R8,=H'1'       REMAINING COUNT
         SR    R8,R14         REMAINING COUNT
         BNP   SKIPREC        RECORD IS EXHAUSTED
         AR    R1,R14         INCREASE NUMBER OF SUBFIELDS
         B     YESSUB         DECREMENT AND TRY AGAIN
NOSUB    IC    R15,0(R7)      SUBFIELD LENGTH
         LA    R7,1(R15,R7)   ADD TO LOCATION
         SR    R8,R15         REMAINING COUNT
         BNP   SKIPREC        RECORD IS EXHAUSTED
YESSUB   BCT   R1,LOOPFLD     DO NEXT SUBFIELD
         B     TRYFLD         TRY NEXT FIELD
DDKEY    IC    R1,2(R7)       LENGTH OF DDNAME
         LTR   R1,R1          IS THE LENGTH ZERO?
         BZ    NEXTFLD        YES. SKIP THE FIELD.
         BCTR  R1,0           DECREMENT BY 1
         EX    R1,MVCDDN      MOVE THE DDNAME
         B     NEXTFLD        PROCESS NEXT FIELD
DSKEY    MVC   DSID,19(R7)    MOVE THE DSID
***********************************************************************
*                                                                     *
*   FORMAT VARIOUS PDDB FIELDS                                        *
*                                                                     *
***********************************************************************
         STM   R2,R8,SAVE28            SAVE REGISTERS       *HMD 06/79*
         XC    CONVERT,CONVERT         CLEAR CONVERT AREA   *HMD 06/79*
         MVC   CLASS-2(BLNKLN),QBLANK  CLEAR FORMAT AREA    *HMD 06/79*
         MVC   QFZONES,QFZONE          INIT. ZONE CHECK     *HMD 06/79*
         MVZ   QFZONES(4),19(R7)       CHECK FOR ZONE VIOL. *HMD 06/79*
         CLC   QFZONES,QFZONE          NUMERIC?             *HMD 06/79*
         BE    NUMBER                  OF COURSE.           *HMD 06/79*
         MVC   CLASS(MSGLEN1),INVIDMSG INVALID DSID         *HMD 06/79*
         B     PDBEXIT                 GET OUT FAST         *HMD 06/79*
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*HMD 06/79*
*-*-B E W A R E    O F  T H E    K I L L E R    P D D B S-*-*HMD 06/79*
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*HMD 06/79*
NUMBER   PACK  CONVERT+5(3),19(4,R7)   PACK THE DSID        *HMD 06/79*
         OI    CONVERT+7,X'0F'         AVOID 0C7 - FIX SIGN *HMD 06/79*
         CVB   R7,CONVERT              MAKE INTO HEX        *HMD 06/79*
         L     R3,QCIOTA               LOAD BASE REG        *HMD 06/79*
         LR    R5,R3                   SAVE FOR NEXT READ   *HMD 06/79*
         MVI   SWITCH,0                CLEAR SWITCH         *HMD 06/79*
NEXTIOT  LR    R4,R3                   BASE OF IOT          *HMD 06/79*
         A     R4,IOTPDDBP             OFFSET TO LAST PDDB  *HMD 06/79*
         LR    R2,R3                   BASE OF IOT          *HMD 06/79*
         A     R2,QCPDDB1              POINT TO 1ST PDDB    *HMD 06/79*
PDDBLOOP CH    R7,PDBDSKEY             IS THIS THE DATASET  *HMD 06/79*
         BE    FOUNDPD                 YES, GO PROCESS      *HMD 06/79*
         LA    R2,PDBLENG(R2)          BUMP TO NEXT PDDB    *HMD 06/79*
         CR    R2,R4                   PAST END?            *HMD 06/79*
         BL    PDDBLOOP                CONTINUE             *HMD 06/79*
         L     R4,IOTIOTTR             DISK ADDR OF NEXT    *HMD 06/79*
PDDBCHA  LTR   R4,R4                   IS THERE ONE?        *HMD 06/79*
         BZ    SPINIOT                 SPIN IOT?            *HMD 06/79*
         BAL   R8,READ                 READ NEXT IOT        *HMD 06/79*
         B     NEXTIOT                 PROCESS NEXT ONE     *HMD 06/79*
         USING JCTDSECT,R1             BASE REG FOR JCT     *HMD 06/79*
SPINIOT  TM    SWITCH,1                DEJA VOUS?           *HMD 06/79*
         BO    NOPDB                   OF COURSE            *HMD 06/79*
         OI    SWITCH,1                TURN IT ON           *HMD 06/79*
         L     R1,QCJCTA               GET JCT ADDRESS      *HMD 06/79*
         L     R4,JCTSPIOT             SPIN IOT ADDRESS     *HMD 06/79*
         DROP  R1                      NO NEED FOR THIS     *HMD 06/79*
         B     PDDBCHA                 TRY SOME MORE        *HMD 06/79*
NOPDB    MVC   CLASS(MSGLEN),NOPDBMSG  MOVE IN MESSAGE      *HMD 06/79*
         B     PDBEXIT                 LEAVE THIS LOOP      *HMD 06/79*
FOUNDPD  MVC   CLASS+1(1),PDBCLASS     MOVE IN JOBCLASS     *HMD 06/79*
         MVC   FORMS,PDBFORMS          MOVE IN FORMS        *HMD 06/79*
         MVC   FCB,PDBFCB              MOVE IN FCB ID       *HMD 06/79*
         MVC   UCS,PDBUCS              MOVE IN UCS ID       *HMD 06/79*
         TM    PDBFLAG1,PDB1HOLD       IS THIS HELD?        *HMD 06/79*
         BZ    NOTHELD                 NOPE                 *HMD 06/79*
         MVC   HELD,=C'HELD'           INDICATE HELD        *HMD 06/79*
NOTHELD  SR    R0,R0                   CLEAR FOR DEST       *HMD 06/79*
         IC    R0,PDBCOPYS             NUMBER OF COPIES     *HMD 06/79*
         CVD   R0,CONVERT              CONVERT TO DECIMAL   *HMD 06/79*
         MVC   COPIES,ED3              MOVE IN EDIT PATTERN *HMD 06/79*
         ED    COPIES,CONVERT+6        FORMAT NO. OF COPIES *HMD 06/79*
         AIF   (&NJE).NJE01            FORMAT FOR NJE       *HMD 11/80*
         SR    R0,R0                   CLEAR R7             *HMD 06/79*
         ICM   R0,3,PDBDEST            GET PDDB DEST CODE   *HMD 06/79*
         BZ    LOCAL                   MUST BE A LOCAL JOB  *HMD 06/79*
         LA    R1,256                  COMPARAND            *HMD 06/79*
         CR    R0,R1                   IS THIS A REMOTE JOB *HMD 06/79*
         BL    NORMT                   NO, LOCAL DEST       *HMD 06/79*
         BE    LOCAL                   THIS IS LOCAL TOO    *HMD 02/80*
         MVI   DEST+1,C'R'             INDICATE REMOTE ROUTE*HMD 06/79*
         SR    R0,R1                   CLEAR REMOTE IND.    *HMD 06/79*
         B     C001                    BRANCH AROUND INST.  *HMD 06/79*
NORMT    MVI   DEST+1,C'U'             MOVE IN LOCAL DEST   *HMD 06/79*
C001     CVD   R0,CONVERT              CONVERT DEST NUMBER  *HMD 06/79*
         UNPK  DEST+2(3),CONVERT+6(2)  UNPACK DESTINATION   *HMD 06/79*
         OI    DEST+4,X'F0'            FIX SIGN             *HMD 06/79*
         B     C002                    BRANCH AROUND LOCAL  *HMD 06/79*
LOCAL    MVC   DEST,=C' LOCAL'         MOVE IN LOCAL IND.   *HMD 06/79*
         AGO   .NJE02                  BRANCH AROUND NJE CODE
.NJE01   ANOP                                               *HMD 06/81*
         SLR   R15,R15                 CLEAR FOR ICM        *HMD 06/81*
         IC    R15,QXONODE             GET OUR NODE NUMBER  *HMD 06/81*
         MVI   DEST+1,C'U'             ASSUME LOCAL DEVICE  *HMD 06/81*
         CLI   PDBDEST,NODEZERO        IS NODE NUMBER ZERO? *HMD 06/81*
         BE    U001                    YES, FIX DEVICE NAME *HMD 06/81*
         CLM   R15,B'0001',PDBDEST     ROUTED TO OTHER NODE?*HMD 06/81*
         BE    NJEOURS                 THIS IS OUR NODE NBR *HMD 06/81*
         IC    R15,PDBDEST             GET NODE NUMBER      *HMD 06/81*
         SLL   R15,2                   MULTIPLY BY 4        *HMD 06/81*
         LA    R15,QNJNODE(R15)        GET NODE NAME        *HMD 06/81*
         MVC   DEST+1(4),0(R15)        MOVE IN NODE NAME    *HMD 06/81*
         B     C002                    EXIT STAGE LEFT      *HMD 06/81*
NJEOURS  MVI   DEST+1,C'R'             INDICATE REMOTE DEV. *HMD 06/81*
U001     CLI   PDBDEST+1,0             IS REMOTE ID ZERO?   *HMD 06/81*
         BE    LOCAL                   REMOTE 0 IS LOCAL    *HMD 06/81*
         SR    R1,R1                   CLEAR FOR IC         *HMD 06/81*
         IC    R1,PDBDEST+1            INSERT LOCAL ID      *HMD 06/81*
         CVD   R1,CONVERT              CONVERT TO DECIMAL   *HMD 06/81*
         UNPK  DEST+2(3),CONVERT+6(2)  UNPACK INTO FIELD    *HMD 06/81*
         OI    DEST+4,240              FIX SIGN             *HMD 06/81*
         B     C002                                         *HMD 06/81*
LOCAL    MVC   DEST,=C' LOCAL  '       INDICATE LOCAL       *HMD 06/81*
.NJE02   ANOP                          END OF NJE CODE      *HMD 11/80*
C002     L     R0,PDBRECCT             LOAD NUMBER OF LINES *HMD 06/79*
         CVD   R0,CONVERT              CONVERT TO DECIMAL   *HMD 06/79*
         MVC   LINES,ED6               MOVE IN EDIT PATTERN *HMD 06/79*
         ED    LINES,CONVERT+4         FORMAT NO. OF LINES  *HMD 06/79*
PDBEXIT  MVC   QDHLINE,HEADING MOVE IN HEADING
         L     R15,=V(FINDJOB)         GET JOB BLOCKS AGAIN *HMD 06/79*
         BALR  R14,R15                 LINK TO FINDJOB      *HMD 06/79*
         LM    R2,R8,SAVE28            RESTORE REGISTERS    *HMD 06/79*
         LA    R1,QDMSG       ADDR OF MESSAGE LINE
         ST    R1,QDMSGA      STORE IN MESSAGE ADDR
         MVC   QDMLNG,=H'80'  MESSAGE LENGTH
         L     R15,=V(DISPLAY) ADDR OF DISPLAY MODULE
         BALR  R14,R15        GO TO IT
         B     SKIPREC        PROCESS NEXT RECORD
         EJECT                                              *HMD 11/80*
***********************************************************************
*                                                                     *
*   PROCESS DD TSU                                                    *
*                                                                     *
***********************************************************************
DDTSO    DS    0H                                           *HMD 11/80*
         USING JCTDSECT,R1    ADDRESS JCT                   *HMD 11/80*
         L     R1,QCJCTA      A(JCT)                        *HMD 11/80*
         L     R5,QCBLKA      ADDRESS OF DATASET BLOCK AREA *HMD 11/80*
         LR    R3,R5          BASE OF IOAREA                *HMD 11/80*
         L     R4,JCTSPIOT    ADDR OF FIRST SPIN IOT        *HMD 11/80*
         DROP  R1             GET RID OF BASE               *HMD 11/80*
TSO010   LTR   R4,R4          IS IOT ADDR ZERO?             *HMD 11/80*
         BZ    DDJOB          YES, GO READ REGULAR IOTS     *HMD 11/80*
         BAL   R8,READ        READ IOT                      *HMD 11/80*
         LR    R4,R3          BASE OF IOT                   *HMD 11/80*
         A     R4,IOTPDDBP    OFFSET BEYOND LAST PDDB       *HMD 11/80*
         LR    R2,R3          BASE OF IOT                   *HMD 11/80*
         A     R2,QCPDDB1     OFFSET TO FIRST PDDB IN IOT   *HMD 11/80*
TSO020   CLI   PDBFLAG1,X'00' IS THIS PDDB VALID?           *HMD 11/80*
         BE    TSO040         NO, GET NEXT IOT              *HMD 11/80*
         CLC   PDBDSKEY,=H'101'                             *HMD 07/81*
         BL    TSO030A        CHECK FOR PDDB VALIDITY       *HMD 07/81*
         MVC   QDMSG,QBLANK   BLANK MESSAGE LINE            *HMD 11/80*
         MVC   DDN,=CL8'SPIN-DS'    MOVE IN DDNAME          *HMD 11/80*
         LH    R0,PDBDSKEY    LOAD DATASET ID               *HMD 11/80*
         CVD   R0,CONVERT     CONVERT DS ID TO DECIMAL      *HMD 11/80*
         UNPK  DSID(4),CONVERT+5(3)   UNPACK DATASET ID     *HMD 11/80*
         OI    DSID+3,X'F0'   FIX SIGN                      *HMD 11/80*
         TM    PDBFLAG1,PDB1PSO        PRINTED ALREADY?     *HMD 11/80*
         BO    TSO020A                                      *HMD 11/80*
         MVC   CLASS(MSGLEN2),PRINTMSG MOVE IN MESSAGE      *HMD 11/80*
         B     TSO030                                       *HMD 11/80*
TSO020A  MVC   CLASS+1(1),PDBCLASS     MOVE IN JOBCLASS     *HMD 06/79*
         MVC   FORMS,PDBFORMS          MOVE IN FORMS        *HMD 06/79*
         MVC   FCB,PDBFCB              MOVE IN FCB ID       *HMD 06/79*
         MVC   UCS,PDBUCS              MOVE IN UCS ID       *HMD 06/79*
         TM    PDBFLAG1,PDB1HOLD       IS THIS HELD?        *HMD 06/79*
         BZ    TSO020B                 NOPE                 *HMD 06/79*
         MVC   HELD,=C'HELD'           INDICATE HELD        *HMD 06/79*
TSO020B  SR    R0,R0                   CLEAR FOR DEST       *HMD 06/79*
         IC    R0,PDBCOPYS             NUMBER OF COPIES     *HMD 06/79*
         CVD   R0,CONVERT              CONVERT TO DECIMAL   *HMD 06/79*
         MVC   COPIES,ED3              MOVE IN EDIT PATTERN *HMD 06/79*
         ED    COPIES,CONVERT+6        FORMAT NO. OF COPIES *HMD 06/79*
         AIF   (&NJE).NJE03            FORMAT FOR NJE       *HMD 11/80*
         SR    R0,R0                   CLEAR R7             *HMD 06/79*
         ICM   R0,3,PDBDEST            GET PDDB DEST CODE   *HMD 06/79*
         BZ    TSO020E                 MUST BE A LOCAL JOB  *HMD 06/79*
         LA    R1,256                  COMPARAND            *HMD 06/79*
         CR    R0,R1                   IS THIS A REMOTE JOB *HMD 06/79*
         BL    TSO020C                 NO, LOCAL DEST       *HMD 06/79*
         BE    TSO020E                 THIS IS LOCAL TOO    *HMD 02/80*
         MVI   DEST+1,C'R'             INDICATE REMOTE ROUTE*HMD 06/79*
         SR    R0,R1                   CLEAR REMOTE IND.    *HMD 06/79*
         B     TSO020D                 BRANCH AROUND INST.  *HMD 06/79*
TSO020C  MVI   DEST+1,C'U'             MOVE IN LOCAL DEST   *HMD 06/79*
TSO020D  CVD   R0,CONVERT              CONVERT DEST NUMBER  *HMD 06/79*
         UNPK  DEST+2(3),CONVERT+6(2)  UNPACK DESTINATION   *HMD 06/79*
         OI    DEST+4,X'F0'            FIX SIGN             *HMD 06/79*
         B     TSO020F                 BRANCH AROUND LOCAL  *HMD 06/79*
TSO020E  MVC   DEST,=C' LOCAL'         MOVE IN LOCAL IND.   *HMD 06/79*
         AGO   .NJE04                  GO AROUND NJE CODE   *HMD 11/80*
.NJE03   ANOP                                               *HMD 11/80*
         SLR   R15,R15                 CLEAR FOR ICM        *HMD 06/81*
         IC    R15,QXONODE             GET OUR NODE NUMBER  *HMD 06/81*
         MVI   DEST+1,C'U'             ASSUME LOCAL DEVICE  *HMD 06/81*
         CLI   PDBDEST,NODEZERO        IS NODE NUMBER ZERO? *HMD 06/81*
         BE    TSO020D                 YES, FIX DEVICE NAME *HMD 06/81*
         CLM   R15,B'0001',PDBDEST     ROUTED TO OTHER NODE?*HMD 06/81*
         BE    TSO020C                 THIS IS OUR NODE NBR *HMD 06/81*
         IC    R15,PDBDEST             GET NODE NUMBER      *HMD 06/81*
         SLL   R15,2                   MULTIPLY BY 4        *HMD 06/81*
         LA    R15,QNJNODE(R15)        GET NODE NAME        *HMD 06/81*
         MVC   DEST+1(4),0(R15)        MOVE IN NODE NAME    *HMD 06/81*
         B     TSO020F                 EXIT STAGE LEFT      *HMD 06/81*
TSO020C  MVI   DEST+1,C'R'             INDICATE REMOTE DEV. *HMD 06/81*
TSO020D  CLI   PDBDEST+1,0             IS REMOTE ID ZERO?   *HMD 06/81*
         BE    TSO020E                 REMOTE 0 IS LOCAL    *HMD 06/81*
         SR    R1,R1                   CLEAR FOR IC         *HMD 06/81*
         IC    R1,PDBDEST+1            INSERT LOCAL ID      *HMD 06/81*
         CVD   R1,CONVERT              CONVERT TO DECIMAL   *HMD 06/81*
         UNPK  DEST+2(3),CONVERT+6(2)  UNPACK INTO FIELD    *HMD 06/81*
         OI    DEST+4,240              FIX SIGN             *HMD 06/81*
         B     TSO020F                                      *HMD 06/81*
TSO020E  MVC   DEST,=C' LOCAL  '       INDICATE LOCAL       *HMD 06/81*
.NJE04   ANOP                          END OF NJE CODE      *HMD 11/80*
TSO020F  L     R0,PDBRECCT             LOAD NUMBER OF LINES *HMD 06/79*
         CVD   R0,CONVERT              CONVERT TO DECIMAL   *HMD 06/79*
         MVC   LINES,ED6               MOVE IN EDIT PATTERN *HMD 06/79*
         ED    LINES,CONVERT+4         FORMAT NO. OF LINES  *HMD 06/79*
TSO030   MVC   QDHLINE,HEADING MOVE IN HEADING
         LA    R1,QDMSG       ADDR OF MESSAGE LINE
         ST    R1,QDMSGA      STORE IN MESSAGE ADDR
         MVC   QDMLNG,=H'80'  MESSAGE LENGTH
         L     R15,=V(DISPLAY) ADDR OF DISPLAY MODULE
         BALR  R14,R15        GO TO IT
TSO030A  LA    R2,PDBLENG(R2)  LOOK AT NEXT PDDB            *HMD 11/80*
         CR    R2,R4          HAVE WE GONE PAST LAST PDDB?  *HMD 11/80*
         BL    TSO020         NO, TRY AGAIN                 *HMD 11/80*
TSO040   L     R4,IOTIOTTR    DISK ADDR OF NEXT IOT         *HMD 11/80*
         B     TSO010                                       *HMD 11/80*
         EJECT                                              *HMD 11/80*
***********************************************************************
*                                                                     *
*   READ A BLOCK FROM HASPACE                                         *
*                                                                     *
***********************************************************************
READ     ST    R4,QCTRAK      STORE DISK ADDR
         LR    R1,R5          IOAREA ADDRESS
         L     R15,=V(READSPC) ADDR OF ROUTINE TO READ HASPACE
         BALR  R14,R15        GO TO IT
         BR    R8             RETURN TO CALLER
***********************************************************************
*                                                                     *
*   MISCELLANY                                                        *
*                                                                     *
***********************************************************************
         LTORG
ED3      DC    X'40202120'           PATTERN FOR COPIES     *HMD 06/79*
ED6      DC    X'4020202020202120'   PATTERN FOR LINES      *HMD 06/79*
NOPDBMSG DC    C'** NO PDDB FOR THIS DATA SET ** '          *HMD 06/79*
MSGLEN   EQU   *-NOPDBMSG                                   *HMD 06/79*
INVIDMSG DC    C'** THIS DATA SET HAS AN INVALID DSID ** '  *HMD 06/79*
MSGLEN1  EQU   *-INVIDMSG                                   *HMD 06/79*
PRINTMSG DC    C'** DATA SET HAS ALREADY PRINTED **'        *HMD 11/80*
MSGLEN2  EQU   *-PRINTMSG                                   *HMD 11/80*
MVCSTEP  MVC   STEPNAME(1),10(R4)
MVCDDN   MVC   DDN(1),3(R7)
HEADING  DC    CL80'STEPNAME    DDNAME      DSID  CL   CO  DEST    LINEX
               S  FORMS  FCB   UCS'
         AIF   (NOT &NJE).NJE05                             *HMD 06/81*
NODEZERO EQU   0               NODE NUMBER OF ZERO          *HMD 06/81*
.NJE05   ANOP
BUFSTART EQU   0
BUFDSECT EQU   0
JCT      EQU   0                                            *HMD 06/79*
         $TAB                                               *HMD 06/79*
         $JCT                                               *HMD 06/79*
         $IOT
         $PDDB                                              *HMD 06/79*
         SPACE 2
WORK     DSECT                                              *HMD 06/79*
         DS    72C        SUBROUTINE LEVEL 1                *HMD 06/79*
         DS    72C        SUBROUTINE LEVEL 2                *HMD 06/79*
         DS    72C        SUBROUTINE LEVEL 3                *HMD 06/79*
CONVERT  DS    D          DOUBLE-WORD FOR PACK              *HMD 06/79*
SAVE28   DS    7F         REGISTER SAVE AREA                *HMD 06/79*
SWITCH   DS    C          SWITCH FOR PDDB SEARCH            *HMD 06/79*
         QCOMMON
         ORG   QDMSG
STEPNAME DS    CL8                                          *HMD 06/79*
         DS    CL4                                          *HMD 06/79*
DDN      DS    CL8 END OF DATA. LAST REC #'                 *HMD 06/79*
         DS    CL4                                          *HMD 06/79*
DSID     DS    CL4                                          *HMD 06/79*
         DS    CL2                                          *HMD 06/79*
CLASS    DS    CL2                                          *HMD 06/79*
         DS    C                                            *HMD 06/79*
COPIES   DS    CL4                                          *HMD 06/79*
         DS    C                                            *HMD 06/79*
DEST     DS    CL6                                          *HMD 06/79*
LINES    DS    CL8                                          *HMD 06/79*
         DS    CL3                                          *HMD 06/79*
FORMS    DS    CL4                                          *HMD 06/79*
         DS    CL2                                          *HMD 06/79*
FCB      DS    CL4                                          *HMD 06/79*
         DS    CL2                                          *HMD 06/79*
UCS      DS    CL4                                          *HMD 06/79*
         DS    CL2                                          *HMD 06/79*
HELD     DS    CL4                                          *HMD 06/79*
BLNKLN   EQU   *-CLASS+2      LENGTH TO BLANK OUT           *HMD 06/79*
         END
