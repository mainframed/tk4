**
** ENQ COMMAND FOR SP3
** GERALD BOROUGH...10/21/81
*** ESTABLISH ENQ CONTROL SECTION.
**
**
ENQ      CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
NL       EQU   X'15'      NEW LINE
PL       EQU   X'1DE0'    PROTECT LOW INTENSITY      BLUE
PH       EQU   X'1DE8'    PROTECT HIGH INTENSITY     WHITE
NPL      EQU   X'1DC0'    NO PROTECT LOW INTENSITY   GREEN
NPH      EQU   X'1DC8'    NO PROTECT HIGH INTENSITY  RED
         EJECT
**
**
*** SAVE REGISTERS AND SUCH.
**
         DS    0H                      INSURE HALFWORD ALIGNMENT
         SAVE  (14,12),,ENQ._&SYSDATE_&SYSTIME
         LR    R12,R15                 LOAD BASE REGISTER
         USING ENQ,R12
         LR    R11,R1                  LOAD CPPL PTR
         LA    R2,SAVE                 ESTABLISH
         ST    R13,4(R2)                         SAVE AREA
         ST    R2,8(R13)                                   CHAINING
         LR    R13,R2                  PTR TO SAVE INTO R13
**
*** SET UP FOR AND LINK TO PARSE.  BRANCH ON RETURN CODE.
**
EXPARS   EQU   *
         USING CPPL,R11                ADDRESS CPPL
         MVC   PPLUPT,CPPLUPT          UPT PTR TO PPL
         MVC   PPLECT,CPPLECT          ECT PTR TO PPL
         MVC   PPLCBUF,CPPLCBUF        CMD BUFFER PTR TO PPL
         SR    R2,R2                   ZERO R2
         ST    R2,PARSEECB             ZERO PARSE ECB
         ST    R2,PARSEANS             ZERO PARSE ANSWER PTR
         LA    R1,PPL                  PTR TO PPL INTO R1
         CALLTSSR EP=IKJPARS           BRING ON PARSE
         L     R3,PARSEANS             GET ANSWER ADDRESS
         USING IKJPARMD,R3             ADDRESS PARS DSECT
         MVC   IOPLSECT(12),PPL        ADDR OF UPT,ECT,ECB FOR PUTLINE
         LA    R2,IOPB
         ST    R2,IOPLSECT+12          ADDR OF PARAMETER BLOCK
PDSN     EQU   *
         CLC   K$DSN(2),=H'1'          CHECK IF KEYWD SPECIFIED
         BNE   PMAJ                    NO....CHECK MAJOR
         MVC   MAJOR(6),=C'SYSDSN'     MAKE SYSDSN THE DEFAULT
         MVC   WC,=F'0'                MAKE WAIT CNT ZERO
         LA    R7,S$DSN
         B     MMIN
PMAJ     EQU   *
*    MAJOR DEFAULTS TO SYSDSN
         CLC   K$MAJOR(2),=H'1'        CHECK IF KEYWD SPECIFIED
         BNE   PMIN                    NO....PARSE MINOR
         MVC   WC,=F'0'                MAKE WAIT CNT ZERO
         LA    R7,S$MAJOR              LOAD POINTER TO PARSE SUBFIELD
         SR    R1,R1                   CLEAR R1
         LH    R1,4(R7)                LOAD LENGTH OF PARSE VALUE
         BCTR  R1,0                    REDUCE COUNT FOR EXEC
         L     R6,0(R7)                LOAD POINTER TO PARSE VALUE
         EX    R1,MVCMAJOR             SAVE MAJOR RESOURCE
PMIN     EQU   *
         CLC   K$MINOR(2),=H'1'        CHECK IF KEYWD SPECIFIED
         BNE   PWC                     NO....CHECK WAIT CNT
         MVC   WC,=F'0'                MAKE WAIT CNT ZERO
         LA    R7,S$MINOR
MMIN     EQU   *
         L     R5,0(R7)                DSN/MINOR POINTER
         LH    R6,4(R7)                LENGTH OF DSN/MINOR
         MVC   TKN,=F'0'               RESET TOKEN
         BCTR  R6,0                    DECREMENT FOR MOVE
         EX    R6,MVCMIN               SAVE DSN/MINOR
         LA    R6,1(R6)                RESTORE LENGTH
PWC      EQU   *
         CLC   K$WC(2),=H'1'           CHECK IF KEYWD SPECIFIED
         BNE   CLR                     NO....
         LA    R7,S$WC
         L     R5,0(R7)                WAIT COUNT POINTER
         LH    R6,4(R7)                LENGTH OF WAIT COUNT
         BCTR  R6,0                    DECREMENT FOR MOVE
         EX    R6,MVCWC                SAVE WAIT CNT
CLR      EQU   *
         LINK  EP=CLRSCR               CLEAR SCREEN
         L     R7,WC                   LOAD WAIT COUNT
SCAN     EQU   *
         LA    R0,4095                 GETAMIN AREA FOR RIB/RIBE
         GETMAIN R,LV=(0)
         ST    R1,SVGETM               SAVE GETMAIN ADDR
         LR    R4,R1                   LOAD R4 WITH GETMAINED ADDR
         USING RIB,R4
         CLC   MAJOR(3),=C'ALL'
         BE    SCANALL
         CLC   SVMIN(3),=C'ALL'
         BE    SCANDSN
         GQSCAN AREA=((R4),4096),SCOPE=ALL,                            C
               RESNAME=(MAJOR,(R5),(R6)),WAITCNT=(R7),                 C
               TOKEN=TKN
         B     CKRTN
SCANDSN  EQU   *
         GQSCAN AREA=((R4),4096),SCOPE=ALL,                            C
               RESNAME=(MAJOR),WAITCNT=(R7),                           C
               TOKEN=TKN
         B     CKRTN                   GO CHECK RETURN CODE
SCANALL  EQU   *
         GQSCAN AREA=((R4),4096),SCOPE=ALL,                            C
               WAITCNT=(R7),                                           C
               TOKEN=TKN
         B     CKRTN                   GO CHECK RETURN CODE
CKRTN    EQU   *
         B     *+4(R15)                R0=0  RESOURCE FOUND
         B     FOUND                   RC=0  RESOURCE FOUND
         B     NOTFOUND                RC=4  RESOURCE NOT FOUND
         B     FULL                    RC=8  QUEUE AREA FULL
         B     ABEND                   RC=C  ABNORMAL SITUATION
         B     ABEND                   RC=10 INVALID SYSNAME
FOUND    EQU   *
         BAL   R10,LISTDTL
         B     RETURN                  RETURN TO USER
NOTFOUND EQU   *
         CLC   WC,=F'0'                CHECK WAIT COUNT
         BNE   NFCONT                  NO...PRINT NO CONTENTION
         LA    R0,MSGNF
         BAL   R9,$PUTLINE
         B     RETURN                  RETURN TO USER
NFCONT   EQU   *
         LA    R0,MSGNC
         BAL   R9,$PUTLINE
         B     RETURN                  RETURN TO USER
FULL     EQU   *
         BAL   R10,LISTDTL             LIST FIRST BLOCK
         L     R1,SVGETM               LOAD ADDR OF GETMAIN
         LA    R0,4095                 LOAD LENGTH OF GETMAIN
         FREEMAIN R,LV=(0),A=(1)
         B     SCAN                    REISSUE GQSCAN
ABEND    EQU   *
         LA    R0,MSGERR
         BAL   R9,$PUTLINE
         B     RETURN                  RETURN TO USER
RETURN   EQU   *
         L     R13,4(R13)              RESTORE R13
         L     R14,12(R13)             RESTORE R14
         LM    R1,R12,24(R13)          RESTORE R1-R12
         BR    R14                     RETURN
LISTDTL  EQU   *
         CLC   0(4,R4),=F'0'           CHECK IF LAST RESOURCE
         BER   R10                     YES...RETURN
         MVI   SCDTL,X'40'
         MVC   SCDTL+1(L'SCDTL-1),SCDTL  CLEAR AREA
         LA    R5,40(R4)               LOAD ADDR OF RIBVAR
         USING RIBVAR,R5
         LR    R6,R5
         AH    R6,RIBVLEN              ADDRESS RIBE DESECT
         USING RIBE,R6
         L     R8,RIBNRIBE             LOAD NUMBER OF ENTRIES
         TM    RIBSCOPE,RIBSYS         SYSTEM
         BNO   CKRIBSS
         MVC   SST(8),=CL8'SYSTEM'
         B     CKMAJ
CKRIBSS  EQU   *
         TM    RIBSCOPE,RIBSYSS        SYSTEMS
         BNO   CKRIBST
         MVC   SST(8),=CL8'SYSTEMS'
         B     CKMAJ
CKRIBST  EQU   *
         TM    RIBSCOPE,RIBSTEP        STEP
         BNO   CKRIBGL
         MVC   SST(8),=CL8'STEP'
         B     CKMAJ
CKRIBGL  EQU   *
         TM    RIBSCOPE,RIBGLBL        GLOBAL
         BNO   CKRIBLO
         MVC   SST(8),=CL8'GLOBAL'
         B     CKMAJ
CKRIBLO  EQU   *
         MVC   SST(8),=CL8'LOCAL'
CKMAJ    EQU   *
         MVC   SMAJ(8),RIBQNAME        MOVE MAJOR NAME
CKMIN    EQU   *
         SR    R9,R9                   CLEAR R7
         IC    R9,RIBRNMLN
         C     R9,=F'44'               CHECK IF MINOR GREATER 44 CHAR
         BNH   LOK                     NO.....OK
         LA    R9,44                   MAKE MAX = 44 CHAR
LOK      EQU   *
         BCTR  R9,0                    DECREMENT BY 1 FOR MOVE
         EX    R9,DSPLMIN              MOVE MINOR
         TR    SMIN(L'SMIN),TT         TRANSLATE NON PRINTABLES
PLINE1   EQU   *
         LA    R0,SCOPE
         BAL   R9,$PUTLINE
OWNER    EQU   *
         TM    RIBERFLG,RIBETYPE       SHR/EXC
         BNO   CKRIBEX
         MVC   DTY(9),=CL9'SHARED'
         MVC   DTYI,=AL2(NPL)          LOW INTENSITY
         B     CKOWN
CKRIBEX  EQU   *
         MVC   DTY(9),=CL9'EXCLUSIVE'
         MVC   DTYI,=AL2(NPH)          HIGH INTENSITY
CKOWN    EQU   *
         MVC   DOWN(8),RIBEJBNM        MOVE JOBNAME OF REQUESTER
PLINE2   EQU   *
         LA    R0,DETL
         BAL   R9,$PUTLINE
         LA    R6,36(R6)               POINT TO NEXT RIBE
         BCT   R8,OWNER                GO GET NEXT REQUESTER
         LA    R0,NEWL
         BAL   R9,$PUTLINE
         LR    R4,R6                   POINT TO NEXT RESOURCE
         B     LISTDTL                 LIST NEXT DETAIL
$PUTLINE EQU   *
         PUTLINE OUTPUT=((0),TERM,SINGLE,DATA),TERMPUT=(ASIS),         +
               MF=(E,IOPLSECT)
         BR    R9
*
MVCMAJOR MVC   MAJOR(0),0(R6)          MOVE MAJOR NAME
DSPLMIN  MVC   SMIN(0),RIBRNAME        MOVE MINOR NAME
MVCMIN   MVC   SVMIN(0),0(R5)          SAVE MINOR
MVCWC    MVC   WC(0),0(R5)             SAVE WAIT CNT
         EJECT
MSGNC    DC    AL2(MSGNF-MSGNC),AL2(0)
         DC    C'NO CONTENTION FOUND',AL1(NL)
MSGNF    DC    AL2(MSGERR-MSGNF),AL2(0)
         DC    C'RESOURCE NOT FOUND ',AL1(NL)
MSGERR   DC    AL2(NEWL-MSGERR),AL2(0)
         DC    C'ABNORMAL SITUATION OCCURED',AL1(NL)
NEWL     DC    AL2(DETL-NEWL),AL2(0),C' ',AL1(NL)
DETL     DC    AL2(SCOPE-DETL),AL2(0)
         DC    CL5' '
DTYI     DC    AL2(NPL)                LOW INTENSITY
DTY      DC    CL10' '                 TYPE
DOWNI    DC    AL2(PL)                 LOW INTENSITY
DOWN     DC    CL8' '                  REQUESTER
         DC    AL1(NL)
SCOPE    DC    AL2(ENDMSG-SCOPE),AL2(0)
         DC    AL2(PH)
SCDTL    DS    0CL(64)
SST      DC    CL10' '                 SCOPE
SMAJ     DC    CL10' '                 MAJOR
SMIN     DC    CL44' '                 MINOR
         DC    AL1(NL)
ENDMSG   EQU   *
MSGNFL   EQU   MSGNF-MSGNC
SAVE     DC    18F'0'
SVMIN    DC    CL44'ALL'
MAJOR    DC    CL8'SYSDSN  '
WC       DC    F'1'
SVGETM   DC    F'0'
TT       DS    0CL256
*                0 1 2 3 4 5 6 7 8 9 A B C D E F
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'  00-0F
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'  10-1F
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'  20-2F
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'  30-3F
         DC    X'404B4B4B4B4B4B4B4B4B4A4B4C4D4E4F'  40-4F
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'  50-5F
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'  60-6F
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'  70-7F
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'  80-8F
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'  90-9F
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'  A0-AF
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'  B0-BF
         DC    X'C0C1C2C3C4C5C6C7C8C94B4B4B4B4B4B'  C0-CF
         DC    X'4BD1D2D3D4D5D6D7D8D94B4B4B4B4B4B'  D0-DF
         DC    X'4B4BE2E3E4E5E6E7E8E94B4B4B4B4B4B'  E0-EF
         DC    X'F0F1F2F3F4F5F6F7F8F94B4B4B4B4B4B'  F0-FF
PARSEECB DC    F'0'
PARSEANS DC    F'0'
IOPLSECT DC    4F'0'
IOPB     PUTLINE MF=L
         DS    0F
PPL      EQU   *
PPLUPT   DC    A(0)
PPLECT   DC    A(0)
PPLECB   DC    A(PARSEECB)
PPLPCL   DC    A(PARMLIST)
PPLANS   DC    A(PARSEANS)
PPLCBUF  DC    A(0)
PPLUWA   DC    A(0)
TKN      DC    F'0'
***
*** ISSUE PARSE MACROS.
**
PARMLIST IKJPARM DSECT=IKJPARMD
**
K$MAJOR  IKJKEYWD
         IKJNAME 'MAJOR',SUBFLD=SF$MAJOR
K$MINOR  IKJKEYWD
         IKJNAME 'MINOR',SUBFLD=SF$MINOR
K$DSN    IKJKEYWD
         IKJNAME 'DSN',SUBFLD=SF$DSN
K$WC     IKJKEYWD
         IKJNAME 'WAIT',SUBFLD=SF$WC,ALIAS='QL'
SF$MAJOR IKJSUBF
S$MAJOR  IKJIDENT 'MAJOR NAME',MAXLNTH=8,FIRST=ANY,OTHER=ANY,          X
               DEFAULT='SYSDSN  '
SF$MINOR IKJSUBF
S$MINOR  IKJIDENT 'MINOR NAME',MAXLNTH=44,FIRST=ANY,OTHER=ANY,         X
               DEFAULT='ALL'
SF$DSN   IKJSUBF
S$DSN    IKJPOSIT DSNAME,USID,DEFAULT='''ALL'''
SF$WC    IKJSUBF
S$WC     IKJIDENT 'WAIT COUNT',MAXLNTH=2,INTEG,                        X
               DEFAULT='1'
**
*** END OF PARSE MACROS.
**
         IKJENDP
         EJECT
         IKJCPPL
         EJECT
RIB      ISGRIB
         CVT
         END
