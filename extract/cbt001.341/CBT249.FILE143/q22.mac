PDDB     QSTART 'QUEUE COMMAND - LIST PPDB INFO FOR A JOB ' *HMD 01/80*
         GBLB  &NJE           FOR NJE REL 3.0 SUPPORT       *HMD 11/80*
         USING QCKPT,R10      BASE REG FOR CHECKPOINT WORK AREA
         L     R10,QVCKPT     LOAD BASE REG
         USING QDISPLAY,R9    BASE REG FOR DISPLAY WORK AREA
         L     R9,QVDSPL      LOAD BASE REG
         USING WORK,R13       WORK AREA FOR PDDB            *HMD 01/80*
***********************************************************************
*                                                                     *
*   CALL FINDJOB TO LOCATE THE JQE, JCT, AND IOT                      *
*                                                                     *
***********************************************************************
         L     R15,=V(FINDJOB) ROUTINE TO FIND JOB
         BALR  R14,R15        GO TO IT
***********************************************************************
*                                                                     *
*   SET UP FOR PDDB PROCESS                                           *
*                                                                     *
***********************************************************************
         USING PDBDSECT,R2    BASE REG FOR PDDB
         USING IOTDSECT,R3    BASE REG FOR IOT
         MVC   QPDSID,=H'0'   NULLIFY VALIDITY FOR LISTDS
         B     START          START PROCESSING PDDBS        *HMD 01/80*
END      QSTOP
***********************************************************************
*                                                                     *
*   FORMAT VARIOUS PDDB FIELDS                                        *
*                                                                     *
***********************************************************************
START    L     R3,QCIOTA               LOAD BASE REG        *HMD 05/80*
         LR    R5,R3                   SAVE FOR NEXT READ   *HMD 01/80*
         MVI   SWITCH,0                CLEAR SWITCH         *HMD 01/80*
NEXTIOT  LR    R4,R3                   BASE OF IOT          *HMD 01/80*
         A     R4,IOTPDDBP             OFFSET TO LAST PDDB  *HMD 01/80*
         LR    R2,R3                   BASE OF IOT          *HMD 01/80*
         A     R2,QCPDDB1              POINT TO 1ST PDDB    *HMD 01/80*
PDDBLOOP CLC   PDBDSKEY,=H'100'        IS THIS THE DATASET  *HMD 01/80*
         BH    FOUNDPD                 YES, GO PROCESS      *HMD 01/80*
NEXTPDDB LA    R2,PDBLENG(R2)          BUMP TO NEXT PDDB    *HMD 01/80*
         CR    R2,R4                   PAST END?            *HMD 01/80*
         BL    PDDBLOOP                CONTINUE             *HMD 01/80*
         L     R4,IOTIOTTR             DISK ADDR OF NEXT    *HMD 01/80*
PDDBCHA  LTR   R4,R4                   IS THERE ONE?        *HMD 01/80*
         BZ    SPINIOT                 SPIN IOT?            *HMD 01/80*
         BAL   R8,READ                 READ NEXT IOT        *HMD 01/80*
         B     NEXTIOT                 PROCESS NEXT ONE     *HMD 01/80*
         USING JCTDSECT,R1             BASE REG FOR JCT     *HMD 01/80*
SPINIOT  TM    SWITCH,1                DEJA VOUS?           *HMD 01/80*
         BO    END                     OF COURSE            *HMD 01/80*
         OI    SWITCH,1                TURN IT ON           *HMD 01/80*
         L     R1,QCJCTA               GET JCT ADDRESS      *HMD 01/80*
         L     R4,JCTSPIOT             SPIN IOT ADDRESS     *HMD 01/80*
         DROP  R1                      NO NEED FOR THIS     *HMD 01/80*
         B     PDDBCHA                 TRY SOME MORE        *HMD 01/80*
FOUNDPD  DS    0H                      BEGIN PDDB PROCESS   *HMD 01/80*
         XC    CONVERT,CONVERT         CLEAR CONVERT AREA   *HMD 01/80*
         MVC   CLASS-2(BLNKLN),QBLANK  CLEAR FORMAT AREA    *HMD 01/80*
         LH    R7,PDBDSKEY             GET DATA SET ID      *HMD 01/80*
         CVD   R7,CONVERT              CONVERT TO DECIMAL   *HMD 01/80*
         UNPK  DSID(4),CONVERT+5(3)    MOVE IN EDIT PATTERN *HMD 01/80*
         OI    DSID+3,X'F0'            FIX SIGN             *HMD 01/80*
         MVC   CLASS(1),PDBCLASS       MOVE IN JOBCLASS     *HMD 01/80*
         MVC   FORMS,PDBFORMS          MOVE IN FORMS        *HMD 01/80*
         MVC   FCB,PDBFCB              MOVE IN FCB ID       *HMD 01/80*
         MVC   UCS,PDBUCS              MOVE IN UCS ID       *HMD 01/80*
         MVC   X1,PDBCHAR1                                  *HMD 01/80*
         MVC   X2,PDBCHAR2                                  *HMD 01/80*
         MVC   MOD,PDBMODF                                  *HMD 01/80*
         OC    PDBMTTR,PDBMTTR         IS MTTR ZERO?        *HMD 01/80*
         BZ    NOTTR                   YES, FORGET DISPLAY  *HMD 01/80*
         UNPK  MTTR(9),PDBMTTR(5)      UNPACK THE TTR       *HMD 01/80*
         TR    MTTR(8),TRTAB           TRANSLATE THE RESULT *HMD 01/80*
         MVC   MTTR+8(2),QBLANK        GET RID OF GARBAGE   *HMD 01/80*
NOTTR    TM    PDBFLAG1,PDB1HOLD       IS THIS HELD?        *HMD 01/80*
         BZ    NOTHELD                 NOPE                 *HMD 01/80*
         MVC   HELD,=C'HELD'           INDICATE HELD        *HMD 01/80*
NOTHELD  TM    PDBFLAG1,PDB1SPIN       IS THIS A SPIN DS?   *HMD 01/80*
         BZ    NOTSPIN                 NOPE                 *HMD 01/80*
         MVC   SPIN,=C'SPIN'           INDICATE SPIN        *HMD 01/80*
         TM    PDBFLAG1,PDB1PSO        ALREADY PRINTED?     *HMD 06/81*
         BO    NOTSPIN                 NOPE, CONTINUE       *HMD 06/81*
APRTN    MVC   CLASS(BLNKLN),QBLANK    MOVE IN BLANKS       *HMD 06/81*
         MVC   CLASS(MSGLEN),APMSG     MOVE IN SPECIAL MSG  *HMD 06/81*
         B     PDBEXIT                 LEAVE NOW            *HMD 06/81*
NOTSPIN  SR    R0,R0                   CLEAR FOR DEST       *HMD 01/80*
         IC    R0,PDBCOPYS             NUMBER OF COPIES     *HMD 01/80*
         CVD   R0,CONVERT              CONVERT TO DECIMAL   *HMD 01/80*
         MVC   COPIES,ED3              MOVE IN EDIT PATTERN *HMD 01/80*
         ED    COPIES,CONVERT+6        FORMAT NO. OF COPIES *HMD 01/80*
         AIF   (&NJE).NJE01            FORMAT FOR NJE       *HMD 11/80*
         SR    R0,R0                   CLEAR R7             *HMD 01/80*
         ICM   R0,3,PDBDEST            GET PDDB DEST CODE   *HMD 01/80*
         BZ    LOCAL                   MUST BE A LOCAL JOB  *HMD 01/80*
         LA    R1,256                  COMPARAND            *HMD 01/80*
         CR    R0,R1                   IS THIS A REMOTE JOB *HMD 01/80*
         BL    NORMT                   NO, LOCAL DEST       *HMD 01/80*
         BE    LOCAL                   THIS IS LOCAL TOO    *HMD 02/80*
         MVI   DEST+1,C'R'             INDICATE REMOTE ROUTE*HMD 01/80*
         SR    R0,R1                   CLEAR REMOTE IND.    *HMD 01/80*
         B     C001                    BRANCH AROUND INST.  *HMD 01/80*
NORMT    MVI   DEST+1,C'U'             MOVE IN LOCAL DEST   *HMD 01/80*
C001     CVD   R0,CONVERT              CONVERT DEST NUMBER  *HMD 01/80*
         UNPK  DEST+2(3),CONVERT+6(2)  UNPACK DESTINATION   *HMD 01/80*
         OI    DEST+4,X'F0'            FIX SIGN             *HMD 01/80*
         B     C002                    BRANCH AROUND LOCAL  *HMD 01/80*
LOCAL    MVC   DEST(5),=C' LOC '       MOVE IN LOCAL IND.   *HMD 01/80*
         AGO   .NJE02                  BRANCH AROUND NJE CODE
.NJE01   ANOP
         SLR   R15,R15                 CLEAR FOR ICM        *HMD 06/81*
         IC    R15,QXONODE             GET OUR NODE NUMBER  *HMD 06/81*
         MVI   DEST+1,C'U'             ASSUME LOCAL DEVICE  *HMD 06/81*
         CLI   PDBDEST,NODEZERO        IS NODE NUMBER ZERO? *HMD 06/81*
         BE    U001                    YES, FIX DEVICE NAME *HMD 06/81*
         CLM   R15,B'0001',PDBDEST     ROUTED TO OTHER NODE?*HMD 06/81*
         BE    NJEOURS                 THIS IS OUR NODE NBR *HMD 06/81*
         IC    R15,PDBDEST             GET NODE NUMBER      *HMD 06/81*
         SLL   R15,2                   MULTIPLY BY 4        *HMD 06/81*
         LA    R15,QNJNODE(R15)        GET NODE NAME        *HMD 06/81*
         MVC   DEST+1(4),0(R15)        MOVE IN NODE NAME    *HMD 06/81*
         B     C002                    EXIT STAGE LEFT      *HMD 06/81*
NJEOURS  MVI   DEST+1,C'R'             INDICATE REMOTE DEV. *HMD 06/81*
U001     CLI   PDBDEST+1,0             IS REMOTE ID ZERO?   *HMD 06/81*
         BE    LOCAL                   REMOTE 0 IS LOCAL    *HMD 06/81*
         SR    R1,R1                   CLEAR FOR IC         *HMD 06/81*
         IC    R1,PDBDEST+1            INSERT LOCAL ID      *HMD 06/81*
         CVD   R1,CONVERT              CONVERT TO DECIMAL   *HMD 06/81*
         UNPK  DEST+2(3),CONVERT+6(2)  UNPACK INTO FIELD    *HMD 06/81*
         OI    DEST+4,240              FIX SIGN             *HMD 06/81*
         B     C002                                         *HMD 06/81*
LOCAL    MVC   DEST,=C' LOC '          INDICATE LOCAL       *HMD 06/81*
.NJE02   ANOP                          END OF NJE CODE
C002     L     R0,PDBRECCT             LOAD NUMBER OF LINES
         CVD   R0,CONVERT              CONVERT TO DECIMAL
         MVC   LINES,ED6               MOVE IN EDIT PATTERN *HMD 01/80*
         ED    LINES,CONVERT+4         FORMAT NO. OF LINES  *HMD 01/80*
         CLC   HELD,QBLANK             IS FIELD BLANK?      *HMD 01/80*
         BE    PDBEXIT                 YES, NO COMMA        *HMD 01/80*
         CLC   SPIN,QBLANK             THEN IS SPIN BLANK?  *HMD 01/80*
         BE    PDBEXIT                 YES, NO COMMA        *HMD 01/80*
         MVI   COMMAP,COMMA            MOVE IN COMMA        *HMD 01/80*
PDBEXIT  MVC   QDHLINE,HEADING MOVE IN HEADING
         LA    R1,QDMSG       ADDR OF MESSAGE LINE
         ST    R1,QDMSGA      STORE IN MESSAGE ADDR
         MVC   QDMLNG,=H'80'  MESSAGE LENGTH
         L     R15,=V(DISPLAY) ADDR OF DISPLAY MODULE
         BALR  R14,R15        GO TO IT
         B     NEXTPDDB       PROCESS NEXT RECORD
***********************************************************************
*                                                                     *
*   READ A BLOCK FROM HASPACE                                         *
*                                                                     *
***********************************************************************
READ     ST    R4,QCTRAK      STORE DISK ADDR
         LR    R1,R5          IOAREA ADDRESS
         L     R15,=V(READSPC) ADDR OF ROUTINE TO READ HASPACE
         BALR  R14,R15        GO TO IT
         BR    R8             RETURN TO CALLER
***********************************************************************
*                                                                     *
*   MISCELLANY                                                        *
*                                                                     *
***********************************************************************
         LTORG
ED3      DC    X'40202120'           PATTERN FOR COPIES     *HMD 01/80*
ED6      DC    X'4020202020202120'   PATTERN FOR LINES      *HMD 01/80*
COMMA    EQU   C','                  COMMA FOR SEPERATOR    *HMD 01/80*
TRTAB    EQU   *-240                 HEX TRANSLATE TABLE    *HMD 01/80*
         DC    C'0123456789ABCDEF'   FOR HEX TRANSLATION    *HMD 01/80*
HEADING  DC    CL80'DSID  CL CO   DEST  MTTR        LINES  FORMS FCB  UX
               CS   X1   X2   MOD'
APMSG    DC    C'** DATASET HAS ALREADY PRINTED **'         *HMD 06/81*
MSGLEN   EQU   *-APMSG                                      *HMD 06/81*
         AIF   (NOT &NJE).NJE03                             *HMD 06/81*
NODEZERO EQU   0               NODE NUMBER OF ZERO          *HMD 06/81*
.NJE03   ANOP                                               *HMD 06/81*
BUFSTART EQU   0
BUFDSECT EQU   0
JCT      EQU   0                                            *HMD 01/80*
         $TAB                                               *HMD 01/80*
         $JCT                                               *HMD 01/80*
         $IOT
         $PDDB                                              *HMD 01/80*
         TITLE 'QUEUE COMMAND - PPDB WORK AREA DSECT'       *HMD 01/80*
WORK     DSECT                                              *HMD 01/80*
         DS    72C        SUBROUTINE LEVEL 1                *HMD 01/80*
         DS    72C        SUBROUTINE LEVEL 2                *HMD 01/80*
         DS    72C        SUBROUTINE LEVEL 3                *HMD 01/80*
CONVERT  DS    D          DOUBLE-WORD FOR PACK              *HMD 01/80*
SWITCH   DS    C          SWITCH FOR PDDB SEARCH            *HMD 01/80*
         QCOMMON
         ORG   QDMSG
DSID     DS    CL4        DATA SET IDENTIFICATION           *HMD 01/80*
         DS    CL2                                          *HMD 01/80*
CLASS    DS    C                                            *HMD 01/80*
COPIES   DS    CL4                                          *HMD 01/80*
         DS    CL2                                          *HMD 01/80*
DEST     DS    CL4                                          *HMD 01/80*
         DS    CL3                                          *HMD 01/80*
MTTR     DS    CL8                                          *HMD 01/80*
         DS    C                                            *HMD 01/80*
LINES    DS    CL8                                          *HMD 01/80*
         DS    CL2                                          *HMD 01/80*
FORMS    DS    CL4                                          *HMD 01/80*
         DS    CL2                                          *HMD 01/80*
FCB      DS    CL4                                          *HMD 01/80*
         DS    C                                            *HMD 01/80*
UCS      DS    CL4                                          *HMD 01/80*
         DS    CL2                                          *HMD 01/80*
X1       DS    CL4                                          *HMD 01/80*
         DS    C                                            *HMD 01/80*
X2       DS    CL4                                          *HMD 01/80*
         DS    C                                            *HMD 01/80*
MOD      DS    CL4                                          *HMD 01/80*
         DS    C                                            *HMD 01/80*
HELD     DS    CL4                                          *HMD 01/80*
COMMAP   DS    C                                            *HMD 01/80*
SPIN     DS    CL4                                          *HMD 01/80*
BLNKLN   EQU   *-CLASS+2      LENGTH TO BLANK OUT           *HMD 01/80*
         END
