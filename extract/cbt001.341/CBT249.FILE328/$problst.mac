         TITLE 'LINKAGE'
PROBLIST CSECT
         SPACE 3
         USING *,R12               GET ADDRESSABILITY
         SAVE  (14,12),,PROBLIST-&SYSDATE SAVE CALLER'S REGISTERS
         LR    R12,R15             SET BASE
         LA    R15,SAVEAREA        POINT TO MY SAVE AREA
         ST    R13,4(,R15)         CHAIN
         ST    R15,8(,R13)           SAVE
         LR    R13,R15                 AREAS
         TITLE 'MAIN LINE'
         BAL   R14,HOUSKEEP        PERFORM HOUSKEEPING
         BAL   R14,LISTPROB        GENERATE PROBLEM LIST
         BAL   R14,LISTBSEV        GENERATE LIST BY SEVERITY
         BAL   R14,BLD$CLOS        BUILD $CLOSED MEMBER
         BAL   R14,CLEANUP         PERFORM CLEAN UP
         TITLE 'RETURN'
         L     R13,4(,R13)         UNCHAIN SAVE AREAS
         RETURN (14,12),RC=0
         TITLE 'HOUSKEEPING SUBROUTINE'
HOUSKEEP DS    0H
         ST    R14,HSKPSAVE        SAVE RETURN ADDRESS
         OPEN  MF=(E,OPENLIST)     OPEN DCBS
         LH    R0,SYSLIBB+DCBBLKSI-IHADCB GET SYSLIB BLKSIZE
         GETMAIN RU,LV=(0),BNDRY=PAGE GET BUFFER FOR SYSLIB
         ST    R1,ADDRBUFR         SAVE FOR LATER
         L     R14,HSKPSAVE        RESTORE RETURN ADDRESS
         BR    R14                 RETURN TO CALLER
         SPACE 3
HSKPSAVE DC    F'0'                HOUSKEEP SAVE AREA
         TITLE 'CLEAN UP SUBROUTINE'
CLEANUP  DS    0H
         ST    R14,CLNUSAVE        SAVE RETURN ADDRESS
         CLOSE MF=(E,OPENLIST)     CLOSE SYSLIB AND SYSPRINT
         FREEPOOL SYSPRINT         FREE QSAM BUFFERS
         L     R14,CLNUSAVE        RESTORE RETURN ADDRESS
         BR    R14                 RETURN TO CALLER
         SPACE 3
CLNUSAVE DC    F'0'                CLEANUP SAVE AREA
         TITLE 'LIST PROBLEMS SUBROUTINE'
LISTPROB DS    0H
         ST    R14,LPRBSAVE        SAVE RETURN ADDRESS
         RDJFCB MF=(E,OSYSLIBQ)    READ JFCB FOR SYSLIB
         OI    JSYSLIBQ+JFCBIND1-INFMJFCB,JFCPDS INDICATE PDS MEMBER
         MVC   JSYSLIBQ+JFCBELNM-INFMJFCB(8),$INDEX SET MEMBER NAME
         OI    JSYSLIBQ+JFCBTSDM-INFMJFCB,JFCNWRIT DO NOT REWRITE
         OPEN  MF=(E,OSYSLIBQ),TYPE=J OPEN $INDEX
         LA    R0,LISTHEAD         POINT TO LISTING HEADER
         BAL   R14,PRINT           AND PRINT IT
         LA    R0,LISTHEAD+1       POINT TO LISTING HEADER
         BAL   R14,PUTINDEX        AND ADD TO $INDEX
         MVI   LISTLINE,C' '       BLANK LINE
         MVC   LISTLINE+1(L'LISTLINE-1),LISTLINE
         LA    R0,LISTLINE         POINT TO LISTING LINE
         BAL   R14,PRINT           AND PRINT IT
LPRBLOOP DS    0H
         BAL   R14,GETAPROB        GO GET A PROBLEM
         LTR   R15,R15             IS THIS ALL
         BNZ   LPRBRTRN            YES - RETURN TO CALLER
         CLC   KCLOSED,PROBSTAT    NO - IS THIS PROBLEM CLOSED
         BE    LPRBLOOP            YES - SKIP IT
         MVI   LISTLINE,C' '       NO - BLANK LINE
         MVC   LISTLINE+1(L'LISTLINE-1),LISTLINE
         MVC   LPROBNUM,PROBNUM    COPY PROBLEM NUMBER
         MVC   LPROBDAT,PROBDATE   COPY PROBLEM DATE
         MVC   LPROBSEV,PROBSEV    COPY PROBLEM SEVERITY
         MVC   LPROBCMP,PROBCMPT   COPY PROBLEM COMPONENT
         MVC   LPROBOWN,PROBOWN    COPY PROBLEM OWNER
         MVC   LPROBSTA,PROBSTAT   COPY PROBLEM STATUS
         BAL   R14,CNVTDATE        CONVERT UPDATE DATE TO GREGORIAN
         MVC   LPROBIBM,PROBIBM    COPY IBM PROBLEM NUMBER
         LA    R0,LISTLINE+1       POINT TO 1ST BYTE OF DATA FOR $INDEX
         BAL   R14,PUTINDEX        AND WRITE IT
         MVC   LPROBABS,PROBABS    COPY PROBLEM ABSTRACT
         LA    R0,LISTLINE         POINT TO LISTING LINE
         BAL   R14,PRINT           AND PRINT IT
         MVI   LISTLINE,C' '       BLANK LINE
         MVC   LISTLINE+1(L'LISTLINE-1),LISTLINE
         LA    R0,LISTLINE         POINT TO LISTING LINE
         BAL   R14,PRINT           AND PRINT IT
         MVC   LPROBABS,PROBABS    COPY PROBLEM ABSTRACT
         LA    R0,LPROBABS-9       POINT TO IN FRONT OF ABSTRACT
         BAL   R14,PUTINDEX        AND WRITE IT
         B     LPRBLOOP            LOOP UNTIL END OF PROBLEMS
LPRBRTRN DS    0H
         CLOSE MF=(E,OSYSLIBQ)     CLOSE $INDEX
         L     R14,LPRBSAVE        RESTORE RETURN ADDRESS
         BR    R14                 RETURN TO CALLER
         SPACE 3
LPRBSAVE DC    F'0'                LISTPROB SAVE AREA
         TITLE 'BUILD $CLOSED SUBROUTINE'
BLD$CLOS DS    0H
         ST    R14,B$CLSAVE        SAVE RETURN ADDRESS
         RDJFCB MF=(E,OSYSLIBQ)    READ JFCB FOR SYSLIB
         OI    JSYSLIBQ+JFCBIND1-INFMJFCB,JFCPDS INDICATE PDS MEMBER
         MVC   JSYSLIBQ+JFCBELNM-INFMJFCB(8),$CLOSED SET MEMBER NAME
         OI    JSYSLIBQ+JFCBTSDM-INFMJFCB,JFCNWRIT DO NOT REWRITE
         OPEN  MF=(E,OSYSLIBQ),TYPE=J OPEN $CLOSED
         LA    R0,LISTHEAD+1       POINT TO LISTING HEADER
         BAL   R14,PUTINDEX        AND ADD TO $CLOSED
B$CLLOOP DS    0H
         BAL   R14,GETAPROB        GO GET A PROBLEM
         LTR   R15,R15             IS THIS ALL
         BNZ   B$CLRTRN            YES - RETURN TO CALLER
         CLC   KCLOSED,PROBSTAT    NO - IS THIS PROBLEM CLOSED
         BNE   B$CLLOOP            NO - SKIP IT
         MVI   LISTLINE,C' '       YES - BLANK LINE
         MVC   LISTLINE+1(L'LISTLINE-1),LISTLINE
         MVC   LPROBNUM,PROBNUM    COPY PROBLEM NUMBER
         MVC   LPROBDAT,PROBDATE   COPY PROBLEM DATE
         MVC   LPROBSEV,PROBSEV    COPY PROBLEM SEVERITY
         MVC   LPROBCMP,PROBCMPT   COPY PROBLEM COMPONENT
         MVC   LPROBOWN,PROBOWN    COPY PROBLEM OWNER
         MVC   LPROBSTA,PROBSTAT   COPY PROBLEM STATUS
         BAL   R14,CNVTDATE        CONVERT UPDATE DATE TO GREGORIAN
         MVC   LPROBIBM,PROBIBM    COPY IBM PROBLEM NUMBER
         LA    R0,LISTLINE+1       POINT TO 1ST BYTE FOR $CLOSED
         BAL   R14,PUTINDEX        AND WRITE IT
         MVI   LISTLINE,C' '       BLANK LINE
         MVC   LISTLINE+1(L'LISTLINE-1),LISTLINE
         MVC   LPROBABS,PROBABS    COPY PROBLEM ABSTRACT
         LA    R0,LPROBABS-9       POINT TO IN FRONT OF ABSTRACT
         BAL   R14,PUTINDEX        AND WRITE IT
         B     B$CLLOOP            LOOP UNTIL END OF PROBLEMS
B$CLRTRN DS    0H
         CLOSE MF=(E,OSYSLIBQ)     CLOSE $CLOSED
         L     R14,B$CLSAVE        RESTORE RETURN ADDRESS
         BR    R14                 RETURN TO CALLER
         SPACE 3
B$CLSAVE DC    F'0'                BLD$CLOS SAVE AREA
         TITLE 'LIST PROBLEMS BY SEVERITY SUBROUTINE'
LISTBSEV DS    0H
         ST    R14,LSEVSAVE        SAVE RETURN ADDRESS
         MVI   THISSEV,C'1'        INITIALIZE SEVERITY
LSEVLOP1 DS    0H
         MVC   SPROBSEV,THISSEV    COPY SEVERITY TO SEVERITY HEADER
         LA    R0,SEVHEAD          POINT TO SEVERITY HEADER
         BAL   R14,PRINT           AND PRINT IT
LSEVLOP2 DS    0H
         BAL   R14,GETAPROB        GO GET A PROBLEM
         LTR   R15,R15             IS THIS ALL
         BNZ   LSEVBUMP            YES - RETURN TO CALLER
         CLC   KCLOSED,PROBSTAT    NO - IS THIS PROBLEM CLOSED
         BE    LSEVLOP2            YES - SKIP IT
         CLC   THISSEV,PROBSEV     NO - IS THIS PROPER SEVERITY
         BNE   LSEVLOP2            NO - SKIP IT
         BAL   R14,PRNTPROB        YES - PRINT PROBLEM
         B     LSEVLOP2            AND LOOP
LSEVBUMP DS    0H
         CLI   THISSEV,C'4'        WAS THIS SEVERITY 4
         BE    LSEVRTRN            YES - FINISHED
         IC    R15,THISSEV         NO - GET CURRENT SEVERITY
         LA    R15,1(,R15)         BUMP SEVERITY
         STC   R15,THISSEV         PUT IT BACK
         B     LSEVLOP1            AND LOOP
LSEVRTRN DS    0H
         L     R14,LSEVSAVE        RESTORE RETURN ADDRESS
         BR    R14                 RETURN TO CALLER
         SPACE 3
LSEVSAVE DC    F'0'                LISTBSEV SAVE AREA
         TITLE 'GET A PROBLEM SUBROUTINE'
GETAPROB DS    0H
         ST    R14,GPRBSAVE        SAVE RETURN ADDRESS
         ST    R2,GPRBSAVE+4       SAVE R2
GPRBNEXT DS    0H
         CLI   BYTSLEFT+1,11       ENOUGH BYTES LEFT IN THIS BLOCK
         BH    GPRBNORD            YES - DONT NEED TO READ NOW
         POINT SYSLIBB,DIRTTR      NO - POINT TO NEXT DIRECTORY BLOCK
         READ  DECB,SF,,DIRECORD,256,MF=E NO - READ NEXT BLOCK
         CHECK DECB                CHECK I/O
         NOTE  SYSLIBB             GET DIRECTORY TTR POINTER
         ST    R1,DIRTTR           SAVE DIRECTORY TTR POINTER
         MVI   DIRTTR+3,1          POINT TO NEXT DIRECTORY BLOCK
         LA    R1,DIRSTART         GET START OF FIRST ENTRY IN BLOCK
         ST    R1,NEXTNTRY         AND UPDATE POINTER
GPRBNORD DS    0H
         L     R2,NEXTNTRY         GET NEXT DIRECTORY ENTRY POINTER
         USING PDS2,R2             ESTABLISH DIRECTORY ADDRESSABILITY
         CLC   FOXES,PDS2NAME      IS NAME ALL FOXES
         BE    GPRBDEND            YES - END OF DIRECTORY
         SLR   R15,R15             NO - CLEAR R15 FOR IC
         IC    R15,PDS2INDC        GET Z BYTE
         SLL   R15,25              SHIFT OUT POSSIBLE ALIAS BIT
         SRL   R15,24              AND MULTIPLY BY 2
         LA    R15,12(,R15)        ADD FIXED LENGTH (NAME + TTRZ)
         LH    R14,BYTSLEFT        GET BYTES LEFT IN BLOCK
         SR    R14,R15             SUBTRACT CURRENT ENTRY LENGTH
         STH   R14,BYTSLEFT        AND UPDATE BYTES LEFT IN BLOCK
         LA    R14,PDS2NAME(R15)   ADD LENGTH TO STARTING POSITION
         ST    R14,NEXTNTRY        AND UPDATE NEXT ENTRY POINTER
         CLI   PDS2NAME,C'A'       IS THIS ENTRY ALPHABETIC
         BL    GPRBNEXT            NO - LOOK AT NEXT ENTRY
         CH    R15,HALF42          YES - COULD THIS BE SPF ENTRY
         BNE   GPRBNEXT            NO - LOOK AT NEXT ENTRY
         MVC   PROBNUM,PDS2NAME    YES - SAVE PROBLEM NUMBER
         MVC   PROBTTR(3),PDS2TTRP SAVE TTR POINTER
         MVC   PROBUPD,21(R2)      SAVE DATE OF LAST UPDATE
         POINT SYSLIBB,PROBTTR     POINT TO 1ST BLOCK OF MEMBER
         L     R2,ADDRBUFR         GET ADDRESS OF SYSUT1 BUFFER
         READ  DECB,SF,,(R2),'S',MF=E READ 1ST BLOCK
         CHECK DECB                CHECK I/O
         LH    R14,SYSLIBB+DCBBLKSI-IHADCB GET BLKSIZE FROM DCB
         L     R1,DECB+16          GET IOB ADDRESS FROM DECB
         SH    R14,14(,R1)         SUBTRACT RESIDUAL COUNT
         SRDA  R14,32              SHIFT INTO R15
         LA    R1,80               GET LRECL
         DR    R14,R1              CALCULATE NUMBER OF LRECL THIS BLOCK
         ST    R15,NUMRECS         SAVE IT
         LA    R15,SCANTABL        GET START OF SCAN TABLE
GPRBCLR  DS    0H
         CLI   0(R15),X'FF'        IS THIS THE END OF THE SCAN TABLE
         BE    GPRBECLR            YES - SCAN TABLE HAS BEEN CLEARED
         MVC   8(20,R15),BLANKS    NO - CLEAR THIS SCAN TABLE ENTRY
         LA    R15,28(,R15)        BUMP TO NEXT ENTRY
         B     GPRBCLR             AND LOOP
GPRBECLR DS    0H
         MVC   PROBABS,BLANKS      CLEAR ABSTRACT ENTRY
         LA    R15,SCANTABL        GET START OF SCAN TABLE
GPRBSCAN DS    0H
         L     R2,ADDRBUFR         GET START OF BUFFER
         L     R14,NUMRECS         GET NUMBER OF LRECL THIS BLOCK
*              R2 IS START OF LRECL
*              R14 IS NUMBER OF LRECL LEFT
*              R15 IS START OF SCAN TABLE ENTRY
         CLI   0(R15),X'FF'        IS THIS THE END OF THE SCAN TABLE
         BE    GPRBRTRN            YES - RETURN TO CALLER
GPRBSREC DS    0H
         CLC   0(8,R15),0(R2)      NO - IS 1ST ENTRY ON LINE IT
         BNE   GPRBS2ND            NO - TRY 2ND ENTRY ON LINE
         CLI   9(R2),C'.'          YES - BUT HAS IT BEEN FILLED IN
         BE    GPRBS2ND            NO - NEVER MIND
         CLI   9(R2),C'_'          MAYBE - HAS IT BEEN FILLED IN
         BE    GPRBS2ND            NO - NEVER MIND
         MVC   8(20,R15),9(R2)     YES - COPY DATA TO SCAN TABLE
GPRBS2ND DS    0H
         CLC   0(8,R15),30(R2)     IS 2ND ENTRY OF LINE THE DESIRED ONE
         BNE   GPRBSNXT            NO - LOOK FOR NEXT ENTRY
         CLI   39(R2),C'.'         YES - BUT HAS IT BEEN FILLED IN
         BE    GPRBSNXT            NO - NEVER MIND
         CLI   39(R2),C'_'         MAYBE - HAS IT BEEN FILLED IN
         BE    GPRBSNXT            NO - NEVER MIND
         MVC   8(20,R15),39(R2)    YES - COPY DATA TO SCAN TABLE
GPRBSNXT DS    0H
         CLC   KABSTRCT,0(R2)      IS THIS ABSTRACT ENTRY
         BNE   GPRBSBMP            NO - BUMP LRECL
         CLI   9(R2),C'.'          YES - BUT HAS IT BEEN FILLED IN
         BE    GPRBSBMP            NO - NEVER MIND
         MVC   PROBABS,9(R2)       YES - COPY ABSTRACT
GPRBSBMP DS    0H
         LA    R2,80(,R2)          ADD LRECL
         BCT   R14,GPRBSREC        AND SCAN NEXT LRECL
         LA    R15,28(,R15)        POINT TO NEXT SCAN TABLE ENTRY
         B     GPRBSCAN            ELSE START ON NEXT SCAN TABLE ENTRY
GPRBDEND DS    0H
         MVI   BYTSLEFT+1,0        FORCE READ NEXT TIME
         MVC   DIRTTR,FIRSTTTR     RESET TTR TO START OF DIRECTORY
         LA    R15,4               INDICATE END OF DIRECTORY
         B     GPRBEXIT            AND EXIT
GPRBRTRN DS    0H
         SLR   R15,R15             SET RETURN CODE
GPRBEXIT DS    0H
         L     R14,GPRBSAVE        RESTORE RETURN ADDRESS
         L     R2,GPRBSAVE+4       RESTORE R2
         BR    R14                 RETURN TO CALLER
         SPACE 3
GPRBSAVE DC    2F'0'               GETAPROB SAVE AREA
         TITLE 'PRINT A PROBLEM SUBROUTINE'
PRNTPROB DS    0H
         ST    R14,PPRBSAVE        SAVE RETURN ADDRESS
         ST    R2,PPRBSAVE+4       SAVE R2
         MVI   LISTLINE,C' '       BLANK LINE
         MVC   LISTLINE+1(L'LISTLINE-1),LISTLINE
         LA    R0,LISTLINE         POINT TO LISTING LINE
         BAL   R14,PRINT           AND PRINT IT
         BAL   R14,PRINT           AND AGAIN
         BAL   R14,PRINT           AND AGAIN
         MVC   LISTDATA,STARS      MOVE IN EYECATCHER
         LA    R0,LISTLINE         POINT TO LISTING LINE
         BAL   R14,PRINT           AND PRINT IT
         POINT SYSLIBB,PROBTTR     POINT TO FIRST BLOCK OF MEMBER
PPRBLOP1 DS    0H
         L     R2,ADDRBUFR         GET ADDRESS OF SYSLIB BUFFER
         READ  DECB,SF,,(R2),'S',MF=E READ 1ST BLOCK
         CHECK DECB                CHECK I/O
         LH    R2,SYSLIBB+DCBBLKSI-IHADCB GET BLKSIZE FROM DCB
         L     R1,DECB+16          GET IOB ADDRESS FROM DECB
         SH    R2,14(,R1)          SUBTRACT RESIDUAL COUNT
         SRDA  R2,32               SHIFT INTO R2
         LA    R1,80               GET LRECL
         DR    R2,R1               CALCULATE NUMBER OF LRECL THIS BLOCK
         L     R2,ADDRBUFR         GET ADDRESS OF SYSLIB BUFFER
PPRBLOP2 DS    0H
         MVC   LISTDATA,0(R2)      MOVE DATA TO PRINT LINE
         LA    R0,LISTLINE         POINT TO LISTING LINE
         BAL   R14,PRINT           PRINT IT
         LA    R2,80(,R2)          BUMP TO NEXT LRECL
         BCT   R3,PPRBLOP2         AND LOOP UNTIL END OF BLOCK
         B     PPRBLOP1            ELSE READ NEXT BLOCK
PPRBRTRN DS    0H
         MVC   LISTDATA,STARS      MOVE IN EYECATCHER
         LA    R0,LISTLINE         POINT TO LISTING LINE
         BAL   R14,PRINT           AND PRINT IT
         L     R14,PPRBSAVE        RESTORE RETURN ADDRESS
         L     R2,PPRBSAVE+4       RESTORE R2
         BR    R14                 RETURN TO CALLER
         SPACE 3
PPRBSAVE DC    2F'0'               PRNTPROB SAVE AREA
         TITLE 'PRINT SUBROUTINE'
PRINT    DS    0H
         ST    R14,PRNTSAVE        SAVE RETURN ADDRESS
         PUT   SYSPRINT,(0)        PRINT REQUESTED LINE
         L     R14,PRNTSAVE        RESTORE RETURN ADDRESS
         BR    R14                 RETURN TO CALLER
         SPACE 3
PRNTSAVE DC    F'0'                PRINT SAVE AREA
         TITLE 'PUT INDEX SUBROUTINE'
PUTINDEX DS    0H
         ST    R14,PIDXSAVE        SAVE RETURN ADDRESS
         PUT   SYSLIBQ,(0)         WRITE REQUESTED LINE
         L     R14,PIDXSAVE        RESTORE RETURN ADDRESS
         BR    R14                 RETURN TO CALLER
         SPACE 3
PIDXSAVE DC    F'0'                PUT INDEX SAVE AREA
         TITLE 'CONVERT DATE SUBOUTINE'
CNVTDATE DS    0H
         ST    R14,CNVTSAVE        SAVE RETURN ADDRESS
         MVI   DAYTABLE+3,28       ASSUME NOT A LEAP YEAR
         TM    PROBUPD,X'03'       IS YEAR DIVISIBLE BY 4
         BNZ   CNVTNO              NO - CONTINUE
         MVI   DAYTABLE+3,29       YES - CHANGE DAY TABLE
CNVTNO   DS    0H
         XC    WORKAREA,WORKAREA   CLEAR WORK AREA
         MVC   WORKAREA+6(2),PROBUPD+1 INSERT DDDS
         CVB   R15,WORKAREA        GET DAYS IN BINARY IN R15
         LA    R1,DAYTABLE         GET START OF DAY TABLE
         LA    R14,1               START MONTH AT 1
CNVTLOOP DS    0H
         SH    R15,0(,R1)          SUBTRACT OFF DAYS OF THIS MONTH
         BM    CNVTHIT             MINUS - GOT IT
         BZ    CNVTHIT             ZERO - GOT IT
         LA    R1,2(,R1)           ELSE - BUMP INTO TABLE
         LA    R14,1(,R14)         INCREMENT MONTH
         B     CNVTLOOP            AND LOOP
CNVTHIT  DS    0H
         AH    R15,0(,R1)          ADD BACK DAYS
         XC    WORKAREA,WORKAREA   CLEAR WORK AREA
         IC    R1,PROBUPD          GET YEARS IN DECIMAL
         SLL   R1,4                SHIFT FOR SIGN
         LA    R1,15(,R1)          GET A SIGN
         STH   R1,WORKAREA+6       STORE IT
         UNPK  LPROBUPD+6(3),WORKAREA+6(2) UNPACK
         MVI   LPROBUPD+6,C'/'     INSERT /
         CVD   R15,WORKAREA        GET DAYS IN DECIMAL
         OI    WORKAREA+7,X'0F'    FIX SIGN
         UNPK  LPROBUPD+3(3),WORKAREA+6(2) UNPACK
         MVI   LPROBUPD+3,C'/'     INSERT /
         CVD   R14,WORKAREA        GET DAYS IN DECIMAL
         OI    WORKAREA+7,X'0F'    FIX SIGN
         UNPK  LPROBUPD(3),WORKAREA+6(2) UNPACK
         MVI   LPROBUPD,C' '       BLANK LEADING ZERO
CNVTSTOP L     R14,CNVTSAVE        RESTORE RETURN ADDRESS
         BR    R14                 RETURN TO CALLER
         SPACE 3
CNVTSAVE DC    F'0'                CNVTDATE SAVE AREA
         TITLE 'EQUATES'
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         TITLE 'SAVE AREA, CONSTANTS, AND WORK AREAS'
SAVEAREA DC    9D'0'               SAVE AREA
WORKAREA DC    D'0'                WORK AREA
OPENLIST OPEN  (SYSLIBB,,SYSPRINT,(OUTPUT)),MF=L OPEN FILES
OSYSLIBQ OPEN  (SYSLIBQ,(OUTPUT)),MF=L OPEN SYSLIB
FIRSTTTR DC    F'1'                TTR OF FIRST DIRECTORY BLOCK
DIRTTR   DC    F'1'                TTR OF NEXT DIRECTORY BLOCK
NEXTNTRY DC    A(0)                ADDRESS OF NEXT ENTRY IN DIRECTORY
ADDRBUFR DC    A(0)                ADDRESS OF SYSLIB BUFFER
NUMRECS  DC    F'0'                NUMBER OF LRECL IN THIS BLOCK
         READ  DECB,SF,SYSLIBB,MF=L READ/WRITE DECB LIST
XSYSLIBQ DC    0F'0',X'87',AL3(JSYSLIBQ) EXLST FOR SYSLIB
JSYSLIBQ DC    XL176'00'           JFCB FOR SYSLIB
DAYTABLE DC    H'31,28,31,30,31,30,31,31,30,31,30,31'
DIRECORD DS    0XL256              DIRECTORY BLOCK
BYTSLEFT DC    H'0'                BYTES LEFT IN THIS DIRECTORY BLOCK
DIRSTART DC    XL254'00'           DIRECTORY DATA
FOXES    DC    X'FFFFFFFFFFFFFFFF' END OF DIRECTORY INDICATOR
HALF42   DC    H'42'               LENGTH OF SPF DIRECTORY ENTRY
PROBNUM  DC    CL8' '              PROBLEM NUMBER
PROBTTR  DC    XL4'00'             TTR OF 1ST BLOCK OF PROBLEM DATA
PROBUPD  DC    CL7' '              PROBLEM UPDATED BY
BLANKS   DC    CL80' '             BLANKS
PROBABS  DC    CL63' '             PROBLEM ABSTRACT
THISSEV  DC    C' '                SEVERITY
KCLOSED  DC    C'CLOSED'           CONSTANT FOR COMPARISON
KABSTRCT DC    C'ABSTRACT'         CONSTANT FOR COMPARISON
STARS    DC    72C'*'              EYECATCHER
$INDEX   DC    C'$INDEX  '         INDEX MEMBER
$CLOSED  DC    C'$CLOSED '         CLOSED MEMBER
         TITLE 'SCAN TABLE'
SCANTABL DS    0C
         DC    CL8'PROBLEM '
         DC    CL20' '
         DC    CL8'SEVERITY'
PROBSEV  DC    CL20' '
         DC    CL8'DATE    '
PROBDATE DC    CL20' '
         DC    CL8'TIME    '
PROBTIME DC    CL20' '
         DC    CL8'STATUS  '
PROBSTAT DC    CL20' '
         DC    CL8'CMPNT   '
PROBCMPT DC    CL20' '
         DC    CL8'IBMPROB '
PROBIBM  DC    CL20' '
         DC    CL8'INCIDENT'
PROBINC  DC    CL20' '
         DC    CL8'APARID  '
PROBAPAR DC    CL20' '
         DC    CL8'PTFID   '
PROBPTF  DC    CL20' '
         DC    CL8'OWNER   '
PROBOWN  DC    CL20' '
         DC    CL8'GDG #   '
PROBDGD  DC    CL20' '
         DC    X'FF'
         TITLE 'LIST HEADER'
LISTHEAD DC    CL133' '
         ORG   LISTHEAD
         DC    CL1'1'
         DC    CL8'PROBLEM'
         DC    CL1' '
         DC    CL8'OCCURED'
         DC    CL1' '
         DC    CL3'SEV'
         DC    CL1' '
         DC    CL10'COMPID'
         DC    CL1' '
         DC    CL8'OWNER'
         DC    CL1' '
         DC    CL8'STATUS'
         DC    CL1' '
         DC    CL8'UPDATED'
         DC    CL1' '
         DC    CL8'IBM PROB'
         DC    CL1' '
         DC    CL8'ABSTRACT'
         ORG   ,
         TITLE 'LIST LINE'
LISTLINE DC    CL133' '
         ORG   LISTLINE
         DC    CL1' '
LPROBNUM DC    CL8' '
         DC    CL1' '
LPROBDAT DC    CL8' '
         DC    CL2' '
LPROBSEV DC    CL1' '
         DC    CL2' '
LPROBCMP DC    CL10' '
         DC    CL1' '
LPROBOWN DC    CL8' '
         DC    CL1' '
LPROBSTA DC    CL8' '
LPROBUPD DC    CL9' '
         DC    CL1' '
LPROBIBM DC    CL9' '
LPROBABS DC    CL63' '             THIS FILLS LINE COMPLETELY
         ORG   LPROBNUM
LISTDATA DC    CL72' '
         ORG   ,
         DC    CL9' '              PAD OUT FOR $INDEX ABSTRACT LINE
         TITLE 'SEVERITY LIST HEADER'
SEVHEAD  DC    CL133' '
         ORG   SEVHEAD
         DC    CL1'1'
         DC    C'SEVERITY '
SPROBSEV DC    CL1' '
         DC    C' PROBLEMS'
         ORG   ,
         TITLE 'SYSLIB BSAM DCB'
SYSLIBB  DCB   DDNAME=SYSLIB,MACRF=(R,W),DSORG=PO,RECFM=U,             X
               EODAD=PPRBRTRN
         TITLE 'SYSLIB QSAM DCB'
SYSLIBQ  DCB   DDNAME=SYSLIB,MACRF=PM,EXLST=XSYSLIBQ,DSORG=PS
         TITLE 'SYSPRINT DCB'
SYSPRINT DCB   DDNAME=SYSPRINT,MACRF=PM,DSORG=PS,                      X
               LRECL=133,BLKSIZE=133,RECFM=FBA
         TITLE 'LTORG'
         LTORG ,
         TITLE 'PDS DSECT'
         PRINT NOGEN               SUPPRESS PRINTING OF DSECT
         IHAPDS PDSBLDL=NO         GENERATE PDS DSECT
         SPACE 3
PROBLIST CSECT
         TITLE 'DCB DSECT'
         PRINT NOGEN               SUPPRESS PRINTING OF DSECT
         DCBD  DSORG=PO,DEVD=DA    GENERATE DCB DSECT
         SPACE 3
         TITLE 'JFCB DSECT'
         PRINT NOGEN               SUPPRESS PRINTING OF DSECT
         IEFJFCBN ,                GENERATE JFCB DSECT
         SPACE 3
PROBLIST CSECT
         SPACE 3
         END
