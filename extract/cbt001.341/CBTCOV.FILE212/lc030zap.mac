++USERMOD(LC00030).
++VER(Z038) FMID(JBB1326).
++ZAP(ILROPS00).
 NAME ILROPS00 ILROPS00
***********************************************************************
************************** PCCW ALLOCATION MANAGER ********************
***********************************************************************
*                                                                     *
*    ILROPS00 AT ABOUT GETCORE ALLOCATES PCCW_S ACCORDING TO THE      *
*    FOLLOWING MADNESS:                                               *
*                                                                     *
*           ASMBURST (SERVICE BURST GOAL IN MICROSECONDS)             *
* #PCCW_S = ----------------------------------------------------------*
*           SLOTTIME (TIME FOR 1 SLOT (BY DEVICE))*(EYE OF NEWT COEF.)*
*                                                                     *
*    THIS WORKS OUT TO BE, BY DEVICE:                                 *
*                                                                     *
*                  13880 BASE16   80000 BASE10                        *
*    3350 PCCW_S = ------------ = ------------ = 22 BASE10            *
*                    DAC BASE16    3500 BASE10      PER DATASET !     *
*                                                                     *
*                                                                     *
*                  13880 BASE16   80000 BASE10                        *
*    2305 PCCW_S = ------------ = ------------ = 26 BASE10            *
*                    BFE BASE16    3070 BASE10      PER DATASET !     *
*                                                                     *
*                                                                     *
*                  13880 BASE16   80000 BASE10                        *
*    3380 PCCW_S = ------------ = ------------ = 58 BASE10            *
*                    555 BASE16    1365 BASE10      PER DATASET !     *
*                                                                     *
*                                                                     *
*    THE PROBLEM IS THAT PCCW_S ARE ALLOCATED ONLY ACCORDING TO PAGE  *
*    DATA SET INFORMATION THAT IS KNOWN AT NIP TIME.  SINCE WE WANT   *
*    TO DO PAGE ADDS AFTER EACH IPL TO PROTECT THE DRUM FROM NIP-RAIN *
*    POLLUTION (WRITING OUT 2 MEGS OF THE NUC TO THE FAVORED PAGING   *
*    DEVICE) WE MUST MAKE THIS MODULE ALLOCATE MORE PCCW_S THAN IT    *
*    WOULD IF LEFT TO IT'S OWN DEVICES (GOTCHA.)                      *
*                                                                     *
*    TODAY, IPLING WITH THE DRUM REMEMBERED, WE GET:                  *
*        8 LOCAL DATASETS ON 4305 = 8 * 26 = 208                      *
*        2 LOCAL    "     "  3350 = 2 * 22 =  44                      *
*        1 COMMON   "     "  3350 = 1 * 22 =  22                      *
*        1 PLPA     "     "  3350 = 1 * 22 =  22                      *
*                                            ---                      *
*                                    TOTAL = 296                      *
*                                                                     *
*    IPLING WITHOUT THE DRUM WE GET:                                  *
*        4 3350 DATASETS ABOVE    = 4 * 22 =  88                      *
*                                                                     *
*    IF WE CHANGE 3350 SLOTTIME TO 42B BASE16 (1067 BASE10) THEN WE   *
*    WILL CONSEQUENTLY HAVE ALLOCATED 75 PCCW_S PER 3350 PAGE         *
*    DATASET.  THEN IPLS COULD ALWAYS HAVE CVIO TO ELIMINATE THE      *
*    DATASETS THAT WERE ADDED SINCE THE LAST IPL.  WE WOULD NOW GET   *
*    300 PCCW_S AND WITH THE PAGE ADDS DONE AFTER NIP WE CAN AVOID    *
*    THE POLLUTION.                                                   *
*                                                                     *
*    HOPEFULLY, SLOTTIME IS USED FOR NOTHING ELSE.                    *
*                                                                     *
*    IF WE SHOULD DO AN IPL WITHOUT CVIO WE WOULD GET TOO MANY PCCW_S *
*    WHICH MIGHT DRIVE THE SIZE OF THE NUCLEUS PAST THE NEXT SEGMENT  *
*    BOUNDARY.  TO PROTECT AGAINST THIS WE ARE MAKING THE SLOTTIME    *
*    FOR 2305_S ARBITRARILY LARGE TO DIMINISH PCCW ALLOCATION.  SET   *
*    TO 32767 BASE10 (7FFF BASE16) WE WOULD GET 3 PCCW_S PER DATASET  *
*                                                                     *
*    NOTE:  WHEN ALLOCATED THERE IS A SINGLE POOL OF PCCW_S FOR ALL   *
*    PAGE DATASETS.  THIS ZAP DOES NOT GIVE MORE PCCW_S TO 3350 PAGE  *
*    DATASETS AND FEWER TO 2305 DATASETS.                             *
*                                                                     *
***********************************************************************
*
*
 VER 0C30   0BFE      S2305M2  DC    H'3070'
 REP 0C30   7FFF      S2305M2  DC    H'32767' MAKE 2305 SLOTTIME VERY
*                                             LARGE TO MINIMIZE PCCW
*                                             ALLOCATION (3 / DATASET)
*
 VER 0C4E   0DAC      S3350    DC    H'3500'
 REP 0C4E   042B      S3350    DC    H'1067'  MAKE 3350 SLOTTIME SMALL
*                                             TO INCREASE PCCW
*                                             ALLOCATION (75 / DATASET)
*
