.section 'ASMTOZAP'
.ix ASMTOZAP
.ix Programs ASMTOZAP
.sp 2
.subsection 'Description'
.sp 2
     This is a utility which converts an assembler listing
     dataset into a formatted AMASPZAP input deck or SMP PTF. It
     is useful in preparing, maintaining, and documenting those
     installation modifications which cannot be installed execpt
     by modifing IBM code. One can make free use of macros,
     literals, and other convenience features in preparing the
     deck.  Control cards in special assembler comment form
     provide flexability in modification design and control
     over output.
.sp
     All control cards are included in the assembler deck
     beginning with the characters '*ZAP'. The purpose of the
     control cards is to interrupt and resume generation of
     ZAP output.  Statements which do not generate object code
     (comments,ORG,DS,EQU,etc.) are transferred to the output as
     ZAP comment cards, unless output generation is currently
     paused.  Other statements (instructions,DC,CCW,etc.) are
     transferred to the output as 'VER' or 'REP' cards if
     output generation has been (re)started in one of these
     two modes.  The cards governing this are:

          *ZAP START REP
          *ZAP START VER
          *ZAP PAUSE
.sp
     ZAP generation is initially paused.  A '*ZAP START' card is
     valid and (re)starts generation in REP or VER mode, whichever
     was last active, but if it is the first START card in the
     deck, it cannot be followed by object generating statements
     until mode is specified on a subsequent '*ZAP START (VER/REP)'
     card.
.sp
     When the ZAP is done, a '*ZAP END' card will terminate
     a scan of the listing and close the output file.  This not
     only saves a few extra microseconds of CPU which would be
     spent scanning the mapping macros and cross refrence, but
     helps the human reading the assembler to know where the
     essential code has stopped and the support definitions
     have begun.  It takes a lot of ZAP comment cards to define
     the CVT DSECT.
.sp
     The '*ZAP CARD' control card allows arbitrary text to
     be reproduced in the output.  The characters up to the
     space after 'CARD' are stripped off and the remainder of
     the card to column 72 is reproduced in the output deck.
     This is primarily for NAME, DUMP, and SMP control cards.

          *ZAP CARD ++PTF(YU00001) /* TYPICAL PTF DECK * /.
          *ZAP CARD ++ZAP(IEXAMPLE).
          *ZAP CARD   EXPAND IEXAMPLE(50)
          *ZAP CARD   NAME IEXAMPLE
          *ZAP START VER
.sp
.subsection '   Restrictions:'
      1.  You must specify 'PRINT DATA' in the assembly if you
          generate constants or literal in excess of 8 bytes
          length.
      2.  Remember to put the 'LTORG' statement before the
         '*ZAP END' card if literals are generated.
      3.  No relocatable address constants can be coded in the
          ZAP card.
     It is not possible at this time to detect violations of the
     restrictions listed above. Be careful.

.subsection 'Good Technique:'
        Put all sensitive addresses at the beginning of the deck as
        EQU instructions.  They can be easily modified when hit by
        PTFs or when the next release is distributed.  Candidates
        include the zapped over instruction, the patch area, and
        targets of conditional branch instructions other than the
        natural return.

        It is sometimes possible to imbed the ZAP instructions in
        enough support code to make the object deck output of
        the assembly an independently executable program which
        you can TSO TEST before incorporating into the system.
        This saves a little system test time tracking down DATA
        exceptions and the like.
.sp 2
.subsection 'JCL'
.sp 2
     //stepname EXEC PGM=ASMTOZAP
     //IN        DD DSN=assembly-sysprint-data-set,...
     //OUT       DD DSN=amaspzap-control-cards-data-set,...
     //SYSPRINT  DD SYSOUT=A
