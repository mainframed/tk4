.section 'PDS TSO Command'
.ix PDS  'TSO Command'
.ix 'TSO Commands' 'PDS'
.ix 'ISPF' 'PDS'
=F FUNCTION -
 The PDS command allows a TSO user to access and manipulate the
 directory and selected members of a PDS or partitioned data set.

 PDS subcommands are available to display statistics on the data
 set directory and data set usage, modify the data set directory,
 modify the DCB attributes of the data set and validity check the
 data set.

 Additional subcommands can display portions of the member name
 directory, list occurances of a search string in a member, restore a
 previously deleted member, create an alias for a member, display all
 aliases for a member, locate a member with desired attributes, and
 browse, list, delete or rename a member.

 For load data sets, subcommands are available to display and modify
 the linkage attributes of a module, list the HISTORY data for a
 module and map the CSECT structure of a module.

 For other partitioned data sets, subcommands are available to submit
 a JCL member, edit a member, print a member and display SPF statistics
 for a member.


 PDS command features:
    Hexadecimal member names -- member names may be entered in hex for
    any of the subcommands which accept member names (or partial member
    names) as input.  Thus, for these subcommands, x'd7c4e2f9' and PDS9
    are equivalent.  Also, note that x'333' and x'0333' are equivalent.

    Default member names -- if no member name is entered for an
    ATTRIB, BROWSE, DELETE, DIRENTRY, EDIT, FIND, FSE, HISTORY, IF,
    LIST, MAP, MEMBERS, OUTCOPY, PRINTOFF, REVIEW, SPFEDIT, SUBMIT or
    TSOLIST subcommand, the PDS command will use the last member
    name or member group entered for any of these subcommands.  In
    addition, note that the ALIAS, RENAME and RESTORE subcommands also
    modify the default member name.

    Member groups -- the above subcommands which allow default member
    names also accept ranges and patterns of member names.  A member
    name range is specified as name1:name2, which selects the same
    members as DISPLAY name1 name2; a pattern member name is
    specified as name1/name2, which selects the same members as
    PATTERN name1 name2.

    Sequential data sets -- the BROWSE, EDIT, FIND, FSE, LIST,
    PRINTOFF, REVIEW, SPFEDIT, SUBMIT, TSOLIST and VERIFY subcommands
    are also defined for sequential data sets.  The documented syntax
    is unchanged except that no data may be entered corresponding
    to the member name position.

    Subcommand name abbreviations -- all subcommand names can be
    abbreviated to the first few characters of the subcommand name.
    Subcommand names are scanned in the order of output from the
    OPTIONS subcommand; the first match between the entered name
    and the subcommand name table is used.
=X SYNTAX -
     PDS dsname VOLUME(name) SHR/OLD subcommand operands

 ALIASES  - none.
 DEFAULTS - SHR
 REQUIRED - dsname
=O OPERANDS -
  dsname       - specifies the data set name.

  VOLUME(name) - optional, specifies the volume name on which the
                 data set resides.  If a volume name is entered,
                 SYSALLDA is assumed as the unit name; otherwise,
                 the unit name from the catalog is used.

                 Note:  this parameter should be used if the data
                 set is not cataloged.
  SHR          - optional, specifies that the data set is to be
                 allocated with a disposition of SHR.
  OLD          - optional, specifies that the data set is to be
                 allocated with a disposition of OLD to prevent the
                 use of this data set by other users.
  SUBCOMMAND   - optional, specifies that PDS is not to process
                 subcommands -- only the single subcommand entered
                 and any of its operands will be processed.

                 Note: if any subcommand is entered on the command
                 line, no YES/NO prompting will be provided.
  OPERANDS     - optional, specifies any desired operands for a
                 subcommand entered on the primary command line.
=S  The PDS command has the following subcommands:
   %cmem operands  - execute PDS subcommands from the CLIST CMEM
   ATTRIB xx       - list attributes of member or module XX
   ATTRIB xx reus  - assign the reusable linkage attribute to module XX
   ALIAS xx yy     - add an alias to member XX called YY
   BROWSE xx       - display member XX with SPF browse
   CHANGE zzz      - switch to the data set ZZZ
   CONTROL noprom  - do not prompt for yes or no inputs
   DISPLAY rr tt   - display member names in the range RR thru TT999999
   DIRENTRY xx     - dump the directory entry for member XX
   DELETE xx       - delete member XX
   EDIT xx         - edit member XX with the EDIT command processor
   END             - terminate the PDS command
   EXEC ccc        - execute PDS subcommands from the CLIST CCC
   FIND xx =fff=   - list occurrences of the string FFF in member XX
   FIXPDS exp(30)  - add 30 directory blocks to the data set
   FSE xx          - edit member XX with the FSE command processor
   HELP sss        - list the HELP entry for subcommand SSS
   HISTORY xx      - list HISTORY data for module XX
   IF mvs/ rent    - locate the ..MVS.. modules marked as reentrant
   LIST xx         - display member XX
   MAP xx short    - map the CSECT structure of module XX in short form
   MEMBERS         - display the current member group
   OPTIONS         - display the menu of PDS subcommands
   OUTCOPY xx      - output an IEBCOPY select statement for member XX
   PATTERN pp dd   - display all member names containing PP and DD
   PRINTOFF xx     - print a hardcopy of member XX
   RECALL          - display or reenter the previous subcommand
   RENAME xx yy    - rename member XX to YY
   RESTORE xx 1c0a - resurrect member XX at TTR 1C0A
   REVIEW xx       - browse member XX with the REVIEW command
   SPFEDIT xx      - edit member XX with SPF edit
   SUBMIT xx       - submit JCL member XX
   TSO yy z1 z2    - invoke the TSO command YY using operands Z1 and Z2
   TSOLIST xx      - display member XX with TSO LIST
   USAGE           - list directory and data set statistics
   VERIFY          - validity check the data set

   Additional HELP only entries for PDS:
   ABEND           - explains ABEND processing
   ATTN            - explains attention handling
   DEFINE          - explains member and data set terminology
   DIALOG          - explains the relationship to SPF edit and browse
   GROUP           - explains member groups and name forms allowed
   UPDATE          - explains data set protection and SHR updates
=ATTRIB=A=AT=ATT=ATTR=ATTRI
=F  The ATTRIB subcommand lists the attributes of a member.

 If the data set is a load library --
 The following linkage-editor attributes are identified:
   AMODE     - addressing mode (if AMODE is not 24 or RMODE is not 24)
   AUTH      - APF authorized
   DC        - downward compatible (the module can be reprocessed by
               a level E linkage-editor).
   LOAD ONLY - only loadable (OL -- the module can be brought into main
               storage only with a LOAD MACRO)
   NOT EDIT  - not editable (the module cannot be linkage-edited)
   NOT EXEC  - not executable (the linkage-editor noted an error and
               LET processing was not requested)
   OVERLAY   - overlay load module structure
   PAGE      - page alignment required
   REFR      - refreshable (replaceable by a new copy during execution)
   RENT      - reentrant (executable by several tasks simultaneously)
   REUS      - reusable (executable by several tasks in serial order)
   RLD error - if there is a mismatch between the directory RLD/CONTROL
               field and the first RLD entry of OS/VS linked modules
   RMODE     - residence mode (if RMODE is not 24 or AMODE is not 24)
   SCTR      - scatter load module structure
   SSI       - SSI information in hexadecimal
   TEST      - linked with the TEST option

 In addition, the ATTRIB subcommand can add or delete several linkage
 attributes for a load module.  When the ATTRIB subcommand is changing
 a module's attributes and the module is reentrant, the reusable
 attribute is also added as is done by the linkage-editor.

 If a non-alias module is assigned a RMODE or AMODE value, any
 associated alias directory entries are updated to reflect the same
 RMODE value and the main module's AMODE value unless CONTROL
 NOUPDATEALIAS is in effect.

 If the module is an alias and unless NOALIASINFO is specified or
 CONTROL NOALIASINFO is in effect, the name of any corresponding
 real member will be displayed if it exists; otherwise, the module
 name from the alias directory entry (the real module name at the
 time the alias was created) will be displayed.

 If the module is not an alias and unless NOALIASINFO is specified or
 CONTROL NOALIASINFO is in effect, the name of any corresponding alias
 members and any apparent aliases will be displayed.

 Caution: this subcommand modifies the data set if linkage-edit
 attributes are specified.  To ensure data set integrity, you should
 allocate the data set as OLD or be aware of the data set update
 protection provided by the PDS command for SHR allocations (for
 details, enter HELP UPDATE).

 If the data set is not a load library --
 SPF statistics are displayed for members last saved by SPF edit,
 any SSI information is displayed and alias information is displayed
 as follows:
   A.  If the member is an alias, an -A is displayed after the member
       name and unless NOALIASINFO is specified or CONTROL NOALIASINFO
       is in effect, the name of any corresponding real member will
       be displayed.
   B.  If the member is not an alias and if ALIASINFO is specified,
       the name of any corresponding alias members and any apparent
       aliases will be displayed.
=X SYNTAX -
     ATTRIB  member  AMODE24/AMODE31/AMODEANY
                     AUTH/NOAUTH
                     DC/NODC
                     EDIT/NOEDIT
                     EXEC/NOEXEC
                     LOADONLY/NOLOADONLY
                     PAGE/NOPAGE
                     REFR/NOREFR
                     RENT/NORENT
                     REUS/NOREUS
                     RLDFIX/NORLDFIX
                     RMODE24/RMODEANY
                     NONE
                     LKEDDATE/NOLKEDDATE
                     ALIASINFO/NOALIASINFO

 ALIASES  - A, AT, ATT, ATTR, ATTRI, ATTRIB
 DEFAULTS - for load or alias members:  member,   LKEDDATE,   ALIASINFO
            for other members:          member, NOLKEDDATE, NOALIASINFO
 REQUIRED - none.
=O OPERANDS -
  member  -  optional, specifies the name of the member(s) whose
             attributes are to be displayed or the name of the load
             module(s) whose attributes are to be updated.  Default
             member names, member name ranges and member name patterns
             are allowed; for more information, enter HELP GROUP.

 The following linkage attribute modifications can be requested for
 load modules:
  AMODE24     -  change addressing mode to 24
  AMODE31     -  change addressing mode to 31
  AMODEANY    -  change addressing mode to ANY
  AUTH        -  authorize the module with APF
  NOAUTH      -  remove APF authorization from the module
  DC          -  indicate that the module is downward compatible
  NODC        -  indicate that the module is not downward compatible
  EDIT        -  allow the module to be linkage-edited
  NOEDIT      -  disallow linkage-editing of the module
  EXEC        -  allow execution of the module
  NOEXEC      -  disallow execution of the module
  LOADONLY    -  allow module use only by a LOAD MACRO
  NOLOADONLY  -  allow module use by any means
  PAGE        -  require page alignment for the module
  NOPAGE      -  allow any alignment for the module
  REFR        -  add the refreshable attribute
  NOREFR      -  remove the refreshable attribute
  RENT        -  add the reentrant (and reusable) attribute
  NORENT      -  remove the reentrant attribute
  REUS        -  add the reusable attribute
  NOREUS      -  remove the reusable attribute
  RLDFIX      -  change the directory's RLD/CONTROL count to match
                 the value in the first RLD entry for modules linked
                 since OS/VS
  NORLDFIX    -  do not modify the directory's RLD/CONTROL count
  RMODE24     -  change residence mode to 24
  RMODEANY    -  change residence mode to ANY
  NONE        -  equivalent to entering: AMODE24, NOAUTH, NODC,
                 EDIT, EXEC, NOLOADONLY, NOPAGE, NOREFR, NORENT,
                 NOREUS, and RMODE24.

                 Note:  NONE takes effect first; any additional
                 parameters override corresponding NONE parameters.
  LKEDDATE    -  provide the date of the last linkage-edit if possible
  NOLKEDDATE  -  do not provide the date of the last linkage-edit
                 nor check the directory's RLD/CONTROL count against
                 the value in the first RLD entry
  ALIASINFO   -  provide the names of any alias or real members
  NOALIASINFO -  do not provide the names of any alias or real members
=ALIAS=AL=ALI=ALIA
=F   The ALIAS subcommand assigns an alias name to a member.

  If the data set is not a load library, the alias name may be used
  as an alternate name for the identified member.

  If the data set is a load library, then if the alias name is an
  imbedded external name within the load module, that external name
  will be used as the alias entry point; otherwise, the entry point
  of the named member will be used as the alias entry point.

  Caution: this subcommand modifies the data set. To ensure data set
  integrity, you should allocate the data set as OLD or be aware of
  the data set update protection provided by the PDS command for
  SHR allocations (for details, enter HELP UPDATE).
=X SYNTAX -
     ALIAS  membername aliasname

 ALIASES  - AL, ALI, ALIA, ALIAS
 DEFAULTS - none.
 REQUIRED - membername, aliasname
=O OPERANDS -
 membername - specifies the member to which an alias is to be assigned.

 aliasname  - Specifies the alias name to be assigned.  Note that
              this alias name becomes the PDS default member name.
=BROWSE=BROWS=BROW=BRO=BR=B
=F    The BROWSE subcommand enters SPF browse for a member (for
  additional information on the relationship of PDS and BROWSE,
  enter HELP DIALOG).
=X SYNTAX -
     BROWSE  member

 ALIASES  - B, BR, BRO, BROW, BROWS, BROWSE
 DEFAULTS - member
 REQUIRED - none.
=O OPERANDS -
 member   -    optional, specifies the name of member(s) to be browsed.
               Default member names, member name ranges and member
               name patterns are allowed; for more information, enter
               HELP GROUP.

               Note: if : is entered for the member name position, SPF
               will be requested to provide a member selection screen.
=CHANGE=C=CH=CHA=CHAN=CHANG=PDS=PD
=F The CHANGE or PDS subcommand switches PDS to a different
 data set.
=X SYNTAX -
     CHANGE  dsname VOLUME(name) SHR/OLD

 ALIASES  - PD, PDS, C, CH, CHA, CHAN, CHANG, CHANGE
 DEFAULTS - SHR or previously used data set name and volume
            if no operands are entered.
 REQUIRED - none.
=O OPERANDS -
  dsname       - optional, specifies the name of a different data set.
                 If no data set name is entered, the previously used
                 data set will be assumed.

  VOLUME(name) - optional, specifies the volume name on which the
                 data set resides.  If a volume name is entered,
                 SYSALLDA is assumed as the unit name; otherwise,
                 the unit name from the catalog is used.

                 Note:  this parameter should be used if the data
                 set is not cataloged.
  SHR          - optional, specifies that the data set is to be
                 allocated with a disposition of SHR.
  OLD          - optional, specifies that the data set is to be
                 allocated with a disposition of OLD to prevent the
                 use of this data set by other users.
=CONTROL=CO=CON=CONT=CONTR=CONTRO
=F The CONTROL subcommand specifies PDS processing options.

 CONTROL subcommand operands with positive and negative forms are
 global in that they remain in effect until reset by another CONTROL
 subcommand; the other operands are immediate in that they take
 effect only for a single CONTROL subcommand.
=X SYNTAX -
     CONTROL  ALIASINFO   /  NOALIASINFO
              DOUBLE      /  NODOUBLE
              LKEDDATE    /  NOLKEDDATE
              PROMPT      /  NOPROMPT
              RECOVER     /  NORECOVER
              UPDATEALIAS /  NOUPDATEALIAS
              ABEND       /  CPULOOP  /  IOSTATS  /  OUTLOOP

 ALIASES  - CO, CON, CONT, CONTR, CONTRO, CONTROL
 DEFAULTS - Initially:
            ALIASINFO, DOUBLE, LKEDDATE, PROMPT, RECOVER, UPDATEALIAS
 REQUIRED - none.
=O OPERANDS -
  ALIASINFO     - optional, specifies that a MAP subcommand with no
                  limiting operands is to provide alias information
                  for alias members and that an ATTRIB subcommand is
                  to provide alias information except if the
                  NOALIASINFO operand of ATTRIB is entered.
  NOALIASINFO   - optional, specifies that a MAP subcommand is not
                  to provide alias information for any members and
                  that an ATTRIB subcommand is not to provide alias
                  information except if the ALIASINFO operand of
                  ATTRIB is entered.
  DOUBLE        - optional, specifies that double buffering is to be
                  used wherever possible for input operations.
  NODOUBLE      - optional, specifies that single buffering is to be
                  used for all input operations.
  LKEDDATE      - optional, specifies that an ATTRIB subcommand should
                  provide the date of the linkage-edit unless the
                  NOLKEDDATE operand of the ATTRIB subcommand is
                  entered.
  NOLKEDDATE    - optional, specifies that an ATTRIB subcommand should
                  not provide the date of the linkage-edit unless the
                  LKEDDATE operand of the ATTRIB subcommand is entered.
  PROMPT        - optional, specifies that YES/NO decision prompting
                  should be solicited from the terminal operator unless
                  PDS is executing in the background, from CLIST
                  input or from a storage stack.

                  YES/NO prompting is normally performed at the
                  following decision points:
                     1.  before renaming a group of members
                     2.  before deleting a default member
                     3.  before deleting a group of members
                     4.  before restoring a member found in scan mode
                     5.  before modifying a data set with FIXPDS
  NOPROMPT      - optional, specifies that YES/NO decision prompting
                  should be circumvented and that a YES response
                  should be assumed in each case.

                  YES/NO prompting is normally performed at the
                  following decision points:
                     1.  before renaming a group of members
                     2.  before deleting a default member
                     3.  before deleting a group of members
                     4.  before restoring a member found in scan mode
                     5.  before modifying a data set with FIXPDS
  RECOVER       - optional, specifies that STAE recovery is to be
                  attempted after a program ABEND.
  NORECOVER     - optional, specifies that STAE recovery is not to
                  be attempted after a program ABEND.
  UPDATEALIAS   - optional, specifies that any alias entries are to
                  be updated when a load module is renamed or when
                  AMODE or RMODE attributes are assigned to a load
                  module.
  NOUPDATEALIAS - optional, specifies that no alias entries are to
                  be updated when a load module is renamed or when
                  AMODE or RMODE attributes are assigned to a load
                  module.
                  Caution: if a load module actually has alias
                  entries, this operand should not be used for RENAME
                  subcommands or for ATTRIB subcommands if the AMODE
                  or RMODE of a module is changed.
  ABEND         - optional, specifies that a S0C1 ABEND is to be
                  provided for program testing.
  CPULOOP       - optional, specifies that a program branch loop is
                  to be entered for program testing.
  IOSTATS       - optional, specifies that statistics relating to
                  input buffering be displayed.  Note: only non-zero
                  quantities are displayed and statistics are set to
                  zero after each display.
  OUTLOOP       - optional, specifies that a program output loop is
                  to be entered for program testing.
=DISPLAY=D=DI=DIS=DISP=DISPL=DISPLA
=F    The DISPLAY subcommand lists member names from the data set
   directory.  Note the default member group is not affected by
   either the DISPLAY or PATTERN subcommands.

   Note that -A is added following a displayed member name if the
   member name is an alias.  The member name is listed in a combined
   hexadecimal/character format if it does not contain upper-case
   alphanumeric characters (including @, $ and #) or if the first
   character is numeric.  Unprintable characters (for 3270-type
   devices) in a member name are displayed as periods.
=X SYNTAX -
     DISPLAY  name1 name2

 ALIASES  - D, DI, DIS, DISP, DISPL, DISPLA, DISPLAY
 DEFAULTS - entire directory
 REQUIRED - none.
=O OPERANDS -
 name1    - optional, specifies the starting member name (or portion
            of the member name) at which the display is to start. If
            omitted, the entire directory is displayed.

            Note: a range or pattern member descriptor such as
            part1:part2 or seg1/seg2 may be entered for name1,
            in which case, the output will consist of the member
            names which would be displayed by the MEMBERS subcommand.

 name2    - optional, specifies the ending member name (or portion of
            the member name) after which the display is to stop.  If
            omitted, the display continues to the end of the directory.
=DIRENTRY=DIR=DIRE=DIREN=DIRENT=DIRENTR
=F The DIRENTRY subcommand dumps the directory entry of a member.

 OFFSET  NAME      DESCRIPTION  (from GC28-1049, Debugging Handbook #3)
 ------  --------  ----------------------------------------------------
  00     PDS2NAME  CL8   -- member name
  08     PDS2TTRP  XL3   -- TTR of first block of data
  0B     PDS2INDC  X'80' -- member is an alias
                   X'60' -- number of TTR's following (0 - 3)
                   X'1F' -- number of halfwords following (0 - 31)

 *** Load module section only:
  0C     PDS2TTRT  XL4   -- first text TTR, x'00'
  10     PDS2TTRN  XL4   -- Overlay: note list TTR, number of entries
                            Scatter: translation table TTR, x'00'
  14     PDS2ATR1  X'F0' -- Reentrant, Reusable, Overlay, Test
                   X'0F' -- Only loadable, Scatter, Executable, 1 Text
  15     PDS2ATR2  X'F0' -- Not DC, Text origin=0, EP=0, No RLD items
                   X'0F' -- Not EDIT, Test symbols, LKED F, Refreshable
  16     PDS2STOR  XL3   -- total contiguous storage required
  19     PDS2FTBL  XL2   -- length of first text block
  1B     PDS2EPA   XL3   -- entry point address of this member
  1E     PDS2FTB1  XL1   -- x'80' processed by OS/VS linkage-editor
                            x'20' page alignment required
                            x'10' SSI information is present
                            x'08' APF information is valid
  1F     PDS2FTB2  XL1   -- x'10' load module residence mode
                            x'0C' alias entry point addressing mode
                            x'03' main entry point addressing mode
  20     PDS2FTB3  XL1   -- # of RLD/CONTROL records after first text

 *** Scatter load module section only:
  +0     PDS2SLSZ  XL2   -- number of bytes in scatter list
  +2     PDS2TTSZ  XL2   -- number of bytes in translation table
  +4     PDS2ESDT  XL2   -- ESD CSECT identifier of first text block
  +6     PDS2ESDC  XL2   -- ESD CSECT identifier of entry point

 *** Alias load module section only:
  +0     PDS2EPM   XL3   -- entry point address of real member
  +3     PDS2MNM   CL8   -- member name of real member

 *** SSI section (note this section is on a halfword boundary):
  +0     PDSSSIW   XL4   -- SSI information

 *** APF section for OS/VS load modules:
  +0     PDSAPFCT  X'01' -- length of following APF information
  +1     PDSAPFAC  XL1   -- 0 is not authorized; otherwise, authorized
=X SYNTAX -
     DIRENTRY  member

 ALIASES  - DIR, DIRE, DIREN, DIRENT, DIRENTR, DIRENTRY
 DEFAULTS - member
 REQUIRED - none.
=O OPERANDS -
 member -   optional, specifies the name of the member(s) whose
            directory entry is to be dumped.  Default member names,
            member name ranges and member name patterns are allowed;
            for more information, enter HELP GROUP.
=DELETE=DE=DEL=DELE=DELET=SC=SCR=SCRA=SCRAT=SCRATC=SCRATCH
=F   The DELETE or SCRATCH subcommand deletes a member from the
  data set.

  Caution: this subcommand modifies the data set. To ensure data set
  integrity, you should allocate the data set as OLD or be aware of
  the data set update protection provided by the PDS command for
  SHR allocations (for details, enter HELP UPDATE).
=X SYNTAX -
     DELETE  member   ALIAS/NOALIAS

 ALIASES  - DE, DEL, DELE, DELET, DELETE,
            SC, SCR, SCRA, SCRAT, SCRATC, SCRATCH
 DEFAULTS - member, NOALIAS
 REQUIRED - none.
=O OPERANDS -
 member -   optional, specifies the name of the member(s) to be
            deleted.  Default member names, member name ranges and
            member name patterns are allowed; for more information,
            enter HELP GROUP.

            If only a simple member name is entered, no prompting is
            provided; otherwise a single prompt is provided for all
            represented members.
  ALIAS   - specifies that any associated members (aliases, apparent
            aliases and associated real members) are also to be
            deleted.
  NOALIAS - specifies that only the member(s) specifically identified
            are candidates for deletion.
=EDIT=E=ED=EDI
=F  The EDIT subcommand edits a member using the TSO EDIT command.

 If an EDIT type keyword is entered, that keyword is passed to EDIT
 as the descriptive qualifier; otherwise, a descriptive qualifier is
 computed as follows:
   A. If the low-level qualifier of the partitioned data set name is
      one of the valid descriptive qualifiers for EDIT (ASM, BASIC,
      CLIST, CNTL, COBOL, DATA, IPLI, LIST, PLI, TEXT or VSBASIC),
      that qualifier is passed to EDIT.
   B. If the low-level qualifier is FORT, GOFORT is passed to EDIT.
   C. Otherwise, the data type qualifier is not a valid descriptive
      qualifier and the general descriptive qualifier, DATA, is
      passed to EDIT.
=X SYNTAX -
     EDIT  member NONUM ASIS  OLD/NEW  ASM/BASIC/CLIST/CNTL/COBOL/DATA/
                                       FORTE/FORTG/FORTGI/FORTH/GOFORT/
                                       IPLI/LIST/PLI/PLIF/TEXT/VSBASIC

 ALIASES  - E, ED, EDI, EDIT
 DEFAULTS - member, EDIT type based on the data set name
 REQUIRED - none.
=O OPERANDS -
 member   - optional, specifies the member name(s) to be passed (along
            with the data set name) to the TSO EDIT command.  Default
            member names, member name ranges and member name patterns
            are allowed; for more information, enter HELP GROUP.

  NONUM   - optional, specifies that the member is to be edited without
            line numbers.
  ASIS    - optional, specifies that the member is to be edited with
            upper and lower-case data.
  OLD     - optional, specifies that PDS is to verify that the
            member exists before calling EDIT.
  NEW     - optional, specifies that PDS is to verify that the
            member does not exist before calling EDIT.
 EDIT type keywords are as follows:
  ASM     -  EDIT type is assembly
  BASIC   -  EDIT type is BASIC
  CLIST   -  EDIT type is CLIST
  CNTL    -  EDIT type is CNTL
  COBOL   -  EDIT type is COBOL
  DATA    -  EDIT type is DATA
  FORTE   -  EDIT type is FORTRAN level "E"
  FORTG   -  EDIT type is FORTRAN level "G"
  FORTGI  -  EDIT type is FORTRAN level "GI"
  FORTH   -  EDIT type is FORTRAN level "H"
  GOFORT  -  EDIT type is GOFORT
  IPLI    -  EDIT type is IPLI
  LIST    -  EDIT type is LIST
  PLI     -  EDIT type is PLI
  PLIF    -  EDIT type is PLI (F-level)
  TEXT    -  EDIT type is TEXT
  VSBASIC -  EDIT type is VSBASIC
=END=EN
=F   The END subcommand terminates the PDS command.
=X SYNTAX -
     END

 ALIASES  - EN, END
=O OPERANDS -
 no operands are supported.
=EXEC=EX=EXE=%
=F   The EXEC or % subcommand executes a CLIST containing PDS
  subcommands.  The TSO CLIST processor is used; both implicit (%... )
  and explicit (EXEC ... ) call forms are supported.

  Note: when subcommands are entered from a CLIST (or in batch mode
  or from a storage stack), YES/NO prompts are not provided); instead,
  YES responses are assumed in each case.
=X SYNTAX -
     EXEC  clistname 'operands'   /     %clistmem  operands

 ALIASES  - %, EX, EXE, EXEC
 DEFAULTS - none.
 REQUIRED - clistname or clistmem
=O OPERANDS -
 clistname - specifies the CLIST data set name.

 clistmem  - specifies the name of a member in the CLIST partitioned
             data set allocated to FILE(SYSPROC).

 operands  - optional, may include any parameters for the CLIST.
=FIND=F=FI=FIN
=F  The FIND subcommand displays portions of a member which contain a
  search string.  Optionally, the THEN or ELSE keywords may be entered
  to allow conditional execution of other subcommands.

 Unprintable characters for 3270-type devices are translated to periods
 before they are displayed.

 The FIND formats are NUM, SNUM, NONUM, LBLOCK, LDUMP, BLOCK and DUMP;
 for load modules, the NUM, SNUM and NONUM formats are equivalent
 to the LDUMP format.

 The default format is initially NUM; however, each time a format
 operand is entered on a LIST or FIND subcommand, the value entered is
 used as the output format for subsequent LIST and FIND subcommands.
 Also, note the following:
   A. Formats NUM, SNUM and NONUM limit the search and display length
      for logical records to 256 characters.
   B. Formats BLOCK and DUMP apply to physical records; the other
      formats apply to logical records; and for load modules, LBLOCK
      and LDUMP formats apply to CSECT data.
   C. Formats LBLOCK, LDUMP, BLOCK and DUMP display only those
      segments of a record which contain the search string; however,
      a following segment will also be displayed if the string spans
      a segment boundary.
=X SYNTAX -
   FIND  member 'string' NUM/SNUM/NONUM/LBLOCK/LDUMP/BLOCK/DUMP
                         OFFSET(Hx) MODULE(Partm)
                         SKIPREC(n) MAXIN(n) MAXOUT(n)
                         SKIPCOL(n) MAXLEN(n) FIRST/NOFIRST
                      THEN(ATTRIB/BROWSE/DIRENTRY/DELETE/EDIT/END/
                           FIND/FSE/HISTORY/LIST/MAP/MEMBERS/OUTCOPY/
                           PRINTOFF/REVIEW/SPFEDIT/SUBMIT/TSOLIST)
                      ELSE(ATTRIB/BROWSE/DIRENTRY/DELETE/EDIT/END/
                           FIND/FSE/HISTORY/LIST/MAP/MEMBERS/OUTCOPY/
                           PRINTOFF/REVIEW/SPFEDIT/SUBMIT/TSOLIST)

 ALIASES  - F, FI, FIN, FIND
 DEFAULTS - member, previous string,  NUM or previous LIST/FIND format
 REQUIRED - none.
=O OPERANDS -
 member      -  optional, specifies the name of the member(s) to be
                scanned.  Default member names, member name ranges
                and member name patterns are allowed; for more
                information, enter HELP GROUP.

 string      -  optional, the string to be searched for.  It is coded
                as a delimited string like +searched for+.  If the
                string is not entered or is null, the last string
                entered will be used. The string may contain one to
                16 characters.

                As an alternative, hexadecimal data may be entered as
                a string delimited with x's like x0123456789abcdefx.
                Note that the string may contain one to 32 characters
                and that x333x and x0333x are equivalent.

 FIND format control keywords are as follows:
  NUM        -  The line number field (the last 8 bytes of a fixed-
                format record or the first 8 bytes otherwise) of
                each logical record is examined; if the field is not
                numeric, formatting is switched to NONUM mode for the
                remainder of the member.

                For SPF-saved members, the high-order six digits of
                the line number field is formatted; otherwise, the
                low-order six digits of the line number field is
                formatted by suppressing leading zeroes.  The line
                number segment is followed by a blank and up to 249
                characters of data from the logical record.  Note that
                the formatted line including the line number segment
                and the following blank is scanned for the search
                string.
  SNUM       -  The line number field (the last 8 bytes of a fixed-
                format record or the first 8 bytes otherwise) is
                discarded.  Up to 256 bytes from a logical record are
                searched or displayed.
  NONUM      -  Up to 256 bytes from a logical record are searched or
                displayed.
  LBLOCK     -  Logical records are formatted with two hexadecimal
                offsets (displacement in the member and displacement
                in the logical record) and segments of 64 characters
                surrounded by asterisks.  Only formatted segments
                which contain the search string are displayed;
                however, a following segment will also be displayed
                if the string spans a segment boundary.

                Note: for load modules, only CSECT data will be
                searched or displayed and if the partial name Partm is
                entered in a MODULE operand, only those CSECT or ENTRY
                names matching Partm will be searched or displayed.
                CSECT records are formatted with two hexadecimal
                offsets (a module offset and a CSECT offset) and
                segments of 64 characters surrounded by asterisks.
  LDUMP      -  Logical records are formatted with two hexadecimal
                offsets (displacement in the member and displacement
                in the logical record), segments of up to 32
                characters of hexadecimal data and up to 16 bytes of
                equivalent characters surrounded by asterisks.  Only
                formatted segments which contain the search string
                are displayed; however, a following segment will also
                be displayed if the string spans a segment boundary.

                Note: for load modules, only CSECT data will be
                searched or displayed and if the partial name Partm is
                entered in a MODULE operand, only those CSECT or ENTRY
                names matching Partm will be searched or displayed.
                CSECT records are formatted with two hexadecimal
                offsets (a module offset and a CSECT offset), segments
                of up to 32 characters of hexadecimal data and up to
                16 bytes of characters surrounded by asterisks.
  BLOCK      -  Physical records are formatted with two hexadecimal
                offsets (displacement in the member and displacement
                in the physical record) and segments of 64 characters
                surrounded by asterisks.

                Only formatted segments which contain the search string
                are displayed; however, a following segment will also
                be displayed if the string spans a segment boundary.
  DUMP       -  Physical records are formatted with two hexadecimal
                offsets (displacement in the member and displacement
                in the physical record), segments of up to 32
                characters of hexadecimal data and up to 16 bytes of
                equivalent characters surrounded by asterisks.

                Only formatted segments which contain the search string
                are displayed; however, a following segment will also
                be displayed if the string spans a segment boundary.
 FIND control keywords are as follows:
  OFFSET(Hx)  - for LBLOCK and LDUMP formats only; Hx may be entered
                as a 1 to six digit hexadecimal number to specify
                the module offset at which the search is to begin.
  MODULE(Partm)-for LBLOCK or LDUMP formats only; Partm may be entered
                as a 1 to 8 byte partial external name to limit the
                CSECT or ENTRY names to be searched or displayed to
                those matching the partial name Partm.
  SKIPREC(n)  - n is coded as 0 through 9999999 to specify the number
                of logical records (physical records for BLOCK or
                DUMP formats) to ignore at the beginning of a member.
  MAXIN(n)    - n is coded as 0 through 9999999 to specify the maximum
                number of logical records (physical records for BLOCK
                or DUMP formats) to input for a member after
                satisfying any SKIPREC operand.
  MAXOUT(n)   - n is coded as 0 through 9999999 to specify the maximum
                number of logical records (partial logical records for
                LBLOCK or LDUMP formats; partial physical records for
                BLOCK or DUMP formats) to output for a member.
  SKIPCOL(n)  - n is coded as 0 through 99999 to specify the number
                of columns to ignore at the beginning of each logical
                record (physical record for BLOCK or DUMP formats).

                Note: for NUM or SNUM output format with OS/VS record
                format V, SKIPCOL(0) positions the data formatter to
                the first data position after the line number field.
  MAXLEN(n)   - n is coded as 0 through 99999 to specify the maximum
                length of a logical record (physical record for BLOCK
                or DUMP formats) to search or display.
  FIRST       - Specifies that all remaining data in the member is
                to be listed after the first occurance of the string.
  NOFIRST     - Specifies that normal FIND processing is to be in
                effect.
 FIND conditional keywords are as follows:
  THEN(action) - The THEN subcommand is executed if the string is
                 found in a member.  The subcommand may be ATTRIB,
                 BROWSE, DIRENTRY, DELETE, EDIT, END, FIND, FSE,
                 HISTORY, LIST, MAP, MEMBERS, OUTCOPY, PRINTOFF,
                 REVIEW, SPFEDIT, SUBMIT or TSOLIST.
  ELSE(action) - The ELSE subcommand is executed if the string is not
                 found in a member.  The subcommand may be ATTRIB,
                 BROWSE, DIRENTRY, DELETE, EDIT, END, FIND, FSE,
                 HISTORY, LIST, MAP, MEMBERS, OUTCOPY, PRINTOFF,
                 REVIEW, SPFEDIT, SUBMIT or TSOLIST.
=FIXPDS=FIXPD=FIXP=FIX
=F   The FIXPDS subcommand can perform several utility functions for
  partitioned data sets; it can modify the data set DCB and optionally,
  either expand the PDS directory or reinitialize the PDS directory.

  After the FIXPDS subcommand gains control, it comments on the data
  set action to be taken and any potential error conditions; it then
  waits for a user response to a prompt before changing the data set
  unless CONTROL NOPROMPT is in effect.

  Following are more detailed implementation notes on each of the
  different functions available through the FIXPDS subcommand:
    A.  EXPANDDIR (expand the directory)
        1.  If no members exist in the data set, RESETDIR is used
        2.  The names of any members that will be moved out of the
            way of the expanded directory are listed
        3.  If any of these members are in use by an SPF edit session,
            a warning message is issued
        4.  As each member is moved, an informational message is issued
        5.  The additional directory blocks are written
        6.  DCB is invoked to make any DCB changes
    B.  RESETDIR (reset the directory)
        1.  If any members exist in the data set, a warning message
            is issued
        2.  If any members are in use by an SPF edit session, a
            warning message is issued
        3.  The data set's directory blocks are rewritten with null
            data, destroying any existing member information
        4.  The end of data marker (DS1LSTAR) is reset to indicate
            an empty partitioned data set
        5.  DCB is invoked to make any DCB changes
    C.  DCB (modify the DCB attributes)
        1.  The data set is opened for output with any new DCB
            parameters
        2.  If a data type keyword such as ASM, CLIST, CNTL, LOAD or
            OBJECT is entered, RECFM and LRECL default values are
            provided from a table and a BLKSIZE value is determined
            based on the allocated device type
        3.  If any RECFM, LRECL or BLKSIZE values are specifically
            requested by keyword, these values will override the
            values as determined above


  Note: if the total number of directory blocks to be written will
  fill the last directory position on a disk track for the RESETDIR
  or EXPANDDIR options, PDS will add an extra padding directory
  block to ensure that the end of file marker is written on the
  following track.  This is done for compatibility with partitioned
  data set allocation.

  Caution: this subcommand modifies the data set. To ensure data set
  integrity, you should allocate the data set as OLD or be aware of
  the data set update protection provided by the PDS command for
  SHR allocations (for details, enter HELP UPDATE).
=X SYNTAX -
     FIXPDS  EXPANDDIR(Addblks) / RESETDIR(Totblks) / DCB
               ASM / CLIST / CNTL / LOAD / OBJECT
               RECFM(F/FB/FT/FBT/FA/FBA/FTA/FBTA/FM/FBM/FTM/FBTM/
                     V/VB/VT/VBT/VA/VBA/VTA/VBTA/VM/VBM/VTM/VBTM/
                     U/UT/UA/UM/UTA/UTM)
               LRECL(L1)
               BLKSIZE(L2)

 ALIASES  - FIX, FIXP, FIXPD, FIXPDS
 DEFAULTS - DCB
            RECFM(previous value),
            LRECL(previous value),
            BLKSIZE(previous value)
 REQUIRED - none.
=O OPERANDS -

  EXPANDDIR(Addblks) - specifies that the directory is to be expanded
                       by the number of specified directory blocks.
                       Addblks may be entered as a number from 1
                       through 99999 and it defaults to 50.
  RESETDIR(Totblks)  - specifies that the directory is to be over-
                       written with the specified number of directory
                       blocks.  Totblks may be entered as a number
                       from 1 through 99999 and it defaults to the
                       number of directory blocks already allocated.
  DCB                - specifies that only the DCB for the data set
                       is to be modified.
  ASM         - specifies the equivalent of RECFM(FB) LRECL(80) and
                a BLKSIZE value which will obtain one-half track
                blocking for the device as follows.  Note that RECFM,
                LRECL and BLKSIZE may also be explicitly specified.

                    DEVICE      2314   3330   3340   3350   3375   3380
                                ----   ----   ----   ----   ----   ----
                    BLKSIZE     3520   6400   4080   9440  17600  23440

  CLIST       - specifies the equivalent of RECFM(VB) LRECL(255) and
                a BLKSIZE value which will obtain one-third track
                blocking for the device as follows.  Note that RECFM,
                LRECL and BLKSIZE may also be explicitly specified.

                    DEVICE      2314   3330   3340   3350   3375   3380
                                ----   ----   ----   ----   ----   ----
                    BLKSIZE     2296   4252   1964   6232  11616  15476

  CNTL        - specifies the equivalent of RECFM(FB) LRECL(80) and
                a BLKSIZE value which will obtain one-half track
                blocking for the device as follows.  Note that RECFM,
                LRECL and BLKSIZE may also be explicitly specified.

                    DEVICE      2314   3330   3340   3350   3375   3380
                                ----   ----   ----   ----   ----   ----
                    BLKSIZE     3520   6400   4080   9440  17600  23440

  LOAD        - specifies the equivalent of RECFM(U) and a BLKSIZE
                value which equals the track length for the device as
                follows (for devices with track sizes exceeding 32K
                characters, a half-track size value will be used).
                Note that RECFM and BLKSIZE may also be explicitly
                specified.

                    DEVICE      2314   3330   3340   3350   3375   3380
                                ----   ----   ----   ----   ----   ----
                    BLKSIZE     7294  13030   8368  19069  17600  23476

  OBJECT      - specifies the equivalent of RECFM(FB) LRECL(80) and
                the optimal BLKSIZE for the device which does not
                exceed 3200 bytes as follows.  Note that RECFM, LRECL
                and BLKSIZE may also be explicitly specified.

                    DEVICE      2314   3330   3340   3350   3375   3380
                                ----   ----   ----   ----   ----   ----
                    BLKSIZE     2240   3120   2640   2960   3200   3120

  RECFM(Newr) - specifies a new DCB RECFM value for the data set.
                Newr defaults to its previous value for the data set
                or may be entered as any one of the following:
                F, FB, FT, FBT, FA, FBA, FTA, FBTA, FM, FBM, FTM, FBTM,
                V, VB, VT, VBT, VA, VBA, VTA, VBTA, VM, VBM, VTM, VBTM,
                U, UT, UA, UM, UTA or UTM.
  LRECL(L1)   - specifies a new DCB LRECL value for the data set.
                L1 defaults to its previous value for the data set
                or may be entered as a number from 1 through 32767.
  BLKSIZE(L2) - specifies a new DCB BLKSIZE value for the data set.
                L2 defaults to its previous value for the data set
                or may be entered as a number from 1 through 32767.
=FSE=FS
=F  The FSE subcommand edits a member.  The TSO FSE command is used;
 both the FSE+ product from Applied Software, Inc. and the command
 called FSE from the CBT MVS SHARE tape (file 207) are compatable
 with the interface provided by this subcommand.

 If an EDIT type keyword is entered, that keyword is passed to FSE
 as the descriptive qualifier; otherwise, a descriptive qualifier is
 computed as follows:
   A. If the low-level qualifier of the partitioned data set name is
      one of the valid descriptive qualifiers for FSE (ASM, BASIC,
      CLIST, CNTL, COBOL, DATA, IPLI, LIST, PLI, TEXT or VSBASIC),
      that qualifier is passed to FSE.
   B. If the low-level qualifier is FORT, GOFORT is passed to FSE.
   C. Otherwise, the data type qualifier is not a valid descriptive
      qualifier and the general descriptive qualifier, DATA, is
      passed to FSE.
=X SYNTAX -
      FSE  member NONUM ASIS  OLD/NEW  ASM/BASIC/CLIST/CNTL/COBOL/DATA/
                                       FORTE/FORTG/FORTGI/FORTH/GOFORT/
                                       IPLI/LIST/PLI/PLIF/TEXT/VSBASIC

 ALIASES  - FS, FSE
 DEFAULTS - member, EDIT type based on the data set name
 REQUIRED - none.
=O OPERANDS -
 member   - optional, specifies the member name(s) to be passed (along
            with the data set name) to the TSO FSE command.  Default
            member names, member name ranges and member name patterns
            are allowed; for more information, enter HELP GROUP.

  NONUM   - optional, specifies that the member is to be edited without
            line numbers.
  ASIS    - optional, specifies that the member is to be edited with
            upper and lower-case data.
  OLD     - optional, specifies that PDS is to verify that the
            member exists before calling FSE.
  NEW     - optional, specifies that PDS is to verify that the
            member does not exist before calling FSE.
 EDIT type keywords are as follows:
  ASM     -  EDIT type is assembly
  BASIC   -  EDIT type is BASIC
  CLIST   -  EDIT type is CLIST
  CNTL    -  EDIT type is CNTL
  COBOL   -  EDIT type is COBOL
  DATA    -  EDIT type is DATA
  FORTE   -  EDIT type is FORTRAN level "E"
  FORTG   -  EDIT type is FORTRAN level "G"
  FORTGI  -  EDIT type is FORTRAN level "GI"
  FORTH   -  EDIT type is FORTRAN level "H"
  GOFORT  -  EDIT type is GOFORT
  IPLI    -  EDIT type is IPLI
  LIST    -  EDIT type is LIST
  PLI     -  EDIT type is PLI
  PLIF    -  EDIT type is PLI (F-level)
  TEXT    -  EDIT type is TEXT
  VSBASIC -  EDIT type is VSBASIC
=HELP=H=HE=HEL
=F   The HELP subcommand lists data from the HELP data set.  The TSO
  HELP command is used; if the HELP subcommand is entered without
  operands, a list of valid subcommands is displayed.
=X SYNTAX -
     HELP  subcommand FUNCTION SYNTAX OPERAND/OPERAND(k)

 ALIASES  - H, HE, HEL, HELP
 DEFAULTS - none.
 REQUIRED - none.
=O OPERANDS -
 subcommand  - optional, specifies the name of a subcommand (or the
               alias name of a subcommand) for which HELP is to be
               displayed.  if the subcommand name is omitted, a list
               of valid subcommands is displayed.

  FUNCTION   - specifies that function information for the subcommand
               is to be displayed.
  SYNTAX     - specifies that syntax information for the subcommand
               is to be displayed.
  OPERAND(k) - specifies that information for the keyword identified
               in the (k) operand is to be displayed.  if the (k)
               operand is omitted, information on all operands of the
               subcommand will be displayed.
=HISTORY=HI=HIS=HIST=HISTO=HISTOR
=F  The HISTORY subcommand displays the last linkage-edit date for a
 module and lists any CSECT IDR data assigned to a load module.

 Note: if a member is not a load module, any SPF statistics or any
 SSI information will be displayed for the member and any HISTORY
 keyword information will be ignored.
=X SYNTAX -
     HISTORY  member  MODULE(Partm)
                      LKED(Partl)
                      TRANS(Partt)
                      USER(Partu)
                      ZAP(Partz)

 ALIASES  - HI, HIS, HIST, HISTO, HISTOR, HISTORY
 DEFAULTS - member, LKED, MODULE, TRANS, USER and ZAP; however,
            if LKED, TRANS, USER or ZAP are specified, only the
            corresponding types of data will be provided.
 REQUIRED - none.
=O OPERANDS -
 member          - optional, specifies the name of the load module(s)
                   for which a HISTORY summary is to be produced.
                   Default member names, member name ranges and member
                   name patterns are allowed; for more information,
                   enter HELP GROUP.

  MODULE(Partm)  - specifies that CSECTS defined by the partial name,
                   Partm, are to be listed. Partm may be entered as a
                   partial CSECT name with one to eight characters.

                   Note that if MODULE(Partm) is entered, any TRAN,
                   USER or ZAP keywords apply only to CSECT's whose
                   names match the partial CSECT name, Partm.
  LKED(Partl)    - specifies that if the linkage-editor name matches
                   the partial name, Partl, a line identifying the
                   editor is to be listed. Partl may be entered as a
                   partial linkage-editor name with one to ten
                   characters.
  TRAN(Partt)    - specifies that CSECTS identified as having been
                   assembled or compiled by the translator defined by
                   the partial name, Partt, are to be listed. Partt
                   may be entered as a partial translator name with
                   one to ten characters.
                   Note that if MODULE(Partm) is also entered, any
                   TRAN operand applies only to CSECT's whose names
                   match the partial CSECT name, Partm.
  USER(Partu)    - specifies that user IDR data which matches the
                   partial name, Partu, is to be listed. Partu may
                   be entered as partial IDR data with one to eight
                   characters.
                   Note that if MODULE(Partm) is also entered, any
                   USER operand applies only to CSECT's whose names
                   match the partial CSECT name, Partm.
  ZAP(Partz)     - specifies that zap IDR data which matches the
                   partial name, Partz, is to be listed. Partz may be
                   entered as partial zap IDR data with one to eight
                   characters.
                   Note that if MODULE(Partm) is also entered, any
                   ZAP operand applies only to CSECT's whose names
                   match the partial CSECT name, Partm.
=IF=I
=F   The IF subcommand searches for members meeting defined conditions.
  The action to be taken is specified by the THEN and ELSE keywords.
  Either the THEN or ELSE keyword may be omitted; if both THEN and ELSE
  are omitted, a default of THEN(ATTRIB) is provided.

  If all conditions are true for a given member, any THEN action is
  taken for that member; otherwise, one or more conditions were not
  true and any ELSE action is taken for the member.
=X SYNTAX -
     IF member   ABOVE(Count1)
                 ALIAS/NOALIAS
                 AMODE24/AMODE31/AMODEANY/NOAMODE24/
                         NOAMODE31/NOAMODEANY  (load modules only)
                 APFERR/NOAPFERR               (load modules only)
                 APPARENTALIAS/NOAPPARENTALIAS
                 AUTH/NOAUTH                   (load modules only)
                 BELOW(Count2)
                 BLOCKERR/NOBLOCKERR
                 DC/NODC                       (load modules only)
                 EDIT/NOEDIT                   (load modules only)
                 EXEC/NOEXEC                   (load modules only)
                 FLEVEL/NOFLEVEL               (load modules only)
                 IOERR/NOIOERR
                 LKED(Partl)                   (load modules only)
                 LKEDERR/NOLKEDERR             (load modules only)
                 LOADERR/NOLOADERR             (load modules only)
                 LOADONLY/NOLOADONLY           (load modules only)
                 LRECLERR/NOLRECLERR
                 MODULE(Partm)                 (load modules only)
                 NAMEERR/NONAMEERR
                 NULL/NONULL
                 ORPHAN/NOORPHAN
                 OVERLAY/NOOVERLAY             (load modules only)
                 PAGE/NOPAGE                   (load modules only)
                 REFR/NOREFR                   (load modules only)
                 RENT/NORENT                   (load modules only)
                 REUS/NOREUS                   (load modules only)
                 RLDERR/NORLDERR               (load modules only)
                 RLDZERO/NORLDZERO             (load modules only)
                 RMODE24/RMODEANY/
                         NORMODE24/NORMODEANY  (load modules only)
                 SCTR/NOSCTR                   (load modules only)
                 SPFEDIT/NOSPFEDIT
                 SSI/NOSSI
                 TEST/NOTEST                   (load modules only)
                 TRAN(Partt)                   (load modules only)
                 TTR(Lttr:Httr)
                 USER(Partu)                   (load modules only)
                 USERID(Puid)/NOUSERID/NOTUSERID(Puid)
                 VSLKED/NOVSLKED               (load modules only)
                 ZAP(Partz)                    (load modules only)
               THEN(ATTRIB/BROWSE/DIRENTRY/DELETE/EDIT/END/
                    FIND/FSE/HISTORY/LIST/MAP/MEMBERS/OUTCOPY/
                    PRINTOFF/REVIEW/SPFEDIT/SUBMIT/TSOLIST)
               ELSE(ATTRIB/BROWSE/DIRENTRY/DELETE/EDIT/END/
                    FIND/FSE/HISTORY/LIST/MAP/MEMBERS/OUTCOPY/
                    PRINTOFF/REVIEW/SPFEDIT/SUBMIT/TSOLIST)

 ALIASES  - I, IF
 DEFAULTS - member, THEN(ATTRIB) if neither THEN nor ELSE is entered
 REQUIRED - none
=O OPERANDS -
 member          - optional, specifies the name of the member(s) whose
                   attributes are to be examined.  Default member
                   names, member name ranges and member name patterns
                   are allowed; for more information, enter HELP GROUP.

  ABOVE(Count1)  - specifies that members with more than the number of
                   lines (amount of storage for load modules) defined
                   by the number, Count1, are desired.
  ALIAS          - specifies that alias members are desired.
  NOALIAS        - specifies that non-alias members are desired.
  AMODE24        - specifies that modules with addressing mode 24 are
                   desired.
  NOAMODE24      - specifies that modules with addressing mode 31 or
                   ANY are desired.
  AMODE31        - specifies that modules with addressing mode 31 are
                   desired.
  NOAMODE31      - specifies that modules with addressing mode 24 or
                   ANY are desired.
  AMODEANY       - specifies that modules with addressing mode ANY
                   are desired.
  NOAMODEANY     - specifies that modules with addressing mode 24 or
                   31 are desired.
  APFERR         - specifies that modules linked by the MVS OS/VS
                   linkage-editor with invalid APF length indicators
                   are desired.
  NOAPFERR       - specifies that modules linked by the MVS OS/VS
                   linkage-editor with valid APF length indicators
                   or modules linked with previous linkage-editors
                   are desired.
  APPARENTALIAS  - specifies that real members whose start addresses
                   match the start address of another real member
                   are desired.
  NOAPPARENTALIAS - specifies that alias members or real members whose
                   start addresses do not match the start address of
                   another real member are desired.
  AUTH           - specifies that APF authorized modules are desired.
  NOAUTH         - specifies that non-authorized modules are desired.
  BELOW(Count2)  - specifies that members with less than the number of
                   lines (amount of storage for load modules) defined
                   by the number, Count2, are desired.
  BLOCKERR       - specifies that members with input blocksizes
                   exceeding the DCB BLKSIZE are desired.
  NOBLOCKERR     - specifies that members without blocksize errors
                   are desired.
  DC             - specifies that downward-compatible modules are
                   desired.
  NODC           - specifies that no downward-compatible modules are
                   desired.
  EDIT           - specifies that modules which can be reprocessed
                   by the linkage-editor are desired.
  NOEDIT         - specifies that modules which can not be reprocessed
                   by the linkage-editor are desired.
  EXEC           - specifies that modules which are marked as
                   "executable" are desired.
  NOEXEC         - specifies that modules which are marked as
                   "not executable" are desired.
  FLEVEL         - specifies that modules processed by the
                   F-level linkage-editor are desired.
  NOFLEVEL       - specifies that modules not processed by the
                   F-level linkage-editor are desired.
  IOERR          - specifies that members with I/O errors are
                   desired.
  NOIOERR        - specifies that members without I/O errors are
                   desired.
  LKED(Partl)    - specifies that modules identified as linked by the
                   linkage-editor defined by the partial name, Partl,
                   are desired.  Partl may be entered as a partial
                   linkage-editor name with one to ten characters.
  LKEDERR        - specifies that modules with any of the following
                   illegal linkage-edit attribute combinations are
                   desired:
                     1.  Modules with RENT and NOREUS attributes
                     2.  Modules with RMODEANY and AMODE24 or
                         AMODEANY attributes
                     3.  Modules with OVLY and RENT, REUS, REFR, SCTR,
                         RMODEANY, AMODE31, or AMODEANY attributes
                     4.  Modules with TEST and NOEDIT attributes
                     5.  Modules with REUS and SCTR attributes
  NOLKEDERR      - specifies that modules with none of the following
                   illegal linkage-edit attribute combinations are
                   desired:
                     1.  Modules with RENT and NOREUS attributes
                     2.  Modules with RMODEANY and AMODE24 or
                         AMODEANY attributes
                     3.  Modules with OVLY and RENT, REUS, REFR, SCTR,
                         RMODEANY, AMODE31, or AMODEANY attributes
                     4.  Modules with TEST and NOEDIT attributes
                     5.  Modules with REUS and SCTR attributes
  LOADERR        - specifies that modules which cause ABENDS when
                   they are LOADED and DELETED are desired.
  NOLOADERR      - specifies that modules which can be LOADED and
                   DELETED without errors are desired.
  LOADONLY       - specifies that modules marked as "LOAD ONLY"
                   are desired.
  NOLOADONLY     - specifies that modules not marked as "LOAD ONLY"
                   are desired.
  LRECLERR       - specifies that members with any of the following
                   errors are desired:
                     a.  Input blocksize/LRECL not integral (RECFM=F)
                     b.  Input LRECL exceeding maximum LRECL (RECFM=V)
                     c.  Input LRECL less than 4 bytes (RECFM=V)
  NOLRECLERR     - specifies that members with none of the following
                   LRECL errors are desired:
                     a.  Input blocksize/LRECL not integral (RECFM=F)
                     b.  Input LRECL exceeding maximum LRECL (RECFM=V)
                     c.  Input LRECL less than 4 bytes (RECFM=V)
  MODULE(Partm)  - specifies that modules with CSECTS defined by the
                   partial name, Partm, are desired.  Partm may be
                   entered as a partial CSECT name with one to eight
                   characters.
                   Note that if MODULE(Partm) is entered, any TRAN,
                   USER or ZAP keywords apply only to CSECT's whose
                   names match the partial CSECT name, Partm.
  NAMEERR        - specifies that members whose member names are not
                   upper-case alphanumeric or whose first character
                   is numeric are desired.
  NONAMEERR      - specifies that members whose member names are
                   upper-case alphanumeric and whose first character
                   is not numeric are desired.
  NULL           - specifies that members with no data are desired.
  NONULL         - specifies that members with data are desired.
  ORPHAN         - specifies that alias members which have no
                   associated real member are desired.
  NOORPHAN       - specifies that real members or alias members which
                   have an associated real member are desired.
  OVERLAY        - specifies that modules marked as being
                   "in overlay" are desired.
  NOOVERLAY      - specifies that modules not marked as being
                   "in overlay" are desired.
  PAGE           - specifies that modules marked for loading on
                   a page boundary are desired.
  NOPAGE         - specifies that modules not marked for loading on
                   a page boundary are desired.
  REFR           - specifies that refreshable modules are desired.
  NOREFR         - specifies that non-refreshable modules are desired.
  RENT           - specifies that reentrant modules are desired.
  NORENT         - specifies that non-reentrant modules are desired.
  REUS           - specifies that reusable modules are desired.
  NOREUS         - specifies that non-reusable modules are desired.
  RLDERR         - specifies that modules linked since OS/VS whose
                   RLD/CONTROL count from the directory does not match
                   the first RLD entry are desired.
  NORLDERR       - specifies that modules whose RLD/CONTROL count
                   from the directory match the first RLD entry or
                   modules linked before OS/VS are desired.
  RLDZERO        - specifies that modules whose RLD/CONTROL count is
                   zero are desired.
  NORLDZERO      - specifies that modules whose RLD/CONTROL count is
                   not zero are desired.
  RMODE24        - specifies that modules with residence mode 24 are
                   desired.
  NORMODE24      - specifies that modules with residence mode ANY
                   are desired.
  RMODEANY       - specifies that modules with residence mode ANY
                   are desired.
  NORMODEANY     - specifies that modules with residence mode 24 are
                   desired.
  SCTR           - specifies that scatter-loaded modules are desired.
  NOSCTR         - specifies that no scatter-loaded modules are desired.
  SPFEDIT        - specifies that members which are currently in-use
                   by an SPF EDIT session are desired.
  NOSPFEDIT      - specifies that members which are not currently
                   in-use by an SPF EDIT session are desired.
  SSI            - specifies that members with SSI data are desired.
  NOSSI          - specifies that members without SSI data are desired.
  TEST           - specifies that modules with the "TEST" attribute
                   are desired.
  NOTEST         - specifies that modules without the "TEST" attribute
                   are desired.
  TRAN(Partt)    - specifies that modules with CSECTS identified as
                   having been assembled or compiled by the translator
                   defined by the partial name, Partt, are desired.
                   Partt may be entered as a partial translator name
                   with one to ten characters.
                   Note that if MODULE(Partm) is also entered, the
                   TRAN operand applies only to CSECT's whose names
                   match the partial CSECT name, Partm.
  TTR(Lttr:Httr) - specifies that members whose start address is in
                   the specified TTR range are desired.
                   Lttr defaults to 0 and may be entered as a
                   hexadecimal TTR value from 0 through FFFFFF.
                   Httr defaults to FFFFFF and may be entered as
                   a hexadecimal TTR value from 0 through FFFFFF.
  USER(Partu)    - specifies that modules with user IDR data which
                   matches the partial name, Partu, are desired.
                   Partu may be entered as partial IDR data with
                   one to eight characters.
                   Note that if MODULE(Partm) is also entered, the
                   USER operand applies only to CSECT's whose names
                   match the partial CSECT name, Partm.
  USERID(Puid)   - specifies that members with SPF statistics and
                   userids matching the partial name, Puid, are
                   desired.  Puid may be entered as a partial TSO
                   userid with one to seven characters.
  NOUSERID       - specifies that members without SPF statistics are
                   desired.
  NOTUSERID(Puid) - specifies that members without SPF statistics or
                   members with SPF statistics and userids which do
                   not match the partial name, Puid, are desired.
                   Puid may be entered as a partial TSO userid with
                   one to seven characters.
  VSLKED         - specifies that modules linked by the MVS OS/VS
                   linkage-editor are desired.
  NOVSLKED       - specifies that modules not linked by the MVS OS/VS
                   linkage-editor are desired.
  ZAP(Partz)     - specifies that modules with zap IDR data which
                   matches the partial name, Partz, are desired.
                   Partz may be entered as partial zap IDR data with
                   one to eight characters.
                   Note that if MODULE(Partm) is also entered, the
                   ZAP operand applies only to CSECT's whose names
                   match the partial CSECT name, Partm.
  THEN(action)   - The THEN subcommand is executed if all conditions
                   are true for a member.  The subcommand may be
                   ATTRIB, BROWSE, DIRENTRY, DELETE, EDIT, END,
                   FIND, FSE, HISTORY, LIST, MAP, MEMBERS, OUTCOPY,
                   PRINTOFF, REVIEW, SPFEDIT, SUBMIT or TSOLIST.

                   Note that if neither a THEN nor an ELSE operand is
                   entered, THEN(ATTRIB) is the default condition.
  ELSE(action)   - The ELSE subcommand is executed if any condition is
                   not true for a member.  The subcommand may be
                   ATTRIB, BROWSE, DIRENTRY, DELETE, EDIT, END,
                   FIND, FSE, HISTORY, LIST, MAP, MEMBERS, OUTCOPY,
                   PRINTOFF, REVIEW, SPFEDIT, SUBMIT or TSOLIST.

                   Note that if neither a THEN nor an ELSE operand is
                   entered, THEN(ATTRIB) is the default condition.
=LIST=L=LI=LIS
=F  The LIST subcommand displays data from a member.

 Unprintable characters for 3270-type devices are translated to periods
 before they are displayed.

 The LIST formats are NUM, SNUM, NONUM, LBLOCK, LDUMP, BLOCK and DUMP;
 for load modules, the NUM, SNUM and NONUM formats are equivalent
 to the LDUMP format.

 The default format is initially NUM; however, each time a format
 operand is entered on a LIST or FIND subcommand, the value entered is
 used as the output format for subsequent LIST and FIND subcommands.
 Also, note the following:
   A. Formats NUM, SNUM and NONUM limit the display length for logical
      records to 256 characters.
   B. Formats BLOCK and DUMP apply to physical records; the other
      formats apply to logical records; and for load modules, LBLOCK
      and LDUMP formats apply to CSECT data.
=X SYNTAX -
     LIST  member NUM/SNUM/NONUM/LBLOCK/LDUMP/BLOCK/DUMP
                  OFFSET(Hx) MODULE(Partm)
                  SKIPREC(n) MAXIN(n) MAXOUT(n)
                  SKIPCOL(n) MAXLEN(n)

 ALIASES  - L, LI, LIS, LIST
 DEFAULTS - member, NUM or previous LIST/FIND format
 REQUIRED - none.
=O OPERANDS -
 member      -  optional, specifies the name of the member(s) to be
                listed.  Default member names, member name ranges and
                member name patterns are allowed; for more information,
                enter HELP GROUP.

 LIST format keywords are as follows:
  NUM        -  The line number field (the last 8 bytes of a fixed-
                format record or the first 8 bytes otherwise) of
                each logical record is examined; if the field is not
                numeric, formatting is switched to NONUM mode for the
                remainder of the member.

                For SPF-saved members, the high-order six digits of
                the line number field is formatted; otherwise, the
                low-order six digits of the line number field is
                formatted by suppressing leading zeroes.  The line
                number segment is followed by a blank and up to 249
                characters of data from a logical record.
  SNUM       -  The line number field (the last 8 bytes for a fixed-
                format record or the first 8 otherwise) is discarded.
                Up to 256 bytes from a logical record are displayed.
  NONUM      -  Up to 256 bytes from a logical record are displayed.
  LBLOCK     -  Logical records are formatted with two hexadecimal
                offsets (displacement in the member and displacement
                in the logical record) and segments of 64 characters
                surrounded by asterisks.

                Note: for load modules, only CSECT data will be
                displayed and if the partial name Partm is entered
                in a MODULE operand, only those CSECT or ENTRY names
                matching Partm will be displayed.  CSECT records
                are formatted with two hexadecimal offsets (a module
                offset and a CSECT offset) and segments of 64
                characters surrounded by asterisks.
  LDUMP      -  Logical records are formatted with two hexadecimal
                offsets (displacement in the member and displacement
                in the logical record), segments of up to 32
                characters of hexadecimal data and up to 16 bytes of
                equivalent characters surrounded by asterisks.

                Note: for load modules, only CSECT data will be
                displayed and if the partial name Partm is entered in
                a MODULE operand, only those CSECT or ENTRY names
                matching Partm will be displayed.  CSECT records are
                formatted with two hexadecimal offsets (a module offset
                and a CSECT offset), segments of up to 32 characters of
                hexadecimal data and up to 16 bytes of characters
                surrounded by asterisks.
  BLOCK      -  Physical records are formatted with two hexadecimal
                offsets (displacement in the member and displacement
                in the physical record) and segments of 64 characters
                surrounded by asterisks.
  DUMP       -  Physical records are formatted with two hexadecimal
                offsets (displacement in the member and displacement
                in the physical record), segments of up to 32
                characters of hexadecimal data and up to 16 bytes of
                equivalent characters surrounded by asterisks.
 LIST control keywords are as follows:
  OFFSET(Hx)  - for LBLOCK and LDUMP formats only; Hx may be entered
                as a 1 to six digit hexadecimal number to specify
                the module offset at which the display is to begin.
  MODULE(Partm)-for LBLOCK or LDUMP formats only; Partm may be entered
                as a 1 to 8 byte partial external name to limit the
                CSECT or ENTRY names to be displayed to those matching
                the partial name Partm.
  SKIPREC(n)  - n is coded as 0 through 9999999 to specify the number
                of logical records (physical records for BLOCK or
                DUMP formats) to ignore at the beginning of a member.
  MAXIN(n)    - n is coded as 0 through 9999999 to specify the maximum
                number of logical records (physical records for BLOCK
                or DUMP formats) to input for a member after
                satisfying any SKIPREC operand.
  MAXOUT(n)   - n is coded as 0 through 9999999 to specify the maximum
                number of logical records (physical records for BLOCK
                or DUMP formats) to output for a member.
  SKIPCOL(n)  - n is coded as 0 through 99999 to specify the number
                of columns to ignore at the beginning of each logical
                record (physical record for BLOCK or DUMP formats).

                Note:  for NUM or SNUM output format with OS/VS record
                format V, SKIPCOL(0) positions the data formatter to
                the first data position after the line number field.
  MAXLEN(n)   - n is coded as 0 through 99999 to specify the maximum
                length of a logical record (physical record for BLOCK
                or DUMP formats) to display.
=MAP=M=MA
=F  The MAP subcommand lists the CSECT structure of a load module.
 This map is similar in nature to the output produced by the MAP
 option of the linkage-editor.

 The name of the module entry point is displayed in the map summary
 information.  Note that if a mapped module is an alias, the MAP
 subcommand will display the name of the corresponding real module if
 the FULL operand is entered or defaulted to unless CONTROL NOALIASINFO
 is in effect.
=X SYNTAX -
     MAP  member  FULL/SHORT/ENTRY  MODULE(Partm)

 ALIASES  - M, MA, MAP
 DEFAULTS - member, FULL
 REQUIRED - none.
=O OPERANDS -
 member          - optional, specifies the name of the load module(s)
                   for which a module MAP is to be produced.  Default
                   member names, member name ranges and member name
                   patterns are allowed; for more information, enter
                   HELP GROUP.

  FULL           - a full CSECT map is to be provided
  SHORT          - a CSECT map with all CSECTS but no entries within
                   CSECTS is to be provided; also, no alias information
                   is to be provided.
  ENTRY          - only the ENTRY point symbol is to be mapped;
                   also, no alias information is to be provided.
  MODULE(Partm)  - specifies that CSECTS defined by the partial name,
                   Partm, are to be listed. Partm may be entered as a
                   partial CSECT name with one to eight characters.
=MEMBERS=ME=MEM=MEMB=MEMBE=MEMBER
=F    The MEMBERS subcommand lists member names from the data set
   directory.  Only those member names in the specified member group
   are displayed.

   Note that the MEMBERS subcommand may be used to check member names
   in a given group before invoking another subcommand which processes
   member groups.

   Note that -A is added following a displayed member name if the
   member name is an alias.  The member name is listed in a combined
   hexadecimal/character format if it does not contain upper-case
   alphanumeric characters (including @, $ and #) or if the first
   character is numeric.  Unprintable characters (for 3270-type
   devices) in a member name are displayed as periods.
=X SYNTAX -
     MEMBERS  memgroup

 ALIASES  - ME, MEM, MEMB, MEMBE, MEMBER, MEMBERS
 DEFAULTS - memgroup
 REQUIRED - none.
=O OPERANDS -
 memgroup - optional, specifies the group of members whose names
            are to be displayed.  Default member names, member name
            ranges and member name patterns are allowed; for more
            information, enter HELP GROUP.
=OPTIONS=O=OP=OPT=OPTI=OPTIO=OPTION
=F  The OPTIONS subcommand displays the subcommands (or options)
 supported by the PDS command. Note that this display varies
 when a non-partitioned data set is being processed.
=X SYNTAX -
     OPTIONS

 ALIASES  - O, OP, OPT, OPTI, OPTIO, OPTION, OPTIONS
=O OPERANDS -
 no operands are supported.
=OUTCOPY=OU=OUT=OUTC=OUTCO=OUTCOP
=F   The OUTCOPY subcommand formats utility control statements
  which can be used by IEBCOPY to select members from a data set.

  OUTCOPY usage notes:
   A.  Output is directed to DDNAME PDSOUT.
   B.  PDSOUT must be allocated to a sequential data set or to a
       member of a partitioned data set with fixed, 80 character
       records prior to entering the first OUTCOPY subcommand.
   C.  For new data sets, the default DCB attributes of
       DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)  will be used.
   D.  An IEBCOPY COPY statement is written after opening PDSOUT
       initially and after each CHANGE subcommand; the statement
       is of the form:
       COPY  OUTDD=OUTPUT,INDD=xxx
       where xxx is the low-level qualifier of the input data set name.
   E.  Each IEBCOPY select statement is of the form:
       S M=memname ,memname))
       Note -- memname is the member name; this format output statement
       can be modified by an editor if member rename or member replace
       functions are to be performed.
   F.  OUTCOPY maintains a list of member names written after each
       copy statement and does not output a member name more than once.
   G.  A CLIST such as the following could be established for IEBCOPY
       use:
        PROC 3 FROMDSN FROMQUAL TODSN CONTROLS(PDSOUT.CNTL)
        ALLOC F(SYSIN) DA(&CONTROLS.) SHR
        ALLOC F(SYSPRINT) DA(*)
        ALLOC F(&FROMQUAL.) DA(&FROMDSN.) SHR
        ALLOC F(OUTPUT) DA(&TODSN.) OLD
        CALL 'SYS1.LINKLIB(IEBCOPY)'

   H.  Assuming that OUTCOPY has created output in PDSOUT.CNTL, you
       could copy selected members from your LIB.LOAD data set to
       'SYS1.LINKLIB2', by entering the following line from
       READY mode:
       %copyout lib.load load 'sys1.linklib2'

=X SYNTAX -
     OUTCOPY  member   ECHO/NOECHO  CLOSE/NOCLOSE

 ALIASES  - OU, OUT, OUTC, OUTCO, OUTCOP, OUTCOPY
 DEFAULTS - member, previous ECHO/NOECHO, NOCLOSE
 REQUIRED - none.
=O OPERANDS -
 member     - optional, specifies the member name(s) to be output on
              an IEBCOPY format SELECT statement.  Default member
              names, member name ranges and member name patterns are
              allowed; for more information, enter HELP GROUP.

  ECHO      - Each IEBCOPY statement is to be written to the terminal
              as well as to the PDSOUT data set.
  NOECHO    - IEBCOPY statements are to be written to the PDSOUT
              data set only.
  CLOSE     - The PDSOUT file is to be closed.  Note: the member or
              member group specified with the close operand is not
              output to the PDSOUT file.
  NOCLOSE   - The PDSOUT data set is to be opened or to stay open.
=PATTERN=P=PA=PAT=PATT=PATTE=PATTER
=F    The PATTERN subcommand lists member names from the data set
   directory.  Only those member names which contain the PATTERN
   name segments specified are displayed.  Note that the default
   member group is not affected by the DISPLAY or PATTERN subcommands.

   One or two member name segments may be entered as patterns.  If two
   segments are entered, both segments must occur in a member name for
   it to be displayed.  For example, with the pattern segments xx and
   1x, members named M1X4XX, M1XX and XX1X would be displayed by this
   subcommand while members named X1X or MXX13X would not be displayed.

   Note that -A is added following a displayed member name if the
   member name is an alias.  The member name is listed in a combined
   hexadecimal/character format if it does not contain upper-case
   alphanumeric characters (including @, $ and #) or if the first
   character is numeric.  Unprintable characters (for 3270-type
   devices) in a member name are displayed as periods.
=X SYNTAX -
     PATTERN  segment1 segment2

 ALIASES  - P, PA, PAT, PATT, PATTE, PATTER, PATTERN
 DEFAULTS - previously entered segment1 and segment2 operands
 REQUIRED - none.
=O OPERANDS -
 segment1 - optional, specifies a name segment which must be found
            in a member name for the member name to be displayed.

            Note: a range or pattern member descriptor such as
            part1:part2 or seg1/seg2 may be entered for segment1,
            in which case, the output will consist of the member
            names which would be displayed by the MEMBERS subcommand.

 segment2 - optional, specifies a second name segment which must
            also be found in a member name for the member name to
            be displayed.
=PRINTOFF=PRINTOF=PRINTO=PRINT=PRIN=PRI=PR
=F    The PRINTOFF subcommand prints a hardcopy list of a member.  The
   TSO PRINTOFF command is used; any desired PRINTOFF operands may
   be added after the member name.
=X SYNTAX -
     PRINTOFF  member operands

 ALIASES  - PR, PRI, PRIN, PRINT, PRINTO, PRINTOF, PRINTOFF
 DEFAULTS - member
 REQUIRED - none.
=O OPERANDS -
 member   -  optional, specifies the member name(s) to be passed
             (along with the data set name) to the TSO PRINTOFF
             command.  Default member names, member name ranges and
             member name patterns are allowed; for more information,
             enter HELP GROUP.

 operands -  optional, may include any desired TSO PRINTOFF operands.
=RECALL=R=RE=REC=RECA=RECAL
=F   The RECALL subcommand displays the previous subcommand or
  displays and reenters the previous subcommand for execution.
=X SYNTAX -
     RECALL  ENTER/NOENTER

 ALIASES  - R, RE, REC, RECA, RECAL, RECALL
 DEFAULTS - NOENTER
 REQUIRED - none.
=O OPERANDS -

  ENTER     - the previous subcommand is to be displayed and
              reentered for execution.
  NOENTER   - the previous subcommand is to be displayed.
=RENAME=REN=RENA=RENAM
=F   The RENAME subcommand updates a member's name.

  If a non-alias load module is renamed, any associated alias
  directory entries will be updated to reflect the new base module
  name unless CONTROL NOUPDATEALIAS is in effect.

  Note: if a non-alias load module is renamed to itself, any
  associated alias entries will be checked and updated as needed
  unless CONTROL NOUPDATEALIAS is in effect.

  Caution: this subcommand modifies the data set. To ensure data set
  integrity, you should allocate the data set as OLD or be aware of
  the data set update protection provided by the PDS command for
  SHR allocations (for details, enter HELP UPDATE).
=X SYNTAX -
     RENAME  curname newname   SWAP/NOSWAP  GROUP/NOGROUP

 ALIASES  - REN, RENA, RENAM, RENAME
 DEFAULTS - NOSWAP, NOGROUP
 REQUIRED - curname, newname
=O OPERANDS -
 curname  - specifies the current name of the member.

 newname  - specifies the new name for the member.  Note that this
            new name becomes the PDS default member name.

  SWAP    - the members named are to exchange directory entries.
  NOSWAP  - no member name exchange is to be performed.
  GROUP   - specifies that a group rename is to be performed.  The
            range of names affected is defined by the first operand
            and the first portion of the resulting name is defined
            by the second operand.

            For example, if  RENAME XYZ ABCD GROUP  were entered,
            all members beginning XYZ... would be renamed to ABCD..
              1.  With the statement, RENAME IEB ABCD GROUP,
                  a member named IEB12 would be assigned the
                  name ABCD2
              2.  With the statement, RENAME IEB OX GROUP,
                  a member named IEB12 would be assigned the
                  name OXB12

  NOGROUP - only the member specifically identified is to be renamed.
=RESTORE=RES=REST=RESTO=RESTOR
=F   The RESTORE subcommand resurrects a deleted member at the given
  TTR address.  Note that deleted members remain in a partitioned data
  set until the data set is compressed.

  The LIKE operand of RESTORE can assign SSI information to a restored
  member based on a model member or it can copy SPF statistics to
  non-load members.

  The attributes authorized, not editable, not executable, only
  loadable, page boundary, reentrant, refreshable and reusable can
  not be determined from load module records; however, these attributes
  can be assigned based on a model member with the LIKE operand or they
  may be selectively assigned with the ATTRIB subcommand.

  If the data set is a load library, then if the member name is an
  imbedded external name within the load module, that external name
  will be used as the entry point; otherwise, the first CSECT in the
  load module will be used as the entry point.

  Caution: this subcommand modifies the data set. To ensure data set
  integrity, you should allocate the data set as OLD or be aware of
  the data set update protection provided by the PDS command for
  SHR allocations (for details, enter HELP UPDATE).
=X SYNTAX -
     RESTORE  member ttr   REPEAT/NOREPEAT
                          DISPLAY/NODISPLAY
                           PROMPT/NOPROMPT
                           LIKE(xyz)

 ALIASES  - RES, REST, RESTO, RESTOR, RESTORE
 DEFAULTS - no operands, NOREPEAT, NODISPLAY, NOPROMPT
            REPEAT,  implies DISPLAY
            PROMPT,  implies DISPLAY
 REQUIRED - member, ttr address
=O OPERANDS -
 member     - specifies the name of the member to be resurrected.
              This member name becomes the default member name.

 ttr        - one to six hexadecimal digits which provide the relative
              track address for the deleted member; or if REPEAT,
              DISPLAY or PROMPT are specified, it specifies the start
              relative address for a deleted member search.

  REPEAT    - multiple deleted members at or following the provided
              TTR address may be restored.
              The member name to be used is taken from the partial
              member name entered filled to eight characters by a
              sequential count field.  For example, if the partial
              member name is GASM the successive restored member
              names will be GASM0001, GASM0002, GASM0003, ...
  NOREPEAT  - at most one member is to be restored.
  DISPLAY   - data from deleted members is to be displayed.
  NODISPLAY - no data from deleted members is to be displayed.
  PROMPT    - a YES response to a program prompt is to be required
              before restoring a deleted member.
  NOPROMPT  - no program prompting is to be performed before
              restoring a deleted member.
  LIKE(xyz) - For load modules, the following attributes are to be
              set based on their corresponding values in member XYZ:
              AMODE, authorized, editable, executable, only loadable,
              page aligned, reentrant, refreshable, reusable, RMODE,
              and SSI.
              For other members, a SSI value or SPF statistics are
              to be set based on member XYZ.
=REVIEW=REVIE=REVI=REV
=F    The REVIEW subcommand browses data.  The TSO REVIEW command
   is used; any desired REVIEW operands may be added after the
   member name.
=X SYNTAX -
     REVIEW  member operands

 ALIASES  - REV, REVI, REVIE, REVIEW
 DEFAULTS - member
 REQUIRED - none.
=O OPERANDS -
 member   -  optional, specifies the member name(s) to be passed
             (along with the data set name) to the TSO REVIEW
             command.  Default member names, member name ranges and
             member name patterns are allowed; for more information,
             enter HELP GROUP.

 operands -  optional, may include any desired TSO REVIEW operands.
=SPFEDIT=SPFEDI=SPFED=SPFE=SPF=SP=S
=F    The SPFEDIT subcommand enters SPF edit for a member (for
  additional information on the relationship of PDS and SPF edit,
  enter HELP DIALOG).
=X SYNTAX -
     SPFEDIT  member  OLD/NEW

 ALIASES  - S, SP, SPF, SPFE, SPFED, SPFEDI, SPFEDIT
 DEFAULTS - member
 REQUIRED - none.
=O OPERANDS -
 member   -    optional, specifies the name of the member(s) to be
               edited.  Default member names, member name ranges and
               member name patterns are allowed; for more information,
               enter HELP GROUP.

               Note: if : is entered for the member name position, SPF
               will be requested to provide a member selection screen.
  OLD     -    PDS will verify that the member exists before
               invoking SPF EDIT service.
  NEW     -    PDS will verify that the member does not exist
               before invoking SPF EDIT service.
=SUBMIT=SU=SUB=SUBM=SUBMI
=F  The SUBMIT subcommand submits a JCL member.  The TSO SUBMIT
 command is used; any desired SUBMIT operands may be specified
 after the member name.
=X SYNTAX -
     SUBMIT  member operands

 ALIASES  - SU, SUB, SUBM, SUBMI, SUBMIT
 DEFAULTS - member
 REQUIRED - none.
=O OPERANDS -
  member  -  optional, specifies the member name(s) to be passed
             (along with the data set name) to the TSO SUBMIT command.
             Default member names, member name ranges and member
             name patterns are allowed; for more information, enter
             HELP GROUP.

  operands - optional, may include any desired TSO SUBMIT operands.
=TSO=TS=T
=F    The TSO subcommand may be used to invoke a TSO command
   processor.  Any desired operands may be specified after the TSO
   command processor name.
=X SYNTAX -
     TSO  command operands

 ALIASES  - T, TS, TSO
 DEFAULTS - none.
 REQUIRED - command
=O OPERANDS -
 command  -    specifies the command processor to be given control.

 operands -    optional, may include any desired operands.
=TSOLIST=TSOLIS=TSOLI=TSOL
=F    The TSOLIST subcommand lists a member.  The TSO LIST command is
   used; any desired LIST operands may be specified after the member
   name.
=X SYNTAX -
     TSOLIST  member operands

 ALIASES  - TSOL, TSOLI, TSOLIS, TSOLIST
 DEFAULTS - member
 REQUIRED - none.
=O OPERANDS -
 member   -    optional, specifies the member name(s) to be passed
               (along with the data set name) to the TSO LIST command.
               Default member names, member name ranges and member
               name patterns are allowed; for more information, enter
               HELP GROUP.

 operands -    optional, may include any desired TSO LIST operands.
=USAGE=U=US=USA=USAG
=F  The USAGE subcommand displays statistics on the current data set.

 In addition, the USAGE subcommand displays the allocated DDNAME, data
 set name, data set disposition, DCB subparameters (RECFM, LRECL and
 BLKSIZE), and the disk volume name and unit in a pseudo-JCL format.

 The statistics displayed include:
   the number of directory blocks allocated
   the number of directory blocks currently in use
   the number of disk storage tracks used by the directory
   the maximum number of member entries in a directory block
   the number of members in the directory
   the number of member names which are alias names
   the number of disk storage tracks allocated
   the number of disk storage tracks currently not in use
   the number of disk storage extents required for the data set
=X SYNTAX -
     USAGE

 ALIASES  - U, US, USA, USAG, USAGE
=O OPERANDS -
   no operands are supported
=VERIFY=V=VE=VER=VERI=VERIF
=F  The VERIFY subcommand validity checks partitioned data sets in the
 following manner:
  A.  Optionally, a dummy member is added and deleted to determine
      if the data set directory is full and if normal PDS functions
      are possible.
  B.  The data set directory is read, member names are placed into
      a program table in TTR sort order and the following checks
      are performed:
      1.  If NAME is in effect, member names are checked for
          non upper-case alphanumeric characters or a numeric
          first character.
      2.  If the data set is a load library, the following illegal
          linkage-editor attribute combinations are checked for:
          a.  Modules with RENT and NOREUS attributes
          b.  Modules with RMODEANY and AMODE24 or AMODEANY attributes
          c.  Modules with OVLY and RENT, REUS, REFR, SCTR, RMODEANY,
              AMODE31, or AMODEANY attributes
          d.  Modules with TEST and NOEDIT attributes
          e.  Modules with REUS and SCTR attributes
      3.  If LOAD is in effect and the data set is a load library,
          each member is checked for ABENDS as it is LOADED and
          DELETED.
      4.  Each member is checked for current usage by an SPF EDIT
          session.
      5.  Member directory entries are sequence checked by name.
      6.  Each member's TTR address is checked against the end of
          the data set.
  C.  The program TTR table is checked for the following:
      1.  Orphan members (aliases with no associated real member).
      2.  Apparent alias members (real members whose start address
          matches another real member's start address).
      3.  Alias load modules whose directory pointers to associated
          real members are incorrect.
      4.  Alias load modules whose RMODE entries or main AMODE entries
          do not match their base module's entries.
  D.  If READ or INPUT is in effect, the directory and each member
      is read checking for:
      1.  Permanent I/O errors
      2.  Input blocksizes exceeding the DCB BLKSIZE
      3.  Input blocksizes/LRECL not an integral if RECFM=F
      4.  Input LRECLs exceeding DCB LRECL if RECFM=V
      5.  Input LRECLs less than four bytes if RECFM=V
      6.  Null members
      7.  Directory RLD/CONTROL counts for modules linked since
          OS/VS which do not match the first RLD entry
  E.  Informational messages regarding the data set are provided.

 The VERIFY subcommand validity checks sequential data sets in the
 following manner:
  A.  The data set is checked for current usage by an SPF EDIT session.
  B.  If READ or INPUT is in effect, the data set is read checking for:
      1.  Permanent I/O errors
      2.  Input blocksizes exceeding the DCB BLKSIZE
      3.  Input blocksizes/LRECL not an integral if RECFM=F
      4.  Input LRECLs exceeding DCB LRECL if RECFM=V
      5.  Input LRECLs less than four bytes if RECFM=V
  C.  Informational messages regarding the data set are provided.
=X SYNTAX -
     VERIFY  LOAD   /  NOLOAD
             NAME   /  NONAME
             INPUT  /  NOINPUT    or    READ / NOREAD
             UPDATE /  NOUPDATE

 ALIASES  - V, VE, VER, VERI, VERIF, VERIFY
 DEFAULTS - LOAD, NAME, INPUT, UPDATE
 REQUIRED - none.
=O OPERANDS -

  LOAD      -  For load libraries, each member is to be LOADED and
               DELETED.
  NOLOAD    -  No members are to be LOADED and DELETED.
  NAME      -  Each member is to be checked for valid member names.
               Valid member names are from one to eight characters
               long containing upper case alphanumeric characters
               and the first character is not numeric.
  NONAME    -  No members are to be checked for valid member names.
  INPUT     -  Each member (or the data set) is to be input.
  NOINPUT   -  No members (nor the data set) are to be input.
  READ      -  Each member (or the data set) is to be input.
  NOREAD    -  No members (nor the data set) are to be input.
  UPDATE    -  A dummy member will be added to the data set to
               determine if the PDS directory is full and if normal
               PDS operations are possible on the data set.
  NOUPDATE  -  No data set modifications are to be made.
=ABEND=ABEN=ABE=AB=ESTAE=ESTAI=STAE
=F  The ABEND HELP entry is provided to explain ABEND processing
 performed by PDS. PDS attempts to recover from ABENDS with
 its ESTAE and ESTAI recovery routines unless CONTROL NORECOVER is
 in effect.


 In the following, the ABEND processing provided by PDS is
 described in more detail:

  A.  The PDS program uses different recovery routines depending
      on the subcommand being executed.  The routine used will
      perform any cleanup and initialization functions required to
      restart PDS.

  B.  For internal PDS subcommands, recovery is performed by
      writing an error message and ignoring the subcommand.

  C.  For the external subcommands SPFEDIT or BROWSE, no ESTAE
      recovery is attempted.

  D.  For the other external PDS subcommands (EDIT, EXEC, FSE,
      HELP, PRINTOFF, REVIEW, SUBMIT, TSO xxx, and TSOLIST), the
      subcommand processor is forcibly detached.

  E.  Certain external programs reached via the TSO subcommand (such
      as CALL) will terminate PDS with a "READY" message if the
      program they invoke ABENDS.  Note, however, that if a null line
      is entered at this point, PDS will regain control.
=X SYNTAX - none.
=O OPERANDS - none.
=ATTN=PA1=ATTE=ATTEN=ATTENT=ATTENTI=ATTENTIO
=F  The ATTN HELP entry is provided to explain the attention processing
 performed by PDS. In general, an attention (the PA1 key) may be
 used to terminate the current PDS subcommand and two attentions
 in a row may be used to terminate the PDS command.


 In the following, the attention processing provided by PDS is
 described in more detail:

  A.  An single (double for EDIT) attention should terminate any
      member group in progress (except for the FSE subcommand).

  B.  An attention at a prompt for a data set should terminate PDS.

  C.  An attention at the normal ENTER OPTION subcommand prompt
      should provide another ENTER OPTION prompt; another attention
      at this point should terminate PDS.

  D.  For subcommands SPFEDIT or BROWSE, no ENTER OPTION prompt
      is provided by PDS's attention handling:
       a.  A single attention should terminate any member group in
           progress.
       b.  Any additional attentions should be ignored by PDS.
       c.  For TSO commands invoked by SPF with no attention
           handling:  the first attention is noted by PDS and it
           will terminate any member group in progress; subsequent
           attentions apply only to the TSO command.

  E.  For other PDS subcommands, an single (double for EDIT)
      attention should result in an ENTER OPTION prompt; the
      processing action taken at this point depends on what is
      entered next:
       1.  Another attention should terminate the PDS command.
       2.  A null line should cause the interrupted subcommand to
           continue at the point of interruption.  Note: any messages
           awaiting output at the time of the interrupt will be lost.
       3.  If a subcommand is entered and the currently executing
           subcommand is external to PDS (EDIT, EXEC, FSE, HELP,
           PRINTOFF, REVIEW, SUBMIT, TSO xxx, or TSOLIST), the
           command processor should be forcibly detached and the
           ABEND message should be suppressed.
       4.  An entered subcommand should be given control without delay.

  F.  If an internal PDS subcommand is in a loop that does not
      involve input or output to the terminal or input from the current
      data set, a single attention will not terminate the loop:
       1.  The first attention will provide the normal ENTER OPTION
           prompt.
       2.  If a subcommand is entered at this time, PDS will
           continue looping.
       3.  Another attention will produce the message
           "WARNING: POSSIBLE PROGRAM LOOP" and PDS will perform
           the subcommand entered at the ENTER OPTION prompt.
=X SYNTAX - none.
=O OPERANDS - none.
=DEFINE=DEF=DEFI=DEFIN
=F  The DEFINE HELP entry is provided to explain terminology used
 in the PDS program and in its documentation:

 PDS or Partitioned Data Set - a data set with fixed, variable or
 undefined format which is commonly used as a "library" for related
 types of information.  Partitioned data sets contain two segments
 of data: a directory of information and member data.

 PDS directory -  a segment of a PDS which is a sequential data set
 with eight byte keys and 256 byte data records containing pointers
 to data in the PDS member portion of the data set.

 PDS member data - a segment of a PDS which contains current members
 (which are pointed to by one or more directory entries) and inactive
 or deleted members (which have no associated directory entries).

 PDS directory entry - a logical entry in a PDS directory which points
 to its associated data in the member data; it consists of an eight
 character member name field and at least one three character relative
 address field.

 Load library -  a partitioned data set which has record format U, UA
 or UM and is commonly used to contain executable modules.

 Member -  data in a partitioned data set (or PDS) which is pointed
 to by one or more PDS directory entries.

 Load module -  a member contained in a load library.

 Alias member -  a directory entry with a indicator value which
 indicates that the member entry is an alternate name for another
 member; a real member and its aliases are associated with the
 same recorded data in the PDS.

 Real member -  a non-alias directory entry and its associated
 recorded data.

 Orphan member - an member marked as an alias which does not have
 an associated real member.

 Deleted member -  member data which is not pointed to by any
 directory entry; deleted members remain in a PDS until the
 data set is compressed.

 Apparent alias member -  data in a partitioned data set which is
 pointed to by more than one real PDS directory entry.
=X SYNTAX - none.
=O OPERANDS - none.
=DIALOG=DIA=DIAL=DIALO
=F  The DIALOG HELP entry is provided to explain the processing
 relationships of SPF and PDS.


 PDS is a TSO command processor and can gain control in any of the
 following modes:

 A.  From READY mode:
     When the first BROWSE or SPFEDIT subcommand is entered, PDS
     calls an SPF interface which invokes PDS recursively as an
     SPF dialog; SPF services are then directly invoked for each
     subsequent SPFEDIT or BROWSE subcommand.

 B.  From SPF option 6 or the TSO subcommand of ISPF:
     SPF edit or browse services can not be used; this restriction may
     be removed in future versions of ISPF.

 C.  From another TSO command processor:
     If an SPF environment has been established by an earlier command
     processor, SPF edit or browse services can not be used; otherwise,
     when the first BROWSE or SPFEDIT subcommand is entered, PDS
     calls an SPF interface which invokes PDS recursively as an
     SPF dialog; SPF services are then directly invoked for each
     subsequent SPFEDIT or BROWSE subcommand.

 D.  From the PDSSEL panel in SPF:
     PDS is invoked as an SPF dialog; PDS locates and creates
     the required command processor control blocks and can invoke SPF
     edit and browse services directly.
=X SYNTAX - none.
=O OPERANDS - none.
=GROUPS=G=GR=GRO=GROU=GROUP=GROUP.
=F  The GROUP HELP entry is provided to explain the various member
 name forms allowed.  Member names may be entered in either character
 or hexadecimal mode for any subcommand which processes member names.

 Character member names may be from one to eight bytes long with no
 imbedded blanks, commas, parentheses, colons or slashes.

 Hexadecimal member names may contain from one to sixteen hexadecimal
 digits delimited by x' and '.  X'd7c4e2f9' and PDS9 are entirely
 equivalent; also, x'333' and x'0333' are equivalent.


 Subcommands ATTRIB, BROWSE, DELETE, DIRENTRY, EDIT, FIND, FSE, IF,
 HISTORY, LIST, MAP, MEMBERS, OUTCOPY, PRINTOFF, REVIEW, SPFEDIT,
 SUBMIT AND  TSOLIST allow additional member name specifications.
 A member name range or member name pattern specifies what is
 termed a member group.

 When a member group is being processed, the subcommand processing
 routine is re-executed for each member in the group.  Specifically,
 note the following:

  A.  Default member name -- if no member name is specified, the
      last member name or member group entered for any of the above
      subcommands will be assumed.

  B.  Asterisk member name -- if * is entered in the member name
      position, the last member name or member group entered for
      any of the above subcommands will be assumed.

  C.  Member name range -- any of these subcommands may process all
      members in a range by specifying a beginning partial member
      name, a colon, and a ending partial member name (either or
      both of the partial names may be null).

      Logic from the DISPLAY subcommand is used to select members;
      the subcommand processes these selected members in alphabetic
      order.  The following specifications would process the same
      member names:
            subcommand  :              and    DISPLAY
            subcommand  part1:         and    DISPLAY  part1
            subcommand  :part2         and    DISPLAY  x'00' part2
            subcommand  part1:part2    and    DISPLAY  part1 part2

  D.  Member name pattern -- any of these subcommands may process all
      members whose names contain pattern characters by specifying a
      member name segment, a slash, and another member name segment
      (either, not both, of the member name segments may be null).

      Logic from the PATTERN subcommand is used to select members;
      the subcommand processes these selected members in alphabetic
      order.  The following specifications would process the same
      member names:
            subcommand  seg1/          and    PATTERN  seg1
            subcommand  /seg2          and    PATTERN  seg2
            subcommand  seg1/seg2      and    PATTERN  seg1 seg2

  E.  Member name display subcommands -- MEMBERS, PATTERN and DISPLAY
      allow the display of member groups using the above member group
      syntax; however, these subcommands differ as follows:
       1.  DISPLAY -- can not modify the current member group;
           if no member specification is entered, the entire
           member directory is displayed.
       2.  PATTERN -- can not modify the current member group;
           if no member specification is entered, the member group
           last entered on a PATTERN subcommand is displayed.
       3.  MEMBERS -- can modify the current member group;
           if no member specification is entered, the current
           member group is displayed.
=X SYNTAX - none.
=O OPERANDS - none.
=UPDATE=UP=UPD=UPDA=UPDAT=SHR=SH
=F  The UPDATE HELP entry is provided to explain the update data
 set protection implemented for certain PDS subcommands.

 If the data set is allocated as OLD, the STOW DCB is left open after
 the first data set update.  For OLD allocations, exclusive use of the
 data set is assured and the following does not apply.

 If the data set is allocated as SHR (SHR was specifically requested
 or SHR was defaulted to), PDS subcommands which update the data
 set such as ALIAS, ATTRIB (with attributes to be changed), DELETE,
 FIXPDS, RENAME, RESTORE or VERIFY could cause data set integrity
 problems if the data set is also being updated by another user.


 To circumvent this problem, PDS uses the following SPF RESERVE
 logic to maintain data set integrity during data set updates.

  A.  A  RESERVE  (SPFDSN,DSNAME,E,44,SYSTEMS),UCB=ADDRESS
      is performed.

  B.  If the data set is a load library, then a linkage-editor
      RESERVE or ENQUE is performed as appropriate:
       1.  On a shared DASDI volume,
           RESERVE  (SYSIEWLP,DSNAME,E,44,SYSTEMS),UCB=ADDRESS
       2.  On a non-shared DASDI volume,
           ENQ  (SPFIEWLP,DSNAME,E,44,SYSTEM)

  C.  The data set STOW DCB is opened

  D.  All data set updates are performed.
       1.  Wherever possible, the STOW DCB is left open while
           an entire member group is being processed.
       2.  For executions of PDS in batch mode, the volume
           reserve is maintained and the STOW DCB is left open
           following the first update to the data set.

  E.  The data set STOW DCB is closed

  F.  DEQ's are performed to remove the RESERVE's and ENQ's
=X SYNTAX - none.
=O OPERANDS - none.
