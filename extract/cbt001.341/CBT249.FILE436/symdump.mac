.section 'SYMDUMP IPCS CLIST'
.ix SYMDUMP
.ix IPCS SYMDUMP
.sp 2
SYSTEM PROGRAMMER NOTE
#81-002
Date:       May 20, 1981
.sp
To:         Operating Systems Software - 205 & 209
.sp
From:       D. H. Adams
.sp
Subject:    SYMDUMP IPCS Control Block Formatting Routine
.sp 3
A significant problem in the use of IPCS is its lack of control block
formatting capabilities. Because of this lack, many users resort to
AMDPRDMP to provide the required formatting in hard copy form. This is
time consuming, and often produces far more output than necessary.
.sp
SYMDUMP is a generalized control block formatting routine which
executes under IPCS to provide symbolic identification of dump data.
Input consists of a virtual address in the current dump and the name
of the control block associated with the address.  Output consists of
a dump of the control block with lines in the following format:
.sp
.ce ; soooooo aaaaaa. nnnnnnnn XXXX XXXX XXXX XXXX ×cccccccccccccccc×
.sp
where:
     s = sign of offset from beginning of control block (+ or -);
     o = offset from beginning of control block (hex);
     a = address of dump data (hex);
     n = symbolic name associated with offset in control block;
     X = xx = dump data in hex (length depends on name);
     c = dump data in EBCDIC (length depends on name);
.sp
.ce ; Usage Under IPCS/SPF
.sp
To use SYMDUMP under IPCS/SPF, select the SYMDUMP menu item, and enter
the address and control block name. The IPCS TERMINAL and PRINT
options are available for the output. In addition the output may be
directed to a BROWSE data set.
.sp
.ce ; Usage Without SPF
.sp
The SYMDUMP CLISTs are in data set '#AOSGP.IPCS.CLIST'.  To use SYMDUMP
outside SPF, enter the following command prior to using SYMDUMP the
first time (this allocates the control block definition file):
.sp
     %SYMALLOC
.sp
Then enter the following command as often as desired:
.sp
     %SYMDUMP address. cbname
.sp
where:
     address = a virtual dump address in hexadecimal;
     cbname = a control block name.
The TERMINAL, PRINT, and BROWSE options are available.
.sp
.ce ; Control Blocks
.sp
The most commonly required control blocks are currently defined. In
addition, two pseudo-control blocks are available: LINE defines a
single line (16 bytes); PAGE defines 22 lines.
.sp
.ce ; Creating Additional Control Block Definitions
.sp
Additional control block definitions may be created very easily.  Each
definition is a member in a partitioned data set, consisting of SYM
cards produced by assembling a control block mapping macro with the TEST
option. Use the SYMASM CLIST to create a definition as follows:
.sp
          %SYMASM  cbname
                   PUNCH 'BASE symbol'    optional - see note 1
          cbname   DSECT                  optional - see note 2
                   macro-call
                   END
.sp
where:
cbname = the member name of the control block;
symbol = a symbol defined in the mapping macro which represents the base
address of the control block (i.e., the "address" parameter of SYMDUMP
points to this symbol);
macro-call = invocation of the mapping macro, including any parameters.
.sp
Note 1: the PUNCH statement is normally not used; it is required only
when the mapping macro defines a prefix to the control block.
.sp
Note 2: the DSECT statement is required only when the mapping macro does
not contain one.
.sp 3
It is hoped that the use of SYMDUMP will reduce the need for the use
of AMDPRDMP and the use of external reference material. Please report
any problems or suggestions for improvement to me at CASNET 374-2618.
