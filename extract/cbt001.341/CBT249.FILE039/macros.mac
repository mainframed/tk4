./ ADD NAME=$EPILOG
./ NUMBER NEW1=10,INCR=10
         MACRO
&LABEL   $EPILOG &RC
&LABEL   LR    R1,R13              GET SAVEAREA ADDRESS
         L     R13,4(R13)          GET BACK CHAIN POINTER
         L     R0,16(R13)          GET SAVEAREA LENGTH
         ST    R15,16(R13)         SAVE REGISTER 15 (RETCODE)
         FREEMAIN R,LV=(0),A=(1)   FREE SAVEAREA
         LM    R14,R12,12(R13)     RESTORE CALLERS REGS
         AIF   (T'&RC EQ 'O').SPEC
         LA    R15,&RC             SET RETURN CODE
.SPEC    ANOP
         BR    R14                 RETURN TO CALLER
         MEND
./ ADD NAME=$PROLOG
./ NUMBER NEW1=10,INCR=10
         MACRO
&LABEL   $PROLOG &LV=0
.**********************************************************************
.*
.*       THIS MACRO WILL PROVIDE ENTRY LINKAGE AND OPTIONALLY
.*       MULTIPLE BASE REGISTERS.  ALSO, VIA THE 'LV=' KEYWORD
.*       PROVIDE ADDITIONAL USER STORAGE (APPENDED TO THE
.*       SAVE AREA) ADDRESSABLE FROM REG 13.  IF NO OPERANDS
.*       ARE CODED, REG 12 IS ASSUMED THE BASE. EXAMPLE:
.*              SECTNAME $PROLOG          = STANDARD REG 12 BASE
.*              SECTNAME $PROLOG 5        = STANDARD, REG 5 BASE
.*              SECTNAME $PROLOG 10,LV=20 = ADD 20 BYTES TO SAVE AREA
.*                                             REG 10 IS BASE
.*              SECTNAME $PROLOG R10,R11  = REGS 10 AND 11 ARE BASES
.*
.**********************************************************************
         LCLA  &AA,&AB,&AC
         GBLB  &PRORG
&AC      SETA  4096
&LABEL   CSECT
         B     32(R15)             BRANCH AROUND
         DC    AL1(26)
         DC    CL8'&LABEL'         CSECT NAME
         DC    C'-'
         DC    CL8'&SYSDATE'       COMPILE DATE
         DC    C'-'
         DC    CL8'&SYSTIME'       COMPILE TIME
         CNOP  0,4                 ALIGNMENT
         STM   R14,R12,12(R13)     SAVE REGISTERS
         LR    R12,R15             LOAD BASE REG
         USING &LABEL,R12          INFORM ASSEMBLER
         AIF   (&LV GT 4023).MERR
         LA    R0,&LV+72           LOAD REG 0 WITH LENGTH VARIABLE
         GETMAIN R,LV=(0)          GET CORE FOR SAVEAREA AND USER
         AIF   (&LV+72 LE 256).XC2
         AIF   (&LV+72 LE 512).XC1
         MVI   0(R1),X'00'         MOVE X'00' TO FIRST BYTE
         LR    R2,R1               SAVE POINTER IN EVEN REG
         LA    R4,1(R1)            SET RECEIVING POINTER
         LR    R5,R0               SET RECEIVING LENGTH
         BCTR  R5,R0               DECREMENT LENGTH
         LA    R5,0(R5)            CLEAR HIGH ORDER BYTE
         LA    R3,1                SET SENDING LENGTH
         MVCL  R4,R2               INSTRUCTION PADS WITH X'00'
         AGO   .STORE
.XC1     ANOP
         XC    256(&LV-184,R1),256(R1)  CLEAR SAVE AREA
         XC    0(256,R1),0(R1)          CLEAR SAVE AREA
         AGO   .STORE
.XC2     ANOP
         XC    0(&LV+72,R1),0(R1)       CLEAR SAVE AREA
.STORE   ANOP
         ST    R13,4(R1)           SAVE BACK CHAIN
         ST    R1,8(R13)           SET FORWARD CHAIN
         LR    R11,R1              SAVE NEW SAVEAREA ADDRESS
         L     R15,16(R13)         RESTORE REG 15
         ST    R0,16(R13)          SAVE SAVEAREA LENGTH
         LM    R0,R1,20(R13)       RESTORE REGS USED IN GETMAIN
         LR    R13,R11             SET SAVEAREA POINTER
         AIF   (N'&SYSLIST EQ 0).MEND
         AIF   ('&SYSLIST(1)' EQ 'R12').SKIPIT
         AIF   ('&SYSLIST(1)' EQ '12').SKIPIT
         LA    &SYSLIST(1),&LABEL  LOAD REQUESTED BASE REG
         DROP  R12                 DROP ASSUMED BASE REG
         USING &LABEL,&SYSLIST(1)  INFORM ASSEMBLER
.SKIPIT  ANOP
&AA      SETA  2
.LOOP    ANOP
         AIF   (&AA GT N'&SYSLIST).MEXIT
&AB      SETA  &AA-1
         LA    &SYSLIST(&AA),2048(&SYSLIST(&AB))  LOAD NEXT BASE REG
         LA    &SYSLIST(&AA),2048(&SYSLIST(&AA))  LOAD NEXT BASE REG
         USING &LABEL+&AC,&SYSLIST(&AA) INFORM ASSEMBLER
&AC      SETA  &AC+4096
&AA      SETA  &AA+1
         AGO   .LOOP
.MEXIT   ANOP
         AIF   (&PRORG).MEX2
         SPACE
         $REGS
         SPACE
.MEX2    ANOP
&AA      SETA  &LV+72
         MNOTE *,'TOTAL STORAGE AREA RECEIVED = &AA'
         MEXIT
.MEND    ANOP
         MNOTE *,'NO REGISTER SPECIFIED - R12 ASSUMED'
         AGO   .MEXIT
.MERR    ANOP
         MNOTE 12,'LV > 4023 - REQUEST IGNORED'
         AGO   .MEXIT
         MEND
./ ADD NAME=$REGS
./ NUMBER NEW1=10,INCR=10
         MACRO
         $REGS
         GBLB  &PRORG
         AIF   (&PRORG).MEX2
&PRORG   SETB  1
 SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
 SPACE
REG0     EQU   0
REG1     EQU   1
REG2     EQU   2
REG3     EQU   3
REG4     EQU   4
REG5     EQU   5
REG6     EQU   6
REG7     EQU   7
REG8     EQU   8
REG9     EQU   9
REG10    EQU   10
REG11    EQU   11
REG12    EQU   12
REG13    EQU   13
REG14    EQU   14
REG15    EQU   15
 SPACE
.MEX2    ANOP
       MEND
./ ADD NAME=$STCK
./ NUMBER NEW1=10,INCR=10
         MACRO
&LABEL   $STCK  &NOGEN
         LCLC   &L
.**********************************************************************
.****                                                             *****
.****    THIS MACRO WILL PROVIDE THE DAY, DATE, AND TIME FROM     *****
.****    THE TIME-OF-DAY CLOCK IN GREGORIAN (ENGLISH) FORMAT.     *****
.****                                                             *****
.****    IF INVOKED WITHOUT THE OPTIONAL 'NOGEN' KEYWORD, THE     *****
.****    CONSTANTS NAMED BELOW WILL BE GENERATED.  IF THE         *****
.****    'NOGEN' KEYWORD IS USED, THE USER MUST PROVIDE THIS      *****
.****    ROUTINE WITH ADDRESSABILITY TO THEM AS PRE-DEFINED       *****
.****    CONSTANTS.                                               *****
.****                                                             *****
.****    DAY    DS   X      A BINARY NUMBER (HEX) RELATIVE TO     *****
.****                       THE DAY OF THE WEEK AS FOLLOWS        *****
.****                       0=MONDAY, 1=TUESDAY, 2=WEDNESDAY,     *****
.****                       3=THURSDAY, 4=FRIDAY,                 *****
.****                       5=SATURDAY, 6=SUNDAY                  *****
.****                                                             *****
.****    DATE   DS   CL8    AN EIGHT CHARACTER FIELD CONTAINING   *****
.****                       THE DATE IN MM/DD/YY FORMAT           *****
.****                                                             *****
.****    TIME   DS   CL8    AN EIGHT CHARACTER FIELD CONTAINING   *****
.****                       THE TIME IN HH:MM:SS FORMAT           *****
.****                                                             *****
.****    NOTE THAT THE CALLER MUST PROVIDE A REGISTER SAVE AREA   *****
.****    THAT BEGINS ON A DOUBLEWORD BOUNDARY TO BE USED AS A     *****
.****    WORK AREA BY THIS ROUTINE (R-13 BASED).                  *****
.****                                                             *****
.**********************************************************************
&L       SETC  '&SYSNDX'
&LABEL   STCK  8(13)              STORE THE TIME-OF-DAY CLOCK
         LM    0,1,8(13)          LOAD INTO WORK REGS
         L     15,16              GET CVT ADDRESS
         A     0,304(15)          ADD LOCAL TIME DEVIATION
         SRDL  0,12               ISOLATE NUMBER OF MICROSECONDS
         D     0,=F'60000000'     DIVIDE BY 60M (R1=MINUTES AFT EPOCH)
         LR    15,0               COPY REMAINDER OF MICS TO GET SECS
         SR    14,14              CLEAR FOR DIVIDE
         D     14,=F'951424'      DIVIDE TO GET REMAINING SECONDS (R5)
         LR    14,15              COPY TO WORK REG
S&L.B    SL    14,=F'60'          DECREMENT BY 60 SECONDS
         BM    S&L.S              LESS THAN SIXTY, CONTINUE
         SL    15,=F'60'          MORE THAN SIXTY, ADJUST FOR LEAP
         AL    1,=F'1'            BUMP MINUTES
         B     S&L.B              CHECK AGAIN
S&L.S    CVD   15,8(13)           CONVERT SECONDS TO PACKED FORMAT
         UNPK  24(4,13),14(2,13)  UNPACK SECONDS FOR PRINT
         OI    27(13),X'F0'       SET UP FOR PRINTING
         MVC   TIME+6(2),26(13)   MOVE THE SECONDS
         CVD   1,8(13)            CONVERT MINUTES TO PACKED FORMAT
         DP    8(8,13),=P'60'     DIVIDE INTO HOURS AND MINUTES
         UNPK  24(4,13),14(2,13)  UNPACK THE MINUTES
         OI    27(13),X'F0'       SET UP FOR PRINTING
         MVC   TIME+3(2),26(13)   MOVE THE MINUTES
         ZAP   8(8,13),8(6,13)    RESET TO FULL LENGTH
         DP    8(8,13),=P'24'     DIVIDE INTO DAYS AND HOURS
         UNPK  24(4,13),14(2,13)  UNPACK THE HOURS
         OI    27(13),X'F0'       SET UP FOR PRINTING
         MVC   TIME(2),26(13)     MOVE THE HOURS
         MVI   TIME+2,C':'        ADD COLIN
         MVI   TIME+5,C':'        ADD COLIN
         ZAP   8(8,13),8(6,13)    RESET TO FULL LENGTH
         DP    8(8,13),=P'7'      DIVIDE BY NUMBER OF DAYS IN A WEEK
         ZAP   8(8,13),15(1,13)   FILL DOUBLEW WITH THE REMAINDER
         CVB   0,8(13)            CONVERT RELATIVE DAY TO BINARY
         STC   0,DAY              SET RELATIVE DAY OF WEEK
         ZAP   16(8,13),8(8,13)   SAVE THE NUMBER OF DAYS
         L     1,16               GET CVT ADDRESS
         MVC   24(4,13),57(1)     MOVE CVT DATE TO WORK AREA
         ZAP   8(8,13),=P'0'      ZERO WORK AREA
         MVO   14(2,13),24(1,13)  MOVE YEAR PORTION
         UNPK  DATE+6(2),14(2,13) UNPACK INTO OUTPUT AREA
         LA    15,S&L.T           LOAD ADDR OF TABLE
         CVB   1,8(13)            CONVERT TO BIN
         SLL   1,30               SHIFT ALL BUT LAST TWO
         LTR   1,1                TEST RESIDUAL
         BNZ   *+8                NOT 0, BRANCH
         LA    15,S&L.TL          LEAP YEAR
         LR    14,15              SAVE TABLE IN USE
         ZAP   8(8,13),25(2,13)   MOVE DAY PORTION
         CVB   0,8(13)            CONVERT TO BIN
         SR    1,1                CLEAR REG
         IC    1,0(15)            LOAD CHAR FROM TABLE
         LA    15,1(15)           INDEX TABLE POINTER
         SR    0,1                SUBTRACT FROM WORK VALUE
         BP    *-10               STILL POSITIVE, DO AGAIN
         AR    0,1                ELSE, ADD IT BACK
         CVD   0,8(13)            CONVERT TO DEC
         UNPK  DATE+3(2),14(2,13) UNPACK DAY INTO OUTPUT
         SR    15,14              FIND VALUE OF CURRENT INDEX
         CVD   15,8(13)           CONVERT TO DEC
         UNPK  DATE(2),14(2,13)   UNPACK MONTH INTO OUTPUT
         OI    DATE+1,C'0'        INSURE NUMERICS
         OI    DATE+4,C'0'        INSURE NUMERICS
         OI    DATE+7,C'0'        INSURE NUMERICS
         MVI   DATE+2,C'/'        ADD SLASH
         MVI   DATE+5,C'/'        ADD SLASH
         B     S&L.E              BRANCH AROUND CONSTANTS
S&L.T    DC    AL1(31,28,31,30,31,30,31,31,30,31,30,31) MONTH TABLE
S&L.TL   DC    AL1(31,29,31,30,31,30,31,31,30,31,30,31) LEAP YEAR
         AIF    (T'&NOGEN NE 'O').NOGEN   NOGEN SPECIFIED, SKIP
DAY      DC    XL1'00'            RELATIVE DAY OF THE WEEK
DATE     DC    C'  /  /  '        CURRENT DATE
TIME     DC    C'  :  :  '        CURRENT TIME
.NOGEN   ANOP
S&L.E    DS    0H
         MEND
./ ADD NAME=QTPUT
./ NUMBER NEW1=10,INCR=10
         MACRO
&LABEL   QTPUT &MSG
.**********************************************************************
.*
.*       QUICK FORM OF TPUT TERMINAL INTERFACE ROUTINE(TPUT).
.*
.*       NOTE THAT THE MESSAGE MUST BE ENCLOSED WITHIN QUOTES.
.*
.**********************************************************************
&LABEL   DS    0H
         TPUT  MSG&SYSNDX,LEN&SYSNDX SEND USER MESSAGE TO TERMINAL
         B     NOP&SYSNDX       BYPASS CONSTANTS
MSG&SYSNDX DC  C&MSG            MSG TEXT
LEN&SYSNDX EQU *-MSG&SYSNDX     MSG SIZE
         DS    0H               ALIGNMENT
NOP&SYSNDX EQU *
         MEND
./ ADD NAME=REGEQU
./ NUMBER NEW1=10,INCR=10
         MACRO
         REGEQU
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         MEND
./ ADD NAME=SYSGET
./ NUMBER NEW1=10,INCR=10
         MACRO
&SYM     SYSGET &EODAD=EODAD,&DDNAME=SYSIN,&LRECL=80,&RECFM=,          X
               &BLKSIZE=80
         AIF   (K'&SYM EQ 0).NOSYM
         AIF   (K'&SYM GT 5).ERRSYM
         AIF   (K'&DDNAME GT 8).DDNERR
         AIF   (K'&EODAD GT 8).ERREOD
       MNOTE *,'DCB = DDNAME=&DDNAME,DSORG=PS,MACRF=GL,EODAD=&EODAD'
       MNOTE *,'          DD CARD CHANGES WILL WORK FOR '
       MNOTE *,'      LRECL=&LRECL,BLKSIZE=&BLKSIZE,RECFM=&RECFM'
         DS    0H
&SYM     NOP   &SYM.S1 .               NOP UNTIL OPEN
         OI    &SYM.+1,C'0' .          SET NOP TO UNCONDITIONAL
         ST    14,&SYM.14 .            SAVE RETURN REG
         OPEN  (&SYM.DCB,(INPUT))
&SYM.1   GET   &SYM.DCB
         L     14,&SYM.14 .            RESTORE RETURN REG
         BR    14 .                    RETURN
&SYM.S1  ST    14,&SYM.14 .            SAVE RETURN POINTER
         B     &SYM.1 .                GO GET RECORD
&SYM.XIT CLC   &SYM.DCB+62(2),=H'0' .  IS BLOCK SIZE THERE
         BNE   &SYM.3 .                IF SO SKIP
         MVC   &SYM.DCB+62(2),=H'&BLKSIZE' .MOVE IN SIZE
&SYM.3   CLC   &SYM.DCB+82(2),=H'0' .  IS LRECL HERE
         BNE   &SYM.4 .                IF SO SKIP
         MVC   &SYM.DCB+82(2),=H'&LRECL' .   MOVE IN LRECL
&SYM.4   CLI   &SYM.DCB+36,X'00' .     IS RECFM THERE
         BNE   &SYM.5 .                BRANCH IF THERE
         MVI   &SYM.DCB+36,X'90' .     MOVE IN DEFAULT RECFM FB
&SYM.5   BR    14 .                    RETURN TO OPEN
&SYM.EOD CLOSE &SYM.DCB
         NI    &SYM.+1,X'0F' .         RESET NOP FOR POSSIBLE REOPEN
         B     &EODAD .                GO TO USERS EODAD RTN
&SYM.14  DS    1F .                    RETURN REG SAVE AREA
&SYM.LST DC    X'85' .                 DCB OPEN EXIT
         DC    AL3(&SYM.XIT) .         POINTER TO XIT RTN
&SYM.DCB DCB   DDNAME=&DDNAME,DSORG=PS,MACRF=(GL),EODAD=&SYM.EOD,      ,
               EXLST=&SYM.LST,RECFM=&RECFM
         AGO   .END
.ERRSYM MNOTE 8,'8,*** LABEL ON SYSGET MACRO MUST BE LESS THAN SIX'
         AGO   .END
.NOSYM  MNOTE 8,'8,*** SYSGET MACRO MUST HAVE A LABEL'
         AGO   .END
.DDNERR MNOTE 8,'8,*** DDNAME LARGER THAN EIGHT CHARACTERS'
         AGO   .END
.ERREOD MNOTE 8,'8,*** MAXIMUM LABEL SIZE IS EIGHT CHARACTERS'
.END     MEND
./ ADD NAME=SYSPRINT
./ NUMBER NEW1=10,INCR=10
         MACRO
&SYM     SYSPRINT &HEADER1=,&HEADER2=,&LINES=56,&DDNAME=SYSPRINT,      X
               &LRECL=121
         AIF   (K'&SYM EQ 0).NOSYM
         AIF   (K'&SYM GT 5).ERRSYM
         AIF   (K'&DDNAME GT 8).DDNERR
         AIF   ('&LRECL' GT '133').ERRLEN
         MNOTE *,'DCB = DDNAME=&DDNAME,LRECL=&LRECL,LINES=&LINES'
         AIF   ('&HEADER1' EQ '').HD1
         MNOTE *,'    &HEADER1 IS FIRST HEADER LINE'
         AIF   ('&HEADER2' EQ '').HD2
         MNOTE *,'    &HEADER2 IS SECOND HEADER LINE'
.HD2     MNOTE *,'    THE FIRST BYTE OF ANY BUFFER SPECIFIED WILL'
         MNOTE *,'    BE USED BY THIS ROUTINE FOR ASA CHARACTERS'
         MNOTE *,'    AND UNPREDICTABLE RESULTS MAY OCCUR IF USED.'
         CNOP  0,4
&SYM     NOP   DRC&SYSNDX.C .          NOP BRANCH SET AFTER OPEN
         NOP   DRC&SYSNDX.D .          NOP BRANCH SET AFTER OPEN
         OI    &SYM.+5,C'0' .          SET NOP TO BRANCH
         OI    &SYM.+1,C'0' .          SET FIRST NOP TO BRANCH
         STM   14,2,DRC&SYSNDX.B .     SAVE USERS REGS
         LA    1,DRC&SYSNDX.A .        LOAD ADDRESS OF OPEN LIST
         SVC   19 .                    ISSUE OPEN SVC
         AIF   ('&HEADER1' EQ '').HD4
DRC&SYSNDX.F MVI &HEADER1,C'1' .       SET CARRIAGE CONTROL
         PUT   &SYM.DCB,&HEADER1
         AIF   ('&HEADER2' EQ '').HD5
         MVI   &HEADER2,C'-' .         SET TRIPLE SPACE AFTER SKIP
         PUT   &SYM.DCB,&HEADER2
         AGO   .HD5
.HD4     L     15,DRC&SYSNDX.B+12 .    GET POINTER TO RECORD
DRC&SYSNDX.E MVI 0(15),C'1' .            SKIP TO ONE FIRST TIME
         LA    2,&LINES.+1 .           GET LINE COUNT
         AGO   .HD55
.HD5     L     15,DRC&SYSNDX.B+12 .    PICK UP DATA POINTER
         MVI   0(15),C'0' .            SET DOUBLE SPACE AFTER SK97
         LA    2,&LINES.+1 .           PICK UP LINE COUNT
.HD55    ANOP
DRC&SYSNDX.G BCT 2,DRC&SYSNDX.H .      BR TO PRINT FOR NUMBER OF LINES
         AIF   ('&HEADER1' NE '').HD6
         B     DRC&SYSNDX.E .          START NEW PAGE
         AGO   .P4
.HD6     B     DRC&SYSNDX.F .          GO TO DO SKIP AND PRINT HDR
.P4      ANOP
DRC&SYSNDX.H PUT &SYM.DCB,(15)
         ST    2,DRC&SYSNDX.J .        SAVE THE LINE COUNT
         LM    14,2,DRC&SYSNDX.B .     RESTORE USERS REGS
         MVI   0(1),C' ' .             PLACE BLANK INTO CARRIAGE CONTR
         MVC   1(&LRECL.-1,1),0(1) .   CLEAR THE BUFFER
         BR    14 .                    RETURN
 SPACE
DRC&SYSNDX.D STM 14,2,DRC&SYSNDX.B .   SAVE REGS ALWAYS
         AIF   ('&HEADER1' EQ '').P6
         B     DRC&SYSNDX.F .          GO TO HEADER ROUTINE
         AGO   .P5
.P6     ANOP
         L     15,DRC&SYSNDX.B+12 .    PICK UP POINTER TO DATA
         B     DRC&SYSNDX.E .          GO TO HEADER RTN
.P5      ANOP
DRC&SYSNDX.C STM 14,2,DRC&SYSNDX.B .   SAVE REGS ALWAYS
         L     2,DRC&SYSNDX.J .        RESTORE THE LINE COUNTER
         L     15,DRC&SYSNDX.B+12 .    PICK UP POINTER TO DATA
         MVI   0(15),C' ' .            MOVE X'40' TO ASA
         B     DRC&SYSNDX.G .          GO TEST FOR LINE COUNT
DRC&SYSNDX.M CLC &SYM.DCB+62(2),=H'0' . IS BLOCK SIZE THERE
         BNE   DRC&SYSNDX.L .          IF SO SKIP
         MVC   &SYM.DCB+62(2),=H'&LRECL'  .     MOVE IN DEFAULT SIZE
DRC&SYSNDX.L BR 14 .               RETURN TO OPEN
 SPACE
DRC&SYSNDX.B DC 5F'0' .                PRINT RTNS SAVE AREA
DRC&SYSNDX.J DC F'0' .                 SAVE FOR LINE COUNTER
DRC&SYSNDX.K DC X'85' .                EXIT LIST FOR OPEN
         DC    AL3(DRC&SYSNDX.M) .     POINTER TO THE EXIT ROUTINE
DRC&SYSNDX.A DC AL1(143) .             OPTION BYTE FOR OPEN
         DC    AL3(&SYM.DCB) .         DCB ADCON FOR OPEN
 SPACE
&SYM.DCB DCB DDNAME=&DDNAME,LRECL=&LRECL,RECFM=FBA,EXLST=DRC&SYSNDX.K, X
               DSORG=PS,MACRF=(PM)
         MEXIT
.HD1     AIF   ('&HEADER2' EQ '').HD2
         MNOTE 8,'8,*** HEADER2 INVALID WITHOUT HEADER1 SPECIFIED'
         MEXIT
.ERRLEN MNOTE 8,'8,*** LRECL TOO LARGE FOR SYSPRINT'
         MEXIT
.NOSYM  MNOTE 8,'8,*** SYSPRINT MACRO MUST HAVE A LABEL'
         MEXIT
.ERRSYM MNOTE 8,'8,*** LABEL ON SYSPRINT MACRO MUST BE LESS THAN SIX'
         MEXIT
.DDNERR MNOTE 8,'8 *** MAXIMUM DDNAME SIZE IS EIGHT CHARACTERS'
         MEXIT
.BUFERR  MNOTE 8,'8,*** NO BUFFER SUPPLIED, EXECUTION IMPOSSIBLE'
.END     MEND
./ ADD NAME=SYSPUT
./ NUMBER NEW1=10,INCR=10
         MACRO
&SYM     SYSPUT &DDNAME=SYSPUNCH,&LRECL=80,&RECFM=,&BLKSIZE=80
         AIF   (K'&SYM GT 5).ERRSYM
         AIF   (K'&SYM EQ 0).NOSYM
         AIF   (K'&DDNAME GT 8).DDNERR
       MNOTE *,'DCB = DDNAME=&DDNAME,DSORG=PS,MACRF=PM'
       MNOTE *,'             DD CARD CHANGES WILL WORK FOR'
       MNOTE *,'      LRECL=&LRECL,BLKSIZE=&BLKSIZE,RECFM=&RECFM'
         DS    0H
&SYM     NOP   &SYM.1S .               NOP BRANCH SET AFTER OPEN
         OI    &SYM.+1,C'0' .          SET NOP TO BRANCH
         STM   14,1,&SYM.14 .          SAVE REGS
         OPEN  (&SYM.DCB,(OUTPUT))
&SYM.1   L     0,&SYM.14+12 .          SET DATA REG
         PUT   &SYM.DCB,(0)
         LM    14,1,&SYM.14 .          RESTORE REGS
         BR    14 .                    RETURN
&SYM.1S  STM   14,1,&SYM.14 .          SAVE REGS
         B     &SYM.1 .                GO TO PUT RTN
&SYM.XIT CLC   &SYM.DCB+62(2),=H'0' .  IS BLKSIZE THERE
         BNE   &SYM.3 .                IF SO SKIP
         MVC   &SYM.DCB+62(2),=H'&BLKSIZE' MOVE IN BLKSIZE
&SYM.3   CLC   &SYM.DCB+82(2),=H'0' .  IS LRECL THERE
         BNE   &SYM.4 .                IF SO SKIP
         MVC   &SYM.DCB+82(2),=H'&LRECL' MOVE IN LRECL
&SYM.4   CLI   &SYM.DCB+36,X'00' .     IS RECFM THERE
         BNE   &SYM.5 .                BRANCH IF THERE
         MVI   &SYM.DCB+36,X'90' .     MOVE IN DEFAULT RECFM FB
&SYM.5   BR    14 .                    RETURN TO OPEN
&SYM.14  DS    4F .                    REG SAVE AREA
&SYM.LST DC    X'85' .                 OPEN EXIT LIST
         DC    AL3(&SYM.XIT) .         ENTRY FOR OPEN EXIT
&SYM.DCB DCB   DDNAME=&DDNAME,DSORG=PS,MACRF=(PM),EXLST=&SYM.LST,      X
               RECFM=&RECFM
         AGO   .END
.ERRSYM MNOTE 8,'8,*** LABEL ON SYSPUT MACRO MUST BE LESS THAN SIX'
         AGO   .END
.NOSYM  MNOTE 8,'8,*** SYSPUT MACRO MUST HAVE A LABEL'
         AGO   .END
.DDNERR MNOTE 8,'8,*** DDNAME LARGER THAN EIGHT CHARACTERS'
.END     MEND
