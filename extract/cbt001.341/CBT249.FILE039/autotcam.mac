         TITLE 'TCAM AUTOMATIC COMMAND PROCESSOR'
***********************************************************************
*                                                                     *
*        THIS ROUTINE IF ATTACHED BY THE TCAM MCP WILL AUTOMATICALLY  *
*        ISSUE OPERATOR COMMANDS.  A DD NAME OF 'COMMANDS' MUST BE    *
*        INCLUDED IN THE TCAM STARTUP PROC, WHICH DEFINES A DATASET   *
*        CONTAINING THE USERS COMMANDS.  THE ATTACH MUST BE CODED     *
*        IMMEDIATLY IN FRONT OF THE 'READY' MACRO IN THE USER'S MCP   *
*        AND SHOULD NOT CONTAIN ANY PARMS OTHER THAN 'EP=AUTOTCAM'.   *
*        AS LONG AS NO OTHER PARMS ARE USED, NO DETACH OF THE TASK    *
*        IS REQUIRED.                                                 *
*                                                                     *
*        THE 'COMMANDS' DATASET MUST HAVE AN LRECL OF 80 (F OR FB)    *
*        (SUCH AS SYS1.PARMLIB WHICH COULD BE USED IF 'FREE=CLOSE' IS *
*        USED TO ALLOW DEQUEUE OF THE DATASET).                       *
*        THE FORMAT OF EACH 'COMMANDS' RECORD IS AS FOLLOWS:          *
*             'COMMAND' BLANK 'OPERANDS AND COMMENTS'                 *
*        EXAMPLES                                                     *
*        .... FOR .................        .... SPECIFY ............  *
*        F    TASKNAME,AUTOPOLL=090,OFF    F    AUTOPOLL=090,OFF      *
*        F    TASKNAME,AUTOPOLL=LNE1,1,OFF F    AUTOPOLL=LNE1,1,OFF   *
*        V    090,OFFTP,I                  V    090,OFFTP,I           *
*        F    TCAM,TS=START                F    TS=START              *
*                                                                     *
*        NOTE THAT THE TASK NAME IS MISSING FROM THE 'COMMANDS'       *
*        AND THAT THE TASK NAME WILL BE ADDED BY THIS ROUTINE.        *
*                                                                     *
*        THIS ROUTINE MUST BE LINK EDITTED INTO A LINK LIST           *
*        CONCATINATION LIBRARY SUCH THAT IT MAINTAINS TCAM'S          *
*        AUTHORIZATION.  IT NEED NOT BE AUTHORIZED ITSELF AS LONG     *
*        AS TCAM IS AUTHORIZED.                                       *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*        THE FOLLOWING IS AN EXAMPLE OF COMMANDS (AND COMMENTS)       *
*        WHICH COULD BE ADDED TO 'SYS1.PARMLIB(COMMANDS)' OR          *
*        ANY OTHER USER DEFINED DATASET.  NOTE THAT IF THE FIRST      *
*        CHARACTER IS AN ASTERISK '*' AUTOTCAM IGNORES THE RECORD.    *
*                                                                     *
*        *                                                            *
*        *<== COMMENT TO AUTOTCAM*                                    *
*        *                       REMOVE AUTO POLL FROM REMOTE TSO     *
*        MODIFY AUTOPOLL=090,OFF REMOVE AUTO POLL FOR 090             *
*        *                       INITIALLY DISABLE LINES              *
*        VARY 091,OFFTP,I        STOP LINE 091                        *
*        *                       START TIME SHARING                   *
*        F  TS=START             ACTIVATE TSO                         *
*        *                                                            *
*                                                                     *
***********************************************************************
*                                                                     *
*        THE FOLLOWING IS AN EXAMPLE OF THE INCLUSION OF THE          *
*        'COMMANDS' DD CARD WHICH POINTS TO THE ABOVE RECORDS.        *
*                                                                     *
*        //IEFPROC  PROC P=IEDQTCAM                                   *
*        //IEFPROC   EXEC PGM=&P,REGION=192K,DPRTY=(13,9),TIME=1440   *
*        //COMMANDS DD DSN=SYS1.PARMLIB(AUTOTCAM),DISP=SHR,FREE=CLOSE *
*        //RMT3270A DD UNIT=090                                       *
*        //LCL3270A DD UNIT=21B                                       *
*        //         DD UNIT=2D8                                       *
*        //         DD UNIT=2D9                                       *
*                                                                     *
***********************************************************************
         EJECT
AUTOTCAM $PROLOG
         L     R2,16               CVT POINTER
WAITLOOP TM    240(R2),X'80'       IS TCAM INITIALIZED?
         BO    SETUP               YES, CONTINUE
         STIMER WAIT,DINTVL=INITIAL WAIT FOR TCAM TO GET INITIALIZED
         B     WAITLOOP            CHECK IF INITIALIZED YET
SETUP    L     R1,0(R2)            TCB POINTERS
         L     R1,4(R1)            MY TCB POINTER
         L     R1,12(R1)           MY TIOT ADDRESS
         MVC   TASKNAME(8),8(R1)   MOVE TASK NAME TO MODIFY COMMAND BUF
         LA    R2,TASKNAME         BEGINNING OF STRING
LOOP1    CLI   0(R2),C' '          END OF TASK NAME?
         BE    SETBUF              YES, SET UP BUFFER
         LA    R2,1(R2)            BUMP TO NEXT CHAR
         B     LOOP1               CHECK NEXT CHARACTER
SETBUF   MVI   0(R2),C','          COMMA FOLLOWS TASK NAME
         LA    R2,1(R2)            BUMP TO 1ST BLANK
         OPEN  (DCB)               OPEN COMMANDS DCB
         TM    DCB+48,X'10'        COMMANDS EXIST?
         BZ    EXIT                NO, IGNORE COMMANDS OPTION
GETNEXT  GET   DCB                 GET COMMAND RECORD
         LR    R3,R1               COPY BUFFER ADDRESS
         LA    R15,70              SET LOOP CONTROL
         MVC   MODCMD(8),BLANKS    CLEAR PREVIOUS MODIFY COMMAND
         MVC   0(82,R2),BLANKS     CLEAR PREVIOUS MODIFY OPERANDS
         MVC   COMMAND(100),BLANKS CLEAR PREVIOUS COMMAND
*        LOCATE START OF COMMAND
LOOP2    CLI   0(R3),C'*'          COMMENT RECORD?
         BE    GETNEXT             YES, GET NEXT COMMAND RECORD
         CLI   0(R3),C' '          START OF COMMAND?
         BNE   GETCMD              YES, SET UP BUFFER
         LA    R3,1(R3)            NO, BUMP TO NEXT CHARACTER
         BCT   R15,LOOP2           BACK FOR NEXT CHAR
         B     GETNEXT             BLANK RECORD, IGNORE IT
*        DETERMINE TYPE OF COMMAND (MODIFY OR NON-MODIFY)
GETCMD   SR    R14,R14             CLEAR COUNT REG
         LR    R4,R3               SAVE START ADDR OF COMMAND
         CLC   0(2,R3),=C'F '      IS IT A MODIFY COMMAND?
         BE    LOOP3               YES, TO MODIFY ROUTINE
         CLC   0(7,R3),=C'MODIFY ' IS IT A MODIFY COMMAND?
         BE    LOOP3               YES, TO MODIFY ROUTINE
         BCTR  R15,R0              DECREMENT FOR EXECUTE
         EX    R15,MOVECMD         MOVE COMMAND TO MGCR BUFFER
         MODESET KEY=ZERO          GET KEY ZERO FOR SVC 34
         LM    R0,R1,MGCRREGS      SET SVC 34 REGS
         B     COMMON              GO TO COMMON SVC 34 ROUTINE
*        MODIFY COMMAND, LOCATE END OF MODIFY VERB
LOOP3    CLI   0(R3),C' '          END OF COMMAND?
         BE    SETCMD              YES, SET UP COMMAND
         LA    R3,1(R3)            BUMP TO NEXT CHAR
         LA    R14,1(R14)          BUMP COUNT
         BCT   R15,LOOP3           CHECK NEXT CHARACTER
         B     GETNEXT             INVALID RECORD, IGNORE IT
*        MOVE MODIFY COMMAND TO SVC 34 BUFFER
SETCMD   BCTR  R14,R0              DECREMENT FOR EXECUTE
         EX    R14,MOVEMOD         MOVE COMMAND TO CIB BUFFER
*        LOCATE BEGINNING OF MODIFY OPERANDS
LOOP4    CLI   0(R3),C' '          CHECK FOR START OF OPERAND
         BNE   GETOP               FOUND, BRANCH
         LA    R3,1(R3)            BUMP TO NEXT CHARACTER
         BCT   R15,LOOP4           CHECK NEXT CHARACTER
         B     GETNEXT             INVALID RECORD, IGNORE
GETOP    BCTR  R15,R0              DECREMENT FOR EXECUTE
         EX    R15,MOVEOP          MOVE OPERAND TO CIB BUFFER
         MODESET KEY=ZERO          GET KEY ZERO FOR SVC 34
         LM    R0,R1,MODCMDRG      GET SVC 34 REGS
COMMON   SVC   34                  SCHEDULE COMMAND
         MODESET KEY=NZERO         RELINQUISH KEY ZERO
         STIMER WAIT,DINTVL=DELAY  ALLOW TIME FOR TCAM TO PROCESS
         B     GETNEXT             GET NEXT COMMAND IF ANY
EXIT     SR    R15,R15             CLEAR RETURN CODE
         $EPILOG
         EJECT
MOVECMD  MVC   COMMAND(1),0(R4)    MOVE COMMAND TO CIB
MOVEMOD  MVC   MODCMD(1),0(R4)     MOVE MODIFY COMMAND TO CIB
MOVEOP   MVC   0(1,R2),0(R3)       MOVE MODIFY OPERAND TO CIB
BLANKS   DC    CL100' '            BLANKS FOR CLEAR AND OR
DCB      DCB   DDNAME=COMMANDS,DSORG=PS,MACRF=GL,EODAD=EXIT
INITIAL  DC    C'00000500'    5 SECOND INITIAL WAIT
DELAY    DC    C'00000050'    1/2 SECOND DELAY BETWEEN COMMANDS
*        THE FOLLOWING IS THE ORDER DEPENDENT SVC 34 PARM LIST
MGCRREGS DC    F'0'                REG 0 FOR SVC 34
         DC    A(CIB1)             REG 1 FOR SVC 34
CIB1     DC    AL2(98)             MAXIMUM LENGHT OF COMMAND
         DC    H'0'                SVC 34 PADDING
COMMAND  DC    CL100' '            COMMAND
MODCMDRG DC    F'0'                REG 0 FOR SVC 34
         DC    A(CIB2)             REG 1 FOR SVC 34
CIB2     DC    AL2(98)             MAXIMUM LENGHT OF COMMAND
         DC    H'0'                SVC 34 PADDING
MODCMD   DC    CL9'F'              COMMAND
TASKNAME DC    CL91' '             TASKNAME + OPERANDS
         LTORG
         END
