 TITLE ' IEECVXIT - MCS WRITE TO OPERATOR EXIT (MVS)'
***********************************************************************
*                                                                     *
*          IEECVXIT - MCS WRITE TO OPERATOR EXIT                      *
*                                                                     *
*          FUNCTION - CHECK FOR THE OCCURRANCE OF A WTO WHICH         *
*                     REQUIRES SPECIAL ROUTING AS FOLLOWS:            *
*                                                                     *
*                     1. -  WTO IS TO BE MARKED NON-DELETEABLE        *
*                                                                     *
*                     2. -  WTO IS TO BE IGNORED                      *
*                                                                     *
*          REGISTER USAGE -                                           *
*                     R0-R5 = WORK REGS                               *
*                     R6  = BASE                                      *
*                     R7  = WORK REG                                  *
*                     R8  = SAVE REG FOR R0                           *
*                     R9  = SAVE REG FOR R1                           *
*                     R10 = GETMAINED WORKAREA DSECT                  *
*                     R11 = WTO DATA DSECT                            *
*                     R12-R15 = UNUSED
*                                                                     *
*          NOTE: THIS ROUTINE IS LINKEDITED AS AN SVC (TYPE 3)        *
*                TO BE INCLUDE VIA AN 'MLPA' AT IPL TIME.             *
*                IT IS BEST TO LINK WITH THE NAME OF IEECVXIT         *
*                WITH AN ALIAS OF THE USED SVC (E.G. IGC00XXX).       *
*                ALSO, SINCE THIS ROUTINE MUST BE REENTRANT, NO       *
*                IN-LINE MACRO EXPANSIONS MAY BE USED (E.G. DO        *
*                NOT USE A MACRO THAT GENERATES AN ADCON).            *
*                                                                     *
***********************************************************************
IEECVXIT CSECT
         USING IEECVXIT,R6    INFORM THE ASSEMBLER OF OUR BASE REG
*        BECAUSE WE ARE AN SVC, THERE IS NO NEED TO SAVE THE USERS
*        REGISTER (THE SYSTEM HAS ALREADY SAVED THEM).  ALSO, CERTAIN
*        REGISTERS HAVE BEEN PRIMED FOR US AS FOLLOWS:
*         0 = SAME AS WHEN SVC WAS ISSUED (AT ENTRY TO EXIT)
*         1 = SAME AS WHEN SVC WAS ISSUED (AT ENTRY TO EXIT)
*         2 = UNPREDICTABLE
*         3 = CVT ADDRESS
*         4 = TCB ADDRESS(CURRENT)
*         5 = SVRB ADDRESS (OURS)
*         6 = ENTRY POINT (OUR BASE REG)
*         7 = ASCB ADDRESS (CURRENT)
*         8 = UNPREDICTABLE
*         9 = UNPREDICTABLE
*        10 = UNPREDICTABLE
*        11 = UNPREDICTABLE
*        12 = UNPREDICTABLE
*        13 = SAME AS WHEN SVC WAS ISSUED (AT ENTRY TO EXIT)
*        14 = RETURN REGISTER (TO SVC RETURN HANDLER)
*        15 = SAME AS WHEN SVC WAS ISSUED (AT ENTRY TO EXIT)
*
         EJECT
         LR    R8,R0          SAVE CONTENTS OF ENTRY REGS
         LR    R9,R1          SAVE CONTENTS OF ENTRY REGS
         L     R11,0(R1)      ADDRESS OF WTO TEXT AND MCS CODES
         USING IEECUCM,R11    INFORM THE ASSEMBLER
         SPACE 2
         EJECT
***********************************************************************
*                                                                     *
*        THIS ROUTINE WILL CHECK FOR THE 'WAITING FOR DATASETS'       *
*        MESSAGE.  IF FOUND, AND THE JOB REQUESTED NOTIFY, INFORM     *
*        THE TSO USER VIA A TPUT COMMAND.                             *
*                                                                     *
***********************************************************************
BEGIN    EQU   *
         CLC   WTO(7),=CL7'IEF861I' CHECK FOR "FOLOWING RESERVED DS'S"
         BE    DSNCHK         YES, CHECK IF INITIATED JOB
         CLC   WTO(7),=CL7'IEF863I' CHECK FOR "DSN=........"
         BE    DSNCHK         YES, CHECK IF INITIATED JOB
         CLC   WTO(7),=CL7'IEF099I' CHECK FOR "WAITING FOR DATASETS"
         BNE   DSNSKIP        NO, CONTINUE
DSNCHK   ICM   R4,15,172(R7)  GET POINTER TO JOBNAME FROM ASCB
         BZ    DSNSKIP        NOT INITIATED, COULD NOT ALLOW NOTIFY
*
*          LOCATE THE JOB'S JCT TO GET THE NOTIFY-ID
*
         SR    R0,R0          CLEAR R0
         ICM   R0,3,36(R7)    PICK UP ASID FROM ASCB
         SLL   R0,2           MULTIPLY BY 4
         L     R1,296(R3)     GET JES CONTROL TABLE ADDR
         L     R1,24(R1)      GET JES SSCT
         L     R1,16(R1)      GET JES SSVT
         L     R15,388(R1)    GET JES ASVT
         AR    R15,R0         ADD OFFSET TO ADDRESS OF ASVT
         L     R15,0(R15)     GET INITIATORS SJB ADDRESS
         ICM   R15,15,84(R15) GET INITIATOR'S DEPENDENT SJB
         BZ    DSNSKIP        IF ZERO THIS IS NOT BATCH
         L     R12,96(R15)    GET JOBS JCT ADDRESS
         EJECT
*
*          CHECK IF NOTIFY WAS SPECIFIED BY THE USER, AND IF
*          SO, TPUT THE MSG DATA TO THE USER
*
         CLI   340(R12),C' '  WAS NOTIFY REQUESTED?
         BE    DSNSKIP        NO, NO ONE TO INFORM
         L     R0,SUBPOOL     GET SUBPOOL AND SIZE FOR GETMAIN
         BAL   R1,*+4         INDICATE GETMAIN REQUEST
         SVC   10             GET STORAGE FOR TPUT USERID
         MVC   0(WORKEND-WORK,R1),WORK MOVE CONSTANTS TO GOTTEN STG
         LR    R10,R1         COPY AREA ADDRESS
         USING WORK,R10       INFORM ASSEMBLER OF ADDRESSABILITY
         MVC   USERID(7),340(R12) ADD THE NOTIFY-ID
         CNOP  0,4            FULLWORD ALIGN
         LA    R0,78          SIZE OF TPUT
         BAL   R1,*+8         AROUND CONSTANT
         DC    X'40000000'    MASK FOR USERID TPUT
         L     R1,0(R1)       PICK UP MASK
         OR    R1,R11         ADDRESS OF DATA
         LA    R15,USERID     ADDRESS OF USERID
         SVC   93             INFORM USER
         L     R0,SUBPOOL     GET SUBPOOL AND SIZE FOR FREEMAIN
         LR    R1,R10         INDICATE AREA TO BE FREED
         SVC   10             FREE GOTTEN STORAGE
         DROP  R10            FREE REGISTER FOR REUSE
DSNSKIP  EQU   *
         EJECT
***********************************************************************
*                                                                     *
*        THIS ROUTINE WILL COMPARE THE WTO MSGID TO THOSE IN          *
*        THE FOLLOWING MSGID TABLE.  IF ONE IS FOUND, THE ROUT        *
*        AND DISCRIPTOR FLAGS WILL BE SUBSTITUTED WITH THOSE          *
*        FOUND IN THE TABLE.  THIS IS USEFUL IN THOSE CASES WHERE     *
*        CERTAIN MESSAGES ARE TO BE MARKED 'NON-DELETABLE' OR         *
*        OTHERS ARE TO BE DELETED (NOT PRINTED).                      *
*                                                                     *
***********************************************************************
         LA    R3,TABLE       GET POINTER TO MSGID TABLE
         LA    R5,TABLEEND    GET END OF TABLE FOR BXLE
         LA    R4,16          SET SIZE OF TABLE ENTRIES
COMPARE  EQU   *
         CLI   1(R3),C'@'     END OF THE TABLE ?
         BE    RETURN         YES, RETURN TO CALLER
         IC    R15,0(R3)      GET COMPARAND SIZE
         BCTR  R15,R0         DECREMENT FOR EXECUTE
         EX    R15,COMP       COMPARE TABLE ELEMENT TO WTO
         BE    REROUTE        MATCH, MODIFY THE ROUT/DISC CODES
         BXLE  R3,R4,COMPARE  NO MATCH, CHECK NEXT ENTRY
         B     RETURN         NONE FOUND, ALLOW AS IS
COMP     CLC   1(0,R3),WTO    COMPARE TABLE ELEMENT TO WTO
         SPACE 3
REROUTE  EQU   *
         MVC   WTOCODES(8),8(R3) MOVE IN NEW ROUTE/DESC. CODES
RETURN   EQU   *
         LR    R0,R8          RELOAD WITH ORIGINAL VALUE
         LR    R1,R9          RELOAD WITH ORIGINAL VALUE
         SR    R15,R15        CLEAR RETCODE
         BR    R14            RETURN TO CALLER
         EJECT
*
*        THE FOLLOWING IS THE MSGTEXT/ROUTCODE TABLE
*
*        DISCRIPTOR CODES: X'8000' = ( 1) SYSTEM FAILURE
*                          X'4000' = ( 2) IMEDIATE ACTION REQ'D
*                          X'2000' = ( 3) EVENTUAL ACTION REQ'D
*                          X'1000' = ( 4) SYSTEM STATUS
*                          X'0800' = ( 5) IMEDIATE COMMAND RESPONSE
*                          X'0400' = ( 6) JOB STATUS
*                          X'0200' = ( 7) APPLICATION
*                          X'0100' = ( 8) OUT OF LINE MSG
*                          X'0080' = ( 9) DISPLAY/TRACK COMMAND RESP
*                          X'0040' = (10) DYNAMIC STATUS DISPLAY
*                          X'0020' = (11) RSVD
*                          X'0010' = (12) RSVD
*                          X'0008' = (13) RSVD
*                          X'0004' = (14) RSVD
*                          X'0002' = (15) RSVD
*                          X'0001' = (16) RSVD
*
TABLE    EQU   *
         DC    AL1(7),CL7'IECTMS9' TMS VERIFICATION MSG
         DC    X'00200000'     - ROUTE CODE       11
         DC    X'00000000'     - DESCRIPTOR CODE  ROLL
*
*        DC    AL1(7),CL7'IEC705I' TAPE ON DDD IS SL/6250 ETC
*        DC    X'00200000'     - ROUTE CODE       11
*        DC    X'00000000'     - DESCRIPTOR CODE  ROLL
*
         DC    AL1(7),CL7'IEE362A' SMF ENTER DUMP FOR SYS1.MAN(X,Y)
         DC    X'40000000'     - ROUTE CODE       2
         DC    X'00000000'     - DESCRIPTOR CODE  ROLL
*
         DC    AL1(7),CL7'IEF176I' WRITER WAITING FOR WORK
         DC    X'00200000'     - ROUTE CODE       11
         DC    X'00000000'     - DESCRIPTOR CODE  ROLL
*
         DC    AL1(7),CL7'IEF452I' JJJJJJJJ JOB FAILED JCL ERROR
         DC    X'40000000'     - ROUTE CODE       2
         DC    X'40000000'     - DESCRIPTOR CODE  NOROLL
*
         DC    AL1(7),CL7'IEF677I' WARNING MESSAGES(S) ISSUED
         DC    X'00200000'     - ROUTE CODE       11
         DC    X'00000000'     - DESCRIPTOR CODE  ROLL
*
         DC    AL1(7),CL7'IFB060E' LOGREC NEAR FULL
         DC    X'40000000'     - ROUTE CODE       2
         DC    X'40000000'     - DESCRIPTOR CODE  NOROLL
*
         DC    AL1(7),CL7'IGF514I' ERROR RECOVERY
         DC    X'40000000'     - ROUTE CODE       2
         DC    X'40000000'     - DESCRIPTOR CODE  NOROLL
*
         DC    AL1(7),CL7'IGF910W' ERROR RECOVERY
         DC    X'40000000'     - ROUTE CODE       2
         DC    X'40000000'     - DESCRIPTOR CODE  NOROLL
*
         DC    AL1(7),CL7'IGF931I' ERROR RECOVERY
         DC    X'40000000'     - ROUTE CODE       2
         DC    X'40000000'     - DESCRIPTOR CODE  NOROLL
*
         DC    AL1(7),CL7'IGF953I' ERROR RECOVERY
         DC    X'40000000'     - ROUTE CODE       2
         DC    X'40000000'     - DESCRIPTOR CODE  NOROLL
*
         DC    AL1(7),CL7'IGF955I' ERROR RECOVERY
         DC    X'40000000'     - ROUTE CODE       2
         DC    X'40000000'     - DESCRIPTOR CODE  NOROLL
*
         DC    AL1(7),CL7'IGF971I' ERROR RECOVERY
         DC    X'40000000'     - ROUTE CODE       2
         DC    X'40000000'     - DESCRIPTOR CODE  NOROLL
*
         DC    AL1(7),CL7'IGF972I' ERROR RECOVERY
         DC    X'40000000'     - ROUTE CODE       2
         DC    X'40000000'     - DESCRIPTOR CODE  NOROLL
*
         DC    AL1(7),CL7'IRA100I' SYSTEM RESOURCE MANAGER
         DC    X'40000000'     - ROUTE CODE       2
         DC    X'40000000'     - DESCRIPTOR CODE  NOROLL
*
         DC    AL1(7),CL7'IRA101I' SYSTEM RESOURCE MANAGER
         DC    X'40000000'     - ROUTE CODE       2
         DC    X'40000000'     - DESCRIPTOR CODE  NOROLL
*
         DC    AL1(7),CL7'IRA102I' SYSTEM RESOURCE MANAGER
         DC    X'40000000'     - ROUTE CODE       2
         DC    X'40000000'     - DESCRIPTOR CODE  NOROLL
*
         DC    AL1(7),CL7'IRA200I' SYSTEM RESOURCE MANAGER
         DC    X'40000000'     - ROUTE CODE       2
         DC    X'40000000'     - DESCRIPTOR CODE  NOROLL
*
         DC    AL1(7),CL7'IRA201I' SYSTEM RESOURCE MANAGER
         DC    X'40000000'     - ROUTE CODE       2
         DC    X'40000000'     - DESCRIPTOR CODE  NOROLL
*
         DC    AL1(7),CL7'IRA202I' SYSTEM RESOURCE MANAGER
         DC    X'40000000'     - ROUTE CODE       2
         DC    X'40000000'     - DESCRIPTOR CODE  NOROLL
*
         DC    AL1(7),CL7'IRA400I' SYSTEM RESOURCE MANAGER
         DC    X'40000000'     - ROUTE CODE       2
         DC    X'40000000'     - DESCRIPTOR CODE  NOROLL
*
         DC    AL1(7),CL7'IRA401I' SYSTEM RESOURCE MANAGER
         DC    X'40000000'     - ROUTE CODE       2
         DC    X'40000000'     - DESCRIPTOR CODE  NOROLL
*
         DC    AL1(7),CL7'IRA402I' SYSTEM RESOURCE MANAGER
         DC    X'40000000'     - ROUTE CODE       2
         DC    X'40000000'     - DESCRIPTOR CODE  NOROLL
*
         DC    AL1(7),CL7'IST133I' VTAM TERMINATING
         DC    X'40000000'     - ROUTE CODE       2
         DC    X'40000000'     - DESCRIPTOR CODE  NOROLL
*
         DC    AL1(7),CL7'#####D' TEST MESSAGE TO DELETE WTO
         DC    X'00000000'     - ROUTE CODE       0
         DC    X'00000000'     - DESCRIPTOR CODE  ROLL
*
         DC    AL1(7),CL7'#####R' TEST MESSAGE TO ROLL WTO
         DC    X'40000000'     - ROUTE CODE       2
         DC    X'00000000'     - DESCRIPTOR CODE  ROLL
*
         DC    AL1(7),CL7'#####N' TEST MESSAGE FOR NON-ROLL
         DC    X'40000000'     - ROUTE CODE       2
         DC    X'40000000'     - DESCRIPTOR CODE  NOROLL
*
         DC    AL1(7),CL7'#####Z' TEST MESSAGE FORCE ROUTCODE=11
         DC    X'00200000'     - ROUTE CODE       11
         DC    X'00000000'     - DESCRIPTOR CODE  ROLL
*
         DC    AL1(7),CL7'@@@@@@@' ETC..ETC..ETC..ETC
         DC    X'40000000'     - ROUTE CODE       2
         DC    X'40000000'     - DESCRIPTOR CODE  NOROLL
*
         DC    AL1(7),CL7'@@@@@@@'
         DC    X'40000000'     - ROUTE CODE
         DC    X'40000000'     - DESCRIPTOR CODE
*
         DC    AL1(7),CL7'@@@@@@@'
         DC    X'40000000'     - ROUTE CODE
         DC    X'40000000'     - DESCRIPTOR CODE
*
         DC    AL1(7),CL7'@@@@@@@'
         DC    X'40000000'     - ROUTE CODE
         DC    X'40000000'     - DESCRIPTOR CODE
TABLEEND DC    X'00'             END OF TABLE INDICATOR
         EJECT
*
* REGISTER EQUATES
*
R0       EQU   0                       REGISTER 0
R1       EQU   1                       REGISTER 1
R2       EQU   2                       REGISTER 2
R3       EQU   3                       REGISTER 3
R4       EQU   4                       REGISTER 4
R5       EQU   5                       REGISTER 5
R6       EQU   6                       REGISTER 6
R7       EQU   7                       REGISTER 7
R8       EQU   8                       REGISTER 8
R9       EQU   9                       REGISTER 9
R10      EQU   10                      REGISTER 10
R11      EQU   11                      REGISTER 11
R12      EQU   12                      REGISTER 12
R13      EQU   13                      REGISTER 13
R14      EQU   14                      REGISTER 14
R15      EQU   15                      REGISTER 15
         EJECT
*
*        CONSTANTS THAT REMAIN UNMODIFIED (NOT PART OF GETMAINED AREA)
*
         DS    0F
SUBPOOL  DC    AL1(230),AL3(WORKEND-WORK) SUBPOOL AND SIZE FOR GM
         LTORG
         SPACE 3
*
*        CONSTANTS THAT ARE MODIFIED (GETMAINED TO REMAIN RE-ENTRANT)
*
WORK     DS    0D                     START OF WORK AREA
USERID   DC    CL8' '                 TPUT NOTIFY ID
WORKEND  EQU   *                      END OF WORK AREA
*        THE FOLLOWING IS THE DSECT FOR THE WTO BUFFER
IEECUCM  DSECT
WTO      DS    CL128           MESSAGE TEXT
WTOCODES DS    CL8             ROUT/DISC CODES
         END
