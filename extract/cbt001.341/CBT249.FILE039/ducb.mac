*----------------------------------------------------------------------
*
*
*        THIS COMMAND PROCESSOR WILL DISPLAY UCB INFORMATION
*        TO THE TSO USER.
*
*----------------------------------------------------------------------
         EJECT
DUCB     $PROLOG
         EJECT
*----------------------------------------------------------------------
*
*        RETRIEVE INITIALIZATION PARMS (CPPL)
*
*----------------------------------------------------------------------
ENTRY010 DS    0H
         LR    R2,R1              SAVE CPPL POINTER
         USING CPPL,R2            PROVIDE ADDRESSABILITY
         MVC   PPLUPT,CPPLUPT     COPY UPT ADDRESS
         MVC   PPLECT,CPPLECT     COPY ECT ADDRESS
         MVC   PPLCBUF,CPPLCBUF   COPY ADDRESS OF COMMAND BUF
         DROP  R2
EXIT010  EQU   *
         B     ENTRY020
         LTORG
         EJECT
*----------------------------------------------------------------------
*
*        LINK TO PARSE TO RETRIEVE COMMAND DATA
*
*----------------------------------------------------------------------
ENTRY020 DS    0H
         LA    R1,PPLUPT          PROVIDE LIST FOR PARSE
         LINK  EP=IKJPARS         PARSE COMMAND
         L     R3,PPLANSR         GET POINTER TO ANSWER AREA
         USING IKJPARMD,R3        PROVIDE ADDRESSABILITY
EXIT020  EQU   *
         B     ENTRY030
         LTORG
         EJECT
*----------------------------------------------------------------------
*
*        PROCESS USER PARAMETERS FROM PARSE (UCB ADDR AND COUNT)
*
*----------------------------------------------------------------------
ENTRY030 DS    0H
         L     R1,IKJOPT1         GET POINTER TO OPERAND
         LH    R2,IKJOPT1+4       GET SIZE OF OPERAND
         CH    R2,=H'3'           CORRECT LENGTH ?
         BNE   ERROR1             NO - ERROR
         MVC   UCBNME,0(R1)       SAVE
         OC    UCBNME,=3C' '      INSURE UPPER CASE
         L     R1,IKJOPT2         GET POINTER TO OPERAND
         LH    R2,IKJOPT2+4       GET SIZE OF OPERAND
         CH    R2,=H'1'           SINGLE CHARACTER ENTERED?
         BNE   AAA030             NO - DOUBLE
         MVC   COUNT+1(1),0(R1)   SAVE
         B     BBB030             BRANCH AROUND DOUBLE
AAA030   EQU   *
         MVC   COUNT(2),0(R1)     SAVE
BBB030   EQU   *
         SR    R14,R14            CLEAR WORK REGISTER
         ICM   R14,1,=X'C0'       SIGN DIGIT  00 00 00 C0
         ICM   R14,6,COUNT        COUNT       00 F1 F1 C0
         SRDL  R14,12             MOVE DIGIT  00 00 0F 1F-1C XX XX XX
         SRL   R14,4              STRIP       00 00 00 F1-1C XX XX XX
         SRDL  R14,4              MOVE DIGIT  00 00 00 0F-11 CX XX XX
         SRL   R15,20             SHIFT       00 00 00 0F-00 00 01 1C
         ST    R15,DBLWRD+4       PLACE INTO DOUBLEWORD
         CVB   R11,DBLWRD         CONVERT TO HEX
EXIT030  EQU   *
         B     ENTRY040
         DROP  R3                 DROP ADDRESSABILITY
         LTORG
         EJECT
*----------------------------------------------------------------------
*
*        LOCATE THE NAMED UCB
*
*----------------------------------------------------------------------
ENTRY040 DS    0H
         L     R2,16              ADDR OF CVT
         L     R2,40(R2)          ADDR OF UCB LOOKUP TABLE
LOOP040A EQU   *
         XR    R3,R3              CLEAR FOR ICM
         ICM   R3,3,0(R2)         PICK UP UCB ADDR
         BZ    BBB040             NO UCB HERE
         CLC   UCBNME,13(R3)      RIGHT UCB ?
         BE    EXIT040            YES - OK
BBB040   EQU   *
         LA    R2,2(R2)           NEXT ENTRY
         CLC   0(2,R2),=X'FFFF'   END OF TABLE?
         BE    ERROR2             YES - INVALID UCB ADDR
         B     LOOP040A
EXIT040  EQU   *
         B     ENTRY050
         LTORG
         EJECT
*----------------------------------------------------------------------
*
*        DISPLAY UCB DATA - HEX FORMAT
*
*----------------------------------------------------------------------
ENTRY050 DS    0H
         TPUT  BLANKS,80          PUT OUT A BLANK LINE BETWEEN UCBS
         ST    R3,UCBADDR         SAVE THE ADDR OF THE UCB
         MVC   UCBNME,13(R3)      MOVE UCB NAME
         LA    R6,3               LOOP CONTROL (LINES)
LOOP050A LA    R4,OUTBUF          OUTPUT BUFFER
         LA    R5,4               LOOP CONTROL (FIELDS/LINE)
LOOP050B EQU   *
         UNPK  0(9,R4),0(5,R3)    UNPACK 4 BYTES + 1
         TR    0(8,R4),TBL-240    MAKE PRINTABLE
         MVI   8(R4),C' '         BLANK OUT JUNK
         LA    R4,9(R4)           BUMP BUFFER
         LA    R3,4(R3)           BUMP UCB POINTER
         BCT   R5,LOOP050B        TR NEXT WORD
         TPUT  UCBNME,80          WRITE LINE OF DATA
         MVC   UCBNME,=CL3' '     CLEAR UCB NAME FOR NEXT LINE
         BCT   R6,LOOP050A        NEXT LINE
         BAL   R14,ENTRY100       DECODE USEFUL UCB INFO AND DISPLAY
LOOP050C LA    R2,2(R2)           NEXT UCB ENTRY
         CLC   0(2,R2),=X'FFFF'   END OF TABLE?
         BE    RETURN             YES - NO MORE TO DISPLAY
         XR    R3,R3              CLEAR FOR ICM
         ICM   R3,3,0(R2)         PICK UP UCB ADDR
         BZ    LOOP050C           NO UCB HERE
         BCT   R11,ENTRY050       PROCESS NEXT UCB
EXIT050  EQU   *
         B     RETURN
         LTORG
         EJECT
*----------------------------------------------------------------------
*
*        DECODE USEFUL UCB DATA AND DISPLAY
*
*----------------------------------------------------------------------
ENTRY100 DS    0H
         ST    R14,ST100          SAVE RETURN ADDR
         LA    R3,UCBADDR         ADDR OF ADDR OF UCB
         MVC   OUTBUF(16),=C'ADDRESS OF UCB: '
         UNPK  OUTBUF+16(9),0(5,R3)  UNPACK 4 BYTES + 1
         TR    OUTBUF+16(8),TBL-240  MAKE PRINTABLE
         MVC   OUTBUF+24(56),BLANKS  BLANK OUT JUNK
         TPUT  UCBNME,80          DISPLAY DATA
         MVC   OUTBUF(80),BLANKS  CLEAR BUFFER
AAA100   EQU   *
         LA    R1,UCBTYPES        ADDR OF UCB TYPE TABLE
         L     R7,UCBADDR         ADDR OF UCB
         USING UCBCMSEG,R7        ADDRESSABLITY OF DSECT
LOOP100A EQU   *
         CLC   UCBTYP+2(2),0(R1)  MATCH ?
         BE    BBB100             YES
         CLI   0(R1),X'FF'        END OF TABLE ?
         BE    BBB100             YES
         LA    R1,8(R1)           NO - BUMP TO NEXT TYPE IN TABLE
         B     LOOP100A
BBB100   EQU   *
         MVC   OUTBUF(13),=C'DEVICE TYPE: '
         MVC   OUTBUF+13(6),2(R1)   MOVE DEVICE TYPE
         CLC   6(2,R1),=C'MB'       CHECK MODEL BITS ?
         BNE   CCC100               NO - OK
         MVC   OUTBUF+17(2),=C'-1'  DEFAULT
         TM    UCBTBYT1,X'11'       MODEL 1 ?
         BO    CCC100               YES - OK
         MVC   OUTBUF+17(2),=C'-2'  NO - MUST BE A MODEL 2
CCC100   EQU   *
         TPUT  UCBNME,80
         MVC   OUTBUF,BLANKS
DDD100   EQU   *
         LA    R8,OUTBUF            ADDR OF OUTPUT BUFFER
         MVC   0(6,R8),=C'ONLINE'   DEFAULT
         TM    UCBSTAT,UCBONLI      IS DEVICE ONLINE ?
         BO    EEE100               YES - OK
         MVC   0(7,R8),=C'OFFLINE'
         LA    R8,1(R8)             BUMP POINTER
EEE100   EQU   *
         LA    R8,7(R8)             BUMP POINTER
         MVC   0(9,R8),=C'ALLOCATED'
         TM    UCBSTAT,UCBALOC      IS DEVICE ALLOCATED ?
         BO    FFF100               YES - OK
         MVC   0(9,R8),=C'CONSOLE  '
         TM    UCBSTAT,UCBSYSR      IS THIS A CONSOLE ?
         BO    FFF100               YES - OK
         MVC   0(13,R8),=C'NOT-ALLOCATED'
         LA    R8,4(R8)             BUMP POINTER
FFF100   EQU   *
         LA    R8,10(R8)            BUMP POINTER
         TM    UCBFLA,UCBBSY        IS DEVICE BUSY BIT ON ?
         BZ    GGG100               NO - OK
         MVC   0(4,R8),=C'BUSY'     YES - DISPLAY IT
         LA    R8,5(R8)             BUMP POINTER
GGG100   EQU   *
         TM    UCBFLA,UCBNRY        IS NOT-READY BIT ON ?
         BZ    HHH100               NO - OK
         MVC   0(9,R8),=C'NOT-READY'   YES - DISPLAY IT
         LA    R8,10(R8)            BUMP POINTER
HHH100   EQU   *
         TM    UCBFLC,UCBITF        IS THE INTERCEPT BIT ON ?
         BZ    III100               NO - OK
         MVC   0(10,R8),=C'INTCPT-BIT'  YES - DISPLAY IT
         LA    R8,11(R8)            BUMP POINTER
III100   EQU   *
         TM    UCBFLC,UCBIVRS       WAS INTERVENTION REQ MSG ISSUED ?
         BZ    JJJ100               NO - OK
         MVC   0(8,R8),=C'INTV-REQ'    YES - DISPLAY IT
         LA    R8,9(R8)             BUMP POINTER
JJJ100   EQU   *
         TM    UCBFLC,UCBTICBT      CHANNEL/DEVICE END PENDING ?
         BZ    KKK100               NO - OK
         MVC   0(10,R8),=C'CH/DEV-END'  YES - DISPLAY IT
         LA    R8,11(R8)            BUMP POINTER
KKK100   EQU   *
         TPUT  UCBNME,80            DISPLAY LINE OF DATA
         MVC   OUTBUF(80),BLANKS    CLEAR BUFFER
LLL100   EQU   *
         TM    UCBTBYT3,UCB3TAPE    TAPE DEVICE ?
         BO    MMM100               YES - DISPLAY CURRENT VOL SER
         TM    UCBTBYT3,UCB3DACC    DASD DEVICE ?
         BO    MMM100               YES - DISPLAY CURRENT VOL SER
         B     EXIT100              NO - DONE
MMM100   EQU   *
         MVC   OUTBUF(8),=C'VOL=SER='
         MVC   OUTBUF+8(6),UCBVOLI
         TPUT  UCBNME,80            DISPLAY LINE OF DATA
         MVC   OUTBUF(80),BLANKS    CLEAR BUFFER
EXIT100  EQU   *
         L     R14,ST100            RETURN ADDR
         BR    R14                  RETURN
         LTORG
ST100    DC    F'-1'
         EJECT
*----------------------------------------------------------------------
RETURN   DS    0H
EXIT     L     R15,RC             RESTORE RETURN CODE
         $EPILOG
         EJECT
*----------------------------------------------------------------------
ERROR1   DS    0H
         TPUT  MSG1,79
         B     RETURN
MSG1     DC    CL79'INVALID UCB ADDR LENGTH, MUST BE 3 CHARACTERS'
*----------------------------------------------------------------------
ERROR2   DS    0H
         TPUT  MSG2,79
         B     RETURN
MSG2     DC    CL79'INVALID UCB ADDR'
         EJECT
*----------------------------------------------------------------------
*
*        UCBTYPES TABLE
*
*----------------------------------------------------------------------
UCBTYPES DS    0F
*    MB INDICATES THAT THE MODEL BIT AT +'10' MUST BE CHECKED
*
         DC    X'0804',C'2501  '    READER
         DC    X'0806',C'3505  '    READER
         DC    X'0808',C'1403  '    PRINTER
         DC    X'0809',C'3211  '    PRINTER
         DC    X'080C',C'3525  '    PUNCH
         DC    X'1008',C'3066  '    3168 DISPLAY CONSOLE
         DC    X'1009',C'3277MB'    CRT
         DC    X'100A',C'3284MB'    PRINTER
         DC    X'100B',C'3286MB'    PRINTER
         DC    X'2006',C'2305-1'    DRUM
         DC    X'2007',C'2305-2'    DRUM
         DC    X'2008',C'2314  '    DISK
         DC    X'2009',C'3330  '    DISK
         DC    X'200A',C'3340  '    DISK
         DC    X'200B',C'3350  '    DISK
         DC    X'200D',C'3330-1'    DISK
         DC    X'4014',C'2955  '    DATA LINK
         DC    X'8003',C'3400  '    TAPE
         DC    X'FFFF',C'XXXXXX'
         EJECT
DBLWRD   DC    D'0'               WORK AREA
ECB      DC    F'0'               DUMB ECB FOR PARSE
PPLANSR  DC    F'0'               PARSE ANSWER AREA POINTER
RC       DC    F'0'               RETURN CODE SAVE AREA
*----------------------------------------------------------------------
PPLUPT   DC    F'0'               USER PROFILE TABLE POINTER
PPLECT   DC    F'0'               ENVIRONMENT CONTROL TABLE
PPLECB   DC    A(ECB)             ECB POINTER
PPLPCL   DC    A(IKJPCL)          ADDRESS OF IKJPARM
PPLANS   DC    A(PPLANSR)         PLACE TO PUT ANSWER
PPLCBUF  DC    F'0'               POINTER TO COMMAND BUFFER
PPLUWA   DC    A(0)               USER WORK AREA POINTER
COUNT    DC    CL2'00'            COUNT FOR DISPLAYS
BLANKS   DC    80C' '
UCBADDR  DC    F'0'
UCBNME   DC    CL3' '             UCB NAME FOR SEARCH
PAD      DC    CL3' '             PAD
OUTBUF   DC    CL80' '
*----------------------------------------------------------------------
TBL      DC    C'0123456789ABCDEF'
*----------------------------------------------------------------------
         LTORG
         EJECT
IKJPCL   IKJPARM
IKJOPT1  IKJIDENT  STRING,PROMPT='UCB ADDRESS',                        X
               FIRST=ANY,OTHER=ANY,MAXLNTH=3,                          X
               HELP=('ADDRESS OF UCB TO BE DISPLAYED     ')
IKJOPT2  IKJIDENT  STRING,DEFAULT='1',                                 X
               FIRST=NUMERIC,OTHER=NUMERIC,MAXLNTH=2
         IKJENDP
         EJECT
         IKJCPPL
         EJECT
         IEFUCBOB
         END
