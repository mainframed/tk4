*****                                                             *****
*  THIS PROGRAM WILL PRINT AND/OR PUNCH THE INDEXES,ALIASES,CVOL      *
*  POINTERS,AND DATA SETS IN ANY ONE SYSCATLG DATA SET. PUNCHING      *
*  IS IN THE FORM OF CONTROL CARDS FOR IEHPROGM TO RECONSTRUCT THE    *
*  CATALOG OR TO REORGANIZE IT. LISTING ALSO INCLUDES SOME STATIS-    *
*  TICAL INFORMATION ABOUT THE CATALOG.                               *
*****                                                             *****
         SPACE 3
*  PROGRAM UPDATED TO WORK UNDER MVS AND MVT.                         *
*  ONLY WORKS FOR OS CATALOGS NOT FOR VSAM.....                       *
*****                                                             *****
         SPACE 3
*  EXAMPLE:                                                           *
*       //RECAP    EXEC  PGM=RECAP,REGION=128K
*       //SYSPRINT DD SYSOUT=A
*       //SYSPUNCH DD DSN=SYS1.BACKUP.CATLG.VOLUME(+1),UNIT=TAPE,
*       //            DISP=(,CATLG)
*       //CATALOG  DD DSN=SYSCTLG,DISP=SHR,UNIT=SYSDA,VOL=SER=VOLID
*       //SYSIN    DD *
*       PTPCH VOLID
*
*****                                                             *****
RECA     TITLE 'REORGANIZE CATALOG PROGRAM WITH LIST FEATURE'
RECAP    CSECT
R01      EQU   1                            *EQUATE REGISTERS
R02      EQU   2
R03      EQU   3
R04      EQU   4
R05      EQU   5
R06      EQU   6
R07      EQU   7
R08      EQU   8
R09      EQU   9
R12      EQU   12
R14      EQU   14
R15      EQU   15
         EJECT
*
* SYMBOLIC REGISTER NOTATIONS(SPECIAL)
*
RETURNR  EQU   7    *RETURN ADDRESS LINKAGE REGISTER
INDEXPTR EQU   8    *BLOCK AREA INDEX POINTER
PCHPTR   EQU   9    *PUNCH LINE INDEX
QUEUEPTR EQU   12   *QUEUE TABLE INDEX
*
* USING STATEMENTS FOR DSECTS
*
         USING ENTDSECT,INDEXPTR
         USING QELEMENT,QUEUEPTR
         USING VOLINFO,R03
*
*
*
*
         USING *,15                         *ESTABLISH ADDRESSABILITY
RECAPPER DS    0H
         STM   14,12,12(13)                 *SAVE REGS
         DROP  15
         BALR  10,0                         *ESTABLISH REG 10 AS BASE
B0002    EQU   *
         USING *,10
         LR    11,13                        *SAVE SAVE AREA PTR
         LA    13,A0002                     *SET PTR TO NEW SAVE AREA
         ST    13,8(11)
         ST    11,4(13)
         LA    11,B0002+4095                *ESTABLISH REG 11 AS BASE
         USING B0002+4095,11
         B     C0002
A0002    DC    18F'+0'                      *SAVE AREA
C0002    EQU   *
         B     OPENFILE
         DC    C'RECAP '                    *PROGRAM NAME
         DC    C'V01L01'                    *VERSION AND LEVEL
OPENFILE OPEN  (SYSIN,,SYSPRINT,(OUTPUT))   *OPEN  SYSIN AND SYSPRINT
         OPEN  (CATDCB)       *OPEN THE CATALOG
GETCARD  GET   SYSIN,CARDHOLD              *READ CONTROL CARD
CHKFUNCT CLC   FUNCTION,=C'PRINT'           *PRINT ONLY
         BE    READVICE
         CLC   FUNCTION,=C'PUNCH'           *PUNCH ONLY
         BNE   NXTCHK
         MVI   PCHSW,C'1'                   *PUNCH SW ON
         B     OPENPCH
NXTCHK   CLC   FUNCTION,=C'PTPCH'           *PRINT AND PUNCH
         BNE   ERR01RTN                     *INVALID FUNCTION
         MVI   PTPCHSW,C'1'                 *SET SWITCH ON
OPENPCH  OPEN  (SYSPUNCH,(OUTPUT))           *OPEN PUNCH
READVICE MVC   TTR,=X'000001'               *ADDR OF FIRT BLOCK
         BAL   RETURNR,READBLK              *READ FIRST BLOCK
         LA    INDEXPTR,BLKAREA+2           *POINT TO V.I.C.E.
         CLI   PCHSW,C'1'                   *CHECK PUNCH-ONLY
         BE    LOCNXTEN
         BAL   RETURNR,HEADING1             *PRINT PAGE HEADING
         MVC   FORMCTRL,SPACE3
         MVC   PRINTWRK(L'STATHEAD),STATHEAD
         BAL   RETURNR,PRINT                *PRINT STAT HEADING
         MVC   FORMCTRL,SPACE2
         MVC   PRINTWRK+9(6),VOLIDHDG
         MVC   PRINTWRK+19(17),BLKSUHDG
         MVC   PRINTWRK+39(17),BLKSLHDG
         BAL   RETURNR,PRINT                *PRINT STAT COL HEADINGS
         MVC   FORMCTRL,SPACE1
         MVC   PRINTWRK+9(6),VOLSERNO
         LH    R03,16(INDEXPTR)             *TT OF FIRST AVAILABLE BLK
         MH    R03,=H'28'   28 BLK/TRK ON 3330-1
         SR    R04,R04                      *CLEAR REG
         IC    R04,18(INDEXPTR)             *R OF 1ST AVAILABLE BLK
         AR    R03,R04                      *TOTAL NO OF BLKS USED+1
         BCTR  R04,0                        *DECREMENT BY ONE
         CVD   R03,BLKSUSED
         OI    BLKSUSED+7,X'0F'             *CHANGE SIGN
         UNPK  PRINTWRK+26(5),BLKSUSED+5(3) *MOVE BLKS USED TO PRINT
         LH    R04,12(INDEXPTR)             *LAST TT OF CATALOG
         SR    R05,R05                      *CLEAR REG
         IC    R05,14(INDEXPTR)             *LAST R
         MH    R04,=H'28'   28 BLKS/TRK ON 3330-1
         AR    R04,R05                      *TOTAL NO OF BLKS IN CATLG
         SR    R04,R03                      *BLKS LEFT
         CVD   R04,BLKSLEFT
         OI    BLKSLEFT+7,X'0F'             *CHANGE SIGN
         UNPK  PRINTWRK+46(5),BLKSLEFT+5(3) *MOVE BLKS LEFT TO PRINT
         BAL   RETURNR,PRINT                *PRINT STATISTICS
         BAL   RETURNR,HEADING2             *PRINT ENTRY HEADINGS
         EJECT
*
* LOCATE NEXT ENTRY ROUTINE-INDEXPTR MUST BE SET AT FIRST BYTE OF LAST
*                           ENTRY EXAMINED-REGISTER 3 IS USED
*
LOCNXTEN SR    R03,R03                      *CLEAR REG
         IC    R03,ENTHWCT                  *NO OF HALFWORDS LEFT
         SLL   R03,1                        *MULTIPLY BY 2
         LA    INDEXPTR,12(R03,INDEXPTR)    *LOCATE NEXT ENTRY
         CLC   ENTNAME,LINKENT              *CHK FOR LINK ENTRY
         BNE   IXPTRCHK
         CLC   ENTTTR,=X'000000'            *CHK FOR END-OF-CHAIN
         BE    CHAINEND
         MVC   TTR,ENTTTR                   *ADDRESS OF NEXT BLK
         BAL   RETURNR,READBLK              *READ NEXT BLOCK IN CHAIN
         LA    INDEXPTR,BLKAREA+2           *SET INDEX POINTER
         CLC   ENTNAME,CNTRLNAM             *CHK FOR INDEX CTRL ENTRY
         BE    ERR02RTN                     *WRONG BLOCK
*
* DETERMINE TYPE OF ENTRY
*
IXPTRCHK CLI   ENTHWCT,X'00'                *CHK FOR INDEX POINTER
         BE    IXPTRRTN
DSCVOLCK CLC   ENTTTR,=X'000000'            *CHK FOR DS PTR OR CVOL PTR
         BNE   VCBPTCHK
         CLI   ENTHWCT,X'03'                *CHK FOR CVOL PTR
         BE    CVOLPRTN
         CLI   ENTHWCT,X'05'
         BE    CVOLPRTN
         B     DSPTRRTN
VCBPTCHK CLI   ENTHWCT,X'01'                *CHK FOR VOL CNTRL BLK PTR
         BE    VCBPTRTN
GENIXCHK CLI   ENTHWCT,X'02'                *CHK FOR GENERATION INDEX
         BE    GENIXRTN
ALIASCHK CLI   ENTHWCT,X'04'                *CHK FOR ALIAS
         BE    ALIASRTN
         B   DSPTRRTN    ASSUME DATA SET ENTRY
*
* READ CATALOG BLOCK ROUTINE
*
READBLK  EQU   *
         POINT CATDCB,TTR
         READ  CATDECB,SF,CATDCB,BLKAREA
         CHECK CATDECB
         BR    RETURNR       RETURN TO CALLER
*
* PRINT PAGE HEADING ROUTINE
*
HEADING1 MVC   FORMCTRL,SKPTOCH1
         MVC   PRINTWRK+60-L'HDGLINE1/2(L'HDGLINE1),HDGLINE1
         ST    RETURNR,SAVERTN1             *SAVE RETURN ADDRESS
         B     NXTINSTN
SAVERTN1 DS    F                            *REGISTER SAVE AREA
NXTINSTN AP    PAGENUMP,=P'+1'              *ADD ONE TO PAGE COUNTER
         UNPK  PAGENUM,PAGENUMP
         OI    PAGENUM+3,X'F0'              *CLEAR SIGN
         MVC   PRINTWRK+109(9),PAGEID
         BAL   RETURNR,PRINT                *PRINT HEADING LINE 1
         MVC   PRINTWRK+56-L'HDGLINE2/2(L'HDGLINE2),HDGLINE2
         MVC   PRINTWRK+58+L'HDGLINE2/2(6),VOLSERNO
         MVC   FORMCTRL,SPACE1
         BAL   RETURNR,PRINT                *PRINT HEADING LINE 2
         L     RETURNR,SAVERTN1             *RESTORE RETURN ADDRESS
         BR    RETURNR                      *RETURN
*
* PRINT ROUTINE
*
PRINT    PUT   SYSPRINT,PRINTREC             WRITE PRINT LINE
         SR    R02,R02                      *CLEAR REG
         TRT   FORMCTRL,TABLE-64            *GET LINE COUNT
         CVD   R02,LINECT08
         AP    LINECTR,LINECT08+7(1)        *INCREMENT CTR
CHKLIMIT MVI   PRINTREC,C' '
         MVC   PRINTWRK,PRINTWRK-1          *CLEAR PRINT AREA
         CP    LINECTR,=P'60'               *CHK FOR LIMIT
         BL    PAGEOK
         ST    RETURNR,SAVERTN2             *SAVE RETURN ADDRESS
         B     FORWARD
SAVERTN2 DS    F                            *REGISTER SAVE AREA
FORWARD  ZAP   LINECTR,=P'0'                *CLEAR LINE COUNTER
         BAL   RETURNR,HEADING1             *PAGE HEADINGS
         BAL   RETURNR,HEADING2             *COLUMN HEADINGS
         L     RETURNR,SAVERTN2             *RESTORE RETURN ASDRESS
PAGEOK   BR    RETURNR                      *RETURN
*
* COLUMN HEADING ROUTINE
*
HEADING2 MVC   FORMCTRL,SPACE3
         MVC   PRINTWRK(L'ENTRYHDG),ENTRYHDG
         ST    RETURNR,SAVERTN3             *SAVE RETURN ADDRESS
         B     AROUND
SAVERTN3 DS    F                            *REG SAVE AREA
AROUND   BAL   RETURNR,PRINT
         MVC   FORMCTRL,SPACE2
         MVC   PRINTWRK+9(4),NAMEHDG
         MVC   PRINTWRK+49(10),TYPEHDG
         MVC   PRINTWRK+63(6),DEVICHDG
         MVC   PRINTWRK+73(6),VOLIDHDG
         MVC   PRINTWRK+82(6),SEQNOHDG
         MVC   PRINTWRK+91(8),ALIASHDG
         BAL   RETURNR,PRINT                *PRINT COLUMN HEADINGS
         BAL   RETURNR,PRINT                *BLANK LINE
         L     RETURNR,SAVERTN3             *RESTORE RETURN ADDRESS
         BR    RETURNR                      *RETURN
         EJECT
*
* INDEX POINTER ENTRY ROUTINE
*
IXPTRRTN MVI   CATLGSW,C'0'                 *TURN SWITCH OFF
         L     R03,NOQENTS
         AH    R03,=H'1'                    *ADD 1 TO NO IN QUEUE
         ST    R03,NOQENTS
         MH    R03,=H'14'                   *MULTIPLY BY ELEMENT LGTH
         LA    QUEUEPTR,QTABLE(R03)         *LOCATE 1ST AVAILABLE SLOT
         MVC   QELTTR,TTR                   *SAVE ADDRESS OF BLK
         LA    R03,BLKAREA
         MVC   QELNAME,ENTNAME              *SAVE INDEX NAME
         MVC   TTR,ENTTTR                   *TTR OF NEXT BLOCK TO READ
         SR    INDEXPTR,R03                 *DISP FROM END OF BLOCK
         STH   INDEXPTR,QELDISP             *SAVE DISP IN QUEUE TABLE
         BAL   RETURNR,READBLK              *READ NEXT BLOCK IN CHAIN
FRSTENCK LA    INDEXPTR,BLKAREA+2           *SET UP ENTRY PTR
         CLC   ENTNAME,CNTRLNAM             *CHK FOR INDEX CNTRL ENTRY
         BNE   ERR06RTN                     *NO INDEX CNTRL ENTRY
         BE    LOCNXTEN
*
* CVOL POINTER ROUTINE
*
CVOLPRTN CLI   PCHSW,C'1'                   *CHK FOR PUNCH ONLY
         MVI   CATLGSW,C'0'                 *TURN CATLG SWITCH OFF
         BE    PCHCVOLP
         MVC   PRINTWRK(8),ENTNAME
         MVC   PRINTWRK+50(8),=C'CVOL PTR'
         MVC   PRINTWRK+73(6),CVOLSRNO
         CLI   PTPCHSW,C'1'                 *CHK FOR PUNCHING
         BNE   NOPUNCH
PCHCVOLP MVC   OPCODE,=C'CONNECT'           *BUILD CONNECT CARD
         LA    PCHPTR,PARMS                 *SET UP PUNCH LINE PTR
         MVC   0(6,PCHPTR),=C'INDEX='       *INDEX PARAMETER
         LA    PCHPTR,6(PCHPTR)             *INCREMENT PTR
         LA    R03,ENTNAME
         LR    R06,PCHPTR
         BAL   RETURNR,MOVERTN              *MOVE NAME TO PUNCH AREA
         AR    PCHPTR,R05                   *INCREMENT PTR
         MVI   0(PCHPTR),C','               *COMMA
         LA    PCHPTR,1(PCHPTR)             *INCREMENT PTR
         MVC   0(4,PCHPTR),=C'VOL='         *VOL PARAMETER
         LA    PCHPTR,4(PCHPTR)
         LA    R01,DEVCDTBL
TESTLOOP CLC   0(4,R01),CVOLDEVC
         BE    TESTHIT
         LH    R02,4(R01)
         LA    R01,6(R02,R01)
         CLC   0(4,R01),LSTENTRY
         BE    NODEVICE
         B     TESTLOOP
NODEVICE LA    PCHPTR,4(PCHPTR)
         MVI   TESTSW,C'1'
         B     CONTINUE
TESTHIT  B     BYMOVE
MOVEINTO MVC   0(0,PCHPTR),6(R01)
MOVEDEV  MVC   PRINTWRK+63(0),6(R01)
BYMOVE   LH    R02,4(R01)
         BCTR  R02,0
         EX    R02,MOVEINTO
         EX    R02,MOVEDEV
         AH    R02,=H'1'
         LA    PCHPTR,0(R02,PCHPTR)
CONTINUE BAL   RETURNR,PRINT
         MVI   0(PCHPTR),C'='
         LA    PCHPTR,1(PCHPTR)
         MVC   0(6,PCHPTR),CVOLSRNO
         LA    PCHPTR,6(PCHPTR)
         MVI   0(PCHPTR),C','
         LA    PCHPTR,1(PCHPTR)
         MVC   0(5,PCHPTR),=C'CVOL='        *CVOL PARAMETER
         MVC   5(5,PCHPTR),=C'3330='
         CLI   NEWVOLSR,X'40'           COMPARE FOR ALTERNATE CVOL
         BNE   INSERT
         MVC   10(6,PCHPTR),VOLSERNO
         B     FIXED
INSERT   MVC   10(6,PCHPTR),NEWVOLSR    INSERT ALTERNATE VOLUME IN CVOL
FIXED    MVI   SORTCODE,C'1'
         BAL   RETURNR,COUNTRTN
         BAL   RETURNR,PUNCH                *PUNCH CONNECT CARD
         CLI   TESTSW,C'1'
         BNE   NOPUNCH
         MVC   PRINTWRK(30),=C'DEVICE TYPE NOT FOUND IN TABLE'
         BAL   RETURNR,PRINT
         MVC   PRINTWRK(26),=C'SPACE PROVIDED IN CARD NO.'
         MVC   PRINTWRK+27(8),SORTCODE
         MVC   PRINTWRK+36(27),=C'FOR 4 CHARACTER DEVICE NAME'
         BAL   RETURNR,PRINT
         MVI   TESTSW,C'0'
         MVC   RTNCODE,=X'00000004'
NOPUNCH  B     LOCNXTEN                     *LOCATE NEXT ENTRY
         EJECT
*
*   SORT COUNTER ROUTINE
*
COUNTRTN UNPK  SORTCODE+1(7),SRTCOUNT       *SORT COUNT IN COLS 74-80
         OI    SORTCODE+7,X'F0'
         AP   SRTCOUNT,=P'1'                *ADD ONE TO COUNT
         BR    RETURNR
         EJECT
*
* NAME MOVE ROUTINE
*
MOVERTN  TRT   0(8,R03),TRANSTBL            *LOOK FOR DELIMITER
         BC    7,NOT8CHAR                   *BRANCH IF NOT 8 CHAR NAME
         L     R05,=F'7'                    *MACHINE LGTH FOR 8
         B     MOVENAME
NOT8CHAR LR    R05,R01
         SR    R05,R03                      *COMPUTE NAME LGTH
         BCTR  R05,0                        *ADJUST TO MACH LGTH
         B     MOVENAME
NAMEMOVE MVC   0(0,R06),0(R03)
MOVENAME EX    R05,NAMEMOVE                 *MOVE NAME
         AH    R05,=H'1'                    *READJUST LGTH TO ACTUAL
         BR    RETURNR
*
* PUNCH ROUTINE
*
PUNCH    PUT   SYSPUNCH,PUNCHREC             *PUNCH CARD OUT
         MVI   PUNCHREC,C' '
         MVC   PUNCHREC+1(79),PUNCHREC      *CLEAR PUNCH AREA
         BR    RETURNR
         EJECT
*
* ALIAS ROUTINE
*
ALIASRTN CLI   PCHSW,C'1'                   *CHK FOR PUNCH ONLY
         MVI   CATLGSW,C'0'                 *TURN CATLG SWITCH OFF
         BE    PCHALIAS                     *PUNCH ONLY
         MVC   PRINTWRK(8),ENTNAME
         MVC   PRINTWRK+51(5),=C'ALIAS'
         MVC   PRINTWRK+91(8),ALIASTRN
         BAL   RETURNR,PRINT                *PRINT ALIAS ENTRY
         CLI   PTPCHSW,C'1'                 *CHK FOR PUNCHING
         BNE   DONTPCH
PCHALIAS MVC   OPCODE,=C'BLDA   '           *BLDA CARD
         LA    PCHPTR,PARMS                 *SET PTR TO PARM FIELD
         MVC   0(6,PCHPTR),=C'INDEX='       *INDEX PARAMETER
         LA    PCHPTR,6(PCHPTR)             *INCREMENT PTR
         LR    R06,PCHPTR
         LA    R03,ALIASTRN
         BAL   RETURNR,MOVERTN              *MOVE TRUE NAME
         AR    PCHPTR,R05                   *INCREMENT PTR
         MVI   0(PCHPTR),C','               *COMMA
         MVC   1(5,PCHPTR),=C'CVOL='        *CVOL PARAMETER
         MVC   6(5,PCHPTR),=C'3330='
         CLI   NEWVOLSR,X'40'
         BNE   INSERT1
         MVC   11(6,PCHPTR),VOLSERNO
         B     FIXED1
INSERT1  MVC   11(6,PCHPTR),NEWVOLSR
FIXED1   LA    PCHPTR,17(PCHPTR)            *INCREMENT PTR
         MVI   0(PCHPTR),C','               *COMMA
         MVC   1(6,PCHPTR),=C'ALIAS='       *ALIAS PARAMETER
         LA    PCHPTR,7(PCHPTR)
         LR    R06,PCHPTR
         LA    R03,ENTNAME
         BAL   RETURNR,MOVERTN              *MOVE ALIAS NAME
         MVI   SORTCODE,C'5'                *BLDA CARDS 5TH
         BAL   RETURNR,COUNTRTN
         BAL   RETURNR,PUNCH                *PUNCH BLDA CARD
DONTPCH  B     LOCNXTEN                     XLOCATE NEXT ENTRY
*
* DATA SET POINTER ROUTINE
*
DSPTRRTN BAL   RETURNR,DSPRTRTN             *INITIAL PRINT ROUTINE
         LA    R03,14(INDEXPTR)             *ADDR OF FIRST VOL ENTRY
         LH    R04,DSPVOLCT                 *LOAD NO OF VOLUMES
         BAL   RETURNR,PRINTVOL             *PRINT VOL INFO
         CLI   PTPCHSW,C'1'                 *CHK FOR PUNCHING
         BE    PCHDSRTN                     *PUNCH ROUTINE
         B     LOCNXTEN                     *LOCATE NEXT ENTRY
*
* VOLUME CONTROL BLOCK POINTER ROUTINE
*
VCBPTRTN MVI   VCBSW,C'1'                   *SET SW ON
         BAL   RETURNR,DSPRTRTN             *INITIAL PRINT ROUTINE
         MVC   SAVETTR,TTR                  *SAVE BLOCK ADDR
         MVC   TTR,ENTTTR                   *ADDRESS OF VCB
         BAL   RETURNR,READBLK              *READ NEXT BLK
         LA    R03,BLKAREA                  *SET POINTER
         LH    R04,0(R03)                   *LOAD VOL COUNT
         LA    R03,2(R03)                   *INCREMENT PTR
         BAL   RETURNR,PRINTVOL             *PRINT VOL INFO
         CLI   PTPCHSW,C'1'                 *CHK FOR PUNCHING
         BE    PCHDSRTN                     *PUNCH ROUTINE
         MVC   TTR,SAVETTR                  *ADDRESS OF VCB PTR
         BAL   RETURNR,READBLK              *READ VCB PTR BLOCK
         MVI   VCBSW,C'0'
         B     LOCNXTEN                     *LOCATE NEXT ENTRY
         EJECT
*
* BUILD INDEX NAME ROUTINE
*
BLDNAME  LA    QUEUEPTR,QTABLE+14           *SET PTR ON 1ST ENTRY
         ST    RETURNR,SAVERTN4             *SAVE RETURN ADDR
         B     AHEAD
SAVERTN4 DS    F
AHEAD    L     R04,NOQENTS                  *SET LOOP COUNTER
         LA    R06,NAMEAREA                 *SET POINTER TO BUILD AREA
LOOPER   LA    R03,QELNAME                  *SET UP PTR TO NAME
         BAL   RETURNR,MOVERTN              *MOVE NAME TO BUILD AREA
         AR    R06,R05                      *INCREMENT PTR TO NAME AREA
         MVI   0(R06),C'.'                  *PERIOD
         LA    R06,1(R06)                   *INCREMENT PTR TO NAME AREA
         LA    QUEUEPTR,14(QUEUEPTR)        *INCREMENT QUEUE PTR
         BCT   R04,LOOPER
         LA    R04,NAMEAREA
         SR    R06,R04                      *COMPUTE LENGTH OF INDEX
         STH   R06,NAMELGTH
         L     RETURNR,SAVERTN4             *RESTORE RETURN ADDRESS
         BR    RETURNR                      *RETURN
*
* DSNAME INITIAL PRINT ROUTINE
*
DSPRTRTN ST    RETURNR,SAVERTN8
         B     OVERONE
SAVERTN8 DS    F
OVERONE  CLC   NOQENTS,=X'00000000'         *CHK FOR EMPTY QUEUE
         BE    CHKPCHSW
         CLI   CATLGSW,C'1'                 *CHK FOR NAME ALREADY BUILT
         BE    CHKPCHSW
         MVI   CATLGSW,C'1'                 *SET SW ON
         BAL   RETURNR,BLDNAME              *BUILD INDEX NAME
CHKPCHSW CLI   PCHSW,C'1'                   *CHK FOR PUNCH ONLY
         BE    PCHDSRTN
         MVC   PRINTWRK+50(8),=C'DATA SET'
         LA    R06,PRINTWRK                 *SET PTR TO PRINT AREA
         CLC   NAMELGTH,=X'0000'            *CHK FOR NO INDEX
         BE    MOVDSNAM
         LH    R05,NAMELGTH
         BCTR  R05,0                        *ADJUST TO MACH LGTH
         LA    R03,NAMEAREA
         EX    R05,NAMEMOVE                 *MOVE INDEX TO PRINT
         AH    R05,=H'1'                    *READ LGTH TO ACTUAL
         AR    R06,R05                      *INCREMENT PTR
MOVDSNAM LR    R03,INDEXPTR
         BAL   RETURNR,MOVERTN              *MOVE DSNAME TO PRINT
         CLI   0(INDEXPTR),C'G'             *CHK FOR GDG NAME
         BNE   NOTGDG
         CLI   5(INDEXPTR),C'V'
         BNE   NOTGDG
         TM    6(INDEXPTR),X'F0'
         BC    14,NOTGDG
         TM    7(INDEXPTR),X'F0'
         BC    14,NOTGDG
         XC    1(4,R06),=X'FFFFFFFF'        *CHANGE GEN. NO. TO TRUE
NOTGDG   L     RETURNR,SAVERTN8             *LOAD RETURN ADDRESS
         BR    RETURNR
*
* PRINT DATA SET VOLUME INFORMATION ROUTINE
*
PRINTVOL ST    RETURNR,SAVERTN5             *SAVE RETURN ADDRESS
         B     PAST
SAVERTN5 DS    F
PAST     CH    R04,=H'20'                   *CHK FOR MORE THAN 1 BLOCK
         BNH   ONEBLOCK
         LH    R05,=H'20'                   *LOAD LOOP COUNTER
         SH    R04,=H'20'                   *DECREMENT VOL COUNT
         B     STARTPRT
ONEBLOCK LR    R05,R04                      *LOAD LOOP COUNTER
         SR    R04,R04                      *CLEAR VOL COUNT REGISTER
STARTPRT LA    R01,DEVCDTBL                 *PTR TO DEVICE CODE TABLE
CHKNEXT  CLC   0(4,R01),VOLDEVCD            *COMPARE CODE TO TABLE
         BE    FIND                         *BRANCH IF EQUAL
         LH    R02,4(R01)                   *GET LGTH OF VAR TBL PART
         LA    R01,6(R02,R01)               *LOCATE NEXT ENTRY
         CLC   0(4,R01),LSTENTRY            *CHK FOR END OF TABLE
         BNE   CHKNEXT
         UNPK  PRINTWRK+62(9),VOLDEVCD(5)
         MVI   PRINTWRK+70,C' '
         B     MOVSERNO
FIND     B     AROUNDIT
MOVDEVCD MVC   PRINTWRK+63(0),6(R01)
AROUNDIT LH    R02,4(R01)                   *LENGTH OF DEVICE TYPE
         BCTR  R02,0                        *ADJUST TO MACH LGTH
         EX    R02,MOVDEVCD                 *MOVE DEVICE TYPE TO PRINT
MOVSERNO MVC   PRINTWRK+73(6),VOLSRNUM      *VOLUME SERIAL NO
         LH    R01,VOLSEQNO                 *SEQUENCE NO
         CVD   R01,SEQNUMCV
         OI    SEQNUMCV+7,X'0F'             *CLEAR SIGN TO F
         UNPK  PRINTWRK+82(6),SEQNUMCV+4(4)
         BAL   RETURNR,PRINT                *PRINT VOLUME INFO
         AH    R03,=H'12'                   *INCREMENT PTR
         BCT   R05,STARTPRT                 *REPEAT
         C     R04,=F'0'                    *CHK FOR MOVE VOL CTRL BLKS
         BE    FINISHED
         MVC   TTR,10(R03)                  *ADDRESS OF NEXT BLK
         BAL   RETURNR,READBLK              *READ NEXT BLK
         LA    R03,BLKAREA+2                *ADDRESS OF 1ST ENTRY
         B     PAST                         *REPEAT
FINISHED L     RETURNR,SAVERTN5             *RESTORE RETURN ADDRESS
         BR    RETURNR                      *RETURN
*
* DATA SET CATLG CARD PUNCH ROUTINE
*
PCHDSRTN MVC   OPCODE,=C'CATLG  '           *CATLG CARD
         LA    PCHPTR,PARMS                 *SET POINTER
         MVC   0(7,PCHPTR),=C'DSNAME='
         LA    PCHPTR,7(PCHPTR)             *INCREMENT PTR
         LR    R06,PCHPTR
         CLC   NAMELGTH,=X'0000'            *CHK FOR NO INDEX
         BE    DSNAMMOV
         LH    R05,NAMELGTH                 *INDEX LGTH
         BCTR  R05,0                        *ADJUST TO MACH LGTH
         LA    R03,NAMEAREA
         EX    R05,NAMEMOVE                 *MOVE INDEX TO PUNCH
         AH    R05,=H'1'                    *READJUST LGTH TO ACTUAL
         AR    R06,R05                      *INCREMENT PTR
DSNAMMOV CLI   VCBSW,C'0'                   *CHK FOR NO VCB
         BE    BLOCKOK
         CLI   PCHSW,C'1'                   *CHK FOR PUNCH SWITCH ON
         BE    BLOCKOK
         MVC   TTR,SAVETTR                  *ADDRESS OF VCB PTR
         BAL   RETURNR,READBLK              *READ VCB PTR BLK
BLOCKOK  LA    RETURNR,RETURNAD             *SET UP RETURN ADDRESS
         ST    RETURNR,SAVERTN8
         B     MOVDSNAM                     *MOVE DSNAME
RETURNAD LA    PCHPTR,0(R05,R06)            *INCREMENT PTR
         MVI   0(PCHPTR),C','               *COMMA
         LA    PCHPTR,1(PCHPTR)             *INCREMENT PTR
         LA    R06,COL72
         SR    R06,PCHPTR                   *CHK FOR ROOM IN CARD
         CH    R06,=H'18'
         BNL   ROOM
         BAL   RETURNR,NEWCARD
ROOM     MVC   0(5,PCHPTR),=C'CVOL='        *CVOL PARAMETER
         MVC   5(5,PCHPTR),=C'3330='
         CLI   NEWVOLSR,X'40'
         BNE   INSERT2
         MVC   10(6,PCHPTR),VOLSERNO
         B     FIXED2
INSERT2  MVC   10(6,PCHPTR),NEWVOLSR
FIXED2   MVI   16(PCHPTR),C','              *COMMA
         LA    PCHPTR,17(PCHPTR)            *INCREMENT PTR
         CLI   VCBSW,C'1'                   *CHK FOR VOL CTRL BLK
         BNE   DSPTR
         MVC   SAVETTR,TTR                  *SAVE PRESENT BLOCK ADDR
         MVC   TTR,ENTTTR                   *ADDRESS OF VCB
         BAL   RETURNR,READBLK              *READ NEXT BLOCK
         LA    R03,BLKAREA                  *SET PTR
         B     ACOUPLE
DSPTR    LA    R03,12(INDEXPTR)             *SET PTR
ACOUPLE  LH    R04,0(R03)                   *LOAD VOL COUNT
         LA    R03,2(R03)                   *INCREMENT PTR
         BAL   RETURNR,PUNCHVOL             *PUNCH VOL INFO
         CLI   VCBSW,C'0'                   *CHK FOR VCB
         BE    THEEND
         MVC   TTR,SAVETTR                  *ADDRESS OF VCB PTR
         BAL   RETURNR,READBLK              *READ VCB PTR BLOCK
         MVI   VCBSW,C'0'                   *TURN OFF VCB SWITCH
THEEND   B     LOCNXTEN                     *LOCATE NEXT ENTRY
*
* NEWCARD ROUTINE
*
NEWCARD  ST    RETURNR,SAVERTN9             *SAVE RETURN ADDRESS
         B     ON
SAVERTN9 DS    F
ON       MVI   COL72,C'C'                   *CONT CHAR IN COL 72
         MVI   SORTCODE,C'4'                *CATLG CARDS ARE 4TH
         BAL   RETURNR,COUNTRTN
         BAL   RETURNR,PUNCH                *PUNCH CARD
         LA    PCHPTR,PARMCONT              *SET PTR TO COL 16
         LA    R06,56                       *56 SPACES IN CARD
         L     RETURNR,SAVERTN9             *LOAD RETURN ADDRESS
         BR    RETURNR
         EJECT
         LTORG
         EJECT
*
* PUNCH DATA SET VOLUME INFORMATION ROUTINE
*
PUNCHVOL ST    RETURNR,SAVERTN6             *SAVE RETURN ADDRESS
         B     ALINE
SAVERTN6 DS    F
ALINE    CH    R04,=H'20'                   *CHK FOR MORE THAN 1 BLK
         BNH   UNOBLOCK
         LH    R05,=H'20'                   *LOAD LOOP COUNTER
         SH    R04,=H'20'                   *DECREMENT VOL COUNT
         B     STARTPCH
UNOBLOCK LR    R05,R04                      *LOAD LOOP COUNTER
         SR    R04,R04                      *CLEAR VOL CT REGISTER
STARTPCH LA    R06,COL72
         SR    R06,PCHPTR
         CH    R06,=H'25'                   *CHK FOR ROOM IN CARD
         BNL   WILLFIT
         BAL   RETURNR,NEWCARD              *START ANOTHER CARD
WILLFIT  MVC   0(4,PCHPTR),=C'VOL='
         LA    PCHPTR,4(PCHPTR)             *INCREMENT PTR
         LA    R01,DEVCDTBL                 *SET TABLE PTR
LOOP     CLC   0(4,R01),VOLDEVCD            *CHK DEV CODE AGAINST TABLE
         BE    HIT
         LH    R02,4(R01)                   *LGTH OF VAR PORTION
         LA    R01,6(R02,R01)               *LOCATE NXT TABLE ELEMENT
         CLC   0(4,R01),LSTENTRY            *CHK FOR END OF TABLE
         BE    NOHIT                        *NO DEVICE IN TABLE FOR CD
         B     LOOP
NOHIT    MVI   NOHITSW,C'1'                 *SET SWITCH ON
         LA    R02,6                        *LOAD 6 INTO REG 2
         B     LVSPACE
HIT      B     UNOLINE
DEVCDMOV MVC   0(0,PCHPTR),6(R01)
UNOLINE LH     R02,4(R01)                   *LGTH OF DEV CODE NAME
         BCTR  R02,0                        *ADJUST TO MACH LGTH
         EX    R02,DEVCDMOV                 *MOVE DEV CODE TO PUNCH
         AH    R02,=H'1'                    *READJUST LGTH
LVSPACE  LA    PCHPTR,0(R02,PCHPTR)         *INCREMENT PTR
         SR    R06,R02                      *DECREMENT SPACE CTR
         SH    R06,=H'4'                    *ADJUST SPACE COUNTER
         MVC   0(2,PCHPTR),=C'=('
         LA    PCHPTR,2(PCHPTR)             *INCREMENT PTR
         SH    R06,=H'2'                    *ADJUST SPACE COUNTER
NEXTSET  MVC   0(6,PCHPTR),VOLSRNUM         *MOVE VOL SER TO PUNCH AREA
         LA    PCHPTR,6(PCHPTR)             *INCREMENT PTR
         SH    R06,=H'7'                    *ADJUST SPACE COUNTER
         MVI   0(PCHPTR),C','               *COMMA
         LH    R02,VOLSEQNO                 *LOAD SEQ NO
         CH    R02,=H'0'                    *CHK FOR ZERO (DISK)
         BE    NOSEQNUM
         CVD   R02,SEQNUMCV
         OI    SEQNUMCV+7,X'0F'
         UNPK  1(4,PCHPTR),SEQNUMCV+5(3)    *MOVE SEQ NO TO CARD
         MVI   5(PCHPTR),C','               *COMMA
         LA    PCHPTR,6(PCHPTR)             *INCREMENT PTR
         SH    R06,=H'7'                    *ADJUST SPACE COUNTER
         B     INCPTR
NOSEQNUM LA    PCHPTR,1(PCHPTR)             *INCREMENT PTR
INCPTR   LA    R03,12(R03)                  *INDEX PTR
         BCT   R05,CHKROOM
         B     BLKEND
CHKROOM  CH    R06,=H'13'                   *CHK SPACE LEFT
         BNL   NEXTSET
         BAL   RETURNR,NEWCARD
         B     NEXTSET
BLKEND   CH    R04,=H'0'                    *CHK FOR FINISH
         BE    FINI
         MVC   TTR,10(R03)                  *ADDRESS OF NEXT VCB
         BAL   RETURNR,READBLK              *READ NEXT BLOCK
         LA    R03,BLKAREA                  *SET UP POINTER
         CH    R04,=H'20'                   *CHK FOR EXTRA BLOCKS
         BNH   LASTBLK
         LH    R05,=H'20'                   *LOAD LOOP COUNTER
         SH    R04,=H'20'                   *DECREMENT VOL COUNT
         B     CHKROOM
LASTBLK  LR    R05,R04                      *LOAD LOOP COUNTER
         SR    R04,R04                      *CLEAR VOL COUNT
         B     CHKROOM
FINI     BCTR  PCHPTR,0                     *DECREMENT PTR
         MVI   0(PCHPTR),C')'               *CLOSE PARENS
         MVI   SORTCODE,C'4'                *CATLG CARDS ARE 4TH
         BAL   RETURNR,COUNTRTN
         CLI   NOHITSW,C'1'                 *CHK SWITCH ON
         BNE   LOADRTRN                     *BRANCH IF NOT ON
         MVC   FORMCTRL,SPACE2
         MVC   PRINTWRK(30),=C'DEVICE TYPE NOT FOUND IN TABLE'
         BAL   RETURNR,PRINT
         MVC   PRINTWRK(26),=C'SPACE PROVIDED IN CARD NO.'
         MVC   PRINTWRK+27(8),SORTCODE
         MVC   PRINTWRK+36(27),=C'FOR 6 CHARACTER DEVICE NAME'
         BAL   RETURNR,PRINT
         MVI   NOHITSW,C'0'                 *SET SWITCH OFF
         BAL   RETURNR,PRINT                *BLANK LINE
         MVC   RTNCODE,=X'00000004'         *RETURN CODE OF 4
LOADRTRN BAL   RETURNR,PUNCH
         L     RETURNR,SAVERTN6             *LOAD RETURN ADDRESS
         BR    RETURNR
         EJECT
*
* GENERATION INDEX ROUTINE
*
GENIXRTN L     R03,NOQENTS
         AH    R03,=H'1'                    *ADD 1 TO NO IN QUEUE
         ST    R03,NOQENTS
         MH    R03,=H'14'
         LA    QUEUEPTR,QTABLE(R03)         *LOCATE AVAILABLE SLOT
         MVC   QELTTR,TTR                   *SAVE BLOCK ADDR
         LA    R03,BLKAREA                  *SET BLOCK PTR
         LR    R04,INDEXPTR
         SR    R04,R03                      *COMPUTE DISPLACEMENT
         STH   R04,QELDISP                  *SAVE DISPLACEMENT IN BLK
         MVC   QELNAME,ENTNAME              *SAVE INDEX NAME
         CLI   CATLGSW,C'1'                 *CHK CATLG SWITCH ON
         BE    ADDNAME
         CLC   NOQENTS,=F'1'                *CHK FOR MORE NAMES
         BNH   ADDNAME
         BAL   RETURNR,BLDNAME              *BUILD INDEX NAME
         B     CHKPUNCH
ADDNAME  LH    R04,NAMELGTH
         LA    R06,NAMEAREA
         LA    R06,0(R04,R06)               *SET PTR TO POS IN NAMEAREA
         LR    R03,INDEXPTR
         BAL   RETURNR,MOVERTN              *MOVE INDEX NAME TO AREA
         AR    R06,R05
         MVI   0(R06),C'.'                  *PERIOD
         LA    R04,1(R05,R04)               *UPDATE LGTH
         STH   R04,NAMELGTH
CHKPUNCH CLI   PCHSW,C'1'                   *CHK FOR PUNCHING
         BE    PCHBLDG
         CLI   PTPCHSW,C'1'
         BNE   PRTGDG
PCHBLDG  MVC   OPCODE,=C'BLDG   '           *BUILD BLDG CARD
         LA    PCHPTR,PARMS                 *SET POINTER
         MVC   0(6,PCHPTR),=C'INDEX='       *INDEX PARAMETER
         LA    R03,NAMEAREA                 *POINTER TO NAME
         LH    R05,NAMELGTH                 *LGTH OF NAME
         LA    R06,6(PCHPTR)                *POINTER TO PUNCH AREA
         SH    R05,=H'2'                    *ADJUS TO MACH LGTH
         EX    R05,NAMEMOVE                 *MOVE NAME TO PCH
         AH    R05,=H'1'                    *READJUST LGTH
         LA    PCHPTR,0(R05,R06)            *SET POINTER
         MVI   0(PCHPTR),C','               *COMMA
         LA    PCHPTR,1(PCHPTR)             *INCKEMENT PTR
         LA    R06,COL72
         SR    R06,PCHPTR                   *COMPUTE SPACE LEFT IN CARD
         CH    R06,=H'43'                   *CHK TO SEE IF ENOUGH
         BNL   SPACEOK
         MVI   SORTCODE,C'3'                *BLDG CARDS ARE 3RD
         BAL   RETURNR,COUNTRTN
         MVI   COL72,C'C'
         BAL   RETURNR,PUNCH                *PUNCH FIRST CARD OF BLDG
         LA    PCHPTR,PARMCONT
SPACEOK  MVC   0(5,PCHPTR),=C'CVOL='        *CVOL PARAMETER
         MVC   5(5,PCHPTR),=C'3330='
         CLI   NEWVOLSR,X'40'
         BNE   INSERT3
         MVC   10(6,PCHPTR),VOLSERNO
         B     FIXED3
INSERT3  MVC   10(6,PCHPTR),NEWVOLSR
FIXED3   MVI   16(PCHPTR),C','              *COMMA
         LA    PCHPTR,17(PCHPTR)            *INCREMENT PTR
         MVC   0(8,PCHPTR),=C'ENTRIES='     *ENTIES PARAMETER
         LA    PCHPTR,8(PCHPTR)             *INCREMENT PTR
         SR    R03,R03
         IC    R03,GIMXENTS                 *MAX NO OF ENTRIES
         CVD   R03,SEQNUMCV
         UNPK  0(3,PCHPTR),SEQNUMCV+6(2)
         OI    2(PCHPTR),X'F0'              *F SIGN
         CLI   GIFLAGS,X'00'                *CHK FOR NO MORE PARMS
         BE    THATSALL
         MVI   3(PCHPTR),C','               *COMMA
         LA    PCHPTR,4(PCHPTR)             *INCREMENT PTR
         CLI   GIFLAGS,X'01'
         BE    EMPTY
         CLI   GIFLAGS,X'02'
         BE    DELETE
         CLI   GIFLAGS,X'03'
         BE    EMPTY
         B     ERR07RTN                     *INVALID FLAGS
EMPTY    MVC   0(5,PCHPTR),=C'EMPTY'        *EMPTY PARAMETER
         CLI   GIFLAGS,X'03'
         BNE   THATSALL
         MVI   5(PCHPTR),C','               *COMMA
         LA    PCHPTR,6(PCHPTR)             *INCREMENT PTR
DELETE   MVC   0(6,PCHPTR),=C'DELETE'       *DELETE PARAMETER
THATSALL MVI   SORTCODE,C'3'                *BLDG CARDS ARE 3RD
         BAL   RETURNR,COUNTRTN
         BAL   RETURNR,PUNCH                *PUNCH BLDG CARD
         CLI   PCHSW,C'1'                   *CHK PUNCH SWITCH ON
         BNE   PRTGDG
READNXT  MVI   CATLGSW,C'1'                 *SET SW ON
         CLC   GICURENT,=X'0000'            *CHK FOR ENTRIES
         BNE   SOMEENTS
         B     ADJUSTQ                      *LOCATE NEXT ENTRY
SOMEENTS MVC   TTR,ENTTTR                   *ADDRESS OF DATA SETS
         BAL   RETURNR,READBLK              *READ NEXT BLOCK
         B     FRSTENCK
PRTGDG   LA    R03,NAMEAREA
         LA    R06,PRINTWRK
         LH    R05,NAMELGTH
         BCTR  R05,0
         EX    R05,NAMEMOVE                 *MOVE INDEX NAME
         MVC   PRINTWRK+50(7),=C'GEN.IX.'
         MVC   PRINTWRK+62(8),=C'MAX.NO.='
         SR    R02,R02                      *CLEAR REG
         IC    R02,GIMXENTS                 *MAX NO OF ENTIES
         CVD   R02,SEQNUMCV
         UNPK  PRINTWRK+70(3),SEQNUMCV+6(2)
         OI    PRINTWRK+72,X'F0'
         MVC   PRINTWRK+80(6),=C'FLAGS='
         IC    R02,GIFLAGS                  *EMPTY-DELETE FLAGS
         CVD   R02,SEQNUMCV
         UNPK  PRINTWRK+86(2),SEQNUMCV+6(2)
         OI    PRINTWRK+87,X'F0'
         BAL   RETURNR,PRINT                *PRINT GDG INDEX
         B     READNXT
         EJECT
*
* END OF CHAIN ROUTINE
*
CHAINEND CLC   NOQENTS,=X'00000000'         *CHK FOR FINISH
         BNE   CKCTLGSW
RDCARD   GET   SYSIN,CARDHOLD              *READ ANY EXTRA CTL CARDS
         CLC   FUNCTION,=C'PRINT'           *CHK FOR PRINT ONLY
         BE    RESET
         CLI   PTPCHSW,C'1'                 *CHK PTPCH SWITCH ON
         BE    RESET
         CLI   PCHSW,C'1'                   *CHK PUNCH SWITCH ON
         BE    RDCARD
RESET    MVI   CATLGSW,C'0'                 *TURN CATLG SWITCH OFF
         MVI   VCBSW,C'0'                   *TURN VCB SWITCH OFF
         ZAP   LINECTR,=P'0'                *ZERO LINE COUNTER
         MVC   NAMEAREA,BLANKS44            *CLEAR NAME AREA
         MVC   NAMELGTH,=X'0000'            *ZERO NAME LENGTH
         ZAP   PAGENUMP,=P'0'               *ZERO PAGE COUNTER
         B     CHKFUNCT
CKCTLGSW CLI   CATLGSW,C'1'                 *CHK CATLG SWITCH ON
         BE    ADJUSTQ
         BAL   RETURNR,BLDNAME              *BUILD INDEX NAME
         CLI   PCHSW,C'1'                   *CHK FOR PUNCHING
         BE    PCHINDX
         LH    R05,NAMELGTH                 *LOAD NAME LENGTH
         BCTR  R05,0                        *ADJUST TO MACH LGTH
         LA    R03,NAMEAREA
         LA    R06,PRINTWRK
         EX    R05,NAMEMOVE                 *MOVE INDEX NAME TO PRINT
         MVC   PRINTWRK+51(5),=C'INDEX'
         BAL   RETURNR,PRINT
         CLI   PTPCHSW,C'1'                 *CHK FOR PUNCHING
         BNE   ADJUSTQ
PCHINDX  MVC   OPCODE,=C'BLDX   '           *BUILD BLDX CARD
         LA    PCHPTR,PARMS                 *SET PTR
         MVC   0(6,PCHPTR),=C'INDEX='       *INDEX PARAMETER
         LA    PCHPTR,6(PCHPTR)             *INCREMENT PTR
         LR    R06,PCHPTR
         LA    R03,NAMEAREA
         LH    R05,NAMELGTH
         SH    R05,=H'2'
         EX    R05,NAMEMOVE                 *MOVE INDEX NAME TO PUNCH
         AH    R05,=H'1'
         LA    PCHPTR,0(R05,PCHPTR)         *INCREMENT PTR
         LA    R06,COL72
         SR    R06,PCHPTR                   *COMPUTE SPACE LEFT
         MVI   0(PCHPTR),C','               *COMMA
         CH    R06,=H'18'                   *CHK FOR SPACE IN CARD
         BNL   ROOMOK
         MVI   COL72,C'C'                   *CONT CHAR IN COL 72
         MVI   SORTCODE,C'2'                *BLDX CARDS ARE 2ND
         BAL   RETURNR,COUNTRTN
         BAL   RETURNR,PUNCH                *PUNCH FIRST CARD
         LA    PCHPTR,PARMCONT-1            *SET PTR FOR CONT CARD
ROOMOK   MVC   1(5,PCHPTR),=C'CVOL='        *CVOL PARAMETER
         MVC   6(5,PCHPTR),=C'3330='
         CLI   NEWVOLSR,X'40'
         BNE   INSERT4
         MVC   11(6,PCHPTR),VOLSERNO
         B     FIXED4
INSERT4  MVC   11(6,PCHPTR),NEWVOLSR
FIXED4   MVI   SORTCODE,C'2'                *BLDX CARDS ARE 2ND
         BAL   RETURNR,COUNTRTN
         BAL   RETURNR,PUNCH
ADJUSTQ  LH    R05,NAMELGTH
         BCTR  R05,0
         LA    R04,NAMEAREA-1
         LA    R06,NAMEAREA(R05)            *LOAD POINTER
         AH    R05,=H'1'
ONCEMORE BCTR  R06,0                        *DECREMENT 1
         CLI   0(R06),C'.'                  *LOOK FOR PERIOD
         BE    AHIT
         CR    R04,R06
         BE    AHIT
         B     ONCEMORE
AHIT     LA    R04,NAMEAREA(R05)
         BCTR  R04,0
         SR    R04,R06                      *COMPUTE LGTH OF LAST NAME
         SR    R05,R04
         STH   R05,NAMELGTH
         BCTR  R04,0
         EX    R04,MOVBLNKS                 *BLANK LAST NAME
         B     OVERIT
MOVBLNKS MVC   1(0,R06),BLANKS44
OVERIT   L     R03,NOQENTS
         LR    R05,R03
         MH    R05,=H'14'
         LA    QUEUEPTR,QTABLE(R05)         *LOCATE LAST QUEUE ENTRY
         MVC   TTR,QELTTR
         LH    R04,QELDISP
         SH    R03,=H'1'                    *SUBTRACT 1 FROM NO IN Q
         ST    R03,NOQENTS
         BAL   RETURNR,READBLK              *READ BLOCK OF LAST Q ENTRY
         LA    INDEXPTR,BLKAREA(R04)        *SET UP POINTER
         B     LOCNXTEN                     *LOCATE NEXT ENTRY
         EJECT
*
* INVALID FUNCTION CODE
*
ERR01RTN MVC   PRINTWRK(21),=C'INVALID FUNCTION CODE'
         BAL   RETURNR,PRINT
         MVC   PRINTWRK(80),CARDHOLD
         BAL   RETURNR,PRINT
         MVC   RTNCODE,=X'00000008'         *RETURN CODE OF 8
         B     EOFRDR
*
* WRONG BLOCK ROUTINE
*
ERR02RTN MVC   PRINTWRK(28),=C'ERROR IN READING INDEX BLOCK'
         BAL   RETURNR,PRINT
         MVC   PRINTWRK(33),=C'FOUND INDEX CONTROL ENTRY AT ADDR'
         UNPK  PRINTWRK+34(7),TTR(4)
         CLI   PRINTWRK+39,X'FA'
         BNE   OK2
         MVI   PRINTWRK+39,X'C1'
OK2      MVI   PRINTWRK+40,C' '
         BAL   RETURNR,PRINT
         MVC   RTNCODE,=X'00000008'         *RETURN CODE OF 8
         B     EOFRDR
*
* INVALID ENTRY ROUTINE
*
ERR03RTN MVC   PRINTWRK(24),=C'INVALID ENTRY TYPE FOUND'
         MVC   PRINTWRK+25(7),=C'AT ADDR'
         UNPK  PRINTWRK+33(7),TTR(4)
         CLI   PRINTWRK+38,X'FA'
         BNE   OK3
         MVI   PRINTWRK+38,X'C1'
OK3      MVI   PRINTWRK+39,C' '
         BAL   RETURNR,PRINT
         MVC   RTNCODE,=X'00000008'         *RETURN CODE OF 8
         B     EOFRDR
*
* I/O ERROR ROUTINE
*
ERR04RTN MVC   PRINTWRK(26),=C'I/O ERROR IN READING BLOCK'
         BAL   RETURNR,PRINT
         MVC   RTNCODE,=X'00000008'         *RETURN CODE OF 8
         B     EOFRDR
*
* INVALID CONDITION CODE FROM READ ROUTINE
*
ERR05RTN MVC   PRINTWRK(31),=C'INVALID CODE RETURNED FROM READ'
         BAL   RETURNR,PRINT
         MVC   RTNCODE,=X'00000008'         *RETURN CODE OF 8
         B     EOFRDR
*
* NO INDEX CONTROL ENTRY ROUTINE
*
ERR06RTN MVC   PRINTWRK(36),=C'NO INDEX CONTROL ENTRY FOUND AT ADDR'
         UNPK  PRINTWRK+37(7),TTR(4)
         CLI   PRINTWRK+42,X'FA'
         BNE   OK6
         MVI   PRINTWRK+42,X'C1'
OK6      MVI   PRINTWRK+43,C' '
         BAL   RETURNR,PRINT
         MVC   RTNCODE,=X'00000008'         *RETURN CODE OF 8
         B     EOFRDR
*
* INVALID GENERATION INDEX FLAGS ROUTINE
*
ERR07RTN MVC   PRINTWRK(29),=C'INVALID FLAGS IN GEN. AT ADDR'
         UNPK  PRINTWRK+30(7),TTR(4)
         CLI   PRINTWRK+35,X'FA'
         BNE   OK7
         MVI   PRINTWRK+35,X'C1'
OK7      MVI   PRINTWRK+36,C' '
         BAL   RETURNR,PRINT
         MVC   RTNCODE,=X'00000008'         *RETURN CODE OF 8
         B     EOFRDR
*
* VOLUME SERIAL NO. ERROR OR NO SYSCTLG ON VOLUME
*
ERR08RTN MVC   PRINTWRK(74),=C'VOLUME SERIAL NUMBER IN ERROR OR NO SYSCC
               TLG DATA SET RESIDES ON VOLUME NO.'
         MVC   PRINTWRK+75(6),VOLSERNO
         BAL   RETURNR,PRINT
         MVC   RTNCODE,=X'00000008'         *RETURN CODE OF 8
         B     EOFRDR
         EJECT
*
* END OF FILE ROUTINE
*
EOFRDR   CLOSE SYSIN                       *CLOSE CARD SYSIN
         CLI   PCHSW,C'1'                   *CHK PUNCH SWITCH ON
         BE    CLOSEPCH
         CLI   PTPCHSW,C'1'                 *CHK PTPCH SWITCH ON
         BNE   CLOSEPRT
CLOSEPCH CLOSE SYSPUNCH                      *CLOSE PUNCH
CLOSEPRT CLOSE SYSPRINT                      *CLOSE SYSPRINT
GOBACK   L     13,4(13)
         L     15,RTNCODE                   *LOAD RETURN CODE
         ST    15,16(13)                    *STORE INTO SAVE AREA
         LM    14,12,12(13)                 *RESTOR REGS
         BR    14                           *RETURN
         EJECT
         LTORG
         EJECT
*
* DSECTS
*
ENTDSECT DSECT
ENTNAME  DS    CL8
ENTTTR   DS    CL3
ENTHWCT  DS    CL1
*
*
GIFLAGS  DS    CL1
GIMXENTS DS    CL1
GICURENT DS    CL2
*
*
         ORG   GIFLAGS
ALIASTRN DS    CL8
*
*
         ORG   GIFLAGS
CVOLDEVC DS    CL4
CVOLSRNO DS    CL6
*
*
         ORG   GIFLAGS
DSPVOLCT DS    CL2
*
*
QELEMENT DSECT                              *OVERLAY FOR QUEUE ELEMENTS
QELTTR   DS    CL3
FILLER   DS    CL1
QELDISP  DS    CL2
QELNAME  DS    CL8
*
*
VOLINFO  DSECT                              *OVERLAY OF VOLUME INFO
VOLDEVCD DS    CL4
VOLSRNUM DS    CL6
VOLSEQNO DS    CL2
*
*
RECAP    CSECT
         EJECT
*
* WORK AREAS
*
         DS    0D
CARDHOLD DS    0CL80                        *CARD READ-IN AREA
FUNCTION DS    CL5
         DS    CL1
VOLSERNO DS    CL6
         DS    CL1
NEWVOLSR DS    CL6
         DS    CL61
*
*
PUNCHREC DS    0CL80                        *PUNCH RECORD AREA
         DC    CL1' '
OPCODE   DC    CL7' '
         DC    CL1' '
PARMS    DC    CL62' '
COL72    DC    CL1' '
SORTCODE DC    CL8' '
         ORG   PUNCHREC+15                  *CONTINUATION IN CC 16
PARMCONT DS    CL56
         ORG   *-1
COL71    DS    CL1
         ORG
*
*
PRINTREC DS    0CL133                       *PRINT AREA
FORMCTRL DS    CL1
PRINTWRK DC    CL132' '
*
*
*
         DS    0F
TTR      DC    XL3'00'       TRACK AND RECORD ADR
         DC    X'00'           Z VALUE FOR POINT
BLKAREA  DS    0D
         DS    265C                         *INDEX BLOCK FROM LOCATE
*
*
         DS    0D
QTABLE   DS    322C                         *INDEX NAME AND LOC QUEUE
NOQENTS  DC    F'0'
*
NAMEAREA DC    CL44' '
NAMELGTH DC    H'0'
*
BLKSUSED DS    D
BLKSLEFT DS    D
SEQNUMCV DS    D
LINECT08 DS    D
RTNCODE  DC    F'0'
SAVETTR  DS    CL3
LINECTR  DC    PL2'0'
SRTCOUNT DC    PL4'0'
         EJECT
*
* CONSTANTS
*
STATHEAD DC    C'SYSCTLG STATISTICS'
VOLIDHDG DC    C'VOL.ID'
BLKSUHDG DC    C'INDEX BLOCKS USED'
BLKSLHDG DC    C'INDEX BLOCKS LEFT'
ENTRYHDG DC    C'CATALOGED DATA SETS, ALIASES, CVOL POINTERS, AND INDEXC
               ES'
NAMEHDG  DC    C'NAME'
TYPEHDG  DC    C'ENTRY TYPE'
DEVICHDG DC    C'DEVICE'
SEQNOHDG DC    C'SEQ.NO'
ALIASHDG DC    C'ALIAS OF'
PAGEID   DS    0CL10
         DC    C'PAGE '
PAGENUM  DS    CL4
PAGENUMP DC    PL3'0'
CNTRLNAM DC    X'0000000000000001'
LINKENT  DC    8X'FF'
HDGLINE1 DC    C'RECAP LISTING OF CATALOGED DATA SETS, POINTERS AND INDC
               EXES'
HDGLINE2 DC    C'FROM SYSCTLG ON VOLUME'
SKPTOCH1 DC    C'1'
SPACE1   DC    C' '
SPACE2   DC    C'0'
SPACE3   DC    C'-'
BLANKS44 DC    44C' '
*
* DEVICE CODE NAME TABLE
*
         DS    0H
DEVCDTBL DC    X'3050200D',H'6',C'3330-1'
         DC    X'32008003',H'6',C'3400-5'
         DC    X'34008003',H'6',C'3400-3'
         DC    X'30808001',H'6',C'2400-1'
         DC    X'30C08001',H'6',C'2400-2'
         DC    X'34008001',H'6',C'2400-4'
         DC    X'34208001',H'6',C'2400-4'
         DC    X'34208003',H'4',C'3420'
         DC    X'000A8000',H'4',C'TAPE'
         DC    X'30402002',H'4',C'2301'
         DC    X'30002004',H'4',C'2302'
         DC    X'30002003',H'4',C'2303'
         DC    X'30002005',H'4',C'2321'
         DC    X'30402005',H'4',C'2321'
         DC    X'30C02008',H'4',C'2314'
         DC    X'30E02008',H'6',C'2314-S'
         DC    X'30502009',H'4',C'3330'
         DC    X'30702009',H'4',C'3330'
         DC    X'3050200B',H'4',C'3350'
         DC    X'30008001',H'4',C'2400'
         DC    X'3070200D',H'6',C'3330-1'
LSTENTRY DC    X'99999999'
*
TRANSTBL DC    64X'00'
         DC    X'FF'
         DC    191X'00'
*   FORMS CONTROL CHARACTER TABLE
TABLE    DC    X'01'                        *HEX 40
         DC    31X'00'
         DC    X'03'                        *HEX 60
         DC    143X'00'
         DC    X'0201'                      *HEX F0 AND F1
*
* SWITCHES
*
PCHSW    DC    C'0'
PTPCHSW  DC    C'0'
CATLGSW  DC    C'0'
VCBSW    DC    C'0'
NOHITSW  DC    C'0'
TESTSW   DC    C'F0'
         EJECT
*
*   DATA CONTROL BLOCKS
*
SYSIN  DCB   LRECL=80,                                                 *
               DSORG=PS,                                               C
               EODAD=EOFRDR,                                           C
               MACRF=GM,                                               C
               RECFM=FB,                                               *
               DDNAME=SYSIN
         EJECT
*
SYSPRINT  DCB   DSORG=PS,                                              *
               MACRF=PM,                                               C
               LRECL=133,                                              C
               RECFM=FBA,BLKSIZE=1330,                                 *
               DDNAME=SYSPRINT
         EJECT
*
CATDCB   DCB   LRECL=256,BLKSIZE=256,RECFM=F,                          *
               DSORG=PS,MACRF=(RP),DDNAME=CATALOG
*
SYSPUNCH  DCB   DSORG=PS,                                              *
               MACRF=PM,                                               C
               RECFM=FBS,LRECL=80,BLKSIZE=4080,                        *
               DDNAME=SYSPUNCH
*
         END
