  TITLE 'CATTRFIX - RESET DSCB TTR POINTERS IN CATALOG '
CATTRFIX CSECT
         EJECT
         SPACE 25
*                    UTILITY PROGRAM - 'CATTRFIX'
*
*
         EJECT
         SPACE 2
*    CATTRFIX IS A UTILITY PROGRAM THAT WILL SEQUENTIALLY READ THE
*    VTOC ON ANY 2314, 3330-1, OR 3330-11 DISK PACK AND UPDATE ALL
*    ERRONEOUS DSCB TTR POINTERS IN THE CATALOG FOR THE CORRESPONDING
*    DSN'S.
         SPACE 2
*              P H I L O S O P H Y
*
*    THE METHOD USED IS MERELY TO USE THE OS CATALOG MANAGEMENT
*    ROUTINES TO UNCATALOG AND THEN RECATALOG THOSE DATA SETS WITH
*    BAD TTR POINTERS
         SPACE 2
*    THE JCL NECESSARY TO RUN THIS PROGRAM FOLLOWS:
*       //JOB
*       //STEP1    EXEC  PGM=CATTRFIX,PARM='RECAT=?'
*       //SYSPRINT     DD  SYSOUT=A
*       //SYSUDUMP     DD  SYSOUT=A
*       //#ANYNAME     DD  UNIT=UNIT1,DISP=SHR,VOL=SER=VOLSER1
*            "         "     "    "    "    "    "     "    "
*            "         "     "    "    "    "    "     "    "
*
*    #ANYNAME  -- CAN BE ANY DDNAME PRECEEDED BY A NATIONAL POUND
*                 SIGN (#).  THIS IS REQUIRED DUE TO THE NATURE OF
*                 MVS IN THAT CATALOGS ARE DYNAMICALLY ALLOCATED.
*
*    CHARACTERS WHICH ARE VALID PARM VALUES AND CAN BE SUBSTITUTED FOR
*    THE '?' IN THE PARM FIELD ARE ...
*          'Y' -- INDICATES  A L L  CATALOGED DATA SETS EXCEPT SYSCTLG
*                 WILL BE PROCESSED (I. E. UNCAT. AND RECAT.).
*          'N' -- INDICATES ONLY THOSE DATA SETS CATALOGED TO THE
*                 VOLUME BEING PROCESSED WILL BE PROCESSED.
         SPACE 2
*    OUTPUT CONSISTS OF MESSAGES INDENTIFING THOSE DSN'S FOR WHOM
*    THE CATALOGING FUNCTIONS FAILED.
         SPACE 2
*    NOTE -----------------------------:
*         THIS ROUTINE WILL NOT UNCATALOG OR RECATALOG ANY DATA SET
*         WHOSE DSN IS 'SYSCTLG'.
         SPACE 2
*    HISTORY - MODIFIED BY             JUNE, 1977, TO GET DEVICE TYPE
*              FROM PREVIOUS CATALOG BLOCK INSTEAD OF FROM DCB.
         EJECT
*
*   REGISTER EQUATES
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
*   ESTABLISH SAVEAREA AND POINT OF RETURN WHEN PROCESSING IS COMPLETE
*
         USING *,R12               SET UP BASE
         STM   R14,R12,12(R13)     SAVE REGISTERS
         LR    R12,R15             R12 - BASE
         LR    R14,R13             R14 - PTR TO SAVEAREA
         CNOP  0,4
         BAL   R13,NULL0001        R13 - MY SAVEAREA, BR TO PROCESS
         DC    3F'0'               SAVE -
         DS    15F                      -- AREA
RETURN   L     R13,4(0,R13)        POINT OF BRANCH WHEN DONE
*                                  RESTORE REG 13
         L     R14,12(0,R13)       RESTORE REG 14
         LM    R2,R12,28(R13)      RESTORE REMAINDER OF REGS
         BR    R14                 RETURN TO CALLING ROUTINE
NULL0001 ST    R13,8(0,R14)        SAVE ORIG REG 13
         ST    R14,4(0,R13)        SAVE ORIG REG 14
         ST    R1,SAVEREG1         SAVE PTR TO (PTR TO PARMLIST)
         EJECT
*
*                   BEGIN PROCESSING
*
START    OPEN  (OUTDCB,OUTPUT)     OPEN OUTPUT FILE
         TM    OUTDCB+48,X'10'     SUCCESSFUL OPEN??
         BNZ   OPEN1OK             YES - CONTINUE
         ABEND 111                 ABEND SINCE THIS IS UNRECOVERABLE
*
*   CHECK PARMLIST
*
OPEN1OK  L     R1,SAVEREG1         RESTORE REG 1
         L     R1,0(R1)            REG 1 - PTR TO PARMLIST
         LH    R3,0(R1)            REG 3 - LENGTH OF PARMLIST
         LTR   R3,R3               IS LENGTH ZERO??
         BZ    PARMN               YES - ASSUME 'RECAT=N'
         LA    R1,2(R1)            REG 1 - PTR TO FIRST PARM
         CLC   0(6,R1),=C'RECAT='  IS VALID PARM SPECIFIED??
         BNE   BADPARM             NO - GIVE MSG & ASSUME 'RECAT=N'
         CLI   6(R1),C'N'          IS THE PARM 'N'
         BE    PARMN               YES - SET SWITCH
         CLI   6(R1),C'Y'          NO - IS THE PARM 'Y'
         BE    PARMY               YES - SET SWITCH
BADPARM  MVC   MESSAGE3,BLK        CLEAR PRINT LINE
         MVC   MESSAGE3(37),=C' BAD PARMLIST - ''RECAT=N'' WAS ASSUMED'
         PUT   OUTDCB,MESSAGE3
         B     PARMN
PARMY    XC    SWITCH,SWITCH       CLEAR SWITCH
         OI    SWITCH,X'0F'         SET SWITCH
         MVC   ACTION5,ACTION5Y    MODIFY MSG TEXT
         B     BEGIN                BEGIN PROCESSING
PARMN    XC    SWITCH,SWITCH        SET SWITCH
         EJECT
*
*   GET T.I.O.T. ADDRESS
*
BEGIN    L    R1,16                 PTR TO C.V.T.
         L    R1,0(R1)              PTR TO TCBWORDS
         L    R1,4(R1)              PTR TO OUR T.C.B.
         L    R1,12(R1)             PTR TO OUR T.I.O.T.
*
*   GET NEXT VALID DDNAME
*
         LA    R1,24(R1)
         ST    R1,TIOTADR           SAVE ADDRESS OF FIRST DDN
NEXTDDN  L     R3,TIOTADR           GET ADDRESS OF NEXT DDN
         CLI   0(R3),X'00'          IS IT ZERO??
         BZ    NODDN                NO DDN'S LEFT
         SR    R2,R2
         IC    R2,0(R3)             GET LENGTH OF DDN
         AR    R2,R3                COMPUTE ADDR OF NEXT DDN
         ST    R2,TIOTADR           SAVE ADDRESS OF NEXT ENTRY
*
*   CHECK TIOT ENTRY FOR A LEADING POUND SIGN
*
         CLI   4(R3),C'#'          VALID CHARACTER?
         BNE   NEXTDDN             NO, GET NEXT DDNAME
         MVC   INDCB+40(8),4(R3)
         EJECT
*
*   READ JFCB AND INSERT A DDN OF 44 X'04' FOR VTOC DSN
*
         RDJFCB (INDCB)
         OI    JFCBIN+52,X'0A'     JFCB NOT MERGED BACK
         MVI   JFCBIN,X'04'
         MVC   JFCBIN+1(43),JFCBIN MOVE IN 44 X'04' FOR VTOC DSN
         OPEN  (INDCB,INPUT),TYPE=J
         TM    INDCB+48,X'10'      CHECK FOR SUCCESSFUL OPEN
         BNZ   PRELOOP
         MVC   MESSAGE3,BLK
         MVC   MESSAGE3(80),=CL80'1UNSUCCESSFUL OPEN FOR DDNAME='
         MVC   MESSAGE3+30(8),4(R3)
         PUT   OUTDCB,MESSAGE3
         B     NEXTDDN
PRELOOP  BAL   R10,HEADERS         PRINT HEADINGS
         EJECT
*
*   LOOP TO READ ALL FORMAT1 DSCB'S
*
LOOP     XC    ECB,ECB
         READ  ECB,SF,INDCB,DSCB,'S'
         CHECK ECB
         CLI   DSCB+44,X'F4'       IS THIS A FORMAT4
         BNE   NOFMT4              NO - BR AROUND
         MVC   WORKAREA(2),DSCB+64
         LH    R11,WORKAREA        LOAD NO. TRK/CYL
NOFMT4   CLI   DSCB+44,X'F1'       IS THIS A FORMAT1
         BNE   LOOP                NO - READ NEXT DSCB
         CLI   DSCB+59,X'F0'       IS THIS A MODEL DSCB??
         BE    LOOP                YES - READ NEXT DSCB
         CLC   DSN(7),=C'SYSCTLG'  IS THIS THE SYSTEM CATALOG
         BE    LOOP                YES - SKIP IT
         MVC   DCBCCHHR(5),INDCB+8  SAVE CCHHR
         EJECT
*
*   READ CATALOG FOR DSN IN THIS FORMAT1 DSCB
*
CATALOG  LOCATE LOCLIST
         LTR   R15,R15             IS IT CATALOGED
         BNZ   MSG02               NO - PRINT MSG
         CLC   CATBLK(2),=X'0001'  IS THIS DSN ON MORE THAN ONE PACK
         BH    MSG01               YES - PRINT MSG
         TM    SWITCH,X'0F'        WAS PARM = 'Y'
         BO    CHK01               YES - SKIP CHECK
         CLC   CATBLK+6(6),JFCBIN+118  ARE VOLSER'S DIFFERENT ?
         BNE   MSG07               YES - PRINT MSG
CHK01    LH    R5,DCBCCHHR         LOAD CC
         MR    R4,R11              CONVERT TO TRKS
         LH    R6,DCBCCHHR+2       LOAD HH
         AR    R5,R6               REG 5 - ABSOLUTE TRK ADDRESS
         STH   R5,NEWTTR           CREATE CORRECT(NEW) TTR
         MVC   NEWTTR+2(1),DCBCCHHR+4
         CLC   NEWTTR(3),CATBLK+252  COMPARE TTR'S
         BE    MSG04               EQUAL - PRINT MSG
         EJECT
*
*   UNCATALOG AND RECATALOG TO PROPERLY SET THE TTR REFERENCE TO THE
*   DSCB IN THE CATALOG.
*
*        CATALOG UNCATLST
*        LTR   R15,R15             CHECK RETURN CODE
*        BNZ   MSG05               YES PRINT MESSAGE
         MVC   DEVCODE(4),CATBLK+2      MOVE DEVICE CODE TO CAMLST
         MVC   VOLSER(6),JFCBIN+118     MOVE VOLSER TO CAMLST
*        CATALOG CATLIST
*        LTR   R15,R15             TEST RETURN CODE
*        BNZ   MSG06               ERROR - PRINT MSG
         TM    SWITCH,X'0F'        WAS PARM = 'Y'??
         BNO   MSG03               NO - PRINT MSG
         CLC   CATBLK+6(6),JFCBIN+118  ARE DSN'S THE SAME??
         BE    MSG03               YES - PRINT MSG
         B     MSG08               PRINT MSG
         EJECT
*
*   MESSAGE HANDLING CODE
*
MSG01    LA    R8,STATUS5          MULTIVOLUME DATASET
         LA    R9,ACTION1          ACTION = NONE
         B     PUTMSG
MSG02    LA    R8,STATUS1          DATASET NOT CATALOGED
         LA    R9,ACTION1          ACTION = NONE
         B     PUTMSG
MSG03    LA    R8,STATUS2          TTR INVALID
         LA    R9,ACTION2          ACTION = TTR RESET OK
         B     PUTMSG
MSG04    LA    R8,STATUS3          TTR OK
         LA    R9,ACTION1          ACTION = NONE
         B     PUTMSG
MSG05    LA    R8,STATUS4          ERROR DURING UNCAT
         LA    R9,ACTION3          ACTION = UNABLE TO UNCAT
         LA    R15,0(R15,R12)      SET PTR TO RETURN CODE MSG
         MVC   14(2,R8),RCTABLE-CATTRFIX(R15) MOVE RC TO STATUS FIELD
         B     PUTMSG
MSG06    LA    R8,STATUS4          ERROR DURING CATALOG
         LA    R9,ACTION4          ACTION = UNABLE TO RE-CATALOG
         LA    R15,0(R15,R12)
         MVC   14(2,R8),RCTABLE-CATTRFIX(R15) MOVE RC TO STATUS FIELD
         B     PUTMSG
MSG07    LA    R8,STATUS6          WRONG VOLUME CATALOGED
         LA    R9,ACTION5          ACTION = NONE (RECAT=N)
         MVC   MSG8VOL(6),CATBLK+6  MOVE VOL SER INTO MESSAGE FIELD
         B     PUTMSG
MSG07A   LA    R8,STATUS7          NONE (CONTINUATION)
         LA    R9,ACTION6          NONE (CONTINUATION)
         MVC   MSG9VOL(6),CATBLK+6
         B     PUTMSG
MSG08    LA    R8,STATUS2         WRONG VOLUME CATALOGED
         LA    R9,ACTION5         ACTION = RECATALOGED TO NEW VOL
         MVC   MSG8VOL(6),CATBLK+6  MOVE VOL SER INTO MESSAGE FIELD
         B     PUTMSG
MSG08A   LA    R8,STATUS7          NONE (CONTINUATION)
         LA    R9,ACTION6          NONE (CONTINUATION)
         MVC   MSG9VOL(6),CATBLK+6
PUTMSG   AP    LNECT(4),=P'1'       ADJUST LINE COUNT
         CP    LNECT(4),=P'55'      IS THIS PAGE FULL??
         BL    PT                   NO - PUT THIS LINE ON THIS PAGE
         BAL   R10,HEADERS          YES - PUT HEADINGS
PT       MVC   MESSAGE3,BLK         CLEAR PRINT LINE
         MVC   DSNLOC,DSN           CREATE ..
         MVC   STSLOC,0(R8)                .. PRINT ..
         MVC   TEXTLOC,0(R9)                        .. LINE ..
         PUT   OUTDCB,MESSAGE3
         B     LOOP
         EJECT
*
*   ROUTINE TO PRINT HEADINGS
*
HEADERS  MVC   MESSAGE3,BLK         CLEAR PRINT LINE
         MVC   MESSAGE3+90(4),=C'PAGE'
         OI    PGECT+3,X'0F'            SET SIGN
         MVC   MESSAGE3+95(4),=XL4'40202120'  MOVE IN EDIT PATTERN
         ED    MESSAGE3+95(4),PGECT+2   EDIT PAGE NO.
         MVC   MESSAGE3(39),=C'1        TTR RESET PROCESSING TRACE ...'
         MVC   MESSAGE3+43(7),=C'VOLSER='
         MVC   MESSAGE3+50(6),JFCBIN+118
         PUT   OUTDCB,MESSAGE3
         MVC   MESSAGE3,BLK
         MVI   MESSAGE3,X'F0'
         MVC   DSNLOC,=C'------------------  DSN  -------------------'
         MVC   STSLOC+5(6),=C'STATUS'
         MVC   TEXTLOC+5(6),=C'ACTION'
         PUT   OUTDCB,MESSAGE3
         AP    PGECT(4),=P'1'       BUMP THE PAGE COUNT
         SP    LNECT(4),LNECT(4)
         AP    LNECT(4),=P'1'       RESET LINE COUNT
         BR    R10                  RETURN TO CALLER
         EJECT
*
*   CODE TO HANDLE EOF FROM THE VTOC
*
EOFVTOC  CLOSE (INDCB)
         MVC   MESSAGE3,BLK
         MVC   MESSAGE3(13),=C'-     VOLSER='
         MVC   MESSAGE3+13(6),JFCBIN+118
         MVC   MESSAGE3+19(22),=C'  PROCESSING COMPLETED'
         PUT   OUTDCB,MESSAGE3
         B     NEXTDDN
*
*   CODE TO HANDLE CLEANUP AND END
*
NODDN    CLOSE (OUTDCB)
         SR    R15,R15
         B     RETURN
         TITLE '  RETURN CODE TABLE -- DDNAME TABLE -- MESSAGE TABLES'
RCTABLE  DC    CL4' '
         DC    CL4'04'
         DC    CL4'08'
         DC    CL4'12'
         DC    CL4'16'
         DC    CL4'20'
         DC    CL4'24'
         DC    CL2'72'
         SPACE 2
ACTION1  DC    CL35' - NONE'
ACTION2  DC    CL35' - RECATALOGED DATASET SUCCESSFULLY'
ACTION3  DC    CL35' - UNABLE TO UNCATALOG'
ACTION4  DC    CL35' - UNCATLG. BUT UNABLE TO RECATLG.'
ACTION5Y DC    CL20' - RECATALOGED FROM '
ACTION5  DC    CL20' - NONE, CATLG''D TO '
MSG8VOL  DC    CL15' '
ACTION6  DC    CL14' - RESIDES ON '
MSG9VOL  DC    CL21' '
         SPACE 2
STATUS1  DC    CL16' - NOT CATALOGED'
STATUS2  DC    CL16' - TTR INVALID'
STATUS3  DC    CL16' - OK'
STATUS4  DC    CL16' - ERROR---RC='
STATUS5  DC    CL16' - MULTI VOLUME'
STATUS6  DC    CL16' - WRONG VOLUME'
STATUS7  DC    CL16' '
         TITLE 'WORKAREAS AND OUTPUT MESSAGE AREAS'
         DS    0D
WORKAREA DC    D'0'
TIOTADR  DC    F'0'
SAVEREG1 DC    F'0'
LNECT    DC    PL4'0'
PGECT    DC    PL4'1'
DCBCCHHR DC    CL5' '
         DS    0F
NEWTTR   DC    CL3' '
         DS    0D
LIST     DC    X'87'
         DC    AL3(JFCBIN)
JFCBIN   DC    CL176' '
         DS    0D
DSCB     DS    0CL350
DSN      DC    CL44' '
         DC    306C' '
BLK      DC    CL1' '
MESSAGE3 DS    0CL100
         DC    CL5' '
DSNLOC   DC    CL44' '
STSLOC   DC    CL16' '
TEXTLOC  DC    CL35' '
SWITCH   DC    X'00'
         TITLE 'CAMLST MACROS AND VOLUME LISTS'
LOCLIST  CAMLST NAME,DSN,,CATBLK
         DS    0D
CATBLK   DS    0CL265
         DC    259C' '
CVOL     DC    CL6' '
UNCATLST CAMLST UCATDX,DSN,CVOL
CATLIST  CAMLST CATBX,DSN,CVOL,VOLLIST,DSCBTTR=NEWTTR
         DS    0H
VOLLIST  DC    H'1'
DEVCODE  DC    CL4' '
VOLSER   DC    CL6' '
         DC    H'0'
         TITLE ' INPUT -- OUTPUT   D C B '
INDCB    DCB   DDNAME=XXXXXX,DEVD=DA,DSORG=PS,MACRF=(R),BLKSIZE=96,    *
               RECFM=F,EODAD=EOFVTOC,EXLST=LIST,KEYLEN=44
OUTDCB   DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=(PM),RECFM=FA,           *
               LRECL=100,BLKSIZE=100
         END
