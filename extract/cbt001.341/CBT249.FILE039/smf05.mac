***********************************************************************
*
*                   NOV, 1978
*
*        THIS PROGRAM READS SMF RECORD TYPE 5 (JOB TERMINATION) AND
*        PRINTS A JOB TERMINATION REPORT.
*
*        THE FOLLOWING IS AN EXAMPLE OF THE REQUIRED JCL:
*
*  //SMF05    JOB (ACCT),NAME,MSGCLASS=X,CLASS=A,NOTIFY=TS0001
*  //SMF05    EXEC PGM=SMF05,REGION=256K
*  //SYSPRINT DD   SYSOUT=*
*  //SYSUT1   DD   DISP=SHR,DSN=SYS1.MANX,DCB=LRECL=20000
*  //         DD   DISP=SHR,DSN=SYS1.MANY
*  //SYSIN    DD   *
*  DATE(70000,99365),ABEND(SYS,USR),RC(NZ)
*  /*      - OR -
*  DATE(70000,99365)
*  JOB=JOBNAME1
*  JOB=JOBNAME2
*  JOB=JOBNAME3
*  /*
*
*        ONE CONTROL CARD IS REQUIRED. OTHERS ARE OPTIONAL.
*        THE REQUIRED CONTROL CARD IS OF THE FORMAT:
*
*        DATE(YYDDD,YYDDD),ABEND(SYS,USR),RC(NN),CLASS(X)
*
*        WHERE:
*
*            DATE - START,END DATES - DEFINES THE LIMIT OF RECORDS
*                   SEARCHED. THE DATE IS THE JOB TERMINATION DATE.
*                   THIS PARAMETER IS REQUIRED.
*
*            ABEND - ONLY LIST THOSE JOBS THAT ABENDED.
*                    SYS - SYSTEM ABEND
*                    USR - USER ABEND
*                    THIS PARAMETER IS OPTIONAL. IF ABEND IS SPECIFIED,
*                    EITHER OR BOTH SUB-PARAMETERS MAY BE USED.
*
*            RC    - ONLY LIST JOBS THAT TERMINATED WITH RETURN CODE
*                    'NN'. THIS PARAMETER IS OPTIONAL.
*                     NN - ANY TWO DIGIT NUMBER OR THE CHARACTERS 'NZ'
*                          WHICH WILL LIST ALL JOBS THAT TERMINATED
*                          WITH A NON-ZERO RETURN CODE, BUT DID NOT
*                          ABEND.
*
*            CLASS - LIST ONLY THOSE JOBS HAVING THE SPECIFIED CLASS
*                    ON THE JOB CARD. THIS PARAMETER IS OPTIONAL.
*
*        NOTE:
*            ONLY 1 CARD OF THIS TYPE IS ALLOWED IN THE SYSIN DATA,
*            AND IT MUST BE THE FIRST (OR ONLY) CARD. THE 'ABEND' AND
*            'RC' OPTIONAL PARAMETERS ARE LOGICAL 'OR' PARAMETERS WHICH
*            ARE LOGICALLY 'ANDED' WITH THE 'CLASS' PARAMETER, IF ALL
*            ARE PRESENT.
*
*            OPTIONAL CONTROL CARDS ARE OF THE FORMAT:
*            JOB=XXXXXXXX  WHERE XXXXXXX IS A JOBNAME.
*            THERE IS NO LIMIT ON THE NUMBER OF OPTIONAL JOBNAME
*            CONTROL CARDS. IF NO JOBNAME CONTROL CARDS ARE PRESENT,
*            ALL JOBS MEETING THE SPECIFICATIONS OF THE REQUIRED
*            CONTROL CARD WILL BE LISTED.
*
*----------------------------------------------------------------------
         EJECT
*----------------------------------------------------------------------
*
*             PROCESS REQUIRED CONTROL CARD
*
*----------------------------------------------------------------------
SMF05C   $PROLOG
         OPEN  (SYSIN,,SYSUT1,,SYSPRINT,(OUTPUT))
         GET   SYSIN              GET THE REQUIRED CONTROL CARD
         MVI   CNTLLINE,C'1'      SKIP TO CHAN 1
         MVC   CNTLLINE+1(23),=C'REQUIRED CONTROL CARD: '
         MVC   CNTLLINE+24(71),0(R1)   MOVE CONTROL CARD TO LINE
         ST    R1,SAVE1
         PUT   SYSPRINT,CNTLLINE  PRINT IT
         L     R1,SAVE1
         CLC   0(5,R1),=C'DATE('  CORRECT KEYWORD ?
         BNE   ERROR1             NO - ERROR
         LA    R2,5(R1)           ADDR OF START DATE
         LA    R11,5              LNGTH OF DATE
LOOP020A EQU   *
         TM    0(R2),X'F0'        NUMERIC ?
         BNO   ERROR2             NO -ERROR
         LA    R2,1(R2)           YES - BUMP TO NEXT BYTE
         BCT   R11,LOOP020A       TEST ALL BYTES
         PACK  START,5(5,R1)      PACK AND SAVE START DATE
         LA    R2,11(R1)          ADDR OF END DATE
         LA    R11,5              LNGTH OF DATE
LOOP020B EQU   *
         TM    0(R2),X'F0'        NUMERIC ?
         BNO   ERROR2             NO -ERROR
         LA    R2,1(R2)           YES - BUMP TO NEXT BYTE
         BCT   R11,LOOP020B       TEST ALL BYTES
         PACK  END,11(5,R1)       PACK AND SAVE END DATE
         CLI   17(R1),C','        ANY OPTIONAL PARMS ?
         BNE   EXIT020            NO - USE DEFAULTS
         LA    R2,18(R1)          ADDR OF OPTIONAL PARMS
AAA020   EQU   *
         CLC   0(5,R2),=C'ABEND'  OPTIONAL ABEND PARM ?
         BE    BBB020             YES - SET INDICATOR
         CLC   0(2,R2),=C'RC'     OPTIONAL RC PARM ?
         BE    JJJ020             YES  - SET INDICATOR
         CLC   0(5,R2),=C'CLASS'  OPTIONAL CLASS PARM ?
         BE    MMM020             YES - SET INDICATOR
         B     ERROR3
BBB020   EQU   *
         CLC   24(3,R1),=C'SYS'   SYSTEM ABENDS REQUESTED ?
         BE    DDD020             YES - SET INDICATOR
         CLC   28(3,R1),=C'SYS'   SYSTEM ABENDS REQUESTED ?
         BE    DDD020             YES - SET INDICATOR
CCC020   EQU   *
         CLC   24(3,R1),=C'USR'   USER ABENDS REQUESTED ?
         BE    EEE020             YES - SET INDICATOR
         CLC   28(3,R1),=C'USR'   USER ABENDS REQUESTED ?
         BE    EEE020             YES - SET INDICATOR
         B     FFF020
DDD020   EQU   *
         MVI   SYS,X'FF'          SET SWITCH INDICATING SYS ABENDS
         B     CCC020             CHECK FOR USER ABEND REQUEST
EEE020   EQU   *
         MVI   USR,X'FF'          SET SWITCH INDICATING USER ABENDS
FFF020   EQU   *
         LA    R2,28(R1)          ADDR OF END OF 1ST ABEND
*                                  SUB-PARAMETER
         CLC   SYSUSR,=X'FFFF'    BOTH ABENDS REQUESTED ?
         BNE   GGG020             NO - DISPLACEMENT OK
         LA    R2,4(R2)           ADDR OF MORE PARMS, IF ANY
GGG020   EQU   *
         CLI   0(R2),C','         ANY MORE PARMS ?
         BNE   EXIT020            NO - DONE
         LA    R2,1(R2)           BUMP TO NEXT PARM
         B     AAA020             CHECK THE OTHER OPTIONAL PARMS
JJJ020   EQU   *
         CLC   3(2,R2),=C'NZ'     LIST ALL NON-ZERO RETURN CODES ?
         BE    KKK020             YES - SET SWITCH
         TM    3(R2),X'F0'        NUMERIC?
         BNO   ERROR4             NO - ERROR
         TM    4(R2),X'F0'        NUMERIC?
         BNO   ERROR4             NO - ERROR
         PACK  DBWRD,3(2,R2)      PACK INTO WORK AREA
         CVB   R15,DBWRD          CONVERT TO BINARY
         STH   R15,RC             SAVE FOR COMPARE
         MVI   RCSW,X'F0'         SET SW INDICATING SPECIFIC RETURN
*                                  CODES
         B     LLL020
KKK020   EQU   *
         MVI   RCSW,X'FF'         SET SW INDICATING ALL NON-ZERO
*                                  RETURN CODES
LLL020   EQU   *
         LA    R2,6(R2)           ADDR OF NEXT PARM, IF ANY
         CLI   0(R2),C','         ANY MORE PARMS ?
         LA    R2,1(R2)           BUMP TO NEXT PARM
         BNE   EXIT020            NO -DONE
         B     AAA020             YES - CHECK NEXT OPTIONAL PARM
MMM020   EQU   *
         MVC   CLASS,6(R2)        SAVE JOB CLASS FOR COMPARE
         LA    R2,8(R2)           ADDR OF NEXT OPTIONAL PARM, IF ANY
         CLI   0(R2),C','         ANY MORE PARMS ?
         BNE   EXIT020            NO - DONE
         LA    R2,1(R2)           BUMP TO NEXT PARM
         B     AAA020             YES - CHECK NEXT OPTIONAL PARM
EXIT020  EQU   *
         EJECT
*----------------------------------------------------------------------
*
*             PROCESS OPTIONAL CONTROL CARDS - IF ANY
*
*----------------------------------------------------------------------
ENTRY030 EQU   *
         GET   SYSIN              GET FIRST JOBNAME CARD, IF ANY
         LR    R2,R1              RECORD ADDR
         MVI   CNTLLINE,C' '      SKIP 1 LINE
         MVC   CNTLLINE+1(23),=C'OPTIONAL CONTROL CARD: '
         MVC   CNTLLINE+24(71),0(R1)   MOVE CONTROL CARD TO LINE
         PUT   SYSPRINT,CNTLLINE  PRINT IT
NOP030   NOP   AAA030             FALL THRU 1ST TIME
         MVI   JOBSW,X'FF'        SET SWITCH IF WE DIDN'T HIT EODAD ON
*                                  1ST TRY
         L     R0,SIZE            CONSTANT FOR GETMAIN
         GETMAIN R,LV=(0)         GET A SAVEAREA
         ST    R1,BEGIN           STORE BEGINNING OF CHAIN
         ST    R1,PREV            STORE
         MVC   0(4,R1),SIZE       STORE SIZE OF AREA IN AREA
         MVC   4(4,R1),=F'0'      CLEAR NEXT SAVEAREA CHAIN POINTER
         MVC   8(8,R1),4(R2)      MOVE JOBNAME TO SAVEAREA
         MVI   NOP030+1,X'F0'     ACTIVATE BR
         B     ENTRY030           GET NEXT SYSIN JOBNAME CARD
AAA030   EQU   *
         L     R0,SIZE            CONSTANT FOR GETMAIN
         GETMAIN R,LV=(0)         GET A SAVEAREA
         L     R3,PREV            PREVIOUS SAVEAREA
         MVC   0(4,R1),SIZE       ST SIZE OF THIS WA IN THIS WA
         ST    R1,4(R3)           ST THIS WA ADDR IN PREV WA
         MVC   4(4,R1),=F'0'      CLEAR NEXT SAVEAREA CHAIN POINTER
         MVC   8(8,R1),4(R2)      MOVE JOBNAME TO SAVEAREA
         ST    R1,PREV            SAVE THIS SAVEAREA ADDR AS PREV
         B     ENTRY030           GET NEXT SYSIN JOBNAME CARD
EXIT030  EQU   *                  EODAD FOR SYSIN DCB
         SPACE 3
*----------------------------------------------------------------------
*
*             SET PROGRAM PROCESS SWITCHES
*
*----------------------------------------------------------------------
ENTRY040 DS    0H
         CLC   SYSUSR,=X'0000'    ABENDS REQUESTED ?
         BNE   AAA040             YES - SKIP SETTING NOP TO BR
         MVI   NOP050+1,X'F0'     SET TO BYPASS ABEND CHECK
AAA040   EQU   *
         CLI   RCSW,X'00'         RETURN CODES REQUESTED ?
         BNE   BBB040             YES - SKIP SETTING NOP TO BR
         MVI   NOP060+1,X'F0'     SET TO BYPASS RETURN CODE CHECK
BBB040   EQU   *
         CLI   CLASS,X'00'        JOB CLASS SPECIFIED ?
         BNE   CCC040             YES - SKIP SETTING NOP TO BR
         MVI   NOP070+1,X'F0'     SET TO BYPASS JOBCLASS CHECK
CCC040   EQU   *
         CLI   JOBSW,X'00'        JOB NAME CARDS IN SYSIN ?
         BNE   EXIT040            YES - SKIP SETTING NOP TO BR
         MVI   NOP080+1,X'F0'     SET TO BYPASS JOBNAME CHECK
EXIT040  EQU   *
         EJECT
*----------------------------------------------------------------------
*
*             GET AN SMF RECORD
*             CHECK ABEND CODE - IF REQUESTED
*
*----------------------------------------------------------------------
ENTRY050 DS    0H
         USING SMFTYP05,R2
         GET   SYSUT1             GET AN SMF RECORD
         LR    R2,R1              ADDR OF RECORD
NOP050A  NOP   XXX050
         MVI   NOP050A+1,X'F0'    ACTIVATE BRANCH
         MVC   CNTLLINE,=133C' '  CLEAR LINE
         MVI   CNTLLINE,C'0'      SKIP 2 LINES
         MVC   CNTLLINE+1(30),=C'DATE OF FIRST RECORD ON FILE: '
         UNPK  CNTLLINE+31(5),SMF5DTE+1(3)
         OI    CNTLLINE+35,X'F0'
         PUT   SYSPRINT,CNTLLINE
XXX050   EQU   *
         CLI   SMF5RTY,X'05'      TYPE 5 RECORD ?
         BNE   ENTRY050           NO - GET NEXT RECORD
AAA050   EQU   *
         CP    SMF5DTE,START      WITHIN
         BL    ENTRY050           LIMITS
         CP    SMF5DTE,END        OF SPECIFIED
         BH    ENTRY050           DATES ?
NOP050   NOP   EXIT050            BYPASS IF SYS OR USR ABEND NOT
*                                  REQUESTED
         TM    SMF5JBTI,X'02'     DID JOB ABEND ?
         BZ    CCC050             NO - BYPASS THIS ROUTINE
         TM    SMF5JCC,X'80'      USER ABEND ?
         BZ    BBB050             NO - MUST BE SYS ABEND
         CLI   USR,X'FF'          USER ABENDS REQUESTED ?
         BNE   ENTRY050           NO - GET NEXT RECORD
         B     ENTRY070           YES - CHK CLASS
BBB050   EQU   *
         CLI   SYS,X'FF'          SYS ABENDS REQUESTED ?
         BNE   ENTRY050           NO - GET NEXT RECORD
         B     ENTRY070           YES - CHK CLASS
CCC050   EQU   *
         CLI   RCSW,X'00'         ARE WE CHECKING RETURN CODES ?
         BE    ENTRY050           NO - GET NEXT RECORD
EXIT050  EQU   *
         EJECT
*----------------------------------------------------------------------
*
*             CHECK RETURN CODE - IF REQUESTED
*
*----------------------------------------------------------------------
ENTRY060 DS    0H
NOP060   NOP   EXIT060            BYPASS IF RC NOT REQUESTED
         TM    SMF5JBTI,X'02'     DID JOB ABEND ?
         BO    ENTRY050           YES - GET NEXT RECORD
         CLI   RCSW,X'FF'         ALL NON-ZERO RC REQUESTED ?
         BE    AAA060             YES - CHECK IF RC NOT-ZERO
         CLC   SMF5JCC,RC         RETURN CODES EQUAL ?
         BNE   ENTRY050           NO - GET NEXT RECORD
         B     EXIT060            YES - EXIT
AAA060   EQU   *
         CLC   SMF5JCC,=X'0000'   RETURN CODE ZERO ?
         BE    ENTRY050           YES - GET NEXT RECORD
EXIT060  EQU   *
         SPACE 3
*----------------------------------------------------------------------
*
*             CHECK JOB CLASS - IF REQUESTED
*
*----------------------------------------------------------------------
ENTRY070 DS    0H
NOP070   NOP   EXIT070            EXIT IF CLASS NOT REQUESTED
         CLC   SMF5JICL,CLASS     JOB CLASSES EQUAL ?
         BNE   ENTRY050           NO - GET NEXT RECORD
EXIT070  EQU   *
         SPACE 3
*----------------------------------------------------------------------
*
*             CHECK JOB NAME - IF REQUESTED
*
*----------------------------------------------------------------------
ENTRY080 DS    0H
NOP080   NOP   EXIT080            EXIT IF NO JOBNAME CARDS
         L     R1,BEGIN           1ST JOBNAME
LOOP080  EQU   *
         CLC   8(8,R1),SMF5JBN    THIS JOBNAME REQUESTED
         BE    EXIT080            YES - PRINT IT
         CLC   4(4,R1),=F'0'      ANY MORE JOBNAMES IN CHAIN ?
         BE    ENTRY050           NO - GET NEXT RECORD
         L     R1,4(R1)           GET NEXT JOBNAME
         B     LOOP080            CHECK ALL JOBNAMES
EXIT080  EQU   *
         EJECT
*----------------------------------------------------------------------
*
*             SET UP PRINT LINE
*
*----------------------------------------------------------------------
ENTRY090 DS    0H
         MVC   PRJOBNM,SMF5JBN    JOBNAME
         MVC   PRJOBCL,SMF5JICL   JOBCLASS
*
         MVI   SMFTIME,X'00'      SET TO ZERO
         MVC   SMFTIME+1(3),SMF5JCPU  TCB TIME BI 100'S OF A SEC
         BAL   R14,ENTRY900       CONVERT TIME TO HH.MM.SS.TH
         MVC   PRHHTCB,HH
         MVC   PRMMTCB,MM
         MVC   PRSSTCB,SS
         MVC   PRTHTCB,TH
*
         MVI   SMFTIME,X'00'      SET TO ZERO
         MVC   SMFTIME+1(3),SMF5SRBT  SRB TIME BI 100'S OF A SEC
         BAL   R14,ENTRY900       CONVERT TIME TO HH.MM.SS.TH
         MVC   PRHHSRB,HH
         MVC   PRMMSRB,MM
         MVC   PRSSSRB,SS
         MVC   PRTHSRB,TH
*
         MVC   PRENDATE,EDIT50    YYDDD
         ED    PRENDATE,SMF5DTE+1   JOB END DATE
*
         ICM   R0,15,SMF5JIT      JOB START TIME
         ICM   R1,15,SMF5TME      JOB END TIME
         SP    SMF5DTE,SMF5JID    END DATE - START DATE
LOOP090A EQU   *
         CP    SMF5DTE,=P'0'      SAME DAY ?
         BE    AAA090             YES - OK
         A     R1,=F'8640000'     1/100 TH'S OF A SEC IN A DAY
         SP    SMF5DTE,=P'1'      SUBTRACT 1 DAY FOR ABOVE ADD
         B     LOOP090A           GO AGAIN
AAA090   EQU   *
         SR    R1,R0              ELAPSED TIME
         ST    R1,ELAPSED         SAVE
         ST    R1,SMFTIME         CONVERT TO HH.MM.SS.TH
         BAL   R14,ENTRY900       CONVERT TIME TO CHARACTER FORMAT
         MVC   PRHHELA,HH
         MVC   PRMMELA,MM
         MVC   PRSSELA,SS
*
         MVC   SMFTIME,SMF5JIT    JOB INITIATION TIME
         BAL   R14,ENTRY900       CONVERT TO CHARACTER
         MVC   PRHHSTA,HH
         MVC   PRMMSTA,MM
         MVC   PRSSSTA,SS
*
         MVC   SMFTIME,SMF5TME    JOB END TIME
         BAL   R14,ENTRY900       CONVERT TO CHARACTER
         MVC   PRHHEND,HH
         MVC   PRMMEND,MM
         MVC   PRSSEND,SS
*
         MVI   PRENDTP,C'R'       MOVE IN 'R' FOR RETURN CODE
         TM    SMF5JBTI,X'02'     DID JOB ABEND ?
         BNO   BBB090             NO - NORMAL END
         MVI   PRENDTP,C'S'       MOVE IN 'S' FOR SYSTEM ABEND
         TM    SMF5JCC,X'80'      USER ABEND ?
         BNO   CCC090             NO - SYSTEM ABEND
         MVI   PRENDTP,C'U'       MOVE IN 'U' FOR USER ABEND
BBB090   EQU   *
         XR    R1,R1
         ICM   R1,3,SMF5JCC       GET COMPLETION CODE
         CVD   R1,DBWRD           CONVERT TO DECIMAL
         UNPK  WORK1,DBWRD        MAKE PRINTABLE
         OI    WORK1+15,X'F0'
         MVC   PRRC,WORK1+12
         B     DDD090
CCC090   EQU   *
         UNPK  WORK1(5),SMF5JCC(3)   1 MORE THAN FIELD SIZE
         NC    WORK1(4),=4X'0F'   CLEAR SIGN BITS
         TR    WORK1(4),=C'0123456789ABCDEF'
         MVC   PRRC,WORK1
         MVI   PRRC,C' '          SYSTEM CODES ARE ONLY 3 BYTES
DDD090   EQU   *
         XR    R0,R0              CLEAR R0
         XR    R1,R1                    R1
         XR    R15,R15                  R15
         ICM   R1,7,SMF5JCPU      TCB TIME
         BZ    EEE090             ZERO - CANT DO CALCULATIONS
         MH    R1,=H'10'          X 10 FOR N.N
         ICM   R15,7,SMF5SRBT     SRB TIME
         BZ    EEE090             ZERO - CANT DO CALCULATIONS
         DR    R0,R15             RATIO OF TCB -> SRB
         CVD   R1,DBWRD
         MVC   PRTCBSRB,=X'4020214B20'
         ED    PRTCBSRB,DBWRD+6   MOVE TO PRINT LINE
*
         XR    R0,R0              CLEAR R0
         XR    R1,R1                    R1
         XR    R15,R15                  R15
         ICM   R1,7,SMF5JCPU      TCB TIME
         ICM   R15,7,SMF5SRBT     SRB TIME
         AR    R1,R15             = CPU TIME
         MH    R1,=H'100'         X 100 FOR PERCENT
         L     R15,ELAPSED        ELAPSED TIME
         DR    R0,R15             %CPU UTILIZED FOR JOB
         CVD   R1,DBWRD
         MVC   PRCPUELA,=X'40202120'
         ED    PRCPUELA,DBWRD+6   MOVE TO PRINT LINE
         MVI   PRCPUELA+4,C'%'
         B     FFF090
EEE090   EQU   *
         MVC   PRCPUELA,=10C'-'
         MVC   PRTCBSRB,=10C'-'
         MVI   PRCPUELA+4,C' '
FFF090   EQU   *
         BAL   R14,ENTRY910       PRINT ROUTINE
         B     ENTRY050           GET NEXT INPUT RECORD
         EJECT
*----------------------------------------------------------------------
*
*             TRANSLATE SMF TIME TO PRINTABLE
*
*----------------------------------------------------------------------
ENTRY900 DS    0H
         ST    R14,ST900          SAVE RETURN ADDR
         L     R3,SMFTIME               TIME IN BIN SEC/100
         CVD   R3,DBLWRD
         UNPK  WORK,DBLWRD+6(2)
         MVC   TH,WORK+1
         ZAP   WRK1,=P'0'
         MVO   WRK1,DBLWRD(7)
         MVO   WRK1,WRK1(15)
         DP    WRK1,=P'60'
         UNPK  WORK,WRK1+14(2)
         MVC   SS,WORK+1
         ZAP   WRK2,WRK1(14)
         DP    WRK2,=P'60'
         UNPK  WORK,WRK2+14(2)
         MVC   MM,WORK+1
         UNPK  WORK,WRK2+12(2)
         MVC   HH,WORK+1
         OI    HH+1,X'F0'
         OI    MM+1,X'F0'
         OI    SS+1,X'F0'
         OI    TH+1,X'F0'
         CLC   HH,=2C'0'          ZERO HOURS ?
         BNE   EXIT900            NO - DONE
         MVC   HH,=2C' '          YES - SET TO BLANKS
         CLC   MM,=2C'0'          ZERO MINUTES ?
         BNE   EXIT900            NO - DONE
         MVC   MM,=2C' '          YES - SET TO BLANKS
         CLC   SS,=2C'0'          ZERO SECONDS ?
         BNE   EXIT900            NO - DONE
         MVC   SS,=2C' '          YES - SET TO BLANKS
EXIT900  EQU   *
         L     R14,ST900
         BR    R14
         EJECT
*----------------------------------------------------------------------
*
*             PRINT ROUTINE
*
*----------------------------------------------------------------------
ENTRY910 EQU   *
         ST    R14,ST910
         CP    LINES,=P'55'       END OF PAGE ?
         BL    AAA910             NO - SKIP HEADINGS
         ZAP   LINES,=P'0'        RE-SET LINE COUNTER
         AP    PAGE,=P'1'         ADD 1 TO PAGE COUNTER
         MVC   HDPAGE,EDIT30      999
         ED    HDPAGE,PAGE
         PUT   SYSPRINT,HD1
         PUT   SYSPRINT,HD2
         PUT   SYSPRINT,HD3
         MVI   CCC,C'0'           SKIP 2 LINES
AAA910   EQU   *
         AP    LINES,=P'1'
         PUT   SYSPRINT,PRLINE
         MVI   CCC,C' '           SKIP 1 LINE
EXIT910  EQU   *
         L     R14,ST910
         BR    R14
         EJECT
*----------------------------------------------------------------------
*
*             EOJ AND CLEAN-UP
*
*----------------------------------------------------------------------
EOJ      DS    0H
         MVI   CNTLLINE,C'1'      SKIP TO CHANNEL 1
         MVC   CNTLLINE+1(30),=C' DATE OF LAST RECORD ON FILE: '
         UNPK  CNTLLINE+31(5),SMF5DTE+1(3)
         OI    CNTLLINE+35,X'F0'
         PUT   SYSPRINT,CNTLLINE
         L     R2,BEGIN           FIRST SAVEAREA
FREELOOP EQU   *
         C     R2,=F'0'           ANY MORE SAVEAREAS ?
         BE    EOJ1               NO - DONE
         LR    R1,R2              ADDR OF SAVEAREA
         L     R2,4(R1)           ADDR OF NEXT SAVEAREA
         L     R0,0(R1)           LNGTH OF SAVE AREA
         FREEMAIN  R,LV=(0),A=(1)
         B     FREELOOP
EOJ1     EQU   *
         CLOSE (SYSIN,,SYSUT1,,SYSPRINT)
         DELETE  EP=SMFTCNVR
RETURN   EQU   *
         L     R15,RETCODE        LOAD RETURN CODE
         $EPILOG
         EJECT
*----------------------------------------------------------------------
*
*             ERROR ROUTINES
*
*----------------------------------------------------------------------
ERROR1   DS    0H                 INVALID START DATE
         MVC   RETCODE,=F'4'      SET RETURN CODE OF 4
         PUT   SYSPRINT,=CL133' ERROR1 - START DATE NOT NUMERIC'
         B     EOJ1
ERROR2   DS    0H                 INVALID END DATE
         MVC   RETCODE,=F'4'      SET RETURN CODE OF 4
         PUT   SYSPRINT,=CL133' ERROR2 - END DATE NOT NUMERIC'
         B     EOJ1
ERROR3   DS    0H                 UKNOWN PARM TYPE
         MVC   RETCODE,=F'4'      SET RETURN CODE OF 4
         PUT   SYSPRINT,=CL133' ERROR3 - INVALID OPTION ON PARM CARD'
         B     EOJ1
ERROR4   DS    0H                 INVALID RC
         MVC   RETCODE,=F'4'      SET RETURN CODE OF 4
         PUT   SYSPRINT,=CL133' ERROR3 - RETURN CODE NOT NUMERIC'
         B     EOJ1
         EJECT
CNTLLINE DC    CL133' '
PRLINE   DS    0CL133
CCC      DC    C' '           0
PRJOBNM  DC    CL8' '         8
         DC    CL3' '        11
PRJOBCL  DC    CL1' '        14
         DC    CL3' '        15
PRTCBTM  DS    0CL10         18
PRHHTCB  DC    CL2' '          18
         DC    C'.'            20
PRMMTCB  DC    CL2' '          21
         DC    C'.'            23
PRSSTCB  DC    CL2' '          24
         DC    C'.'            26
PRTHTCB  DC    CL2' '        27
         DC    CL3' '        29
PRSRBTM  DS    0CL10         SRB TIME
PRHHSRB  DC    CL2' '
         DC    C'.'
PRMMSRB  DC    CL2' '
         DC    C'.'
PRSSSRB  DC    CL2' '
         DC    C'.'
PRTHSRB  DC    CL2' '
         DC    CL3' '
PRELAPS  DS    0CL8          ELAPSED TIME
PRHHELA  DC    CL2' '
         DC    C'.'
PRMMELA  DC    CL2' '
         DC    C'.'
PRSSELA  DC    CL2' '
         DC    CL3' '
PRSTIME  DS    0CL8          START TIME
PRHHSTA  DC    CL2' '
         DC    C'.'
PRMMSTA  DC    CL2' '
         DC    C'.'
PRSSSTA  DC    CL2' '
         DC    CL3' '
PRETIME  DS    0CL8          END TIME
PRHHEND  DC    CL2' '
         DC    C'.'
PRMMEND  DC    CL2' '
         DC    C'.'
PRSSEND  DC    CL2' '
         DC    CL3' '
PRENDTP  DC    CL1' '
PRRC     DC    CL4' '
         DC    CL3' '
PRENDATE DC    CL6' '
         DC    CL3' '
PRTCBSRB DC    CL5' '   TCB/SRB RATIO
         DC    CL3' '
PRCPUELA DC    CL4' '   SRB+TCB/ELAPSED  =  %CPU UTILIZATION
         DC    100C' '
         EJECT
HD1      DC    CL5'1'
HDATE    DC    CL8' '
         DC    30C' '
         DC    C'JOB TERMINATION REPORT'
         DC    30C' '
         DC    CL4'PAGE'
HDPAGE   DC    CL4' '
         DC    CL5' '
HPGM     DC    CL8' '
         DC    CL80' '
********
HD2      DC    C'0                TCB TIME     SRB TIME      ELA TIME'
         DC    C'     START '
         DC    C'      END        COMPLETION '
         DC    80C' '
********
HD3      DC    C' JOBNAME    C   HH.MM.SS.TH   HH.MM.SS.TH   HH.MM.SS'
         DC    C'   HH.MM.SS'
         DC    C'   HH.MM.SS    CODE     DATE   SRB/TCB  CPU-%'
         DC    80C' '
********
SYSUSR   DS    0H
SYS      DC    X'00'
USR      DC    X'00'
RC       DC    H'0'
RCSW     DC    X'00'        00 - NOT REQUESTED
*                           0F - SPECIFIC REQUEST
*                           FF - ALL NON-ZERO REQUESTED
CLASS    DC    X'00'
JOBSW    DC    X'00'
********
EDIT30   DC    X'40202021'
EDIT50   DC    X'402020202020'
LINES    DC    PL2'60'
PAGE     DC    PL2'0'
DBWRD    DC    D'0'
DBLWRD   DC    D'0'
WRK1     DC    PL16'0'
WRK2     DC    PL16'0'
WORK     DS    CL3
ELAPSED  DC    F'0'
WORK1    DC    CL16' '
TCADDR   DC    F'0'
RETCODE  DC    F'0'
START    DC    PL4'0'
END      DC    PL4'0'
BEGIN    DC    F'0'
PREV     DC    F'0'
SAVE1    DC    F'0'
ST900    DC    F'-1'
ST910    DC    F'-1'
SIZE     DC    F'16'
********
SMFTIME  DC    F'0'
TIME     DS    0CL8
HH       DC    CL2' '
MM       DC    CL2' '
SS       DC    CL2' '
TH       DC    CL2' '
********
         LTORG
         PRINT NOGEN
SYSIN    DCB   DDNAME=SYSIN,DSORG=PS,MACRF=GL,EODAD=EXIT030
SYSUT1   DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=GL,EODAD=EOJ,BFTEK=A
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,RECFM=FBA,BLKSIZE=133,X
               LRECL=133
SMFTYP05 DSECT
         IFASMFR 5
         END
