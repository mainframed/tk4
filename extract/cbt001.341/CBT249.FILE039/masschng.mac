 TITLE 'MASSCHNG - MASS CHANGE SUBSTITUTION PROGRAM VERSION 2.1'
***********************************************************************
*
*        THIS PROGRAM WILL SUBSTITUTE FOR AN OLD CHARACTER STRING
*        OF VARIABLE LENGTH A NEW CHARACTER STRING OF
*        LIKE OR DIFFERENT LENTH FOR A GIVEN FILE.
*
*        THE INPUT FILE MUST HAVE AN LRECL OF 80 (BLOCKED OR UNBLOCKED)
*        AND THE OUTPUT FILE CREATED WILL BE LRECL 80 (BLOCKED OR
*        UNBLOCKED).
*
*        PARAMETERS (REQUESTS) ARE READ FROM 'SYSIN' AND MAY BE
*        STACKED.  THAT IS, MULTIPLE REQUESTS MAY BE MADE FOR A
*        GIVEN FILE.  CHANGE REQUESTS ARE PROCESSED FIFO, AND CARE
*        MUST BE TAKEN TO INSURE THAT SUBSEQUENT REQUESTS DO NOT
*        MODIFY PREVIOUS REQUESTS.
*
*        REQUIRED DD CARDS:
*                 SYSPRINT - THIS DATSET WILL CONTAIN A LISTING OF THE
*                            NEW FILE WITH MESSAGES INDICATING THE
*                            CHANGES MADE AS WELL AS CHANGES THAT COULD
*                            NOT BE CHANGED.
*                 SYSUT1   - THIS DATASET IS THE INPUT FILE WHICH IS TO
*                            BE CHANGED.
*                 SYSUT2   - THIS IS THE OUTPUT FILE CREATED CONTAINING
*                            THE REQUESTED CHANGES.
*                 SYSIN    - THIS DATASET CONTAINS THE REQUESTS AS
*                            SPECIFIED BY THE USER.
*
*        SYSUT1 AND SYSOUT MAY BE ANY SEQUENTIAL DATASET AS WELL
*        AS A MEMBER OF A PDS.  IN FACT, THEY MAY BOTH POINT TO
*        THE SAME MEMBER OF THE SAME PDS.  THE ONLY RESTRICTION
*        IS THAT THE LRECL FOR BOTH BE 80.
*
***********************************************************************
         EJECT
***********************************************************************
*
*        TWO PARMS MAY BE PASSED TO MASSCHNG IN THE FOLLOWING
*        FORMAT:     PARM='PARM1,PARM2'   (BOTH OPTIONAL)
*        PARM1 IF USED CAN BE ANY SINGLE CHARACTER OR A 'C'.
*              IF NOT USED OR NOT 'C', STANDARD SOURCE/JCL IS
*              ASSUMED AND THE CHANGES ARE RESTRICTED TO COLUMNS
*              1 THROUGH 71.  IF 'C' IS SPECIFIED, COBOL SOURCE
*              IS ASSUMED, AND THE CHANGES ARE RESTRICTED TO
*              COLUMNS 7 THROUGH 71.
*        PARM2 IF USED, SPECIFIES THE PRINT OPTION (SYSPRINT).
*              IF NOT SPECIFIED, THE FULL OUTPUT FILE WILL BE
*              LISTED WITH CHANGES AND ERRORS.  IF SPECIFIED
*              AS 'ONLY', ONLY CHANGED AND UNCHANGABLE
*              MESSAGES ARE LISTED.
*
*        THE FORMAT OF THE REQUEST CARDS ARE AS FOLLOWS:
*                              --
*                   DELIM OLD-DATA DELIM NEW-DATA DELIM
*                              OR
*        C LOW HIGH DELIM OLD-DATA DELIM NEW-DATA DELIM
*                              --
*        WHERE:            'C' IS THE CHARACTER 'C' (FOR CHANGE)
*                          'LOW' IS THE BEGINNING SEQUENCE NUMBER FOR
*                          THE CHANGES
*                          'HIGH' IS THE ENDING SEQUENCE NUMBER FOR
*                          THE CHANGES
*                          'DELIM' IS ANY UNIQUE CHARACTER
*                          'OLD-DATA' IS THE OLD CHARACTER STRING
*                          'NEW-DATA' IS ITS REPLACEMENT STRING
*
*        NOTE THAT 'C' 'LOW' AND 'HIGH' ARE OPTIONAL, AND IF NOT
*        USED, MASSCHNG WILL PERFORM THE REQUESTS FOR THE ENTIRE FILE.
*
*                  EXAMPLE:
*                            /SYS1.PROCLIB/SYS2.PROCLIB/
*                            .SYS1.SYS2.
*             C  0 70005000  +//SYSIN+//SYSLIN+
*
*                  IN THE FIRST EXAMPLE, '/' IS THE DELIMITER,
*                  'SYS1.PROCLIB' IS THE OLD DATA,
*                  'SYS2.PROCLIB' IS THE NEW DATA.
*                  IN EXAMPLE TWO, A PERIOD IS USED
*                  FOR A DELIMITER, AND IN THREE,
*                  A PLUS SIGN IS USED AS THE DELIMITER.
*                  ALSO, IN EXAMPLE THREE, THE CHANGES ARE TO OCCUR
*                  FROM LINE '0' THROUGH LINE '70005000'.  NO CHECK
*                  IS MADE TO DETERMINE IF THE NAMED SEQUENCE NUMBERS
*                  EXIST IN THE INPUT FILE. (LOGICAL COMPARE)
*
***********************************************************************
       EJECT
MASSCHNG $PROLOG
         L     R11,BASE2AD         GET BASE REG 2
         USING MASSCHNG+4096,R11   INFORM ASSEMBLER
NOTFOUND EQU   8                   TRT NOT FOUND MASK
         L     R4,0(R1)            COPY PARM ADDRESS
         LH    R5,0(R4)            COPY PARM LENGTH
         CH    R5,=H'0'            IF ZERO
         BE    ENQIT               NO PARM INPUTTED
         CLI   2(R4),C'C'          IF 'C' COBOL SEQ (1-6)
         BNE   NOPARM              ELSE ASSUME ASMEMBLER (73-8)
         OI    FLAG,COB            SET FOR COBOL
         B     AROUND              SKIP TO SET TABLE
BASE2AD  DC    A(MASSCHNG+4096)    SECOND BASE VALUE
NOPARM   EQU   *                   CONTINUE
AROUND   EQU   *                   CONTINUE
         MVI   DELIMT+C',',C','    SET TABLE TO FIND COMMA
         BCTR  R5,0                DECREMENT FOR EXECUTE
         EX    R5,FINDC            FIND COMMA IN PARM
         BC    NOTFOUND,ENQIT      NOT THERE - ASSUME PRINT ALL
         CLC   1(4,R1),=C'ONLY'    IF 'ONLY' SET NOP
         BNE   ENQIT               ELSE CONTINUE
         OI    FLAG,ONLY           INDICATE ONLY REQUEST
         MVC   HEADER,BLANKS       CLEAR HEADER LINE FOR ONLY REQ
ENQIT    MVI   DELIMT+C',',X'00'   RESET DELIMITOR TABLE
         LA    R10,ORIGIN          SET CHAIN ORIGIN REGISTER
         RDJFCB  (SYSUT2)          READ JOB FILE CONTROL BLOCK FOR ENQ*
         MVC   MINOR,JFCBHLD       SAVE DSNAME                        *
         ENQ   (MAJOR,MINOR,E,,SYSTEM)  ENQ OUTPUT DATA SET           *
         L     R15,16              GET CVT ADDRESS
         L     R15,0(R15)          OLD/NEW POINTER
         L     R15,4(R15)          MY TCB ADDRESS
         TM    148(R15),X'80'      TSO USER?
         BZ    NEXTCARD            NO, BATCH
         OI    FLAG,TSOTASK        INDICATE SAME FOR PRINT
         OI    FLAG,ONLY           FORCE ONLY OPTION
NEXTCARD BAL   R14,CARD            GET INPUT PARM CARD
         MVC   PRTBUF(80),0(R1)    MOVE IT TO PRINT BUFFER
         LR    R3,R1               COPY TO WORK REG
         LR    R4,R1               COPY TO WORKING POINTER
         LA    R5,71(R1)           GET END OF CARD ADDR
         LR    R15,R5              COPY TO WORK REG
         SR    R15,R4              GET NUMBER OF CHARS REMAINING
         BCTR  R15,R0              DECREMENT FOR EXECUTE
         EX    R15,FINDNB          FIND FIRST NON BLANK CHAR
         BC    NOTFOUND,ERR1       NONE FOUND, ERROR
         LR    R4,R1               COPY HIT ADDRESS
         MVI   DELIMT,X'00'        CLEAR DELIMITER
         MVC   DELIMT+1(255),DELIMT  TRANSLATE TABLE
         GETMAIN R,LV=160          GETMAIN A DATA ELEMENT
         USING DATA,R10            INFORM ASSEMBLER
         ST    R1,CHAIN            SAVE PREVIOUS DATA ELEMENT ADDR
         LR    R10,R1              LOAD USING REG
         XC    CHAIN,CHAIN         CLEAR NEXT CHAIN FIELD
         SR    R15,R15             CLEAR FOR I.C.
         CLI   0(R4),C'C'          LINE NUMBER OPTION
         BNE   NOSEQ               FULL MASSCHANGE (NON-SPECIFIC)
         OI    FLAG,SEQ            INDICATE USING SEQUENCE #'S
         LA    R4,1(R4)            BUMP PAST CONTROL BYTE
         LR    R15,R5              COPY END ADDRESS
         SR    R15,R4              GET NEW LENGTH
         BZ    ERR3                NO MORE - ERROR
         BCTR  R15,0               DECREMENT FOR EXECUTE
         EX    R15,FINDNB          FIND LINE NUMBER
         BC    NOTFOUND,ERR6       INVALID LINE NUMBER
         TM    0(R1),X'F0'         TEST FOR NUMERIC
         BNO   ERR6                INVALID LINE NUMBER
         LR    R4,R1               COPY ADDRESS
         LR    R15,R5              COPY END ADDRESS
         SR    R15,R4              GET NEW LENGTH
         BZ    ERR6                INVALID LINE NUMBER
         BCTR  R15,0               DECREMENT FOR EXECUTE
         EX    R15,FINDB           FIND BLANK - END OF LINE NUMBER
         BC    NOTFOUND,ERR6       INVALID LINE NUMBER
         LR    R15,R1              COPY END OF LINE NUMBER
         SR    R15,R4              GET LINE NUMBER LENGTH
         BZ    ERR6                INVALID LINE NUMBER
         BCTR  R15,0               DECREMENT FOR EXECUTE
         EX    R15,PACKLNBR        PACK LINE NUMBER
         UNPK  STRTNBR,PACKIT      UNPACK TO 8 BYTES AND STORE
         OI    STRTNBR+7,X'F0'     NORMALIZE ZONES
         LR    R4,R1               COPY CURRENT POINTER
         LR    R15,R5              COPY END ADDRESS
         SR    R15,R4              GET NEW LENGTH
         BZ    ERR6                INVALID LINE NUMBER
         BCTR  R15,0               DECREMENT FOR EXECUTE
         EX    R15,FINDNB          FINT NEXT LINE NUMBER
         BC    NOTFOUND,ERR6       INVALID LINE NUMBER
         TM    0(R1),X'F0'         TEST FOR NUMERIC
         BNO   ERR6                INVALID LINE NUMBER
         LR    R4,R1               COPY POINTER
         LR    R15,R5              COPY END ADDRESS
         SR    R15,R4              GET NEW LENGTH
         BZ    ERR6                INVALID LINE NUMBER
         BCTR  R15,0               DECREMENT FOR EXECUTE
         EX    R15,FINDB           FIND END OF LINE NUMBER
         BC    NOTFOUND,ERR6       INVALID LINE NUMBER
         LR    R15,R1              COPY END OF LINE NUMBER
         SR    R15,R4              GET LINE NUMBER LENGTH
         BZ    ERR6                INVALID LINE NUMBER
         BCTR  R15,0               DECREMENT FOR EXECUTE
         EX    R15,PACKLNBR        PACK LINE NUMBER
         UNPK  ENDNBR,PACKIT       UNPACK FOR 8 BYTES AND STORE
         OI    ENDNBR+7,X'F0'      NORMALIZE ZONES
         CLC   STRTNBR,ENDNBR      COMPARE RANGE
         BH    ERR7                INVALID RANGE
         LR    R4,R1               COPY CURRENT POINTER
         LR    R15,R5              COPY END CARD ADDRESS
         SR    R15,R4              GET NEW LENGTH
         BZ    ERR3                NO MORE - ERROR
         BCTR  R15,0               DECREMENT FOR EXECUTE
         EX    R15,FINDNB          GET DELIMITOR
         BC    NOTFOUND,ERR3       NO MORE - ERROR
         LR    R4,R1               COPY HIT ADDRESS
         B     RESUME              CONTINUE
NOSEQ    MVC   STRTNBR,=D'0'       ASSUME FULL MASS CHANGE
         MVC   ENDNBR,=D'-1'       ASSUME FULL MASS CHANGE
RESUME   EQU   *
         IC    R15,0(R4)           GET DELIMITER CHAR
         LA    R14,DELIMT(R15)     GET ADDR OF CHARD IN TABLE
         STC   R15,0(R14)          STORE DELIMITER CHAR
         LA    R4,1(R4)            BUMP PAST DELIMITER CHAR
         LR    R15,R5              COPY END OF FIELD
         SR    R15,R4              GET NUMBER OF BYTES REMAINING
         BZ    ERR3                NOONE REMAIN, ERROR
         BCTR  R15,R0              DECREMENT FOR EXECUTE
         EX    R15,FINDIT          FIND NEXT OCCURRANCE OF DELIM
         BC    NOTFOUND,ERR2       NOT FOUND, ERROR
         LR    R15,R1              COPY HIT ADDRESS
         SR    R15,R4              GET NUMBER OF CHAR'S  SKIPPED
         BZ    ERR3                NONE SCANNED, ERROR
         BCTR  R15,R0              DECREMENT FOR EXEC
         STC   R15,OLDSIZE         SAVE FOR LATER COMPARE
         EX    R15,OLDMOVE         MOVE TO DATA ELEMENT
         LA    R4,1(R1)            BUMP PAST DELIMITER CHAR
         LR    R15,R5              GET END OF CARD
         SR    R15,R4              NUMBER REMAINING TO BE SCANNED
         BZ    ERR3                NONE LEFT, ERROR
         BCTR  R15,R0              DECREMENT FOR EXECUTE
         EX    R15,FINDIT          FIND LAST DELIMITER
         BC    NOTFOUND,ERR2       NOT FOUND,ERROR
         LR    R15,R1              SAVE HIT ADDRESS
         SR    R15,R4              GET NUMBER SCANNED
         BZ    ERR3                MINUS, ERROR
         BCTR  R15,R0              DECREMENT FOR EXECUTE
         STC   R15,NEWSIZE         SAVE FOR LATER MOVE
         EX    R15,NEWMOVE         MOVE NEW DATA TO ELEMENT
CONTINUE LA    R1,ASACHAR          POINT TO PRINT BUFFER
         CLC   PRTBUF+90(3),=CL3'***' ERROR IN REQUEST?
         BNE   TESTTSO             NO, SEE IF TSO USER
         BAL   R14,PRINT           COPY TO LISTING FILE
         B     NEXTCARD            GET NEXT CARD
TESTTSO  TM    FLAG,TSOTASK        IS THIS A TSO TASK?
         BO    NEXTCARD            YES, IGNORE NORMAL REQUESTS
         TM    FLAG,ONLY           ONLY REQUEST?
         BO    NEXTCARD            YES, SHOW ONLY CHANGES
         BAL   R14,PRINT           WRITE OUT REQUEST RECORD
         B     NEXTCARD            GO READ NEXT CARD
         EJECT
CARDEND  TM    FLAG,ERROR          WERE ANY ERRORS FOUND
         BNO   LETSGO              NO, CONTINUE
         L     R10,ORIGIN          SET UP ORIGIN REG
         B     FREETEST            FREE ANY ELEMENTS GOTTEN
LETSGO   LTR   R10,R10             ANY ELEMENTS BUILT?
         BZ    ERR4                NO, INFORM USER
         LA    R1,BLANKS           GET PRINT LINE ADDRESS
         BAL   R14,PRINT+4         DO SKIP TO ONE
NEXTREC  L     R10,ORIGIN          GET ADDRESS OF FIRST ELEMENT
         BAL   R14,IN              GET DATA RECORD
         MVC   BUF,0(R1)           MOVE RECORD TO WORK AREA
COMPNEXT EQU   *                   COMPARISON ROUTINE
         TM    FLAG,SEQ            ARE WE CHECKING SEQ NUMBERS?
         BNO   SKIPSEQ             NO, IGNORE SEQUENCE CHECK
         BAL   R14,CHECKSEQ        DO SEQ CHECK
         B     *+4(R15)            IF R15 = 0 CONTINUE
         B     NEXTONE             IF R15 = 4 SKIP IT
SKIPSEQ  LA    R8,BUF              SET WORKING POINTER
         LA    R9,71               SET BCT LOOP CONTROL
         SR    R15,R15             CLEAR FOR IC
         IC    R15,OLDSIZE         GET SIZE OF OLD DATA
         SR    R9,R15              DECREMENT BY SIZE OF DATA
COMPLOOP EX    R15,COMPARE         COMPARE FOR OLD DATA
         BE    SUB                 EQUAL, SUBSTITUTE FOR NEW DATA
BACK     LA    R8,1(R8)            UPDATE TO NEXT CHAR
         BCT   R9,COMPLOOP         LOOP FOR NUMBER OF CHARS
NEXTONE  L     R10,CHAIN           GET NEXT ELEMENT
         LTR   R10,R10             ANY MORE?
         BNZ   COMPNEXT            YES, GO COMPARE FOR THIS ONE TOO
         LA    R1,BUF              GET DATA POINTER
         BAL   R14,OUT             WRITE IT OUT
         MVC   PRTBUF(80),BUF      MOVE RECORD TO PRT BUF
         LA    R1,ASACHAR          GET PRINT DATA POINTER
         BAL   R14,PRT             PRINT RECORD
         B     NEXTREC             GO GET NEXT INPUT RECORD
         EJECT
*
*  ADDITION PER M.J.D. 06-02-75
*        MASS CHANGE THRU SPECIFIED RANGE ONLY
*
CHECKSEQ TM    FLAG,COB            COBOL SEQ FIELD?
         BO    COBOLSEQ            YES, GO THERE
         CLC   BUF+72(8),STRTNBR   IF GREATER THAN START
         BL    RTRN0               AND
         CLC   BUF+72(8),ENDNBR    LESS THAN END
         BH    RTRN0
RTRN4    LA    R15,4               FOUND HIT
         BR    R14                 RETURN
RTRN0    LA    R15,0               NO HIT
         BR    R14                 RETURN
COBOLSEQ CLC   BUF(6),STRTNBR+2    IF  GREATER THAN START
         BL    RTRN0               AND
         CLC   BUF(6),ENDNBR+2     LESS THAN END
         BH    RTRN0
         B     RTRN4               FOUND HIT
SUB      CLC   OLDSIZE,NEWSIZE     COMPARE OLD AND NEW SIZES
         BL    MORE                NEW IS LARGER
         BH    LESS                NEW IS LOWER
         EX    R15,SUBEQ           EQUAL, MOVE DATA
         MVI   PRTBUF+89,C'*'      INFORM USER OF CHANGE
         SR    R14,R14             CLEAR FOR INSERT
         IC    R14,NEWSIZE         GET SIZE OF NEW DATA
         AR    R8,R14              BUMP PASSED CHANGED DATA
         B     BACK                GO CHECK NEXT CHAR
         EJECT
MORE     SR    R14,R14             CLEAR FOR IC
         IC    R14,NEWSIZE         GET NEW SIZE
         SR    R14,R15             GET SIZE DIFFERENCE
         LA    R2,BUF+70           GET END OF BUFFER COL(71)
MORECHK  CLI   0(R2),C' '          BLANK?
         BNE   ERR5                NO, CANT SUBSTITUTE
         BCTR  R2,R0               DECREMENT FOR EX
         BCT   R14,MORECHK         CHECK PREVIOUS CHAR
         IC    R14,NEWSIZE         GET SIZE OF NEW DATA
         MVC   WORK,BUF            MOVE TO WORK AREA
         LA    R1,BUF              ADDRESS OF BUFFER
         LR    R2,R8               COPY HIT ADDRESS
         SR    R2,R1               GET DISPLACEMENT TO HIT
         LA    R2,1(R2,R14)        ADD OFFSET TO DISPLACEMENT
         LA    R3,70               GET MAX SIZE
         LR    R0,R2               COPY DISPLACEMENT
         SR    R3,R0               GET LENGTH OF MOVE
         BNP   MORESKIP            NONE TO MOVE, SKIP IT
         BCTR  R3,R0               DECREMENT FOR EXECUTE
         LA    R2,WORK(R2)         GET ADDRESS OF TO FIELD
         LR    R4,R8               COPY HIT ADDRESS
         LA    R4,1(R4,R15)        GET ADDRESS OF FROM FIELD
         EX    R3,MOVEMORE         MOVE REMAINING TO WORK AREA
         MVC   BUF,WORK            MOVE BACK TO REAL BUFFER
MORESKIP EX    R14,MOVEDATA        SUBSTITUTE NEW FOR OLD DATA
         MVI   PRTBUF+89,C'*'      INFORM USER OF CHANGE
         AR    R8,R14              BUMP PASSED CHANGED DATA
         B     BACK                GO CHECK NEXT CHAR
LESS     LR    R1,R8               COPY HIT ADDRESS
         SR    R0,R0               CLEAR FOR IC
         IC    R0,OLDSIZE          GET OLD DATA SIZE
         AR    R1,R0               ADD TO HIT ADDRESS
         LR    R2,R8               COPY HIT ADDRESS
         IC    R0,NEWSIZE          GET SIZE OF NEW DATA
         AR    R2,R0               ADD TO HIT ADDRESS
         LA    R3,BUF+71           GET END OF RECORD
         LR    R4,R1               FROM START
         SR    R3,R4               SIZE TO MOVE
         BCTR  R3,R0               DECREMENT FOR EX
         EX    R3,MOVELESS         MOVE REMAINING TO NEW REMAIN
         SR    R2,R2               CLEAR FOR IC
         SR    R1,R1               DITTO
         IC    R2,OLDSIZE          GET OLD DATA SIZE
         IC    R1,NEWSIZE          GET NEW DATA SIZE
         SR    R2,R1               GET DIFFERENCE
         LA    R1,BUF+71           GET END OF RECORD
         SR    R1,R2               MINUS SIZE
         BCTR  R2,R0               DECREMENT FOR EXECUTE
         EX    R2,MOVEPAD          MOVE BLANKS TO END
         IC    R2,NEWSIZE          GET SIZE OF NEW DATA
         EX    R2,MOVEDATA         MOVE SUBSTITUTE DATA
         MVI   PRTBUF+89,C'*'      INFORM USER OF CHANGE
         SR    R14,R14             CLEAR FOR INSERT
         IC    R14,NEWSIZE         GET SIZE OF NEW DATA
         AR    R8,R14              BUMP PASSED CHANGED DATA
         B     BACK                GO CHECK NEXT CHAR
         EJECT
IN       ST    R14,SAVER14         SAVE RETURN REG
RDR      BAL   R14,INPUT           READ INPUT
         MVC   BUF,0(R1)           STORE INPUT
         TM    FLAG,SEQ            RANGE OPTION?
         BNO   INRTN               NO, SKIP SEQ CHECKS
         TM    FLAG,COB            COBOL SEQUENCE NUMBERS?
         BO    INCOB               YES, TO COBOL SEQ ROUTINE
         PACK  PACKIT,BUF+72(8)    PACK FOR NUMERIC TEST
         UNPK  HLDUNPK,PACKIT      UNPK FOR NUMBERIC TEST
         OI    HLDUNPK+7,X'F0'     NORMALIZE ZONE
         CLC   HLDUNPK,BUF+72      IF EQUAL
         BE    INRTN               ASSUME OK
ERR8     LA    R1,BUF              LOAD FOR WRITE
         BAL   R14,OUT             WRITE TO OUTPUT
         TM    FLAG,NLN            PREVIOUSLY ISSUED MSG?
         BNO   ERR8A               NO,CONTINUE
         TM    FLAG,TSOTASK        IS THIS A TSO USER?
         BO    RDR                 YES, SKIP MULTIPLE MSG'S
ERR8A    OI    FLAG,NLN            SET BEEN-HERE INDICATOR
         MVC   PRTBUF+90(30),=CL30'*** INPUT NOT LINE NUMBERED'
         MVC   PRTBUF(80),BUF      PRINT WITH ERROR MESSAGE
         LA    R1,ASACHAR          LOAD FOR PRINT
         BAL   R14,PRT             PRINT
         B     RDR                 TRY NEXT
INRTN    L     R14,SAVER14         RESTORE RETURN
         BR    R14                 RETURN
INCOB    PACK  PACKIT,BUF(6)       PACK FOR NUMERIC TEST
         UNPK  HLDUNPK,PACKIT      UNPK FOR NUMERIC TEST
         OI    HLDUNPK+7,X'F0'     NORMALIZE ZONE
         CLC   HLDUNPK+2(6),BUF    IF  EQUAL
         BE    INRTN               ASSUME OK
         B     ERR8                ELSE ERROR - INFORM
         SPACE 2
PRT      CLC   1(13,R1),=C'./ ADD  NAME=' IS THIS NEW MEMBER ?
         BNE   CHKONLY             NO, CONTINUE
         MVC   1(13,R1),=C'------MEMBER=' MODIFY RECORD
         B     PRINT               PRINT RECORD
CHKONLY  TM    FLAG,ONLY           PRINT ONLY CHANGED RECORDS?
         BNO   PRINT               NO, PRINT IT ALL
         CLC   90(2,R1),=CL2' '    IF CHANGED RECORD
         BNE   PRINT               PASS TO PRINT
         BR    R14                 NO, BYPASS RECORD
         EJECT
EODAD    CLOSE (PRINTDCB,,OUTDCB)  CLOSE OUTPUT FILES
         L     R10,ORIGIN          GET ELEMENT CHAIN POIINTER
FREELOOP LR    R1,R10              COPY CHAIN TO REG 1
         L     R10,CHAIN           GET NEXT CHAIN POINTER
         FREEMAIN  R,LV=160,A=(1)  FREE ELEMENT
FREETEST LTR   R10,R10             ANY MORE ELEMENTS?
         BNZ   FREELOOP            YES, FREE NEXT ONE
EXIT     EQU   *                   RETURN TO CALLER
         DEQ   (MAJOR,MINOR,,SYSTEM)  DEQ OUTPUT DATA SET           *
         SR    R15,R15             CLEAR RETURN CODE                  *
         $EPILOG
ERR1     MVC   PRTBUF+90(30),=CL30'*** ERROR, BLANK CARD'
         B     SETERR              GO SET ERROR SWITCH ON
ERR2     MVC   PRTBUF+90(30),=CL30'*** ERROR, MISSING DELIMITER'
*                                  INFORM
         B     SETERR              GO SET ERROR SWITCH ON
ERR3     MVC   PRTBUF+90(30),=CL30'*** ERROR, INVALID REQUEST'
SETERR   OI    FLAG,ERROR          SET ERROR SWITCH
         B     CONTINUE            CONTINUE SCANNING REQUESTS
ERR4     MVC   PRTBUF+90(30),=CL30'*** ERROR, NO VALID REQUESTS'
*                                  INFORM USER
         B     EXIT                RETURN TO O.S.
ERR5     MVC   PRTBUF+90(30),=CL30'*** UNABLE TO CHANGE'
         B     NEXTONE             GET NEXT RECORD
ERR6     MVC   PRTBUF+90(30),=CL30'*** INVALID LINE NUMBERS'
         B     SETERR              FATAL ERROR
ERR7     MVC   PRTBUF+90(30),=CL30'*** INVALID RANGE SPECIFIED'
         B     SETERR              FATAL ERROR
         EJECT
         PRINT NOGEN
OLDMOVE  MVC   OLDDATA(1),0(R4)    MOVE PARM TO ELEMENT
NEWMOVE  MVC   NEWDATA(1),0(R4)    MOVE NEW DATA TO ELEMENT
SUBEQ    MVC   0(1,R8),NEWDATA     MOVE EQUAL LENGTH FIELDS
MOVEPAD  MVC   0(1,R1),BLANKS      MOVE BLANKS TO END
MOVELESS MVC   0(1,R2),0(R1)       MOVE REMAINING
MOVEDATA MVC   0(1,R8),NEWDATA     MOVE SUB DATA
MOVEMORE MVC   0(1,R2),0(R4)       MOVE REMAINING TO WORK
COMPARE  CLC   0(1,R8),OLDDATA     COMPARE FOR OLD DATA
FINDNB   TRT   0(1,R4),NONBLANK    RUBBER BANDED
FINDIT   TRT   0(1,R4),DELIMT      RUBBER BANDED
FINDB    TRT   0(1,R4),BLKTBL      RUBBER BAND
FINDC    TRT   2(1,R4),DELIMT      FIND A COMMA IN PARM
PACKLNBR PACK  PACKIT,0(1,R4)      PACK LINE NUMBER
ORIGIN   DC    F'0'                DATA ELEMENT CHAIN ORIGIN
BUF      DC    CL80' '             INPUT DATA WORK AREA
WORK     DC    CL80' '             MASSAGE WORK AREA
BLANKS   DC    CL121' '            BLANKS
ASACHAR  DC    C' '                RESERVED ASA CHAR SLOT
PRTBUF   DC    CL120' '            PRINT BUFFER
HEADER   DC   CL121'    MASS CHANGE SUBSTITUTION UTILITY - VERSION TSO'
FLAG     DC    X'00'               FLAG BITS
ERROR    EQU   X'01'               ERROR FLAG BIT
TSOTASK  EQU   X'02'               TSO USER BIT
NLN      EQU   X'04'               NOT LINE NUMBERED MSG ISSUED
SEQ      EQU   X'08'               SEQUENCE NUMBERS IN USE
COB      EQU   X'10'               COBOL TYPE SEQ NUMBERS
ONLY     EQU   X'20'               LIST ONLY CHANGED RECORDS
NONBLANK DC    64X'FF',X'00',192X'FF'  NON BLANK TRANS TABLE
DELIMT   DC    256X'00'            DELIMITER TABLE
PACKIT   DS    CL5                 PACKING AREA
HLDUNPK  DS    CL8
SAVER14  DS    F
BLKTBL   DC    256X'00'            FIND
         ORG   BLKTBL+X'40'        BLANK
         DC    X'40'               TABLE
         ORG
CARD     SYSGET  EODAD=CARDEND     CARD INPUT ROUTINE
PRINT    SYSPRINT  HEADER1=HEADER  SYSOUT ROUTINE
INPUT    SYSGET  DDNAME=SYSUT1     INPUT ROUTINE
OUT      SYSPUT  DDNAME=SYSUT2     OUTPUT ROUTINE
SYSUT2   DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=PM,EXLST=LIST  *
LIST     DS    0F                  *
         DC    X'07'               REQUEST JFCB                       *
         DC    AL3(JFCBHLD)        ADDRESS OF HOLD AREA               *
         DC    X'80000000'         TERMINATE LIST                     *
JFCBHLD  DC    176C' '             HOLD JFCB AREA                     *
MAJOR    DC    C'MASSCHNG'         MAJOR ENQ NAME
MINOR    DC    CL44' '             DSNAME HOLD AREA                   *
         LTORG                     *
DATA     DSECT
CHAIN    DS    F                   CHAIN POINTER TO NEXT ELEMENT
OLDSIZE  DS    X                   SIZE OF OLD DATA
OLDDATA  DS    CL68                OLD DATA
NEWSIZE  DS    X                   SIZE OF NEW DATA
NEWDATA  DS    CL68                NEW DATA
STRTNBR  DS    CL8                 BEGINNING LINE NUMBER
ENDNBR   DS    CL8                 ENDING LINE NUMBER
         END
