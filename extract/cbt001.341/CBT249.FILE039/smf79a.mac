*----------------------------------------------------------------------
*
*                   DEC, 1978
*
*        THIS PROGRAM READS SMF RECORD TYPE 79 (RMF MONITOR 2)
*        AND PRINTS A CPU UTILIZATION REPORT
*
*        1 CONTROL CARD IS REQUIRED.
*        CONTROL CARD FORMAT:
*        DATE(YYDDD,YYDDD),TIME(HHMM,HHMM),AA,B
*
*            DATE - START,END DATES - DEFINES THE LIMIT OF RECORDS
*                   SEARCHED.
*
*            TIME - START,END TIME - DEFINES THE LIMIT OF RECORDS
*                   SEARCHED WITHIN THE DATES SPECIFIED
*
*            AA   - SESSION ID THAT PRODUCED THE TYPE 79 RECORDS
*
*            B    - 0 = DO NOT PRINT ASID'S THAT HAVE ZERO CPU %
*                   1 = PRINT ALL ASID'S
*
*
*            OPTIONAL CONTROL CARDS ARE OF THE FORMAT:
*            JOB=XXXXXXXX  WHERE XXXXXXX IS A JOBNAME.
*            THERE IS NO LIMIT ON THE NUMBER OF OPTIONAL JOBNAME
*            CONTROL CARDS. JOBS SPECIFIED IN THE OPTIONAL CONTROL
*            CARDS WILL BE PRINTED IN HI INTENSITY.
*
*----------------------------------------------------------------------
         EJECT
*----------------------------------------------------------------------
*
*        INITIALIZATION ROUTINE
*
*----------------------------------------------------------------------
SMF79A   $PROLOG
ENTRY010 DS    0H
         OPEN  (SYSIN,,SYSUT1,,SYSPRINT,(OUTPUT))
         GETMAIN R,LV=4096    GET STORAGE FOR AN INCORE TABLE
         ST    R1,TABLE
EXIT010  EQU   *
         B     ENTRY020
         LTORG
         EJECT
*----------------------------------------------------------------------
*
*             PROCESS REQUIRED CONTROL CARD
*
*----------------------------------------------------------------------
ENTRY020 DS    0H
         GET   SYSIN              GET THE REQUIRED CONTROL CARD
         USING SYSIND,R1          DSECT
         MVC   SESSION,SESID      SAVE SESSION ID SPECIFIED ON CARD
         MVI   CNTLLINE,C'1'      SKIP TO CHAN 1
         MVC   CNTLLINE+1(23),=C'REQUIRED CONTROL CARD: '
         MVC   CNTLLINE+24(71),0(R1)   MOVE CONTROL CARD TO LINE
         ST    R1,SAVE1
         PUT   SYSPRINT,CNTLLINE  PRINT IT
         L     R1,SAVE1
         CLC   SDATE(5),=C'DATE(' CORRECT KEYWORD ?
         BNE   ERROR1             NO - ERROR
         LA    R2,SD1             ADDR OF START DATE
         LA    R11,5              LNGTH OF DATE
LOOP020A EQU   *
         TM    0(R2),X'F0'        NUMERIC ?
         BNO   ERROR2             NO -ERROR
         LA    R2,1(R2)           YES - BUMP TO NEXT BYTE
         BCT   R11,LOOP020A       TEST ALL BYTES
         PACK  START,SD1          PACK AND SAVE START DATE
         LA    R2,SD2             ADDR OF END DATE
         LA    R11,5              LNGTH OF DATE
LOOP020B EQU   *
         TM    0(R2),X'F0'        NUMERIC ?
         BNO   ERROR2             NO -ERROR
         LA    R2,1(R2)           YES - BUMP TO NEXT BYTE
         BCT   R11,LOOP020B       TEST ALL BYTES
         PACK  END,SD2            PACK AND SAVE END DATE
AAA020   EQU   *
         CLC   STIME(5),=C'TIME(' CORRECT KEYWORD ?
         BNE   ERROR1             NO - ERROR
         LA    R2,ST1             ADDR OF START TIME
         LA    R11,4              LNGTH OF TIME
LOOP020C EQU   *
         TM    0(R2),X'F0'        NUMERIC ?
         BNO   ERROR2             NO -ERROR
         LA    R2,1(R2)           YES - BUMP TO NEXT BYTE
         BCT   R11,LOOP020C       TEST ALL BYTES
         PACK  DBWRD,ST1HH        PACK START HH
         MP    DBWRD,=P'60'       CHANGE TO MINUTES
         PACK  DBWRD1,ST1MM       PACK START MM
         AP    DBWRD,DBWRD1       TIME IN MINUTES
         MP    DBWRD,=P'6000'     TIME IN HUNDRETHS OF A SECOND
         CVB   R15,DBWRD
         ST    R15,TIME1          SAVE START TIME
         LA    R2,ST2             ADDR OF END TIME
         LA    R11,4              LNGTH OF TIME
LOOP020D EQU   *
         TM    0(R2),X'F0'        NUMERIC ?
         BNO   ERROR2             NO -ERROR
         LA    R2,1(R2)           YES - BUMP TO NEXT BYTE
         BCT   R11,LOOP020D       TEST ALL BYTES
         PACK  DBWRD,ST2HH        PACK END HH
         MP    DBWRD,=P'60'       CHANGE TO MINUTES
         PACK  DBWRD1,ST2MM       PACK END MM
         AP    DBWRD,DBWRD1       TIME IN MINUTES
         MP    DBWRD,=P'6000'     TIME IN HUNDRETHS OF A SECOND
         CVB   R15,DBWRD
         ST    R15,TIME2          SAVE START TIME
BBB020   EQU   *
         CLI   SPRZERO,C'1'       ARE WE TO PRINT ZERO % CPU ?
         BE    EXIT020            YES - OK
         MVC   NOP060A(2),BE      NO - MOVE A 'BE' TO NOP
EXIT020  EQU   *
         B     ENTRY030
         LTORG
SAVE1    DC    F'0'
BE       BE    DUMMY              DUMMY BRANCH INSTRUCTION
         EJECT
*----------------------------------------------------------------------
*
*             PROCESS OPTIONAL CONTROL CARDS - IF ANY
*
*----------------------------------------------------------------------
ENTRY030 DS    0H
         USING JOBD,R9            DSECT FOR JOBNAME STORAGE AREA
         GET   SYSIN              GET FIRST JOBNAME CARD, IF ANY
         LR    R2,R1              RECORD ADDR
         MVI   CNTLLINE,C' '      SKIP 1 LINE
         MVC   CNTLLINE+1(23),=C'OPTIONAL CONTROL CARD: '
         MVC   CNTLLINE+24(71),0(R1)   MOVE CONTROL CARD TO LINE
         PUT   SYSPRINT,CNTLLINE  PRINT IT
NOP030   NOP   AAA030             FALL THRU 1ST TIME
         L     R0,SIZE            CONSTANT FOR GETMAIN
         GETMAIN R,LV=(0)         GET A SAVEAREA
         ST    R1,BEGIN           STORE BEGINNING OF CHAIN
         ST    R1,PREV            STORE
         LR    R9,R1              ADDR OF STORAGE
         MVC   GSIZE,SIZE         STORE SIZE OF AREA IN AREA
         MVC   GNEXT,=F'0'        CLEAR NEXT SAVEAREA CHAIN POINTER
         MVC   GJOB,4(R2)         MOVE JOBNAME TO SAVEAREA
         MVI   NOP030+1,X'F0'     ACTIVATE BR
         B     ENTRY030           GET NEXT SYSIN JOBNAME CARD
AAA030   EQU   *
         L     R0,SIZE            CONSTANT FOR GETMAIN
         GETMAIN R,LV=(0)         GET A SAVEAREA
         LR    R9,R1              ADDR OF STORAGE
         L     R3,PREV            PREVIOUS SAVEAREA
         MVC   GSIZE,SIZE         ST SIZE OF THIS WA IN THIS WA
         ST    R9,4(R3)           ST THIS WA ADDR IN PREV WA
         MVC   GNEXT,=F'0'        CLEAR NEXT SAVEAREA CHAIN POINTER
         MVC   GJOB,4(R2)         MOVE JOBNAME TO SAVEAREA
         ST    R1,PREV            SAVE THIS SAVEAREA ADDR AS PREV
         B     ENTRY030           GET NEXT SYSIN JOBNAME CARD
EXIT030  EQU   *                  EODAD FOR SYSIN DCB
         B     ENTRY040
         LTORG
SIZE     DC    F'16'
BEGIN    DC    F'0'
PREV     DC    F'0'
         EJECT
*----------------------------------------------------------------------
*
*             GET FIRST SMF RECORD AND SAVE START TIME
*
*----------------------------------------------------------------------
ENTRY040 DS    0H
         USING SMF79HDR,R2
         GET   SYSUT1             GET AN SMF RECORD
         LR    R2,R1              ADDR OF RECORD
NOP040A  NOP   AAA040
         MVI   NOP040A+1,X'F0'    ACTIVATE BRANCH
         MVC   CNTLLINE,=133C' '  CLEAR LINE
         MVI   CNTLLINE,C'0'      SKIP 2 LINES
         MVC   CNTLLINE+1(30),=C'DATE OF FIRST RECORD ON FILE: '
         UNPK  CNTLLINE+31(5),SMF79DTE+1(3)
         OI    CNTLLINE+35,X'F0'
         PUT   SYSPRINT,CNTLLINE
AAA040   EQU   *
         CLI   SMF79RTY,79         TYPE 79 RECORD ?
         BNE   ENTRY040           NO - GET NEXT RECORD
BBB040   EQU   *
         CP    SMF79DTE,START     WITHIN
         BL    ENTRY040           LIMITS
         CP    SMF79DTE,END       OF SPECIFIED
         BH    ENTRY040           DATES ?
         CLC   SMF79TME,TIME1     WITHIN
         BL    ENTRY040           LIMITS
         CLC   SMF79TME,TIME2     OF SPECIFIED
         BH    ENTRY040           DATES ?
         CLC   SMF79SES,SESSION   SESSION SPECIFIED ON INPUT
         BNE   ENTRY040           NO - GET NEXT RECORD
         CLC   R79RID,=CL8'ARD'   ARD RECORD ?
         BNE   ENTRY040           NO - GET NEXT RECORD
CCC040   EQU   *
         MVC   CURRIST,SMF79TME   1ST INTERVAL START TIME
         LH    R3,R79NELM         NUMBER OF ELEMENTS IN THIS RECORD
         LH    R4,R79SELM         SIZE OF EACH ELEMENT
         LA    R2,160(R2)         POINT TO FIRST ELEMENT
         DROP  R2
         USING R792ELEM,R2
         USING TABLED,R11         TABLE DSECT
LOOP040A EQU   *
         XR    R11,R11            CLEAR INDEX
         ICM   R11,3,R792ASID     ASID NUMBER
         MH    R11,=AL2(ELMEND-ELMST)
         L     R1,TABLE           ADDR OF TABLE
         LA    R11,0(R1,R11)      ENTRY FOR THIS ASID
         MVC   TJOBNAME,R792JBN   JOBNAME
         MVC   TCPU,R792TCPU      CPU TIME (TCB + SRB)
         MVC   TPAGE,R792PGCT     PAGE COUNT
         MVC   TEXCP,R792EXCP     EXCP COUNT
         MVC   TOVFLW,=F'0'
         MVC   TEXCPT(2),=H'0'
         MVC   TEXCPT+2(2),R792EXCP
         AR    R2,R4              INCR TO NEXT ELEMENT
         BCT   R3,LOOP040A
EXIT040  EQU   *
         B     ENTRY050           CONTINUE
         LTORG
         EJECT
*----------------------------------------------------------------------
*
*        GET A TYPE 79 RECORD
*
*----------------------------------------------------------------------
ENTRY050 DS    0H
         GET   SYSUT1             GET AN SMF RECORD
         LR    R2,R1              ADDR OF RECORD
         DROP  R2
         USING SMF79HDR,R2
         CLI   SMF79RTY,79         TYPE 79 RECORD ?
         BNE   ENTRY050           NO - GET NEXT RECORD
         CP    SMF79DTE,START     WITHIN
         BL    ENTRY050           LIMITS
         CP    SMF79DTE,END       OF SPECIFIED
         BH    ENTRY050           DATES ?
         CLC   SMF79TME,TIME1     WITHIN
         BL    ENTRY050           LIMITS
         CLC   SMF79TME,TIME2     OF SPECIFIED
         BH    ENTRY050           DATES ?
         CLC   SMF79SES,SESSION   SESSION SPECIFIED ON INPUT
         BNE   ENTRY050           NO - GET NEXT RECORD
         CLC   R79RID,=CL8'ARD'   ARD RECORD ?
         BNE   ENTRY050           NO - GET NEXT RECORD
EXIT050  EQU   *
         B     ENTRY060           CONTINUE
         LTORG
         EJECT
*----------------------------------------------------------------------
*
*        DETAIL LINES FOR THIS INTERVAL
*
*----------------------------------------------------------------------
ENTRY060 DS    0H
         MVC   PREVIST,CURRIST    SAVE PREV INTERVAL START TIME
         MVC   CURRIST,SMF79TME   THIS INTERVAL START TIME
         LH    R3,R79NELM         NUMBER OF ELEMENTS IN THIS RECORD
         LH    R4,R79SELM         SIZE OF EACH ELEMENT
         LA    R2,160(R2)         POINT TO FIRST ELEMENT
         DROP  R2
         USING R792ELEM,R2
LOOP060A EQU   *
         XR    R11,R11            CLEAR INDEX
         ICM   R11,3,R792ASID     ASID NUMBER
         MH    R11,=AL2(ELMEND-ELMST)
         L     R1,TABLE           ADDR OF TABLE
         LA    R11,0(R1,R11)      ENTRY FOR THIS ASID
         CLC   TJOBNAME,R792JBN   JOBNAME
         BNE   III060             NO - SKIP CALCULATIONS
         CLC   TCPU,R792TCPU      IS PREV LOWER THAN CURRENT
         BNH   AAA060             YES - OK
         MVC   TPAGE,=F'0'        NO - ASSUME STEP CHANGE
         MVC   TCPU,=F'0'         CLEAR PREV
         MVC   TEXCP,=H'0'        CLEAR PREV
         MVC   TEXCPT,=F'0'       CLEAR PREV
         MVI   SPLAT,C'*'         INDICATE STEP CHANGE
AAA060   EQU   *
         XR    R1,R1              CLEAR R1
         ICM   R1,3,R792ASID
         CVD   R1,DBWRD
         MVC   PRASID,=X'40202021'
         ED    PRASID,DBWRD+6
         MVC   PRJOBNME,R792JBN   JOBNAME
BBB060   EQU   *
         XR    R0,R0              CLEAR R0
         L     R15,CURRIST        THIS INTERVAL START TIME
         S     R15,PREVIST        DURATION OF INTERVAL (100'S OF SEC)
         ICM   R1,15,R792TCPU     TOTAL CPU TIME
         S     R1,TCPU            CPU TIME FOR INTERVAL (MIL SEC)
         MH    R1,=H'100'         X 100 FOR PERCENT - XX.X %
         DR    R0,R15             %CPU UTILIZED FOR JOB
         CVD   R1,DBWRD
         AP    INTCPU,DBWRD       ACCUMULATE CPU % FOR INTERVAL
         MVC   PRCPUELA,=X'4020214B20'
         ED    PRCPUELA,DBWRD+6   MOVE TO PRINT LINE
CCC060   EQU   *
         XR    R1,R1              CLEAR R1
         ICM   R1,15,R792PGCT     PAGE COUNT FOR INTERVAL
         CVD   R1,DBWRD           PAGE COUNT FOR INTERVAL
         AP    INTPAGE,DBWRD      ACCUMULATE FOR ALL JOBS, THIS INTVL
         MVC   PRPAGE,EDIT70
         ED    PRPAGE,DBWRD+4     MOVE TO PRINT LINE
DDD060   EQU   *
         XR    R0,R0              CLEAR R0
         XR    R1,R1              CLEAR R1
         ICM   R0,15,TPAGE        PAGE COUNT FOR PREV INTVL
         ICM   R1,15,R792PGCT     PAGE COUNT FOR INTERVAL
         SR    R1,R0              PAGE COUNT DELTA FOR INTVL
         CVD   R1,DBWRD           PAGE COUNT DELTA FOR INTVL
         AP    INTPAGED,DBWRD     ACCUMULATE FOR ALL JOBS, THIS INTVL
         MVC   PRPAGED,EDIT70
         ED    PRPAGED,DBWRD+4    MOVE TO PRINT LINE
         CLC   PRCPUELA,=C'   .0' ANY CPU USED BY THIS ASID ?
EEE060   EQU   *
         CLC   TEXCP,R792EXCP     HAS R792EXCP OVERFLOWED ?
         BNH   ZZZ060             NO - OK
         XR    R0,R0              YES - ADJUST FOR OVERFLOW
         XR    R1,R1
         ICM   R0,15,TEXCPT       EXCPS MINUS RESIDUAL OVER FLOW
         ICM   R1,15,TOVFLW       RESIDUAL FROM OVER FLOWS
         AR    R1,R0              TOTAL EXCPS UP TO THIS INTVL
         STCM  R1,15,TEXCPT       SAVE TOTAL
         XR    R0,R0
         XR    R1,R1
         ICM   R0,3,TEXCP         PREV R792EXCP VALUE
         L     R1,=F'65536'       OVERFLOW VALUE   X'10000'
         SR    R1,R0              DIF FROM PREV TO OVERFLOW
         ICM   R15,15,TOVFLW      RESIDUAL FROM OVER FLOWS
         AR    R15,R1             NEW TOTAL OVER FLOW RESIDUAL
         ST    R15,CURROVFL       SAVE NEW OVER FLOW VALUE
         ICM   R0,15,TEXCPT       TOTAL EXCPS UP TO THIS INTVL
         AR    R0,R1              TOTAL + OVERFLOW
         XR    R1,R1
         ICM   R1,3,R792EXCP      EXCPS    (MINUS OVERFLOW)
         AR    R0,R1              TOTAL EXCPS
         ST    R0,CURREXCP        STORE NEW VALUE
         B     YYY060
ZZZ060   EQU   *
         ICM   R1,15,TOVFLW       RESIDUAL OVER FLOW
         ICM   R0,15,TEXCPT       EXCPS
         MVC   CURREXCP(2),TEXCPT EXCPS - HI ORDER ONLY
         AR    R1,R0              TOTAL EXCPS INCLUDING PREV OVFLW
         STCM  R1,15,TEXCPT       SAVE IT
         XR    R1,R1
         ICM   R1,3,R792EXCP      EXCPS
         L     R0,CURROVFL        TOTAL RESIDUAL OVER FLOW
         AR    R1,R0              THIS INTVL EXCPS + OVER FLOW
         STH   R1,CURREXCP+2      TOTAL EXCPS INCLUDING THIS INTERVAL
YYY060   EQU   *
         L     R1,CURREXCP        EXCP CURRENT TOTAL
         CVD   R1,DBWRD           EXCP CURRENT TOTAL
         AP    INTEXCP,DBWRD      ACCUMULATE FOR ALL JOBS, THIS INTVL
         MVC   PREXCP,EDIT70
         ED    PREXCP,DBWRD+4     MOVE TO PRINT LINE
FFF060   EQU   *
         XR    R0,R0              CLEAR R0
         XR    R1,R1              CLEAR R1
         ICM   R0,15,TEXCPT       EXCP COUNT UP TO THIS INTVL
         L     R1,CURREXCP        EXCP COUNT INCLUDING THIS INTVL
         SR    R1,R0              EXCP COUNT DELTA FOR INTVL
         CVD   R1,DBWRD           EXCP COUNT DELTA FOR INTVL
         AP    INTEXCPD,DBWRD     ACCUMULATE FOR ALL JOBS, THIS INTVL
         MVC   PREXCPD,EDIT70
         ED    PREXCPD,DBWRD+4    MOVE TO PRINT LINE
         BNM   XXX060             MINUS ?
         MVC   PREXCPD,DASHES     YES - INVALID NUMBER
XXX060   EQU   *
         CLC   PRCPUELA,=C'   .0' ANY CPU USED BY THIS ASID ?
NOP060A  NOP   III060             THIS BRANCH MAY BE SET IN SECTION 20
         BAL   R14,ENTRY910
III060   EQU   *
         MVC   TJOBNAME,R792JBN   JOBNAME
         MVC   TCPU,R792TCPU      CPU TIME (TCB + SRB)
         MVC   TPAGE,R792PGCT     PAGE COUNT
         MVC   TEXCP,R792EXCP     EXCP COUNT FROM RECORD
         MVC   TEXCPT,CURREXCP    EXCP COUNT - ACTUAL TOTAL
         L     R0,CURREXCP        TOTAL EXCPS
         S     R0,CURROVFL        SUBTRACT OUT RESIDUAL OVER FLOW
         ST    R0,TEXCPT          STORE TOTAL WITHOUT OVER FOW RESID
         MVC   CURREXCP,=F'0'     CLEAR WORK AREA
         MVC   CURROVFL,=F'0'     CLEAR WORK AREA
         AR    R2,R4              INCR TO NEXT ELEMENT IN RECORD
         BCT   R3,LOOP060A
EXIT060  EQU   *
         B     ENTRY070           PRINT TOTALS
         LTORG
DASHES   DC    10C'-'
CURREXCP DC    F'0'
CURROVFL DC    F'0'
         EJECT
*----------------------------------------------------------------------
*
*        PRINT TOTAL LINE FOR THIS INTERVAL
*
*----------------------------------------------------------------------
ENTRY070 DS    0H
         MVC   PRASID,=4C' '
         MVC   PRJOBNME,=C'*TOTAL* '
         MVC   PRCPUELA,=X'4020214B20'
         ED    PRCPUELA,INTCPU+6  TOTAL CPU % THIS INTERVAL
         MVC   PRPAGED,EDIT70
         ED    PRPAGED,INTPAGED+4 DELTA PAGES
         MVC   PREXCPD,EDIT70
         ED    PREXCPD,INTEXCPD+4 DELTA EXCPS
         MVI   CCC,C'0'           SKIP 1 LINE
         BAL   R14,ENTRY910       PRINT A LINE
         ZAP   INTCPU,=P'0'       ZERO COUNTER
         ZAP   INTPAGE,=P'0'      ZERO COUNTER
         ZAP   INTPAGED,=P'0'     ZERO COUNTER
         ZAP   INTEXCP,=P'0'      ZERO COUNTER
         ZAP   INTEXCPD,=P'0'     ZERO COUNTER
         ZAP   LINES,=P'60'       FORCE HEADINGS
EXIT070  EQU   *
         B     ENTRY050           GET NEXT RECORD
         LTORG
         EJECT
*----------------------------------------------------------------------
*
*             PRINT ROUTINE
*
*----------------------------------------------------------------------
ENTRY910 DS    0H
         ST    R14,ST910
         CP    LINES,=P'55'       END OF PAGE ?
         BL    AAA910             NO - SKIP HEADINGS
         ZAP   LINES,=P'0'        RE-SET LINE COUNTER
         AP    PAGE,=P'1'         ADD 1 TO PAGE COUNTER
         MVC   HDPAGE,EDIT30      999
         ED    HDPAGE,PAGE
         MVC   SMFTIME,PREVIST    THIS INTERVAL START TIME
         L     R15,SMFTIME             TIME IN BIN SEC/100
         CVD   R15,DBWRD
         UNPK  WORK,DBWRD+6(2)
         MVC   TH,WORK+1
         ZAP   WRK1,=P'0'
         MVO   WRK1,DBWRD(7)
         MVO   WRK1,WRK1(15)
         DP    WRK1,=P'60'
         UNPK  WORK,WRK1+14(2)
         MVC   SS,WORK+1
         ZAP   WRK2,WRK1(14)
         DP    WRK2,=P'60'
         UNPK  WORK,WRK2+14(2)
         MVC   MM,WORK+1
         UNPK  WORK,WRK2+12(2)
         MVC   HH,WORK+1
         OI    HH+1,X'F0'
         OI    MM+1,X'F0'
         OI    SS+1,X'F0'
         OI    TH+1,X'F0'
         MVC   HDISTHH,HH
         MVC   HDISTMM,MM
         MVC   HDISTSS,SS
         PUT   SYSPRINT,HD1
         PUT   SYSPRINT,HD2
         PUT   SYSPRINT,HD3
         MVI   CCC,C'0'           SKIP 2 LINES
AAA910   EQU   *
         AP    LINES,=P'1'
         L     R9,BEGIN           ADDR OF SPECIAL JOBS
LOOP910A EQU   *
         C     R9,=F'0'           END OF CHAIN ?
         BE    CCC910             YES - SKIP SPECIAL PRINTING
         CLC   GJOB,PRJOBNME      IS THIS A SPECIAL JOB ?
         BE    BBB910             YES - OK
         L     R9,GNEXT           NO - ADDR OF NEXT SPECIAL JOBNAME
         B     LOOP910A
BBB910   EQU   *
         LA    R10,3              SET COUNTER
LOOP910B EQU   *
         PUT   SYSPRINT,PRLINE
         MVI   CCC,C'+'           NO LINE SKIP
         BCT   R10,LOOP910B
CCC910   EQU   *
         PUT   SYSPRINT,PRLINE
         MVI   CCC,C' '           SKIP 1 LINE
         MVC   PRLINE+1(132),PRLINE   CLEAR PRINT LINE
EXIT910  EQU   *
         L     R14,ST910
         BR    R14
ST910    DC    F'-1'
         LTORG
         EJECT
*----------------------------------------------------------------------
*
*             EOJ AND CLEAN-UP
*
*----------------------------------------------------------------------
EOJ      DS    0H
         MVI   CNTLLINE,C'1'      SKIP TO CHANNEL 1
         MVC   CNTLLINE+1(30),=C' DATE OF LAST RECORD ON FILE: '
*        UNPK  CNTLLINE+31(5),SMF79DTE+1(3)
         OI    CNTLLINE+35,X'F0'
         PUT   SYSPRINT,CNTLLINE
         L     R2,BEGIN
FREELOOP EQU   *
         C     R2,=F'0'           ANY MORE SAVEAREAS ?
         BE    EOJ1               NO - DONE
         LR    R1,R2              ADDR OF SAVEAREA
         L     R2,4(R1)           ADDR OF NEXT SAVEAREA
         L     R0,0(R1)           LNGTH OF SAVE AREA
         FREEMAIN  R,LV=(0),A=(1)
         B     FREELOOP
EOJ1     EQU   *
         L     R1,TABLE
         FREEMAIN R,LV=4096,A=(1)
         DELETE EP=SMFTCNVR
         CLOSE (SYSIN,,SYSUT1,,SYSPRINT)
RETURN   EQU   *
         L     R15,RETCODE        LOAD RETURN CODE
         $EPILOG
         EJECT
*----------------------------------------------------------------------
*
*             ERROR ROUTINES
*
*----------------------------------------------------------------------
ERROR1   DS    0H                 INVALID START DATE
         MVC   RETCODE,=F'4'      SET RETURN CODE OF 4
         PUT   SYSPRINT,=CL133' ERROR1 - START DATE NOT NUMERIC'
         B     EOJ1
ERROR2   DS    0H                 INVALID END DATE
         MVC   RETCODE,=F'4'      SET RETURN CODE OF 4
         PUT   SYSPRINT,=CL133' ERROR2 - END DATE NOT NUMERIC'
         B     EOJ1
ERROR3   DS    0H                 UKNOWN PARM TYPE
         MVC   RETCODE,=F'4'      SET RETURN CODE OF 4
         PUT   SYSPRINT,=CL133' ERROR3 - INVALID OPTION ON PARM CARD'
         B     EOJ1
ERROR4   DS    0H                 INVALID RC
         MVC   RETCODE,=F'4'      SET RETURN CODE OF 4
         PUT   SYSPRINT,=CL133' ERROR3 - RETURN CODE NOT NUMERIC'
         B     EOJ1
         EJECT
*----------------------------------------------------------------------
CNTLLINE DS    CL133
PRLINE   DS    0CL133
CCC      DC    C' '
PRASID   DC    CL4' '
         DC    CL1' '
SPLAT    DC    CL1' '
PRJOBNME DC    CL8' '
         DC    CL3' '
PRCPUELA DC    CL5' '   SRB+TCB/ELAPSED  =  %CPU UTILIZATION
         DC    C' '
PRPAGE   DC    CL8' '
         DC    C' '
PREXCP   DC    CL8' '
         DC    C' '
PRPAGED  DC    CL8' '
         DC    C' '
PREXCPD  DC    CL8' '
         DC    100C' '
*----------------------------------------------------------------------
         EJECT
HD1      DC    CL5'1'
HDATE    DC    CL8' '
         DC    30C' '
         DC    C'CPU UTILIZATION REPORT'
         DC    10C' '
         DC    C'INTVL START TIME:'
HDIST    DS    0CL8
HDISTHH  DC    CL2' '
         DC    CL1'.'
HDISTMM  DC    CL2' '
         DC    CL1'.'
HDISTSS  DC    CL2' '
         DC    CL9' '
         DC    CL4'PAGE'
HDPAGE   DC    CL4' '
         DC    CL5' '
HPGM     DC    CL8' '
         DC    CL80' '
*----------------------------------------------------------------------
HD2      DC    C'0                         PAGE     EXCP     DELTA  '
         DC    C'  DELTA '
         DC    80C' '
*----------------------------------------------------------------------
HD3      DC    C' ASID  JOBNAME     %CPU  FAULTS    COUNT    PAGE   '
         DC    C'  EXCP  '
         DC    80C' '
*----------------------------------------------------------------------
DUMMY    DS    0H
EDIT30   DC    X'40202021'
EDIT70   DC    X'4020202020202021'
LINES    DC    PL2'60'
PAGE     DC    PL2'0'
DBWRD    DC    D'0'
DBWRD1   DC    D'0'
WORK     DC    CL3' '
WRK1     DC    PL16'0'
WRK2     DC    PL16'0'
INTCPU   DC    PL8'0'
INTPAGE  DC    PL8'0'
INTPAGED DC    PL8'0'
INTEXCP  DC    PL8'0'
INTEXCPD DC    PL8'0'
ELAPSED  DC    F'0'
WORK1    DC    CL16' '
RETCODE  DC    F'0'
TABLE    DC    F'0'
START    DC    PL4'0'
END      DC    PL4'0'
TIME1    DC    F'0'
TIME2    DC    F'0'
SESSION  DC    CL2' '
PREVIST  DC    F'0'
CURRIST  DC    F'0'
         DC    CL2' '
********
TIME     DS    0CL8
HH       DC    CL2' '
MM       DC    CL2' '
SS       DC    CL2' '
TH       DC    CL2' '
********
PARMS    DS    0F
         DC    A(TIME)
SMFTIME  DC    F'0'
********
SYSIN    DCB   DDNAME=SYSIN,DSORG=PS,MACRF=GL,EODAD=EXIT030
         EJECT
SYSUT1   DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=GL,EODAD=EOJ,BFTEK=A
         EJECT
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,RECFM=FBA,LRECL=133,  X
               BLKSIZE=6118
         EJECT
*----------------------------------------------------------------------
JOBD     DSECT
GSIZE    DS    CL4
GNEXT    DS    CL4
GJOB     DS    CL8
*----------------------------------------------------------------------
TABLED   DSECT
ELMST    EQU   *
TJOBNAME DS    CL8
TCPU     DS    CL4
TPAGE    DS    CL4
TEXCPT   DS    CL4
TOVFLW   DS    CL4
TEXCP    DS    CL2
ELMEND   EQU   *
*----------------------------------------------------------------------
SYSIND   DSECT
SDATE    DS    0CL17   DATE(YYDDD,YYDDD)
         DS    CL5     DATE(
SD1      DS    CL5     YYDDD
         DS    CL1     ,
SD2      DS    CL5     YYDDD
         DS    CL1     )
         DS    CL1     ,
STIME    DS    0CL15   TIME(HHMM,HHMM)
         DS    CL5     TIME(
ST1      DS    0CL4    HHMM
ST1HH    DS    CL2
ST1MM    DS    CL2
         DS    CL1     ,
ST2      DS    0CL4    HHMM
ST2HH    DS    CL2
ST2MM    DS    CL2
         DS    CL1     )
         DS    CL1     ,
SESID    DS    CL2     AA
         DS    CL1     ,
SPRZERO  DS    CL1     B
*----------------------------------------------------------------------
         EJECT
         ERBSMFR 79
         END
