***********************************************************************
*
*        THIS TSO COMMAND WILL ALTER EACH OCCURANCE OF A SPECIAL
*        CHARACTER WITHIN A FILE TO ANOTHER SPECIAL
*        CHARACTER.  THE ALTERATION CAN BE FROM A HEX DIGIT
*        TO AN EBCDIC CHARACTER OR VISA-VERSA. EXECUTION IS
*        VIA THE 'CALL' COMMAND.
*
*        CALL Z(ALTERHEX) 'OLD/NEW' IS THE REQUEST FORMAT AND MEANS:
*
*           OLD = OLD DATA TO BE CHANGED.  IF OLD DATA IS TWO
*                 CHARACTERS, THEN THE OPERATION IS X-C.
*           NEW = SUBSTITUTE DATA.  IF NEW DATA IS TWO
*                 CHARACTERS, THEN THE OPERATION IS C-X.
*
*        EXAMPLE:   TO CHANGE FROM A '?' TO A X'C0'
*        ALLOCATE FILE(ALTERHEX) DATASET('SYS1.PARMLIB(IEALPA00)')
*        CALL Z(ALTERHEX) '?/C0'
*
*                   TO CHANGE FROM A X'C0' TO A '>'
*        ALLOCATE FILE(ALTERHEX) DATASET('SYS1.PARMLIB(IEALPA00)')
*        CALL Z(ALTERHEX) 'C0/>'
*
*        RETCODES:  0 = OLD DATA FOUND AND CHANGED
*                   4 = OLD DATA NOT FOUND, NO CHANGES MADE
*
***********************************************************************
ALTERHEX $PROLOG
         L     R1,0(R1)       GET PARM POINTER
         LH    R2,0(R1)       GET PARM SIZE
         CH    R2,=H'4'       VALID SIZE?
         BE    CHECKIT        YES, CONTINUE
         TPUT  ERR1,L'ERR1    INFORM USER
         LA    R15,16         SET RETCODE
         B     EXIT           RETURN
CHECKIT  CLI   3(R1),C'/'     CHARACTER TO HEX?
         BNE   OTHER          NO MUST BE OTHER
SETIT    OI    FLAG,HEXNEW    SET INDICATOR FOR HEX CONVERT
         MVC   OLD(1),2(R1)   MOVE CHARACTER TO WORKING AREA
         LA    R2,4(R1)       POINT TO HEX DATA
         B     COMMON         TO COMMON ROUTINE
OTHER    CLI   4(R1),C'/'     VALID REQUEST?
         BNE   INVALID        NO, INFORM USER
         MVC   NEW(1),5(R1)   MOVE CHARACTER TO WORKING AREA
         LA    R2,2(R1)       POINT TO HEX DATA
COMMON   LA    R9,0(R2)       SET FOR VALIDITY CHECK
         BAL   R14,CHARCHK    CHECK FIRST CHAR
         LA    R9,1(R2)       SET FOR NEXT CHAR
         BAL   R14,CHARCHK    CHECK SECOND CHARACTER
         IC    R3,0(R2)       PICK UP FIRST CHAR
         CLI   0(R2),C'0'     IS IT NUMERIC?
         BNL   NUMERIC1       YES, BRANCH
         AH    R3,=H'9'       ADD FUDGE
NUMERIC1 SLL   R3,4           SHIFT LEFT 4 BITS
         IC    R4,1(R2)       PICK UP SECOND CHAR
         CLI   1(R2),C'0'     IS IT NUMERIC?
         BNL   NUMERIC2       YES,BRANCH
         AH    R4,=H'9'       ADD FUDGE
NUMERIC2 N     R4,=F'15'      CLEAR LEFT FOUR BITS
         OR    R3,R4          MERGE THE TWO
         TM    FLAG,HEXNEW    SET NEW FIELD?
         BZ    SETOLD         NO, SET OLD FIELD
         STC   R3,NEW         SET NEW VALUE
         B     OPEN           BEGIN PROCESSING DATA
SETOLD   STC   R3,OLD         SET OLD VALUE
         EJECT
OPEN     OPEN  (FILE,(UPDAT)) OPEN FILE FOR UPDATE IN PLACE
         TM    FILE+48,X'10'  DID FILE OPEN?
         BO    CONTINUE       YES, CONTINUE
         ABEND 1,DUMP         NO, ABEND
CONTINUE GET   FILE           GET INPUT RECORD
         LR    R2,R1          SAVE ADDRESS OF RECORD
         LA    R15,80         SET CHARACTER LIMIT
COMPARE  CLC   0(1,R2),OLD    COMPARE FOR OLD DATA
         BNE   BUMP           NO, BUMP TO NEXT CHAR
         MVC   0(1,R2),NEW    YES, SUBSTITUTE NEW CHARACTER
         OI    FLAG,CHNG+ANY  INDICATE CHANGE MADE
BUMP     LA    R2,1(R2)       BUMP TO NEXT CHAR
         BCT   R15,COMPARE    CHECK NEXT CHARACTER
         TM    FLAG,CHNG      WAS ANYTHING CHANGED?
         BZ    CONTINUE       NO, GET NEXT RECORD
         NI    FLAG,X'FF'-CHNG YES, RESET CHANGE FLAG
         LR    R0,R1          COPY ADDRESS OF RECORD
         PUTX  FILE,(0)       WRITE OUT RECORD
         B     CONTINUE       READ NEXT RECORD
EODAD    CLOSE (FILE)         CLOSE IN/OUT FILE
         SR    R15,R15        CLEAR RETCODE
         TM    FLAG,ANY       WAS ANYTHING CHANGED?
         BO    EXIT           YES, PASS ZERO RETCODE
         LA    R15,4          INDICATE NO CHANGE MADE
EXIT     $EPILOG ,            RETURN TO SYSTEM
CHARCHK  CLI   0(R9),C'0'     LESS THAN A '0'?
         BL    CHKALPHA       YES, CHECK IF ALPHA
         CLI   0(R9),C'9'     ABOVE '9'?
         BH    INVALID        YES, INFORM USER
         BR    R14            CONTINUE
CHKALPHA CLI   0(R9),C'A'     LESS THAN AN 'A'?
         BL    INVALID        YES, ERROR
         CLI   0(R9),C'F'     ABOVE AN 'F'?
         BH    INVALID        YES, ERROR
         BR    R14            RETURN TO CALLING ROUTINE
INVALID  TPUT  ERR2,L'ERR2    INFORM USER
         LA    R15,12         SET RETCODE
         B     EXIT           RETURN TO CALLER
OLD      DC    C' '           PREVIOUS DATA
NEW      DC    C' '           SUBSTITUTING DATA
FLAG     DC    X'00'          FLAG BITS
HEXNEW   EQU   X'01'          CHARACTER TO HEX REQUEST
CHNG     EQU   X'02'          A CHANGE WAS MADE IN A RECORD
ANY      EQU   X'04'          A CHANGE WAS MADE IN ANY RECORD
ERR1     DC    CL50'ALTERHEX - NO PARM VALUE GIVEN'
ERR2     DC    CL50'ALTERHEX - INVALID PARM VALUE'
FILE     DCB   DDNAME=ALTERHEX,DSORG=PS,MACRF=(GL,PM),EODAD=EODAD
         END
