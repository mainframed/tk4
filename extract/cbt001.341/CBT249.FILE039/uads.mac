USERSVC  EQU   255
         PRINT NOGEN
*---------------------------------------------------------------------
*
*                   AUGUST 1978
*
*        THIS TSO COMMAND PROCESSOR WILL ALLOW THOSE USERS WITH
*        OPERATOR ABILITY TO DYNAMICALLY CHANGE THEIR UADS ENTRIES
*        IN THE PSCB.  ONCE CHANGED, IT WILL REMAIN IN EFFECT
*        ACCROSS A RELOGON (UNLESS THE SYSTEM CRASHES).
*
*        THOSE ENTRIES THAT MAY BE CHANGED AND THEIR ASSOCIATED
*        KEYWORDS ARE LISTED BELOW:
*
*        ID(????)/RESET    CHANGE CURRENT USER-ID TO ???? OR RESET
*                          BACK TO REAL ID. THIS OPERAND IS ALLOWED
*                          ONLY FOR USERS WITH ACCOUNT AUTHORITY,
*                          SINCE ONE MUST INSURE THAT PRIOR TO
*                          LOGOFF THE NEW ID MUST BE RESET.  IF NOT
*                          RESET, THE NEW ID SET WILL BE UPDATED
*                          WITH THE UADS ENTRY FOR THE ACTIVE USER.
*
*        DEST(????)/NODEST CHANGE THE CURRENT DEFAULT DESTINATION
*                          TO ???? OR NULLIFY IT.
*
*        UNIT(????)/NOUNIT CHANGE THE CURRENT DEFAULT DYNAMIC
*                          ALLOCATION UNITNAME TO ???? OR NULLIFY IT.
*
*        JCL/NOJCL         ALLOW OR DISALLOW BATCH JOB SUBMISSIONS.
*
*        MOUNT/NOMOUNT     ALLOW OR DISALLOW FOREGROUND TAPE/DISK
*                          MOUNT CAPABILITIES.
*
*        PASS/NOPASS       ALLOW OR DISALLOW DATASET PASSWORD CHECKING
*
*---------------------------------------------------------------------
         EJECT
UADS     $PROLOG
*
*        REGISTER USAGE:
*
*        R0-R8 =====> WORK REGISTERS
*
*        R9    =====> BASE FOR THE PSCB
*        R10   =====> BASE FOR THE PARSE PDE'S
*        R11   =====> BASE FOR THE CPPL
*        R12   =====> BASE FOR UADS (THIS ROUTINE)
*
         EJECT
*---------------------------------------------------------------------*
*
*        RETRIEVE INITIALIZATION PARMS
*
*---------------------------------------------------------------------*
ENTRY010 DS    0H
         LR    R11,R1             SAVE CPPL POINTER
         USING CPPL,R11           PROVIDE ADDRESSABILITY
         MVC   PPLUPT,CPPLUPT     COPY UPT ADDRESS
         MVC   PPLECT,CPPLECT     COPY ECT ADDRESS
         MVC   PPLCBUF,CPPLCBUF   COPY ADDRESS OF COMMAND BUF
         L     R9,CPPLPSCB        ADDR OF PSCB
         USING PSCB,R9
EXIT010  EQU   *
         EJECT
*---------------------------------------------------------------------*
*
*        LINK TO PARSE TO RETRIEVE COMMAND DATA
*        PROCESS USER-ID OPERANDS
*
*---------------------------------------------------------------------*
ENTRY020 DS    0H
         LA    R1,PPLUPT          PROVIDE LIST FOR PARSE
         LINK  EP=IKJPARS         PARSE COMMAND
         LA    R1,=C'AUTH'        PARSE COMMAND
         SVC   USERSVC
         MODESET KEY=ZERO
         L     R10,PPLANSR        GET POINTER TO ANSWER AREA
         USING IKJPARMD,R10       PROVIDE ADDRESSABILITY
         LH    R15,USERID         GET NUMBER OF SPECIFIED KEYWORD
         SLL   R15,2              MULTIPLY BY FOUR
         B     *+4(R15)           TO PROCESSING ROUTINE
         B     EXIT020            NOT SPECIFIED, SKIP IT
         B     BBB020             RESET SPECIFIED, GO TO IT
AAA020   L     R1,UID             ADDRESS OF NEW USERID
         LH    R3,UID+4           GET SIZE OF ID
         B     DDD020             TO COMMON ROUTINE
BBB020   EQU   *
         L     R3,16              ADDR OF CVT
         L     R3,0(R3)           ADDR OF OLD/NEW PTRS
         L     R3,12(R3)          ADDR OF CURRENT ASCB
         L     R1,176(R3)         ADDR OF REAL USER-ID
         LR    R3,R1
         MVC   PSCBUSER,BLANKS
         LA    R15,7              MAX SIZE OF USERID
LOOP020  EQU   *
         CLI   0(R3),C' '         END OF ID ?
         BE    CCC020             YES - OK
         CLI   0(R3),X'00'        END OF ID ?
         BE    CCC020             YES - OK
         LA    R3,1(R3)           BUMP
         BCT   R15,LOOP020        CHECK ALL BYTES
CCC020   SR    R3,R1              LENGTH OF USERID
DDD020   EQU   *
         TM    PSCBATR1,PSCBACCT  DOES USER HAVE ACCOUNT AUTHORITY?
         BZ    ERR020             NO, INFORM USER
         STC   R3,PSCBUSRL        STORE LENGTH
         BCTR  R3,R0              DECR FOR EX
         EX    R3,MVCID
EXIT020  EQU   *
         B     ENTRY030
ERR020   TPUT  MSG020,60
         B     ENTRY030
MSG020   DC    CL60'USER-ID CHANGE NOT AUTHORIZED'
MVCID    MVC   PSCBUSER(0),0(R1)
         EJECT
*---------------------------------------------------------------------*
*
*        PROCESS UNIT OPERANDS
*
*---------------------------------------------------------------------*
ENTRY030 DS    0H
         LH    R15,UNIT           GET NUMBER OF SPECIFIED KEYWORD
         SLL   R15,2              MULTIPLY BY FOUR
         B     *+4(R15)           TO PROCESSING ROUTINE
         B     EXIT030            NOT SPECIFIED, SKIP IT
         B     AAA030             NOUNIT SPECIFIED, GO TO IT
         L     R1,UNITN           UNIT SPECIFIED, DO IT
         LH    R2,UNITN+4         GET SIZE OF NAME
         BCTR  R2,R0              DECR FOR EX
         EX    R2,MVCUNIT         MOVE UNIT
         B     EXIT030
AAA030   EQU   *
         MVC   PSCBGPNM,BLANKS
EXIT030  DS    0H
         B     ENTRY040
MVCUNIT  MVC   PSCBGPNM(0),0(R1)
         EJECT
*---------------------------------------------------------------------*
*
*        PROCESS DEST OPERANDS
*
*---------------------------------------------------------------------*
ENTRY040 DS    0H
         LH    R15,DEST           GET NUMBER OF SPECIFIED KEYWORD
         SLL   R15,2              MULTIPLY BY FOUR
         B     *+4(R15)           TO PROCESSING ROUTINE
         B     EXIT040            NOT SPECIFIED, SKIP IT
         B     AAA040             NODEST SPECIFIED, GO TO IT
         MVC   PSCBDEST,BLANKS
         L     R1,DESTN           DEST SPECIFIED, DO IT
         LH    R2,DESTN+4         GET SIZE OF DEST NAME
         BCTR  R2,R0              DECR FOR EX
         EX    R2,MVCDEST         MOVE DEST
         B     EXIT040
AAA040   EQU   *
         MVC   PSCBDEST,BLANKS
EXIT040  DS    0H
         B     ENTRY050
MVCDEST  MVC   PSCBDEST(0),0(R1)
         EJECT
*---------------------------------------------------------------------*
*
*        PROCESS JCL OPERANDS
*
*---------------------------------------------------------------------*
ENTRY050 DS    0H
         LH    R15,JCL            GET NUMBER OF SPECIFIED KEYWORD
         SLL   R15,2              MULTIPLY BY FOUR
         B     *+4(R15)           TO PROCESSING ROUTINE
         B     EXIT050            NOT SPECIFIED, SKIP IT        0
         B     AAA050             NOJCL SPECIFIED, GO TO IT      1
         OI    PSCBATR1,PSCBJCL   ALLOW JCL                      2
         B     EXIT050
AAA050   EQU   *
         NI    PSCBATR1,X'FF'-PSCBJCL  RESET JCL
EXIT050  DS    0H
         EJECT
*---------------------------------------------------------------------*
*
*        PROCESS MOUNT OPERANDS
*
*---------------------------------------------------------------------*
ENTRY060 DS    0H
         LH    R15,MOUNT          GET NUMBER OF SPECIFIED KEYWORD
         SLL   R15,2              MULTIPLY BY FOUR
         B     *+4(R15)           TO PROCESSING ROUTINE
         B     EXIT060            NOT SPECIFIED, SKIP IT          0
         B     AAA060             NOMOUNT SPECIFIED, GO TO IT        1
         OI    PSCBATR1,PSCBVMNT  ALLOW MOUNT                     2
         B     EXIT060
AAA060   EQU   *
         NI    PSCBATR1,X'FF'-PSCBVMNT  RESET MOUNT
EXIT060  DS    0H
         EJECT
*---------------------------------------------------------------------*
*
*        PROCESS PASSWORD OPERANDS
*
*---------------------------------------------------------------------*
ENTRY070 DS    0H
         L     R1,16          GET CVT POINTER
         L     R1,0(R1)       OLD/NEW POINTER
         L     R1,4(R1)       OUR TCB POINTER
         L     R2,180(R1)     JSCB POINTER
         USING IEZJSCB,R2
         OI    JSCBSWT1,JSCBPASS  NO PASSWORD CHECKING
         LH    R15,PASS           GET NUMBER OF SPECIFIED KEYWORD
         SLL   R15,2              MULTIPLY BY FOUR
         B     *+4(R15)           TO PROCESSING ROUTINE
         B     EXIT070            NOT SPECIFIED, SKIP IT          0
         B     AAA070             NOPASS SPECIFIED, GO TO IT      1
         NI    JSCBSWT1,X'FF'-JSCBPASS  NO PASSWORD CHECKING      2
         B     EXIT070
AAA070   EQU   *
         OI    JSCBSWT1,JSCBPASS  ALLOW PASSWORD CHECKING
EXIT070  DS    0H
         DROP  R2
         EJECT
*---------------------------------------------------------------------*
RETURN   DS    0H
         MODESET KEY=ZERO
         LA    R1,RETURN
         SVC   USERSVC
         L     R15,RC             RESTORE RETURN CODE
         $EPILOG
         EJECT
*---------------------------------------------------------------------*
BLANKS   DC    81C' '             BLANK FOLLOWED BY 80 BYTE BUFFER
ECB      DC    F'0'               DUMB ECB FOR PARSE
PPLANSR  DC    F'0'               PARSE ANSWER AREA POINTER
RC       DC    F'0'               RETURN CODE SAVE AREA
*---------------------------------------------------------------------*
PPLUPT   DC    F'0'               USER PROFILE TABLE POINTER
PPLECT   DC    F'0'               ENVIRONMENT CONTROL TABLE
PPLECB   DC    A(ECB)             ECB POINTER
PPLPCL   DC    A(IKJPCL)          ADDRESS OF IKJPARM
PPLANS   DC    A(PPLANSR)         PLACE TO PUT ANSWER
PPLCBUF  DC    F'0'               POINTER TO COMMAND BUFFER
         EJECT
*---------------------------------------------------------------------*
         LTORG
         EJECT
IKJPCL   IKJPARM
USERID   IKJKEYWD
         IKJNAME 'RESET'
         IKJNAME 'ID',SUBFLD=IDSUBF
UNIT     IKJKEYWD
         IKJNAME 'NOUNIT'
         IKJNAME 'UNIT',SUBFLD=UNITSUBF
DEST     IKJKEYWD
         IKJNAME 'NODEST'
         IKJNAME 'DEST',SUBFLD=DESTSUBF
JCL      IKJKEYWD
         IKJNAME 'NOJCL'
         IKJNAME 'JCL'
MOUNT    IKJKEYWD
         IKJNAME 'NOMOUNT'
         IKJNAME 'MOUNT'
PASS     IKJKEYWD
         IKJNAME 'NOPASS'
         IKJNAME 'PASS'
IDSUBF   IKJSUBF
UID      IKJPOSIT  USERID,PROMPT='NEW USER-ID TO BE USED'
UNITSUBF IKJSUBF
UNITN    IKJIDENT  'UNITNAME',MAXLNTH=8,FIRST=ALPHANUM,OTHER=ALPHANUM, X
               PROMPT='UNIT NAME FOR DEFAULT DEVICE ALLOCATIONS'
DESTSUBF IKJSUBF
DESTN    IKJIDENT  'DEST',MAXLNTH=8,FIRST=ALPHA,OTHER=ALPHANUM,        X
               PROMPT='DESTID FOR DEFAULT SYSOUT/JOB ROUTING'
         IKJENDP
         PRINT OFF
         IKJCPPL
         IKJPSCB
         IEZJSCB
         END
