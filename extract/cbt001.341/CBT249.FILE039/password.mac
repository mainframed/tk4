         TITLE 'SYSTEM DATASET PASSWORD PROTECTION ROUTINE'
PASSWORD CSECT
***********************************************************************
*                                                                     *
* THIS ROUTINE IS USED TO TEMPORARILY DISSABLE PASSWORD PROTECTION    *
* FOR SYSTEM DATASETS FOR THE DURATION OF SYSTEM MAINTENANCE (SMP).   *
* IT WILL ALLOW DATASETS TO BE PROTECTED WITH OR WITHOUT A PASSWORD   *
* FOR SECURITY REASONS AND YET ALLOW BASIC MAINTENANCE TO PROCEED     *
* WITHOUT SPECIFICATION OF PASSWORDS.                                 *
*                                                                     *
*                    ***********                                      *
*                                                                     *
* NOTE THAT THIS PROGRAM DOES NOT "ENQ" OR "RESERVE" THE VTOC.        *
* IT WAS FELT THAT SINCE USERS  ''WILL'' USE "DISP=OLD" ON EACH       *
* DD CARD (SINCE WE ARE UPDATING THE VTOC IN PLACE), IT IS NOT        *
* REQUIRED THAT THE VTOC BE ENQUEUED UPON. OF COURSE WE ARE OPEN      *
* TO DISASTER IF SOMEONE SCRATCHES THE VTOC WHILE WE ARE RUNNING      *
* SO CARE MUST BE TAKEN WHEN ACTIVE.                                  *
*                                                                     *
*                    ***********                                      *
*                                                                     *
* REQUIREMENTS:                                                       *
*                                                                     *
* 1) THE PROGRAM MUST BE AUTHORIZED                                   *
* 2) THE PROGRAM IS DD CARD SENSITIVE...                              *
*                                                                     *
* THE FIRST FOUR CHARACTERS OF THE DDNAME INDICATE THE OPERATION TO   *
* PERFORMED AS FOLLOWS:                                               *
*    //OPEN????  DD DSN=DSNAME,DISP=OLD                               *
*               .... OR ....                                          *
*    //PROT????  DD DSN=DSNAME,DISP=OLD                               *
*       WHERE:  'OPEN' = A REQUEST TO REMOVE PROTECTION               *
*               'PROT' = A REQUEST TO ACTIVATE PROTECTION             *
*               '????' = A UNIQUE ID (ALPHANUMERIC)                   *
*               'DSNAME' = THE DATASET NAME                           *
*                                                                     *
* EXAMPLE:                                                            *
*                                                                     *
* //STEPNAME   EXEC  PGM=PASSWORD,REGION=20K                          *
* //PROT0001   DD    DISP=OLD,DSN=ANY.NAME1                           *
* //PROT0002   DD    DISP=OLD,DSN=ANY.NAME2                           *
* //OPEN0001   DD    DISP=OLD,DSN=ANY.NAME3                           *
*              ETC                                                    *
*               *                                                     *
*               *                                                     *
*               *                                                     *
* AS MANY DD CARDS AS ARE NEEDED MAY BE ENTERED. THEY ARE PROCESSED   *
* IN THE ORDER IN WHICH THEY ARE FOUND IN THE TIOT. "PROT" AND        *
* "OPEN" DD CARDS MAY BE MIXED AS NEEDED. IN THE EVENT THAT AN        *
* ERROR IS DETECTED, THE PROGRAM ENDS WITH THE CONDITION CODE SET TO  *
* INDICATE THE RELATIVE DD CARD IN ERROR. THE RETURN CODE IS          *
* SET AS FOLLOWS...                                                   *
*   BYTE 0 = ZEROES                                                   *
*   BYTE 1 = ZEROES                                                   *
*   BYTE 2 = THE RELATIVE DD CARD BEING PROCESSED WHEN ERROR FOUND    *
*   BYTE 3 = ERROR CODE                                               *
*            1 = ATTEMPT TO DISABLE A READ PROTECTED DATASET          *
*            2 = READ FAILED (PROBABLE DATASET NOT FOUND)             *
*            3 = WRITE EXCP FAILED                                    *
*                                                                     *
* NOTE THAT MACRO "IECSDSL1" IS USED AND MAY BE FOUND IN YOUR         *
* "DLIB" MACRO LIBRARY DATASET(S)                                     *
*                                                                     *
***********************************************************************
         SPACE 2
         USING *,R13                    DCL CSECT BASE
         USING IHADCB,R1                DCL DCB DSECT BASE
         STM   R14,R12,12(R13)          SAVE CALLING REGS
         ST    R15,8(,R13)              STORE FORWORD CHAIN
         ST    R13,4(,R15)              STORE REVERSE CHAIN
         LR    R13,R15                  LOAD CSECT BASE
         B     START                    AND START
         ORG   PASSWORD+72              SAVE AREA (REG 13)
         EJECT
START    MODESET KEY=ZERO,MODE=SUP      MUST BE AUTH TO OPEN FOR UPDAT
         EXTRACT  TIOT,'S',FIELDS=(TIOT)
         L     R5,TIOT                  PICK UP TIOT PTR
         LA    R5,24(,R5)               SET TO 1ST DD ENTRY
         SPACE
         CLI   0(R5),0                  AT LEAST 1 ENTRY IN TIOT?
         BE    EOJ                      NO, EXIT
         SPACE 2
MAINLINE CLC   =CL4'OPEN',4(R5)         REQUEST TO REMOVE PROTECTION?
         BE    DISABLE                  YES, EXIT
         CLC   =CL4'PROT',4(R5)         REQUEST TO PROTECT?
         BE    ENABLE                   YES, EXIT
         SPACE
MAINEXT  SR    R1,R1                    CLEAR A REG.
         IC    R1,0(,R5)                PICK UP ENTRY LENGTH
         AR    R5,R1                    CALC PTR TO NEXT ENTRY
         SPACE
         CLI   0(R5),0                  END OF TIOT?
         BNE   MAINLINE                 NO, LOOP
         SPACE
EOJ      LA    R1,DCB                   GET PTR TO DCB
         TM    DCBOFLGS,16              IS IT OPEN?
         BZ    EXIT                     NO, GO ON
         SPACE
         CLOSE DCB                      INSURE DCB IS CLOSED
         SPACE
EXIT     L     R15,RC                   GET FINAL RETURN CODE
         L     R13,4(,R13)              GET PTR TO SAVEAREA
         RETURN (14,12),RC=(15)         AND EXIT
         EJECT
* REQUEST TO DISABLE PASSWORD PROTECTION
* 1) READ JFCB TO GET DSNAME
* 2) READ THE FORMAT1 DSCB
* 3) INSURE DATASET IS NOT 'READ-PROTECTED' NOW
* 4) DISABLE PROTECTION
* 5) UPDATE THE FORMAT1 DSCB
         SPACE 2
OPEN     LH    R1,DDCOUNT               *
         LA    R1,1(,R1)                * BUMP UP REL DD COUNT
         STH   R1,DDCOUNT               *
         BAL   R14,GETDSCB              FETCH THE DSCB
*                                       DOES NOT RETURN IF ERROR(S)
         TM    DS1DSIND,(16+4)          IS IT PROTECTED NOW?
         BZ    MAINEXT                  NO, JUST EXIT
         BNO   ERROR1                   ERROR IF READ PROTECTED
         SPACE
         NI    DS1DSIND,(255-16-4)      DISABLE PROTECTION
         BAL   R14,PUTDSCB              UPDATE THE DSCB
*                                       DOES NOT RETURN IF ERROR(S)
         B     MAINEXT                  AND LOOP FOR NEXT ENTRY
         EJECT
* REQUEST TO ENABLE PASSWORD PROTECTION
* 1) READ THE JFCB TO GET DSNAME
* 2) READ THE FORMAT 1 DSCB
* 3) INSURE DATASET IS NOT PROTECTED NOW
* 4) ENABLE WRITE PROTECTION
* 5) UPDATE THE DSCB
         SPACE 2
PROT     LH    R1,DDCOUNT               *
         LA    R1,1(,R1)                * BUMP UP REL DD COUNT
         STH   R1,DDCOUNT               *
         BAL   R14,GETDSCB              FETCH THE DSCB
*                                       DOES NOT RETURN IF ERROR(S)
         TM    DS1DSIND,(16+4)          IS DATASET PROTECTED NOW?
         BNZ   MAINEXT                  YES, JUST EXIT
         SPACE
         OI    DS1DSIND,(16+4)          ENABLE PROTECTION
         BAL   R14,PUTDSCB              UPDATE THE DSCB
*                                       DOES NOT RETURN IF ERROR(S)
         B     MAINEXT                  AND LOOP FOR NEXT ENTRY
         EJECT
* READ A JFCB FOR TIOT ENTRY AT R5
* READ THE FORMAT1 DSCB
* RETURN TO CALLER IF NOT ERRORS
         SPACE 2
GETDSCB  ST    R14,GETSV                SAVE RETURN ADDR
         LA    R1,DCB                   SET PTR TO DUMMY DCB
         TM    DCBOFLGS,16              IS DCB OPEN NOW?
         BZ    GETDSCB1                 NO, GO ON
         SPACE
         CLOSE  DCB                     CLOSE IT NOW
         SPACE
GETDSCB1 LA    R1,DCB                   RESET DCB PTR
         MVC   DCBDDNAM,4(R5)           INSERT NEW DD NAME
         SPACE
         RDJFCB DCB                     READ THE JFCB
         MVC   DSNAME,JFCB              SAVE THE DATASET NAME
         SPACE
         MVI   JFCB,4                   SET DSNAME
         MVC   JFCB+1(43),JFCB          FOR VTOC
         OPEN  (DCB,(UPDAT)),TYPE=J     OPEN THE VTOC
         SPACE
         LH    R1,18(,R5)               GET UCB ADDR FROM TIOT
         MVC   SERIAL#,28(R1)           EXTRACT THE VOL ID FROM UCB
         SPACE
         OBTAIN CAMLST                  LOCATE THE FORMAT 1 DSCB
         LTR   R15,R15                  DID IT WORK?
         BNZ   ERROR2                   NO, EXIT AS ERROR
         SPACE
         LA    R1,IOB                   SET R1 TO THE IOB
         MVC   35(5,R1),DSCB+96         MOVE CCHHR INTO IOB
         SPACE
         L     R14,GETSV                GET EXIT PTR
         BR    R14                      AND RETURN
         EJECT
* UPDATE THE DSCB NOW IN CORE
         SPACE 2
PUTDSCB  ST    R14,PUTSV                SAVE RETURN ADDR
         LA    R1,IOB                   SET PTR TO THE IOB
         XC    ECB,ECB                  CLEAR THE ECB
         SVC   0                        ISSUE EXCP SVC
         WAIT  ECB=ECB                  WAIT ON I/O
         SPACE
         CLOSE  DCB                     CLOSE THE DCB
         SPACE
         CLI   ECB,127                  DID IT WORK?
         BNE   ERROR3                   NO, EXIT AS ERROR
         SPACE
         L     R14,PUTSV                GET RETURN ADDR
         BR    R14                      AND EXIT
         EJECT
* ERROR ROUTINES
         SPACE
* 1-- OPEN REQUEST FOR READ PROTECTED DATASET
         SPACE
ERROR1   MVI   RC+3,1                   TYPE OF ERROR = '1'
         MVC   RC+2(1),DDCOUNT+1        RELATIVE DD #
         B     EOJ                      STOP
         SPACE 2
* 2-- OBTAIN (READ) FAILED
         SPACE
ERROR2   MVI   RC+3,2                   TYPE OF ERROR = 2
         MVC   RC+2(1),DDCOUNT+1        RELATIVE DD #
         B     EOJ                      STOP
         SPACE 2
* 3-- EXCP (WRITE) FAILED
         SPACE
ERROR3   MVI   RC+3,3                   TYPE OF ERROR = 3
         MVC   RC+2(1),DDCOUNT+1        RELATIVE DD #
         B     EOJ                      STOP
         EJECT
         DC    0D'0'
JFCB     DC    176X'0'                  JFCB READ IN AREA
DSCB     DC    148X'0'                  * DSCB
         ORG   DSCB-44                  ONLY 96 BYTES TRANSFERED
         IECSDSL1 (1)                   **
         ORG
CCW1     CCW   041,DSNAME,64,44         SEARCH
CCW2     CCW   8,CCW1,0,0               TIC
CCW3     CCW   5,DSCB,0,96
IOB      DC    0D'0'                    *****
         DC    X'42'                    *
         DC    XL4'0'                   *
         DC    AL3(ECB)                 * EXCP'S
         DC    2A(0)                    *  IOB
         DC    A(CCW1)                  *
         DC    A(DCB)                   *
         DC    2A(0)                    *
         DC    2A(0)                    *****
ECB      DC    A(0)                     EXCP'S ECB
PUTSV    DC    A(0)                     PUTDSCB EXIT PTR
GETSV    DC    A(0)                     GETDSCB EXIT PTR
TIOT     DC    A(0)                     START OF TIOT
RC       DC    A(0)                     FINAL RETURN CODE
AJFCB    DC    AL1(128+7),AL3(JFCB)     EXIT LIST
CAMLST   CAMLST SEARCH,DSNAME,SERIAL#,DSCB  TO READ THE FORMAT 1 DSCB
DSNAME   DC    CL44' '                  DATASET NAME FOR SEARCH
SERIAL#  DC    CL6' '                   VOLUME SERIAL NUMBER
DDCOUNT  DC    H'0'                     # DD'S PROCESSED
         LTORG
         EJECT
DCB      DCB   DDNAME=X,                                               *
               DEVD=DA,                                                *
               DSORG=PS,                                               *
               KEYLEN=44,                                              *
               MACRF=E,                                                *
               EXLST=AJFCB
         PRINT  NOGEN
         DCBD  DSORG=PS,DEVD=DA
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
