         TITLE 'B L A C K J A C K    V E R S I O N  2   L E V E L  TSO'
         PRINT NOGEN
*
*
*        THIS IS BLACKJACK (VERSION TSO).  IT MUST BE LINKED INTO
*        EITHER SYS1.LINKLIB OR A CONCATINATED LINKLIB (OPTIONALLY
*        CMDLIB ALSO).  ALL THE USER NEED DO IS ENTER ITS MODULE
*        NAME FROM A TSO TERMINAL, AND INSTRUCTIONS WILL BE DISPLAYED.
*
*
BLAKJACK  CSECT
R0       EQU   0                   ASSEMBLER
R1       EQU   1                   INSTRUCTION
R2       EQU   2                   USED
R3       EQU   3                   TO
R4       EQU   4                   EQUATE
R5       EQU   5                   GENERAL
R6       EQU   6                   REGISTERS
R7       EQU   7                   TO
R8       EQU   8                   SYMBOLS
R9       EQU   9                   SO
R10      EQU   10                  THAT
R11      EQU   11                  TRACING
R12      EQU   12                  REGISTER
R13      EQU   13                  USAGE
R14      EQU   14                  IS
R15      EQU   15                  EASIER
         USING *,R2,R3,R12         SET BASE REG
         SAVE  (14,12)             SAVE CALLING REGISTERS
         LR    R2,R15              SET
         LA    R15,1               BASE
         LA    R3,4095(R15,R2)     REGISTER
         LA    R12,4095(R15,R3)    USAGE
         ST    R13,SAVE+4          SET
         LR    R15,R13             FORWARD
         LA    R13,SAVE            BACKWARD
         ST    R13,8(R15)          POINTERS
***********************************************************************
*
*        LIST PLAYER CODE TABLE
*
***********************************************************************
         TPUT  MSGBUF-1,1          SPACE TWO LINES ON TERMINAL
         TPUT  MSGBUF-1,1
         TPUT  MSG1,L'MSG1         PRINT MSG1 'BLACKJACK VERSION'
         LA    R8,((CODETEND-CODETAB)/29) # OF LINES
         LA    R7,CODETAB          SET R7 TO ADDR OF CODE TABLE
INITIAL  MVC   MSGBUF,MSGBUF-1     CLEAR I/O AREA
         MVC   MSGBUF(29),0(R7)    MOVE CODE TABLE DATA TO BUFFER
         TPUT  MSGBUF,29           PRINT LINE OF CODE TABLE
         LA    R7,29(R7)           BUMP TO NEXT LINE IN TABLE
         BCT   R8,INITIAL          CONTINUE FOR NUMBER OF ENTRIES
***********************************************************************
*
*        INITIALIZE CONSTANTS AND PARAMETERS
*
***********************************************************************
         MVI   FLAG,0              DECK NOT SHUFFLED/NO PLAYERS
         XC    CARDFI,CARDFI       SET CARDS DEALT TO ZERO
         LA    R0,67               SET R0 WITH 67
         ST    R0,SEED             SET SEED EQ TO 67 FIRST NUMB INTO
***********************************************************************
*
*        PLAYER TYPES IN A TWO DIGIT CODE THAT TELLS PROGRAM WHAT TO
*        DO  CODE CAN RANGE FROM 01 TO 07 AND IS GOTTON FROM CODE TABLE
*
***********************************************************************
GETCODE  TPUT  MSG2,L'MSG2      ENTER REQUESTS MSG
         TGET  MSGBUF,2            GET PLAYERS RESPONSE FROM TERMINAL
         CLI   MSGBUF,C'0'    IS REPLY 0
         BE    CODES               YES, HE WANTS THE CODES
         CLI   MSGBUF,C'1'    IS REPLY 1
         BE    PRGAMRUL            YES, HE WANTS THE RULES
         CLI   MSGBUF,C'2'    NO, IS REPLY 2
         BE    PLAYNUM             YES, LETS SET THE NUMBER OF PLAYERS
         CLI   MSGBUF,C'3'    NO, IS REPLY 3
         BE    PLAYSTAT            YES, PRINT PLAYER STATISTICS
         CLI   MSGBUF,C'4'    NO, IS REPLY 4
         BE    COMPSTAT            YES, PRINT COMPUTER STATISTICS
         CLI   MSGBUF,C'5'    NO, IS REPLY 5
         BE    PLAYHAND            YES, LETS PLAY A HAND
         CLI   MSGBUF,C'6'    NO, IS REPLY 6
         BE    CARDSHUF            YES, HE WANTS A SHUFFLE
         CLI   MSGBUF,C'7'    NO, IS REPLY 7
         BE    ENDBLKJK            YES, I GUESS HE'S TIRED OF THIS
         TPUT  MSG3,L'MSG3         ERROR, INFORM USER AND RETRY
         B     GETCODE             LETS TRY IT AGAIN
CODES    LA    R8,((CODETEND-CODETAB)/29) # OF LINES
         LA    R7,CODETAB          SET R7 TO ADDR OF CODE TABLE
CODELOOP MVC   MSGBUF,MSGBUF-1     CLEAR I/O AREA
         MVC   MSGBUF(29),0(R7)    MOVE CODE TABLE DATA TO BUFFER
         TPUT  MSGBUF,29           PRINT LINE OF CODE TABLE
         LA    R7,29(R7)           BUMP TO NEXT LINE IN TABLE
         BCT   R8,CODELOOP         CONTINUE FOR NUMBER OF ENTRIES
         B     GETCODE             LETS TRY IT AGAIN
         LTORG LITERAL             POOL FORCED HERE
***********************************************************************
*
*        PRINT GAME RULES SUBROUTINE
*
***********************************************************************
PRGAMRUL LA    R7,GAMRULES         SET R7 TO GAME RULES
         LA    R8,((GAMEREND-GAMRULES)/40)     # OF LINES
LOOP2    MVC   MSGBUF,MSGBUF-1     CLEAR I/O AREA
         MVC   MSGBUF(40),0(R7)    MOVE A LINE OF DATA TO BUFFER
         TPUT  MSGBUF,40           PRINT A LINE OF THE GAME RULES
         LA    R7,40(R7)           BUMP TO NEXT LINE IN LIST
         BCT   R8,LOOP2            LOOP THROUGH ALL LINES
         B     GETCODE             O.K., NOW LETS ASK HIM AGAIN
***********************************************************************
*
*        SUBROUTINE TO DETERMINE NUMBER OF PLAYERS,
*        INITIALIZE THEIRS AND COMPUTER STATISTICS
*
***********************************************************************
PLAYNUM  TPUT  MSG4,L'MSG4         FIND OUT HOW MANY PLAYERS
         B     RETYPE1             GET A DIGIT
ERROR1   TPUT  MSG6,L'MSG6         PRINT MSG R6,'INVALID NUMBER OF
RETYPE1  TPUT  MSG5,L'MSG5         ASK FOR A DIGIT
         TGET  MSGBUF,1            GET PLAYERS RESPONSE FROM TERMINAL
         CLI   MSGBUF,C'0'         DID PLAYER TYPE IN A ZERO
         BE    ERROR1              YES BRANCH TO ERROR 1
         CLI   MSGBUF,C'1'         NO , DID PLAYER TYPE IN A VALID
         BE    INITPLAY            NUMBER 1.2,3, OR 4.  IF YES
         CLI   MSGBUF,C'2'         BRANCH TO INITPLAY. IF NOT
         BE    INITPLAY            PRINT ERROR 1 MESSAGE.
         CLI   MSGBUF,C'3'
         BE    INITPLAY
         CLI   MSGBUF,C'4'
         BE    INITPLAY
         BNE   ERROR1              GO TRY IT AGAIN
INITPLAY OI    FLAG,PHASE1         GOT NUMBER OF PLAYERS
         SR    R0,R0               CLEAR FOR IC
         NI    MSGBUF,X'0F'        STRIP ZONE FROM CHARACTER
         IC    R0,MSGBUF           PICK IT UP
         ST    R0,PLAYCNT          NUMBER OF PLAYERS
         LA    R4,4                MAXIMUM NUMBER OF PLAYERS
         LA    R5,PLAYERS          SET R5 TO PLAYERS
LOOP3    MVC   0(4,R5),THOUSAND    START EACH PLAYER WITH $1000
         LA    R5,4(R5)            BUMP TO PLAYER FILE
         MVC   0(4,R5),ZEROF       SET HANDS PLAYED TO ZERO
         LA    R5,4(R5)            BUMP TO NEXT PLAYER FILE
         MVC   0(2,R5),ZEROH       SET PLAYER BET TO ZERO
         LA    R5,2(R5)            BUMP TO NEXT PLAYER FILE
         MVI   0(R5),C' '          MOVE BLANK TO HAND CODE
         LA    R5,1(R5)            BUMP TO PLAYER FIRST HAND
         MVC   0(30,R5),=CL30' '
         LA    R5,30(R5)           CLEAR CARD/CODE/MOD AREA
         MVC   0(3,R5),=X'00000F'  RESET RESULT/HAND SUM
         LA    R5,3(R5)            BUMP TO PLAYERS SECOND HAND
         MVC   0(30,R5),=CL30' '
         LA    R5,30(R5)           BUMP TO RESULT CODE HAND2
         MVC   0(3,R5),=X'00000F'  SET RESULT CODE AND SUM HAND2 TO
         LA    R5,3(R5)            BUMP TO HANDS WON PLAYER
         MVC   0(4,R5),ZEROF       SET HANDS WON TO ZERO PACKED FORMAT
         LA    R5,4(R5)            BUMP TO PLAYER FILE
         MVC   0(4,R5),ZEROF       RESET NUMBER OF BLACK JACKS
         LA    R5,4(R5)            BUMP TO PLAYER FILE
         BCT   R4,LOOP3            MAKE SURE WE GET ALL PLAYERS
         MVC   HPC(4),ZEROF        RESET NUMBER OF HANDS PLAYED
         MVC   CCARD(30),=CL30' '
         MVC   CCARD+30(30),=CL30' '
         MVC   HWC(4),ZEROF        SET HANDS WON BY COMPUTER TO ZERO
         B     GETCODE             BRANCH TO GET A NEW CODE
***********************************************************************
*
*        SUBROUTINE TO PRINT PLAYER STATISTICS INDIVIDUAL
*        AND TOTAL...TOTAL WINS, TOTAL HANDS PLAYED,
*        TOTAL WINNINGS AND TOTAL BLACKJACKS
*
***********************************************************************
PLAYSTAT TM    FLAG,PHASE1         HAS NUMB OF PLAYERS BEEN DETERMINED
         BZ    ERROR2              NO BRANCH TO ERROR 2
         MVC   TOTWIN,ZEROF        YES SET TOTAL WINSNINGS TO ZERO
         MVC   TOTHP,ZEROF         SET TOTAL HANDS PLAYED TO ZERO
         MVC   TOTHW,ZEROF         SET TOTAL HANDS WON TO ZERO
         MVC   TOTBJ,ZEROF         SET TOTAL BLACKJACKS TO ZERO
         TPUT  HEAD1,L'HEAD1       PRINT HEAD1, 'PLAYER RECORDS'
         TPUT  MSGBUF-1,1          SPACE TWO LINES ON TERMINAL
         TPUT  MSGBUF-1,1
         MVC   MSGBUF,MSGBUF-1     CLEAR I/O AREA
         MVC   MSGBUF+16(L'HEAD2),HEAD2 SET UP HEADING
         TPUT  MSGBUF,80           WRITE PLAYER1, PLAYER2, ETC
         TPUT  MSGBUF-1,1          SPACE A LINE ON TERMINAL
         MVC   MSGBUF,MSGBUF-1     CLEAR I/O AREA
         MVC   MSGBUF(12),=C'WINNINGS    '  PROCESS PLAYER WINNINGS
         L     R7,PLAYCNT          SET R7 WITH PLAYER COUNT
         LA    R8,PLAYERS SET R8 TO PLAYER FILE
         LA    R9,MSGBUF  SET R9 TO TERMINAL BUF
         LA    R9,16(R9)           BUMP TO I/O AREA
MOVEDOL  MVC   TEMP(4),0(R8)       MOVE PLAYER WINNINGS TO TEMP
         AP    TOTWIN,TEMP ADD PLAY WINS TO TOT PLAY WINS
         OI    TEMP+3,X'0F'        OR SIGN DIGIT WITH AN F
         UNPK  0(8,R9),TEMP        MAKE PRINTABLE
         MVC   0(2,R9),=C'$ '      PLACE $ SIGN IN FRONT OF PLAYER WIN
         LA    R9,14(R9)           BUMP TO I/O AREA
         LA    R8,85(R8)           BUMP TO NEXT PLAYER RECORD
         BCT   R7,MOVEDOL DECREMENT PLAYCNT
         LA    R9,MSGBUF           IF 0 ENT R9 TO
         LA    R9,69(R9)           BUMP TO I/O AREA
         OI    TOTWIN+3,X'0F'      OR SIGN DIGIT WITH HEX F
         UNPK  0(8,R9),TOTWIN      MAKE PRINTABLE
         MVC   0(2,R9),=C'$ '      PLACE $ SIGN BEFORE TOT WINNINGS
         TPUT  MSGBUF,80           PRINT PLAYER WINNINGS AND TOTALS
         MVC   MSGBUF(12),=C'HANDS PLAYED'  PROCESS HANDS PLAYED
         L     R7,PLAYCNT          SET R7 WITH PLAYER COUNT
         LA    R8,PLAYERS   SET R8 TO PLAYER FILE
         LA    R9,MSGBUF           ADDRESS OF BUFFER
         LA    R8,4(R8)            BUMP TO PLAYER FILE
         LA    R9,16(R9)           BUMP TO I/O AREA
MOVEHP   MVC   TEMP(4),0(R8)    MOVE HANDS PLAYED TO WORK AREA
         AP    TOTHP,TEMP          ADD HANDS PLAYED TO TOTAL HANDS
         OI    TEMP+3,X'0F'        OR SIGN DIGIT WITH HEX F
         UNPK  0(8,R9),TEMP        CHANGE HANDS PLAYED TO CHAR FORMAT
         MVC   0(2,R9),=C'  '      REMOVE FIRST TWO ZEROES FROM HANDS
         LA    R9,14(R9)           BUMP TO I/O AREA
         LA    R8,85(R8)           BUMP TO NEXT PLAYER RECORD
         BCT   R7,MOVEHP   LOOP FOR NUMBER OF PLAYERS
         LA    R9,MSGBUF  POINT TO MSG BUFFER
         LA    R9,69(R9)           BUMP TO I/O AREA
         OI    TOTHP+3,X'0F'       OR SIGH DIGIT WITH HEX F
         UNPK  0(8,R9),TOTHP       CONVERT TOT HANDS PLAY TO CHAR FRMAT
         TPUT  MSGBUF,80  PRINT HANDS PLAYED PLUS TOTAL
         MVC   MSGBUF,MSGBUF-1     CLEAR AREA WITH BLANKS
         MVC   MSGBUF(12),=C'HANDS WON   '  PROCESS HANDS WON
         L     R7,PLAYCNT          SET R7 WITH PLAYER COUNT
         LA    R8,PLAYERS  POINT TO PLAYER TABLE
         LA    R9,MSGBUF POINT TO MSG BUFFER
         LA    R8,77(R8)           BUMP TO PLAYER HANDS WON
         LA    R9,16(R9)           BUMP TO I/O AREA
MOVEHW   MVC   TEMP(4),0(R8)  MOVE TO WORK AREA
         AP    TOTHW,TEMP     ADD PLAYER HANDS WON TO TOTAL
         OI    TEMP+3,X'0F'        OR SIGN DIGIT WITH HEX F
         UNPK  0(8,R9),TEMP        CONVERT HANDS WON TO CHAR FORMAT
         MVC   0(2,R9),=C'  '      REMOVE FIRST 2 ZEROES FROM HANDS WON
         LA    R9,14(R9)           BUMP TO I/O AREA
         LA    R8,85(R8)           BUMP TO NEXT PLAYER RECORD
         BCT   R7,MOVEHW           LOOP FOR NUMBER OF PLAYERS
         LA    R9,MSGBUF      POINT TO TERM BUFFER
         LA    R9,69(R9)           BUMP TO I/O AREA
         OI    TOTHW+3,X'0F'       OR SIGN DIGIT WITH HEX F
         UNPK  0(8,R9),TOTHW CONVERT TO PRINTABLE
         TPUT  MSGBUF,80  HANDS WON/TOTAL HANDS WON
         MVC   MSGBUF(12),=C'BLACKJACKS  '  PROCESS BLACKJACKS
         L     R7,PLAYCNT          SET R7 WITH PLAYER COUNT
         LA    R8,PLAYERS POINT TO PLAYER TABLE
         LA    R9,MSGBUF POINT TO TERM BUFFER
         LA    R8,81(R8)           BUMP TO PLAYER BLACKJACKS
         LA    R9,16(R9)           BUMP TO I/O AREA
MOVEBJ   MVC   TEMP(4),0(R8) MOVE TO WORK AREA
         AP    TOTBJ,TEMP          ADD PLAYER BLACKJACKS TO TOTAL
         OI    TEMP+3,X'0F'        OR SIGN DIGIT WITH HEX F
         UNPK  0(8,R9),TEMP        CHANGE BLACKJACKS TO CHAR FORMAT
         MVC   0(2,R9),=C'  '      REMOVE FIRST 2 ZEROES FROM BLKJKS
         LA    R9,14(R9)           BUMP TO  AREA
         LA    R8,85(R8)           BUMP TO NEXT PLAYER RECORD
         BCT   R7,MOVEBJ LOOP FOR NUMBER OF USERS
         LA    R9,MSGBUF POINT TO TERM BUFFER
         LA    R9,69(R9)           BUMP TO I/O AREA
         OI    TOTBJ+3,X'0F'       OR SIGN DIGIT WITH HEX F
         UNPK  0(8,R9),TOTBJ MAKE PRINTABLE
         TPUT  MSGBUF,80 PRINT BLACKJACKS AND TOTAL BJS
         B     GETCODE   GET NEXT CODE FROM USER
ERROR2   MVC   MSGBUF(26),=C'CODE 02 MUST BE DONE FIRST'
         TPUT  MSGBUF,26   PRINT ERROR MSG 2
         B     GETCODE   GET NEXT CODE FROM USER
***********************************************************************
*
*        THIS ROUTINE TYPES OUT COMPUTER HANDS PLAYED AND WINS
*
***********************************************************************
COMPSTAT TM    FLAG,PHASE1  WAS PHASE TWO DONE FIRST
         BZ    ERROR2              NO BRANCH TO ERROR TWO
         MVC   MSGBUF,MSGBUF-1     CLEAR I/O AREA
         MVC   MSGBUF(19),=C'COMPUTER STATISTICS'
         TPUT  MSGBUF,80           PRINT MSG 'COMPUTER STATISTICS'
         MVC   MSGBUF,MSGBUF-1     CLEAR I/O AREA
         MVC   MSGBUF(15),=C'HANDS PLAYED   '  PROCESS HANDS PLAYED
         OI    HPC+3,X'0F'         OR SIGN DIGIT WITH HEX F
         UNPK  MSGBUF+15(8),HPC    CONVERT HANDS PLAYED TO CHAR FORMAT
         TPUT  MSGBUF,80           TYPE COMPUTER HANDS PLAYED
         MVC   MSGBUF,MSGBUF-1     CLEAR I/O AREA
         MVC   MSGBUF(15),=C'HANDS WON      '  PROCESS HANDS WON
         OI    HWC+3,X'0F'         OR SIGN DIGIT WITH HEX F
         UNPK  MSGBUF+15(8),HWC    CONVERT HANDS WON TO CHAR FORMAT
         TPUT  MSGBUF,80           PRINT COMPUTER HANDS WON
         B     GETCODE             UNCONDITIONAL BRANCH TO GET ANOTHER
*                                  CODE
*        THIS SUBROUTINE PLAYS ONE HAND OF BLACKJACK
*
PLAYHAND TM    FLAG,PHASE1         HAVE WE GOT ANY PLAYERS YET?
         BZ    ERROR2              NO, INFORM HIM
         TM    FLAG,PHASE2       HAVE THE CARDS BEEN SHUFFLED
         BO    PLAYGAME            YES, GO TO PLAYGAME
         BAL   R10,SHUFFLE         NO  GO TO SHUFFLE CARD SUBROUTINE
*
*        TAKE BETS FROM PLAYERS
*
PLAYGAME LA    R5,240              SET R5 WITH HEX F0
         ST    R5,TEMP             STORE CHAR 0 AT TEMP
         LA    R5,0                SET R5 WITH ZERO
         ST    R5,CARDFI           SET POINTER TO CARDS DEALT TO ZERO
         MVC   TEMP(1),PLAYCNT+3   MOVE PLAYERCNT TO TEMP
         OI    TEMP,X'F0'          CHANGE PLAYER COUNT TO CHAR FORMAT
*                                  IN TEMP
         LA    R7,PLAYERS          SET R7 TO PLAYER
*                                  FILE
TYPEBET  MVC   MSGBUF,MSGBUF-1     CLEAR I/O AREA
         MVC   MSGBUF(22),=C'PLAYER   MAKE YOUR BET'  MOVE MSG TO I/O
         LA    R5,0                SET R5 WITH ZERO
         IC    R5,TEMP+3           INSERT CHAR FROM TEMP+3 TO R5
         A     R5,ONE              ADD ONE TO CHARACTER IN R5
         STC   R5,TEMP+3           STORE NEW CHAR AT TEMP+3
         STC   R5,MSGBUF+7         STORE NEW CHAR IN ABOVE MESSAGE TO
*                                  SPEC
*
*        IS PLAYERS WINNINGS EQUAL TO ZERO
*
         LA    R7,3(R7)            BUMP TO WINNINGS SIGN
*                                  DIGIT
         OI    0(7),X'0F'          OR SIGN DIGIT HITH HEX F
         S     R7,THREE            BUMP TO PLAYERS WINNINGS
         CLC   0(4,R7),=X'0000000F'  IS PLAYERS WINNINGS EQ TO 0
         BE    BYPPLAY             YES, GO TO BYPASS THIS PLAYER
         LA    R7,8(R7)            NO BUMP TO PLAYERS BET
*                                  I/O AREA
         TPUT  MSGBUF,80           PRINT  PLAYER X MAKE YOUR BET
BETLOOP  MVC   MSGBUF,MSGBUF-1     CLEAR I/O AREA
         MVC   MSGBUF(24),=C'TYPE IN TWO DIGIT AMOUNT'  MOVE MESSAGE
         TPUT  MSGBUF,80           PRINT ' TYPE IN 05,10,15'
         TGET  MSGBUF,80           GET PLAYERS RESPONSE
         OI    MSGBUF,X'F0'        INSURE NUMERIC DIGIT
         OI    MSGBUF+1,X'F0'      INSURE NUMERIC DIGIT
         CLC   MSGBUF(2),=C'01'    NO, DID PLAYER TYPE IN MINUMUM
         BL    BETLOOP             YES, GO ON MAKEBET
         CLC   MSGBUF(2),=C'99'    NO, DID PLAYER TYPE IN MAXIMUM
         BH    BETLOOP             NO GO TO BETLOOP
MAKEBET  PACK  0(2,R7),MSGBUF(2)   YES, CHANGE BET TO PACKED FORMAT
*
*        IS PLAYERS BET MORE THAN HIS WINNINGS
*
         S     R7,EIGHT            MODIFYY POINTER TO PLAYERS WINNINGS
         MVC   TEMP4,0(R7)         MOVE PLAYERS WINNINGS TO TEMP4
         LA    R7,8(R7)            BUMP TO PLAYERS BET
         SP    TEMP4,0(2,7)        SUB PLAYERS BET FROM WINNINGS
         BM    ERROR3              IF BET MORE GO TO ERROR3
         LA    R7,77(R7)           BUMP TO NEXT PLAYER RECORD
CHECKP   CLC   TEMP(1),TEMP+3      HAVE ALL PLAYERS BEEN PROCESSED
         BNE   TYPEBET             NO, GO TO TYPEBET
*
*        DEAL OUT FIRST TWO CARDS TO PLAYERS AND COMPUTER
*
         LA    R4,2                SET R4 WITH 2, NUMBER OF CARDS
*                                  TO BE DEALT
         LA    R5,0                SET R5 WITH 0 AS ADDR MOD R
LOOPDE1  LA    R6,PLAYERS(R5)      ENT R6 WITH POINT TO PLAYER FILE
         LA    R6,11(R6)           BUMP TO PLAYER CARDS
         L     R7,PLAYCNT          SET R7 WITH PLAYER COUNT
         LA    R8,PLAYERS          SET R8 TO PLAYER
LOOPDE2  LA    R8,10(R8)           BUMP TO HAND CODE
         CLI   0(8),X'01'          DOES PLAYER HAVE MONEY
         BE    PNM                 NO GO TO PNM
         BAL   R10,DEALCD          YES GO TO DEALCD
         MVC   0(6,R6),TEMPCD      GIVE PLAYER HIS CARD
PNM      LA    R6,85(R6)           BUMP TO NEXT PLAYER
         LA    R8,75(R8)           BUMP TO NEXT PLAYER
         BCT   R7,LOOPDE2          SUB 1 FROM RR7,IF UNEQ 0 GO TO
*                                  LOOPDE2
         LA    R6,CCARD(R5)        SET R6 WITH COMPUTER CARD AREA
         BAL   R10,DEALCD          GO TO DEAL A CARD OUT
         MVC   0(6,R6),TEMPCD      GIVE COMPUTER HIS CARD
         LA    R5,6(R5)            MODIFY R5 ADDR MODIFICATION
         BCT   R4,LOOPDE1          SUB 1 FROM RR4,IF UNEQ TO 0 GO TO
*
*        PRINT PLAYER AND COMPUTER FIRST TWO CARDS
*
         MVC   MSGBUF,MSGBUF-1     CLEAR AREA WITH BLANKS
         MVC   MSGBUF+14(64),HEAD2  MOVE HEAD 2 TO I/O AREA
         MVC   MSGBUF+69(8),=C'COMPUTER'  MOVE COMPUTER TO I/O
         TPUT  MSGBUF,80           PRINT  HEAD2
         MVC   MSGBUF,MSGBUF-1     CLEAR AREA WITH BLANKS
*        MVC   MSGBUF(12),=C'************'  MOVE ASTERISKS TO I/O
*        TPUT  MSGBUF,80           TYPE A SEPARATOR ON TERMINAL
         LA    R7,2                SET R7 WITH NUMBER OF CARDS TO
*                                  BE TYPED
         LA    R8,0                SET R8 WITH A ZERO AS AN ADDR MOD
LOOPP1   LA    R9,PLAYERS(R8)      ENT R9 WITH POINT TO PLAYER FILE +
         LA    R9,11(R9)           BUMP TO PLAYER CARDS
         LA    R6,MSGBUF           SET POINTER TO I/O BUF
         LA    R6,14(R6)           BUMP TO I/O AREA
         L     R10,PLAYCNT         SET R10 WITH PLAYER COUNT
         MVC   MSGBUF,MSGBUF-1     CLEAR AREA WITH BLANKS
         LA    R11,PLAYERS         SET R11 TO PLAYER FILE
LOOPP2   LA    R11,10(R11)         BUMP TO HAND CODE
         CLI   0(11),X'01'         PLAYER HAVE ANY MONEY
         BE    PMNONE              NO GO TO PMNONE
         MVC   0(6,R6),0(R9)       MOVE PLAYER CARD TO I/O AREA
PMNONE   LA    R6,14(R6)           BUMP TO I/O AREA
         LA    R11,75(R11)         BUMP TONEXT PLAYER
         LA    R9,85(R9)           BUMP TO NEXT PLAYER RECORD
         BCT   R10,LOOPP2          SUB 1 FROM RR10, IF UNEQ TO 0 GO TO
         S     R7,ONE              SUBTRACT ONE FROM NUM OF CARDS TO
*                                  BE TYPED
         BZ    BYPASS              IF R7 EQ 0 GO TO BYPASS
         LA    R9,CCARD(R8)        SET R9 TO COMPUTER
         LA    R6,MSGBUF           SET POINTER TO I/O BUF
         LA    R6,69(R6)           BUMP TO I/O AREA
         MVC   0(6,R6),0(R9)       MOVE COMPUTER CARD TO I/O AREA
         LA    R8,6(R8)            MODIFY ADDR MODIFICATION R8
*                                  I/O
         TPUT  MSGBUF,80           PRINT A LINE OF CARDS DEALT
         B     LOOPP1              GO TO LOOPP1
BYPASS   TPUT  MSGBUF,80           PRINT LINE OF CARDS DEALT MINUS
         LA    R7,1                SET R7 WITH ONE
         LA    R8,PLAYERS          SET R8 TO PLAYERS
CP0      CLC   0(4,R8),=X'0000000F'  DOES PLAYER HAVE ANY MONEY
         BNE   CP1                 YES , GO TO CP1
CP00     LR    R9,R7               SET R9 FROM R7
         S     R9,PLAYCNT          HAVE ALL PLAYERS BEEN PROCESSED
         BZ    CA                  YES GO TO CA
         LA    R7,1(R7)            NO,ADD 1 TO R7 PRESENT PLAYER
         LA    R8,85(R8)           BUMP TO NEXT PLAYER RECORD
         B     CP0                 GO TO CP0
CP1      LA    R8,11(R8)           BUMP TO PLAYER FIRST CARD
         LR    R9,8                SET R9 FROM R8
         LA    R9,6(R9)            BUMP TO PLAYERS SECOND
*                                  CARD
         CLC   0(4,R8),0(R9)       ARE BOTH CARDS TH E SAME
         BNE   CP2                 NO,GO TO CP2
RC1      MVC   MSGBUF,MSGBUF-1     CLEAR I/O AREA
         MVC   MSGBUF(48),MSG7     MOVE MSG7 TO I/O
         STC   R7,MSGBUF+7         STORE PLAYER NUMBER IN MSG 7
         OI    MSGBUF+7,X'F0'      MAKE PLAYER NUMBER A CHARACTER
         TPUT  MSGBUF,80           PRINT MSG 7 'DO YOU WANT TO
*                                  SPLIT'
         TGET  MSGBUF,80           GET PLAYERS RESPONSE YES OR N
         OI    MSGBUF,X'40'        CHANGE PLAYERS RESPONSE TO CAP
*                                  LETTER
         CLI   MSGBUF,C'Y'         DID HE TYPE YES
         BE    SPHND               YES, GO TO SPLIT HAND
         CLI   MSGBUF,C'N'         DID HE TYPE NO
         BE    CP2                 YES GO TO CP2
         MVC   MSGBUF,MSGBUF-1     CLEAR I/O AREA
         MVC   MSGBUF(16),MSG8
         TPUT  MSGBUF,80
         B     RC1                 GO TO RC1
SPHND    S     R8,ONE              BUMP TO HAND CODE
         MVI   0(8),X'03'          SET HAND CODE TO 03 SPLIT HAND
         LA    R8,34(R8)           BUMP TO PLAYERS SECOND
*                                  HAND
         MVC   0(6,R8),0(R9)       MOVE SEC CRD FIRST HAND TO FIRST
*                                  CARD
         LA    R8,6(R8)            BUMP TO SECOND CARD SEC
*                                  HAND
         BAL   R10,DEALCD          GO TO DEAL A CARD
         MVC   0(6,R9),TEMPCD      MOVE NEW CARD TO SEC CARD FIR HAND
         BAL   R10,DEALCD          GO TO DEAL A CARD
         MVC   0(6,R8),TEMPCD      MOVE NEW CARD TO D SEC CARD SEC HAND
         MVC   MSGBUF,MSGBUF-1     CLEAR I/O AREA
         MVC   MSGBUF(17),=C'HAND 1     HAND 2'  PRINT 2 NEW HANDS
         TPUT  MSGBUF,80           PRINT HEADING
         MVC   MSGBUF,MSGBUF-1     CLEAR TO BLANKS
         S     R8,SIX              BUMP TO FIRST CARD SEC
*                                  HAND
         S     R9,SIX              MODIFY OINTER TO FIRST CARD FIRST
*                                  HAND
         MVC   MSGBUF(6),0(R9)     MOVE FIRST CARD FIRST HAND TO I/O
         MVC   MSGBUF+11(6),0(R8)  MOVE FIRST CARD SEC HAND TO I/O
         TPUT  MSGBUF,80           PRINT FIRST CARDS
         LA    R8,6(R8)            BUMP TO SEC CARD SEC HAND
         LA    R9,6(R9)            BUMP TO SEC CARD FIRST
*                                  HAND
         MVC   MSGBUF,MSGBUF-1     CLEAR I/O AREA
         MVC   MSGBUF(6),0(R9)     MOVE SEC CARD FIRST HAND TO I/O
         MVC   MSGBUF+11(6),0(R8)  MOVE SEC CARD CE HAND TO I/O
         TPUT  MSGBUF,80           PRINT SECOND CARDS
         S     R8,FIFTY            BUMP TO BEG PLAYER RECORE
         LA    R8,10(R8)           BUMP TO HAND CODE
         B     CP3                 GO TO CP3
CP2      S     R8,ONE              BUMP TO HAND CODE
         MVI   0(8),X'02'          SET HAND CODE TO 02 ONE HAND
CP3      LA    R8,1(R8)            BUMP TO PLAYER CARDS
         BAL   R10,INTHND          GO TO INTERPRET PLAYERS HAND
         S     R8,ONE              BUMP TO PLAYER HAND CODE
         CLI   0(8),X'03'          DID PLAYER HAVE SPLIT HAND
         BE    CP4                 YES GO TO CP4
         S     R8,TEN              BUMP TO BEG PLAYER RECORD
         B     CP00                GO TO CP00
CP4      LA    R8,34(R8)           BUMP TO PLAYER SEC HAND
         BAL   R10,INTHND          GO AT INTHND TO ANALYXE HAND
         S     R8,FF               BUMP TO BEG PLAYER RECORD
         B     CP00                GO TO CP00
CA       LA    R8,CCARD            SET R8 TO COMP CARDS
         LA    R8,6(R8)            BUMP TO COMP SEC CARD
         MVC   MSGBUF,MSGBUF-1     CLEAR I/O AREA
         MVC   MSGBUF(28),=C'COMPUTERS SECOND CARD       '
         MVC   MSGBUF+22(6),0(R8)  MOVE IN COMP SEC CARD
         TPUT  MSGBUF,80           PRINT COMP SEC CARD
         LA    R7,CCARD            SET R7 TO COMP CARDS
         CLC   0(4,R7),=C'ACE '    IS COMP FIRST CARD AN ACE
         BE    CHKCC2              YES GO TO CHECK SEC CARD
         LA    R7,6(R7)            BUMP TO COMP SEC CARD
         CLC   0(4,R7),=C'ACE '    IS  SEC CARD AN ACE
         BE    CHKCC1              YES GO TO CHECK FIRST CARD
XC1      MVC   CARDC,=X'0002'      SET CARD COUNT TO 2
         LA    R4,12               SET R4 WITH 12
         ST    R4,PCARDI           STORE R4 AG CARD COUNT INDEX
XC2      MVC   SUMC,=X'000F'       SET SUM TO ZERO
         LA    R4,0                SET R4 TO ZERO
         IC    R4,CARDC+1          SET RE 4 WITH CARD COUNT
         LA    R5,0                SET R5 WITH ZERO
         LA    R8,CCARD            SET R8 TO COMP CARDS
TA       CLC   0(4,R8),=C'ACE '    IS CARD AN ACE
         BE    AF                  YES, GO TO AF
IC       LA    R8,6(R8)            NO, BUMP TO NEXT PLAYER
*                                  CARD
         BCT   R4,TA               IF MORE CARDS GO TO TA
         STC   R5,CARDC            SAVE ACE COUNT
         IC    R4,CARDC+1          SET R4 WITH CARD COUNT
         LA    R8,CCARD            SET R8 TO COMP CARS
LS1      LA    R6,VALUE            SET R6 TO VALUE
*                                  TABLE
         LA    R7,DECKSEQ          SET R7 TO SEQ DECK
         CLC   0(4,R8),=C'ACE '    IS CARD AN ACE
         BE    BA                  YES, GO TO BA
LS2      CLC   0(4,R8),0(R7)       NO, IS CARD ON SEQ DECK
         BE    AS                  YES , GO TO AS
         LA    R6,2(R6)            NO, BUMP TO VALUE TABLE
         LA    R7,6(R7)            BUMP TO SEQ DECK
         B     LS2                 GO TO LS2
AS       AP    SUMC(2),0(2,6)      ADD CARD VALUE TO CARD SUM COMP
BA       LA    R8,6(R8)            MODIFY POONTER TO NEXT COMP CARD
         BCT   R4,LS1              IF MORE CARDS GO TO LS1
CONA     LA    R5,0                SET R5 WITH ZERO
         IC    R5,CARDC            SET R5 WITH ACE COUNT
         S     R5,ZERO             ARE THERE ANY ACES
         BZ    TYPESUM             NO, GO TO TYPESUM
         S     R5,ONE              IS THERE ONLY ONE ACE
         BZ    OA                  YES, GO OA
LS3      AP    SUMC(2),=X'001F'    NO ADD REMAINING ACES AS ONE
         BCT   R5,LS3              IF MORE ACES GO TO LS3
OA       AP    SUMC(2),=X'011F'    ADD LAST ACE AS 11
         OI    SUMC+1,X'0F'        OR SIGN DIGIT OF SUMC WITH HEX F
         CLC   SUMC,=X'021F'       IS SUM MORE THAN 21
         BH    AA1                 YES, GO TO AA1
TYPESUM  MVC   MSGBUF,MSGBUF-1     CLEAR I/O AREA
         MVC   MSGBUF(23),=C'COMPUTER CARD SUM IS   '  MOVE MESSAGE
         OI    SUMC+1,X'0F'        OR SIGN DIGIT OF SUMC WITH HEX F
         UNPK  MSGBUF+21(2),SUMC   UNPACK COMPUTER CARD SUM
         TPUT  MSGBUF,80           PRINT COMPUTER CARD SUM
         CLC   SUMC,=X'021F'       IS SUM MORE THAN 21
         BH    CBUST               YES, GO TO CBUST
         BE    CHOLD               NO IS SUM EQ 21, YES GO TO CHOLD
         CLC   SUMC,=X'016F'       NO IS SUM MORE THAN 16
         BH    CHOLD               YES GO TO CHOLD
         BAL   R10,DEALCD          NO, DEAL OUT A CARDTO COMP
         MVC   MSGBUF,MSGBUF-1     CLEAR I/O AREA
         MVC   MSGBUF(29),=C'COMPUTER HITS AND GETS       '
         MVC   MSGBUF+23(6),TEMPCD  MOVE NEW CARD TO I/O
         TPUT  MSGBUF,80           TYPE  OUT COMP NEW CARD
         LA    R8,CCARD            SET R8 TO COMP CARDS
         A     R8,PCARDI           ADD CARD INDEX ADDR MOD TO COMP CARD
         MVC   0(6,R8),TEMPCD      ADD NEW CARD TO COMP CARDS
         L     R8,PCARDI           SET R8 WITH CARD INDEX
         LA    R8,6(R8)            ADD 6 TO CARD INDEX
         ST    R8,PCARDI           STORE R8 AT CARDINDEX
         IC    R8,CARDC+1          SET R8 WITH CARD COUNT
         A     R8,ONE              ADD ONE TO CARD COUNT
         STC   R8,CARDC+1          STORE R8 AT CARD COUNT
         B     XC2                 GOT O XC2
*
*        THIS ROUTINE ANALYZES PLAYERS HAND
*
INTHND   STM   R4,R10,TEMP24       STORE GENERAL R4-10
         LA    R8,12               SET R8 WITH 12
         ST    R8,PCARDI           STORE R8 AT PLAYER CARD INDEX
         MVC   CARDC,=X'0002'      SET CARD COUNT TO 2
         L     R8,TEMP28           SET R8 TO FIRST CARD
         CLC   0(4,R8),=C'ACE '    CHECK FOR BLACKJACK
         BE    CHKMOR2             IS FIRST CARD AN ACE
         LA    R8,6(R8)            YES GO TO CHKMOR2
         CLC   0(4,R8),=C'ACE '    IS SEC CARD AN ACE
         BE    CHKMOR1             YES, GO TO CHKMOR1
CI1      L     R8,TEMP28           SET R8 TO FIRST CARD
         MVC   MSGBUF(18),0(R8)    MOVE FIRST 3 CARDS TO TEMP AREA
         MVI   MSGBUF+5,X'40'      MOVE BLANK TO SUIT INDICATOR
         MVI   MSGBUF+11,X'40'     SAME
         MVI   MSGBUF+17,X'40'     SAME
         CLC   MSGBUF(18),=C'SEVN  SEVN  SEVN  '  ARE THERE 3 SEVENS
         BE    SEV3                YES GO TO SEV3
         LA    R4,0                ZERO OUT R4
         IC    R4,CARDC+1          SET R4 WITH CARD COUNT
         LA    R5,0                SET R5 WITH ZERO
TESTACE  CLC   0(4,R8),=C'ACE '    IS  CARD AN ACE
         BE    ACEFND              YES GO TO ACEFND
INCARD   LA    R8,6(R8)            NO, BUMP TO NEXT CARD
         BCT   R4,TESTACE          IF MORE CARDS GO TO TESTACE
         MVC   SUMP,=X'000F'       SET CARD SUM TO ZERO PACKED
         STC   R5,CARDC            STORE ACE COUNT IN CARD COUNT
         IC    R4,CARDC+1          SET R4 WITH CARD COUNT
         L     R8,TEMP28           SET R8 TO PLAYER
*                                  CARDS
LOOPS1   LA    R6,VALUE            SET R6 TO VALUE
*                                  TABLE
         LA    R7,DECKSEQ          SET R7 TO SEQ DECK
         CLC   0(4,R8),=C'ACE '    IS CARD AN ACE
         BE    BYACE               YES, GO TO BYACE
LOOPS2   CLC   0(4,R8),0(R7)       NO  IS CARD SAME AS SEQ DECK
         BE    ADDSUM              YES, GO TO ADD SUM
         LA    R6,2(R6)            NO , BUMP TO VALUE TABLE
         LA    R7,6(R7)            BUMP TO SEQ DECK
         B     LOOPS2              GO TO LOOPS2
ADDSUM   AP    SUMP(2),0(2,6)      ADD CARD VALUE TO SUMP
BYACE    LA    R8,6(R8)            BUMP TO PLAYER NEXT CARD
         BCT   R4,LOOPS1           IF MORE CARDS GO TO LOOPS1
CONADD   LA    R5,0                SET R5 TO ZERO
         IC    R5,CARDC            SET R5 WITH ACE COUNT
         S     R5,ZERO             SUB 0 FROM R5 IF 0 GO TO DONE ADD
         BZ    DONEADD
         S     R5,ONE              SUBTRACT ONE FROM ACE COUNT
         BZ    ONEACE              IF ZERO GO TO ONEACE
LOOPS3   AP    SUMP(2),=X'001F'    ADD 1 TO CARD SUM
         BCT   R5,LOOPS3           IF MORE ACES GO TO LOOPS3
ONEACE   AP    SUMP(2),=X'011F'    ADD 11 TO CARD SUM
         OI    SUMP+1,X'0F'        OR SIGN DIGIT WITH HEX F
         CLC   SUMP,=X'021F'       IS SUM CARDS MORE THAN 21
         BH    ADDACE1             YES, GO TO ADDACE1
DONEADD  MVC   MSGBUF,MSGBUF-1     CLEAR I/O AREA
         MVC   MSGBUF(23),=C'PLAYER   YOUR SUM IS   '  MOVE I/O
         MVC   MSGBUF+7(1),TEMP27+3  INSERT PLAYER NUMBER
         OI    MSGBUF+7,X'F0'      OR PLAYER NUM WITH HEX F0
         UNPK  MSGBUF+21(2),SUMP   INSERT SUM PLAYER CARDS
         OI    MSGBUF+22,X'F0'     OR LAST DIGIT OF SUM WITH HEX F0
         TPUT  MSGBUF,80           PRINT MESSAGE
         OI    SUMP+1,X'0F'        OR SIGH DIGIT OF SUMP WITH HEX F
         CLC   SUMP,=X'021F'
         BH    PBUST               YES GO TO PLAYER BUSTS
         CLI   CARDC+1,X'05'       DOES PLAYER HAVE 5 CARDS LESS THAN
*                                  22
         BE    FCLTTT              YES GO TO FCLTTT
         CLC   SUMP,=X'021F'       NO,DOES PLAYER HAVE 21
         BE    SAVSUM              YES  GO TO SAVSUM
TAGAIN   MVC   MSGBUF,MSGBUF-1     CLEAR I/O AREA
         MVC   MSGBUF(10),=C'HIT Y OR N'  MOVE MSG TO I/O AREA
         TPUT  MSGBUF,80           PRINT  'HIT Y OR N'
         TGET  MSGBUF,80           GET PLAYERS RESPONSE
         OI    MSGBUF,X'40'        MAKE RESPONSE A CAPITAL LETTER
         CLI   MSGBUF,C'Y'         DID PLAYER TYPE IN YES
         BE    PLAYHIT             YES GO TO PLAYHIT
         CLI   MSGBUF,C'N'         NO DID PLAYER TYPE IN NO
         BE    SAVSUM              YES GO TO SAVSUM
         MVC   MSGBUF,MSGBUF-1     CLEAR I/O AREA
         MVC   MSGBUF(16),=C'INVALID RESPONSE'  NO, INVALID RESPONSE
         TPUT  MSGBUF,80           PRINT ERROR MESSAGE
         B     TAGAIN              GO TO TAGAIN
FCLTTT   L     R8,TEMP28           SET R8 TO RESULT CODE
         LA    R8,30(R8)           BUMP TO RESULT CODE
         MVI   0(8),X'04'          SET RESULT CODE TO 04 5 CARDS LT 22
         LA    R8,1(R8)            BUMP TO SUM HAND
         MVC   0(2,R8),SUMP        A  SAVE SUM HAND
         B     RETINT              GO TO RETURN
SAVSUM   L     R8,TEMP28           SET R8 TO RESULT CODE
         LA    R8,30(R8)           BUMP TO RESULT CODE
         MVI   0(8),X'05'          SET RESULT CODE TO 05 PLAYER HOLDS
         LA    R8,1(R8)            BUMP TO SUM PLAYERS HAND
         MVC   0(2,R8),SUMP        MOVE HAND SUM TO PLAYERS RECORD
         B     RETINT              GO TO RETINT
PBUST    L     R8,TEMP28           SET R8 TO RESULT CODE
         LA    R8,30(R8)           BUMP TO RESULT CODE
         MVI   0(8),X'03'          SET RESULT CODE TO 03 PLAYER BUSTS
         LA    R8,1(R8)            BUMP TO SUM HAND
         MVC   0(2,R8),SUMP        SAVE SUM HAND
         B     RETINT              GO TO RETINT
PLAYHIT  BAL   R10,DEALCD          GO TO DEAL A CARD
         MVC   MSGBUF,MSGBUF-1     CLEAR I/O AREA
         MVC   MSGBUF(15),=C'NEW CARD       '  MOVE IN MESSAGE
         MVC   MSGBUF+9(6),TEMPCD  MOVE IN NEW CARD TO MESSAGE
         TPUT  MSGBUF,80           PRINT NEW CARD
         L     R8,TEMP28           SET R8 TO PLAYER
*                                  CARDS
         A     R8,PCARDI           ADD ADDR MODIFICATION TO POINTER
         MVC   0(6,R8),TEMPCD      ADD CARD TO PLAYER CARDS
         L     R8,PCARDI           MODIFY CARD INDEX
         LA    R8,6(R8)            ADD 6 TO CARD INDEX
         ST    R8,PCARDI           STORE CARD INDEX
         IC    R8,CARDC+1          SET R8 WITH CARD COUNT
         A     R8,ONE              ADD ONE TO CARD COUNT
         STC   R8,CARDC+1          STORE CARD COUNT
         B     CI1                 GO TO CI1
AF       LA    R5,1(5)             ADD ONE TO ACE COUNT
         B     IC                  GO TO IC
AA1      SP    SUMC,=X'010F'       SUBTRACT 10 FROM SUM COMP CARDS
         B     TYPESUM             GO TO TYPESUM
CHKMOR2  LA    R8,6(R8)            BUMP TO PLAYER SEC CARD
CHM2     CLC   0(4,R8),=C'KING'    IS SEC CARD A KING
         BE    BJFND               YES,GO TO BJFND
         CLC   0(4,R8),=C'QUEN'    NO, IS SEC CARD A QUEEN
         BE    BJFND               YES, GO TO BJFND
         CLC   0(4,R8),=C'JACK'    NO IS SEC CARD A JACK
         BE    BJFND               YES, GO TO BJFND
         B     CI1                 NO,GO TO CI1
CHKMOR1  S     R8,SIX              BUMP TO PLAYER FIRST CARD
         B     CHM2                GO TO CHM2
BJFND    L     R8,TEMP28           SET R8 TO FIRST CARD
         LA    R8,30(R8)           BUMP TO RESULT CODE
         MVI   0(8),X'01'          SET RESULT CODE TO 01 BLACKJACK
RETINT   LM    R4,R10,TEMP24       RESTORE GENERAL REGISTERS 4-10
         BR    10                  GO TO MAIN PROGRAM VIA R10
SEV3     L     R8,TEMP28           SET R8 TO FIRST CARD
         LA    R8,30(R8)           BUMP TO RESULT CODE
         MVI   0(8),X'02'          SET RESULT CODE TO 02 3 SEVENS
         B     RETINT              GO TO RETINT
ACEFND   LA    R5,1(5)             ADD 1 TO ACE COUNT
         B     INCARD              GO TO INCARD
CHKCC2   LA    R7,6(R7)            BUMP TO COMP SEC CARD
CC2P     CLC   0(4,R7),=C'KING'    IS CARD A KING
         BE    BJC                 YES, GO TO BJC
         CLC   0(4,R7),=C'QUEN'    NO, IS CARD A QUEEN
         BE    BJC                 YES, GO TO BJC
         CLC   0(4,R7),=C'JACK'    NO,IS CARD A JACK
         BE    BJC                 YES, GO TO BJC
         B     XC1                 NO, GO TO XC1
ADDACE1  SP    SUMP,=X'010F'       SUBTRACT 10 FROM SUM CARDS
         B     DONEADD             GO TO DONEADD
CHKCC1   S     R7,SIX              BUMP TO COMP FIRST CARD
         B     CC2P                GO TO CC2P
BJC      MVI   CRC,X'01'           SET COM RESULT CODE TO 01 BLACKJACK
         MVC   MSGBUF,MSGBUF-1     CLEAR I/O AREA
         MVC   MSGBUF(22),=C'COMPUTER HAS BLACKJACK'
         TPUT  MSGBUF,80           PRINT COMP HAS BLACKJACK
XE       LA    R7,1                SET R7 WITH ONE
         LA    R5,PLAYERS          SET R5 TO PLAYER
*                                  FILE
LOOPXE   LR    R8,R5               ENER R8WITH POINTER TO BEG OF
*                                  PLAYER FILE
         LA    R8,10(R8)           BUMP TO HAND CODE
         CLI   0(8),X'01'          DID PLAYER HAVE HAVE ANY MONEY
         BE    TMI                 NO GO TO TMI
         LR    R8,R5               YES RESET POINTER TOPLAYER FILE TO
*                                  BEG
         LA    R8,41(R8)           BUMP TO RESULT CODE
         BAL   R10,PROREST         GO TO PROREST AND RETURN
         LR    R8,R5               SET POINTER TO BEG PLAYER RECORD
         LA    R8,10(R8)           BUMP TO HAND CODE
         CLI   0(8),X'03'          DID PLAYER HAVE SPLIT HAND
         BE    CXE                 YES GO TO CXE
C1XE     LR    R9,7                NO SET R9 WITH PLAYER PROCESSED
         S     R9,PLAYCNT          SUB PLAYER COUNT FROM PLAYER
*                                  PROCESSED
         BZ    GETCODE             IF ZERO THEN GO TO GET CODE
         LA    R5,85(5)            BUMP TO NEXT PLAYER RECORD
         LA    R7,1(R7)            INCREASE PLAYER NUMBER BY ONE
         B     LOOPXE              GO TO LOOPXE
TMI      ST    R5,TEMP15           STORE R5 POINTER TO PLAYER REC
         MVC   MSGBUF,MSGBUF-1     CLEAR I/O AREA
         MVC   MSGBUF(34),=C'PLAYER   NOT IN GAME..OUT OF MONEY'
         STC   R7,MSGBUF+7         STORE PLAYER NUMBER IN MSG
         OI    MSGBUF+7,X'F0'      OR PLAYER NUMBER WITH HEX F0
         TPUT  MSGBUF,80           PRINT PLAYER NOT IN GAME
         L     R5,TEMP15           RESTORE R5 TO PLAYER
*                                  REC
         B     C1XE                GO TO C1XE
CXE      LA    R8,64(R8)           BUMP TO RESULT CODE HAND 2
         BAL   R10,PROREST         BO TO ANALYZE PLAYER HAND
         B     C1XE                GO TO C1XE
CBUST    MVI   CRC,X'02'           SET COMP RESULT CODE TO 02 COMPUTER
*                                  BUSTS
         B     XE                  GO TO XE
CHOLD    MVI   CRC,X'03'           SET COMP RESULST CODE TO 03 COMP
*                                  HOLDS
         B     XE                  GO TO XE
*
*        THIS ROUTINE PROCESSES PLAYER RESULTS AFTER COMPUTER PLAYES
*
PROREST  STM   R4,R10,TEMP14       SAVE GENERAL REGISTERS 4-10
         CLI   0(8),X'01'          DID PLAYER HAVE BLACKJACK
         BE    PBJ                 YES GO TO PBJ
         CLI   0(8),X'04'          DID PLAYER HAVE 5 CARDS LESS THAN 22
         BE    PFC                 YES, GO TO PFC
         CLI   0(8),X'02'          IS RESULT CODE FOR 3 SEVENS
         BE    P37                 YES, GO TO P37
         LA    R8,1(R8)            BUMP TO SUM PLAYER HAND
         MVC   SUMP(2),0(R8)       MOVE SUM HAND TO SUMP
         S     R8,ONE              BUMP TO RESULT CODE
         OI    SUMC+1,X'0F'        OR SIGH DIGIT OF SUMC
         OI    SUMP+1,X'0F'        OR SIGN DIGIT OF SUMP
         CLI   CRC,X'01'           DID COMPUTER HAVE BLACKJACK
         BE    PL                  YES GO TO PLAYER LOSES
         CLI   0(8),X'03'          DID PLAYER BUST
         BE    PBB                 YES GO TO PBB
         CLI   CRC,X'02'           DID COMPUTER BUST
         BE    PW                  YES GO TO PW
         CLC   SUMP,SUMC           NO COMPARE PLAYER SUM TO COMPUTER
*                                  SUM
         BH    PW                  IF PLAYER HAS MORE GO TO PW
PL       MVC   MSGBUF,MSGBUF-1     CLEAR I/O AREA
         MVC   MSGBUF(17),=C'PLAYER   LOST $  '
         MVC   MSGBUF+7(1),TEMP17+3  MOVE IN PLAYER MUMBER
         OI    MSGBUF+7,X'F0'      CHANGE PLAYER NUMBER TO A CHARACTER
         L     R8,TEMP15           SET R8 TO PLAYER
*                                  REC BEG
         LA    R8,8(R8)            BUMP TO PLAYER BET
         UNPK  MSGBUF+15(3),0(2,R8)  UNPACK PLAYER BET TO I/O
         OI    MSGBUF+17,X'F0'     MAKE LAST DIGIT OF BET A CHARACTER
         TPUT  MSGBUF,80           PRINT PLAYER LOSES $XX
         L     R8,TEMP15           SET R8 TO BEG
*                                  PLAYER REC
         LR    R7,8                SET R7 TO BEG OF
*                                  PLAY REC
         LA    R8,8(R8)            BUMP TO PLAYERS BET
         SP    0(4,R7),0(2,R8)     SUBTRACT BET FROM WINNINGS
         LA    R7,4(R7)            BUMP TO PLAYER HANDS
*                                  PLAYED
         AP    0(4,R7),=X'001F'    ADD ONE TO HANDS PLAYED
         AP    HPC,=X'001F'        ADD ONE TO HANDS PLAYED COMP
         AP    HWC,=X'001F'        ADD ONE TO HANDS WON COMPUTER
RETURN   LM    R4,R10,TEMP14       RESTORE GENERAL REGISTER 4-10
         BR    10                  RETURN TO MAIN PROGRAM VIA R10
P37      MVC   MSGBUF(37),=C'PLAYER   HAD THREE SEVENS    ,WON $  '
         B     PFCP                GO TO PFCP
PBJ      MVC   MSGBUF,MSGBUF-1     CLEAR I/O AREA
         MVC   MSGBUF(30),=C'PLAYER   GOT BLACKJACK WON $  '
         STC   R7,MSGBUF+7         STORE PLAYER NUMBER IN MSG
         OI    MSGBUF+7,X'F0'      CHANGE PLAYER NUMB TO A CHARACTER
         L     R8,TEMP15           SET R8 TO BEG
*                                  PLAYER REC
         LA    R8,8(R8)            BUMP TO PLAYER BET
         AP    0(2,R8),0(2,R8)     DOUBLE BET
         UNPK  MSGBUF+28(3),0(2,R8)  UNPACK PLAYERS BET'
         OI    MSGBUF+30,X'F0'     CHANGE LAST DIGIT OF BET TO
*                                  CHARACTER
         TPUT  MSGBUF,80           PRINT MESSAGE
         L     R8,TEMP15           SET R8 TO BEG
*                                  PLAYER REC
         LA    R8,8(R8)            BUMP TO PLAYER BET
         L     R7,TEMP15           SET R7 TO BEG
*                                  PLAYER REC
         AP    0(4,R7),0(2,R8)     ADD BET TO WINNINGS
         LA    R7,4(R7)            BUMP TO PLAYER HANDS
*                                  PLAYED
         AP    0(4,R7),=X'001F'    ADD ONE TO HANDS PLAYED
         LA    R7,73(R7)           BUMP TO HANDS WON
         AP    0(4,R7),=X'001F'    ADD ONE TO HANDS WON
         LA    R7,4(R7)            BUMP TO PLAYER BLACKJACKS
         AP    0(4,R7),=X'001F'    ADD ONE TO BLACK JACK PLAYER
         AP    HPC,=X'001F'        ADD ONE TO HANDS PLAYED COMPUTER
         B     RETURN              GO TO RETURN
PBB      MVC   MSGBUF,MSGBUF-1     CLEAR I/O AREA
         MVC   MSGBUF(24),=C'PLAYER   BUSTED LOST $  '
         STC   R7,MSGBUF+7         STORE PLAYER NUMBER IN MSG
         OI    MSGBUF+7,X'F0'      CHANGE PLAYER NUMB TO A CHARACTER
         L     R8,TEMP15           SET R8 TO BEG
*                                  PLAYER REC
         LA    R8,8(R8)            BUMP TO PLAYER BET
         UNPK  MSGBUF+22(3),0(2,R8)  UNPK PLAYER BET TO I/O
         OI    MSGBUF+24,X'F0'     MAKE LAST DIGIT OF BET A CHARACTR
         TPUT  MSGBUF,80           PRINT MESSAGE
         L     R7,TEMP15           SET R7 TO BEG
*                                  PLAYER REC
         L     R8,TEMP15           SET R8 TO BEG
*                                  PLAYER REC
         LA    R8,8(R8)            BUMP TO PLAYER BET
         SP    0(4,R7),0(2,R8)     SUB BET TO WINNINGS
         LA    R7,4(R7)            BUMP TO PLAYER HANDS
*                                  PLAYED
         AP    0(4,R7),=X'001F'    ADD ONE TO HANDS PLAYED
         AP    HWC,=X'001F'        ADD ONE TO HANDS WON COMPUTER
         AP    HPC,=X'001F'        ADD ONE TO HANDS PLAYED COMPUTER
         B     RETURN              GO TO RETURN
PFC      MVC   MSGBUF,MSGBUF-1     CLEAR I/O AREA
         MVC   MSGBUF(37),=C'PLAYER   HAD 5 CARDS UNDER 22,WON $  '
PFCP     STC   R7,MSGBUF+7         STORE PLAYER NUMBER IN MESSAGE
         OI    MSGBUF+7,X'F0'      CHANGE PLAYER NUMB TO A CHARACTER
         L     R8,TEMP15           SET R8 TO BEG
*                                  PLAYER REC
         LA    R8,8(R8)            BUMP TO PLAYER BET
         AP    0(2,R8),0(2,R8)     DOUBLE BET
         UNPK  MSGBUF+35(3),0(2,R8)  UNPACK PLAYERS BET TO I/O
         OI    MSGBUF+37,X'F0'     MAKE LAST DIGIT OF BET A CHARACTER
         TPUT  MSGBUF,80           PRINT MESSAGE
         L     R7,TEMP15           SET R7 TO BEG
*                                  PLAYER REC
         L     R8,TEMP15           SET R8 TO BEG
*                                  PLAYER REC
         LA    R8,8(R8)            BUMP TO PLAYER BET
         AP    0(4,R7),0(2,R8)     ADD BET TO WINNINGS
         LA    R7,4(R7)            BUMP TO PLAYER HANDS
*                                  PLAYED
         AP    0(4,R7),=X'001F'    ADD ONE TO HANDS PLAYED
         LA    R7,73(R7)           BUMP TO HANDS WON
         AP    0(4,R7),=X'001F'    ADD ONE TO HANDS WON
         AP    HPC,=X'001F'        ADD ONE TO HANDS PLAYED COMPUTER
         B     RETURN              GO TO RETURN
PW       MVC   MSGBUF,MSGBUF-1     CLEAR I/O AREA
         MVC   MSGBUF(17),=C'PLAYER   WINS $  '
         STC   R7,MSGBUF+7         STORE PLAYER NUMBER IN MSG
         OI    MSGBUF+7,X'F0'      CHANGE PLAYER NUMB TO A CHARACTER
         L     R8,TEMP15           SET R8 TO BEG
*                                  PLAYER REC
         LA    R8,8(R8)            BUMP TO PLAYER BET
         UNPK  MSGBUF+15(3),0(2,R8)  UNPACK PLAYERS BET
         OI    MSGBUF+17,X'F0'     MAKE LAST DIGIT OF BET A CHARACTER
         TPUT  MSGBUF,80           PRINT MESSAGE
         L     R7,TEMP15           SET R7 TO BEG
*                                  PLAYER REC
         L     R8,TEMP15           SET R8 TO BEG
*                                  PLAYER REC
         LA    R8,8(R8)            BUMP TO PLAYER BET
         AP    0(4,R7),0(2,R8)     ADD BET TO WINNINGS
         LA    R7,4(R7)            BUMP TO PLAYER HANDS
*                                  PLAYED
         AP    0(4,R7),=X'001F'    ADD ONE TO HANDS PLAYED
         LA    R7,73(R7)           BUMP TO HANDS WON
         AP    0(4,R7),=X'001F'    ADD ONE TO HANDS WON
         AP    HPC,=X'001F'        ADD ONE TO HANDS PLAYED COMPUTER
         B     RETURN              GO TO RETURN
*
*        THIS ROUTINE DEALS ONE CARD OUT
*
DEALCD   STM   R4,R10,TEMP14       SAVE ALL GENERAL PURPOSE R4-10
CONG2    CLC   CARDIN+2(2),=X'0138'  DOES CARD DECK INDEX EQ 312
         BNE   CONG1               NO GO TO CONG1
         BAL   R10,SHUFFLE         YES GO TO SHUFFLE CARDS
CONG1    LA    R4,DECK             SET R4 TO SHUFFLED
*                                  DECK
         A     R4,CARDIN           ADD INDEX TO POINTER IN R4
         MVC   TEMPCD(6),0(R4)     MOVE CARD TO TEMP LOCATION
         L     R4,CARDIN           SET R4 WITH INDEX FOR SHUFFLED
*                                  CARDS
         LA    R4,6(R4)            MODIFY INDEX FOR SHUFFLED CARDS
         ST    R4,CARDIN           STORE NEW INDEX
         CLC   TEMPCD(6),=C'      '  DOES TEMP CARD EQUAL BLANKS
         BE    CONG2               YES, GO TO CONG2
         LA    R4,CARDFILE         SET R4 TO CARDS
*                                  DEALT
         A     R4,CARDFI           ADD INDEX TO CARDFILE POINTER IN R4
         MVC   0(6,R4),TEMPCD      MOVE TEMP CARD TO CARD DEALT OUT
*                                  FILE
         L     R4,CARDFI           SET R4 WITH CARDFILE INDEX
         LA    R4,6(R4)            MODIFY INDEX TO CARDFILE
         ST    R4,CARDFI           STORE NEW INDEX
         LM    R4,R10,TEMP14       RESTORE GENERAL PURPOSE REGISTERS
         BR    10                  RETURN TO MAIN PROGRAM VIA R10
*
*        THIS ROUTINE SHUFFLES THE CARDS BY THE FOLLOWING METHOD
*        1. GENERATE 52 RANDOM NUMBERS
*        2. CREATE A SORTED FILE OF RANDOM NUMBERS
*        3. INPUT SORTED RANDOM NUMBER FILE,RANDOM NUMBER FILE
*        UNSORTED, AND THE SEQUENCED DECK OF CARDS TO OUTPUT THE
*        SHUFFLED DECK OF CARDS.
*        4. REMOVE CARDS FROM DECK THAT HAVE ALREADY BEEN DEALT
*
SHUFFLE  STM   R4,R9,TEMP4    SAVE GEN REGS 4-9
         OI    FLAG,PHASE2         INDICATE DECK SHUFFLED
*
*        GENERATE 52 RANDOM NUMBERS
*
REENTRY  LA    R4,52               SET R4 WITH 52 NUMBER OF RANDOM
*                                  NUMBERS
         LA    R6,0                SET ADDR MODIF TO ZERO FOR STORAGE
*                                  OF RAN NUMBERS
         L     R9,SEED             SET R9 WITH 2 DIGIT ODD HEX NUMBER
         M     R8,IM               MULT SEED BY CONSTANT IM GIVING
*                                  INPUT TO RAN
         N     R9,MASK3            FORCE LEAD BIT OF R9 EQ TO 0...POS
*                                  NUMBER
         ST    R9,SEED             STORE FIRST INPUT NUMB TO RAN NUM
*                                  GENERATOR
RNLOOP   L     R9,SEED             SET R9 WITH LAST RANDOM NUMB
*                                  GENERATED
         M     R8,IM               MULT LAST RAN NUM GENERATED BY
*                                  CONSTANT IM
         N     R9,MASK3            FORCE LEAD BIT TO 0.. POS NUMBER
         ST    R9,SEED             STORE NEW RANDOM NUMBER FOR NEXT
*                                  INPUT
         ST    R9,RANNUM(R6)       STORE NEW RAN NUM IN A LIST USING R
         ST    R9,SEQRAN(R6)       STORE NEW RAN NUM IN A LIST USING R
         LA    R6,4(R6)            ADD 4 TO R6    MODIFYING ADDRTO
*                                  STORE
         BCT   R4,RNLOOP           SUB 1 FROM RR4,IF UNEQ TO 0 GO TO
*
*        SORT RANDOM NUMBERS GENERATED
*        INPUT FILE RANNUM
*        OUTPUT FILE SEQRAN
*
         LA    R9,52               SET R9 WITH 52 NUMBER OF RAN
*                                  NUMBERS
         LA    R5,0                SET R5 WITH 0, FOR USE IN ADDR
*                                  MODIFICATION
LOOPJ    LR    R8,R9               SET R8 FROM R9
         S     R8,ONE              R8 STARTS WITH ONE LESS THAN R9
         BZ    CONSHUF             IF R8 EQ 0 ,ALL RAN NUM SORT,GO TO
*                                  CONSHUF
         LR    R7,R5               SET R7 FROM R5
         LA    R7,4(R7)            R7 MUST START 4 GREATER THAN R5
         L     R4,SEQRAN(R5)       SET R4 WITH RAN NUM USING R5
LOOPI    L     R6,SEQRAN(R7)       SET R6 WITH RAN NUM USING R7
         CR    R4,R6               COMPARE TWO RANDOM NUMBERS
         BH    CHGNUM              IF FIRST NUMB GREATER THAN SEC GO
*                                  TO CHGNUM
         BE    RESHUF              IF BOTH ARE EQUAL GO TO RESHUF
RET1     LA    R7,4(R7)            ADD 4 TO R7
         BCT   R8,LOOPI            SUB 1 FRM RR8,IF UNEQ TO 0 GO TO
*                                  LOOPI
         ST    R4,SEQRAN(R5)       SORE R4 USING R5 AS ADDR
         LA    R5,4(R5)            ADD 4 TO R5
         BCT   R9,LOOPJ            SUB 1 FRM RR9, IF UNEQ TO 0 GO TO
*                                  LOOPJ
*
*        CREATE SHUFFLED DECK OF CARDS
*        1. TAKE RANDOM NUMBER FROM UNSORTED LIST
*        2. FIND SAME RANDOM NUMBER IN SORTED FILE NOTING POSITION
*        3. FROM NOTED POSITION GET CARD FROM SEQUENCED CARDS
*        4. TAKE CARD FROM SEQUENCED FILE AND PUT IN SHUFFLED DECK
*
CONSHUF  LA    R4,52               SET R4 WITH 52 NUMBER OF CARDS
         LA    R5,RANNUM           SET R5 TO RAN NUM
*                                  UNSORTED
         LA    R9,DECK             SET R9 TO SHUFFLED
*                                  DECK
LOOPX2   LA    R7,52               SET R7 WITH 52
         LA    R6,SEQRAN           SET R6 TO RAN NUM
*                                  SORTED
         LA    R8,DECKSEQ          SET R8 TO SEQUENCED
*                                  CARDS
LOOPX1   CLC   0(4,R5),0(R6)       COMPARE RANDOM NUM SOR TO RAN NUM
         BE    REPLACE             IF BOTH NUMBERS ARE EQ GO TO REPLACE
         LA    R6,4(R6)            BUMP TO SORTED RANDOM
*                                  NUMBERS
         LA    R8,6(8)             BUMP TO SEQUENCED CARDS
*                                  FILE
         B     LOOPX1              GO TO LOOPX1
REPLACE  MVC   0(6,9),0(8)         TAKE CARD FROM SEQ CARD, MOVE TO
*                                  SHUFFLED CD
         LA    R5,4(R5)            BUMP TO UNSORTED RAN
*                                  NUMBERS
         LA    R9,6(R9)            BUMP TO SHUFFLED DECK OF
*                                  CARDS
         BCT   R4,LOOPX2           SUB 1 FRM RR4,IF UNEQ TO 0 GO TO
*                                  LOOPX2
         LA    R4,0                SET R4 WITH 0
         ST    R4,CARDIN           SET INDEX FOR SHUFFLED CARDS TO 0
*
*        REMOVE CARDS ALREADY DEALT OUT
*
         LA    R4,0                SET R4 WITH ZERO
         L     R5,CARDFI           SET R5 WITH INDEX TO CARDFILE
TESTLOOP CR    R4,R5               COMPARE RR4,R5
         BE    DONESHUF            IF THEY ARE EQUAL GO TO DONE
*                                  SHUFFLING
         LA    R6,CARDFILE(R4)     SET R6 WITH POINTR TO CARDFILE
         LA    R7,DECK             SET R7 TO SHUFFLED
*                                  DECK
LOOPDK   CLC   0(6,R6),0(R7)       COMPARE SHUFFLED DECK WITH CARD
*                                  DEALT
         BE    REMCARD             IF THEY ARE EQ GO TO REMOVE CARD
         LA    R7,6(R7)            IF UNEQ BUMP TO SHUFFLED
*                                  DECK
         B     LOOPDK              GO TO LOOPDK
REMCARD  MVC   0(6,7),=C'      '   REMOVE CRD FRM DECK BY INSERTING
*                                  BLNK
         LA    R4,6(R4)            MODIFY INDEX TO CARDFILE BY ADDING 6
         B     TESTLOOP            GO TO TESTLOOP
*
*        RESTORE REGISTERS AND RETURN TO MAIN PROGRAM
*
DONESHUF LM    R4,R9,TEMP4         RESTORE R4-9
         BR    10                  RETURN TO MAIN PROGRAM VIA R10
CHGNUM   ST    R4,SEQRAN(R7)       STORE R4 AT SEQRAN USIN R7 AS
         LR    R4,R6               SET R4 FROM R6
         B     RET1                GO TO RET1
*
*        THIS ROUTINE GETS A RANDOM SEED BY USING SYSTEM CLOCK
*
RESHUF   TIME  BIN                 GET TIME FROM SYSTEM CLK IN BINARY
*                                  SECONDS
         ST    0,SEED              STORE TIME AT LOCATION SEED
         L     R4,SEED             SET R4 WITH SEED
         N     R4,MASK1            REMOVE ALL DIGITS FROM SEED EXEPT
*                                  LAST 2
         ST    R4,SEED             STORE MODIFIED SEED  000000XX
         N     R4,MASK2            REMOVE ALL BITS FROM SEED EXCEPT
*                                  LAST ONE
         S     R4,MASK2            IS LAST BIT ON SIGNIFYING POS ODD
*                                  NUMBER
         BNZ   RESHUF              NO ,EVEN NUMBER EXISTS, GO TO RESHUF
         B     REENTRY             YES, ODD NUMBER, GO TO REENTRY
*
*        THIS ROUTINE ALLOWS PLAYER TO ASK FOR A SHUFFLE ANYTIME
*
CARDSHUF NI    FLAG,255-PHASE2     SET CARDS NOT SHUFFLED
GT       TIME  BIN                 GET TIME FROM SYSTEM CLOCK TO CALC
*                                  NEW SEED
         ST    0,SEED              STORE SYSTEM TIME IN HEX SECONDS
         L     R4,SEED             SET R4 WITH SYSTEM TIME
         N     R4,MASK1            SET ALL DIGITS TO 0 EXCEPT LAST 2
         ST    R4,SEED             STORE MODIFIED TIME AT SEED
         N     R4,MASK2            REMOVE ALL DIGITS EXCEPT LAST BIT
         S     R4,MASK2            IS BIT ON  INDICATING POS NUMBER
         BNZ   GT                  NO GO TO GT
         B     GETCODE             YES, GO TO GET NEW CODE
ERROR3   MVC   MSGBUF,MSGBUF-1     CLEAR I/O AREA
         MVC   MSGBUF(34),=C'NOT ENOUGH MONEY TO COVER YOUR BET'
*                                  I/O AREA
         TPUT  MSGBUF,80           PRINT ERROR MEXS 3
         B     BETLOOP             GO TO BETLOOP
BYPPLAY  LA    R7,10(R7)           BUMP TO HAND CODE
         MVI   0(7),X'01'          SET HAND CODE TO 01 'NO MONEY'
         LA    R7,75(R7)           BUMP TO NEXT PLAYER
         B     CHECKP              GO TO CHECKP
ENDBLKJK EQU   *                   TAG
         L     R13,SAVE+4          LOAD SAVE AREA ADDRESS
         LM    R14,R12,12(R13)     RESTORE REGISTERS
         BR    R14                 REUTRN
CODETAB  DC    C'                             '
         DC    C'                             '
         DC    C'REQUEST CODES ARE:           '
         DC    C'                             '
         DC    C' 0 -DISPLAY CODES            '
         DC    C' 1 -DISPLAY RULES            '
         DC    C' 2 -SET NUMBER OF PLAYERS    '
         DC    C' 3 -PLAYER STATUS            '
         DC    C' 4 -COMPUTER WINS/LOSSES     '
         DC    C' 5 -PLAY A HAND OF BLACKJACK '
         DC    C' 6 -SHUFFLE THE DECK         '
         DC    C' 7 -END (RETURN TO THE SYS)  '
CODETEND EQU   *                   END OF CODE TABLE
GAMRULES DC    C'WELCOME TO BLACKJACK                    '
         DC    C'EACH PLAYER BEGINS WITH 1000 DOLLARS.   '
         DC    C'ONCE HE LOSES IT HE IS OUT OF THE GAME. '
         DC    C'WAGERS MAY BE ANY TWO DIGIT AMOUNT.     '
         DC    C'PLAYERS CANNOT BET MORE THAN THEY HAVE. '
         DC    C'                                        '
         DC    C'    THE FOLLOWING ARE THE GAME RULES    '
         DC    C'                                        '
         DC    C'A)  BLACKJACK PAYS DOUBLE               '
         DC    C'B)  FIVE CARDS UNDER 22 WINS            '
         DC    C'C)  ACE COUNTS AS 1 OR 11               '
         DC    C'D)  3 SEVENS PAY DOUBLE                 '
         DC    C'E)  COMPUTER HITS AT 16 OR LESS         '
         DC    C'F)  PAIRS MAY BE SPLIT                  '
         DC    C' '
GAMEREND EQU   *                  END OF GAME RULES
MSGBUF   DC    CL80' '
MSG1     DC    C'     BLACKJACK    BY  COOL HAND LUKE    '
MSG2     DC    C'ENTER REQUEST CODE              '
MSG3     DC    C'INVALID REQUEST    '
MSG7     DC    C'PLAYER  , DO YOU WANT TO SPLIT YOUR HAND  Y OR N'
MSG8     DC    C'INVALID RESPONSE'
CARDIN   DS    F
TEMP     DS    F
TOTWIN   DS    F
TOTHP    DS    F
TOTHW    DS    F
TOTBJ    DS    F
SEED     DS    F
MASK3    DC    X'7FFFFFFF'
PARTAB   DC    F'11'
         DC    F'13'
ONE      DC    F'1'
FLAG     DC    X'00'               FLAG BYTE (DEFINITIONS FOLLOW)
PHASE1   EQU   X'01'               PHASE ONE INDICATOR
PHASE2   EQU   X'02'               PHASE TWO INDICATOR
MSG4     DC    C'HOW MANY PLAYERS ARE THERE?'
MSG5     DC    C'TYPE IN A ONE DIGIT NUMBER 1-4'
MSG6     DC    C'INVALID NUMBER OF PLAYERS'
VALUE    DC    X'001F'
         DC    X'002F'
         DC    X'003F'
         DC    X'004F'
         DC    X'005F'
         DC    X'006F'
         DC    X'007F'
         DC    X'008F'
         DC    X'009F'
         DC    X'010F'
         DC    X'010F'
         DC    X'010F'
         DC    X'010F'
SUMP     DS    CL2
SUMC     DS    CL2
CARDC    DS    CL2
HEAD1    DC    C'***** PLAYER RECORDS *****'
HEAD2    DC    C'PLAYER 1      PLAYER 2      PLAYER 3      PLAYER 4   '
         DC    C'   TOTALS  '
THOUSAND DC    X'0001000F'
ZEROF    DC    X'0000000F'
ZEROH    DC    X'000F'
PLAYCNT  DS    F
MASK1    DC    X'000000FF'
MASK2    DC    X'00000001'
CARDFI   DS    F
CARDFILE DS    CL180
CRC      DS    CL1
COMPSAVE DS    0CL68
HPC      DS    CL4
CCARD    DS    CL60
HWC      DS    CL4
PLAYERS  DS    0CL340
DOLLAR1  DS    CL4
HP1      DS    CL4
PB1      DS    CL2
HC1      DS    CL1
P1H1     DS    CL30
RCH1P1   DS    CL1
SH1P1    DS    CL2
P1H2     DS    CL30
RCH2P1   DS    CL1
SH2P1    DS    CL2
HW1      DS    CL4
BJ1      DS    CL4
DOLLAR2  DS    CL4
HP2      DS    CL4
PB2      DS    CL2
HC2      DS    CL1
P2H1     DS    CL30
RCH1P2   DS    CL1
SH1P2    DS    CL2
P2H2     DS    CL30
RCH2P2   DS    CL1
SH2P2    DS    CL2
HW2      DS    CL4
BJ2      DS    CL4
DOLLAR3  DS    CL4
HP3      DS    CL4
PB3      DS    CL2
HC3      DS    CL1
P3H1     DS    CL30
RCH1P3   DS    CL1
SH1P3    DS    CL2
P3H2     DS    CL30
RCH2P3   DS    CL1
SH2P3    DS    CL2
HW3      DS    CL4
BJ3      DS    CL4
DOLLAR4  DS    CL4
HP4      DS    CL4
PB4      DS    CL2
HC4      DS    CL1
P4H1     DS    CL30
RCH1P4   DS    CL1
SH1P4    DS    CL2
P4H2     DS    CL30
RCH2P4   DS    CL1
SH2P4    DS    CL2
HW4      DS    CL4
BJ4      DS    CL4
DECKSEQ  DC    C'ACE  S'
         DC    C'TWO  S'
         DC    C'THRE S'
         DC    C'FOUR S'
         DC    C'FIVE S'
         DC    C'SIX  S'
         DC    C'SEVN S'
         DC    C'EIGT S'
         DC    C'NINE S'
         DC    C'TEN  S'
         DC    C'JACK S'
         DC    C'QUEN S'
         DC    C'KING S'
         DC    C'ACE  H'
         DC    C'TWO  H'
         DC    C'THRE H'
         DC    C'FOUR H'
         DC    C'FIVE H'
         DC    C'SIX  H'
         DC    C'SEVN H'
         DC    C'EIGT H'
         DC    C'NINE H'
         DC    C'TEN  H'
         DC    C'JACK H'
         DC    C'QUEN H'
         DC    C'KING H'
         DC    C'ACE  C'
         DC    C'TWO  C'
         DC    C'THRE C'
         DC    C'FOUR C'
         DC    C'FIVE C'
         DC    C'SIX  C'
         DC    C'SEVN C'
         DC    C'EIGT C'
         DC    C'NINE C'
         DC    C'TEN  C'
         DC    C'JACK C'
         DC    C'QUEN C'
         DC    C'KING C'
         DC    C'ACE  D'
         DC    C'TWO  D'
         DC    C'THRE D'
         DC    C'FOUR D'
         DC    C'FIVE D'
         DC    C'SIX  D'
         DC    C'SEVN D'
         DC    C'EIGT D'
         DC    C'NINE D'
         DC    C'TEN  D'
         DC    C'JACK D'
         DC    C'QUEN D'
         DC    C'KING D'
DECK     DS    CL312
RANNUM   DS    52F
SEQRAN   DS    52F
TEMP4    DS    F
TEMP5    DS    F
TEMP6    DS    F
TEMP7    DS    F
TEMP8    DS    F
TEMP9    DS    F
TEMP14   DS    F
TEMP15   DS    F
TEMP16   DS    F
TEMP17   DS    F
TEMP18   DS    F
TEMP19   DS    F
TEMP20   DS    F
TEMPCD   DS    CL6
EIGHT    DC    F'8'
THREE    DC    F'3'
TEN      DC    F'10'
SIX      DC    F'6'
FF       DC    F'44'
ZERO     DC    F'0'
FIFTY    DC    F'50'
PCARDI   DS    F
TEMP24   DS    F
TEMP25   DS    F
TEMP26   DS    F
TEMP27   DS    F
TEMP28   DS    F
TEMP29   DS    F
TEMP30   DS    F
SAVE     DC    18F'-1'             REGISTER SAVE AREA
IM       DC    F'32771'
         END
