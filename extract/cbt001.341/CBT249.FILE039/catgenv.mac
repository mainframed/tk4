         TITLE 'CATGENV CATLG/UNCATLG CARD GENERATOR  SPS 07/17/78'
***********************************************************************
*
* NAME   : CSP300
*FUNCTION: TO READ THE OUTPUT OF AN IDCAMS LISTCAT AND PRODUCE
*          IEHPROGM CATLG AND/OR UNCATLG CONTROL CARDS
*          AND/OR AMS DELETE GDG/ALIAS CONTROL CARDS
*DATE    : 07/17/78
*PGMR    : S
*JCL     : //STEPNAME EXEC PGM=CSP300,
*
*          //  PARM='CATALOGNAME,LEVEL=XXXXX'
*
*          CATALOGNAME - THE NAME OF THE REQUESTED CATALOG. REQUIRED!
*
*          LEVEL       - THE HIGH LEVEL QUALIFIER FOR THE GROUP OF
*                        DATASETS FOR WHICH CATALOG/UNCATALOG CARDS ARE
*                        TO BE PUNCHED (OPTIONAL). IF NOT SPECIFIED,
*                        ALL NON-VSAM ENTRIES IN THE NAMED CATALOG WILL
*                        BE PROCESSED.
*         //SYSUT1   DD SPACE=(121,(20000,1000)),UNIT=DISK
*         //SYSPUNCH DD SYSOUT=B OR TO TAPE OR DISK.
*         //CATLG    DD DSN=CATLG.CONTROL.CARDS,DISP=OLD/NEW
*         //UNCATLG  DD DSN=UNCATLG.CONTROL.CARDS,DISP=OLD/NEW
*         //AMSGDG   DD DSN=AMSGDG.CONTROL.CARDS,DISP=OLD/NEW
*
*                    NOTE: THE PRESENCE OF ANY OF THE ABOVE DDNAMES
*                          CAUSES THE GENERATION OF THE NAMED TYPE
*                          OF CONTROL CARDS (CATLG/UNCATLG = IEHPROGM)
*                                           (AMSGDG = IDCAMS)
*
***********************************************************************
         EJECT
         PRINT  NOGEN
***********************************************************************
*
*        PROCESS USER SPECIFIED PARM INFORMATION
*
***********************************************************************
CATGENV  $PROLOG
         L     R3,0(R1)         GET PARM
         LH    R4,0(R3)         GET PARM SIZE
         LTR   R4,R4            ANY PARM?
         BNP   ERROR1           NO, INVALID REQUEST
         LA    R3,2(R3)         INCR PAST BYTE COUNT
         MVC   CATNAME(44),=44C' ' CLEAR CAT NAME
         LA    R2,CATNAME       GET BEGINNING OF CAT NAME
CATLOOP  EQU   *
         CLI   0(R3),C','       END OF PARM?
         BE    NEXTPARM         YES, PROCESS NEXT PARM
         MVC   0(1,R2),0(R3)    MOVE IN CAT NAME
         LA    R2,1(R2)         INCR CAT NAME FOR AMS
         LA    R3,1(R3)         INCR CAT NAME IN PARM
         BCT   R4,CATLOOP       CONTINUE
         B     ENDOPARM         ONLY CAT NAME GIVEN, PROCESS ALL
NEXTPARM EQU   *
         CLC   0(7,R3),=C',LEVEL=' LEVEL(INDEX) SPECIFIED?
         BE    CHKINDEX          YES
         ABEND 108,DUMP          INVALID PARM
CHKINDEX EQU   *
         SH    R4,=H'7'          DECREMENT PARM COUNT FOR ",LEVEL="
         BNP   ERROR1            INVALID LENGTH OF DSN QUALIFIER
         CH    R4,=H'44'         MAX LENGTH OF DSN
         BH    ERROR1            INVALID QUALIFIER LENGTH
         LA    R5,INDEX          GET BEGINNING OF DSN
         LA    R3,7(R3)          INCR PAST UNCAT
LEVELOOP EQU   *
         MVC   0(1,R5),0(R3)    MOVE IN INDEX NAME
         LA    R5,1(R5)         INCR AMS LEVEL
         LA    R3,1(R3)         INCR PARM LEVEL
         BCT   R4,LEVELOOP      CONTINUE
         MVI   CONT,C'+'        SIGNAL CONTINUATION CARD
ENDOPARM EQU   *
         EJECT
***********************************************************************
*
*        LINK TO IDCAMS AND PRODUCE LISTING OF NAMED CATALOG
*
***********************************************************************
         OPEN  (CATLG,(OUTPUT),UNCATLG,(OUTPUT),AMSGDG,(OUTPUT))
         TM    CATLG+48,X'10'   WAS 'CATLG' PROVIDED?
         BO    DOLINK           YES, THEN SOMETHING TO DO
         TM    AMSGDG+48,X'10'  WAS 'AMSGDG' PROVIDED?
         BO    DOLINK           YES, THEN SOMETHING TO DO
         TM    UNCATLG+48,X'10' WAS 'UNCATLG' PROVIDED?
         BZ    ERROR2           NO, THEN NOTHING TO DO
DOLINK   LINK EP=IDCAMS,PARAM=(OPTION1,DDNAME,PGNO,IOLIST),VL=1
         LTR   R15,R15          OKAY?
         BZ    OKAMS            OKAY!
         ST    R15,RETCODE      STORE RETURN CODE
         WTO   'CSP30001 IDCAMS NONZERO RET CODE.',ROUTCDE=(11)
         L     R15,RETCODE      RELOAD RETURN CODE
         ABEND (15),DUMP        OOPS
ERROR1   WTO   'CSP30002 INVALID PARAMETER GIVEN',ROUTCDE=(11)
         LA    R15,4            SET RETURN CODE
         ABEND (15),DUMP        OOPS
ERROR2   WTO   'CSP30003 NO CATLG/UNCATLG/AMSGDG DD CARD PROVIDED',    X
               ROUTCDE=(11)
         LA    R15,4            SET RETURN CODE
         ABEND (15),DUMP        OOPS
***********************************************************************
*
*        OPEN AND READ THE JUST PRODUCED CATALOG LISTING
*
***********************************************************************
OKAMS    EQU   *
         OPEN  (SYSUT1,(INPUT)) OPEN AMS LISTING FILE
         TM    SYSUT1+48,X'10'  OPEN OKAY?
         BO    GETNEXT          OK
         ABEND 120,DUMP         NOPE
GETNEXT  EQU   *
         MVI   IOAPUNCH,C' '    CLEAR IOA AREA
         MVC   IOAPUNCH+1(L'IOAPUNCH-1),IOAPUNCH *
GETLOOP  MVI   IOA,C' '         CLEAR I/O AREA
         MVC   IOA+1(L'IOA-1),IOA *
         GET   SYSUT1,IOA       GET IDCAMS OUTPUT
         CLC   IOA+5(7),=C'NONVSAM' NONVSAM ENTRY?
         BE    DONVSAM          YUP, PROCESS NON-VSAM ENTRIES
         CLC   IOA+8(7),=C'NONVSAM' NONVSAM GDG ENTRY?
         BE    DONVSAM          YUP, PROCESS NON-VSAM ENTRIES
         CLC   IOA+5(8),=C'GDG BASE' GDG BASE ENTRY?
         BNE   GETLOOP          NOPE, LOOP TILL FOUND
***********************************************************************
*
*        BUILD THE AMS GDG-BASE RECORD DELETE CONTROL CARD
*              NOTE: THIS FILE MAY BE USED TO DELETE ALL GDG BASE
*                    RECORDS FROM A VSAM CATALOG 'AFTER' FIRST USING
*                    THE 'UNCATLG' DATA TO UNCATALOG THE OBJECTS.
*
***********************************************************************
         TM    AMSGDG+48,X'10'  SOULD WE PUNCH AMS CONTROL CARDS?
         BZ    SKIPDLTX         NO, BYPASS DELETE GDG
         MVC   IOAPUNCH+1(3),=C'DEL' BUILD THE DEL CONTROL CARD
         LA    R2,IOAPUNCH+16   GET OUTPUT AREA FOR GDG NAME
         LA    R3,IOA+21        GET INPUT I/O AREA
GDGLOOP1 CLI   0(R3),C' '       END OF GDG INDEX?
         BE    GDG2             YES
         MVC   0(1,R2),0(R3)    MOVE IN DSN
         LA    R2,1(R2)         INCR OUTPUT AREA
         LA    R3,1(R3)         INCR INPUT AREA
         B     GDGLOOP1         GO AGAIN
GDG2     MVC   0(3,R2),=C'  +'  SIGNAL CONTINUATION
         PUT   AMSGDG,IOAPUNCH  PUNCH DEL CONTROL CARD
         MVI   IOAPUNCH,C' '    CLEAR IOA AREA
         MVC   IOAPUNCH+1(L'IOAPUNCH-1),IOAPUNCH *
         MVC   IOAPUNCH+15(49),CATNAME-4 ADD THE CATALOG NAME
         PUT   AMSGDG,IOAPUNCH  PUNCH CAT CONTROL CARD
***********************************************************************
*
*        BUILD THE BLDG CONTROL CARD FOR IEHPROGM
*
***********************************************************************
SKIPDLTX TM    CATLG+48,X'10'   SOULD WE PUNCH CATLG CARDS?
         BZ    GETNEXT          NO, BYPASS CATLG
         MVI   IOAPUNCH,C' '    CLEAR IOA AREA
         MVC   IOAPUNCH+1(L'IOAPUNCH-1),IOAPUNCH *
         MVC   IOAPUNCH+1(7),=C'BLDG   ' CREATE BLDG CARD
         MVC   IOAPUNCH+9(7),=C' INDEX=' ADD THE 'INDEX' QUALIFIER
         LA    R2,IOAPUNCH+16   GET OUTPUT AREA FOR DSN
         LA    R3,IOA+21        GET INPUT I/O AREA
BLDGLOOP CLI   0(R3),C' '       END OF DSN?
         BE    BLDGGEN          YES
         MVC   0(1,R2),0(R3)    MOVE IN DSN
         LA    R2,1(R2)         INCR OUTPUT AREA
         LA    R3,1(R3)         INCR INPUT AREA
         B     BLDGLOOP         GO AGAIN
BLDGGEN  EQU   *
         MVI   0(R2),C','       MOVE IN COMMA FOLLOWING INDEX
         MVI   IOAPUNCH+71,C'C' INSERT CONTINUATION COLUMN
         PUT   CATLG,IOAPUNCH   PUNCH BLDG CARDS
***********************************************************************
*
*        BUILD THE SECOND BLDG CONTROL CARD
*
***********************************************************************
GDG3     EQU   *
         GET   SYSUT1,IOA       GET AMS LISTING
         CLC   IOA+12(5),=C'LIMIT' CORRECT RECORD?
         BNE   GDG3             NO, RETRY
         MVI   IOAPUNCH,C' '    CLEAR IOA AREA
         MVC   IOAPUNCH+1(L'IOAPUNCH-1),IOAPUNCH *
         LA    R15,IOAPUNCH+15  POINT TO BUFFER AREA
*              DELETE,EMPTY,ENTRIES=XXX             <==== SYNTAX
         CLC   IOA+41(7),=C'SCRATCH' WAS 'SCRATCH' SPECIFIED?
         BNE   NOSCR            NO, BYPASS DELETE OPTION
         MVC   0(7,R15),=C'DELETE,' ADD DELETE OPTION
         LA    R15,7(R15)       BUMP WORKING POINTER
NOSCR    CLC   IOA+58(5),=C'EMPTY' WAS 'EMPTY' SPECIFIED?
         BNE   NOEMPT           NO, BYPASS EMPTY OPTION
         MVC   0(6,R15),=C'EMPTY,' ADD EMPTY OPTION
         LA    R15,6(R15)       BUMP WORKING POINTER
NOEMPT   MVC   0(8,R15),=C'ENTRIES=' ADD KEYWORD
         LA    R15,8(R15)       BUMP WORKING POINTER
         LA    R14,IOA+33       ADDRESS OF NUMBER OF ENTRIES
         LA    R1,3             LOOP CONTROL
GDGLOOP2 CLI   0(R14),C'-'      NULL ENTRY?
         BE    GDGUPDT          YES, BUMP POINTER
         MVC   0(1,R15),0(R14)  MOVE CHARACTER
         LA    R15,1(R15)       BUMP MOVE TO POINTER
GDGUPDT  LA    R14,1(R14)       BUMP MOVE FROM POINTER
         BCT   R1,GDGLOOP2      CHECK NEXT CHARACTER
         PUT   CATLG,IOAPUNCH   WRITE SECOND CARD FOR BLDG
         B     GETNEXT          GET NEXT RECORD
***********************************************************************
*
*        BUILD THE UNCATALOG CONTROL CARD
*
***********************************************************************
DONVSAM  MVC   IOAPUNCH+1(7),=C'UNCATLG'
         MVC   IOAPUNCH+9(7),=C'DSNAME='
         LA    R2,IOAPUNCH+16   GET OUTPUT AREA FOR DSN
         LA    R3,IOA+21        GET INPUT I/O AREA
PUTLOOP1 CLI   0(R3),C' '       END OF DSN?
         BE    PUT2             YES
         MVC   0(1,R2),0(R3)    MOVE IN DSN
         LA    R2,1(R2)         INCR OUTPUT AREA
         LA    R3,1(R3)         INCR INPUT AREA
         B     PUTLOOP1         GO AGAIN
PUT2     EQU   *
         TM    UNCATLG+48,X'10' SOULD WE PUNCH UNCATLG CARDS?
         BZ    SKIPIT           NO, BYPASS UNCATLG
         PUT   UNCATLG,IOAPUNCH PUNCH UNCATLG CARDS
***********************************************************************
*
*        CONVERT THE UNCATLG CONTROL CARD TO A CATLG CARD
*
***********************************************************************
SKIPIT   TM    CATLG+48,X'10'   SOULD WE PUNCH CATLG CARDS?
         BZ    GETNEXT          NO, BYPASS CATLG
         MVC   IOAPUNCH+1(7),=C'CATLG  ' CONVERT TO CATLG CARDS
         MVI   0(R2),C','       MOVE IN COMMA
         MVI   IOAPUNCH+71,C'C' INSERT CONTINUATION COLUMN
         PUT   CATLG,IOAPUNCH   PUNCH CATLG CARDS
***********************************************************************
*
*        BUILD THE SECOND CATLG CONTROL CARD
*
***********************************************************************
PUT3     EQU   *
         GET   SYSUT1,IOA       GET AMS LISTING
         CLC   IOA+41(7),=C'DEVTYPE' CORRECT RECORD
         BNE   PUT3             NO, RETRY
PUT4     EQU   *
         MVI   IOAPUNCH,C' '    CLEAR IOA AREA
         MVC   IOAPUNCH+1(L'IOAPUNCH-1),IOAPUNCH *
*              IOA + 56 57 58 59 60 61 62 63
*                  = 3  2  0  0  8  0  0  3   (TAPE)
         CLC   IOA+60(2),=C'80' DEVICE TYPE TAPE?
         BNE   DODISK           NO, CHECK FOR DISK
         CLI   IOA+57,C'4'      1600 BPI?
         BE    TAPE1600         YES, CONTINUE
TAPE6250 MVC   IOAPUNCH+15(11),=C'VOL=3400-5=' SPECIFY TAPE
         B     TAPE             CONTINUE
TAPE1600 MVC   IOAPUNCH+15(11),=C'VOL=3400-3=' SPECIFY TAPE
TAPE     MVI   IOAPUNCH+26,C'(' MOVE PAREN FOR VOL INFO
         LA    R4,IOAPUNCH+27   GET ADDRESS OF VOLSER IN REC'D
NEXTTVOL MVC   0(6,R4),IOA+30   MOVE IN VOLUME SERIAL NUMBER
         MVI   6(R4),C','       MOVE IN COMMA
         MVC   7(2,R4),IOA+92   MOVE FILE SEQUENCE NUMBER
         CLI   7(R4),C'-'       TENS DIGIT A DASH?
         BNE   SKIPDASH         NO, LEAVE IT ALONE
         MVI   7(R4),C'0'       YES, MAKE IT VALID
SKIPDASH MVI   9(R4),C')'       END OF VOLUME INFO
         MVI   IOA,C' '         CLEAR I/O AREA
         MVC   IOA+1(L'IOA-1),IOA *
         GET   SYSUT1,IOA       GET THE NEXT RECORD
         CLC   IOA+41(7),=C'DEVTYPE' MULTI-VOLUME DATASET?
         BNE   PUT5             NO, ALL DONE WITH THIS RECORD
         MVI   9(R4),C','       REMOVE RIGHT PAREN FOR CONTINUATION
         MVI   IOAPUNCH+71,C'C' FLAG CONTINUATION
         PUT   CATLG,IOAPUNCH   WRITE SECOND (CONTINUED) RECORD
         MVI   IOAPUNCH,C' '    CLEAR IOA AREA
         MVC   IOAPUNCH+1(L'IOAPUNCH-1),IOAPUNCH *
         LA    R4,IOAPUNCH+15   ADDRESS FOR NEXT VOLSER
         B     NEXTTVOL         PROCESS NEXT VOL SER
*              IOA + 56 57 58 59 60 61 62 63
*                  = 3  0  5  0  2  0  0  X   (DISK)
DODISK   CLC   IOA+60(2),=C'20' DEVICE TYPE DISK?
         BNE   DONTKNOW         NO, SORRY!
         CLI   IOA+63,C'6'      2305 MOD-1?
         BNE   CHKDISK2         NO, CHECK FOR MOD 2
DISK2305 MVC   IOAPUNCH+15(11),=C'VOL=2305-1=' SPECIFY DRUM-1
         B     DISK1            CONTINUE
CHKDISK2 CLI   IOA+63,C'7'      2305 MOD-2?
         BNE   CHKDISK3         NO, CHECK NEXT
         MVC   IOAPUNCH+15(11),=C'VOL=2305-2=' SPECIFY DRUM-2
         B     DISK1            CONTINUE
CHKDISK3 CLI   IOA+63,C'D'      3330-1?
         BNE   CHKDISK4         NO, CHECK NEXT
SET3331  MVC   IOAPUNCH+15(11),=C'VOL=3330-1=' SPECIFY 3330-1
DISK1    MVC   IOAPUNCH+26(6),IOA+30 MOVE IN VOLUME SERIAL
         B     PUT5             CONTINUE
CHKDISK4 CLI   IOA+63,C'9'      3330?
         BNE   CHKDISK5         NO, CHECK NEXT
         MVC   IOAPUNCH+15(9),=C'VOL=3330=' SPECIFY 3330
         B     DISK2            CONTINUE
CHKDISK5 CLI   IOA+63,C'A'      3340?
         BNE   CHKDISK6         NO, CHECK NEXT
         MVC   IOAPUNCH+15(9),=C'VOL=3340=' SPECIFY 3340
         B     DISK2            CONTINUE
CHKDISK6 CLI   IOA+63,C'8'      2314?
         BNE   CHKDISK7         NO, CHECK NEXT
         MVC   IOAPUNCH+15(9),=C'VOL=2314=' SPECIFY 2314
         B     DISK2            CONTINUE
CHKDISK7 CLI   IOA+63,C'B'      3350?
         BNE   DONTKNOW         NO, SORRY!
SET3350  MVC   IOAPUNCH+15(9),=C'VOL=3350=' SPECIFY 3350
DISK2    MVC   IOAPUNCH+24(6),IOA+30 MOVE IN VOLUME SERIAL
         B     PUT5             CONTINUE
DONTKNOW CLI   IOA+30,C'T'      IS THIS THE TSO PACK?
         BNE   CHK3331          NO, TRY 3330-1
         MVC   IOAPUNCH+15(11),=C'VOL=3330-1=' SPECIFY 3330-1
         MVC   IOAPUNCH+26(6),IOA+30 MOVE IN VOLUME SERIAL
         B     PUT5             CONTINUE
CHK3331  CLI   IOA+33,C'3'      IS THIS A 3330-1 VOLID?
         BE    SET3331          YES, ASSUME SAME
         CLI   IOA+33,C'5'      IS THIS A 3350 VOLID?
         BE    SET3350          YES, ASSUME SAME
SETDA    MVC   IOAPUNCH+15(10),=C'VOL=SYSDA=' ASSUME DISK
         MVC   IOAPUNCH+25(6),IOA+30 MOVE IN VOLUME SERIAL NUMBER
PUT5     PUT   CATLG,IOAPUNCH   WRITE SECOND CARD FOR CATLG
         B     GETNEXT          GET NEXT RECORD
         EJECT
***********************************************************************
*
*        END OF FILE, CLOSE ANY OPEN DCB'S AND EXIT
*
***********************************************************************
EOD      EQU   *
         CLOSE (SYSUT1)         CLOSE INPUT FILE
         TM    CATLG+48,X'10'   CATLG OPEN?
         BZ    SKIPCLS1         NO, SKIP CLOSE THEN
         CLOSE (CATLG)          CLOSE OUTPUT FILE
SKIPCLS1 TM    AMSGDG+48,X'10'  AMSGDG OPEN?
         BZ    SKIPCLS2         NO, SKIP CLOSE THEN
         CLOSE (AMSGDG)         CLOSE OUTPUT FILE
SKIPCLS2 TM    UNCATLG+48,X'10' UNCATLG OPEN?
         BZ    EXIT             NO, SKIP CLOSE THEN
         CLOSE (UNCATLG)        CLOSE OUTPUT FILE
         SR    R15,R15          CLEAR RETCODE
EXIT     $EPILOG
         EJECT
***********************************************************************
*
*        AMS INTERFACE ROUTINE TO PROVIDE THE SYSIN CARD(S)
*
***********************************************************************
SYSIN    SAVE  (14,12)          SAVE IDCAMS REGS
         PUSH  USING            PRESERVE PREVIOUS BASE REG
         BALR  R12,0            LOAD BASE FOR SUBROUTINE
         USING *,R12            DEFINE BASE
         LM    R2,R4,0(R1)      LOAD PARMS FROM IDCAMS
*
* R2=USER DATA
* R3=IOFLAGS
* R4=IOINFO
* DEFINITIONS OF THESE FIELDS MAY BE FOUND IN THE AMS MANUAL
*
         CLI   0(R3),X'00'      OPEN CALL?
         BE    SYSINOPN         YES
         CLI   0(R3),X'04'      CLOSE CALL?
         BE    SYSINCLS         YES
         CLI   0(R3),X'08'      GET CALL?
         BE     SYSINGT         YES
         ABEND  40,DUMP
*
*        IDCAMS OPEN SYSIN ROUTINE
*
SYSINOPN EQU   *
         OI    SWITCH,X'80'     TURN ON OPEN SWITCH
*
*        IDCAMS SYSIN ROUTINE EXIT
*
RETURN   LM    R14,R12,12(R13)  LOAD REGS
         SR    R15,R15          CLEAR REGS
         BR    R14              RETURN
SWITCH   DC    X'00'            STATUS SWITCH
         DS    0H               ALIGN
*
*        IDCAMS SYSIN CLOSE ROUTINE
*
SYSINCLS EQU   *
         TM    SWITCH,X'80'     ALREADY OPEN?
         BO    CLOSE1           YES
ABND2    ABEND 24,DUMP
CLOSE1   EQU   *
         NI    SWITCH,X'FF'-X'80' RESET OPEN SWITCH
         B     RETURN           RETURN
         EJECT
*
*        IDCAMS SYSIN ACCESS METHOD GET ROUTINE
*
SYSINGT  EQU   *
         TM    SWITCH,X'80'     IS SYSIN OPEN ALREADY (LOGICALLY)?
         BZ    ABND2            NOPE
         TM    SWITCH,X'20'     SECOND GET COMPLETE?
         BO    EOF1             YES, SIGNAL END OF FILE
         TM    SWITCH,X'40'     FIRST GET COMPLETE?
         BZ    FIRSTCD          NO, PROVIDE FIRST CARD
         OI    SWITCH,X'20'     IND SECOND CARD COMPLETE
         CLI   CONT,C' '        WAS FIRST CARD CONTINUED?
         BE    EOF1             NO, SIGNAL END OF FILE
         LA    R5,CARD2         ADDRESS OF CARD 2
         B     NEXTCD           BRANCH AROUND 1ST CD
FIRSTCD  OI    SWITCH,X'40'     TURN ON GET SWITCH
         LA    R5,CARD1         ADDRESS OF CARD 1
NEXTCD   ST    R5,0(R4)         STORE ADDRESS
         MVC   4(4,R4),=F'80'   STORE LENGTH
         B      RETURN
*
*        SIGNAL END OF FILE FOR SYSIN
*
EOF1     EQU   *
         LM    R14,R12,12(R13)  RELOAD REGS
         LA    R15,4            SHOW EOF
         BR    R14              RETURN
         DROP  R12
         POP   USING            RESTORE PREVIOUS BASE REG
         EJECT
***********************************************************************
*
*        OPEN EXITS FOR THE CATLG AND UNCATLG DCB'S
*
***********************************************************************
CATEX    CLC   CATLG+62(2),=H'0' BLKSIZE SPECIFIED?
         BNER  R14              YES, RETURN
         MVC   CATLG+62(2),=H'6160' NO, PROVIDE DEFAULT
         BR    R14              RETURN TO OPEN
UNCATEX  CLC   UNCATLG+62(2),=H'0' BLKSIZE SPECIFIED?
         BNER  R14              YES, RETURN
         MVC   UNCATLG+62(2),=H'6160' NO, PROVIDE DEFAULT
         BR    R14              RETURN TO OPEN
AMSGDGEX CLC   AMSGDG+62(2),=H'0' BLKSIZE SPECIFIED?
         BNER  R14              YES, RETURN
         MVC   AMSGDG+62(2),=H'6160' NO, PROVIDE DEFAULT
         BR    R14              RETURN TO OPEN
         EJECT
***********************************************************************
*
*        CONSTANTS AND WORK AREAS
*
***********************************************************************
CLC      CLC   INDEX(0),IOA+21
         LTORG
OPTION1  DC    H'0'
DDNAME   DC    H'48'
         DC    32X'00'
         DC    XL8'0'
         DC    CL8'SYSUT1'      ALTERNATE SYSPRINT DD
PGNO     DC    H'0'
IOLIST   DC    F'1'
         DC    A(DDSYSIN)
         DC    A(SYSIN)
*        FIRST (OR ONLY) IDCAMS CONTROL CARD
CARD1    DC    C' LISTC ALL GDG NVSAM CAT('
CATNAME  DC    CL44' '
         DC    C')'
CONT     DC    CL80' '
*        SECOND IDCAMS CONTROL CARD (ONLY IF LEVEL SPECIFIED)
CARD2    DC    C' LEVEL('
INDEX    DC    CL44' '
PAREN    DC    CL80')'          FILLER
DDSYSIN  DC    CL10'DDSYSIN'
SYSUT1   DCB   DDNAME=SYSUT1,DSORG=PS,EODAD=EOD,MACRF=(GM),            X
               LRECL=144,BLKSIZE=5760
IOA      DS    CL144
CATLG    DCB   DDNAME=CATLG,DSORG=PS,MACRF=(PM),LRECL=80,EXLST=EXCAT
AMSGDG   DCB   DDNAME=AMSGDG,DSORG=PS,MACRF=(PM),LRECL=80,             X
               EXLST=EXAMSGDG
UNCATLG  DCB   DDNAME=UNCATLG,DSORG=PS,MACRF=(PM),LRECL=80,            X
               EXLST=EXUNCAT
IOAPUNCH DS    CL80
RETCODE  DS    F
EXCAT    DC    X'85',AL3(CATEX)
EXAMSGDG DC    X'85',AL3(AMSGDGEX)
EXUNCAT  DC    X'85',AL3(UNCATEX)
         END
