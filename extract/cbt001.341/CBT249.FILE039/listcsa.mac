***********************************************************************
*
*        THIS TSO COMMAND WILL DISPLAY THE AVAILABLE CSA
*        (COMMON STORAGE/SERVICE AREA) IN AN MVS SYSTEM.
*        ACTUAL SIZE IN BYTES, ADDRESS, AND SIZE IN 'K' BYTES
*        ARE EITHER WRITTEN TO SYSPRINT OR DISPLAYED TO A TSO USER.
*
*        IF NO OPERAND IS SPECIFIED, THEN ONLY THE SUMMARY
*        INFORMATION IS DISPLAYED.  IF THE OPTION 'ALL' IS
*        SPECIFIED THEN EACH UNIQUE SPQE/DQE AREA IS DISPLAYED
*        BY KEY.
*
*        THIS ROUTINE MAY BE RUN AS A BATCH PROBLEM PROGRAM
*        IN WHICH CASE, THE OUTPUT WILL BE LISTED ON 'SYSPRINT'
*        INSTEAD OF THE TERMINAL.
*
*        IF RUN AS A BATCH JOB, INSURE A HIGH DISPATCHING PRIORITY,
*        OR 0C4'S MAY OCCUR DURING ANALYSIS.  TO STOP, ISSUE AN
*        OPERATOR 'STOP' COMMAND (P).
*
*
*        REGISTERS:
*          0  = WORK
*          1  = WORK
*          2  = WORK
*          3  = WORK
*          4  = WORK
*          5  = WORK
*          6  = KEY / INDEX TO ACCUMULATORS
*          7  = DQE POINTER
*          8  = SPQE POINTER
*          9  = FBQE END POINTER (LAST)
*         10  = FBQE CHAIN POINTER (ACTIVE)
*         11  = FREE AREA ACCUMULATOR
*         12  = BASE REG
*         13  = SYSTEM SAVE AREA
*         14  = SYSTEM RETURN ADDR
*         15  = WORK / RETCODE
*
*
***********************************************************************
LISTCSA  $PROLOG
         LR    R11,R1         SAVE CPPL ADDRESS (OR PARM POINTER)
         L     R1,16          CVT ADDRESS
         L     R1,0(R1)       OLD/NEW POINTERS
         L     R1,12(R1)      MY ASCB ADDRESS
         L     R1,60(R1)      ADDRESS OF TSB
         LTR   R1,R1          ANY TSB?
         BNZ   TSOUSER        YES, MUST BE TIME SHARING USER
         OI    FLAG,BATCH     INDICATE BATCH USER
         LA    R1,BLANKS      ADDRESS OF BLANK LINE
         BAL   R14,PUT        OPEN FILE AND WRITE BLANK LINE
         L     R1,0(R11)      GET PARM ADDRESS
         LH    R2,0(R1)       GET PARM SIZE
         LTR   R2,R2          ANY PARM?
         BZ    DEFAULT        NO, DEFAULT
         CH    R2,=H'3'       VALID SIZE
         BL    ERROR          NO, ERROR MESSAGE
         CH    R2,=H'8'       VALID SIZE
         BH    ERROR          NO, ERROR MESSAGE
         CH    R2,=H'3'       COULD IT BE 'ALL'?
         BNE   CHK4           NO, CHECK FOR LOOP
         CLC   2(3,R1),=C'ALL' ALL REQUESTED?
         BNE   ERROR          NO, ERROR
         OI    FLAG,ALL       SET OPTION
         B     DEFAULT        CONTINUE
CHK4     CH    R2,=H'4'       COULD IT BE 'LOOP'?
         BNE   CHK8           NO, CHECK FOR BOTH
         CLC   2(4,R1),=C'LOOP' LOOP REQUESTED?
         BNE   CHK8           NO, CHECK NEXT PARM
         OI    FLAG,LOOP      SET OPTION
         B     DEFAULT        CONTINUE
CHK8     CH    R2,=H'8'       COULD IT BE BOTH?
         BNE   ERROR          NO, ERROR
         CLC   2(8,R1),=C'LOOP,ALL' BOTH REQUESTED?
         BE    SETBOTH        YES, SET BOTH OPTIONS
         CLC   2(8,R1),=C'ALL,LOOP' BOTH REQUESTED?
         BNE   ERROR          NO, ERROR
SETBOTH  OI    FLAG,LOOP+ALL  SET OPTION
         B     DEFAULT        CONTINUE
ERROR    LA    R1,ERRORMSG    SET DATA POINTER
         LA    R15,L'ERRORMSG SET LENGTH
         BAL   R14,PUT        WRITE OUT RECORD
         LA    R15,16         SET RETCODE
         B     EXIT           RETURN
         USING CPPL,R11       CPPL ADDRESSABILITY
TSOUSER  MVC   PPLUPT,CPPLUPT MOVE USER PROFILE TABLE
         MVC   PPLECT,CPPLECT MOVE ENVIRONMENT CONTROL TAB
         MVC   PPLCBUF,CPPLCBUF MOVE COMMAND BUF POINTER
         DROP  R11            DROP ADDRESSABILITY
         LA    R1,PPLUPT      ADDRESS OF PARSE PARM LIST
         LINK  EP=IKJPARS     CALL TSO COMMAND PARSE
         L     R11,ANSWER     GET POINTER TO PARSE ANSWER
         USING IKJPARMD,R11   GAIN ADDRESSABILITY TO ANSWER
         OC    OPT(2),OPT     WAS 'ALL' REQUESTED?
         BZ    NORM           NO, SKIP MESSAGE
         OI    FLAG,ALL       SIGNAL RETCODE ONLY
NORM     IKJRLSA ANSWER       FREE PARSE STORAGE
         DROP  R11            DROP ADDRESSABILITY
         L     R8,16          GET CVT POINTER
DEFAULT  TM    FLAG,BATCH+LOOP IS THIS A BATCH LOOP RUN?
         BZ    AGAIN          NO, NO OPERATOR COMMANDS SUPPORTED
*        OPTIONS ARE BOTH BATCH AND LOOP, ALLOW OPERATOR STOP COMMAND
         LOAD  EP=COMMTASK    ALLOW OPERATOR 'STOP' COMMAND
         ST    R0,COMMTASK    SAVE ADDRESS OF ROUTINE
AGAIN    TM    FLAG,BATCH+LOOP IS THIS A BATCH LOOP RUN?
         BZ    SKIPHDR        NO, NO HEADER TO DISPLAY
         LA    R1,BLANKS      ADDR OF BLANK LINE
         BAL   R14,PUT        WRITE IT OUT
         LA    R1,BLANKS      ADDR OF BLANK LINE
         BAL   R14,PUT        WRITE IT OUT
         TIME  DEC            GET CURRENT TIME OF DAY
         ST    R1,DW          MOVE DATE TO WORK AREA
         MVC   DATE(6),DATEMASK MOVE EDIT MASK
         ED    DATE(6),DW+1   MAKE IT PRINTABLE
         ST    R0,DW          MOVE TIME TO WORK AREA
         MVC   TIME(8),TIMEMASK MOVE EDIT MASK
         ED    TIME(8),DW     MAKE IT PRINTABLE
         LA    R1,HEADER      ADDR OF HEADER LINE
         BAL   R14,PUT        WRITE IT OUT
         LA    R1,BLANKS      ADDR OF BLANK LINE
         BAL   R14,PUT        WRITE IT OUT
SKIPHDR  L     R8,16          GET CVT POINTER
         L     R1,560(R8)     GET GDA POINTER
         L     R8,52(R1)      GET SPQE POINTER
         L     R1,8(R1)       GET PQE POINTER
         MVC   CSASIZE,20(R1) TOTAL SIZE OF CSA
         L     R9,4(R1)       LAST FBQE POINTER
         L     R10,0(R1)      FIRST FBQE POINTER
         SR    R11,R11        CLEAR TALLY REG
CSANEXT  L     R1,8(R10)      SIZE OF FREE BLOCK
         AR    R11,R1         TALLY TOTAL AVAILABLE
*        CONVERT THE SIZE OF EACH FREE CHUNK FOR TPUT
         ST    R1,DW          SIZE TO WORK AREA
         UNPK  CSAMSG(7),DW+1(4) UNPACK FOR TRANSLATE
         MVI   CSAMSG+6,C' '  CLEAR EXTRA CHARACTER
         TR    CSAMSG(6),TRTABLE-240 TRANSLATE FOR PRINT
*        CONVERT THE SIZE TO 'K' BYTES FOR TPUT MSG
         SRL   R1,10          DIVIDE BY 1024
         CVD   R1,DW          CONVERT TO DECIMAL
         MVC   CSAWORK,CSAMASK MOVE EDIT MASK TO MSG
         ED    CSAWORK,DW+5   EDIT CSA MESSAGE FIELD
         MVC   CSAMSG+18(4),CSAWORK+2 MOVE TO MSG AREA
*        CONVERT THE ADDRESS TO PRINTABLE FOR TPUT
         L     R1,12(R10)     GET ADDRESS OF STORAGE
         ST    R1,DW          ADDRESS TO STORAGE
         UNPK  CSAMSG+10(7),DW+1(4) UNPACK FOR TRANSLATE
         MVI   CSAMSG+16,C' '  CLEAR EXTRA CHARACTER
         TR    CSAMSG+10(6),TRTABLE-240 TRANSLATE FOR PRINT
*        TPUT MSG TO USER AND CHECK FOR END OF CHAIN
*        TPUT  CSAMSG,30      WRITE TO TERMINAL
         LA    R1,CSAMSG      DATA POINTER
         LA    R15,30         DATA SIZE
         BAL   R14,DISPLAY    WRITE TO TERMINAL/SYSPRINT
         CR    R10,R9         LAST FBQE?
         BE    NEXTSCAN       YES, SCAN SPQE'S
         L     R10,0(R10)     BUMP TO NEXT FBQE
         B     CSANEXT        PROCESS NEXT FBQE
***********************************************************************
*
*        SCAN THE SPQE'S TO SHOW THE KEY'S ASSIGNED
*
***********************************************************************
NEXTSCAN MVC   KEYWORD,=C'KEY=' MODIFY MSG TEXT
         SR    R6,R6          CLEAR INDEX REG
         IC    R6,11(R8)      PICK UP KEY
         SRL   R6,4           ISOLATE KEY FIELD
         SLL   R6,2           MULTIPLY BY FOUR
         UNPK  KEY(1),11(1,R8) GET THE STORAGE KEY
         OI    KEY,C'0'       MAKE IT PRINTABLE
         TR    KEY(1),TRTABLE-240 CONVERT TO PRINTABLE
         L     R7,4(R8)       GET DQE POINTER FROM SPQE
         LTR   R7,R7          ANY DQE POINTER?
         BZ    NEXTSPQE       NO, GET NEXT SPQE IF ANY
*        CONVERT THE SIZE OF EACH USED CHUNK FOR TPUT
NEXTDQE  LA    R15,TABLE(R6)  GET ADDRESS OF CORRECT ACCUMULATOR
         L     R1,0(R15)      GET CURRENT VALUE
         A     R1,12(R7)      ADD DQE VALUE
         ST    R1,0(R15)      PUT IT BACK
         TM    FLAG,ALL       'ALL' MSG'S WANTED?
         BZ    NOTALL         NO, SKIP TPUT
         L     R1,12(R7)      SIZE OF BLOCK
         ST    R1,DW          SIZE TO WORK AREA
         UNPK  CSAMSG(7),DW+1(4) UNPACK FOR TRANSLATE
         MVI   CSAMSG+6,C' '  CLEAR EXTRA CHARACTER
         TR    CSAMSG(6),TRTABLE-240 TRANSLATE FOR PRINT
*        CONVERT THE SIZE TO 'K' BYTES FOR TPUT MSG
         SRL   R1,10          DIVIDE BY 1024
         CVD   R1,DW          CONVERT TO DECIMAL
         MVC   CSAWORK,CSAMASK MOVE EDIT MASK TO MSG
         ED    CSAWORK,DW+5   EDIT CSA MESSAGE FIELD
         MVC   CSAMSG+18(4),CSAWORK+2 MOVE TO MSG AREA
*        CONVERT THE ADDRESS TO PRINTABLE FOR TPUT
         L     R1,8(R7)       GET ADDRESS OF STORAGE
         ST    R1,DW          ADDRESS TO STORAGE
         UNPK  CSAMSG+10(7),DW+1(4) UNPACK FOR TRANSLATE
         MVI   CSAMSG+16,C' '  CLEAR EXTRA CHARACTER
         TR    CSAMSG+10(6),TRTABLE-240 TRANSLATE FOR PRINT
*        TPUT MSG TO USER AND CHECK FOR END OF CHAIN
*        TPUT  CSAMSG,31      WRITE TO TERMINAL
         LA    R1,CSAMSG      DATA POINTER
         LA    R15,31         DATA SIZE
         BAL   R14,DISPLAY    WRITE TO TERMINAL/SYSPRINT
NOTALL   ICM   R7,7,5(R7)     GET NEXT DQE IF ANY
         BNZ   NEXTDQE        ANOTHER ONE, PROCESS SAME
NEXTSPQE TM    8(R8),X'40'    IS THIS THE LAST SPQE?
         BO    TALLY          YES, ALL DONE
         ICM   R8,7,1(R8)     GET NEXT SPQE
         B     NEXTSCAN       PROCESS NEXT SPQE
***********************************************************************
*
*        CONVERT TALLY COUNT AND INFORM USER
*
***********************************************************************
TALLY    EQU   *
*        TPUT  CSAMASK,1      PRINT A BLANK LINE
         LA    R1,CSAMASK     DATA POINTER
         LA    R15,1          DATA SIZE
         BAL   R14,DISPLAY    WRITE TO TERMINAL/SYSPRINT
         SR    R6,R6          CLEAR INDEX REG
         LA    R5,16          SET LOOP CONTROL
TOTLOOP  LR    R1,R6          COPY INDEX
         SLL   R1,2           MULTIPLY BY FOUR
         LA    R1,TABLE(R1)   ADDRESS OF ENTRY
         ICM   R1,15,0(R1)    GET COUNT IF ANY
         BZ    NEXTENT        NO, GET NEXT ENTRY
         SRL   R1,10          DIVIDE BY 1024
         CVD   R1,DW          CONVERT TO DECIMAL
         MVC   CSAWORK,CSAMASK MOVE EDIT MASK
         ED    CSAWORK,DW+5   MAKE SIZE PRINTABLE
         MVC   TOTMSG+8(4),CSAWORK+2 MOVE SIZE TO MSG
         LA    R1,240         GET SIGN DIGIT
         OR    R1,R6          MERGE INDEX
         STC   R1,TOTMSG+4    INTO MSG
         TR    TOTMSG+4(1),TRTABLE-240 CONVERT TO PRINTABLE
*        TPUT  TOTMSG,15      INFORM USER
         LA    R1,TOTMSG      DATA POINTER
         LA    R15,15         DATA SIZE
         BAL   R14,DISPLAY    WRITE TO TERMINAL/SYSPRINT
NEXTENT  LA    R6,1(R6)       BUMP INDEX
         BCT   R5,TOTLOOP     NEXT ENTRY
         L     R15,CSASIZE    GET TOTAL CSA SIZE
         SRL   R15,10         DIVIDE BY 1024
         CVD   R15,DW         CONVERT TO DECIMAL
         MVC   CSAWORK,CSAMASK MOVE EDIT MASK
         ED    CSAWORK,DW+5   MAKE SIZE PRINTABLE
         MVC   TALMSG+6(4),CSAWORK+2 MOVE SIZE TO MSG
         L     R15,CSASIZE    GET TOTAL CSA SIZE
         SR    R15,R11        SUBTRACT AVAILABLE FROM TOTAL = USED
         LR    R1,R15         SAVE USED FIGURE
         SRL   R15,10         DIVIDE BY 1024
         CVD   R15,DW         CONVERT TO DECIMAL
         MVC   CSAWORK,CSAMASK MOVE EDIT MASK
         ED    CSAWORK,DW+5   MAKE SIZE PRINTABLE
         MVC   TALMSG+18(4),CSAWORK+2 MOVE SIZE TO MSG
         SR    R0,R0          CLEAR FOR DIVIDE
         MH    R1,=H'100'     MULTIPLY BY 100
         LTR   R1,R1          ANYTHING USED?
         BZ    AROUND         NO, SKIP PROGRAM CHECK
         L     R15,CSASIZE    GET TOTAL CSA SIZE
         DR    R0,R15         GET PERCENT USED              = % USED
AROUND   SLL   R0,1           MULTIPLY BY 2
         CVD   R1,DW          CONVERT TO DECIMAL
         MVC   CSAWORK,CSAMASK MOVE EDIT MASK
         ED    CSAWORK,DW+5   MAKE PERCENT PRINTABLE
         MVC   TALMSG+37(3),CSAWORK+3 MOVE PERCENT TO MSG
         SRL   R11,10         DIVIDE BY 1024                = AVAILABLE
         CVD   R11,DW         CONVERT TO DECIMAL
         MVC   CSAWORK,CSAMASK MOVE EDIT MASK
         ED    CSAWORK,DW+5   MAKE SIZE PRINTABLE
         MVC   TALMSG+31(4),CSAWORK+2 MOVE SIZE TO MSG
*        TPUT  CSAMASK,1      SPACE 1 LINE
         LA    R1,CSAMASK     DATA POINTER
         LA    R15,1          DATA SIZE
         BAL   R14,DISPLAY    WRITE TO TERMINAL/SYSPRINT
*        TPUT  TALMSG,50      PRINT TALLY INFO
         LA    R1,TALMSG      DATA POINTER
         LA    R15,50         DATA SIZE
         BAL   R14,DISPLAY    WRITE TO TERMINAL/SYSPRINT
         SR    R15,R15        CLEAR RETCODE
         TM    FLAG,BATCH     BATCH JOB MODE?
         BZ    EXIT0          NO, ALL DONE
         TM    FLAG,LOOP      TIME LOOP REQUESTED?
         BZ    CLOSE          NO, CLOSE AND EXIT
         MVC   COMMBUF(4),=CL4' ' CLEAR COMMTASK BUFFER
         LA    R1,=A(COMMBUF) ADDRESS OF COMMTASK PARM
         L     R15,COMMTASK   ADDRESS OF ROUTINE
         BALR  R14,R15        CHECK FOR STOP COMMAND
         ST    R15,WAITLIST   SAVE ADDR OF COMM ECB FOR WAIT
         CLC   COMMBUF(4),=CL4' ' ANY COMMAND/STOP?
         BNE   DELETE         YES, GO DELETE COMMTASK MODULE
         XC    TIMEECB,TIMEECB CLEAR THE TIMER ECB
         STIMER REAL,TIMEEXIT,DINTVL=WAIT SET A TIMER ELEMENT
         WAIT  1,ECBLIST=WAITLIST,LONG=YES ALLOW US TO SWAP OUT
         XC    TABLE(64),TABLE CLEAR ACCUMULATORS
         MVC   KEYWORD,=C'FREE' RESET MSG DATA
         B     AGAIN          LOOP THROUGH AGAIN
DELETE   DELETE EP=COMMTASK   DELETE COMMTASK MODULE
CLOSE    CLOSE (PUTDCB)       CLOSE THE DCB
EXIT0    SR    R15,R15        SET RETCODE
EXIT     $EPILOG
         USING *,R2           SET EXIT ROUTINE ADDRESSABILITY
TIMEEXIT STM   R14,R12,12(R13) SAVE ENTRY REGS
         LR    R2,R15         SET BASE REG
         POST  TIMEECB        POST THE TIMER ECB
         LM    R14,R12,12(R13) RESTORE CALLERS REGS
         BR    R14            RETURN TO CALLER
         DROP  R2             FREE UP R2 USING
DISPLAY  TM    FLAG,BATCH     IS THIS A BATCH RUN?
         BO    HARDCOPY       YES, WRITE TO SYSPRINT
         LR    R0,R15         COPY SIZE FOR TPUT
         SVC   93             NO, DISPLAY TO THE TERMINAL
         BR    R14            RETURN TO CALLER
HARDCOPY MVC   WORK(80),BLANKS CLEAR OUTPUT LINE
         BCTR  R15,0          DECREMENT FOR EXECUTE
         EX    R15,MOVE       MOVE DATA TO BUFFER
         LA    R1,WORK        DATA POINTER
PUT      SYSPUT DDNAME=SYSPRINT PUT ROUTINE
MOVE     MVC   WORK(0),0(R1)  EXECUTED MOVE
         EJECT
HEADER   DC    C'DATE='
DATE     DC    C'YY.DDD    TIME='
TIME     DC    CL70'HH.MM.SS  *************** LISTCSA ***************'
BLANKS   DC    CL80' '        OUTPUT BUFFER FOR BATCH
WORK     DC    CL80' '        OUTPUT BUFFER FOR BATCH
ERRORMSG DC    CL80'INVALID PARM, VALID=''ALL'' AND ''LOOP'' '
TOTMSG   DC    CL15'KEY X = ....K'
CSAMSG   DC    CL26'...... AT ...... (....K )'  CSA MSG
KEYWORD  DC    CL4'FREE'      MODIFIED KEYWORD
KEY      DC    C' '           SPQE KEY FOR MESSAGE
TALMSG   DC    CL60'TOTAL=....K, USED=....K, AVAIL=....K ...% USED'
CSAMASK  DC    X'402020202120'  EDIT MASK FOR CSA SIZE
TIMEMASK DC    X'21204B20204B2020' HH.MM.SS EDIT MASK
DATEMASK DC    X'21204B202020' YY.DDD EDIT MASK
CSAWORK  DC    CL6' '         EDIT WORK AREA
FLAG     DC    X'00'          OPTION FLAG
ALL      EQU   X'01'          OPTION ... ALL
BATCH    EQU   X'02'          OPTION ... BATCH JOB
LOOP     EQU   X'04'          OPTION ... LOOP ON STIMER
DW       DC    D'0'           DOUBLEWORD WORK AREA
WAIT     DC    C'00100000'    TIME IN HH,MM,SS,TH FOR LOOP
WAITLIST DC    A(COMMECB)     1ST EVENT TO WAIT ON
         DC    X'80',AL3(TIMEECB) 2ND EVENT TO WAIT ON
TIMEECB  DC    F'0'           TIMER ECB
CSASIZE  DC    F'0'           SIZE OF CSA
TABLE    DC    F'0'           KEY 0 CSA USAGE ACCUMULATOR
         DC    F'0'           KEY 1 CSA USAGE ACCUMULATOR
         DC    F'0'           KEY 2 CSA USAGE ACCUMULATOR
         DC    F'0'           KEY 3 CSA USAGE ACCUMULATOR
         DC    F'0'           KEY 4 CSA USAGE ACCUMULATOR
         DC    F'0'           KEY 5 CSA USAGE ACCUMULATOR
         DC    F'0'           KEY 6 CSA USAGE ACCUMULATOR
         DC    F'0'           KEY 7 CSA USAGE ACCUMULATOR
         DC    F'0'           KEY 8 CSA USAGE ACCUMULATOR
         DC    F'0'           KEY 9 CSA USAGE ACCUMULATOR
         DC    F'0'           KEY A CSA USAGE ACCUMULATOR
         DC    F'0'           KEY B CSA USAGE ACCUMULATOR
         DC    F'0'           KEY C CSA USAGE ACCUMULATOR
         DC    F'0'           KEY D CSA USAGE ACCUMULATOR
         DC    F'0'           KEY E CSA USAGE ACCUMULATOR
         DC    F'0'           KEY F CSA USAGE ACCUMULATOR
ECB      DC    F'0'           PARSE/ATTACH ECB
ANSWER   DC    F'0'           PARSE ANSWER AREA
PPLUPT   DC    F'0'           PARSE PARM LIST UPT
PPLECT   DC    F'0'           PARSE PARM LIST ECT
PPLECB   DC    A(ECB)         PARSE PARM LIST ECB
PPLPCL   DC    V(LISTPCL)     PARSE PARM LIST PCL
PPLANS   DC    A(ANSWER)      PARSE PARM LIST ANSWER ->
PPLCBUF  DC    F'0'           PARSE PARM LIST COMMAND ->
TRTABLE  DC    C'0123456789ABCDEF' TRANSLATE TABLE
COMMBUF  DC    CL80' '        COMMTASK BUFFER
LISTPCL  IKJPARM
OPT      IKJKEYWD
         IKJNAME 'ALL',ALIAS=('LIST')
         IKJENDP
         IKJCPPL
         END
