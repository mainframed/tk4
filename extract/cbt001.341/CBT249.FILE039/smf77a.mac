*----------------------------------------------------------------------
*
*                   DEC, 1978
*
*        THIS PROGRAM READS SMF RECORD TYPE 77 (ENQ RECORDS)
*        AND PRINTS AN ENQ CONTENTION REPORT
*
*        1 CONTROL CARD IS REQUIRED.
*        CONTROL CARD FORMAT:
*        DATE(YYDDD,YYDDD),TIME(HHMM,HHMM)
*
*            DATE - START,END DATES - DEFINES THE LIMIT OF RECORDS
*                   SEARCHED.
*
*            TIME - START,END TIME - DEFINES THE LIMIT OF RECORDS
*                   SEARCHED WITHIN THE DATES SPECIFIED
*
*            OPTIONAL CONTROL CARDS ARE OF THE FORMAT:
*            ENQ=XXXXXXXX  WHERE XXX...XXX IS THE QNAME RNAME
*            TO BE PRINTED IN HI INTENSITY.
*
*----------------------------------------------------------------------
         EJECT
*----------------------------------------------------------------------
*
*        INITIALIZATION ROUTINE
*
*----------------------------------------------------------------------
SMF77A   $PROLOG
ENTRY010 DS    0H
         OPEN  (SYSIN,,SYSUT1,,SYSPRINT,(OUTPUT))
EXIT010  EQU   *
         B     ENTRY020
         LTORG
         EJECT
*----------------------------------------------------------------------
*
*             PROCESS REQUIRED CONTROL CARD
*
*----------------------------------------------------------------------
ENTRY020 DS    0H
         GET   SYSIN              GET THE REQUIRED CONTROL CARD
         USING SYSIND,R1          DSECT
         MVI   CNTLLINE,C'1'      SKIP TO CHAN 1
         MVC   CNTLLINE+1(23),=C'REQUIRED CONTROL CARD: '
         MVC   CNTLLINE+24(71),0(R1)   MOVE CONTROL CARD TO LINE
         ST    R1,SAVE1
         PUT   SYSPRINT,CNTLLINE  PRINT IT
         L     R1,SAVE1
         CLC   SDATE(5),=C'DATE(' CORRECT KEYWORD ?
         BNE   ERROR1             NO - ERROR
         LA    R2,SD1             ADDR OF START DATE
         LA    R11,5              LNGTH OF DATE
LOOP020A EQU   *
         TM    0(R2),X'F0'        NUMERIC ?
         BNO   ERROR2             NO -ERROR
         LA    R2,1(R2)           YES - BUMP TO NEXT BYTE
         BCT   R11,LOOP020A       TEST ALL BYTES
         PACK  START,SD1          PACK AND SAVE START DATE
         LA    R2,SD2             ADDR OF END DATE
         LA    R11,5              LNGTH OF DATE
LOOP020B EQU   *
         TM    0(R2),X'F0'        NUMERIC ?
         BNO   ERROR2             NO -ERROR
         LA    R2,1(R2)           YES - BUMP TO NEXT BYTE
         BCT   R11,LOOP020B       TEST ALL BYTES
         PACK  END,SD2            PACK AND SAVE END DATE
AAA020   EQU   *
         CLC   STIME(5),=C'TIME(' CORRECT KEYWORD ?
         BNE   ERROR1             NO - ERROR
         LA    R2,ST1             ADDR OF START TIME
         LA    R11,4              LNGTH OF TIME
LOOP020C EQU   *
         TM    0(R2),X'F0'        NUMERIC ?
         BNO   ERROR2             NO -ERROR
         LA    R2,1(R2)           YES - BUMP TO NEXT BYTE
         BCT   R11,LOOP020C       TEST ALL BYTES
         PACK  DBWRD,ST1HH        PACK START HH
         MP    DBWRD,=P'60'       CHANGE TO MINUTES
         PACK  DBWRD1,ST1MM       PACK START MM
         AP    DBWRD,DBWRD1       TIME IN MINUTES
         MP    DBWRD,=P'6000'     TIME IN HUNDRETHS OF A SECOND
         CVB   R15,DBWRD
         ST    R15,TIME1          SAVE START TIME
         LA    R2,ST2             ADDR OF END TIME
         LA    R11,4              LNGTH OF TIME
LOOP020D EQU   *
         TM    0(R2),X'F0'        NUMERIC ?
         BNO   ERROR2             NO -ERROR
         LA    R2,1(R2)           YES - BUMP TO NEXT BYTE
         BCT   R11,LOOP020D       TEST ALL BYTES
         PACK  DBWRD,ST2HH        PACK END HH
         MP    DBWRD,=P'60'       CHANGE TO MINUTES
         PACK  DBWRD1,ST2MM       PACK END MM
         AP    DBWRD,DBWRD1       TIME IN MINUTES
         MP    DBWRD,=P'6000'     TIME IN HUNDRETHS OF A SECOND
         CVB   R15,DBWRD
         ST    R15,TIME2          SAVE START TIME
EXIT020  EQU   *
         B     ENTRY030
         LTORG
SAVE1    DC    F'0'
BE       BE    DUMMY              DUMMY BRANCH INSTRUCTION
         EJECT
*----------------------------------------------------------------------
*
*             PROCESS OPTIONAL CONTROL CARDS - IF ANY
*
*----------------------------------------------------------------------
ENTRY030 DS    0H
         USING ENQD,R9            DSECT FOR JOBNAME STORAGE AREA
         GET   SYSIN              GET FIRST JOBNAME CARD, IF ANY
         LR    R2,R1              RECORD ADDR
         MVI   CNTLLINE,C' '      SKIP 1 LINE
         MVC   CNTLLINE+1(23),=C'OPTIONAL CONTROL CARD: '
         MVC   CNTLLINE+24(71),0(R1)   MOVE CONTROL CARD TO LINE
         PUT   SYSPRINT,CNTLLINE  PRINT IT
NOP030   NOP   AAA030             FALL THRU 1ST TIME
         L     R0,SIZE            CONSTANT FOR GETMAIN
         GETMAIN R,LV=(0)         GET A SAVEAREA
         ST    R1,BEGIN           STORE BEGINNING OF CHAIN
         ST    R1,PREV            STORE
         LR    R9,R1              ADDR OF STORAGE
         MVC   GSIZE,SIZE         STORE SIZE OF AREA IN AREA
         MVC   GNEXT,=F'0'        CLEAR NEXT SAVEAREA CHAIN POINTER
         MVC   GQNMRNM,4(R2)      MOVE TO SAVEAREA
         MVI   NOP030+1,X'F0'     ACTIVATE BR
         B     ENTRY030           GET NEXT SYSIN JOBNAME CARD
AAA030   EQU   *
         L     R0,SIZE            CONSTANT FOR GETMAIN
         GETMAIN R,LV=(0)         GET A SAVEAREA
         LR    R9,R1              ADDR OF STORAGE
         L     R3,PREV            PREVIOUS SAVEAREA
         MVC   GSIZE,SIZE         ST SIZE OF THIS WA IN THIS WA
         ST    R9,4(R3)           ST THIS WA ADDR IN PREV WA
         MVC   GNEXT,=F'0'        CLEAR NEXT SAVEAREA CHAIN POINTER
         MVC   GQNMRNM,4(R2)      MOVE TO SAVEAREA
         ST    R1,PREV            SAVE THIS SAVEAREA ADDR AS PREV
         B     ENTRY030           GET NEXT SYSIN JOBNAME CARD
EXIT030  EQU   *                  EODAD FOR SYSIN DCB
         B     ENTRY040
         LTORG
SIZE     DC    F'64'
BEGIN    DC    F'0'
PREV     DC    F'0'
         EJECT
*----------------------------------------------------------------------
*
*        PROCESS RECORDS
*
*----------------------------------------------------------------------
ENTRY040 DS    0H
         USING SMFRCD77,R2
         GET   SYSUT1             GET AN SMF RECORD
         LR    R2,R1              ADDR OF RECORD
NOP040A  NOP   AAA040
         MVI   NOP040A+1,X'F0'    ACTIVATE BRANCH
         MVC   CNTLLINE,=133C' '  CLEAR LINE
         MVI   CNTLLINE,C'0'      SKIP 2 LINES
         MVC   CNTLLINE+1(30),=C'DATE OF FIRST RECORD ON FILE: '
         UNPK  CNTLLINE+31(5),SMF77DTE+1(3)
         OI    CNTLLINE+35,X'F0'
         PUT   SYSPRINT,CNTLLINE
AAA040   EQU   *
         CLI   SMF77RTY,77         TYPE 77 RECORD ?
         BNE   ENTRY040           NO - GET NEXT RECORD
BBB040   EQU   *
         CP    SMF77DTE,START     WITHIN
         BL    ENTRY040           LIMITS
         CP    SMF77DTE,END       OF SPECIFIED
         BH    ENTRY040           DATES ?
         CLC   SMF77TME,TIME1     WITHIN
         BL    ENTRY040           LIMITS
         CLC   SMF77TME,TIME2     OF SPECIFIED
         BH    ENTRY040           DATES ?
CCC040   EQU   *
         UNPK  HRDATE(5),SMF77DTE+1(3)
         OI    HRDATE+4,X'F0'
         MVC   SMFTIME,SMF77TME   MOVE TIME TO WORKAREA
         L     R3,SMFTIME               TIME IN BIN SEC/100
         CVD   R3,DBWRD
         UNPK  WORK,DBWRD+6(2)
         MVC   TH,WORK+1
         ZAP   WRK1,=P'0'
         MVO   WRK1,DBWRD(7)
         MVO   WRK1,WRK1(15)
         DP    WRK1,=P'60'
         UNPK  WORK,WRK1+14(2)
         MVC   SS,WORK+1
         ZAP   WRK2,WRK1(14)
         DP    WRK2,=P'60'
         UNPK  WORK,WRK2+14(2)
         MVC   MM,WORK+1
         UNPK  WORK,WRK2+12(2)
         MVC   HH,WORK+1
         OI    HH+1,X'F0'
         OI    MM+1,X'F0'
         OI    SS+1,X'F0'
         OI    TH+1,X'F0'
         MVC   HDIETHH,HH         INTERVAL END HH
         MVC   HDIETMM,MM         INTERVAL END MM
         MVC   HDIETSS,SS         INTERVAL END SS
         ZAP   LINES,=P'60'       FORCE HEADINGS
         BAL   R14,ENTRY910       PRINT IT
         LH    R3,SMF77RNO        NUMBER OF ELEMENTS IN THIS RECORD
         LH    R4,SMF77RSZ        SIZE OF EACH ELEMENT
LOOP040A EQU   *
         MVC   PRQNM,SMF77QNM     MOVE QNAME TO PRLINE
         MVC   PRRNM,SMF77RNM     MOVE RNAME TO PRLINE
         XR    R1,R1
         ICM   R1,3,SMF77QL1      QUE LENGTH OF 1
         CVD   R1,DBWRD
         MVC   PRQL1,EDIT30       EDIT PATTERN  999
         ED    PRQL1,DBWRD+6      MOVE TO PRINT LINE
         XR    R1,R1
         ICM   R1,3,SMF77QL2      QUE LENGTH OF 2
         CVD   R1,DBWRD
         MVC   PRQL2,EDIT30       EDIT PATTERN  999
         ED    PRQL2,DBWRD+6      MOVE TO PRINT LINE
         XR    R1,R1
         ICM   R1,3,SMF77QL3      QUE LENGTH OF 3
         CVD   R1,DBWRD
         MVC   PRQL3,EDIT30       EDIT PATTERN  999
         ED    PRQL3,DBWRD+6      MOVE TO PRINT LINE
         XR    R1,R1
         ICM   R1,3,SMF77QL4      QUE LENGTH OF 4
         CVD   R1,DBWRD
         MVC   PRQL4,EDIT30       EDIT PATTERN  999
         ED    PRQL4,DBWRD+6      MOVE TO PRINT LINE
         XR    R1,R1
         ICM   R1,3,SMF77QLT      TOTAL NUMBER OF ENQS
         CVD   R1,DBWRD
         MVC   PRQLT,EDIT50       EDIT PATTERN  99999
         ED    PRQLT,DBWRD+5      MOVE TO PRINT LINE
         XR    R1,R1
         ICM   R1,3,SMF77EXM      MIN EXCLUSIVE REQUESTS
         CVD   R1,DBWRD
         MVC   PREXM,EDIT30       EDIT PATTERN  999
         ED    PREXM,DBWRD+6      MOVE TO PRINT LINE
         XR    R1,R1
         ICM   R1,3,SMF77EXX      MAX EXCLUSIVE REQUESTS
         CVD   R1,DBWRD
         MVC   PREXX,EDIT30       EDIT PATTERN  999
         ED    PREXX,DBWRD+6      MOVE TO PRINT LINE
         XR    R1,R1
         ICM   R1,3,SMF77EVT      TOTAL CONTENTIONS
         CVD   R1,DBWRD
         MVC   PREVT,EDIT50       EDIT PATTERN  99999
         ED    PREVT,DBWRD+5      MOVE TO PRINT LINE
         XR    R1,R1
         ICM   R1,3,SMF77DWR      CURRENT OWNERS WAITING FOR RESOURCE
         CVD   R1,DBWRD
         MVC   PRDWR,EDIT30       EDIT PATTERN  999
         ED    PRDWR,DBWRD+6      MOVE TO PRINT LINE
         MVC   PRDO1,SMF77DO1     CURRENT JOB 1
         MVC   PRDW1,SMF77DW1     WAITING JOB 1
         MVC   PRDW2,SMF77DW2     WAITING JOB 2
         BAL   R14,ENTRY910       PRINT IT
         AR    R2,R4              INCR TO NEXT ELEMENT
         BCT   R3,LOOP040A
EXIT040  EQU   *
         B     ENTRY040           GET NEXT RECORD
         LTORG
         EJECT
*----------------------------------------------------------------------
*
*             PRINT ROUTINE
*
*----------------------------------------------------------------------
ENTRY910 DS    0H
         ST    R14,ST910
         CP    LINES,=P'57'       END OF PAGE ?
         BL    AAA910             NO - SKIP HEADINGS
         ZAP   LINES,=P'0'        RE-SET LINE COUNTER
         AP    PAGE,=P'1'         ADD 1 TO PAGE COUNTER
         MVC   HDPAGE,EDIT30      999
         ED    HDPAGE,PAGE
         PUT   SYSPRINT,HD1
         PUT   SYSPRINT,HD2
         PUT   SYSPRINT,HD3
         MVI   CCC,C'0'           SKIP 2 LINES
AAA910   EQU   *
         CLC   PRLINE+1(20),=20C' '  ANYTHING TO PRINT ?
         BE    EXIT910             NO - SKIP PRINT
         AP    LINES,=P'1'
BBB910   EQU   *
         L     R9,BEGIN
LOOP910A EQU   *
         C     R9,=F'0'            ANY MORE IN CHAIN ?
         BE    DDD910              NO - DONE
         CLC   GQNMRNM,SMF77QNM    SAME QNAME RNAME ?
         BE    CCC910              YES - PRINT HI INTENSITY
         L     R9,GNEXT            NO -CHECK NEXT IN CHAIN
         B     LOOP910A
CCC910   EQU   *
         LA    R8,3                SET COUNTER
LOOP910B EQU   *
         PUT   SYSPRINT,PRLINE
         MVI   CCC,C'+' DO NOT ADVANCE PRINTER
         BCT   R8,LOOP910B
DDD910   EQU   *
         PUT   SYSPRINT,PRLINE
         MVI   CCC,C' '           SKIP 1 LINE
         MVC   PRLINE+1(132),PRLINE
EXIT910  EQU   *
         L     R14,ST910
         BR    R14
ST910    DC    F'-1'
         LTORG
         EJECT
*----------------------------------------------------------------------
*
*             EOJ AND CLEAN-UP
*
*----------------------------------------------------------------------
EOJ      DS    0H
         MVI   CNTLLINE,C'1'      SKIP TO CHANNEL 1
         MVC   CNTLLINE+1(30),=C' DATE OF LAST RECORD ON FILE: '
*        UNPK  CNTLLINE+31(5),SMF77DTE+1(3)
         OI    CNTLLINE+35,X'F0'
         PUT   SYSPRINT,CNTLLINE
         L     R2,BEGIN           FIRST SAVEAREA
FREELOOP EQU   *
         C     R2,=F'0'           ANY MORE SAVEAREAS ?
         BE    EOJ1               NO - DONE
         LR    R1,R2              ADDR OF SAVEAREA
         L     R2,4(R1)           ADDR OF NEXT SAVEAREA
         L     R0,0(R1)           LNGTH OF SAVE AREA
         FREEMAIN  R,LV=(0),A=(1)
         B     FREELOOP
EOJ1     EQU   *
         DELETE EP=SMFTCNVR
         CLOSE (SYSIN,,SYSUT1,,SYSPRINT)
RETURN   EQU   *
         L     R15,RETCODE        LOAD RETURN CODE
         $EPILOG
         EJECT
*----------------------------------------------------------------------
*
*             ERROR ROUTINES
*
*----------------------------------------------------------------------
ERROR1   DS    0H                 INVALID START DATE
         MVC   RETCODE,=F'4'      SET RETURN CODE OF 4
         PUT   SYSPRINT,=CL133' ERROR1 - START DATE NOT NUMERIC'
         B     EOJ1
ERROR2   DS    0H                 INVALID END DATE
         MVC   RETCODE,=F'4'      SET RETURN CODE OF 4
         PUT   SYSPRINT,=CL133' ERROR2 - END DATE NOT NUMERIC'
         B     EOJ1
ERROR3   DS    0H                 UKNOWN PARM TYPE
         MVC   RETCODE,=F'4'      SET RETURN CODE OF 4
         PUT   SYSPRINT,=CL133' ERROR3 - INVALID OPTION ON PARM CARD'
         B     EOJ1
ERROR4   DS    0H                 INVALID RC
         MVC   RETCODE,=F'4'      SET RETURN CODE OF 4
         PUT   SYSPRINT,=CL133' ERROR3 - RETURN CODE NOT NUMERIC'
         B     EOJ1
         EJECT
*----------------------------------------------------------------------
CNTLLINE DS    CL133
PRLINE   DS    0CL133
CCC      DC    C' '
PRQNM    DC    CL8' '
         DC    CL1' '
PRRNM    DC    CL44' '
PRQL1    DC    CL4' '
PRQL2    DC    CL4' '
PRQL3    DC    CL4' '
PRQL4    DC    CL4' '
PRQLT    DC    CL6' '
PREXM    DC    CL4' '
PREXX    DC    CL4' '
         DC    CL1' '
PREVT    DC    CL6' '
         DC    CL1' '
PRDO1    DC    CL8' '
         DC    CL1' '
PRDW1    DC    CL8' '
         DC    CL1' '
PRDW2    DC    CL8' '
         DC    CL2' '
PRDWR    DC    CL4' '
         DC    CL1' '
         DC    100C' '
*----------------------------------------------------------------------
         EJECT
HD1      DC    CL5'1'
HDATE    DC    CL8' '
         DC    CL5' '
         DC    CL12'RECORD DATE='
HRDATE   DC    CL5' '
         DC    CL8' '
         DC    C'ENQ CONTENTION REPORT'
         DC    10C' '
         DC    C'INTERVAL END TIME: '
HDIETHH  DC    CL2' '
         DC    C'.'
HDIETMM  DC    CL2' '
         DC    C'.'
HDIETSS  DC    CL2' '
         DC    10C' '
         DC    CL4'PAGE'
HDPAGE   DC    CL4' '
         DC    CL5' '
HPGM     DC    CL8' '
         DC    CL80' '
*----------------------------------------------------------------------
HD2      DC    CL54'0'
         DC    C'--QLEN DISTRIB-- TOTAL --CONTENTION-- -------- '
         DC    C'C U R R E N T ---------'
         DC    80C' '
*----------------------------------------------------------------------
HD3      DC    CL54' '
         DC    C'   1   2   3  4+  ENQS MIN MAX  TOTAL OWNER    '
         DC    C'WAIT(1)  WAIT(2)  COUNT'
         DC    80C' '
*----------------------------------------------------------------------
DUMMY    DS    0H
EDIT30   DC    X'40202021'
EDIT50   DC    X'402020202021'
LINES    DC    PL2'60'
PAGE     DC    PL2'0'
DBWRD    DC    D'0'
DBWRD1   DC    D'0'
WORK     DC    CL3' '
WRK1     DC    PL16'0'
WRK2     DC    PL16'0'
RETCODE  DC    F'0'
START    DC    PL4'0'
END      DC    PL4'0'
TIME1    DC    F'0'
TIME2    DC    F'0'
********
TIME     DS    0CL8
HH       DC    CL2' '
MM       DC    CL2' '
SS       DC    CL2' '
TH       DC    CL2' '
********
PARMS    DS    0F
         DC    A(TIME)
SMFTIME  DC    F'0'
********
SYSIN    DCB   DDNAME=SYSIN,DSORG=PS,MACRF=GL,EODAD=EXIT030
         EJECT
SYSUT1   DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=GL,EODAD=EOJ,BFTEK=A
         EJECT
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,RECFM=FBA,LRECL=133,  X
               BLKSIZE=6118
         EJECT
*.       COPY  JOBPARMS
         EJECT
*----------------------------------------------------------------------
ENQD     DSECT
GSIZE    DS    CL4
GNEXT    DS    CL4
GQNMRNM  DS    CL52
*----------------------------------------------------------------------
SYSIND   DSECT
SDATE    DS    0CL17   DATE(YYDDD,YYDDD)
         DS    CL5     DATE(
SD1      DS    CL5     YYDDD
         DS    CL1     ,
SD2      DS    CL5     YYDDD
         DS    CL1     )
         DS    CL1     ,
STIME    DS    0CL15   TIME(HHMM,HHMM)
         DS    CL5     TIME(
ST1      DS    0CL4    HHMM
ST1HH    DS    CL2
ST1MM    DS    CL2
         DS    CL1     ,
ST2      DS    0CL4    HHMM
ST2HH    DS    CL2
ST2MM    DS    CL2
         DS    CL1     )
*----------------------------------------------------------------------
         EJECT
         ERBSMFR 77
         END
