         TITLE 'IEFACTRT - STEP/JOB TERMINATION ACCOUNTING ROUTINE'
***********************************************************************
*                                                                     *
*        THIS IS THE JOB AND STEP ACCOUNTING ROUTINE (IEFACTRT)       *
*        WHICH IS INVOKED FOLLOWING EACH STEP OF A JOB, AND           *
*        ALSO AT THE END OF A JOB.                                    *
*                                                                     *
*        THIS ROUTINE WILL PLACE A STEP TERMINATION MESSAGE ON THE    *
*        USER'S LOG PAGE AND ALSO HARD COPY WHICH WILL CONTAIN        *
*        THE STEP COMPLETION CODE AS WELL AS OTHER SYSTEM INFO.       *
*        THIS SAME MESSAGE IS ALSO SENT TO TSO USERS IF THEY ARE      *
*        CURRENTLY LOGGED ON AND THE JOB SPECIFIED 'NOTIFY=USERID'    *
*        ON THE JOBCARD.                                              *
*                                                                     *
*        FOR REMOTE USERS, IT WILL SEND A JOB ENDED MESSAGE           *
*        (VIA $DMR) TO INFORM THE REMOTE OF JOB STATUS. THIS IS       *
*        ONLY PROVIDED IF IEFUJI ALSO GENERATED A 'STARTED' MSG       *
*        (OR PROVIDED THE REMOTE ID IN THE COMMON EXIT PARM AREA).    *
*                                                                     *
*          NOTE: THIS ROUTINE IS LINKEDITED AS AN SVC (TYPE 3)        *
*                TO BE INCLUDE VIA AN 'MLPA' AT IPL TIME.             *
*                IT IS BEST TO LINK WITH THE NAME OF IEFACTRT         *
*                WITH AN ALIAS OF THE USED SVC (E.G. IGC0024A).       *
*                ALSO, SINCE THIS ROUTINE MUST BE REENTRANT, NO       *
*                IN-LINE MACRO EXPANSIONS MAY BE USED (E.G. DO        *
*                NOT USE A MACRO THAT GENERATES AN ADCON).            *
*                                                                     *
***********************************************************************
         EJECT
IEFACTRT CSECT
         USING *,R6           INFORM THE ASSEMBLER OF OUR BASE REG
*
*        BECAUSE WE ARE AN SVC, THERE IS NO NEED TO SAVE THE CALLERS
*        REGISTERS (THE SYSTEM HAS ALREADY SAVED THEM).  ALSO,
*        CERTAIN REGISTERS HAVE BEEN PRIMED FOR US AS FOLLOWS:
*
*         0 = ENTRY CODE (16 = JOBTERM)
*         1 = PARM LIST ADDRESS
*         2 = UNPREDICTABLE
*         3 = CVT ADDRESS
*         4 = TCB ADDRESS(CURRENT)
*         5 = SVRB ADDRESS (OURS)
*         6 = ENTRY POINT (OUR BASE REG)
*         7 = ASCB ADDRESS (CURRENT)
*         8 = UNPREDICTABLE
*         9 = UNPREDICTABLE
*        10 = UNPREDICTABLE
*        11 = UNPREDICTABLE
*        12 = UNPREDICTABLE
*        13 = SAVE AREA PROVIDED BY INITIATOR
*        14 = RETURN REGISTER (TO SVC RETURN HANDLER)
*        15 = SAME AS WHEN SVC WAS ISSUED (AT ENTRY TO EXIT)
*
*        REGISTERS USED:
*
R0       EQU   0  =  WORK REG
R1       EQU   1  =  WORK REG / RETURN CODE (0=WRITE,4=NOWRITE) SMF REC
R2       EQU   2  =  WORK REG
R3       EQU   3  =  WORK REG
R4       EQU   4  =  WORK REG
R5       EQU   5  =  WORK REG
R6       EQU   6  =  BASE REG FOR IEFACTRT
R7       EQU   7  =  WORK REG (ASCB POINTER)
R8       EQU   8  =  BASE FOR GOTTEN STORAGE (WORK AREA)
R9       EQU   9  =  BASE FOR COMMON EXIT PARM AREA (CEPA)
R10      EQU   10 =  BASE FOR SMF4/5 RELOCATE SECTION
R11      EQU   11 =  BASE FOR SMF4/5 RECORD PROPER
R12      EQU   12 =  BASE FOR ENTRY PARMS
R13      EQU   13 =  SAVE AREA PROVIDED BY INITIATOR
R14      EQU   14 =  RETURN ADDRESS (DON'T MODIFY)
R15      EQU   15 =  WORK REG / RETURN CODE (0=NORMAL,4=CANCEL)
*
         EJECT
***********************************************************************
*
*        INITIALIZE REGISTERS AND GET A WORK AREA
*
***********************************************************************
         LR    R3,R0              SAVE ENTRY CODE
         LR    R12,R1             SAVE PARM LIST POINTER
         USING PARMS,R12          INFORM ASSEMBLER
         L     R11,PRMSMFP        POINT TO SMF RECORD
         USING SMF4,R11           INFORM ASSEMBLER
         LH    R10,SMF4RLCT       GET OFFSET TO RELOCATE SECTION
         AR    R10,R11            ADD ADDRESS OF SMF RECORD
         LA    R10,4(R10)         ADD LENGTH OF RDW
         USING SMF4RELO,R10       INFORM ASSEMBLER
         L     R9,PRMCOM          GET POINTER TO COMMON EXIT PARM LIST
         USING COM,R9             INFORM ASSEMBLER
         CLC   SMF4PGMN(8),=CL8'SYSRCHK' IS THIS RUNCHECK RTN?
         BE    EXIT               YES, SKIP GETMAIN AND EXIT
         CLC   SMF4PGMN(8),=CL8'NOTIFY' IS THIS NOTIFY RTN?
         BE    EXIT               YES, SKIP GETMAIN AND EXIT
         TM    COMSMFOP,X'01'     IS THIS A TSO USER?
         BO    EXIT               YES, SKIP GETMAIN AND EXIT
GETMAIN  GETMAIN R,LV=WORKEND-WORK GET ACTRT WORK AREA
         LR    R8,R1              POINT TO GETMAIN'D AREA
         MVC   0(WORKEND-WORK,R1),WORK MOVE CONSTANTS TO WORK AREA
         USING WORK,R8            INFORM ASSEMBLER
         SPACE 3
***********************************************************************
*
*        INITIALIZE JOBNAME, STEPNAME AND PGMNAME IN WTO'S
*
***********************************************************************
         MVC   JJN,SMF4JBN         MOVE JOBNAME TO JOB MSG
         MVC   STJN,SMF4JBN        MOVE JOBNAME TO STEP MSG
         MVC   RJN,SMF4JBN         MOVE JOBNAME TO RMT MSG
         MVC   STSN,SMF4STMN       MOVE STEPNAME TO STEP MSG
         MVC   STPN(8),SMF4PGMN    MOVE PROGRAM NAME TO WTO
         CH    R3,=H'16'           IS THIS JOB TERMINATION?
         BE    JOBTERM             YES, TO JOB TERMINATION ROUTINE
         EJECT
***********************************************************************
*
*        GET TASK EXCP COUNTS BY DEVICE TYPE
*
***********************************************************************
         SR    R3,R3               CLEAR TAPE ACCUMULATOR
         SR    R4,R4               CLEAR DISK ACCUMULATOR
         LA    R1,SMF4DEVC         GET START OF DEVICE SECTION
         LH    R2,SMF4LENN         GET SIZE OF DEVICE SECTION
         SRL   R2,3                DIVIDE BY 8 (LENGTH OF EACH ENTRY)
CHKNEXT  LTR   R2,R2               ANY DEVICE ENTRIES?
         BZ    EXCPDONE            NO, ALL DONE
         USING SMF4DEVC,R1         INFORM THE ASSEMBLER
         CLI   SMF4DEVC,X'80'      TAPE DEVICE?
         BNE   CHKDISK             NO, CHECK FOR DISK
         ICM   R0,15,SMF4EXCP      GET EXCP COUNT
         AR    R3,R0               ADD TO ACCUMULATOR
         B     NEXTEXCP            CHECK NEXT ENTRY
CHKDISK  CLI   SMF4DEVC,X'20'      DISK DEVICE?
         BNE   NEXTEXCP            NO, IGNORE IT
         ICM   R0,15,SMF4EXCP      GET EXCP COUNT
         AR    R4,R0               ADD TO ACCUMULATOR
NEXTEXCP LA    R1,8(R1)            BUMP TO NEXT ENTRY
         BCT   R2,CHKNEXT          CHECK NEXT ENTRY
         DROP  R1
EXCPDONE CVD   R3,WORK             CONVERT TO DECIMAL
         MVC   STTEC,=XL8'4020202020202120'
         ED    STTEC,WORK+4        MAKE IT PRINTABLE
         MVC   STTECQ,=C'/T'       PLACE KEYWORD
         CVD   R4,WORK             CONVERT TO DECIMAL
         MVC   STDEC,=XL8'4020202020202120'
         ED    STDEC,WORK+4        MAKE IT PRINTABLE
         MVC   STDECQ,=C'/D'       PLACE KEYWORD
         EJECT
***********************************************************************
*
*        GET AND CONVERT STEP COMPLETION CODE
*
***********************************************************************
         TM    SMF4STI,X'01'       STEP FLUSHED ?
         BZ    CHKABEND            NO - CHECK IF ABEND
         TM    COMUSER,COMMSG      HAVE WE DISPLAYED JCL ERROR ALREADY
         BO    DASHES              YES - BYPASS
         L     R15,PRMFLAGP        ADDR OF INIT FLAG
         TM    0(R15),X'01'        IS THIS A JCL ERROR OR CANCEL ?
         BZ    DASHES              NO - BYPASS
         OI    COMUSER,COMMSG      INDICATE JCL ERROR SET
         MVC   STCC,=CL5'-JCL-'    SET JCL ERROR COND CODE
         B     CCDONE              DONE WITH COMPLETION CODE
DASHES   MVC   STCC,=5C'-'         MOVE DASHES INDICTING STEP NOT RUN
         B     CCDONE              DONE WITH COMPLETION CODE
CHKABEND EQU   *
         MVI   STCC,C'R'           SET TO INDICATE A RETURN CODE
         TM    SMF4STI,X'02'       DID STEP ABEND ?
         BZ    DECIMAL             NO - CONVERT RET CODE TO DECIMAL
         OI    COMUSER,COMAB       YES, SET JOBTERM INDICATOR
         MVI   STCC,C'U'           YES - INDICATE USER ABEND
         TM    SMF4SCC,X'80'       WAS IT A USER ABEND ?
         BO    DECIMAL             YES - CONVERT ABEND CODE TO DECIMAL
         UNPK  SCRATCH(5),SMF4SCC(3) UNPK 1 MORE THAN FIELD LNGTH
         NC    SCRATCH(4),=4X'0F'  CLEAR SIGN BITS
         TR    SCRATCH(4),=C'0123456789ABCDEF' MAKE PRINTABLE
         MVC   STCC+1(3),SCRATCH+1 SHOW ABEND AS HEX VALUE
         MVI   STCC,C'S'           INDICATE SYSTEM ABEND CODE
         B     CCDONE
DECIMAL  EQU   *
         ICM   R1,3,SMF4SCC        PICK UP STEP COMPLETION CODE
         N     R1,DECMASK          CLEAR HIGH ORDER AND SIGN
         CVD   R1,WORK             TO PACKED DECIMAL
         MVC   SCRATCH(6),=X'402120202020' EDIT PATTERN
         ED    SCRATCH(6),WORK+5   MAKE PRINTABLE
         MVC   STCC+1(4),SCRATCH+2 MOVE TO DETAIL LINE
CCDONE   EQU   *
         EJECT
***********************************************************************
*
*        ISSUE WRITE TO PROGRAMMER FOR USER AND HARDCOPY
*
***********************************************************************
         CLI   279,X'FF'           IF DSS IS ACTIVE, DON'T PRINT
         BE    FREEMAIN            IT'S ON .. DON'T PRINT
         LA    R1,ST               SET WTO PARMLIST POINTER
         SVC   35                  ISSUE WRITE TO PROGRAMMER
         EJECT
***********************************************************************
*
*        IF THE USER SPECIFIED 'NOTIFY' AND IS LOGGED ON, INFORM USER
*
***********************************************************************
         CLC   STCC,=5C'-'         WAS STEP BYPASSED ?
         BE    FREEMAIN            YES, NO NEED TO INFORM
         L     R3,16               CVT ADDRESS
         L     R7,0(R3)            OLD/NEW POINTER
         L     R7,12(R7)           ASCB ADDRESS
         SR    R0,R0               CLEAR R0
         ICM   R0,3,36(R7)         PICK UP ASID FROM ASCB
         SLL   R0,2                MULTIPLY BY 4
         L     R1,296(R3)          GET JES CONTROL TABLE ADDR
         L     R1,24(R1)           GET JES SSCT
         L     R1,16(R1)           GET JES SSVT
         L     R15,388(R1)         GET JES ASVT
         AR    R15,R0              ADD OFFSET TO ADDRESS OF ASVT
         L     R15,0(R15)          GET INITIATORS SJB ADDRESS
         ICM   R15,15,84(R15)      GET INITIATOR'S DEPENDENT SJB
         BZ    FREEMAIN            IF ZERO THIS IS NOT BATCH
         L     R3,96(R15)          GET JOBS JCT ADDRESS
         CLI   340(R3),X'00'       WAS NOTIFY REQUESTED?
         BE    FREEMAIN            NO, NO ONE TO INFORM
         MVC   WORK(7),340(R3)     MOVE USERID TO WORK AREA
         MVI   WORK+7,C' '         CLEAR TRAILING BINARY ZERO
         MVI   STMCS+1,C' '        BLANK OUT WTO MCS CODES FIELD
         MVC   STEPJN(4),152(R3)   MOVE THE JOB NUMBER TO MCS AREA -1
         CNOP  0,4                 FULLWORD ALIGNED
         BAL   R1,*+8              AROUND CONSTANT
         DC    X'40000000'         USERID MASK FOR TPUT
         L     R1,0(R1)            PICK UP MASK
         LA    R15,STEPTPUT        ADDRESS OF MSG DATA
         OR    R1,R15              COMPLETE TPUT PARM
         LA    R0,STDISC-STEPTPUT  GET SIZE FOR TPUT MSG
         LA    R15,WORK            ADDRESS OF USERID
         SVC   93                  INFORM USER
         B     FREEMAIN            RETURN TO THE SYSTEM
         EJECT
***********************************************************************
*
*        JOB TERMINATION ROUTINE
*
*        BUILD JOB ABENDED/JCL ERROR OPERATOR MESSAGE
*
***********************************************************************
JOBTERM  EQU   *
         CLI   SMF4JBN+1,C'@'      CHECK FOR TEST JOBNAME
         BE    JOBNORM             NOT PROD, NO MESSAGE
         CLI   SMF4JBN+1,C'#'      CHECK FOR TEST JOBNAME
         BE    JOBNORM             NOT PROD, NO MESSAGE
         CLI   SMF4JBN+1,C'$'      CHECK FOR TEST JOBNAME
         BE    JOBNORM             NOT PROD, NO MESSAGE
         TM    COMUSER,COMMSG      WAS THERE A JCL ERROR OR CANCEL?
         BO    JOBMSG              YES, ISSUE MESSAGE
         TM    COMUSER,COMAB       DID 'ANY' STEP ABEND?
         BZ    JOBNORM             NO, DON'T ISSUE MESSAGE
         MVC   JSTAT(9),=CL9'ABENDED' MODIFY MESSAGE
JOBMSG   LA    R1,WTOX             FLAG WTO
         SVC   35                  WRITE IT
         LA    R1,J                SET MESSAGE POINTER
         SVC   35                  INFORM OPERATOR
         LA    R1,WTOX             FLAG WTO
         SVC   35                  WRITE IT
JOBNORM  EQU   *
***********************************************************************
*
*        ISSUE $DM 'JOB' ENDED MESSAGE FOR REMOTE USER IF REQUIRED
*
***********************************************************************
         CLC   COMUSER+2(2),=X'0000' WAS A REMOTE ID FOUND BY UJI?
         BE    FREEMAIN            NO, NO REMOTE MESSAGE REQUIRED
         MVC   RCMD+4(2),COMUSER+2 MOVE REMOTE ID TO COMMAND
         TM    COMUSER,COMMSG      WAS THERE A JCL ERROR OR CANCEL?
         BZ    RMTABCHK            NO, CONTINUE
         MVC   RST,=CL11'(JCL-ERROR)' ADD JCL INFO
         B     RMTMSG              ISSUE MESSAGE
RMTABCHK TM    COMUSER,COMAB       DID 'ANY' STEP ABEND?
         BZ    RMTMSG              NO, ISSUE NORMAL ENDED MSG
         MVC   RST,=CL11'(ABENDED)' MODIFY MESSAGE
RMTMSG   SR    R0,R0               CLEAR FOR SVC 34
         LA    R1,RMSG             SET SVC 34 PARM POINTER
         SVC   34                  ISSUE $DMR ENDED MESSAGE
         EJECT
***********************************************************************
*
*        FREE THE GOTTEN STORAGE AND EXIT TO THE SVC HANDLER
*
***********************************************************************
FREEMAIN FREEMAIN  R,LV=WORKEND-WORK,A=(8) FREE GOTTEN STORAGE
EXIT     SR    R15,R15             CLEAR RET CODE
         SR    R1,R1               CLEAR SMF INDICATOR
         BR    R14                 RETURN TO SVC HANDLER
         SPACE 5
*        THE FOLLOWING CONSTANTS ARE NOT MODIFIED
*
WTOX     WTO   '********************',ROUTCDE=2,MF=L
*              ' JJJJJJJJ JCL-ERROR *',ROUTCDE=2,DESC=2,MF=L
*              ' JJJJJJJJ ABENDED   *',ROUTCDE=2,DESC=2,MF=L
         DS    0F
DECMASK  DC    X'00007FFF'         STRIP MASK FOR USER ABEND CODE
         LTORG
         EJECT
***********************************************************************
*
*        THE FOLLOWING CONSTANTS MUST REMAIN JUST BEFORE THE
*        DSECT DESCRIPTIONS THAT FOLLOW.  THIS IS BECAUSE THE
*        DATA IS MOVED TO THE WORK AREA AND REFERENCED VIA
*        THEIR TRUE NAMES.
*
***********************************************************************
WORK     DC    D'0'                DOUBLE WORD WORK AREA
         SPACE 2
J        DC    AL2(JDISC-*)        JOB WTO PARMLIST LENGTH
JMCS     DC    X'8000',C' '        MCS FLAGS
JJN      DC    CL8' '              JOB NAME FIELD
         DC    CL1' '
JSTAT    DC    C'JCL-ERROR'        ENDED STATUS
         DC    C' *'               EYE-CATCHER
JDISC    DC    X'4000'             DISCRIPTOR CODES
JROUT    DC    X'4000'             ROUTING CODES (11)
         SPACE 2
         DS    0F
         DC    H'0'                HALFWORD NOT ALSO FULLWORD PAD
STEPTPUT DC    C'J'                STEP TPUT PARM LIST
STEPJN   DC    C' '                1ST CHAR OF JOB NUMBER (TOTAL 4 + 1)
ST       DC    AL2(STDISC-*)       STEP WTO PARMLIST LENGTH
STMCS    DC    X'8000'             MCS FLAGS
STJN     DC    CL8' '              JOB NAME FIELD
         DC    CL1' '
STSN     DC    CL8' '              STEPNAME FIELD
         DC    CL1' '
STPN     DC    CL8' '              PGM NAME FIELD
         DC    CL1' '
STTEC    DC    CL8' '              TAPE EXCP COUNT
STTECQ   DC    CL2' '
STDEC    DC    CL8' '              DISK EXCP COUNT
STDECQ   DC    CL2' '
         DC    CL1' '
STCC     DC    CL5' '              COMPLETION CODE
STDISC   DC    X'0000'             DISCRIPTOR CODES
STROUT   DC    X'0020'             ROUTING CODES (11)
         SPACE 2
RMSG     DC    AL2(REND-*,0)       MODEL $DMR COMMAND
RCMD     DC    C'$DMRXX, '''
RJN      DC    CL8' ',C' ENDED '
RST      DC    CL11' ',C''''
REND     DC    CL8' '  PADDING
SCRATCH  DS    CL15                SCRATCH PAD FOR CONVERSIONS
         DS    CL2                 EXTRA PADDING
WORKEND  EQU   *
***********************************************************************
         EJECT
SMF4     DSECT
*              DSECT MAPPING THE SMF TYPE 4 RECORD
SMF4RDW  DS    XL4            VARIABLE RECORD DISCRIPTOR WORD
SMF4FLG  DS    XL1            FLAG BYTE
SMF4RTY  DS    XL1            RECORD TYPE (4)
SMF4TME  DS    XL4            STEP TERM TIME
SMF4DTE  DS    PL4            STEP TERM DATE
SMF4SID  DS    CL4            SYSTEM ID
SMF4JBN  DS    CL8            JOB NAME
SMF4RST  DS    XL4            READER START TIME
SMF4RSD  DS    PL4            READER DATE
SMF4UIF  DS    CL8            USER IDENTIFICATION
SMF4STN  DS    XL1            STEP NUMBER
SMF4SIT  DS    XL4            STEP INIT TIME
SMF4STID DS    PL4            STEP INIT DATE
SMF4NCI  DS    XL4            SYSIN RECORD COUNT
SMF4SCC  DS    XL2            STEP COMPLETION CODE
SMF4PRTY DS    XL1            STEP DISPATCHING PRIORITY
SMF4PGMN DS    CL8            EXECUTED PROGRAM NAME
SMF4STMN DS    CL8            STEPNAME
SMF4RSH0 DS    XL2            REGION (PRIVATE AREA) SIZE
SMF4SYST DS    XL2            SYSTEM ADDRESS SPACE USED
SMF4H0ST DS    XL2            USER ADDRESS SPACE USED
SMF4RV1  DS    XL6            RESERVED
SMF4SPK  DS    XL1            PROTECT KEY USED
SMF4STI  DS    XL1            STEP TERMINATION INDICATOR
SMF4RV2  DS    XL2            RESERVED
SMF4AST  DS    XL4            ALLOCATION START TIME
SMF4PPST DS    XL4            PROBLEM PROGRAM START TIME
SMF4RV3  DS    XL1            RESERVED
SMF4SRBT DS    XL3            STEP SRB TIME
SMF4RIN  DS    XL2            RECORD INDICATOR
SMF4RLCT DS    XL2            OFFSET TO RELOCATE SECTION
SMF4LENN DS    XL2            LENGTH OF DEVICE ENTRY SECTIONS
SMF4DEVC DS    XL1            DEVICE CLASS
SMF4UTYP DS    XL1            UNIT TYPE
SMF4CUAD DS    XL1            CHANNEL ADDRESS
SMF4UAD  DS    XL1            UNIT ADDRESS
SMF4EXCP DS    XL4            EXCP COUNT
SMF4LNTH DS    XL1            LENGTH OF ACCOUNTING SECTION
SMF4SETM DS    XL3            STEP CPU TIME (TCB TIME)
SMF4NAF  DS    XL1            NUMBER OF ACCOUNTING FIELDS
SMF4ACTF DS    XL1            VARIABLE ACCOUNTING FIELDS (EXEC CARD)
SMF4RELO DSECT
*              RELOCATED SECTION OF RECORD 4
SMF4PGIN DS    XL4            NUMBER OF NON-VIO PAGE-INS
SMF4PGOT DS    XL4            NUMBER OF NON-VIO PAGE-OUTS
SMF4NSW  DS    XL4            NUMBER OF SWAPS
SMF4PSI  DS    XL4            NUMBER OF PAGES SWAPPED IN
SMF4PSO  DS    XL4            NUMBER OF PAGES SWAPPED OUT
SMF4VPI  DS    XL4            NUMBER OF VIO PAGE-INS
SMF4VPO  DS    XL4            NUMBER OF VIO PAGE-OUTS
SMF4SST  DS    XL4            STEP SERVICE UNITS AQUIRED
SMF4ACT  DS    XL4            TRANSACTION ACTIVE TIME
SMF4PGNO DS    XL2            PERFORMANCE GROUP NUMBER
SMF4TRAN DS    XL4            STEP RESIDENCY TIME (TIME IN REAL STG)
SMF4RECL DS    XL4            NUMBER OF PAGE RECLAIMS
SMF4RCLM DS    XL4            NUMBER OF VIO RECLAIMS
SMF4CPGN DS    XL4            NUMBER OF COMMON AREA PAGE-INS
SMF4CRCL DS    XL4            NUMBER OF COMMON AREA RECLAIMS
SMF4PGST DS    XL4            NUMBER OF PAGES STOLEN
SMF4PSEC DS    XL8            NUMBER OF PAGE SECONDS
PARMS    DSECT
*              REG 1 ENTRY MAPPING DSECT
PRMCOM   DS    A              ADDRESS OF COMMON EXIT PARM
PRMJBNP  DS    A              ADDRESS OF JOB NAME IN EBCDIC(8)
PRMPNP   DS    A              ADDRESS OF THE PROGRAMMER NAME(20)
PRMJTTP  DS    A              ADDRESS OF JOB (TCB) TIME(3)
PRMJACTP DS    A              ADDRESS OF JOB ACCOUNTING INFO(V)
PRMSTTP  DS    A              ADDRESS OF STEP (TCB) TIME(3)
PRMSACTP DS    A              ADDRESS OF STEP ACCOUNTING INFO(V)
PRMFLAGP DS    A              ADDRESS OF FL
PRMCCP   DS    A              ADDRESS OF COMPLETION CODE
PRMSMFP  DS    A              POINTER TO SMF RECORD
COM      DSECT
*              DSECT MAPPING COMMON EXIT PARM LIST
COMJN    DS    CL8            JOB NAME
COMRTIME DS    XL4            READER START TIME
COMRDATE DS    PL4            READER START DATE
COMSID   DS    CL4            SYSTEM ID FROM SMF PRM
COMUID   DS    CL8            USER IDENTIFICATION
COMSTNO  DS    XL1            CURRENT STEP NUMBER
COMSMFOP DS    XL1            SMF OPTIONS IN EFFECT
COMRST   DS    XL1            RESTART FLAGS
COMCLS   DS    CL1            JOB CLASS
COMUSER  DS    XL4            USER EXIT COMMUNICATION FIELD
COMMSG   EQU   X'01'          MESSAGE ISSUED INDICATOR FOR COMUSER
COMAB    EQU   X'02'          ANY STEP ABENDED INDICATOR
         END
