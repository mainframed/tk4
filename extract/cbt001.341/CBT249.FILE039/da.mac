*.                                                                    *
*. PROGRAM NAME: DA       DATE: 02/05/79 PROGRAMMER:                  *
*.                                                                    *
*.*FUNCTION OF PROGRAM:                                               *
*.            THIS PROGRAM PROVIDES A FUNCTIONAL EQUIVALENT OF THE    *
*.       'D J,L' AND 'D TS,L' SUBCOMMANDS OF THE TSO 'OPER' COMMAND   *
*.       FOR NON-OPER-AUTHORIZED TSO USERS.                           *
*.                                                                    *
*.*HOW TO USE:                                                        *
*.            THE PROGRAMMER SHOULD KEY IN 'DJ' TO LIST ALL BATCH     *
*.       JOBS AND STARTED TASKS CURRENTLY ACTIVE IN THE SYSTEM, AS    *
*.       WELL AS THEIR SWAPPED OUT STATUS.                            *
*.                                                                    *
*.            THE PROGRAMMER SHOULD KEY IN 'DTS' TO LIST ALL TSO      *
*.       SESSIONS CURRENTLY ACTIVE IN THE SYSTEM, AS WELL AS THEIR    *
*.       AS THEIR SWAPPED OUT STATUS.                                 *
*.                                                                    *
*.            THE PROGRAMMER SHOULD KEY IN 'DA' TO LIST ALL BATCH     *
*.       JOBS, STARTED TASKS, AND TSO SEDSSIONS CURRENTLY ACTIVE IN   *
*.       THE SYSTEM, AS WELL AS THEIR SWAPPED OUT STATUS.             *
*.                                                                    *
*.*LINKAGE EDITOR ATTRIBUTES AND CONSIDERATIONS --------------------- *
*. ALIASES:                                                           *
*.       DJ DTS                                                       *
*. ENTRY POINTS:                                                      *
*.       DA DJ DTS                                                    *
*.                                                                    *
*. SUBROUTINES:                                                       *
*.            THIS PROGRAM USES THE 'CLEAR' SUBROUTINE TO CLEAR THE   *
*.       TSO SCREEN PRIOR TO LISTING ITS OUTPUT.  THIS LINK CAN BE    *
*.       REMOVED FOR USE AT INSTALLATIONS NOT USING SPF OR IPCS.      *
*.                                                                    *
         EJECT
DA       CSECT
         ENTRY DJ,DTS
         USING *,R15
         OI    SWITCH,J+TS
         B     AROUND
         USING *,R15
DJ       OI    SWITCH,J
         B     AROUND
         USING *,R15
DTS      OI    SWITCH,TS
         DROP  R15
AROUND   EQU   *
         BALR  R12,0              SET BASE REGISTER
         USING *,R12              INFORM THE ASSEMBLER
         LINK  EP=CLEAR
         CLI   SWITCH,X'02'       CHECK FOR DTS
         BE    MOVEDTS            GO TO HDR DTS - TSO
         CLI   SWITCH,X'01'       CHECK FOR DJ
         BE    MOVEDJ             GO TO HDR DJ  - BATCH
         TPUT  SLINE,L'SLINE      PRINT HEADER LINE 1 ALL
NEXPUT   TPUT  ALINE,L'ALINE      PRINT HEADER LINE 2
         TPUT  BLINE,L'BLINE      PRINT BLANK LINE
         L     R2,16              GET THE ADDRESS OF THE CVT IN REG 2
         L     R2,148(R2)         GET ADDRESS MASTER SCHED RES DATA
         SR    R3,R3              CLEAR CSCB REG FOR ICM
CSCBLOOP ICM   R3,7,1(R2)         GET CSCB CHAIN POINTER
         BZ    ALLDONE            ZERO, NO MORE CSCB'S
         LR    R2,R3              COPY FOR NEXT LOOP
         TM    28(R3),X'03'       CHECK FOR INIT
         BO    CSCBLOOP           YES, DO NOT DISPLAY
         SPACE 1
         TM    28(R3),X'01'       CHECK FOR TSU
         BZ    NOTTSU             NO, CHECK NEXT
         TM    SWITCH,TS          WAS TSU REQUESTED?
         BZ    CSCBLOOP           NO, SKIP IT
         MVC   JOBN,8(R3)         MOVE THE JOBNAME
         MVC   STEPN,32(R3)       MOVE THE STEPNAME
         MVC   PROCN,16(R3)       MOVE THE PROCNAME
         MVC   TYPE,=C'TSU'       MOVE TYPE
         B     PROCESS            WRITE MESSAGE
         SPACE 1
NOTTSU   TM    SWITCH,J           WERE JOBS REQUESTED?
         BZ    CSCBLOOP           NO, SKIP IT
         CLI   04(R3),X'04'       CHECK FOR STC
         BE    STC                YES, PROCESS SAME
         MVC   JOBN,8(R3)         MOVE THE JOBNAME
         MVC   STEPN,64(R3)       MOVE THE STEPNAME
         MVC   PROCN,32(R3)       MOVE THE PROCNAME
         MVC   TYPE,=C'JOB'       MOVE TYPE
         B     PROCESS            WRITE MESSAGE
         SPACE 1
STC      MVC   JOBN,16(R3)        MOVE THE JOBNAME
         MVC   STEPN,8(R3)        MOVE THE STEPNAME
         MVC   PROCN,32(R3)       MOVE THE PROCNAME
         MVC   TYPE,=C'STC'       MOVE TYPE
PROCESS  LH    R4,30(R3)          GET ASID FOR INDEX
         SLL   R4,2               MULTIPLY BY FOUR
         L     R5,16              GET CVT
         L     R5,556(,R5)        GET ADDRESS OF THE ASVT
         L     R5,524(R5,R4)      ADDR OF ASCB
         L     R6,144(R5)         ADDR OF OUCB
         MVI   STAT1,C' '         CLEAR OUTPUT FIELD
         MVC   STAT2,=CL8' '      CLEAR OUTPUT FIELD
         TM    102(R5),X'04'      SWAPPED OUT?
         BZ    NOSWAP             NO, SKIP FLAG
         MVI   STAT1,C'S'         INDICATE SAME
NOSWAP   TM    17(R6),X'80'       NON-SWAPPABLE?
         BZ    NOTNS              NO, SKIP FLAG
         MVI   STAT1,C'N'         INDICATE SAME
NOTNS    TM    17(R6),X'04'       PRIVILEGED?
         BZ    NOTPRIV            NO, SKIP FLAG
         MVI   STAT1,C'P'         INDICATE SAME
NOTPRIV  TM    21(R6),X'01'       DETECTED WAIT?
         BZ    NOTDETW            NO SKIP FLAG
         MVC   STAT2,=C'DW'       INDICATE SAME
NOTDETW  TM    21(R6),X'80'       LONG WAIT?
         BZ    NOTLONG            NO SKIP FLAG
         MVC   STAT2,=C'LW'       INDICATE SAME
NOTLONG  TM    21(R6),X'40'       TERMINAL INPUT
         BZ    NOTTI              NO SKIP FLAG
         MVC   STAT2,=C'TI'       INDICATE SAME
NOTTI    TM    21(R6),X'20'       TERMINAL OUTPUT
         BZ    NOTTO              NO SKIP FLAG
         MVC   STAT2,=C'TO'       INDICATE SAME
NOTTO    TM    21(R6),X'08'       ENQUEUE WAIT
         BZ    NOTENQ             NO SKIP FLAG
         MVC   STAT2,=C'NQ'       INDICATE SAME
NOTENQ   EQU   *
         CLI   SWITCH,X'02'       CHECK FOR TSU OPTION
         BE    SETTSU             GO TO SETTSU
NEXENQ   CLI   LSW,C' '           CHECK PRINT SW FOR LEFT SIDE
         BE    MOVELEFT           MOVE IN LEFT PRINT AREA
         CLI   LSW,C'1'           CHECK PRINT SW FOR RIGHT SIDE
         BE    MOVERIGT           MOVE IN RIGHT PRINT AREA
SETTSU   MVC   STEPN,=C'* TSO *'  MOVE IN TSO CHAR
         B     NEXENQ             GO BACK
ERROR    TPUT  ELINE,L'ELINE      WRITE ERROR LINE
         B     CSCBLOOP           GET NEXT CSCB
MOVEDTS  TPUT  SLINE3,L'SLINE3    PRINT HEADER LINE 1 TSO
         B     NEXPUT
MOVEDJ   TPUT  SLINE2,L'SLINE2    PRINT HEADER LINE 1 BATCH
         B     NEXPUT
PUTIT    TPUT  CLINE,L'CLINE      WRITE MESSAGE LINE
         MVC   LSW,=C' '          RESET PRINT SWITCH
         B     CSCBLOOP           GET NEXT CSCB
ALLDONE  CLI   LSW,C' '           CHECK IF LAST DATA FILLED
         BE    ALLDON2            IF DONE, DON'T WRITE
         CLI   LSW,C'1'           CHECK IF LEFT ONLY FILLED
         BE    SPRIGHT            GO TO SPACE-RIGHT
LASTWR   TPUT  CLINE,L'CLINE      WRITE LAST LINE
ALLDON2  SR    R15,R15            CLEAR RETCODE
         BR    R14                RETURN TO CALLER
         SPACE 3
MOVELEFT MVC   LSW,=C'1'          SET LEFT PRINT FLAG
         MVC   CLEFT,PLINE        MOVE IN LEFT SIDE
         B     CSCBLOOP           GET NEXT CSCB
SPRIGHT  MVC   CRIGHT,FLINE       MOVE SPACES TO RIGHT
         B     LASTWR             GO TO LAST WRITE
MOVERIGT MVC   LSW,=C'2'          SET FULL PRINT FLAG
         MVC   CRIGHT,PLINE       MOVE IN RIGHT SIDE
         B     PUTIT              GO TO WRITE LINE
SWITCH   DC    X'00'              OPTION SWITCH
J        EQU   X'01'              DISPLAY JOBS REQUEST
TS       EQU   X'02'              DISPLAY TSU REQUEST
LSW      DC    C' '               LINE PRINT SWITCH
*   SPACE IS NO FILLED, '1' IS LEFT FILLED, '2' IS BOTH FILLED
*
PLINE    DS    0CL40
TYPE     DC    CL3' ',CL2' '
JOBN     DC    CL8' ',CL2' '
STEPN    DC    CL8' ',CL2' '
PROCN    DC    CL8' ',CL1' '
STAT1    DC    CL1' ',CL1' '
STAT2    DC    CL2' ',CL2' '
         SPACE
CLINE    DS    0CL80
CLEFT    DC    CL40' '
CRIGHT   DC    CL40' '
         SPACE 3
SLINE    DS    0CL80
         DC    C'----------------------------- DISPLAY AC'
         DC    C'TIVE ALL ------------------------------',CL1' '
SLINE2   DS    0CL80
         DC    C'----------------------------- DISPLAY AC'
         DC    C'TIVE BATCH ----------------------------',CL1' '
SLINE3   DS    0CL80
         DC    C'----------------------------- DISPLAY AC'
         DC    C'TIVE TSO ------------------------------',CL1' '
ALINE    DS    0CL80
         DC    C'TYPE JOBNAME   STEPNAME  PROCSTEP S W',CL3' '
         DC    C'TYPE JOBNAME   STEPNAME  PROCSTEP S W',CL3' '
BLINE    DS    0CL80
         DC    80C' '
FLINE    DS    0CL40
         DC    40C' '
ELINE    DS    0CL80
         DC    C'ERROR IN MESSAGE ROUTINE'
         DC    CL58' '
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
