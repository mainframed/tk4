         TITLE 'IEFUTL TIME LIMIT INITIATOR EXIT'
***********************************************************************
*                                                                     *
* FUNCTION                                                            *
*    THIS MODULE IS INVOKED WHEN THE JOB CPU TIME, STEP CPU TIME, OR  *
*    JOB WAIT TIME LIMIT IS EXCEEDED.  FOR IMS JOBS, IT WILL          *
*    REQUEST THAT THE OPERATOR DO A 'STOP REGION ABDUMP' AND ALLOW    *
*    AN ADDITIONAL THREE MINUTES OF TIME.  FOR NON-IMS JOBS, IT       *
*    WILL REQUEST DISPOSITION FROM THE OPERATOR.                      *
*                                                                     *
*    NOTE THAT TSO SESSIONS WILL BE ALLOWED TO CANCEL IMMEDIATELY.    *
*                                                                     *
* ENTRY POINT                                                         *
*    IEFUTL                                                           *
*                                                                     *
* INPUT                                                               *
*    REG 0 = X'00' IF THE JOB CPU TIME LIMIT IS EXCEEDED.             *
*    REG 0 = X'04' IF THE STEP CPU TIME LIMIT IS EXCEEDED.            *
*    REG 0 = X'08' IF THE JOB CONTINUOUS WAIT TIME LIMIT IS EXCEEDED. *
*    REG 1 = ADDR OF CEPA (COMMON EXIT PARM AREA)                     *
*                                                                     *
* OUTPUT                                                              *
*    REG 15 = X'00' IF JOB PROCESSING IS TO BE CANCELED.              *
*    REG 15 = X'04' IF JOB PROC'G TO CONT'D-EXTENSION IN TIMER UNITS  *
*    REG 15 = X'08' IF JOB PROC'G TO CONT'D-EXTENSION IN SECONDS      *
*    REG  1 = AMOUNT OF TIME EXTENSION                                *
*                                                                     *
*    A MESSAGE WILL BE WRITTEN TO THE OPERATOR WHICH WILL GIVE HIM    *
*    THE OPTION TO CANCEL THE JOB IN QUESTION.  PRIOR TO ISSUING THE  *
*    'WTO' THIS MODULE WILL TEST WITH 'ENQ' TO PREVENT SYSTEM         *
*    INTERLOCK.  IF THE TEST FAILS, A ONE SECOND EXTENSION WILL BE    *
*    GRANTED WITHOUT NOTIFICATION TO THE OPERATOR.                    *
*                                                                     *
* EXTERNAL REFERENCES                                                 *
*    NONE                                                             *
*                                                                     *
* NOTES                                                               *
*    GETMAIN AND FREEMAIN USED.  SUBPOOL = 254.                       *
*                                                                     *
*          NOTE: THIS ROUTINE IS LINKEDITED AS AN SVC (TYPE 3)        *
*                TO BE INCLUDE VIA AN 'MLPA' AT IPL TIME.             *
*                IT IS BEST TO LINK WITH THE NAME OF IEFUTL           *
*                WITH AN ALIAS OF THE USED SVC (E.G. IGC00XXX).       *
*                ALSO, SINCE THIS ROUTINE MUST BE REENTRANT, NO       *
*                IN-LINE MACRO EXPANSIONS MAY BE USED (E.G. DO        *
*                NOT USE A MACRO THAT GENERATES AN ADCON).            *
*                                                                     *
***********************************************************************
         EJECT
**********************************************************************
*                                                                    *
*        INITIALIZATION AND PRE-TEST                                 *
*                                                                    *
**********************************************************************
*
*        BECAUSE WE ARE AN SVC, THERE IS NO NEED TO SAVE THE CALLERS
*        REGISTERS (THE SYSTEM HAS ALREADY SAVED THEM).  ALSO,
*        CERTAIN REGISTERS HAVE BEEN PRIMED FOR US AS FOLLOWS:
*
*        REGISTERS USED:                                              *
*
R0       EQU    0 = WORK
R1       EQU    1 = WORK
R2       EQU    2 = WORK
R3       EQU    3 = WORK
R4       EQU    4 = WORK
R5       EQU    5 = WORK
R6       EQU    6 = BASE REGISTER FOR THIS ROUTINE
R7       EQU    7 = SAVE REG FOR ENTRY CODE (R-0)
R8       EQU    8 = BASE FOR GOTTEN WORK AREA
R9       EQU    9 = RETURN VALUE SAVE (WILL BECOME R-1)
R10      EQU   10 = RETURN CODE SAVE (WILL BECOME R-15)
R11      EQU   11 = WORK
R12      EQU   12 = BASE FOR COMMON EXIT PARM AREA (CEPA)
R13      EQU   13 = SAVE AREA POINTER
R14      EQU   14 = WORK (RETURN ADDR)
R15      EQU   15 = WORK
IEFUTL   CSECT
         USING *,R6           INFORM THE ASSEMBLER OF OUR BASE REG
         LR    R7,R0               SAVE THE CONTENTS OF R0
         L     R12,0(R1)           GET ADDRESS OF CEPA
         USING COM,R12             INFORM THE ASSEMBLER
         SR    R15,R15             ALLOW CANCEL
         TM    COMSMFOP,X'01'      IS THIS TSO FOREGROUND?
         BOR   R14                 YES, ALLOW CANCEL
**********************************************************************
*                                                                    *
*        ENQUEUE CONLICTS ARE CHECKED TO AVOID A SYSTEM INTERLOCK    *
*                                                                    *
**********************************************************************
         LA    R9,1               SET DEFAULT EXTENSION VALUE (1 SEC)
         LA    R10,8              SET EXTENSION IS IN SECONDS
         ENQ   (MAJOR,MINOR,E,,SYSTEM),RET=TEST CHECK WTO RESOURCE
         LTR   R15,R15            IS USER WITHIN WTO NOW?
         BNZ   RETURN             YES, GIVE 1 SECOND EXTENSION
         GETMAIN R,LV=WORKEND-WORK,SP=254  GET A WORK AREA
*        MVC   0(WORKEND-WORK,R1),WORK MOVE MODIFIED CONSTANTS
         MVC   0(256,R1),WORK     MOVE MODIFIED CONSTANTS
         MVC   256(WORKEND-WORK-256,R1),WORK+256 WORK MOVE THE REST
         LR    R8,R1              COPY TO BASE REG
         USING WORK,R8            INFORM THE ASSEMBLER
**********************************************************************
*                                                                    *
*   THIS SECTION DETERMINES IF THE JOB EXECUTING IS AN IMS JOB.      *
*   IF THE PROGRAM IS EXECUTING UNDER THE RB OF THE BMP REGION       *
*   CONTROLLER (DFSRRC40) IT IS CONSIDERED TO BE AN IMS PROGRAM.     *
*                                                                    *
**********************************************************************
         SR    R15,R15            CLEAR FOR COMPARE
         L     R1,16              ADDR OF CVT
         L     R1,0(R1)           ADDR OF OLD/NEW POINTERS
         L     R1,4(R1)           ADDR OF CURRENT TCB (OURS)
         B     CHECKTCB           CHECK IF THIS IS LAST
NEXTTCB  L     R1,136(R1)         ADDR OF NEXT LOWER TCB
CHECKTCB C     R15,136(R1)        IS THERE A LOWER TCB ADDRESS?
         BNE   NEXTTCB            YES, CHECK LOWER ONE
         L     R4,124(R1)         GET ADDRESS OF 'JOBSTEP' TCB
         L     R1,0(R4)           LOAD ADDR 1ST RB ON CHAIN
         LR    R5,R1              SAVE ADDR OF SECONDARY RB
NEXTRB   C     R4,28(R1)          IS THIS THE 'LAST' RB ON CHAIN?
         BE    CHECKPGM           YES, CHECK FOR IMS NAME
         LR    R5,R1              SAVE ADDR OF SECONDARY RB
         L     R1,28(R1)          LOAD ADDR OF PREVIOUS RB
         B     NEXTRB             CHECK NEXT RB FOR END
CHECKPGM L     R2,12(R4)          ADDR OF THE TIOT
         MVC   JOBNAME1,0(R2)     MOVE JOBNAME TO MESSAGE
         MVC   JOBNAME2,0(R2)     MOVE JOBNAME TO MESSAGE
         SR    R15,R15            CLEAR FOR IC
         IC    R15,COMSTNO        GET STEP NUMBER
         CVD   R15,DBLWORD        CONVERT TO DECIMAL
         UNPK  STEPNUM(3),DBLWORD+6(2) MAKE IT PRINTABLE
         OI    STEPNUM+2,C'0'     MAKE LAST PRINTABLE TOO
         L     R2,12(R1)          ADDR OF CDE FOR ACTIVE PROGRAM
         CLC   8(8,R2),=CL8'DFSRRC00' IS THIS THE IMS CONTROLLER?
         BE    IMSJOB             YES, CHECK FURTHUR
         CLC   8(8,R2),=CL8'DFSNRC00' IS THIS THE IMS CONTROLLER?
         BNE   NONIMS             NO, SKIP TO CHECK CLASS OF NON-IMS
**********************************************************************
*                                                                    *
*   THIS SECTION PROCESSES IMS PROGRAM TIME OUTS AND EXTENDS THE     *
*   TIME BY 3 MINUTES TO ALLOW THE OPERATOR TO ISSUE A /STOP REGION  *
*   ABDUMP COMMAND.                                                  *
*                                                                    *
**********************************************************************
IMSJOB   L     R2,12(R5)          ADDR OF CDE FOR NEXT PROGRAM
         CLC   8(8,R2),=CL8'DFSRRC40' IS THIS A BMP REGION?
         BE    SETIMS             YES, ALLOW A STOP REGION ABDUMP
         CLC   8(8,R2),=CL8'DFSPCC30' IS THIS A MESSAGE REGION?
         BNE   NONIMS             NO,  ALLOW CANCEL BY OPERATOR
SETIMS   LA    R9,180             SET 3 MINUTES EXTENSION
         LA    R10,8              SET EXTENSION IS IN SECONDS
         LA    R1,WTO2            ADDRESS OF MESSAGE
         WTO   MF=(E,(R1))        INFORM THE OPERATOR
         B     RETSET             CONTINUE
         EJECT
**********************************************************************
*                                                                    *
*   THIS SECTION PROCESS ALL NON-IMS PROGRAM TIME OUTS.  THE         *
*   OPERATOR IS NOTIFIED AS TO THE JOBNAME, JOB CLASS, AND THE       *
*   JOB STEP NUMBER.  THE OPERATOR MAY ALLOW CANCEL, TAKE THE        *
*   DEFAULT OF 10 MINUTES OR SPECIFY ADDITIONAL TIME BETWEEN 1 AND   *
*   99 MINUTES.                                                      *
*                                                                    *
**********************************************************************
NONIMS   SR    R10,R10            INDICATE CANCEL
*        CLI   COMCLS,C'C'        IS THIS A 'TEST' CLASS?
         BE    RETSET             YES, CANCEL
         C     R7,=F'8'           WAIT TIME EXCEEDED?
         BE    CONTMSG            YES, BYPASS MOVE OF CPU MSG
         MVC   TYPE,=CL4'CPU'     MODIFY MESSAGE TEXT
CONTMSG  MVC   JOBCLASS,COMCLS    ADD JOB CLASS TO MSG
         LA    R1,WTO1            SET MESSAGE ADDRESS
         WTO   MF=(E,(R1))        DISPLAY TO OPERATOR
ASKAGAIN XC    WAITECB,WAITECB    CLEAR ECB FOR WTOR
         MVC   REPLY,=CL2' '      CLEAR REPLY AREA
         SR    R10,R10            INDICATE CANCEL
         WTOR  ,REPLY,2,WAITECB,MF=(E,WTOR) ASK FOR EXTENSION
         WAIT  ECB=WAITECB,LONG=YES  AWAIT OPERATOR REPLY
**********************************************************************
*                                                                    *
*   CHECK THE OPERATOR RESPONSE FOR ACCURACY...A U=CANCEL,           *
*   A D=DEFAULT AND 01 THRU 99 ARE MINUTE EXTENSIONS.  ANYTHING      *
*   ELSE IN THIS FIELD IS NOT VALID AND WILL RESULT IN ANOTHER       *
*   DISPLAY TO THE OPERATOR                                          *
*                                                                    *
**********************************************************************
OPERACTN EQU   *
         OC    REPLY,=CL2' '      FORCE UPPER CASE
         CLI   REPLY,C'U'         OPERATOR DESIRE CANCEL?
         BE    RETSET             YES, BRANCH TO CANCEL
         LA    R10,8              INDICATE TIME IN SECONDS
         LA    R9,600             ASSUME DEFAULT (10 MINUTES)
         CLI   REPLY,C'D'         OPERATOR DESIRE DEFAULT EXTN?
         BE    RETSET             YES, BRANCH TO TAKE DEFAULT
         CLI   REPLY,C'1'         VALID REPLY?
         BL    OPERERR            NO, INFORM THE OPERATOR
         CLI   REPLY+1,C' '       SINGLE DIGIT ENTERED?
         BNE   TWODIGIT           NO, TWO DIGITS
         IC    R9,REPLY           PICK UP DIGIT
         N     R9,=X'0000000F'    STRIP SIGN DIGIT
         MH    R9,=H'60'          MULTIPLY BY SIXTY
         B     RETSET             CONTINUE
TWODIGIT CLI   REPLY+1,C'0'       2ND CHARACTER VALID?
         BL    OPERERR            NO, BRANCH TO OPERATOR ERROR
         PACK  DBLWORD,REPLY      PACK THE TIME EXTENSION
         MP    DBLWORD,SIXTY      CONVERT THE TIME TO SECONDS
         CVB   R9,DBLWORD         LOAD THE REQUESTED TIME EXTENSION
         B     RETSET             CONTINUE
OPERERR  WTO   'IEFUTL INVALID REPLY, RE-ENTER',ROUTCDE=2
         B     ASKAGAIN           ASK ONE MORE TIME
**********************************************************************
**  ISSUE A FREEMAIN, RESTORE THE CALLERS REGISTERS AND RETURN      **
**  CONTROL                                                         **
**********************************************************************
RETSET   LR    R1,R8              ADDRESS OF AREA TO FREE
         FREEMAIN R,LV=WORKEND-WORK,A=(1),SP=254 FREE WORKAREA
RETURN   LR    R1,R9              LOAD EXTENSION VALUE
         LR    R15,R10            LOAD RETURN CODE
         BR    R14                RETURN
**********************************************************************
**  PROGRAM CONSTANTS THAT ARE NOT MODIFIED BY THIS ROUTINE         **
**********************************************************************
MAJOR    DC    CL8'SYSSJWTP'      COMMON ENQUEUE NAME
MINOR    DC    CL8'JSCBWTP'       COMMON ENQUEUE NAME
SIXTY    DC    PL4'60'            60 SECOND MULTIPLIER
         LTORG
**********************************************************************
*                                                                    *
*   PROGRAM CONSTANTS THAT ARE MODIFIED BY THIS ROUTINE              *
*                                                                    *
*   BECAUSE THE FOLLOWING CONSTANTS ARE REFERENCED VIA THEIR TRUE    *
*   NAMES, YOU MUST INSURE THAT NO OTHER DATA IS PLACED BEYOND       *
*   THE LABEL WORKEND.  (THIS SECTION MUST PRECEED THE DSECTS)       *
*                                                                    *
**********************************************************************
         DS    0D
WORK     EQU   *
WTO1     DC    AL2(WTO1END-*),X'8000'  WTO PREFIX
         DC    C'IEFUTL - '
TYPE     DC    CL4'WAIT',C' TIME EXCEEDED FOR JOB '
JOBNAME1 DC    CL8' ',C' STEP-NUMBER='
STEPNUM  DC    CL3'000',C' CLASS='
JOBCLASS DC    CL1' '
WTO1END  DC    X'00004000'
         SPACE 2
         DS    0F
WTO2     DC    AL2(WTO2END-*),X'8000'
         DC    C'IEFUTL - TIME HAS BEEN EXTENDED FOR YOU TO DO A ''STOP*
                REGION ABDUMP FOR JOB '
JOBNAME2 DC    CL8' ',C''''
WTO2END  DC    X'40004000'
WTOR     WTOR  'IEFUTL - TO CANCEL JOB REPLY U; TO EXTEND JOB REPLY D (*
               DEFAULT) OR A NO. OF MINUTES FROM 01 TO 99',            *
               ROUTCDE=2,MF=L
DBLWORD  DC    D'0'
WAITECB  DC    F'0'
REPLY    DC    H'0'
WORKEND  EQU   *
*              DSECT MAPPING COMMON EXIT PARM LIST
COM      DSECT
COMJN    DS    CL8            JOB NAME
COMRTIME DS    XL4            READER START TIME
COMRDATE DS    PL4            READER START DATE
COMSID   DS    CL4            SYSTEM ID FROM SMF PRM
COMUID   DS    CL8            USER IDENTIFICATION
COMSTNO  DS    XL1            CURRENT STEP NUMBER
COMSMFOP DS    XL1            SMF OPTIONS IN EFFECT
COMRST   DS    XL1            RESTART FLAGS
COMCLS   DS    CL1            JOB CLASS
COMUSER  DS    XL4            USER EXIT COMMUNICATION FIELD
COMMSG   EQU   X'01'          MESSAGE ISSUED INDICATOR FOR COMUSER
UJI      EQU   X'02'          UJI PROCESSING INDICATOR
COMAB    EQU   X'04'          ANY STEP ABENDED INDICATOR
         END
