*----------------------------------------------------------------------
*
*                   JAN ,1979
*
*        THIS PROGRAM PRODUCES A VSAM SPACE UTILIZATION BY VOLUME
*        REPORT.  FOR EACH VOLUME LISTED, THE AMOUNT OF FREE SPACE
*        WITHIN DATA-SPACES IS LISTED AS WELL AS THE AMOUNT OF SPACE
*        ALLOCATED TO EACH DATA-SPACE.
*
*        REQUIRED JCL:
*
*   //VSAMLSPC JOB (ACCT),PGMRNAME,CLASS=A,MSGCLASS=A
*   //VSAMLSPC EXEC PGM=VSAMLSPC
*   //SYSPRINT DD   UNIT=SYSDA,SPACE=(CYL,(2,3)) <=== WORK DATASET
*   //SYSOUT   DD   SYSOUT=*                     <=== REPORT LISTING
*   //SYSIN    DD   *                            <=== IDCAMS INPUT
*    LISTC CAT(USERCAT.DATASET.NAME) SPACE ALL
*
*----------------------------------------------------------------------
         EJECT
*----------------------------------------------------------------------
*
*        INVOKE IDCAMS - LISTC CAT(....) SPACE ALL
*
*----------------------------------------------------------------------
VSAMLSPC $PROLOG
ENTRY010 DS    0H
         LINK  EP=IDCAMS,PARAM=H0,VL=1
         LTR   R15,R15            ZERO RC ?
         BNZ   ERROR1
         OPEN  (SYSPRINT,,SYSOUT,(OUTPUT))
EXIT010  EQU   *
         B     ENTRY020
H0       DC    H'0'
         LTORG
         EJECT
*----------------------------------------------------------------------
*
*        FIND A VOLUME RECORD
*
*----------------------------------------------------------------------
ENTRY020 DS    0H
         GET   SYSPRINT
         LR    R10,R1
         LR    R5,R1     SAVE BEGINNING ADDR FOR LATER
XXX020   EQU   *
         CLC   5(6,R10),=C'VOLUME'  IS THIS A VOLUME HEADER ?
         BNE   ENTRY020           NO - FIND ONE
         XR    R2,R2
         ICM   R2,3,0(R10)        LENGTH OF RECORD
         SH    R2,=H'22'          DISPL TO VOLUME NAME + 1
         EX    R2,MVCVOL          MOVE VOLUME NAME
AAA020   EQU   *
         GET   SYSPRINT
         LR    R5,R1     SAVE BEGINNING ADDR FOR LATER
         LR    R10,R1
         XR    R2,R2
         ICM   R2,3,0(R10)        LENGTH OF RECORD
LOOP020A EQU   *
         CLC   0(15,R10),=C'DATASPCS-ON-VOL'
         BE    LOOP020B
         LA    R10,1(R10)         BUMP TO NEXT BYTE
         BCT   R2,LOOP020A        CHECK IT
         B     AAA020
LOOP020B EQU   *
         LA    R10,1(R10)         BUMP TO NEXT BYTE
         TM    0(R10),X'F0'       FIND A NUMERIC
         BO    CCC020
         BCT   R2,LOOP020B        KEEP LOOKING
         B     ERROR2             SHOULD NOT HAPPEN
CCC020   EQU   *
         MVC   WORK16,=16C'0'     INITIALIZE
         LA    R3,WORK16+16       END OF WORK AREA + 1
         SH    R2,=H'1'           LENGTH OF DATA
         SR    R3,R2              BACKUP LENGTH OF NUMBER
         SH    R2,=H'1'           DECR FOR EXECUTE
         EX    R2,MVCDS           RIGHT JUSTIFY NUMBER OF DATA SPACES
         PACK  DBWRD,WORK16       PACK IT
         CVB   R4,DBWRD           CONVERT TO BINARY
EXIT020  EQU   *
         B     ENTRY030
         LTORG
MVCVOL   MVC   PRVOLUME(0),21(R10)
MVCDS    MVC   0(0,R3),0(R10)
         EJECT
*----------------------------------------------------------------------
*
*        FIND AN EXTENT DERSCRIPTOR AND TOTAL TRACKS RECORD
*
*----------------------------------------------------------------------
ENTRY030 DS    0H
         GET   SYSPRINT
         LR    R10,R1
         LR    R5,R1     SAVE BEGINNING ADDR FOR LATER
         XR    R2,R2
         ICM   R2,3,0(R10)        LENGTH OF RECORD
LOOP030A EQU   *
         CLC   0(18,R10),=C'EXTENT-DESCRIPTOR:'
         BE    AAA030
         LA    R10,1(R10)         BUMP TO NEXT BYTE
         BCT   R2,LOOP030A        CHECK IT
         B     ENTRY030
AAA030   EQU   *
         GET   SYSPRINT           GET 'TRACKS-TOTAL' RECORD
         LR    R5,R1     SAVE BEGINNING ADDR FOR LATER
         CLI   4(R1),C'1'         HEADING LINE ?
         BE    AAA030
         CLI   4(R1),C'-'         HEADING LINE ?
         BE    AAA030
         LR    R10,R1
         XR    R2,R2
         ICM   R2,3,0(R10)        LENGTH OF RECORD
LOOP030B EQU   *
         CLC   0(12,R10),=C'TRACKS-TOTAL'
         BE    LOOP030C
         LA    R10,1(R10)         BUMP TO NEXT BYTE
         BCT   R2,LOOP030B        CHECK IT
         BCT   R4,ENTRY030        GET NEXT DATA SPACE EXTENT DESCRIPTOR
         BAL   R14,ENTRY900       PRINT TOTALS
         LR    R10,R5             ADDR OF START OF CUR REC
         LR    R1,R5              ADDR OF START OF CUR REC
         B     XXX020             SEE  IF THIS IS A VOLUME RECORD
LOOP030C EQU   *
         TM    0(R10),X'F0'       FIND A NUMERIC
         BO    CCC030
         LA    R10,1(R10)         BUMP TO NEXT BYTE
         BCT   R2,LOOP030C        KEEP LOOKING
         TM    0(R10),X'F0'       FIND A NUMERIC
         BO    CCC030
         B     ERROR3             SHOULD NOT HAPPEN
CCC030   EQU   *
         LR    R1,R10             START OF FIELD
LOOP030D EQU   *
         CLI   0(R1),C' '         FIND END OF FIELD
         BE    DDD030
         LA    R1,1(R1)           BUMP TO NEXT BYTE
         BCT   R2,LOOP030D
DDD030   EQU   *
         SR    R1,R10             LENGTH OF FIELD
         MVC   WORK16,=16C'0'     INITIALIZE
         LA    R3,WORK16+16       END OF WORK AREA + 1
         SR    R3,R1              BACKUP LENGTH OF NUMBER
         SH    R1,=H'1'           DECR FOR EXECUTE
         EX    R1,MVCDS           RIGHT JUSTIFY NUMBER OF DATA SPACES
         PACK  DBWRD,WORK16       PACK IT
         AP    TOTTRKS,DBWRD      ADD TO TOTAL TRKS
EXIT030  EQU   *
         B     ENTRY040
         LTORG
         EJECT
*----------------------------------------------------------------------
*
*        FIND THE TOTAL USED RECORD
*
*----------------------------------------------------------------------
ENTRY040 DS    0H
         GET   SYSPRINT
         LR    R10,R1
         LR    R5,R1              SAVE BEGINNING ADDR
         XR    R2,R2
         ICM   R2,3,0(R10)        LENGTH OF RECORD
LOOP040B EQU   *
         CLC   0(12,R10),=C'TRACKS-USED-'
         BE    LOOP040C
         LA    R10,1(R10)         BUMP TO NEXT BYTE
         BCT   R2,LOOP040B        CHECK IT
         B     ENTRY040           SKIP HEADING LINES, ETC.
LOOP040C EQU   *
         TM    0(R10),X'F0'       FIND A NUMERIC
         BO    CCC040
         LA    R10,1(R10)         BUMP TO NEXT BYTE
         BCT   R2,LOOP040C        KEEP LOOKING
         TM    0(R10),X'F0'       FIND A NUMERIC
         BO    CCC040
         B     ERROR5             SHOULD NOT HAPPEN
CCC040   EQU   *
         LR    R1,R10             START OF FIELD
LOOP040D EQU   *
         CLI   0(R1),C' '         FIND END OF FIELD
         BE    DDD040
         LA    R1,1(R1)           BUMP TO NEXT BYTE
         BCT   R2,LOOP040D        KEEP LOOKING
DDD040   EQU   *
         SR    R1,R10             LENGTH OF FIELD
         MVC   WORK16,=16C'0'     INITIALIZE
         LA    R3,WORK16+16       END OF WORK AREA + 1
         SR    R3,R1              BACKUP LENGTH OF NUMBER
         SH    R1,=H'1'           DECR FOR EXECUTE
         EX    R1,MVCDS           RIGHT JUSTIFY NUMBER
         PACK  DBWRD,WORK16       PACK IT
         AP    TOTUSED,DBWRD      ADD TO TOTAL TRKS
EXIT040  EQU   *
         B     AAA030
         LTORG
         EJECT
*----------------------------------------------------------------------
*
*        CALCULATE % USED FOR A VOLUME
*
*----------------------------------------------------------------------
ENTRY900 DS    0H
         ST    R14,ST900
         MVC   PRTRKS,EDIT70
         ED    PRTRKS,TOTTRKS+4
         MVC   PRUSED,EDIT70
         ED    PRUSED,TOTUSED+12
         MP    TOTUSED,=P'100'    WORK WITH PERCENT
         DP    TOTUSED,TOTTRKS
         MVC   PRPC,EDIT30
         ED    PRPC,TOTUSED+6
         MVI   PRSIGN,C'%'
         L     R1,LINES
         BCT   R1,AAA900
         PUT   SYSOUT,HEADLINE
         LA    R1,55
AAA900   ST    R1,LINES
         PUT   SYSOUT,PRLINE
         ZAP   TOTUSED,=P'0'
         ZAP   TOTTRKS,=P'0'
EXIT900  EQU   *
         L     R14,ST900
         BR    R14
         LTORG
ST900    DC    F'-1'
LINES    DC    F'1'
         EJECT
*----------------------------------------------------------------------
*
*        END OF JOB
*
*----------------------------------------------------------------------
RETURN   DS    0H
         CLOSE (SYSPRINT,,SYSOUT)
         L     R15,RC
         $EPILOG
         EJECT
RC       DC    F'0'
*----------------------------------------------------------------------
ERROR1   DS    0H
         ABEND 1,DUMP
*----------------------------------------------------------------------
ERROR2   DS    0H
         ABEND 2,DUMP
*----------------------------------------------------------------------
ERROR3   DS    0H
         ABEND 3,DUMP
*----------------------------------------------------------------------
ERROR4   DS    0H
         ABEND 4,DUMP
*----------------------------------------------------------------------
ERROR5   DS    0H
         ABEND 5,DUMP
         LTORG
         EJECT
*----------------------------------------------------------------------
HEADLINE DS    0CL133
         DC    CL1'1'
         DC    CL6'VOLUME'
         DC    CL5' '
         DC    CL9'USED-TRKS'
         DC    CL4' '
         DC    CL8'TOT-TRKS'
         DC    CL5' '
         DC    CL5'%USED'
         DC    CL100' '
PRLINE   DS    0CL133
CCC      DC    CL1' '
PRVOLUME DC    CL6' '
         DC    CL5' '
PRUSED   DC    CL8' '
         DC    CL5' '
PRTRKS   DC    CL8' '
         DC    CL5' '
PRPC     DC    CL4' '
PRSIGN   DC    CL1' '
         DC    CL100' '
*----------------------------------------------------------------------
         DS    0D
DBWRD    DC    PL8'0'
TOTUSED  DC    PL16'0'
TOTTRKS  DC    PL8'0'
WORK16   DC    CL16'0'
EDIT70   DC    X'4020202020202120'
EDIT30   DC    X'40202120'
*----------------------------------------------------------------------
         EJECT
SYSOUT   DCB   DDNAME=SYSOUT,DSORG=PS,MACRF=PM,RECFM=FBA,LRECL=133,    X
               BLKSIZE=6118
         EJECT
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=GL,EODAD=RETURN
         END
