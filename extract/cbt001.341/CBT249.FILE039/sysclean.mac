         TITLE 'ATTACH IEHPROGM FOR SCRATCH OPERATIONS...MULTI COPY'
         PRINT NOGEN
***********************************************************************
*
*  THIS PROGRAM ATTACHES MULTIPLE COPIES OF IEHPROGM FOR THE FUNCTION
*  OF 'SCRATCH SYS'.  FOR EACH SPECIALLY NAMED DD CARD FOUND IN THE
*  INPUT, A UNIQUE ATTACH IS DONE PASSING THE REQUIRED 'SCRATCH'
*  CARD (ONE VOLUME PER ATTACH).  IN THIS WAY, THE SCRATCH FUNCTIONS
*  MAY BE DONE IN PARRALLEL.  THE REQUIRED DD CARD DDNAMES MUST BEGIN
*  WITH THE POUND (#) CHARACTER FOLLOWED BY ANYTHING ELSE.
*  I.E. SCRATCH SYS ON PACK 111111 USE DD NAME #SC111111.
*  FOR EACH VOLUME SPECIFIED, A TEMPORARY DATASET DEFINED BY DDNAME
*  SYSIN00N AND A SYSOUT DATA SET DEFINED BY DDNAME SYSPR00N
*  MUST BE INCLUDED IN THE EXECUTE JCL WHERE N IS A SEQUENTIAL NUMBER
*  BEGINNING WITH 1.
*
*  ATTRIBUTES:
*      NOT-REENTRANT AUTHORIZED
*
*  MACROS USED:
*      $PROLOG    ESTABLISH ENTRY LINKAGE
*      $EPILOG    ESTABLISH RETURN LINKAGE
*
*  THE FOLLOWING IS AN EXAMPLE PROC FOR IT'S USE:
*
*  //SYSCLEAN PROC    OUT=Z
*  //******************************************************************
*  //*
*  //*     THIS IS THE MULTIPLE 'SCRATCH SYS' IEHPROGM PROCEDURE.
*  //*     THE PURPOSE OF THIS ROUTINE IS TO ATTACH MULTIPLE
*  //*     COPIES OF IEHPROGM FOR A SCRATCH SYS (TEMPORARY DATASETS)
*  //*     FUNCTION.  ONE ATTACH WILL BE PERFORMED FOR EACH VALID
*  //*     DD CARD PRESENTED BELOW.
*  //*
*  //*     FOR THIS FUNTION TO WORK CORRECTLY, NO INITIATORS SHOULD
*  //*     BE STARTED AND NO TSO USERS SHOULD BE LOGGED ON SINCE
*  //*     THEY MAY HAVE ALLOCATED TEMPORARY DATASETS.
*  //*
*  //******************************************************************
*  //SYSCLEAN EXEC PGM=SYSCLEAN,REGION=1024K
*  //*
*  //*     THE FOLLOWING ARE THE VOLUMES TO BE SCRATCHED.
*  //*     THE DDNAMES CONSIST OF A NATIONAL POUND SIGN
*  //*     FOLLOWED BY THE VOLUME ID.  CARE MUST BE TAKEN
*  //*     TO INSURE THAT THE DD'S VOL PARAMETER MATCHES
*  //*     THE DD NAME, OTHER WISE IEHPROGM WILL RETURN
*  //*     AN ERROR MESSAGE.
*  //*
*  //#1        DD  DISP=SHR,UNIT=3330-1,VOL=SER=CORP01
*  //#2        DD  DISP=SHR,UNIT=3330-1,VOL=SER=CRCC02
*  //#3        DD  DISP=SHR,UNIT=3330-1,VOL=SER=CRCC03
*  //#4        DD  DISP=SHR,UNIT=3330-1,VOL=SER=MVSRES
*  //*5        DD  DISP=SHR,UNIT=3330-1,VOL=SER=VVVV05
*  //*6        DD  DISP=SHR,UNIT=3330-1,VOL=SER=VVVV06
*  //*7        DD  DISP=SHR,UNIT=3330-1,VOL=SER=VVVV07
*  //*8        DD  DISP=SHR,UNIT=3330-1,VOL=SER=VVVV08
*  //*9        DD  DISP=SHR,UNIT=3330-1,VOL=SER=VVVV09
*  //*10       DD  DISP=SHR,UNIT=3330-1,VOL=SER=VVVV10
*  //*11       DD  DISP=SHR,UNIT=3330-1,VOL=SER=VVVV11
*  //*12       DD  DISP=SHR,UNIT=3330-1,VOL=SER=VVVV12
*  //*
*  //*     THE FOLLOWING ARE THE OUTPUT (SYSPRINT) DD'S FOR IEHPROGM
*  //*     THERE MUST ONE FOR EACH VOLUME TO BE SCRATCHED.
*  //*     IF OUTPUT IS NOT REQUIRED, THE DD'S MAY BE DUMMY'D.
*  //*
*  //SYSPR001  DD  SYSOUT=&OUT
*  //SYSPR002  DD  SYSOUT=&OUT
*  //SYSPR003  DD  SYSOUT=&OUT
*  //SYSPR004  DD  SYSOUT=&OUT
*  //SYSPR005  DD  SYSOUT=&OUT
*  //SYSPR006  DD  SYSOUT=&OUT
*  //SYSPR007  DD  SYSOUT=&OUT
*  //SYSPR008  DD  SYSOUT=&OUT
*  //SYSPR009  DD  SYSOUT=&OUT
*  //SYSPR010  DD  SYSOUT=&OUT
*  //SYSPR011  DD  SYSOUT=&OUT
*  //SYSPR012  DD  SYSOUT=&OUT
*  //*
*  //*     THE FOLLOWING ARE THE UTILITY WORK DATASETS FOR
*  //*     SYSCLEAN.  THEY MUST BE TEMPORARY DISK DATASETS
*  //*     AS THEY ARE USED TO PASS INFORMATION (SCRATCH
*  //*     SYS CARD) TO IEHPROGM.  NO DD INFORMATION MAY
*  //*     BE PROVIDED.  LIKE THE SYSPRXXX DD CARDS, THERE
*  //*     MUST BE ONE FOR EACH VOLUME TO BE SCRATCHED.
*  //*
*  //SYSIN001  DD  DSN=SYSIN001,UNIT=VIO,SPACE=(TRK,1)
*  //SYSIN002  DD  DSN=SYSIN002,UNIT=VIO,SPACE=(TRK,1)
*  //SYSIN003  DD  DSN=SYSIN003,UNIT=VIO,SPACE=(TRK,1)
*  //SYSIN004  DD  DSN=SYSIN004,UNIT=VIO,SPACE=(TRK,1)
*  //SYSIN005  DD  DSN=SYSIN005,UNIT=VIO,SPACE=(TRK,1)
*  //SYSIN006  DD  DSN=SYSIN006,UNIT=VIO,SPACE=(TRK,1)
*  //SYSIN007  DD  DSN=SYSIN007,UNIT=VIO,SPACE=(TRK,1)
*  //SYSIN008  DD  DSN=SYSIN008,UNIT=VIO,SPACE=(TRK,1)
*  //SYSIN009  DD  DSN=SYSIN009,UNIT=VIO,SPACE=(TRK,1)
*  //SYSIN010  DD  DSN=SYSIN010,UNIT=VIO,SPACE=(TRK,1)
*  //SYSIN011  DD  DSN=SYSIN011,UNIT=VIO,SPACE=(TRK,1)
*  //SYSIN012  DD  DSN=SYSIN012,UNIT=VIO,SPACE=(TRK,1)
*  //*
*  //*     ALL OF THE PACKS ARE NOW CLEAR OF TEMPORARY DATASETS,
*  //*     NOW START TCAM AND THE INITS.
*
***********************************************************************
         EJECT
SYSCLEAN $PROLOG
***********************************************************************
*
*        LOCATE VIA THE TIOT THE REQUESTED VOLUMES (QUALIFIED
*        DD NAMES).  FOR EACH FOUND, ATTACH IEHPROGM FOR SCRATCH.
*
***********************************************************************
         LA    R11,ANCHOR       SET GETMAIN ANCHOR ADDRESS
         EXTRACT TIOTPTR,'S',FIELDS=TIOT  GET SPECIAL ADDRS
         L     R10,TIOTPTR      1ST PTR TO TIOT
         LA    R10,24(R10)      SET TO 1ST DD ENTRY
TIOTTEST CLI   0(R10),0         IS THIS THE END OF TIOT
         BE    TIOTEND          YES
         CLI   4(R10),C'#'      IS THIS DDNAME FOR SCRATCH
         BNE   TIOTBUMP         NO, GET NEXT ENTRY
         L     R9,16(R10)       GET UCB ADDRESS FROM TIOT ENTRY
         LA    R9,0(R9)         CLEAR THE HIGH ORDER
         CLI   18(R9),X'20'     IS DEVICE CLASS = DISK?
         BNE   TIOTBUMP         NO, IGNORE THIS ENTRY
         LA    R14,DEVTEND-DEVTABLE GET SIZE OF DEVICE TABLE
         SRL   R14,3            DIVIDE BY 8
         LA    R2,DEVTABLE      ADDRESS OF DEVICE TABLE
DEVLOOP  CLC   1(1,R2),19(R9)   IS THIS THE CORRECT DEVICE?
         BE    TIOTHIT          YES, CONTINUE
         LA    R2,8(R2)         NO, BUMP TO NEXT ENTRY
         BCT   R14,DEVLOOP      CHECK NEXT ENTRY
TIOTBUMP SR    R15,R15          CLEAR FOR INSERT
         IC    R15,0(R10)       GET LENGTH
         AR    R10,R15          POINT TO NEXT DD
         B     TIOTTEST         SEARCH FOR NEXT
         EJECT
***********************************************************************
*
*        A QUALIFIED ENTRY HAS BEEN FOUND, GET STORAGE FOR A
*        WORKAREA, BUILD SCRATCH CARD, AND ATTACH IEHPROGM.
*
***********************************************************************
TIOTHIT  GETMAIN R,LV=WORKSIZE  GET WORKING STORAGE
         ST    R1,0(R11)        SET CHAIN POINTER
         LR    R11,R1           UPDATE CHAIN POINTER
         MVC   0(WORKSIZE,R1),WORKAREA  UPDATE GOTTEN STORAGE
         USING WORKAREA,R11     GAIN ADDRESSABILITY TO IT
         MVC   DEVTYPE(32),=CL32' ' CLEAR DEV TYPE
         IC    R15,0(R2)        GET SIZE OF UNITNAME
         BCTR  R15,0            DECREMENT FOR EXECUTE
         EX    R15,MOVEDEV      MOVE DEVICE TYPE TO RECORD
         LA    R15,DEVTYPE+1(R15) END OF DEVICE NAME
         MVI   0(R15),C'='      ADD DELIMITER
         MVC   1(6,R15),28(R9)  MOVE IN VOL SER
         AP    VOLCOUNT,=P'1'   BUMP COUNT OF VOLUMES
         UNPK  DDCOUNT,VOLCOUNT  USE IT TO BUILD DD NAME
         OI    DDCOUNT+2,X'F0'  CLEAR SIGN FOR DISPLAY
         MVC   WORKDCB+DCBDDNAM-IHADCB(L'DCBDDNAM),WORKNAME MOVE DDNAME
         OPEN  (WORKDCB,(OUTPUT))  OPEN TEMP SYSIN
         PUT   WORKDCB,SCRCARD  WRITE MODIFIED SCRATCH CARD
         CLOSE (WORKDCB)      CLOSE TEMP SYSIN
         MVC   PROGMIN,DDCOUNT  SET COUNT FOR SYSIN
         MVC   PROGMOUT,DDCOUNT SET COUNT FOR SYSPRINT
         LA    R2,WORKECB     CANNOT ALLOW WORKAREA ADCONS
         LA    R3,PROGMPRM    CANNOT ALLOW WORKAREA ADCONS
         LA    R4,PROGMDDS    CANNOT ALLOW WORKAREA ADCONS
         ST    R3,ATTPARM1    SET UP PARM FOR ATTACH
         ST    R4,ATTPARM2    SET UP PARM FOR ATTACH
         OI    ATTPARM2,X'80' END OF LIST INDICATOR
         LA    R1,ATTPARM1    GET IEHPROGM PARM POINTER
         ATTACH  EP=IEHPROGM,ECB=(R2) CALL IEHPROGM FOR SCRATCH
         ST    R1,TCBADDR       SAVE TCB ADDR FOR DETACH
         B     TIOTBUMP         GET THE NEXT DD CARD
TIOTEND  L     R11,ANCHOR       GET 1ST ATTACHED
WAITNEXT LTR   R11,R11          ARE/WERE ANY TASKS ATTACHED
         BZ    EXIT             GO RETURN IF NONE
         WAIT  ECB=WORKECB      WAIT FOR THIS COMPLETION
         DETACH  TCBADDR        DETACH SUBTASK FOR JOB
         LR    R1,R11           COPY CORE ADDR FOR FREEMAIN
         L     R11,WORKAREA     GET NEXT IN CHAIN
         FREEMAIN  R,A=(1),LV=WORKSIZE  FREE ELEMENT
         B     WAITNEXT         WAIT FOR NEXT COMPLETION
EXIT     SR    R15,R15          CLEAR RET CODE
         $EPILOG
MOVEDEV  MVC   DEVTYPE(0),2(R2) MOVE DEVICE TYPE
         EJECT
         LTORG
***********************************************************************
*
*        THE FOLLOWING CONSTANTS ARE NOT PART OF THE WORKAREA,
*        AND AS SUCH MUST REMAIN ABOVE THE LABEL 'WORKAREA' FOR
*        PROPER ADDRESSABILITY AND FUNCTION.
*
***********************************************************************
DEVTABLE DC    AL1(4),X'08',CL6'2314'
         DC    AL1(4),X'09',CL6'3330'
         DC    AL1(4),X'0A',CL6'3340'
         DC    AL1(4),X'0B',CL6'3350'
         DC    AL1(6),X'0D',CL6'3330-1'
DEVTEND  EQU   *
ANCHOR   DC    F'0'           ORIGIN FOR GOTTEN STORAGE
TIOTPTR  DC    F'0'           EXTRACT ANSWER AREA
SCRCARD  DS    0CL80
         DC    CL22' SCRATCH VTOC,SYS,VOL='
DEVTYPE  DC    CL58' '
         DC    CL16' '        PADDING
VOLCOUNT DC    PL3'0'         CURRENT DDNAME COUNT
WORKNAME DC    CL5'SYSIN'     QUALIFIER FOR DD NAME
DDCOUNT  DC    CL3'001'       RUNNING COUNT WORK AREA
WORKDCB  DCB   DSORG=PS,LRECL=80,BLKSIZE=80,MACRF=PM,RECFM=F
***********************************************************************
*
*        THE FOLLOWING IS THE AREA MOVED TO GOTTEN CORE FOR
*        IEHPROGM.  THE FIRST IS THE PARM SIZE (0), AND THE
*        SECOND IS THE ALTERNATE DDNAMES FOR PROGM TO USE.
*        THEY ARE ORDER DEPENDENT AS WELL.
*
***********************************************************************
WORKAREA DC    F'0'           WORKAREA CHAIN POINTER
WORKECB  DC    A(0)             ADDR OF ECB FOR ATTACH AND WAIT
TCBADDR  DC    F'0'             ADDR OF TCB ATTACHED
ATTPARM1 DC    F'0'           IEHPROGM PARM POINTER
ATTPARM2 DC    F'0'           IEHPROGM DD NAMES LIST
         DC    H'0'          PADDING FOR PARMS
PROGMPRM DC    H'0'             PARM SIZE FOR IEHPROGM
         DS    0F               DUMB IEHPROGM ALIGNMENT
         DC    H'0'             DITTO
PROGMDDS DS    0CL50            ALTERNATE IEHPROGM DD NAMES
         DC    H'48'            SIZE OF DDNAME TABLE
         DC    4XL8'00'         ROOM FOR FOUR DD NAMES
         DC    CL5'SYSIN'       ALTERNATE DDNAME
PROGMIN  DC    CL3'000'         FOR SYSIN
         DC    CL5'SYSPR'       ALTERNATE DDNAME
PROGMOUT DC    CL3'000'         FOR SYSPRINT
WORKEND  EQU   *                END OF WORK AREA
WORKSIZE EQU   WORKEND-WORKAREA  SIZE OF WORKAREA
         PRINT NOGEN
         DCBD  DSORG=PS,DEVD=DA
         END
