SCRIPT/VS R2.0: DEVICE 1403N6 CHARS MONO
¸
¸
¸
¸
                 XACORZAP -- MAIN STORAGE SUPERZAP SERVICE AID
                 XACORZAP -- MAIN STORAGE SUPERZAP SERVICE AID
                 XACORZAP -- MAIN STORAGE SUPERZAP SERVICE AID
°                 XACORZAP -- MAIN STORAGE SUPERZAP SERVICE AID
¸
¸

°                                                  USER'S GUIDE
¸
°                                            JANUARY 19TH, 1984


°                                         CORPORATE SE SERVICES
°                                     NATIONAL ADVANCED SYSTEMS
°                                     800 EAST MIDDLEFIELD ROAD
°                                       MOUNTAIN VIEW, CA 94043
¸
¸
¸
¸
¸
¸
¸
¸
¸

¯

  PREFACE
  _______
  PREFACE
  PREFACE
°  PREFACE
¸
°  THIS  USER'S GUIDE AND THE PROGRAM DESCRIBED HEREIN ARE PRO-
°  VIDED  ON AN "AS IS" BASIS.  THEY HAVE NOT BEEN SUBMITTED BY
°  NATIONAL  ADVANCED SYSTEMS TO ANY FORMAL TESTING PROCEDURES.
°  USERS  ARE RESPONSIBLE FOR EVALUATING THE APPROPRIATE USE OF
°  THESE MATERIALS IN THEIR OWN ENVIRONMENTS.


°  THE  XACORZAP  SERVICE AID IS A PUBLIC-DOMAIN PROGRAM DEVEL-
°  OPED  BY ROB BUDGE, CONSULTING SYSTEMS ENGINEER, NAS WESTERN
°  REGION.  IT IS BASED ON THE PUBLIC-DOMAIN PROGRAM, INCORZAP,
°  DEVELOPED BY THE SAME AUTHOR WHILE WITH THE IBM CORPORATION.

¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸

°  PREFACE                                                   II
¯

  CONTENTS
  ________
  CONTENTS
  CONTENTS
°  CONTENTS
¸
  INTRODUCTION   . . . . . . . . . . . . . . . . . . . . . . 1
  INTRODUCTION   . . . . . . . . . . . . . . . . . . . . . . 1
  INTRODUCTION   . . . . . . . . . . . . . . . . . . . . . . 1
°  INTRODUCTION   . . . . . . . . . . . . . . . . . . . . . . 1

  FEATURES   . . . . . . . . . . . . . . . . . . . . . . . . 2
  FEATURES   . . . . . . . . . . . . . . . . . . . . . . . . 2
  FEATURES   . . . . . . . . . . . . . . . . . . . . . . . . 2
°  FEATURES   . . . . . . . . . . . . . . . . . . . . . . . . 2
°    MAIN STORAGE MODIFICATION WITHOUT IPL  . . . . . . . . . 2
°    CSECT LEVEL REFERENCE  . . . . . . . . . . . . . . . . . 2
°    KEEPING PLPA MODIFIED  . . . . . . . . . . . . . . . . . 2
°    OVERCOMING PROTECTION SCHEMES  . . . . . . . . . . . . . 3
°    USING JOB PACK VERSIONS OF MODULES   . . . . . . . . . . 3
°    SUPERZAP COMPATIBILITY   . . . . . . . . . . . . . . . . 4

  REFERENCE SUMMARY  . . . . . . . . . . . . . . . . . . . . 6
  REFERENCE SUMMARY  . . . . . . . . . . . . . . . . . . . . 6
  REFERENCE SUMMARY  . . . . . . . . . . . . . . . . . . . . 6
°  REFERENCE SUMMARY  . . . . . . . . . . . . . . . . . . . . 6
°    JCL REQUIREMENTS   . . . . . . . . . . . . . . . . . . . 6
°    CONTROL STATEMENTS   . . . . . . . . . . . . . . . . . . 6
°    NOTES  . . . . . . . . . . . . . . . . . . . . . . . . . 7

  OPERATIONAL CONSIDERATIONS   . . . . . . . . . . . . . . . 8
  OPERATIONAL CONSIDERATIONS   . . . . . . . . . . . . . . . 8
  OPERATIONAL CONSIDERATIONS   . . . . . . . . . . . . . . . 8
°  OPERATIONAL CONSIDERATIONS   . . . . . . . . . . . . . . . 8
°    AVOIDING MISMATCHED MODULES  . . . . . . . . . . . . . . 8
°    SECURITY CONSIDERATIONS  . . . . . . . . . . . . . . . . 8

  INSTALLATION   . . . . . . . . . . . . . . . . . . . . . . 9
  INSTALLATION   . . . . . . . . . . . . . . . . . . . . . . 9
  INSTALLATION   . . . . . . . . . . . . . . . . . . . . . . 9
°  INSTALLATION   . . . . . . . . . . . . . . . . . . . . . . 9
°    LOADING THE DISTRIBUTION FILE FROM TAPE  . . . . . . . . 9
°    INSTALLING THE LOAD MODULE   . . . . . . . . . . . . . . 9
°    PRINTING THE GENERAL INFORMATION MANUAL  . . . . . . .  10

  EXAMPLES   . . . . . . . . . . . . . . . . . . . . . . .  11
  EXAMPLES   . . . . . . . . . . . . . . . . . . . . . . .  11
  EXAMPLES   . . . . . . . . . . . . . . . . . . . . . . .  11
°  EXAMPLES   . . . . . . . . . . . . . . . . . . . . . . .  11
°    EXAMPLE 1 - ZAPPING AN LPA MODULE  . . . . . . . . . .  11
°    EXAMPLE 2 - BACKING OUT A ZAP AND UNFIXING THE MAIN
°     STORAGE   . . . . . . . . . . . . . . . . . . . . . .  11
°    EXAMPLE 3 - USING ENTRY POINTS AS SYMBOLIC OFFSETS      12
°    EXAMPLE 4 - DUMPING AN IN-CORE CSECT   . . . . . . . .  12
°    EXAMPLE 5 - SUPPLYING INPUT VIA THE PARM FIELD   . . .  13
°    EXAMPLE 6 - XACORZAP PROCEDURE FOR CONSOLE ZAPPING      13
°    EXAMPLE 7 - FINDING THE ADDRESS OF A LOAD MODULE   . .  14
°    EXAMPLE 8 - FINDING THE ADDRESS OF A CSECT IN LINK
°     PACK AREA   . . . . . . . . . . . . . . . . . . . . .  14
°    EXAMPLE 9 - FINDING THE ADDRESS OF AN ENTRY POINT  . .  14
¸
¸
¸
¸
¸

°  CONTENTS                                                 III
¯

  INTRODUCTION
  ____________
  INTRODUCTION
  INTRODUCTION
°  INTRODUCTION
¸


°  XACORZAP INSPECTS OR MODIFIES MAIN STORAGE IN AN MVS SYSTEM.
°  XACORZAP  FUNCTIONS  ON  ALL  VERSIONS OF MVS, INCLUDING MVS
°  3.8, MVS/SP VERSION 1, AND MVS/SP VERSION 2 (MVS/XA).


°  XACORZAP OFFERS THE FOLLOWING ADVANTAGES:


°  ø   CHANGES  TO  THE NUCLEUS AND LINK PACK AREAS CAN BE MADE
°      DYNAMICALLY WITHOUT THE NEED FOR RE-IPLING THE SYSTEM.


°  ø   CHANGES  CAN BE MADE AT THE CSECT LEVEL RATHER THAN JUST
°      THE LOAD MODULE LEVEL.


°  ø   CHANGES  TO  THE  LINK PACK AREA (LPA) ARE NOT LOST WHEN
°      PAGES ARE REUSED BY THE SYSTEM, AS IS THE CASE WITH MOD-
°      IFICATIONS MADE FROM THE CONSOLE.


°  ø   XACORZAP  USES  STANDARD SUPERZAP CONTROL STATEMENT FOR-
°      MATS,  AND IS THEREFORE COMPATIBLE WITH THE AMASPZAP IBM
°      SERVICE AID.


°  IN  ADDITION TO COMPATIBILITY WITH AMASPZAP, XACORZAP OFFERS
°  THE FOLLOWING ADDITIONAL FUNCTIONS:


°  ø   MULTIPLE  CONTROL  STATEMENTS PER LINE USING THE LOGICAL
°      LINE SEPARATOR ('/').


°  ø   THE  OPTION TO SUPPLY CONTROL STATEMENTS VIA A PARAMETER
°      LIST RATHER THAN THROUGH A SYSIN DATA SET.


°  ø   THE  OPTION  TO  USE PROGRAM SYMBOLS INSTEAD OF ABSOLUTE
°      HEX NUMBERS TO DETERMINE OFFSETS WITH CSECTS.


°  ø   THE  OPTION TO LOCALIZE PROGRAM MODIFICATIONS BY LOADING
°      A PRIVATE VERSION OF A MODULE INTO THE JOB PACK AREA.
¸


°  XACORZAP                                                   1
¯

  FEATURES
  ________
  FEATURES
  FEATURES
°  FEATURES
¸

¸
  MAIN STORAGE MODIFICATION WITHOUT IPL
  _____________________________________
  MAIN STORAGE MODIFICATION WITHOUT IPL
  MAIN STORAGE MODIFICATION WITHOUT IPL
°  MAIN STORAGE MODIFICATION WITHOUT IPL

°  XACORZAP  IS USEFUL FOR APPLYING FIXES ON A TEST BASIS WITH-
°  OUT  IPLING  THE  SYSTEM.  SINCE  XACORZAP CHANGES ONLY MAIN
°  STORAGE,  ANY  MODIFICATIONS LAST ONLY FOR THE LENGTH OF THE
°  IPL OR UNTIL BACKED OUT BY A SUBSEQUENT USE OF XACORZAP.

°  WITHOUT  XACORZAP, APPLYING A SUPERZAP TO THE NUCLEUS OR LPA
°  INVOLVES   ZAPPING   THE  APPROPRIATE  SYSTEM  LIBRARY  WITH
°  AMASPZAP, THEN RE-IPLING THE SYSTEM.

¸
  CSECT LEVEL REFERENCE
  _____________________
  CSECT LEVEL REFERENCE
  CSECT LEVEL REFERENCE
°  CSECT LEVEL REFERENCE

°  ONCE A MODULE IS LOADED INTO MAIN STORAGE, CSECT INFORMATION
°  IS  GENERALLY NOT AVAILABLE (THE MVS/XA NUCLEUS IS AN EXCEP-
°  TION).  FOR THIS REASON MOST OTHER MECHANISMS TO MODIFY MAIN
°  STORAGE WORK WITH ABSOLUTE ADDRESSES OR LOAD MODULES ONLY.


°  XACORZAP  READS THE LIBRARY FROM WHICH THE MAIN STORAGE VER-
°  SION  OF  THE  MODULE WAS LOADED IN ORDER TO DETERMINE CSECT
°  PLACEMENT INFORMATION. THIS IS THEN USED BY XACORZAP TO PER-
°  MIT CSECT LEVEL REFERENCES AND CHANGES.

¸
  KEEPING PLPA MODIFIED
  _____________________
  KEEPING PLPA MODIFIED
  KEEPING PLPA MODIFIED
°  KEEPING PLPA MODIFIED

°  SINCE  THE  PAGEABLE  LINK  PACK AREA (PLPA) IS NORMALLY NOT
°  MODIFIED,  THE  PAGING  SUBSYSTEM  NEVER PERFORMS A PAGE-OUT
°  OPERATION  ON PAGES IN THIS AREA. THIS MEANS THAT ANY NORMAL
°  MODIFICATION  WOULD  BE  LOST  WHEN  THE PAGE WAS STOLEN FOR
°  RE-USE  BY  THE  PAGING SUBSYSTEM.  WHEN THE CONTENTS OF THE
°  PAGE WERE NEEDED AGAIN, THE PAGING SUBSYSTEM WOULD PAGE-IN A
°  NEW, UNMODIFIED PAGE.


°  TO OVERCOME THIS PROBLEM, XACORZAP PERFORMS A PAGE-FIX OPER-
°  ATION ON ANY PAGES IT MODIFIES IN THE LINK PACK AREAS.  THIS


°  XACORZAP                                                   2
¯

°  PREVENTS  THE PAGE BEING STOLEN BY THE PAGING SUBSYSTEM, AND
°  THUS THE MODIFICATION REMAINS.


°  IF AN INSTALLATION WISHES TO BACK-OUT A MODIFICATION MADE BY
°  XACORZAP, THIS CAN BE DONE WITH THE RES STATEMENT WHICH WILL
°  FIRST  MAKE  THE  REVERSING  MODIFICATION,  THEN  PERFORM  A
°  PAGE-FREE  OPERATION  TO  MAKE THE REAL PAGE FRAME ONCE MORE
°  AVAILABLE TO THE SYSTEM.

¸
  OVERCOMING PROTECTION SCHEMES
  _____________________________
  OVERCOMING PROTECTION SCHEMES
  OVERCOMING PROTECTION SCHEMES
°  OVERCOMING PROTECTION SCHEMES

°  IN  ORDER  TO  MAKE  MODIFICATIONS TO MAIN STORAGE, XACORZAP
°  MUST  BE INSTALLED AS AN AUTHORIZED PROGRAM IN AN AUTHORIZED
°  LIBRARY.   XACORZAP  USES  THIS  AUTHORIZATION TO MODIFY THE
°  NUCLEUS  AND  LINK  PACK AREA AS REQUESTED EVEN THOUGH THESE
°  AREAS ARE IN KEY-ZERO PROTECTED STORAGE.


°  IN  MVS/SP  SYSTEMS, XACORZAP ALSO TEMPORARILY BYPASSES SEG-
°  MENT  OR  PAGE  PROTECTION TO ALLOW MODIFICATION OF THE LINK
°  PACK AREAS.


°  BECAUSE  OF  THE  AUTHORIZED NATURE OF THIS PROGRAM, SPECIAL
°  SECURITY  PROVISIONS  SHOULD BE TAKEN TO CONTROL USE OF THIS
°  MODULE.   SEE THE SECTION "SECURITY CONSIDERATIONS" LATER IN
°  THIS DOCUMENT.


°  XACORZAP  DOES NOT BYPASS THE LOW STORAGE PROTECT FEATURE OF
°  MVS/SP.  XACORZAP DOES NOT MODIFY THE FIRST 512 BYTES OF THE
°  NUCLEUS  (PSA).  MODIFICATIONS TO CRITICAL LOW-STORAGE AREAS
°  SHOULD BE CONTROLLED FROM THE CONSOLE.

¸
  USING JOB PACK VERSIONS OF MODULES
  __________________________________
  USING JOB PACK VERSIONS OF MODULES
  USING JOB PACK VERSIONS OF MODULES
°  USING JOB PACK VERSIONS OF MODULES

°  XACORZAP  HAS THE ABILITY VIA THE LOCAL CONTROL STATEMENT TO
°  CAUSE  A  MODULE SPECIFIED ON A NAME CONTROL STATEMENT TO BE
°  LOADED  INTO  THE  JOB PACK AREA.  MODIFICATIONS CAN THEN BE
°  MADE TO THIS LOCALIZED VERSION OF THE MODULE.


°  CARE  MUST  BE TAKEN, HOWEVER, WITH THIS APPROACH. THE LOCAL
°  CONTROL  STATEMENT  WOULD  NORMALLY  BE  USED  WHEN  CALLING
°  XACORZAP  VIA  A LINK RATHER THAN EXECUTING THE PROGRAM FROM


°  XACORZAP                                                   3
¯

°  JCL,  WHERE  THE  MODULE WOULD COME AND GO WITH THE XACORZAP
°  PROGRAM ITSELF.


°  IT SHOULD ALSO BE REMEMBERED THAT SOME SYSTEM SERVICES (SUCH
°  AS OPEN/CLOSE) DO NOT SEARCH THE JOB PACK AREA FOR A COPY OF
°  A  MODULE  THEY  ARE LOADING, BUT GO INSTEAD DIRECTLY TO THE
°  LINK PACK AREA.


¸
  SUPERZAP COMPATIBILITY
  ______________________
  SUPERZAP COMPATIBILITY
  SUPERZAP COMPATIBILITY
°  SUPERZAP COMPATIBILITY

°  XACORZAP  IS  GENERALLY COMPATIBLE WITH THE IBM SERVICE AID,
°  AMASPZAP.   THE  PURPOSES  OF  THE  PROGRAM DIFFER, HOWEVER.
°  XACORZAP  INSPECTS  OR MODIFIES MAIN STORAGE, WHILE AMASPZAP
°  INSPECTS  OR MODIFIES MODULES OR DATA ON DIRECT ACCESS STOR-
°  AGE.


°  NEVERTHELESS,  JCL REQUIREMENTS AND CONTROL STATEMENT SYNTAX
°  ARE FOR THE MOST PART COMPATIBLE.  THIS MEANS THAT IN GENER-
°  AL,  FIXES  DESIGNED  FOR  APPLICATION  VIA  AMASPZAP CAN BE
°  APPLIED  TO THE NUCLEUS OR LINK PACK AREA VERSION OF A CSECT
°  BY  SIMPLY  CHANGING THE PROGRAM NAME ON THE EXECUTE CARD IN
°  THE JCL.


°  SPECIFIC DIFFERENCES BETWEEN THE TWO PROGRAMS ARE:


°  ø   CCHHR AND ABSDUMP CONTROL STATEMENTS - NOT APPLICABLE TO
°      XACORZAP.


°  ø   SETSSI  AND  IDRDATA CONTROL STATEMENTS - NOT APPLICABLE
°      AND IGNORED BY XACORZAP.


°  ø   CHECKSUM CONTROL STATEMENT - NOT SUPPORTED BY XACORZAP.


°  ø   ALTERNATE DD NAMES - ARE SPECIFIED DIFFERENTLY.


°  ø   DUMP  FORMATS  - ARE DIFFERENT. XACORZAP ALWAYS INCLUDES
°      EBCDIC  DATA  IN  THE  RIGHT  HAND  PORTION OF THE DUMP.
°      XACORZAP  TREATS  DUMP  AND DUMPT IDENTICALLY, PROVIDING
°      EBCDIC  DATA  FOR  BOTH AND NOT ATTEMPTING TO PROVIDE OP
°      CODES.



°  XACORZAP                                                   4
¯

°  ø   INPUT VIA PARAMETER LIST - NOT SUPPORTED BY AMASPZAP.


°  ø   "/" LOGICAL LINE SEPARATOR - NOT SUPPORTED BY AMASPZAP.


°  ø   SYMBOLIC  OFFSETS - PERMITTING USE OF PROGRAM SYMBOLS IN
°      VER AND REP STATEMENTS IS NOT SUPPORTED BY AMASPZAP.


°  ø   LOCAL AND GLOBAL CONTROL STATEMENTS - ARE NOT APPLICABLE
°      TO AMASPZAP.


°  ø   RES CONTROL STATEMENT - NOT APPLICABLE TO AMASPZAP.


°  WITH THE ABOVE EXCEPTIONS, AMASPZAP AND XACORZAP ARE COMPAT-
°  IBLE.   IF  THE  READER  IS UNFAMILIAR WITH SUPERZAP JCL AND
°  CONTROL   STATEMENTS,  HE  SHOULD  CONSULT  THE  IBM  MANUAL
  GC28-0674  OS/VS2  MVS  SYSTEM  PROGRAMMING LIBRARY: SERVICE
°  ____________________________________________________________
  AIDS FOR DETAILS ON THE USE OF THE PROGRAMS.
°  ____

¸
¸
¸
¸
¸
¸
¸
¸
¸
¸


°  XACORZAP                                                   5
¯

  REFERENCE SUMMARY
  _________________
  REFERENCE SUMMARY
  REFERENCE SUMMARY
°  REFERENCE SUMMARY
¸

°  THE  FOLLOWING  PROVIDES A ONE-PAGE SUMMARY OF THE OPERATION
°  OF  XACORZAP.   ADDITIONAL  INFORMATION  CONCERNING SUPERZAP
  CONTROL  STATEMENTS CAN BE FOUND IN THE IBM MANUAL GC28-0674
°                                                     _________
  OS/VS2 MVS SYSTEM PROGRAMMING LIBRARY: SERVICE AIDS.
°  ____________________________________________________

¸
  JCL REQUIREMENTS
  ________________
  JCL REQUIREMENTS
  JCL REQUIREMENTS
°  JCL REQUIREMENTS

°     //STEPNAME   EXEC PGM=XACORZAP[,PARM='CONTROL STATEMENTS']
°     //SYSLIB     DD   DSN=...      PROGRAM LIBRARY FROM WHICH THE
°                                    IN-CORE MODULE WAS LOADED (REQUIRED
°     //SYSPRINT   DD   SYSOUT=...   PRINTED OUTPUT (OPTIONAL).
°     //SYSIN      DD   *            CONTROL STATEMENTS (REQUIRED UNLESS
°                                    PARM SPECIFIED).



  CONTROL STATEMENTS
  __________________
  CONTROL STATEMENTS
  CONTROL STATEMENTS
°  CONTROL STATEMENTS

°     NAME LOADMOD [CSECT]           SPECIFY MODULE AND OR CSECT TO
°                                    MODIFY
°     VER  OFFSET  HEXSTRING         VERIFY STORAGE AT OFFSET WITHIN
°                                    MODULE/CSECT MATCHES HEXSTRING
°     REP  OFFSET  HEXSTRING         CHANGE STORAGE AT OFFSET WITHIN
°                                    MODULE/CSECT TO MATCH HEXSTRING
°                                    (CAUSES PGFIX IF PAGEABLE)
°     RES  OFFSET  HEXSTRING         LIKE REP, BUT CAUSES PGFREE
°     DUMP LOADMOD [CSECT]           PRINT MODULE OR CSECT
°     CONSOLE                        READ CONTROL STATEMENTS FROM CONSOL
°     BASE HEXVALUE                  HEXVALUE WILL BE SUBTRACTED FROM
°                                    NUMERIC OFFSETS
°     RESET                          CLEARS NO-GO SWITCH (SET BY VER
°                                    FAILURE)
°     /                              LOGICAL LINE SEPARATOR
°     ZAP OFFSET HEXSTRING           ZEROES STORAGE IF EQUAL TO HEXSTRIN
°     *                              COMMENT
°     LOCAL                          FOLLOWING NAME STATEMENTS WILL LOAD
°                                    MODULES INTO JOB PACK AREA
°     GLOBAL                         DROP LOCAL MODE


¸


°  XACORZAP                                                   6
¯

  NOTES
  _____
  NOTES
  NOTES
°  NOTES

  ALTERNATE DD NAMES
°  __________________

°  THE  FOLLOWING  DD  NAMES  ARE  REALLY  THE  FIRST CHOICE OF
°  XACORZAP:   PROGLIB,  PROGLIST,  PROGIN.   THESE  NAMES  ARE
°  THEREFORE  RESERVED NAMES AND ARE UNAVAILABLE FOR USE ON ANY
°  OTHER  DD'S  IN  THE  STEP  (FOR  EXAMPLE,  IF XACORZAP WERE
°  INVOKED VIA A CALL UNDER TSO).  IF ONE OF THESE NAMES IS NOT
°  PRESENT,  THE  MORE  TRADITIONAL  NAME (SYSLIB, SYSPRINT, OR
°  SYSIN, RESPECTIVELY) IS USED.


  OFFSET
°  ______

°  WHERE "OFFSET" IS SPECIFIED, THIS MAY BE EITHER A HEX STRING
°  (WITH  AN  EVEN NUMBER OF HEX DIGITS) OR A PROGRAM SYMBOL IN
°  SINGLE QUOTES (APOSTROPHES). ENTRY POINT NAMES MAY ALWAYS BE
°  USED  AS SYMBOLIC OFFSETS. ANY SYMBOL IN A NON-NUCLEUS CSECT
°  MAY  BE  USED  IF THE CSECT WAS COMPILED AND LINKED WITH THE
°  TEST ATTRIBUTE.

¸
¸
¸
¸
¸
¸
¸
¸
¸
¸


°  XACORZAP                                                   7
¯

  OPERATIONAL CONSIDERATIONS
  __________________________
  OPERATIONAL CONSIDERATIONS
  OPERATIONAL CONSIDERATIONS
°  OPERATIONAL CONSIDERATIONS
¸

¸
  AVOIDING MISMATCHED MODULES
  ___________________________
  AVOIDING MISMATCHED MODULES
  AVOIDING MISMATCHED MODULES
°  AVOIDING MISMATCHED MODULES

°  XACORZAP  MAY APPEAR TO OPERATE INCORRECTLY IF THE LOAD MOD-
°  ULE  COPY  ON  DASD DOES NOT MATCH THE COPY IN MAIN STORAGE.
°  XACORZAP  READS  THE  DASD COPY TO DETERMINE CSECT PLACEMENT
°  WITHIN THE LOAD MODULE, SO THE COPIES MUST MATCH FOR CORRECT
°  OPERATION.


°  A MISMATCH COULD OCCUR IF:


°  ø   THE MODULE ON DASD WAS RE-LINKED SINCE THE LAST IPL.


°  ø   THE  MODULE WAS LOADED FROM A DIFFERENT LIBRARY THAN THE
°      ONE SPECIFIED TO XACORZAP (EG. AN MLPA FROM SYS1.LINKLIB
°      WHILE XACORZAP'S SYSLIB POINTS AT SYS1.LPALIB).



  SECURITY CONSIDERATIONS
  _______________________
  SECURITY CONSIDERATIONS
  SECURITY CONSIDERATIONS
°  SECURITY CONSIDERATIONS

°  BECAUSE  OF  ITS ABILITY TO CHANGE SYSTEM MODULES, ACCESS TO
°  XACORZAP MUST BE STRICTLY LIMITED.


°  XACORZAP  SHOULD  BE  PLACED IN A LIBRARY WITH BOTH READ AND
°  WRITE  ACCESS  RESTRICTED  VIA  A PASSWORD OR OTHER SECURITY
°  MECHANISM.


°  XACORZAP  DOES  OPEN  ITS  SYSLIB  FILE  IN UPDATE MODE EVEN
°  THOUGH  IT  ONLY ACCESSES IT ON A READ-ONLY BASIS.  HOWEVER,
°  SINCE  IT IS MAIN STORAGE AND NOT THE LIBRARY WHICH IS BEING
°  MODIFIED, PROTECTING CRITICAL LIBRARIES AGAINST WRITE ACCESS
°  IS  NOT  SUFFICIENT PROTECTION WITH XACORZAP.  A LOAD MODULE
°  COULD  BE  COPIED  TO AN UNPROTECTED LIBRARY, WHERE XACORZAP
°  WOULD  BE  ABLE TO OPEN AND PROCESS IT, THEREBY ALLOWING THE
°  MAIN STORAGE ALTERATION.

¸

°  XACORZAP                                                   8
¯

  INSTALLATION
  ____________
  INSTALLATION
  INSTALLATION
°  INSTALLATION
¸


°  XACORZAP IS DISTRIBUTED IN ONE FILE IN UNLOADED IEBCOPY FOR-
°  MAT.  THE  FILE  CONTAINS  OBJECT AND SOURCE ALONG WITH THIS
°  DOCUMENT  IN  TWO VERSIONS -- ONE IN UPPER CASE ONLY AND ONE
°  IN BOTH UPPER AND LOWER CASE.

¸
  LOADING THE DISTRIBUTION FILE FROM TAPE
  _______________________________________
  LOADING THE DISTRIBUTION FILE FROM TAPE
  LOADING THE DISTRIBUTION FILE FROM TAPE
°  LOADING THE DISTRIBUTION FILE FROM TAPE

°  THE  FOLLOWING  JOB  WILL  LOAD THE DISTRIBUTION FILE INTO A
°  PARTITIONED DATA SET:


°    //S1 EXEC PGM=IEBCOPY
°    //SYSPRINT DD SYSOUT=*
°    //SYSUT3 DD UNIT=SYSDA,CYL=(CYL,(1,1))
°    //SYSUT4 DD UNIT=SYSDA,CYL=(CYL,(1,1))
°    //I DD UNIT=3400-3,LABEL=(1,NL),DISP=OLD,
°    //     VOL=SER=CZTAPE
°    //O DD DSN=USER.DISTLIB,UNIT=SYSDA,
°    //     DISP=(,CATLG),SPACE=(TRK,(10,2,3)),
°    //     DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)
°    //SYSIN DD *
°     C I=I,O=O
°    /*



¸
  INSTALLING THE LOAD MODULE
  __________________________
  INSTALLING THE LOAD MODULE
  INSTALLING THE LOAD MODULE
°  INSTALLING THE LOAD MODULE

°  THE  FOLLOWING STEP LINKS XACORZAP INTO A PROTECTED, AUTHOR-
°  IZED LIBRARY AS AN AUTHORIZED LOAD MODULE:


°    //S3 EXEC LKED,PARM='AC=1'
°    //LKED.SYSLMOD DD DSN=USER.AUTH.LIB(XACORZAP),DISP=SHR
°    //LKED.SYSLIN  DD DSN=USER.DISTLIB(XACORZAP),DISP=SHR


¸


°  XACORZAP                                                   9
¯

  PRINTING THE GENERAL INFORMATION MANUAL
  _______________________________________
  PRINTING THE GENERAL INFORMATION MANUAL
  PRINTING THE GENERAL INFORMATION MANUAL
°  PRINTING THE GENERAL INFORMATION MANUAL

°  THE   FOLLOWING   STEP  WILL  PRINT  THE  DOCUMENTATION  FOR
°  XACORZAP:


°    //S4 EXEC PGM=IEBGENER
°    //SYSPRINT DD SYSOUT=*
°    //SYSUT1   DD DISP=SHR,DSN=USER.DISTLIB(UGUPCASE),DCB=RECFM=FBM
°    //SYSUT2   DD SYSOUT=*
°    //SYSIN    DD DUMMY



°  NOTE THAT THE ABOVE JOB PRINTS THE UPPER CASE VERSION OF THE
°  USER'S  GUIDE.  POINT  SYSUT1 TO MEMBER USERGUID IF YOU HAVE
°  UPPER/LOWER CASE CAPABILITY.


¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸


°  XACORZAP                                                  10
¯

  EXAMPLES
  ________
  EXAMPLES
  EXAMPLES
°  EXAMPLES
¸

¸
  EXAMPLE 1 - ZAPPING AN LPA MODULE
  _________________________________
  EXAMPLE 1 - ZAPPING AN LPA MODULE
  EXAMPLE 1 - ZAPPING AN LPA MODULE
°  EXAMPLE 1 - ZAPPING AN LPA MODULE


°    //ZAP1  EXEC  PGM=XACORZAP
°    //SYSPRINT DD SYSOUT=*
°    //SYSLIB   DD DSN=SYS1.LPALIB,DISP=SHR
°    //SYSIN    DD *
°     NAME IGC0010A IEDAYOO
°     VER 03 C1E8
°     REP 03 81A8
°    /*


¸
¸

¸
  EXAMPLE 2 - BACKING OUT A ZAP AND UNFIXING THE MAIN STORAGE
  ___________________________________________________________
  EXAMPLE 2 - BACKING OUT A ZAP AND UNFIXING THE MAIN STORAGE
  EXAMPLE 2 - BACKING OUT A ZAP AND UNFIXING THE MAIN STORAGE
°  EXAMPLE 2 - BACKING OUT A ZAP AND UNFIXING THE MAIN STORAGE


°    //ZAP2  EXEC  PGM=XACORZAP
°    //SYSPRINT DD SYSOUT=*
°    //SYSLIB   DD DSN=SYS1.LPALIB,DISP=SHR
°    //SYSIN    DD *
°     NAME IGC0010A IEDAYOO
°     VER 03 81A8
°     RES 03 C1E8
°    /*


¸
¸


°  XACORZAP                                                  11
¯

  EXAMPLE 3 - USING ENTRY POINTS AS SYMBOLIC OFFSETS
  __________________________________________________
  EXAMPLE 3 - USING ENTRY POINTS AS SYMBOLIC OFFSETS
  EXAMPLE 3 - USING ENTRY POINTS AS SYMBOLIC OFFSETS
°  EXAMPLE 3 - USING ENTRY POINTS AS SYMBOLIC OFFSETS


°    //ZAP3  EXEC  PGM=XACORZAP
°    //SYSPRINT DD SYSOUT=*
°    //SYSLIB   DD DSN=SYS1.LPALIB,DISP=SHR
°    //SYSIN    DD *
°     NAME IGC0010A IEDAYOO
°     VER 'QTIP0130' 05C0
°     REP 'QTIP0130' 00
°     NAME IGG0CLA1 IGG0CLA9
°     VER 'IGGPCMRR' 05C0
°     REP 'IGGPCMRR' 07FF
°    /*


¸
¸

¸
  EXAMPLE 4 - DUMPING AN IN-CORE CSECT
  ____________________________________
  EXAMPLE 4 - DUMPING AN IN-CORE CSECT
  EXAMPLE 4 - DUMPING AN IN-CORE CSECT
°  EXAMPLE 4 - DUMPING AN IN-CORE CSECT


°    //ZAP4  EXEC  PGM=XACORZAP
°    //SYSPRINT DD SYSOUT=*
°    //SYSLIB   DD DSN=SYS1.NUCLEUS,DISP=SHR
°    //SYSIN    DD *
°     DUMP IEANUC01 IGC018
°    /*


¸
¸
¸
¸
¸

°  XACORZAP                                                  12
¯

  EXAMPLE 5 - SUPPLYING INPUT VIA THE PARM FIELD
  ______________________________________________
  EXAMPLE 5 - SUPPLYING INPUT VIA THE PARM FIELD
  EXAMPLE 5 - SUPPLYING INPUT VIA THE PARM FIELD
°  EXAMPLE 5 - SUPPLYING INPUT VIA THE PARM FIELD


°    //ZAP5  EXEC  PGM=XACORZAP,
°    //       PARM='NAME IEANUC01 IEAVFX00/VER 1023 F8/REP 1023 FF'
°    //SYSPRINT DD SYSOUT=*
°    //SYSLIB   DD DSN=SYS1.NUCLEUS,DISP=SHR
°    /*

°  (NOTE  USE  OF  '/' AS A LOGICAL LINE SEPARATOR. THIS CAN BE
°  USED IN SYSIN INPUT AND CONSOLE REPLIES AS WELL.)
¸
¸
¸
¸
¸
  EXAMPLE 6 - XACORZAP PROCEDURE FOR CONSOLE ZAPPING
  __________________________________________________
  EXAMPLE 6 - XACORZAP PROCEDURE FOR CONSOLE ZAPPING
  EXAMPLE 6 - XACORZAP PROCEDURE FOR CONSOLE ZAPPING
°  EXAMPLE 6 - XACORZAP PROCEDURE FOR CONSOLE ZAPPING


°    //COREZAP   PROC  LIB=LPALIB
°    //XACORZAP  EXEC  PGM=XACORZAP,PARM=CONSOLE
°    //SYSPRINT  DD    SYSOUT=*
°    //SYSLIB    DD    DSN=SYS1.&LIB,DISP=SHR
°    //SYSUDUMP  DD    SYSOUT=*
°    /*


¸
¸
¸
¸
¸


°  XACORZAP                                                  13
¯

°  (THE   EXAMPLES  ON  THIS  PAGE  USE  THE  CONSOLE  MODE  OF
°  OPERATION)

¸
  EXAMPLE 7 - FINDING THE ADDRESS OF A LOAD MODULE
  ________________________________________________
  EXAMPLE 7 - FINDING THE ADDRESS OF A LOAD MODULE
  EXAMPLE 7 - FINDING THE ADDRESS OF A LOAD MODULE
°  EXAMPLE 7 - FINDING THE ADDRESS OF A LOAD MODULE


°    *03 ENTER XACORZAP STATEMENTS OR END
°    R 3,'NAME IGC0010A'
°     IEE600I REPLY TO 03 IS;SUPPRESSED
°     +00E44000 = IN-CORE ADDRESS OF PRECEDING SYMBOL



¸
  EXAMPLE 8 - FINDING THE ADDRESS OF A CSECT IN LINK PACK AREA
  ____________________________________________________________
  EXAMPLE 8 - FINDING THE ADDRESS OF A CSECT IN LINK PACK AREA
  EXAMPLE 8 - FINDING THE ADDRESS OF A CSECT IN LINK PACK AREA
°  EXAMPLE 8 - FINDING THE ADDRESS OF A CSECT IN LINK PACK AREA


°    *04 ENTER XACORZAP STATEMENTS OR END
°    R 4,NAME IGC0010A IEDAYOO
°     IEE600I REPLY TO 04 IS;SUPPRESSED
°     +00E452B8 = IN-CORE ADDRESS OF PRECEDING SYMBOL



¸
  EXAMPLE 9 - FINDING THE ADDRESS OF AN ENTRY POINT
  _________________________________________________
  EXAMPLE 9 - FINDING THE ADDRESS OF AN ENTRY POINT
  EXAMPLE 9 - FINDING THE ADDRESS OF AN ENTRY POINT
°  EXAMPLE 9 - FINDING THE ADDRESS OF AN ENTRY POINT


°    *05 ENTER XACORZAP STATEMENTS OR END
°    5,VER 'QTIP0130' 00
°     IEE600I REPLY TO 05 IS;SUPPRESSED
°     +00E455EE = IN-CORE ADDRESS OF PRECEDING SYMBOL
°     +VERIFY REJECT - SET NO GO SWITCH

¸
¸


°  XACORZAP                                                  14
