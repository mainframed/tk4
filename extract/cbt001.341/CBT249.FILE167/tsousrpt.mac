         TITLE '* * *  TSOUSRPT  * * *'
***********************************************************************
*                                                                     *
* PROGRAM NAME - TSOUSRPT                                             *
*                                                                     *
* PURPOSE - TO PROVIDE LISTING OF TSO USERIDS INFORMATION.  (AS       *
*           OPPOSSED TO TSO ACCOUNT LIST COMMAND.)                    *
*                                                                     *
* OPERATION - THE PROGRAM READS A TSO ACCOUNT LIST COMMAND'S OUTPUT   *
*             AND SORTS ACCOUNT NUMBERS BY USERIDS AND PRODUCES THE   *
*             REPORT.  THE SORT PROGRAM IS USED WITH EXITS E15 & E35. *
*             THE UADS DATASET IS READ TO OBTAIN INFORMATION WRITTEN  *
*             BY THE PRE-PROMPT LOGON EXIT.                           *
*                                                                     *
* WRITTEN BY DOUG MOORE JAN 1978                                      *
*                                                                     *
* REWRITTEN BY DOUG MOORE DEC 1978                                    *
*    CODE ADDED TO GET DEFAULT ALLOCATION VOLUME AND INFO BLOCK       *
*    CREATED BY PRE-PROMPT LOGON EXIT.  USERS BROKEN DOWN BY          *
*    DIVISION.                                                        *
*                                                                     *
* MODIFIED BY DOUG MOORE MAY 1979                                     *
*    CODE ADDED TO SUPPORT DAP(H) AND SCHERING(S).                    *
*                                                                     *
* MODIFIED BY DOUG MOORE MAY 1979                                     *
*    SUPPORT FOR 'LASTON' DATE ADDED.                                 *
*                                                                     *
* MODIFIED BY BEN MOORE JULY 1979                                     *
*    SUPPORT FOR ALL KEYWORDS IN INFO BLOCK ADDED.                    *
*                                                                     *
* MODIFIED BY DOUG MOORE SEPT 1979                                    *
*    S0C4 BECAUSE R10 NOT LOADED AT UADSEOD.                          *
*                                                                     *
***********************************************************************
         EJECT
TSOUSRPT CSECT
         SAVE  (14,12),,TSOUSRPT-&SYSDATE-&SYSTIME  SAVE REGS
         LR    R12,R15             LOAD BASE REGISTER
         USING TSOUSRPT,R12
         ST    R13,RSA+4           CHAIN SAVE AREAS
         LR    R2,R13              SAVE CALLERS REG 13
         LA    R13,RSA             POINT TO MY RSA
         ST    R13,8(R2)           CHAIN SAVE AREAS
         SPACE 3
SORT     DS    0H
         LA    R1,PARMPTR          LOAD ADDR OF PARM LIST POINTER
         LINK  EP=SORT
         LTR   R2,R15              Q. SORT SUCCESSFUL
         BZ    MAINRTRN            ...YES, ALL DONE
         SPACE
         WTO   '*** TSOUSRPT - NONZERO RETURN CODE FROM SORT ***',     *
               ROUTCDE=(11)
         LA    R1,1                SET UP ABEND
         SLL   R1,31
         AR    R1,R2
         ABEND (1)                 ABEND WITH U00XX
         SPACE 3
MAINRTRN DS    0H
         L     R13,4(R13)          RESTORE CALLERS RSA
         RETURN (14,12),RC=0       RETURN
         TITLE '***  SORT EXIT E15  ***'
***********************************************************************
* THIS EXIT READS THE ACCOUNT LIST COMMAND LISTING AND EXTRACTS THE   *
* USERID, INSTALLATION ATTRIBUTES, AND ACCOUNT NUMBERS AND PASSES     *
* THE RECORD TO SORT TO BE SORTED BY USERID AND ACCOUNT NUMBER.       *
* NOTE: THE LOGON PREPROMPT EXIT MAINTAINS A USER INFORMATION BLOCK.  *
* THE MEMBER NAME OF THE BLOCK IS $USERID.  THE ACCOUNT LIST          *
* SUBCOMMAND WHEN USED IN THE FORM 'L (*)' SCREWS UP BECAUSE OF THE   *
* $ MEMBERS.  ONE DUMMY MEMBER NAMED $$ HAS BEEN ADDED TO FIX THE     *
* PROBLEM.  THIS USERID ($$) SHOULD BE SKIPPED.                       *
***********************************************************************
         SPACE
E15      DS    0H
         SAVE  (14,12),,E15        SAVE REGS
         USING E15,R15             SET UP TEMPORARY BASE
         LR    R2,R13              CHAIN SAVE AREAS
         LA    R13,EXITRSA         POINT TO E15 RSA
         ST    R2,4(R13)
         ST    R13,8(R2)
         L     R12,MAINBASE        GET ORIGINAL BASE REG
         USING TSOUSRPT,R12
         DROP  R15
         SPACE
         TM    UADSLIST+DCBOFLGS-IHADCB,DCBOFOPN Q. IS UADS LIST OPEN
         BO    ACCTLP              ...YES, GO LOOK FOR ACCT #
         OPEN  (UADSLIST,INPUT)    OPEN FILE
         TM    UADSLIST+DCBOFLGS-IHADCB,DCBOFOPN Q. OPEN SUCCESSFUL
         BNO   E15QUIT             ...NO, GIVE UP
         SPACE
READLOOP DS    0H
         GET   UADSLIST
         CLC   0(2,R1),=AL2(32)    Q. IS THIS RECORD LONG ENOUGH
         BL    READLOOP            ...NO, TRY ANOTHER
         CLC   17(15,R1),=CL15'USER ATTRIBUTES' Q. IS THIS USERID LINE
         BNE   READLOOP            ...NO, KEEP LOOKING
         SPACE
* FOUND USER ID
NEXTUID  DS    0H
         CLI   8(R1),C'$'          Q. IS THIS THE DUMMY USER
         BE    READLOOP            ...YES, GO GET NEXT USERID
         MVC   SORTUID,8(R1)       SAVE USER ID FOR SORT RECORD
         SPACE
INATLOOP DS    0H
         GET   UADSLIST            READ INSTALLATION ATTRIBUTES
         CLC   0(2,R1),=AL2(32)    Q. IS THIS RECORD LONG ENOUGH
         BL    INATLOOP            ...NO, TRY NEXT RECORD
         CLC   17(15,R1),=CL15'INSTALLATION AT' Q. IS THIS INSTALL ATTR
         BNE   INATLOOP            ...NO, TRY NEXT LINE
         MVC   SORTINAT,50(R1)     PUT IN SORT RECORD
         SPACE
PWLOOP   DS    0H                  SEARCH FOR PASSWORD
         GET   UADSLIST            READ A LINE
         CLC   0(2,R1),=AL2(11)    Q. IS THIS RECORD LONG ENOUGH
         BL    PWLOOP              ...NO, TRY ANOTHER
         CLI   10(R1),C' '         Q. IS THIS THE PASSWORD LINE
         BE    PWLOOP              ...NO, KEEP LOOKING
         SPACE
* FOUND THE PASSWORD
ACCTLP   DS    0H                  OBTAIN THE ACCOUNT NUMBERS
         GET   UADSLIST            READ A LINE
         CLC   0(2,R1),=AL2(32)    Q. IS THIS RECORD LONG ENOUGH
         BL    NOTUID              ...NO, THIS IS NOT A NEW USER ID
         CLC   17(15,R1),=CL15'USER ATTRIBUTES' Q. NEW USERID FOUND
         BE    NEXTUID             ...YES, GO PROCESS IT
NOTUID   DS    0H
         CLC   0(2,R1),=AL2(13)    Q. IS THIS RECORD LONG ENOUGH
         BL    ACCTLP              ...NO, TRY ANOTHER
         CLI   12(R1),C' '         Q. ACCOUNT NUMBER
         BE    ACCTLP              ...NO, KEEP LOOKING
         SPACE
* HAVE AN ACCOUNT NUMBER
         MVC   SORTACCT,12(R1)     MOVE ACCT NUMBER TO RECORD
         L     R13,4(R13)          POINT TO LAST SAVE AREA
         MVC   24(4,R13),=A(SORTRCD)   ADDRESS OF SORT RCD FOR REG 1
         LM    R14,R12,12(R13)     RESTORE REGS
         LA    R15,12              GIVE THIS RECORD TO SORT
         BR    R14                 RETURN TO SORT
         SPACE 2
E15QUIT  DS    0H
         L     R13,4(R13)          POINT TO LAST SAVE AREA
         RETURN (14,12),RC=16      TERMINATE SORT
         SPACE 2
UADSLEOF DS    0H
         CLOSE (UADSLIST)          CLOSE FILE
         L     R13,4(R13)          POINT TO LAST SAVE AREA
         RETURN (14,12),RC=8       ALL DONE, DONT COME BACK
         TITLE '***  SORT EXIT E35  ***'
***********************************************************************
* THIS EXIT PRODUCES THE REPORT FROM THE SORTED RECORDS.  FOR EACH    *
* USERID, THE UADS DATASET IS SEARCHED FOR THE INFORMATION BLOCK      *
* CREATED BY THE PREPROMPT LOGON EXIT.                                *
***********************************************************************
         SPACE
E35      DS    0H
         SAVE  (14,12),,E35        SAVE REGS
         USING E35,R15             SET UP TEMPORARY BASE
         LR    R2,R13              CHAIN SAVE AREAS
         LA    R13,EXITRSA
         ST    R2,4(R13)
         ST    R13,8(R2)
         L     R12,MAINBASE        GET ORIGINAL BASE REG
         USING TSOUSRPT,R12
         DROP  R15
         SPACE
         L     R11,0(0,R1)         GET POINTER TO SORT RECORD
         TM    SYSUADS+DCBOFLGS-IHADCB,DCBOFOPN Q. UADS OPEN ALREADY
         BO    E35OPN2             ...YES, TRY NEXT OPEN
         OPEN  (SYSUADS,INPUT)     OPEN UADS
         TM    SYSUADS+DCBOFLGS-IHADCB,DCBOFOPN Q. OPEN SUCCESSFUL
         BNO   E35QUIT             ...NO, GIVE UP
         LH    R0,SYSUADS+DCBBLKSI-IHADCB GET BLKSIZE
         GETMAIN RU,LV=(0),BNDRY=PAGE   GET AREA FOR SYS1.UADS BUFFER
         ST    R1,UADSBPTR         SAVE ADDRESS OF INFO BLOCK BUFFER
         SPACE
E35OPN2  DS    0H
         TM    ACCTLIST+DCBOFLGS-IHADCB,DCBOFOPN   Q. REPORT FILE OPEN
         BO    LOADPCF             ...YES, GO CHECK PCF LOAD
         OPEN  (ACCTLIST,OUTPUT)   OPEN FILE
         TM    ACCTLIST+DCBOFLGS-IHADCB,DCBOFOPN   Q. OPEN SUCCESSFUL
         BNO   E35QUIT             ...NO, GIVE UP
         TIME  DEC                 GET DATE AND TIME
         ST    R1,DBLWRK           STORE DATE FOR EDIT
         ED    DATEOUT,DBLWRK+1    EDIT DATE
         ST    R0,DBLWRK           STORE TIME FOR EDIT
         ED    TIMEOUT,DBLWRK      EDIT TIME
         MVC   DATALINE,BLNKLINE   CLEAR THE LINE
         SPACE 3
LOADPCF  DS    0H
         CLC   PCFVOLSA,=X'00000000'   Q. PCFTBLS ALREADY LOADED
         BNE   OUTLOOP                ...YES, GO DO REPORT
         LOAD  EP=PCFTBLS          GET ENTRY POINT
         LR    R15,R0              GET EP IN USABLE REGISTER
         L     R15,4(0,R15)        POINT TO PCFVOLS
         ST    R15,PCFVOLSA        SAVE IT
         EJECT
OUTLOOP  DS    0H
         LTR   R11,R11             Q. ANY MORE RECORDS
         BZ    E35END              ...NO, ALL DONE
         CLC   SAVEUID,0(R11)      Q. IS THIS A NEW USER ID
         BE    NOTNEW              ...NO, GO GET ACCOUNT NUMBER
         LA    R15,DATALINE        POINT TO OUTPUT LINE
         BAL   R14,WRITE           WRITE OUT LAST LINE OF PREVIOUS UID
         CLC   SAVEUID(1),0(R11)   Q. NEW DIVISION
         BE    NOTNEWDV            ...NO, CONTINUE
         ZAP   LINECNT,=P'999'     INDICATE NEW PAGE NEEDED
NOTNEWDV DS    0H
         MVC   SAVEUID,0(R11)      SAVE THE NEW USER ID
         MVC   DATALINE,BLNKLINE   CLEAR THE LINE
         MVI   DATALINE,C'0'       DOUBLE SPACE
         MVC   USERIDO,0(R11)      MOVE IT TO OUTPUT LINE
         LA    R15,DATALINE        POINT TO OUTPUT LINE
         BAL   R14,WRITE           WRITE IT OUT
* GET UADS INFO BLOCK FOR THIS USER
         FIND  SYSUADS,FINDUID,D   FIND INFO BLOCK MEMBER
         LTR   R15,R15             Q. ALL SPIFFY
         BZ    GETINFO             ...YES, CONTINUE
         CH    R15,=H'4'           Q. WAS MEMBER FOUND
         BNE   E35QUIT
UADSEOD  DS    0H
         L     R10,UADSBPTR        POINT TO UADS INFO BLOCK BUFFER
         MVI   0(R10),C' '         SHOW NO INFO DATA
         B     GETDAV              GO DO DEFAULT ALLOCATION VOL
         SPACE
GETINFO  DS    0H
         L     R10,UADSBPTR        POINT TO UADS INFO BLOCK BUFFER
         READ  UADSDECB,SF,SYSUADS,(R10)   READ UADS INFO BLOCK
         CHECK UADSDECB            MAKE SURE READ WAS OK
         LA    R2,KWLIST           POINT TO KEYWORDS TO BE SELECTED
         LA    R3,KWCNT            NUMBER IN LIST
KWLOOP   DS    0H
         BAL   R14,KWFIND          GO FIND THIS KEYWORD
         LTR   R15,R15             Q. WAS IT FOUND
         BZ    NOKW                ...NO, NOTHING TO PRINT
         MVC   DATALINE,BLNKLINE   CLEAR THE LINE
         MVC   INFOLINE,0(R15)     MOVE TO OUTPUT LINE
         LA    R15,DATALINE        POINT TO DATA LINE
         BAL   R14,WRITE           WRITE THE LINE
NOKW     DS    0H
         LA    R2,KWLTH(0,R2)      BUMP TO NEXT KEYWORD
         BCT   R3,KWLOOP           LOOP ON NUMBER OF KEYWORDS IN LIST
         SPACE
GETDAV   DS    0H
* GET DEFAULT ALLOCATION VOLUME
         LA    R3,BADVOL           POINT TO 'BADVOL' FOR NO VOL FOUND
         TR    15(4,R11),TRTAB1-X'C1'    TRANSLATE EBCDIC TO HEX
         PACK  INSTATTR(3),15(5,R11)
         SLR   R2,R2
         IC    R2,INSTATTR+1       GET DEFAULT ALLOCATION VOLUME
         SLL   R2,26               GET RID OF FIRST TWO BITS
         SRL   R2,26                  (SMF BITS)
         LTR   R2,R2               Q. IS THERE A DEFAULT VOLUME
         BZ    GETDAV2             ...NO, USE BADVOL CONSTANT
         BCTR  R2,0                DECREMENT FOR RELATIVE TO ZERO
         SLL   R2,1                DOUBLE THE VALUE
         L     R15,PCFVOLSA        POINT TO PCFVOLS
         LH    R4,4(R2,R15)        GET OFFSET TO NEXT INDEX VALUE
         LH    R14,2(R2,R15)       AND ALSO THIS INDEX VALUE
         SR    R4,R14              CALCULATE SIZE OF THIS INDEX ENTRY
         BNP   GETDAV2             IF NONE - USE BADVOL CONSTANT
         LA    R3,(64*2)+4(R14,R15) GET BEGINNING OF THIS ENTRY
GETDAV2  DS    0H
         MVC   DATALINE,BLNKLINE   BLANK THE LINE
         MVC   DAVOL,0(R3)         MOVE TO OUTPUT LINE
         MVC   DAVHEAD,=C'DEFAULT ALLOCATION VOLUME IS '
         LA    R15,DATALINE        POINT TO DATA LINE
         BAL   R14,WRITE           WRITE IT OUT
         MVC   DATALINE,BLNKLINE   BLANK LINE
         MVC   ACCTHEAD,=C'ACCOUNT(S)'
         L     R3,STARTPTR         GET INITIAL POINTER FOR ACCT NUMBERS
         LA    R3,10(0,R3)         SKIP FIRST SLOT
         B     MOVEACCT
         SPACE
NOTNEW   DS    0H
         L     R3,LINEPTR          GET LINE POINTER
         CL    R3,ENDPTR           Q. WILL IT FIT IN THIS LINE
         BL    MOVEACCT            ...YES, GO MOVE IT
         LA    R15,DATALINE        POINT TO LINE
         BAL   R14,WRITE           WRITE OUT PREVIOUS LINE
         MVC   DATALINE,BLNKLINE   BLANK LINE
         L     R3,STARTPTR         GET INITIAL POINTER
         SPACE
MOVEACCT DS    0H
         MVC   0(8,R3),7(R11)      MOVE THE ACCT NUMBER
         LA    R3,10(0,R3)         BUMP TO NEXT POSITION
         ST    R3,LINEPTR          SAVE IT
         L     R13,4(0,R13)        GET LAST R13
         RETURN (14,12),RC=4
         SPACE
E35END   DS    0H
         LA    R15,DATALINE        POINT TO LINE
         BAL   R14,WRITE           WRITE OUT LAST LINE
         LA    R15,ENDLINE         POINT TO LINE
         BAL   R14,WRITE           WRITE OUT ENDING LINE
         CLOSE (SYSUADS,,ACCTLIST) CLOSE FILE
         L     R13,4(0,R13)
         RETURN (14,12),RC=8       TELL SORT WE ARE DONE
         SPACE
E35QUIT  DS    0H
         L     R13,4(0,R13)
         RETURN (14,12),RC=16      TELL SORT TO STUFF IT
         TITLE '* * *  WRITE ROUTINE  * * *'
***********************************************************************
* WRITE - WRITE A LINE AFTER CHECKING FOR NEW PAGE AND DIVISION       *
*         BREAK                                                       *
*                                                                     *
* ON ENTRY:                                                           *
*    R15 - POINTER TO OUTPUT LINE                                     *
*    R14 - RETURN REGISTER                                            *
*                                                                     *
* ON EXIT:                                                            *
*    R15 - DESTROYED                                                  *
*                                                                     *
***********************************************************************
         SPACE
WRITE    DS    0H
         ST    R14,WRITER14        SAVE RETURN REG
         CP    LINECNT,LINEMAX     Q. NEED HEADINGS
         BNH   NOPAGE              ...NO, CONTINUE
         ZAP   LINECNT,=P'5'       INIT LINE COUNT
         AP    PAGECNT,=P'1'       ADD 1 TO PAGE COUNT
         MVC   DBLWRK(4),=X'40202021'
         ED    DBLWRK(4),PAGECNT
         MVC   PAGEOUT,DBLWRK
         ST    R15,WRITER15        SAVE R15
         PUT   ACCTLIST,HEADING1   PUT OUT HEADING
         PUT   ACCTLIST,HEADING2
         LA    R15,DIVLIST         POINT TO LIST OF DIVISIONS
         LA    R14,DIVNENT         NUMBER OF ENTRIES
DIVLOOP  DS    0H
         CLC   0(1,R15),SAVEUID    Q. IS THIS THE DIVISION
         BE    GOTDIV              ...YES, GO PRINT IT
         LA    R15,DIVELTH(0,R15)  BUMP TO NEXT ENTRY
         BCT   R14,DIVLOOP
         SPACE
GOTDIV   DS    0H
         MVC   DIVOUT,1(R15)       MOVE IN DIVISION
         PUT   ACCTLIST,HEADING3
         PUT   ACCTLIST,BLNKLINE
         L     R15,WRITER15        RESTORE R15
NOPAGE   DS    0H
         AP    LINECNT,=P'1'       ADD 1 TO LINECOUNT
         CLI   0(R15),C'0'         Q. TWO LINES
         BNE   NOTTWO              ...NO, CONTINUE
         AP    LINECNT,=P'1'       ADD 1 TO LINECOUNT
NOTTWO   DS    0H
         PUT   ACCTLIST,(R15)      WRITE THE LINE
         L     R14,WRITER14        RESTORE R14
         BR    R14                 RETURN
         SPACE 3
LINECNT  DC    PL2'0'              LINE COUNT
LINEMAX  DC    PL2'50'             NUMBER OF LINES/PAGE
PAGECNT  DC    PL2'0'              PAGE COUNT
WRITER14 DS    A                   R14 SAVE
WRITER15 DS    A                   R15 SAVE
         TITLE '* * *  KEYWORD FIND ROUTINE  * * *'
***********************************************************************
* KWFIND - LOCATE AND RETURN KEYWORD INFORMATION FROM UADS INFO BLOCK *
*                                                                     *
* ON ENTRY:                                                           *
*    R2  - POINTER TO KWLIST ENTRY                                    *
*    R3  - KWLOOP COUNTER                                             *
*    R14 - RETURN REGISTER                                            *
*                                                                     *
* ON EXIT:                                                            *
*    R10 - DESTROYED                                                  *
*    R15 - POINTER TO INFO BLOCK LINE OR ZERO IF NOT FOUND            *
*                                                                     *
***********************************************************************
         SPACE
KWFIND   DS    0H
         SLR   R15,R15             SET RETURN FOR NOT FOUND
         L     R10,UADSBPTR        POINT TO INFO BLOCK
KWSRCH   DS    0H
         CLI   0(R10),C' '         Q. END OF BLOCK
         BE    KWRTRN              ...YES, RETURN
         CLC   0(KWLTH,R2),0(R10)  Q. IS THIS THE KEYWORD
         BE    KWFOUND             ...YES, GOT IT
         LA    R10,80(0,R10)       POINT TO NEXT ENTRY
         B     KWSRCH              CONTINUE SEARCH
         SPACE
KWFOUND  DS    0H
         LR    R15,R10             POINT TO THE LINE
KWRTRN   DS    0H
         BR    R14                 RETURN
         TITLE '******* REGISTER EQUATES *******'
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10                  UADS INFO BLOCK PTR
R11      EQU   11                  PTR TO E35 SORT RECORD
R12      EQU   12                  BASE REG
R13      EQU   13
R14      EQU   14
R15      EQU   15
         TITLE '*******  DATA AREA  *******'
DBLWRK   DS    D                   DOUBLE WORD WORKAREA
RSA      DS    18D                 REGISTER SAVE AREA
EXITRSA  DS    18D                 SORT EXITS RSA
MAINBASE DC    A(TSOUSRPT)         BASE ADDRESS
STARTPTR DC    A(ACCTNO1)          FIRST ACCOUNT NUMBER POSITION
ENDPTR   DC    A(ACCTEND)          ENDING POINTER
LINEPTR  DC    A(0)                CURRENT POSITION POINTER
UADSBPTR DC    A(0)                UADS INFO BLOCK POINTER
PCFVOLSA DC    A(0)                POINTER TO PCFVOLS IN PCFTBLS
         SPACE
FINDUID  DS    0CL8                USER ID FOR FIND MACRO
         DC    CL1'$'              1ST CHAR FOR INFO BLOCK
SAVEUID  DC    CL7' '              CURRENT USER ID
         SPACE
KWLIST   EQU   *
*        DC    CL8'USERID'
         DC    CL8'NAME'
         DC    CL8'PHONE'
         DC    CL8'ADDRESS'
         DC    CL8'LASTON'
         DC    CL8'CHGPSWD'
         DC    CL8'CPUTIME'
         DC    CL8'DEFTIME'
         DC    CL8'PROGNAME'
         DC    CL8'FORMS'
         DC    CL8'ROOM'
* DENOTES UNUSED KEYWORDS
KWLTH    EQU   8                   LENGTH OF ENTRIES
KWCNT    EQU   (*-KWLIST)/KWLTH    NUMBER OF ENTRIES
         SPACE
BADVOL   DC    CL6'BADVOL'         USED AS DFLT ALLOC VOL IF NONE
         SPACE
PARMPTR  DS    0F                  SORT PARAMETER LIST POINTER
         DC    X'80'               END OF LIST
         DC    AL3(SORTPARM+2)     LIST POINTER
         SPACE
SORTPARM DS    0F                  SORT PARAMETER LIST
         DC    H'0'                UNUSED
         DC    AL2(SORTLE-SORTLB)  LENGTH
SORTLB   DS    0F                  BEGINNING OF LIST
         DC    A(SORTSTB)          START OF SORT STMT
         DC    A(SORTSTE)          END OF SORT STMT
         DC    A(RCDSTB)           START OF RECORD STMT
         DC    A(RCDSTE)           END OF RECORD STMT
         DC    A(E15)              E15 EXIT ROUTINE
         DC    A(E35)              E35 EXIT ROUTINE
SORTLE   EQU   *                   END OF LIST
         SPACE
SORTSTB  EQU   *                   SORT STATEMENT
         DC    C' SORT FIELDS=(1,7,CH,A,8,8,CH,A)'
SORTSTE  DC    C' '
         SPACE
RCDSTB   EQU   *                   RECORD STATEMENT
         DC    C' RECORD TYPE=F,LENGTH=(19)'
RCDSTE   DC    C' '
         SPACE
SORTRCD  DS    0CL19               SORT RECORD
SORTUID  DS    CL7                 USER ID
SORTACCT DS    CL8                 ACCOUNT NUMBER
SORTINAT DS    CL4                 INSTALLATION ATTRIBUTES
         SPACE
TRTAB1   DC    X'FAFBFCFDFEFF'     X'C1' - X'C6'
         DC    41X'00'             X'C7' - X'EF'
         DC    X'F0F1F2F3F4F5F6F7F8F9'   X'F0' - X'F9'
         SPACE
DIVLIST  EQU   *
         DC    C'B'
         DC    CL32'CORPORATE INFORMATION PROCESSING'
DIVELTH  EQU   *-DIVLIST           LENGTH OF ONE ENTRY
         DC    C'C'
         DC    CL32'  CORPORATE SYSTEMS DEVELOPMENT '
         DC    C'H'
         DC    CL32'          DAP DIVISION          '
         DC    C'I'
         DC    CL32'     INTERNATIONAL DIVISION     '
         DC    C'M'
         DC    CL32'       MAYBELLINE DIVISION      '
         DC    C'P'
         DC    CL32'         PLOUGH DIVISION        '
         DC    C'R'
         DC    CL32'        RESEARCH DIVISION       '
         DC    C'S'
         DC    CL32'        SCHERING DIVISION       '
DIVNENT  EQU   (*-DIVLIST)/DIVELTH   NUMBER OF ENTRIES
         DC    C' '                 DUMMY ENTRY FOR UNKNOWN DIVISION
         DC    CL32'         UNKNOWN DIVISION       '
         SPACE
INSTATTR DS    CL2                 INSTALLTION ATTRIBUTES IN HEX
         DS    CL1                 EXTRA BYTE FOR PACK DURING CONVERT
         SPACE 3
HEADING1 DS    0CL81               REPORT HEADING
         DC    CL1'1'
DATEOUT  DC    XL7'4021204B202020' YEAR EDIT PATTERN - YY.DDD
         DC    CL7' '
         DC    CL52'S C H E R I N G - P L O U G H  C O R P O R A T I O *
               N'
         DC    CL6' '
         DC    CL4'PAGE'
PAGEOUT  DS    CL4                 PAGE NUMBER
         SPACE
HEADING2 DS    0CL81               REPORT HEADING
         DC    CL1' '
TIMEOUT  DC    XL9'4021204B20204B2020' TIME EDIT PATTERN - HH.MM.SS
         DC    CL23' '
         DC    CL16'T S O  U S E R S'
         DC    CL32' '
         SPACE
HEADING3 DS    0CL81               REPORT HEADING
         DC    CL1'0'
         DC    CL24' '
DIVOUT   DS    CL32                DIVISION NAME
         DC    CL24' '
         SPACE
DATALINE DS    CL81                DATA LINE
         ORG   DATALINE
         DS    CL1                 CARRIAGE CONTROL
USERIDO  DS    CL7                 USER ID
         DS    CL1
DATASTRT EQU   *
INFOLINE DS    CL72                INFO LINE FROM UADS INFO BLOCK
         ORG   DATASTRT
DAVLINE  DS    0CL35               DEFAULT ALLOCATION VOLUME LINE
DAVHEAD  DS    CL29
DAVOL    DS    CL6                 DEFAULT ALLOC VOL
         ORG   DATASTRT
ACCTLINE DS    0CL72               ACCT NUMBERS
ACCTHEAD DS    CL10
         ORG   ACCTHEAD+2
ACCTNO1  DS    CL8                 ACCT NUMBER GOES HERE
         DS    CL2                 SPACE
         DS    CL60                ROOM FOR  6 MORE
ACCTEND  EQU   *                   END OF ACCT LINE
         ORG
         SPACE
ENDLINE  DS    0CL81
         DC    CL1'1'
         DC    CL80'***  END OF TSO USERS REPORT  ***'
         SPACE
BLNKLINE DC    CL81' '             BLANK LINE
         SPACE 5
         LTORG
         TITLE '******* DCBS *******'
UADSLIST DCB   DDNAME=UADSLIST,DSORG=PS,EODAD=UADSLEOF,MACRF=GL
         EJECT
ACCTLIST DCB   DDNAME=ACCTLIST,DSORG=PS,MACRF=PM
         EJECT
SYSUADS  DCB   DDNAME=SYSUADS,DSORG=PO,MACRF=R,EODAD=UADSEOD
         EJECT
         DCBD  DSORG=(PS),DEVD=DA
         EJECT
         END   TSOUSRPT
