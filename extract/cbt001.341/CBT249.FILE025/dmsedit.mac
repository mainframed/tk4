EDIT     TITLE 'DMSEDIT / EDITOR CONTROL MODULE '
* * * * * * * * * * * * * * * * * * * * *
*                                       *
*              D M S E D I T            *
*                                       *
* * * * * * * * * * * * * * * * * * * * *
         SPACE
* FUNCTION - OPERATION
*        THIS ROUTINE IS THE CONTROLLER FOR ANY EDIT PROCESSING.
*        IT LOAD AND MONITORS THE NON-STANDARD EDITOR ROUTINES.
*        THESE ROUTINES CAN BE CONNECTED WITH THE LINKAGE EDITOR
*        VIA THE WEAK EXTERNAL ADDRESS CONSTANTS (SEE LE-XREF) OR
*        LOADED DYNAMICALLY FROM THE PROGRAM LIBRARY.
*        IF A REQUIRED RECORD EDIT ROUTINE IS NOT AVAILABLE, THE
*        SELECTED INPUT RECORD IS PRINTED IN HEXA FORM.
         SPACE
* INPUT
*        DATA RECORDS PRODUCED IN A PREVIOUS DMS-MONITOR STEP.
*        THE DDNAME OF THIS DATASET CAN BE SELECTED WITH THE
*        INPUTDD-KEYWORD (DEFAULT: TRACEOUT).
         SPACE
* OUTPUT
*        PRINTED OUTPUT TO THE SYSPRINT DATASET.
         SPACE
* SPECIAL FUNCTION
*        IF THE EDITING OF RECORD-TYPE  80 & 90 IS SELECTED VIA
*        THE UNIT= KEYWORD INSTEAD OF THE SIO= OR I/O= KEYWORD,
*        A SPECIAL PRINTOUTPUT WILL BE PRODUCED DIRECTLY BY DMSEDIT.
         SPACE
* CHANGES
*        ID    DATE     PROGRAMMER      REASON
*        1     03/18/76 F.NUSSBAUMER    UPDATES AFTER ALPHA TESTS
*        2     04/08/76 F.NUSSBAUMER    UPDATES AFTER BETA TEST
*        3     10/20/76 F.NUSSBAUMER    UPDATE VER 0.1
         EJECT
         PRINT ON,NOGEN
         DMSMACRO
         USING  BLKBUFF,R14             ASSIGN LRECL BASE
         EJECT
DMSEDIT  PGMSTART
         LA    R12,2048(R11)            ASSIGN
         LA    R12,2048(R12)            SECOND
         USING DMSEDIT+4096,R12         BASE REGISTER
         SPACE
         LA    R1,EDTINPUT              BASE DCB
         MVC   DCBDDNAM(8),PINDD        SET DDNAME
         SPACE
         OPEN  (EDTINPUT,INPUT)
         SPACE
         LA    R1,EDTINPUT              TEST FOR
         TM    DCBOFLGS,DCBOFOPN        NORMAL OPEN
         BZ    EDTRET12                 NO, RETURN
         XC    EDTRSAVE(8),EDTRSAVE     CLEAR
         MVC   EDTTITXT+9(64),TITLETXT  PREPARE PAGE TITLE
         XC    LINEREST(4),LINEREST     FORCE NEW PAGE
         MVC   TRTAB1(256),ZTRTAB       SET DEFAULT TRANSLATION
         MVC   TRTAB2(256),DTRTAB
         TM    EDTMODE,BYTE             WAS BYTE MODE REQUESTED
         BZ    EDT120                   NO, GO
         MVC   TRTAB1(256),CHTRTAB
         MVI   TRTAB2,64                BLANK
         MVC   TRTAB2+1(255),TRTAB2     OUT
EDT120   TM    EDTMODE,HEXA             WAS THE HAXA MASK REQUESTED
         BZ    EDT121                   NO, GO
         MVC   TRTAB1(256),X1TRTAB
         MVC   TRTAB2(256),X2TRTAB
         B     EDT121
         SPACE
TRTAB1   DS    256C                     PRINT EDIT MASK FIELD
TRTAB2   DS    256C                     PRINT EDIT MASK FIELD
X1TRTAB  DC    16C'0'
         DC    16C'1'
         DC    16C'2'
         DC    16C'3'
         DC    16C'4'
         DC    16C'5'
         DC    16C'6'
         DC    16C'7'
         DC    16C'8'
         DC    16C'9'
         DC    16C'A'
         DC    16C'B'
         DC    16C'C'
         DC    16C'D'
         DC    16C'E'
         DC    16C'F'
X2TRTAB  DC    16CL16'0123456789ABCDEF'
         EJECT
*
*        CONVERT THE START AND STOP VALUES
*
         SPACE
EDT121   DS    0H
         MVI   EDTTODS,0
         MVI   EDTTODP,255
         MVC   EDTTODS+1(7),EDTTODS
         MVC   EDTTODP+1(7),EDTTODP
         CLC   DMSSDATE(4),=PL4'0'      IS START DATE SELECTED
         BE    EDT082                   NO, GO
         L     R0,DMSSDATE
         L     R1,DMSSTIME
         BAL   R9,TODCNV
         STM   R4,R5,EDTTODS
EDT082   CLC   DMSPTIME(4),=F'-1'       IS STOP TIME SELECTED
         BE    EDT083
         L     R0,DMSPDATE
         L     R1,DMSPTIME
         BAL   R9,TODCNV
         STM   R4,R5,EDTTODP
EDT083   EQU   *
         EJECT
*
*        PROCESS THE INPUT DATASET
*
         SPACE
EDTGET   LM    R14,R15,EDTRSAVE         RELOAD THE RECORD PARMS
GET003   LTR   R15,R15                  ANY BYTES LEFT
         BP    GET002                   YES, GO
         GET   EDTINPUT                 GET NEXT LRECL
         SLR   R15,R15                  GET LRECL
         ICM   R15,3,0(R1)
         SH    R15,=H'4'                SHIFT TO PGM
         LA    R14,4(0,R1)              LRECL
GET002   MVC   DMSEDTSC(8),BLKCLOCK     SAVE TOD VALUE
         STM   R0,R15,CHAISAVE          SAVE REGISTERS
         L     R8,STRTECUR              -> CURRENT 12 BYTE BUFFER
         SR    R7,R7                    CLEAR FOR
         ICM   R7,7,BLKSEQ              INSERT RECORD NUMBER
         ST    R7,8(R8)                 SET NEW RECORD NUMBER
         LTR   R7,R7                    IS IT MACRO
         BZ    LSTCONTI                 YES, SET OLD TO NEW
         L     R6,4(R8)                 NO
         LA    R6,1(,R6)                IS IT NEXT RECORD
         CLR   R6,R7                    IN SEQUENCE
         BE    LSTCONTI                 YES, SET OLD TO NEW
         LA    R0,12                    NO, GET 12 BYTE
         BAL   R1,*+4                   AREA
         SVC   10
         ST    R1,0(R8)                 CHAIN AREAS
         ST    R1,STRTECUR              SET NEW CURRENT POINTER
         XC    0(12,R1),0(R1)           CLEAR GOTTEN AREA
         LR    R8,R1                    SET NEW CURRENT
LSTCONTI ST    R7,4(R8)                 SET OLD=NEW RECORD
         LM    R0,R15,CHAISAVE          RELOAD REGISTERS
         TM    INPFLAG,INPFIREC         IS FIRST RECORD VALIDATED
         BO    LSTCONT2                 YES, CONTINUE
         CLC   BLKSEQ(3),=AL3(0)        IS IT MACRO
         BNE   EDTRET04                 NO, ISSUE MESSAGE
         CLC   16(8,R14),DMSID          IS IT MACRO
         BNE   EDTRET04                 NO, GO OUT
         CLC   DMSMVSVS-DMSID+16(4,R14),DMSMVSVS IS IT CORRECT LVL
         BNE   EDTRET04                 NO, RECORD CREATED WITH OTHER
         OI    INPFLAG,INPFIREC         SET RECORD VALIDATED
LSTCONT2 DS    0H
         CLC   BLKSEQ(3),=AL3(0)        IS IT MACRO
         BE    GET008
         CLC   BLKCLOCK(8),EDTTODS      Q. IS IT START TIME
         BL    GET001                   A. NO, GET NEXT
         CLC   BLKSEQ(3),DMSSRCRD+1     Q. IS IT START BLOCK
         BL    GET001                   A. NO, GET NEXT
         CLC   BLKCLOCK(8),EDTTODP      Q. IS IT STOP  TIME
         BH    GET007                   A. YES, GO
         CLC   BLKSEQ(3),DMSPRCRD+1     Q. IS IT STOP  BLOCK
         BH    GET007                   A. YES, GO
         SPACE
         TM    DMSSELF1,SELJOBN         Q. IS A JOBNAME SELECTED
         BZ    GET005                   A. NO, SKIP CHECK
         SR    R3,R3                    CLEAR
         IC    R3,BLKRID                FOR INSERT
         CLM   R3,1,=XL1'80'            IS IT SIO
         BL    GET004                   NO, TEST FOR JOBNAME
         CLM   R3,1,=XL1'A0'            IS IT IOI
         BNL   GET004                   NO,TEST FOR JOBNAME
         TM    DMSSELF1,SELUNIT         YES, IS UNIT=ALL SPEC.
         BZ    GET005                   NO, DO NOT TEST
GET004   DS    0H                       YES, TEST FOR JOBNAME
         CLC   DMSJOBN(8),BLKJOBN       Q. IS IT FOR THIS JOB
         BNE   GET001                   A. NO, DO NOT PROCESS
GET005   SLR   R1,R1                    CLEAR
         ICM   R1,3,0(R14)              GET LRECL
         SLR   R15,R1                   DECR RESIDUAL BLKLNGT
         ST    R15,EDTRSAVE+4           SAVE IT
         LA    R15,0(R1,R14)            INCR TO NEXT LREC
         ST    R15,EDTRSAVE             SAVE IT
         LR    R1,R14                   SET R1 ALSO
         SLR   R15,R15                  CLEAR
         IC    R15,BLKRID               GOTO
         SRL   R15,4                    THE
         SLL   R15,2                    SELECT
         MVI   EDTLINE1+4,C' '          ASSUME BASIC
         TM    EDTMODE,BASICMDE         RECORDS TO BE PRINTED IN BASIC
         BO    RECSEL                   YES,SO DO SO
         MVI   EDTLINE1+4,C'0'          NOT BASIC, SET TO SPACE 2
         B     EVENTSEL(R15)            GO TO PROCESS
         SPACE 3
GET001   SLR   R1,R1                    INCREMENT
         ICM   R1,3,BLKRLEN             TO
         SLR   R15,R1                   NEXT
         ALR   R14,R1                   PROGR RECORD
         B     GET003
         SPACE 3
GET007   MESSAGE 025                    STOP VALUE FOUND
         B     EDTEOF1
         EJECT
GET008   STM   R0,R15,CHAISAVE          SAVE REGISTERS
         LA    R8,16(,R14)              POINT TO CONST RECORD
         NC    DMSSTIME(4),DMSSTIME     IS START TIME SELECTED
         BZ    GET009                   NO, DO NOT CALCULATE SDATE
         CLC   DMSSDATE(4),=PL4'0'      IS START TIME SELECTED
         BNE   GET009                   YES, DO NOT CALCULATE
         LA    R1,DMSEDTSC-DMSID(R8)    POINT TO START TOD CLOCK
         BAL   R9,TODDATE               GET START DATE FROM MACRO
         ST    R1,DMSSDATE              SET DEFAULT START DATE
GET009   CLC   DMSPTIME(4),=F'-1'       IS STOP TIME SELECTED
         BE    GET010                   NO, DO NOT CALCULATE
         CLC   DMSPDATE(4),=PL4'99999'  S STOP DATE SELECTED
         BNE   GET010                   YES, DO NOT TOUCH
         MVC   DMSPDATE(4),DMSSDATE     SET DATE EQUAL TO SDATE
         NC    DMSSTIME(4),DMSSTIME     WAS STIME SPECIFIED
         BNZ   GET010                   YES, BRANCH
         LA    R1,DMSEDTSC-DMSID(R8)    POINT TO START DATE
         BAL   R9,TODDATE               USE START DATE AS STOP DATE
         ST    R1,DMSPDATE              SET STOP DATE
GET010   CLC   DMSSTIME(4),=F'0'        IS START TIME PRESENT
         BE    GET011                   NO, SO GO OUT
         L     R0,DMSSDATE              GET START DATE
         L     R1,DMSSTIME              AND TIME
         BAL   R9,TODCNV                CONVERT
         STM   R4,R5,EDTTODS            TO TOD VALUE
GET011   CLC   DMSPTIME(4),=F'-1'       IS STOP TIME SELECTED
         BE    GET012                   NO, SO GO OUT
         L     R0,DMSPDATE              GET STOP
         L     R1,DMSPTIME              TIME
         BAL   R9,TODCNV                AS
         STM   R4,R5,EDTTODP            TOD VALUE
GET012   LM    R0,R15,CHAISAVE          RELOAD REGISTERS
         B     GET005                   GIVE CONTROL TO CON0
         SPACE 3
TODDATE  DS    0H
         LM    R2,R3,0(R1)              LOAD CLOCK VALUE
         SRDL  R2,12                    ACTUAL CLOCK
         D     R2,=F'60000000'          NUMBER OF MINUTES
         LR    R4,R3                    SAVE MINUTES
         SRDL  R4,32                    SHIFT TO R5
         D     R4,=F'60'
         SLR   R4,R4                    R5 HAS HOURS
         D     R4,=F'24'
         SLR   R4,R4                    R5 HAS DAYS
         S     R5,=F'365'               SUBTRACT 1900
         D     R4,=F'1461'              DAYS PER 4 YEARS
         MH    R5,=H'4'                 NR OF YEARS
         LR    R6,R5                    SAVE YEARS
         SRDL  R4,32                    SHIFT FOR DIVIDE
         D     R4,=F'365'               NUMBER OF NORMAL YEARS
         LA    R5,1(R5,R6)              TOTAL YEARS
         LA    R4,1(0,R4)               TOTAL DAYS
         CVD   R5,DMSWORK1              SET YEARS TO 00000YYC
         L     R1,DMSWORK1+4            LOAD YEARS
         SLL   R1,12                    MOVE TO CORRECT POSITION
         CVD   R4,DMSWORK1              SET DAYS TO 0000DDDC
         ICM   R1,3,DMSWORK1+6          LOAD DAYS IN FORM 00YYDDDC
         BR    R9                       AND RETURN
*
*        BRANCH TABLE FOR THE EVENT SELECTION
*
         SPACE
EVENTSEL B     EVENTID0                 CONTROL PARM EDIT
         B     EVENTID1
         B     EVENTID2
         B     EVENTID3
         B     EVENTID4
         B     EVENTID5
         B     EVENTID6
         B     EVENTID7
         B     EVENTID8
         B     EVENTID9
         B     EVENTIDA
         B     RECSEL                   UNSUPPORTED
         B     RECSEL                   RECORD
         B     RECSEL                   IDENTIFIERS
         B     RECSEL                   ARE
         B     RECSEL                   BASICALLY EDITED
         SPACE
EVENTID0 LA    R3,=CL3'CON'             TRACE CONTROL RECORD
         B     MODSEL
         SPACE
EVENTID1 CLI   DMEXT+6,64               IS DISPATCHER SEL
         BE    EDTGET                   NO, GOTO NEXT
         LA    R3,EXTEDT
         B     MODSEL
         SPACE
EVENTID2 CLI   DMSVC+6,64               SVC EVENT
         BE    EDTGET
         LA    R3,SVCINT
         BAL   R9,INTSEL
         LA    R3,SVCEDT
         B     MODSEL
         SPACE
EVENTID3 CLI   DMPGM+6,64               PGM EVENT
         BE    EDTGET
         LA    R3,PGMINT
         BAL   R9,INTSEL
         LA    R3,PGMEDT
         B     MODSEL
         SPACE
EVENTID4 CLI   DMPER+6,64               PER EVENT
         BE    EDTGET
         LA    R3,=CL3'PER'
         B     MODSEL
         SPACE
EVENTID5 CLI   DMDAT+6,64               DAT EVENT
         BE    EDTGET
         LA    R3,=CL3'DAT'
         B     MODSEL
         SPACE
EVENTID6 CLI   DMMON+6,64               MC  EVENT
         BE    EDTGET
         LA    R3,=CL3'MON'
         B     MODSEL
         SPACE
EVENTID7 CLI   DMMCH+6,64               MCH EVENT
         BE    EDTGET
         LA    R3,MCHEDT
         B     MODSEL
         SPACE
EVENTID8 CLI   DMUNT+6,64               IS THE UNIT ROUTINE SELECTED
         BNE   ID80                     YES, GO CHECK TYPE
         CLI   DMIOI+6,64               IS I/O INTERRUPT SELECTED
         BE    EDTGET
ID8      LA    R3,IOSINT                BASE ROUTINE INDEX
         BAL   R9,INTSEL
         LA    R3,IOSEDT
         CLI   DMUNT+6,64               IS UNIT ADDRESS SELECTED
         BNE   EDTUNTI                  YES, GO TO I/O UNIT EDIT
         B     MODSEL
         SPACE
EVENTID9 CLI   DMUNT+6,64               IS UNIT ADDRESS SELECTED
         BNE   ID90                     YES, GO CHECK TYPE
         CLI   DMSIO+6,64               IS START I/O SELECTED
         BE    EDTGET
ID9      LA    R3,SIOINT                BASE ROUTINE INDEX
         BAL   R9,INTSEL
         LA    R3,SIOEDT
         CLI   DMUNT+6,64               IS UNIT ADDRESS SELECTED
         BNE   EDTUNTS                  YES, PROCESS SIO RECORD
         B     MODSEL
         SPACE
ID80     TM    DMSUTYPE,DMSUTYPI        IS I/O TYPE SELECTED
         BZ    EDTGET                   NO, GO BACK
         B     ID8                      YES, CONTINUE
ID90     TM    DMSUTYPE,DMSUTYPS        IS SIO TYPE SELECTED
         BZ    EDTGET                   NO, GO BACK
         B     ID9                      YES, CONTINUE
         SPACE
EVENTIDA CLI   DMDSP+6,64               DSP EVENT
         BE    EDTGET
         LA    R3,DSPEDT
         B     MODSEL
         SPACE 2
RECSEL   MVC   EDTTEXT1(6),=CL6'REC'    SET DATA TYPE IDENTIFIER
         MVC   EDTCLOCK(8),BLKCLOCK     SAVE CLOCK VALUE
         UNPK  EDTTEXT1+6(3),BLKRID(2)  RECORD TYPE
         TR    EDTTEXT1+6(2),XTRTAB
         MVI   EDTTEXT1+8,64            SET TEXT SEPARATOR
         B     EDTHEXA                  BASIC EDIT
         EJECT
*
*        EDIT MODULE SELECTION
*
         SPACE
MODSEL   MVC   EDTCLOCK(8),BLKCLOCK     SAVE THE TOD CLOCK
         SLR   R4,R4                    CLEAR
         IC    R4,BLKRID                RECORD ID
         SRDL  R4,4                     ISOLATE EVENT ID
         SRL   R5,28                    ISOLATE ROUTINE ID
         CH    R5,=H'9'                 SUPPORTED
         BH    RECSEL                   EDIT UNSUPPORTED
         MH    R4,=H'40'                CALCULATE
         SLL   R5,2                     ROUTINE
         AR    R4,R5                    ADDR
         LA    R4,EDTRTNPT(R4)          ENTRY
         MVC   EDTMODID(3),0(R3)        IDENT ROUTINE ENTRY
         UNPK  DMSWORK1(3),BLKRID(2)    CONVERT
         TR    DMSWORK1(2),XTRTAB       AND SET
         MVC   EDTRTNBR(1),DMSWORK1+1   ROUTINE ID
         MVC   EDTTEXT1(3),EDTMODID     SET TYPE IDENTIFIER
         UNPK  EDTTEXT1+4(5),BLKPSWCD(3)
         TR    EDTTEXT1+4(4),XTRTAB
         MVI   EDTTEXT1+8,64
         CLC   EDTTEXT1(3),SVCEDT       IS IT SVC
         BNE   *+8                      NO, CONTINUE
         MVI   EDTTEXT1+5,64            YES,SET SVC NUMBER AS 2 DIGIT
         CLC   EDTTEXT1(3),PGMEDT
         BNE   *+8
         MVI   EDTTEXT1+5,64
         CLC   EDTTEXT1(3),DSPEDT
         BNE   *+10
         MVC   EDTTEXT1+5(2),=CL2'  '
         CLI   EDTTEXT1+4,C'0'          IS IT LEADING ZERO
         BNE   EDT010                   NO, GO
         MVI   EDTTEXT1+4,64            YES, CLEAR IT
EDT010   LR    R8,R1                    SAVE THE RECORD ->
         L     R15,0(R4)                ROUTINE ADDR
         LTR   R15,R15                  IS THE ROUTINE AVAILABLE
         BP    EDT012                   YES, ENTER IT
         BM    EDTHEXA                  NO , ENTER THE BASIC ROUTINE
         BLDL  0,BLDLLIST               CHECK FOR PRESENCE
         LTR   R15,R15
         BZ    EDT011                   GO IF FOUND
         LR    R1,R8                    RELOAD THE RECORD ADDRESS
         OI    0(R4),128                SET UNSUCCESSFULL LOAD
         CLI   BLKRID,X'0F'             IS IT CONTROL RECORD
         BNH   RECSEL                   YES, EDIT BASIC
         B     EDTHEXA                  HEXA
         SPACE
EDT011   LOAD  EPLOC=EDTMODUL
         ST    R0,0(0,R4)               ACTIVATE THE TABLE ENTRY
         LR    R15,R0
         LR    R1,R8                    -> INPUT RECORD
EDT012   LA    R2,EDTLINE1              -> OUTPUT LINE
         BALR  R14,R15
         B     EDTGET
         EJECT
*
*        INTERRUPT SELECTION
*
         SPACE
INTSEL   SLR   R4,R4                    CLEAR
         ICM   R4,3,BLKPSWCD            GET INTERRUPT CODE
         SRDL  R4,3                     DIVIDE BY 8 (BYTE DISPL)
         SRL   R5,29                    SHIFT BIT DISPL
         LA    R5,BIT0MASK(R5)          GET THE BIT
         IC    R5,0(R5)                 TEST MASK
         LA    R3,0(R4,R3)              -> TO MASK BYTE
         EX    R5,BITTEST
         BZ    EDTGET
         BR    R9
         SPACE
BITTEST  TM    0(R3),0                  TEST THE BIT CODE
         SPACE 3
*        CONVERT DATE & TIME TO TOD-FORM
         SPACE
TODCNV   ST    R0,DMSWORK1+4
         SLR   R4,R4
         ST    R4,DMSWORK1
         CVB   R5,DMSWORK1
         D     R4,=F'1000'              R4 = DDD / R5 = JJ
         LR    R7,R4                    SAVE DDD
         SLR   R4,R4
         D     R4,=F'4'                 R4 = J   / R5 = LP
         MH    R5,=H'1461'              FULL LEAP PERIODS
         LTR   R4,R4                    IS IT 'SWITCHED' YEAR
         BNZ   *+6                      BRANCH IF NO
         BCTR  R5,0                     - 1 FOR 1900                  2
         AR    R7,R5                    DDD
         MH    R4,=H'365'               NORMAL YEAR
         AR    R7,R4                    ABS DAYS ON R7
         BCTR  R7,0                     -1
         MH    R7,=H'3600'              MICRO
         M     R6,=A(24*1000000)        SECONDS
         XC    DMSWORK2(8),DMSWORK2
         MVI   DMSWORK2+7,X'0F'
         STCM  R1,2,DMSWORK2+6          SS
         CVB   R5,DMSWORK2              SS X 10
         STCM  R1,4,DMSWORK2+6          MM
         CVB   R4,DMSWORK2
         MH    R4,=H'60'                SS X 10
         AR    R5,R4
         STCM  R1,8,DMSWORK2+6          HH
         CVB   R4,DMSWORK2
         MH    R4,=H'3600'              SS X 10
         AR    R5,R4
         M     R4,=F'100000'            MICRO SECONDS
         ALR   R5,R7
         BC    8+4,EDT081
         LA    R4,1(0,R4)
EDT081   ALR   R4,R6
         SLDL  R4,12
         BR    R9
         EJECT
*
*        BASIC EDIT FUNCTION
*
         SPACE
EDTHEXA  LR    R3,R1                    SAVE RECORD ->
         SLR   R2,R2                    CLEAR
         ICM   R2,3,0(R1)               GET RECORD LNGT
EDT031   LA    R4,2                     TWO STRINGS
         LA    R6,EDTTEXT1+9            -> FIRST DATA BYTE
         LA    R7,EDTTEXT1+86           -> FIRST TEXT BYTE
EDT029   LA    R5,4                     SET THE BLOCK COUNT
EDT030   LTR   R2,R2                    ANY INPUT BYTE LEFT
         BNP   EDT032                   NO, GO
         UNPK  0(9,R6),0(5,R3)          CONVERT
         TR    0(8,R6),XTRTAB           TO
         MVI   8(R6),64                 HEXA
         MVC   0(4,R7),0(R3)            SET THE CHARACTER
EDT033   LA    R3,4(0,R3)               INCR INPUT ->
         LA    R6,9(0,R6)               INCR HEXA  ->
         LA    R7,4(0,R7)               INCR CHAR  ->
         SH    R2,=H'4'                 DECR LNGT
         BCT   R5,EDT030                4 HEXA BLOCKS
         MVC   0(2,R6),BLANKS           CLEAR
         LA    R6,2(0,R6)               INCR HEXA ->
         BCT   R4,EDT029                RETRY FOR FULL LINE
         TR    EDTTEXT1+86(32),CHTRTAB  TRANSLATE TEXT TO BASIC FORM
         MVI   EDTTEXT1+85,C'*'         SET
         MVI   EDTTEXT1+118,C'*'        SEPARATORS
         MVI   EDTLINE1+1,124           SET THE LNGT FIELD
         CLC   LINEREST(4),=F'1'        ANY LINE LEFT
         BNL   EDT034                   YES, GO
         BAL   R9,EDTNPAGE              WRITE TITLE
EDT034   PRINTER EDTLINE1
         LTR   R2,R2
         BNP   EDTGET
         MVC   EDTTEXT1(9),BLANKS       CLEAR LINE PREFIX
         B     EDT031
EDT032   MVC   0(9,R6),BLANKS           BLANK OUT THE HEXA BLOCK
         MVC   0(4,R7),BLANKS           BLANK OUT THE TEXT BLOCK
         B     EDT033                   CONTINUE
         EJECT
*
*        PAGE TITLE CONTROL ROUTINE
*
         SPACE
EDTNPAGE STM   0,9,EDTTSAVE
         LM    R2,R3,EDTCLOCK           PREPARE THE
         SRDL  R2,12                    ACTUAL CLOCK
         D     R2,=F'60000000'          CALC NR OF MINUTES (R3)
         LR    R4,R3                    SAVE THE MINUTES
         SRDL  R2,32
         D     R2,=F'1000000'
         CVD   R3,DMSWORK1
         UNPK  EDTTITTM+6(2),DMSWORK1+6(2)   SS
         OI    EDTTITTM+7,240
         SRDL  R4,32
         D     R4,=F'60'
         CVD   R4,DMSWORK1
         UNPK  EDTTITTM+3(2),DMSWORK1+6(2)   MM
         OI    EDTTITTM+4,240
         SLR   R4,R4
         D     R4,=F'24'
         CVD   R4,DMSWORK1
         UNPK  EDTTITTM(2),DMSWORK1+6(2)     HH
         OI    EDTTITTM+1,240
         SPACE
*        R5 MAS THE NUMBER OF DAYS
         SPACE
         S     R5,=F'365'               SUBTR 1900
         SLR   R4,R4
         D     R4,=F'1461'              DAYS PER 4 YEAR CYCLE
         MH    R5,=H'4'                 NR OF YEARS
         LR    R6,R5                    SAVE YEARS
         SRDL  R4,32                    NR OF
         D     R4,=F'365'               NORMAL YEARS
         LA    R5,1(R5,R6)              TOTAL YEARS
         CVD   R5,DMSWORK1
         UNPK  EDTTITDT(2),DMSWORK1+6(2)
         OI    EDTTITDT+1,240
         LA    R4,1(0,R4)               INCR FOR FIRST DAY
         CVD   R4,DMSWORK1
         UNPK  EDTTITDT+3(3),DMSWORK1+6(2)
         OI    EDTTITDT+5,240
         PRINTER EDTTITLE
         LM    R0,R9,EDTTSAVE
         BR    R9
         SPACE
EDTTITLE DC    AL2(EDTPTIT-EDTTITLE,0),C'1'
EDTTITXT DC    77C' '
         DC    C'DATE '
EDTTITDT DC    C'JJ.DDD   '
         DC    C'TIME '
EDTTITTM DC    C'HH.MM.SS  '
EDTPTIT  EQU   *
         EJECT
***
*
*        EDTIOS0 I/O INTERRUPT ENTRY
*
***
         SPACE
EDTUNTI  LR    R14,R1                   -> INPUT RECORD
         MVC   EDTTEXT1+09(4),=C'PSW '
         MVC   EDTTEXT1(3),0(R3)        SET EVENT ID
         UNPK  EDTTEXT1+4(5),BLKPSWCD(3)
         XC    BLKPSWCD(2),BLKPSWCD     CLEAR INTERRUPT CODE
         UNPK  EDTTEXT1+13(9),BLKPSW(5)
         UNPK  EDTTEXT1+22(9),BLKPSW+4(5)
         TR    EDTTEXT1+13(17),XTRTAB
         MVI   EDTTEXT1+21,64
         MVC   EDTTEXT1+30(2),BLANKS
         B     EDTUNT0                  GO TO SHARED CODE
         SPACE 3
***
*
*        EDTSIO0        START I/O ENTRY ROUTINE
*
***
         SPACE
EDTUNTS  LR    R14,R1                   -> INPUT RECORD
         MVC   EDTTEXT1+09(4),=C'C.C '  COND CODE ID
         UNPK  EDTTEXT1+13(3),BLKPSW(2)
         TR    EDTTEXT1+13(2),XTRTAB
         MVC   EDTTEXT1+15(17),BLANKS   CLEAR
         CLC   EDTTEXT1+13(2),=CL2'01'  CONDITION CODE 1
         BE    *+10                     YES, CSW VALID
         XC    BLKDATA(8),BLKDATA       NO, CLEAR CSW
         MVC   EDTTEXT1(3),0(R3)        SET EVENT ID
         UNPK  EDTTEXT1+4(5),BLKPSWCD(3)
EDTUNT0  TR    EDTTEXT1+4(4),XTRTAB
         MVI   EDTTEXT1+4,64
         MVI   EDTTEXT1+8,64
         MVC   EDTCLOCK(8),BLKCLOCK     SET THE TOD FIELD
         OC    EDTSTAT(2),EDTSTAT       IS STATUS SELECTION ON
         BZ    EDT035                   NO, SKIP CHECK
         MVC   DMSWORK1(2),BLKDATA+4    MOVE CSW STATUS
         NC    DMSWORK1(2),EDTSTAT      IS ANY BIT ON
         BZ    EDTGET                   NO, DO NOT PROCESS
EDT035   MVC   EDTTEXT1+32(4),=C'CSW '
         UNPK  EDTTEXT1+36(9),BLKDATA(5)
         UNPK  EDTTEXT1+45(9),BLKDATA+4(5)
         TR    EDTTEXT1+36(17),XTRTAB
         MVI   EDTTEXT1+44,64
         MVC   EDTTEXT1+53(2),BLANKS
         CLI   BLKJOBN,0
         BE    EDT036
         MVC   EDTTEXT1+55(4),=C'JOB '
         MVC   EDTTEXT1+59(8),BLKJOBN
         MVC   EDTTEXT1+67(16),BLANKS
         B     EDT037
EDT036   MVC   EDTTEXT1+55(4),=CL4'ASCB'
         MVC   EDTTEXT1+70(4),=C'TCB '
         UNPK  EDTTEXT1+59(9),BLKASCB(5)
         UNPK  EDTTEXT1+73(9),BLKTCB(5)
         TR    EDTTEXT1+59(8),XTRTAB
         TR    EDTTEXT1+73(8),XTRTAB
         MVC   EDTTEXT1+67(3),BLANKS
         MVC   EDTTEXT1+81(2),BLANKS
         MVC   EDTTEXT1+59(2),BLANKS
         MVC   EDTTEXT1+73(2),BLANKS
EDT037   MVC   EDTTEXT1+83(4),=C'CPU '
         UNPK  EDTTEXT1+87(9),BLKCPUID(5)
         TR    EDTTEXT1+87(8),XTRTAB
         MVC   EDTTEXT1+95(2),BLANKS
         MVC   EDTTEXT1+97(5),=C'TIME '
         MVC   DMSWORK2(8),BLKCLOCK
         LM    R4,R5,DMSWORK2
         SRDL  R4,12
         D     R4,=F'60000000'          DIVIDE THE MINUTES
         CVD   R4,DMSWORK1
         UNPK  EDTTEXT1+106(8),DMSWORK1(8)
         OI    EDTTEXT1+113,240
         MVC   EDTTEXT1+105(2),EDTTEXT1+106 SEPARATE THE SECONDS
         MVI   EDTTEXT1+107,C'.'
         MVC   EDTTEXT1+114(2),BLANKS
         LR    R4,R5                    GET
         SRDL  R4,32                    PROPER MINUTES
         D     R4,=F'60'                GET NUMBER PER HOUR
         CVD   R4,DMSWORK1
         UNPK  EDTTEXT1+102(2),DMSWORK1+6(2)
         OI    EDTTEXT1+103,240
         MVI   EDTTEXT1+104,C'.'
         MVC   EDTTEXT1+116(4),=C'REC '
         UNPK  EDTTEXT1+120(7),BLKSEQ(4)
         TR    EDTTEXT1+120(6),XTRTAB
         MVC   EDTTEXT1+126(6),BLANKS
         TM    BLKDATA+4,X'03'          UC UE
         BZ    EDT038
         MVC   EDTTEXT1+130(2),=C'UE'
         TM    BLKDATA+4,X'01'
         BO    EDT039
         MVC   EDTTEXT1+130(2),=C'UC'
         B     EDT039
EDT038   TM    BLKDATA+5,B'00111111'
         BZ    EDT039
         MVC   EDTTEXT1+130(2),=C'CC'
EDT039   MVI   EDTLINE1+1,137           SET LINE LNGT
         SLR   R2,R2
         ICM   R2,3,BLKRLEN
         SH    R2,=H'56'                DECR PROCESSED DATA
         LA    R3,56(0,R14)             -> RESIDUAL DATAS
         CLI   LINEREST+3,1             AT LEAST ONE LINE FREE
         BNL   EDT040                   YES, GO
         BAL   R9,EDTNPAGE
EDT040   PRINTER EDTLINE1
         TM    CCWNUM,ALLBIT            ARE CCW TO BE PRINTED
         BZ    EDTGET                   NO, PROCESS NEXT
         MVI   DTEXT11+9,C'R'
         MVI   DTEXT21+9,C'V'
         CH    R2,=H'12'                AT LEAST 12 BYTES
         BL    EDTGET                   NO, RETURN
         CLI   LINEREST+3,3             AT LEAST 4 LINES 4
         BNL   EDT041                   YES, GO
         BAL   R9,EDTNPAGE              SET NEW TITLE
EDT041   MVC   DATATIT1+102(10),XTRTAB
         UNPK  DATATIT1+103(9),0(5,R3)
         TR    DATATIT1+103(8),XTRTAB
         MVI   DATATIT1+111,64
         LA    R3,4(R0,R3)
         SH    R2,=H'4'                 SUBTRACT DEVTYPE FIELD
         PRINTER DATATITL
EDT045   MVI   DTEXT1S+4,C' '           SPACE                         1
         UNPK  DTEXT11+13(9),0(5,R3)    SET CAW TO PRINTER
         UNPK  DTEXT21+13(9),4(5,R3)    ALSO VIRTUAL ADDRESS
         TR    DTEXT11+13(8),XTRTAB
         TR    DTEXT21+13(8),XTRTAB
         MVI   DTEXT11+21,64
         MVI   DTEXT21+21,64
         LA    R3,8(0,R3)               INCREMENT RECORD ADDRESS
         SH    R2,=H'8'                 DECREMENT RESIDUAL
         BNP   EDTGET                   NO MORE DATA AVAILABLE
         SPACE
         UNPK  DTEXT11+22(9),0(5,R3)    SET CCW TO PRINT BUFFER
         MVC   DMSWORK1(4),4(R3)        SET SECOND HALF OF CCW
         NI    DMSWORK1,B'11111100'     CLEAR SOFT FLAGS
         UNPK  DTEXT11+31(9),DMSWORK1(5)
         TR    DTEXT11+22(17),XTRTAB
         MVI   DTEXT11+30,64
         MVI   DTEXT11+39,64
*        MVC   DTEXT21+22(8),BLANKS     BLANK OUT CCW VIRTUAL ADDR    1
         SH    R2,=H'8'                 DECREMENT RESIDUAL COUNT
         BNP   EDT042
         MVC   DMSWORK1(3),9(R3)        SET WORK FIELD
         UNPK  DTEXT21+24(7),DMSWORK1(4)
         TR    DTEXT21+24(6),XTRTAB                                   1
         MVI   DTEXT21+30,64
         SH    R2,=H'4'
EDT042   LA    R4,44                    SET PRINTOUT LNGT
         BNP   EDT043                   GO, IF NO MORE INPUT
         NI    EDITSW1,255-DATASKIP     CLEAR SKIP FLAG
         TM    4(R3),B'00010000'        IS SKIP FLAG ON IN CCW
         BZ    EDT043A                  NO, GO
         OI    EDITSW1,DATASKIP         SET DATA SKIP FLAG
EDT043A  TM    4(R3),B'00000011'        ANY DATA SAVE ON
         LA    R3,12(0,R3)              SET R3 TO DATA
         BO    EDT050                   GO TO IDA
         BM    EDT051                   GO TO NORMAL
EDT043   CLI   LINEREST+3,2             ARE    LINES FREE
         BNL   EDT044
         BAL   R9,EDTNPAGE
EDT044   STC   R4,DTEXT1S+1             SET THE LINE LNGT
         STC   R4,DTEXT2S+1
         PRINTER DTEXT1S
         PRINTER DTEXT2S
         CH    R2,=H'8'                 ANY MORE
         BL    EDTGET                   NO, GET NEXT
         B     EDT045
         SPACE 3
*        IDA WITH DATA LIST
         SPACE
EDT050   UNPK  DTEXT11+40(9),0(5,R3)    CONVERT IDAL
         UNPK  DTEXT11+49(9),8(5,R3)
         UNPK  DTEXT21+40(9),4(5,R3)
         UNPK  DTEXT21+49(9),12(5,R3)
         TR    DTEXT11+40(17),XTRTAB
         TR    DTEXT21+40(17),XTRTAB
         MVI   DTEXT11+48,64
         MVI   DTEXT11+57,64
         MVI   DTEXT21+48,64
         MVI   DTEXT21+57,64
         LA    R4,72                    SET LINE LNGT
         LA    R3,16(R3)
         SH    R2,=H'16'
         BNP   EDT043
         SPACE
*        DATA SAVE
EDT051   MVC   DTEXT11+59(2),=C'S+'     SET DISPL DIRECTION
EDT061   NI    EDITSW1,255-DATAHALF
EDT053   LH    R5,0(R3)                 GET DATA LNGT
         LTR   R5,R5                    IS IT SINGLE EXTENT
         BP    EDT052                   YES, GO
         OI    EDITSW1,DATAHALF         SET DOUBLE EXTENT
         LA    R3,2(R3)                 BASE FIRST EXTENT
         SH    R2,=H'2'                 DECR DATA LNGT
         B     EDT053                   RETRY
EDT052   LA    R3,2(0,R3)               FIRST DATA BYTE
         SH    R2,=H'2'                 DECR LNGT
         SH    R5,=H'2'                 DECREMENT LNGT OF COUNT
         BNP   EDT060A                  NO DATA AVAILABLE             1
         SLR   R6,R6                    CLEAR DISPL COUNTER
         CLR   R5,R2                    IS DATA LNGT > RECORD LNGT
         BNH   EDT054                   NO, GO
         LR    R5,R2                    YES, USE RESIDUAL RECORD LNGT
EDT054   SR    R2,R5                    CALCULATE RESIDUAL BYTES
         LA    R7,0(R5,R3)              INCR AND SAVE THE STOP VALUE
EDT055   ST    R6,DMSWORK1                   CONVERT THE DISPL
         CLI   DTEXT11+59,C'S'          IS IT START DISPLACEMENT
         BE    EDT064                   YES, GO
         ST    R5,DMSWORK1              SET NEGATIVE DISPLACEMENT
EDT064   UNPK  DTEXT11+62(5),DMSWORK1+2(3)
         TR    DTEXT11+62(4),XTRTAB     TRANSLATE TO HEXA
         MVI   DTEXT11+66,C' '
         CH    R5,=H'64'                     AT LEAST 64 BYTES
         BNH   EDT056                        NO, GO
         MVC   DTEXT11+68(64),0(R3)     SET
         MVC   DTEXT21+68(64),0(R3)     DATA
         MVC   DTEXT31+68(64),0(R3)     SET DATA FOR EBCDIC LINE     RE
         MVI   DTEXT1S+1,137            SET
         MVI   DTEXT2S+1,137            TEXT LNGT
         MVI   DTEXT3S+1,137            LENGTH FOR EBCDIC LINE       RE
         SH    R5,=H'64'                DECR.LNGT
         LA    R3,64(0,R3)              INCR DATA ->
         LA    R6,64(0,R6)              INCR DISPL
EDT059   TR    DTEXT11+68(64),TRTAB1    TRANSLATE FOR
         TR    DTEXT21+68(64),TRTAB2    TWO LINE PRESENTATION
         TM    EDTMODE,HEXEBC           IS HEXEBC SPECIFIED (3 LINES RE
         BNO   EDT059AA                 NO                           RE
         TR    DTEXT31+68(64),CHTRTAB   XLATE THIRD LINE TO EBCDIC   RE
         CLI   LINEREST+3,3             ARE LINES FRREE              RE
         B     EDT059BB                                              RE
EDT059AA CLI   LINEREST+3,2             ARE LINES FREE               RE
EDT059BB BNL   EDT057                   YES                          RE
         BAL   R9,EDTNPAGE              WRITE PAGE TITLE
EDT057   PRINTER DTEXT1S                PRINT
         PRINTER DTEXT2S                TEXT
         TM    EDTMODE,HEXEBC           HEXEBC MODE                  RE
         BNO   EDT057AA                 NO                           RE
         PRINTER DTEXT3S                PRINT EBDCID LINE            RE
EDT057AA DS    0H                                                    RE
         MVC   DTEXT11+9(50),DTEXT11+8  CLEAR
         MVC   DTEXT21+9(50),DTEXT21+8  LINES
         TM    EDITSW1,DATASKIP         WAS SKIP FLAG ON IN CCW
         BO    EDT060                   YES, STOP DATA EDIT
         CLI   EDTTEXT1,C'S'             IS IT A SIO RECORD
         BE    EDT058                   YES, GO
         TM    DATAIFLG,DATAIOF         IS DATALIST OFF
         BO    EDT060                   YES, GO
         B     EDT055                   NO, CONTINUE
EDT058   TM    DATASFLG,DATAIOF         IS DATALIST OFF
         BO    EDT060                   YES, GO
         B     EDT055                   NO, CONTINUE
EDT056   LTR   R5,R5                    ANY DATA BYTE
         BNP   EDT060                   NO, DONT WIRTE
         BCTR  R5,0                     DECR FOR EX
         EX    R5,MOVE01
         EX    R5,MOVE02
         EX    R5,MOVE03                                             RE
         LA    R0,74(0,R5)              SET
         STC   R0,DTEXT1S+1             PRINT
         STC   R0,DTEXT2S+1             LINE LNGT
         STC   R0,DTEXT3S+1             LINSERT LINE LENGTH          RE
         SLR   R5,R5                    CLEAR RESIDUAL COUNT
         B     EDT059
         SPACE
EDT060A  MVC   DTEXT11+68(20),=C'DATAS NOT ACCESSABLE'                1
         MVC   DTEXT21+68(20),=C'DATAS NOT ACCESSABLE'                1
         MVC   DTEXT31+68(32),BLANKS    CLEAR LINE                   RE
         MVC   DTEXT31+100(32),BLANKS   CLEAR LINE                   RE
         MVI   DTEXT1S+1,94             SET LINE LNGT                 1
         MVI   DTEXT2S+1,94             SET LINE LNGT                 1
         MVI   DTEXT3S+1,94                                          RE
         LR    R7,R3                    SET NEXT ENTRY                1
         MVC   DTEXT11+62(4),BLANKS     CLEAR DISPL                   1
         B     EDT059                                                 1
         SPACE                                                        1
MOVE01   MVC   DTEXT11+68(0),0(R3)      SET FIRST RESIDUL LINE
MOVE02   MVC   DTEXT21+68(0),0(R3)      SET FIRST RESIDUL LINE
MOVE03   MVC   DTEXT31+68(0),0(R3)      SET FIRST RESIDUAL           RE
         SPACE
EDT060   LR    R3,R7                    RELOAD DATA ->
         TM    EDITSW1,DATAHALF         ANY DATAS FROM BEHIND
         BZ    EDT072                   NO, GO
         MVC   DTEXT11+59(2),=C'P-'     SET NEG DISPL ID
         CLI   EDTTEXT1,C'S'            SIO RECORD
         BE    EDT062                   YES, GO
         TM    DATAIFLG,DATAIOF         I/O DATASAVE OFF
         BO    EDT070                   YES, GO
         B     EDT061                   RETRY
EDT062   TM    DATASFLG,DATAIOF         SIO DATASAVE OFF
         BO    EDT070                   YES, GO
         B     EDT061                   RETRY
EDT072   CH    R2,=H'8'                 AT LEAST 8 RESIDUAL BYTES
         BNH   EDTGET                   NO, DO NOT EDIT
         B     EDT045                   RETRY
EDT070   LH    R5,0(R3)                 GET DATA LNGT
         SPACE
         SLR   R2,R5                    DECR LNGT
         BNP   EDTGET                   NO MORE DATA
         LA    R3,0(R5,R3)              INCR TEXT ->
         B     EDT045                   RETRY                         2
         SPACE 3
*
*        END OF FILE FOR INPUT
*
         SPACE
EDTEOF   MESSAGE 026
         STM   R0,R15,CHAISAVE          SAVE REGISTERS
         L     R1,540                   MY TCB
         L     R2,0(,R1)                MY RB
         TM    17(R2),240               IN KEY ZERO
         BNZ   NOCHAP1                  NO, DO NOT CHANGE ASCB
         SR    R2,R2                    CLEAR FOR INSERT
         L     R1,548                   MY ASCB
         IC    R2,43(R1)                DISPATCHING PRIORITY
         SRL   R2,1                     SET TO HALF
         STC   R2,43(R1)                AND STORE VALUE
NOCHAP1  DS    0H
         L     R8,STRTELST              POINT TO START
         L     R5,0(R8)                 IS THERE A NEXT ONE
         LTR   R5,R5
         BZ    EOFCNT09                 NO, GO OUT
         MVI   CONLINE+4,C'1'           NEW PAGE
         MVC   CONLTEXT(30),=CL30'LOST EVENT RECORD NUMBERS ARE:'
         PRINTER CONLINE
         MVI   CONLINE+4,C' '           SPACE ONE
         MVC   CONLTEXT(30),CHTRTAB     CLEAR LINE
         LR    R5,R8                    POINT TO FIRST ONE
EOFCNT00 L     R3,8(R5)                 ARRANGE
         CL    R3,4(R5)                 RANGES
         BNL   *+14                     IN
         MVC   8(4,R5),4(R5)            SEQUENCE
         ST    R3,4(R5)
         L     R5,0(,R5)                GET NEXT ELEMENT
         LTR   R5,R5                    IS IT VALID ADDRESS
         BNZ   EOFCNT00                 YES, PROCESS
         DS    0H
EOFCNT01 LR    R4,R8                    SAVE REGISTER VALUE
EOFCNT02 LR    R5,R8                    START OF CHAIN
         L     R3,4(R4)                 GET LOW REC NUMBER
         CL    R3,8(,R4)                IS OLD SAME AS NEW
         BE    EOFCNT04                 YES, SKIP LOOP
         LA    R3,1(,R3)                INCREASE BY ONE
EOFCNT03 L     R5,0(R5)                 GET NEXT ELEMENT
         LTR   R5,R5
         BZ    EOFCNT04                 GO OUT AT END OF ELEMENTS
         CL    R3,4(R5)                 IS IT 'LOST' RECORD
         BNE   *+14                     NO, CHECK NEWEST
         ST    R3,4(,R4)                SET CURRENT AS *+1
         MVC   4(4,R5),8(R5)            YES, SET RANGE EQUAL
         CL    R3,8(,R5)                IS THIS 'LOST' RECORD
         BNE   EOFCNT03                 NO,CONTINUE
         ST    R3,4(,R4)                SET CURRENT AS *+1
         MVC   8(4,R5),4(R5)            YES, SET RANGE EQUAL
         B     EOFCNT03                 PROCESS ALL
EOFCNT04 LA    R3,1(,R3)                LOOK FOR NEXT NUMBER
         LR    R5,R8                    PROCESS WHOLE CHAIN AGAIN
         CL    R3,8(,R4)                IS NEXT ONE STILL VALID
         BL    EOFCNT03                 YES, PROCESS
         L     R4,0(,R4)                NO, BUMP POINTER
         LTR   R4,R4                    LAST IN CHAIN
         BNZ   EOFCNT02                 NO, PROCESS AGAIN
         L     R7,4(,R8)                PROCESS FIRST
         B     EOFCNT10                 AT ANY TIME
EOFCNT05 L     R7,4(,R8)                GET 'OLD' POINTER FOR PRINT
         LTR   R7,R7                    LAST ONE IN PROCESS
         BZ    EOFCNT09                 YES, SO LEAVE
EOFCNT10 LA    R7,1(,R7)                SET REG TO 'LOST' NUMBER
         CL    R7,8(,R8)                IS THERE AT LEAST ONE
         BNL   EOFCNT06                 NO, SKIP PRINT
         ST    R7,4(,R8)                SAVE TO WORK FIELD
         UNPK  CONLTEXT(7),5(4,R8)      SET FIRST LOST EVENT
         TR    CONLTEXT(6),XTRTAB       TO LINE
         MVC   CONLTEXT+6(12),CHTRTAB   BLANK OUT UNUSED FIELD
         L     R7,8(R8)                 GET LAST RECORD LOST
         BCTR  R7,R0
         CL    R7,4(R8)                 WAS IT ONLY ONE RECORD
         BL    EOFCNT06                 DO NOT PRINT ANY
         BE    EOFCNT07                 YES, PRINT IT
         ST    R7,4(R8)                 SAVE TO CLEAN AREA
         UNPK  CONLTEXT+9(7),5(4,R8)    SET
         MVI   CONLTEXT+15,64           RANGE OF
         TR    CONLTEXT+9(6),XTRTAB     LOST RECORDS
         MVI   CONLTEXT+7,C'-'
EOFCNT07 PRINTER CONLINE
EOFCNT06 L     R5,0(R8)                 GET NEXT
         CL    R8,STRTELST              IS IT START BUFFER
         BE    EOFCNT08                 YES, DO NOT FREEMAIN
         LA    R0,12                    NO,
         LR    R1,R8                    FREEMAIN
         SVC   10
EOFCNT08 LTR   R8,R5
         BNZ   EOFCNT05
EOFCNT09 L     R4,STRTELST
         ST    R4,STRTECUR              SET NEW CURRENT
         XC    LSTRCN(12),LSTRCN        CLEAR FIRST BUFFER
         L     R1,540                   MY TCB
         L     R1,0(,R1)                MY RB
         TM    17(R1),240               IN KEY ZERO
         BNZ   NOCHAP2                  NO DO NOT CHANGE ASCB
         SLL   R2,1                     SHIFT VALUE BACK
         LA    R2,1(,R2)                MAKE IT ODD VALUE
         L     R1,548                   MY ASCB
         STC   R2,43(R1)                RESET DP
NOCHAP2  DS    0H
         LM    R0,R15,CHAISAVE          RELOAD REGISTERS
EDTEOF1  CLOSE (EDTINPUT,REREAD)
         NI    INPFLAG,255-INPFIREC     RESET VALID EDIT INPUT
*        FREEPOOL EDTINPUT                                            2
         PRINTER NEWPAGE
         B     EDTRET00
         SPACE 3
*
*        PROGRAM TERMINATION
*
         SPACE
EDTRET04 MESSAGE 004
EDTRET12 OI    DMSFLAG1,NOGO
         LA    R15,12
         B     EDTRETRN
EDTRET00 SLR   R15,R15
EDTRETRN STC   R15,DMSRETCD
         L     R13,4(0,R13)
         RETURN (14,12),T,RC=(15)
         SPACE
         EJECT
*
*        CONSTANTS
*
         SPACE
EDTINPUT DCB   DDNAME=TRACEOUT,DSORG=PS,MACRF=(GL),EODAD=EDTEOF,       X
               RECFM=VB,LRECL=4100
         SPACE
EDTTODS  DS    D                        START TOD VALUE
EDTTODP  DS    D                        STOP  TOD VALUE
EDTCLOCK DS    D                        LAST TOD VALUE FOUND
EDTRSAVE DS    2F                       I/O REGISTER SAVE AREA
EDITSW1  DS    C                        SWITCHES AND FLAGS
IDADATA  EQU   128                      IDA IN PROCESS
DATAHALF EQU   64                       DATA FROM BEGIN AND END
DATASKIP EQU   32                       CCW HAS SKIP FLAG ON
         SPACE
IDAWORK  DS    D                        WORK AREA FOR IDA PROCESS
         SPACE
EDTLINE1 DC    AL2(137,0),C'0'
EDTTEXT1 DC    132C' '
         ORG   EDTTEXT1+32
         DC    C'CSW'
         ORG   EDTTEXT1+83
         DC    C'CPU'
         ORG   EDTTEXT1+97
         DC    C'TIME'
         ORG   EDTTEXT1+113
         DC    C'REC'
         ORG   EDTTEXT1+132
         SPACE
DTEXT1S  DC    AL2(DTEXT1P-DTEXT1S,0),C' '
DTEXT11  DC    132C' '
         ORG   DTEXT11+09
         DC    C'R'
         ORG   DTEXT11+132
DTEXT1P  EQU   *
         SPACE
DTEXT2S  DC    AL2(DTEXT2P-DTEXT2S,0),C' '
DTEXT21  DC    132C' '
         ORG   DTEXT21+09
         DC    C'V'
         ORG   DTEXT21+132
DTEXT2P  EQU   *
         SPACE 1                                                     RE
DTEXT3S  DC    AL2(DTEXT3P-DTEXT3S,0),C' '                           RE
DTEXT31  DC    132C' '                                               RE
         ORG   DTEXT31+132                                           RE
DTEXT3P  EQU   *                                                     RE
         SPACE 3
DATATITL DC    AL2(DATATITP-DATATITL,0),C' ' DATA SUBTITLE
DATATIT1 DC    132C' '
         ORG   DATATIT1+13
         DC    C'CCWADDR'
         ORG   DATATIT1+22
         DC    C'CCW'
         ORG   DATATIT1+40
         DC    C'IDAL S'
         ORG   DATATIT1+49
         DC    C'IDAL P'
         ORG   DATATIT1+59
         DC    C'DISPL'
         ORG   DATATIT1+68
         DC    C'DATA'
         ORG   DATATIT1+94
         DC    C'DEVTYPE: XXXXYYYY '
DATATITP EQU   *
         EJECT
EDTTSAVE DS    10F                      TEMP SAVE AREA
BLANKS   DC    32C' '                   BLANKS
NEWPAGE  DC    AL2(6,0),C'1 '           SET NEXT PAGE
         SPACE 2
BLDLLIST DC    AL2(01)                  BLDL-LIST FOR ONE ENTRY
         DC    AL2(80)
EDTMODUL DC    C'EDT'
EDTMODID DS    3C
EDTRTNBR DC    2C' '
         DC    72X'00'
         SPACE 2
XTRTAB   DS    0D                       HEXA TRANSLATION TABLE
         DC    256X'00'
         ORG   XTRTAB+C' '
         DC    C' '
         ORG   XTRTAB+C'A'
         DC    X'0A0B0C0D0E0F'
         ORG   XTRTAB+C'0'
         DC    C'0123456789ABCDEF'
         SPACE 2
CHTRTAB  DS    0D                       CHARACTER TRANSLATION
         DC    256C' '
         ORG   CHTRTAB+C'A'
         DC    C'ABCDEFGHI'
         ORG   CHTRTAB+C'J'
         DC    C'JKLMNOPQR'
         ORG   CHTRTAB+C'S'
         DC    C'STUVWXYZ'
         ORG   CHTRTAB+C'0'
         DC    C'0123456789'
         ORG   CHTRTAB+256
         SPACE 3
ZTRTAB   DS    0D                       ZONE DIGIT TRANSL
         DC    16C'0'
         DC    16C'1'
         DC    16C'2'
         DC    16C'3'
         DC    16C'4'
         DC    16C'5'
         DC    16C'6'
         DC    16C'7'
         DC    16C'8'
         DC    16C'9'
         DC    16C'A'
         DC    16C'B'
         DC    16C'C'
         DC    16C'D'
         DC    16C'E'
         DC    16C'F'
         ORG   ZTRTAB+C'A'
         DC    C'ABCDEFGHI'
         ORG   ZTRTAB+C'J'
         DC    C'JKLMNOPQR'
         ORG   ZTRTAB+C'S'
         DC    C'STUVWXYZ'
         ORG   ZTRTAB+C'0'
         DC    C'0123456789'
         ORG   ZTRTAB+256
         SPACE 3
DTRTAB   DS    0D                       DIGIT TRANSLATION
         DC    16CL16'0123456789ABCDEF'
         ORG   DTRTAB+C'A'
         DC    9C' '
         ORG   DTRTAB+C'J'
         DC    9C' '
         ORG   DTRTAB+C'S'
         DC    8C' '
         ORG   DTRTAB+C'0'
         DC    10C' '
         ORG   DTRTAB+256
         EJECT
*
*        ROUTINE SELECT TABLE
*
         SPACE
         WXTRN EDTCON0,EDTEXT0,EDTSVC0,EDTPGM0,EDTPER0,EDTDAT0,EDTMON0
         WXTRN EDTCON1,EDTEXT1,EDTSVC1,EDTPGM1,EDTPER1,EDTDAT1,EDTMON1
         WXTRN EDTCON2,EDTEXT2,EDTSVC2,EDTPGM2,EDTPER2,EDTDAT2,EDTMON2
         WXTRN EDTCON3,EDTEXT3,EDTSVC3,EDTPGM3,EDTPER3,EDTDAT3,EDTMON3
         WXTRN EDTCON4,EDTEXT4,EDTSVC4,EDTPGM4,EDTPER4,EDTDAT4,EDTMON4
         WXTRN EDTCON5,EDTEXT5,EDTSVC5,EDTPGM5,EDTPER5,EDTDAT5,EDTMON5
         WXTRN EDTCON6,EDTEXT6,EDTSVC6,EDTPGM6,EDTPER6,EDTDAT6,EDTMON6
         WXTRN EDTCON7,EDTEXT7,EDTSVC7,EDTPGM7,EDTPER7,EDTDAT7,EDTMON7
         WXTRN EDTCON8,EDTEXT8,EDTSVC8,EDTPGM8,EDTPER8,EDTDAT8,EDTMON8
         WXTRN EDTCON9,EDTEXT9,EDTSVC9,EDTPGM9,EDTPER9,EDTDAT9,EDTMON9
         SPACE
         WXTRN EDTMCH0,EDTIOS0,EDTSIO0,EDTDSP0
         WXTRN EDTMCH1,EDTIOS1,EDTSIO1,EDTDSP1
         WXTRN EDTMCH2,EDTIOS2,EDTSIO2,EDTDSP2
         WXTRN EDTMCH3,EDTIOS3,EDTSIO3,EDTDSP3
         WXTRN EDTMCH4,EDTIOS4,EDTSIO4,EDTDSP4
         WXTRN EDTMCH5,EDTIOS5,EDTSIO5,EDTDSP5
         WXTRN EDTMCH6,EDTIOS6,EDTSIO6,EDTDSP6
         WXTRN EDTMCH7,EDTIOS7,EDTSIO7,EDTDSP7
         WXTRN EDTMCH8,EDTIOS8,EDTSIO8,EDTDSP8
         WXTRN EDTMCH9,EDTIOS9,EDTSIO9,EDTDSP9
         SPACE 2
EDTRTNPT DC    A(EDTCON0)
         DC    A(EDTCON1)
         DC    A(EDTCON2)
         DC    A(EDTCON3)
         DC    A(EDTCON4)
         DC    A(EDTCON5)
         DC    A(EDTCON6)
         DC    A(EDTCON7)
         DC    A(EDTCON8)
         DC    A(EDTCON9)
         SPACE
         DC    A(EDTEXT0)
         DC    A(EDTEXT1)
         DC    A(EDTEXT2)
         DC    A(EDTEXT3)
         DC    A(EDTEXT4)
         DC    A(EDTEXT5)
         DC    A(EDTEXT6)
         DC    A(EDTEXT7)
         DC    A(EDTEXT8)
         DC    A(EDTEXT9)
         SPACE
         DC    A(EDTSVC0)
         DC    A(EDTSVC1)
         DC    A(EDTSVC2)
         DC    A(EDTSVC3)
         DC    A(EDTSVC4)
         DC    A(EDTSVC5)
         DC    A(EDTSVC6)
         DC    A(EDTSVC7)
         DC    A(EDTSVC8)
         DC    A(EDTSVC9)
         EJECT
         DC    A(EDTPGM0)
         DC    A(EDTPGM1)
         DC    A(EDTPGM2)
         DC    A(EDTPGM3)
         DC    A(EDTPGM4)
         DC    A(EDTPGM5)
         DC    A(EDTPGM6)
         DC    A(EDTPGM7)
         DC    A(EDTPGM8)
         DC    A(EDTPGM9)
         SPACE
         DC    A(EDTPER0)
         DC    A(EDTPER1)
         DC    A(EDTPER2)
         DC    A(EDTPER3)
         DC    A(EDTPER4)
         DC    A(EDTPER5)
         DC    A(EDTPER6)
         DC    A(EDTPER7)
         DC    A(EDTPER8)
         DC    A(EDTPER9)
         SPACE
         DC    A(EDTDAT0)
         DC    A(EDTDAT1)
         DC    A(EDTDAT2)
         DC    A(EDTDAT3)
         DC    A(EDTDAT4)
         DC    A(EDTDAT5)
         DC    A(EDTDAT6)
         DC    A(EDTDAT7)
         DC    A(EDTDAT8)
         DC    A(EDTDAT9)
         SPACE
         DC    A(EDTMON0)
         DC    A(EDTMON1)
         DC    A(EDTMON2)
         DC    A(EDTMON3)
         DC    A(EDTMON4)
         DC    A(EDTMON5)
         DC    A(EDTMON6)
         DC    A(EDTMON7)
         DC    A(EDTMON8)
         DC    A(EDTMON9)
         SPACE
         DC    A(EDTMCH0)
         DC    A(EDTMCH1)
         DC    A(EDTMCH2)
         DC    A(EDTMCH3)
         DC    A(EDTMCH4)
         DC    A(EDTMCH5)
         DC    A(EDTMCH6)
         DC    A(EDTMCH7)
         DC    A(EDTMCH8)
         DC    A(EDTMCH9)
         EJECT
         DC    A(EDTIOS0)
         DC    A(EDTIOS1)
         DC    A(EDTIOS2)
         DC    A(EDTIOS3)
         DC    A(EDTIOS4)
         DC    A(EDTIOS5)
         DC    A(EDTIOS6)
         DC    A(EDTIOS7)
         DC    A(EDTIOS8)
         DC    A(EDTIOS9)
         SPACE
         DC    A(EDTSIO0)
         DC    A(EDTSIO1)
         DC    A(EDTSIO2)
         DC    A(EDTSIO3)
         DC    A(EDTSIO4)
         DC    A(EDTSIO5)
         DC    A(EDTSIO6)
         DC    A(EDTSIO7)
         DC    A(EDTSIO8)
         DC    A(EDTSIO9)
         SPACE
         DC    A(EDTDSP0)
         DC    A(EDTDSP1)
         DC    A(EDTDSP2)
         DC    A(EDTDSP3)
         DC    A(EDTDSP4)
         DC    A(EDTDSP5)
         DC    A(EDTDSP6)
         DC    A(EDTDSP7)
         DC    A(EDTDSP8)
         DC    A(EDTDSP9)
         EJECT
CHAISAVE DC    16F'0'
STRTELST DC    A(LSTRCN)
STRTECUR DC    A(LSTRCN)
LSTRCN   DC    3F'0'                    -> NEXT,OLD NUMBER, NEW NUMBER
CONLINE  DC    AL2(35,0),CL6' '
CONLTEXT DC    CL30' '
         LTORG
         END
