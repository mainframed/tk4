* % GOTO STDEL1;
         MACRO
         STDE
STDE     DSECT                                                      YCC
* %STDEL1:;
*/********************************************************************/
*/* STDE: THE STATDIE FIXED DATA AREA                                */
*/* STORAGE FOR THIS CONTROL BLOCK IS ASSEMBLED INTO THE             */
*/*    STATDIE MODULE AT ENTRY POINT 'STATSTDE'.                     */
*/* METHOD OF ACCESS:                                                */
*/*    ASSEMBLER: THIS MACRO EXPANDS TO A DSECT 'STDE'. YOU          */
*/*    CAN LOCATE THE DATA AREA BY A                                 */
*/*            LOAD EP=STATSTDE                                      */
*/*            LR    RX,R0                                           */
*/*            USING STDE,RX                                         */
*/*     PLIX :   DCL STDEPTR PTR;                                    */
*/*              CALL LOADPTR('STATSTDE',STDEPTR);                   */
*/* DEPENDENCIES: USES VALUES SPECIFIED IN 'STATGLBL' AND 'STATPSW'  */
*/*     DSECTS.                                                      */
*/* VERSION DATE: JAN 1981                                           */
*/********************************************************************/
*   %GOTO STDEL2;
STDETQE  DS    CL128              TQE FOR DIE                       YCC
STDESRB  DS    CL44               SRB TO MOVE DATA TO BUFFER        YCC
STDELAST DS    0A                                                   YCC
         DS    X
STDEPURG EQU   X'80'              HIGH BIT SET TO PURGE DIE         YCC
STDEPAUS EQU   X'40'              SET TO FREEZE FIXED BUFFER        YCC
*    PAUS BIT NEVER TURNED ON IN CODE.  INCORE ZAP TO ACTIVATE      GEI
STDEATIV EQU   X'20'              STATDIE IS ACTIVE                 YCC
STDESRBA EQU   X'10'              SRB IS SCHEDULED                  YCC
*    SRBA BIT TURNED OFF WHEN SRB COPIES FIXED BUFFER.              GEI
         DS    X                                                    YCC
STDELSTO DS    H                                                    YCC
STDEBUFP DS    0A                 ADDRESS OF PAGABLE BUFFER         YCC
STDENXBF DS    X                  FIRST BYT IS INDEX OF NEXT BUFFER YCC
*                                 0 TO (PGBFCT-1)                   YCC
         DS    XL3                ADDRESS OF START OF BUFFERS       YCC
STDEGET  DS    A                  FREEMAIN INFO FOR PAGABLE BUFFER  YCC
STDEPLEN DS    H                  LENGTH OF A PAGABLE BUFFER        YCC
STDEPCNT DS    H                  COUNT OF PAGABLE BUFFERS          YCC
STDESRBI DS    H                  COPY OF SRBINTVL VALUE            YCC
STDEMDMN DS    H                  COPY OF MAXDMN BALUE              YCC
STDEMISS DS    H     NUMBER OF MISSED SAMPLES (STDESRBA ON)         GEI
STDEWORK DS    2D    WORK AREA; MUST BE AT LEAST 10 BYTES LONG      GEI
STDESAVE DS    9D    SAVE AREA; MUST BE AT LEAST 72 BYTES LONG      GEI
STDELADR DS    A                  LOWEST PRIVATE ADDRESS FROM PVT   YCC
STDEHADR DS    A                  HIGEST PRIVATE ADDRESS            YCC
STDEITOD DS    D           TOD OF CURRENT DIEEXIT ENTRY
STDETIMS DS    0XL(8*3)                                             GEI
STDETOD1 DS    D              TOD OF FIRST SAMPLE IN BUFFER         GEI
STDETODL DS    D              TOD OF LAST SAMPLE IN BUFFER          GEI
STDECPUT DS    D  TOTAL CPU TIME USED BY DIEEXIT FOR THESE SAMPLES  GEI
STDEENTY DS    (FXBUFL)X               FIXED BUFFER                 YCC
STDEFILL EQU   *-PSWLEN
STDELNTY EQU   *
STDEEXIT DS    0H                                                   YCC
STDELEN  EQU   *-STDE                                               YCC
         MEND
 %STDEL2:;
 DCL 1 STDE BASED(STDEPTR),
    5 STDETQE(0:127) BIT(8),           /* TQE FOR DIEEXIT            */
    5 STDESRB  CHAR(44),               /* SRB FOR STATSRB            */
    5 STDELAST,                        /*                            */
         9 STDEFLGS BIT(8) ALIGNED,    /* DEFINED BELOW              */
         9 STDEFILL1 BIT(8) ALIGNED,   /* RESERVED                   */
         9 STDELSTO FIXED BIN(15),     /* OFFSET OF NEXT PSW         */
    5 STDEBUFP PTR,                    /* ADDR OF PGBUF'S            */
      /* 1ST BYTE OF PTR IS NEXT BUFFER NUMBER, NEXT 3 BYTES         */
      /* CONTAIN THE ADDRESS OF THE FIRST BUFFER                     */
    5 STDEGET FIXED BIN(31),           /* FREEMAIN INFO              */
    5 STDEPLEN FIXED BIN(15),          /* LEN OF PGBUF               */
    5 STDEPCNT FIXED BIN(15),          /* # OF PGBUF'S               */
    5 STDESRBI FIXED BIN(15),          /* SRBINVTL VALUE             */
    5 STDEMDMN FIXED BIN(15),          /* MAXDMN VALUE               */
    5 STDEMISS FIXED BIN(15),          /* MISSED SAMPLES             */
    5 STDERSVD FIXED BIN(15),          /* RESERVED (UNUSED)          */
    5 STDEWORK CHAR(20),               /* STATDIE WORK AREA          */
    5 STDESAVE CHAR(72),               /* STATDIE SRB SAVE AREA      */
    5 STDELADR FIXED BIN(31),          /* LOWEST PRIVATE ADDR        */
    5 STDEHADR FIXED BIN(31),          /* LOWEST CSA ADDR            */
    5 STDEITOD BIT(64)   ALIGNED,      /* TIME WORK AREA             */
    5 STDETOD1 BIT(64)   ALIGNED,      /* STCK TIME OF FIRST SAMPLE  */
    5 STDETODL BIT(64)   ALIGNED,      /* STCK TIME OF LAST SAMPLE   */
    5 STDECPUT BIT(64)   ALIGNED,      /* CPU TIME USED BY DIEEXIT   */
    5 STDEENTY CHAR(0);                /* START OF PSWS              */
  /* STDEFLGS FLAGS                                                  */
 DCL STDEPURG BIT(8) ALIGNED INIT('10000000'B);
 DCL STDEPAUS BIT(8) ALIGNED INIT('01000000'B);
 DCL STDEATIV BIT(8) ALIGNED INIT('00100000'B);
 DCL STDESRBA BIT(8) ALIGNED INIT('00010000'B);
