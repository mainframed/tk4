* %GOTO PSWL1;
         MACRO
         STATPSW
* %PSWL1:;
*/********************************************************************/
*/* THE STATPSW CONTROL BLOCK HAS EVOLVED OVER SEVERAL VERSIONS      */
*/* OF STATDIE. ORIGINALLY IT WAS JUST A COPY OF THE EXTERNAL        */
*/* OLD PSW, AND THUS IT RECEIVED ITS NAME. BUT MANY OF THE          */
*/* FIELDS OF THE PSW ARE IRRELEVANT OR NEVER CHANGE, AND SO         */
*/* NEW SOFTWARE DEFINED BYTES AND BITS WERE OVERLAYED ON PARTS      */
*/* OF THE HARDWARE PSW.                                             */
*/* THE STATPSW'S ARE STORED FIRST IN THE STDE FIXED BUFFER, THEN    */
*/* MOVED TO THE PAGABLE BUFFER EVERY 'SRBINTVL*MILLISC'             */
*/* MILLISECONDS. THEY ARE EVENTUALLY WRITTEN OUT IN THE 'OMF1'      */
*/* RECORD.                                                          */
*/*                                                                  */
*/* METHOD OF ACCESS:                                                */
*/* ASSEMBLER: GENERATES A DSECT NAMED 'PSW'                         */
*/* PLIX: SINCE THE PSWS ARE ALWAYS AN ARRAY SUBSTRUCTURE,           */
*/*    THIS MACRO DOES NOT INCLUDE A HIGH LEVEL STRUCTURE LABEL.     */
*/*    SO BUILD THE REST OF THE STRUCTURE AND INCLUDE THIS           */
*/*    AT THE END.                                                   */
*/*                                                                  */
*/* VERSION DATE: JAN 1981                                           */
*/********************************************************************/
* %GOTO PSWL2;
PSW      DSECT                                                      YCC
PSWSVC   DS    X                  IF SVC IN CONTROL, THIS IS SVC #  YCC
PSWMASK  DS    X                                                    YCC
PSWKEY   EQU   X'F0'                                                YCC
PSWSVCMD EQU   X'08'              INTERRUPTED USER IN SVC           YCC
PSWSRB   EQU   X'04'              INTERRUPTED USER IN SRB MODE      YCC
PSWWAIT  EQU   X'02'                                                YCC
PSWPROB  EQU   X'01'                                                YCC
PSWPG    DS    H                  PERFORM GRP OF INTERRUPTED USER   GEI
PSWRDY   DS    X                  MIN (# READY TCBS, 255)           GEI
PSWINSWT DS    X                  FLAGS FOR INSTRUCTION             GEI
PSWRELAT EQU   X'80'              PSWINST IS RELATIVE FROM EPA      GEI
PSWJPAK1 EQU   X'40'              JOB PACK WAS SEARCHED FOR PSWINST GEI
PSWJPAK2 EQU   X'20'              JOB PACK SEARCH SUCCESSFUL        GEI
PSWERROR EQU   X'10'        INVALID SAMPLE; ERROR IN CONTROL BLKS   GEI
PSWLOCK  EQU   X'08'              PSW FOUND IN LOCK MANAGER         GEI
PSWCPUID EQU   X'01'              CPUID (0, 1) OF PSWINST           GEI
PSWINST  DS    AL3                ADDRESS OF NEXT INSTRUCTION       GEI
PSWNAME  DS    CL8                PGM NAME FROM PRB                 YCC
         ORG   *-4                                                  GEI
PSWERRCD DS    CL4                ERROR CODE IF PSWERROR ON         GEI
PSWLEN   EQU   *-PSW                                                YCC
         SPACE 1                                                    YCC
FXBUFL   EQU   PSWLEN*SRBINTVL                                      YCC
         MEND
 %PSWL2:;
              13 SVC BIT(8) ALIGNED,         /* SVC # IF SVCMD       */
              13 FLAGS BIT(8) ALIGNED,       /* DEFINED BELOW        */
              13 PERFORM   BIT(16) ALIGNED,  /* PERFORMANCE GRP      */
              13 TCBRDY BIT(8) ALIGNED,      /* READY TCB COUNT      */
              13 FLAGS2 BIT(8) ALIGNED,      /* DEFINED BELOW        */
              13 ADDRESS BIT(24) ALIGNED,    /* INSTRUCTION ADDR     */
              13 CDENAME CHAR(8);            /* MODULE NAME          */
   /* LAST 4 BYTES OF CDENAME CONTAIN CHAR(4) ERROR CODE IF PSWERROR */
   /* FLAGS BIT MASKS  (FIRST 4 BITS IS STORAGE PROTECT KEY)         */
 DCL SVCMD BIT(8) ALIGNED INIT('00001000'B);
 DCL SRB   BIT(8) ALIGNED INIT('00000100'B);
 DCL WAIT  BIT(8) ALIGNED INIT('00000010'B);
 DCL PBLM  BIT(8) ALIGNED INIT('00000001'B);
   /* FLAGS2 BIT MASKS                                               */
 DCL RELADDR   BIT(8) ALIGNED INIT('10000000'B);
 DCL JOBPACK1  BIT(8) ALIGNED INIT('01000000'B);
 DCL JOBPACK2  BIT(8) ALIGNED INIT('00100000'B);
 DCL PSWERROR  BIT(8) ALIGNED INIT('00010000'B);
 DCL INLOCK    BIT(8) ALIGNED INIT('00001000'B);
 DCL CPUID     BIT(8) ALIGNED INIT('00000001'B);
