STATDIE  TITLE 'ONLINE PSW SAMPLER RUN AS DIE EXIT'                 GEI
         MACRO                                                      YCC
&LAB     BNV   &REG,&GOTO                                           YCC
.*  HYPOTHETICAL BRANCH ON NOT VALID INSTRUCTION                    YCC
.*  TESTS THE ADDRESS IN THE REGISTER FOR A NON ZERO                YCC
.*  VALID VIRTUAL ADDRESS, AND BRANCHS TO THE SECOND ARGUMENT       YCC
.*  IF THE ADDRESS FAILS THE TEST. THIS DESTROYS REGISTER 0.        YCC
.*  USES PRIVILGED LRA INSTRUCTION, SO REQUIRES SUPERVISOR STATE    YCC
&LAB     LA    &REG,0(&REG)                                       × YCC
         LTR   &REG,&REG                                          × YCC
         BZ    &GOTO                                              × YCC
         LRA   R0,0(&REG)                                         × YCC
         BC    7,&GOTO                                            × YCC
         MEND                                                       YCC
         SPACE 5                                                    YCC
         GBLA  &MILLISC                                             YCC
         EJECT                                                      YCC
* MODULE:                                                           YCC
*        STATDIE                                                    YCC
* FUNCTION:                                                         YCC
*        A SOFTWARE MONITOR TO MEASURE CPU USE, RUNNING AS A        YCC
*        SELF SUSTAINING DISABLED EXIT OF THE TIMER SECOND          YCC
*        LEVEL INTERRUPT HANDLER. ONLY STANDARD SYSTEM              YCC
*        INTERFACES ARE USED AND NO SYSTEM MODIFICATION IS          YCC
*        REQUIRED. PERIODICALLY THE EXIT RECEIVES CONTROL AND       YCC
*        SAMPLES THE STATE OF THE SYSTEM AT THE TIMER               YCC
*        INTERRUPT. INFORMATION IS INITIALLY STORED IN A FIXED      YCC
*        TRACE BUFFER. WHEN THAT FILLS UP, AN SRB IS SCHEDULED      YCC
*        IN THE MASTER SCHEDULER ADDRESS SPACE TO COPY THE DATA     YCC
*        TO ONE OF A RING OF COMMON AREA PAGABLE BUFFERS AND TO     YCC
*        WRITE THE BUFFER TO SMF.                                   GEI
*                                                                   YCC
*         CURRENTLY THE SAMPLED INFORMATION INCLUDES THE PSW AT     YCC
*        THE TIME OF INTERRUPT, ACTIVE PERFORMANCE GROUP, COUNT     YCC
*        OF READY TCBS ON THE DISPATCHER QUEUE, SVC NUMBER IF       YCC
*        AN SVC IS IN CONTROL,  CPU ID, SYSTEM MODE (SRB, PROB,     YCC
*        SUPER), PROTECT KEY, AND MODULE NAME FROM THE CDE OFF      GEI
*        THE TOP PRB IN THE RB QUEUE. WHEN THE SRB IS SCHEDULED     GEI
*        IT ALSO TRACES THE CURRENT SRM RCT VALUES, THE             YCC
*        READY USER AVG, TARGET AND CURRENT MPL FROM DOMAIN TABLES, YCC
*        AND THE FRAME STATUS COUNTS IN THE PVT.                    GEI
*                                                                   GEI
* SYSTEM LEVEL:     MVS R3.8 + SE2                                  GEI
*                                                                   YCC
*        VERSION OF 5/5/77                                          YCC
*        VERSION OF 2/81 CONVERTED TO MSE2 BY LIONEL SILVA AT GEICO GEI
*                        (CHANGES MARKED WITH GEI)
* AUTHOR:                                                           YCC
*        HOWARD GILBERT                                             YCC
*        YALE COMPUTER CENTER                                       YCC
*        175 WHITNEY AVE                                            YCC
*        NEW HAVEN, CONN 06520                                      YCC
*        203 432-4080                                               YCC
*    UPGRADED TO MVS/SE2 AND REWORKED BY:                           GEI
*        UNITED STATES POSTAL SERVICE                               GEI
*        ATTN LIONEL SILVA                                          GEI
*        ROOM 5430                                                  GEI
*        475 L'ENFANT PLAZA, WEST, S.W.                             GEI
*        WASHINGTON, D.C.  20260                                    GEI
*        202/245-5545                                               GEI
*                                                                   GEI
* COMPONENTS:                                                       YCC
*        STATDIE - INITIALIZATION ENTRY POINT                       YCC
*        DIEPURG - SUBROUTINE USED TO PURGE DIE EXIT                GEI
*        STATSTDE- FIXED DATA TABLE                                 YCC
*        DIEEXIT - STATDIE TIMER DISABLED EXIT                      YCC
*        STATFRR - RECOVERY ROUTINE FOR DIEEXIT                     YCC
*        STATSRB - STATDIE 60 SECOND SRB                            YCC
*                                                                   YCC
* EXTERNAL REFERENCES: NONE                                         YCC
*                                                                   YCC
* MACROS:      ASSORTED MACROS FROM MACLIB, AMODGEN                 GEI
         EJECT                                                      YCC
*                   INSTALLATION                                    YCC
* TARGET LIBRARY: LPALIB (MUST BE IN FIXED LPA; USE IEAFIX00)       GEI
*                                                                   YCC
* LINKEDIT PARMS: RENT,REUS,REFR,AC=1                               YCC
*                                                                   YCC
* LINKEDIT CONTROL CARDS:                                           YCC
*            ALIAS STATSTDE                                         YCC
*            NAME STATDIE(R)                                        YCC
   PUNCH   ' ALIAS STATSTDE'                                        GEI
*                                                                   YCC
* PREREQUISITES:  MVS 3.8 WITH SE RELEASE 2                         GEI
*                 (TESTED TO 8011)                                  POD
*                                                                   YCC
* SYSTEM MODIFICATIONS: NONE                                        YCC
*                                                                   YCC
* STORAGE REQUIREMENTS:                                             YCC
*            7K FIXED LINK PACK CODE                                GEI
*           85K PAGABLE COMMON (2 PAGES FAULTED IN EVERY 60 SECONDS,
*                               THEN ALLOWED TO PAGE BACK OUT AGAIN)GEI
         SPACE 5                                                    YCC
* DISTRIBUTION:                                                     YCC
*        THIS MATERIAL IS NOT RESTRICTED IN ANY MANNER AND MAY      YCC
*        BE FREELY REPRODUCED AND DISTRIBUTED FOR ANY PURPOSE.      YCC
*        THERE ARE TWO LITTLE RULES:                                YCC
*          1) DO NOT COUNTERFIT THE 'YCC', 'GEI' OR 'POD' IN COLS   POD
*             69-71 OF THE STANDARD DISTRIBUTED VERSION IF YOU
*             MAKE CHANGES OR ADDITIONS.                            YCC
*                                                                   YCC
*          2) SEND LIONEL SILVA A NOTE IF YOU HAVE INSTALLED        GEI
*             AND USED THE PROGRAM SO HE CAN KEEP TABS ON ITS       YCC
*             POPULARITY AND CAN WARN ABOUT ANY LATE                YCC
*             CORRECTIONS.                                          YCC
*                                                                   YCC
*                                                                   YCC
         EJECT                                                      YCC
*                     PROGRAMMING NOTES                             YCC
*                                                                   YCC
*     'DIE' STANDS FOR DISABLED INTERRUPT EXIT. IN MVS THERE ARE TWOYCC
* KINDS OF DIE'S, ONE FOR IO AND ONE FOR TIMER INTERRUPTS. THE DIE  YCC
* IS A USER ROUTINE IN FIXED STORAGE POINTED TO BY A USER SUPPLIED  YCC
* CONTROL BLOCK AND RELATED TO AN OUTSTANDING SERVICE REQUEST WHICH YCC
* WILL EVENTUALLY GENERATE AN INTERRUPT. THE DIE IS AN AUTHORIZED   YCC
* SYSTEM INTERFACE. THE FOLLOWING DISCUSSION RELATES ONLY TO TIMER  YCC
* DIE'S.                                                            YCC
*     THE USER SUPPLIED CONTROL BLOCK FOR TIMER SERVICES IS THE     YCC
* TIMER QUEUE ELEMENT (TQE). 'USER' HERE MUST BE UNDERSTOOD TO      YCC
* BE A BROAD TERM, BECAUSE FOR MOST USERS THE TQE IS CONSTRUCTED    YCC
* AND QUEUED BY THE STIMER SVC AND NOT BY THE APPLICATION PROGRAM.  YCC
* WITH SUPERVISOR 2 (SU 7), A NEW SYSTEM SERVICE ROUTINE WAS        YCC
* INTRODUCED TO ALLOW KEY 0 USERS TO MORE EASILY BUILD THEIR OWN    YCC
* TQE'S. THIS SERVICE IS CALLED 'SETDIE' AND IS DOCUMENTED IN       YCC
* SPL:SUPERVISOR. THERE IS NO ASSOCATED MACRO.                      YCC
*      EACH TQE CONTAINS AN INTERRUPT TIME AND A POINTER TO THE     YCC
* DIE ROUTINE. ALL TIMER MANAGEMENT IN A MULTIPROCESSOR SYSTEM      YCC
* IS CONDUCTED BY CPU 0 IF IT HAS AN OPERABLE CLOCK.                YCC
* IF THIS TQE REPRESENTS THE EARLIEST INTERRUPT IN THE QUEUE, THE   YCC
* CLOCK COMPARATOR IS CHANGED. EITHER CPU CAN ACCESS THE TQE        YCC
* CHAIN WHILE HOLDING THE DISPATCHER LOCK. IF THE CLOCK             YCC
* COMPARATOR MUST BE CHANGED, HOWEVER, CPU 1 MUST SIGP CPU 0        YCC
* TO DO THE PROCESSING.                                             YCC
*      WHEN A TIMER INTERRUPT IS HONORED ON CPU 0, THE TIMER        YCC
* SECOND LEVEL INTERRUPT HANDLER DEQUES THE TQE AND EXITS TO        YCC
* THE DIE INDICATED IN IT. CONTROL IS RECEIVED IN THE ADDRESS       YCC
* SPACE DISPATCHED WHEN THE INTERRUPT WAS RECOGNIZED, PHYSICALLY    YCC
* DISABLED, WITH THE TIME OF INTERRUPT AND REGISTERS STORED IN      YCC
* THE LCCA. THE DIE EXIT CAN ONLY REFERENCE STORAGE LOCATIONS       YCC
* IN SQA, FIXED CSA, THE NUCLEUS, OR IN THE LSQA OF THE INTERRUPTED YCC
* ADDRESS SPACE. IT RETURNS CONTROL TO THE TIMER SLIH WHICH NORMALLYYCC
* EXITS TO THE DISPATCHER.                                          YCC
*     PRIOR TO RETURNING, THE DIE CAN REINITIALIZE THE TQE AND      YCC
* REQUE IT FOR THE NEXT INTERRUPT. THE TIMER DIE IS THUS A SELF     YCC
* SUSTAINING PROCESS, TIMER DRIVEN, BUT LOGICALLY UNRELATED TO      YCC
* ANY TASK OR ADDRESS SPACE OR JOB. ONCE INITIALIZED IT CONTINUES   YCC
* TO FUNCTION UNTIL PURGED BY SOME OTHER AUTHORIZED USER OR BY      YCC
* ITS OWN INTERNAL ERROR. FURTHERMORE, IT IS A USER EXIT AND DOES   YCC
* NOT REPLACE OR EFFECT ANY STANDARD SYSTEM ROUTINES. THIS TECHNIQUEYCC
* IS IDENTICAL TO THAT USED BY MF1 AND RMF FOR THEIR DEVICE AND     YCC
* CHANNEL SAMPLING EXITS, AND BY THE SRM FOR ITS ONCE-A-SECOND      YCC
* SYSTEM STATUS EVALUATION AND PAGE STEALING EXIT, BUT IT IS        YCC
* A LOGICALLY SEPARATE FUNCTION.                                    YCC
         EJECT                                                      YCC
*      STATDIE HAS GONE THROUGH SEVERAL DEVELOPMENTAL PHASES. THIS  GEI
* VERSION IS A MAJOR MODIFICATION TO PREVIOUS RELEASES. THE PRIMARY GEI
* EMPHASIS OF THIS RELEASE HAS BEEN:                                GEI
*                                                                   GEI
* 1) PROVIDE SUPPORT NECESSARY FOR MVS/SE2.                         GEI
*                                                                   GEI
* 2) DOES NOT USE THE REST OF YALE OURMF.  IT WRITES                GEI
*    ITS CSA BUFFERS DIRECTLY TO SMF INSTEAD OF RELYING ON A        GEI
*    STARTED TASK (I.E. OMF) TO WRITE THE BUFFERS TO TAPE.          GEI
*                                                                   GEI
* 3) THE CONTENTS OF THE PSW AREA HAS BEEN MODIFIED TO PROVIDE      GEI
*    MORE INFORMATION.  ALSO THE PAGABLE BUFFER EXISTS IN AN SMF    GEI
*    RECORD FORMAT AND CONTAINS MORE INFORMATION.  ALL SUPPORT      GEI
*    FOR THE 'WAMT' HAS BEEN DROPPED. (RMF DOES A FINE JOB HERE.)   GEI
*                                                                   GEI
* 4) STATDIE NOW MUST BE IN FIXED LPA (VIA PARMLIB FIX LIST).       GEI
*    THE PREVIOUS VERSION DID NOT REQUIRE THIS, AND DID PGFIX       GEI
*    ON AREAS OF STATDIE WHICH NEEDED TO BE FIXED IF THEY WERE NOT  GEI
*    ALREADY FIXED.  IT ALSO MODIFIED THE PAGE TABLES TO NAIL THE   GEI
*    PGFIX.                                                         GEI
*                                                                   GEI
* 5) DIEPURG HAS BEEN CHANGED TO BE A SUBROUTINE OF STATDIE.        GEI
*    IT IS ENTERED BY EXECUTING STATDIE WITH A PARM OF 'OFF'.       GEI
*                                                                   GEI
* 6) MORE OPERATOR MESSAGES, AND INTERNAL ERROR INFO WERE           GEI
*    INCORPORATED.                                                  GEI
*                                                                   GEI
* 7) ELIMINATED USE OF 'IRA' CONTROL BLOCK MAPPING MACROS.          GEI
*    USE HARDCODED RELATIVE OFFSETS INTO CONTROL BLOCKS.  NOTE      GEI
*    THAT THESE OFFSETS MAY NEED TO BE UPDATED WITH NEW RELEASES    GEI
*    OF MVS.  THE OFFSETS USED ARE WELL DOCUMENTED IN THE CODE.     GEI
*                                                                   GEI
* 8) GENERAL CLEANUP AND OPTIMIZATION.                              GEI
*                                                                   GEI
*                                                                   GEI
*                                                                   GEI
* KNOWN BUGS:     <==========                                       GEI
*                                                                   GEI
*                                                                   GEI
*  ** IF ANYONE FIXES ANY OF THESE, PLEASE CONTACT LIONEL SILVA SO  GEI
*     THE FIX CAN BE INCORPORATED INTO THE MASTER COPY.             GEI
*                                                                   GEI
*                                                                   GEI
*                                                                   GEI
*  1)  PSW RELATIVIZATION LOGIC DOES NOT WORK.                      GEI
*                                                                   GEI
*                                                                   GEI
*                                                                   GEI
*  2)  JOB PACK SEARCH LOGIC RARELY FINDS CDE (TURNED OFF AT        GEI
*      LABEL JOBPAK IN PGM).                                        GEI
*                                                                   GEI
*                                                                   GEI
         EJECT                                                      YCC
STATDIE  CSECT                                                      YCC
         STATGLBL
         EJECT                                                      YCC
**                                                                  YCC
* DSECTS                                                            YCC
**                                                                  YCC
         SPACE 1                                                    YCC
         STATPSW
         EJECT
         STDE
         EJECT
         PGBUF
         SPACE 5
R0       EQU   0                                                    YCC
R1       EQU   1                                                    YCC
R2       EQU   2                                                    YCC
R3       EQU   3                                                    YCC
R4       EQU   4                                                    YCC
R5       EQU   5                                                    YCC
R6       EQU   6                                                    YCC
R7       EQU   7                                                    YCC
R8       EQU   8                                                    YCC
R9       EQU   9                                                    YCC
R10      EQU   10                                                   YCC
R11      EQU   11                                                   YCC
R12      EQU   12                                                   YCC
R13      EQU   13                                                   YCC
R14      EQU   14                                                   YCC
R15      EQU   15                                                   YCC
         EJECT                                                      YCC
*****************************************************************   YCC
* PROCEDURE:                                                    *   YCC
*        STATDIE                                                *   YCC
* FUNCTION:                                                     *   YCC
*        INITIALIZATION OF DIE PROCESSING                       *   YCC
* ATTRIBUTES:                                                   *   YCC
*        AUTHORIZED, REUSABLE                                   *   YCC
* ENTRY CONDITIONS:                                             *   YCC
*        NORMAL OS LINKAGE FOR ENTRY AND EXIT.                  *   YCC
* EXEC STATEMENT PARM                                           *   GEI
*        OFF    TURN OFF STATDIE (INVOKE DIEPURG ROUTINE)       *   GEI
*    ON (OR NONE) TURN ON STATDIE EXIT                          *   GEI
* RETURN CODES:                                                 *   YCC
*        0  DIE ESTABLISHED NORMALLY (OR TURNED OFF)            *   YCC
*        4  DIE WAS ALREADY ACTIVE OR NO CLOCK AVAILABLE OR     *   YCC
*           DIE WAS NOT ACTIVE WITH PARM=OFF                    *   YCC
*        8  ERROR PURGING DIE                                   *   YCC
*       12  THIS MODULE IS NOT IN FIXED LPA                     *   GEI
*       16  INVALID EXEC PARM                                   *   GEI
*****************************************************************   YCC
* INTERNAL PROGRAMMING CONVENTIONS:                             *   YCC
*                                                               *   YCC
* ACTIVE EXIT LABELS:                                           *   YCC
*        RESET - BRANCHED TO FROM KEY ZERO CODE. MODESETS       *   YCC
*             BACK TO PROBLEM STATE. R15 CONTAINS RETURN        *   YCC
*             CODE.                                             *   YCC
*        RET - BRANCHED TO FROM PROBLEM KEY CODE. R15           *   YCC
*             CONTAINS RETURN CODE.                             *   YCC
* REGISTER USAGE:                                               *   YCC
*        R2-R5  WORK REGISTERS                                  *   YCC
*        R6     STDE AREA POINTER                               *   YCC
*        R7     SAVEAREA ADDRESS (R13 SAVED)                    *   YCC
*        R10    BASE REGISTER                                   *   YCC
*****************************************************************   YCC
         EJECT                                                      YCC
**                                                                  YCC
* NORMAL OS ENTRY                                                   YCC
**                                                                  YCC
STATDIE  CSECT                                                      YCC
         SAVE  (14,12),,*                                           YCC
         BALR  R10,0                                                YCC
         USING *,R10                                                YCC
         USING PSA,R0                                               YCC
         LR    R7,R13                                               YCC
         SPACE 5                                                    YCC
**                                                                  GEI
* SEE IF STATDIE IS TO BE TURNED OFF (PARM=OFF).                    GEI
* IF SO, CALL DIEPURG ROUTINE AND EXIT.                             GEI
**                                                                  GEI
         L     R1,0(R1)          GET PARM ADDRESS                   GEI
         LH    R15,0(R1)                                            GEI
         LTR   R15,R15           ANY PARM SUPPLIED?                 GEI
         BE    TURNON                                               GEI
         CH    R15,=H'2'                                            GEI
         BL    BADPARM                                              GEI
         CLC   2(2,R1),=CL2'ON'  TURN DIE OFF?                      GEI
         BE    TURNON                                               GEI
         CH    R15,=H'3'                                            GEI
         BH    BADPARM                                              GEI
         CLC   2(3,R1),=CL3'OFF'  TURN DIE OFF?                     GEI
         BE    TURNOFF                                              GEI
BADPARM  DS    0H                                                   GEI
         WTO   '** STATDIE ** - INVALID PARM.  MUST BE ON, OFF OR OMITTX
               ED.',ROUTCDE=(1,11),DESC=4                           GEI
         LA    R15,16            INVALID PARM                       GEI
         B     RET                                                  GEI
TURNOFF  DS    0H                                                   GEI
         L     R15,=A(DIEPURG)   CALL DIEPURG                       GEI
         LA    R14,RET           SET RETURN ADDRESS                 GEI
         BR    R15                                                  GEI
*
*======>  NOTE DIEPURG SUBROUTINE DOES *NOT* SAVE/RESTORE REGISTERS
*
         SPACE 5                                                    YCC
**                                                                  YCC
* IT IS ESSENTIAL THAT THIS PROGRAM RUN IN FIXED LPA                GEI
* THE TQE WILL GO ON THE TIMER QUEUE, AND A LOT OF CODE WILL BE     YCC
* EFFECTED IF THE TQE ADDRESS IS NOT IN COMMON STORAGE.             YCC
* SO WE CHECK ITS ADDRESS TO INSURE IT IS NOT IN THE PRIVATE AREA   YCC
**                                                                  YCC
TURNON   LA    R10,0(R10)                                           GEI
         L     R2,CVTPTR                                            YCC
         L     R2,CVTPVTP-CVT(R2)                                   YCC
         USING PVT,R2                                               YCC
         LH    R0,PVTLPRIV        RBN OF LOWEST PRIVATE ADDR        YCC
         SLL   R0,8               CONVERT TO ADDRESS                YCC
         CR    R0,R10             COMPARE TO PROGRAM BASE           YCC
         BH    INFLPA             TEST FOR FIXED LPA                GEI
         WTO   '** STATDIE ** - NOT INITIALIZED.  MODULE NOT IN FIXED LX
               INKPACK.',ROUTCDE=(1,11),DESC=4                      GEI
         LA    R15,12                                               GEI
         B     RET                END WITH RETURN CODE 12           GEI
INFLPA   DS    0H                 COME HERE IF IN FLPA              GEI
         DROP  R2                                                   YCC
         SPACE 5                                                    YCC
         LA    R6,STATSTDE                                          YCC
         USING STDE,R6                                              YCC
         LA    R15,4                                                YCC
         TM    STDELAST,STDEATIV+STDEPURG                           YCC
         BNZ   RET                                                  YCC
         SPACE 5                                                    YCC
**                                                                  YCC
* THIS BEGINS A MODESET BLOCK. CODE IN THIS BLOCK EXECUTES IN KEY 0 YCC
* AND SUPERVISOR STATE. EXIT MAY NOT BE MADE FROM THIS BLOCK EXCEPT YCC
* BY A BRANCH TO 'RESET' WHICH IS THE MODESET BACK TO PROBLEM STATE YCC
* AT THE END OF THE BLOCK                                           YCC
**                                                                  YCC
         MODESET KEY=ZERO,MODE=SUP ------------------------------>× YCC
         SPACE 5                                                  × YCC
**                                                                × YCC
*     ZERO THE TQE AND STDE                                       × YCC
**                                                                × YCC
         LA    R2,STDE                                            × YCC
         L     R3,=A(STDELEN)                                     × YCC
         SLR   R4,R4                                              × YCC
         SLR   R5,R5                                              × YCC
         MVCL  R2,R4                                              × YCC
         SPACE 2                                                  × YCC
**                                                                × YCC
* OBTAIN PAGABLE BUFFERS AND SAVE THEIR ADDRESS                   × YCC
**                                                                × YCC
         LA    R2,STDEBUFP                                        × YCC
         L     R15,0(R2)      SEE IF POINTER IS ZERO              × GEI
         LTR   R15,R15                                            × GEI
         BZ    GETCSA                                             × GEI
         CLC   STDEGET,GETINFO  SET TO CSA?                       × GEI
         BE    HAVECSA                                            × GEI
GETCSA   XC    STDEWORK(10),STDEWORK                              × YCC
         GETMAIN EU,LV=PGBFCT*PGBLEN,SP=241,A=(2),BNDRY=PAGE,     × YCC*
               MF=(E,STDEWORK)                                    × YCC
HAVECSA  MVC   STDEGET,GETINFO                                    × YCC
         MVC   STDELSTO,=AL2(STDEFILL-STDEENTY)
         MVC   STDEPLEN(8),=AL2(PGBLEN,PGBFCT,SRBINTVL,MAXDMN)    × YCC
         L     R2,STDEBUFP                                        × YCC
         L     R3,GETINFO                                         × YCC
         LA    R3,0(R3)                                           × YCC
         SLR   R4,R4                                              × YCC
         SLR   R5,R5                                              × YCC
         MVCL  R2,R4              ZERO BUFFER                     × YCC
         OI    STDELAST,STDEATIV   MARK ME ACTIVE                 × YCC
         SPACE 5                                                  × YCC
**                                                                × YCC
* NOW FINISH OFF TQE INITIALIZATION AND BRANCH TO SETDIE          × YCC
**                                                                × YCC
         LA    R1,STDE            COPY TQE ADDRESS                × GEI
*                                                                   GEI
*  IHATQE MACRO IS NOT SUPPLIED SO RELATIVE OFFSETS ARE USED IN THE GEI
*  CODE BELOW.  THESE NEED TO BE ADJUSTED IF ANY OF THE FOLLOWING   GEI
*  FIELDS CHANGE THEIR POSITION:                                    GEI
*      TQEVAL (+16), TQEEXIT (+28)                                  GEI
*                                                                   GEI
         LR    R2,R1              INITIALIZE TQE                    GEI
         A     R2,=A(INCREMT-STATSTDE)  GET ADDRESS OF INCREMENT    GEI
         MVC   16(8,R1),0(R2)    SET TQEVAL (INCREMENT)             GEI
         LR    R15,R1                                             × GEI
         A     R15,=A(STDEEXIT-STDE)                                GEI
         ST    R15,28(R1)        SET TQEEXIT (EXIT ADDRESS)       × GEI
         SPACE 2                                                  × YCC
         L     R15,CVTPTR                                         × YCC
         USING CVT,R15                                            × YCC
         L     R2,CVTPVTP
         USING PVT,R2                                             × YCC
         MVC   STDELADR+1(2),PVTLPRIV                             × YCC
         MVC   STDEHADR+1(2),PVTLCSA                              × YCC
         DROP  R2                                                 × YCC
         L     R15,CVTTPC                                         × YCC
         DROP  R15                                                × YCC
         USING TPC,R15                                            × YCC
         L     R15,TPCSDIE                                        × YCC
         DROP  R15                                                × YCC
**                                                                × YCC
* 1) R1 CONTAINS ADDRESS OF 128 BYTE FIXED TQE, ZERO EXCEPT FOR   × YCC
*    A) TQEAID - STILL ZERO SINCE NO PERMINENT ASID IS ASSOCIATED × YCC
*          WITH THIS TQE.                                         × YCC
*    B) TQEVAL - CONTAINS TIME INTERVAL TO FIRST INTERRUPT.       × YCC
*    C) TQEEXIT - CONTAINS ADDRESS OF STDEEXIT, THE SQA RESIDENT  × YCC
*          COPY OF THE DIEEXIT CODE.                              × YCC
* 2) R2-R12 ARE UNIMPORTANT                                       × YCC
* 3) WE ARE TCB, KEY ZERO, ENABLED SUPERVISOR STATE.              × YCC
**                                                                × YCC
         BALR  R14,R15                                            × YCC
**                                                                × YCC
* LOSS OF R13-R3 HAS OCCURRED                                     × YCC
**                                                                × YCC
         DROP  R6                                                 × YCC
         SPACE 5                                                  × YCC
**                                                                × YCC
* CLEANUP AND RETURN                                              × YCC
**                                                                × YCC
RESET    MODESET KEY=NZERO,MODE=PROB <----------------------------× YCC
         SLR   R15,R15            SET RETURN CODE                   YCC
         SPACE 2                                                    YCC
RET      LR    R13,R7                                               YCC
         RETURN (14,12),RC=(15)                                     YCC
         SPACE 5                                                    YCC
**                                                                  YCC
* STATDIE CONSTANTS                                                 YCC
**                                                                  YCC
         DS    0F                                                   YCC
GETINFO  DC    AL1(241),AL3(PGBFCT*PGBLEN)                          YCC
         EJECT                                                      YCC
*****************************************************************   YCC
* PROCEDURE:                                                    *   YCC
*        DIEPURG                                                *   YCC
* FUNCTION:                                                     *   YCC
*        PURGES ACTIVE STATDIE FUNCTION                         *   YCC
* PROGRAMMING NOTE:                                             *   YCC
*        THIS IS INVOKED BY:                                    *   GEI
*              EXEC PGM=STATDIE,PARM=OFF                        *   YCC
*        OR CAN BE LINKED TO BY ANY AUTHORIZED PROGRAM          *   YCC
* ATTRIBUTES:                                                   *   YCC
*        AUTHORIZED, REENTRANT                                  *   YCC
* ENTRY CONDITIONS:                                             *   YCC
*        SUBROUTINE OF STATDIE                                  *   YCC
* IMPORTANT NOTE <=====================>:                       *   GEI
*        THIS SUBROUTINE DOES NOT SAVE/RESTORE ITS REGISTERS    *   GEI
* RETURN CODES                                                  *   YCC
*        0  DIE HAS BEEN PURGED                                 *   YCC
*        4  DIE WAS NOT ACTIVE                                  *   YCC
*        8  ERROR PURGING DIE                                   *   YCC
*****************************************************************   YCC
* PROGRAMMING NOTES:                                            *   YCC
* THERE IS NO SYNCHRONOUS WAY TO PURGE STATDIE WITHOUT          *   YCC
* A LOT OF UNNECESSARY LOCKING. IN A MP ENVIRONMENT,            *   YCC
* EITHER THE DIE OR THE SRB CAN BE ON THE OTHER CPU WHEN        *   YCC
* DIEPURG IS INVOKED. HOWEVER, EVERYTHING IS TIMER DRIVEN       *   YCC
* SO THIS ENTRY POINT SIMPLY SETS THE                           *   YCC
* STDEPURG BIT AND THEN SUSPENDS EXECUTION WITH A STIMER FOR    *   YCC
* LONG ENOUGH TO INSURE THAT THE DIE HAS TERMINATED             *   YCC
* ITSELF.                                                       *   YCC
*                                                               *   YCC
* REGISTER USAGE:                                               *   YCC
*        R5 HOLDS RETURN CODE FOR OS RETURN                     *   YCC
*        R6 POINTS TO STDE                                      *   YCC
*        R7 RESERVED (HOLDS R13 FROM STATDIE)                   *   GEI
*        R8 HOLDS R14 AT ENTRY (MY RETURN ADDRESS)              *   GEI
*        R10 BASE REGISTER                                      *   YCC
*****************************************************************   YCC
         EJECT                                                      YCC
DIEPURG  LR    R10,R15                                              GEI
         USING DIEPURG,R10                                          YCC
         LR    R8,R14        SAVE MY RETURN ADDRESS                 GEI
         LA    R6,STATSTDE                                          YCC
         USING STDE,R6                                              YCC
         TM    STDELAST,STDEATIV                                    YCC
         BO    GOING                                                GEI
         WTO   '** DIEPURG ** - STATDIE NOT ACTIVE.',ROUTCDE=(1,11),   1
               DESC=4                                               GEI
         LA    R5,4                                                 GEI
         B     RETPRG                                               GEI
GOING    DS    0H                                                   GEI
         SPACE 2                                                    YCC
**                                                                  YCC
* THIS BEGINS A MODESET BLOCK. CODE IN THIS BLOCK EXECUTES IN KEY 0 YCC
* AND SUPERVISOR STATE. EXIT MAY NOT BE MADE FROM THIS BLOCK        YCC
* EXCEPT BY A BRANCH TO 'RUNNING' WHICH IS THE MODESET BACK TO      YCC
* PROBLEM STATE AT THE END OF THE BLOCK                             YCC
**                                                                  YCC
         MODESET KEY=ZERO,MODE=SUP ------------------------------>× YCC
         SPACE 2                                                  × YCC
         OI    STDELAST,STDEPURG  SCHEDULE THE DIE TO PURGE SELF  × YCC
         SPACE 2                                                  × YCC
         STIMER WAIT,BINTVL=SECS WAIT A FEW SECONDS               × YCC
         SPACE 2                                                  × YCC
*                                                                   GEI
* FIXED VALUES FOR TQEFLGS (+14) AND TQEOFF (EQU FOR X'80')         GEI
*  CORRECT IF THESE CHANGE DUE TO SYSTEM MAINTAINENCE               GEI
*                                                                   GEI
         TM    14(R6),X'80'       IS TQE OFF TIMER QUEUE?         × GEI
         BO    TURNEDOF           THIS IS AN ERROR, DIE STILL GOIN× GEI
         WTO   '** DIEPURG ** - STATDIE COULD NOT BE TURNED OFF.',     1
               ROUTCDE=(1,11),DESC=4                                GEI
         LA    R5,8                                               × GEI
         B     RUNNING                                              GEI
TURNEDOF DS    0H                                                   GEI
         SPACE 2                                                  × YCC
         NI    STDELAST,X'FF'-STDEATIV-STDEPURG                   × GEI
         L     R1,STDEBUFP                                        × YCC
         L     R0,STDEGET                                         × YCC
         FREEMAIN R,LV=(0),A=(1) FREE PAGABLE BUFFERS             × YCC
         SPACE 2                                                  × YCC
         XC    STDEBUFP,STDEBUFP                                  × GEI
         XC    STDEGET,STDEGET                                    × GEI
         SLR   R5,R5        CLEAR RETURN CODE                     × YCC
         DROP  R6                                                 × YCC
         SPACE 2                                                  × YCC
RUNNING  MODESET KEY=NZERO,MODE=PROB <----------------------------× YCC
         SPACE 2                                                    YCC
RETPRG   LR    R15,R5                                               YCC
         BR    R8                                                   GEI
SECS     DC    FS4E-1'&MILLISC'  16 TIMES STATDIE INTERVAL          GEI
         LTORG                                                      YCC
         EJECT                                                      YCC
         ENTRY STATSTDE                                             YCC
STATSTDE DS    0D                                                   YCC
**                                                                  YCC
* THIS IS THE STDE ONCE IT IS FIXED IN CORE                         YCC
*                                                                   YCC
* SEE THE STDE DSECT FOR A DESCRIPTION OF THE CONTENTS OF THIS      YCC
* CONTROL BLOCK                                                     YCC
**                                                                  YCC
         DC    (STDELEN)X'00'                                       YCC
         EJECT                                                      YCC
*****************************************************************   YCC
* PROCEDURE :                                                   *   YCC
*        DIEEXIT                                                *   YCC
*        THE SYSTEM STATISTICS TIME DISABLED EXIT               *   YCC
* ATTRIBUTES:                                                   *   YCC
*        KEY ZERO, SUPERVISOR STATE, PHYSICALLY DISABLED        *   YCC
*        RUNS IN AN ARBITRARY ADDRESS SPACE UNDER THE TIMER SLIH*   YCC
* ENTRY CONDITIONS:                                             *   YCC
*        R1  POINTS TO TQE                                      *   YCC
*        R14 CONTAINS RETURN ADDRESS                            *   YCC
*        R15 CONTAINS ENTRY POINT ADDRESS                       *   YCC
* EXIT CONDITONS:                                               *   YCC
*        NORMAL - RETURN WITH TQE REQUED FOR NEXT INTERRUPT.    *   YCC
*        PAUSED - RETURN WITH TQE REQUED BUT STDE UNCHANGED.    *   YCC
*        PURGED - RETURN WITHOUT REQUING TQE.                   *   YCC
* RECOVERY  ENVIRONMENT:                                        *   YCC
*        THE DATA GATHERING PHASE IS COVERED BY A FRR           *   YCC
*        ROUTINE WHICH PROTECTS THE INTERRUPTED TASK            *   YCC
*        FROM THE NORMAL RECOVERY OF TIMER SLIH WHEN A          *   YCC
*        TRANSLATION EXCEPTION IS RECOGNIZED IN A DIE.          *   YCC
* LOCKING CONVENTIONS:                                          *   YCC
*        THE DISP LOCK IS OBTAINED PRIOR TO CALLING THE TQE ENQUE   YCC
*        ROUTINE, AND IT IS RELEASED AFTER IT RETURNS TO US.    *   YCC
*****************************************************************   YCC
* INTERNAL PROGRAMMING CONVENTIONS:                             *   YCC
*                                                               *   YCC
* REGISTER USAGE:                                               *   YCC
*        R0-R1 WORK REGISTERS                                   *   YCC
*        R2: ADDRESS OF PSW                                     *   YCC
*        R3: ADDRESS OF ASCB OR XTLST                           *   YCC
*        R4: ADDRESS OF TCB , RB, OR CDE                        *   YCC
*        R5: WORK REGISTER                                      *   YCC
*        R6: ADDRESS OF TQE IN STDE                             *   YCC
*        R7-R8 WORK REGISTERS                                   *   YCC
*        R9 : HOLDS THE RETURN ADDRESS                          *   YCC
*        R10: BASE REGISTER                                     *   YCC
*        NO REGISTERS ARE SAVED OR RESTORED BY THIS EXIT        *   YCC
*        SETLOCK DESTROYS R11-14                                *   YCC
*                                                               *   YCC
* ACTIVE EXIT LABELS:                                           *   YCC
*        REQUE - BRANCH TO FROM WITHIN SETFRR BLOCK             *   YCC
*        ERROR - BRANCH TO FROM WITHIN SETFRR BLOCK TO RECORD   *   GEI
*                AN ERROR CONDITION IN SAMPLE                   *   GEI
*        SKIPSAMP - BRANCH TO FROM WITHIN SETFRR BLOCK TO SKIP  *   GEI
*                PROCESSING THIS SAMPLE                         *   GEI
*        REQUE2- BRANCH TO FROM OUTSIDE SETFRR BLOCK            *   YCC
*****************************************************************   YCC
         EJECT                                                      YCC
DIEEXIT  DS    0H                                                   YCC
         LR    R10,R15            R10 IS THE BASE                   YCC
         USING DIEEXIT,R10                                          YCC
         LR    R6,R1                                                YCC
         USING STDE,R6                                              YCC
         STCK  STDEITOD                                             GEI
         CLC   STDETOD1,=D'0'   NEED TO SET TOD OF 1ST SAMPLE?      GEI
         BNE   NOT1ST                                               GEI
         MVC   STDETOD1,STDEITOD                                    GEI
NOT1ST   DS    0H                                                   GEI
         LR    R9,R14                                               YCC
         TM    STDELAST,STDEPURG                                    YCC
         BZ    CONT                                                 YCC
         NI    STDELAST,X'FF'-STDEPURG                              YCC
         BR    R14                                                  YCC
CONT     EQU   *                                                    YCC
         TM    STDELAST,STDEPAUS                                    YCC
         BO    REQUE2             WAIT TILL NEXT INTERVAL           YCC
         SPACE 5                                                    YCC
         LA    R2,STATFRR                                           YCC
         ST    R2,STDEWORK                                          YCC
**                                                                  YCC
* THIS BEGINS A FRR BLOCK. EXIT CANNOT BE MADE FROM THIS BLOCK      YCC
* EXCEPT FOR A BRANCH TO 'REQUE' WHICH IS THE LABEL OF THE          YCC
* SETFRR MACRO INSTRUCTION WHICH DELETES THE TOP FRR FROM THE       YCC
* STACK. THE FRR ITSELF IS DOCUMENTED BELOW (OR ERROR, SKIPSAMP).   GEI
**                                                                  YCC
         SETFRR A,FRRAD=STDEWORK,WRKREGS=(7,8) ------------------>× YCC
         SPACE 5                                                  × YCC
**                                                                × YCC
* FIND THE NEXT ENTRY IN THE STDE AND STORE IT IN R2              × YCC
**                                                                × YCC
         LH    R2,STDELSTO        GET LAST USED ENTRY OFFSET      × GEI
         LA    R2,PSWLEN(R2)           BUMP BY PSW LENGTH         × YCC
         CH    R2,=AL2(STDELNTY-STDEENTY)                         × YCC
         BL    NOTFULL                                            × YCC
         TM    STDELAST,STDESRBA
         BNZ   SKIPSAMP                                             GEI
         SLR   R2,R2        REUSE BUFFER IF SRB HAS DUMPED          GEI
NOTFULL  EQU   *                                                  × YCC
         STH   R2,STDELSTO        SAVE FOR NEXT ENTRY             × GEI
         LA    R2,STDEENTY(R2)    GET ADDRESS OF ENTRY            × YCC
         SPACE 5                                                  × YCC
**                                                                × YCC
* PUT PSW INTO THE TRACE ENTRY AND CLEAR SPECIAL FIELDS           × YCC
**                                                                × YCC
         USING PSW,R2                                             × YCC
         MVC   PSW(8),FLCEOPSW                                    × YCC
         MVI   PSWSVC,0                                           × YCC
         NI    PSWMASK,PSWKEY+PSWWAIT+PSWPROB CLEAR SPECIAL BITS  × YCC
         XC    PSWPG,PSWPG                                        × GEI
         MVI   PSWRDY,0                                           × GEI
         MVI   PSWINSWT,0                                         × GEI
         MVC   PSWNAME,=CL8' '                                    × YCC
         SPACE 2                                                  × GEI
         TM    PSWMASK,PSWWAIT  DONE IF IN WAIT STATE             × GEI
         BO    TRYSRB                                             × GEI
         SPACE 5                                                  × YCC
**                                                                × YCC
* PUT THE PG # INTO THE PSW, SAVE ASCB ADDR IN R3                 × YCC
**                                                                × YCC
         L     R3,PSAAOLD                                         × YCC
         L     R15,=C'ASC1'        ERROR CODE                     × GEI
         BNV   R3,ERROR                                           × GEI
         USING ASCB,R3                                            × YCC
         L     R15,=C'ASC2'        ERROR CODE                     × GEI
         CLC   ASCBASCB,=C'ASCB'   DOUBLE CHECK                   × GEI
         BNE   ERROR                                              × GEI
         L     R5,ASCBOUCB                                        × YCC
         BNV   R5,NOOUCB           NOT EVERYONE HAS AN OUCB       × GEI
         CLC   OUCBNAME-OUCB(4,R5),=C'OUCB'          DOUBLE CHECK × GEI
         BNE   NOOUCB                                             × GEI
         MVC   PSWPG,OUCBNPG-OUCB(R5)                             × YCC
         SPACE 5                                                  × YCC
*****                                                             × YCC
* NOW, SOME INTERRUPTS OCCUR IN THE THREE ENABLING                × YCC
* INSTRUCTIONS ASSOCIATED WITH THE RELEASE OF A GLOBAL SPIN       × YCC
* LOCK. IT IS NOT INFORMATIVE TO LEAVE THE PSW POINTING           × YCC
* TO IEAVELK. THE REAL USER HAS LEFT HIS ADDRESS IN R14           × YCC
* WHICH THE EXTERNAL FLIH STORED IN THE LCCA. WE MOVE THAT        × YCC
* ADDRESS TO THE INSTRUCTION PART OF THE PSEUDO-PSW. WE           × YCC
* DONT HAVE DIRECT INFORMATION ON THE LOCATION OF IEAVELK,        × YCC
* BUT WE CAN FAKE IT WITH POINTERS IN THE LIT (LOCK INTERFACE     × YCC
* TABLE). I WANT TO KNOW WHEN THIS ADJUSTMENT HAS BEEN            × YCC
* MADE, SO I TURN ON THE PSWLOCK BIT.                             × GEI
*****                                                             × YCC
NOOUCB   L     R5,PSALITA         GET ADDRESS OF LIT              × GEI
         L     R5,X'44'(R5)       ->GSLUMOBT IN IEAVELK           × GEI
         CLM   R5,B'0111',PSWINST                                 × GEI
         BH    NOTELK                                             × YCC
*                                                                   GEI
*=======>  THE FOLLOWING OFFSET MAY NEED TO BE ADJUSTED WHENEVER    GEI
*=======>  THE LENGTH OF IEAVELK CODE AREA CHANGES.                 GEI
*                                                                   GEI
         LA    R5,X'F58'(R5)      ->END OF IEAVELK, APPROXIMATELY × GEI
         CLM   R5,B'0111',PSWINST                                 × GEI
         BL    NOTELK                                             × YCC
         L     R5,PSALCCAV                                        × YCC
         L     R15,=C'LCC1'        ERROR CODE                     × GEI
         CLC   LCCALCCA-LCCA(4,R5),=C'LCCA'    DOUBLE CHECK       × GEI
         BNE   ERROR                                              × GEI
         L     R5,LCCAXGR2-LCCA+14*4(R5) FIND R14 (CALLER RETURN) × GEI
         STCM  R5,B'0111',PSWINST                                 × GEI
         OI    PSWINSWT,PSWLOCK                                   × GEI
NOTELK   EQU   *                                                  × YCC
         SPACE 5
**
* PUT CPU ID IN SECOND NIBBLE OF INSTRUCTION SWITCHES               GEI
* 0=CPU0, 1=CPU1
**
         OC    PSWINSWT,PSACPUPA+1                                  GEI
         EJECT                                                    × YCC
**                                                                × YCC
* SPECIAL PROGRAMMING NOTE FOR THIS SECTION                       × YCC
*                                                                 × YCC
* THE TCB AND RB CHAIN SEEMS TO BE MAINTAINED UNDER               × YCC
* THE LOCAL LOCK. WE CANNOT OBTAIN THAT LOCK, AND SO CANNOT       × YCC
* GUARANTEE THE INTEGRITY OF THE CHAIN. THE FOLLOWING CODE        × YCC
* ATTEMPTS TO VALIDATE THE ADDRESSES IT USES PRIOR TO             × YCC
* REFERENCING  STORAGE LOCATIONS. OCCASIONAL SPURIOUS             × YCC
* RESULTS COULD OCCUR IF WE HAVE INTERRUPTED LINK, XCTL,          × YCC
* ATTACH OR SVC 3. WITHOUT THIS CHECK, STATDIE WOULD              × YCC
* GO DOWN ABOUT ONCE EVERY TWO HOURS.                             × YCC
**                                                                × YCC
         SPACE 2                                                  × YCC
**                                                                × YCC
* SET THE PSWSVC CODE AS FOLLOWS:                                 × YCC
*   =0 IF NOT IN TCB MODE CURRENTLY                               × YCC
*   OR SET TO INTERRUPT CODE AT OFFSET (-1) IN RB PREFIX          × YCC
*        IF TYPE 1 SVC                                            × YCC
*   OR SET TO INTERRUPT CODE AT OFFSET (-1) OF RB PREFIX OF       × YCC
*        PREVIOUS RB IF CURRENT RB IS AN SVRB                     × YCC
*   OR =0  FOR NON-SVC TCBMODE                                    × YCC
**                                                                × YCC
         L     R4,PSATOLD         GET TCB PTR                     × YCC
         BNV   R4,NONAME          QUIT IF INVALID                 × YCC
         USING TCB,R4                                             × YCC
         L     R4,TCBRBP          GET CURRENT RB ADDR             × YCC
         BNV   R4,NONAME          QUIT IF INVALID                 × YCC
         DROP  R4
         USING RBBASIC,R4                                         × YCC
         TM    ASCBFLG1,ASCBTYP1  IF TYPE 1 SVC IN CONTROL        × YCC
         DROP  R3                                                 × YCC
         BZ    ISITSVRB                                           × YCC
         OI    PSWMASK,PSWSVCMD   IN SVC MODE                     × YCC
         LA    R5,0(R4)           THEN GET SVC NUMBER FROM        × YCC
         BCTR  R5,0                  OFFSET -1 IN CURRENT RB      × YCC
         MVC   PSWSVC(1),0(R5)          PREFIX.                   × YCC
         B     SVCSET                                             × YCC
ISITSVRB TM    RBSTAB1,RBFTSVRB     ELSE IF THIS IS AN SVRB       × YCC
         BNO   NOTSVC             THEN                            × YCC
         OI    PSWMASK,PSWSVCMD   IN SVC MODE                     × YCC
         L     R4,RBLINK          GET SVC NUMBER FROM             × YCC
         LA    R5,0(R4)              OFFSET -1 IN THE PREVIOUS    × YCC
         BCTR  R5,0                      RB PREFIX                × YCC
         MVC   PSWSVC(1),0(R5)                *                   × YCC
SVCSET   EQU   *                                                  × YCC
NOTSVC   EQU   *                                                  × YCC
         SPACE 1                                                  × YCC
**                                                                × YCC
* NOW TO LOCATE THE HIGHEST PRB IN THE RB CHAIN                   × YCC
* AND FIND THE NAME OF THE PROGRAM RUNNING IN THE ADDRESS SPACE   × YCC
**                                                                × YCC
         LA    R5,20              PREVENT LOOP                    × YCC
ISITPRB  TM    RBSTAB1,RBFTP                                      × YCC
         BZ    GOTPRB                                             × YCC
         L     R4,RBLINK                                          × YCC
         BNV   R4,NONAME          QUIT IF INVALID                 × YCC
         BCT   R5,ISITPRB                                         × YCC
         B     NONAME          NO PRB FOUND IN 1ST 20 RB'S          GEI
GOTPRB   L     R4,RBCDE                                           × YCC
         DROP  R4
         USING CDENTRY,R4                                         × YCC
         BNV   R4,NONAME          QUIT IF INVALID                 × YCC
         MVC   PSWNAME,CDNAME                                     × YCC
         SLR   R1,R1                                                GEI
         ICM   R1,B'0111',PSWINST                                 × GEI
         C     R1,STDELADR                                        × YCC
         BL    NONAME                                             × YCC
         C     R1,STDEHADR                                        × YCC
         BH    NONAME                                             × YCC
         SPACE 2                                                  × YCC
**                                                                × YCC
* FIRST LEVEL PSW INSTRUCTION ADDRESS ADJUSTMENT                  × YCC
* IF THE INSTRUCTION IS IN THE EXTENT OF THE MODULE REPRESENTED   × YCC
* BY THE TOP PRB, THEN SUBTRACT THE ORIGIN OF THE MODULE          × YCC
* FROM THE PSW ADDRESS AND SET THE PSWRELAT BIT ON TO INDICATE    × YCC
* RELATIVE ADDRESSING.                                            × YCC
**                                                                × YCC
         TM    CDATTR,CDMIN       IS THIS A MINOR?                × GEI
         BNO   MAJOR                                              × GEI
         L     R4,CDXLMJP         Y. POINT TO MAJOR CDE           × GEI
         BNV   R4,NONAME                                          × GEI
MAJOR    TM    CDATTR2,CDXLE      IS THERE AN XLST                × GEI
         BZ    JOBPAK             NO, QUIT                        × YCC
         L     R3,CDXLMJP         GET ITS ADDRESS                 × YCC
         BNV   R3,NONAME                                          × YCC
         USING XTLST,R3                                           × YCC
         LM    R7,R8,XTLMSBLA     PICK UP LEN AND ADDR            × YCC
         CR    R8,R1                                              × YCC
         BH    JOBPAK             YES, QUIT                       × YCC
         LA    R7,0(R7)                                           × GEI
         AR    R7,R8              GET END OF MODULE               × GEI
         CR    R7,R1                                              × YCC
         BL    JOBPAK             YES, QUIT                       × YCC
         SR    R1,R8              BY SUBTRACTING ORIGIN           × YCC
         STCM  R1,B'0111',PSWINST SAVE BACK                       × GEI
         OI    PSWINSWT,PSWRELAT  SHOW RELATIVE                   × GEI
         B     KNOWNAME                                           × YCC
         SPACE 5                                                  × YCC
**                                                                × YCC
* THE FOLLOWING CODE CAN BE BYPASSED TO AVOID THE OVERHEAD. IT    × YCC
* SEARCHES THE JOBPACK FOR A CDE ASSOCIATED WITH A MODULE WHICH   × YCC
* INCLUDES THE INSTRUCTION ADDRESS. IF ONE IS FOUND, THE          × YCC
* INSTRUCTION IS RELATIVIZED AND THE CDENAME IS REPLACED. THIS    × YCC
* CODE CAN BE TURNED OFF IF YOU DO NOT WANT TO TRACK CPU          × YCC
* ACTIVITY MULTIMODULE PROGRAMS.                                  × YCC
**                                                                × YCC
JOBPAK   B     KNOWNAME           ** ZAP TO B FOR DEACTIVATION ** × GEI
         OI    PSWINSWT,PSWJPAK1  SHOW ENTERED JOBPAK SEARCH      × GEI
         LA    R5,40              LIMIT SEARCH                    × YCC
         L     R4,PSATOLD                                         × YCC
         L     R4,TCBJPQ-TCB(R4)                                  × YCC
NXTCDE   BNV   R4,NONAME                                          × YCC
         TM    CDATTR,CDMIN       IS THIS A MINOR?                × GEI
         BNO   MAJOR1                                             × GEI
         L     R4,CDXLMJP         Y. POINT TO MAJOR CDE           × GEI
         B     NXTCDE                                             × GEI
MAJOR1   TM    CDATTR2,CDXLE      IS THERE AN XLST                × YCC
         BZ    CHAINCDE             NO, NEXT                      × YCC
         L     R3,CDXLMJP         GET ITS ADDRESS                 × YCC
         BNV   R3,NONAME                                          × YCC
         LM    R7,R8,XTLMSBLA     PICK UP LEN AND ADDR            × YCC
         CR    R8,R1                                              × YCC
         BH    CHAINCDE             YES, NEXT                     × YCC
         LA    R7,0(R7)                                           × GEI
         AR    R7,R8              GET END OF MODULE               × GEI
         CR    R7,R1                                              × YCC
         BL    CHAINCDE             YES, NEXT                     × YCC
         SR    R1,R8              BY SUBTRACTING ORIGIN           × YCC
         STCM  R1,B'0111',PSWINST SAVE BACK                       × YCC
         OI    PSWINSWT,PSWRELAT  SHOW RELATIVE ADDRESS           × GEI
         OI    PSWINSWT,PSWJPAK2  SHOW FOUND   JOBPAK SEARCH      × GEI
         MVC   PSWNAME,CDNAME                                     × YCC
         B     KNOWNAME                                           × YCC
CHAINCDE DS    0H                                                 × GEI
         CLC   CDNAME,=8X'FF'     END OF CHAIN?                   × GEI
         BE    NONAME                                             × GEI
         L     R4,CDCHAIN                                         × YCC
         BCT   R5,NXTCDE                                          × YCC
KNOWNAME EQU   *                                                  × YCC
NONAME   EQU   *                                                  × YCC
         DROP  R3                                                 × YCC
         DROP  R4                                                 × YCC
         EJECT                                                    × YCC
**                                                                × YCC
* NOW SET THE SPECIAL STATUS BIT FOR SRB MODE                     × YCC
**                                                                × YCC
         L     R4,PSALCCAV                                        × YCC
         L     R15,=C'LCC2'        ERROR CODE                     × GEI
         USING LCCA,R4                                            × YCC
         CLC   LCCALCCA,=C'LCCA'   DOUBLE CHECK                   × GEI
         BNE   ERROR                                              × GEI
         TM    LCCADSF2,LCCASRBM                                  × YCC
         BZ    NOTSRB                                             × YCC
         OI    PSWMASK,PSWSRB                                     × YCC
NOTSRB   EQU   *                                                  × YCC
         DROP  R4                                                 × YCC
         B     TRYSRB                                             × GEI
ERROR    DS    0H                                                 × GEI
         OI    PSWINSWT,PSWERROR   ERROR IN SAMPLING              × GEI
         STCM  R15,B'1111',PSWERRCD  SAVE REASON (CNTLBLKS)       × GEI
         SPACE 5                                                  × YCC
*****                                                             × YCC
* NOW IF THE BUFFER WAS JUST FILLED, WE SCHEDULE AN SRB IN THE    × YCC
* MASTER SCHEDULER ADDRESS SPACE TO PAGEFAULT IN THE NEXT         × YCC
* PAGABLE BUFFER AND COPY THE FIXED BUFFER INTO IT.  UNTIL IT     × YCC
* COMPLETES, THE STDESRBA FLAG IS SET AND SAMPLING IS SUSPENDED   × GEI
* UNTIL THE SRB DUMPS THE BUFFER.                                 × GEI
*****                                                             × YCC
TRYSRB   DS    0H                                                 × GEI
         LH    R0,STDELSTO                                        × GEI
         CH    R0,=AL2(STDEFILL-STDEENTY)
         BL    REQUE                                                GEI
         SPACE 1                                                  × YCC
SCHED    DS    0H                                                 × YCC
* ZERO THE SRB BECAUSE IT IS NOT CLEAR IF IT CAN BE REUSED UNLESS × YCC
* FIRST CLEARED. GETTING THE SRB ROUNTINE ENTRY POINT ADDRESS     × YCC
* REQUIRES A LITTLE WORK, BECAUSE WE NEED THE ADDRESS OF THE COPY × YCC
* OF STATSRB WHICH WAS COPIED TO THE END OF THE STDE, AND BECAUSE × YCC
* THAT LOCATION CAN BE >4096 FROM THE AVAILABLE BASE REGISTER.    × YCC
* SET THE STDESRBA BIT SO WE DO NOT ADD ANOTHER PSW TO THE FIXED  × YCC
* BUFFER UNTIL IT HAS BEEN COPIED BY THE SRB.                     × YCC
         MVC   STDETODL,STDEITOD    SET TOD OF LAST SAMPLE          GEI
         XC    STDESRB,STDESRB                                    × YCC
         LA    R7,STDESRB                                         × YCC
         USING SRB,R7                                             × YCC
         MVC   SRBID,=CL4'SRB'                                    × YCC
         LA    R1,(STATSRB-DIEEXIT)+STDEEXIT-4095                 × GEI
         LA    R1,4095(R1)                                        × GEI
         ST    R1,SRBEP                                           × YCC
         L     R1,CVTPTR                                          × YCC
         L     R1,CVTASVT-CVT(R1)                                 × YCC
         L     R1,ASVTENTY-ASVT(R1)                               × YCC
         ST    R1,SRBASCB                                         × YCC
         OI    STDELAST,STDESRBA                                  × YCC
* SCHEDULE THE SRB AT A GLOBAL PRIORITY IN THE MASTER SPACE.        GEI
* WE MUST DUMP THE BUFFER QUICKLY!                                  GEI
         SCHEDULE SRB=STDESRB,SCOPE=GLOBAL                        × GEI
         B     REQUE                                                GEI
         DROP  R7                                                 × YCC
SKIPSAMP DS    0H    SKIP THIS SAMPLE.  FIXED BUFFER OVERFLOW       GEI
         LH    R15,STDEMISS                                         GEI
         CH    R15,=H'32766'    OVERFLOW?                           GEI
         BNL   STMISS                                               GEI
         LA    R15,1(R15)       BUMP MISSED SAMPLES COUNTER         GEI
STMISS   STH   R15,STDEMISS                                         GEI
         SPACE 5                                                  × YCC
REQUE    SETFRR D,WRKREGS=(7,8) <---------------------------------× YCC
         SPACE 5                                                    YCC
**                                                                  YCC
* REQUE THE TQE BY BRANCHING TO THE DISPATCHER                      YCC
* NOTE THAT THE SAMPLING INTERVAL IS ADDED TO THE TOD IN THE        GEI
* TQE (WHICH IS THE TIME THIS SAMPLE BEGAN).                        GEI
**                                                                  YCC
REQUE2   DS    0H                                                   YCC
*   TQE VALUES ARE USED BELOW
         LM    R0,R1,16(R6)       TQEVAL                            GEI
         AL    R1,INCREMT+4                                         YCC
         BC    12,*+8                                               YCC
         AL    R0,=F'1'                                             YCC
         AL    R0,INCREMT                                           YCC
         STM   R0,R1,16(R6)                                         GEI
* NOW ESTABLISH 'CPU AFFINITY' TO THE OTHER CPU, BY FILLING LOW BYTE
* WITH X'FE' FOR CPU 0, X'FF' FOR CPU1
* THIS ONLY WORKS CORRECTLY WITH THE OPTIONAL ZAP TO                GEI
* MANAGEMENT.                                                       GEI
         LH    R1,=H'-1'          PRIME WITH X'FF'
         SH    R1,PSACPUPA        SUB CPU NUMBER
         STC   R1,23(R6)          TQEVAL+7                          GEI
         USING STDE,R6
         SPACE 5
LOCK     SETLOCK OBTAIN,TYPE=DISP,MODE=UNCOND,DISABLED,  -------->× YCC*
               RELATED=UNLOCK                                     × YCC
         SPACE 5                                                  × YCC
*****                                                             × YCC
* COUNT READY TCBS                                                × YCC
* THIS IS DONE UNDER THE DISPATCHER LOCK TO INSURE THE              GEI
* INTEGRITY OF THE ASCB-TCB CHAIN.                                  GEI
*****                                                             × YCC
         TM    STDELAST,STDEPAUS                                  × YCC
         BO    NOCOUNT                                            × YCC
         TM    STDELAST,STDESRBA                                  × GEI
         BO    NOCOUNT                                            × GEI
         L     R3,CVTPTR                                          × YCC
         L     R3,CVTASCBH-CVT(R3)                                × YCC
         USING ASCB,R3                                            × YCC
         SLR   R1,R1                                              × YCC
ASLP     LTR   R3,R3                                              × YCC
         BZ    LASTASCB                                           × YCC
         CLC   ASCBASCB,=C'ASCB'   DOUBLE CHECK                   × GEI
         BNE   LASTASCB                                           × GEI
         A     R1,ASCBTCBS                                        × YCC
         S     R1,ASCBCPUS                                        × YCC
         L     R3,ASCBFWDP                                        × YCC
         B     ASLP                                               × YCC
         DROP  R3                                                 × YCC
LASTASCB DS    0H                                                 × GEI
         C     R1,=F'255'      OVERFLOW ?                         × GEI
         BNH   SETTCBS         NO--USE IT                           GEI
         LA    R1,255                                               GEI
SETTCBS  STC   R1,PSWRDY                                            GEI
         DROP R2                                                  × YCC
NOCOUNT  EQU   *                                                  × YCC
         SPACE 5                                                    YCC
         L     R15,CVTPTR                                         × YCC
         USING CVT,R15                                            × YCC
         L     R15,CVTQTE00                                       × YCC
         DROP  R15                                                × YCC
         LR    R1,R6                                              × YCC
**                                                                × YCC
* NOW TO CALL THE TQE ENQUE ROUTINE                               × YCC
* 1) IN SUPERVISOR STATE, KEY 0, UNDER DISP LOCK                  × YCC
* 2) TQEVAL CONTAINS THE TOD FOR THE NEXT INTERRUPT               × YCC
* 3) THE REST OF THE TQE IS UNCHANGED FROM ENTRY TO DIE.          × YCC
* 4) R1 CONTAINS THE ADDRESS OF THE TQE                           × YCC
* 5) R2 CONTAINS THE RETURN ADDRESS                               × YCC
**                                                                × YCC
         BALR  R2,R15                                             × YCC
UNLOCK   SETLOCK RELEASE,TYPE=DISP,DISABLED,RELATED=LOCK   <------× YCC
         SPACE 5                                                    YCC
**                                                                  YCC
* RETURN AFTER BUMPING MY CPU TIME ACCUMULATOR                      GEI
**                                                                  YCC
         TM    STDELAST,STDEPAUS    DONT COUNT WHEN PAUSED          GEI
         BO    BYEBYE                                               GEI
         STCK  STDEWORK
         LM    R0,R1,STDEWORK
         SL    R1,STDEITOD+4
         BC    3,*+6
         BCTR  R0,0
         SL    R0,STDEITOD
         AL    R1,STDECPUT+4
         BC    12,*+8
         AL    R0,=F'1'
         AL    R0,STDECPUT
         STM   R0,R1,STDECPUT
BYEBYE   LR    R14,R9                                               YCC
         BR    R14                                                  YCC
         DROP  R6                                                   YCC
         DROP  R10                                                  YCC
         SPACE 5                                                    YCC
**                                                                  YCC
* CONSTANTS                                                         YCC
**                                                                  YCC
         DS    0F                                                   YCC
INCREMT  DC    FL8S32E-3'&MILLISC'                                  YCC
         LTORG                                                      YCC
         EJECT                                                      YCC
*****************************************************************   YCC
* PROCEDURE                                                     *   YCC
*        STATFRR                                                *   YCC
* FUNCTION:                                                     *   YCC
*        FUNCTIONAL RECOVERY ROUTINE FOR DIEEXIT                *   YCC
* PROGRAMMING NOTE:                                             *   YCC
*        DIEEXIT DOES NOT OBTAIN ANY IMPORTANT RESOURCES WHILE  *   YCC
*        THIS ROUTINE IS ON THE FRR STACK, AND THIS             *   YCC
*        ROUTINE DOES NOT ATTEMPT ANY SIGNIFICANT RECOVERY.     *   YCC
*        INSTEAD, IT RETURNS TO THE TIMER SLIH WITHOUT          *   YCC
*        REQUEING THE TQE, THUS PURGING STATDIE PROCESSING.     *   YCC
*        THE REAL REASON FOR THIS CODE IS THAT IF THE           *   YCC
*        FRR ROUTINE OF THE TIMER SLIH GETS CONTROL FOR         *   YCC
*        ANY ERROR, IT WILL MEMTERM THE INTERRUPTED ADDRESS     *   YCC
*        SPACE. AS DISTRIBUTED, STATDIE HAS RUN AT YALE         *   YCC
*        FOR MANY DAYS WITHOUT ERROR, BUT YOU ARE               *   YCC
*        ENCOURAGED TO MAKE YOUR OWN MODS AND EXPERIMENT        *   YCC
*        WITH NEW IDEAS. IF A STATDIE SEGMENT EXCEPTION         *   YCC
*        WERE ALLOWED TO BLOW UP A RANDOM ADDRESS SPACE,        *   YCC
*        IT WOULD MAKE THIS CODE VERY UNPOPULAR IN              *   YCC
*        SYSTEMS WITH BIG IMS TP APPLICATIONS. SO WE            *   YCC
*        CATCH THE ERROR OURSELVES AND GO AWAY QUIETLY.         *   YCC
*****************************************************************   YCC
         SPACE 5                                                    YCC
STATFRR  DS    0H                                                   YCC
         USING *,R15                                                YCC
         USING SDWA,R1                                              YCC
         L     R9,SDWAGR09                                          YCC
         SETRP RC=4,RETADDR=(9),RECORD=YES,RECPARM=FRRID            YCC
         BR    R14                                                  YCC
FRRID    DC    C'STATDIE DIEEXIT STATFRR '                          YCC
         DROP  R15                                                  YCC
         DROP  R1                                                   YCC
         EJECT                                                      YCC
*****************************************************************   YCC
* PROCEDURE                                                     *   YCC
*        STATSRB                                                *   YCC
*        THE SYSTEM STATISTICS SRB ROUTINE                      *   YCC
*        COPIES PSW'S TO PAGABLE CSA & WRITES SMF RECORD        *   GEI
* ATTRIBUTES                                                    *   YCC
*        KEY ZERO, SUPERVISOR, ENABLED, MASTER ADDRESS SPACE    *   YCC
*        SRB MODE (GLOBAL PRIORITY)                             *   GEI
* LOCKING CONVENTIONS:                                          *   YCC
*        THE LOCAL AND CMS LOCKS ARE OBTAINED AND RELEASED.     *   YCC
*****************************************************************   YCC
* REGISTER USAGE                                                *   YCC
*        R0-R6 WORK REGISTERS AND MVCL                          *   YCC
*        R7 POINTS TO PAGABLE BUFFER                            *   YCC
*        R8 POINTS TO STDE                                      *   YCC
*        R9 HOLDS RETURN ADDRESS                                *   YCC
*        R10 BASE REGISTER                                      *   YCC
*        R11-R14 USED BY SETLOCK                                *   YCC
*        NO REGISERS ARE SAVED OR RESTORED                      *   YCC
*****************************************************************   YCC
         EJECT                                                      YCC
STATSRB  DS    0H                                                   YCC
         LR    R8,R0                                                YCC
         USING STDESRB,R8                                           YCC
         BALR  R10,0                                                YCC
         USING *,R10                                                YCC
         LR    R9,R14                                               YCC
         SPACE 1                                                    YCC
**                                                                  YCC
* ADDRESS THE SPECIFIC PAGABLE BUFFER FROM THE PGB POOL             YCC
**                                                                  YCC
         L     R1,STDEBUFP        GET FIRST PAGABLE BUFFER          YCC
         SLR   R2,R2                                                YCC
         IC    R2,STDENXBF        AND NEXT BUFFER OFFSET            YCC
         MH    R2,=AL2(PGBLEN)                                      YCC
         LA    R7,0(R1,R2)        ADDRESS TARGET BUFFER             YCC
         USING PGBUF,R7                                             YCC
         SPACE 1                                                    YCC
         MVC   PGBTIMES,STDETIMS  COPY TIMES                        GEI
         XC    STDETIMS,STDETIMS  AND ZERO THEM                     GEI
         SPACE 1                                                    YCC
**                                                                  YCC
* MOVE THE PSWS FROM THE FIXED BUFFER TO THE PAGABLE BUFFER.        YCC
**                                                                  YCC
         MVC   PGBPSWD,PSWDSCR                                      YCC
         LA    R0,PGBPSWS                                           YCC
         LH    R1,=AL2(FXBUFL)    BYTE LENGTH OF BUFFER             YCC
         LR    R3,R1              IN SOURCE AND TARGET              YCC
         LA    R2,STDEENTY        SOURCE IS FIXED BUFFER            YCC
         MVCL  R0,R2              MOVE IT OR LOSE IT                YCC
         NI    STDELAST,X'FF'-STDESRBA  DIE WILL START UP AGAIN     GEI
         MVC   PGBMISS,STDEMISS   COPY MISSED SAMPLE COUNT          GEI
         XC    STDEMISS,STDEMISS  AND ZERO IT                       GEI
         SPACE 1                                                    YCC
**                                                                  YCC
* LOCATE THE RCT AND MOVE THE 5 SRM VALUES TO THE PAGABLE BUFFER    YCC
**                                                                  YCC
         L     R1,CVTPTR                                            YCC
         L     R1,CVTOPCTP-CVT(R1)                                  YCC
*
*=======>  THE LOCATION OF MOST SRM FIELDS BELOW IS GOTTEN WITH     GEI
*=======>  HARD-CODED OFFSETS WITHIN CONTROL BLOCKS.  THIS IS       GEI
*=======>  BECAUSE IBM DOES NOT SUPPLY ALC DSECTS FOR THESE.        GEI
*=======>  NOTICE THAT THESE OFFSETS MIGHT CHANGE WITH ANY          GEI
*=======>  MAINTAINENCE LEVEL.  THE CONTROL BLOCKS ARE:             GEI
*=======>     CB            FIELDS                                  GEI
*=======>   RMCT           RMCTRCT, RMCTDMDT, RMCTDMDE
*=======>   RCT            RCVUICA THRU RCVMSPP
*=======>   DMDT           DMDTNO, DMDTRUA, DMDTCMPL, DMDTCIDX
         L     R15,228(R1)     GET RCT ADDR  (RMCTRCT)              GEI
         MVC   PGBRCTD,RCTDSCR                                      YCC
         MVC   PGBRCT(18),62(R15)  MOVE IN RCT RESOURCE VALUES      GEI
         SPACE 1                                                    YCC
**                                                                  YCC
*  MOVE DOMAIN VALUES    FROM UP TO 'MAXDMN' DOMAINS TO THE         GEI
* PAGABLE BUFFER                                                    YCC
**                                                                  YCC
         LA    R2,56              LENGTH OF DMDT ENTRY              GEI
         L     R3,184(R1)         LAST DMDT ENTRY   RMCTDMDE        GEI
         L     R1,180(R1)         FIRST DMDT ENTRY  RMCTDMDT        GEI
         MVC   PGBDMND,DMNDSCR    BUILD RECORD DESCRIPTOR           YCC
         LA    R4,7               INCREMENT                         GEI
         LA    R5,PGBDMN+MAXDMN*7                                   GEI
         LA    R6,PGBDMN          ADDRESS TARGET                    YCC
DMNLOOP  DS    0H                                                   GEI
         MVC   0(1,R6),0(R1)      COPY DOMAIN NUMBER                GEI
         MVC   1(2,R6),4(R1)      MOVE TARGET MPL                   GEI
         MVC   3(2,R6),10(R1)     MOVE CURRENT MPL                  GEI
         MVC   5(2,R6),6(R1)      MOVE RUA                          GEI
         BXH   R1,R2,ENDDMN       CHECK FOR LAST DOMAIN             YCC
         BXLE  R6,R4,DMNLOOP      CHECK FOR MAXDMN                  YCC
ENDDMN   EQU   *                                                    YCC
         SPACE 2                                                    YCC
         L     R1,CVTPTR                                            YCC
         L     R1,CVTPVTP-CVT(R1)                                   YCC
         USING PVT,R1                                               YCC
         MVC   PGBPVTD,PVTDSCR                                      YCC
         MVC   PGBPOOL,PVTPOOL                                      YCC
         MVC   PGBCFMCT,PVTCFMCT                                    YCC
         MVC   PGBCNTFX,PVTCNTFX                                    YCC
         MVC   PGBSQAFX,PVTSQAFX                                    YCC
         MVC   PGBCOMFX,PVTCOMFX                                    YCC
         DROP  R1
         SPACE 2                                                    YCC
*                                                                   GEI
* BUILD THE SMF RECORD HEADER AND WRITE THE CSA BUFFER TO SMF       GEI
*                                                                   GEI
* NOTE THAT I CANNOT ISSUE SVC'S (SRB REMEMBER), SO I CANNOT SET    GEI
* THE HEADER TIMESTAMP WITH A TIME BIN/STM BECAUSE TIME MACRO       GEI
* USES SVC 11.  INSTEAD, I GET THE DATE FROM CVTDATE AND GO THRU    GEI
* AND GO THRU SOME TERRIBLE MACHINATIONS TO CONVERT THE STCK        GEI
* TO SMF FORMAT (ONLY ACCURATE TO SECOND, HUNDREDTHS ARE 0)         GEI
*                                                                   GEI
         MVC   PGBRDW(4),=AL2(PGBLEN,0)                             GEI
         MVI   PGBSMFID,SMFID     SET SMF RECORD TYPE               GEI
         L     R5,CVTPTR                                            GEI
         USING CVTMAP,R5                                            GEI
         L     R1,CVTSMCA         GET SMCA ADDR                     GEI
         MVC   PGBSYSID,SMCASID-SMCABASE(R1)                        GEI
         MVC   PGBDATE,CVTDATE    SET SMF HEADER DATE               GEI
         STCK  STDESAVE+16                                          GEI
         LM    R2,R3,STDESAVE+16                                    GEI
         AL    R2,CVTTZ         ADJUST FOR LOCAL MEAN TIME          GEI
         SRDL  R2,12            RIGHT JUSTIFY MICS IN REGISTER PAIR GEI
         D     R2,=F'60000000' R3=MINS SINCE EPOCH;R2=MICS REM.     GEI
         LR    R1,R2            SAVE MICS                           GEI
         SLR   R2,R2                                                GEI
         D     R2,=A(24*60) MOD BY MINS IN A DAY; R2=MINS INTO DAY  GEI
         LR    R3,R2                                                GEI
         SLR   R2,R2                                                GEI
         M     R2,=F'60'        CONVERT TO SECS                     GEI
         SLR   R0,R0                                                GEI
         D     R0,=F'951424'                                        GEI
         AR    R3,R1                                                GEI
         SLR   R2,R2                                                GEI
         M     R2,=F'100'     CONVERT TO 100'THS OF A SECOND        GEI
         ST    R3,PGBTIME      DONE! W H E W ! ! !                  GEI
         LA    R13,STDESAVE     PROVIDE SAVE AREA TO SMF WTR        GEI
         SMFEWTM (7),BRANCH=YES                                     GEI
         DROP  R5                                                   GEI
         SPACE 2                                                    GEI
         SLR   R1,R1              NOW INCREMENT OFFSET              YCC
         IC    R1,STDENXBF                                          YCC
         LA    R1,1(R1)           BY ONE                            YCC
         CH    R1,=AL2(PGBFCT)    BUT IF IT IS BIGGER THAN          YCC
         BL    *+6                PAGABLE BUFFER COUNT              YCC
         SLR   R1,R1              GO TO ZERO OFFSET                 YCC
         STC   R1,STDENXBF                                          YCC
         BR    R9                                                   YCC
         SPACE 2                                                    YCC
* PROTOTYPE RDW'S FOR PAGABLE BUFFER                                YCC
PSWDSCR  DC    AL1(PGRPSWS,PSWLEN)                                  YCC
         DC    AL2(FXBUFL)                                          YCC
RCTDSCR  DC    AL1(PGRRCT,2)                                        YCC
         DC    AL2(18)                                              YCC
DMNDSCR  DC    AL1(PGRDMN,7)                                        YCC
         DC    AL2(MAXDMN*7)                                        YCC
PVTDSCR  DC    AL1(PGRPVT,2)                                        YCC
         DC    AL2(10)                                              YCC
         LTORG                                                      YCC
         SPACE 2                                                    YCC
*                                                                   GEI
* DEFINE A PATCH AREA                                               GEI
*                                                                   GEI
STATPCH  DC    XL40'00'                                             GEI
DIEEND   EQU   *                                                    YCC
DIELEN   EQU   *-DIEEXIT                                            YCC
         EJECT                                                      YCC
         PRINT NOGEN                                                YCC
**                                                                  YCC
* MAPPING MACROS                                                    YCC
**                                                                  YCC
         IHAPVT                                                     YCC
         IHAPSA                                                     YCC
         IHAASVT                                                    YCC
         IHASRB                                                     YCC
         IHAASCB                                                    YCC
         IHALCCA                                                    YCC
         IRAOUCB                                                    YCC
         IEAVVTPC                                                   YCC
         IHARB                                                      YCC
         IHACDE                                                     YCC
         IHAXTLST                                                   YCC
         IHAFRRS                                                    YCC
         IHASDWA                                                    YCC
         IKJTCB                                                     YCC
         IEESMCA                                                    GEI
         CVT   DSECT=YES                                            YCC
         END   ,                                                    YCC
