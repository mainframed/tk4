//STEP#1 EXEC SAS,SO=O,LOG=O
//FT11F001 DD SYSOUT=Y,DEST=TEC
//SYSIN  DD *
 /*------------------------------------------------------------------+
  × THIS ROUTINE ANALYZES SMF/XA TYPE 72 RECORDS.                    ×
  × NAMING CONVENTIONS GENERALLY FOLLOW THE SMF RECORD LAYOUTS,      ×
  × EXCEPT FOR TRIPLETS, COMMON SECTIONS, AND COMPUTED VARIABLES.    ×
  +------------------------------------------------------------------*/
  DATA PGPSERV
      (KEEP = SYSID DATE SHIFT SMFTIME INTVL DURATION SAMPLES SAMPCYCL
       SMF72CTS SMF72STS SMF72ITS SMF72MTS SMF72TTX SMF72SER SMF72ACT);

  LINK SMFCOM;

     IF '08:00:00'T<=TIMEPART(SMFTIME)<='09:00:00'T;

     IF ID=72 THEN GOTO TYPE_72;
              ELSE DELETE;

 /*-------------------------------------------------------------------+
  ×  TYPE_72 (RMF WORKLOAD ACTIVITY) HEADER...                        ×
  +-------------------------------------------------------------------*/
  TYPE_72:
     INPUT
        @18+OFFSET SUBSYSID $4.   /*'RMF '                            */
        @24+OFFSET NTRIPLTS PIB2. /* # OFF/LEN/NUM                    */
        @28+OFFSET OFFRMFP  PIB4. /* OFFSET TO RMF PRODUCT SECTION    */
        @32+OFFSET LENRMFP  PIB2. /* LENGTH    RMF PRODUCT SECTION    */
        @34+OFFSET NUMRMFP  PIB2. /* NUMBER    RMF PRODUCT SECTIONS   */
        @36+OFFSET OFFWKLC  PIB4. /* OFFSET TO WKLD CONTROL SECTION   */
        @40+OFFSET LENWKLC  PIB2. /* LENGTH    WKLD CONTROL SECTION   */
        @42+OFFSET NUMWKLC  PIB2. /* NUMBER    WKLD CONTROL SECTIONS  */
        @44+OFFSET OFFPGPD  PIB4. /* OFFSET TO PERF GRP PER SECTION   */
        @48+OFFSET LENPGPD  PIB2. /* LENGTH    PERF GRP PER SECTION   */
        @50+OFFSET NUMPGPD  PIB2. /* NUMBER    PERF GRP PER SECTIONS  */
        @;

        OFFRMFP+OFFSET;
        OFFWKLC+OFFSET;
        OFFPGPD+OFFSET;

  LINK RMFCOM;

     PUT 'GOT PAST RMFCOM SECTION...';
     PUT _ALL_;

 /*------------------------------------------------------------------+
  × TYPE_72 WORKLOAD CONTROL SECTION...                              ×
  +------------------------------------------------------------------*/
        INPUT
           @OFFWKLC+02 SMF72SUB PIB2.  /* PERFORMANCE GROUP NUMBER   */
           @OFFWKLC+06 SMF72IPS $8.    /* NAME OF IPS                */
           @OFFWKLC+26 SMF72ISD $4.    /* IOC SERVICE DEF COEFFICIENT*/
           @OFFWKLC+30 SMF72CSD $4.    /* TCB SERVICE DEF COEFFICIENT*/
           @OFFWKLC+34 SMF72MSD $4.    /* MSO SERVICE DEF COEFFICIENT*/
           @OFFWKLC+38 SMF72SSD $4.    /* SRB SERVICE DEF COEFFICIENT*/
           @OFFWKLC+42 SMF72OPT $8.    /* NAME OF OPT                */
           @OFFWKLC+50 SMF72ICS $8.    /* NAME OF ICS                */
           @;

 /*------------------------------------------------------------------+
  × TYPE_72 PERFORMANCE GROUP PERIOD DATA SECTION...                 ×
  +------------------------------------------------------------------*/
     DO WHILE(NUMPGPD>0);
        INPUT
           @OFFPGPD    SMF72TTX PIB4.  /* #TRANSACTIONS TERMINATED   */
           @OFFPGPD+04 SMF72ACT PIB4.6 /* ACTIVE TIME,  IN 1024 MSU  */
           @OFFPGPD+08 SMF72SER PIB4.  /* TOTAL SERVICE USED         */
           @OFFPGPD+12 SMF72TTM PIB4.6 /* ELAPSED TIME, IN 1024 MSU  */
           @OFFPGPD+16 SMF72LEV PIB4.  /* WORKLOAD LVL, IN 1/256 LVL */
           @OFFPGPD+20 SMF72MTS PIB4.  /* MAIN STORAGE SERVICE UNITS */
           @OFFPGPD+24 SMF72ITS PIB4.  /* I/O SERVICE UNITS          */
           @OFFPGPD+28 SMF72CTS PIB4.  /* CPU (TCB) SERVICE UNITS    */
           @OFFPGPD+32 SMF72TAT PIB4.6 /* RESIDNCY TIME, IN 1024 MSU */
           @OFFPGPD+36 SMF72SPP PIB4.  /* #SWAP SEQUENCES IN PERIOD  */
           @OFFPGPD+40 SMF72CDN PIB2.  /* DOMAIN NUMBER              */
           @OFFPGPD+42 SMF72PON PIB1.  /* PERFORMANCE OBJ NUMBER     */
           @OFFPGPD+44 SMF72STS PIB4.  /* CPU (SRB) SERVICE UNITS    */
           @;

        NUMPGPD=NUMPGPD-1;
        OFFPGPD+LENPGPD;

        SMF72TTX=SMF72TTX*1024;
        SMF72TTM=SMF72TTM*1024;
        SMF72TAT=SMF72TAT*1024;
        SMF72LEV=SMF72LEV/256;
        OUTPUT PGPSERV;
     END;

 RETURN; /*----------------------------------------------------------*/

 %INCLUDE PDS(SMFXASMF);

 %INCLUDE PDS(SMFXARMF);

 PROC PRINT;

//SMF DD DISP=SHR,DSN=TEC.BCHSMF.DATA(+0)
//PDS DD DISP=SHR,DSN=THIS LIBRARY
