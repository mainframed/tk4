//STEP#1 EXEC SAS,SO=O,LOG=O
//SYSIN  DD *
 /*------------------------------------------------------------------+
  × THIS ROUTINE ANALYZES SMF/XA TYPE 70 RECORDS.                    ×
  × NAMING CONVENTIONS GENERALLY FOLLOW THE SMF RECORD LAYOUTS,      ×
  × EXCEPT FOR TRIPLETS, COMMON SECTIONS, AND COMPUTED VARIABLES.    ×
  +------------------------------------------------------------------*/
  DATA CPU
     (KEEP = SYSID DATE SHIFT SMFTIME INTVL DURATION SAMPLES SAMPCYCL
      CPUWTIM SMF70RTT SMF70OTT SMF70ITT SMF70BTT SMF70STT SMF70TTT);

     LINK SMFCOM;

     IF ID=70 THEN GOTO TYPE_70;
              ELSE DELETE;

 /*-------------------------------------------------------------------+
  ×  TYPE_70 (RMF CPU ACTIVITY) HEADER...                             ×
  +-------------------------------------------------------------------*/
  TYPE_70:
     INPUT
        @18+OFFSET SUBSYSID $4.   /*'RMF '                            */
        @24+OFFSET NTRIPLTS PIB2. /* # OFF/LEN/NUM                    */
        @28+OFFSET OFFRMFP  PIB4. /* OFFSET TO RMF PRODUCT SECTION    */
        @32+OFFSET LENRMFP  PIB2. /* LENGTH    RMF PRODUCT SECTION    */
        @34+OFFSET NUMRMFP  PIB2. /* NUMBER    RMF PRODUCT SECTIONS   */
        @36+OFFSET OFFCPUC  PIB4. /* OFFSET TO CPU CONTROL SECTION    */
        @40+OFFSET LENCPUC  PIB2. /* LENGTH    CPU CONTROL SECTION    */
        @42+OFFSET NUMCPUC  PIB2. /* NUMBER    CPU CONTROL SECTIONS   */
        @44+OFFSET OFFCPUD  PIB4. /* OFFSET TO CPU DATA    SECTION    */
        @48+OFFSET LENCPUD  PIB2. /* LENGTH    CPU DATA    SECTION    */
        @50+OFFSET NUMCPUD  PIB2. /* NUMBER    CPU DATA    SECTIONS   */
        @52+OFFSET OFFASID  PIB4. /* OFFSET TO ADDRSPCE-ID SECTION    */
        @56+OFFSET LENASID  PIB2. /* LENGTH    ADDRSPCE-ID SECTION    */
        @58+OFFSET NUMASID  PIB2. /* NUMBER    ADDRSPCE-ID SECTIONS   */
        @;

        OFFRMFP+OFFSET;
        OFFCPUC+OFFSET;
        OFFCPUD+OFFSET;
        OFFASID+OFFSET;

        LINK RMFCOM;

 /*------------------------------------------------------------------+
  × TYPE_70 CPU CONTROL SECTION (NOT USED HERE)...                   ×
  +------------------------------------------------------------------*/

 /*------------------------------------------------------------------+
  × TYPE_70 CPU DATA SECTION...                                      ×
  +------------------------------------------------------------------*/
     NO_VALID=0; CPU_WT=0;
     DO WHILE(NUMCPUD>0);
        INPUT
           @OFFCPUD    SMF70WAT MSEC8.  /* CPU WAIT TIME             */
           @OFFCPUD+08 SMF70CID PIB2.   /* CPU IDENTIFICATION        */
           @OFFCPUD+10 SMF70CNF PIB1.   /* CONFIG ACTIVITY INDICATOR */
           @;

        IF SMF70CNF='.......1'B THEN DO;
                                   NO_VALID+1;
                                   CPU_WT+SMF70WAT;
                                END;
        NUMCPUD=NUMCPUD-1;
        OFFCPUD+LENCPUD;
     END;

     IF NO_VALID>0 THEN
        CPUWTIM= CPU_WT/NO_VALID;       /* AVG CPU WAIT TIME         */

 /*------------------------------------------------------------------+
  × TYPE_70 ADDRESS-SPACE ID SECTION...                              ×
  +------------------------------------------------------------------*/
        INPUT
           @OFFASID+004 SMF70RTT PIB4.  /* READY TOTAL OVER INTERVAL */
           @OFFASID+008 SMF70R00 PIB4.  /* COUNT OF TIMES RDY TOT=0  */
           @OFFASID+076 SMF70ITT PIB4.  /* IN USERS TOT OVER INTVL   */
           @OFFASID+132 SMF70OTT PIB4.  /* OUT USERS TOTAL OVER INT  */
           @OFFASID+244 SMF70BTT PIB4.  /* BATCH USERS TOT OVER INTVL*/
           @OFFASID+300 SMF70STT PIB4.  /* STARTED TASK TOT OVER INT */
           @OFFASID+356 SMF70TTT PIB4.  /* TSO USERS TOT OVER INTVL  */
           @;

        OUTPUT CPU;

  RETURN; /*----------------------------------------------------------*/

  %INCLUDE PDS(SMFXASMF);

  %INCLUDE PDS(SMFXARMF);

 PROC PRINT;

//SMF DD DISP=SHR,DSN=TEC.BCHSMF.DATA(+0)
//PDS DD DISP=SHR,DSN=THIS LIBRARY
