./ ADD NAME=$EPILOG
         MACRO
&LABEL   $EPILOG &RC
         GBLC  &PROGM
&LABEL   LR    R1,R13              GET SAVEAREA ADDRESS
         L     R13,4(R13)          GET BACK CHAIN POINTER
         AIF   ('&PROGM' NE 'GETMAIN').NOFREE
         L     R0,16(R13)          GET SAVEAREA LENGTH
         ST    R15,16(R13)         SAVE REGISTER 15 (RETCODE)
         FREEMAIN R,LV=(0),A=(1)   FREE SAVEAREA
         AGO   .LM
.NOFREE  ANOP
         ST    R15,16(R13)         SAVE REGISTER 15 (RETCODE)
.LM      ANOP
         LM    R14,R12,12(R13)     RESTORE CALLERS REGS
         AIF   (T'&RC EQ 'O').SPEC
         LA    R15,&RC             SET RETURN CODE
.SPEC    ANOP
         BR    R14                 RETURN TO CALLER
         MEND
./ ADD NAME=$PROLOG
         MACRO
&LABEL   $PROLOG &LV=0,&GM=Y
.**********************************************************************
.*
.*       THIS MACRO WILL PROVIDE ENTRY LINKAGE AND OPTIONALLY
.*       MULTIPLE BASE REGISTERS.  ALSO, VIA THE 'LV=' KEYWORD
.*       PROVIDE ADDITIONAL USER STORAGE (APPENDED TO THE
.*       SAVE AREA) ADDRESSABLE FROM REG 13.  IF NO OPERANDS
.*       ARE CODED, REG 12 IS ASSUMED THE BASE. EXAMPLE:
.*              SECTNAME $PROLOG          = STANDARD REG 12 BASE
.*              SECTNAME $PROLOG 5        = STANDARD, REG 5 BASE
.*              SECTNAME $PROLOG 10,LV=20 = ADD 20 BYTES TO SAVE AREA
.*                                             REG 10 IS BASE
.*              SECTNAME $PROLOG R10,R11  = REGS 10 AND 11 ARE BASES
.*
.**********************************************************************
         LCLA  &AA,&AB,&AC
         GBLB  &PRORG
         GBLC  &PROGM
&AC      SETA  4096
&LABEL   CSECT
         B     32(R15)             BRANCH AROUND
         DC    AL1(26)
         DC    CL8'&LABEL'         CSECT NAME
         DC    C'-'
         DC    CL8'&SYSDATE'       COMPILE DATE
         DC    C'-'
         DC    CL8'&SYSTIME'       COMPILE TIME
         CNOP  0,4                 ALIGNMENT
         STM   R14,R12,12(R13)     SAVE REGISTERS
         LR    R12,R15             LOAD BASE REG
         USING &LABEL,R12          INFORM ASSEMBLER
         AIF   (&LV GT 4023).MERR
         AIF   ('&GM' EQ 'N').NOGM
&PROGM   SETC  'GETMAIN'
         LA    R0,&LV+72           LOAD REG 0 WITH LENGTH VARIABLE
         GETMAIN R,LV=(0)          GET CORE FOR SAVEAREA AND USER
         AIF   (&LV+72 LE 256).XC2
         AIF   (&LV+72 LE 512).XC1
         MVI   0(R1),X'00'         MOVE X'00' TO FIRST BYTE
         LR    R2,R1               SAVE POINTER IN EVEN REG
         LA    R4,1(R1)            SET RECEIVING POINTER
         LR    R5,R0               SET RECEIVING LENGTH
         BCTR  R5,R0               DECREMENT LENGTH
         LA    R5,0(R5)            CLEAR HIGH ORDER BYTE
         LA    R3,1                SET SENDING LENGTH
         MVCL  R4,R2               INSTRUCTION PADS WITH X'00'
         AGO   .STORE
.XC1     ANOP
         XC    256(&LV-184,R1),256(R1)  CLEAR SAVE AREA
         XC    0(256,R1),0(R1)          CLEAR SAVE AREA
         AGO   .STORE
.XC2     ANOP
         XC    0(&LV+72,R1),0(R1)       CLEAR SAVE AREA
         AGO   .STORE
.NOGM    ANOP
         CNOP  0,4
         LA    R1,SAVE&SYSNDX
         B     *+76
SAVE&SYSNDX DC 18F'0'
.STORE   ANOP
         ST    R13,4(R1)           SAVE BACK CHAIN
         ST    R1,8(R13)           SET FORWARD CHAIN
         LR    R11,R1              SAVE NEW SAVEAREA ADDRESS
         L     R15,16(R13)         RESTORE REG 15
         ST    R0,16(R13)          SAVE SAVEAREA LENGTH
         LM    R0,R1,20(R13)       RESTORE REGS USED IN GETMAIN
         LR    R13,R11             SET SAVEAREA POINTER
         AIF   (N'&SYSLIST EQ 0).MEND
         AIF   ('&SYSLIST(1)' EQ 'R12').SKIPIT
         AIF   ('&SYSLIST(1)' EQ '12').SKIPIT
         LA    &SYSLIST(1),&LABEL  LOAD REQUESTED BASE REG
         DROP  R12                 DROP ASSUMED BASE REG
         USING &LABEL,&SYSLIST(1)  INFORM ASSEMBLER
.SKIPIT  ANOP
&AA      SETA  2
.LOOP    ANOP
         AIF   (&AA GT N'&SYSLIST).MEXIT
&AB      SETA  &AA-1
         LA    &SYSLIST(&AA),2048(&SYSLIST(&AB))  LOAD NEXT BASE REG
         LA    &SYSLIST(&AA),2048(&SYSLIST(&AA))  LOAD NEXT BASE REG
         USING &LABEL+&AC,&SYSLIST(&AA) INFORM ASSEMBLER
&AC      SETA  &AC+4096
&AA      SETA  &AA+1
         AGO   .LOOP
.MEXIT   ANOP
         AIF   (&PRORG).MEX2
         SPACE
         $REGS
         SPACE
.MEX2    ANOP
&AA      SETA  &LV+72
         MNOTE *,'TOTAL STORAGE AREA RECEIVED = &AA'
         MEXIT
.MEND    ANOP
         MNOTE *,'NO REGISTER SPECIFIED - R12 ASSUMED'
         AGO   .MEXIT
.MERR    ANOP
         MNOTE 12,'LV > 4023 - REQUEST IGNORED'
         AGO   .MEXIT
         MEND
./ ADD NAME=$REGS
         MACRO
         $REGS
         GBLB  &PRORG
         AIF   (&PRORG).MEX2
&PRORG   SETB  1
 SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
 SPACE
REG0     EQU   0
REG1     EQU   1
REG2     EQU   2
REG3     EQU   3
REG4     EQU   4
REG5     EQU   5
REG6     EQU   6
REG7     EQU   7
REG8     EQU   8
REG9     EQU   9
REG10    EQU   10
REG11    EQU   11
REG12    EQU   12
REG13    EQU   13
REG14    EQU   14
REG15    EQU   15
 SPACE
.MEX2    ANOP
       MEND
./ ADD NAME=BITSW
         MACRO
&LABEL   BITSW   &BIT0,&BIT1,&BIT2,&BIT3,&BIT4,&BIT5,&BIT6,&BIT7,&DSECT
         LCLC  &#
&#       SETC  '#'
         AIF   ('&BIT0' EQ '').A
&BIT0    EQU   *  .          BIT 0.
&BIT0&#  EQU   128  .        1... ....      BIT POSITION
.A       AIF   ('&BIT1' EQ '').B
&BIT1    EQU   *  .          BIT 1.
&BIT1&#  EQU   64  .         .1.. ....      BIT POSITION
.B       AIF   ('&BIT2' EQ '').C
&BIT2    EQU   *  .          BIT 2.
&BIT2&#  EQU   32  .         ..1. ....      BIT POSITION
.C       AIF   ('&BIT3' EQ '').D
&BIT3    EQU   *  .          BIT 3.
&BIT3&#  EQU   16  .         ...1 ....      BIT POSITION
.D       AIF   ('&BIT4' EQ '').E
&BIT4    EQU   *  .          BIT 4.
&BIT4&#  EQU   8  .          .... 1...      BIT POSITION
.E       AIF   ('&BIT5' EQ '').F
&BIT5    EQU   *  .          BIT 5.
&BIT5&#  EQU   4  .          .... .1..      BIT POSITION
.F       AIF   ('&BIT6' EQ '').G
&BIT6    EQU   *  .          BIT 6.
&BIT6&#  EQU   2  .          .... ..1.      BIT POSITION
.G       AIF   ('&BIT7' EQ '').H
&BIT7    EQU   *  .          BIT 7.
&BIT7&#  EQU   1  .          .... ...1      BIT POSITION
.H       ANOP
         AIF   ('&DSECT' EQ '').I
&LABEL   DS    XL1  .        BIT BYTE.
         SPACE
         MEXIT
.I       ANOP
&LABEL   DC    XL1'0' .      BIT BYTE.
         SPACE
         MEND
./ ADD NAME=IFOFF
         MACRO
&LABEL   IFOFF &BIT,&BROF,&BRON
         LCLB  &BL121,&BL122
         LCLC  &#
&#       SETC  '#'
         AIF   ('&BIT' NE '').A
         MNOTE 1,'OPERAND 1 MISSING - NO GENERATION'
         MEXIT
.A       ANOP
&BL121   SETB  ('&BRON' NE '')
&BL122   SETB  ('&BROF' NE '')
         AIF   (&BL121 OR &BL122).AA
         MNOTE 1,'NO TRANSFER ADDRESS'
         MEXIT
.AA      ANOP
&LABEL   TM    &BIT,&BIT&#  .          TEST FOR BIT.
         AIF   (NOT &BL122).OTHER
         BZ    &BROF  .                BRANCH NOT ON.
         AIF   (&BL121).OTHER
         SPACE
         MEXIT
.OTHER   BO    &BRON  .                BRANCH ON.
         SPACE
         MEND
./ ADD NAME=IFON
         MACRO
&LABEL   IFON  &BIT,&BRYES,&BRNO
         LCLB  &BL121,&BL122
         LCLC  &#
&#       SETC  '#'
         AIF   ('&BIT' NE '').A
         MNOTE 1,'OPERAND 1 MISSING - NO GENERATION'
         MEXIT
.A       ANOP
&BL121   SETB  ('&BRYES' NE '')
&BL122   SETB  ('&BRNO' NE '')
         AIF   (&BL121 OR &BL122).AA
         MNOTE 1,'NO TRANSFER ADDRESS'
         MEXIT
.AA      ANOP
&LABEL   TM    &BIT,&BIT&#  .          TEST FOR BIT.
         AIF   (NOT &BL121).TAKNO
         BO    &BRYES  .               BRANCH ON.
         AIF   (&BL122).TAKNO
         SPACE
         MEXIT
.TAKNO   ANOP
         BZ    &BRNO  .                BRANCH NOT ON.
         SPACE
         MEND
./ ADD NAME=SETOF
         MACRO
&LABEL   SETOF &A,&B,&C,&D,&E,&F,&G,&H,&I,&J,&K,&L,&M,&N,&O,&P
         LCLA  &NU
         LCLC  &VALUE
         LCLC  &#
&#       SETC  '#'
         AIF   ('&A' NE '').OK
         MNOTE 5,'MISSING OPERANDS - NO GEN'
         MEXIT
.OK      AIF   ('&LABEL' EQ '').B1
&LABEL   EQU   *
.B1      ANOP
&NU      SETA  N'&SYSLIST
.CHK     AIF   ('&NU' NE '0').LOOP
         SPACE
         MEXIT
.LOOP    ANOP
&VALUE   SETC  '&SYSLIST(&NU)'
         NI    &SYSLIST(&NU),255-&VALUE&#
&NU      SETA  &NU-1
         AGO   .CHK
         MEND
./ ADD NAME=SETON
         MACRO
&LABEL   SETON &A,&B,&C,&D,&E,&F,&G,&H,&I,&J,&K,&L,&M,&N,&O,&P
         LCLA  &NU
         LCLC  &VALUE
         LCLC  &#
&#       SETC  '#'
         AIF   ('&A' NE '').OK
         MNOTE 5,'MISSING OPERANDS - NO GEN'
         MEXIT
.OK      AIF   ('&LABEL' EQ '').B1
&LABEL   EQU   *
.B1      ANOP
&NU      SETA  N'&SYSLIST
.CHK     AIF   ('&NU' NE '0').LOOP
         SPACE
         MEXIT
.LOOP    ANOP
&VALUE   SETC  '&SYSLIST(&NU)'
         OI    &SYSLIST(&NU),&VALUE&#
&NU      SETA  &NU-1
         AGO   .CHK
         MEND
