         TITLE 'TSO DATA SET EXPIRATION DATE COMMAND'
***********************************************************************
*                                                                     *
*                                                                     *
* TITLE -      TSO DATA SET EXPIRATION DATE COMMAND                   *
*                                                                     *
* FUNCTION -   PROVIDE THE ABILITY FOR A TSO USER TO                  *
*              CHANGE THE EXPIRATION DATE OF A DATA SET.              *
*                                                                     *
*                                                                     *
* OPERATION -  ACCEPT FROM THE TSO USER A COMMAND                     *
*              STRING CONTAINING THE NAME OF A DATA SET               *
*              AND THE EXPIRATION DATE TO BE SET FOR                  *
*              THAT DATA SET. THE JFCB IS THEN CHANGED                *
*              TO REFLECT THE GIVEN DATE AND THE DATA SET             *
*              IS OPENED AND CLOSED                                   *
*                                                                     *
*                                                                     *
* INPUT -      STANDARD COMMAND PROCESSOR PARAMETER LIST              *
*              POINTED TO BY REGISTER 1                               *
*                                                                     *
*                                                                     *
* OUTPUT -     DATA SET EXPIRATION DATE IS CHANGED TO                 *
*              SPECIFIED DATE OR DEFAULTED TO 99350.                  *
*                                                                     *
*                                                                     *
* ATTRIBUTES - REENTRANT, REUSEABLE, REFRESHABLE.                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
         MACRO
&NAME    CLEAR &FIELD
         LCLC  &L
&L       SETC  'L'''
&NAME    MVI   &FIELD,C' '
         MVC   &FIELD+1(&L&FIELD-1),&FIELD
         MEND
         SPACE 1
         MACRO
&NAME    EXIT  &LV=
&NAME    DS    0H
         AIF   ('&LV' EQ '').A1
         LR    R2,R13         ADDR OF THIS SAVE AREA
.A1      L     R13,4(R13)
         STM   R15,R1,16(R13) RETURN REGS 15, 0, 1
         AIF   ('&LV' EQ '').A2 NOT DYNAMIC CORE
         FREEMAIN R,LV=&LV,A=(R2)
.A2      SPACE
         RETURN (14,12),T
         MEND
         SPACE
         MACRO
&NAME    MSG   &TEXT
         LCLA  &A
&A       SETA  K'&TEXT-2+4
&NAME    DC    H'&A',H'0',C&TEXT
         MEND
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
WORKREG  EQU   10
BASEREG1 EQU   11
BASEREG2 EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 5
CHGDATE  CSECT
         B     12(R15)                 GO AROUND NAME
         DC    AL1(7)
         DC    CL7'CHGDATE'
         STM   R14,12,12(R13)
         LR    BASEREG1,R15
         USING CHGDATE,BASEREG1
         LR    R2,R1                   SAVE CPPL ADDR
         LA    R3,CORESIZE             WORKAREA - WORKEND
         GETMAIN R,LV=(R3)             GET WORKAREA
         LR    WORKREG,R1              SET UP ADDRNG TO WORK AREA
         USING WORKAREA,WORKREG
         LA    R15,SAVEAREA            FINISH SAVE ROUTINE
         ST    R15,8(R13)
         ST    R13,4(R15)
         LR    R13,R15
**********************************************************************
*        GET ADDRESSES FOR PARSE FROM CPPL                           *
*        LOAD DAIR ROUTINES                                          *
**********************************************************************
         USING CPPL,R2                 ADRESSING FOR CPPL
         MVC   ADDRUPT,CPPLUPT         SAVE UPT ADDRESS
         MVC   ADDRPSCB,CPPLPSCB       SAVE PSCB ADDRESS
         MVC   ADDRECT,CPPLECT         SAVE ECT ADDRESS
         MVC   ADDRCBUF,CPPLCBUF       SAVE ADDRESS OF COMMAND BUFFER
         DROP  R2                      DROP ADDRESSING TO CPPL
         SPACE 3
         LOAD  EPLOC=IKJDAIR           LOAD DYNAMIC ALLOCATION SUBRTN
         ST    R0,ADDRDAIR             SAVE ENTRY POINT
         SPACE 3
**********************************************************************
*        BUILD PARSE LIST                                            *
*        INVOKE IKJPARSE                                             *
**********************************************************************
         LA    R1,PARSELST             LOAD ADDR OF PARSE PARM LIST
         USING PPL,R1                  SET ADDRESSING
         MVC   PPLUPT,ADDRUPT          MOVE IN ADDR OF UPT
         MVC   PPLECT,ADDRECT                          ECT
         MVC   PPLCBUF,ADDRCBUF                        COMMAND BUFFER
         ST    WORKREG,PPLUWA                          WORK AREA
         LA    R0,ATTNECB              ADDRESS OF ECB
         MVI   ATTNECB,X'00'           CLEAR ECB
         ST    R0,PPLECB               STORE IN PARSE LIST
         LA    R0,ADDRANSR             EVENTUAL POINTER
         ST    R0,PPLANS               TO PDL
         L     R0,=A(PCLMAIN)          POINTER TO PCL
         ST    R0,PPLPCL
         LINK  EPLOC=IKJPARS           GO GET COMMAND PARAMS
         DROP  R1                      DROP ADDR TO PPL
         LTR   R15,R15                 TEST RETURN CODE
         BZ    PARSEOK                 GOOD PARSE
         LA    R15,12                  BAD PARSE
         B     RETURN                  GO BACK
**********************************************************************
*        CHECK & SAVE DSNAME AND DATE                                *
**********************************************************************
PARSEOK  EQU   *
         L     R9,ADDRANSR             ADDR OF PDL
         USING PDL,R9                  SET AS BASE
         LA    R2,OPTDSN               POINTER TO DSN IN PDL
         CLEAR DSNAME                  CLEAR DSN SAVE AREA
         L     R15,0(,R2)              LOAD ADDR OF DSN
         LH    R14,4(,R2)              LOAD LENGTH OF DSN
         STH   R14,DSNLEN              SAVE LENGTH
         BCTR  R14,0                   DECREMENT FOR MOVE
         MVC   DSNAME(0),0(R15)        TO BE EXECUTED NEXT INST
         EX    R14,*-6                 MOVE DSN FROM PARSE
         L     R1,OPTEXPDT             LOAD ADDR OF EXPDT
         MVC   XPDPARM2,0(R1)          MOVE EXPDT TO PARM LIST
         L     R1,OPTVOL               ADDRESS OF VOLUME SERIAL
         CLC   0(6,R1),=C'VOLSER'      WAS ONE ENTERED
         BE    CATLOGD                 NO USE CATALOG
         MVC   SERIAL(6),0(R1)         SAVE FOR ALLOCATE
CATLOGD  EQU   *
**********************************************************************
*        DEALLOCATE SYSDISK AND SYSVTOC                              *
*        ALLOCATE TO DESIRED DATA SET                                *
**********************************************************************
         LA    R1,PARMLIST             SET UP ADDRESSING TO
         USING DAPL,R1                 DAIR PARAM LIST
         MVC   DAPLUPT,ADDRUPT         MOVE IN ADDRESS OF UPT
         MVC   DAPLECT,ADDRECT                            ECT
         MVC   DAPLPSCB,ADDRPSCB                          PSCB
         LA    R0,ATTNECB              ADDRESS OF ECB
         MVI   ATTNECB,X'00'           CLEAR
         ST    R0,DAPLECB              STORE IN DAPL
         LA    R2,DAIRBLK              WORK AREA FOR DAIR
         ST    R2,DAPLDAPB
         LA    R9,ALLOC
         USING DAPB18,R2
DEALL    BAL   R8,SET18
         MVC   DA18DDN,=CL8'SYSDISK'
         LA    R1,PARMLIST
         L     R15,ADDRDAIR
         BALR  R14,R15
         BAL   R8,SET18
         MVC   DA18DDN,=CL8'SYSVTOC'
         LA    R1,PARMLIST
         L     R15,ADDRDAIR
         BALR  R14,R15
         BR    R9
         USING DAPB08,R2
ALLOC    BAL   R8,SET08
         MVC   DA08DDN,=CL8'SYSDISK'
         L     R15,ADDRDAIR
         BALR  R14,R15
         LTR   R15,R15
         BNZ   ERRORTN
         BAL   R8,SET08
         MVC   DA08DDN,=CL8'SYSVTOC'
         L     R15,ADDRDAIR
         BALR  R14,R15
         LTR   R15,R15
         BNZ   ERRORTN
         LA    R1,=A(XPDPARM)
         LINK  EPLOC=MBCHGDTE
         BAL   R9,DEALL
RETURN   EQU   *
         BAL   R14,FREEPDL             GO FREE PARSE SPACE
         DELETE EPLOC=IKJDAIR          DELETE DYNAM ALLOC ROUT
         LA    R0,CORESIZE             FREE MY WORK AREA
         EXIT  LV=(R0)
FREEPDL  EQU   *
         ST    R14,R14SAVE             SAVE FOR RETURN
         IKJRLSA ADDRANSR              FREE PARSE SPACE
         XC    ADDRANSR,ADDRANSR       CLEAR POINTER
         L     R14,R14SAVE             SET UP RETURN
         BR    R14                     RETURN
         USING DAPB08,R2
SET08    XC    DAIRBLK(LDAIRBLK),DAIRBLK   CLEAR WORKAREA
         LA    R0,8                    LOAD OP CODE
         STH   R0,DA08CD               STORE IN WORKAREA
         LA    R0,DSNLEN               MOVE ADDR OF LENGTH
         ST    R0,DA08PDSN             AND DSN TO WORKAREA
         MVC   DA08UNIT,=CL8'DISK'
         MVC   DA08SER,SERIAL
         CLEAR DA08MNM
         CLEAR DA08PSWD
         OI    DA08DSP1,DA08SHR        DISP=(SHR,KEEP,KEEP)
         OI    DA08DPS2,DA08KEEP
         OI    DA08DPS3,DA08KEP
         BR    R8
         USING DAPB18,R2
SET18    XC    DAIRBLK(LDAIRBLK),DAIRBLK   CLEAR WORKAREA
         LA    R0,X'18'                LOAD OP CODE
         STH   R0,DA18CD               STORE IN WORKAREA
         LA    R0,DSNLEN               MOVE ADDR OF LENGTH
         ST    R0,DA18PDSN             AND DSN TO WORKAREA
         CLEAR DA18MNM
         OI    DA18DPS2,DA08KEEP
         BR    R8
ERRORTN  EQU   *
         ST    R15,RCSAVE     SAVE RETURN CODE
         LOAD  EPLOC=IKJEFF18
         LR    R8,R0          ENTRY POINT
         LA    R9,ERRWORK     ERROR PARM LIST
         USING DFDSECTD,R9
         LA    R0,PARMLIST
         ST    R0,DFDAPLP
         LOAD  EPLOC=IKJEFF02
         ST    R0,ENT02
         LA    R0,ENT02
         ST    R0,DFJEFF02
         LA    R0,RCSAVE
         ST    R0,DFRCP
         LA    R0,IDP
         ST    R0,DFIDP
         LR    R1,R9
         LR    R15,R8
         BALR  R14,R15
         DELETE EPLOC=IKJEFF18
         DELETE EPLOC=IKJEFF02
         B     RETURN
         LTORG
PCLMAIN  IKJPARM DSECT=PDL
OPTDSN   IKJPOSIT DSNAME,USID,PROMPT='DATA SET NAME'
OPTXPDT  IKJKEYWD DEFAULT='EXPDT(99350)'
         IKJNAME 'EXPDT',SUBFLD=$EXPDT
OPTVOLUM IKJKEYWD DEFAULT='VOL(VOLSER)'
         IKJNAME 'VOL',SUBFLD=$VOLSER
$EXPDT   IKJSUBF
OPTEXPDT IKJIDENT 'EXPIRATION DATE',PROMPT=' EXPIRATION DATE',         X
               CHAR,MAXLNTH=5,PTBYPS
$VOLSER  IKJSUBF
OPTVOL   IKJIDENT 'VOLUME',PROMPT='VOLUME',CHAR,MAXLNTH=6,PTBYPS
         IKJENDP
IKJDAIR  DC    CL8'IKJDAIR'
IKJPARS  DC    CL8'IKJPARS'
MBCHGDTE DC    CL8'MBCHGDTE'
IKJEFF18 DC    CL8'IKJEFF18'
IKJEFF02 DC    CL8'IKJEFF02'
SERIAL   DC    CL8' '
IDP      DC    X'0001'
XPDPARM  DC    H'11'
         DC    C'EXPDT='
XPDPARM2 DC    CL5' '
WORKAREA DSECT
SAVEAREA DS    18F
PARSELST DS    5F
R14SAVE  DS    F
ADDRUPT  DS    F
ADDRECT  DS    F
ADDRPSCB DS    F
ADDRCBUF DS    F
ADDRDAIR DS    F
ADDRANSR DS    F
ADDREXIT DS    F
ADDRPCL  DS    F
ATTNECB  DS    F
DSNLEN   DS    H
DSNAME   DS    CL44
PARMLIST DS    7A
DAIRBLK  DS    25D
LDAIRBLK EQU   *-DAIRBLK
RCSAVE   DS    F
ERRWORK  DS    132F
ENT02    DS    F
CORESIZE EQU   *-WORKAREA
         IKJPPL
         IKJIOPL
         IKJPSCB
         IKJECT
         IKJCPPL
         IKJDAPL
         IKJDAP08
         IKJDAP18
         IKJEFFDF DFDSECT=YES
         END
