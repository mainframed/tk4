00010007.pl 80
00020000.he 'Section 3 - COMMANDS'PLI3270'Page 112.%'
00030015.fe 'November 1979''PLI3270'
00040009.ll 83
00050000.nf
00060000-----------
00070000|         |
00080000| PLI3270 |
00090000|         |
00100000-----------
00110000.fo
00120000.sp 3
00130006Use the PLI3270 command procedure to design 3270 full screen displays
00140008for use in PL/I programs.
00150008PLI3270 will also generate the necessary PL/I
00160000DECLARE statements to produce the screens. The output of the PLI3270
00170001clist is designed to be included in a PL/I program and to be used in
00180000conjunction with calls to the subroutine WJFS, the generalized
00190000full screen module.
00200000.sp 3
00210000.nf
00220001C_o_m_m_a_n_d_      Operands
00230000.sp
00240002%PLI3270    program-name  DISP(o_l_d_/new)  SYSOUT(class/N_)
00250000.sp
00260000program-name
00270000.fo
00280000.in 10
00290000Specifies the name of the program which will use the screens.
00300000.sp
00310000.in
00320000DISP
00330000.br
00340000.in 10
00350006If NEW is specified, PLI3270 creates a "program-name.DATA" and a
00360006"program-name.PLI" data set to contain information about the screens
00370003being designed.
00380000Both are PDS's. The DATA data set contains screen images as drawn on
00390000the screen. The PLI data set contains generated DCL statements to
00400000produce the screens in conjunction with subroutine WJFS in a PL/I
00410000program.
00420000.sp
00430000If OLD is specified, PLI3270 assumes that the DATA and PLI data sets
00440000have already been created by a previous invocation of PLI3270.
00450000.sp
00460000.in
00470000SYSOUT
00480000.in 10
00490003Specifies the sysout class for hardcopy output generated during the
00500000PLI3270 design session.
00510000.in
00520000.sp 4
00530003Usage of the PLI3270 command procedure is detailed on the following pages.
00540000.pa
00550000.sp 3
00560000PLI3270 USAGE
00570000.sp
00580003Use of the PLI3270 command procedure consists of 5 phases:
00590000.sp
00600000.in 10
00610000.nf
006200031) Allocating the PLI3270 datasets.
006300032) Designing the 3270 screens.
006400033) Generating the PL/I DCL statements.
006500034) Testing the PL/I DCL statements.
006600035) Using the generated DCL's in a PL/I program.
00670000.sp
00680000.fo
00690000.in
00700000These steps are explained below.
00710000.sp 2
007200031) ALLOCATING THE PLI3270 DATASETS.
00730000.sp
00740003To invoke PLI3270 the first time for a PL/I program which will use
00750000subroutine WJFS, a DISP of NEW must be specified. This will create
00760000the required PLI3270 design datasets:
00770000.sp
00780000.in 5
00790000pli3270 pgma disp(new)
00800000.br
00810000PLI3270 SCREEN DESIGN SESSION STARTED
00820000.br
00830000PLI3270 DATASETS BEING CREATED FOR PGMA
00840000.br
00850000PDS PGMA.DATA HAS BEEN CREATED WITH MEMBERS PGMA1-PGMA8
00860000.br
00870000    AND
00880000.br
00890000PDS PGMA.PLI HAS BEEN CREATED TO HOLD ANY GENERATED "DCL" STATEMENTS
00900000.in
00910000.sp
00920003If DISP is NEW, the next step, SCREEN DESIGN, is automatically invoked.
00930000.sp
00940000If DISP is OLD, PLI3270 assumes that the required PLI3270 data sets have
00950000been created in a previous design session, and issues this message:
00960000.sp
00970000.in 5
00980000ARE YOU DESIGNING A SET OF SCREENS THIS SESSION (YES OR NO) ?
00990000.sp
01000000.in
01010003If YES, the screen designing is invoked; if NO, SCREEN DESIGN is
01020003skipped and DCL GENERATION prompting is invoked.
01030000.pa
010400032) DESIGNING THE 3270 SCREENS
01050000.sp
01060000The screen design session invokes a program which provides a blank
01070000screen upon which you can design your format.
01080000.sp
01090000Up to 8 3270 screens may be designed by a PLI3270 session. The program
01100006function (PFx) keys are used to switch among the various screens which
01110000you have designed. PF keys are defined as:
01120000.sp
01130000.in 5
01140000.nf
01150000PF1-PF8 - Switches from screen to screen.
01160000PF9     - HELP is displayed upon the screen.
01170000PF12    - The current screen is printed to sysout.
01180000PA2     - The screen design session is terminated.
01190003ENTER   - Saves the current screen in the DATA data set.
01200000.fo
01210000.sp
01220000NOTE that the ENTER key is the ONLY method of saving a screen
01230000you have designed in your DATA data set. If the PF1-PF8 keys are
01240000used to switch screens, any changes which you may have entered will
01250000be destroyed.
01260003.in
01270000.sp
01280000Attributes of the data on your screen may be high or low intensity, or
01290000non-displayed; they may also be protected or unprotected. These
01300000attributes are defined by special characters which you enter on a
01310006screen which you have designed.
01320006.sp
01330006An example of a design session is:
01340000.in 5
01350000.sp
01360000ATTRIBUTE BYTES ARE DEFINED AS:
01370000.sp
01380000.nf
01390003.in 5
01400000 '#' = UNPROTECTED, LOW-INTENSITY
01410000 '!' = UNPROTECTED, NON-DISPLAY
01420000 '¢' = UNPROTECTED, HIGH-INTENSITY
01430000 '@' = PROTECTED, LOW-INTENSITY
01440000 '^' = PROTECTED, HIGH-INTENSITY
01450000.sp
01460000.fo
01470000DO YOU NEED TO CHANGE ANY OF THESE VALUES (YES OR NO) ?
01480000.sp
01490000.in
01500000If any of these special characters are needed as real data on your
01510000screen, then you must answer YES and redefine your attribute bytes to
01520000characters which will not appear on your screen.
01530000.sp
01540000If NO is entered, the screen design is invoked and prompts:
01550000.sp
01560000.in 5
01570000WHICH SCREEN DO YOU WANT DISPLAYED ( 1 TO 8) ?
01580000.in
01590000.sp
01600013Enter the required screen number and the requested screen will be
01610013displayed.
01620000If this is a new session, the screen will be blank. If it is a
01630000continuation of a previous session, the previous screen will be invoked.
01640003.sp
01650000The entire screen may now be designed to match your required format.
01660000.sp
01670000.in 5
01680000^Enter Logon: #        ^
01690000.sp
01700000.in
01710000This data would result in a high intensity, protected field, "Enter
01720000Logon", and a low intensity unprotected field eight bytes long.
01730000.sp
01740000When you are satisfied with your design, the ENTER key will save the
01750000format in your DATA data set.
01760000.sp
01770006.in 5
01780006ENTER THE CHARACTER YOU WANT INSERTED INTO ROW1. COLUMN 1 OF THE SCREEN?
01790006.sp
01800006.in
01810006Since at least one attribute byte is always on the screen, the format
01820006you just designed does not include a line 1 column 1 character. You
01830006should now enter the character you want displayed at that position.
01840013Normally the character which you would specify for line 1 column 1 is
01850013"^", since the first data on the screen is usually high intensity and
01860013protected.
01870006.sp
01880000After reviewing all of your designs, the screen design session is
01890004terminated with the PA2 key, and this message appears:
01900000.sp
01910004.in 5
01920004SCREEN DESIGN SESSION COMPLETED
01930004.in
01940004.pa
019500053) GENERATING THE PL/I DCL STATEMENTS
01960004.sp
01970004Now that the screen, or screens, have been designed, the next step is
01980004to generate the PL/I DCL statements to be included in the program
01990004which will use them.
02000004.sp
02010004.in 5
02020004DO YOU WANT TO GENERATE "DCL" STATEMENTS FOR ANY SCREEN (YES OR NO) ?
02030004.sp
02040004.in
02050004If NO, the PLI 3270 session is terminated.
02060004.sp
02070006If YES:
02080006.sp
02090004.in 5
02100004ENTER THE SCREEN NUMBER YOU WANT TO GENERATE (1 THROUGH 8): n
02110005.br
02120004ENTER ROW AND COLUMN OF CURSOR POSITION: rr cc
02130004.sp
02140004.in
02150004Row must be from 1 to 24, column from 1 to 80.
02160013These values define where the cursor will be displayed when the screen
02170004is sent to the terminal.
02180004.sp
02190004.in 5
02200004ENTER THE PREFIX FOR THIS SCREEN'S DCL STRUCTURE (1 TO 8 CHARACTERS):
02210004.br
02220004xxxxxxxx
02230004.sp
02240004.in
02250004The DCL structure which is generated will be prefixed by this value, and
02260013the member added to "program-name.PLI" will also have this prefix as
02270013it's member name. In the following examples, the first screen has been
02280013called "MENU", and the second screen called "PROD".
02290004.sp
02300004.in 5
02310004DCL GENERATION STARTED
02320005.br
02330004DCL GENERATION COMPLETED
02340004.sp
02350004.in
02360006The screen input data will automatically be printed on the SYSOUT
02370006device.
02380006.sp
02390004This completes the generation of the DCL statements.
02400004.pa
024100054) TESTING THE PL/I DCL STATEMENTS
02420004.sp
02430013Testing of the generated PL/I DCL structure occurs automatically
02440013upon completion of the generation phase.
02450013Testing consists of a RUN PLI command which compiles
02460006the structure and displays it on the screen.
02470004These messages appear:
02480004.sp
02490004.in 5
02500004SCREEN 1 WILL NOW BE TESTED; AFTER THE SCREEN COMES UP, ENTER THE PA2
02510005KEY TO TERMINATE THE TEST.
02520004.nf
02530004PL/I OPTIMIZING COMPILER INVOKED
02540004 |       |         |
02550004 |       |         |
02560004 |       |         |
02570004.sp
02580004.fo
02590004.in
02600013The compilation messages will appear briefly and will then be replaced
02610013by a full screen display of the generated screen, including high/low
02620004intensity, protected or unprotected fields, and non-display fields. The
02630004field advance key (to the left of "Q" on the keyboard may be used to
02640004test unprotected fields, and you may type into any of the unprotected
02650004to verify that the intensity is correct.
02660004.sp
02670004NOTE that the unprotected fields which you have defined will appear on
02680004the screen as underscores. All blanks in unprotected fields are changed
02690004to underscores by subroutine WJFS when sent to the screen, and all
02700004underscores received back from the screen are translated to blanks
02710004before the screen is returned to the calling program.
02720004.sp
02730006To terminate the test of this screen, enter the PA2 key; these messages
02740006will then appear:
02750004.sp
02760004.in 5
02770004SCREEN TEST COMPLETED, DCL LIBRARY NOW BEING CREATED
02780006.sp
02790004THE DCL'S FOR prefix-name ARE NOW IN program-name.PLI(prefix-name)
02800006.sp
02810004WOULD YOU LIKE TO GENERATE THE DCL'S FOR ANOTHER SCREEN (YES OR NO) ?
02820004.sp
02830004.in
02840004If YES, PLI3270 will go back to step (3), DCL GENERATION
02850004.sp
02860004.in 5
02870004WOULD YOU LIKE TO REDESIGN ANY SCREENS (YES OR NO) ?
02880004.sp
02890004.in
02900004If YES, PLI3270 will go back to step (2), SCREEN DESIGN
02910004.sp
02920004If NO, then:
02930004.sp
02940004.in 5
02950004PLI3270 SESSION COMPLETED
02960004.sp
02970004.in
02980004This completes the design phase of using the PLI3270 Command Procedure.
02990007.sp 3
030000045) USING THE GENERATED DCL'S IN A PLI PROGRAM
03010004.sp
03020008To use the DCL's which you have generated, please refer to the
03030008documentation for subroutine "WJFS".
03040007.pa
03050007SAMPLE SCREENS AS INPUT TO PLI3270
03060007.sp
03070013Below are two screens as they were entered on a 3270 screen during a
03080013PLI3270 session, along with their associated
03090007PL/1 DECLARE structures. The first screen has been called MENU, and
03100007has no modifiable fields on it. The only acceptable action by the
03110008terminal user is entering the PFK1, PFK2, or PA2 keys.
03120007.sp
03130007The second screen will be sent by the PL/1 program if PFK2 is entered
03140007when the MENU screen is displayed. It has been called the PROD screen.
03150007Note that on line 23 of this screen a field has been defined which is
03160007not modifiable by the terminal user. It will be used by the program
03170007to insert error messages, and must be defined separately when the
03180008screen is designed so the generated DECLARE structure will consider
03190007it a separate fields.
03200007.sp
03210007The DCL structures shown below are as they appear after generation by
03220007PLI3270. The same structures are also shown in the WJFS documentation
03230007as the appear after they have been included in the PL/1 program which
03240013uses them. In the WJFS documentation, the generated labels have been
03250013changed to something more meaningful by the programmer.
03260007.sp 2
03270007.nf
03280007"MENU" SCREEN
03290007.sp
03300007            1         2         3         4         5         6         7         8
03310007   12345678901234567890123456789012345678901234567890123456789012345678901234567890
03320007  *********************************************************************************
0333000701*^
0334000702*
0335000703*                              EDIT  PROGRAM
0336000704*                              =============
0337000705*
0338000706*  This program is a prototype of the EDIT module for the BMFD program.
0339000707*  It allows the user to access the Production File only.
0340000708*
0341000709*  The user can select Three keys _ PF1,PF2, and PA2.
0342000710*
0343000711*               PF1 _ displays this description of the program.
0344000712*               PF2 _ allows the user to access the Production File.
0345000713*               PA2 _ terminates the program.
0346000714*  When PF2 is pressed, the user is asked for the distribution name and action.
0347000715*  Six action choices are available:
0348000716*
0349000717*     A (ADD)     _ Allows data for a new distribution to be entered.
0350000718*     R (REPLACE) _ Allows the user to replace existing data.
0351000719*     C (COPY)    _ Copies data to a new distribution for the user to update.
0352000720*     D (DELETE)  _ Delete the distribution specified.
0353000721*     F (FINISH)  _ Changes are written to a temporary file.
0354000722*
0355000723*  Control returns here.     Please select key PF2 now ....
0356000724*
03570007  *********************************************************************************
03580007.pa
03590008SAMPLE SCREENS AS INPUT TO PLI3270 (continued)
03600008.sp 2
03610007"PROD" SCREEN
03620007.sp
03630007            1         2         3         4         5         6         7         8
03640007   12345678901234567890123456789012345678901234567890123456789012345678901234567890
0365000714 NOV 1979       4.08.56  P.M.
03660007 
03670007            1         2         3         4         5         6         7         8
03680007   12345678901234567890123456789012345678901234567890123456789012345678901234567890
03690007  *********************************************************************************
0370000701*^   ***************   PRODUCTION LEVELS (mpd)   ***************
0371000702*  DISTRIBUTION POINT:#      ^         ACTION(A/D/C/R/L/F:# ^
0372000703*
0373000704*
0374000705*
0375000706*
0376000707*
0377000708*
0378000709*
0379000710*
0380000711*
0381000712*
0382000713*
0383000714*
0384000715*
0385000716*
0386000717*
0387000718*
0388000719*
0389000720*
0390000721*
0391000722*
0392000723*   ^                                                                 ^
0393000724*
03940007  *********************************************************************************
03950007            1         2         3         4         5         6         7         8
03960007   12345678901234567890123456789012345678901234567890123456789012345678901234567890
03970009.pa
03980009SAMPLE SCREENS AS INPUT TO PLI3270 (continued)
03990008.sp 2
04000008DECLARES GENERATED FOR "MENU"
04010008.sp 2
04020011.in 3
04030008 /* THIS DECLARATION WAS GENERATED ON : 79/11/14 */                     00000005
04040008 DCL 1 MENU UNAL,                                                       00000006
04050008 3 MENU_DC CHAR(2) INIT('EW'),                                          00000007
04060008 3 MENU_WCC CHAR(1) INIT('C'),                                          00000008
04070008 3 MENU_BRCS0101 BIT(64) INIT((                                         00000009
04080008                                 '11000010110000010000000000000001'||   00000010
04090008                                 '00000000000000011110001011000110'B)), 00000011
04100008 3 MENU_ATT0101 BIT(8) INIT('11111000'B),                               00000012
04110008 3 MENU_LEN0101 FIXED BIN(15) INIT(1919),                               00000013
04120008 /* FIELD AT ROW  1, COLUMN  1 WITH ATTRIBUTE SYMBOL ^ */               00000014
04130008 3 MENU_FLD0101 CHAR(1919) INIT((                                       00000015
04140008   '                                                            '       00000016
04150008 ||'                                                            '       00000017
04160008 ||'                                                            '       00000018
04170008 ||'         EDIT  PROGRAM                                      '       00000019
04180008 ||'                             =============                  '       00000020
04190008 ||'                                                            '       00000021
04200008 ||'                                         This program is a '        00000022
04210008 ||'prototype of the EDIT module for the BMFD program.          '       00000023
04220008 ||'  It allows the user to access the Production File only.    '       00000024
04230008 ||'                                                            '       00000025
04240008 ||'                                          The user can '            00000026
04250008 ||'select Three keys _ PF1,PF2, and PA2.                       '       00000027
04260008 ||'                                                            '       00000028
04270008 ||'                                        PF1 _ displays this '       00000029
04280008 ||'description of the program.                                 '       00000030
04290008 ||'PF2 _ allows the user to access the Production File.        '       00000031
04300008 ||'                    PA2 _ terminates the program.           '       00000032
04310008 ||'                           When PF2 is pressed, the user is '       00000033
04320008 ||'asked for the distribution name and action.    Six action '         00000034
04330008 ||'choices are available:                                      '       00000035
04340008 ||'                                                            '       00000036
04350008 ||'                                A (ADD)     _ Allows data '         00000037
04360008 ||'for a new distribution to be entered.                 R '           00000038
04370008 ||'(REPLACE) _ Allows the user to replace existing data.       '       00000039
04380008 ||'                  C (COPY)    _ Copies data to a new '              00000040
04390008 ||'distribution for the user to update.         D (DELETE)  _ '        00000041
04400008 ||'Delete the distribution specified.                          '       00000042
04410008 ||'      F (FINISH)  _ Changes are written to a temporary '            00000043
04420008 ||'file.                                                       '       00000044
04430008 ||'                                                Control '           00000045
04440008 ||'returns here.     Please select key PF2 now ....            '       00000046
04450008 ||'                                                            '       00000047
04460008 ||'                              ')),                                  00000048
04470008 3 MENU_BC_02 CHAR(2) INIT('BA'),                                       00000049
04480008 /* CURSOR IS POSITIONED AT ROW  1, COLUMN  1 */                        00000050
04490008 3 MENU_CURSORROW FIXED BIN(15) INIT(01),                               00000051
04500008 3 MENU_CURSORCOL FIXED BIN(15) INIT(01),                               00000052
04510008 3 MENU_IC CHAR(2) INIT('IC'),                                          00000053
04520008 3 MENU_END BIT(8) INIT('11111111'B);                                   00000054
04530008 /* THE ABOVE DECLARATION IS 1942 BYTES LONG */                         00000055
04540009.pa
04550009SAMPLE SCREENS AS INPUT TO PLI3270 (continued)
04560009.sp 2
04570008DECLARES GENERATED FOR "PROD"
04580008.sp 2
04590008 /* THIS DECLARATION WAS GENERATED ON : 79/11/14 */                     00000005
04600008 DCL 1 PROD UNAL,                                                       00000006
04610008 3 PROD_DC CHAR(2) INIT('EW'),                                          00000007
04620008 3 PROD_WCC CHAR(1) INIT('C'),                                          00000008
04630008 3 PROD_BRCS0101 BIT(64) INIT((                                         00000009
04640008                                 '11000010110000010000000000000001'||   00000010
04650008                                 '00000000000000011110001011000110'B)), 00000011
04660008 3 PROD_ATT0101 BIT(8) INIT('11111000'B),                               00000012
04670008 3 PROD_LEN0101 FIXED BIN(15) INIT(0100),                               00000013
04680008 /* FIELD AT ROW  1, COLUMN  1 WITH ATTRIBUTE SYMBOL ^ */               00000014
04690008 3 PROD_FLD0101 CHAR(0100) INIT((                                       00000015
04700008   '   ***************   PRODUCTION LEVELS (mpd)   *************'       00000016
04710008 ||'**                   DISTRIBUTION POINT:')),                        00000017
04720008 3 PROD_BRCS0201 BIT(64) INIT((                                         00000018
04730008                                 '11000010110000010000000000000010'||   00000019
04740008                                 '00000000000101101110001011000110'B)), 00000020
04750008 3 PROD_ATT0201 BIT(8) INIT('11000001'B),                               00000021
04760008 3 PROD_LEN0201 FIXED BIN(15) INIT(0006),                               00000022
04770008 /* FIELD AT ROW  2, COLUMN 22 WITH ATTRIBUTE SYMBOL # */               00000023
04780008 3 PROD_FLD0201 CHAR(0006) INIT((                                       00000024
04790008   '      ')),                                                          00000025
04800008 3 PROD_BRCS0202 BIT(64) INIT((                                         00000026
04810008                                 '11000010110000010000000000000010'||   00000027
04820008                                 '00000000000111011110001011000110'B)), 00000028
04830008 3 PROD_ATT0202 BIT(8) INIT('11111000'B),                               00000029
04840008 3 PROD_LEN0202 FIXED BIN(15) INIT(0028),                               00000030
04850008 /* FIELD AT ROW  2, COLUMN 29 WITH ATTRIBUTE SYMBOL ^ */               00000031
04860008 3 PROD_FLD0202 CHAR(0028) INIT((                                       00000032
04870008   '         ACTION(A/D/C/R/L/F:')),                                    00000033
04880008 3 PROD_BRCS0203 BIT(64) INIT((                                         00000034
04890008                                 '11000010110000010000000000000010'||   00000035
04900008                                 '00000000001110101110001011000110'B)), 00000036
04910008 3 PROD_ATT0203 BIT(8) INIT('11000001'B),                               00000037
04920008 3 PROD_LEN0203 FIXED BIN(15) INIT(0001),                               00000038
04930008 /* FIELD AT ROW  2, COLUMN 58 WITH ATTRIBUTE SYMBOL # */               00000039
04940008 3 PROD_FLD0203 CHAR(0001) INIT((                                       00000040
04950008   ' ')),                                                               00000041
04960008 3 PROD_BRCS0204 BIT(64) INIT((                                         00000042
04970008                                 '11000010110000010000000000000010'||   00000043
04980008                                 '00000000001111001110001011000110'B)), 00000044
04990008 3 PROD_ATT0204 BIT(8) INIT('11111000'B),                               00000045
05000008 3 PROD_LEN0204 FIXED BIN(15) INIT(1623),                               00000046
05010008 /* FIELD AT ROW  2, COLUMN 60 WITH ATTRIBUTE SYMBOL ^ */               00000047
05020008 3 PROD_FLD0204 CHAR(1623) INIT((                                       00000048
05030008   '                                                            '       00000049
05040008 ||'                                                            '       00000050
05050008 ||'                                                            '       00000051
05060008 ||'                                                            '       00000052
05070008 ||'                                                            '       00000053
05080008 ||'                                                            '       00000054
05090008 ||'                                                            '       00000055
05100008 ||'                                                            '       00000056
05110008 ||'                                                            '       00000057
05120008 ||'                                                            '       00000058
05130008 ||'                                                            '       00000059
05140008 ||'                                                            '       00000060
05150008 ||'                                                            '       00000061
05160008 ||'                                                            '       00000062
05170008 ||'                                                            '       00000063
05180008 ||'                                                            '       00000064
05190008 ||'                                                            '       00000065
05200008 ||'                                                            '       00000066
05210008 ||'                                                            '       00000067
05220008 ||'                                                            '       00000068
05230008 ||'                                                            '       00000069
05240008 ||'                                                            '       00000070
05250008 ||'                                                            '       00000071
05260008 ||'                                                            '       00000072
05270008 ||'                                                            '       00000073
05280008 ||'                                                            '       00000074
05290008 ||'                                                            '       00000075
05300008 ||'   ')),                                                             00000076
05310008 3 PROD_BRCS2301 BIT(64) INIT((                                         00000077
05320008                                 '11000010110000010000000000010111'||   00000078
05330008                                 '00000000000001001110001011000110'B)), 00000079
05340008 3 PROD_ATT2301 BIT(8) INIT('11111000'B),                               00000080
05350008 3 PROD_LEN2301 FIXED BIN(15) INIT(0065),                               00000081
05360008 /* FIELD AT ROW 23, COLUMN  4 WITH ATTRIBUTE SYMBOL ^ */               00000082
05370008 3 PROD_FLD2301 CHAR(0065) INIT((                                       00000083
05380008   '                                                            '       00000084
05390008 ||'     ')),                                                           00000085
05400008 3 PROD_BRCS2302 BIT(64) INIT((                                         00000086
05410008                                 '11000010110000010000000000010111'||   00000087
05420008                                 '00000000010001101110001011000110'B)), 00000088
05430008 3 PROD_ATT2302 BIT(8) INIT('11111000'B),                               00000089
05440008 3 PROD_LEN2302 FIXED BIN(15) INIT(0090),                               00000090
05450008 /* FIELD AT ROW 23, COLUMN 70 WITH ATTRIBUTE SYMBOL ^ */               00000091
05460008 3 PROD_FLD2302 CHAR(0090) INIT((                                       00000092
05470008   '                                                            '       00000093
05480008 ||'                              ')),                                  00000094
05490008 3 PROD_BC_03 CHAR(2) INIT('BA'),                                       00000095
05500008 /* CURSOR IS POSITIONED AT ROW  2, COLUMN 23 */                        00000096
05510008 3 PROD_CURSORROW FIXED BIN(15) INIT(02),                               00000097
05520008 3 PROD_CURSORCOL FIXED BIN(15) INIT(23),                               00000098
05530008 3 PROD_IC CHAR(2) INIT('IC'),                                          00000099
05540008 3 PROD_END BIT(8) INIT('11111111'B);                                   00000100
05550008 /* THE ABOVE DECLARATION IS 2002 BYTES LONG */                         00000101
05560011.in
05570011.sp
05580011Usage of these DECLARE statements in a program may be found in the
05590011"WJFS" subroutine documentation.
