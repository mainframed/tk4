UNPACK   CSECT
*/*
*/*     PARAMETERS:   PERIC, PUNPK (POINTER VARIABLES)
*/*                   PASSED THROUGH REGISTER ONE
*/*
R0       EQU   0
R1       EQU   1
R2       EQU   2
ROSTR    EQU   3
RISTR    EQU   4
RLEN     EQU   5
PUNPK    EQU   6
PERIC    EQU   7
RLINK    EQU   8
ROFF     EQU   9
R10      EQU   10
R11      EQU   11
RBEG     EQU   14
         BC    15,12(15)
         DC    X'6',CL7'UNPACK '
         STM   14,12,12(13)
         BAL   14,100(,15)
         USING *,13
         DC    20F'0'
         ST    14,8(,13)
         ST    13,4(,14)
         LR    13,14
         L     PUNPK,4(R1)        ADDR PUNPK
         L     PUNPK,0(PUNPK)     ADDR STRING PREFIX
         L     PERIC,0(R1)        ADDR PERIC
         L     PERIC,0(PERIC)     ADDR STRING PREFIX
         MVC   4(12,PUNPK),4(PERIC) MOVE FIRST PART OF STRING
         LA    ROFF,16            POINTER TO FIRST OFFSET
         LA    RISTR,46(PERIC)    INITIALIZE INPUT STR POINTER
         LA    ROSTR,46(PUNPK)    INITIALIZE OUTPUT STR POINTER
         SLR   R2,R2              INITIALIZE FOR BRANCH
         MVC   16(2,PUNPK),=H'46' SET FIRST OFFSET
LOOP     LH    RLEN,2(ROFF,PERIC) LOAD NEXT FIELD OFFSET
         SH    RLEN,0(ROFF,PERIC) CALCULATE LEN OF INPUT FIELD
         BAL   RLINK,BRTABLE(R2)  LINK TO APPPROPRIATE ROUTINE
         LR    R0,ROSTR           COPY
         SR    R0,PUNPK           CALCULATE CURRENT OUTPUT REC LENGTH
         STH   R0,2(ROFF,PUNPK)   STORE IT AS NEXT OUTPUT FIELD OFFSET
         LA    ROFF,2(ROFF)       INCR OFFSET POINTER
         LA    R2,4(R2)           .
         C     R2,=F'52'          .
         BNH   LOOP               . BRANCH IF NOT ALL FIELDS PROCESSED
         SH    R0,=H'2'           LENGTH DOESN'T INCLUDE PREFIX
         STH   R0,0(PUNPK)        STORE LEN OF OUTPUT STRING FOR PLI
         SH    R0,=H'44'          SUBTRACT 44
         STH   R0,2(PUNPK)        STORE DATA LENGTH IN OUTPUT STRING
         FINISH
*                               FIELD
BRTABLE  B     IGNORE             1 ACCESSION NUMBER
         B     IGNORE             2 CLEARINGHOUSE ACCESSION NUMBER
         B     IGNORE             3 PUBLICATION DATE
         B     IGNORE             4 TITLE
         B     IGNORE             5 AUTHOR
         B     IGNORE             6 DESCRIPTOR
         B     IGNORE             7 IDENTIFIER
         B     PROCESS            8 NOTE
         B     PROCESS            9 ISSUE
         B     PROCESS           10 ABSTRACT
         B     PROCESS           11 AVAILABILITY
         B     IGNORE            12 JOURNAL
         B     IGNORE            13 INSTITUTION
         B     PROCESS           14 SPONSOR
IGNORE   LTR   RLEN,RLEN          TEST FOR ZERO LENGTH
         BER   RLINK              RETURN IF ZERO LEN
         LA    RLEN,255(RLEN)     LOAD LENGTH OF FIELD+255
         LR    R1,RLEN            COPY
         SRL   R1,8               DIVIDE BY 256
         B     *+18               BRANCH TO BCT
         MVC   0(256,ROSTR),0(RISTR) MOVE 256 BYTES
         LA    RISTR,256(RISTR)   INCR INPUT STR POINTER
         LA    ROSTR,256(ROSTR)   INCR OUTPUT STR POINTER
         BCT   R1,*-14            PROCESS NEXT 256 BYTES
         EX    RLEN,MVC           MOVE REMAINING BYTES
         N     RLEN,=X'000000FF'  CLEAR HIGH ORDER BYTES
         LA    RISTR,1(RLEN,RISTR) INCR INPUT STR POINTER
         LA    ROSTR,1(RLEN,ROSTR) INCR OUTPUT STR POINTER
         BR    RLINK
PROCESS  LTR   RLEN,RLEN          TEST FOR ZERO LENGTH
         BER   RLINK              RETURN IF ZERO LEN
         SLR   R0,R0              ZERO FOR DIVIDE
         LR    R1,RLEN            COPY
         D     R0,=F'3'           R1 HOLDS NUMBER OF 24 BIT FIELDS
         LR    RLEN,R1            COPY FOR TR
         SLL   RLEN,2             MULTIPLY BY 4 TO OBTAIN LENGTH OF    -
                                       UNPACKED FIELD FOR TR
         LR    RBEG,ROSTR         COPY FOR TR
         ICM   R10,B'0111',0(RISTR) GRAB 24 BITS
         SRDL  R10,6              SHIFT 6 BITS INTO R12
         SRL   R11,2              SHIFT IN 2 BITS OF ZEROES
         SRDL  R10,6              SAME FOR NEXT BYTE
         SRL   R11,2
         SRDL  R10,6              AND THE NEXT
         SRL   R11,2
         SRDL  R10,6              AND LASTLY
         SRL   R11,2
         ST    R11,0(ROSTR)       STORE UNPACKED WORD
         LA    RISTR,3(RISTR)     INCR INPUT STR POINTER
         LA    ROSTR,4(ROSTR)     INCR OUTPUT STR POINTER
         BCT   R1,*-48            PROCESS ALL 24 BIT FIELDS
         LA    RLEN,255(RLEN)     ADD 255 TO FIELD LENGTH
         LR    R1,RLEN            COPY
         SRL   R1,8               DIVIDE BY 256
         B     *+14               BRANCH TO BCT
         TR    0(256,RBEG),TTABLE TRANSLATE 256 BYTES
         LA    RBEG,256(RBEG)     INCR POINTER
         BCT   R1,*-10            PROCESS NEXT 256 BYTES
         EX    RLEN,TR            TRANSLATE REMAINING BYTES
         BR    RLINK
TTABLE   DC    X'404B4C4D4E505A5B5C5D5E60616B6E6F'
******** DC    C'  ..<<((++&&!!$$**));;--//,,>>??'
         DC    X'7A7D7E7F40C1C2C3C4C5C6C7C8C9D1D2'
******** DC    C'::''==""  AABBCCDDEEFFGGHHIIJJKK'
         DC    X'D3D4D5D6D7D8D9E2E3E4E5E6E7E8E940'
******** DC    C'LLMMNNOOPPQQRRSSTTUUVVWWXXYYZZ  '
         DC    X'F0F1F2F3F4F5F6F7F8F9406C7B7C4040'
******** DC    C'00112233445566778899  %%##@@    '
TR       TR    0(0-0,RBEG),TTABLE    EXECUTED ONLY
MVC      MVC   0(0-0,ROSTR),0(RISTR) EXECUTED ONLY
         END   UNPACK
