         MACRO
&NAME    $MVCL
&NAME    LH    R1,0(RFLD)         LOAD FIELD LENGTH
         LA    R1,255-4(R1)       LOAD LENGTH OF FIELD PROPER+255
         LR    R2,R1              COPY
         SRL   R2,8               DIVIDE BY 256, ROUNDING UP
         B     *+24               BRANCH TO BCT
         MVC   0(256,RCUR2),0(RCUR) MOVE 256 BYTES
         TR    0(256,RCUR2),TRTBLUP CONVERT TO RESTRICTED CHARSET
         LA    RCUR2,256(RCUR2)   BUMP OUTPUT POINTER
         LA    RCUR,256(RCUR)     BUMP INPUT POINTER
         BCT   R2,*-20            PROCESS NEXT 256 BYTES
         EX    R1,MVC             MOVE REMAINING BYTES
         EX    R1,TRUP            CONVERT CHARSET FOR REMAINING BYTES
         N     R1,=X'000000FF'    CLEAR HIGH ORDER BYTES
         LA    RCUR2,1(R1,RCUR2)  BUMP OUTPUT POINTER
         MEND
         SPACE
         MACRO
&NAME    CV68
&NAME    LH    R2,0(RFLD)         LOAD LENGTH OF ORIGINAL FIELD
         BCTR  R2,0               CALCULATE LENGTH OF TEXT+3
         SRL   R2,2               CALCULATE NUMBER OF WORDS
         B     *+16               BRANCH TO ENTRY OF LOOP
         STCM  R1,B'1110',0(RCUR2) TOP OF LOOP--STORE COMPRESSED WORD
         LA    RCUR2,3(RCUR2)     BUMP OUTPUT POINTER
         LA    RCUR,4(RCUR)       BUMP INPUT POINTER
         L     R0,0(RCUR)         INITIAL LOOP ENTRY--LOAD ORIGINAL WD
         SRDL  R0,6               SHIFT 6 BITS INTO R1
         SRL   R0,2               SHIFT OFF 2 BITS OF ZEROES
         SRDL  R0,6               SAME FOR NEXT BYTE
         SRL   R0,2
         SRDL  R0,6
         SRL   R0,2
         SRDL  R0,6               AND SO ON UNTIL 32 BITS ARE IN 14
         BCT   R2,*-44            END OF LOOP--STORE COMPRESSED WORD
         IC    R2,1(RFLD)         PICK UP LOW ORDER BYTE OF LENGTH
         N     R2,=A(3)           CALCULATE LENGTH OF LAST WORD
         SLL   R2,2               MULTIPLY BY 4 TO INDEX MASK TABLE
         N     R1,MASK68(R2)      BLANK EXTRANEOUS COMPRESSED CHAR
         STCM  R1,B'1110',0(RCUR2) STORE LAST WORD
         LA    RCUR2,3(RCUR2)     BUMP OUTPUT POINTER
         MEND
         SPACE
         MACRO
&NAME    TRL68
&NAME    LH    R1,0(RFLD)         LOAD FIELD LENGTH
         LA    R1,255-4(R1)       LOAD LENGTH OF FIELD PROPER+255
         LR    R2,R1              COPY
         SRL   R2,8               DIVIDE BY 256, ROUNDING UP
         B     *+14               BRANCH TO BCT
         TR    0(256,RCUR),TRTBL68 TRANSLATE 256 BYTES
         LA    RCUR,256(RCUR)     BUMP POINTER
         BCT   R2,*-10            PROCESS NEXT 256 BYTES
         EX    R1,TR68            TRANSLATE REMAINING BYTES
         LA    RCUR,4(RFLD)       RESTORE RCUR
         CV68                     COMPRESS AND MOVE TO OUTPUT
         MEND
         SPACE 3
COMPACT  CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
RLINK    EQU   3
RFLD     EQU   4
RCUR     EQU   5
ROUT     EQU   6
RCUR2    EQU   7
         BEGIN
         SLR   R2,R2              CLEAR R2 FOR IC AND TRT
         L     ROUT,4(R1)         LOAD ADDRESS OF OUTPUT RECORD
         LA    ROUT,0(ROUT)       CLEAR HIGH ORDER BYTE
         L     R1,0(R1)           LOAD ADDR OF INPUT RECORD DOPE VECTOR
         L     R1,0(R1)           LOAD ADDRESS OF INPUT RECORD LENGTH
         LA    RFLD,2(R1)         LOAD ADDRESS OF INPUT RECORD
         ST    RFLD,ARCD          SAVE FOR COMPARISONS
         AH    RFLD,0(R1)         CALCULATE ADDRESS OF END OF RECORD
         ST    RFLD,AEND          SAVE FOR COMPARISONS
         XC    0(46,ROUT),0(ROUT) ZERO FIXED FIELDS
         LA    RCUR2,46(ROUT)     POINT TO FIRST OUTPUT FIELD
         BC    15,AROUND          FOR SUPERZAP
         MVI   *-3,X'F0'          FIRST-TIME THROUGH SWITCH
         SPIE
         STAE  0
AROUND   DS    0H
FLDLOOP  L     R1,ARCD            POINT TO FIRST FIELD
         LR    RFLD,R1            ASSUME FIRST FIELD IS MINIMUM
         MVI   CLIFLDID+1,255     STOMP MINIMUM FOR COMPARE TO 255
CLIFLDID CLI   3(R1),*-*          STOMPED--TEST FIELD ID AGAINST       X
                                  TENTATIVE MINIMUM
         BNL   *+14               OK IF NOT LOW
         LR    RFLD,R1            ELSE MAKE THIS TENTATIVE LOW FIELD
         IC    R2,3(R1)           LOAD MINIMUM
         STC   R2,CLIFLDID+1      AND STOMP CLI
         AH    R1,0(R1)           POINT TO NEXT FIELD
         C     R1,AEND            TEST IF AT END OF RECORD
         BL    CLIFLDID           COMPARE FOR MINIMUM IF NOT
         CLI   3(RFLD),X'FF'      TEST IF MINIMUM IS X'FF'
         BE    ONRECEND           ALL FIELDS ARE PROCESSED IF SO
         LA    RCUR,4(RFLD)       POINT TO FIELD PROPER
         IC    R2,3(RFLD)         LOAD FIELD ID
         IC    R2,BROFFSET(R2)    LOAD OFFSET INTO BRANCH TABLE
         L     RLINK,BRTABLE(R2)  LOAD ADDRESS OF CORRESPONDING ROUTINE
         IC    R2,BRTABLE(R2)     LOAD OFFSET OF NEW FIELD DESCRIPTOR
         SLR   RCUR2,ROUT         CALCULATE OFFSET OF NEW FIELD
         STH   RCUR2,16(R2,ROUT)  STORE IN NEW FIELD DESCRIPTOR
         ALR   RCUR2,ROUT         RESTORE RCUR2
         BAL   RLINK,0(RLINK)     LINK TO APPROPRIATE ROUTINE
         MVI   3(RFLD),X'FF'      FLAG FIELD AS PROCESSED
         B     FLDLOOP            PROCESS NEXT FIELD
         SPACE 3
ONRECEND SR    RCUR2,ROUT         CALCULATE OUTPUT RECORD LENGTH
         STH   RCUR2,44(ROUT)     SET END SLOT
         LR    R0,RCUR2           COPY OFFSET
         SH    R0,=H'2'           GET RECORD LENGTH AS VARYING CHAR STR
         STH   R0,0(ROUT)         SET PL/I RECORD STRING LENGTH
         SH    R0,=H'44'          GET DATA PORTION STRING LENGTH
         STH   R0,2(ROUT)         SET PL/I REFER LENGTH
         LR    R1,RCUR2           COPY TO FILL IN UNUSED FIELD OFFSETS
         SLR   R0,R0              ZERO FOR COMPARISONS
         LA    R2,44-16           SET INDEX AND BCT REGISTER
TESTZERO CH    R0,14(R2,ROUT)     TEST IF FIELD UNUSED
         BE    *+8                IF SO SET FIELD STARTING ADDRESS     X
                                  TO THAT OF NEXT FIELD USED
         LH    R1,14(R2,ROUT)     ELSE THIS BECOMES LAST USED FIELD
         STH   R1,14(R2,ROUT)     RESET STARTING ADDRESS OF THIS FIELD
         BCTR  R2,0               SUBTRACT 1 FROM R2
         BCT   R2,TESTZERO        BACK OFF ONE MORE AND PROCESS        X
                                  PRECEEDING FIELD
         FINISH
         SPACE 3
ARCD     DC    A(0)
AEND     DC    A(0)
BROFFSET DC    X'000408FFFFFFFFFFFFFFFFFFFFFFFFFF'
         DC    X'0C10146818FFFF1CFFFF202428FFFFFF'
         DC    X'2CFFFF3034383C6C70FFFF4044484C50'
         DC    X'54585CFFFFFFFFFFFFFFFFFFFFFFFFFF'
         DC   4X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
         DC    X'60FFFFFF64FFFFFFFFFFFFFFFFFFFFFF'
         DC   7X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
BRTABLE  DS    0F
         DC    AL1(28),AL3(FMT00) SEQUENCE CODE
         DC    AL1(28),AL3(FMT01) ADD DATE
         DC    AL1(28),AL3(FMT02) CHANGE DATE
         DC    AL1(00),AL3(FMT10) ACCESSION NUMBER
         DC    AL1(02),AL3(FMT11) CLEARINGHOUSE ACCESSION NUMBER
         DC    AL1(28),AL3(FMT12) OTHER ACCESSION NUMBER
         DC    AL1(28),AL3(FMT14) PROGRAM AREA
         DC    AL1(04),AL3(FMT17) PUBLICATION DATE
         DC    AL1(06),AL3(FMT1A) TITLE
         DC    AL1(08),AL3(FMT1B) PERSONAL AUTHOR
         DC    AL1(28),AL3(FMT1C) INSTITUTION CODE
         DC    AL1(28),AL3(FMT20) SPONSORING AGENCY CODE
         DC    AL1(10),AL3(FMT23) DESCRIPTOR
         DC    AL1(12),AL3(FMT24) IDENTIFIER
         DC    AL1(28),AL3(FMT25) EDRS PRICE
         DC    AL1(14),AL3(FMT26) DESCRIPTIVE NOTE
         DC    AL1(16),AL3(FMT2B) ISSUE
         DC    AL1(18),AL3(FMT2C) ABSTRACT/ANNOTATION
         DC    AL1(28),AL3(FMT2D) REPORT NUMBER
         DC    AL1(28),AL3(FMT2E) CONTRACT NUMBER
         DC    AL1(28),AL3(FMT2F) GRANT NUMBER
         DC    AL1(28),AL3(FMT30) BUREAU NUMBER
         DC    AL1(20),AL3(FMT31) AVAILABILITY
         DC    AL1(22),AL3(FMT32) JOURNAL CITATION
         DC    AL1(24),AL3(FMT80) INSTITUTION NAME
         DC    AL1(26),AL3(FMT84) SPONSORING AGENCY NAME
         DC    AL1(28),AL3(FMT13) PUBLICATION TYPE
         DC    AL1(28),AL3(FMT27) PAGE
         DC    AL1(28),AL3(FMT28) LEVEL
         SPACE 3
         SPACE 3
         SPACE 3
FMT00    EQU   *                  SKIP SEQUENCE CODE
FMT01    EQU   *                  SKIP ADD DATE
FMT02    EQU   *                  SKIP CHANGE DATE
FMT12    EQU   *                  SKIP OTHER ACCESSION NUMBER
FMT13    EQU   *                  SKIP PUBLICATION TYPE
FMT14    EQU   *                  SKIP PROGRAM AREA
FMT1C    EQU   *                  SKIP INSTITUTION CODE
FMT20    EQU   *                  SKIP SPONSORING AGENCY CODE
FMT25    EQU   *                  SKIP EDRS PRICE
FMT27    EQU   *                  SKIP PAGE
FMT28    EQU   *                  SKIP LEVEL
FMT2D    EQU   *                  SKIP REPORT NUMBER
FMT2E    EQU   *                  SKIP CONTRACT NUMBER
FMT2F    EQU   *                  SKIP GRANT NUMBER
FMT30    EQU   *                  SKIP BUREAU NUMBER
         BR    RLINK              RETURN
         SPACE 3
FMT10    EQU   *                  COPY ACCESSION NUMBER
FMT11    EQU   *                  COPY CLEARINGHOUSE ACCESSION NUMBER
FMT17    EQU   *                  COPY PUBLICATION DATE /* TEMP */
FMT1A    EQU   *                  COPY TITLE
FMT1B    EQU   *                  COPY AUTHOR
FMT23    EQU   *                  COPY DESCRIPTORS
FMT24    EQU   *                  COPY IDENTIFIERS
FMT32    EQU   *                  COPY JOURNAL CITATION
FMT80    EQU   *                  COPY INSTITUTION NAME
         $MVCL                    COPY FIELD
         BR    RLINK              RETURN
         SPACE 3
FMT26    EQU   *                  COMPRESS DESCRIPTIVE NOTE
FMT2B    EQU   *                  COMPRESS ISSUE
FMT2C    EQU   *                  COMPRESS ABSTRACT/ANNOTATION
FMT31    EQU   *                  COMPRESS AVAILABILITY
FMT84    EQU   *                  COMPRESS SPONSORING AGENCY NAME
         TRL68                    COMPRESS FIELD
         BR    RLINK              RETURN
         SPACE 3
MASK68   DC    0F'0',X'FFFFFF00FC000000FFF00000FFFFC000'
TRTBL68  DS    0D,0CL256
******** DC   4C'                                '
         DC   4X'00000000000000000000000000000000'
******** DC    C'                      ..<<((++  '
         DC    X'00000000000000000000000102030400'
******** DC    C'&&                  !!$$**));;  '
         DC    X'05000000000000000000060708090A00'
******** DC    C'--//                  ,,%%  >>??'
         DC    X'0B0C0000000000000000000D3B000E0F'
******** DC    C'                    ::##@@''==""'
         DC    X'00000000000000000000103C3D111213'
******** DC    C'  AABBCCDDEEFFGGHHII            '
         DC    X'0015161718191A1B1C1D000000000000'
******** DC    C'  JJKKLLMMNNOOPPQQRR            '
         DC    X'001E1F20212223242526000000000000'
******** DC    C'    SSTTUUVVWWXXYYZZ      ((    '
         DC    X'00002728292A2B2C2D2E000000030000'
******** DC    C'                          ))    '
         DC    X'00000000000000000000000000090000'
******** DC    C'  AABBCCDDEEFFGGHHII            '
         DC    X'0015161718191A1B1C1D000000000000'
******** DC    C'  JJKKLLMMNNOOPPQQRR            '
         DC    X'001E1F20212223242526000000000000'
******** DC    C'    SSTTUUVVWWXXYYZZ            '
         DC    X'00002728292A2B2C2D2E000000000000'
******** DC    C'00112233445566778899            '
         DC    X'30313233343536373839000000000000'
         SPACE 3
         PRINT DATA
TRTBLUP  DS    0D,0CL256
         DC   4CL16'                '
         DC    CL16'           .<(+ '
         DC    CL16'&&         @$*); '
         DC    CL16'-/         ,% >?'
         DC    CL16'          :#@''="'
         DC    CL16' ABCDEFGHI'
         DC    CL16' JKLMNOPQR'
         DC    CL16'  STUVWXYZ   (  '
         DC    CL16'             )  '
         DC    CL16' ABCDEFGHI'
         DC    CL16' JKLMNOPQR'
         DC    CL16'  STUVWXYZ'
         DC    CL16'0123456789'
         SPACE 3
TR68     TR    0(*-*,RCUR),TRTBL68 EXECUTED ONLY
TRUP     TR    0(*-*,RCUR2),TRTBLUP EXECUTED ONLY
MVC      MVC   0(0-0,RCUR2),0(RCUR) EXECUTED ONLY
         END
