SPDSGET  START 0
*
**************************************************
*                                                *
* FUNCTION - READ A PARTIONED DATA SET DIRECTORY *
*   OBTAINING MEMBER NAME AND TTR.  USING TTR,   *
*   FIND AND READ EACH MEMBER RETURNING TO THE   *
*   CALLING PROGRAM THE MEMBER NAME AND THE      *
*   ADDRESS OF A RECORD.                         *
*                                                *
**************************************************
*                                                *
*  PARAMETERS COMING IN SHOULD BE:               *
*    FOR PLI - NAME FIELD,LINE FIELD, I.E.,      *
*              CALL SPDSGET(NAME,LINE)           *
*    FOR ASSEMBLER - R1 SHOULD BE THE ADDRESS OF *
*              TWO FULLWORDS. THEY SHOULD BE THE *
*              ADDRESSES OF THE ADDRESSES OF     *
*              THE NAME AREA AND THE LINE AREA.  *
*              EX.          LA    R1,PARMS       *
*                           CALL  SPDSGET        *
*                           .                    *
*                           .                    *
*                  PARMS    DS    0F             *
*                  PARM1    DC    A(ADNAME)      *
*                  PARM2    DC    A(ADLINE)      *
*                           .                    *
*                  ADNAME   DC    A(NAME)        *
*                  ADLINE   DC    A(LINE)        *
*                           .                    *
*                  NAME     DS    CL8            *
*                  LINE     DS    CL80           *
*                                                *
* NOTE: IF THE MEMBER FIELD IS NON-BLANK AND NON-*
*       ZERO ON THE FIRST CALL, SPDSGET WILL SCAN*
*       THE DIRECTORY FOR THAT MEMBER AND START  *
*       PASSING BACK RECORDS BEGINNING WITH THAT *
*       MEMBER.                                  *
*       ALSO, IF THE 1ST 6 CHARACTERS IN THE LINE*
*       ARE '$INGLE' SPDSGET WILL PASS THE SAME  *
*       STRING BACK IN THE LINE   FIELD ON THE   *
*       1ST CALL AFTER THE LAST RECORD OF A      *
*       MEMBER IS RETURNED.                      *
*                                                *
**************************************************
*                                                *
* INPUT - DIRECTORY:                             *
*   ___________________________________________  *
*   × BYTES × ENT. × ENT. × ENT. × ... × ENT. ×  *
*   × USED  ×  A   ×  B   ×  C   × ... ×  N   ×  *
*   -------------------------------------------  *
*   ---2----/---------------254------------BYTES *
*                                                *
*                                                *
*         ENTRY:                                 *
*   -------------------------------------------- *
*   × MEM. × TTR × C × TTRN ×  TTRN × OPTIONAL × *
*   × NAME ×(PTR)×   ×  (2) ×   (2) ×          × *
*   -------------------------------------------- *
*   ---8---/--3--/-1-/-------MAX 62--------BYTES *
*                                                *
*   NAME - UP TO 8 CHARACTERS IN LENGTH.         *
*   TTR  - POINTER TO 1ST BLOCK OF THE MEMBER.   *
*          TT - RELATIVE TRACK FROM BEGINNING OF *
*               DATA SET.                        *
*          R  - RELATIVE BLOCK NUMBER ON THAT    *
*               TRACK.                           *
*   C    - NUMBER OF HALFWORDS CONTAINED IN USER *
*          DATA FIELD (LAST 5 BITS).             *
*   TTRN - USER DATA.                            *
*          TT - RELATIVE TRACK ADDRESS.          *
*          R  - RELATIVE BLOCK NUMBER ON THAT    *
*               TRACK.                           *
*          N  - NUMBER OF ADDITIONAL POINTERS.   *
*                                                *
**************************************************
*
*
**************************************************
*                                                *
*  REGISTER EQUATES.                             *
*                                                *
**************************************************
*
R0       EQU   0
R1       EQU   1
R2       EQU   2             POSITION WITHIN 254 BYTE BLOCK.
R3       EQU   3             ADDRESS OF MEMBER NAME.
R4       EQU   4
R5       EQU   5
R6       EQU   6             BLOCK LENGTH.
R7       EQU   7             WORK REGISTER.
R8       EQU   8             RECORD POINTER.
R9       EQU   9             ADDRESS OF MEMBER NAME (PARAMETER).
R10      EQU   10            ADDRESS OF RECORD (PARAMETER).
R11      EQU   11            ADDRESS OF 256 BYTE BLOCK.
R12      EQU   12            BASE REGISTER.
R13      EQU   13
R14      EQU   14            LINKAGE CONVENTION REGISTER.
$14      EQU   14            LINKAGE CONVENTION REGISTER.
R15      EQU   15            LINKAGE CONVENTION REGISTER.
*
**************************************************
*                                                *
*  CONSTANTS.                                    *
*                                                *
**************************************************
*
DCBOFLGS EQU   X'30'
OPENFLAG EQU   X'10'
DCBBLKSI EQU   X'3E'
*
         PRINTOPT
*
         SAVE  (14,12)
         BALR  12,0          STANDARD
         USING *,12           ENTRY
         ST    13,SAVEREGS+4   LINKAGE.
         LA    15,SAVEREGS
         ST    15,8(13)
         LR    13,15
                                                           PRINT NOGEN
         LM    R9,R10,0(1)                       GET PARAMETERS.
         L     R9,0(R9)
         L     R10,0(R10)
         USING ENTRY,R3                          BEGINNING OF ENTRY.
         IF (TM,WKFLAG,WKFCLNUP),OFF,THEN
           IF (TM,PDSDCB+DCBOFLGS,OPENFLAG),OFF,THEN
             DO INITS
           ENDIF
           NI    WKIND,X'FF'-WKIEOMEM
                                                           SPACE 1
           WHILE ((TM,WKFLAG,WKFCLNUP),OFF),AND
           WHILE ((TM,WKIND,WKIEOMEM),OFF),AND
           WHILE ((TM,WKFLAG,WKFGTREC),OFF),DO
                                                           SPACE 1
             IF (TM,WKFLAG,WKFRDDIR),ON,THEN
               DO    READDIR
             ENDIF
                                                           SPACE 1
             IF (TM,WKFLAG,WKFNXMEM),ON,THEN
               DO    NEXTMEM
             ENDIF
                                                           SPACE 1
             IF (TM,WKFLAG,WKFMEMOK),ON,THEN
               DO    MEMOK
             ENDIF
                                                           SPACE 1
             IF (TM,WKFLAG,WKFFDTTR),ON,THEN
               DO    FINDTTR
             ENDIF
                                                           SPACE 1
             IF (TM,WKFLAG,WKFRDBLK),ON,THEN
               DO    READBLK
             ENDIF
                                                           SPACE 1
             IF (TM,WKFLAG,WKFMEMOK),OFF,AND
             IF (TM,WKFLAG,WKFNXMEM),OFF,AND
             IF (TM,WKFLAG,WKFRDDIR),OFF,AND
             IF (TM,WKFLAG,WKFFDTTR),OFF,THEN
               OI    WKFLAG,WKFGTREC
             ELSE
               NI    WKFLAG,X'FF'-WKFGTREC
             ENDIF
           ENDDO
                                                           SPACE 1
           IF (TM,WKFLAG,WKFCLNUP),OFF,AND
           IF (TM,WKFLAG,WKFGTREC),ON,THEN
             DO    GETREC
           ENDIF
                                                           SPACE 1
           IF (TM,WKFLAG,WKFCLNUP),ON,THEN
             DO    CLNUP
           ENDIF
         ELSE
           MVC   0(8,R9),FOXES
         ENDIF
                                                           SPACE 1
         OI    WKIND,WKICALL1
         L     13,SAVEREGS+4                     STANDARD
         RETURN (14,12)                           EXIT LINKAGE.
         TITLE ' CLNUP SEG '
*******************************************************************
*                                                                 *
*        CLNUP SEG                                                *
*                                                                 *
*******************************************************************
                                                           SPACE 1
         BGNSEG CLNUP,,*
*         WTO   'CLNUP'
                                                           SPACE 1
           CLOSE (DIRDCB),MF=(E,CLOSE1)            YES, CLOSE FILES.
           CLOSE (PDSDCB),MF=(E,CLOSE2)
           LH    R6,BLKSIZE                        GET BLKSIZE.
           L     R8,STORADDR                       GET ADDR OF STOR.
           FREEMAIN R,LV=(R6),A=(R8)               FREE STORAGE.
           MVC   0(8,R9),FOXES                     PASS MEMBER NAME.
                                                           SPACE 1
         ENDSEG CLNUP
         TITLE ' INITSEG SEG '
*******************************************************************
*                                                                 *
*        INITSEG SEG                                              *
*                                                                 *
*******************************************************************
                                                           SPACE 1
         BGNSEG INITS,,*
                                                           SPACE 1
         OPEN  (DIRDCB,INPUT),MF=(E,OPEN1)
         OPEN  (PDSDCB,INPUT),MF=(E,OPEN2)
                                                           SPACE 1
         LH    R6,PDSDCB+DCBBLKSI                BLKSIZE.
         GETMAIN R,LV=(R6)                       ADDR OF STORAGE IN R1.
         STH   R6,BLKSIZE                        SAVE BLKSIZE.
         LR    R8,R1                             RECORD POINTER.
         ST    R1,STORADDR                       SAVE ADDR OF STORAGE.
         ST    R8,BLKPTR                         SAVE BLOCK POINTER.
                                                           SPACE 1
         IF (CLC,0(6,R10),SINGLE),EQ,THEN
           OI    WKIND,WKISINGL
         ENDIF
                                                           SPACE 1
         OI    WKFLAG,WKFRDDIR+WKFFDTTR+WKFRDBLK
                                                           SPACE 1
         ENDSEG INITS
         TITLE ' GETREC SEG '
*******************************************************************
*                                                                 *
*        GETREC SEG                                               *
*                                                                 *
*******************************************************************
                                                           SPACE 1
         BGNSEG GETREC,,*
                                                           SPACE 1
         NI    WKFLAG,X'FF'-WKFGTREC
         L     R2,POSITION                       POS WITHIN DIR BLOCK.
         L     R3,DIRPTR                         ADDR OF MEMBER NAME.
         L     R8,BLKPTR                         RECORD POINTER.
         LA    R11,BUFFR                         ADDRESS OF BUFFR.
         LH    R6,BLKLEN                         BLOCK LENGTH.
         MVC   0(8,R9),NAME                      PASS MEMBER NAME.
         MVC   0(80,R10),0(R8)                   PASS A RECORD.
**        SCWTO ' ',NAME=:GETREC,TIME=NO,RC=(R6)
                                                           SPACE 1
         AH    R8,HW80                           BUMP TO NEXT RECORD.
         SH    R6,HW80                           SUBT RECORD LENGTH.
                                                           SPACE 1
                                                           SPACE 1
         IF (CH,R6,HW0),EQ,THEN                 LAST RECORD PROCESSED?
           LH    R6,BLKSIZE                        YES, GET BLKSIZE.
           L     R8,STORADDR                       RESET R8 WITH ADDR.
           ST    R8,BLKPTR                         SAVE BLOCK POINTER.
           OI    WKFLAG,WKFRDBLK
         ENDIF
         ST    R8,BLKPTR                         SAVE BLOCK POINTER.
         STH   R6,BLKLEN                         SAVE BLOCK LENGTH.
                                                           SPACE 1
         ENDSEG GETREC
         TITLE ' READDIR SEG '
*******************************************************************
*                                                                 *
*        READDIR SEG                                              *
*                                                                 *
*******************************************************************
                                                           SPACE 1
         BGNSEG READDIR,,*
*         WTO   'READDIR'
                                                           SPACE 1
         NI    WKFLAG,X'FF'-WKFRDDIR
         READ  DECB1,SF,DIRDCB,BUFFR,'S',MF=E    READ DIRECTORY BLOCK.
         CHECK DECB1
         LA    R2,2                              RESET POSITION TO 2.
         ST    R2,POSITION                       POS WITHIN DIR BLK.
         LA    R11,BUFFR                         ADDRESS OF WORK AREA.
         USING BLOCK,R11
         LA    R3,BYTES                          ADDR OF MEMBER NAME.
         ST    R3,DIRPTR                         SAVE DIRECTORY PTR.
                                                           SPACE 1
         OI    WKFLAG,WKFMEMOK
         NI    WKFLAG,X'FF'-WKFNXMEM
                                                           SPACE 1
         ENDSEG READDIR
         TITLE ' FINDTTR SEG '
*******************************************************************
*                                                                 *
*        FINDTTR SEG                                              *
*                                                                 *
*******************************************************************
                                                           SPACE 1
         BGNSEG FINDTTR,,*
*         WTO   'FINDTTR'
                                                           SPACE 1
         NI    WKFLAG,X'FF'-WKFFDTTR
         MVC   ADJTTR,TTR                        MOVE TTR TO A FULLWD
         FIND  PDSDCB,ADJTTR,C                   FIND TYPE C.
         OI    WKFLAG,WKFRDBLK
                                                           SPACE 1
         ENDSEG FINDTTR
         TITLE ' READBLK SEG '
*******************************************************************
*                                                                 *
*        READBLK SEG                                              *
*                                                                 *
*******************************************************************
                                                           SPACE 1
         BGNSEG READBLK,,*
*         WTO   'READBLK'
                                                           SPACE 1
         NI    WKFLAG,X'FF'-WKFRDBLK
         LA    R1,EODRET
         ST    R1,EODR14
         L     R8,STORADDR                       RESET R8 WITH ADDR.
         READ  DECB2,SF,PDSDCB,(R8),'S',MF=E     READ A BLOCK.
         CHECK DECB2
                                                           SPACE 1
EODRET   EQU   *
         IF (TM,WKFLAG,WKFEOD),OFF,THEN
           L     R7,DECB2+16                       IOB ADDRESS.
           LH    R6,BLKSIZE                        BLOCK LENGTH.
           SH    R6,14(R7)                         BLOCK LENGTH.
           STH   R6,BLKLEN                         SAVE BLOCK LENGTH.
           OI    WKFLAG,WKFGTREC
         ELSE
           OI    WKFLAG,WKFNXMEM
           NI    WKFLAG,X'FF'-WKFGTREC
           NI    WKFLAG,X'FF'-WKFEOD
         ENDIF
                                                           SPACE 1
         ENDSEG READBLK
         TITLE ' NEXTMEM SEG '
*******************************************************************
*                                                                 *
*        NEXTMEM SEG                                              *
*                                                                 *
*******************************************************************
                                                           SPACE 1
         BGNSEG NEXTMEM,,*
*         WTO   'NEXTMEM'
                                                           SPACE 1
         NI    WKFLAG,X'FF'-WKFNXMEM             CLEAR REG 7.
         L     R2,POSITION                       POS WITHIN DIR BLOCK.
         L     R3,DIRPTR                         BUMP R3 TO NEXT MBR.
         LA    R11,BUFFR
         SLR   R7,R7                             CLEAR REG 7.
         IC    R7,B3BWDS                         NO. HALFWDS USER DATA.
         N     R7,=X'0000001F'                   TURN OFF 1ST 3 BITS.
         AR    R7,R7                             NUMBER OF BYTES.
         AH    R7,=H'12'                         ADD 12.
         AR    R2,R7                             POS. + NO. OF BYTES.
         ST    R2,POSITION                       POS WITHIN DIR BLK.
                                                           SPACE 1
         IF (CH,R2,USED),GE,THEN                 END OF DIR BLOCK?
           OI    WKFLAG,WKFRDDIR                   YES, READ NXT BLOCK.
         ELSE                                    END.
           OI    WKFLAG,WKFMEMOK                   NO, FIND TTR
         ENDIF                                   END.
                                                           SPACE 1
         AR    R3,R7                             BUMP R3 TO NEXT MBR.
         ST    R3,DIRPTR                         SAVE DIRECTORY PTR.
                                                           SPACE 1
         ENDSEG NEXTMEM
         TITLE ' MEMOK SEG '
*******************************************************************
*                                                                 *
*        MEMOK SEG                                                *
*                                                                 *
*******************************************************************
                                                           SPACE 1
         BGNSEG MEMOK,,*
*         WTO   'MEMOK'
                                                           SPACE 1
         NI    WKFLAG,X'FF'-WKFMEMOK
         L     R3,DIRPTR
         IF (CLC,NAME,FOXES),EQ,THEN  IS IT LAST MEMBER?
           MVC   0(8,R9),FOXES
           OI    WKFLAG,WKFCLNUP
           NI    WKFLAG,X'FF'-WKFGTREC-WKFRDBLK-WKFFDTTR
         ELSE
           IF (TM,WKIND,WKICALL1),OFF,THEN
*             MVC   WTO2+8(8),NAME
*             MVC   WTO2+17(8),0(R9)
*WTO2         WTO '                 '
             IF (CLC,NAME,0(R9)),LT,THEN
               OI    WKFLAG,WKFNXMEM
               NI    WKFLAG,X'FF'-WKFFDTTR-WKFRDBLK-WKFGTREC
             ELSE
               OI    WKFLAG,WKFFDTTR
             ENDIF
           ELSE
*             MVC   WTO+8(8),NAME
*             MVC   WTO+17(8),0(R9)
*WTO          WTO '                 '
             IF (CLC,NAME,0(R9)),NE,AND
             IF (TM,WKIND,WKISINGL),ON,THEN
               IF (CLC,NAME,0(R9)),GT,THEN
                 OI    WKIND,WKIEOMEM
                 OI    WKFLAG,WKFMEMOK
                 NI    WKFLAG,X'FF'-WKFNXMEM
                 NI    WKFLAG,X'FF'-WKFFDTTR-WKFRDBLK-WKFGTREC
                 MVC   0(6,R10),SINGLE
*                 WTO '$$$INGLEEE'
               ELSE
                 OI    WKFLAG,WKFNXMEM
                 NI    WKFLAG,X'FF'-WKFFDTTR-WKFRDBLK-WKFGTREC
               ENDIF
             ELSE
               OI    WKFLAG,WKFFDTTR
               NI    WKFLAG,X'FF'-WKFRDBLK-WKFGTREC
             ENDIF
           ENDIF
         ENDIF
                                                           SPACE 1
         ENDSEG MEMOK
         TITLE ' EOD EXIT FOR READBLK'
EOD      EQU   *
         OI    WKFLAG,WKFEOD
         L     R14,EODR14
         BR    R14
                                                           EJECT
**************************************************
*                                                *
*  STORAGE CONSTANTS.                            *
*                                                *
**************************************************
*
BUFFR    DS    CL256
SAVEREGS DC    18F'0'
BLANKS   DC    CL8' '
ZEROES   DC    2F'0'
FOXES    DC    16XL1'FF'
HW0      DC    H'0'
HW80     DC    H'80'
BLKSIZE  DS    H
BLKLEN   DS    H
STORADDR DS    F
DIRPTR   DS    F
BLKPTR   DS    F
POSITION DS    F
EODR14   DS    F
ADJTTR   DC    HL3'000000',HL1'00'
SINGLE   DC    CL8'$INGLE'
WKIND    DC    X'00'
WKICALL1 EQU   X'80'
WKISINGL EQU   X'40'
WKIEOMEM EQU   X'20'
WKFLAG   DC    X'00'
WKFEOD   EQU   X'80'
WKFCLNUP EQU   X'40'
WKFRDDIR EQU   X'20'
WKFFDTTR EQU   X'10'
WKFRDBLK EQU   X'08'
WKFGTREC EQU   X'04'
WKFNXMEM EQU   X'02'
WKFMEMOK EQU   X'01'
*
**************************************************
*                                                *
*  OPEN, CLOSE, READ, AND DCB.                   *
*                                                *
**************************************************
*
OPEN1    OPEN  (DIRDCB,INPUT),MF=L
OPEN2    OPEN  (PDSDCB,INPUT),MF=L
*
CLOSE1   CLOSE (DIRDCB),MF=L
CLOSE2   CLOSE (PDSDCB),MF=L
*
         READ  DECB1,SF,MF=L
         READ  DECB2,SF,MF=L
*
DIRDCB   DCB   DSORG=PS,MACRF=(R),DDNAME=PDSDIR,DEVD=DA,LRECL=256,     X
               BLKSIZE=256,RECFM=F
*
FILLER   DC    50F'0'
*
PDSDCB   DCB  MACRF=(R),DSORG=PO,DDNAME=PDSENTRY,DEVD=DA,EODAD=EOD
*
         SEGSAVE
*
**************************************************
*                                                *
*  DSECTS.                                       *
*                                                *
**************************************************
*
BLOCK    DSECT
USED     DS    H
BYTES    DS    254CL1
*
ENTRY    DSECT
NAME     DS    CL8
TTR      DS    CL3
B3BWDS   DS    CL1
DATA     DS    CL20
*
         END
