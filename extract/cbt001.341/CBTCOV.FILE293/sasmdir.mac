SASMDIR   CSECT
DRCT     TITLE 'SUBROUTINE FOR PL/I PROGRAMS TO DO POINT/READS '
*******************************************************************
*                                                                 *
*                     PROGRAM DOCUMENTATION                       *
*                                                                 *
*******************************************************************
*                                                                 *
*  PROGRAM NAME:  SASMDIR - POINTS/READS OS DATASETS FOR PL/I     *
*                 PROGRAMS                                        *
*                                                                 *
*******************************************************************
*                                                                 *
*  PROGRAMMER  :  STEPHEN M. BEASLEY, SYSTEMS ANALYST I           *
*                 DEPARTMENT 272,  SOUTHERN COMPANY SERVICES      *
*                 JUNE, 1983.                                     *
*                                                                 *
*******************************************************************
*                                                                 *
*  FUNCTION    :  THE FUNCTION OF THIS PROGRAM IS TO BUILD A DCB  *
*                 OPEN IT, AND READ A SPECIFIC BLOCK INTO A DATA  *
*                 AREA, ALL AS INDICATED BY PARMS PASSED BY A PLI *
*                 PROGRAM.                                        *
*                                                                 *
*                 TYPICAL CALL SEQUENCE FROM PL/I:                *
*                                                                 *
*                  DCL REL_BLOCK FIXED BIN(31) INIT(0);           *
*                  DCL BLK_SIZE  FIXED BIN(31) INIT(256);         *
*                  DCL DDNAME    CHAR(8)       INIT('SYSUT1');    *
*                  DCL BUFFER    CHAR(256)     INIT(' ');         *
*                  ...                                            *
*                  REL_BLOCK = 202;                               *
*                  CALL SASMDIR(REL_BLOCK,BLK_SIZE,DDNAME,BUFFER;)*
*                  ...                                            *
*                                                                 *
*******************************************************************
*                                                                 *
*  USAGE       :  AS FOLLOWS                                      *
*                                                                 *
*    A.  ENTRY - 'BEGIN' MACRO USED TO GENERATE ENTRY CODE        *
*                                                                 *
*    B.  ASSOCIATED ROUTINES - NONE                               *
*                                                                 *
*    C.  REFERENCES - NONE                                        *
*                                                                 *
*    D.  INPUT PARAMETERS - SEE ABOVE DESCRIPTION.                *
*                                                                 *
*    E.  OUTPUTS - DATA INTO BUFFER                               *
*                                                                 *
*    F.  EXIT - 'CLEANUP' MACRO USED                              *
*                                                                 *
*    G.  ERROR CONDITIONS - SEE ERENT GROUP                       *
*                                                                 *
*    H.  SVC USAGE -   GETMAIN,FREEMAIN                           *
*                                                                 *
*******************************************************************
                                                           EJECT
*******************************************************************
*                                                                 *
*    I.  REGISTER USAGE - AS FOLLOWS                              *
*             REGISTER 0  -  I/O USAGE                            *
*             REGISTER 1  -  I/O USAGE                            *
*             REGISTER 2  -  PARMS FOR BEGIN MACRO, WORK          *
*             REGISTER 3  -  NOT USED                             *
*             REGISTER 4  -  WORK                                 *
*             REGISTER 5  -  WORK                                 *
*             REGISTER 6  -  ADDR OF BUFFER                       *
*             REGISTER 7  -  ADDR OF DDNAME                       *
*             REGISTER 8  -  BLOCK SIZE                           *
*             REGISTER 9  -  RELATIVE BLOCK TO READ               *
*             REGISTER 10 -  NOT USED                             *
*             REGISTER 11 -  BASE FOR WORKAREA                    *
*             REGISTER 12 -  BASE FOR PROGRAM                     *
*             REGISTER 13 -  SAVE AREA POINTER                    *
*             REGISTER 14 -  LINKAGE REGISTER                     *
*             REGISTER 15 -  LINKAGE REGISTER                     *
*                                                                 *
*             FLOATREG 0  -  NOT USED                             *
*             FLOATREG 2  -  NOT USED                             *
*             FLOATREG 4  -  NOT USED                             *
*             FLOATREG 6  -  NOT USED                             *
*                                                                 *
*    J.  LINKEDIT STRUCTURE:                                      *
*            INCLUDE TXTLIB(SASMDIR)                              *
*               ENTRY  SASMDIR                                    *
*                  NAME SASMDIR(R)                                *
*                                                                 *
*    K.  LOGIC FLOW:                                              *
*           I. INITIALIZATION                                     *
*          II. BUILD DCB FROM PARMS                               *
*         III. OPEN, POINT, READ, AND CLOSE DCB.                  *
*          IV. EXIT                                               *
*                                                                 *
*******************************************************************
         TITLE 'MAINTENANCE RECORD'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
*             M A I N T E N A N C E      R E C O R D              *
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
* V377. BEASLEY.  7/26/84.× ADDED CODE FOR CHAINED SCHEDULING.    *
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
         TITLE 'ENTRY CODE'
         BEGIN CSECT=SASMDIR,     CSECT NAME                           *
               PARM=(R2),         PARAMETER REGISTER                   *
               STORAGE=WORKLNGT,  WORK STORAGE AMOUNT                  *
               WKBASE=(R11),      WORK STORAGE BASE                    *
               WKDSECT=WORKAREA,  WORK STORAGE DSECT                   *
               CLEAR=YES          CLEAR WORKAREA
         TITLE ' PROGRAM INITIALIZATION '
*************************************************************
*                                                           *
*        PROGRAM INITIALIZATION AND POINT                   *
*                                                           *
*************************************************************
                                                           SPACE 1
         USING PL1PARMS,R2
         L    R9,LISTRELB         ADDR OF RELATIVE BLOCK TO READ
         L    R9,0(,R9)
         L    R8,BLKSIZE          ADDR OF BLOCK SIZE
         L    R8,0(,R8)
         L    R7,DDNAME           ADDR OF DDNAME
         L    R7,0(,R7)
         L    R6,BLKADD           ADDR OF DATA BLOCK
         L    R6,0(,R6)
         L    R1,NUMBLKS          ADDR OF NO. BLOCKS TO READ
         LH   R1,0(,R1)
         STH  R1,WKNUMBLK
         ST   R7,WKSV7
*        DO OUTSEG
                                                           SPACE 1
         IF (CLC,CLOSE,0(R7)),NE,THEN
           LA    R3,DCB             ADDR DCB
           USING IHADCB,R3
           IF (TM,DCBOFLGS,X'10'),OFF,THEN
             MVC   DCB(DCBL),DCB0
             MVC   DCBDDNAM(8),0(R7)  MOVE IN DDNAME
             STH   R8,DCBBLKSI        MOVE IN BLKSIZE
             STM   R0,R15,SAVE        SAVE ALL REGS
             OPEN  ((R3),INPUT)       OPEN
                                                           SPACE 1
             IF (CLI,DCBDEVT,X'28'),EQ,THEN CMS
               MVC   DEVTDD,0(R7)
               LA    R1,DEVTYPE
               SVC   202
               DC    AL4(*+4)
               IF (CH,R15,HW3330),EQ,THEN
                 OI    DCBDEVT,X'09'
               ELSE
                 OI    DCBDEVT,X'0C'
                 NI    DCBDEVT,X'FE'
               ENDIF
             ENDIF
           ENDIF
                                                           SPACE 1
           IF (TM,DCBDEVT,X'09'),ON,THEN 3330
             LR    R1,R8            GET BLOCK SIZE
             AH    R1,HW135         PLUS OVERHEAD
             LH    R5,HW13030       MAX BYTES PER TRACK
             SLR   R4,R4            CLEAR R4
             DR    R4,R1            DIVIDE 13030 BY BLKSIZE+135
           ELSE                          3375
             LR    R5,R8            GET BLOCK SIZE
             SLR   R4,R4            CLEAR R4
             D     R4,FW32          DIVIDE FOR NO. OF 32-BYTE SEGS
             LA    R5,12(,R5)       PLUS OVERHEAD
             LR    R1,R5            CHANGE REGS
             SLR   R4,R4            CLEAR R4
             L     R5,FW1125        GET NO. 32-BYTE SEGS/TRACK
             DR    R4,R1            DIVIDE FOR BLKS/TRK
           ENDIF
           STH   R5,WKBLKTRK        MAX. BLOCKS PER TRACK
                                                           SPACE 1
           LH    R1,WKBLKTRK        GET MAX BLOCKS PER TRACK
           LR    R5,R9              GET RELATIVE BLOCK TO READ
           SLR   R4,R4              CLEAR R4
           DR    R4,R1              DIVIDE
           STH   R5,TT              STORE FOR    TTTT0000
           LA    R4,1(,R4)          ADD 1 TO REC
           SLL   R4,8               SHIFT UP FOR TTTTRR00
           STH   R4,RZ              STORE FOR    TTTTRRZZ
                                                           SPACE 1
           STM   R0,R15,SAVE        SAVE ALL REGS
           POINT (R3),BLOCK          POINT TO CORRECT BLOCK
           STM   R0,R15,SAVEREGS
*
*  THIS CODE IS FOR THE CHAINED SCHEDULING OF READS
*
             LH    R4,WKNUMBLK                  GET NO BLKS IN R4  V377
             LR    R3,R6                        ADDRESS OF BUFFER  V377
             LR    R7,R8                        BYTES PER BLOCK    V377
             LA    R8,WKDECBL                   ADDRESS OF DECBS   V377
             LA    R9,DCB                       ADDRESS OF DCB     V377
*
*            LOOP FOR ALL FULL TRACKS
*
             WHILE ((C,R4,FW99),GT),DO          READ MAX           V377
               LA    R0,WKDECBS                 ADDRESS OF DECBS   V377
               L     R1,LDECBS                  LENGTH OF DECBS    V377
               SR    R14,R14                    CLEAR R14          V377
               LR    R15,R14                    CLEAR R15          V377
               MVCL  R0,R14                     CLEAR OUT DECBS    V377
                                                           SPACE 1
               L     R2,FW99                    R2 = MAX NCPS      V377
               LA    R6,WKDECBS                 ADDRESS 1ST DECB   V377
               UNTIL (BCT,R2),DO                DO THEM ALL        V377
                 READ  (R6),SF,(R9),(R3),'S',MF=E READ A BLK       V377
                 AR    R3,R7                    BUMP THAT PTR NOW. V377
                 AR    R6,R8                    BUMP THAT DECB PTR V377
               ENDDO                            FINISHED A TRACK   V377
               L     R2,FW99                    R2 = NO. BLKS/TRK  V377
               LA    R6,WKDECBS                 ADDRESS 1ST DECB   V377
               UNTIL (BCT,R2),DO                DO THEM ALL        V377
                 CHECK (R6)                     CHECK EM           V377
                 AR    R6,R8                    BUMP THAT DECB PTR V377
               ENDDO                            FINISHED A TRACK   U758
               S     R4,FW99                    DECR R4            U758
             ENDDO                              WE IS THRU         U758
*
*            LOOP FOR REMAINING BLOCKS
*
             LA    R0,WKDECBS                   ADDRESS OF DECBS   U758
             L     R1,LDECBS                    LENGTH OF DECBS    U758
             SR    R14,R14                      CLEAR R14          U758
             LR    R15,R14                      CLEAR R15          U758
             MVCL  R0,R14                       CLEAR OUT DECBS    U758
                                                           SPACE 1
             LR    R2,R4                        BLKS REMAINING     U758
             IF (LTR,R2,R2),PLUS,THEN           ADDRESS 1ST DECB   U758
               LA    R6,WKDECBS                 ADDRESS 1ST DECB   U758
               UNTIL (BCT,R2),DO                DO THE REST        U758
                 READ  (R6),SF,(R9),(R3),'S',MF=E                  U758
                 AR    R3,R7                    BUMP THAT PTR NOW. U758
                 AR    R6,R8                    BUMP THAT DECB PTR U758
               ENDDO                            FINISHED A TRACK   U758
               LR    R2,R4                      CHECKS REMAINING   U758
               LA    R6,WKDECBS                 ADDRESS 1ST DECB   U758
               UNTIL (BCT,R2),DO                CHECK THE REST     U758
                 CHECK (R6)                     CHECK EM           U758
                 AR    R6,R8                    BUMP THAT DECB PTR U758
               ENDDO                            FINISHED A TRACK   U758
             ENDIF                              FINISHED A TRACK   U758
*
* END OF CHAINED SCHEDULED READS
*
           LM    R0,R15,SAVEREGS
         ELSE
           CLOSE (R3)               CLOSE
         ENDIF
                                                           SPACE 1
         TITLE ' MAIN EXIT ROUTINE '
*************************************************************
*                                                           *
*        MAIN EXIT ROUTINE                                  *
*                                                           *
*************************************************************
                                                           SPACE 1
EXITMAIN EQU   *
                                                          SPACE 1
         SLR   R15,R15
         CLEANUP RC=(15)
         TITLE ' OUTSEG SEG '
*******************************************************************
*                                                                 *
*        OUTSEG SEG                                               *
*                                                                 *
*******************************************************************
                                                           SPACE 1
         BGNSEG OUTSEG,,*
                                                           SPACE 1
           AGO .SKIPOUT
           ST    R9,WKFULL
           OUTPEDIT (IWTO+8(5),WKFULL,F)
           ST    R8,WKFULL
           OUTPEDIT (IWTO+14(5),WKFULL,F)
           MVC   IWTO+20(8),0(R7)
           OUTPEDIT (IWTO+29(5),WKNUMBLK,H)
           WTO 'BLOCK BSIZE DDNAME   NOBLKS'
IWTO       WTO 'XXXXX XXXXX XXXXXXXX XXXXX '
.SKIPOUT ANOP
                                                           SPACE 1
         ENDSEG OUTSEG
                                                           SPACE 1
HW135    DC    H'135'             OVERHEAD FOR 3330
HW13030  DC    H'13030'           BYTES/TRACK 3330
HW3330   DC    H'3330'            3330 DEVICE
FW32     DC    F'32'                                               V377
FW1125   DC    F'1125'                                             V377
CLOSE    DC    CL8'CLOSE   '
DEVTYPE  DC    CL8'EXEC    '
         DC    CL8'DEVTYPE '
         DC    CL8'DD      '
DEVTDD   DC    CL8'INDCB   '
         DC    8XL1'FF'
EOD      DC    CL8'EOD'
EODATA   L     R7,WKSV7
         MVC   0(8,R7),EOD
         B     EXITMAIN
SYNWTO   MVC   WTO+45(8),0(R7)    SYNAD ROUTINE
WTO      WTO   'ERROR READING OS DATASET WITH DDNAME XXXXXXXX'
         LM    R0,R15,SAVE
         SDREGS WKMACR,WAIT=YES
         DC    F'0'
         DS    0F
LDECBS   DC    AL4(WKDECBLL)      SIZE OF 33 DECBS                 V377
FW99     DC    F'99'              MAX NCPS                         V377
         DS    0D
DCB0     DCB   DSORG=PS,RECFM=F,MACRF=(RP),SYNAD=SYNWTO,EODAD=EODATA,  X
               DDNAME=DDNAME,NCP=99
DCBL     EQU   *-DCB0
DCB      DS    24F
         TITLE ' WORKAREA DSECT '
*************************************************************
*                                                           *
*        WORKAREA DSECT                                     *
*                                                           *
*************************************************************
                                                           SPACE 1
WORKAREA DSECT
                                                           SPACE 2
WKMACR   DS    20F                MACRO WORK AREA
SAVE     DS    16F                MACRO WORK AREA
SAVEREGS DS    16F                MACRO WORK AREA                  V377
         SEGSAVE
         DS    0D
WKSV7    DS    F
WKFULL   DS    F                  WORK HALFWORD
I        DS    H                  WORK HALFWORD
WKNUMBLK DS    H                  NUM BLKS TO READ
WKBLKTRK DS    H                  MAX BLOCKS/TRACK
BLOCK    DS    F                  BLOCK FOR TTRZ
TT       EQU   BLOCK              TT OF TTRZ
RZ       EQU   BLOCK+2            RZ OF TTRZ
WKNCP    EQU   99                 TOTAL NCP FOR DCBS               V377
WKDECBS  DS    7F                 DECBS FOR CHAIN SCHED.           V377
WKDECBL  EQU   *-WKDECBS          LENGTH OF ONE DECB               V377
         DS    ((WKNCP-1)*WKDECBL)X  NCP - 1 * 7FW = TOTAL NEEDED  V377
*                                 IN ADDITION TO WKDECBS           V377
WKDECBLL EQU   *-WKDECBS          LENGTH OF ALL DECBS              V377
         DS    0D                 ALIGN ON DBL WORD
WORKLNGT EQU   *-WORKAREA         LEN OF WORKAREA
PL1PARMS DSECT
LISTRELB DS    A                  ADDR OF RELATIVE BLOCK TO READ
BLKSIZE  DS    A                  ADDR OF BLOCK SIZE
DDNAME   DS    A                  ADDR OF DDNAME
BLKADD   DS    A                  ADDR OF DATA BLOCK
NUMBLKS  DS    A                  ADDR OF NUM OF BLOCKS TO READ
         DCBD  DSORG=PS
         END
