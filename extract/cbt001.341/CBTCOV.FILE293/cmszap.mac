CMSZAP   SMBEGIN WORK=YES
         LR    R2,R1
                                                           SPACE 1
         WTO   'ENTER RELATIVE RECORD NUMBER (0 TO N) OR END'
         WTO   'OR DISK IF INPUT IS ON FILE ''CMSZAP INPUT'''
         LA    R9,INLINE
         RDTERM (R9)
         IF (CLC,INLINE(4),DISK),EQ,THEN
           OI    WKFLAG,X'80'
           FSSTATE FSCB=INPUT
           ERRIF (LTR,R15,R15),NZERO,OPN2
           FSOPEN FSCB=INPUT
           FSREAD FSCB=INPUT
           MVC   INLINET,RECORD
           WRTERM INLINET,80
           LH    R1,WKCOUNT
           LA    R1,1(,R1)
           STH   R1,WKCOUNT
         ENDIF
                                                           SPACE 1
         LA    R10,CMSDD
         USING IHADCB,R10
         OPEN (CMSDD,(UPDAT))
         ERRIF (TM,DCBOFLGS,X'10'),OFF,OPEN
                                                           SPACE 1
         WHILE ((TM,INLINE,X'F0'),ON),DO
           INPTEDIT (WKBLKNO,INLINE(4),F)
           LA    R3,WKBUFF
           LA    R4,WKBLKNO+1
           READ  READDECB,DI,CMSDD,(R3),'S',0,(R4),MF=E
           CHECK READDECB
                                                           SPACE 1
           OI    INLINE,X'F0'
           WHILE ((TM,INLINE,X'F0'),ON),DO
             IF (TM,WKFLAG,X'80'),OFF,THEN
               WTO   'ENTER VERIFY  DISPLACEMENT AND VALUE IN FORM'
               WTO   'DDDD VVVVV...'
               LA    R9,INLINE
               RDTERM (R9)
             ELSE
               FSREAD FSCB=INPUT
               MVC   INLINET,VERIFY
               WRTERM INLINET,80
               LH    R1,WKCOUNT
               LA    R1,1(,R1)
               STH   R1,WKCOUNT
             ENDIF
                                                           SPACE 1
             IF (TM,INLINE,X'F0'),ON,THEN
               MVC   WKVERREP,VERIFY
               DO    DISPVAL
               L     R14,WKDISPV
               A     R14,WKLENV
               IF (CH,R14,DCBBLKSI),LE,THEN
                 LA    R14,WKBUFF
                 A     R14,WKDISPV
                 L     R1,WKLENV
                 BCTR  R1,0
                 IF (LTR,R1,R1),NMINUS,THEN
                   MVC   WKVAL,WKVALV
                   IF (EX,R1,CLCDATA),EQ,THEN
                     IF (TM,WKFLAG,X'80'),OFF,THEN
                       WTO   'DATA VERIFIED.'
                       WTO   ' '
                       WTO   'ENTER REPLACE DISPL. AND VALUE IN FORM'
                       WTO   'DDDD VVVVV...'
                       LA    R9,INLINE
                       RDTERM (R9)
                     ELSE
                       FSREAD FSCB=INPUT
                       MVC   INLINET,REPLACE
                       WRTERM INLINET,80
                       LH    R1,WKCOUNT
                       LA    R1,1(,R1)
                       STH   R1,WKCOUNT
                     ENDIF
                     IF (TM,INLINE,X'F0'),ON,THEN
                       MVC   WKVERREP,REPLACE
                       DO    DISPVAL
                                                           SPACE 1
                       IF (CLC,WKDISPV,WKDISPR),EQ,AND
                       IF (CLC,WKLENV,WKLENR),EQ,THEN
                                                           SPACE 1
                         LA    R14,WKBUFF
                         A     R14,WKDISPV
                         L     R1,WKLENV
                         BCTR  R1,0
                         MVC   WKVAL,WKVALR
                         EX    R1,MVCDATA
                                                           SPACE 1
                         WRITE WRITDECB,DI,CMSDD,(R3),'S',0,(R4),MF=E
                         CHECK WRITDECB
                         WTO   'DATA SUCCESSFULLY REPLACED.'
                       ELSE
                         WTO   'VERIFY AND REPLACE DATA INCONSISTANT.'
                         ERRIF (CR,R1,R1),EQ,CLOS
                       ENDIF
                     ELSE
                       IF (TM,WKFLAG,X'80'),OFF,THEN
                         OI    INLINE,X'F0'
                       ENDIF
                     ENDIF
                   ELSE
                     WTO   'INPUT DATA FAILED VERIFICATION..'
                     ERRIF (CR,R1,R1),EQ,CLOS
                   ENDIF
                 ELSE
                   WTO   'INVALID INPUT.'
                   ERRIF (CR,R1,R1),EQ,CLOS
                 ENDIF
               ELSE
                 WTO   'DISPLACEMENT + DATA LENGTH > BLOCK SIZE.'
                 ERRIF (CR,R1,R1),EQ,CLOS
               ENDIF
             ENDIF
           ENDDO
           IF (TM,WKFLAG,X'80'),OFF,THEN
             CALL CLEAR
             WTO   'ENTER RELATIVE RECORD NUMBER (0 TO N) OR END'
             LA    R9,INLINE
             RDTERM (R9)
           ELSE
             FSREAD FSCB=INPUT
             MVC   INLINET,RECORD
             WRTERM INLINET,80
           ENDIF
         ENDDO
         IF (TM,WKFLAG,X'80'),ON,THEN
           WTO 'CMSZAP SUCCESSFUL'
         ENDIF
                                                           SPACE 1
EXITCLOS EQU   *
         CLOSE (CMSDD)
EXITCLS2 EQU   *
         IF (TM,WKFLAG,X'80'),ON,THEN
           FSCLOSE FSCB=INPUT
           OUTPEDIT (WTOX+8(4),WKCOUNT,H)
WTOX       WTO 'XXXX WAS LAST LINE READ FROM CMSZAP INPUT.'
         ENDIF
         SMBEXIT
                                                           EJECT
         ERENT OPEN,MAIN
         WTO   'SUBJECT FILE FAILED TO OPEN.'
         MVI   RETURN+3,4
                                                           SPACE 1
         ERENT INPT,MAIN
         WTO   'UNEXPECTED END OF INPUT FILE.'
         MVI   RETURN+3,12
                                                           SPACE 1
         ERENT OPN2,MAIN
         ST    R15,RETURN
         WTO   '''CMSZAP INPUT A1'' DOES NOT EXIST.'
                                                           SPACE 1
         ERENT IO,CLOS
         WTO   'I/O ERROR OCCURED.'
         MVI   RETURN+3,8
                                                           SPACE 1
         EREND
         TITLE ' DISPVAL SEG '
*******************************************************************
*                                                                 *
*        DISPVAL SEG                                              *
*                                                                 *
*******************************************************************
                                                           SPACE 1
         BGNSEG DISPVAL,,*
                                                           SPACE 1
         LA    R8,INLINE
         USING INDSECT,R8
         IF (CLC,WKVERREP,VERIFY),EQ,THEN
           LA    R6,WKLENV
         ELSE
           LA    R6,WKLENR
         ENDIF
                                                           SPACE 1
         MVC  WKLEN,FW4
         LA   R1,INDISP
         ST   R1,WKP1
         LA   R1,WKDISP
         ST   R1,WKP2
         LA   R1,WKLEN
         ST   R1,WKP3
         LA   R1,WKP1
         CALL SCHARHEX
         MVC  4(4,R6),WKDISPX
                                                           SPACE 1
         MVC  WKLEN,FW56
         LA   R1,INVAL
         ST   R1,WKP1
         LA   R1,WKVAL
         ST   R1,WKP2
         LA   R1,WKLEN
         ST   R1,WKP3
         LA   R1,WKP1
         CALL SCHARHEX
         MVC  0(4,R6),WKLEN
         MVC  8(56,R6),WKVAL
                                                           SPACE 1
         ENDSEG DISPVAL
         TITLE ' CONSTANTS '
*******************************************************************
*                                                                 *
*        CONSTANTS                                                *
*                                                                 *
*******************************************************************
                                                           SPACE 1
         LTORG
INPUT    FSCB  'CMSZAP INPUT A1',RECFM=F,BSIZE=80,BUFFER=INLINE
CMSDD    DCB   DDNAME=CMSDD,DSORG=DA,MACRF=(RIC,WIC),OPTCD=R,RECFM=F,  X
               SYNAD=EXITIO
                                                           SPACE 1
VERIFY   DC    CL3'VER'
REPLACE  DC    CL3'REP'
RECORD   DC    CL3'REC'
DISK     DC    CL4'DISK'
FW4      DC    F'4'
FW56     DC    F'56'
CLCDATA  CLC   0(0,R14),WKVAL
MVCDATA  MVC   0(0,R14),WKVAL
INLINET  DS    CL3
         DC    CL1' '
INLINE   DS    CL160
         TITLE ' WKAREA AND OTHER DSECTS '
*******************************************************************
*                                                                 *
*        WKAREA AND OTHER DSECTS                                  *
*                                                                 *
*******************************************************************
                                                           SPACE 1
WKAREA   DSECT
WKMACR   DS    20F
WKCOUNT  DS    H
WKFLAG   DS    X
WKVERREP DS    CL3
WKI      DS    F
         READ  READDECB,DI,,,,,,MF=L
         WRITE WRITDECB,DI,,,,,,MF=L
WKBLKNO  DS    F
WKLEN    DS    F
WKDISPX  DS    0F
         DS    H
WKDISP   DS    XL2
WKVAL    DS    XL56
WKLENV   DS    F
WKDISPV  DS    XL4
WKVALV   DS    XL56
WKLENR   DS    F
WKDISPR  DS    XL4
WKVALR   DS    XL56
WKP1     DS    A
WKP2     DS    A
WKP3     DS    A
         SEGSAVE
         DS    D
WKBUFF   DS    CL13030
WKLENGTH EQU   *-WKAREA
INDSECT  DSECT
INDISP   DS    CL4
         DS    CL1
INVAL    DS    CL112
         DCBD DSORG=DA
         END
