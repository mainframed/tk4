  SCANPDS: PROC(INP) OPTIONS(MAIN) REORDER;
  DECLARE
     INP      CHAR(100)    VAR          ,
     INP2     CHAR(80)     VAR          ,
     LINE     CHAR(80)         INIT(' '),
     SPLATS   CHAR(80)         INIT((80)'*'),
     PRT2TITL CHAR(80)         INIT(
      '* CROSS REFERENCE OF MEMBERS WITH HITS ON MULTIPLE STRINGS'),
     PRT3TITL CHAR(80)         INIT(
      '* SUMMARY OF ALL MEMBERS WITH HITS ON ANY STRING'),
     X$   CHAR(72)         VAR INIT(' '),
     PLIXOPT  CHAR(100)    VAR INIT(' ') STATIC EXTERNAL,
     (MEMBER,
      STRTMEMBER,
      ENDMEMBER,
      LASTMEMBER,
      XREFMEMBER)  CHAR(8)  STATIC  INIT(' '),
     NOSTR      FIXED BIN(15)    INIT(100),
     STR(NOSTR) CHAR(72) VARYING INIT(' '),
     STX(NOSTR) CHAR(72) VARYING INIT(' '),
     LASTHIT    CHAR(72) VARYING INIT('BRQFMLTZ'),
     ENDDIR     CHAR(1) INIT('0'),
     (XREF,XREF1,ZREF,NEW2,SCANON,NEW3,
      NCMT,NEW)  BIT(1) STATIC INIT('0'B),
     (I,J,IP) FIXED BIN(15) INIT(0),
     K        FIXED BIN(15) INIT(0),
     BEGIN    FIXED BIN(15) INIT(1),
     END      FIXED BIN(15) INIT(80),
     MEMHITS  FIXED BIN(15) INIT(0),
     NOMEMS   PIC'ZZZ9'     INIT(0),
     COUNT    PIC'ZZZ9'     INIT(0),
     TOTHITS  PIC'ZZZ9'     INIT(0),
     HITS     PIC'ZZ9'      INIT(0),
     (MOD,ADDR,HIGH,SUBSTR,LENGTH,INDEX,ONSOURCE) BUILTIN,
     ENDSTR  EXTERNAL CONDITION,
     DISKSTR EXTERNAL CONDITION,
     PRINT   EXTERNAL FILE PRINT,
     PRINT2  EXTERNAL FILE PRINT,
     PRINT3  EXTERNAL FILE PRINT,
     SPDSGET EXTERNAL ENTRY,
     COMMENTS   CHAR(3)  STATIC  INIT('NO');

     DCL STRINGS STREAM     INPUT;
     DCL SUBSET FILE RECORD INPUT ENV(BLKSIZE(80));
     DCL SUBMEM0     CHAR(80) STATIC INIT('');
     DCL SUBMEM(999) CHAR(8)  STATIC INIT('');
     DCL SUBMEMN     FIXED BIN(15)       INIT(0);
     DCL SUBNUM      FIXED BIN(15)       INIT(0);
     DCL SUBPROMPT   FIXED BIN(15)       INIT(0);
     DCL DISKSTR_FLG FIXED BIN(15)       INIT(0);

  ON ENDFILE(SUBSET) BEGIN;
    GO TO GETTERM;
  END;

  ON UNDEFINEDFILE(SUBSET) BEGIN;
    GO TO GETTERM;
  END;

  ON UNDEFINEDFILE(STRINGS) BEGIN;
    DISPLAY('FILE ''SCANPDS STRINGS A'' NOT FOUND');
    STOP;
  END;

  ON ENDFILE(STRINGS) BEGIN;
    SIGNAL CONDITION(ENDSTR);
  END;

  ON CONDITION(DISKSTR)
     BEGIN;
       OPEN  FILE(STRINGS) INPUT;
       DISKSTR_FLG = 1;
     END;

  ON CONDITION(ENDSTR)
     BEGIN;
     IF   DISKSTR_FLG = 1
     THEN CLOSE FILE(STRINGS);
     IF NCMT THEN PUT FILE(PRINT) SKIP(2)
          LIST('NO '' * COMMENT '' CARDS WERE SEARCHED');

     IF  SUBMEMN = 0
     THEN DO;
       STRTMEMBER = '';
       ENDMEMBER  = HIGH(8);

       DISPLAY ('ENTER STARTING MEMBER') REPLY(X$);
       IF   X$ ^= ''
       THEN STRTMEMBER = X$;
       IF   X$ = ''
       THEN SCANON = '1'B;
       ELSE PUT FILE(PRINT) SKIP EDIT('STARTING MEMBER - ',STRTMEMBER)
                                     (A);
       DISPLAY ('ENTER ENDING MEMBER') REPLY(X$);
       IF   X$ ^= ''
       THEN ENDMEMBER = X$;
       IF   X$ ^= ''
       THEN PUT FILE(PRINT) SKIP EDIT('ENDING   MEMBER - ',ENDMEMBER)
                                     (A);
     END;
     ELSE DO;
       PUT FILE(PRINT) SKIP EDIT('MEMBER SUBSET GIVEN')(A);
       STRTMEMBER = SUBMEM(1);
       ENDMEMBER = SUBMEM(SUBMEMN);
       LINE = '$INGLE';
     END;

     PUT FILE(PRINT) SKIP
     EDIT('MEMBER',
                   'STRING','SCAN RANGE',BEGIN,'-',END,(80)'_')
       (COL(1),A,COL(10),A,COL(20),A,F(2),A,F(2),COL(1+BEGIN),A(END));
     IF J > 0 THEN GO TO READCARDS;   ELSE STOP;
     END; /* ENDFILE STRINGS*/

     IF   SUBSTR(INP,1,8) = 'SUBSTERM'
     THEN DO;
       SUBPROMPT = 1;
       INP = SUBSTR(INP,9,(LENGTH(INP)-8));
     END;

     SUBSTR(PRT2TITL,80,1) = '*';
     SUBSTR(PRT3TITL,80,1) = '*';
     INP2 = 'SCAN ON PDS WITH DSN= '××INP;
     IF   LENGTH(INP2) > 80
     THEN INP2 = SUBSTR(INP2,1,80);
     PUT FILE(PRINT) EDIT(INP2)(A);

     DO I = 1 TO 999;
       IF   SUBPROMPT = 1
       THEN DISPLAY('ENTER MEMBER OR NULL TO END');
       READ  FILE(SUBSET) INTO(SUBMEM0);
       SUBMEM(I) = SUBSTR(SUBMEM0,1,8);
       SUBMEMN = I;
     END;

  GETTERM:
     DISPLAY
     ('ENTER COMMENTS (YES OR NO - DEFAULT IS NO)') REPLY(COMMENTS);
     IF COMMENTS = '' THEN COMMENTS = 'NO';

     IF COMMENTS = 'NO' THEN NCMT = '1'B;
     PUT FILE(PRINT)
     SKIP(3) LIST('THE SEARCH IS FOR THE FOLLOWING STRINGS');
     PUT FILE(PRINT)
     SKIP;
     DISPLAY ('ENTER ONE STRING AT A TIME - NULL TO END');
     DISPLAY ('OR ENTER STRDISK IF STRINGS ARE ON A CMS');
     DISPLAY ('FILE CALLED SCANPDS STRINGS A1.');
     DO I = 1 TO NOSTR;
       IF DISKSTR_FLG = 0
       THEN DO;
         DISPLAY(' ')
         REPLY(STR(I));
       END;

       IF STR(I) = 'STRDISK' & I = 1 THEN SIGNAL CONDITION(DISKSTR);
       IF DISKSTR_FLG = 1
       THEN GET FILE(STRINGS) LIST(STR(I));

       IF STR(I) = '' THEN SIGNAL CONDITION(ENDSTR);
       IF   SUBSTR(STR(I),LENGTH(STR(I)),1) = '&'
       THEN SUBSTR(STR(I),LENGTH(STR(I)),1) = ' ';
       J = I;
       PUT FILE(PRINT)
       SKIP EDIT('''',STR(I),'''')(COL(5),A,A,A);
     END;

   READCARDS:

     SUBNUM  = 1;
     MEMBER = STRTMEMBER;

     DO  WHILE ((MEMBER ^= HIGH(8))
               &(MEMBER <= ENDMEMBER));
       CALL SPDSGET(MEMBER,LINE);
       IF   SUBMEMN > 0
       &    SUBSTR(LINE,1,6) = '$INGLE'
       THEN DO;
         IF   SUBNUM < SUBMEMN
         THEN DO;
           SUBNUM = SUBNUM + 1;
           MEMBER = SUBMEM(SUBNUM);
           CALL SPDSGET(MEMBER,LINE);
         END;
         ELSE DO;
           MEMBER = HIGH(8);
         END;
       END;

       IF   MEMBER >= STRTMEMBER
       &    MEMBER <= ENDMEMBER
       THEN SCANON = '1'B;

       IF   SCANON = '1'B
       THEN DO;
         IF   MEMBER ^= LASTMEMBER
         THEN CALL NEWMEM;

         IF   SUBSTR(LINE,1,1) = '*' & NCMT THEN;
         ELSE CALL SCANLINE;
       END;
     END;
     IF   MEMHITS > 0
     THEN CALL PRINTSUM;
     NOMEMS = NOMEMS - 1;

     IF   XREF1
     THEN CALL PRINTXRF;

     X$ = 'TOTAL MEMBERS SCANNED   - '××NOMEMS;   DISPLAY(X$);
     X$ = 'TOTAL MEMBERS WITH HITS - '××COUNT;    DISPLAY(X$);
     X$ = 'TOTAL HITS              - '××TOTHITS;  DISPLAY(X$);

1/***************************************************************/
 /*  NEWMEM                                                     */
 /***************************************************************/
   NEWMEM : PROC;
           NOMEMS = NOMEMS + 1;

           X$ = LASTMEMBER;

           IF   (HITS > 0)
           THEN X$ = X$××' - '××HITS××' HITS';

           IF   (XREF)
           THEN X$ = X$××' - '××MEMHITS××' STRINGS';

           IF   LASTMEMBER ^= '        '
           THEN DISPLAY (X$);

           HITS = 0;
           IF   (^NEW)
           THEN DO;
             XREF1 = XREF;
             XREFMEMBER = LASTMEMBER;
           END;
           XREF = '0'B;
           LASTHIT = 'BRQFMLTZ';
           LASTMEMBER = MEMBER;
           NEW = '1'B;
   END NEWMEM ;
1/***************************************************************/
 /*  SCANLINE                                                   */
 /***************************************************************/
   SCANLINE : PROC;
     DO I = 1 TO J;
       IP = INDEX(LINE,STR(I));
       IF IP > 0
       THEN DO;

         HITS = HITS + 1;
         TOTHITS = TOTHITS + 1;
         IF   (STR(I) ^= LASTHIT & LASTHIT ^= 'BRQFMLTZ')
         THEN DO;
           XREF = '1'B;
         END;

         LASTHIT = STR(I);
         IF NEW
         THEN DO;
           IF   XREF1
           THEN CALL PRINTXRF;

           IF   MEMHITS > 0
           THEN CALL PRINTSUM;

           STX = (' ');
           MEMHITS = 0;
           NEW = '0'B;
           COUNT = COUNT + 1;
           PUT FILE(PRINT)
              SKIP(2) EDIT(MEMBER,' ',(71)'=')(A(8),A(1),A(71));
         END;

         ZREF = '1'B;
         DO K = 1 TO MEMHITS;
           IF   STX(K) = STR(I)
           THEN ZREF = '0'B;
         END;
         IF ZREF THEN DO;
           MEMHITS = MEMHITS + 1;
           STX(MEMHITS) = STR(I);
         END;

         PUT FILE(PRINT) SKIP EDIT(LINE)
             (COL(1),A(80));
         PUT FILE(PRINT) SKIP EDIT((80)'"')
             (COL(IP),A(LENGTH(STR(I))));
       END;
     END;
   END SCANLINE ;
1/***************************************************************/
 /*  PRINTXRF                                                   */
 /***************************************************************/
   PRINTXRF : PROC;
     PUT FILE(PRINT) SKIP(1) EDIT
       ('+++++   ',
        XREFMEMBER,' HAD HITS ON ',MEMHITS,' STRING(S)',
        '   +++++')
       (A(8),A(8),A(13),F(2),A(10));
     PUT FILE(PRINT) SKIP(2);

     IF ^(NEW2) THEN DO;
       NEW2 = '1'B;
       PUT FILE(PRINT2) PAGE    EDIT
           (SPLATS,PRT2TITL,SPLATS)
           ((3)(COL(1),A(80)));
     END;
     PUT FILE(PRINT2) SKIP(1) EDIT
       (XREFMEMBER,' HAD HITS ON ',MEMHITS,' STRING(S)')
       (A(8),A(13),F(2),A(10));
     DO K = 1 TO MEMHITS;
       PUT FILE(PRINT2) SKIP EDIT(STX(K))(X(21),A(8));
     END;

   END PRINTXRF ;
1/***************************************************************/
 /*  PRINTSUM                                                   */
 /***************************************************************/
   PRINTSUM : PROC;
     IF ^(NEW3) THEN DO;
       NEW3 = '1'B;
       PUT FILE(PRINT3) PAGE    EDIT
           (SPLATS,PRT3TITL,SPLATS)
           ((3)(COL(1),A(80)));
     END;
     PUT FILE(PRINT3) SKIP(1) EDIT
           (XREFMEMBER,' HAD HITS ON ',MEMHITS,' STRING(S)')
           (A(8),A(13),F(2),A(10));
     DO K = 1 TO MEMHITS;
       PUT FILE(PRINT3) SKIP EDIT(STX(K))(X(21),A);
     END;
   END PRINTSUM ;
   END SCANPDS;
