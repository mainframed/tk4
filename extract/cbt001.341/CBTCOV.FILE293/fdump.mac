FDUMP CSECT                   ENTRY POINT
   BIN 12 ,                         SAVE REGS
                                                           PRINT NOGEN
   LR    R2,R1
   LA    R1,23
   STH   R1,MYPARMS
   IF (CLC,0(8,R2),CFDUMP),NE,THEN
     L     R1,0(,R2)
     L     R1,0(,R1)
     MVC   MYPARMC(24),0(R1)
   ELSE
     MVC   MYPARMC(24),8(R2)
   ENDIF
   LA    R1,MYPARMS
   ST    R1,MYPARM
   LA    R1,MYPARM
                                                           SPACE 1
   L     R1,0(R1)                   GET A(EXEC PARMS)
   ST    R1,PARMADDR                SAVE A(EXEC PARMS)
                                                           SPACE 1
                                                           SPACE 1
   OPEN  (OUTDCB,(OUTPUT))          OPEN OUTPUT
   OPEN  (INDCB,(INPUT))            OPEN INPUT
   USING IHADCB,R2                  ADDRESSING FOR DCB
   LA    R2,INDCB                   GET A(INPUT DCB)
   IF (TM,DCBOFLGS,OPEN),ONES,THEN  IF INPUT OPENED
      IF (TM,DCBRECFM,X'80'),ON,AND    READ JFCB.                  Y152
      IF (TM,DCBRECFM,X'40'),OFF,THEN  READ JFCB.                  Y152
        OI    RECFMFLG,X'80'                                       Y152
      ELSE                                                         Y152
        MVI   RECFMFLG,X'00'                                       Y152
      ENDIF                                                        Y152
      RDJFCB (INDCB)                   READ JFCB.                  Y152
      MVC   PAGEDSN(22),JFCBDSN        SAVE DSN IN PAGE HEADING    Y152
      LA    R1,PAGEDSN                 FIND END OF DSNAME          Y218
*     TRT   PAGEDSN(44),ENDSPACE       FIND END OF DSNAME          Y218
      UNTIL ((CLC,0(2,R1),BLANK2),EQ),DO ND END OF DSNAME          Y218
        LA    R1,1(,R1)                                            Y218
      ENDDO
      LA    R1,1(,R1)                                              Y218
      IF (TM,JFCB+86,X'01'),ONES,THEN  IF MEMBER OF PDS            Y152
         MVI   0(R1),C'('                                          Y152
         MVC   1(8,R1),JFCBMEM            SAVE MEMBER NAME         Y152
         MVI   9(R1),C')'                                          Y152
*                                         MEMBER NAME              Y218
      ENDIF                            END IF                      Y152
      DO    GETBUFF,R14                GO GET INPUT BUFFER
      IF (CLI,ERROR,OFF),EQ,THEN       IF NO ERROR
         DO    PARMS,R14                  GO GET INPUT PARMS
         IF (CLI,ERROR,OFF),EQ,THEN       IF NO ERROR
            L     R11,DUMPCNT                GET INPUT PRINT COUNT
            IF (C,R11,F0),GT,THEN            IF PRINT COUNT GT ZERO
               UNTIL (BCT,R11),DO               LOOP ON PRINT COUNT
                  DO    DUMPRECD,R14               GO DUMP A RECORD
               ENDDO                            END UNTIL
            ELSE                             ELSE
               UNTIL ((CLI,STOP,ON),EQ),DO      LOOP TIL END OF FILE
                  DO    DUMPRECD,R14               GO DUMP A RECORD
               ENDDO                            END UNTIL
            ENDIF                            END IF
EOF EQU *
            LH    R0,RCRDLNGH                GET LENGTH OF BUFFER
            FREEMAIN R,LV=(0),A=BUFFADDR     FREE THE BUFFER
         ENDIF                            END IF
      ENDIF                            END IF
      CLOSE (INDCB)                    CLOSE INPUT
   ELSE                             ELSE
      PUT   OUTDCB,OPENMSG             PRINT OPEN ERROR MSG
   ENDIF                            END IF
CLOSE EQU *
   CLOSE (OUTDCB)                   CLOSE OUTPUT
   BOUT  ,                       EXIT
         TITLE ' G E T B U F F  SUBROUTINE'
******************************************************************
*                                                                *
*    G E T B U F F                                               *
*                                                                *
*       THIS SUBROUTINE DETERMINES THE LENGTH OF THE INPUT       *
*       BUFFER  REQUIRED AND  DOES A  GETMAIN  FOR IT.  IF       *
*       STORAGE FOR THE BUFFER IS NOT AVAILABLE,  AN ERROR       *
*       MESSAGE IS PRINTED AND EXECUTION IS TERMINATED.          *
*                                                                *
******************************************************************
                                                                SPACE 1
   BGNSEG GETBUFF,R14              ENTRY
      ST    R14,GETSAVE               SAVE RETURN ADDRESS
      SR    R0,R0                     ZERO REG 0
      IF (TM,DCBDEVT,DISK),ONES,THEN  IF DISK FILE
         IC    R0,DCBKEYLE               GET KEY LENGTH
      ENDIF                           END IF
      AH    R0,DCBBLKSI               ADD BLKSIZE
      STH   R0,RCRDLNGH               SAVE BUFFER SIZE
      GETMAIN EC,LV=(0),A=BUFFADDR    GET A BUFFER
      IF (LTR,R15,R15),NZERO,THEN     IF STORAGE NOT AVAILABLE
         PUT   OUTDCB,COREMSG            PRINT ERROR MSG
         MVI   ERROR,ON                  SET ERROR SWITCH ON
      ENDIF                           END IF
      L     R14,GETSAVE               RESTORE RETURN ADDRESS
      DROP  R2
   ENDSEG GETBUFF                  RETURN
         TITLE ' P A R M S  SUBROUTINE'
******************************************************************
*                                                                *
*    P A R M S                                                   *
*                                                                *
*       THIS  SUBROUTINE EXTRACTS  THE  PARAMETERS 'SKIP',       *
*       'PRINT' AND 'INPUT' FROM THE EXEC CARD.  IF 'SKIP'       *
*       IS ENTERED, THE  SUBROUTINE SKIP IS CALLED TO SKIP       *
*       THE REQUESTED NUMBER OF INPUT RECORDS.  IF 'PRINT'       *
*       IS ENTERED, IT IS SAVED TO DETERMINE THE NUMBER OF       *
*       INPUT  RECORDS TO  DUMP.  THE  'INPUT'  OPTION  IS       *
*       SAVED  TO DETERMINE  IF THE ASCII OR EBCDIC TRANS-       *
*       LATE TABLE SHOULD BE USED FOR THE CHARACTER TRANS-       *
*       LATION.  IF  ANY  ERRORS  ARE  DETECTED, AN  ERROR       *
*       MESSAGE  IS PRINTED  AND EXECUTION  IS TERMINATED.       *
*                                                                *
******************************************************************
                                                                SPACE 1
 BGNSEG PARMS,R14                  ENTRY POINT
    USING PARMSECT,R2                 ADDRESSING FOR INPUT PARMS
    ST    R14,PARMSAVE                SAVE RETURN ADDRESS
    L     R2,PARMADDR                 GET A(EXEC PARMS)
    LH    R3,PARMLGTH                 GET LENGTH OF PARMS
    IF (CH,R3,H0),GT,THEN             IF ANY PARMS ENTERED         Y105
       BCTR  R3,0                        SUBTRACT 1 FOR 'EX'       Y218
       LA    R4,PARMDATA                 GET A(PARMS)              Y218
       IF (CLI,0(R4),CHARC),EQ,THEN                                UUUU
         OI    RECFMFLG,X'40'                                      UUUU
         MVI   0(R4),CHAR0                                         UUUU
       ENDIF                                                       UUUU
       IF (EX,R3,TRTCOMMA),ZERO,THEN     IF NO COMMA FOUND         Y218
          LA    R1,1(R3,R4)                 POINT R1 TO END        Y218
       ENDIF                             END IF                    Y218
       LA    R1,0(R1)                    ZERO 1ST BYTE OF ADDR     Y218
       SR    R1,R4                       FIND L'SKIP PARM          Y218
       IF (CH,R1,H0),GT,THEN             IF SKIP ENTERED           Y218
          BCTR  R1,0                        SUBTRACT 1 FOR 'EX'    Y218
          EX    R1,PACK                     PACK SKIP PARM         Y218
          CVB   R5,DOUBLE                   CONVERT SKIP TO BINAR  Y218
          IF (CH,R5,H0),GT,THEN             IF SKIP NOT ZERO       Y218
             ST    R1,SKIPLNGH                 SAVE R1             Y218
             DO    SKIP,R14                    GO SKIP RECORDS     Y218
             L     R1,SKIPLNGH                 RESTORE R1          Y218
          ENDIF                             END IF                 Y218
          LA    R1,1(R1)                    ADD 1 TO L'SKIP        Y218
       ENDIF                             END IF                    Y218
       LA    R4,1(R4,R1)                 BUMP PAST SKIP & COMMA    Y218
       SR    R3,R1                       SUBTRACT L'SKIP           Y218
       IF (CH,R3,H0),GT,THEN             IF ANY PARMS LEFT         Y218
          BCTR  R3,0                        SUBTRACT 1 FOR COMMA   Y218
          IF (EX,R3,TRTCOMMA),ZERO,THEN     IF NO COMMA FOUND      Y218
             LA    R1,1(R3,R4)                 POINT R1 TO END     Y218
          ENDIF                             END IF                 Y218
          LA    R1,0(R1)                    ZERO 1ST BYTE          Y218
          SR    R1,R4                       FIND L'PRINT           Y218
          IF (CH,R1,H0),GT,THEN             IF PRINT ENTERED       Y218
             BCTR  R1,0                        SUBTRACT 1 FOR 'EX' Y218
             EX    R1,PACK                     PACK PRINT          Y218
             CVB   R5,DOUBLE                   CONVERT PRINT TO    Y218
*                                                BINARY            Y218
             ST    R5,DUMPCNT                  SAVE PRINT COUNT    Y218
             LA    R1,1(R1)                    BUMP L'PRINT        Y218
          ENDIF                             END IF                 Y218
          LA    R4,1(R4,R1)                 BUMP PAST PRINT &      Y218
*                                              COMMA               Y218
          SR    R3,R1                       SUBTRACT L'PRINT       Y218
          IF (CH,R3,H0),GT,THEN             IF ANY PARMS LEFT      Y218
             BCTR  R3,0                        SUB 1 FOR COMMA     Y218
             EX    R3,MOVEPARM                 SAVE 'ASCII' OR     Y218
*                                                 'EBCDIC' PARM    Y218
          ENDIF                             END IF                 Y218
       ENDIF                             END IF                    Y218
    ENDIF                             END IF
    LA    R2,INDCB                    GET A(INPUT DCB)
    L     R14,PARMSAVE                RESTORE RETURN ADDRESS
    DROP  R2
 ENDSEG PARMS                      RETURN
         TITLE ' S K I P  SUBROUTINE'
******************************************************************
*                                                                *
*    S K I P                                                     *
*                                                                *
*       THIS SUBROUTINE  SKIPS THE NUMBER OF INPUT RECORDS       *
*       AS DEFINED BY THE 'SKIP' INPUT PARAMETER.                *
*                                                                *
******************************************************************
                                                                SPACE 1
   BGNSEG SKIP,R14                   ENTRY
      ST    R14,SKIPSAVE                SAVE RETURN ADDRESS
      IF (TM,RECFMFLG,X'80'),ON,THEN    FIXED RECORDS
                                                           SPACE 1
      STM   R2,R5,SAVE25
                                                           SPACE 1
      IF (TM,RECFMFLG,X'40'),OFF,THEN NOT CDUMP
        SVC202 DEVTYPE
                                                           SPACE 1
        IF (CH,R15,HW3330),EQ,THEN
          SLR   R2,R2             CLEAR R2
          LH    R3,HWTRKLN        GET H'13165'
          LH    R4,RCRDLNGH       R4 = REC L
          AH    R4,HW135          ADD 135
          DR    R2,R4             DIVIDE
        ELSE
          SLR   R2,R2             CLEAR R2
          LH    R3,RCRDLNGH       R3 = REC L
          D     R2,FW32           DIVIDE BY 32
          LA    R3,12(,R3)        + OVERHEAD
          LR    R4,R3             PUT IN R4
          SLR   R2,R2             CLEAR R2
          L     R3,FW1125         NO. 32-BYTE SEGS / TRACK
          DR    R2,R4             DIVIDE
        ENDIF
                                                           SPACE 1
        SLR   R2,R2               CLEAR R2
        LR    R4,R3               R3 HAS BLKS/TRK
        LR    R3,R5               R5 HAS NUM TO SKIP
        DR    R2,R4               DIVIDE FOR TT R
        STH   R3,TT               R3 HAS TT
        LA    R2,1(,R2)           R2 HAS R
        SLL   R2,8                R2 HAS RZ
        STH   R2,RZ               R2 HAS RZ
      ELSE
        LR    R1,R5
        LA    R1,1(,R1)
        SLL   R1,8
        ST    R1,BLOCK
      ENDIF
      POINT INDCB,BLOCK           BLOCK = TTRZ
                                                           SPACE 1
      LM    R2,R5,SAVE25
      ST    R5,RECORD
                                                           SPACE 1
      ELSE                              VARIABLE OR UNDEFINED RECS
      UNTIL (BCT,R5),DO                 UNTIL ALL RECORDS SKIPPED
         L     R1,RECORD                   GET RECORD COUNT
         LA    R1,1(R1)                    ADD 1
         ST    R1,RECORD                   SAVE RECORD COUNT
         L     R6,BUFFADDR                 GET A(INPUT BUFFER)
         READ  SKIPREAD,SF,INDCB,(R6),'S'  READ A RECORD
         CHECK SKIPREAD                    WAIT & CHECK I/O
      ENDDO                             END UNTIL
      ENDIF
      L     R14,SKIPSAVE                RESTORE RETURN ADDRESS
   ENDSEG SKIP                       RETURN
         TITLE ' D U M P R E C D  SUBROUTINE'
******************************************************************
*                                                                *
*    D U M P R E C D                                             *
*                                                                *
*       THIS SUBROUTINE CONTROLS THE DUMPING OF EACH INPUT       *
*       RECORD  BY  CALLING  'LINES'  TO DUMP  FULL  LINES       *
*       (32 BYTES),  'WORDS' TO DUMP  FULLWORDS (4 BYTES),       *
*       AND THEN FORMATTING ANY BYTES LESS THAN A FULLWORD       *
*       IN THE OUTPUT PRINT LINE.                                *
*                                                                *
******************************************************************
                                                                SPACE 1
   BGNSEG DUMPRECD,R14               ENTRY POINT
      USING IHADCB,R2                   ADDRESSING FOR DCB
      ST    R14,DUMPSAVE                SAVE RETURN ADDRESS
      L     R6,BUFFADDR                 GET A(BUFFER)
      LH    R7,RCRDLNGH                 GET L'BUFFER
      LR    R8,R6
      SR    R9,R9
      MVCL  R6,R8                       CLEAR INPUT BUFFER
      L     R3,BUFFADDR                 GET A(BUFFER) FOR READ
      READ  DUMPREAD,SF,INDCB,(R3),'S'  READ AN INPUT RECORD
      CHECK DUMPREAD                    CHECK I/O COMPLETION
      LR    R4,R3                       SAVE A(BUFFER)
      DO    NEWRECD,R14                 GO PRINT HEADING ON NEW RECORD
      XC    ADDRESS,ADDRESS             ZERO RECORD ADDRESS
      LH    R7,DCBLRECL                 GET L'ACTUAL RECORD
      SR    R6,R6
      D     R6,F32                      DIVIDE BY 32 BYTES/FULL LINE
      STH   R6,REM1                     SAVE # BYTES LESS THAN FULL LIN
      IF (CH,R7,H0),GT,THEN             IF ANY FULL LINES
         DO    LINES,R14                   GO DUMP FULL LINES
      ENDIF                             END IF
      SR    R8,R8
      LH    R9,REM1                     GET # BYTES LESS THAN FULL LINE
      IF (CH,R9,H3),GT,THEN             IF AT LEAST 1 FULLWORD
         D     R8,F4                       DIVIDE BY BYTES/FULLWORD
         STH   R8,REM2                     SAVE BYTES LESS THAN FULLWOR
         LA    R5,OUTHEX                   GET A(OUTPUT PRINT LINE)
         DO    WORDS,R14                   GO DUMP FULLWORDS
         SR    R8,R8
         LH    R9,REM2                     GET BYTES LESS THAN FULLWORD
      ELSE                              ELSE
         LA    R5,OUTHEX                   GET A(OUTPUT PRINT LINE)
      ENDIF                             END IF
      IF (CH,R9,H0),GT,THEN             IF ANY BYTES < A FULLWORD
         LR    R10,R9                      SET UP LENGTH FOR UNPK
         SLL   R9,5
         OR    R9,R10
         EX    R9,UNPACK                   UNPACK HEX DATA
         SRL   R9,4                        SET UP LENGTH FOR TR AND MVC
         BCTR  R9,0
         EX    R9,TRANS1                   TRANSLATE TO EBCDIC
         EX    R9,MOVE1                    MOVE TO OUTPUT BUFFER
      ENDIF                             END IF
      LH    R9,REM1                     GET # BYTES < A FULL LINE
      IF (CH,R9,H0),GT,THEN             IF ANY BYTES < A FULL LINE
         BCTR  R9,0                        SET UP LENGTH FOR MVC AND TR
         LA    R5,OUTEBCD
         MVI   0(R5),ASTERIK               MOVE '*' TO BUFFER
         EX    R9,MOVE2                    MOVE DATA TO BUFFER
         IF (CLC,ASCII,OPTION),EQ,THEN     IF INPUT IS ASCII       Y218
            EX    R9,TRANSASC                 USE ASCII TR TABLE   Y218
         ELSE                              ELSE                    Y218
            EX    R9,TRANSEBC                 USE EBCDIC TR TABLE  Y218
         ENDIF                             END IF                  Y218
         AH    R5,REM1
         MVI   1(R5),ASTERIK               MOVE '*' TO END OF BUFFER
         UNPK  UNPKDATA(7),ADDRESS+1(4)    CONVERT ADDRESS
         TR    UNPKDATA(6),HEX-240                TO HEX EBCDIC
         MVC   OUTADDR,UNPKDATA            MOVE TO OUTPUT
         DO    PRINT,R14                   GO PRINT BUFFER
         MVC   OUTPUT+1(120),OUTPUT        CLEAR OUTPUT BUFFER
      ENDIF                             END IF
      L     R14,DUMPSAVE                RESTORE RETURN ADDRESS
   ENDSEG DUMPRECD                   RETURN
         TITLE ' N E W R E C D  SUBROUTINE'
******************************************************************
*                                                                *
*    N E W R E C D                                               *
*                                                                *
*       THIS SUBROUTINE  IS CALLED AFTER EACH NEW PHYSICAL       *
*       RECORD  IS READ.  THE PURPOSE  IS TO SEPERATE EACH       *
*       RECORD WITH  A RECORD  HEADER  WHICH  CONTAINS THE       *
*       RECORD  NUMBER AND  RECORD LENGTH  IN DECIMAL  AND       *
*       HEXADECIMAL, THE  DATASET NAME, THE MEMBER NAME IF       *
*       A MEMBER OF A PDS, AND THE VOLUME NAME.                  *
*                                                                *
******************************************************************
                                                                SPACE 1
   BGNSEG NEWRECD,R14              ENTRY POINT TO 'NEWRECD'
      ST    R14,NEWSAVE               SAVE RETURN ADDRESS
      L     R1,RECORD                 GET RECORD COUNT
      LA    R1,1(R1)                  ADD 1
      ST    R1,RECORD                 SAVE NEW RECORD COUNT
      LH    R1,LINECNT                GET LINE COUNTER
      LA    R1,3(R1)                  ADD 3 TO LINE COUNTER
      STH   R1,LINECNT                SAVE NEW LINE COUNTER
      IF (CH,R1,H62),GT,THEN          IF NEW COUNT > 62
         MVC   LINECNT,H5                SET LINE COUNT TO 5
                                                                SPACE 1
         LH    R1,PAGE                   GET PAGE NUMBER
         LA    R1,1(R1)                  ADD 1
         STH   R1,PAGE                   SAVE NEW PAGE NUMBER
         CVD   R1,DOUBLE                 CONVERT
         UNPK  OUTPAGE(3),DOUBLE+6(2)       PAGE NUMBER
         OI    OUTPAGE+2,ZONE                  FOR PRINT
                                                                SPACE 1
         L     R1,RECORD                 GET RECORD NUMBER
         CVD   R1,DOUBLE                 CONVERT
         UNPK  PAGERCRD(5),DOUBLE+5(3)      RECORD NUMBER
         OI    PAGERCRD+4,ZONE                 FOR PRINT
                                                                SPACE 1
         L     R1,RECORD                 GET RECORD NUMBER
         BCTR  R1,0                      GOTO REL. REC
         CVD   R1,DOUBLE                 CONVERT
         UNPK  PAGERREC(5),DOUBLE+5(3)      RECORD NUMBER
         OI    PAGERREC+4,ZONE                 FOR PRINT
                                                                SPACE 1
         LH    R1,DCBLRECL               GET RECORD LENGTH
         CVD   R1,DOUBLE                 CONVERT RECORD
         UNPK  PAGEDLGH(5),DOUBLE+5(3)      LENGTH TO
         OI    PAGEDLGH+4,ZONE                 DECIMAL
         UNPK  UNPKDATA(5),DCBLRECL(3)   AND TO
         TR    UNPKDATA(4),HEX-240          HEX
         MVC   PAGEHLGH(4),UNPKDATA            EBCDIC
                                                                SPACE 1
         PUT   OUTDCB,NEWPAGE            SKIP TO NEW PAGE
         PUT   OUTDCB,SPACLINE           PRINT A LINE OF SPACES
      ELSE                            ELSE
         L     R1,RECORD                 GET RECORD NUMBER
         CVD   R1,DOUBLE                 CONVERT
         UNPK  OUTRECRD(5),DOUBLE+5(3)      RECORD NUMBER
         OI    OUTRECRD+4,ZONE                 TO DECIMAL
                                                                SPACE 1
         L     R1,RECORD                 GET RECORD NUMBER
         BCTR  R1,0                      GET REL RECORD NUMBER
         CVD   R1,DOUBLE                 CONVERT
         UNPK  OUTRREC(5),DOUBLE+5(3)      RECORD NUMBER
         OI    OUTRREC+4,ZONE                 TO DECIMAL
                                                                SPACE 1
         LH    R1,DCBLRECL               GET RECORD LENGTH
         CVD   R1,DOUBLE                 CONVERT RECORD
         UNPK  RECDLGH(5),DOUBLE+5(3)       LENGTH TO
         OI    RECDLGH+4,ZONE                  DECIMAL
         UNPK  UNPKDATA(5),DCBLRECL(3)   AND TO
         TR    UNPKDATA(4),HEX-240          HEX
         MVC   RECHLGH(4),UNPKDATA             EBCDIC
                                                                SPACE 1
         PUT   OUTDCB,RECLINE            PRINT RECORD HEADER
         PUT   OUTDCB,SPACLINE           PRINT A BLANK LINE
      ENDIF                           ENDIF
      L     R14,NEWSAVE               RESTORE RETURN ADDRESS
   ENDSEG NEWRECD                  RETURN
         TITLE ' L I N E S  SUBROUTINE'
******************************************************************
*                                                                *
*    L I N E S                                                   *
*                                                                *
*       THIS SUBROUTINE  IS CALLED  TO CONVERT 32 BYTES OF       *
*       INPUT TO HEX-EBCDIC  AND FORMAT THIS DATA INTO THE       *
*       OUTPUT PRINT LINE.                                       *
*                                                                *
******************************************************************
                                                                SPACE 1
   BGNSEG LINES,R14                ENTRY POINT TO 'LINES'
      ST    R14,LINESAVE              SAVE RETURN ADDRESS
      UNTIL (BCT,R7),DO               UNTIL ALL FULL PRINT LINES DONE
         UNPK  UNPKDATA(7),ADDRESS+1(4)  CONVERT
         TR    UNPKDATA(6),HEX-240          ADDRESS TO
         MVC   OUTADDR,UNPKDATA                HEX-EBCDIC
         LA    R5,OUTHEX                 GET A(OUTPUT AREA)
         LA    R9,4                      GET NUMBER OF FULLWORDS/LIUUUU
         DO    WORDS,R14                 CALL 'WORDS'
         LA    R5,OUTEBCD                GET A(EBCDIC OUTPUT)
         MVI   0(R5),ASTERIK             MOVE '*' TO OUTPUT
         MVC   1(16,R5),0(R4)            MOVE DATA TO PRINT LINE   Y218
         IF (CLC,ASCII,OPTION),EQ,THEN   IF INPUT IS ASCII         Y218
            TR    1(16,R5),ASCIITB          USE ASCII TR TABLE     Y218
         ELSE                            ELSE                      Y218
            TR    1(16,R5),EBCDICTB         USE EBCDIC TR TABLE    Y218
         ENDIF                           END IF                    Y218
         MVI   17(R5),ASTERIK            MOVE '*' TO OUTPUT        Y218
         DO    PRINT,R14                 CALL 'PRINT'
         MVC   OUTPUT+1(120),OUTPUT      CLEAR PRINT LINE
         LA    R4,16(R4)                 BUMP INPUT POINTER BY 32
         L     R1,ADDRESS                BUMP ADDRESS
         LA    R1,16(R1)                    BY 32
         ST    R1,ADDRESS                      AND SAVE
      ENDDO                           ENDDO
      L     R14,LINESAVE              RESTORE RETURN ADDRESS
   ENDSEG LINES                    RETURN
         TITLE ' W O R D S  SUBROUTINE'
******************************************************************
*                                                                *
*    W O R D S                                                   *
*                                                                *
*       THIS  SUBROUTINE IS  CALLED TO  CONVERT 4 BYTES OF       *
*       INPUT TO  HEX-EBCDIC AND FORMAT THIS DATA INTO THE       *
*       OUTPUT PRINT LINE.                                       *
*                                                                *
******************************************************************
                                                                SPACE 1
   BGNSEG WORDS,R14                ENTRY POINT TO 'WORDS'
      ST    R14,WORDSAVE              SAVE RETURN ADDRESS
      SR    R1,R1                     ZERO WORD COUNTER
      UNTIL (BCT,R9),DO               UNTIL ALL WORDS FORMATTED
         UNPK  UNPKDATA(9),0(5,R3)       CONVERT
         TR    UNPKDATA(8),HEX-240          INPUT DATA
         MVC   0(8,R5),UNPKDATA                TO HEX-EBCDIC
         LA    R3,4(R3)                  BUMP INPUT ADDRESS
         LA    R5,9(R5)                  BUMP OUTPUT ADDRESS
         LA    R1,1(R1)                  BUMP WORD COUNT
         IF (CH,R1,H4),EQ,THEN           IF 4 WORDS FORMATTED
            LA    R5,3(R5)                  SKIP 3 SPACES
         ENDIF                           ENDIF
      ENDDO                           ENDDO
      L     R14,WORDSAVE              RESTORE RETURN ADDRESS
   ENDSEG WORDS                    RETURN
         TITLE ' P R I N T  SUBROUTINE'
******************************************************************
*                                                                *
*    P R I N T                                                   *
*                                                                *
*       THIS  SUBROUTINE IS CALLED TO PRINT ALL HEX-EBCDIC       *
*       PRINT LINES AFTER THEY HAVE BEEN FORMATTED.              *
*                                                                *
******************************************************************
                                                                SPACE 1
   BGNSEG PRINT,R14                ENTRY POINT TO 'PRINT'
      ST    R14,PRINSAVE              SAVE RETURN ADDRESS
      LH    R1,LINECNT                GET LINE COUNT
      LA    R1,1(R1)                  ADD 1
      STH   R1,LINECNT                SAVE NEW LINE COUNT
      IF (CH,R1,H62),GT,THEN          IF NEW COUNT > 62
         MVC   LINECNT,H5                SET LINE COUNT TO 5
                                                                SPACE 1
         LH    R1,PAGE                   GET PAGE NUMBER
         LA    R1,1(R1)                  ADD 1
         STH   R1,PAGE                   SAVE NEW PAGE NUMBER
         CVD   R1,DOUBLE                 CONVERT
         UNPK  OUTPAGE(3),DOUBLE+6(2)       PAGE NUMBER
         OI    OUTPAGE+2,ZONE                  TO DECIMAL
                                                                SPACE 1
         L     R1,RECORD                 GET RECORD NUMBER
         CVD   R1,DOUBLE                 CONVERT
         UNPK  PAGERCRD(5),DOUBLE+5(3)      RECORD NUMBER
         OI    PAGERCRD+4,ZONE                 TO DECIMAL
                                                                SPACE 1
         L     R1,RECORD                 GET RECORD NUMBER
         BCTR  R1,0                      GET RECORD NUMBER
         CVD   R1,DOUBLE                 CONVERT
         UNPK  PAGERREC(5),DOUBLE+5(3)      RECORD NUMBER
         OI    PAGERREC+4,ZONE                 TO DECIMAL
                                                                SPACE 1
         LH    R1,DCBLRECL               GET RECORD LENGTH
         CVD   R1,DOUBLE                 CONVERT RECORD
         UNPK  PAGEDLGH(5),DOUBLE+5(3)      LENGTH TO
         OI    PAGEDLGH+4,ZONE                 DECIMAL
         UNPK  UNPKDATA(5),DCBLRECL(3)   AND
         TR    UNPKDATA(4),HEX-240          TO
         MVC   PAGEHLGH(4),UNPKDATA            HEX-EBCDIC
                                                                SPACE 1
         PUT   OUTDCB,NEWPAGE            SKIP TO NEW PAGE
         PUT   OUTDCB,SPACLINE           PRINT A BLANK LINE
      ENDIF                           ENDIF
      PUT   OUTDCB,OUTPUT             PRINT HEX-EBCDIC OUTPUT
      L     R14,PRINSAVE              RESTORE RETURN ADDRESS
   ENDSEG PRINT                    RETURN
         TITLE 'FILEDUMP - CONSTANTS, STORAGE, EQUATES, ETC.'
DOUBLE   DS    D
                                                                SPACE 1
GETSAVE  DS    F
PARMSAVE DS    F
SKIPSAVE DS    F
DUMPSAVE DS    F
NEWSAVE  DS    F
LINESAVE DS    F
WORDSAVE DS    F
PRINSAVE DS    F
PARMADDR DS    F
ADDRESS  DS    F
BUFFADDR DS    F
SKIPLNGH DS    F                                                   Y218
                                                                SPACE 1
DUMPCNT  DC    F'0'
RECORD   DC    F'0'
F0       DC    F'0'
F4       DC    F'4'
F32      DC    F'16'                                               UUUU
BLANK2   DC    C'  '
CHARC    EQU   C'C'
CHAR0    EQU   C'0'
                                                                SPACE 1
*                                  JOB FILE CONTROL BLOCK          Y152
JFCBPTR  DC    0F'0',X'87',AL3(JFCB)                               Y152
JFCB     DC    0XL176'0'                                           Y152
JFCBDSN  DC    CL44' '                                             Y152
JFCBMEM  DC    CL8' '                                              Y152
         DC    CL66' '                                             Y218
JFCBVOL  DC    CL6' '                                              Y218
JFCBREST DC    XL(176-(*-JFCB))'0'                                 Y218
                                                                SPACE 1
RCRDLNGH DS    H
REM1     DS    H
REM2     DS    H
                                                                SPACE 1
LINECNT  DC    H'62'
PAGE     DC    H'0'
H0       DC    H'0'
H2       DC    H'2'
H3       DC    H'3'
H4       DC    H'4'
H5       DC    H'5'
H62      DC    H'62'
                                                                SPACE 1
MOVEPARM MVC   OPTION(0),0(R4)                                     Y218
UNPACK   UNPK  UNPKDATA(0),0(0,R3)
TRANS1   TR    UNPKDATA(0),HEX-240
MOVE1    MVC   0(0,R5),UNPKDATA
MOVE2    MVC   1(0,R5),0(R4)
TRANSEBC TR    1(0,R5),EBCDICTB                                    Y218
TRANSASC TR    1(0,R5),ASCIITB                                     Y218
TRTCOMMA TRT   0(0,R4),ENDCOMMA                                    Y218
                                                                SPACE 1
PACK     PACK  DOUBLE,0(0,R4)
                                                                SPACE 1
ERROR    DC    AL1(OFF)
STOP     DC    AL1(OFF)
UNPKDATA DS    CL9
HEX      DC    C'0123456789ABCDEF'
OPTION   DS    CL6                                                 Y218
ASCII    DC    C'ASCII'                                            Y218
                                                                SPACE 1
OUTPUT   DC    C' '
OUTADDR  DS    CL6
         DC    5CL1' '
OUTHEX   DC    42CL1' '
OUTEBCD  DC    17CL1' '
         DC    50CL1' '
                                                                SPACE 1
NEWPAGE  DC    C'1'
         DC    CL4'REC '
PAGERCRD DC    CL5' '
         DC    CL1' '                                              Y152
         DC    CL4'REL '                                           Y152
PAGERREC DC    CL5' '                                              Y152
         DC    CL1' '                                              Y152
         DC    CL4'LEN='
PAGEDLGH DC    CL5' '
         DC    CL2' ('
PAGEHLGH DC    CL4' '
         DC    C')'
         DC    CL3' '                                              Y152
PAGEDSN  DC    CL22' '                                             Y152
         DC    CL2' '                                              Y152
         DC    CL5'PAGE '
OUTPAGE  DC    CL3' '
         DC    CL49' '
                                                                SPACE 1
SPACLINE DC    121CL1' '
                                                                SPACE 1
RECLINE  DC    C'0'
         DC    CL4'REC '
OUTRECRD DC    CL5' '
         DC    1CL1' '                                             Y152
         DC    CL4'REL '
OUTRREC  DC    CL5' '
         DC    1CL1' '                                             Y152
         DC    CL4'LEN='
RECDLGH  DC    CL5' '
         DC    CL2' ('
RECHLGH  DC    CL4' '
         DC    C')'
         DC    84CL1' '                                            Y152
                                                                SPACE 1
ENDSPACE DS    0C                                                  Y218
*                 0 1 2 3 4 5 6 7 8 9 A B C D E F                  Y218
         DC    X'00000000000000000000000000000000' 0               Y218
         DC    X'00000000000000000000000000000000' 1               Y218
         DC    X'00000000000000000000000000000000' 2               Y218
         DC    X'00000000000000000000000000000000' 3               Y218
         DC    C' '                                40              Y218
         DC      X'000000000000000000000000000000' 41-4F           Y218
         DC    X'00000000000000000000000000000000' 5               Y218
         DC    X'00000000000000000000000000000000' 6               Y218
         DC    X'00000000000000000000000000000000' 7               Y218
         DC    X'00000000000000000000000000000000' 8               Y218
         DC    X'00000000000000000000000000000000' 9               Y218
         DC    X'00000000000000000000000000000000' A               Y218
         DC    X'00000000000000000000000000000000' B               Y218
         DC    X'00000000000000000000000000000000' C               Y218
         DC    X'00000000000000000000000000000000' D               Y218
         DC    X'00000000000000000000000000000000' E               Y218
         DC    X'00000000000000000000000000000000' F               Y218
*                 0 1 2 3 4 5 6 7 8 9 A B C D E F                  Y218
                                                                SPACE 1
ENDCOMMA DS    0C                                                  Y218
*                 0 1 2 3 4 5 6 7 8 9 A B C D E F                  Y218
         DC    X'00000000000000000000000000000000' 0               Y218
         DC    X'00000000000000000000000000000000' 1               Y218
         DC    X'00000000000000000000000000000000' 2               Y218
         DC    X'00000000000000000000000000000000' 3               Y218
         DC    X'00000000000000000000000000000000' 4               Y218
         DC    X'00000000000000000000000000000000' 5               Y218
         DC    X'0000000000000000000000'           60-6A           Y218
         DC                           C','       ' 6B              Y218
         DC                            X'00000000' 6C-6F           Y218
         DC    X'00000000000000000000000000000000' 7               Y218
         DC    X'00000000000000000000000000000000' 8               Y218
         DC    X'00000000000000000000000000000000' 9               Y218
         DC    X'00000000000000000000000000000000' A               Y218
         DC    X'00000000000000000000000000000000' B               Y218
         DC    X'00000000000000000000000000000000' C               Y218
         DC    X'00000000000000000000000000000000' D               Y218
         DC    X'00000000000000000000000000000000' E               Y218
         DC    X'00000000000000000000000000000000' F               Y218
*                 0 1 2 3 4 5 6 7 8 9 A B C D E F                  Y218
                                                                EJECT ,
EBCDICTB DS    0C                                                  Y218
*                0123456789ABCDEF                                  Y218
         DC    C'................' 0                               Y218
         DC    C'................' 1                               Y218
         DC    C'................' 2                               Y218
         DC    C'................' 3                               Y218
         DC    C' ...............' 4                               Y218
         DC    C'................' 5                               Y218
         DC    C'................' 6                               Y218
         DC    C'................' 7                               Y218
         DC    C'.abcdefghi......' 8                               Y218
         DC    C'.jklmnopqr......' 9                               Y218
         DC    C'..stuvwxyz......' A                               Y218
         DC    C'................' B                               Y218
         DC    C'.ABCDEFGHI......' C                               Y218
         DC    C'.JKLMNOPQR......' D                               Y218
         DC    C'..STUVWXYZ......' E                               Y218
         DC    C'0123456789......' F                               Y218
*                0123456789ABCDEF                                  Y218
                                                                SPACE 1
ASCIITB  DS    0C                                                  Y218
*                0123456789ABCDEF                                  Y218
         DC    C'................' 0                               Y218
         DC    C'................' 1                               Y218
         DC    C' ...............' 2                               Y218
         DC    C'.12.4..78.......' 3                               Y218
         DC    C'...C.EF..IJ.L..O' 4                               Y218
         DC    C'.QR.T..WX.......' 5                               Y218
         DC    C'................' 6                               Y218
         DC    C'................' 7                               Y218
         DC    C'................' 8                               Y218
         DC    C'................' 9                               Y218
         DC    C'................' A                               Y218
         DC    C'0..3.56..9......' B                               Y218
         DC    C'.AB.D..GH..K.MN.' C                               Y218
         DC    C'P..S.UV..YZ.....' D                               Y218
         DC    C'................' E                               Y218
         DC    C'................' F                               Y218
*                0123456789ABCDEF                                  Y218
                                                           SPACE 1
BLOCK    DS    0F
TT       DC    H'0'
RZ       DC    H'0'
RECFMFLG DC    X'00'
SAVE25   DS    4F
HWTRKLN  DC    H'13165'
HW135    DC    H'135'
HW3330   DC    H'3330'
FW32     DC    F'32'
FW1125   DC    F'1125'
DEVTYPE  DC    CL8'EXEC    '
         DC    CL8'DEVTYPE '
         DC    CL8'DD      '
         DC    CL8'INDCB   '
         DC    8XL1'FF'
CFDUMP   DC    CL8'FDUMP'
WKMACR DS 20F
MYPARM   DS    A
MYPARMS  DS    H
MYPARMC  DS    CL24
                                                           SPACE 1
OFF      EQU   0
ON       EQU   1
DISK     EQU   X'20'
COMMA    EQU   C','
ASTERIK  EQU   C'*'
ZONE     EQU   X'F0'
OPEN     EQU   X'10'
                                                           SPACE 1
INPTERR  DS    0D
         PUT   OUTDCB,INPTMSG
         B CLOSE
         PRINT GEN
         TITLE 'FILEDUMP - I N D C B'
INDCB    DCB   DDNAME=INDCB,DEVD=DA,DSORG=PS,EODAD=EOF,MACRF=(RP),     X
               EXLST=JFCBPTR,SYNAD=INPTERR                 Y152
                                                           SPACE 1
         TITLE 'FILEDUMP - O U T D C B'
OUTDCB   DCB   DDNAME=OUTDCB,DSORG=PS,MACRF=(PM),RECFM=FBA,            X
               LRECL=121,BLKSIZE=121
                                                           SPACE 1
         TITLE 'ERROR MESSAGES'
COREMSG  DS    0CL121
         DC    C'1'
         DC    C'EXECUTION TERMINATED, NO STORAGE AVAILABLE FOR BUFFER'
         DC    67CL1' '
                                                                SPACE 1
PARMSMSG DS    0CL121
         DC    C'1'
         DC    C'EXECUTION TERMINATED, INCORRECT INPUT PARAMETERS     '
         DC    67CL1' '
                                                                SPACE 1
OPENMSG  DS    0CL121
         DC    C'1'
         DC    C'EXECUTION TERMINATED, INPUT FILE FAILED TO OPEN      '
         DC    67CL1' '
                                                           SPACE 1
INPTMSG  DS    0CL121
         DC    C'1'
         DC    C'EXECUTION TERMINATED, INPUT FILE READ ERROR          '
         DC    67CL1' '
                                                           SPACE 1
                                                           SPACE 1
         TITLE 'FILEDUMP - C R E G S'
         CREGS
                                                           SPACE 1
         TITLE 'FILEDUMP - P A R M S E C T'
PARMSECT DSECT
PARMLGTH DS    H
PARMDATA DS    H
         TITLE 'FILEDUMP - D C B D'
         PRINT NOGEN
         DCBD  DSORG=BS,DEVD=DA
         END
