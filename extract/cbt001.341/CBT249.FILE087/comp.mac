*  COMP   -   CALLED BY COMPEXP   REENTRANT DOES NO GETMAINS
*             COMPRESSION FUNCTION OF IMS COMPRESSION EXIT
*             CALLED BY ENTRY CODE X'00' IN REGISTER 6
COMP     CSECT
INPTR    EQU   2                       PTR TO SOURCE SEGMENT
INMAX    EQU   4                       PTR TO END OF SOURCE SEGMENT
OUTPTR   EQU   3                       PTR TO RECEIVING AREA
OUTMAX   EQU   12                      PTR TO END OF RECEIVING AREA
LHS      EQU   6                       EVEN BUFFER REGISTER
RHS      EQU   7                       ODD BUFFER REGISTER
#LHS     EQU   8                       #BITS REMAINING IN BUF REG
#RHS     EQU   9                       #BITS TO BE ADDED TO LHS
CTAB     EQU   10                      PTR TO COMPRESSION TABLE
PREV     EQU   11                      TYPE OF LAST CHAR PROCESSED
CTYP     EQU   14                      PTR TO TYPE TABLE
         STM   0,14,12(13)             STORE CALLING REGS; NO SAVE AREA
         USING COMP,15                 REG 15 IS BASE REGISTER
         TM    20(5),X'04'
         BO    VARIABLE
         LH    INMAX,24(5)    LENGTH FROM COMPRESSION CSECT
         LA    OUTMAX,2(INMAX,OUTPTR)  POINT AT END OF OUTPUT AREA
         ALR   INMAX,INPTR             POINT AT END OF INPUT AREA
         LA    OUTPTR,2(OUTPTR)        SKIP OVER LENGTH FIELD
VARRET   DS    0H
         TM    20(5),X'08'    IS THERE A KEY FIELD
         BZ    NOKEY
         SR    9,9
         IC    9,21(5)        KEY EXECUTABLE LENGTH
         LA    9,1(9)         KEY REAL LENGTH
         AH    9,22(5)        ADD KEY DISP
         TM    20(5),X'04'    IF VARIABLE LENGTH
         BZ    F              THEN
         SH    9,=H'2'        DECREMENT OFFSET BY 2
F        DS    0H
         LR    11,9                    MOVE IN SEQUENCE FIELD
         LR    8,OUTPTR                WITH
         LR    10,INPTR                AN MVCL
         ALR   OUTPTR,9
         ALR   INPTR,9
         MVCL  8,10
NOKEY    DS    0H
         SR    LHS,LHS                 CLEAR BUFFER
         LA    #LHS,32                 32 AVAILABLE BITS
         L     CTAB,=V(CTABLE)         POINT TO COMPRESSION TABLE
         L     CTYP,=V(CTYPE)          POINT TO TYPE TABLE
         SR    PREV,PREV               SET LAST CHAR TYPE TO 0
CHARLOOP DS    0H
         CR    INPTR,INMAX             AT END OF SEGMENT?
         BNL   ENDIN
         SR    RHS,RHS                 CLEAR BUFFER REG
         IC    RHS,0(INPTR)            GET NEXT CHAR IN INPUT
         AR    RHS,RHS                 DOUBLE FOR INDEX INTO HALFWORD
         AR    RHS,PREV                LOOK IN APPROPRIATE COMP TABLE
         LH    RHS,0(RHS,CTAB)         GET BIT REPRESENTATION OF CHAR
         N     RHS,=X'0000FFFF'        UNSIGNED HALFWORD
         LR    1,RHS                   A 1 BIT PRECEEDS THE FIRST BIT
         LA    0,B'0010'                 OF THE BIT REP. THIS BXLE
         SR    #RHS,#RHS                 LOOP COUNTS THE NUMBER OF
BITLOOP  DS    0H                        BITS IN THE REPRESENTATION
         LA    #RHS,1(#RHS)
         BXLE  0,0,BITLOOP             WHEN REG 0 > REG 1 WE R @ START
         LCR   1,#RHS                  CALCULATE # BITS TO REMOVE
         SLL   RHS,32(1)               LEFT DIRECT BIT STRING
         CR    #LHS,#RHS               ENOUGH ROOM IN BUFFER?
         BNL   ENUF                    BRANCH IF SO
         SLDL  LHS,0(#LHS)             PUT AS MANY BITS AS POS INTO BUF
         SR    #RHS,#LHS               SUBTRACT FROM EFFECTIVE LEN
         ST    LHS,0(OUTPTR)           PUT BUFFER IN OUTPUT AREA
         LA    OUTPTR,4(OUTPTR)        INCR PTR
         CR    OUTPTR,OUTMAX           HAVE WE EXCEEDED OUT AREA LEN
         BNL   TOOBIG                    BRANCH IF SO
         LA    #LHS,32                 32 BITS AVAILABLE IN BUFFER
ENUF     DS    0H
         SR    #LHS,#RHS               DECREMENT BUFFER SPACE
         SLDL  LHS,0(#RHS)             MOVE IN BIT STRING
         SR    PREV,PREV               COMPUTE TYPE
         IC    RHS,0(INPTR)             OF CHARACTER
         IC    PREV,0(RHS,CTYP)          AND USE APPROP COMP TABLE
         SLL   PREV,9         MULTIPLY BY 512; LENGTH OF CTAB
         LA    INPTR,1(INPTR)          INCREMENT SOURCE PTR
         B     CHARLOOP                GO BACK FOR MORE
ENDIN    DS    0H
         SLL   LHS,0(#LHS)             LEFT DIRECT BUFFER
         ST    LHS,0(OUTPTR)           STORE
         SRL   #LHS,3                  CALCULATE # BITS
         LA    OUTPTR,4(OUTPTR)          REQUIRED TO HOLD
         SR    OUTPTR,#LHS                 BITS IN BUFFER
         CR    OUTPTR,OUTMAX           ARE WE TOO BIG?
         BNL   TOOBIG
         S     OUTPTR,12+4*OUTPTR(13)  CALCULATE LENGTH OF COMP SEG
         L     9,12+4*OUTPTR(13)       RESTORE PTR TO OUTPUT AREA
         STH   OUTPTR,0(9)             STORE LENGTH
QUIT     DS    0H
         SR    15,15                   RETURN CODE 0
         LM    0,14,12(13)             RESTORE REGS
         BR    14                      QUIT
*
*  WE GET HERE IF A SEGMENT CANNOT BE COMPRESSED; IF A
*  COMPRESSED FIXED LENGTH SEGMENT EXCEEDS THE ORIGINAL LENGTH,
*  OR IF A COMPRESSED VARIABLE LENGTH SEGMENT EXCEEDS THE MAXIMUM
*  LENGTH SPECIFIED IN THE DBD.
*  THE FOLLOWING ACTION IS TAKEN;
*     FIXED LENGTH:  THE SEGMENT IS MOVED UNCHANGED TO THE OUTPUT
*                    AREA; THE EXPANSION RECOGNIZES AN UNCOMPRESSED
*                    SEGMENT BY THE FACT THAT ITS LENGTH IS EQUAL
*                    TO THAT IN THE DBD.
*     VARIABLE LENGTH:  THE SEGMENT IS MOVED TO THE OUTPUT AREA,
*                       THE LENGTH OF THE COMPRESSED SEGMENT WILL
*                       BE EQUAL TO THE MAX LENGTH SPECIFIED
*                       IN THE DBD.  THE ACTUAL LENGTH IS STORED IN
*                       THE LAST 2 BYTES (SINCE WE ARE 2 BYTES LONGER
*                       WE CANNOT SUPPORT SEGMENTS LONGER THAN MAXLEN-2
*                       ... IF WE ARE PASSED A SEGMENT LONGER THAN
*                       MAXLEN-2 AND IT CANNOT BE COMPRESSED, WE PLACE
*                       9999 IN THE OUTPUT LENGTH FIELD CAUSING THE
*                       APPLICATION TO ABEND WITH A U863.
TOOBIG   DS    0H
         LM    0,14,12(13)             SET UP REGS AS WHEN ENTERED
         TM    20(5),X'04'             VARIABLE LENGTH SEGMENT?
         BO    VAR2BIG
         LR    8,INPTR                 SET
         LH    9,24(5)                   UP
         LR    11,9                       REGS
         LA    10,2(OUTPTR)                AND
         MVCL  10,8                         MOVE IN SEGMENT ASIS
         LH    9,24(5)                 LENGTH FROM COMPRESSION CSECT
         LA    9,2(9)                  ADD 2 FOR LENGTH FIELD LENGTH
         STH   9,0(OUTPTR)             STORE LENGTH IN OUTPUT AREA
         LM    8,11,12+4*8(13)         RESTORE REGS CLOBBERED
         BR    14                      QUIT
VAR2BIG  DS    0H
         LA    8,2(INPTR)              SKIP LENGTH FIELD
         LA    10,2(OUTPTR)            SKIP LENGTH FIELD
         LH    9,0(INPTR)              GET LENGTH
         LH    11,24(5)                GET MAX LENGTH FROM COMP CSECT
         SH    11,=H'2'                JULY 7, 1978
         CR    11,9                    JULY 7, 1978
         BNL   LENGTHOK                JULY 7, 1978
         MVC   0(2,OUTPTR),=H'9999'    JULY 7, 1978
         LM    8,11,12+4*8(13)         JULY 7, 1978
         BR    14                      JULY 7, 1978
LENGTHOK DS    0H                      JULY 7, 1978
         STH   9,0(11,OUTPTR)          STORE REAL LENGTH AT END
         LA    11,2(11)                ADD 2 TO MAX LEN
         STH   11,0(OUTPTR)            THIS IS "COMPRESSED" LENGTH
         SH    9,=H'2'
         LR    11,9
         MVCL  10,8                    MOVE IN THE SEGMENT
         LM    8,11,12+4*8(13)         RESTORE CLOBBERED REGS
         BR    14                      QUIT
VARIABLE DS    0H
         LH    OUTMAX,24(5)            GET MAX LEN FROM COMP CSECT
         BCTR  OUTMAX,0
         ALR   OUTMAX,OUTPTR           POINT @ END OF OUTPUT AREA
         LH    INMAX,0(INPTR)          GET SEGMENT LENGTH
         ALR   INMAX,INPTR             POINT @ END OF SEGMENT
         LA    INPTR,2(INPTR)          SKIP LENGTH FIELD
         LA    OUTPTR,2(OUTPTR)        SKIP LENGTH FIELD
         B     VARRET
         END
