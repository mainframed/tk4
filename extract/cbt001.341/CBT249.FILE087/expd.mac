*   EXPD - ROUTINE CALLED BY COMPEXP IF ENTERED WITH CODE X'04'
*          IN REGISTER 6;  ROUTINE IS REENTRANT AND DOES NO
*          GETMAINS  THEREFORE HAS NO SAVE AREA AND CANNOT ISSUE
*          SUBROUTINE CALLS;  ALL DATA ARE STORED IN REGISTERS
*      THE MACRO BITS EXPANDS TO PROCESS IN TURN THE 8 BITS IN
*      EVERY COMPRESSED BYTE
*
         MACRO
         BITS
         LCLA  &J,&I
&I       SETA  2
.LOOP    ANOP
         ALR   MASK,MASK               TEST LEFTMOST BIT
         BC    4+8,ZERO&I              BRANCH IF ZERO
&J       SETA  (&I-2)
         AH    PTR,&J.(PTR)            GO RIGHT IN TREE
ZERO&I   DS    0H
         CLI   &I.(PTR),X'80'          ARE WE AT A LEAF
         BNL   LEAF&I                  BRANCH IF SO
LRET&I   DS    0H
&I       SETA  (&I+2)
         AIF   (&I LE 16).LOOP
         LA    PTR,16(PTR)             FIX UP TREE PTR FOR NEXT BYTE
         B     CHARLOOP                GO GET ANOTHER COMPRESSED BYTE
&I       SETA  2
.LOOP1   ANOP
LEAF&I   DS    0H
         MVC   0(1,OUTPTR),&I+1(PTR)   MOVE IN THE CHARACTER
         LA    OUTPTR,1(OUTPTR)        INCREMENT OUTPUT PTR
         IC    ZREG,&I.(PTR)           GET CHARACTER TYPE
         L     PTR,ZTAB-128(ZREG)      AND GET ADDR OF APPROP TREE
&J       SETA  (16-&I)
         LA    PTR,&J.(TREE,PTR)       USE OFFSET ACCORDING TO BIT#
         B     LRET&I                  CONTINUE PROCESSING
&I       SETA  (&I+2)
         AIF   (&I LE 16).LOOP1
         MEND
EXPD     CSECT                         CALLED BY COMPEXP
INPTR    EQU   2                       PTR TO COMPRESSED SEGMENT
INMAX    EQU   4                       PTR TO END OF COMPRESSED SEG
OUTPTR   EQU   3                       PTR TO RECEIVING AREA
OUTMAX   EQU   12                      END OF RECEIVING AREA
MASK     EQU   9                       INPUT BUFFER
TREE     EQU   10                      PTR TO EXPANSION TREE
PTR      EQU   11                      PTR WITHIN EXPANSION TREE
ZREG     EQU   14
         STM   0,14,12(13)             SAVE REGS
         USING EXPD,15                 15 IS BASE REG; NO SAVE AREA
         SLR   ZREG,ZREG
         TM    20(5),X'04'             VARIABLE LENGTH SEGMENT?
         BO    VARIABLE
         LH    INMAX,0(INPTR)          GET COMPRESSED LENGTH
         LA    INPTR,2(INPTR)          SKIP OVER LENGTH FIELD
         SH    INMAX,=H'2'             GET ACTUAL DATA LENGTH
         CH    INMAX,24(5)    IS LENGTH SAME AS ORIGINAL
         BE    ASIS
         ALR   INMAX,INPTR             POINT TO END OF INPUT STRING
VARRET   DS    0H
         TM    20(5),X'08'    IS THERE A KEY FIELD
         BZ    NOKEY
         SR    9,9                     MOVE
         IC    9,21(5)        KEY EXECUTABLE LENGTH
         LA    9,1(9)         KEY REAL LENGTH
         AH    9,22(5)                   IN
         TM    20(5),X'04'    IF VARIABLE LENGTH
         BZ    F              THEN
         SH    9,=H'2'        DECREMENT OFFSET BY 2
F        DS    0H
         LR    11,9                    MOVE
         LR    8,OUTPTR                  IN
         LR    10,INPTR                    SEQUENCE FIELD
         ALR   OUTPTR,9                      ASIS
         ALR   INPTR,9
         MVCL  8,10
NOKEY    DS    0H
         L     TREE,=V(CTREE)          POINT AT EXPANSION TREES
         LR    PTR,TREE                START AT 16 BEFORE FIRST TREE
         SH    TREE,=H'16'
         B     START
CHARLOOP DS    0H
         LA    INPTR,1(INPTR)          GET NEXT CHAR
START    DS    0H
         CR    INPTR,INMAX             END OF INPUT?
         BNL   ENDIN
         IC    MASK,0(INPTR)           GET CHAR INTO REG
         SLL   MASK,24                 LEFT DIRECT
         BITS
ENDIN    DS    0H
         TM    20(5),X'04'             VARIABLE LENGTH?
         BZ    QUIT           IF FIXED LEN WE R DONE
         SL    OUTPTR,12+4*OUTPTR(13)  CALC SEGMENT LENGTH
         L     9,12+4*OUTPTR(13)       RESTORE PTR TO BEGIN OF OUTPUT
         STH   OUTPTR,0(9)             STORE LENGTH
QUIT     DS    0H
         SR    15,15                   RETURN CODE 0
         LM    0,14,12(13)             RESTORE REGS
         BR    14                      QUIT
ZTAB     DC    A(0,X'3FE',2*X'3FE',3*X'3FE',4*X'3FE',5*X'3FE')
ASIS     DS    0H
         LR    8,OUTPTR                SEGMENT IS NOT COMPRESSED
         LR    9,INMAX                 WE MERELY COPY
         LR    11,INMAX                WITH MVCL
         LR    10,INPTR
         MVCL  8,10
         LM    0,14,12(13)             RESTORE REGS
         BR    14                      QUIT
VARIABLE DS    0H
         LH    INMAX,0(INPTR)          GET SEGMENT LENGTH
*        SH    INMAX,=H'2'             UNCOMPRESSED WILL BE 2 > MAX LEN
         CH    INMAX,24(5)             COMPARE WITH COMPRESSION CSECT
         BE    VARASIS                 BRANCH IF NOT COMPRESSED
         LA    INMAX,0(INMAX,INPTR)    POINT AT END OF INPUT
         LA    INPTR,2(INPTR)          SKIP LENGTH FIELD
         LA    OUTPTR,2(OUTPTR)        SKIP LENGTH FIELD
         B     VARRET                  GO AND EXPAND THE SEGMENT
VARASIS  DS    0H
         SH    INMAX,=H'2'             JULY 7,1978
         LH    9,0(INPTR,INMAX)        GET ACTUAL SEGMENT LENGTH
         STH   9,0(OUTPTR)             STOR IN OUTPUT LENGTH FIELD
         SH    9,=H'2'                 DATA LENGTH
         LR    11,9                    MOVE IN SEGMENT
         LA    8,2(OUTPTR)                WITH
         LA    10,2(INPTR)                  MVCL
         MVCL  8,10
         LM    0,14,12(13)             RESTORE REGS
         BR    14                      QUIT
         END
