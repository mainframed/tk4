REFM TITLE '                        TSO FORMAT COMMAND REFORMAT MODULE'
***********************************************************************
*                                                                     *
* DEFINE MACRO TO GENERATE SYMBOLIC REGISTER EQUATES                  *
*                                                                     *
***********************************************************************
         SPACE 1
         MACRO
         SETR  ,
         LCLA  &A
.L       AIF   (&A GT 15).X
R&A      EQU   &A
&A       SETA  &A+1
         AGO   .L
.X       MEND
         SPACE 5
***********************************************************************
*                                                                     *
* DEFINE PROGRAM CSECT                                                *
*                                                                     *
***********************************************************************
         SPACE 1
TNPRINTY CSECT
         SPACE 1
         SETR  ,                   DEFINE SYMBOLIC REGISTERS
         SPACE 1
***********************************************************************
*                                                                     *
* SAVE CALLER'S REGISTERS                                             *
*                                                                     *
***********************************************************************
         SPACE 1
         SAVE  (14,12),,TSO-FORMAT-COMMAND-REFORMAT-MODULE
         SPACE 1
***********************************************************************
*                                                                     *
* ESTABLISH PROGRAM ADDRESSABILITY                                    *
*                                                                     *
***********************************************************************
         SPACE 1
         LR    R12,R15             COPY PROGRAM ADDRESS TO R12
         USING TNPRINTY,R12        ESTABLISH PROGRAM ADDRESSABILITY
         SPACE 1
***********************************************************************
*                                                                     *
* ESTABLISH SAVE AREA CHAINING CONVENTIONS                            *
*                                                                     *
***********************************************************************
         SPACE 1
         LA    R15,S               LOAD ADDRESS OF NEW SAVE AREA
         ST    R15,8(,R13)         ESTABLISH FORWARD POINTER IN        ?
                                    CALLER'S SAVE AREA
         ST    R13,4(,R15)         ESTABLISH BACK POINTER IN NEW SAVE  ?
                                    AREA
         LR    R13,R15             ESTABLISH NEW SAVE AREA ADDRESS
         SPACE 1
***********************************************************************
*                                                                     *
* IF A PARAMETER STRING IS PRESENT, EXTRACT THE NEW PAGE WIDTH AND    *
* LINE WIDTH PARAMETERS                                               *
*                                                                     *
***********************************************************************
         SPACE 1
         L     R1,0(,R1)           LOAD ADDRESS OF PARM STRING FROM    ?
                                    PARM ADCON LIST
         LH    R15,0(,R1)          LOAD LENGTH OF PARMS
         LTR   R15,R15             TEST IF PARMS DEFINED
         BZ    NOPARMS             BR IF NOT
         SPACE 1
***********************************************************************
*                                                                     *
* A PARAMETER STRING IS PRESENT. SETUP R14, R15 AND R1 TO SCAN        *
* ACROSS THE PARAMETERS AND R2, R3 AND R4 TO POINT TO THE OUTPUT      *
* OUTPUT RESULT AREA.                                                 *
*                                                                     *
***********************************************************************
         SPACE 1
         LA    R14,1               LOAD BXLE INCREMENT
         LA    R15,1(R15,R1)       POINT TO LAST CHARACTER IN PARMS
         LA    R1,2(,R1)           POINT TO FIRST CHARACATER OF PARMS
         LM    R2,R4,=A(4,LWIDTH,PWIDTH) LOAD RESULT TABLE LIMITS
         SPACE 1
***********************************************************************
*                                                                     *
* LOCATE A DELIMITER OR INVALID PARAMETER IN THE INPUT PARAMETERS.    *
* R5 WILL POINT TO THE START OF THE CHARACTER STRING CURRENTLY BEING  *
* SCANNED, AND R1 WILL POINT TO THE CURRENT CHARACTER IN THE STRING.  *
*                                                                     *
***********************************************************************
         SPACE 1
STARTPRM LR    R5,R1               SAVE CURRENT POSITION IN R5
         SPACE 1
TESTDLM  CLI   0(R1),C','          TEST IF WE'VE GOT A DELIMITER
         BE    GOTDLM              BR IF SO
         CLI   0(R1),C'0'          TEST IF NUMERIC
         BL    BADPARM             BR IF SO
         CLI   0(R1),C'9'          CONTINUE NUMERIC TEST
         BH    BADPARM             BR IF NON-NUMERIC
         BXLE  R1,R14,TESTDLM      OTHERWISE, KEEP LOOKING
         SPACE 1
***********************************************************************
*                                                                     *
* A DELIMITER (OR THE END OF THE PARAMETERS) HAS BEEN FOUND.          *
* TRANSLATE THE INPUT PARAMTER TO BINARY AND STORE IN THE PAGE        *
* WIDTH OR LINE WIDTH WORD.                                           *
*                                                                     *
***********************************************************************
         SPACE 1
GOTDLM   LR    R6,R1               COPY ADDRESS OF DELIMITER OR END OF ?
                                    PARM STRING TO R6
         SR    R6,R5               COMPUTE LENGTH OF STRING
         BZ    NEXTPARM            IGNORE NULL PARM
         BCTR  R6,0                REDUCE LENGTH BY ONE TO ADJUST FOR  ?
                                    HARDWARE
         EX    R6,CNVT             CONVERT PARM FROM ZONED DECIMAL TO  ?
                                    PACKED DECIMAL
         CVB   R0,DWORK            CONVERT PARM FROM PACKED DECIMAL TO ?
                                    BINARY
         ST    R0,0(,R4)           AND SAVE IN RESULT AREA
         SPACE 1
***********************************************************************
*                                                                     *
* WE HAVE FINISHED PROCESSING A PARAMETER.  START THE NEXT PARAMETER  *
* BY INCREMENTING THE PARM AREA CHARACTER POINTER PAST THE DELIMITER  *
* AND THE OUTPUT AREA POINTER TO THE NEXT OUTPUT AREA.                *
*                                                                     *
***********************************************************************
         SPACE 1
NEXTPARM BXH   R1,R14,NOPARMS      UP PARM AREA POINTER PAST DELIMITER
         BXLE  R4,R2,STARTPRM      AND CONTINUE
         SPACE 1
***********************************************************************
*                                                                     *
* SETUP OFFSET TO CENTER OF LINE                                      *
*                                                                     *
***********************************************************************
         SPACE 1
NOPARMS  L     R9,PWIDTH           LOAD PAGE WIDTH
         S     R9,LWIDTH           SUBTRACT LINE WIDTH
         BM    BADPARM             BR IF LINE WIDTH GREATER THAN PAGE  ?
                                    WIDTH
         SRL   R9,1                DIVIDE DIFFERENCE BETWEEN PAGE      ?
                                    WIDTH AND LINE WIDTH BY 2 TO GET   ?
                                    CENTERING CONSTANT
         LA    R9,OUTAREA(R9)      PLACE START OF OUTPUT IMAGE IN R9
         SPACE 1
***********************************************************************
*                                                                     *
* OPEN INPUT DATA SET                                                 *
*                                                                     *
***********************************************************************
         SPACE 1
         LA    R2,OPENLST1         LOAD ADDRESS OF OPEN PARMS
         BAL   R11,OPENTST         OPEN AND VERIFY OPEN OK
         SPACE 1
***********************************************************************
*                                                                     *
* SETUP OUTPUT DATA SET DCB ATTRIBUTES                                *
*                                                                     *
***********************************************************************
         SPACE 1
         LA    R1,OUTDCB           LOAD ADDRESS OF OUTPUT DCB
         SPACE 1
         USING IHADCB,R1           ESTABLISH DCB ADDRESSABILITY
         SPACE 1
         MVC   DCBRECFM,INDCB+RECFM COPY RECFM
         MVC   DCBLRECL,INDCB+LRECL COPY LRECL
         MVC   DCBBLKSI,INDCB+BLKSI COPY BLOCK SIZE
         NI    DCBRECFM,B'11111001' TURN OFF CONTROL CHARACTER         ?
                                    ATTRIBUTE
         OI    DCBRECFM,B'00000010' TURN ON 'M' CONTROL CHARACTER      ?
                                    ATTRIBUTE
         SPACE 1
         DROP  R1                  KILL DCB ADDRESSABILITY
         SPACE 1
***********************************************************************
*                                                                     *
* OPEN OUTPUT DATA SET                                                *
*                                                                     *
***********************************************************************
         SPACE 1
         LA    R2,OPENLST2         LOAD ADDRESS OF SECOND OPEN PARMS
         BAL   R11,OPENTST         OPEN AND VERIFY OPEN OK
         EJECT
***********************************************************************
*                                                                     *
* GET NEXT INPUT LINE                                                 *
*                                                                     *
***********************************************************************
         SPACE 1
NEXTLINE GET   INDCB               READ A LOGICAL RECORD
         SPACE 1
***********************************************************************
*                                                                     *
* MOVE INPUT LINE TO OUTPUT AREA TO CENTER THE LINE IN THE OUTPUT     *
* PAGE.                                                               *
*                                                                     *
***********************************************************************
         SPACE 1
         LR    R14,R9              COPY OUTPUT AREA START TO R14
         LH    R15,0(,R1)          LOAD LENGTH+5 TO MOVE FROM RDW
         SH    R15,=H'5'           REDUCE LENGTH BY 5
         LR    R3,R15              COPY LENGTH TO R3
         MVC   OUTCC,4(R1)         COPY OUTPUT CONTROL CHARACTER
         LA    R0,5(,R1)           POINT R0 TO FIRST BYTE IN FROM AREA
         LR    R1,R15              COPY LENGTH TO MOVE TO R1
         MVCL  R14,R0              COPY INPUT LINE TO OUTPUT AREA
         SPACE 1
***********************************************************************
*                                                                     *
* LOCATE A LEADING LOWER CASE 'O' THAT IS SERVING AS A BULLET.        *
* TRANSLATE THE BULLET TO A TN TRAIN SOLID CIRCLE BULLET.             *
*                                                                     *
***********************************************************************
         SPACE 1
         BCTR  R3,0                REDUCE LENGTH BY 1
         EX    R3,SCANO            SCAN FOR LOWER CASE O
         BZ    PUTLINE             BR IF NO LOWER CASE O'S IN LINE
         CLI   1(R1),C' '          DOES A BLANK FOLLOW THE LOWER CASE O
         BNE   PUTLINE             BR IF NOT
         BCTR  R1,0                BACKUP 1 BYTE
         CLI   0(R1),C' '          DOES A BLANK PRECEED THE O
         BNE   PUTLINE             BR IF NOT
         MVI   1(R1),X'AF'         REPLACE LOWER CASE O WITH A SOLID   ?
                                    CIRCLE
         SPACE 1
***********************************************************************
*                                                                     *
* COMPUTE THE LENGTH OF THE OUTPUT LINE, STORE THE LENGTH IN THE      *
* OUTPUT LINE'S RECORD DESCRIPTOR WORD, AND WRITE THE LINE.           *
*                                                                     *
***********************************************************************
         SPACE 1
PUTLINE  LA    R0,OUTRDW           LOAD ADDRESS OF OUTPUT AREA'S RDW
         SR    R14,R0              COMPUTE LENGTH OF LINE
         STH   R14,OUTRDW          SAVE IN RECORD DESCRIPTOR WORD
         PUT   OUTDCB,(0)          WRITE OUTPUT RECORD
         B     NEXTLINE            AND CONTINUE
         EJECT
***********************************************************************
*                                                                     *
* END OF DATA IN THE INPUT DATA SET -- QUIT BY CLOSING THE DATA SETS  *
* AND RETURNING TO THE CALLER                                         *
*                                                                     *
***********************************************************************
         SPACE 1
INPUTEOF LA    R2,OPENLST1         LOAD ADDRESS OF INPUT OPEN PARMS
         BAL   R11,CLSFREE         CLOSE THE INPUT DCB AND FREE ITS    ?
                                    BUFFER POOL
         LA    R2,OPENLST2         LOAD ADDRESS OF OUTPUT OPEN PARMS
         BAL   R11,CLSFREE         CLOSE THE OUTPUT DCB AND FREE ITS   ?
                                    BUFFER POOL
         SPACE 1
         L     R13,4(,R13)         LOAD ADDRESS OF CALLER'S SAVE AREA
         RETURN (14,12),T,RC=0     RETURN TO CALLER
         SPACE 1
***********************************************************************
*                                                                     *
* OPEN DATA SETS AND VERIFY THEY'RE OPEN -- R2 POINTS TO OPEN PARMS,  *
* R11 POINTS TO NORMAL EXIT                                           *
*                                                                     *
***********************************************************************
         SPACE 1
OPENTST  OPEN  MF=(E,(R2))         OPEN DCB'S
OPENCHK  L     R1,0(,R2)           LOAD DCB ADDRESS FROM OPEN PARMS
         SPACE 1
         USING IHADCB,R1           SETUP DCB ADDRESSABILITY
         SPACE 1
         TM    DCBOFLGS,X'10'      DID DCB OPEN CORRECTLY
         BZ    BADOPEN             BR IF SO
         SPACE 1
         DROP  R1                  KILL DCB ADDRESSABILITY
         SPACE 1
         TM    0(R2),X'80'         TEST IF END OF OPEN PARM LIST
         BOR   R11                 BR IF SO
         LA    R2,4(,R2)           POINT R2 TO NEXT DCB ADDRESS
         B     OPENCHK             AND CONTINUE TEST
         SPACE 1
***********************************************************************
*                                                                     *
* CLOSE DATA SETS AND FREE THEIR BUFFER POOLS.  R2 POINTS TO THE      *
* CLOSE PARMS, R11 POINTS TO THE NORMAL EXIT                          *
*                                                                     *
***********************************************************************
         SPACE 1
CLSFREE  CLOSE MF=(E,(R2))         CLOSE SOME DCB'S
FREEEM   L     R1,0(,R2)           LOAD DCB ADDRESS FROM CLOSE PARMS
         SPACE 1
         USING IHADCB,R1           SETUP DCB ADDRESSABILITY
         SPACE 1
         TM    DCBBUFCB+3,1        IS A BUFFER POOL ATTACHED?
         BO    DONTFREE            BR IF NOT
         SPACE 1
         FREEPOOL (1)              FREE THE BUFFER POOL
         SPACE 1
         DROP  R1                  KILL DCB ADDRESSABILITY
         SPACE 1
DONTFREE TM    0(R2),X'80'         TEST IF END OF OPEN PARM LIST
         BOR   R11                 BR IF SO
         LA    R2,4(,R2)           POINT R2 TO NEXT DCB ADDRESS
         B     FREEEM              AND CONTINUE TEST
         SPACE 1
***********************************************************************
*                                                                     *
* ABNORMAL TERMINATION -- ABEND CODE 1 IF AN INVALID PARMS WAS        *
* ENCOUNTERED, ABEND CODE 2 IF A REQUIRED DCB DIDN'T OPEN             *
*                                                                     *
***********************************************************************
         SPACE 1
BADPARM  ABEND 1                   INVALID PARMETER -- QUIT WITH ABEND
         SPACE 1
BADOPEN  ABEND 2                   OPEN FAILED -- QUIT
         SPACE 1
***********************************************************************
*                                                                     *
* INSTRUCTIONS INVOKED BY THE EX INSTRUCTION                          *
*                                                                     *
***********************************************************************
         SPACE 1
CNVT     PACK  DWORK,0(*-*,R5)     CONVERT PARM TO PACKED DECIMAL
SCANO    TRT   0(*-*,R9),OTABLE    SCAN FOR LOWER CASE O
         EJECT
***********************************************************************
*                                                                     *
* DATA AREA                                                           *
*                                                                     *
***********************************************************************
         SPACE 1
S        DC    9D'0'               NEW OS SAVE AREA
         SPACE 1
DWORK    DC    PL8'0'              DOUBLE WORD WORK AREA
         SPACE 1
PWIDTH   DC    F'100'              WIDTH OF PAGE IN CHARACTERS
LWIDTH   DC    F'72'               WIDTH OF SINGLE LINE IN CHARACTERS
         SPACE 1
OPENLST1 OPEN  (INDCB,INPUT),MF=L  OPEN PARMS FOR INPUT DCB
OPENLST2 OPEN  (OUTDCB,OUTPUT),MF=L OPEN PARMS FOR OUTPUT DCB
         SPACE 1
         PRINT NOGEN               TURN OFF MACRO EXPANSION
         SPACE 1
INDCB    DCB   DSORG=PS,MACRF=GL,DDNAME=INPUT,EODAD=INPUTEOF
OUTDCB   DCB   DSORG=PS,MACRF=PM,DDNAME=OUTPUT
         SPACE 1
         PRINT GEN                 TURN ON MACRO EXPANSION
         SPACE 1
OTABLE   DC    XL256'0'            TRT AND TEST TABLE TO SCAN FOR
         ORG   OTABLE+C'O'-X'40'    LOWER CASE
         DC    X'01'                 O'S
         ORG   ,                   BACK TO THE TOP
         SPACE 1
OUTRDW   DC   H'0,0'               OUTPUT RECORD DESCRIPTOR WORD
OUTCC    DC   C' '                 OUTPUT RECORD CARRIAGE CONTROL WORD
OUTAREA  DC   CL145' '             REST OF MASTER OUTPUT LINE
         SPACE 1
         PRINT NOGEN               TURN OFF MACRO EXPANSION
         SPACE 1
         DCBD  DSORG=QS,DEVD=DA    DEFINE DCB SYMBOLIC SYMBOLS
         SPACE 1
RECFM    EQU   DCBRECFM-IHADCB     DEFINE OFFSET OF DCBRECFM
LRECL    EQU   DCBLRECL-IHADCB     DEFINE OFFSET OF DCBLRECL
BLKSI    EQU   DCBBLKSI-IHADCB     DEFINE OFFSET OF DCBBLKSI
         SPACE 1
         END   TNPRINTY            END OF PROGRAM
