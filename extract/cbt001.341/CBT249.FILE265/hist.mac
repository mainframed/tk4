HIST TITLE '                   H I S T O G R A M     G E N E R A T O R'
***********************************************************************
*                                                                     *
* TITLE -- HISTOGRAM GENERATOR                                        *
*                                                                     *
* FUNCTION / OPERATION -- THIS MODULE IS USED TO GENERATE A FULL PAGE *
*    HISTOGRAM.                                                       *
*                                                                     *
* CALLING SEQUENCE --                                                 *
*                                                                     *
*    NAME     CALL  HIST,(DCB,HORZHDR,VERTHDR,TABLE,LIMS,TABSIZ),VL   *
*             ...                                                     *
*    DCB      DCB   RECFM=VA,LRECL=125,MACRF=PM,....                  *
*    HORZHDR  WTO   'HORIZONTAL HEADER FOR TOP OF PAGE',MF=L          *
*    VERTHDR  WTO   'VERTICAL HEADER FOR SIZE OF PAGE',MF=L           *
*    TABLE    DC    F'VALUE1,...,VALUE10'                             *
*    TABSIZ   DC    F'10'      NUMBER OF ENTRIES IN TABLE -- 10 ONLY  *
*    LIMS     DC    F'LOWER1,HIGHER1,LOWER2,HIGHER2,....,LOWER10,     *
*                   HIGHER10'                                         *
*                                                                     *
* STATUS / CHANGE LEVEL -- V0L0 -- MAR 31, 1980                       *
*                                                                     *
* ATTRIBUTES -- THIS MODULE IS REUSABLE, BUT NOT REENTRANT OR         *
*    REFRESHABLE.  IT RUNS IN PROBLEM KEY AND STATE, AND DOES NOT     *
*    REQUIRE QUTHORIZATION.  IT IS DEPENDENT ON THE OUTPUT CHARACTER  *
*    SET FROM THE ASSEMBLER MAPPING TO THE OUTPUT CHARACTER SET IN    *
*    USE.                                                             *
*                                                                     *
* RESTRICTIONS --                                                     *
*    1) EACH BAR IS 11 COLUMNS WIDE.  TWO 5 DIGIT NUMBER PAIRS IN THE *
*       BOTTOM LINE LIMITS WILL BE RUN TOGETHER, AS WILL SINGLE       *
*       LIMIT NUMBERS OF 11 DIGITS.                                   *
*    2) THE UTILITY IS DESIGNED SO THAT AT LEAST ONE BAR WILL ALWAYS  *
*       RUN TO THE TOP OF THE PAGE.                                   *
*                                                                     *
***********************************************************************
         EJECT
         MACRO
         SETR
         LCLA  &A
.L       AIF   (&A GT 15).X
R&A      EQU   &A
&A       SETA  &A+1
         AGO   .L
.X       MEND
HIST     CSECT                     DEFINE PROGRAM CSECT
         SETR  ,                   DEFINE SYMBOLIC REGISTERS
         SAVE  (14,12),,HISTOGRAM-GENERATOR-ROUTINE-V0L0-MAR-31-80
         BALR  R12,0               ESTABLISH CURRENT ADDRESS
         USING *,R12               ESTABLISH MODULE ADDRESSABILITY
         LA    R15,S               LOAD ADDRESS OF NEW SAVE AREA
         ST    R15,8(,R13)         SAVE NEW SAVE AREA ADDRESS IN OLD
         ST    R13,4(,R15)         SAVE OLD SAVE AREA ADDRESS IN NEW
         LR    R13,R15             ESTABLISH NEW SAVE AREA ADDRESS
         LM    R2,R7,0(R1)         LOAD PARAMETER ADDRESSES
         USING IHADCB,R2           R2 POINTS TO OUTPUT DCB
         TM    DCBOFLGS,X'10'      IS OUTPUT DCB OPEN?
         BZ    NODCB               BR IF SO -- ABEND
         CLC   DCBLRECL,=H'125'    IS LRECL VALID
         BNE   NODCB               BR IF NOT -- ABEND
         SR    R14,R14             CLEAR R14
         IC    R14,DCBRECFM        LOAD RECFM OF DCB
         SRL   R14,6               ISOLATE RECORD TYPE BITS
         CLM   R14,1,=B'00000001'  TEST IF RECFM=V
         BNE   NODCB               BR IF NOT -- ABEND
         TM    DCBRECFM,B'00000110' TEST IF CONTROL CHARACTER BITS ON
         BNM   NODCB               BR IF NONE OR ALL ON
         TM    DCBRECFM,B'00000100' TEST IF A BIT ON
         BZ    NODCB               TEST IF RECFM ^= A -- ABEND
         L     R7,0(,R7)           LOAD NUMBER OF TABLE ENTRIES
         CH    R7,=H'10'           TEST IF CORRECT AMOUNT
         BNE   BADTBSIZ            BR IF NOT
         LA    R14,4               LOAD SIZE OF TABLE ENTRY
         LA    R15,10*4-4          COPY TABLE SIZE TO R15
         SR    R8,R8               CLEAR REGISTER WITH HIGHEST SIZE
         LR    R1,R8               CLEAR R1
         NI    SWITCH,255-LOWVAL   CLEAR LOWVAL SWITCH
GETHIGH  C     R8,0(R1,R5)         TEST IF WE'VE GOT THE HIGHEST
         BH    NXTHIGH             BR IF NOT
         L     R8,0(R1,R5)         LOAD NEW HIGH VALUE
NXTHIGH  BXLE  R1,R14,GETHIGH      GO TRY NEXT
         C     R8,=F'55'           TEST IF LOW VALUE
         BH    HIGHVAL             BR IF VALUE OK
         MH    R8,=H'100'          MULTIPLY BY 100
         OI    SWITCH,LOWVAL       INDICATE LOW VALUES PRESENT
HIGHVAL  LR    R15,R8              COPY HIGHEST VALUE TO R15
         SR    R14,R14             CLEAR R14
         D     R14,=F'55'          DIVIDE BY NUMBER OF LINES AVAILABLE ?
                                    TO GET VERTICAL SIZE INTERVAL
         ST    R15,INTERVAL        SAVE INTERVAL VALUE
***********************************************************************
* GENERATE TOP LINES.  THESE LINES CONSIST OF THE HORIZONTAL HEADER   *
* LINE CENTERED ON THE PAGE, A BLANK LINE AND THE TOP HEADER LINE     *
***********************************************************************
         MVI   LINE,C' '           CLEAR
         MVC   LINE+1(119),LINE     OUTPUT LINE
         LH    R15,0(,R3)          LOAD LENGTH OF HORIZONTAL LINE
         SH    R15,=H'4'           REDUCE LENGTH OF LINE BY LENGTH OF  ?
                                    HEADER
         BNP   WRITE1              BR IF BAD
         LA    R14,120             LOAD MAXIMUM LENGTH OF HORIZONTAL
         SR    R14,R15             COMPUTE LENGTH LEFT OVER
         SRL   R14,1               DIVIDE REMAINING LENGTH BY 2
         LA    R14,LINE(R14)       COMPUTE STARTING LOCATION IN LINE
         LA    R0,4(,R3)           LOAD START OF DATA IN HORIZONTAL HDR
         LR    R1,R15              COPY LENGTH TO MOVE TO R1
         MVCL  R14,R0              MOVE TO OUTPUT
         LA    R1,LINEHDR          LOAD START OF HEADER
         SR    R14,R1              COMPUTE ACTUAL LINE LENGTH
         STH   R14,LINEHDR         SAVE IN LINE
WRITE1   MVI   LINEASA,C'1'        SET LINE'S ASA CHARACTER TO 1
         PUT   (R2),LINEHDR        WRITE OUTPUT LINE
         MVI   THDRASA,C'0'        PREPARE TO WRITE A BLANK LINE
         PUT   (R2),THDRHDR        WRITE TOP HEADER LINE
***********************************************************************
* GENERATE MAIN BODY OF OUTPUT.                                       *
***********************************************************************
         MVI   LINEASA,C' '        RESET ASA
         LA    R0,125              RESET
         STH   R0,LINEHDR           LINE LENGTH
         LA    R14,LINE            BLANK
         LA    R15,120              THE
         L     R1,=AL1(C' ',0,0,0)   OUTPUT
         MVCL  R14,R0                 LINE
         MVI   LINE+8,C'×'         INSERT LEFT SIZE VERTICAL BAR
         MVI   LINE+119,C'×'       INSERT RIGHT SIDE VERTICAL BAR
         LA    R9,55               SETUP NUMBER OF LINES WE'LL GENERATE
         LH    R3,0(,R4)           LOAD SIZE OF VERTICAL HEADER
         SH    R3,=H'4'            REDUCE SIZE BY 4
         BP    *+6                 BR IF STILL VALID
         SR    R3,R3               SET SIZE 0
NEXTLINE S     R8,INTERVAL         GET TEST VALUE FOR THIS LINE
         MVC   LINE(8),=CL16' '    CLEAR FIRST PART OF LINE
         LR    R11,R9              COPY COUNTER TO R11
         SR    R10,R10             CLEAR R10
         D     R10,=F'5'           DIVIDE BY 5
         LTR   R10,R10             TEST IF REMAINDER 0
         BNZ   NOCNVT              BR IF NOT -- THANK GOD
         CVD   R8,DWORK            CONVERT TEST VALUE TO PACKED DECIMAL
         TM    SWITCH,LOWVAL       TEST IF LOW VALUES
         BZ    CNVTHI              BR IF SO
         MVC   LINE(7),=X'402021204B2020' COPY EDIT MASK TO LINE
         ED    LINE(7),DWORK+5     CONVERT TEST VALUE TO SPREAD DECIMAL
         B     NOCNVT              AND CONTINUE
CNVTHI   MVC   LINE+1(6),=X'402020202120' COPY EDIT MASK TO LINE
         ED    LINE+1(6),DWORK+5   CONVERT TEST VALUE TO SPREAD DECIMAL
NOCNVT   LTR   R3,R3               TEST IF HEADER READY
         BZ    NOVHDR              BR IF NOT -- DONE HEADER
         MVC   LINE(1),4(R4)       COPY A SINGLE CHARACTER
         LA    R4,1(,R4)           POINT TO NEXT
         BCTR  R3,0                REDUCE CONTER BY 1
NOVHDR   LA    R1,LINE+9           LOAD START VALUE
         LA    R0,10               LOAD TABLE SIZE
         LR    R14,R5              COPY TABLE START TO R14
NEXTBAR  MVC   0(11,R1),=CL16' '   CLEAR THE ENTRY
         L     R15,0(,R14)         LOAD VALUE
         TM    SWITCH,LOWVAL       TEST FOR LOW VALUE
         BZ    *+8                 BR IF LOW VALUE
         MH    R15,=H'100'         MULTIPLY VALUE BY ADJUSTMENT
         CR    R8,R15              TEST IF VALUE OUR WORK VALUE
         BH    UPBAR               BR IF WE'LL LEAVE BAR BLANK
         MVC   1(10,R1),=C'  ******  ' SETUP BAR
UPBAR    LA    R1,11(,R1)          INCREMENT LINE POSITION
         LA    R14,4(,R14)         INCREMENT TABLE POSITION
         BCT   R0,NEXTBAR          GO DO NEXT BAR
         PUT   (R2),LINEHDR        WRITE GENERATED OUTPUT LINE
         BCT   R9,NEXTLINE         GO DO NEXT LINE
***********************************************************************
* GENERATE BOTTOM OF HISTOGRAM.  THE BOTTOM CONSISTS OF THE BOTTOM    *
* INDICATOR LINE FOLLOWED BY A LINE CONTAINING THE SELECTION LIMIT    *
* VALUES PROVIDED BY THE CALLER.  THE SELECTION LIMITS TABLE CONTAINS *
* 20 ENTRIES, IN THE FORM F'LOW1,HIGH1,...,LOW20,HIGH20'.  THE LOW    *
* AND HIGH LIMITS FOR A BAR MAY BE THE SAME.  THE PROGRAM GENERATES   *
* EITHER 'VALUE' OR 'VALUE-VALUE' CENTERED UNDER THE APPROPRIATE BAR  *
* WITH LEADING ZEROS ELIMINATED.  THE CODE IS NOT DONE VERY WELL, AND *
* ISN'T TERRIBLE READABLE.  SORRY.                                    *
***********************************************************************
         MVI   THDRASA,C' '        PREPARE TO WRITE A NEW LINE
         PUT   (R2),THDRHDR        WRITE BOTTOM HEADER LINE
         LA    R0,8                SETUP SIZE OF LIMITS ENTRY
         LA    R1,10*8-8(,R6)      LOAD END OF LIMITS TABLE
         MVI   LINE,C' '           CLEAR
         MVC   LINE+1(119),LINE     OUTPUT LINE
         LA    R15,LINE+10         LOAD START OF LIMITS BUILD AREA
NXTLIM   CLC   0(4,R6),4(R6)       TEST IF TWO LIMITS IDENTICAL
         BE    BUILD1              BR IF SO
         L     R8,0(,R6)           CONVERT FIRST LIMIT
         CVD   R8,DWORK             TO PACKED DECIMAL
         OI    DWORK+7,X'0F'       FIX UP SIGN FOR CONVERSION
         UNPK  LIM1,DWORK          CONVERT FIRST LIMIT
         L     R8,4(,R6)           CONVERT SECOND LIMIT
         CVD   R8,DWORK             TO PACKED DECIMAL
         OI    DWORK+7,X'0F'       FIX UP SIGN FOR CONVERSION
         UNPK  LIM2,DWORK          AND CONVERT THE RESULT
         MVC   ENTRY+11(11),=CL16' ' CLEAR FINAL BUILD AREA
         MVI   SIGN,C'-'           SETUP SIGN
         B     COMPRESS            AND GO CENTER THE OUTPUT
BUILD1   L     R8,0(,R6)           CONVERT FIRST VALUE
         CVD   R8,DWORK             TO PACKED DECIMAL
         OI    DWORK+7,X'0F'       FIX UP SIGN
         UNPK  ENTRY,DWORK         CONVERT TO SPREAD DECIMAL
COMPRESS NI    SWITCH,255-NONZERO  INDICATE ZEROS
         LA    R8,ENTRY            LOAD START
         LA    R4,11               LOAD SIZE
         CLC   0(4,R6),4(R6)       TEST IF ENTRIES EQUAL
         BE    NXTCOMP             BR IF SO
         LA    R4,5                LOAD SHORTER SIZE
NXTCOMP  CLI   0(R8),C'0'          TEST IF ZERO
         BH    NXTMOVE             BR IF NUMERIC TO MOVE
         BL    RESET               BR IF SPLIT CHARACTER
         TM    SWITCH,NONZERO      TEST IF NON ZERO
         BO    NXTMOVE             BR IF SO
         BCT   R4,SHIFT            RUN TO SHIFT
         B     NXTMOVE             AND CONTINUE
SHIFT    MVC   0(11,R8),1(R8)      MOVE 1 TO LEFT
         B     NXTCOMP             AND CONTINUE
RESET    CLI   0(R8),C' '          TEST IF DONE
         BE    MOVEVAL             BR IF SO
         NI    SWITCH,255-NONZERO  RESET NON-ZERO ATTRIBUTE
         LA    R4,5                RESET COUNTER
         B     NXTINCR             AND CONTINUE
NXTMOVE  OI    SWITCH,NONZERO      SET NON-ZERO ATTRIBUTE
NXTINCR  LA    R8,1(,R8)           INCREMENT POINTER
         B     NXTCOMP             AND CONTINUE
MOVEVAL  LA    R3,ENTRY            LOAD START ADDRESS OF ENTRY
         SR    R8,R3               COMPUTE LENGTH OF ENTRY
         LA    R3,11               LOAD LENGTH
         SR    R3,R8               COMPUTE LENGTH NOT USED IN ENTRY
         SRL   R3,1                DIVIDE NOT USED LENGTH BY 2
         LA    R3,0(R3,R15)        COMPUTE START OF CENTERED AREA
         BCTR  R8,0                REDUCE LENGTH BY 1 FOR HARDWARE
         EX    R8,VALMVC           EXECUTE THE MOVE INSTRUCTION
         LA    R15,11(,R15)        POINT TO NEXT ENTRY
         BXLE  R6,R0,NXTLIM        AND GO DO NEXT
         PUT   (R2),LINEHDR        WRITE THE OUTPUT LINE
         L     R13,4(,R13)         LOAD ADDRESS OF CALLER'S SAVE AREA
         RETURN (14,12),T,RC=0     RETURN TO CALLER
NODCB    ABEND 1,DUMP
BADTBSIZ ABEND 2,DUMP
VALMVC   MVC   0(*-*,R3),ENTRY     MOVE VALUE TO LAST LINE
         EJECT
***********************************************************************
* DATA AREA                                                           *
***********************************************************************
S        DC    9D'0'               OS SAVE AREA
DWORK    DC    PL8'0'              DOUBLE WORD ALIGNED WORK AREA
INTERVAL DC    F'0'                INTERVAL
LINEHDR  DC    Y(5,0)              VARIABLE LENGTH HEADER
LINEASA  DC    C' '                ASA CONTROL CHARACTER
LINE     DC    CL120' '            OUTPUT LINE AREA
THDRHDR  DC    Y(125,0)            TABLE TOP/BOTTOM HEADER
THDRASA  DC    C' '                CONTROL CHARACTER
         DC    CL8' ',C'+-',10C'----------+' TABLE TOP / BOTTOM HEADER
ENTRY    DC    0CL11' '            SINGLE VALUE ENTRY
LIM1     DC    CL5' '              FIRST DOUBLE VALUE ENTRY
SIGN     DC    C'-'                INTERMEDIATE VALUE
LIM2     DC    CL5' '              SECOND DOUBLE VALUE ENTRY
         DC    CL11' '             11 BLANKS FOR CONVENIENCE
SWITCH   DC    XL1'0'              EXECUTION SWITCHES --
LOWVAL   EQU   X'80'                 MAX VALUE < 55, MULTIPLY VALUES
NONZERO  EQU   X'40'                 NON-ZERO VALUE FOUND
         LTORG ,                   DEFINE LITERAL POOL
         PRINT NOGEN               TURN OFF MACRO EXPANSION
         DCBD  DSORG=QS,DEVD=DA    DEFINE DCB SYMBOLIC EQUATES
 TITLE '               L I M I T S     T A B L E     G E N E R A T O R'
***********************************************************************
*                                                                     *
* TITLE -- LIMIT TABLE GENERATION ROUTINE                             *
*                                                                     *
* FUNCTION / OPERATION -- THE LIMIT TABLE GENERATION MODULE GENERATES *
*    A LIMIT TABLE FOR USED BY THE HIST SUBROUTINE.  THE VALUES       *
*    CHOSEN FOR THE LIMIT TABLE ARE DESIGNED FOR READABILITY RATHER   *
*    THAN THE USUAL IDEA OF CONSTANT VALUES ACROSS A RANGE.  THE      *
*    OUTPUT TABLE IS SELECTED FROM ONE OF 8 TABLES, OR IS GENERATED   *
*    FOR THE SPECIAL CASE WHEN THE LIMITS RUN FROM 0 THROUGH 9.       *
*                                                                     *
* CALLING SEQUENCE --                                                 *
*    NAME     CALL  LIMSET,(MAXVAL,TABLE)                             *
*             ...                                                     *
*    MAXVAL   DC    F'MAX'  MAXIMUM VALUE FROM 0 TO MAXVAL            *
*    TABLE    DS    20F     OUTPUT AREA                               *
*                                                                     *
* ATTRIBUTES -- THIS MODULE IS REENTRANT REFRESHABLE AND REUSABLE.    *
*    IT OPERATES IN PROBLEM KEY AND STATE AND DOES NOT REQUIRE        *
*    AUTHORIZATION.  THIS MODULE IS NOT DEPENDENT ON ANY CHARACTER    *
*    SET.                                                             *
*                                                                     *
***********************************************************************
         EJECT
         PRINT GEN
LIMSET   CSECT
         SAVE  (14,12),,LIMIT-TABLE-GENERATOR-ROUTINE-V0L0-MAR-31-80
         BALR  R12,0               ESTABLISH CURRENT ADDRESS
         USING *,R12               ESTABLISH ADDRESSABILITY
         LM    R2,R3,0(R1)         LOAD PARAMETER POINTERS
         L     R2,0(,R2)           LOAD MAX VALUE
         C     R2,=F'9'            TEST FOR SIMPLEST GENERATION
         BH    LTEST10K            BR IF NOT SIMPLEST
         LA    R0,1                SET INCREMENT
         LA    R1,9                SET END
         LA    R14,0               SET START
LSET10   ST    R14,0(,R3)          SET LOWER LIMIT
         ST    R14,4(,R3)          SET UPPER LIMIT
         LA    R3,8(,R3)           POINT TO NEXT LIMIT TABLE ENTRY
         BXLE  R14,R0,LSET10       GO DO NEXT
         B     LEXIT               AND CONTINUE
LTEST10K C     R2,=F'10000'        TEST FOR SPECIAL LARGE VALUE
         BL    LGUESS              BR IF WE MUST GUESS
         MVC   0(L'L10KTAB,R3),L10KTAB COPY FIRST 19 ENTRIES
         ST    R2,19*4(,R3)        SAVE LAST ENTRY
         B     LEXIT               AND CONTINUE
LGUESS   LA    R0,8                SET INCREMENT
         LA    R1,LGUESSTE         LOAD END OF TABLE
         LA    R14,LGUESST         LOAD START OF TABLE
LLOOK    C     R2,0(,R14)          TEST IF TABLE VALUE BEYOND HIGH     ?
                                    USER VALUE
         BNH   LGUESSED            BR IF SO
         BXLE  R14,R0,LLOOK        AND KEEP ON LOOKING
LGUESSED L     R14,4(,R14)         LOAD ADDRESS OF TABLE
         MVC   0(L'L10KTAB+4,R3),0(R14) MOVE TABLE
LEXIT    RETURN (14,12),T,RC=0     AND RETURN TO CALLER
LGUESST  DC    A(19,LTABLE1)
         DC    A(50,LTABLE2)
         DC    A(100,LTABLE3)
         DC    A(200,LTABLE4)
         DC    A(500,LTABLE5)
         DC    A(1000,LTABLE6)
LGUESSTE DC    A(5000,LTABLE7)
         DC    A(10000,L10KTAB)
LTABLE1  DC    F'0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19'
LTABLE2  DC    F'0,5,6,10,11,15,16,20,21,25,26,30,31,35,36,40,41,45'
         DC    F'46,50'
LTABLE3  DC    F'0,10,11,20,21,30,31,40,41,50,51,60,61,70,71,80,81,90'
         DC    F'91,100'
LTABLE4  DC    F'0,20,21,40,41,60,61,80,81,100,101,120,121,140'
         DC    F'141,160,161,180,181,200'
LTABLE5  DC    F'0,25,26,50,51,75,76,100,101,125,126,150'            DC
         DC    F'151,175,176,200,201,350,351,500'                    DC
LTABLE6  DC    F'0,100,101,200,201,300,301,400,401,500,501,600'
         DC    F'601,700,701,800,801,900,901,1000'
LTABLE7  DC    F'0,500,501,1000,1001,1500,1501,2000,2001,2500'
         DC    F'2501,3000,3001,3500,3501,4000,4001,4500,4501,5000'
LTABLE8  DC    F'0,1000,1001,2000,2001,3000,3001,4000,4001,5000'
         DC    F'5001,6000,6001,7000,7001,8000,8001,9000,9001,10000'
L10KTAB  EQU   LTABLE8,*-LTABLE8-4
         LTORG ,
         END
