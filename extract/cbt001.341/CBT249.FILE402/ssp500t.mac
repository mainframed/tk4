         LOGO  CSECT=SSP100,                                           *
               TITLE='VTOC EXTRACT'
         EJECT
**********************************************************************
*                        S S P 1 0 0                                 *
*                                                                    *
*     DISK MANAGEMENT SYSTEM                                         *
*                                                                    *
*     PURPOSE:                                                       *
*       THIS PROGRAM READS THE VTOC ON ANY PACKS THAT HAVE A         *
*       DDNAME THAT BEGINS WITH 'DD'.  IT USES BSAM READS TO         *
*       READ THE FORMAT1 AND FORMAT5 DSCB'S, AND FROM THE            *
*       FORMAT1 IT ISSUES THE 'OBTAIN' MACRO TO GET THE              *
*       FORMAT2 OR FORMAT3 DSCB(S) IF THEY EXIST.  IT PRODUCES       *
*       AN EXTRACT RECORD TO BE USED IN ANY FURTHER REPORTING        *
*       PROCEDURES.                                                  *
*                                                                    *
*--------------------------------------------------------------------*
*                                                                    *
*                 R E G I S T E R   U S A G E                        *
*                                                                    *
*    R0    -    RESERVED FOR IBM                                     *
*    R1    -    RESERVED FOR IBM                                     *
*    R2    -    BASE REGISTER FOR PROGRAM                            *
*    R3    -    WORK                                                 *
*    R4    -    WORK                                                 *
*    R5    -    WORK                                                 *
*    R6    -    WORK                                                 *
*    R7    -    WORK                                                 *
*    R8    -    BAL REG, ALSO USED FOR BCT LOOPS                     *
*    R09   -    POINTER TO CURRENT TIOT ENTRY                        *
*    R10   -    POINTER TO CURRENT UCB                               *
*    R11   -    BASE REGISTER FOR FORMAT1 DSECT                      *
*    R12   -    BASE REGISTER FOR FORMAT2 DSECT                      *
*    R13   -    POINTS TO REGISTER SAVE AREA                         *
*    R14   -    RESERVED FOR IBM                                     *
*    R15   -    RESERVED FOR IBM                                     *
*                                                                    *
*    WORK REGISTERS MAY BE USED AT ANY POINT DURING THE PROGRAM.     *
*    ANY ROUTINE USING THOSE REGISTERS IS ALSO RESPONSIBLE FOR       *
*    THEIR INTEGRITY WHEN LEAVING THE ROUTINE FOR ANY REASON.        *
*    (I.E., THEY MAY NOT BE THE SAME WHEN IT COMES BACK AS THEY      *
*    WERE WHEN THEY LEFT).                                           *
*                                                                    *
**********************************************************************
         EJECT
SSP100   CSECT
         USING SSP100,R2
         SAVE  (14,12),,*              SAVE REGISTERS
         LR    R2,R15                  SET BASE ADDR REG
         LA    R3,SAVEAREA             SET REG 3 TO POINT TO MY SAVE
         ST    R3,8(R13)               STORE MY SAVE AREA POINTER
         ST    R13,SAVEAREA+4          STORE REG 13 IN MY SAVE AREA
         LR    R13,R3                  POINT TO NEW SAVE AREA
         USING FORMAT1,R12             SET ADDR'BILITY TO FORMAT1 REC
         USING FORMAT3,R11             SET ADDR'BILITY TO FORMAT3 REC
         OPEN  (OUTDCB,(OUTPUT),SNAPDD,(OUTPUT),OUTFORM5,(OUTPUT))
         OPEN  (VATLIST,(INPUT))
         CALL  SSP632,(WORK,INIT),VL
VATLOOP  EQU   *
         GET   VATLIST,VATAREA
         MVC   PARM2VOL,VATVOL
         MVC   PARM2DDN,VATVOL
         MVC   PARM2UNT,VATUNIT
         CALL  SSP632,(WORK,ALLOC,PARM2),VL
         B     VATLOOP
VATEND   EQU   *
         CLOSE VATLIST
         SPACE 1
GETDD    EQU   *
         LA    R9,16                   ADDR OF PTR TO CVT
         L     R9,0(R9)                ADDR OF CVT
         L     R9,0(R9)                ADDR OF NEXT TCB
         L     R9,4(R9)                ADDR OF CURRENT TCB
         L     R9,12(R9)               ADDR OF TIOT
         LA    R9,24(R9)               BUMP BY STEP AND JOB INFO
         SPACE 1
WRONGDD  EQU   *
         AP    TIOTCNT,=P'1'           ADD 1 TO TIOT COUNT
         CLC   0(4,R9),=F'0'           ADDRESS = ALL ZEROS
         BE    EOJ                     END THIS JOB
         CLC   4(2,R9),=C'DD'          IS 1ST 2 CHAR = 'DD'
         BE    RIGHTDD                     YES - THEN PROCESS
         LA    R9,20(R9)               BUMP UP 1 ENTRY
         B     WRONGDD                 GO CHECK NEXT DD
         SPACE 1
RIGHTDD  EQU   *
         MVC   VTOCDCB+40(8),4(R9)     PUT IN NEW DDNAME
         RDJFCB  VTOCDCB               READ THE JFCB
         MVI   SJFCB,X'04'             MODIFY IT WITH THE NEW DSN
         MVC   SJFCB+1(43),SJFCB           TO POINT TO FORMAT-4
         OPEN  VTOCDCB,TYPE=J          OPEN MODIFIED DCB
         L     R10,VTOCDCB+44          GET ADDR OF DEB
         L     R10,32(R10)             GET ADDR OF UCB
         SPACE 1
FORMAT1L EQU   *
         MVI   ERRSWTCH,X'00'          CLEAR ERROR SWITCH
         READ  VTOCECB,SF,VTOCDCB,INREC READ VTOC
         CHECK VTOCECB                 CHECK FOR COMPLETION
         CLI   ERRSWTCH,X'FF'          WAS READ OK?
         BE    FORMAT1L                    NO, READ AGAIN
         CLI   INRIDENT,X'F4'          IS THIS A FORMAT-4?
         BE    FORM4                   YES -GO PROCESS IT
         CLI   INRIDENT,X'F5'          IS THIS A FORMAT-5?
         BE    FORM5PRC                YES -GO PROCESS IT
         CLI   INRIDENT,X'F1'          IS IT A FORMAT-1?
         BNE   FORMAT1L                    NO, READ AGAIN
         LA    R12,INREC               GET ADDR. TO FORMAT1 DSECT
         MVC   DMS1DSN,DS1DSNAM        MOVE DSN TO OUT REC
         XC    DMS1NEXT,DMS1NEXT       CLEAR OUTPUT FIELD
         MVC   DMS1NEXT+1(1),DS1NOEPV  MOVE IN NUM OF EXTS.
         MVC   DMS1LRCL,DS1LRECL       MOVE IN LRECL
         MVC   DMS1BLK,DS1BLKL         MOVE IN BLKSIZE
         MVC   DMS1KEYL,DS1KEYL        MOVE IN KEYLENGTH
         MVC   DMS1RKP,DS1RKP          MOVE IN RKP
         MVC   DMS1VSER,28(R10)        MOVE VOL-SER FROM UCB
         MVC   WORKDATE,DS1CREDT       MOVE CREATE DT TO WORK
         LH    R4,DS1LSTAR             LOAD LST BLK INTO R4 FOR CVD
         CLI   DS1LSTAR+2,X'00'        IS THE REC COUNT = ZEROS?
         BE    CONVRTIT                YES -THEN DO THE CONVERSION
         AH    R4,=H'1'                THEN UP THE NUM OF TRKS BY 1
CONVRTIT EQU   *
         CVD   R4,DBLWORK              CONVERT FREE SPACE TO DECIMAL
         MVC   DMS1TUSE,DBLWORK+3      MOVE PART OF ANSWER INTO OUT REC
         LA    R8,CONTINUE             SET RETURN ADDR FOR NEXT RTN.
         EJECT
**********************************************************************
*                                                                    *
*   ROUTINE TO SET UP FIELDS TO GO TO JULIAN CONVERSION ROUTINE      *
*                                                                    *
**********************************************************************
         SPACE 1
CONVRTN  EQU   *
         MVI   CONVDATE,X'40'          CLEAR PASSED AREA
         MVC   CONVDATE+1(97),CONVDATE  FINISH CLEARING
         XC    FULLWORK,FULLWORK       CLEAR THE AREA
         MVC   FULLWORK+3(1),WORKDATE     MOVE IN YY
         L     R3,FULLWORK             PUT IN REG FOR CVD
         CVD   R3,DBLWORK              CONVERT IT TO DECIMAL
         UNPK  FULLWORK+1(3),DBLWORK+6(2) UNPACK IT
         MVC   JULDTE1+0(2),=C'19'     MOVE IN CENTURY
         MVC   JULDTE1+2(2),FULLWORK+2 MOVE IT IN TO THE CALL FIELD
         OI    JULDTE1+3,X'F0'         FIX THE SIGN
         XC    FULLWORK,FULLWORK       CLEAR WORK AREA
         MVC   FULLWORK+2(2),WORKDATE+1 MOVE IN DD
         L     R3,FULLWORK             PUT IT IN THE REG FOR CVD
         CVD   R3,DBLWORK              CONVERT TO DECIMAL
         UNPK  FULLWORK+1(3),DBLWORK+6(2) UNPACK IT
         MVC   JULDTE1+4(3),FULLWORK+1 MOVE IT TO THE CALL FIELD
         OI    JULDTE1+6,X'F0'         FIX THE SIGN
         CALL  SSP025,(CONVDATE)       CALL CONVERSION RTN
         BR    R8                      SET UP RETURN
         SPACE 1
CONTINUE EQU   *
         PACK  DMS1CDT,GREGDTE1        PUT DATE IN OUT REC
         OI    DMS1CDT+3,X'0C'         FIX THE SIGN
         CLC   DS1REFD,=X'000000'      IS THE EXPIR DATE = ZEROS?
         BE    NOEXPIR                 YES -THEN TELL HIM
         MVC   WORKDATE,DS1REFD        MOVE IN THE EXPIR DATE
         LA    R8,CONTINU2             GET CONTINUATION ADDRESS
         B     CONVRTN                 AND DO THE CONVERSION
         SPACE 1
NOEXPIR  EQU   *
         MVC   GREGDTE1,=C'0000000'    ZERO THE EXPIR DATE
         SPACE 1
CONTINU2 EQU   *
         PACK  DMS1EDT,GREGDTE1        PUT DATE IN OUT REC
         OI    DMS1EDT+3,X'0C'         FIX THE SIGN
         TM    19(R10),X'0B'           IS DEV-TYPE = 3350?
         BNO   NOT3350                 NO -TRY AGAIN
         MVC   DMS1PTYP,=C'3350'       YES -MOVE IN LIT
         B     FNDTYPE                   AND GO ON...
         SPACE 1
NOT3350  EQU   *
         TM    19(R10),X'09'
         BNO   NOT33301                NO -TRY AGAIN
         MVC   DMS1PTYP,=C'3330'       YES -MOVE IN LIT
         B     FNDTYPE                   AND GO ON...
         SPACE 1
NOT33301 EQU   *
         TM    19(R10),X'0D'           IS DEV-TYPE = 3330-11?
         BNO   NOT3330                 NO -UNKNOWN DEV-TYPE
         MVC   DMS1PTYP,=C'3330'       MOVE IN 3330 LIT
         B     FNDTYPE                   AND GO ON...
         SPACE 1
NOT3330  EQU   *
         TM    19(R10),X'0C'           IS DEV-TYPE = 3375?
         BNO   NOT3375                 NO -UNKNOWN DEV-TYPE
         MVC   DMS1PTYP,=C'3375'       MOVE IN 3330 LIT
         B     FNDTYPE                   AND GO ON...
         SPACE 1
NOT3375  EQU   *
         TM    19(R10),X'0A'           IS DEV-TYPE = 3340?
         BNO   UNKTYPE                 NO -UNKNOWN DEV-TYPE
         MVC   DMS1PTYP,=C'3340'       MOVE IN 3340 LIT
         B     FNDTYPE                   AND GO ON...
         SPACE 1
UNKTYPE  EQU   *
         MVC   DMS1PTYP,=C'UNKN'       MOVE IN UNKNOWN LIT
         EJECT
**********************************************************************
*                                                                    *
*    ROUTINE TO FIND THE ALLOCATION PARAMETER (TRKS, CYLS OR BLKS)   *
*                                                                    *
**********************************************************************
         SPACE 1
FNDTYPE  EQU   *
         TM    DS1SCALO,X'C0'          ALLOC IN BLKS?
         BNO   NOTCYLS                 NO -TRY AGAIN
         MVC   DMS1APRM,=C'CYL'        MOVE IN CYL LIT
         B     FNDAPRM                   AND GO ON...
         SPACE 1
NOTCYLS  EQU   *
         TM    DS1SCALO,X'80'          ALLOC IN TRKS?
         BNO   NOTTRKS                 NO -TRY AGAIN
         MVC   DMS1APRM,=C'TRK'        MOVE TRK LIT
         B     FNDAPRM                   AND GO ON...
         SPACE 1
NOTTRKS  EQU   *
         MVC   DMS1APRM,=C'BLK'        MOVE CYL LIT
         EJECT
**********************************************************************
*                                                                    *
*       ROUTINE TO DETERMINE DATA SET ORGANIZATION (DSORG)           *
*                                                                    *
**********************************************************************
         SPACE 1
FNDAPRM  EQU   *
         TM    DS1DSORG,X'80'          IS IT ISAM?
         BNO   NOTISAM
         MVC   DMS1DSRG,=C'IS'         MOVE IN 'IS' LIT
         B     FNDDSRG                   AND GO ON...
         SPACE 1
NOTISAM  EQU   *
         TM    DS1DSORG,X'40'          IS IT SEQ?
         BNO   NOTSEQ                  NO -TRY AGAIN
         MVC   DMS1DSRG,=C'PS'         MOVE IN PS LIT
         B     FNDDSRG                   AND GO ON...
         SPACE 1
NOTSEQ   EQU   *
         TM    DS1DSORG,X'20'          IS IT DIRECT ACC?
         BNO   NOTDA                   NO -TRY AGAIN
         MVC   DMS1DSRG,=C'DA'         MOVE IN DA LIT
         B     FNDDSRG                   AND GO ON...
         SPACE 1
NOTDA    EQU   *
         TM    DS1DSORG,X'02'
         BNO   NOTPO                   NO -TRY AGAIN
         MVC   DMS1DSRG,=C'PO'         MOVE IN PO LIT
         B     FNDDSRG                   AND GO ON...
         SPACE 1
NOTPO    EQU   *
         TM    DS1DSORG,X'01'          IS IT UNDEFINED?
         BNO   NOTUND                  NO -TRY AGAIN
         MVC   DMS1DSRG,=C'U '         MOVE UND LIT
         B     FNDDSRG                   AND GO ON...
         SPACE 1
NOTUND   EQU   *
         MVC   DMS1DSRG,=C'AM'         MOVE IN AM LIT
FNDDSRG  EQU   *
         EJECT
**********************************************************************
*                                                                    *
*      ROUTINE TO DETERMINE THE RECORD FORMAT (RECFM)                *
*                                                                    *
*                                                                    *
**********************************************************************
         SPACE 1
         TM    DS1RECFM,X'94'          IS RECFM FBA?
         BNO   NOTFBA                  NO -TRY AGAIN
         MVC   DMS1RCFM,=C'FBA'        MOVE IN FBA LIT
         B     FNDRECFM                  AND GO ON...
         SPACE 1
NOTFBA   EQU   *
         TM    DS1RECFM,X'92'          IS RECFM FBM?
         BNO   NOTFBM                  NO -TRY AGAIN
         MVC   DMS1RCFM,=C'FBM'        MOVE IN FBM LIT
         B     FNDRECFM                  AND GO ON...
         SPACE 1
NOTFBM   EQU   *
         TM    DS1RECFM,X'C0'          IS RECFM U?
         BNO   NOTU                    NO -TRY AGAIN
         MVC   DMS1RCFM,=C'U  '        MOVE IN U LIT
         B     FNDRECFM                  AND GO ON...
         SPACE 1
NOTU     EQU   *
         TM    DS1RECFM,X'58'          IS RECFM FBS?
         BNO   NOTFBS                  NO -TELL HIM IT IS UNKNOWN
         MVC   DMS1RCFM,=C'FBS'        MOVE IN FBS LIT
         B     FNDRECFM                  AND GO ON...
         SPACE 1
NOTFBS   EQU   *
         TM    DS1RECFM,X'58'          IS RECFM VBS?
         BNO   NOTVBS                  NO -TRY AGAIN
         MVC   DMS1RCFM,=C'VBS'        MOVE IN VBS LIT
         B     FNDRECFM                  AND GO ON...
         SPACE 1
NOTVBS   EQU   *
         TM    DS1RECFM,X'50'          IS RECFM VB?
         BNO   NOTVB                   NO -TRY AGAIN
         MVC   DMS1RCFM,=C'VB '        MOVE IN VB LIT
         B     FNDRECFM                  AND GO ON...
         SPACE 1
NOTVB    EQU   *
         TM    DS1RECFM,X'40'          IS RECFM V?
         BNO   NOTV                    NO -TRY AGAIN
         MVC   DMS1RCFM,=C'V  '        MOVE IN V LIT
         B FNDRECFM                      AND GO ON...
         SPACE 1
NOTV     EQU   *
         TM    DS1RECFM,X'90'          IS RECFM FB?
         BNO   NOTFB                   NO -TRY AGAIN
         MVC   DMS1RCFM,=C'FB '        MOVE IN FB LIT
         B     FNDRECFM                  AND GO ON...
         SPACE 1
NOTFB    EQU   *
         TM    DS1RECFM,X'80'          IS THE RECFM = F?
         BNO   NOTF                    NO -TRY AGAIN
         MVC   DMS1RCFM,=C'F  '        MOVE IN F LIT
         B     FNDRECFM                  AND GO ON...
         SPACE 1
NOTF     EQU   *
         MVC   DMS1RCFM,=C'UNK'        WELL, I DON'T KNOW, EITHER
         EJECT
**********************************************************************
*                                                                    *
*      ROUTINE TO PUT ALL EXTENT INFORMATION INTO A TABLE            *
*                                                                    *
**********************************************************************
         SPACE 1
FNDRECFM EQU   *
         XC    EXTTBL,EXTTBL           CLEAR THE TABLE
         LA    R8,3                    SET BCTR NUMBER
         LA    R3,EXTTBL               SET R3 TO BEGIN OF TABLE
         LA    R4,DS1EXT1              SET R4 TO BEGIN OF 1ST EXT INFO
         SPACE 1
PROCEXT  EQU   *
         CLI   0(R4),X'00'             IS THIS THE LAST EXTENT?
         BE    NOMREXTS                OF COURSE, YOU DUMMY (JHS)
         MVC   0(10,R3),0(R4)          OOPS, I GUESS NOT
         LA    R3,14(R3)               BUMP UP THE TABLE ENTRY
         LA    R4,10(R4)               BUMP UP THE EXTENT ENTRY
         BCT   R8,PROCEXT              AND GO DO IT AGAIN
         SPACE 1
CHKFRM3  EQU   *
         CLC   DS1PTRDS,=X'0000000000' IS SEEK ADDR = 0'S
         BE    NOMREXTS                YES -THEN WE'RE DONE
         SPACE 1
OBTFRM3  EQU   *
         MVC   SKVOLSER,28(R10)        MOVE IN VOL-SER FROM UCB
         MVC   SKADDR,DS1PTRDS         MOVE IN CCHH FROM FORMAT1
       OBTAIN  FORM2LST                GET THE FORMAT 2 OR 3
         CLI   INRIDENT,X'F3'          IS THIS A FORMAT 3?
         BE    FRM3PROC                YES -THEN GET BUSY
         LA    R12,INREC               GET ADDR'BILITY TO REC
         CLC   DS1PTRDS,=X'0000000000' IS SEEK ADDR ZEROS?
         BE    NOMREXTS                YES -THEN WE'RE DONE
         B     OBTFRM3                 NO -THEN GET FORMAT-3
         SPACE 1
FRM3PROC EQU   *
         LA    R11,INREC               GET ADDR'BILITY TO REC
         LA    R8,4                    SET COUNTER FOR LOOP
         LA    R4,DS3EXTNT             SET BEGIN ADDR FOR EXTENT INFO
         SPACE 1
FRM3LP1  EQU   *
         CLI   0(R4),X'00'             ARE WE DONE YET?
         BE    NOMREXTS                YES -I'LL BE DARNED
         MVC   0(10,R3),0(R4)          MOVE EXTENT INFO TO TABLE
         LA    R3,14(R3)               BUMP UP TABLE ENTRY
         LA    R4,10(R4)               BUMP UP EXTENT ENTRY
         BCT   R8,FRM3LP1              GO DO IT AGAIN
         SPACE 1
FRM3LP2  EQU   *
         LA    R8,9                    SET COUNTER FOR LOOP
         LA    R4,DS3ADEXT             SET BEGIN ADDR FOR NEXT EXTENT
         SPACE 1
FRM3LP3  EQU   *
         CLI   0(R4),X'00'             ARE WE DONE NOW?
         BE    NOMREXTS                YES -FINALLY
         MVC   0(10,R3),0(R4)          NO -MOVE NEXT EXTENT INTO TABLE
         LA    R3,14(R3)               BUMP UP TABLE ENTRY
         LA    R4,10(R4)               BUMP UP EXTENT ADDRESS
         BCT   R8,FRM3LP3              CHECK IF DONE, AND LOOP IF NOT
         EJECT
**********************************************************************
*                                                                    *
*       ROUTINE TO DETERMINE TRACKS ALLOCATED INTO TABLE             *
*                                                                    *
**********************************************************************
         SPACE 1
NOMREXTS EQU   *
         LA    R8,16                   SET COUNTER FOR LOOP
         LA    R3,EXTTBL               SET BEGIN ADDR FOR TABLE
         SPACE 1
FIGDIFF  EQU   *
         CLI   0(R3),X'00'             ARE WE AT END OF TABLE?
         BE    TOTLSPCE                YES -GO FIGURE THEN
         LH    R4,2(R3)                LOAD LO CC INTO REG
         LH    R6,6(R3)                LOAD HI CC INTO REG
         CLC   DMS1PTYP,=C'3330'       IS THIS 3330?
         BNE   CHK3340                 NO - CHECK FOR 3340
         SR    R6,R4                   GET DIFFERENCE IN CYLS
         MH    R6,=H'19'               CONVERT IT TO TRACKS
         AH    R6,8(R3)                ADD IN HI TRACKS
         SH    R6,4(R3)                SUBTRACT LOW TRACKS
         AH    R6,=H'1'                ADD BY 1 FOR SUB DIFFERENCE
         B     DIFFIGD                 GO CONTINUE PROCESS
CHK3340  EQU   *
         CLC   DMS1PTYP,=C'3340'       IS THIS A 3340?
         BNE   CHK3350                 YES - CHECK FOR 3350
         SR    R6,R4                   GET DIFFERENCE IN CYLS
         MH    R6,=H'12'               CONVERT IT TO TRACKS
         AH    R6,8(R3)                AD IN HI TRACKS
         SH    R6,4(R3)                SUBTRACT LOW TRACKS
         AH    R6,=H'1'                ADD 1 FOR SUB DIFFERENCE
         B     DIFFIGD
         SPACE 1
CHK3350  EQU   *
         CLC   DMS1PTYP,=C'3350'       IS THIS A 3350?
         BNE   CHK3375                 NO - THEN CHECK FOR 3375
         SR    R6,R4                   GET DIFFERENCE IN CYLS
         MH    R6,=H'30'               CONVERT IT TO TRACKS
         AH    R6,8(R3)                AD IN HI TRACKS
         SH    R6,4(R3)                SUBTRACT LOW TRACKS
         AH    R6,=H'1'                ADD 1 FOR SUB DIFFERENCE
         B     DIFFIGD
         SPACE 1
CHK3375  EQU   *
         SR    R6,R4                   GET DIFFERENCE IN CYLS
         MH    R6,=H'12'               CONVERT IT TO TRACKS
         AH    R6,8(R3)                AD IN HI TRACKS
         SH    R6,4(R3)                SUBTRACT LOW TRACKS
         AH    R6,=H'1'                ADD 1 FOR SUB DIFFERENCE
         B     DIFFIGD
         SPACE 1
DIFFIGD  EQU   *
         ST    R6,10(R3)               PUT TRKS ALL IN TABLE
         LA    R3,14(R3)               BUMP UP TABLE ENTRY
         BCT   R8,FIGDIFF              GO FIGURE NEXT ENTRY
         SPACE 1
TOTLSPCE EQU   *
         LA    R8,16                   SET COUNTER FOR LOOP
         LA    R3,EXTTBL               SET BEGIN ADDR OF TABLE
         SR    R4,R4
         SPACE 1
ADDSPCE  EQU   *
         CLI   0(R3),X'00'             ARE WE THRU THE TABLE?
         BE    ALLSPCE                 YES -GO PUT IT IN THE REC
         AH    R4,12(R3)               ADD TABLE SPACE TO REG 4
         LA    R3,14(R3)               BUMP UP TABLE ENTRY BY 1
         BCT   R8,ADDSPCE              GO DO LOOP IF NOT DONE
         SPACE 1
ALLSPCE  EQU   *
         CVD   R4,DBLWORK              CONVERT SPACE TO DECIMAL
         MVC   DMS1SPAL,DBLWORK+3      MOVE TOTAL SPACE ALLOCATED
         EJECT
**********************************************************************
*                                                                    *
*            ROUTINE TO DO LOCATE FOR CATALOG STATUS                 *
*                                                                    *
*                                                                    *
**********************************************************************
         SPACE 1
DOLOCATE EQU   *
         LOCATE SRCHCTLG               AND READ THE CATALOG
         LTR   R15,R15                 IS IT ON THIS CATALOG?
         BZ    CATOK                   YES -THEN GO PROCESS
         MVC   DMS1CATV,=C'NOTCAT'     MOVE IN NOT CATLG'D LIT
         MVC   DMS1CVOL,=X'404040404040' CLEAR CVOL FIELD
         B     WRITEREC                AND GO WRITE IT
         SPACE 1
CATOK    EQU   *
         CLC   DMS1VSER,CATVOLSR       IS THE RES. PACK AND CAT PACK =?
         BNE   NOTOK                   NO -TELL HIM
         MVC   DMS1CATV,CATVOLSR       YES -THEN DO IT
         B     WRITEREC                AND GO WRITE THE REC
         SPACE 1
NOTOK    EQU   *
         MVC   DMS1CATV,=C'NOTCAT'     MOVE IN NOT CATLG'D LIT
         MVC   DMS1CVOL,=X'404040404040' CLEAR THE CVOL FIELD
         SPACE 1
WRITEREC EQU   *
         PUT   OUTDCB,DMS1REC          WRITE THE OUTPUT RECORD
         B     FORMAT1L                AND GO DO THIS ALL OVER AGAIN
         EJECT
**********************************************************************
*                                                                    *
*     ROUTINE TO PROCESS FROMAT 4 DSCB'S                             *
*                                                                    *
**********************************************************************
         SPACE 2
         DROP  R11
         USING FORMAT4,R11
FORM4    EQU   *
         CLEAR DMS1REC
         LA    R11,INREC               GET ADDR. TO FORMAT1 DSECT
         LA    R11,44(R11)
         LA    R3,DS4VTOCE             GET ADDR. TO VTOC EXTENT
         LH    R4,2(R3)                LOAD LO CC INTO REG
         LH    R6,6(R3)                LOAD HI CC INTO REG
         CLC   DMS1PTYP,=C'3330'       IS THIS 3330?
         BNE   VTO3340                 NO - CHECK FOR 3340
         SR    R6,R4                   GET DIFFERENCE IN CYLS
         MH    R6,=H'19'               CONVERT IT TO TRACKS
         AH    R6,8(R3)                ADD IN HI TRACKS
         SH    R6,4(R3)                SUBTRACT LOW TRACKS
         AH    R6,=H'1'                ADD BY 1 FOR SUB DIFFERENCE
         B     VTOCONT                 GO CONTINUE PROCESS
VTO3340  EQU   *
         CLC   DMS1PTYP,=C'3340'       IS THIS A 3340?
         BNE   VTO3350                 YES - CHECK FOR 3350
         SR    R6,R4                   GET DIFFERENCE IN CYLS
         MH    R6,=H'12'               CONVERT IT TO TRACKS
         AH    R6,8(R3)                AD IN HI TRACKS
         SH    R6,4(R3)                SUBTRACT LOW TRACKS
         AH    R6,=H'1'                ADD 1 FOR SUB DIFFERENCE
         B     VTOCONT
         SPACE 1
VTO3350  EQU   *
         CLC   DMS1PTYP,=C'3350'       IS THIS A 3350?
         BNE   VTO3375                 NO - THEN CHECK FOR 3375
         SR    R6,R4                   GET DIFFERENCE IN CYLS
         MH    R6,=H'30'               CONVERT IT TO TRACKS
         AH    R6,8(R3)                AD IN HI TRACKS
         SH    R6,4(R3)                SUBTRACT LOW TRACKS
         AH    R6,=H'1'                ADD 1 FOR SUB DIFFERENCE
         B     VTOCONT
         SPACE 1
VTO3375  EQU   *
         SR    R6,R4                   GET DIFFERENCE IN CYLS
         MH    R6,=H'12'               CONVERT IT TO TRACKS
         AH    R6,8(R3)                AD IN HI TRACKS
         SH    R6,4(R3)                SUBTRACT LOW TRACKS
         AH    R6,=H'1'                ADD 1 FOR SUB DIFFERENCE
         SPACE 2
VTOCONT  EQU   *
         MVC   DMS1NEXT,=X'0000'
         MVC   DMS1VSER,28(R10)
         CVD   R6,DBLWORK
         MVC   DMS1SPAL,DBLWORK+3
         MVC   DMS1TUSE,DBLWORK+3
         MVC   DMS1CDT,=X'0000000C'
         MVC   DMS1EDT,=X'0000000C'
         MVC   DMS1NEXT,=X'0000'
         MVC   DMS1DSN(4),=CL4'VTOC'
         B     WRITEREC
ENDVTOC  EQU   *
         CLOSE VTOCDCB                 CLOSE THE VTOC DCB
         LA    R9,20(R9)               BUMP TIOT BY 1 ENTRY
         B     WRONGDD                 AND GO PROCESS NEXT ONE
         SPACE 1
ERROR    EQU   *
         STM   R14,R1,ABENDSVE         STORE THE REGS FOR SNAP
         AP    ERRCNT,=P'1'            ADD TO NUMBER OF ERRORS
         SNAP  DCB=SNAPDD              DO A SNAP DUMP
         MVI   ERRSWTCH,X'FF'          SET ERROR SWITCH ON
         BR    R14                     AND GO BACK WHERE YOU CAME FROM
         SPACE 1
EOJ      EQU   *
         CLOSE  (OUTDCB,,SNAPDD,,OUTFORM5)
         L      R13,SAVEAREA+4
         RETURN (14,12),RC=0           END-OF-JOB!!!
         SPACE 1
FORM5PRC EQU   *
         MVC   OUTFRM5R(6),28(R10)     MOVE IN VOL-SER OF FORMAT 5
         MVI   OUTFRM5R+6,X'00'        ZERO OUT HIGH-LVL FOR COBOL
         MVC   OUTFRM5R+7(1),19(R10)   MOVE IN LOW-LVL OF DVC TYPE
         MVC   OUTFRM5R+8(140),INREC   MOVE IN FORMAT-5 DATA
         PUT   OUTFORM5,OUTFRM5R       AND WRITE THE RECORD
         B     FORMAT1L                AND GO READ ANOTHER RECORD
         EJECT
**********************************************************************
*                                                                    *
*              OUTPUT RECORD FROM THIS EXTRACT                       *
*                                                                    *
**********************************************************************
         SPACE 1
DMS1REC  DS    0CL105
DMS1DSN  DS    CL44                    DSNAME      X(44)
DMS1CDT  DS    PL4                     CREATE DATE S9(7) COMP-3
DMS1EDT  DS    PL4                     EXPIR DATE  S9(7) COMP-3
DMS1NEXT DS    CL2                     NUM OF EXTS S9(2) COMP
DMS1DSRG DS    CL2                     DSORG       X(2)
DMS1RCFM DS    CL3                     RECFM       X(3)
DMS1LRCL DS    CL2                     LRECL       S9(4) COMP
DMS1BLK  DS    CL2                     BLKSIZE     S9(4) COMP
DMS1KEYL DS    CL2                     KEY LEN     S9(2) COMP
DMS1RKP  DS    CL2                     REL KEY POS S9(2) COMP
DMS1APRM DS    CL3                     ALLOC PARM  X(3)
DMS1VSER DS    CL6                     RES VOL-SER X(6)
DMS1PTYP DS    CL4                     PACK TYPE   X(4)
DMS1SPAL DS    PL5                     SPACE ALLOC S9(9) COMP-3
DMS1TUSE DS    PL5                     TRACKS USED S9(9) COMP-3
DMS1CVOL DS    CL6                     CVOL        X(6)
DMS1CATV DS    CL6                     CATLG'D VOL X(6)
         DS    CL3
         SPACE 1
*        OUTPUT RECORD FOR FORMAT-5 EXTRACT
         SPACE 1
OUTFRM5R DS    CL148
         SPACE 1
CONVDATE DS    0D
GREGDTE1 DS    CL6
GREGDTE2 DS    CL8
JULDTE1  DS    CL7
INCRMON  DS    CL3
INDRDAY  DS    CL3
GREGEDT1 DS    CL8
GREGEDT2 DS    CL9
GREGEDT3 DS    CL12
DAY      DS    CL9
ERRCDE   DS    CL2
ERRMSG   DS    CL31
VATAREA  DS    0CL80
VATVOL   DS    CL6
         DS    CL1    ,
VATX1    DS    CL1
         DS    CL1    ,
VATX2    DS    CL1
         DS    CL1    ,
VATUNIT  DS    CL4
         DS    CL4
         DS    CL1    ,
VATX3    DS    CL1
         DS    CL60
ALLOC    DC    CL6'ALLOC '
INIT     DC    CL5'INIT '
PARM2    DS    0CL36
         DC    CL5'DD=DD'
PARM2DDN DC    CL6' '
         DC    CL1' '
         DC    CL7'VOLUME='
PARM2VOL DC    CL6' '
         DC    CL1' '
         DC    CL5'UNIT='
PARM2UNT DC    CL4' '
         DC    CL5' SHR;'
WORK     DC    F'200'
         DS    CL100
         DS    CL100
         SPACE 1
DBLWORK  DS    D
FULLWORK DS    F
         SPACE 1
EXTTBL   DS    CL230                   16 ENTRIES * 14 BYTES + 6 BYTES
         EJECT
**********************************************************************
*                                                                    *
*             CAMLST TO DO SEEK FOR FORMAT 2 AND 3 RECORDS           *
*                                                                    *
**********************************************************************
         SPACE 1
FORM2LST CAMLST SEEK,                                                  *
               SKADDR,                                                 *
               SKVOLSER,                                               *
               INREC
         SPACE 3
**********************************************************************
*                                                                    *
*             CAMLST TO DO CATALOG SEARCH                            *
*                                                                    *
**********************************************************************
         SPACE 1
SRCHCTLG CAMLST NAME,DMS1DSN,,CATDATA                                  *
               CATDATA
         SPACE 3
CATDATA  DS    0D
         DS    CL6
CATVOLSR DS    CL6
         DS    CL247
         EJECT
**********************************************************************
*                                                                    *
*               UNFORMATED INPUT VTOC RECORD                         *
*                                                                    *
**********************************************************************
         SPACE 1
INREC    DS    0CL140
         DS    CL44
INRIDENT DS    CL1
         DS    CL95
         SPACE 1
         DC    CL34'ABEND SAVE AREA FOR REGISTERS 14-1'
ABENDSVE DS    4F
ERRCNT   DC    PL3'0'
         SPACE 1
SKADDR   DS    CL5                     SEEK ADDRESS
SKVOLSER DS    CL6                     SEEK VOL-SER
         DS    0F
UCCHH    DS    0CL4
UCC      DS    CL2
UHH      DS    CL2
         SPACE 1
ERRSWTCH DC    XL1'00'
WORKDATE DS    XL3
SAVEAREA DS    18F
TIOTCNT  DC    PL3'0'
         SPACE 1
JFCBXLST DC    0F'0',X'87',AL3(SJFCB)
SJFCB    DS    0D,44F
         LTORG
         EJECT
**********************************************************************
*                                                                    *
*           D A T A   C O N T R O L   B L O C K S                    *
*                                                                    *
**********************************************************************
         SPACE 1
VTOCDCB  DCB   DDNAME=VTOC,MACRF=R,DSORG=PS,KEYLEN=44,                 *
               LRECL=96,BLKSIZE=96,RECFM=FS,EXLST=JFCBXLST,            *
               EODAD=ENDVTOC,SYNAD=ERROR,BUFNO=10
         SPACE 1
VATLIST  DCB   DDNAME=VATLIST,                                         *
               DSORG=PS,                                               *
               EODAD=VATEND,                                           *
               MACRF=GM
         SPACE
OUTDCB   DCB   DDNAME=DMSEXT,DSORG=PS,MACRF=(PM),                      *
               LRECL=105
SNAPDD   DCB   DDNAME=SNAPDD,DSORG=PS,MACRF=(PM)
OUTFORM5 DCB   DDNAME=DMSFREE,DSORG=PS,MACRF=(PM),LRECL=148
         SPACE 1
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 1
         PRINT GEN
         EJECT
**********************************************************************
*                                                                    *
*                   F O R M A T 1   D S C B                          *
*                                                                    *
**********************************************************************
FORMAT1  DSECT
         IECSDSL1 (1)
         EJECT
**********************************************************************
*                                                                    *
*                   F O R M A T 2   D S C B                          *
*                                                                    *
**********************************************************************
FORMAT2  DSECT
         IECSDSL1 (2)
         EJECT
**********************************************************************
*                                                                    *
*                   F O R M A T 3    D S C B                         *
*                                                                    *
**********************************************************************
FORMAT3  DSECT
         IECSDSL1 (3)
         EJECT
**********************************************************************
*                                                                    *
*                   F O R M A T 4   D S C B                          *
*                                                                    *
**********************************************************************
FORMAT4  DSECT
         IECSDSL1 (4)
         EJECT
**********************************************************************
*                                                                    *
*                   F O R M A T 5   D S C B                          *
*                                                                    *
**********************************************************************
FORMAT5  DSECT
         IECSDSL1 (5)
         END
