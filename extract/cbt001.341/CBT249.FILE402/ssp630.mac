         LOGO  CSECT=SSP630,                                           *
               TITLE='DATE SERVICES SUBROUTINE'
SSP630 CSECT
         SPACE
*      THIS MODULE IS A UTILITY MODULE WHICH PROVIDES
*      DATE SERVICES.  THE
*      MODULE IS A CALLED MODULE AND WILL PERFORM THE DATE UTILITY
*      SERVICES BASED UPON THE ACTION REQUESTED AS FOLLOWS.
*
*      DATE SERVICE REQUESTS.
*
*        1. CONVERT JULIAN DATE TO GREGORIAN DATE - THE MODULE WILL
*           CONVERT THE REQUESTED JULIAN DATE INTO GREGORIAN FORMAT
*           AND RETURN TO THE CALLER.
*
*        2. CONVERT GREGORIAN DATE TO JULIAN DATE - THE MODULE WILL
*           CONVERT THE REQUESTED GREGORIAN DATE INTO JULIAN FORMAT
*           AND RETURN TO THE CALLER.
*
*        3. COMPUTE DAYS BETWEEN TWO JULIAN DATES OR TWO GREGORIAN
*           DATES - THE MODULE WILL COMPUTE THE DAYS BETWEEN THE
*           REQUESTED LOW DATE AND THE REQUESTED HIGH DATE.  THE
*           COMPUTED DAYS ARE RETURNED TO THE CALLER.
*
*        4. COMPUTE ENDING DATE - THE MODULE WILL COMPUTE AN ENDING
*           DATE FOR EITHER JULIAN OR GREGORIAN DATE FORMATS. THE
*           LOW DATE AND NUMBER OF DAYS ARE REQUIRED. THE COMPUTED
*           ENDING DATE IS RETURNED TO THE CALLER.
*
*        CALL PARAMETERS.
*
*               01  DATE-LIST.
*                   05   REQUEST-CODE     PICTURE  9(1).
*                   05   DATE-1           PICTURE  S9(6) COMP-3.
*                   05   DATE-2           PICTURE  S9(6) COMP-3.
*                   05   NO-DAYS          PICTURE  S9(6) COMP-3.
*                   05   RESULT-CODE      PICTURE  X(1).
*
*        REQUEST CODE VALUES.
*
*                   1 - CONVERT JULIAN DATE TO GREGORIAN DATE.
*                   2 - CONVERT GREGORIAN DATE TO JULIAN DATE.
*                   3 - COMPUTE DAYS BETWEEN JULIAN DATES.
*                   4 - COMPUTE DAYS BETWEEN GREGORIAN DATES.
*                   5 - COMPUTE ENDING DATE FOR JULIAN DATE.
*                   6 - COMPUTE ENDING DATE FOR GREGORIAN DATE.
*
*        THE SERVICE REQUEST PARAMETER REQUIREMENTS ARE ON
*        THE NEXT PAGE.
*
* * * *
         EJECT
* * * *
*
*      SERVICE REQUEST PARAMETER REQUIREMENTS.
*
*        1. REQUEST CODE 1 - CONVERT TO GREGORIAN DATE
*
*           . DATE-1  --- JULIAN DATE TO CONVERT  (INPUT)
*           . DATE-2  --- GREGORIAN DATE CONVERTED (OUTPUT)
*           . NO-DAYS --- NOT USED FOR THIS REQUEST
*
*        2. REQUEST CODE 2 - CONVERT TO JULIAN DATE
*
*           . DATE-1  --- GREGORIAN DATE TO CONVERT (INPUT)
*           . DATE-2  --- JULIAN DATE CONVERTED (OUTPUT)
*           . NO-DAYS --- NOT USED FOR THIS REQUEST
*
*        3. REQUEST CODE 3 - COMPUTE DAYS BETWEEN JULIAN DATES
*
*           . DATE-1  --- STARTING JULIAN DATE (INPUT)
*           . DATE-2  --- ENDING JULIAN DATE (INPUT)
*           . NO-DAYS --- NUMBER OF DAYS BETWEEN DATES (OUTPUT)
*
*        4. REQUEST CODE 4 - COMPUTE DAYS BETWEEN GREGORIAN DATES
*
*           . DATE-1  --- STARTING GREGORIAN DATE (INPUT)
*           . DATE-2  --- ENDING GREGORIAN DATE (INPUT)
*           . NO-DAYS --- NUMBER OF DAYS BETWEEN DATES (OUTPUT)
*
*        5. REQUEST CODE 5 - COMPUTE ENDING JULIAN DATE
*
*           . DATE-1  --- STARTING JULIAN DATE (INPUT)
*           . DATE-2  --- ENDING JULIAN DATE (OUTPUT)
*           . NO-DAYS --- NUMBER OF DAYS TO ADD (INPUT)
*
*        6. REQUEST CODE 6 - COMPUTE ENDING GREGORIAN DATE
*
*           . DATE-1  --- STARTING GREGORIAN DATE (INPUT)
*           . DATE-2  --- ENDING GREGORIAN DATE (OUTPUT)
*           . NO-DAYS --- NUMBER OF DAYS TO ADD (INPUT)
*
*        NOTE.  THE MODULE WILL RETURN A VALID RETURN CODE (SPACE)
*               IF THE REQUEST WAS PROCESSED SUCCESSFULLY.  IF THE
*               MODULE WAS NOT ABLE TO PROCESS THE REQUEST BECAUSE
*               OF INVALID DATA, THE MODULE WILL RETURN AN ERROR
*               CODE (*) AND THE REQUEST DATA WILL NOT BE MODIFIED.
*
* * * *
         EJECT
* * * *
*
         SPACE
*        REGISTER USAGE
         SPACE
R0       EQU   0
R1       EQU   1                   MODULE WORK REGISTER
R2       EQU   2                   MODULE WORK REGISTER
R3       EQU   3                   MODULE WORK REGISTER
R4       EQU   4                   MODULE WORK REGISTER
R5       EQU   5                   MODULE WORK REGISTER
R6       EQU   6                   MODULE WORK REGISTER
R7       EQU   7                   TABLE LOOKUP REGISTER
R8       EQU   8                   WORK AREA DSECT REGISTER
R9       EQU   9                   SUBROUTINE LINK REGISTER
R10      EQU   10                  MODULE BASE REGISTER
R11      EQU   11                  MODULE BASE REGISTER
R12      EQU   12
R13      EQU   13                  MODULE SAVE REGISTER
R14      EQU   14                  MODULE LINK REGISTER
R15      EQU   15
         SPACE
*        MODULE EQUATES
         SPACE
GCONV    EQU   C'1'                CONVERT JULIAN TO GREGORIAN DATE
JCONV    EQU   C'2'                CONVERT GREGORIAN TO JULIAN DATE
BJDAY    EQU   C'3'                COMPUTE DAYS BETWEEN JULIAN DATES
BGDAY    EQU   C'4'                COMPUTE DAYS BETWEEN GREGORIAN DATES
EJDATE   EQU   C'5'                COMPUTE THE ENDING JULIAN DATE
EGDATE   EQU   C'6'                COMPUTE THE ENDING GREGORIAN DATE
         SPACE
ERROR    EQU   C'*'                ERROR CODE RETURNED TO CALLER
SPACE    EQU   C' '                VALID CODE RETURNED TO CALLER
LVALUE   EQU   X'00'               CONSTANT OF LOW VALUES
HVALUE   EQU   X'FF'               CONSTANT OF HIGH VALUES
         SPACE
LEAPYR   EQU   C'L'                INDICATES LEAP YEAR
NLEAPYR  EQU   C'N'                INDICATES NON-LEAP YEAR
SIGN     EQU   X'0C'               INTERNAL MODULE SIGN VALUE
ZONE     EQU   X'F0'               INTERNAL MODULE ZONE VALUE
         SPACE
*
* * * *
         STITL 'MODULE INITIALIZATION ROUTINE'
* * * *
*
         SPACE
*        ESTABLISH STANDARD MODULE TO MODULE LINKAGE CONVENTIONS
         SPACE
STEP1    DS    0H
         STM   R14,R12,12(R13)     SAVE CALLERS RETURN REGISTERS
         BALR  R10,0               LOAD MODULE BASE REGISTER
         USING *,R10,R11           IDENTIFY MODULE BASE REGISTER
         B     STEP101             TO BYPASS FOLLOWING DEFINITION
         SPACE
SYSNAME  DC    CL8'UTILITY '       SYSTEM IDENTIFIER
MODVML   DC    XL2'0100'           MODULE V-M LEVEL
MODPTF   DC    XL2'0000'           MODULE PTF LEVEL
MODUTF   DC    XL2'0000'           MODULE UTF LEVEL
MODNAME  DC    CL8'SSP630'       MODULE IDENTIFIER
         SPACE
STEP101  DS    0H
         LA    R11,4095(R10)       POINT TO BASE REGISTER LIMIT
         LA    R11,1(R11)          LOAD MODULE BASE REGISTER 2
         USING PARMLIST,R8         IDENTIFY PARAMETER LIST DSECT
         L     R8,0(R1)            LOAD ADDRESS OF CALLERS LIST
         SPACE
*        DETERMINE MODULE PROCESSING BASED ON CALLERS REQUEST
         SPACE
STEP101A DS    0H
         MVI   INTFLAG,LVALUE      RESET LINKAGE RETURN SWITCH
         CLI   PRMFUNC,GCONV       Q. CONVERT JULIAN TO GREGORIAN
         BE    STEP2               A. YES, TO PROCESS GREGORIAN
         CLI   PRMFUNC,JCONV       Q. CONVERT GREGORIAN TO JULIAN
         BE    STEP3               A. YES, TO PROCESS JULIAN
         CLI   PRMFUNC,BJDAY       Q. COMPUTE DAYS BETWEEN JULIAN
         BE    STEP4               A. YES, TO PROCESS JULIAN DAYS
         CLI   PRMFUNC,BGDAY       Q. COMPUTE DAYS BETWEEN GREGORIAN
         BE    STEP5               A. YES, TO PROCESS GREGORIAN DAYS
         CLI   PRMFUNC,EJDATE      Q. COMPUTE ENDING JULIAN DATE
         BE    STEP6               A. YES, TO PROCESS END JULIAN
         CLI   PRMFUNC,EGDATE      Q. COMPUTE ENDING GREGORIAN DATE
         BE    STEP7               A. YES, TO PROCESS END GREGORIAN
         MVI   PRMCODE,ERROR       INVALID REQUEST - POST ERROR CODE
         B     STEP102             TO RETURN CONTROL BACK TO CALLER
         SPACE
*        RETURN CONTROL BACK TO CALLER TO CONTINUE PROCESSING
         SPACE
STEP102  DS    0H
         LM    R14,R12,12(R13)     RESTORE CALLER RETURN REGISTERS
         LA    R15,0(0,0)          SET REGISTER TO RETURN CODE VALUE
         BR    R14                 TO RETURN CONTROL BACK TO CALLER
         SPACE
*
* * * *
         STITL 'JULIAN DATE TO GREGORIAN DATE CONVERSION'
* * * *
*
         SPACE
*        DATE CONVERSION ROUTINE - JULIAN TO GREGORIAN
         SPACE
STEP2    DS    0H
         MVC   DATE,PRMDATE1       SET INPUT DATE IN COMMON AREA
         BAL   R14,STEP8           GO VALIDATE INPUT DATE 1
         LA    R7,LPYTABLE         LOAD LEAP YEAR TABLE ADDRESS
         CLI   YRCODE,LEAPYR       Q. LEAP YEAR INDICATOR RETURNED
         BE    *+8                 A. YES, BYPASS NEXT INSTRUCTION
         LA    R7,REGTABLE         LOAD REGULAR YEAR TABLE ADDRESS
         LA    R6,1                INITIALIZE INDEX REGISTER
         LA    R3,PRMDATE1         LOAD INPUT DATE TO WORK REGISTER
         SPACE
STEP201  DS    0H
         CP    2(2,R3),2(2,R7)     Q. INPUT DATE LESS OR EQUAL TABLE
         BNH   STEP202             A. YES, MONTH LOCATED - CONTINUE
         LA    R6,1(R6)            SET REGISTER 6 UP BY 1 - MONTH
         LA    R7,2(R7)            SET REGISTER 7 UP BY 2 - TABLE
         B     STEP201             TO CONTINUE TABLE SEARCH
         SPACE
*        FORMAT OUTPUT GREGORIAN DATE -- RETURN TO CALLER
         SPACE
STEP202  DS    0H
         MVC   DAY,2(R3)           SET THE NUMBER OF DAYS
         SP    DAY,0(2,R7)         SUBTRACT DAYS FROM TABLE
         OI    DAY+1,SIGN          FORCE VALID SIGN ON DAY
         CVD   R6,WORK             CONVERT MONTH TO DECIMAL
         ZAP   MONTH,WORK+6(2)     POST CONVERTED TABLE MONTH
         OI    MONTH+1,SIGN        FORCE VALID SIGN ON MONTH
         MVO   YEAR,1(1,R3)        POST YEAR FROM JULIAN DATE
         OI    YEAR+1,SIGN         FORCE VALID SIGN ON YEAR
         UNPK  WORK+5(3),DAY       FORMAT GREGORIAN DAY
         UNPK  WORK+3(3),MONTH     FORMAT GREGORIAN MONTH
         UNPK  WORK+1(3),YEAR      FORMAT GREGORIAN YEAR
         PACK  PRMDATE2,WORK+1(7)  MOVE GREGORIAN DATE TO OUTPUT
         CLI   INTFLAG,HVALUE      Q. INTERNAL MODULE REQUEST
         BE    0(R9)               A. YES, RETURN TO SUBROUTINE
         MVI   PRMCODE,SPACE       SET RESULT CODE - NO ERROR
         B     STEP102             TO RETURN BACK TO CALLER
         SPACE
*
* * * *
         STITL 'GREGORIAN DATE TO JULIAN DATE'
* * * *
*
         SPACE
*        DATE CONVERSION ROUTINE - GREGORIAN TO JULIAN
         SPACE
STEP3    DS    0H
         MVC   DATE,PRMDATE1       SET INPUT DATE IN COMMON AREA
         BAL   R14,STEP8           GO VALIDATE INPUT DATE 1
         SPACE
STEP301  DS    0H
         UNPK  WORK,PRMDATE1       UNPACK INPUT GREGORIAN DATE
         OI    WORK+3,ZONE         FORCE VALID SIGN ON YEAR
         OI    WORK+5,ZONE         FORCE VALID SIGN ON MONTH
         OI    WORK+7,ZONE         FORCE VALID SIGN ON DAY
         PACK  MONTH,WORK+4(2)     PACK INPUT GREGORIAN MONTH
         PACK  DAY,WORK+6(2)       PACK INPUT GREGORIAN DAY
         PACK  DWORD,WORK+4(2)     PACK MONTH IN WORK AREA
         CVB   R6,DWORD            ESTABLISH DATE IN WORK REGISTER
         SLL   R6,1                POINT TO GREGORIAN MONTH IN WORK
         LA    R7,REGTABLE         LOAD NON-LEAP YEAR TABLE ADDRESS
         AR    R7,R6               COMPUTE ADDRESS OF MONTH VALUE
         BCTR  R7,0                DECREMENT TABLE BY 1 - 1 TOTAL
         BCTR  R7,0                DECREMENT TABLE BY 1 - 2 TOTAL
         ZAP   DAYS,0(2,R7)        POST DAY VALUE BASED ON MONTH
         AP    DAYS,DAY            ADD DAYS FROM GREGORIAN DATE
         CLI   YRCODE,LEAPYR       Q. LEAP YEAR INDICATOR RETURNED
         BNE   STEP302             A. NO, CONTINUE NORMAL PROCESSING
         CLC   WORK+4(2),MARCH     Q. MONTH EQUAL TO MARCH OR LATER
         BL    STEP302             A. NO, CONTINUE NORMAL PROCESSING
         AP    DAYS,=P'1'          ADD EXTRA DAY FOR LEAP YEAR
         SPACE
*        FORMAT OUTPUT JULIAN DATE -- RETURN TO CALLER
         SPACE
STEP302  DS    0H
         PACK  WORK+6(2),WORK+2(3) SHIFT YEAR IN WORKAREA
         LA    R4,PRMDATE2         SET ADDRESS OF OUTPUT DATE
         MVI   0(R4),LVALUE        SET FIRST BYTE TO ZEROES
         MVC   1(1,R4),WORK+6      MOVE YEAR TO OUTPUT DATE
         MVC   2(2,R4),DAYS+1      MOVE DAYS TO OUTPUT DATE
         CLI   INTFLAG,HVALUE      Q. INTERNAL MODULE REQUEST
         BE    0(R9)               A. YES, RETURN TO SUBROUTINE
         MVI   PRMCODE,SPACE       SET RESULT CODE - NO ERROR
         B     STEP102             TO RETURN BACK TO CALLER
         SPACE
*
* * * *
         STITL 'COMPUTE DAYS BETWEEN TWO JULIAN DATES'
* * * *
*
         SPACE
*        COMPUTE DAYS BETWEEN THE JULIAN DATES ROUTINE
         SPACE
STEP4    DS    0H
         MVC   DATE,PRMDATE1       MOVE DATE TO COMMON AREA
         BAL   R14,STEP8           GO VALIDATE INPUT DATE 1
         MVC   DATE,PRMDATE2       MOVE DATE TO COMMON AREA
         BAL   R14,STEP8           GO VALIDATE INPUT DATE 2
         MVC   BDATE,PRMDATE1      MOVE INPUT DATE 1 TO START DATE
         MVC   EDATE,PRMDATE2      MOVE INPUT DATE 2 TO END DATE
         B     STEP9               TO COMPUTE DAYS BETWEEN DATES
         SPACE
*
* * * *
         STITL 'COMPUTE DAYS BETWEEN TWO DATES'
* * * *
*
         SPACE
*        COMPUTE DAYS BETWEEN TWO GREGORIAN DATES ROUTINE
         SPACE
STEP5    DS    0H
         MVC   DATE,PRMDATE1       MOVE START DATE TO COMMON AREA
         BAL   R14,STEP8           GO VALIDATE INPUT DATE 1
         MVC   DATE,PRMDATE2       MOVE END DATE TO COMMON AREA
         BAL   R14,STEP8           GO VALIDATE INPUT DATE 2
         SPACE
*        CONVERT GREGORIAN DATES TO JULIAN PRIOR TO COMPUTING DAYS
         SPACE
STEP501  DS    0H
         MVI   INTFLAG,HVALUE      SET LINKAGE SWITCH TO RETURN
         MVC   SAVED1,PRMDATE1     SAVE GREGORIAN INPUT DATE 1
         MVC   SAVED2,PRMDATE2     SAVE GREGORIAN INPUT DATE 2
         BAL   R9,STEP301          CONVERT INPUT DATE 1 TO JULIAN
         MVC   BDATE,PRMDATE2      CONVERTED DATE 1 TO START DATE
         MVC   PRMDATE1,SAVED2     RESTORE DATE 2 FOR CONVERSION
         BAL   R9,STEP301          CONVERT INPUT DATE 2 TO JULIAN
         MVC   EDATE,PRMDATE2      CONVERTED DATE 2 TO END DATE
         MVC   PRMDATE1,SAVED1     RESTORE GREGORIAN INPUT DATE 1
         MVC   PRMDATE2,SAVED2     RESTORE GREGORIAN INPUT DATE 2
         MVI   INTFLAG,LVALUE      RESET LINKAGE RETURN SWITCH
         B     STEP9               TO COMPUTE DAYS BETWEEN DATES
         SPACE
*
* * * *
         STITL 'COMPUTE ENDING JULIAN DATE'
* * * *
*
         SPACE
*        COMPUTE ENDING JULIAN DATE ROUTINE
         SPACE
STEP6    DS    0H
         MVC   DATE,PRMDATE1       SET INPUT DATE IN COMMON AREA
         BAL   R14,STEP8           GO VALIDATE INPUT DATE 1
         SPACE
*        COMPUTE ENDING DATE JULIAN FORMAT - GREGORIAN CONVERTED
         SPACE
STEP601  DS    0H
         MVC   DAYS,PRMDAYS+1      POST NUMBER OF DAYS TO WORKAREA
         AP    DAYS,PRMDATE1+2(2)  ADD DAYS IN TO BEGIN DATE YEAR
         ZAP   DWORD,DAYS          PLACE TOTAL DAYS IN WORK AREA
         CVB   R3,DWORD            CONVERT TOTAL DAYS TO BINARY
         LA    R0,1461             LOAD TOTAL DAYS IN FOUR YEARS
         LR    R2,R3               LOAD TOTAL DAYS TO REGISTER 2
         SRDA  R2,32               PROPAGATE TOTAL DAYS SIGN BIT
         DR    R2,R0               DIVIDE BY DAYS IN FOUR YEARS
         SLA   R3,2                FOUR YEAR SEGMENTS -- 4 TIMES
         MVI   DWORD+7,SIGN        FORCE VALID SIGN FOR THE YEAR
         MVO   DWORD,PRMDATE1+1(1) PLACE INPUT YEAR IN WORK AREA
         CVB   R1,DWORD            CONVERT INPUT YEAR TO BINARY
         LA    R1,200(R1)          INCREMENT FOR A CENTURY CHANGE
         AR    R3,R1               CHANGE THE YEAR TO A NEW YEAR
         LR    R1,R3               GET LOW ORDER
         SLL   R1,30                 TWO BITS OF THE
         SRL   R1,29                   NEW YEAR FOR TABLE
         LA    R1,ODDTABLE(R1)     DISPLACEMENT TO ODD YEAR TABLE
         LTR   R2,R2               Q. THE COMPUTED DAYS POSITIVE
         BNP   STEP605             A. NO, TO ADJUST NEGATIVE DAYS
         SPACE
         SPACE
STEP602  DS    0H
         SH    R2,0(R1)            SUBTRACT TABLE DAYS FROM REMAINING
         BNP   STEP603             EXIT WHEN DAYS ARE ZERO OR LESS
         LA    R3,1(R3)            INCREMENT COMPUTED YEAR BY 1
         LA    R1,2(R1)            INCREMENT TABLE POINTER BY 2
         B     STEP602             CONTINUE THE DAYS TABLE SEARCH
         SPACE
STEP603  DS    0H
         AH    R2,0(R1)            RESTORE DAYS LEFT IN PART OF YEAR
         SPACE
STEP604  DS    0H
         CVD   R3,DWORD            CONVERT ENDING YEAR TO BINARY
         MVI   DATE,LVALUE         SET FIRST BYTE TO ZEROES
         MVO   DATE+1(2),DWORD+6(2) FORMAT ENDING JULIAN YEAR
         CVD   R2,DWORD             CONVERT THE REMAINING DAYS
         ZAP   DATE+2(2),DWORD+6(2) ADD IN THE REMAINING DAYS
         B     STEP607             TO FORMAT OUTPUT JULIAN DATE
         SPACE
STEP605  DS    0H
         LA    R1,6(R1)            ADJUST TABLE FOR NEGATIVE DAYS
         SPACE
STEP606  DS    0H
         BCTR  R3,0                DECREMENT THE COMPUTED YEAR BY 1
         AH    R2,0(R1)            COMPUTE DATE BACKWARD - ADD TABLE
         BP    STEP604             EXIT WHEN THE YEAR ESTABLISHED
         BCTR  R1,0                DECREMENT TABLE BY 1 - 1 TOTAL
         BCTR  R1,0                DECREMENT TABLE BY 1   2 TOTAL
         B     STEP606             CONTINUE UNTIL YEAR ESTABLISHED
         SPACE
*        FORMAT OUTPUT ENDING JULIAN DATE -- RETURN TO CALLER
         SPACE
STEP607  DS    0H
         CLI   PRMFUNC,EGDATE      Q. GREGORIAN ENDING DATE REQUEST
         BE    STEP701             A. YES, TO RETURN PRIOR TO EXIT
         MVC   PRMDATE2,DATE       MOVE JULIAN DATE TO OUTPUT
         MVI   PRMCODE,SPACE       SET RESULT CODE - NO ERROR
         B     STEP102             TO RETURN BACK TO CALLER
         SPACE
*
* * * *
         STITL 'COMPUTE ENDING GREGORIAN DATE'
* * * *
*
         SPACE
*        COMPUTE ENDING GREGORIAN DATE ROUTINE
         SPACE
STEP7    DS    0H
         MVI   INTFLAG,HVALUE      SET LINKAGE SWITCH TO RETURN
         BAL   R9,STEP3            CONVERT GREGORIAN TO JULIAN FIRST
         MVC   SAVED1,PRMDATE1     SAVE CALLERS INPUT GREGORIAN DATE
         MVC   PRMDATE1,PRMDATE2   REPLACE GREGORIAN WITH JULIAN DATE
         MVI   INTFLAG,LVALUE      RESET LINKAGE RETURN SWITCH
         B     STEP601             CALCULATE DAYS JULIAN FORMAT
         SPACE
*        CONVERT DATE BACK TO GREGORIAN FORMAT FOR RETURN TO USER
         SPACE
STEP701  DS    0H
         MVI   INTFLAG,HVALUE      SET LINKAGE SWITCH TO RETURN
         MVC   PRMDATE1,DATE       POST THE COMPUTED JULIAN DATE
         MVI   PRMFUNC,GCONV       POST JULIAN DATE CODE
         BAL   R9,STEP2            TO CONVERT JULIAN TO GREGORIAN
         MVI   PRMFUNC,EGDATE      POST GREGORIAN DATE CODE
         MVC   PRMDATE1,SAVED1     RESTORE CALLERS INPUT DATE 1
         MVI   PRMCODE,SPACE       SET RESULT CODE - NO ERROR
         MVI   INTFLAG,LVALUE      RESET LINKAGE RETURN SWITCH
         B     STEP102             TO RETURN BACK TO CALLER
         SPACE
*
* * * *
         STITL 'VALIDATE DATES SUBROUTINE'
* * * *
*
         SPACE
*        VALIDATE DATES FOR JULIAN OR GREGORIAN FORMATS
         SPACE
STEP8    DS    0H
         MVI   YRCODE,NLEAPYR      RESET LEAP YEAR INDICATOR
         CLI   PRMFUNC,GCONV       Q. CONVERT JULIAN TO GREGORIAN
         BE    STEP801             A. YES, TO VALIDATE JULIAN DATE
         CLI   PRMFUNC,BJDAY       Q. COMPUTE DAYS BETWEEN JULIAN
         BE    STEP801             A. YES, TO VALIDATE JULIAN DATE
         CLI   PRMFUNC,EJDATE      Q. COMPUTE ENDING JULIAN DATE
         BE    STEP801             A. YES, TO VALIDATE JULIAN DATE
         CLI   PRMFUNC,JCONV       Q. CONVERT GREGORIAN TO JULIAN
         BE    STEP809             A. YES, TO VALIDATE GREGORIAN DATE
         CLI   PRMFUNC,BGDAY       Q. COMPUTE DAYS BETWEEN GREGORIAN
         BE    STEP809             A. YES, TO VALIDATE GREGORIAN DATE
         CLI   PRMFUNC,EGDATE      Q. COMPUTE ENDING GREGORIAN DATE
         BE    STEP809             A. YES, TO VALIDATE GREGORIAN DATE
         MVI   PRMCODE,ERROR       INVALID REQUEST - POST ERROR CODE
         B     STEP102             TO RETURN BACK TO CALLER
         SPACE
*        VALIDATE JULIAN DATE - SIGN AND NUMERICS
         SPACE
STEP801  DS    0H
         ST    R9,SAVEREG          SAVE SUBROUTINE LINK REGISTER
         CLI   DATE,LVALUE         Q. FIRST BYTE CONTAIN ZEROES
         BNE   STEP808             A. NO, INVALID DATE - RETURN
         UNPK  VWORK,DATE+1(3)     UNPACK DATE FOR EDITING
         LA    R2,VWORK            ESTABLISH ADDRESS OF WORK AREA
         BAL   R9,STEP806          CHECK DATE FOR VALID CONTENTS
         ZAP   VWORK,=P'0'         SET DATE WORKAREA TO ZEROES
         MVO   VWORK+6(2),DATE+1(1) POST JULIAN YEAR TO WORK AREA
         BAL   R9,STEP807          TO PERFORM THE LEAP YEAR CHECK
         CP    DATE+2(2),=P'1'     Q. DAYS LESS THAN MINIMUM (ONE)
         BL    STEP808             A. YES, INVALID DATE ENCOUNTERED
         CP    DATE+2(2),MDAYS     Q. DAYS GREATER THAN MAXIMUM (SET)
         BH    STEP808             A. YES, INVALID DATE ENCOUNTERED
         MVI   PRMCODE,SPACE       SET RETURN CODE - NO ERROR
         L     R9,SAVEREG          LOAD SUBROUTINE LINK REGISTER
         BR    R14                 RETURN TO CALLING ROUTINE
         SPACE
*        CHECK DATE FOR VALID SIGN -- MUST BE VALID SIGN
         SPACE
STEP806  DS    0H
         TM    7(R2),X'F0'         Q. VALID DATE SIGN - 'F' SIGN
         BO    STEP806A            A. YES, TO CONTINUE DATE EDIT
         TM    7(R2),X'D0'         Q. VALID DATE SIGN - 'D' SIGN
         BO    STEP806A            A. YES, TO CONTINUE DATE EDIT
         TM    7(R2),X'C0'         Q. VALID DATE SIGN - 'C' SIGN
         BO    STEP806A            A. YES, TO CONTINUE DATE EDIT
         B     STEP808             POST ERROR CODE - RETURN BACK
         SPACE
*        CHECK DATE FOR NUMERIC VALUE -- MUST BE NUMERIC
         SPACE
STEP806A DS    0H
         OI    7(R2),ZONE          FORCE 'F' SIGN FOR NUMERIC TEST
         MVC   NUMERICS(8),ZEROES  POST ZEROES TO THE WORK AREA
         MVN   NUMERICS(8),0(R2)   POST THE DATE NUMERICS ONLY
         CLC   NUMERICS(8),0(R2)   Q. ALL NUMERICS IN THE DATE
         BNE   STEP808             A. NO, POST ERROR CODE - RETURN
         BR    R9                  RETURN TO CALLING SUBROUTINE
         SPACE
*        CHECK DATE FOR LEAP YEAR -- SET FEBRUARY AND DAYS
         SPACE
STEP807  DS    0H
         SR    R6,R6               CLEAR LEAP YEAR WORK REGISTER
         CVB   R7,VWORK            CONVERT THE YEAR TO BINARY
         D     R6,=F'4'            DIVIDE BY 4 (FOR LEAP YEAR)
         LTR   R6,R6               Q. REMAINDER EQUAL TO ZERO
         BZ    STEP807A            A. YES, TO SET LEAP YEAR CODE
         MVC   FEB,=P'28'          SET FEBRUARY AS 28 DAYS IN TABLE
         MVC   MDAYS,=P'365'       POST MAXIMUM DAYS - NON-LEAP YEAR
         MVI   YRCODE,NLEAPYR      SET VALIDATE CODE - NON-LEAP YEAR
         BR    R9                  RETURN TO CALLING SUBROUTINE
         SPACE
*        SET PROCESSING FOR LEAP YEAR -- SET FEBRUARY AND DAYS
         SPACE
STEP807A DS    0H
         MVC   FEB,=P'29'          SET FEBRUARY AS 29 DAYS IN TABLE
         MVC   MDAYS,=P'366'       MAXIMUM DAYS - FOR LEAP YEAR
         MVI   YRCODE,LEAPYR       SET VALIDATE CODE - FOR LEAP YEAR
         BR    R9                  RETURN TO CALLING SUBROUTINE
         SPACE
*        INVALID DATE - RETURN ERROR TO CALLER
         SPACE
STEP808  DS    0H
         MVI   PRMCODE,ERROR       INVALID DATE - POST ERROR CODE
         B     STEP102             TO RETURN BACK TO CALLER
         SPACE
*        VALIDATE GREGORIAN DATE -- MUST BE VALID MONTH AND SIGN
         SPACE
STEP809  DS    0H
         ST    R9,SAVEREG          SAVE SUBROUTINE LINK REGISTER
         UNPK  VWORK,DATE          UNPACK DATE FOR GREGORIAN EDIT
         LA    R2,VWORK            ESTABLISH ADDRESS OF WORK AREA
         BAL   R9,STEP806          CHECK THE DATE FOR VALID SIGN
         PACK  YR,VWORK+2(2)       REFORMAT FOR VALIDATION -YEAR
         PACK  MO,VWORK+4(2)       REFORMAT FOR VALIDATION -MONTH
         PACK  DY,VWORK+6(2)       REFORMAT FOR VALIDATION -DAY
         ZAP   VWORK,YR            POST YEAR INTO DATE WORKAREA
         BAL   R9,STEP807          TO PERFORM THE LEAP YEAR CHECK
         CP    MO,=P'1'            Q. MONTH LESS THAN THE MINIMUM
         BL    STEP808             A. YES, INVALID DATE - RETURN
         CP    MO,=P'12'           Q. MONTH GREATER THAN MAXIMUM
         BH    STEP808             A. YES, INVALID DATE - RETURN
         L     R9,SAVEREG          LOAD SUBROUTINE LINK REGISTER
         SPACE
*        FIND MAXIMUM DAYS PER MONTH FROM MONTH TABLE
         SPACE
STEP810  DS    0H
         ZAP   VWORK,MO            INITIALIZE WORK AREA WITH MONTH
         CVB   R6,VWORK            CONVERT MONTH TO BINARY VALUE
         SLL   R6,1                MULTIPLY MONTH BY OFFSET (2)
         LA    R2,MOTABLE-2        LOAD TABLE ADDRESS (ADJUSTED)
         AR    R6,R2               COMPUTE CORRECT TABLE OFFSET
         CP    DY,0(2,R6)          Q. DAYS LESS THAN MAXIMUM - TABLE
         BH    STEP808             A. NO, INVALID DATE - RETURN
         CP    DY,=P'1'            Q. DAYS LESS THAN MINIMUM - (ONE)
         BL    STEP808             A. YES, INVALID DATE - RETURN
         MVI   PRMCODE,SPACE       SET RETURN CODE - NO ERROR
         BR    R14                 RETURN TO CALLING ROUTINE
         SPACE
*
* * * *
         STITL 'COMPUTE DAYS BETWEEN TWO DATES'
* * * *
*
         SPACE
*        COMPUTE DAYS BETWEEN JULIAN DATES (START AND END)
         SPACE
STEP9    DS    0H
         CP    BDATE,EDATE         Q. START DATE VS. ENDING DATE
         BH    STEP906A            A. HIGH, TO RETURN ZEROES
         MVI   DWORD+7,SIGN        FORCE VALID SIGN ON DATE
         MVO   DWORD,BDATE+1(1)    POST JULIAN DATE START YEAR
         CVB   R3,DWORD            CONVERT START DATE TO BINARY
         MVO   DWORD,EDATE+1(1)    POST JULIAN DATE ENDING YEAR
         CVB   R4,DWORD            CONVERT ENDING DATE TO BINARY
         SR    R4,R3               COMPUTE YEARS BETWEEN DATES
         BP    STEP903             POSITIVE - NO CENTURY CHANGE
         BZ    STEP906             ZERO - CHECK START AND END DAY
         SPACE
STEP902  DS    0H
         LA    R0,100              ADJUST COMPUTED ENDING DATE
         AR    R4,R0               NEXT CENTURY FROM START DATE
         SPACE
STEP903  DS    0H
         SLL   R3,30               COMPUTE NUMBER OF YEARS PAST
         SRL   R3,29               MULTIPLY LEAP YEAR TIMES 2
         SRDL  R4,2                DIVIDE NUMBER OF YEARS BY 4
         SRL   R5,30               SAVE REMAINDER FOR LATER USE
         LA    R1,1461             SET NUMBER OF DAYS - 4 YEARS
         MR    R0,R4               MULTIPLY BY 4 YEAR SEGMENTS
         LA    R3,ODDTABLE(R3)     DISPLACEMENT TO ODD YEAR TABLE
         LTR   R5,R5               Q. COMPUTED REMAINDER RETURNED
         BZ    STEP905             A. NO, COMPUTE NUMBER OF DAYS
         SPACE
*        COMPUTE NUMBER OF DAYS FROM START TO ENDING YEAR
         SPACE
STEP904  DS    0H
         AH    R1,0(R3)            ADD NUMBER OF ODD YEAR DAYS
         LA    R3,2(R3)            NEXT ENTRY IN ODD YEAR TABLE
         BCT   R5,STEP904          DECREMENT ODD YEARS VIA LOOP
         SPACE
STEP905  DS    0H
         XC    DWORD,DWORD         SET DATE WORKAREA TO ZEROES
         MVC   DWORD+6(2),EDATE+2  POST CALLER INPUT ENDING DATE
         CVB   R2,DWORD            CONVERT ENDING DATE TO BINARY
         AR    R1,R2               ADD ENDING YEAR DAYS TO COUNTER
         MVC   DWORD+6(2),BDATE+2  POST CALLER INPUT START DATE
         CVB   R2,DWORD            CONVERT START DATE TO BINARY
         SR    R1,R2               SUBT START YEAR DAYS FROM COUNTER
         CVD   R1,DWORD            CONVERT COMPUTED DAYS TO DECIMAL
         MVI   PRMDAYS,LVALUE      SET FIRST BYTE OF DAYS TO ZERO
         MVC   PRMDAYS+1(3),DWORD+5 POST COMPUTED NUMBER OF DAYS
         MVI   PRMCODE,SPACE       SET RESULT CODE - NO ERROR
         B     STEP102             TO RETURN BACK TO CALLER
         SPACE
*        CHECK START DATE AND ENDING DATE RANGES
         SPACE
STEP906  DS    0H
         CP    BDATE+2(2),EDATE+2(2) Q. START LESS THAN ENDING DATE
         BL    STEP903             A. LOW, TO CONTINUE DATE ROUTINE
         BH    STEP902             A. HIGH, TO SET FOR 100 YEARS
         SPACE
*        SET DAYS BETWEEN TO ZERO - RETURN TO CALLER
         SPACE
STEP906A DS    0H
         ZAP   PRMDAYS,=P'0'       SET NUMBER OF DAYS TO ZERO
         MVI   PRMCODE,SPACE       SET RESULT CODE - NO ERROR
         B     STEP102             TO RETURN BACK TO CALLER
         SPACE
*
* * * *
         STITL 'MODULE TABLES AND CONSTANTS'
* * * *
*
         SPACE
*        TABLE CONTAINS VALUES FOR NUMBER OF DAYS IN THE ODD YEARS
*        FOR EIGHT CONSECUTIVE YEARS. USED FOR DAYS COMPUTATIONS.
         SPACE
ODDTABLE DS    0H
         DC    H'366'              VALUE FOR YEAR 1 - 366
         DC    H'365'              VALUE FOR YEAR 2 - 366
         DC    H'365'              VALUE FOR YEAR 3 - 366
         DC    H'365'              VALUE FOR YEAR 4 - 366
         DC    H'366'              VALUE FOR YEAR 5 - 366
         DC    H'365'              VALUE FOR YEAR 6 - 365
         DC    H'365'              VALUE FOR YEAR 7 - 365
         DC    H'365'              VALUE FOR YEAR 8 - 365
         DC    H'365'              VALUE FOR YEAR 9 - 365
         SPACE
*        TABLE CONTAINS VALUES FOR EACH MONTH USED FOR CONVERSION OF
*        NON LEAP YEAR REQUESTS. ENTRIES = (1ST DAY OF MONTH) LESS 1.
         SPACE
REGTABLE DS    0H
         DC    PL2'0'              VALUE FOR JANUARY
         DC    PL2'31'             VALUE FOR FEBRUARY
         DC    PL2'59'             VALUE FOR MARCH
         DC    PL2'90'             VALUE FOR APRIL
         DC    PL2'120'            VALUE FOR MAY
         DC    PL2'151'            VALUE FOR JUNE
         DC    PL2'181'            VALUE FOR JULY
         DC    PL2'212'            VALUE FOR AUGUST
         DC    PL2'243'            VALUE FOR SEPTEMBER
         DC    PL2'273'            VALUE FOR OCTOBER
         DC    PL2'304'            VALUE FOR NOVEMBER
         DC    PL2'334'            VALUE FOR DECEMBER
         DC    PL2'365'            VALUE FOR YEAR TOTAL
         SPACE
*
* * * *
         EJECT
* * * *
         SPACE
*        TABLE CONTAINS VALUES FOR EACH MONTH USED FOR CONVERSION OF
*        LEAP YEAR REQUESTS. ENTRIES = (1ST DAY OF MONTH) LESS 1.
         SPACE
LPYTABLE DS    0H
         DC    PL2'0'              VALUE FOR JANUARY
         DC    PL2'31'             VALUE FOR FEBRUARY
         DC    PL2'60'             VALUE FOR MARCH
         DC    PL2'91'             VALUE FOR APRIL
         DC    PL2'121'            VALUE FOR MAY
         DC    PL2'152'            VALUE FOR JUNE
         DC    PL2'182'            VALUE FOR JULY
         DC    PL2'213'            VALUE FOR AUGUST
         DC    PL2'244'            VALUE FOR SEPTEMBER
         DC    PL2'274'            VALUE FOR OCTOBER
         DC    PL2'305'            VALUE FOR NOVEMBER
         DC    PL2'335'            VALUE FOR DECEMBER
         DC    PL2'366'            VALUE FOR YEAR TOTAL
         SPACE
*        TABLE CONTAINS VALUES FOR NUMBER OF DAYS IN EACH MONTH.
*        FEBRUARY CONTAINS ZERO AND IS INITIALIZED WITH 28 OR 29.
         SPACE
MOTABLE  DS    0H
JAN      DC    PL2'31'             DAYS FOR JANUARY
FEB      DC    PL2'00'             DAYS FOR FEBRUARY
MAR      DC    PL2'31'             DAYS FOR MARCH
APR      DC    PL2'30'             DAYS FOR APRIL
MAY      DC    PL2'31'             DAYS FOR MAY
JUN      DC    PL2'30'             DAYS FOR JUNE
JUL      DC    PL2'31'             DAYS FOR JULY
AUG      DC    PL2'31'             DAYS FOR AUGUST
SEP      DC    PL2'30'             DAYS FOR SEPTEMBER
OCT      DC    PL2'31'             DAYS FOR OCTOBER
NOV      DC    PL2'30'             DAYS FOR NOVEMBER
DEC      DC    PL2'31'             DAYS FOR DECEMBER
         SPACE
*
* * * *
         STITL 'MODULE WORK AREAS'
* * * *
*
         SPACE
*        MODULE WORK AREA DEFINITIONS
         SPACE
WKAREA1  DS    0D                  DATE MODULE PROCESSING AREA 1
WORK     DC    D'0'                  . DOUBLE WORD WORKAREA 1
DWORD    DC    D'0'                  . DOUBLE WORD WORKAREA 2
VWORK    DC    D'0'                  . DOUBLE WORD WORKAREA 3
         SPACE
WKAREA2  DS    0F                  DATE MODULE PROCESSING AREA 2
SAVEREG  DC    F'0'                  . INTERNAL LINK SAVEAREA
YEAR     DC    H'0'                  . YEAR --- DATE WORKAREA
MONTH    DC    H'0'                  . MONTH -- DATE WORKAREA
DAY      DC    H'0'                  . DAY ---- DATE WORKAREA
         SPACE
WKAREA3  DS    0H                  DATE MODULE PROCESSING AREA 3
DATE     DC    PL4'0'                . DATE EDITING WORKAREA
BDATE    DC    PL4'0'                . STARTING DATE WORKAREA
EDATE    DC    PL4'0'                . ENDING DATE - WORKAREA
SAVED1   DC    PL4'0'                . INPUT DATE 1 SAVEAREA
SAVED2   DC    PL4'0'                . INPUT DATE 2 SAVEAREA
         SPACE
WKAREA4  DS    0H                  DATE MODULE PROCESSING AREA 4
YR       DC    PL2'0'                . YEAR --- EDIT WORKAREA
MO       DC    PL2'0'                . MONTH -- EDIT WORKAREA
DY       DC    PL2'0'                . DAY ---- EDIT WORKAREA
MDAYS    DC    PL2'0'                . MAXIMUM DAYS WORKAREA
DAYS     DC    PL3'0'                . REQUEST DAYS WORKAREA
         SPACE
WKAREA5  DS    0H                  DATE MODULE PROCESSING AREA 5
INTFLAG  DC    XL1'00'               . INTERNAL RETURN SWITCH
YRCODE   DC    CL1' '                . INTERNAL YEAR INDICATOR
NUMERICS DC    8CL1'0'               . NUMERIC EDIT WORKAREA
ZEROES   DC    8CL1'0'               . MODULE AREA OF ZEROES
MARCH    DC    CL2'03'               . MODULE VALUE FOR MARCH
         SPACE
         LTORG                     GENERATE MODULE LITERAL POOL
         SPACE
*
* * * *
         STITL 'PARAMETER LIST DEFINITION'
* * * *
*
         SPACE
*        CALLER PARAMETER LIST DEFINITION
         SPACE
PARMLIST DSECT                     CALLER PARAMETER LIST CONTENTS
PRMFUNC  DS    CL1                   . SERVICE REQUEST CODE
PRMDATE1 DS    PL4                   . SERVICE DATE 1 FIELD
PRMDATE2 DS    PL4                   . SERVICE DATE 2 FIELD
PRMDAYS  DS    PL4                   . SERVICE NUMBER OF DAYS
PRMCODE  DS    CL1                   . SERVICE RETURN CODE
         SPACE
*
* * * *
         SPACE
         END
