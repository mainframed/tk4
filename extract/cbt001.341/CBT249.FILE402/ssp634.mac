         LOGO  CSECT=SSP634,                                           *
               TITLE='PARM ANALYSIS'
***********************************************************************
*
*              SSP634
*
***********************************************************************
*
* THIS SUBROUTINE ANALYZES A PARM-LIST AS PRODUCED BY THE PARM
* OPERAND OF THE 'EXEC' JOB CONTROL STATEMENT AND FORMATS THE
* DATA ACCORDING TO CALLING PROGRAM SPECIFICATIONS.
*
* THE FORM OF THE PARM LIST IS AS FOLLOWS:
*        0-1   BINARY LENGTH OF DATA STRING
*        2-N   DATA STRING
*
* INPUT TO THE SUBROUTINE CONSISTS OF THE ADDRESS OF THE PARM
* LIST FOLLOWED BY A LIST OF ADDRESSES OF CONTROL FIELDS WHICH
* IDENTIFY THE FIELDS REQUIRED IN THE PARM LIST. THESE CONTROL
* FIELDS HAVE THE FOLLOWING FORMAT:
*
*        0-1   X'0000' - INDICATES A POSITIONAL PARAMETER IN THE PARM
*                        LIST.
*              X'0001' - INDICATES A KEYWORD PARAMETER IN THE PARM
*                        LIST.
*        2-3   SPECIFIES THE LENGTH OF THE FIELD WHICH IS TO CONTAIN
*              THE CORRESPONDING PARAMETER IN THE PARM LIST.
*        4-5   SPECIFIES THE LENGTH OF THE KEYWORD IF A KEYWORD
*              PARAMETER IS INDICATED BY BYTES 0-1. THIS FIELD IS
*              IGNORED IF A POSITIONAL PARAMETER IS INDICATED BUT
*              A 2-BYTE FILLER MUST BE PRESENT.
*        6-    THE KEYWORD(IF INDICATED) FOLLOWED BY THE FIELD
*              WHICH IS TO CONTAIN THE ITEM FROM THE PARM-LIST.
*
* EXAMPLE CALLING SEQUENCES:
*
* ASSEMBLY LANGUAGE:
*        SAVE  (14,12)
*        L     2,0(1)
*        CALL  SSP634,((2),P1,P2,K1,K2),VL
*        .
*        .
*        .
*P1      DC    AL2(0,5,0)
*P1DATA  DS    CL5
*P2      DC    AL2(0,10,0)
*P2DATA  DS    CL10
*K1      DC    AL2(1,5,3)
*        DC    C'JOB'
*JOB     DS    CL5
*K2      DC    AL2(1,1,5)
*        DC    C'STYLE'
*STYLE   DS    C
*
******************************
*
* COBOL:
*        WORKING-STORAGE SECTION.
*        01    P1.
*              05 P1T PIC S9(4) COMP VALUE 0.
*              05 P1L PIC S9(4) COMP VALUE 5.
*              05 FILLER PIC XX.
*              05 P1DATA PIC X(5).
*        01    P2.
*              05 P2T PIC S9(4) COMP VALUE 0.
*              05 P2L PIC S9(4) COMP VALUE 10.
*              05 FILLER PIC XX.
*              05 P2DATA PIC X(10).
*        01    K1.
*              05 K1T PIC S9(4) COMP VALUE 1.
*              05 K1L PIC S9(4) COMP VALUE 5.
*              05 K1KL PIC S9(4) COMP VALUE 3.
*              05 K1K PIC X(3) VALUE 'JOB'.
*              05 JOB PIC X(5).
*        01    K2.
*              05 K2T PIC S9(4) COMP VALUE 1.
*              05 K2L PIC S9(4) COMP VALUE 1.
*              05 K2KL PIC S9(4) VALUE 5.
*              05 K2K PIC X(5) VALUE 'STYLE'.
*              05 STYLE PIC X.
*        LINKAGE SECTION.
*        77    PARM-LIST PIC X(102).
*        PROCEDURE DIVISION USING PARM-LIST.
*        BEGIN.
*              CALL 'SSP634' USING PARM-LIST, P1, P2, K1, K2.
*
******************************
*
*
* EXECUTION RESULT EXAMPLE:
*
*        //STEP1  EXEC  PGM=PROGRAM,PARM=(ABC,DEFGH,STYLE=1,JOB=1234)
*
*   WOULD PRODUCE THE FOLLOWING RESULTS IN THE FIELDS NAMED
*   IN THE ABOVE CODING EXAMPLES:
*
*        P1DATA - 'ABC  '
*        P2DATA - 'DEFGH     '
*        JOB    - '1234 '
*        STYLE  - '1'
*
* IF A SPECIFIED PARAMETER IS SHORTER THAN THE LENGTH SPECIFIED,
* IT IS PADDED ON THE RIGHT WITH BLANKS. THIS APPLIES TO OMITTED
* PARAMETERS ALSO. IF A PARAMETER IS LONGER THAN THE SPECIFIED
* LENGTH, THE INPUT VALUE IS TRUNCATED ON THE RIGHT.
*
*
* * * * * * * * * * * * * * * NOTE * * * * * * * * * * * * * * * * * *
* THE SSP634 ROUTINE ITSELF IS REENTRANT; HOWEVER, IF THE CALLING
* PROGRAM IS TO BE REENTRANT, THE CONTROL FIELDS SHOULD BE BUILT
* DYNAMICALLY.
***********************************************************************
         EJECT
SSP634 CSECT
         USING *,R15
         SAVE  (14,12),,*
         LR    R3,R15
         LR    R2,R1
         GETMAIN R,LV=72
         ST    R13,4(R1)
         LR    R13,R1
         LR    R1,R2
         LR    R15,R3
         SPACE
         L     R4,0(R1)            GET ADDRESS OF PARM-LIST
         LA    R1,4(R1)
         LR    R6,R1               R6 = FIRST PARAMETER POINTER
         LA    R3,1                INITIALIZE PARAMETER COUNTER
COUNTP   TM    0(R1),X'80'         END OF PARAMETER LIST?
         BO    GOTCOUNT
         LA    R3,1(R3)            NO-INCREMENT COUNT
         LA    R1,4(R1)
         B     COUNTP
         SPACE
GOTCOUNT LH    R5,0(R4)            GET LENGTH OF PARM LIST
         LA    R4,2(R4)            BYPASS COUNT FIELD
         SPACE
         LR    R12,R3
         LR    R7,R6
INTFLDS  L     R2,0(R7)            INITIALIZE CALLER DATA FIELDS
         LH    R11,2(R2)           GET LENGTH OF FIELD
         LA    R10,6(R2)           GET ADDRESS
         CLI   1(R2),0             POSITIONAL?
         BE    INTFLDS1            YES
         AH    R10,4(R2)           NO-ADD KEYWORD LENGTH
INTFLDS1 LR    R0,R10
         SR    R1,R1
         ICM   R1,8,=C' '
         MVCL  R10,R0              INITIALIZE FIELD TO BLANKS
         LA    R7,4(R7)            STEP TO NEXT PARAMETER
         BCT   R12,INTFLDS
         SPACE 2
SCAN     LTR   R5,R5               CHECK PARM-LIST LENGTH
         BNP   RETURN              RETURN IF NOT GREATER THAN ZERO
         LA    R7,256
         CR    R7,R5
         BNH   SCAN1
         LR    R7,R5
SCAN1    LA    R1,0(R7,R4)
         LA    R2,1
         BCTR  R7,0
         EX    R7,TRT              SCAN FOR A DELIMITER
         SR    R1,R4               GET LENGTH OF ITEM
         CLM   R2,1,=X'1'          POSITIONAL PARAMETER?
         BNE   SCAN2               NO-(KEYWORD)
         BAL   R14,POS             PROCESS POSITIONAL PARAMETER
         LA    R4,1(R1,R4)         UPDATE PARM-LIST POINTER
         SR    R5,R1               AND LENGTH REMAINING
         BNP   RETURN
         BCT   R5,SCAN             NEXT
         B     RETURN
SCAN2    LR    R8,R4               SAVE ADDRESS OF KEYWORD
         LR    R9,R1               CHECK FOR ZERO KEYWORD LENGTH
         LA    R4,1(R1,R4)
         SR    R5,R9
         BNP   RETURN
         BCT   R5,SCAN3
         B     RETURN
SCAN3    LA    R7,256
         CR    R7,R5
         BNH   SCAN4
         LR    R7,R5
SCAN4    LA    R1,0(R7,R4)
         LA    R2,1
         BCTR  R7,0
         EX    R7,TRT              SCAN FOR END OF KEYWORD VALUE
         SR    R1,R4
         CLM   R2,1,=X'1'          ENDED BY COMMA?
         BNE   EQINKY              NO-EQUAL SIGN IN KEYWORD VALUE
SCAN5    BAL   R14,KEY             PROCESS KEYWORD
         LA    R4,1(R1,R4)         UPDATE PARM POINTER
         SR    R5,R1               AND LENGTH REMAINING
         BNP   RETURN
         BCT   R5,SCAN
         B     RETURN
         SPACE 3
EQINKY   LA    R11,1(R1)           GET CURRENT LENGTH
         LA    R10,1(R1,R4)        POINT PAST EXTRA = SIGN
         LR    R12,R5
EQINKY1  SR    R12,R1
         BCT   R12,EQINKY2
         LR    R1,R11
         B     SCAN5
EQINKY2  LA    R7,256
         CR    R7,R12
         BNH   EQINKY3
         LR    R7,R12
EQINKY3  LA    R1,0(R7,R10)
         LA    R2,1
         BCTR  R7,0
         EX    R7,TRT2
         SR    R1,R10
         CLM   R2,1,=X'1'
         BNE   EQINKY4
         LA    R1,0(R1,R11)
         B     SCAN5
EQINKY4  LA    R11,1(R1,R11)       ANOTHER =
         LA    R10,1(R1,R10)
         B     EQINKY1
         SPACE 3
RETURN   L     R2,0(R6)
         CLI   1(R2),1             KEYWORD PARAMETER?
         BE    RETURN1             YES
         NI    1(R2),X'01'         RESET POSITIONAL FLAGS
RETURN1  LA    R6,4(R6)
         BCT   R3,RETURN
         LR    R1,R13
         L     R13,4(R13)
         FREEMAIN R,LV=72,A=(1)
         RETURN (14,12),RC=0
TRT      TRT   0(0,R4),DTAB
TRT2     TRT   0(0,R10),DTAB
DTAB     DC    256X'0'
         ORG   DTAB+C','
         DC    X'1'
         ORG   DTAB+C'='
         DC    X'2'
         ORG
         EJECT
*
* POSITIONAL PARAMETER:
*        R1 = LENGTH OF DATA
*        R4 = ADDRESS
*
POS      DS    0H
         SAVE  (14,12)
POSL     L     R2,0(R6)            GET A PARAMETER
         CLI   1(R2),0             UNFILLED POSITIONAL?
         BE    POS1
         LA    R6,4(R6)
         BCT   R3,POSL
POSR     RETURN (14,12)
POS1     LH    R7,2(R2)            GET LENGTH OF CALLER'S FIELD
         LA    R6,6(R2)            GET ADDRESS
         LR    R5,R1
         CR    R5,R7               INPUT LENGTH : FIELD LENGTH
         BH    POS2
         BL    POS3
POSM     MVCL  R6,R4               MOVE DATA
         OI    1(R2),X'10'         MARK FIELD AS FILLED
         B     POSR
POS2     LR    R5,R7
         B     POSM
POS3     LR    R7,R5
         B     POSM
         EJECT
*
* KEYWORD PARAMETER:
*        R8    KEYWORD ADDRESS
*        R9    KEYWORD LENGTH
*        R1    DATA LENGTH
*        R4    DATA ADDRESS
*
KEY      DS    0H
         SAVE  (14,12)
KEYL     L     R2,0(R6)
         CLI   1(R2),1             KEYWORD?
         BE    KEY2
KEY1     LA    R6,4(R6)
         BCT   R3,KEYL
KEYR     RETURN (14,12)
KEY2     LH    R11,4(R2)
         LA    R10,6(R2)
         CR    R11,R9
         BNE   KEY1                LENGTHS NOT EQUAL
         LR    R14,R8
         CLCL  R8,R10              KEYS EQUAL?
         LR    R8,R14
         BNE   KEY1
         LH    R7,2(R2)            GET LENGTH OF DATA FIELD
         LH    R11,4(R2)           GET KEYWORD LENGTH
         LA    R6,6(R2,R11)        GET ADDRESS
         LR    R5,R1
         CR    R5,R7
         BH    KEY4
         BL    KEY5
KEY3     MVCL  R6,R4               MOVE DATA
         B     KEYR
KEY4     LR    R5,R7
         B     KEY3
KEY5     LR    R7,R5
         B     KEY3
         COPY  REGS
         LTORG
         END
