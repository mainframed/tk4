 /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
 DENT49R: PROC(RHPTR,SUBENT,RHHDRPT,SUBRTNES,D) OPTIONS(REENTRANT);
 /**********************************************************************
 *                                                                     *
 * CALLED TO EXECUTE A REMOVE SUBCOMMAND. D POINTS TO SELECT_HTEXT     *
 * CONTROL BLOCK.                                                      *
 *                                                                     *
 **********************************************************************/
   % DCL @PROCNAME CHAR;
   % @PROCNAME='';
   % INCLUDE DENTSUB;
   % INCLUDE DENTSEL;
   HALT;
   DCL (C,D,TRH) PTR;
   DCL MISSING DEC FLOAT(16);
   UNSPEC(MISSING)='1'B; /* SET MISSING VALUE */

   D->FROM_LIST_PTR->FROM_NAME=RHNAME;

   /* NOW LOCATE THE DATABASE */
   CALL LOC_DB(D->FROM_LIST_PTR);

   /* NOW GO CHECK FOR CHARACTER EXPRESSIONS */
   CALL CHAR_CHECK(D);

   /* NOW DO THE REMOVE */
   CALL REMOVE_PROCESS(D);


 REMOVE_EVAL: PROC(D,S,C) RETURNS(CHAR(256) VAR);
 /**********************************************************************
 *                                                                     *
 * REMOVE_EVAL IS CALLED TO EVALUATE AN EXPRESSION POINTED TO BY THE   *
 * SELECT_LIST_ELEMENT POINTED TO BY PARAMETER S.  D POINTS TO THE     *
 * SELECT_HTEXT CONTROL BLOCK, AND C POINTS TO THE RHNAMESTR STRUCTURE *
 * FOR THE FIELD TO WHICH THE RESULT IS TO BE ASSIGNED.                *
 *                                                                     *
 **********************************************************************/
   DCL (C,D,S) PTR;
   RETURN(EVAL_COMMON(D,S,C,EVAL_ODD_FUNCTION));
 EVAL_ODD_FUNCTION: PROC(MSG,PRMPTR,PARMCNT,OP) RETURNS(DEC FLOAT(16));
   DCL MSG CHAR(80) VAR;
   DCL PRMPTR PTR;
   DCL PARMCNT FIXED BIN(15,0);
   DCL OP(*) DEC FLOAT(16);
   MSG='INVALID FUNCTION REFERENCE';
   SIGNAL CONDITION(BADSTMT);
   END EVAL_ODD_FUNCTION;
   END REMOVE_EVAL;

 REMOVE_PROCESS: PROC(D);
 /**********************************************************************
 *                                                                     *
 * CALLED TO EXECUTE THE REMOVE PROCESS.                               *
 *                                                                     *
 **********************************************************************/
   DCL (A,B,C,D,DELPTR,E,F,S) PTR;
   DCL I FIXED BIN;

   F=D->FROM_LIST_PTR;
   DO FOREVER=1 REPEAT FOREVER;
     F->FROM_RECPTR=#SUCC(RHHDRPT,F->FROM_RHP,F->FROM_RECPTR);
     IF F->FROM_RECPTR=F->FROM_RHP
       THEN RETURN; /* END OF DATA */
     I=#CMD('USE NOSYM',F->FROM_RHP,SUBENT,RHHDRPT);
       /* GO SET VARIABLE OFFSETS AND LENGTHS FOR THIS RECORD */
     B=ADDR(F->FROM_RECPTR->RECLEN); /* GET ADDR BUFFER */
     IF WHERE_EVAL(D)
       THEN DO;
         DELPTR=F->FROM_RECPTR;
         F->FROM_RECPTR=F->FROM_RECPTR->LSTPTR;
         CALL #PUTSLOT(RHPTR,SUBENT,DELPTR);
         END;
     END;
   END REMOVE_PROCESS;

   END DENT49R;
