  /*TGSGTVL*/
 GETVOL:  PROC(DSNRPTR,VOLRPTR,PRMCODE);
 /* SUBROUTINE TO ASSIGN A DATA SET TO A VOLUME */
         % INCLUDE TGSINITA;
         DCL 1 CPPL EXT,
              2 CPPLCBUF PTR,
              2 CPPLUPT PTR,
              2 CPPLPSCB PTR,
              2 CPPLECT PTR;
         DCL PVOLREC CHAR(110) BASED(VOLRPTR);
         DCL MASK BIT(8);
         DCL CPECB FIXED BIN(31,0) INIT(0);
         DCL MYRET FIXED BIN(31,0);
         DCL 1 MSG2 STATIC,
              2 OUTLEN FIXED BIN(15,0) INIT(83),
              2 OFFSET FIXED BIN(15,0) INIT(0),
              2 CON1 CHAR(78) INIT(
 'NOTE THAT THE DISK VOLUME WAS NOT MOUNTED, SO THE SPACE COULD NOT BE
 VERIFIED.');
         DCL 1 MSG,
              2 OUTLEN FIXED BIN(15,0) INIT(69),
              2 OFFST FIXED BIN(15,0) INIT(0),
              2 OPTRKS PIC'ZZZZ9',
              2 CON1 CHAR(46) INIT(
 ' TRACKS WILL BE RESERVED FOR YOUR DATA SET ON '),
              2 MSER CHAR(6),
              2 CON2 CHAR(4) INIT(', A '),
              2 OPTYPE CHAR(4);
         DCL TMP FIXED BIN(31,0);
         DCL PRMCODE FIXED BIN(31,0);
         PRMCODE = 0;
         IF NEWVOL ^= ' ' & NEWVOL ^= LOW(6)
              THEN DO;
                   FUNCTION = 'READ';
                   ISAMKEY = NEWVOL;
                   CALL ISAMIO(ISAMWRK,ISAMIN);
                   IF ERRCODE ^= '0'B
                        THEN DO;
                             CALL MSGPROC(7);
                             PRMCODE = 4;
                             RETURN;
                             END;
                   BDAMKEYA = ISAM.DAMASTER;
                   READ FILE(BDAMFLE) INTO(PVOLREC) KEY(BDAMKEY);
                   IF FTRKS - DTRKS < 0
                        THEN DO;
                             CALL MSGPROC(8);
                             PRMCODE = 4;
                             RETURN;
                             END;
              PRMCODE = 0;
              RETURN;
              END;
         PRMCODE = 0;
         I = SUBSTR(DFLGS,1,8);
         GO TO BYLUPI;
 LUP:
         I = I * 2;
         IF I > 128 × I = 0
              THEN DO;
                   PRMCODE = 4;
                   CALL MSGPROC(15);
                   RETURN;
                   END;
 BYLUPI:
         MASK = SUBSTR(I,8,8);
         BDAMKEYA = DAFSTVL;
         DO WHILE(BDAMKEYA ^= 0);
              READ FILE(BDAMFLE) INTO(PVOLREC) KEY(BDAMKEY);
              IF (SUBSTR(VOLFLGS,1,8) & MASK) ^= '0'B
                   THEN IF FTRKS - DTRKS >= 0
                        THEN DO;
                             TMP = DTRKS;
                             OPTYPE = '2314';
                             IF SUBSTR(VOLFLGS,9,1) /* 2314? */
                                  THEN TMP = TMP * 2;
                                  ELSE IF SUBSTR(VOLFLGS,12,1) /*3350*/
                                       THEN OPTYPE='3350';
                                       ELSE OPTYPE='3330';
                             IF FTRKS - TMP >= 0
                                  THEN DO;
                                       CALL TSTSPCE(VOLSER,TMP,MYRET,
                                         UCBPTR);
                                       IF MYRET = 0 × MYRET = 8
                                            THEN DO;
                                                 I = MYRET;
                                                 DTRKS = TMP;
                                                 NEWVOL,MSER = VOLSER;
                                                 OPTRKS = DTRKS;
                                                 CALL PUTLINE(CPPLUPT,
                                                   CPPLECT,CPECB,
                                                   MSG,MYRET,'DATA');
                                                 IF I = 8
                                                      THEN CALL PUTLINE
                                                  (CPPLUPT,CPPLECT,
                                                  CPECB,
                                                  MSG2,MYRET,'DATA');
                                                 IF MYRET ^= 0B
                                                      THEN SIGNAL ERROR;
                                                 RETURN;
                                                 END;
                                       END;
                             END;
              BDAMKEYA = VOLNPT;
              END;
         GO TO LUP;
         END;
