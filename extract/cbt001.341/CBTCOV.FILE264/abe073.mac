   /* COPYRIGHT 1988 BY THOMAS GLEN SMITH */
   /* ABE073 - POOL, PARM, JFCB, DSCB SUBCOMMANDS */
   /* 1        2     3     4     5                */
   %INCLUDE ABESUB;
 ABESUB(ABE073) PARS(0000) CHECK(YES);
   %INCLUDE ABESUBA;
   %INCLUDE ABESREC;

   DCL PTRIN ENTRY(PTR) RETURNS(FIXED BIN(31,0));
   DCL SETCAPS ENTRY;
   DCL TRIN ENTRY;

   SELECT(CMDINDX);
     WHEN(1,2) CALL POOL_PROC;
     WHEN(3)   CALL PARM_PROC;
     WHEN(4)   CALL JFCB_PROC;
     OTHERWISE CALL DSCB_PROC;
     END; /* SELECT */
   RETURN;

 DSCB_PROC: PROC; /* DSCB <DSNAME> <VOLSER> <SYMNAME> <CCHHR> */
                  /*      1        2        3         4       */
   DCL SYSVTOC ENTRY(CHAR(*),BIT(32),,CHAR(6),CHAR(148));
   DCL DSCBCOR CHAR(148);
   DCL I FIXED BIN;
   DCL RETCODE FIXED BIN(31,0),
       RET BIT(32) BASED(ADDR(RETCODE));
   DCL CCHHR CHAR(5);
   DCL DSNAME CHAR(44) VAR;
   DCL KEY CHAR(44),
       BKEY BIT(352) BASED(ADDR(KEY));

   DO I=1 TO 4;
     CALL SETCAPS(PARY(I));
     END;
   DSCBCOR=LOW(148);
   RETCODE=0;
   SELECT(PARY(1));
     WHEN('3') DO;
       CCHHR=#SYMC(RHHDRPT,RH_SYMTREE,PARY(4));
       CALL SYSVTOC('SEEK',RET,CCHHR,PARY(2),DSCBCOR);
       END;
     WHEN('4') DO;
       BKEY = (44)'00000100'B;
       CALL SYSVTOC('SEARCH',RET,KEY,PARY(2),DSCBCOR);
       END;
     OTHERWISE DO;
       DSNAME=PARY(1);
       CALL SYSVTOC('SEARCH',RET,DSNAME,PARY(2),DSCBCOR);
       END;
     END; /* SELECT */
   IF RETCODE^=0
     THEN DO;
       MSGDATA='DSCB, NONZERO RETURN CODE FROM OBTAIN';
       RHRC=8;
       END;
   IF PARY(3)=''
     THEN CALL PARM_PROC_SUB('DSCB',DSCBCOR);
     ELSE CALL PARM_PROC_SUB(PARY(3),DSCBCOR);
   END DSCB_PROC;

 JFCB_PROC: PROC; /* JFCB <DDNAME> <SYMNAME> */
   DCL SYSJFCB ENTRY(CHAR(8),PTR);
   DCL JFCBCOR CHAR(176);

   CALL SETCAPS(PARY(1));
   JFCBCOR=LOW(176);
   CALL SYSJFCB(PARY(1),ADDR(JFCBCOR));
   IF PARY(2)=''
     THEN CALL PARM_PROC_SUB(PARY(1),JFCBCOR);
     ELSE DO;
       CALL SETCAPS(PARY(2));
       CALL PARM_PROC_SUB(PARY(2),JFCBCOR);
       END;
   END JFCB_PROC;

 PARM_PROC: PROC; /* PARM <NAME> <KEYWORD> <VALUE> */
   DCL I FIXED BIN;
   DCL (INSTR,TXT) CHAR(256) VAR;

   CALL SETCAPS(PARY(1));
   CALL SETCAPS(PARY(2));
   I=LENGTH(PARY(2));
   SELECT(PARY(2));
     WHEN(SUBSTR('HEX',1,MIN(3,I))) DO;
       IF MOD(LENGTH(PARY(3)),2)^=0
         THEN PARY(3)=PARY(3)××'0';
       INSTR=PARY(3);
       TXT=REPEAT(' ',LENGTH(PARY(3))/2-1);
       CALL TRIN(INSTR,TXT);
       END;
     WHEN(SUBSTR('HIGH',1,MIN(4,I))) DO;
       I=PARY(3);
       IF I>256 × I<0
         THEN DO;
           MSGDATA='INVALID LENGTH';
           RHRC=8;
           RETURN;
           END;
       TXT=HIGH(I);
       END;
     WHEN(SUBSTR('LOW',1,MIN(3,I))) DO;
       I=PARY(3);
       IF I>256 × I<0
         THEN DO;
           MSGDATA='INVALID LENGTH';
           RHRC=8;
           RETURN;
           END;
       TXT=LOW(I);
       END;
     WHEN(SUBSTR('STRING',1,MIN(6,I))) DO;
       TXT=PARY(3);
       END;
     WHEN(SUBSTR('SYMBOL',1,MIN(6,I))) DO;
       TXT=#SYMC(RHHDRPT,RH_SYMTREE,PARY(3));
       END;
     OTHERWISE DO;
       MSGDATA='INVALID KEYWORD = '××PARY(2);
       RHRC=8;
       RETURN;
       END;
     END; /* SELECT */
   CALL PARM_PROC_SUB(PARY(1),TXT);
   END PARM_PROC;

 PARM_PROC_SUB: PROC(NAME,TXT);
   DCL (NAME,TXT) CHAR(*) VAR;
   DCL (P,Q) PTR;
   CALL #SETC(RHHDRPT,RH_SYMTREE,NAME,TXT);
   P=#SRCH(RH_SYMTREE,NAME,Q);
   P->SRTYPE=3; /* MAKE BOTH SRFL AND SRCH VALID */
   P->SRFL=PTRIN(ADDR(P->SRCH));
   END PARM_PROC_SUB;

 POOL_PROC: PROC;
   DCL TREEFL DEC FLOAT(16);
   DCL 1 TREESTR BASED(ADDR(TREEFL)),
     2 TREEP PTR,
     2 TREED CHAR(4);

   IF PARY(1)=''
     THEN DO;
       MSGDATA='POOL SUBCOMMAND REQUIRES POOL NAME AS 1ST OPERAND';
       RHRC=8;
       RETURN;
       END;
   CALL SETCAPS(PARY(1));
   TREEFL=#SYMA(RHHDRPT,RH_SYMTREE,PARY(1));
   IF TREEFL=0
     THEN DO;
       MSGDATA=PARY(1)××' IS NOT A POOL';
       RHRC=8;
       RETURN;
       END;
   CALL SUB(TREEP);

 SUB: PROC(P) RECURSIVE;
   DCL P PTR;
   DCL CMD CHAR(1024) VAR;
   DCL I FIXED BIN;

   IF P=NULL
     THEN RETURN;
   CMD='NL '××P->SRNAME;
   IF P->SRLCHILD=NULL
     THEN CMD=CMD××' .       ';
     ELSE CMD=CMD××' '××P->SRLCHILD->SRNAME;
   IF P->SRRCHILD=NULL
     THEN CMD=CMD××' .       ';
     ELSE CMD=CMD××' '××P->SRRCHILD->SRNAME;
   CMD=CMD××' '××#SYMC(RHHDRPT,TREEP,P->SRNAME);
   I=#CMD(CMD,RHPTR,RHHDRPT);
   CALL SUB(P->SRLCHILD);
   CALL SUB(P->SRRCHILD);
   END SUB;
   END POOL_PROC;

   END ABE073;
