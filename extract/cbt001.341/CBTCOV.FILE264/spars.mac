 /* SPARS */
 /*
0*$.HE GENERALIZED SUBROUTINES - SPARS
0*$.HE SIMPLIFIED PARSING ROUTINE
0*$.PL 55
0*$.PN 0
0*$.PA
0*$.SS
0*$.NF
0*$08/01/78
0*$AUTHOR:  T. SMITH
0*$SOURCE MODULE NAME:  SPARS
0*$DOCUMENTATION ID:  0*$
0*$.FI L
0*$.SP 5
0*$SPARS IS A SIMPLIFIED KEYWORD PARSING SUBROUTINE WHICH HAS THE
0*$FOLLOWING CALL FORMAT:
0*$.SP 1
0*$.IN 5
0*$.NF
0*$DCL OPERBUF CHAR(100) VAR,
0*$    KEYTAB(4) CHAR(20) VAR STATIC INIT(
0*$      'OPERA','OPERB','ADD','SUBTRACT'),
0*$    KEYVAL CHAR(80) VAR,
0*$    KEYINDX FIXED BIN(15,0),
0*$CALL SPARS(OPERBUF,KEYTAB,KEYVAL,KEYINDX);
0*$.FI L
0*$.IN 0
0*$.SP 1
0*$THE RESULTS OF THE CALL TO SPARS DEPEND ON THE CONTENTS OF OPERBUF.
0*$SUPPOSE OPERBUF WERE SET TO THE CHARACTER STRING 'OPERA(126)'.
0*$THEN ON RETURN OF CONTROL FROM SPARS, KEYINDX WOULD BE SET TO
0*$1, INDICATING THE POSITION OF THE KEYWORD 'OPERA' IN KEYTAB,
0*$AND KEYVAL WOULD BE SET TO '126'.
0*$IF OPERBUF WERE SET TO 'ADD' BEFORE SPARS WAS CALLED, THEN ON
0*$RETURN OF CONTROL FROM SPARS, KEYINDX WOULD BE SET TO 3, AND
0*$KEYVAL WOULD BE SET TO A NULL STRING.  IF OPERBUF WERE SET TO
0*$'XYZ', SPARS WOULD SET KEYINDX TO 0, AND KEYVAL TO A NULL
0*$STRING.  IF OPERBUF WERE SET TO 'XYZ(ABC)', SPARS WOULD STILL SET
0*$KEYINDX TO 0, BUT KEYVAL WOULD BE SET TO 'ABC'.
 */
 SPARS:  PROC(OPERBUF,KEYTAB,KEYVAL,KEYINDX) OPTIONS(REENTRANT);
         DCL (OPERBUF,KEYVAL) CHAR(*) VAR;
         DCL KEYTAB(*) CHAR(20) VAR;
         DCL (I,J,K,L,M,N,LC,RC) FIXED;
         DCL KEYINDX FIXED BIN(15,0);
         KEYVAL = '';
         KEYINDX = 0;
         L = LENGTH(OPERBUF);
         IF L = 0
              THEN RETURN;
         K = DIM(KEYTAB,1);
         J = INDEX(OPERBUF,'(');
         IF J = 0
              THEN J = L + 1;
         J = J - 1;
         IF J < L
           THEN DO;
             LC,RC = 0;
             DO I = J+1 TO L;
               IF SUBSTR(OPERBUF,I,1)='('
                 THEN LC=LC+1;
                 ELSE IF SUBSTR(OPERBUF,I,1)=')'
                   THEN RC=RC+1;
               END;
             IF LC > RC
               THEN N = 1;
               ELSE N = 2;
             KEYVAL = SUBSTR(OPERBUF,J+2,L-J-N);
             END;
 LUP:    DO I = 1 TO K;
              M = LENGTH(KEYTAB(I));
              IF M >= J
                   THEN DO;
                        IF SUBSTR(KEYTAB(I),1,J)=SUBSTR(OPERBUF,1,J)
                        THEN LEAVE LUP;
                        END;
              END;
         IF I > K
              THEN RETURN;
         KEYINDX = I;
         END SPARS;
