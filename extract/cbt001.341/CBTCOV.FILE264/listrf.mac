 LISTRF:  PROC(CPPL1,CPPL2,CPPL3,CPPL4) OPTIONS(MAIN);
         % INCLUDE IKJCPPL;
         % INCLUDE PDEDCL;
         % INCLUDE IKJPPL;
         % INCLUDE PPLINIT;
         % INCLUDE IKJPDECM;
         % INCLUDE IKJPDEDS;
         % INCLUDE IKJPDEIK;
         % INCLUDE IKJPSCB;
         DCL RETCODE FIXED BIN(31,0);
         DCL RETCODC CHAR(4) DEF RETCODE;
         CALL SYSPARS(PPLPTR,RETCODE);
         IF RETCODE ^= 0
              THEN SIGNAL ERROR;
         DCL WRKPTR PTR,
             WRKSTR CHAR(100) BASED(WRKPTR);
         ON CONDITION(CTLGERR) BEGIN;
              CALL TROUT(RETCODC,OUTRETCC);
              OUTCDSN = DSN;
              CALL PUTLINE(CPPLUPT,CPPLECT,CPECB,CTLGMSG,
                RETCODE,'DATA');
              SIGNAL ERROR;
              END;
         %INCLUDE CTLGDEF;
         DCL 1 ABND STATIC,
              2 DUM BIN FLOAT(53),
              2 MAREA CHAR(265) INIT(' ');
         DCL PTRFIX FIXED BIN(31,0) DEF CTLGPTR;
         DCL RETB FIXED BIN(31,0) STATIC;
         DCL RET BIT(32) DEF RETB;
         DCL REG15 BIT(8) DEF RETB;
         DCL RETC CHAR(4) DEF RETB;
         DCL CVOL CHAR(6) STATIC INIT('SYSRES');
         DCL 1 OUTPUT STATIC,
              2 OUTLEN FIXED BIN(15,0) INIT(55),
              2 OFFSET FIXED BIN(15,0) INIT(0B),
              2 OUTJUL PIC'99999',
              2 OUTPAD CHAR(2) INIT(' '),
              2 OUTDSN CHAR(44);
         DCL 1 VTOCMSG STATIC,
              2 OUTLEN FIXED BIN(15,0) INIT(100),
              2 OFFSET FIXED BIN(15,0) INIT(0),
              2 CON1 CHAR(6) INIT('ERROR='),
              2 OUTRETC CHAR(8),
              2 CON2 CHAR(18) INIT(' DURING OBTAIN ON '),
              2 OUTMSER CHAR(6),
              2 CON3 CHAR(14) INIT(' FOR DATA SET '),
              2 OUTMDSN CHAR(44);
         DCL 1 CTLGMSG STATIC,
              2 OUTLEN FIXED BIN(15,0) INIT(81),
              2 OFFSET FIXED BIN(15,0) INIT(0),
              2 CON1 CHAR(6) INIT('ERROR='),
              2 OUTRETCC CHAR(8),
              2 CON2 CHAR(19) INIT(' DURING LOCATE FOR '),
              2 OUTCDSN CHAR(44);
         PDEPTR = ADDR(RANGE);
         WRKPTR = PDEIKPT;
         DCL MYRNGE PIC'999';
         MYRNGE = SUBSTR(WRKSTR,1,PDEIKL);
         DCL DTCK1 FIXED BIN(31,0);
         DCL 1 DTCK2 DEF DTCK1 UNALIGNED,
              2 PAD CHAR(1),
              2 DTCK CHAR(3);
         DCL DSN CHAR(44) VARYING;
         DCL CALLDSN CHAR(44);
         DCL WKAREA CHAR(148);
         DCL 1 WKAREA2 DEF WKAREA,
              2 PAD1 CHAR(9),
              2 CREDT CHAR(3),
              2 PAD2 CHAR(19),
              2 REFDT CHAR(3);
         DCL 1 WKAREA3 DEF WKAREA,
              2 PAD CHAR(31),
              2 YYREF BIT(8),
              2 DDDREF BIT(16);
         DCL DATE BUILTIN;
         DCL DATEIN CHAR(6);
         DATEIN = DATE;
         DCL GREGDTE CHAR(6);
         GREGDTE = SUBSTR(DATEIN,3,4) ×× SUBSTR(DATEIN,1,2);
         DCL (JULIAN,YY,DDD) FIXED DEC(5,0);
         CALL GREGJUL(GREGDTE,JULIAN);
         YY = JULIAN/1000;
         DDD = JULIAN - (YY*1000);
         DDD = DDD - MYRNGE;
         IF DDD < 1
              THEN DO;
                   YY = YY - 1;
                   DDD = 365 + DDD;
                   END;
         DTCK1 = YY*65536 + DDD;
         IF LVL = LOW(2)
              THEN DO;
                   DO I = 1 TO 8 WHILE(SUBSTR(PSCBUSER,I,1) ^= ' ');
                        END;
                   DSN = SUBSTR(PSCBUSER,1,I-1);
                   END;
              ELSE DO;
                   PDEPTR = ADDR(LEVEL);
                   WRKPTR = PDEDSPT;
                   DSN = SUBSTR(WRKSTR,1,PDEDSL1);
                   END;
         CTLGPTR = ADDR(MAREA);
         PTRFIX = PTRFIX + 2;
         CALL SYSCTLG('NAME',RET,DSN,CVOL,MAREA);
         CVOL = SUBSTR(MAREA,260,6);
         IF RETB = 0
              THEN DO;
                   CALL OBPROC(DSN);
                   RETURN;
                   END;
         IF REG15 ^= '00001100'B
              THEN SIGNAL CONDITION(CTLGERR);
         CALL RECURS(INDLO);
         RETURN;
 RECURS: PROC(PTTR) RECURSIVE;
         DCL PTTR CHAR(3);
         DCL TTRC CHAR(3);
         TTRC = PTTR;
         DCL 1 ABND,
              2 DUM BIN FLOAT(50),
              2 AREA,
               3 BLK CHAR(256),
               3 ATTR CHAR(3),
               3 ACVOL CHAR(6);
         DCL SAVPTR PTR;
         DCL N FIXED BIN(15,0);
         DCL 1 GDGNAM BASED(CTLGPTR),
              2 GDGG CHAR(1),
              2 GDGNUM BIT(32);
 NEWBLK:
         CALL SYSCTLG('BLOCK',RET,TTRC,CVOL,BLK);
         IF RETB ^= 0
              THEN SIGNAL CONDITION(CTLGERR);
         CTLGPTR = ADDR(AREA);
         PTRFIX = PTRFIX + 2;
 NEWENT:
         IF NAME = HIGH(8)
              THEN IF TTR = LOW(3)
                   THEN RETURN;
                   ELSE DO;
                        TTRC = TTR;
                        GO TO NEWBLK;
                        END;
         IF HCNT > '00000010'B & HCNT < '00000110'B
              THEN GO TO GETENT;
         IF SUBSTR(GDGNUM,1,8) > '00000101'B
           & SUBSTR(GDGNUM,1,8) < '00010000'B
              THEN GDGNUM = ^GDGNUM;
         DO N = 1 TO 8 WHILE(SUBSTR(NAME,N,1) ^= ' ');
              END;
         DSN = DSN ×× '.' ×× SUBSTR(NAME,1,N-1);
         IF HCNT > '00000101'B × HCNT = '00000001'B
              THEN GO TO UNCATLG;
         SAVPTR = CTLGPTR;
         CALL RECURS(TTR);
         CTLGPTR = SAVPTR;
 UNCAT:
         DSN = SUBSTR(DSN,1,LENGTH(DSN) - N);
         GO TO GETENT;
 UNCATLG:
         CALL OBPROC(DSN);
         GO TO UNCAT;
 GETENT:
         PTRFIX = PTRFIX + 12 + 2*HCNT;
         GO TO NEWENT;
         END;
 OBPROC: PROC(PARMDSN);
         DCL PARMDSN CHAR(44) VARYING;
         CALLDSN = PARMDSN;
         CALL SYSVTOC('SEARCH',RET,CALLDSN,PTRDS.VOLSER(1),WKAREA);
         IF RETB ^= 0
              THEN DO;
                   CALL TROUT(RETC,OUTRETC);
                   OUTMSER = PTRDS.VOLSER(1);
                   OUTMDSN = CALLDSN;
                   CALL PUTLINE(CPPLUPT,CPPLECT,CPECB,VTOCMSG,
                     RETCODE,'DATA');
                   IF RETCODE ^= 0
                        THEN SIGNAL ERROR;
                   RETURN;
                   END;
         IF REFDT = LOW(3)
              THEN REFDT = CREDT;
         IF REFDT > DTCK
              THEN RETURN;
         I = YYREF;
         J = DDDREF;
         OUTJUL = I*1000 + J;
         OUTDSN = CALLDSN;
         CALL PUTLINE(CPPLUPT,CPPLECT,CPECB,OUTPUT,RETCODE,'DATA');
         IF RETCODE ^= 0
              THEN SIGNAL ERROR;
         END;
         END;
