 /*LISTDSN  UPDATED JULY 1978 BY RICK BABLER */
         % INCLUDE CPINIT1;
         % @CMP = 'O';
         % @CP = 'LISTDSN';
         % INCLUDE CPINIT2;
         @PROC(0,DATASET(),DIV(),DEPT(),
           PGMR(),REF(#(NUMERIC)),PERCENT(),
           INDX(),ALLOC(),VOLUME(),DELETE,LESS,MORE,ORDER(#(LIST)));
         DCL PLIXOPT CHAR(15) VAR INIT('ISA(30K)') STATIC EXT;
         % INCLUDE TGSINITT;
         % INCLUDE RLBINPUT;
         DCL PLIRETC BUILTIN;
         DCL PLISRTD BUILTIN;
         DCL SW1 BIT(1) INIT('0'B) STATIC;
         DCL SORTRET FIXED BIN(31,0);
         DCL ISAMSEQ FILE ENV(INDEXED) INPUT;
         DCL DSNRRECS CHAR(110);
         DSNRPTR = ADDR(DSNRRECS);
         DCL DATE BUILTIN;
         DCL (DATEIN,GREGDTE) CHAR(6);
         DCL (TDIV,TDEPT,TPGMR,TPERCENT) FIXED DEC(3,0);
         DCL TALLOC FIXED DEC(5,0);
         DCL TINDX CHAR(44) VARYING;
         DCL TVOLUME CHAR(6);
         DCL (TOTRES,TOTALC) FIXED DEC(7,0) INIT(0);
         DCL DTCK1 FIXED BIN(31,0);
         DCL 1 DTCK2 DEF DTCK1 UNALIGNED,
              2 PAD CHAR(1),
              2 DTCK BIT(24);
         DCL PGNUM FIXED DEC(3,0) INIT(0);
         ON ENDPAGE(SYSPRINT) BEGIN;
         PGNUM = PGNUM + 1;
         PUT EDIT('PERCENT','LAST','PAGE',PGNUM)
           (COL(22),A,COL(37),A,COL(60),A,P'ZZ9') SKIP(1);
         PUT EDIT('DEPT    SPACE SPACE SPACE   RSV REFER')(COL(4),A)
           SKIP(1);
 PUT EDIT(' DIV  PGMR  RSVD ALLOC  USED  DATE  DATE USAGE','VOLUME DSN')
           (A,COL(53),A) SKIP(1);
           END;
         DCL (JULIAN,YY,DDD) FIXED DEC(5,0);
         DCL TREF FIXED DEC(7,0);
         DCL PARMVL CHAR(6);
         IF DATASET ^= 0
              THEN DO;
                   ISAMKEY = SYMC('&DATASET');
                   FUNCTION = 'READ';
                   CALL ISAMIO(ISAMWRK,ISAMIN);
                   IF ERRCODE ^= '0'B
                        THEN DO;
                             PUT EDIT(' DSNAME NOT FOUND')(A) SKIP(1);
                             GO TO DAIRFREE;
                             END;
                   BDAMKEYA = ISAM.DAMASTER;
                   READ FILE(BDAMFLE) INTO(DSNRRECS) KEY(BDAMKEY);
                   IF VOLUME ^= 0
                        THEN PARMVL = SYMC('&VOLUME');
                        ELSE PARMVL = NEWVOL;
                   DO WHILE(PARMVL ^= NEWVOL);
                        IF DNDUPPT = 0 × NEWVOL > PARMVL
                             THEN DO;
                                  PUT EDIT('DSNAME NOT FOUND')(A)
                                    SKIP(1);
                                  GO TO DAIRFREE;
                                  END;
                        BDAMKEYA = DNDUPPT;
                        READ FILE(BDAMFLE) INTO(DSNRRECS) KEY(BDAMKEY);
                        END;
                   SIGNAL ENDPAGE(SYSPRINT);
 LOOP:
                   CALL PUTRPT;
                   IF VOLUME ^= 0 × DNDUPPT = 0
                        THEN GO TO DAIRFREE;
                   BDAMKEYA = DNDUPPT;
                   READ FILE(BDAMFLE) INTO(DSNRRECS) KEY(BDAMKEY);
                   GO TO LOOP;
                   END;
              ELSE DO;
                   OPEN FILE(ISAMSEQ) SEQUENTIAL TITLE(DDN(1));
                   SIGNAL ENDPAGE(SYSPRINT);
                   TREF = SYMA('&REF');
                   IF TREF ^= 0
                        THEN DO;
                             DATEIN = DATE;
                             GREGDTE = SUBSTR(DATEIN,3,4) ××
                               SUBSTR(DATEIN,1,2);
                             CALL GREGJUL(GREGDTE,JULIAN);
                             YY = JULIAN/1000;
                             DDD = JULIAN - YY*1000;
                             DDD = DDD - TREF;
                             DO WHILE(DDD < 1);
                                  YY = YY - 1;
                                  DDD = DDD + 365;
                                  END;
                             TREF = YY*65536 + DDD;
                             DTCK1 = TREF;
                             END;
                   TDIV = SYMA('&DIV');
                   TDEPT = SYMA('&DEPT');
                   TPGMR = SYMA('&PGMR');
                   TPERCENT = SYMA('&PERCENT');
                   TALLOC = SYMA('&ALLOC');
                   TVOLUME = SYMC('&VOLUME');
                   TINDX = SYMC('&INDX');
                   IF ORDER ^= 0
                        THEN DO;
                             IF TSOFLG
                                  THEN DO;
                                       @FREE(FI(SORTWK01));
                                       @FREE(FI(SORTWK02));
                                       @FREE(FI(SORTWK03));
                                       @ALLOC(FI(SORTWK01),DA('&WK01'),
                                         WORK,SP(10,10),BL(13030));
                                       @ALLOC(FI(SORTWK02),DA('&WK02'),
                                         WORK,SP(10,10),BL(13030));
                                       @ALLOC(FI(SORTWK03),DA('&WK03'),
                                         WORK,SP(10,10),BL(13030));
                                       END;
                             CALL PLISRTD(SETSRT,
                               ' RECORD TYPE=F,LENGTH=(110) ',
                               150000,SORTRET,E15,E35);
                             IF SORTRET ^= 0
                                  THEN DO;
                                       PUT EDIT('ERROR DURING SORT')
                                         (A) SKIP(1);
                                       SIGNAL ERROR;
                                       END;
                             IF TSOFLG
                                  THEN DO;
                                       @FREE(FI(SORTWK01));
                                       @FREE(FI(SORTWK02));
                                       @FREE(FI(SORTWK03));
                                       END;
                             END;
                   ELSE CALL E15;
                   END;
 E15:  PROC RETURNS(CHAR(110));
         ON ENDFILE(ISAMSEQ) GO TO ENDE15;
         DSNRPTR = ADDR(DSNRRECS);
 NXT:
         IF SW1 ^= '0'B THEN DO;
            IF DNDUPPT ^= 0 THEN DO;
              BDAMKEYA = DNDUPPT;
              GO TO DUPDSN;
             END;
          END;
 NEWR:   READ FILE(ISAMSEQ) INTO(ISAMIN);
         IF PRJNUM = '000000'
              THEN GO TO NEWR;
         BDAMKEYA = ISAM.DAMASTER;
 DUPDSN: READ FILE(BDAMFLE) INTO(DSNRRECS) KEY(BDAMKEY);
         IF SUBSTR(DCOMFLG,1,1) /* IS IT DSNREC? */
              THEN GO TO NEWR;
         SW1 = '1'B;
         IF DELETE ^= 0
              THEN IF DPGMRNO=0 & DDIV=0 & DDEP=0 & DTRKS=0
                   THEN GO TO CALLRPT;
                   ELSE GO TO NXT;
         IF DIV ^= 0
              THEN IF DDIV ^= TDIV
                   THEN GO TO NXT;
         IF DEPT ^= 0
              THEN IF DDEP ^= TDEPT
              THEN GO TO NXT;
         IF PGMR ^= 0
              THEN IF DPGMRNO ^= TPGMR
                   THEN GO TO NXT;
         IF TREF ^= 0
              THEN DO;
                   IF DRFDY = 0
                        THEN GO TO NXT;
                   IF LESS ^= 0
                        THEN IF DRFDY < DTCK
                             THEN GO TO NXT;
                             ELSE;
                        ELSE IF DRFDY > DTCK
                             THEN GO TO NXT;
                   END;
         IF PERCENT ^= 0
              THEN DO;
                   IF DPCAL = 0
                        THEN GO TO NXT;
                   IF LESS ^= 0
                        THEN IF DPCUS >= TPERCENT
                             THEN GO TO NXT;
                             ELSE;
                        ELSE IF DPCUS <= TPERCENT
                             THEN GO TO NXT;
                   END;
         IF INDX ^= 0
              THEN IF SUBSTR(DSN,1,LENGTH(TINDX)) ^= TINDX
                   THEN GO TO NXT;
         IF ALLOC ^= 0
              THEN IF LESS ^= 0
                   THEN IF DPCAL >= TALLOC
                        THEN GO TO NXT;
                        ELSE;
                   ELSE IF DPCAL <= TALLOC
                        THEN GO TO NXT;
         IF VOLUME ^= 0
                   THEN IF NEWVOL ^= TVOLUME
                        THEN GO TO NXT;
 CALLRPT:
         IF ORDER ^= 0
              THEN DO;
                   CALL PLIRETC(12);
                   RETURN(DSNRECS);
                   END;
         CALL PUTRPT;
         GO TO NXT;
 ENDE15:
         CALL PLIRETC(8);
         END E15;
 E35: PROC(STRING);
         DCL STRING CHAR(110);
         DSNRPTR = ADDR(STRING);
         CALL PUTRPT;
         CALL PLIRETC(4);
         END E35;
 PUTRPT:  PROC;
         DCL USAGE CHAR(10);
         USAGE = '';
         IF SUBSTR(DFLGS,1,1)
              THEN USAGE = 'OFFLINE';
         IF SUBSTR(DFLGS,2,1)
              THEN USAGE = 'RESIDENT';
         IF SUBSTR(DFLGS,3,1)
              THEN USAGE = 'DAILY';
         IF SUBSTR(DFLGS,4,1)
              THEN USAGE = 'WEEKLY';
         IF SUBSTR(DFLGS,5,1)
              THEN USAGE = 'MONTHLY';
         IF SUBSTR(DFLGS,6,1)
              THEN USAGE = 'BY REQUEST';
         IF SUBSTR(DFLGS,7,1)
              THEN USAGE = 'LOCAL';
         IF SUBSTR(DFLGS,8,1)
              THEN USAGE = 'REMOTE';
         YY = SUBSTR(DRFDY,1,8);
         DDD = SUBSTR(DRFDY,9,16);
         JULIAN = YY*1000 + DDD;
         I = INDEX(DSN,' ');
         IF I = 0
              THEN I = 44;
         PUT EDIT(DDIV,DDEP,DPGMRNO,DTRKS,DPCAL,DPCUS,DDTE,JULIAN,USAGE,
           NEWVOL,SUBSTR(DSN,1,I-1))(P'Z99',P'999',X(1),P'999',
           P'ZZ,ZZ9',P'ZZ,ZZ9',X(3),P'ZZ9',X(1),P'99999',X(1),
           P'99999',X(1),A,X(1),A,X(1),A) SKIP(1);
         IF SUBSTR(DFLGS,11,1)
              THEN PUT EDIT(
                'THIS IS A MEMBER OF A GENERATION DATA GROUP HAVING ',
                DGDGCNT,' ENTRIES')(X(5),A,P'ZZ9',A) SKIP(1);
         TOTRES = TOTRES + DTRKS;
         TOTALC = TOTALC + DPCAL;
         END;
 SETSRT:  PROC RETURNS(CHAR(100) VARYING);
         DCL RETSTR CHAR(100) VARYING;
         RETSTR = ' SORT FIELDS=';
         DCL KEYTAB(8) CHAR(7) STATIC INIT(
              'DATASET',
              'DIV',
              'DEPT',
              'PGMR',
              'REF',
              'PERCENT',
              'VOLUME',
              'ALLOC');
         DCL OFFTAB(8) CHAR(5) STATIC INIT(
              '6,44',   /* DATASET */
              '52,2',   /* DIV */
              '95,2',   /* DEPT */
              '50,2',   /* PGMR */
              '103,3',  /* REF */
              '100,3',  /* PERCENT */
              '87,6',   /* VOLUME */
              '97,3');  /* ALLOC */
         DCL COMMA CHAR(1) INIT('(');
         DCL CURKEY CHAR(7) VARYING;
         PDEPTR = ADDR(ORDERSUB);
         DO WHILE(PDEPTR ^= NULL);
              WRKPTR = PDEIKPT;
              CURKEY = SUBSTR(WRKSTR,1,PDEIKL);
              L = LENGTH(CURKEY);
              DO I = 1 TO 8 WHILE(CURKEY ^= SUBSTR(KEYTAB(I),1,L));
                   END;
              IF I > 8
                   THEN DO;
                        PUT EDIT('INVALID ORDER ITEM = ',CURKEY)(A,A)
                          SKIP(1);
                        SIGNAL ERROR;
                        END;
              J = INDEX(OFFTAB(I),' ');
              IF J = 0
                   THEN J = 6;
              RETSTR=RETSTR××COMMA××SUBSTR(OFFTAB(I),1,J-1)××',CH,A';
              COMMA=',';
              PDEPTR = PDEIKLP;
              END;
         RETSTR=RETSTR××') ';
         RETURN(RETSTR);
         END;
 EOJ:
         PUT EDIT('TOTAL  ',TOTRES)(A,P'Z,ZZZ,ZZ9') SKIP(2);
         PUT EDIT(TOTALC)(COL(14),P'Z,ZZZ,ZZ9') SKIP(1);
         END;
