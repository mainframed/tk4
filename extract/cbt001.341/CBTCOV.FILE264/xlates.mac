********************************************************************$
*
*$.HE GENERALIZED SUBROUTINES - XLATE
*$.HE PLI INTERFACE TO THE TRANSLATE INSTR
*$.PL 55
*$.PN 0
*$.PA
*$.SS
*$.NF
*$10/27/75
*$AUTHOR:  T. SMITH
*$SOURCE MODULE NAME:  XLATES
*$DOCUMENTATION ID:  *$
*$.FI L
*$.SP 5
*$.FI L
*$.SP 5
********************************************************************$
*
*$THIS ROUTINE IS DESIGNED TO ALLOW THE PROGRAMMER
*$USING THE PLI COMPILER TO USE THE TRANSLATE
*$INSTRUCTION
*$.SP 1
*
********************************************************************$
*
*$LINKAGE - CALL XLATE(STRING,TABLE),.
*$.SP 1
*$.CE 1
*$DEFINITION OF TERMS
*$.SP 1
*
*$STRING
*$.IN 5
*$NAME OF CHARACTER STRING TO BE
*$TRANSLATED. CAN BE FIXED OR VARYING UP TO
*$32767 BYTES IN LENGTH
*$.IN 0
*$TABLE
*$.IN 5
*$NAME OF A 256 BYTE CHARACTER STRING TO
*$BE USED AS THE TRANSLATION TABLE.  THE
*$BINARY EQUIVALENT OF EACH CHARACTER IN
*$'STRING' IS USED TO INDEX THIS TABLE FOR
*$THE TRANSLATION.
*
********************************************************************$
         GBLC  &COMP
&COMP    SETC  '&SYSPARM'
XLATE    CSECT
         TGSREQU
         USING *,RF                    SET BASE
         STM   RE,RC,12(RD)            SAVE CALLERS REGS
         LM    R2,R3,0(R1)             R2 = A(SDV) FOR STR TO TRANSL
         L     R3,0(R3)                R3 = A(TRANSLATE TABLE)
         L     R4,0(R2)                R4 = A(STR TO TRANSL)
         AIF   ('&COMP' EQ 'F').FOPT1
         TM    6(R2),X'80'             IS IT VARYING?
         BC    8,NOTV1                 BR IF NOT
         LH    R5,0(R4)                R5 = LEN(STR TO TRANSL)
         LA    R4,2(R4)                R4 = A(STR TO TRANSL)
         B     NXTO
NOTV1    DS    0H
         LH    R5,4(R2)
NXTO     DS    0H
         AGO   .BYFOPT1
.FOPT1   ANOP
         LH    R5,6(R2)
.BYFOPT1 ANOP
LOOPI    EQU   *
         LA    R6,256
         LNR   R6,R6                   R6 = INDEX FOR BXLE
         SR    R7,R7                   R7 = COMPARAND FOR BXLE
         LA    R8,255                  R8 = LEN FOR EX
         B     LOOPTST
LOOP     EQU   *
         EX    R8,TR
         LA    R4,256(R4)
LOOPTST  EQU   *
         BXH   R5,R6,LOOP              DECREMENT LEN LEFT TO TRANSLATE
*                                      AND BR BACK IF LEN LEFT GT 256
         AR    R5,R8                   R5 = LEN LEFT TO TRANSL -1 FOREX
         EX    R5,TR
         LM    RE,RC,12(RD)            RESTORE CALLERS REGS
         BR    RE                      RETURN
TR       TR    0(0,R4),0(R3)
         LTORG
         END
