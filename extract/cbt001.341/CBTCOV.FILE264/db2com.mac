 /* DB2COM */
 /*
0*$.HE GENERALIZED SUBROUTINES - DB2COM
0*$.HE EXECUTE A DB2 SQL STATEMENT
0*$.PL 55
0*$.PN 0
0*$.PA
0*$.SS
0*$.NF
0*$02/06/84
0*$AUTHOR:  T. SMITH
0*$SOURCE MODULE NAME: DB2COM
0*$DOCUMENTATION ID: 0*$
0*$.FI L
0*$.SP 5
0*$THIS SUBROUTINE CAN BE USED TO INTERFACE TO DB2 TO EXECUTE MANY
0*$SQL STATEMENTS, SUCH AS CREATE, DROP, ETC.  IT WILL NOT, HOWEVER,
0*$EXECUTE A SELECT STATEMENT.
0*$.SP 1
0*$.NF
0*$DCL DB2COM ENTRY(CHAR(*),ENTRY)
0*$RETURNS(FIXED BIN(31,0));
0*$FETCH DB2COM;
0*$I=DB2COM('STATEMENT',TERM);
0*$IF I^=0 THEN SIGNAL ERROR;
0*$.FI L
0*$.SP 1
0*$WHERE -
0*$.SP 1
0*$'STATEMENT' IS THE SQL STATEMENT TO BE EXECUTED.
0*$.SP 1
0*$TERM IS THE NAME OF A PROCEDURE YOU AS THE CALLER OF DB2COM
0*$MUST SUPPLY.  IT WILL BE CALLED BY DB2COM WITH ERROR MESSAGES IF
0*$AN ERROR IS ENCOUNTERED DURING PROCESSING.  DB2COM DECLARES AND
0*$CALLS TERM AS FOLLOWS:
0*$.SP 1
0*$.NF
0*$DCL TERM ENTRY(CHAR(*) VAR);
0*$CALL TERM('ERROR ENCOUNTERED DURING DB2 PROCESSING');
0*$.FI L
0*$.SP 1
0*$DB2COM WILL RETURN ZERO AS A RETURN CODE IF NORMAL PROCESSING IS
0*$COMPLETED.  OTHERWISE, IT WILL RETURN THE VALUE IN SQLCODE.
0*$.SP 1
0*$NOTE THAT IN ORDER TO USE THE DB2COM SUBROUTINE, YOUR PROGRAM MUST
0*$BE RUNNING UNDER THE DSN COMMAND OF TSO.  A TYPICAL SEQUENCE OF
0*$TSO COMMANDS TO ESTABLISH THIS ENVIRONMENT FOR A PROGRAM CALLED
0*$'TEST' IS SHOWN BELOW:
0*$.SP 1
0*$.NF
0*$DSN
0*$RUN PROG(TEST) PLAN(ABE) LIB(TEST.LOAD)
0*$.FI L
0*$.SP 1
 */
 DB2COM: PROC(STMT,TERM) RETURNS(FIXED BIN(31,0));
   DCL STMT CHAR(*);
   DCL TERM ENTRY(CHAR(*) VAR);
   DCL QSTRING CHAR(256) VAR;
   DCL (PLIRETV,DIM) BUILTIN;
   DCL DSNTIAR ENTRY OPTIONS(ASM,INTER,RETCODE);
   DCL DATA_LEN FIXED BIN(31) STATIC INIT(120);
   DCL DATA_DIM FIXED BIN(31) STATIC INIT(8);
   DCL 1 ERROR_MESSAGE,
     2 ERROR_LEN FIXED BIN(15,0) UNAL INIT((DATA_LEN*DATA_DIM)),
     2 ERROR_TEXT(DATA_DIM) CHAR(DATA_LEN);
   DCL MSG CHAR(130) VAR;
   EXEC SQL INCLUDE SQLCA;

   EXEC SQL WHENEVER SQLWARNING CONTINUE;
   EXEC SQL WHENEVER SQLERROR GOTO SQLERROR;
   GOTO BY_SQLERROR;
 SQLERROR:
   PUT STRING(MSG) EDIT('SQL ERROR, RETCODE=',SQLCODE)(A,F(10));
   CALL TERM(MSG);
 /*FETCH DSNTIAR; CAUSES 0C1 PROGRAM CHECK
 */CALL DSNTIAR(SQLCA,ERROR_MESSAGE,DATA_LEN);
   IF PLIRETV=0
     THEN DO I=1 TO DIM(ERROR_TEXT,1);
       CALL TERM(ERROR_TEXT(I));
       END;
   RETURN(SQLCODE);
 BY_SQLERROR:;

   EXEC SQL EXECUTE IMMEDIATE STMT;
   RETURN(SQLCODE);
   END DB2COM;
