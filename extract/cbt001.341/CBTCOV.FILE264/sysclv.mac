*$.HE GENERALIZED SUBROUTINES - SYSCLV
*$.HE MANIPULATING CLIST VARIABLES
*$.PL 55
*$.PN 0
*$.PA
*$.SS
*$.NF
*$11/5/75
*$AUTHOR:  T.  SMITH
*$SOURCE MODULE NAME:  SYSCLV
*$DOCUMENTATION ID:  *$
*$.FI L
*$.SP 5
*$THIS SUBROUTINE PROVIDES ACCESS TO CLIST VARIABLES. CALL FORMAT
*$IS AS FOLLOWS:
*$.SP 1
*$CALL SYSCLV(CODE,NAME,VALUE,RETCODE);
*$.SP 1
*$WHERE -
*$.SP 1
*$CODE IS CHAR(3), AND IS EQUAL TO EITHER 'GET' OR 'PUT'.
*$.SP 1
*$NAME IS CHAR(*), AND SHOULD BE SET BY THE CALLER TO THE CLIST
*$VARIABLE NAME, THE VALUE FOR WHICH IS TO BE GOTTEN OR PUT.
*$.SP 1
*$VALUE IS CHAR(*) VAR, AND IF CODE IS 'PUT', SHOULD BE SET BY
*$THE CALLED TO THE VALUE TO BE PUT.  IF CODE IS 'GET', THIS ROUTINE
*$WILL SET THIS VARIABLE TO THE VALUE CURRENTLY ASSOCIATED WITH THE
*$VARIABLE.
*$.SP 1
*$RETCODE IS FIXED BIN(31,0), AND WILL BE SET TO 0 IF THE OPERATION
*$IS SUCCESSFUL.  OTHERWISE, SEE SC28-1136.  IF RETCODE IS <0, THEN
*$THIS SUBROUTINE HAS DETECTED THAT YOU ARE NOT RUNNING UNDER TSO-E.
*
SYSCLV   PLIENTRY ,DSA=256
CVTPTR   EQU   16
CVTTVT   EQU   X'9C'
         IKJTSVT
SYSCLV1  CSECT
         LM    R2,R5,0(R1)
         L     R2,0(R2)           R2=A(CODE)
         LH    R6,4(R3)           R6=LEN(NAME)
         ST    R6,NAMELEN
         L     R3,0(R3)           R3=A(NAME)
         ST    R3,NAMEPTR
         LH    R7,4(R4)           R7=MAXLEN(VALUE)
         L     R4,0(R4)           R4=A(VALUE)-2
         LH    R8,0(R4)           R8=CURLEN(VALUE)
*                                 R5=A(RETCODE)
         CLC   0(3,R2),=C'GET'
         BC    8,GET
         CLC   0(3,R2),=C'PUT'
         BC    8,PUT
         LA    RF,44
         B     EXIT
GET      DS    0H
         MVC   ECODE,GETECODE
         B     CALL
PUT      DS    0H
         MVC   ECODE,PUTECODE
         ST    R8,VALUELEN
         LA    R9,2(R4)           R9=A(VALUE)
         ST    R9,VALUEPTR
CALL     DS    0H
         L     RF,CVTPTR
         L     RF,CVTTVT(,RF)
         LTR   RF,RF
         BC    8,NOTSOE
         L     RF,TSVTVACC-TSVT(,RF)
         LTR   RF,RF
         BC    8,NOTSOE
         LA    R1,ECODE
         ST    R1,PARM
         LA    R1,NAMEPTR
         ST    R1,PARM+4
         LA    R1,NAMELEN
         ST    R1,PARM+8
         LA    R1,VALUEPTR
         ST    R1,PARM+12
         LA    R1,VALUELEN
         ST    R1,PARM+16
         LA    R1,TOKEN
         ST    R1,PARM+20
         OI    PARM+20,X'80'
         LA    R1,PARM
         BALR  RE,RF
         LTR   RF,RF
         BC    7,EXIT             BAD RETURN CODE
         CLC   0(3,R2),=C'GET'
         BC    7,EXIT
         L     R8,VALUELEN
         CR    R8,R7              IS LENGTH TOO LONG?
         BC    12,GETLENOK        BR IF NOT
         LR    R8,R7              TRUNCATE
GETLENOK DS    0H                 R8=NEW VALUE LENGTH
         STH   R8,0(R4)           SET NEW LENGTH
         LTR   R8,R8              IS LENGTH 0?
         BC    8,EXIT             BR IF YES
         BCTR  R8,0               LESS 1 FOR EXECUTE
         L     R9,VALUEPTR
         EX    R8,MOVE            MOVE VALUE TO USER'S STRING
         B     EXIT
MOVE     MVC   2(0,R4),0(R9)
NOTSOE   DS    0H
         L     RF,=F'-1'
EXIT     DS    0H
         ST    RF,0(R5)           SET RETCODE
         PLIEXIT
GETECODE DC    A(TSVERETR)
PUTECODE DC    A(TSVEUPDT)
TOKEN    DC    F'0'
         LTORG
DSA      DSECT
PARM     DS    6F
NAMELEN  DS    F
VALUELEN DS    F
NAMEPTR  DS    F
VALUEPTR DS    F
ECODE    DS    F
DSALEN   EQU   *-DSA
         END
