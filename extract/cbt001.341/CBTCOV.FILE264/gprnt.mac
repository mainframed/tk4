 /* GPRNT
0*$.HE GENERALIZED UTILITIES - GPRNT
0*$.HE GPRNT - GENERALIZED PRINT UTILITIES
0*$.PL 55
0*$.PN 0
0*$.PA
0*$.SS
0*$.NF
0*$12/6/76
0*$AUTHOR:  T. SMITH
0*$SOURCE MODULE NAME:  GPRNT
0*$DOCUMENTATION ID:  0*$
0*$.FI L
0*$.SP 5
0*$THIS UTILITY CAN BE USED TO PRINT ANY DATA SET WHICH MAY BE PROCESSED
0*$USING QSAM.  JCL FORMAT IS AS FOLLOWS:
0*$.SP 1
0*$.IN 5
0*$.NF
0*$// EXEC PGM=GPRNT,PARM='/OFF,PGSIZE,SKIP'
0*$//SYSPRINT DD SYSOUT=A
0*$//IN DD DSN=DSN,DISP=SHR
0*$//OUT DD SYSOUT=A,DCB=(LRECL=137,BLKSIZE=141,RECFM=VA)
0*$.FI L
0*$.IN 0
0*$.SP 1
0*$THE OFF IN THE PARM FIELD MUST BE A NUMBER FROM 0 TO 32767, AND
0*$INDICATES THE NUMBER OF BLANKS TO BE INSERTED IN FRONT OF EACH RECORD
0*$BEFORE IT IS PRINTED.  PGSIZE IN THE PARM FIELD IS OPTIONAL, AND
0*$INDICATES THE NUMBER OF LINES PER PAGE.  THE DEFAULT FOR PGSIZE IS
0*$55.  SKIP IN THE PARM FIELD IS ALSO OPTIONAL (IF YOU WANT TO SPECIFY
0*$SKIP BUT NOT PGSIZE, INDICATE THE ABSENCE OF PGSIZE BY AN EXTRA
0*$COMMA).  IT INDICATES THE NUMBER OF BLANK LINES TO BE PRINTED
0*$BETWEEN EACH PRINTED LINE.  THE DEFAULT IS 0.
0*$BLKSIZE ON THE OUT DD STATEMENT CAN OPTIONALLY
0*$BE INCREASED.  THE RECFM=VA SHOULD BE REPLACED WITH RECFM=VM IF THE
0*$CARRIAGE CONTROL SUPPLIED ON THE INPUT RECORDS IS MACHINE CONTROL
0*$RATHER THAN ASA.
0*$.SP 1
0*$NOTE: IF THE INPUT DATA SET HAS CARRIAGE CONTROL SUPPLIED, GPRNT
0*$WILL IGNORE PGSIZE AND SKIP SPECIFICATIONS IN THE PARM FIELD,
0*$AND INSTEAD WILL USE CARRIAGE CONTROL SUPPLIED.
 */
 GPRNT:  PROC(PARM) OPTIONS(MAIN);
   DCL PARM CHAR(100) VARYING;

   DCL FINDDCB ENTRY(CHAR(8))
     RETURNS(PTR);
   % INCLUDE DCB;
   % INCLUDE DCBQSAM;
   DCL PAD CHAR(32767) VARYING;
   DCL PADL FIXED BIN(15,0);
   DCL PGSIZE FIXED BIN(15,0) STATIC INIT(55);
   DCL SKIP FIXED BIN(15,0) STATIC INIT(0);
   DCL OUT FILE RECORD OUTPUT;
   DCL INREC CHAR(32767) VARYING;
   DCL DCBPTR PTR;
   DCL LRECL FIXED BIN(15,0);
   DCL CARCTL BIT(1);
   DCL OUTREC CHAR(32767) VARYING;
   DCL MYCC CHAR(1) STATIC INIT('1');

   L = LENGTH(PARM);
   I = INDEX(PARM,',');
   IF I = 0
     THEN PADL = PARM;
     ELSE DO;
       PADL = SUBSTR(PARM,1,I-1);
       J = INDEX(SUBSTR(PARM,I+1),',');
       IF J = 0
         THEN J = L+1;
         ELSE J = J+I;
       PGSIZE = SUBSTR(PARM,I+1,J-I-1);
       IF PGSIZE = 0
         THEN PGSIZE = 55;
       IF J < L
         THEN SKIP = SUBSTR(PARM,J+1);
       END;
   PAD = SUBSTR((200)' ',1,PADL);
   OPEN FILE(IN) RECORD INPUT;
   DCBPTR = FINDDCB('IN');
   IF SUBSTR(DCBRECFM,6,2) ^= '00'B
     THEN CARCTL = '1'B;
     ELSE CARCTL = '0'B;
   LRECL=DCBLRECL;
   LNECNT = 0;
   ON ENDFILE(IN) GO TO EOJ;
   DO FOREVER=1 REPEAT FOREVER;
     READ FILE(IN) INTO(INREC);
 /*  I = LENGTH(INREC);
     IF I > LRECL-PADL
       THEN IF CARCTL
         THEN INREC = SUBSTR(INREC,1,LRECL+1-PADL);
         ELSE INREC = SUBSTR(INREC,1,LRECL-PADL);
 */  IF CARCTL
       THEN DO;
         I = LENGTH(INREC)-1;
         OUTREC = SUBSTR(INREC,1,1)××PAD××SUBSTR(INREC,2,I);
         END;
       ELSE DO;
         IF SKIP ^= 0
           THEN DO;
             DO I = 1 TO SKIP;
               OUTREC = ' ';
               LNECNT = LNECNT + 1;
               IF LNECNT > PGSIZE
                 THEN DO;
                   LNECNT = 0;
                   OUTREC ='1';
                   END;
               WRITE FILE(OUT) FROM(OUTREC);
               END;
             END;
         LNECNT = LNECNT + 1;
         IF LNECNT > PGSIZE
           THEN DO;
             LNECNT = 1;
             MYCC = '1';
             END;
         OUTREC = MYCC ×× PAD ×× INREC;
         MYCC = ' ';
         END;
     WRITE FILE(OUT) FROM(OUTREC);
     END;
 EOJ:
   END GPRNT;
