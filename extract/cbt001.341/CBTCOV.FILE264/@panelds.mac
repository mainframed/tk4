.HE GENERALIZED SUBROUTINES - @PANELDS
.HE PLI PREPROCESSOR TEXT
.HE FULL SCREEN SUPPORT FOR PLI UNDER TSO
.PL 55
.PN 0
.SS
.NF
08/06/77
AUTHOR:  T. SMITH
SOURCE MODULE NAME:  @PANELDS
DOCUMENTATION ID:  NONE
.FI L
.SP 5
.SS
THIS TEXT PROVIDES A DESCRIPTION OF THE DECLARES GENERATED BY THE
@PANEL, @FIELD, AND @ENDPNL MACROS.
.LL 72
.NF
.SP 1
 *--------------------------------------------------------------------
 *
 *               @PNLARY - ARRAY OF POINTERS TO PANELS
 *
 *-------------------------------------------------------------------
 */
 DCL 1 @PNLARYS,
      2 @ARYCNT FIXED BIN(31,0) INIT(&PNLCNT),
      2 @PNLARY(&PNLCNT),
       3 @PNLSTAPT PTR,
              /* POINTER TO STATIC PORTION OF DEFINITION */
       3 @PNLDYNPT PTR;
              /* POINTER OF DYNAMIC PORTION OF DEFINITION */
 @PNLSTAPT(1)=ADDR(&PANEL1);
 @PNLDYNPT(1)=ADDR(&PANEL1_DYNAM);
 .
 .
 .
 /*
 *---------------------------------------------------------------------
 *
 *          @PNLSTR - STATIC STORAGE FOR PANEL DESCRIPTORS
 *
 *---------------------------------------------------------------------
 */
 DCL @PNLCNT FIXED BIN(15,0) INIT(&PNLCNT),
              /* NUMBER OF PANELS THAT FOLLOW */
 DCL 1 &PANEL,
              /* THIS SUBSTRUCTURE IS REPEATED FOR EVERY
                 @PANEL MACRO */
       3 @PNLLEN FIXED BIN(15,0) INIT(&PNLLEN),            /*   0   2 */
              /* LENGTH OF THIS PANEL DESCRIPTION */
       3 @PNLNAME CHAR(8) INIT('&NAME'),                   /*   2   8 */
              /* NAME OF THE PANEL */
       3 @PNLNUM FIXED BIN(15,0) INIT(&PNLNUM),            /*  10   2 */
              /* PANEL NUMBER */
       3 @INCNT FIXED BIN(15,0) INIT(&INCNT),              /*  12   2 */
              /* NUMBER OF UNPROTECTED FIELDS IN PANEL */
       3 @FLDCNT FIXED BIN(15,0) INIT(&FLDCNT),            /*  14   2 */
              /* NUMBER OF FIELDS IN PANEL */
       3 @CURSBA BIT(16),                                  /*  16   2 */
              /* LOCATION ON THE SCREEN WHERE THE CURSOR IS TO
                 BE POSITIONED.  LOCATION IS IN THE FORM
                 ACCEPTABLE TO THE SBA ORDER. */
       3 @CURSBAB FIXED BIN(15,0),                         /*  18   2 */
              /* LOCATION ON THE SCREEN WHERE THE CURSOR IS TO
                 BE POSITIONED.  LOCATION IS IN THE FORM
                 OF A NUMBER FROM 0 TO 1919 */
       3 @FLDDESCR,                                        /*  20     */
        4 &FIELD,
              /* THIS SUBSTRUCTURE IS REPEATED FOR EVERY @FIELD MACRO
                 FOR THE CURRENT PANEL */
         5 @FLDLEN FIXED BIN(15,0) INIT(&FLDLEN),          /*   0   2 */
               /* LENGTH OF THIS FIELD DESCRIPTION */
         5 @FLDNAME CHAR(8) INIT('&FLDNAME');              /*   2   8 */
              /* NAME OF THIS FIELD */
         5 @FLDNUM FIXED BIN(15,0) INIT(&FLDNUM),          /*  10   2 */
              /* NUMBER OF FIELD WITHIN PANEL */
         5 @FLDINUM FIXED BIN(15,0) INIT(&FLDINUM),        /*  12   2 */
              /* NUMBER OF INPUT FIELD WITHIN PANEL */
         5 @INLEN FIXED BIN(15,0) INIT(&INLEN),            /*  14   2 */
              /* LENGTH OF INPUT FIELD */
         5 @INOFF FIXED BIN(31,0),                         /*  16   4 */
              /* OFFSET IN THE &PANEL_IN SUBSTRUCTURE TO THE
                 ASSOCIATED INPUT FIELD. */
         5 @OUTOFF FIXED BIN(31,0),                        /*  20   4 */
              /* OFFSET IN THE &PANEL_OUT SUBSTRUCTURE TO THE
                 ASSOCIATED OUTPUT FIELD. */
         5 @PICOFF FIXED BIN(31,0),                        /*  24   4 */
              /* OFFSET IN FIELD DESCRIPTION TO PICLEN */
         5 @FLAGS BIT(16),                                 /*  28   2 */
              /* BIT 0 - 1 = VERIFY
                     1 - 1 = AUTODUP
                     2 - 1 = PROTECTED (LITERAL FIELD)
                     3 - 1 = NUMERIC (AUTOMATIC UPSHIFT)
                             IF BIT 2 IS ON, BIT 3 SHOULD ALSO
                             BE ON TO CAUSE ON AUTOMATIC SKIP OF
                             THE CURSOR OVER THIS FIELD.
                   4&5 -00 = DISPLAY/NOT SELECTOR PEN DETECTABLE
                        01 = DISPLAY/SELECTOR PEN DETECTABLE
                        10 = INTENSIFIED DISPLAY/SEL PEN DETECT
                        11 = NONDISPLAY/NONPRINT,NONDETECT
                     6 - 1 = NOSKIP - CAUSES AN EXTRA TWO BYTES
                             TO BE RESERVED FOLLOWING FIELD.
                     7 - 1 = PREMODIFIED
                     8 - 1 = TRANSLATE TO UPPER CASE
                  9-10 -00 = ALPHAMERIC FIELD
                        01 = NUMERIC FIELD
                        10 = ALPHABETIC FIELD
                        11 = HEXADECIMAL FIELD */
         5 @FLDSBA BIT(16),                                /*  30   2 */
              /* LOCATION ON THE SCREEN OF THE ATTRIBUTE BYTE
                 FOR THIS FIELD.  THE LOCATION IS IN THE FORM
                 ACCEPTABLE TO THE SBA ORDER */
         5 @FLDSBAB FIXED BIN(15,0),                       /*  32   2 */
              /* LOCATION ON THE SCREEN OF THE ATTRIBUTE BYTE
                 FOR THIS FIELD.  THE LOCATION IS IN THE FORM
                 OF A NUMBER FROM 0 TO 1919. */
         5 @LITLEN FIXED BIN(15,0) INIT(&LITLEN),          /*  34   2 */
              /* LENGTH OF LITERAL, OR ZERO IF NO LITERAL */
         5 @LITERAL CHAR(&LITLENA) INIT('&LITERAL'),       /*  36   ? */
              /* CONTAINS ANY LITERAL THE USER MIGHT HAVE
                 SPECIFIED.  NOTE THAT IF A FIELD LENGTH
                 LONGER THEN THE LENGTH OF THE SPECIFIED
                 LITERAL IS DESIRED, YOU SHOULD USE THE
                 LENGTH OPERAND OF THE @FIELD MACRO, UNLESS
                 THE PICTURE OPERAND IS SPECITIED.  NOTE ALSO THAT
                 A LITERAL MAY NOT EXCEED THE MAXIMUM INPUT LENGTH
                 AS SPECIFIED BY THE PICTURE OPERAND. */
         5 @PICLEN FIXED BIN(15,0),                       /* 36+?  2 */
              /* CONTAINS THE LENGTH OF THE FOLLOWING PICTURE
                 OF 0 IF NO PICTURE */
         5 @PICTURE CHAR(&PICLEN) INIT('&PICTURE');       /* 38+?  ? */
              /* CONTAINS PICTURE IF SPECIFIED.  OTHERWISE
                 THIS FIELD IS OMITTED. */
 DCL 1 &PANEL_DYNAM UNALIGNED,
              /* THIS SUBSTRUCTURE IS REPEATED FOR EACH @PANEL
                 MACRO.  IT CONTAINS ALL OF THE DYNAMICALLY
                 MODIFIED VARIABLES ASSOCIATED WITH A PANEL.
                 IT IS DECALRED AS A SEPARATE STRUCUTRE TO
                 PERMIT REENTERABILITY. */
       3 @INOFF FIXED BIN(31,0), INIT(&INOFF),             /*   0   4 */
              /* OFFSET IN &PANEL_DYNAM TO THE &PANEL_IN
                 SUBSTRUCTURE. */
       3 @OUTOFF FIXED BIN(31,0) INIT(&OUTOFF),            /*   4   4 */
              /* OFFSET IN &PANEL_DYNAM TO THE &PANEL_OUT
                 SUBSTRUCTURE. */
       3 @DYNCNT FIXED BIN(15,0) INIT(&FLDCNT),            /*   8   2 */
              /* NUMBER OF FIELDS IN THIS PANEL. */
       3 &PANEL_OUTFLAG(&FLDCNT) BIT(1) INIT((&FLDCNT)(1)'0'B),
              /* THERE IS ONE BIT IN THIS ARRAY FOR EVERY FIELD ON A
                 PANEL.  EVERYTIME YOU WANT A FIELD RE-WRITTEN ON
                 THE SCREEN, YOU SHOULD TURN THIS BIT ON, OR USE THE
                 @FLDMOD MACRO. */
       3 &PANEL_OUT,
              /* THIS STRUCTURE CONTAINS AN ELEMENT FOR EVERY
                 FIELD IN THE PANEL.  BEFORE CALLING SCRWRIT
                 TO WRITE A SCREEN, EACH FIELD IN THIS STRUCTURE
                 SHOULD BE SET TO THE VALUE YOU WANT TO APPEAR
                 ON THE SCREEN.  ALL FIELDS ARE INITIALIZED TO
                 THE LITERAL VALUE SPECIFIED IN THE @FIELD MACRO
                 OR TO A NULL STRING IF NOT LITERAL WAS SPECIFIED.
                 YOU SHOULD NOTE THAT UNPROTECTED FIELDS ARE
                 RE-WRITTEN EVERY TIME SCRWRITE IS INVOKED, BUT
                 PROTECTED FIELDS WILL BE WRITTEN ONLY ON THE
                 FIRST TIME A PANEL IS WRITTEN (SUCH AS WHEN
                 PANELS ARE CHANGED), OR WHEN THEY ARE CHANGED BY
                 THE PROGRAM.  TO ENSURE THAT FIELDS ARE MODIFIED
                 CURRECTLY, YOU SHOULD USE THE @FLDMOD MACROS AS
                 FOLLOWS:

                   @FLDMOD(&PANEL.&FIELD = VALUE);

                 WHERE PANEL AND FIELD ARE THE APPROPRIATE NAMES,
                 AND VALUE IS EITHER A LITERAL OR A VARIABLE
                 NAME. */
        4 &FIELD1LEN FIXED BIN(15,0) INIT(&LEN1),
        4 &FIELD1 CHAR(&LEN1) VARYING INIT('&LITORNULL'),
        .
        .
        .
        4 &FIELDNLEN FIXED BIN(15,0) INIT(&LENN),
        4 &FIELDN CHAR(&LENN) VARYING INIT('&LITORNULL'),
       3 &PANEL_IN,
              /* THIS STRUCTURE CONTAINS AN ELEMENT FOR EVERY
                 UNPROTECTED FIELD IN THE PANEL.  THESE FIELDS
                 WILL BE SET TO THE VALUES KEYED BY THE
                 OPERATOR. */
        4 &FIELD1LEN FIXED BIN(15,0) INIT(&ILEN1),
        4 &FIELD1 CHAR(&ILEN1) VARYING,
        .
        .
        .
        4 &FIELDNLEN  FIXED BIN(15,0) INIT(&ILENN),
        4 &FIELDN CHAR(&ILENN) VARYING;
DCL 1 @PNLCALL,
              /* PARAMETER LIST PASSED TO SCRWRIT */
     2 @CURPNL FIXED BIN(15,0),
              /* THIS FIELD SHOULD BE INITIALIZED
                 TO ZERO ON THE FIRST CALL TO
                 SCRWRIT.  SCRWRIT WILL SUBSEQUENTLY
                 MAINTAIN THIS FIELD WITH THE NUMBER
                 OF THE PANEL CURRENTLY ON DISPLAY */
     2 @NXTPNL FIXED BIN(15,0),
              /* THE CALLING PROGRAM SHOULD SET THIS
                 FIELD TO THE NUMBER OF THE PANEL
                 NEXT TO BE DISPLAYED.  NOTE THAT IF
                 THIS FIELD MATCHES @CURPNL, DATA THAT
                 HAS NOT CHANGED (UNMODIFIED PROTECTED
                 FIELDS) WILL NOT BE TRANSMITTED, SINCE
                 IT IS ALREADY DISPLAYED. */
     2 @ARYPTR PTR,
              /* SHOULD BE SET TO THE ADDRESS
                 OF @PNLARYS (SEE ELSEWHERE IN
                 THIS DOCUMENT), WHICH IS AN ARRAY
                 OF POINTER VARIABLES POINTING TO ALL
                 POSSIBLE PANELS. */
     2 @AID BIT(8),
              /* AID BYTE RETURNED BY SCRWRIT */
     2 @CURLOC FIXED BIN(15,0),
              /* LOCATION OF CURSOR ON THE SCREEN
                 (IN BINARY) RETURNED BY
                 SCRWRIT. */
     2 @CHGCURS FIXED BIN(15,0),
              /* SET THIS FIELD NEGATIVE IF YOU WANT
                 THE CURSOR TO BE POSITIONED TO THE
                 LOCATION SPECIFIED IN THE @PANEL
                 MACRO.  OTHERWISE, SPECIFY IN THIS
                 FIELD THE BINARY LOCATION (RELATIVE 0)
                 WHERE YOU WANT THE CURSOR POSITIONED.
                 SCRWRIT WILL RESET THIS FIELD
                 NEGATIVE AT EACH INVOCATION. */
     2 @CALLFLGS BIT(8);
              /* 1... .... - WRITE ONLY, NO READ
                 .1.. .... - CLEAR SCREEN ONLY.
                 .... ...1 - SCREEN DISPLAYS ARE TO BE
                             WRITTEN TO FILE PRTSCR,
                             LRECL=81, RECFM=FBA.
                 .... ..1. - ALL FIELDS TO BE RE-WRITTEN,
                             INCLUDING PROTECTED FIELDS. */
