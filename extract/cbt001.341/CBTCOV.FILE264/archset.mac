 ARCHSET: PROC OPTIONS(MAIN);
 /**********************************************************************
 * READS A LIST OF DATASET NAMES ON SYSIN, AND WRITES JCL TO IEFRDER   *
 * TO STORE THE SPECIFIED DATASETS ON TAPE.  DDNAME FILESEQ SHOULD     *
 * POINT TO DSN=X75826X.ARCHIVE.FLSQ, WHICH IS PLACEHOLDER ON TAPE,    *
 **********************************************************************/
   DFT RANGE(*) FIXED BIN VALUE(FIXED BIN(31,0));
   DCL NULL BUILTIN;
   DCL HDR PTR;
   DCL 1 EL BASED(ELPTR),
     2 NXT PTR,
     2 DSN CHAR(44) VAR,
     2 VOL CHAR(6);
   DCL INREC CHAR(256) VAR;
   DCL (SUFFIX,PREFIX) ENTRY(CHAR(*),CHAR(*))
     RETURNS(FIXED BIN(15,0));
   HDR=NULL;
   ON ENDFILE(IN) GO TO EOF;
   ON CONDITION(BADNAME) GO TO EOJ;
   DO FOREVER=1 REPEAT FOREVER;
     READ FILE(IN) INTO(INREC);
     INREC=SUBSTR(INREC,PREFIX(INREC,' ')); /* LEADING BLANKS */
     I=INDEX(INREC,' ');
     IF I=0
       THEN I=LENGTH(INREC)+1;
     CALL DODSN(SUBSTR(INREC,1,I-1));
     END;
 EOF:;
   FLSQ=1+GETSQ; /* FLSQ=NEXT TAPE FILE SEQUENCE NUMBER */
   CALL JCLHDR; /* GO PUT OUT INITIAL JCL */
   CALL POPNAMES(FLSQ); /* PUT OUT JCL FOR EACH DSNAME */
 EOJ:;

 DODSN: PROC(PRMDSN);
 /**********************************************************************
 *                                                                     *
 * CALLED TO CHECK OUT A DSNAME, AND PUSH IT ON THE STACK IF OK.       *
 *                                                                     *
 **********************************************************************/
   DCL PRMDSN CHAR(*) VAR;
   DCL NEWVOL CHAR(6);

   NEWVOL=GETVOL(PRMDSN);
   ALLOC EL;
   NXT=HDR;
   HDR=ELPTR;
   DSN=PRMDSN;
   VOL=NEWVOL;
   END DODSN;

 GETSQ: PROC RETURNS(FIXED BIN);
 /**********************************************************************
 *                                                                     *
 * GETS THE NEXT FILE SEQUENCE NUMBER TO USE ON THE ARCHIVES TAPE.     *
 *                                                                     *
 **********************************************************************/
   %INCLUDE JFCB;
   DCL FLSQ FIXED BIN;
   DCL SYSJFCB ENTRY(CHAR(8),PTR);
   DCL JFCBCOR CHAR(176);

   OPEN FILE(FILESEQ) RECORD INPUT;
   JFCBPTR=ADDR(JFCBCOR);
   CALL SYSJFCB('FILESEQ',JFCBPTR);
   FLSQ=JFCBFLSQ;
   CLOSE FILE(FILESEQ);
   RETURN(FLSQ);
   END GETSQ;

 GETVOL: PROC(PARM) RETURNS(CHAR(6));
 /**********************************************************************
 *                                                                     *
 * CALLED TO OBTAIN THE VOLUME SERIAL NUMBER FOR PARM DSNAME.          *
 *                                                                     *
 **********************************************************************/
   DCL PARM CHAR(*) VAR;
   %INCLUDE @9,@9ALLOC,@9FREE,@9DCLSVC,@9DDNAME,
     @9DDNRET,@9DSNAME,@9STATUS,@9VOLRET;
   DCL DDNAME CHAR(8);
   DCL VOLSER CHAR(6);

   @9DSNAME(PARM);
   @9DDNRET(DDNAME);
   @9VOLRET(VOLSER);
   @9STATUS('SHR');
   @9ALLOC(ERROR_CODE,INFO_CODE);
   IF ERROR_CODE^=0
     THEN DO;
       PUT SKIP EDIT('INVALID DSN='××PARM)(A);
       SIGNAL CONDITION(BADNAME);
       END;
   @9DDNAME(DDNAME);
   @9FREE;
   RETURN(VOLSER);
   END GETVOL;

 JCLHDR: PROC;
 /**********************************************************************
 *                                                                     *
 * WRITES INITIAL JCL TO INTERNAL READER.                              *
 *                                                                     *
 **********************************************************************/
   DCL EOFSW BIT(1);
   DCL CARD CHAR(80);

   OPEN FILE(ARCHJCL) RECORD INPUT;
   EOFSW='0'B;
   ON ENDFILE(ARCHJCL) EOFSW='1'B;
   READ FILE(ARCHJCL) INTO(CARD);
   DO WHILE(^EOFSW);
     WRITE FILE(IEFRDER) FROM(CARD);
     READ FILE(ARCHJCL) INTO(CARD);
     END;
   CLOSE FILE(ARCHJCL);
   END JCLHDR;

 POPNAMES: PROC(FLSQ) RETURNS(FIXED BIN);
 /**********************************************************************
 *                                                                     *
 * CALLED TO POP DSNAMES OFF THE STACK AND EMIT APPROPRIATE JCL.       *
 *                                                                     *
 **********************************************************************/
   DCL FLSQ FIXED BIN;
   DCL CARD CHAR(80);
   DCL SEQ PIC'9999';

   SEQ=FLSQ; /* TAPE FILE SEQUENCE NUMBER */
   DO ELPTR=HDR REPEAT HDR WHILE(ELPTR^=NULL);
     HDR=NXT;
     CARD='//S'××SEQ××' EXEC ARCHIVE,NAME='''××DSN××''',';
     WRITE FILE(IEFRDER) FROM(CARD);
     CARD='// SEQ='××SEQ××' DISKSER='××VOL;
     WRITE FILE(IEFRDER) FROM(CARD);
     CARD=' DUMP DSN='××DSN;
     WRITE FILE(IEFRDER) FROM(CARD);
     FREE EL;
     SEQ=SEQ+1;
     END;
   CARD='// EXEC ENDTAPE,SEQ='××SEQ;
   WRITE FILE(IEFRDER) FROM(CARD);
   END POPNAMES;

   END ARCHSET;
