 /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
 /* DENT002 - MD,V,SCAN,SC,INSERT,IN,I,IF,IB,DELETE,DEL,MDEL,MV SUB*/
         % DCL @PROCNAME CHAR;
         % DCL @RENTNAME CHAR;
         % @PROCNAME = 'RENT';
         % @RENTNAME = 'DENT002';
         % INCLUDE DENTSUB;
         HALT;
         DCL SETCAPS ENTRY;
         DCL LAST FIXED BIN(31,0) INIT(99999999);
         DCL (SAVPTR,DELPTR) PTR;
         DCL CMDLAB(14) LABEL;
         GO TO CMDLAB(CMDINDX);
 MD:
 CMDLAB(1): /* DENT002 */
 CMDLAB(2): /* MD */
 CMDLAB(3): /* V */
 CMDLAB(14): /* MV */
         I = PARY(2);
         IF CMDINDX=14 /* IS IT MV? */
           THEN DO;
             IF I>6 × I<1
               THEN DO;
                 MSGDATA='MARK INDEX OUT OF RANGE';
                 RHRC = 8;
                 RETURN;
                 END;
             I = MARKARY(I);
             END;
         CALL #MD(RHPTR,SUBENT,I); /* CALL MDPROC */
         RHRC = 0;
         RETURN;
 CMDLAB(4): /* SCAN */
 CMDLAB(5): /* SC */
         SCANFLAG = '1'B;
         CALL #RESEQ(RHPTR,SUBENT,
           HDPTR,'NOSAVE','NORENUM',LAST,RHPPTR); /* CALL RESEQ */
         IF PARY(2) ^= ''
              THEN GO TO MD;
         RHRC = 0;
         RETURN;
 CMDLAB(6): /* INSERT */
 CMDLAB(7): /* IN */
 CMDLAB(8): /* I */
 CMDLAB(9): /* IF */
 CMDLAB(10): /* IB */
         SCANFLAG = '0'B;
         IF PARY(2) ^= ''
              THEN IF PARY(2) = 0
                   THEN CALL #NC(RHPTR,SUBENT,HDPTR);
                                               /* CALL NEWCUR */
                   ELSE GO TO MD;
         RHRC = 0;
         RETURN;
 CMDLAB(11):  /* DELETE */
 CMDLAB(12):  /* DEL */
 CMDLAB(13):  /* MDEL */
         IF PARY(5)^=''
           THEN DO;
             CALL SETCAPS(PARY(5));
             IF PARY(5)^='NOT'
               THEN DO;
                 MSGDATA='INVALID OPERAND';
                 RHRC = 8;
                 RETURN;
                 END;
             END;
         IF PARY(2)='*'
           THEN DO;
             A,B=CURSEQ;
             IF PARY(3)=''
               THEN CNT=1;
               ELSE CNT=PARY(3);
             DO SAVPTR=RECPTR REPEAT SAVPTR->NXTPTR
               WHILE(SAVPTR^=HDPTR)
               UNTIL(CNT=0);
               B = SAVPTR->RECSEQ;
               CNT = CNT -1 ;
               END;
             END;
           ELSE DO;
             A = PARY(2);
             B = PARY(3);
             END;
         IF CMDINDX=13 /* IS IT MDEL? */
           THEN DO;
             IF A>6 × B>6 × A<1 × B<1
               THEN DO;
                 MSGDATA='MARK INDEX OUT OF RANGE';
                 RHRC = 8;
                 RETURN;
                 END;
             A = MARKARY(A);
             B = MARKARY(B);
             END;
         IF B=0
           THEN B=A;
         SAVSEQ=CURSEQ;
         CALL #MD(RHPTR,SUBENT,A); /* CALL MDPROC */
         DO SAVPTR=RECPTR REPEAT SAVPTR->NXTPTR WHILE(SAVPTR^=HDPTR);
           IF SAVPTR->RECSEQ > B
             THEN LEAVE;
           IF SAVPTR->RECSEQ>=A
             THEN DO;
               IF LENGTH(PARY(4))=0
                 THEN I=1;
                 ELSE DO;
                   I=INDEX(SAVPTR->RECSTR,PARY(4));
                   IF PARY(5)='NOT'
                     THEN IF I=0
                       THEN I=1;
                       ELSE I=0;
                   END;
               IF I^=0
                 THEN DO;
                   DELPTR=SAVPTR;
                   SAVPTR=SAVPTR->LSTPTR;
                   CALL #PUTSLOT(RHPTR,SUBENT,DELPTR);
                     /*CALL PUTSLOT*/
                   END;
               END;
           END;
         CALL #MD(RHPTR,SUBENT,SAVSEQ); /* CALL MDPROC */
         RHRC = 0;
         RETURN;
         END;
