 /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
  /* DENT010 - MERGE,M,MERD SUBCOMMANDS */
  % DCL @PROCNAME CHAR;
  % DCL @RENTNAME CHAR;
  % @PROCNAME ='RENT';
  % @RENTNAME ='DENT010';
  % INCLUDE DENTSUB;
  DCL SETCAPS ENTRY;
  DCL LAST FIXED BIN(31,0) INIT(99999999);
  DCL MDSN CHAR(44) VAR;
  DCL (MDDN,MRP,RHP,BFP,ORGPTR) PTR;
  DCL SAVPTR PTR;
  DCL OPCODE CHAR(4) VAR INIT('INIT');
  DCL ALCODE CHAR(3) VAR STATIC INIT('IN');
  DCL EOFSW BIT(1);
  DCL CHARSEQ CHAR(15) VAR;
  ORGPTR = RECPTR;
  MDSN = PARY(2);
  CALL SETCAPS(MDSN);
  IF SUBSTR(PARQCK,2,1)
    THEN IF SUBSTR(MDSN,1,1)^=''''
      THEN MDSN=''''××MDSN××'''';
  DO I = 5 TO 4 BY -1 WHILE(PARY(I)='');
    END;
  PARY(2) = PARY(I);
  IF PARY(2) ^='*'
    THEN IF PARY(2) = 0
      THEN CALL #NC(RHPTR,SUBENT,HDPTR); /* CALL NEWCUR */
      ELSE DO;
        J = PARY(2);
        CALL #MD(RHPTR,SUBENT,J); /*CALL MDPROC*/
        END;
  IF I > 3
    THEN DO;
      MSTRT = PARY(3);
      IF I > 4
        THEN MEND = PARY(4);
        ELSE MEND = MSTRT;
      END;
    ELSE DO;
      MSTRT = 0;
      MEND = 99999999;
      END;
  IF CMDINDX=4 /* IS IT MERD */
    THEN DO;
      DO RHP=NXTRHEL REPEAT RHP->RHNXT WHILE(RHP^=NULL)UNTIL(RHP->
        RHNAME=MDSN);
        END;
      IF RHP=NULL
        THEN DO;
          MSGDATA='NAME NOT FOUND';
          RHRC = 8;
          RETURN;
          END;
      MRP=RHP->HDPTR;
      BFP=RHP->BUFPTR;
      END;
    ELSE DO;
      CALL #DOALC(MDSN,ALCODE,MDDN,NULL); /* CALL DOALC */
      IF MDDN = NULL
        THEN DO;
          MSGDATA='ALLOCATE FAILED';
          RHRC = 8;
          RETURN;
          END;
      BFP=ADDR(MDDN->ALCRECL);
      END;
  SAVPTR = RECPTR;
  RHRC=0;
 MER:
  DO I=1 REPEAT I+1;
    IF CMDINDX=4 /* IS IT MERD? */
      THEN IF MRP->NXTPTR = RHP->HDPTR
        THEN LEAVE MER;
        ELSE DO;
          MRP=MRP->NXTPTR;
          BFP->BUF=MRP->RECSTR;
          J = MRP->RECSEQ;
          END;
      ELSE DO; /* IT IS MERGE */
        CALL #READ(RHPTR,SUBENT,MDDN,OPCODE,EOFSW); /* CALL READIN */
        IF EOFSW
          THEN LEAVE MER;
        OPCODE ='NXT';
        CHARSEQ=SUBSTR(MDDN->ALCBUF,MDDN->ALCSEQOFF+1,MDDN->ALCSEQLEN);
        IF VERIFY(CHARSEQ,'0123456789')^=0
          THEN DO;
            MSGDATA=
              'DATA TO MERGE MUST BE NUMBERED - TRY MERD SUBCOMMAND';
            RHRC=16;
            LEAVE MER;
            END;
        J=CHARSEQ;
        IF MDDN->ALCSEQOFF=0
          THEN MDDN->ALCBUF=SUBSTR(MDDN->ALCBUF,MDDN->ALCSEQLEN+1);
          ELSE IF MDDN->ALCSEQOFF+MDDN->ALCSEQLEN=MDDN->ALCRECL
            THEN MDDN->ALCBUF=SUBSTR(MDDN->ALCBUF,1,MDDN->ALCSEQOFF);
            ELSE MDDN->ALCBUF=SUBSTR(MDDN->ALCBUF,1,MDDN->ALCSEQOFF)××
            SUBSTR(MDDN->ALCBUF,MDDN->ALCSEQOFF+MDDN->ALCSEQLEN+1);
        END;
    IF J >= MSTRT & J <= MEND
      THEN DO;
        BUF=BFP->BUF;
        SEQ = -1;
        CALL #ADD(RHPTR,SUBENT,SAVPTR,SAVPTR,SEQ,BUF,RHPPTR);
        /* CALL ADDREC */
        END;
      ELSE IF J > MEND
        THEN LEAVE MER;
    END;
  IF CMDINDX^=4 /* IS IT NOT MERD */
    THEN DO;
      OPCODE ='FREE';
      CALL #READ(RHPTR,SUBENT,MDDN,OPCODE,EOFSW); /* CALL READIN */
      END;
  CALL #RESEQ(RHPTR,SUBENT,RECPTR,'NOSAVE','NORENUM',LAST,RHPPTR);
  /* CALL RESEQ */
  CALL #NC(RHPTR,SUBENT,ORGPTR); /* CALL NEWCUR */
  END;
