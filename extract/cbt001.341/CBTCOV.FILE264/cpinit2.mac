 %   PRINT ;
 /* CPINIT2 */
         % IF @CMP = 'O'
              % THEN % DO;
 @CP:  PROC(CPPL1,CPPL2,CPPL3,CPPL4) OPTIONS(MAIN);
                   % END;
         % IF @CMP = 'C'
              % THEN %DO;
 @CP:  PROC OPTIONS(MAIN);
                   % END;
         % IF @CMP='O' × @CMP='C'
              % THEN % INCLUDE IKJCPPL;
         % IF @CMP = 'C'
              % THEN %DO;
         CALL TESTCP(CPPLCBUF,CPPLUPT,CPPLPSCB,CPPLECT);
                   % END;
         % IF @PUTGETSW = 'Y'
              % THEN % INCLUDE @PUTGET;
         % IF @CMDSW = 'Y'
              % THEN % INCLUDE @CMD;
         % IF @WRITESW = 'Y'
              % THEN % INCLUDE @WRITE;
         % IF @READSW = 'Y'
              % THEN % INCLUDE @READ;
         % IF @SETDSNSW = 'Y'
              % THEN % INCLUDE @SETDSN;
         % IF @FREESW = 'Y'
              % THEN % INCLUDE @FREE;
         % IF @ALLOCSW = 'Y'
              % THEN % INCLUDE @ALLOC;
         % IF @NULLSW = 'Y'
              % THEN % DO;
                   % @NULLI = 'Y';
                   % INCLUDE @NULL;
                   % END;
         % IF @SETSW = 'Y'
              % THEN % INCLUDE @SETL;
         % IF @BITSW = 'Y'
              % THEN % DO;
                   % @BITI = 'Y';
                   % INCLUDE @BIT;
                   % END;
         % IF @STRIPSW = 'Y'
              % THEN % DO;
                   % @STRIPI = 'Y';
                   % INCLUDE @STRIP;
                   % END;
         % INCLUDE @REP;
         % IF @PROCSW = 'Y' × @PARSW = 'Y'
              % THEN % DO;
                   % INCLUDE IKJPPL;
                   % INCLUDE PPLINIT;
                   % INCLUDE IKJPDECM;
                   % INCLUDE IKJPDEIK;
                   % INCLUDE IKJPDEDS;
                   DCL WRKPTR PTR,
                       WRKSTR CHAR(500) BASED(WRKPTR);
                   % END;
         % IF @PROCSW = 'Y'
              % THEN % INCLUDE @PROC;
         % IF @PARSW = 'Y'
              % THEN % DO;
                   % INCLUDE PDEDCL;
                   CALL SYSPARS(PPLPTR,IKJRET);
                   IF IKJRET ^= 0
                        THEN SIGNAL ERROR;
                   % END;
         DCL (GBLC,LCLC,SYMC) ENTRY RETURNS(CHAR(256) VARYING);
         DCL (GBLA,LCLA,SYMA) ENTRY(CHAR(*))
           RETURNS(FIXED BIN(31,0));
         DCL SET@ ENTRY(BIT(1),CHAR(8),CHAR(256) VARYING);
         DCL SETDSN@ ENTRY RETURNS(CHAR(44) VARYING);
         DCL 1 BUFFER@,
              2 BUFLEN@ FIXED BIN(15,0),
              2 BUFOFF@ FIXED BIN(15,0) INIT(0),
              2 BUFSTR@ CHAR(256);
         DCL 1 INBUF@ BASED(INPTR@),
              2 INLEN@ FIXED BIN(15,0),
              2 @NULL FIXED BIN(15,0),
              2 INSTR@ CHAR(256);
         % IF @NULLBSW = 'Y'
           % THEN % DO;
         DCL NULL BUILTIN;
           % END;
         DCL IKJRET FIXED BIN(31,0) EXT;
         DCL SYMHD@ PTR EXT;
         SYMHD@ = NULL;
         % INCLUDE IKJECT;
         % IF @INITGSW = 'Y'
              % THEN % DO;
         DCL 1 AVCB BASED(AVCBPTR),
              2 AVCBFLG BIT(8),
                   /* X'00' AREA DOESN'T CONTAIN FREE ELEMENTS
                      X'80' AREA DOES CONTAIN FREE ELEMENTS */
              2 AVCBPAD BIT(24),
              2 AVCBOEE FIXED BIN(31,0),
                   /* OFFSET OF END OF EXTENT */
              2 AVCBLFE FIXED BIN(31,0),
                   /* OFFSET OF LARGEST FREE ELEMENT */
              2 AVCBECF FIXED BIN(31,0),
                   /* END OF CHAIN OF FREE ELEMENTS */
              2 AVCBFFE FIXED BIN(31,0),
                   /* LENGTH FIRST FREE ELEMENT */
              2 AVCBFFO FIXED BIN(31,0);
                   /* ZERO */
         DCL HDPTR@ PTR BASED(AVCBPTR);
         DCL LV@ FIXED BIN(31,0) STATIC INIT(1024);
         DCL SP@ FIXED BIN(15,0) STATIC INIT(1);
         DCL XXXXPTR PTR;
         DCL AVCBPTR PTR,
             AVCBPTC CHAR(4) BASED(XXXXPTR),
             AVCBPTD FIXED BIN(31,0) BASED(XXXXPTR);
         XXXXPTR=ADDR(AVCBPTR);
         DCL YYYYPTR PTR;
         DCL NULLPTR@ PTR,
             NULLPTC@ CHAR(4) BASED(YYYYPTR);
         YYYYPTR=ADDR(NULLPTR@);
         NULLPTR@ = NULL;
         DCL ZZZZPTR PTR;
         DCL @NULLZ PTR,
             @NULLZD FIXED BIN(31,0) BASED(ZZZZPTR);
         ZZZZPTR=ADDR(@NULLZ);
         @NULLZD=0;
         DCL SYSGETM EXT ENTRY;
         CALL SYSGETM('EU',LV@,AVCBPTR,SP@,IKJRET);
         SUBSTR(ECTUSER,5,4)=AVCBPTC;
         HDPTR@=NULL;
         AVCBPTD=AVCBPTD+4;
         AVCBFLG = '10000000'B;
         AVCBPAD = '0'B;
         AVCBOEE = 1024;
         AVCBLFE = 16;
         AVCBECF = 16;
         AVCBFFE = 1008;
         AVCBFFO = 0;
              % END;
 %PRINT;
