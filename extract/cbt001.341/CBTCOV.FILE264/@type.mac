 /* @TYPE */
 %NOPRINT;
         % DCL @TYPE ENTRY;
 % @TYPE:  PROC(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15)
         STATEMENT RETURNS(CHAR);
 /* @TYPE
0*$.HE GENERALIZED SUBROUTINES - @TYPE
0*$.HE PLI PREPROCESSOR TEXT
0*$.PL 55
0*$.PN 0
0*$.PA
0*$.SS
0*$.NF
0*$02/05/78
0*$AUTHOR:  T. SMITH
0*$SOURCE MODULE NAME:  @TYPE
0*$DOCUMENTATION ID:  0*$
0*$.FI L
0*$.SP 5
0*$THIS PL/I PREPROCESSOR PROCEDURE IS PART OF A SYSTEM TO EXTRACT
0*$PERFORMANCE AND WORKLOAD DATA FROM THE SMF RECORDS.  SEE ALSO
0*$DOCUMENTATION FOR @PLOT.  TO EXTRACT A STATISTIC,
0*$IN ESSENCE, YOU BUILD A SMALL PL/I PROGRAM.
0*$IN THIS PROGRAM, YOU ISSUE THE @TYPE MACRO TO DEFINE THE SMF
0*$RECORD TYPES TO BE EXAMINED.  FORMAT FOR THE @TYPE COMMAND
0*$FOLLOWS:
0*$.SP 1
0*$.IN 5
0*$@TYPE(P1,...,P15);
0*$.IN 0
0*$.SP 1
0*$WHERE P1 THRU P15 ARE THE SMF RECORD TYPES WHICH ARE TO BE
0*$EXAMINED.
 */
         DCL (P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,
              P11,P12,P13,P14,P15) CHAR;
         DCL (I,PCNT,L,C) FIXED;
         DCL (INSTR,OUTSTR,COMMA) CHAR;
         INSTR = @TYPESET(P1);
         INSTR = INSTR ×× @TYPESET(P2);
         INSTR = INSTR ×× @TYPESET(P3);
         INSTR = INSTR ×× @TYPESET(P4);
         INSTR = INSTR ×× @TYPESET(P5);
         INSTR = INSTR ×× @TYPESET(P6);
         INSTR = INSTR ×× @TYPESET(P7);
         INSTR = INSTR ×× @TYPESET(P8);
         INSTR = INSTR ×× @TYPESET(P9);
         INSTR = INSTR ×× @TYPESET(P10);
         INSTR = INSTR ×× @TYPESET(P11);
         INSTR = INSTR ×× @TYPESET(P12);
         INSTR = INSTR ×× @TYPESET(P13);
         INSTR = INSTR ×× @TYPESET(P14);
         INSTR = INSTR ×× @TYPESET(P15);
         C = LENGTH(INSTR)/3;
         OUTSTR =
           'DCL 1 @TYPESTR STATIC, 2 @TYPECNT FIXED BIN(15,0) INIT('××
           C××'), 2 @TYPEARY('××C××') FIXED BIN(15,0) INIT(';
         COMMA = '';
         DO I = 1 TO C;
              OUTSTR = OUTSTR××COMMA××SUBSTR(INSTR,I*3-2,3);
              COMMA = ',';
              END;
         OUTSTR = OUTSTR××');';
         RETURN(OUTSTR);
         % END @TYPE;
         % DCL @TYPESET ENTRY;
 % @TYPESET:  PROC(P1) RETURNS(CHAR);
         DCL P1 CHAR;
         DCL L FIXED;
         L = LENGTH(P1);
         IF L = 0
              THEN RETURN('');
              ELSE RETURN(SUBSTR('000',1,3-L)××P1);
         % END @TYPESET;
 %PRINT;
