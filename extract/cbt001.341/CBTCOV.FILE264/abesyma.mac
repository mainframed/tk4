 /* COPYRIGHT 1988 BY THOMAS GLEN SMITH */
 /**********************************************************************
 * ABESYMA - ALIAS #SYMA.                                              *
 * CALLED TO OBTAIN THE NUMERIC VALUE OF A SYMBOLIC VARIABLE.          *
 * PARAMETERS ARE -                                                    *
 *   RHHDRPT - ABE CVT.                                                *
 *   TREEHDR - HEAD OF TREE.  NORMALLY POINTS TO RH_SYMTREE.           *
 *   SYMBOL - NAME OF SYMBOLIC VARIABLE.                               *
 **********************************************************************/
   %INCLUDE ABESUB;
 ABESUB(ABESYMA) PARMS(RHHDRPT,TREEHDR,SYMBOL) RETURNS(DEC FLOAT(16))
   CHECK(YES);
   %INCLUDE ABESUBA;
   %INCLUDE ABESREC;
   %INCLUDE ABEMISS;
   DCL 1 RHNAMESTR BASED(RHNAMPTR),
   %INCLUDE ABERHN;
   % INCLUDE IKJECT;

   DCL SYMBOL CHAR(8);
   DCL X DEC FLOAT(16);
   DCL TREEHDR PTR;

   DCL (DATE,TIME) BUILTIN;
   DCL (P,Q) PTR;
   DCL VALUE CHAR(256) VAR;
   DCL TXT CHAR(256) VAR;
   DCL DTSTR CHAR(8);
   DCL PRMPT CHAR(80) VAR STATIC INIT('INPUT:');

   IF SYMBOL='LASTCC'
     THEN DO;
       X = RHECT->ECTRTCD;
       RETURN(X);
       END;
   IF SYMBOL='INPUT' × SYMBOL='INPUTC'
     THEN DO;
       TXT = #PROMPT(PRMPT);
       CALL SUBRTNE;
       CALL #SETA(RHHDRPT,TREEHDR,SYMBOL,X);
       RETURN(X);
       END;
   IF SUBSTR(SYMBOL,1,3)='SYS'
     THEN SELECT(SYMBOL);
       WHEN('SYSACCT','SYSNAME','SYSPREF','SYSUID') RETURN(MISSING);
       WHEN('SYSATTN') DO;
         CALL #ABEATN; /* GO UPDATE RH_ATNCNT, MAYBE */
         X=RH_ATNCNT;
         RH_ATNCNT=0;
         RETURN(X);
         END;
       WHEN('SYSDATE') DO;
         DTSTR=DATE;
         RETURN(SUBSTR(DTSTR,3,4)××SUBSTR(DTSTR,1,2));
         END;
       WHEN('SYSTIME') RETURN(TIME);
       WHEN('SYSUNQ') DO;
         X=RHUNQNO;
         RHUNQNO=RHUNQNO+1;
         RETURN(X);
         END;
       OTHERWISE;
       END; /* SELECT */
   P=#SRCH(TREEHDR,SYMBOL,Q);
   IF P=NULL
     THEN X=0;
     ELSE IF P->SRTYPE=1 × P->SRTYPE=3
       THEN X=P->SRFL;
       ELSE DO;
         TXT=P->SRCH;
         CALL SUBRTNE;
         P->SRFL=X;
         P->SRTYPE=3;
         END;
   RETURN(X);

 ABESYMY: ENTRY (RHHDRPT,TREEHDR,SYMBOL) RETURNS(DEC FLOAT(16));
   /* ENTRY FOR CLIST PROCESSING */
   TXT=#ABESYP(SYMBOL);
   CALL SUBRTNE;
   RETURN(X);

 SUBRTNE: PROC;
   DCL (IN,OUT) PTR;
   DCL STR CHAR(8) BASED(STRPTR);
   DCL CCC CHAR(256) VAR;

   IF TXT=''
     THEN X=0;
     ELSE DO;
       ALLOC RHNAMESTR SET(IN);
       IN->RHNTYPE=2; /* CHAR */
       IN->RHNPOS=1;
       IN->RHNLNG=LENGTH(TXT);
       IN->RHNFD=0;
       ALLOC RHNAMESTR SET(OUT);
       OUT->RHNTYPE=1; /* FLOAT */
       OUT->RHNPOS=1;
       OUT->RHNLNG=8;
       OUT->RHNFD=0;
       CCC=#CONVERT(TXT,IN,OUT);
       ADDR(X)->STR=CCC;
       FREE IN->RHNAMESTR;
       FREE OUT->RHNAMESTR;
       END;
   END SUBRTNE;

   END ABESYMA;
