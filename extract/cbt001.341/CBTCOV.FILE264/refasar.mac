  /* REFASAR */
  /* THIS SUBROUTINE IS INVOKED TO LOCATE A PARTICULAR ELEMENT IN AN
  ARRAY.  REFASAR WILL RETURN THE NUMBER OF THE DIMENSION IN WHICH AN
  INDEX VALUE WAS NOT SUCCESSFULLY FOUND, AND THE CORRESPONDING
  ELEMENT IN ASARDPT WILL BE SET TO POINT TO THE ASARELS WITH THE NEXT
  LOWER ASSOCIATIVE ADDRESS. OF COURSE, IF THE ELEMENT IS SUCCESSFULLY
  FOUND, REFASAR WILL RETURN THE VALUE ASARDCT+1.  IF A KEY IS NOT
  SUPPLIED FOR A A DIMENSION (ASARIPT(I)=NULL), REFASAR WILL LOCATE
  THE FIRST ELEMENT IN THAT DIMENSION. */
  REFASAR:PROC(PRMPTR) RETURNS(FIXED BIN(15,0));
    DCL PRMPTR PTR; /* POINTER TO ASARHDR */
    % INCLUDE ASARDCL;
    DCL MCHASAR ENTRY(CHAR(1),PTR,CHAR(2) VAR,PTR)
      RETURNS(BIT(1));
    DCL GFASAR ENTRY(PTR,FIXED BIN(15,0),BIT(1))
      RETURNS(PTR);
    DCL TPT PTR;
    DCL BADSW BIT(1) INIT('0'B);
    DCL (I,J,K) FIXED BIN(15,0);
    ASARHP = PRMPTR;
    SLUP:DO I = 1 TO ASARDCT;
      IF ASARIPT(I)=NULL
        THEN DO; /* HE WANTS 1ST IN DIMENSION */
          TPT=GFASAR(ASARHP,I,'0'B); /*GET 1ST NON-INDEX IN DIMENSION*/
          IF TPT=NULL
            THEN LEAVE SLUP; /* NO ELEMENTS IN DIMENSION */
          IF TPT^=ASARDPT(I)
            THEN LEAVE SLUP; /* NO MATCH W/LAST REFERENCE */
          END;
      IF ASARDPT(I) = NULL
        THEN LEAVE; /* NO LAST REFERENCE */
        ELSE IF ^MCHASAR(ASARATY(I),ASARDPT(I)->ASARELIX,'=',ASARIPT(I))
          THEN LEAVE; /* NO MATCH W/LAST REFERENCE */
      END SLUP;
    /* AT THIS POINT, IF I<=ASARDCT THEN THE CURRENT REFERENCE DOESN'T
       MATCH THE PREVIOUS REFERENCE, AND I CONTAINS THE INDEX OF THE
       FIRST DIMENSION THAT DOESN'T MATCH */
    IF I > ASARDCT
      THEN RETURN(I);
    IF I<ASARDCT
      THEN DO J=I+1 TO ASARDCT;
        ASARDPT(J)=NULL; /* CLEAR OUT LOWER ENTRIES */
        END;
    /* NOW SEARCH FOR MATCHING ENTRY AT EACH SUCCEEDING LEVEL */
    DO I = I TO ASARDCT;
      IF ASARIPT(I)=NULL
        THEN ASARDPT(I)=GFASAR(ASARHP,I,'0'B);
          /* GET 1ST NON-INDEX IN DIMENSION */
        ELSE MCH: DO;
          IF ASARDPT(I)^=NULL
            THEN IF MCHASAR(ASARATY(I),ASARDPT(I)->ASARELIX,'<',
              ASARIPT(I))
              THEN IF ASARDPT(I)->ASARNP^=NULL
                THEN DO;
                    ASARDPT(I)=ASARDPT(I)->ASARNP;
                    IF MCHASAR(ASARATY(I),ASARDPT(I)->ASARELIX,'=',
                      ASARIPT(I))
                      THEN LEAVE MCH;
                    END;
          ASARDPT(I)=RIXASAR(ASARHP,I); /* GO SEARCH INDEX */
          IF ASARDPT(I)=NULL
            THEN RETURN(I); /* NO MATCH */
          /* AT THIS POINT ASARDPT(I) CONTAINS POINTER TO NON-INDEX
             ASARELS IN WHICH SEARCH FOR MATCH IN THIS DIMENSION IS TO
             START*/
          DO ASARDPT(I)=ASARDPT(I) REPEAT ASARDPT(I)->ASARNP;
            IF MCHASAR(ASARATY(I),ASARDPT(I)->ASARELIX,'>=',ASARIPT(I))
              THEN LEAVE;
            IF ASARDPT(I)->ASARNP=NULL
              THEN RETURN(I); /* NO MATCH */
            END;
          IF ^MCHASAR(ASARATY(I),ASARDPT(I)->ASARELIX,'=',ASARIPT(I))
            THEN DO;
              IF ASARDPT(I)->ASARLP=NULL
                THEN DO;
                  /* IT MUST BE FIRST IN GROUP */
                  DO TPT=ASARDPT(I)->ASARFGP->ASARIXP
                    REPEAT TPT->ASARFGP->ASARIXP;
                    IF ^SUBSTR(TPT->ASARELFL,1,1)
                      THEN DO;
                        /* THE NEW ELEMENT WILL BE FIRST IN DIMENSION.*/
                        ASARDPT(I)=NULL;
                        RETURN(I);
                        END;
                      ELSE IF TPT->ASARLP ^= NULL
                        THEN DO;
                          TPT=TPT->ASARLP;
                          DO TPT=TPT->ASAREL REPEAT TPT->ASAREL
                            UNTIL(^SUBSTR(TPT->ASARELFL,1,1));
                            TPT=TPT->ASARLGP;
                            END;
                          ASARDPT(I)=TPT;
                          RETURN(I);
                          END;
                    END;
                  END;
                ELSE ASARDPT(I)=ASARDPT(I)->ASARLP;
                  /* SET PRIOR ELEMENT */
              RETURN(I);
              END;
          END;
      /* AT THIS POINT, WE HAVE A MATCH IN THIS DIMENSION */
      END;
    RETURN(I);
  RIXASAR:PROC(PRMPTR,PI) RETURNS(PTR);
  /* THIS SUBROUTINE IS INVOKED TO SCAN THE INDICES.  IT WILL RETURN
  THE FIRST NON-INDEX ELEMENT IT LOCATES IN THE SEARCH.
  */
    DCL PRMPTR PTR; /* POINTER TO ASARHDR */
    DCL PI FIXED BIN(15,0);
    DCL TPT PTR;
    ASARHP = PRMPTR;
    I = PI;
    DO TPT=GFASAR(ASARHP,I,'1'B) REPEAT TPT->ASAREL
      WHILE(TPT^=NULL) UNTIL(TPT=NULL);
      IF ^SUBSTR(TPT->ASARELFL,1,1)
        THEN RETURN(TPT);
      DO TPT=TPT REPEAT TPT->ASARNP WHILE(TPT^=NULL);
        IF MCHASAR(ASARATY(I),TPT->ASARELIX,'>=',ASARIPT(I))
          × TPT->ASARNP=NULL
          THEN LEAVE;
        END;
      END;
    RETURN(TPT);
    END RIXASAR;
    END REFASAR;
