*$.HE ISD GENERALIZED SUBROUTINES - CTOHM
*$.HE CONVERT BINARY TIME OF DAY
*$.PL 55
*$.PN 0
*$.PA
*$.SS
*$.NF
*$10/15/75
*$AUTHOR:  T. SMITH
*$SOURCE MODULE NAME:  CTOHM
*$DOCUMENTATION ID:  *$
*$.FI L
*$.SP 5
*$THIS ROUTINE CAN BE CALLED TO CONVERT THE TIME OF DAY
*$FROM BINARY IN HUNDREDTHS OF A SECOND TO EITHER BINARY
*$OR CHARACTER IN THE FORM HH:MM:SS.TH, DEPENDING ON WHETHER
*$ENTRY POINT CTOHM OR ENTRY POINT CTOHMC IS CALLED.
*$.SP 1
*$.NF
*$.IN 10
*$CALL CTOHM(BINTME,BINRET);
*$  OR
*$CALL CTOHMC(BINTME,CHARET);
*$.FI L
*$.SP 1
*$.IN 0
*$.CE 1
*$DEFINITION OF TERMS
*$.SP 1
*$BINRET
*$.IN 5
*$FIXED BIN(31,0).  SET BY THIS ROUTINE TO THE BINARY EQUIVALENT
*$OF BINTME CONVERTED TO HH:MM:SS.TH.
*$.IN 0
*$BINTME
*$.IN 5
*$FIXED BIN(31,0).  MUST CONTAIN THE TIME OF DAY IN .01 SECONDS.
*$.IN 0
*$CHARET
*$CHAR(*).  MUST BE FIXED CHARACTER FROM 1 TO 12 CHARACTERS LONG.
*$THIS ROUTINE WILL CONVERT BINTME TO THE FORM HH:MM:SS.TH,
*$(OR HHH:MM:SS.TH) AND WILL COPY AS MUCH OF THIS INTO CHARET AS WILL
*$FIT.
         GBLC  &COMP
&COMP    SETC  '&SYSPARM'
CTOHM    CSECT
         TGSREQU
         USING *,RF
ICM      ICM   RF,8,ICM
         B     BYENT
         DROP  RF
         ENTRY CTOHMC
CTOHMC   DS    0H
         LA    RF,0(RF)
BYENT    DS    0H
         STM   RE,RC,12(RD)
         BALR  RB,0
         USING *,RB
         L     RE,0(R1)
         L     RE,0(RE)                RE=TIME IN .01 SECONDS
         LR    R3,RE
         SR    R2,R2
         D     R2,=F'100'              R2=TH
*                                      R3=TIME IN INTEGRAL SECONDS
         LR    RC,R2                   RC=TH
         SR    R2,R2
         D     R2,=F'60'               R2=SS
*                                      R3=TIME IN INTEGRAL MINUTES
         MH    R2,=H'100'
         AR    RC,R2                   RC=SSTH
         SR    R2,R2
         D     R2,=F'60'               R2=MM
*                                      R3=TIME IN INTEGRAL HOURS
         LR    R5,R2                   R5=MM
         M     R4,=F'10000'
         AR    RC,R5                   RC=MMSSTH
         M     R2,=F'1000000'
         AR    RC,R3      RC=HHMMSSTH
         L     R1,4(R1)
         LTR   RF,RF
         BC    4,RETBIN                BR IF ENTRY WAS CTOHM
         CVD   RC,DBLWD
         MVC   EDWK,=X'402120207A20207A20204B2020'
         ED    EDWK,DBLWD+3
         AIF   ('&COMP' EQ 'F').FOPT
*SDV FORMAT
*IF VARYING, BYTE ADDR OF HALFWORD CURLEN FOLLOWED BY STRING
*IF FIXED, BYTE ADDR OF STRING
*MAXLEN - 2 BYTES
*X'80' IF VARYING
         TM    6(R1),X'80'             IS IT VARYING?
         BC    8,FIXED                 BR IF NOT
         L     R1,0(R1)
         LH    R2,0(R1)                R2=CURLEN
         LA    R1,2(R1)                R1=A(STR)
         B     DOBCTR
FIXED    DS    0H
         LH    R2,4(R1)                R2=LEN(STR)
         L     R1,0(R1)                R1=A(STR)
         AGO   .BYFOPT
.FOPT    ANOP
*SDV FORMAT
*BYTE ADDR OF STRING - 4 BYTES
*MAXLEN - 2 BYTES
*CURLEN - 2 BYTES
         LH    R2,6(R1)                R2=CURLEN
         L     R1,0(R1)                R1=A(CHAR STR)
.BYFOPT  ANOP
DOBCTR   DS    0H
         BCTR  R2,0                    LESS 1 FOR EX
         CLI   EDWK+1,C' '             IS IT HHH?
         BC    8,DOSHORT               BR IF NOT
         EX    R2,MVCHMCL              MOVE HHHMMSS
         B     BYBIN
DOSHORT  DS    0H
         EX    R2,MVCHMC
         B     BYBIN
MVCHMCL  MVC   0(0,R1),EDWK+1
MVCHMC   MVC   0(0,R1),EDWK+2
RETBIN   DS    0H
         ST    RC,0(R1)
BYBIN    DS    0H
         LM    RE,RC,12(RD)
         SR    RF,RF
         BR    RE
EDWK     DS    CL13  BBHH:MM:SS.TH
DBLWD    DS    D
         LTORG
         END
