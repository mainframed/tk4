 /* DES - DATA ENCRYPTION STANDARD */
 /*
0*$.HE GENERALIZED SUBROUTINES - DES
0*$.HE DATA ENCRYPTION
0*$.PL 55
0*$.PN 0
0*$.PA
0*$.SS
0*$.NF
0*$07/26/83
0*$AUTHOR:  T. SMITH
0*$SOURCE MODULE NAME:  DES
0*$DOCUMENTATION ID:  0*$
0*$.FI L
0*$.SP 5
0*$THIS IS AN IMPLEMENTATION OF THE DATA ENCRYPTION STANDARD (DES)
0*$ISSUED BY THE NATIONAL BUREAU OF STANDARDS.  DES IS DOCUMENTED IN
0*$FEDERAL INFORMATION PROCESSING STANDARDS PUBLICATION 46, PUBLISHED
0*$15 JANUARY, 1977.
0*$.SP 1
0*$CALL FORMAT IS AS FOLLOWS:
0*$.SP 1
0*$DCL DES ENTRY(CHAR(8),CHAR(8),CHAR(5),PTR) RETURNS(CHAR(8));
0*$.IN 0
0*$DCL (DATA,KEY,ENCRYPT,DECRYPT) CHAR(8);
0*$.IN 0
0*$DCL STELK(16) BIT(48) BASED(KEYPTR);
0*$.IN 0
0*$KEYPTR=NULL;
0*$.IN 0
0*$GET DATA(DATA,KEY);
0*$.IN 0
0*$*** FOLLOWING STATEMENT ENCODES DATA
0*$.IN 0
0*$ENCRYPT=DES(DATA,KEY,'NCODE',KEYPTR);
0*$.IN 0
0*$*** FOLLOWING STATEMENT DECODES DATA
0*$.IN 0
0*$DECRYPT=DES(ENCRYPT,KEY,'DCODE',KEYPTR);
0*$.IN 0
0*$*** DO THIS FREE AT END OF PROCESSING
0*$.IN 0
0*$*** FREE STELK;
 */
 DES: PROC(DATA,PKEY,CODE,KEYPTR) RETURNS(CHAR(8)) OPTIONS(REENTRANT);
   DCL NULL BUILTIN;
   DCL DATA CHAR(8),
       INPUT BIT(64) DEF DATA;
   DCL PKEY CHAR(8),
       KEY BIT(64) DEF PKEY,
       KEYARY(64) BIT(1) DEF PKEY;
   DCL CODE CHAR(5); /* 'NCODE' OR 'DCODE' */
   DCL KEYPTR PTR;
   DCL STELK(16) BIT(48) BASED(KEYPTR);
   DCL PIB BIT(64), /* PERMUTATED INPUT BLOCK */
       L BIT(32) DEF PIB,
       R BIT(32) DEF PIB POS(33);
   DCL CD BIT(56);
   DCL N FIXED BIN(15,0);
   DCL K BIT(48),
       KARY(48) BIT(1) DEF K;
   DCL RET CHAR(8),
       RETB BIT(64) DEF RET;
   DCL DES#S   ENTRY(BIT(48),BIT(32)) OPTIONS(ASSEMBLER);
   DCL DES#E   ENTRY(BIT(32),BIT(48)) OPTIONS(ASSEMBLER);
   DCL DES#IP  ENTRY(BIT(64),BIT(64)) OPTIONS(ASSEMBLER);
   DCL DES#IPI ENTRY(BIT(64),BIT(64)) OPTIONS(ASSEMBLER);
   DCL DES#P   ENTRY(BIT(32),BIT(32)) OPTIONS(ASSEMBLER);
   DCL DES#PC1 ENTRY(BIT(64),BIT(56)) OPTIONS(ASSEMBLER);
   DCL DES#PC2 ENTRY(BIT(56),BIT(48)) OPTIONS(ASSEMBLER);

   PIB=IP(INPUT); /* INITIAL PERMUTATION */
   IF KEYPTR=NULL
     THEN DO;
       ALLOC STELK;
       CD=PC_1; /* GET PERMUTED CHOICE 1 FOR KEY */
       DO N=1 TO 16;
         STELK(N)=KS(N,CD);
         END;
       END;
   DO N=1 TO 16;
     IF CODE='NCODE'
       THEN K=STELK(N);
       ELSE K=STELK(17-N);
     PIB=R××BOOL(L,F(R,K),'0110'B);
     END;
   RETB=IP_1(R××L);
   RETURN(RET);

 E: PROC(P) RETURNS(BIT(48));
   DCL P BIT(32);
   DCL R BIT(48);
   CALL DES#E(P,R);
   RETURN(R);
   END E;

 F: PROC(R,K) RETURNS(BIT(32));
   DCL R BIT(32);
   DCL K BIT(48);
   DCL M BIT(48);
   DCL RET BIT(32);
   DCL N FIXED BIN(15,0);
   M=BOOL(K,E(R),'0110'B);
   CALL DES#S(M,RET);
   RETURN(P(RET));
   END F;

 IP: PROC(P) RETURNS(BIT(64));
   DCL P BIT(64);
   DCL R BIT(64);
   CALL DES#IP(P,R);
   RETURN(R);
   END IP;

 IP_1: PROC(P) RETURNS(BIT(64));
   DCL P BIT(64);
   DCL R BIT(64);
   CALL DES#IPI(P,R);
   RETURN(R);
   END IP_1;

 KS: PROC(N,CD) RETURNS(BIT(48));
   DCL N FIXED BIN(15,0);
   DCL CD BIT(56),
       CDARY(56) BIT(1) DEF CD;
   DCL LST(16) FIXED BIN(15,0) STATIC /* TABLE OF LEFT-SHIFTS */
     INIT(1,1,2,2,2,2,2,2,1,2,2,2,2,2,2,1);
   DCL I FIXED BIN(15,0);

   I=LST(N); /* NUMBER OF BITS TO SHIFT */
   CD=SUBSTR(CD,1+I, 28-I)××SUBSTR(CD,1, I)××
      SUBSTR(CD,29+I,28-I)××SUBSTR(CD,29,I);
   RETURN(PC_2(CD));
   END KS;

 P: PROC(Q) RETURNS(BIT(32));
   DCL Q BIT(32);
   DCL R BIT(32);
   CALL DES#P(Q,R);
   RETURN(R);
   END P;

 PC_1: PROC RETURNS(BIT(56));
   DCL R BIT(56);
   CALL DES#PC1(KEY,R); /* GET PERMUTED CHOICE 1 FOR KEY */
   RETURN(R);
   END PC_1;

 PC_2: PROC(K) RETURNS(BIT(48));
   DCL K BIT(56);
   DCL R BIT(48);
   CALL DES#PC2(K,R);
   RETURN(R);
   END PC_2;

 END DES;
