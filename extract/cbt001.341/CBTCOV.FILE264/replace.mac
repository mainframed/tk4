*$.HE GENERALIZED SUBROUTINES - REPLACE
*$.HE REPLACE B IN A WITH C
*$.PL 55
*$.PN 0
*$.PA
*$.SS
*$.NF
*$6/12/74
*$AUTHOR:  T. SMITH
*$SOURCE MODULE NAME:  REPLACE
*$DOCUMENTATION ID:  *$
*$.FI L
*$.SP 5
*$THIS SUBROUTINE IS CALLED FROM PLI TO REPLACE ONE OR ALL OCCURRENCES
*$OF A STRING OF CHARACTERS IN A LARGER STRING OF CHARACTERS WITH
*$ANOTHER STRING OF CHARACTERS.
*$.SP 1
*$CALL REPLACE(SOURCE,VER,REP,RETCODE,'ALL');
*$.SP 1
*$.CE 1
*$DEFINITION OF TERMS
*$.SP 1
*$'ALL'
*$.IN 5
*$THIS PARAMETER IS OPTIONAL, AND SPECIFIES THAT ALL OCCURRENCES
*$OF VER ARE TO REPLACED BY REP INSTEAD OF JUST THE FIRST.
*$.IN 0
*$REP CHAR(*)
*$.IN 5
*$THIS CHARACTER STRING REPLACES ONE OR ALL (DEPENDING ON WHETHER
*$'ALL' IS SPECIFIED) OCCURRENCES OF THE CHARACTER STRING VER IN
*$THE CHARACTER STRING  SOURCE.   IF REPLACEMENT CAUSES SOURCE TO BE
*$EXPANDED BEYOND ITS MAXIMUM LENGTH, THEN IT WILL BE TRUNCATED TO THE
*$RIGHT.  IF REPLACEMENT CAUSES SOURCE TO SHRINK IN SIZE, AND IF
*$SOURCE IS FIXED LENGTH, BLANKS WILL BE INSERTED TO THE RIGHT.
*$FOR PLI LEVEL-F, A STRING IS ASSUMED TO BE FIXED IF CURLEN =
*$MAXLEN.  CURRENT IMPLEMENTATION RESTRICTS REP TO LE 256 CHARACTERS.
*$.IN 0
*$RETCODE BIT(2)
*$.IN 5
*$SET UPON RETURN AS FOLLOWS
*$.IN 10
*$01 - AT LEAST ONE REPLACEMENT OCCURRED.
*$.IN 10
*$10 - SOURCE WAS TRUNCATED ON THE RIGHT.
*$.IN 0
*$SOURCE CHAR(*)
*$.IN 5
*$THIS IS THE CHARACTER STRING TO BE ALTERED.
*$CURRENT IMPLEMENTATION RESTRICTS SOURCE TO LE 256 CHARACTERS.
*$.IN 0
*$VER CHAR(*)
*$.IN 5
*$ONE OR ALL (DEPENDING ON WHETHER 'ALL' IS SPECIFIED) OCCURRENCES
*$OF THIS CHARACTER STRING IN SOURCE WILL BE REPLACED BY THE
*$CHARACTER STRING REP.  NOTE THAT IF VER IS LONGER THAN SOURCE,
*$RETCODE WILL BE SET TO '00'B, AND CONTROL IS RETURNED.
*$CURRENT IMPLEMENTATION RESTRICTS VER TO LE 256 CHARACTERS.
         GBLC  &COMP
&COMP    SETC  'O'
REPLACE  CSECT
         TGSREQU
         USING *,RB
         STM   RE,RC,12(RD)
         LR    RB,RF
         LM    R2,R5,0(R1)
*                                      R2=A(SDV(SOURCE))
*                                      R3=A(SDV(VER))
*                                      R4=A(SDV(REP))
*                                      R5=A(SDV(RETCODE)) MAYBE
         LTR   R4,R4                   IS REP LAST PARM
         BC    4,ISLAST                BR IF YES
         L     R1,0(R5)                R1 = A(RETCODE)
         NI    0(R1),X'00'             INITIALIZE RETCODE
         B     NOTL
ISLAST   DS    0H
         SR    R5,R5                   INDICATE RETCODE NOT SPECIFIED
NOTL     DS    0H
         L     RF,0(R4)                RF = A(REP)
         L     RE,0(R3)                RE = A(VER)
         L     RA,0(R2)                RA = A(SOURCE)
         AIF   ('&COMP' NE 'F').OPT1
*
*SDV FORMAT
****************************
*BYTE ADDRESS OF STRING - 1 WORD
****************************
*MAXIMUM LENGTH - 2 BYTES
**************************
*CURRENT LENGTH - 2 BYTES
***************************
         LH    R9,6(R4)                R9 = CURLEN(REP)
         LH    R8,6(R3)                R8 = CURLEN(VER)
         LA    R7,6(R2)                R7 = A(CURLEN(SOURCE))
         LA    R6,4(R2)                R6 = A(MAXLEN(SOURCE))
         CLC   0(2,R7),0(R6)
         BC    8,SORFIXED              BR IF YES
         O     R6,SETNEG
SORFIXED DS    0H
         AGO   .BYOPT1
.OPT1    ANOP
*
*SDV FORMAT
******************************
*IF VARYING, BYTE ADDRESS OF HALFWORD CURLEN FOLLOWED BY STRING
*IF FIXED, BYTE ADDRESS OF STRING
******************************
*MAXLEN - 2 BYTES
******************
*X'80' IF VARYING
******************
         LH    R9,4(R4)                R9 = MAXLEN(REP)
         TM    6(R4),X'80'             IS REP VARYING
         BC    8,REPFIXED              BR IF NOT
         LH    R9,0(RF)                R9 = CURLEN(REP)
         LA    RF,2(RF)                RF = A(REP)
REPFIXED DS    0H
         LH    R8,4(R3)                R8 = MAXLEN(VER)
         TM    6(R3),X'80'             IS VER VARYING
         BC    8,VERFIXED              BR IF NOT
         LH    R8,0(RE)                R8 = CURLEN(VER)
         LA    RE,2(RE)                RE = A(VER)
VERFIXED DS    0H
         LA    R7,4(R2)                R7 = A(CURLEN(SOURCE))
         LR    R6,R7                   R6 = A(MAXLEN(SOURCE))
         TM    6(R2),X'80'             IS SOURCE VARYING
         BC    8,SORFIXED              BR IF NOT
         LR    R7,RA                   R7 = A(CURLEN(SOURCE))
         LA    RA,2(RA)                RA = A(SOURCE)
         O     R6,SETNEG
SORFIXED DS    0H
.BYOPT1  ANOP
*              R0-R4=AVAILABLE
*                 R5=A(RETCODE)
*                 R6=A(MAXLEN(SOURCE)) HI-BIT=1 IF SOURCE VARYING
*                 R7=A(CURLEN(SOURCE))
*                 R8=CURLEN(VER)
*                 R9=CURLEN(REP)
*                 RA=A(SOURCE)
*                 RB=BASE
*                 RC=A(LCT)
*                 RD=A(DSA)
*                 RE=A(VER)
*                 RF=A(REP)
         LH    R4,0(R7)                R4 = LEN REMAINING IN SOURCE
         BCTR  R4,0                    LESS 1
         BCTR  R8,0                    R8 = LEN(VER) - 1
         BCTR  R9,0                    R9 = LEN(REP) - 1
         XC    TRTAB,TRTAB
         SR    R1,R1
         IC    R1,0(RE)                R1 = 1ST CHAR OF VER
         LA    R1,TRTAB(R1)
         MVI   0(R1),X'FF'             SET UP FOR TRT
TRTLOOP  DS    0H
         CR    R8,R4                   IS LEN LEFT-1 < LEN(VER)-1
         BC    2,EXIT
         EX    R3,TRTINSTR             SCAN SOURCE FOR 1ST CHAR OF VER
         BC    7,GOTHIT1               BR IF GOT 1ST CHAR OF VER
EXIT     DS    0H
         LM    RE,RC,12(RD)
         BR    RE
GOTHIT1  DS    0H
         LR    R2,R1                   R1,R2=A(POTENTIAL VER IN SOURCE)
         SR    R2,RA                   R2 = LEN TO SUBTRACT FROM LEN LE
         LR    RA,R1                   RA = CURRENT SOURCE PTR
         SR    R4,R2                   DECREMENT LEN LEFT-1
         CR    R8,R4                   IS LEN LEFT-1 < LEN(VER)-1
         BC    2,EXIT                  BR IF YES
         EX    R8,CLCINSTR             IS IT HIT?
         BC    8,GOTHIT                BR IF VER FOUND IN SOURCE
         LA    RA,1(RA)
         BCTR  R4,0
         B     TRTLOOP
GOTHIT   DS    0H
         LTR   R5,R5                   IS RETCODE SPECIFIED
         BC    8,GHNRT                 BR IF NOT
         L     R1,0(R5)                R1 = A(RETCODE)
         OI    0(R1),X'40'             INDICATE AT LEAST ONE REPLACE
GHNRT    DS    0H
         CR    R8,R9                   IS LEN(VER)-1 < LEN(REP)-1
         BC    4,EXPAND                BR IF YES
         LTR   R9,R9                   IS REP NULL?
         BC    4,BYPMVC                BR IF YES
         EX    R9,MVCREP               MOVE REP IN OVER VER IN SOURCE
         LA    RA,1(R9,RA)             RB=A(1ST BYTE BEYOND REP IN
*                                      SOURCE)
         CR    R8,R9
         BC    8,EQLEN                 BR IF LEN(VER)=LEN(REP)
BYPMVC   DS    0H
         LR    R3,R8
         SR    R3,R9                   R3=LEN(VER)-LEN(REP)
         LA    R2,0(R3,RA)             R2=A(NXT GOOD BYTE BEYOND REP IN
*                                           SOURCE)
         LR    R1,R4
         SR    R1,R8                   R1=LEN LEFT IN SOURCE
         BCTR  R1,0                    R1=LEN LEFT-1
         LTR   R1,R1                   IS LEN LEFT = 0?
         BC    4,BYSQU                 BR IF YES
         EX    R1,SQUEEZE              SQUEEZE OUT UNWANTED BYTES
BYSQU    DS    0H
         LTR   R6,R6                   IS SOURCE VARYING?
         BC    4,SORVAR                BR IF YES
         LA    R1,1(R1,RA)             R1=A(1ST BYTE TO PAD W/BLNKS)
         MVI   0(R1),C' '              SET BLANK TO RIPPLE
         SH    R3,=H'2'                GET SET TO RIPPLE
         BC    4,EQLEN                 BR IF ONLY 1 BLNK S/B PADDED
         EX    R3,RIPPLE               RIPPLE BLANKS TO PAD
         B     EQLEN
SORVAR   DS    0H
         LH    R1,0(R7)                R1=CURLEN(SOURCE)
         SR    R1,R3                   R1=NEW CURLEN(SOURCE)
         STH   R1,0(R7)
EQLEN    DS    0H
         LTR   R5,R5                   WAS 'ALL' SPECIFIED?
         BC    12,EXIT                 BR IF NOT
         SR    R4,R8                   R4=LEN LEFT TO SCAN
         BC    8,EXIT                  BR IF DONE
         BCT   R4,TRTLOOP
         B     TRTLOOP
EXPAND   DS    0H
         SR    R4,R8
         BCTR  R4,0                    R4=LEN LEFT-1 AFTER REMOVING VER
*                                           AND INSERTING REP
         LR    R0,R9
         SR    R0,R8                   R0=LEN(REP)-LEN(VER)=OFFSET TO
*                                      SHIFT RIGHT
         LR    R1,R0                   DITTO ABOVE
         AH    R0,0(R7)                R0=NEW CURLEN(SOURCE) MAYBE
         LR    R2,R0                   DITTO ABOVE
         SH    R2,0(R6)                R2= BYTES TO TRUNCATE MAYBE
         BC    12,NOTRUNC              BR IF NO TRUNCATION
         LH    R0,0(R6)                SET NEW CURLEN=MAXLEN(SOURCE)
         STH   R0,0(R7)                SET NEW CURLEN(SOURCE)
         LTR   R5,R5                   IS RETCODE SPECIFIED?
         BC    8,NOSIGNL               BR IF NOT
         L     R3,0(R5)                R3=A(RETCODE)
         OI    0(R3),X'80'             INDICATE TRUNCATION OCCURRED
NOSIGNL  DS    0H
         SR    R4,R2                   R4=LEN LEFT-1 AFTER TRUNCATION
         BC    2,DOSHIFT               BR IF REP IS NOT TRUNCATED
         EX    R4,MVCREP               MOVE TRUNCATED REP TO SOURCE
         B     EXIT                    ALL DONE
NOTRUNC  DS    0H
         STH   R0,0(R7)                SET NEW CURLEN(SOURCE)
DOSHIFT  DS    0H
         LTR   R4,R4                   DO WE NEED TO SHIFT?
         BC    12,MOVREP               BR IF NOT
         LA    R2,1(R8,RA)             R2=A(1ST BYTE TO SHIFT)
         LA    R2,0(R4,R2)             R2=A(LAST BYTE TO SHIFT)
         LA    R3,0(R1,R2)             R2=A(BYTE TO SHIFT TO)
         LA    R1,1(R4)                R1=INDEX
         LA    R0,1                    R0=DECREMENT
SHIFTLP  DS    0H
         MVC   0(1,R3),0(R2)           SHIFT ONE BYTE
         SR    R3,R0
         SR    R2,R0
         BCT   R1,SHIFTLP
MOVREP   DS    0H
         EX    R9,MVCREP               SHIFTED, NOW MOVE IN REP
         LA    RA,1(R9,RA)             BUMP SOURCE INDEX
         LTR   R5,R5                   WAS 'ALL' SPECIFIED?
         BC    12,EXIT                 BR IF NOT
         B     TRTLOOP
TRTINSTR TRT   0(0,RA),TRTAB
CLCINSTR CLC   0(0,RA),0(RE)
MVCREP   MVC   0(0,RA),0(RF)
SQUEEZE  MVC   0(0,RA),0(R2)
RIPPLE   MVC   1(0,R1),0(R1)
LMINSTR  LM    R4,R0,0(R2)
STMINSTR STM   R4,R0,0(R3)
SETNEG   DS    0F
         DC    X'80',XL3'00'
TRTAB   DS    CL256
 LTORG
 END
