  NEATER: PROC OPTIONS(MAIN); /* */ /* THIS PROGRAM TAKES A PL/I PROGRAM
  WHICH IS COMPILER-COMPATIBLE ****//* AND REARRANGES IT INTO A LOGICAL
 FORMAT OR A COMPRESSED FORMAT ****//* */ /* LOGICAL STRUCTURE OF PRECOM
 PILER STATEMENTS IS NOT RECOGNIZED */ /* */ /* OUTPUT MAY BE PRINTED OR
  BOTH PRINTED AND PUNCHED */ /* */ /*VARIABLES NAMED THEN,ELSE,DO,BEGIN
 ,END,ON,PROC OR PROCEDURE MUST BE*//*IMMEDIATELY PRECEDED OR SUCCEDED B
 Y A NON-BLANK DELIMITER OR OPER- *//*ATOR IN THE INPUT STREAM TO PREVEN
 T THEIR CONFUSION WITH KEYWORDS *//* */ /* PROC & PROCEDURE MUST BE SEP
 ARATED BY A BLANK FROM THEIR PARAMETER*//*LIST,IF ANY, IN ORDER TO BE R
 ECOGNIZED AS KEYWORDS */ /* */ /* PARAMETERS MAY BE INSERTED BEFORE ANY
  STATEMENT IN THE PL1 DECK; *//*THESE TAKE THE FORM DOLLAR9,9DOLLAR (WH
 ERE THE SYMBOL $ REPLACES */ /*THE WORD DOLLAR); THE FIRST DIGIT GIVES
 THE CODE: 0 MEANS LOGICAL *//*FORMAT AND PRINT ONLY,1 MEANS LOGICAL FOR
 MAT,PRINT AND PUNCH BOTH; *//*2 MEANS COMPRESS AND PRINT ONLY;3 MEANS C
 OMPRESS, PRINT AND PUNCH */ /*THE SECOND DIGIT GIVES THE AMOUNT OF INSE
 T FOR EACH LEVEL OF */ /*LOGICAL STRUCTURE */ /* */ /* THE STATEMENT NU
 MBERS GENERATED BY NEATER ARE INTENDED TO */ /* CORRESPOND WITH THOSE G
 ENERATED BY THE COMPILER */ /*CODE 0-3 AUTOMATICALLY RESET SEQNO; IF NO
  RESET IS DESIRED,ADD 4 TO*//*THE VALUE OF CODE */ DEBLANK:PROC; /*TAKE
 S CONTENTS OF WORK, REMOVES STRINGS OF BLANKS, AND PUTS COMPRESSED VERS
 ION IN STREAM */ SINDBBL:INDBBL=INDEX(WORK,'  '); IF NAKED=1 THEN IF SU
 BSTR(WORK,1,1)=BLANK THEN DO; STREAM=SUBSTR(STREAM,1,LENGTH(STREAM)-1);
  NAKED=0; END; IF INDBBL=0 THEN DO; STREAM=STREAM××WORK; IF SUBSTR(WORK
 ,LENGTH(WORK),1)=BLANK THEN NAKED=1;ELSE NAKED=0; RETURN; END; DO I=IND
 BBL+2 TO LENGTH(WORK); IF SUBSTR(WORK,I,1) ^= ' ' THEN DO; STREAM=STREA
 M××SUBSTR(WORK,1,INDBBL); NAKED=1; WORK=SUBSTR(WORK,I); GO TO SINDBBL;
 END; END; STREAM=STREAM××SUBSTR(WORK,1,INDBBL);NAKED=1; END DEBLANK; ON
  ENDFILE (SYSIN) BEGIN; LEND=1; IF NAKED=1 THEN STREAM=SUBSTR(STREAM,1,
 LENGTH(STREAM)-1); GO TO SINSEMI; END; ON ENDPAGE(SYSPRINT) BEGIN; NPAG
 E=NPAGE+1; PUT FILE(SYSPRINT)PAGE EDIT ('PAGE ',NPAGE)(COLUMN(100),A,F(
 5)); END; DCL (CODE, SEQNO,SKIP) BINARY FIXED INIT(0); DCL STREAM CHAR(
 1024)VARYING INIT(' '),WORK CHAR(800) VARYING, (CARD VARYING,OUTCARD)CH
 AR(80); DCL (STACKUP(50),TLABEL)CHAR(31),BLANK CHAR(1) INIT(' '); DCL L
 EVELD(50); DCL SLABEL(6) LABEL INIT(SEMI,QUOTE,COMMENT,COLON,THEN,ELSE)
 ; DCL VCHAR(4) CHAR(6) VARYING INIT(';','''','/*',':'); DCL INDICES(5)
 INIT(0,0,0,0,0); OPEN FILE(SYSPRINT) PAGESIZE(59); LEND,LEVEL,NAKED=0;
 INSET=3; NPAGE,LS=1;INSTART,IBST=2; OUTCARD=BLANK; INBATCH=1; GO TO SIN
 SEMI; SOLS: INBATCH,LABEL=0; SIFINS: IF INSTART>257 THEN IF LEND=0 THEN
  DO; INBATCH= 1; DO I=1 TO 5;IF INDICES(I)^=0 THEN INDICES(I)=INDICES(I
 )-256;END; INSTART=INSTART-256; STREAM=SUBSTR(STREAM,257); LS=LS-256; I
 BST=LS+1;GO TO SIFINS; END; SINSEMI:IF LS < 950 & LEND=0 THEN DO; GET F
 ILE(SYSIN) EDIT(CARD) (X(1),A(79)); CARD=SUBSTR(CARD,1,71); IF SKIP=0 T
 HEN SIFSKIP: DO; INQUOT=INDEX(CARD,VCHAR(2)); INSLAS=INDEX(CARD,VCHAR(3
 )); IF INSLAS=0 & INQUOT=0 THEN DO; WORK=CARD;CALL DEBLANK; END; ELSE D
 O;IF(INSLAS^=0 & INQUOT ^= 0)THEN IF INSLAS < INQUOT THEN GO TO SDOSKP2
 ; ELSE GO TO SDOSKP1; IF INSLAS^=0 THEN SDOSKP2: DO; SKIP=2; WORK= SUBS
 TR(CARD,1,INSLAS+1); CARD=SUBSTR(CARD,INSLAS+2); CALL DEBLANK;GOTO SIFS
 KP2; END; IF INQUOT ^= 0 THEN SDOSKP1: DO; SKIP=1; WORK= SUBSTR(CARD,1,
 INQUOT); CARD=SUBSTR(CARD,INQUOT+1); CALL DEBLANK; END; END; END; IF SK
 IP=2 THEN SIFSKP2:DO; INSLAS=INDEX(CARD,'*/'); IF INSLAS=0 THEN DO; WOR
 K=CARD; CALL DEBLANK; END; ELSE DO;WORK=SUBSTR(CARD,1,INSLAS+1); CALL D
 EBLANK; CARD=SUBSTR(CARD,INSLAS+2); SKIP=0;GO TO SIFSKIP; END; END; IF
 SKIP=1 THEN DO; INQUOT=INDEX(CARD,VCHAR(2)); IF INQUOT=0 THEN STREAM=ST
 REAM××CARD; ELSE DO; STREAM=STREAM××SUBSTR(CARD,1,INQUOT); CARD= SUBSTR
 (CARD,INQUOT+1); SKIP=0; GO TO SIFSKIP; END; END; LS=LENGTH(STREAM); GO
  TO SINSEMI; END; IF CODE >= 2 THEN DO; IF INDICES(5)=0 & INBATCH>0 THE
 N DO; INDICES(5)=INDEX(SUBSTR(STREAM,IBST),'$'); IF INDICES(5)^=0 THEN
 INDICES(5)=INDICES(5)+IBST-1; END; SIFINPA:IF INDICES(5)>0 & INDICES(5)
 -INSTART<71 THEN IF SUBSTR(STREAM,INDICES(5)+4,1) = '$' THEN DO; SEQNO=
 SEQNO+1; SUBSTR(OUTCARD,2,INDICES(5)-INSTART-1)=SUBSTR(STREAM,INSTART,I
 NDICES(5)-INSTART-1); PUT STRING(SUBSTR(OUTCARD,73,8))EDIT(LEVEL,SEQNO)
 (F(3),F(5)); IF MOD(CODE,2)=1 THEN PUT FILE(SYSPNCH)EDIT(OUTCARD)(A(80)
 ); PUT FILE(SYSPRINT) SKIP EDIT (OUTCARD)(COLUMN(30),A(80)); OUTCARD=BL
 ANK; INSTART=INDICES(5); SMINJ: GET STRING(SUBSTR(STREAM,INSTART+1,3))E
 DIT(CODE,INSET)(F(1),X(1),F(1)); IF CODE < 4 THEN DO; SEQNO=0; PUT FILE
 (SYSPRINT) PAGE; END; ELSE CODE=MOD(CODE,4); INSTART=INSTART+5; IF CODE
 >=2 THEN DO; MINJ=INDEX(SUBSTR(STREAM,INSTART),'$'); IF MINJ^=0 THEN IN
 DICES(5)=INSTART+MINJ-1; ELSE INDICES(5)=0; END; ELSE INDICES=1; GO TO
 SIFINS; END; ELSE DO; MINJ=INDEX(SUBSTR(STREAM,INDICES(5)+1),'$'); IF M
 INJ^=0 THEN INDICES(5)=INDICES(5)+MINJ; ELSE INDICES(5)=0; GO TO SIFINP
 A;END; ELSE DO; LNGTH=MIN(71,LS-INSTART+1); SUBSTR(OUTCARD,2,LNGTH)= SU
 BSTR(STREAM,INSTART,LNGTH); INSTART=INSTART+LNGTH; END; SEQNO=SEQNO+1;
 GO TO SPUT; END; IF SUBSTR(STREAM,INSTART,1)=BLANK THEN INSTART=INSTART
 +1; IF SUBSTR(STREAM,INSTART,1)='$' THEN IF SUBSTR(STREAM,INSTART+4,1)=
 '$' THEN GO TO SMINJ; INSEARCH=INSTART; SDEC: SINSLAS: MINI=LS; IF SUBS
 TR(STREAM,INSTART,1)=BLANK THEN INSTART=INSTART+1; DO I=1 TO 4; IF INDI
 CES(I)=0 THEN IF INBATCH>0 THEN DO; MINJ=INDEX(SUBSTR(STREAM,IBST-1 ),V
 CHAR(I)); IF MINJ>0 THEN INDICES(I)=IBST+MINJ-2 ;END; ELSE; ELSE IF IND
 ICES(I)<INSEARCH THEN DO; INDICES(I)=INDEX(SUBSTR(STREAM,INSEARCH),VCHA
 R(I)); IF INDICES(I)^=0 THEN INDICES(I)=INDICES(I)+INSEARCH-1; END; IF
 INDICES(I)>0 THEN MINI=MIN(MINI,INDICES(I)); IF MINI=INDICES(I) THEN IM
 IN=I; END; IF IMIN=1 THEN IF SUBSTR(STREAM,MINI -1,1)^=BLANK THEN DO; S
 UBSTR(STREAM,INSTART-1,MINI-INSTART+1)=SUBSTR(STREAM,INSTART, MINI-INST
 ART)××BLANK; INSTART=INSTART-1; END; IF IMIN=1 × IMIN=4 THEN DO; IF SUB
 STR(STREAM,INSTART,2)='IF' THEN IF INDICES(4)-INSTART>3×INDICES(4)=0 TH
 EN DO; WORK=SUBSTR(STREAM, INSTART+2,1); IF WORK=BLANK × WORK='(' × WOR
 K=VCHAR(2) THEN IMIN=5; END; IF SUBSTR(STREAM,INSTART,5)='ELSE ' THEN I
 F INDICES(4)-INSTART > 5 × INDICES(4)=0 THEN IMIN=6; END; IF MINI=LS TH
 EN DO; PUT FILE(SYSPRINT) SKIP EDIT ('HELP: NO  DELIMITERS EXIST IN STR
 EAM')(A); GO TO END; END; GO TO SLABEL(IMIN); SEMI: WORK = SUBSTR(STREA
 M,INSTART,MINI-INSTART+1); INSTART=MINI+1; ISQUOTE=0; GO TO SIFMIN;QUOT
 E: MINJ=INDEX(SUBSTR(STREAM,MINI+1),VCHAR(2)); /*UNBALANCED QUOTES (')
 IN A COMMENT SHOULD BE O.K. */ MINI =MINI+MINJ; INSEARCH=MINI+1; ISQUOT
 E=1; GO TO SDEC; COMMENT:INSLASC=INDEX(SUBSTR(STREAM,INSTART),'*/')+INS
 TART-1; IF LABEL=1 THEN GO TO SLABELP; IF INSLASC<INSTART THEN DO; PUT
 FILE (SYSPRINT) SKIP EDIT ('HELP: NO COMMENT CLOSURE IS PRESENT IN STRE
 AM')(A); GO TO END; END; IF SUBSTR(STREAM,MINI-1,1)^=BLANK/*TESTING THI
 S FEATURE*/THEN DO; SUBSTR(STREAM,INSTART-1,MINI-INSTART+1)=SUBSTR(STRE
 AM,INSTART, MINI-INSTART)××BLANK; INSTART=INSTART-1; END; IF SUBSTR(STR
 EAM,INSLASC+2,1)=BLANK THEN J=3; ELSE J=2; LW=INSLASC-MINI +J; WORK=SUB
 STR(STREAM,MINI ,LW); SUBSTR(STREAM,LW +INSTART,MINI-INSTART)=SUBSTR (S
 TREAM,INSTART,MINI-INSTART); INSTART=LW +INSTART; DO I=1 TO 4 ; IF INDI
 CES(I)<INSLASC & INDICES(I)>0 THEN INDICES(I)=1; END; NOFFSET=2; GO TO
 SLNGTH; COLON: IF SUBSTR(STREAM,INSTART,4)='DCL ' × SUBSTR(STREAM,INSTA
 RT,8) ='DECLARE ' THEN DO; INSEARCH=MINI+1; GO TO SDEC; END; IF MINI-IN
 START>31 THEN DO; WORK=SUBSTR(STREAM,INSTART,MINI-INSTART+1); LW=LENGTH
 (WORK); INSTART=MINI+1; NOFFSET=2; GO TO SLNGTH; END; IF LABEL=1 THEN D
 O; SLABELP: LABEL=2;GOTO SPUT; END; SUBSTR(OUTCARD,2,MINI-INSTART+1)=SU
 BSTR(STREAM,INSTART,MINI-INSTART+1); TLABEL=SUBSTR(STREAM,INSTART,MINI-
 INSTART); IF MINI-INSTART+1>9 THEN DO;INSTART,INSEARCH=MINI+1;GO TO SLA
 BELP;END; LABEL=1; INSEARCH,INSTART=MINI+1; GO TO SDEC ; THEN: INSEARCH
 =INSTART; SINTHEN:INTHEN=INDEX(SUBSTR(STREAM,INSEARCH),'THEN ')+INSEARC
 H-1; WORK=SUBSTR(STREAM,INTHEN-1,1); IF WORK=BLANK × WORK=')' × WORK =
 VCHAR(2)THEN INTHEN=INTHEN-1; ELSE DO; INSEARCH=INTHEN+5; GO TO SINTHEN
 ; END; IF ISQUOTE>0 THEN DO; INQUOT=INDEX(SUBSTR(STREAM,INSEARCH),VCHAR
 (2)); IF INQUOT>0 THEN DO; INQUOT=INQUOT+INSEARCH-1; MINJ=MIN(INTHEN,IN
 QUOT); IF MINJ=INQUOT THEN DO; MINJ=INDEX(SUBSTR(STREAM,INQUOT+1),VCHAR
 (2))+INQUOT; IF MINJ>INTHEN THEN DO; INSEARCH=MINJ+1; GO TO SINTHEN; EN
 D; END; END; END; WORK=SUBSTR(STREAM,INSTART,INTHEN-INSTART+5); INSTART
 =INTHEN+6; GO TO SIFMIN; ELSE: SEQNO=SEQNO-1; SIFLVL: IF LEVELD(LEVEL)=
 1 THEN DO; LEVELD(LEVEL)=0; LEVEL=LEVEL-1; GO TO SIFLVL; END; LEVELD(LE
 VEL)=2; INSTART=INSTART+5; WORK='ELSE '; LW=5; GO TO SNOFFS; SIFMIN: LW
 =LENGTH(WORK); IF LEVEL>0 THEN DO; IF LEVELD(LEVEL)=4 THEN LEVELD(LEVEL
 )=3; ELSE IF LEVELD(LEVEL)=2 THEN LEVELD(LEVEL)=1; ELSE SELSEIF:IF LEVE
 LD(LEVEL)>0 THEN DO; LEVELD(LEVEL)=0; LEVEL=LEVEL-1; GO TO SELSEIF; END
 ; END; IF IMIN=5 THEN DO; LEVEL=LEVEL+1;STACKUP(LEVEL)=BLANK ;LEVELD(LE
 VEL)=4;GO TO SNOFFS; END; IF LW >4 THEN IF SUBSTR(WORK,1,4)='END ' THEN
  DO;INSEMI=INDEX(WORK,VCHAR(1)); IF INSEMI>5 THEN DO J=LEVEL TO 1 BY -1
 ;IF STACKUP(J) =SUBSTR(WORK,5,INSEMI-5) THEN DO; LEVEL=J; LEVELD(J)=1;
 GO TO SNOFFS; END; IF LEVELD(J)=0 THEN SEQNO=SEQNO+1; END; LEVELD(LEVEL
 )=1; GO TO SNOFFS ; END; IF LW >10 THEN IF SUBSTR(WORK,1,10)='PROCEDURE
  ' THEN GO TO SPROC; IF LW >5 THEN IF SUBSTR(WORK,1,5)='PROC ' THEN GO
 TO SPROC; IF LW >3 THEN IF'DO ' = SUBSTR(WORK,1,3)THEN GO TO SPROC; IF
 LW >6 THEN IF SUBSTR(WORK,1,6)='BEGIN ' THEN SPROC: DO; LEVEL=LEVEL+1;
 LEVELD(LEVEL)=0; IF MOD(LABEL,2)=1 THEN STACKUP(LEVEL)=TLABEL; ELSE STA
 CKUP(LEVEL)=BLANK; GO TO SNOFFS; END; IF LW >3 THEN IF SUBSTR(WORK ,1,3
 )='ON ' THEN DO; INBEGIN=INDEX(WORK,' BEGIN ;'); IF INBEGIN>0 THEN IF S
 UBSTR(WORK,INBEGIN-2,2)^='TO' THEN /* A USER-DEFINED CONDITION ENDING I
 N 'TO' WILL SCREW THIS UP */ DO; INSTART=INSTART-7; WORK=SUBSTR(WORK,1,
 INBEGIN-1); LW=LW-8; GO TO SNOFFS; END; INBL=INDEX(SUBSTR(STREAM,INSTAR
 T+3),BLANK)+INSTART-1; IF INBL=MINI-1 THEN; ELSE IF SUBSTR(STREAM,MINI-
 7,7)='SYSTEM ' THEN; ELSE IF SUBSTR(STREAM,MINI-5,5)='SNAP ' THEN; ELSE
  SEQNO=SEQNO+1; END; SNOFFS: NOFFSET = INSET*LEVEL+10; IF NOFFSET>40 TH
 EN NOFFSET=MOD(NOFFSET-40,25)+15; SEQNO=SEQNO+1; SLNGTH: LNGTH=MIN(73-N
 OFFSET,LW); SUBSTR(OUTCARD,NOFFSET,LNGTH)=SUBSTR(WORK,1,LNGTH); IF LW =
 LNGTH THEN; ELSE WORK=SUBSTR(WORK,LNGTH+1); SPUT: PUT STRING(SUBSTR(OUT
 CARD,73,8))EDIT(LEVEL,SEQNO)(F(3),F(5)); IF MOD(CODE,2)=1 THEN DO; NOFF
 SET=2; PUT FILE(SYSPNCH)EDIT(OUTCARD)(A(80));DCL SYSPNCH FILE OUTPUT; E
 ND; PUT FILE(SYSPRINT) SKIP EDIT (OUTCARD)(COLUMN(30),A(80)); OUTCARD=B
 LANK; IF LABEL=2 THEN DO; LABEL=3; GO TO SINSLAS; END; LW=LW-LNGTH; IF
 LW>0 THEN GO TO SLNGTH; IF LEVELD(LEVEL)=1 THEN DO; LEVELD(LEVEL)=0;LEV
 EL=LEVEL-1; END; IF LS > INSTART THEN GO TO SOLS; END: END NEATER;

