***********************************************************************
* COPYRIGHT 1983 BY THOMAS GLEN SMITH                                 *
*                                                                     *
* PERMISSION TO MAKE PRIVATE COPIES OF THIS PROGRAM AND TO USE IT     *
* FREELY IS HEREBY GRANTED BY THE AUTHOR.  THIS PROGRAM MAY NOT BE    *
* SOLD, NOR ANY SECTION OF IT BE INCORPORATED INTO ANY WORK FOR SALE  *
* WITHOUT PERMISSION OF THE AUTHOR.                                   *
*                                                                     *
***********************************************************************
         GBLC  &COMP
&COMP SETC 'O'
         AIF   ('&SYSPARM' NE 'SUFFIX').CKPREFX
*$.HE GENERALIZED SUBROUTINES - SUFFIX
*$.HE FIND LAST CHAR IN A NOT IN B
*$.PL 55
*$.PN 0
*$.PA
*$.SS
*$.NF
*$6/19/74
*$AUTHOR:  T. SMITH
*$SOURCE MODULE NAME:  DECAT
*$DOCUMENTATION ID:  *$
*$.FI L
*$.SP 5
*$THIS SUBROUTINE FINDS THE LAST CHARACTER IN A STRING (SOURCE)
*$WHICH IS NOT A CHARACTER IN ANOTHER STRING (TOKEN).
*$.SP 1
*$CALL SUFFIX(SOURCE,TOKENS,OFFSET);
*$.SP 1
*$.CE 1
*$DEFINITION OF TERMS
*$.SP 1
*$OFFSET FIXED BIN(15,0)
*$.IN 5
*$WILL BE SET TO THE OFFSET (RELATIVE 1) OF THE LAST CHARACTER
*$IN SOURCE WHICH IS NOT CONTAINED IN TOKEN.
*$.IN 0
*$SOURCE CHAR(*)
*$.IN 5
*$THIS IS THE CHARACTER STRING TO BE EXAMINED FOR OCCURRENCES
*$OF CHARACTERS IN TOKENS.
*$CURRENT IMPLEMENTATION RESTRICTS SOURCE TO LE 256 CHARACTERS.
*$.IN 0
*$TOKENS CHAR(*)
*$.IN 5
*$THIS CHARACTER STRING CONTAINS THE TOKENS TO BE SCANNED FOR
*$AT THE END OF SOURCE.  STARTING AT THE END OF SOURCE, EACH
*$CHARACTER IS EXAMINED TO DETERMINE IF IT MATCHES A CHARACTER
*$IN TOKENS.  IF IT MATCHES, THE PRECEDING CHARACTER IS TESTED
*$UNTIL ONE IS FOUND THAT DOESN'T MATCH, AND THE OFFSET OF THAT
*$CHARACTER (RELATIVE 1) IS PLACED IN OFFSET.  IF ALL
*$CHARACTERS MATCH, OFFSET IS SET TO ZERO.
*$CURRENT IMPLEMENTATION RESTRICTS TOKENS TO LE 256 CHARACTERS.
         AGO   .GENCODE
.CKPREFX ANOP
*#.HE GENERALIZED SUBROUTINES - PREFIX
*#.HE FIND THE FIRST CHAR IN A NOT IN B
*#.PL 55
*#.PN 0
*#.PA
*#.SS
*#.NF
*#6/19/74
*#AUTHOR:  T. SMITH
*#SOURCE MODULE NAME:  DECAT
*#DOCUMENTATION ID:  *#
*#.FI L
*#.SP 5
*#THIS SUBROUTINE FINDS THE FIRST CHARACTER IN A STRING (SOURCE)
*#WHICH IS NOT A CHARACTER IN ANOTHER STRING (TOKEN).
*#.SP 1
*#CALL PREFIX(SOURCE,TOKENS,OFFSET);
*#.SP 1
*#.CE 1
*#DEFINITION OF TERMS
*#.SP 1
*#OFFSET FIXED BIN(15,0)
*#.IN 5
*#WILL BE SET TO THE OFFSET (RELATIVE 1) OF THE FIRST CHARACTER
*#IN SOURCE WHICH IS NOT CONTAINED IN TOKEN.
*#.IN 0
*#SOURCE CHAR(*)
*#.IN 5
*#THIS IS THE CHARACTER STRING TO BE EXAMINED FOR OCCURRENCES
*#OF CHARACTERS IN TOKENS.
*#CURRENT IMPLEMENTATION RESTRICTS SOURCE TO LE 256 CHARACTERS.
*#.IN 0
*#TOKENS CHAR(*)
*#.IN 5
*#THIS CHARACTER STRING CONTAINS THE TOKENS TO BE SCANNED FOR
*#IN SOURCE.  STARTING AT THE FRONT OF SOURCE, EACH
*#CHARACTER IS EXAMINED TO DETERMINE IF IT MATCHES A CHARACTER
*#IN TOKENS.  IF IT MATCHES, THE NEXT CHARACTER IS TESTED
*#UNTIL ONE IS FOUND THAT DOESN'T MATCH, AND THE OFFSET OF THAT
*#CHARACTER (RELATIVE 1) IS PLACED IN OFFSET.  IF ALL
*#CHARACTERS MATCH, OFFSET IS SET TO ZERO.
*#CURRENT IMPLEMENTATION RESTRICTS SOURCE TO LE 256 CHARACTERS.
         AGO   .GENCODE
*@.HE GENERALIZED SUBROUTINES - DECAT
*@.HE FIND FIRST CHAR IN A ALSO IN B
*@.PL 55
*@.PN 0
*@.PA
*@.SS
*@.NF
*@6/19/74
*@AUTHOR:  T. SMITH
*@SOURCE MODULE NAME:  DECAT
*@DOCUMENTATION ID:  *@
*@.FI L
*@.SP 5
*@THIS SUBROUTINE FINDS THE FIRST CHARACTER IN A STRING (SOURCE)
*@WHICH IS ALSO A CHARACTER IN ANOTHER STRING (TOKEN).
*@.SP 1
*@CALL DECAT(SOURCE,TOKENS,OFFSET);
*@.SP 1
*@.CE 1
*@DEFINITION OF TERMS
*@.SP 1
*@OFFSET FIXED BIN(15,0)
*@.IN 5
*@WILL BE SET TO THE OFFSET (RELATIVE 1) OF THE FIRST CHARACTER
*@IN SOURCE WHICH IS ALSO CONTAINED IN TOKEN.
*@IF NONE OF THE CHARACTERS IN TOKENS IS FOUND, OFFSET IS SET TO
*@ZERO.
*@.IN 0
*@SOURCE CHAR(*)
*@.IN 5
*@THIS IS THE CHARACTER STRING TO BE EXAMINED FOR OCCURRENCES
*@OF CHARACTERS IN TOKENS.
*@CURRENT IMPLEMENTATION RESTRICTS SOURCE TO LE 256 CHARACTERS.
*@.IN 0
*@TOKENS CHAR(*)
*@.IN 5
*@THIS CHARACTER STRING CONTAINS THE TOKENS TO BE SCANNED FOR
*@IN SOURCE.  STARTING AT THE FRONT OF SOURCE, EACH
*@CHARACTER IS EXAMINED TO DETERMINE IF IT MATCHES A CHARACTER
*@IN TOKENS.  IF NO MATCH, THE NEXT CHARACTER IS TESTED
*@UNTIL ONE IS FOUND THAT MATCHES, AND THE OFFSET OF THAT
*@CHARACTER (RELATIVE 1) IS PLACED IN OFFSET.  IF NO
*@CHARACTERS MATCH, OFFSET IS SET TO ZERO.
*@CURRENT IMPLEMENTATION RESTRICTS TOKENS TO LE 256 CHARACTERS.
.GENCODE ANOP
&SYSPARM PLIENTRY ,DSA=400
         LM    R2,R4,0(R1)
         SR    R0,R0
         STH   R0,0(R4)                CLEAR OFFSET
         L     R5,0(R2)
         L     R6,0(R3)
         AIF   ('&COMP' EQ 'F').FOPT
*
*SDV FORMAT
*********************
*IF VARYING, BYTE ADDRESS OF HALFWORD CURLEN FOLLOWED BY STRING
*IF FIXED, BYTE ADDRESS OF STRING
*********************
*MAXLEN - 2 BYTES
*********************
*X'80' IF VARYING
*********************
         LH    R7,4(R2)
         TM    6(R2),X'80'             IS IT VARYING
         BC    8,SORFIXED              BR IF FIXED
         LH    R7,0(R5)
         LA    R5,2(R5)
SORFIXED DS    0H
         LH    R8,4(R3)
         TM    6(R3),X'80'             IS IT VARYING
         BC    8,TOKFIXED              BR IF FIXED
         LH    R8,0(R6)
         LA    R6,2(R6)
TOKFIXED DS    0H
         AGO   .BYF
.FOPT    ANOP
*
*SDV FORMAT
*********************
*BYTE ADDRESS OF STRING - 1 WORD
******************
*MAXLEN - 2 BYTES
*******************
*CURLEN - 2 BYTES
*******************
         LH    R7,6(R2)
         LH    R8,6(R3)
.BYF     ANOP
*                                      R2=A(SDV(SOURCE))
*                                      R3=A(SDV(TOKENS))
*                                      R4=A(OFFSET)
*                                      R5=A(SOURCE)
*                                      R6=A(TOKENS)
*                                      R7=LEN(SOURCE)
*                                      R8=LEN(TOKENS)
         LA    R5,0(R5)                CLEAR HI-BYTE
         AIF   ('&SYSPARM' EQ 'DECAT').DOXC
         MVI   TRTAB,X'FF'
         MVC   TRTAB+1(255),TRTAB
         AIF   ('&SYSPARM' EQ 'PREFIX').INITPFX
         LA    RB,0(R7,R5)
         BCTR  RB,0                    RB=A(LAST BYTE IN SOURCE)
         AGO   .INITPFX
.DOXC    ANOP
         XC    TRTAB,TRTAB
.INITPFX ANOP
         SR    R9,R9
TOKENLP  DS    0H
         IC    R9,0(R6)                R9=NEXT TOKEN
         LA    R1,TRTAB(R9)
         AIF   ('&SYSPARM' EQ 'DECAT').DOSTC
         NI    0(R1),X'00'             SET TRTAB
         AGO   .BYSTC
.DOSTC   ANOP
         STC   R9,0(R1)
.BYSTC   ANOP
         LA    R6,1(R6)
         BCT   R8,TOKENLP
         SR    R1,R1
         AIF   ('&SYSPARM' EQ 'SUFFIX').DOSUF
         CH    R7,=H'256'              IS LENGTH<=256?
         BC    12,DOEX                 BR IF YES
         LA    RB,0(R5)                RB=A(SOURCE)
PRELOOP  DS    0H                      DO IT THE LONG WAY
         TRT   0(1,RB),TRTAB
         BC    7,GOTHIT
         LA    RB,1(RB)
         BCT   R7,PRELOOP
         B     EXIT
DOEX     DS    0H
         BCTR  R7,0                    GET SET FOR EX
         SR    R1,R1
         EX    R7,TRTINSTR
         BC    8,EXIT
         AGO   .EXIT
.DOSUF   ANOP
SUFLOOP  DS    0H
         TRT   0(1,RB),TRTAB
         BC    7,GOTHIT
         BCTR  RB,0
         BCT   R7,SUFLOOP
         B     EXIT
.EXIT    ANOP
GOTHIT   DS    0H
         SR    R1,R5
         LA    R1,1(R1)                MAKE RELATIVE 1
         STH   R1,0(R4)                SET OFFSET
EXIT     DS    0H
         PLIEXIT
TRTINSTR TRT   0(0,R5),TRTAB
         LTORG
DSA      DSECT
TRTAB    DS    CL256
         END
