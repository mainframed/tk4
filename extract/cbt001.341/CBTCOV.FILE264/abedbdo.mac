 /* COPYRIGHT 1985 BY THOMAS GLEN SMITH */
 /**********************************************************************
 *                                                                     *
 * ABEDBDO IS CALLED BY ABEC TO PROCESS A LINE OF DATA ENTERED ON      *
 * THE DISPLAY WHEN RH_DISPLAY_HDR IS NOT NULL.  ST AND EN INDICATE    *
 * THE COLUMNS OF THE CONCEPTUAL DISPLAY LINE                          *
 * INTO WHICH DATA CONVERTED FROM THE RECORD POINTED                   *
 * TO BY SAVPTR IS TO BE STORED, ACCORDING TO THE LIST POINTED TO BY   *
 * RH_DISPLAY_HDR.                                                     *
 *                                                                     *
 **********************************************************************/
   %INCLUDE ABESUB;
 ABESUB(ABEDBDO) PARMS(RHHDRPT,RHPTR,SAVPTR,ST,EN) CHECK(YES)
   RETURNS(CHAR(256) VAR);
   %INCLUDE ABESUBA;

 DCL HEX ENTRY(CHAR(*)) RETURNS(CHAR(32767) VAR);
   DCL SAVPTR PTR;
   DCL (ST,EN) FIXED BIN(15,0);

   IF RH_APL^=NULL & RH_DISPLAY_HDR^=NULL & RHUSEHD=NULL
     THEN RETURN(APL);
     ELSE RETURN(RQL);

 APL: PROC RETURNS(CHAR(256) VAR);
   DCL 1 MYUSE,
   %INCLUDE ABERHN;
   %INCLUDE APLCB;

   DCL (ILP,OLP) PTR;
   DCL 1 OUTBUF,
     2 OBUFLN FIXED BIN(15,0) INIT(256),
     2 OUTDATA CHAR(256) VAR;
   DCL MYDATA CHAR(256) VAR;
   DCL IPOS FIXED BIN(15,0) BASED(IPOSPTR);
   DCL OPOS FIXED BIN(15,0) BASED(OPOSPTR);
   DCL ILNG FIXED BIN(15,0) BASED(ILNGPTR);
   DCL OLNG FIXED BIN(15,0) BASED(OLNGPTR);

   OUTDATA=REPEAT(' ',EN-ST);
   OLP=RH_DISPLAY_HDR;
   ILP=ADDR(MYUSE);
   ILP->RHNAMESTR=OLP->RHNAMESTR;
   ILP->RHNAMESTR.RHNTYPE=RH_APL_TYPE;
   ILP->RHNAMESTR.RHNNAME='ELEMENT';
   IPOSPTR=ADDR(ILP->RHNAMESTR.RHNPOS);
   OPOSPTR=ADDR(OLP->RHNAMESTR.RHNPOS);
   ILNGPTR=ADDR(ILP->RHNAMESTR.RHNLNG);
   OLNGPTR=ADDR(OLP->RHNAMESTR.RHNLNG);
   ILNG=RH_APL_ELEN;

   OPOS=FIXED((ST-1)/OLNG)*OLNG+1;
   IF OPOS<ST
     THEN OPOS=OPOS+OLNG;
   ELNO=FIXED((OPOS-1)/OLNG)+1;
   IPOS=(ELNO-1)*ILNG+1;
   DO WHILE(OPOS<=EN & ELNO<=RH_APL_ELCOUNT);
     MYDATA=#CONVERT(#GETFIELD(ILP,ADDR(SAVPTR->RECLEN)),ILP,OLP);
     IF LENGTH(MYDATA)=0
       THEN MYDATA=#GET_MISSING(OLP);
     CALL #ABEINS(MYDATA,ADDR(OUTBUF),OPOS-ST+1,OLNG);
     OPOS=OPOS+OLNG;
     IPOS=IPOS+ILNG;
     ELNO=ELNO+1;
     END;
   RETURN(OUTDATA);
   END APL;

 RQL: PROC RETURNS(CHAR(256) VAR);
   DCL (OLP,ILP) PTR;
   DCL 1 OUTBUF,
     2 OBUFLN FIXED BIN(15,0) INIT(256),
     2 OUTDATA CHAR(256) VAR;
   DCL MYDATA CHAR(256) VAR;

   OUTDATA=REPEAT(' ',EN-ST);
   DO OLP=RH_DISPLAY_HDR REPEAT OLP->RHNLINK WHILE(OLP^=NULL);
     IF OLP->RHNPOS>=ST & OLP->RHNPOS<=EN
       THEN DO; /* THIS ELEMENT IN RANGE */
         DO ILP=RHUSEHD REPEAT ILP->RHNLINK WHILE(ILP^=NULL)
           UNTIL(ILP->RHNNAME=OLP->RHNNAME);
           END;
         IF ILP=NULL
           THEN MYDATA='';
           ELSE  /* HAVE BOTH INPUT AND OUTPUT ELEMENTS */
             MYDATA=#CONVERT(#GETFIELD(ILP,ADDR(SAVPTR->RECLEN)),
               ILP,OLP);
         IF LENGTH(MYDATA)=0
           THEN MYDATA=#GET_MISSING(OLP);
         CALL #ABEINS(MYDATA,ADDR(OUTBUF),OLP->RHNPOS-ST+1,OLP->RHNLNG);
         END;
     END;
   RETURN(OUTDATA);
   END RQL;

   END ABEDBDO;
