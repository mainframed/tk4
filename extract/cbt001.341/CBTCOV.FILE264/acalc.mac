 /* ACALC - FOR USE UNDER ISPF */
 ACALC: PROC OPTIONS(MAIN);
   % INCLUDE @DCL;
   @DCL (OPERANDS,A) TYPE(CHARACTER) MAX(8);
   DCL PLIXOPT CHAR(80) VAR INIT('ISA(300K) ') STATIC EXT;
   DFT RANGE(*) FIXED BIN VALUE(FIXED BIN(31,0));
   DCL ISPLINK ENTRY EXTERNAL OPTIONS(ASM,INTER,RETCODE);
   DCL (PLIRETV,ONSOURCE) BUILTIN;
   DCL 1 PARMS STATIC,
     2 NAMES CHAR(100) INIT(
       '(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R)'),
     2 TABLE(18) CHAR(50) INIT((18)(1)' '),
     2 LEN FIXED BIN(31,0) INIT(50),
     2 ZCMDNAME CHAR(20) INIT('(ZCMD)'),
     2 ZCMD CHAR(80),
     2 LEN80 FIXED BIN(31,0) INIT(80),
     2 NRESULTS CHAR(100) INIT(
     '(ANS,AR,BR,CR,DR,ER,FR,GR,HR,IR,JR,KR,LR,MR,NR,OR,PR,QR,RR,SUM)'),
     2 RESULTS(0:19) CHAR(21) INIT((20)(1)' '),
     2 LENR FIXED BIN(31,0) INIT(21);
   DCL (VCNT,VIX) FIXED BIN STATIC INIT(18);
   DCL ANSIX FIXED BIN STATIC INIT(0);
   DCL SUMIX FIXED BIN STATIC INIT(19);
   DCL NAMECON CHAR(26) VAR STATIC INIT('ABCDEFGHIJKLMNOPQR');
   DCL FTABLE(0:19) DEC FLOAT(16) INIT((20)0);
   DCL CMDDATA CHAR(256) VAR;
   DCL CALCEVA ENTRY;
   DCL (PREFIX,SUFFIX) ENTRY(CHAR(*),CHAR(*))
     RETURNS(FIXED BIN(15,0));
   DCL CALCPRT ENTRY(DEC FLOAT(16))
     RETURNS(CHAR(80) VAR);
   DCL 1 TOKEN BASED(TOKPTR),
     2 PRIOR_TOKEN PTR,
     2 NEXT_TOKEN PTR,
     2 ELIX FIXED BIN(15,0),
     2 TYPE FIXED BIN(15,0),
     2 SUBTYPE FIXED BIN(15,0),
     2 TOKSTR CHAR(256) VAR;
   FETCH ISPLINK;
   CALL ISPLINK('VDEFINE ',NAMES,TABLE,'CHAR ',LEN);
   IF PLIRETV^=0
     THEN SIGNAL ERROR;
   CALL ISPLINK('VDEFINE ',NRESULTS,RESULTS,'CHAR ',LENR);
   IF PLIRETV^=0
     THEN SIGNAL ERROR;
   CALL ISPLINK('VDEFINE ',ZCMDNAME,ZCMD,'CHAR ',LEN80);
   IF PLIRETV^=0
     THEN SIGNAL ERROR;
   CMDDATA='CALC';
   CALL CALCEVA(PROMPT,WRITE,GET_OPERAND,GET_OPERAND_CHAR,
     PUT_OPERAND,ODD_FUNCTION);
 ODD_FUNCTION: PROC(MSG,PRMPTR,PARMCNT,OP) RETURNS(DEC FLOAT(16));
 /**********************************************************************
 * CALLED TO RESOLVE UNIDENTIFIED FUNCTIONS.                           *
 **********************************************************************/
   DCL MSG CHAR(80) VAR;
   DCL PRMPTR PTR;
   DCL PARMCNT FIXED BIN(15,0);
   DCL OP(*) DEC FLOAT(16);
   MSG='UNIDENTIFIED FUNCTION = '××PRMSTR;
   SIGNAL CONDITION(BADEXP);
   RETURN(0);
   END ODD_FUNCTION;
 PUT_OPERAND: PROC(PRMPTR,VALUE,MSG);
 /**********************************************************************
 * CALLED TO SET THE VALUE FOR AN OPERAND.                             *
 **********************************************************************/
   DCL PRMPTR PTR CONTROLLED;
   DCL VALUE FLOAT DEC(16),
       VALCH CHAR(8) DEF VALUE;
   DCL MSG CHAR(80) VAR;
   DCL I FIXED BIN;
   CALL OPERANDS_ASSIGN(PRMPTR->TOKSTR,VALCH);
   IF LENGTH(PRMPTR->TOKSTR)=1
     THEN DO;
       I=INDEX(NAMECON,PRMPTR->TOKSTR);
       IF I^=0
         THEN FTABLE(I)=VALUE;
       END;
     ELSE IF PRMPTR->TOKSTR='ANS'
       THEN FTABLE(ANSIX)=VALUE;
   END PUT_OPERAND;
 GET_OPERAND: PROC(PRMPTR) RETURNS(FLOAT DEC(16));
 /**********************************************************************
 * CALLED TO RESOLVE THE VALUE FOR AN OPERAND REFERENCE.               *
 **********************************************************************/
   DCL PRMPTR PTR CONTROLLED;
   DCL VALUE FLOAT DEC(16),
       VALCH CHAR(8) DEF VALUE;
   IF OPERANDS_NULL(PRMPTR->TOKSTR)
     THEN VALUE=0;
     ELSE VALCH=OPERANDS_REFER(PRMPTR->TOKSTR);
   RETURN(VALUE);
   END GET_OPERAND;
 GET_OPERAND_CHAR: PROC(PRMPTR) RETURNS(CHAR(256) VAR);
 /**********************************************************************
 * CALLED TO RESOLVE THE VALUE FOR AN OPERAND REFERENCE.               *
 **********************************************************************/
   DCL PRMPTR PTR CONTROLLED;
   DCL VALUE FLOAT DEC(16),
       VALCH CHAR(8) DEF VALUE;
   IF OPERANDS_NULL(PRMPTR->TOKSTR)
     THEN VALUE=0;
     ELSE VALCH=OPERANDS_REFER(PRMPTR->TOKSTR);
   RETURN(CALCPRT(VALUE));
   END GET_OPERAND_CHAR;
 PROMPT: PROC RETURNS(CHAR(256) VAR);
 /**********************************************************************
 * CALLED TO PROMPT FOR INPUT FROM THE TERMINAL.                       *
 **********************************************************************/
   DCL PRMPT CHAR(80) VAR STATIC INIT('CALC:');
   DCL SETCAPS ENTRY;
   DCL I FIXED BIN;
   DCL VAL DEC FLOAT(16),
       VALCH CHAR(8) DEF(VAL);
   IF VIX=VCNT
     THEN DO; /* TIME TO DISPLAY RESULTS */
       VIX=0;
       VAL=0;
       DO I=0 TO HBOUND(RESULTS,1)-1;
         IF RESULTS(I)=''
           THEN RESULTS(I)=CALCPRT(FTABLE(I));
         IF I>0
           THEN VAL=VAL+FTABLE(I);
         END;
       RESULTS(SUMIX)=CALCPRT(VAL);
       ZCMD='';
       CALL ISPLINK('DISPLAY ','ACALCP ');
       IF PLIRETV^=0
         THEN SIGNAL ERROR;
       RESULTS(*)='';
       IF ZCMD^=''
         THEN DO;
           CALL SETCAPS(ZCMD);
           RETURN('ANS#'××ZCMD);
           END;
       END;
   VIX=VIX+1;
   IF TABLE(VIX)='0'
     THEN TABLE(VIX)='';
   CALL SETCAPS(TABLE(VIX));
   IF TABLE(VIX)=''
     THEN RETURN(SUBSTR(NAMECON,VIX,1)××'#0');
     ELSE RETURN(SUBSTR(NAMECON,VIX,1)××'#'××TABLE(VIX));
   END PROMPT;
 WRITE:PROC(TMSG);
 /**********************************************************************
 * CALLED TO PRINT OUTPUT AT THE TERMINAL.                             *
 **********************************************************************/
   DCL TMSG CHAR(*) VAR;
   RESULTS(VIX)=TMSG;
   END WRITE;
   END;
