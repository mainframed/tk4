 /* SETUP */
         % INCLUDE CPINIT1;
         % @CMP = 'O';
         % INCLUDE CPINIT2;
         @PROC(1,PROC,LIB(LIBSUB#(DSNAME)),ALC);
         IF ALC^=0
              THEN DO;
                   @CMD('FREE FI(SYSLIB)');
  @CMD('ALLOC FI(SYSLIB) DA(''SYS2.PROCLIB'' ''SYS2.RJEPROC'') SHR');
                   DDNAME = 'SYSLIB';
                   END;
         IF SETDSN@(LIBSUB)^=''
              THEN DO;
                   @SETDSN(LIBSUB,,PROMPT);
                   @ALLOC(SHR);
                   DDNAME = DA08DDN;
                   END;
         DCL SORTSW BIT(1);
         DCL SERSAV CHAR(6);
         DCL VOLTAB(50) CHAR(6) INIT((50)(1)' ');
         DCL DSNAME CHAR(44);
         %INCLUDE CTLGDEF;
         DCL CVOL CHAR(6) INIT('SYSRES');
         DCL RETCODE FIXED BIN(31,0);
         DCL RETCODC CHAR(4) DEF RETCODE;
         DCL RET BIT(32) DEF RETCODE;
         DCL AREA CHAR(265);
         CTLGPTR=ADDR(AREA);
         DCL DUMPSTT ENTRY;
         DCL DDNAME CHAR(8) INIT('SYSLIB');
         DCL DCBPTR PTR;
         DCL MEMNAM CHAR(8) INIT(' ');
         DCL INREC CHAR(80);
         DCL 1 DCB2 BASED(DCBPTR),
              2 DCBPAD1 CHAR(36),
              2 DCBRECFM BIT(8),
              2 DCBPAD2 CHAR(45),
              2 DCBLRECL FIXED BIN(15,0);
         CALL SYSDCBP(DCBPTR,DDNAME);
         CALL SYSOPEN(DCBPTR,'INPUT');
 ON CONDITION(SYSEOD) GO TO EOD;
         MEMNAM = SYMC('&PROC');
         CALL SYSFIND(DCBPTR,MEMNAM,'D',RETCODE);
         IF RETCODE ^= 0
              THEN DO;
                   PUT EDIT('UNABLE TO FIND MEMBER')(A) SKIP(1);
                   SIGNAL ERROR;
                   END;
 NXTR:
         CALL NXTREC(INREC);
         I = INDEX(INREC,'DSN=');
         IF I = 0
              THEN DO;
                   I = INDEX(INREC,'DSNAME=');
                   IF I^=0
                        THEN I = I + 7;
                   END;
              ELSE I = I + 4;
         IF I = 0
              THEN GO TO NXTR;
         DO J = I TO 71 WHILE(SUBSTR(INREC,J,1)^=' ' &
           SUBSTR(INREC,J,1)^=',');
              END;
         DSNAME=SUBSTR(INREC,I,J-I);
         CALL SYSCTLG('NAME',RET,DSNAME,'SYSRES',AREA);
         IF RETCODE ^= 0
              THEN GO TO NXTR;
         DO I = 1 TO 50 WHILE(VOLTAB(I)^=' ' & VOLTAB(I)^=
           VOLID.VOLSER(1));
              END;
         IF VOLTAB(I)=' '
              THEN VOLTAB(I)=VOLID.VOLSER(1);
         GO TO NXTR;
 NXTREC:  PROC(REC);
         DCL BUFPTR PTR STATIC,
             BUFPADJ FIXED BIN(31,0) DEF BUFPTR;
         DCL 1 LRECV BASED(BUFPTR),
              2 BYTCNT FIXED BIN(15,0),
              2 RECSTR CHAR(300);
         DCL BCNTSAV FIXED BIN(15,0) STATIC INIT(0);
         DCL REC CHAR(80);
         DCL BUFFER CHAR(10000) VARYING STATIC;
         DCL LRECF CHAR(300) BASED(BUFPTR);
         IF BCNTSAV = 0
              THEN DO;
                   CALL SYSREAD(DCBPTR,BUFFER);
                   BCNTSAV = LENGTH(BUFFER);
                   BUFPTR = ADDR(BUFFER);
                   BUFPADJ = BUFPADJ + 2;
                   END;
         REC = SUBSTR(LRECF,1,DCBLRECL);
         BCNTSAV = BCNTSAV - DCBLRECL;
         BUFPADJ = BUFPADJ + DCBLRECL;
         END;
 EOD:
         SORTSW = '1'B;
         DO WHILE(SORTSW);
              SORTSW = '0'B;
              DO I = 1 TO 49 WHILE(VOLTAB(I+1)^=' ');
                   IF VOLTAB(I) > VOLTAB(I+1)
                        THEN DO;
                             SORTSW = '1'B;
                             SERSAV = VOLTAB(I);
                             VOLTAB(I) = VOLTAB(I+1);
                             VOLTAB(I+1) = SERSAV;
                             END;
                   END;
              END;
         DO I = 1 TO 50 WHILE(VOLTAB(I)^=' ');
              PUT EDIT(VOLTAB(I))(A) SKIP(1);
              END;
         END;
