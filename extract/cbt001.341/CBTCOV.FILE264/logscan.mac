 /* LOGSCAN */
  /*TEST:  PROC OPTIONS(MAIN); DCL DA08DDN CHAR(8) INIT('VSAMFLE');*/
 % INCLUDE CPINIT1;
 % @CMP = 'O';
 % INCLUDE CPINIT2;
         @ALLOC(DA('VSAM.U.SD.U000.SYSLOG'),SHR);
         DCL VSAMFLE RECORD INPUT KEYED ENV(VSAM);
         OPEN FILE(VSAMFLE) TITLE(DA08DDN);
         DCL VSAMREC CHAR(140) VAR;
         DCL KEY PIC'99999' INIT(1);
         DCL 1 PARSTR UNALIGNED,
           2 CMDINDX FIXED BIN(15,0),
           2 OPERCK BIT(16),
           2 PARY(16) CHAR(80) VAR,
           2 NUMCKA(5) BIT(16) INIT(
             '0'B,   /* FIND */
             '01'B,  /* MD */
             '01'B,  /* PF */
             '01'B,  /* PB */
             '0'B),  /* END */
           2 CMDTAB(5) CHAR(8) VAR INIT('FIND','MD','PF','PB','END');
         DCL PARS ENTRY(CHAR(*) VAR,);
         DCL CMDLAB(0:5) LABEL;
         DCL CRTIO ENTRY RETURNS(CHAR(79) VAR);
         DCL (SETCAPS,CRTZAP) ENTRY;
         DCL DISPLAY(24) CHAR(79);
         DCL ANSWER CHAR(79) VAR;
         ON KEY(VSAMFLE) BEGIN;
           DISPLAY(1) = 'KEY CONDITION RAISED';
           KEY = 1;
           GO TO NXTA;
           END;
         ON ENDFILE(VSAMFLE) BEGIN;
           DISPLAY(1) = 'ENDFILE ENCOUNTERED';
           KEY = 1;
           GO TO NXTA;
           END;
 NXT:
         DISPLAY(1) = '';
 NXTA:
         READ FILE(VSAMFLE) INTO(VSAMREC) KEY(KEY);
         DISPLAY(2) = VSAMREC;
         DO J = 3 TO 24;
           READ FILE(VSAMFLE) INTO(VSAMREC);
           DISPLAY(J) = VSAMREC;
           END;
         ANSWER = CRTIO(DISPLAY);
         CALL SETCAPS(ANSWER);
         CALL PARS(ANSWER,PARSTR);
         IF OPERCK ^= '0'B
           THEN GO TO CMDLAB(0);
         GO TO CMDLAB(CMDINDX);
 CMDLAB(0):
         DISPLAY(1) = 'INVALID SUBCOMMAND OR OPERAND';
         GO TO NXTA;
 CMDLAB(1):  /* FIND */
         DO UNTIL(I ^= 0);
           READ FILE(VSAMFLE) INTO(VSAMREC);
           I = INDEX(VSAMREC,PARY(2));
           END;
         KEY = SUBSTR(VSAMREC,1,5);
         GO TO NXT;
 CMDLAB(2):  /* MD */
         KEY = PARY(2);
         GO TO NXT;
 CMDLAB(3):  /* PF */
         KEY = KEY + 24;
         GO TO NXT;
 CMDLAB(4):  /* PB */
         IF KEY < 24
           THEN KEY = 1;
           ELSE KEY = KEY - 23;
         GO TO NXT;
 CMDLAB(5):  /* END */
         CALL CRTZAP;
         END;
