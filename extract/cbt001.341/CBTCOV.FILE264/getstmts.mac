*PROCESS CHARSET(48),NOMACRO,.
 GETSTMT.. PROC (SPTR),.
 /******************************************************************
  *                                                                 *
  *            THIS ROUTINE WILL BE RESPONSIBLE FOR ACCESSING THE   *
  *      SYSIN DATA SET.  AT EACH INVOCATION, THIS RTNE WILL READ   *
  *      SUFFICIENT 80-COLUMN RECORDS TO ASSEMBLE ONE COMPLETE      *
  *      STATEMENT.                                                 *
  *                 AS RECORDS ARE READ, THEY ARE WRITTEN TO THE    *
  *      SYSPRINT DATA SET.  THE CONTROL LANGUAGE STATEMENT ISHE    *
  *      ASSEMBLED IN THE VARYING CHARACTER STRING PASSED TO THIS   *
  *      ROUTINE AS A PARAMETER.  AS THE STATEMENT IS ASSEMBLED,    *
  *      ALL BLANKS ARE REMOVED EXCEPT ONE BETWEEN THE OPERATION    *
  *      CODE (DEFINE/CHANGE) AND THE OPERAND FIELD.                *
  *            THIS ROUTINE ASSUMES THAT A STATEMENT IN THE INPUT   *
  *      STREAM HAS TERMINATED WHEN EITHER A PERIOD IS ENCOUNTERED, *
  *      OR WHEN A NON-BLANK CHARACTER OTHER THAN A COMMA IS        *
  *      FOLLOWED BY A BLANK.  IF THE USER HAS OMITTED A TERMINATING*
  *      PERIOD, THIS RTNE WILL SUPPLY ONE IN THE ASSEMBLED         *
  *      STATEMENT.                                                 *
  *            IF THE ASSEMBLED STATEMENT (BLANKS REMOVED) EXCEEDS  *
  *      2048 BYTES IN LENGTH, THIS RTNE CALLS ERRMSG, PASSING A    *
  *      CODE EQUAL TO 1, AND WITH THE EXTERNAL VARIABLE SNO = TO   *
  *      THE STATEMENT #.                                           *
  *            AT ENDFILE ON SYSIN, THIS RTNE WILL RETURN TO ITS    *
  *      CALLER AFTER SETTING THE STATEMENT LENGTH TO ZERO.         *
  *            IF THE OPERATION CODE FOR A STATEMENT IS NOT 'DEFINE'*
  *      'CHANGE', OR 'DELETE', THEN THIS RTNE WILL CALL ERRMSG     *
  *      WITH A CODE OF 2.                                          *
  *                                                                 *
  *                                                                 *
  *******************************************************************/
         DCL SPTR PTR,.
         DCL SLEN FIXED BIN(15,0) BASED(SPTR),.
         DCL STMT CHAR(2048) VARYING BASED(SPTR),.
         DCL S(-2..2047) CHAR(1) BASED(SPTR),.
         DCL SNO FIXED BIN(15,0) INIT(1) EXTERNAL,.
         DCL NEWNO FIXED BIN(15,0),.
         DCL RECORD CHAR(80) STATIC,.
         DCL ERRMSG ENTRY(DEC FIXED(3,0)),.
         DCL R(80) CHAR(1) DEF RECORD,.
         DCL RIND FIXED BIN(15,0) INIT(1) STATIC,.
         ON ENDFILE(SYSIN) GO TO EOF,.
         DCL EOFSW BIT(1) INIT('0'B) STATIC,.
         DCL RSAVE CHAR(1) INIT(' ') STATIC,.
         DCL BSW BIT(1),.
         DCL INSW BIT(1),.
         DCL NSW BIT(1),.
         DCL KSW BIT(1),.
 INIT..
         SLEN = 0,.
         NEWNO = SNO,.
         NSW, INSW, BSW = '0'B,.
         IF EOFSW = '1'B THEN RETURN,.
 READ..
         IF RIND = 1 OR RIND GT 72 THEN DO,.
              READ FILE(SYSIN) INTO(RECORD),.
              IF NEWNO NE 0 THEN PUT PAGE,.
              PUT EDIT(NEWNO,RECORD)(P'ZZZ',X(2),A) SKIP(1),.
              IF INSW = '1'B THEN GO TO GETEND,.
              NEWNO = 0,.
              RIND = 1,.
              END,.
         DO RIND = RIND TO 72,.
              IF R(RIND) NE ' ' THEN GO TO TSTOP,.
              END,.
         RIND = 1,.
         GO TO READ,.
 TSTOP..
         INSW = '1'B,.
         CALL KEYCK,.
         IF KSW = '1'B THEN GO TO GOTOP,.
         BSW = '1'B,.
         CALL ERRMSG(2),.
         GO TO GETEND,.
 GOTOP..
         STMT = SUBSTR(RECORD,RIND,6) CAT ' ',.
         RIND = RIND + 7,.
         RSAVE = ' ',.
         IF RIND LE 72 THEN GO TO GETEND,.
         GO TO READ,.
 GETEND..
         DO RIND = RIND TO 72,.
              IF R(RIND) = ' '
                   THEN IF RSAVE = ' ' OR RSAVE = ','
                        THEN GO TO MEND,.
                        ELSE IF BSW = '1'B THEN GO TO GOTEND,.
                                           ELSE IF NSW = '0'B THEN DO,.
                                            NSW = '1'B,.
                                            GO TO MEND,.
                                            END,.
                                                              ELSE GO TO
                                                               MEND,.
              IF NSW = '1'B THEN DO,.
                   CALL KEYCK,.
                   IF KSW = '1'B THEN DO,.
                        S(SLEN) = '.',.
                        SLEN = SLEN + 1,.
                        GO TO GOTEND,.
                        END,.
                   NSW = '0'B,.
                   END,.
              IF BSW = '0'B THEN DO,.
                   S(SLEN) = R(RIND),.
                   IF SLEN LT 2047 THEN SLEN = SLEN + 1,.
                                   ELSE DO,.
                                       BSW = '1'B,.
                                       CALL ERRMSG(1),.
                                       END,.
                   END,.
              IF R(RIND) = '.' THEN GO TO GOTEND,.
 MEND..
              RSAVE = R(RIND),.
              END,.
         RIND = 1,.
         GO TO READ,.
 GOTEND..
         SNO = SNO + 1,.
         RIND = RIND + 1,.
         IF BSW = '0'B THEN RETURN,.
         RSAVE = ' ',.
         GO TO INIT,.
 KEYCK.. PROC,.
         IF RIND GT 67 THEN GO TO SETOFF,.
         IF RIND LT 67 THEN IF R(RIND+6) NE ' ' THEN GO TO SETOFF,.
         IF SUBSTR(RECORD,RIND,6) = 'DEFINE'
         OR SUBSTR(RECORD,RIND,6) = 'CHANGE'
         OR SUBSTR(RECORD,RIND,6) = 'DELETE'
              THEN GO TO SETON,.
 SETOFF..
         KSW = '0'B,.
         RETURN,.
 SETON..
         KSW = '1'B,.
         END KEYCK,.
 EOF..
         EOFSW = '1'B,.
         PUT EDIT('EOF ON SYSIN')(A) SKIP(2),.
         IF INSW = '1'B THEN S(SLEN) = '.',.
         SLEN = SLEN + 1,.
         IF BSW = '1'B THEN SLEN = 0,.
         IF NEWNO NE 0 THEN SLEN = 0,.
         END GETSTMT,.
