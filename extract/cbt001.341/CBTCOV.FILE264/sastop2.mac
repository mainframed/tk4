 SASTOP2: PROC OPTIONS(MAIN);
   DFT RANGE(*) FIXED BIN VALUE(FIXED BIN(31,0));

   DCL CALCPRT ENTRY(DEC FLOAT(16))
     RETURNS(CHAR(80) VAR);
   DCL INPUT ENTRY(FIXED BIN(31,0));
   DCL NAMEV ENTRY(FIXED BIN(31,0),FIXED BIN(31,0),FIXED BIN(15,0),);
   DCL NOVAR ENTRY(FIXED BIN(31,0))
     RETURNS(FIXED BIN(31,0));
   DCL NULL BUILTIN;
   DCL PARM ENTRY(FIXED BIN(31,0)) RETURNS(DEC FLOAT(16));
   DCL (PREFIX,SUFFIX) ENTRY(CHAR(*),CHAR(*))
     RETURNS(FIXED BIN(15,0));
   DCL PTRIN ENTRY(PTR) RETURNS(FIXED BIN(31,0));
   DCL PTROUT ENTRY(FIXED BIN(31,0)) RETURNS(PTR);
   DCL SASLOG ENTRY(FIXED BIN(31,0),FIXED BIN(31,0));
   DCL SASPLO ENTRY;
   DCL SETERR ENTRY;
   DCL VAR ENTRY(FIXED BIN(31,0),FIXED BIN(31,0))
     RETURNS(DEC FLOAT(16));
   DCL VARY ENTRY(FIXED BIN(31,0),FIXED BIN(31,0),FLOAT DEC(16));

   DCL INFLOAT(25) DEC FLOAT(16),
       INSTR CHAR(72) BASED(ADDR(INFLOAT(1)));
   DCL FLOAT DEC FLOAT(16);
   DCL IEND FIXED BIN(31,0) INIT(0);
   DCL DOLLAR CHAR(3) VAR;
   DCL REC CHAR(80);
   DCL BUF CHAR(80) VAR;
   DCL MSG CHAR(132),
       MSGA FIXED BIN(31,0) BASED(ADDR(MSG));
   DCL FPARM DEC FLOAT(16),
       OUTDD CHAR(8) BASED(ADDR(FPARM));
   DCL OUT RECORD OUTPUT;
   DCL (USEHD,LAST) PTR;
   DCL 1 NAMESTR,
     2 NTYPE FIXED BIN(15), /* VARIABLE TYPE - 1=NUMERIC, 2=CHARACTER */
     2 NPOS FIXED BIN(15),  /* OFFSET OF VALUE IN OBSERV. BUFFER      */
     2 NLNG FIXED BIN(15),  /* LENGTH OF VARIABLE IN OBSERVATION      */
     2 NVAR0 FIXED BIN(15), /* NUMBER OF VARIABLE IN LIST 0           */
     2 NNAME CHAR(8),       /* NAME OF VARIABLE                       */
     2 NLABEL CHAR(40),     /* LABEL OF VARIABLE                      */
     2 NFORM CHAR(8),       /* NAME OF FORMAT SUBRTNE                 */
     2 NIFORM CHAR(8),      /* NAME OF INPUT FORMAT SUBRTNE           */
     2 NFL FIXED BIN(15),   /* FORMAT FIELD LENGTH                    */
     2 NFD FIXED BIN(15),   /* FORMAT NUMBER OF DECIMALS              */
     2 NF FIXED BIN(15),    /* LENGTH OF DATA RETURNED BY FORMAT CALL */
     2 NJUST FIXED BIN(15); /* 0=LEFT JUSTIFICATION, 1=RIGHT          */
   DCL 1 RHNAMESTR BASED(RHNAMPTR),
        2 RHNSTR,
         3 RHNTYPE FIXED BIN(15),/* 1=FLOAT, 2=CHAR, 3=ZONED    */
         3 RHNPOS FIXED BIN(15), /* OFFSET WITHIN RECORD        */
         3 RHNLNG FIXED BIN(15), /* LENGTH WITHIN RECORD        */
         3 RHNVAR0 FIXED BIN(15),/* # OF VAR IN LIST 0 (SAS)    */
         3 RHNNAME CHAR(8),      /* NAME OF VARIABLE            */
         3 RHNLABEL CHAR(40),    /* LABEL (SAS)                 */
         3 RHNFORM CHAR(8),      /* FORMAT SUBRTNE (SAS)        */
         3 RHNIFORM CHAR(8),     /* INPUT FORMAT SUBRTNE (SAS)  */
         3 RHNFL FIXED BIN(15),  /* FORMAT FIELD LENGTH (SAS)   */
         3 RHNFD FIXED BIN(15),  /* FORMAT NO. DECIMALS (SAS)   */
         3 RHNF FIXED BIN(15),   /* LEN RETURNED BY FORMAT CALL */
         3 RHNJUST FIXED BIN(15),/* 0=LEFT, 1=RIGHT             */
        2 RHNLINK PTR,           /* LINK FIELD TO NEXT ELEMENT  */
        2 RHNCPOS FIXED BIN(15), /* OFFSET WITHIN SAS BUFFER    */
        2 RHNCLNG FIXED BIN(15); /* LENGTH WITHIN SAS BUFFER    */

   CALL SASPLO; /* TELL IT IS OPTIMIZER AND OPEN SYSPRINT */
   FPARM=PARM(1); /* GO GET DDNAME */
   IF UNSPEC(FPARM)='1'B
     THEN DO; /* DDNAME IS MISSING */
       MSG='ERROR - OUTDD MUST BE SPECIFIED';
       CALL SASLOG(MSGA,SUFFIX(MSG,' '));
       CALL SETERR;
       RETURN;
       END;
   OPEN FILE(OUT) TITLE(OUTDD);
   REC='DATA     ;';
   WRITE FILE(OUT) FROM(REC);
   USEHD,LAST=NULL;
   N=NOVAR(1); /* GET COUNT OF VARIABLES TO DUMP */
   NP=1; /* NEXT AVAILABLE RHNPOS VALUE */
   DO J=1 TO N;
     ALLOCATE RHNAMESTR;
     RHNLINK=NULL;
     IF LAST=NULL
       THEN USEHD=RHNAMPTR;
       ELSE LAST->RHNLINK=RHNAMPTR;
     LAST=RHNAMPTR;
     CALL NAMEV(1,J,NTYPE,NAMESTR);
     RHNSTR=NAMESTR;
     RHNCPOS=RHNPOS; /* SAVE POSITION IN SAS BUFFER */
     RHNCLNG=RHNLNG; /* SAVE LENGTH IN SAS BUFFER */
     RHNPOS=NP;
     IF RHNTYPE=1
       THEN RHNLNG=15; /* NUMBERS GET FIFTEEN POSITIONS */
     NP=RHNPOS+RHNLNG; /* UPDATE NP */
     END;

   /********************************************************************
   * NOW ADJUST ALL RHNPOS VALUES TO STAY WITHIN 72 CHARACTERS, AND    *
   * WRITE OUT THE SAS CONTROL STATEMENTS DESCRIBING THE DATA SET.     *
   * NOTE THAT THE FOLLOWING CODE IS LIFTED ALMOST VERBATIM FROM       *
   * ABE053.                                                           *
   ********************************************************************/
   M,N=0;
   DO RHNAMPTR=USEHD REPEAT RHNLINK WHILE(RHNAMPTR^=NULL);
     P=RHNPOS; /* SAVE ORIGINAL RHNPOS */
     RHNPOS=RHNPOS-M;
     RHNLNG=MIN(72,RHNLNG);
     K=RHNPOS+RHNLNG-1; /* MAXIMUM OFFSET THIS FIELD */
     IF K>72
       THEN DO; /* TIME TO SPLIT */
         M=P-1; /* NEW OFFSET DIFFERENTIAL */
         RHNPOS=1;
         END;
     END;
   BUF='INPUT ';
   J=0; /* RHNPOS FROM PREVIOUS FIELD */
   DO RHNAMPTR=USEHD REPEAT RHNLINK WHILE(RHNAMPTR^=NULL);
     IF LENGTH(BUF)>53
       THEN DO;
         REC=BUF;
         WRITE FILE(OUT) FROM(REC);
         BUF='';
         END;
     IF RHNPOS^=0
       THEN IF RHNPOS<=J
         THEN BUF=BUF××' /'; /* SPLIT HERE TO NEW CARD */
     J=RHNPOS;
     IF RHNTYPE=2
       THEN DOLLAR=' $ ';
       ELSE DOLLAR=' ';
     PUT STRING(BUF) EDIT(BUF,' ',RHNNAME,DOLLAR)(A,A,A,A);
     PUT STRING(BUF) EDIT(BUF,OUTSUB(RHNPOS),'-',
       OUTSUB(RHNPOS+RHNLNG-1))(A,A,A,A);
     END;
   BUF=BUF××';';
   REC=BUF;
   WRITE FILE(OUT) FROM(REC);
   REC='CARDS;';
   WRITE FILE(OUT) FROM(REC);

   /* NOW WRITE OUT THE DATA */
   DO FOREVER=1 REPEAT FOREVER;
     CALL INPUT(IEND);
     IF IEND=1
       THEN LEAVE;
     REC=''; /* CLEAR RECORD */
     P=0;
     DO RHNAMPTR=USEHD REPEAT RHNLINK WHILE(RHNAMPTR^=NULL);
       IF P>=RHNPOS
         THEN DO;
           WRITE FILE(OUT) FROM(REC);
           REC='';
           P=0;
           END;
       IF RHNTYPE=1 /* FLOAT? */
         THEN SUBSTR(REC,RHNPOS,RHNLNG)=CALCPRT(VAR(0,RHNVAR0));
         ELSE DO;
           CALL VARY(0,RHNVAR0,INFLOAT(1));
           SUBSTR(REC,RHNPOS,RHNLNG)=SUBSTR(INSTR,1,RHNLNG);
           END;
       P=RHNPOS; /* SAVE LAST RHNPOS VALUE */
       END;
     WRITE FILE(OUT) FROM(REC);
     END;
   CLOSE FILE(OUT);

 OUTSUB: PROC(NUM) RETURNS(CHAR(5) VAR);
 /**********************************************************************
 *                                                                     *
 * OUTSUB WILL RETURN THE PRINTABLE EQUIVALENT OF NUM WITH LEADING     *
 * ZEROS REMOVED.                                                      *
 *                                                                     *
 **********************************************************************/
   DCL NUM FIXED BIN(15,0);
   DCL PIC PIC'ZZZZ9';
   PIC=NUM;
   RETURN(SUBSTR(PIC,PREFIX(PIC,' ')));
   END OUTSUB;

   END SASTOP2;
