 /* @REP */
 %NOPRINT;
         % DCL @REP ENTRY;
 % @REP:  PROC(INSTR) STATEMENT RETURNS(CHAR);
 /*
0*$.HE GENERALIZED SUBROUTINES - @REP
0*$.HE PLI PREPROCESSOR TEXT
0*$.HE REPLACEMENT FUNCTION FOR TEXT VARIABLES
0*$.PL 55
0*$.PN 0
0*$.PA
0*$.SS
0*$.NF
0*$10/26/76
0*$AUTHOR:  T. SMITH
0*$SOURCE MODULE NAME:  @REP
0*$DOCUMENTATION ID:  0*$
0*$.FI L
0*$.SP 5
0*$THIS PROCEDURE CAN BE INVOKED TO PERFORM REPLACEMENT OF TEXT
0*$VARIABLES IN A CHARACTER STRING.  CALL FORMAT IS AS FOLLOWS -
0*$.SP 1
0*$.IN 5
0*$@REP(NAME=STRING);
0*$.IN 0
0*$.SP 1
0*$WHERE 'NAME' AND 'STRING' ARE BOTH NAMES OF CHARACTER STRINGS,
0*$EXCEPT THAT 'STRING' MAY ALSO BE A LITERAL.  NOTE THAT 'NAME' AND
0*$'STRING' CAN BE THE SAME VARIABLE NAME.
 */
         DCL INSTR CHAR;
         DCL (I,J,K,L) FIXED;
         DCL (SYMBOL,STR,RETSTR) CHAR;
         L = LENGTH(INSTR);
         I = INDEX(INSTR,'=');
         J = INDEX(INSTR,' ');
         IF J = 0 × J > I
              THEN J = I;
         SYMBOL = SUBSTR(INSTR,1,J-1);
         DO J = 1 TO L-I;
              IF SUBSTR(INSTR,I+J,1)^=' '
                   THEN GO TO STRT;
              END;
 STRT:
         STR = SUBSTR(INSTR,I+J,L-(I+J)+1);
         L = LENGTH(STR);
         IF SUBSTR(STR,1,1)=''''
              THEN DO;
                   L=L-2;
                   RETSTR='DO; BUFLEN@='××L+4××'; BUFSTR@='××STR××';';
                   END;
              ELSE RETSTR='DO; BUFLEN@=LENGTH('××STR××')+4; '××
                'BUFSTR@='××STR××';';
         RETSTR=RETSTR××' CALL REP@(BUFFER@); '××SYMBOL××
              '=SUBSTR(BUFSTR@,1,BUFLEN@-4); END;';
         RETURN(RETSTR);
         % END @REP;
 %PRINT;
