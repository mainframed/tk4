 /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
 /*DENTCS*/
 /* THIS SUBROUTINE WILL PROCESS ALL LINE SUBCOMMANDS
 ENCOUNTERED ON THE DISPLAY, AND IS CALLED BY DENTC.
 IF A LEGITIMATE LINE SUBCOMMAND IS ENCOUNTERED, IT WILL BE
 PUT ON THE COMMAND STACK, AND DENTCS WILL RETURN '1'B. */
 DENTCS:PROC(RHPTR,SUBENT,RHHDRPT,CSPTR,DATA,FSW,CAPSW)RETURNS(BIT(1))
  OPTIONS(REENTRANT);
   % DCL @PROCNAME CHAR;
   % @PROCNAME ='';
   % INCLUDE DENTSUB;
   DCL SETCAPS ENTRY;
   DCL CSPTR PTR; /* PTR TO RECORD ASSOCIATED WITH THIS DISPLAY LINE */
   DCL DATA CHAR(*) VAR; /* DATA FROM LINE NUMBER DISPLAY FIELD */
   DCL (FSW,CAPSW) BIT(1);
     /* FSW SHOULD BE SET TO 1 BEFORE THE FIRST TIME THIS
        SUBROUTINE IS CALLED FOR A GIVEN DISPLAY.  THIS
        SUBROUTINE WILL SET THE BIT TO '0'B. */
   DCL SUFFIX ENTRY(CHAR(*),CHAR(*))RETURNS(FIXED BIN(15,0));
   DCL M FIXED BIN(15,0) INIT(256);
   DCL 1 BLSTR BASED(BLPTR),
     2 NBLPTR PTR,
     2 BLCMDLEN FIXED BIN(15,0),
     2 BLCMD CHAR(M REFER(BLCMDLEN)) VAR;
   DCL 1 CSMEMRY CONTROLLED,
     2 (BLP,PBLP,OBLP,LBLP) PTR,
     2 (DI(2),XX(2),EE(2),OO(2),CC(2),RR(2),LL(2),SR(2),SL(2),ASR(2),
        ASL(2),BSR(2),BSL(2)) FIXED BIN(31,0),
     2 (DELIND,SUPIND,EXIND,OOIND,CCIND,RRIND,LLIND,SRIND,SLIND,
        ASRIND,ASLIND,BSRIND,BSLIND) FIXED BIN(31,0);
   DCL CSTAB(52) CHAR(6) VAR STATIC INIT('V','DD','D','XX','X','B','A',
     'R','P','EE','E','OO','O','CC','C','LL','L','RR','MK','MS','ME',
     'MT','MV','I','>>','>','<<','<','S','TS','HI','LO','MSMEMT',
     'MSMTME','MEMSMT','MEMTMS','MTMSME','MTMEMS','MSME','MSMT',
     'MEMS','MEMT','MTMS','MTME','F','SR','SL','&',
     '))',')','((','(');
   DCL SETLIX FIXED BIN(15,0) STATIC INIT(48);
     /* INDEX TO & IN CSTAB */
   DCL DFSW BIT(1);
   IF ALLOCATION(CSMEMRY)=0
     THEN ALLOCATE CSMEMRY;
   IF FSW
     THEN DO;
       FSW ='0'B;
       DELIND,SUPIND,EXIND,OOIND,CCIND,RRIND,LLIND,SRIND,SLIND,ASRIND,
       ASLIND,BSRIND,BSLIND = 0;
       OBLP = NULL;
       END;
   IF DATA=''
     THEN RETURN('0'B);
   CALL SETCAPS(DATA);
   I=VERIFY(DATA,' 0123456789'); /* FIND FIRST NON-NUMERIC */
   IF SUBSTR(DATA,1,1)='&'
     THEN N=SETLIX; /* IT IS SETL SUBCOMMAND */
     ELSE DO;
       IF I=0
         THEN RETURN('0'B);
       IF I=1
         THEN DO;
           J=1; /* SET DEFAULT J=1 */
           DFSW='1'B; /* SET DEFAULT SWITCH */
           END;
         ELSE DO;
           J=SUBSTR(DATA,1,I-1); /* J=COUNT OPERAND */
           DFSW='0'B; /* SET OFF DEFAULT SWITCH */
           END;
       IF I=LENGTH(DATA)
         THEN L = 1; /* L = LENGTH SUBCOMMAND */
         ELSE L=SUFFIX(DATA,' 0123456789')-I+1;
       BLPTR = NULL;
       DO N=1 TO HBOUND(CSTAB,1) WHILE(SUBSTR(DATA,I,L)^=CSTAB(N));
         END;
       END;
   SELECT(N);
     WHEN(1,9)DO; /* V SUBCOMMAND */
       ALLOCATE BLSTR;
       NBLPTR=NULL;
       PUT STRING(BLCMD) EDIT('V ',CSPTR->RECSEQ)(A,P'ZZZZZZZ9');
       END;
     WHEN(2)DO; /* DD SUBCOMMAND */
       DELIND=DELIND+1;
       DI(DELIND)=CSPTR->RECSEQ;
       IF DELIND = 2
         THEN DO;
           ALLOCATE BLSTR;
           NBLPTR=NULL;
           PUT STRING(BLCMD) EDIT('DEL ',DI(1),DI(2))(A,P'ZZZZZZZ9',X(
           1),P'ZZZZZZZ9');
           DELIND=0;
           END;
       END;
     WHEN(3)DO; /* D SUBCOMMAND */
       IF DELIND = 0
         THEN DO;
           ALLOCATE BLSTR;
           NBLPTR=NULL;
           PUT STRING(BLCMD) EDIT('DEL ',CSPTR->RECSEQ)(A,P'ZZZZZZZ9')
           ;
           END;
       END;
     WHEN(4)DO; /* XX SUBCOMMAND */
       SUPIND=SUPIND+1;
       XX(SUPIND)=CSPTR->RECSEQ;
       IF SUPIND = 2
         THEN DO;
           ALLOCATE BLSTR;
           NBLPTR=NULL;
           PUT STRING(BLCMD) EDIT('SU ',XX(1),XX(2))(A,P'ZZZZZZZ9',X(
           1),P'ZZZZZZZ9');
           SUPIND=0;
           END;
       END;
     WHEN(5)DO; /* X SUBCOMMAND */
       IF SUPIND = 0
         THEN DO;
           ALLOCATE BLSTR;
           NBLPTR=NULL;
           PUT STRING(BLCMD) EDIT('SU ',CSPTR->RECSEQ)(A,P'ZZZZZZZ9');
           END;
       END;
     WHEN(6,7,24)DO; /* A, B, I SUBCOMMANDS */
       ALLOCATE BLSTR;
       NBLPTR=NULL;
       PUT STRING(BLCMD) EDIT('BL ',CSPTR->RECSEQ,J)(A,P'ZZZZZZZ9',X(
       1),P'ZZ9');
       END;
     WHEN(18)DO; /* RR SUBCOMMAND */
       RRIND=RRIND+1;
       RR(RRIND)=CSPTR->RECSEQ;
       IF RRIND = 2
         THEN DO;
           ALLOCATE BLSTR;
           NBLPTR=NULL;
           PUT STRING(BLCMD) EDIT('CO ',RR(1),RR(2),RR(2),J)(A,P
           'ZZZZZZZ9',X(1),P'ZZZZZZZ9',X(1),P'ZZZZZZZ9',X(1),P
           'ZZZZZZZ9');
           RRIND=0;
           END;
       END;
     WHEN(8)DO; /* R SUBCOMMAND */
       IF RRIND = 0
         THEN DO;
           ALLOCATE BLSTR;
           NBLPTR=NULL;
           PUT STRING(BLCMD) EDIT('CO ',CSPTR->RECSEQ,CSPTR->RECSEQ,
           CSPTR->RECSEQ,J)(A,P'ZZZZZZZ9',X(1),P'ZZZZZZZ9',X(1),P
           'ZZZZZZZ9',X(1),P'ZZ9');
           END;
       END;
     WHEN(10)DO; /* EE SUBCOMMAND */
       EXIND=EXIND+1;
       EE(EXIND)=CSPTR->RECSEQ;
       IF EXIND = 2
         THEN DO;
           ALLOCATE BLSTR;
           NBLPTR=NULL;
           PUT STRING(BLCMD) EDIT('EX ',EE(1),EE(2))(A,P'ZZZZZZZ9',X(
           1),P'ZZZZZZZ9');
           EXIND=0;
           END;
       END;
     WHEN(11)DO; /* E SUBCOMMAND */
       IF EXIND = 0
         THEN DO;
           ALLOCATE BLSTR;
           NBLPTR=NULL;
           PUT STRING(BLCMD) EDIT('EX ',CSPTR->RECSEQ)(A,P'ZZZZZZZ9');
           END;
       END;
     WHEN(12)DO; /* OO SUBCOMMAND */
       OOIND=OOIND+1;
       OO(OOIND)=CSPTR->RECSEQ;
       IF OOIND = 2
         THEN DO;
           ALLOCATE BLSTR;
           NBLPTR=NULL;
           PUT STRING(BLCMD) EDIT('DO ',OO(1),OO(2))(A,P'ZZZZZZZ9',X(
           1),P'ZZZZZZZ9');
           OOIND=0;
           END;
       END;
     WHEN(13)DO; /* O SUBCOMMAND */
       IF OOIND = 0
         THEN DO;
           ALLOCATE BLSTR;
           NBLPTR=NULL;
           PUT STRING(BLCMD) EDIT('DO ',CSPTR->RECSEQ)(A,P'ZZZZZZZ9');
           END;
       END;
     WHEN(14)DO; /* CC SUBCOMMAND */
       CCIND=CCIND+1;
       CC(CCIND)=CSPTR->RECSEQ;
       IF CCIND = 2
         THEN DO;
           ALLOCATE BLSTR;
           NBLPTR=NULL;
           PUT STRING(BLCMD) EDIT('CLEAR ',CC(1),CC(2))(A,P'ZZZZZZZ9',
           X(1),P'ZZZZZZZ9');
           CCIND=0;
           END;
       END;
     WHEN(15)DO; /* C SUBCOMMAND */
       IF CCIND = 0
         THEN DO;
           ALLOCATE BLSTR;
           NBLPTR=NULL;
           PUT STRING(BLCMD) EDIT('CLEAR ',CSPTR->RECSEQ)(A,P'ZZZZZZZ9'
           );
           END;
       END;
     WHEN(16)DO; /* LL SUBCOMMAND */
       LLIND=LLIND+1;
       LL(LLIND)=CSPTR->RECSEQ;
       IF LLIND = 2
         THEN DO;
           ALLOCATE BLSTR;
           NBLPTR=NULL;
           PUT STRING(BLCMD) EDIT('LOG ',LL(1),LL(2))(A,P'ZZZZZZZ9',X(
           1),P'ZZZZZZZ9');
           LLIND=0;
           END;
       END;
     WHEN(17)DO; /* L SUBCOMMAND */
       /*          IF LLIND = 0
       THEN DO;
       ALLOCATE BLSTR;
       NBLPTR=NULL;
       PUT STRING(BLCMD) EDIT('LOG ',CSPTR->RECSEQ)
       (A,P'ZZZZZZZ9');
       END;
       WAS THE LOG LINE COMMAND - IS NOW THE RESET LAST SUBCOMMAND */
       ALLOCATE BLSTR;
       NBLPTR=NULL;
       PUT STRING(BLCMD) EDIT('RESET ',CSPTR->RECSEQ,J,' L')(A,P
       'ZZZZZZZ9',P'ZZZZZZZ9',A);
       END;
     WHEN(45)DO; /* F SUBCOMMAND */
       ALLOCATE BLSTR;
       NBLPTR=NULL;
       PUT STRING(BLCMD) EDIT('RESET ',CSPTR->RECSEQ,J,' F')(A,P
       'ZZZZZZZ9',P'ZZZZZZZ9',A);
       END;
     WHEN(19)DO; /* MK SUBCOMMAND */
       ALLOCATE BLSTR;
       NBLPTR=NULL;
       PUT STRING(BLCMD) EDIT('MK ',J,CSPTR->RECSEQ)(A,P'ZZ9',X(1),P
       'ZZZZZZZ9');
       END;
     WHEN(20)DO; /* MS SUBCOMMAND */
       ALLOCATE BLSTR;
       NBLPTR=NULL;
       PUT STRING(BLCMD) EDIT('MK 1 ',CSPTR->RECSEQ)(A,P'ZZZZZZZ9');
       END;
     WHEN(21)DO; /* ME SUBCOMMAND */
       ALLOCATE BLSTR;
       NBLPTR=NULL;
       PUT STRING(BLCMD) EDIT('MK 2 ',CSPTR->RECSEQ)(A,P'ZZZZZZZ9');
       END;
     WHEN(22)DO; /* MT SUBCOMMAND */
       ALLOCATE BLSTR;
       NBLPTR=NULL;
       PUT STRING(BLCMD) EDIT('MK 3 ',CSPTR->RECSEQ)(A,P'ZZZZZZZ9');
       END;
     WHEN(23)DO; /* MV SUBCOMMAND */
       ALLOCATE BLSTR;
       NBLPTR=NULL;
       PUT STRING(BLCMD) EDIT('MK 4 ',CSPTR->RECSEQ)(A,P'ZZZZZZZ9');
       END;
     WHEN(25)DO; /* >> (SR) SUBCOMMAND */
       SRIND=SRIND+1;
       SR(SRIND)=CSPTR->RECSEQ;
       IF SRIND = 2
         THEN DO;
           ALLOCATE BLSTR;
           NBLPTR=NULL;
           PUT STRING(BLCMD) EDIT('SR ',SR(1),SR(2),J)(A,P'ZZZZZZZ9',
           X(1),P'ZZZZZZZ9',X(1),P'ZZZZZZZ9');
           SRIND=0;
           END;
       END;
     WHEN(26)DO; /* > (SR) SUBCOMMAND */
       IF SRIND = 0
         THEN DO;
           ALLOCATE BLSTR;
           NBLPTR=NULL;
           PUT STRING(BLCMD) EDIT('SR ',CSPTR->RECSEQ,CSPTR->RECSEQ,J)
           (A,P'ZZZZZZZ9',X(1),P'ZZZZZZZ9',X(1),P'ZZZZZZZ9');
           END;
       END;
     WHEN(27)DO; /* << (SL) SUBCOMMAND */
       SLIND=SLIND+1;
       SL(SLIND)=CSPTR->RECSEQ;
       IF SLIND = 2
         THEN DO;
           ALLOCATE BLSTR;
           NBLPTR=NULL;
           PUT STRING(BLCMD) EDIT('SL ',SL(1),SL(2),J)(A,P'ZZZZZZZ9',
           X(1),P'ZZZZZZZ9',X(1),P'ZZZZZZZ9');
           SLIND=0;
           END;
       END;
     WHEN(28)DO; /* < (SL) SUBCOMMAND */
       IF SLIND = 0
         THEN DO;
           ALLOCATE BLSTR;
           NBLPTR=NULL;
           PUT STRING(BLCMD) EDIT('SL ',CSPTR->RECSEQ,CSPTR->RECSEQ,J)
           (A,P'ZZZZZZZ9',X(1),P'ZZZZZZZ9',X(1),P'ZZZZZZZ9');
           END;
       END;
     WHEN(29)DO; /* S SUBCOMMAND */
       ALLOCATE BLSTR;
       NBLPTR=NULL;
       PUT STRING(BLCMD) EDIT('SETSEQ ',CSPTR->RECSEQ,J)(A,P'ZZZZZZZ9'
       ,X(1),P'ZZZZZZZ9');
       END;
     WHEN(30)DO; /* TS SUBCOMMAND */
       IF DFSW
         THEN K=0;
         ELSE K=J;
       ALLOCATE BLSTR;
       NBLPTR=NULL;
       PUT STRING(BLCMD) EDIT('TS ',CSPTR->RECSEQ,K)(A,P'ZZZZZZZ9',X(
       1),P'ZZZ');
       END;
     WHEN(31) CAPSW='0'B; /* HI */
     WHEN(32) CAPSW='1'B; /* LO */
     WHEN(33,34,35,36,37,38)DO; /* MSMEMT IN VARIOUS COMB. */
       ALLOCATE BLSTR;
       PUT STRING(BLCMD)EDIT('MK 1 ',CSPTR->RECSEQ)(A,P'ZZZZZZZ9');
       ALLOCATE BLSTR SET(NBLPTR);
       PUT STRING(NBLPTR->BLCMD)EDIT('MK 2 ',CSPTR->RECSEQ)(A,P
       'ZZZZZZZ9');
       ALLOCATE BLSTR SET(NBLPTR->NBLPTR);
       PUT STRING(NBLPTR->NBLPTR->BLCMD)EDIT('MK 3 ',CSPTR->RECSEQ)(A,
       P'ZZZZZZZ9');
       NBLPTR->NBLPTR->NBLPTR=NULL;
       END;
     WHEN(39,41)DO; /* MSME OR MEMS */
       ALLOCATE BLSTR;
       PUT STRING(BLCMD)EDIT('MK 1 ',CSPTR->RECSEQ)(A,P'ZZZZZZZ9');
       ALLOCATE BLSTR SET(NBLPTR);
       PUT STRING(NBLPTR->BLCMD)EDIT('MK 2 ',CSPTR->RECSEQ)(A,P
       'ZZZZZZZ9');
       NBLPTR->NBLPTR=NULL;
       END;
     WHEN(40,43)DO; /* MSMT OR MTMS */
       ALLOCATE BLSTR;
       PUT STRING(BLCMD)EDIT('MK 1 ',CSPTR->RECSEQ)(A,P'ZZZZZZZ9');
       ALLOCATE BLSTR SET(NBLPTR);
       PUT STRING(NBLPTR->BLCMD)EDIT('MK 3 ',CSPTR->RECSEQ)(A,P
       'ZZZZZZZ9');
       NBLPTR->NBLPTR=NULL;
       END;
     WHEN(42,44)DO; /* MEMT OR MTME */
       ALLOCATE BLSTR;
       PUT STRING(BLCMD)EDIT('MK 2 ',CSPTR->RECSEQ)(A,P'ZZZZZZZ9');
       ALLOCATE BLSTR SET(NBLPTR);
       PUT STRING(NBLPTR->BLCMD)EDIT('MK 3 ',CSPTR->RECSEQ)(A,P
       'ZZZZZZZ9');
       NBLPTR->NBLPTR=NULL;
       END;
     WHEN(46)DO; /* SRC SUBCOMMAND */
       ASRIND=ASRIND+1;
       ASR(ASRIND)=CSPTR->RECSEQ;
       IF ASRIND = 2
         THEN DO;
           ALLOCATE BLSTR;
           NBLPTR=NULL;
           PUT STRING(BLCMD) EDIT('SRC ',ASR(1),ASR(2),J)(A,P'ZZZZZZZ9'
           ,X(1),P'ZZZZZZZ9',X(1),P'ZZZZZZZ9');
           ASRIND=0;
           END;
       END;
     WHEN(47)DO; /* SLC SUBCOMMAND */
       ASLIND=ASLIND+1;
       ASL(ASLIND)=CSPTR->RECSEQ;
       IF ASLIND = 2
         THEN DO;
           ALLOCATE BLSTR;
           NBLPTR=NULL;
           PUT STRING(BLCMD) EDIT('SLC ',ASL(1),ASL(2),J)(A,P'ZZZZZZZ9'
           ,X(1),P'ZZZZZZZ9',X(1),P'ZZZZZZZ9');
           ASLIND=0;
           END;
       END;
     WHEN(48)DO; /* SETL SUBCOMMAND */
       I=INDEX(DATA,' ')-1;
       IF I<1
         THEN I=SUFFIX(DATA,'0123456789');
       IF I=1
         THEN I=2;
       /* I=INDEX LAST CHARACTER IN SYMBOLIC NAME */
       ALLOCATE BLSTR;
       NBLPTR=NULL;
       PUT STRING(BLCMD) EDIT('SETL ',SUBSTR(DATA,2,I-1),CSPTR->RECSEQ)
         (A,A,P'ZZZZZZZ9');
       END;
     WHEN(49)DO; /* )) (SRB) SUBCOMMAND */
       BSRIND=BSRIND+1;
       BSR(BSRIND)=CSPTR->RECSEQ;
       IF BSRIND = 2
         THEN DO;
           ALLOCATE BLSTR;
           NBLPTR=NULL;
           PUT STRING(BLCMD) EDIT('SRB ',BSR(1),BSR(2),J)(A,P'ZZZZZZZ9',
           X(1),P'ZZZZZZZ9',X(1),P'ZZZZZZZ9');
           BSRIND=0;
           END;
       END;
     WHEN(50)DO; /* ) (SRB) SUBCOMMAND */
       IF BSRIND = 0
         THEN DO;
           ALLOCATE BLSTR;
           NBLPTR=NULL;
           PUT STRING(BLCMD) EDIT('SRB ',CSPTR->RECSEQ,CSPTR->RECSEQ,J)
           (A,P'ZZZZZZZ9',X(1),P'ZZZZZZZ9',X(1),P'ZZZZZZZ9');
           END;
       END;
     WHEN(51)DO; /* (( (SLB) SUBCOMMAND */
       BSLIND=BSLIND+1;
       BSL(BSLIND)=CSPTR->RECSEQ;
       IF BSLIND = 2
         THEN DO;
           ALLOCATE BLSTR;
           NBLPTR=NULL;
           PUT STRING(BLCMD) EDIT('SLB ',BSL(1),BSL(2),J)(A,P'ZZZZZZZ9',
           X(1),P'ZZZZZZZ9',X(1),P'ZZZZZZZ9');
           BSLIND=0;
           END;
       END;
     WHEN(52)DO; /* ( (SLB) SUBCOMMAND */
       IF BSLIND = 0
         THEN DO;
           ALLOCATE BLSTR;
           NBLPTR=NULL;
           PUT STRING(BLCMD) EDIT('SLB ',CSPTR->RECSEQ,CSPTR->RECSEQ,J)
           (A,P'ZZZZZZZ9',X(1),P'ZZZZZZZ9',X(1),P'ZZZZZZZ9');
           END;
       END;
     OTHERWISE /* NO VALID LINE SUBCOMMAND */
     RETURN('0'B);
     END;
   IF BLPTR=NULL
     THEN RETURN('0'B);
   DO LBLP=BLPTR REPEAT LBLP->NBLPTR WHILE(LBLP->NBLPTR^=NULL);
     END;
   SELECT(N);
     WHEN(1,2,3,4,5,9,10,11,12,13,14,15,16,17,19,20,21,22,23,25,26,27,
     28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,
     49,50,51,52)DO;
       /*V,DD,D,XX,X,P,EE,E,OO,O,CC,C,LL,L,MK,MS,ME,MT,MV,>>,>,
       <,<<,S,HI,H,LO,L,F,ASR,ASL,&,)),),(,((*/
       IF OBLP=NULL
         THEN OBLP=BLPTR;
       LBLP->NBLPTR=BLHDR;
       BLHDR=BLPTR;
       END;
     OTHERWISE DO; /* B,A,R,TS SUBCOMMANDS */
       IF OBLP=NULL
         THEN DO;
           LBLP->NBLPTR=BLHDR;
           BLHDR=BLPTR;
           END;
         ELSE DO;
           LBLP->NBLPTR=OBLP->NBLPTR;
           OBLP->NBLPTR=BLPTR;
           END;
       END;
     END;
   RETURN('1'B);
   END;
