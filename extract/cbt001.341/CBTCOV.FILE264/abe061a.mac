 /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
 /* ABE061A - APL SUBCOMMAND - TEXT TO BE INCLUDED */

   /* DCL 1 PARM_STRUCTURE, OR DCL 1 PARM_STRUCTURE BASED(PARMSPTR) */
     2 SCANPARM,
      3 TOKHDR PTR,
      3 CURTOK PTR,
      3 SCANIX FIXED BIN(15,0) INIT(1),
     2 INDEX_STACK PTR,
     2 INDEX_COUNT FIXED BIN INIT(0),
     2 OPERAND_STACK PTR,
     2 OPERAND_COUNT FIXED BIN INIT(0),
     2 SHOWPTR PTR,
     2 MISSING DEC FLOAT(16),
     2 SUBRTNES,
      3 BARENUM ENTRY(FIXED BIN(31,0)) RETURNS(CHAR(20) VAR),
      3 CLEANUP ENTRY,
      3 COPY_DATA ENTRY(PTR,PTR),
      3 COPY_RH_APL ENTRY(PTR) RETURNS(PTR),
      3 CREATE_APLCB ENTRY(FIXED BIN(31,0)) RETURNS(PTR),
      3 CREATE_VAR ENTRY(FIXED BIN(31,0),PTR,CHAR(*) VAR) RETURNS(PTR),
      3 DO_ACCENT_BASE ENTRY,
      3 DO_ACCENT_RHO ENTRY,
      3 DO_AND ENTRY(DEC FLOAT(16),DEC FLOAT(16))
          RETURNS(DEC FLOAT(16)),
      3 DO_AND_CHAR ENTRY(CHAR(*) VAR, CHAR(*) VAR)
          RETURNS(DEC FLOAT(16)),
      3 DO_APL_STMT ENTRY(CHAR(*) VAR) RETURNS(PTR),
      3 DO_ASSIGNMENT ENTRY,
      3 DO_ASSIGNMENT_INDEXED ENTRY(PTR,PTR,FIXED BIN(31,0)),
      3 DO_ASSIGNMENT_INDEXED_SUB ENTRY(PTR,PTR,FIXED BIN(31,0),
        PTR,FIXED BIN(31,0)),
      3 DO_AXIS ENTRY(FIXED BIN(31,0)) RETURNS(PTR),
      3 DO_BASE ENTRY,
      3 DO_BASE_NULL ENTRY,
      3 DO_BINOMIAL ENTRY(DEC FLOAT(16),DEC FLOAT(16))
          RETURNS(DEC FLOAT(16)),
      3 DO_BINOMIAL_CHAR ENTRY(CHAR(*) VAR, CHAR(*) VAR)
          RETURNS(DEC FLOAT(16)),
      3 DO_BRACKET ENTRY,
      3 DO_BRACKET_GET ENTRY,
      3 DO_BRACKET_INDEX ENTRY(FIXED BIN(31,0),PTR) RETURNS(PTR),
      3 DO_BRACKET_INDEX_GET ENTRY(PTR,FIXED BIN(31,0),
        PTR,FIXED BIN(31,0),PTR,FIXED BIN(31,0),
        FIXED BIN(31,0),FIXED BIN(31,0)),
      3 DO_BRACKET_INDEX_STACK ENTRY(FIXED BIN(31,0),PTR)
        RETURNS(FIXED BIN(31,0)),
      3 DO_CEILING ENTRY(PTR) RETURNS(DEC FLOAT(16)),
      3 DO_CIRCLE ENTRY(DEC FLOAT(16),DEC FLOAT(16))
          RETURNS(DEC FLOAT(16)),
      3 DO_CIRCLE_CHAR ENTRY(CHAR(*) VAR, CHAR(*) VAR)
          RETURNS(DEC FLOAT(16)),
      3 DO_CONJUGATE ENTRY(PTR) RETURNS(DEC FLOAT(16)),
      3 DO_CONSTANT_OPERAND ENTRY,
      3 DO_DEAL ENTRY(DEC FLOAT(16),DEC FLOAT(16))
          RETURNS(PTR),
      3 DO_DEAL_CHAR ENTRY(CHAR(*) VAR, CHAR(*) VAR)
          RETURNS(PTR),
      3 DO_DIVIDE ENTRY(DEC FLOAT(16),DEC FLOAT(16))
          RETURNS(DEC FLOAT(16)),
      3 DO_DIVIDE_CHAR ENTRY(CHAR(*) VAR, CHAR(*) VAR)
          RETURNS(DEC FLOAT(16)),
      3 DO_DOMINO ENTRY,
      3 DO_EQUAL ENTRY(DEC FLOAT(16),DEC FLOAT(16))
          RETURNS(DEC FLOAT(16)),
      3 DO_EQUAL_CHAR ENTRY(CHAR(*) VAR, CHAR(*) VAR)
          RETURNS(DEC FLOAT(16)),
      3 DO_EXPONENTIAL ENTRY(PTR) RETURNS(DEC FLOAT(16)),
      3 DO_FLOOR ENTRY(PTR) RETURNS(DEC FLOAT(16)),
      3 DO_GRADE ENTRY(CHAR(*)),
      3 DO_GREATER ENTRY(DEC FLOAT(16),DEC FLOAT(16))
          RETURNS(DEC FLOAT(16)),
      3 DO_GREATER_CHAR ENTRY(CHAR(*) VAR, CHAR(*) VAR)
          RETURNS(DEC FLOAT(16)),
      3 DO_INNER_PRODUCT ENTRY(CHAR(*),PTR,PTR) RETURNS(PTR),
      3 DO_IOTA ENTRY,
      3 DO_IOTA_DYADIC ENTRY(PTR,PTR) RETURNS(PTR),
      3 DO_IOTA_MONADIC ENTRY(PTR) RETURNS(PTR),
      3 DO_LESS ENTRY(DEC FLOAT(16),DEC FLOAT(16))
          RETURNS(DEC FLOAT(16)),
      3 DO_LESS_CHAR ENTRY(CHAR(*) VAR, CHAR(*) VAR)
          RETURNS(DEC FLOAT(16)),
      3 DO_LOG ENTRY(DEC FLOAT(16),DEC FLOAT(16))
          RETURNS(DEC FLOAT(16)),
      3 DO_LOG_CHAR ENTRY(CHAR(*) VAR, CHAR(*) VAR)
          RETURNS(DEC FLOAT(16)),
      3 DO_LITERAL_OPERAND ENTRY,
      3 DO_MAGNITUDE ENTRY(PTR) RETURNS(DEC FLOAT(16)),
      3 DO_MAXIMUM ENTRY(DEC FLOAT(16),DEC FLOAT(16))
          RETURNS(DEC FLOAT(16)),
      3 DO_MAXIMUM_CHAR ENTRY(CHAR(*) VAR, CHAR(*) VAR)
          RETURNS(DEC FLOAT(16)),
      3 DO_MEMBERSHIP ENTRY,
      3 DO_MINIMUM ENTRY(DEC FLOAT(16),DEC FLOAT(16))
          RETURNS(DEC FLOAT(16)),
      3 DO_MINIMUM_CHAR ENTRY(CHAR(*) VAR, CHAR(*) VAR)
          RETURNS(DEC FLOAT(16)),
      3 DO_MINUS ENTRY(DEC FLOAT(16),DEC FLOAT(16))
          RETURNS(DEC FLOAT(16)),
      3 DO_MINUS_CHAR ENTRY(CHAR(*) VAR, CHAR(*) VAR)
          RETURNS(DEC FLOAT(16)),
      3 DO_NAND ENTRY(DEC FLOAT(16),DEC FLOAT(16))
          RETURNS(DEC FLOAT(16)),
      3 DO_NAND_CHAR ENTRY(CHAR(*) VAR, CHAR(*) VAR)
          RETURNS(DEC FLOAT(16)),
      3 DO_NATURAL_LOGARITHM ENTRY(PTR) RETURNS(DEC FLOAT(16)),
      3 DO_NEGATIVE ENTRY(PTR) RETURNS(DEC FLOAT(16)),
      3 DO_NOT ENTRY(PTR) RETURNS(DEC FLOAT(16)),
      3 DO_NOR ENTRY(DEC FLOAT(16),DEC FLOAT(16))
          RETURNS(DEC FLOAT(16)),
      3 DO_NOR_CHAR ENTRY(CHAR(*) VAR, CHAR(*) VAR)
          RETURNS(DEC FLOAT(16)),
      3 DO_NOT_EQUAL ENTRY(DEC FLOAT(16),DEC FLOAT(16))
          RETURNS(DEC FLOAT(16)),
      3 DO_NOT_EQUAL_CHAR ENTRY(CHAR(*) VAR, CHAR(*) VAR)
          RETURNS(DEC FLOAT(16)),
      3 DO_NOT_LESS ENTRY(DEC FLOAT(16),DEC FLOAT(16))
          RETURNS(DEC FLOAT(16)),
      3 DO_NOT_LESS_CHAR ENTRY(CHAR(*) VAR, CHAR(*) VAR)
          RETURNS(DEC FLOAT(16)),
      3 DO_NOT_GREATER ENTRY(DEC FLOAT(16),DEC FLOAT(16))
          RETURNS(DEC FLOAT(16)),
      3 DO_NOT_GREATER_CHAR ENTRY(CHAR(*) VAR, CHAR(*) VAR)
          RETURNS(DEC FLOAT(16)),
      3 DO_OPERAND ENTRY,
      3 DO_OR ENTRY(DEC FLOAT(16),DEC FLOAT(16))
          RETURNS(DEC FLOAT(16)),
      3 DO_OR_CHAR ENTRY(CHAR(*) VAR, CHAR(*) VAR)
          RETURNS(DEC FLOAT(16)),
      3 DO_PI_TIMES ENTRY(PTR) RETURNS(DEC FLOAT(16)),
      3 DO_PLUS ENTRY(DEC FLOAT(16),DEC FLOAT(16))
          RETURNS(DEC FLOAT(16)),
      3 DO_PLUS_CHAR ENTRY(CHAR(*) VAR, CHAR(*) VAR)
          RETURNS(DEC FLOAT(16)),
      3 DO_POWER ENTRY(DEC FLOAT(16),DEC FLOAT(16))
          RETURNS(DEC FLOAT(16)),
      3 DO_POWER_CHAR ENTRY(CHAR(*) VAR, CHAR(*) VAR)
          RETURNS(DEC FLOAT(16)),
      3 DO_PRIMITIVE ENTRY(CHAR(*)),
      3 DO_PRIMITIVE_DYADIC ENTRY(CHAR(*),PTR,PTR)
         RETURNS(PTR),
      3 DO_PRIMITIVE_DYADIC_BAL ENTRY(CHAR(*),,,PTR,PTR,
         FIXED BIN(31,0),BIT(1)) RETURNS(PTR),
      3 DO_PRIMITIVE_DYADIC_ECH ENTRY(CHAR(*),),
      3 DO_PRIMITIVE_DYADIC_ENT ENTRY(CHAR(*),),
      3 DO_PRIMITIVE_DYADIC_UNBAL ENTRY(CHAR(*),CHAR(*),,,
         PTR,PTR,FIXED BIN(31,0),BIT(1)) RETURNS(PTR),
      3 DO_PRIMITIVE_MONADIC ENTRY(CHAR(*),PTR) RETURNS(PTR),
      3 DO_PRIMITIVE_MONADIC_SUB ENTRY(CHAR(*),,PTR,FIXED BIN(31,0))
         RETURNS(PTR),
      3 DO_RECIPROCAL ENTRY(PTR) RETURNS(DEC FLOAT(16)),
      3 DO_RESIDUE ENTRY(DEC FLOAT(16),DEC FLOAT(16))
          RETURNS(DEC FLOAT(16)),
      3 DO_RESIDUE_CHAR ENTRY(CHAR(*) VAR, CHAR(*) VAR)
          RETURNS(DEC FLOAT(16)),
      3 DO_ROLL ENTRY(PTR) RETURNS(DEC FLOAT(16)),
      3 DO_RHO ENTRY,
      3 DO_RHO_DYADIC ENTRY(PTR,PTR) RETURNS(PTR),
      3 DO_RHO_MONADIC ENTRY(PTR) RETURNS(PTR),
      3 DO_SIGNUM ENTRY(PTR) RETURNS(DEC FLOAT(16)),
      3 DO_TIMES ENTRY(DEC FLOAT(16),DEC FLOAT(16))
          RETURNS(DEC FLOAT(16)),
      3 DO_TIMES_CHAR ENTRY(CHAR(*) VAR, CHAR(*) VAR)
          RETURNS(DEC FLOAT(16)),
      3 DO_TOP ENTRY,
      3 DO_TOP_NULL ENTRY,
      3 DO_TRANSPOSE ENTRY,
      3 DYADIC_SCALAR_IDENTITY ENTRY(CHAR(*)) RETURNS(DEC FLOAT(16)),
      3 EL_CNT ENTRY(PTR) RETURNS(FIXED BIN(31,0)),
      3 END_OPER ENTRY(PTR,PTR,PTR),
      3 END_OPER_SUB ENTRY(PTR),
      3 GET_DIM ENTRY(CHAR(*),PTR,PTR) RETURNS(FIXED BIN(31,0)),
      3 GET_DYADIC_OPERANDS ENTRY(CHAR(*),PTR,PTR),
      3 GET_EL ENTRY(CHAR(*),PTR,PTR,FIXED BIN(31,0),FIXED BIN(31,0))
        RETURNS(CHAR(256) VAR),
      3 GET_ELEMENT ENTRY(PTR) RETURNS(CHAR(256) VAR),
      3 GET_ELEMENT_AXIS ENTRY(PTR,FIXED BIN(31,0),FIXED BIN(31,0),
        FIXED BIN(31,0),FIXED BIN(31,0)),
      3 GET_ELEMENT_POSITION ENTRY(PTR,FIXED BIN(31,0),FIXED BIN(31,0)),
      3 GET_INTEGER_SEQ ENTRY(CHAR(*),PTR,PTR,FIXED BIN(31,0),
         FIXED BIN(31,0))
         RETURNS(FIXED BIN(31,0)),
      3 GET_LEFT ENTRY RETURNS(PTR),
      3 GET_OPERANDS ENTRY(CHAR(*),PTR,PTR),
      3 GET_PRIOR ENTRY,
      3 GET_SCALAR_SEQ ENTRY(CHAR(*),PTR,PTR,FIXED BIN(31,0),
         FIXED BIN(31,0))
         RETURNS(DEC FLOAT(16)),
      3 MAIN_LOOP ENTRY(FIXED BIN(31,0)),
      3 PAREN_CHECK ENTRY,
      3 POP_OPERAND ENTRY(PTR,FIXED BIN(31,0)) RETURNS(PTR),
      3 PUSH_OPERAND ENTRY(PTR,FIXED BIN(31,0),PTR),
      3 PUT_EL ENTRY(CHAR(*) VAR,PTR,FIXED BIN(31,0),FIXED BIN(31,0)),
      3 PUT_EL_SUB ENTRY(CHAR(*) VAR,PTR,PTR,FIXED BIN(31,0),FIXED
        BIN(31,0)),
      3 PUT_ELEMENT ENTRY(CHAR(*) VAR,PTR),
      3 RHP_LOC ENTRY(CHAR(*)) RETURNS(PTR),
      3 RND ENTRY(DEC FLOAT(16)) RETURNS(DEC FLOAT(16)),
      3 TAKE_DROP_COMMON ENTRY(CHAR(4)),
      3 VECTOR_CHECK ENTRY(PTR);

   DCL TIME BUILTIN;
   DCL FACTORL ENTRY(DEC FLOAT(16)) RETURNS(DEC FLOAT(16));
   DCL PTRIN ENTRY(PTR)
     RETURNS(FIXED BIN(31,0));
   DCL PTROUT ENTRY(FIXED BIN(31,0))
     RETURNS(PTR);
   DCL CONVERT ENTRY(PTR,
     CHAR(*),FIXED BIN(15,0),FIXED BIN(15,0),
     CHAR(*),FIXED BIN(15,0),FIXED BIN(15,0))
     RETURNS(CHAR(256) VAR);

     'FLOAT','CHAR','CHAR','PACKED','HEX','BIT','FIXED');

   DCL 1 TOKEN BASED(CURTOK),
     2 PRIOR_TOKEN PTR,
     2 NEXT_TOKEN PTR,
     2 ELIX FIXED BIN(15,0),
     2 TYPE FIXED BIN(31,0),
     2 TOKSTR CHAR(256) VAR;
   DCL OPERAND          INIT( 0) FIXED STATIC;
   DCL QUOTED_STRING    INIT(-1) FIXED STATIC;
   DCL NUMERIC_CONSTANT INIT(-2) FIXED STATIC;
   DCL NO_MORE_TOKENS   INIT(-3) FIXED STATIC;
   DCL OTHER            INIT(-4) FIXED STATIC;
   DCL (PREFIX,SUFFIX) ENTRY(CHAR(*),CHAR(*))
     RETURNS(FIXED BIN(15,0));
   DCL FLOAT_TYPE INIT(1) FIXED STATIC;
   DCL CHAR_TYPE  INIT(2) FIXED STATIC;
   DCL ZONED_TYPE INIT(3) FIXED STATIC;
   DCL FIXED_TYPE INIT(7) FIXED STATIC;
   DCL 1 OSE BASED(OSEPTR),
     2 OSENXT PTR, /* NEXT ELEMENT ON STACK */
     2 OSERHP PTR; /* DATASET CONTAINING OPERAND */
   %INCLUDE ABEIXW;
   DCL MISSING_INTEGER FIXED BIN(31,0) STATIC INIT(-2147483648);
   %INCLUDE APLCB;
