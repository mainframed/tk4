 /* @PROC */
 %NOPRINT;
         % DCL @PCLLEN FIXED;
         % @PCLLEN = 6;
              /* @PCLLEN WILL CONTAIN THE TOTAL LENGTH OF THE PCL */
         % DCL @PDLLEN FIXED;
         % @PDLLEN = 8;
              /* @PDLLEN WILL CONTAIN THE TOTAL LENGTH OF THE PDL */
         % DCL @PCLSTR CHAR;
         % @PCLSTR = '';
              /* @PCLSTR WILL CONTAIN THE PCL LESS THE 6-BYTE HEADER */
         % DCL @PDLSTR CHAR;
         % @PDLSTR = ' DCL 1 IKJPARMD BASED(PDLPTR), '××
            '2 PDLHDR CHAR(8)';
              /* @PDLSTR WILL CONTAIN THE PDL */
         % DCL @CODSTR CHAR;
         % @CODSTR = ' DCL SYSPARS EXT ENTRY;'
                  ×× ' CALL SYSPARS(PPLPTR,IKJRET);  IF IKJRET^=0'××
           ' THEN SIGNAL ERROR; ';
              /* @CODSTR WILL CONTAIN THE EXECUTABLE CODE */
         % IF @BITI ^= 'Y'
              % THEN % DO;
                   % INCLUDE @BIT;
                   @BITI = 'Y';
                   % END;
         % DCL @PSUBSW CHAR;
         % @PSUBSW = 0;
         % DCL @LSUBSW CHAR;
              /* @LSUBSW IS SET TO ONE IF THE CURRENT KEYWORD PARAMETER
                 HAS AS A SUBOPERAND A LIST */
         % DCL @LNPRMT CHAR;
              /* @LNPRMT IS SET TO ONE IF THE CURRENT KEYWORD PARAMETER
                 HAS AS A SUBOPERAND WHICH IS OPTIONAL.  THAT IS, IF
                 THE KEYWORD CAN BE ENTERED AT THE TERMINAL EITHER
                 WITH OR WITHOUT A SUBOPERAND. */
         % @LNPRMT = '0';
         % DCL @IKJID ENTRY;
 % @IKJID:  PROC(@PCLLEN,@PDLLEN,@PCLSTR,@PDLSTR,@CODSTR,NAME,PROMPT,
              DEFAULT) RETURNS(CHAR);
 /*
0*$.HE GENERALIZED SUBROUTINES - @PROC
0*$.HE PLI PREPROCESSOR TEXT
0*$.HE IDENTIFY COMMAND PROCESSOR OPERANDS
0*$.PL 55
0*$.PN 0
0*$.PA
0*$.SS
0*$.NF
0*$09/17/76
0*$AUTHOR:  T. SMITH
0*$SOURCE MODULE NAME:  @PROC
0*$DOCUMENTATION ID:  0*$
0*$.FI L
0*$.SP 5
0*$THIS PLI PREPROCESSOR PROCEDURE CAN BE INVOKED TO IDENTIFY THE
0*$OPERANDS EXPECTED FROM THE USER WHEN HE ENTERS THE COMMAND.
0*$FORMAT IS AS FOLLOWS -
0*$.SP 1
0*$.IN 5
0*$@PROC(N,POSITIONAL1,...,POSITIONALN,KEYWORD(VALUE),...);
0*$.IN 0
0*$.SP 1
0*$N
0*$.IN 5
0*$DENOTES THE NUMBER OF POSITIONAL PARAMETERS THAT FOLLOW.
0*$.IN 0
0*$POSITIONAL PARAMETERS
0*$.IN 5
0*$REQUIRE THE USER TO SUBSTITUTE SOME VALUE FOR EACH OF THEM WHEN HE
0*$INVOKES THE COMMAND.  TSO WILL PROMPT HIM FOR ANY HE NEGLECTS TO
0*$ENTER.
0*$.IN 0
0*$KEYWORD PARAMETERS
0*$.IN 5
0*$WHEN THE USER ENTERS THE COMMAND, THE USER MAY CHOOSE TO USE ANY,
0*$ALL, OR NONE OF THE SPECIFIED KEYWORD PARAMETERS.  THE WRITER OF
0*$THE COMMAND PROCESSOR CAN OPTIONALLY SPECIFY A DEFAULT VALUE FOR
0*$A KEYWORD PARAMETER.
0*$.IN 0
0*$.SP 1
0*$FOLLOWING IS A SAMPLE @PROC STATEMENT DEFINING ONE POSITIONAL AND
0*$TWO KEYWORD PARAMETERS.  A DEFAULT VALUE IS SPECIFIED FOR THE
0*$SECOND KEYWORD PARAMETER.
0*$.SP 1
0*$.IN 5
0*$@PROC(1,NAME,SIZE,DISP(KEEP));
0*$SYMBOLIC VARIABLE NAMES MATCHING THE NAMES IN THE @PROC STATEMENT
0*$CAN BE USED TO REFERENCE THE VALUES THE USER ENTERS FOR EACH
0*$PARAMETER.  FOR EXAMPLE, THE FOLLOWING STATEMENT WILL ASSIGN THE
0*$VALUE THE USER ENTERED FOR POSITIONAL PARAMETER "NAME" IN THE
0*$PREVIOUS EXAMPLE TO A CHARACTER STRING CALLED "MYNAME".
0*$.SP 1
0*$.IN 5
0*$MYNAME = SYMC('&NAME');
0*$.IN 0
0*$.SP 1
0*$SEE DOCUMENTATION FOR @CMD, @WRITE @PUTGET, AND LCLA, LCLC, GBLA,
0*$GBLC, SYMA, AND SYMC FOR FURTHER INFORMATION ON THE USER OF
0*$SYMBOLIC VARIABLES.
0*$.SP 1
0*$SPECIAL PARAMETER SPECIFICATION FORMATS
0*$.SP 1
0*$NOTE THAT THERE IS A SPECIAL FORMAT WHICH IS USED IF YOU
0*$WISH TO DEFINE A POSITIONAL PARAMETER AS BEING A DSNAME.  SPECIAL
0*$CONTROL BLOCKS ARE BUILT WHICH ARE USEFUL IN @ALLOC AND @SETDSN
0*$(SEE TEXT ELSEWHERE).  FORMAT IS AS FOLLOWS -
0*$.SP 1
0*$.IN 5
0*$NAME#(DSNAME,DEFAULT=XXX) OR NAME#(DSTHIN,DEFAULT=XXX)
0*$.IN 0
0*$.SP 1
0*$***NOTE - IF THIS FIELD IS SPECIFIED AS A KEYWORD SUBFIELD, THE
0*$PARSE ALWAYS RESULTS IN AN INDICATION THAT THE KEYWORD WAS SPECIFIED.
0*$YOU MUST  DETERMINE WHETHER THE USER SPECIFIED ANYTHING BY
0*$CHECKING FOR THE PRESENCE OR ABSENCE OF A SUBFIELD (SEE SETDSN@).
0*$THIS IS A BUG WHICH WILL BE CORRECTED SOME DAY.
0*$.SP 1
0*$NAME CAN BE USED TO REFER TO THE SPECIAL CONTROL BLOCK BUILT FOR
0*$THIS PARAMETER.  '#(DSNAME' OR '#(DSTHIN' MUST BE CODED LITERALLY.
0*$'#(DSNAME' IS SPECIFIED FOR IF ONLY STANDARD DSNAMES ARE TO
0*$ACCEPTED, AND '#(DSTHIN' IS SPECIFIED IF AN ASTERISK (*) IS ALSO
0*$TO BE ACCEPTED, EITHER BY ITSELF OR AS ONE OF THE QUALIFIERS IN
0*$THE DSNAME.  DEFAULT IF
0*$OPTIONAL, WHERE XXX IS A DEFAULT DSNAME TO BE USED IF THE TERMINAL
0*$USER DOES NOT SPECIFY ONE.
0*$.SP 1
0*$THERE IS ALSO A SPECIAL FORMAT FOR KEYWORD PARAMETER
0*$SPECIFICATIONS AS FOLLOWS -
0*$.SP 1
0*$.IN 5
0*$KEYNAME#(DEFAULT=XXX,AAA,...,AAA)
0*$.IN 0
0*$KEYNAME WILL BE DEFINED AS FIXED BIN(15,0), AND CAN BE REFERRED TO
0*$IN THE PLI PROGRAM TO DETERMINE WHICH KEYWORD IN THE PARENTHESIZED
0*$LIST WAS SPECIFIED, IF ANY.  IF NONE WAS SPECIFIED, AND A DEFAULT
0*$WAS NOT SPECIFIED, THE KEYNAME VARIABLE WILL BE SET TO 0.
0*$.SP 1
0*$YOU MAY ALSO SPECIFY THAT THE VALUE FOR A KEYWORD PARAMETER MAY ONLY
0*$BE NUMERIC.  FORMAT IS AS FOLLOWS:
0*$.SP 1
0*$.IN 5
0*$.NF
0*$KEYWD(30#(NUMERIC))
0*$  OR
0*$KEYWD(#(NUMERIC))
0*$.FI L
0*$.IN 0
0*$.SP 1
0*$IN THE FIRST CASE, IF THE USER DOES NOT SPECIFY A KEYWORD VALUE,
0*$THE DEFAULT WILL BE 30.  IN THE SECOND CASE, IF THE USER DOES NOT
0*$SPECIFY A KEYWORD VALUE, IT WILL APPEAR TO THE PL/1 PROGRAM THAT THE
0*$USER DID SPECIFY THE KEYWORD WITH A VALUE OF 0.  UNLESS THE PROGRAM
0*$LOOKS IN THE COMMAND BUFFER, IT WILL NOT BE ABLE TO DETERMINE
0*$WHETHER OR NOT THE USER ACTUALLY SPECIFIED THE KEYWORD.
0*$.SP 1
0*$THERE IS ALSO A FORMAT TO SPECIFY THAT AN OPERAND WILL CONSIST OF
0*$A LIST OF ITEMS AS IN THIS EXAMPLE:
0*$.SP 1
0*$.IN 5
0*$ORDER(DIV,DEPT,PGMR)
0*$.IN 0
0*$.SP 1
0*$FOR POSITIONAL OPERANDS, THE FORMAT IS:
0*$.SP 1
0*$.IN 5
0*$NAME#(LIST)
0*$.IN 0
0*$.SP 1
0*$FOR KEYWORD OPERANDS, THE FORMAT IS:
0*$.IN 5
0*$.SP 1
0*$KEYWD(#(LIST))
0*$.IN 0
0*$.SP 1
0*$NOTE THAT A DEFAULT CANNOT BE GIVEN.  IF KEYWD(NAME#(LIST)) WERE
0*$SPECIFIED, NAME WOULD BE USED FOR THE NAME OF THE PDE BLOCK BUILT
0*$FOR THE SUB-OPERAND.  THE SYMBOLIC VARIABLE FOR THE PARAMETER WILL
0*$BE SET TO THE FIRST VALUE IN THE LIST.  TO ACCESS ALL THE VALUES,
0*$CODE SUCH AS THE FOLLOWING MAY BE USED:
0*$.SP 1
0*$.IN 5
0*$.NF
0*$@PROC(0,KEYWD(#(LIST));
0*$PDEPTR=ADDR(KEYWDSUB);
0*$IF KEYWD^=0
0*$  THEN DO WHILE(PDEPTR^=NULL);
0*$    WRKPTR=PDEIKPT;
0*$    PUT EDIT(SUBSTR(WRKSTR,1,PDEIKL))(A) SKIP(0*$);
0*$    PDEPTR=PDEIKLP;
0*$    END;
0*$.FI L
0*$.IN 0
0*$.SP 1
0*$WRKSTR ABOVE IS DEFINED AS A CHARACTER STRING BASED ON WRKPTR.
0*$NOTE:  SEE @FOREACH FOR CODE TO PROCESS #LIST.
0*$.SP 1
0*$THERE IS ALSO A SPECIAL FORMAT FOR KEYWORD PARAMETERS TO INDICATE
0*$THAT A SUBOPERAND IS OPTIONAL.  NORMALLY, IF YOU SPECIFIED
0*$KEYWD() ON THE @PROC STATEMENT, THAT KEYWORD MUST BE ENTERED
0*$AT THE TERMINAL WITH A PARENTHESIZED VALUE FOLLOWING IT.  IF THE
0*$KEYWORD IS ENTERED AT THE TERMINAL WITHOUT A PARENTHISIZED VALUE,
0*$A PROMPTING MESSAGE WILL BE PRINTED ASKING FOR A SUBOPERAND.
0*$ALSO, IF YOU HAD SPECIFIED JUST KEYWD ON THE @PROC STATEMENT,
0*$WITHOUT THE (), THEN YOU CAN ONLY ENTER THE KEYWD AT THE TERMINAL
0*$WITHOUT A PARENTHESIZED SUBOPERAND.  TO SPECIFY A KEYWORD OPERAND
0*$WHICH MAY BE ENTERED AT THE TERMINAL EITHER WITH OR WITHOUT A
0*$PARENTHISIZED SUBOPERAND, ENTER KEYWD(#(NOPROMPT)) ON THE @PROC
0*$STATEMENT.  THE PROGRAM CAN CHECK VARIABLE 'KEYWD' FOR A NONZERO
0*$VALUE TO DETERMINE IF THE KEYWORD WAS ENTERED AT THE TERMINAL, AND
0*$CAN CHECK FOR A NULL VALUE RETURNED FROM SYMC('&KEYWD') TO SEE IF A
0*$SUBOPERAND WAS ALSO ENTERED.
 */
         DCL (@PCLSTR,@PDLSTR,@CODSTR,NAME,PROMPT,DEFAULT) CHAR;
         DCL (@PCLLEN,@PDLLEN) FIXED;
         DCL (RETSTR,PDFT,PDSTR,NAMESUB,ENDSTR,LOPT,DSTHSW) CHAR;
         DCL (PCELEN,EOFOFF,PTLEN,PDLEN) FIXED;
         DCL (I,J,K,L,M,N) FIXED;
         DCL (ID,PDELEN) FIXED;
         DCL (MYPARM,TYPSTR) CHAR;
         DSTHSW = '00000111'; /* FLAG FOR DSNAME */
         @PSUBSW='1';
 /* NAME#(DSNAME<,DEFAULT=XXX>) */
         IF PROMPT='PROMPT'
              THEN MYPARM=NAME;
              ELSE MYPARM=DEFAULT;
         L=LENGTH(MYPARM);
         ID=INDEX(MYPARM,'#(NUMERIC)');
         IF ID^=0
              THEN DO;
                   TYPSTR='000000000000001000000010';
                        /* 1       2       3        */
                   IF PROMPT^='PROMPT'
                        THEN DO;
                             L=L-10;
                             DEFAULT=SUBSTR(MYPARM,1,L);
                             IF DEFAULT=''
                                  THEN DEFAULT='0';
                             END;
                   END;
              ELSE TYPSTR='0';
         ID=INDEX(MYPARM,'#(DSNAME');
         IF ID = 0
           THEN DO;
             ID=INDEX(MYPARM,'#(DSTHIN');
             IF ID ^= 0
               THEN DSTHSW = '00001000'; /* FLAG FOR DSTHING */
             END;
         IF ID^=0
              THEN DO;
                   IF ID > 1
                        THEN NAMESUB=SUBSTR(MYPARM,1,ID-1);
                        ELSE NAMESUB=NAME××'SUB';
                   N = LENGTH(NAMESUB);
                   IF SUBSTR(MYPARM,ID+8,1)=','
                        THEN DO;
                             PDSTR=SUBSTR(MYPARM,ID+17,L-ID-17);
                             PDLEN=LENGTH(PDSTR)-1;
                             IF SUBSTR(PDSTR,1,1)=''''
                                  THEN PDSTR=''''××PDSTR××'''';
                             PDFT='01';
                             PCELEN=9+PDLEN;
                             PDSTR=', 2 '××@NULL××' BIT(8) INIT('
                               ××@BIT(PDLEN,8)××'), 2 '××@NULL××
                               ' CHAR('××PDLEN+1××') INIT('''××
                               PDSTR××''')';
                             END;
                        ELSE DO;
                             IF PROMPT='PROMPT'
                                  THEN DO;
                                       PDFT='10';
                                       PCELEN=8+N;
                                       PDLEN=N-1;
                                       PDSTR=', 2 '××@NULL××' BIT(8) '××
                                       'INIT('××@BIT(PDLEN,8)××'), 2 '××
                                       @NULL××' CHAR('××N××') INIT('''××
                                       NAMESUB××''')';
                                       END;
                                  ELSE DO;
                                       PDSTR='';
                                       PDFT='00';
                                       PCELEN=7;
                                       END;
                             END;
                   IF PROMPT ^= 'PROMPT'
                        THEN DO;
                             EOFOFF=@PCLLEN+3+PCELEN;
                             @PCLSTR=@PCLSTR××', 2 '××@NULL××
                               ' BIT(8) INIT(''0''B), 2 '××@NULL××
                               ' FIXED BIN(15,0) INIT('××EOFOFF××')';
                             @PCLLEN=@PCLLEN+3;
                             END;
                   @PCLSTR=@PCLSTR××', 2 '××@NULL××' BIT(16) INIT(''001'
                     ××PDFT××'00000000000''B), 2 '××@NULL××
                     ' FIXED BIN(15,0) INIT('××PCELEN××'), 2 '××@NULL××
                     ' FIXED BIN(15,0) INIT('××@PDLLEN××'), 2 '××
                     @NULL××' BIT(8) INIT('''××DSTHSW××'''B)'××PDSTR;
                   PDELEN=24;
                   GO TO SETPDL;
                   END;
         ID = INDEX(MYPARM,'#(LIST)');
         IF ID ^= 0
              THEN DO;
                   L = ID-1;
                   MYPARM = SUBSTR(MYPARM,1,L);
                   IF PROMPT='PROMPT'
                        THEN NAME = MYPARM;
                   PDELEN = 12;
                   LOPT = '1';
                   END;
              ELSE DO;
                   PDELEN = 8;
                   LOPT = '0';
                   L = LENGTH(NAME);
                   END;
         PCELEN = L+13;
         PTLEN = L+4;
         ENDSTR='';
         IF PROMPT ^= 'PROMPT'
              THEN DO;
                   IF PROMPT = 'DEFAULT' × PROMPT = 'PROMPT2'
                        THEN DO;
                             @CODSTR=@CODSTR××' IF '××NAME××'^=0 THEN'××
                               ' DO;';
                             ENDSTR=' END;';
                             IF PROMPT='DEFAULT'
                                  THEN PDFT='01';
                                  ELSE PDFT='10';
                             PDLEN = LENGTH(DEFAULT)-1;
                             PCELEN = PCELEN+PDLEN+2;
                             PDSTR = DEFAULT;
                             END;
                        ELSE PDFT = '00';
                   EOFOFF = @PCLLEN+3+PCELEN;
                   @PCLSTR=@PCLSTR××', 2 '××@NULL××
                     ' BIT(8) INIT(''0''B), 2 '××@NULL××
                     ' FIXED BIN(15,0) INIT('××EOFOFF××')';
                   @PCLLEN=@PCLLEN+3;
                   NAMESUB = NAME××'SUB';
                   END;
              ELSE DO;
                   PDFT = '10';
                   PCELEN = PCELEN+L+1;
                   PDLEN = L-1;
                   PDSTR = NAME;
                   NAMESUB = NAME;
                   END;
         IF @LNPRMT = '1'
           THEN PDFT = '00';
         @PCLSTR=@PCLSTR××', 2 '××@NULL××' BIT(16) INIT(''100'××PDFT××
           '000'××LOPT××'0000000''B), 2 '××@NULL××
           ' FIXED BIN(15,0) INIT('××
           PCELEN××'), 2 '××@NULL××' FIXED BIN(15,0) INIT('××@PDLLEN××
           '), 2 '××@NULL××
           ' BIT(24) INIT('''××TYPSTR××'''B), 2 '××
           @NULL××' FIXED BIN(15,0) INIT('××PTLEN××'), 2 '××@NULL××
           ' FIXED BIN(15,0) INIT(18), 2 '××@NULL××' CHAR('××L××
           ') INIT('''××NAME××''')';
         IF PROMPT ^= ''
              THEN @PCLSTR=@PCLSTR××', 2 '××@NULL××
                ' BIT(8) INIT('××@BIT(PDLEN,8)××'), 2 '××@NULL××
                ' CHAR('××PDLEN+1××') INIT('''××PDSTR××''')';
         @CODSTR=@CODSTR××' PDEPTR=ADDR('××NAMESUB××'); '××
           'IF SUBSTR(PDEIKF,1,1) THEN DO; WRKPTR=PDEIKPT; '××
           '@SETL(&'××NAME××'=SUBSTR(WRKSTR,1,PDEIKL)); END;'××ENDSTR;
 SETPDL:
         @PDLSTR=@PDLSTR××', 2 '××NAMESUB××' CHAR('××PDELEN××')';
         @PCLLEN=@PCLLEN+PCELEN;
         @PDLLEN=@PDLLEN+PDELEN;
         RETURN(NAMESUB);
         % END @IKJID;
         % DCL @IKJKY ENTRY;
 % @IKJKY:  PROC(PARM,NAMELEN,L,KPCLLEN,PROMPT,DEFAULT,TPCLLEN,TPDLLEN,
              SUBSW) RETURNS(CHAR);
         DCL (PARM,PROMPT,DEFAULT) CHAR;
         DCL (NAMELEN,L,KPCLLEN,TPCLLEN,TPDLLEN) FIXED;
         DCL (KEYWD,SUBSW,IKJNAME,NAME,KSTR,DFTSW) CHAR;
         DCL (PCELEN,I,J,K,KPCELEN) FIXED;
         NAME = SUBSTR(PARM,1,NAMELEN);
         IKJNAME=', 2 '××@NULL××' BIT(8) INIT('××@BIT(NAMELEN-1,8)××
           '), 2 '××@NULL××' CHAR('××NAMELEN××') INIT('''××
           NAME××''')';
         IF NAMELEN = L
              THEN DO;
                   SUBSW='0';
                   PCELEN=5+NAMELEN;
                   DFTSW='0';
                   KSTR='';
                   KPCELEN=6;
                   PROMPT='';
                   DEFAULT='';
                   @CODSTR=@CODSTR××' IF '××NAME××'^=0 THEN @SETL(&'××
                     NAME××'='''××NAME××''');';
                   END;
              ELSE DO;
                   SUBSW='1';
                   PCELEN=7+NAMELEN;
                   IF L=NAMELEN+2
                        THEN DO;
                             DFTSW='0';
                             KSTR='';
                             KPCELEN=6;
                             PROMPT='PROMPT2';
                             DEFAULT=NAME××'SUB';
                             IF @LSUBSW='1'
                                  THEN DEFAULT=DEFAULT××'#(LIST)';
                             END;
                        ELSE DO;
                             KPCELEN=7+NAMELEN;
                             KSTR=', 2 '××@NULL××' BIT(8) INIT('××
                               @BIT(NAMELEN-1,8)××'), 2 '××@NULL××
                               ' CHAR('××NAMELEN××') INIT('''××NAME××
                               ''')';
                             DFTSW='1';
                             PROMPT='DEFAULT';
                             DEFAULT=SUBSTR(PARM,NAMELEN+2,
                               L-(NAMELEN+2));
                             END;
                   IKJNAME=IKJNAME××', 2 '××@NULL××
                     ' FIXED BIN(15,0) INIT('××TPCLLEN+1××')';
                   END;
         @PCLSTR=@PCLSTR××', 2 '××@NULL××' BIT(16) INIT('××
           '''0100'××DFTSW××'00000000000''B), 2 '××@NULL××
           ' FIXED BIN(15,0) INIT('××KPCELEN××'), 2 '××@NULL××
           ' FIXED BIN(15,0) INIT('××@PDLLEN××')'××KSTR××', 2 '××@NULL××
           ' BIT(16) INIT(''01100'××SUBSW××'0000000000''B), 2 '××
           @NULL××' FIXED BIN(15,0) INIT('××PCELEN××')'××IKJNAME;
         @PCLLEN=@PCLLEN+KPCLLEN;
         @PDLLEN=@PDLLEN+2;
         @PDLSTR=@PDLSTR××', 2 '××NAME××' FIXED BIN(15,0)';
         RETURN(NAME);
         % END @IKJKY;
         % DCL @PROC ENTRY;
         % DCL @KEYSPA ENTRY;
 % @KEYSPA:  PROC(PARM,PARMLEN,OFF,DFTNAM,DFTLEN,KNAMSTR)
           RETURNS(FIXED);
         DCL (PARM,DFTNAM,KNAMSTR) CHAR;
         DCL (PARMLEN,OFF,DFTLEN) FIXED;
         DCL (I,J,K,L) FIXED;
         I = INDEX(SUBSTR(PARM,OFF+1,PARMLEN-OFF),',');
         IF I = 0
              THEN I = PARMLEN-OFF;
         DFTLEN=I-1;
         DFTNAM=SUBSTR(PARM,OFF+1,DFTLEN);
         OFF=OFF+I;
         KNAMSTR=KNAMSTR××
           ', 2 '××@NULL××' BIT(16) INIT(''0110''B), 2 '××@NULL××
           ' FIXED BIN(15,0) INIT('××(5+DFTLEN)××'), 2 '××@NULL××
           ' BIT(8) INIT('××@BIT(DFTLEN-1,8)××'), 2 '××@NULL××
           ' CHAR('××DFTLEN××') INIT('''××DFTNAM××''')';
         RETURN(0);
         % END @KEYSPA;
         % DCL @KEYSP ENTRY;
 % @KEYSP:  PROC(PASS,PARM,TPCLLEN,TPDLLEN) RETURNS(FIXED);
         DCL (PASS,TPCLLEN,TPDLLEN) FIXED;
         DCL PARM CHAR;
         DCL (NAMELEN,PCELEN) FIXED;
         DCL (I,J,K,L,DFTLEN,FLEN) FIXED;
         DCL (NAME,DFTNAM,KDSTR,FSTR,DFTSW) CHAR;
         L = LENGTH(PARM);
         J = INDEX(PARM,'(');
         NAME = SUBSTR(PARM,1,J-2);
         FSTR=' ';
         IF L > J+8
              THEN IF SUBSTR(PARM,J+1,8)='DEFAULT='
                   THEN DO;
                        J=J+8;
                        I = @KEYSPA(PARM,L,J,DFTNAM,DFTLEN,FSTR);
                        PCELEN=12+2*DFTLEN;
                        KDSTR=', 2 '××@NULL××' BIT(8) INIT('××
                          @BIT(DFTLEN-1,8)××'), 2 '××@NULL××' CHAR('××
                          DFTLEN××') INIT('''××DFTNAM××''')';
                        DFTSW='1';
                        END;
                   ELSE DO;
                        PCELEN=6;
                        KDSTR='';
                        DFTSW='0';
                        END;
         FSTR=', 2 '××@NULL××' BIT(16) INIT(''0100'××DFTSW××
           '''B), 2 '××@NULL××' FIXED BIN(15,0) INIT('××PCELEN××
           '), 2 '××@NULL××' FIXED BIN(15,0) INIT('××@PDLLEN××')'××
           KDSTR××FSTR;
 NXTK:
         IF J >= L
              THEN DO;
                   IF PASS=1
                        THEN DO;
                             TPCLLEN=TPCLLEN+PCELEN;
                             TPDLLEN=TPDLLEN+2;
                             END;
                        ELSE DO;
                             @PCLSTR=@PCLSTR××FSTR;
                             @PCLLEN=@PCLLEN+PCELEN;
                             @PDLLEN=@PDLLEN+2;
                             @PDLSTR=@PDLSTR××', 2 '××NAME××
                               ' FIXED BIN(15,0)';
                             @CODSTR=@CODSTR××' @SETL(&'××NAME××
                               '='××NAME××');';
                             END;
                   RETURN(0);
                   END;
         I = @KEYSPA(PARM,L,J,DFTNAM,DFTLEN,FSTR);
         PCELEN=PCELEN+5+DFTLEN;
         GO TO NXTK;
         % END @KEYSP;
 % @PROC:  PROC(N,P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,
              P15,P16,P17,P18,P19,P20,P21,P22,P23,P24,P25,
              P26,P27,P28,P29,P30,P31,P32,P33,P34,P35)
              STATEMENT RETURNS(CHAR);
         DCL N FIXED;
         DCL (P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14) CHAR;
         DCL (P15,P16,P17,P18,P19,P20,P21,P22,P23,P24,P25) CHAR;
         DCL (P26,P27,P28,P29,P30,P31,P32,P33,P34,P35) CHAR;
         DCL (NAMELEN,KEYFOFF,KPCLLEN,TPCLLEN,TPDLLEN) FIXED;
         DCL (I,PASS,J,K,L) FIXED;
         DCL (PARM,NAMESUB,NAME,TPCLSTR,TPDLSTR,TCODSTR,DFLT) CHAR;
         DCL (DEFAULT,PROMPT,SUBSW) CHAR;
         KEYFOFF = 0;
         IF N > 0
              THEN DO I = 1 TO N;
                   IF I =  1 THEN PARM = P1; ELSE
                   IF I =  2 THEN PARM = P2; ELSE
                   IF I =  3 THEN PARM = P3; ELSE
                   IF I =  4 THEN PARM = P4; ELSE
                   IF I =  5 THEN PARM = P5; ELSE
                   IF I =  6 THEN PARM = P6; ELSE
                   IF I =  7 THEN PARM = P7; ELSE
                   IF I =  8 THEN PARM = P8; ELSE
                   IF I =  9 THEN PARM = P9; ELSE
                   IF I = 10 THEN PARM = P10; ELSE
                   IF I = 11 THEN PARM = P11; ELSE
                   IF I = 12 THEN PARM = P12; ELSE
                   IF I = 13 THEN PARM = P13; ELSE
                   IF I = 14 THEN PARM = P14; ELSE
                   IF I = 15 THEN PARM = P15; ELSE
                   IF I = 16 THEN PARM = P16; ELSE
                   IF I = 17 THEN PARM = P17; ELSE
                   IF I = 18 THEN PARM = P18; ELSE
                   IF I = 19 THEN PARM = P19; ELSE
                   IF I = 20 THEN PARM = P20; ELSE
                   IF I = 21 THEN PARM = P21; ELSE
                   IF I = 22 THEN PARM = P22; ELSE
                   IF I = 23 THEN PARM = P23; ELSE
                   IF I = 24 THEN PARM = P24; ELSE
                   IF I = 25 THEN PARM = P25; ELSE
                   IF I = 26 THEN PARM = P26; ELSE
                   IF I = 27 THEN PARM = P27; ELSE
                   IF I = 28 THEN PARM = P28; ELSE
                   IF I = 29 THEN PARM = P29; ELSE
                   IF I = 30 THEN PARM = P30; ELSE
                   IF I = 31 THEN PARM = P31; ELSE
                   IF I = 32 THEN PARM = P32; ELSE
                   IF I = 33 THEN PARM = P33; ELSE
                   IF I = 34 THEN PARM = P34; ELSE
                   IF I = 35 THEN PARM = P35;
                   PARM=@STRIP(PARM);
                   NAMESUB=@IKJID(@PCLLEN,@PDLLEN,@PCLSTR,
                     @PDLSTR,@CODSTR,PARM,'PROMPT');
                   END;
         TPCLSTR = '';
         TPDLSTR = '';
         TCODSTR = '';
         TPCLLEN = 0;
         TPDLLEN = 0;
         @PSUBSW='0';
         IF N < 34
              THEN DO PASS = 1 TO 2;
                   /* PASS 1 TO COUNT KEYWORD PARAMETERS AND TO DETERMIN
                      HOW MUCH PCL AND PDL SPACE WILL BE TAKEN UP SO
                      OFFSETS CAN BE CALCULATED */
                   /* PASS 2 TO ADD IKJKEYWD AND IKJIDENT SPACE TO PCL A
                      PDL.  ALSO, GENERATE IKJSUBF AND IKJIDENT SPACE IN
                      SEPEARATE STRINGS, WHICH WILL BE CONCATENATED TO P
                      AND PDL AT END. */
                   IF PASS = 2
                        THEN DO;
                             TPDLLEN=TPDLLEN+@PDLLEN;
                             TPCLLEN=TPCLLEN+@PCLLEN;
                             END;
                   DO I = N+1 TO 35;
                        IF I = 1  THEN PARM = P1; ELSE
                        IF I = 2  THEN PARM = P2; ELSE
                        IF I = 3  THEN PARM = P3; ELSE
                        IF I = 4  THEN PARM = P4; ELSE
                        IF I = 5  THEN PARM = P5; ELSE
                        IF I = 6  THEN PARM = P6; ELSE
                        IF I = 7  THEN PARM = P7; ELSE
                        IF I = 8  THEN PARM = P8; ELSE
                        IF I = 9  THEN PARM = P9; ELSE
                        IF I = 10 THEN PARM = P10; ELSE
                        IF I = 11 THEN PARM = P11; ELSE
                        IF I = 12 THEN PARM = P12; ELSE
                        IF I = 13 THEN PARM = P13; ELSE
                        IF I = 14 THEN PARM = P14; ELSE
                        IF I = 15 THEN PARM = P15; ELSE
                        IF I = 16 THEN PARM = P16; ELSE
                        IF I = 17 THEN PARM = P17; ELSE
                        IF I = 18 THEN PARM = P18; ELSE
                        IF I = 19 THEN PARM = P19; ELSE
                        IF I = 20 THEN PARM = P20; ELSE
                        IF I = 21 THEN PARM = P21; ELSE
                        IF I = 22 THEN PARM = P22; ELSE
                        IF I = 23 THEN PARM = P23; ELSE
                        IF I = 24 THEN PARM = P24; ELSE
                        IF I = 25 THEN PARM = P25; ELSE
                        IF I = 26 THEN PARM = P26; ELSE
                        IF I = 27 THEN PARM = P27; ELSE
                        IF I = 28 THEN PARM = P28; ELSE
                        IF I = 29 THEN PARM = P29; ELSE
                        IF I = 30 THEN PARM = P30; ELSE
                        IF I = 31 THEN PARM = P31; ELSE
                        IF I = 32 THEN PARM = P32; ELSE
                        IF I = 33 THEN PARM = P33; ELSE
                        IF I = 34 THEN PARM = P34; ELSE
                        IF I = 35 THEN PARM = P35;
                        IF PARM ^= ''
                             THEN DO;
                                  PARM=@STRIP(PARM);
                                  L=LENGTH(PARM);
                                  J=INDEX(PARM,'(');
                                  @LNPRMT = '0';
                                  @LSUBSW = '0';
                                  IF J=0
                                       THEN J=L+1;
                                       ELSE IF SUBSTR(PARM,J-1,2)='#('
                                            THEN DO;
                                                 K = @KEYSP(PASS,PARM,
                                                   TPCLLEN,TPDLLEN);
                                                 IF KEYFOFF=0
                                                      THEN KEYFOFF=
                                                        @PCLLEN;
                                                 GO TO ENDKEYSP;
                                                 END;
                                  NAMELEN=J-1;
                                  IF J+7 <= L
                                       THEN IF SUBSTR(PARM,J+1,7)=
                                         '#(LIST)'
                                            THEN DO;
                                                 @LSUBSW = '1';
                                                 L = NAMELEN+2;
                                                 PARM=SUBSTR(PARM,1,
                                                   NAMELEN)××'()';
                                                 END;
                                  IF J+11 <= L
                                       THEN IF SUBSTR(PARM,J+1,11)=
                                         '#(NOPROMPT)'
                                            THEN DO;
                                                 @LNPRMT = '1';
                                                 L = NAMELEN+2;
                                                 PARM=SUBSTR(PARM,1,
                                                   NAMELEN)××'()';
                                                 END;
                                  KPCLLEN=11+NAMELEN;
                                  IF NAMELEN<L
                                       THEN IF NAMELEN=L-2
                                            THEN KPCLLEN=KPCLLEN+2;
                                            ELSE KPCLLEN=KPCLLEN+3+
                                              NAMELEN;
                                  IF PASS=1
                                       THEN DO;
                                            TPDLLEN=TPDLLEN+2;
                                            TPCLLEN=TPCLLEN+KPCLLEN;
                                            IF KEYFOFF=0
                                                 THEN KEYFOFF=@PCLLEN;
                                            END;
                                       ELSE DO;
                                            NAME=@IKJKY(PARM,NAMELEN,L,
                                              KPCLLEN,PROMPT,DEFAULT,
                                              TPCLLEN,TPDLLEN,SUBSW);
                                            IF SUBSW='1' THEN
                                            NAMESUB=@IKJID(TPCLLEN,
                                              TPDLLEN,TPCLSTR,TPDLSTR,
                                              TCODSTR,NAME,PROMPT,
                                              DEFAULT);
                                            END;
                        ENDKEYSP: END;
                        END;
              IF PASS = 1
                   THEN DO;
                        K = TPDLLEN/4;
                        IF ((TPDLLEN > K*4) & (@PSUBSW='1'))
                             THEN DO;
                                  TPDLLEN=TPDLLEN+2;
                                  K = 1;
                                  END;
                             ELSE K = 0;
                        END;
              END;
         IF K = 1
              THEN @PDLSTR=@PDLSTR××', 2 '××@NULL××
                ' FIXED BIN(15,0)';
         IF TPDLLEN ^= 0
              THEN DO;
                   @PDLLEN=TPDLLEN;
                   @PDLSTR=@PDLSTR××TPDLSTR;
                   @PCLLEN=TPCLLEN;
                   @PCLSTR=@PCLSTR××TPCLSTR;
                   @CODSTR=@CODSTR××TCODSTR;
                   END;
         @PCLSTR=@PCLSTR××', 2 '××@NULL××' BIT(8) INIT(''0''B);';
         IF KEYFOFF=0
              THEN KEYFOFF=@PCLLEN;
         @PCLLEN=@PCLLEN+1;
         RETURN('DO; DCL 1 PCL UNALIGNED STATIC, 2 '××@NULL××
           ' FIXED BIN(15,0) INIT('××@PCLLEN××'), 2 '××@NULL××
           ' FIXED BIN(15,0) INIT('××@PDLLEN××'), 2 '××@NULL××
           ' FIXED BIN(15,0) INIT('××KEYFOFF××')'××@PCLSTR××
           @PDLSTR××';'××@CODSTR××' END;');
         % END @PROC;
 %PRINT;
