         GBLC  &COMP
*$.HE GENERALIZED SUBROUTINES - SYSCTLG/SYSVTOC
*$.HE PLI INTERFACE TO VTOC AND CATALOG MANAGEMENT
*$.PL 55
*$.PN 0
*$.PA
*$.SS
*$.NF
*$02/11/76
*$AUTHOR:  T. SMITH
*$SOURCE MODULE NAME:  SYSCTLG
*$DOCUMENTATION ID:  *$
*$.FI L
*$.SP 5
*$THESE SUBROUTINES, SYSCTLG AND SYSVTOC, PROVIDE THE PLI PROGRAMMER
*$WITH AN INTERFACE TO THE CATALOG AND VOLUMNE TABLE OF CONTENTS
*$MANAGEMENT ROUTINES.
*$.SP 1
*$.CE 1
********************************************************************$
*                                                     *
*$CALL FORMAT TO MAINTAIN & MODIFY THE CATALOG AND VTOC
*$.SP 1
*                                                     *
********************************************************************$
*                                                     *
*$.SP 1
*$.IN 0
*$READ A BLOCK FROM THE
*$CATALOG - BY NAME
*$.IN 5
*$CALL SYSCTLG('NAME',RET,DSNAME,CVOL,AREA)
*                                                     *
*$.IN 0
*$.SP 1
*$READ A BLOCK FROM THE
*$CATALOG - BY LOCATION
*$.IN 5
*$CALL SYSCTLG('BLOCK',RET,TTR,CVOL,AREA)
*                                                     *
*$.IN 0
*$.SP 1
*$BUILD AN INDEX
*$.IN 5
*$CALL SYSCTLG('BLDX',RET,NAME,CVOL)
*                                                     *
*$.IN 0
*$.SP 1
*$BUILD A GENERATION
*$INDEX
*$.IN 5
*$CALL SYSCTLG('BLDG',RET,NAME,CVOL,GDGCODE,
*$NUMBER)
*                                                     *
*                                                     *
*$.IN 0
*$.SP 1
*$ASSIGN AN ALIAS
*$.IN 5
*$CALL SYSCTLG('BLDA',RET,INDEX,CVOL,ALIAS)
*                                                     *
*$.IN 0
*$.SP 1
*$DELETE AN INDEX
*$.IN 5
*$CALL SYSCTLG('DLTX',RET,NAME,CVOL)
*                                                     *
*$.IN 0
*$.SP 1
*$DELETE AN ALIAS
*$.IN 5
*$CALL SYSCTLG('DLTA',RET,INDEX,CVOL)
*                                                     *
*$.IN 0
*$.SP 1
*$CONNECT CONTROL
*$VOLUMES
*$.IN 5
*$CALL SYSCTLG('LNKX',RET,INDEX,CVOL,NEWCVOL,
*$DEVTYPE)
*                                                     *
*$.IN 0
*$.SP 1
*$DISCONNECT CONTROL
*$VOLUMES
*$.IN 5
*$CALL SYSCTLG('DRPX',RET,INDEX,CVOL)
*                                                     *
*$.IN 0
*$.SP 1
*$CATALOG A DATA SET
*$.IN 5
*$CALL SYSCTLG('CAT',RET,NAME,CVOL,VOLLIST)
*                                                     *
*$.IN 0
*$.SP 1
*$REMOVE DATA SET REFERENCES
*$FROM THE CATALOG
*$.IN 5
*$CALL SYSCTLG('UNCAT',RET,NAME,CVOL)
*                                                     *
*$.IN 0
*$.SP 1
*$RECATALOG A DATA SET
*$.IN 5
*$CALL SYSCTLG('RECAT',RET,NAME,CVOL,VOLLIST)
*                                                     *
*$.IN 0
*$.SP 1
*$READ A DSCB FROM THE
*$VTOC - BY NAME
*$.IN 5
*$CALL SYSVTOC('SEARCH',RET,DSNAME,VOL,WKAREA)
*                                                     *
*$.IN 0
*$.SP 1
*$READ A DSCB FROM THE
*$VTOC - BY LOCATION
*$.IN 5
*$CALL SYSVTOC('SEEK',RET,CCHHR,VOL,WKAREA)
*                                                     *
*$.IN 0
*$.SP 1
*$DELETE A DATA SET
*$.IN 5
*$CALL SYSVTOC('SCRATCH',RET,DSNAME,VOLLIST,
*$OVRDCODE,UCBADDR)
*                                                     *
*                                                     *
*$.IN 0
*$.SP 1
*$CHANGE THE DATA SET
*$NAME IN A DSCB
*$.IN 5
*$CALL SYSVTOC('RENAME',RET,DSNAME,NEWNAME,
*$VOLLIST,UCBADDR)
*                                                     *
********************************************************************$
*                                                     *
********************************************************************$
*                                                     *
*$.SP 1
*$.IN 0
*$.CE 1
*$DEFINITION OF TERMS
*$.SP 1
*                                                     *
********************************************************************$
*                                                     *
*$.IN 0
*$ALIAS CHAR(*)
*$.IN 5
*$AN EIGHT BYTE NAME THAT IS TO BE USED
*$AS AN ALIAS FOR A HIGH LEVEL INDEX.
*$THIS RTNE WILL MOVE THE ALIAS TO A
*$DYNAMICALLY ALLOCATED AREA AND ENSURE THAT
*$IT IS PADDED TO 8 CHARS WITH BLANKS
*
*$.IN 0
*$AREA CHAR(265)
*$.IN 5
*$THE FIRST 256 BYTES OF THIS AREA
*$WILL CONTAIN THE BLOCK THAT IS READ FROM THE
*$CATALOG, AND THE LAST NINE BYTES OF THE WORK
*$AREA WILL CONTAIN THE RELATIVE TRACK ADDR AND
*$BLOCK ID (IN THE FORM TTR) OF THE BLOCK
*$FOLLOWING THE ONE READ INTO MAIN STORAGE AND THE
*$SERIAL NUMBER OF THE VOLUME ON WHICH THE BLOCK
*$WAS FOUND.  NOTE THAT THE NAME OF A STRUCTURE
*$CAN BE PASSED INSTEAD OF A 265-BYTE CHARACTER
*$STRING.  SINCE THE LOCATE SVC (26) REQUIRES THIS
*$AREA TO BE ON A DOUBLEWORD BOUNDARY, SYSCTLG
*$WILL DYNAMICALLY ALLOCATE A 265 BYTE AREA TO
*$PASS TO THE SVC.  ON RETURN FROM THE SVC, DATA
*$WILL BE MOVED FROM THE DYNAMICALLY ALLOCATED
*$AREA TO THE USERS PARAMETER.  THIS RELIEVES THE
*$USER FROM BEING CONCERNED WITH BOUNDARY ALIGNMENT
*
*$.IN 0
*$CCHHR CHAR(5)
*$.IN 5
*$ABSOLUTE TRACK ADDR (CCHHR) OF A DSCB.
*
*$.IN 0
*$CVOL CHAR(6)
*$.IN 5
*$6-BYTE VOLUME SERIAL NUMBER FOR THE
*$VOLUME TO BE PROCESSED.  IF 'SYSRES' IS
*$SPECIFIED, THE SYSTEM RESIDENCE VOLUME IS
*$PROCESSED,
*
*$.IN 0
*$DEVTYPE CHAR(4) OR BIT(32)
*$.IN 5
*$4-BYTE BINARY DEVICE CODE
*$OF THE VOLUME TO BE CONNECTED.  THE RTNE WILL
*$COPY THIS DEVTYPE TO A DYNAMICALLY ALLOCATED
*$AREA, AND CONCATENATE BEHIND IT THE 6-BYTE
*$VOLUME SERIAL PASSED AS 'NEWCVOL'.  THE
*$RESULTANT STRING IS PASSED TO THE SVC.
*
*$.IN 0
*$DSNAME CHAR(*)
*$.IN 5
*$A FULLY QUALIFIED DATA SET NAME.
*$THIS RTNE WILL MOVE THE NAME TO A DYNAMICALLY
*$ALLOCATED AREA AND ENSURE THAT, IF THE NAME IS
*$LESS THAN 44 CHARACTER, IT IS FOLLOWED BY A
*$BLANK.  NOTE THAT IS A GDG NAME WITH A RELATIVE GENERATION NUMBER
*$IS SPECIFIED AS A VARYING CHARACTER STRING, YOU SHOULD PAD THE
*$NAME WITH BLANKS TO ALLOW SYSCTLG TO RETURN THE EXPANDED DSNAME.
*$SYSCTLG WILL NOT CHANGE THE CURRENT LENGTH OF A VARYING CHARACTER
*$STRING.
*
*$.IN 0
*$GDGCODE CHAR(*)
*$.IN 5
*$MUST BE 'DELETE', 'EMPTY', OR 'NULL'.
*$'DELETE' SPECIFIES THAT ALL DATA SETS DROPPED
*$FROM A GENERATION DATA GROUP ARE TO BE DELETED,
*$I.E., THE SPACE ALLOCATED TO THE DATA SETS IS TO
*$BE MADE AVAILABLE FOR REALLOCATION.
*$'EMPTY' SPECIFIES THAT REFERENCES TO ALL DATA
*$SETS IN A GENERATION DATA GROUP CATALOGED IN THE
*$GENERATION INDEX ARE TO BE REMOVED FROM THE
*$INDEX WHEN THE NUMBER OF ENTRIES SPECIFIED IS
*$EXCEEDED.
*$'NULL' IS USED WHEN THE USER DOESNT WISH TO
*$SPECIFY EITHER OPTION.
*
*$.IN 0
*$INDEX CHAR(*)
*$.IN 5
*$THE NAME OF A HIGH LEVEL INDEX.
*$THIS RTNE WILL MOVE THE INDEX TO A
*$DYNAMICALLY ALLOCATED AREA AND ENSURE THAT
*$IT IS PADDED TO 8 CHARS WITH BLANKS
*
*$.IN 0
*$NAME CHAR(*)
*$.IN 5
*$A FULLY QUALIFIED NAME OF A DATA SET
*$OR INDEX LEVEL.  THE NAME CANNOT EXCEED 44
*$CHARACTERS.  THIS RTNE WILL MOVE THE NAME TO A
*$DYNAMICALLY ALLOCATED AREA AND ENSURE THAT, IF
*$THE NAME IS LESS THAN 44 CHARACTERS, IT IS
*$FOLLOWED BY A BLANK.
*
*$.IN 0
*$NEWCVOL CHAR(6)
*$.IN 5
*$THE 6-BYTE VOLUME SERIAL NUMBER OF THE$
*$CONTROL VOLUME THAT IS TO BE CONNECTED TO
*$ANOTHER CONTROL VOLUME
*
*$.IN 0
*$NEWNAME CHAR(*)
*$.IN 5
*$A FULLY QUALIFIED DATA SET NAME THAT
*$IS TO BE USED TO RENAME A DATA SET.
*$THIS RTNE WILL MOVE THE NAME TO A DYNAMICALLY
*$ALLOCATED AREA AND ENSURE THAT, IF THE NAME IS
*$LESS THAN 44 CHARACTERS, IT IS FOLLOWED BY A
*$BLANK.
*
*$.IN 0
*$NUMBER FIXED BIN (31,0)
*$.IN 5
*$SPECIFIES THE NUMBER OF DATA
*$SETS TO BE INCLUDED IN A GENERATION DATA GROUP.
*$THIS NUMBER MUST BE SPECIFIED, AND CANNOT EXCEED
*$255.
*
*$.IN 0
*$OVRDCODE CHAR(4)
*$.IN 5
*$MUST BE EITHER 'OVRD' OR 'NULL'.
*$SPECIFIES THAT THE EXPIRATION DATE IN THE DSCB
*$SHOULD BE IGNORED.  IF THIS OPTION IS NOT
*$DESIRED, SPECIFY 'NULL'.
*
*$.IN 0
*$RET BIT(32)
*$.IN 5
*$THE VALUE OF THIS FIELD IS SET BY THIS
*$RTNE ACCORDING TO THE CODE SET IN REGISTER 15 BY
*$THE SVC RTNE BEFORE RETURN OF CONTROL AS FOLLOWS
*
*$.IN 10
*$.SP 1
*$I - BITS 0 THRU 7 OF RET WILL BE SET EQUAL TO
*$BITS 24 THRU 31 OF REG 15  ON RETURN OF
*$CONTROL FROM THE SVC.  DEPENDING ON THE
*$FUNCTION BEING ATTEMPTED, THE SIGNIFICANCE
*$OF THIS CODE AND THE SETTINGS OF BITS 8
*$THRU 31 OF RET WILL VARY.  NOTE, HOWEVER,
*$THAT IF REG 15 IS ZERO, RET IS SET EQUAL
*$TO '0'B.
*
*$.SP 1
*$II - IF THE FUNCTION WAS -
*
*$'NAME'
*$'BLOCK' -
*
*$THEN THE CODES RETURNED IN REG 15 ARE AS
*$SPECIFIED BELOW AND RET IS SET ACCORDINGLY.
*
*$.IN 15
*$.SP 1
*$4 - EITHER THE REQUIRED CONTROL VOLUME
*$WAS NOT MOUNTED OR THE SPECIFIED
*$VOLUME DOES NOT CONTAIN A CATALOG DATA
*$SET (SYSCTLG).  THE VOLUME SERIAL OF
*$THE REQUIRED VOLUME IS CONTAINED IN
*$BYTES 260-265 OF THE WORK AREA.  BITS
*$16 - 31 OF RET ARE SET EQUAL TO THE
*$NUMBER OF INDEXED SEARCHED BEFORE THE
*$FAILURE WAS ENCOUNTERED.
*$.SP 1
*
*$8 - ONE OF THE NAMES OF THE QUALIFIED NAME
*$WAS NOT FOUND.  BITS 16 - 31 OF RET ARE
*$SET EQUAL TO THE NUMBER OF OF THE LAST
*$VALID NAME IN THE QUALIFIED NAME.  FOR
*$EXAMPLE, IF THE QUALIFIED NAME A.B.C.D
*$WERE SPECIFIED, BUT NAME C DID NOT
*$EXIST AT THE LEVEL SPECIFIED, BITS 16 -
*$31 WOULD CONTAIN THE BINARY CODE 2.
*$THE WORK AREA CONTAINS THE FIRST INDEX
*$BLOCK OF THE LAST VALID INDEX NAME, THE
*$SERIAL NUMBER OF THE VOLUME CONTAINING
*$THE INDEX (IN BYTES 260-265), AND THE
*$TTR (IN BYTES 257-259) OF THE NEXT
*$INDEX BLOCK.
*$.SP 1
*
*$12 - EITHER AN INDEX, AN ALIAS, OR A CONTROL
*$VOLUME POINTER WAS FOUND WHEN THE LIST
*$OF QUALIFIED NAMES WAS EXHAUSTED.  BITS
*$16 - 31 OF RET ARE SET EQUAL TO THE
*$NUMBER OF INDEXES SEARCHED BEFORE THE
*$FAILURE WAS ENCOUNTERED.
*$.SP 1
*
*$16 - A DATA SET RESIDES AT SOME LEVEL OF
*$INDEX OTHER THAN THE LOWEST INDEX LEVEL
*$SPECIFIED.  BITS 16 - 31 OF RET ARE
*$SET EQUAL TO THE NUMBER OF SIMPLE NAMES
*$REFERRED TO BEFORE THE DATA SET WAS
*$FOUND.  FOR EXAMPLE, IF THE QUALIFIED
*$NAME A.B.C.D WERE SPECIFIED, AND A
*$DATA SET WERE FOUND CATALOGED AT A.B.C,
*$BITS 16 - 31 OF RET WOULD CONTAIN THE
*$BINARY CODE 3.
*$.SP 1
*
*$20 - A SYNTAX ERROR EXISTS IN THE NAME (E.G.
*$NINE CHARACTERS, A DOUBLE DELIMITER,
*$BLANK NAME FIELD, ETC.).  BITS 16 - 31
*$OF RET ARE SET EQUAL TO THE NUMBER OF
*$INDEXES SEARCHED BEFORE THE FAILURE WAS
*$ENCOUNTERED.
*$.SP 1
*
*$24 - A PERMANENT I/O ERROR WAS FOUND WHEN
*$PROCESSING THE CATALOG.  BITS 16 - 31
*$OF RET ARE SET EQUAL TO THE NUMBER OF
*$INDEXES SEARCHED BEFORE THE FAILURE WAS
*$ENCOUNTERED.
*$.SP 1
*
*$28 - TTR SUPPLIED IS OUT OF THE SYSCTLG DATA
*$SET EXTENTS.  BITS 16 - 31 OF RET ARE
*$SET EQUAL TO THE NUMBER OF INDEXES
*$SEARCHED BEFORE THE FAILURE WAS
*$ENCOUNTERED.
*$.SP 1
*$.IN 10
*
*$III - IF THE FUNCTION WAS -
*
*$'SEARCH'
*$'SEEK' -
*
*$THEN THE CODES RETURNED IN REG 15 ARE AS
*$SPECIFIED BELOW AND RET IS SET ACCORDINGLY.
*$.IN 15
*$.SP 1
*
*$4 - THE REQUIRED VOLUME WAS NOT MOUNTED.
*$.SP 1
*
*$8 - THE DSCB WAS NOT FOUND IN THE VTOC OF
*$THE SPECIFIED VOLUME.
*$.SP 1
*
*$12 - A PERMANENT I/O ERROR WAS FOUND WHEN
*$PROCESSING THE SPECIFIED VOLUME.
*
*$.SP 1
*$20 - CCHH NOT WITHIN BOUNDARIES OF VTOC
*$EXTENT (SEEK MODE).
*
*$.SP 1
*$.IN 10
*$IV - IF THE FUNCTION WAS -
*
*$'CAT'
*$'UNCAT'
*$'RECAT' -
*
*$THEN THE CODES RETURNED IN REG  15 ARE AS
*$SPECIFIED BELOW AND RET IS SET ACCORDINGLY.
*$.SP 1
*$.IN 15
*
*$4 - EITHER THE REQUIRED CONTROL VOLUME WAS
*$NOT MOUNTED, OR THE SPECIFIED VOLUME
*$DOES NOT CONTAIN A CATALOG DATA SET
*$(SYSCTLG).
*$.SP 1
*
*$8 - THE EXISTING CATALOG STRUCTURE IS
*$INCONSISTENT WITH THE OPERATION
*$PERFORMED.  BECAUSE THE SVC USES THE
*$SEARCH ROUTINE ALSO USED IF THE
*$FUNCTION CODE WERE 'NAME' OR 'BLOCK',
*$BITS 8 - 15 OF RET ARE SET EQUAL TO
*$THE RETURN CODE THAT WOULD BE GIVEN
*$IN REG15 HAD THE FUNCTION CODE BEEN
*$'NAME' OR 'BLOCK'.  BITS 16 - 31 OF RET
*$ARE SET EQUAL TO THE NUMBER OF THE
*$INDEX LEVELS REFERRED TO DURING THE
*$SEARCH.
*
*$.SP 1
*$16 - THE INDEX STRUCTURE NECESSARY TO
*$CATALOG THE DATA SET DOES NOT EXIST.
*
*$.SP 1
*$20 - SPACE IS NOT AVAILABLE ON THE SPECIFIED
*$CONTROL VOLUME.
*$.SP 1
*
*$24 - AN ATTEMPT WAS MADE TO CATALOG AN
*$IMPROPERLY NAMED GENERATION DATA SET.
*
*$.SP 1
*$28 - A PERMANENT I/O ERROR WAS FOUND WHEN
*$PROCESSING THE CATALOG.
*
*$.SP 1
*$.IN 10
*$V - IF THE FUNCTION WAS -
*$'BLDX'
*$'BLDG'
*$'BLDA'
*$'DLTX'
*$'DLTA'
*$'LNKX'
*$'DRPX' -
*
*$THEN THE CODES RETURNED IN REG 15 ARE AS
*$SPECIFIED BELOW AND RET IS SET ACCORDINGLY.
*
*$.SP 1
*$.IN 15
*$4 - EITHER THE REQUIRED CONTROL VOLUME WAS
*$NOT MOUNTED, OR THE SPECIFIED VOLUME
*$DOES NOT CONTAIN A CATALOG DATA SET
*$(SYSCTLG).
*
*$.SP 1
*$8 - THE EXISTING CATALOG STRUCTURE IS
*$INCONSISTENT WITH THE OPERATION
*$PERFORMED.   BECAUSE THE SVC USES THE
*$SEARCH ROUTINE ALSO USED IF THE
*$FUNCTION CODE WERE 'NAME' OR 'BLOCK',
*$BITS 8 - 15 OF RET ARE SET EQUAL TO
*$THE RETURN CODE THAT WOULD BE GIVEN
*$IN REG15 HAD THE FUNCTION CODE BEEN
*$'NAME' OR 'BLOCK'.  BITS 16 - 31 OF RET
*$ARE SET EQUAL TO THE NUMBER OF THE
*$INDEX LEVELS REFERRED TO DURING THE
*$SEARCH.
*
*$.SP 1
*$12 - AN ATTEMPT WAS MADE TO DELETE AN INDEX
*$OR GENERATION INDEX THAT HAS AN ALIAS
*$OR HAS INDEXES OR DATA SETS CATALOGED
*$UNDER IT.  THE INDEX IS UNCHANGED.
*
*$.SP 1
*$16 - THE QUALIFIED NAME SPECIFIED WHEN
*$BUILDING AN INDEX OR GENERATION INDEX
*$IMPLIES AN INDEX STRUCTURE THAT DOES
*$NOT EXIST,.  THE HIGH LEVEL INDEX,
*$SPECIFIED WHEN CONNECTING CONTROL
*$VOLUMES, DOES NOT EXIST.
*
*$.SP 1
*$20 - SPACE IS NOT AVAILABLE ON THE SPECIFIED
*$CONTROL VOLUME.
*
*$.SP 1
*$28 - A PERMANENT I/O ERROR WAS FOUND WHEN
*$PROCESSING THE CATALOG.
*
*$.SP 1
*$.IN 10
*$VI - IF THE FUNCTION WAS -
*
*$'RENAME'
*$THEN THE CODES RETURNED IN REG 15 ARE AS
*$SPECIFIED BELOW AND RET IS SET ACCORDINGLY.
*
*$.IN 15
*$.SP 1
*$4 - NO VOLUMES CONTAINING ANY PART OF THE
*$DATA SET WERE MOUNTED, NOR WAS A UCB
*$ADDR CONTAINED IN REG 0.
*$.SP 1
*
*$8 - AN UNUSUAL CONDITION WAS ENCOUNTERED ON
*$ONE OR MORE VOLUMES.
*
*******************************************$
*$.SP 1
*$.IN 10
*$AFTER THE RENAME FUNCTION IS EXECUTED, THE
*$LAST BYTE OF EACH 12-BYTE VOLUME POINTER IN
*$THE VOLUME LIST INDICATES THE FOLLOWING
*$CONDITIONS IN BINARY CODE..
*$.IN 15
*$.SP 1
*
*$0 - THE DSCB FOR THE DATA SET HAS BEEN
*$RENAMED IN THE VTOC ON THE VOLUME
*$POINTED TO.
*$.SP 1
*
*$1 - THE VTOC OF THIS VOLUME DOES NOT
*$CONTAIN THE DSCB TO BE RENAMED.
*
*$.SP 1
*$3 - A DSCB CONTAINING THE NEW NAME ALREADY
*$EXISTS IN THE VTOC OF THIS VOLUME.
*
*$.SP 1
*$4 - A PERMANENT I/O ERROR WAS FOUND WHEN
*$PROCESSING THIS VOLUME.
*
*$.SP 1
*$5 - A DEVICE FOR MOUNTING THIS VOLUME WAS
*$UNAVAILABLE
*$.SP 1
*
*$6 - THE OPERATOR WAS UNABLE TO MOUNT THIS
*$VOLUME.
*
*$.SP 1
*******************************************$
*
*$.IN 10
*$VII - IF THE FUNCTION WAS -
*
*$'SCRATCH'
*
*$THEN THE CODES RETURNED IN REG 15 ARE AS
*$SPECIFIED BELOW AND RET IS SET ACCORDINGLY.
*
*$.IN 15
*$.SP 1
*$4 - SAME AS FOR RENAME
*
*$.SP 1
*$8 - SAME AS FOR RENAME
*$.SP 1
*$.IN 10
*
******************************************$
*$AFTER THE SCRATCH FUNCTION IS EXECUTED,
*$THE LAST BYTE OF EACH 12-BYTE VOLUME
*$POINTER IN THE VOLUME LIST INDICATES THE
*$FOLLOWING CONDITIONS IN BINARY CODE -
*
*$.IN 15
*$.SP 1
*$0 - THE DSCB FOR THE DATA SET HAS BEEN
*$DELETED FROM THE VTOC ON THE VOLUME
*$POINTED TO.
*$.SP 1
*
*$.SP 1
*$1 - SAME AS RENAME
*
*$.SP 1
*$3 - THE DSCB WAS NOT DELETED BECAUSE
*$EITHER THE OVRD OPTION WAS NOT
*$SPECIFIED OR THE RETENTION CYCLE HAS
*$NOT EXPIRED.
*
*$.SP 1
*$4 - SAME AS RENAME
*
*$.SP 1
*$5 - SAME AS RENAME
*
*$.SP 1
*$6 - SAME AS RENAME
*
*$.SP 1
*$.IN 0
******************************************$
*$.IN 0
*$TTR CHAR(3)
*$.IN 5
*$RELATIVE TRACK ADDRESS (TTR).  THIS
*$ADDRESS INDICATES THE POSITION, RELATIVE TO
*$THE BEGINNING OF THE CATALOG DATA SET, OF THE
*$TRACK CONTAINING THE BLOCK (TT), AND THE BLOCK
*$IDENTIFICATION ON THAT TRACK (R).
*
*$.IN 0
*$UCBADDR FIXED BIN(15,0)
*$.IN 5
*$THIS MUST BE A HALFWORD
*$ALIGNED ON A HALFWORD BOUNDARY, AND MUST
*$CONTAIN THE ADDR OF A UCB REPRESENTING AN I/O
*$DEVICE UPON WHICH UNMOUNTED VOLUMES TO BE
*$PROCESSED MAY BE MOUNTED.  IF A VOLUME IS NOT
*$MOUNTED, A MESSAGE IS ISSUED TO THE OPERATOR
*$REQUESTING HIM TO MOUNT THE VOLUME.  IF THE
*$OPERATOR CANNOT MOUNT THE REQUESTED VOLUME, HE
*$ISSUES A REPLY INDICATING THAT HE CANNOT FULFIL
*$THE REQUEST. A CONDITION CODE IS THEN SET IN
*$THE LAST BYTE OF THE VOLUME POINTER FOR THE
*$UNAVAILABLE VOLUME, AND THE NEXT VOLUME
*$INDICATED IN THE VOLUME LIST IS PROCESSED OR
*$REQUESTED. NOTE THAT THIS PARAMETER IS OPTIONAL
*
*$.IN 0
*$VOL CHAR(6)
*$.IN 5
*$SERIAL NUMBER OF THE VOLUME ON WHICH
*$THE REQUIRED DSCB IS STORED
*
*$.IN 0
*$VOLLIST
*$.IN 5
*$STRUCTURE - A VOLUME LIST.  THE
*$FIRST TWO BYTES OF THE LIST INDICATE THE NUMBER
*$OF VOLUME POINTERS THAT FOLLOW.  EACH 12-BYTE
*$VOLUME POINTER CONSISTS OF A 4-BYTE DEVICE CODE,
*$A 6-BYTE VOLUME SERIAL NUMBER, AND A 2-BYTE DATA
*$SET SEQUENCE NUMBER.  THE SEQUENCE NUMBER IS
*$ALWAYS ZERO FOR DIRECT ACCESS VOLUME.,  THE
*$VOLUME LIST MUST BEGIN ON A HALFWORD BNDRY.
*$TO ENSURE CORRECT BOUNDARY ALIGNMENT, THIS RTNE
*$COPIES THE VOLLIST TO A DYNAMICALLY ALLOCATED
*$AREA, AND PASSES THE ADDRESS OF THE COPY TO
*$THE SVC.  ON RETURN, THE DYNAMICALLY ALLOCATED
*$VOLLIST IS COPIED BACK OVER THE USER'S VOLLIST
*
*$.IN 0
*$WKAREA CHAR(148)
*$.IN 5
*$EITHER THE NAME OF A CHARACTER STRING
*$OR A STRUCTURE MAY BE PASSED.  SYSCTLG WILL
*$DYNAMICALLY ALLOCATE A 148-BYTE AREA TO PASS TO
*$THE SVC, AND ON RETURN FROM THE SVC, DATA IS
*$COPIED FROM THE DYNAMICALLY ALLOCATED AREA TO
*$THE USERS PARAMETER.  THIS IS DONE TO RELIEVE
*$THE USER FROM BEING CONCERNED ABOUT BOUNDARY
*$ALIGNMENT, SINCE THE SVC REQUIRES DOUBLEWORD
*$BOUNDARY ALIGNMENT.
*$.SP 1
*$IF A DATA SET NAME WAS SPECIFIED, THE FIRST
*$96 BYTES CONTAIN THE DATA PORTION OF A
*$FORMAT 1 DSCB, AND THE NEXT FIVE BYTES
*$CONTAIN THE ABSOLUTE TRACK ADDRESS OF THE
*$DSCB.  NOTE THAT THIS MEANS THE THE DSNAME (44 BYTES)
*$FIELD WILL BE OMITTED FROM THE DSCB IN WKAREA.
*
*$.SP 1
*$IF AN ABSOLUTE TRACK ADDRESS WAS SPECIFIED,
*$THE FIRST 140 BYTES CONTAIN THE KEY PORTION
*$AND DATA PORTION OF THE DSCB
*
********************************************************************$
*
*$THE SVCS ISSUED FOR EACH ENTRY POINT ARE AS FOLLOWS
*
*      LOCATE  - SVC 26
*      INDEX   - SVC 26
*      CATALOG - SVC 26
*      OBTAIN  - SVC 27
*      SCRATCH - SVC 29
*      RENAME  - SVC 30
*
********************************************************************
*
********************************************************************
*
* EDIT RULES USED IN THE CAMLST MACRO
*
********************************************************************
*
* * THE FIRST PARAMETER MUST EQUAL ONE OF THE FOLLOWING
*    CHARACTER STRINGS -
*        CAT
*        RECAT
*        UNCAT
*        BLDX
*        BLDG
*        BLDA
*        LNKX
*        DLTX
*        DLTA
*        DRPX
*        NAME
*        BLOCK
*        SEARCH
*        SEEK
*        SCRATCH
*        RENAME
*
* * BLDX,DLTX,DLTA,DRPX, & UNCAT ALL REQUIRE EXACTLY FOUR
*    PARAMETERS, BLDG REQUIRES 6, AND ALL THE REST REQUIRE FIVE.
*
*
* * IF THE FUNCTION CODE IS BLDG THEN THE FIFTH  PARAMETER MUST
*    BE 'DELETE' OR 'NULL'.
*
*
* * IF THE FUNCTION CODE IS BLDG THEN THE SIXTH PARAMETER MUST BE*
*    'EMPTY' OR 'NULL'.
*
*
* * IF THE FUNCTION CODE IS SCRATCH THEN THE FIFTH  PARAMETER
*    MUST BE 'OVRD' OR 'NULL'.
*
********************************************************************
SYSVTOC  CSECT
         USING *,15
         L     15,=V(SYSCTLG)
         BR    15
         DROP  15
         LTORG
SYSCTLG  PLIENTRY ,DSA=600,COMPILE=&SYSPARM
         USING KEYTAB,11
         NI    VOLFLAG,X'00'
         LM    2,7,0(1)
         SR    R8,R8                   R8=0
         SR    R9,R9                   R9=0
LOOP     EQU   *
         LA    15,LTRTAB(9)
         CLI   0(15),X'FF'             ARE THERE TOO MANY PARMS
         BC    8,BADFORM               BR IF YES
         IC    8,LTRTAB(9)             GET SET FOR EX
         EX    8,LTR                   TEST FOR LAST PARM
         EX    8,LOAD                  LOAD ACTUAL PARM ADDR
         LA    9,1(9)                  BUMP INDEX
         BC    2,LOOP
*                                      NOTE THAT AT THIS POINT,
*                                      R9 = # OF PARMS
         LA    11,TABLE
         XC    0(4,R3),0(R3)           CLEAR RETCODE
LOOPA    EQU   *
         CLI   KEYLEN,X'FF'            IS IT END OF TABLE
         BC    8,BADFORM               BR IF YES
         IC    8,KEYLEN                GET LEN FOR EX
         EX    8,CLC                   SEE IF THIS IS PROPER ENTRY
         BC    8,GOTENTRY              BR IF YES
         LA    11,TABLEN(11)           BUMP TABLE INDEX
         B     LOOPA                   GO TRY AGAIN
GOTENTRY EQU   *
         L     8,FLAGS
         SLL   8,8                     R8 = B1,B2,B3,X'00'
         ST    8,B1                    SET B123 IN PARM LIST
         TM    FLAGS,X'40'             IS IT SCRATCH
         BC    8,SETPARM               BR IF NOT
         CLC   0(4,6),=C'OVRD'         WAS OVRD SPECIFIED
         BC    7,NOVRD                 BR IF NOT
         MVI   B3,X'50'                INDICATE OVRDCODE = OVRD
NOVRD    EQU   *
         LR    6,5                     R6 = VOLLIST PTR
         SR    5,5                     R5 = 0
SETPARM  EQU   *
         STM   4,6,PAR2                SET PARM LIST ADDRESSES
         TM    FLAGS,X'02'             IS NAME, DSNAME, OR INDEX A *
*                                           PARM
         BC    8,NOX02                 BR IF NOT
         MVI   NAME,X'40'              CLEAR NAME TO
         MVC   NAME+1(44),NAME              BLANKS
         L     8,8(1)
         AIF   ('&COMP' EQ 'F').FOPT1
         TM    6(8),X'80'              IS IT VARYING STRING?
         BC    8,NOTVAR                BR IF NOT
         L     8,0(8)                  R8 = A(LEN)
         LH    15,0(8)                 RF=LEN
         LA    4,2(8)                  R4 = A(NAME0
         B     TSTLEN
NOTVAR   DS    0H
         LH    15,4(8)                 RF = LEN
TSTLEN   DS    0H
         AGO   .BYFOPT1
.FOPT1   ANOP
         LH    15,6(8)                 RF = LENGTH NAME
.BYFOPT1 ANOP
         CH    15,=H'44'               IS IT TOO BIG
         BC    4,NOTBIG                BR IF NOT
         LA    15,44                   MOVE ONLY 44
NOTBIG   EQU   *
         BCTR  15,0                    LESS 1 FOR EX
         EX    15,MVCNAME
         LA    4,NAME
         ST    4,PAR2
NOX02    EQU   *
         TM    FLAGS,X'01'             IS IT BLDA
         BC    8,NOX01                 BR IF NOT
         MVI   ALIAS,X'40'             CLEAR ALIAS TO
         MVC   ALIAS+1(7),ALIAS             BLANKS
         L     8,16(1)
         AIF   ('&COMP' EQ 'F').FOPT2
         TM    6(8),X'80'              IS IT VARYING STRING?
         BC    8,NOTVAR2               BR IF NOT
         L     8,0(8)                  R8 = A(LEN)
         LH    15,0(8)                 RF = LEN
         LA    6,2(8)                  R6 = A(ALIAS)
         B     TSTLEN2
NOTVAR2  DS    0H
         LH    15,4(8)                 RF = LEN(ALIAS)
TSTLEN2  DS    0H
         AGO   .BYFOPT2
.FOPT2   ANOP
         LH    15,6(8)                 RF = LENGTH ALIAS
.BYFOPT2 ANOP
         CH    15,=H'8'                IS IT TOO BIG
         BC    4,NOTBIGA               BR IF NOT
         LA    15,8                    MOVE ONLY 8
NOTBIGA  EQU   *
         BCTR  15,0                    LESS 1 FOR EX
         EX    15,MVCALIAS
         LA    6,ALIAS
         ST    6,PAR4
         B     CKMORA
NOX01    EQU   *
         CLC   KEY(4),=C'LNKX'         IS IT LNKX
         BC    7,NOTLINK               BR IF NOT
         MVC   NEWCVOL,0(6)            MOVE NEWCVOL
         MVC   DEVTYPE,0(7)            MOVE DEVTYPE
         LA    6,DEVTYPE
         ST    6,PAR4                  RESET PAR4
         B     CKMORA
NOTLINK  EQU   *
         TM    FLAGS,X'04'             IS THERE A THIRD PARM
         BC    1,GOTHREE               BR IF YES
         XC    PAR4,PAR4               ZERO PAR4 - ONLY 2 PARMS
GOTHREE  EQU   *
         SR    0,0
         TM    FLAGS,X'60'             IS IT SCRATCH OR RENAME
         BC    8,CKMORE                BR IF NOT
         BAL   8,SETVOL
         SR    0,0
         CH    9,=H'5'                 WERE 6 PARAMETERS PASSED
         BC    7,DOSVCCK               BR IF NOT
*                                      IF 6 PARAMETERS WERE PASSED,
*                                      THEN R7 = ADDR OF UCB
         LR    0,7                     0 = UCB ADDR
DOSVCCK  EQU   *
         TM    FLAGS,X'40'             IS IT SCRATCH
         BC    8,DOSVC30               BR IF NOT - IT IS RENAME
         LA    1,CAMLST                R1 = PARM ADDR
         SVC   29                      ISSUE SCRATCH SVC
         B     CKRET
DOSVC30  EQU   *
*                                      IT HAS TO BE RENAME
         MVI   NEWNAME,X'40'           CLEAR NEWNAME TO
         MVC   NEWNAME+1(44),NEWNAME        BLANKS
         L     1,4(13)
         L     1,24(1)
         L     8,12(1)
         AIF   ('&COMP' EQ 'F').FOPT3
         TM    6(8),X'80'              IS IT VARYING STRING?
         BC    8,NOTVAR3               BR IF NOT
         L     8,0(8)                  R8 = A(LEN)
         LH    15,0(8)                 RF = LEN
         LA    5,2(8)                  R5 = A(NEWNAME)
         B     TSTLEN3
NOTVAR3  DS    0H
         LH    15,4(8)                 RF = LEN
TSTLEN3  DS    0H
         AGO   .BYFOPT3
.FOPT3   ANOP
         LH    15,6(8)                 RF = LENGTH NEWNAME
.BYFOPT3 ANOP
         CH    15,=H'44'               IS IT TOO BIG
         BC    4,NOTBIGB               BR IF NOT
         LA    15,44                   MOVE ONLY 44
NOTBIGB  EQU   *
         BCTR  15,0                    LESS 1 FOR EX
         EX    15,MVCNEW
         LA    5,NEWNAME
         ST    5,PAR3
         LA    1,CAMLST
         SVC   30
         B     CKRET
CKMORE   EQU   *                       AT THIS POINT, WE KNOW IT
*                                      IS NOT SCRATCH OR RENAME
         TM    FLAGS,X'80'             IS IT SEARCH OR SEEK
         BC    8,CKMORA                BR IF NOT
         LA    1,WKAREA                ELSE, USE MY OWN WKAREA
         ST    1,PAR4
         LA    1,CAMLST
         SVC   27                      ISSUE OBTAIN SVC
         MVC   0(148,6),WKAREA         MOVE DATA TO USER'S WKAREA
         B     CKRET
CKMORA   EQU   *                       AT THIS POINT, WE KNOW IT IS
*                                      NOT SCRATCH, RENAME, SEEK, OR
*                                      SEARCH.  THIS MEANS IT MUST
*                                      HAVE SPECIFIED A CVOL.
         CLC   0(6,5),=C'SYSRES'       WAS CVOL = 'SYSRES' SPECIFIED?
         BC    8,NOCVOL                BR IF YES
         OI    B1,X'80'                INDICATE CVOL NE 'SYSRES'
         B     CKMORB
NOCVOL   EQU   *
         XC    PAR3,PAR3               CLEAR CVOL PTR
CKMORB   EQU   *
         TM    FLAGS,X'10'             IS IT NAME OR BLOCK
         BC    8,CKMORC                BR IF NOT
         LA    1,WKAREA                ELSE, USE MY OWN AREA
         ST    1,PAR4
         LA    1,CAMLST
         SVC   26                      ISSUE SVC 26
         MVC   0(256,6),WKAREA
         MVC   256(9,6),WKAREA+256
         B     CKRET
CKMORC   EQU   *
         TM    FLAGS,X'08'             IS IT BLDG
         BC    8,DOSVC26               BR IF NOT
         STC   7,OPT3                  SET NUMBER IN PARM LIST
         AIF   ('&COMP' EQ 'F').FOPT4
         L     1,4(13)
         L     1,24(1)
         L     1,16(1)
         TM    4(1),X'80'              IS IT VARYING STRING?
         BC    8,NOTVAR4               BR IF NOT
         LA    6,2(6)
NOTVAR4  DS    0H
.FOPT4   ANOP
         CLC   0(4,6),=C'NULL'         IS GDGCODE = 'NULL'
         BC    8,DOSVC26               BR IF YES
         CLC   0(5,6),=C'EMPTY'        IS GDGCODE = 'EMPTY'
         BC    7,CKDEL                 BR IF NOT
         MVI   B3,X'08'                IND GDGCODE = 'EMPTY'
         B     DOSVC26
CKDEL    EQU   *
         CLC   0(6,6),=C'DELETE'       IS GDGCODE = 'DELETE'
         BC    7,BADFORM               BR IF NOT
         MVI   B3,X'40'                IND GDGCODE = 'DELETE'
DOSVC26  EQU   *
         TM    B1,X'30'                IS IT CAT OR RECAT
         BC    8,DOSVC26A              BR IF NOT
         BAL   8,SETVOL
DOSVC26A EQU   *
         LA    1,CAMLST
         SVC   26
CKRET    EQU   *
         LTR   15,15                   WAS IT GOOD RET
         BC    8,EXIT                  BR IF YES
         STC   15,0(3)                 SET RET WITH R15
         STC   1,1(3)                  SET RET WITH R1
         STC   0,3(3)
         SRL   0,8
         STC   0,2(3)
         B     EXIT
BADFORM  EQU   *
         MVI   0(3),X'40'              INDICATE BAD FORMAT
EXIT     EQU   *
         TM    VOLFLAG,X'80'
         BC    8,EXITA
         LH    2,VOLCNT
         MH    2,=H'12'
         LA    2,2(2)                  R2 = LENGTH TO MOVE
         LR    1,6                     R1 = TO ADDR = USER'S VOLLIST
         L     14,PAR4                 R14 = FROM ADDR = VDA
         BAL   8,MVCBACK
EXITA    DS    0H
         TM    FLAGS,X'02'             SHOULD NAME BE MOVED BACK?
         BC    8,EXITB                 BR IF NOT
         L     1,4(13)
         L     1,24(1)
         L     1,8(1)                  R1 = A(SDV.NAME)
         L     2,0(1)                  R1 = A(NAME)
         AIF   ('&COMP' EQ 'F').FOPT5
         LH    3,4(1)                  R3 = LEN IF NOT VAR
         TM    6(1),X'80'              IS IT VARYING?
         BC    8,NV1                   BR IF NOT
         LH    3,0(2)                  CHANGE LEN
         LA    2,2(2)                  BUMP A(NAME)
NV1      DS    0H
         AGO   .BYFOPT5
.FOPT5   ANOP
         LH    3,6(1)                  R3 = LEN(NAME)
.BYFOPT5 ANOP
         BCTR  3,0                     LESS 1 FOR EX
         EX    3,MVCBN
EXITB    PLIEXIT
SETVOL   EQU   *
         OI    VOLFLAG,X'80'           IND VOLLIST TO RESET
         MVC   VOLCNT,0(6)             BNDRY ALIGN VOLCNT
         LH    2,VOLCNT                R2 = VOLCNT FROM VOLLIST
         MH    2,=H'12'
         LA    2,10(2)                 R2 = LENGTH FOR VDA
         LR    0,2
         AIF   ('&COMP' EQ 'F').FOPT6
         N     0,NMASK                 ROUND TO DBLEWD
         AH    0,=H'8'
         L     1,76(13)                R1=A(NAB)
         ALR   0,1                     R0=A(NEW NAB)
         CL    0,12(12)                COMPARE TO A(END-OF-SEGMENT)
         BNH   BYVDACA                 BR IF OD
         L     15,72(12)               ELSE GET NEW SEGMENT
         BALR  14,15
BYVDACA  DS    0H
         ST    0,76(13)                SET NEW A(NAB)
         ST    0,80(13)                SET NEW A(END PROLOGUE NAB)
         LA    1,0(1)                  CLEAR HI-BYTE
         AGO   .BYFOPT6
.FOPT6   ANOP
         L     15,=V(IHESADB)
         BALR  14,15                   ON RETURN, R1 = ADDR VDA
         LA    1,8(1)                  BUMP PAST CONTROL WORDS
.BYFOPT6 ANOP
         ST    1,PAR4                  RESET PAR4
         LR    14,6                    R14 = ADDR USER'S VOLLIST
MVCBACK  EQU   *
         LA    15,255                  RF = INITIAL EX MVCLEN
         LA    0,256                   R7 = 256
         SR    1,0
         SR    14,0
         B     INLOOP
MVCLOOP  EQU   *
         LA    1,256(1)                BUMP TO ADDR
         LA    14,256(14)              BUMP FROM ADDR
         EX    15,MVCVOL
         SR    2,0
INLOOP   EQU   *
         CR    2,0                     IS LEN LEFT LE 256
         BC    2,MVCLOOP               BR IF NOT
         LTR   15,2                    IS LEN LEFT 0++C 751,752
         BCR   8,8                     BR IF YES
         LR    0,2                     FIX IT FOR LAST TEST
         BCTR  15,0                    DECREMENT FOR EX
         B     MVCLOOP
LTRTAB   DC    X'223344556677FF'
         DS    0H
LTR      LTR   0,0
LOAD     L     0,0(0)
CLC      CLC   KEY(0),0(2)
MVCALIAS MVC   ALIAS(0),0(6)
MVCNAME  MVC   NAME(0),0(4)
MVCNEW   MVC   NEWNAME(0),0(5)
MVCVOL   MVC   0(0,1),0(14)
MVCBN    MVC   0(0,2),NAME
NMASK    DC    0A(0),X'00FFFFF8'
TABLE    DS    0F
         DC    AL1(3)
         DC    CL7'NAME'
         DC    B'00010110' IT IS NAME, USES DSNAME AND 3 PARMS
         DC    X'44',X'00',X'00'  B1,B2,B3
*
         DC    AL1(4)
         DC    CL7'BLOCK'
         DC    B'00010100' IT IS BLOCK & 3 PARMS
         DC    X'42',X'00',X'00'  B1,B2,B3
*
         DC    AL1(3)
         DC    CL7'BLDX'
         DC    B'00000010' ONLY 2 PARMS TO STORE, USES NAME
         DC    X'04',X'40',X'00'
*
         DC    AL1(3)
         DC    CL7'BLDG'
         DC    B'00001010' IT IS BLDG & ONLY 2 PARMS TO STORE, USED NAM
         DC    X'04',X'20',X'00'
*              FOR GDGCODE=EMPTY, B3 = X'08'
*              FOR GDGCODE=DELETE, B3 = X'40'
*
         DC    AL1(3)
         DC    CL7'BLDA'
         DC    B'00000111' IT IS BLDA, USES INDEX AND 3 PARMS
         DC    X'44',X'10',X'00'
*
         DC    AL1(3)
         DC    CL7'DLTX'
         DC    B'00000010'   USES NAME
         DC    X'04',X'04',X'00'
*
         DC    AL1(3)
         DC    CL7'DLTA'
         DC    B'00000010' USES INDEX
         DC    X'04',X'01',X'00'
*
         DC    AL1(3)
         DC    CL7'LNKX'
         DC    B'00000110' USES INDEX
         DC    X'44',X'08',X'00'
*
         DC    AL1(3)
         DC    CL7'DRPX'
         DC    B'00000010' USES INDEX
         DC    X'04',X'00',X'80'
*
         DC    AL1(2)
         DC    CL7'CAT'
         DC    B'00000110'   USES NAME
         DC    X'64',X'00',X'00'
*
         DC    AL1(4)
         DC    CL7'UNCAT'
         DC    B'00000010'   USES NAME
         DC    X'0C',X'00',X'00'
*
         DC    AL1(4)
         DC    CL7'RECAT'
         DC    B'00000110'   USES NAME
         DC    X'54',X'00',X'00'
*
         DC    AL1(5)
         DC    CL7'SEARCH'
         DC    B'10000110' IT IS SEARCH, USES DSNAME AND 3 PARMS
         DC    X'C1',X'00',X'00'
*
         DC    AL1(3)
         DC    CL7'SEEK'
         DC    B'10000100' IT IS SEEK & 3 PARMS
         DC    X'C0',X'80',X'00'
*
         DC    AL1(6)
         DC    CL7'SCRATCH'
         DC    B'01000110' IT IS SCRATCH, USES DSNAME AND 3 PARMS
         DC    X'41',X'00',X'40'
*              FOR OVRDCODE = 'OVRD',B3 = X'50'
*
         DC    AL1(5)
         DC    CL7'RENAME'
         DC    B'00100110' IT IS RENAME, USES DSNAME, AND 3 PARMS
         DC    X'C1',X'00',X'20'
*
         DC    X'FF' END-OF-TABLE
********************************************************************
         LTORG
KEYTAB   DSECT
KEYLEN   DS    CL1 *    CONTAINS THE NUMBER OF SIGNIFICANT CHARACTERS
*                       MINUS ONE WHICH ARE STORE LEFT JUSTIFIED IN
*                       THE FOLLOWING FIELD,
KEY      DS    CL7
FLAGS    DS    CL1 * BIT
*                     0 = 1 IF IT IS SEARCH OR SEEK - USES WKAREA
*                           PARM & DOES NOT USE CVOL
*                     1 = 1 IF IT IS SCRATCH - USES OVRDCODE &
*                           UCBADDR, DOES NOT USE CVOL & DUMMY PARM
*                           MUST BE INSERTED
*                     2 = 1 IF IT IS RENAME - USES UCBADDR & DOES
*                           NOT USE CVOL AND USES NEWNAME
*                     3 = 1 IF IT IS NAME OR BLOCK (USES AREA PARM)
*                     4 = 1 IF IT IS BLDG - USES CDCCODE & NUMBER
*                     5 = 1 IF THREE PARAMETERS ARE TO BE STORED IN
*                           THE SVC PARM LIST - IN THE CASE OF
*                           SCRATCH, ONE OF THESE WILL BE THE
*                           INSERTED DUMMY
*                     6 = 1 IF THE NAME, DSNAME OR INDEX PARM IS USED
*                     7 = 1 IF IT IS BLDA
*
B123     DS    CL3 * THREE BYTES OF FLAGS PASSED TO THE SVC.
*  IN ALL CASES WHERE BITS 0 AND 1 OF FLAGS ARE OFF, CVOL IS THE 4TH
*  PARAMETER.  IF CVOL NE 'SYSRES', BIT 0 OF B1 IS SET TO 1.
*
TABLEN   EQU   *-KEYTAB
*
DSA      DSECT
CAMLST   DS    0F
B1       DS    CL1 BIT
*                   0 = 1 IF CVOL='SYSRES'WAS SPECIFIED
*                         IF VOL WAS SPECIFIED
*                         IF NEWNAME WAS SPECIFIED
*                   1 = 1 IF AREA WAS SPECIFIED
*                         IF ALIAS WAS SPECIFIED
*                         IF NEWCVOL WAS SPECIFIED
*                         IF VOLLIST WAS SPECIFIED
*                         IF WKAREA WAS SPECIFIED
*                   2 = 1 IF 'CAT' WAS SPECIFIED
*                   3 = 1 IF 'RECAT' WAS SPECIFIED
*                   4 = 1 IF 'UNCAT' WAS SPECIFIED
*                   5 = 1 IF CAT/RECAT/UNCAT/BLDX/BLDG/BLDA/LNKX/
*                            DLTX/DLTA/DRPX/NAME WAS SPECIFIED
*                   6 = 1 IF 'BLOCK' WAS SPECIFIED
*                   7 = 1 IF SEARCH/SCRATCH/RENAME WAS SPECIFIED
*
B2       DS    CL1 BIT
*                   0 = 1 IF 'SEEK' WAS SPECIFIED
*                   1 = 1 IF 'BLDX' WAS SPECIFIED
*                   2 = 1 IF 'BLDG' WAS SPECIFIED
*                   3 = 1 IF 'BLDA' WAS SPECIFIED
*                   4 = 1 IF 'LNKX' WAS SPECIFIED
*                   5 = 1 IF 'DLTX' WAS SPECIFIED
*                   6 = 0
*                   7 = 1 IF 'DLTA' WAS SPECIFIED
*
B3       DS    CL1 BIT
*                   0 = 1 IF 'DRPX' WAS SPECIFIED
*                   1 = 1 IF 'SCRATCH' OR 'BLDG' WITH
*                            GDGCODE = 'DELETE' WAS SPECIFIED      *
*                   2 = 1 IF 'RENAME' WAS SPECIFIED
*                   3 = 1 IF 'SCRATCH' WITH OVRDCODE = 'OVRD'
*                            WAS SPECIFIED
*                   4 = 1 IF GDGCODE = 'EMPTY' WAS SPECIFIED       *
*                   5 = 0
*                   6 = 0
*                   7 = 0
*
OPT3     DS    CL1 CONTAINS EITHER 0 OR THE VALUE FROM THE PARAMETER
*                  NAMED NUMBER, WHICH IS USED ONLY WITH BLDG
PAR2     DS    F   CONTAINS THE ADDRESS OF THE THIRD  PARAMETER
*                  PASSED TO THIS RTNE.  DEPENDING ON THE OPTION
*                  BEING USED, PAR2 WILL CONTAIN THE ADDRESS OF
*                  ONE OF THE FOLLOWING -
*                       DSNAME
*                       TTR
*                       NAME
*                       INDEX
*                       CCHHR
*
PAR3     DS    F   IN THE CASES WHERE THE 4TH   PARAMETER IS CVOL,
*                  IF CVOL NE 'SYSRES', PAR3 WILL CONTAIN THE ADDR
*                  OF CVOL.  IF CVOL = 'SYSRES', PAR3 WILL BE ZERO.
*
*                  IN THE CASES WHERE THE 4TH   PARAMETER IS NOT
*                  CVOL (SEARCH, SEEK, SCRATCH, AND RENAME), PAR3
*                  CONTAINS THE ADDR OF THE 4TH   PARAMETER.
*                  DEPENDING ON THE OPTION BEING USED, PAR3 WILL
*                  CONTAIN THE ADDR OF ONE OF THE FOLLOWING -
*                       VOL
*                       ZERO FOR SCRATCH
*                       NEWNAME
PAR4     DS    F   THE NAME OF THE FIELD WHOSE ADDRESS IS STORED IN
*                  THIS FIELD IS LISTED FOLLOWING THE RELATED
*                  FUNCTION CODE.  PAR4 DOES NOT EXIST FOR THOSE
*                  FUNCTION CODES NOT LISTED
*                      'NAME'    - AREA
*                      'BLOCK'   - AREA
*                      'BLDA'    - ALIAS
*                      'LNKX'    - NEWCVOL
*                      'CAT'     - VOLLIST
*                      'RECAT'   - VOLLIST
*                      'SEARCH'  - WKAREA
*                      'SEEK'    - WKAREA
*                      'SCRATCH' - VOLLIST
*                      'RENAME'  - VOLLIST
WKAREA   DS    0D,CL265
NAME     DS    CL45
ALIAS    DS    CL8
NEWNAME  DS    CL45
DEVTYPE  DS    CL4
NEWCVOL  DS    CL6
VOLFLAG  DS    CL1
VOLCNT   DS    H
DSALEN   EQU   *-DSA
 END
