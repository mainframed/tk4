GPSSINTF CSECT
         SAVER RETCTL,LV=DSALEN,SP=1
         TGSREQU
         USING DSA,RD
         MVC   DSACON,LIBDCB
         LR    RB,R1
         USING CPPL,RB
         LA    RA,MYPPL
         USING PPL,RA
         MVC   PPLUPT,CPPLUPT
         MVC   PPLECT,CPPLECT
         LA    R1,MYECB
         ST    R1,PPLECB
         SR    R1,R1
         ST    R1,MYECB
         L     R1,=V(PCL)
         ST    R1,PPLPCL
         LA    R1,PDLAWD
         ST    R1,PPLANS
         MVC   PPLCBUF,CPPLCBUF
         LA    R1,MYPPL
         LINK  EP=IKJPARS
         LTR   RF,RF
         BC    7,RETCTL
         DROP  RA
         LA    R1,INSDV
         ST    R1,TROUTPRM
         LA    R1,OUTSDV
         ST    R1,TROUTPRM+4
         LA    R1,2
         SLL   R1,16
         ST    R1,INSDV+4
         LA    R1,4
         SLL   R1,16
         ST    R1,OUTSDV+4
         LA    R7,MYDA08
         USING DAPB08,R7
         LA    R6,MYDA0C
         USING DAPB0C,R6
         XC    MYDA0C,MYDA0C
         MVC   DA0CCD(2),=H'12'
         XC    MYDA08,MYDA08
         MVC   DA08CD(2),=H'8'
         LA    R1,MYDSN
         ST    R1,DA08PDSN
         OI    DA08DSP1,DA08SHR
         OI    DA08DPS2,DA08KEEP
         OI    DA08DPS3,DA08KEP
         OI    DA08CTL,DA08PERM
         LA    R8,MYDAPL
         USING DAPL,R8
         MVC   DAPLUPT,CPPLUPT
         MVC   DAPLECT,CPPLECT
         LA    R1,MYECB
         ST    R1,DAPLECB
         MVC   DAPLPSCB,CPPLPSCB
         LA    R1,MYDA08
         ST    R1,DAPLDAPB
         L     RA,PDLAWD
         USING IKJPARMD,RA
         CLC   LIB,=H'0'               LIB SPECIFIED?
         BC    8,NOLIB                 BR IF NOT
         LA    R9,LIBSUBI
         USING PDEDSN,R9
DSNLUP1  DS    0H
         L     R1,PDEDSNA              R1 = A(NXT DSN)
         LH    R2,PDEDSNL              R2 = LEN(NXT DSN)
         STH   R2,MYDSN                STORE LEN
         BCTR  R2,0                    LESS 1 FOR EX
         MVC   MYDSN+2(44),=CL44' '
         EX    R2,MVCDSN
         B     BYMVCX
MVCDSN   MVC   MYDSN+2(0),0(R1)
BYMVCX   DS    0H
         NI    DA08CTL,X'DF'
         TM    PDEDSNF,X'40'           IS NAME IN QUOTES
         BC    1,NOPRFX                BR IF YES
         OI    DA08CTL,X'20'           PREFIX USERID
         LH    R1,MYDSN                R1=LEN(DSN)
         CH    R1,=H'5'                IS NAME AT LEAST 5 BYTES?
         BC    4,SETPRFX               BR IF NOT
         LA    RF,MYDSN-3(R1)          RF=A(.LOAD) MAYBE
         CLC   0(5,RF),=CL5'.LOAD'     IS QUAL LOAD?
         BC    8,NOPRFX                BR IF YES
SETPRFX  LA    RF,MYDSN+2(R1)
         MVC   0(5,RF),=CL5'.LOAD'     SET QUAL
         LA    R1,5(R1)
         STH   R1,MYDSN
NOPRFX   DS    0H
         MVC   DA08DDN(8),=CL8' '
         MVC   DA08UNIT(8),=CL8' '
         MVC   DA08SER(8),=CL8' '
         MVC   DA08MNM(8),=CL8' '
         MVC   DA08PSWD(8),=CL8' '
         LR    R1,R8
         LINK  EP=IKJEFD00
         LTR   RF,RF                   ALLOCATE OK?
         BC    7,CKERR                 BR IF NOT
         LH    R1,DA0CNUMB
         LR    R2,R1
         LA    R1,1(R1)
         STH   R1,DA0CNUMB             BUMP DDNAME COUNT FOR CONCAT
         SLL   R2,3                    R2 = OFFSET FOR NEXT DDNAME
         LA    R2,DA0CDDNA(R2)
         MVC   0(8,R2),DA08DDN         MOVE DDNAME TO CONCAT LIST
         L     R9,PDEDSNXT             GET PDE FOR NXT DSN
         LTR   R9,R9                   IS IT GOOD PTR?
         BC    2,DSNLUP1               BR IF YES
         LA    R1,MYDA0C
         ST    R1,DAPLDAPB
         LR    R1,R8
         LINK  EP=IKJEFD00
         LTR   RF,RF                   CONCATENATE OK?
         BC    7,CKERR                 BR IF NOT
         MVC   DCBDDNAM(8),DA0CDDNA    MOVE DDNAME TO DCB
         LA    R2,DSADCB
         LA    R1,DSAOPEN
         OPEN  ((R2)),MF=(E,(1))
NOLIB    DS    0H                      NOW SET PARM LIST
         LA    R1,MYPARM
         ST    R1,MYPARMA
         OI    MYPARMA,X'80'
         SR    R1,R1
         STH   R1,MYPARM
         CH    R1,PARM                 WAS A PARM SUPPLIED?
         BC    8,ATTACH                BR IF NOT
         LA    R9,PARMSUBI
         L     R5,PDEDSNA              R5 = A(IN PARM)
         LH    R4,PDEDSNL              R4 = LEN(PARM)
         STH   R4,MYPARM               SET LEN(PARM)
         BCTR  R4,0                    LESS 1 FOR EX
         EX    R4,MVCPARM
         B     ATTACH
MVCPARM  MVC   MYPARM+2(0),0(R5)
ATTACH   DS    0H
         MVC   PGMNAME,=CL8' '
         LA    R9,PGM
         L     R1,PDEDSNA              R1 = A(PGM NAME)
         LH    R2,PDEDSNL              R2 = L(PGM NAME)
         BCTR  R2,0                    LESS 1 FOR EX
         EX    R2,MVCPGM               MOVE PGM NAME TO DSA
         B     BYMVCPG
MVCPGM   MVC   PGMNAME(0),0(R1)
BYMVCPG  DS    0H
         LA    R2,PGMNAME
         LA    R3,DSADCB
         LA    R4,MYECB
         CR    R0,R0
         ST    R0,MYECB
         CH    R0,LIB                  WAS DCB SET?
         BC    7,USEDCB                BR IF YES
         SR    R3,R3                   SET DCB REG = 0
USEDCB   DS    0H
         LA    RF,DSAATTCH
         LA    R1,MYPARMA
         ATTACH EPLOC=(R2),DCB=(R3),TASKLIB=(R3),ECB=(R4),             C
               MF=(E,(1)),SF=(E,(15))
         ST    R1,SUBTCBA
         LA    R1,MYECB
         WAIT  ECB=(R1)                WAIT FOR SUBTACK TO END
         L     R1,SUBTCBA
         L     R4,16(R1)               R4 = COMPL CODE
         LA    R1,SUBTCBA
         DETACH (R1)
         SR    R0,R0
         CH    R0,LIB                  WAS DCB SET?
         BC    8,BYFRE                 BR IF NOT
         LA    R1,DSACLOSE
         LA    R2,DSADCB
         CLOSE ((R2)),MF=(E,(1))
         LA    R7,MYDA10
         USING DAPB10,R7
         XC    MYDA10,MYDA10
         MVC   DA10CD(2),=X'0010'
         MVC   DA10DDN(8),DA0CDDNA
         ST    R7,DAPLDAPB
         LR    R1,R8
         LINK EP=IKJEFD00
         LTR   RF,RF
         BC    7,CKERR
         LA    R7,MYDA18
         USING DAPB18,R7
         ST    R7,DAPLDAPB
         XC    MYDA18,MYDA18
         MVC   DA18CD(2),=X'0018'
         MVC   DA18MNM(8),=CL8' '
         MVC   DA18SCLS(2),=CL8' '
         OI    DA18DPS2,X'08'
         OI    DA18CTL,X'10'
         MVC   DA18JBNM(8),=CL8' '
         LH    R2,DA0CNUMB             R2 = #FILES TO FREE
         LA    R3,DA0CDDNA             R2 = A(ARRAY OF DDNAMES)
FRELP    DS    0H
         MVC   DA18DDN(8),0(R3)        MOVE DDNAME TO CTL BLOCK
         LR    R1,R8
         LINK  EP=IKJEFD00
         LTR   RF,RF
         BC    7,CKERR
         LA    R3,8(R3)
         BCT   R2,FRELP
BYFRE    DS    0H
         LA    R4,0(R4)                CLEAR HI-BYTE
         ST    R4,INSTR
         LA    R1,INSTR+1
         ST    R1,INSDV
         LA    R1,3
         STH   R1,INSDV+4
         LA    R1,DSACMPL+4
         ST    R1,OUTSDV
         LA    R1,6
         STH   R1,OUTSDV+4
         LA    R1,TROUTPRM
         L     RF,=V(TROUT)
         BALR  RE,RF
         LA    R1,2
         ST    R1,OLDCNT               SET # SEGMENTS
         LA    R1,CMPMSG
         ST    R1,OLDPTRS
         LA    R1,DSACMPL
         ST    R1,OLDPTRS+4
         BAL   R4,PUTL
         B     RETCTL
CKERR    DS    0H
         STH   RF,INSTR
         LA    R1,INSTR
         ST    R1,INSDV
         LA    R1,DSASEG1+4
         ST    R1,OUTSDV
         LA    R1,TROUTPRM
         L     RF,=V(TROUT)
         BALR  RE,RF
         L     R2,DAPLDAPB             R2 = A(DAIR BLOCK)
         LA    R1,4(R2)                R1 = A(DARC)
         ST    R1,INSDV
         LA    R1,DSASEG2+4
         ST    R1,OUTSDV
         LA    R1,TROUTPRM
         L     RF,=V(TROUT)
         BALR  RE,RF
         LA    R1,6(R2)                R1 = A(CTRC)
         ST    R1,INSDV
         LA    R1,DSASEG3+4
         ST    R1,OUTSDV
         LA    R1,TROUTPRM
         L     RF,=V(TROUT)
         BALR  RE,RF
         LA    R1,ERMSG1
         ST    R1,OLDPTRS
         LA    R1,2
         ST    R1,OLDCNT               SET # OF SEGMENTS
         CLC   0(2,R2),=X'0008'        WAS IT ALLOCATE?
         BC    7,CKCONC                BR IF NOT
         LA    R1,EM1SEG1
         ST    R1,OLDPTRS+4
         B     PUT1
CKCONC   DS    0H
         CLC   0(2,R2),=X'000C'        WAS IT CONCAT?
         BC    7,CKDECON               BR IF NOT
         LA    R1,EM1SEG3
         ST    R1,OLDPTRS+4
         B     PUT1
CKDECON  DS    0H
         CLC   0(2,R2),=X'0010'        WAS IT DECONCAT?
         BC    7,ISFREE                BR IF NOT
         LA    R1,EM1SEG4
         ST    R1,OLDPTRS+4
         B     PUT1
ISFREE   DS    0H
         LA    R1,EM1SEG2
         ST    R1,OLDPTRS+4
PUT1     DS    0H
         BAL   R4,PUTL
         CLC   0(2,R2),=X'0008'        WAS IT ALLOCATE?
         BC    7,NOTALC                BR IF NOT
         LA    R1,2
         ST    R1,OLDCNT               SET # SEGMENTS
         LA    R1,ERMSG2
         ST    R1,OLDPTRS
         LH    R1,MYDSN
         LA    R1,4(R1)
         STH   R1,MYDSNMSG
         LA    R1,(EM2OF1-ERMSG2-4)(0)
         STH   R1,MYDSNMSG+2
         LA    R1,MYDSNMSG
         ST    R1,OLDPTRS+4
         BAL   R4,PUTL
NOTALC   DS    0H
         LA    R1,4
         ST    R1,OLDCNT
         LA    R1,ERMSG3
         ST    R1,OLDPTRS
         LA    R1,DSASEG1
         ST    R1,OLDPTRS+4
         LA    R1,DSASEG2
         ST    R1,OLDPTRS+8
         LA    R1,DSASEG3
         ST    R1,OLDPTRS+12
         BAL   R4,PUTL
         B     RETCTL
PUTL     DS    0H
         SR    R0,R0
         ST    R0,MYECB
         LA    R1,MYPPL
         LA    R6,OLD
         PUTLINE PARM=PTPB,                                            C
               OUTPUT=((6),TERM,SINGLE,INFOR),                         C
               MF=(E,(1))
         BR    R4
         DS    0F
LIBDCB   DCB   DDNAME=DUMMY,DSORG=PO,MACRF=(R)
LIBDCBL  EQU   *-LIBDCB
         DS    0F
ATTCHL   ATTACH EP=DUMMY,SF=L
ATTCHLL  EQU   *-ATTCHL
         DS    0F
OPEN     OPEN  (,(INPUT)),MF=L
OPENL    EQU   *-OPEN
         DS    0F
CLOSE    CLOSE (,),MF=L
CLOSEL   EQU   *-CLOSE
         DS    0F
PTPB     PUTLINE ,MF=L
PTPBL    EQU   *-PTPB
         DS    0F
EM3SEG1  DS    0F
         DC    AL2(EM3S1LEN-*),AL2(EM3OF1-ERMSG3-4)
         DC    CL4' '
EM3S1LEN EQU   *
EM3SEG2  DS    0F
         DC    AL2(EM3S2LEN-*),AL2(EM3OF2-ERMSG3-4)
         DC    CL4' '
EM3S2LEN EQU   *
EM3SEG3  DS    0F
         DC    AL2(EM3S3LEN-*),AL2(EM3OF3-ERMSG3-4)
         DC    CL4' '
EM3S3LEN EQU   *
CMPSEG   DS    0F
         DC    AL2(CMPSEGL-*),AL2(CMPOF-CMPMSG-4)
         DC    CL6' '
CMPSEGL  EQU   *
BIGL     EQU   *-LIBDCB
ERMSG1   DS    0F
         DC    AL2(EM1LEN-*),AL2(0)
         DC    C' ERROR WHEN ATTEMPTING TO '
EM1OF1   EQU   *
EM1LEN   EQU   *
EM1SEG1  DS    0F
         DC    AL2(EM1S1LEN-*),AL2(EM1OF1-ERMSG1-4)
         DC    C'ALLOCATE     '
EM1S1LEN EQU   *
EM1SEG2  DS    0F
         DC    AL2(EM1S2LEN-*),AL2(EM1OF1-ERMSG1-4)
         DC    C'FREE DATA SETS'
EM1S2LEN EQU   *
EM1SEG3  DS    0F
         DC    AL2(EM1S3LEN-*),AL2(EM1OF1-ERMSG1-4)
         DC    C'CONCATENATE'
EM1S3LEN EQU   *
EM1SEG4  DS    0F
         DC    AL2(EM1S4LEN-*),AL2(EM1OF1-ERMSG1-4)
         DC    C'DECONCATENATE'
EM1S4LEN EQU   *
ERMSG2   DS    0F
         DC    AL2(EM2LEN-*),AL2(0)
         DC    C' DATA SET = '
EM2OF1   DC    CL44' '
EM2LEN   EQU   *
ERMSG3   DS    0F
         DC    AL2(EM3LEN-*),AL2(0)
         DC    C' RC = '
EM3OF1   EQU   *
         DC    C', DARC = '
EM3OF2   EQU   *
         DC    C', CTRC = '
EM3OF3   EQU   *
EM3LEN   EQU   *
CMPMSG   DS    0F
         DC    AL2(CMPMSGL-*),AL2(0)
         DC    C' COMPLETION CODE = '
CMPOF    EQU   *
CMPMSGL  EQU   *
PCL      IKJPARM
PGM      IKJIDENT 'PROGRAM NAME',                                      C
               MAXLNTH=8,FIRST=ALPHA,OTHER=ANY,                        C
               PROMPT='PROGRAM NAME'
PARM     IKJKEYWD
         IKJNAME 'PARM',SUBFLD=PARMSUB
LIB      IKJKEYWD
         IKJNAME 'LIB',SUBFLD=LIBSUB
PARMSUB  IKJSUBF
PARMSUBI IKJPOSIT QSTRING,PROMPT=' PARM FIELD'
LIBSUB   IKJSUBF
LIBSUBI  IKJPOSIT DSNAME,LIST,PROMPT=' LOAD LIBRARIES'
         IKJENDP
         LTORG
PDEDSN   DSECT
PDEDSNA  DS    F   A(DSNAME)
PDEDSNL  DS    H   L(DSNAME)
PDEDSNF  DS    H   FLAGS - BIT 1 = 1 IF NAME IS IN QUOTES
         DS    CL16
PDEDSNXT DS    F   A(NEXT DSNAME PDE) OR =X'FF000000'
         IKJCPPL
         IKJPPL
         IKJDAP08
DA08LEN  EQU   *-DAPB08
         IKJDAP0C
DA0CLEN  EQU   *-DAPB0C
         IKJDAP10
DA10LEN  EQU   *-DAPB10
         IKJDAP18
DA18LEN  EQU   *-DAPB18
         IKJDAPL
DSA      DSECT
         DS    CL72 PAD FOR STD DSA
MYPPL    DS    7F
MYECB    DS    F
PDLAWD   DS    F
MYDA08   DS    CL(DA08LEN)
MYDA0C   DS    CL(DA0CLEN)
DA0CDDNA DS    15CL8 ARRAY OF DDNAMES TO CONCATENATE
MYDA10   DS    CL(DA10LEN)
MYDA18   DS    CL(DA18LEN)
MYDSNMSG DS    H
MYDSN    DS    H
         DS    CL44
MYDAPL   DS    5F
MYPARMA  DS    F
MYPARM   DS    H
         DS    CL126
DSACON   DS    0CL(BIGL)
         DS    0F
DSADCB   DS    CL(LIBDCBL)
DCBDDNAM EQU   DSADCB+40
         DS    0F
DSAATTCH DS    CL(ATTCHLL)
         DS    0F
DSAOPEN  DS    CL(OPENL)
         DS    0F
DSACLOSE DS    CL(CLOSEL)
         DS    0F
DSAPTPB  DS    CL(PTPBL)
         DS    0F
DSASEG1  DS    CL8
DSASEG2  DS    CL8
DSASEG3  DS    CL8
DSACMPL  DS    CL10
SUBTCBA  DS    F
TROUTPRM DS    2F
INSDV    DS    2F
OUTSDV   DS    2F
         DS    0F
INSTR    DS    H
         DS    H
PGMNAME  DS    CL8
OLD      DS    0F    =0
OLDCNT   DS    F  # SEGMENTS
OLDPTRS  DS    4F  PTRS TO MESSAGE SEGMENTS
DSALEN   EQU   *-DSA
         END
