*$.HE GENERALIZED SUBROUTINES - GETCMD
*$.HE GET THE NEXT TSO COMMAND
*$.PL 55
*$.PN 0
*$.PA
*$.SS
*$.NF
*$12/30/78
*$AUTHOR:  T. SMITH
*$SOURCE MODULE NAME:  GETCMD
*$DOCUMENTATION ID:  *$
*$.FI L
*$.SP 5
*$THIS SUBROUTINE SUPPLIES THE PLI PROGRAMMER WHO IS WRITING A TSO
*$TERMINAL MONITOR PROGRAM WITH A FACILITY TO ACQUIRE THE NEXT
*$TSO COMMAND TO BE EXECUTED FROM THE CURRENT SOURCE OF
*$INPUT.  IT IS TRANSPARENT TO THE PL/I PROGRAM WHETHER THE
*$COMMAND ACQUIRED CAME FROM A CLIST OR FROM THE TERMINAL.
*$CALL FORMAT IS AS FOLLOWS:
*$.SP 1
*$.IN 5
*$CALL GETCMD(CPPLUPT,CPPLECT,PROMPT,RETCODE,CMDSTR);
*$.SP 1
*$.IN 0
*$RETCODE IS DECLARED FIXED BIN(31,0), AND WILL BE SET BY THIS
*$SUBROUTINE TO THE VALUE IN REGISTER 15 AFTER THE PUTGET MACRO IS
*$ISSUED TO ACQUIRE THE NEXT COMMAND, OR WILL SET IT TO 32 IF CMDSTR
*$IS NOT LONG ENOUGH TO CONTAIN THE ENTIRE INPUT.
*$.SP 1
*$CPPLUPT IS A POINTER VARIABLE, AND POINTS TO THE UPT.
*$.SP 1
*$CPPLECT IS A POINTER VARIABLE, AND POINTS TO THE ECT.
*$.SP 1
*$PROMPT IS DECLARED CHAR(80) VARYING, AND MUST BE SET BY THE
*$CALLER TO THE CHARACTER DATA WITH WHICH TO PROMPT THE USER.
*$'NEXT COMMAND?', FOR EXAMPLE.
*$.SP 1
*$CMDSTR IS DECLARED CHAR(*) VAR, AND WILL BE SET BY THIS
*$SUBROUTINE TO THE NEXT TSO COMMAND TO BE EXECUTED. THIS COMMAND
*$MAY HAVE COME FROM THE TERMINAL, OR IT MAY HAVE COME FROM
*$A CLIST.
GETCMD   PLIENTRY ,DSA=304,COMPILE=O
         XC    ENTRYFLG(MYLEN),ENTRYFLG
         LA    R0,1
         ST    R0,NUMSEG               SET NUMSEG IN OLD
         LA    R0,MSG
         ST    R0,MSGSEG1              SET A(MSG) IN OLD
         LM    R2,R6,0(R1)             GET PARAMETER ADDRESSES
         L     R4,0(R4)                GET A(PROMPT) FROM SDV
         LH    R7,0(R4)                GET LEN PROMPT
         BCTR  R7,0                    LESS 1 FOR EX
         EX    R7,MVCMSG               MOVE TEXT TO MESSAGE
         B     BYMVCMSG
MVCMSG   MVC   MSGTXT+1(0),2(R4)
BYMVCMSG DS    0H
         LA    R7,6(R7)
         STH   R7,MSGLEN               SET MSGLEN
         MVI   MSGTXT,C' '
         SR    R0,R0
         STH   R0,MSGNUL               COMPLETE MESSAGE INITIALIZATION
* NOW INITIALIZE THE IOPL
         L     R2,0(R2)                R2 = A(UPT)
         ST    R2,IOPLUPT
         L     R3,0(R3)                R3 = A(ECT)
         USING ECT,R3
         ST    R3,IOPLECT
         LA    R0,MYECB
         ST    R0,IOPLECB
         LA    R0,MYPGPB
         ST    R0,IOPLIOPB
* NOW INITIALIZE THE PGPB
         MVC   MYPGPB,PUTGET
         SR    R9,R9                   CLEAR RETRY COUNT
RETRY    DS    0H
MODE     PUTGET OUTPUT=(MSGLIST,MODE),MF=(E,IOPL)
         C     RF,=F'12'               SECOND LEVEL MESSAGES?
         BC    7,NOSLVL                BR IF NOT
         LA    R9,1(R9)                BUMP RETRY COUNT
         C     R9,=F'256'
         BC    2,NOSLVL                RETRY ONLY 256 TIMES
         OI    ECTMSGF,X'80'           TELL HIM TO PURGE MSGS
         B     MODE                    TRY AGAIN
NOSLVL   DS    0H
         ST    RF,0(R5)                SAVE RETURN CODE
         C     RF,=F'4'                CHECK HIGHEST ALLOWABLE CODE
         BH    EXIT                    BR IF TOO HIGH
         LA    R1,MYPGPB               GET ANSWER
         USING PGPB,R1
         L     R2,PGPBIBUF GET A(ANSWER BUFFER)
         DROP  R1
         LH    R3,0(R2)                R3 = LENGTH(ANSWER)
         S     R3,=F'4'                LESS LENGTH OF RDW
         LA    R2,4(R2)                R2 = A(DATA)
         LH    R9,4(R6)                R9 = MAX LENGTH TO RETURN
         CR    R3,R9                   INPUT TOO LONG?
         BC    12,GOTLEN               BR IF NOT
         LA    RF,=H'36'               INDICATE LENGTH TOO LONG
         ST    RF,0(R5)                SET BAD RETURN CODE
         LR    R3,R9                   SET MAX LENGTH
GOTLEN   DS    0H
         L     R8,0(R6)                R8 = A(RETURN STRING)
         STH   R3,0(R8)                SET RETURN LENGTH
         LA    R8,2(R8)                R8 = A(RETURN STRING DATA)
         MVCL  R8,R2                   MOVE ANSWER
         B     EXIT
EXIT     PLIEXIT
PUTGET   PUTGET MF=L
         LTORG
         IKJECT
         IKJPGPB
DSA      DSECT
         DS    0D
ENTRYFLG DS    0F
MSGLIST  DS    0F
NUMSEG   DS    F # MESSAGE SEGMENTS
MSGSEG1  DS    F FIRST SEGMENT PTR
MSG      DS    0F
MSGLEN   DS    H
MSGNUL   DS    H
MSGTXT   DS    CL80
         DS    0F
MYPGPB   DS    CL16
IOPL     DS    0F
IOPLUPT  DS    F
IOPLECT  DS    F
IOPLECB  DS    F
IOPLIOPB DS    F
MYECB    DS    F
MYLEN    EQU   *-ENTRYFLG
DSALEN   EQU   *-DSA
         END
