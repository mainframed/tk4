   /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
   /* ABE013 - TAB,OW,BRIGHT,TRTAB SUBCOMMANDS */
   /* 1        2   3  4      5           */
   %INCLUDE ABESUB;
 ABESUB(ABE013) PARS(0000000000000000) CHECK(YES);
   %INCLUDE ABESUBA;
   %INCLUDE ABERHPNL;

   % INCLUDE IKJECT;
   DCL SETCAPS ENTRY;
   DCL STFSMOD ENTRY(CHAR(*),CHAR(*),FIXED BIN(15,0))
     RETURNS(FIXED BIN(15,0));
   DCL STELP PTR BASED(STPTR);
   DCL STELSAV PTR;
   DCL CMDSTR CHAR(240) VAR INIT('');
   DCL PROMPT CHAR(80) VAR STATIC INIT('OWP');
   DCL (HIP,TP) PTR;
   DCL PARM CHAR(100) VAR;
   DCL HLEN FIXED BIN(15,0) BASED(ADDR(PARM));
   DCL SYSLINK ENTRY;
   DCL DUMSTR CHAR(1);
   DCL TRTAB CHAR(256) BASED(RHTRTAB);
   DCL TRIX FIXED BIN(15,0);

   RHRC=0;
   SELECT(CMDINDX);
     WHEN(1,2) DO; /* IT IS TAB SUBCOMMAND */
       DO I=HBOUND(PARY,1) TO 2 BY -1;
         PARY(I)=PARY(I-1);
         END;
       PARY(1)='TAB';
       CALL #TABSET(RHPPTR,PARY(*),RHHDRPT);
       END;
     WHEN(4) CALL BRIGHT; /* IT IS BRIGHT SUBCOMMAND */
     WHEN(5) DO; /* IT IS TRTAB COMMAND */
       UNSPEC(TRIX)=UNSPEC(LOW(1)××DO_TRIN(PARY(1)));
       SUBSTR(TRTAB,TRIX+1,1)=DO_TRIN(PARY(2));
       END;
     OTHERWISE DO; /* IT IS OW SUBCOMMAND */
       IF PARY(1)^=''
         THEN RHPFRACT=PARY(1);
       STELSAV=RHECT->ECTIOWA->STELP;
       J=STFSMOD('OFF','INITIAL=NO',0);
       IF PARY(1)=''
         THEN PARM='ST';
         ELSE PUT STRING(PARM) EDIT('SRC',PSCREENLEN,PLINESIZE)
           (A(3),P'999',P'999');
       CALL SYSLINK('CLRSCRN',RHRC,HLEN);
       CALL #ABEDIS(RHPPTR); /* CALL ABEDIS */
       CALL #CRTZAP(RHPPTR); /* CALL CRTZAP */
       DUMSTR=#PROMPT('HIT ENTER TO CONTINUE');
       HIP=NULL;
       I=0;
       J=SCREENLEN-4;
       DO TP=NXTRHEL REPEAT TP->RHNXT WHILE(TP^=NULL);
         IF TP->RHCEN>J
           THEN IF TP->RHCST>J
             THEN TP->RHCST,TP->RHCEN=0;
             ELSE TP->RHCEN=J;
         IF TP->RHCST^=0
           THEN HIP=TP;
         END;
       IF HIP^=NULL
         THEN HIP->RHCEN=J;
       END;
     END;

 BRIGHT: PROC;
 /**********************************************************************
 *                                                                     *
 * CALLED WHEN THE SUBCOMMAND IS BRIGHT.                               *
 *                                                                     *
 **********************************************************************/
   %INCLUDE ABEPNL;
   DCL (I,J,K,L) FIXED BIN(15,0);
   DCL SAVPTR PTR;
   DCL (ALLSW,HITSW) BIT(1) INIT('0'B);
   CALL SETCAPS(PARY(1));
   IF PARY(1)^=''
     THEN IF PARY(1)^='HI' & PARY(1)^='LO' & PARY(1)^='SU'
       THEN DO;
         MSGDATA='INVALID OPERAND = '××PARY(1);
         RHRC=8;
         RETURN;
         END;
   IF PARY(2)^=''
     THEN DO;
       CALL SETCAPS(PARY(2));
       IF PARY(2)^='ALL'
         & PARY(2)^='DATA'
         & PARY(2)^='HEADINGS'
         & PARY(2)^='CMD'
         THEN DO;
           MSGDATA='INVALID OPERAND = '××PARY(2);
           RHRC=8;
           RETURN;
           END;
       ALLSW='1'B;
       END;
   L=@CURLOC;
   PNLPTR=RHPSTAPT;
   SFLDPTR,SAVPTR=ADDR(FLDLOC);
   LUP: DO;
     DO J=1 TO FLDCNT;
       IF BRIGHT_HIT(SAVPTR,J,FLDSBAB)
         THEN DO;
           CALL BRIGHT_SUB(SAVPTR);
           IF PARY(2)=''
             THEN LEAVE LUP;
           END;
       SAVPTR=SFLDPTR;
       SFLDADJ=SFLDADJ+FLDLEN; /* BUMP TO NEXT FIELD */
       END;
     IF BRIGHT_HIT(SAVPTR,J,32760)
       THEN CALL BRIGHT_SUB(SAVPTR);
     END LUP;

 BRIGHT_HIT: PROC(SAVPTR,J,NXTSBAB) RETURNS(BIT(1));
   DCL SAVPTR PTR;
   DCL J FIXED BIN(15,0);
   DCL HITSW BIT(1) INIT('0'B);
   SELECT;
     WHEN(PARY(2)='ALL') HITSW='1'B;
     WHEN(PARY(2)='CMD')
       IF SAVPTR->FLDINUM=1
         THEN HITSW='1'B;
     WHEN(PARY(2)='DATA')
       IF SUBSTR(SAVPTR->FLAGS,3,1)='0'B
         THEN HITSW='1'B;
     WHEN(PARY(2)='HEADINGS')
       IF SUBSTR(SAVPTR->FLAGS,3,1)='1'B
         THEN HITSW='1'B;
     WHEN(L<NXTSBAB & L>=SAVPTR->FLDSBAB) HITSW='1'B;
     OTHERWISE HITSW='0'B;
     END; /* SELECT */
   RETURN(HITSW);
   END BRIGHT_HIT;

 BRIGHT_SUB: PROC(SAVPTR);
   DCL SAVPTR PTR;
   SELECT(PARY(1));
     WHEN('','HI') SUBSTR(SAVPTR->FLAGS,5,2)='10'B;
     WHEN('LO')    SUBSTR(SAVPTR->FLAGS,5,2)='01'B;
     OTHERWISE     SUBSTR(SAVPTR->FLAGS,5,2)='11'B;
     END; /* SELECT */
   END BRIGHT_SUB;
   END BRIGHT;

 DO_TRIN: PROC(PRM) RETURNS(CHAR(1));
 /**********************************************************************
 *                                                                     *
 * CALLED TO CONVERT PRINTABLE HEX TO INTERNAL HEX.                    *
 *                                                                     *
 **********************************************************************/
   DCL PRM CHAR(*) VAR;
   DCL TRIN ENTRY(CHAR(2)) RETURNS(CHAR(1));
   DCL TRPRM CHAR(2);

   SELECT(LENGTH(PRM));
     WHEN(1) TRPRM='0'××PRM;
     WHEN(2) TRPRM=PRM;
     OTHERWISE DO;
       MSGDATA='INVALID PARM TO TRTAB SUBCOMMAND';
       RHRC=8;
       GOTO BAD_RETURN;
       END;
     END; /* SELECT */
   CALL SETCAPS(PRM);
   RETURN(TRIN(PRM));
   END DO_TRIN;

 BAD_RETURN:;
   END;
