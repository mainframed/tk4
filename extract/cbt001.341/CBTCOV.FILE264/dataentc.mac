 /*DATAENTC*/
         % INCLUDE CPINIT1;
         % @CMP = 'O';
         % INCLUDE CPINIT2;
         DCL PLIXOPT CHAR(15) VAR INIT('ISA(2000K)') STATIC EXT;
         @PROC(1,IDSN#(DSNAME),OUTDA(ODSN#(DSNAME)),
           PNLLIB(PDSN#(DSNAME)));
         DCL DDN(3) CHAR(8) INIT((3)(1)' ');
         DCL DATAENT ENTRY(CHAR(8),CHAR(8),CHAR(8),ENTRY,ENTRY,ENTRY,
           ENTRY);
         DCL SUFFIX ENTRY RETURNS(FIXED BIN(15,0));
         DCL MYDSN CHAR(44) VAR BASED(MYPTR);
         MYPTR = ADDR(TMPDSN@.DSNLEN);
         DCL (INSW,OUTSW) BIT(1) INIT('0'B);
         DCL MAINSW BIT(1) INIT('1'B);
         IF SETDSN@(IDSN) ^= ''
              THEN INSW = '1'B;
         IF SETDSN@(ODSN) ^= ''
              THEN OUTSW = '1'B;
         IF INSW
              THEN DO;
                   @SETDSN(IDSN,,PROMPT);
                   IF ^OUTSW
                        THEN DO;
                             DDN(2)=DOALC(MYDSN,'INOUT');
                             DDN(1) = DDN(2);
                             END;
                        ELSE DO;
                             DDN(1) = DOALC(MYDSN,'IN');
                             END;
                   END;
         IF OUTSW
              THEN DO;
                   @SETDSN(ODSN,,PROMPT);
                   DDN(2) = DOALC(MYDSN,'INOUT');
                   END;
              ELSE IF ^INSW
                   THEN DO;
         @WRITE('ERROR - NEITHER IN NOR OUT DATA SET SPECIFIED');
                        SIGNAL ERROR;
                        END;
         IF INSW
           THEN IF DDN(1)=''
             THEN DO;
               @WRITE('UNABLE TO USE IN DATA SET');
               SIGNAL ERROR;
               END;
         IF OUTSW
           THEN IF DDN(2)=''
             THEN DO;
               @WRITE('UNABLE TO USE OUT DATA SET');
               SIGNAL ERROR;
               END;
         IF SETDSN@(PDSN)^=''
              THEN DO;
                   @SETDSN(PDSN,LOAD);
                   @ALLOC(DA,SHR);
                   DDN(3) = DA08DDN;
                   END;
         MAINSW = '0'B;
         CALL DATAENT(DDN(1),DDN(2),DDN(3),DOCMD,DOALC,DOFRE,DOPRM);
         DO I = 1 TO 3;
              IF DDN(I) ^= ''
                   THEN DO;
                        DA18DDN = DDN(I);
                        @FREE(DA,KEEP);
                        END;
              END;
 DOCMD:  PROC(CMD,HELP);
         DCL HELP CHAR(4) VAR;
         DCL CMD CHAR(80) VAR;
         @SETL(&CMD=CMD);
         IF HELP = 'HELP'
              THEN DO;
                   @CMD('&CMD',,,HELP);
                   END;
              ELSE DO;
                   @CMD('&CMD');
                   END;
         END DOCMD;
 DOALC:  PROC(ALCDSN,IO) RETURNS(CHAR(8));
         DCL (DOADSN,ALCDSN) CHAR(44) VARYING;
         DCL IO CHAR(3) VAR;
         % INCLUDE DSCB1;
         % INCLUDE CTLGDEF;
         % INCLUDE DAIR14;
         DCL QUAL CHAR(8) VAR;
         DCL 1 Q1,
              2 QUALEN FIXED BIN(15,0) INIT(80),
              2 ANYN1 FIXED BIN(15,0) INIT(0),
              2 QUALSTR CHAR(76) INIT(' ');
         DCL 1 Q2 DEF Q1,
              2 QUALARY(10) CHAR(8);
         DCL Q3 CHAR(80) DEF Q1;
         DCL CVOL CHAR(6) INIT('SYSRES');
         DCL RETCODE FIXED BIN(31,0);
         DCL RETCODC CHAR(4) DEF RETCODE;
         DCL RET BIT(32) DEF RETCODE;
         DCL WKAREA CHAR(148) EXT;
         DCL DSCB1PTR PTR,
             PTR1ADJ FIXED BIN(31,0) DEF DSCB1PTR;
         DSCB1PTR = ADDR(WKAREA);
         PTR1ADJ = PTR1ADJ - 44;
         DCL NEWFI FILE RECORD OUTPUT
           ENV(FB RECSIZE(80) BLKSIZE(1680));
         DCL AREA CHAR(265);
         CTLGPTR = ADDR(AREA);
         DCL MOD BUILTIN;
         SUBSTR(DA08CTL,3,1)='0'B;
         DOADSN = ALCDSN;
         DA08DDN='';
         DA08PDSN=ADDR(TMPDSN@);
         IF ^MAINSW
           THEN DO;
             IF SUBSTR(DOADSN,1,1) = ''''
              THEN DOADSN=SUBSTR(DOADSN,2,LENGTH(DOADSN)-2);
              ELSE DOADSN=SYMC('&SYSUID')××'.'××DOADSN;
             I = INDEX(DOADSN,'(');
             IF I ^= 0
               THEN DO;
                   DA08MNM=SUBSTR(DOADSN,I+1,LENGTH(DOADSN)-I-1);
                   DOADSN=SUBSTR(DOADSN,1,I-1);
                   END;
              ELSE DA08MNM='';
             END;
         DA14PDSN=ADDR(DOADSN);
         DA14PRET=ADDR(QUALEN);
         CALL SYSDAIR(CPPLUPT,CPPLECT,CPECB,CPPLPSCB,DAIR14,
           IKJRET);
         IF IKJRET = 0
           THEN IF QUALARY(1) ^= LOW(8)
             THEN DO;
               IF QUALARY(2) = LOW(8)
                 THEN DO;
                   DOADSN=DOADSN××'.'××SUBSTR(QUALARY(1),1,
                    SUFFIX(QUALARY(1),' '));
                   END;
                 ELSE DO;
                   @SETL(&SYS0001=DOADSN);
                   @WRITE('QUALIFIERS FOR DATA SET &SYS0001 ARE ');
                   @WRITE(Q3,MF=S);
                   @WRITE('ENTER QUALIFIER-');
                   @READ(QUAL);
                   DOADSN=DOADSN××'.'××QUAL;
                   END;
                END;
         TMPDSN@.DSNSTR=DOADSN;
         TMPDSN@.DSNLEN=LENGTH(DOADSN);
         IF IO = 'IN'
              THEN DO;
                   @ALLOC(DA,SHR);
                   END;
              ELSE DO;
                   CALL SYSCTLG('NAME',RET,DOADSN,CVOL,AREA);
                   IF RETCODE ^= 0
                     THEN DO;
                       @ALLOC(DA,NEW,SP(1,1),TRKS);
                       OPEN FILE(NEWFI) TITLE(DA08DDN);
                       CLOSE FILE(NEWFI);
                       RETURN(DA08DDN);
                       END;
                   CALL SYSVTOC('SEARCH',RET,DOADSN,VOLID.VOLSER(1),
                     WKAREA);
                   CKDS: DO;
                     IF RET ^= 0
                       THEN LEAVE CKDS;
                     IF ^SUBSTR(DS1DSORG,2,1) /* PS? */
                       THEN IF SUBSTR(DS1DSORG,7,1) /* PO? */
                         THEN IF DA08MNM = ''
                           THEN DA08MNM = 'TEMPNAME';
                           ELSE;
                         ELSE LEAVE CKDS;
                     IF SUBSTR(DS1RECFM,1,2)^='10'B /* F? */
                       THEN LEAVE CKDS;
                     I = DS1LRECL;
                     IF I ^= 80
                       THEN LEAVE CKDS;
                     I = DS1BLKL;
                     IF MOD(I,80)^=0
                       THEN LEAVE CKDS;
                     TMPDSN@.DSNSTR=DOADSN;
                     TMPDSN@.DSNLEN=LENGTH(DOADSN);
                     @ALLOC(DA,OLD);
                     RETURN(DA08DDN);
                     END CKDS;
                   RETURN('');
                   END;
         RETURN(DA08DDN);
         END DOALC;
 DOFRE:  PROC(PRMDDN);
         DCL PRMDDN CHAR(8);
         DA18DDN = PRMDDN;
         @FREE(DA,KEEP);
         END DOFRE;
 DOPRM:  PROC(PRMPT) RETURNS(CHAR(120) VAR);
         DCL PRMPT CHAR(80) VAR;
         DCL INP CHAR(120) VAR;
         @SETL(&PRMPT=PRMPT);
         @WRITE('&PRMPT');
         @READ(INP);
         RETURN(INP);
         END DOPRM;
         END;
