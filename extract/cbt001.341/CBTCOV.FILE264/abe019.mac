   /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
   /* ABE019 - SPLIT,JOIN,TS */
   /* 1        2     3    4  */
   %INCLUDE ABESUB;
 ABESUB(ABE019) PARS(000) CHECK(YES);
   %INCLUDE ABESUBA;
   %INCLUDE ABERHPNL;
   DCL 1 LRN_STRUCTURE BASED(LRNPTR),
   %INCLUDE ABELRN;
   %INCLUDE ABELRNA;

   DCL SETCAPS ENTRY;
   DCL (PREFIX,SUFFIX) ENTRY(CHAR(*), CHAR(*))
     RETURNS(FIXED BIN(15,0));
   DCL ALLSW BIT(1) INIT('0'B);
   DCL LAST FIXED BIN(31,0) INIT(99999999);
   DCL (SAVPTR,ORGPTR,SEQPTR,BUGPTR) PTR;
   DCL (IXK,ALLCK) CHAR(80) VAR;
   DCL CMDLAB(4) LABEL;
   DCL CURBIN FIXED BIN(15,0),
       CURBIT BIT(16) DEF CURBIN;

   IF RH_L1>RH_L2
     THEN DO; /* MUST BE PROCESSED FRONT-TO-BACK */
       I=RH_L1;
       RH_L1=RH_L2;
       RH_L2=I;
       END;
   MSGDATA='';
   ORGPTR = RECPTR;
   RHRC=0;
   GO TO CMDLAB(CMDINDX);
            /*        1   */
 CMDLAB(4): /*     TS <N> */
   IF PARY(1)^=''
     THEN CMDDATA=RH_L1××' BL '××PARY(1);
   PUT STRING(PARY(1))
     EDIT(MOD(@CURLOC,LINESIZE)-RHPMAXLN-1)(P'999');
 CMDLAB(1):  /* ABE019 */
             /*         1       2    */
 CMDLAB(2):  /*   SPLIT <STRING> ALL  */
             /*         <NUMBER>      */
   CALL #MD(RHPTR,RHHDRPT,RH_L1);  /* CALL MDPROC */
   SEQPTR=RECPTR;
   IXK=PARY(1);
   IF PARY(2) ^= ''
     THEN ALLCK=PARY(2);
     ELSE ALLCK='';
   IF ALLCK ^= ''
     THEN DO;
       IF LENGTH(ALLCK) > 3
         THEN MSGDATA='INVALID OPERAND';
         ELSE DO;
           CALL SETCAPS(ALLCK);
           IF SUBSTR('ALL',1,LENGTH(ALLCK))^=ALLCK
             THEN MSGDATA='INVALID OPERAND';
             ELSE ALLSW = '1'B;
           END;
       IF MSGDATA^=''
         THEN DO;
           RHRC = 8;
           RETURN;
           END;
       END;
   IF RECSEQ<=RH_L2
     THEN DO;
       SUBSTR(RECFLGS,3,1)='1'B;
       /* LEAVE CURSOR HERE */
       IF VERIFY(IXK,'0123456789')=0
         THEN DO;
           CURBIN=MAX(0,IXK-1);
           RECRES=SUBSTR(CURBIT,9,8);
           END;
       END;
   DO WHILE(RECSEQ<=RH_L2) UNTIL(RECPTR=HDPTR);
     DO UNTIL(J=0);
       IF LENGTH(IXK) = 0
         THEN J = LENGTH(RECSTR)/2;
         ELSE IF VERIFY(IXK,'0123456789')=0
           THEN J = MIN(IXK,LENGTH(RECSTR)+1);
           ELSE DO;
             J = INDEX(SUBSTR(RECSTR,2),IXK)+1;
             IF J=1
               THEN J=0;
             END;
       IF J ^= 0 & J <= LENGTH(RECSTR)
         THEN DO;
           BUF=SUBSTR(RECSTR,J);
           IF CMDINDX=4
             THEN DO;
               K=PREFIX(RECSTR,' ');
               IF K<=J
                 THEN BUF=SUBSTR(RECSTR,1,K-1)××
                   SUBSTR(BUF,PREFIX(BUF,' '));
               END;
           RECSTR=SUBSTR(RECSTR,1,J-1);
           SEQ=-1;
           CALL #ADD(RHPTR,RHHDRPT,RECPTR,RECPTR,SEQ,BUF,0);
           END;
         ELSE J=0;
       IF ^ALLSW
         THEN J=0;
       END;
     RECPTR = NXTPTR;
     END;
   RECPTR = ORGPTR;
   CALL #RESEQ(RHPTR,RHHDRPT,SEQPTR,'NOSAVE','NORENUM',LAST);
   CALL #NC(RHPTR,ORGPTR); /* CALL ABENC */
   RHRC = 0;
   RETURN;
             /*      1  */
 CMDLAB(3):  /* JOIN <PAIRS> */
   CALL #MD(RHPTR,RHHDRPT,RH_L1); /* CALL MDPROC */
   IF NXTPTR=HDPTR
     THEN DO;
       MSGDATA = 'LAST LINE - NOTHING TO JOIN';
       RHRC = 8;
       RETURN;
       END;
   IF PARY(1) = ''
     THEN PAIRS = 2;
     ELSE PAIRS = PARY(1);
 /* CODE TO BYPASS BUG IN COMPILER */
 L=BUFLN;
 ALLOC BUFSTR SET(BUGPTR);
 /* END BYPASS CODE */
   I = 0;
   DO WHILE(RH_L2>=NXTPTR->RECSEQ) UNTIL(NXTPTR=HDPTR);
     I = I + 1;
     IF I < PAIRS
       THEN DO;
         IF LENGTH(RECSTR)=0
           THEN RECSTR=NXTPTR->RECSTR;
           ELSE DO; /* CODE TO BYPASS BUG IN COMPILER */
             /* RECSTR=SUBSTR(RECSTR,1,SUFFIX(RECSTR,' '))××
               NXTPTR->RECSTR; */
             BUF=RECSTR;
             BUGPTR->BUF=NXTPTR->RECSTR;
             BUF=SUBSTR(BUF,1,SUFFIX(BUF,' '))××BUGPTR->BUF;
             RECSTR=BUF;
             END; /* END BYPASS CODE */
         J = NXTPTR->RECSEQ;
         IF NXTPTR=ORGPTR
           THEN ORGPTR=RECPTR;
         SAVPTR = RECPTR;
         CALL #DEL(RHPTR,RHHDRPT,J,J); /* DELPROC */
         RECPTR = SAVPTR;
         END;
       ELSE DO;
         RECPTR=NXTPTR;
         I = 0;
         END;
     END;
 /* CODE TO BYPASS BUG IN COMPILER */
 FREE BUGPTR->BUFSTR;
 /* END BYPASS CODE */
   CALL #NC(RHPTR,ORGPTR); /* CALL ABENC */
   RHRC = 0;
   END ABE019;
