 /* IWTRPT
  THIS PROGRAM IS A PIECE OF JUNK.  IF YOU'D BEEN REVISED AS MANY
  TIMES, YOU'D BE JUNK TOO. */
 IWTRPT:  PROC(PARM) OPTIONS(MAIN);
         DCL PARM CHAR(100) VARYING;
         DFT RANGE(*) FIXED BIN VALUE(FIXED BIN(31,0));
         DCL HICKREC CHAR(121) VAR;
         DCL HICKARY(3) FILE VARIABLE;
         DCL (HICKFL1,HICKFL2,HICKFL3) FILE ENV(VB RECSIZE(125));
         HICKARY(1) = HICKFL1;
         HICKARY(2) = HICKFL2;
         HICKARY(3) = HICKFL3;
         DCL HICKFLE FILE OUTPUT ENV(VB CTLASA CONSECUTIVE);
         DCL HICKSW BIT(1) STATIC INIT('1'B);
         DO I = 1 TO 3;
              ON UNDF(HICKARY(I)) HICKSW = '0'B;
              OPEN FILE(HICKARY(I)) PRINT;
              END;
         DCL LNESIZ FIXED INIT(120);
         DCL MYSIZ FIXED INIT(78);
         DCL 1 TMECK(2),
              2 FTME FIXED INIT(08,16),
              2 CTME PIC'9999',
              2 TMEKEY CHAR(6) INIT('LOTME=','HITME=');
         DO I = 1 TO 2;
              J = INDEX(PARM,TMEKEY(I));
              IF J ^= 0
                   THEN FTME(I) = SUBSTR(PARM,J+6,2);
              CTME(I) = FTME(I)*100;
              FTME(I) = FTME(I) * 360000; /* TIME IN .01 SEC */
              END;
         DCL ROMAN ENTRY(FIXED BIN(15,0)) RETURNS(CHAR(15) VARYING);
         DCL JULGREG ENTRY(CHAR(6),FIXED DEC(5,0));
         DCL GREGJUL ENTRY(CHAR(6)) RETURNS(FIXED DEC(5,0));
         DCL SPELDTE ENTRY(CHAR(6)) RETURNS(CHAR(40) VARYING);
         DCL DOW ENTRY(FIXED DEC(5,0))
           RETURNS(FIXED BIN(15,0));
         DCL DATEOFF ENTRY(FIXED DEC(5,0),FIXED BIN(15,0))
           RETURNS(FIXED DEC(5,0));
         DCL MONTHEN ENTRY(FIXED DEC(5,0),FIXED BIN(15,0))
           RETURNS(FIXED DEC(5,0));
         DCL PGCNT FIXED INIT(1);
         DCL DTCK(2) FIXED DEC(5,0) INIT(0,0);
         DCL DTCKKEY(2) CHAR(6) INIT('LODTE=','HIDTE=');
         DO I = 1 TO 2;
              J = INDEX(PARM,TMEKEY(I));
              IF J ^= 0
                   THEN DTCK(I) = GREGJUL(SUBSTR(PARM,I+6,6));
              END;
         IF DTCK(1) = 0
              THEN DTCK(1) = DTCK(2);
         IF DTCK(2) = 0
              THEN DTCK(2) = DTCK(1);
         % DCL @SORTLEN FIXED;
         % @SORTLEN = 24;
              /* @SORTLEN IS SET TO THE LENGTH OF THE RECORD TO
                 BE SORTED.  IF THE LENGTH OF THE RECORD CHANGES,
                 THE ONLY OTHER PLACE THAT THE LENGTH MUST BE
                 CHANGED IS IN THE RECORD STATEMENT IN THE CALL
                 TO PLISRTD. */
         % DCL @MAXIWT FIXED;
         % @MAXIWT = 120;
              /* @MAXIWT IS SET TO MAX IWT VALUE */
         % DCL @IWTDIV FIXED;
         % @IWTDIV = 10;
              /* @IWTDIV IS SET TO IWT RANGE PER PRIORITY VALUE */
         % DCL @MAXPRTY FIXED;
         % @MAXPRTY = 12;
              /* @MAXPRTY IS SET TO MAX PRIORITY VALUE TO BE USED */
         % DCL @MINPRTY FIXED;
         % @MINPRTY = @MAXPRTY-(@MAXIWT/@IWTDIV);
              /* @MINPRTY IS SET TO MIN PRIORITY VALUE TO BE USED */
         % DCL @RNGEPRTY FIXED;
         % @RNGEPRTY = @MAXPRTY-@MINPRTY+1;
              /* @RNGEPRTY IS SET TO RANGE OF PRIORITY VALUES */
         % DCL @HB FIXED;
         % @HB = @RNGEPRTY-1;
              /* @HB = HIGH BOUND FOR ARRAY DECLARATIONS */
         DCL MAXIWT INIT(@MAXIWT);
         DCL IWTDIV INIT(@IWTDIV);
         DCL MAXPRTY INIT(@MAXPRTY);
         DCL MINPRTY INIT(@MINPRTY);
         % INCLUDE SMFDEFI;
         % INCLUDE SMFMVS;
         DCL (RSDCTL,SAVDTE) FIXED DEC(7,0) INIT(0);
         DCL BTITLE(3) CHAR(10) VAR INIT(
              'DAILY',
              'WEEKLY',
              'MONTHLY');
         DCL CTLDTE(3) FIXED DEC(5,0);
         DCL BRCNT(3) INIT((3)0);
         DCL CLCTL FIXED BIN(15,0) INIT(1);
         DCL CLHD(2) CHAR(1) STATIC INIT('C','E');
         DCL CTLKEY FIXED INIT(1);
         DCL ACTREC CHAR(@SORTLEN) INIT('');
         DCL ACTPTR PTR;
         ACTPTR = ADDR(ACTREC);
         DCL IWTCNT(3,3,0:99,0:@HB)
             FIXED INIT((300*@RNGEPRTY)0);
         DCL TOTCNT(3,0:@HB) FIXED;
         DCL GRTOT(3) FIXED;
         DCL DIVCNT(3,0:99) FIXED;
         DCL TITLE(3) CHAR(80) VARYING INIT(
           'IWT REQUESTED',
           'IWT DELIVERED',
           'IWT SATISFIED');
         DCL IWTPRM(0:99,0:@HB) FIXED;
         DCL TOTPRM(0:@HB) FIXED;
         DCL DIVPRM(0:99) FIXED;
         DCL PCTSW BIT(1) INIT('0'B);
         DCL INITSW BIT(1) INIT('1'B);
         DCL 1 SORTREC UNALIGNED BASED(SORTPTR),
              2 SJBN CHAR(8),
              2 SRST FIXED BIN(31,0),
              2 SRSD FIXED DEC(7,0),
              2 SKEY FIXED BIN(15,0),
              2 SCL FIXED BIN(15,0);
         DCL 1 SORTRECA UNALIGNED BASED(SORTPTR),
              2 PAD CHAR(20),
              2 SXPI FIXED BIN(15,0),
              2 SXPS FIXED BIN(15,0);
         DCL 1 SORTRECB UNALIGNED BASED(SORTPTR),
              2 PAD CHAR(20),
              2 SDIV FIXED BIN(15,0),
              2 SETME FIXED BIN(15,0);
         DCL COMPAR CHAR(16) BASED(SORTPTR);
         DCL SORTSTR CHAR(@SORTLEN);
         DCL ELAPTME ENTRY(FIXED DEC(5,0),FIXED BIN(31,0),
           FIXED DEC(5,0),FIXED BIN(31,0)) RETURNS(FIXED BIN(31,0));
         DCL (PLIRETC,PLISRTD,DATE) BUILTIN;
         CALL PLISRTD(' SORT FIELDS=(19,2,CH,A,13,4,CH,A,1,18,CH,A) ',
           ' RECORD TYPE=F,LENGTH=(24) ',
           150000,RETCODE,E15,E35);
 E15:  PROC RETURNS(CHAR(@SORTLEN));
         ON ENDFILE(SMFDATA) GO TO ENDE15;
         SORTPTR = ADDR(SORTSTR);
 NXT:
         READ FILE(SMFDATA) INTO(SMFREC);
         I = TYPE;
         IF (I ^= 5) & (I ^= 26)
              THEN GO TO NXT;
         SJBN = SMF5JBN;
         SRST = SMF5RST;
         SRSD = SMF5RSD;
         IF DTCK(1) ^= 0
              THEN IF (SRSD < DTCK(1)) × (SRSD > DTCK(2))
                   THEN GO TO NXT;
         IF FTME(1) < FTME(2)
              THEN IF (SRST < FTME(1)) × (SRST > FTME(2))
                   THEN GO TO NXT;
                   ELSE;
              ELSE IF (SRST < FTME(I)) & (SRST > FTME(2))
                   THEN GO TO NXT;
         IF I = 5
              THEN DO;
                   SCL = SETCL(SMF5JICL);
                   IF SCL = 0
                        THEN GO TO NXT;
                   SKEY = 1;
                   IF VERIFY(SUBSTR(JACCTFLD,1,2),'0123456789')^=0
                        THEN SDIV = 99;
                        ELSE SDIV = SUBSTR(JACCTFLD,1,2);
                   SETME=ELAPTME(SMF5RSD,SMF5RST,SMF5JID,SMF5JIT)/6000;
                        /* SETME EQUALS DELIVERED IWT IN MIN. */
                   SETME = SETME/IWTDIV;
                   IF MOD(SETME,IWTDIV) = 0
                     THEN IF SETME > 0
                       THEN SETME = SETME - 1;
                     /* 0 IS <= 10, 1 IS <= 20, ETC. */
                   IF SETME > @HB
                        THEN SETME = @HB;
                   END;
              ELSE DO;
                   SKEY = 2;
                   SMF26ADJ1 = SMFADJ + 46;
                   SCL = SETCL(SMF26CLS);
                   IF SCL = 0
                        THEN GO TO NXT;
                   SXPI = XPCON(SMF26XPI);
                   SXPS = XPCON(SMF26XPS);
                   END;
         CALL PLIRETC(12);
         RETURN(SORTSTR);
 ENDE15:
         CALL PLIRETC(8);
         END E15;
 XPCON:  PROC(XP) RETURNS(FIXED BIN(15,0));
         DCL XP BIT(8);
         DCL I FIXED BIN(15,0);
         I = XP;
         I = I/16;
         IF I > MAXPRTY
              THEN I = MAXPRTY;
              ELSE IF I < MINPRTY
                   THEN I = MINPRTY;
         I = MAXPRTY - I;
              /* 0 IS OVERDUE, 1 IS <= 10, 2 IS <= 20, ETC. */
         RETURN(I);
         END XPCON;
 E35:  PROC(SORTSTR);
         DCL J FIXED;
         DCL SORTSTR CHAR(@SORTLEN);
         SORTPTR = ADDR(SORTSTR);
         CALL PLIRETC(4);
         IF SKEY = 1
              THEN ACTREC = SORTSTR;
              ELSE IF SORTPTR->COMPAR = ACTPTR->COMPAR
                   THEN DO;
                        IF INITSW
                             THEN CALL CTLINIT;
                             ELSE IF ACTPTR->SCL ^= CLCTL
                               THEN DO;
                                  DO I = 1 TO 3;
                                    CALL PRTCL(I);
                                    END;
                                    CALL CTLINIT;
                                    END;
                               ELSE IF ACTPTR->SRSD ^= RSDCTL
                                  THEN DO;
                                    CALL PRTCL(1);
                                    IF DATEOFF(RSDCTL,7-DOW(RSDCTL)) <
                                      ACTPTR->SRSD THEN CALL PRTCL(2);
                                        /* IF NEW DATE > OLD WEEK-
                                           ENDING DATE, PRINT WEEK-
                                           ENDING TOTALS. */
                                    IF MONTHEN(RSDCTL,0) < ACTPTR->SRSD
                                      THEN CALL PRTCL(3);
                                        /* IF NEW DATE > OLD MONTH-
                                           ENDING DATE, PRINT MONTH-
                                           ENDING TOTALS. */
                                    RSDCTL = ACTPTR->SRSD;
                                    END;
                        IWTCNT(1,1,ACTPTR->SDIV,SORTPTR->SXPI) =
                          IWTCNT(1,1,ACTPTR->SDIV,SORTPTR->SXPI) + 1;
                        IWTCNT(1,2,ACTPTR->SDIV,ACTPTR->SETME) =
                          IWTCNT(1,2,ACTPTR->SDIV,ACTPTR->SETME) + 1;
                        IF SORTPTR->SXPS > 0
                          THEN IWTCNT(1,3,ACTPTR->SDIV,SORTPTR->SXPI) =
                            IWTCNT(1,3,ACTPTR->SDIV,SORTPTR->SXPI) + 1;
                        END;
         END E35;
 EOJ:
         IF RSDCTL = 0
              THEN DO;
                   PUT EDIT('ERROR - NO RECORDS IN RANGE')
                     (A) PAGE;
                   SIGNAL ERROR;
                   END;
              ELSE DO;
                   DO I = 1 TO 3;
                        CALL PRTCL(I);
                        END;
                   DO I = 1 TO 3;
                        CLOSE FILE(HICKARY(I));
                        ON ENDFILE(HICKARY(I)) GO TO HICKEOF;
                        DO FOREVER=1 REPEAT FOREVER;
                             READ FILE(HICKARY(I)) INTO(HICKREC);
                             WRITE FILE(HICKFLE) FROM(HICKREC);
                             END;
 HICKEOF:               CLOSE FILE(HICKARY(I));
                        END;
                   END;
 PRTCL:  PROC(CTLI);
         DCL CTLI FIXED;
         DCL (I,J,K,DIV) FIXED;
         GRTOT(*) = 0;
         TOTCNT(*,*) = 0;
         DIVCNT(*,*) = 0;
  /* THE FOLLOWING CODE MADE COMMENTS TO MAKE WEEKLY AND MONTHLY
     REPORTS SHOW TOTAL JOBS RATHER THEN AVERAGE JOBS PER DAY.
         IF CTLI > 1
              THEN DO I = 1 TO 3;
                   DO J = 0 TO 99;
                        DO K = 0 TO @HB;
                             IWTCNT(CTLI,I,J,K)=(IWTCNT(CTLI,I,J,K)+
                               (BRCNT(CTLI)/2))/BRCNT(CTLI);
                             END;
                        END;
                   END;
         BRCNT(CTLI) = 0;
         IF CTLI < 3
              THEN BRCNT(CTLI+1)=BRCNT(CTLI+1)+1;
 */      DO DIV = 0 TO 99;
              DO I = 0 TO @HB;
                   DO J = 1 TO 3;
                     DIVCNT(J,DIV)=DIVCNT(J,DIV)+IWTCNT(CTLI,J,DIV,I);
                     TOTCNT(J,I)=TOTCNT(J,I)+IWTCNT(CTLI,J,DIV,I);
                     GRTOT(J)=GRTOT(J)+IWTCNT(CTLI,J,DIV,I);
                     IF CTLI = 1
                          THEN DO K = 2 TO 3;
                           IWTCNT(K,J,DIV,I)=IWTCNT(K,J,DIV,I)
                             + IWTCNT(1,J,DIV,I);
                           END;
                     END;
                   END;
              END;
         DO I = 3 TO 1 BY -1;
           IF INDEX(PARM,'NO'××BTITLE(CTLI))=0
             THEN DO;
              IWTPRM = IWTCNT(CTLI,I,*,*);
              TOTPRM = TOTCNT(I,*);
              DIVPRM = DIVCNT(I,*);
              CALL DORPT(IWTPRM,DIVPRM,TOTPRM,GRTOT(I),TITLE(I),CTLI);
              END;
             END;
         CTLDTE(CTLI) = ACTPTR->SRSD;
         IWTCNT(CTLI,*,*,*) = 0;
         END PRTCL;
 DORPT:  PROC(IWTPRM,DIVPRM,TOTPRM,GRPRM,TITLE,CTLI);
         DCL CTLI FIXED; /* 1=DAILY, 2=WEEKLY, 3=MONTHLY */
         DCL IWTPRM(0:99,0:@HB) FIXED;
         DCL DIVPRM(0:99) FIXED;
         DCL TOTPRM(0:@HB) FIXED;
         DCL GRPRM FIXED;
         DCL TITLE CHAR(80) VARYING;
         DCL JOBPCT(0:99,0:@HB) FIXED;
         DCL DIVPCT(0:99) FIXED;
         DCL TOTPCT(0:@HB) FIXED;
         DCL (I,DIV) FIXED;
         DCL TOTCK(0:@HB) FIXED;
         DCL DIVCK(0:99) FIXED;
         DCL JOBCK(0:99,0:@HB) FIXED;
         IF TITLE='IWT SATISFIED'
              THEN DO;
                   TOTCK(*) = TOTCNT(1,*);
                   DIVCK(*) = DIVCNT(1,*);
                   JOBCK(*,*) = IWTCNT(CTLI,1,*,*);
                   END;
              ELSE DO;
                   TOTCK(*) = GRPRM;
                   DIVCK(*) = GRPRM;
                   DO I = 0 TO 99;
                     JOBCK(I,*) = DIVPRM(I);
                     END;
                   END;
         DO I = 0 TO @HB;
              TOTPCT(I)=SETPCT(TOTPRM(I),TOTCK(I));
              END;
         DO DIV = 0 TO 99;
              DIVPCT(DIV)=SETPCT(DIVPRM(DIV),DIVCK(DIV));
              DO I = 0 TO @HB;
                   JOBPCT(DIV,I)=SETPCT(IWTPRM(DIV,I),
                     JOBCK(DIV,I));
                   END;
              END;
         IF TITLE = 'IWT SATISFIED'
              THEN I = SETPCT(GRPRM,GRTOT(1));
              ELSE I = 0;
         IF TITLE ^= 'IWT SATISFIED'
              THEN DO;
                   DIVCK(*) = DIVCNT(1,*);
                   TOTCK(*) = TOTCNT(1,*);
                   JOBCK(*,*) = IWTCNT(CTLI,1,*,*);
                   END;
         CALL PRTRPT(JOBPCT,DIVPCT,TOTPCT,JOBCK,DIVCK,TOTCK,I,
           'PERCENT '××TITLE××' - '××BTITLE(CTLI),CTLI);
         CALL PRTRPT(IWTPRM,DIVPRM,TOTPRM,JOBCK,DIVCK,TOTCK,GRPRM,
           TITLE××' - JOB COUNTS - '××BTITLE(CTLI),CTLI);
         END DORPT;
 SETPCT:  PROC(B,A) RETURNS(FIXED BIN(31,0));
         DCL (A,B) FIXED BIN(31,0);
         DCL I FIXED;
         IF A ^= 0
              THEN I = ((B*100)+(A/2))/A; /*ROUNDED*/
              ELSE I = 0;
         RETURN(I);
         END SETPCT;
 PRTRPT:  PROC(JOBCNT,DIVCNT,TOTCNT,JOBCK,DIVCK,TOTCK,
            GRTOT,TITLE,CTLI);
         DCL TOTCK(0:@HB) FIXED;
         DCL DIVCK(0:99) FIXED;
         DCL JOBCK(0:99,0:@HB) FIXED;
         DCL JOBCNT(0:99,0:@HB) FIXED;
         DCL DIVCNT(0:99) FIXED;
         DCL TOTCNT(0:@HB) FIXED;
         DCL TITLE CHAR(80) VARYING;
         DCL CTLI FIXED;
         DCL (GRTOT,DIV,H,I) FIXED;
         DCL (MYDTES,MYDTEE) CHAR(6);
         CALL JULGREG(MYDTEE,RSDCTL);
         CALL JULGREG(MYDTES,CTLDTE(CTLI));
         MYDTEE = SUBSTR(MYDTEE,5,2)××SUBSTR(MYDTEE,1,4);
         MYDTES = SUBSTR(MYDTES,5,2)××SUBSTR(MYDTES,1,4);
         DCL PGSTR CHAR(40) VARYING;
         DCL HICKI FIXED;
         DCL HICKTIT(3) CHAR(80) VAR STATIC INIT(
           'IWT REQUESTED - JOB COUNTS - DAILY',
           'IWT SATISFIED - JOB COUNTS - DAILY',
           'PERCENT IWT SATISFIED - DAILY');
         DCL HICKDTE CHAR(40) VAR;
         ON ENDPAGE(SYSPRINT) BEGIN;
              PGSTR = ROMAN(PGCNT);
              PUT EDIT(TITLE,'PAGE ',PGSTR)
                (A,COL(MYSIZ-5-LENGTH(PGSTR)),A,A) PAGE;
              PGCNT = PGCNT + 1;
              PUT EDIT('IWT REPORT BY DIVISION, CLASS = ',CLHD(CLCTL))
                (A,A) SKIP(2);
              IF CTLI = 1
                THEN PUT EDIT('DATE = ',SPELDTE(MYDTEE))(A,A) SKIP(1);
                ELSE PUT EDIT('FROM ',SPELDTE(MYDTES),' TO ',
                  SPELDTE(MYDTEE))(A,A,A,A) SKIP(1);
              PUT EDIT('JOBS REPORTED ARE THOSE READ IN BETWEEN ',
                CTME(1),' AND ',CTME(2),' HOURS.')(5 A) SKIP(1);
              PUT EDIT('- IWT VALUE RANGES IN MINUTES -')
                (COL((MYSIZ-31)/2),A) SKIP(2);
              INTVL=((MYSIZ-3)/(@RNGEPRTY+1))-5;
              IF INDEX(TITLE,'DELIVERED')^=0
                   THEN PUT EDIT('DIV',('<=',H DO H = IWTDIV TO
                     MAXIWT BY IWTDIV),' >',MAXIWT,'  TOT')
                     (A,@RNGEPRTY (X(INTVL),A,P'ZZ9'),
                     X(INTVL),A) SKIP(1);
                   ELSE PUT EDIT('DIV',('<=',H DO H = 0 TO
                     MAXIWT BY IWTDIV),'  TOT')
                     (A,@RNGEPRTY (X(INTVL),A,P'ZZ9'),
                     X(INTVL),A) SKIP(1);
              PUT SKIP(2);
              END;
         CALL PRTSUB(SYSPRINT,MYSIZ);
         IF HICKSW
              THEN DO;
                   DO HICKI = 1 TO 3 WHILE(HICKTIT(HICKI) ^= TITLE);
                        END;
                   IF HICKI < 4
                        THEN DO;
         ON ENDPAGE(HICKARY(HICKI)) BEGIN;
              HICKDTE = SPELDTE(MYDTEE);
              PUT FILE(HICKARY(HICKI))
                EDIT(HICKDTE)(COL(LNESIZ-LENGTH(HICKDTE)),A) PAGE;
              PUT FILE(HICKARY(HICKI))
                EDIT('MIS COMPUTER SERVICES PERFORMANCE')
                (COL((LNESIZ-33)/2),A) SKIP(1);
              PUT FILE(HICKARY(HICKI))
                EDIT('BATCH JOBS - INPUT WAIT TIME (IWT)')
                (COL((LNESIZ-34)/2),A) SKIP(1);
              PUT FILE(HICKARY(HICKI))
                EDIT('REPORT NO.',HICKI,' - ',TITLE,
                ' CLASS ',CLHD(CLCTL))
                (COL((LNESIZ-23-LENGTH(TITLE))/2),A,P'Z9',A,A,A,A)
                SKIP(1);
              PUT FILE(HICKARY(HICKI))
                EDIT('JOBS READ IN BETWEEN 0800 - 1600 HOURS')
                (COL((LNESIZ-38)/2),A) SKIP(1);
              PUT FILE(HICKARY(HICKI))
                EDIT('- IWT VALUE RANGES IN MINUTES -')
                (COL((LNESIZ-31)/2),A) SKIP(2);
              INTVL = ((LNESIZ-7)/(@RNGEPRTY+1))-5;
              PUT FILE(HICKARY(HICKI))
                EDIT('DIV',('<=',H DO H = 0 TO
                MAXIWT BY IWTDIV))
                (A,@RNGEPRTY (X(INTVL),A,P'ZZ9'))
                SKIP(1);
              IF INDEX(TITLE,'PERCENT') ^= 0
                   THEN PUT FILE(HICKARY(HICKI))
                     EDIT('AVERAGE')(X(INTVL),A);
                   ELSE PUT FILE(HICKARY(HICKI))
                     EDIT('TOT JOBS')(X(INTVL),A);
              PUT FILE(HICKARY(HICKI))
                EDIT(('_' DO I = 1 TO LNESIZ))
                ((LNESIZ) A) SKIP(1);
              PUT FILE(HICKARY(HICKI)) SKIP(2);
              END;
                             CALL PRTSUB(HICKARY(HICKI),LNESIZ);
                             END;
                   END;
 PRTSUB:  PROC(PRTFLE,LNESIZ);
         DCL (DIV,I,J) FIXED;
         DCL PRTFLE FILE;
         DCL LNESIZ FIXED;
 RFORMZ:  FORMAT (X(((LNESIZ-3)/(@RNGEPRTY+1))-5),P'ZZZZZ');
 RFORM9:  FORMAT (X(((LNESIZ-3)/(@RNGEPRTY+1))-5),P'ZZZZ9');
         SIGNAL ENDPAGE(PRTFLE);
         DO DIV = 0 TO 99;
           IF DIVCK(DIV) ^= 0
             THEN DO;
               PUT FILE(PRTFLE) EDIT(DIV,' ')(P'99',A) SKIP(1);
               DO I = 0 TO @HB;
                 IF JOBCK(DIV,I) = 0
                   THEN PUT FILE(PRTFLE) EDIT(JOBCNT(DIV,I))(R(RFORMZ));
                   ELSE PUT FILE(PRTFLE) EDIT(JOBCNT(DIV,I))(R(RFORM9));
                 END;
               PUT FILE(PRTFLE) EDIT(DIVCNT(DIV))(R(RFORM9));
               END;
           END;
         PUT FILE(PRTFLE)
           EDIT('TOT',(TOTCNT(I) DO I = 0 TO @HB),GRTOT)
           (A,(@RNGEPRTY+1) (R(RFORM9)))
           SKIP(2);
         END PRTSUB;
         END PRTRPT;
 SETCL:  PROC(CL) RETURNS(FIXED BIN(15,0));
         DCL CL CHAR(1);
         IF CL = 'C'
              THEN RETURN(1);
              ELSE IF CL = 'E'
                   THEN RETURN(2);
                   ELSE RETURN(0);
         END SETCL;
 CTLINIT:  PROC;
         DCL I FIXED;
         INITSW = '0'B;
         CLCTL = ACTPTR->SCL;
         RSDCTL = ACTPTR->SRSD;
         DO I = 1 TO 3;
              IWTCNT(I,*,*,*) = 0;
              CTLDTE(I) = RSDCTL;
              BRCNT(I) = 0;
              END;
         END CTLINIT;
         END;
