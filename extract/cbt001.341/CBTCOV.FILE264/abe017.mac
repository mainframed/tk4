 /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
 /* ABE017 - END */
   %INCLUDE ABESUB;
 ABESUB(ABE017) PARS(0) RECURS(YES) CHECK(YES) APL(YES);
   %INCLUDE ABESUBA;

   DCL 1 RUNDATA UNALIGNED BASED(RUNPTR),
       /* RUN STACK ELEMENT - EACH ELEMENT REPRESENTS
          A RUN CURRENTLY IN PROGRESS. */
     2 RUNPOP PTR,
       /* PTR TO PRIOR RUN STACK ELEMENT */
     2 RUNRHEL PTR,
       /* PTR TO RECHDR ASSOCIATED WITH THIS RUN */
     2 RUNCUR PTR,
       /* PTR TO CURRENT REC STRUCTURE */
     2 LABI FIXED BIN(31,0),
       /* INDEX TO THE HIGHEST ELEMENT USED IN RHAIDLBT */
     2 LABTAB(256),
      3 $KEY FIXED BIN(31,0),
      3 $LAB CHAR(8),
     2 RUN_CURKEY FIXED BIN(31,0);
       /* KEY OF CURRENT RECORD */
   DCL (SETCAPS,SYSCALL) ENTRY;
   DCL OPCODE FIXED BIN(15,0) STATIC INIT(12); /* STOP */
   DCL RETCODE FIXED BIN(31,0);
   DCL L FIXED BIN(15,0);
   DCL (DELPTR,PRIOR,SAVPTR,TRH) PTR;
   DCL NOSAVE CHAR(6) STATIC INIT('NOSAVE');
   DCL SAVE CHAR(4) STATIC INIT('SAVE');
   DCL INTERNAL CHAR(8) STATIC INIT('INTERNAL');
   DCL NOINTERNAL BIT(1) INIT('1'B);
   DCL 1 APLCB BASED(RH_APL),
     2 APLCBLEN FIXED BIN(15,0),
     2 APLCBSTR CHAR(L REFER(APLCBLEN));
   DCL 1 BLSTR BASED(BLPTR),
     2 NBLPTR PTR,
     2 BLRHHDR PTR,
     2 BLCMDLEN FIXED BIN(15,0),
     2 BLCMD CHAR(L REFER(BLCMDLEN)) VAR;

   IF PARY(1)^=''
     THEN DO;
       CALL SETCAPS(PARY(1));
       SELECT;
         WHEN(PARY(1)=SUBSTR(SAVE,1,MIN(4,LENGTH(PARY(1))))) DO;
           CMDDATA='SE';
           RHRC = 0;
           RETURN;
           END;
         WHEN(PARY(1)=SUBSTR(NOSAVE,1,MIN(6,LENGTH(PARY(1)))))
           SAVEFLAG,RHDBSAVE = '0'B;
         WHEN(PARY(1)=SUBSTR(INTERNAL,1,MIN(8,LENGTH(PARY(1)))))
           SAVEFLAG,RHDBSAVE,NOINTERNAL = '0'B;
         OTHERWISE DO;
           MSGDATA='INVALID OPERAND';
           RHRC = 8;
           RETURN;
           END;
         END; /* SELECT */
       END;
   IF SAVEFLAG × RHDBSAVE
     THEN DO;
       MSGDATA='ENTER "SAVE" SUBCOMMAND OR "END NOSAVE"';
       RHRC = 8;
       RETURN;
       END;
   IF TERMFLAG
     THEN CALL SYSCALL(TERMEP,OPCODE,BUF,MSGDATA,RETCODE,TERMECB);
       /* GO TERMINATE SESSION */
   DO RUNPTR = RHRUNSTK REPEAT RUNPOP
     WHILE(RUNPTR ^= NULL)
     UNTIL(RUNRHEL = RHPTR);
     END;
   IF RUNPTR ^= NULL
     THEN DO RUNPTR = RHRUNSTK REPEAT RHRUNSTK
       WHILE(RHRUNSTK^=NULL);
       RHRUNSTK = RUNPOP;
       FREE RUNDATA;
       END;
   IF RHCST^=0
     THEN I=#CMD('LINES',RHPTR,RHHDRPT);
   IF RHCST^=0
    THEN IF RHLST^=NULL
     THEN I=#CMD('LINES '××RHLST->RHNAME,RHPTR,RHHDRPT);
     ELSE IF RHNXT^=NULL
      THEN I=#CMD('LINES '××RHNXT->RHNAME,RHPTR,RHHDRPT);
   IF RHLST^=NULL
     THEN RHLST->RHNXT = RHNXT;
     ELSE NXTRHEL = RHNXT;
   IF RHNXT ^= NULL
     THEN RHNXT->RHLST = RHLST;
     ELSE LSTRHEL = RHLST;
   IF RHFAMSW
     THEN SAVPTR=RHFAMEP(RHHDRPT,RHPTR,NULL,4);
     ELSE DO;
       IF OUTDDN^=NULL
         THEN IF BUFPTR=ADDR(OUTDDN->ALCRECL)
           THEN BUFPTR=NULL;
       IF INDDN^=NULL
         THEN IF BUFPTR=ADDR(INDDN->ALCRECL)
           THEN BUFPTR=NULL;
       IF BUFPTR^=NULL
         THEN DO;
           FREE BUFSTR;
           BUFPTR = NULL;
           END;
       IF INDDN ^= NULL
         THEN DO;
           IF ^SUBSTR(INDDN->ALCFLAG,5,1) /* FREE? */
             THEN CALL #DOFRE(INDDN); /* CALL DOFRE */
           IF INDDN^=OUTDDN & OUTDDN^=NULL
             THEN IF ^SUBSTR(OUTDDN->ALCFLAG,5,1) /* FREE? */
               THEN CALL #DOFRE(OUTDDN); /* CALL DOFRE */
           END;
       END;
   /* NOW FREE LIST OF RECORDS */
   RECPTR = NXTHDR;
   DO WHILE(RECPTR^=HDPTR);
     SAVPTR=NXTPTR;
     FREE REC;
     RECPTR = SAVPTR;
     END;
   /* NOW FREE LIST OF SUBCOMMANDS */
   PRIOR=NULL;
   DO BLPTR=RH_STACK REPEAT SAVPTR WHILE(BLPTR^=NULL);
     SAVPTR=NBLPTR;
     IF BLRHHDR^=RHPTR
       THEN PRIOR=BLPTR;
       ELSE DO; /* REMOVE FROM STACK */
         IF PRIOR=NULL
           THEN RH_STACK=NBLPTR;
           ELSE PRIOR->NBLPTR=NBLPTR;
         FREE BLSTR;
         END;
     END;
   /* NOW FREE APL CONTROL BLOCK, IF ANY */
   IF RH_APL^=NULL
     THEN FREE APLCB;
   /* NOW FREE USE LIST */
   DO DELPTR=RHUSEHD REPEAT RHUSEHD WHILE(RHUSEHD^=NULL);
     RHUSEHD=DELPTR->RHNLINK;
     FREE DELPTR->RHNAMESTR;
     END;
   /* NOW FREE USE DISPLAY LIST */
   DO DELPTR=RH_DISPLAY_HDR REPEAT RH_DISPLAY_HDR
     WHILE(RH_DISPLAY_HDR^=NULL);
     RH_DISPLAY_HDR=DELPTR->RHNLINK;
     FREE DELPTR->RHNAMESTR;
     END;

   IF RHLST^=NULL
     THEN SAVPTR = RHLST;
     ELSE SAVPTR = RHNXT;
   FREE RECHDR;
   RHPTR = NULL;
   RHRC = 0;
   IF NOINTERNAL
     THEN DO;
       DO TRH=NXTRHEL REPEAT TRH->RHNXT
         WHILE(TRH^=NULL) UNTIL(^TRH->RHSUPSW);
         END;
       IF TRH^=NULL
         THEN RETURN;
       /* THERE IS NOTHING LEFT BUT SUPPORT DATA SETS - SCHEDULE
          "END NOSAVES" FOR ALL OF THEM */
       IF NXTRHEL^=NULL
         THEN DO;
           TRH=NXTRHEL;
           RHRC=#CMD('END N',TRH,RHHDRPT);
           END;
       END;
   END;
