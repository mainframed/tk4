*PROCESS CS(60),MACRO;
 /* RETRIEVE */
 /* THIS IS THE RETRIEVE TSO COMMAND PROCESSOR.  IT IS ISSUED TO
    RESTORE A DATA SET TO DISK FROM THE ARCHIVES TAPE.  FORMAT FOR
    THE COMMAND IS 'RETRIEVE 'DSNAME' JOBCARD() AT() TEMPNAME()
    SPACE()'.
    THE COMMAND WILL GENERATE JCL FOR A BATCH JOB TO DO THE RETRIEVAL
    AND WILL CAUSE THE BGD COMMAND TO BE EXECUTED TO SUBMIT IT TO
    BATCH.
    DSNAME IS THE NAME OF THE DATA SET TO BE RETRIEVED FROM TAPE.
    JOBCARD IS A KEYWORD PARAMETER THAT DEFAULTS TO JOBCARD.CNTL,
    WHICH IS A DATA SET CONTAINING A VALID OS
    JOB STATEMENT.  IF THE DSNAME IS NOT IN APOSTROPHES AND THE
    DESCRIPTIVE QUALIFIER IS NOT CNTL, CNTL WILL BE APPENDED.
    THE AT KEYWORD PARAMETER, WHICH DEFAULTS TO 'LOCAL', CAN BE USED
    TO ROUTE THE PRINTED OUTPUT FROM THE BATCH JOB TO A PARTICULAR
    HASP REMOTE LOCATION.
    THE COMMAND WILL USE DATA SET BPRT.CNTL AS A WORK DATA SET
    TO CONTAIN THE GENERATED JCL.
    SPACE() SPECIFIES THE NUMBER OF TRACKS TO BE ALLOCATED TO THE
    NEW DATA SET.  THE DEFAULT IS 1.
 */
         % INCLUDE CPINIT1;
         % @CMP = 'O';
         % INCLUDE CPINIT2;
         % INCLUDE CTLGDEF;
         @PROC(1,DSN#(DSNAME),SPACE(50#(NUMERIC)),
   JOBCARD(JOBSUB#(DSNAME,DEFAULT='SYS2.JOBPROC(RETRIEVE)')),
           AT(LOCAL),VOL(),SYSOUT(A),SETJBN);
         DCL (NXFIRST,NXLAST) BIT(1) EXT;
         DCL DDNAME CHAR(8) EXT;
         DCL VOLUME CHAR(6) EXT;
         DCL RETCODE FIXED BIN(31,0);
         DCL RETCHAR CHAR(4) DEF RETCODE;
         DCL RET BIT(32) DEF RETCODE;
         DCL 1 ABND,
              2 DUM BIN FLOAT(50),
              2 AREA,
               3 BLK CHAR(256),
               3 ATTR CHAR(3),
               3 ACVOL CHAR(6);
         DCL DEVTYPE FIXED BIN(31,0) DEF BLK;
         DCL PTRFIX FIXED BIN(31,0) DEF CTLGPTR;
         CTLGPTR = ADDR(BLK);
         DCL CTLGRET CHAR(8);
         DCL 1 MSGREC STATIC,
              2 CON1 CHAR(15) INIT('/*MESSAGE'),
              2 CON2 CHAR(10) INIT((10)'*'),
              2 TAPECNT PIC'Z9',
              2 CON3 CHAR(6) INIT(' 9TRK '),
              2 CON4 CHAR(47) INIT((10)'*');
         DCL 1 SETUP STATIC,
              2 CON1 CHAR(15) INIT('/*SETUP'),
              2 SERARY(8),
               3 OUTSER CHAR(6) INIT((8)(6)' '),
               3 OUTCOMMA CHAR(1) INIT((8)(1)' '),
              2 CON2 CHAR(9) INIT(' ');
         DCL JFCBAREA CHAR(176);
         % INCLUDE JFCB;
         JFCBPTR=ADDR(JFCBAREA);
         DCL (JOBDDN,TMPDDN) CHAR(8);
         DCL JCLREC CHAR(80);
         DCL (FULLDSN,FULLDSNA) CHAR(44) VARYING;
         FULLDSN=SETDSN@(DSN);
         FULLDSNA='';
 CALLCTLG:
         CALL SYSCTLG('NAME',RET,FULLDSN,'SYSRES',BLK);
         IF RETCODE ^= 0         /* IS DATA SET CATALOGUED. */
              THEN DO;
                   CALL TROUT(RETCHAR,CTLGRET);
                   @SETL(&CTLGRET=CTLGRET);
                   @SETL(&FULLDSN=FULLDSN);
           @WRITE('ERROR = &CTLGRET ACCESSING CATALOG, DSN = &FULLDSN');
                   RETURN;
              END;
         IF DEVTYPE ^= 78336     /* IS DATA SET ON A TAPE VOLUME. */
              THEN DO;
                  @SETL(&FULLDSN=FULLDSN);
                  @WRITE('ERROR - &FULLDSN IS NOT ON AN ARCHIVE TAPE');
                  RETURN;
              END;
         /* @ALLOC(DA(BPRT.CNTL),WORK); */
         /* TMPDDN=DA08DDN; */
         DCL (ERROR_CODE,INFO_CODE) FIXED BINARY(15);
         %INCLUDE @9,@9SYSOUT,@9WRITER,@9DDNRET,@9CLOSE,
                  @9ALLOC,@9DCLSVC;
         @9SYSOUT('*');
         @9WRITER('INTRDR');
         @9DDNRET(TMPDDN);
         @9CLOSE;
         @9ALLOC(ERROR_CODE,INFO_CODE);
         IF ERROR_CODE ^= 0
           THEN DO;
              PUT FILE(SYSPRINT) EDIT
                  ('ERROR ALLOCATING INTERNAL READER, CODE = ') (A)
                  (ERROR_CODE)                                  (F(5));
              STOP;
              END;
         DCL TMPFILE FILE RECORD OUTPUT ENV(FB RECSIZE(80)
           BLKSIZE(400));
         OPEN FILE(TMPFILE) TITLE(TMPDDN);
         DCL JOBFILE FILE RECORD INPUT;
         @SETDSN(JOBSUB,'CNTL');
         @ALLOC(SHR);
         JOBDDN=DA08DDN;
         OPEN FILE(JOBFILE) TITLE(JOBDDN);
         ON ENDFILE(JOBFILE) I = -1;
         I = 1;
         READ FILE(JOBFILE) INTO(JCLREC);
         DO WHILE(I>=0);
              IF SETJBN^=0 & I^=0
                   THEN DO;
                        I = 0;
                        K = INDEX(JCLREC,' JOB ');
                        IF K = 0
                             THEN DO;
                                  @WRITE('NO VALID JOBCARD WAS FOUND');
                                  SIGNAL ERROR;
                                  END;
                        JCLREC = '//'××SYMC('&SYSUID')××'RR'××
                          SUBSTR(JCLREC,K);
                        END;
              WRITE FILE(TMPFILE) FROM(JCLREC);
              READ FILE(JOBFILE) INTO(JCLREC);
              END;
         CLOSE FILE(JOBFILE);
         DA18DDN=JOBDDN;
         @FREE(FI);
         JCLREC = '/*ROUTE  PRINT ' ×× SYMC('&AT');
         WRITE FILE(TMPFILE) FROM(JCLREC);
         IF VLSTBLK.VOLCNT > 8
              THEN I = 8;
              ELSE I = VLSTBLK.VOLCNT;
         TAPECNT = I;
         WRITE FILE(TMPFILE) FROM(MSGREC);
         DO J = 1 TO I;
              OUTSER(J) = VLSTBLK.VOLID.VOLSER(J);
              IF J > 1
                   THEN OUTCOMMA(J-1) = ',';
              END;
         WRITE FILE(TMPFILE) FROM(SETUP);
         JCLREC = '//REST EXEC TSOREST,';
         WRITE FILE(TMPFILE) FROM(JCLREC);
         JCLREC = '// SYSOUT=' ×× SYMC('&SYSOUT') ×× ',';
         WRITE FILE(TMPFILE) FROM(JCLREC);
         DCL SOUT CHAR(1);
         SOUT = SYMC('&SYSOUT');
         IF SOUT = '1'
            THEN JCLREC = '// HOLD=YES,';
            ELSE JCLREC = '// HOLD=NO,';
         WRITE FILE(TMPFILE) FROM(JCLREC);
         JCLREC = '// DSN=' ×× '''' ×× FULLDSN ×× '''' ×× ',';
         WRITE FILE(TMPFILE) FROM(JCLREC);
  /******************************************************************
  * REMOVED FOR USER ID. CHANGES 1/15/81, RICK BABLER.              *
  *      IF VOL = 0                                                 *
  *           THEN DO;                                              *
  *                CALL SYSJFCB(TMPDDN,JFCBPTR);                    *
  *                JCLREC = '// VOL=' ×× JFCBVOLS(1) ×× ',';        *
  *                END;                                             *
  *           ELSE JCLREC = '// VOL=' ×× SYMC('&VOL') ×× ',';       *
  ******************************************************************/
         IF VOL ^= 0
              THEN DO;
                   JCLREC = '// VOL=' ×× SYMC('&VOL') ×× ',';
                   WRITE FILE(TMPFILE) FROM(JCLREC);
              END;
  /*********  ABOVE WAS THE REPLACEMENT FOR THE USER CHANGES. ******/
         JCLREC = '// SPACE=' ×× SYMC('&SPACE');
         WRITE FILE(TMPFILE) FROM(JCLREC);
         JCLREC = ' RESTORE DSN=' ×× FULLDSN;
         WRITE FILE(TMPFILE) FROM(JCLREC);
         CLOSE FILE(TMPFILE);
         /* @CMD('SUBMIT BPRT'); */
         /* @CMD('DELETE BPRT.CNTL'); */
         @WRITE('RETRIEVE JOB SUCESSFULLY SUBMITTED');
         END;
