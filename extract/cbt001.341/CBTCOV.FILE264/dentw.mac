 /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
 /* DENTW - WRITEOUT */
 DENTW:  PROC(RHPTR,SUBENT,OTPTR,OPCODE,RECPTR) OPTIONS(REENTRANT);
         % DCL @PROCNAME CHAR;
         % @PROCNAME = '';
         % INCLUDE DENTSUB;
         DCL OTPTR PTR;
              /* PTR TO ALCSTR FOR OUTPUT */
         DCL OPCODE CHAR(*) VAR;
           /* MAY BE EITHER 'INIT', 'NXT', OR 'LAST' */
         DCL RECPTR PTR UNALIGNED;
         DCL DCBPS FILE ENV(CONSECUTIVE) RECORD OUTPUT;
         DCL SEQPIC PIC'99999999' INIT(0);
         DCL (I,J,K,L,LR,M,N,P,S) FIXED BIN(31,0);
         DCL (BLSTRA,BLSTRB) CHAR(1) VAR;
         DCL DSNENQ ENTRY(CHAR(44), CHAR(3))
           RETURNS(CHAR(2));
         DCL DOSEQ BIT(1);
         DCL ENQRET CHAR(2);
         DCL SOP PTR;
         DCL SOREC CHAR(169);
         DCL (NOCC ENV(CONSECUTIVE F RECSIZE(169) BLKSIZE(169)),
            CTLASA ENV(CONSECUTIVE F RECSIZE(169) BLKSIZE(169) CTLASA),
            CTL360 ENV(CONSECUTIVE F RECSIZE(169) BLKSIZE(169) CTL360))
            FILE RECORD OUTPUT;
         DCL DENTPRT FILE VARIABLE;
         IF SUBSTR(OPCODE,1,MIN(3,LENGTH(OPCODE)))='CTL'
           THEN DO;  /* IT IS REQUEST TO WRITE SYSOUT */
             SELECT(SUBSTR(OPCODE,1,6));
               WHEN('CTLASA') DENTPRT=CTLASA;
               WHEN('CTL360') DENTPRT=CTL360;
               OTHERWISE      DENTPRT=NOCC;
               END;
             IF LENGTH(OPCODE)>6
               THEN DOSEQ='1'B;
               ELSE DOSEQ='0'B;
             OPEN FILE(DENTPRT) TITLE('DENTPRT');
             DO SOP=NXTHDR REPEAT SOP->NXTPTR WHILE(SOP^=HDPTR);
               IF DOSEQ
                 THEN DO;
                   SEQPIC=SOP->RECSEQ;
                   IF SUBSTR(OPCODE,1,6)^='CTLNON'
                     THEN IF LENGTH(SOP->RECSTR)=0
                       THEN SOREC=' '××SEQPIC;
                       ELSE SOREC=SUBSTR(SOP->RECSTR,1,1)××SEQPIC××' '
                         ××SUBSTR(SOP->RECSTR,2);
                     ELSE SOREC=SEQPIC××' '××SOP->RECSTR;
                   END;
                 ELSE SOREC=SOP->RECSTR;
               WRITE FILE(DENTPRT) FROM(SOREC);
               END;
             CLOSE FILE(DENTPRT);
             RETURN;
             END;
         LR=OTPTR->ALCRECL;
         IF SUBSTR(OTPTR->ALCFLAG,3,1) /* RECFM=V? */
           THEN LR=LR-4; /* ACCOUNT FOR ROW */
         IF INDEX(OPCODE,'INIT') ^= 0
           THEN DO;
             ENQRET = DSNENQ(OTPTR->ALCDSN,'ENQ');
             IF ENQRET ^= 'OK'
               THEN SIGNAL ERROR;
             OPEN FILE(DCBPS) TITLE(OTPTR->ALCDDN);
             SUBSTR(OTPTR->ALCFLAG,7,1)='0'B;
             END;
         IF RECPTR ^= NULL
           THEN DO;
             IF SUBSTR(OTPTR->ALCFLAG,6,1)
               THEN DO;  /* IT IS NONUM */
                 I = LENGTH(RECSTR);
                 BLSTRA = '';
                 P,K,M = 0;
                 J,L = 1;
                 END;
               ELSE DO;
                 SEQPIC = RECSEQ;
                 IF OTPTR->ALCSEQOFF = 0
                   THEN I = 0;
                   ELSE I = MIN(LENGTH(RECSTR),OTPTR->ALCSEQOFF);
                 L = I+1;
                 IF OTPTR->ALCSEQOFF <= LENGTH(RECSTR)
                   THEN DO;
                     P = 0;
                     BLSTRA = '';
                     END;
                   ELSE DO;
                     P = OTPTR->ALCSEQOFF - LENGTH(RECSTR)-1;
                     BLSTRA = ' ';
                     END;
                 J = 8 - OTPTR->ALCSEQLEN + 1;
                 K = 9-J;
                 M=LENGTH(RECSTR)-I;
                 END;
             IF SUBSTR(OTPTR->ALCFLAG,3,1) /* RECFM=V */
               THEN DO;
                 BLSTRB = '';
                 N = 0;
                 END;
               ELSE DO;
                 N = OTPTR->ALCRECL-(I+P+K+M)-1;
                 IF N < 0
                   THEN DO;
                     BLSTRB = '';
                     N = 0;
                     END;
                   ELSE BLSTRB = ' ';
                 END;
             OTPTR->ALCBUF=SUBSTR(RECSTR,1,I)××REPEAT(BLSTRA,P)××
               SUBSTR(SEQPIC,J,K)××SUBSTR(RECSTR,L,M)××REPEAT(BLSTRB,N);
             IF LENGTH(OTPTR->ALCBUF)>LR
               THEN DO;
                 OTPTR->ALCBUF=SUBSTR(OTPTR->ALCBUF,1,LR);
                 MSGDATA='RECORD TOO LONG - TRUNCATED';
                 END;
             IF LENGTH(OTPTR->ALCBUF)=0
               THEN OTPTR->ALCBUF=' ';
             WRITE FILE(DCBPS) FROM(OTPTR->ALCBUF);
             END;
         IF INDEX(OPCODE,'LAST') ^= 0
           THEN DO;
             CLOSE FILE(DCBPS);
             ENQRET = DSNENQ(OTPTR->ALCDSN,'DEQ');
             IF ENQRET ^= 'OK'
               THEN SIGNAL ERROR;
             END;
         END DENTW;
