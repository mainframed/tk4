  /*ABEGOP - COPYRIGHT 1983 BY THOMAS GLEN SMITH */
 /**********************************************************************
 *                                                                     *
 * ABEGOP, ALIAS #ABEGOP, IS                                           *
 * CALLED TO OBTAIN THE NEXT OPERAND FROM CBUF.  WILL SET VARIABLE OP  *
 * TO THE OPERAND, TRANSLATE TO UPPER CASE, AND SET OL TO LENGTH(OP).  *
 * ALSO USED ARE VARIABLES M AND N, WHICH ARE INDICES INTO CBUF.       *
 *                                                                     *
 **********************************************************************/
   %INCLUDE ABESUB;
 ABESUB(ABEGOP) PARMS(CBUF,M,N,OL,OP) CHECK(YES);
   DCL (I,J,K,M,N,OL,P) FIXED BIN(15,0);
   DCL (CBUF,OP) CHAR(*) VAR;
   DCL SETCAPS ENTRY;
   DCL DLMNEXT ENTRY(CHAR(*) VAR, FIXED BIN(15,0), FIXED BIN(15,0));
   L=LENGTH(CBUF);
   IF N>L
     THEN DO; /* NO MORE OPERANDS */
       OL=0;
       OP='';
       RETURN;
       END;
   IF N>0
     THEN IF SUBSTR(CBUF,N,1)^=''
       THEN N=N-1;
   CALL DLMNEXT(CBUF,M,N); /* GET OPERAND */
   OL=N-M; /* OPERAND LENGTH */
   IF OL=0
     THEN OP='';
     ELSE DO;
       OP=SUBSTR(CBUF,M,OL);
       IF ^(SUBSTR(OP,1,1)='''' × SUBSTR(OP,1,1)='(')
         THEN DO;
           I=INDEX(OP,',');
           IF I=0
             THEN I=OL+1;
           J=INDEX(OP,'.');
           IF J=0
             THEN J=OL+1;
           P=INDEX(OP,':');
           IF P=0
             THEN P=OL+1;
           K=MIN(I,J,P);
           IF K<=OL
             THEN DO;
               N=M+K-1;
               IF M=N
                 THEN N=N+1;
               OL=N-M;
               OP=SUBSTR(OP,1,OL);
               END;
           END;
       CALL SETCAPS(OP);
       END;
   END ABEGOP;
