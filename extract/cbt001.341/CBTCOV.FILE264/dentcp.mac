 /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
  /*DENTCP*/
  DENTCP:PROC(RHPTR,SUBENT,RHHDRPT,DATA) OPTIONS(REENTRANT);
   /* CALLED TO ANALYZE A STRING OF SUBCOMMAND DATA. SOME OF THE
   FUNCTIONS PERFORMED ARE -
   - IF FIRST CHARACTER IS A SINGLE QUOTE, MAKE IT AN LSP SUBCOMMAND
   - IF FIRST CHARACTER IS A SINGLE PERCENT (%), MAKE IT A CLIST SUB
   - IF FIRST TWO CHARACTERS ARE PERCENTS (%%), MAKE IT AN ARUN SUB
   - IF FIRST CHARACTER IS A SPECIAL CHARACTER, ASSUME IT IS A
   DELIMITER BETWEEN ONE OR MORE SUBCOMMANDS IN THE STRING.
   */
   % DCL @PROCNAME CHAR;
   % @PROCNAME ='';
   % INCLUDE DENTSUB;
   DCL DATA CHAR(*) VAR;
   DCL L FIXED BIN(15,0);
   DCL 1 BLSTR BASED(BLPTR),
     2 NBLPTR PTR,
     2 BLCMDLEN FIXED BIN(15,0),
     2 BLCMD CHAR(L REFER(BLCMDLEN)) VAR;
   DCL AM CHAR(65) STATIC INIT(
   '$?=abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'
   );
   DCL TCMD CHAR(1024) VAR;
   DCL THDR PTR;
   THDR=NULL;
   SELECT;
     WHEN(SUBSTR(DATA,1,1)='''')
       CALL BLSET('LSP '××DATA);
     WHEN(INDEX(DATA,'%%')=1)
       CALL BLSET('ARUN '××SUBSTR(DATA,3));
     WHEN(INDEX(DATA,'%')=1)
       CALL BLSET('CLIST '××SUBSTR(DATA,2));
     WHEN(VERIFY(SUBSTR(DATA,1,1),AM)=0)
       CALL BLSET(DATA);
     OTHERWISE DO;
       N=LENGTH(DATA)+1;
       DO WHILE(N>1);
         DO I=N-1 TO 1 BY -1 WHILE(SUBSTR(DATA,I,1)^=SUBSTR(DATA,1,1));
           END;
         TCMD=SUBSTR(DATA,I+1,N-I-1);
         IF TCMD^=''
           THEN DO;
             IF SUBSTR(DATA,1,1)=''''
               THEN TCMD='LSP '××TCMD;
             CALL BLSET(TCMD);
             END;
         N=I;
         END;
       END;
     END; /* SELECT */
   IF BLHDR=NULL
     THEN BLHDR=THDR;
     ELSE DO;
       DO BLPTR=BLHDR REPEAT NBLPTR UNTIL(NBLPTR=NULL);
         END;
       NBLPTR=THDR;
       END;
   BLSET:PROC(PDATA);
     DCL PDATA CHAR(*) VAR;
     DCL I FIXED BIN(15,0);
     DCL 1 DATASTR BASED(DATAPTR),
       2 DATALEN FIXED BIN(15,0),
       2 DATA CHAR(I REFER(DATALEN)) VAR;
     DCL LAST PTR;
     DCL SAVRHPTR PTR;
     DCL BALL BIT(32) STATIC INIT('10000001100100111001001101000000');
     /* LOWER CASE        A       L       L       BLANK */
     DCL LOALL CHAR(4) DEF BALL;
     I=LENGTH(PDATA);
     ALLOCATE DATASTR;
     DATA=PDATA;
     IF LENGTH(DATA)>4
       THEN IF SUBSTR(DATA,1,4)='ALL '× SUBSTR(DATA,1,4)=LOALL
         THEN DO;
           DATA=SUBSTR(DATA,5);
           SAVRHPTR=RHPTR;
           DO RHPTR=NXTRHEL REPEAT RHNXT WHILE(RHPTR^=NULL);
             IF RHPTR^=SAVRHPTR
               THEN DO;
                 L=LENGTH(DATA);
                 ALLOCATE BLSTR;
                 BLCMD=DATA;
                 IF BLHDR^=NULL
                   THEN DO LAST=BLHDR REPEAT LAST->NBLPTR UNTIL(LAST->
                     NBLPTR=NULL);
                     END;
                 CALL Q(BLHDR,LAST,BLPTR);
                 END;
             END;
           RHPTR=SAVRHPTR;
           END;
     L=LENGTH(DATA);
     ALLOCATE BLSTR;
     NBLPTR = THDR;
     THDR = BLPTR;
     BLCMD =DATA;
     FREE DATASTR;
     END BLSET;
   Q:PROC(HDR,LAST,CUR);
     /******************************************************************
     * CALLED TO QUEUE A NEW ELEMENT AT THE END OF A SINGLY LINKED LIST*
     ******************************************************************/
     DCL (HDR,LAST,CUR,DUM) PTR;
     DCL 1 EL BASED(DUM),
       2 NEXT PTR;
     CUR->NEXT=NULL;
     IF HDR=NULL
       THEN HDR=CUR;
       ELSE LAST->NEXT=CUR;
     LAST=CUR;
     END Q;
   END;
