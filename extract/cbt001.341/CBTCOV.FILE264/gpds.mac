 /* GPDS */
   % INCLUDE CPINIT1;
   % @CMP = 'O';
   % INCLUDE CPINIT2;
   DFT RANGE(*) FIXED BIN VALUE(FIXED BIN(31,0));
   @PROC(1,MYDSN#(DSNAME,DEFAULT=XXX),NOLIST,
     OUTDA(DASUB#(DSNAME)),PROMPT,
     MASK(),STAK,EXEC,VOL(),SYMLIST,OUTFI(),INFI());
   DCL FINAME CHAR(8) VAR;
   DCL MYVOL CHAR(12) VAR INIT('');
   DCL HDPTR PTR;
   DCL 1 EL UNALIGNED BASED(ELPTR),
     2 NXTEL PTR,
     2 ELLEN FIXED BIN(15,0),
     2 ELNAM CHAR(L REFER (ELLEN)) VAR;
   DCL VOLUME CHAR(6) EXT;
   DCL OUT FILE RECORD OUTPUT
     ENV(VB RECSIZE(256) BLKSIZE(9440));
   DCL SP FIXED BIN(15,0) INIT(78);
   DCL STACK ENTRY;
   DCL SUFFIX ENTRY(CHAR(*),CHAR(*))
     RETURNS(FIXED BIN(15,0));
   DCL 1 STOR78 UNALIGNED BASED(PTR78),
     2 LSDADATA PTR,
     2 LSDRCLEN FIXED BIN(15,0),
     2 LSDTOTLN FIXED BIN(15,0),
     2 LSDANEXT PTR,
     2 LSDRSVRD FIXED BIN(31,0),
     2 STARTLIST FIXED BIN(31,0);
   DCL 1 LISTEL UNALIGNED BASED(LELPTR),
     2 LELLEN FIXED BIN(15,0),
     2 LELCMD CHAR(256) VAR;
   DCL 1 LISTEL2 UNALIGNED BASED(LELPTR),
     2 LELPAD FIXED BIN(15,0),
     2 LELZRO FIXED BIN(15,0);
   DCL PTRWRK PTR,
       PTRADJ FIXED BIN(31,0) DEF PTRWRK;
   DCL PDSDDN CHAR(8) INIT('IN');
   DCL (CURDSN,TSTDSN) CHAR(44) VAR;
   DCL PRSTR CHAR(256) VAR;
   DCL MYMSK CHAR(8) INIT('........');

   IF SYMC('&INFI')^=''
     THEN PDSDDN=SYMC('&INFI');
     ELSE DO;
       CURDSN = SETDSN@(MYDSN);
       @SETL(&DSN=CURDSN);
       IF VOL^=0
         THEN MYVOL='VOL('××SYMC('&VOL')××')';
       @CMD('ALLOC FI(IN) DA(''&DSN'') SHR REUSE &MYVOL');
       END;
   HDPTR=NULL;
   IOECB=0;
   IF PROMPT^=0
     THEN DO;
       @WRITE('ENTER COMMAND');
       @READ(PRSTR);
       END;
   IF SYMLIST^=0
     THEN DO;
       PROMPT=1;
       PRSTR='DSN=&DSN(&MEM),VOL=SER=&VOL';
       END;
   IF MASK^=0
     THEN MYMSK=SYMC('&MASK');
   TSTDSN=SETDSN@(DASUB);
   IF TSTDSN^=''
     THEN DO;
       @SETDSN(DASUB,CLIST);
       @ALLOC(DA,WORK);
       OPEN FILE(OUT) TITLE(DA08DDN);
       END;
   FINAME=SYMC('&OUTFI');
   IF FINAME^=''
     THEN OPEN FILE(OUT) TITLE(FINAME);
   CALL DOPDS(PDSDDN);
   IF HDPTR ^= NULL
     THEN DO;
       DSNLEN = 0;
       ELPTR = HDPTR;
       DO CNT=1 REPEAT CNT+1 UNTIL(ELPTR=NULL);
         DSNLEN=DSNLEN+ELLEN;
         ELPTR=NXTEL;
         END;
       TOTLEN=DSNLEN+4*CNT;
       LV=TOTLEN+16;
       CALL SYSGETM('EU',LV,PTR78,SP,GETRET);
       IF GETRET^=0
         THEN SIGNAL ERROR;
       LSDADATA,LSDANEXT,PTRWRK=ADDR(STARTLIST);
       LSDRCLEN=0;
       LSDTOTLN=TOTLEN;
       LSDRSVRD=0;
       DO ELPTR=HDPTR REPEAT NXTEL WHILE(ELPTR^=NULL);
         LELPTR=PTRWRK;
         LELCMD=ELNAM;
         LELLEN=LENGTH(LELCMD)+4;
         LELZRO=0;
         PTRADJ=PTRADJ+LELLEN;
         END;
       CALL STACK(CPPLUPT,CPPLECT,IOECB,RETCODE,'PROCN',PTR78);
       IF RETCODE^=0
         THEN SIGNAL ERROR;
       END;
   RETURN;
 DOPDS:  PROC(DDN);
   DCL (DDN,MEM) CHAR(8);
   DCL MYPT PTR;
   DCL GETDIR ENTRY(CHAR(8)) RETURNS(CHAR(8));
   DCL DDNAME CHAR(8) EXT;
   DCL (NXFIRST,NXLAST) BIT(1) EXT;
   DCL UCBPTR PTR;
   NXFIRST='1'B;
   NXLAST='0'B;
   DO UNTIL(DDN=DDNAME);
     CALL NEXTDD;
     END;
   @SETL(&VOL=VOLUME);
   DO MEM=GETDIR(DDN) REPEAT GETDIR(DDN) WHILE(MEM^=HIGH(8));
     CALL DOMEM(MEM);
     END;
   END DOPDS;
 DOMEM:  PROC(MEM);
   DCL MEM CHAR(8);
   DCL (I) FIXED;
   DO I = 1 TO 8;
     IF SUBSTR(MYMSK,I,1)^='.'
       THEN IF SUBSTR(MYMSK,I,1)^=SUBSTR(MEM,I,1)
         THEN RETURN;
     END;
   @SETL(&MEM=SUBSTR(MEM,1,SUFFIX(MEM,' ')));
   IF PROMPT^=0
     THEN CALL EMIT(PRSTR);
     ELSE CALL EMIT(MEM);
   END DOMEM;
 EMIT:  PROC(STR);
   DCL STR CHAR(*) VAR;
   DCL BUF CHAR(256) VAR;
   DCL SEQNO PIC'99999999' STATIC INIT(0);
   IF NOLIST=0
     THEN @WRITE(STR,MF=S);
   IF TSTDSN^='' × FINAME^=''
     THEN DO;
       SEQNO=SEQNO+1;
       @REP(BUF=STR);
       BUF=SEQNO××BUF;
       WRITE FILE(OUT) FROM(BUF);
       RETURN;
       END;
   IF STAK^=0
     THEN DO;
       @REP(BUF=STR);
       L = LENGTH(BUF);
       ALLOC EL;
       NXTEL = HDPTR;
       ELNAM=BUF;
       HDPTR = ELPTR;
       RETURN;
       END;
   IF EXEC^=0
     THEN @CMD(STR,MF=S);
   END EMIT;
   END;
