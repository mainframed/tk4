  /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
 /**********************************************************************
 *                                                                     *
 * ABERF, ALIAS #REFRESH, IS CALLED TO REFRESH A DATA SET BY READING   *
 * FROM DISK.                                                          *
 *                                                                     *
 **********************************************************************/
   %INCLUDE ABESUB;
 ABESUB(ABERF) PARMS(RHPTR,RHHDRPT,FLINE,COUNT);
   %INCLUDE ABESUBA;

    DCL (FLINE,COUNT) FIXED BIN(31,0);
    DCL SUFFIX ENTRY(CHAR(*),CHAR(*))RETURNS(FIXED BIN(15,0));
    DCL LAST FIXED BIN(31,0) INIT(99999999);
    DCL SEQINCK FIXED BIN(31,0);
    DCL SEQINST CHAR(80) VARYING;
    DCL ADDSEQ FIXED BIN(31,0);
    DCL RENSW BIT(1) INIT('0'B);
    DCL EOFSW BIT(1) INIT('0'B);
    DCL OPCODE CHAR(4) VAR;
    RENSW = SUBSTR(INDDN->ALCFLAG,6,1);
    GOTO LUP;
 RENSET:
    RENSW='1'B;
 LUP:
    SEQINCK=-1;
    OPCODE='INIT';
    DO WHILE(NXTHDR^=HDPTR);
      CALL #PUTSLOT(RHPTR,RHHDRPT,NXTHDR); /* CALL PUTSLOT */
      END;
    IF INDDN ^= NULL
      THEN DO;
        CALL #READ(RHPTR,RHHDRPT,INDDN,OPCODE,EOFSW); /* CALL ABER */
        DO I = 1 REPEAT I+1 WHILE(^EOFSW);
          IF RENSW
            THEN ADDSEQ=-1;
            ELSE DO;
              IF LENGTH(INDDN->ALCBUF)<INDDN->ALCSEQOFF+INDDN->
                ALCSEQLEN
                THEN GOTO RENSET;
              SEQINST=SUBSTR(INDDN->ALCBUF,INDDN->ALCSEQOFF+1,
                INDDN->ALCSEQLEN);
              IF VERIFY(SEQINST,'0123456789')^=0
                THEN GOTO RENSET;
              J = SEQINST;
              IF J <= SEQINCK
                THEN GOTO RENSET;
                ELSE SEQINCK=J;
              ADDSEQ=SEQINCK;
              IF INDDN->ALCSEQOFF = 0
                THEN INDDN->ALCBUF=SUBSTR(INDDN->ALCBUF,INDDN->
                  ALCSEQLEN+1);
                ELSE IF INDDN->ALCSEQOFF+INDDN->ALCSEQLEN=INDDN->
                  ALCRECL
                  THEN INDDN->ALCBUF=SUBSTR(INDDN->ALCBUF,1,INDDN->
                    ALCSEQOFF);
                  ELSE INDDN->ALCBUF=SUBSTR(INDDN->ALCBUF,1,INDDN->
                    ALCSEQOFF)××SUBSTR(INDDN->ALCBUF,INDDN->ALCSEQOFF+
                    INDDN->ALCSEQLEN+1);
              END;
          IF I >= FLINE+COUNT
            THEN LEAVE;
            ELSE IF I >= FLINE
              THEN DO;
                CALL #ADD(RHPTR,RHHDRPT,RECPTR,RECPTR,ADDSEQ,INDDN->
                  ALCBUF,0); /* ADDREC */
                IF ^HEXMODE
                  THEN DO;
                    CALL #ABETR(INDDN->ALCBUF);
                    IF INDDN->ALCBUF^=RECSTR
                      THEN DO;
                        MSGDATA='WARNING - DATA CONTAINS UNPRINTABLE CHA
 RACTERS';;
                        HEXMODE ='1'B;
                        END;
                    END;
                END;
          CALL #READ(RHPTR,RHHDRPT,INDDN,OPCODE,EOFSW); /* CALL ABER */
          END;
 ENDINP:
        IF RENSW
          THEN DO;
            SUBSTR(INDDN->ALCFLAG,6,1) ='1'B;
            CALL #RESEQ(RHPTR,RHHDRPT,HDPTR,'NOTSAVE','RENUM',LAST,
            RHPPTR); /* RESEQ */
            END;
        END;
    SCANFLAG='1'B;
    CALL #NC(RHPTR,NXTHDR); /* CALL NEWCUR */
    SAVEFLAG ='0'B;
    SUBSTR(INDDN->ALCFLAG,6,1)=RENSW;
    IF NXTHDR^=HDPTR
      THEN IF NXTHDR->RECSEQ=0
        THEN MSGDATA='WARNING - FIRST SEQUENCE NUMBER IS ZERO';
    END ABERF;
