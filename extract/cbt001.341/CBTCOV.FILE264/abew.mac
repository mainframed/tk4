 /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
 /**********************************************************************
 *                                                                     *
 * ABEW (ALIAS #WRITE) IS CALLED TO WRITE OUTPUT TO A DATA SET.        *
 *                                                                     *
 **********************************************************************/
   %INCLUDE ABESUB;
 ABESUB(ABEW) PARMS(RHPTR,RHHDRPT,OTPTR,OPCODE,PRMPTR);
   %INCLUDE ABESUBA;
   DCL OTPTR PTR;
        /* PTR TO ALCSTR FOR OUTPUT */
   DCL OPCODE CHAR(*) VAR;
     /* MAY BE EITHER 'INIT', 'NXT', OR 'LAST' */
   DCL PRMPTR PTR;
   DCL DCBPS FILE ENV(CONSECUTIVE) RECORD OUTPUT;
   DCL SEQPIC PIC'99999999' INIT(0);
   DCL (I,J,K,L,LR,M,N,P,S) FIXED BIN(31,0);
   DCL (BLSTRA,BLSTRB) CHAR(1) VAR;
   DCL DSNENQ ENTRY(CHAR(44), CHAR(3))
     RETURNS(CHAR(2));
   DCL DOSEQ BIT(1);
   DCL ENQRET CHAR(2);
   DCL SOP PTR;
   DCL SOREC CHAR(169);
   DCL (NOCC ENV(CONSECUTIVE F RECSIZE(169) BLKSIZE(169)),
      CTLASA ENV(CONSECUTIVE F RECSIZE(169) BLKSIZE(169) CTLASA),
      CTL360 ENV(CONSECUTIVE F RECSIZE(169) BLKSIZE(169) CTL360))
      FILE RECORD OUTPUT;
   DCL ABEPRT FILE VARIABLE;
   IF SUBSTR(OPCODE,1,MIN(3,LENGTH(OPCODE)))='CTL'
     THEN DO;  /* IT IS REQUEST TO WRITE SYSOUT */
       SELECT(SUBSTR(OPCODE,1,6));
         WHEN('CTLASA') ABEPRT=CTLASA;
         WHEN('CTL360') ABEPRT=CTL360;
         OTHERWISE      ABEPRT=NOCC;
         END;
       IF LENGTH(OPCODE)>6
         THEN DOSEQ='1'B;
         ELSE DOSEQ='0'B;
       OPEN FILE(ABEPRT) TITLE('ABEPRT');
       DO SOP=NXTHDR REPEAT SOP->NXTPTR WHILE(SOP^=HDPTR);
         IF DOSEQ
           THEN DO;
             SEQPIC=SOP->RECSEQ;
             IF SUBSTR(OPCODE,1,6)^='CTLNON'
               THEN IF LENGTH(SOP->RECSTR)=0
                 THEN SOREC=' '××SEQPIC;
                 ELSE SOREC=SUBSTR(SOP->RECSTR,1,1)××SEQPIC××' '
                   ××SUBSTR(SOP->RECSTR,2);
               ELSE SOREC=SEQPIC××' '××SOP->RECSTR;
             END;
           ELSE SOREC=SOP->RECSTR;
         IF SUBSTR(OPCODE,1,6)='CTLASA'
           THEN SELECT(SUBSTR(SOREC,1,1));
             WHEN('1',' ','-','+','0');
             OTHERWISE SOREC=' '××SOREC;
             END; /* SELECT */
         WRITE FILE(ABEPRT) FROM(SOREC);
         END;
       CLOSE FILE(ABEPRT);
       RETURN;
       END;
   LR=OTPTR->ALCRECL;
   IF SUBSTR(OTPTR->ALCFLAG,3,1) /* RECFM=V? */
     THEN LR=LR-4; /* ACCOUNT FOR ROW */
   IF INDEX(OPCODE,'INIT') ^= 0
     THEN DO;
       ENQRET = DSNENQ(OTPTR->ALCDSN,'ENQ');
       IF ENQRET ^= 'OK'
         THEN SIGNAL ERROR;
       OPEN FILE(DCBPS) TITLE(OTPTR->ALCDDN);
       SUBSTR(OTPTR->ALCFLAG,7,1)='0'B;
       END;
   IF PRMPTR ^= NULL
     THEN DO;
       IF SUBSTR(OTPTR->ALCFLAG,6,1)
         THEN DO;  /* IT IS NONUM */
           I = LENGTH(PRMPTR->RECSTR);
           BLSTRA = '';
           P,K,M = 0;
           J,L = 1;
           END;
         ELSE DO;
           SEQPIC = PRMPTR->RECSEQ;
           IF OTPTR->ALCSEQOFF = 0
             THEN I = 0;
             ELSE I = MIN(LENGTH(PRMPTR->RECSTR),OTPTR->ALCSEQOFF);
           L = I+1;
           IF OTPTR->ALCSEQOFF <= LENGTH(PRMPTR->RECSTR)
             THEN DO;
               P = 0;
               BLSTRA = '';
               END;
             ELSE DO;
               P = OTPTR->ALCSEQOFF - LENGTH(PRMPTR->RECSTR)-1;
               BLSTRA = ' ';
               END;
           J = 8 - OTPTR->ALCSEQLEN + 1;
           K = 9-J;
           M=LENGTH(PRMPTR->RECSTR)-I;
           END;
       IF SUBSTR(OTPTR->ALCFLAG,3,1) /* RECFM=V */
         THEN DO;
           BLSTRB = '';
           N = 0;
           END;
         ELSE DO;
           N = OTPTR->ALCRECL-(I+P+K+M)-1;
           IF N < 0
             THEN DO;
               BLSTRB = '';
               N = 0;
               END;
             ELSE BLSTRB = ' ';
           END;
       OTPTR->ALCBUF=SUBSTR(PRMPTR->RECSTR,1,I)××REPEAT(BLSTRA,P)××
         SUBSTR(SEQPIC,J,K)××SUBSTR(PRMPTR->RECSTR,L,M)××
         REPEAT(BLSTRB,N);
       IF LENGTH(OTPTR->ALCBUF)>LR
         THEN DO;
           OTPTR->ALCBUF=SUBSTR(OTPTR->ALCBUF,1,LR);
           MSGDATA='RECORD TOO LONG - TRUNCATED';
           END;
       IF LENGTH(OTPTR->ALCBUF)=0
         THEN OTPTR->ALCBUF=' ';
       WRITE FILE(DCBPS) FROM(OTPTR->ALCBUF);
       END;
   IF INDEX(OPCODE,'LAST') ^= 0
     THEN DO;
       CLOSE FILE(DCBPS);
       ENQRET = DSNENQ(OTPTR->ALCDSN,'DEQ');
       IF ENQRET ^= 'OK'
         THEN SIGNAL ERROR;
       END;
   END ABEW;
