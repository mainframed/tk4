 TOP200:  PROC OPTIONS(MAIN);
         % INCLUDE SMFMVS;
         % INCLUDE SMFDEFI;
         DCL ELAPTME ENTRY(FIXED DEC(5,0),FIXED BIN(31,0),
           FIXED DEC(5,0),FIXED BIN(31,0))
           RETURNS(FIXED BIN(31,0));
         ON ENDFILE(SMFDATA) GO TO EOJ;
         DCL NULL BUILTIN;
         DCL (WRKA,WRKB,WRKC,ELAPTM)
           BIN FLOAT(53) STATIC INIT(0B);
         DCL NAMCTL CHAR(8);
         DCL INITSW BIT(1) STATIC INIT('1'B);
         DCL DUMPTR PTR,
             DUMADJ FIXED BIN(31,0) DEF DUMPTR;
         DCL DATE BUILTIN;
         DCL 1 COMSTR BASED(COMPTR),
              2 COMVAR BIN FLOAT(53),
              2 COMNAM CHAR(8),
              2 COMCNT FIXED BIN(31,0),
              2 COMPP PTR,
              2 COMNP PTR;
         ON ERROR CALL PLIDUMP('SHB');
         GO TO BYHSKPG;
         % DCL (VARLST,NXTVAR,NXTCHAR,NPLAB,PPLAB,NAMLAB,NXTLAB) CHAR;
         % DCL CNTLAB CHAR;
         % DCL (ZI,ZJ,ZK,TOPCNT) FIXED;
         % DCL (BUBLAB,CUMLAB,STRLAB) CHAR;
         % ZJ = 0;
         % ZK = 0;
         % TOPCNT = 200;
         % VARLST = 'KBMA,KBMW,CPU,EXCP ';
 CALLSETA: ;
         % DO ZI = 1 TO 80;
              % NXTCHAR = SUBSTR(VARLST,ZI,1);
              % IF NXTCHAR = ' ' × NXTCHAR = ','
                   % THEN %DO;
                        % NXTVAR = SUBSTR(VARLST,ZJ+1,ZI-ZJ-1);
                        % ZJ = ZI;
                        % ZK = ZK + 1;
                        % NPLAB = 'NP' ×× NXTVAR;
                        % PPLAB = 'PP' ×× NXTVAR;
                        % NXTLAB = 'NXT' ×× NXTVAR;
                        % NAMLAB = 'NAM' ×× NXTVAR;
                        % BUBLAB = 'BUB' ×× NXTVAR;
                        % CUMLAB = 'CUM' ×× NXTVAR;
                        % STRLAB = 'STR' ×× NXTVAR;
                        % CNTLAB = 'CNT' ×× NXTVAR;
         DCL 1 STRLAB(TOPCNT) STATIC,
              2 NXTVAR BIN FLOAT(53) INIT((TOPCNT)0B),
              2 NAMLAB CHAR(8) INIT((TOPCNT)(8)' '),
              2 CNTLAB FIXED BIN(31,0) INIT((TOPCNT)0),
              2 PPLAB PTR,
              2 NPLAB PTR;
         DCL NXTLAB BIT(1) STATIC INIT('1'B);
         DCL BUBLAB PTR;
         DCL CUMLAB BIN FLOAT(53) STATIC INIT(0B);
         IF NXTLAB
              THEN DO;
                   NXTLAB = '0'B;
                   BUBLAB = ADDR(STRLAB(TOPCNT));
                   HPPTR(ZK) = ADDR(STRLAB(1));
                   STRLAB.PPLAB(1),STRLAB.NPLAB(TOPCNT) = NULL;
                   DO I = 2 TO TOPCNT;
                        STRLAB.NPLAB(I-1) = ADDR(STRLAB(I));
                        STRLAB.PPLAB(I) = ADDR(STRLAB(I-1));
                        END;
                   END;
         IF CUMLAB>BUBLAB->COMVAR
              THEN CALL SETA(STRLAB,HPPTR(ZK),BUBLAB,CUMLAB,
                NAMCTL);
         CUMLAB = 0;
                        % IF NXTCHAR = ' '
                             % THEN % GOTO PREDONE;
                        % END;
              % END;
 % PREDONE: ;
         DCL HPPTR(ZK) PTR;
         NAMCTL = SMF4PGMN;
         PGMCNT = 0;
         GO TO NXT;
 BYHSKPG:
         ON ENDPAGE(SYSPRINT) BEGIN;
              PUT EDIT('TOP 200 REPORT, DATE = ',DATE)(A,A) PAGE;
              PUT EDIT('ELAPSED','SERVICE','CPU','EXCP')
                (COL(21),A,COL(50),A,COL(83),A,COL(111),A) SKIP(1);
              PUT EDIT('PGM NAME','PGMCNT','TIME',
                'PGM NAME','PGMCNT','UNITS',
                'PGM NAME','PGMCNT','TIME',
                'PGM NAME','PGMCNT','COUNT')
                       (A,COL(10),A,COL(24),A,
                COL(30),A,COL(39),A,COL(52),A,
                COL(59),A,COL(68),A,COL(82),A,
                COL(88),A,COL(97),A,COL(110),A) SKIP(1);
              PUT EDIT('(.01 SECS)','(.01 SECS)')
                (COL(18),A,COL(76),A) SKIP(1);
              PUT SKIP(1);
              END;
 NXT:
         READ FILE(SMFDATA) INTO(SMFREC);
         IF TYPE ^= '00000100'B
              THEN GO TO NXT;
         IF SMF4STID = 0
              THEN GO TO NXT;
         DUMPTR = SMFPTR;
         DUMADJ = DUMADJ + SMF4RLCT;
         T4PTRA = DUMPTR;
         IF INITSW
              THEN DO;
                   INITSW = '0'B;
                   NAMCTL = SMF4PGMN;
                   PGMCNT = 0;
                   END;
         IF SMF4PGMN ^= NAMCTL
              THEN GO TO CALLSETA;
         PGMCNT = PGMCNT + 1;
         CUMKBMA = CUMKBMA + ELAPTME(SMF4STID,SMF4SIT,WRITDTE,WRITME);
         CUMKBMW = CUMKBMW + SMF4SST;
         IF CUMKBMW < 0
              THEN CUMKBMW = 0;
         DUMPTR = ADDR(SMF4LENN);
         DUMADJ = DUMADJ + SMF4LENN;
         T4PTR = DUMPTR;
         WRKA = SMF4SETM;
         CUMCPU = CUMCPU + WRKA;
         WRKA = 0;
         J = SMF4LENN;
         DO K = 1 TO 1000 WHILE(J > 2);
              WRKB = SMF4EXCP(K);
              WRKA = WRKA + WRKB;
              J = J - 8;
              END;
         CUMEXCP = CUMEXCP + WRKA;
         GO TO NXT;
 EOJ:
         SIGNAL ENDPAGE(SYSPRINT);
         DO I = 1 TO TOPCNT;
              PUT SKIP;
              DO J = 1 TO 4;
                   IF HPPTR(J) ^= NULL
                        THEN DO;
                             COMPTR = HPPTR(J);
                             HPPTR(J) = COMNP;
                             K = ((J-1)*29)+1;
                             PUT EDIT(COMNAM,COMCNT,COMVAR)
                               (COL(K),A,X(1),P'ZZ,ZZ9',
                               X(1),P'ZZZ,ZZZ,ZZ9');
                             END;
                   END;
              END;
 SETA:  PROC(STRPARM,HPPARM,BUBPARM,CUMPARM,NAMPARM);
         DCL 1 STRPARM(TOPCNT),
              2 PARMVAR BIN FLOAT(53),
              2 PARMNAM CHAR(8),
              2 PARMCNT FIXED BIN(31,0),
              2 PARMPP PTR,
              2 PARMNP PTR;
         DCL HPPARM PTR;
         DCL CUMPARM BIN FLOAT(53);
         DCL NXTPARM FIXED BIN(15,0);
         DCL NAMPARM CHAR(8);
         DCL BUBPARM PTR;
         DCL SAVPTR PTR;
         COMPTR = BUBPARM;
         COMVAR = CUMPARM;
         COMNAM = NAMPARM;
         COMCNT = PGMCNT;
         BUBPARM = COMPP;
         BUBPARM->COMNP = NULL;
         COMPP=NULL;
         SAVPTR = COMPTR;
         COMPTR = HPPARM;
         DO WHILE(COMVAR > CUMPARM);
              IF COMNP = NULL
                   THEN DO;
                        COMNP = SAVPTR;
                        SAVPTR -> COMPP = COMPTR;
                        BUBPARM = SAVPTR;
                        RETURN;
                        END;
              COMPTR = COMNP;
              END;
         SAVPTR->COMNP = COMPTR;
         SAVPTR->COMPP = COMPP;
         IF COMPP = NULL
              THEN HPPARM = SAVPTR;
              ELSE COMPP->COMNP = SAVPTR;
         COMPP = SAVPTR;
         END;
         END;
