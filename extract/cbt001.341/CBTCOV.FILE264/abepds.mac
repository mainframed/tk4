 /* ABEPDS */
 ABEPDS:  PROC(DDNAME,MEMPTR,INREC,RHHDRPT);
   DCL DDNAME CHAR(8);
   DCL MEMNAM CHAR(8) STATIC;
   DCL INREC CHAR(32767) VAR;
   DCL MEMPTR PTR;
   DCL RHHDRPT PTR;
   %INCLUDE ABERHHDR;

   DCL NULL BUILTIN;
   DCL ABEDIR ENTRY RETURNS(CHAR(8));
   DCL (SYSDCBP,SYSOPEN,SYSFIND,SYSCLOS,SYSREAD) ENTRY;
   DCL BUFPTR PTR STATIC,
       BUFPADJ FIXED BIN(31,0) DEF BUFPTR;
   DCL 1 LRECV BASED(BUFPTR),
        2 BYTCNT FIXED BIN(15,0),
        2 RECSTR CHAR(32767);
   DCL BCNTSAV FIXED BIN(15,0) STATIC INIT(0);
   DCL BUFFER CHAR(32767) VARYING STATIC;
   DCL LRECF CHAR(32767) BASED(BUFPTR);
   DCL RECL FIXED BIN(15,0) STATIC;
   DCL CURREC CHAR(32767) BASED(CURPTR);
   DCL CURPTR PTR STATIC,
       CURADJ FIXED BIN(31,0) DEF CURPTR;
   DCL DCBPTR PTR STATIC;
   DCL RETCODE FIXED BIN(31,0);
   DCL 1 DCB2 BASED(DCBPTR),
        2 DCBPAD1 CHAR(36),
        2 DCBRECFM BIT(8),
        2 DCBPAD2 CHAR(45),
        2 DCBLRECL FIXED BIN(15,0);
   DCL FTMSW BIT(1) STATIC INIT('1'B);
   ON CONDITION(SYSEOD) GOTO EOD;
   IF FTMSW
     THEN DO;
       FTMSW = '0'B;
       CALL SYSDCBP(DCBPTR,DDNAME);
       CALL SYSOPEN(DCBPTR,'INPUT');
       SIGNAL CONDITION(SYSEOD);
       END;
   GO TO NXT;
 EOD:
   MEMNAM = ABEDIR(RH_PDSDIR,DDNAME,MEMPTR);
   IF MEMNAM = HIGH(8)
     THEN GO TO EOJ;
   CALL SYSFIND(DCBPTR,MEMNAM,'D',RETCODE);
   IF RETCODE ^= 0
     THEN SIGNAL ERROR;
 NXT:
   CALL NXTREC(INREC);
   RETURN;
 EOJ:
   CALL SYSCLOS(SYSDCBP);
   FTMSW = '1'B;
   INREC='';
   MEMPTR = NULL;
   RETURN;

 NXTREC:  PROC(REC);
   DCL REC CHAR(32767) VARYING;
   IF BCNTSAV = 0
     THEN DO;
       CALL SYSREAD(DCBPTR,BUFFER);
       BCNTSAV = LENGTH(BUFFER);
       BUFPTR = ADDR(BUFFER);
       BUFPADJ = BUFPADJ + 2;
       IF SUBSTR(DCBRECFM,1,2) = '01' /* RECFM=V */
         THEN DO;
           BUFPADJ = BUFPADJ + 4;
           BCNTSAV = BCNTSAV - 4;
           END;
       END;
   IF SUBSTR(DCBRECFM,1,2) = '01' /* RECFM=V */
     THEN DO;
       RECL = BYTCNT - 4;
       CURADJ = BUFPADJ + 4;
       BCNTSAV = BCNTSAV - BYTCNT;
       BUFPADJ = BUFPADJ + BYTCNT;
       END;
     ELSE DO;
       RECL = DCBLRECL;
       CURADJ = BUFPADJ;
       BCNTSAV = BCNTSAV - DCBLRECL;
       BUFPADJ = BUFPADJ + DCBLRECL;
       END;
   REC = SUBSTR(CURREC,1,RECL);
   END NXTREC;

   END ABEPDS;
