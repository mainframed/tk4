 /* SYM@ */
 /*
0*$.HE GENERALIZED SUBROUTINES - SYM@
0*$.HE OBTAIN VALUE FOR TEXT VARIABLE
0*$.PL 55
0*$.PN 0
0*$.PA
0*$.SS
0*$.NF
0*$09/10/76
0*$AUTHOR: T. SMITH
0*$SOURCE MODULE NAME:  SYM@
0*$DOCUMENTATION ID:  0*$
0*$.FI L
0*$.SP 5
0*$THIS PROCEDURE CAN BE INVOKED TO OBTAIN THE VALUE FOR EITHER A
0*$LOCAL OR GLOBAL TEXT VARIABLE.  SEE DOCUMENTATION FOR
0*$SUBROUTINE SET@ ALSO.  THIS PROCEDURE HAS SIX ENTRY POINTS -
0*$LCLA, LCLC, GBLA, GBLC, SYMA, AND SYMC.  THE  ENTRY POINTS
0*$SUFFIXED BY THE CHARACTER A WILL RETURN THE VALUE AS FIXED
0*$BINARY(31,0).  THE ENTRY POINTS SUFFIXED BY THE CHARACTER C WILL
0*$RETURN THE VALUE AS CHARACTER(256) VARYING.  IF THE VARIABLE
0*$IS NOT DEFINED, EITHER A NULL STRING OR A 0 WILL BE RETURNED,
0*$DEPENDING UPON THE ENTRY USED.  ENTRY POINTS
0*$PREFIXED WITH THE CHARACTERS LCL WILL EXAMINE ONLY THE TABLE OF
0*$LOCAL VARIABLES.  ENTRY POINTS PREFIXED WITH THE CHARACTERS
0*$GBL WILL EXAMINE ONLY THE TABLE OF GLOBAL VARIABLES.  ENTRY
0*$POINTS PREFIXED WITH THE CHARACTERS SYM WILL EXAMINE FIRST THE
0*$TABLE OF LOCAL VARIABLES, THEN THE TABLE OF GLOBAL VARIABLES.
0*$.SP 1
0*$CALL FORMAT IS AS FOLLOWS -
0*$.SP 1
0*$.IN 5
0*$LAB = ENTRY(VAR);
0*$.IN 0
0*$.SP 1
0*$WHERE _
0*$.SP 1
0*$LAB
0*$.IN 5
0*$IS THE NAME OF THE PLI VARIABLE TO WHICH THE VALUE IS TO BE ASSIGNED.
0*$.IN 0
0*$ENTRY
0*$.IN 5
0*$IS EITHER LCLA, LCLC, GBLA, GBLC, SYMA, OR SYMC.
0*$.IN 0
0*$VAR
0*$.IN 5
0*$IS A CHARACTER STRING 1 TO 8 BYTES LONG CONTAINING THE NAME OF
0*$THE VARIABLE DESIRED.
0*$.IN 0
0*$THERE ARE CURRENTLY A SERIES OF 6 SYSTEM GLOBAL VARIABLES
0*$WHICH DO NOT HAVE TO BE SET BY THE USER BEFOREHAND IN ORDE
0*$TO OBTAIN A VALUE WHEN REFERENCED.  THESE ARE &SYSUID (RETURNS
0*$CURRENT TSO USERID), &SYSPREF (RETURNS CURRENT VALUE SET BY
0*$'PROFILE PREFIX()' COMMAND), &SYSDATE (CURRENT DATE), &SYSTIME
0*$(CURRENT TIME-OF-DAY), &LASTCC (LAST RETURN CODE ISSUED BY A
0*$A TSO COMMAND PROCESSOR), AND &SYSACCT (FIRST ACCOUNTING FIELD
0*$FOR THE JOB).
 */
 LCLA:  PROC(LAB) RETURNS(FIXED BIN(31,0)) OPTIONS(REENTRANT);
 LCLC:  ENTRY(LAB) RETURNS(CHAR(256) VARYING) OPTIONS(REENTRANT);
         MYHDC = SUBSTR(ECTUSER,5,4);
         GO TO BYENT;
 GBLA:  ENTRY(LAB) RETURNS(FIXED BIN(31,0)) OPTIONS(REENTRANT);
 GBLC:  ENTRY(LAB) RETURNS(CHAR(256) VARYING) OPTIONS(REENTRANT);
         MYHD = SYMHD@;
         GO TO BYENT;
 SYMA:  ENTRY(LAB) RETURNS(FIXED BIN(31,0)) OPTIONS(REENTRANT);
 SYMC:  ENTRY(LAB) RETURNS(CHAR(256) VARYING) OPTIONS(REENTRANT);
         MYHD = SYMHD@;
         SYMSW = '1'B;
 BYENT: ;
         % INCLUDE IKJPSCB;
         % INCLUDE IKJECT;
         % INCLUDE IKJUPT;
         DCL 1 CPPL EXT,
              2 CPPLCBUF PTR,
              2 CPPLUPT PTR,
              2 CPPLPSCB PTR,
              2 CPPLECT PTR;
         DCL MYHD PTR,
             MYHDC CHAR(4) DEF MYHD;
         DCL NULL BUILTIN;
         DCL (DATE,TIME) BUILTIN;
         DCL SUFFIX ENTRY(CHAR(*),CHAR(*))
           RETURNS(FIXED BIN(15,0));
         DCL DTSTR CHAR(8);
         DCL SYMSW BIT(1) INIT('0'B);
         % DCL SYSCNT@ FIXED;
              /* SYSCNT@ = NUMBER OF GLOBAL VARIABLES */
         % SYSCNT@ = 7;
         DCL SYSLAB(SYSCNT@) LABEL;
         DCL SYSTAB(SYSCNT@) CHAR(8) STATIC INIT(
           '&SYSUID',
           '&LASTCC',
           '&SYSDATE',
           '&SYSTIME',
           '&SYSPREF',
           '&SYSACCT',
           '&SYSNAME');
         DCL IRC FIXED BIN(31,0);
         DCL LAB CHAR(*);
         DCL 1 SYMTAB BASED(SYMPTR),
              2 NXTPTR PTR,
              2 LSTPTR PTR,
              2 SYMBOL CHAR(8),
              2 MAXLEN FIXED BIN(15,0),
              2 CURLEN FIXED BIN(15,0),
              2 TEXT CHAR(TXTLEN REFER(MAXLEN));
         DCL TXTLEN FIXED BIN(15,0);
         DCL SYMHD@ PTR EXT;
         DO I = 1 TO 2;
              SYMPTR = MYHD;
              DO WHILE(SYMPTR ^= NULL);
                   IF SYMBOL = LAB
                        THEN RETURN(SUBSTR(TEXT,1,CURLEN));
                   SYMPTR = NXTPTR;
                   END;
              IF SYMSW
                   THEN GO TO TESTSYS;
              MYHDC = SUBSTR(ECTUSER,1,4);
              END;
 TESTSYS:
         DO I = 1 TO SYSCNT@ WHILE(SYSTAB(I) ^= LAB);
              END;
         IF I > SYSCNT@
              THEN RETURN('');
         GO TO SYSLAB(I);
 SYSLAB(1):  /* USERID */
         DO I = 1 TO 7 WHILE(SUBSTR(PSCBUSER,I,1) ^= ' ');
              END;
         RETURN(SUBSTR(PSCBUSER,1,I-1));
 SYSLAB(2):  /* LAST RETURN CODE */
         IRC = ECTRTCD;
         RETURN(IRC);
 SYSLAB(3):  /* DATE */
         DTSTR = DATE;
         DTSTR=SUBSTR(DTSTR,3,2)××'/'××SUBSTR(DTSTR,5,2)××'/'××
           SUBSTR(DTSTR,1,2);
         RETURN(DTSTR);
 SYSLAB(4):  /* TIME */
         DTSTR = TIME;
         DTSTR=SUBSTR(DTSTR,1,2)××':'××SUBSTR(DTSTR,3,2)××':'××
           SUBSTR(DTSTR,5,2);
         RETURN(DTSTR);
 SYSLAB(5):  /* PREFIX */
         I = UPTPREFL;
         RETURN(SUBSTR(UPTPREFX,1,I));
 SYSLAB(6):;  /* SYSACCT */
 SYSLAB(7):;  /* SYSNAME */
         % INCLUDE @CVT;
         DCL 1 JCT BASED(JCTPTR),
           2 PAD CHAR(56),
           2 ACTP BIT(24);
         DCL 1 ACT BASED(ACTPTR),
           2 PAD1 CHAR(24),
           2 NAME CHAR(20),
           2 PAD2 CHAR(3),
           2 FLDCNT BIT(8),
           2 LEN BIT(8),
           2 ACCOUNT CHAR(200);
         DCL DUMPTR PTR,
             DUMADJ FIXED BIN(31,0) DEF DUMPTR;
         JCTPTR=@CVT(0,0,1,45,65);
         DUMADJ=BIN(ACTP);
         ACTPTR=DUMPTR;
         IF I = 6
           THEN DO; /* SYSACCT */
             L=BIN(LEN);
             RETURN(SUBSTR(ACCOUNT,1,L));
             END;
           ELSE     /* SYSNAME */
             RETURN(SUBSTR(NAME,1,SUFFIX(NAME,' ')));
         END;
