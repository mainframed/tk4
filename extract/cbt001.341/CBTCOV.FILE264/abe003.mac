 /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
 /* DENT003 - X,XF,XB,HELP,H,EXEC,EX,XT SUBCOMMANDS */
 /* 1         2 3  4  5    6 7    8  9              */
   %INCLUDE ABESUB;
 ABESUB(ABE003) PARS(000) CHECK(YES);
   %INCLUDE ABESUBA;
   %INCLUDE ABERHPNL;

   DCL 1 LRN_STRUCTURE BASED(LRNPTR),
   %INCLUDE ABELRN;
   %INCLUDE ABELRNA;

   % INCLUDE IKJECT;
   DCL SETCAPS ENTRY;
   DCL (PREFIX,SUFFIX) ENTRY(CHAR(*),CHAR(*))
     RETURNS(FIXED BIN(15,0));
   DCL EXNAME CHAR(8) VAR;
   DCL HELPSTR CHAR(4) VAR INIT('');
   DCL CMDSTR CHAR(240) VAR INIT('');
   DCL PROMPT CHAR(80) VAR INIT('ABEX');
   DCL KEYTABLE(3) CHAR(80) VAR STATIC INIT(
     'PROMPT','NEW','CONTINUE');
   DCL INDX FIXED BIN(15,0);
   DCL OPER CHAR(80) VAR;
   DCL KEYLAB(0:3) LABEL;
   DCL (SAVPTR,TRH) PTR;
   DCL (NSW,LOGSW) BIT(1) INIT('0'B);
   DCL TERMSW BIT(1);
   DCL LISTSW BIT(1) INIT('0'B);
   DCL STELP PTR BASED(STPTR);
   DCL STEL BIT(1) BASED(STELP);
   DCL CMDLAB(9) LABEL;
   DCL SAVEUSER CHAR(8);
   DCL PLUSCH CHAR(1);

   SAVEUSER=RHECT->ECTUSER;
   IF @CURPNL^=0
     THEN CALL #CRTZAP(RHPPTR); /* CALL CRTZAPS - CLEAR SCREEN */
   SAVPTR = RECPTR;
   GO TO CMDLAB(CMDINDX);
 CMDLAB(5):  /* HELP */
 CMDLAB(6):  /* H */
   HELPSTR,PROMPT = 'HELP';
   IF PARY(1)=''
     THEN CMDSTR='HELP';
     ELSE DO;
       CMDSTR='HELP '××
         PARY(1)××' '××
         PARY(2)××' '××
         PARY(3)××' ';
       END;
   GO TO X;
 CMDLAB(9):  /* XT */
   CALL #STACK('');
 CMDLAB(1):  /* DENT003 */
 CMDLAB(2):  /* X */
 CMDLAB(3):  /* XF */
 CMDLAB(4):  /* XB */
   IF PARY(1) ^= ''
     THEN DO;
       LOGSW = '1'B;
       NSW = '0'B; /* SET DEFAULT VALUE BEFORE PARSE */
       DO I = 1 TO HBOUND(PARY,1) WHILE(PARY(I)^='');
         CALL SETCAPS(PARY(I));
         CALL #SPARS(PARY(I),KEYTABLE,OPER,INDX);
           /* CALL SPARS */
         GO TO KEYLAB(INDX);
 KEYLAB(0):  /* INVALID OPERAND */
         LOGSW = '0'B;
         CMDSTR = PARY(1);
         GO TO X;
 KEYLAB(1):  /* PROMPT */
         PROMPT = OPER;
         GO TO ENDCASE;
 KEYLAB(2):  /* NEW */
         NSW = '1'B;
         GO TO ENDCASE;
 KEYLAB(3):  /* CONTINUE */
         NSW = '0'B;
 ENDCASE:
         END;
       IF NSW
         THEN DO;
           I=#CMD('SSE',RHPTR,RHHDRPT); /* DEFINE VIRT DATA SET */
           SAVPTR = NULL;
           END;
         ELSE CALL #NC(RHPTR,LSTHDR);
           /* CALL DENTNC */
       END;
 X:
   IF CMDINDX^=9
     THEN STFSMODE='0'B;
   RHRC = 0;
   DO FOREVER=1 REPEAT FOREVER;
     IF CMDSTR=''
       THEN CMDSTR=#PROMPT(PROMPT); /* CALL DOPRM */
     IF CMDSTR=''
       THEN DO;
         IF SAVPTR=NULL
           THEN SAVPTR=NXTHDR;
         CALL #NC(RHPTR,SAVPTR);
         RHECT->ECTUSER=SAVEUSER;
         RETURN;
         END;
     CMDSTR=SUBSTR(CMDSTR,PREFIX(CMDSTR,' '));
       /* ELIMINATE LEADING BLANKS */
     IF LISTSW
       THEN CALL #TERM(CMDSTR);
     CALL #DOCMD(CMDSTR,HELPSTR); /* CALL DOCMD */
     TERMSW=RHECT->ECTIOWA->STELP->STEL; /* = 0 IF CLIST ACTIVE */
     IF TERMSW & LOGSW
       THEN DO;
         IF LSTHDR = HDPTR
           THEN ADDSEQ=1;
           ELSE ADDSEQ=LSTHDR->RECSEQ+1;
         CALL #ADD(RHPTR,RHHDRPT,RECPTR,RECPTR,ADDSEQ,CMDSTR,0);
         END;
     RHRC=RHECT->ECTRTCD;
     CMDSTR = '';
     END;
   RHECT->ECTUSER=SAVEUSER;
   RETURN;
 CMDLAB(7):  /* EXEC */
 CMDLAB(8): /* EX */
   SAVPTR = RECPTR;
   CALL DO_EXEC;
   IF RHRC^=0
     THEN RETURN; /* ERROR DURING DO_EXEC */
   CALL #NC(RHPTR,LSTHDR);
   CMDSTR = '';
   LOGSW = '1'B;
   GO TO X;

 DO_EXEC: PROC;
 /**********************************************************************
 *                                                                     *
 * CALLED TO SET PROCESSING FOR EXEC SUBCOMMAND.  ALL COMMANDS IN THE  *
 * SPECIFIED LINE RANGE WILL BE #STACKED AFTER CONTINUATION LINES      *
 * ARE COMBINED.                                                       *
 *                                                                     *
 **********************************************************************/
   DCL TSTACK PTR;
   DCL 1 TEL BASED(TELPTR),
     2 TELNXT PTR,
     2 TELCMD CHAR(1024) VAR;
   DCL (I,J,K) FIXED BIN;
   DCL WRKSTR CHAR(1024) VAR;

   IF RH_L1>RH_L2
     THEN DO;
       L1=RH_L2;
       L2=RH_L1;
       END;
     ELSE DO;
       L1=RH_L1;
       L2=RH_L2;
       END;
   IF PARY(1)=''
     THEN EXNAME='';
     ELSE EXNAME=PARY(1);
   IF EXNAME=''
     THEN TRH=HDPTR;
     ELSE DO;
       TRH=#RHPLOC(EXNAME,RHHDRPT);
       IF TRH=NULL
         THEN DO;
           MSGDATA='NAME '××EXNAME××' NOT FOUND';
           RHRC = 8;
           RHECT->ECTUSER=SAVEUSER;
           RETURN;
           END;
       END;
   TSTACK,TELPTR=NULL;
   CALL #MD(TRH,RHHDRPT,L1);
   DO TRH->RECPTR=TRH->RECPTR REPEAT #SUCC(RHHDRPT,TRH,TRH->RECPTR)
     WHILE(RECSEQ<=L2) UNTIL(TRH->RECPTR=TRH);
     IF TRH->RECPTR=TRH
       THEN LEAVE;
     ALLOCATE TEL;
     TELNXT=TSTACK;
     TSTACK=TELPTR;
     TELCMD=TRH->RECPTR->RECSTR;
     IF TELCMD^=''
       THEN DO;
         TELCMD=SUBSTR(TELCMD,PREFIX(TELCMD,' '));
         TELCMD=SUBSTR(TELCMD,1,SUFFIX(TELCMD,' '));
         DO WHILE(SUBSTR(TELCMD,LENGTH(TELCMD),1)='+');
           TRH->RECPTR=#SUCC(RHHDRPT,TRH,TRH->RECPTR);
           IF TRH->RECPTR=TRH
             THEN LEAVE;
           WRKSTR=TRH->RECPTR->RECSTR;
           IF WRKSTR=''
             THEN WRKSTR='';
             ELSE DO;
               WRKSTR=SUBSTR(WRKSTR,PREFIX(WRKSTR,' '));
               WRKSTR=SUBSTR(WRKSTR,1,SUFFIX(WRKSTR,' '));
               END;
           TELCMD=SUBSTR(TELCMD,1,LENGTH(TELCMD)-1)××WRKSTR;
           END;
         END;
     END;
   /* NOW PUSH COMPLETE COMMANDS ONTO EXECUTION STACK */
   DO WHILE(TSTACK^=NULL);
     TELPTR=TSTACK;
     TSTACK=TELNXT;
     CALL #STACK(TELCMD);
     FREE TEL;
     END;
   LISTSW='1'B;
   END DO_EXEC;

   END;
