   DEARCH:  PROC(CPPL1,CPPL2,CPPL3,CPPL4) OPTIONS(MAIN);
 /* THIS TSO COMMAND PROCESSOR IS PART OF THE TSO ARCHIVES SYSTEM.
  IT IS USED TO UNCATLG DATA SETS WHICH ARE NO LONGER NEEDED ON
  THE ARCHIVES TAPES.  FORMAT FOR THE COMMAND IS AS FOLLOWS -

        DEARCH 'QUALIFIERS'

  QUALIFIERS MAY BE ANY NUMBER OF INDEX QUALIFIERS, UP TO AND
  INCLUDING THE DSNAME QUALIFIER.  YOUR TSO USERID WILL AUTOMATICALLY
  BE PREFIXED TO THE SPECIFIED QUALIFIERS.  IF THE QUALIFIERS
  REPRESENT INDEX LEVELS ONLY, ALL DATA SETS CATALOGED UNDER THOSE
  INDEX LEVELS WILL BE UNCATALOGED IF THE CATALOG ENTRY POINTS TO
  TAPE.  IF THE QUALIFIERS REPRESENT A FULLY QUALIFIED DATA SET NAME,
  ONLY THAT DATA SET WILL BE UNCATALOGED IF THE CATALOG ENTRY POINTS
  TO TAPE.
 */
 /*TEST:  PROC OPTIONS(MAIN);*/
          % INCLUDE IKJCPPL;
 /*CALL TESTCP(CPPLCBUF,CPPLUPT,CPPLPSCB,CPPLECT);*/
          % INCLUDE PDEDCL;
         % INCLUDE IKJPPL;
         % INCLUDE PPLINIT;
         % INCLUDE IKJPDECM;
         % INCLUDE IKJPDEDS;
         % INCLUDE IKJPSCB;
         CALL SYSPARS(PPLPTR,RETCODE);
         IF RETCODE ^= 0
              THEN SIGNAL ERROR;
         DO I = 1 TO 7 WHILE(SUBSTR(PSCBUSER,I,1) ^= '');
              END;
         DCL WRKPTR PTR,
             WRKSTR CHAR(100) BASED(WRKPTR);
         PDEPTR = ADDR(LEVDSN);
         WRKPTR = PDEDSPT;
         INCARD = SUBSTR(PSCBUSER,1,I-1) ×× '.' ××
           SUBSTR(WRKSTR,1,PDEDSL1);
         % INCLUDE CTLGDEF;
         DCL NODLTX BIT(1) STATIC INIT('0'B);
         DCL RETCODE FIXED BIN(31,0) STATIC INIT(0);
         DCL 1 CTLGEMSG STATIC,
              2 OUTLEN FIXED BIN(15,0) INIT(54),
              2 OFFSET FIXED BIN(15,0) INIT(0),
              2 CON1 CHAR(42) INIT(
                'ERROR WHILE ACCESSING CATALOG='),
              2 RETP CHAR(8);
         DCL 1 UNCMSG STATIC,
              2 OUTLEN FIXED BIN(15,0) INIT(60),
              2 OFFSET FIXED BIN(15,0) INIT(0),
              2 CON1 CHAR(12) INIT('UNCATLG DSN='),
              2 ODSN CHAR(44);
         DCL PLIRETC BUILTIN;
 ON CONDITION(CTLGERR) BEGIN;
         CALL TROUT(RETC,RETP);
         CALL PUTLINE(CPPLUPT,CPPLECT,CPECB,CTLGEMSG,RETCODE,'DATA');
         SIGNAL ERROR;
          END;
 ON ERROR BEGIN;
         RETCODE = 16;
         CALL PLIRETC(RETCODE);
         END;
         DCL INCARD CHAR(80) STATIC;
         DCL INA(80) CHAR(1) DEF INCARD;
         DCL DSN  CHAR(44) VARYING STATIC;
         DCL CVOL CHAR(6) STATIC INIT('SYSRES');
         DCL PTRFIX FIXED BIN(31,0) DEF CTLGPTR;
         DCL 1 BINONB STATIC UNALIGNED,
              2 B1 BIT(63) INIT('0'B),
              2 B2 BIT(1) INIT('1'B);
         DCL BINONE CHAR(8) DEF BINONB;
         DCL RETB FIXED BIN(31,0) STATIC;
         DCL RET BIT(32) DEF RETB;
         DCL REG15 BIT(8) DEF RETB;
         DCL RETC CHAR(4) DEF RETB;
         DCL 1 MFLGS UNALIGNED STATIC,
              2 MALSW BIT(1) INIT('0'B),
              2 MGSW BIT(1) INIT('0'B);
         DCL MTTR CHAR(3);
         DCL 1 ABND,
              2 DUM BIN FLOAT(53),
              2 MAREA CHAR(265);
         IF INA(1) ^= ' '
              THEN GO TO PRODSN;
 READ:
         RETURN;
 PRODSN:
         CTLGPTR = ADDR(MAREA);
         PTRFIX = PTRFIX + 2;
         DO I = 1 TO 80;
              IF INA(I) ^= ' '
                   THEN GO TO FRONT;
              END;
         GO TO READ;
 FRONT:
         DO J = I TO 80 WHILE((INA(J) ^= ' ') & (INA(J) ^= ','));
              END;
         L = J - I;
         DSN = SUBSTR(INCARD,I,L);
         CVOL = 'SYSRES';
         CALL SYSCTLG('NAME',RET,DSN,CVOL,MAREA);
         CVOL = SUBSTR(MAREA,260,6);
         IF RETB = 0
              THEN DO;
                   CTLGPTR = ADDR(MAREA);
                   IF SUBSTR(VLSTBLK.VOLID.DEVCODE(1),17,8)
                     ^='10000000'B
                        THEN GO TO READ;
                   CALL SYSCTLG('UNCAT',RET,DSN,CVOL);
                   IF RETB ^= 0
                        THEN SIGNAL CONDITION(CTLGERR);
                   ODSN = DSN;
                   CALL PUTLINE(CPPLUPT,CPPLECT,CPECB,UNCMSG,RETCODE,
                     'DATA');
                   GO TO READ;
                   END;
         IF REG15 = '00011000'B
              THEN SIGNAL CONDITION(CTLGERR);
         IF REG15 ^= '00001100'B
              THEN SIGNAL CONDITION(CTLGERR);
         CALL RECURS(INDLO,MFLGS);
         GO TO READ;
 RECURS: PROC(PTTR,PFLGS) RECURSIVE;
         DCL SAVPTR PTR;
         DCL PTTR CHAR(3);
         DCL 1 PFLGS UNALIGNED,
              2 PALSW BIT(1),
              2 PGDGSW BIT(1);
         DCL 1 FLGS UNALIGNED,
              2 ALSW BIT(1) INIT('0'B),
              2 GDGSW BIT(1) INIT('0'B);
         DCL 1 ABND,
              2 DUM BIN FLOAT(50),
              2 AREA,
               3 BLK CHAR(256),
               3 ATTR CHAR(3),
               3 ACVOL CHAR(6);
         DCL TTRC CHAR(3);
         DCL N FIXED BIN(15,0);
         DCL 1 GDGNAM BASED(CTLGPTR),
              2 GDGG CHAR(1),
              2 GDGNUM BIT(32);
         TTRC = PTTR;
 NEWBLK:
         CALL SYSCTLG('BLOCK',RET,TTRC,CVOL,BLK);
         IF RETB ^= 0
              THEN SIGNAL CONDITION(CTLGERR);
         CTLGPTR = ADDR(AREA);
         PTRFIX = PTRFIX + 2;
 NEWENT:
         IF NAME = HIGH(8)
              THEN IF TTR = LOW(3)
                   THEN IF PALSW × NODLTX
                        THEN RETURN;
                        ELSE DO;
                             CALL SYSCTLG('DLTX',RET,DSN,CVOL);
                             IF RETB ^= 0
                                  THEN SIGNAL CONDITION(CTLGERR);
                             RETURN;
                             END;
                   ELSE GO TO NEWBLK;
         IF HCNT > '00000010'B & HCNT < '00000110'B
              THEN GO TO GETENT;
         IF SUBSTR(GDGNUM,1,8) > '00000101'B
           & SUBSTR(GDGNUM,1,8) < '00010000'B
              THEN GDGNUM = ^GDGNUM;
         DO N = 1 TO 8 WHILE(SUBSTR(NAME,N,1) ^= ' ');
              END;
         DSN = DSN ×× '.' ×× SUBSTR(NAME,1,N-1);
         IF HCNT > '00000101'B × HCNT = '00000001'B
              THEN GO TO UNCATLG;
         SAVPTR = CTLGPTR;
         CALL RECURS(TTR,FLGS);
         CTLGPTR = SAVPTR;
 UNCAT:
         DSN = SUBSTR(DSN,1,LENGTH(DSN) - N);
         GO TO GETENT;
 UNCATLG:
         IF SUBSTR(PTRDS.VOLENT.DEVCODE(1),17,8)^='10000000'B
              THEN DO;
                   NODLTX = '1'B;
                   GO TO UNCAT;
                   END;
         CALL SYSCTLG('UNCAT',RET,DSN,CVOL);
         IF RETB ^= 0
              THEN SIGNAL CONDITION(CTLGERR);
         ODSN = DSN;
         CALL PUTLINE(CPPLUPT,CPPLECT,CPECB,UNCMSG,RETCODE,'DATA');
         GO TO UNCAT;
 GETENT:
         PTRFIX = PTRFIX + 12 + 2*HCNT;
         GO TO NEWENT;
         END RECURS;
 EOJ:
         END;
