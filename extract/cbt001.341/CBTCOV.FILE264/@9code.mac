 /* SVC99 INTERFACE - WRITTEN 10/25/80 BY PAUL DIXON */;
 %DCL (@9CODE_T,@9CODE_A,@9CODE_C,@9CODE_B,@9CODE_F,
       @9CODE_I,@9CODE_N) CHAR;
 %@9CODE_T = '''00000010''B';
 %@9CODE_A = '''00000100''B';
 %@9CODE_C = '''00001000''B';
 %@9CODE_B = '''00010000''B';
 %@9CODE_F = '''00100000''B';
 %@9CODE_I = '''01000000''B';
 %@9CODE_N = '''10000000''B';
 %@9CODE: PROC(CODE) RETURNS(CHAR) STATEMENT;
 DCL (CODE,R1) CHAR;
 IF SUBSTR(CODE,1,1) = ''''
    THEN
       DO;
          R1 = @9CODE_A;
          IF      CODE  = '''T''' THEN R1 = @9CODE_T;
          ELSE IF CODE  = '''C''' THEN R1 = @9CODE_C;
          ELSE IF CODE  = '''B''' THEN R1 = @9CODE_B;
          ELSE IF CODE  = '''F''' THEN R1 = @9CODE_F;
          ELSE IF CODE  = '''I''' THEN R1 = @9CODE_I;
          ELSE IF CODE  = '''N''' THEN R1 = @9CODE_N;
          ELSE IF CODE ^= '''A''' THEN
                  NOTE('INVALID CODE ' ×× CODE,8);
          RETURN ('DO; @9_CODE.@9P  = ' ×× R1 ××
             '; @9I = @9I + 1; @9TUPL(@9I) = ADDR(@9_CODE); END;');
       END;
    ELSE
       RETURN('DO; @9_CODE.@9P  = ' ×× CODE ×× '; @9I = @9I + 1; @9TUPL(
 @9I) = ADDR(@9_CODE); END;');
 %END @9CODE;
 %ACTIVATE @9CODE;
 DCL 01 @9_CODE UNALIGNED, 05 @9K FIXED BIN(15) INIT(57), 05 @9# FIXED
     BIN(15) INIT(1), 05 @9L FIXED BIN(15) INIT(1), 05 @9P  BIT(8);
