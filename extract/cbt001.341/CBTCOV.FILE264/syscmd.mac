*$.HE GENERALIZED SUBROUTINES - SYSCMD
*$.HE SYSCMD - EXECUTE A TSO COMMAND
*$.PL 55
*$.PN 0
*$.PA
*$.SS
*$.NF
*$8/12/76
*$AUTHOR:  T. SMITH
*$SOURCE MODULE NAME:  SYSCMD
*$DOCUMENTATION ID:  *$
*$.FI L
*$.SP 5
*$NOTE:  THE 'START' AND 'STOP' OPTIONS DOCUMENTED BELOW ARE NOT
*$CURRENTLY WORKING.
*$.SP 1
*$THIS SUBROUTINE SUPPLIES THE PLI PROGRAMMER WITH THE CAPABILITY OF
*$INVOKING TSO COMMAND PROCESSORS.  CALL FORMAT IS AS FOLLOWS
*$.SP 1
*$.IN 5
*$CALL SYSCMD(CPPL,RETCODE,'HELP');
*$ OR
*$CALL SYSCMD(CPPL,RETCODE,'START',CMDPTR);
*$ OR
*$CALL SYSCMD(CPPL,RETCODE,'STOP',CMDPTR);
*$ OR
*$CALL SYSCMD(CPPL,RETCODE,'TASKL',DDNAME);
*$.SP 1
*$.IN 0
*$CPPL MUST BE DEFINED IN THE CALLING PLI PROGRAM AS A STRUCTURE OF
*$POINTER VARIABLES AS FOLLOWS
*$.SP 1
*$.IN 5
*$.NF
*$DCL 1 CPPL,
*$2 CPPLCBUF PTR, /* ADDR COMMAND BUFFER */
*$2 CPPLUPT PTR, /* ADDR USER PROFILE TABLE */
*$2 CPPLPSCB PTR, /* ADDR PROTECTED STEP CONTROL BLOCK */
*$2 CPPLECT PTR; /* ADDR ENVIRONMENT CONTROL TABLE */
*$.FI L
*$.SP 1
*$.IN 0
*$THIS SUBROUTINE WILL SCAN THE COMMAND BUFFER USING IKJSCAN, AND
*$IF A COMMAND IS FOUND, A BLDL WILL BE ISSUED TO DETERMINE IF
*$IT IS A COMMAND PROCESSOR OR A CLIST.  IF A COMMAND PROCESSOR,
*$AN ATTACH IS DONE IMMEDIATELY.  IF A CLIST IS INDICATED, BLDL IS
*$DONE FOR THE EXEC COMMAND PROCESSOR, WHICH IS THEN ATTACHED.
*$THE APPROPRIATE FIELDS IN THE ECT ARE UPDATED BEFORE CONTROL
*$IS RETURNED TO THE CALLING PLI PROGRAM.
*$.SP 1
*$RETCODE MUST BE DEFINED AS FIXED BIN(31,0), AND WILL BE SET TO
*$0 IF A COMMAND IS FOUND IN THE COMMAND BUFFER, AND IS SET TO 4
*$IF NOT, AND WILL BE SET TO 8 IF AN ERROR IS ENCOUNTERED
*$IN ESTABLISHING THE TASKLIB.
*$.SP 1
*$'HELP' IS OPTIONAL AND INDICATES THAT THE COMMAND NAME IN THE ECT IS
*$NOT TO BE CHANGED.  THIS IS USED PRINCIPALLY FOR THE HELP COMMAND
*$FOR SUBCOMMAND DATA.
*$.SP 1
*$BOTH 'START' AND 'STOP' ARE OPTIONAL, AND ARE USED ONLY IF YOU
*$WANT TO HAVE A COMMAND RUN ASYNCHRONOUSLY.  A CALL WITH 'START'
*$SPECIFIED WILL START THE COMMAND, AND A CALL WITH 'STOP'
*$SPECIFIED WILL STOP THE COMMAND.  IN BOTH CASES, YOU MUST PASS
*$A POINTER TO A STRUCTURE WITH THE FOLLOWING FORMAT AS A
*$FINAL PARAMETER:
*$.SP 1
*$'TASKL' IS OPTIONAL, AND IS USED ONLY IF YOU WANT TO SPECIFY
*$A TASKLIB (AN EFFECTIVE STEPLIB) FOR THE COMMAND TO BE ATTACHED.
*$.SP 1
*$DDNAME IS DEFINED CHAR(*) AND OPTIONALLY VARYING, AND
*$CAN BE SPECIFIED ONLY IF 'TASKL' IS ALSO SPECIFIED.  IF IT IS
*$MORE THAN 8 CHARACTERS LONG, ONLY THE FIRST EIGHT BYTES
*$WILL BE USED.  DDNAME MUST CONTAIN THE DDNAME
*$TO BE USED FOR A TASKLIB (EFFECTIVE STEPLIB) FOR THE COMMAND
*$TO BE ATTACHED.
*$.IN 5
*$.NF
*$DCL 1 CMDSTR BASED(CMDPTR),
*$     2 CMDNAME CHAR(8),
*$          /* NAME OF COMMAND */
*$     2 SUBTCBP PTR,
*$          /* USED TO STORE THE SUBTASK TCB ADDR */
*$     2 SUBECB BIT(32),
*$          /* SUBTASK ECB - POSTED ON COMPLETION
*$             OF COMMAND SUBTASK */
*$     2 STAIECB BIT(32),
*$          /* POSTED ON STAI EXIT FROM SUBTASK.
*$             EITHER THE COMPLETION OF SUBECB OR
*$             STAIECB INDICATE THE COMPLETION OF
*$             THE COMMAND SUBTASK */
*$     2 STAIECB2 BIT(32),
*$          /* ECB USED IN STAI EXIT */
*$     2 STAICMPL FIXED BIN(31,0),
*$          /* COMPLETION CODE SET BY STAI EXIT */
*$     2 STAIPGM CHAR(8);
*$          /* PGM NAME SET BY STAI EXIT */
*$.FI L
*$.IN 0
*$.SP 1
*$NOTE THAT YOU MAY NOT RUN A COMMAND ASYNCHRONOUSLY IF IT
*$MODIFIES THE ECT.
*$.SP 1
*$IF EITHER OF THE EVENTS CMDEVA OR CMDEVB IS POSTED COMPLETE,
*$THE SUBTASK IS DONE.
SYSCMD PLIENTRY ,DSA=2000,COMPILE=O
         L     R7,4(R1)                R7 = A(RETCODE)
         MVI   EPLOCSW,X'00'
         MVC   DSACON,LIBDCB
         MVC   DDNAME,=CL8' '
         MVC   SSCODE,=CL5' '          SET
         LA    R9,DSASUBC                DEFAULTS
         ST    R9,SSADDR
         LTR   R7,R7                   IS RETCODE LAST PARM?
         BC    4,ISLAST                BR IF YES
         LM    R8,R9,8(R1)
*                                      R8 = A(SDV) FOR SSCODE
         L     R9,0(R9)                R9 = A(SSCOR)
         LH    RF,4(R8)                RF = LEN(SSCODE) - MAYBE
         L     RE,0(R8)                RE = A(SSCODE) - MAYBE
         TM    6(R8),X'80'             IS IT VARYING?
         BC    8,NOTV1                 BR IF NOT
         LH    RF,0(RE)                RF=LEN(SSCODE)
         LA    RE,2(RE)                RE=A(SSCODE)
NOTV1    DS    0H
         CH    RF,=H'5'                IS IT TOO BIG
         BC    4,NO2BIG                BR IF NOT
         LA    RF,5
NO2BIG   DS    0H
         BCTR  RF,0                    LESS 1 FOR EX
         EX    RF,MVCSS                MOVE TO SSCODE
         B     BYMVCSS
MVCSS    MVC   SSCODE(0),0(RE)
MVCDDN   MVC   DDNAME(0),0(RE)
BYMVCSS  DS    0H
         CLC   SSCODE,=CL5'HELP'
         BC    8,ISLAST
         CLC   SSCODE,=CL5'TASKL'      IS IT TASKLIB?
         BC    7,NOTASKL               BR IF NOT
         L     R9,12(R1)               R9=A(SDV FOR DDNAME)
         LH    RF,4(R9)                RF=LEN(DDNAME) - MAYBE
         L     RE,0(R9)                RE=A(DDNAME) - MAYBE
         TM    6(R9),X'80'             IS IT VAR?
         BC    8,NOTVDDN               BR IF NOT
         LH    RF,0(RE)                RF=LEN(DDN)
         LA    RE,2(RE)                RE=LEN(DDN)
NOTVDDN  DS    0H
         CH    RF,=H'8'                TOO BIG?
         BC    4,NO2BIGDD              BR IF NOT
         LA    RF,8
NO2BIGDD DS    0H
         BCTR  RF,0                    LESS 1 FOR EX
         EX    RF,MVCDDN
         B     ISLAST
NOTASKL  DS    0H
         ST    R9,SSADDR               SAVE A(SSCOR)
ISLAST   DS    0H
         L     RB,0(R1)
         L     RB,0(RB)                RB = A(CPPL)
         USING CPPL,RB
         LA    R9,MYCSPL               R9 = A(CSPL)
         USING CSPL,R9
         MVC   CSPLUPT,CPPLUPT
         MVC   CSPLECT,CPPLECT
         XC    MYECB,MYECB
         LA    R1,MYECB
         ST    R1,CSPLECB
         XC    FLGWD,FLGWD
         LA    R1,FLGWD
         ST    R1,CSPLFLG
         LA    R8,MYCSOA               R8 = A(CSOA)
         USING CSOA,R8
         ST    R8,CSPLOA
         MVC   CSPLCBUF,CPPLCBUF
         CLC   SSCODE,=CL5'STOP'       IS IT STOP ASYNCH CMD?
         BC    7,DOSCAN                BR IF NOT
         L     R9,SSADDR               R9 = A(ASYNCH CMD CORE)
         B     STOP
DOSCAN   DS    0H
         LA    R1,CSPL
*        LINK EP=IKJSCAN
         CALLTSSR EP=IKJSCAN,MF=(E,(1))
         ST    RF,0(R7)                SET RETCODE
         LTR   RF,RF                   GOOD RETURN?
         BC    7,EXIT                  BR IF NOT
         TM    CSOAFLG,CSOAVWP+CSOAVNP IS COMMAND GOOD?
         BC    8,BADEXIT               BR IF NOT
         LA    R1,1
         STH   R1,CNT                  TELL BLDL 1 ENTRY IN LIST
         LA    R1,58
         STH   R1,LEN                  TELL BLDL ENTRY LENGTH
         MVC   PGM(8),=CL8' '
         LH    R1,CSOALNM              R1 = LEN(COMMAND NAME)
         L     R2,CSPLCBUF             R2 = A(COMMAND BUFFER)
         EX    R1,MVCPGM               MOVE NAME TO BLDL LIST
         MVC   OPGM,PGM                SAVE ORIGINAL PROGRAM NAME
         B     BYMVCPGM
MVCPGM   MVC   PGM(0),4(R2)
BYMVCPGM DS    0H
         CLC   DDNAME,=CL8' '          IS TASKLIB USED?
         BC    8,OPNOK                 BR IF NOT
         MVC   DSADCB+40(8),DDNAME     MOVE IN DDNAME
         LA    R2,DSADCB
         LA    R1,DSAOPEN
         OPEN  ((R2)),MF=(E,(1))
         TM    DSADCB+48,X'10'         WAS OPEN OK?
         BC    1,OPNOK                 BR IF YES
         B     BADEXIT
OPNOK    DS    0H
CKLPA    DS    0H
         MVI   EPLOCSW,X'80'           DEFAULT EPLOC ATTACH S/B USED
* FIRST CHECK THE PAGEABLE LINK PACK AREA
         LM    R0,R1,PGM               LOAD PROGRAM NAME
         LA    R4,TMPWA                GET A(WORK AREA)
         STM   R5,R9,X'90'(R4)         SAVE REGS
         LR    R5,R4                   R5=A(WORK AREA)
         L     R4,X'10'(0)             R4=A(CVT)
         LR    R3,R4
         L     RF,X'160'(R3)           CVT+CVTLPDSR
         BALR  RE,RF                   BR TO IEAVVMSR
         LA    RE,0               INDICATE MODULE FOUND - IF NOT FOUND,
*                                 IEAVVMSR WILL RETURN CONTROL TO THE
*                                 FOLLOWING LM INSTRUCTION, AND RE WILL
*                                 NOT BE 0.
         LM    R5,R9,X'90'(R5)         RESTORE REGS
         LTR   RE,RE                   WAS MODULE FOUND?
         BC    8,SETECT                BR IF YES
* NEXT CHECK THE ACTIVE LPA
         LA    R0,PGM                  R0=A(PROGRAM NAME)
         SLR   R1,R1                   R1=0
         IDENTIFY EPLOC=(R0),ENTRY=(R1)
         C     RF,=F'12'
         BC    4,SETECT
BLDL     DS    0H
         MVI   EPLOCSW,X'00'           INDICATE BLDL S/B USED
         CLC   DDNAME,=CL8' '          IS TASKLIB USED?
         BC    8,BLDL2                 BR IF NOT
BLDL1    DS    0H
         LA    R0,BLDLLIST
         BLDL  (R2),(R0)
         LTR   RF,RF                   BLDL OK?
         BC    8,SETECT                BR IF YES
         CH    RF,=H'4'
         BC    2,BADEXIT               BR IF I/O ERROR
BLDL2    DS    0H
         LA    R0,BLDLLIST
         BLDL  0,(R0)
         LTR   RF,RF
         BC    8,SETECT                BR IF YES
         CH    RF,=H'4'
         BC    2,BADEXIT               BR IF I/O ERROR
         CLC   PGM,=CL8'EXEC'          WAS COMMAND EXEC?
         BC    8,BADEXIT               BR IF YES
         MVC   PGM,=CL8'EXEC'          ELSE DO BLDL ON EXEC
         L     RF,CPPLCBUF             GET ADDR CMD BUFFER
         MVI   3(RF),0                 CLEAR OFFSET
         B     CKLPA
SETECT   DS    0H
         L     R6,CPPLECT
         USING ECT,R6
         NI    ECTSWS,255-ECTNOPD-ECTATRM CLEAR SWS
         TM    CSOAFLG,CSOAVWP         ARE THERE OPERANDS?
         BC    1,GOTOPER               BR IF YES
         OI    ECTSWS,ECTNOPD          INDICATE NO OPERANDS
GOTOPER  DS    0H
         MVC   SAVNAM,ECTPCMD
         CLC   SSCODE,=CL5'HELP'       IS IT HELP?
         BC    8,HELP                  BR IF YES
         MVC   ECTPCMD,PGM             PUT COMMAND NAME IN ECT
         MVC   ECTSCMD,=CL8' '         CLEAR SUBCMD SLOT
         B     BYNM
HELP     DS    0H
         MVC   ECTSCMD,=CL8'HELP'      INDICATE HELP SUBCMD
BYNM     DS    0H
         DROP  R9
         L     R9,SSADDR               R9 = A(ASYNCH CMD CORE)
         USING SUBCOR,R9
         XC    SUBECB,SUBECB
         XC    MSGA,MSGA
         STAX  EXSTAX,USADDR=SUBECB,REPLACE=NO,MF=(E,MSGA)
         B     BYSTAX
EXSTAX   DS    0H
         L     R1,8(R1)                GET CP ECB ADDR
         POST  (1),4                   POST CP COMPLETE
         BR    RE                      RETURN
BYSTAX   DS    0H
         MVC   ATTCHL(ATTCHLEN),ATTCHLC
         LA    RF,ATTCHL
*        NI    8(RF),255-X'01'         CLEAR STAI LIST INDIC (?)
         LA    R1,CPPL
         LA    R2,PGM
         XC    SUBECB,SUBECB
         LA    R3,SUBECB
         XC    STAIECB(20),STAIECB
         LA    R4,STAIEXT              R4 = A(STAI EXIT)
         LA    R5,STAIECB              R5 = A(STAI PARM)
         CLC   DDNAME,=CL8' '          IS TASKLIB USED?
         BC    8,PLATTCH               BR IF NOT
         LA    R6,DSADCB
         TM    EPLOCSW,X'80'           SHOULD EPLOC FORM BE USED
         BC    8,DEFORM1               BR IF NOT
         LA    R2,PGM
         ATTACH EPLOC=(R2),ECB=(R3),MF=(E,(1)),SF=(E,(15)),            C
               SHSPL=SHSPL78,STAI=((R4),(R5)),DCB=(R6),TASKLIB=(R6)
         L     R6,CPPLECT              RESTORE R6
         B     BYATTCH
DEFORM1  DS    0H
         ATTACH DE=(R2),ECB=(R3),MF=(E,(1)),SF=(E,(15)),SHSPL=SHSPL78, C
               STAI=((R4),(R5)),DCB=(R6),TASKLIB=(R6)
         L     R6,CPPLECT              RESTORE R6
         B     BYATTCH
PLATTCH  DS    0H
         TM    EPLOCSW,X'80'           SHOULD EPLOC FORM BE USED
         BC    8,DEFORM2               BR IF NOT
         LA    R2,PGM
         ATTACH EPLOC=(R2),ECB=(R3),MF=(E,(1)),SF=(E,(15)),            C
               SHSPL=SHSPL78,STAI=((R4),(R5))
         B     BYATTCH
DEFORM2  DS    0H
         ATTACH DE=(R2),ECB=(R3),MF=(E,(1)),SF=(E,(15)),SHSPL=SHSPL78, C
               STAI=((R4),(R5))
BYATTCH  DS    0H
         LTR   RF,RF
         BC    7,BADEXIT               BR IF NOT
         ST    R1,SUBTCB
         CLC   SSCODE,=CL5'START'      IS IT START ASYNCH CMD?
         BC    8,EXIT                  BR IF YES
         LA    R1,SUBECB
         ST    R1,ECBLIST
         LA    R1,STAIECB
         ST    R1,ECBLIST+4
         OI    ECBLIST+4,X'80'
         LA    R1,ECBLIST
         WAIT  1,ECBLIST=(1)
STOP     DS    0H
         TM    STAIECB,X'40'           IS IT STAE TELLING OF ABEND?
         BC    8,DODET                 BR IF NOT
         MVC   PUTCOR,PTPB
         LA    R1,INSDV                SET TROUT PARM LIST
         LA    R2,OUTSDV
         STM   R1,R2,TROUTPRM
         OI    TROUTPRM+4,X'80'
         LA    R1,STAICMPL
         ST    R1,INSDV
         LA    R1,4
         STH   R1,INSDV+4
         STH   R1,INSDV+6
         LA    R1,PUTCOR+(MSGCMPL-PTPB)
         ST    R1,OUTSDV
         LA    R1,8
         STH   R1,OUTSDV+4
         STH   R1,OUTSDV+6
         LA    R1,TROUTPRM
         L     RF,=V(TROUT)
         BALR  RE,RF                   GO MAKE COMPL CODE PRINTABLE
         MVC   PUTCOR+(MSGCMD-PTPB)(8),PGM
         MVC   PUTCOR+(MSGPGM-PTPB)(8),STAIPGM
         LA    R1,MYCSPL
         LA    R2,PUTCOR
         LA    R3,PUTCOR+(ABNDMSG-PTPB)
         PUTLINE PARM=(R2),OUTPUT=((R3),TERM,SINGLE,DATA),MF=(E,(1))
         MVC   ECTRTCD(3),STAICMPL+1
         LA    RF,MYCSPL
         USING CSPL,RF
         MVC   STCOR,STCON             INITIALIZE STPB
         LA    R1,STCOR
         ST    R1,IOPLIOPB
         STACK DELETE=ALL,MF=(E,IOPL)
         DROP  RF
         B     DODETA
DODET    DS    0H
         MVC   ECTRTCD(3),SUBECB+1
DODETA   DS    0H
         TM    ECTSWS,X'02'            BACKGROUND MODE?
         BC    1,SKPDYN                BR IF YES
         LA    R1,DAPLDSA
         USING DAPL,R1
         MVC   DAPLUPT,CPPLUPT
         MVC   DAPLECT,CPPLECT
         XC    MYECB,MYECB
         LA    RF,MYECB
         ST    RF,DAPLECB
         MVC   DAPLPSCB,CPPLPSCB
         LA    RF,DAPB
         ST    RF,DAPLDAPB
         XC    DAPB(8),DAPB            CLEAR BLOCK
         MVI   DAPB+1,X'2C'            SET ENTRY CODE
         MVI   DAPB+3,X'00'            FREE DATA SETS FOR SPECIFIC
*                                      SUBTASK 'NOT IN USE'
         MVC   DAPB+4(4),SUBTCB        SET SUBTASK TCB ADDR
         LINK  EP=IKJDAIR
         DROP  R1
SKPDYN   DS    0H
         LA    R1,SUBTCB
         DETACH (R1)
         STAX
         SR    RF,RF
         MVC   ECTSCMD,ECTPCMD
         MVC   ECTPCMD,SAVNAM
         B     EXIT
BADEXIT  DS    0H
         LA    RF,8
         ST    RF,0(R7)
EXIT     DS    0H
         CLC   DDNAME,=CL8' '          WAS TASKLIB USED?
         BC    8,EXITA                 BR IF NOT
         TM    DSADCB+48,X'10'         WAS OPEN SUCCESSFUL?
         BC    8,EXITA                 BR IF NOT
         LA    R1,DSACLOSE
         LA    R2,DSADCB
         CLOSE ((R2)),MF=(E,(1))
EXITA    DS    0H
         PLIEXIT
         DROP  RA
STAIEXT  DS    0H
         USING *,RC
         LR    RC,RF
         CH    R0,=H'12'               IS SDWA AVLBL?
         BC    8,NONAME                BR IF NOT
         LR    R3,R1
         USING SDWA,R3
         L     R2,0(R3)                R2 = A(MY PARM LIST)
         L     R1,4(R3)                R1 = COMPLETION CODE
         CLC   SDWANAME+4(4),=XL4'0'   IS THERE A NAME?
         BC    8,NONAME
         MVC   12(8,R2),SDWANAME       SAVE ABENDING PGM NAME
         B     GOTREGS
NONAME   DS    0H
         MVC   12(8,R2),=CL8'?'
GOTREGS  DS    0H
         ST    R1,8(R2)                SAVE COMPLETION CODE
         POST  (R2)                    TELL SYSCMD
         LA    R1,4(R2)
         WAIT  1,ECB=(1)               WAIT FOREVER
ATTCHLC  ATTACH DE=0,SF=L
ATTCHLEN EQU   *-ATTCHLC
SHSPL78  DC    AL1(1,78)
PTPB     PUTLINE ,MF=L
ABNDMSG  DS    0H
         DC    AL2(ABMSGLEN-*)
         DC    H'0'
         DC    C'COMMAND '
MSGCMD   DS    CL8
         DC    C' FAILED IN PROGRAM '
MSGPGM   DS    CL8
         DC    C', COMPLETION CODE = '
MSGCMPL  DS    CL8
ABMSGLEN EQU   *
PCONLEN  EQU   *-PTPB
STCON    STACK MF=L
STCONLEN EQU   *-STCON
         DS    0F
LIBDCB   DCB   DDNAME=SYSLOAD,DSORG=PO,MACRF=(R)
LIBDCBL  EQU   *-LIBDCB
         DS    0F
OPEN     OPEN  (,(INPUT)),MF=L
OPENL    EQU   *-OPEN
         DS    0F
CLOSE    CLOSE (,),MF=L
CLOSEL   EQU   *-CLOSE
BIGL     EQU   *-LIBDCB
         LTORG
         IKJCPPL
         IKJDAPL
         IKJCSPL
CSPLLEN  EQU   *-CSPL
IOPL     EQU   CSPL
IOPLIOPB EQU   CSPLFLG
         IKJCSOA
CSOALEN  EQU   *-CSOA
         IKJECT
         IHASDWA
SUBCOR   DSECT
SUBNAM   DS    CL8
SUBTCB   DS    F
SUBECB   DS    F
STAIECB  DS    2F
STAICMPL DS    F
STAIPGM  DS    CL8
SUBCORL  EQU   *-SUBCOR
DSA      DSECT
MYCSPL   DS    CL(CSPLLEN)
MYECB    DS    F
FLGWD    DS    F
MYCSOA   DS    CL(CSOALEN)
         DS    0F
BLDLLIST DS    0H
CNT      DS    H
LEN      DS    H
PGM      DS    CL8
         DS    CL50
ATTCHL   DS    0F,CL(ATTCHLEN)
SAVNAM   DS    CL8
MSGA     DS    CL20
DAPLDSA  DS    5F
DAPB     DS    CL8
DSASUBC  DS    CL(SUBCORL)
SSCODE   DS    CL5
SSADDR   DS    F
ECBLIST  DS    2F
TROUTPRM DS    2F
INSDV    DS    CL8
OUTSDV   DS    CL8
         DS    0F
PUTCOR   DS    CL(PCONLEN)
         DS    0F
STCOR    DS    CL(STCONLEN)
         DS    0D
DSACON   DS    0CL(BIGL)
DSADCB   DS    CL(LIBDCBL)
         DS    0F
DSAOPEN  DS    CL(OPENL)
         DS    0F
DSACLOSE DS    CL(CLOSEL)
DDNAME   DS    CL8
OPGM     DS    CL8
EPLOCSW  DS    CL1
         DS    0D
TMPWA    DS    CL256
         DS    0D
DSALEN   EQU   *-DSA
         CVT   DSECT=YES
         END
