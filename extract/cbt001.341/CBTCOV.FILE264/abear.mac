 /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
 /**********************************************************************
 *                                                                     *
 * ABEAR, ALIAS #ADD, IS CALLED TO ADD A RECORD.                       *
 *                                                                     *
 * PRMPTRPTR POINTS TO THE RECORD BEHIND WHICH THE NEW RECORD IS TO BE *
 *   ADDED.                                                            *
 * RETPTR WILL BE SET TO THE ADDRESS OF THE NEW RECORD.                *
 * ADDSEQ SHOULD CONTAIN THE NEW SEQUENCE NUMBER.                      *
 * RECTOAD SHOULD CONTAIN DATA FOR THE NEW RECORD.                     *
 *                                                                     *
 **********************************************************************/
   %INCLUDE ABESUB;
 ABESUB(ABEAR) PARMS(RHPTR,RHHDRPT,PRMPTRPTR,RETPTR,ADDSEQ,RECTOAD,M);
   %INCLUDE ABESUBA;
   %INCLUDE ABERHPNL;

   DCL (PRMPTRPTR,PRMPTR,TMPPTR,RETPTR) PTR;
   DCL RECTOAD CHAR(*) VAR;
   DCL MAXLEN ENTRY(CHAR(*) VAR)
     RETURNS(FIXED BIN(15,0));
   DCL (L,M) FIXED BIN(15,0);
   DCL ADDSEQ FIXED BIN(31,0);
   DCL SEQBL CHAR(8),
       SEQPIC PIC'(8)9' DEF SEQBL;
         /* MAX LEN OF SEQ FLD = 8 BYTES */
   DCL I FIXED BIN(15,0);

   L = MAXLEN(RECTOAD);
  /*     IF INDDN = NULL
           THEN L = MAXLEN(RECTOAD);
           ELSE L = INDDN->ALCRECL-INDDN->ALCSEQLEN; */
           /* DON'T TRY TO USE OUTDDN HERE; IT MAY NOT INITIALIZED */
   PRMPTR = PRMPTRPTR;
   CALL #GETSLOT(RHPTR,RHHDRPT,PRMPTR,TMPPTR,L,M);/*CALL GETSLOT*/
   IF ADDSEQ >= 0
     THEN TMPPTR->RECSEQ = ADDSEQ;
     ELSE DO;
       IF PRMPTR = HDPTR
         THEN I = 1;
         ELSE I = PRMPTR->RECSEQ+1;
       TMPPTR->RECSEQ = I;
       END;
   TMPPTR->RECSTR = RECTOAD;
   TMPPTR->RECFLGS = '0'B;
   TMPPTR->RECRES='0'B;
   RETPTR=TMPPTR;
   IF TMPPTR->RECSEQ>RHPMAXSQ
     THEN DO;
       CALL #ABESQ(RHHDRPT,TMPPTR->RECSEQ); /* ABESQ */
       CALL #COLTR(RHHDRPT); /* CALL ABECT */
       END;
   RETURN;
   END ABEAR;
