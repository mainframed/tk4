  /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
  /* DENT009 - CHANGE,C SUBCOMMANDS */
  % DCL @PROCNAME CHAR;
  % DCL @RENTNAME CHAR;
  % @PROCNAME ='RENT';
  % @RENTNAME ='DENT009';
  % INCLUDE DENTSUB;
  DCL SETCAPS ENTRY;
  DCL REPRET BIT(2);
  DCL RISK BIT(1);
  DCL SUFFIX ENTRY(CHAR(*),CHAR(*))RETURNS(FIXED BIN(15,0));
  DCL SAVPTR PTR;
  DCL (REPSW,RESCAN) BIT(1);
  DCL RESCANSTR CHAR(6) STATIC INIT('RESCAN');
  DCL ORGPTR PTR;
  IF INDEX(PARY(5),PARY(4))=0
    THEN RISK='0'B;
    ELSE RISK='1'B;
  ORGPTR = RECPTR;
  RESCAN ='0'B;
  IF PARY(8)^=''
    THEN DO;
      CALL SETCAPS(PARY(8));
      IF PARY(8)=SUBSTR(RESCANSTR,1,MIN(6,LENGTH(PARY(8))))
        THEN RESCAN='1'B;
        ELSE DO;
          MSGDATA='INVALID RESCAN OPERAND';
          RHRC = 8;
          RETURN;
          END;
      END;
  IF PARY(2)='*'
    THEN L1=CURSEQ;
    ELSE L1=PARY(2);
  L2=PARY(3);
  IF PARY(6) ^=''
    THEN L4 = PARY(6);
    ELSE L4 = 1;
  IF PARY(7) ^=''
    THEN L5 = PARY(7);
    ELSE L5 = 99999;
  CALL #MD(RHPTR,SUBENT,L1); /* CALL MDPROC */
  REPSW ='0'B;
  L = LENGTH(PARY(4));
  LUP:DO SAVPTR=RECPTR REPEAT SAVPTR->NXTPTR WHILE(SAVPTR ^= HDPTR);
    IF PARY(2)^='*'
      THEN IF SAVPTR->RECSEQ > L2
        THEN LEAVE LUP;
    IF LENGTH(SAVPTR->RECSTR)>=L4 × L=0
      THEN DO;
        BUF = SUBSTR(SAVPTR->RECSTR,L4,MIN(L5,LENGTH(SAVPTR->
        RECSTR)-L4+1));
        REPRET ='0'B;
        IF L = 0
          THEN DO;
            BUF=SUBSTR(BUF,1,SUFFIX(BUF,' '))××PARY(5);
            REPRET='1'B;
            END;
          ELSE DO;
            I = 0;
            DO FOREVER=1 REPEAT FOREVER;
              J=INDEX(SUBSTR(BUF,I+1),PARY(4))+I;
              IF J=I
                THEN LEAVE;
              IF RESCAN
                THEN IF LENGTH(PARY(5))=0 × ^RISK
                  THEN I=J-1;
                  ELSE I=J;
                ELSE I = J+LENGTH(PARY(5))-1;
              BUF=SUBSTR(BUF,1,J-1)××PARY(5)××SUBSTR(BUF,J+L);
              REPRET='1'B;
              END;
            END;
        IF REPRET ^='00'B
          THEN DO;
            IF LENGTH(BUF) > L5
              THEN BUF=SUBSTR(BUF,1,L5);
            IF L5 >= LENGTH(SAVPTR->RECSTR)-L4+1
              THEN SAVPTR->RECSTR=SUBSTR(SAVPTR->RECSTR,1,L4-1)××
              BUF;
              ELSE SUBSTR(SAVPTR->RECSTR,L4,MIN(L5,LENGTH(SAVPTR->
              RECSTR)-L4+1))=BUF;
            REPSW ='1'B;
            END;
        END;
    IF PARY(2)='*'
      THEN DO;
        L2=L2-1;
        IF L2=0
          THEN LEAVE LUP;
        END;
    END LUP;
  IF ^REPSW
    THEN MSGDATA ='TEXT NOT FOUND';
    ELSE SAVEFLAG='1'B;
  CALL #NC(RHPTR,SUBENT,ORGPTR); /* CALL NEWCUR */
  RHRC = 0;
  END;
