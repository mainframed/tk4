 /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
 /* DENT055 - SAS */
   % DCL @PROCNAME CHAR;
   % DCL @RENTNAME CHAR;
   % @PROCNAME = 'RENT';
   % @RENTNAME = 'DENT055';
   % INCLUDE DENTSUBA;
   DCL SYSCTLG ENTRY;
   DCL BINDEX ENTRY(CHAR(*) VAR, CHAR(*) VAR, CHAR(*) VAR,
     FIXED BIN(15,0))
     RETURNS(FIXED BIN(15,0));
   DCL HELPSTR CHAR(4) VAR INIT('');
   DCL SASCMD CHAR(240) VAR;
   DCL MYPTR PTR;
   DCL LAST FIXED BIN(31,0) STATIC INIT(99999999);
   DCL ALCODE CHAR(3) VAR STATIC INIT('OUT');
   DCL SUBDSN CHAR(44) VAR STATIC INIT('LASTJCL.CNTL');
   DCL (LPTR,SAVRH,LJPTR) PTR;
   GO=BINDEX(CMDDATA,'GO','WORD',1);
   SAVRH=RHPTR;
   LJPTR=NULL;
   RHRC=SETUP('LIST','SAS.LIST'); /* GO SET UP LIST DATASET */
   IF RHRC^=0
     THEN RETURN;
   RHRC=SETUP('LOG','SAS.LOG'); /* GO SET UP LOG DATASET */
   IF RHRC^=0
     THEN RETURN;
   SASCMD='%'××CMDDATA××' OUTPUT(SAS.LIST) LOG(SAS.LOG)';
   NOGO=BINDEX(SASCMD,'NOGO','WORD',1);
   IF NOGO^=0
     THEN SUBSTR(SASCMD,NOGO,4)='';
   IF RHSASGO & (NOGO=0)
     THEN SASCMD=SASCMD××' GO ';
   IF BINDEX(CMDDATA,'DA','WORD',1)=0
     THEN DO;
       SASCMD=SASCMD××' DA(LASTJCL.CNTL)';
       CALL SETLJ; /* GO GET UP LASTJCL.CNTL */
       IF RHRC^=0
         THEN RETURN;
       END;
   CALL #STACK(''); /* STACK UP A NULL LINE */
   CALL #DOCMD(SASCMD,HELPSTR);
   I=#CMD('X',RHPTR,SUBENT,RHHDRPT);
   IF LJPTR^=NULL
     THEN I=#CMD('END N',LJPTR,SUBENT,RHHDRPT);
   LPTR=SRCH('LIST');
   I=#CMD('REFRESH',LPTR,SUBENT,RHHDRPT);
   LPTR=SRCH('LOG');
   I=#CMD('REFRESH',LPTR,SUBENT,RHHDRPT);
   RHSASGO='1'B; /* SPECIFY GO KEYWORD NEXT TIME */
   CALL DOLINES; /* GO DO A LINES ON EVERYBODY BUT ME */
   RHRC=0;
   RETURN;

 ALC: PROC(NAME,DSNAME);
 /**********************************************************************
 *                                                                     *
 * CALLED TO CHECK FOR THE EXISTENCE OF A DATA SET (SAS.LIST OR        *
 * SAS.LOG) AND TO ALLOCATE A NEW DATA SET IF NECESSARY.               *
 *                                                                     *
 **********************************************************************/
   DCL (NAME,DSNAME) CHAR(*);
   DCL RET BIT(32);
   DCL CTLGDSN CHAR(44);
   DCL CVOL CHAR(6) INIT('SYSRES');
   DCL AREA CHAR(265);

   CTLGDSN=#SYMC('&SYSPREF')××'.'××DSNAME;
   CALL SYSCTLG('NAME',RET,CTLGDSN,CVOL,AREA);
   IF RET='0'B
     THEN IF NAME='LIST'
       THEN CALL #DOCMD('FREE DA(SAS.LIST)',HELPSTR);
       ELSE;
     ELSE DO; /* DATA SET DOES NOT EXIST */
       CALL #DOCMD('FREE ATTR(DENTATR)',HELPSTR);
       CALL #DOCMD('ATTRIB DENTATR LR(169) BL(19000) RECFM(V B A)',
         HELPSTR);
       CALL #DOCMD('ALLOC DA('××DSNAME××') NEW US(DENTATR) TR SP(5 1)',
         HELPSTR);
       END;
   END ALC;

 DOLINES: PROC;
 /**********************************************************************
 *                                                                     *
 * CALLED TO DO A LINES ON EVERYBODY BUT LIST.                         *
 *                                                                     *
 **********************************************************************/
   DCL (TRH,SAVRH) PTR;
   DCL I FIXED BIN(15,0);
   TRH=NULL;
   DO FOREVER=1 REPEAT FOREVER;
     IF TRH=NULL
       THEN TRH=NXTRHEL;
       ELSE TRH=TRH->RHNXT;
     IF TRH=NULL
       THEN LEAVE;
     IF TRH->RHNAME^='LIST'
       THEN IF TRH->RHCST^=0
         THEN DO;
           SAVRH=TRH->RHLST;
           I=#CMD('LINES LIST',TRH,SUBENT,RHHDRPT);
           TRH=SAVRH;
           END;
     END;
   END DOLINES;

 SETLJ: PROC;
 /**********************************************************************
 *                                                                     *
 * CALLED IF THE CURRENT DATASET IS TO BE STORED IN LASTJCL.CNTL TO    *
 * BE PASSED TO THE %SAS COMMAND AS THE SOURCE INPUT, E.G.             *
 * "%SAS DA(LASTJCL.CNTL)".                                            *
 *                                                                     *
 **********************************************************************/
   DCL I FIXED BIN(15,0);
   DCL TRH PTR;
   I=#CMD('SSE LASTJCL.CNTL NON NAME(@@@LAST)',RHPTR,SUBENT,RHHDRPT);
   IF I^=0 × RHNAME^='@@@LAST'
     THEN DO;
       MSGDATA='ERROR IN ALLOCATE OF LASTJCL.CNTL';
       RHRC = 8;
       RETURN;
       END;
   LJPTR=RHPTR;
   RHPTR=SAVRH; /* RESTORE ORIGINAL RHPTR */
   I=#CMD('DEL ALL',LJPTR,SUBENT,RHHDRPT);
   I=#CMD('DREM @@@LAST 0 99999999 0',RHPTR,SUBENT,RHHDRPT);

   /* NOW COPY ALL DATABASES OVER */
   DO TRH=NXTRHEL REPEAT TRH->RHNXT WHILE(TRH^=NULL);
     IF TRH^=SAVRH & TRH->RHUSEHD^=NULL
       THEN DO;
         IF ^(RHSASGO & (NOGO=0)) × TRH->SAVEFLAG
           THEN DO; /* DATABASE MUST BE COPIED */
             I=#CMD('DREM @@@LAST 0 99999999 0',TRH,SUBENT,RHHDRPT);
             LJPTR->RHUSEHD=TRH->RHUSEHD; /* FOOL USE SUBCOMMAND */
             LJPTR->RHNAME=TRH->RHNAME; /* FOOL USE SUBCOMMAND */
             I=#CMD('USE OUT',LJPTR,SUBENT,RHHDRPT);
             LJPTR->RECHDR.CMDDATA='';
             LJPTR->RHUSEHD=NULL;
             END;
         TRH->RHDBSAVE=TRH->SAVEFLAG;
         TRH->SAVEFLAG='0'B;
         END;
     END;

   LJPTR->RHNAME='@@@LAST';
   I=#CMD('SAVE',LJPTR,SUBENT,RHHDRPT);
   END SETLJ;

 SETUP: PROC(NAME,DSNAME) RETURNS(FIXED BIN(15,0));
 /**********************************************************************
 *                                                                     *
 * CALLED TO FIND IF THE SPECIFIED SYMBOLIC NAME IS CURRENTLY BEING    *
 * EDITED.                                                             *
 *                                                                     *
 **********************************************************************/
   DCL (NAME,DSNAME) CHAR(*);
   DCL LPTR PTR;
   DCL I FIXED BIN(15,0);
   LPTR=SRCH(NAME);
   IF LPTR=NULL
     THEN DO;
       CALL ALC(NAME,DSNAME); /* GO ALLOCATE IF NECESSARY */
       I=#CMD('SSE '××DSNAME××' NON SUPPORT NAME('××NAME××')',
         RHPTR,SUBENT,RHHDRPT);
       RHPTR=SAVRH; /* RESTORE ORIGINAL RHPTR */
       LPTR=SRCH(NAME);
       IF LPTR=NULL
         THEN DO;
           MSGDATA='PROBLEM IN EDITING '××DSNAME;
           RETURN(8);
           END;
       IF GO^=0 & NAME='LIST'
         THEN CALL #DOCMD('ALLOC FI(FT12F001) DA(SAS.LIST) REUSE',
           HELPSTR);
       END;
   I=#CMD('DEL ALL',LPTR,SUBENT,RHHDRPT);
   I=#CMD('SAVE',LPTR,SUBENT,RHHDRPT); /* CLEAN OUT DATA SET */
   RETURN(0);
   END SETUP;

 SRCH: PROC(NAME) RETURNS(PTR);
 /**********************************************************************
 *                                                                     *
 * CALLED TO FIND IF THE SPECIFIED SYMBOLIC NAME IS CURRENTLY BEING    *
 * EDITED.                                                             *
 *                                                                     *
 **********************************************************************/
   DCL NAME CHAR(*);
   DCL TRH PTR;
   DO TRH=NXTRHEL REPEAT TRH->RHNXT WHILE(TRH^=NULL)
     UNTIL(TRH->RHNAME=NAME);
     END;
   RETURN(TRH);
   END SRCH;

   END;
