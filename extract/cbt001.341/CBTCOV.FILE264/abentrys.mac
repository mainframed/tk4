 /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
   DCL 1 SUBENTSTR BASED(SUBENT),
     /* THIS IS A STRUCTURE OF ENTRY VARIABLES USED IN COMMON */
     2 #ABEA ENTRY,
         /* ABEA - MAINLINE PROCESSING */
     2 #ABEALC ENTRY(CHAR(*),CHAR(*),PTR,PTR) RETURNS(PTR),
         /* ABEALC - DEFINE A VIRTUAL DATASET */
     2 #ABEATN ENTRY,
         /* ABEATN - NESTED IN ABEA - CALLED TO UPDATE SYSATTN */
     2 #ABECD ENTRY(PTR),
         /* INTERFACE TO FULL-SCREEN SYSTPUT */
     2 #ABEDFN ENTRY,
         /* ABEDFN - SETS DEFAULT SYMBOLIC NAME */
     2 #ABEDIS ENTRY,
         /* ABEDIS */
     2 #ABEDT ENTRY(PTR,CHAR(*) VAR),
         /* ABESYL - PERMANENT */
     2 #ABEGOP ENTRY(CHAR(*) VAR, FIXED BIN(15,0),FIXED BIN(15,0),
         FIXED BIN(15,0),CHAR(*) VAR),
         /* ABEGOP - GETS NEXT OPERAND FROM CBUF */
     2 #ABEIN ENTRY,
         /* ABEIN - MAINLINE INITIALIZATION */
     2 #ABEINS ENTRY(CHAR(*) VAR,PTR,FIXED BIN(15,0),FIXED BIN(15,0)),
         /* ABEINS - INSERTS STRING INTO RECORD */
     2 #ABELSP ENTRY(PTR,PTR),
         /* ABELSP */
     2 #ABELSPP ENTRY(PTR,PTR,PTR,CHAR(*) VAR,FIXED BIN(15,0)),
         /* ABELSPP - PARSES <LSP> UNITS */
     2 #ABEMKS ENTRY,
         /* DOES MARK ARRAY SUBSTITUTION IN PARY */
     2 #ABEPI ENTRY,
         /* ABEPI */
     2 #ABEPIB ENTRY,
         /* ABEPIB */
     2 #ABEPOS ENTRY(PTR,CHAR(*) VAR,FIXED BIN(15,0), FIXED BIN(15,0),
         FIXED BIN(15,0),CHAR(256) VAR,PTR),
         /* ABEPOS - GETS STANDARD POSITIONAL OPERANDS */
     2 #ABEPRS ENTRY(CHAR(*) VAR,,,BIT(*)) RETURNS(FIXED BIN(15,0)),
         /* ABEPRS - GENERALIZED PARSING ROUTINE */
     2 #ABESQ ENTRY,
         /* ABESQ - SETS DISPLAY SEQ FIELDS */
     2 #ABESTP ENTRY,
         /* ABEST - PERMANENT */
     2 #ABESUBR ENTRY(PTR,PTR,PTR,PTR,CHAR(130) VAR,PTR),
         /* SETS UP AVL SEARCH TREE FOR RHNAMESTR LIST */
     2 #ABESYLP ENTRY,
         /* ABERP - PERMANENT */
     2 #ABESYP ENTRY,
         /* ABESY - PERMANENT */
     2 #ABETR ENTRY,
         /* ABETR */
     2 #ABE053A ENTRY(PTR,PTR),
         /* SETS UP AVL SEARCH TREE FOR RHNAMESTR LIST */
     2 #ADD ENTRY(PTR,PTR,PTR,PTR,FIXED BIN(31,0),CHAR(*) VAR,
         FIXED BIN(15,0)),
         /* ABEAR - ADDREC */
     2 #BARENUM ENTRY(FIXED BIN(31,0)) RETURNS(CHAR(20) VAR),
         /* ABEBAR - CONVERT INTEGER TO PRINTABLE */
     2 #CALCEVA ENTRY,
         /* CALCEVA  */
     2 #CALCEVB ENTRY(,,,,BIT(1),PTR,CHAR(80) VAR)
         RETURNS(FLOAT DEC(16)),
     2 #CONVERT ENTRY(CHAR(*) VAR,PTR,PTR) RETURNS(CHAR(256) VAR),
         /* CALLED TO CONVERT DATA FROM ONE
            BASE SYSTEM TO ANOTHER. */
     2 #CMD ENTRY(CHAR(*) VAR,PTR,PTR) RETURNS(FIXED BIN(15,0)),
         /* ABEB - INVOKE SSE SUBCOMMANDS */
     2 #COLTR ENTRY,
         /*  ABECT */
     2 #CRTZAP ENTRY,
         /*  ABEZA */
     2 #DB2COM ENTRY(CHAR(*),ENTRY) RETURNS(FIXED BIN(31,0)),
         /* EXECUTES IMMEDIATE ANY SQL STATEMENT */
     2 #DB2GET ENTRY(CHAR(*),ENTRY,ENTRY) RETURNS(FIXED BIN(31,0)),
         /* GETS A DB2 TABLE */
     2 #DB2PUT ENTRY(CHAR(*),ENTRY,ENTRY) RETURNS(FIXED BIN(31,0)),
         /* PUTS A DB2 TABLE */
     2 #DEL ENTRY(PTR,PTR,FIXED BIN(31,0),FIXED BIN(31,0)),
         /* ABEDL - DELPROC */
     2 #DOALC ENTRY(CHAR(44) VAR,CHAR(3) VAR,PTR,PTR,CHAR(6)),
         /*  DOALC */
     2 #DOCMD ENTRY(CHAR(240) VAR, CHAR(4) VAR),
         /*  DOCMD */
     2 #DOFRE ENTRY(PTR),
         /*  DOFRE */
     2 #EVAL ENTRY(PTR,CHAR(80) VAR,,,) RETURNS(FLOAT DEC(16)),
         /* EVAL     */
     2 #GET_MISSING ENTRY(PTR) RETURNS(CHAR(256) VAR),
         /* CALLED TO GET A MISSING VALUE */
     2 #GETFIELD ENTRY(PTR,PTR) RETURNS(CHAR(256) VAR),
         /* ABEGF - GET RECORD SEGMENT FOR A DBD-DEFINED FIELD */
     2 #GETFLOAT ENTRY(CHAR(*) VAR,PTR) RETURNS(DEC FLOAT(16)),
         /* CALLED TO CONVERT DATA FROM SOME
            BASE SYSTEM TO FLOATING POINT. */
     2 #GETSLOT ENTRY(PTR,PTR,PTR,PTR,
         FIXED BIN(15,0),FIXED BIN(15,0)),
         /* ABEGS - GETSLOT */
     2 #HOLIDAY ENTRY(CHAR(6)) RETURNS(BIT(1)),
         /* CHECKS FOR HOLIDAYS */
     2 #ISPLINK ENTRY OPTIONS(ASM,INTER,RETCODE),
         /* ISPLINK - ISPF SERVICES */
     2 #MD ENTRY(PTR,PTR,FIXED BIN(31,0)),
         /*  ABEMD - MDPROC */
     2 #MISSING ENTRY(CHAR(*) VAR,PTR) RETURNS(BIT(1)),
         /* CALLED TO CHECK FOR MISSING VALUES */
     2 #NC ENTRY(PTR,PTR),
         /*  ABENC - NEWCUR */
     2 #PFN ENTRY(PTR,CHAR(8)) RETURNS(PTR),
         /* ABEPFN - LOCATE PANEL DEFINITIONS */
     2 #PFO ENTRY(PTR) RETURNS(PTR),
         /* ABEPFO - PANEL CONSTRUCTION SUBRTNE */
     2 #PIXGET ENTRY(FIXED BIN(31,0),FIXED BIN(31,0),PTR)
         RETURNS(CHAR(1)),
         /* INTERROGATES THE PIXEL MAP */
     2 #PIXGETL ENTRY(FIXED BIN(31,0),FIXED BIN(31,0),
         FIXED BIN(31,0),PTR)
         RETURNS(CHAR(3000) VAR),
         /* INTERROGATES THE PIXEL MAP FOR STRING OF PIXELS */
     2 #PIXPUT ENTRY(FIXED BIN(31,0),FIXED BIN(31,0),CHAR(1),PTR),
         /* SETS PIXEL */
     2 #PIXPUTL ENTRY(FIXED BIN(31,0),FIXED BIN(31,0),FIXED BIN(31,0),
         CHAR(*) VAR,PTR),
         /* SETS STRING OF PIXELS */
     2 #PIXZERO ENTRY(PTR),
         /* CLEARS THE PIXEL MAP */
     2 #POP ENTRY(PTR,PTR,PTR,CHAR(*) VAR),
         /* POP ABE SUBCOMMAND FROM STACK */
     2 #PRED ENTRY(PTR,PTR,PTR) RETURNS(PTR),
         /* ABEPRE - GETS PRECEDING RECORD */
     2 #PROMPT ENTRY(CHAR(80) VAR) RETURNS(CHAR(240) VAR),
         /*  DOPRM */
     2 #PROMPTL ENTRY(CHAR(80) VAR) RETURNS(CHAR(240) VAR),
         /* DOPRMLO */
     2 #PUSHLIFO ENTRY(PTR,PTR,PTR,CHAR(*) VAR),
         /* PUSH ABE SUBCOMMAND ON STACK IN LIFO ORDER*/
     2 #PUSHLILO ENTRY(PTR,PTR,PTR,CHAR(*) VAR),
         /* ABECP - CMD STACK */
     2 #PUTSLOT ENTRY(PTR,PTR,PTR),
         /* ABEPS - PUTSLOT */
     2 #READ ENTRY(PTR,PTR,PTR,CHAR(*) VAR,BIT(1)),
         /* ABER - READIN */
     2 #REFRESH ENTRY(PTR,PTR,FIXED BIN(31,0),FIXED BIN(31,0)),
         /* ABERF - REFRESH */
     2 #REP ENTRY,
         /* ABEREP */
     2 #RESEQ ENTRY,
         /*  ABERS - RESEQ */
     2 #RHPLOC ENTRY(CHAR(*),PTR) RETURNS(PTR),
         /* CALLED TO LOCATE A DATASET WITH GIVEN RHNAME */
     2 #SCRWR ENTRY,
         /* OBSOLETE - NO LONGER USER */
     2 #SCRWRITE ENTRY,
         /* SCRWRIT */
     2 #SETA ENTRY(PTR,PTR,CHAR(8),DEC FLOAT(16)),
         /* SETS THE NUMERIC VALUE FOR A SYMBOLIC VARIABLE */
     2 #SETA_SAVE ENTRY(PTR,PTR,CHAR(8),DEC FLOAT(16)),
         /* #SETA SAVED HERE DURING CLIST PROCESSING */
     2 #SETA_CLIST ENTRY(PTR,PTR,CHAR(8),DEC FLOAT(16)),
         /* USED FOR #SETA ENTRY DURING CLIST PROCESSING */
     2 #SETC ENTRY(PTR,PTR,CHAR(8),CHAR(*) VAR),
         /* SETS THE NUMERIC VALUE FOR A SYMBOLIC VARIABLE */
     2 #SETC_SAVE ENTRY(PTR,PTR,CHAR(8),CHAR(*) VAR),
         /* #SETC SAVED HERE DURING CLIST PROCESSING */
     2 #SETC_CLIST ENTRY(PTR,PTR,CHAR(8),CHAR(*) VAR),
         /* USED FOR #SETC ENTRY DURING CLIST PROCESSING */
     2 #SKIP ENTRY(CHAR(*) VAR) RETURNS(PTR),
         /* ABESK - PERMANENT */
     2 #SPARS ENTRY(CHAR(*) VAR,,CHAR(80) VAR,FIXED BIN(15,0)),
         /* SPARS */
     2 #SRCH ENTRY(PTR,CHAR(8),PTR) RETURNS(PTR),
         /* GENERALIZED SEARCH OF AVL-BALANCED BINARY TREE */
     2 #STACK ENTRY(CHAR(*) VAR),
         /* DOSTK - TSO STACK INTERFACE */
     2 #SUCC ENTRY(PTR,PTR,PTR) RETURNS(PTR),
         /* ABESUC - GETS PRIOR RECORD */
     2 #SYMA ENTRY(PTR,PTR,CHAR(8)) RETURNS(DEC FLOAT(16)),
         /* SETS THE NUMERIC VALUE FOR A SYMBOLIC VARIABLE */
     2 #SYMA_SAVE ENTRY(PTR,PTR,CHAR(8)) RETURNS(DEC FLOAT(16)),
         /* #SYMA SAVED HERE DURING CLIST PROCESSING */
     2 #SYMA_CLIST ENTRY(PTR,PTR,CHAR(8)) RETURNS(DEC FLOAT(16)),
         /* USED FOR #SYMA ENTRY DURING CLIST PROCESSING */
     2 #SYMC ENTRY(PTR,PTR,CHAR(8)) RETURNS(CHAR(256) VAR),
         /* SETS THE NUMERIC VALUE FOR A SYMBOLIC VARIABLE */
     2 #SYMC_SAVE ENTRY(PTR,PTR,CHAR(8)) RETURNS(CHAR(256) VAR),
         /* #SYMC SAVED HERE DURING CLIST PROCESSING */
     2 #SYMC_CLIST ENTRY(PTR,PTR,CHAR(8)) RETURNS(CHAR(256) VAR),
         /* USED FOR #SYMC ENTRY DURING CLIST PROCESSING */
     2 #SYMCL ENTRY(PTR,PTR,CHAR(8),CHAR(*) VAR),
         /* SUBROUTINE INSTEAD OF FUNCTION - UNLIMITED STRING LENGTH */
     2 #SYMCL_SAVE ENTRY(PTR,PTR,CHAR(8),CHAR(*) VAR),
         /* #SYMCL SAVED HERE DURING CLIST PROCESSING */
     2 #SYMCL_CLIST ENTRY(PTR,PTR,CHAR(8),CHAR(*) VAR),
         /* USED FOR #SYMCL ENTRY DURING CLIST PROCESSING */
     2 #SYSCLO ENTRY,
         /* SYSCLO - CLOSE AND REOPEN SYSPRINT */
     2 #TABDISP ENTRY(PTR),
         /* ABETD */
     2 #TABSET ENTRY(PTR,,PTR),
         /* ABETS */
     2 #TERM ENTRY(CHAR(*) VAR),
         /* TERMWRT */
     2 #WRITE ENTRY(PTR,PTR,PTR,CHAR(*) VAR,PTR);
         /* ABEW - WRITEOUT */
