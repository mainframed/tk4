 /* SETDSN@ */
 /*
0*$.HE GENERALIZED SUBROUTINES - SETDSN@
0*$.HE SET UP A DSNAME
0*$.PL 55
0*$.PN 0
0*$.PA
0*$.SS
0*$.NF
0*$11/03/76
0*$AUTHOR:  T. SMITH
0*$SOURCE MOUDLE NAME
0*$DOCUMENTATION ID:  0*$
0*$.FI L
0*$.SP 5
0*$THIS PROCEDURE WILL PROCESS THE PARSING CONTROL BLOCK CREATED AS A
0*$RESULT OF THE TERMINAL USER ENTERING A DSNAME OR DSTHIN PARAMETER.
0*$CALL FORMAT IS AS FOLLOWS:
0*$.SP 1
0*$.IN 5
0*$.NF
0*$DCL (MYSTR,MYSTRA) CHAR(44) VARYING;
0*$@PROC(1,MYDSN#(DSNAME),KEYWD(#(DSNAME)));
0*$MYSTR=SETDSN@(MYDSN);
0*$MYSTRA=SETDSN@(KEYWDSUB);
0*$.FI L
0*$.IN 0
0*$THE CHARACTER STRING RETURNED BY SETDSN@ WILL CONTAIN THE
0*$PROCESSED DSNAME.  IF THE DSNAME SPECIFIED BY THE USER WAS NOT
0*$CONTAINED IN QUOTES, THE USERID WILL BE PREFIXED, AND IF THE
0*$SPECIFIED NAME IS AMBIGUOUS, A LIST OF THE POSSIBLE DESCRIPTIVE
0*$QUALIFIERS IS WRITTEN AT THE TERMINAL, AND THE USER WILL BE
0*$PROMPTED TO CHOOSE ONE.  IF THE DSNAME SPECIFIED BY THE USER WAS
0*$CONTAINED IN QUOTES, THE QUOTES WILL BE STRIPPED, BUT NO OTHER
0*$PROCESSING WILL BE DONE.  IF THE OPERAND BEING PROCESSED WAS
0*$SPECIFIED WITH #(DSTHIN) INSTEAD OF #(DSNAME), AND THE USER
0*$ENTERED AN ASTERISK (*) AT THE TERMINAL FOR THE OPERAND,
0*$SETDSN@ WILL RETURN A CHARACTER STRING CONTAINING JUST AN
0*$ASTERISK.
0*$.SP 1
0*$IF THE OPERAND WAS OMITTED, THIS SUBROUTINE WILL RETURN A
0*$CHARACTER STRING OF LENGTH 0.
 */
 SETDSN@:  PROC(PDEPARM) RETURNS(CHAR(44) VARYING) OPTIONS(REENTRANT);
         DCL PDEPARM CHAR(24);
         % DCL (@SPARSI,@SETBUFI,@WRITEI,@PUTGETI) CHAR;
         % @SPARSI = 'N';
         % @SETBUFI = 'N';
         % @PUTGETI = 'N';
         % INCLUDE @STRIP;
         % INCLUDE @NULL;
         % INCLUDE @WRITE;
         % INCLUDE @PUTGET;
         % INCLUDE IKJPDEDS;
         % INCLUDE DAIR14;
         DCL 1 BUFFER@,
              2 BUFLEN@ FIXED BIN(15,0),
              2 BUFOFF@ FIXED BIN(15,0) INIT(0),
              2 BUFSTR@ CHAR(140);
         DCL 1 INBUF@ BASED(INPTR@),
              2 INLEN@ FIXED BIN(15,0),
              2 @NULL FIXED BIN(15,0),
              2 INSTR@ CHAR(100);
         DCL 1 CPPL EXT,
              2 CPPLCBUF PTR,
              2 CPPLUPT PTR,
              2 CPPLPSCB PTR,
              2 CPPLECT PTR;
         DCL (DSNRET,DSNCK) CHAR(44) VARYING;
         DCL WRKSTR CHAR(100) BASED(WRKPTR);
         DCL SYMC ENTRY RETURNS(CHAR(100) VARYING);
         DCL SET@ ENTRY(BIT(1),CHAR(8),CHAR(100) VARYING);
         DCL RET BIT(32);
         DCL 1 ABND,
              2 DUM BIN FLOAT(50),
              2 AREA,
               3 BLK CHAR(256),
               3 ATTR CHAR(3),
               3 ACVOL CHAR(6);
         DCL IOECB FIXED BIN(31,0) INIT(0);
         DCL IKJRET FIXED BIN(31,0) EXT;
         DCL 1 Q1,
              2 QUALEN FIXED BIN(15,0) INIT(80),
              2 @NULL FIXED BIN(15,0) INIT(0),
              2 QUALSTR CHAR(76) INIT(' ');
         DCL 1 Q2 DEF Q1,
              2 QUALARY(10) CHAR(8);
         DCL Q3 CHAR(80) DEF Q1;
         DCL QUAL CHAR(8) VARYING;
         PDEPTR = ADDR(PDEPARM);
         IF ^SUBSTR(PDEDSF1,1,1) /* WAS OPERAND SUPPLIED? */
              THEN RETURN('');
         DSNRET=(44)' ';
         WRKPTR=PDEDSPT;
         IF SUBSTR(PDEDSF1,2,1) /* NAME IN QUOTES? */
           × SUBSTR(WRKSTR,1,PDEDSL1) = '*'
              THEN DSNRET = '';
              ELSE DSNRET=SYMC('&SYSPREF')××'.';
         DSNRET=DSNRET××SUBSTR(WRKSTR,1,PDEDSL1);
         IF SUBSTR(PDEDSF1,2,1)  /* NAME IN QUOTES? */
              THEN GO TO CKMEM;
         CALL SYSCTLG('NAME',RET,DSNRET,'SYSRES',BLK);
         IF RET = '0'B
              THEN GO TO CKMEM;
         DA14PDSN=ADDR(DSNRET);
         DA14PRET=ADDR(QUALEN);
         DA14CTL='00000000'B;
         CALL SYSDAIR(CPPLUPT,CPPLECT,IOECB,CPPLPSCB,DAIR14,IKJRET);
         IF IKJRET ^= 0
              THEN GO TO CKMEM;
         IF QUALARY(2) = LOW(8)
              THEN DO;
                   DO I = 1 TO 8 WHILE(SUBSTR(QUALARY(1),I,1)^=' ');
                        END;
                   DSNRET=DSNRET××'.'××SUBSTR(QUALARY(1),1,I-1);
                   GO TO CKMEM;
                   END;
         CALL SET@('0'B,'&SYS0001',DSNRET);
         @WRITE('QUALIFIERS FOR DATA SET &SYS0001 ARE ');
         @WRITE(Q3,MF=S);
         @PUTGET(' ENTER QUALIFIER-',QUAL);
         DSNRET=DSNRET××'.'××QUAL;
 CKMEM:
         IF SUBSTR(PDEDSF2,1,1) /* CK FOR MEMBER NAME */
              THEN DO;
                   WRKPTR=PDEDSMP;
                   DSNRET=DSNRET××'('××SUBSTR(WRKSTR,1,PDEDSL2)××')';
                   END;
         RETURN(DSNRET);
         END;
