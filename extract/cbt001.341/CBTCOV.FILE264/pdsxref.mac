 /* PDSXREF */
 /*
0*$.HE GENERALIZED UTILITIES - PDSXREF
0*$.HE LOAD LIBRARY CROSS REFERENCE
0*$.PL 55
0*$.PN 0
0*$.PA
0*$.SS
0*$.NF
0*$08/26/76
0*$AUTHOR:  T. SMITH
0*$SOURCE MODULE NAME:  PDSXREF
0*$DOCUMENTATION ID:  0*$
0*$.FI L
0*$.SP 5
0*$THIS UTILITY PROGRAM CAN BE USED TO CREATE A CROSS REFERENCE
0*$LIST OF A LOAD LIBRARY SHOWING WHAT MEMBERS CONTAIN A GIVEN
0*$CSECT.  THIS PROGRAM USES THE OUTPUT FILE CREATED BY UTILITY
0*$PROGRAM PDSSCAN. SEE DOCUMENTATION ELSEWHERE IN THIS MANUAL
0*$ON THE PDSSCAN UTILITY.  SAMPLE JCL TO INVOKE PDSXREF
0*$FOLLOWS:
0*$.SP 1
0*$.IN 5
0*$.NF
0*$// EXEC PGM=PDSXREF,PARM='/NN'
0*$//STEPLIB DD DSN=U.SD.U000.TGSLOAD,DISP=SHR
0*$//SYSPRINT DD SYSOUT=A
0*$//IN DD DSN=&XREF,DISP=(OLD,DELETE)
0*$//SORTLIB DD DSN=SYS1.SORTLIB,DISP=SHR
0*$//SYSOUT DD SYSOUT=A
0*$//SORTWK01 DD UNIT=DISK,SPACE=(TRK,(10,10))
0*$//SORTWK02 DD UNIT=DISK,SPACE=(TRK,(10,10))
0*$//SORTWK03 DD UNIT=DISK,SPACE=(TRK,(10,10))
0*$.FI L
0*$.HI 5
0*$.SP 1
0*$WHERE:
0*$.SP 1
0*$NN IN THE PARM FIELD IS OPTIONAL, AND INDICATES THE LINESIZE
0*$TO BE USED ON THE SYSPRINT FILE. IF NOT SPECIFIED, THE DEFAULT
0*$IS 132.
0*$.SP 1
0*$SYSPRINT WILL CONTAIN THE LIST BY CSECT OF MEMBERS CONTAINING
0*$THAT CSECT.
0*$.SP 1
0*$IN DD STATEMENT DESCRIBES THE FILE GENERATED BY EXECUTING
0*$THE PDSSCAN UTILITY PROGRAM IN A PREVIOUS STEP.
 */
   PDSXREF: PROC(PARM) OPTIONS(MAIN);
         DCL PARM CHAR(100) VAR;
         DCL LINE_SIZE BIN FIXED(15,0) INIT(132);
         IF LENGTH(PARM) > 0
           THEN DO;
             ON ERROR PUT FILE(SYSPRINT) LIST('PARM FIELD INVALID');
             LINE_SIZE = PARM;
             IF LINE_SIZE < 19 × LINE_SIZE > 255 THEN SIGNAL ERROR;
             ON ERROR SYSTEM;
             END;
         OPEN FILE(SYSPRINT) LINESIZE(LINE_SIZE);
         DCL RETCODE FIXED BIN(31,0);
         DCL PLIRETC BUILTIN;
         DCL PLISRTD BUILTIN;
         CALL PLISRTD(' SORT FIELDS=(9,8,CH,A,1,8,CH,A) ',
           ' RECORD TYPE=F,LENGTH=(16) ',
           150000,
           RETCODE,
           E15,
           E35);
         CALL PLIRETC(0);
 E15:  PROC RETURNS(CHAR(16));
         DCL REC CHAR(16);
         ON ENDFILE(IN) GO TO ENDE15;
         READ FILE(IN) INTO(REC);
         CALL PLIRETC(12);
         RETURN(REC);
 ENDE15:
         CALL PLIRETC(8);
         END E15;
 E35:  PROC(SORTSTR);
         DCL SORTSTR CHAR(16);
         DCL 1 SORTREC DEFINED SORTSTR,
           2 MEMBER CHAR(8),
           2 CSECT CHAR(8);
         DCL CTL CHAR(8) STATIC INIT('');
         DCL K FIXED BIN(15,0);
         IF CSECT ^= CTL
           THEN DO;
             PUT FILE(SYSPRINT) SKIP EDIT(CSECT,' ')(A,A);
             CTL = CSECT;
             K = 9;
             END;
         IF K+9 > LINE_SIZE
           THEN DO;
             PUT FILE(SYSPRINT) SKIP EDIT((9)' ') (A);
             K = 9;
             END;
         PUT FILE(SYSPRINT) EDIT(MEMBER) (X(1),A);
         K = K + 9;
         END E35;
         END;
