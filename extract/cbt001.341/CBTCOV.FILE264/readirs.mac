//TS400DIR JOB MGLEVEL=1,CLASS=G,PRTY=6
// EXEC ASMFCL
//ASM.SYSTERM DD SYSOUT=D
//ASM.SYSIN DD *
READIR   CSECT
         SAVES RETCTL
         TGSREQU
         MVC   SYSUT3+40(8),0(R1)      MOVE DDNAME TO DCB           TGS
         OPEN  (SYSUT3,(INPUT))
         TM    SYSUT3+48,X'10'         WAS IT GOOD OPEN
         BC    1,GOODOPN               BR IF YES
         ABEND 1111,DUMP
GOODOPN  EQU   *
GETBLK   EQU   *
         READ  DECB,SF,SYSUT3,BUFFER,'S'
         CHECK DECB
         LA    R9,BUFFER               R9 = CURRENT ENTRY ADDR
         LA    RA,2                    RA = LENGTH EXAMINED
NREC     EQU   *
         CLI   2(R9),X'FF'             IS IT EOF
         BC    8,DONE                  BR IF YES
         MVC   ENTRY(11),2(R9)         MOVE MEMNAME & TTR TO ENTRY
         XC    ENTRY+11(2),ENTRY+11    SET K & Z BYTES TO ZERO
         MVC   ENTRY+13(1),13(R9)      MOVE C BYTE TO ENTRY
         MVC   ENTRY+14(4),=4X'00'     CLEAR SETSSI                 TGS
         MVC   ENTRY+18(8),=CL8' '                                  TGS
         IC    R8,13(R9)
         N     R8,ZF31                 R8 = LEN USER DATA IN HALFWDS
         AR    R8,R8                   R8 = LEN USER DATA
         SR    R7,R7
         IC    R7,13(R9)
         N     R7,ZFALIAS
         SRL   R7,5                    R7 = CNT USER TTRN'S
         SLL   R7,2                    R7 = LEN USER TTRN'S
         LTR   R8,R8                   IS THERE USER DATA
         BC    8,NOUSERD               BR IF NOT
         CR    R7,R8                   IS THERE JUST TTRN'S
         BC    8,NOUSERD               BR IF YES
         LR    R5,R8                                                TGS
         SR    R5,R7                                                TGS
         BCTR  R5,R0                                                TGS
         LA    R7,14(R7,R9)            R7 = ADDR OF SETSSI
         EX    R5,MVC                                               TGS
NOUSERD  EQU   *
         LA    R8,12(R8)               R8 = LEN OF DIR. ENTRY
         LA    R9,0(R8,R9)             R9 = NXT ENTRY
         LA    RA,0(R8,RA)             RA = NEW LENGTH
         BAL   RB,PROCESS              GO PROCESS ENTRY
         CH    RA,BUFFER               IS BLOCK EXHAUSTED
         BC    8,GETBLK
         B     NREC
         B     RETCTL
MVC      MVC   ENTRY+14(0),0(R7)                                    TGS
SYSUT3   DCB   DDNAME=SYSUT3,DSORG=PS,MACRF=R,EODAD=DONE,              C
               RECFM=F,BLKSIZE=256
BUFFER   DS    64F
ENTRY    DS    4D                                                   TGS
E2       DS    CL48
ZF31     DC    F'31'
ZFALIAS  DC    F'127'
PROCESS  EQU   *                                                    TGS
         TM    INITSW,X'80'                                         TGS
         BC    1,GO                                                 TGS
         OI    INITSW,X'80'                                         TGS
         LA    R2,FSTADDR                                           TGS
GETMAIN  EQU   *                                                    TGS
         LA    R0,2048                                              TGS
         GETMAIN R,LV=(0)                                           TGS
         SR    R0,R0
         ST    R0,0(R1)
         ST    R1,0(R2)                SET PTR TO NEW BLK IN OLD BLKTGS
         LR    R2,R1                   R2 = ADDR CURRENT BLK        TGS
         LA    R3,20(R2)               R3=ADDR NXT AVLBL ENTRY      TGS
         LA    R4,20                                                TGS
         STH   R4,4(R2)                SET CURRENT BLK LENGTH       TGS
GO       EQU   *                                                    TGS
         LH    R4,4(R2)                R4 = CURRENT BLK LENGTH      TGS
         CH    R4,=H'2048'             IS CURRENT BLK FULL          TGS
         BC    8,GETMAIN               BR IF YES                    TGS
         LA    R4,26(R4)               BUMPLENGTH                   TGS
         STH   R4,4(R2)                SET NEW BLK LENGTH           TGS
         MVC   0(26,R3),ENTRY          MOVE ENTRY TO BLOCK          TGS
         LA    R3,26(R3)               R3 =ADDR NXT AVLBL ENTRY     TGS
         BR    RB                      RETURN TO MAINLINE           TGS
DONE     EQU   *                                                    TGS
         CLOSE SYSUT3                                               TGS
         LH    R4,4(R2)                R4 = CURRENT BLK LEM         TGS
         TM    5(R2),X'07'             IS LEN MULT OF 8             TGS
         BC    8,GOTLEN                BR IF YES                    TGS
         N     R4,FCLR                 CLEAR LOW 3 BITS             TGS
         LA    R4,8(R4)                LEN = MULT OF 8              TGS
GOTLEN   EQU   *                                                    TGS
         LA    R0,2048                                              TGS
         SR    R0,R4                   R0 = LEN TO FREE             TGS
         LA    R1,0(R2,R4)             R1 = ADDR TO FREE            TGS
         FREEMAIN R,LV=(0),A=(1)                                    TGS
         L     R1,FSTADDR              R1 = ADDR 1ST BLK            TGS
         B     RETCTL                                               TGS
INITSW   DC    X'00'                                                TGS
FCLR     DS    0F                                                   TGS
         DC    X'FFFFFFF8'                                          TGS
FSTADDR  DC    F'0'                                                 TGS
         LTORG
         END
//LKED.SYSLMOD DD DSN=SYS2.USERLIB(READIR),DISP=SHR,VOL=
