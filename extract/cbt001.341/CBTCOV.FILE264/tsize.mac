  /*TSIZE*/
 TSIZE:  PROC(CPPL1,CPPL2,CPPL3,CPPL4) OPTIONS(MAIN);
         % INCLUDE IKJCPPL;
         % INCLUDE PDEDCL;
         % INCLUDE IKJPPL;
         % INCLUDE PPLINIT;
         % INCLUDE IKJPDECM;
         % INCLUDE IKJPDEDS;
         % INCLUDE IKJPSCB;
         DCL WRKPTR PTR,
             WRKSTR CHAR(100) BASED(WRKPTR);
         CALL SYSPARS(PPLPTR,RETCODE);
         IF RETCODE ^= 0
              THEN SIGNAL ERROR;
         PDEPTR = ADDR(LEVDSN);
         WRKPTR = PDEDSPT;
         IF SUBSTR(PDEDSF1,1,1)
              THEN DSN = SUBSTR(WRKSTR,1,PDEDSL1);
              ELSE DO;
                   DO I = 1 TO 7 WHILE(SUBSTR(PSCBUSER,I,1) ^= ' ');
                        END;
                   DSN = SUBSTR(PSCBUSER,1,I-1);
                   END;
         DCL 1 OUTMSG1,
              2 OUTLEN FIXED BIN(15,0),
              2 OFFSET FIXED BIN(15,0),
              2 OUTSTR CHAR(80);
         %INCLUDE CTLGDEF;
         ON CONDITION(CTLGERR) BEGIN;
              CALL TROUT(RETC,OUTRETCC);
              PUT EDIT('ERROR WHEN ACCESSING CATALOG = ',OUTRETCC)(A,A);
              SIGNAL ERROR;
              END;
         DCL OUTRETCC CHAR(8);
         DCL PTRFIX FIXED BIN(31,0) DEF CTLGPTR;
         DCL RETB FIXED BIN(31,0) STATIC;
         DCL RETCODE FIXED BIN(31,0) DEF RETB;
         DCL RET BIT(32) DEF RETB;
         DCL REG15 BIT(8) DEF RETB;
         DCL RETC CHAR(4) DEF RETB;
         DCL CVOL CHAR(6);
         DCL DSN CHAR(44) VARYING STATIC INIT('');
         DCL 1 ABND STATIC,
              2 DUM BIN FLOAT(53),
              2 MAREA CHAR(265) INIT(' ');
         DCL TOTRK FIXED BIN(15,0);
         DCL TOTRKC PIC'ZZ,ZZ9';
         CTLGPTR = ADDR(MAREA);
         PTRFIX = PTRFIX + 2;
         CVOL = 'SYSRES';
         CALL SYSCTLG('NAME',RET,DSN,CVOL,MAREA);
         CVOL = SUBSTR(MAREA,260,6);
         IF REG15 ^= '00001100'B
              THEN RETURN;
         TOTRK = 0;
         CALL RECURS(INDLO);
         TOTRKC = TOTRK;
         OUTSTR = 'INDEX = ' ×× DSN ×× ' SPACE = ' ×× TOTRKC;
         OUTLEN = LENGTH(DSN) + 27;
         OFFSET = 0;
         CALL PUTLINE(CPPLUPT,CPPLECT,CPECB,OUTMSG1,RETCODE,'DATA');
         RETURN;
 RECURS: PROC(PTTR) RECURSIVE;
         DCL PTTR CHAR(3);
         DCL TTRC CHAR(3);
         TTRC = PTTR;
         DCL 1 ABND,
              2 DUM BIN FLOAT(50),
              2 AREA,
               3 BLK CHAR(256),
               3 ATTR CHAR(3),
               3 ACVOL CHAR(6);
         DCL SAVPTR PTR;
         DCL N FIXED BIN(15,0);
         DCL 1 GDGNAM BASED(CTLGPTR),
              2 GDGG CHAR(1),
              2 GDGNUM BIT(32);
 NEWBLK:
         CALL SYSCTLG('BLOCK',RET,TTRC,CVOL,BLK);
         IF RETB ^= 0
              THEN SIGNAL CONDITION(CTLGERR);
         CTLGPTR = ADDR(AREA);
         PTRFIX = PTRFIX + 2;
 NEWENT:
         IF NAME = HIGH(8)
              THEN IF TTR = LOW(3)
                   THEN RETURN;
                   ELSE DO;
                        TTRC = TTR;
                        GO TO NEWBLK;
                        END;
         IF HCNT > '00000010'B & HCNT < '00000110'B
              THEN GO TO GETENT;
         IF SUBSTR(GDGNUM,1,8) > '00000101'B
           & SUBSTR(GDGNUM,1,8) < '00010000'B
              THEN GDGNUM = ^GDGNUM;
         DO N = 1 TO 8 WHILE(SUBSTR(NAME,N,1) ^= ' ');
              END;
         IF LENGTH(DSN) > 0
              THEN DSN = DSN ×× '.';
         DSN = DSN ×× SUBSTR(NAME,1,N-1);
         IF HCNT > '00000101'B × HCNT = '00000001'B
              THEN GO TO UNCATLG;
         SAVPTR = CTLGPTR;
         CALL RECURS(TTR);
         CTLGPTR = SAVPTR;
 UNCAT:
         N = LENGTH(DSN)-N;
         IF N > 0
              THEN DSN = SUBSTR(DSN,1,N);
              ELSE DSN = '';
         GO TO GETENT;
 UNCATLG:
         CALL OBPROC(DSN);
         GO TO UNCAT;
 GETENT:
         PTRFIX = PTRFIX + 12 + 2*HCNT;
         GO TO NEWENT;
         END;
 OBPROC:  PROC(PARMDSN);
         DCL PARMDSN CHAR(44) VARYING;
         % INCLUDE DSCB1;
         % INCLUDE DSCB2;
         % INCLUDE DSCB3;
         DCL DSCB1PTR PTR,
             PTR1ADJ FIXED BIN(31,0) DEF DSCB1PTR;
         DCL VTOCWK CHAR(148) EXT;
         DSCB1PTR = ADDR(VTOCWK);
         DSCB2PTR,DSCB3PTR = DSCB1PTR;
         PTR1ADJ = PTR1ADJ - 44;
         DCL CALLDSN CHAR(44);
         CALLDSN = PARMDSN;
         DCL TRKPERCYL FIXED BIN(15,0) STATIC INIT(19);
              /* FOR NOW, ASSUME EVERYTHING IS 3330 */
         DCL 1 ELEM1,
              2 CB1 FIXED BIN(15,0),
              2 HB1 FIXED BIN(15,0),
              2 CB2 FIXED BIN(15,0),
              2 HB2 FIXED BIN(15,0);
         DCL 1 ELEM2 DEF ELEM1,
              2 CH1 CHAR(4),
              2 CH2 CHAR(4);
         CALL SYSVTOC('SEARCH',RET,CALLDSN,PTRDS.VOLSER(1),VTOCWK);
         IF RETB ^= 0
              THEN RETURN;
         DO I = 1 TO 3;
              IF DS1EXTFL(I) = '0'B
                   THEN GO TO SB2;
              CH1 = DS1CCHHL(I);
              CH2 = DS1CCHHU(I);
              TOTRK=TOTRK+(CB2-CB1-1)*TRKPERCYL+TRKPERCYL-HB1+HB2+1;
              END;
 SB2:
         IF DS1PTRDS = LOW(5)
              THEN GO TO SB3;
         CALL SYSVTOC('SEEK',RET,DS1PTRDS,PTRDS.VOLSER(1),VTOCWK);
         IF DS3FMTID = '2'
              THEN DO;
                   DS1PTRDS = DS2PTRDS;
                   GO TO SB2;
                   END;
         DO I = 1 TO 4;
              IF DS3EXT.DS3EXTFL(I) = '0'B
                   THEN GO TO SB3;
              CH1 = DS3EXT.DS3CCHHL(I);
              CH2 = DS3EXT.DS3CCHHU(I);
              TOTRK=TOTRK+(CB2-CB1-1)*TRKPERCYL+TRKPERCYL-HB1+HB2+1;
              END;
         DO I = 1 TO 9;
              IF DS3ADEXT.DS3EXTFL(I) = '0'B
                   THEN GO TO SB3;
              CH1 = DS3ADEXT.DS3CCHHL(I);
              CH2 = DS3ADEXT.DS3CCHHU(I);
              TOTRK=TOTRK+(CB2-CB1-1)*TRKPERCYL+TRKPERCYL-HB1+HB2+1;
              END;
 SB3:
         END;
         END;
