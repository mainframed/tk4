 /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
 /* DENT035 - SET,INCLUDE,SETRC SUBCOMMANDS */
         % DCL @PROCNAME CHAR;
         % DCL @RENTNAME CHAR;
         % @PROCNAME = 'RENT';
         % @RENTNAME = 'DENT035';
         % INCLUDE DENTSUB;
         DCL PLIRETC BUILTIN;
         DCL SETCAPS ENTRY;
         DCL (SAVPTR,ORGPTR) PTR;
         DCL CMDLAB(4) LABEL;
         RHRC=0;
         GOTO CMDLAB(CMDINDX);
 CMDLAB(1): /* DENT035 */
 CMDLAB(2): /* SET */
         ORGPTR = RECPTR;
         IF PARY(2)='*'
           THEN DO;
             IF RECPTR=HDPTR
               THEN I=0;
               ELSE I=RECSEQ;
             END;
           ELSE DO;
             CALL SETCAPS(PARY(2));
             IF PARY(2)=SUBSTR('NEW',1,MIN(3,LENGTH(PARY(2))))
               THEN IF LSTHDR=HDPTR
                 THEN I=1; /* WILL BE FIRST RECORD */
                 ELSE I=LSTHDR->RECSEQ+SEQINCR;
               ELSE I = PARY(2); /* I=SEQUENCE NUMBER */
             END;
         CALL #MD(RHPTR,SUBENT,I);/*CALL MDPROC*/
         IF RECSEQ^=I
           THEN DO;
             /* WE MUST ALLOCATE A NEW RECORD */
             IF RECSEQ>I
               THEN SAVPTR=LSTPTR;
               ELSE SAVPTR=RECPTR;
             BUF='';
             SEQ=I;
             CALL #ADD(RHPTR,SUBENT,SAVPTR,SAVPTR,SEQ,BUF,RHPPTR)      ;
               /* CALL ADDREC */
             RECPTR=SAVPTR;
             END;
         RECSTR=PARY(3); /* ASSIGN NEW DATA TO RECORD */
         IF ORGPTR = HDPTR
           THEN CALL #NC(RHPTR,SUBENT,NXTHDR);/*CALL NEWCUR*/
           ELSE CALL #NC(RHPTR,SUBENT,ORGPTR);/*CALL NEWCUR*/
         RHRC = 0;
         SAVEFLAG='1'B;
         RETURN;
 CMDLAB(3):; /* INCLUDE */
   DCL DDNAME CHAR(8) INIT('SYSLIB');
   DCL MEMNAME CHAR(8);
   % INCLUDE DCB;
   DCL REPSW BIT(1) INIT('0'B);
   DCL (SYSDCBP,SYSCLOS) ENTRY;
   DCL RET FIXED BIN(15,0);
   DCL SEQCNT FIXED BIN(15,0) STATIC INIT(8);
   DCL LAST FIXED BIN(31,0) INIT(99999999);
   ORGPTR,SAVPTR=RECPTR;
   IF RHPDSDCB=NULL
     THEN CALL SYSDCBP(RHPDSDCB,DDNAME);
   CALL SETCAPS(PARY(2));
   I=INDEX(PARY(2),'(');
   IF I=0
     THEN MEMNAME=PARY(2);
     ELSE DO;
       DDNAME=SUBSTR(PARY(2),1,I-1);
       J=INDEX(PARY(2),')');
       IF J=0
         THEN J=LENGTH(PARY(2))+1;
       MEMNAME=SUBSTR(PARY(2),I+1,J-I-1);
       END;
   DO I=3 TO 16 WHILE(PARY(I)^='');
     CALL SETCAPS(PARY(I));
     IF PARY(I)='REP'
       THEN REPSW='1'B;
       ELSE IF VERIFY(PARY(I),'0123456789')=0
         THEN DO;
           J=PARY(I);
           IF J=0
             THEN CALL #NC(RHPTR,SUBENT,HDPTR);
             ELSE CALL #MD(RHPTR,SUBENT,J);
           SAVPTR=RECPTR;
           END;
         ELSE IF PARY(I)='LAST'
           THEN SAVPTR=LSTHDR;
           ELSE DO;
             MSGDATA='INVALID OPERAND='××PARY(3);
             RHRC=8;
             RETURN;
             END;
     END;
   RHPDSDCB->DCBDDNAM=DDNAME;
   CALL SUBENT(32)(RHPDSDCB,MEMNAME,ALCEP,RET,SEQCNT);
   IF SUBSTR(RHPDSDCB->DCBFNDA.DCBOFLGS,4,1) /* WAS OPEN SUCCESSFUL? */
     THEN CALL SYSCLOS(RHPDSDCB); /* IF SO, CLOSE IT. */
   IF RET=0
     THEN RHRC=0;
     ELSE DO;
       RHRC=8;
       SELECT(RET);
         WHEN(8) MSGDATA='UNABLE TO OPEN '××DDNAME;
         OTHERWISE MSGDATA='UNABLE TO FIND MEMBER '××MEMNAME;
         END;
       END;
   CALL #RESEQ(RHPTR,SUBENT,SAVPTR->LSTPTR,'NOSAVE','NORENUM',
     LAST,RHPPTR);
   IF ORGPTR=HDPTR
     THEN CALL #NC(RHPTR,SUBENT,NXTHDR);
     ELSE CALL #NC(RHPTR,SUBENT,ORGPTR);
   RETURN;
 ALCEP: PROC(PREC);
   DCL PREC CHAR(256) VAR;
   DCL 1 REPBUF,
     2 BUFLEN FIXED BIN(15,0),
     2 OFFSET FIXED BIN(15,0),
     2 BF CHAR(256);
   DCL SEQ FIXED BIN(31,0) INIT(-1);
   IF REPSW
     THEN DO;
       BUFLEN=MIN(260,LENGTH(PREC)+4);
       OFFSET=0;
       BF=PREC;
       CALL #REP(REPBUF); /* GO DO SYMBOLIC SUBSTITUTION */
       BUF=SUBSTR(BF,1,BUFLEN-4);
       END;
     ELSE BUF=PREC;
   CALL #ADD(RHPTR,SUBENT,SAVPTR,SAVPTR,SEQ,BUF,RHPPTR);
   END ALCEP;
 CMDLAB(4): /* SETRC */
   CALL PLIRETC(PARY(2));
   RETURN;
   END DENT035;
