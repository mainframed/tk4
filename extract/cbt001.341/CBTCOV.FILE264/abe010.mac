   /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
   /* ABE010 - MERGE,M SUBCOMMANDS */
   /* 1        2     3             */
   %INCLUDE ABESUB;
 ABESUB(ABE010) PARS(0111) CHECK(YES);
   %INCLUDE ABESUBA;

  DCL SETCAPS ENTRY;
  DCL LAST FIXED BIN(31,0) INIT(99999999);
  DCL MDSN CHAR(44) VAR;
  DCL (MDDN,MRP,RHP,BFP,ORGPTR) PTR;
  DCL SAVPTR PTR;
  DCL OPCODE CHAR(4) VAR INIT('INIT');
  DCL ALCODE CHAR(3) VAR STATIC INIT('IN');
  DCL EOFSW BIT(1);
  DCL CHARSEQ CHAR(15) VAR;
  ORGPTR = RECPTR;
  MDSN = PARY(1);
  CALL SETCAPS(MDSN);
  IF PARQCK(1)
    THEN IF SUBSTR(MDSN,1,1)^=''''
      THEN MDSN=''''××MDSN××'''';
  DO I = 4 TO 3 BY -1 WHILE(PARY(I)='');
    END;
  PARY(1) = PARY(I);
  IF PARY(1) ^='*'
    THEN IF PARY(1) = 0
      THEN CALL #NC(RHPTR,HDPTR); /* CALL NEWCUR */
      ELSE DO;
        J = PARY(1);
        CALL #MD(RHPTR,RHHDRPT,J); /*CALL MDPROC*/
        END;
  IF I > 3
    THEN DO;
      MSTRT = PARY(2);
      IF I > 4
        THEN MEND = PARY(3);
        ELSE MEND = MSTRT;
      END;
    ELSE DO;
      MSTRT = 0;
      MEND = 99999999;
      END;
  CALL #DOALC(MDSN,ALCODE,MDDN,NULL,''); /* CALL DOALC */
  IF MDDN = NULL
    THEN DO;
      MSGDATA='ALLOCATE FAILED';
      RHRC = 8;
      RETURN;
      END;
  BFP=ADDR(MDDN->ALCRECL);
  SAVPTR = RECPTR;
  RHRC=0;
  CALL MER; /* GO PROCESS MERGE */
  OPCODE ='FREE';
  CALL #READ(RHPTR,RHHDRPT,MDDN,OPCODE,EOFSW); /* CALL READIN */
  CALL #RESEQ(RHPTR,RHHDRPT,RECPTR,'NOSAVE','NORENUM',LAST);
  /* CALL RESEQ */
  CALL #NC(RHPTR,ORGPTR); /* CALL NEWCUR */

 MER: PROC;
   DO I=1 REPEAT I+1;
     CALL #READ(RHPTR,RHHDRPT,MDDN,OPCODE,EOFSW); /* CALL READIN */
     IF EOFSW
       THEN RETURN;
     OPCODE ='NXT';
     CHARSEQ=SUBSTR(MDDN->ALCBUF,MDDN->ALCSEQOFF+1,MDDN->ALCSEQLEN);
     IF VERIFY(CHARSEQ,'0123456789')^=0
       THEN DO;
         MSGDATA=
           'DATA TO MERGE MUST BE NUMBERED - TRY COPY SUBCOMMAND';
         RHRC=8;
         RETURN;
         END;
     J=CHARSEQ;
     IF MDDN->ALCSEQOFF=0
       THEN MDDN->ALCBUF=SUBSTR(MDDN->ALCBUF,MDDN->ALCSEQLEN+1);
       ELSE IF MDDN->ALCSEQOFF+MDDN->ALCSEQLEN=MDDN->ALCRECL
         THEN MDDN->ALCBUF=SUBSTR(MDDN->ALCBUF,1,MDDN->ALCSEQOFF);
         ELSE MDDN->ALCBUF=SUBSTR(MDDN->ALCBUF,1,MDDN->ALCSEQOFF)××
         SUBSTR(MDDN->ALCBUF,MDDN->ALCSEQOFF+MDDN->ALCSEQLEN+1);
     IF J >= MSTRT & J <= MEND
       THEN DO;
         BUF=BFP->BUF;
         SEQ = -1;
         CALL #ADD(RHPTR,RHHDRPT,SAVPTR,SAVPTR,SEQ,BUF,0);
         /* CALL ADDREC */
         END;
       ELSE IF J > MEND
         THEN RETURN;
     END;
   END MER;

  END ABE010;
