*$.HE GENERALIZED UTILITIES - GETSER
*$.HE GETSER UTILITY PROGRAM
*$.PL 55
*$.PN 0
*$.PA
*$.SS
*$.NF
*$6/11/74
*$AUTHOR:  T. SMITH
*$SOURCE MODULE NAME:  GETSER
*$DOCUMENTATION ID:  *$
*$.FI L
*$.SP 5
*$THE GETSER UTILITY PROGRAM PERMITS THE USER OF A TAPE GENERATION
*$DATA GROUP IN WHICH EACH GENERATION IS A MULTIPLE VOLUME DATA SET
*$TO USE VOLUME VERIFICATION WHEN USING THE TAPES FROM AN OLD
*$GENERATION TO CREATE A NEW GENERATION.
*$.SP 1
*$IN THE PAST, THE FOLLOWING JCL HAS BEEN USED:
*$.IN 5
*$.SP 1
*$.NF
*$//DUMMY DD DSN=GDGNAME(-N),
*$// DISP=OLD,UNIT=(,,DEFER)
*$//NEWGDG DD DSN=GDGNAME(+1),
*$// DISP=(NEW,CATLG,DELETE),
*$// VOL=REF=*.DUMMY
*$.SP 1
*$.IN 0
*$.FI L
*$WHERE N IS THE NUMBER OF THE OLDEST GENERATION IN THE GROUP.
*$THIS PROCEDURE WORKS FINE, UNLESS THE GENERATION DATA SETS ARE
*$MULTI-VOLUME.  IN THAT CASE, ONLY ONE TAPE BELONGING TO THE
*$OLDER GENERATION WILL BE CALLED FOR BY THE OPERATING SYSTEM FOR
*$USE IN CREATING THE NEW GENERATION DATA SET;  THE VOL=REF
*$KEYWORD ONLY REFERENCES THE FIRST VOLUME OF A MULTI-VOLUME DATA
*$SET.  WHEN THE OUTPUT FILE REACHES THE END OF THE FIRST TAPE,
*$THE SYSTEM WILL ASK FOR A SCRATCH TAPE INSTEAD OF THE SECOND TAPE
*$IN THE REFERENCED DATA SET.  THIS IS NOT A BUG IN OS; IT WAS
*$DESIGNED THAT WAY.
*$.SP 1
*$TO CIRCUMVENT THIS PROBLEM, GETSER HAS BEEN DESIGNED.
*$IF YOU INVOKE GETSER PASSING IT THE NECESSARY INFORMATION
*$IT WILL ACCESS THE CATALOG TO ACQUIRE THE VOLUME SERIALS FOR
*$THE SPECIFIED OLD GENERATION DATA SET, AND WILL INSERT THEM IN
*$THE JFCB FOR THE DD STATEMENT DEFINING THE NEW GENERATION
*$DATA SET.  THUS, WHEN YOU SUBSEQUENTLY OPEN AND WRITE THE
*$NEW GENERATION DATA SET, THE APPROPRIATE VOLUME SERIALS WILL
*$BE CALLED FOR.  (NOTE:  GETSER IS CURRENTLY EQUIPPED TO
*$HANDLE ONLY THE FIRST FIVE VOLUMES OF A MULTI-VOLUME DATA SET.)
*$.SP 1
*$.CE 1
*$TO INVOKE VIA JCL
*$.SP 1
*$// EXEC PGM=GETSER,PARM='DSNAME,DDNAME,PGMNAME,SUBPARM'
*$.SP 1
*$DSNAME
*$.IN 5
*$THIS IS THE CATALOGED DATA SET NAME FROM WHICH VOLUME SERIALS
*$ARE TO BE OBTAINED.  IF A RELATIVE GENERATION NUMBER (I.E.,
*$DSNAME(-8)) IS NOT SPECIFIED, AND THE DATA SET BELONGS TO A
*$GENERATION DATA GROUP, THE VOLUME SERIALS WILL BE OBTAINED FROM
*$THE OLDEST GENERATION DATA SET IN THE GROUP.
*$.IN 0
*$DDNAME
*$.IN 5
*$DDNAME OF THE DD STATEMENT DESCRIBING THE TAPE OUTPUT FILE.  THE
*$TAPE SERIAL NUMBERS OBTAINED FROM THE CATALOG WILL BE INSERTED
*$IN THEJFCB FOR THIS DD STATEMENT.  NOTE:  ONLY THE FIRST FIVE
*$VOLUME SERIAL NUMBERS WILL BE INSERTED.
*$.IN 0
*$PGMNAME
*$.IN 5
*$NAME OF THE PROGRAM TO WHICH GETSER IS TO TRANSFER CONTROL WHEN
*$IT HAS COMPLETED ITS OPERATION.
*$.IN 0
*$SUBPARM
*$.IN 5
*$ANY PARAMETER INFORMATION TO BE PASSED TO THE PROGRAM TO WHICH
*$GETSER WILL TRANSFER CONTROL WHEN IT HAS COMPLETED ITS OPERATION.
*$NOTE THAT SUBPARM MAY CONTAIN COMMAS.
*$.IN 0
*$.SP 1
*$NOTE:  IF GETSER ENCOUNTERS AN ERROR DURING ITS PROCESSING, IT WILL
*$ISSUE AN ABEND MACRO SPECIFYING A COMPLETION CODE OF 255 IF DATA
*$IN THE PARM FIELD IS IN ERROR (E.G. MISSING PGMNAME) OR 254 IF THE
*$ERROR OCCURRED WHILE ATTEMPTING TO ACCESS THE CATALOG.
*$.SP 1
*$.CE 1
*$TO INVOKE VIA PLI
*$.SP 1
*$CALL GETSERP (DSNAME,DDNAME,RETCODE);
*$.SP 1
*$WHERE DSNAME AND DDNAME ARE BOTH CHARACTER STRINGS CONTAINING
*$THE EQUIVALENT INFORMATION AS IF GETSER WERE BEING INVOKED VIA
*$THE EXEC CARD IN YOUR JCL.  RETCODE IS DEFINED AS FIXED BIN(31,0).
*$IT WILL BE ST TO ZERO ON RETURN IF PROCESSING WAS SUCCESSFULLY
*$CONCLUDED.  NOTE:  CARE SHOULD BE TAKEN TO ENSURE THAT THE CALL
*$TO GETSERP IS DONE BEFORE OPENING THE FILE.
*$.SP 1
*$.CE 1
*$TO INVOKE VIA COBOL
*$.SP 1
*$.NF
*$ENTER LINKAGE
*$CALL 'GETSERC' USING DSNAME, DDNAME, RETCODE
*$ENTER COBOL
*$.SP 1
*$.FI L
*$WHERE DSNAME AND DDNAME ARE DEFINED IN THE LINKAGE SECTION OF THE
*$DATA DIVISION AS PICTURE X(44) AND PICTURE X(8), RESPECTIVELY, AND
*$CONTAIN THE EQUIVALENT INFORMATION AS IF GETSER WERE BEING INVOKED
*$VIA THE EXEC CARD IN YOUR JCL.  RETCODE IS DEFINED AS COMPUTATIONAL
*$PICTURE S99999.  IT WILL BE SET TO ZERO ON RETURN IF PROCESSING
*$WAS SUCCESSFULLY CONCLUDED.  NOTE:  CARE SHOULD BE TAKEN TO ENSURE
*$THAT THE CALL TO GETSERC IS DONE BEFORE OPENING THE FILE.
********************************************************************
*                                                                  *
* AT ENTRY, THIS ROUTINE EXPECTS R1 TO CONTAIN THE ADDR OF A       *
* FULLWORD CONTAINING THE ADDR OF A HALFWORD CONTAINING THE LENGTH *
* OF A CHARACTER STRING WHICH IMMEDIATELY FOLLOWS THE HALFWORD.    *
* THIS CHARACTER STRING SHOULD HAVE THE FOLLOWING FORMAT -         *
*                                                                  *
*        DSNAME,DDNAME,PGMNAME,SUBPARM                             *
*                                                                  *
* WHERE - DSNAME IS THE NAME OF A CATALOGED DATA SET.  THE PROGRAM *
*                WILL OBTAIN THE VOLUME SERIAL NUMBERS FOR THE     *
*                DATA SET FROM THE CATALOG.  IF THE USER SPECIFIES *
*                A GENERATION DATA SET WITHOUT A RELATIVE          *
*                GENERATION NUMBER, THE PROGRAM WILL BY DEFAULT    *
*                SELECT THE OLDEST GENERATION.                     *
*         DDNAME IS THE NAME OF A DD STATEMENT.  THE PROGRAM WILL  *
*                READ IN THE JFCB AND INSERT THE VOLUME SERIALS    *
*                OBTAINED FROM THE CATALOG, AND WRITE THE JFCB     *
*                BACK OUT.                                         *
*         PGMNAME IS THE NAME OF THE PROGRAM TO WHICH THIS PROGRAM *
*                WILL XCTL AFTER FINISHING ITS PROCESSING          *
*         SUBPARM IS ANY PARAMETER INFORMATION TO BE PASSED TO THE *
*                PROGRAM FOR WHICH THE XCTL IS ISSUED.  THIS       *
*                OPERAND IS OPTIONAL.  NOTE THAT SUBPARM MAY       *
*                CONTAIN COMMAS, OR ANY OTHER SPECIAL CHARACTERS.  *
*                                                                  *
********************************************************************
GETSER   CSECT
         SAVES RETCTL
         TGSREQU
         LA    RF,255
         LR    R7,R1
         L     R1,0(R1)
         LH    R2,0(R1)
         LTR   R2,R2
         BC    8,AB
         L     RA,=V(GETSERPM)
         USING GSDSECT,RA
         LA    R5,3
         LA    R6,DSNMVC
MVCLOOP  EQU   *
         LTR   R2,R2
         BC    8,AB
         BAL   RB,PSCAN
         EX    R4,0(R6)
         LA    R6,6(R6)
         BCT   R5,MVCLOOP
         ST    R1,0(R7)
         OI    0(R7),X'80'
         STH   R2,0(R1)
         L     RF,=V(GETSERCM)
         BALR  RE,RF
         LTR   RF,RF
         BC    8,XCTL
AB       EQU   *
         LR    R2,RF
         ABEND (2),DUMP,STEP
XCTL     EQU   *
         LR    R1,R7
         LA    R2,PGMNAME
         L     RD,4(RD)
         L     RE,12(RD)
         XCTL  (2,12),EPLOC=(2)
********************************************************************
*                                                                  *
* PARAMETER SCAN SUBROUTINE                                        *
*                                                                  *
*        AT ENTRY, R1 = ADDR - 2 OF STR TO SCAN                    *
*                  R2 = MAX LEN OF STR TO SCAN                     *
*                  RB = RETURN ADDR                                *
*        AT EXIT,  R3 = ADDR - 2 OF CURRENT OPERAND                *
*                  R4 = LEN - 1 OF CURRENT OPERAND                 *
*                  R2 = NEW MAX LEN (COULD BE ZERO IF CURRENT IS LAST)
*                  R1 = ADDR OF 1ST CHAR OF NXT OPERAND - 2        *
*                                                                  *
********************************************************************
PSCAN    EQU   *
         LR    R3,R1                   SET R3
         SR    R4,R4
PLOOP    EQU   *
         CLI   2(R1),C','
         BC    8,GOTEN
         LA    R1,1(R1)                UP SCAN ADDR
         LA    R4,1(R4)                UP OPERAND LEN
         BCT   R2,PLOOP
GOBACK   EQU   *
         BCTR  R4,0
         BR    RB
GOTEN    EQU   *
         LA    R1,1(R1)
         BCTR  R2,0
         B     GOBACK
         LTORG
GETSERCM CSECT
         SAVES RETCTLA
         MVI   LOWQ,C' '
         MVC   LOWQ+1(51),LOWQ
         L     RA,=V(GETSERPM)
         USING ENTRY,R2
         LA    R1,DSNAME-1
         LA    R2,44
         LR    R4,R1
CMLOOPA  EQU   *
         CLI   1(R1),C' '              IS IT END OF NAME
         BC    8,CMENM                 BR IF YES
         CLI   1(R1),C'.'              IS IT END INDEX QUALIFIER
         BC    7,NOQ                   BR IF NOT
         LR    R4,R1                   RESET R4
NOQ      EQU   *
         LA    R1,1(R1)
         BCT   R2,CMLOOPA
CMENM    EQU   *
         CLI   0(R1),C')'              IS REL GEN NO SPECIFIED
         BC    8,GETVOL                BR IF YES
         SR    R1,R4                   R1 = LEN LOWEST QUALIFIER
*                                           (+1 IF QUALIFIED)
         BCTR  R1,0
         LA    R7,43
         SR    R7,R2                   R7 = LEN NAME LESS 1 FOR EX
         LR    R8,R7                   R8 = LEN NAME LESS 1 FOR EX
         SR    R7,R1                   R7 = LEN INDICES LESS 1 FOR EX
         LTR   R7,R7                   IS THE NAME QUALIFIED
         BC    8,NOBCTR                BR IF NOT
         BCTR  R1,0
NOBCTR   EQU   *
         EX    R1,MVCLOWQ
         LTR   R7,R7                   IS THE NAME QUALIFIED
         BC    4,NOMOV                 BR IF NOT
         BCTR  R7,0                    DONT MOVE LAST PERIOD
         EX    R7,MVCIND
         LOCATE INDCAM
         CH    RF,=H'12'
         BC    8,OK
         BAL   R9,BOMB
NOMOV    EQU   *
         MVC   TTR,=XL3'01'
         LOCATE BLKCAMN
         B     NEWBLKA
NEWBLK   EQU   *
         MVC   TTR,ETTR
         LOCATE BLKCAM
NEWBLKA  EQU   *
         LTR   RF,RF
         BC    7,BOMB
OK       EQU   *
         LA    R2,AREA+2
NXT      EQU   *
         CLC   ENAME,=8X'FF'           IS IT TIME FOR NEW BLOCK
         BC    8,NEWBLK                BR IF YES
         CLC   ENAME,LOWQ              IS IT PROPER ENTRY
         BC    8,GOTENT                BR IF YES
         BC    2,BOMB
         SR    R3,R3
         IC    R3,ELEN
         SLL   R3,1
         LA    R2,12(R2,R3)
         B     NXT
GETVOL   EQU   *
         MVC   INDICES,DSNAME
         LOCATE INDCAM
         B     VCBA
GOTENT   EQU   *
         CLI   ELEN,X'05'              IS IT DATA SET PTR ENTRY
         BC    2,DSPTR                 BR IF YES
         CLI   ELEN,X'01'              IS IT VCB PTR ENTRY
         BC    8,GOTVCB                FR IF YES
         LA    RF,254
         CLI   ELEN,X'02'              GDG INDEX HAS ELEN = 2
         BC    7,BOMB
         LA    R8,DSNAME+1(R8)         R8 = A(1ST BLNK PAST DSNAME)
         MVC   0(2,R8),=C'(-'
         LH    R5,CURCNT               R5 = NO GENERATIONS IN GDG
         BCTR  R5,0
         CVD   R5,DBL
         MVC   EDFLD,=X'40202020'
         ED    EDFLD,DBL+6
         OI    EDFLD+3,X'F0'
         LA    R6,EDFLD+1
         LA    R7,3
LOOPB    EQU   *
         CLI   0(R6),C' '
         BC    7,GOTLEN
         LA    R6,1(R6)
         BCT   R7,LOOPB
GOTLEN   EQU   *
         EX    R7,MVCGDG
         B     GETVOL
GOTVCB   EQU   *
         MVC   TTR,ETTR
         LOCATE BLKCAM
VCBA     EQU   *
         LTR   RF,RF
         BC    7,BOMB
         LH    R4,AREA                 R4 = POTENTIAL #VOL SERS
         LA    R2,AREA+2               R2 = A(VOLUME SER LIST)
         CH    R4,=H'6'
         BC    4,GETJFCB
         LA    R4,5                    R4 = # VOL SERS TO COPY
         B     GETJFCB
DSPTR    EQU   *
********************************************************************
*  AT THIS POINT R2 = ADDR OF THE DATA SET POINTER CATALOG ENTRY   *
*  CONTAINING THE DESIRED VOLUME SERIAL NUMBERS                    *
********************************************************************
         LH    R4,FLGS                 R4 = # VOLS IN CTLG ENTRY
         LA    R2,14(R2)               R2 = A(1ST VOL SER IN CTLG ENT)
GETJFCB  EQU   *
         MVC   DUMDCB+40(8),DDNAME
         RDJFCB DUMDCB
         LA    R3,JFCB+118             R3 = A(VOL SER SLOT IN JFCB)
         SR    R0,R0
         IC    R0,JFCB+117
         CR    R0,R4
         BC    10,NOSTC
         STC   R4,JFCB+117
NOSTC    EQU   *
VLOOP    EQU   *
         MVC   0(6,R3),4(R2)           MOVE VOLSER TO JFCB
         LA    R2,12(R2)
         LA    R3,6(R3)
         BCT   R4,VLOOP
         CLC   JFCB+104(2),=H'0'
         BC    8,NOLRECL
         MVC   DUMDCB+82(2),JFCB+104
NOLRECL  EQU   *
         CLC   JFCB+102(2),=H'0'
         BC    8,NOBLKSI
         MVC   DUMDCB+62(2),JFCB+102
NOBLKSI  EQU   *
         CLI   JFCB+100,X'0'
         BC    8,NORECFM
         MVC   DUMDCB+36(1),JFCB+100
NORECFM  EQU   *
         OI    JFCB+76,X'80'           SET FLKG TO WRITE JFCB
         OPEN  (DUMDCB,(OUTPUT)),TYPE=J
         CLOSE (DUMDCB,REWIND)
         SR    RF,RF
         B     RETCTLA
BOMB     EQU   *
         LA    RF,254
         B     RETCTLA
MVCLOWQ  MVC   LOWQ(0),2(R4)
MVCIND   MVC   INDICES(0),DSNAME
MVCGDG   MVC   2(0,R8),0(R6)
INDCAM   CAMLST NAME,INDICES,,AREA
BLKCAMN  CAMLST BLOCK,TTR,,AREA
BLKCAM   CAMLST BLOCK,TTR,CVOL,AREA
LOWQ     DC    CL8' '
INDICES  DC    CL44' '
DBL      DS    D
EDFLD    DS    CL4
         DC    C')'
TTR      DS    XL3
         DS    0D
AREA     DS    0CL265
         DS    CL256
NTTR     DS    CL3
CVOL     DS    CL6
DUMDCB   DCB   DDNAME=DUMMY,DSORG=PS,MACRF=W,RECFM=V,BLKSIZE=32000,    C
               EXLST=EXLST
EXLST    DS    0F
         DC    X'87'
         DC    AL3(JFCB)
JFCB     DS    CL180
         LTORG
GETSERC  CSECT
********************************************************************
*                                                                  *
* ENTRY POINT USED BY COBOL                                        *
*                                                                  *
********************************************************************
         USING *,RF
         LR    R0,RE
         STM   RE,RC,12(RD)
         L     RA,=V(GETSERPM)
         LM    R2,R3,0(R1)
         MVC   DSNAME,0(R2)
         MVC   DDNAME,0(R3)
         LM    R2,RA,28(RD)
         L     RF,=V(GETSERCM)
         BALR  RE,RF
         L     R1,24(RD)
         L     R1,8(R1)
         ST    RF,0(R1)
         L     RE,20(RD)
         BR    RE
         LTORG
GETSERP  CSECT
********************************************************************
*                                                                  *
* ENTRY POINT USED BY PLI                                          *
*                                                                  *
********************************************************************
         USING *,RF
         LR    R0,RE
         STM   RE,RC,12(RD)
         L     RA,=V(GETSERPM)
         MVI   DSNAME,C' '
         MVC   DSNAME+1(60),DSNAME
         LM    R2,R3,0(R1)
         LH    R4,4(R2)
         BCTR  R4,0
         L     R2,0(R2)
         EX    R4,MVCDSNP
         LH    R5,4(R3)
         BCTR  R5,0
         L     R3,0(R3)
         EX    R5,MVCDDNP
         LM    R2,RA,28(RD)
         L     RF,=V(GETSERCM)
         BALR  RE,RF
         L     R1,24(RD)
         L     R1,8(R1)
         ST    RF,0(R1)
         L     RE,20(RD)
         BR    RE
MVCDSNP  MVC   DSNAME(0),0(R2)
MVCDDNP  MVC   DDNAME(0),0(R3)
         LTORG
GETSERPM CSECT
         USING *,RA
         MVC   DSNAMA(0),2(R3)
         MVC   DDNAMA(0),2(R3)
         MVC   PGMNAMA(0),2(R3)
DSNAMA   DC    CL45' '
DDNAMA   DC    CL8' '
PGMNAMA  DC    CL8' '
GSDSECT  DSECT
DSNMVC   DS    CL6
DDNMVC   DS    CL6
PGMMVC   DS    CL6
DSNAME   DC    CL45' '
DDNAME   DC    CL8' '
PGMNAME  DC    CL8' '
ENTRY    DSECT
ENAME    DS    CL8
ETTR     DS    CL3
ELEN     DS    CL1
FLGS     DS    CL1
MAXCNT   DS    CL1
CURCNT   DS    H
         END
