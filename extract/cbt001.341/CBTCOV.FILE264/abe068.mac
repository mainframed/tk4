 /* COPYRIGHT 1986 BY THOMAS GLEN SMITH */
 /* ABE068,IMGET,IMPUT,IMGETB,IMPUTB */
 /* 1      2     3     4      5      */
   %INCLUDE ABESUB;
 ABESUB(ABE068) PARS(00000) CHECK(YES);
   %INCLUDE ABESUBA;
   DCL 1 DDI01 BASED(RHPLOT79),
   %INCLUDE ABE063I;

   DCL SETCAPS ENTRY;
   DCL PTRIN ENTRY(PTR)
     RETURNS(FIXED BIN(31,0));
   DCL PTROUT ENTRY(FIXED BIN(31,0))
     RETURNS(PTR);
   DCL (ORGPTR,RHP) PTR;
   DCL CMD CHAR(240) VAR;

   IF RHPLOT79=NULL
     THEN I=#CMD('GR DEVICE 80 72 792 504 1',RHPTR,RHHDRPT);
   IF BITMAP_ELSIZE^=1
     THEN DO;
       MSGDATA='ELSIZE M/B 1 - SEE GR DEVICE SUBCOMMAND';
       RHRC=8;
       RETURN;
       END;
   RHP=RHPTR;
   XPEL1,YPEL2=1;
   XPEL2=PLMAXX;
   YPEL1=PLMAXY;
   IF PARY(1)^=''
     THEN IF PARY(1)^='*'
       THEN DO;
         CALL SETCAPS(PARY(1));
         RHP=#RHPLOC(PARY(1),RHHDRPT);
         END;
   DO I=2 TO 5 WHILE(PARY(I)^='');
     J=PARY(I);
     IF J<0 × ((I=2 × I=4) & J>PLMAXX) × ((I=3 × I=5) & J>PLMAXY)
       THEN DO;
         RHRC=8;
         MSGDATA='PEL VALUE OUT OF RANGE';
         RETURN;
         END;
     SELECT(I);
       WHEN(2) XPEL1=J;
       WHEN(3) YPEL1=J;
       WHEN(4) XPEL2=J;
       WHEN(5) YPEL2=J;
       OTHERWISE;
       END; /* SELECT */
     END;
   RECSIZ=ABS(XPEL1-XPEL2)+1;
   IF CMDINDX>3
     THEN RECSIZ=RECSIZ/8;
   IF RECSIZ=0 × RECSIZ>32767
     THEN DO;
       MSGDATA='PEL RANGE ON X COORDINATE MUST BE 0<RANGE<32767';
       RHRC=8;
       RETURN;
       END;
   IF RHP=NULL & (CMDINDX=2 × CMDINDX=4)
     THEN DO; /* IMGET,IMGETB - DATASET MUST BE CREATED */
       RHP=RHPTR;
       PUT STRING(CMD) EDIT('DEFINE ',PARY(1),' RECSIZE(',RECSIZ,')')
         (A,A,A,P'99999',A);
       IF CMDINDX=4 /* IMGETB? */
         THEN CMD=CMD××' HEX';
       I=#CMD(CMD,RHP,RHHDRPT);
       END;
   IF RHP=NULL
     THEN DO; /* DATASET NOT FOUND */
       MSGDATA='DATASET '××PARY(1)××' NOT FOUND';
       RHRC=8;
       RETURN;
       END;
   IF XPEL1>XPEL2
     THEN XBUMP=-1;
     ELSE XBUMP=1;
   IF YPEL1>YPEL2
     THEN YBUMP=-1;
     ELSE YBUMP=1;
   ORGPTR=RHP->RECPTR;
   X=MIN(XPEL1,XPEL2);
   SELECT(CMDINDX);
     WHEN(1,2) CALL IMGET;
     WHEN(3) CALL IMPUT;
     WHEN(4) CALL IMGETB;
     WHEN(5) CALL IMPUTB;
     OTHERWISE;
     END; /* SELECT */
   IF ORGPTR=RHP
     THEN I=#CMD('TOP',RHP,RHHDRPT);
     ELSE CALL #NC(RHP,ORGPTR);

 IMGET: PROC;
   DO Y=YPEL1 TO YPEL2 BY YBUMP;
     I=#CMD('NL',RHP,RHHDRPT); /* ADD A BLANK LINE AND POINT TO IT */
     RHP->RECPTR->RECSTR='';
     DO X=XPEL1 TO XPEL2 BY XBUMP;
       RHP->RECPTR->RECSTR=RHP->RECPTR->RECSTR××#PIXGET(X,Y,RHPLOT79);
       END;
     END;
   END IMGET;

 IMGETB: PROC;
   DCL (I,J) FIXED BIN;

   J=RECSIZ*8; /* NUMBER OF PELS DESIRED */
   DO Y=YPEL1 TO YPEL2 BY YBUMP;
     I=#CMD('NL',RHP,RHHDRPT); /* ADD A BLANK LINE AND POINT TO IT */
     RHP->RECPTR->RECSTR=
       #PIXGETL(X,Y,J,RHPLOT79);
     END;
   END IMGETB;

 IMPUT: PROC;
   DCL PEL CHAR(1);

   DO Y=YPEL1 TO YPEL2 BY YBUMP;
     I=0;
     DO X=XPEL1 TO XPEL2 BY XBUMP;
       PEL=' '; /* DEFAULT */
       I=I+1;
       IF RHP->RECPTR^=RHP
         THEN IF LENGTH(RHP->RECPTR->RECSTR) >= I
           THEN PEL=SUBSTR(RHP->RECPTR->RECSTR,I,1);
       CALL #PIXPUT(X,Y,PEL,RHPLOT79);
       END;
     I=#CMD('DOWN 1',RHP,RHHDRPT);
     END;
   END IMPUT;

 IMPUTB: PROC;
   DCL PEL CHAR(1);
   DCL L FIXED BIN(31,0);

   L=ABS(XPEL1-XPEL2)+1;
   DO Y=YPEL1 TO YPEL2 BY YBUMP;
     CALL #PIXPUTL(X,Y,MIN(L,LENGTH(RHP->RECPTR->RECSTR)*8),
       RHP->RECPTR->RECSTR,RHPLOT79);
     IF RHP->RECPTR->NXTPTR=RHP
       THEN LEAVE;
     I=#CMD('DOWN 1',RHP,RHHDRPT);
     END;
   END IMPUTB;

   END ABE068;
