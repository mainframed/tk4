   /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
   /* ABE058 - NCODE, DCODE SUBCOMMANDS */
   %INCLUDE ABESUB;
 ABESUB(ABE058) PARS(0) CHECK(YES);
   %INCLUDE ABESUBA;
   DCL 1 LRN_STRUCTURE BASED(LRNPTR),
   %INCLUDE ABELRN;
   %INCLUDE ABELRNA;

   DCL DES ENTRY(CHAR(8),CHAR(8),CHAR(5),PTR)
     RETURNS(CHAR(8));
   DCL KEY CHAR(8);
   DCL CODE CHAR(5);
   DCL STELK(16) BIT(48) BASED(KEYPTR);

   KEYPTR=NULL;
   IF CMDINDX=1 × CMDINDX=2
     THEN CODE='NCODE';
     ELSE CODE='DCODE';
   IF LENGTH(PARY(1))>8
     THEN DO;
       MSGDATA='LENGTH OF KEY MUST BE <= 8';
       RHRC=8;
       RETURN;
       END;
   KEY=PARY(1);
   IF RH_LEN=RH_LEN_DFT & RH_OFF=RH_OFF_DFT & RH_NCOLS=RH_NCOLS_DFT
     & OUTDDN^=NULL
     THEN DO; /* SET UP MY OWN LSU DEFAULT */
       RH_OFF=1;
       RH_NCOLS=1;
       RH_LEN=FIXED(OUTDDN->ALCRECL/8)*8;
       IF SUBSTR(OUTDDN->ALCFLAG,6,1) /* UNNUM? */
         THEN RH_LEN=FIXED(OUTDDN->ALCRECL/8)*8;
         ELSE RH_LEN=FIXED((OUTDDN->ALCRECL-OUTDDN->ALCSEQLEN)/8)*8;
       END;
     ELSE DO; /* TEST THE VALUES THE USER SPECIFIED */
       IF MOD(RH_LEN,8)^=0
         THEN DO;
           MSGDATA='LENGTH MUST BE DIVISIBLE BY 8';
           RHRC=8;
           RETURN;
           END;
       IF OUTDDN^=NULL
         THEN IF (
           SUBSTR(OUTDDN->ALCFLAG,6,1) /* UNNUM? */ &
           RH_OFF-1+RH_LEN*RH_NCOLS>OUTDDN->ALCRECL-OUTDDN->ALCSEQLEN
           )×(
           ^SUBSTR(OUTDDN->ALCFLAG,6,1) /* NOT UNNUM? */ &
           RH_OFF-1+RH_LEN*RH_NCOLS>OUTDDN->ALCRECL
           )
           THEN DO;
             MSGDATA='LENGTH TO NCODE TOO LONG';
             RHRC=8;
             RETURN;
             END;
       END;
   DO FOREVER=1 REPEAT FOREVER;
     CALL #ABELSP(RHHDRPT,LRNPTR); /* GET NEXT FROM-SEGMENT */
     IF LRN_STRUCTURE.LRN_BUFP=NULL
       THEN LEAVE; /* ALL DONE */
     HEXMODE='1'B;
     IF LENGTH(LSPBUF)<RH_LEN
       THEN LSPBUF=LSPBUF××REPEAT(' ',RH_LEN-LENGTH(LSPBUF)-1);
     L=LENGTH(LSPBUF);
     IF L^=RH_LEN
       THEN DO;
         MSGDATA='COLUMN BUFFER CANNOT BE PADDED TO PROPER LENGTH';
         RHRC=8;
         RETURN;
         END;
     DO I=1 REPEAT I+8 WHILE(I<L);
       SUBSTR(LSPBUF,I,8)=DES(SUBSTR(LSPBUF,I,8),KEY,CODE,KEYPTR);
       END;
     END;
   IF KEYPTR^=NULL
     THEN FREE STELK;
   RHRC=0;
   END ABE058;
