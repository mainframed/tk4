 /*CHBDRNK*/
 CHBDRNK:  PROC(VSAMFLE,RECHDR);
         DFT RANGE(*) FIXED BIN VALUE(FIXED BIN(31,0));
         DCL 1 REC BASED(RECPTR) UNALIGNED,
                   /* THIS IS THE DEFINITION OF THE ELEMENTS OF THE
                      MAIN STORAGE CHAIN OF RECORDS */
              2 LSTPTR PTR,
                   /* POINTER TO PREVIOUS RECORD OR NULL */
              2 NXTPTR PTR,
                   /* POINTER TO NEXT RECORD OR NULL */
              2 RECMYUID CHAR(8),
              2 RECOPUID CHAR(8),
              2 RECRANK FIXED BIN(31,0);
         DCL 1 RECHDR,
              2 LSTHDR PTR,
                   /* POINTER TO THE LAST RECORD */
              2 NXTHDR PTR;
                   /* POINTER TO THE FIRST RECORD */
         DCL HDPTR PTR;
         HDPTR = ADDR(RECHDR);
         LSTHDR = HDPTR;
         NXTHDR = HDPTR;
         RECPTR = HDPTR;
         DCL 1 INREC,
              2 MYUID CHAR(8),
              2 OPUID CHAR(8),
              2 RANK FIXED BIN(31,0);
         DCL VSAMFLE FILE;
         ON ENDFILE(VSAMFLE) GO TO EOJ;
         DO FOREVER=1 REPEAT FOREVER;
              READ FILE(VSAMFLE) INTO(INREC);
              RECPTR = GETSLOT(RECPTR);
              RECMYUID = MYUID;
              RECOPUID = OPUID;
              RECRANK = RANK;
              END;
         DCL SORTSW BIT(1);
 EOJ:
         DO UNTIL(^SORTSW);
              SORTSW = '0'B;
              DO RECPTR=NXTHDR REPEAT NXTPTR WHILE(NXTPTR^=HDPTR);
                   IF NXTPTR->RECRANK > RECRANK
                        THEN DO;
                             SORTSW = '1'B;
                             CALL PULSLOT(RECPTR);
                             CALL ADDREC(NXTPTR,RECPTR);
                             END;
                   END;
              END;
 /* GETSLOT
 THIS SUBROUTINE IS INVOKED WHEN A NEW SLOT IS TO BE ADDED TO
 THE ARRAY OF RECORDS.  RECPTR MUST CONTAIN THE ADDRESS OF THE SLOT
 BEHIND WHICH THE NEW RECORD IS TO BE ADDED.  IF IT IS THE FIRST
 RECORD TO BE ADDED TO THE ARRAY, OR IF THE NEW SLOT IS TO BE
 INSERTED AT THE FRONT OF THE ARRAY, RECPTR SHOULD CONTAIN THE ADDRESS
 OF THE CONTROL HEADER. */
 GETSLOT:  PROC(RECPTR) RETURNS(PTR);
         DCL RECPTR PTR;
         DCL TMPPTR PTR;
         ALLOCATE REC SET(TMPPTR);
         CALL ADDREC(RECPTR,TMPPTR);
         RETURN(TMPPTR);
         END GETSLOT;
 /* ADDREC
 THIS SUBROUTINE IS USED TO ADD A RECORD TO THE ARRAY OF RECORDS.  THE
 TWO PARAMETERS MUST BE A POINTER VARIABLE CONTAINING THE ADDR OF THE
 RECORD BEHIND WHICH THE RECORD IS TO BE ADDED, AND THE RECORD TO BE
 ADDED IS THE SECOND PARAMETER */
 ADDREC:  PROC(PRMPTRPTR,ADDPTR) RETURNS(PTR);
         DCL (PRMPTRPTR,PRMPTR,TMPPTR,ADDPTR) PTR;
         PRMPTR = PRMPTRPTR;
         TMPPTR = ADDPTR;
         TMPPTR->LSTPTR = PRMPTR;
         TMPPTR->NXTPTR = PRMPTR->NXTPTR;
         TMPPTR->LSTPTR->NXTPTR = TMPPTR;
         TMPPTR->NXTPTR->LSTPTR = TMPPTR;
         END ADDREC;
 /* PULSLOT
 THIS SUBROUTINE IS INVOKED WHEN A SLOT IS TO BE REMOVED FROM THE
 ARRAY OF RECORDS */
 PULSLOT:  PROC(PRMPTR);
         DCL PRMPTR PTR;
         DCL TMPPTR PTR;
         TMPPTR = PRMPTR;
         TMPPTR->LSTPTR->NXTPTR = TMPPTR->NXTPTR;
         TMPPTR->NXTPTR->LSTPTR = TMPPTR->LSTPTR;
         END PULSLOT;
         END CHBDRNK;
