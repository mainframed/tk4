 %NOPRINT;
 /*
0*$.HE GENERALIZED SUBROUTINES - @NUMERIC
0*$.HE PLI PREPROCESSOR TEXT
0*$.HE TEST A FIELD FOR NUMERIC CHARACTERS
0*$.PL 58
0*$.PN 0
0*$.PA
0*$.SS
0*$.NF
0*$12/07/81
0*$AUTHOR:  P. DIXON
0*$SOURCE MODULE NAME:  @NUMERIC
0*$DOCUMENTATION ID:  0*$
0*$.FI L
0*$.SP 5
0*$THIS PREPROCESSOR FUNCTION GENERATES A TEST FOR NUMERIC
0*$CHARACTERS ('0' THROUGH '9') IN A CHARACTER FIELD.  BLANKS,
0*$SIGNS, COMMAS, AND DECIMAL POINTS ARE CONSIDERED INVALID.
0*$THE PL/I STATEMENTS
0*$.SP 1
0*$.IN 5
0*$.NF
0*$DCL DATA_FIELD CHARACTER(5);
0*$IF  @NUMERIC(DATA_FIELD,,,,) THEN CALL SUBROUTINE_1;
0*$IF ^@NUMERIC(DATA_FIELD,,,,) THEN CALL SUBROUTINE_2;
0*$.FI L
0*$.SP 1
0*$.IN 0
0*$ARE THE EQUIVALENTS OF THE COBOL STATEMENTS
0*$.IN 5
0*$.SP 1
0*$.NF
0*$77 DATA-FIELD PICTURE 99999 USAGE IS DISPLAY.
0*$IF DATA-FIELD IS     NUMERIC PERFORM SUBROUTINE-1.
0*$IF DATA-FIELD IS NOT NUMERIC PERFORM SUBROUTINE-2.
0*$.FI L
0*$.SP 1
0*$.IN 0
0*$THERE ARE 4 OPTIONAL OPERANDS (2ND THROUGH 5TH).  THE SECOND
0*$AND THIRD OPERANDS CAN BE USED IF THE FIRST OPERAND IS A
0*$VARYING CHARACTER STRING.  THESE OPERANDS ARE THE MINIMUM AND
0*$MAXIMUM ALLOWABLE LENGTH OF THE STRING.  THE LAST TWO OPERANDS
0*$ARE THE MINIMUM AND MAXIMUM ALLOWABLE VALUES FOR THE FIRST
0*$OPERAND.  IF AN OPERAND IS OMITTED, THE CORRESPONDING CHECK IS
0*$NOT MADE.  FOR EXAMPLE, TO CHECK A 4-CHARACTER FIELD FOR
0*$A NONZERO VALUE LESS THAN 2**12 - 1 YOU COULD USE:
0*$.IN 5
0*$.SP 1
0*$.NF
0*$IF @NUMERIC(FIELD,,,'0001','4095') THEN ...
 */
 %PRINT;
 %@NUMERIC: PROC(FIELD,MIN_LENGTH,MAX_LENGTH,MIN_VALUE,MAX_VALUE)
            RETURNS(CHAR);
 DCL (R,FIELD,MIN_LENGTH,MAX_LENGTH,MIN_VALUE,MAX_VALUE) CHAR;
 R = 'VERIFY(' ×× FIELD ×× ',''0123456789'') = 0';
 IF PARMSET(MIN_LENGTH) THEN
    R = R ×× ' & LENGTH(' ×× FIELD ×× ') >= ' ×× MIN_LENGTH;
 IF PARMSET(MAX_LENGTH) THEN
    R = R ×× ' & LENGTH(' ×× FIELD ×× ') <= ' ×× MAX_LENGTH;
 IF PARMSET(MIN_VALUE) THEN
    R = R ×× ' & ' ×× FIELD ×× ' >= ' ×× MIN_VALUE;
 IF PARMSET(MAX_VALUE) THEN
    R = R ×× ' & ' ×× FIELD ×× ' <= ' ×× MAX_VALUE;
 RETURN('(' ×× R ×× ')');
 %END @NUMERIC;
 %ACTIVATE @NUMERIC;
