*****************************************************************$
*
*$.HE GENERALIZED SUBROUTINES - STACK
*$.HE STACK - INTERFACE TO TSO STACK MACRO
*$.PL 55
*$.PN 0
*$.PA
*$.SS
*$.NF
*$5/16/74
*$AUTHOR:  T. SMITH
*$SOURCE MODULE NAME:  U0286
*$DOCUMENTATION ID:  *$
*$.FI L
*$.SP 5
*
*****************************************************************$
*$THIS ROUTINE SUPPLIES THE PLI PROGRAMMER WITH AN INTERFACE TO THE
*$TSO STACK MACRO.  THIS MACRO IS USED TO ESTABLISH AND TO CHANGE THE
*$SOURCE OF INPUT.  THE CURRENTLY ACTIVE INPUT SOURCE IS DESCRIBED
*$BY THE TOP ELEMENT OF THE INPUT STACK, AN INTERNAL PUSHDOWN LIST
*$MAINTAINED BY THE I/O SERVICE ROUTINES.  THE FIRST ELEMENT OF THE
*$INPUT STACK IS INITIALIZED BY THE TERMINAL MONITOR PROGRAM, AND
*$CANNOT THEREAFTER BE CHANGED OR DELETED.  THE TSO-SUPPLIED TMP
*$INITIALIZES THIS FIRST ELEMENT TO INDICATE THE TERMINAL AS THE
*$CURRENT INPU SOURCE.  THE STACK SERVICE ROUTINE ADDS AN ELEMENT
*$TO THE INPUT STACK OR DELETES ONE OR MORE ELEMENTS FROM IT, AND
*$THEREBY CHANGES THE SOURCE OF INPUT FOR THE OTHER I/O SERVICE
*$ROUTINES.
*$.SP 1
*$.NF
*
*$CALL STACK(CPPLUPT,CPPLECT,IOECB,RETCODE,                        *$
*$   'TERM' OR 'SOURCE' OR 'PROCN' OR 'PROCL'
*$    OR 'TOP' OR 'PROC' OR 'ALL',
*$       LSDPTR,
*$       EPPTR;                                                    *$
*$.FI L
*$.SP 1
*
*$NOTE: THE CHARACTER LITERALS ARE MUTUALLY EXCLUSIVE, AND         *$
*$ONLY ONE CAN BE SPECIFIED.
*
*****************************************************************$
*
*$.SP 1
*$.CE 1
*$DEFINITION OF TERMS
*$.SP 1
*
****************************************************************$
*
*$.IN 0
*$'ALL'
*$.IN 5
*$ALL ELEMENTS ARE TO BE DELETED FROM THE INPUT STACK
*$EXCEPT THE BOTTOM ELEMENT (THE FIRST ELEMENT).
*$.IN 0
*$CPPLECT
*$.IN 5
*$POINTER VARIABLE SPCIFYING THE ADDRESS OF THE ENVIRONMENT
*$CONTROL TABLE (ECT).  YOU MAY OBTAIN THIS ADDRESS FROM THE
*$CPPL POINTED TO WHEN A COMMAND PROCESSOR IS ATTACHED BY
*$TERMINAL MONITOR PROGRAM.
*$.IN 0
*$CPPLUPT
*$.IN 5
*$POINTER VARIABLE SPECIFYING THE ADDRESS OF THE USER PROFILE
*$TABLE (UPT).  YOU MAY OBTAIN THIS ADDRESS FROM THE CPPL
*$POINTED TO WHEN A COMMAND PROCESSOR IS ATTACHED BY
*$THE TERMINAL MONITOR PROGRAM.
*$.IN 0
*$EPPTR
*$.IN 5
*$POINTER VARIABLE CONTAINING THE ADDRESS THE COMMAND PROCESSOR
*$ACQUIRED BY PREVIOUSLY CALLING SYSLOAD USING THE NAME
*$IKJSTCK.
*$.IN 0
*$IOECB
*$.IN 5
*$SPECIFIES THE ADDRESS OF AN ECB.  THIS ADDRESS WILL BE
*$PLACED INTO THE IOPL.
*$.IN 0
*$LSDPTR
*$.IN 5
*$POINTER VARIABLE CONTAINING THE ADDRESS OF A LIST SOURCE
*$DESCRIPTOR (LSD).  AN LSD IS A FOUR WORD CONTROL BLOCK WHICH
*$DESCRIBES THE IN-STORAGE LIST POINTED TO BY THE NEW ELEMENT
*$YOU ARE ADDING TO THE INPUT STACK.  LSDPTR SHOULD BE
*$SUPPLIED ONLY IF 'SOURCE', 'PROCN', OR 'PROCL' WAS SPECIFIED.
*$.IN 0
*$'PROC'
*$.IN 5
*$THE CURRENT PROCEDURE ELEMENT IS TO BE DELETED FROM THE
*$INPUT STACK.  IF THE TOP ELEMENT IS NOT A A PROCEDURE
*$ELEMENT, ALL ELEMENTS DOWN TO AND INCLUDING THE FIRST
*$PROCEDURE ELEMENT ENCOUNTERED ARE TO BE DELETED.
*$.IN 0
*$'PROCL'
*$.IN 5
*$THE ELEMENT TO BE ADDED TO THE INPUT STACK IS A COMMAND
*$PROCEDURE AND THE LIST OPTION HAS BEEN SPECIFIED.  EACH
*$LINE READ FROM THE COMMAND PROCEDURE IS WRITTEN TO THE
*$TERMINAL.
*$.IN 0
*$'PROCN'
*$.IN 5
*$THE ELEMENT TO BE ADDED TO THE INPUT STACK IS A COMMAND
*$PROCEDURE AND THE NOLIST OPTION HAS BEEN SPECIFIED.
*$.IN 0
*$RETCODE
*$.IN 5
*$A FIXED BIN(31,0) VARIABLE TO CONTAIN THE RETURN CODE -
*$.IN 10
*$0 - STACK COMPLETED SUCCESSFULLY
*$.IN 10
*$4 - ONE OR MORE PARAMETERS PASSED TO STACK WERE INVALID.
*$.IN 0
*$'SOURCE'
*$.IN 5
*$THE ELEMENT TO BE ADDED TO THE INPUT STACK IS AN IN-STORAGE
*$SOURCE DATA SET.
*$.IN 0
*$'TERM'
*$.IN 5
*$ADD A TERMINAL ELEMENT TO THE INPUT STACK.
*$.IN 0
*$'TOP'
*$.IN 5
*$THE TOPMOST ELEMENT (THE ELEMENT MOST RECENTLY ADDED TO
*$THE INPUT STACK) IS TO BE DELETED.
*
******************************************************************$
STACK PLIENTRY ,DSA=136,COMPILE=&SYSPARM
         XC    STPB(MYLEN),STPB
         LR    11,1
         LM    1,7,0(11)
         SR    8,8
         SR    9,9
LOOP1    DS    0H
         LA    15,LTRTAB(9)
         CLI   0(15),X'FF'             ARE THERE TOO MANY PARMS?
         BC    8,BADFORM               BR IF YES
         IC    8,LTRTAB(9)             GET SET FOR EX
         EX    8,LTR                   TEST FOR LAST PARM
         EX    8,LOAD                  LOAD ACTUAL PARM ADDR
         LA    9,1(9)                  BUMP INDEX
         BC    2,LOOP1
*                                      AT THIS POINT, R9 = # PARMS
         LM    3,4,8(11)               R3 = A(IOECB), R4 = A(RETCODE)
         CH    9,=H'7'                 ARE THERE TOO MANY PARMS?
         BC    2,BADFORM               BR IF YES
         STM   1,3,IOPL                SET A(UPT,ECT,ECB) IN IOPL
         LA    14,STPB
         ST    14,IOPLIOPB
         LA    3,OPTAB
         SR    2,2
LOOP2    DS    0H
         CLI   0(3),X'FF'              IS IT END OT TABLE
         BC    8,BADFORM               BR IF YES
         IC    2,2(3)                  R2 = LEN(KEYWORD) - 1
         EX    2,CLC
         BC    8,ELOOP2                BR IF KEYWORD FOUND
         LA    3,4(2,3)                BYMP R3 TO NEXT OPTAB ENTRY
         B     LOOP2
ELOOP2   DS    0H
         OC    STPB(2),0(3)            SET OPTION FLAGS
         LA    15,5                    SET PARM COUNT CHECK
         TM    STPB,X'80'              ARE WE ADDING AN ELEMENT?
         BC    8,CKENT                 BR IF NOT - IT IS DELETE
         TM    STPB+1,X'80'            WAS 'TERM' SPECIFIED?
         BC    1,CKENT                 BR IF YES, NO LSDPTR SPECIFIED
         LA    15,6                    SET PARM COUNT CHECK
         ST    6,STPBALSD              STORE LSD PTR
CKENT    DS    0H
         LR    14,9                    RE = # PARMS
         LA    1,IOPL                  SET PARM REG
         SR    14,15                   HAVE ALL PARMS BEEN ACCOUNTED?
         BC    8,DOLINK                BR IF YES, NO EPPTR SUPPLIED
         CH    14,=H'1'                TOO MANY PARMS?
         BC    2,BADFORM               BR IF YES
         LA    15,241(15)              RF = X'F6' OR F7
         EX    15,LOADR                RF = ENTRY POINT
         BALR  14,15
         B     SETRET                  GO SET RETCODE
DOLINK   DS    0H
         LINK  EP=IKJSTCK
SETRET   DS 0H
         ST    15,0(4)                 SET RETCODE
EXIT     PLIEXIT
BADFORM  DS    0H
         LA    15,4
         B     SETRET
OPTAB    DS    0C
*                MASK FOR OC INSTRUCTION
*                        LENGTH OPTION NAME - 1
         DC    X'8080',X'03',C'TERM'
         DC    X'8040',X'05',C'SOURCE'
         DC    X'8042',X'04',C'PROCN'
         DC    X'8043',X'04',C'PROCL'
         DC    X'4000',X'02',C'TOP'
         DC    X'2000',X'03',C'PROC' MUST APPEAR AFTER PROCN & PROCL
         DC    X'1000',X'02',C'ALL'
         DC    X'FF' END-OF-TABLE
LTRTAB   DC    X'11223344556677FF'
         DS    0H
LTR      LTR   0,0
LOAD     L     0,0(0)
CLC      CLC   3(0,3),0(5)
LOADR       LR    0,0
         LTORG
DSA      DSECT
STPB     DS    F
STPBALSD DS    F A(LSD) OR ZERO
IOPL     DS    0F
IOPLUPT  DS    F
IOPLECT  DS    F
IOPLECB  DS    F
IOPLIOPB DS    F
MYLEN    EQU   *-STPB
DSALEN   EQU   *-DSA
         END
