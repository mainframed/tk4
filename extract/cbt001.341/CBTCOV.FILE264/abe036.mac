   /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
   /* ABE036 - RELJOIN,RELJ SUBCOMMAND */
   %INCLUDE ABESUB;
 ABESUB(ABE036) PARS(0000000000000000) CHECK(YES);
   %INCLUDE ABESUBA;

   /* RELJ <TABLE-A> <TABLE-B> <TABLE-C> <OFFSET> <LENGTH> */
   /*      1         2         3         4        5        */
   DCL SETCAPS ENTRY;
   DCL PREFIX ENTRY(CHAR(*),CHAR(*))
     RETURNS(FIXED BIN(15,0));
   DCL VSUBSTR ENTRY(CHAR(*) VAR, FIXED BIN(15,0),
     FIXED BIN(15,0),CHAR(*));
   DCL RHP(3) PTR;
   DCL RHN(3) CHAR(8);
   DCL (RHW,SAVPTR,P(2)) PTR;
   DCL SAVPARY(16) CHAR(256) VAR;
   DCL (SC(2),LN(2)) FIXED BIN(15,0);

   LAST=99999999;
   SEQ=-1;
   DO I = 1 TO 3;
     RHN(I)=PARY(I);
     IF RHN(I)=''
       THEN DO;
         MSGDATA='MISSING OPERANDS';
         RHRC=8;
         RETURN;
         END;
     CALL SETCAPS(RHN(I));
     DO RHW=NXTRHEL REPEAT RHW->RHNXT WHILE(RHW^=NULL)
       UNTIL(RHW->RHNAME=RHN(I));
       END;
     IF RHW=NULL
       THEN IF I^=3
         THEN DO;
           MSGDATA='NAME '××RHN(I)××' DOES NOT EXIST';
           RHRC=8;
           RETURN;
           END;
         ELSE DO;
           SAVPTR=RHPTR;
           I=#CMD('SSE',RHPTR,RHHDRPT);
           HEXMODE=RHP(1)->HEXMODE;
           RHTRANSW=RHP(1)->RHTRANSW;
           LOFLAG=RHP(1)->LOFLAG;
           RHNAME=RHN(3);
           RHW=RHPTR;
           RHPTR=SAVPTR;
           END;
     RHP(I)=RHW;
     END;
   OFF=PARY(4);
   LEN=PARY(5);
   DO P(1)=RHP(1)->NXTHDR REPEAT P(1)->NXTPTR WHILE(P(1)^=RHP(1));
     DO P(2)=RHP(2)->NXTHDR REPEAT P(2)->NXTPTR WHILE(P(2)^=RHP(2));
       DO I=1 TO 2;
         IF LENGTH(P(I)->RECSTR)<OFF
           THEN DO;
             SC(I)=1;
             LN(I)=0;
             END;
           ELSE DO;
             SC(I)=OFF;
             LN(I)=MIN(LEN,LENGTH(P(I)->RECSTR)-OFF+1);
             END;
         END;
       IF SUBSTR(P(1)->RECSTR,SC(1),LN(1))=
          SUBSTR(P(2)->RECSTR,SC(2),LN(2))
         THEN DO; /* WE HAVE A MATCH */
           RHP(3)->BUFPTR->BUF=P(1)->RECSTR;
           I=0;
           L2=LENGTH(P(2)->RECSTR);
           DO WHILE(I<=L2);
             J=PREFIX(SUBSTR(P(2)->RECSTR,I+1),' ');
               /* FIND NEXT NONBLANK */
             IF J=0
               THEN LEAVE; /* NO MORE TO OVERLAY */
             J=J+I;
             I=INDEX(SUBSTR(P(2)->RECSTR,J),' '); /* FIND NXT NONBLNK */
             IF I=0
               THEN I=LENGTH(P(2)->RECSTR)-J+1;
               ELSE I=I-1;
             CALL VSUBSTR(RHP(3)->BUFPTR->BUF,J,I,SUBSTR(P(2)->RECSTR,
               J,I));
             I=J+I;
             END;
           CALL #ADD(RHP(3),RHHDRPT,RHP(3)->RECPTR,RHP(3)->RECPTR,
             SEQ,RHP(3)->BUFPTR->BUF,0);
           END;
       END;
     END;
   CALL #RESEQ(RHP(3),RHHDRPT,RHP(3)->NXTHDR,'NOSAVE','NORENUM',LAST);
   RHP(3)->RECPTR=RHP(3)->NXTHDR;
   RHP(3)->CURSEQ=RHP(3)->RECPTR->RECSEQ;
   RHRC=0;
   END ABE036;
