 CADVIEW: PROC(PARM) OPTIONS(MAIN);
 /* SHOULD BE COMPILED WITH -
 PLI 'X75826.JCL.CNTL(CADVIEW)' M LIB('SYS1.GDDMSAM') OBJ(CADVIEW) +
 CS(60)
 ALLOC FI(INCLIB) DA('SYS1.GDDMLOAD') SHR REUSE
 LINK (CADVIEW *) LOAD(TEST(CADVIEW)) LIB('SYS2.PLIBASE') PLIB PR(*)
  INCLUDE INCLIB(ADMASNT)
  (NULL LINE)
 ALLOC FI(IN) DA(CADAM.DRAWING) SHR REUSE
 CALL TEST(CADVIEW)
 */
   DFT RANGE(*) FIXED BIN VALUE(FIXED BIN(31,0));
   DCL PARM CHAR(100) VAR;
   DCL NULL BUILTIN;
   DCL (PREFIX,SUFFIX) ENTRY(CHAR(*),CHAR(*))
     RETURNS(FIXED BIN(15,0));
   DCL 1 EL BASED(ELPTR),
     2 NXT PTR,
     2 CODE CHAR(2),
     2 X DEC FLOAT(6),
     2 Y DEC FLOAT(6);
   DCL 1 EL2 BASED(ELPTR),
     2 NXT2 PTR,
     2 CODE2 CHAR(2),
     2 PEN FIXED BIN(31,0);
   DCL HD PTR;
   DCL CMD CHAR(256) VAR;
   DCL INREC CHAR(256) VAR INIT('');
   DCL EOFSW FIXED BIN INIT(0);
   DCL (XMAX,YMAX) DEC FLOAT(6) INIT(-99999);
   DCL (XMIN,YMIN) DEC FLOAT(6) INIT(99999);

   HD,ELPTR=NULL;
   ON ENDFILE(IN) EOFSW=1;
   DO CMD=NEXT_CMD REPEAT NEXT_CMD WHILE(CMD^='');
     CALL EL_PROC(SUBSTR(CMD,1,2));
     IX=3;
     SELECT(CODE);
       WHEN('NR') CALL VIEW_PROC;
       WHEN('SP') PEN=NEXT_FIXED; /* GET PEN NUMBER */
       WHEN('PU') CALL GETXY;
       WHEN('PD') DO;
         CALL GETXY;
         DO WHILE(IX<LENGTH(CMD));
           CALL EL_PROC('PD');
           CALL GETXY;
           END;
         END;
       END; /* SELECT */
     END;

 EL_PROC: PROC(PCODE);
   DCL PCODE CHAR(2);
   DCL SAVPTR PTR;

   SAVPTR=ELPTR;
   ALLOCATE EL SET(ELPTR);
   IF SAVPTR=NULL
     THEN HD=ELPTR;
     ELSE SAVPTR->NXT=ELPTR;
   NXT=NULL;
   CODE=PCODE;
   END EL_PROC;

 GETXY: PROC;
   X=NEXT_FLOAT;
   Y=NEXT_FLOAT;
   XMAX=MAX(XMAX,X);
   YMAX=MAX(YMAX,Y);
   XMIN=MIN(XMIN,X);
   YMIN=MIN(YMIN,Y);
   END GETXY;

 NEXT_CMD: PROC RETURNS(CHAR(256) VAR);
   DCL CMD CHAR(256) VAR;
   DCL I FIXED BIN;

   DO WHILE(INREC='');
     IF EOFSW=1
       THEN RETURN('');
     READ FILE(IN) INTO(INREC);
     IF INREC^=''
       THEN DO;
         INREC=SUBSTR(INREC,PREFIX(INREC,' ')); /* LEADING BLANKS */
         INREC=SUBSTR(INREC,1,SUFFIX(INREC,' ')); /* TRAILING BLANKS */
         END;
     END;
   I=INDEX(INREC,';'); IF I=0 THEN SIGNAL ERROR;
   CMD=SUBSTR(INREC,1,I-1);
   IF I=LENGTH(INREC)
     THEN INREC='';
     ELSE INREC=SUBSTR(INREC,I+1);
   RETURN(CMD);
   END NEXT_CMD;

 NEXT_FIXED: PROC RETURNS(FIXED BIN(31,0));
   RETURN(NEXT_NUM);
   END NEXT_FIXED;

 NEXT_FLOAT: PROC RETURNS(DEC FLOAT(6));
   RETURN(NEXT_NUM);
   END NEXT_FLOAT;

 NEXT_NUM: PROC RETURNS(CHAR(80) VAR);
   DCL (I,J,K) FIXED BIN;

   DO I=IX+1 REPEAT I+1 WHILE(I<=LENGTH(CMD))
     UNTIL(VERIFY(SUBSTR(CMD,I,1),'0123456789')^=0);
     END;
   J=IX; /* SAVE ORIGINAL IX */
   IF I<=LENGTH(CMD)
     THEN DO IX=I+1 REPEAT IX+1 WHILE(IX<=LENGTH(CMD))
       UNTIL(VERIFY(SUBSTR(CMD,IX,1),'0123456789')=0);
       END;
     ELSE IX=I;
   RETURN(SUBSTR(CMD,J,I-J));
   END NEXT_NUM;

 VIEW_PROC: PROC;
   DCL (TYPE,MOD,COUNT) FIXED BIN(31,0);
   DCL I FIXED BIN;
   DCL FACTOR DEC FLOAT(6) INIT(1.5);
   DCL (XC,XO,XRANGE,XSCR,YC,YO,YRANGE,YSCR) DEC FLOAT(6);
   DCL (SCALE,XDELTA,YDELTA,XNEW,YNEW) DEC FLOAT(6);

   XRANGE,XSCR=(XMAX-XMIN)/2;
   YRANGE,YSCR=(YMAX-YMIN)/2;
   XC,XO=XMAX-XRANGE;
   YC,YO=YMAX-YRANGE;
   CALL FSINIT;
   CALL GSLW(1);
   CALL GSCLP(1); /* TURN ON CLIPPING */
   CALL GSSATI(4,2); /* MAKE SEGMENTS TRANSFORMABLE */
   CALL GSCLR; /* CLEAR GRAPHICS FIELD */
   CALL GSWIN(XMIN,XMAX,YMIN,YMAX);
   CALL GSSEG(1); /* OPEN GRAPHICS SEGMENT */
   DO ELPTR=HD REPEAT NXT WHILE(ELPTR^=NULL);
     SELECT(CODE);
       WHEN('SP') CALL GSCOL(PEN);
       WHEN('PD') CALL GSLINE(X,Y);
       WHEN('PU') CALL GSMOVE(X,Y);
       OTHERWISE;
       END; /* SELECT */
     END;
   CALL GSSCLS; /* CLOSE GRAPHICS SEGMENT */
   CALL GSSORG(1,XO,YO);
   CALL GSILOC(1,0,XC,YC);
   CALL GSENAB(1,1,1);
   CALL GSENAB(2,1,1);
   DO FOREVER=1 REPEAT FOREVER;
     CHOICE=DISPLAY_READ(XNEW,YNEW);
     SCALE=1.0;
     SELECT(CHOICE);
       WHEN(1) SCALE=FACTOR; /* PFK 1 - IN */
       WHEN(2) SCALE=1/FACTOR; /* PFK 2 - OUT */
       WHEN(3) DO;/* PFK 3 - EXIT */
        IF PARM=''
           THEN CALL FSTERM;
         RETURN;
         END;
       WHEN(7)  YNEW=YO+YSCR          ; /* UP */
       WHEN(8)  YNEW=YO-YSCR          ; /* DOWN */
       WHEN(10) XNEW=XO-XSCR          ; /* LEFT */
       WHEN(11) XNEW=XO+XSCR          ; /* RIGHT */
       OTHERWISE;
       END; /* SELECT */
     XDELTA=(XC-XNEW);
     YDELTA=(YC-YNEW);
     IF XDELTA^=0 × YDELTA^=0
       THEN DO;
         CALL GSSAGA(1,1,1,0,1,1,0,XDELTA,YDELTA,1);
         CALL GSENAB(2,1,0); /* DISABLE */
         CALL GSENAB(2,1,1); /* ENABLE LOCATOR DEVICE */
         END;
     IF SCALE^=1.0
       THEN DO;
         CALL GSSAGA(1,SCALE,SCALE,0,1,1,0,0,0,1);
         XRANGE=XRANGE*SCALE;
         YRANGE=YRANGE*SCALE;
         END;
     END;

   END VIEW_PROC;

 DISPLAY_READ: PROC(X,Y) RETURNS(FIXED BIN(31,0));
   DCL CHOICE FIXED BIN;
   DCL (X,Y) DEC FLOAT(6);
   DCL (I,TYPE,DEVID) FIXED BIN;

   CHOICE=0;
   CALL GSREAD(1,TYPE,DEVID);
   DO UNTIL(TYPE=0);
     SELECT(TYPE);
       WHEN(1) CALL GSQCHO(CHOICE); /* IT IS CHOICE */
       WHEN(2) CALL GSQLOC(1,X,Y); /* IT IS LOCATOR */
       END; /* SELECT */
     CALL GSREAD(0,TYPE,DEVID);
     END;
   RETURN(CHOICE);
   END DISPLAY_READ;

   %INCLUDE ADMUPINA;
   %INCLUDE ADMUPINF;
   %INCLUDE ADMUPING;
   END CADVIEW;
