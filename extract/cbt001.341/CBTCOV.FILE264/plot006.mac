 /* PLOT006 - SCATTER,SCAT,SC,PLOT SUBCOMMAND */
         % DCL @PROCNAME CHAR;
         % @PROCNAME = 'PLOT006';
         % INCLUDE PLOTSUB;
         DFT RANGE(*) FIXED BIN VALUE(FIXED BIN(31,0));
         ON ERROR STOP; /* FOR TESTING ONLY */
         DCL 1 PLOTSTR UNALIGNED,
              2 MAT(0:23,0:23) FIXED BIN(15,0) INIT((576)0),
              2 ARY(2),
               3 COEF FIXED BIN(31,0) INIT((2)0),
               3 PIX FIXED BIN(31,0),
               3 PHDR CHAR(78);
         DCL CONV(2) FIXED BIN(15,0) INIT(0,0);
         DCL PPTR(2) PTR;
         DCL LSQRSW BIT(1) INIT('0'B);
         DCL PLOPCODE(2) CHAR(4) VAR INIT((2)(1)'INIT');
         DCL FX FIXED BIN(15,0);
         DCL PREFIX ENTRY(CHAR(*),CHAR(*))
           RETURNS(FIXED BIN(15,0));
         DCL GREGJUL ENTRY(CHAR(6)) RETURNS(FIXED DEC(5,0));
         DCL (SLOPE,INTERCEPT,CORRELATION) BIN FLOAT(53);
         DCL LODTE FIXED DEC(5,0) INIT(0);
         DCL HIDTE FIXED DEC(5,0) INIT(99999);
         DCL HOURSTR BIT(24) INIT('0'B);
         DCL GT(2) FIXED BIN(31,0) INIT((2)0);
         DCL DOWSTR BIT(8) INIT('0'B);
         DCL DOW ENTRY(FIXED DEC(5,0))
           RETURNS(FIXED BIN(15,0));
         DCL POLYVAL FIXED BIN(15,0) INIT(0);
         DCL 1 POLYSTR UNALIGNED BASED(POLYPTR),
              2 POLYDIM FIXED BIN(15,0),
              2 POLYARY(POLYVAL REFER(POLYDIM)) BIN FLOAT(53);
         DCL AVGSW BIT(1) INIT('0'B);
         DCL KEYLAB(0:19) LABEL;
         DCL KEYTAB(18) CHAR(20) VAR STATIC INIT(
           'SUN','MON','TUE','WED','THU','FRI','SAT',
           'LODTE','HIDTE','XCOEF','YCOEF','LSQR','CONVERSE','POLY',
           'PRIMETIME','GTY','GTX','AVERAGE');
         DCL KEYVAL CHAR(80) VAR;
         DCL KEYINDX FIXED BIN(15,0);
         DO I = 4 TO 16 WHILE(PARY(I) ^= ' ');
              IF VERIFY(PARY(I),'0123456789 ')=0
                   THEN GO TO KEYLAB(19);
              CALL SUBENT(8)(PARY(I),KEYTAB,KEYVAL,KEYINDX);
                   /* CALL SPARS */
              GO TO KEYLAB(KEYINDX);
 KEYLAB(0):  /* BAD OPERAND */
              DISPLAY(2) = 'BAD OPERAND';
              RETURN;
 KEYLAB(1): /* SUN */
 KEYLAB(2): /* MON */
 KEYLAB(3): /* TUE */
 KEYLAB(4): /* WED */
 KEYLAB(5): /* THU */
 KEYLAB(6): /* FRI */
 KEYLAB(7): /* SAT */
              SUBSTR(DOWSTR,KEYINDX,1) = '1'B;
              GO TO ENDCASE;
 KEYLAB(8): /* LODTE */
              IF LENGTH(KEYVAL) = 6
                   THEN LODTE = GREGJUL(KEYVAL);
                   ELSE LODTE = KEYVAL;
              GO TO ENDCASE;
 KEYLAB(9): /* HIDTE */
              IF LENGTH(KEYVAL) = 6
                   THEN HIDTE = GREGJUL(KEYVAL);
                   ELSE HIDTE = KEYVAL;
              GO TO ENDCASE;
 KEYLAB(10): /* XCOEF */
              COEF(1) = KEYVAL;
              GO TO ENDCASE;
 KEYLAB(11): /* YCOEF */
              COEF(2) = KEYVAL;
              GO TO ENDCASE;
 KEYLAB(12): /* LSQR */
              LSQRSW = '1'B;
              GO TO ENDCASE;
 KEYLAB(13): /* CONVERSE */
         IF KEYVAL = 'X'
              THEN CONV(1) = 23;
              ELSE CONV(2) = 23;
         GO TO ENDCASE;
 KEYLAB(14): /* POLY */
         IF KEYVAL = ''
              THEN POLYVAL = 2;
              ELSE POLYVAL = KEYVAL;
         POLYVAL = POLYVAL + 1;
         GO TO ENDCASE;
 KEYLAB(15):  /* PRIMETIME */
         SUBSTR(DOWSTR,2,5) = '11111'B;
              /* SET MON TUE WED THU FRI */
         SUBSTR(HOURSTR,9,8) = '11111111'B;
              /* SET 8:00 A.M. THRU 4:00 P.M. */
         GO TO ENDCASE;
 KEYLAB(16):  /* GTY */
         GT(2) = KEYVAL;
         GO TO ENDCASE;
 KEYLAB(17):  /* GTX */
         GT(1) = KEYVAL;
         GO TO ENDCASE;
 KEYLAB(18):  /* AVERAGE */
         AVGSW = '1'B;
         GO TO ENDCASE;
 KEYLAB(19):  /* HOUR */
         K = PARY(I);
         IF K < 0 × K > 24
              THEN GO TO KEYLAB(0);
         SUBSTR(HOURSTR,K+1,1) = '1'B;
         GO TO ENDCASE;
 ENDCASE: ;
              END;
         IF DOWSTR = '0'B
              THEN DOWSTR = '11111110'B;
         IF HOURSTR = '0'B
              THEN HOURSTR = (24)'1'B;
         PIX(1) = PARY(2); /* SET X INDEX */
         PIX(2) = PARY(3); /* SET Y INDEX */
         PPTR(*) = NULL;
         CALL SETBUF(1); /* GO PRIME BUFFERS */
         CALL SETBUF(2);
         DO WHILE(PPTR(1)^=NULL & PPTR(2)^=NULL);
              IF PPTR(1)->DTE = PPTR(2)->DTE
                   THEN DO;
                        CALL SGRPH; /* GO UPDATE SCATTER PLOT */
                        CALL SETBUF(1); /* GO REPRIME BUFFERS */
                        CALL SETBUF(2);
                        END;
                   ELSE IF PPTR(1)->DTE < PPTR(2)->DTE
                        THEN CALL SETBUF(1); /* GO REPRIME FILE(1) */
                        ELSE CALL SETBUF(2); /* GO REPRIME FILE(2) */
              END;
         DO FX = 1 TO 2;
              IF PPTR(FX) ^= NULL
                   THEN DO;
                        PLOPCODE(FX) = 'EOF';
                        CALL SUBENT(1)(PLOPCODE(FX),FX,PPTR(FX));
                             /* CALL READIN */
                        PPTR(FX) = NULL;
                        END;
              END;
         CALL CRTGRPH;
 /* SETBUF - FINDS NEXT RECORD WHICH IS ELIGIBLE */
 SETBUF:  PROC(RX);
         DCL RX FIXED BIN(15,0);
 LUP:    DO UNTIL((PPTR(RX)->INDX=PIX(RX)) &
           (PPTR(RX)->DTE>=LODTE) &
           (SUBSTR(DOWSTR,DOW(PPTR(RX)->DTE),1)));
              CALL SUBENT(1)(PLOPCODE(RX),RX,PPTR(RX));
                   /* CALL READIN */
              PLOPCODE(RX) = 'NXT';
              IF PPTR(RX) = NULL
                   THEN LEAVE LUP;
              END;
         IF PPTR(RX) ^= NULL
              THEN IF PPTR(RX)->DTE > HIDTE
                   THEN DO;
                        PLOPCODE(RX) = 'EOF';
                        CALL SUBENT(1)(PLOPCODE(RX),RX,PPTR(RX));
                             /* CALL READIN */
                        PLOPCODE(RX) = 'INIT';
                        PPTR(RX) = NULL;
                        END;
         END SETBUF;
 CRTGRPH: PROC;
         DCL FOOTLINE CHAR(78) STATIC INIT(
 '   00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 2
 2 23');
         DCL (I,J,K,X,Y,DN) FIXED;
         DCL IPIC PIC'99';
         DCL REGPIC PIC'S,SSS,SS9V.999',
             REGSTR CHAR(13) DEF REGPIC;
         DCL XPIC PIC'9';
         DCL EXPL CHAR(78) VAR;
         DCL PMAT(0:23,0:23) BIN FLOAT(53);
         DCL TRTAB CHAR(11) STATIC INIT(' 123456789*');
         DCL XY(2) CHAR(1) STATIC INIT('X','Y');
         DCL (FX,FY,XCF,YCF) BIN FLOAT(53);
         IF AVGSW
           THEN DO;
             DO X = 0 TO 23;
               T = 0;
               K = 0;
               DO Y = 0 TO 23;
                 T = T + Y*MAT(Y,X);
                 K = K + MAT(Y,X);
                 MAT(Y,X) = 0;
                 END;
               IF K = 0
                 THEN T = 0;
                 ELSE T = (T+K/2)/K;
               IF T >= 0 & T <= 23
                 THEN MAT(T,X) = 1;
               END;
             END;
         DO Y = 20 TO 0 BY -1;
              DO X = 0 TO 23;
                   K = MAT(Y,X);
                   IF K > 10
                        THEN K = 10;
                   K = K + 1;
                   SUBSTR(DISPLAY(23-Y),(3*X)+4,1)=SUBSTR(TRTAB,K,1);
                   IPIC = Y;
                   SUBSTR(DISPLAY(23-Y),1,2) = IPIC;
                   END;
              END;
         DO I = 1 TO 2;
              IF CONV(I) = 0
                   THEN DISPLAY(I) = PHDR(I);
                   ELSE DISPLAY(I) = 'CONVERSE OF '××PHDR(I);
              PUT STRING(SUBSTR(DISPLAY(I),60,18))
                EDIT(XY(I),', 1 = ',COEF(I))(A,A,P'ZZZ,ZZZ,ZZ9');
              END;
         DISPLAY(24) = FOOTLINE;
         DN = 3;
         IF LSQRSW
           THEN DO;
              DN = 4;
             PMAT = MAT;
             CALL SUBENT(9)(PMAT,SLOPE,INTERCEPT,CORRELATION);
                   /* CALL LSQR */
             DO FX = 0 TO 23;
               FY = SLOPE*FX + INTERCEPT;
               IF (FY > 0) & (FY < 19)
                 THEN DO;
                   FY = 23 - FY;
                   SUBSTR(DISPLAY(FY),((FX+1)*3)+4,1) = '@';
                   END;
               END;
             XCF = COEF(1);
             YCF = COEF(2);
 /* FOLLOWING TWO STATEMENTS MADE COMMENTS TO MAKE COEFFICIENTS
    CONSISTENT WITH THOSE IN POLYNOMIAL REGRESSION. */
 /*          SLOPE=SLOPE*YCF/XCF;
             INTERCEPT=INTERCEPT*YCF;
 */          PUT STRING(DISPLAY(3)) EDIT('SLOPE =',SLOPE,
               'INTERCEPT =',INTERCEPT,'CORRELATION =',CORRELATION)
               (A,P'--,---,--9V.999',X(1),
                A,P'--,---,--9V.999',X(1),
                A,P'--,---,--9V.999');
             END;
         IF POLYVAL ^= 0
              THEN DO;
                   ALLOCATE POLYSTR;
                   CALL REGRESS(MAT,POLYARY);
                   EXPL = 'Y = ';
                   DO I = POLYVAL TO 1 BY -1;
                        XPIC = I-1;
                        REGPIC = POLYARY(I);
                        EXPL=EXPL××SUBSTR(REGSTR,PREFIX(REGSTR,' '))××
                          '*X**'××XPIC;
                        END;
                   DISPLAY(DN) = EXPL;
                   DO FX = 0 TO 23;
                        FY = 0;
                        DO I = POLYVAL TO 1 BY -1;
                             SELECT(I-1);
                               WHEN(0) FY = FY + POLYARY(I);
                               WHEN(1) FY = FY + POLYARY(I)*FX;
                               OTHERWISE FY = FY + POLYARY(I)*FX**(I-1);
                               END;
                             END;
                        IF (FY > 0) & (FY < (22-DN))
                             THEN DO;
                                  FY = 23-FY;
                                  SUBSTR(DISPLAY(FY),(FX+1)*3+4,1)='#';
                                  END;
                        END;
                   FREE POLYSTR;
                   END;
         END CRTGRPH;
 /* SGRPH - UPDATE SCATTER PLOT */
 SGRPH:  PROC;
         DCL (X,Y,I,J,K,IX(2)) FIXED;
         DO I = 1 TO 2;
              PHDR(I) = PPTR(I)->HDR;
              IF COEF(I) = 0
                   THEN DO;
                        DO J = 0 TO 23;
                             IF PPTR(I)->ARRAY(J) > COEF(I)
                                  THEN COEF(I)=PPTR(I)->ARRAY(J);
                             END;
                        PHDR(I) = PPTR(I)->HDR;
                        COEF(I) = COEF(I)/24;
                        IF COEF(I) = 0
                             THEN COEF(I) = 1;
                        END;
              END;
         DO J = 0 TO 23;
          IF SUBSTR(HOURSTR,J+1,1)
           THEN IF (PPTR(1)->ARRAY(J)-GT(1)) >= 0
            & (PPTR(2)->ARRAY(J)-GT(2)) >= 0
             THEN DO;
              DO K = 1 TO 2;
                   IX(K) = (PPTR(K)->ARRAY(J)-GT(K))/COEF(K);
                   IF IX(K) > 0
                        THEN IX(K) = IX(K)-1;
                   IF IX(K) > 23
                        THEN RETURN;
                   IX(K) = IX(K) - CONV(K);
                   IF IX(K) < 0
                        THEN IX(K) = -IX(K);
                   END;
              X = IX(1);
              Y = IX(2);
              MAT(Y,X) = MAT(Y,X) + 1;
              END;
          END;
         END SGRPH;
         END PLOT006;
