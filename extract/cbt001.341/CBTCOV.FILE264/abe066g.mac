 /* COPYRIGHT 1985 BY THOMAS GLEN SMITH */
 /**********************************************************************
 *                                                                     *
 * CALLED TO DO THE ACTUAL INVOCATION OF THE GDDM SUBROUTINE.          *
 *                                                                     *
 **********************************************************************/
 ABE066G: PROC(PARM_COUNT,SUBRTNE,PRY);
   DCL PARM_COUNT FIXED BIN(15,0);
   DCL SUBRTNE ENTRY VARIABLE;
   DCL PRY(*) PTR;

   DCL P FIXED BIN(31,0) BASED(PPTR);
   DCL AMODE ENTRY(FIXED BIN(15,0));

   CALL AMODE(31); /* GO INTO 31-BIT ADDRESSING */
   SELECT(PARM_COUNT);
     WHEN(00) CALL SUBRTNE;
     WHEN(01) CALL SUBRTNE(
       PRY(01)->P);
     WHEN(02) CALL SUBRTNE(
       PRY(01)->P,
       PRY(02)->P);
     WHEN(03) CALL SUBRTNE(
       PRY(01)->P,
       PRY(02)->P,
       PRY(03)->P);
     WHEN(04) CALL SUBRTNE(
       PRY(01)->P,
       PRY(02)->P,
       PRY(03)->P,
       PRY(04)->P);
     WHEN(05) CALL SUBRTNE(
       PRY(01)->P,
       PRY(02)->P,
       PRY(03)->P,
       PRY(04)->P,
       PRY(05)->P);
     WHEN(06) CALL SUBRTNE(
       PRY(01)->P,
       PRY(02)->P,
       PRY(03)->P,
       PRY(04)->P,
       PRY(05)->P,
       PRY(06)->P);
     WHEN(07) CALL SUBRTNE(
       PRY(01)->P,
       PRY(02)->P,
       PRY(03)->P,
       PRY(04)->P,
       PRY(05)->P,
       PRY(06)->P,
       PRY(07)->P);
     WHEN(08) CALL SUBRTNE(
       PRY(01)->P,
       PRY(02)->P,
       PRY(03)->P,
       PRY(04)->P,
       PRY(05)->P,
       PRY(06)->P,
       PRY(07)->P,
       PRY(08)->P);
     WHEN(09) CALL SUBRTNE(
       PRY(01)->P,
       PRY(02)->P,
       PRY(03)->P,
       PRY(04)->P,
       PRY(05)->P,
       PRY(06)->P,
       PRY(07)->P,
       PRY(08)->P,
       PRY(09)->P);
     WHEN(10) CALL SUBRTNE(
       PRY(01)->P,
       PRY(02)->P,
       PRY(03)->P,
       PRY(04)->P,
       PRY(05)->P,
       PRY(06)->P,
       PRY(07)->P,
       PRY(08)->P,
       PRY(09)->P,
       PRY(10)->P);
     WHEN(11) CALL SUBRTNE(
       PRY(01)->P,
       PRY(02)->P,
       PRY(03)->P,
       PRY(04)->P,
       PRY(05)->P,
       PRY(06)->P,
       PRY(07)->P,
       PRY(08)->P,
       PRY(09)->P,
       PRY(10)->P,
       PRY(11)->P);
     WHEN(12) CALL SUBRTNE(
       PRY(01)->P,
       PRY(02)->P,
       PRY(03)->P,
       PRY(04)->P,
       PRY(05)->P,
       PRY(06)->P,
       PRY(07)->P,
       PRY(08)->P,
       PRY(09)->P,
       PRY(10)->P,
       PRY(11)->P,
       PRY(12)->P);
     WHEN(13) CALL SUBRTNE(
       PRY(01)->P,
       PRY(02)->P,
       PRY(03)->P,
       PRY(04)->P,
       PRY(05)->P,
       PRY(06)->P,
       PRY(07)->P,
       PRY(08)->P,
       PRY(09)->P,
       PRY(10)->P,
       PRY(11)->P,
       PRY(12)->P,
       PRY(13)->P);
     WHEN(14) CALL SUBRTNE(
       PRY(01)->P,
       PRY(02)->P,
       PRY(03)->P,
       PRY(04)->P,
       PRY(05)->P,
       PRY(06)->P,
       PRY(07)->P,
       PRY(08)->P,
       PRY(09)->P,
       PRY(10)->P,
       PRY(11)->P,
       PRY(12)->P,
       PRY(13)->P,
       PRY(14)->P);
     WHEN(15) CALL SUBRTNE(
       PRY(01)->P,
       PRY(02)->P,
       PRY(03)->P,
       PRY(04)->P,
       PRY(05)->P,
       PRY(06)->P,
       PRY(07)->P,
       PRY(08)->P,
       PRY(09)->P,
       PRY(10)->P,
       PRY(11)->P,
       PRY(12)->P,
       PRY(13)->P,
       PRY(14)->P,
       PRY(15)->P);
     WHEN(16) CALL SUBRTNE(
       PRY(01)->P,
       PRY(02)->P,
       PRY(03)->P,
       PRY(04)->P,
       PRY(05)->P,
       PRY(06)->P,
       PRY(07)->P,
       PRY(08)->P,
       PRY(09)->P,
       PRY(10)->P,
       PRY(11)->P,
       PRY(12)->P,
       PRY(13)->P,
       PRY(14)->P,
       PRY(15)->P,
       PRY(16)->P);
     WHEN(17) CALL SUBRTNE(
       PRY(01)->P,
       PRY(02)->P,
       PRY(03)->P,
       PRY(04)->P,
       PRY(05)->P,
       PRY(06)->P,
       PRY(07)->P,
       PRY(08)->P,
       PRY(09)->P,
       PRY(10)->P,
       PRY(11)->P,
       PRY(12)->P,
       PRY(13)->P,
       PRY(14)->P,
       PRY(15)->P,
       PRY(16)->P,
       PRY(17)->P);
     WHEN(18) CALL SUBRTNE(
       PRY(01)->P,
       PRY(02)->P,
       PRY(03)->P,
       PRY(04)->P,
       PRY(05)->P,
       PRY(06)->P,
       PRY(07)->P,
       PRY(08)->P,
       PRY(09)->P,
       PRY(10)->P,
       PRY(11)->P,
       PRY(12)->P,
       PRY(13)->P,
       PRY(14)->P,
       PRY(15)->P,
       PRY(16)->P,
       PRY(17)->P,
       PRY(18)->P);
     WHEN(19) CALL SUBRTNE(
       PRY(01)->P,
       PRY(02)->P,
       PRY(03)->P,
       PRY(04)->P,
       PRY(05)->P,
       PRY(06)->P,
       PRY(07)->P,
       PRY(08)->P,
       PRY(09)->P,
       PRY(10)->P,
       PRY(11)->P,
       PRY(12)->P,
       PRY(13)->P,
       PRY(14)->P,
       PRY(15)->P,
       PRY(16)->P,
       PRY(17)->P,
       PRY(18)->P,
       PRY(19)->P);
     WHEN(20) CALL SUBRTNE(
       PRY(01)->P,
       PRY(02)->P,
       PRY(03)->P,
       PRY(04)->P,
       PRY(05)->P,
       PRY(06)->P,
       PRY(07)->P,
       PRY(08)->P,
       PRY(09)->P,
       PRY(10)->P,
       PRY(11)->P,
       PRY(12)->P,
       PRY(13)->P,
       PRY(14)->P,
       PRY(15)->P,
       PRY(16)->P,
       PRY(17)->P,
       PRY(18)->P,
       PRY(19)->P,
       PRY(20)->P);
     OTHERWISE SIGNAL CONDITION(BADPLOT);
     END; /* SELECT */
   CALL AMODE(24); /* GO INTO 24-BIT ADDRESSING */
   END ABE066G;
