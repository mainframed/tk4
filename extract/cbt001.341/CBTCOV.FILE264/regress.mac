 /* REGRESS */
 /*
0*$.HE GENERALIZED SUBROUTINES - REGRESS
0*$.HE MULTIPLE REGRESSION ANALYSIS
0*$.PL 55
0*$.PN 0
0*$.PA
0*$.SS
0*$.NF
0*$07/10/78
0*$AUTHOR:  P. DIXON, T. SMITH
0*$SOURCE MODULE NAME:  REGRESS
0*$DOCUMENTATION ID:  0*$
0*$.FI L
0*$.SP 5
0*$THE REGRESS SUBROUTINE CAN BE USED TO COMPUTE THE COEFFICIENTS
0*$FOR A POLYNOMIAL EQUATION WHICH BEST FITS (LEAST SQUARES VALUE)
0*$AN ARRAY OF POINTS.
0*$.SP 1
0*$CALL FORMAT IS AS FOLLOWS:
0*$.SP 1
0*$.IN 5
0*$CALL REGRESS(A,C);
0*$.IN 0
0*$.SP 1
0*$WHERE "A" IS A TWO-DIMENSIONAL ARRAY DECLARED
0*$A(0:Y,0:X) FIXED BIN(15,0).
0*$EACH ELEMENT IN ARRAY "A" IS A BUCKET CONTAINING THE NUMBER OF
0*$POINTS HAVING COORDINATES A(Y,X).
0*$.SP 1
0*$"C" IS A ONE-DIMENSIONAL ARRAY IN WHICH THE REGRESSION COEFFICIENTS
0*$WILL BE RETURNED.  IT MUST BE DECLARED BIN FLOAT(53).
0*$THE DEGREE OF THE POLYNOMIAL EQUATION IS
0*$DETERMINED BY THE EXTENT OF THIS ARRAY.  FOR EXAMPLE, IF "C"
0*$IS DECLARED "C(3)", COEFFICIENTS FOR A QUADRATIC EQUATION
0*$ARE RETURNED (C(3)*X**2 + C(2)*X**1 + C(1)*X**0).
 */
 REGRESS:  PROC(A,C);
         DFT RANGE(*) BIN FLOAT VALUE(BIN FLOAT(53));
         DCL A(*,*) FIXED BIN(15,0); /* SCATTER PLOT */
         DCL C(*); /* ARRAY TO CONTAIN REGRESSION COEFFICIENTS */
         DCL (I,J,K) FIXED;
         DCL (HBOUND,LBOUND,DIM,SUM) BUILTIN;
         DCL (#X,#F,CL) STATIC FIXED BINARY(15);
         DCL (X,Y) FIXED;
         #X = SUM(A);
         #F = DIM(C,1);
         CL = LBOUND(C,1)-1;
 BEGIN;
         DEFAULT DESCRIPTORS FLOAT BINARY VALUE(FLOAT BINARY(53));
         DCL MATMULT EXTERNAL ENTRY( (*,*), (*,*), (*,*) );
         DCL INVERSE EXTERNAL ENTRY( (*,*), (*,*),BIN FLOAT(53) );
         DCL XX(#X,#F)     /* FUNCTIONAL X VALUES */;
         DCL XT(#F,#X)     /* TRANSPOSE OF XX */;
         DCL XTX(#F,#F)    /* XT * XX */;
         DCL XTY(#F,1)     /* XT * Y */;
         DCL $Y(#X,1)      /* Y TRANSPOSE */;
         DCL $C(#F,1)      /* C TRANSPOSE */;
         DCL XTXI(#F,#F)   /* XTX INVERSE */;
         DCL (I,J,K,X,Y) STATIC FIXED BINARY(31,0);
         DCL WF FLOAT;
         DO I = 0 TO #F-1;
           J = 1;
           DO Y = 0 TO HBOUND(A,1);
             DO X = 0 TO HBOUND(A,2);
               IF A(Y,X) ^= 0
                 THEN DO;
                   SELECT(I);
                     WHEN(0) WF = 1;
                     WHEN(1) WF = X;
                     OTHERWISE WF = X**(I);
                     END;
                   DO J = J TO J+A(Y,X)-1;
                     XT(I+1,J),XX(J,I+1) = WF;
                     IF I = 0
                       THEN $Y(J,1) = Y;
                     END;
                   END;
               END;
             END;
           END;
         CALL MATMULT(XT,XX,XTX)    /* XTX = XT * XX */;
         CALL INVERSE(XTX,XTXI,DET)    /* XTXI = INVERSE(XT * XX) */;
         IF DET = 0
              THEN SIGNAL ERROR;
         CALL MATMULT(XT,$Y,XTY)  /* XTY = XT * Y */;
         CALL MATMULT(XTXI,XTY,$C) /* $C = INVERSE(XT * XX) * XT * Y*/;
         DO I = 1 TO #F;
           C(I+CL) = $C(I,1);
           END;
         END /* BEGIN */;
         END REGRESS;
