 /* STRPARS */
 /*
0*$.HE GENERALIZED SUBROUTINES - STRPARS
0*$.HE STRING PARSING SUBRTNE
0*$.PL 55
0*$.PN 0
0*$.PA
0*$.SS
0*$.NF
0*$09/20/79
0*$AUTHOR:  T. SMITH
0*$SOURCE MODULE NAME:  STRPARS
0*$DOCUMENTATION ID:  0*$
0*$.FI L
0*$.SP 5
0*$THIS SUBROUTINE PARSES A DATA BUFFER.
0*$CALL FORMAT IS AS FOLLOWS:
0*$.SP 1
0*$.IN 5
0*$.NF
0*$DCL STRPARS ENTRY(CHAR(*) VAR,
0*$  FIXED BIN(15,0), CHAR(0),
0*$  CHAR(*) VAR);
0*$DCL DATABUF CHAR(80) VAR INIT(
0*$  'HI*GEORGE*');
0*$DCL OFF FIXED BIN(15,0) INIT(1);
0*$DCL RECORD CHAR(80) VAR;
0*$CALL STRPARS(DATABUF,OFF,'*',RECORD);
0*$** OFF = 3
0*$** RECORD = 'HI'
0*$CALL STRPARS(DATABUF,OFF,'*',RECORD);
0*$** OFF = 10
0*$** RECORD = 'GEORGE';
0*$CALL STRPARS(DATABUF,OFF,'*',RECORD);
0*$** OFF = 11
0*$** RECORD = '';
 */
 STRPARS:  PROC(DATABUF,OFF,DELIM,RECORD) OPTIONS(REENTRANT);
         DCL (DATABUF,RECORD) CHAR(*) VAR;
         DCL DELIM CHAR(1);
         DCL OFF FIXED BIN(15,0);
         IF OFF >= LENGTH(DATABUF)
           THEN DO;
             RECORD = '';
             OFF = LENGTH(DATABUF)+1;
             RETURN;
             END;
         I = INDEX(SUBSTR(DATABUF,OFF+1),DELIM);
         IF I = 0
           THEN I = LENGTH(DATABUF)+1;
           ELSE I = I+OFF;
         RECORD = SUBSTR(DATABUF,OFF+1,I-OFF-1);
         OFF = I;
         END;
