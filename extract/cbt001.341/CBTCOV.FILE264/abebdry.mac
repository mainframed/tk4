   %INCLUDE ABESUB;
 ABESUB(ABEBDRY) PARS(00000000) CHECK(YES);
   %INCLUDE ABESUBA;

   DCL SETCAPS ENTRY;
   DCL CALCPRT ENTRY(DEC FLOAT(16))
     RETURNS(CHAR(80) VAR);

   DCL 1 PICSTR,
     2 XCORNER DEC FLOAT(16), /* REAL PART OF THE IMAGINARY NUMBER IN
         THE LOWER LEFT CORNER OF THE AREA IN THE COMPLEX NUMBER PLANE
         TO BE EXAMINED. */
     2 YCORNER DEC FLOAT(16), /* IMAGINARY PART OF THE IMAGINARY NUMBER
         IN THE LOWER LEFT CORNER OF THE AREA IN THE COMPLEX NUMBER
         PLANE TO BE EXAMINED. */
     2 GAP DEC FLOAT(16), /* DISTANCE IN COMPLEX PLANE BETWEEN PIXELS */
     2 XDONE FIXED BIN(15,0), /* NUMBER OF ROWS PROCESSED */
     2 YDONE FIXED BIN(15,0), /* NUMBER OF COLUMNS PROCESSED */
     2 XDIM FIXED BIN(15,0),
     2 YDIM FIXED BIN(15,0);

   DCL KEYTABLE(12) CHAR(5) VAR STATIC INIT(
     'M',       /* 1 - NUMBER OF ROWS IN BUCKET MATRIX */
     'N',       /* 2 - NUMBER OF COLUMNS IN BUCKET MATRIX */
     'AC',      /* 3 - ASSIGNED TO XCORNER */
     'BC',      /* 4 - ASSIGNED TO YCORNER */
     'S',       /* 5 - REAL PART INTERVAL MAPPED ONTO MATRIX */
     'XPPI',    /* 6 - PELS PER INCH X AXIS */
     'YPPI',    /* 7 - PELS PER INCH Y AXIS */
     'BROT',    /* 8 - USE MANDERBROT ALGORITHM */
     'TENDRIL', /* 9 - USE TENDRIL ALGORITHM */
     'UR',      /*10 - TENDRIL U REAL PART */
     'UI',      /*11 - TENDRIL U IMAGINARY PART */
     'ITER'     /*12 - TENDRIL ITERATIONS */
     );
   DCL INDX FIXED BIN(15,0);
   DCL OPER CHAR(80) VAR;
   DCL (AC,BC,S,UR,UI) DEC FLOAT(16);
   DCL CMD CHAR(256) VAR;

   /* FIRST SET DEFAULT VALUES */
   M=400;
   N=400;
   AC=-2.0;
   BC=-1.25;
   S=2.5;
   XPPI,YPPI=240;
   BROTSW=1;
   TENDRILSW=0;
   UR,UI=.35;
   ITER=100;

   /* NOW PARSE ANY OVERRIDES */
   DO I=1 TO HBOUND(PARY,1) WHILE(PARY(I)^='');
     CALL SETCAPS(PARY(I));
     CALL #SPARS(PARY(I),KEYTABLE,OPER,INDX);
     SELECT(INDX);
       WHEN(1) M=OPER;
       WHEN(2) N=OPER;
       WHEN(3) AC=OPER;
       WHEN(4) BC=OPER;
       WHEN(5) S=OPER;
       WHEN(6) XPPI=OPER;
       WHEN(7) XPPI=OPER;
       WHEN(8) DO; BROTSW=1; TENDRILSW=0; END;
       WHEN(9) DO; TENDRILSW=1; BROTSW=0; END;
       WHEN(10) UR=OPER;
       WHEN(11) UI=OPER;
       WHEN(12) ITER=OPER;
       OTHERWISE DO;
         MSGDATA='INVALID OPERAND='××PARY(I);
         RHRC=8;
         RETURN;
         END;
       END; /* SELECT */
     END;

   /* ALLOCATE MATRIX */
   XDIM=M;
   YDIM=N;
   XCORNER=AC;
   YCORNER=BC;
   GAP=S/M; /* DISTANCE BETWEEN ADJACENT PIXELS */
   XDONE,YDONE=0;
   PUT STRING(CMD) EDIT('GR DEVICE ',XPPI,YPPI,M,N,' 1')
     (A,F(6),X(1),F(6),X(1),F(6),A);
   I=#CMD(CMD,RHPTR,RHHDRPT);

   IF BROTSW=1
     THEN CALL DO_IMAGE_BROT;
     ELSE CALL DO_IMAGE_TENDRIL;

 DO_IMAGE_BROT: PROC;
   DCL PEL CHAR(1) STATIC INIT('1');
   DCL (COUNT,I,J,K,X,Y) FIXED BIN;
   DCL CMD CHAR(256) VAR;
   DCL (AC,AZ,BC,BZ,TMP) DEC FLOAT(16);

   PUT STRING(CMD) EDIT('GR DEVICE ',XPPI,YPPI,M,N,' 1')
     (A,F(6),X(1),F(6),X(1),F(6),A);
   I=#CMD(CMD,RHPTR,RHHDRPT);
   DO X=1 TO XDIM;
     AC=XCORNER+(X-1)*GAP;
     DO Y=1 TO YDIM;
       BC=YCORNER+(Y-1)*GAP;
       AZ,BZ=0.0;
       DO COUNT=1 TO ITER UNTIL(AZ**2+BZ**2>4.0);
         TMP=AZ;
         AZ=AZ**2-BZ**2+AC;
         BZ=2*TMP*BZ+BC;
         END;
       IF MOD(COUNT,2)=0
         THEN CALL #PIXPUT(X,Y,PEL,RHPLOT79);
       END;
     END;
   END DO_IMAGE_BROT;

 DO_IMAGE_TENDRIL: PROC;
   DCL PEL CHAR(1) STATIC INIT('1');
   DCL (COUNT,I,J,K,X,Y) FIXED BIN;
   DCL (AR,AI,BR,BI,CR,CI,DR,DI,ER,EI,FR,FI,GR,GI,GZ,IZ) DEC FLOAT(16);
   DCL TMP DEC FLOAT(16);

   DO X=1 TO XDIM;
     ZR=XCORNER+(X-1)*GAP;
     DO Y=1 TO YDIM;
       ZI=YCORNER+(Y-1)*GAP;
       DO COUNT=1 TO ITER UNTIL(AZ**2+BZ**2>4.0);
         /* Z=Z**2+U */ TMP=ZR; ZR=ZR**2-ZI**2+UR; ZI=2*TMP*ZI+UI;
         END;
       IF MOD(COUNT,2)=0
         THEN CALL #PIXPUT(X,Y,PEL,RHPLOT79);
       END;
     END;
   END DO_IMAGE_TENDRIL;

   END ABEBDRY;
