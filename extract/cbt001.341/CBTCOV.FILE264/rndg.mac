* RNDG
*$.HE GENERALIZED SUBROUTINES - RNDG
*$.HE RANDOM NUMBERS FROM A NORMAL DISTRIBUTION
*$.PL 55
*$.PN 0
*$.PA
*$.SS
*$.NF
*$09/17/76
*$AUTHOR:  HAROLD WRIGHT, HUGHES AIRCRAFT
*$SOURCE MODULE NAME:  RNDG
*$DOCUMENTATION ID:  *$
*$.FI L
*$.SP 5
*$THIS SUBROUTINE GENERATED RANDOM NUMBERS FROM A GAUSSIAN
*$(NORMAL) DISTRIBUTION HAVING ZERO MEAN AND UNIT STANDARD
*$DEVIATION.  THE NUMBERS GENERATED ARE IN THE RANGE FROM
*$06 TO +6.  CALL FORMAT IS AS FOLLOWS:
*$.IN 5
*$.SP 1
*$.NF
*$Y = RNDG(I);
*$.SP 1
*$WHERE:
*$.FI L
*$.HI 5
*$Y IS A RANDOM NUMBER DRAWN FROM A NORMAL (0.,1.) DISTRIBUTION.
*$ALL NUMBERS GENERATED WILL BE IN THE RANGE (-6.,6.), EXCLUSIVE
*$OF ENDPOINTS. (SEE METHOD).  NOTE THAT THE RETURNED VALUE
*$FROM RNDG IS A DOUBLE PRECISION FLOATING POINT NUMBER.
*$.SP 1
*$I IS AN INTEGER VARIABLE (FIXED BIN(31,0)) INITIALIZED BY THE USER
*$AND USED BY THE ROUTINE TO GENERATE THE RANDOM NUMBER.
*$I IS CHANGED BY THE ROUTINE PREPARATORY
*$TO GENERATING A SUBSEQUENT RANDOM NUMBER.
*$.HI 0
*$.IN 0
*$.SP 1
*$TO GENERATE ONE SEQUENCE OF RANDOM NUMBERS USING THE FUNCTION
*$RNDG, INITIALIZE I AND GENERATE THE FIRST NUMBER IN THE SEQUENCE
*$BY A STATEMENT OF THE FORM Y = RNDG(I).  THEN, WITHOUT REVISING
*$I, GENERATE SUBSEQUENT NUMBERS IN THE SEQUENCE BY REPEATED
*$FUNCTIONAL REFERENCES TO RNDG(I).  SEE EXAMPLE(1).
*$.SP 1
*$TO GENERATE SEVERAL SEQUENCES OF RANDOM NUMBERS USING THE FUNCTION
*$RNDG:  BY USING DISTINCTLY NAMED VARIABLES FOR THE ARGUMENT AND
*$DISTINCTLY INITIALIZING EACH, THE USER MAY GENERATE SEVERAL
*$DISTINCT SEQUENCES OF RANDOM NUMBERS, EACH SEQUENCE INITIALIZED
*$AND GENERATED AS DESCRIBED IMMEDIATELY PRECEDING.  AS BEFORE,
*$THE VARIABLES MUST NOT BE CHANGED WHILE A SEQUENCE IS BEING
*$GENERATED.
*$.SP 1
*$RESTRICTION:  I MUST BE IN INTEGER VARIABLE INITIALIZED TO A
*$POSITIVE VALUE.
*           RNDG - RANDOM NUMBERS FROM A NORMAL DISTRIBUTION
RNDG     CSECT CONTROL SECTION FOR FLOATING-POINT NUMBER.
         USING RNDG,15  ESTABLISH BASE REGISTER
         STM   0,5,20(13)      SAVE R0-R3
         L     4,4(1)        ADDRESS OF RETURNED VALUE
         L     1,0(1)        ADDRESS OF PARAMETERS
         LR    3,1
         LD    0,=D'0.0'     ZERO
         STD   0,TEMP1       CLEAR TEMPORARY ACCUMULATOR
         LA    2,12(0)       INDEX
LOOP     EQU   *
         L     1,0(3)  PICK UP X(N)
         M     0,=F'16807'  X(N+1)=K*X(N) MOD(2**31-1)  K=7**5=16807
         SLDA  0,1 ISOLATE HIGH ORDER 31 BITS (R).
         SRL   1,1 ISOLATE LOW ORDER 31 BITS. SIGN +.
         SR    5,5
         LTR   0,0
         BC    10,CK2
         LA    5,4 INDICATE NEGATIVE
CK2      LTR   1,1
         BC    10,DOADD
         LA    5,4(5) INDICATE NEGATIVE
DOADD    DS    0H
* AT THIS POINT, R5 = 0 IF POS/POS
*                     4 IF POS/NEG
*                     8 IF NEG/NEG
         ALR    0,1 X'(N+1) = K*X(N) + R (LOW ORDER 31 BITS).
         LTR   0,0
         B     POSPOS(5)
POSPOS   BC    4,OVF BR IF SIGN CHANGED
POSNEG   B     CONT
NEGNEG   BC    10,OVF BR IF SIGN CHANGED
CONT     ST    0,0(3)   X'(N+1) IN PL/I PROGRAM
         SR    1,1 ZERO LOW ORDER DOUBLEWORD.
         SRDA  0,7 MAKE PCOM FOR MASK.
         A     0,=X'40000000' MASK IN FLOATING-POINT EXPONENT.
         STM   0,1,TEMP STORE UNNORMALIZED DOUBLEWORD TEMPORARILY.
         SDR   0,0 CLEAR LOW-ORDER DOUBLE FLOATING-POINT REG.
         AD    0,TEMP PLACE NORMALIZED DOUBLEWORD FLOATING-POINT       X
               NUMBER IN FLOATING-POINT REGISTER 0.
         AD    0,TEMP1       ADD ACCUMULATOR
         STD   0,TEMP1       NEW ACCUMULATOR
         BCT   2,LOOP        TEST FOR DONE
         SD    0,=D'6.0'     MINUS 6
         STD   0,0(4)        SET RETURNED VALUE
         LM    0,5,20(13)    RESTORE R0-R3
         MVI   12(13),X'FF'   SET RETURN INDICATOR
         BR    14 RETURN TO PL/I.
OVF      SLL   0,1 SIGN BIT +.
         SRL   0,1 SIGN BIT +.
         A     0,=F'1' ADD 1 TO GET X'(N+1) + 1.
         B     CONT RETURN TO MAIN CODING TO FINISH.
TEMP     DS    D TEMPORARY STORAGE ON DOUBLEWORD BOUNDARY FOR SPEED.
TEMP1    DS    D             TEMPORARY ACCUMULATOR
         LTORG FORCE LITERAL ASSEMBLY INTO THIS CONTROL SECTION.
         END
