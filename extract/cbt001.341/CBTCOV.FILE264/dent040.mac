 /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
 /* DENT040 (WAS DENTFSC), $FULLSCR */
 /* CALLED TO PROCESS - $FULLSCR <PANEL> */
   % DCL @PROCNAME CHAR;
   % DCL @RENTNAME CHAR;
   % @PROCNAME='RENT';
   % @RENTNAME='DENT040';
   % INCLUDE DENTSUB;
   % INCLUDE DENTPNL;
   DCL SETCAPS ENTRY;
   DCL STFSMOD ENTRY(CHAR(*),CHAR(*),FIXED BIN(15,0))
     RETURNS(FIXED BIN(15,0));
   DCL NAME CHAR(8);
   DCL AD(0:32766) CHAR(1) UNALIGNED BASED(T);
   DCL 1 MPNLCALL,
        2 MCURPNL FIXED BIN(15,0) INIT(0),
        2 MNXTPNL FIXED BIN(15,0) INIT(1),
        2 MARYPTR PTR,
        2 MAID BIT(8),
        2 MCURLOC FIXED BIN(15,0),
        2 MCHGCURS FIXED BIN(15,0) INIT(-1),
        2 MCALLFLGS BIT(8) INIT('0'B);
   DCL 1 @PNLARYS,
        2 @ARYCNT FIXED BIN(31,0) INIT(1),
        2 @PNLARY(1),
      3 @PNLSTAPT PTR,
       /* PTR TO STATIC PORTION OF DEFINITION */
      3 @PNLDYNPT PTR;
       /* PTR TO DYNAMIC PORTION OF DEFINITION */
   DCL SETTXT CHAR(256) VAR;
   DCL GBLSW BIT(1) STATIC INIT('0'B);
   DCL SYMBOLPM CHAR(8);
   DCL 1 AIDTAB(24) BIT(8) STATIC INIT(
     '11110001'B,  /*  F1 = PF  1 KEY */
     '11110010'B,  /*  F2 = PF  2 KEY */
     '11110011'B,  /*  F3 = PF  3 KEY */
     '11110100'B,  /*  F4 = PF  4 KEY */
     '11110101'B,  /*  F5 = PF  5 KEY */
     '11110110'B,  /*  F6 = PF  6 KEY */
     '11110111'B,  /*  F7 = PF  7 KEY */
     '11111000'B,  /*  F8 = PF  8 KEY */
     '11111001'B,  /*  F9 = PF  9 KEY */
     '01111010'B,  /*  7A = PF  0 KEY */
     '01111011'B,  /*  7B = PF 11 KEY */
     '01111100'B,  /*  7C = PF 12 KEY */
     '11000001'B,  /*  C1 = PF 13 KEY */
     '11000010'B,  /*  C2 = PF 14 KEY */
     '11000011'B,  /*  C3 = PF 15 KEY */
     '11000100'B,  /*  C4 = PF 16 KEY */
     '11000101'B,  /*  C5 = PF 17 KEY */
     '11000110'B,  /*  C6 = PF 18 KEY */
     '11000111'B,  /*  C7 = PF 19 KEY */
     '11001000'B,  /*  C8 = PF 20 KEY */
     '11001001'B,  /*  C9 = PF 21 KEY */
     '01001010'B,  /*  4A = PF 22 KEY */
     '01001011'B,  /*  4B = PF 23 KEY */
     '01001100'B); /*  4C = PF 24 KEY */
   NAME=PARY(2);
   CALL SETCAPS(NAME);
   T=#PFN(RHHDRPT,SUBENT,NAME); /* GO GET PANEL */
   MARYPTR=ADDR(@PNLARYS);
   @PNLSTAPT(1)=ADDR(AD(4));
   WRKPTR=@PNLSTAPT(1);
   IF WRKPTR->PNLLEN<0
     THEN DO;
       SCRSIZE=0-WRKPTR->PNLLEN;
       IF SCRSIZE=1
         THEN SCRSIZE=1920;
       WRKADJ=WRKADJ+WRKPTR->NEWLEN;
       END;
     ELSE DO;
       SCRSIZE=1920;
       WRKADJ=WRKADJ+WRKPTR->PNLLEN;
       END;
   I=SCREENLEN*LINESIZE;
   IF I^=SCRSIZE
     THEN IF ^((I=3440 & SCRSIZE=1920) × (I=2560 & SCRSIZE=1920))
       THEN DO;
         PUT SKIP LIST('ERROR IN $FULLSCR - WRONG SCREEN SIZE');
         SIGNAL ERROR;
         END;
   @PNLDYNPT(1)=WRKPTR;
   CURPNL=0;
   IF ^STFSMODE
     THEN DO;
       J=STFSMOD('ON','INITIAL=NO',0);
       STFSMODE='1'B;
       END;
   SUBSTR(MCALLFLGS,8,1)=RHPPRINT;
   CALL SUBENT(25)(MPNLCALL); /* CALL SCRWRIT */
   /* NOW SET CURSOR SYMBOLIC */
   PUT STRING(SETTXT) EDIT(MCURLOC)(P'99999');
   SYMBOLPM='&CURSOR';
   CALL #SET(GBLSW,SYMBOLPM,SETTXT); /* CALL SET@ */
   /* NOW SET PFK SYMBOLIC */
   DO I=24 TO 1 BY -1 WHILE(AIDTAB(I)^=MAID);
     END;
   PUT STRING(SETTXT) EDIT(I)(P'99999');
   SYMBOLPM='&PFK';
   CALL #SET(GBLSW,SYMBOLPM,SETTXT); /* CALL SET@ */
   /* NOW SET VALUES FOR THE INPUT FIELDS */
   PNLPTR=@PNLSTAPT(1);
   DYNPTR=@PNLDYNPT(1);
   IF PNLLEN<0
     THEN SFLDPTR=ADDR(FLDLOC); /* POINT TO FIRST FIELD DESCR */
     ELSE SFLDPTR=ADDR(NEWLEN);
   WRKPTR=DYNPTR;
   WRKADJ=WRKADJ+DINOF; /* WRKPTR POINTS AT PANEL_IN SUBSTRUCTURE */
   DO SFLDADJ=SFLDADJ REPEAT SFLDADJ+FLDLEN UNTIL(FLDNUM=FLDCNT);
     IF ^SUBSTR(FLAGS,3,1) /* UNPROTECTED? */
       THEN DO; /* IT IS INPUT FIELD */
         DFLDADJ=WRKADJ+INOFF; /* DFLDPTR POINTS AT INPUT DATA */
         SETTXT=DATA;
         SYMBOLPM='&'××FLDNAME;
         CALL #SET(GBLSW,SYMBOLPM,SETTXT); /* CALL SET@ */
         END;
     END;
   END DENT040;
