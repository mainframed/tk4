 /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
   /* ABE070,DOTAB,SETHEX,TOGGLE */
   %INCLUDE ABESUB;
 ABESUB(ABE070) PARS(00000000000000000) CHECK(YES);
   %INCLUDE ABESUBA;

   DCL 1 LRN_STRUCTURE BASED(LRNPTR),
   %INCLUDE ABELRN;
   %INCLUDE ABELRNA;
   %INCLUDE ABERHPNL;
   %INCLUDE @HEXCHAR;

   DCL SETCAPS ENTRY;
   DCL (PREFIX,SUFFIX) ENTRY(CHAR(*),CHAR(*))
     RETURNS(FIXED BIN(15,0));
   DCL TABCH CHAR(80) VAR;
   DCL MYTABS(16) FIXED BIN(15,0);

   ON CONDITION(BADTAB) GOTO BADLAB;
   GO TO BYBAD;
 BADLAB:;
   IF MSGDATA=''
     THEN MSGDATA='INVALID OPERAND';
   RHRC=12;
   RETURN;
 BYBAD:;

   SELECT(CMDINDX);
     WHEN(1,2) CALL DOTAB_PROC;
     WHEN(3)   CALL SETHEX_PROC;
     OTHERWISE CALL TOGGLE_PROC;
     END; /* SELECT */

 DOTAB_PROC: PROC;
   DO I=1 TO HBOUND(MYTABS,1);
     MYTABS(I)=-1;
     IF I<HBOUND(PARY,1)
       THEN IF PARY(I+1)^=''
         THEN MYTABS(I)=PARY(I+1);
     IF MYTABS(I)<0
       THEN IF I<=HBOUND(TABA,1)
         THEN MYTABS(I)=TABA(I);
     END;
   IF PARY(1)^=''
     THEN DO;
       TABCH=HEX(PARY(1));
       IF LENGTH(TABCH)=0
         THEN TABCH=PARY(1);
       END;
   IF LENGTH(TABCH)=0
     THEN TABCH=TABK;
   IF LENGTH(TABCH)>1
     THEN SIGNAL CONDITION(BADTAB);
   DO FOREVER=1 REPEAT FOREVER;
     CALL #ABELSP(RHHDRPT,LRNPTR);
     IF LRN_BUFP=NULL
       THEN LEAVE; /* ALL DONE */
     J=0; /* J IS INDEX TO TABA */
     TABLUP: DO FOREVER=1 REPEAT FOREVER; /* DO TABBING NOW */
       I=INDEX(LSPBUF,TABCH); /* FIND NEXT TAB CHAR */
       IF I=0
         THEN LEAVE; /* NO MORE TABS */
       DO J=J+1 REPEAT J+1 UNTIL(MYTABS(J)>=I+1);
         IF J>HBOUND(MYTABS,1)
           THEN LEAVE TABLUP;
         END;
       K=MYTABS(J)-I;
       IF K=0
         THEN LSPBUF=SUBSTR(LSPBUF,1,I-1)××SUBSTR(LSPBUF,I+1);
         ELSE LSPBUF=SUBSTR(LSPBUF,1,I-1)××REPEAT(' ',K-1)××
           SUBSTR(LSPBUF,I+1);
       END TABLUP;
     END;
   END DOTAB_PROC;

 HEX: PROC(PRMSTR) RETURNS(CHAR(80) VAR);
 /**********************************************************************
 * HEX IS CALLED TO PROCESS A HEXADECIMAL CONSTANT.                    *
 **********************************************************************/
   DCL PRMSTR CHAR(*) VAR;
   DCL TRIN ENTRY;
   DCL C CHAR(1);
   DCL INSTR CHAR(80) VAR;
   DCL OUTSTR CHAR(40) VAR;

   IF LENGTH(PRMSTR)<4
     THEN RETURN(''); /* NOT HEX */
   IF LENGTH(PRMSTR)>80
     THEN RETURN(''); /* NOT HEX */
   C=SUBSTR(PRMSTR,1,1);
   CALL SETCAPS(C);
   IF C^='X'
     THEN RETURN(''); /* NOT HEX */
   IF SUBSTR(PRMSTR,2,1)^='''' × SUBSTR(PRMSTR,LENGTH(PRMSTR),1)^=''''
     THEN RETURN(''); /* NOT HEX */
   INSTR=SUBSTR(PRMSTR,3,LENGTH(PRMSTR)-3);
   CALL SETCAPS(INSTR);
   IF VERIFY(INSTR,'ABCDEF0123456789')^=0
     THEN RETURN(''); /* NOT HEX */
   IF MOD(LENGTH(INSTR),2)^=0
     THEN INSTR='0'××INSTR;
   OUTSTR=REPEAT(' ',LENGTH(INSTR)/2-1);
   CALL TRIN(INSTR,OUTSTR);
   RETURN(OUTSTR);
   END HEX;

 SETHEX_PROC: PROC;
   DCL SYMBOLPM CHAR(8);
   DCL SETTXT CHAR(100) VAR;

   CALL SETCAPS(PARY(1));
   SYMBOLPM=PARY(1);
   SETTXT=HEX('X'''××PARY(2)××'''');
   IF LENGTH(SETTXT)=0
     THEN SIGNAL CONDITION(BADTAB);
   CALL #SETC(RHHDRPT,RH_SYMTREE,SYMBOLPM,SETTXT);
   END SETHEX_PROC;

 TOGGLE_PROC: PROC;
   DCL (STRT,STOP) CHAR(1) VAR;
   DCL TOGGLE FIXED BIN INIT(0);
   DCL (I,J,K) FIXED BIN;

   IF LENGTH(PARY(1))=0
     THEN STRT=@HEXCHAR(34);
     ELSE DO;
       STRT=HEX(PARY(1));
       IF LENGTH(STRT)=0
         THEN STRT=PARY(1);
       END;
   IF LENGTH(PARY(2))=0
     THEN STOP=@HEXCHAR(35);
     ELSE DO;
       STOP=HEX(PARY(2));
       IF LENGTH(STOP)=0
         THEN STOP=PARY(2);
       END;
   DO FOREVER=1 REPEAT FOREVER;
     CALL #ABELSP(RHHDRPT,LRNPTR);
     IF LRN_BUFP=NULL
       THEN LEAVE; /* ALL DONE */
     LSPBUF=SUBSTR(LSPBUF,1,SUFFIX(LSPBUF,' ')); /*NO TRAILING BLANKS*/
     IF LENGTH(LSPBUF)^=0
       THEN DO;
         I=PREFIX(LSPBUF,' ');
         J=LENGTH(LSPBUF);
         DO I=I TO J;
           SELECT(SUBSTR(LSPBUF,I,1));
             WHEN(STRT) TOGGLE=1;
             WHEN(STOP) TOGGLE=0;
             OTHERWISE IF TOGGLE=1
               THEN SUBSTR(LSPBUF,I,1)='1';
               ELSE SUBSTR(LSPBUF,I,1)=' ';
             END; /* SELECT */
           END;
         END;
     END;
   END TOGGLE_PROC;

   END ABE070;
