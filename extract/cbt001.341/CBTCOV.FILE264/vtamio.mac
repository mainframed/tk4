 /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
* VTAMIO
* DCL LULU ENTRY(FIXED BIN(15,0),
*            CHAR(*) VAR, CHAR(*) VAR,
*            FIXED BIN(31,0), EVENT);
* CALL LULU(P1,P2,P3,P4,P5);
* (R2) P1 = FUNCTION CODE (FIXED BIN(15,0)).
*      0 = START
*      4 = GET (ASYNCHRONOUS)
*      8 = PUT
*      C = STOP
*     10 = GET-POST
*     14 = SIGNAL ATTENTION
* (R3) P2 = DATA BUFFER FOR GET-POST OR PUT (CHAR(*) VAR);
*      AT FIRST ENTRY, THIS VARIABLE SHOULD CONTAIN A LOGON MESSAGE.
* (R4) P3 = MESSAGE BUFFER IN CASE OF ERROR (CHAR(*) VAR);
*      WILL CONTAIN EOF WHEN LAST MESSAGE IN CHAIN IS RECEIVED.
*      AT FIRST ENTRY, THIS FIELD SHOULD CONTAIN THE NAME
*      OF THE APPLICATION TO WHICH YOU WANT TO LOGON
*      (TSO, VSPC, ETC).
* (R5) P4 = RETURN CODE (FIXED BIN(31,0)).
* (R6) P5 = EVENT VARIABLE (ECB).  WILL BE USED BY THIS ROUTINE
*      AS AN EXTERNAL ECB ON GET OPERATIONS, WHICH ARE DONE
*      ASYNCHRONOUSLY.  THE ECB WILL BE POSTED WHEN THE DATA
*      HAS BEEN RECEIVED. CALL GET-POST TO PROCESS THE POST, AND TO
*      RECEIVE THE DATA IN YOUR BUFFER (P2).
* (R7) P6 = OPTIONAL - NEED NOT BE SPECIFIED. IF THE PARAMETER
*      IS SUPPLIED, IT SHOULD BE THE ADDRESS OF A FULLWORD TO
*      CONTAIN THE CURRENT CID.
LULU1    CSECT
         DC    C'LULU'
         DC    AL1(4)
         ENTRY LULU
LULU     DS    0H
         SAVES RETCTL
         TGSREQU
         LM    R2,R6,0(R1)
         LTR   R6,R6              LAST PARM?
         BC    4,LASTP            BR IF YES
         L     RF,20(R1)          RF = A(CID STORAGE AREA)
         B     STORADR
LASTP    DS    0H
         LA    RF,CIDDUM
STORADR  DS    0H
         ST    RF,CIDADR
         LH    R2,0(R2)           R2=FUNCTION CODE
         SR    RF,RF
         ST    RF,0(R5)           SET DEFAULT RETURN CODE
         USING IFGRPL,RA
         TM    BINDSW,X'80'
         BC    1,BYWT
         WAIT  1,ECB=SCIPECB
BYWT     DS    0H
         B     BRTAB(R2)          BR TO APPROPRIATE SUBROUTINE
BRTAB    DS    0H
         B     START              OFFSET 0
         B     GET                       4
         B     PUT                       8
         B     STOP                      C
         B     GETPOST                  10
         B     PUT                      14
START    DS    0H
         LA    R0,0               INDICATE ENQ IS WANTED
         LA    R1,APPLID
         L     RE,0(R4)           RE=A(LEN(APPL))
         CLC   2(4,RE),=C'CICS'   IS IT CICS?
         BC    7,NOTCICS          BR IF NOT
         MVC   APPLID+1(8),=CL8'LU67'
         LA    R2,APPLID+3        OFFSET TO INCREMENTAL #
         B     CALLENQ
NOTCICS  DS    0H
         LA    R2,APPLID+5        OFFSET TO INCREMENTAL #
CALLENQ  DS    0H
         L     RF,=V(LULUENQ)
         BALR  RE,RF
         LTR   RF,RF              ENQ OK?
         BC    7,BADENQ
         LA    RA,PUTRPL          MAKE RPL ADDRESSIBLE
* NOW SET APPLICATION NAME IN NIB
         LA    R7,NIB
         USING ISTDNIB,R7         MAKE NIB ADDRESSIBLE
         L     RE,0(R4)           RE=A(LEN(NAME))
         LH    RF,0(RE)           RF=LEN(NAME)
         MVC   NIBSYM,=CL8' '     CLEAR NIB FIELD
         BCTR  RF,0               LESS 1 FOR EX
         EX    RF,MVCNAME         MOVE NAME TO NIB
         B     *+10
MVCNAME  MVC   NIBSYM(0),2(RE)
         DROP  R7
         OPEN  ACB
         LTR   RF,RF
         BC    7,BADOPN           BR IF OPEN UNSUCCESSFUL
         SETLOGON RPL=PUTRPL,                                          C
               OPTCD=START
         LTR   RF,RF
         BC    7,BADSETL
         L     R8,0(R3)           R8=A(LEN(DATA AREA))
         LH    R9,0(R8)           R9=LEN(DATA AREA)
         LA    R8,2(R8)           R8=A(DATA AREA)
         REQSESS RPL=PUTRPL,                                           C
               NIB=NIB,                                                C
               RECLEN=(R9),                                            C
               AREA=(R8)
         LTR   RF,RF
         BC    7,BADREQS
         WAIT  1,ECB=SCIPECB
         XC    SCIPECB,SCIPECB
         B     NORMEXIT           END OF START CODE
PUT      DS    0H                 BEGINNING OF PUT CODE
         TM    QSW,X'80'          AM I QUIESCED?
         BC    8,PUTGO            BR IF NOT
         WAIT  1,ECB=QECB
PUTGO    DS    0H
         LA    RA,PUTRPL          MAKE RPL ADDRESSIBLE
         L     R7,CID
         L     R8,0(R3)           R8=A(LEN(DATA AREA))
         LH    R9,0(R8)           R9=LEN(DATA AREA)
         LA    R8,2(R8)           R8=A(DATA AREA)
         CH    R2,=H'20'          IS IT SIGNAL ATTENTION
         BC    7,PUTSEND          BR IF NOT
         SEND  RPL=PUTRPL,                                             C
               ACB=ACB,                                                C
               ARG=(R7),                                               C
               STYPE=REQ,                                              C
               CONTROL=SIGNAL,                                         C
               CODESEL=STANDARD,                                       C
               CHNGDIR=(NCMD,REQ),                                     C
               CHAIN=ONLY,                                             C
               POST=SCHED,                                             C
               SIGDATA=X'C9000100',                                    C
               ECB=INTERNAL,                                           C
               OPTCD=(ASY,NFMHDR),                                     C
               RTYPE=(DFASY,RESP),                                     C
               RESPOND=(EX,FME,NRRN,NQRESP)
         B     PUTCK
PUTSEND  DS    0H
         SEND  RPL=PUTRPL,                                             C
               ACB=ACB,                                                C
               ARG=(R7),                                               C
               RECLEN=(R9),                                            C
               AREA=(R8),                                              C
               STYPE=REQ,                                              C
               CONTROL=DATA,                                           C
               CODESEL=STANDARD,                                       C
               CHNGDIR=(NCMD,REQ),                                     C
               CHAIN=ONLY,                                             C
               CRYPT=NO,                                               C
               POST=SCHED,                                             C
               ECB=INTERNAL,                                           C
               OPTCD=(ASY,NFMHDR),                                     C
               RTYPE=(DFASY,RESP),                                     C
               RESPOND=(EX,FME,NRRN,NQRESP)
PUTCK    DS    0H
         LTR   RF,RF
         BC    7,BADSEND
         CHECK RPL=PUTRPL
         TM    RESPSW,X'80'       DID I GET NEGATIVE RESPONSE?
         BC    1,BADRESP          BR IF YES
         B     NORMEXIT           END OF PUT CODE
GET      DS    0H                 BEGINNING OF GET CODE
         LA    RA,GETRPL          MAKE RPL ADDRESSIBLE
         L     R7,CID
         L     R8,0(R3)           R8=A(CURLEN(DATA AREA))
         LA    R8,2(R8)           R8=A(DATA AREA)
         LH    R9,4(R3)           R9=MAXLEN(DATA AREA)
         RECEIVE RPL=GETRPL,                                           C
               ACB=ACB,                                                C
               ARG=(R7),                                               C
               AREA=(R8),                                              C
               AREALEN=(R9),                                           C
               OPTCD=(ASY,KEEP,Q),                                     C
               ECB=(R6),                                               C
               RTYPE=(DFSYN,NDFASY,NRESP)
         LTR   RF,RF
         BC    7,BADRECI
         B     NORMEXIT
GETPOST  DS    0H
         L     R7,CID
         LA    RA,GETRPL          MAKE RPL ADDRESSIBLE
         CHECK RPL=GETRPL
         L     R0,RPLRLEN         R0=LEN(INPUT)
         L     R8,0(R3)           R8=A(LEN(DATA AREA))
         LH    R9,4(R3)           R9=MAXLEN(AREA)
         CR    R0,R9              OVERLENGTH?
         BC    12,LENOK           BR IF NOT
         STH   R9,0(R8)           STORE LENGTH
         SR    R8,R8
         B     CKRES
LENOK    DS    0H
         STH   R0,0(R8)           STORE LENGTH
         SR    R8,R8              SET EOF SWITCH OFF
         TM    RPLCHN,RPLLAST     IS IT LAST IN CHAIN?
         BC    1,SETEOF           BR IF YES
         TM    RPLCHN,RPLONLY     IS IT ONLY IN CHAIN?
         BC    14,CKRES           BR IF NOT
SETEOF   DS    0H
         LA    R8,1               SET EOF SWITCH ON
         LA    R0,3               R0=LENGTH(EOF MESSAGE)
         LA    R1,=CL3'EOF'       R1=A(EOF MESSAGE)
         LR    RF,R4              RF=A(MESSAGE SDV)
         BAL   RE,MOVEDATA
CKRES    DS    0H
         TM    RPLVTFL2,RPLEX     RETURN ALL RESPONSES?
         BC    1,EOFCK            BR IF NOT
         SEND  RPL=GETRPL,                                             C
               ACB=ACB,                                                C
               ARG=(R7),                                               C
               STYPE=RESP,                                             C
               RESPOND=(NEX,FME,NRRN,NQRESP),                          C
               OPTCD=SYN,                                              C
               POST=SCHED
         LTR   RF,RF              SEND OK?
         BC    7,BADSRES          BR IF NOT
         CHECK RPL=GETRPL
EOFCK    DS    0H
         LTR   R8,R8              IS IT EOF MESSAGE?
         BC    8,NORMEXIT         BR IF NOT
         B     RETCTL             END OF GET CODE
STOP     DS    0H                 BEGINNING OF STOP CODE
         LA    RA,PUTRPL          MAKE RPL ADDRESSIBLE
         L     R7,CID
         TERMSESS RPL=PUTRPL,                                          C
               ACB=ACB,                                                C
               ARG=(R7)
         LTR   RF,RF
         BC    7,BADTERM
         CLOSE ACB
         LTR   RF,RF
         BC    7,BADCLO
         LA    R0,4               INDICATE DEQ IS WANTED
         LA    R1,APPLID
         L     RF,=V(LULUENQ)
         BALR  RE,RF
         LTR   RF,RF              ENQ OK?
         BC    7,BADENQ
         B     NORMEXIT
NORMEXIT DS    0H
* NOW CLEAR OUT MESSAGE BUFFER
         SR    R0,R0              INLEN = 0
         SR    R1,R1              NO NEED FOR INSTR
         LR    RF,R4              RF = A(MSGBUF SDV)
         BAL   RE,MOVEDATA
SETCID   DS    0H
         L     RE,CID
         L     RF,CIDADR
         ST    RE,0(RF)
         B     RETCTL
BADENQ   DS    0H
         LA    R7,BADENQM
         B     BADEXIT
BADENQM  DC    X'00',AL1(BADENQE-*),C'BAD ENQUEUE/DEQUEUE'
BADENQE  DS    0C
BADTERM  DS    0H
         LA    R7,BADTRM
         B     BADVTAM
BADTRM   DC    X'00',AL1(BADTRE-*),C'BAD TERMSESS'
BADTRE   DS    0C
BADSRES  DS    0H
         LA    R7,BADSREM
         B     BADVTAM
BADSREM  DC    X'00',AL1(BADSREE-*),C'BAD SEND OF RESPONSE'
BADSREE  DS    0C
BADRESP  DS    0H
         LA    R7,BADRESM
         B     BADVTAM
BADRESM  DC    X'00',AL1(BADRESE-*),C'BAD RESPONSE'
BADRESE  DS    0C
BADRECI  DS    0H
         LA    R7,BADRECM
         B     BADVTAM
BADRECM  DC    X'00',AL1(BADRECE-*),C'BAD RECEIVE'
BADRECE  DS    0C
BADSEND  DS    0H
         LA    R7,BADSENM
         B     BADVTAM
BADSENM  DC    X'00',AL1(BADSENE-*),C'BAD SEND'
BADSENE  DS    0C
BADSETL  DS    0H
         LA    R7,BADSETM
         B     BADEXIT
BADSETM  DC    X'00',AL1(BADSETE-*),C'BAD SETLOGON'
BADSETE  DS    0C
BADREQS  DS    0H
         LA    R7,BADREQM
         B     BADVTAM
BADREQM  DC    X'00',AL1(BADREQE-*),C'BAD REQSESS'
BADREQE  DS    0C
BADOPN   DS    0H
         LA    R7,BADOPNM
         B     BADEXIT
BADOPNM  DC    X'00',AL1(BADOPNE-*),C'BAD OPEN'
BADOPNE  DS    0C
BADCLO   DS    0H
         LA    R7,BADCLOM
         B     BADEXIT
BADCLOM  DC    X'00',AL1(BADCLOE-*),C'BAD CLOSE'
BADCLOE  DS    0C
BADVTAM  DS    0H
         ST    RF,0(R5)           SAVE RETURN CODE
         SHOWCB AM=VTAM,RPL=(RA),FIELDS=(RTNCD,FDBK2),                 C
               AREA=WORKAREA,LENGTH=8
         LA    R0,8               R0=L(WORKAREA)
         LA    R1,WORKAREA        R1=A(WORKAREA)
         LR    RF,R3              RF=A(SDV FOR DATA STRING)
         BAL   RE,MOVEDATA
         B     BADEXITA
BADEXIT  DS    0H
         ST    RF,0(R5)           SAVE RETURN CODE
BADEXITA DS    0H
         LH    R0,0(R7)           R0=L(INPUT MESSAGE)
         LA    R1,2(R7)           R1=A(INPUT MESSAGE)
         LR    RF,R4              RF=A(SDV FOR OUTPUT MESSAGE)
         BAL   RE,MOVEDATA        GO MOVE MESSAGE TO BUFFER
         B     SETCID
MOVEDATA DS    0H
* MOVE DATA SUBROUTINE
* AT ENTRY -
*   R0 = L(INSTR)
*   R1 = A(INSTR)
*   RF = A(OUTSTR SDV)
*   RE = A(RETURN)
* AT EXIT -
*   RF = 4 IF INPUT WAS TRUNCATED, 0 IF NOT
         STM   R0,RC,20(RD)       SAVE REGS
         LH    R2,4(RF)           R2 = MAXLEN OUTPUT STRING
         L     R3,0(RF)           R3 = ADDR CURLEN OUTPUT STRING
         LA    RF,4               SET DEFAULT RETURN CODE
         CR    R0,R2              IS INSTR BIGGER THAN OUTSTR
         BC    2,GOTLEN           BR IF YES, USE MAXLEN
         SR    RF,RF              INDICATE NO TRUNCATION
         LR    R2,R0              ELSE USE L(INSTR)
GOTLEN   DS    0H
         LTR   R4,R2              IS NEW LEN 0?
         BC    8,SETLEN           BR IF YES
         BCTR  R2,0               LESS 1 FOR EXECUTE
         EX    R2,MVDATA          MOVE DATA TO OUTSTR
         B     SETLEN
MVDATA   MVC   2(0,R3),0(R1)
SETLEN   DS    0H
         STH   R4,0(R3)           SET NEW OUTSTR LEN
         LM    R0,RC,20(RD)       RESTORE REGS
         BR    RE
         DROP  RC
         DROP  RA
SCIP     DS    0H
         USING *,RC
         USING ISTDBIND,R5
         USING ISTDNIB,R7
         USING IFGRPL,R6
         LR    RC,RF
         LR    RB,RE              SAVE RETURN ADDR
         LA    RD,SCIPSA          SET A(SAVE AREA)
         OI    SCIPSW,X'80'
         LM    R2,R6,0(R1)
         CLI   RPLCNTDC,RPLTBIND  IS IT BIND OPER?
         BC    8,BIND             BR IF YES
         CLI   RPLCNTSC,RPLSDT    IS IT SDT?
         BC    8,SCIPSDT          BR IF YES
         CLI   RPLCNTDC,RPLTUNBD  IS IT UNBIND?
         BC    8,UNBIND           BR IF YES
         DC    H'0'
BIND     DS    0H
         LH    RF,BINDCNT
         LA    RF,1(RF)
         STH   RF,BINDCNT
         LA    R7,SCIPNIB
         CLI   0(R5),X'00' IS IT SECOND FORMAT?
         BC    7,BIND1 BR IF NOT
         MVC   NIBSYM,23(R5) MOVE PRIMARY NAME TO NIB
         LA    R7,NIB             GET A(REGULAR NIB)
         MVC   NIBSYM,23(R5)      MOVE PRIMARY NAME TO REAL NIB
         LA    R7,QNIB            GET A(DFASY NIB)
         MVC   NIBSYM,23(R5)      MOVE PRIMARY NAME TO DFASY NIB
         B     BYBIND1
BIND1    DS  0H
         MVC   SESSPRMS,0(R5)     SAVE SESSION PARAMETERS
         MVC   NIBSYM,BINPRIM     MOVE PRIMARY NAME TO NIB
         LA    R7,NIB             GET A(REGULAR NIB)
         MVC   NIBSYM,BINPRIM     MOVE PRIMARY NAME TO REAL NIB
         LA    R7,QNIB            GET A(DFASY NIB)
         MVC   NIBSYM,BINPRIM     MOVE PRIMARY NAME TO DFASY NIB
BYBIND1  DS    0H
         OPNSEC RPL=SCIPRPL,                                           C
               NIB=SCIPNIB,                                            C
               OPTCD=SYN
         LTR   RF,RF              IS OPNSEC OK?
         BC    7,0                BR TO ZERO IF NOT
         LA    R6,SCIPRPL         GET ADDRESSABILITY ON SCIPRPL
         MVC   CID,RPLARG
         LA    R7,NIB             GET A(REAL NIB)
         MVC   NIBCID,CID         STORE CID IN REAL NIB
         LA    R7,QNIB            GET A(DFASY NIB)
         MVC   NIBCID,CID         STORE CID IN DFASY NIB
         B     SCIPEXIT
SCIPSDT  DS    0H
         CLC   SESSPRMS+27(3),=C'TSO'  IS IT TSO?
         BC    7,DOPOST                BR IF NOT
         CLC   BINDCNT(2),CNT2       IS IT 2D BIND?
         BC    7,SCIPEXIT            BR IF NOT
DOPOST   DS    0H
         OI    BINDSW,X'80'
         LA    R1,SCIPECB
         POST  (R1),0
         B     SCIPEXIT
UNBIND   DS    0H
         NI    BINDSW,X'00'
         NOPR  0
SCIPEXIT DS    0H
         SR    R0,R0
         SR    RF,RF
         BR    RB                 RETURN
         DROP  RC
         DROP  R5
         DROP  R7
         DROP  R6
CNT2     DC    H'2'
BINDCNT  DC    H'0'
CID      DC    F'0'
SCIPSA   DC    18F'0'
SCIPECB  DC    F'0'
SCIPRPL  RPL   AM=VTAM,                                                C
               ACB=ACB,                                                C
               NIB=SCIPNIB
SCIPNIB  NIB   MODE=RECORD,                                            C
               PROC=SYSRESP,                                           C
               LISTEND=YES
SESSPRMS DS    CL28
SCIPSW   DC    X'00'
BINDSW   DC    X'80'
CIDADR   DC    F'0'
CIDDUM   DC    F'0'
RESP     DS    0H
         USING *,RF
         OI    RESPSW,X'80'
         SR    R0,R0
         SR    RF,RF
         BR    RE
RESPSW   DC    X'00'
         DROP  RF
NSEXIT   DS    0H
         USING *,RF
         OI    NSEXSW,X'80'
         SR    R0,R0
         SR    RF,RF
         BR    RE
NSEXSW   DC    X'00'
DFASY    DS    0H
         USING *,RC
         USING IFGRPL,R6
         LR    RC,RF
         LR    RB,RE
         LA    RD,DFASA
         LM    R2,R6,0(R1)        GET PARAMETERS
         CLI   RPLCNTDF,RPLQEC    IS IT QUIESCE?
         BC    8,QEC              BR IF YES
*ASSUME RELEASE QUIESCE
         NI    QSW,X'00'
         LA    R1,QECB
         POST  (R1),0
         B     DFAEND
QEC      DS    0H
         SEND  RPL=QRPL,                                               C
               RECLEN=0,                                               C
               STYPE=REQ,                                              C
               CONTROL=QC
         CHECK RPL=QRPL
DFAEND   DS    0H
         SR    R0,R0
         SR    RF,RF
         BR    RB
         DROP  RC
         DROP  R6
DFASA    DC    18F'0'
QSW      DC    X'00'
LONGSW   DC    X'00'
LONGLN   DC    F'0'
QECB     DC    F'0'
QRPL     RPL   AM=VTAM,                                                C
               ACB=ACB,                                                C
               NIB=QNIB
QNIB     NIB   MODE=RECORD,                                            C
               PROC=SYSRESP,                                           C
               LOGMODE=INTERACT,                                       C
               LISTEND=YES
ACB      ACB   AM=VTAM,                                                C
               APPLID=APPLID,                                          C
               EXLST=EXLST,                                            C
               MACRF=LOGON
APPLID   DC    X'08',CL8'LULU1'
EXLST    EXLST AM=VTAM,                                                C
               NSEXIT=NSEXIT,                                          C
               RESP=RESP,                                              C
               DFASY=DFASY,                                            C
               SCIP=SCIP
PUTRPL   RPL   AM=VTAM,                                                C
               ACB=ACB,                                                C
               AREALEN=1024,                                           C
               OPTCD=(SYN,NQ),                                         C
               RECLEN=30
GETRPL   RPL   AM=VTAM,                                                C
               ACB=ACB,                                                C
               AREALEN=1024,                                           C
               OPTCD=(SYN,NQ),                                         C
               RECLEN=30
NIB      NIB   NAME=TSO,                                               C
               MODE=RECORD,                                            C
               PROC=SYSRESP,                                           C
               LOGMODE=INTERACT
WORKAREA DS    CL8
         LTORG
         IFGRPL AM=VTAM
         ISTDNIB
         ISTDBIND
         END

