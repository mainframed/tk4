 /* UNCLGDG
.HE UNCLGDG
.AD
3/17/77
.SS
.CE 2
UNCLGDG
TSO COMMAND PROCESSOR
.FI L
.SP 3
THE UNCLGDG COMMAND CAN BE USED TO DELETE GENERATIONS OF A GDG
BY RELATIVE GENERATION NUMBER.  FORMAT FOR THE COMMAND IS AS
FOLLOWS:
.SP 1
.IN 5
UNCLGDG GDGNAME(GDGNUM) DEL(1)
.SP 1
GDGNAME(GDGNUM) IS THE GENERATION DATA SET NAME AND RELATIVE
GENERATION NUMBER.  FOR EXAMPLE TEST.DATA(-1).
.SP 1
DEL(1) IS A KEYWORD SPECIFICATION WITH A DEFAULT OF 1 AS SHOWN.
THIS KEYWORD TELLS THE COMMAND HOW MANY GENERATIONS TO DELETE.  FOR
EXAMPLE, IF THE FOLLOWING MEMBERS OF A GDG EXISTED -
.SP 1
.IN 10
.NF
TEST.DATA.G0001V00
TEST.DATA.G0002V00
TEST.DATA.G0003V00
TEST.DATA.G0004V00
.FI L
.IN 5
AND THE USER ENTERED "UNCLGDG TEST.DATA(-1) DEL(2)" THEN GENERATIONS
TEST.DATA.G0002V00 AND TEST.DATA.G0003V00 WOULD BE UNCATALOGED.
 */
         % INCLUDE CPINIT1;
         % @CMP = 'O';
         % INCLUDE CPINIT2;
         @PROC(1,GDGNAM,DELETE(1#(NUMERIC)));
         DFT RANGE(*) FIXED BIN;
         DCL PLIXOPT CHAR(15) VAR INIT('ISA(50K)') STATIC EXT;
         DCL SUFFIX ENTRY RETURNS(FIXED BIN);
         DCL MYDA CHAR(44) VARYING;
         MYDA = SYMC('&GDGNAM');
         % INCLUDE CTLGDEF;
         DCL AREA CHAR(265);
         CTLGPTR = ADDR(AREA);
         DCL DSN CHAR(44) VARYING;
         DCL CTLGRETC CHAR(4),
             CTLGRET BIT(32) DEF CTLGRETC;
         DCL CTLGRETO CHAR(8);
         DCL CVOL CHAR(6) INIT('SYSRES');
         DELCNT = SYMA('&DELETE');
         DO I = 1 TO DELCNT;
              DSN = MYDA××(44)' ';
              CALL SYSCTLG('NAME',CTLGRET,DSN,CVOL,AREA);
              IF CTLGRET ^= 0
                   THEN CALL CTLGERR;
                   ELSE DO;
                        CVOL = SUBSTR(AREA,260,6);
                        CALL SYSCTLG('UNCAT',CTLGRET,DSN,CVOL);
                        IF CTLGRET ^= 0
                             THEN CALL CTLGERR;
                             ELSE DO;
                                  DSN=SUBSTR(DSN,1,SUFFIX(DSN,' '));
                                  @SETL(&PDSN=DSN);
                                  @SETL(&PVOL=VOLID.VOLSER(1));
                           @WRITE('UNCATALOGED, DSN=&PDSN, VOL=&PVOL');
                                  END;
                        END;
              END;
 CTLGERR:  PROC;
         CALL TROUT(CTLGRETC,CTLGRETO);
         @SETL(&CTLGRET=CTLGRETO);
         @SETL(&PDSN=MYDA);
         @WRITE('ERROR=&CTLGRET FOR DSN=&PDSN');
         END;
         END;
