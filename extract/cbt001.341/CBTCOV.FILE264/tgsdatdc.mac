.HE GENERALIZED SUBROUTINES - TGSDATDC
.HE TGSUPDAT UTILITY PROGRAM
.PL 55
.PN 0
.PA
.SS
.NF
5/24/74
AUTHOR:  T. SMITH
SOURCE MODULE NAME:  TGSDATDC
DOCUMENTATION ID:  NONE
.FI L
.SP 5
THE TGSUPDAT UTILITY PROGRAM PROVIDES FACILITIES FOR
STORING, UPDATING, AND RETRIEVING GROUPS OF 80-COLUMN CARD
IMAGES ON TAPE. THE TAPE OUTPUT FILE IS A SEQUENTIAL DATA SET
CONTAINING ANY NUMBER OF GROUPS OF CARD IMAGES ANALOGOUS TO MEMBERS
OF A PARTITIONED DATA SET.  THE USER CAN IDENTIFY A SPECIFIC
MEMBER FOR ADDITION TO THE FILE, UPDATING, REPLACEMENT, DELETION,
OR RETRIEVAL.
.SP 1
THIS PUBLICATION IS DESIGNED AS A REFERENCE FOR THE
TGSUPDAT UTILITY USER.  ITS TWO-PART FORMAT ALLOWS PRESENTATION
OF THE MATERIAL IN AN INSTRUCTIONAL FORMAT (PART I), AND AT THE
SAME TIME PROVIDES A QUICK REFERENCE TO SPECIFIC INFORMATION (PART II).
.PA
.CE 1
INDEX
.SP 1
PART I
.SP 1
6 - INITIALLY CREATING A TAPE MASTER FILE
.SP 1
8 - ADDING NEW MEMBERS TO AN OLD TAPE MASTER FILE
.SP 1
9 - REPLACEMENT OF EXISTING MEMBERS OF AN OLD TAPE
MASTER FILE
.SP 1
10 - MODIFYING EXISTING MEMBERS OF AN OLD TAPE MASTER FILE
.SP 1
12 - DELETING EXISTING MEMBERS FROM THE TAPE MASTER FILE
.SP 1
13 - RETRIEVING A MEMBER OF THE TAPE MASTER FILE IN
PUNCHED-CARD FORM.
.SP 1
14 - ADDING THE MEMBERS OF A PARTITIONED DATA SET TO THE
TAPE MASTER FILE
.SP 1
16 - OBTAINING A PRINTED LISTING OF ALL THE MEMBERS OF THE
TAPE MASTER FILE
.SP 1
17 - COPYING A SPECIFIC MEMBER FROM THE TAPE MASTER FILE TO A
PARTITIONED DATA SET.
.SP 1
18 - COPYING A GROUP OF RELATED MEMBERS FROM THE TAPE MASTER
FILE TO A PARTITIONED DATA SET.
.SP 1
20 - REDUCING THE NUMBER OF TIMES THE TGSUPDAT UTILITY
PROGRAM MUST BE EXECUTED.
.SP 1
21 - SPECIAL PROCESSING FOR MEMBER RECORDS BEGINNING
WITH ./
.SP 1
22 - MAINTAINING THE INTEGRITY OF SOURCE DATA IN COLUMNS 73-80.
.SP 1
23 - SCAN REPLACEMENT
.SP 1
PART II
.SP 1
25 - EXEC STATEMENT
.SP 1
26 - SYSPRINT DD STATEMENT
.SP 1
27 - SYSIN DD STATEMENT
.SP 1
28 - SYSUT1 DD STATEMENT
.SP 1
29 - SYSUT2 DD STATEMENT
.SP 1
30 - SYSUT3 DD STATEMENT
.SP 1
31 - SYSUT4 DD STATEMENT
.SP 1
32 - SYSUT5 DD STATEMENT
.SP 1
33 - PRINTER DD STATEMENT
.SP 1
34 - INDEX DD STATEMENT
.SP 1
35 - STATEMENTS WITH DDNAMES OTHER THAN THE ABOVE
.SP 1
36 - GROUP CODES
.SP 1
38 - CONTROL STATEMENT - GENERAL DESCRIPTION
.SP 1
39 - PRIMARY CONTROL STATEMENT FORMAT
.SP 1
42 - SUPPLEMENTARY CONTROL STATEMENT FORMAT
.SP 1
44 - CORE REQUIREMENTS
.SP 1
45 - CORE REQUIREMENTS FOR THE SYSUT1 DATA SET
.SP 1
46 - CORE REQUIREMENTS FOR THE SYSUT2 DATA SET
.SP 1
47 - CORE REQUIREMENTS FOR THE SYSUT3 DATA SET
.SP 1
48 - CORE REQUIREMENTS  FOR THE SYSUT4 DATA SET
.SP 1
49 - CORE REQUIREMENTS FOR THE SYSUT2 DATA SET
.SP 1
50 - CORE REQUIREMENTS FOR AN OUTPUT PDS
.SP 1
51 - CORE REQUIREMENTS FOR THE SYSIN DATA SET
.SP 1
52 - CORE REQUIREMENTS FOR THE PRINTER DATA SET
.SP 1
53 - CORE REQUIREMENTS FOR THE INDEX DATA SET
.SP 1
54 - CORE REQUIREMENTS FOR THE SYSPRINT DATA SET
.SP 1
55 - EXAMPLE TO ILLUSTRATE THE USE OF THE CORE
REQUIREMENTS TABULATIONS
.PA
.SP 10
.DS
.CE 4
TGSUPDAT
UTILITY PROGRAM
REFERENCE
PART I
.SS
.PA
PART I OF THIS PUBLICATION IS INTENDED TO BE TUTORIAL
IN NATURE.  A WOULD-BE USER OF THE TGSUPDAT UTILITY PROGRAM
SHOULD BEGIN WITH PAGE 1 OF THIS SECTION AND CONTINUE THRU
TO ITS CONCLUSION, USING PART II AS A GENERAL REFERENCE TO
ACQUIRE DETAILED INFORMATION.
.PA
.CE 1
INITIALLY CREATING A TAPE MASTER FILE
.SP 1
TO START WITH, SUPPOSE THAT A PROGRAMMER HAS A SOURCE DECK
THAT HE WANTS TO STORE ON A TAPE FOR RETRIEVAL AND USE AT
SOME LATER DATE.  TO DO THIS, THE PROGRAMMER WOULD ENTER THE
FOLLOWING IN THE INPUT STREAM
(NOTE THAT IN THIS EXAMPLE, AND IN ALL SUBSEQUENT EXAMPLES,
THE SPACING ON CONTROL STATEMENTS (CARDS HAVING ./ IN COLUMNS
1 AND 2) IS NOT AS IT WOULD BE IN A REAL SITUATION.  THE SPACING
HAS BEEN SHORTENED FOR EASE IN ILLUSTRATION.  FOR THE ACTUAL
SPACING, SEE SECTION II):
.SP 1
.IN 5
.NF
//UPDAT001 JOB MSGLEVEL=1
// EXEC PGM=TGSUPDAT
//SYSPRINT DD SYSOUT=A
//SYSUT2 DD DSN=TAPESORC(+1),
// DISP=(NEW,CATLG,DELETE),
// UNIT=TAPE
//SYSIN DD *
.LI
./       ADD   SOURCEA,00,0,1,01109900   N    S187001
SOURCEA START 0
        BC    14
        END
/*
.IN 0
.SP 1
.FI L
AT THE CONCLUSION OF THE SUCCESSFUL EXECUTION OF THE ABOVE JOB, THE USER
WILL HAVE ON THE TAPE DEFINED BY DD STATEMENT
SYSUT2 A COPY OF HIS SOURCE DECK.  THE TGSUPDAT UTILITY WILL
HAVE ADDED SEQUENCE NUMBERS IN COLUMNS 73 TO 80 TO THE CARD
IMAGES ON TAPE.  THE THREE STATEMENTS IN THE SOURCE WOULD BE
NUMBERED 00001000, 00002000, AND 00003000, RESPECTIVELY, SINCE
THE PROGRAM ASSIGNS THE SEQUENCE NUMBER 00001000 TO THE FIRST
SOURCE STATEMENT, AND INCREMENTS THIS NUMBER BY 1000 FOR EACH
SUBSEQUENT STATEMENT.  NOTE THAT IF THE USER HAD NOT CODED AN
N IN COLUMN 45 OF THE ADD CONTROL STATEMENT, THE PROGRAM
WOULD NOT HAVE ADDED NEW SEQUENCE NUMBERS IN 73-80.
IF THE USER HAD CODED AN L IN COLUMN 45 OF THE ADD CONTROL STATEMENT,
THE PROGRAM WOULD HAVE EXPANDED EACH RECORD TO 88 BYTES, INSERTING
SEQUENCE NUMBERS IN COLUMNS 81-88 (SEE THE SECTION ENTITLED "MAINTAINING
THE INTEGRITY OF SOURCE DATA IN COLUMNS 73-80" IN PART I OF THE MANUAL).
.SP 1
ALL OF THE BLANKS HAVE BEEN SQUEEZED OUT OF THE STATEMENTS ON TAPE
SO THAT, INSTEAD OF 240 BYTES BEING USED ON THE TAPE, ONLY 36
WERE REQUIRED.  WHEN THE SOURCE IS SUBSEQUENTLY RETRIEVED VIA THE
TGSUPDAT PROGRAM, THE BLANKS WILL AUTOMATICALLY BE REINSERTED.
.SP 1
BECAUSE THE USER PLACED A 1 FOLLOWING THE THIRD COMMA OF THE
ADD CONTROL STATEMENT, A COMPLETE LISTING OF THE SOURCE DECK WITH
ITS NEW SEQUENCE NUMBERS WILL BE PRINTED ON THE SYSPRINT DATA
SET.  IF THE USER HAD PLACED A 0 IN THAT POSITION OF THE CONTROL
STATEMENT, ONLY THE ADD CONTROL STATEMENT WOULD HAVE BEEN PRINTED.
.SP 1
NOTE THAT SSI DATA AND THE GROUP CODE (SEE PART II FOR DETAILS
CONCERNING GROUP CODE) FROM COLUMNS 73-80
WILL BE STORED ON THE TAPE ALSO.
.PA
.CE 1
ADDING NEW MEMBERS TO AN OLD TAPE MASTER FILE.
.SP 1
NOW, SUPPOSE THAT OUR PROGRAMMER HAS FOUR MORE DECKS HE WANTS
TO STORE ON HIS TAPE MASTER FILE.  TO DO THIS, HE ENTERS THE
FOLLOWING IN THE INPUT STREAM:
.SP 1
.IN 5
.NF
//UPDAT002 JOB MSGLEVEL=1
// EXEC PGM=TGSUPDAT
//SYSPRINT DD SYSOUT=A
//SYSUT1 DD DSN=TAPESORC(0),DISP=OLD
//DUMMY DD DSN=TAPESORC(-1),DISP=OLD,UNIT=(,,DEFER)
//SYSUT2 DD DSN=TAPESORC(+1),
// DISP=(NEW,CATLG,DELETE),
// VOL=REF=*.DUMMY
//SYSIN DD *
.LI
./       ADD   SOURCEB,00,0,1     N     S187101
 SOURCE DECK FOR SOURCEB GOES HERE
.LI
./       ADD   SOURCEC,00,0,1     N     S187103
 SOURCE DECK FOR SOURCEC GOES HERE
.LI
./       ADD   SOURCED,00,0,1     N     S188001
 SOURCE DECK FOR SOURCED GOES HERE
.LI
./       ADD   SOURCEE,00,0,1     N     S188002
 SOURCE DECK FOR SOURCEE GOES HERE
/*
.SP 1
.IN 0
.FI L
AT THE CONCLUSION OF THE SUCCESSFUL EXECUTION OF THE ABOVE JOB,
THE USER WILL HAVE ON THE TAPE DEFINED BY THE DD STATEMENT SYSUT2
A COPY OF FIVE SOURCE DECKS, EACH UNIQUELY IDENTIFIABLE BY ONE OF
THE NAMES SOURCEA, SOURCEB, SOURCEC, SOURCED, OR SOURCEE.  NOTE
THAT THE CONTROL STATEMENTS HAVE TO BE IN SEQUENCE ON THE SYSIN
DATA SET BY MEMBER NAME.
.PA
.CE 1
REPLACEMENT OF EXISTING MEMBERS OF AN OLD TAPE MASTER FILE
.SP 1
SUPPOSE THAT OUR PROGRAMMER NOW ENTERED THE FOLLOWING IN THE
INPUT STREAM:
.SP 1
.IN 5
.NF
//UPDAT003 JOB MSGLEVEL=1
// EXEC PGM=TGSUPDAT
//SYSPRINT DD SYSOUT=A
//SYSUT1 DD DSN=TAPESORC(0),DISP=OLD
//DUMMY DD DSN=TAPESORC(-1),DISP=OLD,UNIT=(,,DEFER)
//SYSUT2 DD DSN=TAPESORC(+1),
// DISP=(NEW,CATLG,DELETE),VOL=REF=*.DUMMY
//SYSIN DD *
.LI
./       ADD   SOURCEA,00,0,1     N     X187001
   NEW SOURCE DECK FOR SOURCEA GOES HERE
.LI
./       REPL  SOURCEE,00,0,1     N     S188002
   NEW SOURCE DECK FOR SOURCEE GOES HERE
.LI
./       REPL  SOURCEG,00,0,1     N     S188
   SOURCE DECK FOR SOURCEG GOES HERE
/*
.SP 1
.IN 0
.FI L
THE FOLLOWING WILL BE THE RESULTS OF THE SUCCESSFUL
EXECUTION OF THE ABOVE JOB:
.SP 1
.IN 5
(1)  THE SYSPRINT DATA SET WILL CONTAIN ERROR MESSAGES TO INDICATE
THAT THE FIRST ADD CONTROL STATEMENT ON THE SYSIN DATA SET WAS
REJECTED BECAUSE THERE ALREADY EXISTS ON THE OLD TAPE MASTER FILE
A MEMBER NAMED SOURCEA.
.SP 1
(2)  THE NEW TAPE MASTER FILE, WHICH IS DEFINED BY THE SYSUT2
DD STATEMENT, WILL CONTAIN 6 MEMBERS WITH THE NAMES SOURCEA,
SOURCEB, SOURCEC, SOURCED, SOURCEE, AND SOURCEG.  FOUR MEMBERS,
SOURCEA, -B, -C, AND -D, WILL ALL BE COPIES FROM THE OLD TAPE
MASTER FILE, WHICH IS DEFINED BY DD STATEMNET SYSUT1.  BOTH SOURCEE
AND SOURCEG WILL HAVE BEEN INTRODUCED FROM THE SYSIN DATA SET.
NOTE THAT THE TGSUPDAT PROGRAM ACCEPTED THE REPL CONTROL STATEMENT
FOR SOURCEG EVEN THOUGH A COPY OF SOURCEG DIDN'T EXIST ON THE OLD
TAPE MASTER FILE;  THE PROGRAM TREATS SUCH A REPLACEMENT OPERATION
AS AN ORIGINAL ADD OPERATION.
.IN 0
.PA
.CE 1
MODIFYING EXISTING MEMBERS OF AN OLD TAPE MASTER FILE
.SP 1
SUPPOSE THAT OUR PROGRAMMER NOW ENTERED THE FOLLOWING IN THE
INPUT STREAM:
.SP 1
.IN 5
.NF
//UPDAT004 JOB MSGLEVEL=1
// EXEC PGM=TGSUPDAT
//SYSPRINT DD SYSOUT=A
//SYSUT1 DD DSN=TAPESORC(0),DISP=OLD
//DUMMY DD DSN=TAPESORC(-1),DISP=OLD,UNIT=(,,DEFER)
//SYSUT2 DD DSN=TAPESORC(+1),
// DISP=(NEW,CATLG,DELETE),
// VOL=REF=*.DUMMY
//SYSIN DD *
.LI
./       CHNGE SOURCEA,00,0,1
         SR    15,15                        00001010
         BR    14                           00002000
.LI
./       CHNGE SOURCEB,00,0,1                S187201
/*
.SP 1
.IN 0
.FI L
THE FOLLOWING WILL BE THE RESULTS OF THE SUCCESSFUL EXECUTION
OF THE ABOVE JOB:
.SP 1
.IN 5
(1)  THE SYSPRINT DATA SET WILL APPEAR AS FOLLOWS:
.SP 1
.IN 10
.NF
         ./       CHNGE SOURCEA,00,0,0     SOURCEA
         SOURCEA  START 0                 00001000
INSERTED          SR    15,15             00001010
REPLACED          BC    14                00002000
INSERTED          BR    14                00002000
                  END                     00003000
(NEW PAGE)
         ./       CHNGE SOURCEB,00,0,0     SOURCEB
.SP 1
.FI L
.IN 5
(2)  THE NEW TAPE MASTER FILE WILL CONTAIN 6 MEMBERS WITH THE
NAMES SOURCE, -B, -C, -D, -E, AND -G.  FOUR MEMBERS, SOURCEC, -D,
-E, AND -G, WILL BE EXACT COPIES FROM THE OLD TAPE MASTER FILE.
THE MEMBER NAMED SOURCEB WILL BE AN EXACT COPY FROM THE OLD TAPE
MASTER FILE EXCEPT IT'S GROUP CODE WILL HAVE BEEN CHANGED FROM
S187101 TO S187201.
.SP
THE MEMBER NAMED SOURCEA APPEARS AS FOLLOWS IN THE OLD TAPE
MASTER FILE:
.IN 10
.SP 1
.NF
SOURCEA  START 0                          00001000
         BC    14                         00002000
         END                              00003000
.SP 1
.IN 5
.FI L
SOURCEA HAS BEEN CHANGED ACCORDING TO USER SPECIFICATIONS IN
THE NEW TAPE MASTER FILE AND APPEARS AS FOLLOWS:
.SP 1
.IN 10
.NF
SOURCEA  START 0                          00001000
         SR    15,15                      00001010
         BR    14                         00002000
         END                              00003000
.IN 0
.FI L
.PA
.CE 1
DELETING EXISTING MEMBERS FROM THE TAPE MASTER FILE
.SP 1
OUR PROGRAMMER DISCOVERS THAT THE USEFULNESS OF THE PROGRAM
SOURCED HAS COME TO AN END, AND HE NO LONGER NEEDS A COPY OF THE
SOURCE FOR IT ON THE TAPE MASTER FILE.  TO DELETE IT,
HE ENTERS THE FOLLOWING IN THE INPUT STREAM:
.SP 1
.IN 5
.NF
//UPDAT005 JOB MSGLEVEL=1
// EXEC PGM=TGSUPDAT
//SYSPRINT DD SYSOUT=A
//SYSUT1 DD DSN-TAPESORC(0),DISP=OLD
//DUMMY DD DSN=TAPESOURC(-1),DISP=OLD,UNIT=(,,DEFER)
//SYSUT2 DD DSN+TAPESORC(+1),
// DISP=(NEW,CATLG,DELETE),VOL=REF=*.DUMMY
//SYSIN DD *
.LI
./       DEL   SOURCED,00,0,0
/*
.SP 1
.IN 0
.FI L
THE SUCCESSFUL EXECUTION OF THIS JOB WILL RESULT IN A NEW
TAPE MASTER FILE WHICH DOESN'T CONTAIN A MEMBER NAMED SOURCED.
.PA
.CE 1
RETRIEVING A MEMBER OF THE TAPE MASTER FILE IN PUNCHED-CARD FORM
.SP 1
OUR PROGRAMMER HAS RECEIVED A REQUREST FROM ANOTHER PROGRAMMER
IN A PLANT IN ANOTHER CITY FOR A COPY OF PROGRAM SOURCEG.  OUR
PROGRAMMER INTENDS TO MAIL HIM A COPY OF SOURCEG IN THE FORM OF
PUNCHED CARDS.  TO DO THIS, HE ENTERS THE FOLLOWING IN THE INPUT
STREAM:
.SP 1
.IN 5
.NF
//UPDAT006 JOB MSGLEVEL=1
// EXEC PGM=TGSUPDAT
//SYSPRINT DD SYSOUT=A
//SYSUT1 DD DSN=TAPESORC(0),DISP=OLD
//SYSUT5 DD SYSOUT=B
//SYSIN DD *
.LI
./       PUNCH SOURCEG,00,0,1
/*
.SP 1
.IN 0
.FI L
THE RESULT OF THE SUCCESSFUL EXECUTION OF THE ABOVE JOB WILL BE
THAT A COPY OF SOURCEG WILL BE WRITTEN TO THE SYSUT5 DATA SET
WHICH HAS BEEN DIRECTED TO SYSOUT CLASS B, THIS INSTALLATIONS
CLASS FOR DATA SETS TO BE PUNCHED INTO CARDS.
ADDITIONALLY, THE SYSPRINT DATA SET WILL CONTAIN A LISTING OF
SOURCEG THAT OUR PROGRAMMER CAN MAIL ALONG WITH THE CARD DECK.
.PA
.CE 2
ADDING THE MEMBERS OF A PARTITIONED DATA SET
TO THE TAPE MASTER FILE
.SP 1
OUR PROGRAMMER HAS A PARTITIONED DATA SET NAMED SORCLIB WITH
TWO SOURCE DECKS IN IT WITH THE MEMBER NAMES SOURCEF AND SOURCEI.
HE WANTS TO STORE THESE TWO DECKS IN HIS TAPE MASTER FILE, SO
HE ENTERS THE FOLLOWING IN THE INPUT STREAM:
.SP 1
.IN 5
.NF
//UPDAT007 JOB MSGLEVEL=1
// EXEC PGM=TGSUPDAT
//SYSPRINT DD SYSOUT=A
//SYSUT1 DD DSN=TAPESORC(0),DISP=OLD
//DUMMY DD DSN=TAPESORC(-1),DISP=OLD,UNIT=(,,DEFER)
//SYSUT2 DD DSN=TAPESORC(+1),
// DISP=(NEW,CATLG,DELETE),VOL=REF=*.DUMMY
//SYSUT3 DD DSN=SORCLIB,DISP=SHR
.SP 1
.IN 0
.FI L
SUCCESSFUL EXECUTION WILL RESULT IN A NEW TAPE MASTER WHICH
IS A MERGE OF MEMBERS OF THE PARTITIONED DATA SET DEFINED BY THE
SYSUT3 DD STATEMENT, AND MEMBERS ON THE OLD TAPE MASTER FILE
DEFINED BY THE SYSYT1 DD STATEMENT.  THUS, THE NEW TAPE
MASTER FILE WOULD CONTAIN SEVEN MEMBERS, SOURCEA, -B, -C,
-E, -F, -G, AND -I.  OF THESE, SOURCEF AND SOURCEI CAME FROM THE
PARTITIONED DATA SORCLIB, AND THE REST CAME FROM THE OLD TAPE
MASTER FILE.  NOTE THAT IF BOTH THE SYSUT3 AND SYSUT1 DATA SET
CONTAIN MEMBERS WITH EQUAL NAMES, THE MEMBER FROM THE SYSUT1
DATA SET WILL BE REJECTED.
.SP 1
THE SSI DATA AND GROUP CODE ARE EXTRACTED FROM THE USER DATA
FIELD OF EACH DIRECTORY ENTRY, BUT LET'S ASSUME THAT OUR
PROGRAMMER IN THE EXAMPLE JUST SHOWN WASN'T SURE WHAT INFORMATION HE
HAD STORED IN THE DIRECTORY ENTRIES FOR SOURCEF AND SOURCEI.
IN THAT CASE THE PROGRAMMER COULD HAVE ENTERED THE FOLLOWING:
.SP 1
.IN 5
.NF
//UPDAT007 JOB MSGLEVEL=1
// EXEC PGM=TGSUPDAT
//SYSPRINT DD SYSOUT=A
//SYSUT1 DD DSN=TAPESORC(0),DISP=OLD
//DUMMY DD DSN=TAPESORC(-1),
// DISP=OLD,UNIT=(,,DEFER)
//SYSUT2 DD DSN=TAPESORC(+1),
// DISP=(NEW,CATLG,DELETE),VOL=REF=*.DUMMY
//SYSUT3 DD DSN=SORCLIB,DISP=SHR
//SYSIN DD *
.LI
./       CHNGE SOURCEF,00,0,0,04279901         S189001
.LI
./       CHNGE SOURCEI,00,0,0,04279901         M189002
/*
.SP 1
.IN 0
.FI L
RESULTS WILL BE THE SAME EXCEPT SSI DATA AND GROUP CODE FOR
SOURCEF AND SOURCEI ARE TAKEN FROM THE CHNGE CONTROL STATEMENTS
IN THE SYSIN DATA SET.
.SP 1
ALTERNATIVELY, THE PROGRAMMER COULD HAVE SPECIFIED A GROUP CODE
IN THE PARM FIELD OF THE EXEC CARD.  THIS GROUP CODE WOULD BE
ASSIGNED TO ALL MEMBERS COPIED FROM THE SYSUT3 DATA SET, REGARDLESS
OF WHETHER THEY ALREADY HAD A GROUP CODE.
.PA
.CE 2
OBTAINING A PRINTED LISTING OF ALL OF THE MEMBERS
OF THE MASTER FILE
.SP 1
NOW THAT THE PROGRAMMER HAS A NUMBER OF MEMBERS ON THE TAPE MASTER
FILE, HE WOULD LIKE TO OBTAIN A PRINTED LISTING OF ALL MEMBERS.
TO OBTAIN THIS, HE ENTERS THE FOLLOWING IN THE INPUT STREAM:
.SP 1
.IN 5
.NF
//UPDAT008 JOB MSGLEVEL=1
// EXEC PGM=TGSUPDAT
//SYSPRINT DD SYSOUT=A
//SYSUT1 DD DSN=TAPESORC(0),DISP=OLD
//PRINTER DD SYSOUT=A
.SP 1
.IN 0
.FI L
THE PRINTED LISTING DEFINED BY DD STATEMENT PRINTER USES
ASA CARRIAGE CONTROL, AND 60 LINES ARE PRINTED ON EACH PAGE,
AND A NEW PAGE IS STARTED FOR EACH MEMBER PRINTED.  AT THE
BOTTOM OF EACH PAGE A SPECIAL TRAILER LINE IS PRINTED CONTAINING
MEMBER NAME, GROUP CODE, SSI DATA, AND PAGE NUMBER.
.SP 1
IF THE PROGRAMMER HAD DESIRED AN INDEX TO THE PRINTED LISTING,
HE COULD HAVE ADDED THE FOLLOWING DD STATEMENT TO HIS JCL:
.SP 1
.IN 5
//INDEX DD SYSOUT=A
.SP 1
.IN 0
EACH LINE IN THE INDEX DATA SET WOULD CONTAIN A MEMBER NAME,
ITS GROUP CODE, AND THE PAGE NUMBER IN THE PRINTER DATA SET
ON WHICH THAT MEMBER IS PRINTED.  IN OUR EXAMPLE, THE INDEX DATA
SET WOULD APPEAR AS FOLLOWS:
.SP 1
.IN 5
.NF
SOURCEA    S187001     1
SOURCEB    S187201     2
SOURCEC    S187103     3
SOURCEE    S188002     4
SOURCEF    S189001     5
SOURCEG    S188        6
SOURCEI    M189002     7
.SP 1
.IN 0
.FI L
.PA
.CE 2
COPYING A SPECIFIED MEMBER FROM THE TAPE MASTER FILE
TO A PARTITIONED DATA SET.
.SP 1
THE TIME HAS COME WHEN OUR PROGRAMMER WISHES TO RETRIEVE
ONE OF THE MEMBERS OF THE TAPE MASTER FILE TO DO A COMPILE OF
THE PROGRAM.  TO GET A COPY OF SOURCEB INTO A PARTITIONED DATA
SET FROM WHICH IT CAN BE ACCESSED BY THE COMPILER, THE FOLLOWING
IS EXECUTED:
.SP 1
.IN 5
.NF
//UPDAT009 JOB MSGLEVEL=1
// EXEC PGM=TGSUPDAT
//SYSPRINT DD SYSOUT=A
//SYSUT1 DD DSN=TAPESORC(0),DISP=OLD
//SOURCEB DD DSN=&S,DISP=(NEW,PASS),
// UNIT=SYSDA,SPACE=(TRK,(1,1,1))
// EXEC ASMFC
//ASM.SYSIN DD DSN=&S(SOURCEB),DISP=OLD
.SP 1
.IN 0
.FI L
AT THE END OF THE SUCCESSFUL EXECUTION OF THE ABOVE JOB,
SOURCEB WILL HAVE BEEN COMPILED BY THE ASSEMBLER LANGUAGE
COMPILER.  THE TGSUPDAT UTILITY PROGRAM SEARCHES FOR DD
STATEMENTS WITH DDNAMES OTHER THAN STEPLIB, SYSUDUMP, SYSABEND,
SYSPRINT, SYSUT1, SYSUT2, SYSUT3, SYSUT4, SYSUT5, INDEX, PRINTER
SYSIN, JOBLIB, BLANK, OR DUMMY.  IF IT FINDS SUCH A DD STATEMENT,
AND THE DDNAME DOES NOT BEGIN WITH A DOLLAR SIGN($), THE UTILITY
PROGRAM WILL WRITE INTO THAT PARTITIONED DATA SET, THE MEMBER FROM THE
TAPE MASTER FILE WHOSE NAME MATCHES THE DDNAME.  NOTE THAT IF A
TAPE MEMBER QUALIFIES TO BE WRITTEN TO MORE THAN ONE DATA SET
DEFINED BY THE DD STATEMENTS DESCRIBED ABOVE, IT IS WRITTEN ONLY
TO THE PARTITIONED DATA SET WHOSE DDNAME APPEARS FIRST IN THE TIOT.
.PA
.CE 2
COPYING A GROUP OF RELATED MEMBERS FROM THE TAPE
MASTER FILE TO A PARTITIONED DATA SET
.SP 1
OUR PROGRAMMER NOW WANTS TO DO A COMPILE OF ALL THE SOURCE
DECKS ON THE TAPE MASTER FILE THAT ARE ASSOCIATED WITH PROJECT
#187.  USING FORETHOUGHT, HE USED THE THREE-DIGIT PROJECT NUMBER
AS CHARACTERS 2 THRU 4 OF THE GROUP CODE FOR EACH MEMBER ON THE
TAPE.  TO RUN COMPILES FOR ALL SOURCE ASSOCIATED WITH PROJECT
#187, THE FOLLOWING IS ENTERED IN THE INPUT STREAM:
.SP 1
.IN 5
.NF
//UPDAT010 JOB MSGEVEL=1
// EXEC PGM=TGSUPDAT
//SYSPRINT DD SYSOUT=A
//SYSUT1 DD DSN=TAPESORC(0),DISP=OLD
//$$187$$$ DD DSN=&S,DISP=(NEW,PASS),
// UNIT=SYSDA,SPACE=(TRK,(1,1,1))
// EXEC ASMFC
//ASM.SYSIN DD DSN=&S(SOURCEA),DISP=OLD
// EXEC ASMFC
//ASM.SYSIN DD DSN=&S(SOURCEB),DISP=OLD
// EXEC ASMFC
//ASM.SYSIN DD DSN=&S(SOURCEC),DISP=OLD
.SP 1
.IN 0
.FI L
AT THE END OF THE SUCCESSFUL EXECUTION OF THE ABOVE JOB,
SOURCEA, -B, AND -C, THE THREE SOURCE DECKS ON THE TAPE
MASTER FILE THAT ARE ASSOCIATED WITH PROJECT #187, WILL HAVE
BEEN COMPILED.
.SP 1
THE TGSUPDAT UTILITY PROGRAM SEARCHES FOR DD STATEMENTS WITH
DDNAMES OTHER THAN STEPLIB, SYSUDUMP, SYSABEND, SYSPRINT, SYSUT1,
SYSUT2, SYSUT3, SYSUT4, SYSUT5, INDEX, PRINTER, SYSIN, JOBLIB,
BLANK, OR DUMMY.  IF HE FINDS SUCH A DD STATMENET, AND THE DDNAME
BEGINS WITH A DOLLAR SIGN ($), THE UTILITY PROGRAM WILL WRITE
INTO THAT PARTITIONED DATA THOSE MEMBERS FROM THE TAPE MASTER FILE WHICH
GROUP CODES PASS A SPECIA COMPARISON WITH THE DDNAME AS FOLLOWS:
FOR A GIVEN MEMBER, THE GROUP CODE IS COMPARED ONE CHARACTER AT A
TIME WITH CHARACTERS 2 THRU 8 OF THE SPECIAL DDNAME.  A DOLLAR
SIGN ($) IN EITHER THE GROUP CODE OR THE DDNAME WILL BE COUNTED
AS AN EQUAL COMARISON, NO MATTER WHAT CHARACTER IT IS BEING
COMPARED TO.  IF ALL SEVEN CHARACTERS COMPARE EQUALLY, THAT
MEMBER OF THE TAPE MASTER FILE IS WRITTEN TO THE PARTITIONED
DATA SET DEFINED BY THE DD STATEMNET WITH THE SPECIAL DDNAME.
.SP 1
ONE MORE EXAMPLE MUST BE GIVEN TO FULLY ILLUSTRATE THIS FACILITY
OF THE TGSUPDAT PROGRAM.  IN THIS EXAMPLE, OUR PROGRAMMER WISHES
TO COMPILE ALL OF THE PROGRAMS ASSOCIATED WITH PROJECT #189.
PROGRAMS WRITTEN FOR THIS PROJECT ALL USE MACROS ON THE TAPE.
USING FORETHOUGHT, OUR PROGRAMMER HAS IDENTIFIED ALL MACROS
ON THE TAPE BY USING AN M AS THE FIRST LETTER IN THEIR GROUP
CODES.  SOURCE PROGRAMS ARE IDENTIFIED WITH THE LETTER S IN
THE FIRST POSITION OF THEIR GROUP CODES.  THUS, THE
PROGRAMMER ENTERS THE FOLLOWING IN THE INPUT STREAM:
.SP 1
.IN 5
.NF
//UPDAT011 JOB MSGLEVEL=1
// EXEC PGM=TGSUPDAT
//SYSPRINT DD SYSOUT=A
//SYSUT1 DD DSN=TAPESORC(0),DISP=OLD
//$M189$$$ DD DSN=&M,DISP=(NEW,PASS),
// UNIT=SYSDA,SPACE=(TRK,(1,1,1))
//$S189$$$ DD DSN=&S,DISP=(NEW,PASS),
// UNIT=SYSDA,SPACE=(TRK,(1,1,1))
// EXEC ASMFC
//ASM.SYSLIB DD DSN=&M,DISP=OLD
//ASM.SYSIN DD DSN=&S(SOURCEF),DISP=OLD
.SP 1
.IN 0
.FI L
.PA
.CE 2
REDUCING THE NUMBER OF TIMES THE TGSUPDAT
UTILITY PROGRAM MUST BE EXECUTED
.SP 1
OVER THE PERIOD OF THE NEXT WEEK, OUR PROGRAMMER IS GOING TO
BE IMPLEMENTING DESIGN CHANGES WHICH REQUIRE MODIFICATIONS TO
THE SOURCE PROGRAMS ON THE TAPE MASTER FILE.  RATHER THAN
EXECUTE THE TGSUPDAT UTILITY PROGRAM FOR EVERY CHANGE THAT COMES
UP DURING THE WEEK, HE WANTS TO SAVE THEM UP AND UPDATE THE MASTER
FILE IN ONE RUN AT THE END OF THE WEEK.  TO FACILITATE THIS, HE
PUTS THE CHANGES FOR EACH SOURCE PROGRAM OUT ON A PARTITIONED
DATA SET CALLED SORCMOD (THE NAME IS PURELY ARBITRARY) WITH THE
SAME MEMBER NAME AS THE MEMBER NAME ON THE TAPE MASTER FILE TO WHICH
THE CHANGES APPLY.  THUS, THE CHANGES FOR SOURCE PROGRAM
SOURCEA ARE PLACED IN THE PARTITIONED DATA SET UNDER THE MEMBER
NAME SOURCEA.  THE CHANGES AND CONTROL STATEMENT ARE IN THE
SAME FORMAT AS THEY WOULD APPEAR IN THE SYSIN DATA SET EXCEPT
CONTROL STATEMENTS ARE IDENTIFIED WITH THE CHARACTERS "*/"
IN COLUMNS 1 AND 2 INSTEAD OF "./".  THEN AT THE END OF THE WEEK,
HE WOULD ENTER THE FOLLOWING IN THE INPUT STREAM:
.SP 1
.IN 5
.NF
//UPDAT012 JOB MSGLEVEL=1
// EXEC PGM=TGSUPDAT
//SYSPRINT DD SYSOUT=A
//SYSUT1 DD DSN=TAPESORC(0),DISP=OLD
//DUMMY DD DSN=TAPESORC(-1),DISP=OLD,UNIT=(,,DEFER)
//SYSUT2 DD DSN=TAPESORC(+1),
// DISP=(NEW,CATLG,DELETE),VOL=REF=*.DUMMY
//SYSUT4 DD DSN=SORCMOD,DISP=SHR
.SP 1
.IN 0
.FI L
THE TGSUPDAT UTILITY PROGRAM WILL ACCESS THE MEMBERS OF SORCMOD
IN SEQUENCE BY MEMBER NAME TREATING THE DATA AS THOUGH IT WERE
COMING FROM THE SYSIN DATA SET.
.SP 1
NOTE THAT IF OUR PROGRAMMER HAD HAD ANY LAST MINUTE CHANGES,
HE COULD HAVE INCLUDED THEM FOLLOWING A SYSIN DD * STATEMENT.
THESE CHANGES WOULD HAVE BEEN MERGED ACCORDING TO MEMBER NAME.
IF CHANGES FOR THE SAME MEMBER WERE FOUND ON BOTH SYSUT4
AND SYSIN, THOSE FROM SYSIN WILL TAKE EFFECT AND
THOSE FROM SYSUT4 WILL BE REJECTED.
.PA
.CE
SPECIAL PROCESSING FOR MEMBER RECORDS BEGINNING WITH ./
.SP 1
SUPPOSE THAT OUR PROGRAMMER HAS A CARD DECK CONTAINING
CARDS WITH THE CHARACTERS "./" IN COLUMNS 1 AND 2, AND
COLUMNS 3 THRU 9 ARE BLANK.  HE WISHES TO PUT THIS CARD DECK
ON HIS TAPE MASTER FILE.  SINCE THE CHARACTERS "./" IN
COLUMNS 1 AND 2 NORMALLY IDENTIFY A CONTROL STATEMENT (PROVIDED
COLUMNS 3 THRU 9 ARE BLANK) TO THE TGSUPDAT UTILITY PROGRAM,
SOME SPECIAL HANDLING WILL BE REQUIRED.  THE FOLLOWING WOULD BE
ENTERED IN THE INPUT STREAM:
.SP 1
.IN 5
.NF
//UPDAT013 JOB MSGLEVEL=1
// EXEC PGM=TGSUPDAT
//SYSPRINT DD SYSOUT=A
//SYSUT1 DD DSN=TAPESORC(0),DISP=OLD
//DUMMY DD DSN=TAPESORC(-1),DISP=OLD,UNIT=(,,DEFER)
//SYSUT2 DD DSN=TAPESORC(+1),
// DISP=(NEW,CATLG,DELETE),VOL=REF=*.DUMMY
//SYSIN DD *
.LI
./       ADD   SOURCEJ,00,1,1     J187001
  CARDS FOR SOURCEJ GO HERE
.LI
./       ENDTG
.LI
./       ADD   SOURCEK,00,0,1     S187005
  CARDS FOR SOURCEK GO HERE
/*
.SP 1
.IN 0
.FI L
IN THE ABOVE EXAMPLE, THE 1 FOLLOWING THE SECOND COMMA
ON THE ADD CONTROL STATEMENT TELLS THE TGSUPDAT UTILITY
PROGRAM THAT THIS MEMBER CONTAINS SOME RECORDS WITH THE CHARACTERS
"./" IN COLUMNS 1 AND 2, COLUMNS 3 THRU 8 BEING BLANK.
THE ENDTG CONTROL STATEMENT TELLS THE
PROGRAM THAT THE NEXT CARD IMAGE ENCOUNTERED WILL BE A CONTROL STATEMENT
AND NOT A RECORD WHICH IS PART OF SOURCEJ.  THUS, SOURCEK IS ADDED
AS A SEPARATE MEMBER TO THE TAPE MASTER FILE AND IS NOT CONSIDERED
PART OF SOURCEJ.  OBVIOUSLY, SOURCEJ MAY NOT INCLUDE A CARD WITH
THE CHARACTERS "./       ENDTG" IN COLUNNS 1 THRU 14.
.PA
.CE 1
MAINTAINING THE INTEGRITY OF SOURCE DATA IN COLUMNS 73-80
.SP 1
THERE MIGHT COME A TIME WHEN A USER WANTS TO STORE A CARD DECK
ON TAPE WITH SEQUENCE NUMBERS ADDED BY THE TGSUPDAT UTILITY
PROGRAM WITHOUT DISTURBING THE ORIGINAL CONTENTS OF COLUMNS
73-80.  TO DO THIS, THE USER PLACES THE CHARACTER L IN COLUMN 45
OF THE ADD CONTROL STATEMENT USED TO PLACE THE CARD DECK ON TAPE.
THIS IS THE SIGNAL FOR THE TGSUPDAT PROGRAM TO ADD 8 BYTES
CONTAINING SEQUENCE NUMBERS TO EACH CARD IMAGE BEFORE WRITING IT
TO THE TAPE MASTER.
.SP 1
WHEN SUBSEQUENTLY SUBMITTING A CHNGE CONTROL STATEMENT FOR SUCH
A "LONG" MEMBER, EACH MODIFYING RECORD FOLLOWING THAT CHNGE CONTROL
STATEMENT IN THE INPUT STREAM MUST BE WRITTEN ON TWO CARD IMAGES:
THE FIRST CONTAINS COLUMNS 1-80 FOR THE MODIFYING RECORD; THE
SECOND CONTAINS THE SEQUENCE NUMBER FOR THE MODIFYING RECORD IN
IN COLUMNS 1-8.  THE TGSUPDAT UTILITY WILL COMBINE EACH PAIR OF
RECORDS IN THE INPUT STREAM TO PRODUCE THE DESIRED 88-CHARACTER
RECORDS.  TO INDICATE THAT THE INPUT RECORDS ARE IN THIS UNUSUAL
FORMAT, THE USER MUST PLACE AN L IN COLUMN 45 OF THE CHNGE CONTROL
STATEMENT.
.PA
.CE
SCAN REPLACEMENT
.SP 1
THROUGH USE OF THE REP CONTROL STATEMENT, ALL OCCURRENCES
OF A GIVEN CHARACTER STRING IN A MEMBER OF THE MASTER FILE
CAN BE REPLACED WITH ANOTHER CHARACTER STRING OF EQUAL LENGTH.
FOR EXAMPLE, SUPPOSE A MEMBER OF THE MASTER FILE IS COMPOSED
OF JCL (JOB CONTROL) STATEMENTS IN WHICH ALL THE FILE NAMES
BEGIN WITH "SYS1."  THE REP CONTROL STATEMENT CAN BE USED TO
REPLACE ALL OCCURRENCES OF "SYS1" WITH THE CHARACTERS "SYS2".
SEE PART II FOR FURTHER DETAIL.
.PA
.SP 5
.DS
.CE 4
TGSUPDAT
UTILITY PROGRAM
REFERENCE
PART II
.SS
.PA
.CE 1
EXEC STATEMENT
.SP 1
//STEPNAME EXEC PGM=TGSUPDAT,REGION=DDDK,PARM='GGGGGGGG'
.SP 1
GGGGGGGG
.IN 5
THE NEW GROUP CODE TO BE ASSIGNED TO ALL THE MEMBERS INCLUDED FROM THE
SYSUT3 DATA SET.  NOTE THAT THE FIRST CHARACTER SHOULD EITHER BE BLANK
OR A DOLLAR SIGN($).
.PA
.CE 1
SYSPRINT DD STATEMENT
.SP 1
THIS STATEMENT MUST BE PRESENT IN ORDER TO EXECUTE THE TGSUPDAT
UTILITY PROGRAM.  IF IT IS NOT PRESENT, THE PROGRAM WILL ABNORMALLY
TERMINATE WITH A USER COMPLETION CODE OF 1111.
.SP 1
THE SYSPRINT STATEMENT DEFINES A SEQUENTIAL MESSAGE DATA SET WRITTEN
USING THE QSAM ACCESS METHOD.  LRECL=90, AND RECFM=FBA ARE DEFINED
IN THE DCB IN THE PROGRAM.  THE USER MAY SPECIFY THE BLKSIZE PARAMETER
ON THE SYSPRINT STATEMENT, BUT IF HE DOES NOT, A DEFAULT BLKSIZE OF 900
WILL BE SET UP BY THE PROGRAM.
.PA
.CE 1
SYSIN DD STATEMENT
.SP 1
THIS STATEMENT DEFINES THE CONTROL DATA SET.  CONTROL STATEMENTS AND
REPLACEMENTS OR ADDITIONS TO 80-COLUMN CARD IMAGES ON THE TAPE MASTER
FILE MAY BE ENTERED IN THIS DATA SET.  THE PROGRAM WILL PROCESS THIS
FILE USING QSAM.  A FAILURE TO SUCCESSFULLY OPEN THE DCB WILL RESULT
IN ABNORMAL TERMINATION OF THE PROGRAM WITH A USER COMPLETION CODE OF
1111.  NO SYNAD ROUTINE IS SPECIFIED SO SYSTEM ACTION IS TAKEN IN THE
EVENT OF AN UNCORRECTABLE I/O ERROR.
.SP 1
NOTE:  THIS DD STATEMENT IS OPTIONAL AND NEED NOT BE SPECIFIED TO RUN
THE TGSUPDAT UTILITY PROGRAM.
.PA
.CE 1
SYSUT1 DD STATEMENT
.SP 1
THIS STATEMENT DEFINES THE INPUT (OLD MASTER) DATA SET.  THE GROUPS OF
80-COLUMN (OR 88-COLUMN) CARD IMAGES IN THIS DATA SET WILL BE
MASSAGED ACCORDING TO
CONTROL STATEMENTS PROVIDED BY THE USER TO PRODUCE THE OUTPUT FROM
TGSUPDAT UTILITY PROGRAM.
.SP 1
THIS DATA SET WAS CREATED BY THE TGSUPDAT UTILITY PROGRAM IN A PREVIOUS
EXECUTION AS THE DATA SET DEFINED BY THE SYSUT2 DD STATEMENT.  FOR
DETAILS CONCERNING IT'S STRUCTURE, SEE THAT PART OF THIS PUBLICATION
CONCERNING THE SYSUT2 DATA SET.  IT SHOULD BE NOTED HERE, HOWEVER THAT
FAILURE TO SUCCESSFULLY OPEN THE DCB FOR THE SYSUT1 DATA SET RESULTS IN
ABNORMAL TERMINATION OF THE PROGRAM WITH A USER COMPLETION CODE OF 1111,
AND THAT NO SYNAD ROUTINE IS SPECIFIED IN THE DCB.
.SP 1
NOTE:  THIS DD STATEMENT IS OPTIONAL AND NEED NOT BE SPECIFIED TO RUN
THE TGSUPDAT UTILITY PROGRAM.
.PA
.CE 1
SYSUT2 DD STATEMENT
.SP 1
THIS STATEMENT DEFINES THE OUTPUT (NEW MASTER) DATA SET.  THIS
DATA SET CONTAINS THE GROUPS OF 80 COLUMN (OR 88-COLUMN) CARD IMAGES
WHICH HAVE BEEN MASSAGED ACCORDING TO CONTROL STATEMENTS PROVIDED BY
THE USER.
.SP 1
THE DCB FOR THE DATA SET SPECIFIES BSAM, AND RECFM=U.  THE USER MAY
SPECIFY THE BLKSIZE PARAMETER ON THE SYSUT2 STATEMENT, BUT IF HE
DOES NOT, A DEFAULT BLKSIZE OF 7294 WILL BE SET UP BY THE PROGRAM.
.SP 1
TO REDUCE I/O OVERHEAD, ALL OF THE BLANKS ARE REMOVED FROM THE
CARD IMAGES BEFORE THEY ARE WRITTEN INTO THE SYSUT2 DATA SET.  THIS
CAN ADD GREATLY TO THE EFFICIENCY OF THE PROGRAM, SINCE AN OVERALL
REDUCTION IN SIZE OF AS MUCH AS 80 PERCENT CAN SOMETIMES BE ACHIEVED.
.SP 1
FAILURE TO SUCCESSFULLY OPEN THE DCB FOR THE SYSUT2 DATA SET RESULTS IN
ABNORMAL TERMINATION WITH A USER COMPLETION CODE OF 1111.  NOTE THAT
NO SYNAD ROUTINE IS SPECIFIED IN THE DCB.
.SP 1
NOTE:  THIS DD STATEMENT IS OPTIONAL AND NEED NOT BE SPECIFIED TO
RUN THE TGSUPDAT UTILITY PROGRAM.
.PA
.CE 1
SYSUT3 DD STATEMENT
.SP 1
THIS STATEMENT DEFINES A PARTITIONED DATA SET CONTAINING MEMBERS
COMPRISED OF 80 COLUMN CARD IMAGES.  THESE MEMBERS WILL BE MERGED
WITH THOSE FROM THE DATA SET DEFINED BY THE SYSUT1 DD STATEMENT, AND
FED TO THE TGSUPDAT UTILITY PROGRAM AS THE INPUT OR OLD MASTER DATA
SET.
.SP 1
FAILURE TO SUCCESSFULLY OPEN THE DCB FOR THE SYSUT3 DATA SET RESULTS
IN ABNORMAL TERMINATION WITH A USER COMPLETION CODE OF 1111.  NO
SYNAD ROUTINE IS SPECIFIED, SO THAT SYSTEM ACTION IS TAKEN ON AN
UNCORRECTABLE I/O ERROR.  IF AN ERROR IS ENCOUNTERED BY THE PROGRAM
WHEN USING THE FIND MACRO, IT WILL ABNORMALLY TERMINATE WITH A USER
COMPLETION CODE OF 3333.
.SP 1
NOTE:  THIS DD STATEMENT IS OPTIONAL AND NEED NOT BE SPECIFIED TO
RUN THE TGSUPDAT UTILITY.
.SP 1
NOTE:  IF BOTH THE SYSUT1 AND SYSUT3 DATA SET CONTAIN A MEMBER WITH
THE SAME NAME, THE MEMBER FROM THE SYSUT1 WILL BE REJECTED.
.SP 1
NOTE:  IF YOU DESIRE, YOU CAN CHANGE THE GROUP CODE OF ALL MEMBERS
COPIED FROM THE SYSUT3 DATA SET BY SPECIFYING A NEW GROUP CODE IN THE
PARM FIELD OF THE EXEC STATEMENT.
.PA
.CE 1
SYSUT4 DD STATEMENT
.SP 1
THIS STATEMENT DEFINES A PARTITIONED DATA SET CONTAINING MEMBERS
COMPRISED OF CONTROL STATEMENTS AND REPLACEMENTS OR ADDITIONS
TO 80-COLUMN CARD IMAGES ON THE TAPE MASTER FILE.  BASED ON
MEMBER-NAME, THIS DATA WILL BE MERGED WITH THE DATA DEFINED
BY THE SYSIN DD STATEMENT, AND FED TO THE TGSUPDAT UTILITY
PROGRAM AS THE CONTROL DATA SET.
.SP 1
TGSUPDAT PLACES TWO IMPORTANT RESTRICTIONS ON THIS DATA SET:
(1) ALL CONTROL STATEMENTS WILL BE IDENTIFIED WITH THE CHARACTERS
*/ IN COLUMNS 1 AND 2 INSTEAD OF ./ AS THEY WOULD BE IN THE
SYSIN DATA SET; (2) ONLY THE FIRST SEQUENTIAL MEMBER IN THE SYSUT4
DATA SET MUST BEGIN WITH A CONTROL STATEMENT.
.SP 1
FAILURE TO SUCCESSFULLY OPEN THE DCB FOR THE SYSUT4 DATA SET RESULTS
IN ABNORMAL TERMINATION WITH A USER COMPLETION CODE OF 1111.  NO SYNAD
ROUTINE IS SPECIFIED SO SYSTEM ACTION IS TAKEN ON AN UNCORRECTIBLE I/O
ERROR.  IF AN ERROR IS ENCOUNTERED BY THE PROGRAM WHEN USING THE FIND
MACRO, IT WILL ABNORMALLY TERMINATE WITH A USER COMPLETION CODE OF 3333.
.SP 1
NOTE:  THIS DD STATEMENT IS OPTIONAL AND NEED NOT BE SPECIFIED
TO RUN THE TGSUPDAT UTILITY PROGRAM.
.PA
.CE 1
SYSUT5 DD STATEMENT
.SP 1
THIS STATEMENT DEFINES A SEQUENTIAL OUTPUT DATA SET COMPOSED OF THOSE
MEMBERS FROM THE INPUT OR OLD MASTER DATA SET SPECIFIED IN PUNCH CONTROL
STATEMENTS.
.SP 1
THE DCB FOR THE DATA SET SPECIFIES QSAM, AND HAS FIXED VALUES OF
LRECL=80 AND RECFM=FB.  THE USER MAY SPECIFY THE BLKSIZE PARAMETER ON
THE SYSUT5 STATEMENT, BUT IF HE DOES NOT, A DEFAULT BLKSIZE OF 800 WILL
BE SET UP BY THE PROGRAM.
.SP 1
FAILURE TO SUCCESSFULLY OPEN THE DCB FOR THE SYSUT5 DATA SET RESULTS
IN ABNORMAL TERMINATION WITH A USER COMPLETION CODE OF 1111.  NO
SYNAD ROUTINE IS SPECIFIED IN THE DCB.
.SP 1
THIS DD STATEMENT IS OPTIONAL AND NEED NOT BE SPECIFIED TO RUN THE
TGSUPDAT UTILITY PROGRAM.
.PA
.CE 1
PRINTER DD STATEMENT
.SP 1
THIS STATEMENT DEFINES A SEQUENTIAL OUTPUT DATA SET WHICH WILL CONTAIN
A PRINTABLE LISTING OF ALL THE CARD IMAGES WRITTEN TO THE TAPE OUTPUT OR
NEW MASTER DATA SET.
.SP 1
THE DCB FOR THE DATA SET SPECIFIES QSAM, AND HAS FIXED VALUES OF
LRECL=89, RECFM=FBA.  THE USER MAY SPECIFY THE BLKSIZE PARAMETER ON THE
PRINTER DD STATMEMENT, BUT IF HE DOES NOT, A DEFAULT BLKSIZE OF 890 WILL
BE SET UP BY THE PROGRAM.
.SP 1
THE DATA SET IS DESIGNED FOR PRINTING ON 1411 SIZE PAPER.  THE PROGRAM
HAS ASSUMED THAT ASA CARRIAGE CONTROL CHARACTER '1' WILL CAUSE A SKIP
TO A NEW PAGE.  THE PROGRAM SKIPS TO A NEW PAGE EACH TIME A NEW MEMBER
IS ENCOUNTERED, AND AFTER PRINTING 60 LINES ON A PAGE, REGARDLESS.
AT THE BOTTOM OF EACH PAGE, THE PROGRAM PRINTS A LINE CONTAINING (1)
MEMBER NAME THAT THE CARD IMAGES PRINTED ON THE PAGE BELONG TO AND
(2) GROUP CODE AND (3) PAGE NUMBER.
.SP 1
FAILURE TO SUCCESSFULLY OPEN THE DCB FOR THE PRINTER DATA SET RESULTS
IN ABNORMAL TERMINATION WITH A USER COMPLETION CODE OF 1111.  NO SYNAD
ROUTINE IS SPECIFIED IN THE DCB.
.SP 1
THIS DD STATEMENT IS OPTIONAL AND NEED NOT BE SPECIFIED TO RUN THE
TGSUPDAT UTILITY PROGRAM.
.SP 1
NOTE:  MEMBERS WITH A GROUP CODE BEGINNING WITH THE LETTER O WILL NOT
BE PRINTED.
.SP 1
NOTE:  RECORDS HAVING A 12-2-9 PUNCH IN POSITION 1 WILL NOT BE PRINTED.
.PA
.CE 1
INDEX DD STATEMENT
.SP 1
THIS STATEMENT DEFINES A SEQUENTIAL OUTPUT DATA SET WHICH WILL CONTAIN
A PRINTABLE LISTING THAT PROVIDES AN INDEX TO THE REPORT WRITTEN ON THE
DATA SET DEFINED BY THE PRINTER DD STATEMENT.
.SP 1
THE DCB FOR THE DATA SET SPECIFIES QSAM, AND HAS FIXED VALUES OF
LRECL=81, RECFM=FBA.  THE USER MAY SPECIFY THE BLKSIZE PARAMETER ON
THE INDEX DD STATEMENT, BUT IF HE DOES NOT, A DEFAULT BLKSIZE OF 810
WILL BE SET UP BY THE PROGRAM.
.SP 1
THE DATA SET IS DESIGNED FOR PRINTING ON 1411 SIZE PAPER.  EACH PRINT
LINE WILL CONTAIN (1) MEMBER NAME (2) GROUP CODE AND (3) PAGE NUMBER.
.SP 1
FAILURE TO SUCCESSFULLY OPEN THE DCB FOR THE INDEX DATA SET RESULTS
IN ABNORMAL TERMINATION WITH A USER COMPLETION CODE OF 1111.  NO
SYNAD ROUTINE IS SPECIFIED IN THE DCB.
.SP 1
THIS DD STATEMENT IS OPTIONAL AND NEED NOT BE SPECIFIED TO RUN THE
TGSUPDAT UTILITY PROGRAM.
.PA
.CE
STATEMENTS WITH DDNAMES OTHER THAN
STEPLIB
SYSUDUMP
SYSABEND
SYSPRINT
SYSUT1
SYSUT2
SYSUT3
SYSUT4
SYSUT5
INDEX
PRINTER
SYSIN
DUMMY
JOBLIB
BLANKS
.EN
.SP 1
DD STATEMENTS HAVING DDNAMES OTHER THAN THOSE SPECIFIED ABOVE ARE
ASSUMED
BY THE PROGRAM TO DEFINE PARTITIONED DATA SETS INTO WHICH THE PROGRAM
WILL COPY CERTAIN MEMBERS FROM THE TAPE MASTER FILE.  THE LOGIC USED
IN DETERMINING WHETHER A GIVEN MEMBER SHOULD BE WRITTEN TO ONE OF THESE
PARTITIONED DATA SETS IS EXPLAINED IN DETAIL UNDER THE HEADING
"GROUP CODES" IN PART II OF THIS PUBLICATION (NEXT PAGE).
.PA
.CE 1
GROUP CODES
.SP 1
WHEN A NEW MEMBER IS ADDED TO THE TAPE MASTER FILE, THE USER
SPECIFIES A GROUP CODE IN COLUMNS 74 THRU 80 OF THE ADD CONTROL
STATEMENT USED TO IDENTIFY THE NEW MEMBER.  THE CODE MAY BE COMPOSED
OF ANY EBCDIC CHARACTER, BUT SPECIAL RESTRICTIONS ARE PLACED ON THE
USE OF THE DOLLAR SIGN ($) CHARACTER, AS WILL BE SEEN BELOW.
.SP 1
THIS GROUP CODE IS STORED WITH THE MEMBER ON THE TAPE MASTER AND
LATER USED IN THE ALGORITHM TO ROUTE MEMBERS FROM THE TAPE MASTER FILE
TO PARTITIONED DATA SETS DEFINED WITH SPECIAL DDNAMES.  ANY DDNAME OTHER
THAN STEPLIB, SYSUDUMP, SYSABEND, SYSPRINT, SYSUT1, SYSUT2, SYSUT3,
SYSUT5, INDEX, PRINTER, SYSIN, BLANKS AND DUMMY IS CONSIDERED TO BE
ONE OF THESE SPECIAL DDNAMES.  DEPENDING ON WHETHER THE FIRST
CHARACTER OF THE SPECIAL DDNAME IS A DOLLAR SIGN ($) ONE OF TWO
ACTIONS IF INDICATED:
.SP 1
.IN 5
(1) FIRST CHARACTER IN DDNAME IS NOT A DOLLAR SIGN ($):  IF THE
FIRST CHARACTER OF THE DDNAME IS NOT A DOLLAR SIGN ($), THE TGSUPDAT
UTILITY PROGRAM WILL WRITE INTO THE PARTITIONED DATA SET THAT MEMBER
FROM THE TAPE MASTER FILE WHOSE MEMBER NAME MATCHES THE DDNAME.  THIS
WILL BE THE ONLY MEMBER WRITTEN TO THAT PARTITIONED DATA SET.
.SP 1
(2) FIRST CHARACTER IN DDNAME IS A DOLLAR SIGN ($):  IF THE
FIRST CHARACTER OF THE DDNAME IS A DOLLAR SIGN ($), THE TGSUPDAT
UTILITY PROGRAM WILL MAKE THE FOLLOWING TEST FOR EACH MEMBER OF THE
TAPE MASTER:  A CHARACTER-BY-CHARACTER COMPARISON IS MADE BETWEEN
CHARACTERS TWO THROUGH EIGHT OF THE DDNAME AND THE GROUP CODE
(COLUMNS 74 THRU 80 ON THE ORIGINAL ADD CARD) FOR EACH MEMBER ON THE
TAPE MASTER.  IF THE DDNAME IS LESS THAN EIGHT BYTES IN LENGTH, IT
IS PADDED WITH BLANKS FOR THE COMPARISON.  THE COMPARISON IS MADE ON
A BYTE-BY-BYTE BASIS, AND A DOLLAR SIGN IN THE SAME POSITION IN EITHER
THE DDNAME OR THE GROUP CODE COUNTS AS AN EQUAL COMPARISON ON THAT
POSITION (FOR EXAMPLE, SUPPOSE A COMPARISON WERE BEING MADE BETWEEN
DDNAME $$OABCD, AND GROUP CODE O$$ABCD, THEN THE COMPARISON BETWEEN
THE SECOND CHARACTER OF THE DDNAME ($) AND FIRST CHARACTER OF THE GROUP
CODE (O) WOULD BE EQUAL BECAUSE OF THE DOLLAR SIGN IN THAT POSITION
IN THE DDNAME.  BY THE SAME TOKEN, THE COMPARISON BETWEEN THE THIRD
CHARACTER OF THE DDNAME (O), AND THE SECOND CHARACTER OF THE GROUP
CODE ($) WOULD BE EQUAL BECAUSE OF THE $ IN THAT POSITION IN GROUP
CODE).
IF ALL SEVEN PSOTITIONS COMPARE EQUAL, THAT MEMBER FROM THE TAPE
MASTER WILL BE WRITTEN TO THE PARTITIONED DATA SET DEFINED BY
THAT DDNAME.  NOTE THAT IF A MEMBER QUALIFIES TO BE WRITTEN TO MORE
THAN ONE PDS, IT WILL BE WRITTEN ONLY TO THE PDS WHOSE DDNAME
APPEARS FIRST IN THE TIOT.
.IN 0
.SP 1
FAILURE TO SUCCESSFULLY OPEN THE DCB FOR ONE OF THESE PARTITIONED
DATA SET RESULTS IN ABNORMAL TERMINATION WITH A USER COMPLETION
CODE OF 1.  NO SYNAD ROUTINE IS SPECIFIED IN THE DCBS FOR THESE
DATA SETS.
.SP 1
THE USER MAY OPTIONALLY SPECIFY THE BLKSIZE PARAMETER ON THE DD
STATEMENT.  IF HE DOES NOT, HOWEVER, THE PROGRAM WILL SET UP A
DEFAULT BLKSIZE OF 3200.
.PA
.CE 1
CONTROL STATEMENTS - GENERAL DESCRIPTION
.SP 1
CONTROL STATEMENTS ARE ENTERED THROUGH EITHER THE SYSIN OR SYSUT4 DATA
SETS.  THEY ARE THE MEANS BY WHICH THE USER DIRECTS THE TGSUPDAT
UTILITY PROGRAM TO PERFORM VARIOUS FUNCTIONS.
.SP 1
THERE ARE TWO TYPES OF CONTROL STATEMENT:  PRIMARY AND
SUPPLEMENTARY.  THE SIX PRIMARY CONTROL STATEMENTS ARE
.SP 1
.IN 5
.NF
ADD
REPL
CHNGE
DEL
PUNCH
PRINT
.IN 0
.FI L
.SP 1
THE THREE SUPPLEMENTARY CONTROL STATEMENTS ARE
.SP 1
.IN 5
.NF
DELET
ENDTG
REP
.FI L
.IN 0
.SP 1
.PA
.CE 1
PRIMARY CONTROL STATEMENT FORMAT:
.SP 1
.NF
COLUMNS     CONTENTS
1-2         PERIOD-SLASH (./)
10          ADD OR REPL OR CHNGE OR DEL
            OR PUNCH OR NUMBR
16          MEMBERNAME,LEVEL,SOURCE,LIST,SSI
45          N, L, OR BLANK - APPLIES TO
            ADD, REPL, AND CHNGE STMTS ONLY.
74-80       GROUP CODE
.SP 1
.IN 0
.FI L
ADD
.IN 5
INDICATES THAT THE NAMED MEMBER IS TO BE ADDED IN ITS ENTIRETY TO THE
NEW MASTER.  CARD IMAGES FOR THE NEW MEMBER IMMEDIATELY FOLLOW THIS
CONTROL STATEMENT IN THE INPUT DATA SET.
.IN 0
REPL
.IN 5
INDICATES THAT THE NAMED MEMBER IS BEING ENTERED IN ITS ENTIRETY AS A
REPLACEMENT FOR THE MEMBER IN THE OLD MASTER.  CARD IMAGES FOR THE
REPLACEMENT IMMEDIATELY FOLLOW THIS CONTROL STATEMENT IN THE INPUT
DATA SET.
.IN 0
CHNGE
.IN 5
INDICATES THAT MODIFICATIONS ARE TO BE MADE WITHIN THE NAMED
MEMBER.  CARD IMAGES USED FOR THE MODIFICATION IMMEDIATELY FOLLOW THIS
CONTROL STATEMENT IN THE INPUT DATA SET.  THE MODIFICATIONS ARE BASED
SOLELY ON THE SEQUENCE NUMBER IN COLUMNS 73-80 OF THE CARD IMAGE.
A CARD IMAGE IN THE CONTROL INPUT DATA SET REPLACES ONE IN THE TAPE
MASTER IF THEIR SEQUENCE NUMBERS MATCH; OTHERWISE, A CARD IMAGE
FROM THE CONTROL INPUT DATA SET IS INSERTED INTO THE MEMBER FROM THE
TAPE MASTER BASED ON THE SEQUENCE NUMBER IN 73-80.
.SP 1
IF THE ONLY ITEMS THE USER WANTS CHANGED FOR A MEMBER ARE THE SSI DATA,
OR THE GROUP CODE, HE NEED ENTER ONLY THE CHNGE STATEMENT.
.SP 1
NOTE THAT IF THE CHNGE CARD APPLIES TO A TAPE MEMBER THAT IS COMPOSED OF
88 COLUMN RECORDS WITH THE SEQUENCE NUMBER IN COLUMNS 81-88, THEN THE
CARD IMAGES FOLLOWING THE CHNGE CARD ARE SLIGHTLY DIFFERENT IN THAT TWO
CARD IMAGES MUST BE READ FROM THE INPUT DATA SET TO COMPOSE ONE
MODIFYING RECORD IMAGE:  THE FIRST CARD READ WILL CONTAIN
INFORMATION FOR COLUMNS 1-80 OF THE MODIFYING RECORD;  THE SECOND
CARD READ WILL CONTAIN THE SEQUENCE NUMBER IN COLUMNS 1-8 TO BE
PLACED IN COLUMNS 81-88 OF THE MODIFYING RECORD.  IN THIS SPECIAL
CASE AN L IS PLACED IN COLUMN 45 OF THE CHNGE STATEMENT.
.SP 1
NOTE:  IF UPDATING A MEMBER CONTAINING A STATEMENT WITH './' IN
COLUMNS 1 AND 2, COLUMNS 3 THRU 8 BEING BLANK, AND YOU WISH
TO ENTER STATEMENTS BEGINNING WITH
'./' IN COLUMNS 1 AND 2, COLUMNS 3 THRU 8 BEING BLANK,
FOLLOWING THE CHNGE CARD IN THE INPUT
STREAM, CHANGE THE './' TO AN '*/'.  AFTER THE MEMBER HAS BEEN
UPDATED WITH SUCH STATEMENTS, IF IT IS ROUTED TO A PDS VIA EITHER
GROUP CODE OR MEMBER NAME, OR IF IT IS PUNCHED OUT VIA PUNCH STATEMENT,
AND STATEMENTS BEGINNING WITH '*/' WILL BE CHANGED SO THAT THEY BEGIN
WITH './'.
.IN 0
DEL
.IN 5
INDICATES THAT THE NAMED MEMBER IS TO BE DELETED FROM THE TAPE MASTER
FILE.
.IN 0
PUNCH
.IN 5
INDICATES THAT A COPY OF THE NAMED MEMBER FROM THE TAPE MASTER
FILE SHOULD BE WRITTEN TO THE SYSUT5 DATA SET.
.IN 0
PRINT
.IN 5
INDICATES THAT A COPY OF THE NAMED MEMBER FROM THE TAPE MASTER FILE
SHOULD BE WRITTEN TO THE SYSPRINT DATA SET.  RECORDS HAVING 12-2-9
IN POSITION 1 WILL NOT BE PRINTED.
.IN 0
MEMBERNAME
.IN 5
SPECIFIES THE NAME OF THE MEMBER TO WHICH THE CONTROL STATEMENT
APPLIES.
.IN 0
LEVEL
.IN 5
SPECIFIES THE CURRENT RUN NUMBER, A 2-DIGIT NUMBER FROM 00 TO 99.
.IN 0
SOURCE
.IN 5
APPLIES ONLY TO THE ADD AND REPL CONTROL STATEMENT.  SPECIFIES EITHER
0 OR 1, AS FOLLOWS:
.IN 10
0 INDICATES THAT THE CARD IMAGES FOLLOWING THE CONTROL STATEMENT
DO NOT CONTAIN ANY STATEMENTS BEGINNING WITH PERIOD-SLASH (./)
IN COLUMNS 1 AND 2 IF COLUMNS 3 THRU 8 ARE BLANK.  THUS, THE
TGSUPDAT PROGRAM WILL ASSUME THAT ALL DATA RELATING TO THE SPECIFIED
MEMBER WILL HAVE BEEN READ WHEN A CARD WITH PERIOD-SLASH IN COLUMNS
1 AND 2 AND BLANKS IN COLUMNS 3 THRU 8 IS READ FROM THE CONTROL INPUT
DATA SET.
.SP 1
1 INDICATES THAT THE CARD IMAGES FOLLOWING THE CONTROL STATEMENT AND
WHICH PERTAIN TO THE SPECIFIED MEMBER MIGHT CONTAIN CARD IMAGES WITH
PERIOD-SLASH (./) IN COLUMNS 1 AND 2, AND COLUMNS 3 THRU 8 BLANK.  THE
END OF DATA PERTAINING TO THIS MEMBER WILL BE INDICATED BY AN ENDTG
SUPPLEMENTARY CONTROL CARD (SEE EXPLANATION IN THIS SECTION).
.IN 0
LIST
.IN 5
SPECIFIES EITHER 0 OR 1 AS FOLLOWS;
.SP 1
.IN 10
0 INDICATES THAT THE SYSPRINT DATA SET IS TO CONTAIN ONLY MODIFICATIONS
AND CONTROL STATEMENTS.
.SP 1
1 INDICATES THAT THE SYSPRINT DATA SET IS TO CONTAIN THE ENTIRE
UPDATED MEMBER AND CONTROL STATEMENTS.
.SP 1
.IN 0
NUMBR
.IN 5
INDICATES THAT THE SPECIFIED MEMBER IS TO BE RESEQUENCED.  THE FIRST
RECORD IN THE MEMBER WILL HAVE ASSIGNED TO IT SEQUENCE NUMBER 00001000,
AND EACH SUBSEQUENT SEQUENCE NUMBER WILL BE 1000 GREATER THAN THE
PREVIOUS ONE.
.IN 0
SSI
.IN 5
SPECIFIES EIGHT HEXADECIMAL CHARACTERS OF NEW SYSTEM STATUS INDEX
INFORMATION.
.IN 0
COLUMN 45
.IN 5
IF THIS COLUMN CONTAINS AN "N" ON AN ADD OR REPL CONTROL STATEMENT, THE
TGSUPDAT PROGRAM WILL ADD SEQUENCE NUMBERS TO THE CARD IMAGES BEING
WRITTEN IN THE TAPE MASTER FOR THAT MEMBER.  THE FIRST CARD IMAGE
WILL HAVE SEQUENCE NUMBER 00001000, AND EACH SUBSEQUENT SEQUENCE
NUMBER WILL BE 1000 GREATER THAN THE PREVIOUS ONE.  IF THIS COLUMN
CONTAINS AN L ON AN ADD OR REPL CONTROL STATEMENT, THE TGSUPDAT PROGRAM
WILL ADD SEQUENCE NUMBERS TO THE CARD IMAGES BEING WRITTEN IN THE TAPE
MASTER FOR THAT MEMBER, BUT THE SEQUENCE NUMBERS WILL NOT BE ADDED IN
COLUMNS 73-80.  INSTEAD, THE RECORDS WILL BE EXPANDED TO 88 BYTES,
AND THE SEQUENCE NUMBERS PLACED IN THE ADDITIONAL 8 BYTES.  IF THIS
MEMBER IS SUBSEQUENTLY WRITTEN TO EITHER A PARTITIONED DATA SET, OR TO
THE SYSUT5 DATA SET, THE ADDITIONAL 8 BYTES ARE DELETED (AND
CONSEQUENTLY SO ARE THE SEQUENCE NUMBERS) BEFORE THE MEMBER IS
WRITTEN.
.SP 1
IF THIS COLUMN CONTAINS AN L ON A CHNGE CONTROL STATEMENT, IT INDICATES
TO THE TGSUPDAT UTILITY PROGRAM THAT THE MEMBER TO BE CHANGED CONTAINS
RECORDS 88 BYTES IN LENGTH.
.IN 0
GROUP CODE
.IN 5
THIS SEVEN CHARACTER CODE IS EXPLAINED IN DETAIL IN ANOTHER PART OF THIS
PAPER.
.IN 0
.PA
.CE 1
SUPPLEMENTARY CONTROL STATEMENT FORMAT
.SP 1
DELET
.SP 1
.NF
COLUMNS   CONTENTS
.SP 1
1-2       PERIOD-SLASH (./)
10-14     DELET
16-23     THE SEQUENCE NUMBER OF THE
          FIRST CARD IMAGE TO BE DELETED
24        COMMA (,)
25-32     THE SEQUENCE NUMBER OF THE LAST
          CARD IMAGE TO BE DELETED
.SP 1
.FI L
THIS SUPPLEMENTARY CONTROL STATEMENT CAN ONLY BE USED IN CONJUNCTION
WITH A CHNGE CONTROL STATEMENT.
.SP 1
ENDTG
.SP 1
.NF
COLUMNS   CONTENTS
.SP 1
1-2       PERIOD-SLASH (./)
10-14     ENDTG
.SP 1
.FI L
THIS SUPPLEMENTARY CONTROL STATEMENT IS USED IN CONJUNCTION WITH
ADD, AND REPL CONTROL STATEMENTS WHEN MEMBER CARD IMAGES IN THE
CONTROL INPUT DATA SET MIGHT INCLUDE SOME WITH ./ IN COLUMNS 1 AND 2,
COLUMNS 3 THRU 8 BEING BLANK.
WHEN THE TGSUPDAT PROGRAM ENCOUNTERS THIS STATEMENT, IT ASSUMES
THAT ALL OF THE DATA PERTAINING TO THAT MEMBER WILL HAVE BEEN READ
WHEN A RECORD IS READ FROM THE CONTROL INPUT DATA SET THAT HAS
PERIOD-SLASH (./) IN COLUMNS 1 AND 2, COLUMNS 3 THRU 8 BEING BLANK.
.SP 1
REP
.SP 1
.NF
COLUMNS   CONTENTS
1-2       PERIOD-SLASH (./)
10-12     REP
16-80     CHARACTER STRING TO BE REPLACED (STR1),
          FOLLOWED BY A COMMA, FOLLOWED BY THE
          REPLACING CHARACTER STRING (STR2).  STR1
          CANNOT EXCEED 29 CHARACTERS.  THE UTILITY
          ASSUMES A LENGTH FOR STR2 EQUAL TO STR1.
.SP 1
.FI L
THIS SUPPLEMENTARY CONTROL STATEMENT CAN ONLY BE USED IN CONJUNCTION
WITH A CHNGE CONTROL STATEMENT.  MORE THAN ONE REP CONTROL STATEMENT CAN
BE SPECIFIED FOR THE SAME CHANGE OPERATION.  THE UTILITY PROGRAM
MAINTAINS A PUSH-DOWN STACK OF REP CONTROL STATEMENTS; THAT IS, THE
LAST REP CONTROL STATEMENT ENCOUNTERED WILL BE THE FIRST ONE USED AS
EACH SOURCE STATEMENT IS SCANNED.  THE ENTIRE SOURCE STATEMENT IS
SCANNED AND REPLACEMENTS
MADE, IF NECESSARY, FOR EACH REP CONTROL STATEMENT IN TURN UNTIL
THE PUSH-DOWN STACK IS EXHAUSTED.  NOTE THAT A COMPLETE SCAN
BEGINNING WITH COLUMN 1 OF THE SOURCE RECORD IS ACCOMPLISHED WITH
NECESSARY REPLACEMENTS FOR EACH REP CONTROL STATEMENT IN TURN BEFORE
ANOTHER REP STATEMENT IS SELECTED FROM THE PUSH-DOWN STACK.
.SP 1
REP CONTROL STATEMENTS CAN APPEAR ANYWHERE FOLLOWING THE RELATED CHNGE
STATEMENT, AND CAN BE INTERMIXED WITH DETAIL STATEMENTS.
.PA
.CE 1
CORE REQUIREMENTS
.SP 1
THE FOLLOWING PAGES CONTAIN TABULATED FIGURES REFLECTING THE MAIN
STORAGE REQUIREMENTS OF ALL OF THE COMPONENTS OF THE TGSUPDAT
UTILITY PROGRAM.  THROUGH REFERENCES TO THESE TABULATIONS A FAIR
ESTIMATE CAN BE DERIVED OF THE CORE REQUIREMENTS FOR A GIVEN
EXECUTION.  THE FOLLOWING SHOULD BE NOTED IN USING THESE FIGURES:
.SP 1
.IN 5
(1)  THE SIZES FOR THE ACCESS METHOD MODULES SUPPLIED BY IBM
(THEIR NAMES BEING WITH IGG) ARE
BASED ON RELEASE 18.6 OF OS.  IF YOU ARE RUNNING A LATER RELEASE,
YOU MIGHT WANT TO REPLACE THESE SIZES WITH CURRENT ONES.  HOWEVER,
THE OLD ONES ARE SUFFICIENT TO SUPPLY YOU WITH A FAIRLY ACCURATE
APPROXIMATION OF THE CORE REQUIREMENTS TO RUN TGSUPDAT UTILITY.
.SP 1
(2)  FIND OUT IF YOUR INSTALLATION HAS ANY OF THE ACCESS METHOD
MODULES (THOSE WHOSE NAMES BEGIN WITH IGG) CORE RESIDENT.  IF
ANY ARE, CORE ALLOWANCES FOR THEM SHOULD NOT BE INCLUDED IN
YOUR CALCULATIONS.
.SP 1
(3)  IN ESTIMATING THE CORE REQUIREMENTS FOR A GIVEN RUN, ANY FIGURE
WHICH IS PARENTHESIZED SHOULD NOT BE ADDED MORE THAN ONCE.
.SP 1
(4)  ONCE YOU HAVE REACHED A FINAL FIGURE, ADD 6K AND ROUND TO THE NEXT
HIGHEST 2K BOUNDARY.
.IN 0
.PA
.CE 1
CORE REQUIREMENTS FOR THE SYSUT1 DATA SET
.SP 1
.NF
BYTES            HOW USED
(4624)           TGSUPDAT - BASIC UTILITY MODULE
   (X)           STORAGE REQUIRED FOR THE SYSPRINT
                 DATA SET, WHICH IS REQUIRED ON EVERY
                 EXECUTION.  SE ELSEWHERE IN THIS
                 PUBLICATION
  632            UT1GET - SYSUT1 PROCESS MODULE
 (384)           IGG019BA - READ/WRITE RTNE
  (88)           IGG019BB - CHECK ROUTINE
 (192)           IGG019CC - READ/WRITE END-OF-BLOCK RTNE
  176            ACCESS METHOD WORK AREA. CONTAINS IOB, ETC.
    X            MAXIMUM BLKSIZE
.PA
.CE 1
CORE REQURIEMENTS FOR THE SYSUT2 DATA SET
.SP 1
BYTES            HOW USED
(4624)           TGSUPDAT - BASIC UTILITY MODULE
   (X)           STORAGE REQUIRED FOR THE SYSPRINT DATA SET
  670            UT2PUT - SYSUT2 PROCESS MODULE
 (384)           IGG019BA - READ/WRITE RTNE
  (88)           IGG019BB - CHECK ROUTINE
 (192)           IGG019CC - READ/WRITE END0OF0BLOCK RTNE
  176            ACCESS METHOD WORK AREA. CONTAINS IOB, ETC.
    X            MAXIMUM BLKSIZE
.PA
.CE 1
CORE REQURIEMENTS FOR THE SYSUT3 DATA SET
.SP 1
BYTES            HOW USED
(4624)           TGSUPDAT - BASIC UTILITY MODULE
   (X)           STORAGE REQUIRED FOR THE SYSPRINT DATA SET.
 1352            UT3GET - PDS PROCESS MODULE
  920            READIR - PDS PROCESS MODULE
 (384)           IGG019BA - READ/WRITE RTNE
  (88)           IGG019BB - CHECK RTNE
 (232)           IGG019BC - NOTE/POINT RTNE
 (192)           IGG019CC - READ/WRITE END-OF-BLOCK RTNE
 (112)           IGG019CH - ABNORMAL END APPENDAGE.
  160            ACCESS METHOD WORK AREA. CONTAINS IOB, ETC.
    X            MAXIMUM BLKSIZE
    X            (M/78 + 1) * 2048 WHERE M EQUALS THE
                 NUMBER OF MEMBERS IN THE SYSUT3 DATA SET.
.PA
.CE 1
CORE REQURIEMENTS FOR THE SYSUT4 DATA SET
.SP 1
BYTES            HOW USED
(4624)           TGSUPDAT - BASIC UTILITY MODULE
   (X)           STORAGE REQUIRED FOR THE SYSPRINT DATA SET
 (794)           TGSI - CONTROL INPUT PROCESSOR
 1352            UT3GET - PDS PROCESS MODULE
  920            READIR - PDS PROCESS MODULE
 (384)           IGG019BA - READ/WRITE RTNE
  (88)           IGG019BB - CHECK RTNE
 (232)           IGG029BC - NOTE/POINT RTNE
 (192)           IGG019CC - READ/WRITE END-OF-BLOCK RTNE
 (112)           IGG019CH - ABNORMAL END APPENDAGE
  160            ACCESS METHOD WORK AREA. CONTI
    X            MAXIMUM BLKSIZE
    X            (M/78+1)*2048 WHERE M EQUALS THE NUBMER
                 OF MEMBERS IN THE SYSUT4 DATA SET.
.PA
.CE 1
CORE REQUIREMENTS FOR THE SYSUT5 DATA SET
BYTES            HOW USED
(4624)           TGSUPDAT - BASIC UTILITY MODULE
   (X)           STORAGE REQUIRED FOR THE SYSPRINT DATA SET
 (256)           IGG019CF - END-OF-BLOCK RTNE
 (224)           IGG019AK - GET/PUT MODULE
 (244)           IGG019AR - GET/PUT SYNCHRONIZING MODULE
  368            ACCESS METHOD WORK AREA.  CONTAINS IOBS, ETC.
    X            8+(4*BUFNO)+(BUFNO*BLKSIZE)
.PA
.CE 1
CORE REQUIREMENTS FOR AN OUTPUT PDS
.SP 1
BYTES            HOW USED
(4624)           TGSUPDAT - BASIC UTILITY MODULE
   (X)           STORAGE REQUIRED FOR THE SYSPRINT DATA SET
(1080)           TGSPDSWR - OUTPUT PDS PROCESS MODULE
  224            TGSPDSBK - OUTPUT PDS PROCESS MODULE
 (384)           IGG019BA - READ/WRITERTNE
  (88)           IGG019BB - CHECK RTNE
 (232)           IGG019BC - NOTE/POINT RTNE
 (512)           IGG019CD - READ/WRITE END-OF-BLOCK RTNE
  176            ACCESS METHOD WORK AREA.
    X            MAXIMUM BLKSIZE
.PA
.CE 1
CORE REQUIREMENTS FOR THE SYSIN DATA SET
.SP 1
BYTES            HOW USED
(4624)           TGSUPDAT - BASIC UTILITY MODULE
   (X)           STORAGE REQUIRED FOR THE SYSPRINT DATA SET
 (794)           TGSI - CONTROL INPUT PROCESSOR
 (224)           IGG019AK - GET/PUT MODULE
 (144)           IGG019AR - GET/PUT SYNCHRONIZING MODULE
 (256)           IGG019CF 0 END0OF0BLOCK MODULE
  368            ACCESS METHOD WORK AREA.  CONTAINS IOBS, ETC.
    X            8+(4*BUFNO)+(BUFNO*BLKSIZE)
.PA
.CE
CORE REQURIEMENTS FOR THE PRINTER DATA SET
.EN
.SP 1
BYTES            HOW USED
(4624)           TGSUPDAT - BASIC UTILITY MODULE
   (X)           STORAGE REQUIRED FOR THE SYSPRINT DATA SET
(1048)           TGSP - PRINT OUTPUT PROCESS MODULE
 (224)           IGG019AK - GET/PUT MODUEL
 (144)           IGG019AR - GET/PUT SYNCHRONIZING MODULE
 (256)           IGG019CF - END-OF-BLOCK MOUDLE
  (64)           IGG019CL - IO APPENDAGE - CARR. CTL.
  368            ACCESS METHOD WORK AREA. CONTAINS IOBS, ETC.
    X            8+(4*BUFNO)+(BUFNO*BLKSIZE)
.PA
.CE 1
CORE REQURIEMENTS FOR THE INDEX DATA SET
.SP 1
BYTES            HOW USED
(4624)           TGSUPDAT - BASIC UTILITY MODULE
   (X)           STORAGE REQUIRED FOR THE SYSPRINT DATA SET
(1048)           TGSP - PRINT OUTPUT PROCESS MODULE
 (224)           IGG019AK - GET/PUT MODULE
 (144)           IGG019AR - GET/PUT SYNCHRONIZING MODULE
  (64)           IGG019CL - IO APPENDAGE - CARR. CTL.
 (256)           IGG019AF - END-OF-BLOCK MODULE
  368            ACCESS METHOD WORK AREA.  CONTAINS IOBS, ETC.
    X            8+(4*BUFNO)+(BUFNO*BLKSIZE)
.PA
.CE 1
CORE REQUIREMENTS FOR THE SYSPRINT DATA SET
.SP 1
BYTES            HOW USED
(4624)           TGSUPDAT - BASIC UTILITY MODULE
 (224)           IGG019AK - GET/PUT MODULE
 (144)           IGG019AR - GET/PUT SYNCHRONIZING MODULE
 (256)           IGG019CF 0 END-OF-BLOCK MODULE
  (64)           IGG019CL 8 IO APPENDAGE 0 CARR. CTL.
  368            ACCESS METHOD WORK AREA. CONTAINS IOBS, ETC.
    X            8+(4*BUFNO)+(BUFNO*BLKSIZE)
.PA
.FI L
TO CLARIFY THE USE OF THESE TABULATIONS, THE FOLLOWING EXAMPLE
IS GIVEN:
.SP 1
A PROGRAMMER WISHES TO ESTIMATE THE REGION SIZE REQUIRED TO EXECUTE
THE TGSUPDAT UTILITY WITH SYSUT1 AND SYSUT2 DATA SETS, EACH HAVING A
BLKSIZE OF 32000.  HE INTENDS TO DIRECT SYSPRINT TO SYSOUT AND TAKE
THE DEFAULT BLKSIZE OF 900.
.SP 1
TO START WITH, HIS JOB IS SIMPLIFIED SINCE AT HIS INSTALLATION, ALL
ACCESS METHOD MODULES ARE MADE CORE RESIDENT.  THIS MEANS HE CAN
IGNORE ALL THE FIGURES FOR MODULES WHOSE NAMES BEGIN WITH IGG.
.SP 1
(1)  TURN TO THE PAGE LABELED "CORE REQUIREMENT FOR THE SYSUT1 DATA SET"
AT THE TOP OF A SHEET OF SCRATCH PAPER, WRITE THE NUMBER 4624.  THIS IS
THE AMOUNT OF MAIN STORAGE REQUIRED FOR THE BASIC UTILITY MODULE,
TGSUPDAT, WHICH ACCORDING TO THE ABOVE REFERENCED PAGE IS REQUIRED FOR
THE SYSUT1 DATA SET.
.SP 1
(2)  THE SECOND LINE ON THE PAGE TITLED "CORE REQUIREMENTS FOR THE
SYSUT1 DATA SET" SHOWS A PARENTHESIZED X AND INDICATES THAT IT
REPRESENTS THE STORAGE REQUIREMENTS FOR THE SYSPRINT DATA SET.
TURN TO THE PAGE TITLED "CORE REQUIREMENTS FOR THE SYSPRINT DATA
SET."  THE FIRST FIGURE ON THIS PAGE, 4624 IS PARENTHESIZED AND
IS THE STORAGE REQUIREMENT FOR THE BASIC UTILITY MODULE, TGSUPDAT.
SICNE THE FIGURE ON THIS LINE IS PARENTHESIZED, WE WILL IGNORE IT SINCE
4624 BYTES WERE INCLUDED FOR THE BASIC UTILITY MODULE IN STEP (1)
ABOVE.
.SP 1
(3) THE SECOND THRU FIFTH LINES ON THE PAGE TITLED "CORE REQUIREMENTS
FOR THE SYSPRINT DATA SET" CAN ALSO BE IGNORED, SINCE THEY REPRESENT
THE CORE STORAGE REQUIRED FOR ACCESS METHOD MODULES, WHICH ARE IN
THE LINK PACK AREA AT THIS INSTALLATION.
.SP 1
(4)  THE SIXTH LINE ON THE PAGE TITLE "CORE REQURIEMENTS FOR THE
SYSPRINT DATA SET" LISTS 368 BYTES AS THE STORAGE REQUIREMENT
FOR AN ACCESS METHOD WORK AREA.  PLACE THIS FIGURE ON THE SHEET
OF SCRATCH PAPER, JUST BELOW THE NUMBER 4624 ALREADY LISTED THERE.
.SP 1
(5)  THE SEVENTH LINE ON THE PAGE TITLE "CORE REQUIREMENTS FOR THE
SYSPRINT DATA SET" LISTS THE VARIABLE X, WHICH CAN BE CALCULATED USING
THE ALGORITH - X = 8+(4*BUFNO)+(BUFNO*BLKSIZE).  USING BLKSIZE OF 900,
BUFNO OF 2, X IS EQUAL TO 1816.  PLACE THIS FIGURE ON THE SCRATCH
PAPER, JUST BELOW THE NUMBER 368 ALREADY LISTED THERE.
.SP 1
(6)  NOW RETURN TO THE PAGE TITLED "CORE REQUIREMENTS FOR THE SYSUT1
DATA SET."  THE THIRD LINE LISTS 632 BYTES AS THE CORE REQUIREMENT
FOR THE SYSUT1 PROCESS MODULE.  PLACE THIS FIGURE (632) ON THE SHEET
OF SCRATCH PAPER, JUST BELOW THE NUMBER 1816 ALREADY LISTED THERE.
.SP 1
(7)  THE NEXT THREE LINES INVOLVE ACCESS METHOD MODULES AND ARE IGNORED
IN THIS CASE.  LINE SEVEN LISTS 176 BYTES AS THE STORAGE REQUIREMENT
FOR ANOTHER ACCESS METHOD WORK AREA.  PLACE THIS FIGURE (176) ON THE
SHEET OF SCRATCH PAPER, JUST BELOW THE NUMBER 632 ALREADY LISTED THERE.
.SP 1
(8)  THE NEXT LINE INDICATES A VARIABLE SOTRAGE REQUIREMENT THAT IS
EQUAL TO THE MAXIMUM BLKSIZE OF THE SYSUT1 DATA SET.  PLACE THIS FIGURE,
32000, ON THE SHEET OF SCRATCH PAPER, JUST BELOW THE NUMBER 176 ALREADY
LISTED THERE.
.SP 1
(9)  TURN TO THE NEXT PAGE, WHICH IS ENTITLED "CORE REQUIREMENTS
FOR THE SYSUT2 DATA SET."  THE FIRST TWO LINES CAN BE IGNORED SINCE
THE CORE STORAGE REQUIREMNTS ON THESE TWO LINES ARE PARENTHESIZED,
WHICH INDICTES THAT THESE VALUES SHOULD BE INCLUDED ONLY ONCE.  LINE
THREE INDICATES 670 BYTES FOR THE SYSUT2 PROCESS MODULE.  PLACE THIS
FIGURE (670) ON THE SHEET OF SCRATCH PAPAER, JUST BELOW THE NUMBER
32000 ALREADY LISTED THERE.
.SP 1
(10)  THE NEXT THREE LINES ARE IGNORED BECAUSE THEY REFER TO ACCESS
METHOD MODULES.  THE NEXT LINE, LINE SEVEN, INDICATES 176 BYTES
FOR ANOTHER ACCESS METHOD WORK AREA.  PLACE THIS FIGURE, ETC.
.SP 1
(11)  THE MAXIMUM BLKSIZE FOR THE SYSUT2 DATA SET IS 32000.  PLACE THIS
FIGURE ON THE SCRATCH SHEET.  THIS BRINGS US TO THE END OF THE PAGE
TITLED "CORE REQUIREMENTS FOR THE SYSUT2 DATA SET."
.SP 1
(12)  TURN TO THE NEXT PAGE, WHICH IS TITLED "CORE REQUIREMENTS FOR
THE SYSUT3 DATA SET."  SINCE WE WON'T BE USING A SYSUT3 DATA SET,
THIS PAGE CAN BE IGNORED.  SO ALSO, CAN THE PAGES BE IGNORED
PERTAINING TO THE SYSUT4, SYSUT5, OUTPUT PDS, SYSIN, PRINTER, AND
INDEX DATA SETS.  SYSPRINT CAN ALSO BE IGNORED AT THIS TIME, SINCE
IT WAS ALRADY COVERED BEGINNING IN STEP 2 ABOVE.
.SP 1
(13)  IF YOU TOTAL THE COLUMN OF FIGURES NOW RECORDED ON THE SCRATCH
SHEET, IT SHOULD APPEAR AS FOLLOWS:
.SP 1
.IN 5
.NF
 4624
  368
 1816
  632
  176
32000
  670
  176
32000
_____
72462
.SP 1
.FI L
.IN 0
THUS, THE PROGRAMMER WILL REQUIRE 76,462 BYTES, OR APPROXIMATELY
72K TO EXECUTE THE TGSUPDAT UTILITY PROGRAM.  ADDING 6K, HIS REGION
PARAMETER WOULD BE 78K.
