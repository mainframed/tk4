   /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
   /* ABE037 - PDF,PDFC,PDFE,PDFS,PDFD,PDFQ SUBCOMMAND */
   %INCLUDE ABESUB;
 ABESUB(ABE037) PARS(00) RENT(NO) CHECK(YES);
   %INCLUDE ABESUBA;
   %INCLUDE ABERHPNL;

   % INCLUDE ABEPFD;
   DCL SAVELPT PTR;
   DCL ALCODE CHAR(3) VAR STATIC INIT('');
   DCL 1 SCREEN1_IN,
     2 FIELD1 CHAR(6000) VAR;
   DCL 1 SCREEN1_OUT,
     2 FIELD1 CHAR(6000) VAR;
   DCL MAID BIT(8);
   DCL CALLFLGS BIT(8) INIT('0'B);
   DCL MCURLOC FIXED BIN(15,0);
   DCL (DES1920,DES2560,DES3440,DES3564) ENTRY;
   DCL PSTR CHAR(32767) VAR INIT('');
   DCL BLNKS CHAR(6000) STATIC INIT('');
   DCL STRHD PTR;
   DCL ABEPDF ENTRY(CHAR(32767) VAR,FIXED BIN(15,0))
     RETURNS(PTR);
   DCL SUFFIX ENTRY(CHAR(*),CHAR(*))
     RETURNS(FIXED BIN(15,0));
   DCL SETCAPS ENTRY;
   DCL (T,A,DELPTR) PTR;
   DCL SEQ FIXED BIN(31,0);
   DCL 1 AIDTAB(24) BIT(8) STATIC INIT(
     '11110001'B,  /*  F1 = PF  1 KEY */
     '11110010'B,  /*  F2 = PF  2 KEY */
     '11110011'B,  /*  F3 = PF  3 KEY */
     '11110100'B,  /*  F4 = PF  4 KEY */
     '11110101'B,  /*  F5 = PF  5 KEY */
     '11110110'B,  /*  F6 = PF  6 KEY */
     '11110111'B,  /*  F7 = PF  7 KEY */
     '11111000'B,  /*  F8 = PF  8 KEY */
     '11111001'B,  /*  F9 = PF  9 KEY */
     '01111010'B,  /*  7A = PF  0 KEY */
     '01111011'B,  /*  7B = PF 11 KEY */
     '01111100'B,  /*  7C = PF 12 KEY */
     '11000001'B,  /*  C1 = PF 13 KEY */
     '11000010'B,  /*  C2 = PF 14 KEY */
     '11000011'B,  /*  C3 = PF 15 KEY */
     '11000100'B,  /*  C4 = PF 16 KEY */
     '11000101'B,  /*  C5 = PF 17 KEY */
     '11000110'B,  /*  C6 = PF 18 KEY */
     '11000111'B,  /*  C7 = PF 19 KEY */
     '11001000'B,  /*  C8 = PF 20 KEY */
     '11001001'B,  /*  C9 = PF 21 KEY */
     '01001010'B,  /*  4A = PF 22 KEY */
     '01001011'B,  /*  4B = PF 23 KEY */
     '01001100'B); /*  4C = PF 24 KEY */
   DCL L FIXED BIN(31,0);
   RHRC=0;
   SELECT(CMDINDX);
     WHEN(1,2) CALL PDF;
     WHEN(3) CALL PDFC;
     WHEN(4) CALL PDFE;
     WHEN(5) CALL PDFS;
     WHEN(6) CALL PDFD;
     WHEN(7) CALL PDFQ;
     OTHERWISE;
     END;
   RHRC=0;

 PDF: PROC;
 /**********************************************************************
 *                                                                     *
 * CALLED TO DO PDF PROCESSING - THIS WILL BE THE SITUATION WHERE THE  *
 * PDF KEYWORD WAS SPECIFIED ON THE SSE SUBCOMMAND.                    *
 *                                                                     *
 **********************************************************************/
   DCL I FIXED BIN(31,0);
   CALL SETPSTR; /* GO CONVERT CONTROL BLOCKS TO SCREEN IMAGE IN PSTR */
   CALL PUTSCR; /* GO DISPLAY AND POSSIBLY SAVE PSTR */
   END PDF;

 PDFC: PROC;
 /**********************************************************************
 *                                                                     *
 * CALLED TO PROCESS PDFC SUBCOMMAND.                                  *
 *                                                                     *
 **********************************************************************/

   DO T=NXTHDR REPEAT T->NXTPTR WHILE(T^=HDPTR);
     IF LENGTH(T->RECSTR)>=12
       THEN IF SUBSTR(T->RECSTR,2,11)='/*#@$SCREEN'
         THEN LEAVE;
     END;
   IF T=HDPTR
     THEN DO;
       MSGDATA='ERROR - INPUT NOT CONVERTABLE';
       RHRC=8;
       RETURN;
       END;
   DO T=T->NXTPTR REPEAT T->NXTPTR WHILE(T^=HDPTR);
     IF SUBSTR(T->RECSTR,1,3)=' */'
       THEN LEAVE;
     PSTR=PSTR××SUBSTR(T->RECSTR,2,71);
     END;
   CALL PUTSCR; /* GO DISPLAY AND POSSIBLY SAVE PSTR */
   END PDFC;

 PDFD: PROC;
 /**********************************************************************
 *                                                                     *
 * CALLED TO PROCESS PDFD SUBCOMMAND - DATA SET RECORDS CONTAIN IMAGES *
 * OF EACH LINE OF THE DISPLAY.  THESE LINE IMAGES ARE TO BE COMBINED  *
 * AND DISPLAYED IN FULL-SCREEN FORMAT FOR EDITING.                    *
 *                                                                     *
 **********************************************************************/
   DCL I FIXED BIN(31,0);
   CALL SETSCR; /* GO SET PSTR */
   CALL PUTSCR; /* GO DISPLAY AND POSSIBLY SAVE PSTR */
   END PDFD;

 PDFE: PROC;
 /**********************************************************************
 *                                                                     *
 * CALLED TO PROCESS PDFE SUBCOMMAND.                                  *
 *                                                                     *
 **********************************************************************/
   CALL SETPSTR; /* CONVERT CONTROL BLOCKS TO SCREEN-IMAGE IN PSTR */
   CALL PDFES; /* GO CONVERT PSTR TO RECORDS CONTAINING LINE-IMAGES */
   END PDFE;

 PDFES:  PROC;
 /**********************************************************************
 *                                                                     *
 * CALLED TO CONVERT THE DISPLAY IMAGE STORED IN PSTR TO RECORD IN THE *
 * CURRENTLY EDITED DATA SET.  ALL RECORDS THAT WERE IN THE DATA SET   *
 * WHEN THIS ROUTINE IS CALLED WILL BE DELETED.  NOTE THAT THIS        *
 * SUBROUTINE ASSUMES THAT THE INITIAL @ IN POSITION 1 OF THE SCREEN   *
 * IMAGE IN PSTR IS MISSING.                                           *
 *                                                                     *
 **********************************************************************/
   DCL MUF CHAR(256) VAR;
   DCL T PTR;
   DCL (L,SEQ) FIXED BIN(31,0);
   T=NXTHDR;
   IF T=HDPTR
     THEN DO;
       MUF='';
       SEQ=10;
       CALL #ADD(RHPTR,RHHDRPT,T,T,SEQ,MUF,0);
       END;
   L=MIN(PLINESIZE-1,LENGTH(PSTR));
   T->RECSTR='@'××SUBSTR(PSTR,1,L);
   IF L=LENGTH(PSTR)
     THEN PSTR='';
     ELSE PSTR=SUBSTR(PSTR,L+1);
   DO WHILE(LENGTH(PSTR)>0);
     IF T->NXTPTR ^= HDPTR
       THEN T=T->NXTPTR;
       ELSE DO;
         MUF='';
         SEQ=T->RECSEQ+1;
         CALL #ADD(RHPTR,RHHDRPT,T,T,SEQ,MUF,0);
         END;
     L=MIN(PLINESIZE,LENGTH(PSTR));
     T->RECSTR=SUBSTR(PSTR,1,L);
     IF L=LENGTH(PSTR)
       THEN PSTR='';
       ELSE PSTR=SUBSTR(PSTR,L+1);
     END;
   DO WHILE(T->NXTPTR^=HDPTR);
     DELPTR=T->NXTPTR;
     CALL #PUTSLOT(RHPTR,RHHDRPT,DELPTR); /* CALL PUTSLOT */
     END;
   HEXMODE='0'B;
   RHRC=0;
   CALL #NC(RHPTR,NXTHDR);
   END PDFES;

 PDFQ: PROC;
 /**********************************************************************
 *                                                                     *
 * CALLED TO PROCESS PDFQ SUBCOMMAND.                                  *
 *                                                                     *
 **********************************************************************/
   DCL QN CHAR(8);
   CALL SETSCR; /* GO SET PSTR */
   PSTR='@'××PSTR;
   MCURLOC=INDEX(PSTR,'&');
   STRHD=ABEPDF(PSTR,MCURLOC); /* CONVERT TO CONTROL BLOCKS */
   IF PARY(1)^=''
     THEN QN=PARY(1);
     ELSE QN=RHNAME;
   CALL SETCAPS(QN);
   SAVELPT=NULL;
   DO PNLELPT=RHPNLHDR REPEAT ELNXT WHILE(PNLELPT^=NULL);
     IF ELCNT>0
       THEN IF SUBSTR(ELARY(1),7,8)=QN
         THEN LEAVE;
         ELSE;
       ELSE IF SUBSTR(ELLSTA,7,8)=QN
         THEN LEAVE;
     SAVELPT=PNLELPT;
     END;
   IF PNLELPT^=NULL
     THEN DO; /* MUST DELETE OLD VERSION */
       IF SAVELPT=NULL
         THEN RHPNLHDR=ELNXT;
         ELSE SAVELPT->ELNXT=ELNXT;
       IF ELCNT=0
         THEN FREE PNLELA;
         ELSE FREE PNLEL;
       END;
   PNLELPT=#PFO(STRHD);
   ELNXT=RHPNLHDR;
   RHPNLHDR=PNLELPT;
   IF ELCNT=0
     THEN SUBSTR(ELLSTA,7,8)=QN;
     ELSE SUBSTR(ELARY(1),7,8)=QN;
   END PDFQ;

 PDFS: PROC;
 /**********************************************************************
 *                                                                     *
 * CALLED TO PROCESS PDFS SUBCOMMAND.                                  *
 *                                                                     *
 **********************************************************************/
   DCL SDDN CHAR(44) VAR;
   DCL (I,J,K,L) FIXED BIN(31,0);
   DCL T PTR;

   IF PARY(1)='' & OUTDDN=NULL
     THEN DO;
       MSGDATA='SAVE WHERE?';
       RHRC=8;
       RETURN;
       END;
   IF PARY(1) ^= ''
     THEN DO;
       IF OUTDDN^=NULL
         THEN DO;
           L = OUTDDN->ALCRECL;
           CALL #DOFRE(OUTDDN); /* CALL DOFRE */
           IF INDDN=OUTDDN
             THEN INDDN=NULL;
           OUTDDN=NULL;
           ALLOCATE BUFSTR SET(BUFPTR);
           END;
       SDDN = PARY(1);
       CALL SETCAPS(SDDN);
       IF PARQCK(1) /* QUOTED? */
         THEN IF SUBSTR(SDDN,1,1)^=''''
           THEN SDDN=''''××SDDN××'''';
       CALL #DOALC(SDDN,ALCODE,OUTDDN,RHPTR,'');
         /* CALL DOALC*/
       INDDN = OUTDDN;
       IF OUTDDN = NULL
         THEN DO;
           MSGDATA='PDFS UNSUCCESSFUL';
           RHRC = 8;
           RETURN;
           END;
       END;
   SUBSTR(OUTDDN->ALCFLAG,6,1)='1'B; /* ALWAYS NONUM */
   PSTR='';
   IF NXTHDR^=HDPTR
     THEN IF LENGTH(NXTHDR->RECSTR)^=0
       THEN IF LENGTH(NXTHDR->RECSTR)=1
         THEN PSTR=SUBSTR(BLNKS,1,PLINESIZE-1);
         ELSE IF LENGTH(NXTHDR->RECSTR)>=PLINESIZE
           THEN PSTR=SUBSTR(NXTHDR->RECSTR,2,PLINESIZE-1);
           ELSE PSTR=SUBSTR(NXTHDR->RECSTR,2)××SUBSTR(BLNKS,1,
             PLINESIZE-LENGTH(NXTHDR->RECSTR));
   DO T=NXTHDR->NXTPTR REPEAT T->NXTPTR WHILE(T^=HDPTR);
     IF LENGTH(T->RECSTR)>=PLINESIZE
       THEN PSTR=PSTR××SUBSTR(T->RECSTR,1,PLINESIZE);
       ELSE PSTR=PSTR××T->RECSTR××SUBSTR(BLNKS,1,PLINESIZE-
         LENGTH(T->RECSTR));
     END;
   MCURLOC=INDEX(PSTR,'&');
   STRHD=ABEPDF(PSTR,MCURLOC);
   CALL PDFSS; /* GO SAVE */
   END PDFS;

 PDFSS: PROC;
 /**********************************************************************
 *                                                                     *
 * CALLED TO DO A SAVE OPERATION ON THE CONVERTED CONTROL BLOCKS       *
 * POINTED TO BY STRHD.  PARY(1) SHOULD EITHER BE BLANK, OR SHOULD     *
 * CONTAIN THE DSNAME WHERE THE DATA SET IS TO BE SAVED. NOTE THAT     *
 * PDFSS SHOULD NOT BE ENTERED WITH OUTDDN=NULL.                       *
 *                                                                     *
 **********************************************************************/
   DCL (L,R,M,N) FIXED BIN(31,0);
   DCL (STRTMP,T) PTR;
   DCL MUF CHAR(256) VAR;

   /* FIRST GET RID OF ANY EXISTING RECORDS */
   RECPTR=HDPTR;
   CURSEQ=0;
   DO T=NXTHDR REPEAT NXTHDR WHILE(T^=HDPTR);
     CALL #PUTSLOT(RHPTR,RHHDRPT,T); /* CALL PUTSLOT */
     END;

   /* NOW GET SET TO CREATE NEW RECORDS FROM STRHD */
   SUBSTR(STRHD->STR,7,8)=RHNAME;
   T=HDPTR;
   MUF='';
   L=0; /* # BYTES CURRENTLY STORED IN BUF */
   R=OUTDDN->ALCRECL; /* MAX # BYTES PER RECORD */
   IF SUBSTR(OUTDDN->ALCFLAG,3,1) /* RECFM=V? */
     THEN R=R-4; /* LESS 4 FOR RDW IF RECFM=V */
   SEQ=0;
   STRPTR=STRHD;
   M=0; /* # BYTES COPIED FROM CURRENT STR */
   DO WHILE(STRPTR^=NULL);
     N=MIN(R-L,LENGTH(STR)-M);
     MUF=MUF××SUBSTR(STR,M+1,N);
     L=L+N;
     M=M+N;
     IF M=LENGTH(STR)
       THEN DO;
         STRTMP=STRNXT;
         FREE STREL;
         STRPTR=STRTMP;
         M=0;
         END;
     IF L=R × STRPTR=NULL
       THEN DO;
         SEQ=SEQ+1;
         CALL #ADD(RHPTR,RHHDRPT,T,T,SEQ,MUF,0);
         MUF='';
         L=0;
         END;
     END;
   IF PARY(1)=''
     THEN CMDDATA='SE';
     ELSE IF PARQCK(1)
       THEN CMDDATA='SE '××''''××PARY(1)××'''';
       ELSE CMDDATA='SE '××PARY(1);
   END PDFSS;

 PUTSCR: PROC;
 /**********************************************************************
 *                                                                     *
 * CALLED TO DISPLAY PSTR IN FULL-SCREEN FORMAT FOR EDITING.           *
 *                                                                     *
 **********************************************************************/
   DCL I FIXED BIN(31,0);
   SCREEN1_OUT.FIELD1=PSTR××BLNKS;
   I=PUTSCRA; /* GO DISPLAY SCREEN-IMAGE FOR EDITING - PSTR WILL BE
              SET TO THE MODIFIED SCREEN-IMAGE ON RETURN */
   IF I=-1 & CMDINDX<=2
     THEN DO; /* HE WAS JUST LOOKING */
       CMDDATA='END N';
       RETURN;
       END;
   IF I=0
     THEN DO; /* SAVE IF HE JUST HIT ENTER */
       STRHD=ABEPDF(PSTR,MCURLOC); /* GO CONVERT TO CONTROL BLOCKS */
       CALL PDFSS; /* GO SAVE */
       END;
   END PUTSCR;

 PUTSCRA: PROC RETURNS(FIXED BIN(31,0));
 /**********************************************************************
 *                                                                     *
 * CALLED TO DISPLAY FULL-SCREEN FORMAT FOR EDITING, AND TO SET PSTR   *
 * TO THE PROCESSED INPUT.  IT IS ASSUMED THAT SCREEN1_OUT.FIELD1 AND  *
 * PSTR BOTH CONTAIN THE SCREEN-IMAGE, LESS THE INITIAL '@' CHARACTER. *
 * IF THE USER DOES NOT CHANGE THE DISPLAY AND SIMPLY HITS ENTER,      *
 * PSTR WILL NOT BE CHANGED, AND PUTSCR WILL RETURN -1.  OTHERWISE,    *
 * PUTSCR WILL RETURN THE PFK # (0 FOR ENTER), AFTER DOING THE         *
 * REQUIRED PROCESSING INDICATED BY THE PROGRAM FUNCTION KEY.          *
 *                                                                     *
 **********************************************************************/
   DCL (I,J,K,L,M,N) FIXED BIN(31,0);
   DCL 1 RSTRUCT BASED(RSTRPTR),
     2 RSTRLEN FIXED BIN(31,0),
     2 RSTR CHAR(N REFER(RSTRLEN));
   SUBSTR(CALLFLGS,8,1)=RHPPRINT;
   SELECT(PSCREENLEN*PLINESIZE);
     WHEN(1920) CALL DES1920(SCREEN1_OUT.FIELD1,SCREEN1_IN.FIELD1,
       MAID,CALLFLGS,MCURLOC);
     WHEN(2560) CALL DES2560(SCREEN1_OUT.FIELD1,SCREEN1_IN.FIELD1,
       MAID,CALLFLGS,MCURLOC);
     WHEN(3440) CALL DES3440(SCREEN1_OUT.FIELD1,SCREEN1_IN.FIELD1,
       MAID,CALLFLGS,MCURLOC);
     WHEN(3564) CALL DES3564(SCREEN1_OUT.FIELD1,SCREEN1_IN.FIELD1,
       MAID,CALLFLGS,MCURLOC);
     OTHERWISE SIGNAL ERROR;
     END;
   CURPNL=0; /* GET NORMAL DISPLAY REFRESHED */
   IF SCREEN1_IN.FIELD1=''
     THEN PSTR='@'××PSTR;
     ELSE PSTR='@'××SCREEN1_IN.FIELD1;
   DO I=24 TO 1 BY -1 WHILE(AIDTAB(I)^=MAID);
     END;
   IF I=0
     THEN IF SCREEN1_IN.FIELD1=''
       THEN RETURN(-1); /* HE WAS JUST LOOKING */
       ELSE RETURN(0);  /* NO PFK PROCESSING NECESSARY */
   IF I=1 × I=3 /* IS IT PFK 1 OR 3? */
     THEN DO;
       J=SUFFIX(PSTR,' '); /* FIND LAST NONBLANK */
       IF J^=0
         THEN PSTR=SUBSTR(PSTR,1,J);
       L=LENGTH(PSTR);
       K=L/PLINESIZE;
       M=MOD(L,PLINESIZE);
       IF M=0
         THEN K=K-1;
         ELSE PSTR=PSTR××REPEAT(' ',PLINESIZE-1-M);
       N=PLINESIZE;
       ALLOCATE RSTRUCT;
       RSTR=SUBSTR(PSTR,K*PLINESIZE+1);
       DO UNTIL(LENGTH(PSTR)>=PSCREENLEN*PLINESIZE);
         PSTR=PSTR××RSTR;
         END;
       FREE RSTRUCT;
       IF I=1
         THEN I=0;
       END;
   IF I=2 × I=3 /* IS IT PFK 2 OR 3? */
     THEN DO;
       PSTR=SUBSTR(PSTR,2);
       CALL PDFES;
       END;
   RETURN(I);
   END PUTSCRA;

 SETPSTR: PROC;
 /**********************************************************************
 *                                                                     *
 * CALLED TO CONVERT TEXT IN EXISTING RECORDS STORED IN CONTROL-BLOCK  *
 * FORMAT TO DISPLAY IMAGE FORMAT IN GLOBAL VARIABLE PSTR.             *
 *                                                                     *
 **********************************************************************/
   DCL T PTR;
   DCL AD(0:32766) CHAR(1) BASED(T);
   DCL WD FIXED BIN(31,0) BASED(T);
   DCL (I,J,R) FIXED BIN(31,0);
   PSTR='';
   IF NXTHDR^=HDPTR
     THEN DO;
       R=INDDN->ALCRECL;
       IF SUBSTR(INDDN->ALCFLAG,3,1) /* RECFM=V? */
         THEN R=R-4;
       T=ADDR(NXTHDR->RECSTR);
       T=ADDR(AD(2));
       I=WD; /* I=OFFSET TO STRING DEFINING PANEL */
       J=0;
       DO T=NXTHDR REPEAT T->NXTPTR UNTIL(J>=I);
         J=J+R;
         END;
       IF J^=I
         THEN PSTR=SUBSTR(T->RECSTR××SUBSTR(BLNKS,1,R
           -LENGTH(T->RECSTR)),R-(J-I)+1);
       DO T=T->NXTPTR REPEAT T->NXTPTR WHILE(T^=HDPTR);
         PSTR=PSTR××T->RECSTR××SUBSTR(BLNKS,1,R-
           LENGTH(T->RECSTR));
         END;
       END;
   END SETPSTR;

 SETSCR: PROC;
 /**********************************************************************
 *                                                                     *
 * CALLED TO CONVERT TEXT IN EXISTING RECORDS TO OUTPUT FOR FULL-      *
 * SCREEN FORMATTED DISPLAY.  WILL SET PSTR AND SCREEN1_OUT.FIELD1.    *
 *                                                                     *
 **********************************************************************/
   DCL T PTR;

   PSTR=SUBSTR(BLNKS,1,PLINESIZE-1);
   IF NXTHDR^=HDPTR
     THEN IF LENGTH(NXTHDR->RECSTR)^=0
       THEN IF LENGTH(NXTHDR->RECSTR)=1
         THEN PSTR=SUBSTR(BLNKS,1,PLINESIZE-1);
         ELSE PSTR=SUBSTR(NXTHDR->RECSTR,2,MIN(PLINESIZE,
           LENGTH(NXTHDR->RECSTR))-1)××
           SUBSTR(BLNKS,1,MAX(0,PLINESIZE-LENGTH(NXTHDR->RECSTR)));
   DO T=NXTHDR->NXTPTR REPEAT T->NXTPTR WHILE(T^=HDPTR);
     IF LENGTH(T->RECSTR)>=PLINESIZE
       THEN PSTR=PSTR××SUBSTR(T->RECSTR,1,PLINESIZE);
       ELSE PSTR=PSTR××T->RECSTR××SUBSTR(BLNKS,1,PLINESIZE-
         LENGTH(T->RECSTR));
     END;
   SCREEN1_OUT.FIELD1=PSTR××BLNKS;
   END SETSCR;

   END;
