*$.HE GENERALIZED SUBROUTINES - SYSSTOW
*$.HE PLI INTERFACE TO STOW MACRO
*$.PL 55
*$.PN 0
*$.PA
*$.SS
*$.NF
*$12/1/76
*$AUTHOR:  T. SMITH
*$SOURCE MODULE NAME:  SYSSTOW
*$DOCUMENTATION ID:  *$
*$.FI L
*$.SP 5
*$THIS ROUTINE PROVIDES THE PLI PROGRAMMER WITH AN INTERFACE TO THE
*$STOW MACRO.  IT CAN BE USED TO UPDATE A PARTITIONED DATA SET
*$DIRECTORY BY ADDING, CHANGING, REPLACING OR DELETING AN ENTRY IN THE
*$DIRECTORY.
*$.SP 1
*$CALL SYSSTOW(DCBPTR,STOWDATA,ACTION,RETCODE);
*$.SP 1
*$.CE 1
*$DEFINITION OF TERMS
*$.SP 1
*$ACTION CHAR(*)
*$.IN 5
*$THIS IS A ONE-BYTE CHARACTER STRING WHICH DESIGNATES THE ACTION
*$TO BE TAKEN ON THE DIRECTORY.
*$.IN 10
*$'A' - ADD TO THE DIRECTORY.
*$.IN 10
*$'C' - CHANGE THE NAME OF AN EXISTING MEMBER OR ALIAS.
*$.IN 10
*$'D' - DELETE AN ENTRY FROM THE DIRECTORY.
*$.IN 10
*$'R' - REPLACE AN EXISTING ENTRY IF FOUND.  OTHERWISE, THE NEW
*$ENTRY IS ADDED AND RETCODE IS SET TO 8.
*$.IN 0
*$DCBPTR
*$.IN 5
*$POINTER VARIABLE CONTAINING THE ADDRESS OF THE BPAM DCB.  SET BY A
*$PREVIOUS CALL TO SYSDCBP.
*$.IN 0
*$RETCODE
*$.IN 5
*$FIXED BIN(31,0) - SET AS FOLLOWS:
*$.IN 10
*$00 - UPDATE SUCCESSFUL
*$.IN 10
*$04 - THE DIRECTORY ALREADY CONTAINS THE SPECIFIED NEW NAME.
*$.IN 10
*$08 - THE SPECIFIED NAME COULD NOT BE FOUND.
*$.IN 10
*$12 - NO SPACE LEFT IN THE DIRECTORY.  ADD FAILED.
*$.IN 10
*$16 - PERMENENT I/O ERROR.
*$.IN 10
*$20 - DCB IS NOT OPEN OR IS OPENED INCORRECTLY.
*$.IN 10
*$24 - CONDITIONAL GETMAIN WITH STOW MACRO WAS UNSUCCESSFUL.
*$.IN 0
*$STOWDATA
*$.IN 5
*$THIS PARAMETER VARIES DEPENDING ON THE ACTION CODE:
*$.IN 10
*$'A' OR 'R' - POINTER VARIABLE CONTAINING THE ADDRESS OF THE
*$DIRECTORY INFORMATION.  THIS INFORMATION HAS THE FOLLOWING FORMAT:
*$.IN 15
*$NAME CHAR(8) ALIGNED ON A HALFWORD BOUNDARY, AND CONTAINING THE
*$ALIAS OR MEMBER NAME BEING ADDED OR REPLACED.
*$.SP 1
*$TTR CHAR(3) CONTAINING RELATIVE TRACK AND BLOCK NUMBER OF THE
*$SPECIFIED MEMBER.  IF YOU ARE ADDING A NEW MEMBER TO THE PDS, AND
*$HAVE USED SYSWRIT TO WRITE THE BLOCKS OF THE MEMBER, THEN YOU DO
*$NOT NEED TO FILL IN TTR.  SYSWRIT WILL HAVE ISSUED THE NOTE MACRO
*$FOR THE FIRST BLOCK OF THE MEMBER, AND WILL HAVE SAVED THE TTR AT
*$A LOCATION JUST BEYOND THE DCB.  SYSSTOW WILL COPY THIS TTR, AND
*$WILL CLEAR THE SAVE LOCATION FOR THE NEXT MEMBER.
*$.SP 1
*$C BIT(8)
*$.IN 20
*$BIT 0 - 0 IF MEMBER NAME, 1 IF ALIAS
*$.IN 20
*$BITS 1 AND 2 - NUMBER OF TTRN FIELDS (MAXIMUM OF THREE) IN THE
*$USER DATA FIELD.
*$.IN 20
*$BITS 3 THRU 7 - TOTAL NUMBER OF HALFWORDS IN THE USER DATA FIELD.
*$.SP 1
*$.IN 10
*$'D' - CHAR(8) SPECIFYING MEMBER NAME OR ALIAS TO BE DELETED.
*$.SP 1
*$'C' - CHAR(16) - THE FIRST EIGHT BYTES CONTAIN THE OLD MEMBER
*$NAME OR ALIAS, AND THE SECOND EIGHT BYTES CONTAIN THE NEW MEMBER
*$NAME OR ALIAS.
SYSSTOW  PLIENTRY ,COMPILE=&SYSPARM
         LM    2,5,0(1)
         L     1,0(2)              R1=A(DCB)
         L     3,0(3)
         L     4,0(4)
         CLI   0(4),C'C'
         BE    TYPEC
         CLI   0(4),C'D'
         BE    TYPED
         USING IHADCB,1
         CLC   TTRSAV,=X'000000'       DID SYSWRIT SAVE TTR?
         BE    GOTTR   BR IF YES
         MVC   8(3,3),TTRSAV       MOVE THE ADDRESSIN
         MVC   TTRSAV,=X'000000'    ZERO OUT THE ADDRESS IN HOLD
GOTTR   CLI   0(4),C'A'
         BE    TYPEA
         CLI   0(4),C'R'
         BNE   EXIT
* 'R'
         STOW  (1),(3),R
         ST    15,0(5)
         B     EXIT
* 'A'
TYPEA    STOW  (1),(3),A
         ST    15,0(5)
         B     EXIT
* 'C'
TYPEC    STOW  (1),(3),C
         ST    15,0(5)
         B     EXIT
* 'D'
TYPED    STOW  (1),(3),D
         ST    15,0(5)
EXIT     PLIEXIT
         LTORG
         DCBD  DSORG=PO
TTRSAV   DS    CL3
         LTORG
         END
