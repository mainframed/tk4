***************************************************************$
*$.HE GENERALIZED SUBROUTINES - PUTGET
*$.HE PUTGET - INTERFACE TO TSO PUTGET MACRO
*$.PL 55
*$.PN 0
*$.PA
*$.SS
*$.NF
*$5/15/74
*$AUTHOR:  T. SMITH
*$SOURCE MODULE NAME:  U285
*$DOCUMENTATION ID:  *$
*$.FI L
*$.SP 5
***************************************************************$
*
*$THIS ROUTINE SUPPLIES THE PLI PROGRAMMER WITH AN INTERFACE TO THE
*$TSO PUTGET MACRO.  IT CAN BE USED TO PUT MESSAGES OUT TO THE
*$TERMINAL AND TO OBTAIN A RESPONSE TO THOSE MESSAGES.  A MESSAGE TO
*$THE USER AT THE TERMINAL WHICH REQUIRES A RESPONSE IS CALLED A
*$CONVERSATIONAL MESSAGE.  THERE ARE TWO TYPES OF CONVERSATIONAL
*$MESSAGES:
*$.IN 5
*$.SP 1
*$MODE MESSAGES - THOSE WHICH TELL THE USER AT THE TERMINAL WHICH
*$PROCESSING MODE HE IS IN SO THAT HE CAN ENTER A RESPONSE
*$APPLICABLE TO THAT PROCESSING MODE.  EXAMPLES OF MODE MESSAGES
*$ARE THE READY SENT TO THE TERMINAL BY THE TERMINAL MONITOR
*$PROGRAM TO INDICATE THAT IT EXPECTS A COMMAND TO BE ENTERED,
*$AND THE COMMAND NAME (EDIT, TEST, ETC.) SENT BY A COMMAND PROCESSOR
*$TO INDICATE THAT IT IS READY TO ACCEPT A SUBCOMMAND NAME.
*$.SP 1
*$PROMPT MESSAGES - THOSE WHICH PROMPT THE USER AT THE TERMINAL TO
*$ENTER PARAMETERS REQUIRED BY THE PROGRAM IN CONTROL, OR TO
*$REENTER THOSE PARAMETERS WHICH WERE PREVIOUSLY ENTERED INCORRECTLY.
*$PROMPT INFORMATION CAN ONLY BE OBTAINED FROM THE USER AT THE
*$TERMINAL.
*$.SP 1
*$.IN 0
*$THE INPUT LINE RETURNED BY THE PUTGET SERVICE ROUTINE CAN COME FROM
*$THE TERMINAL OR FROM AN IN-STORAGE LIST; PUTGET DETERMINES
*$THE SOURCE OF INPUT FROM THE TOP ELEMENT OF THE INPUT STACK
*$UNLESS YOU HAVE SPECIFIED THE TERM OR ATTN OPERANDS IN THE
*$PUTGET MACRO INSTRUCTION.
*$.SP 1
*$.NF
*$CALL PUTGET(CPPLUPT,CPPLECT,IOECB,OUTPUT,RETCODE,INPUT,
*$       'SINGLE' OR 'MULTLVL',
*$       'PROMPT' OR 'MODE' OR 'PTBYPS' OR 'TERM' OR 'ATTN',
*$       'PEDIT' OR 'PASIS' OR 'CONTROL',
*$       'PWAIT' OR 'PNOWAIT',
*$       'NOHOLD' OR 'HOLD',
*$       'NOBREAK' OR 'BREAKIN',
*$       'GEDIT' OR 'GASIS',
*$       'GNOWAIT' OR 'GWAIT',
*$       'ENTRY',
*$       EPPTR);
*$.SP 1
*$.FI L
*
*$NOTE - IN THE ABOVE FORMAT DESCRIPTION, THOSE CHARACTER LITERALS
*$SPECIFIED ON THE SAME LINE ARE MUTUALLY EXCLUSIVE, AND ONLY ONE
*$CAN BE SPECIFIED.  FOR A GIVEN GROUP,
*$THE FIRST ONE SPECIFIED ON THE LINE IS THE DEFAULT.
*
**********************************************************$
*
*$.SP 1
*$.CE 1
*$DEFINITION OF TERMS
*$.SP 1
*
********************************************************$
*
*$.IN 0
*$'ATTN'
*$.IN 5
*$SPECIFIES THAT THE OUTPUT LINE (A MODE MESSAGE)
*$IS TO BE INITIALLY SUPPRESSED BY AN INPUT LINE IS TO
*$BE RETURNED FROM THE TERMINAL.
*$.IN 0
*$'BREAKIN'
*$.IN 5
*$SPECIFIES THAT OUTPUT HAS PRECEDENCE OVER INPUT.  IF THE USER
*$THE TERMINAL IS TRANSMITTING, HE IS INTERRUPTED, AND THE
*$OUTPUT LINE IS SENT.  ANY DATA THAT WAS RECEIVED BEFORE
*$THE INTERRUPTION IS KEPT AND DISPLAYED AT THE TERMINAL
*$FOLLOWING THE OUTPUT LINE.
*$.IN 0
*$'CONTROL'
*$.IN 5
*$SPECIFIES THAT THE OUTPUT LINE IS COMPOSED OF TERMINAL CONTROL
*$CHARACTERS AND WILL NOT PRINT OR MOVE THE CARRIER
*$ON THE TERMINAL. THIS OPTIONS SHOULD BE USED FOR
*$TRANSMISSION OF CHARACTERS SUCH AS 'BYPASS',
*$'RESTORE', OR 'BELL RING'.
*$.IN 0
*$CPPLECT
*$.IN 5
*$POINTER VARIABLE SPECIFYING THE ADDRESS OF THE ENVIRONMENT
*$CONTROL TABLE (ECT).  YOU MAY OBTAIN THIS ADDRESS FROM THE
*$CPPL POINTED TO WHEN A COMMAND PROCESSOR IS ATTACHED
*$BY THE TERMINAL MONITOR PROGRAM.
*$.IN 0
*$CPPLUPT
*$.IN 5
*$POINTER VARIABLE SPECIFYING THE ADDRESS OF THE USER PROFILE
*$TABLE (UPT).  YOU MAY OBTAIN THIS ADDRESS FROM THE CPPL
*$POINTED TO WHEN A COMMAND PROCESSOR IS ATTACHED BY
*$THE TERMINAL MONITOR PROGRAM.
*$.IN 0
*$'ENTRY'
*$.IN 5
*$SPECIFIES THAT EPPTR HAS BEEN SUPPLIED.
*$.IN 0
*$EPPTR
*$.IN 5
*$POINTER VARIABLE CONTAINING THE ADDRESS THE PUTLINE SERVICE
*$USING THE NAME IKJPTGT.
*$.IN 0
*$'GASIS'
*$.IN 5
*$SPECIFIES THAT MINIMAL EDITING IS TO BE DONE BY THE TGET SVC.
*$THE FOLLOWING EDITING FUNCTIONS WILL BE PERFORMED BY TGET:
*$.IN 10
*$A. TRANSMISSION CONTROL CHARACTERS ARE REMOVED.
*$.IN 10
*$B. THE LINE OF INPUT IS TRANSLATED FROM TERMINAL CODE TO
*$EBCDIC.
*$.IN 10
*$D. LINE DELETION AND CHARACTER DELETION EDITING
*$ARE PERFORMED.
*$.IN 0
*$'GEDIT'
*$.IN 5
*$SPECIFIES THAT IN ADDITION TO MINIMAL EDITING (SEE ASIS)
*$THE INPUT BUFFER IS TO BE FILLED OUT WITH TRAILING BLANKS.
*$.IN 0
*$'GNOWAIT'
*$.IN 5
*$SPECIFIES THAT CONTRO IS TO BE RETURNED TO THE ROUTINE THAT
*$ISSUED THE GETLINE MACRO WHETHER OR NOT A LINE OF INPUT IS
*$AVAILABLE.  IF A LINE OF INPUT IS NOT AVAILABLE,
*$A RETURN CODE OF 12 DECIMAL IS RETURNED TO
*$THE COMMAND PROCESSOR.
*$.IN 0
*$'GWAIT'
*$.IN 5
*$SPECIFIES THAT CONTROL IS TO BE RETURNED TO THE ROUTINE
*$THAT ISSUED THE GETLINE MACRO INSTRUCTION ONLY AFTER IN
*$.IN 0
*$'HOLD'
*$.IN 5
*$SPECIFIES THAT THE MODULE THAT ISSUED THE PUTLINE
*$MACRO IS NOT TO RESUME PROCESSING UNTIL THE OUTPUT
*$LINE HAS BEEN PUT OUT TO THE TERMINAL OR DELETED.
*$.IN 0
*$INPUT
*$.IN 5
*$POINTER VARIABLE IN WHICH THE ADDRESS OF THE
*$INPUT BUFFER WILL BE RETURNED.
*$.IN 0
*$IOECB
*$.IN 5
*$SPECIFIES THE ADDRESS OF AN ECB.  THIS ADDRESS WILL BE
*$PLACED INTO THE IOPL.
*$.IN 0
*$'MODE'
*$.IN 5
*$THE OUTPUT LINE IS A MODE MESSAGE.
*$.IN 0
*$'MULTLVL'
*$.IN 5
*$THE OUTPUT MESSAGE CONSISTS OF MULTIPLE LEVELS.
*$INFOR MUST BE SPECIFIED.
*$.IN 0
*$'NOBREAK'
*$.IN 5
*$SPECIFIES THAT IF THE TERMINAL USER HAS STARTED
*$TO ENTER INPUT, HE IS NOT TO BE INTERRUPTED.
*$THE OUTPUT MESSAGE IS PLACED ON THE OUTPUT QUEUE
*$TO BE PRINTED AFTER THE TERMINAL USER HAS
*$COMPLETED THE LINE.
*$.IN 0
*$'NOHOLD'
*$.IN 5
*$SPECIFIES THAT CONTROL IS RETURNED TO THE ROUTINE
*$THAT ISSUED THE PUTLINE MACRO INSTRUCTION, AND IT CAN
*$CONTINUE PROCESSING, AS SOON AS THE OUTPUT LINE HAS BEEN
*$PLACED ON THE OUTPUT QUEUE.
*$.IN 0
*$OUTPUT
*$.IN 5
*$POINTER VARIABLE CONTAINING THE ADDRESS OR THE NAME OF THE OUTPUT
*$LINE DESCRIPTOR OR NULL - (FF000000).  THE OUTPUT
*$LINE DESCRIPTOR (OLD) DESCRIBES THE MESSAGE TO BE PUT
*$OUT, AND CONTAINS THE ADDRESS OF THE BEGINNING (THE
*$ONE-WORD HEADER OF THE MESSAGE OR MESSAGES TO BE
*$WRITTEN TO THE TERMINAL.  YOU HAVE THE OPTION UNDER
*$MODE PROCESSING TO PROVIDE OR NOT PROVIDE AN OUTPUT
*$MESSAGE.  IF YOU DO NOT PROVIDE AN OUTPUT LINE, SET
*$OUTPUT=NULL, AND ONLY THE GET FUNCTIONS WILL TAKE
*$PLACE.  IF YOU DO PROVIDE AN OUTPUT MESSAGE, THE TYPE
*$OF MESSAGE AND THE PROCESSING TO BE PERFORMED
*$BY THE PUTGET SERVICE ROUTINE ARE DESCRIBED BY THE
*$OUTPUT SUBLIST OPERANDS SINGLE, MULTLVL, PROMPT, MODE,
*$PTBYPS, TERM, AND ATTN.  THE DEFAULT VALUES ARE SINGLE
*$AND PROMPT.
*$.IN 0
*$'PASIS'
*$.IN 5
*$SPECIFIES THAT MINIMAL EDITING IS TO BE PERFORMED BY TPUT
*$.IN 0
*$'PEDIT'
*$.IN 5
*$SPECIFIES EDITING OVER AND ABOVE THE MINIMAL.
*$.IN 0
*$'PNOWAIT'
*$.IN 5
*$SPECIFIES THAT CONTROL SHOULD BE RETURNED WHETHER
*$OR NOT A TERMINAL OUTPUT BUFFER IS AVAILABLE.  IF
*$NO BUFFER IS AVAILABLE, A RETURN CODE OF 18 IS
*$RETURNED IN RETCODE.
*$.IN 0
*$'PROMPT'
*$.IN 5
*$THE OUTPUT LINE IS A PROMPT MESSAGE.
*$.IN 0
*$'PWAIT'
*$.IN 5
*$SPECIFIES THAT CONTROL WILL NOT BE RETURNED UNTIL
*$THE OUTPUT LINE HAS BEEN PLACED INTO A TERMINAL
*$OUTPUT BUFFER.
*$.IN 0
*$'PTBYPS'
*$.IN 5
*$THE OUTPUT LINE IS A PROMPT MESSAGE AND THE TERMINAL
*$USER'S RESPONSE WILL NOT PRINT AT THOSE TERMINALS THAT
*$SUPPORT THE PRINT INHIBIT FEATURE.  A TERMINAL USER CAN
*$OVERRIDE BYPASS PROCESSING BY HITTING ATTENTION
*$FOLLOWED BY A CARRIAGE RETURN BEFORE ENTERING HIS INPUT.
*$.IN 0
*$RETCODE
*$.IN 5
*$A FIXED BIN(31,0) VARIABLE TO CONTAIN THE RETURN CODE -
*$.IN 10
*$0 PUTGET COMPLETED NORMALLY.  THE LINE OBTAINED
*$.IN 10
*$CAME FROM THE TERMINAL.
*$.IN 10
*$4 PUTGET COMPLETED NORMALLY.  THE LINE OBTAINED
*$DID NOT COME FROM THE TERMINAL.  (MODE
*$MESSAGES ONLY).
*$.IN 10
*$8 THE PUTGET SERVICE ROUTINE DID NOT COMPLETE.
*$AN ATTENTION INTERRUPT OCCURRED DURING THE
*$EXECUTION OF PUTGET, AND THE ATTENTION HANDLER
*$TURNED ON THE COMPLETION BIT IN THE COMMUNICATIONS
*$ECB.
*$.IN 10
*$12 NO PROMPTING WAS ALLOWED ON A PROMPT REQUEST.
*$EITHER THE USER AT THE TERMINAL REQUESTED NO
*$PROMPTING WITH THE PROFILE COMMAND, OR THE
*$CURRENT SOURCE OF INPUT IS AN IN-STORAGE LIST.
*$.IN 10
*$12 A LINE COULD NOT BE OBTAINED AFTER A MODE
*$REQUEST. A CHAIN OF SECOND LEVEL INFORMATAL MESSAGES
*$EXISTS, AND THE CURRENT STACK ELEMENT IS NON-TERMINAL
*$BUT THE TERMINAL USER DID NOT REQUEST PAUSE PROCESSING
*$WITH THE PROFILE COMMAND.  THE MESSAGES ARE THEREFORE
*$NOT AVAILABLE TO HIM.
*$.IN 10
*$16 THE NOWAIT OPTION WAS SPECIFIED FOR TPUT AND
*$NO LINE WAS PUT OUT OR RECEIVED.
*$.IN 10
*$20 THE NOWAIT OPTION WAS SPECIFIED FOR TGET AND
*$NO LINE WAS RECEIVED.
*$.IN 10
*$24 INVALID PARAMETERS WERE SUPPLIED TO THE
*$PUTGET SERVICE ROUTINE.
*$.IN 10
*$28 A CONDITIONAL GETMAIN WAS ISSUED BY PUTGET FOR
*$OUTPUT BUFFERS AND THERE WAS NOT SIFFICIENT SPACE
*$TO SATISFY THE REQUEST.
*$.IN 0
*$'SINGLE'
*$.IN 5
*$THE OUTPUT LINE IS A SINGLE LINE.
*$.IN 0
*$'TERM'
*$.IN 5
*$SPECIFIES THAT THE OUTPUT LINE (A MODE MESSAGE)
*$IS TO BE WRITTEN TO THE TERMINAL, AND A LINE IS TO
*$BE RETURNED FROM THE TERMINAL, REGARDLESS OF THE TOP
*$ELEMENT OF THE INPUT STACK.
*
*************************************************************$
PUTGET   PLIENTRY ,DSA=152,COMPILE=&SYSPARM
         XC    PGPBFLG1(MYLEN),PGPBFLG1
         LA    2,PGPBFLG1
         ST    2,IOPLIOPB
         OI    PGPBFLG2+2,X'80'
         SR    2,2                   2 = PARM CNT * 4
LOOPA    DS    0H
         L     3,0(1,2)             3=NXT PARM LIST PTR
         LR    4,3
         CH    2,=H'8'               IS IT ONE OF FIRST THREE PARMS
         BC    2,NOTFST                BR IF NOT
         BC    8,ISECB                 BR IF ECB PARM
         L     4,0(3)                4 = A(UPT/ECT/ECB)
ISECB    DS    0H
         ST    4,IOPL(2)             STORE IN IOPL
ELOOPA   DS    0H
         LA    2,4(2)                BUMP 2
         LTR   3,3                   WAS IT LAST PARM?
         BC    2,LOOPA                 BR IF NOT
         CH    2,=H'24'               WERE AT LEAST 6 PARMS PASSED?
         BC    4,BADFORM               BR IF NOT
         LA    1,IOPL
         TM    PGPBFLG1,X'04'          WAS MULTLVL SET?
         BC    1,BYSNGL                BR IF YES
         OI    PGPBFLG1,X'10'          SET SINGLE LVL
BYSNGL   DS    0H
         TM    PGPBFLG1+1,X'98'        WAS MODE,PTBYPS,OR ATTN SET?
         BC    7,BYPRMPT               BR IF ANY SET
         OI    PGPBFLG1,X'01'          SET PROMPT
         OI    PGPBFLG2,X'10'          SET TERM
BYPRMPT  DS    0H
         LINK  EP=IKJPTGT
SETRET   DS    0H
         L     1,SAVINP
         MVC   0(4,1),PGPBIBUF        SET INPUT PTR
SETRETA  DS    0H
         L     1,SAVRET
         ST    15,0(1)
EXIT     PLIEXIT
BADFORM  DS    0H
         LA    15,24                   INDICATE INVALID PARAMETERS
         B     SETRETA
NOTFST   DS    0H
         CH    2,=H'20'               IS IT OUTPU,RETCODE,OR INPUT?
         BC    2,CKLIT                 BR IF NOT
         CH    2,=H'16'               WHICH IS IT?
         BC    4,SETOUT                BR IF OUTPUT
*                   IT IS EITHER RETCODE OR INPUT
         ST    3,SAVREG(2)           STORE POINTER
         B     ELOOPA
SETOUT   DS    0H
         L     4,0(3)                4 = A(OUTPUT STRUCTURE)
         ST    4,PGPBLSDA             STORE A(OUTPUT) IN PARM FLD
         B     ELOOPA
CKLIT    DS    0H
         LTR   3,3                   IS IT LAST PARM?
         BC    2,CKLITA                BR IF NOT
         TM    PGPBIBUF,X'80'          WAS 'ENTRY' SPECIFIED?
         BC    8,CKLITA                BR IF NOT
         LA    1,IOPL
         L     15,0(3)                RF = ENTRY POINT
         BALR  14,15                   GO TO IKJPTGT
         B     SETRET
CKLITA   DS    0H
         L     4,0(3)                4 = A(OPTION)
         LA    5,OPTAB
         SR    6,6
LOOPB    DS    0H
         CLI   0(5),X'FF'             IS IT END OF TABLE?
         BC    8,BADFORM               BR IF YES
         IC    6,2(5)                6 = LEN(OPTION)-1
         EX    6,CLC
         BC    8,ELOOPB                BR IF OPTION FOUND
         LA    5,4(5,6)             BUMP 5 TONEXT OPTAB ENTRY
         B     LOOPB
ELOOPB   DS    0H
         IC    6,0(5)                 6 = OFFSET IN PGPB
         LA    6,PGPB(6)             6 = A(BYTE IN PGPB)
         OC    0(0,6),1(5)
         B     ELOOPA
         DS    0H
CLC      CLC   0(0,4),3(5)
OI       OI    0(6),X'00'
OPTAB    DS    0C
*                OFFSET IN PGPB TO APPROPRIATE FLAG
*                      MASK FOR OI INSTRUCTION
*                            LENGTH OPTION NAME-1
*                                  OPTION NAME
         DC    X'00',X'10',X'05',C'SINGLE'
         DC    X'00',X'04',X'06',C'MULTLVL'
         DC    X'00',X'01',X'05',C'PROMPT'
         DC    X'01',X'80',X'03',C'MODE'
         DC    X'01',X'10',X'05',C'PTBYPS'
         DC    X'08',X'10',X'03',C'TERM'
         DC    X'01',X'08',X'03',C'ATTN'
         DC    X'02',X'00',X'04',C'PEDIT'
         DC    X'02',X'01',X'04',C'PASIS'
         DC    X'02',X'02',X'06',C'CONTROL'
         DC    X'02',X'00',X'04',C'PWAIT'
         DC    X'02',X'10',X'06',C'PNOWAIT'
         DC    X'02',X'00',X'05',C'NOHOLD'
         DC    X'02',X'08',X'03',C'HOLD'
         DC    X'02',X'00',X'06',C'NOBREAK'
         DC    X'02',X'04',X'06',C'BREAKIN'
         DC    X'0A',X'00',X'04',C'GEDIT'
         DC    X'0A',X'01',X'04',C'GASIS'
         DC    X'0A',X'00',X'04',C'GWAIT'
         DC    X'0A',X'10',X'06',C'GNOWAIT'
         DC    X'0C',X'80',X'04',C'ENTRY'
         DC    X'FF'
         LTORG
DSA      DSECT
PGPB     DS    0H
PGPBFLG1 DS    F FLAGS
*        BYTE 1
*              ..0. .... ALWAYS ZERO FOR PUTGET
*              ...1 .... SINGLE
*              .... 0... MUST BE ZERO FOR PUTGET
*              .... .1.. MULTLVL
*              .... ...1 PROMPT
*              XX.. ..X. RESERVED
*        BYTE 2
*              1... .... MODE
*              ...1 .... PTBYPS
*              .... 1... ATTN
*              .XX. .XXX RESERVED
*        BYTE 3
*              0... .... ALWAYS ZERO FOR TPUT
*              ...1 .... PNOWAIT
*              .... 1... HOLD
*              .... .1.. BREAKIN
*              .... ..10 CONTROL
*              .... ...1 PASIS
*              .XX. .... RESERVED
*        BYTE 4
*              XXXX XXXX RESERVED
PGPBLSDA DS    F A(OUTPUT LSD)
PGPBFLG2 DS    F FLAGS
*        BYTE 1
*              .00. .... ALWAYS ZERO FOR PUTGET
*              ...1 .... TERM
*              X... XXXX RESERVED
*        BYTE 2
*              XXXX XXXX RESERVED
*        BYTE 3
*              1... .... ALWAYS 1 FOR TGET
*              ...1 .... GNOWAIT
*              .... ...1 GASIS
*              .XX. XX.. RESERVED
*        BYTE 4
*              XXXX XXXX RESERVED
PGPBIBUF DS    F FILLED IN WITH A(INPUT BUFFER) - HI-BYT SET TO 1
*              AT ENTRY IF 'ENTRY' SPECIFIED
IOPL     DS    0F
IOPLUPT  DS    F
IOPLECT  DS    F
IOPLECB  DS    F
IOPLIOPB DS    F
         DS    0F
         ORG   *-16
SAVREG   DS    0F
         ORG   *+16
SAVRET   DS    F
SAVINP   DS    F
MYLEN    EQU   *-PGPB
DSALEN   EQU   *-DSA
         END
