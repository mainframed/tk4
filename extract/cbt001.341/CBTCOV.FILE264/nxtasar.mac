 /* NXTASAR */
 NXTASAR:  PROC(PRMPTR);
 /* THIS SUBROUTINE WILL SET ASARDPT TO POINT TO THE NEXT ELEMENT AFTER
    THE ONE LAST REFERENCED. */
  DCL PRMPTR PTR;
  % INCLUDE ASARDCL;
  DCL GFASAR ENTRY(PTR,FIXED BIN(15,0),BIT(1))
    RETURNS(PTR);
  ASARHP=PRMPTR;
  DO I = 1 TO ASARDCT WHILE(ASARDPT(I)^=NULL);
    END;
  IF I <= ASARDCT
    THEN DO;
      DO I = I TO ASARDCT;
        ASARDPT(I)=GFASAR(ASARHP,I,'0'B); /* GET FIRST IN DIMENSION */
        END;
      RETURN;
      END;
  ASARDPT(ASARDCT)=GETIX(ASARDCT-1,ASARDPT(ASARDCT));
  RETURN;
 GETIX:  PROC(DCT,ELP) RECURSIVE RETURNS(PTR);
  /* DCT MUST BE A DIMENSION NUMBER.  GETIX WILL LOCATE THE NEXT
     ELEMENT IN DIMENSION DCT+1, AND WILL RETURN A POINTER TO IT.
     WHEN THERE ARE NO MORE ELEMENTS IN DIMENSION DCT+1, GETIX WILL
     RECURSIVELY CALL ITSELF TO GET THE NEXT ELEMENT IN DIMENSION
     DCT, AND WILL RETURN THE FIRST ELEMENT AT DIMENSION DCT+1
     POINTED TO BY THE NEW ELEMENT IN DIMENSION DCT. */
  DCL DCT FIXED BIN(15,0);
  DCL (ELP,P,R) PTR;
  IF ELP->ASARNP^=NULL
    THEN RETURN(ELP->ASARNP);
  DO P=ELP->ASARFGP->ASARIXP REPEAT P->ASARFGP->ASARIXP
    WHILE(SUBSTR(P->ASARELFL,1,1));
    IF P->ASARNP^=NULL
      THEN DO;
        DO P=P->ASARNP REPEAT P->ASAREL WHILE(SUBSTR(P->ASARELFL,1,1));
          END;
        RETURN(P);
        END;
    END;
  /* P SHOULD NOW MATCH ASARDPT(DCT), OR ASARHP IF DCT=0 */
  IF DCT=0
    THEN RETURN(NULL); /* ALL DONE IF TOP DIMENSION */
  ASARDPT(DCT)=GETIX(DCT-1,ASARDPT(DCT));
  IF ASARDPT(DCT)=NULL
    THEN RETURN(NULL);
  DO P=ASARDPT(DCT)->ASAREL REPEAT P->ASAREL
    WHILE(SUBSTR(P->ASARELFL,1,1));
    END;
  RETURN(P);
  END GETIX;
  END NXTASAR;
