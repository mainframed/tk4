 /* SPLINE */
 /*
0*$.HE GENERALIZED SUBROUTINES - SPLINE
0*$.HE SPLINE
0*$.PL 55
0*$.PN 0
0*$.PA
0*$.SS
0*$.NF
0*$09/23/86
0*$AUTHOR:  T. SMITH
0*$SOURCE MODULE NAME:  SPLINE
0*$DOCUMENTATION ID:  0*$
0*$.FI L
0*$.SP 5
0*$SPLINE INTERPOLATES A SMOOTH CURVE THROUGH A SET OF POINTS.  THE
0*$CURVE IS BASED ON A SERIES OF CUBIC FUNCTIONS WHOSE DOMAINS
0*$RANGE BETWEEN CONTIGUOUS PAIRS OF POINTS IN THE INPUT SET.
0*$.SP 1
0*$SPLINE USES ALGORITHMS DESCRIBED IN THE SEPTEMBER 1986 ISSUE OF
0*$"DR. DOBB'S JOURNAL OF SOFTWARE TOOLS", IN AN ARTICLE BY IAN E.
0*$ASHDOWN TITLED "CURVE FITTING WITH CUBIC SPLINES."
0*$.SP 1
0*$CALL FORMAT IS AS FOLLOWS:
0*$.SP 1
0*$.IN 5
0*$.NF
0*$DCL SPLINE ENTRY RETURNS(FIXED BIN(15,0));
0*$I=SPLINE(XIN,YIN,DIN,XOUT,YOUT,DOUT,K);
0*$.FI L
0*$.IN 0
0*$.SP 1
0*$WHERE -
0*$.SP 1
0*$XIN - IS AN ARRAY OF DEC FLOAT(6) CONTAINING X COORDINATES FOR
0*$THE INPUT SET OF POINTS.
0*$.SP 1
0*$YIN - IS AN ARRAY OF DEC FLOAT(6) CONTAINING Y COORDINATES FOR
0*$THE INPUT SET OF POINTS, OF WHICH AT LEAST FOUR MUST BE SUPPLIED.
0*$.SP 1
0*$DIN - IS FIXED BIN(15,0) CONTAINING NUMBER OF ELEMENTS TO USE FROM
0*$INPUT ARRAYS XIN AND YIN.
0*$.SP 1
0*$XOUT - THE SPLINE SUBROUTINE WILL FILL THIS IN WITH X COORDINATES
0*$OF POINTS EQUALLY SPACED ON THE RESULTING CURVE.
0*$.SP 1
0*$YOUT - THE SPLINE SUBROUTINE WILL FILL THIS IN WITH Y COORDINATES
0*$OF POINTS EQUALLY SPACED ON THE RESULTING CURVE.
0*$.SP 1
0*$DOUT - IS FIXED BIN(15,0) CONTAINING NUMBER OF ELEMENTS TO USE IN
0*$OUTPUT ARRAYS XOUT AND YOUT.
0*$.SP 1
0*$K - IS DEC FLOAT(6), AND MUST BE A POSITIVE CONSTANT USED IN
0*$DETERMINING END CONDITIONS.  TWO COMMON VALUES ARE 0 AND 0.5.
0*$.SP 1
0*$THE RETURN CODE GIVEN BY SPLINE MAY TAKE THE FOLLOWING VALUES:
0*$.SP 1
0*$0 - PROCESSING COMPLETE.
0*$.SP 1
0*$3 - DIMENSION OF XOUT,YOUT MUST BE >= THAT OF XIN,YIN.
0*$.SP 1
0*$4 - K<0
0*$.SP 1
0*$5 - A MINIMUM OF FOUR PAIRS OF INPUT COORDINATES ARE REQUIRED.
0*$.SP 1
0*$6 - X(I-1)<X(I)<X(I+1) MUST BE TRUE FOR I=2 THRU N-1.
 */
 SPLINE: PROC(XIN,YIN,DIN,XOUT,YOUT,DOUT,K) RETURNS(FIXED BIN(15,0))
   OPTIONS(REENTRANT);
   DCL (XIN(*),YIN(*),K,XOUT(*),YOUT(*)) DEC FLOAT(6);
   DCL (DIN,DOUT) FIXED BIN(15,0);
   DFT RANGE(*) FIXED BIN VALUE(FIXED BIN(15,0));

   IF K<0.0
     THEN RETURN(4);
   IF DIN<4
     THEN RETURN(5);
   IF DIN=DOUT
     THEN DO; /* DUMB, BUT OK */
       XOUT=XIN;
       YOUT=YIN;
       RETURN(0);
       END;
     ELSE IF DIN>DOUT
       THEN RETURN(3);

   BEGIN; /* BEGIN BLOCK FOR ALLOCATION */
     DCL (A(DIN),D2Y(DIN),H(DIN)) DEC FLOAT(6);
     DCL (M,T1,T2,W,X,XINTVL,XSTOP,XSTRT) DEC FLOAT(6);

     DO I=1 TO DIN-1;
       H(I)=XIN(I+1)-XIN(I);
       IF H(I)<=0
         THEN RETURN(6);
       END;
     DO I=2 TO DIN-1;
       D2Y(I)=(6.0/H(I)**2)*(YIN(I+1)-2.0*YIN(I)+YIN(I-1));
       END;
     A(2)=4.0+K;
     /* REDUCE MATRIX TO UPPER TRIANGULAR FORM */
     DO I=3 TO DIN-2;
       A(I)=4.0-1.0/A(I-1);
       D2Y(I)=D2Y(I)-D2Y(I-1)/A(I-1);
       END;
     A(DIN-1)=4.0+K-1.0/A(DIN-2);
     D2Y(DIN-1)=D2Y(DIN-1)-D2Y(DIN-2)/A(DIN-2);
     D2Y(DIN-1)=D2Y(DIN-1)/A(DIN-1);
     /* SOLVE USING BACK SUBSTITUTION */
     DO I=DIN-2 TO 2 BY -1;
       D2Y(I)=(D2Y(I)-D2Y(I+1))/A(I);
       END;
     /* END CONDITIONS */
     D2Y(DIN)=K*D2Y(DIN-1);
     D2Y(1)=K*D2Y(2);

     /* NOW FILL IN OUTPUT MATRICES */
     XOUT(1)=XIN(1);
     YOUT(1)=YIN(1);
     XSTRT,X=XIN(1);
     XSTOP=XIN(DIN);
     XINTVL=(XSTOP-XSTRT)/DOUT;
     I=1;
     X=XSTRT+XINTVL;
     DO J=2 TO DOUT-1;
       IF X >= XIN(I+1)
         THEN I=I+1;
       XOUT(J)=X;
       T1=(X-XIN(I))/H(I);
       T2=(XIN(I+1)-X)/H(I);
       YOUT(J)=YIN(I)*T2+YIN(I+1)*T1-H(I)**2*(D2Y(I)*(T2-
         T2**3)+D2Y(I+1)*(T1-T1**3))/6.0;
       X=X+XINTVL;
       END;
     XOUT(DOUT)=XIN(DIN);
     YOUT(DOUT)=YIN(DIN);
     END; /* BEGIN */
   RETURN(0);
   END SPLINE;
