 /* GCMD */
         % INCLUDE CPINIT1;
         % @CMP = 'O';
         % INCLUDE CPINIT2;
         DFT RANGE(*) FIXED BIN VALUE(FIXED BIN(31,0));
         @PROC(0,LEVEL(),VTOC(),RLSE,DSIZE,NOLIST,COMPR,SPLIT,PASSWD,
           OUTDA(DASUB#(DSNAME)),STAK,PROMPT,PDS,SEQ,OTHER,ALL,TERCES,
           SECY,MAX,CANDR,QUAL());
         % INCLUDE DSCB1;
         % INCLUDE DSCB4;
         DCL (CURDSN,TSTDSN) CHAR(44) VAR;
         DCL MYQUAL CHAR(44) VAR STATIC INIT('');
         DCL HDPTR PTR;
         DCL 1 EL UNALIGNED BASED(ELPTR),
           2 NXTEL PTR,
           2 ELLEN FIXED BIN(15,0),
           2 ELNAM CHAR(L REFER (ELLEN)) VAR;
         DCL VOLUME CHAR(6) EXT;
         DCL DSIZESB ENTRY(PTR,FIXED BIN(15,0),CHAR(6))
           RETURNS(FIXED BIN(15,0));
         DCL SUFFIX ENTRY(CHAR(*),CHAR(*))
           RETURNS(FIXED BIN(15,0));
         DCL LVL CHAR(44) VAR;
         DCL OUT FILE RECORD OUTPUT
           ENV(VB RECSIZE(256) BLKSIZE(9440));
         DCL SP FIXED BIN(15,0) INIT(78);
         DCL STACK ENTRY;
         DCL 1 STOR78 UNALIGNED BASED(PTR78),
           2 LSDADATA PTR,
           2 LSDRCLEN FIXED BIN(15,0),
           2 LSDTOTLN FIXED BIN(15,0),
           2 LSDANEXT PTR,
           2 LSDRSVRD FIXED BIN(31,0),
           2 STARTLIST FIXED BIN(31,0);
         DCL 1 LISTEL UNALIGNED BASED(LELPTR),
           2 LELLEN FIXED BIN(15,0),
           2 LELCMD CHAR(256) VAR;
         DCL 1 LISTEL2 UNALIGNED BASED(LELPTR),
           2 LELPAD FIXED BIN(15,0),
           2 LELZRO FIXED BIN(15,0);
         DCL PTRWRK PTR,
             PTRADJ FIXED BIN(31,0) DEF PTRWRK;
         DCL PRSTR CHAR(256) VAR;
         IF QUAL^=0
           THEN MYQUAL=SYMC('&QUAL');
         HDPTR=NULL;
         TRKPERCYL=30;
         IOECB=0;
         IF MAX^=0
           THEN SPLIT,SECY=1;
         IF COMPR^=0 × CANDR^=0
           THEN STAK=1;
         IF PROMPT^=0
           THEN DO;
             @WRITE('ENTER COMMAND');
             @READ(PRSTR);
             IF PDS=0 & SEQ=0 & OTHER=0
               THEN ALL=1;
             END;
         IF RLSE^=0 × CANDR^=0
           THEN @SETL(&RELE=' RELEASE');
         TSTDSN=SETDSN@(DASUB);
         IF TSTDSN^=''
           THEN DO;
             @SETDSN(DASUB,CLIST);
             @ALLOC(DA,WORK);
             OPEN FILE(OUT) TITLE(DA08DDN);
             END;
         IF VTOC^=0
           THEN CALL DOVTOC('');
           ELSE DO;
             LVL = SYMC('&LEVEL');
             IF LVL=''
               THEN LVL = SYMC('&SYSPREF');
             LVL=LVL××'.';
             CALL DOCTLG(LVL);
             END;
         IF HDPTR ^= NULL
           THEN DO;
             DSNLEN = 0;
             ELPTR = HDPTR;
             DO CNT=1 REPEAT CNT+1 UNTIL(ELPTR=NULL);
               DSNLEN=DSNLEN+ELLEN;
               ELPTR=NXTEL;
               END;
             TOTLEN=DSNLEN+4*CNT;
             LV=TOTLEN+16;
             CALL SYSGETM('EU',LV,PTR78,SP,GETRET);
             IF GETRET^=0
               THEN SIGNAL ERROR;
             LSDADATA,LSDANEXT,PTRWRK=ADDR(STARTLIST);
             LSDRCLEN=0;
             LSDTOTLN=TOTLEN;
             LSDRSVRD=0;
             DO ELPTR=HDPTR REPEAT NXTEL WHILE(ELPTR^=NULL);
               LELPTR=PTRWRK;
               LELCMD=ELNAM;
               LELLEN=LENGTH(LELCMD)+4;
               LELZRO=0;
               PTRADJ=PTRADJ+LELLEN;
               END;
             CALL STACK(CPPLUPT,CPPLECT,IOECB,RETCODE,'PROCN',PTR78);
             IF RETCODE^=0
               THEN SIGNAL ERROR;
             END;
         RETURN;
 DOVTOC:  PROC(INDX);
         DCL INDX CHAR(44) VAR;
         DCL MYPT PTR;
         DCL (SCANVTC,NEXTDD) ENTRY;
         DCL DDNAME CHAR(8) EXT;
         DCL (NXFIRST,NXLAST) BIT(1) EXT;
         DCL UCBPTR PTR;
         DCL WKAREA CHAR(148) EXT;
         IF SUBSTR(SYMC('&SYSUID'),1,3)^='EUP' & TERCES=0
           THEN SIGNAL ERROR;
         @CMD('ALLOC FI(VTOCDD) NEW TR SP(1) VOL(&VTOC) REUSE');
         NXFIRST='1'B;
         NXLAST='0'B;
         DO UNTIL(VOLUME=SYMC('&VTOC'));
           CALL NEXTDD;
           END;
         NXFIRST='1'B;
         NXLAST='0'B;
         MYPT=ADDR(WKAREA);
         DO WHILE(^NXLAST);
           CALL SCANVTC;
           IF MYPT->DS1FMTID='4'
             THEN TRKPERCYL=MYPT->DS4DEVTC;
             ELSE IF MYPT->DS1FMTID='1'
               THEN IF SUBSTR(MYPT->DS1DSNAM,1,LENGTH(INDX))=INDX
                 THEN CALL DODSCB(WKAREA);
           END;
         END DOVTOC;
 DOCTLG:  PROC(LOCINDX);
         DCL LOCDSN ENTRY;
         DCL LOCPTR PTR,
             LOCRET FIXED BIN(31,0),
             LOCINDX CHAR(44) VAR,
             LOCNAM CHAR(44) VAR,
             LOCTYPE CHAR(1);
         DCL NULL BUILTIN;
         LOCPTR = NULL;
         DO UNTIL(LOCPTR=NULL);
           CALL LOCDSN(LOCPTR,LOCRET,LOCINDX,LOCNAM,LOCTYPE);
           IF LOCTYPE='A'
             THEN CALL DONAME(LOCNAM);
           END;
         RETURN;
         END;
 DONAME:  PROC(NAM);
         DCL NAM CHAR(44) VAR;
         DCL MYPTR PTR,
             MYADJ FIXED BIN(31,0) DEF MYPTR;
         DCL MYAREA CHAR(148) BASED(MYPTR);
         DCL RETB BIT(32);
         DCL CVOL CHAR(6) STATIC INIT('SYSRES');
         DCL AREA CHAR(265);
         DCL WKAREA CHAR(256);
         MYPTR = ADDR(WKAREA);
         MYADJ = MYADJ + 44;
         CTLGPTR=ADDR(AREA);
         % INCLUDE CTLGDEF;
         IF MYQUAL^=''
           THEN IF LENGTH(NAM) >= LENGTH(MYQUAL)
             THEN IF SUBSTR(NAM,LENGTH(NAM)-LENGTH(MYQUAL)+1)^=MYQUAL
               THEN RETURN;
         CALL SYSCTLG('NAME',RETB,NAM,CVOL,AREA);
         IF RETB^='0'B
           THEN RETURN;
         VOLUME=VOLID.VOLSER(1);
         CALL SYSVTOC('SEARCH',RETB,NAM,VOLUME,MYAREA);
         SUBSTR(WKAREA,1,44)=NAM;
         IF RETB^='0'B
           THEN RETURN;
         CALL DODSCB(WKAREA);
         END DONAME;
 DODSCB:  PROC(WKAREA);
         DCL WKAREA CHAR(*);
         DCL (I,TOTRK,TT) FIXED;
         DSCB1PTR=ADDR(WKAREA);
         CURDSN=SUBSTR(DS1DSNAM,1,SUFFIX(DS1DSNAM,' '));
         @SETL(&DSNAME=CURDSN);
         @SETL(&DSN=CURDSN);
         IF DSIZE ^= 0 & RLSE = 0 & CANDR=0 & COMPR=0
           THEN DO;
             CALL EMIT('DSIZE ''&DSNAME''');
             RETURN;
             END;
         IF PASSWD=0
           THEN IF SUBSTR(DS1DSIND,4,1)
             THEN RETURN; /* GET OUT IF PASSWORD PROTECTED */
         IF PROMPT^=0
           THEN DO;
             IF ALL^=0
               THEN CALL EMIT(PRSTR);
               ELSE SELECT;
                 WHEN(SEQ^=0 & SUBSTR(DS1DSORG,2,1)) CALL EMIT(PRSTR);
                 WHEN(PDS^=0 & SUBSTR(DS1DSORG,7,1)) CALL EMIT(PRSTR);
                 OTHERWISE IF OTHER^=0
                   THEN CALL EMIT(PRSTR);
                 END;
             RETURN;
             END;
         /* AT THIS POINT, IT HAS TO BE RLSE, COMPR OR LIST REQUEST */
         IF COMPR=0 & RLSE=0 & CANDR=0
           THEN DO; /* IT IS LIST REQUEST */
             CALL EMIT('&DSNAME');
             RETURN;
             END;
         /* AT THIS POINT, IT HAS TO BE RLSE AND/OR COMPR */
         IF ^(SUBSTR(DS1DSORG,2,1)×SUBSTR(DS1DSORG,7,1))
           THEN RETURN; /* GET OUT IF NOT DSORG=PS OR PO */
         IF COMPR^=0 × CANDR^=0
           THEN IF SUBSTR(DS1DSORG,7,1)
             THEN DO;
               I = DS1NOEPV;
               IF RLSE^=0 × CANDR^=0
                 THEN IF (I<2 & SPLIT=0) × (DS1SCALO='0'B & SECY=0)
                   THEN CALL EMIT('%COMPRESS ''&DSNAME''');
                   ELSE CALL EMIT('%COMPRESS ''&DSNAME'' &RELE');
               IF DSIZE^=0
                 THEN CALL EMIT('DSIZE ''&DSNAME''');
               RETURN;
               END;
         IF RLSE^=0 × CANDR^=0
           THEN DO;
             I = DS1NOEPV;
             IF (I<2 & SPLIT=0) × (DS1SCALO='0'B & SECY=0)
               THEN RETURN; /* GET OUT IF ONLY ONE EXTENT */
                            /* GET OUT IF NO SECONDARY ALLOCATION */
             TOTRK=DSIZESB(DSCB1PTR,TRKPERCYL,VOLUME);
             TT=SUBSTR(DS1LSTAR,1,16);
             IF TT+1>=TOTRK
               THEN RETURN; /* GET OUT IF ALL TRACKS USED */
             CALL EMIT('%RLSE ''&DSNAME'' &DSIZE');
             END;
         END DODSCB;
 EMIT:  PROC(STR);
         DCL STR CHAR(*) VAR;
         DCL BUF CHAR(256) VAR;
         DCL SEQNO PIC'99999999' STATIC INIT(0);
         IF TSTDSN^=''
           THEN DO;
             SEQNO=SEQNO+1;
             @REP(BUF=STR);
             BUF=SEQNO××BUF;
             WRITE FILE(OUT) FROM(BUF);
             RETURN;
             END;
         IF STAK^=0
           THEN DO;
             @REP(BUF=STR);
             L = LENGTH(BUF);
             ALLOC EL;
             NXTEL = HDPTR;
             ELNAM=BUF;
             HDPTR = ELPTR;
             RETURN;
             END;
         IF NOLIST=0
           THEN @WRITE(STR,MF=S);
         IF RLSE^=0 × DSIZE^=0 × COMPR^=0 × PROMPT^=0
           THEN @CMD(STR,MF=S);
         END EMIT;
         END;
