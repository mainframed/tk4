 /* CRTIO */
 /*
0*$.HE GENERALIZED SUBROUTINES - CRTIO
0*$.HE SIMPLIFIED FULL SCREEN SUPPORT
0*$.PL 55
0*$.PN 0
0*$.PA
0*$.SS
0*$.NF
0*$03/10/78
0*$AUTHOR:  T. SMITH
0*$SOURCE MODULE NAME:  CRTIO
0*$DOCUMENTATION ID:  0*$
0*$.FI L
0*$.SP 5
0*$THIS PL/I SUBROUTINE PROVIDES A SIMPLIFIED METHOD OF INTERACTING
0*$WITH A TSO USER USING SOME OF THE FULL-SCREEN DISPLAY CAPABILITIES
0*$OF THE 3270 CRT DISPLAY TERMINAL.  CALL FORMAT IS AS FOLLOWS:
0*$.SP 1
0*$.IN 5
0*$.NF
0*$DCL CRTIO ENTRY RETURNS(CHAR(79) VAR);
0*$DCL DISPLAY(24) CHAR(79);
0*$DCL ANSWER CHAR(79) VAR;
0*$** CODE TO INITIALIZE ARRAY CALLED
0*$   DISPLAY IS INSERTED HERE. **
0*$ANSWER = CRTIO(DISPLAY);
0*$.FI L
0*$.IN 0
0*$.SP 1
0*$IN THE ABOVE EXAMPLE, WHEN CRTIO IS INVOKED, THE ARRAY CALLED
0*$DISPLAY WILL BE DISPLAYED ON LINES 1 THRU 24 OF THE 3270 TERMINAL.
0*$THE CURSOR WILL BE SET TO THE BEGINNING OF THE FIRST LINE ON
0*$THE SCREEN, WHICH IS THE ONLY LINE WHICH MAY BE KEYED ON BY THE
0*$TERMINAL USER.  WHATEVER IS KEYED IN BY THE TERMINAL USER ON
0*$LINE 1 WILL BE ASSIGNED TO THE CHARACTER STRING CALLED ANSWER
0*$WHEN CONTROL IS RETURNED FROM CRTIO.
0*$.SP 1
0*$NOTE THAT WHEN YOU ARE FINISHED INTERACTING WITH THE TERMINAL
0*$IN FULL SCREEN MODE, YOU SHOULD CLEAR THE SCREEN BEFORE
0*$ENDING YOUR PROGRAM.  YOU CAN DO THIS BY CALLING THE CRTZAP
0*$SUBROUTINE (SEE DOCUMENTATION ELSEWHERE).
 */
 CRTIO:  PROC(DISPLAY) RETURNS(CHAR(79) VAR);
         DFT RANGE(*) FIXED BIN VALUE(FIXED BIN(31,0)), RANGE(*) STATIC;
         DCL DISPLAY(24) CHAR(79);
 % INCLUDE @FULLSCR;
 @SCREEN(
 '&(78)X
 #@ #@ #@ #@ #@ #@ #@ #@ #@ #@ #@ #@ #@ #@ #@ #@ #@ #@ #@ #@ #@ #@
 #@
         ');
 @ENDPNL(LAST);
         DCL 1 PANEL UNALIGNED BASED(PNLPTR),
              2 PNLLEN FIXED BIN(15,0),
              2 PNLNAME CHAR(8),
              2 PNLNUM FIXED BIN(15,0),
              2 INCNT FIXED BIN(15,0),
              2 FLDCNT FIXED BIN(15,0),
              2 CURSBA CHAR(2),
              2 CURSBAB FIXED BIN(15,0),
              2 FLDLOC FIXED BIN(15,0);
         DCL 1 FLDDESCR UNALIGNED BASED(SFLDPTR),
              2 FLDLEN FIXED BIN(15,0),
              2 FLDNAME CHAR(8),
              2 FLDNUM FIXED BIN(15,0),
              2 FLDINUM FIXED BIN(15,0),
              2 INLEN FIXED BIN(15,0),
              2 INOFF FIXED BIN(31,0),
              2 OUTOFF FIXED BIN(31,0),
              2 PICOFF FIXED BIN(31,0),
              2 FLAGS BIT(16),
              2 FLDSBA CHAR(2),
              2 FLDSBAB FIXED BIN(15,0),
              2 LITLEN FIXED BIN(15,0),
              2 LITERAL CHAR(L REFER (LITLEN)),
              2 PICLEN FIXED BIN(15,0),
              2 PICTURE CHAR(L REFER (PICLEN));
         DCL 1 PNL_DYNAM UNALIGNED BASED(DYNPTR),
              2 DINOF FIXED BIN(31,0),
              2 DOUTOF FIXED BIN(31,0),
              2 DYNCNT FIXED BIN(15,0),
              2 OUTFLAG(L REFER (DYNCNT)) BIT(1);
         DCL 1 FIELD UNALIGNED BASED(DFLDPTR),
              2 LEN FIXED BIN(15,0),
              2 DATA CHAR(L REFER (LEN)) VARYING;
         DCL WRKPTR PTR,
             WRKADJ FIXED BIN(31,0) DEF WRKPTR;
         DCL SFLDPTR PTR,
             SFLDADJ FIXED BIN(31,0) DEF SFLDPTR;
         DCL DFLDPTR PTR,
             DFLDADJ FIXED BIN(31,0) DEF DFLDPTR;
         DCL FLDOPTR(24) PTR;
         DCL INITSW BIT(1) STATIC INIT('1'B);
         IF INITSW
              THEN DO;
                   INITSW = '0'B;
                   DYNPTR = @PNLDYNPT(1);
                   PNLPTR = @PNLSTAPT(1);
                   SFLDPTR = ADDR(SCREEN1.FIELD1);
                   DO J = 1 TO 24;
                        DFLDPTR = DYNPTR;
                        DFLDADJ = DFLDADJ + DOUTOF + OUTOFF;
                        FLDOPTR(J) = DFLDPTR;
                        SFLDADJ = SFLDADJ + FLDLEN;
                        END;
                  @CURPNL = 0;
                  @NXTPNL = 1;
                  @ARYPTR = ADDR(@ARYCNT);
                  @CHGCURS = -1;
                  @CALLFLGS = '0'B;
                  END;
         @CHGCURS=SCREEN1.FIELD1.@FLDSBAB+1;
         SCREEN1_OUTFLAG(*)='1'B;
         DO I = 1 TO 24;
              DFLDPTR = FLDOPTR(I);
              DATA = DISPLAY(I);
              END;
         CALL SCRWRIT(@PNLCALL);
         SFLDPTR = ADDR(SCREEN1.FIELD1);
         DFLDPTR = DYNPTR;
         DFLDADJ = DFLDADJ + DINOF + INOFF;
         RETURN(DATA);
         END;
