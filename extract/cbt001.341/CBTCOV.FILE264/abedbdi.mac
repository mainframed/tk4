 /* COPYRIGHT 1985 BY THOMAS GLEN SMITH */
 /**********************************************************************
 *                                                                     *
 * ABEDBDI IS CALLED BY ABECIN TO PROCESS A LINE OF DATA ENTERED ON    *
 * THE DISPLAY WHEN RH_DISPLAY_HDR IS NOT NULL.  ST AND EN INDICATE    *
 * THE COLUMNS OF THE CONCEPTUAL DISPLAY LINE FROM WHICH DATA IS TO BE *
 * EXTRACTED ACCORDING TO THE LIST POINTED TO BY RH_DISPLAY_HDR.       *
 * PREC IS THE DATA RECORD INTO WHICH DATA CONVERTED FROM THE DISPLAY  *
 * LINE (INDATA) IS TO BE STORED.                                      *
 *                                                                     *
 **********************************************************************/
   %INCLUDE ABESUB;
 ABESUB(ABEDBDI) PARMS(INDATA,PREC,ST,EN,RHPTR,RHHDRPT) CHECK(YES);
   %INCLUDE ABESUBA;
   %INCLUDE ABEMISS;

 DCL HEX ENTRY(CHAR(*)) RETURNS(CHAR(32767) VAR);
   DCL INDATA CHAR(*) VAR;
   DCL PREC PTR;
   DCL (ST,EN) FIXED BIN(15,0);

   DCL CALCPRT ENTRY(DEC FLOAT(16))
     RETURNS(CHAR(80) VAR);
   DCL PTRIN ENTRY(PTR)
     RETURNS(FIXED BIN(31,0));
   DCL PTROUT ENTRY(FIXED BIN(31,0))
     RETURNS(PTR);
   DCL CONVERT ENTRY(PTR,
     CHAR(*),FIXED BIN(15,0),FIXED BIN(15,0),
     CHAR(*),FIXED BIN(15,0),FIXED BIN(15,0))
     RETURNS(CHAR(256) VAR);
   DCL (ILP,OLP) PTR;
   DCL MYDATA CHAR(256) VAR;

   IF RH_APL^=NULL & RH_DISPLAY_HDR^=NULL & RHUSEHD=NULL
     THEN CALL APL;
     ELSE CALL RQL;

 APL: PROC;
   DCL 1 MYUSE,
   %INCLUDE ABERHN;
   %INCLUDE APLCB;

   DCL IPOS FIXED BIN(15,0) BASED(IPOSPTR);
   DCL OPOS FIXED BIN(15,0) BASED(OPOSPTR);
   DCL ILNG FIXED BIN(15,0) BASED(ILNGPTR);
   DCL OLNG FIXED BIN(15,0) BASED(OLNGPTR);

   ILP=RH_DISPLAY_HDR;
   OLP=ADDR(MYUSE);
   OLP->RHNAMESTR=ILP->RHNAMESTR;
   OLP->RHNAMESTR.RHNTYPE=RH_APL_TYPE;
   OLP->RHNAMESTR.RHNNAME='ELEMENT';
   IPOSPTR=ADDR(ILP->RHNAMESTR.RHNPOS);
   OPOSPTR=ADDR(OLP->RHNAMESTR.RHNPOS);
   ILNGPTR=ADDR(ILP->RHNAMESTR.RHNLNG);
   OLNGPTR=ADDR(OLP->RHNAMESTR.RHNLNG);
   OLNG=RH_APL_ELEN;

   IPOS=FIXED((ST-1)/ILNG)*ILNG+1;
   IF IPOS<ST
     THEN IPOS=IPOS+ILNG;
   ELNO=FIXED((IPOS-1)/ILNG)+1;
   OPOS=(ELNO-1)*OLNG+1;
   DO WHILE(IPOS<=EN & ELNO<=RH_APL_ELCOUNT);
     K=IPOS-ST+1; /* OFFSET WITHIN INDATA */
     L=MIN(ILNG,LENGTH(INDATA)-K+1);
     IF L<=0
       THEN MYDATA='';
       ELSE MYDATA=#CONVERT(SUBSTR(INDATA,K,L),ILP,OLP);
     IF LENGTH(MYDATA)=0
       THEN MYDATA=#GET_MISSING(OLP);
     CALL #ABEINS(MYDATA,PREC,OPOS,OLNG);
     OPOS=OPOS+OLNG;
     IPOS=IPOS+ILNG;
     ELNO=ELNO+1;
     END;
   END APL;

 RQL: PROC;

   DO ILP=RH_DISPLAY_HDR REPEAT ILP->RHNLINK WHILE(ILP^=NULL);
     IF ILP->RHNPOS>=ST & ILP->RHNPOS<=EN
       THEN DO; /* THIS ELEMENT IN RANGE */
         DO OLP=RHUSEHD REPEAT OLP->RHNLINK WHILE(OLP^=NULL)
           UNTIL(ILP->RHNNAME=OLP->RHNNAME);
           END;
         IF OLP^=NULL
           THEN DO; /* HAVE BOTH INPUT AND OUTPUT ELEMENTS */
             K=ILP->RHNPOS-ST+1; /* OFFSET WITHIN INDATA */
             L=MIN(ILP->RHNLNG,LENGTH(INDATA)-K+1);
             IF L<=0
               THEN MYDATA='';
               ELSE MYDATA=#CONVERT(SUBSTR(INDATA,K,L),ILP,OLP);
             IF LENGTH(MYDATA)=0
               THEN MYDATA=#GET_MISSING(OLP);
             CALL #ABEINS(MYDATA,PREC,OLP->RHNPOS,OLP->RHNLNG);
             END;
         END;
     END;
   END RQL;

   END ABEDBDI;
