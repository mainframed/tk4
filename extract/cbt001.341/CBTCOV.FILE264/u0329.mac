$ 329.00
THIS PI COURSE PROVIDES BASIC INFORMATION ON USING TSO.  IT EXPLAINS
THE GENERAL FORMAT USED IN SPECIFYING TSO COMMANDS, DISCUSSES THE
HELP COMMAND, WHICH CAN BE USED TO OBTAIN INFORMATION ON HOW TO USE
THE OTHER TSO COMMANDS, AND FINALLY, DISCUSSES TSO DATA SET NAMING
CONVENTIONS.

PREREQUISITES ARE U0327 AND U0328


***** BRIEF EXPLANATION OF THE GENERAL FACILITIES OF TSO.

TSO - THE TIME SHARING OPTION OF THE OPERATING SYSTEM - IS A
PROGRAMMING SYSTEM THAT PROVIDES ACCESS TO THE SERVICES OF A COMPUTER
FROM MORE THAN ONE TERMINAL AT THE SAME TIME.  TSO PROVIDES A SET
OF COMMANDS AND SUBCOMMANDS (THE TSO COMMAND LANGUAGE) BY WHICH
YOU TELL THE SYSTEM WHAT YOU WANT IT TO DO FOR YOU.

$ SRL

THERE ARE SEVERAL IBM PUBLICATIONS ON TSO THAT YOU WILL FIND USEFUL:

     IBM SYSTEM/360 OPERATING SYSTEM
     TIME SHARING OPTION
     COMMAND LANGUAGE REFERENCE
     ORDER NO. GC28-6732

YOU SHOULD HAVE THIS MANUAL READILY AVAILABLE, ESPECIALLY DURING YOUR
INITIAL SESSIONS WITH TSO.  THIS MANUAL DESCRIBES THE TSO COMMAND
LANGUAGE THAT A TERMINAL USER MAY USE TO REQUEST THE SERVICES OF TSO.

     IBM SYSTEM/360 OPERATING SYSTEM
     TIME SHARING OPTION
     TERMINAL USER'S GUIDE
     ORDER NO. GC28-6763

THE TERMINAL USER'S GUIDE IS MORE TUTORIAL IN NATURE THAN THE COMMAND
LANGUAGE REFERENCE.  YOU MAY FIND THIS MANUAL TO BE GOOD SUPPLEMENTAL
READING FOR THIS PI COURSE.

     OS/MVT AND OS/VS2
     TSO TERMINALS
     ORDER NO. GC28-6762

THIS MANUAL DESCRIBES HOW TO USE THE TERMINALS SUPPORTED BY THE TIME
SHARING OPTION UNDER OS/MVT AND OS/VS2.

$ SYNTAX
******* GENERAL COMMAND SYNTAX

WHEN OPERATING YOUR TERMINAL, YOU CAN TRANSMIT TO THE COMPUTER
COMMANDS AND SUBCOMMANDS.  THESE ARE REQUESTS TO THE SYSTEM FOR WORK.
THERE ARE COMMANDS AND SUBCOMMANDS WHICH ALLOW YOU TO:

* CONTROL YOUR TERMINAL SESSION, FOR INSTANCE TO START AND END IT.

* STORE, MODIFY, AND RETRIEVE DATA, FOR INSTANCE TO CREATE OR AMEND
  A PL/I PROGRAM.

* INVOKE PROGRAMS, FOR INSTANCE TO COMPILE A PL/I PROGRAM WITH THE
  OPTIMIZING COMPILER, AND TO RUN IT.

A COMMAND CONSISTS OF A KEYWORD, OFTEN AN ENGLISH VERB, AND CERTAIN
OPERANDS.  THERE ARE TWO TYPES OF OPERAND:  POSITIONAL OPERANDS AND
KEYWORD OPERANDS.  POSITIONAL OPERANDS CONSIST OF VARIABLE INFORMATION -
FOR INSTANCE, A DATA SET NAME CHOSEN BY THE PROGRAMMER - AND THEY
MUST BE TYPED IN A SPECIFIED ORDER IMMEDIATELY AFTER THE COMMAND
KEYWORD.  KEYWORD OPERANDS ARE STRINGS OF CHARACTERS DEFINED BY THE
SYSTEM, OFTEN ENGLISH WORDS, WHICH AMPLIFY THE INSTRUCTIONS GIVEN
BY THE COMMAND KEYWORD; THEY CAN BE IN ANY ORDER AFTER THE POSITIONAL
OPERANDS.

$ SQ1
IN THE FOLLOWING COMMAND, THERE IS ONE POSITIONAL OPERAND, AND
ONE KEYWORD OPERAND.  WHICH IS WHICH?

     PLI ASTER PRINT(*)

A.  ASTER IS THE KEYWORD OPERAND, AND PRINT(*) IS THE POSITIONAL.
B.  ASTER IS THE POSITIONAL OPERAND, AND PRINT(*) IS THE KEYWORD.
$ANS A SQ1A
$ANS B SQ1B
ENTER "A" OR "B"
$ GOTO SQ1
$ SQ1A
WRONG. TRY READING THE TEXT ABOUT SYNTAX AGAIN.
$GOTO SYNTAX
$ SQ1B
RIGHT.

A COMMAND IS ENTERED, IN OTHER WORDS IS TRANSMITTED TO THE COMPUTER,
BY TYPING IT, THEN PRESSING THE ENTER KEY.

WHEN YOU ENTER A COMMAND, A PROGRAM KNOWN AS A COMMAND PROCESSOR IS
INVOKED TO CARRY OUT THE INSTRUCTIONS.  THERE IS A COMMAND PROCESSOR
FOR EACH COMMAND.  WHEN PROCESSING IS FINISHED, THE SYSTEM DISPLAYS
THE MESSAGE "READY" AND RETURNS CONTROL TO YOUR TERMINAL FOR YOU TO
ENTER ANOTHER COMMAND.  IN ADDITION, CERTAIN COMMAND PROCESSORS RETURN
CONTROL TO THE TERMINAL BEFORE THEY HAVE FINISHED PROCESSING.  THIS
IS TO ALLOW YOU TO ENTER EITHER DATA, OR FURTHER INSTRUCTIONS IN THE
FORM OF SUBCOMMANDS.  THE GENERAL FORM OF A SUBCOMMAND IS USUALLY THE
SAME AS THAT OF A COMMAND:  SUBCOMMAND KEYWORD, POSITIONAL OPERANDS,
KEYWORD OPERANDS.

$ PROMPTS
   ********* PROMPTS AND MESSAGES

IF YOU MAKE A MISTAKE WHEN ENTERING A COMMAND OR SUBCOMMAND, THE
SYSTEM WILL SEND TO YOUR TERMINAL A PROMPTING MESSAGE TELLING YOU
TO CORRECT THE ERROR.  ANY MESSAGE THAT ENDS WITH A HYPHEN (-)
IS A PROMPTING MESSAGE.  YOU HAVE ALREADY SEEN ONE EXAMPLE OF THIS
TYPE OF MESSAGE IN PI COURSE U0328 DEALING WITH THE LOGON COMMAND:

     ENTER USERID -

YOU RECEIVE THE ABOVE PROMPT AFTER YOU HAVE ENTERED THE LOGON COMMAND.

TO KEEP YOU INFORMED OF THE PROGRESS OF ITS OPERATIONS, THE SYSTEM
DISPLAYS INFORMATIONAL MESSAGES WHEN APPROPRIATE.  THESE DO NOT REQUIRE
ANY RESPONSE.  FOR INSTANCE, AFTER ENTERING THE LOGON COMMAND, YOU
WILL BE TOLD THAT IT IS BEING PROCESSED, THUS:

     USERID LOGON IN PROGRESS AT 10:48:47 ON JANUARY 3, 1973

CERTAIN INFORMATIONAL MESSAGES END WITH A PLUS SIGN (+).  THIS
INDICATES THAT FURTHER INFORMATION CAN BE OBTAINED BY ENTERING A
QUESTION MARK (?).  FOR INSTANCE:

     INVALID LINE NUMBER ENCOUNTERED+
     ?  (ENTERED BY USER)
     USE EDIT WITH NONUM OPERAND
     ?  (ENTERED BY USER)
     NO INFORMATION AVAILABLE

NOTE THAT IF YOU ENTER A QUESTION MARK AFTER A MESSAGE WITH NO PLUS
SIGN, THE MESSAGE "NO INFORMATION AVAILABLE" WILL BE PRINTED AT THE
TERMINAL.

AN EXCEPTION TO THE GENERAL RULE IS THE MESSAGE FOLLOWING THE LOGOFF
COMMAND.  IT ENDS WITH A PLUS SIGN, BUT NO QUESTION MARK CAN BE ENTERED

 *********** HELP COMMAND
$ HELP

THE FIRST COMMAND TO BE DISCUSSED IN DETAIL IN THIS PI WILL BE THE
HELP COMMAND.  YOU CAN USE HELP TO OBTAIN INFORMATION ABOUT THE
FUNCTION, SYNTAX, AND OPERANDS OF OTHER TSO COMMANDS AND SUBCOMMANDS.
JUST ENTERING THE HELP COMMAND WITH NO OPERANDS (JUST TYPE THE WORD
HELP AND HIT ENTER) PRODUCES A LIST OF VALID TSO COMMANDS AND THEIR
BASIC FUNCTIONS.  IF YOU NEED DETAILED INFORMATION ABOUT ONE
SPECIFIC COMMAND, ENTER THE HELP COMMAND SPECIFYING THE SELECTED
COMMAND NAME.
$ HELPQ
FOR EXAMPLE, WHICH OF THE FOLLOWING WOULD BE CORRECT TO OBTAIN
INFORMATION ABOUT THE EDIT COMMAND?

A.  HELP EDIT
B.  EDIT HELP
$ANS A HQA
$ANS B HQB
ENTER "A" OR "B"
$GOTO HELPQ
$ HQB
NO, THIS IS INCORRECT.  TRY A REVIEW ON THE CORRECT FORMAT FOR ENTERING
TSO COMMANDS.
$GOTO SYNTAX
$ HQA
RIGHT.
$ HUSER

IT IS IMPORTANT TO NOTE THAT THE LIST OF COMMANDS PRINTED WHEN YOU
ENTER HELP WITH NO OPERANDS IS ONLY A LIST OF THE STANDARD COMMANDS
THAT ARE USUALLY AVAILABLE IN TSO.  IT DOES NOT INCLUDE THOSE COMMANDS
THAT HAVE BEEN ADDED BY THE SYSTEM SUPPORT GROUP.  TO OBTAIN A LIST
OF THESE, ENTER THE COMMAND "HELP USER."

IT IS ALSO IMPORTANT TO NOTE THAT CERTAIN COMMANDS HAVE BEEN REMOVED
BY SYSTEM SUPPORT FROM THE LIST PRODUCED BY ENTERING HELP WITH NO
OPERANDS.  IN THE CASE OF THE ASM, CALC, COBOL, FORT, AND CONVERT
COMMANDS, THEY WERE REMOVED BECAUSE WE DON'T PAY THE NECESSARY FEE
TO IBM TO USE THESE PRODUCTS.  IN THE CASE OF PROTECT, WE DON'T
SUPPORT THIS FEATURE. IN THE CASE OF CANCEL, STATUS, AND SUBMIT, WE
HAVE REPLACED THEM WITH THE USER COMMANDS $ AND BGD.
$ HQ2
NOW FOR A QUESTION TO MAKE SURE YOU UNDERSTAND THE HELP COMMAND.
IF YOU WERE ENTERING THE HELP COMMAND TO OBTAIN DETAILED INFORMATION
ABOUT THE HELP COMMAND ITSELF, WHAT WOULD THE COMMAND LOOK LIKE?

A.  HELP
B.  HELP HELP
C.  HELP COMMAND(HELP)

$ANS A HQ2A
$ANS B HQ2B
$ANS C HQ2A
ENTER "A" "B" OR "C"
$GOTO HQ2
$ HQ2A
NO, THAT IS THE WRONG ANSWER.  YOU NEED A REVIEW.
$GOTO HELP
$ HQ2B
RIGHT.  THIS WOULD PROVIDE YOU WITH A FULL DESCRIPTION OF THE HELP
COMMAND AND HOW TO USE IT.  NOTE THAT IT WILL ALSO TELL YOU HOW TO CUT
DOWN ON THE VOLUME OF HELP DATA THAT IS PRINTED OUT.  THIS CAN BE
VERY USEFUL, BECAUSE HELP CAN BE UNNECESSARILY VERBOSE IF YOU LET IT.

$ TSODSNC
********* TSO DATA SET NAMING CONVENTIONS

MANY OF THE TSO COMMANDS YOU WILL BE USING INVOLVE THE SPECIFICATION OF
DATA SETS.  FOR EXAMPLE, THE TSO COMMAND "COPY" IS USED TO COPY ONE
DATA SET TO ANOTHER.  THE COPY COMMAND REQUIRES TWO POSITIONAL OPERANDS;
THE FIRST BEING THE DATA SET NAME (DSNAME) OF THE DATA SET YOU WANT IT
TO COPY FROM, AND THE SECOND BEING THE DATA SET NAME OF THE DATA SET YOU
WANT IT TO COPY TO.
THE DATA SET NAMING CONVENTIONS FOR TSO SIMPLIFY THE SPECIFYING
OF SUCH DATA SET NAMES.  WHEN A DATA SET NAME CONFORMS TO THE
CONVENTIONS, YOU CAN REFER TO THE DATA SET BY ITS FULLY QUALIFIED
NAME OR BY AN ABBREVIATED VERSION OF THE NAME.
$ HQI
FOR EXAMPLE,
SUPPOSE YOUR USERID IS EUP027, AND YOU HAVE CREATED A DATA SET
CALLED EUP027.MYSORC.PLI, WHICH CONTAINS A PLI SOURCE MODULE.
WHICH OF THE FOLLOWING COMMANDS WILL CAUSE THIS SOURCE MODULE TO BE
COMPILED?  ASSUME PLI IS THE COMMAND KEYWORD FOR COMPILING PLI SOURCE
PROGRAMS.

A.   PLI MYSORC
B.   PLI 'EUP027.MYSORC.PLI'
C.   BOTH OF THE ABOVE
$ANS A HQIA
$ANS B HQIA
$ANS C HQIC
ENTER "A" "B" OR "C"
$GOTO HQI
$ HQIA
YOU ARE PARTLY RIGHT, BUT ACTUALLY, BOTH A AND B WILL WORK, ALTHOUGH
CHOICE A IS SHORTER TO TYPE.  TRY READING THE INTRODUCTION TO TSO
DATA SET NAMING CONVENTIONS AGAIN.
$GOTO TSODSNC
$ HQIC
RIGHT.
OBVIOUSLY, THE FIRST ALTERNATIVE WOULD BE FASTER TO TYPE.
THE FOLLOWING PARAGRAPHS WILL (1) EXPLAIN ABOUT DATA SET NAMES
IN GENERAL; (2) DEFINES THE NAMES THAT CONFORM TO THE NAMING
CONVENTIONS FOR TSO; AND (3) TELL YOU HOW TO ENTER A COMPLETE DATA
SET NAME, AND HOW TO ENTER THE ABBREVIATED VERSION OF A NAME THAT
CONFORMS TO THE TSO DATA SET NAMEING CONVENTIONS.

JUST TO SAVE TIME FOR THOSE OF YOU WHO MAY ALREADY BE FAMILIAR
WITH SOME OF THIS INFORMATION, A SERIES OF QUESTIONS WILL BE ASKED,
AND SOME OF THE MATERIAL MAY BE SKIPPED DEPENDING UPON YOU ANSWER.

$ DSQ1
WHICH OF THE FOLLOWING ARE SYNTACTICALLY CORRECT DATA SET NAMES?

A.  PARTNO.12346
B.  SERIALNUM.A43567
C.  MYDATA.CNTL
D.  ALL OF THE ABOVE.
$ANS A DSWRONG
$ANS B DSWRONG
$ANS C PDSNAM
$ANS D DSWRONG
ENTER "A" "B" "C" OR "D"
$GOTO DSQ1
$ DSWRONG
NO, THAT IS A WRONG ANSWER.  HERE ARE THE SYNTAX RULES FOR DATA
SET NAMES.  A DATA SET NAME CONSISTS OF ONE OR MORE FIELDS.  EACH
FIELD CONSISTS OF ONE THROUGH EIGHT ALPHAMERIC CHARACTERS AND
MUST BEGIN WITH AN ALPHABETIC OR NATIONAL CHARACTER.

A SIMPLE DATA SET NAME WITH ONLY ONE FIELD MAY BE:

     PARTS

A DATA SET NAME THAT CONSISTS OF MORE THAN ONE FIELD IS A "QUALIFIED"
DATA SET NAME.  THE FIELDS IN A QUALIFIED DATA SET NAME ARE
SEPARATED BY PERIODS.  A QUALIFIED DATA SET NAME MAY BE:

     PARTS.OBJ
      OR
     PARTS.DATA

NOW GO TRY THE LAST QUESTION AGAIN.
$GOTO DSQ1
$ PDSNAM
IF YOU WANT TO REFER TO THE MEMBER NAMED PART14 IN PARTITIONED
DATA SET EUP027.PARTS.DATA, ASSUMING THAT YOUR USERID WERE
EUP027, WHAT WOULD IT LOOK LIKE?
$ANS PARTS.DATA(PART14) TSODSN
$ANS PARTS(PART14) TSODSN
NO, THAT IS A WRONG ANSWER.  A PARTITIONED DATA SET IS A DATA SET
WITH THE DATA DIVIDED INTO ONE OR MORE INDEPENDENT GROUPS CALLED
MEMBERS.  EACH MEMBER IS IDENTIFIED BY A MEMBER NAME AND CAN BE
REFERRED TO SEPARATELY.  THE MEMBER NAME IS ENCLOSED WITHIN
PARENTHESES AND APPENDED TO THE END OF THE DATA SET NAME.
THE CORRECT ANSWER TO THE LAST QUESTION WOULD HAVE BEEN
PARTS.DATA(PART14) OR PARTS(PART14).
$ TSODSN
GIVEN THE DSNAME EUP027.JCL.CNTL, WHICH QUALIFIER IS KNOWN AS THE
DESCRIPTIVE QUALIFIER:

A.  EUP027
B.  JCL
C.  CNTL
$ANS A TSWRNG
$ANS B TSWRNG
$ANS C DSQ3
ENTER "A" "B" OR "C"
$GOTO TSODSN
$ TSWRNG
WRONG.
IN ORDER TO CONFORM TO TSO DATA SET NAMING CONVENTIONS, THE
NAME MUST CONSIST OF THREE QUALIFIERS.  THE FIRST, OR HIGHEST
LEVEL QUALIFIER, IS THE IDENTIFICATION QUALIFIER.  THIS IS ALWAYS
THE LEFTMOST QUALIFIER OF THE FULL DATA SET NAME.  THIS IS THE
USER IDENTIFICATION ASSIGNED TO YOU.

THE SECOND QUALIFIER IN A STANDARD TSO DSNAME IS THE USER-SUPPLIED
NAME.  THIS NAME IS CHOSEN BY YOU TO MAKE THE CONTENTS OF THE DATA
SET EASILY IDENTIFIABLE.

THE THIRD AND FINAL QUALIFIER IS CALLED THE DESCRIPTIVE QUALIFIER.
THIS IS ALWAYS THE RIGHTMOST QUALIFIER OF THE FULL DATA SET NAME.
TO CONFORM TO THE TSO DATA SET NAMING CONVENTIONS, THIS QUALIFIER
MUST BE ONE OF THE FOLLOWING QUALIFIERS, EACH OF WHICH IS USED TO
DESCRIBE THE KIND OF DATA IN THE DATA SET:
     ASM     ASSEMBLER (F) INPUT
     BASIC   ITF: BASIC STATEMENTS
     CLIST   TSO COMMANDS
     CNTL    JCL AND SYSIN FOR BGD COMMAND
     COBOL   AMERICAN NATIONAL STANDARD COBOL STATEMENTS
     DATA    UPPERCASE TEXT
     FORT    FORTRAN STATEMENTS
     IPLI    ITF:PL/I STATEMENTS
     LINKLIST OUTPUT LISTING FROM LINKAGE EDITOR
     LIST    LISTINGS
     LOAD    LOAD MODULE
     LOADLIST OUTPUT LISTING FROM LOADER
     OBJ     OBJECT MODULE
     OUTLIST OUTPUT LISTING FROM OUTPUT COMMAND
     PLI     PLI STATEMENTS
     TEXT    UPPER AND LOWER CASE TEXT

$ DSQ3
IF YOU WANTED TO LIST DATA SET EUP027.U0328.DATA AT YOUR TERMINAL,
AND YOUR USERID WAS EUP027, WHAT COMMAND WOULD YOU ENTER?

A.  LIST EUP027.U0328.DATA
B.  LIST U0328
C.  LIST U0328.DATA
D.  LIST 'EUP027.U0328.DATA'
E.  B, C, AND D ABOVE.
$ANS A DSQ3A
$ANS B DSQ3B
$ANS C DSQ3C
$ANS D DSQ3D
$ANS E DSQ3E
ENTER "A" "B" "C" "D" OR "E"
$GOTO DSQ3
$ DSQ3A
WRONG.  BECAUSE YOU DIDN'T SURROUND THE DSNAME IN QUOTES, THE
SYSTEM WILL AUTOMATICALLY APPEND YOUR USERID AS THE LEFTMOST QUALIFIER.
THEREFORE THE LIST COMMAND WOULD TRY TO LIST DATA SET
EUP027.EUP027.U0328.DATA.
$GOTO DSNEXP
$ DSQ3B
YOU ARE PARTLY RIGHT.  THIS WOULD LIST THE DATA SET, BUT SO WOULD
CHOICES C AND D.
$GOTO DSNEXP
$ DSQ3C
YOU ARE PARTLY RIGHT.  THIS COMMAND WOULD LIST THE DATA SET, BUT SO
WOULD CHOICES B AND D.
$GOTO DSNEXP
$ DSQ3D
YOU ARE PARTLY RIGHT.  THIS COMMAND WOULD LIST THE DATA SET, BUT SO
WOULD CHOICES B AND C.
$ DSNEXP
THE DATA SET NAMING CONVENTIONS SIMPLIFY THE USE OF DATA SET NAMES.
IF THE DATA SET NAME CONFORMS TO THE CONVENTIONS, YOU NEED SPECIFY
ONLY THE USER-SUPPLIED NAME FIELD (IN MOST CASES) WHEN YOU REFER TO
THE DATA SET.  THE SYSTEM WILL ADD THE NECESSARY QUALIFIERS TO THE
BEGINNING AND TO THE END OF THE NAME THAT YOU SPECIFY.  IN SOME CASES,
HOWEVER, THE SYSTEM WILL PROMPT YOU FOR A DESCRIPTIVE QUALIFIER.
FOR EXAMPLE, YOU MAY REFER TO THE DATA SET NAMED USERID.PARTS.ASM
IN THE LIST COMMAND BY SPECIFYING ONLY PARTS OR BY SPECIFYING
PARTS.ASM.  BUT IF THERE ALSO EXISTS A DATA SET CALLED
USERID.PARTS.OBJ, AND YOU SPECIFY ONLY PARTS TO THE LIST COMMAND,
IT DOESN'T KNOW WHICH DATA SET TO LIST, AND IT WILL PROMPT
YOU FOR THE PROPER DESCRIPTIVE QUALIFIER.

WHEN YOU SPECIFY AN ENTIRE FULLY QUALIFIED DATA SET NAME, AS YOU MUST
DO IF THE NAME DOES NOT CONFORM TO THE TSO DATA SET NAMING CONVENTIONS,
YOU MUST ENCLOSE THE ENTIRE NAME WITHIN APOSTROPHES; AS FOLLOWS:

 'JOED58.PROG.LIST'  (WHERE JOED58 IS NOT YOUR USERID)
     OR
 'JOED58.PROG.FIRST' (WHERE FIRST IS NOT A VALID DESCRIPTIVE QUALIFIER)

THE SYSTEM WILL NOT APPEND QUALIFIERS TO ANY NAME ENCLOSED IN
APOSTROPHES.
NOW GO BACK AND TRY THE LAST QUESTION AGAIN.
$GOTO DSQ3
$ DSQ3E

RIGHT.
WHEN YOU SPECIFY ONLY THE USER-SUPPLIED NAME, THE SYSTEM ADDS
YOUR USER IDENTIFICATION AND, WHENEVER POSSIBLE, A DESCRIPTIVE
QUALIFIER.
$ DESQUAL
IN MANY CASES, IT IS OPTIONAL TO SPECIFY A DESCRIPTIVE QUALIFIER.
FOR EXAMPLE, IN A PREVIOUS EXAMPLE, IT WAS INDICATED THAT THE
COMMANDS "PLI PARTS" AND "PLI PARTS.PLI" BOTH REFER TO THE SAME
DATA SET.  HOWEVER, SOME COMMANDS REQUIRE THAT YOU NOT SPECIFY
A DESCRIPTIVE QUALIFIER.  FOR EXAMPLE, THE TSO FORMAT COMMAND ALWAYS
ADDS THE DESCRIPTIVE QUALIFIER "TEXT", UNLESS OF COURSE, YOU ENCLOSE
THE ENTIRE DSNAME IN APOSTROPHES.  CONSEQUENTLY, THE COMMANDS
"FORMAT MEMO" AND "FORMAT MEMO.TEXT" DO NOT REFER TO THE SAME
DATA SET.  THE FIRST REFERS TO A DATA SET NAMED EUP027.MEMO.TEXT,
AND THE SECOND TO EUP027.MEMO.TEXT.TEXT.  THE QUESTION THEN
ARISES, HOW DO YOU KNOW WHEN TO SPECIFY A DESCRIPTIVE QUALIFIER
AND WHEN NOT TO?  THIS IS A LITTLE TRICKY TO ANSWER.
THE FOLLOWING PARAGRAPHS WILL GIVE YOU A BETTER PICTURE, BUT
AS A GENERAL RULE, ALWAYS LEAVE OFF THE DESCRIPTIVE
QUALIFIER IF NOT NEEDED.
$ LQ
ACCORDING TO THE ABOVE RULE, WHICH OF THE FOLLOWING COMMANDS
WOULD BE PREFERABLE?

A.  LINK MYPROG
B.  LINK MYPROG.OBJ
$ANS A LQA
$ANS B LQB
ENTER "A" OR "B"
$GOTO LQ
$ LQB
ALTHOUGH THIS COMMAND WOULD WORK AS WELL AS THE OTHER CHOICE,
I DON'T RECOMMEND IT.  REREAD THE TEXT ON DESCRIPTIVE QUALIFIERS.
$GOTO DESQUAL
$ LQA
RIGHT.
$ DESCRADD
AS YOU HAVE SEEN, COMMANDS SUCH AS THE PLI COMMAND WILL ACCEPT THE
DATA SET NAME EITHER IN THE FORM "NAME.PLI", OR JUST "NAME".  IN THE
CASE OF THE PLI COMMAND, THE LOGIC FOR DETERMINING WHETHER A
DESCRIPTIVE QUALIFIER SHOULD BE ADDED IS THUS:

     1.  IF THE NAME IS IN APOSTOPHES, NO DESCRIPTIVE QUALIFIER IS
         ADDED.
     2.  IF THE RIGHT-MOST QUALIFIER IN THE SPECIFIED NAME IS PLI,
         THE NO DESCRIPTIVE QUALIFIER IS ADDED.

$ ADDQU
BASED ON THIS LOGIC, IF YOU WANTED TO COMPILE THE PL/I SOURCE PROGRAM
CONTAINED IN DATA SET EUP027.MYSORC.DATA, ASSUMING YOUR USERID WERE
EUP027, WHICH OF THE FOLLOWING COMMANDS WOULD WORK?

A.  PLI MYSORC
B.  PLI MYSORC.DATA
C.  PLI 'EUP027.MYSORC.DATA'
$ANS A ADDA
$ANS B ADDB
$ANS C ADDC
ENTER "A" "B" OR "C"
$GOTO ADDQU
$ ADDA
NO, THIS COMMAND REFERS TO DATA SET EUP027.MYSORC.PLI.  REREAD THE
PREVIOUS BLOCK OF TEXT AGAIN.
$GOTO DESCRADD
$ ADDB
NO, THIS COMMAND WOULD REFER TO DATA SET EUP027.MYSORC.DATA.PLI.
REREAD THE PREVIOUS BLOCK OF TEXT AGAIN.
$GOTO DESCRADD
$ ADDC
RIGHT.  SINCE THE DESCRIPTIVE QUALIFIER "DATA" IS INVALID FOR THE
PLI COMMAND, THE ENTIRE DATA SET NAME MUST BE ENTERED IN APOSTROPHES.

THE FOLLOWING TABLE WILL SHOW YOU WHICH COMMANDS WILL ADD
A DESCRIPTIVE QUALIFIER, AND WHICH COMMANDS WON'T.  IN THE CASE OF
THOSE COMMANDS THAT DO EXPECT A SPECIFIC DESCRIPTIVE QUALIFIER,
IT IS GIVEN IN THE TABLE.

                 DESCRIPTIVE QUALIFIER
     COMMAND     EXPECTED, IF ANY.
     _______     _________________
     ALLOCATE
     CALL        LOAD
     DELETE
     EDIT        (SEE NOTE 1 BELOW)
     EXEC        CLIST
     FORMAT      TEXT (SEE NOTE 5 BELOW)
     FREE
     LINK        OBJ & LOAD (SEE NOTE 2 BELOW)
     LIST
     LISTDS
     LOADGO      OBJ & LOAD (SEE NOTE 2 BELOW)
     PLI         PLI
     RUN         (SEE NOTE 3 BELOW)
     RENAME
     TEST        (SEE NOTE 4 BELOW)

NOTE 1:  EDIT IS SLIGHTLY DIFFERENT THAN THE OTHER COMMANDS.  THE
         NEXT PI COURSE IN THIS SERIES (U0330) COVERS EDIT VERY
         THOROUGHLY.  SUFFICE IT TO SAY THAT EDIT WILL PROMPT YOU
         FOR THE CORRECT DESCRIPTIVE QUALIFIER.
NOTE 2:  LINK AND LOADGO HAVE TWO DIFFERENT TYPES OF DATA SET
         SPECIFICATIONS.  ENTER HELP FOR THESE TWO COMMANDS, AND
         THE CHOICE WILL BE OBVIOUS.
NOTE 3:  RUN IS ALSO SLIGHT DIFFERENT FROM THE USUAL TSO COMMAND.
         SUFFICE IT TO SAY THAT IT WILL PROMPT YOU FOR THE CORRECT
         DESCRIPTIVE QUALIFIER.
NOTE 4:  TEST HAS A KEYWORD OPERAND THAT WILL INDICATE THE APPROPRIATE
         DESCRIPTIVE QUALIFIER.
NOTE 5:  THIS IS ONE COMMAND WHERE YOU MUST NOT SPECIFY THE DESCRIPTIVE
         QUALIFIER, EVEN IF IT IS TEXT.  FOR EXAMPLE, SPECIFYING
         MEMO.TEXT WOULD REFERENCE MEMO.TEXT.TEXT.

THIS CONCLUDES THIS PI COURSE.  BY NOW, YOU SHOULD HAVE ACQUIRED
ENOUGH OF THE BASICS OF TSO TO BEGIN TO USE IT EFFECTIVELY.
THE NEXT COURSE IN THIS SERIES IS U0330.  IT WILL SHOW YOU HOW TO
CREATE AND MAINTAIN DATA SETS CONTAINING SOURCE PROGRAMS AND JCL,
AND HOW TO SUBMIT JCL FOR BACKGROUND EXECUTION.
