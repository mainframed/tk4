LMINIT   CSECT                                                      TGS
********************************************************************TGS
*                  UPON ENTRY, THIS RTNE EXPECTS R1 TO CONTAIN THE *TGS
*              ADDRESS OF OF AREA, THE FORMAT OF WHICH IS DEFINED  *TGS
*              BY MACRO NAMTAB.  THIS RTNE WILL SCAN THE TIOT      *TGS
*              AND PERFORM THE FOLLOWING PROCESSING FOR EACH ENTRY.*TGS
*              IF THE DDNAME IN THE TIOT ENTRY HAS AN ENTRY IN     *TGS
*              NAMTAB, BIT 0 OF THAT FLAGS BYTE IS TURNED ON.  IF  *TGS
*              THE DDNAME DOES NOT APPEAR IN NAMTAB, A COPY OF     *TGS
*              LOAD MODULE PDSLODBK IS LOADED AND INITIALIZED BY   *TGS
*              MOVING THE DDNAME INTO THE FIRST 8 BYTES OF THE     *TGS
*              MODULE.  THE ADDR OF THE LOADED COPY OF MODULE      *TGS
*              PDSLODBK IS PLACED IN A PDS DDNAME TABLE POINTED TO *TGS
*              BY WORD TABADDR IN NAMTAB.  IF IT HAS NOT ALREADY   *TGS
*              DONE SO THE MODULE ALSO LOADS A COPY OF THE PDS     *TGS
*              WRITE RTNE AND STORES ITS ADDR AT SYMBOL PDSRTNE    *TGS
*              IN NAMTAB.                                          *TGS
********************************************************************TGS
         SAVES RETCTL                                               TGS
         TGSREQU                                                    TGS
         LR    RB,R1                                                TGS
         USING NAMTAB,RB                                            TGS
         SR    R7,R7                                                TGS
         LA    R8,CNTRTNE                                           TGS
         BAL   R9,TIOTPROC                                          TGS
         LTR   R7,R7                   ARE ANY PDS'S TO BE BUILT    TGS
         BC    8,RETCTL                BR IF NOT                    TGS
         LA    R0,2(R7)                ADD 1 FOR DUM + 1 TO ROUND   TGS
         SRL   R0,1                    ROUND TO DOUBLEWORD          TGS
         SLL   R0,3                    MULT BY 4                    TGS
         ST    R0,TABLEN                                            TGS
         GETMAIN R,LV=(0)                                           TGS
         ST    R1,TABADDR                                           TGS
         LR    R7,R1                   R7 = DDNAME TABLE ADDR       TGS
         LA    R8,TABSET                                            TGS
         BAL   R9,TIOTPROC                                          TGS
         MVC   0(4,R7),=4X'FF'         SET END OF TABLE             TGS
         LOAD  EP=LODPDS                                            TGS
         ST    R0,PDSRTNE                                           TGS
         B     RETCTL                                               TGS
TIOTPROC EQU   *                                                    TGS
         L     R1,16                   R1 = CVT ADDR                TGS
         L     R1,0(R1)                R1 = IEATCBP ADDR            TGS
         L     R1,0(R1)                R1 = MY TCB ADDR             TGS
         L     R1,12(R1)               R1 = MY TIOT ADDR            TGS
         LA    R2,24                   R2 = INITIAL OFFSET          TGS
TIOTLOOP EQU   *                                                    TGS
         LA    R1,0(R1,R2)             R1 = ADDR NEXT DD ENTRY      TGS
         IC    R2,0(R1)                R2 = LENGTH THIS DD ENTRY    TGS
         LTR   R2,R2                   IS IT END TIOT               TGS
         BCR   8,R9                    BR IF YES                    TGS
         LA    R3,NAMTABL                                           TGS
NAMLOOP  EQU   *                                                    TGS
         CLI   0(R3),X'FF'             IS IT END OF TABLE           TGS
         BCR   8,R8                    BR IF YES                    TGS
         CLC   1(8,R3),4(R1)           IS TIOT MATCH FOR NAMTAB     TGS
         BC    7,NOMATCH               BR IF NOT                    TGS
         OI    0(R3),X'80'                                          TGS
         B     TIOTLOOP                                             TGS
NOMATCH  EQU   *                                                    TGS
         LA    R3,9(R3)                BUMP NAMTAB INDEX            TGS
         B     NAMLOOP                                              TGS
CNTRTNE  EQU   *                                                    TGS
         LA    R7,1(R7)                                             TGS
         B     TIOTLOOP                                             TGS
TABSET   EQU   *                                                    TGS
         LR    R6,R1                   SAVE TIOT ENTRY ADDR         TGS
         LOAD  EP=PDSLODBK             LOAD PDS DATA BLOCK          TGS
         ST    R0,0(R7)                ST BLK ADDR IN TAB           TGS
         NI    0(R7),X'00'                                          TGS
         LA    R7,4(R7)                BUMP TABLE INDEX             TGS
         LR    R5,R0                   MAKE DATA BLOCK ADDRESSIBLE  TGS
         LR    R1,R6                   RESTORE TIOT ENTRY ADDR      TGS
         MVC   0(8,R5),4(R1)           MOVE DDNAME TO DATA BLOCK    TGS
         B     TIOTLOOP                                             TGS
         LTORG                                                      TGS
NAMTAB   DSECT                                                      TGS
         NAMTAB                                                     TGS
         END
