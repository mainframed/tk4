         /* PLOT */
         % INCLUDE CPINIT1;
         % @CMP = 'O';
         % INCLUDE CPINIT2;
         DCL PLIXOPT CHAR(15) VAR INIT('ISA(100K)') STATIC EXT;
         DCL PLOTA ENTRY;
         DCL HARDSW BIT(1);
         DCL TRET FIXED BIN(31,0);
         DCL SCREENLEN FIXED BIN(15,0);
         DCL LINESIZE FIXED BIN(15,0);
         CALL TERMCTL('GTSIZE',TRET,SCREENLEN,LINESIZE);
         IF SCREENLEN = 0
              THEN HARDSW = '1'B;
              ELSE HARDSW = '0'B;
         DCL (TSTDSN,TMPSTR) CHAR(44) VAR;
         DCL MYDDN CHAR(8);
         DCL DATE BUILTIN;
         DCL INREC CHAR(181);
         DCL PLOTFI FILE RECORD INPUT;
         DCL PLOTDA FILE RECORD KEYED OUTPUT SEQUENTIAL
           ENV(F RECSIZE(181) REGIONAL(1));
 @PROC(0,DATASET(NAME#(DSNAME)),FILE(),HISTORY,MON(),YY(),LIST,CURRENT,
   TRK(1#(NUMERIC)));
         IF LIST ^= 0
              THEN DO;
                   @CMD('LISTDS ''U.SD.U000.PLOT.DATA'' M');
                   RETURN;
                   END;
         TSTDSN = SETDSN@(NAME);
         IF TSTDSN = ''
              THEN IF CURRENT ^= 0
                   THEN TSTDSN = 'U.SD.U000.PERF.DATA';
         IF TSTDSN ^= ''
              THEN DO;
                   MYDDN = 'PLOTFI';
                   @SETL(&TSTDSN = TSTDSN);
                   I = EXIST(TSTDSN);
                   IF I = 2
                        THEN DO;
         @CMD('ALLOC FI(PLOTFI) DA(''&TSTDSN'') NEW REUSE TR SP(&TRK)');
                             END;
                        ELSE DO;
         @CMD('ALLOC FI(PLOTFI) DA(''&TSTDSN'') SHR REUSE');
                             END;
                   IF I > 0
                        THEN DO;
                             OPEN FILE(PLOTDA) TITLE(MYDDN);
                             CLOSE FILE(PLOTDA);
                             END;
                   END;
              ELSE IF FILE ^= 0
                   THEN MYDDN = SYMC('&FILE');
                   ELSE DO;
                        MYDDN = 'PLOTFI';
                        @CMD('FREE FI(PLOTFI)');
                        IF HISTORY ^= 0
                             THEN TSTDSN = 'U.SD.U000.PLOTHST.DATA';
                             ELSE DO;
                                  IF SYMC('&MON') = ''
                                       THEN DO;
                                            @WRITE('ENTER MONTH -');
                                            @READ(TMPSTR);
                                            @SETL(&MON = TMPSTR);
                                            END;
                                  IF SYMC('&YY') = ''
                                       THEN DO;
                                            @SETL(&YY=SUBSTR(DATE,1,2));
                                            END;
                                  TSTDSN = 'U.SD.U000.PLOT.DATA'××
                                    '('××SYMC('&MON')××SYMC('&YY')××')';
                                  END;
                        @SETL(&MYDSN = TSTDSN);
                        @CMD('ALLOC FI(PLOTFI) DA(''&MYDSN'') SHR');
                        IF HISTORY = 0
                             THEN DO;
                                  ON ERROR GO TO BADIN;
                                  READ FILE(PLOTFI) INTO(INREC);
                                  CLOSE FILE(PLOTFI);
                                  ON ERROR SYSTEM;
                                  END;
                        END;
         CALL PLOTA(MYDDN,DOCMD,DOPRM,HARDSW);
         @SETL(&DDN = MYDDN);
         @CMD('FREE FI(&DDN)');
         RETURN;
 BADIN:
         @WRITE('DATA FOR &MON &YY, NOT FOUND');
         RETURN;
 DOCMD:  PROC(CMD,HELP);
         DCL HELP CHAR(4) VAR;
         DCL CMD CHAR(120) VAR;
         @SETL(&CMD=CMD);
         IF HELP = 'HELP'
              THEN DO;
                   @CMD('&CMD',,,HELP);
                   END;
              ELSE DO;
                   @CMD('&CMD');
                   END;
         END DOCMD;
 DOPRM:  PROC(PRMPT,INP);
         DCL PRMPT CHAR(80) VAR;
         DCL INP CHAR(120) VAR;
         @SETL(&PRMPT = PRMPT);
         @WRITE('&PRMPT');
         @READ(INP);
         END DOPRM;
 EXIST:  PROC(DSN) RETURNS(FIXED BIN(15,0));
 /* RETURNS 0 IF DATA SET EXISTS AND IS USEABLE.
            1 IF DATA SET EXISTS BUT MUST BE INITIALIZED.
            2 IF DATA SET DOES NOT EXIST. */
         % INCLUDE CTLGDEF;
         % INCLUDE DSCB1;
         DCL WRKPTR PTR,
             WRKADJ FIXED BIN(31,0) DEF WRKPTR;
         DCL WKAREA CHAR(148);
         WRKPTR = ADDR(WKAREA);
         WRKADJ = WRKADJ - 44;
         DSCB1PTR = WRKPTR;
         DCL RETCODE FIXED BIN(31,0),
             RET BIT(32) DEF RETCODE,
             RETC CHAR(4) DEF RETCODE;
         DCL 1 ABND STATIC,
              2 DUM BIN FLOAT(53),
              2 MAREA CHAR(265);
         CTLGPTR = ADDR(MAREA);
         DCL MYVOL CHAR(6);
         DCL DSN CHAR(44) VAR;
         DCL (SYSCTLG,SYSVTOC) ENTRY;
         CALL SYSCTLG('NAME',RET,DSN,'SYSRES',MAREA);
         IF RETCODE ^= 0
              THEN RETURN(2); /* DATASET DOESN'T EXIST */
         MYVOL = VLSTBLK.VOLID.VOLSER(1);
         CALL SYSVTOC('SEARCH',RET,DSN,MYVOL,WKAREA);
         IF RETCODE ^= 0
              THEN RETURN(2); /* DATASET DOESN'T EXIST */
         IF DS1LSTAR = '0'B
              THEN RETURN(1);
              ELSE RETURN(0);
         END EXIST;
         END;
