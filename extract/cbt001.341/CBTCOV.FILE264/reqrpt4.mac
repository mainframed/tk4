 /* REQRPT4     UPDATED JULY 1978 BY RICK BABLER
    THIS PROGRAM WILL GENERATE THE NECESSARY JCL TO BACKUP TO TAPE
    EACH DISK VOLUME RECORDED IN THE DISK SPACE MANAGEMENT (REQSPACE)
    DATA BASE.  ONE JOB (JOB NAME AU1096?? - WHERE ?? IS AN INCREMENTAL
    NUMBER) WILL BE GENERATED FOR EACH DISK VOLUME TO BACKED UP.
    THE PROGRAM EXPECTS THE PARM FIELD ON THE EXECUTE CARD TO
    CONTAIN ONE OF THE WORDS DAILY, SWKLY, WEEKLY, MNTHLY, QTRLY, OR
    YEARLY TO INDICATE WHAT LEVEL OF BACKUP IS DESIRED.
    IF ONE OF THESE WORDS IS NOT IN THE PARM FIELD, THE PROGRAM WILL
    SET THE RETURN CODE TO 16 AND END;

    FOR A GIVEN LEVEL OF BACKUP, THE PROGRAM WILL CHECK TO SEE
    IF THERE IS A LONGER FREQUENCY BACKUP WITH A NON-ZERO RETENTION
    NUMBER, AND WITH A BACKUP DATE FIELD OF ZERO.
    IF THIS IS THE CASE, THEN A JOB WILL BE SCHEDULED TO
    DO THE BACKUP AT THE LONGEST FREQUENCY LEVEL NOT CURRENTLY
    CONTAINING A BACKUP, RATHER THAN THE SPECIFIED CYCLE.

    FOR A GIVEN LEVEL OF BACKUP, THE PROGRAM WILL CHECK TO SEE IF
    A LONGER FREQUENCY BACKUP HAS BEEN MADE ON THE SAME DATE.
    IF SO, THE SHORTER FREQUENCY BACKUP WILL NOT BE MADE.

    IF SBWKDAY (SIMULTANEOUS BACKUP, WEEKLY AND DAILY) IS SPECIFY
    FOR THE VOLUME ON THE NEWVOL COMMAND, A JOB WILL BE ENTERED TO
    EXECUTE PROCEDURE AU109601 WHICH WILL PERFORM A BACKUP OF THE
    PACK TO TWO TAPES, ONE FOR WEEKLY FREQUENCY AND ONE FOR DAILY
    FREQUENCY, AT THE SAME TIME.

    IF NO BACKUP ARE CURRENTLY REQUIRED AT THE SPECIFIED
    FREQUENCY, AND NO BACKUP JOBS ARE GENERATED, A RETURN CODE
    OF 4 WILL BE SET.
 */
 REQRPT4:  PROC(PARM) OPTIONS(MAIN);
         DFT RANGE(*) FIXED BIN VALUE(FIXED BIN(15,0));
         DCL DATE BUILTIN;
         DCL BCODE FIXED BIN(15,0) STATIC INIT(4);
         DCL DATEIN CHAR(6);
         DCL GREGDTE CHAR(6);
         DCL JULIAN FIXED DEC(5,0);
         DATEIN = DATE;
         GREGDTE = SUBSTR(DATEIN,3,4) ×× SUBSTR(DATEIN,1,2);
         CALL GREGJUL(GREGDTE,JULIAN);
         DCL PARM CHAR(100) VARYING;
         DCL PLIRETC BUILTIN;
         DCL WORDTAB(6) CHAR(8) VARYING STATIC INIT(
              'DAILY',
              'SWKLY',
              'WEEKLY',
              'MNTHLY',
              'QTRLY',
              'YEARLY');
         DO BINDX = 1 TO 6 WHILE(PARM ^= WORDTAB(BINDX));
              END;
         IF BINDX > 6
              THEN DO;
                   CALL PLIRETC(16);
                   RETURN;
                   END;
         DCL LOG2 BUILTIN;
         DCL 1 JOBCARD STATIC,
              2 PAD1 CHAR(8) INIT('//AU1096'),
              2 NXT PIC'99' INIT(1),
              2 PAD2 CHAR(70) INIT(
            ' JOB (10-339-0109-ISD-A1,010),PRODUCTION,CLASS=C,PRTY=9');
         DCL REC CHAR(80);
         % INCLUDE TGSVOL;
         % INCLUDE TGSBDAM;
         % INCLUDE TGSQCR;
         DCL BDAM PTR;
         VOLRPTR,QC = ADDR(BDAMREC);
         DCL UNITA(0:3) CHAR(6) VARYING STATIC INIT(
           '3350',
           '3330-1',
           '3330',
           '2314');
         OPEN FILE(BDAMFLE) INPUT DIRECT KEYED;
         BDAMKEYA = 1;
         READ FILE(BDAMFLE) INTO(BDAMREC) KEY(BDAMKEY);
         BDAMKEYA = DAFSTVL;
         DO WHILE(BDAMKEYA ^= 0);
              READ FILE(BDAMFLE) INTO(BDAMREC) KEY(BDAMKEY);
              IF VBACKUP(BINDX) ^= 0 THEN DO;
                IF BINDX <= 6 & BINDX >= 4
                    THEN CALL SETJCL(BINDX);
                    ELSE DOA: DO;
                            DOB: DO IX = 3 TO BINDX+1 BY -1;
                                 IF VBACKUP(IX)^=0
                                    THEN IF VBDTE(IX)=0
                                       THEN LEAVE DOB;
                                 IF VBDTE(IX)=JULIAN
                                    THEN LEAVE DOA;
                                 END;
                             CALL SETJCL(IX);
                             END;
              END;
         BDAMKEYA = VOLNPT;
         END;
         CALL PLIRETC(BCODE);
 SETJCL: PROC(CYCLE);
         BCODE = 0;
         I = SUBSTR(VOLFLGS,9,4);
         I = LOG2(I);
         REC='./ ADD NAME='××SUBSTR(PAD1,3,6)××NXT;
         WRITE FILE(JCLDTE) FROM(REC);
         WRITE FILE(JCLOUT) FROM(JOBCARD);
         WRITE FILE(JCLDTE) FROM(JOBCARD);
         REC='/*MESSAGE      ********** 1-'××UNITA(I)××' ********';
         WRITE FILE(JCLOUT) FROM(REC);
         WRITE FILE(JCLDTE) FROM(REC);
          /* CHECK FOR SIMULTANEOUS BACKUP ON WEEK AND DAY CYCLE */
         IF CYCLE = 3 & SUBSTR(VOLFLGS,13,1) = '1'B
           THEN REC='/*MESSAGE      ***** 2 - SCRATCH TAPES *****';
           ELSE REC='/*MESSAGE      ***** 1 - SCRATCH TAPE  *****';
         WRITE FILE(JCLOUT) FROM(REC);
         WRITE FILE(JCLDTE) FROM(REC);
         REC='/*SETUP        '××VOLSER;
         WRITE FILE(JCLOUT) FROM(REC);
         WRITE FILE(JCLDTE) FROM(REC);
          /* CHECK FOR SIMULTANEOUS BACKUP ON WEEK AND DAY CYCLE */
         IF CYCLE = 3 & SUBSTR(VOLFLGS,13,1) = '1'B
           THEN REC='// EXEC AU109601,SER='××VOLSER××',UNIT='''
             ××UNITA(I)××''',CYCLE='××WORDTAB(CYCLE);
           ELSE REC='// EXEC AU109600,SER='××VOLSER××',UNIT='''
             ××UNITA(I)××''',CYCLE='××WORDTAB(CYCLE);
         WRITE FILE(JCLOUT) FROM(REC);
         WRITE FILE(JCLDTE) FROM(REC);
         NXT = NXT + 1;
         BDAMKEYA = VOLNPT;
         END SETJCL;
         END;
