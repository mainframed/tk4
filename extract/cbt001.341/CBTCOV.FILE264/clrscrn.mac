X0183    TITLE 'MULTIPLE SCREEN SIZE SUPPORT - QUERY, SET OR CLEAR'
*-------------------------------------------------------------------
*                                              81-09-25 DICK RETTKE
* ALL RESPONSES ARE RETURNED IN REGISTER 15 (RETCODE)
*
* Q)UERY (REQUEST FOR INFORMATION) PARAMETERS
*
* 'QL' - RETURNS CURRENT SCREEN LENGTH (# OF LINES)
*
* 'QW' - RETURNS CURRENT SCREEN WIDTH  (# OF COLUMNS)
*
* 'QM' - RETURNS PRIMARY AND ALTERNATE 3270-X MODEL #
*        FOR EXAMPLE, A CRT WITH A PRIMARY SIZE CORRESPONDING TO A
*        MODEL 4 AND AN ALTERNATE SIZE CORRESPONDING TO A MODEL 4
*        WOULD RETURN A 45 IN REGISTER 15.
*
* 'QC' - RETURNS THE CURRENT MODEL NUMBER
*
* 'QA' - RETURNS THE ATTRIBUTE BIT SETTING (EDS / COLOR TUBE)?
*
*------------------------------------------------------------------
*
* S)ET (REQUEST FOR ACTION) PARAMETERS
*
* (SET REQUESTS WILL ALWAYS CLEAR THE SCREEN WITHAN ERASE-WRITE-
*  ALTERNATE UNLESS AN ERROR OCCURS)
*
* 'SL' OR 'LONG' -
*      SET SCREEN SIZE TO THE LONGEST (MOST LINES) AVAILABLE
*
* 'SS' OR 'SHORT' -
*      SET SCREEN SIZE TO THE SHORTEST (FEWEST LINES) AVAILABLE
*
* 'SW' OR 'WIDE' -
*      SET SCREEN SIZE TO THE WIDEST (MOST COLUMNS) AVAILABLE
*
* 'SN' OR 'NARROW' -
*      SET SCREEN SIZE TO THE NARROWEST (FEWEST COLUMNS) AVAIL.
*
* 'SA' OR 'ALTERNATE' -
*      SET SCREEN SIZE TO THE ALTERNATE SIZE
*
* 'SP' OR 'PRIMARY' -
*      SET SCREEN SIZE TO THE PRIMARY SIZE
*
* 'SB##' OR 'BELL(#)' OR 'SOUND(#)' OR 'ALARM(#)' -
*      SOUND BELL ## TIMES (DEFAULT IS ONCE)
*
* 'ST' OR 'TOGGLE' OR 'FLIP' OR 'REVERSE' OR 'EXCHANGE' -
*      SET (TOGGLE) SCREEN SIZE.  IF CURRENT SIZE ISTHE PRIMARY THEN
*      SET TO THE ALTERNATE.  IF THE CURRENT SIZE IS THE ALTERNATE THEN
*      SET TO THE PRIMARY.
*
* 'SM#' OR 'MODEL(#)' -
*       SET SCREEN TO SIZE FOR MODEL '#' (WHERE # IS 1-7)
*
* 'SRCRR#CC#' OR 'SCRSIZE(R#,C#)' -
*       SET THE SCREEN SIZE TO # OF LINES = RR AND NUMBER OF COLUMNS
*       = CCC.  RR# AND CC# ARE VALIDATED TO BE WITHIN THE AVAILABLE
*       SIZES, IF NOT A RETURN CODE = 255 (FF) IS RETURNED.  RR#CC#
*       MUST BE 6 CHARACTERS (IE: LEADING ZEROES ARE REQUIRED).
*
*------------------------------------------------------------------
*
* 'C' OR NOTHING - CLEAR THE SCREEN
*
*------------------------------------------------------------------
*
*
* ERROR CODES:255 - INPUT PARAMETER ERROR OR INTERNAL ERROR.
*
*             512 - RETURNED ON A QUERY REQUEST WHERE THE CURRENT
*                   SCREEN SIZE IS NON-STANDARD.
*
*-------------------------------------------------------------------
* TO ASSEMBLE & LINK
*
* ASX X0183 LIB('SYS1.MACLIB' 'SYS2.MACLIB' 'SYS1.AMODGEN') XREF
*           PRINT(ASMLIST) LIST
* LINK X0183 LOAD('X66819.LOAD(X0183IS1') PRINT(*)
*
*-------------------------------------------------------------------
X0183    CSECT
         SAVE  (14,12),,*X0183*_&SYSDATE_&SYSTIME SAVE REGISTERS
         LR    RC,RF                   LOAD STANDARD BASE REG
         USING X0183,RC                ESTABLISH ADDRESSABILITY
*
* DETERMINE IF WE WERE INVOLKED AS A PROGRAM (VIA CALL, XCTL, ATTACH,
* ETC.) OR AS A TMP.  THEN PICK UP THE PARAMETERS, EITHER FROM THE MVS
* PARAMETER LIST (IF A PROGRAM) OR FROM THE CPPL (IF A TMP)
* IF R1 = 0 OR R6 OFF OF R1 = 0 THEN TAKE THE CLEAR SCREEN DEFAULT.
* THIS IS THE CASE IF CALLED FROM PLI WITH NO PARMS
*
         ST    RD,SAVEAREA+4
         LA    RE,SAVEAREA
         ST    RE,8(RD)
         LR    RD,RE
         XC    PARSEFLG,PARSEFLG       RESET PARSE FLAG
         LTR   R5,R1                   TEST FOR R1 = ZEROES
         BZ    CLEARSCR                TAKE THE DEFAULT
*
* GET THE SCREEN INFO FROM MVS
*
         GTTERM PRMSZE=PRIMSIZE,ALTSZE=ALTSIZE,ATTRIB=ATRIBUTE
         GTSIZE ,                      GET CURRENT SIZE
         STC   R0,CURRROW              SAVE CURRENT NUMBER OF ROWS
         STC   R1,CURRCOL              SAVE CURRENT NUMBER OF COLUMNS
         XR    RF,RF                   ZERO RF
         ICM   R6,B'1111',0(R5)        GET PARMLIST POINTER
         BZ    CLEARSCR                IF ZERO TAKE DEFAULT
         BM    NOTATMP                 HI BIT ON MEANS CALLED PGM
*
* PARSE THE COMMAND LINE
*
         USING CPPL,R5
         MVC   PPLUPT,CPPLUPT          MOVE PARMS FOR PARSE
         MVC   PPLECT,CPPLECT
         MVC   PPLCBUF,CPPLCBUF
         ST    RC,PPLUWA               SAVE BASE REG FOR VALIDITY
         CALLTSSR EP=IKJPARS,MF=(E,PPL)
         B     *+4(RF)                 CHECK RETURN CODE
         B     OK                      RET CODE = 0
         B     PARMERR                 RET CODE = 4
         B     PARMERR                 RET CODE = 8
         B     MSG12                   RET CODE = 12
         B     MSG16                   RET CODE = 16
         B     PARMERR                 RET CODE = 20
         B     MSG24                   RET CODE = 24
         B     PARMERR                 RET CODE = 28
OK       ICM   R7,B'1111',@PDL
         BM    CLEARSCR                NO PARM DEFAULT
         USING IKJPARMD,R7             ESTABLISH ADDRESSABILITY
         LH    R5,KEYWORDS             GET THE PARM NUMBER
         SLA   R5,2                    MULTIPLY BY 4
         ST    R5,PARSEFLG             SAVE AS A FLAG
         OI    PARSEFLG,X'80'          TURN ON PARSED INDICATOR
*
* BRANCH TABLE FOR TMP ENTRY
*
         L     R5,PARSEFLG
         B     *+4(R5)                 DOIT TOIT
         B     CLEARSCR                KEYWD= 0
         B     CLEARSCR                KEYWD= 1
         B     QL2                     KEYWD= 2
         B     QW2                     KEYWD= 3
         B     QM2                     KEYWD= 4
         B     QC2                     KEYWD= 5
         B     QA2                     KEYWD= 6
         B     SL2                     KEYWD= 7
         B     SS2                     KEYWD= 8
         B     SW2                     KEYWD= 9
         B     SN2                     KEYWD=10
         B     SETTOALT                KEYWD=11
         B     SETTOPRM                KEYWD=12
         B     ST2                     KEYWD=13
         B     SBPARM                  KEYWD=14
         B     SMPARM                  KEYWD=15
         B     SMPARM                  KEYWD=16
         B     SMPARM                  KEYWD=17
         B     SMPARM                  KEYWD=18
         B     SMPARM                  KEYWD=19
         B     SMPARM                  KEYWD=20
         B     SMPARM                  KEYWD=21
         B     SMPARM                  KEYWD=22
         B     SRCPARM                 KEYWD=23
*
* NOT CALLED AS A TMP SO GET PARMS FROM PARMLIST
*
NOTATMP  LR    R7,R6                   GET PARMLIST PTR IN R3
         OC    0(2,R7),0(R7)           CHECK FOR ZERO PARM LENGTH
         BZ    CLEARSCR                TAKE NO PARM DEFAULT
         LH    R6,0(R7)                GET THE PARM LENGTH
         STH   R6,PARMLEN              SAVE PARM LENGTH FOR LATER USE
         LA    R7,2(R7)                ADD 2 TO GET PAST HEADER
         EJECT
*
* CONVERT PARAMETERS TO UPPER CASE
*
CONVERT  LH    R5,PARMLEN              PUT LENGTH OF PARMS IN R5
         EX    R5,UPPERCAS             CONVERT PARM TO UPPER CASE
         EJECT
*
* CHECK FOR PARM TYPE OF Q)UERY OR S)ET OR C)LEAR SCREEN
*
         CLI   0(R7),C'Q'              QUERY REQUEST?
         BE    QUERY                   YES
         CLI   0(R7),C'S'              SET REQUEST?
         BE    SET                     YES
         CLI   0(R7),C'C'              CLEAR SCREEN REQUEST
         BE    CLEARSCR                YES
         LA    RF,255                  INVALID PARAMETER RET CODE
         B     EXIT
         EJECT
*
* QUERY PARSING / PROCESSING
*
QUERY    EQU   *
         SPACE 1
QL       CLI   1(R7),C'L'              NUMBER OF LINES REQUEST
         BNE   QM                      NO
QL2      IC    RF,CURRROW              YES, GET NUMBER OF LINES
         B     EXIT
         SPACE 2
QM       CLI   1(R7),C'M'              PRIM/ALT MODEL REQUEST?
         BNE   QC                      NO
QM2      LA    R5,PRIMSIZE             LOOKUP PRIMARY MODEL NUMBER
         BAL   RE,MLOOKUP              DO TABLE LOOKUP
         LA    R5,ALTSIZE              LOOKUP ALTERNATE MODEL
         LA    RE,EXIT                 GET ADDRESS OF EXIT
         B     MLOOKUP                 DO TABLE LOOKUP
         SPACE 2
QC       CLI   1(R7),C'C'              CURRENT MODEL REQUESTED?
         BNE   QW                      NO, TAKE THE DEFAULT
QC2      LA    R5,CURRSIZE             LOOKUP CURRENT MODEL NUMBER
         BAL   RE,MLOOKUP              DO TABLE LOOKUP
         B     EXIT
         SPACE 2
QW       CLI   1(R7),C'W'              CURRENT WIDTH REQUESTED?
         BNE   QA                      NO
QW2      IC    RF,CURRCOL              YES, GET NUMBER OF COLUMNS
         B     EXIT
         SPACE 2
QA       CLI   1(R7),C'A'              ATTRIBUTE BYTE REQUESTED?
         BNE   PARMERR                 NO, ERROR
QA2      IC    RF,ATRIBUTE             YES, RETURN ATTRIBUTE BYTE
         B     EXIT
         EJECT
*
* SET PARSING / PROCESSING
*
SET      EQU   *
         SPACE 2
SL       CLI   1(R7),C'L'              SET LONGEST REQUEST?
         BNE   SS                      NO
SL2      CLC   PRIMROW,ALTROW          WHICH IS LONGER?
         BH    SETTOPRM                SET TO PRIMARY SIZE
         B     SETTOALT                SET TO ALTERNATE SIZE
         SPACE 2
SS       CLI   1(R7),C'S'              SET SHORTEST REQUEST?
         BNE   SW                      NO
SS2      CLC   PRIMROW,ALTROW          WHICH IS SHORTER?
         BL    SETTOPRM                SET TO PRIMARY SIZE
         B     SETTOALT                SET TO ALTERNATE SIZE
         SPACE 2
SW       CLI   1(R7),C'W'              SET WIDEST REQUEST?
         BNE   SN                      NO
SW2      CLC   PRIMCOL,ALTCOL          WHICH IS WIDER?
         BH    SETTOPRM                SET TO PRIMARY
         B     SETTOALT                SET TO ALTERNATE
         SPACE 2
SN       CLI   1(R7),C'N'              SET NARROWEST REQUEST?0
         BNE   SA                      NO
SN2      CLC   PRIMCOL,ALTCOL          WHICH IS NARROWER?
         BL    SETTOPRM                SET TO PRIMARY
         B     SETTOALT                SET TO ALTERNATE
         SPACE 2
SA       CLI   1(R7),C'A'              SET ALTERNATE REQUEST?
         BNE   SP                      NO
         B     SETTOALT                YES
         SPACE 2
SP       CLI   1(R7),C'P'              SET PRIMARY REQUEST?
         BNE   ST                      NO
         B     SETTOPRM                YES
         SPACE 2
ST       CLI   1(R7),C'T'              SET TOGGLE REQUEST?
         BNE   SB                      NO
ST2      CLC   PRIMROW,CURRROW         TEST IF WE ARE CURRENTLY
         BNE   SETTOPRM                PRIMARY OR ALTERNATE
         CLC   PRIMCOL,CURRCOL
         BNE   SETTOPRM
         B     SETTOALT                NOT PRIM, MUST BE ALT
         SPACE 2
SBPARM   L     R5,SBTIMES              GET PARSED PARAMETER
         L     R5,0(R5)
         B     SB1
SB       CLI   1(R7),C'B'              SOUND BELL REQUEST?
         BNE   SM                      NO
         CLC   PARMLEN,=H'4'           VALID PARM?
         BNE   PARMERR                 NO
         TRT   2(2,R7),TRTABLE         TEST NUMERICY
         BNZ   PARMERR
         PACK  WORKB,2(2,R7)           PACK THE NUMBER OF TIMES
         CVB   R5,WORKA                MAKE IT USABLE
SB1      LR    RA,R5                   GET IT IN A SAFE REGISTER
         LTR   RA,RA                   TEST FOR ZERO TIMES SPEC.
         BZ    EXIT
RINGBELL TPUT  ALARM,LENALARM,CONTROL,WAIT,,BREAKIN,HIGHP
         BCT   RA,RINGBELL             DO IT RA TIMES
         B     EXIT
         SPACE 2
SMVALCK  EQU   *                       VALIDITY CHECK FOR PARSE
         SAVE  (14,12)
         L     RC,4(R1)                GET BASE REG BACK
         L     R5,0(R1)                GET PDE ADDRESS
         L     R5,0(R5)                GET THE ADDRESS OF THE DATA
         L     R5,0(R5)                GET THE DATA
         BAL   RE,MODRGCK              CHECK RANGE OF MODEL NUMBER
         LTR   RF,RF
         BNZ   SMVALCKX                NOT VALID
         BCTR  R5,0                    DECREMENT MODEL NUMBER
         SLA   R5,1                    MULT. BY 2
         LA    R4,MODEL
         AR    R5,R4                   POINT TO ENTRY
         BAL   RE,MOVERC               MOVE ROWS & COLUMNS
         BAL   RE,CHKPRIME             VALIDATE CURRENCY
SMVALCKX RETURN (14,12),RC=(15)
SMPARM   L     R5,SMMODEL              GET PARSED PARAMETERS
         L     R5,0(R5)
         B     SM1
SM       CLI   1(R7),C'M'              SET TO MODEL REQUEST?
         BNE   SRC                     NO
         CLC   PARMLEN,=H'3'           VALID PARM?
         BNE   PARMERR                 NO
         TRT   2(1,R7),TRTABLE         TEST NUMERICY
         BNZ   PARMERR                 NOT NUMERIC, ERROR
         PACK  WORKB,2(1,R7)           PACK THE MODEL NUMBER
         CVB   R5,WORKA                MAKE IT USABLE
SM1      BAL   RE,MODRGCK              VALID MODEL NUMBER?
         LTR   RF,RF
         BNZ   PARMERR                 NO
         BCTR  R5,0                    DECREMENT BY 1
         SLA   R5,1                    MULT. BY 2
         LA    R4,MODEL
         AR    R5,R4                   POINT TO ENTRY
         BAL   RE,MOVERC               MOVE ROWS & COLUMNS
         BAL   RE,CHKPRIME             VALIDATE FOR CURRENCY
         LTR   RF,RF
         BZ    STSIZE
         B     PARMERR
         SPACE 2
COLVALCK EQU   *                       VALIDITY CHECK FOR COLUMNS
         SAVE  (14,12)
         L     RC,4(R1)                GET BASE REG BACK
         L     R5,0(R1)                GET PDE ADDRESS
         L     R5,0(R5)                GET THE ADDRESS OF THE DATA
         L     R5,0(R5)                GET THE DATA
         STC   R5,COLUMNS+3            SETUP TO VALIDATE
         MVI   ROWS+3,X'01'            FORCE ROWS TO BE VALID
         BAL   RE,CHKPRIME             VALIDATE
         RETURN (14,12),RC=(15)        RETURN TO PARSE
ROWVALCK EQU   *                       VALIDITY CHECK FOR ROWS
         SAVE  (14,12)
         L     RC,4(R1)                GET BASE REG BACK
         L     R5,0(R1)                GET PDE ADDRESS
         L     R5,0(R5)                GET THE ADDRESS OF THE DATA
         L     R5,0(R5)                GET THE DATA
         STC   R5,ROWS+3               SETUP TO VALIDATE
         MVI   COLUMNS+3,X'01'         FORCE COLUMNS O BE VALID
         BAL   RE,CHKPRIME             VALIDATE
         RETURN (14,12),RC=(15)        RETURN TO PARSE
SRCPARM  L     R5,SROW                 GET PARSED PARAMETERS
         L     R5,0(R5)
         ST    R5,ROWS
         L     R5,SCOL
         L     R5,0(R5)
         ST    R5,COLUMNS
         B     STSIZE
SRC      CLC   PARMLEN,=H'9'           SET SPECIFIC SIZE REQUEST?
         BE    SRC1                    YES
PARMERR  LA    RF,255                  INVALID PARAMETERS
         B     EXIT
SRC1     TRT   3(6,R7),TRTABLE         TEST NUMERICY
         BNZ   PARMERR                 NON NUMERIC PARAMETERS
         PACK  WORKB,3(3,R7)           PACK THE ROWS
         CVB   R5,WORKA                MAKE ROWS USEABLE
         ST    R5,ROWS
         PACK  WORKB,6(3,R7)           PACK THE COLUMNS
         CVB   R5,WORKA                MAKE COLUMNS USEABLE
         ST    R5,COLUMNS
         EJECT
*
* SET SIZE TO REQUESTED SIZE VIA STSIZE MACRO
*
STSIZE   STSIZE SIZELOC=COLUMNS,LINELOC=ROWS SET THE SCREEN SIZE
         SPACE 5
*
* IF TERMINAL IS A DISPLAY STATION THEN ISSUE AN ERASE-WRITE-ALTERNATE
* TO CLEAR THE SCREEN.  IF NOT A DISPLAY STATION THEN ISSUE A FORMFEED
*
CLEARSCR EQU   *
         GTSIZE ,                      DISPLAY TUBE OR HARDCOPY
         LTR   R4,R4                   IS R0 = ZERO
         BZ    FORMFEED                YES
         TPUT  EWA,LENEWA,FULLSCR,WAIT,,BREAKIN,HIGHP
         B     EXIT                    FINISHED
         SPACE 5
FORMFEED TPUT  FF,LENFF,ASIS,WAIT,,BREAKIN,HIGHP
         B     EXIT
         EJECT
*
* MAKE SURE MODEL NUMBER IS IN VALID RANGE
*
MODRGCK  LA    RF,4                    SET RETURN CODE
         C     R5,=F'0'                IS IT ZERO OR NEGATIVE?
         BNHR  RE                      YES
         C     R5,=F'10'               IS IT GREATER THAN 9
         BNLR  RE                      YES
         XR    RF,RF                   ZERO RET CODE IS OK
         BR    RE
         SPACE 5
*
* MOVE ROWS & COLUMNS TO WORK AREAS
*
MOVERC   MVC   ROWS+3(1),0(R5)         MOVE ROWS AND COLUMNS
         MVC   COLUMNS+3(1),1(R5)
         BR    RE
         SPACE 5
*
* VALIDATE REQUESTED SIZES
*
CHKPRIME XR    RF,RF                   ZERO RETURN CODE
         CLC   ROWS+3(1),PRIMROW       VALIDATE AGAINST PRIMARY
         BH    CHKALT                  TOO LARGE, TRY ALTERNATE
         CLC   COLUMNS+3(1),PRIMCOL
         BNHR  RE                      SIZE IS OK
CHKALT   CLC   ROWS+3(1),ALTROW        VALIDATE AGAINST ALTERNATE
         BH    CHKERR                  TOO LARGE, MAKE IT IN ERROR
         CLC   COLUMNS+3(1),ALTCOL
         BNHR  RE                      OK
CHKERR   LA    RF,4                    SET RETURN CODE FOR ERROR
         BR    RE
         SPACE 5
*
* SET TO PRIMARY
*
SETTOPRM XR    R5,R5                   ZERO
         IC    R5,PRIMROW              MOVE PRIMARY ROWS AND COLUMNS
         ST    R5,ROWS                 TO FULLWORD FIELDS
         IC    R5,PRIMCOL
         ST    R5,COLUMNS
         B     STSIZE                  GO DO IT
SETTOALT XR    R5,R5                   ZERO
         IC    R5,ALTROW               MOVE ALTERNATE ROWS AND COLUMNS
         ST    R5,ROWS                 TO FULLWORD FIELDS
         IC    R5,ALTCOL
         ST    R5,COLUMNS
         B     STSIZE                  GO DO IT
         SPACE 5
*
* MODEL NUMBER LOOKUP SUBROUTINE
*
MLOOKUP  EQU   *
         LA    RA,MODEL                SETUP FOR PRIMARY MODEL LOOKUP
         LR    RB,RA                   SAVE ADDRESS
         LA    R9,ENDMODEL-2           SET COMPARE VALUE
         LA    R8,2                    SET INCREMENT
MLOOKUP1 CLC   0(2,R5),0(RA)           CORRECT MODEL?
         BNE   MLOOKUP2                YES
         SR    RA,RB                   COMPUTE A NUMBER
         SRA   RA,1                    DIVIDE BY 2
         MH    RF,=H'10'               MULT BY 10
         LA    RF,1(RA,RF)             ADD AND INCR BY 1
         BR    RE                      RETURN
MLOOKUP2 BXLE  RA,R8,MLOOKUP1          BUMP AND JUMP
         LA    RF,512                  INTERNAL ERROR - NOT IN TABLE
         B     EXIT
         SPACE 5
*
* EXECUTED INSTRUCTIONS
*
UPPERCAS OC    0(0,R7),=CL100' '        MAKE PARM UPPER CASE
*
* NONE ZERO PARSE RETURN CODE ROUTINES
*
MSG12    EQU   *                       RETURN CODE FROM PARSE = 12
         TPUT  MSG12TXT,MSG12LEN,EDIT,WAIT,,BREAKIN,HIGHP
         B     PARMERR
MSG16    EQU   *                       RETURN CODE FROM PARSE = 16
         TPUT  MSG16TXT,MSG16LEN,EDIT,WAIT,,BREAKIN,HIGHP
         B     PARMERR
MSG24    EQU   *                       RETURN CODE FROM PARSE = 24
         TPUT  MSG24TXT,MSG24LEN,EDIT,WAIT,,BREAKIN,HIGHP
         B     PARMERR
*
* EPILOGUE
*
EXIT     TM    PARSEFLG,X'80'
         BNO   EXIT2                   NOPE, MUST HAVE BEEN CALLED
         LR    RA,RF                   SAVE RET CODE
         IKJRLSA @PDL
         LR    RF,RA                   RESTORE RET CODE
EXIT2    L     RD,SAVEAREA+4
         RETURN (14,12),RC=(15)        RESTORE REGISTERS AND RETURN
         EJECT
*
* DATA AREAS
*
SAVEAREA DS    18F
@PDL     DC    A(*-*)
PARSEFLG DC    AL4(0)                  PARSE/NOTATMP FLAG/ADDRESS
PARMLEN  DC    AL2(0)                  HALFWORD PARM LENGTH SAVE AREA
PRIMSIZE DS    0H                      PRIMARY SCREEN SIZE AVAILABLE
PRIMROW  DC    X'00'                     PRIMARY # OF ROWS (LINES)
PRIMCOL  DC    X'00'                     PRIMARY # OF COLUMNS (WIDTH)
ALTSIZE  DS    0H                      ALTERNATE SCREEN SIZE AVAILABLE
ALTROW   DC    X'00'                     ALTERNATE # OF ROWS (LINES)
ALTCOL   DC    X'00'                     ALTERNATE # OF COLUMNS (WIDTH)
ATRIBUTE DC    AL4(0)                  EDS BIT SETTING
CURRSIZE DS    0H                      CURRENT SCREEN SIZE
CURRROW  DC    X'00'                     CURRENT # OF ROWS (LINES)
CURRCOL  DC    X'00'                     CURRENT # OF COLUMNS (WIDTH)
         DS    0F
ROWS     DC    AL4(0)                  # OF ROWS TO SET TO
COLUMNS  DC    AL4(0)                  # OF COLUMNS TO SET TO
         DS    0D
WORKA    DC    AL4(0)                  WORK AREA FOR CONVERSION
WORKB    DC    AL4(0)                  WORK AREA FOR CONVERSION
*
* MODEL TO SCREEN SIZE TRANSLATE TABLE
*
MODEL    DS    0F
         DC    AL1(12,40)              MODEL 1 12 X  40 (IBM DEFINED)
         DC    AL1(24,80)              MODEL 2 24 X  80 (IBM DEFINED)
         DC    AL1(32,80)              MODEL 3 32 X  80 (IBM DEFINED)
         DC    AL1(43,80)              MODEL 4 43 X  80 (IBM DEFINED)
         DC    AL1(27,132)             MODEL 5 27 X 132 (IBM DEFINED)
         DC    AL1(43,132)             MODEL 6 43 X 132 (LDC DEFINED)
         DC    AL1(66,132)             MODEL 7 66 X 132 (LDC DEFINED)
         DC    AL1(255,255)            RESERVED FOR FUTURE USE
         DC    AL1(255,255)            RESERVED FOR FUTURE USE
         DC    X'FFFF'                 END OF TABLE
ENDMODEL EQU   *
*
* NUMERIC TEST TRANSLATE TABLE
*
         DS    0F
TRTABLE  DC    240X'FF'                ECBDIC RANGE 0-239
         DC    10X'00'                 NUMERICS
         DC    6X'FF'                  EBCDIC RANGE 250-255
         DS    0F
EWA      DC    X'277E'                 <ESC> <ERASE WRITE ALTERNATE>
         DC    B'11000001'             <WCC> (RESET MDT)
LENEWA   EQU   *-EWA
ALARM    DC    X'27F1'                 <ESC> <WRITE>
         DC    B'11000101'             <WCC> (SOUND ALARM)
LENALARM EQU   *-ALARM
         DS    0F
FF       DC    X'27F10C'               <ESC> <WRITE> <FORMFEED>
LENFF    EQU   *-FF
MSG12TXT DC    C'PARSE FAILED WITH RETCODE=12, INVALID CONTROL BLOCK'
MSG12LEN EQU   *-MSG12TXT
MSG16TXT DC    C'PARSE FAILED WITH RETCODE=16, NO GETMAIN SPACE AVAIL.'
MSG16LEN EQU   *-MSG16TXT
MSG24TXT DC    C'PARSE FAILED WITH RETCODE=24, CONFLICTING PARAMETERS'
MSG24LEN EQU   *-MSG24TXT
         DS    0H
DUMMYECB DC    AL4(0)
         EJECT
PPL      DS    0F
PPLUPT   DC    AL4(0)
PPLECT   DC    AL4(0)
PPLECB   DC    AL4(DUMMYECB)
PPLPCL   DC    VL4(MYPCL)
PPLANS   DC    AL4(@PDL)
PPLCBUF  DC    AL4(0)
PPLUWA   DC    AL4(0)
         LTORG
*
* PARSE PARAMETER DESCRIPTORS
*
MYPCL    IKJPARM
KEYWORDS IKJKEYWD DEFAULT='C'
         IKJNAME 'C'                                                  1
         IKJNAME 'QL'                                                 2
         IKJNAME 'QW'                                                 3
         IKJNAME 'QM'                                                 4
         IKJNAME 'QC'                                                 5
         IKJNAME 'QA'                                                 6
         IKJNAME 'SL',ALIAS='LONG'                                    7
         IKJNAME 'SS',ALIAS='SHORT'                                   8
         IKJNAME 'SW',ALIAS='WIDE'                                    9
         IKJNAME 'SN',ALIAS='NARROW'                                 10
         IKJNAME 'SA',ALIAS='ALTERNATE'                              11
         IKJNAME 'SP',ALIAS='PRIMARY'                                12
         IKJNAME 'ST',ALIAS=('TOGGLE','FLIP','REVERSE','EXCHANGE')   13
         IKJNAME 'SB',ALIAS=('BELL','SOUND','ALARM'),                14X
               SUBFLD=SBSUBFLD
         IKJNAME 'SM',ALIAS='MODEL',                                 15X
               SUBFLD=SMSUBFLD
         IKJNAME 'MOD1',INSERT='MODEL(1)'                            16
         IKJNAME 'MOD2',INSERT='MODEL(2)'                            17
         IKJNAME 'MOD3',INSERT='MODEL(3)'                            18
         IKJNAME 'MOD4',INSERT='MODEL(4)'                            19
         IKJNAME 'MOD5',INSERT='MODEL(5)'                            20
         IKJNAME 'MOD6',INSERT='MODEL(6)'                            21
         IKJNAME 'MOD7',INSERT='MODEL(7)'                            22
         IKJNAME 'S',ALIAS=('SIZE','SCRSIZE','SRC'),                 23X
               SUBFLD=SSUBFLD
SBSUBFLD IKJSUBF
SBTIMES  IKJIDENT 'NO. OF TIMES TO SOUND BELL',FIRST=NUMERIC,          X
               OTHER=NUMERIC,INTEG,MAXLNTH=2,DEFAULT='1'
SMSUBFLD IKJSUBF
SMMODEL  IKJIDENT 'MODEL NUMBER',FIRST=NUMERIC,VALIDCK=SMVALCK,        X
               INTEG,MAXLNTH=1,PROMPT='MODEL NUMBER',                  X
               HELP=('2 FOR 24X80, 4 FOR 43X80, 5 FOR 27X132')
SSUBFLD  IKJSUBF
SROW     IKJIDENT 'ROWS',FIRST=NUMERIC,OTHER=NUMERIC,VALIDCK=ROWVALCK, X
               INTEG,MAXLNTH=2,PROMPT='NUMBER OF ROWS (VERTICAL)',     X
               HELP=('THE NUMBER OF CHARACTERS FROM TOP TO BOTTOM')
SCOL     IKJIDENT 'COLUMNS',FIRST=NUMERIC,OTHER=NUMERIC,               X
               VALIDCK=COLVALCK,                                       X
               INTEG,MAXLNTH=3,PROMPT='NUMBER OF COLUMNS (HORIZONTAL)' X
               HELP=('THE NUMBER OF CHARACTERS LEFT TO RIGHT')
         IKJENDP
*
* PARAMETER LISTS
*
CPPL     IKJCPPL
*
* MAPPING MACROS
*
         CVT   DSECT=YES
*
* REGISTER EQUATES
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
RA       EQU   10
RB       EQU   11
RC       EQU   12
RD       EQU   13
RE       EQU   14
RF       EQU   15
         END
