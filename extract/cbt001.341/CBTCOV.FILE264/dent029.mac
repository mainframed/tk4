 /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
 /* DENT029 - DREM SUBCOMMAND */
 /* DREM <RHNAME> {<L1> {<L2>}} <L3> */
         % DCL @PROCNAME CHAR;
         % DCL @RENTNAME CHAR;
         % @PROCNAME = 'RENT';
         % @RENTNAME = 'DENT029';
         % INCLUDE DENTSUB;
         DCL LAST FIXED BIN(31,0) STATIC INIT(99999999);
         DCL SAVPARY(16) CHAR(256) VAR;
         DCL SETCAPS ENTRY;
         DCL (RHP,SAVPTR,TPT,ORGPTR) PTR;
         DCL RHN CHAR(8);
         RHN = PARY(2);
         CALL SETCAPS(RHN);
         DO RHP=NXTRHEL REPEAT RHP->RHNXT WHILE(RHP^=NULL)
           UNTIL(RHP->RHNAME=RHN);
           END;
         IF RHP=NULL
           THEN DO;
             SAVPTR=RHPTR;
             SAVPARY=PARY;
             PARY(*)='';
             PUT STRING(PARY(3)) EDIT('RECSIZE(',BUFLN,')')
               (A,P'99999',A);
             PARY(4)='SUBCALL';
             CALL #DENT(CMDINDX,PARPTR,RHPTR,SUBENT,RHHDRPT);
               /* CALL DENTSI */
             PARY = SAVPARY;
             HEXMODE = SAVPTR->HEXMODE;
             RHTRANSW = SAVPTR->RHTRANSW;
             LOFLAG = SAVPTR->LOFLAG;
             RHNAME=RHN;
             RHP=RHPTR;
             RHPTR=SAVPTR;
             END;
         DO I = 5 TO 4 BY -1 WHILE(PARY(I)='');
              END;
         L3 = PARY(I);
         IF I > 3
           THEN DO;
             IF PARY(3)='*'
               THEN L1 = CURSEQ;
               ELSE L1 = PARY(3);
             IF I > 4
               THEN L2 = PARY(4);
               ELSE L2 = 99999999;
             END;
           ELSE DO;
             L1 = 0;
             L2 = 99999999;
             END;
         ORGPTR = RECPTR;
         CALL #MD(RHPTR,SUBENT,L1); /* CALL MDPROC */
         IF I>4 & PARY(3)='*'
           THEN DO;
             DO SAVPTR=RECPTR REPEAT SAVPTR->NXTPTR
               UNTIL(SAVPTR->NXTPTR=HDPTR × L2 = 0);
               L2 = L2-1;
               END;
             L2 = SAVPTR->RECSEQ;
             END;
         DO TPT=RHP->NXTHDR REPEAT TPT->NXTPTR
           WHILE(TPT^=RHP->HDPTR)
           UNTIL(TPT->RECSEQ >= L3 × TPT->NXTPTR=RHP->HDPTR);
           END;
         IF TPT^=RHP->HDPTR
           THEN IF TPT->RECSEQ > L3
             THEN TPT=TPT->LSTPTR;
         SEQ=-1;
         DO SAVPTR=RECPTR REPEAT SAVPTR->NXTPTR
           WHILE(SAVPTR^=HDPTR);
           IF SAVPTR->RECSEQ > L2
             THEN LEAVE;
           RHP->BUFPTR->BUF=SAVPTR->RECSTR;
           IF TPT=RHP
             THEN IF RHP->NXTHDR=RHP
               THEN SEQ=SAVPTR->RECSEQ;
               ELSE IF RHP->NXTHDR->RECSEQ > SAVPTR->RECSEQ
                 THEN SEQ=SAVPTR->RECSEQ;
                 ELSE SEQ=-1;
             ELSE IF TPT->RECSEQ >= SAVPTR->RECSEQ
               THEN SEQ=-1;
               ELSE IF TPT->NXTPTR=RHP
                 THEN SEQ=SAVPTR->RECSEQ;
                 ELSE IF TPT->NXTPTR->RECSEQ > SAVPTR->RECSEQ
                   THEN SEQ=SAVPTR->RECSEQ;
                   ELSE SEQ=-1;
           CALL #ADD(RHP,SUBENT,TPT,TPT,SEQ,RHP->BUFPTR->BUF,
             RHPPTR); /* CALL ADDREC */
           END;
         CALL #RESEQ(RHP,SUBENT,TPT->LSTPTR,'NOSAVE','NORENUM',LAST,
           RHPPTR); /* CALL RESEQ */
         RHP->RECPTR=RHP->NXTHDR;
         RHP->CURSEQ=RHP->RECPTR->RECSEQ;
         CALL #NC(RHPTR,SUBENT,ORGPTR);/* CALL NEWCUR */
         RHRC = 0;
         END;
