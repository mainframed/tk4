 /*AID*/
         % INCLUDE CPINIT1;
         % @CMP = 'C';
         % INCLUDE CPINIT2;
         DFT RANGE(*) FIXED BIN VALUE(FIXED BIN(31,0));
         DCL PLIXOPT CHAR(15) VAR INIT('ISA(500K)') STATIC EXT;
         @PROC(1,CMDNAM);
         DCL DCBPTR PTR;
         DCL MEMNAM CHAR(8);
         MEMNAM=SYMC('&CMDNAM');
         DCL SYSCLOS ENTRY;
         DCL DENTPI ENTRY;
         DCL DENTPIB ENTRY(PTR,CHAR(8),ENTRY)
           RETURNS(FIXED BIN(15,0));
         DCL TPTR PTR;
         DCL 1 HDR,
           2 NXTHDR PTR,
           2 LSTHDR PTR,
           2 HDSEQ FIXED BIN(31,0) INIT(0);
         DCL 1 MEMREC UNALIGNED BASED(RPTR),
           2 NXTPTR PTR,
           2 LSTPTR PTR,
           2 RECSEQ FIXED BIN(31,0),
           2 RECSTR CHAR(256) VAR;
         DCL (KEY,LABI) FIXED BIN(31,0) INIT(0);
         DCL 1 LABTAB(256),
           2 $KEY FIXED BIN(31,0),
           2 $LAB CHAR(8);
         NXTHDR,LSTHDR = ADDR(HDR);
         RPTR = ADDR(HDR);
         DCBPTR=NULL;
         I=DENTPIB(DCBPTR,MEMNAM,ALCEP);
         SELECT(I);
           WHEN(0) DO;
             CALL SYSCLOS(DCBPTR);
             RPTR = NXTHDR;
             CALL DENTPI(GET,TERMWRT,DOPRM,DOCMD,REP@,SET@,STAK,
               KEY,LABI,LABTAB);
             END;
           WHEN(4) @WRITE('AID FOR &CMDNAM NOT FOUND');
           OTHERWISE @WRITE('SYSAID FILE INVALID OR MISSING');
           END;
 ALCEP:  PROC(INREC);
         DCL INREC CHAR(256) VAR;
         ALLOCATE MEMREC SET(TPTR);
         NXTPTR = TPTR;
         TPTR->LSTPTR = RPTR;
         RPTR = TPTR;
         NXTPTR = ADDR(HDR);
         RECSEQ = LSTPTR->RECSEQ+1;
         RECSTR = INREC;
         END ALCEP;
 GET:  PROC(KEY,TXT);
         DCL KEY FIXED BIN(31,0);
         DCL TXT CHAR(*) VAR;
         IF KEY^=RECSEQ
           THEN IF KEY < RECSEQ
             THEN DO RPTR=LSTPTR REPEAT LSTPTR
               WHILE(RPTR^=ADDR(HDR))
               UNTIL(RECSEQ=KEY);
               END;
             ELSE DO RPTR=NXTPTR REPEAT NXTPTR
               WHILE(RPTR^=ADDR(HDR))
               UNTIL(RECSEQ=KEY);
               END;
         IF RPTR=ADDR(HDR)
           THEN TXT='';
           ELSE TXT=RECSTR;
         END GET;
 DOCMD:  PROC(CMD,HELP);
         DCL HELP CHAR(4) VAR;
         DCL CMD CHAR(240) VAR;
         @SETL(&SYSCMD=CMD);
         IF HELP = 'HELP'
              THEN DO;
                   @CMD('&SYSCMD',,,HELP);
                   END;
              ELSE DO;
                   @CMD('&SYSCMD');
                   END;
         END DOCMD;
 DOPRM:  PROC(PRMPT,INP);
         DCL PRMPT CHAR(80) VAR;
         DCL INP CHAR(240) VAR;
         @WRITE(PRMPT,MF=S);
         CALL GETLINE(CPPLUPT,CPPLECT,PCECB,IKJRET,INPTR@,'TERM');
         IF IKJRET>4 THEN SIGNAL ERROR;
         INP=SUBSTR(INSTR@,1,INLEN@-4);
         RETURN;
         END DOPRM;
 TERMWRT:  PROC(TMSG);
         DCL TMSG CHAR(*) VAR;
         @WRITE(TMSG,MF=S);
         END TERMWRT;
 STAK: PROC(CMD);
         DCL CMD CHAR(*) VAR;
         DCL SP FIXED BIN(15,0) INIT(78);
         DCL (STACK,SYSGETM) ENTRY;
         DCL RETCODE FIXED BIN(31,0);
         DCL 1 STOR78 UNALIGNED BASED(PTR78),
           2 LSDADATA PTR,
           2 LSDRCLEN FIXED BIN(15,0),
           2 LSDTOTLN FIXED BIN(15,0),
           2 LSDANEXT PTR,
           2 LSDRSVRD FIXED BIN(31,0),
           2 STARTLIST FIXED BIN(31,0);
         DCL 1 LISTEL UNALIGNED BASED(LELPTR),
           2 LELLEN FIXED BIN(15,0),
           2 LELCMD CHAR(256) VAR;
         DCL 1 LISTEL2 UNALIGNED BASED(LELPTR),
           2 LELPAD FIXED BIN(15,0),
           2 LELZRO FIXED BIN(15,0);
         LV=LENGTH(CMD)+20;
         CALL SYSGETM('EU',LV,PTR78,SP,RETCODE);
         IF RETCODE^=0
           THEN SIGNAL ERROR;
         LSDADATA,LSDANEXT,LELPTR=ADDR(STARTLIST);
         LSDRCLEN=0;
         LSDTOTLN=LENGTH(CMD)+4;
         LSDRSVRD=0;
         LELCMD=CMD;
         LELLEN=LENGTH(CMD)+4;
         LELZRO=0;
         CALL STACK(CPPLUPT,CPPLECT,IOECB,RETCODE,'PROCN',PTR78);
         END STAK;
         END;
