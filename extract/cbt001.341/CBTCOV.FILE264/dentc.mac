 /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
 /*DENTC*/
 DENTC:  PROC(RHPTR,SUBENT,RHHDRPT)
            RECURSIVE RETURNS(CHAR(1024) VAR) OPTIONS(REENTRANT);
         % DCL @PROCNAME CHAR;
         % @PROCNAME = '';
         % INCLUDE DENTSUB;
         % INCLUDE DENTPNL;
         % INCLUDE @HEXCHAR;
         DCL MIN BUILTIN;
         DCL PROMPT CHAR(80) VAR;
         DCL CMDDATA CHAR(240) VAR;
         DCL (ASW,BSW,PFK24) BIT(1);
         DCL (SAVPTR,DELPTR,SUPPTR) PTR;
         DCL SEQBL CHAR(8),
             SEQPIC PIC'(8)9' DEF SEQBL;
              /* MAXIMUM SEQUENCE FIELD LENGTH IS 8 BYTES */
         DCL 1 SKEL BASED(SKELPTR),
           2 SKNXT PTR,
           2 STC FIXED BIN(15,0),
           2 ENC FIXED BIN(15,0);
         DCL (DENTHX,DENTCIN) ENTRY;
         DCL DENTUD ENTRY(PTR,PTR,,FIXED BIN(15,0))
           RETURNS(CHAR(256) VAR);
         DCL DENTUDB ENTRY(PTR,PTR,,FIXED BIN(15,0),CHAR(*) VAR);
         DCL (PREFIX,SUFFIX) ENTRY(CHAR(*),CHAR(*))
           RETURNS(FIXED BIN(15,0));
         DCL STFSMOD ENTRY(CHAR(*),CHAR(*),FIXED BIN(15,0))
           RETURNS(FIXED BIN(15,0));
         DCL DENTCPR ENTRY(PTR,,PTR,CHAR(*) VAR);
         DCL DENTDSN ENTRY;
         DCL DENTDT ENTRY;
         DCL DENTCS ENTRY RETURNS(BIT(1));
         DCL DENTPFK ENTRY;
         DCL DENTCP ENTRY(CHAR(*) VAR);
         DCL SETCAPS ENTRY;
         DCL CAPSW BIT(1);
         DCL TRET FIXED BIN(31,0);
         DCL FSW BIT(1);
         DCL SCANPTR PTR;
         DCL (TRIN,TROUT) ENTRY;
         DCL (ALTSW,BIGALTSW) BIT(1);
         DCL DENTCD ENTRY;
         DCL VSUBSTR ENTRY(CHAR(*) VAR, FIXED BIN(15,0),
           FIXED BIN(15,0), CHAR(*));
         DCL 1 BLSTR BASED(BLPTR),
              2 NBLPTR PTR,
              2 BLCMDLEN FIXED BIN(15,0),
              2 BLCMD CHAR(L REFER(BLCMDLEN)) VAR;
         DCL BLTCMD CHAR(1024) VAR;
         DCL (DCBPTR,DUMPTR) PTR;
 MAINLINE:
         DO RHPTR=NXTRHEL REPEAT RHNXT WHILE(RHPTR^=NULL);
           IF BLHDR ^= NULL
             THEN DO;
               BLPTR = BLHDR;
               BLTCMD = BLCMD;
               BLHDR = NBLPTR;
               FREE BLSTR;
               RETURN(BLTCMD);
               END;
           END;
         RHPTR = NXTRHEL;
         IF RHFAMDS
           THEN DO;
             DUMPTR=RHFAMEP(RHHDRPT,RHPTR,SUBENT,DUMPTR,5);
             CALL #DENTCP(RHPTR,SUBENT,RHHDRPT,CMDDATA);
             DO RHPTR=NXTRHEL REPEAT RHNXT WHILE(RHPTR^=NULL);
               IF BLHDR^=NULL
                 THEN GO TO MAINLINE;
               END;
             RHPTR=NXTRHEL;
             RETURN('');
             END;
         IF HARDCOPY
           THEN DO;
             IF MSGDATA^=''
               THEN DO;
                 CALL #TERM(MSGDATA); /* CALL TERMWRT */
                 MSGDATA='';
                 END;
             CALL DENTCPR(RHPTR,SUBENT,RHHDRPT,'+');
             DO RHPTR=NXTRHEL REPEAT RHNXT WHILE(RHPTR^=NULL);
               IF BLHDR^=NULL
                 THEN GO TO MAINLINE;
               END;
             RHPTR=NXTRHEL;
             RETURN('');
             END;
         IF ^STFSMODE & ^HARDCOPY
           THEN DO;
             J=STFSMOD('ON','INITIAL=YES',0);
             STFSMODE='1'B;
             CURPNL=0;
             END;
         RHPHEX=NXTRHEL->HEXMODE;
         CALL #COLTR(RHPPTR,SUBENT);
         @CURPNL=CURPNL;
         CURPNL,@NXTPNL = NXTPNL;
         @CHGCURS = CURSBASE;
         PNLPTR = RHPSTAPT;
         DYNPTR = RHPDYNPT;
         OUTFLAG(TABNUM)='1'B;
         SUBSTR(CMDSPTR->FLAGS,9,1)=^LOFLAG;
              /* INDICATE WHETHER COMMAND FIELD S/B
                 TRANSLATED TO UPPER CASE. */
         IF MSGDATA ^= ''
           THEN DO;
             MSGPTR->DATA=MSGDATA;
             MSGDATA='';
             END;
           ELSE IF TERMFLAG
             THEN IF CMODEFLAG
               THEN MSGPTR->DATA='CMODE';
               ELSE MSGPTR->DATA='EMODE';
             ELSE MSGPTR->DATA='';
 /* FOLLOWING FOR DEBUGGING PURPOSES */
 IF RHTRANSW
  THEN MSGPTR->DATA=MSGPTR->DATA××' TRANSLATED';
         IF CMDDISPLAY ^= ''
           THEN CMDOPTR->DATA = CMDDISPLAY;
           ELSE IF SCANFLAG
             THEN CMDOPTR->DATA=PFPB;
             ELSE CMDOPTR->DATA='';
         OUTFLAG(MSGNUM)='1'B;
         SCANPTR = RECPTR;
         SFLDPTR = INPTR;
           /* SFLDPTR POINTS AT 1ST RECORD SEQ DISPLAY FLD */
         IF SCANFLAG & (RECPTR->LSTPTR = HDPTR)
           THEN DO;
             PFPB = 'PF';
             IF CMDDISPLAY=''
               THEN CMDOPTR->DATA=PFPB;
             END;
         CALL DENTDSN(RHPTR,RHHDRPT,CMDOPTR->DATA,CMDOPTR->LEN);
         IF @NXTPNL = 1
           THEN J = 2;
           ELSE J = 1;
         DATACNT=0; /* COUNT OF RECORDS DISPLAYED */
         ID1: DO I = 1 TO INCNT-1;
          IL = (I+1)/2; /* IL = RECORD ARE DISPLAY LINE */
          IF IL>RHCEN
           THEN ID2: DO;
             ID3: DO RHPTR=RHNXT REPEAT RHNXT WHILE(IL>RHCEN);
               END ID3;
             DATACNT=0;
             SCANPTR = RECPTR;
             END ID2;
          ID4:DO M = 1 TO J;/*LOOP 1 FOR SEQ FLD. LOOP 2 FOR DATA FLD.*/
           DFLDPTR = DYNPTR;
           DFLDADJ = DFLDADJ + DOUTOF + OUTOFF;
           IF M = 1
             THEN ID5: DO; /* PROCESS SEQUENCE DISPLAY */
               SELECT;
                 WHEN(IL^=1 & IL=RHCST)
                   SEQBL='=======>';
                 WHEN(RHUSEHD^=NULL &
                   ((RHCST=1 & IL=1) × (RHCST^=1 & IL=RHCST+1)))
                   SEQBL='     DBD';
                 OTHERWISE ID6: DO;
                   IF SCANFLAG
                     THEN ID7: DO;
                       IF SCANPTR^=HDPTR
                         THEN ID8: DO;
                           SEQPIC = SCANPTR->RECSEQ;
                           IF SCANPTR->NXTPTR = HDPTR
                             THEN N = RECSEQ;
                           END ID8;
                         ELSE ID9: DO;
                             SEQBL = '';
                             IF RHPTR=NXTRHEL
                               THEN ID10: DO;
                                 PFPB = 'PB';
                                 IF CMDDISPLAY = ''
                                   THEN SUBSTR(CMDOPTR->DATA,1,2)=PFPB;
                                 END ID10;
                             END ID9;
                       END ID7;
                     ELSE ID11: DO;
                       N = I/2;
                       N = CURSEQ + N;
                       N = N + 1;
                       SEQPIC = N;
                       END ID11;
                   END ID6;
                 END; /* SELECT */
               DATA = SUBSTR(SEQBL,9-RHPMAXLN);
               OUTFLAG(FLDNUM) = '1'B; /* FORCE WRITE */
               IF ^SCANFLAG
                 THEN SUBSTR(FLAGS,3,2)='11'B;/*PROTECT FIELD*/
                 ELSE SUBSTR(FLAGS,3,2)='00'B;/*UNPROTECT FLD*/
               I = I + 1;
               END ID5;
             ELSE IF ^SUBSTR(FLAGS,3,1) /*UNPROTECTED?*/
               THEN ID12: DO; /* PROCESS DATA LINE DISPLAY */
               /*SUBSTR(FLAGS,5,2)='10'B;*/
                   /* TEMP TO HIGH INTENSIFY */
                 IF ^SCANFLAG
                   THEN DATA = '';
                   ELSE ASGN: DO;
                     SELECT;
                       WHEN(IL^=1 & IL=RHCST) DO;
                         DATA=MSGDATA;
                         MSGDATA = '';
                         IF CMDDISPLAY^=''
                           THEN DATA=CMDDISPLAY;
                         CALL DENTDSN(RHPTR,RHHDRPT,DATA,LEN);
                         END;
                       WHEN(RHUSEHD^=NULL &
                         ((RHCST=1 & IL=1) × (RHCST^=1 & IL=RHCST+1)))
                         DATA=DENTUD(RHPTR,RHHDRPT,SUBENT,COLUMN);
                       OTHERWISE ID13: DO;
                         IF SCANPTR=HDPTR
                           THEN DO;
                             DATA='';
                             LEAVE ASGN;
                             END;
                         S=0;
                         ID13A:DO SCANPTR=SCANPTR REPEAT SCANPTR->NXTPTR
                           WHILE(SCANPTR^=HDPTR);
                           IF ^SUBSTR(SCANPTR->RECFLGS,2,1)
                             THEN LEAVE;
                           S=S+1;
                           END ID13A;
                         IF S>0
                           THEN PUT STRING(DATA) EDIT(
                             '------LINES SUPPRESSED = ',S)(A,P'ZZ9');
                           ELSE IF HEXMODE
                             THEN HEXDO: DO;
                               DATACNT=DATACNT+1;
                               IF MOD(DATACNT,2)=0
                                 THEN DO; /* HEX LINE */
                                   CALL DENTHX('HEX',SCANPTR,DATA,RHPTR,
                                     SUBENT,RHHDRPT);
                                   SCANPTR=SCANPTR->NXTPTR;
                                   END;
                                 ELSE DO; /* DEC LINE */
                                   CALL DENTHX('DEC',SCANPTR,DATA,RHPTR,
                                     SUBENT,RHHDRPT);
                                   CALL #DENTTR(DATA);
                                     /* CALL DENTTR */
                                   END;
                               END HEXDO;
                             ELSE ID13B:DO;
                               L=LENGTH(SCANPTR->RECSTR);
                               DATA='';
                               IF RHPSKHD=NULL
                                 THEN IF COLUMN<=L
                                   THEN DATA=SUBSTR(SCANPTR->RECSTR,
                                     COLUMN,MIN(L-COLUMN,TRUNCATE-
                                     COLUMN)+1);
                                   ELSE;
                                 ELSE DO SKELPTR=RHPSKHD REPEAT SKNXT
                                   WHILE(SKELPTR^=NULL) UNTIL(ENC>=L);
                                   IF STC<=L
                                     THEN DATA=DATA××SUBSTR(SCANPTR->
                                     RECSTR,STC,MIN(L-STC,ENC-STC)+1);
                                   END;
                               DATA=SUBSTR(DATA,1,SUFFIX(DATA,' '));
                               IF LENGTH(DATA)<RHPFILL
                                 THEN DATA=DATA××REPEAT(' ',RHPFILL-
                                   LENGTH(DATA)-1);
                               IF SUBSTR(SCANPTR->RECFLGS,3,1)
                                 THEN DO;
                                   SUBSTR(SCANPTR->RECFLGS,3,1)='0'B;
                                   N=SCANPTR->RECRES;
                                   SCANPTR->RECRES='0'B;
                                   N=MIN(N,LINESIZE-RHPMAXLN-2);
                                   IF LENGTH(DATA)<N
                                     THEN DATA=DATA××REPEAT(' ',N);
                                   @CHGCURS=FLDSBAB+1+N;
                                   END;
                               SCANPTR = SCANPTR->NXTPTR;
                               END ID13B;
                         END ID13;
                       END; /* SELECT */
                     END ASGN;
                 END ID12;
               SFLDADJ = SFLDADJ + FLDLEN;
               END ID4;
             END ID1;
         RHPTR = NXTRHEL;
         SUBSTR(@CALLFLGS,8,1)=RHPPRINT;
         IF RHVVTSW
           THEN CALL SUBENT(26)(@PNLCALL,RHHDRPT,SUBENT);/*DENTSCI*/
           ELSE CALL DENTCD(RHPPTR);
         IF SUBSTR(@CALLFLGS,1,1)
           THEN GO TO MAINLINE;
         CURLINE=@CURLOC/LINESIZE;
           /* CURLINE=RELATIVE SCREEN LINE # CONTAINING CURSOR */
         IF CURSMODE
           THEN IF @CURLOC>CMDSPTR->FLDSBAB &
             @CURLOC<=CMDSPTR->FLDSBAB+CMDOPTR->FIELD.LEN
             THEN CURSBASE=CMDSPTR->FLDSBAB+1;
             ELSE CURSBASE = @CURLOC;
         CURPNL = @CURPNL;
         NXTPNL = @NXTPNL;
         DFLDPTR=CMDPTR;
         IF DATA^=''
           THEN DO;
             K=INDEX(DATA,@HEXCHAR(6A));
             IF K^=0
               THEN DATA=SUBSTR(DATA,1,K-1);
             END;
         IF @AID='01001100'B
           THEN PFK24='1'B; /* PFK24 = ALTCASE SUBCOMMAND */
           ELSE DO;
             PFK24='0'B;
             IF @AID^='01111101'B /* 7D=ENTER KEY */
               THEN CALL DENTPFK(RHPTR,SUBENT,RHHDRPT,@AID,DATA);
             IF DATA^=''
               THEN IF SUBSTR(DATA,1,1)=' '
                 THEN DATA=''; /* CMDDATA CONTAINED PFK PARMS */
             END;
         IF DATA^=''
           THEN CALL DENTCPR(RHPTR,SUBENT,RHHDRPT,DATA);
             /* GO PROCESS COMMAND LINE */
         CURSOR_SEQ=0;
         CMDOPTR->DATA='';
         SFLDPTR = INPTR;
         SAVPTR = RECPTR;
         BIGALTSW = '0'B;
         FSW = '1'B;
         DATACNT=1; /* 0=CMD LINE, 1=DEC LINE, 2=HEX LINE */
 INLUP:  DO IL=1 REPEAT IL+1 UNTIL(FLDNUM=FLDCNT);
           ALTSW = '0'B;
           BUF='';
           IF IL>RHCEN
             THEN DO2: DO;
               DO3: DO RHPTR=RHNXT REPEAT RHNXT WHILE(IL>RHCEN);
                 END DO3;
               CURSOR_SEQ=0;
               SAVPTR=RECPTR;
               DELIND,SUPIND=0;
               DATACNT=0;
               FSW = '1'B;
               END DO2;
           DO4: DO WHILE(SUBSTR(FLAGS,3,1));/*DO WHILE PROTECTED*/
             IF FLDNUM = FLDCNT
               THEN LEAVE INLUP;
             SFLDADJ = SFLDADJ + FLDLEN;
             END DO4;
   DELCK:  DO;
             IF ^SCANFLAG
               THEN CAPSW=LOFLAG;
               ELSE DO5: DO;
                 DFLDPTR=DYNPTR; /*POINT TO SEQ FIELD*/
                 DFLDADJ=DFLDADJ+DINOF+INOFF;
                 SAVLINE=FLDSBAB/LINESIZE; /* SAVELINE = RELATIVE
                   SCREEN LINE # CONTAINING THIS LINE OF DATA */
                 SFLDADJ=SFLDADJ+FLDLEN; /*SKIP OVER SEQ FLD -
                   SFLDPTR NOW POINTS AT NEXT RECORD
                   FIELD OF DISPLAY, ALTHOUGH DFLDPTR
                   STILL POINTS AT INPUT DATA FROM CURRENT
                   SEQUENCE FIELD. */
                 CAPSW=LOFLAG;
                 CAPSW=BOOL(LOFLAG,PFK24,'0110'B);
                 IF DATA ^= '' &
                   ^(IL^=1 & IL=RHCST) &
                   ^(RHUSEHD^=NULL &
                     ((RHCST=1 & IL=1) × (RHCST^=1 & IL=RHCST+1)))
                   THEN  BIGALTSW = DENTCS(RHPTR,SUBENT,RHHDRPT,
                     SAVPTR,DATA,FSW,CAPSW);
                 END DO5;
               DFLDPTR = DYNPTR;
               DFLDADJ = DFLDADJ + DINOF + INOFF;
                 /* DLFDPTR NOW POINTS AT INPUT DATA FOR CURRENT
                    RECORD FIELD OF DISPLAY */
               TLEN = SCANLEN;
               IF DATA ^= ''
                 THEN DO13: DO;
                   ALTSW = '1'B;
                   IF ^CAPSW
                     THEN CALL SETCAPS(DATA);
                   SELECT;
                     WHEN(IL^=1 & IL=RHCST) DO;
                       CALL DENTCPR(RHPTR,SUBENT,RHHDRPT,DATA);
                         /* GO PROCESS COMMAND LINE */
                       IF CURSMODE
                         THEN IF @CURLOC>FLDSBAB & @CURLOC<=FLDSBAB+LEN
                           THEN CURSBASE=FLDSBAB+1;
                       END;
                     WHEN(RHUSEHD^=NULL &
                       ((RHCST=1 & IL=1) × (RHCST^=1 & IL=RHCST+1)))
                       CALL DENTUDB(RHPTR,RHPPTR,SUBENT,COLUMN,DATA);
                     OTHERWISE DO16: DO;
                       IF TABK^=''
                         THEN CALL DENTDT(RHPPTR,DATA);
                           /* GO DO LOGICAL TABBING */
                       BUF='';
                       IF ^SCANFLAG
                         THEN CALL DENTCIN(BUF,DATA,RHPTR,SUBENT,
                           RHHDRPT);
                         ELSE DO;
                           IF HEXMODE
                             THEN DO;
                               J=LENGTH(DATA)/2;
                               IF DATACNT=2
                                 THEN DO;  /* HEX LINE */
                                   BUF=REPEAT(' ',J-1);
                                   CALL TRIN(DATA,BUF);
                                   END;
                                 ELSE DO; /* DEC LINE */
                                   J=J+MOD(LENGTH(DATA),2);
                                   BUF='';
                                   K=LENGTH(DATA);
                                   DO I=1 TO K BY 2;
                                     BUF=BUF××SUBSTR(DATA,I,1);
                                     END;
                                   END;
                               DATA=SUBSTR(BUF,1,J);
                               END;
                           IF SAVPTR=HDPTR
                             THEN CALL DENTCIN(BUF,DATA,RHPTR,SUBENT,
                               RHHDRPT);
                             ELSE IF ^SUBSTR(SAVPTR->RECFLGS,2,1)
                               THEN CALL DENTCIN(SAVPTR->RECSTR,
                                 DATA,RHPTR,SUBENT,RHHDRPT);
                               ELSE ALTSW = '0'B;
                           END;
                       END DO16;
                     END; /* SELECT */
                   END DO13;
                 END DELCK;
              IF FLDNUM ^= FLDCNT
                THEN SFLDADJ = SFLDADJ + FLDLEN;
                   /* SFLDPTR SHOULD NOW POINT TO NEXT SEQUENCE
                      DISPLAY FIELD */
            IF ALTSW
              THEN DO17: DO;
                BIGALTSW = '1'B;
                IF ^(IL^=1 & IL=RHCST) &
                   ^(RHUSEHD^=NULL &
                   ((RHCST=1 & IL=1) × (RHCST^=1 & IL=RHCST+1)))
                  THEN DO17A: DO;
                    SAVEFLAG='1'B; /*INDICATE SAVE NEEDS TO BE DONE*/
                      /*SET SEQUENCE FIELD HERE */
                    IF ^SCANFLAG /*INSERT MODE?*/
                      THEN DO18: DO;
                        SEQ = -1;
                        CALL #ADD(RHPTR,SUBENT,SAVPTR,
                          SAVPTR,SEQ,BUF,RHPPTR);
                          /* CALL ADDREC */
                        CALL #NC(RHPTR,SUBENT,SAVPTR);
                          /* CALL NEWCUR */
                        END DO18;
                      ELSE IF SAVPTR = HDPTR
                        THEN DO19: DO;
                          SEQ = -1;
                          CALL #ADD(RHPTR,SUBENT,
                            LSTHDR,SAVPTR,SEQ,
                            BUF,RHPPTR);
                            /* CALL ADDREC */
                          IF LSTHDR=NXTHDR /* IS IT ONLY RECORD? */
                            THEN CALL #NC(RHPTR,SUBENT,NXTHDR);
                          END DO19;
                    END DO17A;
                  END DO17;
              IF SCANFLAG
                THEN IF SAVPTR^=HDPTR &
                  ^(IL^=1 & IL=RHCST) &
                  ^(RHUSEHD^=NULL &
                   ((RHCST=1 & IL=1) × (RHCST^=1 & IL=RHCST+1)))
                  THEN DO;
                    IF CURLINE=SAVLINE
                      THEN CURSOR_SEQ=SAVPTR->RECSEQ;
                        /* CURSOR IS ON THIS DATA LINE */
                    ASW=SUBSTR(SAVPTR->RECFLGS,2,1); /* ASW IS SET
                      ON IF CURRENT LINE IS SUPPRESSED.  THIS SHOULD
                      ONLY OCCUR IF THE TOP LINE OF A DISPLAY AREA
                      IS SUPPRESSED. */
                    BSW='0'B;
                    IF ASW × ^HEXMODE × (HEXMODE & (DATACNT^=1))
                      THEN DO;
                        DATACNT=1;
                        DO SAVPTR=SAVPTR->NXTPTR REPEAT SAVPTR->NXTPTR
                          WHILE(SAVPTR^=HDPTR)
                          UNTIL(^SUBSTR(SAVPTR->RECFLGS,2,1));
                          IF SUBSTR(SAVPTR->RECFLGS,2,1)
                            THEN DO;
                              BSW='1'B;
                              SUPPTR=SAVPTR;
                              END;
                          END;
                        END;
                      ELSE DATACNT=2;
                    IF ^ASW & BSW
                      THEN DO;
                        /* NOW SKIP OVER SUPPRESSED LINES MESSAGE */
                        DO ILX=1 TO 2 WHILE(FLDNUM^=FLDCNT);
                          IF ILX=1 /* IT MUST BE SEQ FLD */
                            THEN DO;
                              DFLDPTR=DYNPTR; /*POINT TO SEQ FIELD*/
                              DFLDADJ=DFLDADJ+DINOF+INOFF;
                              IF DATA^=''
                                THEN BIGALTSW=DENTCS(RHPTR,SUBENT,
                                  RHHDRPT,SUPPTR,DATA,FSW,CAPSW);
                              END;
                          SFLDADJ=SFLDADJ+FLDLEN;
                          END;
                        IL=IL+1;
                        END;
                    END;
              END INLUP;
         DO RHPTR=NXTRHEL REPEAT RHNXT WHILE(RHPTR^=NULL);
           IF BLHDR^=NULL
             THEN GO TO MAINLINE;
           END;
         RHPTR = NXTRHEL;
         IF SCANFLAG & ^BIGALTSW & ^CMODEFLAG
           THEN RETURN(PFPB);
           ELSE DO;
             IF CMODEFLAG
               THEN RHTYNSW='1'B;
             GO TO MAINLINE;
             END;
         END DENTC;
