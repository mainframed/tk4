 /* @PLOT */
 %NOPRINT;
         % DCL @PLOT ENTRY;
 % @PLOT:  PROC(P1,P2,P3,P4,P5,P6) STATEMENT RETURNS(CHAR);
 /*
0*$.HE GENERALIZED SUBROUTINES - @PLOT
0*$.HE PLI PREPROCESSOR TEXT
0*$.PL 55
0*$.PN 0
0*$.PA
0*$.SS
0*$.NF
0*$02/05/78
0*$AUTHOR:  T. SMITH
0*$SOURCE MODULE NAME:  @PLOT
0*$DOCUMENTATION ID:  0*$
0*$.FI L
0*$.SP 5
0*$THIS PL/I PREPROCESSOR PROCEDURE IS PART OF A SYSTEM TO EXTRACT
0*$PERFORMANCE AND WORKLOAD DATA FROM THE SMF RECORDS TO BE WRITTEN
0*$TO A DATA BASE IN A STANDARD FORMAT, WHICH IS DESCRIBED BELOW:
0*$.SP 1
0*$.IN 5
0*$.NF
0*$DCL 1 DBREC,
0*$     2 ARRAY(0:23) FIXED BIN(31,0),
0*$       ** 24-HOUR ARRAY -
0*$          1 BUCKET FOR EACH HOUR
0*$          OF THE DAY. **
0*$     2 INDX FIXED BIN(15,0),
0*$       ** NUMBER WHICH UNIQUELY
0*$          IDENTIFIES THIS
0*$          STATISTIC. **
0*$     2 DATE FIXED DEC(5,0),
0*$       ** DATE **
0*$     2 HDR CHAR(78) VAR;
0*$       ** DESCRIPTION OF DATA
0*$          IN THIS RECORD **
0*$.SP 1
0*$.IN 0
0*$.FI L
0*$THE ADVANTAGES OF SUCH A DATA BASE COMPARED TO THE RAW SMF DATA
0*$ARE THAT (1) A COMMON TIME INTERVAL ALLOWS EASY COMPARISON OF
0*$ONE STATISTIC WITH ANOTHER, AND (2) SINCE ALL DATA SHARES A COMMON
0*$FORMAT, A GIVEN ANALYSIS ROUTINE CAN BE APPLIED TO ALL STATISTICS
0*$IN THE DATA BASE WITHOUT PRIOR ADJUSTMENTS TO THE FORMAT,
0*$AND (3) CONDENSATION OF DATA MAKES IT LESS EXPENSIVE TO
0*$SUBSEQUENTLY PROCESS.
0*$.SP 1
0*$TO ADD A NEW STATISTIC TO THE DATA BASE,
0*$IN ESSENCE, YOU BUILD A SMALL PL/I PROGRAM TO CREATE THE ABOVE
0*$RECORD.  IN THIS PROGRAM, YOU ISSUE THE @PLOT MACRO TO DEFINE
0*$THE NEW RECORD.  THE PROGRAM WORKS BY TAKING THE SMF RECORDS OF
0*$THE APPROPRIATE TYPE (SMF RECORD TYPES TO BE USED ARE SPECIFIED IN
0*$THE @TYPE MACRO.  SEE DOCUMENTATION ELSEWHERE), AND PRORATING THE
0*$DATA FOR THE INTERVAL COVERED BY THE SMF RECORD INTO THE INTEGRAL
0*$HOUR PERIODS COVERED IN THE 24-HOUR ARRAY OF THE DATA-BASE RECORD.
0*$IN THE FOLLOWING DESCRIPTION OF THE @PLOT MACRO,
0*$REFERENCE WILL FREQUENTLY BE MADE TO THE CURRENT TIME INTERVAL.
0*$THIS IS THE INTERVAL OF TIME COVERED BY THE
0*$SMF RECORD CURRENTLY BEING PROCESSED.
0*$.SP 1
0*$FORMAT FOR THE @PLOT MACRO IS AS FOLLOWS:
0*$.SP 1
0*$.IN 5
0*$@PLOT(P1,P2,P3,P4,P5,P6);
0*$.IN 0
0*$.SP 1
0*$WHERE:
0*$.HI 2
0*$.IN 5
0*$P1 IS A NUMBER WHICH UNIQUELY IDENTIFIES THIS STATISTIC.  USE THE
0*$PLOTREQ COMMAND TO OBTAIN A NEW NUMBER FOR EACH NEW STATISTIC.
0*$THIS NUMBER WILL BE STORED IN THE INDX FIELD OF THE GENERATED RECORD,
0*$AND WILL ALSO BE USED TO GENERATE THE LEVEL-1 NAME OF THE GENERATED
0*$RECORD.  THIS LEVEL-1 NAME WILL BE IN THE FORMAT "DBRECN" WHERE N
0*$IS THE NUMBER SPECIFIED IN PARAMETER P1.
0*$.SP 1
0*$P2 IS A CHARACTER STRING IN APOSTROPHES, 78 CHARACTERS OR LESS,
0*$WHICH DESCRIBES THE DATA TO BE EXTRACTED.  THIS STRING WILL BE
0*$STORED IN THE HDR FIELD OF THE GENERATED RECORD.
0*$.SP 1
0*$P3 IS EITHER A CONSTANT OR THE NAME OF AN ARITHMETIC VARIABLE
0*$CONTAINING THE ITEM TO BE ACCUMULATED.  FOR EXAMPLE, IN
0*$@PLOT(6,'# TSO PERIOD 2 TRANSACTIONS',SMF72TTX), SMF72TTX IS THE
0*$VARIABLE THAT CONTAINS A COUNT OF THE TSO PERIOD 2 TRANSACTIONS
0*$IN THE CURRENT INTERVAL.
0*$.SP 1
0*$P4, IF SPECIFIED, IS ONE OF THE WORDS AVERAGE (OR AVE), COUNT
0*$(OR COU), OR PRORATE (OR PRO).  THIS PARAMETER SPECIFIES THE
0*$TYPE OF NUMBER THAT IS SPECIFIED IN PARAMETER P3.  IF OMITTED,
0*$AND P3 IS THE CONSTANT 1, THE DEFAULT IS COUNT.  OTHERWISE,
0*$THE DEFAULT IS PRORATED.
0*$.IN 10
0*$.SP 1
0*$IF PRORATE IS SPECIFIED, OR PARAMETER P4 IS OMITTED
0*$AND PARAMETER P3 IS NOT THE CONSTANT 1, PARAMETER P3
0*$CONTAINS A TOTAL COUNT FOR THE CURRENT INTERVAL.  IF THE CURRENT
0*$INTERVAL OVERLAPS TWO OR MORE INTEGRAL HOURS, THE COUNT
0*$WILL BE PRORATED.  OTHERWISE, THE ENTIRE COUNT IS ADDED
0*$TO THE APPROPRIATE 24-HOUR ARRAY BUCKET.
0*$FOR EXAMPLE @PLOT(6,'#TSO PERIOD 2 TRANSACTIONS',SMF72TTX) INDICATES
0*$THAT SMF72TTX CONTAINS A TOTAL COUNT OF THE TSO PERIOD 2 TRANSACTIONS
0*$DURING THE CURRENT INTERVAL.
0*$.SP 1
0*$COUNT INDICATES THAT P3 IS A COUNT FOR THIS PARTICULAR
0*$INSTANT IN TIME.  THE ENTIRE COUNT WILL BE ADDED TO THE 24-HOUR
0*$ARRAY BUCKET FOR THE CURRENT INTERVAL START TIME.
0*$.SP 1
0*$AVERAGE INDICATES THAT THE VALUE IN PARAMETER P3 IS AN AVERAGE
0*$VALUE OVER THE CURRENT INTERVAL.  AS EACH SMF RECORD IS ENCOUNTERED,
0*$THE PROGRAM WILL ADD TO THE APPROPRIATE ELEMENTS IN THE 24-HOUR
0*$ARRAY, THE AVERAGE (PARAMETER P3) TIMES THE NUMBER OF MINUTES IN
0*$THAT HOUR AT THAT AVERAGE.  AT EOJ, EACH ELEMENT IN THE 24-HOUR
0*$ARRAY WILL BE DIVIDED BY 60, GIVING THE AVERAGE FOR THAT HOUR.
0*$.IN 5
0*$.SP 1
0*$P5 IS OPTIONAL, AND IS USED TO INDICATE THE NAME OF A VARIABLE
0*$CONTAINING THE START TIME (IN .01 SECONDS) OF THE CURRENT INTERVAL.
0*$IF P5 ISN''T SPECIFIED, THE START TIME WILL BE CALCULATED BASED
0*$ON THE SMF RECORD TYPE.  FOR THE RMF RECORD TYPES (70-79), THE
0*$RMF MEASUREMENT INTERVAL START TIME IS USED (SMF70IST FIELD, FOR
0*$EXAMPLE).  FOR ALL OTHER SMF RECORDS, THE TIME AT WHICH THE SMF
0*$RECORD WAS WRITTEN IS TAKEN AS THE INTERVAL START TIME.  YOU MUST
0*$SPECIFY A VALUE FOR PARAMETER P4 IF YOU WISH TO SPECIFY A VALUE
0*$FOR PARAMETER P5.
0*$.SP 1
0*$P6 IS ALSO OPTIONAL, AND IS USED TO INDICATE THE NAME OF A VARIABLE
0*$CONTAINING THE LENGTH OR DURATION (IN .01 SECONDS) OF THE CURRENT
0*$INTERVAL.  IF P6 ISN'T SPECIFIED, THE INTERVAL DURATION IS
0*$CALCULATED BASED ON THE SMF RECORD TYPE.  FOR THE RMF RECORD TYPES
0*$(70-79), THE RMF MEASUREMENT INTERVAL DURATION IS USED
0*$(SMF70INT, FOR EXAMPLE).  FOR ALL OTHER SMF RECORDS, THE INTERVAL
0*$DURATION IS CONSIDERED TO BE 0, OR INSTANTANEOUS.  PARAMETERS
0*$P4 AND P5 MUST BE SPECIFIED IF P6 IS TO BE SPECIFIED.
 */
         DCL (P1,P2,P3,P4,P5,P6) CHAR;
         IF P4^='AVE' & P4^='PRO' & P4^='COU'
           THEN IF P4 = 'AVERAGE'
              THEN P4 = 'AVE';
              ELSE IF P4 = 'COUNT'
                   THEN P4 = 'COU';
                   ELSE IF P4 = 'PRORATE'
                        THEN P4 = 'PRO';
                        ELSE IF P4 ^= ''
                             THEN RETURN('ERROR IN PARAMETER #4');
                             ELSE IF P3 = '1'
                                  THEN P4 = 'COU';
                                  ELSE P4 = 'PRO';
         IF P5 = ''
              THEN DO;
                   P5 = -1;
                   P6 = 0;
                   END;
         @DCLSTR=@DCLSTR××'DCL 1 DBREC'××P1××' STATIC UNALIGNED, '××
           '2 ARRAY(0:23) FIXED BIN(31,0) INIT((24)0), '××
           '2 INDX FIXED BIN(15,0) INIT('××P1××
           '), 2 DTE FIXED DEC(5,0) INIT(0), '××
           '2 HDR CHAR(78) VAR INIT('××P2××
           '), 2 PROTYPE CHAR(3) INIT('''××P4××''''××
           '), 2 @PTR PTR;';
         @SETPT=@SETPT××@CURDB××'.@PTR=ADDR(DBREC'××P1××
           ');  DBREC'××P1××'.@PTR=NULL;';
         @CURDB='DBREC'××P1;
         RETURN('DO; CALL SETARY(ADDR(DBREC'××P1××'),'××P3××','××
           P5××','××P6××'); END;');
         % END @PLOT;
 % PRINT;
