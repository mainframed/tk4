   %INCLUDE ABESUB;
 ABESUB(ABEACFU) PARS(0) CHECK(YES);
   %INCLUDE ABESUBA;
 /**********************************************************************
 *                                                                     *
 * INVOKING THIS MODULE VIA THE ABE SUBCOMMAND "PGM ABEACFU USERID",   *
 * WHERE "USERID" IS ANY TSO USERID, WILL CAUSE THE MESSAGE AREA AND   *
 * SYMBOLIC VARIABLE ACFUID TO BE SET TO THE 18-CHARACTER ACF USERID.  *
 * IF THE USERID IS NOT FOUND, THE RETURN CODE WILL BE SET TO 4, AND   *
 * THE MESSAGE AREA WILL BE SET TO "NOT FOUND".                        *
 *                                                                     *
 **********************************************************************/

   DCL SETCAPS ENTRY;
   DCL INDSN CHAR(44) VAR INIT('''K.DA.ACF.BKLIDS''');
   DCL ALCODE CHAR(3) VAR INIT('IN');
   DCL RETDDN PTR;
   DCL EOFSW BIT(1) INIT('0'B);
   DCL INREC CHAR(5000) VAR;

   CALL #DOALC(INDSN,ALCODE,RETDDN,RHPTR,'');
   IF RETDDN=NULL
     THEN DO;
       MSGDATA='ERROR - UNABLE TO ALLOCATE FILE K.DA.ACF.BKLIDS';
       CALL #SETC(RHHDRPT,RH_SYMTREE,'ACFUID','');
       RHRC=8;
       RETURN;
       END;
   CALL SETCAPS(PARY(1));
   OPEN FILE(RH_SEQ_1) TITLE(RETDDN->ALCDDN) RECORD INPUT;
   ON ENDFILE(RH_SEQ_1) EOFSW='1'B;
   READ FILE(RH_SEQ_1) INTO(INREC);
   DO WHILE(^EOFSW);
     IF SUBSTR(INREC,1,8)=PARY(1)
       THEN LEAVE;
     READ FILE(RH_SEQ_1) INTO(INREC);
     END;
   IF ^EOFSW
     THEN DO;
       MSGDATA=SUBSTR(INREC,321,18);
       CALL #SETC(RHHDRPT,RH_SYMTREE,'ACFUID',MSGDATA);
       END;
     ELSE DO;
       MSGDATA='NOT FOUND';
       CALL #SETC(RHHDRPT,RH_SYMTREE,'ACFUID','NOT FOUND');
       RHRC=4;
       END;
   CLOSE FILE(RH_SEQ_1);
   IF ^SUBSTR(RETDDN->ALCFLAG,5,1) /* FREE? */
     THEN CALL #DOFRE(RETDDN); /* CALL DOFRE */
   END ABEACFU;
