 /* ARCHDEF
.HE TSO ARCHIVES ENHANCEMENT
.AD
1/28/77
.SS
.CE 2
ARCHDEF
TSO ARCHIVES ENHANCEMENT
.FI L
.SP 3
THE ARCHDEF COMMAND IS A PROPOSED ENHANCEMENT TO THE TSO ARCHIVES
SYSTEM.
IT WOULD ALLOW THE USER TO INDICATE WHETHER OR NOT DATA SETS BELONGING
TO HIM ARE TO BE AUTOMATICALLY ARCHIVED WHEN THEY HAVE BEEN UNREFERENCED
FOR A CERTAIN PERIOD OF TIME.  WHAT FOLLOWS IS A SERIES OF COMMAND
FORMATS, AND AN EXPLANATION OF THE FUNCTION PERFORMED:
.SP 1
ARCHDEF RANGE(30)
.IN 5
SPECIFIES THAT ALL DATA SETS FOR THE CURRENT USERID WILL NOT BE
AUTOMATICALLY ARCHIVED UNLESS THEY HAVE NOT BEEN USED FOR AT LEAST
30 DAYS.  ANY NUMBER FROM 0 (ALL DATA SETS WILL BE ARCHIVED IMMEDIATELY,
REGARDLESS OF REFERENCE DATES) TO 365 MAY BE SPECIFIED.  RANGE(999) HAS
SPECIAL SIGNIFICANCE, AND INDICATES THAT DATA SETS FOR THE CURRENT
USERID WILL NEVER BE AUTOMATICALLY ARCHIVED.  RANGE(998)
INDICATES THAT A PREVIOUS RANGE SPECIFICATION
IS TO BE ELIMINATED.  IF THE USER DOES NOT HAVE A CURRENT RANGE
SPECIFICATION, THEN A DEFAULT
DETERMINED BY THE OPERATIONS ANALYST GROUP WILL BE USED.
.IN 0
.SP 1
ARCHDEF RANGE(30) QUAL('NAME')
.IN 5
SPECIFIES THAT ALL DATA SETS FOR THE CURRENT USERID
HAVING THE SPECIFIED DESCRIPTIVE QUALIFIER (CNTL, DATA, CLIST, ETC.),
WILL NOT BE AUTOMATICALLY
ARCHIVED UNLESS THEY HAVE NOT BEEN USED FOR AT LEAST
THE SPECIFIED NUMBER OF DAYS.  ALL THE RULES PREVIOUSLY DEFINED FOR
THE RANGE OPERAND ALSO APPLY HERE.
.IN 0
.SP 1
ARCHDEF RANGE(30) DATASET('DSNAME')
.IN 5
THE SPECIFIED DATA SET WILL BE MARKED SO THAT IT WILL NOT BE
AUTOMATICALLY ARCHIVED UNLESS IT HAS NOT BEEN USED FOR AT LEAST
THE SPECIFIED NUMBER OF DAYS.  ALL THE RULES PREVIOUSLY DEFINED FOR
THE RANGE OPERAND ALSO APPLY HERE.
.IN 0
.SP 1
ARCHDEF LIST
.IN 5
THIS OPTION WILL PRODUCE A LIST OF ALL OF THOSE DATA SETS WHICH HAVE
BEEN SPECIFIED NOT TO BE AUTOMATICALLY ARCHIVED, AND WILL LIST THE
CURRENT RANGE VALUE, IF ANY HAS BEEN SPECIFIED.
 */
         % INCLUDE CPINIT1;
         % @CMP = 'O';
         % INCLUDE CPINIT2;
         @PROC(0,RANGE(30#(NUMERIC)),DATASET(#(DSNAME)),
           QUAL(),USERID(),LIST);
         DCL MYDA CHAR(44) VARYING;
         MYDA = SETDSN@(DATASETSUB);
         % INCLUDE CTLGDEF;
         DCL AREA CHAR(265);
         CTLGPTR = ADDR(AREA);
         DCL 1 VOLLIST,
              2 @NULL FIXED BIN(15,0) INIT(1),
                   /* # OF VOL PTRS THAT FOLLOW */
              2 @NULL FIXED BIN(31,0) INIT(0),
                   /* DEVICE CODE */
              2 RNGESER PIC'999999',
                   /* VOLUME SERIAL */
              2 @NULL FIXED BIN(15,0) INIT(0);
         RNGESER = SYMA('&RANGE');
         IF RNGESER > 365 & RNGESER < 998
              THEN DO;
 @WRITE('THE ONLY VALID VALUES FOR RANGE ARE 0 TO 365, 998 AND 999');
                   RETURN;
                   END;
         DCL MYUID CHAR(8) VARYING;
         IF USERID = 0
              THEN MYUID = SYMC('&SYSUID');
              ELSE DO;
                   MYUID = SYMC('&USERID');
                   @SETL(&SYSUID = MYUID);
                   END;
         DCL INDX CHAR(44) VARYING INIT('ARCHDEF.');
         DCL DSN CHAR(44) VARYING;
         DCL LOCPTR PTR;
         LOCPTR = NULL;
         DCL LOCRET FIXED BIN(31,0);
         DCL TYPE CHAR(1);
         DCL CTLGRET BIT(32);
         IF LIST ^= 0
              THEN DO;
                   IF MYDA ^= '' × QUAL ^= 0
                        THEN
 @WRITE('IF LIST, ALL PARAMETERS EXCEPT USERID ARE IGNORED');
                   INDX = 'ARCHDEF.USPEC.';
                     /* ARCHDEF.USPEC.USERID */
                   @SETL(&HDR = 'GENERAL RANGE');
                   CALL DOLST;
                   INDX = 'ARCHDEF.ULIST.' ×× MYUID ×× '.';
                     /* ARCHDEF.ULIST.USERID.NAME */
                   @SETL(&HDR = 'DATASET');
                   CALL DOLST;
                   INDX = 'ARCHDEF.QLIST.' ×× MYUID ×× '.';
                     /* ARCHDEF.QLIST.USERID.QUAL */
                   @SETL(&HDR = 'QUALIFIER');
                   CALL DOLST;
                   RETURN;
                   END;
         IF MYDA = '' & QUAL = 0
              THEN INDX = INDX ×× 'USPEC.' ×× MYUID;
              ELSE IF MYDA ^= ''
                   THEN INDX = INDX ×× 'ULIST.' ×× MYDA;
                   ELSE INDX = INDX ×× 'QLIST.' ×× MYUID ×× '.' ××
                     SYMC('&QUAL');
         CALL SYSCTLG('UNCAT',CTLGRET,INDX,'SYSRES');
         IF RNGESER = 998
              THEN RETURN;
         I = INDEX(INDX,'.');
         DO WHILE(I^=0);
              CALL SYSCTLG('BLDX',CTLGRET,SUBSTR(INDX,1,I-1),
                'SYSRES');
              J = I;
              I = INDEX(SUBSTR(INDX,I+1),'.');
              IF I^=0
                   THEN I = I + J;
              END;
         CALL SYSCTLG('CAT',CTLGRET,INDX,'SYSRES',VOLLIST);
         IF CTLGRET^='0'B
              THEN DO;
                   @SETL(&ARCHDEF = INDX);
 @WRITE('ERROR WHEN ATTEMPTING TO CATALOG DATA &ARCHDEF');
                   END;
         RETURN;
 DOLST:  PROC;
         DCL CVOL CHAR(6) INIT('SYSRES');
         DCL MSG CHAR(100) VARYING;
         IF INDX = 'ARCHDEF.USPEC.'
              THEN DO;
                   DSN = INDX××MYUID;
                   CALL PUTRPT;
                   IF CTLGRET ^= '0'B
                        THEN GO TO WRTERR;
                   END;
              ELSE DO;
                   CALL LOCDSN(LOCPTR,LOCRET,INDX,DSN,TYPE);
                   IF LOCRET ^= 0 × LOCPTR = NULL
                        THEN DO;
 WRTERR:
                             @WRITE('&HDR = NONE SPECIFIED');
                             RETURN;
                             END;
                   DO WHILE(LOCPTR ^= NULL);
                        CALL LOCDSN(LOCPTR,LOCRET,INDX,DSN,TYPE);
                        CALL PUTRPT;
                        END;
                   END;
 PUTRPT:  PROC;
         CALL SYSCTLG('NAME',CTLGRET,DSN,CVOL,AREA);
         IF CTLGRET = '0'B
              THEN DO;
                   @SETL(&DSN = SUBSTR(DSN,15));
                   IF VOLID.VOLSER(1) = '000999'
                        THEN MSG='NEVER AUTOMATICALLY ARCHIVE.';
                        ELSE MSG='AUTOMATICALLY ARCHIVED AFTER '
                          ×× VOLID.VOLSER(1) ×× ' DAYS.';
                   @SETL(&MSG = MSG);
                   @WRITE('&HDR = &DSN, &MSG');
                   END;
         END;
         END;
         END;
