 /* @SPARS */
 %NOPRINT;
         % DCL @SPARS ENTRY;
 % @SPARS:  PROC(PARM,KEYTAB,INDX) RETURNS(CHAR);
 /*
0*$.HE GENERALIZED SUBROUTINES - @SPARS
0*$.HE PLI PREPROCESSOR TEXT
0*$.HE PARSE A KEYWORD PARAMETER
0*$.PL 55
0*$.PN 0
0*$.PA
0*$.SS
0*$.NF
0*$09/02/76
0*$AUTHOR:  T. SMITH
0*$SOURCE MODULE NAME:  @SPARS
0*$DOCUMENTATION ID:  0*$
0*$.FI L
0*$.SP 5
0*$THIS IS A PLI PREPROCESSOR PROCEDURE WHICH CAN BE INVOKED BY
0*$OTHER PREPROCESSOR PROCEDURES TO PARSE DOWN A
0*$PARAMETER WHICH MAY BE A KEYWORD PARAMETER OF THE FORM -
0*$.SP 1
0*$.IN 5
0*$KEYWORD(DATA)
0*$.IN 0
0*$.SP 1
0*$WHERE
0*$.SP 1
0*$KEYWORD
0*$.IN 5
0*$IS A WORD WHICH UNIQUELY IDENTIFIES THE PARAMETER.
0*$.IN 0
0*$(DATA)
0*$.IN 5
0*$IS OPTIONAL, WHERE DATA IS A CHARACTER STRING TO BE ASSOCIATED
0*$WITH THE SPECIFIED KEYWORD.
0*$.IN 0
0*$.SP 1
0*$EXAMPLES OF KEYWORD PARAMETERS -
0*$.SP 1
0*$.IN 5
0*$.NF
0*$VOLUME(000001)
0*$DELETE
0*$.FI L
0*$.IN 0
0*$.SP 1
0*$CALL FORMAT IS AS FOLLOWS -
0*$.SP 1
0*$.IN 5
0*$STRING=@SPARS(PARAMETER,KEYTABLE,INDX);
0*$.IN 0
0*$.SP 1
0*$WHERE -
0*$.SP 1
0*$.IN 5
0*$PARAMETER
0*$.IN 10
0*$IS DEFINED AS CHARACTER, AND CONTAINS A PARAMETER TO BE PARSED.
0*$.IN 5
0*$KEYTABLE
0*$.IN 10
0*$IS DEFINED AS CHARACTER, AND CONTAINS, SEPARATED BY COMMAS,
0*$ALL OF THE VALID KEYWORDS.
0*$.IN 5
0*$INDX
0*$.IN 10
0*$IS DEFINED AS FIXED.  IF PARAMETER IS A KEYWORD PARAMETER,
0*$INDX WILL BE SET TO A NUMBER CORRESPONDING TO THE POSITION
0*$OF THE KEYWORD IN KEYTABLE.  IF PARAMETER IS NOT IDENTIFIED
0*$AS A KEYWORD (NO MATCH IN KEYTABLE), INDEX IS SET TO 0.
0*$.IN 0
0*$.SP 1
0*$@SPARS RETURNS A CHARACTER STRING WHICH IS SET AS FOLLOWS:
0*$.SP 1
0*$SUPPOSE PARAMETER EQUALS THE CHARACTER STRING 'VOLUME(000001)'.
0*$IF THE WORD VOLUME IS A KEYWORD APPEARING IN KEYTABLE, THEN
0*$@SPARS WILL RETURN THE CHARACTER STRING '000001'.  OTHERWISE,
0*$IT WILL RETURN 'VOLUME(000001)'.
0*$.SP 1
0*$IF PARAMETER EQUALS 'VOLUME', AND VOLUME IS A KEYWORD
0*$APPEARING IN KEYTABLE, THEN @SPARS WILL RETURN A NULL STRING,
0*$INDICATING THE KEYWORD WAS PRESENT, BUT WAS NOT FOLLOWED BY
0*$A PARENTHESIZED STRING OF TEXT.
0*$.SP 1
0*$@SPARS ALLOWS ABBREVIATED KEYWORDS.  FOR EXAMPLE, SUPPOSE THE
0*$WORD VOLUME IS A KEYWORD IN KEYTABLE, AND PARAMETER EQUALS
0*$'VOL(000001)'.  @SPARS MAY RECOGNIZE THIS AS AN OCCURRENCE
0*$OF THE KEYWORD PARAMETER "VOLUME", AND WILL RETURN THE CHARACTER
0*$STRING '000001'.  YOU WILL BE ABLE TO VISUALIZE THOSE SITUATIONS
0*$WHERE THIS WOULD NOT BE THE RESULT WHEN CONSIDERING THAT
0*$@SPARS TAKES THE CHARACTER STRING 'VOL' AND
0*$SCANS KEYTABLE FOR A MATCH AGAINST THE FIRST THREE CHARACTERS
0*$OF EACH KEYWORD.  AN EQUAL COMPARISON IS CONSIDERED A MATCH.
 */
         DCL PARM CHAR, KEYTAB CHAR, INDX FIXED;
         DCL (I,IL,S,E,TABLEN,LK) FIXED;
         IL = LENGTH(PARM);
         IF IL = 0
              THEN DO;
                   INDX=0;
                   RETURN('');
                   END;
         I = INDEX(PARM,'(');
         IF I = 0
              THEN I = IL;
              ELSE I = I - 1;
         TABLEN = LENGTH(KEYTAB);
         INDX = 1;
         S = 1;
 KEYLP:
         E = INDEX(SUBSTR(KEYTAB,S,TABLEN-S+1),',');
         IF E = 0
              THEN E = (TABLEN+2)-S;
         LK = E-1;
         IF LK > I
              THEN LK = I;
         IF SUBSTR(PARM,1,I) = SUBSTR(KEYTAB,S,LK)
              THEN IF I ^= IL
                   THEN RETURN(SUBSTR(PARM,I+2,IL-I-2));
                   ELSE RETURN('');
         S = S + E;
         IF S > TABLEN
              THEN DO;
                  INDX = 0;
                  RETURN(PARM);
                  END;
         INDX = INDX + 1;
         GO TO KEYLP;
         % END @SPARS;
 %PRINT;
