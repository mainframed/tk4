 /* TSOSPMV */
 /* THIS PROGRAM PRODUCES A TSO SPACE UTILIZATION REPORT BY USERID,
    INCLUDING A LIST OF THE TOP 50 DISK USERS, AND ALSO WILL
    OPTIONALLY GENERATE BILLING RECORDS TO BE FED INTO THE BOOLE &
    BABBAGE ACCOUNTING SYSTEM.  NOTE THAT THE BILLING RECORDS WILL
    ONLY BE GENERATED IF THE OUTPUT FILE NAME BBFILE IS PRESENT TO
    CONTAIN THE GENERATED RECORDS.  IF FILES ISAMFLE AND BDAMFLE ARE
    PRESENT POINTING TO THE REQSPACE DATA BASE, THE PROGRAM WILL
    CHECK TO SEE IF A PARTICULAR DATA SET IS REQSPACED OR NOT.  IF
    IT IS, A BILLING RECORD WILL NOT BE GENERATED, SINCE THIS FILE
    WILL BE CHARGED UNDER THE NORMAL REQSPACE SYSTEM.
 */
 TSOSPMV:  PROC OPTIONS(MAIN);
         DCL DUMPSTT ENTRY;
         DCL 1 TOP50(50),
              2 USERID CHAR(8) INIT((50)(8)' '),
              2 USPACE FIXED BIN(15,0) INIT((50)0);
         DCL TOTRK FIXED BIN(15,0);
         DCL MYCOL FIXED BIN(15,0);
         DCL UPRINT FILE PRINT;
         ON ENDPAGE(UPRINT) BEGIN;
             PUT FILE(UPRINT) PAGE;
             PUT FILE(UPRINT) EDIT('TSO SPACE UTILIZATION REPORT, DATE='
               ,DATE) (A,A);
             PUT FILE(UPRINT) EDIT('LAST','SPACE')(A,COL(15),A) SKIP(1);
             PUT FILE(UPRINT) EDIT('REFERENCE','USED')(A,COL(15),A)
               SKIP(1);
             PUT FILE(UPRINT) EDIT('DATE','(TRKS)','DSNAME')(A,COL(15),
               A,COL(25),A) SKIP(1);
             PUT FILE(UPRINT) SKIP(2);
             END;
         ON ENDPAGE(SYSPRINT) BEGIN;
              PUT PAGE;
              PUT EDIT('TSO SPACE UTILIZATION REPORT, DATE=',DATE)
                (A,A);
              PUT SKIP;
              MYCOL = 1;
              DO L = 1 TO 6;
              PUT EDIT('USERID   SPACE(TRKS)')(COL(MYCOL),A);
              MYCOL = MYCOL + 22;
              END;
              MYCOL = 1;
              END;
         OPEN FILE(SYSPRINT) LINESIZE(132);
         SIGNAL ENDPAGE(SYSPRINT);
         DCL UADCOR CHAR(1600);
         DCL UADARY(20) CHAR(80) DEF UADCOR;
         DCL SPTR PTR;
         SPTR=ADDR(UADCOR);
         DCL UADAREA AREA BASED(SPTR);
         DCL 1 HDR BASED(SPTR),
              2 PAD1 CHAR(24),
              2 POBOFF OFFSET(UADAREA);
                   /* PASSWORD OFFSET BLOCK */
         DCL 1 POB BASED(POBOFF),
              2 PAD1 CHAR(4),
              2 AOBOFF OFFSET(UADAREA);
                   /* ACCT # OFFSET BLOCK */
         DCL 1 AOB BASED(AOBOFF),
              2 PAD1 CHAR(8),
              2 ABOFF OFFSET(UADAREA);
                   /* ACCT # BLOCK */
         DCL 1 AB BASED(ABOFF),
              2 PAD1 CHAR(45),
              2 ACTNM CHAR(6);
         DCL INDX CHAR(44) VARYING;
         DCL (DATE,TIME,NULL) BUILTIN;
         % INCLUDE BBCHG;
         BBRTCD=124;
         DCL GREGDTE CHAR(6);
         GREGDTE = DATE;
         GREGDTE = SUBSTR(GREGDTE,3,4)××SUBSTR(GREGDTE,1,2);
         DCL JULDTE FIXED DEC(5,0);
         CALL GREGJUL(GREGDTE,JULDTE);
         BBJSDTE,BBTRDTE=JULDTE;
         BBJSTME=TIME;
         DCL LASTRET FIXED BIN(31,0) INIT(0);
         DCL (BBFILESW,RQFILESW,RPTSW) BIT(1) INIT('1'B);
         ON UNDF(BBFILE) BBFILESW = '0'B;
         ON UNDF(ISAMFLE) RQFILESW = '0'B;
         ON UNDF(BDAMFLE) RQFILESW = '0'B;
         ON UNDF(UPRINT) RPTSW = '0'B;
         OPEN FILE(BBFILE) RECORD OUTPUT;
         DCL ISAMFLE FILE ENV(INDEXED) DIRECT INPUT KEYED;
         DCL 1 BDAMREC CHAR (110) EXTERNAL;
         DCL BDAMKEY CHAR (8);
         DCL BDAMKEYA PIC 'ZZZZZZZ9' DEF BDAMKEY;
         DCL BDAMFLE FILE ENV(F RECSIZE(110) REGIONAL(1)) RECORD KEYED;
         OPEN FILE(BDAMFLE) INPUT DIRECT KEYED; /* INPUT FOR TESTING */
         OPEN FILE(ISAMFLE);
         DCL DDNAME CHAR(8) INIT('SYSUADS');
         DCL DCBPTR PTR;
         DCL MEMNAM CHAR(8) INIT(' ');
         DCL RETCODE FIXED BIN(31,0);
         DCL (INREC,OUTREC) CHAR(300) VARYING;
         DCL 1 DCB2 BASED(DCBPTR),
              2 DCBPAD1 CHAR(36),
              2 DCBRECFM BIT(8),
              2 DCBPAD2 CHAR(45),
              2 DCBLRECL FIXED BIN(15,0);
         CALL SYSDCBP(DCBPTR,DDNAME);
         CALL SYSOPEN(DCBPTR,'INPUT');
 ON CONDITION(SYSEOD) GO TO EOD;
         GO TO NXTGT;
 NXT:
         DO I = 1 TO 20;
              CALL NXTREC(UADARY(I));
              END;
 EOD:
         DO I = 1 TO 8 WHILE(SUBSTR(MEMNAM,I,1) ^= ' ');
              END;
         IF SUBSTR(MEMNAM,I-1,1)^='0'
              THEN GO TO NXTGT;
         BBJBNM = SUBSTR(MEMNAM,1,I-2);
         INDX = SUBSTR(MEMNAM,1,I-2)××'.';
         TOTRK = 0;
         CALL TSIZE;
         BBACTNM=SUBSTR(ACTNM,1,2)××SUBSTR(ACTNM,4,3);
         IF BBFILESW & BBAMT^=0
              THEN WRITE FILE(BBFILE) FROM(BBCHG);
         PUT EDIT(BBJBNM,TOTRK)(COL(MYCOL),A,COL(MYCOL+10),P'ZZ,ZZ9');
         MYCOL = MYCOL + 22;
         IF MYCOL >= 133
              THEN MYCOL = 1;
         J = 1;
         DO I = 1 TO 50 WHILE(USERID(I) ^= ' ');
              IF USPACE(J) > USPACE(I)
                   THEN J = I;
              END;
         IF I < 51
              THEN J = I;
         IF TOTRK > USPACE(J)
              THEN DO;
                   USPACE(J) = TOTRK;
                   USERID(J) = BBJBNM;
                   END;
 NXTGT:
         MEMNAM = GETDIR;
         IF MEMNAM = HIGH(8)
              THEN GO TO EOJ;
         CALL SYSFIND(DCBPTR,MEMNAM,'D',RETCODE);
         IF RETCODE ^= 0
              THEN SIGNAL ERROR;
         GO TO NXT;
 GETDIR:  PROC RETURNS(CHAR(8));
         DCL INDIR FILE RECORD INPUT ENV(F RECSIZE(256) BLKSIZE(256));
         DCL BUFPTR PTR STATIC,
             BUFPADJ FIXED BIN(31,0) DEF BUFPTR;
         DCL BYTCNT FIXED BIN(15,0) BASED(BUFPTR);
         DCL BCNTSAV FIXED BIN(15,0) STATIC INIT(0);
         DCL 1 ENTRY BASED(BUFPTR),
              2 MEMNAM CHAR(8),
              2 TTR CHAR(3),
              2 CFIELD,
               3 CF1 BIT(3),
               3 CF2 BIT(5);  /* USER DATA HALFWORDS */
         DCL MYNAME CHAR(8);
         ON ENDFILE(INDIR) GO TO DIREOF;
         DCL INITSW BIT(1) STATIC INIT('1'B);
         IF INITSW
              THEN DO;
                   INITSW = '0'B;
                   OPEN FILE(INDIR) TITLE(DDNAME);
                   END;
         IF BCNTSAV < 3
              THEN GO TO READIR;
         J = 12 + 2 * CF2;
         BUFPADJ = BUFPADJ + J;
         BCNTSAV = BCNTSAV - J;
         IF BCNTSAV > 2
              THEN GO TO RETURN;
 READIR:
         READ FILE(INDIR) SET(BUFPTR);
         BCNTSAV = BYTCNT;
         BUFPADJ = BUFPADJ + 2;
         GO TO RETURN;
 RETURN:
         MYNAME = MEMNAM;
 RETURNA:
         RETURN(MYNAME);
 DIREOF:
         MYNAME = HIGH(8);
         GO TO RETURNA;
         END;
 NXTREC:  PROC(REC);
         DCL BUFPTR PTR STATIC,
             BUFPADJ FIXED BIN(31,0) DEF BUFPTR;
         DCL 1 LRECV BASED(BUFPTR),
              2 BYTCNT FIXED BIN(15,0),
              2 RECSTR CHAR(300);
         DCL BCNTSAV FIXED BIN(15,0) STATIC INIT(0);
         DCL REC CHAR(80);
         DCL BUFFER CHAR(10000) VARYING STATIC;
         DCL LRECF CHAR(300) BASED(BUFPTR);
         IF BCNTSAV = 0
              THEN DO;
                   CALL SYSREAD(DCBPTR,BUFFER);
                   BCNTSAV = LENGTH(BUFFER);
                   BUFPTR = ADDR(BUFFER);
                   BUFPADJ = BUFPADJ + 2;
                   END;
         REC = SUBSTR(LRECF,1,DCBLRECL);
         BCNTSAV = BCNTSAV - DCBLRECL;
         BUFPADJ = BUFPADJ + DCBLRECL;
         END;
 TSIZE: PROC;
         DCL 1 DTCK1 BASED(DSCB1PTR),
              2 PAD1 CHAR(53),
              2 CREDT CHAR(3),
              2 PAD2 CHAR(19),
              2 REFDT CHAR(3);
         DCL 1 DTCK2 BASED(DSCB1PTR),
              2 PAD1 CHAR(75),
              2 YYREF BIT(8),
              2 DDDREF BIT(16);
         DCL DSN CHAR(44) VARYING;
         %INCLUDE CTLGDEF;
         DCL CVOL CHAR(6) INIT('SYSRES');
         DCL RETCODE FIXED BIN(31,0);
         DCL RETCODC CHAR(4) DEF RETCODE;
         DCL RET BIT(32) DEF RETCODE;
         DCL OUTRETCC CHAR(8);
         DCL WKAREA CHAR(148) EXT;
         DCL DSCB1PTR PTR,
             PTR1ADJ FIXED BIN(31,0) DEF DSCB1PTR;
         DSCB1PTR = ADDR(WKAREA);
         PTR1ADJ = PTR1ADJ - 44;
         DCL TRKPERCYL FIXED BIN(15,0) STATIC INIT(30);
              /* FOR NOW, ASSUME EVERYTHING IS 3330 */
         DCL BYTES DEC FIXED(15,0) STATIC INIT(19250);
         DCL TOTBYTES DEC FIXED(15,0);
         DCL LOCPTR PTR;
         LOCPTR = NULL;
         DCL TYPE CHAR(1);
         DCL AREA CHAR(265);
         CTLGPTR=ADDR(AREA);
         DCL TMPTRK FIXED BIN(15,0) INIT(0);
         CALL LOCDSN(LOCPTR,RETCODE,INDX,DSN,TYPE);
         IF RETCODE ^= 0
              THEN DO;
                   BBAMT=0;
                   RETURN;
                   END;
        DO WHILE(LOCPTR^=NULL);
             CALL LOCDSN(LOCPTR,RETCODE,INDX,DSN,TYPE);
             CALL SYSCTLG('NAME',RET,DSN,CVOL,AREA);
             IF RETCODE ^= 0
                  THEN GO TO ENDLP;
             CVOL=SUBSTR(AREA,260,6);
             CALL SYSVTOC('SEARCH',RET,DSN,VOLID.VOLSER(1),WKAREA);
             IF RET ^= 0
                  THEN GO TO ENDLP;
             IF ^REQSP(DSN,VOLID.VOLSER(1))
                  THEN DO;
                       CALL DSIZESB(DSCB1PTR,TRKPERCYL,
                         VOLID.VOLSER(1),TMPTRK);
                       IF REFDT = LOW(3)
                            THEN REFDT = CREDT;
                       I = YYREF;
                       J = DDDREF;
                       IF RPTSW
                            THEN PUT FILE(UPRINT) EDIT((I*1000+J),
                              TMPTRK,DSN)(P'99999',COL(15),P'ZZ,ZZ9',
                              COL(25),A) SKIP(1);
                       TOTRK = TOTRK + TMPTRK;
                       END;
 ENDLP:
             END;
         IF RPTSW
              THEN DO;
                   PUT FILE(UPRINT) EDIT(BBJBNM,' TOTAL = ',TOTRK)
                     (A,A,P'ZZ,ZZ9') SKIP(2);
                   SIGNAL ENDPAGE(UPRINT);
                   END;
         TOTBYTES = TOTRK;
         TOTBYTES = TOTBYTES * BYTES;
         TOTBYTES = TOTBYTES / 10000;
         BBAMT = TOTBYTES;
         END;
 REQSP:  PROC(DSN,VOLUME) RETURNS(BIT(1));
         DCL DSN CHAR(44);
         DCL VOLUME CHAR(6);
         IF ^RQFILESW
              THEN RETURN('0'B);
         DCL (A,B,C,D,E) FIXED DEC(15,0);
         DCL DSNRCOR CHAR(110);
         DSNRPTR = ADDR(DSNRCOR);
         % INCLUDE TGSDSNR;
         % INCLUDE TGSISWK;
         DCL (DSNRPTR,VOLRPTR) PTR;
         DCL INITSW BIT(1) STATIC INIT('1'B);
         ON KEY(ISAMFLE) GO TO DSNBAD;
 DOREAD:
         READ FILE(ISAMFLE) INTO(ISAMIN) KEY(DSN);
         BDAMKEYA = ISAM.DAMASTER;
 RDAGIN:
         READ FILE(BDAMFLE) INTO(DSNRECS) KEY(BDAMKEY);
         IF NEWVOL = VOLUME
              THEN RETURN('1'B);
         IF DNDUPPT = 0
              THEN GO TO DSNBAD;
         BDAMKEYA = DNDUPPT;
         GO TO RDAGIN;
 DSNBAD:
         RETURN('0'B);
         END;
 EOJ:
         SIGNAL ENDPAGE(SYSPRINT);
         PUT EDIT('TOP 50 LIST')(A) SKIP(1);
         DO I = 1 TO 50;
              K = 1;
              DO J = 1 TO 50;
                   IF USPACE(J) > USPACE(K)
                        THEN K = J;
                   END;
              PUT EDIT(USERID(K),USPACE(K))(A,COL(10),P'ZZ,ZZ9')
                SKIP(1);
              USPACE(K) = 0;
              END;
         END;
