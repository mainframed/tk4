* PROCEDURE    SYSLIBR
* FUNCTION     READ MEMBERS OF A CARD IMAGE PDS
* VERSION      DEC 11, 1977
* AUTHOR       HOWARD GILBERT
*
* THIS PROGRAM WAS CREATED TO SUPPORT GPPP'S INCLUDE FUNCTION.
* THE DESIGN, THEREFORE, INCLUDED A PLI CALLING SEQUENCE,
* REENTRANT CODING, ACCESS TO RECORDS BY MEMBER NAME, BY TTR,
* OR SEQUENTIALLY. THE INTERFACE CONTROL BLOCK IS MAPPED BY
* THE MACRO 'SYSLBBLK' IN PLI, AND IN A DSECT BELOW. THE
* HIGHLIGHTS OF THE FUCTIONS ARE:
*     THE INTERFACE BLOCK CONTAINS A WORK AREA POINTER WHICH
* THE CALLER MUST INITIALIZE TO NULL(). WHEN THE FIRST CALL
* OCCURS, THIS ROUTINE OBTAINS STORAGE TO HOLD A DCB, A DECB,
* AND WORKING SPACE AND PUTS THE ADDRESS OF THIS AREA IN THE
* WORKAREA POINTER IN THE PARM BLOCK. SUBSEQUENT REQUESTS MUST
* USE THE SAME PARAMETER BLOCK, OR A COPY OF IT.
*    THE TYPE OF REQUEST IS SIGNALLED IN THE 'REQUEST' BYTE.
* X'80' INDICATES THE NEXT RECORD IS TO BE THE FIRST RECORD
* IN A NAMED MEMBER. X'40' INDICATES THAT A TTR IS PROVIDED
* AND SHOULD BE USED TO SELECT THE RECORD. X'00' INDICATES
* SEQUENTIAL ACCESS TO THE NEXT RECORD AFTER THE LAST ONE READ.
* UPON RETURN, THE TTR OF THE RECORD IS PASSED BACK IN THE
* PARAMETER BLOCK IN THE SAME FIELD THE CALLER USES TO PASS
* US A TTR. THE MEMBER NAME FIELD IS IGNORED IF THE REQUEST
* IS NOT X'80'.
*    THE NULBER OF BYTES READ IS PASSED BACK IN THE 'RECSIZE'
* FIELD OF THE INTERFACE BLOCK. IF AN ERROR OCCURS, ONE OF THE
* BITS IN THE 'ERRORS' BYTE ARE SET. THE CURRENTLY SUPPORTED
* ERRORS ARE 'ERREOF' (END OF FILE ON MEMBER), 'ERROPN'
* (DDNAME SYSLIB CANT BE OPENED), AND 'ERRMEM' (MEMBER NOT FOUND).
* 'ERROPN' IS FATAL. ONE SHOULD NEVER CALL SYSLIBR AGAIN AFTER
* IT HAS OCCURRED. SIMIARLY, THERE IS NO SYNAD ROUTINE, SO AN
* IO ERROR WILL GENERATE A 001 ABEND.
*     THE STRATEGY FOR USING THIS ROUTINE WILL BE DESCRIBED
* IN TERMS OF THE GPPP INCLUDE FUNCTION IT SUPPORTS. WHEN
* AN INCLUDE CARD IS ENCOUNTERED WHILE READING ONE MEMBER OF
* SYSLIB, THE CURRENT RECORD OFFSET IN THE BLOCK AND THE LAS
* BLOCK TTR ARE SAVED ON A STACK, AND THE MEMBER NAME IS USED
* TO READ A NEW BLOCK IN WHICH BEGINS THAT MEMBER. WHEN AN
* END OF FILE OCCURS, THE PREVIOUS MEMBER IS REOPENED BY
* FETCHING THE TTR AND RECORD OFFSET FROM THE STACK AND
* MAKING A TTR-TYPE REQUEST TO REREAD THE BLOCK WHICH WAS
* PREVIOUSLY INTERRUPTED.
*     THIS ROUTINE DOES NOT CLOSE SYSLIB OR FREE ITS WORKAREA,
* SO IT SHOULD BE USED ONLY BY TASKS WHICH CAN LET DETACH
* DO THE CLEANING UP. IT DID NOT SEE SENSIBLE AT THIS TIME
* TO ADD UNNECESSARY FUNCTIONS.
         EJECT
         PRINT OFF
         COPY  HAL
         PRINT ON
SYSLIBR  PROC  OPTIONS=PLI
PROCESS  BLOCK
         L     R10,0(R1)
         USING PARMBLOK,R10
         SPACE
* LOCATE OR OBTAIN WORK AREA
         L     R9,WORKAPTR
         LA    R9,0(R9)
GETWKA   IF    (R9,EQ,0),THEN
         GETMAIN R,LV=WORKALEN
         LR    R9,R1
         USING WORKAREA,R9
         ST    R9,WORKAPTR
         LR    R0,R9
         LA    R1,WORKALEN
         LA    R2,LISTAREA
         LA    R3,LISTALEN
         MVCL  R0,R2
         OPEN  (LIBDCB,INPUT),MF=(E,OPENAREA)
         IF    (DCBOFLGS-IHADCB+LIBDCB,OFF,DCBOFOPN),THEN
         OI    ERRFLG,ERROPN
         LEAVE PROCESS
         BEND
         BEND  GETWKA
         EJECT
FINDIT   IF    (REQUEST,ON,REQMEM),THEN
         FIND  LIBDCB,MEMBER,D
         IF    (R15,NE,0),THEN
         OI    ERRFLG,ERRMEM
         LEAVE PROCESS
         BEND
         BEND  FINDIT
         SPACE 5
POINTIT  IF    (REQUEST,ON,REQREC),THEN
         POINT LIBDCB,TTR
         BEND  POINTIT
         SPACE 5
* NOW TIME TO READ A RECORD
         LH    R2,BUFFLEN
         L     R3,BUFFAD
         READ  LIBDECB,SF,LIBDCB,(R3),(R2),MF=E
         CHECK LIBDECB
         NOTE  LIBDCB
         ST    R1,TTR
         MVI   ERRFLG,0
         L     R2,DECIOBPT-IECTDECB+LIBDECB
         LH    R3,DCBBLKSI-IHADCB+LIBDCB
         SH    R3,IOBCSTAT+1-IOBSTDRD(R2)
         STH   R3,RECSIZE
         LEAVE PROCESS
EODAD    OI    ERRFLG,ERREOF
         BEND  PROCESS
         PEND
         PRINT NOGEN
         IEZBITS
         EQUREGS
         EJECT
PARMBLOK DSECT
MEMBER   DS    CL8
TTR      DS    F
BUFFAD   DS    F
WORKAPTR DS    A
BUFFLEN  DS    H
RECSIZE  DS    H
REQUEST  DS    X
REQMEM   EQU   BIT0
REQREC   EQU   BIT1
ERRFLG   DS    X
ERREOF   EQU   BIT0
ERRIO    EQU   BIT1               USUSED
ERROPN   EQU   BIT2
ERRMEM   EQU   BIT3
WORKAREA DSECT
LIBDCB   DCB   DSORG=PO,MACRF=R
         READ  LIBDECB,SF,MF=L
OPENAREA OPEN  (LIBDCB),MF=L
WORKALEN EQU   *-WORKAREA
         DCBD  DSORG=PO,DEVD=DA
         IECTDECB
DECIOBPT EQU   DECSENS0
         IEZIOB
SYSLIBRA CSECT
LISTAREA DS    0D
LISTDCB  DCB   DDNAME=SYSLIB,DSORG=PO,BUFNO=0,EODAD=EODAD,MACRF=R
         READ  DECBLIST,SF,LISTDCB,0,0,MF=L
         OPEN  (LISTDCB,INPUT),MF=L
LISTALEN EQU   *-LISTAREA
         END
