 /* PERFVER */
 /* THIS PROGRAM DETERMINES WHAT SMF DATA IS MISSING FOR THE
    MONTH.  IT DOES THIS BY SCANNING THE RMF SMF TYPE 70 RECORDS.
    ANY HOUR IN WHICH AT LEAST 55 MINUTES IS NOT COVERED BY
    RMF MEASUREMENT IS CONSIDERED TO BE INVALID.  THE PROGRAM
    WILL CREATE A BIT MAP 744 BITS LONG (93 BYTES) IN WHICH EACH
    BIT REPRESENTS A SUCCEEDING HOUR OF THE MONTH (THE PROGRAM
    EXPECTS THE INPUT DATA SET TO CONTAIN ALL SMF RECORDS FOR ONE
    MONTH ONLY).  THE PROGRAM THEN READS THE PERFORMANCE DATA
    FILE IDENTIFIED BY DDNAME PERFDA, AND SETS THE APPROPRIATE
    ELEMENTS IN EACH 24-HOUR ARRAY TO -1 TO INDICATE THAT THE
    DATA FOR THAT HOUR IS INVALID. */
 PERFVER:  PROC OPTIONS(MAIN);
         DFT RANGE(*) FIXED BIN VALUE(FIXED BIN(31,0));
         % INCLUDE SMFDEFI;
         % INCLUDE SMFHDR;
         % INCLUDE SMFRMF;
         DCL (ALTSW,DAYSW) BIT(1);
         DCL MONTAB(12) CHAR(3) STATIC INIT(
           'JAN','FEB','MAR','APR','MAY','JUN',
           'JUL','AUG','SEP','OCT','NOV','DEC');
         DCL WEEKTAB(7) CHAR(3) STATIC INIT(
           'SUN','MON','TUE','WED','THU','FRI','SAT');
         DCL JULGREG ENTRY(CHAR(6),FIXED DEC(5,0));
         DCL GREGJUL ENTRY(CHAR(6))
           RETURNS(FIXED DEC(5,0));
         DCL DOW ENTRY(FIXED DEC(5,0))
           RETURNS(FIXED BIN(15,0));
         DCL SPELDTE ENTRY(CHAR(6))
           RETURNS(CHAR(40) VAR);
         DCL DATE BUILTIN;
         DCL PERFDA FILE RECORD UPDATE;
         DCL 1 P2 UNALIGNED,
              2 ARRAY(0:23) FIXED BIN(31,0),
              2 INDX FIXED BIN(15,0),
              2 DTE FIXED DEC(5,0),
              2 HDR CHAR(78) VAR;
         DCL GREGDTE CHAR(6);
         DCL (JULDTE,YR,MN) FIXED DEC(5,0);
         DCL MMSTR BIT(8928) INIT((8928)'1'B);
              /* EACH BIT IN MMSTR REPRESENTS 5 MINUTES
                 OF THE MONTH.  AFTER SMF DATA IS PROCESSED, IF
                 A BIT IS ON, THAT INTERVAL IS INVALID. */
         DCL HHSTR BIT(744) INIT('0'B);
              /* EACH BIT IN HHSTR REPRESENTS 1 HOUR
                 OF THE MONTH.  WHEN PROCESSING IS COMPLETE, IF
                 BIT IS ON, THAT INTERVAL IS INVALID. */
         ON ENDFILE(SMFDATA) GO TO EOJ;
         DO FOREVER=1 REPEAT FOREVER;
              DO UNTIL(I = 70);
                   READ FILE(SMFDATA) INTO(SMFREC);
                   I = TYPE;
                   END;
              HH = SMF70IST/10000;
                   /* HH = INTEGRAL HOURS */
              MM = (SMF70IST-(HH*10000))/100;
                   /* MM = INTEGRAL MINUTES */
              CALL JULGREG(GREGDTE,SMFT70.SMF70DAT);
              I = SUBSTR(GREGDTE,3,2);
                   /* I = DD FROM MMDDYY */
              INVTME = ((HH*60 + MM) + (I-1)*1440)/5;
                   /* INVTME = INTERVAL START TIME (1 = 5 MINUTES)
                      RELATIVE TO THE BEGINNING OF THE MONTH */
              INVLEN = SMF70INT/100000;
                   /* INVLEN = INTERVAL ELAPSED TIME IN MINUTES */
              INVLEN = INVLEN/5;
              IF MOD(INVLEN,5) ^= 0
                   THEN INVLEN = INVLEN + 1;
                   /* INVLEN = INTERVAL ELAPSED TIME, 1 = 5 MIN. */
              SUBSTR(MMSTR,INVTME+1,INVLEN) = '0'B;
              END;
 EOJ:
         DO I = 0 TO 743;
              IF SUBSTR(MMSTR,I*12+1,12) ^= '0'B
                   THEN SUBSTR(HHSTR,I+1,1) = '1'B;
                        /* SET HOUR INVALID */
              END;
         ON ENDPAGE(SYSPRINT) BEGIN;
              PUT EDIT('PERFORMANCE DATA VERIFICATION PROGRAM, DATE = ',
                SPELDTE(DATE))(A,A) PAGE;
              PUT EDIT('VERIFICATION DONE FOR THE MONTH OF ',
                MONTAB(SUBSTR(GREGDTE,1,2)),' ''',SUBSTR(GREGDTE,5,2))
                (A,A,A) SKIP(1);
              PUT SKIP(2);
              END;
         SIGNAL ENDPAGE(SYSPRINT);
         JULDTE=GREGJUL(SUBSTR(GREGDTE,1,2)××'01'××SUBSTR(GREGDTE,5,2));
         N = DOW(JULDTE);
         DO I = 0 TO 30;
              DAYSW = '1'B;
              DO J = 1 TO 24;
                   IF SUBSTR(HHSTR,I*24+J,1)
                        THEN DO;
                             IF DAYSW
                                  THEN DO;
                                       DAYSW = '0'B;
                                       PUT EDIT('DAY = ',(I+1),
                                         WEEKTAB(N))(A,P'Z9',X(1),A)
                                         SKIP(1);
                                       END;
                             PUT EDIT('HOUR ',(J-1),' INVALID DATA')
                               (A,P'Z9',A) SKIP(1);
                             END;
                   END;
              N = N + 1;
              IF N > 7
                   THEN N = 1;
              END;
         ON UNDF(PERFDA) GO TO EOFB;
         ON ENDFILE(PERFDA) GO TO EOF;
         DO FOREVER=1 REPEAT FOREVER;
              READ FILE(PERFDA) INTO(P2);
              ALTSW = '0'B;
              I = DTE-JULDTE;
              DO J = 1 TO 24;
                   IF SUBSTR(HHSTR,I*24+J,1)
                        THEN DO;
                             ALTSW = '1'B;
                             ARRAY(J-1) = -1;
                             END;
                   END;
              IF ALTSW
                   THEN REWRITE FILE(PERFDA) FROM(P2);
              END;
 EOFB:
         PUT EDIT('NOTE THAT FILE PERFDA WAS NOT PROCESSED')(A) SKIP(1);
 EOF:
         END;
