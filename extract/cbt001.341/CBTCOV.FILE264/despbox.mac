         MACRO
&NAME    DESPBOX ,                     DES PERMUTATION BOX
.*                                     WRITTEN 07/24/83 BY PAUL DIXON
.*       INPUT:  PARAMETERS OF P-BOX E.G.
.*               DES#IP DESPBOX 58,50,42,34,26,18,10,2,...
.*       OUTPUT: ASSEMBLER PROGRAM WHICH WILL PERMUTE THE BITS IN THE
.*               1ST PARAMETER AND STORE THEM IN THE 2ND PARAMETER E.G.
.*               CALL DES#IP(DATA,PERMUTED_DATA);
         LCLA  &NUMNEW,&NUMOLD
         LCLA  &I,&J,&K,&N
         LCLC  &C,&L(2)
         AIF   (T'&NAME EQ 'O').NONAME
&L(1)    SETC  'DP#I&SYSNDX'
&L(2)    SETC  'DP#O&SYSNDX'
&NUMNEW  SETA  N'&SYSLIST              NUMBER OF BITS IN NEW STRING
&NUMOLD  SETA  0
&N       SETA  &NUMNEW                 NUMBER OF BITS IN NEW STRING
.TESTPOS AIF   (&NUMOLD GE &SYSLIST(&N)).PREVPOS
&NUMOLD  SETA  &SYSLIST(&N)            LARGEST BIT IN OLD STRING
.PREVPOS ANOP
&N       SETA  &N-1
         AIF   (&N GT 0).TESTPOS
&NUMOLD  SETA  (&NUMOLD+7)/8*8         ROUND UP TO MULTIPLE OF 8
         MNOTE *,'&NUMOLD BITS ARE BEING MAPPED TO &NUMNEW BITS'
         MNOTE *,'CALL USING &NAME.(INPUT_BITS,OUTPUT_BITS);'
&NAME    CSECT ,                       REENTRANT MODULE
         SAVE  (14,12),,*&NAME*_&SYSDATE_&SYSTIME
         LM    8,9,20(13)              SAVE R01 SAVE AREA IN R89
         LR    12,15                   R12: ...
         USING &NAME,12                ... PROGRAM BASE
         L     14,0(1)                 R14: @ INPUT BIT STRING
&N       SETA  ((&NUMOLD+7)/8)-1       &N: MACHINE LENGTH OF INPUT
         LA    15,&N                   R15: MACHINE LENGTH OF INPUT
         EX    15,&L(1)                MVC DP#WNNNN(*-*),0(14)
         L     2,20(13)                R2: BITS 1-32
         AIF   (&NUMOLD LE 32).LOADOK  BRANCH IF 1-32 BITS
         L     3,24(13)                R3: BITS 33-64
.LOADOK  XR    14,14                   R14: 0
         AIF   (&NUMNEW LE 32).LOAD0   BRANCH IF 1-32 BITS
         XR    15,15                   R15: 0
.LOAD0   LA    0,1                     R0: CONSTANT 1
&N       SETA  &NUMNEW                 NUMBER OF BITS IN NEW STRING
.AGAIN   ANOP
&I       SETA  &SYSLIST(&N)-1          &I: OLD BIT POSITION (OFFSET 0)
&J       SETA  2+(&I/32)               &J: REGISTER NUMBER
&C       SETC    '                     SELECT BIT &SYSLIST(&N)'
&I       SETA  31-&I+(&I/32*32)        &I: SHIFT AMOUNT
         LR    4,0                     R1: 1
         AIF   (&I EQ 0).ZSHIFTO       SKIP SHIFT IF NOT NEEDED
         SLL   4,&I                    SHIFT MASK TO INPUT POSITION
.ZSHIFTO NR    4,&J&C
&K       SETA  &N-1                    &K: NEW BIT POSITION (OFFSET 0)
&J       SETA  14+(&K/32)              &J: REGISTER NUMBER
&C       SETC     '                    STORE IN BIT &N'
&I       SETA  31-&I-&K+(&K/32*32)     &I: SHIFT AMOUNT
         AIF   (&I EQ 0).ZSHIFTN       SKIP SHIFT IF NOT NEEDED
         AIF   (&I GT 0).PSHIFTN       LEFT SHIFT NEEDED
         SRL   4,&I                    SHIFT RIGHT TO OUTPUT POSITION
         AGO   .ZSHIFTN                DONE WITH SHIFT
.PSHIFTN SLL   4,&I                    SHIFT LEFT TO OUTPUT POSITION
.ZSHIFTN OR    &J,4&C
&N       SETA  &N-1                    MOVE TO NEXT BIT
         AIF   (&N GT 0).AGAIN         LOOP BACK IF MORE TO DO
         ST    14,20(13)               R14: BITS 1-32 OF RESULT
         AIF   (&NUMNEW LE 32).STORE   BRANCH IF 1-32 BITS
         ST    15,24(13)               R15: BITS 33-64 OF RESULT
.STORE   L     2,4(1)                  R2: @ OUTPUT AREA
&N       SETA  ((&NUMNEW+7)/8)-1       &N: MACHINE LENGTH OF OUTPUT
         LA    3,&N                    R15: MACHINE LENGTH OF OUTPUT
         EX    3,&L(2)                 MVC 0(*-*,2),DP#WNNNN
         STM   8,9,20(13)              RESTORE R01 SAVE AREA FROM R89
         RETURN (14,12),RC=0           RETURN TO CALLER
         DROP  12                      DONE WITH PROGRAM BASE
&L(1)    MVC   20(*-*,13),0(14)        MOVE INPUT AREA TO WORK AREA
&L(2)    MVC   0(*-*,2),20(13)         MOVE WORK AREA TO OUTPUT AREA
         MEXIT
.NONAME  MNOTE 8,'NAME FIELD MISSING FROM DESPBOX MACRO'
         MEND
