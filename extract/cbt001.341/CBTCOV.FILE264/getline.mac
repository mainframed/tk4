*$.HE GENERALIZED SUBROUTINES - GETLINE
*$.HE GETLINE - INTERFACE TO TSO GETLINE MACRO
*$.PL 55
*$.PN 0
*$.PA
*$.SS
*$.NF
*$4/19/76
*$AUTHOR:  T. SMITH
*$SOURCE MODULE NAME:  GETLINE
*$DOCUMENTATION ID:  *$
*$.FI L
*$.SP 5
*$THIS ROUTINE SUPPLIES THE PLI PROGRAMMER WITH AN INTERFACE
*$TO THE TSO GETLINE I/O SERVICE ROUTINE.  YOU SHOULD USE
*$THE I/O SERVICE ROUTINES IN ANY COMMAND PROCESSORS YOU
*$WRITE TO PROCESS TERMINAL I/O.  YOU USE THE GETLINE MACRO
*$TO OBTAIN ALL INPUT LINES OTHER THAN COMMANDS OR SUBCOMMANDS, AND
*$PROMPT MESSAGE RESPONSES.  COMMANDS, SUBCOMMANDS, AND PROMPT MESSAGE
*$RESPONSES SHOULD BE OBTAINED WITH THE PUTGET MACRO INTERFACE.
*$.SP 1
*$.NF
***************************************************************$
*
*$CALL GETLINE(CPPLUPT,CPPLECT,IOECB,RETCODE,INPTR,
*$       'ISTACK' OR 'TERM',
*$       'LOGICAL' OR 'PHYCICAL',
*$       'EDIT' OR 'ASIS',
*$       'WAIT' OR 'NOWAIT',
*$       'ENTRY',
*$       EPPTR);
*
*$.SP 1
*$.FI L
*$NOTE - IN THE ABOVE FORMAT DESCRIPTION, THOSE CHARACTER LITERALS
*$SPECIFIED ON THE SAME LINE ARE MUTUALLY EXCLUSIVE, AND ONLY ONE
*$CAN BE SPECIFIED.  FOR A GIVEN GROUP, THE FIRST ONE SPECIFIED ON
*$THE LINE IS THE DEFAULT.
*
**************************************************************$
*
*$.SP 1
*$.CE 1
*$DEFINITION OF TERMS
*$.SP 1
*
**************************************************************$
*
*$.IN 0
*$'ASIS'
*$.IN 5
*$SPECIFIES THAT MINIMAL EDITING IS TO BE DONE BY THE TGET SVC.
*$THE FOLLOWING EDITING FUNCTIONS WILL BE PERFORMED BY TGET:
*$.IN 10
*$A. TRANSMISSION CONTROL CHARACTERS ARE REMOVED.
*$.IN 10
*$B. THE LINE OF INPUT IS TRANSLATED FROM TERMINAL CODE TO
*$EBCDIC.
*$.IN 10
*$D. LINE DELETION AND CHARACTER DELETION EDITING
*$ARE PERFORMED.
*$.IN 0
*$CPPLECT
*$.IN 5
*$POINTER VARIABLE SPECIFYING THE ADDRESS OF THE ENVIRONMENT
*$CONTROL TABLE (ECT).  YOU MAY OBTAIN THIS ADDRESS FROM THE
*$CPPL POINTED TO WHEN A COMMAND PROCESSOR IS ATTACHED
*$BY THE TERMINAL MONITOR PROGRAM.
*$.IN 0
*$CPPLUPT
*$.IN 5
*$POINTER VARIABLE SPECIFYING THE ADDRESS OF THE USER PROFILE
*$TABLE (UPT).  YOU MAY OBTAIN THIA ADDRESS FROM THE CPPL
*$POINTED TO WHEN A COMMAND PROCESSOR IS ATTACHED BY
*$THE TERMINAL MONITOR PROGRAM.
*$.IN 0
*$'EDIT'
*$.IN 5
*$SPECIFIES THAT IN ADDITION TO MINIMAL EDITING (SEE ASIS)
*$THE INPUT BUFFER IS TO BE FILLED OUT WITH TRAILING BLANKS.
*$.IN 0
*$'ENTRY'
*$.IN 5
*$SPECIFIES THAT EPPTR HAS BEEN SUPPLIED.
*$.IN 0
*$EPPTR
*$.IN 5
*$POINTER VARIABLE CONTAINING THE ADDRESS THE COMMAND PROCESSOR
*$ACQUIRED BY PREVIOUSLY CALLING SYSLOAD USING THE NAME
*$IKJGETL.
*$.IN 0
*$INPTR
*$.IN 5
*$POINTER VARIABLE IN WHICH THE ADDRESS OF THE
*$INPUT BUFFER WILL BE RETURNED.
*$.IN 0
*$IOECB
*$.IN 5
*$SPECIFIES THE ADDRESS OF AN ECB.  THIS ADDRESS WILL BE
*$PLACED INTO THE IOPL.
*$.IN 0
*$'ISTACK'
*$.IN 5
*$OBTAIN AN INPUT LINE FROM THE CURRENTLY ACTIVE INPUT
*$SOURCE INDICATED BY THE INPUT STACK.
*$.IN 0
*$'LOGICAL'
*$.IN 5
*$THE INPUT LINE TO BE OBTAINED IS A LOGICAL LINE; THE
*$GETLINE SERVICE ROUTINE IS TO PERFORM LOGICAL LINE
*$PROCESSING.
*$.IN 0
*$'NOWAIT'
*$.IN 5
*$SPECIFIES THAT CONTRO IS TO BE RETURNED TO THE ROUTINE THAT
*$ISSUED THE GETLINE MACRO WHETHER OR NOT A LINE OF INPUT IS
*$AVAILABLE.  IF A LINE OF INPUT IS NOT AVAILABLE,
*$A RETURN CODE OF 12 DECIMAL IS RETURNED TO
*$THE COMMAND PROCESSOR.
*$.IN 0
*$'PHYSICAL'
*$.IN 5
*$THE INPUT LINE TO BE OBTAINED IS A PHYSICAL LINE.  THE
*$GETLINE SERVICE ROUTINE NEED NOT INSPECT THE INPUT
*$LINE.
*$.IN 0
*$RETCODE
*$.IN 5
*$A FIXED BIN(31,0) VARIABLE TO CONTAIN THE RETURN CODE -
*$0 GETLINE HAS COMPLETED SUCCESSFULLY.  THE LINE WAS
*$.IN 10
*$OBTAINED FROM THE TERMINAL.
*$.IN 10
*$4 GETLINE HAS COMPLETED SUCCESSFULLY.  THE LINE WAS
*$RETURNED FROM AN IN-STORAGE LIST.
*$.IN 10
*$8 THE GETLINE FUNCTION WAS NOT COMPLETED.  AN ATTENTION
*$INTERRUPTION OCCURRED DURING GETLINE PROCESSING, AND
*$THE USER'S ATTENTION ROUTINE TURNED ON THE COMPLETION
*$BIT IN THE COMMUNICATIONS ECB.
*$.IN 10
*$12 THE NOWAIT OPTION WAS SPECIFIED AND NO LINE WAS
*$OBTAINED.
*$.IN 10
*$16 EOD - AN ATTEMPT WAS MADE TO GET A LINE FROM
*$AN IN-STORAGE LIST BUT THE LIST HAD BEEN EXHAUSTED.
*$NOTE - THE SOURCE FOR GETLINE HAS BEEN CHANGED SO YOU WILL
*$NEVER RECEIVE THIS RETURN CODE.  INSTEAD, A STACK MACRO IS
*$ISSUED TO DELETE THE TOP ELEMENT IN THE STACK, AND THE
*$GETLINE IS REISSUED FOR YOU.
*$.IN 10
*$20 INVALID PARAMETERS PASSED TO THE GETLINE
*$SERVICE ROUTINE.
*$24 A CONDITIONAL GETMAIN WAS ISSUED BY GETLINE
*$.IN 10
*$FOR INPUT BUFFERS AND THERE WAS NOT SUFFICIENT SPACE
*$TO SATISFY THE REQUEST.
*$.IN 0
*$'TERM'
*$.IN 5
*$OBTAIN AN INPUT LINE FROM THE TERMINAL.  IF TERM IS
*$CODED, THE INPUT STACK IS IGNORED AND REGARDLESS OF THE
*$CURRENTLY ACTIVE INPUT SOURCE, A LINE IS RETURNED
*$FROM THE TERMINAL.
*$.IN 0
*$'WAIT'
*$.IN 5
*$SPECIFIES THAT CONTROL IS TO BE RETURNED TO THE ROUTINE
*$THAT ISSUED THE GETLINE MACRO INSTRUCTION ONLY AFTER IN
*$INPUT MESSAGE HAS BEEN READ.
*$.IN 0
*
*************************************************************$
GETLINE PLIENTRY ,DSA=200,COMPILE=O
         XC    ENTRYFLG(MYLEN),ENTRYFLG
         OI    GTPB+2,X'80'
         LM    6,9,0(1)
         LA    11,LTRTAB1-1
         BAL   0,ILOOP1
         B     GOODRET
         B     BADFORM                 BR IF NOT ENOUGH PARMS
GOODRET  DS    0H
         STM   6,8,IOPL
         LA    2,GTPB
         ST    2,IOPLIOPB              IOPL IS NOW SET
         LTR   9,9                     IS RETCODE LAST PARM
         BC    4,BADFORM               BR IF YES
         LM    2,8,16(1)
         LTR   2,2                   IS INPTR LAST PARM?
         BC    4,DOLINK                BR IF YES
         LA    11,LTRTAB2
         BAL   0,ILOOP1
         B     BADFORM                 BR IF TOO MANY PARMS
         LA    15,LTRTAB2-1
         SR    11,15                   RB = # PARMS - 4
         CH    RB,=H'1'
         BC    8,DOLINK                BR IF DEFAULTS ARE TO BE USED
         LA    0,1(11)                 R0 = # LAST REG TO BE CHECKED
         LA    15,2                    SET PARM REG INDEX
         LA    11,ENTRYFLG DOUBLE-WORD ALIGNED
         ST    11,WORKF
LOOP2    DS    0H
         LA    15,1(15)                BUMP PARM REG INDEX
         CR    15,0
         BC    2,DOLINK                BR IF ALL PARMS CHECKED
         EX    15,LOADR                   RE = A(PARM)
         BC    4,ILOOP2A               BR IF MORE KEYWORDS TO CHECK
         TM    ENTRYFLG,X'80'          WAS 'ENTRY' SPECIFIED
         BC    8,ILOOP2A               BR IF NOT
         LA    1,IOPL
         LR    15,14
         BALR  14,15
         B     SETRET
ILOOP2A  DS    0H
         LA    1,OPTAB
LOOP2A   DS    0H
         CLI   0(1),X'FF'              IS IT END-OF-TABLE?
         BC    8,BADFORM               BR IF YES
         SR    11,11
         IC    11,2(1)                 RB = LEN(KEYWORD) - 1
         EX    11,CLC
         BC    8,ELOOP2A               BR IF OPTION FOUND
         LA    1,4(1,11)               BUMP R1 TO NEXT OPTAB ENTRY
         B     LOOP2A
ELOOP2A  DS    0H
         NI    WORKF+3,X'F8'
         OC    WORKF+3(1),0(1)            WORKF = A(PROPER BYTE IN GTPB
         L     11,WORKF
         OC    0(1,11),1(1)            SET OPTION FLAGS
         B     LOOP2
DOLINK   DS    0H
         LA    1,IOPL
         LINK  EP=IKJGETL
         CH    RF,=H'16'               IS IT EOD FOR IN-CORE LIST?
         BC    7,SETRET                BR IF NOT
         MVC   STCKDSA,STCK
         LA    1,STCKDSA
         ST    1,IOPLIOPB
         STACK DELETE=TOP,MF=(E,IOPL)
         LA    1,GTPB
         ST    1,IOPLIOPB
         LTR   RF,RF                   GOOD STACK?
         BC    8,DOLINK                BR IF YES
SETRET   DS    0H
         L     1,GTPBIBUF              R1 = A(INPUT BUFFER)
         ST    1,0(2)                  SET INPTR
SETRETA  DS    0H
         ST    15,0(9)                 SET RETCODE
EXIT PLIEXIT
BADFORM  DS    0H
         LA    15,20
         B     SETRET
ILOOP1   DS    0H
         SR    14,14
         SR    15,15
LOOP1    DS    0H
         LA    11,1(11)                BUMP TO NEXT LTRTAB ENTRY
         CLI   0(11),X'FF'             END OF TABLE?
         BC    7,LOOP1A                BR IF NOT
         SR    15,15                   INDICATE END-OF-TABLE
RETSUB   DS    0H
         LR    14,0
         BC    15,0(14,15)
LOOP1A   DS    0H
         IC    14,0(11)
         EX    14,LTR                  TEST FOR LAST PARM
         EX    14,LOAD                 LOAD ACTUAL PARM ADDR
         BC    2,LOOP1
*              LAST PARM HAS BEEN INSPECTED
         LA    15,4                    INDICATE LAST PARM
         B     RETSUB
         DS    0D
LTRTAB2  DC    X'22334455667788FF'
         DS    0D
LTRTAB1  DC    X'6677FF'
OPTAB    DS    0C
*                BYTE OFFSET DSECT FROM ENTRYFLG
*                      MASK FOR OI INSTRUCTION
*                            LENGTH OPTION NAME - 1
*                                  OPTION NAME
         DC    X'00',X'00',X'05',C'ISTACK'
         DC    X'04',X'10',X'03',C'TERM'
         DC    X'00',X'00',X'06',C'LOGICAL'
         DC    X'04',X'20',X'07',C'PHYSICAL'
         DC    X'00',X'00',X'03',C'EDIT'
         DC    X'06',X'01',X'03',C'ASIS'
         DC    X'00',X'00',X'03',C'WAIT'
         DC    X'06',X'10',X'05',C'NOWAIT'
         DC    X'00',X'80',X'04',C'ENTRY'
         DC    X'FF' END-OF-TABLE
         DS    0H
LTR      LTR   0,0
LOAD     L     0,0(0)
LOADR    LR    14,0
CLC      CLC   0(0,14),3(1)
STCK     STACK DELETE=TOP,MF=L
STLEN    EQU   *-STCK
         LTORG
DSA      DSECT
         DS    0D
ENTRYFLG DS    F SET TO X'80' IF ENTRY SPECIFIED
GTPB     DS    0F
         DS    F FLAGS
*              BYTE 1
*              ..0. .... LOGICAL LINE
*              ..1. .... PHYSICAL LINE
*              ...0 .... ISTACK
*              ...1 .... TERM
*              XX.. XXXX RESERVED
*              BYTE 2
*              XXXX XXXX RESERVED
*              BYTE 3
*              1... .... ALWAYS 1 FOR TGET
*              ...0 .... WAIT
*              ...1 .... NOWAIT
*              .... ..00 EDIT
*              .... ..01 ASIS
*              .XX. XX.. RESERVED
*              BYTE 4
*              XXXX XXXX
GTPBIBUF DS    F IKJGETL FILLS IN A(INPUT BUFFER)
IOPL     DS    0F
IOPLUPT  DS    F
IOPLECT  DS    F
IOPLECB  DS    F
IOPLIOPB DS    F
WORKF    DS    F
STCKDSA  DS    CL(STLEN)
MYLEN    EQU   *-ENTRYFLG
DSALEN   EQU   *-DSA
         END
