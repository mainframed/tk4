 /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
 /* DENT017 - END */
         % DCL @PROCNAME CHAR;
         % DCL @RENTNAME CHAR;
         % @PROCNAME = 'RENT';
         % @RENTNAME = 'DENT017';
         % INCLUDE DENTSUB;
         DCL 1 RUNDATA UNALIGNED BASED(RUNPTR),
             /* RUN STACK ELEMENT - EACH ELEMENT REPRESENTS
                A RUN CURRENTLY IN PROGRESS. */
           2 RUNPOP PTR,
             /* PTR TO PRIOR RUN STACK ELEMENT */
           2 RUNRHEL PTR,
             /* PTR TO RECHDR ASSOCIATED WITH THIS RUN */
           2 RUNCUR PTR,
             /* PTR TO CURRENT REC STRUCTURE */
           2 LABI FIXED BIN(31,0),
             /* INDEX TO THE HIGHEST ELEMENT USED IN RHAIDLBT */
           2 LABTAB(256),
            3 $KEY FIXED BIN(31,0),
            3 $LAB CHAR(8);
         DCL (SETCAPS,SYSCALL) ENTRY;
         DCL OPCODE FIXED BIN(15,0) STATIC INIT(12); /* STOP */
         DCL RETCODE FIXED BIN(31,0);
         DCL L FIXED BIN(15,0);
         DCL 1 BLSTR BASED(BLPTR),
           2 NBLPTR PTR,
           2 BLCMDLEN FIXED BIN(15,0),
           2 BLCMD CHAR(L REFER(BLCMDLEN)) VAR;
         DCL (SAVPTR,TRH) PTR;
         DCL NOSAVE CHAR(6) STATIC INIT('NOSAVE');
         DCL SAVE CHAR(4) STATIC INIT('SAVE');
         IF PARY(2)^=''
           THEN DO;
             CALL SETCAPS(PARY(2));
             IF PARY(2)=SUBSTR(SAVE,1,MIN(4,LENGTH(PARY(2))))
               THEN DO;
                 CMDDATA='SE';
                 RHRC = 0;
                 RETURN;
                 END;
             IF PARY(2)=SUBSTR(NOSAVE,1,MIN(6,LENGTH(PARY(2))))
               THEN SAVEFLAG,RHDBSAVE = '0'B;
               ELSE DO;
                 MSGDATA='INVALID OPERAND';
                 RHRC = 8;
                 RETURN;
                 END;
             END;
         IF SAVEFLAG × RHDBSAVE
           THEN DO;
             MSGDATA='ENTER "SAVE" SUBCOMMAND OR "END NOSAVE"';
             RHRC = 8;
             RETURN;
             END;
         IF TERMFLAG
           THEN CALL SYSCALL(TERMEP,OPCODE,BUF,MSGDATA,RETCODE,TERMECB);
             /* GO TERMINATE SESSION */
         DO RUNPTR = RHRUNSTK REPEAT RUNPOP
           WHILE(RUNPTR ^= NULL)
           UNTIL(RUNRHEL = RHPTR);
           END;
         IF RUNPTR ^= NULL
           THEN DO RUNPTR = RHRUNSTK REPEAT RHRUNSTK
               WHILE(RHRUNSTK^=NULL);
               RHRUNSTK = RUNPOP;
               FREE RUNDATA;
               END;
         IF RHCST^=0
           THEN I=#CMD('LINES',RHPTR,SUBENT,RHHDRPT);
         IF RHCST^=0
          THEN IF RHLST^=NULL
           THEN I=#CMD('LINES '××RHLST->RHNAME,RHPTR,SUBENT,RHHDRPT);
           ELSE IF RHNXT^=NULL
            THEN I=#CMD('LINES '××RHNXT->RHNAME,RHPTR,SUBENT,RHHDRPT);
         IF RHLST^=NULL
           THEN RHLST->RHNXT = RHNXT;
           ELSE NXTRHEL = RHNXT;
         IF RHNXT ^= NULL
           THEN RHNXT->RHLST = RHLST;
           ELSE LSTRHEL = RHLST;
         IF OUTDDN ^= NULL
           THEN IF BUFPTR ^= ADDR(OUTDDN->ALCRECL)
             THEN DO;
               FREE BUFSTR;
               BUFPTR = NULL;
               END;
         IF INDDN ^= NULL
           THEN DO;
             IF ^SUBSTR(INDDN->ALCFLAG,5,1) /* FREE AT END? */
               THEN CALL #DOFRE(INDDN); /* CALL DOFRE */
             IF INDDN^=OUTDDN & OUTDDN^=NULL
               THEN IF ^SUBSTR(OUTDDN->ALCFLAG,5,1) /* FREE AT END? */
                 THEN CALL #DOFRE(OUTDDN); /* CALL DOFRE */
             END;
           ELSE IF BUFPTR ^= NULL
             THEN FREE BUFSTR;
         /* NOW FREE LIST OF RECORDS */
         RECPTR = NXTHDR;
         DO WHILE(RECPTR^=HDPTR);
           SAVPTR=NXTPTR;
           FREE REC;
           RECPTR = SAVPTR;
           END;
         /* NOW FREE LIST OF SUBCOMMANDS */
         BLPTR = BLHDR;
         DO WHILE(BLPTR ^= NULL);
           SAVPTR = NBLPTR;
           FREE BLSTR;
           BLPTR = SAVPTR;
           END;
         IF RHLST^=NULL
           THEN SAVPTR = RHLST;
           ELSE SAVPTR = RHNXT;
         FREE RECHDR;
         RHPTR = SAVPTR;
         RHRC = 0;
         DO TRH=NXTRHEL REPEAT TRH->RHNXT
           WHILE(TRH^=NULL) UNTIL(^TRH->RHSUPSW);
           END;
         IF TRH^=NULL
           THEN RETURN;
         /* THERE IS NOTHING LEFT BUT SUPPORT DATA SETS - SCHEDULE
            "END NOSAVES" FOR ALL OF THEM */
         L=10;
         DO TRH=NXTRHEL REPEAT TRH->RHNXT WHILE(TRH^=NULL);
           ALLOCATE BLSTR;
           NBLPTR=TRH->BLHDR;
           BLCMD='END N';
           TRH->BLHDR=BLPTR;
           END;
         END;
