GEXPAND  START 0
********************************************************************
*                  ON ENTRY, THIS RTNE EXPECTS REG1 TO CONTAIN THE *
*              ADDR OF TWO CONTIGUOUS FULLWORDS, THE FIRST         *
*              CONTAINING THE ADDR OF A CHARACTER STRING COMPRESSED*
*              BY RTNE GCOMPR, AND THE SECOND CONTAINING THE       *
*              ADDR OF AN AREA INTO WHICH THE EXPANDED CHAR STR    *
*              IS TO BE PLACED.  NOTE THAT THE EXPANDED CHAR STR   *
*              WILL INCLUDE THE THREE BYTES OF HEX ZEROES ADDED    *
*              TO THE FRONT OF THE STRING BY RTNE GCOMPR.  HOWEVER,*
*              THE EXPANDED STR LENGTH STORED IN THE HALFWORD AT   *
*              OFFSET +2 OF THE COMPRESSED STR DOES NOT INCLUDE    *
*              THESE 3 EXTRA BYTES.                                *
********************************************************************
         TGSREQU
         USING *,RF
         STM   RE,RC,12(RD)
         LM    RB,RC,0(R1)             RB = ADDR COMPRESSED STR
*                                      RC = ADDR EXPANDED STR
         LH    RA,0(RB)                RA = COMPRESSED STR LENGTH
         SH    RA,=H'4'                     LESS INITIAL 4
         LA    RB,4(RB)                RB = ADDR 1ST CTL TAB
         SR    R9,R9                   R9 = 0
         LH    R8,=H'-2'               R8 = -2
         SR    R7,R7                   R7 = 0
LOOP     EQU   *
         MVC   0(1,RC),0(RB)           MOVE REP CHAR TO EXPANDED STR
         SR    R7,R7                                                TGS
         IC    R7,1(RB)                R7 = REP CNT, WHICH IS EITHER
*                                           0 OR GT 2
         BXLE  R7,R8,NOREP             SUBTRACT 2 FROM REP CNT AND
*                                           BR IF THE RESULT IS LE 0
         EX    R7,MVCREP               PROPOGATE REP CHAR IN EXP STR
         B     BUMP
NOREP    EQU   *
         LR    R7,R8                   R7 = -2
BUMP     EQU   *
         LA    RC,2(R7,RC)             RC = NXT AVLBL BYTE IN EXP ST
         SR    R7,R7                                                TGS
         IC    R7,2(RB)                R7 = NON-REPEAT CNT
         SH    R7,=H'1'                     LESS 1 FOR EX
         BC    10,NONREP               BR IF R7 GE 0
         LH    R7,=H'-1'               R7 = -1
         B     BUMP2
NONREP   EQU   *
         EX    R7,MVCNON               MOVE NONREP CHARS TO EXP STR
BUMP2    EQU   *
         LA    RC,1(R7,RC)             RC = NXT AVLBL BYTE IN EXP ST
         LA    RB,4(R7,RB)             RB = ADDR NXT CTL TAB
         LA    R7,4(R7)                R7 = LEN TO DECREMENT
         SR    RA,R7                   DECREMENT LENGTH REMAINING
         BC    2,LOOP                  BR IF NOT FINISHED
DONE     EQU   *
         LM    RE,RC,12(RD)
         BR    RE
         DS    0H
MVCREP   MVC   1(0,RC),0(RC)
MVCNON   MVC   0(0,RC),3(RB)
         LTORG
         END
