 /* SPLASAR */
 SPLASAR:  PROC(FPT) RECURSIVE;
    DCL FPT PTR;
 /* THIS SUBROUTINE IS INVOKED WHENEVER THE NUMBER OF ASARELS IN A
 GROUP EXCEEDS THE THRESHOLD VALUE ASARTHRESH.  SPLASAR WILL SPLIT
 THE GROUP, AND WILL UPDATE THE HIGHER LEVEL INDICES AS NECESSARY.
 FPT POINTS TO THE FIRST ASARELS IN THE GROUP TO BE SPLIT. */
    % INCLUDE ASARDCL;
    DCL ALCASAR ENTRY(PTR,PTR,PTR,BIT(8))
      RETURNS(PTR);
    DCL (IPT,LPT,TPT) PTR;
    DCL SW BIT(1);
    /* FIRST DEQUEUE THE LAST ASARELS IN THIS GROUP */
    LPT=FPT->ASARLGP; /* LPT = A(LAST ASARELS IN GROUP) */
    FPT->ASARLGP=LPT->ASARLP; /* SET NEW LAST-IN-GROUP */
    FPT->ASARLGP->ASARNP=NULL; /* UPDATE ASARNP IN LAST-IN-GROUP */
    FPT->ASARIXC=FPT->ASARIXC-1; /* DECREMENT GROUP COUNT */
    /* NOW SET UP LPT->ASARELS AS SOLE MEMBER OF NEW GROUP */
    LPT->ASARNP,LPT->ASARLP=NULL;
    LPT->ASARFGP,LPT->ASARLGP=LPT;
    LPT->ASARIXC=1;
    LPT->ASARIXP=NULL; /* NOT NECESSARY, BUT TIDY */
    /* NOW SET UP HIGHER LEVEL INDEX ASARELS AS NECESSARY */
    IF SUBSTR(FPT->ASARIXP->ASARELFL,1,1) /* IS HIGHER LEVEL INDEX? */
      THEN DO;
        /* NOW SET IPT TO INDEX ASARELS BEHIND WHICH NEW INDEX ASARELS
        IS TO BE ADDED. */
        IPT=FPT->ASARIXP;
         /* NOW UPDATE HIGH KEY IN INDEX ASARELS */
        IPT->ASARELIX=FPT->ASARLGP->ASARELIX;
        END;
      ELSE DO;
        /* IF HIGHER LEVEL NOT INDEX, INDEX MUST BE CREATED. */
        FPT->ASARIXP->ASAREL=NULL;
        IPT=ALCASAR(FPT->ASARLGP->ASARELIX, /* PSCP */
           FPT->ASARIXP,                    /* MPTR */
           NULL,                            /* QPTR */
          '10000000'B);                     /* FL */
        IPT->ASAREL=FPT; /* POINT INDEX ASARELS TO FIRST-IN-GROUP */
        FPT->ASARIXP=IPT; /* POINT FIRST-IN-GROUP AT INDEX ASARELS */
        END;
    /* IPT NOW POINTS TO INDEX ASARELS BEHIND WHICH NEW INDEX ASARELS
        IS TO BE ADDED */
    SW='0'B;
    IF IPT->ASARNP^=NULL
      THEN IF IPT->ASARNP->ASAREL->ASARIXC < ASARTHRESH
        THEN SW='1'B;
    /* SW ON MEANS AN INDEX ASARELS EXISTS WHICH CAN BE USED */
    IF SW
        THEN DO;
          /* MAKE THE NEW ASARELS FIRST IN NEXT GROUP */
          IPT=IPT->ASARNP; /* POINT IPT AT NEXT INDEX ASARELS */
          LPT->ASARNP=IPT->ASAREL;
          IPT->ASAREL=LPT;
          LPT->ASARNP->ASARLP=LPT;
          LPT->ASARIXC=LPT->ASARNP->ASARIXC+1;
          LPT->ASARIXP=IPT;
          LPT->ASARLGP=LPT->ASARNP->ASARLGP;
          DO TPT=LPT REPEAT TPT->ASARNP WHILE(TPT^=NULL);
            TPT->ASARFGP=LPT;
            END;
          END;
        ELSE DO;
          /* MAKE NEW GROUP */
          TPT=ALCASAR(LPT->ASARELIX, /* PSCP */
             IPT->ASARIXP,           /* MPTR */
             IPT,                    /* QPTR */
             '10000000'B);           /* FL */
          TPT->ASAREL=LPT; /* POINT NEW INDEX ASARELS TO NEW GROUP */
          LPT->ASARIXP=TPT; /* POINT NEW GROUP TO INDEX ASARELS */
          END;
    END SPLASAR;
