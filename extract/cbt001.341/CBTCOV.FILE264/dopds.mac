 /* DOPDS */
 /*
0*$.HE GENERALIZED SUBROUTINES - DOPDS
0*$.HE READ AN ENTIRE PDS
0*$.PL 55
0*$.PN 0
0*$.PA
0*$.SS
0*$.NF
0*$04/08/80
0*$AUTHOR:  T. SMITH
0*$SOURCE MODULE NAME:  DOPDS
0*$DOCUMENTATION ID:  0*$
0*$.FI L
0*$.SP 5
0*$THE DOPDS SUBROUTINE PROVIDES A FACILITY FOR READING AN
0*$ENTIRE PARTITIONED DATA SET.  CALL FORMAT IS AS FOLLOWS:
0*$.SP 1
0*$.IN 5
0*$.NF
0*$DCL DOPDS ENTRY(CHAR(8),PTR,CHAR(32767) VAR);
0*$DCL DDN CHAR(8) INIT('IN');
0*$DCL MEM CHAR(8) BASED(MEMPTR);
0*$DCL REC CHAR(32767) VAR;
0*$DO UNTIL(MEMPTR=NULL);
0*$ CALL DOPDS(DDN,MEMPTR,REC);
0*$ IF MEMPTR^=NULL
0*$  THEN PUT SKIP LIST(MEM,REC);
0*$ END;
0*$.FI L
0*$.IN 0
0*$.SP 1
0*$THE VARIABLE DDN IN THE EXAMPLE ABOVE IS SET TO THE DDNAME
0*$(FILE NAME IN TSO) UNDER WHICH THE PARTITIONED DATA SET IS
0*$ALLOCATED TO THE JOB STEP.
0*$AT EACH INVOCATION, DOPDS WILL FILL REC WITH THE NEXT RECORD
0*$FROM THE CURRENT PARTITIONED DATA SET MEMBER BEING PROCESSED.
0*$WHEN THE FIRST RECORD OF THE NEXT MEMBER OF THE PARTITIONED
0*$DATA SET IS BEING RETURNED, MEMPTR WILL BE SET TO THE ADDRESS
0*$OF THE DIRECTORY ENTRY FOR THAT MEMBER.  NOTE THAT IN THE
0*$EXAMPLE ABOVE, ONLY THE MEMBER NAME, WHICH IS FIRST IN EACH
0*$DIRECTORY ENTRY, IS BEING EXAMINED.  HOWEVER, A MORE ELABORATE
0*$STRUCTURE COULD HAVE BEEN DECLARED BASED ON MEMPTR TO PROCESS
0*$OTHER INFORMATION IN THE DIRECTORY.
 */
 DOPDS:  PROC(DDNAME,MEMPTR,INREC);
         DCL DDNAME CHAR(8);
         DCL MEMNAM CHAR(8) STATIC;
         DCL INREC CHAR(32767) VAR;
         DCL MEMPTR PTR;
         DCL NULL BUILTIN;
         DCL TPTR PTR STATIC;
         DCL BUFPTR PTR STATIC,
             BUFPADJ FIXED BIN(31,0) DEF BUFPTR;
         DCL 1 LRECV BASED(BUFPTR),
              2 BYTCNT FIXED BIN(15,0),
              2 RECSTR CHAR(32767);
         DCL BCNTSAV FIXED BIN(15,0) STATIC INIT(0);
         DCL BUFFER CHAR(32767) VARYING STATIC;
         DCL LRECF CHAR(32767) BASED(BUFPTR);
         DCL RECL FIXED BIN(15,0) STATIC;
         DCL CURREC CHAR(32767) BASED(CURPTR);
         DCL CURPTR PTR STATIC,
             CURADJ FIXED BIN(31,0) DEF CURPTR;
         DCL DCBPTR PTR STATIC;
         DCL RETCODE FIXED BIN(31,0);
         DCL 1 DCB2 BASED(DCBPTR),
              2 DCBPAD1 CHAR(36),
              2 DCBRECFM BIT(8),
              2 DCBPAD2 CHAR(45),
              2 DCBLRECL FIXED BIN(15,0);
         DCL FTMSW BIT(1) STATIC INIT('1'B);
         ON CONDITION(SYSEOD) GOTO EOD;
         IF FTMSW
           THEN DO;
             FTMSW = '0'B;
             CALL SYSDCBP(DCBPTR,DDNAME);
             CALL SYSOPEN(DCBPTR,'INPUT');
             SIGNAL CONDITION(SYSEOD);
             END;
         GO TO NXT;
 EOD:
         MEMNAM = GETDIR;
         IF MEMNAM = HIGH(8)
              THEN GO TO EOJ;
         CALL SYSFIND(DCBPTR,MEMNAM,'D',RETCODE);
         IF RETCODE ^= 0
              THEN SIGNAL ERROR;
 NXT:
         CALL NXTREC(INREC);
         RETURN;
 EOJ:
         CALL SYSCLOS(SYSDCBP);
         FTMSW = '1'B;
         INREC='';
         MEMPTR = NULL;
         RETURN;
 GETDIR:  PROC RETURNS(CHAR(8));
         DCL INDIR FILE RECORD INPUT ENV(F RECSIZE(256) BLKSIZE(256));
         DCL BUFPTR PTR STATIC,
             BUFPADJ FIXED BIN(31,0) DEF BUFPTR;
         DCL BYTCNT FIXED BIN(15,0) BASED(BUFPTR);
         DCL BCNTSAV FIXED BIN(15,0) STATIC INIT(0);
         DCL 1 ENTRY BASED(BUFPTR),
              2 MEMNAM CHAR(8),
              2 TTR CHAR(3),
              2 CFIELD,
               3 CF1 BIT(3),
               3 CF2 BIT(5);  /* USER DATA HALFWORDS */
         DCL MYNAME CHAR(8);
         ON ENDFILE(INDIR) GO TO DIREOF;
         DCL INITSW BIT(1) STATIC INIT('1'B);
         IF INITSW
              THEN DO;
                   INITSW = '0'B;
                   OPEN FILE(INDIR) TITLE(DDNAME);
                   END;
         IF BCNTSAV < 3
              THEN GO TO READIR;
         J = 12 + 2 * CF2;
         BUFPADJ = BUFPADJ + J;
         BCNTSAV = BCNTSAV - J;
         IF BCNTSAV > 2
              THEN GO TO RETURN;
 READIR:
         READ FILE(INDIR) SET(BUFPTR);
         BCNTSAV = BYTCNT;
         BUFPADJ = BUFPADJ + 2;
         GO TO RETURN;
 RETURN:
         MYNAME = MEMNAM;
         MEMPTR = BUFPTR;
 RETURNA:
         RETURN(MYNAME);
 DIREOF:
         CLOSE FILE(INDIR);
         INITSW='1'B;
         MYNAME = HIGH(8);
         GO TO RETURNA;
         END;
 NXTREC:  PROC(REC);
         DCL REC CHAR(32767) VARYING;
         IF BCNTSAV = 0
              THEN DO;
                   CALL SYSREAD(DCBPTR,BUFFER);
                   BCNTSAV = LENGTH(BUFFER);
                   BUFPTR = ADDR(BUFFER);
                   BUFPADJ = BUFPADJ + 2;
                   IF SUBSTR(DCBRECFM,1,2) = '01' /* RECFM=V */
                        THEN DO;
                             BUFPADJ = BUFPADJ + 4;
                             BCNTSAV = BCNTSAV - 4;
                             END;
                   END;
         IF SUBSTR(DCBRECFM,1,2) = '01' /* RECFM=V */
              THEN DO;
                   RECL = BYTCNT - 4;
                   CURADJ = BUFPADJ + 4;
                   BCNTSAV = BCNTSAV - BYTCNT;
                   BUFPADJ = BUFPADJ + BYTCNT;
                   END;
         ELSE DO;
                   RECL = DCBLRECL;
                   CURADJ = BUFPADJ;
                   BCNTSAV = BCNTSAV - DCBLRECL;
                   BUFPADJ = BUFPADJ + DCBLRECL;
                   END;
         REC = SUBSTR(CURREC,1,RECL);
         END;
         END;
