JS       TITLE 'JSTATUS - STATUS COMMAND PROCESSOR'
JSTATUS  CSECT
***********************************************************************
*                                                                     *
*FUNCTION:                                                            *
*   THE ROUTINE PROCESSES A USER'S REQUEST FOR INFORMATION ABOUT      *
*   THE JOBS WHICH THE USER HAS SUBMITTED. IF A JOBNAME IS ENTERED    *
*   WITH THE COMMAND, THEN THE STATUS OF THE JOB IS DETERMINED.       *
*   THE USER TO INDICATE THE STATUS OF THE JOB:                       *
*   1. NO JOB IN SYSTEM - NO JOB NAME ON COMMAND AND NO JOBS ARE IN   *
*      THE SYSTEM.                                                    *
*   2. JOB NOT FOUND - JOBNAME ON COMMAND BUT THE JOB IS NOT IN       *
*      THE SYSTEM.                                                    *
*   3. NORMAL END - JOB COMPLETED NORMALLY.                           *
*   4.  ABNORMAL END - JOB COMPLETED ABNORMALLY.                      *
*   5.  SCHEDULED ( ) - JOB IS ON QUEUE, AT POSITION WITHIN THE       *
*      PARENTHESES.                                                   *
*   6. EXECUTING - JOB IS EXECUTING.                                  *
*   7. NOT QUEUED - JOB IS NOT QUEUED.                                *
*                                                                     *
*ENTRY POINTS:                                                        *
*   JSTATUS IS THE ONLY ENTRY POINT.                                  *
*                                                                     *
*INPUT:                                                               *
*   INPUT IS THE FOLLOWING PARAMETER LIST ADDRESSED BY REGISTER 1:    *
*   (1) ADDRESS OF THE TUB                                            *
*   (2) ADDRESS OF THE AVT                                            *
*                                                                     *
*OUTPUT:                                                              *
*   THE OUTPUT OF THIS ROUTINE CONSISTS OF A MESSAGE, OR SEVERAL      *
*   MESSAGES, GIVING JOB STATUS INFORMATION.                          *
*                                                                     *
*EXTERNAL REFERENCES:                                                 *
*         IEFLOCDQ - TO SEARCH OS JOB QUEUE                           *
*                                                                     *
*TABLES/WORK AREAS:                                                   *
*   18 WORD SAVE AREA                                                 *
*                                                                     *
*NOTES:                                                               *
*   THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL             *
*   REPRESENTATION OF THE EXTERNAL CHARACTER SET WHICH IS             *
*   EQUIVALENT TO THE ONE USED AT ASSEMBLY TIME. THE CODING           *
*   HAS BEEN ARRANGED SO THAT THE REDEFINITION OF 'CHARACTER'         *
*   CONSTANTS, BY REASSEMBLY, WILL RESULT IN A CORRECT MODULE         *
*   FOR THE NEW DEFINITIONS.                                          *
*                                                                     *
***********************************************************************
         EJECT
*        REGISTER EQUATES
         SPACE
REG0     EQU   0                        SYSTEM REGISTER
REG1     EQU   1                        POINTER TO PARM LIST
REG2     EQU   2                        CONTAINS RETURN CODE
REG3     EQU   3                        WORK REGISTER
REG4     EQU   4                        WORK REGISTER
OPER     EQU   4                        POINTER TO OPERAND
LINK     EQU   5                        INTERNAL LINK REGISTER
BUFREG   EQU   6                        POINTER TO USER BUFFER
CLBREG   EQU   7                        POINTER TO CLB
RJCTREG  EQU   8                        POINTER TO RJCT BUFFER
PPTREG   EQU   9                        POINTER TO PPT
AVTREG   EQU   10                       POINTER TO AVT
TUBREG   EQU   11                       POINTER TO THE TUB
BASEREG  EQU   12                       BASE REGISTER
REG13    EQU   13                       POINTER TO SAVE AREA
BRANCH   EQU   14                       RETURN POINT
RETREG   EQU   15                       RETURN CODE
         REGEQU
         EJECT
*        NUMERIC EQUATES
         SPACE 1
ZERO     EQU   0
ONE      EQU   1
TWO      EQU   2
THREE    EQU   3
FOUR     EQU   4
SIX      EQU   6
SEVEN    EQU   7
EIGHT    EQU   8
RC8      EQU   8
TEN      EQU   10
ELEVEN   EQU   11
TWELVE   EQU   12
TWENTY   EQU   20
         SPACE 1
ABCOMP   EQU   X'10'                    ABNORMAL COMPLETION
COMP     EQU   X'40'                    COMPLETE
FIRST    EQU   X'28'                    CODE FOR 1ST JOB QUEUE
GBL      EQU   X'05'                    JBTBLS FILE NUMBER
HEXFF    EQU   X'FF'                    HEX FF FOR COMPARES
HEX00    EQU   X'00'                    USED TO ZERO ONE BYTE FIELD
LASTPARM EQU   X'80'                    LAST PARAMETER BIT
L8       EQU   X'08'                    LENGTH OF 8
MAXIN    EQU   X'36'                    CODE FOR MAXIMUM JOB QUEUE
MAXOUT   EQU   X'28'                    CODE FOR MAXIMUM SOUT QUEUE
OFF      EQU   X'3F'                    PAREN BITS - 0 AND 1
PAREN1   EQU   X'80'                    LAST ELEMENT IN PARENTHESES
PAREN2   EQU   X'40'                    PARENTHESES INDICATOR
SIGN     EQU   X'F0'                    EBCDIC SIGN FOR NUMERIC
         EJECT
*        SAVE REGISTERS AND SET BASE REGISTER
         SPACE 1
         PRIME
         LR    R11,R1              SAVE PARM REG
         USING CPPL,R11            SET ADDRESABILITY FOR PARMS
         LA    R10,PPLAREA         SET AREA FOR PARSE PARM LIST
         USING PPL,R10             SET ADDRESABILITY
         MVC   PPLUPT,CPPLUPT      STORE UPT POINTER
         MVC   PPLECT,CPPLECT      STORE ECT POINTER
         LA    R7,PPLECBX
         ST    R7,PPLECB           STORE ECB ADDR
         MVC   PPLPCL,PCLADCON     ADDR OF PARSE DESC
         LA    R7,PARSEPDL
         ST    R7,PPLANS
         MVC   PPLCBUF,CPPLCBUF    ADDR OF CMD BUFFER
         SR    R7,R7               CLEAR R7
         ST    R7,PPLUWA           CLEAR USER WORK AREA ADDR.
*        LINK TO PARSE
         LINK  EP=IKJPARS,MF=(E,(R10))
         LTR   R15,R15             PARSE RETURN OK ?
         BNZ   0(R0)
         L     R9,PARSEPDL         SET ADDRESABILITY FOR PARSE
         USING IKJPARMD,R9
         CLI   ALL+1,X'00'         IS ALL KEYWORD SPECIFIED ?
         BE    *+8                 BRANCH IF NOT SPECIFIED
         MVI   ALLSW,X'FF'         SET ALL SWITCH
         EJECT
*        INITIALIZE
         SPACE 1
         MVI   SWITCHES,HEX00           SET ALL SWITCHES TO 0
         MVC   QCR(FOUR),ZEROS          INITIALIZE QCR TO 0
         MVI   LENJOB,L8                LENGTH OF JOBNAME
         L     OPER,8(R9)               POINT TO OPERAND
         SPACE 2
         CLC   12(2,R9),H8              IS OPERAND LENGTH > 8 ?
         BH    EXCESS                   IF YES, ERROR IN OPERAND
         SR    REG3,REG3
         LH    REG3,12(R9)             LENGTH OF OPERAND
         BCTR  REG3,ZERO                DECREMENT LENGTH - FOR EX
         EX    REG3,MOVEJOBN            EXECUTE MOVE
         B     BUILDLST                 CHECK STATUS
         SPACE 1
*        MOVE JOB NAME FROM PPT INTO TUBGBLKY
MOVEJOBN MVC   JOBNAME(*-*),0(OPER)
         EJECT
*        BUILD PARAMETER LIST FOR IEFLOCDQ
         SPACE 1
BUILDLST DS    0H
         LA    REG3,JOBNAME
         ST    REG3,LOCPARM1            1ST PARM POINTS TO JOB NAME
         LA    REG3,N
         ST    REG3,LOCPARM2            2ND PARM POINTS TO NO. OF JOBS
         LA    REG3,QCR
         ST    REG3,LOCPARM3            3RD PARM POINTS TO QCR
         LA    REG3,POSITION
         ST    REG3,LOCPARM4            4TH PARM POINTS TO INFO AREA
         LA    REG3,NUMJOBS
         ST    REG3,LOCPARM5            5TH PARM POINTS TO NO. OF JOBS
*        CHECK FOR JOB EXECUTING
         SPACE 1
EXEC     DS    0H
         USING CIBCVT,REG3
         LA    REG3,CVTPTR              GET POINTER TO CVT
         L     REG3,ZERO(REG3)          BASE OF CVT
         L     REG3,CVTHEAD
TESTTCB  LTR   REG3,REG3      END OF TCB'> ?
         BZ    LOC1           YES
         L     REG4,12(REG3)  GET TIOT PTR
         CLC   JOBNAME(8),0(REG4)     IS JOB EXECUTING ?
         BE    EXECUTE        YES IT IS
         CLC   JOBNAME(8),8(REG4) IS JOB EXECUTING ?
         BE    EXECUTE        YES IT IS
         L     REG3,116(REG3) TCBTCB
         B     TESTTCB
         SPACE 2
*        INTERFACE WITH IEFLOCDQ
         SPACE 1
LOC1     DS    0H
         OI    MODBR2+1,X'F0'      SET MODBR2
         LOAD  EP=LOC
         ST    REG0,LOCPTR         SAVE LOC ADDRESS
         MVI   QCR+3,FIRST              SET QUEUE TO 1ST INPUT QUEUE
CALLOC   DS    0H
         MVC   POSITION(FOUR),ZEROS     INITIALIZE POSITION TO 0
         LA    REG1,LOCPARMS
         L     R15,LOCPTR          GET LOC ADDR
         BALR  R14,R15
         LTR   RETREG,RETREG
         BNZ   0(R0)                    ABEND IF NOT ZERO
         SPACE 2
         CLC   POSITION(FOUR),ZEROS     WAS A JOB FOUND ON QUEUE ?
         BNE   QPOS                     IF YES, SEND QUEUE POSITION MSG
CHKQCR   CLI   QCR+3,ONE                WAS HOLD QUEUE CHECKED ?
         BE    NOTFOUND                 IF YES, CHK JOB NOT FOUND
         CLI   QCR+3,MAXIN               ALL JOB QUEUES SEARCHED ?
MODBR    BH    SOUT                     IF YES, TEST SOUT QUEUE
ADDTOQCR L     REG3,QCR                 PICK UP QUEUE NUMBER
         LA    REG3,ONE(REG3)           INCREMENT BY 1
         ST    REG3,QCR                 REPLACE QUEUE NO. IN PARMLIST
         B     CALLOC                   SEARCH QUEUE
SOUT     BC    0,CHKSOUT      MODIFIED BRANCH
         LA    REG3,2
         ST    REG3,QCR       LOOK IN SYSOUT QUEUES
         OI    SOUT+1,X'F0' RESET BRANCH
         OI    MODBR+1,X'F0'  RESET BRANCH
         B     CALLOC
CHKSOUT  CLI   QCR+3,MAXOUT   ALL OUTPUT QUEUES SEARCHED ?
         BNH   ADDTOQCR       NO, CONTINUE SEARCH
         SPACE 1
HOLDQ    DS    0H
         MVI   QCR+3,ONE                SET QUEUE TO HOLD QUEUE
         B     CALLOC                   SEARCH QUEUE
         EJECT
*        SEND MESSAGE
         SPACE 1
SENDMSG  DS    0H
         MVC MSGAREA(8),JOBNAME    SAVE JOBNAME IN OUTPUT MESSAGE
         OI    SENDSW,X'01'        SET SEND SWITCH
         TPUT  MSGAREA,40
         CLI   ALLSW,X'00'         ALL SWITCH SET ?
         BE    RETURN              NO, BRANCH
MODBR2   BC    0,CHKQCR            CONTINUE QUEUE SEARCH
         B     LOC1                GO TO QUEUE SEARCH
RETURN   DELETE EP=LOC
         IKJRLSA (R9)
         TERME
         SPACE 2
*        'EXECUTING' MESSAGE
         SPACE 1
EXECUTE  DS    0H
         MVC   MSGAREA+10(L'EX),EX STORE EXECUTING MSG IN
         B     SENDMSG
         SPACE 2
*        'EXCESSIVE' MESSAGE
         SPACE 1
EXCESS   DS    0H
         MVC   MSGAREA+10(L'EXC),EXC STORE EXCESSIVE IN MGJSG
         B     SENDMSG
*        'JOB NOT FOUND' MESSAGE
         SPACE 1
NOTFOUND DS    0H
         OI    ALLSW,X'00'         RESET ALL OPTION
         CLI   SENDSW,X'00'        WAS ANY MSG SEND ?
         BNE   RETURN              YES, BRANCH
         MVC   MSGAREA+10(L'NOTFND),NOTFND  STORE NOT FOUND MSG
         B     SENDMSG
*        'ON QUEUE' MESSAGE
         SPACE 1
QPOS     DS    0H
         MVC   MSGAREA+10(L'SCHED),SCHED  SAVE SCHED IN MESSAGE
         L     REG3,POSITION
         CVD   REG3,CONVERT
         UNPK  MSGAREA+37(2),CONVERT+6(2)
         OI    MSGAREA+38,SIGN     SET SIGN BITS
         L     REG3,QCR            GET QCR NUMBER
         MH    REG3,H15
         LA    REG3,QTABLE(REG3)   GET POSITION IN TABLE
         MVC   MSGAREA+16(15),0(REG3) STORE IN MESSAGE
         B     SENDMSG
*        DEFINE CONSTANTS AND STORAGE
         SPACE 1
         DS    0F
ZEROS    DC    F'0'
N        DC    F'1'
PPLAREA  DS    8F
PCLADCON DC    V(PCL)
PARSEPDL DS    F
MSGAREA  DC    CL40' '             OUTPUT MESSAGE AREA
H4       DC    H'4'                     HALF WORD 4 - USED FOR COMPARES
H15      DC    H'15'                    HALF WORD 15
H8       DC    H'8'                     HALF WORD 8
BLANK    DC    C' '                     BLANK
ALLSW    DC    X'00'               ALL KEYWORD SWITCH
SENDSW   DC    X'00'               SEND MESSAGE SWITCH
LOCPTR   DC    F'0'                LOC POINTER FROM LOAD
JOBNAME  DC    CL8' '              JOBNAME
*        STATUS MESSAGE
SCHED    DC    C'SCHED I/OPUT CLASS  X POS (  )'
EX       DC    C'EXECUTING'
EXC      DC    C'EXCESSIVE OPERANDS'
DERROR   DC    C'DISK ERROR'
NOTFND   DC    C'NOT FOUND'
         EJECT
CONVERT  DS    1D                       WORK AREA
         DS    16F
ECB      DC    F'0'                        ECB
LDCECB   DC    F'0'
PPLECBX  DC    F'0'
QCR      DS    1F                       QUEUE CONTROL RECORD
NUMJOBS  DS    1F                       NUMBER OF JOBS FOUND
         SPACE 2
*        INFORMATION FOR LOC
LOCPARMS DS    0F
LOCPARM1 DS    F
LOCPARM2 DS    F
LOCPARM3 DS    F
LOCPARM4 DS    F
LOCPARM5 DS    F
         SPACE 2
*        INFORMATION FROM LOC
POSITION DS    1F                       POSITION OF JOB ON QUEUE
PRIORITY DS    1F                       PRIORITY OF JOB
STATUS   DS    1F                       JOB'S STATUS
QENTRY   DS    1F                       NN OF JOB'S ENTRY ON QUEUE
         SPACE 2
*        PARAMETERS FOR LOADER/CONTROLLER
LCECB    DS    4C                       RETURN ECB FOR CRJE
DNO      DS    C                        ROUTINE NUMBER - DELETE
LNO      DS    C                        ROUTINE NUMBER - LOAD
BZ       DS    C                        STOP CODE
LENJOB   DS    C                        LENGTH OF JOBNAME
SAVEKEY  DS    CL8                      SAVE KEY FOR AFIO
SWITCHES DS    C                        SWITCHES
SWJOB    EQU   X'80'                    JOB FOUND
SWERR    EQU   X'40'                    ERROR
SWEND    EQU   X'20'                    END PROCESSING
SWNOOP   EQU   X'10'                    NO OPERAND
SWFIRST  EQU   X'08'                    FIRST PASS
SWPAREN  EQU   X'04'                    ELEMENT NOT LAST IN PARENTHESES
SWPARENF EQU   X'FB'
SWLOADED EQU   X'02'                    IEFLOCDQ LOADED
         EJECT
QTABLE   DS    0C
         DC    CL15'MASTR'
         DC    CL15'HOLD'
         DC    CL15'ASB'
         DC    CL15'OUTPUT CLASS  A'
         DC    CL15'OUTPUT CLASS  B'
         DC    CL15'OUTPUT CLASS  C'
         DC    CL15'OUTPUT CLASS  D'
         DC    CL15'OUTPUT CLASS  E'
         DC    CL15'OUTPUT CLASS  F'
         DC    CL15'OUTPUT CLASS  G'
         DC    CL15'OUTPUT CLASS  H'
         DC    CL15'OUTPUT CLASS  I'
         DC    CL15'OUTPUT CLASS  J'
         DC    CL15'OUTPUT CLASS  K'
         DC    CL15'OUTPUT CLASS  L'
         DC    CL15'OUTPUT CLASS  M'
         DC    CL15'OUTPUT CLASS  N'
         DC    CL15'OUTPUT CLASS  O'
         DC    CL15'OUTPUT CLASS  P'
         DC    CL15'OUTPUT CLASS  Q'
         DC    CL15'OUTPUT CLASS  R'
         DC    CL15'OUTPUT CLASS  S'
         DC    CL15'OUTPUT CLASS  T'
         DC    CL15'OUTPUT CLASS  U'
         DC    CL15'OUTPUT CLASS  V'
         DC    CL15'OUTPUT CLASS  W'
         DC    CL15'OUTPUT CLASS  X'
         DC    CL15'OUTPUT CLASS  Y'
         DC    CL15'OUTPUT CLASS  Z'
         DC    CL15'OUTPUT CLASS  0'
         DC    CL15'OUTPUT CLASS  1'
         DC    CL15'OUTPUT CLASS  2'
         DC    CL15'OUTPUT CLASS  3'
         DC    CL15'OUTPUT CLASS  4'
         DC    CL15'OUTPUT CLASS  5'
         DC    CL15'OUTPUT CLASS  6'
         DC    CL15'OUTPUT CLASS  7'
         DC    CL15'OUTPUT CLASS  8'
         DC    CL15'OUTPUT CLASS  9'
         DC    CL15'RJE'
         DC    CL15' INPUT CLASS  A'
         DC    CL15' INPUT CLASS  B'
         DC    CL15' INPUT CLASS  C'
         DC    CL15' INPUT CLASS  D'
         DC    CL15' INPUT CLASS  E'
         DC    CL15' INPUT CLASS  F'
         DC    CL15' INPUT CLASS  G'
         DC    CL15' INPUT CLASS  H'
         DC    CL15' INPUT CLASS  I'
         DC    CL15' INPUT CLASS  J'
         DC    CL15' INPUT CLASS  K'
         DC    CL15' INPUT CLASS  L'
         DC    CL15' INPUT CLASS  M'
         DC    CL15' INPUT CLASS  N'
         DC    CL15' INPUT CLASS  O'
         DC    CL15'BRDR'
         EJECT
PCL      IKJPARM
JOBPARM  IKJIDENT 'JOBNNAME',MAXLNTH=8,OTHER=ANY,PROMPT='JOBNAME'
ALL      IKJKEYWD
         IKJNAME 'ALL'
         IKJENDP
         EJECT
         IKJCPPL
         SPACE 3
         IKJPPL
         EJECT
CIBCVT   DSECT
         CVT
         END
