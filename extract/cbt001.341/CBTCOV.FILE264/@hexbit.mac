 /* @HEXBIT */
 %NOPRINT;
 /*
0*$.HE GENERALIZED SUBROUTINES - @HEXBIT
0*$.HE PLI PREPROCESSOR TEXT
0*$.HE CONVERTS HEX CONSTANTS TO BIT
0*$.PL 55
0*$.PN 0
0*$.PA
0*$.SS
0*$.NF
0*$01/16/80
0*$AUTHOR:  T. SMITH
0*$SOURCE MODULE NAME:  @HEXBIT
0*$DOCUMENTATION ID:  0*$
0*$.FI L
0*$.SP 5
0*$PREPROCESSOR PROCEDURE @HEXBIT CAN BE USED TO CONVERT HEXADECIMAL
0*$CONSTANTS TO BIT IN A PL/I SOURCE PROGRAM.  FOR EXAMPLE:
0*$.SP 1
0*$.IN 5
0*$.NF
0*$TEST:  PROC;
0*$% INCLUDE @HEXBIT;
0*$DCL A BIT(16)
0*$ INIT(@HEXBIT(CFAE));
0*$.FI L
0*$.IN 0
0*$.SP 1
0*$IN THE ABOVE EXAMPLE, THE VARIABLE "A" WOULD BE INITIALIZED TO
0*$DECIMAL '1100111110101110'B.
 */
         % DCL @HEXBIT ENTRY;
 % @HEXBIT:  PROC(P1) RETURNS(CHAR);
         DCL (P1,HEXBIT,HEXKEY,RETSTR) CHAR;
         DCL (I,J,K,L,M) FIXED;
         HEXKEY='0123456789ABCDEF';
         HEXBIT='0000000100100011010001010110011110001001101010111100110
 111101111'; /*  ×   ×   ×   ×   ×   ×   ×   ×   ×   ×   ×   ×   ×   ×
  ×   ×      */
         RETSTR='''';
         I = LENGTH(P1);
         IF I^=(I/2)*2
           THEN P1='0'××P1;
         I = LENGTH(P1);
         DO J = 1 TO I;
           K=(INDEX(HEXKEY,SUBSTR(P1,J,1))-1)*4 + 1;
           RETSTR=RETSTR××SUBSTR(HEXBIT,K,4);
           END;
         RETURN(RETSTR××'''B');
         %END @HEXBIT;
 %PRINT;
