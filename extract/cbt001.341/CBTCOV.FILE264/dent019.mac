 /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
 /* DENT019 - SPLIT,JOIN,TS */
         % DCL @PROCNAME CHAR;
         % DCL @RENTNAME CHAR;
         % @PROCNAME = 'RENT';
         % @RENTNAME = 'DENT019';
         % INCLUDE DENTSUB;
         DCL SETCAPS ENTRY;
         DCL (PREFIX,SUFFIX) ENTRY(CHAR(*), CHAR(*))
           RETURNS(FIXED BIN(15,0));
         DCL ALLSW BIT(1) INIT('0'B);
         DCL LAST FIXED BIN(31,0) INIT(99999999);
         DCL (SAVPTR,ORGPTR,SEQPTR) PTR;
         DCL (IXK,ALLCK) CHAR(80) VAR;
         DCL CMDLAB(4) LABEL;
         DCL CURBIN FIXED BIN(15,0),
             CURBIT BIT(16) DEF CURBIN;
         MSGDATA='';
         ORGPTR = RECPTR;
         GO TO CMDLAB(CMDINDX);
            /*PARY(1) 2   3   */
 CMDLAB(4): /*     TS <L> <N> */
         IF PARY(3)^=''
           THEN CMDDATA='BL '××PARY(2)××' '××PARY(3);
         PARY(3)=PARY(2);
         PUT STRING(PARY(4))
           EDIT(MOD(@CURLOC,LINESIZE)-RHPMAXLN-1)
           (P'999');
 CMDLAB(1):  /* DENT019 */
             /* PARY(1)  2    3    4       5    */
 CMDLAB(2):  /*   SPLIT <L1> <L2> <STRING> ALL  */
             /*                   <NUMBER>      */
         ALLCK = '';
         L1 = PARY(2); /* L1 = 1ST LINE TO SPLIT */
         CALL #MD(RHPTR,SUBENT,L1);  /* CALL MDPROC */
         SEQPTR=RECPTR;
         IF PARY(5) ^= ''
           THEN DO;
             ALLCK = PARY(5);
             IXK = PARY(4);
             L2 = PARY(3);
             END;
           ELSE IF LENGTH(PARY(4)) ^= 0
             THEN IF VERIFY(PARY(3),'0123456789')=0
               THEN DO;
                 IXK = PARY(4); /* IXK = <NUMBER> × <STRING> */
                 L2 = PARY(3); /* L2 = LINE-2 */
                 END;
               ELSE DO;
                 ALLCK = PARY(4);
                 IXK = PARY(3); /* IXK = <STRING> */
                 L2 = L1;
                 END;
             ELSE DO;
               IXK = PARY(3); /* IXK = <NUMBER> × <STRING> */
               L2 = L1; /* L2 = LINE-2 */
               END;
         IF ALLCK ^= ''
           THEN DO;
             IF LENGTH(ALLCK) > 3
               THEN MSGDATA='INVALID OPERAND';
               ELSE DO;
                 CALL SETCAPS(ALLCK);
                 IF SUBSTR('ALL',1,LENGTH(ALLCK))^=ALLCK
                   THEN MSGDATA='INVALID OPERAND';
                   ELSE ALLSW = '1'B;
                 END;
             IF MSGDATA^=''
               THEN DO;
                 RHRC = 8;
                 RETURN;
                 END;
             END;
         IF RECSEQ<=L2
           THEN DO;
             SUBSTR(RECFLGS,3,1)='1'B;
             /* LEAVE CURSOR HERE */
             IF VERIFY(IXK,'0123456789')=0
               THEN DO;
                 CURBIN=MAX(0,IXK-1);
                 RECRES=SUBSTR(CURBIT,9,8);
                 END;
             END;
         DO WHILE(RECSEQ <= L2) UNTIL(RECPTR = HDPTR);
           DO UNTIL(J=0);
             IF LENGTH(IXK) = 0
               THEN J = LENGTH(RECSTR)/2;
               ELSE IF VERIFY(IXK,'0123456789')=0
                 THEN J = MIN(IXK,LENGTH(RECSTR)+1);
                 ELSE DO;
                   J = INDEX(SUBSTR(RECSTR,2),IXK)+1;
                   IF J=1
                     THEN J=0;
                   END;
             IF J ^= 0 & J <= LENGTH(RECSTR)
               THEN DO;
                 BUF=SUBSTR(RECSTR,J);
                 IF CMDINDX=4
                   THEN DO;
                     K=PREFIX(RECSTR,' ');
                     IF K<=J
                       THEN BUF=SUBSTR(RECSTR,1,K-1)××
                         SUBSTR(BUF,PREFIX(BUF,' '));
                     END;
                 RECSTR=SUBSTR(RECSTR,1,J-1);
                 SEQ=-1;
                 CALL #ADD(RHPTR,SUBENT,RECPTR,RECPTR,SEQ,
                   BUF,RHPPTR);/* CALL ADDREC */
                 END;
               ELSE J=0;
             IF ^ALLSW
               THEN J=0;
             END;
           RECPTR = NXTPTR;
           END;
         RECPTR = ORGPTR;
         CALL #RESEQ(RHPTR,SUBENT,SEQPTR,'NOSAVE','NORENUM',LAST,
           RHPPTR);    /* CALL RESEQ */
         CALL #NC(RHPTR,SUBENT,ORGPTR); /* CALL DENTNC */
         RHRC = 0;
         RETURN;
           /*PARY(1)   (2)      (3)      (4)*/
 CMDLAB(3):  /* JOIN <LINE-1> <LINE-2> <PAIRS> */
         L1 = PARY(2);  /* L1 = 1ST LINE TO JOIN */
         CALL #MD(RHPTR,SUBENT,L1); /* CALL MDPROC */
         IF RECSEQ^=L1
           THEN DO;
             MSGDATA = 'LINE-1 NOT FOUND';
             RHRC = 8;
             RETURN;
             END;
         IF NXTPTR=HDPTR
           THEN DO;
             MSGDATA = 'LAST LINE - NOTHING TO JOIN';
             RHRC = 8;
             RETURN;
             END;
         IF PARY(3) = ''
           THEN DO;
             L2 = NXTPTR->RECSEQ;
             PAIRS = 2;
             END;
           ELSE DO;
             L2 = PARY(3);
             IF PARY(4) = ''
               THEN PAIRS = 2;
               ELSE PAIRS = PARY(4);
             END;
         I = 0;
         DO WHILE(L2>=NXTPTR->RECSEQ) UNTIL(NXTPTR=HDPTR);
           I = I + 1;
           IF I < PAIRS
             THEN DO;
               IF LENGTH(RECSTR)=0
                 THEN RECSTR=NXTPTR->RECSTR;
                 ELSE RECSTR=SUBSTR(RECSTR,1,SUFFIX(RECSTR,' '))××
                   NXTPTR->RECSTR;
               J = NXTPTR->RECSEQ;
               IF NXTPTR=ORGPTR
                 THEN ORGPTR=RECPTR;
               SAVPTR = RECPTR;
               CALL #DEL(RHPTR,SUBENT,J,J,RHPPTR); /* DELPROC */
               RECPTR = SAVPTR;
               END;
             ELSE DO;
               RECPTR=NXTPTR;
               I = 0;
               END;
           END;
         CALL #NC(RHPTR,SUBENT,ORGPTR); /* CALL DENTNC */
         RHRC = 0;
         END;
