 /* DENTFSO */
 DENTFSO:  PROC(PARPTR,RHHDRPT,SUBENT);
 /* CALLED TO PROCESS - $SETO <PANEL> <FLDNO> <VALUE> PREMOD
    HIGH LOW PROTECT UNPROT */
   % DCL @PROCNAME CHAR;
   % @PROCNAME='';
   % INCLUDE DENTSUB;
   % INCLUDE DENTPNL;
   HALT;
   DCL KEYTABLE(9) CHAR(80) VAR STATIC
     INIT('PREMOD','HIGH','LOW','PROT','UNPROT','SUPPRESS','TRANSLATE',
     'NOTRAN','NOPREMOD');
   DCL INDX FIXED BIN(15,0);
   DCL OPER CHAR(80) VAR;
   DCL KEYLAB(0:9) LABEL;
   DCL SETCAPS ENTRY;
   DCL STFSMOD ENTRY(CHAR(*),CHAR(*),FIXED BIN(15,0))
     RETURNS(FIXED BIN(15,0));
   DCL DENTPFN ENTRY RETURNS(PTR);
   DCL NAME CHAR(8);
   DCL AD(0:32766) CHAR(1) UNALIGNED BASED(T);
   DCL HWD UNALIGNED FIXED BIN(15,0) BASED(DUMPTR);
   DCL SETTXT CHAR(100) VAR;
   DCL GBLSW BIT(1) STATIC INIT('0'B);
   DCL SYMBOLPM CHAR(8);
   NAME=PARY(2);
   CALL SETCAPS(NAME);
   T=DENTPFN(RHHDRPT,SUBENT,NAME); /* GO GET PANEL */
   WRKPTR,PNLPTR=ADDR(AD(4));
   IF WRKPTR->PNLLEN<0
     THEN DO;
       WRKADJ=WRKADJ+WRKPTR->NEWLEN;
       SFLDPTR=ADDR(FLDLOC); /* POINT TO FIRST FIELD DESCR */
       END;
     ELSE DO;
       WRKADJ=WRKADJ+WRKPTR->PNLLEN;
       SFLDPTR=ADDR(NEWLEN); /* POINT TO FIRST FIELD DESCR */
       END;
   DYNPTR=WRKPTR;
   WRKADJ=WRKADJ+DOUTOF; /* WRKPTR POINTS AT PANEL_OUT SUBSTRUCTURE */
   I=PARY(3); /* I=FIELD NUMBER TO BE CHANGED */
   DO SFLDADJ=SFLDADJ REPEAT SFLDADJ+FLDLEN
     UNTIL(FLDNUM=I × FLDNUM=FLDCNT);
     END;
   IF FLDNUM^=I
     THEN DO;
       PUT SKIP LIST('FIELD NUMBER',I,'NOT FOUND IN PANEL',NAME);
       SIGNAL ERROR;
       END;
   DFLDADJ=WRKADJ+OUTOFF; /* DFLDPTR POINTS AT OUTPUT DATA */
   DATA=PARY(4);
   DO I=5 TO 16 WHILE(PARY(I)^='');
     CALL SETCAPS(PARY(I));
     CALL SUBENT(21)(PARY(I),KEYTABLE,OPER,INDX);
       /* CALL SPARS */
     GO TO KEYLAB(INDX);
 KEYLAB(0): /* INVALID OPERAND */
     PUT SKIP LIST('ERROR ON $SETO INVALID OPERAND = ',PARY(I));
     SIGNAL ERROR;
 KEYLAB(1): /* PREMOD */
     SUBSTR(FLAGS,8,1)='1'B;
     GO TO ENDCASE;
 KEYLAB(2): /* HIGH */
     SUBSTR(FLAGS,5,2)='10'B;
     GO TO ENDCASE;
 KEYLAB(3): /* LOW */
     SUBSTR(FLAGS,5,2)='00'B;
     GO TO ENDCASE;
 KEYLAB(4): /* PROT */
     SUBSTR(FLAGS,3,2)='11'B;
     GO TO ENDCASE;
 KEYLAB(5): /* UNPROT */
     IF FLDINUM=0
       THEN DO;
         PUT SKIP LIST('ERROR - YOU CAN''T UNPROTECT A LITERAL FIELD');
         SIGNAL ERROR;
         END;
     SUBSTR(FLAGS,3,2)='00'B;
     GO TO ENDCASE;
 KEYLAB(6): /* SUPPRESS */
     SUBSTR(FLAGS,5,2)='11'B;
     GO TO ENDCASE;
 KEYLAB(7): /* TRANSLATE */
     SUBSTR(FLAGS,9,1)='1'B;
     GO TO ENDCASE;
 KEYLAB(8): /* NOTRAN */
     SUBSTR(FLAGS,9,1)='0'B;
     GO TO ENDCASE;
 KEYLAB(9): /* NOPREMOD */
     SUBSTR(FLAGS,8,1)='0'B;
     GO TO ENDCASE;
 ENDCASE:
     END;
   END DENTFSO;
