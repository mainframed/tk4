*$.HE GENERALIZED SUBROUTINES - FREFORM
*$.HE EDIT NUMERIC CHARACTER STRING BASED ON A MASK - COBOL
*$.PL 55
*$.PN 0
*$.PA
*$.SS
*$.NF
*$05/10/83
*$AUTHOR: L. SICARD
*$SOURCE MODULE NAME: FREFORM
*$DOCUMENTATION ID: *$
*$.FI L
*$.SP 5
*$THIS ROUTINE IS INTENDED FOR USE BY COBOL PROGRAMS ONLY. IT
*$PROVIDES A MEANS OF CONVERTING A NUMBER ENTERED IN ANY FORMAT
*$TO A FIXED FORMAT (I.E. A FORMAT WHICH IS DETERMINED BY A
*$MASK).
*$.SP 1
*$.IN 4
*$CALL 'FREFORM' USING VALUE MASK LENGTH.
*$.SP 1
*$.IN 0
*$VALUE
*$.IN 4
*$PIC X(18).  AN 01 LEVEL CHARACTER VARIABLE WHICH CONTAINS THE
*$NUMBER TO BE CONVERTED. WHEN FREFORM RETURNS TO YOUR PROGRAM
*$THE CONVERTED NUMBER WILL BE PLACED IN THIS SAME VARIABLE. THE
*$ONLY CHARACTERS RECOGNIZED ARE ".-0123456789"; ALL OTHERS ARE
*$IGNORED.
*$.IN 0
*$MASK
*$.IN 4
*$PIC X(18).  AN 01 LEVEL CHARACTER VARIABLE WHICH CONTAINS A
*$MASK OF CHARACTERS WHICH DETERMINES THE FORMAT OF THE CONVERTED
*$NUMBER. A DECIMAL POINT WILL DETERMINE ALIGNMENT OF THE DECIMAL
*$POSITION. A NEGATIVE SIGN WILL INDICATE THE NEGATIVE SIGN
*$POSITION IF THE ENTERED VALUE IS NEGATIVE. OTHERWISE THE MASK
*$NEGATIVE SIGN IS CHANGED TO BLANK.
*$.IN 0
*$LENGTH
*$.IN 4
*$PIC S9(4) COMP. AN 01 LEVEL HALFWORD BINARY VARIABLE
*$WHICH CONTAINS THE LENGTH OF THE USED PART OF THE VALUE
*$ AND MASK ARGUMENTS. IT MUST BE A NUMBER >=1 AND <= 18.
*$.NF
*$.SP 1
*$.IN 0
*$SUGGESTIONS:
*$.IN 4
*$- ALTHOUGH ANY CHARACTER CAN BE USED IN THE MASK
*$ IT IS RECOMMENDED THAT ONLY " ", ".", "-", AND
*$ "0" BE USED.
*$- THE NEGATIVE SIGN SHOULD BE EITHER AT THE END
*$ OR AT THE BEGINNING OF THE MASK.
*$.SP 1
*$.IN 0
*$EXAMPLE1: IF VALUE = '1234    ' , MASK = '00000000' AND
*$    LENGTH = 8 THEN AFTER THE CALL VALUE = '00001234'.
*$.SP 1
*$EXAMPLE2: IF VALUE = '1234.56-' , MASK = '-000.000' AND
*$    LENGTH = 8 THEN AFTER THE CALL VALUE = '-234.560'.
*$.SP 1
*$EXAMPLE3: IF VALUE = '1-2 3. 4' , MASK = '00000.0-' AND
*$    LENGTH = 8 THEN AFTER THE CALL VALUE = '00123.4-'.
*$.SP 1
*$EXAMPLE4: IF VALUE = '01.23   ' , MASK = '   0.000' AND
*$    LENGTH = 8 THEN AFTER THE CALL VALUE = '  01.230'.
*$    NOTICE THAT FREFORM DOES NOT REALY SUPPRESS LEADING
*$    ZEROS THAT ARE KEYED. ITS FUNCTION IS TO REPLACE
*$    CHARACTERS IN THE MASK WITH ANY NUMERIC CHARACTER.
FREFORM1 CSECT
         ENTRY FREFORM
         DC    C' FREFORM'
         DC    AL1(8)
FREFORM  DS    0H
         STM   14,12,12(13)
         BALR  10,0
         USING *,10
         LA    4,SAVE
         ST    13,SAVE+4
         ST    4,8(13)
         LA    13,SAVE
* START OF FREFORM ROUTINE
         L     VPTR,0(1)          ADDR OF VALUE
         ST    VPTR,AVALUE        SAVE ADDR OF VALUE
         L     MPTR,4(1)          ADDR OF MASK
         ST    MPTR,AMASK         SAVE ADDR OF MASK
         MVC   HMASK(18),0(MPTR)  SAVE MASK FOR RETURN TO CALLER
         L     W,8(1)             ADDR OF VALUE LENGTH
         LH    K,0(W)             SAVE VALUE LENGTH
*STEP1: FIND AND RETAIN SIGN AND DECIMAL POINT POSITIONS IN VALUE AND
*       MASK.
STEP1    LA    I,0
         MVC   PP,=H'0'
         MVC   MPP,=H'0'
         MVC   SP,=H'0'
         MVC   MSP,=H'0'
LOOP1    L     VPTR,AVALUE         CHECK FOR SPECIAL CHARACTERS
         LA    VPTR,0(I,VPTR)
         L     MPTR,AMASK
         LA    MPTR,0(I,MPTR)
         LA    I,1(I)
         CR    I,K
         BH    STEP2
         CLI   0(VPTR),C'-'        VALUE SIGN CHECK
         BNE   PTCHK
         STH   I,SP
         B     MSNCHK
PTCHK    CLI   0(VPTR),C'.'        VALUE DECIMAL POINT CHECK
         BNE   MSNCHK
         CLC   PP(2),=H'0'
         BNE   MSNCHK
         STH   I,PP
MSNCHK   CLI   0(MPTR),C'-'        MASK SIGN CHECK
         BNE   MPTCHK
         STH   I,MSP
         B     LOOP1
MPTCHK   CLI   0(MPTR),C'.'        MASK DECIMAL POINT CHECK
         BNE   LOOP1
         CLC   MPP(2),=H'0'
         BNE   LOOP1
         STH   I,MPP
         B     LOOP1
*STEP2: MOVE FRACTIONAL DIGITS FROM VALUE TO THE FRACTIONAL DIGIT
*       POSITIONS IN THE MASK (IF ANY).
STEP2    CLC   PP(2),=H'0'
         BE    STEP4
         CLC   MPP(2),=H'0'
         BE    STEP4
         LH    I,PP
         LA    I,1(I)
         LH    J,MPP
         LA    J,1(J)
LOOP2    CR    I,K
         BH    STEP3
         CR    J,K
         BH    STEP3
         LR    W,I
         SH    W,=H'1'
         L     VPTR,AVALUE
         LA    VPTR,0(W,VPTR)
         CLI   0(VPTR),C'0'
         BL    LEND2
         CLI   0(VPTR),C'9'
         BH    LEND2
         LR    W,J
         SH    W,=H'1'
         L     MPTR,AMASK
         LA    MPTR,0(W,MPTR)
         CLI   0(MPTR),C'-'
         BE    IDOWN
         MVC   0(1,MPTR),0(VPTR)
         B     JUP
IDOWN    SH    I,=H'1'
JUP      LA    J,1(J)
LEND2    LA    I,1(I)
         B     LOOP2
*STEP3: SET MASK INDEX ONE CHARACTER TO THE LEFT OF THE MASK DECIMAL
*       POINT POSITION.
STEP3    LH    J,MPP
         SH    J,=H'1'
         B     STEP5
*STEP4: IF STEP2 DETERMINED THAT THERE WERE NO FRACTIONAL DIGITS IN
*       THE VALUE OR IN THE MASK THEN RESET THE VALUE POINT POSITION
*       FIELD AND/OR THE MASK INDEX.
STEP4    CLC   PP(2),=H'0'
         BNE   MPPCHK
         LR    W,K
         LA    W,1(W)
         STH   W,PP
MPPCHK   CLC   MPP(2),=H'0'
         BNE   JDOWN
         LR    J,K
         B     STEP5
JDOWN    LH    J,MPP
         SH    J,=H'1'
*STEP5: MOVE WHOLE DIGITS FROM THE VALUE TO THE WHOLE DIGIT POSITIONS
*       IN THE MASK (IF ANY).
STEP5    LH    I,PP
         SH    I,=H'1'
LOOP5    CH    I,=H'1'
         BL    STEP6
         CH    J,=H'0'
         BNH   STEP6
         LR    W,I
         SH    W,=H'1'
         L     VPTR,AVALUE
         LA    VPTR,0(W,VPTR)
         CLI   0(VPTR),C'0'
         BL    LEND5
         CLI   0(VPTR),C'9'
         BH    LEND5
         LR    W,J
         SH    W,=H'1'
         L     MPTR,AMASK
         LA    MPTR,0(W,MPTR)
         CLI   0(MPTR),C'-'
         BE    IUP2
         MVC   0(1,MPTR),0(VPTR)
         B     JDOWN2
IUP2     LA    I,1(I)
JDOWN2   SH    J,=H'1'
LEND5    SH    I,=H'1'
         B     LOOP5
*STEP6: BLANK OUT NEGATIVE SIGN IF IT EXISTS IN THE MASK AND IF THE
*       VALUE IS NOT NEGATIVE.
STEP6    LH    W,SP
         CH    W,=H'0'
         BNE   STEP7
         LH    W,MSP
         CH    W,=H'0'
         BE    STEP7
         SH    W,=H'1'
         L     MPTR,AMASK
         LA    MPTR,0(W,MPTR)
         MVC   0(1,MPTR),=X'40'
*STEP7: MOVE VALUE AND MASK TO BE RETURNED TO THE CALLING PROGRAM.
STEP7    L     VPTR,AVALUE
         L     MPTR,AMASK
         MVC   0(18,VPTR),0(MPTR)
         MVC   0(18,MPTR),HMASK
* END OF FREFORM ROUTINE
         L     13,4(13)
         LM    14,12,12(13)
         SR    15,15
         BR    14
SAVE     DS    9D
         LTORG
I        EQU   6                  VALUE INDEX
J        EQU   7                  MASK INDEX
K        EQU   5                  VALUE LENGTH
W        EQU   9                  WORK REGISTER
VPTR     EQU   3                  VALUE POINTER
MPTR     EQU   4                  MASK POINTER
PP       DS    H                  VALUE DECIMAL POSITION
MPP      DS    H                  MASK DECIMAL POSITION
SP       DS    H                  VALUE SIGN POSITION
MSP      DS    H                  MASK SIGN POSITION
HMASK    DS    CL(18)             HELD MASK
AVALUE   DS    F                  ADDR OF VALUE SAVE AREA
AMASK    DS    F                  ADDR OF MASK SAVE AREA
         END
