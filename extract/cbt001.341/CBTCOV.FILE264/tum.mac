*PROCESS F(I),CS(60);
 TUM:    PROC (X1,X2,X3) OPTIONS(MAIN) RETURNS(BIT(1)) REORDER;
 /*********************************************************************/
 /*                                                                   */
 /*EXTERNAL FUNCTION "TUM" (TEST UNDER MASK)                          */
 /*PARAMETERS ARE-                                                    */
 /*1) X1 - THE STRING TO BE TESTED                                    */
 /*2) X2 - THE MASK TO BE USED FOR TESTING OF STRING X1               */
 /*3) X3 - THE MASK CHARACTER WHICH MATCHES ANYTHING IN X1            */
 /*      - TUM RETURNS A BIT VALUE OF '1'B FOR A MATCH                */
 /*        AND A '0'B FOR A NOMATCH CONDITION.                        */
 /*EXAMPLE:                                                           */
 /*X1 = 'AA072996',.                                                  */
 /*X2 = '..07.99.',.                                                  */
 /*X3 = '.',.                                                         */
 /*IF TUM(X1,X2,X3) THEN PUT DATA(X1),.                               */
 /*   IN THIS EXAMPLE TUM WOULD RETURN A VALUE OF '1'B AND THE        */
 /*   PUT DATA WOULD BE EXECUTED.                                     */
 /*                                                                   */
 /* THE CALLING PROGRAM SHOULD INCLUDE THE FOLLOWING DECLARE          */
 /*                                                                   */
 /* DCL TUM EXTERNAL ENTRY(CHAR(*),CHAR(*),CHAR(1)) RETURNS(BIT(1)),. */
 /*                                                                   */
 /*********************************************************************/
         DCL (LENGTH,SUBSTR,INDEX,HIGH,REPEAT) BUILTIN;
         DEFAULT RANGE(*) STATIC ALIGNED;
         DCL (X1,X2) CHAR(*);
         DCL (M2,M1,I1) CHAR(100) VARYING INIT('');
         DCL (X1L,X2L,PL,LL,I,J,K) FIXED BIN(15) INIT(0);
         DCL X3 CHAR(1);
         PL,LL,I,J,K = 0;
         X1L = LENGTH(X1);
         X2L = LENGTH(X2);
         SELECT ;
           WHEN (X2L = X1L)
             DO;
               LL = X1L;
               I1 = X1;
               M1 = X2;
             END;
           WHEN (X2L > X1L)
             DO;
               LL = X2L;
               PL = X2L - X1L;
               I1 = X1 ×× REPEAT(' ',PL - 1);
               M1 = X2;
             END;
           WHEN (X2L < X1L)
             DO;
               LL = X1L;
               PL = X1L - X2L;
               M1 = X2 ×× REPEAT(X3,PL - 1);
               I1 = X1;
             END;
         END; /*SELECT*/
         M2 = M1;
         DO WHILE (INDEX(M2,X3) ^= 0);
           I = INDEX(M2,X3);
           J = J + 1;
           SUBSTR(M2,I,1) = HIGH(1);
         END;
         J = LL - J;
         DO I = 1 TO LL BY 1;
           IF SUBSTR(M1,I,1) ^= X3 THEN
             DO;
               IF SUBSTR(M1,I,1) = SUBSTR(I1,I,1)
                 THEN K = K + 1;
             END;
         END;
         IF J = K THEN RETURN('1'B);
                  ELSE RETURN('0'B);
         END TUM;
