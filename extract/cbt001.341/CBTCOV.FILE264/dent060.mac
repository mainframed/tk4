 /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
 /* DENT060 - BASE SUBCOMMAND */
   % DCL @PROCNAME CHAR;
   % DCL @RENTNAME CHAR;
   % @PROCNAME = 'RENT';
   % @RENTNAME = 'DENT060';
   % INCLUDE DENTSUB;
   DCL NCOLS FIXED BIN INIT(1);
   DCL (SAVPTR,ORGPTR) PTR;
   DCL (PREFIX,SUFFIX) ENTRY(CHAR(*),CHAR(*))
     RETURNS(FIXED BIN(15,0));

 /* 1    2    3    4     5     6           7         8       */
 /* BASE <L1> <L2> <OFF> <LEN> <FROM-BASE> <TO-BASE> <NCOLS) */
   ORGPTR=RECPTR; /* SAVE ORIGINAL POINTER */
   L1=PARY(2);
   L2=PARY(3);
   OFF=PARY(4);
   LEN=PARY(5);
   FROMBASE=PARY(6);
   TOBASE=PARY(7);
   IF FROMBASE<2 × FROMBASE>36 × TOBASE<2 × TOBASE>36
     THEN DO;
       MSGDATA='BASE CANNOT BE LESS THAN 2 OR GREATER THAN 36';
       RHRC=8;
       RETURN;
       END;
   IF PARY(8)^=''
     THEN NCOLS=PARY(8);

   CALL #MD(RHPTR,SUBENT,L1);
   DO RECPTR=RECPTR REPEAT NXTPTR WHILE(RECPTR^=HDPTR);
     IF RECSEQ>L2
       THEN LEAVE;
     N=NCOLS;
     LREC=LENGTH(RECSTR);
     DO I=OFF REPEAT I+LEN WHILE(I<=LREC) UNTIL(N=0);
       L=MIN(LEN,LENGTH(RECSTR)-I+1);
       SUBSTR(RECSTR,I,L)=CONVERT(SUBSTR(RECSTR,I,L));
       N=N-1;
       END;
     END;
   RHRC=0;
   CALL #NC(RHPTR,SUBENT,ORGPTR); /* RESTORE ORIGINAL RECPTR */
   RETURN;

 CONVERT: PROC(STR) RETURNS(CHAR(256) VAR);
 /**********************************************************************
 *                                                                     *
 * CALLED TO CONVERT FROM ONE BASE SYSTEM TO ANOTHER.                  *
 *                                                                     *
 **********************************************************************/
   DCL STR CHAR(*) VAR;
   DCL CODESTR CHAR(36) STATIC INIT(
     '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ');
   DCL (I,J,K,L,M) FIXED BIN;
   DCL RET CHAR(256) VAR INIT('');

   IF STR=' '
     THEN RETURN('');
   STR=SUBSTR(STR,1,SUFFIX(STR,' '));
   STR=SUBSTR(STR,PREFIX(STR,' '));

   /* FIRST TRANSLATE FROM TO FIXED BIN, IN VARIABLE K */
   K=0;
   L=LENGTH(STR);
   DO I=L TO 1 BY -1;
     J=INDEX(CODESTR,SUBSTR(STR,I,1));
     IF J=0 × J>FROMBASE
       THEN RETURN('.'); /* INVALID DATA */
     K=K+(J-1)*FROMBASE**(L-I);
     END;

   /* NOW TRANSLATE OUT IN TOBASE */
   DO UNTIL(K=0);
     M=MOD(K,TOBASE);
     RET=SUBSTR(CODESTR,M+1,1)××RET;
     K=K/TOBASE;
     END;
   RETURN(RET);
   END CONVERT;

   END DENT060;
