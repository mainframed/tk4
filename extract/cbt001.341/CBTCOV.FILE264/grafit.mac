 GRAFIT: PROC(PICPTR,BDRY) RETURNS(BIT(1));
   DFT RANGE(*) FIXED BIN VALUE(FIXED BIN(31,0));
   DCL PICPTR PTR;
   DCL BDRY FIXED BIN;
   DCL 1 PICSTR BASED(PICPTR),
     2 XCORNER DEC FLOAT(16), /* REAL PART OF THE IMAGINARY NUMBER IN
         THE LOWER LEFT CORNER OF THE AREA IN THE COMPLEX NUMBER PLANE
         TO BE EXAMINED. */
     2 YCORNER DEC FLOAT(16), /* IMAGINARY PART OF THE IMAGINARY NUMBER
         IN THE LOWER LEFT CORNER OF THE AREA IN THE COMPLEX NUMBER
         PLANE TO BE EXAMINED. */
     2 GAP DEC FLOAT(16), /* DISTANCE IN COMPLEX PLANE BETWEEN PIXELS */
     2 XDONE FIXED BIN(15,0), /* NUMBER OF ROWS PROCESSED */
     2 YDONE FIXED BIN(15,0), /* NUMBER OF COLUMNS PROCESSED */
     2 XDIM FIXED BIN(15,0),
     2 YDIM FIXED BIN(15,0),
     2 PIC(M REFER(XDIM),N REFER(YDIM)) FIXED BIN(15,0);

   DCL (COLOR_INTERVAL,MAX_COUNT,MIN_COUNT,COLOR_RANGE)
     FIXED BIN(15,0);
   DCL (CX,CY,CELLHEIGHT,CELLWIDTH,HEIGHT,WIDTH) DEC FLOAT(6);
   DCL (TYPE,MOD,COLOR,COUNT) FIXED BIN(31,0);
   DCL (XAFTER,XBEFORE,XC,XRANGE,YAFTER,YBEFORE,YC,YRANGE) DEC FLOAT(6);
   DCL (XCNEW,YCNEW) DEC FLOAT(6);

   IF BDRY=0
     THEN COLOR_RANGE=8;
     ELSE COLOR_RANGE=7;
   CELLWIDTH=100.0/XDIM; /* PIC WIDTH IN GDDM SCREEN UNITS */
   CELLHEIGHT=100.0/YDIM; /* PIC HEIGHT IN GDDM SCREEN UNITS */
   CALL FSINIT;
   CALL GSSEG(0);
   CALL GSLW(1);
   MAX_COUNT=0;
   MIN_COUNT=1001;
   DO I=1 TO XDIM;
     DO J=1 TO YDIM;
      IF PIC(I,J)>1000
         THEN PIC(I,J)=0;
         ELSE DO;
           MAX_COUNT=MAX(MAX_COUNT,PIC(I,J));
           MIN_COUNT=MIN(MIN_COUNT,PIC(I,J));
           END;
       END;
     END;
   COLOR_INTERVAL=MAX(1,(MAX_COUNT-MIN_COUNT+1)/COLOR_RANGE);
   DO I=1 TO XDIM;
     DO J=1 TO YDIM;
       IF PIC(I,J)>0
         THEN DO;
           COLOR=(PIC(I,J
                     )-MIN_COUNT+1
                 )/COLOR_INTERVAL-1;
           CALL DO_AREA(I,J,COLOR);
           END;
       END;
     END;
   IF BDRY^=0
     THEN CALL DO_BDRY;
   CALL GSSCLS; /* CLOSE GRAPHICS SEGMENT */
   CALL GSQCUR(1,XBEFORE,YBEFORE);
   CALL ASREAD(TYPE,MOD,COUNT);
   CALL GSQCUR(1,XAFTER,YAFTER);
   CALL FSTERM;
   XC=GAP*XDIM/2+XCORNER; /* CURRENT X CENTER OF DISPLAY */
   YC=GAP*YDIM/2+YCORNER; /* CURRENT Y CENTER OF DISPLAY */
   IF TYPE=0 /* ENTER KEY? */
     THEN IF ^(XBEFORE=XAFTER & YBEFORE=YAFTER)
       THEN DO;
         XCNEW=XCORNER+GAP*XDIM*XAFTER/100; /* NEW X CENTER */
         YCNEW=YCORNER+GAP*YDIM*YAFTER/100; /* NEW Y CENTER */
         XCORNER=XCORNER+(XCNEW-XC);
         YCORNER=YCORNER+(YCNEW-YC);
         XDONE,YDONE=0;
         RETURN('0'B); /* INDICATE NOT EOJ */
         END;
       ELSE TYPE,MOD=1; /* MAKE IT INTO A PFK 1 - IN */
   SELECT(MOD);
     WHEN(1,2,13,14) DO; /* PFK 1 - IN, PFK 2 - OUT */
      SELECT(MOD);
         WHEN(1) GAP=GAP/1.5;
         WHEN(2) GAP=GAP*1.5;
         WHEN(13) GAP=GAP/XDIM;
         WHEN(14) GAP=GAP*XDIM;
         OTHERWISE;
         END; /* SELECT */
       XCORNER=XC-GAP*XDIM/2;
       YCORNER=YC-GAP*YDIM/2;
       PUT SKIP EDIT('NEW COORDINATES ARE ',XCORNER,YCORNER)
         (A,F(15,12),X(1),F(15,12));
       PUT SKIP EDIT('NEW SIZE=',GAP*XDIM)(A,F(15,12));
       XDONE,YDONE=0;
       RETURN('0'B); /* INDICATE RETRY */
       END;
     WHEN(3) DO; /* PFK 3 - EXIT */
       PUT SKIP EDIT('CURRENT COORDINATES ARE ',XCORNER,YCORNER)
         (A,F(15,12),X(1),F(15,12));
       PUT SKIP EDIT('CURRENT SIZE IS ',GAP*XDIM)(A,F(15,12));
       RETURN('1'B); /* INDICATE EOJ */
       END;
     OTHERWISE PUT SKIP EDIT('PFK NOT DEFINED')(A);
     END; /* SELECT */
   RETURN('0'B); /* INDICATE RETRY */

 DO_AREA: PROC(X,Y,COLOR);
   DCL (X,Y) FIXED BIN;
   DCL COLOR FIXED BIN;
   DCL (FX,FY) DEC FLOAT(6);

   CALL GSCOL(COLOR);
   FX=(X-1)*CELLWIDTH;
   FY=(Y-1)*CELLHEIGHT;
   CALL GSAREA(1);
   CALL GSMOVE(FX,FY);
   CALL GSLINE(FX+CELLWIDTH,FY);
   CALL GSLINE(FX+CELLWIDTH,FY+CELLHEIGHT);
   CALL GSLINE(FX,FY+CELLHEIGHT);
   CALL GSLINE(FX,FY);
   CALL GSENDA;
   END DO_AREA;

 DO_BDRY: PROC;
   DCL (I,J,K,X,Y) FIXED BIN;
   DCL COLOR FIXED BIN INIT(8);

   CALL GSCOL(COLOR);
   DO X=1 TO XDIM;
     DO Y=1 TO YDIM;
       DO_BDRY_LUP: DO;
         DO I=MAX(1,X-1) TO MIN(XDIM,X+1);
           DO J=MAX(1,Y-1) TO MIN(YDIM,Y+1);
             IF PIC(I,J)^=PIC(X,Y)
               THEN DO;
                 CALL DO_BORDER(X,Y);
                 LEAVE DO_BDRY_LUP;
                 END;
             END;
           END;
         END DO_BDRY_LUP;
       END;
     END;
   END DO_BDRY;

 DO_BORDER: PROC(X,Y);
   DCL (X,Y) FIXED BIN;
   DCL (FX,FY) DEC FLOAT(6);

   FX=(X-1)*CELLWIDTH;
   FY=(Y-1)*CELLHEIGHT;
   CALL GSMOVE(FX,FY);
   CALL GSLINE(FX+CELLWIDTH,FY);
   CALL GSLINE(FX+CELLWIDTH,FY+CELLHEIGHT);
   CALL GSLINE(FX,FY+CELLHEIGHT);
   CALL GSLINE(FX,FY);
   END DO_BORDER;

   %INCLUDE ADMUPINA;
   %INCLUDE ADMUPINF;
   %INCLUDE ADMUPING;
   END GRAFIT;
