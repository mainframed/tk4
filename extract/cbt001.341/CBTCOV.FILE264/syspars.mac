         GBLC  &COMP
&COMP    SETC  '&SYSPARM'
*$.HE GENERALIZED SUBROUTINES - SYSPARS
*$.HE PLI INTERFACE TO IKJPARS
*$.PL 55
*$.PN 0
*$.PA
*$.SS
*$.NF
*$11/12/75
*$AUTHOR:  T. SMITH
*$SOURCE MODULE NAME:  U0361
*$DOCUMENTATION ID:  *$
*$.FI L
*$.SP 5
*$IF YOU WRITE YOUR OWN COMMAND PROCESSORS IN PLI TO RUN UNDER TSO,
*$YOU WILL NEED A METHOD OF DETERMINING WHETHER THE OPERANDS
*$FOLLOWING THE COMMAND ARE VALID.  THIS INTERFACE WILL PROVIDE YOU
*$WITH THAT CAPABILITY.
*$.SP 1
*$TO USE THIS INTERFACE, YOU MUST CREATE A PARAMETER CONTROL LIST (PCL)
*$---A DESCRIPTION OF PERMISSIBLE OPERANDS, DEFAULT VALUES, AND TEXT TO
*$BE USED WHEN PROMPTING. PARSE SCANS AND CHECKS EACH OPERAND AGAINST
*$THE ENTRIES IN THE PCL (THE ENTRIES ARE CALLED PARAMETER CONTROL
*$ENTRIES (PCES)).  IN TURN, PARSE BUILDS AND RETURNS RESULTS
*$OF THE SCAN TO THE COMMAND PROCESSOR IN A PARAMETER
*$DESCRIPTOR LIST (PDL), WHOSE ENTRIES (CALLED PDES: PARAMETER
*$DESCRIPTOR ENTRIES) CONTAIN POINTERS TO THE SUBFIELDS ENTERED
*$WITH THE COMMAND OPERANDS.
*$.SP 1
*$YOU USE THE ASSEMBLER MACROS IKJPARM, IKJPOSIT, IKJIDENT, IKJKEYWD,
*$IKJNAME, IKJTERM, IKJOPER, IKJRSVWD, IKJSUBF, AND IKJENDP
*$TO CREATE THE PARAMETER CONTROL LIST (PCL), AND TO CREATE THE
*$PLI DECLARE STATEMENTS DEFINING A PARAMETER DESCRIPTOR LIST (PDL).
*$THESE MACROS ARE EXPLAINED IN DETAIL IN THE TSO GUIDE TO WRITING
*$A TERMINAL MONITOR PROGRAM OR A COMMAND PROCESSOR, SRL# GC28-0648.
*$THE DECLARE STATEMENTS GENERATED BY THE ASSEMBLER CAN BE INVOKED IN
*$A SUBSEQUENT PLI COMPILE BY A PREPROCESSOR INCLUDE STATEMENT.
*$.SP 1
*$A SERIES OF JCL CATALOGED PROCEDURES, CPPL1FC AND CPPL1FCL
*$FOR PL/1 F, AND CPPLIXC AND CPPLIXCL FOR THE OPTIMIZER,
*$ARE DESIGNED TO FACILITATE THIS SEQUENCE.  THESE PROCEDURES ARE SET
*$SO THAT YOU SUPPLY THE ASSEMBLER MACROS DEFINING THE PCL UNDER THE
*$QUALIFIED DDNAME GENER.SYSUT1.  THE PROCEDURES CAUSE THESE MACROS TO
*$BE ASSEMBLED, PRODUCING OBJECT TEXT FOR A CSECT CONTAINING THE PCL,
*$AND ALSO PRODUCING PLI DECLARE STATEMENTS DEFINING THE PDL.  IN YOUR
*$PLI SOURCE PROGRAM, WHICH IS SUPPLIED TO THE PROCEDURES UNDER THE
*$QUALIFIED DDNAME PL1L.SYSIN FOR PL/1 F, AND PLI.SYSIN FOR THE
*$OPTIMIZER, YOU CAN INCLUDE THE DECLARE STATEMENTS
*$FOR THE PDL WITH THE STATEMENT "%INCLUDE PDEDCL;".  AN EXAMPLE OF THE
*$USE OF THESE PROCEDURES TO COMPILE A TSO COMMAND PROCESSOR TO ACCEPT
*$A MESSAGE AS A PARAMETER AND WRITE IT BACK TO THE TERMINAL FOLLOWS:
*$.SP 1
*$NOTE THAT YOU CAN USE THE CPPLI COMMAND IN TSO TO CREATE A PL/1 TSO
*$COMMAND PROCESSOR.  USE THE HELP COMMAND TO ACQUIRE MORE INFORMATION.
*$.SP 1
*$.IN 5
*$.NF
*$// EXEC CPPL1FCL
*$//GENER.SYSUT1 DD *
*$PCL IKJPARM
*$MSG IKJPOSIT STRING,DEFAULT='THIS IS DEFAULT'
*$    IKJENDP
*$    END
*$//PL1L.SYSIN DD *
*$ MSGPROC: PROC (CPPL1,CPPL2,CPPL3,CPPL4) OPTIONS(MAIN);
*$ %INCLUDE IKJCPPL;
*$ %INCLUDE PDEDCL;
*$ %INCLUDE IKJPPL;
*$ %INCLUDE PPLINIT;
*$ %INCLUDE IKJPDEST;
*$ DCL RETCODE FIXED BIN(31,0);
*$ CALL SYSPARS(PPLPTR,RETCODE);
*$ PDEPTR = ADDR(MSG);
*$ DCL INPTR PTR;
*$ INPTR = PDESTPTR;
*$ DCL INSTR CHAR(80) BASED(INPTR);
*$ DCL 1 OUTPUT,
*$  2 OUTLEN FIXED BIN(15,0),
*$  2 OFFSET FIXED BIN(15,0) INIT(0B),
*$  2 OUTSTR CHAR(80);
*$ OUTSTR = INSTR;
*$ OUTLEN = PDESTLN+4;
*$ CALL PUTLINE(CPPLUPT,CPPLECT,CPECB,OUTPUT,RETCODE,'DATA');
*$ END;
*$//LKED.SYSLMOD DD DSN=SYS2.CMDLIB,DISP=SHR,VOL=
*$//LKED.SYSIN DD *
*$ ENTRY IHESAPB
*$ NAME MSG(R)
*$.IN 0
*$.FI L
*$.SP 1
*$CALL SYSPARS(PPLPTR,RETCODE);
*$.SP 1
*$.CE 1
*$DEFINITION OF TERMS
*$.SP 1
*$PPLPTR
*$.IN 5
*$PPLPTR IS A POINTER VARIABLE CONTAINING THE ADDRESS
*$OF AN INITALIZED PARSE PARAMETER LIST.  PREPROCESSOR
*$INCLUDE MEMBER IKJPPL PROVIDES A LAYOUT AND DESCRIPTION OF
*$THIS PARAMTER LIST.
*$.IN 0
*$RETCODE
*$.IN 5
*$RETCODE IS FIXED BIN(31,0) TO CONTAIN  THE RETURN
*$CODE FROM IKJPARS.  IF THIS IS NON-ZERO, IT
*$INDICATES THAT PARSE WAS UNSUCCESSFUL IN OBTAINING
*$VALID PARAMETERS FROM THE TERMINAL USER.  IN THIS
*$CASE, ALL REAL STORAGE ALLOCATED BY PARSE HAS BEEN
*$FREED BY PARSE.
*          *
***************************************************************
SYSPARS  PLIENTRY ,COMPILE=&COMP
         L     2,4(1)                  R2 = A(RETCODE)
         L     1,0(1)                  R1 = A(PPLPTR)
         L     1,0(1)                  R1 = A(PPL)
         LA    1,0(1)                  CLEAR HI-BYTE
         LINK  EP=IKJPARS
         ST    15,0(2)                 SET RETCODE
EXIT     PLIEXIT
         LTORG
         END
