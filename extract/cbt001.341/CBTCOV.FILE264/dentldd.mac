 /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
 /* DENTLDD */
 /**********************************************************************
 * THIS SUBROUTINE IS PASSED A DSNAME, AND WILL RETURN THE 8-CHARACTER *
 * DDNAME IF THE DATA SET IS CURRENTLY ALLOCATED TO THE TSO SESSION,   *
 * OR IT WILL RETURN BLANKS IF IT IS NOT.  THE DATA SET MUST BE        *
 * ALLOCATED WITH THE PERMANENT STATUS, AND IF IT IS PARTITIONED,      *
 * IT MUST BE ALLOCATED DISP=OLD OR SHR.                               *
 **********************************************************************/
 DENTLDD:  PROC(PARMDSN) RETURNS(CHAR(8)) OPTIONS(REENTRANT);
         DCL PARMDSN CHAR(44);
         DCL NULL BUILTIN;
         DCL SYSSVC ENTRY(FIXED BIN(15,0),PTR,PTR)
           RETURNS(FIXED BIN(31,0));
         DCL REQNUM FIXED BIN(15,0),
             DSADSLNG FIXED BIN(15,0),
             DSADSNAM CHAR(44) VAR,
             DYNAMCNT FIXED BIN(15,0),
             DSACNTRL BIT(8),
             LSTENTRY CHAR(1),
             DSTYPE BIT(8),
             DMEMLNT FIXED BIN(15,0),
             DSAMEM CHAR(8) VAR,
             DSADDNAM CHAR(8),
             DSANDISP FIXED BIN(15,0),
             DSACDISP FIXED BIN(15,0);
         DO REQNUM = 1 REPEAT REQNUM+1 UNTIL(LSTENTRY ^= LOW(1));
           CALL DAR(REQNUM);
           IF DMEMLNT^=0
             THEN DSADSNAM=DSADSNAM××'('××DSAMEM××')';
           IF PARMDSN=DSADSNAM
             THEN IF ^(INDEX(PARMDSN,'(')^=0 & ^(DSASTAT=1 × DSASTAT=4))
               THEN IF SUBSTR(DSACNTRL,3,1) /* PERMANENT? */
                 THEN RETURN(DSADDNAM);
           END;
         RETURN(''); /* DDNAME NOT FOUND */
 DAR:  PROC(REQ) OPTIONS(REENTRANT);
         DCL REQ FIXED BIN(15,0);
         DCL DARRET FIXED BIN(31,0);
         DCL DAPARM PTR INIT(ADDR(DARQBLK)),
             DAPARM_HIBIT BIT(8) DEFINED DAPARM;
         DCL REG1 PTR INIT(ADDR(DAPARM));
         DAPARM_HIBIT = '10000000'B;
         DCL 1 DARQBLK UNALIGNED,
              2 DABLKLN BIT(8) INIT('00010100'B),
                   /* LENGTH OF BLOCK */
              2 DAVERB BIT(8) INIT('00000111'B),
                   /* VERB CODE = INFORMATION RETRIEVAL */
              2 DAFLGS1 FIXED BIN(15,0) INIT(0),
                   /* FLAGS */
              2 DAERRCD FIXED BIN(15,0) INIT(0),
                   /* ERROR RETURN CODES */
              2 DAINFO FIXED BIN(15,0) INIT(0),
                   /* INFORMATION RETURN CODES */
              2 DATXTPT PTR INIT(ADDR(DAPTR)),
                   /* ADDRESS OF TEXT POINTERS */
              2 DARSVD FIXED BIN(31,0) INIT(0),
                   /* RESERVED */
              2 DAFLGS2 FIXED BIN(31,0) INIT(0);
                   /* FLAGS */
         DCL DAPTR(11) PTR INIT(
           ADDR(DAREQ),ADDR(DADSNM),ADDR(DALIMIT),
           ADDR(DATTR),ADDR(DALENTRY),ADDR(DADSTYPE),
           ADDR(DAMEM),ADDR(DADDNM),ADDR(DASTAT),
           ADDR(DANDISP),ADDR(DACDISP));
         DCL DAPTRDEF(11) BIT(32) DEF(DAPTR);
         SUBSTR(DAPTRDEF(11),1,1) = '1'B;
         % DCL @DINIT ENTRY;
 % @DINIT:  PROC(P0,P1,P2,P3) RETURNS(CHAR);
         DCL (P0,P1,P2,P3) CHAR;
         RETURN(P0××',3 KEY FIXED BIN(15,0) INIT('××P1××
           '), 3 NUMB FIXED BIN(15,0) INIT('××P2××
           '), 3 LENG FIXED BIN(15,0) INIT('××P3××
           '), 3 PARM CHAR('××P3××')');
         % END @DINIT;
         DCL 1 DATXT UNALIGNED,
              2  @DINIT(DAREQ,15,1,2),
              2  @DINIT(DADSNM,5,1,44),
              2  @DINIT(DALIMIT,11,1,2),
              2  @DINIT(DATTR,12,1,1),
              2  @DINIT(DALENTRY,13,1,1),
              2  @DINIT(DADSTYPE,14,1,1),
              2  @DINIT(DAMEM,6,1,8),
              2  @DINIT(DADDNM,4,1,8),
              2  @DINIT(DASTAT,7,1,1),
              2  @DINIT(DANDISP,8,1,1),
              2  @DINIT(DACDISP,9,1,1);
         UNSPEC(DAREQ.PARM) = UNSPEC(REQ);
         DARRET = SYSSVC(99,NULL,REG1);
         DSADSLNG = DADSNM.LENG;
         DSADSNAM = SUBSTR(DADSNM.PARM,1,DADSNM.LENG);
         DYNAMCNT = UNSPEC(DALIMIT.PARM);
         DSACNTRL = UNSPEC(DATTR.PARM);
         LSTENTRY = DALENTRY.PARM;
         DSTYPE = UNSPEC(DADSTYPE.PARM);
         DMEMLNT = DAMEM.LENG;
         DSAMEM = SUBSTR(DAMEM.PARM,1,DAMEM.LENG);
         DSADDNAM = SUBSTR(DADDNM.PARM,1,DADDNM.LENG);
         DSASTAT = UNSPEC(DASTAT.PARM);
         IF DSASTAT ^= 0
              THEN DSASTAT = LOG2(DSASTAT)+1;
         DSANDISP = UNSPEC(DANDISP.PARM);
         IF DSANDISP ^= 0
              THEN DSANDISP = LOG2(DSANDISP)+1;
         DSACDISP = UNSPEC(DACDISP.PARM);
         IF DSACDISP ^= 0
              THEN DSACDISP = LOG2(DSACDISP)+1;
         END DAR;
         END DENTLDD;
