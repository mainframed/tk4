 /* MATMULT */
 /*
0*$.HE GENERALIZED SUBROUTINES - MATMULT
0*$.HE MATRIX MULTIPLY A(N,M)*B(M,N)=C(N,N)
0*$.PL 55
0*$.PN 0
0*$.PA
0*$.SS
0*$.NF
0*$07/10/78
0*$AUTHOR:  P. DIXON
0*$SOURCE MODULE NAME:  MATMULT
0*$DOCUMENTATION ID:  0*$
0*$.FI L
0*$.SP 5
0*$THE MATMULT SUBROUTINE CAN BE USED TO COMPUTE THE PRODUCT OF TWO
0*$MATRICES.  CALL FORMAT IS AS FOLLOWS:
0*$.SP 1
0*$.IN 5
0*$CALL MATMULT(A,B,C);
0*$.IN 0
0*$.SP 1
0*$WHERE "A", "B", AND "C" ARE TWO-DIMENSIONAL ARRAYS DECLARED
0*$FLOAT BINARY(53).  NOTE THAT THE BOUNDS OF ARRAYS "A", "B", AND "C"
0*$DO NOT HAVE TO BE THE SAME, BUT THEIR EXTENTS MUST TAKE THE
0*$FOLLOWING FORM:
0*$.IN 5
0*$.SP 1
0*$A(N,M) * B(M,X) = C(N,X)
0*$.SP 1
0*$.IN 0
0*$ON RETURN FROM THE MATMULT SUBROUTINE, ARRAY "C" WILL
0*$BE SET TO THE PRODUCT OF "A" AND "B".  IF THE EXTENTS FOR
0*$ARRAYS "A", "B", AND "C" DO NOT CONFORM TO THE RULES
0*$NECESSARY FOR MATRIX MULTIPLIES, THE ERROR CONDITION WILL
0*$BE SIGNALLED.
 */
 MATMULT:  PROC(A,B,C);
         DFT RANGE(*) BIN FLOAT VALUE(BIN FLOAT(53));
         DCL A(*,*); /* FIRST ARRAY OPERAND FOR MULTIPLY */
         DCL B(*,*); /* SECOND ARRAY OPERAND FOR MULTIPLY */
         DCL C(*,*); /* ARRAY TO CONTAIN PRODUCT OF A AND B */
         DCL (I,J,K) FIXED;
         DCL (LBOUND,DIM) BUILTIN;
         /* THE FOLLOWING CODE CHECKS TO MAKE SURE THAT THE EXTENTS
         *  OF THE THREE ARRAYS A, B, AND C ARE AS FOLLOWS:
         *
         *    A(N,M) * B(M,X) = C(N,X)
         *
         */
         IF DIM(A,1) ^= DIM(C,1)
              THEN SIGNAL ERROR;
         IF DIM(A,2) ^= DIM(B,1)
              THEN SIGNAL ERROR;
         IF DIM(B,2) ^= DIM(C,2)
              THEN SIGNAL ERROR;
         DO I = LBOUND(C,1) TO HBOUND(C,1);
           DO J = LBOUND(C,2) TO HBOUND(C,2);
             C(I,J) = 0;
             DO K = LBOUND(A,2) TO HBOUND(A,2);
               C(I,J) = C(I,J) + A(I-LBOUND(C,1)+LBOUND(A,1),K)*
                B(K-LBOUND(A,2)+LBOUND(B,1),J-LBOUND(C,2)+LBOUND(B,2));
               END;
             END;
           END;
         END MATMULT;
