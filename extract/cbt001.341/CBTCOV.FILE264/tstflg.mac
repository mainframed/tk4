 TSTFLG: PROC(PARM) OPTIONS(MAIN);
         DCL DDNAME CHAR(8) INIT('CONTROL');
         DCL 1 JFCB,
              2 JFCBDSNAM CHAR(44),
              2 JFCBPAD CHAR(132);
         DCL JFCBPTR PTR;
         DCL QNAME CHAR(8) STATIC INIT('KCENQ');
         DCL RNAME CHAR(52);
         DCL RETURN CHAR(2);
         DCL PARM CHAR(100) VARYING;
         DCL SWOUT CHAR(32),
              MASK BIT(256) DEF SWOUT;
         DCL 1 CTL,
              2 CTLREC CHAR(64),
              2 PAD CHAR(16);
         DCL CTLOUT CHAR(32),
              SWITCHES BIT(256) DEF CTLOUT;
         DCL SWITCHT BIT(256);
         DCL PLIRETC BUILTIN;
         DCL OPSTACK(0:255) FIXED BIN(15,0) INIT(1);
         DCL OPINDEX FIXED BIN INIT(0);
         DCL OPARY(6) CHAR(1) STATIC INIT('(',')','×','&','^','=');
         DCL INHI(6) FIXED BIN STATIC INIT(5,  0,  1,  2,  4,  3);
         DCL STHI(6) FIXED BIN STATIC INIT(0,  0,  1,  2,  4,  3);
         DCL BITSTACK(0:256) BIT(1);
         DCL BITINDEX FIXED BIN INIT(0);
         DCL UNARYSW BIT(1) STATIC;
         DCL OPERCD CHAR(80),
              OPCARY(80) CHAR(1) DEF OPERCD;
         DCL OPLAB(6) LABEL;
         DCL (BITA,BITB) BIT(1);
         DCL SYSCD CHAR(80),
              SYSARY(80) CHAR(1) DEF SYSCD;
         READ FILE(CONTROL) INTO (CTL);
         CLOSE FILE(CONTROL);
         CALL TRIN(CTLREC,CTLOUT);
         ON ENDFILE(SYSIN) GO TO EOJ;
         ON UNDEFINEDFILE(SYSIN) GO TO BADRET;
         IF PARM = LOW(1)
              THEN GO TO SYSNXT;
         JFCBPTR = ADDR(JFCB);
         CALL SYSJFCB(DDNAME,JFCBPTR);
         RNAME='CONTROL.'××JFCBDSNAM;
         CALL SYSENQ(QNAME,RNAME,'SYSTEM','E','WAIT',RETURN);
         IF RETURN = 'ER' THEN GO TO BADRET;
         CTLREC = PARM;
         CALL TRIN(CTLREC,SWOUT);
         SWITCHT = SWITCHES & MASK;
         IF SWITCHT ^= MASK THEN CALL PLIRETC(4);
         ON UNDEFINEDFILE(SYSIN) GO TO DEQ;
 SYSNXT:
         READ FILE(SYSIN) INTO(SYSCD);
         J = 1;
 SYSNXTA:
         IF J > 72 THEN GO TO SYSNXT;
         DO I = J TO 72 WHILE(SYSARY(I) = ' ');
              END;
         IF I > 72 THEN GO TO SYSNXT;
          IF SYSARY(I) = '(' THEN DO;
                K,N = 1;
                J = I + 1;
                GO TO UNSTACK;
                END;
         DO J = I TO 72 WHILE(SYSARY(J) ^= ' ');
              END;
         K = J - I;
         IF K = 1
              THEN DO N = 1 TO 6 WHILE(OPARY(N) ^= SYSARY(I));
                   END;
              ELSE DO;
                   N = 7;
                   IF SYSARY(J - 1) = ')' THEN DO;
                     J = J - 1;
                     K = K - 1;
                     END;
                   IF SYSARY(I) = '^'
                        THEN DO;
                             IF K = 2 THEN IF SYSARY(I+1) = '='
                                  THEN DO;
                                  N = 5;
                                  GO TO UNSTACK;
                                  END;
                             UNARYSW = '1'B;
                             K = K - 1;
                             I = I + 1;
                             END;
                        ELSE UNARYSW = '0'B;
                   END;
         IF N = 7
              THEN DO;
                   ON ENDFILE(CONTROL) GO TO BADRET;
                   READ FILE(CONTROL) INTO(OPERCD);
                   NUMSYM = 0;
 NXTCTLOP:
                   READ FILE(CONTROL) INTO (OPERCD);
                   JO = 1;
 NXTCTLOPA:
                   DO IO = JO TO 72 WHILE(OPCARY(IO) = ' ');
                        END;
                   IF IO > 72
                        THEN GO TO NXTCTLOP;
                   NUMSYM = NUMSYM + 1;
                   DO JO = IO TO 72 WHILE(OPCARY(JO) ^= ' ');
                        END;
                   KO = JO - IO;
                   IF SUBSTR(SYSCD,I,K) ^= SUBSTR(OPERCD,IO,KO)
                        THEN GO TO NXTCTLOPA;
                   BITINDEX = BITINDEX + 1;
                   IF UNARYSW
                        THEN BITSTACK(BITINDEX) = ^SUBSTR(SWITCHES,
                          NUMSYM,1);
                        ELSE BITSTACK(BITINDEX) = SUBSTR(SWITCHES,
                          NUMSYM,1);
                   CLOSE FILE(CONTROL);
                   GO TO SYSNXTA;
                   END;
 UNSTACK:
         IF INHI(N) > STHI(OPSTACK(OPINDEX))
              THEN DO;
                   OPINDEX = OPINDEX + 1;
                   OPSTACK(OPINDEX) = N;
                   GO TO SYSNXTA;
                   END;
         BITA = BITSTACK(BITINDEX);
         BITB = BITSTACK(BITINDEX-1);
         GO TO OPLAB(OPSTACK(OPINDEX));
 OPLAB(1): /* ( */
         IF OPINDEX = 0
              THEN DO;
                   IF ^BITSTACK(1) THEN CALL PLIRETC(4);
                   GO TO DEQ;
                   END;
         OPINDEX = OPINDEX - 1;
         GO TO SYSNXTA;
 OPLAB(3): /* × */
         BITA = BITA × BITB;
         GO TO SETBIT;
 OPLAB(4): /* & */
         BITA = BITA & BITB;
         GO TO SETBIT;
 OPLAB(5): /* ^ */
         BITA = BITA ^= BITB;
         GO TO SETBIT;
 OPLAB(6): /* = */
         BITA = BITA = BITB;
 SETBIT:
         BITINDEX = BITINDEX - 1;
         BITSTACK(BITINDEX) = BITA;
         OPINDEX = OPINDEX - 1;
         GO TO UNSTACK;
 EOJ:
         SYSCD = ')';
          N = 2;
         GO TO UNSTACK;
 BADRET:
         CALL PLIRETC(8);
 DEQ:
         IF PARM ^= LOW(1)
              THEN CALL SYSDEQ(QNAME,JFCBDSNAM,'SYSTEM',RETURN);
         END;
