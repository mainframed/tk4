   /*NEWVOLP*/
         % INCLUDE CPINIT1;
         % @CP = 'NEWVOLP';
         % INCLUDE CPINIT2;
         @PROC(1,PNEWVL,CHANGE#(CHANGE,ADD,DELETE),OLDVOL(),
           TYPE(),DAILY,WEEKLY,MONTHLY,REQUEST,RESIDENT,
           OFFLINE,LOCAL,REMOTE,TRK(#(NUMERIC)),CHG(#(NUMERIC)),
           BDAILY(999#(NUMERIC)),BWEEKLY(999#(NUMERIC)),
           BMNTHLY(999#(NUMERIC)),BQTRLY(999#(NUMERIC)),
           BYEARLY(999#(NUMERIC)),BSWKLY(999#(NUMERIC)),
           SBWKDAY,NSBWKDAY,
           SCRTCH(ID),PHYSERK(),NULLFREQ,NDAILY,NWEEKLY,NMONTHLY,
           NREQUEST,NRESIDEN,NOFFLINE,NLOCAL,NREMOTE);
         % INCLUDE CTLGDEF;
         DCL AREA CHAR(265);
         CTLGPTR = ADDR(AREA);
         DCL CTLGRETC CHAR(4),
             CTLGRET BIT(32) DEF CTLGRETC;
         DCL CTLGRETO CHAR(8);
         DCL BTMP FIXED DEC(3,0);
         DCL BSW(6) BIT(1) INIT((6)(1)'0'B);
         DCL BARY(6) CHAR(8) VARYING STATIC INIT(
              '&BDAILY',
              '&BSWKLY',
              '&BWEEKLY',
              '&BMNTHLY',
              '&BQTRLY',
              '&BYEARLY');
         DCL CARY(6) CHAR(8) VARYING STATIC INIT(
              'DAILY',
              'SWKLY',
              'WEEKLY',
              'MNTHLY',
              'QTRLY',
              'YEARLY');
         DCL (CURDSN,CURINDX) CHAR(44);
         DCL SUFFIX ENTRY RETURNS(FIXED BIN(15,0));
         DFT RANGE(*) FIXED BIN VALUE(FIXED BIN(31,0));
         DCL PLIXOPT CHAR(15) VAR INIT('ISA(50K)') STATIC EXT;
         IF CHANGE=0
              THEN CHANGE=2;  /* DEFAULT=ADD */
         DCL TMPTYPE CHAR(8) VARYING;
         DCL MYCHG CHAR(5) VARYING;
         % INCLUDE TGSINITT;
         MYCHG = SYMC('&CHG');
         IF MYCHG^='0'
              THEN IF LENGTH(MYCHG)^=5
                   THEN DO;
                        CALL MSGPROC(21);
                        RETURN;
                        END;
         % INCLUDE TGSINIT;
         % INCLUDE TGSINITQ;
         DCL VOLRECS CHAR(110);
         VOLRPTR = ADDR(VOLRECS);
         VOLRECS = LOW(110);
         SUBSTR(VCOMFLG,1,1) = '1'B;
         DCL BDAMRECT CHAR(110);
         DSNRPTR = ADDR(BDAMRECT);
         DCL NEWFLGS BIT(8);
         DCL 1 DEVDATA(4),
              2 DEVID CHAR(6) INIT('2314','3330','3330-1','3350'),
              2 TDNTRK FIXED BIN(15,0) INIT(4060,7676,15352,16650);
                   /* # TRKS AVAILABLE */
         VOLREC.VOLSER=SYMC('&PNEWVL');
         IF MYCHG ^= '0'
              THEN DO;
                   VDFTDIV=SUBSTR(MYCHG,1,2);
                   VDFTDEP=SUBSTR(MYCHG,3,3);
                   END;
              ELSE IF CHANGE=2 /* ADD */
                   THEN DO;
                        VDFTDIV=0;
                        VDFTDEP=0;
                        END;
         IF   CHANGE = 3 /* 3 = DELETE */
              THEN DO;
                   CALL DELVOL(VOLREC.VOLSER);
                   GO TO WRITQCR;
                   END;
         ISAMKEY = VOLREC.VOLSER;
         FUNCTION = 'READ';
         CALL ISAMIO(ISAMWRK,ISAMIN);
         IF ERRCODE = '0'B
              THEN DO;
                   IF CHANGE = 2 /* 2=ADD */
                        THEN GO TO WRITQCR;
                   BDAMKEYA = ISAM.DAMASTER;
                   READ FILE(BDAMFLE) INTO(VOLRECS) KEY(BDAMKEY);
                   GO TO DOCHNGE;
                   END;
              ELSE DO;
                   IF CHANGE = 1 /* 1=CHANGE */
                        THEN DO;
                             CALL MSGPROC(7);
                             GO TO WRITQCR;
                             END;
                   IF OLDVOL ^= 0
                        THEN DO;
                             ISAMKEY=SYMC('&OLDVOL');
                             FUNCTION = 'READ';
                             CALL ISAMIO(ISAMWRK,ISAMIN);
                             IF ERRCODE ^= '0'B
                                  THEN DO;
                                       CALL MSGPROC(7);
                                       GO TO WRITQCR;
                                       END;
                             BDAMKEYA = ISAM.DAMASTER;
                             FUNCTION = 'DELET';
                             CALL ISAMIO(ISAMWRK,ISAMIN);
                             READ FILE(BDAMFLE) INTO(VOLRECS)
                               KEY(BDAMKEY);
         % INCLUDE TGSPREDC;
         % PRENPT = 'VOLNPT';
         % PREPPT = 'VOLPPT';
         % PRERUT = 'DAFSTVL';
         % INCLUDE TGSDQC;
                             VOLREC.VOLSER=SYMC('&PNEWVL');
                             BDAMKEYA = DSNFPT;
                             DO WHILE(BDAMKEYA ^= 0);
                                  READ FILE(BDAMFLE) INTO(BDAMRECT)
                                    KEY(BDAMKEY);
                                       IF DNDUPPT ^= 0 ×
                                    DPDUPPT ^= 0
                                       THEN DO;
         % PRENPT = 'DNDUPPT';
         % PREPPT = 'DPDUPPT';
         %PRERUT = 'ISAM.DAMASTER';
         % PREKEY = 'DSN';
         % INCLUDE TGSDQC;
                                       END;
                                       NEWVOL = VOLREC.VOLSER;
                                       IF DNDUPPT ^= 0 ×
                                    DPDUPPT ^= 0
                                       THEN DO;
                                                 FUNCTION = 'READ';
                                                 ISAMKEY = DSN;
                                                 CALL ISAMIO(ISAMWRK,
                                                   ISAMIN);
         % PREDAM = 'DSNREC.DAMASTER';
         % PREKEY = 'NEWVOL';
         % INCLUDE TGSNQC;
                                                 END;
                                  BDAMKEYA = DSNREC.DAMASTER;
                                  WRITE FILE(BDAMFLE) FROM(BDAMRECT)
                                    KEYFROM(BDAMKEY);
                                  END;
                             GO TO DOCHNGE;
                             END;
                   END;
         VOLREC.DAMASTER = DALFREE;
         RETURN = GETRET;
         GO TO GETFREE;
 GETRET:
         VOLPPT,VOLNPT,DSNFPT,TTRKS,FTRKS = 0;
         VOLFLGS = '0'B;
 DOFREQ:
         TMPTYPE=SYMC('&TYPE');
         DO I = 1 TO 4 WHILE(DEVID(I)^=TMPTYPE);
              END;
         IF I > 4
              THEN IF CHANGE = 2 /* ADD */
                   THEN I = 2; /* DEFAULT TO 3330 ON ADD */
         IF I < 5
              THEN DO;
                   SUBSTR(VOLFLGS,8,4) = '0'B;
                   SUBSTR(VOLFLGS,8+I,1) = '1'B;
                   IF CHANGE = 2 /* ADD */
                        THEN DO;
                             MYTRK = SYMA('&TRK');
                             IF MYTRK = 0
                                  THEN TTRKS,FTRKS = TDNTRK(I);
                                  ELSE DO;
                                       TTRKS=MYTRK;
                                       FTRKS=TTRKS;
                                       END;
                             END;
                   END;
         IF CHANGE=2 /*ADD*/ × (CHANGE=1 & (SYMC('&PHYSERK')^=''))
              THEN PHYSER = SYMC('&PHYSERK');
         IF DAILY+WEEKLY+MONTHLY+REQUEST+RESIDENT+OFFLINE+LOCAL+
           REMOTE+NULLFREQ+NDAILY+NWEEKLY+NMONTHLY+NREQUEST+NRESIDEN
           +NOFFLINE+NLOCAL+NREMOTE ^= 0
              THEN DO;
                   NEWFLGS = '0'B;
                   IF OFFLINE ^= 0
                        THEN SUBSTR(NEWFLGS,1,1) = '1'B;
                   IF NOFFLINE ^= 0
                        THEN SUBSTR(NEWFLGS,1,1) = '0'B;
                   IF RESIDENT ^= 0
                        THEN SUBSTR(NEWFLGS,2,1) = '1'B;
                   IF NRESIDEN ^= 0
                        THEN SUBSTR(NEWFLGS,2,1) = '0'B;
                   IF DAILY ^= 0
                        THEN SUBSTR(NEWFLGS,3,1) = '1'B;
                   IF NDAILY ^= 0
                        THEN SUBSTR(NEWFLGS,3,1) = '0'B;
                   IF WEEKLY ^= 0
                        THEN SUBSTR(NEWFLGS,4,1) = '1'B;
                   IF NWEEKLY ^= 0
                        THEN SUBSTR(NEWFLGS,4,1) = '0'B;
                   IF MONTHLY ^= 0
                        THEN SUBSTR(NEWFLGS,5,1) = '1'B;
                   IF NMONTHLY ^= 0
                        THEN SUBSTR(NEWFLGS,5,1) = '0'B;
                   IF REQUEST ^= 0
                        THEN SUBSTR(NEWFLGS,6,1) = '1'B;
                   IF NREQUEST ^= 0
                        THEN SUBSTR(NEWFLGS,6,1) = '0'B;
                   IF LOCAL ^= 0
                        THEN SUBSTR(NEWFLGS,7,1) = '1'B;
                   IF NLOCAL ^= 0
                        THEN SUBSTR(NEWFLGS,7,1) = '0'B;
                   IF REMOTE ^= 0
                        THEN SUBSTR(NEWFLGS,8,1) = '1'B;
                   IF NREMOTE ^= 0
                        THEN SUBSTR(NEWFLGS,8,1) = '0'B;
                   IF NULLFREQ ^= 0
                        THEN NEWFLGS = '0'B;
                   SUBSTR(VOLFLGS,1,8) = NEWFLGS;
                   END;
         IF SYMC('&SCRTCH') = 'YES'
              THEN SUBSTR(VOLFLGS,16,1) = '0'B;
              ELSE IF SYMC('&SCRTCH') = 'NO' × CHANGE = 2 /* ADD */
                   THEN SUBSTR(VOLFLGS,16,1) = '1'B;
         IF CHANGE = 2 /* 2 = ADD */
              THEN VBACKUP(*),VBDTE(*) = 0;
         DO I = 1 TO 6 WHILE(SYMA(BARY(I)) < 1000);
              END;
         IF I < 6
              THEN DO;
                   @WRITE('BACKUP IGNORED - SPECIFICATION EXCEEDS 998');
                   END;
              ELSE DO;
                   DO I = 1 TO 6;
                        BTMP = SYMA(BARY(I));
                        IF BTMP < 999
                             THEN DO;
                                  BSW(I) = '1'B;
                                  VBACKUP(I) = BTMP;
                                  END;
                        END;
              DO I = 1 TO 6;
                   IF BSW(I)
                        THEN CALL GDGPRC(I);
                   END;
              END;
         IF SBWKDAY = 0 & NSBWKDAY = 0 THEN GO TO BYPASS;
           ELSE DO;
            IF SBWKDAY = 1 & NSBWKDAY = 1 THEN DO;
             @WRITE('SPECIFY EITHER SBWKDAY OR NSBWKDAY, NOT BOTH.');
             GO TO BYPASS;
             END;
              ELSE DO;
                IF  SBWKDAY ^= 0 THEN SUBSTR(VOLFLGS,13,1) = '1'B;
                IF NSBWKDAY ^= 0 THEN SUBSTR(VOLFLGS,13,1) = '0'B;
                END;
            END;
 BYPASS: BDAMKEYA = VOLREC.DAMASTER;
         IF CHANGE=2 /*2=ADD*/ × OLDVOL ^= 0
              THEN CALL ADDVOL(VOLRPTR);
              ELSE WRITE FILE(BDAMFLE) FROM(VOLRECS) KEYFROM(BDAMKEY);
         GO TO WRITQCR;
 DOCHNGE:
         IF MYCHG ^= '0'
              THEN DO;
                   VDFTDIV=SUBSTR(MYCHG,1,2);
                   VDFTDEP=SUBSTR(MYCHG,3,3);
                   END;
         MYTRK = SYMA('&TRK');
         IF MYTRK ^= 0
              THEN DO;
                   I=SYMC('&TRK');
                   J = FTRKS + I - TTRKS;
              IF J < 0
                        THEN DO;
                             CALL MSGPROC(13);
                             GO TO DOFREQ;
                             END;
                   FTRKS = J;
                   TTRKS = I;
                   END;
         GO TO DOFREQ;
 GDGPRC:  PROC(I);
         DCL CVOL CHAR(6) INIT('SYSRES');
         DCL HDPTR PTR;
         HDPTR = NULL;
         DCL VOLL PTR;
         DCL 1 CENT UNALIGNED BASED(CENTPTR),
              2 CNPTR PTR,
              2 CNME CHAR(44),
              2 VOLLIST,
               3 VOLCNT FIXED BIN(15,0),
               3 VOLID(20),
                4 DEVCODE BIT(32),
                4 VOLSER CHAR(6),
                4 DSSQ FIXED BIN(15,0);
         CENTPTR = ADDR(HDPTR);
         DCL NEWPTR PTR;
         DCL PRTDSN CHAR(44) VARYING;
         DCL PRTVOL CHAR(100) VARYING;
         DCL COMCTL CHAR(1) VARYING INIT('');
         DO UNTIL(CTLGRET^=0);
              CURDSN='U.SD.U000.BACKUP.'××VOLREC.VOLSER××'.'××
                CARY(I)××'(0)';
              CALL SYSCTLG('NAME',CTLGRET,CURDSN,CVOL,AREA);
              IF CTLGRET = 0
                   THEN DO;
                        ALLOC CENT SET(NEWPTR);
                        CENTPTR->CNPTR = NEWPTR;
                        CENTPTR = NEWPTR;
                        CNPTR = NULL;
                        CNME = CURDSN;
                        CENT.VOLCNT = VLSTBLK.VOLCNT;
                        CENT.VOLID = VLSTBLK.VOLID;
                        CVOL = SUBSTR(AREA,260,6);
                        CALL SYSCTLG('UNCAT',CTLGRET,CURDSN,CVOL);
                        IF CTLGRET ^= 0
                             THEN DO;
                                  CALL CTLGERR;
                                  RETURN;
                                  END;
                             ELSE DO;
                                  @SETL(&PDSN=SUBSTR(CURDSN,1,
                                    SUFFIX(CURDSN,' ')));
                                  PRTVOL = '';
                                  COMCTL = '';
                                  DO J = 1 TO VLSTBLK.VOLCNT;
                                       PRTVOL=PRTVOL××COMCTL××
                                         VLSTBLK.VOLSER(J);
                                       COMCTL = ',';
                                       END;
                                  @SETL(&PVOL = PRTVOL);
 @WRITE('UNCATALOGED, DSN=&PDSN, VOL(S)=&PVOL');
                                  END;
                        END;
              END;
         CURDSN = 'U.SD.U000.BACKUP.'××VOLREC.VOLSER××'.'××CARY(I);
         @SETL(&PDSN=SUBSTR(CURDSN,1,SUFFIX(CURDSN,' ')));
         CALL SYSCTLG('DLTX',CTLGRET,CURDSN,CVOL);
         IF CTLGRET = 0
              THEN DO;
                   @WRITE('INDEX = &PDSN DELETED');
                   END;
         IF VBACKUP(I) ^= 0
              THEN DO;
                   DO J=1 REPEAT K+J UNTIL(K=0);
                        K = INDEX(SUBSTR(CURDSN,J),'.');
                        IF K ^= 0
                             THEN DO;
                                  CURINDX=SUBSTR(CURDSN,1,K+J-2);
                                  CALL SYSCTLG('BLDX',CTLGRET,
                                    CURINDX,CVOL);
                                  END;
                        END;
                   CALL SYSCTLG('BLDG',CTLGRET,CURDSN,
                     CVOL,'DELETE',VBACKUP(I));
                   IF CTLGRET ^= 0
                        THEN DO;
                             CALL CTLGERR;
                             RETURN;
                             END;
                   @SETL(&PCNT = VBACKUP(I));
         @WRITE('INDEX = &PDSN WILL NOW CONTAIN &PCNT GENERATIONS');
                   END;
         J = 0;
         DO CENTPTR=HDPTR REPEAT NEWPTR WHILE(CENTPTR^=NULL);
              J = J + 1;
              IF J <= VBACKUP(I)
                   THEN DO;
                        VOLL = ADDR(VOLLIST);
                        CALL SYSCTLG('CAT',CTLGRET,CNME,CVOL,VOLL);
                        @SETL(&PDSN=SUBSTR(CNME,1,SUFFIX(CNME,' ')));
                        @WRITE('CATALOGED = &PDSN');
                        END;
              NEWPTR = CNPTR;
              FREE CENT;
              END;
         END GDGPRC;
 CTLGERR: PROC;
         CALL TROUT(CTLGRETC,CTLGRETO);
         @SETL(&CTLGRET = CTLGRETO);
         @SETL(&PDSN = SUBSTR(CURDSN,1,SUFFIX(CURDSN,' ')));
         @WRITE('ERROR=&CTLGRET FOR DSN=&PDSN');
         END CTLGERR;
         END;
