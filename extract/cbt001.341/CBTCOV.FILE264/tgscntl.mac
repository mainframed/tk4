 CNTLPRC: PROC(TOTRK,DS1DSNAM,VOLUME,EOFSW);
         DCL TOTRK FIXED BIN(31,0);
         DCL DS1DSNAM CHAR(44);
         DCL VOLUME CHAR(6);
         DCL EOFSW BIT(1);
         DCL PLIRETC BUILTIN;
         DCL DSNRCOR CHAR(110);
         DSNRPTR = ADDR(DSNRCOR);
         DCL VOLRECS CHAR(110);
         VOLRPTR = ADDR(VOLRECS);
         DCL (RETLAB,SUBRET) LABEL;
         % INCLUDE CTLGDEF;
         DCL 1 ABND,
              2 DUM BIN FLOAT(53),
              2 AREA CHAR(265);
         DCL PTRFIX FIXED BIN(31,0) DEF CTLGPTR;
         DCL CVOL CHAR(6);
         DCL MYRETB FIXED BIN(31,0);
         DCL MYRET BIT(32) DEF MYRETB;
         DCL MYREG15 BIT(8) DEF MYRETB;
         DCL WKAREA CHAR(148);
         % INCLUDE TGSINITA;
         DCL DLCNT FIXED BIN STATIC INIT(0B);
         DCL 1 EXCDLR STATIC,
              2 P1 CHAR(10) INIT(' DUMP DSN='),
              2 EXCDLRN CHAR(70);
         DCL 1 EXCRQR1 STATIC,
              2 P1 CHAR(9) INIT('REQSPACE '),
              2 RQDSN CHAR(44),
              2 P2 CHAR(27) INIT(' -');
         DCL 1 EXCRQR2 STATIC,
              2 P1 CHAR(5) INIT('PGMR('),
              2 RQPGMR PIC'999',
              2 P2 CHAR(6) INIT(') DIV('),
              2 RQDIV PIC'999',
              2 P3 CHAR(13) INIT(') CHANGE TRK('),
              2 RQTRK PIC'99999',
              2 P4 CHAR(6) INIT(') VOL('),
              2 RQVOL CHAR(6),
              2 P5 CHAR(2) INIT(')'),
              2 GDGK CHAR(4), /* GDG( */
              2 GDGP PIC'ZZZ',
              2 GDGE CHAR(1), /* ) */
              2 P6 CHAR(23) INIT(' ');
         DCL 1 EXCRQR3,
              2 P1 CHAR(5) INIT('PGMR('),
              2 RQPGMR3 PIC'999',
              2 P2 CHAR(6) INIT(') DIV('),
              2 RQDIV3 PIC'999',
              2 P3 CHAR(6) INIT(') VOL('),
              2 RQVOL3 CHAR(6),
              2 P4 CHAR(2) INIT(') '),
              2 RQ3CON CHAR(49);
         DCL 1 VOLLIST,
              2 VOLCNT FIXED BIN(15,0) INIT(1B),
              2 VOLTYP BIT(32),
              2 VOLSR CHAR(6),
              2 DSSQ FIXED BIN(15,0) INIT(0B);
         DCL TYPE BIT(32) EXT;
         DCL ISAMFLE FILE ENV(INDEXED) DIRECT INPUT KEYED;
         DCL BADSW STATIC BIT(1) INIT('0'B);
         IF BADSW THEN RETURN;
         DCL COMCON CHAR(16) INIT('//*');
         DCL STR CHAR(40) VARYING;
         DCL HILIT CHAR(3);
         DCL 1 CNTLFLG EXT,
              2 EXCEPSW BIT(1) INIT('0'B),
              2 EXCDLSW BIT(1) INIT('0'B),
              2 EXCRQSW BIT(1) INIT('0'B);
         DCL DAY CHAR(8) EXT;
         DCL INITSW BIT(1) STATIC INIT('1'B);
 ON ENDPAGE(EXCEPTS) BEGIN;
         PUT FILE(EXCEPTS) PAGE;
         PUT FILE(EXCEPTS) EDIT('SPACE ALLOCATION EXCEPTION REPORT FOR '
           ,VOLUME,' DATE=',DAY)(A,A,A,A);
         PUT FILE(EXCEPTS) EDIT(
 '*   PRECEDING DSNAME MEANS DATA SET HAS BEEN DELETED')(A) SKIP(1);
         PUT FILE(EXCEPTS) EDIT(
 ' +  PRECEDING DSNAME MEANS DATA SET IS SCHEDULED FOR DELETION ON THE N
 EXT RUN')(A) SKIP(1);
         PUT FILE(EXCEPTS) EDIT(
 '  $ PRECEDING DSNAME MEANS DATA SET IS AUTHORIZED BUT NOT ALLOCATED')
           (A) SKIP(1);
         PUT FILE(EXCEPTS) EDIT('TRACKS','TRACKS','PGMR','DIV','DSNAME')
           (A,COL(11),A,COL(21),A,COL(27),A,COL(32),A) SKIP(1);
         PUT FILE(EXCEPTS) EDIT('USED','AUTHORIZED','NO','NO')
           (COL(2),A,COL(9),A,COL(22),A,COL(28),A) SKIP(1);
         PUT FILE(EXCEPTS) SKIP(2);
         END;
         IF INITSW
              THEN DO;
                   INITSW = '0'B;
                   VOLTYP = TYPE;
                   VOLSR = VOLUME;
                   RQVOL = VOLUME;
                   RQVOL3 = VOLUME;
                   IF EXCEPSW
                        THEN DO;
                             OPEN FILE(EXCEPTS) LINESIZE(132) PRINT;
                             SIGNAL ENDPAGE(EXCEPTS);
                             END;
                   IF EXCDLSW
                        THEN OPEN FILE(EXCDL) RECORD OUTPUT;
                   IF EXCRQSW
                        THEN OPEN FILE(EXCRQ) RECORD OUTPUT;
                   OPEN FILE(BDAMFLE) INPUT DIRECT KEYED;
                   BDAMKEYA = 1;
                   READ FILE(BDAMFLE) INTO(QCRMAIN) KEY(BDAMKEY);
                   IF SUBSTR(QCRFLGS,1,1)
                        THEN DO;
                             PUT EDIT('CATASTROPHIC ERROR - THE CONTROL
 FILE IS UNUSEABLE - NOTIFY SYSTEM SUPPORT')(A) SKIP(1);
                             BADSW = '1'B;
                             RETURN;
                             END;
                   OPEN FILE(ISAMFLE);
                  END;
         IF EOFSW
              THEN GO TO EOF;
         IF SUBSTR(DS1DSNAM,1,7) = '**SYSUT'
              THEN GO TO TEMPNAM;
         IF SUBSTR(DS1DSNAM,1,36) =
           'AAAAAAAA.AAAAAAAA.AAAAAAAA.AAAAAAAA.'
              THEN GO TO TEMPNAM;
         IF SUBSTR(DS1DSNAM,1,3) ^= 'SYS'
              THEN GO TO BYTEMP;
         IF SUBSTR(DS1DSNAM,9,2) ^= '.T'
              THEN GO TO BYTEMP;
         IF SUBSTR(DS1DSNAM,19,1) ^= 'F' & SUBSTR(DS1DSNAM,19,1) ^= 'V'
              THEN GO TO BYTEMP;
 TEMPNAM:
         PUT EDIT(COMCON,'TEMPORARY DATASET')(A,A) SKIP(1);
         RETURN;
 BYTEMP:
         IOER = 0;
         RETLAB = DSNRET;
         ON KEY(ISAMFLE) GO TO DSNBAD;
         CALL SUFFIX(DS1DSNAM,' ',I);
         I = I - 8;
         IF I <= 0
              THEN GO TO NOTGDG;
         IF SUBSTR(DS1DSNAM,I,1) ^= '.'
              THEN GO TO NOTGDG;
         IF SUBSTR(DS1DSNAM,I+1,1) ^= 'G'
              THEN GO TO NOTGDG;
         IF SUBSTR(DS1DSNAM,I+6,1) ^= 'V'
              THEN GO TO NOTGDG;
         DO J = I+2 TO I+5;
              IF SUBSTR(DS1DSNAM,J,1)<'0' × SUBSTR(DS1DSNAM,J,1)>'9'
                   THEN GO TO NOTGDG;
              END;
         DO J = I+7 TO I+8;
              IF SUBSTR(DS1DSNAM,J,1)<'0' × SUBSTR(DS1DSNAM,J,1)>'9'
                   THEN GO TO NOTGDG;
                   END;
         CALL SYSCTLG('NAME',MYRET,DS1DSNAM,'SYSRES',AREA);
         IF MYRETB ^= 0
              THEN IF MYREG15 = 24
                   THEN DO;
 CTLGER:
                        PUT EDIT(COMCON,'I/O ERROR WHEN ACCESSING CATLG.
   PROCESSING TERMINATED FOR THIS DATA SET;')(A,A) SKIP(1);
                        RETURN;
                        END;
                   ELSE GO TO NOTGDG;
         CTLGPTR = ADDR(AREA);
         DO K = 1 TO VLSTBLK.VOLCNT;
              IF VOLID.VOLSER(K) = VOLSR
                   THEN GO TO CTDA;
              END;
         GO TO NOTGDG;
 CTDA:
         DO J = I-1 TO 1 BY -1 WHILE(SUBSTR(DS1DSNAM,J,1) ^= '.');
              END;
         CALL SYSCTLG('NAME',MYRET,SUBSTR(DS1DSNAM,1,J-1),'SYSRES',
           AREA);
         IF MYREG15 ^= '00001100'B
              THEN GO TO CTLGER;
         CVOL = SUBSTR(AREA,260,6);
 GDGLI:
         CTLGPTR = ADDR(AREA);
         PTRFIX = PTRFIX + 2;
 GDGL:
         IF NAME = HIGH(8)
              THEN DO;
                   CALL SYSCTLG('BLOCK',MYRET,TTR,CVOL,AREA);
                   GO TO GDGLI;
                   END;
         IF NAME = SUBSTR(DS1DSNAM,J+1,I-J-1)
              THEN GO TO GOTCENT;
         PTRFIX = PTRFIX + 12 + 2*HCNT;
         GO TO GDGL;
 GOTCENT:
         IF HCNT ^= 2
              THEN GO TO NOTGDG;
         ILEN = I - 1;
         GO TO DOREAD;
 NOTGDG:
         ILEN = 44;
 DOREAD:
         READ FILE(ISAMFLE) INTO(ISAMIN) KEY(SUBSTR(DS1DSNAM,1,ILEN));
         BDAMKEYA = ISAM.DAMASTER;
 RDAGIN:
         READ FILE(BDAMFLE) INTO(DSNRECS) KEY(BDAMKEY);
         IF NEWVOL = VOLUME
              THEN DO;
                   IF DTRKS = 0 & DPGMRNO = 0 & DDIV = 0
              THEN DO;
                   HILIT = '*  ';
                   RQ3CON = 'DELETE';
                   GO TO DSNBADA;
                   END;
                        ELSE HILIT = ' ';
                   GO TO DODSN;
                   END;
         IF DNDUPPT = 0
              THEN GO TO DSNBAD;
         BDAMKEYA = DNDUPPT;
         GO TO RDAGIN;
 DODSN:
         PUT EDIT(COMCON,'PROGRAMMER ',DPGMRNO,' OF DIVISION ',DDIV,
           ' IS RESPONSIBLE FOR THE ALLOCATION OF THIS DATA SET')
           (A,A,P'999',A,P'999',A) SKIP(1);
         IF ILEN < 44
              THEN DO;
                   IF ^EOFSW THEN
                   PUT EDIT(COMCON,'THIS IS A GENERATION DATA SET IN A G
 ROUP OF ',MAXCNT)(A,A,P'ZZ9') SKIP(1);
                   PUT EDIT(COMCON,'THIS GROUP IS AUTHORIZED A MAXIMUM O
 F ',DGDGCNT,'ENTRIES')(A,A,P'ZZ9',A) SKIP(1);
                   IF DGDGCNT ^= 0 THEN
                   DTRKS = DTRKS / DGDGCNT;
                   END;
         PUT EDIT(COMCON,'THIS DATA SET IS AUTHORIZED TO USE ',DTRKS,
           ' TRACKS ON THIS VOLUME')
           (A,A,P'ZZZZZ9',A) SKIP(1);
         IF SUBSTR(DFLGS,2,1)
              THEN PUT EDIT(COMCON,'THIS IS A RESIDENT DATA SET')
                (A,A) SKIP(1);
         STR = '';
         IF SUBSTR(DFLGS,3,1)
              THEN STR = 'DAILY, ';
         IF SUBSTR(DFLGS,4,1)
              THEN STR = STR ×× 'WEEKLY, ';
         IF SUBSTR(DFLGS,5,1)
              THEN STR = STR ×× 'MONTHLY, ';
         IF SUBSTR(DFLGS,6,1)
              THEN STR = STR ×× 'ON REQUEST, ';
         I = LENGTH(STR);
         IF I ^= 0
              THEN PUT EDIT(COMCON,'USAGE OF THIS DATA SET IS ',
                SUBSTR(STR,1,I-2))(A,A,A) SKIP(1);
         PUT EDIT(COMCON,'SPACE FOR THIS DATA SET WAS RESERVED ON ',
           DDTE)(A,A,P'99999') SKIP(1);
         IF DCOMPT ^= 0
              THEN DO;
                   PUT EDIT(COMCON,'USER COMMENTS FOLLOW')(A) SKIP(1);
                   BDAMKEYA = DCOMPT;
                   DO WHILE(BDAMKEYA ^= 0);
                        READ FILE(BDAMFLE) INTO(BDAMREC) KEY(BDAMKEY);
                        PUT EDIT(COMCON,DESCR)(A,A) SKIP(1);
                        BDAMKEYA = DANDESCR;
                        END;
                   END;
         PUT EDIT(COMCON)(A) SKIP(1);
         IF EOFSW
              THEN GO TO DOEXC;
         IF ILEN < 44
              THEN IF MAXCNT > DGDGCNT
                   THEN GO TO DOEXC;
         IF DTRKS >= TOTRK
              THEN GO TO RETLAB;
 DOEXC:
         IF EXCEPSW
              THEN PUT FILE(EXCEPTS) EDIT(TOTRK,DTRKS,DPGMRNO,DDIV,
                HILIT,DSN)
                (P'ZZ,ZZ9',COL(11),P'ZZ,ZZ9',COL(22),P'999',
                COL(27),P'999',COL(32),A,X(1),A) SKIP(1);
         IF EOFSW
              THEN GO TO RETLAB;
         IF HILIT = '*  '
              THEN IF EXCDLSW & DLCNT < 10
                   THEN DO;
                        DLCNT = DLCNT + 1;
                        EXCDLRN = DSN;
                        WRITE FILE(EXCDL) FROM(EXCDLR);
                        END;
                   ELSE;
              ELSE IF EXCRQSW & HILIT ^= ' + '
                   THEN DO;
                        RQDSN = DSN;
                        WRITE FILE(EXCRQ) FROM(EXCRQR1);
                        RQPGMR = DPGMRNO;
                        RQDIV = DDIV;
                   IF TOTRK > DTRKS
                        THEN RQTRK = TOTRK;
                        ELSE RQTRK = DTRKS;
                   IF ILEN = 44
                        THEN DO;
                             GDGK,GDGE = ' ';
                             GDGP = 0;
                             END;
                        ELSE DO;
                             GDGP = MAXCNT;
                             GDGK = 'GDG(';
                             GDGE = ')';
                             END;
                        WRITE FILE(EXCRQ) FROM(EXCRQR2);
                        END;
         GO TO RETLAB;
 DSNRET:
         RETURN;
 DSNBAD:
         DSN = DS1DSNAM;
         DTRKS,DPGMRNO,DDIV = 0;
         HILIT = ' + ';
         RQ3CON = 'TRK(0)';
 DSNBADA:
         PUT EDIT(COMCON,'THIS DATA SET IS NOT AUTHORIZED ON THIS PACK')
           (A,A) SKIP(1);
         SUBRET = DOEXC;
 SUBRIT:
         IF ^EXCRQSW
              THEN GO TO SUBRET;
         RQDSN = DSN;
         WRITE FILE(EXCRQ) FROM(EXCRQR1);
         RQPGMR3 = DPGMRNO;
         RQDIV3 = DDIV;
         WRITE FILE(EXCRQ) FROM(EXCRQR3);
         GO TO SUBRET;
 EOF:
         TOTRK = 0;
         HILIT = '  $';
         IF EXCDLSW
              THEN DO;
                   CLOSE FILE(EXCDL);
                   IF DLCNT = 0
                        THEN CALL PLIRETC(4);
                   END;
 EXCDLE:
         ISAMKEY = VOLUME;
         READ FILE(ISAMFLE) INTO(ISAMIN) KEY(ISAMKEY);
         BDAMKEYA = ISAM.DAMASTER;
         READ FILE(BDAMFLE) INTO(VOLRECS) KEY(BDAMKEY);
         BDAMKEYA = DSNFPT;
         RETLAB = NXT;
 NXT:
         IF BDAMKEYA = 0
              THEN RETURN;
         READ FILE(BDAMFLE) INTO(DSNRECS) KEY(BDAMKEY);
         CALL SYSVTOC('SEARCH',MYRET,DSN,VOLUME,WKAREA);
         BDAMKEYA = DNDSNPT;
         IF MYRET = '0'B
              THEN GO TO NXT;
         PUT EDIT('//* DSN=',DSN)(A,A) SKIP(2);
         IF SUBSTR(DFLGS,11,1) /* TEST FOR GDG */
              THEN ILEN = 43;
              ELSE ILEN = 44;
         GO TO DODSN;
         END;
