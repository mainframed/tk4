*PROCESS CS(60),MACRO;
         % INCLUDE CPINIT1;
         % @CMP = 'O';
         % INCLUDE CPINIT2;
         DCL PLIXOPT CHAR(80) VAR INIT('ISA(200K) ') STATIC EXT;
         @PROC(0,JOB(),NUMBER(),AT(LOCAL),SYSOUT(A),JCLOUT(A),GDG(0),
           PROMPT,JOBCARD(#(DSNAME,DEFAULT=JOBCARD)));
         DCL JOBNARY(100) CHAR(8);
         DCL JOBFARY(100) CHAR(1) INIT((100) (1)' ');
         DCL INPRMPT CHAR(100) VARYING;
         DCL PREFIX ENTRY RETURNS(FIXED BIN(15,0));
         DCL (ERROR_CODE,INFO_CODE) FIXED BINARY(15);
         DCL DDNAME CHAR(8);
         DCL JOBCARD FILE RECORD INPUT;
         DCL JCDSN CHAR(44) VAR;
         DCL JCDDN CHAR(8);
         %INCLUDE @9,@9SYSOUT,@9WRITER,@9DDNRET,@9CLOSE,@9ALLOC,
                  @9DCLSVC,@9DSNAME,@9STATUS,@9DDNAME,@9FREE,@9MEMBER;
  OPEN_INTERNAL_READER: PROCEDURE;
  JCDSN=SETDSN@(JOBCARDSUB);
  J = INDEX(JCDSN,'(');
  IF J ^= 0 THEN
     DO;
        @9MEMBER(  SUBSTR(JCDSN, J+1, INDEX(JCDSN,')')-J-1)    );
        JCDSN = SUBSTR(JCDSN,1,J-1);
     END;
  @9DSNAME(JCDSN);
  @9STATUS('SHR');
  @9DDNRET(JCDDN);
  @9ALLOC(ERROR_CODE,INFO_CODE);
  IF ERROR_CODE ^= 0
    THEN DO;
       PUT FILE(SYSPRINT) EDIT
           ('ERROR ALLOCATING JOBCARD DATA SET, CODE = ') (A)
           (ERROR_CODE)                                  (F(5));
       STOP;
       END;
  OPEN FILE(JOBCARD) TITLE(JCDDN);
  @9SYSOUT('*');
  @9WRITER('INTRDR');
  @9DDNRET(DDNAME);
  @9CLOSE;
  @9ALLOC(ERROR_CODE,INFO_CODE);
  IF ERROR_CODE ^= 0
    THEN DO;
       PUT FILE(SYSPRINT) EDIT
           ('ERROR ALLOCATING INTERNAL READER, CODE = ') (A)
           (ERROR_CODE)                                  (F(5));
       STOP;
       END;
  OPEN FILE(TMPFILE) TITLE(DDNAME);
  ON ENDFILE(JOBCARD) GOTO JCEOJ;
  DO FOREVER=1 REPEAT FOREVER;
    READ FILE(JOBCARD) INTO(REC);
    WRITE FILE(TMPFILE) FROM(REC);
    END;
 JCEOJ:
  CLOSE FILE(JOBCARD);
  @9DDNAME(JCDDN);
  @9FREE;
 END OPEN_INTERNAL_READER;
         IF JOB = 0
              THEN JCNT = 0;
              ELSE DO;
                   JOBNARY(1) = SYMC('&JOB');
                   JCNT = 1;
                   END;
         IF PROMPT ^= 0
              THEN DO;
                   @WRITE('ENTER JOBNAMES TO BE RETRIEVED');
                   DO UNTIL(INPRMPT = '' × JCNT > 99);
                        @READ(INPRMPT);
                        I = 1;
                        L = LENGTH(INPRMPT);
                        DO UNTIL(J = 0 × J > L × JCNT > 99);
                             J = PREFIX(SUBSTR(INPRMPT,I,L-I+1),' ');
                             IF J ^= 0
                                  THEN DO;
                                       I = I + J - 1;
                                       J = INDEX(SUBSTR(INPRMPT,I,L-I+1)
                                         ,' ');
                                       IF J = 0
                                            THEN J = L + 1;
                                            ELSE J = I + J - 1;
                                       JCNT = JCNT + 1;
                                       JOBNARY(JCNT) = SUBSTR(INPRMPT,
                                         I,J-I);
                                       I = J;
                                       END;
                             END;
                        END;
                   END;
         IF JOB = 0 & JCNT = 0 & NUMBER = 0
              THEN DO;
 @WRITE('ERROR - YOU MUST SPECIFY AT LEAST JOB OR NUMBER');
              SIGNAL ERROR;
              END;
         DCL MYGDG CHAR(5) VARYING;
         MYGDG = SYMC('&GDG');
         IF SUBSTR(MYGDG,1,1) = '-'
              THEN MYGDG = SUBSTR(MYGDG,2);
         I = VERIFY(MYGDG,'0123456789');
         IF I ^= 0
              THEN DO;
                   @WRITE('ERROR - GDG VALUE MUST BE NUMERIC');
                   SIGNAL ERROR;
                   END;
         @SETL(&GDG = MYGDG);
         DCL PLIRETC BUILTIN;
         DCL TAPESW BIT(1) STATIC INIT('1'B);
         ON UNDF(TAPE) TAPESW = '0'B;
         DCL TAPE FILE RECORD INPUT;
         OPEN FILE(TAPE);
         DCL REC CHAR(32760) VARYING;
         DCL SEPREC CHAR(133) VARYING STATIC INIT((50)'*');
         DCL OPERANDS CHAR(80) VARYING;
         DCL TPJOB CHAR(8);
         DCL (MYNUM,TPNUM) CHAR(5) VARYING;
         MYNUM = SYMC('&NUMBER');
         ON ENDFILE(TAPE) GO TO EOJ;
         DCL JCLA(3) CHAR(80) STATIC INIT(
         '/*ROUTE  PRINT &AT',
         '// EXEC JCLRETR,SOUT=''&SYSOUT'',JCLOUT=''&JCLOUT'',GDG=&GDG',
         '//RET.SYSUT1 DD *');
         DCL TMPFILE FILE RECORD OUTPUT ENV(FB RECSIZE(80)
           BLKSIZE(800));
         DCL CARD CHAR(80);
         IF ^TAPESW
              THEN DO;
                /* @ALLOC(DA(BPRT.CNTL),WORK); */
                   CALL OPEN_INTERNAL_READER;
                /* OPEN FILE(TMPFILE) TITLE(DA08DDN); */
                   DO I = 1 TO 3;
                        @REP(CARD=JCLA(I));
                        WRITE FILE(TMPFILE) FROM(CARD);
                        END;
                   OPERANDS = '';
                   IF JOB ^= 0
                        THEN OPERANDS = OPERANDS××' JOB('××
                          SYMC('&JOB')××')';
                   IF NUMBER ^= 0
                        THEN OPERANDS = OPERANDS××' NUM('××MYNUM××')';
                   IF PROMPT ^= 0
                        THEN OPERANDS = OPERANDS××' PROMPT';
                   CARD = 'JCLRETR'××OPERANDS;
                   WRITE FILE(TMPFILE) FROM(CARD);
                   IF PROMPT ^= 0
                        THEN DO;
                             IF JOB = 0
                                  THEN I = 1;
                                  ELSE I = 2;
                             DO I = I TO JCNT;
                                  CARD = JOBNARY(I);
                                  WRITE FILE(TMPFILE) FROM(CARD);
                                  END;
                             END;
                   CLOSE FILE(TMPFILE);
                   @WRITE('JCLRETR JOB SUCESSFULLY SUBMITTED');
                /* @CMD('SUBMIT (&JOBCARD BPRT)'); */
                /* @CMD('DELETE BPRT.CNTL'); */
                   RETURN;
                   END;
 NXT:
         DO WHILE(^JOBSTRT);
              END;
 NXTA:
         IF JCNT ^= 0
              THEN DO;
                   DO I = 1 TO JCNT WHILE(JOBNARY(I)^=TPJOB);
                        END;
                   IF I > JCNT
                        THEN GO TO NXT;
                   END;
         IF NUMBER ^= 0
              THEN IF MYNUM ^= TPNUM
                   THEN GO TO NXT;
         JOBFARY(I) = 'F';   /* INDICATE JOB WAS FOUND */
         PUT EDIT('JOB ',TPJOB,' NUMBER ',TPNUM,' WILL BE PRINTED')
           (A,A,A,A,A) SKIP(1);
         SUBSTR(SEPREC,2,8) = TPJOB;
         DO I = 1 TO 2;
              SUBSTR(SEPREC,1,1) = '1';
              DO J = 1 TO 55;
                   WRITE FILE(OUT) FROM(SEPREC);
                   SUBSTR(SEPREC,1,1) = ' ';
                   END;
              END;
         DO UNTIL(JOBSTRT);
              WRITE FILE(OUT) FROM(REC);
              END;
         GO TO NXTA;
 EOJ:
         IF PROMPT ^= 0
             THEN JCNT = JCNT - 1;
         DO I = 1 TO JCNT;
              IF JOBFARY(I) = ' ' THEN DO;
                 PUT EDIT(
                  'JOB ',JOBNARY(I),' NOT FOUND ON THIS TAPE - CC = 4')
                  (A,A,A) SKIP(1);
                 CALL PLIRETC(4);
              END;
         END;
 JOBSTRT:  PROC RETURNS(BIT(1));
         READ FILE(TAPE) INTO(REC);
         L = LENGTH(REC);
         IF L > 44
              THEN IF SUBSTR(REC,10,5)=' JOB ' ×
                SUBSTR(REC,10,5)=' STC '
                THEN IF (SUBSTR(REC,21,5) = '$HASP' &
                         SUBSTR(REC,38,8) = ' STARTED') ×
                        (SUBSTR(REC,21,7) = 'IEF452I')  ×
                        (SUBSTR(REC,21,4) = '$ACF')
                        THEN DO;
                             IF SUBSTR(REC,21,7) = 'IEF452I'
                                  THEN I = 29;
                                  ELSE I = 30;
                             TPJOB = SUBSTR(REC,I,8);
                             I = PREFIX(SUBSTR(REC,15,4),' ')-1;
                             TPNUM = SUBSTR(REC,15+I,4-I);
                             RETURN('1'B);
                         END;
         RETURN('0'B);
         END JOBSTRT;
         END;
