BLDTAB   CSECT                                                      TGS
********************************************************************TGS
*                  THIS RTNE BUILDS AN IN-CORE TABLE OF 12-BYTE    *TGS
*              ENTRIES USING DATA EXTRACTED FROM PDS DIRECTORY     *TGS
*              ENTRIES.  THE ADDRESS OF A PDS DIRECTORY ENTRY      *TGS
*              SHOULD BE IN REG1 EACH TIME THE RTNE IS CALLED.     *TGS
*                                                                  *TGS
*                  EACH ENTRY IN THE TABLE CONTAINS A MEMBER NAME  *TGS
*              (BYTES 0 THRU 7), TTR (BYTES 8 THRU 10) AND A FLAG  *TGS
*              BYTE.  BIT 0 IN THE FLAG BYTE IS ON IF THE NAME IS  *TGS
*              AN ALIAS.                                           *TGS
*                  THE TABLE IS BUILT IN 2K BLOCKS CHAINED TOGETHER*TGS
*              BY THE FIRST WORD OF EACH BLOCK.                    *TGS
*                  AT EXIT, REG1 CONTAINS THE ADDR OF THE FIRST    *TGS
*              BLOCK OF THE TABLE.                                 *TGS
********************************************************************TGS
         SAVES RETCTL                                               TGS
         TGSREQU                                                    TGS
         LR    R5,R1                   R5 = ADD DIR ENTRY           TGS
         TM    INITSW,X'80'            HAS INITIALIZATION BEEN DONE TGS
         BC    1,GO                    BR IF YES                    TGS
         OI    INITSW,X'80'                                         TGS
         LA    R2,FSTADDR                                           TGS
GETMAIN  EQU   *                                                    TGS
         LA    R0,2048                                              TGS
         GETMAIN R,LV=(0)                                           TGS
         ST    R1,0(R2)                SET PTR TO NEW BLK IN OLD BLKTGS
         LR    R2,R1                   R2 = ADDR CURRENT BLOCK      TGS
         XC    0(6,R2),0(R2)           ZERO LINK & LEN FLD          TGS
         LA    R3,8(R2)                R3 = ADDR NXT AVLBL ENTRY    TGS
         LA    R4,20                   R4 = CURRENT BLK LEN         TGS
         STH   R4,4(R2)                SET CURRENT BLK LEN          TGS
         B     GOA                                                  TGS
GO       EQU   *                                                    TGS
         LM    R2,R4,SAVREG                                         TGS
         CH    R4,=H'2048'             IS CURRENT BLK FULL          TGS
         BC    8,GETMAIN               BR IF YES                    TGS
         LA    R4,12(R4)               BUMP BLK LEN                 TGS
         STH   R4,4(R2)                                             TGS
GOA      EQU   *                                                    TGS
         MVC   0(12,R3),0(R5)          MOVE PDS ENTRY TO BLK        TGS
         LA    R3,12(R3)               R3 = ADDR NXT AVLBL ENTRY    TGS
         STM   R2,R4,SAVREG                                         TGS
         L     R1,FSTADDR                                           TGS
         B     RETCTL                                               TGS
INITSW   DC    X'00'                                                TGS
FSTADDR  DC    F'0'                                                 TGS
SAVREG   DS    3F                                                   TGS
         LTORG                                                      TGS
         END
