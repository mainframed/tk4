 /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
 DENT49C: PROC(RHPTR,SUBENT,RHHDRPT,SUBRTNES,D,PTYPE)
 OPTIONS(REENTRANT);
 /**********************************************************************
 *                                                                     *
 * ALIAS IS CLEAN_HTEXT.                                               *
 *                                                                     *
 * CALLED TO FREE MEMORY ALLOCATED FOR A SPECIFIC SELECT_HTEXT CONTROL *
 * BLOCK POINTED TO BY PARAMETER D.  PARAMETER PTYPE='EXEC' IF THE     *
 * SELECT_HTEXT CONTROL BLOCK IS AN EXECUTION SELECT_HTEXT CONTROL     *
 * BLOCK.                                                              *
 *                                                                     *
 **********************************************************************/
   % DCL @PROCNAME CHAR;
   % @PROCNAME='';
   % INCLUDE DENTSUB;
   % INCLUDE DENTSEL;
   HALT;
   DCL PTYPE CHAR(*);
   DCL (B,D,S) PTR;

   IF D->SUBQ_NEXT^=NULL & D->SUBQ_PREV^=NULL
     THEN SIGNAL ERROR; /* SHOULDN'T HAPPEN */

   /* NOW ELIMINATE TOKEN QUEUE */
   CALL DELTOKQ(D->TOKHDR);

   IF D->GROUP_BY_PTR^=NULL
     THEN IF D->GROUP_BY_PTR->GROUP_BUFPTR^=NULL
       THEN DO;
         FREE D->GROUP_BY_PTR->GROUP_BUFPTR->BUFSTR;
         D->GROUP_BY_PTR->GROUP_BUFPTR=NULL;
         END;

   IF PTYPE='EXEC'
     THEN D->GROUP_BY_PTR,D->WHERE_PTR,D->ORDER_BY_PTR,D->DROP_LIST_PTR,
       D->RENAME_LIST_PTR=NULL;

   /* NOW ELIMINATE THE FROM_LIST */
   DO S=D->FROM_LIST_PTR REPEAT D->FROM_LIST_PTR WHILE(S^=NULL);
     D->FROM_LIST_PTR=S->FROM_NEXT_FIELD;
     FREE S->FROM_FIELD;
     END;

   /* NOW ELIMINATE WHERE CONTROL BLOCKS */
   IF D->WHERE_PTR^=NULL
     THEN CALL DELWH(D->WHERE_PTR);

   /* NOW ELIMINATE GROUP_BY CONTROL BLOCKS */
   IF D->GROUP_BY_PTR^=NULL
     THEN DO;
       B=D->GROUP_BY_PTR;
       IF B->GROUP_SEARCH_CONDITION^=NULL
         THEN CALL DELWH(B->GROUP_SEARCH_CONDITION);
       DO S=B->GROUP_SPEC_PTR REPEAT B->GROUP_SPEC_PTR WHILE(S^=NULL);
         B->GROUP_SPEC_PTR=S->ORDER_LIST_PTR;
         FREE S->ORDER_BY_SPEC;
         END;
       FREE B->GROUP_BY_BLOCK;
       D->GROUP_BY_PTR=NULL;
       END;

   /* NOW ELIMINATE ORDER_BY CONTROL BLOCKS */
   IF D->ORDER_BY_PTR^=NULL
     THEN DO;
       DO S=D->ORDER_BY_PTR REPEAT D->ORDER_BY_PTR WHILE(S^=NULL);
         D->ORDER_BY_PTR=S->ORDER_LIST_PTR;
         FREE S->ORDER_BY_SPEC;
         END;
       END;

   /* NOW CLEAN UP DROP LIST */
   /*   BUT FIRST NULLIFY TOKEN LIST POINTERS IN EACH ELEMENT */
   DO S=D->DROP_LIST_PTR REPEAT S->SELECT_NEXT_FIELD WHILE(S^=NULL);
     S->FIELD_EXP_HDR=NULL;
     END;
   /* NOW DELETE DROP LIST */
   S=D->DROP_LIST_PTR;
   D->DROP_LIST_PTR=NULL;
   CALL DEL_LIST(S); /* GO DELETE SELECT_LIST */

   /* NOW CLEAN UP RENAME LIST */
   DO S=D->RENAME_LIST_PTR REPEAT D->RENAME_LIST_PTR WHILE(S^=NULL);
     D->RENAME_LIST_PTR=S->RENAME_NEXT_PTR;
     FREE S->RENAME_ITEM;
     END;

   FREE D->SELECT_HTEXT;

 DELTOKQ: PROC(Q);
 /**********************************************************************
 *                                                                     *
 * CALLED TO DELETE A QUEUE OF TOKENS.                                 *
 *                                                                     *
 **********************************************************************/
   DCL (Q,S) PTR;
   DO S=Q REPEAT Q WHILE(S^=NULL);
     Q=S->NEXT_TOKEN;
     FREE S->TOKEN;
     END;
   END DELTOKQ;

 DELWH: PROC(W);
 /**********************************************************************
 *                                                                     *
 * CALLED TO DELETE SEARCH_CONDITION_BLOCK.                            *
 *                                                                     *
 **********************************************************************/
   DCL (W,S) PTR;
   DCL I FIXED BIN(15,0);
   FREE W->SEARCH_CONDITION_BLOCK;
   W=NULL;
   END DELWH;

   END DENT49C;
