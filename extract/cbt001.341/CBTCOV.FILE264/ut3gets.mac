UT3GET   START 0
********************************************************************
*                  THIS RTNE WILL BE RESPONSIBLE FOR ACCESSING THE *
*              SYSUT3 DATA SET.  AT EXIT,REG1 WILL CONTAIN THE     *
*              ADDRESS OF THE NEXT SEQUENTIAL LOGICAL RECORD.      *
*              IF EOF IS ENCOUNTERED, REG1 WILL BE SET TO ZERO     *
*              BEFORE RETURN OF CONTROL.  AT EXIT R0 = 0 IF THE    *TGS
*              RECORD BEING RETURNED IS THE ./ ADD STMT CREATED BY *TGS
*              THIS RTNE TO INDICATE THE START OF * NEW MEMBER.    *TGS
*                  NOTE THAT IF A RECORD FROM THE SYSUT3 DATA SET  *TGS
*              CONTAINS ./ IN COLUMNS 1 AND 2, COLUMN 1 IS CHANGED *TGS
*              TO AN ASTERISK.                                     *TGS
********************************************************************
         SAVES RETCTL
         TGSREQU
         TM    INITSW,X'80'
         BC    1,GO
         OI    INITSW,X'80'
         MVC   SYSUT3+40(8),0(R1)      MOVE DDNAME TO DCB           TGS
         MVC   DDNAME,0(R1)                                         TGS
         OPEN  (SYSUT3,(INPUT))
         TM    SYSUT3+48,X'10'         WAS IT GOOD OPEN
         BC    1,GOODOPN               BR IF YES
         ABEND 1111,DUMP                                            TGS
GOODOPN  EQU   *
         LH    R0,SYSUT3+62            R0 = BLKSIZE
         STH   R0,BUFLEN
         AH    R0,=H'16'  03/22/83 - ADDED TO PREVENT 0C4 ABEND
         GETMAIN R,LV=(0)
         LA    R1,0(R1)
         ST    R1,BUFADDR              STORE BUFFER ADDR
FIND     EQU   *
         L     RF,=V(GETBLDL)          GO GET DIRECTORY FOR NEXT
         LA    R1,DDNAME               PASS DDNAME                  TGS
         BALR  RE,RF                        SEQUENTIAL MEMBER
         LTR   R1,R1
         BC    7,NOTEOF
         CLOSE SYSUT3
         L     R1,BUFADDR
         LH    R0,BUFLEN
         AH    R0,=H'16'  03/22/83 - ADDED TO PREVENT 0C4 ABEND
         FREEMAIN R,LV=(0),A=(1)
         SR    R1,R1
         B     RETCTL
NOTEOF   EQU   *
         MVC   MEMNAME1,0(R1)
         MVC   MEMNAME2,MEMNAME1
         MVC   SETSSI,18(R1)                                        TGS
         MVC   MEMNAME1+8,=CL8' '                                   TGS
         LA    R2,MEMNAME1
LOOPI    EQU   *
         CLI   0(R2),C' '              IS IT FIRST BLANK BEYOND NAME
         BC    8,GOTBLNK               BR IF YES
         LA    R2,1(R2)                BUMP INDEX
         B     LOOPI
GOTBLNK  EQU   *
         MVC   0(7,R2),=C',00,0,0'
         LR    RF,R2                   SAVE R2 IN RF                TGS
         LA    R2,8(R1)                R2 = ADDR OF TTRK
         CLC   14(4,R1),=4X'00'        WAS THERE SSI                TGS
         BC    8,NOSSI                 BR IF NOT                    TGS
         MVI   8(RF),C','                                           TGS
         LA    RF,8(RF)                                             TGS
         ST    RF,OUT                                               TGS
         LA    RF,14(R1)                                            TGS
         ST    RF,IN                                                TGS
         LA    R1,TRPARM                                            TGS
         L     RF,=V(TROUT)                                         TGS
         BALR  RE,RF                                                TGS
NOSSI    EQU   *                                                    TGS
         FIND  SYSUT3,(2),C
         LTR   R2,RF
         BC    8,GOODFIND
         ABEND 3333,DUMP
GOODFIND EQU   *
         L     R2,BUFADDR
         AH    R2,BUFLEN
         ST    R2,NXTADDR              FORCE A NEW BLOCK
         LA    R1,CTLCARD
         SR    R0,R0                                                TGS
         MVI   49(R1),C'3'
         B     RETCTL
GO       EQU   *
         L     R2,NXTADDR
         LR    R3,R2
         S     R3,BUFADDR
         CH    R3,BLKLEN               IS CURRENT BLOCK EXHAUSTED
         BC    4,PROCREC               BR IF NOT
GETBLK   EQU   *
         L     R8,BUFADDR
         READ  DECB,SF,SYSUT3,(8),'S'
         CHECK DECB
         MVC   NXTADDR,BUFADDR
         L     R3,DECB+16              R3 = IOB ADDR
         LH    R4,BUFLEN
         SH    R4,14(R3)               R4 = BLKSIZE - RESIDUAL CNT
*                                           FROM CSW IN IOB
         STH   R4,BLKLEN               RESET BLKLEN
PROCREC  EQU   *
         LA    R0,1                                                 TGS
         L     R1,NXTADDR
         LA    R2,80(R1)
         ST    R2,NXTADDR
         CLC   0(8,R1),=CL8'./'
         BC    7,RETCTL                                             TGS
         MVI   0(R1),C'*'                                           TGS
         B     RETCTL
SYSUT3   DCB   DDNAME=SYSUT3,DSORG=PO,MACRF=R,EODAD=FIND
INITSW   DC    X'00'
BUFADDR  DC    F'0'          ADDR OF BUFFER
NXTADDR  DC    F'0'          ADDR OF NEXT SLOT IN BUFFER
BUFLEN   DS    H
BLKLEN   DC    H'0'                                                 TGS
CTLCARD  DS    0CL80
         DC    CL9'./'
         DC    CL6'ADD'
MEMNAME1 DS    0CL8
BLNKPOS  DC    CL34' '
         DC    CL14'3'
MEMNAME2 DS    CL8
         DC    CL1' '
SETSSI   DS    CL8
TRPARM   DS    0F                                                   TGS
         DC    A(IN)                                                TGS
         DC    A(OUT)                                               TGS
IN       DS    F                                                    TGS
         DC    H'0'                                                 TGS
         DC    H'4'                                                 TGS
OUT      DS    F                                                    TGS
         DC    H'0'                                                 TGS
         DC    H'8'                                                 TGS
DDNAME   DS    CL8                                                  TGS
         LTORG
         END
