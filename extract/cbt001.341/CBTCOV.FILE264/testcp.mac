*$.HE ISD GENERALIZED SUBROUTINES - TESTCP
*$.HE INTERFACE TO PLI CHECKOUT COMPILER
*$.HE FOR COMMAND PROCESSORS
*$.PL 55
*$.PN 0
*$.PA
*$.SS
*$.NF
*$3/29/76
*$AUTHOR:  T. SMITH
*$DOCUMENTATION ID:  *$
*$.FI L
*$.SP 5
*$THIS ROUTINE CAN BE USED TO TEST COMMAND PROCESSORS WRITTEN IN
*$PLI USING THE CHECKOUT COMPILER.  THE NORMAL SEQUENCE OF SOURCE
*$STATEMENTS FOR A COMMAND PROCESSOR ARE AS FOLLOWS:
*$.SP 1
*$.IN 5
*$.NF
*$CP:  PROC(CPPL1,CPPL2,CPPL3,CPPL4) OPTIONS(MAIN);
*$ % INCLUDE IKJCPPL;
*$.FI L
*$.SP 1
*$.IN 0
*$TO USE THE CHECKOUT COMPILER TO DEBUG A COMMAND PROCESSOR,
*$REPLACE THE ABOVE STATEMENTS IN YOUR PROGRAM WITH THE FOLLOWING:
*$.SP 1
*$.IN 5
*$.NF
*$TEST:  PROC OPTIONS(MAIN);
*$  % INCLUDE IKJCPPL;
*$  CALL TESTCP(CPPLCBUF,CPPLUPT,
*$    CPPLPSCB,CPPLECT);
*$.SP 1
*$.IN 0
*$.FI L
*$AT LINKEDIT TIME, SPECIFY TESTCPE AS THE ENTRY POINT.  WHEN THE
*$MODULE IS INVOKED (USE THE TEST COMMAND SPECIFYING THE CP KEYWORD),
*$YOU WILL BE PROMTED FOR PARAMETERS TO THE CHECKER BY THE
*$MESSAGE 'ENTER CHECKER PARAMETERS.'
TESTCPE  CSECT
         SAVER RETCTL,LV=DSALEN
         TGSREQU
         USING DSA,RD
         MVC   DSACOR,CONSTANT
         ST    R1,SAVCPPL
         LM    R2,R4,4(R1)        R2=A(UPT),R3=A(PSCB),R4=A(ECT)
         LA    R8,MYECB
         LA    R5,PGPB
         LA    R6,MSG
         ST    R6,MSGADDR
         LA    R7,OLD
         PUTGET OUTPUT=OLD,PARM=(R5),UPT=(R2),ECT=(R4),ECB=(R8),       C
               MF=(E,IOPL)
         L     R1,PGPB+12         R1=A(INPUT BUFFER)
         LH    R2,0(R1)           R2=LENGTH BUF
         SH    R2,=H'4'           LESS 4 FOR HDR
         STH   R2,2(R1)           SET PARM LENGTH
         BC    8,NOXC             BR IF NULL LINE
         BCTR  R2,0               LESS 1 FOR EX
         EX    R2,SETCAPS
NOXC     DS    0H
         LA    R1,2(R1)
         ST    R1,MYPARM
         OI    MYPARM,X'80'
         LA    R1,MYPARM
         L     RF,=V(PLISTART)
         BALR  RE,RF
         B     RETCTL
SETCAPS  OC    4(0,R1),=80X'40'
         DROP  RC
         DROP  RD
         ENTRY TESTCP
TESTCP   DS    0H
         USING *,RF
         STM   RE,RC,12(RD)
         LM    R2,R5,0(R1)
         LR    RB,RD              RB=ADDR(CURRENT DSA)
         USING DSA,RB
DSALUP   DS    0H
         L     RB,4(RB)           GET PRIOR DSA
         CLC   DSAID,CONSTANT
         BC    7,DSALUP
         L     R1,SAVCPPL
         LM    R6,R9,0(R1)
         ST    R6,0(R2)
         ST    R7,0(R3)
         ST    R8,0(R4)
         ST    R9,0(R5)
         LM    RE,RC,12(RD)
         BR    RE
         DS    0D
CONSTANT DC    CL8'@TESTCP@'
         DC    H'0'
         DS    F
CONOLD   DC    F'1'
         DC    F'0' WILL BE SET TO A(MSG) IN DSA
MSGSTRT  DC    AL2(MSGEND-*),AL2(0),C'      ENTER CHECKER PARAMETERS'
MSGEND   DS    0C
MSGLEN   EQU   *-MSGSTRT
         DC    4F'0'
         DC    F'0'
         DC    F'0'
         PUTGET OUTPUT=(CONOLD),TERMPUT=(HOLD),MF=L
CONLEN   EQU   *-CONSTANT
         LTORG
DSA      DSECT
         DS    18F
         DS    0D
DSACOR   DS    CL(CONLEN)
         DS    0D
         ORG   DSACOR
DSAID    DS    CL8
PARM     DS    H
SAVCPPL  DS    F
OLD      DS    F
MSGADDR  DS    F
MSG      DS    CL(MSGLEN)
IOPL     DS    4F
MYECB    DS    F
MYPARM   DS    F
PGPB     DS    0C
         ORG
DSALEN   EQU   *-DSA
         END
