   /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
   /* DENT015 - DSN,DSNIN,DSNOUT,HI,LO,RESET,RE,SUPPRESS,SU SUBCOMMANDS
   */
   % DCL @PROCNAME CHAR;
   % DCL @RENTNAME CHAR;
   % @PROCNAME ='RENT';
   % @RENTNAME ='DENT015';
   % INCLUDE DENTSUB;
   DCL PREFIX ENTRY(CHAR(*), CHAR(*))RETURNS(FIXED BIN(15,0));
   DCL SETCAPS ENTRY;
   DCL SW FIXED BIN(15,0) INIT(1);
   DCL (FW,LW) BIT(1) INIT('0'B);
   DCL (ORGPTR,SAVPTR) PTR;
   DCL CMDLAB(10) LABEL;
   GO TO CMDLAB(CMDINDX);
   CMDLAB(1): /* DENT015 */
   CMDLAB(2): /* DSN */
   CMDLAB(3): /* DSNIN */
   IF INDDN ^= NULL
     THEN DO;
       RHRC = 0;
       MSGDATA=INDDN->ALCDSN;
       IF INDDN->ALCMEM^=''
         THEN MSGDATA=MSGDATA××'('××INDDN->ALCMEM××')';
       END;
     ELSE DO;
       RHRC = 8;
       MSGDATA ='NO INPUT DSNAME';
       END;
   RETURN;
   CMDLAB(4): /* DSNOUT */
   IF OUTDDN ^= NULL
     THEN DO;
       RHRC = 0;
       MSGDATA=OUTDDN->ALCDSN;
       IF OUTDDN->ALCMEM^=''
         THEN MSGDATA=MSGDATA××'('××OUTDDN->ALCMEM××')';
       END;
     ELSE DO;
       RHRC = 8;
       MSGDATA ='NO OUTPUT DSNAME';
       END;
   RETURN;
   CMDLAB(5): /* HI */
   LOFLAG ='0'B;
   RHRC = 0;
   RETURN;
   CMDLAB(6): /* LO */
   LOFLAG ='1'B;
   RHRC = 0;
   RETURN;
   CMDLAB(7): /* RESET */
   CMDLAB(8): /* RE */
   CMDLAB(9): /* SUPPRESS */
   CMDLAB(10): /* SU */
   IF PARY(2) =''
     THEN DO;
       IF CMDINDX > 8 /* IS IT SUPPRESS? */
         THEN DO;
           MSGDATA='MUST BE OPERANDS FOR SUPPRESS';
           RHRC = 8;
           RETURN;
           END;
       L1 = 0;
       L2 = 99999999;
       END;
     ELSE DO;
       DO I = 16 TO 2 BY -1  WHILE(PARY(I)='');
         END;
       IF VERIFY(PARY(I),'0123456789')^=0
         THEN DO;
           CALL SETCAPS(PARY(I));
           SELECT(PARY(I));
             WHEN('F') FW='1'B;
             WHEN('L') LW='1'B;
             WHEN('S') SW=2;
             OTHERWISE DO;
               MSGDATA='INVALID OPERAND';
               RHRC = 8;
               RETURN;
               END;
             END; /* SELECT */
           I=I-1;
           END;
       IF I<2
         THEN DO;
           L1 = 0;
           L2 = 99999999;
           END;
         ELSE DO;
           L2 = PARY(I);
           IF I=2
             THEN L1 = L2;
             ELSE L1 = PARY(I-1);
           END;
       END;
   ORGPTR = RECPTR;
   CALL #MD(RHPTR,SUBENT,L1); /* CALL MDPROC */
   IF RECPTR=HDPTR
     THEN RECPTR=NXTHDR;
   IF RECPTR^=HDPTR
     THEN DO;
       IF (CMDINDX=7 × CMDINDX=8) & (FW × LW)
         THEN DO; /* IT IS RESET F/L */
           IF FW
             THEN DO RECPTR=RECPTR REPEAT LSTPTR;
               IF LSTPTR=HDPTR
                 THEN LEAVE;
               IF ^SUBSTR(LSTPTR->RECFLGS,2,1)
                 THEN LEAVE; /* GOT FIRST OF SUPPRESSED GROUP */
               END;
             ELSE DO RECPTR=RECPTR REPEAT NXTPTR;
               IF NXTPTR=HDPTR
                 THEN LEAVE;
               IF ^SUBSTR(NXTPTR->RECFLGS,2,1)
                 THEN LEAVE; /* GOT LAST OF SUPPRESSED GROUP */
               END;
           DO I=1 TO L2 WHILE(RECPTR^=HDPTR);
             IF ^SUBSTR(RECFLGS,2,1)
               THEN LEAVE;
             SUBSTR(RECFLGS,2,1)='0'B;
             IF FW
               THEN RECPTR=NXTPTR;
               ELSE RECPTR=LSTPTR;
             END;
           END;
         ELSE DO;
           SAVPTR = RECPTR;
           SO = 0;
           IF SAVPTR^=HDPTR
             THEN DO SI = 1 TO SW;
               DO RECPTR=SAVPTR REPEAT(NXTPTR) WHILE(RECSEQ<=L2)
                 UNTIL(NXTPTR=HDPTR);
                 SN = PREFIX(RECSTR,' '); /*FIND FIRST NONBLNK*/
                 IF SI = 1 & SW = 2
                   THEN DO;
                     SELECT(CMDINDX);
                       WHEN(7,8) /*RESET? FIND LEFTM SUPP LINE*/
                       IF SUBSTR(RECFLGS,2,1) /*SUPPRESSED?*/
                         THEN IF (SN<SO × SO=0) & SN^=0
                           THEN SO=SN;
                       OTHERWISE /*SUPPRESS? FIND LEFTM UNSUPP LINE*/
                       IF ^SUBSTR(RECFLGS,2,1) /*UNSUPPRESSED?*/
                         THEN IF SN<SO × SO=0
                           THEN SO=SN;
                       END; /* SELECT */
                     END;
                   ELSE IF SW=1
                     THEN SELECT(CMDINDX);
                       WHEN(7,8) SUBSTR(RECFLGS,2,1)='0'B; /*RESET*/
                       OTHERWISE SUBSTR(RECFLGS,2,1)='1'B; /*SUPPRESS*/
                       END; /* SELECT */
                     ELSE SELECT(CMDINDX); /* SI=2 & SW=2 */
                       WHEN(7,8) /*RESET*/
                       IF SUBSTR(RECFLGS,2,1) /* SUPPRESSED? */
                         THEN IF SN=SO
                           THEN SUBSTR(RECFLGS,2,1)='0'B;
                       /*RESET LEFTMOST SUPPRESSED LINE */
                       OTHERWISE /*SUPPRESS*/
                       IF ^SUBSTR(RECFLGS,2,1) /* UNSUPPRESSED? */
                         THEN IF SN>SO
                           THEN SUBSTR(RECFLGS,2,1)='1'B;
                       /*SUPPRESS ALL BUT LEFTMOST LINES */
                       END; /* SELECT */
                 END;
               END;
           END;
       END;
   CALL #NC(RHPTR,SUBENT,ORGPTR); /* CALL NEWCUR */
   RHRC = 0;
   END;
