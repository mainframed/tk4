*$.HE GENERALIZED SUBROUTINES - TERMCTL
*$.HE PLI INTERFACE TO TERMINAL CONTROL MACROS
*$.PL 55
*$.PN 0
*$.PA
*$.SS
*$.NF
*$5/16/74
*$AUTHOR:  T. SMITH
*$SOURCE MODULE NAME:  TERMCTL
*$DOCUMENTATION ID:  *$
*$.FI L
*$.SP 5
*$.NF
*$.CE 1
*$CALL FORMATS TO CONTROL TERMINAL FUNCTIONS AND ATTRIBUTES
*$.SP 1
*
***************************************************************$
*$.SP 1
*$GET TERMINAL LINE SIZE
*$  CALL TERMCTL('GTSIZE',RETCODE,SCREENLEN,LINESIZE)
*$.SP 1
*$RESTART AUTOMATIC LINE NUMBERING OR CHARACTER PROMPTING
*$  CALL TERMCTL('SPAUTOPT',RETCODE)
*$.SP 1
*$STOP AUTOMATIC LINE NUMBERING OR CHARACTER PROMPTING
*$  CALL TERMCTL('SPAUTOPT',RETCODE)
*$.SP 1
*$SET ATTENTION SIMULATION
*$  CALL TERMCTL('STATTN',RETCODE,'LINES',LINES,'TENS',TENS,
*$    'INPUT',INPUT)
*$.SP 1
*$START AUTOMATIC CHARACTER PROMPTING
*$  CALL TERMCTL('STAUTOCP',RETCODE)
*$.SP 1
*$SET AUTOMATIC LINE NUMBERING
*$  CALL TERMCTL('STAUTOLN'.RETCODE,S,I)
*$.SP 1
*$SET BREAK
*$  CALL TERMCTL('STBREAK',RETCODE,STBWORD)
*$.SP 1
*$SPECIFY LINE-DELETEION AND CHARACTER-DELETION CHARACTERS
*$  CALL TERMCTL('STCC',RETCODE,ATNWORD,'LD',LD,'CD',CD)
*$.SP 1
*SET DISLAY CLEAR CHARACTER STRING
*$  CALL TERMCTL('STCLEAR',RETCODE,STCSTR)
*$.SP 1
*$SET INTER-TERMINAL COMMUNICATION
*$  CALL TERMCTL('STCOM',RETCODE,STCWORD)
*$.SP 1
*$SET TERMINAL LINE SIZE
*$  CALL TERMCTL('STSIZE',RETCODE,LINE,SIZE)
*$.SP 1
*$SET TIMEOUT FEATURE
*$  CALL TERMCTL('STTIMEOU',RETCODE,STTWORD)
*$.SP 1
*$CLEAR BUFFERS
*$  CALL TERMCTL('TCLEARQ',RETCODE,TCLWORD)
*
**********************************************************$
*
*$.SP 1
*$.FI L
*$.CE 1
*$DEFINITION OF TERMS
*$.SP 1
*
********************************************************$
*
*$.IN 0
*$ATNWORD
*$.IN 5
*$OPTIONAL
*$CHARACTER STRING EQUALLING EITHER 'ATTN' OR 'NATN'.
*$.SP 1
*$'ATTN' - WHEN THIS OPERAND IS IN EFFECT, HITTING THE
*$ATTENTION KEY AFTER HAVING TYPED DATA WILL ONLY DELETE THE
*$CURRENT LINE.  SYSTEM RESPONSE IS !D.  AUTOMATIC PROMPTING
*$IS NOT TURNED OFF.  THE ATTENTION KEY CAN THEN BE HIT AGAIN
*$WITHOUT TYPING ANY INPUT, TO INTERRUPT THE PROGRAM AND
*$TURN OFF PROMPTING.  WHEN THIS OPERAND IS NOT IN EFFECT,
*$THE ATTENTION KEY WILL BOTH DELETE A LINE OF TERMINAL INPUT
*$AND INTERRUPT THE EXECUTION OF THE USER'S PROGRAM.
*$SYSTEM RESPONSE IS !. OR !I.
*$.SP 1
*$'NATN' - INDICATES THAT THE ATTENTION KEY WILL NOT
*$BE USED TO DELETE A LINE OF TERMINAL INPUT.
*$.IN 0
*$'CD',CD
*$.IN 5
*$OPTIONAL
*$'CD' IS SPECIFIED AS SHOWN, AND SIGNIFIES THAT THE NEXT
*$PARAMETER IN THE LIST IS CD, WHICH MUST BE A ONE-BYTE
*$CHARACTER STRING INDICATING THE CHARACTER DELETE CONTROL
*$CHARACTER.
*$.IN 0
*$'INPUT',INPUT
*$.IN 5
*$'INPUT' IS SPECIFIED AS SHOWN, AND SIGNIFIES THAT THE NEXT
*$PARAMETER IN THE LIST IS INPUT, WHICH MUST BE A FOUR-BYTE
*$CHARACTER STRING (PADDED WITH BLANKS IF NECESSARY).  WHEN THIS
*$CHARACTER STRING IS ENCOUNTERED AS THE ONLY DATA IN A
*$LINE, INPUT PROCESSING IS INTERRUPTED TO LET THE PROGRAM
*$TAKE AN ATTENTION EXIT.  THIS STRING WILL NOT BE RECOGNIZED
*$IF IT IS PRECEDED BY ANY OTHER CHARACTERS.
*$.IN 0
*$I
*$.IN 5
*$FIXED BIN(31,0) CONTAINING THE NUMBER TO BE ASSIGNED TO
*$THE FIRST LINE OF TERMINAL INPUT.  CAN BE ANY INTEGER FROM
*$0 TO 99,999,999.
*$.IN 0
*$'LD'
*$LD
*$.IN 5
*$OPTIONAL
*$'LD' IS SPECIFIED AS SHOWN, AND INDICATES THAT THE NEXT
*$NEXT PARAMETER IN THE LIST IS LD, WHICH MUST BE A ONE-BYTE
*$CHARACTER STRING THAT INDICATE WHAT CHARACTER WILL BE USED
*$FOR THE LINE DELETE CONTROL CHARACTER.  (DO NOT SPECIFY BOTH
*$LD= AND ATTN).
*$.IN 0
*$LINE
*$.IN 5
*$FIXED BIN(15,0) SPECIFYING THE NUMBER OF LINES THAT CAN APPEAR
*$THE SCREEN OF A DISPLAY STATION TERMINAL.
*$.IN 0
*$'LINES'
*$LINES
*$.IN 5
*$OPTIONAL
*$'LINES' IS SPECIFIED AS SHOWN, AND INDICATES THAT THE
*$NEXT PARAMETER IN THE LIST WILL BE LINES, WHICH MUST BE
*$FIXED BIN(15,0) SET TO AN INTEGER FROM 1 TO 255 INDICATING
*$THE NUMBER OF CONSECUTIVE LINES OF OUTPUT THAT CAN
*$BE DIRECTED TO THE TERMINAL BEFORE THE KEYBOARD WILL
*$UNLOCK TO LET THE TERMINAL USER INTERRUPT THE EXECUTION
*$OF HIS PROGRAM.
*$.IN 0
*$LINESIZE
*$.IN 5
*$FIXED BIN(15,0) TO CONTAIN THE LOGICAL LINE SIZE OF THE
*$USER'S TERMINAL.  WILL BE SET BY THIS ROUTINE BEFORE
*$RETURNING TO THE CALLER.
*$.IN 0
*$RETCODE
*$.IN 5
*$FIXED BIN(31,0) - SET BY THIS ROUTINE BEFORE RETURNING TO
*$CALLER. THE SIGNIFICANCE OF THIS CODE DEPENDS UPON WHAT
*$OPTION WAS REQUESTED.  SEE TSO GUIDE TO WRITING A TMP OR A
*$CP.
*$.IN 0
*$S
*$.IN 5
*$FIXED BIN(31,0) CONTAINING THE NUMBER TO BE ASSIGNED TO.
*$THE FIRST LINE OF TERMINAL INPUT.  THIS NUMBER CAN BE
*$ANY INTEGER FROM 0 THROUGH 99,999,999.
*$.IN 0
*$SCREENLEN
*$.IN 5
*$FIXED BIN(15,0) TO BE SET BY THIS ROUTINE BEFORE RETURNING
*$CONTROL TO THE CALLER.  WILL CONTAIN THE SCREEN LENGTH,
*$THAT IS, THE MAXIMUM NUMBER OF LINES PER DISPLAY.
*$.IN 0
*$SIZE
*$.IN 5
*$FIXED BIN(15,0) THAT SPECIFIES THE LOGICAL LINE SIZE OF THE
*$TERMINAL IN CHARACTERS.  IF THE LOGICAL LINE SIZE REQUESTED
*$IS GREATER THAT THE MECHANICAL LINE SIZE OF THE TERMINAL,
*$THE LAST CHARACTER IN THE LINE MAY BE REPEATEDLY TYPED
*$OVER.  SPECIFYING A SIZE GREATER THATN 255 WILL GIVE
*$UNPREDICTABLE RESULTS.
*$.IN 0
*$STBWORD
*$.IN 5
*$CHARACTER STRING THAT MUST BE EITHER 'YES' OR 'NO'.  IF 'YES',
*$INDICATES THAT THE TRANSMIT INTERRUPT FEATURE WILL BE USED.
*$IF 'NO', INDICATES THAT THE TRANSMIT INTERRUPT FEATURE NOT
*$BE USED.
*$.IN 0
*$STCSTR
*$.IN 5
*$CHARACTER STRING THAT MUST BE EITHER 'YES' OR 'NO.  IF 'YES',
*$INDICATES THAT THE TERMINAL WILL ACCEPT MESSAGES FROM
*$OTHER TERMINALS.  'NO' INDICATES THAT THE TERMINAL WILL NOT
*$ACCEPT MESSAGES FROM OTHER TERMINALS.
*$.IN 0
*$STTWORD
*$.IN 5
*$CHARACTER STRING THAT MUST BE EITHER 'YES' OR 'NO'.  IF 'YES',
*$INDICATES THAT THE IBM 1050 TERMINAL DOES TIMEOUT.  IT DOES
*$NOT HAVE THE TEXT TIMEOUT SUPPRESSION FEATURE.  IF THE
*$.IN 0
*$TCLWORD
*$.IN 5
*$CHARACTER STRING THAT MUST BE EITHER 'INPUT' OR 'OUTPUT'.
*$'INPUT' INDICATES THAT ALL INPUT CURRENTLY IN THE TERMINAL'S
*$INPUT BUFFER QUEUE WILL BE LOST, INCLUDING THE INPUT LINE
*$CURRENTLY BEING ENTERED, IF ANY.
*$'OUTPUT' INDICATES THAT ALL THE OUTPUT FOR THIS TERMINAL THAT
*$IS CURRENTLY IN THE TERMINAL'S OUTPUT BUFFER QUEUE WILL BE
*$PURGED, EXCEPT FOR OUTPUT MESSAGES THAT HAVE BEGUN TO APPEAR
*$AT THE TERMINAL, OR MESSAGES FROM OTHER TERMINALS OR THE SYSTE
*$OPERATOR.
*$.IN 0
*$'TENS',TENS
*$.IN 5
*$OPTIONAL
*$'TENS' IS SPECIFIED AS SHOWN, AND INDICATES THAT THE NEXT
*$PARAMETER IN THE LIST WILL BE TENS, WHICH IS FIXED BIN(15,0)
*$SET TO AN INTEGER FROM 1 TO 255 INDICATING THE TENS OF SECONDS
*$OF LOCKED KEYBOARD TIME THAT CAN ELAPSE BEFORE THE KEYBOARD
*$WILL UNLOCK TO LET THE TERMINAL USER INTERRUPT THE EXECUTION
*$OF HIS PROGRAM.
*
*******************************************************************$
*
TERMCTL  PLIENTRY ,DSA=136,COMPILE=O
         XC    MYDSA(MYLEN),MYDSA
         LM    2,5,0(1)
         L     2,0(2)                  R2 = A(OPTION NAME)
         LA    14,OPTAB
         SR    15,15
LOOPA    DS    0H
         CLI   0(14),X'FF'             IS IT END-OF-TABLE?
         BC    8,BADFORM               BR IF YES
         IC    15,3(14)                RF = LEN OPTION NAME - 1
         EX    15,CLCA
         BC    8,GOTNAME               BR IF GOOD OPTION NAME
         LA    14,5(14,15)             RE = A(NEXT OPTAB ENTRY)
         B     LOOPA
CLCA     CLC   0(0,2),4(14)
GOTNAME  DS    0H
*$.IN 0
         IC    0,2(14)                 R0=OPTION FLAG
         SLL   0,24                    SHIFT TO HI-BYTE
         SR    1,1
         LH    15,0(14)                RF=A(SUBRTNE)
         A     15,=A(TERMCTL)
         BR    15
RTAUTOPT DS    0H
SPAUTOPT DS    0H
STAUTOCP DS    0H
SETSRET  DS    0H
         LA    11,EXIT
DOSVC    DS    0H
         SVC   94                      ISSUE SVC 94
         BR    11
SETRET   DS    0H
         ST    15,0(3)                 SET RETCODE
EXIT     PLIEXIT
BADFORM  DS    0H
         LA    15,16                   SET BADFORM RETCODE
         B     SETRET
STBREAK  DS    0H
STCOM    DS    0H
STTIMEOU DS    0H
         L     4,0(4)                  R4 = A('YES' OR 'NO')
         CLC   0(2,4),=C'NO'           IS IT NO
         BC    8,SETSRET               BR IF YES
SETTRET  DS    0H
         LA    1,128                   R1 = X'80'
         SLL   1,24                    SHIFT TO HI-BYTE
         B     SETSRET
TCLEARQ  DS    0H
         L     4,0(4)                  R4 = A('INPUT' OR 'OUTPUT')
         CLC   0(6,4),=C'OUTPUT'       IS IT 'OUTPUT'
         BC    8,SETSRET               BR IF YES
         B     SETTRET
GTSIZE   DS    0H
         LA    11,GTRET
         B     DOSVC
GTRET    DS    0H
         STH   0,0(4)                  SET SCREENLEN
         STH 1,0(5)                    SET LINESIZE
         B     SETRET
STAUTOLN DS    0H
*                                      R4 = S, R5 = I
         LA    1,0(5)                  CLEAR EOL FLAG AND SET REG1
         OR    0,4                     SET PARM REG 0
         B     SETSRET
STSIZE   DS    0H
         LH    4,0(4)                  R4 = SIZE
         OR    0,4                     SET PARM REG 0
         LH    1,0(5)                  R1 = LINE
         B     SETSRET
STCLEAR  DS    0H
         L     1,0(4)                  R1 = A(STCSTR)
         B     SETSRET
STATTN   DS    0H
         LA    9,STARET
         LA    14,STOPTAB
         B     STCOMON
STARET   DS    0H
         CLI   0(14),X'40'
         BC    4,STINPUT               BR IF 'INPUT'
         EX    15,LOADH
         BC    8,NOSHIFT               BR IF 'TENS'
         SLL   1,8                     SHIFT LINE COUNT 1 BYTE
NOSHIFT  DS    0H
         OR    0,1                     PUT LINES OR TENS INTO R0
STLAST   DS    0H
         EX    15,LTR                  WAS THAT LAST PARM?
         BC    4,SETSTFG               BR IF YES
         LA    15,1(15)                BUMP REG FOR EX
         B     STCLOOP
SETSTFG  DS    0H
         MVC   STADR(1),STFLG
         L     1,STADR
         B     SETSRET
STINPUT  DS    0H
         EX    15,LOAD                 R1 = A(INPUT CHAR STR)
         ST    1,STADR
         B     STLAST
STCOMON  DS    0H
         LTR   3,3
         BC    4,BADFORM               BR IF NOT ENOUGH PARMS
         LA    15,3                    RF = REG FOR EX
STCLOOP  DS    0H
         EX    15,LOAD
*                                      RE = A(OPTAB)
         SR    11,11
STCLOOPA DS    0H
         CLI   0(14),X'FF'             IS IT END-OF-TABLE?
         BC    8,BADFORM               BR IF YES
         IC    11,1(14)                RB = LEN KEYWORD
         EX    11,CLC
         BC    8,GOTSTC                BR IF KEYWORD FOUND
         LA    14,3(11,14)             BUMP TO NXT STOPTAB ENTRY
         B     STCLOOPA
GOTSTC   DS    0H
         OC    STFLG,0(14)             SET OPTION FLAG
         LA    15,1(15)                BUMP REG FOR EX
         BR    9
STCC     DS    0H
         LA    9,STCCRET
         LA    14,STCOPTAB
         B     STCOMON
STCCRET  DS    0H
         CLI   0(14),X'20'             IS IT 'ATTN' OR 'NATN'
         BC    2,STCATN                BR IF YES
         EX    15,LOADR                R1 = A(SDV FOR LD OR CD)
         L     1,0(1)                  R1 = A(LD OR CD CHAR)
         BC    8,STCLD                 BR IF LD
         MVC   STCD,0(1)
STCLAST  DS    0H
         EX    15,LTR                  WAS THAT LAST PARM?
         BC    4,STCSTR1               BR IF YES
         LA    15,1(15)                BUMP REG FOR EWX
         B     STCLOOP
STCLD    DS    0H
         MVC   STLD,0(1)
         B     STCLAST
STCATN   DS    0H
         EX    15,LTR                  WAS THAT LAST PARM?
         BC    2,STCLOOP               BR IF NOT
STCSTR1  DS    0H
         L     1,STFLG
         B     SETSRET
LOAD     L     1,0(0)
CLC      CLC   0(0,1),2(14)
LOADH    LH    1,0(0)
LTR      LTR   14,0
LOADR    LR    1,0
STOPTAB  DS    0C
*
*
*
         DC    X'80',X'04',C'LINES'
         DC    X'40',X'03',C'TENS'
         DC    X'20',X'04',C'INPUT'
         DC    X'FF' END-OF-TABLE
STCOPTAB DS    0H
*
*
*
         DC    X'C0',X'03',C'ATTN'
         DC    X'80',X'03',C'NATN'
         DC    X'20',X'01',C'LD'
         DC    X'10',X'01',C'CD'
         DC    X'FF' END-OF-TABLE
OPTAB    DS    0C
*              DISPLACEMENT TO ROUTINE TO PROCESS THIS OPTION
*                FLAG FOR HI-BYTE REG 0
*                      LEN OPTION NAME - 1
*                            OPTION NAME
         DC    AL2(GTSIZE-TERMCTL)
         DC    X'0B',X'05',C'GTSIZE'
         DC    AL2(RTAUTOPT-TERMCTL)
         DC    X'0E',X'07',C'RTAUTOPT'
         DC    AL2(SPAUTOPT-TERMCTL)
         DC    X'0D',X'07',C'SPAUTOPT'
         DC    AL2(STATTN-TERMCTL)
         DC    X'08',X'05',C'STATTN'
         DC    AL2(STAUTOCP-TERMCTL)
         DC    X'0C',X'07',C'STAUTOCP'
         DC    AL2(STAUTOLN-TERMCTL)
         DC    X'09',X'07',C'STAUTOLN'
         DC    AL2(STBREAK-TERMCTL)
         DC    X'04',X'06',C'STBREAK'
         DC    AL2(STCC-TERMCTL)
         DC    X'07',X'03',C'STCC'
         DC    AL2(STCLEAR-TERMCTL)
         DC    X'10',X'06',C'STCLEAR'
         DC    AL2(STCOM-TERMCTL)
         DC    X'05',X'04',C'STCOM'
         DC    AL2(STSIZE-TERMCTL)
         DC    X'0A',X'05',C'STSIZE'
         DC    AL2(STTIMEOU-TERMCTL)
         DC    X'06',X'07',C'STTIMEOU'
         DC    AL2(TCLEARQ-TERMCTL)
         DC    X'01',X'06',C'TCLEARQ'
         DC    X'FF' END OF TABLE
         LTORG
DSA      DSECT
MYDSA    DS    0H
STADR    DS    F
STFLG    DS    C
         DS    C
STLD     DS    C
STCD     DS    C
MYLEN    EQU   *-MYDSA
DSALEN   EQU   *-DSA
         END
