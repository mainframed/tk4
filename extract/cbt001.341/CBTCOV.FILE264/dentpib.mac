 /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
 /*DENTPIB*/
 /* RETURN CODES ARE -- 00 - OK
                        04 - MEMBER NOT FOUND
                        08 - NO SYSAID DD STATEMENT */
 DENTPIB:  PROC(DCBPTR,MEMNAM,ALCEP,RET,SEQCNT) OPTIONS(REENTRANT);
         DCL DCBPTR UNALIGNED PTR;
         DCL MEMNAM CHAR(8);
         DCL ALCEP ENTRY(CHAR(256) VAR);
         DCL (RET,SEQCNT) FIXED BIN(15,0);
         DCL NULL BUILTIN;
         DCL 1 LRECV BASED(BUFPTR),
              2 BYTCNT FIXED BIN(15,0),
              2 VRECSTR CHAR(256);
         DCL BUFFER CHAR(30000) VARYING;
         DCL LRECF CHAR(256) BASED(BUFPTR);
         DCL RECL FIXED BIN(15,0);
         DCL CURREC CHAR(256) BASED(CURPTR);
         DCL CURPTR PTR,
             CURADJ FIXED BIN(31,0) DEF CURPTR;
         DCL DDNAME CHAR(8) INIT('SYSAID');
         DCL 1 DCB2 BASED(DCBPTR),
              2 DCBPAD1 CHAR(36),
              2 DCBRECFM BIT(8),
              2 DCBPAD2 CHAR(11),
              2 DCBOFLG BIT(8),
              2 DCBPAD3 CHAR(33),
              2 DCBLRECL FIXED BIN(15,0);
         DCL RETCODE FIXED BIN(31,0);
         DCL (SYSDCBP,SYSOPEN,SYSFIND,SYSREAD,SYSCLOS) ENTRY;
         DCL INREC CHAR(256) VAR;
         DCL TPTR PTR;
         DCL 1 MEMREC UNALIGNED BASED(RPTR),
           2 NXTPTR PTR,
           2 LSTPTR PTR,
           2 RECSEQ FIXED BIN(31,0),
           2 RECSTR CHAR(256) VAR;
         DCL 1 PIBMEMRY CONTROLLED,
           2 BUFPTR PTR,
           2 BUFPTRPTR PTR,
           2 BCNTSAV FIXED BIN(15,0) INIT(0);
         DCL BUFPADJ FIXED BIN(31,0) BASED(BUFPTRPTR);
         IF DCBPTR=NULL
           THEN CALL SYSDCBP(DCBPTR,DDNAME);
         IF ^SUBSTR(DCBOFLG,4,1)
           THEN CALL SYSOPEN(DCBPTR,'INPUT');
         IF ^SUBSTR(DCBOFLG,4,1)
           THEN DO;
             RET=8; /* INDICATE BAD OPEN */
             RETURN;
             END;
         IF ALLOCATION(PIBMEMRY)=0
           THEN DO;
             ALLOCATE PIBMEMRY;
             BUFPTRPTR=ADDR(BUFPTR);
             END;
         CALL SYSFIND(DCBPTR,MEMNAM,'D',RETCODE);
         IF RETCODE^=0
           THEN DO;
             RET=RETCODE;
             RETURN;
             END;
         ON CONDITION(SYSEOD) GO TO EOJ;
         DO I=1 REPEAT I+1;
           CALL NXTREC(INREC);
           CALL ALCEP(INREC);
           END;
 EOJ:
         RET=0;
         RETURN;
 NXTREC:  PROC(REC);
         DCL REC CHAR(256) VARYING;
         IF BCNTSAV = 0
              THEN DO;
                   CALL SYSREAD(DCBPTR,BUFFER);
                   BCNTSAV = LENGTH(BUFFER);
                   BUFPTR = ADDR(BUFFER);
                   BUFPADJ = BUFPADJ + 2;
                   IF SUBSTR(DCBRECFM,1,2) = '01' /* RECFM=V */
                        THEN DO;
                             BUFPADJ = BUFPADJ + 4;
                             BCNTSAV = BCNTSAV - 4;
                             END;
                   END;
         IF SUBSTR(DCBRECFM,1,2) = '01' /* RECFM=V */
              THEN DO;
                   RECL = BYTCNT - (SEQCNT+4);
                   CURADJ = BUFPADJ + 4;
                   BCNTSAV = BCNTSAV - BYTCNT;
                   BUFPADJ = BUFPADJ + BYTCNT;
                   IF RECL<=0
                     THEN REC=' ';
                     ELSE REC=SUBSTR(CURREC,SEQCNT+1,RECL);
                   END;
         ELSE DO;
                   RECL = DCBLRECL-SEQCNT;
                   CURADJ = BUFPADJ;
                   BCNTSAV = BCNTSAV - DCBLRECL;
                   BUFPADJ = BUFPADJ + DCBLRECL;
                   IF RECL<=0
                     THEN REC=' ';
                     ELSE REC=SUBSTR(CURREC,1,RECL);
                   END;
         END NXTREC;
         END;
