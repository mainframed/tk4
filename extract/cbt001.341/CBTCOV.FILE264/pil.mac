 PIL:  PROC(LABSTRT,SCORE);
         DCL LABSTRT CHAR(8);
              /* LABEL AT WHICH PI IS TO RESUME, OR BLANK IF PI IS TO
                 START AT THE BEGINNING. */
         DCL SCORE FIXED BIN;
              /* COUNT OF THE QUESTIONS USER HAS BEEN ASKED. */
         DCL INREC CHAR(80);
         DCL (IN,LEN)(3) FIXED BIN;
         DCL OPLAB(5) LABEL;
         DCL OPTAB(4) CHAR(5) STATIC INIT('$GOTO','$','$ANS','$LI');
         DCL GOTO BIT(1) STATIC INIT('0'B);
         DCL TEXT RECORD KEYED ENV(F RECSIZE(80) REGIONAL(1)) DIRECT;
         DCL 1 LABTAB(256),
              2 $KEY FIXED BIN,
              2 $LAB CHAR(8);
         DCL RESPONSE CHAR(80);
         DCL ($CNT,KEY,LABI,INDXOP) FIXED BIN STATIC INIT('0'B);
         DCL $LABSAV CHAR(8);
         ON KEY(TEXT) GO TO EOJ;
         ON CONDITION(ATTN)
              BEGIN;
                   PUT EDIT('ATTENTION RECOGNIZED, PI COURSE WILL BE INT
 ERRUPTED')(A) SKIP(1);
                   CALL PLIRETC(4);
                   GO TO EOJA;
                   END;
         IF LABSTRT ^= ''
              THEN DO;
                   INREC = '$GOTO ' ×× LABSTRT;
                   GO TO NXTC;
                   END;
         KEY = -1;
 NXT:
         SAVOP = INDXOP;
 NXTA:
         KEY = KEY + 1;
 NXTB:
         READ FILE(TEXT) INTO(INREC) KEY(KEY);
 NXTC:
         IF $CNT > 0
              THEN DO;
                   $CNT = $CNT - 1;
                   GO TO TXT;
                   END;
         IF SUBSTR(INREC,1,1) ^= '$'
              THEN GO TO TXT;
         IN = 0;
         LEN = 0;
         J = 1;
         DO I = 1 TO 3 WHILE(J < 72);
              DO J = J TO 72 WHILE(SUBSTR(INREC,J,1) = ' ');
                   END;
              IF J < 72
                   THEN DO;
                   IF I = 2 & SUBSTR(INREC,J,1) = ''''
                        THEN DO;
                             J = J + 1;
                             K = J;
 CKAPOST:
                             IF SUBSTR(INREC,K,1) ^= ''''
                                  THEN GO TO BUMPK;
                             IF SUBSTR(INREC,K+1,1) ^= ''''
                                  THEN DO;
                                       SUBSTR(INREC,K,1) = ' ';
                                       GO TO SETIN;
                                       END;
                             SUBSTR(INREC,K,73-K) =
                               SUBSTR(INREC,K+1,72-K);
 BUMPK:
                             K = K + 1;
                             IF K < 71
                                  THEN GO TO CKAPOST;
                             END;
                        ELSE DO K = J TO 72 WHILE(SUBSTR(INREC,K,1)
                          ^= ' ');
                             END;
 SETIN:
                        IN(I) = J;
                        LEN(I) = K - J;
                        J = K;
                        END;
              END;
         DO I = 1 TO 4 WHILE(OPTAB(I) ^= SUBSTR(INREC,IN(1),LEN(1)));
              END;
         INDXOP = I;
         IF GOTO
              THEN IF I = 2 /* TEST FOR LABEL */
                   THEN GO TO OPLAB(2);
                   ELSE GO TO NXT;
         GO TO OPLAB(I);
 OPLAB(1): /*GOTO*/
         $LABSAV = SUBSTR(INREC,IN(2),LEN(2));
         IF LABI = 0
              THEN GO TO NF;
         DO I = 1 TO LABI WHILE($LAB(I) ^= $LABSAV);
              END;
         IF I > LABI
              THEN GO TO NF;
         KEY = $KEY(I);
         GO TO NXT;
 NF:
         GOTO = '1'B;
         GO TO NXT;
 OPLAB(2): /* LABEL */
         IF LABI = 0
              THEN GO TO SETLAB;
         DO I = 1 TO LABI WHILE($LAB(I) ^= SUBSTR(INREC,IN(2),LEN(2)));
              END;
         IF I <= LABI
              THEN GO TO NXTA; /* ALREADY GOT THIS LABEL */
         IF LABI = 256
              THEN GO TO ERROR1;
 SETLAB:
         LABI = LABI + 1;
         LABSTRT,$LAB(LABI) = SUBSTR(INREC,IN(2),LEN(2));
         $KEY(LABI) = KEY;
         IF GOTO
              THEN IF $LAB(LABI) = $LABSAV
              THEN GOTO = '0'B;
         GO TO NXTA;
 ERROR1:
         SIGNAL ERROR;
 OPLAB(3): /*$ANS*/
         IF SAVOP ^= 3 /* WAS LAST STMT OTHER THAN $ANS? */
              THEN DO;
                   SCORE = SCORE + 1;
                   GET EDIT(RESPONSE)(A(80));
                   CALL SETCAPS(RESPONSE);
                   IF RESPONSE = 'ATTN'
                        THEN SIGNAL CONDITION(ATTN);
                   END;
         IF SUBSTR(INREC,IN(2),LEN(2)) = RESPONSE
              THEN DO;
                   IN(2) = IN(3);
                   LEN(2) = LEN(3);
                   INDXOP = 1;
                   GO TO OPLAB(1);
                   END;
         GO TO NXT;
 OPLAB(4): /* $LI */
         $CNT = SUBSTR(INREC,IN(2),LEN(2));
         GO TO NXTA;
 OPLAB(5):
 TXT:
         INDXOP = 5;
         IF GOTO
              THEN GO TO NXT;
         PUT EDIT('  ',SUBSTR(INREC,1,72))(A,A) SKIP(1);
 /* TWO BLANKS PREFIXED TO BYPASS BUG IN COMPILER */
         GO TO NXT;
 EOJ:
         IF GOTO
              THEN DO;
                   PUT EDIT('LOGIC ERROR IN PI TEXT.  LABEL "',$LABSAV,
                     '" DOES NOT EXIST.')(A,A,A) SKIP(1);
                   SIGNAL ERROR;
                   END;
         LABSTRT = ' ';
 EOJA:
         CLOSE FILE(TEXT);
         END;
