 /*TSOSPRPT*/
 TSOSPR:  PROC OPTIONS(MAIN);
         %INCLUDE CTLGDEF;
         ON CONDITION(CTLGERR) BEGIN;
              CALL TROUT(RETC,OUTRETCC);
              PUT EDIT('ERROR WHEN ACCESSING CATALOG = ',OUTRETCC)(A,A);
              SIGNAL ERROR;
              END;
         DCL OUTRETCC CHAR(8);
         DCL PTRFIX FIXED BIN(31,0) DEF CTLGPTR;
         DCL RETB FIXED BIN(31,0) STATIC;
         DCL RETCODE FIXED BIN(31,0) DEF RETB;
         DCL RET BIT(32) DEF RETB;
         DCL REG15 BIT(8) DEF RETB;
         DCL RETC CHAR(4) DEF RETB;
         DCL CVOL CHAR(6);
         DCL DSN CHAR(44) VARYING STATIC INIT('');
         DCL 1 ABND STATIC,
              2 DUM BIN FLOAT(53),
              2 MAREA CHAR(265) INIT(' ');
         DCL SYSUADS FILE RECORD INPUT ENV(F RECSIZE(256) BLKSIZE(256));
         DCL BUFPTR PTR,
             BUFPADJ FIXED BIN(31,0) DEF BUFPTR;
         DCL BYTCNT FIXED BIN(15,0) BASED(BUFPTR);
         DCL BCNTSAV FIXED BIN(15,0) INIT(0);
         DCL 1 ENTRY BASED(BUFPTR),
              2 MEMNAM CHAR(8),
              2 TTRE CHAR(3),
              2 CFIELD,
               3 CF1 BIT(3),
               3 CF2 BIT(5); /*USER DATA HALFWORDS*/
         ON ENDFILE(SYSUADS) GO TO DIREOF;
         DCL RETLAB LABEL;
         DCL DATE BUILTIN;
         DCL 1 TOP50(50),
              2 USERID CHAR(8) INIT((50)(8)' '),
              2 USPACE FIXED BIN(15,0) INIT((50)0);
         DCL MYCOL FIXED BIN(15,0);
         ON ENDPAGE(SYSPRINT) BEGIN;
              PUT PAGE;
              PUT EDIT('TSO SPACE UTILIZATION REPORT, DATE=',DATE)
                (A,A);
              PUT SKIP;
              MYCOL = 1;
              DO L = 1 TO 6;
              PUT EDIT('USERID   SPACE(TRKS)')(COL(MYCOL),A);
              MYCOL = MYCOL + 22;
              END;
              MYCOL = 1;
              END;
         OPEN FILE(SYSPRINT) LINESIZE(132);
         SIGNAL ENDPAGE(SYSPRINT);
         DCL TOTRK FIXED BIN(15,0);
         RETLAB = NXT;
 GETDIR:
         IF BCNTSAV < 3
              THEN GO TO READIR;
         J = 12 + 2*CF2;
         BUFPADJ = BUFPADJ + J;
         BCNTSAV = BCNTSAV - J;
         IF BCNTSAV > 2
              THEN GO TO RETLAB;
 READIR:
         READ FILE(SYSUADS) SET(BUFPTR);
         BCNTSAV = BYTCNT;
         BUFPADJ = BUFPADJ + 2;
         GO TO RETLAB;
 DIREOF:
         SIGNAL ENDPAGE(SYSPRINT);
         PUT EDIT('TOP 50 LIST')(A);
         DO I = 1 TO 50;
              K = 1;
              DO J = 1 TO 50;
                   IF USPACE(J) > USPACE(K)
                        THEN K = J;
                   END;
              PUT EDIT(USERID(K),USPACE(K))(A,COL(10),P'ZZ,ZZ9')
                SKIP(1);
              USPACE(K) = 0;
              END;
         RETURN;
 NXT:
         DO I = 1 TO 8 WHILE(SUBSTR(MEMNAM,I,1) ^= ' ');
              END;
         DSN = SUBSTR(MEMNAM,1,I-2);
         CTLGPTR = ADDR(MAREA);
         PTRFIX = PTRFIX + 2;
         CVOL = 'SYSRES';
         CALL SYSCTLG('NAME',RET,DSN,CVOL,MAREA);
         CVOL = SUBSTR(MAREA,260,6);
         IF REG15 ^= '00001100'B
              THEN GO TO GETDIR;
         TOTRK = 0;
         CALL RECURS(INDLO);
         PUT EDIT(DSN,TOTRK)(COL(MYCOL),A,COL(MYCOL+10),P'ZZ,ZZ9');
         MYCOL = MYCOL + 22;
         IF MYCOL >= 133
              THEN MYCOL = 1;
         J = 1;
         DO I = 1 TO 50 WHILE(USERID(I) ^= ' ');
              IF USPACE(J) > USPACE(I)
                   THEN J = I;
              END;
         IF I < 51
              THEN J = I;
         IF TOTRK > USPACE(J)
              THEN DO;
                   USPACE(J) = TOTRK;
                   USERID(J) = DSN;
                   END;
         GO TO GETDIR;
 RECURS: PROC(PTTR) RECURSIVE;
         DCL PTTR CHAR(3);
         DCL TTRC CHAR(3);
         TTRC = PTTR;
         DCL 1 ABND,
              2 DUM BIN FLOAT(50),
              2 AREA,
               3 BLK CHAR(256),
               3 ATTR CHAR(3),
               3 ACVOL CHAR(6);
         DCL SAVPTR PTR;
         DCL N FIXED BIN(15,0);
         DCL 1 GDGNAM BASED(CTLGPTR),
              2 GDGG CHAR(1),
              2 GDGNUM BIT(32);
 NEWBLK:
         CALL SYSCTLG('BLOCK',RET,TTRC,CVOL,BLK);
         IF RETB ^= 0
              THEN SIGNAL CONDITION(CTLGERR);
         CTLGPTR = ADDR(AREA);
         PTRFIX = PTRFIX + 2;
 NEWENT:
         IF NAME = HIGH(8)
              THEN IF TTR = LOW(3)
                   THEN RETURN;
                   ELSE DO;
                        TTRC = TTR;
                        GO TO NEWBLK;
                        END;
         IF HCNT > '00000010'B & HCNT < '00000110'B
              THEN GO TO GETENT;
         IF SUBSTR(GDGNUM,1,8) > '00000101'B
           & SUBSTR(GDGNUM,1,8) < '00010000'B
              THEN GDGNUM = ^GDGNUM;
         DO N = 1 TO 8 WHILE(SUBSTR(NAME,N,1) ^= ' ');
              END;
         IF LENGTH(DSN) > 0
              THEN DSN = DSN ×× '.';
         DSN = DSN ×× SUBSTR(NAME,1,N-1);
         IF HCNT > '00000101'B × HCNT = '00000001'B
              THEN GO TO UNCATLG;
         SAVPTR = CTLGPTR;
         CALL RECURS(TTR);
         CTLGPTR = SAVPTR;
 UNCAT:
         N = LENGTH(DSN)-N;
         IF N > 0
              THEN DSN = SUBSTR(DSN,1,N);
              ELSE DSN = '';
         GO TO GETENT;
 UNCATLG:
         CALL OBPROC(DSN);
         GO TO UNCAT;
 GETENT:
         PTRFIX = PTRFIX + 12 + 2*HCNT;
         GO TO NEWENT;
         END;
 OBPROC:  PROC(PARMDSN);
         DCL PARMDSN CHAR(44) VARYING;
         % INCLUDE DSCB1;
         % INCLUDE DSCB2;
         % INCLUDE DSCB3;
         DCL DSCB1PTR PTR,
             PTR1ADJ FIXED BIN(31,0) DEF DSCB1PTR;
         DCL VTOCWK CHAR(148) EXT;
         DSCB1PTR = ADDR(VTOCWK);
         DSCB2PTR,DSCB3PTR = DSCB1PTR;
         PTR1ADJ = PTR1ADJ - 44;
         DCL CALLDSN CHAR(44);
         CALLDSN = PARMDSN;
         DCL TRKPERCYL FIXED BIN(15,0) STATIC INIT(19);
              /* FOR NOW, ASSUME EVERYTHING IS 3330 */
         DCL 1 ELEM1,
              2 CB1 FIXED BIN(15,0),
              2 HB1 FIXED BIN(15,0),
              2 CB2 FIXED BIN(15,0),
              2 HB2 FIXED BIN(15,0);
         DCL 1 ELEM2 DEF ELEM1,
              2 CH1 CHAR(4),
              2 CH2 CHAR(4);
         CALL SYSVTOC('SEARCH',RET,CALLDSN,PTRDS.VOLSER(1),VTOCWK);
         IF RETB ^= 0
              THEN RETURN;
         DO I = 1 TO 3;
              IF DS1EXTFL(I) = '0'B
                   THEN GO TO SB2;
              CH1 = DS1CCHHL(I);
              CH2 = DS1CCHHU(I);
              TOTRK=TOTRK+(CB2-CB1-1)*TRKPERCYL+TRKPERCYL-HB1+HB2+1;
              END;
 SB2:
         IF DS1PTRDS = LOW(5)
              THEN GO TO SB3;
         CALL SYSVTOC('SEEK',RET,DS1PTRDS,PTRDS.VOLSER(1),VTOCWK);
         IF DS3FMTID = '2'
              THEN DO;
                   DS1PTRDS = DS2PTRDS;
                   GO TO SB2;
                   END;
         DO I = 1 TO 4;
              IF DS3EXT.DS3EXTFL(I) = '0'B
                   THEN GO TO SB3;
              CH1 = DS3EXT.DS3CCHHL(I);
              CH2 = DS3EXT.DS3CCHHU(I);
              TOTRK=TOTRK+(CB2-CB1-1)*TRKPERCYL+TRKPERCYL-HB1+HB2+1;
              END;
         DO I = 1 TO 9;
              IF DS3ADEXT.DS3EXTFL(I) = '0'B
                   THEN GO TO SB3;
              CH1 = DS3ADEXT.DS3CCHHL(I);
              CH2 = DS3ADEXT.DS3CCHHU(I);
              TOTRK=TOTRK+(CB2-CB1-1)*TRKPERCYL+TRKPERCYL-HB1+HB2+1;
              END;
 SB3:
         END;
         END;
