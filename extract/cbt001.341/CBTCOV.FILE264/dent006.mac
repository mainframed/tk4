 /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
   /* DENT006 - COLUMN,COL,TRUNCATE,TRUNC,TR,FILL SUBCOMMANDS */
   % DCL @PROCNAME CHAR;
   % DCL @RENTNAME CHAR;
   % @PROCNAME ='RENT';
   % @RENTNAME ='DENT006';
   % INCLUDE DENTSUB;
   DCL MAXLEN ENTRY(CHAR(*) VAR)
     RETURNS(FIXED BIN(15,0));
   DCL SETCAPS ENTRY;
   DCL 1 SKEL BASED(SKELPTR),
     2 SKNXT PTR, /* SINGLY-LINKED LIST */
     2 STC FIXED BIN(15,0), /* STARTING COLUMN */
     2 ENC FIXED BIN(15,0); /* ENDING COLUMN */
   DCL SKHD PTR;
   DCL CMDLAB(7) LABEL;
   GO TO CMDLAB(CMDINDX);
 CMDLAB(7): /* FILL */
   J=LINESIZE-RHPMAXLN-2;
   I=PARY(2);
   IF I>J
     THEN DO;
       PUT STRING(MSGDATA) EDIT('FILL VALUE SHORTED TO ',J)(A,P'ZZ9');
       I=J;
       END;
   RHPFILL=I;
   CALL #COLTR(RHPPTR,SUBENT); /* CALL COLTR */
   RHRC=0;
   RETURN;
 CMDLAB(1): /* DENT006 */
 CMDLAB(2): /* COLUMN */
 CMDLAB(3): /* COL */
   IF PARY(2)^=''
     THEN IF SUBSTR(PARY(2),1,1)='('
       THEN DO;
         SKHD=#SKIP(SUBSTR(PARY(2),2,LENGTH(PARY(2))-2));
         IF SKHD=NULL
           THEN DO;
             MSGDATA='INVALID OPERAND';
             RHRC=8;
             RETURN;
             END;
         DO SKELPTR=RHPSKHD REPEAT RHPSKHD WHILE(RHPSKHD^=NULL);
           RHPSKHD=SKNXT;
           FREE SKEL;
           END;
         RHPSKHD=SKHD;
         CALL #COLTR(RHPPTR,SUBENT);
         RHRC=0;
         RETURN;
         END;
   K=LINESIZE-RHPMAXLN-2;
   IF HEXMODE
     THEN K=K/2;
   IF PARY(2) =''
         THEN NCOL = 1;
     ELSE DO;
       CALL SETCAPS(PARY(2));
       L=MIN(TRUNCATE-COLUMN+1,K);
       SELECT(PARY(2));
         WHEN('L') NCOL=MAX(1,COLUMN-K);
         WHEN('R') NCOL=MIN(MAXLEN(BUF),COLUMN+L);
         OTHERWISE NCOL=PARY(2);
         END;
       END;
   IF NCOL<1
     THEN NCOL=1;
   IF PARY(3) =''
         THEN NTRUNC = MIN(NCOL+K,MAXLEN(BUF)+1);
     ELSE NTRUNC = PARY(3);
   GO TO COMMON;
 CMDLAB(4): /* TRUNCATE */
 CMDLAB(5): /* TRUNC */
 CMDLAB(6): /* TR */
   NTRUNC = PARY(2);
   NCOL = COLUMN;
 COMMON:
   IF NCOL>MAXLEN(BUF)
     THEN MSGDATA='COLUMN EXCEEDS RECORD LENGTH';
     ELSE IF NTRUNC>(MAXLEN(BUF)+1)
       THEN MSGDATA='TRUNCATE EXCEEDS RECORD LENGTH+1';
       ELSE IF NCOL>=NTRUNC
         THEN MSGDATA='COLUMN CANNOT EXCEED OR EQUAL TRUNCATE';
         ELSE IF NTRUNC-NCOL>LINESIZE-RHPMAXLN-2
           THEN MSGDATA='TRUNCATE-COLUMN MORE THAN SCREEN SIZE';
           ELSE DO;
             COLUMN = NCOL;
             TRUNCATE = NTRUNC;
             ALLOCATE SKEL;
             SKNXT=NULL;
             STC=COLUMN;
             ENC=TRUNCATE;
             SKHD=SKELPTR;
             DO SKELPTR=RHPSKHD REPEAT RHPSKHD WHILE(RHPSKHD^=NULL);
               RHPSKHD=SKNXT;
               FREE SKEL;
               END;
             RHPSKHD=SKHD;
             CALL #COLTR(RHPPTR,SUBENT); /* CALL COLTR */
             END;
   RHRC = 0;
   END;
