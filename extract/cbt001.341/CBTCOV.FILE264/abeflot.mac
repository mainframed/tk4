 /* COPYRIGHT 1985 BY THOMAS GLEN SMITH */
 /**********************************************************************
 *                                                                     *
 * ALIAS #GETFLOAT                                                     *
 * CALLED TO CONVERT DATA FROM SOME BASE SYSTEM TO FLOATING POINT.     *
 *                                                                     *
 **********************************************************************/
   %INCLUDE ABESUB;
 ABESUB(ABEFLOT) PARMS(STR,R) RETURNS(DEC FLOAT(16));
   %INCLUDE ABESUBA;
   %INCLUDE ABEREC;
   %INCLUDE ABEMISS;

   DCL STR CHAR(*) VAR;
   DCL R PTR;

   DCL ABEMICK ENTRY(CHAR(*) VAR,PTR) RETURNS(BIT(1));
   DCL PTRIN ENTRY(PTR)
     RETURNS(FIXED BIN(31,0));
   DCL PTROUT ENTRY(FIXED BIN(31,0))
     RETURNS(PTR);
   DCL CONVERT ENTRY(PTR,
     CHAR(*),FIXED BIN(15,0),FIXED BIN(15,0),
     CHAR(*),FIXED BIN(15,0),FIXED BIN(15,0))
     RETURNS(CHAR(256) VAR);
   DCL (D,S) PTR;
   DCL CON CHAR(8) VAR;
   DCL RET DEC FLOAT(16),
       RETCH CHAR(8) DEF RET;
   DCL TYPETAB(8) CHAR(8) VAR STATIC INIT(
     'FLOAT','CHAR','CHAR','PACKED','HEX','BIT','FIXED','BEST');
   DCL INTYPE CHAR(8) VAR;

   IF R=NULL
     THEN INTYPE='CHAR'; /* IF R IS NULL, ASSUME CHARACTER */
     ELSE INTYPE=TYPETAB(R->RHNTYPE);
   IF ABEMICK(STR,R)
     THEN RET=MISSING;
     ELSE DO;
       CON=CONVERT(PTROUT(PTRIN(ADDR(STR))+2),
         INTYPE,LENGTH(STR),0,
         'FLOAT',8,0);
       IF LENGTH(CON)=0
         THEN RET=MISSING;
         ELSE RETCH=CON;
       END;
   RETURN(RET);
   END ABEFLOT;
