  REALLOCATE QUE,40,XAC,1000,COM,50000
  SIMULATE
CELT VARIABLE (PH2*29)*(Q38-1)/100+PH2
*                  IF Y = ELAPSED RUN TIME, X = #CONCURRENTLY RUNNING
*                  JOBS, Z = STAND-ALONE ELAPSED TIME, THEN
*                  Y = (.29Z)*(X-1)+Z THIS ASSUMES A LINEAR
*                  RELATIONSHIP BETWEEN AN INCREASE IN #CONCURRENTLY
*                  RUNNING JOBS AND ELAPSED RUN TIMES.
CDIST FUNCTION RN2,D7
0,0/.39,3/.58,5/.60,12/.61,13/.83,14/1.00,24
*                  THIS FUNCTION DEFINES THE JOB CLASS DISTRIBUTION
*                  39 PERCENT = CLASS C
*                  19 PERCENT = CLASS E
*                   2 PERCENT = CLASS L
*                   1 PERCENT = CLASS M
*                  22 PERCENT = CLASS N
*                  17 PERCENT = CLASS X
  STORAGE  S1,15
*                  STORAGE FACILITY 1 REPRESENTS A POOL OF
*                  INITIATORS - DEFINED FOR STATISTICAL PURPOSES.
INITC MATRIX MB,15,8
*                  IN THIS MATRIX, EACH ROW REPRESENTS THE JOB CLASSES
*                  TO BE PROCESSED BY THE CORRESPONDING INITIATOR.
*                  IN EACH ROW, 0 INDICATES THE ABSENCE OF A CLASS
*                  CLASSES
*                  A - 1
*                  B - 2
*                  C - 3
*                  D - 4
*                  E - 5
*                  F - 6
*                  G - 7
*                  H - 8
*                  I - 9
*                  J - 10
*                  K - 11
*                  L - 12
*                  M - 13
*                  N - 14
*                  O - 15
*                  P - 16
*                  Q - 17
*                  R - 18
*                  S - 19
*                  T - 20
*                  U - 21
*                  V - 22
*                  W - 23
*                  X - 24
*                  Y - 25
*                  Z - 26
*                  0 - 27
*                  1 - 28
*                  2 - 29
*                  3 - 30
*                  4 - 31
*                  5 - 32
*                  6 - 33
*                  7 - 34
*                  8 - 35
*                  9 - 36
  INITIAL MB$INITC(1,1),2/MB$INITC(1,2),3/MB$INITC(1,3),4
*                  INITIATOR 1 PROCESSES B, C, D
  INITIAL MB$INITC(2,1),3/MB$INITC(2,2),4
*                  INITIATOR 2 PROCESSES C, D
  INITIAL MB$INITC(3,1),3/MB$INITC(3,2),4
*                  INITIATOR 3 PROCESSES C,D
  INITIAL MB$INITC(4,1),3/MB$INITC(4,2),4
*                  INITIATOR 4 PROCESSES C,D
  INITIAL MB$INITC(5,1),3/MB$INITC(5,2),4
*                  INITIATOR 5 PROCESSES C,D
  INITIAL MB$INITC(6,1),12/MB$INITC(6,2),13
*                  INITIATOR 6 PROCESSES L,M
  INITIAL MB$INITC(7,1),24
*                  INITIATOR 7 PROCESSES X
  INITIAL MB$INITC(8,1),14
*                  INITIATOR 8 PROCESSES N
  INITIAL MB$INITC(9,1),5/MB$INITC(9,2),3/MB$INITC(9,3),4
*                  INITIATOR 9 PROCESSES E,C,D
SATME MATRIX MH,36,1
*                  THIS MATRIX WILL DEFINE THE STAND-ALONE ELAPSED
*                  TIME IN SECONDS FOR EACH JOB CLASS
  INITIAL MH$SATME(1,1),108
*                  CLASS A JOBS RUN IN 108 SECONDS STAND-ALONE
  INITIAL MH$SATME(2,1),288
*                  CLASS B JOBS RUN IN 288 SECONDS STAND-ALONE
  INITIAL MH$SATME(3,1),150
*                  CLASS C JOBS RUN IN 150 SECONDS STAND-ALONE
  INITIAL MH$SATME(4,1),648
*                  CLASS D JOBS RUN IN 648 SECONDS STAND-ALONE
  INITIAL MH$SATME(5,1),120
*                  CLASS E JOBS RUN IN 120 SECONDS STAND-ALONE
  INITIAL MH$SATME(6,1),1656
*                  CLASS F JOBS RUN IN 1656 SECONDS STAND-ALONE
  INITIAL MH$SATME(12,1),3500
*                  CLASS L JOBS RUN IN 3500 SECONDS STAND-ALONE
  INITIAL MH$SATME(13,1),2500
*                  CLASS M JOBS RUN IN 2500 SECONDS STAND-ALONE
  INITIAL MH$SATME(14,1),10
*                  CLASS N JOBS RUN IN 10 SECONDS STAND-ALONE
  INITIAL MH$SATME(24,1),10
*                  CLASS X JOBS RUN IN 10 SECONDS STAND-ALONE
REGSZ MATRIX MH,36,1
*                  THIS MATRIX WILL DEFINE THE AVERAGE REGION SIZE FOR
*                  EACH JOB CLASS
  INITIAL MH$REGSZ(1,1),40
*                  CLASS A JOBS USE 80K AVG
  INITIAL MH$REGSZ(2,1),100
*                  CLASS B JOBS USE 200K
  INITIAL MH$REGSZ(3,1),30
*                  CLASS C JOBS USE 60K
  INITIAL MH$REGSZ(4,1),50
*                  CLASS D JOBS USE 100K
  INITIAL MH$REGSZ(5,1),30
*                  CLASS E JOBS USE 60K
  INITIAL MH$REGSZ(6,1),60
*                  CLASS F JOBS USE 120K
  INITIAL MH$REGSZ(12,1),100
*                  CLASS L JOBS USE 200K
  INITIAL MH$REGSZ(13,1),100
*                  CLASS M JOBS USE 200K
  INITIAL MH$REGSZ(14,1),10
*                  CLASS N JOBS USE 20K
  INITIAL MH$REGSZ(24,1),15
*                  CLASS X JOBS USE 30K
  LOAD GPSSIT
*                  THIS HELP BLOCK, GIVEN OPERAND B = JOB CLASS #
*                  (1-36), BYTE MATRIX 1 CONSISTING OF X ROWS, AND
*                  Y COLUMNS WHERE X=# INITIATORS, AND THE COLUMNS
*                  IN EACH ROW INDICATING THE JOB CLASS NUMBERS
*                  PROCESSED BY THAT INITIATOR, AND OPERAND C =
*                  HALFWORD PARAMETER PH4.  IF PH4 (OPERAND C) = 0,
*                  THIS SUBRTNE WILL SEARCH FOR AN AVAILABLE
*                  INITIATOR TO PROCESS THE JOB.  IF ONE IS FOUND,
*                  PH4 IS SET TO THE INITIATOR NUMBER.  ELSE IT IS
*                  LEFT AT 0.  IF PH4 (OPERAND C) NE 0, THEN PH4 EQUALS
*                  THE NUMBER OF THE INITIATOR THAT HAS JUST FINISHED
*                  RUNNING THIS JOB.  THIS SUBRTNE MARKS THE INITIATOR
*                  AS BEING AVAILABLE, AND THEN EXAMINES THE INPUT
*                  QUEUES TO DETERMINE IF THERE IS A JOB WAITING THAT
*                  IS ELIGIBLE FOR SELECTION BY THE INITIATOR JUST
*                  MADE AVAILABLE.  IF SO, PH4 IS SET TO THE PROPER
*                  JOB CLASS.  IF NOT, PH4 IS SET TO ZERO.
  LOAD GPSSGP
*                  LOAD MY HELP BLOCK TO OBTAIN AND FREE REGIONS
  STORAGE S2,400
*                  THIS STORAGE FACILITY IS BEING DEFINED TO
*                  GATHER STATISTICS REGARDING MAIN STORAGE
*                  UTILIZATION.
  INITIAL XH1,400
*                  SAVEVALUE XH1 IS SET TO THE SIZE OF MAIN STORAGE
*                  WHICH CAN BE ALLOCATED TO REGIONS WHERE 1 = 2K.
  INITIAL XF1,-1
*                  -1 CONSTANT FOR LATER ASSIGNMENT STATEMENTS
  GENERATE 28,,,,,4PH,1PF
*                  GENERATE A TRANSACTION REPRESENTING A NEW JOB
*                  EVERY 28 SECONDS
*                  PH1 = REGION SIZE
*                  PH2 = STAND-ALONE ELAPSED TIME
*                  PH3 = JOB CLASS
*                  PH4 = INIT # ASSIGNED, OR ZERO IF NOT INIT
*                  ASSIGNED, OR AFTER EXECUTION, JOB CLASS # TO
*                  BE UNLINKED AND ASSIGNED THIS INIT.
  ASSIGN 3,FN$CDIST,PH
*                  SET JOB CLASS
  ASSIGN 4,0,PH
*                  INITIALIZE INIT # TO 0
  ASSIGN 1,MH$REGSZ(PH3,1),PH
*                  THE REGION SIZE IS SET ACCORDING TO JOB CLASS
  ASSIGN 2,MH$SATME(PH3,1),PH
*                  THE STAND-ALONE ELAPSED TIME FOR EACH JOB IS SET
*                  ACCORDING TO JOB CLASS.
  ASSIGN 1,XF1,PF
*                  SET REGION ADDRESS PARAMETER TO -1 TO INDICATE
*                  TO HELP ROUTINE GETPART THAT A REGION IS TO BE
*                  OBTAINED INSTEAD OF FREED.
  QUEUE 37
*                  SIMULATE THE JOB BEING QUEUED IN THE INPUT QUEUE
*                  AWAITING SELECTION OF AN INITIATOR.
  QUEUE PH3
*                  INCREMENT THE APPROPRIATE JOB CLASS QUEUE OF
*                  JOBS WAITING FOR AN INITIATOR
GTIN HELP GPSSIT,PH3,PH4
*                  GET AN INITIATOR - MAYBE
  TEST E PH4,0,LEAVQ
*                  IF AN INIT WAS OBTAINED, GO LEAVE THE INPUT Q
  LINK 1,LIFO
*                  REMOVE THE TRANSACTION FROM THE CURRENT EVENTS
*                  CHAIN UNTIL AN INITIATOR IS AVAILABLE
LEAVQ ENTER 1
*                  INDICATE AN INIT IS IN USE
  DEPART 37
*                  JOB LEAVES THE INPUT QUEUE
  DEPART PH3
*                  JOB LEAVES THE JOB CLASS INPUT QUEUE
  QUEUE 39
*                  QUEUE 39 REPRESENTS JOBS WAITING FOR A REGION.
GTRG  HELP GPSSGP,PH1,PF1
*                  THIS HELP BLOCK SIMULATES GETTING A REGION.
*                  PH1 IS THE REGION SIZE WHERE 1 = 2K.
*                  PF1 WILL BE SET TO THE REGION STARTING ADDRESS,
*                  OR WILL BE SET NEGATIVE IF STORAGE ISN'T
*                  CURRENTLY AVAILABLE.
  TEST L PF1,0,RUN
*                  IF A REGION WAS ASSIGNED, GO TO RUN
*                  (IF PF1 IS LT 0 THEN FALL THRU)
  LOGIC S 1
*                  SET THE LOGIC SWITCH TO INDICATE ONE OR MORE JOBS
*                  ARE WAITING FOR A REGION.
  GATE LR 1
*                  WAIT FOR THE SWITCH TO BE RESET BY SOMEONE
*                  FREEING A REGION.
  TRANSFER ,GTRG
*                  NOW GO BACK AND TRY FOR A REGION AGAIN.
RUN QUEUE 38
*                  QUEUE #38 REPRESENTS JOBS CURRENTLY IN EXECUTION.
  DEPART 39
*                  END OF TIME TO GET A REGION.
  ENTER 2,PH1
*                  ENTER STORAGE 2 WITH THE NUMBER OF UNITS EQUAL
*                  TO THE REGION SIZE TO GATHER STATISTICS ON
*                  MAIN STORAGE UTILIZATION.
  ADVANCE V$CELT
*                  THIS BLOCK SIMULATES EXECUTION OF THE JOB WITH
*                  THE ELAPSED TIME ASSIGNED TO PH2.
  DEPART 38
*                  INDICATE END OF EXECUTION
  HELP GPSSIT,PH3,PH4
*                  FREE UP THE INIT, AND FIND OUT IF A JOB SHOULD BE
*                  UNLINKED FROM THE USER CHAIN OF JOBS WAITING FOR
*                  AN INIT.
  TEST NE PH4,0,FRRG
*                  IF PH4 IS 0 THEN GO TO FREE THE REGION.
  UNLINK E 1,GTIN,1,4PH
*                  UNLINK THE FIRST JOB OF THE APPROPRIATE CLASS
*                  FROM THE USER CHAIN AND SEND IT BACK TO GET
*                  AN INITIATOR.
FRRG HELP GPSSGP,PH1,PF1
*                  SIMULATES FREEING A REGION.
*                  PH1 IS THE REGION SIZE WHERE 1 = 2K.
*                  PF1 IS THE REGION ADDRESS.
  LEAVE 2,PH1
*                  GET OUT OF STORAGE 2 TO GATHER STATISTICS ON
*                  MAIN STORAGE USE.
  LOGIC R 1
*                  LET OTHERS TRY TO GET A REGION.
  LEAVE 1
*                  FREE UP THE INITIATOR
  TERMINATE 1
  START 600
