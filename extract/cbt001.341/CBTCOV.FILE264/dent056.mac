   /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
   /* DENT056 - RANDOM */
   % DCL @PROCNAME CHAR;
   % DCL @RENTNAME CHAR;
   % @PROCNAME ='RENT';
   % @RENTNAME ='DENT056';
   % INCLUDE DENTSUB;
   DCL (SEED,F1,F2) DEC FLOAT(16);
   DCL TIME BUILTIN;
   DCL MYCMD CHAR(256) VAR;
   DCL PI DEC FLOAT(16) STATIC INIT(3.141592654);
   RANGE=PARY(2);
   COUNT=PARY(3);
   SEED =PARY(4);
   IF RANGE<=0 × RANGE>99999999
     THEN DO;
       MSGDATA='RANGE MUST BE 0<RANGE<100000000';
       RHRC=8;
       RETURN;
       END;
   IF RANGE<=COUNT
     THEN DO;
       MSGDATA='RANGE MUST BE > COUNT';
       RHRC=8;
       RETURN;
       END;
   IF SEED<-1 × SEED>9
     THEN DO;
       MSGDATA='SEED MUST BE -1<=SEED<=9';
       RHRC=8;
       RETURN;
       END;
   IF COUNT<=0 × COUNT>5000
     THEN DO;
       MSGDATA='COUNT MUST BE 0<COUNT<=5000';
       RHRC=8;
       RETURN;
       END;
   I=#CMD('DEL ALL',RHPTR,SUBENT,RHHDRPT);
   IF RANGE>50000 × COUNT<=RANGE/16
     THEN CALL SLOW;
     ELSE CALL FAST;
   I=#CMD('TOP',RHPTR,SUBENT,RHHDRPT);
   RHRC=0;
   RETURN;


 SLOW: PROC;
 /**********************************************************************
 *                                                                     *
 * SLOW METHOD FOR SELECTING UNIQUE RANDOM NUMBERS.                    *
 *                                                                     *
 **********************************************************************/
   DCL NUMSTR CHAR(8);
   K=0;
   DO WHILE(K<COUNT);
     DO UNTIL(UNIQUE(NUMSTR));
       SEED=RND(SEED);
       J=RANGE*SEED+1;
       PUT STRING(NUMSTR) EDIT(J)(F(8));
       END;
     K=K+1;
     PUT STRING(MYCMD) EDIT('NL ',NUMSTR)(A,A);
     J=#CMD(MYCMD,RHPTR,SUBENT,RHHDRPT);
     END;
   END SLOW;

 UNIQUE: PROC(NUMSTR) RETURNS(BIT(1));
 /**********************************************************************
 *                                                                     *
 * CALLED TO DETERMINE IF NEW NUMBER IS UNIQUE.                        *
 *                                                                     *
 **********************************************************************/
   DCL NUMSTR CHAR(8);
   DCL R PTR;
   DO R=NXTHDR REPEAT R->NXTPTR WHILE(R^=HDPTR);
     IF R->RECSTR=NUMSTR
       THEN LEAVE;
     END;
   IF R=HDPTR
     THEN RETURN('1'B);
     ELSE RETURN('0'B);
   END UNIQUE;

 FAST: PROC;
 /**********************************************************************
 *                                                                     *
 * FAST METHOD FOR SELECTING UNIQUE RANDOM NUMBERS.                    *
 *                                                                     *
 **********************************************************************/

   DCL 1 ARYSTR BASED(ARYPTR),
     2 ARYBND FIXED BIN(15,0),
     2 ARY(RANGE REFER(ARYBND)) FIXED BIN(31,0);

   /* ALLOCATE AND INITIALIZE ARY */
   ALLOCATE ARYSTR;
   DO I=1 TO RANGE;
     ARY(I)=I;
     END;

   /* NOW SHUFFLE THE FIRST COUNT ELEMENTS */
   DO I=1 TO COUNT;
     SEED=RND(SEED);
     J=RANGE*SEED+1;
     K=ARY(I);
     ARY(I)=ARY(J);
     ARY(J)=K;
     END;

   /* NOW CREATE RECORDS WITH NUMBERS IN THEM */
   DO I=1 TO COUNT;
     PUT STRING(MYCMD) EDIT('NL ',ARY(I))(A,F(8));
     J=#CMD(MYCMD,RHPTR,SUBENT,RHHDRPT);
     END;
   FREE ARYSTR;
   END FAST;

 RND: PROC(OP) RETURNS(DEC FLOAT(16));
   DCL (OP,RET) DEC FLOAT(16);
   DCL INT FIXED BIN(31,0);
   IF OP<0
     THEN DO;
       RET=SUBSTR(TIME,7);
       OP=RET/1000;
       END;
   RET,INT=(PI+OP)**8;
   RET=RET-INT;
   RETURN(RET);
   END RND;

   END DENT056;
