 /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
 /* ABESUBR- DB2 INTERFACE SUBROUTINE */
   %INCLUDE ABESUB;
 ABESUB(ABESUBR) PARMS(RHPTR,RHHDRPT,SQLDAPTR,PARMPTR,ERRMSG,LAST)
   CHECK(YES);
   %INCLUDE ABESUBA;

   DCL MISSING DEC FLOAT(16),
       MISSINGCH CHAR(8) BASED(ADDR(MISSING));
   DCL MISSING_PACKED FIXED DEC(15,0) STATIC INIT(-999999999999999),
       MISSING_PACKED_CH CHAR(8) BASED(ADDR(MISSING_PACKED));
   DCL MISSING_INTEGER FIXED BIN(31,0) STATIC INIT(-2147483648),
       MISSING_INTEGER_CH CHAR(4) BASED(ADDR(MISSING_INTEGER));
   DCL MISSING_SMALLINT FIXED BIN(15,0) STATIC INIT(-32768),
       MISSING_SMALLINT_CH CHAR(2) BASED(ADDR(MISSING_INTEGER));
   DCL ERRMSG CHAR(130) VAR;
   DCL (LAST,NODEPTR,PARMPTR,SQLDAPTR) PTR;
   DCL 1 PARSSTR BASED(PARMPTR),
   %INCLUDE ABEFAM;
   DCL 1 SQLDA BASED(SQLDAPTR),
     2 SQLDAID CHAR(8),
     2 SQLDABC BIN FIXED(31),
     2 SQLN BIN FIXED(15,0),
     2 SQLD BIN FIXED(15,0),
     2 SQLVAR(SQLSIZE REFER(SQLN)),
      3 SQLTYPE FIXED BIN(15,0),
      3 SQLLEN FIXED BIN(15,0),
      3 SQLDATA PTR,
      3 SQLIND PTR,
      3 SQLNAME CHAR(30) VAR;
   DCL 1 COLDATA BASED(COLPTR),
     2 COLIND FIXED BIN(15,0),
     2 COLLEN FIXED BIN(15,0),
     2 COLSTR CHAR(L REFER(COLLEN));
   DCL CALCPRT ENTRY(DEC FLOAT(16))
     RETURNS(CHAR(80) VAR);
   DCL CONVERT ENTRY(PTR,CHAR(*),FIXED BIN(15,0),FIXED BIN(15,0),
     CHAR(*),FIXED BIN(15,0),FIXED BIN(15,0))
     RETURNS(CHAR(256) VAR);
   DCL SMALLINT FIXED BIN(15,0) BASED(SMALLINT_PTR);
   DCL INTEGER FIXED BIN(31,0) BASED(INTEGER_PTR);
   DCL FLOAT BIN FLOAT(53) BASED(FLOAT_PTR);
   DCL BIGFLOAT FLOAT DEC(16),
       BIGFLOATCH CHAR(8) BASED(ADDR(BIGFLOAT));
   DCL (I,J,K,M,N,PR,SC) FIXED BIN(15,0);

   UNSPEC(MISSING)='1'B;
   IF INDDN=NULL
     THEN DO; /* IT IS TIME TO CALCULATE BUFFER LENGTH AND SET DBD */
       L=0;
       DO I=1 TO SQLD;
         COLPTR=SQLIND(I);
         SELECT(SQLTYPE(I));
           WHEN(448,449,452,453) DO; /* IT IS CHAR OR VARCHAR */
             J=2; /* TYPE=CHAR */
             K=COLLEN; /* LENGTH */
             END;
           WHEN(480,481) DO; /* IT IS FLOAT */
             IF INTERNALSW
               THEN DO;
                 J=1; /* TYPE=FLOAT */
                 K=8; /* LENGTH=8 */
                 END;
               ELSE DO;
                 J=3; /* TYPE=ZONED */
                 K=20; /* LENGTH */
                 END;
             END;
           WHEN(484,485) DO; /* IT IS DECIMAL */
             IF INTERNALSW
               THEN DO;
                 J=4; /* TYPE=PACKED DECIMAL */
                 K=SQLLEN(I)/256;
                 END;
               ELSE DO;
                 J=3; /* TYPE=ZONED */
                 K=2*(SQLLEN(I)/256)+1; /* LENGTH */
                 END;
             END;
           WHEN(496,497) DO; /* IT IS INTEGER */
             IF INTERNALSW
               THEN DO;
                 J=7; /* TYPE=FIXED */
                 K=SQLLEN(I); /* LENGTH */
                 END;
               ELSE DO;
                 J=3; /* TYPE=ZONED */
                 K=10; /* LENGTH */
                 END;
             END;
           WHEN(500,501) DO; /* IT IS SMALL INTEGER */
             IF INTERNALSW
               THEN DO;
                 J=7; /* TYPE=FIXED */
                 K=SQLLEN(I); /* LENGTH */
                 END;
               ELSE DO;
                 J=3; /* TYPE=ZONED */
                 K=5; /* LENGTH */
                 END;
             END;
           OTHERWISE DO; /* UNKNOWN DATA TYPE */
             ERRMSG='UNKNOWN DB2 DATA TYPE='××SQLTYPE(I);
             SIGNAL CONDITION(BADSSE);
             END;
           END; /* SELECT */
         ALLOCATE RHNAMESTR SET(RHNAMPTR);
         /* NOW QUEUE AT END OF QUEUE */
         RHNLINK=NULL;
         IF RHUSEHD=NULL
           THEN RHUSEHD=RHNAMPTR;
           ELSE LAST->RHNLINK=RHNAMPTR;
         LAST=RHNAMPTR;
         RHNTYPE,RHNPOS,RHNLNG,RHNVAR0,RHNFL,RHNFD,RHNF,RHNJUST=0;
         RHNCPOS,RHNCLNG=0;
         RHNLABEL,RHNFORM,RHNIFORM='';
         RHNTYPE=J;
         RHNLNG,RHNCLNG=K;
         RHNPOS,RHNCPOS=L+1;
         RHNVAR0=I;
         RHNNAME=SQLNAME(I);
         L=L+RHNLNG; /* BUMP TOTAL LENGTH OF BUFFER */
         END;
       RHUSETR=NULL;
       DO NODEPTR=RHUSEHD REPEAT NODEPTR->RHNLINK
         WHILE(NODEPTR^=NULL);
         CALL #ABE053A(RHUSETR,NODEPTR);
         END;
       ALLOCATE ALCSTR;
       INDDN=ALCPTR;
       BUFPTR=ADDR(ALCRECL);
       ALCDDN='DB2';
       ALCDSN=INDSN;
       ALCMEM='';
       ALCFLAG='0'B;
       SUBSTR(ALCFLAG,5,1)='1'B; /* DON'T FREE AT END */
       SUBSTR(ALCFLAG,6,1)='1'B; /* NONUM */
       SUBSTR(ALCFLAG,9,1)='1'B; /* INDICATE IT IS DB2 TABLE */
       ALCSEQOFF,ALCSEQLEN=0;
       ALCBLKL=L;
       END;

   /* NOW SET UP THE NEW RECORD IN ALCBUF */
   ALCPTR=INDDN;
   ALCBUF='';
   RHNAMPTR=RHUSEHD;
   DO I=1 TO SQLD;
     COLPTR=SQLIND(I);
     SELECT(SQLTYPE(I));
       WHEN(448,449,452,453) /* IT IS CHAR OR VARCHAR */
         IF COLIND^=0
           THEN CALL #ABEINS('.',BUFPTR,RHNPOS,RHNLNG);
           ELSE CALL #ABEINS(COLSTR,BUFPTR,RHNPOS,RHNLNG);
       WHEN(480,481) DO; /* IT IS FLOAT */
         IF INTERNALSW
           THEN IF COLIND^=0
             THEN CALL #ABEINS(MISSINGCH,BUFPTR,RHNPOS,RHNLNG);
             ELSE CALL #ABEINS(COLSTR,BUFPTR,RHNPOS,RHNLNG);
           ELSE IF COLIND^=0
             THEN CALL #ABEINS('.',BUFPTR,RHNPOS,RHNLNG);
             ELSE DO;
               FLOAT_PTR=ADDR(COLSTR);
               CALL #ABEINS(CALCPRT(FLOAT),BUFPTR,RHNPOS,
                 RHNLNG);
               END;
         END;
       WHEN(484,485) DO; /* IT IS DECIMAL */
         IF INTERNALSW
           THEN IF COLIND^=0
             THEN CALL #ABEINS(SUBSTR(MISSING_PACKED_CH,8-RHNLNG+1),
               BUFPTR,RHNPOS,RHNLNG); /* MISSING VALUE */
             ELSE CALL #ABEINS(COLSTR,BUFPTR,RHNPOS,RHNLNG);
           ELSE IF COLIND^=0
             THEN CALL #ABEINS('.',BUFPTR,RHNPOS,RHNLNG);
             ELSE DO;
               SC=MOD(SQLLEN(I),256); /* SC=SCALE */
               BIGFLOATCH=CONVERT(ADDR(COLSTR),'DECIMAL',COLLEN,SC,
                 'FLOAT',8,SC);
               CALL #ABEINS(CALCPRT(BIGFLOAT),BUFPTR,RHNPOS,
                 RHNLNG);
               END;
         END;
       WHEN(496,497) DO; /* IT IS INTEGER */
         IF INTERNALSW
           THEN IF COLIND^=0
             THEN CALL #ABEINS(MISSING_INTEGER_CH,BUFPTR,
               RHNPOS,RHNLNG); /* MISSING VALUE */
             ELSE CALL #ABEINS(COLSTR,BUFPTR,RHNPOS,RHNLNG);
           ELSE IF COLIND^=0
             THEN CALL #ABEINS('.',BUFPTR,RHNPOS,RHNLNG);
             ELSE DO;
               INTEGER_PTR=ADDR(COLSTR);
               CALL #ABEINS(CALCPRT(INTEGER),BUFPTR,RHNPOS,
                 RHNLNG);
               END;
         END;
       WHEN(500,501) DO; /* IT IS SMALL INTEGER */
         IF INTERNALSW
           THEN IF COLIND^=0
             THEN CALL #ABEINS(MISSING_SMALLINT_CH,BUFPTR,
               RHNPOS,RHNLNG); /* MISSING VALUE */
             ELSE CALL #ABEINS(COLSTR,BUFPTR,RHNPOS,RHNLNG);
           ELSE IF COLIND^=0
             THEN CALL #ABEINS('.',BUFPTR,RHNPOS,RHNLNG);
             ELSE DO;
               SMALLINT_PTR=ADDR(COLSTR);
               CALL #ABEINS(CALCPRT(SMALLINT),BUFPTR,RHNPOS,
                 RHNLNG);
               END;
         END;
       OTHERWISE DO; /* UNKNOWN DATA TYPE */
         ERRMSG='UNKNOWN DB2 DATA TYPE='××SQLTYPE(I);
         SIGNAL CONDITION(BADSSE);
         END;
       END; /* SELECT */
     RHNAMPTR=RHNLINK;
     END;

   /* NOW ADD A RECORD TO THE EDITED DATA SET */
   CALL #ADD(RHPTR,RHHDRPT,RECPTR,RECPTR,-1,ALCBUF,0);
   END ABESUBR;
