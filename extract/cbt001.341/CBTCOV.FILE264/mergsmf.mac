 MERGSMF:  PROC OPTIONS(MAIN);
 /* NOTE MUST BE LINKEDITED WITH SPECIAL VERSION OF IBMBEER
    TO CAUSE ABEND. */
         DFT RANGE(*) FIXED BIN VALUE(FIXED BIN(31,0));
         DCL (SMFREC,INREC) CHAR(32760) VARYING;
         DCL SMFPTR PTR,
           SMFADJ FIXED BIN(31,0) DEF SMFPTR;
         SMFPTR = ADDR(SMFREC);
         SMFADJ = SMFADJ + 2;
         DCL INPTR PTR,
           INADJ FIXED BIN(31,0) DEF INPTR;
         INPTR = ADDR(INREC);
         INADJ = INADJ + 2;
         DCL 1 CHREC UNALIGNED BASED(SMFPTR),
              2 PAD1 CHAR(2),
              2 TMECH CHAR(4), /* OVERLAYS TIME FIELD */
              2 DTECH CHAR(4), /* OVERLAYS DATE FIELD */
              2 SYSIDCH CHAR(4); /* OVERLAYS SYSID FIELD */
         % INCLUDE SMFHDR;
         % INCLUDE JFCB;
         DCL (INCK,DATACK) CHAR(12);
         DCL (SMFIN,SMFDATA) FILE RECORD INPUT ENV(VBS
           RECSIZE(32760) CONSECUTIVE);
         DCL SMFOUT FILE RECORD OUTPUT ENV(VBS RECSIZE(32760)
           BLKSIZE(13030) CONSECUTIVE);
         DCL (INEOJ,DATAEOJ) BIT(1) STATIC INIT('0'B);
         DCL MONEN FIXED DEC(5,0);
         DCL MONTHEN ENTRY(FIXED DEC(5,0),FIXED BIN(15,0))
           RETURNS(FIXED DEC(5,0));
         DCL GREGJUL ENTRY(CHAR(6))
           RETURNS(FIXED DEC(5,0));
         DCL DDNUM PIC'99';
         DCL DDNAME CHAR(8) EXT;
         DCL (NXFIRST,NXLAST) BIT(1) EXT;
         DCL (INDDN,OTDDN) CHAR(8);
         DCL HINUM PIC'99';
         ON ERROR CALL PLIDUMP('HB');
         NXFIRST = '1'B;
         NXLAST = '0'B;
         HINUM = 0;
         DO WHILE(^NXLAST);
              CALL NEXTDD;
              IF SUBSTR(DDNAME,1,2)='IN'
                THEN IF SUBSTR(DDNAME,5,4) = ''
                  THEN IF VERIFY(SUBSTR(DDNAME,3,2),'0123456789')=0
                    THEN IF SUBSTR(DDNAME,3,2) > HINUM
                      THEN HINUM = SUBSTR(DDNAME,3,2);
              END;
         IF HINUM = 0
              THEN CALL SIGERR(1);
         ON ENDFILE(SMFIN) BEGIN;
              INEOJ = '1'B;
              INPTR->WRITDTE = 99999;
              INPTR->WRITME = 2147483647;
              INPTR->SYSIDCH = '';
              END;
         ON ENDFILE(SMFDATA) BEGIN;
              DATAEOJ = '1'B;
              SMFPTR->WRITDTE = 99999;
              SMFPTR->WRITME = 2147483647;
              SMFPTR->SYSIDCH = '';
              END;
         CALL READDATA;
         DO DDNUM = 1 TO HINUM;
              IF DATAEOJ
                   THEN CALL SIGERR(2);
              INDDN = 'IN'××DDNUM;
              OTDDN = 'OT'××DDNUM;
              OPEN FILE(SMFOUT) TITLE(OTDDN);
              OPEN FILE(SMFIN) TITLE(INDDN);
              INEOJ = '0'B;
              CALL READIN;
              MONEN = SETMON(OTDDN);
              DO UNTIL(INEOJ & SMFPTR->WRITDTE > MONEN);
                   DO WHILE((INCK<DATACK) & (INPTR->WRITDTE<=MONEN));
                        WRITE FILE(SMFOUT) FROM(INREC);
                        CALL READIN;
                        END;
                   DO WHILE((DATACK<INCK) & (SMFPTR->WRITDTE<=MONEN));
                        WRITE FILE(SMFOUT) FROM(SMFREC);
                        CALL READDATA;
                        END;
                   DO WHILE(^INEOJ & ^DATAEOJ & (INCK=DATACK));
                        CALL READIN;
                        END;
                   END;
              IF ^INEOJ
                   THEN CALL SIGERR(3);
              CLOSE FILE(SMFIN);
              CLOSE FILE(SMFOUT);
              END;
         IF ^DATAEOJ
              THEN CALL SIGERR(5);
 READIN:  PROC;
   DO UNTIL REASONABLE(INPTR->WRITDTE);
     READ FILE(SMFIN) INTO(INREC);
     END;
   INCK = INPTR->DTECH××INPTR->TMECH××INPTR->SYSIDCH;
   END READIN;
 READDATA:  PROC;
   DO UNTIL REASONABLE(SMFPTR->WRITDTE);
     READ FILE(SMFDATA) INTO(SMFREC);
     END;
   DATACK = SMFPTR->DTECH××SMFPTR->TMECH××SMFPTR->SYSIDCH;
   END READDATA;
 REASONABLE:  PROC(DTE) RETURNS(BIT(1));
   DCL DTE FIXED DEC(7,0);
   ON ERROR GOTO END_REASONABLE;
   IF (DTE<=99999 & DTE>65001)
     THEN RETURN('1'B);
 END_REASONABLE:
   RETURN('0'B);
   END REASONABLE;

 SETMON:  PROC(DDNAME) RETURNS(FIXED DEC(5,0));
         DCL DDNAME CHAR(8);
         DCL MONTAB(12) CHAR(3) STATIC INIT(
           'JAN','FEB','MAR','APR','MAY','JUN','JUL','AUG','SEP',
           'OCT','NOV','DEC');
         DCL JFCBCOR CHAR(176);
         DCL (I,J) FIXED BIN(15,0);
         DCL MM PIC'99';
         DCL GREGDTE CHAR(6);
         JFCBPTR = ADDR(JFCBCOR);
         CALL SYSJFCB(DDNAME,JFCBPTR);
         I = INDEX(JFCBDSNM,'YEAR');
              /* DSN = U.SD.U000.SMF.YEAR&YY.&MON */
         IF I = 0
              THEN CALL SIGERR(4);
         DO J = 1 TO 12 WHILE(SUBSTR(JFCBDSNM,I+7,3)^=MONTAB(J));
              END;
         IF J > 12
              THEN CALL SIGERR(4);
         MM = J;
         GREGDTE = MM××'01'××SUBSTR(JFCBDSNM,I+4,2);
         RETURN(MONTHEN(GREGJUL(GREGDTE),0));
         END SETMON;
 SIGERR:  PROC(ERRCODE);
         DCL ERRCODE FIXED BIN(15,0);
         DCL MSGTAB(5) CHAR(120) VAR STATIC INIT(
           'NO DDNAMES OF THE FORM IN&DD TO PROCESS',
           'ENDFILE ON SMFDATA WITH MORE IN&DD DDNAMES TO PROCESS',
           'ONE OF THE IN&DD DATA SETS HAS DATA FOR THE WRONG MONTH',
           'ONE OF THE IN&DD DATA SETS HAS INCORRECT DSNAME',
           'ALL IN&DD FILES PROCESSED, BUT DATA LEFT IN SMFDATA');
         PUT EDIT(MSGTAB(ERRCODE))(A) SKIP(1);
         SIGNAL ERROR;
         END SIGERR;
         END;
