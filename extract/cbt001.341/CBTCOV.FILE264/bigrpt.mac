 BIGRPT:  PROC OPTIONS(MAIN);
         DCL 1 REC BASED(RECPTR),
              2 CMDNAME CHAR(8),                              /* 1(8) */
                   /* NAME OF COMMAND */
              2 CMDCNT FIXED BIN(31,0),                       /* 9(4) */
                   /* COUNT OF COMMANDS ISSUED - LIST WILL BE IN
                      DESCENDING SEQUENCE ON THIS FIELD */
              2 CMDSRT FIXED BIN(31,0),                      /* 13(4) */
                   /* AVG SYSTEM RESPONSE TIME IN .01 SEC */
              2 CMDLSTURT FIXED BIN(31,0),                   /* 17(4) */
                   /* AVG USER RESPONSE TIME PRIOR TO COMMAND */
              2 CMDNXTURT FIXED BIN(31,0),                   /* 21(4) */
                   /* AVG USER RESPONSE TIME AFTER COMMAND */
              2 CMDEJST FIXED BIN(31,0),                     /* 25(4) */
                   /* AVG CPU TIME USED */
              2 CMDLIN FIXED BIN(31,0),                      /* 29(4) */
                   /* AVG # LINES TERMINAL INPUT */
              2 CMDLOUT FIXED BIN(31,0),                     /* 33(4) */
                   /* AVG # LINES TERMINAL OUTPUT */
              2 CMDSRV FIXED BIN(31,0),                      /* 37(4) */
                   /* AVG SERVICE UNITS USED */
              2 CMDUID CHAR(8),                              /* 41(8) */
                   /* USERID */
              2 SESSTIME FIXED BIN(31,0),                    /* 49(4) */
                   /* TIME AT WHICH SESSION STARTED */
              2 SESSDATE FIXED DEC(7,0),                     /* 53(4) */
                   /* DATE ON WHICH SESSION STARTED */
              2 SESSTSTP FIXED BIN(31,0),                    /* 57(4) */
                   /* TIME AT WHICH SESSION STOPPED */
              2 SESSDSTP FIXED DEC(7,0),                     /* 61(4) */
                   /* DATE ON WHICH SESSION STOPPED */
              2 TOTSRV FIXED BIN(31,0),                      /* 65(4) */
                   /* TOTAL SERVICE UNITS - FILLED IN BY THIS PROGRAM */
              2 TOTCPU FIXED BIN(31,0),                      /* 69(4) */
                   /* TOTAL CPU - FILLED IN BY THIS PROGRAM */
              2 PAD CHAR(8) INIT('');
         DCL 1 SORTCTL(6) CHAR(80) STATIC INIT(
           ' SORT FIELDS=(9,4,CH,D) ',              /* CMDCNT    9(4) */
           ' SORT FIELDS=(13,4,CH,D) ',             /* CMDSRT   13(4) */
           ' SORT FIELDS=(25,4,CH,D) ',             /* CMDEJST  25(4) */
           ' SORT FIELDS=(37,4,CH,D) ',             /* CMDSRV   37(4) */
           ' SORT FIELDS=(65,4,CH,D) ',             /* TOTSRV   57(4) */
           ' SORT FIELDS=(69,4,CH,D) ');            /* TOTCPU   61(4) */
         DCL HDR(0:6) CHAR(80) VAR STATIC INIT(
           'ORDERED BY COMMAND NAME ',
           'ORDERED BY NUMBER OF EXECUTIONS ',
           'ORDERED BY AVERAGE SYSTEM RESPONSE TIME ',
           'ORDERED BY AVERAGE CPU USAGE ',
           'ORDERED BY AVERAGE SERVICE UNITS USED ',
           'ORDERED BY TOTAL SERVICE UNITS USED ',
           'ORDERED BY TOTAL CPU USAGE ');
         DCL 1 COLHD(0:6) STATIC,
              2 COL FIXED BIN(15,0) INIT(
                8,  /* COMMAND */
                14, /* COUNT */
                23, /* AVGSRT */
                32, /* AVGCPU */
                41, /* AVGSRV */
                53, /* TOTSRV */
                64),/* TOTCPU */
              2 HD(2) CHAR(8) VAR INIT(
                ' ','COMMAND',
                ' ','COUNT',
                'AVG','SRT',
                'AVG','CPU',
                'AVG','SRV',
                'TOT','SRV',
                'TOT','CPU');
         DCL ROMAN ENTRY(FIXED BIN(15,0)) RETURNS(CHAR(15) VAR);
         DCL PAGE FIXED BIN(15,0) STATIC INIT(0);
         DCL ELAPTME ENTRY(FIXED DEC(5,0),FIXED BIN(31,0),
                           FIXED DEC(5,0),FIXED BIN(31,0))
           RETURNS(FIXED BIN(31,0));
         DCL CTOHMC ENTRY(FIXED BIN(31,0)) RETURNS(CHAR(8));
         DCL UCH CHAR(26) STATIC INIT('ABCDEFGHIJKLMNOPQRSTUVWYZ');
         DCL UTME FIXED BIN(31,0) INIT(0),
             USRV FIXED BIN(31,0) INIT(0),
             UCPU FIXED BIN(31,0) INIT(0);
         DCL NAMECTL CHAR(8) INIT('');
         DCL OUTREC CHAR(80);
         DCL NEWPTR PTR;
         DCL RETCODE FIXED BIN(31,0);
         DCL (PLIRETC,PLISRTD,DATE) BUILTIN;
         ON ENDPAGE(SYSPRINT) BEGIN;
           PUT EDIT('TOTAL SESSION TIME AND CPU CYCLES BY USERID')
             (A) PAGE;
           PUT EDIT('          TOTAL     TOTAL')(A) SKIP(2);
           PUT EDIT('          SESSION   CPU          TOTAL  ')
             (A) SKIP(1);
           PUT EDIT('          TIME      TIME         SERVICE')
             (A) SKIP(1);
           PUT EDIT('USERID    HH:MM:SS  HH:MM:SS     UNITS    SESSION T
 IMES')      (A) SKIP(1);
           PUT SKIP(1);
           END;
         SIGNAL ENDPAGE(SYSPRINT);
         NAMECTL = '';
         CALL PLISRTD(' SORT FIELDS=(41,8,CH,A,53,4,CH,A,49,4,CH,A) ',
           ' RECORD TYPE=F,LENGTH=(80) ',
           5000,RETCODE,E15B,E35B);
         IF NAMECTL ^= ''
              THEN CALL PUTRECB;
 ON ENDPAGE(SYSPRINT) BEGIN;
         PAGE = PAGE + 1;
         PUT EDIT('TSO PERFORMANCE MONITORING STATISTICS, DATE = ',
           DATE,' PAGE ',ROMAN(PAGE))(A,A,A,A) PAGE;
         PUT EDIT(HDR(I))(A) SKIP(1);
         DO J = 1 TO 2;
              PUT EDIT((HD(K,J) DO K = 0 TO 6))
                (7 (COL(COL(K)-LENGTH(HD(K,J)))),A) SKIP(1);
              END;
         PUT SKIP(2);
         END;
         I = 0;
         NAMECTL = '';
         SIGNAL ENDPAGE(SYSPRINT);
         CALL PLISRTD(' SORT FIELDS=(1,8,CH,A) ',
           ' RECORD TYPE=F,LENGTH=(80) ',
           5000,RETCODE,E15,E35);
         IF NAMECTL ^= ''
              THEN DO;
                   CALL PUTREC;
                   DO I = 1 TO 6;
                        CLOSE FILE(TMP);
                        SIGNAL ENDPAGE(SYSPRINT);
                        CALL PLISRTD(SORTCTL(I),
                          ' RECORD TYPE=F,LENGTH=(80) ',
                          500,RETCODE,E15A,E35A);
                        END;
                   END;
 E15:  PROC RETURNS(CHAR(80));
         DCL SYNTAB(42) CHAR(8) VAR STATIC INIT(
         'ALLOC','ALLOCATE',
         'ATTR','ATTRIB',
         'DEF','DEFINE',
         'DEL','DELETE',
         'E','EDIT',
         'EX','EXEC',
         'H','HELP',
         'LISTA','LISTALC',
         'LISTB','LISTBC',
         'LISTC','LISTCAT',
         'LISTD','LISTDS',
         'LOAD','LOADGO',
         'OPER','OPERATOR',
         'OUT','OUTPUT',
         'PROF','PROFILE',
         'PROT','PROTECT',
         'REN','RENAME',
         'SE','SEND',
         'SUB','SUBMIT',
         'TERM','TERMINAL',
         'VFY','VERIFY');
         DCL SORTREC CHAR(80);
         RECPTR = ADDR(SORTREC);
         ON ENDFILE(IN) GO TO ENDE15;
         READ FILE(IN) INTO(SORTREC);
         DO N = 1 TO 41 BY 2 UNTIL(SYNTAB(N) = CMDNAME);
              END;
         IF N <= 41
              THEN CMDNAME = SYNTAB(N+1);
         CALL PLIRETC(12);
         RETURN(SORTREC);
 ENDE15:
         CLOSE FILE(IN);
         CALL PLIRETC(8);
         END E15;
 E35:  PROC(SORTSTR);
         DCL SORTSTR CHAR(80);
         NEWPTR = ADDR(SORTSTR);
         RECPTR = ADDR(OUTREC);
         IF NEWPTR->CMDNAME ^= NAMECTL
              THEN DO;
                   IF NAMECTL ^= ''
                        THEN CALL PUTREC;
                   NAMECTL,CMDNAME=NEWPTR->CMDNAME;
                   CMDCNT,CMDSRT,TOTSRV,TOTCPU = 0;
                   END;
         CMDCNT = CMDCNT + NEWPTR->CMDCNT;
         CMDSRT = CMDSRT + NEWPTR->CMDCNT * NEWPTR->CMDSRT;
         TOTCPU = TOTCPU + NEWPTR->CMDCNT * NEWPTR->CMDEJST;
         TOTSRV = TOTSRV + NEWPTR->CMDCNT * NEWPTR->CMDSRV;
         CALL PLIRETC(4);
         END E35;
 PUTREC:  PROC;
         CMDSRT=CMDSRT/CMDCNT;
         CMDEJST=TOTCPU/CMDCNT;
         CMDSRV=TOTSRV/CMDCNT;
         WRITE FILE(TMP) FROM(OUTREC);
         CALL E35A(OUTREC);
         RECPTR = ADDR(OUTREC);
         END PUTREC;
 E15A:  PROC RETURNS(CHAR(80));
         DCL SORTREC CHAR(80);
         ON ENDFILE(TMP) GO TO ENDE15A;
         READ FILE(TMP) INTO(SORTREC);
         CALL PLIRETC(12);
         RETURN(SORTREC);
 ENDE15A:
         CALL PLIRETC(8);
         END E15A;
 E35A:  PROC(SORTSTR);
         DCL SORTSTR CHAR(80);
         RECPTR = ADDR(SORTSTR);
         PUT EDIT(CMDNAME,CMDCNT,CMDSRT,CMDEJST,CMDSRV,TOTSRV,TOTCPU)
           (A, /* CMDNAME */
           COL(COL(1)-5),P'Z,ZZ9', /* CMDCNT */
           COL(COL(2)-7),P'ZZZ9.99', /* CMDSRT */
           COL(COL(3)-7),P'ZZZ9.99', /* CMDEJST */
           COL(COL(4)-7),P'ZZZ,ZZ9', /* CMDSRV */
           COL(COL(5)-10),P'ZZ,ZZZ,ZZ9', /* TOTSRV */
           COL(COL(6)-9),P'ZZ,ZZ9.99') /* TOTCPU */
           SKIP(1);
         CALL PLIRETC(4);
         END E35A;
 E15B:  PROC RETURNS(CHAR(80));
         DCL SORTREC CHAR(80);
         RECPTR = ADDR(SORTREC);
         ON ENDFILE(IN) GO TO ENDE15B;
         READ FILE(IN) INTO(SORTREC);
         CALL PLIRETC(12);
         RETURN(SORTREC);
 ENDE15B:
         CLOSE FILE(IN);
         CALL PLIRETC(8);
         END E15B;
 E35B:  PROC(SORTSTR);
         DCL SORTSTR CHAR(80);
         RECPTR = ADDR(SORTSTR);
         IF CMDUID ^= NAMECTL
              THEN DO;
                   IF NAMECTL ^= ''
                        THEN CALL PUTRECB;
                   NAMECTL=CMDUID;
                   DTECTL,TMECTL,UCPU,USRV,UTME = 0;
                   END;
         IF (SESSDATE ^= DTECTL) × (SESSTIME ^= TMECTL)
              THEN DO;
                   PUT EDIT('FROM ',SUBSTR(CTOHMC(SESSTIME),1,5),
                     ' TO ',SUBSTR(CTOHMC(SESSTSTP),1,5),' ON ',
                     SESSDATE)(COL(45),A,A,A,A,A,P'99999') SKIP(1);
                   UTME=UTME+ELAPTME(SESSDATE,SESSTIME,SESSDSTP,
                     SESSTSTP);
                   DTECTL = SESSDATE;
                   TMECTL = SESSTIME;
                   END;
         UCPU = UCPU + CMDEJST*CMDCNT;
         USRV = USRV + CMDSRV*CMDCNT;
         CALL PLIRETC(4);
         END E35B;
 PUTRECB:  PROC;
         PUT EDIT(NAMECTL,CTOHMC(UTME),CTOHMC(UCPU),USRV)
           (A,COL(11),A,COL(21),A,COL(31),P'ZZ,ZZZ,ZZ9') SKIP(1);
         END PUTRECB;
         END;
