 /* LISTRFM - MVS VERSION OF LISTRF */
         % INCLUDE CPINIT1;
         % @CMP='O';
         % INCLUDE CPINIT2;
         @PROC(0,LEVEL(),RANGE(30#(NUMERIC)),VOL(),ERROR);
         DCL PLIXOPT CHAR(15) VAR INIT('ISA(50K)') STATIC EXT;
         DCL RETCODE FIXED BIN(31,0);
         DCL RETCODC CHAR(4) DEF RETCODE;
         DCL RET BIT(32) DEF RETCODE;
         %INCLUDE CTLGDEF;
         DCL CVOL CHAR(6) INIT('SYSRES');
         DCL AREA CHAR(265);
         CTLGPTR=ADDR(AREA);
         DCL OUTJUL PIC'99999';
         DCL OUTRETCC CHAR(8);
         DCL DTCK1 FIXED BIN(31,0);
         DCL 1 DTCK2 DEF DTCK1 UNALIGNED,
              2 PAD CHAR(1),
              2 DTCK CHAR(3);
         DCL WKAREA CHAR(148);
         DCL 1 WKAREA2 DEF WKAREA,
              2 PAD1 CHAR(9),
              2 CREDT CHAR(3),
              2 PAD2 CHAR(19),
              2 REFDT CHAR(3);
         DCL 1 WKAREA3 DEF WKAREA,
              2 PAD CHAR(31),
              2 YYREF BIT(8),
              2 DDDREF BIT(16);
         DCL DATE BUILTIN;
         DCL DATEIN CHAR(6);
         DATEIN = DATE;
         DCL GREGDTE CHAR(6);
         GREGDTE = SUBSTR(DATEIN,3,4) ×× SUBSTR(DATEIN,1,2);
         DCL (JULIAN,YY,DDD) FIXED DEC(5,0);
         CALL GREGJUL(GREGDTE,JULIAN);
         YY = JULIAN/1000;
         DDD = JULIAN - (YY*1000);
         DDD = DDD - SYMA('&RANGE');
         IF DDD < 1
              THEN DO;
                   YY = YY - 1;
                   DDD = 365 + DDD;
                   END;
         DTCK1 = YY*65536 + DDD;
         DCL LOCPTR PTR;
         LOCPTR = NULL;
         DCL (INDX,DSN) CHAR(44) VARYING;
         DCL TYPE CHAR(1);
         IF LEVEL=0
              THEN INDX=SYMC('&SYSUID')××'.';
              ELSE INDX=SYMC('&LEVEL')××'.';
         CALL LOCDSN(LOCPTR,RETCODE,INDX,DSN,TYPE);
         IF RETCODE ^= 0
              THEN DO;
                   CALL TROUT(RETCODC,OUTRETCC);
                   @SETL(&CTGRET=OUTRETCC);
                   @SETL(&CTGIND=INDX);
        @WRITE('ERROR = &CTGRET FROM CATALOG MGT FOR INDEX = &CTGIND');
                   SIGNAL ERROR;
                   END;
        DO WHILE(LOCPTR^=NULL);
             CALL LOCDSN(LOCPTR,RETCODE,INDX,DSN,TYPE);
             CALL SYSCTLG('NAME',RETCODC,DSN,CVOL,AREA);
             @SETL(&CTGIND=DSN);
             IF RETCODE ^= 0
                  THEN DO;
                       IF ERROR ^= 0
                       THEN DO;
                       CALL TROUT(RETCODC,OUTRETCC);
                       @SETL(&CTGRET=OUTRETCC);
        @WRITE('ERROR = &CTGRET FROM CATALOG MGT FOR INDEX = &CTGIND');
                       END;
                       GO TO ENDLP;
                       END;
              CVOL = SUBSTR(AREA,260,6);
              IF VOL^=0
                   THEN IF VOLID.VOLSER(1)^=SYMC('&VOL')
                        THEN GO TO ENDLP;
              @SETL(&CTGSER=VOLID.VOLSER(1));
              CALL SYSVTOC('SEARCH',RET,DSN,VOLID.VOLSER(1),WKAREA);
              IF RET ^= 0
                   THEN DO;
                        IF ERROR ^= 0
                        THEN DO;
                        CALL TROUT(RETCODC,OUTRETCC);
                        @SETL(&CTGRET=OUTRETCC);
             @WRITE('ERROR = &CTGRET, VOLUME = &CTGSER, DSN = &CTGIND');
                        END;
                        GO TO ENDLP;
                        END;
                   ELSE IF ERROR ^= 0
                        THEN GO TO ENDLP;
              IF REFDT = LOW(3)
                   THEN REFDT = CREDT;
              IF REFDT > DTCK
                   THEN GO TO ENDLP;
              I = YYREF;
              J = DDDREF;
              OUTJUL = I*1000 + J;
              @SETL(&OUTJUL=OUTJUL);
              @SETL(&CTGDSN=DSN);
              @SETL(&CTGSER=VOLID.VOLSER(1));
   @WRITE('VOLSER = &CTGSER, REFERENCE DATE = &OUTJUL, DSN=&CTGDSN');
 ENDLP:
              END;
         END;
