 /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
 /* ABE004 - TOP,T,BOTTOM,BOT,B,UP,DOWN,PF,PB,RENUM,REN,UNNUM,UN,NUM,
    BF,BB,D,HALFF,HALFB SUBCOMMANDS */
   %INCLUDE ABESUB;
 ABESUB(ABE004) PARS(10) CHECK(YES);
   %INCLUDE ABESUBA;
   %INCLUDE ABERHPNL;

   DCL LAST FIXED BIN(31,0) INIT(99999999);
   DCL (T,WRKPTR) PTR;
   DCL CMDLAB(20) LABEL;
   GO TO CMDLAB(CMDINDX);
 CMDLAB(1):  /* ABE004 */
 CMDLAB(2):  /* TOP */
 CMDLAB(3):  /* T */
   WRKPTR=#SUCC(RHHDRPT,RHPTR,RHPTR);
   CALL #NC(RHPTR,WRKPTR); /* CALL NEWCUR */
   PFPB = 'PF';
   RHRC = 0;
   RETURN;
 CMDLAB(4):  /* BOTTOM */
 CMDLAB(5):  /* BOT */
 CMDLAB(6):  /* B */
 CMDLAB(16):  /* BF */
 CMDLAB(17):  /* BF */
   WRKPTR=#PRED(RHHDRPT,RHPTR,RHPTR);
   CALL #NC(RHPTR,WRKPTR); /* CALL NEWCUR */
   PFPB = 'PB';
   IF PARY(1)=''
     THEN I = 1;
     ELSE I = PARY(1);
   J = RHCEN-RHCST;
   IF J=0 THEN J=1;
   I = I*J-1;
   IF RHCST = 1
     THEN I = I + 1;
   IF RHNXT = NULL
     THEN I = I - 1;
     ELSE IF RHNXT->RHCST = 0
       THEN I = I - 1;
   IF HEXMODE
     THEN I=I/2;
   IF RHUSEHD^=NULL
     THEN I=I-1;
   IF I>0
     THEN GO TO UPA;
   RHRC = 0;
   RETURN;
 UP:
 CMDLAB(7):  /* UP */
   IF PARY(1) = ''
     THEN I = 1; /* DEFAULT IS 1 */
     ELSE I = PARY(1);
 UPA:
   WRKPTR=RECPTR;
   DO I = I TO 1 BY -1;
     WRKPTR=#PRED(RHHDRPT,RHPTR,RECPTR);
     IF WRKPTR=HDPTR
       THEN LEAVE;
     RECPTR=WRKPTR;
     END;
   CALL #NC(RHPTR,RECPTR); /* CALL NEWCUR */
   RHRC = 0;
   RETURN;
 DOWN:
 CMDLAB(8):  /* DOWN */
 CMDLAB(18): /* D */
   IF PARY(1) = ''
     THEN I = 1; /* DEFAULT IS 1 */
     ELSE I = PARY(1);
   WRKPTR=RECPTR;
   DO I = I TO 1 BY -1;
     WRKPTR=#SUCC(RHHDRPT,RHPTR,RECPTR);
     IF WRKPTR=HDPTR
       THEN LEAVE;
     RECPTR=WRKPTR;
     END;
   CALL #NC(RHPTR,RECPTR); /* CALL NEWCUR */
   RHRC = 0;
   RETURN;
 CMDLAB(9):  /* PF */
 CMDLAB(19): /* HALFF */
   PFPB = 'PF';
   GO TO PGCOM;
 CMDLAB(10):  /* PB */
 CMDLAB(20):  /* HALFB */
   PFPB = 'PB';
 PGCOM:
   IF PARY(1) = ''
     THEN I = 1;
     ELSE I = PARY(1);
   J=RHCEN-RHCST;
   IF RHCST ^= 1
     THEN J = J - 2;
   IF J<=0 THEN J=1;
   I = I*J;
   IF CMDINDX > 10
     THEN I=I/2; /* HALF PAGES */
   IF HEXMODE
     THEN I=I/2;
   PARY(1) = I;
   IF CMDINDX=10 × CMDINDX=20
     THEN GO TO UP; /* IT IS PB OR HALFB */
     ELSE GO TO DOWN; /* IT IS PF OR HALFF */
 CMDLAB(11):  /* RENUM */
 CMDLAB(12):  /* REN */
   IF PARY(1) ^= ''
     THEN DO;
       SEQSTRT = PARY(1);
       IF SUBSTR(PARY(1),1,1)='+' × SUBSTR(PARY(1),1,1)='-'
         THEN DO; /* IT IS INRECREMENT-TYPE REN */
           HI=0;
           DO T=#SUCC(RHHDRPT,RHPTR,RHPTR)
             REPEAT(#SUCC(RHHDRPT,RHPTR,T))
             WHILE(T^=HDPTR);
             T->RECSEQ=T->RECSEQ+SEQSTRT;
             IF T->RECSEQ>HI
               THEN HI=T->RECSEQ;
             END;
           IF HI>RHPMAXSQ
             THEN DO;
               CALL #ABESQ(RHHDRPT,HI); /* ABESQ */
               CALL #COLTR(RHHDRPT);
               END;
           RHRC=0;
           RETURN;
           END;
       END;
   IF PARY(2) ^= ''
     THEN SEQINCR = PARY(2);
   CALL #RESEQ(RHPTR,RHHDRPT,HDPTR,'NOSAVE','RENUM',LAST);
   RHRC = 0;
   RETURN;
 CMDLAB(13):  /* UNNUM */
 CMDLAB(14):  /* UN */
   RHRC = 0;
   RHNONSW='1'B;
   IF INDDN=NULL
     THEN RETURN;
   SUBSTR(INDDN->ALCFLAG,6,1)='1'B;
   SUBSTR(OUTDDN->ALCFLAG,6,1)='1'B;
   RHRC = 0;
   RETURN;
 CMDLAB(15):  /* NUM */
   RHRC = 0;
   RHNONSW='0'B;
   IF OUTDDN=NULL
     THEN RETURN;
   SUBSTR(OUTDDN->ALCFLAG,6,1)='0'B;
   RETURN;
   END;
