*$.HE GENERALIZED UTILITIES - TSOCLEAN
*$.HE ARCHIVES UNUSED TSO DATA SETS
*$.PL 55
*$.PN 0
*$.PA
*$.SS
*$.NF
*$3/30/76
*$AUTHOR:  T. SMITH
*$SOURCE MODULE NAME:  U0283
*$DOCUMENTATION ID:  *$
*$.FI L
*$.SP 5
*$THIS UTILITY IS USED TO DUMP TO TAPE UNUSED DATA SETS ON A
*$SPECIFIED DISK VOLUME.  FORMAT FOR INVOKING THE UTILITY IS
*$AS FOLLOWS:
*$.SP 1
*$.IN 5
*$.NF
*$// EXEC PGM=TSOCLEAN,REGION=150K,PARM='RANGE,NUMBER'
*$//SYSPRINT DD SYSOUT=A
*$//CLEANRPT DD SYSOUT=A
*$//DISK1 DD UNIT=3330,VOL=SER=OSRTS1,DISP=OLD
*$//TAPE1 DD DSN=U.SD.U000.TSOARCH,DISP=OLD,
*$// VOL=(PRIVATE,RETAIN)
*$//SYSIN DD UNIT=DISK,SPACE=(TRK,(1,1))
*$.SP 1
*$.FI L
*$.IN 0
*$IN THE PARM FIELD ABOVE, REPLACE THE CHARACTER STRING 'RANGE' WITH
*$THE NUMBER OF DAYS THAT A DATA SET HAS BEEN UNREFERENCED IN ORDER TO
*$BE SELECTED FOR DUMPING TO TAPE.  REPLACE THE CHARACTER STRING
*$'NUMBER' WITH THE MAXIMUM NUMBER OF DATA SETS THAT SHOULD BE DUMPED
*$TO TAPE.  IF 'RANGE' IS NOT SPECIFIED, THE DEFAULT IS 30.  IF
*$'NUMBER' IS NOT SPECIFIED, ALL DATA SETS WHICH HAVE NOT BEEN
*$REFERENCED IN THE SPECIFIED RANGE OF DAYS WILL BE DUMPED TO TAPE.
*$.SP 1
*$EACH DATA SET SELECTED IS DUMPED AS A SEPARATE DATA SET ON THE TAPE
*$USING THE FDRDSF UTILITY PROGRAM LEASED FROM INNOVATION DATA
*$PROCESSING CORP.  IF THE DATA SET WAS CATALOGED, THE CATALOG IS
*$CHANGED TO POINT AT THE TAPE.
*$.SP 1
*$A DATA SET MAY BE RETRIEVED FROM THE ARCHIVES TAPE USING
*$FDRDSF.  A TSO COMMAND PROCESSOR CALLED 'RETRIEVE' WILL
*$GENERATE THE NECESSARY JCL AND SUBMIT IT FOR BACKGROUND EXECUTION.
TSOCLEAN CSECT
         SAVES RETCTL
         TGSREQU
         LA    RA,4095(RC)
         USING TSOCLEAN+4095,RA
         EXTRACT TIOTADDR,'S',FIELDS=TIOT
         SR    R1,R1
         L     R2,TIOTADDR             R2 = MY TIOT ADDR
         LA    R3,24                   R3 = INITIAL OFFSET
TIOTLOOP DS    0H
         LA    R2,0(R2,R3)             BUMP TO NXT TIOT ENTRY
         IC    R3,0(R2)                R3 = LEN(THIS ENTRY)
         LTR   R3,R3                   IS IT END TIOT?
         BC    8,ENDTIOT               BR IF YES
         CLC   4(8,R2),=CL8'DISK1'     IS IT DISK DD?
         BC    7,CKARCH                BR IF NOT
         L     R1,16(R2)               R1 = A(UCB)
         B     TIOTLOOP
CKARCH   DS    0H
         CLC   4(8,R2),=CL8'ARCHIVE'   IS IT ARCHIVE DD?
         BC    7,TIOTLOOP              BR IF NOT
         OI    ARCHSW,X'80'            INDICATE ARCHIVE INPUT
         B     TIOTLOOP
ENDTIOT  DS    0H
         LTR   R3,R1                   WAS DISK1 FOUND?
         BC    7,GOTDISK
ABEND1   DS    0H
         LA    R1,1
ABEND    DS    0H
         ABEND (R1),DUMP
GOTDISK  DS    0H
         MVC   VOLSER(6),28(R3)        COPY VOLSER
         SR    R6,R6
         L     R1,16                   R1=A(CVT)
         TM    116(R1),X'01'           IS IT MVS?
         BC    8,MVT                   BR IF NOT
         LH    R5,24(R3)               R5 = TT FROM TTR OF VTOC
         IC    R6,26(R3)               R6 = R FROM TTR OF VTOC
         B     BYMVT
MVT      DS    0H
         LH    R5,36(R3)               R5 = TT FROM TTR OF VTOC
         IC    R6,38(R3)               R6 = R FROM TTR OF VTOC
BYMVT    DS    0H
         DEVTYPE DDNAME,DEVCODE,DEVTAB
         MVC   MYTRKPER+2(2),TRKPRCYL  SAVE TRKS/CYLINDER
         TM    ARCHSW,X'80'            IS THERE AN ARCHIVE DD?
         BC    8,ROK                   BR IF NOT
         OPEN  (ARCHIVE,(INPUT))
ARCHNXT  DS    0H
         GET   ARCHIVE,CTL
         B     DODSCB1
DSCBLOOP DS    0H
         LA    R6,1(R6)                BUMP R
         CH    R6,DSCBPER              IS R AT TOP?
         BC    12,ROK                  BR IF NOT
         LA    R6,1                    RESET R
         LA    R5,1(R5)                BUMP TT
ROK      DS    0H
         LR    R9,R5                   R9 = TT
         SR    R8,R8                   GET SET TO DIVIDE
         D     R8,MYTRKPER             R8 = REMAINDER = HH
*                                      R9 = QUOTIENT = CC
         STH   R9,CC
         STH   R8,HH
         STC   R6,R
         CLC   ENDCCHH(4),CCHHR        ARE WE DONE?
         BC    4,EOJ                   BR IF YES
         OBTAIN DSCBCAM
         LTR   RF,RF                   OBTAIN OK?
         BC    8,DODSCB                BR IF YES
         LA    R1,2
         B     ABEND
DODSCB   DS    0H
         CLI   FMTID,C'1'              IS IT FORMAT 1?
         BC    8,DODSCB1               BR IF YES
         CLI FMTID,C'4'                IS IT FORMAT 4?
         BC    7,DSCBLOOP              BR IF NOT
         MVC   ENDCCHH(4),ECCHH        SAVE ENDING VTOC ADDR
         MVC   DSCBPER+1(1),DEVDT
         B     DSCBLOOP
MYTRKPER DC    F'0'
TIOTADDR DS    F
VOLSER   DS    CL6
DDNAME   DS    0D
         DC    CL8'DISK1'
DEVCODE  DS    F
         DS    F
         DS    H
TRKPRCYL DS    H  # TRKS/CYLINDER
         DS    F
         DS    F
ENDCCHH  DC    4X'FF' WILL BE SET TO END POINT OF VTOC FROM F4 DSCB
DSCBPER  DC    H'127' WILL BE SET TO # DSCBS PER TRACK FROM F4 DSCB
CCHHR    DS    0D
CC       DS    H
HH       DS    H
R        DS    CL1
DSCBCAM  CAMLST SEEK,CCHHR,VOLSER,DSCBAREA
DSCBAREA DS    0D
DSN      DS    CL44
FMTID    DS    CL1
         DS    CL8
CREDT    DS    CL3
EXPDT    DS    CL3
         DS    CL15
DEVDT    DS    CL1  # DSCB/TRK
YYRF     DS    CL1  DATE LAST REFERENCED
DDDRF    DS    CL2
CNTRF    DS    CL2  COUNT OF REFERENCES
         DS    CL31
ECCHH    DS    CL4  END CCHH OF VTOC
         ORG   DSCBAREA
         DS    CL148
         LTORG
DODSCB1  DS    0H
         TM    INITSW,X'80'            IS IT 1ST TIME?
         BC    8,NOTFIRST              BR IF NOT
         NI    INITSW,X'00'
         LOAD  EP=TSOCLN
         ST    R0,TSOCLNA
         TIME
         ST    R1,CURDTE
         ST    R1,DBLETM+4
         CVB   R1,DBLETM
         SR    R0,R0
         LA    RE,1000
         DR    R0,RE                   R0 = DDD IN BINARY
*                                      R1 = YY IN BINARY
         STC   R1,YYCKB                ACCOMMODATE TMS
         STH   R0,DDDCKB               ACCOMMODATE TMS
         TM    ARCHSW,X'80'
         BC    1,SETCOD
         L     RE,4(RD)                GET FSA
         L     RE,24(RE)               RE=A(A(PARMLEN))
         L     RE,0(RE)                RE=A(PARMLEN)
         LH    RF,0(RE)
         SH    RF,=H'1'                GET SET FOR EX
         BC    4,DEFT                  BR IF PARMLEN = 0
         LA    RB,0(RE)                RB = PARM INDEX
         LA    R7,1(RE,RF)             R7=A(LAST PARM CHAR +1)
PARMLP   DS    0H
         CLI   2(RB),C','              IS IT END 1ST NUMBER?
         BC    8,ENDPM1                BR IF YES
         LA    RB,1(RB)                BUMP PARM INDEX
         CR    RB,R7                   IS IT END PARM?
         BC    7,PARMLP                BR IF NOT
ENDPM1   DS    0H
         SR    R7,RB                   R7=#DIGITS IN 2D NUM+1 FOR ,
         SR    RF,R7                   RF=NEW LEN FOR EX
         BC    4,NOPM1                 BR IF 1ST # NOT SPECIFIED
         EX    RF,PACKPRM
         B     SETPM2
NOPM1    DS    0H
         ZAP   DBLETM(8),=PL2'30'      SET DEFAULT SPAN
SETPM2   DS    0H
         SH    R7,=H'2'                R7 = LEN FOR 2D EX
         BC    4,DOCVB                 FR IS 2D # NOT SPECIFIED
         EX    R7,PACKPRM2
         CVB   R7,DBLETM2
         STH   R7,DUMPCTL              SET DUMPCTL
         B     DOCVB
DEFT     DS    0H
         ZAP   DBLETM(8),=PL2'30'
DOCVB    DS    0H
         CVB   RE,DBLETM
YYLUP    DS    0H
         SR    R0,RE                   FIND CUTOFF DATE
         BC    2,SETDEL
         BCTR  R1,0                    DECREMENT YY BY 1
         LPR   RE,R0
         LA    R0,365
         B     YYLUP
SETDEL   DS    0H
         STC   R1,YYCK                 STORE CUTOFF YY
         STH   R0,DDDCK                STORE CUTOFF DDD
         MH    R1,=H'1000'             OFFSET YY
         AR    R1,R0                   R1 = CUTOFF YYDDD IN BINARY
         CVD   R1,DBLETM
         MVC   CUTDTE(4),DBLETM+4
SETCOD   DS    0H
         MVC   SCRVTYP(4),DEVCODE      GET DEVTYPE FOR SCRATCH
         MVC   SCRVSER(6),VOLSER       GET VOLSER FOR SCRATCH
         L     RE,TIOTADDR             RE = A(MYTIOT)
         LA    RF,24                   RF = INITIAL OFFSET
TIOTTAPE DS    0H
         LA    RE,0(RE,RF)             BUMP TO NXT TIOT ENTRY
         IC    RF,0(RE)                RF = LEN(THIS ENTRY)
         LTR   RF,RF                   IS IT END TIOT?
         BC    8,NOTAPE1               BR IF YES
         CLC   4(8,RE),=CL8'TAPE1'     IS IT TAPE1 DD?
         BC    8,GOTTAPE               BR IF YES
         B     TIOTTAPE
GOTTAPE  DS    0H
         OI    TAPESW,X'80'
         RDJFCB TAPEDCB
         MVC   JCLDSN(44),JFCBDSN
*              GDG NAME MUST HAVE THE FOLLOWING BASIC FORMAT WHERE
*              INDEX IS ONE OR MORE QUALIFIERS AND QUALS IS
*              IN THE FORMAT GDDDDV00.
*                   PERIOD #1
*                         PERIOD #2
*                   *     *     FIRST BLANK
*              INDEX.QUAL1.QUAL2
         SR    R0,R0
         LA    RF,JCLDSN               RF=COMPARAND
         LA    RE,1
         LNR   RE,RE                   RE=-1=INCREMENT
         LA    R1,JCLDSN+43            R1=FIRST OPERAND
DSNQLUP  DS    0H
         LTR   R0,R0                   HAS LAST CHAR BEEN FOUND
         BC    7,DSNQGL                BR IF YES
         CLI   0(R1),C' '              IS IT BLANK?
         BC    8,DOBXH                 BR IF YES
         LR    R0,R1                   SAVE A(LAST CHAR)
         B     DOBXH
DSNQGL   DS    0H
         CLI   0(R1),C'.'              IS IT PERIOD #2
         BC    8,DSNQGP                BR IF YES
DOBXH    DS    0H
         BXH   R1,RE,DSNQLUP           GO CHECK NXT CHAR
         B     NOTGDG                  BR IF NOT QUALIFIERS
DSNQGP   DS    0H
         SR    R0,R1
         CH    R0,=H'8'                IS LAST QUAL 8 CHARS?
         BC    7,NOTGDG                BR IF NOT
         ST    R1,GDGA                 SAVE A(PERIOD #2)
         BCTR  R1,0                    BUMP PAST PERIOD #2
DSNQGL2  DS    0H
         CLI   0(R1),C'.'              IS IT PERIOD #1
         BC    8,DSNQGP2               BR IF YES
         BXH   R1,RE,DSNQGL2           GO CHECK NXT CHAR
         B     NOTGDG
DSNQGP2  DS    0H
         L     RE,GDGA                 RE=A(PERIOD #2)
         SR    RE,R1
         SH    RE,=H'2'                RE=LEN(QUAL1)-1 FOR EX
         EX    RE,MVCQUAL              MOVE QUAL1 TO QUAL
         SR    R1,RF                   R1=LEN(INDEX0
         BCTR  R1,0                      LESS 1 FOR EX
         EX    R1,MVCINDEX             MOVE INDEX
         LOCATE LOCCAMG                LOCATE INDEX BLOCK
         LA    R1,31                   SET ABEND CODE
         CH    RF,=H'12'               IS IT PROPER RC?
         BC    7,ABEND                 BR IF NOT
         LA    R1,LOCAREA
         MVC   CVOL(6),259(R1)         SET CVOL
         B     DOBLK
GETBLK   DS    0H
         CLC   8(3,R1),=AL3(0)
         BC    7,SETTTR
         LA    R1,32
         B     ABEND
SETTTR   DS    0H
         MVC   CTLGTTR(3),8(R1)
GETBLKA  DS    0H
         LOCATE BLK
         LA    R1,33
         LTR   RF,RF
         BC    7,ABEND
DOBLK    DS    0H
         LA    R1,LOCAREA+2
DOBLKA   DS    0H
         CLC   0(8,R1),QUAL            IS IT PROPER ENTRY?
         BC    8,GOTCTLGI              BR IF YES
         CLC   0(8,R1),=8X'FF'         IS IT INDEX LINK?
         BC    8,GETBLK                BR IF YES
         SR    RF,RF                   RF = 0
         IC    RF,11(R1)               RF = HCNT
         SLL   RF,1                    *2
         LA    R1,12(RF,R1)
         B     DOBLKA
GOTCTLGI DS    0H
         CLI   11(R1),X'02'            IS IT GDG?
         BC    7,NOTGDG                BR IF NOT
         OI    GDGSW,X'80'             INDICATE A GDG
NOTGDG   DS    0H
         OI    JFCBOPSW,X'80'          SET FLAG TO WRITE JFCB
         DEVTYPE TDDNAME,TAPEWDS       GO GET DEVTYPE
         MVC   VLSTTYP,TAPEWDS
         NI    VLSTTYP+1,X'00'         RESET OPTIONAL BITS
         MVC   VLSTSER,JFCBVOLS
NOTAPE1  DS    0H
         OPEN  (CLEANRPT,(OUTPUT))
         MVC   HDRSER,VOLSER
         ED    HDRDTE1(6),CURDTE+1
         TM    ARCHSW,X'80'            IS IT ARCHIVE?
         BC    8,NOARCH1               BR IF NOT
         LA    R1,29
         TM    TAPESW,X'80'
         BC    8,ABEND
         MVC   HDRDTE2(6),=CL6'NONE'
         MVC   OUTREF(6),=CL6' '
         B     NOTFIRST
NOARCH1  DS    0H
         ED    HDRDTE2(6),CUTDTE+1
NOTFIRST DS    0H
         TM    ARCHSW,X'80'            IS IT ARCHIVE?
         BC    8,NOARCH2               BR IF NOT
         MVC   DSN(44),CTLDSN
         B     REFOKA
NOARCH2  DS    0H
         LA    R1,EXCEPTS
         SR    RF,RF
ILOOP    DS    0H
         CLI   0(R1),X'FF'             IS IT END OF TABLE?
         BC    8,ILOOPE                BR IF YES
         IC    RF,0(R1)                RF = LEN FOR EX
         EX    RF,CLC                  IS THIS DSN EXCEPTED?
         BC    8,DSCBLOOP              BR IF YES
         LA    R1,2(R1,RF)
         B     ILOOP
CLC      CLC   DSN(0),1(R1)
ILOOPE   DS    0H
         CLC   YYRF(3),=3X'00'         HAS DS BEEN USED SINCE CREATED?
         BC    7,REFOK                 BR IF YES
         MVC   YYRF(3),CREDT           ELSE,COMPARE AGAINST CREDT
REFOK    DS    0H
         CLC   YYRF(3),YYCK            WAS DATASET USED SINCE CUTOFF?
         BC    10,DSCBLOOP             BR IF YES
         L     RF,TSOCLNA              RF=A(TSOCLN)
         LA    R1,TSOCPM               R1=A(PARM)
         BALR  RE,RF                   GO CHECK ARCHDEF DATA
         LTR   RF,RF                   IS IT OK WITH USER IF WE
*                                      ARCHIVE HIS DATA SET?
         BC    7,DSCBLOOP              BR IF NOT
REFOKA   DS    0H
         MVC   JFCBDSN(44),DSN         MOVE DSN TO JFCB
         TM    TAPESW,X'80'            IS IS REPORT ONLY?
         BC    8,NOTAPE2               BR IF YES
*                                      JFCB IS NOW UPDATED FOR TAPE
         MVC   CTLDSN(44),DSN
         OPEN  (SYSIN,(OUTPUT))
         PUT   SYSIN,CTL
         CLOSE (SYSIN)
         FREEPOOL SYSIN
ATTACH   DS    0H
         MVC   JFCBXPDT(3),CURDTB      ACCOMMODATE TMS
         CLC   JFCBFLSQ(2),=H'1'       ACCOMMODATE TMS
         BC    7,BYTMS1                ACCOMMODATE TMS
         MVC   JFCBXPDT(3),TMSDT       ACCOMMODATE TMS
BYTMS1   DS    0H                      ACCOMMODATE TMS
         OPEN  (TAPEDCB,(OUTPUT)),TYPE=J
         CLOSE (TAPEDCB,REREAD)
         XC    SUBECB(4),SUBECB
         LA    R1,SUBPARM
         ATTACH EP=FDRDSF,ECB=SUBECB
         ST    R1,SUBTCB
         WAIT  ECB=SUBECB
         DETACH SUBTCB
         CLC   SUBECB(4),=X'40000000'  IS IT GOOD RET FROM FDRDSF?
         BC    8,FDROK
         OI    FDRERR,X'80'
         MVC   OUTERR,=CL3'001'
         BAL   RB,PUTPRI
         TM    ARCHSW,X'80'            IS IT ARCHIVE?
         BC    1,ARCHNXT               BR IF YES
         B     DSCBLOOP
FDROK    DS    0H
         RDJFCB TAPEDCB
         OI    JFCBOPSW,X'80'          SET FLAG TO WRITE JFCB
         CLI   JFCBNVOL,X'01'          HAS IT BUMPED TO A SECOND VOL?
         BC    8,NONEWVL               BR IF NOT
         MVC   JFCBNVOL,X'01'          SET UP TO PROCESS NEW TAPE
         MVC   JFCBVOLS(6),JFCBVOLS+6
         MVC   JFCBVOLS+6(6),=CL6' '
         MVC   JFCBFLSQ(2),=H'1'
         MVC   JFCBVLSQ(2),=H'1'
         LA    RB,ATTACH
         TM    GDGSW,X'80'             IS IT GDG?
         BC    8,ATTACH                BR IF NOT
BUMPGDG  DS    0H
         L     R1,GDGA                 R1=A(PERIOD #2)
         MVC   0(9,R1),=CL9'(+1)'      GET SET TO BUMP GDG
         LOCATE GETNAME
         LA    R1,40                   SET ABEND CODE
         LTR   RF,RF
         BC    7,ABEND                 GR IF CTLG ERROR
         MVC   VLSTSER,JFCBVOLS
         MVC   VLSTDSSQ,=H'1'
         CATALOG CATLG                 CATLG +1 IN GDG
         LA    R1,41                   SET ABEND CODE
         LTR   RF,RF
         BC    7,ABEND                 BR IF CTLG ERROR
         BR    RB
NONEWVL  DS    0H
         MVC   VLSTSER,JFCBVOLS
         MVC   VLSTDSSQ,JFCBFLSQ
NOTAPE2  DS    0H
         LOCATE LOCCAM
         LTR   RF,RF                   GOOD RETURN?
         BC    8,GOODLOC               BR IF OK
         OI    BADLOC,X'80'
         MVC   OUTERR,=CL3'002'
         B     REOK
GOODLOC  DS    0H
         CLC   VOLSER,LOCAREA+6        DOES CATALOG POINT TO THIS VOL?
         BC    8,RECTLG                BR IF YES
         MVC   OUTERR,=CL3'004'
         OI    WRNGCAT,X'80'
         B     REOK
RECTLG   DS    0H
         TM    TAPESW,X'80'            IS IT REPORT ONLY?
         BC    8,NOTAPE3               BR IF YES
         CATALOG RECATLG
         LTR   RF,RF
         BC    8,REOK
         OI    BADCAT,X'80'
         MVC   OUTERR,=CL3'003'
REOK     DS    0H
         TM    TAPESW,X'80'            IS IT REPORT ONLY?
         BC    8,NOTAPE3               BR IF YES
         LH    RE,JFCBFLSQ
         LA    RE,1(RE)
         STH   RE,JFCBFLSQ             BUMP FILE SEQ #
         STH   RE,VLSTDSSQ                   DSN
         MVC   CTLDSN,JCLDSN           RECATALOG
         CATALOG RECATLG
         LTR   RF,RF
         LA    1,16
         BC    7,ABEND
         SR    R0,R0
         SCRATCH SCRATCH
         LTR   RF,RF
         BC    8,SCROK
         MVC   OUTERR,=CL3'005'
         OI    SCRMSG,X'80'
SCROK    DS    0H
NOTAPE3  DS    0H
         BAL   RB,PUTPRI
         TM    TAPESW,X'80'            IS IT REPORT ONLY?
         BC    8,DSCBLOOP              BR IF YES
         TM    ARCHSW,X'80'            IS IT ARCHIVE?
         BC    8,NOARCH3               BR IF NOT
         CLC   VLSTDSSQ(2),=H'1024'
         BC    4,ARCHNXT               BR IF DSSQ LT 1024
         B     EOVPROC
NOARCH3  DS    0H
         LH    R1,DUMPCNT
         LA    R1,1(R1)                BUMP DUMPCNT
         STH   R1,DUMPCNT
         CH    R1,DUMPCTL
         BC    2,EOJ
         CLC   VLSTDSSQ(2),=H'1024'
         BC    4,DSCBLOOP              BR IF DSSQ LT 1024
EOVPROC  DS    0H
         MVC   JFCBDSN(44),JCLDSN      RESTORE ORIGINAL DSN
         OPEN  (TAPEDCB,(OUTPUT)),TYPE=J
         EOV   TAPEDCB
         CLOSE (TAPEDCB,REWIND)
         RDJFCB TAPEDCB
         OI    JFCBOPSW,X'80'
         MVC   JFCBNVOL,X'01'
         MVC   JFCBVOLS(6),JFCBVOLS+6
         MVC   JFCBVOLS+6(6),=CL6' '
         MVC   JFCBFLSQ(2),=H'1'
         MVC   JFCBVLSQ(2),=H'1'
         MVC   VLSTSER,JFCBVOLS
         MVC   VLSTDSSQ,JFCBFLSQ
         TM    ARCHSW,X'80'            IS IT ARCHIVE?
         BC    8,NOARCH5               BR IF NOT
         LA    RB,ARCHNXT
         B     BYRB
NOARCH5  DS    0H
         LA    RB,DSCBLOOP
BYRB     DS    0H
         TM    GDGSW,X'80'             IS IT GDG?
         BC    1,BUMPGDG               BR IF YES
         CATALOG RECATLG
         LTR   RF,RF
         LA    R1,16
         BC    7,ABEND
         BR    RB
ARCHEOD  DS    0H
         CLOSE (ARCHIVE)
EOJ      DS    0H
         LA    R2,ERRTAB
ERRLOOP  DS    0H
         TM    0(R2),X'80'             IS IT HIT OR EOT?
         BC    8,ERRBMP                BR IF NOT
         CLI   0(R2),X'FF'             IS IT END OF TABLE?
         BC    7,PUTERR                BR IF NOT
         CLOSE (CLEANRPT)
         SR    RF,RF
         B     RETCTL
PUTERR   DS    0H
         L     R4,0(R2)                R4 = A(PRINT LINE)
         BAL   RB,PUTPR
ERRBMP   DS    0H
         LA    R2,4(R2)
         B     ERRLOOP
PUTPRI   DS    0H
         TM    ARCHSW,X'80'            IS IT ARCHIVE?
         BC    1,ISARCH1               BR IF YES
         MVC   DBLETM+1(3),YYRF
         L     R1,DBLETM
         LA    R1,0(R1)
         SR    R0,R0
         SLDL  R0,16                   R0 = YY
         SRL   R1,16                   R1=DDD
         MH    R0,=H'1000'
         AR    R1,R0
         CVD   R1,DBLETM
         MVC   OUTREF(6),=X'402020202020'
         ED    OUTREF(6),DBLETM+5
ISARCH1  DS    0H
         MVC   OUTSER,JFCBVOLS
         LH    RE,JFCBFLSQ
         SH    RE,=H'1'
         CVD   RE,DBLETM
         MVC   OUTFLSQ(4),=X'40202020'
         ED    OUTFLSQ(4),DBLETM+6
         MVC   OUTDSN,JFCBDSN
         LA    R4,DTL
* RB = RETURN ADDR, R4 = A(LINE TO PUT)
PUTPR    DS    0H
         CP    LINENO,=P'55'
         BC    4,PUTNXT
         ZAP   LINENO,=P'0'
         PUT   CLEANRPT,HDR1
         PUT   CLEANRPT,HDR2
         TM    TAPESW,X'80'            IS IT REPORT ONLY?
         BC    1,BYHDR2A               BR IF NOT
         PUT   CLEANRPT,HDR2A
BYHDR2A  DS    0H
         PUT   CLEANRPT,HDR3
         PUT   CLEANRPT,HDR4
PUTNXT   DS    0H
         AP    LINENO,=P'1'
         LA    R4,0(R4)
         PUT   CLEANRPT,(R4)
         MVC   OUTERR,=CL3' '
         BR    RB
TSOCLNA  DS    F
TSOCPM   DC    AL1(128),AL3(DSCBADR)
DSCBADR  DC    A(DSCBAREA)
PACKPRM  PACK  DBLETM(8),2(0,RE)
PACKPRM2 PACK  DBLETM2(8),3(0,RB)
ARCHSW   DC    X'00'
ARCHIVE  DCB   DDNAME=ARCHIVE,DSORG=PS,MACRF=(GM),EODAD=ARCHEOD
TAPESW   DC    X'00'
TAPEDCB  DCB   DDNAME=TAPE1,DSORG=PS,MACRF=W,RECFM=V,BLKSIZE=80,       C
               EXLST=EXLST
EXLST    DC    0A(0),X'87',AL3(JFCB)
JFCB     DS    0CL176
JFCBDSN  DS    CL44
         DS    CL24
JFCBFLSQ DC    H'0'
JFCBVLSQ DS    H
         DS    CL4
JFCBOPSW DS    CL1
         DS    CL6
JFCBXPDT DS    CL3
         DS    CL31
JFCBNVOL DS    CL1
JFCBVOLS DC    CL30' '
         DS    CL30
CTL      DS    0CL80
         DC    C' DUMP DSN='
CTLDSN   DS    CL44
         DC    CL26' '
         DS    0F                      ACCOMMODATE TMS
         DS    CL1                     ACCOMMODATE TMS
TMSDT    DC    AL1(99),AL2(364)        ACCOMMODATE TMS
         DS    0F                      ACCOMMODATE TMS
         DS    CL1                     ACCOMMODATE TMS
CURDTB   DS    0CL3                    ACCOMMODATE TMS
YYCKB    DS    CL1                     ACCOMMODATE TMS
DDDCKB   DS    H                       ACCOMMODATE TMS
SYSIN    DCB   DDNAME=SYSIN,DSORG=PS,MACRF=(PM),                       C
               LRECL=80,BLKSIZE=80,RECFM=F
SUBPARM  DC    A(SUBPARM+4),H'0'
SUBTCB   DS    F
SUBECB   DS    F
LOCCAM   CAMLST NAME,DSN,,LOCAREA
TDDNAME  DS    0D
         DC    CL8'TAPE1'
TAPEWDS  DS    2F
VOLLST   DC    H'1'
VLSTTYP  DS    CL4
VLSTSER  DS    CL6
VLSTDSSQ DS    H
SCRATCH  CAMLST SCRATCH,DSN,,SCRVLST,,OVRD
SCRVLST  DC    H'1'
SCRVTYP  DS    CL4
SCRVSER  DS    CL6
         DC    H'0'
RECATLG  CAMLST RECAT,CTLDSN,,VOLLST
INITSW   DC    X'80'
DBLETM   DS    0D
         DC    2F'0'
DBLETM2  DC    2F'0'
DUMPCTL  DC    H'9999'
DUMPCNT  DC    H'0'
CURDTE   DS    F
         DS    0F
         DS    CL1
YYCK     DS    CL1
DDDCK    DS    H
CUTDTE   DS    F
HDR1     DS    0F
         DC    AL2(HDR1END-*)
         DC    AL2(0)
         DC    C'1TSOCLEAN - OBSOLETE DISK DATA SET CLEAN-UP UTILITY'
HDR1END  DS    0C
HDR2     DS    0F
         DC    AL2(HDR2END-*)
         DC    AL2(0)
         DC    C' SER = '
HDRSER   DS    CL6
         DC    C' DATE ='
HDRDTE1  DC    X'402020202020'
         DC    C' CUTOFF DATE ='
HDRDTE2  DC    X'402020202020'
HDR2END  DS    0C
HDR2A    DC    0A(0),AL2(HDR2AEND-*),AL2(0)
         DC    C' REPORT FUNCTION ONLY - NO DATASETS '
         DC    C'WILL BE DUMPED AND SCRATCHED.'
HDR2AEND DS    0C
LINENO   DC    PL2'55'
JCLDSN   DS    CL44
         DS    0H
MVCINDEX MVC   INDEX(0),JCLDSN
MVCQUAL  MVC   QUAL(0),1(R1)
GDGA     DC    F'0' SET TO A(LAST PERIOD IN JCLDSN)
QUAL     DC    CL8' '
INDEX    DC    CL44' '
CVOL     DC    CL6' '
CTLGTTR  DC    AL3(0)
GDGSW    DC    X'00'
LOCCAMG  CAMLST NAME,INDEX,,LOCAREA
BLK      CAMLST BLOCK,CTLGTTR,CVOL,LOCAREA
GETNAME  CAMLST NAME,JCLDSN,,LOCAREA
CATLG    CAMLST CAT,JCLDSN,,VOLLST
EXCEPTS  DC    AL1(L2-*-2),C'SYSCTLG '
L2       DC    AL1(L3-*-2),C'SYS1.SWAP1 '
L3       DC    AL1(L4-*-2),C'SYS1.SWAP2 '
L4       DC    X'FF'
CLEANRPT DCB   DDNAME=CLEANRPT,DSORG=PS,MACRF=(PM),                    C
               LRECL=137,RECFM=VBA,EXLST=PRXITL
PRXITL   DC    0A(0),X'07',AL3(0),X'85',AL3(PRXIT)
PRXIT    DS    0H
         LH    RF,CLEANRPT+62          RF = BLKSIZE
         SH    RF,=H'4'                LESS 4 FOR RDW
         CH    RF,CLEANRPT+82          COMPARE AGAINST LRECL
         BCR   10,RE                   BR IF BIG ENOUGH
         LH    RF,CLEANRPT+82
         LA    RF,4(RF)
         STH   RF,CLEANRPT+62          SET DEFAULT BLKSIZE
         BR    RE
HDR3     DS    0F
         DC    AL2(HDR3END-*),AL2(0)
         DC    C'0ERROR  TAPE   FLSQ  DATE        DSNAME'
HDR3END  DS    0C
HDR4     DS    0F
         DC    AL2(HDR4END-*),AL2(0)
         DC    C' CODE   VOLSER  #    REFERENCED'
HDR4END  DS    0C
DTL      DS    0F
         DC    AL2(DTLEND-*),AL2(0)
         DC    C' '
OUTERR   DC    CL3' '
         DC    CL4' '
OUTSER   DS    CL6
         DC    C' '
OUTFLSQ  DS    CL4
         DC    C' '
OUTREF   DS    CL6
         DC    CL7' '
OUTDSN   DS    CL44
DTLEND   DS    0C
ERRTAB   DS    0F
FDRERR   DC    A(FDRMSG)
BADLOC   DC    A(BLMSG)
BADCAT   DC    A(BCMSG)
WRNGCAT  DC    A(WCATMSG)
BADSCR   DC    A(SCRMSG)
         DC    X'FF'
FDRMSG   DC    0A(0),AL2(FDRMSGE-*),AL2(0),C' ERR=001, '
         DC    C'ERROR FROM FDRDSF WHEN DUMPING DATASET TO TAPE'
FDRMSGE  DS    0C
BLMSG    DC    0A(0),AL2(BLMSGE-*),AL2(0),C' ERR=002, '
         DC    C'UNABLE TO LOCATE DATASET IN CATALOG - WILL STILL BE '
         DC    C'SCRATCHED'
BLMSGE   DS    0C
BCMSG    DC    0A(0),AL2(BCMSGE-*),AL2(0),C' ERR=003, '
         DC    C'UNABLE TO RECATALOG DATASET - WILL STILL BE SCRATCHED'
BCMSGE   DS    0C
WCATMSG  DC    0A(0),AL2(WCATMSGE-*),AL2(0),C' ERR=004, '
         DC    C'CATALOG POINTS TO DIFFERENT VOLUME FOR DATASET.'
         DC    C' WILL STILL BE SCRATCHED.'
WCATMSGE DS    0C
SCRMSG   DC    0A(0),AL2(SCRMSGE-*),AL2(0),C' ERR=005, '
         DC    C'UNABLE TO SCRATCH DATASET FROM DISK'
SCRMSGE  DS    0C
         LTORG
LOCAREA  DS    0D,CL265
         END
