 TO7371: PROC OPTIONS(MAIN);
 /**********************************************************************
 *                                                                     *
 * CALLED AFTER SAS/GRAPH PROCESSING TO READ AND PROCESS FT14F001,     *
 * PRODUCING OUTPUT TO BE DOWNLOADED TO AN IBM PC, WHERE A BASIC       *
 * WILL BE EXECUTED TO PRODUCE OUTPUT ON AN IBM7371 PLOTTER. WHEN      *
 * SAS IS INVOKED, THE FOLLOWING GOPTIONS STATEMENT SHOULD BE USED:    *
 *                                                                     *
 *       GOPTIONS DEVICE=COMPLOT NOCHARACTERS HSIZE=10.2 VSIZE=7.5;    *
 *                                                                     *
 * PRIOR TO INVOKING SAS, THE FOLLOWING ALLOCATION SHOULD BE DONE:     *
 *                                                                     *
 *   ALLOC FI(FT14F001) NEW TR SP(20 20) LR(84) BL(18960) RECFM(V B S) *
 *                                                                     *
 **********************************************************************/
   DCL BUF CHAR(80) VAR INIT('');
   DCL STR CHAR(80) VAR;
   DCL INREC CHAR(256) VAR;
   DCL 1 SYMBREC UNALIGNED BASED(ADDR(INREC)),
     2 PAD FIXED BIN(15,0),
     2 KEY CHAR(4),
     2 XN DEC FLOAT(6),
     2 YN DEC FLOAT(6),
     2 HEIGHT DEC FLOAT(6),
     2 ANGLE DEC FLOAT(6),
     2 NCHAR FIXED BIN(31,0),
     2 INTEXT CHAR(56);
   DCL 1 PLOTREC UNALIGNED BASED(ADDR(INREC)),
     2 PAD CHAR(14),
     2 IPEN FIXED BIN(31,0);
   DCL 1 PLOTREC2 UNALIGNED BASED(ADDR(INREC)),
     2 PAD CHAR(6),
     2 NPEN FIXED BIN(31,0);

   ON ENDFILE(INPUT) GO TO EOFIN;
   OPEN FILE(INPUT) TITLE('FT14F001') RECORD INPUT;
   I=0;
   DO FOREVER=1 REPEAT FOREVER;
     /* FIRST FIND THE START OF NEXT GRAPH */
     DO UNTIL(I=1);
       READ FILE(INPUT) INTO(INREC);
       IF KEY='PLOT'
         THEN IF IPEN>0 & IPEN^=999
           THEN I=1;
       END;
     CALL POUT(''); /* CLEAR POUT BUFFER */
     CALL POUT('IN;SC0,1,0,1;');
     CALL POUT(''); /* CLEAR POUT BUFFER */
     CALL POUT('SP1;');
     CALL POUT(''); /* CLEAR POUT BUFFER */
     DO UNTIL(I=0);
       SELECT(KEY);
         WHEN('PLOT')
           IF IPEN<0 × IPEN=999
             THEN I=0; /* DONE WITH THIS GRAPH */
             ELSE CALL DOPLOT(XN,YN,IPEN);
         WHEN('NEWP') DO;
           PUT STRING(STR) EDIT('SP',NPEN,';')(A,P'9',A);
           CALL POUT(''); /* CLEAR POUT BUFFER */
           CALL POUT(STR);
           CALL POUT(''); /* CLEAR POUT BUFFER */
           END;
         OTHERWISE;
         END; /* SELECT */
       IF I=1
         THEN READ FILE(INPUT) INTO(INREC);
       END;
     CALL POUT('');
     CALL POUT('SP0;');
     CALL POUT('');
     END;
 EOFIN:;
   IF LENGTH(BUF)^=0
     THEN CALL POUT(''); /* CLEAR POUT BUFFER */
   CLOSE FILE(INPUT);

 DOPLOT: PROC(X,Y,PEN);
   DCL (X,Y) DEC FLOAT(6);
   DCL PEN FIXED BIN(31,0);
   DCL STR CHAR(80) VAR;

   SELECT;
     WHEN(IPEN<0 × IPEN=999) /* DONE WITH THIS GRAPH */
       PUT STRING(STR) EDIT('SP0;')(A);
     WHEN(PEN=2) /* IT IS DRAW */
       PUT STRING(STR) EDIT('PD',X/10.2,Y/7.5,';')
         (A,F(8,6),X(1),F(8,6),A);
     OTHERWISE /* ASSUME IT IS MOVE */
       PUT STRING(STR) EDIT('PU',X/10.2,Y/7.5,';')
         (A,F(8,6),X(1),F(8,6),A);
     END; /* SELECT */
   CALL POUT(STR);
   END DOPLOT;

 POUT: PROC(STR);
   DCL STR CHAR(*) VAR;

   IF LENGTH(BUF)>0
     THEN IF LENGTH(BUF)+LENGTH(STR)>80 × LENGTH(STR)=0
       THEN DO;
         WRITE FILE(OUT) FROM(BUF);
         BUF='';
         END;
   BUF=BUF××STR;
   END POUT;

   END TO7371;
