         GBLC  &COMP
&COMP    SETC  '&SYSPARM'
TRIN     CSECT
*$.HE GENERALIZED SUBROUTINES - TRIN
*$.HE TRANSLATE PRINTABLE HEX TO INTERNAL HEX
*$.PL 55
*$.PN 0
*$.PA
*$.SS
*$.NF
*$11/5/75
*$AUTHOR:  T.  SMITH
*$SOURCE MODULE NAME:  TRINS
*$DOCUMENTATION ID:  *$
*$.FI L
*$.SP 5
*$THIS ROUTINE MAY BE USED TO TRANSLATE A STRING
*$OF PRINTABLE CHARACTERS REPRESENTING HEXADECIMAL
*$DIGITS TO INTERNAL FORM (4-BITS PER DIGIT).
*$.SP 1
*$CALL TRIN(INSTR,OUTSTR);
*$.SP 1
*$IN THE ABOVE CALL FORMAT, INSTR IS THE STRING TO BE TRANSLATED, AND
*$OUTSTR IS WHERE THE TRANSLATED STRING IS TO BE STORED.
*UPON ENTRY, THE ROUTINE EXPECTS REG1 TO CONTAIN
*THE ADDR OF TWO CONTIGUOUS FULLWORDS.  THE FIRST
*WORD SHOULD CONTAIN THE ADDR OF A BLOCK OF INFO
*HAVING THE FOLLOWING FORMAT -
         AIF   ('&COMP' EQ 'F').FOPT0
*                   4 BYTES - ALIGNED ON A FULLWORD BOUNDARY AND
*                             CONTAINING THE ADDR OF THE STRING TO
*                             BE TRANSLATED.
*                   4 BYTES - IMMEDIATELY CONTIGUOUS TO THE ADDR
*                             JUST DESCRIBED.  IF THE HI-BIT OF
*                             THE THIRD BYTE IS ON, THEN THE ADDR
*                             JUST DESCRIBED POINTS TO A HALFWORD
*                             CONTAINING THE LENGTH OF THE STRING.
*                             THE HALFWORD IS FOLLOWED BY THE STRING
*                             ITSELF.  IF THE BIT IS OFF, BYTES ONE
*                             AND TWO CONTAIN THE LENGTH OF THE
*                             STRING POINTED TO BY ADDR PREVIOUSLY
*                             DESCRIBED.
*
*              THE SECOND WORD SHOULD CONTAIN THE ADDR OF A BLOCK
*              OF INFO HAVING THE FOLLOWING FORMAT
*                  4 BYTES - ALIGNED ON A FULLWORD BOUNDARY AND
*                            CONTAINING THE ADDR OF THE STRING
*                            WHICH IS TO RECEIVE THE TRANSLATED
*                            HEXADECIMAL DIGITS.
*                  4 BYTES - IMMEDIATELY CONTIGUOUS TO THE ADDR
*                            JUST DESCRIBED.  IF THE HI-BIT OF
*                            THE THIRD BYTE IS ON, THEN THE ADDR
*                            JUST DESCRIBED POINTS TO A HALFWORD
*                            CONTAINING THE LENGTH OF THE STRING.
*                            THE HALFWORD IS FOLLOWED BY THE STRING
*                            ITSELF.  IF THE BIT IS OFF, BYTES ONE
*                            AND TWO CONTAIN THE LENGTH OF THE
*                            STRING POINTED TO BY ADDR PREVIOUSLY
*                            DESCRIBED.
         AGO   .COMCOM
.FOPT0   ANOP
*    4 BYTES - ALIGNED ON A FULLWORD BOUNDARY AND
*              CONTAINING THE ADDR OF THE STRING TO
*              BE TRANSLATED.
*    4 BYTES - IMMEDIATELY CONTIGUOUS TO THE ADDR
*              JUST DESCRIBED.  THE FIRST TWO BYTES
*              ARE IGNORED, BUT THE SECOND TWO
*              SHOULD CONTAIN THE LENGTH OF THE
*              STRING TO BE TRANSLATED.
*
*THE SECOND WORD SHOULD CONTAIN THE ADDR OF A BLOCK
*OF INFO HAVING THE FOLLOWING THE FORMAT -
*    4 BYTES - ALIGNED ON A FULLWORD BOUNDARY AND
*              CONTAINING THE ADDR OF THE STRING
*              WHICH IS TO RECEIVE THE TRANSLATED
*              DIGITS.
*    4 BYTES - IMMEDIATELY CONTIGUOUS TO THE ADDR
*              JUST DESCRIBED.   THE FIRST TWO BYTES
*              ARE IGNORED, BUT THE SECOND TWO
*              SHOULD CONTAIN THE LENGTH OF THE
*              RECEIVING STRING.
*
.COMCOM  ANOP
*$.SP 1
*$NOTE THAT IF THE RECEIVING FIELD IS TOO SHORT
*$TO CONTAIN THE TRANSLATED DIGITS, TRUNCATION WILL
*$OCCUR ON THE RIGHT.  IF THE RECEIVING FIELD IS TOO
*$LONG, THE TRANSLATED DIGITS WILL BE INSERTED
*$LEFT-JUSTIFIED, AND THE FIELD WILL BE PADDED WITH
*$ZEROS.
*$.SP 1
*$NOTE THAT IF THE STRING TO BE TRANSLATED
*$CONTAINS ANY CHARACTERS OTHER THAN 0,1,2,3,4,5,6,7,
*$8,9,A,B,C,D,E,F, THE RESULTS ARE UNPREDICABLE
*$.SP 1
*$NOTE THAT THE STRING TO BE TRANSLATED WILL BE
*$DESTROYED IN THE PROCESS OF TRANSLATION.
*******************************************************************
R0       EQU   0                                                    TGS
R1       EQU   1                                                    TGS
R2       EQU   2                                                    TGS
R3       EQU   3                                                    TGS
R4       EQU   4                                                    TGS
R5       EQU   5                                                    TGS
R6       EQU   6                                                    TGS
R7       EQU   7                                                    TGS
R8       EQU   8                                                    TGS
R9       EQU   9                                                    TGS
RA       EQU   10                                                   TGS
RB       EQU   11                                                   TGS
RC       EQU   12                                                   TGS
RD       EQU   13                                                   TGS
RE       EQU   14                                                   TGS
RF       EQU   15                                                   TGS
         STM   RE,RB,12(RD)            SAVE CALLERS REGS            TGS
         BALR  RA,R0                                                TGS
         USING *,RA                                                 TGS
         AIF   ('&COMP' EQ 'F').FOPT1
         L     R2,0(R0,R1)             REG2 = ADDR SDV IN
         L     R3,0(R0,R2)             REG3 = ADDR IN=STR
         TM    6(R2),X'80'             IS IT VARYING
         BC    8,NOTV1                 BR IF NOT
         LH    R4,0(R3)                R4 = LEN IN-STR
         LA    R3,2(R3)                R3 = A(IN-STR)
         B     NXT1
NOTV1    DS    0H
         LH    R4,4(R2)                R4 =LEN(IN-STR)
NXT1     DS    0H
         L     R2,4(R0,R1)             REG2 = ADDR(SDV-OUT)
         L     R5,0(R0,R2)             REG5 EQ ADDR OUT-STR
         TM    6(R2),X'80'             IS IT VARYING?
         BC    8,NOTV2                 BR IF NOT
         LH    R6,0(R5)                R6 = LEN(OUT-STR)
         LA    R5,2(R5)                R5 = A(OUT-STR)
         B     NXT2
NOTV2    DS    0H
         LH    R6,4(R2)                R6 = LEN(OUT-STR)
NXT2     DS    0H
         AGO   .BYFOPT1
.FOPT1   ANOP
         L     R2,0(R0,R1)             REG2 EQ ADDR SDV IN          TGS
         L     R3,0(R0,R2)             REG3 EQ ADDR IN-STR          TGS
         LH    R4,6(R0,R2)             REG4 EQ LENGTH OF IN-STR     TGS
         L     R2,4(R0,R1)             REG2 EQ ADDR SDV OUT         TGS
         L     R5,0(R0,R2)             REG5 EQ ADDR OUT-STR         TGS
         LH    R6,6(R0,R2)             REG6 EQ LENGTH OF OUT-STR    TGS
.BYFOPT1 ANOP
BEGLOOP  CH    R4,=H'15'               IS IN-STR LEN LEFT LT 15     TGS
         BC    4,SHORTIN               BR IF YES                    TGS
         XC    0(14,R3),=15X'E0'       F-ZONE BECOMES 1-ZONE        TGS
*                                      C-ZONE BECOMES 2-ZONE        TGS
         NC    0(14,R3),=15X'3F'
         CH    R6,=H'8'                IS OUT-STR LEN LEFT LT 8     TGS
         BC    4,SHORTOUT              BR IF YES                    TGS
         TR    0(14,R3),TRANTAB        TRANSLATE IN-STR             TGS
         PACK  0(8,R5),0(15,R3)        PACK INTO OUT-STR            TGS
         SH    R4,=H'14'               DECREMENT IN-STR LEN LEFT    TGS
         SH    R6,=H'7'                DECREMENT OUT-STR LEN LEFT   TGS
         LA    R3,14(R0,R3)            INCREMENT IN-STR ADDR        TGS
         LA    R5,7(R0,R5)             INCREMENT OUT-STR ADDR       TGS
         B     BEGLOOP                                              TGS
SHORTIN  SH    R4,=H'1'                PREPARE FOR EXEC INSTRS      TGS
         EX    R4,XC                   ALTER IN-STR ZONES           TGS
         EX    R4,NC
         EX    R4,TR                   TRANSLATE IN-STR             TGS
         AH    R4,=H'1'                                             TGS
         LR    RB,R6                   REG11 EQ OUT-STR LEN LEFT    TGS
         MH    RB,=H'2'                                             TGS
         CR    R4,RB                   IS IN-STR ACTUALLY TOO SHORT TGS
         BC     2,SHORTOUT             BR IF NOT SHORT              TGS
SHORTINA LH    R8,=H'1'                                             TGS
         AR    R8,R4                   REG8 = L2 + 1                TGS
         SRDA  R8,32(R0)               GET SET FOR DIVIDE           TGS
         D     R8,=F'2'                REG9 EQ L1 = (L2 + 1) / 2    TGS
         SH    R9,=H'1'                                             TGS
         LR    R7,R9                                                TGS
         SLL   R7,4(R0)                                             TGS
         AR    R7,R4                                                TGS
         SH    R7,=H'1'                                             TGS
         LTR   R8,R8                   WAS THERE A REMAINDER        TGS
         BC    8,NOREM                 BR IF NOT                    TGS
         SH    R7,=H'1'                                             TGS
         EX    R7,PACK                                              TGS
         SRL   R7,4(R0)                                             TGS
         AR    R7,R5                   REG7 IS OUT-STR ADDR         TGS
         AR    R3,R4                   REG9 IS IN-STR ADDR          TGS
         SH    R3,=H'1'                                             TGS
         MVN   0(1,R7),0(R3)                                        TGS
         B     PAD                                                  TGS
NOREM    EX    R7,PACK                                              TGS
         SRL   R7,4(R0)                                             TGS
         AR    R7,R5                   REG7 IS OUT-STR ADDR         TGS
         NI    0(R7),X'F0'             START TO PAD                 TGS
PAD      LA    R5,1(R0,R7)             UPDAT OUT-STR ADDR           TGS
         SR    R6,R9                                                TGS
         SH    R6,=H'1'                UPDAT OUT-STR LEN LEFT       TGS
         LTR   R6,R6                                                TGS
         BC    12,ALLDONE                                           TGS
         MVI   0(R5),X'00'             PREPARE TO PAD OUT-STR       TGS
         LA    R7,255                                               TGS
PADLOOP  CH    R6,=H'257'              IS OUT-STR LEN LEFT LT 257   TGS
         BC    4,ENDPAD                BR IF YES                    TGS
         EX    R7,PADMVC                                            TGS
         SH    R6,=H'256'              DECREMENT OUT-STR LEN LEFT   TGS
         LA    R5,256(R0,R5)           INCREMENT OUT-STR ADDR       TGS
         B     PADLOOP                                              TGS
ENDPAD   CH    R5,=H'1'                IS OUT-STR LEN LEFT LE 1     TGS
         BC    12,ALLDONE              BR IF YES                    TGS
         SH    R5,=H'2'                                             TGS
         EX    R5,PADMVC                                            TGS
         B     ALLDONE                                              TGS
SHORTOUT LR    R4,R6                                                TGS
         MH    R4,=H'2'                                             TGS
         B     SHORTINA                                             TGS
ALLDONE  LM    RE,RB,12(RD)            RESTORE REGS                 TGS
         BR    RE                           AND RETURN              TGS
TRANTAB  DC    XL16'00'
         DC    X'00010203040506070809'                              TGS
         DC    XL7'00'
         DC    X'0A0B0C0D0E0F'                                      TGS
NC       NC    0(0,R3),=15X'3F'
XC       XC    0(0,R3),=15X'E0'                                     TGS
TR       TR    0(0,R3),TRANTAB                                      TGS
PACK     PACK  0(0,R5),0(0,R3)                                      TGS
PADMVC   MVC   1(0,R5),0(R5)                                        TGS
         LTORG                                                      TGS
         END
