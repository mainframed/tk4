 SMFEDIT:  PROC OPTIONS(MAIN);
         DFT RANGE(*) FIXED BIN;
         % DCL @IBM FIXED;
              /* @IBM = # VALID IBM SMF RECORD TYPES.   NOTE THAT
                 THE ASSUMPTION IS MADE TAHT IBM WILL ASSIGN
                 NEW SMF RECORD TYPES CONSECUTIVELY. */
         % @IBM = 43;
         % DCL @USER FIXED;
              /* @USER = # VALID USER SMF RECORD TYPES. */
         % @USER = 1;
         % DCL @IBMUSER FIXED;
              /* @IBMUSER = # VALID SMF RECORD TYPES, INCLUDING BOTH
                 BOTH IBM AND USER. */
         % @IBMUSER = @IBM + @USER;
         % DCL @TMETST ENTRY;
 % @TMETST: PROC(OFF,FIELD) RETURNS(CHAR);
         DCL FIELD CHAR, OFF FIXED;
         RETURN('OFFSET=' ×× OFF ××'; IF ' ×× FIELD ×× ' < 0 × ' ××
            FIELD ×× ' > MAXTME THEN SIGNAL ERROR');
         % END @TMETST;
         % DCL @DTETST ENTRY;
 % @DTETST: PROC(OFF,DTE) RETURNS(CHAR);
         DCL DTE CHAR, OFF FIXED;
         RETURN('OFFSET=' ×× OFF ××'; PDCK=' ×× DTE ×× '+1; IF ' ×× DTE
           ×× ' < MINDTE × ' ×× DTE ×× '> MAXDTE THEN SIGNAL ERROR');
         % END @DTETST;
         % DCL @NEGTST ENTRY;
 % @NEGTST: PROC(OFF,FIELD) RETURNS(CHAR);
         DCL FIELD CHAR, OFF FIXED, RETCHAR CHAR;
         IF OFF = -1
              THEN RETCHAR = '';
              ELSE RETCHAR = 'OFFSET =' ×× OFF ×× ';';
         RETCHAR = RETCHAR ××
           'IF ' ×× FIELD ××
           '< 0 THEN SIGNAL ERROR';
         RETURN(RETCHAR);
         % END @NEGTST;
         % DCL @MAXMIN ENTRY;
 % @MAXMIN:  PROC(OFF,FIELD,MAX,MIN) RETURNS(CHAR);
         DCL FIELD CHAR, MAX CHAR, MIN CHAR, OFF FIXED;
         RETURN('OFFSET=' ×× OFF ×× '; IF ' ×× FIELD ×× '<' ×× MIN
           ×× ' × ' ×× FIELD ×× '>' ×× MAX ×× ' THEN SIGNAL ERROR');
         % END @MAXMIN;
         % DCL @GTTST ENTRY;
 % @GTTST:  PROC(OFF,FIELD,COMP) RETURNS(CHAR);
         DCL FIELD CHAR, COMP CHAR, OFF FIXED, RETCHAR CHAR;
         IF OFF = -1
              THEN RETCHAR = '';
              ELSE RETCHAR = 'OFFSET=' ×× OFF ×× ';';
         RETCHAR = RETCHAR ××
           'IF ' ×× FIELD ×× ' > '
           ×× COMP ×× ' THEN SIGNAL ERROR';
         RETURN(RETCHAR);
         % END @GTTST;
         % DCL @LTTST ENTRY;
 % @LTTST:  PROC(OFF,FIELD,COMP) RETURNS(CHAR);
         DCL FIELD CHAR, COMP CHAR, OFF FIXED;
         RETURN('OFFSET=' ×× OFF ×× '; IF ' ×× FIELD ×× ' < '
           ×× COMP ×× ' THEN SIGNAL ERROR');
         % END @LTTST;
         % DCL @ANTST ENTRY;
 % @ANTST:  PROC(OFF,FIELD) RETURNS(CHAR);
         DCL FIELD CHAR, OFF FIXED, RETCHAR CHAR;
         IF OFF = -1
              THEN RETCHAR = '';
              ELSE RETCHAR = 'OFFSET=' ×× OFF ×× ';';
         RETCHAR = RETCHAR ××
           'I=VERIFY(' ×× FIELD ×× ',VERTAB);
           IF I^=0 THEN DO; OFFSET = OFFSET + I;  SIGNAL ERROR; END;';
         RETURN(RETCHAR);
         % END @ANTST;
         DCL VERIFY BUILTIN;
         DCL PLIRETC BUILTIN;
         DCL VERTAB CHAR(64) INIT(' .<(+×&!$*);^-/,%_>?:#@''="ABCDEFGHIJ
 KLMNOPQRSTUVWXYZ0123456789');
         % INCLUDE SMFDEF;
         % INCLUDE SMFDEFT;
         % INCLUDE SMF254H;
         % INCLUDE SMFDEFI;
         ON ENDFILE(SMFDATA) GO TO EOJ;
         DCL SMFOUT FILE RECORD OUTPUT ENV(VBS RECSIZE(6400));
         OPEN FILE(SMFOUT);
         DCL T4PTR PTR,
             T4ADJ FIXED BIN(31,0) DEF T4PTR;
         DCL ACTPTR PTR,
             ACTADJ FIXED BIN(31,0) DEF ACTPTR;
         DCL 1 ACTFLDS BASED(ACTPTR),
              2 MYACTLEN BIT(8),
              2 MYACTFLD CHAR(144);
         DCL RECOUT FIXED BIN(31,0) STATIC INIT(0);
         DCL DATE BUILTIN;
         DCL ROMAN ENTRY(FIXED BIN) RETURNS(CHAR(15) VARYING);
         DCL PAGE FIXED BIN(15,0) STATIC INIT(0);
         DCL (RECIN,ERRCK) FIXED BIN(31,0) STATIC INIT(0);
         DCL (LODTE,HIDTE) FIXED DEC(5,0) STATIC INIT(0);
         LODTE = 99999;
         DCL WRKFLD FIXED BIN(31,0);
 ON ENDPAGE(SYSPRINT) BEGIN;
         PUT PAGE;
         PAGE = PAGE + 1;
         PUT EDIT('PAGE ', ROMAN(PAGE),
           'KIMBERLY CLARK SMF EDIT UTILITY','DATE = ',DATE)
           (A,A,X(10),A,X(10),A,A);
         PUT SKIP(2);
         END;
         OPEN FILE(SYSPRINT) LINESIZE(132);
         SIGNAL ENDPAGE(SYSPRINT);
 ON ERROR BEGIN;
         IF ERRCK = RECIN
              THEN DO;
                   CALL PLIRETC(16);
                   CALL PLIDUMP('SHB');
                   END;
         ERRCK = RECIN;
         REJCNT(ITYPE) = REJCNT(ITYPE) + 1;
         IF REJCNT(ITYPE) < 10
              THEN DO;
                   PUT EDIT('ERROR AT OFFSET ',OFFSET)(A,P'ZZZ9')
                     SKIP(1);
                   PUT SKIP;
                   CALL DUMPSTR(SMFREC);
                   PUT SKIP(2);
                   END;
         GO TO NXT;
         END;
         DCL ACCCNT(0:255) FIXED BIN(31,0) STATIC INIT((256)0);
              /* COUNT OF ACCEPTED RECORDS FOR EACH TYPE */
         DCL REJCNT(0:255) FIXED BIN(31,0) STATIC INIT((256)0);
              /* COUNT OF REJECTED RECORDS FOR EACH TYPE */
         DCL SMFTYPE(0:(@IBMUSER-1)) LABEL;
         % DCL @TYPL FIXED;
         % @TYPL = @IBM;
         DCL 1 USERTYPEA(@USER) STATIC,
              2 UTYPE FIXED BIN(15,0) INIT(254),
              2 UITYPE FIXED BIN(15,0) INIT(@TYPL);
         DCL PDCK FIXED DEC(15,0);
         % DCL @RECL FIXED;
         % @RECL = @IBMUSER-1;
         DCL RECLEN(0:@RECL) FIXED BIN(15,0) STATIC INIT(
              27,  /* TYPE  0 */
              18,  /*       1 */
              14,  /*       2 */
              14,  /*       3 */
              104, /*       4 */
              117, /*       5 */
              57,  /*       6 */
              24,  /*       7 */
              16,  /*       8 */
              16,  /*       9 */
              40,  /*      10 */
              16,  /*      11 */
              18,  /*      12 */
              16,  /*      13 */
              288, /*      14 */
              288, /*      15 */
              0,   /*      16 */
              96,  /*      17 */
              140, /*      18 */
              64,  /*      19 */
              61,  /*      20 */
              44,  /*      21 */
              0,   /*      22 */
              0,   /*      23 */
              0,   /*      24 */
              0,   /*      25 */
              0,   /*      26 */
              0,   /*      27 */
              0,   /*      28 */
              0,   /*      29 */
              81,  /*      30 */
              54,  /*      31 */
              26,  /*      32 */
              16,  /*      33 */
              104, /*      34 */
              117, /*      35 */
              0,   /*      36 */
              0,   /*      37 */
              39,  /*      38 */
              0,   /*      39 */
              62,  /*      40 */
              81,  /*      41 */
              50,  /*      42 */
              0);  /*      43(254) */
         DCL MAXDTE FIXED DEC(5,0) STATIC INIT(80001);
              /* MAXIMUM ACCEPTABLE DATE */
         DCL MINDTE FIXED DEC(5,0) STATIC INIT(69001);
              /* MINIMUM ACCEPTABLE DATE */
         DCL MAXTME FIXED BIN(31,0) STATIC INIT(8640000);
 NXT:
         READ FILE(SMFDATA) INTO(SMFREC);
         RECIN = RECIN + 1;
         ITYPE = TYPE;
         OFFSET = 0;
         IF SMFHDR.RESERVED ^= LOW(1)
              THEN SIGNAL ERROR;
         OFFSET = 1;
         IF ITYPE > @IBM
              THEN DO;
                   DO I = 1 TO @USER WHILE(UTYPE(I) ^= ITYPE);
                        END;
                   IF I > @USER
                        THEN SIGNAL ERROR;
                   ITYPE = UITYPE(I);
                   END;
         @TMETST(2,WRITME);
         @DTETST(6,WRITDTE);
         IF WRITDTE < LODTE
              THEN LODTE = WRITDTE;
         IF WRITDTE > HIDTE
              THEN HIDTE = WRITDTE;
         @ANTST(10,SYSID);
         @ANTST(12,MODELNO);
         L = LENGTH(SMFREC);
         @LTTST(0,L,RECLEN(ITYPE));
         OFFSET = 14;
         GO TO SMFTYPE(ITYPE);
 SMFTYPE(0):
         @MAXMIN(14,JWAITDFT,1440,0);
         @NEGTST(18,SMFBUFSZ);
         @NEGTST(22,CORESIZE);
         GO TO WRITREC;
 SMFTYPE(1):
         @NEGTST(14,SYSWAIT);
         GO TO WRITREC;
 SMFTYPE(4):
 SMFTYPE(5):
 SMFTYPE(34):
 SMFTYPE(35):
         IL = LENGTH(SMFREC);
         SMFREC = SUBSTR(SMFREC,1,IL-28);
         @ANTST(14,SMFT4.JOBNAME);
         @TMETST(22,SMFT4.RDRTME);
         @DTETST(26,SMFT4.RDRDTE);
         @TMETST(39,SMFT4.STARTME);
         IF ITYPE < 34
              THEN DO;
                   @DTETST(43,SMFT4.STARDTE);
                   END;
              ELSE DO;
                   @NEGTST(43,SMFT34.TPUTCNT);
                   END;
         @NEGTST(47,SMFT4.CARDCNT);
         IF ITYPE = 4 × ITYPE = 34
              THEN DO;
                   @ANTST(54,SMFT4.PGMNAME);
                   @ANTST(62,SMFT4.STEPNAME);
                   @NEGTST(70,SMFT4.REGREQH0);
                   @NEGTST(72,SMFT4.REGREQH1);
                   @NEGTST(74,SMFT4.REGUSEH0);
                   T4PTR = SMFPTR;
                   T4ADJ = T4ADJ + SMFT4.DEVLEN + 102;
                   @LTTST(102,L,102+SMFT4.DEVLEN+MORET4.LEN1);
                   OFFSET = 104;
                   IDLEN = SMFT4.DEVLEN;
                   DO I = 1 TO 1000 WHILE(IDLEN > 2);
                        WRKFLD = SMFT4.ACCESSCNT(I);
                        @NEGTST(-1,WRKFLD);
                        OFFSET = OFFSET + 8;
                        IDLEN = IDLEN - 8;
                        END;
                   @NEGTST(-1,MORET4.SCPUTME);
                   OFFSET = OFFSET + 4;
                   ACTLEN = MORET4.LEN2;
                   ACTPTR = ADDR(MORET4.SACCTFLDS);
                   END;
              ELSE DO;
                   @TMETST(54,SMFT5.RDRENDTME);
                   @DTETST(58,SMFT5.RDRENDDTE);
                   @LTTST(92,L,93+SMFT5.LEN1);
                   @ANTST(93,SMFT5.PGMRNAME);
                   @NEGTST(113,SMFT5.JCPUTME);
                   ACTLEN = SMFT5.LEN2;
                   OFFSET = 117;
                   ACTPTR = ADDR(JACCTFLDS);
                   END;
         IF ACTLEN ^= 0
              THEN DO;
                IACT = MYACTLEN;
                IF IACT >= 6
                     THEN SUBSTR(MYACTFLD,3,4)=SUBSTR(MYACTFLD,4,3)××
                       SUBSTR(MYACTFLD,3,1);;
                DO IA = 1 TO ACTLEN;
                   IF MYACTLEN ^= 0
                        THEN DO;
                             @ANTST(-1,SUBSTR(MYACTFLD,1,MYACTLEN));
                             END;
                   ACTADJ = ACTADJ + MYACTLEN + 1;
                   OFFSET = OFFSET + MYACTLEN + 1;
                   END;
              END;
         @GTTST(-1,OFFSET,L);
         GO TO WRITREC;
 SMFTYPE(6):
         @ANTST(14,SMFT6.JOBNAME);
         @TMETST(22,SMFT6.RDRTME);
         @DTETST(26,SMFT6.RDRDTE);
         @TMETST(39,SMFT6.WTRTME);
         @DTETST(43,SMFT6.WTRDTE);
         @NEGTST(47,WTRCNT);
         @ANTST(53,FORMNO);
         GO TO WRITREC;
 SMFTYPE(2):
 SMFTYPE(3):
 SMFTYPE(7):
 SMFTYPE(8):
 SMFTYPE(9):
 SMFTYPE(10):
 SMFTYPE(11):
 SMFTYPE(12):
 SMFTYPE(13):
 SMFTYPE(14):
 SMFTYPE(15):
 SMFTYPE(16):
 SMFTYPE(17):
 SMFTYPE(18):
 SMFTYPE(19):
 SMFTYPE(20): ;
 SMFTYPE(21):
 SMFTYPE(22):
 SMFTYPE(23):
 SMFTYPE(24):
 SMFTYPE(25):
 SMFTYPE(26):
 SMFTYPE(27):
 SMFTYPE(28):
 SMFTYPE(29):
 SMFTYPE(30):
 SMFTYPE(31):
 SMFTYPE(32):
 SMFTYPE(33):
 SMFTYPE(36): ;
 SMFTYPE(37):
 SMFTYPE(38):
 SMFTYPE(39):
 SMFTYPE(40):
 SMFTYPE(41):
 SMFTYPE(42):
 SMFTYPE(43):
         ITYPE = 254;
 WRITREC:
         ACCCNT(ITYPE) = ACCCNT(ITYPE) + 1;
         RECOUT = RECOUT + 1;
         WRITE FILE(SMFOUT) FROM(SMFREC);
         GO TO NXT;
 EOJ:
         PUT PAGE;
         DO I = 0 TO 255;
              IF REJCNT(I) ^= 0 × ACCCNT(I) ^= 0
                   THEN PUT EDIT('RECORD TYPE = ',I,' ACCEPTED = ',
                     ACCCNT(I),' REJECTED = ',REJCNT(I))
                     (A,P'Z,ZZZ,ZZ9',A,P'Z,ZZZ,ZZ9',A,P'Z,ZZZ,ZZ9')
                     SKIP(1);
              END;
         PUT EDIT('TOTAL RECORDS IN = ',RECIN,' TOTAL RECORDS OUT = ',
           RECOUT,' TOTAL RECORDS REJECTED = ',(RECOUT-RECIN))
           (A,P'Z,ZZZ,ZZ9',A,P'Z,ZZZ,ZZ9',A,P'Z,ZZZ,ZZ9') SKIP(2);
         PUT EDIT('LOWEST DATE ENCOUNTERED = ',LODTE)(A,P'99999')
           SKIP(1);
         PUT EDIT('HIGHEST DATE ENCOUNTERED = ',HIDTE)(A,P'99999')
           SKIP(1);
         CALL PLIRETC(0);
         END;
