 /* TIMEDTE
0*$.HE GENERALIZED SUBROUTINES - TIMEDTE
0*$.HE CONVERT SYSTEM TIMESTAMP TO JULIAN DATE
0*$.PL 55
0*$.PN 0
0*$.PA
0*$.SS
0*$.NF
0*$04/27/79
0*$AUTHOR:  R. BABLER
0*$SOURCE MODULE NAME: TIMEDTE
0*$DOCUMENTATION ID:  0*$
0*$.FI L
0*$.SP 5
0*$THIS SUBROUTINE CAN BE INVOKED TO FIND THE JULIAN DATE FROM A
0*$GIVEN SYSTEM TIMESTAMP.  THE CALL FORMAT IS AS FOLLOWS:
0*$.SP 1
0*$.IN 5
0*$.NF
0*$DCL TIMEDTE ENTRY(BIT(64)) RETURNS(FIXED DEC(5,0));
0*$DCL JULIAN  FIXED DEC(5,0);
0*$JULIAN = TIMEDTE(TMESTP);
0*$.SP 1
0*$.FI L
0*$WHERE TMESTP IS THE SYSTEM TIMESTAMP IN BIT FORMAT, AND THE
0*$RETURNED VALUE IS THE JULIAN DATE IN THE FORM YYDDD.
 */
 TIMEDTE:  PROC(JST) RETURNS(FIXED DEC(5,0));
      DCL JST         BIT(64),            /* TIME STAMP         */
          (BINFLOT,I) BIN FLOAT(53),      /* WORK TOTALS        */
          JULIAN      FIXED DEC(5,0),     /* JULIAN RETURN DATE */
          (DAYS,DDD)  FLOAT DEC(15),      /* DAYS AND SAVE DAYS */
          YY          FLOAT DEC(3),       /* YEARS              */
          DATEOFF     ENTRY(FIXED DEC(5,0), FIXED BIN(15,0))
                      RETURNS(FIXED DEC(5,0)), /* DATE OFF ROUT */
          MOD         BUILTIN;            /* BUILTIN FUNCTIONS  */
      BINFLOT = SUBSTR(JST,1,52);
      BINFLOT = (BINFLOT/10000.0) + .5;
      DAYS = BINFLOT/8640000;           /* HUNDREDTHS OF SECS/DAY */
      DO YY = 0 REPEAT YY + 1 UNTIL (DAYS <= 0);
         DDD     = DAYS;
         DAYS    = DAYS - 365;
         IF MOD(YY,4) = 0
              THEN DAYS = DAYS - 1;
      END;
      /* YY = YEAR,  DDD = DAY-OF-YEAR */
      JULIAN = YY * 1000 + DDD;
      JULIAN = DATEOFF(JULIAN,2);    /* 2 DAY ADJUSTMENT FOR DATE */
      RETURN(JULIAN);
  END TIMEDTE;
