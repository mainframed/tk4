 SETTRK:  PROC(PARM) OPTIONS(MAIN);
         DCL PLIXOPT CHAR(15) VAR STATIC EXT INIT('ISA(100K)') ;
         DCL TRACK(512,512) BIT(1) UNALIGNED;
         DCL TRKREC CHAR(4096) DEF TRACK;
         DCL (X,Y,XMAX,YMAX,SINC,YINC,YCORD,XCORD) FIXED BIN(15,0);
         XMAX,YMAX = 512;
         X,Y = 1;
         DCL PARM CHAR(100) VARYING;
         IF PARM = 'FILE'
              THEN DO;
                   READ FILE(TRKFILE) INTO(TRKREC);
                   CLOSE FILE(TRKFILE);
                   END;
              ELSE DO I = 1 TO 3841 BY 256;
                   SUBSTR(TRKREC,I,256) = LOW(256);
                   END;
         DCL INBUF CHAR(1926) VARYING;
         DCL 1 BUFFER UNALIGNED,
              2 STRLEN FIXED BIN(15,0) INIT(1952),
              2 WCC BIT(8) INIT('11110011'B),
                   /*                  11 SPECIFIES 80 CHAR LINE
                                         0 DON'T START PRINTER
                                          0 DON'T SOUND ALARM
                                           1 RESET INPUT INHIBITED
                                            1 RESET MDT BITS
                   */
              2 SBACOD BIT(8) INIT('00010001'B),
              2 SBADDR FIXED BIN(15,0) INIT(0),
              2 LINES(24),
               3 SFC BIT(16) INIT((24)(1)'0001110101000000'B),
                   /*                     1   D   4   0
                                                 0 UNPROTECTED
                                                  0 ALPHAMERIC
                                                   00 DISPLAY NOT PEN D
                                                     0 RESERVED = 0
                                                      0 MDT
                   */
               3 LINE CHAR(79) INIT((24)(79)' '),
              2 SBACOD2 BIT(8) INIT('00010001'B),
              2 SBADDR2 FIXED BIN(15,0) INIT(81),
              2 ICORDER BIT(8) INIT('00010011'B);
                   /* INSERT CURSER ORDER */
                   /*
                        LINE 1 = MESSAGE LINE
                        LINE 2 = COMMAND LINE
                        LINE 3 = COORDINATES
                        LINES 4 - 24 = TRACK DISPLAY
                        */
         DCL OUTBUF CHAR(1952) VARYING BASED(BUFPTR);
         BUFPTR = ADDR(STRLEN);
         DCL AIDCLRB BIT(8) STATIC INIT('01101101'B),
             AIDCLR CHAR(1) DEF AIDCLRB;
                  /* AID = X'6D' MEANS CLEAR KEY */
         DCL SWITCH BIT(8) STATIC INIT('1'B);
         CALL SBACONV(SBADDR,SWITCH);
         CALL SBACONV(SBADDR2,SWITCH);
         DCL RETCODE FIXED BIN(31,0);
         DCL SBACODB BIT(8) INIT('00010001'B),
             SBACODE CHAR(1) DEF SBACODB;
         DCL SBAWRKB FIXED BIN(15,0),
             SBAWRKC CHAR(2) DEF SBAWRKB;
         DCL CMDTAB(8) CHAR(1) INIT('U','D','R','L','E','G','S','C');
         DCL OPLAB(8) LABEL;
         DCL RETLAB LABEL;
         IF PARM = 'FILE'
              THEN GO TO OPLAB(6);
         RETLAB = SETIRET;
         GO TO SETSCR;
 SETIRET:
         RETLAB = SETSCRA;
 PUTNXT:
         DO J = 1 TO 24; /* MAKE SCREEN UNPROT XCEPT LNES 1&3 */
         SFC(J) = '0001110101000000'B ;
         END ;
         SFC(1), SFC(3) = '0001110101100000'B ;
         LINE(1),LINE(2) = ' ';
         SBADDR2 = 81;
         SWITCH = '1'B;
         CALL SBACONV(SBADDR2,SWITCH);
 PUTNXTA:
         XIC = -1;
         PUT STRING(LINE(3)) EDIT('*****  TRACK CREATE  X =', X,
               ', Y =', Y, (42)'*' )
              ( A(24), F(3), A(5), F(3), X(2), A(42) ) ;
         CALL SYSTPUT(OUTBUF,RETCODE,'FULLSCR','WAIT','HOLD');
         IF RETCODE ^= 0
              THEN SIGNAL ERROR;
         CALL SYSTGET(INBUF,RETCODE,'ASIS','WAIT');
         IF RETCODE ^= 0
              THEN SIGNAL ERROR;
 PUTNXTB:
         INBUF = INBUF ×× SBACODE;
         L = LENGTH(INBUF);
         IF L < 7
              THEN GO TO PUTNXT;
         I = 4;
         DO J = 7 TO L;
              IF SUBSTR(INBUF,J,1) = SBACODE
                   THEN DO;
                        SBAWRKC = SUBSTR(INBUF,I+1,2);
                        SWITCH = '0'B;
                        CALL SBACONV(SBAWRKB,SWITCH);
                        K = (SBAWRKB/80) + 1;
                        LINE(K) = SUBSTR(INBUF,I+3,J-(I+3));
                        CALL SETCAPS(LINE(K));
                        I = J;
                        J = J + 3;
                        END;
              END;
         IF XIC = -1
           THEN DO LNO = 24 TO 4 BY -1;
              YCORD = 24-LNO+Y;
              DO LINDX = 1 TO 79 BY 3;
                   XCORD = X+((LINDX-1)/3);
                   IF SUBSTR(LINE(LNO),LINDX,1) = '-'
                        THEN TRACK(YCORD,XCORD) = '1'B;
                        ELSE TRACK(YCORD,XCORD) = '0'B;
                   IF LINDX < 79
                        THEN SUBSTR(LINE(LNO),LINDX+1,2)='  ';
                   END;
              END;
         IF LINE(2) = ' '
              THEN GO TO PUTNXT;
              I = 0;
 ILUP:
              I = I + 1;
              IF I > 79
                   THEN GO TO PUTNXT;
              IF SUBSTR(LINE(2),I,1) = ' '
                   THEN GO TO ILUP;
                        DO J = 1 TO 8 WHILE(SUBSTR(LINE(2),I,1) ^=
                          CMDTAB(J));
                             END;
                        IF J > 8
                             THEN DO;
 BADMSG:
                                  SBADDR2 = I + 78;
                                  SWITCH = '1'B;
                                  CALL SBACONV(SBADDR2,SWITCH);
 BADMSGA:
                                       LINE(1) = 'INVALID COMMAND';
                                  GO TO PUTNXTA;
                                  END;
                        DO I = I+1 TO 79 WHILE(SUBSTR(LINE(2),I,1)
                          = ' ');
                             END;
                        IF I > 79
                             THEN IF J >= 5 & J <= 8
                                  THEN GO TO OPLAB(J);
                                  ELSE GO TO BADMSGA;
                        DO K = I TO 80 WHILE(SUBSTR(LINE(2),K,1)^=' '
                          & SUBSTR(LINE(2),K,1)^=',');
                             IF SUBSTR(LINE(2),K,1)<'0' ×
                                SUBSTR(LINE(2),K,1)>'9'
                                  THEN DO;
                                       I = K;
                                       GO TO BADMSG;
                                       END;
                             END;
                        N = SUBSTR(LINE(2),I,K-I);
                        I = K;
                        GO TO OPLAB(J);
 OPLAB(1):  /* UP */
                        Y = Y + N;
                        IF Y > YMAX
                             THEN Y = YMAX;
                        GO TO SETSCR;
 OPLAB(2):  /* DOWN */
                        Y = Y - N;
                        IF Y < 1
                             THEN Y = 1;
                        GO TO SETSCR;
 OPLAB(3):  /* RIGHT */
                        X = X + N;
                        IF X > XMAX
                             THEN X = XMAX;
                        GO TO SETSCR;
 OPLAB(4): /* LEFT */
                        X = X - N;
                        IF X < 1
                             THEN X = 1;
                        GO TO SETSCR;
 OPLAB(5):  /* END */
                        RETURN;
 OPLAB(7): /* SAVE */
                        WRITE FILE(TRKFILE) FROM(TRKREC);
                        CLOSE FILE(TRKFILE);
                        GO TO SETSCR;
 SETSCR:
                        DO LNO = 24 TO 4 BY -1;
                             YCORD = 24-LNO+Y;
                             DO LINDX = 1 TO 79 BY 3;
                                  XCORD = X+((LINDX-1)/3);
                                  IF TRACK(YCORD,XCORD)
                                       THEN SUBSTR(LINE(LNO),LINDX,1)
                                         = '-';
                                       ELSE SUBSTR(LINE(LNO),LINDX,1)
                                         = ' ';
                                  IF LINDX < 79 THEN
                                    SUBSTR(LINE(LNO),LINDX+1,2)='  ';
                                  END;
                             END;
                        GO TO RETLAB;
 SETSCRA:
                        IF I > 78
                             THEN GO TO PUTNXT;
                        IF SUBSTR(LINE(2),I,1) = ' '
                             THEN GO TO PUTNXT;
                        GO TO ILUP;
         DCL (DISPLAY1,DISPLAY2)(21) CHAR(79);
         DCL (X1,Y1,X2,Y2,XWRK,YWRK,XIC,YIC,X1CAR,Y1CAR,X2CAR,Y2CAR,
           X1DIF,Y1DIF,X2DIF,Y2DIF) FIXED BIN(15,0);
         DCL ICBIN FIXED BIN(15,0),
             ICCHAR CHAR(2) DEF ICBIN;
         DCL CARNO1 CHAR(1) STATIC INIT('1');
         DCL CARNO2 CHAR(1) STATIC INIT('2');
         DCL ( C1WAIT, C2WAIT, XTURN ) FIXED BIN (15) ;
 OPLAB(6):  /* GO */
         LINE(1), LINE(2), LINE(3) = ' ' ;
         DO XWRK = 1 TO 512;
              DO YWRK = 1 TO 512;
                   IF TRACK(YWRK,XWRK)
                        THEN GO TO GOTXY;
                   END;
              END;
 GOTXY:
         XIC,X1,X2 = XWRK;
         YIC,Y1,Y2 = YWRK;
         SBADDR = 0;
         SWITCH = '1'B;
         CALL SBACONV(SBADDR,SWITCH);
         SBADDR2 = 1841;
         CALL SBACONV(SBADDR2,SWITCH);
         Y1CAR,Y2CAR = YIC;
         X1CAR = XIC + 1;
         X2CAR = XIC + 3;
         X1DIF,Y1DIF,X2DIF,Y2DIF = 0;
         C1WAIT, C2WAIT = 0 ;
         XTURN = 1 ;
 OPLAB(8):   /*  CONTINUE  */
         DO J = 1 TO 24 ;     /* MAKE SCREEN ALL PROTECTED */
         SFC(J) = '0001110101100000'B ;
         END ;
         LINE(2) = ' ' ;
         CALL SETDISP(DISPLAY1,X1,Y1);
         CALL SETDISP(DISPLAY2,X2,Y2);
         IF XTURN = 2 THEN GO TO SHWCAR2 ;
 SHOW1:
         XTURN = 1 ;
         CALL SHOW(DISPLAY1,X1CAR,Y1CAR,X1DIF,Y1DIF,X1,Y1,
           X2CAR,Y2CAR,CARNO1,CARNO2,C1WAIT) ;
         IF XIC = 0
              THEN GO TO SHOWEND;
 SHWCAR2:
         XTURN = 2 ;
         CALL SHOW(DISPLAY2,X2CAR,Y2CAR,X2DIF,Y2DIF,X2,Y2,
           X1CAR,Y1CAR,CARNO2,CARNO1,C2WAIT) ;
         IF XIC = 0
              THEN GO TO SHOWEND;
         GO TO SHOW1;
 SHOWEND:
         IF XTURN = 1       /* CURRENTLY CAR 1 TURN? */
           THEN DO ;        /* YES */
             X = X1 ;
             Y = Y1 ;
             END ;
           ELSE DO ;        /* NO, CAR 2 TURN */
             X = X2 ;
             Y = Y2 ;
             END ;
         RETLAB = SHOWRET;
         GO TO SETSCR;
 SHOWRET:
         RETLAB = SETSCRA;
         GO TO PUTNXTB;
 SHOW:  PROC(DISPLAY,XCAR,YCAR,XDIF,YDIF,XN,YN,XCARA,YCARA,CARNO,
         CARNOA,CWAIT) ;
         DCL DISPLAY(21) CHAR(79);
         DCL (XCAR,YCAR,XDIF,YDIF,XN,YN,XCARA,YCARA) FIXED BIN(15,0);
         DCL (CARNO,CARNOA) CHAR(1);
         DCL (XRA,XRB,YRA,YRB,CWAIT,DOTSW) FIXED BIN(15,0);
         DCL CARSW BIT(1);
         IF CWAIT > 0   /* IS THE CAR IN 'CRASH' STATE? */
           THEN DO ;    /* YES */
             CWAIT = CWAIT - 1 ;
             IF CWAIT = 0    /* CAN CAR GO NOW? */
               THEN DO ;     /* YES */
                 XDIF, YDIF = 0 ;  /* START SLOW */
                 LINE(2) = 'CAR ' ×× CARNO ××
   ' READY, YOU MAY PROCEED NOW (WITH CAUTION THIS TIME!)' ;
                 END ;
               ELSE DO ;     /* CAR MUST STILL WAIT */
                 LINE(2) = 'CAR ' ×× CARNOA ××
                   '''S TURN AGAIN, CAR ' ×× CARNO ××
                   ' IS STILL BEING WORKED ON BY THE PIT CREW.' ;
                 RETURN ;
                 END ;
           END ;
 SHOWSTRT:
         DO I = 4 TO 24;
              LINE(I) = DISPLAY(I-3);
              END;
         XRA = XCAR + XDIF;
         XRB = XRA + 1;
         XRA = XRA - 1;
         YRA = YCAR + YDIF;
         YRB = YRA + 1;
         YRA = YRA - 1;
         SBADDR2 = 81;
         DOTSW = 0 ;    /* ASSUME NO PLACE TO GO */
         DO I = YRA TO YRB;
              IF (I >= YN) & (I < YN+21)
                   THEN DO J = XRA TO XRB;
                        IF (J >= XN) & (J < XN+26)
                             THEN DO;
                                  LNO = 24-(I-YN);
                                  LINDX = ((J-XN)*3)+1;
                                  IF SUBSTR(LINE(LNO),LINDX,1) = '-'
                                    THEN DO ;
                                       SUBSTR(LINE(LNO),LINDX,1)
                                         = '.';
                                       DOTSW = 1 ;
                                       END ;
                                    ELSE SUBSTR(LINE(LNO),LINDX,1)
                                         = '+' ;
                                  END;
                        END;
              END;
         IF DOTSW = 0    /* ANYPLACE FOR THE CAR TO GO? */
           THEN DO ;     /* NO */
             LINE(2) = 'C-R-A-S-H !!!!   CAR ' ×× CARNO ××
      ' WIPES OUT AND IS TEMPORARILY DISABLED, ' ××
      'CAR ' ×× CARNOA ×× '''S TURN!!' ;
             CWAIT = 2 ;    /* MAKE HIM WAIT 2 TURNS */
             RETURN ;
             END ;
         IF (YCAR >= YN) & (YCAR < YN+21)
              THEN IF (XCAR >= XN) & (XCAR < XN+26)
                   THEN DO;
                        LNO = 24-(YCAR-YN);
                        LINDX = ((XCAR-XN)*3)+1;
                        IF SUBSTR(LINE(LNO),LINDX,1) = '.'
                             THEN CARSW = '1'B;
                             ELSE CARSW = '0'B;
                        SUBSTR(LINE(LNO),LINDX,1) = CARNO;
                        SBADDR2 = ((LNO-1)*80)+LINDX;
                        SWITCH = '1'B;
                        CALL SBACONV(SBADDR2,SWITCH);
                        END;
         IF (YCARA >= YN) & (YCARA < YN+21)
              THEN IF (XCARA >= XN) & (XCARA < XN+26)
                   THEN DO;
                        LNO = 24-(YCARA-YN);
                        LINDX = ((XCARA-XN)*3)+1;
                        SUBSTR(LINE(LNO),LINDX,1) = CARNOA;
                        END;
 PUTSCR:
         LINE(1) = 'TURN: CAR ' ×× CARNO ×× (20)' ' ××
             'R A C E T R A C K' ;
         LINE(3) = (79)'*' ;
         CALL SYSTPUT(OUTBUF,RETCODE,'FULLSCR','WAIT','HOLD');
         IF RETCODE ^= 0
              THEN SIGNAL ERROR;
         LINE(2) = ' ' ;
         CALL SYSTGET(INBUF,RETCODE,'ASIS','WAIT');
         IF RETCODE ^= 0
              THEN GO TO PUTSCR;
         L = LENGTH(INBUF);
         XIC = 0;
         IF L ^= 3
              THEN RETURN;
         IF SUBSTR(INBUF,1,1) = AIDCLR
              THEN GO TO PUTSCR;
         CALL CONVIC(XN,YN);
         IF XIC = 0
              THEN GO TO PUTSCR;
         LNO = 24-(YIC-YN);
         LINDX = ((XIC-XN)*3)+1;
         IF SUBSTR(LINE(LNO),LINDX,1) = '.' × (CARSW = '1'B &
           SUBSTR(LINE(LNO),LINDX,1) = CARNO)
              THEN DO;
                   XDIF = XIC - XCAR;
                   YDIF = YIC - YCAR;
                   XCAR = XIC;
                   YCAR = YIC;
                   RETURN;
                   END;
         XN = XN + (XCAR - XIC);
         IF XN < 1
              THEN XN = 1;
              ELSE IF XN > (XMAX-26)
                   THEN XN = (XMAX-26);
         YN = YN + (YCAR - YIC);
         IF YN < 1
              THEN YN = 1;
              ELSE IF YN > (YMAX-21)
                   THEN YN = (YMAX-21);
         CALL SETDISP(DISPLAY,XN,YN);
         GO TO SHOWSTRT;
         END;
 CONVIC:  PROC(XN,YN);
         DCL (XN,YN) FIXED BIN(15,0);
         ICCHAR = SUBSTR(INBUF,2,2);
         SWITCH = '0'B;
         CALL SBACONV(ICBIN,SWITCH);
         XIC = 0;
         IF ICBIN < 241
              THEN RETURN;
         YIC = ICBIN/80;
         YIC = (23-YIC)+YN; /* YIC = Y COORDINATE OF CURSOR */
         XIC = MOD(ICBIN,80);
         IF XIC = 0
              THEN RETURN;
         XIC = XIC - 1;
         XIC = (XIC/4)+1;
         XIC = XIC+XN-1; /* XIC = X COORDINATE OF CURSOR */
         END;
 SETDISP:  PROC(DISPLAY,XN,YN);
         DCL DISPLAY(21) CHAR(79);
         DCL (XN,YN) FIXED BIN(15,0);
         DO LNO = 21 TO 1 BY -1;
              YCORD = 21-LNO+YN;
              DO LINDX = 1 TO 79 BY 3;
                   XCORD = XN+((LINDX-1)/3);
                   IF TRACK(YCORD,XCORD)
                        THEN SUBSTR(DISPLAY(LNO),LINDX,1) = '-';
                        ELSE SUBSTR(DISPLAY(LNO),LINDX,1) = ' ';
                   IF LINDX < 79 THEN
                      SUBSTR(DISPLAY(LNO),LINDX+1,2) = '  ';
                   END;
              END;
         END;
         END;
