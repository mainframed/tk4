 /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
 /* DENT030 - AID,?,??,$,$$ */
         % DCL @PROCNAME CHAR;
         % DCL @RENTNAME CHAR;
         % @PROCNAME = 'RENT';
         % @RENTNAME = 'DENT030';
         % INCLUDE DENTSUB;
         DCL 1 AIDATA UNALIGNED BASED(AIDPTR),
           2 RHDCBPT PTR,
             /* PTR TO BPAM DCB FOR SYSAID OR NULL */
           2 RHAIDHD,
            3 NXTHDA PTR,
             /* PTR TO FIRST RECORD ON AID CHAIN OR ADDR(RHAIDHD) */
            3 LSTHDA PTR,
             /* PTR TO LAST RECORD ON AID CHAIN OR ADDR(RHAIDHD) */
            3 HDSEQ FIXED BIN(31,0),
             /* WORK FIELD */
           2 MEMNAM CHAR(8),
             /* CURRENT AID MEMBER ON AID CHAIN OR BLANK */
           2 RPTR PTR,
             /* PTR TO CURRENT TEXT RECORD */
           2 LABI FIXED BIN(31,0),
             /* INDEX TO THE HIGHEST ELEMENT USED IN RHAIDLBT */
           2 LABTAB(256),
            3 $KEY FIXED BIN(31,0),
            3 $LAB CHAR(8);
         DCL (SYSCLOS,SETCAPS) ENTRY;
         DCL SEQCNT FIXED BIN(15,0) STATIC INIT(8);
         DCL I FIXED BIN(15,0);
         DCL CTLSW BIT(1) INIT('0'B);
         DCL TPTR PTR;
         DCL 1 MEMREC UNALIGNED BASED(RPTR),
           2 NXTPTA PTR,
           2 LSTPTA PTR,
           2 RECSEA FIXED BIN(31,0),
           2 RECSTA CHAR(256) VAR;
         CALL SUBENT(31)(AIDPTR);  /* CALL DENTAID */
         IF CMDINDX=4 × CMDINDX=6 /* IS IT ?? */
           THEN DO;
             IF MEMNAM=''
               THEN DO;
                 MSGDATA='THERE IS NO CURRENT AID TEXT';
                 RHRC = 4;
                 RETURN;
                 END;
             KEY = RECSEA-1;
             END;
           ELSE DO;
             KEY,LABI = 0;
             IF PARY(2)=''
               THEN PARY(2)='GENERAL';
               ELSE CALL SETCAPS(PARY(2));
             IF MEMNAM^=PARY(2)
               THEN DO;
                 DO RPTR=NXTHDA REPEAT TPTR WHILE(RPTR^=ADDR(RHAIDHD));
                   TPTR = NXTPTA;
                   FREE MEMREC;
                   END;
                 MEMNAM=PARY(2);
                 NXTHDA,LSTHDA = ADDR(RHAIDHD);
                 RPTR = ADDR(RHAIDHD);
                 CALL SUBENT(32)(RHDCBPT,MEMNAM,ALCEP,I,SEQCNT);
                   /* CALL DENTPIB */
                 IF I^=0
                   THEN DO;
                     IF I=4
                       THEN MSGDATA='AID FOR '××PARY(2)××' NOT FOUND';
                       ELSE MSGDATA='SYSAID FILE INVALID OR MISSING';
                     RHRC = I;
                     RETURN;
                     END;
                 END;
             END;
         CALL #CRTZAP(RHPPTR); /* CALL CRTZAPS - CLEAR SCREEN */
         CALL SUBENT(33)(GET,SUBENT(29),SUBENT(30),DOCMD,
           SUBENT(24),SUBENT(28),STAK,KEY,LABI,LABTAB,CTLSW,SUBENT(7),
           RHHDRPT,SUBENT,RHPTR); /* CALL DENTPI */
 DOCMD:  PROC(TEMP,HELPSTR);
         DCL (TEMP,HELPSTR) CHAR(*) VAR;
         DCL I FIXED BIN(31,0);
         I=#CMD(TEMP,RHPTR,SUBENT,RHHDRPT);
         END DOCMD;
 ALCEP:  PROC(INREC);
         DCL INREC CHAR(256) VAR;
         ALLOCATE MEMREC SET(TPTR);
         NXTPTA = TPTR;
         TPTR->LSTPTA = RPTR;
         RPTR = TPTR;
         NXTPTA = ADDR(RHAIDHD);
         RECSEA = LSTPTA->RECSEA+1;
         RECSTA = INREC;
         END ALCEP;
 GET:  PROC(KEY,TXT);
         DCL KEY FIXED BIN(31,0);
         DCL TXT CHAR(*) VAR;
         IF KEY^=RECSEA
           THEN IF KEY < RECSEA
             THEN DO RPTR=LSTPTA REPEAT LSTPTA
               WHILE(RPTR^=ADDR(RHAIDHD))
               UNTIL(RECSEA=KEY);
               END;
             ELSE DO RPTR=NXTPTA REPEAT NXTPTA
               WHILE(RPTR^=ADDR(RHAIDHD))
               UNTIL(RECSEA=KEY);
               END;
         IF RPTR=ADDR(RHAIDHD)
           THEN TXT='';
           ELSE TXT=RECSTA;
         END GET;
 STAK: PROC(TEMP);
         DCL TEMP CHAR(*) VAR;
         IF ^LOFLAG
           THEN CALL SETCAPS(TEMP);
         DCL L FIXED BIN(15,0);
         DCL 1 BLSTR BASED(BLPTR),
           2 NBLPTR PTR,
           2 BLCMDLEN FIXED BIN(15,0),
           2 BLCMD CHAR(L REFER(BLCMDLEN)) VAR;
         L=LENGTH(TEMP);
         ALLOCATE BLSTR;
         NBLPTR = BLHDR;
         BLHDR = BLPTR;
         BLCMD = TEMP;
         END STAK;
         RHRC = 0;
         END;
