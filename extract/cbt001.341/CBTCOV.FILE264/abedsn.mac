 /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
 /**********************************************************************
 *                                                                     *
 * ABEDSN IS CALLED TO SET THE COMMAND LINE TO CONTAIN THE CURRENT     *
 * OUTPUT DSNAME AND SYMBOLIC NAME ASSOCIATED WITH THIS DATA SET.      *
 *                                                                     *
 **********************************************************************/
   %INCLUDE ABESUB;
 ABESUB(ABEDSN) PARMS(RHPTR,RHHDRPT,DATA,LEN);
   %INCLUDE ABESUBA;
   %INCLUDE APLCB;
   % INCLUDE @HEXCHAR;
   DCL LOW BUILTIN;
   DCL (PREFIX,SUFFIX) ENTRY(CHAR(*),CHAR(*))
     RETURNS(FIXED BIN(15,0));
   DCL MYDATA CHAR(132) VAR;
   DCL DATA CHAR(*) VAR;
   DCL LEN FIXED BIN(15,0) UNALIGNED; /* MAX LENGTH FOR DATA */
   DCL SEP CHAR(1) INIT('x');

   MYDATA=@HEXCHAR(6A);
   IF RHNAME^='====>'
     THEN MYDATA=MYDATA××SUBSTR(RHNAME,1,SUFFIX(RHNAME,' '));
   MYDATA=MYDATA××@HEXCHAR(6A);
   IF OUTDDN^=NULL
     THEN DO;
       MYDATA=MYDATA××OUTDDN->ALCDSN;
       IF OUTDDN->ALCMEM^=''
         THEN MYDATA=MYDATA××'('××SUBSTR(OUTDDN->ALCMEM,1,
           SUFFIX(OUTDDN->ALCMEM,' '))××')';
       END;
   MYDATA=MYDATA××@HEXCHAR(6A);
   IF RH_APL=NULL
     THEN MYDATA=MYDATA××BARENUM(RHCOUNT)××'X'××BARENUM(BUFPTR->BUFLN)××
       '.1';
     ELSE DO;
       IF ^RH_APL_SCALAR
         THEN DO;
           IF RH_APL_DEMARC=0
             THEN MYDATA=MYDATA××'X';
           DO I=1 TO RH_APL_RANK;
             MYDATA=MYDATA××BARENUM(RH_APL_DIM(I));
             IF I<RH_APL_RANK
               THEN IF I=RH_APL_DEMARC
                 THEN MYDATA=MYDATA××'X';
                 ELSE MYDATA=MYDATA××SEP;
             END;
           END;
       MYDATA=MYDATA××'.'××BARENUM(RH_APL_ELEN);
       END;
   L=LENGTH(MYDATA);
   I=LENGTH(DATA);
   IF L<=LEN-I
     THEN DATA=DATA××LOW(LEN-I-L)××MYDATA;

 BARENUM: PROC(PRM) RETURNS(CHAR(20) VAR);
 /**********************************************************************
 *                                                                     *
 * CALLED TO CONVERT FIXED BIN TO CHAR, STRIPPING NONESSENTIAL BLANKS. *
 *                                                                     *
 **********************************************************************/
   DCL PRM FIXED BIN;
   DCL PIC PIC'ZZZZZZZZZZZZZZ9';
   DCL RET CHAR(20) VAR;

   PIC=PRM;
   RET=SUBSTR(PIC,PREFIX(PIC,' '));
   RET=SUBSTR(RET,1,SUFFIX(RET,' '));
   RETURN(RET);
   END BARENUM;

   END ABEDSN;
