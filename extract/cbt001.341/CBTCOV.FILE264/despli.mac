 /* DES - DATA ENCRYPTION STANDARD */
 /*
0*$.HE GENERALIZED SUBROUTINES - DES
0*$.HE DATA ENCRYPTION
0*$.PL 55
0*$.PN 0
0*$.PA
0*$.SS
0*$.NF
0*$07/26/83
0*$AUTHOR:  T. SMITH
0*$SOURCE MODULE NAME:  DES
0*$DOCUMENTATION ID:  0*$
0*$.FI L
0*$.SP 5
0*$THIS IS AN IMPLEMENTATION OF THE DATA ENCRYPTION STANDARD (DES)
0*$ISSUED BY THE NATIONAL BUREAU OF STANDARDS.  DES IS DOCUMENTED IN
0*$FEDERAL INFORMATION PROCESSING STANDARDS PUBLICATION 46, PUBLISHED
0*$15 JANUARY, 1977.
0*$.SP 1
0*$CALL FORMAT IS AS FOLLOWS:
0*$.SP 1
0*$DCL DES ENTRY(CHAR(8),CHAR(8),CHAR(5)) RETURNS(CHAR(8));
0*$.IN 0
0*$DCL (DATA,KEY,ENCRYPT,DECRYPT) CHAR(8);
0*$.IN 0
0*$GET DATA(DATA,KEY);
0*$.IN 0
0*$*** FOLLOWING STATEMENT ENCODES DATA
0*$.IN 0
0*$ENCRYPT=DES(DATA,KEY,'NCODE');
0*$.IN 0
0*$*** FOLLOWING STATEMENT DECODES DATA
0*$.IN 0
0*$DECRYPT=DES(ENCRYPT,KEY,'DCODE');
 */
 DES: PROC(DATA,PKEY,CODE) RETURNS(CHAR(8)) OPTIONS(REENTRANT);
   DCL NULL BUILTIN;
   DCL DATA CHAR(8),
       INPUTB BIT(64) DEF DATA;
   DCL INPUT CHAR(64);
   DCL PKEY CHAR(8),
       KEYB BIT(64) DEF PKEY;
   DCL KEY CHAR(64),
       KEYARY(64) CHAR(1) DEF KEY;
   DCL CODE CHAR(5); /* 'NCODE' OR 'DCODE' */
   DCL PIB CHAR(64), /* PERMUTATED INPUT BLOCK */
       L CHAR(32) DEF PIB,
       R CHAR(32) DEF PIB POS(33);
   DCL CD CHAR(56);
   DCL N FIXED BIN(15,0);
   DCL K CHAR(48),
       KARY(48) CHAR(1) DEF K;
   DCL RET CHAR(8),
       RETB BIT(64) DEF RET;
   DCL STACK PTR;
   DCL 1 STEL BASED(STELP),
     2 STELNXT PTR,
     2 STELK CHAR(48);

   INPUT=INPUTB;
   KEY=KEYB;
   STACK=NULL;
   PIB=IP(INPUT); /* INITIAL PERMUTATION */
   CD=PC_1; /* GET PERMUTED CHOICE 1 FOR KEY */
   IF CODE='DCODE'
     THEN DO N=1 TO 16;
       CALL PUSH(KS(N,CD));
       END;
   DO N=1 TO 16;
     IF CODE='NCODE'
       THEN K=KS(N,CD); /* GET KEY FOR THIS ITERATION */
       ELSE K=POP;
     PIB=R××MYBOOL(L,F(R,K),'0110');
     END;
   RETB=IP_1(R××L);
   RETURN(RET);

 E: PROC(P) RETURNS(CHAR(48));
   DCL P CHAR(32),
       PARY(32) CHAR(1) DEF P;
   DCL EBS(48) FIXED BIN(15,0) STATIC INIT(
     32,01,02,03,04,05,
     04,05,06,07,08,09,
     08,09,10,11,12,13,
     12,13,14,15,16,17,
     16,17,18,19,20,21,
     20,21,22,23,24,25,
     24,25,26,27,28,29,
     28,29,30,31,32,01);
   DCL R CHAR(48),
       RARY(48) CHAR(1) DEF R;
   DCL I FIXED BIN(15,0);
   DO I=1 TO 48;
     RARY(I)=PARY(EBS(I));
     END;
   RETURN(R);
   END E;

 F: PROC(R,K) RETURNS(CHAR(32));
   DCL R CHAR(32);
   DCL K CHAR(48);
   DCL M CHAR(48),
       MARY(8) CHAR(6) DEF M;
   DCL RET CHAR(32),
       RETARY(8) CHAR(4) DEF RET;
   DCL N FIXED BIN(15,0);
   M=MYBOOL(K,E(R),'0110');
   DO I=1 TO 8;
     RETARY(I)=S(I,MARY(I));
     END;
   RETURN(P(RET));
   END F;

 IP: PROC(P) RETURNS(CHAR(64));
   DCL P CHAR(64),
       PARY(64) CHAR(1) DEF P;
   DCL EBS(64) FIXED BIN(15,0) STATIC INIT(
     58,50,42,34,26,18,10,02,
     60,52,44,36,28,20,12,04,
     62,54,46,38,30,22,14,06,
     64,56,48,40,32,24,16,08,
     57,49,41,33,25,17,09,01,
     59,51,43,35,27,19,11,03,
     61,53,45,37,29,21,13,05,
     63,55,47,39,31,23,15,07);
   DCL R CHAR(64),
       RARY(64) CHAR(1) DEF R;
   DCL I FIXED BIN(15,0);
   DO I=1 TO 64;
     RARY(I)=PARY(EBS(I));
     END;
   RETURN(R);
   END IP;

 IP_1: PROC(P) RETURNS(CHAR(64));
   DCL P CHAR(64),
       PARY(64) CHAR(1) DEF P;
   DCL EBS(64) FIXED BIN(15,0) STATIC INIT(
     40,08,48,16,56,24,64,32,
     39,07,47,15,55,23,63,31,
     38,06,46,14,54,22,62,30,
     37,05,45,13,53,21,61,29,
     36,04,44,12,52,20,60,28,
     35,03,43,11,51,19,59,27,
     34,02,42,10,50,18,58,26,
     33,01,41,09,49,17,57,25);
   DCL R CHAR(64),
       RARY(64) CHAR(1) DEF R;
   DCL I FIXED BIN(15,0);
   DO I=1 TO 64;
     RARY(I)=PARY(EBS(I));
     END;
   RETURN(R);
   END IP_1;

 KS: PROC(N,CD) RETURNS(CHAR(48));
   DCL N FIXED BIN(15,0);
   DCL CD CHAR(56),
       CDARY(56) CHAR(1) DEF CD;
   DCL LST(16) FIXED BIN(15,0) STATIC /* TABLE OF LEFT-SHIFTS */
     INIT(1,1,2,2,2,2,2,2,1,2,2,2,2,2,2,1);
   DCL I FIXED BIN(15,0);

   I=LST(N); /* NUMBER OF CHARS TO SHIFT */
   CD=SUBSTR(CD,1+I, 28-I)××SUBSTR(CD,1, I)××
      SUBSTR(CD,29+I,28-I)××SUBSTR(CD,29,I);
   RETURN(PC_2(CD));
   END KS;

 MYBOOL: PROC(A,B,C) RETURNS(CHAR(64) VAR);
   DCL (A,B) CHAR(*);
   DCL C CHAR(4);
   DCL R CHAR(64),
       RA(64) CHAR(1) DEF R;
   DCL (I,J) FIXED BIN(15,0);
   DO I=1 TO LENGTH(A);
     SELECT(SUBSTR(A,I,1)××SUBSTR(B,I,1));
       WHEN('00') J=1;
       WHEN('01') J=2;
       WHEN('10') J=3;
       OTHERWISE  J=4;
       END; /* SELECT */
     RA(I)=SUBSTR(C,J,1);
     END;
   RETURN(SUBSTR(R,1,LENGTH(A)));
   END MYBOOL;

 P: PROC(Q) RETURNS(CHAR(32));
   DCL Q CHAR(32),
       QARY(32) CHAR(1) DEF Q;
   DCL EBS(32) FIXED BIN(15,0) STATIC INIT(
     16,07,20,21,
     29,12,28,17,
     01,15,23,26,
     05,18,31,10,
     02,08,24,14,
     32,27,03,09,
     19,13,30,06,
     22,11,04,25);
   DCL R CHAR(32),
       RARY(32) CHAR(1) DEF R;
   DCL I FIXED BIN(15,0);
   DO I=1 TO 32;
     RARY(I)=QARY(EBS(I));
     END;
   RETURN(R);
   END P;

 PC_1: PROC RETURNS(CHAR(56));
   DCL EBS(56) FIXED BIN(15,0) STATIC INIT(
     57,49,41,33,25,17,09,
     01,58,50,42,34,26,18,
     10,02,59,51,43,35,27,
     19,11,03,60,52,44,36,

     63,55,47,39,31,23,15,
     07,62,54,46,38,30,22,
     14,06,61,53,45,37,29,
     21,13,05,28,20,12,04);
   DCL R CHAR(56),
       RARY(56) CHAR(1) DEF R;
   DCL I FIXED BIN(15,0);
   DO I=1 TO 56;
     RARY(I)=KEYARY(EBS(I));
     END;
   RETURN(R);
   END PC_1;

 PC_2: PROC(K) RETURNS(CHAR(48));
   DCL K CHAR(56),
       KARY(56) CHAR(1) DEF K;
   DCL EBS(48) FIXED BIN(15,0) STATIC INIT(
     14,17,11,24,01,05,
     03,28,15,06,21,10,
     23,19,12,04,26,08,
     16,07,27,20,13,02,
     41,52,31,37,47,55,
     30,40,51,45,33,48,
     44,49,39,56,34,53,
     46,42,50,36,29,32);
   DCL R CHAR(48),
       RARY(48) CHAR(1) DEF R;
   DCL I FIXED BIN(15,0);
   DO I=1 TO 48;
     RARY(I)=KARY(EBS(I));
     END;
   RETURN(R);
   END PC_2;

 POP: PROC RETURNS(BIT(48));
   STELP=STACK;
   STACK=STELNXT;
   RETURN(STELK);
   END POP;

 PUSH: PROC(K);
   DCL K BIT(48);
   ALLOCATE STEL;
   STELK=K;
   STELNXT=STACK;
   STACK=STELP;
   END PUSH;

 S: PROC(N,P) RETURNS(CHAR(4));
   DCL P CHAR(6),
       PARY(6) CHAR(1) DEF P;
   DCL N FIXED BIN(15,0);
   DCL STAB(8,0:3,0:15) FIXED BIN(15,0) STATIC INIT(

     14,04,13,01,02,15,11,08,03,10,06,12,05,09,00,07,
     00,15,07,04,14,02,13,01,10,06,12,11,09,05,03,08,
     04,01,14,08,13,06,02,11,15,12,09,07,03,10,05,00,
     15,12,08,02,04,09,01,07,05,11,03,14,10,00,06,13,

     15,01,08,14,06,11,03,04,09,07,02,13,12,00,05,10,
     03,13,04,07,15,02,08,14,12,00,01,10,06,09,11,05,
     00,14,07,11,10,04,13,01,05,08,12,06,09,03,02,15,
     13,08,10,01,03,15,04,02,11,06,07,12,00,05,14,09,

     10,00,09,14,06,03,15,05,01,13,12,07,11,04,02,08,
     13,07,00,09,03,04,06,10,02,08,05,14,12,11,15,01,
     13,06,04,09,08,15,03,00,11,01,02,12,05,10,14,07,
     01,10,13,00,06,09,08,07,04,15,14,03,11,05,02,12,

     07,13,14,03,00,06,09,10,01,02,08,05,11,12,04,15,
     13,08,11,05,06,15,00,03,04,07,02,12,01,10,14,09,
     10,06,09,00,12,11,07,13,15,01,03,14,05,02,08,04,
     03,15,00,06,10,01,13,08,09,04,05,11,12,07,02,14,

     02,12,04,01,07,10,11,06,08,05,03,15,13,00,14,09,
     14,11,02,12,04,07,13,01,05,00,15,10,03,09,08,06,
     04,02,01,11,10,13,07,08,15,09,12,05,06,03,00,14,
     11,08,12,07,01,14,02,13,06,15,00,09,10,04,05,03,

     12,01,10,15,09,02,06,08,00,13,03,04,14,07,05,11,
     10,15,04,02,07,12,09,05,06,01,13,14,00,11,03,08,
     09,14,15,05,02,08,12,03,07,00,04,10,01,13,11,06,
     04,03,02,12,09,05,15,10,11,14,01,07,06,00,08,13,

     04,11,02,14,15,00,08,13,03,12,09,07,05,10,06,01,
     13,00,11,07,04,09,01,10,14,03,05,12,02,15,08,06,
     01,04,11,13,12,03,07,14,10,15,06,08,00,05,09,02,
     06,11,13,08,01,04,10,07,09,05,00,15,14,02,03,12,

     13,02,08,04,06,15,11,01,10,09,03,14,05,00,12,07,
     01,15,13,08,10,03,07,04,12,05,06,11,00,14,09,02,
     07,11,04,01,09,12,14,02,00,06,10,13,15,03,05,08,
     02,01,14,07,04,10,08,13,15,12,09,00,03,05,06,11);

   DCL (I,J) FIXED BIN(15,0);
   I=BIT(SUBSTR(P,1,1)××SUBSTR(P,6,1));
   J=BIT(SUBSTR(P,2,4));
   RETURN(SUBSTR(UNSPEC(STAB(N,I,J)),13,4));
   END S;

 END DES;
