         ISEQ  73,80
TROUT    START 0                                                    TGS
********************************************************************TGS
*              THIS ROUTINE IS DESIGNED FOR USE WITH THE PLI       *TGS
*        OPTIMIZING COMPILER.                                      *TGS
*                  THIS ROUTINE MAY BE USED TO TRANSLATE A STRING  *TGS
*              OF HEXADECIMAL DIGITS IN INTERNAL FORM (4-BITS PER  *TGS
*              DIGIT) TO A STRING OF PRINTABLE CHARACTERS.         *TGS
*                  UPON ENTRY, THE ROUTINE EXPECTS REG1 TO CONTAIN *TGS
*              THE ADDR OF TWO CONTIGUOUS FULLWORDS.  THE FIRST    *TGS
*              WORD SHOULD CONTAIN THE ADDR OF A BLOCK OF INFO     *TGS
*              HAVING THE FOLLOWING FORMAT -                       *TGS
*                  4 BYTES - ALIGNED ON A FULLWORD BOUNDARY AND    *TGS
*                            CONTAINING THE ADDR OF THE STRING TO  *TGS
*                            BE TRANSLATED.                        *TGS
*                  4 BYTES - IMMEDIATELY CONTIGUOUS TO THE ADDR    *TGS
*                            JUST DESCRIBED.  IF THE HI-BIT OF     *TGS
*                            THE THIRD BYTE IS ON, THEN THE ADDR   *TGS
*                            JUST DESCRIBED POINTS TO A HALFWORD   *TGS
*                            CONTAINING THE LENGTH OF THE STRING.  *TGS
*                            THE HALFWORD IS FOLLOWED BY THE STRING*TGS
*                            ITSELF.  IF THE BIT IS OFF, BYTES ONE *TGS
*                            AND TWO CONTAIN THE LENGTH OF THE     *TGS
*                            STRING POINTED TO BY ADDR PREVIOUSLY  *TGS
*                            DESCRIBED.                            *TGS
*                                                                  *TGS
*              THE SECOND WORD SHOULD CONTAIN THE ADDR OF A BLOCK  *TGS
*              OF INFO HAVING THE FOLLOWING FORMAT -               *TGS
*                  4 BYTES - ALIGNED ON A FULLWORD BOUNDARY AND    *TGS
*                            CONTAINING THE ADDR OF THE STRING     *TGS
*                            WHICH IS TO RECEIVE THE TRANSLATED    *TGS
*                            HEXADECIMAL DIGITS.                   *TGS
*                  4 BYTES - IMMEDIATELY CONTIGUOUS TO THE ADDR    *TGS
*                            JUST DESCRIBED.  IF THE HI-BIT OF     *TGS
*                            THE THIRD BYTE IS ON  THEN THE ADDR   *TGS
*                            JUST DESCRIBED POINTS TO A HALFWORD   *TGS
*                            CONTAINING THE LENGTH OF THE STRING.  *TGS
*                            THE HALFWORD IS FOLLOWED BY THE STRING*TGS
*                            ITSELF.  IF THE BIT IS OFF, BYTES ONE *TGS
*                            AND TWO CONTAIN THE LENGTH OF THE     *TGS
*                            STRING POINTED TO BY ADDR PREVIOUSLY  *TGS
*                            DESCRIBED.                            *TGS
*                  NOTE THAT IF THE RECEIVING FIELD IS TOO SHORT   *TGS
*              TO CONTAIN THE TRANSLATED DIGITS, TRUNCATION WILL   *TGS
*              OCCUR ON THE RIGHT.  IF THE RECEIVING FIELD IS TOO  *TGS
*              LONG, THE TRANSLATED DIGITS WILL BE INSERTED        *TGS
*              LEFT-JUSTIFIED, AND THE FIELD WILL BE PADDED WITH   *TGS
*              BLANKS.                                             *TGS
********************************************************************TGS
R0       EQU   0                                                    TGS
R1       EQU   1                                                    TGS
R2       EQU   2                                                    TGS
R3       EQU   3                                                    TGS
R4       EQU   4                                                    TGS
R5       EQU   5                                                    TGS
R6       EQU   6                                                    TGS
R7       EQU   7                                                    TGS
R8       EQU   8                                                    TGS
R9       EQU   9                                                    TGS
RA       EQU   10                                                   TGS
RB       EQU   11                                                   TGS
RC       EQU   12                                                   TGS
RD       EQU   13                                                   TGS
RE       EQU   14                                                   TGS
RF       EQU   15                                                   TGS
         STM   RE,RB,12(RD)            SAVE CALLERS REGS            TGS
         BALR  RA,R0                                                TGS
         USING *,RA                                                 TGS
         L     R2,0(R0,R1)             REG2 EQ ADDR SDV IN          TGS
         L     R3,0(R0,R2)             REG3 EQ ADDR IN-STR          TGS
         TM    6(R2),X'80'             IS IT VARYING                TGS
         BC    8,NOTV1                 BR IF NOT                    TGS
         LH    R4,0(R3)                R4 = LEN IN-STR              TGS
         LA    R3,2(R3)                R3 = A(IN-STR)               TGS
         B     NXT1                                                 TGS
NOTV1    EQU   *                                                    TGS
         LH    R4,4(R2)                R4 = LEN IN-STR              TGS
NXT1     EQU   *                                                    TGS
         L     R2,4(R0,R1)             REG2 EQ ADDR SDV OUT         TGS
         L     R5,0(R0,R2)             REG5 EQ ADDR OUT-STR         TGS
         TM    6(R2),X'80'             IS IT VARYING                TGS
         BC    8,NOTV2                 BR IF NOT                    TGS
         LH    R6,0(R5)                R6 = LEN OUT-STR             TGS
         LA    R5,2(R5)                R5 = A(OUT-STR)              TGS
         B     NXT2                                                 TGS
NOTV2    EQU   *                                                    TGS
         LH    R6,4(R2)                R6 = LEN OUT-STR             TGS
NXT2     EQU   *                                                    TGS
BEGLOOP  CH    R6,=H'15'               IS OUT-STR LENGTH LEFT LT 15 TGS
         BC    4,SHORT                 BR IF YES                    TGS
         UNPK  0(15,R5),0(8,R3)                                     TGS
         MVZ   0(14,R5),=15X'00'       GET RID OF ZONES             TGS
         TR    0(14,R5),TRANTAB                                     TGS
         LA    R5,14(R0,R5)            INCREMENT OUT-STR ADDR       TGS
         LA    R3,7(R0,R3)             INCREMENT IN-STR ADDR        TGS
         SH    R6,=H'14'               DECREMENT OUT-STR LENGTH LEFTTGS
         SH    R4,=H'7'                DECREMENT IN-STR LENGTH LEFT TGS
         LTR   R4,R4                   IS IN-STR LENGTH LEFT GT 0   TGS
         BC    2,BEGLOOP               BR IF YES                    TGS
PAD      MVI   0(R5),C' '              PREPARE TO PAD OUT-STR W/BLNKTGS
         LA    R7,255                                               TGS
PADLOOP  CH    R6,=H'257'              IS OUT-ST LENGTH LEFT LT 257 TGS
         BC    4,ENDPAD                BR IF YES                    TGS
         EX    R7,PADMVC                                            TGS
         SH    R6,=H'256'              DECREMENT OUT-STR LENGTH LEFTTGS
         LA    R5,256(R0,R5)           INCREMENT OUT-STR ADDR       TGS
         B     PADLOOP                                              TGS
ENDPAD   CH    R6,=H'1'                IS OUT STR LEN LEFT LE 1     TGS
         BC    12,ALLDONE              BR IF YES                    TGS
         SH    R6,=H'2'                                             TGS
         EX    R6,PADMVC                                            TGS
         B     ALLDONE                                              TGS
SHORT    LH    R8,=H'1'                REG8 EQ 1                    TGS
         AR    R8,R6                   REG8 EQ L1 + 1               TGS
         SRDA  R8,32(R0)               GET SET FOR DIVIDE           TGS
         D     R8,=F'2'                REG9 EQ L2 = (L1 + 1) 1 2    TGS
         LR    R7,R6                   REG7 EQ OUT-STR LEN LEFT     TGS
         SH    R7,=H'1'                     MINUS ONE               TGS
         LTR   R8,R8                   WAS THERE A REMAINDER        TGS
         BC    8,NOTWO                 BR IF NOT                    TGS
         SH    R7,=H'1'                     MINUS ANOTHER ONE       TGS
NOTWO    SLL   R7,4(R0)                                             TGS
         AR    R7,R9                                                TGS
         SH    R7,=H'1'                REG7 EQ L1L2 FOR EX INSTR    TGS
         EX    R7,UNPK                                              TGS
         LTR   R8,R8                   WAS THERE A REMAINDER        TGS
         BC    8,TRANEND               BR IF NOT                    TGS
         LR    RB,R5                                                TGS
         AR    RB,R6                                                TGS
         SH    RB,=H'2'                REG11 EQ OUT-STR END - 2     TGS
         PACK  1(1,RB),0(1,RB)                                      TGS
TRANEND  LR    RB,R6                                                TGS
         SH    RB,=H'1'                                             TGS
         EX    RB,MVZ                  GET RID OF ZONES             TGS
         EX    RB,TR                   TRANSLATE                    TGS
         MH    R4,=H'2'                MULT IN-STR LEN LEFT BY 2    TGS
         CR    R4,R6                   DO WE NEED TO PAD OUT-STR    TGS
         BC    10,ALLDONE              BR IF NOT                    TGS
         SR    R6,R4                   DECREMENT OUT-STR LEN LEFT   TGS
         AR    R5,R4                   INCREMENT OUT-STR ADDR       TGS
         B     PAD                                                  TGS
ALLDONE  LM    RE,RB,12(RD)            RESTORE REGS                 TGS
         BR    RE                           AND RETURN              TGS
PADMVC   MVC   1(0,R5),0(R5)                                        TGS
UNPK     UNPK  0(0,R5),0(0,R3)                                      TGS
MVZ      MVZ   0(0,R5),=15X'00'                                     TGS
TR       TR    0(0,R5),TRANTAB                                      TGS
TRANTAB  DC    C'0123456789ABCDEF'                                  TGS
         LTORG                                                      TGS
         END
