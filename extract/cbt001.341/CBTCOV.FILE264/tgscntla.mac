 /* TGSCNTLA */
 /*
 THIS PROGRAM IS PART OF THE REQSPACE DISK SPACE MANAGEMENT SYSTEM,
 AND WILL GENERATE A REPORT INDICATING (1) DATA SETS USING MORE SPACE
 THAN THEY ARE AUTHORIZED, (2) DATA SETS SCHEDULED FOR DELETION BECAUSE
 THEY ARE UNAUTHORIZED, (3) DATA SETS FOR WHICH SPACE IS RESERVED BUT
 NOT ALLOCATED, AND (4) DATA SETS WHICH ARE ALLOCATED BUT HAVE NOT BEEN
 USED FOR A LONG PERIOD.  UNAUTHORIZED DATA SETS WILL BE SCRATCHED
 ON A GIVEN RUN OF THIS PROGRAM ONLY IF DATA SET EXCDL IS PRESENT.
 UNAUTHORIZED DATA SETS WILL BE SCRATCHED IMMEDIATELY IF DATA SET
 EXCRQ IS NOT PRESENT.  IF EXCRQ IS PRESENT, THE UTILITY WILL PRINT
 A WARNING ON THE EXCEPTION REPORT, AND SCHEDULE THE DATA SET FOR
 DELETION ON THE NEXT RUN.
 */
 CNTLPRC:  PROC(PARM) OPTIONS(MAIN);
 DCL DUMPSTT ENTRY;
         DCL PARM CHAR(100) VARYING;
         DCL PERCNT FIXED DEC(2,0);
         PERCNT = PARM;
         % INCLUDE DSCB4;
         % INCLUDE DSCB1;
         DCL FOURREA CHAR(148) EXT;
         DSCB1PTR=ADDR(WKAREA);
         DSCB4PTR=ADDR(FOURREA);
         DCL (A,B,C,D,E) FIXED DEC(15,0);
         DCL TRKPERCYL FIXED BIN(15,0);
         DCL TOTRK FIXED BIN(15,0);
         DCL VOLUME CHAR(6) EXT;
         DCL EOFSW BIT(1) STATIC INIT('0'B);
         DCL PLIRETC BUILTIN;
         DCL DSNRCOR CHAR(110);
         DSNRPTR = ADDR(DSNRCOR);
         DCL VOLRECS CHAR(110);
         VOLRPTR = ADDR(VOLRECS);
         DCL (RETLAB,SUBRET) LABEL;
         DCL (TOTREF,TOTRES) FIXED BIN(31,0) STATIC INIT(0);
         % INCLUDE CTLGDEF;
         DCL 1 ABND,
              2 DUM BIN FLOAT(53),
              2 AREA CHAR(265);
         DCL PTRFIX FIXED BIN(31,0) DEF CTLGPTR;
         DCL CVOL CHAR(6);
         DCL RETB FIXED BIN(31,0) DEF RETCODE;
         DCL REG15 BIT(8) DEF RETCODE;
         DCL WKAREA CHAR(148) EXT;
         DCL UCBPTR PTR EXT;
         % INCLUDE TGSINITA;
         % INCLUDE TGSRQENQ;
         DCL DLCNT FIXED BIN STATIC INIT(0B);
         DCL 1 EXCDLR STATIC,
              2 P1 CHAR(10) INIT(' DUMP DSN='),
              2 EXCDLRN CHAR(70);
         DCL 1 EXCRQR1 STATIC,
              2 P1 CHAR(9) INIT('REQSPACE '),
              2 RQDSN CHAR(44),
              2 P2 CHAR(27) INIT(' -');
         DCL 1 EXCRQR2 STATIC,
              2 P1 CHAR(5) INIT('PGMR('),
              2 RQPGMR PIC'999',
              2 P2 CHAR(6) INIT(') DIV('),
              2 RQDIV PIC'999',
              2 P21 CHAR(6) INIT(') DEP('),
              2 RQDEP PIC'999',
              2 P3 CHAR(13) INIT(') CHANGE TRK('),
              2 RQTRK PIC'99999',
              2 P4 CHAR(6) INIT(') VOL('),
              2 RQVOL CHAR(6),
              2 P5 CHAR(2) INIT(')'),
              2 GDGK CHAR(4), /* GDG( */
              2 GDGP PIC'ZZZ',
              2 GDGE CHAR(1), /* ) */
              2 P6 CHAR(14) INIT(' ');
         DCL 1 EXCRQR3,
              2 P1 CHAR(5) INIT('PGMR('),
              2 RQPGMR3 PIC'999',
              2 P2 CHAR(6) INIT(') DIV('),
              2 RQDIV3 PIC'999',
              2 P21 CHAR(6) INIT(') DEP('),
              2 RQDEP3 PIC'999',
              2 P3 CHAR(6) INIT(') VOL('),
              2 RQVOL3 CHAR(6),
              2 P4 CHAR(2) INIT(') '),
              2 RQ3CON CHAR(40);
         DCL 1 VOLLIST,
              2 VOLCNT FIXED BIN(15,0) INIT(1B),
              2 VOLTYP BIT(32),
              2 VOLSR CHAR(6),
              2 DSSQ FIXED BIN(15,0) INIT(0B);
         DCL TYPE BIT(32) EXT;
         DCL ISAMFLE FILE ENV(INDEXED) DIRECT INPUT KEYED;
         DCL HILIT CHAR(5);
         DCL 1 CNTLFLG STATIC,
              2 EXCEPSW BIT(1) INIT('0'B),
              2 EXCDLSW BIT(1) INIT('0'B),
              2 EXCRQSW BIT(1) INIT('0'B),
              2 FIRSTSW BIT(1) INIT('0'B);  /* SW FOR FIRST PAGE */
         DCL DATE BUILTIN;
         DCL DATEIN CHAR(6);
         DCL GREGDTE CHAR(6);
         DCL (JULIAN,YY,DDD) FIXED DEC(5,0);
         DCL DTCK1 FIXED BIN(31,0);
         DCL 1 DTCK2 DEF DTCK1 UNALIGNED,
              2 PAD CHAR(1),
              2 DTCK CHAR(3);
         DCL 1 DTCK3 BASED(DSCB1PTR),
              2 PAD1 CHAR(53),
              2 CREDT CHAR(3),
              2 PAD2 CHAR(19),
              2 REFDT CHAR(3);
         DCL 1 DTCK4 BASED(DSCB1PTR),
              2 PAD CHAR(75),
              2 DTCKBIT BIT(24);
         DATEIN = DATE;
         GREGDTE = SUBSTR(DATEIN,3,4) ×× SUBSTR(DATEIN,1,2);
         CALL GREGJUL(GREGDTE,JULIAN);
         YY = JULIAN/1000;
         DDD = JULIAN - (YY*1000);
         DDD = DDD - 180;
         IF DDD < 1
              THEN DO;
                   YY = YY - 1;
                   DDD = 365 + DDD;
                   END;
         DTCK1 = YY*65536+DDD;
         DCL DAY CHAR(6) DEF DATEIN;
         DCL INITSW BIT(1) STATIC INIT('1'B);
 ON ENDPAGE(EXCEPTS) BEGIN;
         IF FIRSTSW = '1'B
            THEN PUT FILE(EXCEPTS) PAGE;
         FIRSTSW = '1'B;
         PUT FILE(EXCEPTS) EDIT('SPACE ALLOCATION EXCEPTION REPORT FOR '
           ,VOLUME,' DATE=',DAY)(A,A,A,A);
         PUT FILE(EXCEPTS) EDIT(
 '*     PRECEDING DSNAME MEANS DATA SET WILL BE DELETED')(A) SKIP(1);
         PUT FILE(EXCEPTS) EDIT(
 ' +    PRECEDING DSNAME MEANS DATA SET WILL BE SCHEDULED FOR DELETION O
 N THE NEXT RUN')(A) SKIP(1);
         PUT FILE(EXCEPTS) EDIT(
 '  $   PRECEDING DSNAME MEANS DATA SET IS AUTHORIZED BUT NOT ALLOCATED'
           )(A) SKIP(1);
         PUT FILE(EXCEPTS) EDIT(
 '   @  PRECEDING DSNAME MEANS DATA SET HAS NOT BEEN USED IN SIX MONTHS'
           )(A) SKIP(1);
         PUT FILE(EXCEPTS) EDIT(
 '    # PRECEDING DSNAME MEANS LESS THAN ',PERCNT,' PERCENT OF THE ALLOC
 ATED SPACE IS IN USE')(A,P'99',A) SKIP(1);
         PUT FILE(EXCEPTS) EDIT('TRACKS','TRACKS','PGMR','DIV','DEPT',
           'DSNAME')
           (A,COL(11),A,COL(21),A,COL(27),A,COL(32),A,COL(38),A)
           SKIP(1);
         PUT FILE(EXCEPTS) EDIT('USED','AUTHORIZED','NO','NO')
           (COL(2),A,COL(9),A,COL(22),A,COL(28),A) SKIP(1);
         PUT FILE(EXCEPTS) SKIP(2);
         END;
         DCL DDNAME CHAR(8) EXT;
         DCL (NXFIRST,NXLAST) BIT(1) EXT;
         NXFIRST = '1'B;
         NXLAST = '0'B;
         CALL NEXTDD;
         DO WHILE(^NXLAST);
              IF DDNAME = 'EXCEPTS'
                   THEN EXCEPSW = '1'B;
                   ELSE IF DDNAME = 'EXCDL'
                        THEN EXCDLSW = '1'B;
                        ELSE IF DDNAME = 'EXCRQ'
                             THEN EXCRQSW = '1'B;
              CALL NEXTDD;
              END;
         NXFIRST = '1'B;
         NXLAST = '0'B;
         CALL NEXTDD;
         DO WHILE(DDNAME ^= 'DISK1');
              CALL NEXTDD;
              END;
         VOLTYP = TYPE;
         VOLSR = VOLUME;
         RQVOL = VOLUME;
         RQVOL3 = VOLUME;
         IF EXCEPSW
              THEN DO;
                   OPEN FILE(EXCEPTS) LINESIZE(132) PRINT;
                   SIGNAL ENDPAGE(EXCEPTS);
                   END;
         IF EXCDLSW
              THEN OPEN FILE(EXCDL) RECORD OUTPUT;
         IF EXCRQSW
              THEN OPEN FILE(EXCRQ) RECORD OUTPUT;
         OPEN FILE(BDAMFLE) UPDATE DIRECT KEYED;
         BDAMKEYA = 1;
         READ FILE(BDAMFLE) INTO(QCRMAIN) KEY(BDAMKEY);
         IF SUBSTR(QCRFLGS,1,1)
               THEN DO;
                    PUT EDIT('CATASTROPHIC ERROR - THE CONTROL FILE IS U
 NUSEABLE - NOTIFY SYSTEM SUPPORT')(A) SKIP(1);
                   CALL PLIRETC(16);
                    RETURN;
                    END;
         OPEN FILE(ISAMFLE);
         ISAMKEY=VOLUME;
         READ FILE(ISAMFLE) INTO(ISAMIN) KEY(ISAMKEY);
         BDAMKEYA = ISAM.DAMASTER;
         READ FILE(BDAMFLE) INTO(VOLRECS) KEY(BDAMKEY);
         ON KEY(ISAMFLE) GO TO DSNBAD;
         NXFIRST = '1'B;
         NXLAST = '0'B;
 NXTDSCB:
         HILIT = '';
         CALL SCANVTC;
         IF NXLAST
              THEN GO TO EOF;
         IF DS1FMTID='4'
              THEN DO;
                   FOURREA = WKAREA;
                   TRKPERCYL = DS4DEVTC;
                   END;
         IF DS1FMTID ^= '1'
              THEN GO TO NXTDSCB;
         IF SUBSTR(DS1DSNAM,1,7) = 'Z999999' &
              SUBSTR(DS1DSNAM,10,8) = 'VSAMDSPC' &
              SUBSTR(DS1DSNAM,19,1) = 'T' &
              SUBSTR(DS1DSNAM,28,1) = 'T'
                   THEN GO TO TEMPNAM;
         IF SUBSTR(DS1DSNAM,1,7) = '**SYSUT'
              THEN GO TO TEMPNAM;
         IF SUBSTR(DS1DSNAM,1,36) =
           'AAAAAAAA.AAAAAAAA.AAAAAAAA.AAAAAAAA.'
              THEN GO TO TEMPNAM;
         IF SUBSTR(DS1DSNAM,1,3) ^= 'SYS'
              THEN GO TO BYTEMP;
         IF SUBSTR(DS1DSNAM,9,2) ^= '.T'
              THEN GO TO BYTEMP;
         IF SUBSTR(DS1DSNAM,17,3) = '.RA'
              THEN GO TO TEMPNAM;
         IF SUBSTR(DS1DSNAM,19,1) ^= 'F' & SUBSTR(DS1DSNAM,19,1) ^= 'V'
              THEN GO TO BYTEMP;
 TEMPNAM:
         GO TO NXTDSCB;
 BYTEMP:
         CALL DSIZESB(DSCB1PTR,TRKPERCYL,VOLUME,TOTRK);
         IF REFDT = LOW(3)
              THEN REFDT = CREDT;
         IF REFDT < DTCK
              THEN SUBSTR(HILIT,4,1) = '@';
         IOER = 0;
         RETLAB = NXTDSCB;
         CALL SUFFIX(DS1DSNAM,' ',I);
         I = I - 8;
         IF I <= 0
              THEN GO TO NOTGDG;
         IF SUBSTR(DS1DSNAM,I,1) ^= '.'
              THEN GO TO NOTGDG;
         IF SUBSTR(DS1DSNAM,I+1,1) ^= 'G'
              THEN GO TO NOTGDG;
         IF SUBSTR(DS1DSNAM,I+6,1) ^= 'V'
              THEN GO TO NOTGDG;
         DO J = I+2 TO I+5;
              IF SUBSTR(DS1DSNAM,J,1)<'0' × SUBSTR(DS1DSNAM,J,1)>'9'
                   THEN GO TO NOTGDG;
              END;
         DO J = I+7 TO I+8;
              IF SUBSTR(DS1DSNAM,J,1)<'0' × SUBSTR(DS1DSNAM,J,1)>'9'
                   THEN GO TO NOTGDG;
                   END;
         ILEN = I - 1;
         GO TO DOREAD;
 NOTGDG:
         ILEN = 44;
 DOREAD:
         READ FILE(ISAMFLE) INTO(ISAMIN) KEY(SUBSTR(DS1DSNAM,1,ILEN));
         BDAMKEYA = ISAM.DAMASTER;
 RDAGIN:
         READ FILE(BDAMFLE) INTO(DSNRECS) KEY(BDAMKEY);
         IF NEWVOL = VOLUME
              THEN DO;
                   IF DTRKS = 0 & DPGMRNO = 0 & DDIV = 0 & DDEP = 0
                        THEN DO;
                             SUBSTR(HILIT,1,1) = '*';
                             RQ3CON = 'DELETE';
                             GO TO DSNBADA;
                             END;
                        ELSE SUBSTR(HILIT,1,1) = ' ';
                   GO TO DODSNA;
                   END;
         IF DNDUPPT = 0
              THEN GO TO DSNBAD;
         BDAMKEYA = DNDUPPT;
         GO TO RDAGIN;
 DODSNA:
         IF BOOL(DS1DSORG,'01000010'B,'0001'B)
              THEN DO; /* DSORG = PS OR PO */
                   A=DS4DEVTK; /* A=BYTES PER TRK */
                   B=DS1TRBAL; /* B=BYTES FREE ON LAST TRACK USED */
                   C=SUBSTR(DS1LSTAR,1,16); /* C=TT FROM TTR OF LAST
                        BLOCK USED */
                   D=TOTRK; /* D=TRKS ALLOCATED */
                   D=D*A; /* D=SPACE ALLOC IN BYTES */
                   C=C*A*100+(A-B)*100;
                        /* C=BYTES USED *100 */
                   IF D ^= 0 THEN DO;
                        D = C/D;  /* D = % USED */
                        DPCUS = D;
                        END;
                   ELSE DPCUS = 0;  /* PROTECT FOR 0 DIV */
                   END;
              ELSE DPCUS=100; /* IF DSORG IS NOT PS OR PO, ASSUME 100
                   PERCENT SPACE UTILIZATION */
         DPCAL=TOTRK;
         DRFDY=DTCKBIT;
         IF DPCUS<PERCNT
              THEN SUBSTR(HILIT,5,1)='#';
 DODSN:
       WRITE FILE(BDAMFLE) FROM(DSNRECS) KEYFROM(BDAMKEY);
 /*      CALL DUMPSTR(DSNRECS);    FOR TESTING */
         IF ILEN < 44
              THEN IF DGDGCNT ^= 0
                   THEN DTRKS = DTRKS / DGDGCNT;
         IF EOFSW
              THEN GO TO DOEXC;
         IF ILEN < 44
              THEN IF MAXCNT > DGDGCNT
                   THEN GO TO DOEXC;
         IF HILIT ^= ' '
              THEN GO TO DOEXC;
         IF DTRKS >= TOTRK
              THEN GO TO RETLAB;
 DOEXC:
         IF EXCEPSW
              THEN PUT FILE(EXCEPTS) EDIT(TOTRK,DTRKS,DPGMRNO,DDIV,DDEP,
                HILIT,DSN)
                (P'ZZ,ZZ9',COL(11),P'ZZ,ZZ9',COL(22),P'999',
                COL(27),P'999',COL(32),P'999',COL(38),A,X(1),A) SKIP(1);
         IF EOFSW
              THEN DO;
                   TOTRES = TOTRES + DTRKS;
                   BDAMKEYA = DNDSNPT;
                   GO TO NXT;
                   END;
         IF SUBSTR(HILIT,4,1) = '@'
              THEN TOTREF = TOTREF + TOTRK;
         IF SUBSTR(HILIT,2,1) = '+'
              THEN GO TO RETLAB;
         IF SUBSTR(HILIT,1,1) = '*'
              THEN IF EXCDLSW & DLCNT < 10
                   THEN DO;
                        DLCNT = DLCNT + 1;
                        EXCDLRN = DSN;
                        WRITE FILE(EXCDL) FROM(EXCDLR);
                        END;
                   ELSE;
              ELSE IF EXCRQSW & (DTRKS < TOTRK)
                   THEN DO;
                        RQDSN = DSN;
                        WRITE FILE(EXCRQ) FROM(EXCRQR1);
                        RQPGMR = DPGMRNO;
                        RQDIV = DDIV;
                        IF DDEP = 0
                             THEN RQDEP = 999;
                             ELSE RQDEP = DDEP;
                        IF TOTRK > DTRKS
                             THEN RQTRK = TOTRK;
                             ELSE RQTRK = DTRKS;
                        IF ILEN = 44
                             THEN DO;
                                  GDGK,GDGE = ' ';
                                  GDGP = 0;
                                  END;
                             ELSE DO;
                                  GDGP = MAXCNT;
                                  GDGK = 'GDG(';
                                  GDGE = ')';
                                  END;
                        WRITE FILE(EXCRQ) FROM(EXCRQR2);
                        END;
         GO TO RETLAB;
 DSNBAD:
         DSN = DS1DSNAM;
         DPGMRNO = 0;
         DDIV = VDFTDIV;
         DDEP = VDFTDEP;
         IF DDIV ^= 0 × DDEP ^= 0
              THEN DO;
                   DTRKS = TOTRK;
                   RQ3CON = '';
                   PUT STRING(RQ3CON) EDIT('TRK(',DTRKS,')')
                     (A,P'99999',A);
                   END;
              ELSE DO;
                   DTRKS = 0;
                   RQ3CON = 'TRK(0)';
                   END;
         IF EXCRQSW
              THEN SUBSTR(HILIT,2,1) = '+';
              ELSE SUBSTR(HILIT,1,1) = '*';
 DSNBADA:
         SUBRET = DOEXC;
 SUBRIT:
         IF ^EXCRQSW
              THEN GO TO SUBRET;
         RQDSN = DSN;
         WRITE FILE(EXCRQ) FROM(EXCRQR1);
         RQPGMR3 = DPGMRNO;
         RQDIV3 = DDIV;
         RQDEP3=DDEP;
         WRITE FILE(EXCRQ) FROM(EXCRQR3);
         GO TO SUBRET;
 EOF:
         EOFSW = '1'B;
         TOTRK = 0;
         HILIT = '  $';
         IF EXCDLSW
              THEN DO;
                   CLOSE FILE(EXCDL);
                   IF DLCNT = 0
                        THEN CALL PLIRETC(4);
                   END;
 EXCDLE:
         BDAMKEYA = DSNFPT;
         RETLAB = NXT;
 NXT:
         IF BDAMKEYA = 0
              THEN DO;
                   PUT FILE(EXCEPTS)
                       EDIT('TOTAL SPACE RESERVED BUT UNUSED = ',
                     TOTRES)(A,P'ZZZ,ZZ9') SKIP(2);
                   PUT FILE(EXCEPTS)
                       EDIT('TOTAL SPACE USED BY DATA SETS NOT USED IN
 SIX MONTHS = ',TOTREF)(A,P'ZZZ,ZZ9') SKIP(1);
                   CALL SYSDEQ(QNAME,RNAME,'SYSTEM',ENQRET);
                   RETURN;
                   END;
         READ FILE(BDAMFLE) INTO(DSNRECS) KEY(BDAMKEY);
         CALL SYSVTOC('SEARCH',RET,DSN,VOLUME,WKAREA);
         IF RET = '0'B
              THEN DO;
                   BDAMKEYA = DNDSNPT;
                   GO TO NXT;
                   END;
         IF SUBSTR(DFLGS,11,1) /* TEST FOR GDG */
              THEN ILEN = 43;
              ELSE ILEN = 44;
         IF DTRKS = 0 & DPGMRNO = 0 & DDIV = 0
              THEN DO;
                   BDAMKEYA = DNDSNPT;
                   RQ3CON = 'DELETE';
                   SUBRET = NXT;
                   GO TO SUBRIT;
                   END;
         DRFDY=0;
         DPCUS,DPCAL=0;
         GO TO DODSN;
         END;
