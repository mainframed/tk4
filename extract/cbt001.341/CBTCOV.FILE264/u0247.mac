 /* U0247 */
 /* THIS PROGRAM REPORTS ON IWT REQUESTS */
   U0247: PROC(PARM) OPTIONS(MAIN);
         DCL PARM CHAR(100) VAR;
         DCL 1 PARSTR UNALIGNED STATIC,
              2 CMDINDX FIXED BIN(15,0),
              2 OPERCK BIT(16),
              2 PARY(16) CHAR(80) VAR,
              2 NUMCKA(1) BIT(16) INIT('0'B),
              2 CMDTAB(1) CHAR(8) VAR INIT('NULL');
         DCL PARS ENTRY(CHAR(*) VAR,);
         DCL SPARS ENTRY;
         DCL IWTCON ENTRY(FIXED BIN(15,0))
           RETURNS(FIXED BIN(15,0));
         DCL PRTYCON ENTRY(FIXED BIN(15,0))
           RETURNS(FIXED BIN(15,0));
         DCL DOW ENTRY(FIXED DEC(5,0))
           RETURNS(FIXED BIN(15,0));
         DCL GREGJUL ENTRY(CHAR(6))
           RETURNS(FIXED DEC(5,0));
         DCL GREGDTE CHAR(6);
         DCL JULDTE FIXED DEC(5,0);
         DCL SMF5REC CHAR(400) VAR;
         DCL PTR5 PTR,
             PTR5ADJ FIXED BIN(31,0) DEF PTR5;
         PTR5 = ADDR(SMF5REC);
         PTR5ADJ = PTR5ADJ + 2;
         DCL LOTME FIXED BIN(31,0) INIT(0);
              /* DEFAULT TIME START = JUST AFTER MIDNIGHT */
         DCL HITME FIXED BIN(31,0) INIT(8640000);
              /* DEFAULT TIME STOP = MIDNIGHT */
         DCL LODTE FIXED DEC(5,0) INIT(0);
              /* DEFAULT DATE START = 0 */
         DCL HIDTE FIXED DEC(5,0) INIT(99999);
              /* DEFAULT DATE STOP = 99999 */
         DCL JOBMASK CHAR(8) INIT((8)'.');
              /* DEFAULT JOB MASK  */
         DCL ACCTMASK CHAR(18) INIT((18)'.');
              /* DEFAULT ACCT MASK */
         DCL MAXIWT FIXED BIN(15,0) INIT(9999);
              /* DEFAULT MAXIWT IN 10 MINUTES */
         DCL MAXPRTY FIXED BIN(15,0) INIT(9999);
              /* WILL BE SET TO MAX PRTY BASED ON IWT */
         DCL DOWMASK BIT(7) INIT('0'B);
              /* DEFAULT DOW MASK */
         DCL CLMASK CHAR(100) VAR INIT(
 'A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,0,1,2,3,4,5,6,7,8,
 9');
         DCL DIVMASK CHAR(100) VAR INIT('');
         DCL ACTFLD CHAR(30) VAR;
         DCL OPTSW BIT(1) INIT('0'B);
         DCL OVERDUE CHAR(7) VAR STATIC INIT('');
         DCL DOWSTR CHAR(30) VAR;
         DCL KEYVAL CHAR(80) VAR;
         DCL KEYTAB(19) CHAR(20) VAR STATIC INIT(
           'SUN','MON','TUE','WED','THU','FRI','SAT',
           'JOBNAME','IWTMAX','JOBCLASS','ACCT','LOTME','HITME',
           'LODTE','HIDTE','PRIME','OPTIONS','DIVISION','OVERDUE');
         DCL KEYINDX FIXED BIN(15,0);
         DCL KEYLAB(0:19) LABEL;
         IF PARM ^= ''
           THEN DO;
             CALL PARS(PARM,PARSTR);
             DO I = 1 TO 16 WHILE(PARY(I) ^= '');
              CALL SPARS(PARY(I),KEYTAB,KEYVAL,KEYINDX);
              GO TO KEYLAB(KEYINDX);
 KEYLAB(0):  /* BAD KEYWORD */
              PUT EDIT('BAD OPERAND IN PARM FIELD = ',PARY(I))
                (A,A) SKIP(1);
              SIGNAL ERROR;
              GO TO ENDCASE;
 KEYLAB(1):  /* SUN */
 KEYLAB(2):  /* MON */
 KEYLAB(3):  /* TUE */
 KEYLAB(4):  /* WED */
 KEYLAB(5):  /* THU */
 KEYLAB(6):  /* FRI */
 KEYLAB(7):  /* SAT */
              SUBSTR(DOWMASK,KEYINDX,1) = '1'B;
              GO TO ENDCASE;
 KEYLAB(8):  /* JOBNAME */
              L = LENGTH(KEYVAL);
              IF L > 8
                   THEN L = 8;
              JOBMASK = KEYVAL ×× SUBSTR(JOBMASK,1,8-L);
              GO TO ENDCASE;
 KEYLAB(9):  /* IWTMAX */
              IF VERIFY(KEYVAL,' 0123456789') ^= 0
                   THEN GO TO KEYLAB(0);  /* BAD OPERAND */
              MAXIWT = KEYVAL;
              GO TO ENDCASE;
 KEYLAB(10):  /* JOBCLASS */
              CLMASK = KEYVAL;
              GO TO ENDCASE;
 KEYLAB(11):  /* ACCT */
              L = LENGTH(KEYVAL);
              IF L > 18
                   THEN L = 18;
              ACCTMASK = KEYVAL ×× SUBSTR(ACCTMASK,1,18-L);
              GO TO ENDCASE;
 KEYLAB(12):  /* LOTME */
 KEYLAB(13):  /* HITME */
              IF VERIFY(KEYVAL,' 0123456789') ^= 0
                   THEN GO TO KEYLAB(0); /* BAD OPERAND */
              SELECT(KEYINDX);
                WHEN(12) DO;
                  LOTME = KEYVAL;
                  LOTME = LOTME * 6000;
                  END;
                WHEN(13) DO;
                  HITME = KEYVAL;
                  HITME = HITME * 6000;
                  END;
                END;
              GO TO ENDCASE;
 KEYLAB(14):  /* LODTE */
 KEYLAB(15):  /* HIDTE */
              IF VERIFY(KEYVAL,' 0123456789') ^= 0
                   THEN GO TO KEYLAB(0); /* BAD OPERAND */
              IF LENGTH(KEYVAL) = 5
                   THEN JULDTE = KEYVAL;
                   ELSE JULDTE = GREGJUL(KEYVAL);
              IF KEYINDX = 14
                   THEN LODTE = JULDTE;
                   ELSE HIDTE = JULDTE;
              GO TO ENDCASE;
 KEYLAB(16):  /* PRIME */
              LOTME = 2880000;
              HITME = 5760000;
              DOWMASK = '0111110'B;
              GO TO ENDCASE;
 KEYLAB(17):  /* OPTIONS */
              OPTSW = '1'B;
              GO TO ENDCASE;
 KEYLAB(18):  /* DIVISION */
              DIVMASK = KEYVAL;
              GO TO ENDCASE;
 KEYLAB(19):  /* OVERDUE */
              OVERDUE = 'OVERDUE';
              GO TO ENDCASE;
 ENDCASE:
              END;
            END;
         IF DOWMASK = '0'B
              THEN DOWMASK = (7)'1'B;
         IF MAXIWT ^= 9999
              THEN MAXPRTY = IWTCON(MAXIWT);
         OPEN FILE(SYSPRINT) LINESIZE(132);
         IF OPTSW
           THEN DO;
             DOWSTR = '';
             DO I = 1 TO 7;
               IF SUBSTR(DOWMASK,I,1)
                 THEN DOWSTR = DOWSTR ×× ' ' ××KEYTAB(I);
               END;
             PUT EDIT('IWT DETAIL REPORT, DATE = ',DATE)
               (A,A) PAGE;
             PUT EDIT('OPTIONS FOR THIS REPORT ARE:')(A) SKIP(2);
             PUT EDIT(DOWSTR,' JOBNAME(',JOBMASK,') IWTMAX(',
               MAXIWT,') JOBCLASS(',CLMASK,') ACCT(',
               ACCTMASK,') LOTME(',LOTME/6000,') HITME(',HITME/6000,
               ') LODTE(',LODTE,') HIDTE(',HIDTE,') DIV(',DIVMASK,')',
               OVERDUE)
               (A,A,A,A,P'9999',A,A,A,A,A,P'9999',A,P'9999',
               A,P'99999',A,P'99999',A,A,A,X(1),A) SKIP(1);
             END;
         ON ENDPAGE(SYSPRINT) BEGIN;
           PUT EDIT('IWT DETAIL REPORT, DATE = ',DATE)(A,A) PAGE;
           PUT EDIT('IWT','IWT','JOB','CPU','TOTAL','READ','READ',
             'JOB','JOB')(COL(19),A,COL(24),A,COL(28),A,COL(37),A,
             COL(47),A,COL(55),A,COL(65),A,COL(76),A,COL(86),A)
             SKIP(2);
           PUT EDIT('JOBNAME','ACCT','REQ','REC','CL','TIME',
             'SERVICE','DATE','TIME','START','STOP',
             'PROGRAMMER')(A,COL(12),A,COL(19),A,COL(24),A,COL(29),
             A,COL(36),A,COL(45),A,COL(55),A,COL(65),A,COL(74),A,
             COL(85),A,COL(94),A) SKIP(1);
           PUT SKIP(2);
           END;
         SIGNAL ENDPAGE(SYSPRINT);
         % INCLUDE SMFMVS;
         % INCLUDE SMFDEFI;
         DFT RANGE(*) FIXED BIN VALUE(FIXED BIN(31,0));
         DCL RETCODE FIXED BIN(31,0);
         DCL CTOHMC ENTRY(FIXED BIN(31,0)) RETURNS(CHAR(8));
         DCL ELAPTME ENTRY(FIXED DEC(5,0), FIXED BIN(31,0),
           FIXED DEC(5,0), FIXED BIN(31,0))
           RETURNS(FIXED BIN(31,0));
         DCL PRNTDATE CHAR(8);
         GREGDTE = DATE;
         GREGDTE = SUBSTR(GREGDTE,3,4)××SUBSTR(GREGDTE,1,2);
         PRNTDATE = SUBSTR(GREGDTE,1,2)××'/'××SUBSTR(GREGDTE,3,2)××'/'
           ××SUBSTR(GREGDTE,5,2);
         JULDTE = GREGJUL(GREGDTE);
         DCL (DATE,TIME) BUILTIN;
         DCL PLIRETC BUILTIN;
         DCL PLISRTD BUILTIN;
         CALL PLISRTD(' SORT FIELDS=(19,16,CH,A,6,1,CH,A) ',
           ' RECORD TYPE=V,LENGTH=(400) ',
           150000,
           RETCODE,
           E15,
           E35);
         CALL PLIRETC(0);
 E15:  PROC RETURNS(CHAR(400) VAR);
         DCL OK BIT(1);
         SMFPTR = ADDR(SMFREC);
         SMFADJ = SMFADJ + 2;
         SMF26ADJ1 = SMFADJ + 46;
         ON ENDFILE(SMFDATA) GO TO ENDE15;
         OK = '0'B;
         DO UNTIL(OK);
           DO UNTIL(I = 5 × I = 26);
             READ FILE(SMFDATA) INTO(SMFREC);
             I = TYPE;
             END;
           SELECT;
             WHEN(^MASKOK(SMF5JBN,JOBMASK));
             WHEN(I = 5 & ^ACCTOK);
             WHEN(SMF5RSD < LODTE);
             WHEN(SMF5RSD > HIDTE);
             WHEN((LOTME<HITME) & (SMF5RST<LOTME × SMF5RST>HITME));
             WHEN((LOTME>HITME) & (SMF5RST<LOTME & SMF5RST>HITME));
             WHEN(^SUBSTR(DOWMASK,DOW(SMF5RSD),1));
             WHEN(I = 26 & INDEX(CLMASK,SMF26CLS) = 0); /* OK */
             WHEN(I = 26 & PRTYCON(SMF26XPI) > MAXIWT);
             WHEN(OVERDUE='OVERDUE' & I=26 & PRTYCON(SMF26XPS)^=0);
             OTHERWISE OK = '1'B;
             END;
           END;
         CALL PLIRETC(12);
         RETURN(SMFREC);
 ENDE15:
         CALL PLIRETC(8);
         END E15;
 E35:  PROC(SORTSTR);
         DCL SORTSTR CHAR(*);
         DCL (I,J) FIXED BIN(15,0);
         SMFPTR = ADDR(SORTSTR);
         SMF26ADJ1 = SMFADJ + 46;
         DCL INITSW BIT(1) STATIC INIT('1'B);
         I = TYPE;
         IF I = 5
           THEN DO;
                SMF5REC = SORTSTR;
                INITSW = '0'B;
                END;
           ELSE IF ^INITSW
            THEN IF PTR5->SMF5JBN = SMF26JBN
               & PTR5->SMF5RST = SMF26RST
               & PTR5->SMF5RSD = SMF26RSD
             THEN DO;
               ACTFLD = '';
               IF PTR5->SMF5ACTF ^= '0'B
                 THEN ACTFLD=SUBSTR(PTR5->JACCTFLD,1,PTR5->JACCTLEN);
               PUT EDIT(SMF26JBN,ACTFLD,PRTYCON(SMF26XPI),
                 ELAPTME(PTR5->SMF5RSD,PTR5->SMF5RST,PTR5->SMF5JID,
                 PTR5->SMF5JIT)/6000,SMF26CLS,CTOHMC(PTR5->SMF5JCPU),
                 PTR5->SMF5TJS,SMF26RSD,CTOHMC(SMF26RST),
                 CTOHMC(PTR5->SMF5JIT),CTOHMC(PTR5->WRITME),SMF26NAM)
                 (A,X(2),A(6),X(2),P'ZZ9',X(2),P'ZZ9',X(2),A,X(2),
                 A,X(2),P'ZZ,ZZZ,ZZ9',X(2),P'99999',X(2),A,X(2),
                 A,X(2),A,X(2),A,X(2),A) SKIP(1);
              END;
         END E35;
         CALL PLIRETC(0);
 MASKOK:  PROC(FIELD,MASK) RETURNS(BIT(1));
         DCL (FIELD,MASK) CHAR(*);
         DCL (I,J,K) FIXED BIN;
         DCL OK BIT(1) INIT('1'B);
         L = LENGTH(FIELD);
         DO I = 1 TO LENGTH(MASK) WHILE(OK);
           IF SUBSTR(MASK,I,1) ^= '.'
             THEN IF I > L
               THEN OK = '0'B;
               ELSE IF SUBSTR(MASK,I,1) ^= SUBSTR(FIELD,I,1)
                 THEN OK = '0'B;
           END;
         RETURN(OK);
         END MASKOK;
 ACCTOK:  PROC RETURNS(BIT(1));
         DCL L FIXED BIN(15,0);
         ACTFLD = '';
         IF SMF5ACTF ^= '0'B
           THEN DO;
             L = JACCTLEN;
             ACTFLD = SUBSTR(JACCTFLD,1,L);
             END;
         RETURN(MASKOK(ACTFLD,ACCTMASK) & DIVOK(ACTFLD));
         END ACCTOK;
 DIVOK:  PROC(ACTFLD) RETURNS(BIT(1));
         DCL ACTFLD CHAR(30) VAR;
         DCL L FIXED BIN(15,0);
         DCL DIVCK CHAR(2);
         IF DIVMASK = ''
              THEN RETURN('1'B);
         DIVCK = ACTFLD;
         IF INDEX(DIVMASK,DIVCK) = 0
              THEN RETURN('0'B);
              ELSE RETURN('1'B);
         END DIVOK;
         END;
