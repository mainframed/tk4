 /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
 /* ABE023 - SORT,SORTL - BUBBLE SORT */
   %INCLUDE ABESUB;
 ABESUB(ABE023) PARS(000000000000000) CHECK(YES);
   %INCLUDE ABESUBA;
   DCL 1 LRN_STRUCTURE BASED(LRNPTR),
   %INCLUDE ABELRN;
   %INCLUDE ABELRNA;

   /*            1    2    3 */
   /*      SORT  OFF1 LEN1 SEQ1 ... OFFN LENN SEQN */
   /*            1    2    3 */
   /*      SORTL OFF1 LEN1 SEQ1 ... OFFN LENN SEQN */
   DCL (TMPPTR,SAVNXT,SAVCUR,FPTR,LPTR) PTR;
   DCL LAST FIXED BIN(31,0) INIT(99999999);
   DCL (OF(2),LE(2)) FIXED BIN(15,0);
   DCL SETCAPS ENTRY;
   DCL 1 SCTL(5),
     2 OFF FIXED BIN(15,0),
     2 LEN FIXED BIN(15,0),
     2 SEQ CHAR(1);
   DCL SORTED BIT(1);

   IF CMDINDX=3 /* IS IT SORTL? */
     THEN DO;
       L1=RH_L1;
       L2=RH_L2;
       IF L1>L2
         THEN DO; /* PROCESS FRONT TO BACK ONLY */
           I=L1;
           L1=L2;
           L2=I;
           END;
       CALL #MD(RHPTR,RHHDRPT,L1); /* CALL MDPROC */
       IF RECPTR^=HDPTR
         THEN FPTR=LSTPTR;
       CALL #MD(RHPTR,RHHDRPT,L2); /* CALL MDPROC */
       IF RECPTR^=HDPTR
         THEN LPTR=NXTPTR;
       IF CURSEQ >= L1 & CURSEQ <= L2
         THEN IF FPTR^=HDPTR
           THEN SAVCUR=FPTR->LSTPTR;
           ELSE SAVCUR=HDPTR;
       END;
     ELSE DO;
       FPTR,LPTR=HDPTR;
       SAVCUR=HDPTR;
       END;
   DO IX = 0 TO 4 WHILE(PARY(IX*3+1)^='');
     OFF(IX+1) = PARY(IX*3+1);
     LEN(IX+1) = PARY(IX*3+2);
     SEQ(IX+1) = PARY(IX*3+3);
     CALL SETCAPS(SEQ(IX+1));
     END;
   DO IX=IX TO 1 BY -1;
     DO RECPTR=FPTR->NXTPTR REPEAT NXTPTR WHILE(RECPTR^=LPTR);
       IF NXTPTR=LPTR THEN LEAVE;
       SORTED = '1'B;
       TMPPTR=RECPTR;
       DO IS = 1 TO 2;
         IF OFF(IX)+LEN(IX)-1 > LENGTH(TMPPTR->RECSTR)
           THEN IF OFF(IX) > LENGTH(TMPPTR->RECSTR)
             THEN DO;
               OF(IS)=1;
               LE(IS)=0;
               END;
             ELSE DO;
               OF(IS)=OFF(IX);
               LE(IS)=LENGTH(TMPPTR->RECSTR)-OFF(IX)+1;
               END;
           ELSE DO;
             OF(IS)=OFF(IX);
             LE(IS)=LEN(IX);
             END;
         TMPPTR=NXTPTR;
         END;
       SELECT(SEQ(IX));
         WHEN('A') IF SUBSTR(RECSTR,OF(1),LE(1)) >
           SUBSTR(NXTPTR->RECSTR,OF(2),LE(2))
           THEN SORTED = '0'B;
         WHEN('D') IF SUBSTR(RECSTR,OF(1),LE(2)) <
           SUBSTR(NXTPTR->RECSTR,OF(2),LE(2))
           THEN SORTED = '0'B;
         OTHERWISE IF SUBSTR(RECSTR,OF(1),LE(1)) >
           SUBSTR(NXTPTR->RECSTR,OF(2),LE(2))
           THEN SORTED = '0'B;
         END;
       IF ^SORTED
         THEN DO;
           IF LSTPTR=FPTR
             THEN SAVNXT = NXTPTR;
             ELSE SAVNXT = LSTPTR->LSTPTR;
           TMPPTR = NXTPTR;
           LSTPTR->NXTPTR = NXTPTR;
           NXTPTR->LSTPTR = LSTPTR;
           LSTPTR = TMPPTR;
           NXTPTR = TMPPTR->NXTPTR;
           LSTPTR->NXTPTR = RECPTR;
           NXTPTR->LSTPTR = RECPTR;
           RECPTR = SAVNXT;
           END;
       END;
     END;
   IF SAVCUR=HDPTR
     THEN SAVCUR=NXTHDR;
   CALL #NC(RHPTR,SAVCUR); /* CALL ABENC */
   CALL #RESEQ(RHPTR,RHHDRPT,HDPTR,'NOSAVE','RENUM',LAST);
   SAVEFLAG = '1'B;
   RHRC = 0;
   END ABE023;
