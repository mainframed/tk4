  /* ALCASAR */
  ALCASAR:PROC(PSCP,MPTR,QPTR,FL) RECURSIVE RETURNS(PTR)
    OPTIONS(REENTRANT);
    DCL (PSCP,MPTR,QPTR) PTR;
    DCL FL BIT(8);
    /* THIS SUBROUTINE WILL ALLOCATE AN ELEMENT AND ADD IT TO THE ARRAY.
    PSCP POINTS TO THE CSEL CONTAINING THE ASSOCIATIVE ADDRESS OF THE
         ELEMENT TO BE ADDED.
    MPTR POINTS TO THE ASARELS THAT IS THE HEADER FOR THIS
         GROUP.
    QPTR POINTS TO ELEMENT BEHIND WHICH NEW ELEMENT IS TO BE QUEUED.
    FL CONTAINS THE FLAGS TO BE STORED IN ASARELFL OF THE NEW ASARELS.
    THE ADDRESS OF THE NEWLY CREATED ELEMENT WILL BE RETURNED TO THE
         CALLER.
    NOTE THAT THE ELEMENT WILL BE ALLOCATED AND ADDED TO THE ARRAY,
    BUT ASAREL IN THE NEW ELEMENT WILL BE SET TO NULL.
    */
    % INCLUDE ASARDCL;
    DCL SPLASAR ENTRY(PTR);
    DCL (I,L) FIXED BIN(15,0);
    DCL TPT PTR;
    DCL WRKP PTR BASED(WRKPP);
    ALLOCATE ASARELS;
    ASARELIX=PSCP;
    ASAREL=NULL;
    ASARLP=QPTR; /* A(PRIOR ASARELS OR NULL IF FIRST) */
    IF ASARLP=NULL
      THEN DO;
        ASARNP=MPTR->ASAREL;
        MPTR->ASAREL=ASARELP;
        END;
      ELSE DO;
        ASARNP=ASARLP->ASARNP;
        ASARLP->ASARNP=ASARELP;
        END;
    IF ASARNP^=NULL
      THEN ASARNP->ASARLP=ASARELP;
    IF ASARLP=NULL
      THEN DO;
        /* IT IS NEW FIRST-IN-GROUP */
        IF ASARNP=NULL
          THEN DO;
            ASARIXC=0; /* INITIALIZE GROUP COUNT */
            ASARIXP=MPTR; /* INITIALIZE GROUP HEAD PTR */
            ASARFGP,ASARLGP=ASARELP;
            END;
          ELSE DO;
            ASARIXC=ASARNP->ASARIXC; /* COPY GROUP COUNT */
            ASARIXP=ASARNP->ASARIXP; /* COPY UPLEVEL PTR */
            ASARLGP=ASARNP->ASARLGP;
            END;
        DO TPT=ASARELP REPEAT TPT->ASARNP WHILE(TPT^=NULL);
          /* THE NEW ELEMENT IS FIRST IN GROUP */
          TPT->ASARFGP=ASARELP;
          END;
        END;
      ELSE DO;
        ASARFGP=ASARLP->ASARFGP;
        ASARIXC=0; /* NOT NECESSARY, BUT TIDY */
        ASARIXP=NULL; /* NOT NECESSARY, BUT TIDY */
        END;
    ASARFGP->ASARIXC=ASARFGP->ASARIXC+1;
    ASARELFL=FL;
    IF ASARNP=NULL
      THEN DO;
        /* THIS IS NEW LAST-IN-GROUP */
        ASARFGP->ASARLGP=ASARELP;
        TPT=ASARFGP->ASARIXP; /* TPT=A(HIGHER LEVEL ASARELS) */
        IF SUBSTR(TPT->ASARELFL,1,1) /* IS IT INDEX ASARELS? */
          THEN TPT->ASARELIX=PSCP; /* IF SO, UPDATE HIGH KEY IN INDEX
            ASARELS */
        END;
    TPT=ASARFGP; /* TPT = A(FIRST-IN-GROUP) */
    IF TPT->ASARIXC > ASARTHRESH
      THEN CALL SPLASAR(TPT); /* GO SPLIT GROUP */
    RETURN(ASARELP);
    END;
