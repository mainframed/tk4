*$.HE GENERALIZED UTILITIES - CORESIZE
*$.HE FRONT END TO ENSURE CORRECT REGION SIZE
*$.PL 55
*$.PN 0
*$.PA
*$.SS
*$.NF
*$2/17/76
*$AUTHOR:  T. SMITH
*$SOURCE MODULE NAME:  CORESIZE
*$DOCUMENTATION ID:  *$
*$.FI L
*$.SP 5
*$USE THIS UTILITY TO ENSURE THAT THE CURRENT REGION SIZE IS LARGE
*$ENOUGH.  USE THE FOLLOWING FORMAT TO INVOKE THE UTILITY:
*$.SP 1
*$.IN 10
*$//STEPNAME EXEC PGM=CORESIZE,PARM='DDDK,PGMNAME,PGMPARM'
*$.SP 1
*$WHERE:
*$.SP 1
*$DDD IS A STRING OF 1 TO 8 DECIMAL DIGITS SPECIFYING THE MINIMUM
*$ACCEPTABLE REGION SIZE IN K.
*$.SP 1
*$PGMNAME IS A STRING OF 1 TO 8 CHARACTERS SPECIFYING THE PROGRAM TO
*$WHICH CONTROL IS TO BE PASSED ONCE IT IS DETERMINED THAT THE CURRENT
*$REGION IS LARGE ENOUGH.
*$.SP 1
*$PGMPARM IS A CHARACTER STRING TO BE PASSED TO THE INVOKED PROGRAM AS
*$THE PARM FIELD FROM THE EXEC STATEMENT.
*$.SP 1
*$.IN 0
*$IF THE REGION SIZE ISN'T LARGE ENOUGH, THIS UTILITY WILL ABEND WITH
*$A USER COMPLETION CODE OF 80A.  IF THE PARM FIELD INFORMATION ISN'T
*$SYNTACTICALLY CORRECT, THE PROGRAM WILL ABEND WITH A USER COMPLETION
*$CODE OF 0.
CORESIZE CSECT
         SAVES RETCTL
         TGSREQU
         LR    RE,R1
         L     R2,16                   R2=A(CVT)
         L     R2,0(R2)                R2=A(IEATCBP)
         L     R2,4(R2)                R2=A(MYTCB)
         L     R2,X'98'(R2)            R2=A(DUMMY PQE-8)
         L     R2,8(R2)                R2=A(REAL PQE)
         L     R2,X'14'(R2)               R2=REGSIZE IN BYTES
         SRL   R2,10                   R2=REGSIZE IN K
         LA    R5,1
         LA    RB,SETK
         L     R1,0(R1)                R1=A(PARMLEN)
         LA    R1,0(R1)                CLEAR HI-BYTE
         LH    R3,0(R1)                R1 = LEN(PARM)
         LA    RA,2(R1)                RA = A(PARM)
         LR    R4,RA                   SO DOES R4
LOOPA    DS    0H
         LTR   R3,R3                   IS PARM EMPTY?
         BC    8,BADPARM               BR IF YES
LOOP     DS    0H
         CLI   0(RA),C','              IS IT COMMA?
         BC    8,SETNXT                BR IF YES
         AR    RA,R5                   BUMP RA BY 1
         SR    R3,R5                   DECR R3 BY 1
         BC    2,LOOP                  BR IF MORE TO DO
SETNXT   DS    0H
         LR    R6,RA
         SR    R6,R4                   R6 = LEN(THIS ENTITY)
         BCTR  R6,0                    LESS 1 FOR EX
         LR    R7,R4                   R7 = A(THIS ENTITY)
         LTR   R3,R3                   IS IT LAST ENTITY
         BCR   8,RB                    BR IF YES
         AR    RA,R5                   BUMP RA FOR COMMA
         LR    R4,RA                   SET R4
         SR    R3,R5                   DECR R3 FOR COMMA
         BR    RB                      GO SET THIS ENTITY
SETK     DS    0H
         LA    R8,0(R6,R7)             R8 = A(LAST CHAR THIS ENTITY)
         CLI   0(R8),C'K'              DID HE SAY DDDK?
         BC    7,DOPACK                BR IF NOT
         BCTR  R6,0                    ELSE DON'T MOVE 'K'
DOPACK   DS    0H
         EX    R6,PACKINS
         CVB   R9,DBLEWD
         LA    RB,SETPGM
         CR    R2,R9                   IS REGION BIG ENOUGH?
         BC    10,LOOPA                BR IF YES
         ABEND 2058                    ELSE ABEND
PACKINS  PACK  DBLEWD(8),0(0,R7)
DBLEWD   DS    D
SETPGM   DS    0H
         EX    R6,MVCPGM               MOVE PGM NAME
         STH   R3,0(R1)                SET NEW PARM LEN
         SR    R3,R5                   LESS 1 FOR EX
         BC    4,DOXCTL                BR IF NOTHING TO MOVE
         EX    R3,MVCPARM              MOVE PARM
DOXCTL   DS    0H
         LR    R1,RE                   RESTORE R1
         L     RD,4(RD)                RESTORE DSA PTR
         XCTL  (2,12),EPLOC=PGMNAME
MVCPGM   MVC   PGMNAME(0),0(R7)
MVCPARM  MVC   2(0,R1),0(RA)
PGMNAME  DC    CL8' '
BADPARM  ABEND 0
         LTORG
         END
