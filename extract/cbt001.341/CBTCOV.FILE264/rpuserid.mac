 RPUSER: PROC(PARM) OPTIONS(MAIN);
         DCL PARM CHAR(100) VAR;
         /* PARM IS SET TO 1, 2, OR 3 TO INDICATE HOW MANY OF
            THE THREE POSSIBLE REPORTS ARE TO BE GENERATED. */
         % DCL ITFACT CHAR;
         % ITFACT = '1000';
         DFT RANGE(*) FIXED BIN VALUE(FIXED BIN(31,0));
         DCL PLIXOPT CHAR(15) VAR EXT STATIC INIT('ISA(200K)');
         DCL (SEQINDX,SEQSTRT) FIXED BIN(15,0);
         DCL 1 SEQAG UNALIGNED STATIC,
              2 CON1 CHAR(6) INIT('PRINT('),
              2 SEQPIC PIC'9',
              2 CON2 CHAR(1) INIT(')');
         DCL SEQAGD CHAR(8) DEF SEQAG;
         DCL SEQTIT(3) CHAR(80) VAR STATIC INIT(
           '(SEQUENCE DESCENDING BY CPU USAGE)',
           '(SEQUENCE BY USERID)',
           '(SEQUENCE BY USERID WITHIN BILLED DIV/DEPT)');
         DCL SEQCK(3) ENTRY RETURNS(BIT(1));
         SEQCK(1) = PIGCK;
         SEQCK(2) = UIDCK;
         SEQCK(3) = DIVCK;
         DCL 1 UIDARRAY (ITFACT),
              2 UID CHAR(8) INIT((ITFACT) (8)' '),
              2 TGETCUM FIXED BIN(31,0) INIT((ITFACT) 0),
                   /* NUMBER OF TGETS */
              2 TPUTCUM FIXED BIN(31,0) INIT((ITFACT) 0),
                   /* NUMBER OF TPUTS */
              2 LOGTCUM FIXED BIN(31,0) INIT((ITFACT) 0),
                   /* ELAPSED SESSION TIME */
              2 LOGTCNT FIXED BIN(31,0) INIT((ITFACT) 0),
                   /* NUMBER OF LOGONS */
              2 CPUTCUM FIXED BIN(31,0) INIT((ITFACT) 0),
                   /* CPU TIME */
              2 DIVDEP CHAR(5) INIT((ITFACT) (8)' '),
                   /* PRIMARY DIVDEP */
              2 BDIVDEP CHAR(5) INIT((ITFACT) (8)' ');
                   /* BILLING DIVDEP */
         DCL 1 SRTSAV,
              2 SRT1 CHAR(8),
              2 SRT2 FIXED BIN(31,0),
              2 SRT3 FIXED BIN(31,0),
              2 SRT4 FIXED BIN(31,0),
              2 SRT5 FIXED BIN(31,0),
              2 SRT6 FIXED BIN(31,0),
              2 SRT7 CHAR(5),
              2 SRT8 CHAR(5);
         DCL SORTSW BIT(1);
         DCL UIDCNT FIXED BIN INIT(ITFACT);
         % INCLUDE SMFMVST;
         % INCLUDE SMFDEFI;
         DCL ELAPTME ENTRY(FIXED DEC(5,0), FIXED BIN(31,0),
                           FIXED DEC(5,0), FIXED BIN(31,0))
           RETURNS(FIXED BIN(31,0));
         DCL ROMAN ENTRY(FIXED BIN(15,0))
           RETURNS(CHAR(15) VAR);
         DCL PAGE FIXED BIN(15,0) INIT(0);
         DCL SUFFIX ENTRY(CHAR(*),CHAR(*))
           RETURNS(FIXED BIN(15,0));
 /*      DCL TSOACCT ENTRY(CHAR(8) VAR)
           RETURNS(CHAR(5));
 */      DCL SPELDTE ENTRY(CHAR(6))
           RETURNS(CHAR(40) VAR);
         DCL (DATE,LOW) BUILTIN;
         DCL CTOHMC ENTRY(FIXED BIN(31,0))
           RETURNS(CHAR(9));
         DCL CTLDD CHAR(5);
         DCL TITSTR CHAR(80) VAR;
         DCL ACTPTR PTR,
             ACTADJ FIXED BIN(31,0) DEF ACTPTR;
         DCL 1 ACTFLDS BASED(ACTPTR),
              2 MYACTLEN BIT(8),
              2 MYACTFLD CHAR(144);
         DCL CURACT CHAR(5);
 ON ENDPAGE(SYSPRINT) BEGIN;
         PUT PAGE;
         PAGE = PAGE + 1;
         IF INDEX(PARM,'MONTHLY')^=0
              THEN PUT STRING(TITSTR)
                EDIT('MONTH-TO-DATE TSO USAGE REPORT, DATE=',
                SPELDTE(DATE))(A,A);
              ELSE PUT STRING(TITSTR)
                EDIT('DAILY TSO USAGE REPORT, DATE=',
                SPELDTE(DATE))(A,A);
         PUT EDIT(TITSTR,'PAGE ',ROMAN(PAGE))
           (COL(38-LENGTH(TITSTR)/2),A,COL(73),A,A);
         PUT EDIT(SEQTIT(SEQINDX))
           (COL(38-LENGTH(SEQTIT(SEQINDX))/2),A) SKIP(1);
         PUT EDIT('BILLED','TSO','TOTAL')
           (COL(8),A,COL(26),A,COL(47),A) SKIP(2);
         PUT EDIT('DIV/','DIV/','USAGE','CPU TIME','SESSION TIME')
           (A,COL(8),A,COL(25),A,COL(33),A,COL(44),A) SKIP(1);
         PUT EDIT('DEPT','DEPT','USERID','COSTS','HH:MM:SS','HH:MM:SS',
           'LOGONS','TGETS','TPUTS')
           (A,COL(8),A,COL(15),A,COL(25),A,COL(33),A,COL(46),A,
           COL(58),A,COL(68),A,COL(75),A) SKIP(1);
         PUT SKIP(2);
         END;
         ON ENDFILE(SMFDATA) GO TO DOREPORT;
       DO FOREVER=1 REPEAT FOREVER;
         READ FILE(SMFDATA) INTO(SMFREC);
         I = TSOTYPE;
         IF I = 35
           THEN DO;
             ACTLEN = TLGNBRAC;
             ACTPTR = ADDR(TLGACFLD);
             IF ACTLEN = 0
                  THEN CURACT = '';
                  ELSE DO;
                       IACT = MYACTLEN;
                       IF IACT >= 6
                            THEN CURACT = SUBSTR(MYACTFLD,1,2)××
                              SUBSTR(MYACTFLD,4,3);
                            ELSE CURACT = SUBSTR(MYACTFLD,1,IACT);
                       END;
             DO I = 1 TO ITFACT WHILE((UID(I)^='')
               &(UID(I)××BDIVDEP(I)^=TLGUIF××CURACT));
               END;
             IF I > ITFACT
               THEN DO;
                 PUT EDIT('# USERIDS EXCEEDED TABLE SIZE =',I)
                   (A,P'Z,ZZ9') SKIP(1);
                 SIGNAL ERROR;
                 END;
             UID(I) = TLGUIF;
             BDIVDEP(I) = CURACT;
             LOGTCNT(I) = LOGTCNT(I) + 1;
             TGETCUM(I) = TGETCUM(I) + TLGINCT;
             TPUTCUM(I) = TPUTCUM(I) + TLGOUTCT;
             WRKFLD = TLGCPUTM;
             CPUTCUM(I) = CPUTCUM(I) + WRKFLD;
             LOGTCUM(I) = LOGTCUM(I) + ELAPTME(TLGONDTE,TLGONTME,
               SMFTWDTE,SMFTWTME);
             END;
         END;
 DOREPORT:
 /*      DO I = 1 TO ITFACT WHILE(UID(I)^='');
              DIVDEP(I) = TSOACCT(SUBSTR(UID(I),1,SUFFIX(UID(I),' ')));
              END;
 */    DO SEQINDX=1 TO 3;
         SEQPIC = SEQINDX;
         IF (INDEX(PARM,SEQAGD)^=0) × (SEQINDX=3)
           THEN DO;
             DO UNTIL(^SORTSW);
              SORTSW = '0'B;
              DO I = 1 TO ITFACT WHILE(UID(I+1)^=' ');
                   IF SEQCK(SEQINDX)
                        THEN DO;
                             SORTSW = '1'B;
                             SRTSAV = UIDARRAY(I);
                             UIDARRAY(I) = UIDARRAY(I+1);
                             UIDARRAY(I+1) = SRTSAV;
                             END;
                   END;
              END;
             CTLDD = LOW(1);
             TOT = 0;
             SIGNAL ENDPAGE(SYSPRINT);
             DO I = 1 TO ITFACT WHILE(UID(I) ^= '');
               IF (SEQINDX=3) & (BDIVDEP(I)^=CTLDD)
                THEN DO;
                 IF CTLDD ^= LOW(1)
                 THEN
                 PUT EDIT('TOTAL COST = ',TOT)(COL(7),A,P'ZZ,ZZ9.99')
                   SKIP(1);
                 PUT SKIP(1);
                 CTLDD = BDIVDEP(I);
                 TOT=0;
                 END;
             COST = CPUTCUM(I)*58/100;
             TOT = TOT + COST;
             PUT EDIT(DIVDEP(I),
               BDIVDEP(I),
               UID(I),
               CPUTCUM(I)*58/100,
               DOT(CPUTCUM(I)),
               DOT(LOGTCUM(I)),
               LOGTCNT(I),
               TGETCUM(I),
               TPUTCUM(I))
              (A,
               COL(8),A,
               COL(15),A,
               COL(23),P'ZZZ9.99',
               COL(32),A,
               COL(45),A,
               COL(61),P'ZZ9',
               COL(67),P'ZZ,ZZ9',
               COL(74),P'ZZ,ZZ9') SKIP(1);
             END;
           IF SEQINDX ^= 3
            THEN PUT EDIT('TOTAL COST = ',TOT)(COL(7),A,P'ZZ,ZZ9.99')
                   SKIP(2);
           END;
         END;
 PIGCK:  PROC RETURNS(BIT(1));
         IF CPUTCUM(I) < CPUTCUM(I+1)
              THEN RETURN('1'B); /* OUT OF SEQUENCE */
              ELSE RETURN('0'B); /* SEQUENCE OK */
         END PIGCK;
 UIDCK:  PROC RETURNS(BIT(1));
         IF UID(I)××BDIVDEP(I) > UID(I+1)××BDIVDEP(I+1)
              THEN RETURN('1'B); /* OUT OF SEQUENCE */
              ELSE RETURN('0'B); /* SEQUENCE OK */
         END UIDCK;
 DIVCK:  PROC RETURNS(BIT(1));
         IF BDIVDEP(I)××UID(I) > BDIVDEP(I+1)××UID(I+1)
              THEN RETURN('1'B); /* OUT OF SEQUENCE */
              ELSE RETURN('0'B); /* SEQUENCE OK */
         END DIVCK;
 DOT:  PROC(TME) RETURNS(CHAR(9));
         DCL TME FIXED BIN(31,0);
         DCL CHTME CHAR(9);
         DCL I FIXED BIN(15,0);
         CHTME = CTOHMC(TME);
         IF SUBSTR(CHTME,4,1) ^= ':'
              THEN CHTME = ' '××CHTME;
         DO UNTIL(I=0);
              I = INDEX(CHTME,'00:');
              IF I ^= 0
                   THEN SUBSTR(CHTME,I,3) = '';
              END;
         RETURN(CHTME);
         END DOT;
         END;
