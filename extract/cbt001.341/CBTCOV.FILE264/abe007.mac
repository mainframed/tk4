  /* COPYRIGHT 1983 BY THOMAS GLEN SMITH */
  /* ABE007 - BLANK,BL SUBCOMMANDS */
  /* 1        1     2              */
   %INCLUDE ABESUB;
 ABESUB(ABE007) PARS(1) CHECK(YES);
   %INCLUDE ABESUBA;
   DCL 1 LRN_STRUCTURE BASED(LRNPTR),
   %INCLUDE ABELRN;
   %INCLUDE ABELRNA;
   %INCLUDE APLCB;

   DCL PREFIX ENTRY(CHAR(*),CHAR(*))RETURNS(FIXED BIN(15,0));
   DCL (ORGPTR,SAVPTR,STACK) PTR;
   DCL APLMEM FIXED BIN(15,0);
   DCL 1 STEL BASED(STELPTR),
     2 STELNXT PTR,
     2 STELVAL PTR;

   STACK=NULL;
   IF PARY(1) =''
     THEN CNT = 1; /* DEFAULT # BLANKS IS 1 */
     ELSE DO;
       CNT = PARY(1);
       IF CNT<=0
         THEN DO;
           MSGDATA='OPERAND MUST BE GREATER THAN 0';
           RHRC=8;
           RETURN;
           END;
       END;

   BUF ='';
   IF RH_APL=NULL
     THEN APLMEM=0;
     ELSE DO; /* ADDITIONAL MEMORY REQUIRED FOR APL VARIABLE */
       I=RH_APL_RHCOUNT*RH_APL_ELCOUNT*RH_APL_ELEN-BUFLN; /* NEEDED */
       DO APLMEM=1 REPEAT APLMEM+1 WHILE(APLMEM**2<I);
         END;
       END;

   /* MAINLINE */
   ORGPTR=RECPTR;
   J=RH_L1+RH_L2;
   IF RH_L1=0
     THEN DO; /* SPECIAL PROCESSING */
       ORGPTR=RHPTR;
       ALLOCATE STEL SET(STELPTR);
       STELNXT=STACK;
       STACK=STELPTR;
       STELVAL=RHPTR;
       SAVPTR=NULL;
       DO I=1 TO RH_INCR UNTIL(SAVPTR=LRN_RHP);
         SAVPTR=#SUCC(RHHDRPT,LRN_RHP,SAVPTR);
         END;
       IF SAVPTR^=LRN_RHP
         THEN RH_L1=SAVPTR->RECSEQ;
       END;
   IF J^=0
     THEN DO FOREVER=1 REPEAT FOREVER;
       CALL #ABELSP(RHHDRPT,LRNPTR); /* RECPTR ALSO W/B ALTERED */
       IF LRN_BUFP=NULL
         THEN LEAVE; /* ALL DONE */
       ALLOCATE STEL SET(STELPTR);
       STELNXT=STACK;
       STACK=STELPTR;
       STELVAL=LRN_RHP->RECPTR;
       END;
   DO STELPTR=STACK REPEAT STACK WHILE(STELPTR^=NULL);
     CALL BLPROC(CNT,STELVAL); /* GO INSERT BLANKS */
     STACK=STELNXT;
     FREE STEL;
     END;
   IF ORGPTR=RHPTR
     THEN CALL #NC(RHPTR,NXTHDR);
   RHRC=0;
   RETURN;

 BLPROC: PROC(PRM,PRMPTR);
 /**********************************************************************
 *                                                                     *
 * BLPROC IS CALLED TO INSERT I LINES BEHIND THE CURRENT LINE.         *
 *                                                                     *
 **********************************************************************/
   DCL (I,J,K,L,PRM) FIXED BIN;
   DCL LAST FIXED BIN(31,0) INIT(99999999);
   DCL (CURPTR,PRMPTR,SAVPTR) PTR;
   DCL CURBIN FIXED BIN(15,0),CURBIT BIT(16) DEF CURBIN;

   SAVPTR,CURPTR = PRMPTR;
   I=PRM;
   DO I = I TO 1 BY -1;
     SEQ = -1;
     CALL #ADD(RHPTR,RHHDRPT,SAVPTR,SAVPTR,SEQ,BUF,APLMEM);
     END;
   IF CURPTR->NXTPTR^=HDPTR
     THEN IF CURPTR^=HDPTR
       THEN IF ^SUBSTR(CURPTR->RECFLGS,3,1)
         THEN DO;
           SUBSTR(CURPTR->NXTPTR->RECFLGS,3,1)='1'B;
           CURBIN=PREFIX(CURPTR->RECSTR,' ')-1;
           CURPTR->NXTPTR->RECRES=SUBSTR(CURBIT,9,8);
           END;
         ELSE;
       ELSE SUBSTR(CURPTR->NXTPTR->RECFLGS,3,1)='1'B;
   CALL #RESEQ(RHPTR,RHHDRPT,SAVPTR->LSTPTR,'NOSAVE','NORENUM',LAST);
   END BLPROC;

   END ABE007;
