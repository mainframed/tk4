 /* TRANSFER
0*$.HE GENERALIZED UTILITIES - TRANSFER
0*$.HE CONVERT TO 80-COLUMN FIXED-LENGTH RECORDS
0*$.PL 55
0*$.PN 0
0*$.PA
0*$.SS
0*$.NF
0*$04/09/87
0*$AUTHOR:  T. SMITH
0*$SOURCE MODULE NAME:  TRANSFER
0*$DOCUMENTATION ID:  0*$
0*$.FI L
0*$.SP 5
0*$THE TRANSFER UTILITY CAN BE USED TO CONVERT A FILE TO 80-COLUMN
0*$FIXED-LENGTH RECORDS, AND THEN LATER TO CONVERT BACK TO THE
0*$ORIGINAL FILE FORMAT.  SAMPLE JCL FOLLOWS:
0*$.NF
0*$.SP 1
0*$// EXEC PGM=TRANSFER,PARM='/<SPEC>'
0*$//SYSPRINT DD SYSOUT=*
0*$//IN       DD DSN=....DEFINES INPUT FILE
0*$//OUT      DD DSN=....DEFINES OUTPUT FILE
0*$.FI L
0*$.SP 1
0*$IF PARM='/TO80' IS SPECIFIED, DDNAME "IN" IDENTIFIES AN INPUT
0*$FILE TO BE CONVERTED TO 80-COLUMN FIXED-LENGTH RECORDS ON DDNAME
0*$"OUT".  IF PARM='/FROM80' IS SPECIFIED, DDNAME "IN" IDENTIFIES
0*$A FILE OF CONVERTED 80-COLUMN FIXED-LENGTH RECORDS TO BE CONVERTED
0*$BACK TO THE ORIGINAL FORMAT ON FILE "OUT".  EXAMPLES FOLLOW.
0*$.SP 1
0*$IF PARM IS OMITTED, THE DEFAULT IS "PARM='/TO80'".  "TO80" AND
0*$"FROM80" MAY BE ABBREVIATED DOWN TO AS LITTLE AS 1 CHARACTER, E.G.
0*$"T" AND "F" ARE BOTH ACCEPTABLE.
0*$.SP 1
0*$SOME SAMPLE JCL FOLLOWS:
0*$.NF
0*$.SP 1
0*$//S1 EXEC PGM=TRANSFER,PARM='/TO80'
0*$//*CONVERTS TO 80-COLUMN RECORDS
0*$//SYSPRINT DD SYSOUT=*
0*$//IN       DD DSN=XYZ,DISP=SHR
0*$//OUT      DD DSN=&&FILE,DISP=(NEW,PASS),
0*$//            UNIT=DISK,SPACE=(TRK,(10,10)),
0*$//            DCB=(LRECL=80,BLKSIZE=6400,RECFM=FB)
0*$//S2 EXEC PGM=TRANSFER,PARM='/FROM80'
0*$//*CONVERTS FROM 80-COLUMN RECORDS
0*$//SYSPRINT DD SYSOUT=*
0*$//IN       DD DSN=&&FILE,DISP=(OLD,DELETE)
0*$//OUT      DD DSN=&&XYZ,DISP=(NEW,PASS),
0*$//            UNIT=DISK,SPACE=(TRK,(10,10)),
0*$//            DCB=XYZ
0*$.FI L
0*$.SP 1
 */
 TRANSFER: PROC(PARM) OPTIONS(MAIN);
   DCL PARM CHAR(100) VAR;
   DCL (INREC,OUTREC) CHAR(32767) VAR INIT('');
   DCL TO80SW BIT(1) INIT('1'B);
   DCL EOFSW BIT(1) INIT('0'B);

   PARM=TRANSLATE(PARM,'TOFROM','tofrom');
   SELECT;
     WHEN(PARM='') TO80SW='1'B;
     WHEN(SUBSTR('TO80',1,LENGTH(PARM))=PARM) TO80SW='1'B;
     WHEN(SUBSTR('FROM80',1,LENGTH(PARM))=PARM) TO80SW='0'B;
     OTHERWISE DO;
       PUT SKIP EDIT('ERROR - INVALID PARM FIELD="',PARM,'"')(A,A,A);
       SIGNAL ERROR;
       END;
     END; /* SELECT */
   OPEN FILE(OUT) RECORD OUTPUT;
   ON ENDFILE(IN) EOFSW='1'B;
   IF TO80SW
     THEN CALL TO80;
     ELSE CALL FROM80;


 FROM80: PROC; /* RESTORE FROM 80 TO WHATEVER */
   DO WHILE(^EOFSW);
     OUTREC=INP(GETHALF);
     IF LENGTH(OUTREC)^=0
       THEN WRITE FILE(OUT) FROM(OUTREC);
     END;
   END FROM80;

 GETHALF: PROC RETURNS(FIXED BIN(15,0));
   DCL RET FIXED BIN(15,0),
       INCH CHAR(2) BASED(ADDR(RET));
   INCH=INP(2)××LOW(2);
   RETURN(RET);
   END GETHALF;

 INP: PROC(LEN) RETURNS(CHAR(32767) VAR) RECURSIVE;
   DCL LEN FIXED BIN;
   DCL RET CHAR(32767) VAR;

   SELECT;
     WHEN(LEN=LENGTH(INREC)) DO;
       RET=INREC;
       INREC='';
       END;
     WHEN(LEN<LENGTH(INREC)) DO;
       RET=SUBSTR(INREC,1,LEN);
       INREC=SUBSTR(INREC,LEN+1);
       END;
     OTHERWISE DO; /* REMAINDER IN INREC TOO SMALL */
       RET=INREC;
       INREC='';
       IF ^EOFSW
         THEN DO;
           READ FILE(IN) INTO(INREC);
           IF EOFSW
             THEN INREC='';
             ELSE RET=RET××INP(LEN-LENGTH(RET));
           END;
       END;
     END; /* SELECT */
   RETURN(RET);
   END INP;

 TO80: PROC; /* CONVERT TO 80-COLUMN RECORDS */
   CALL TO80_SUB;
   IF LENGTH(OUTREC)^=0
     THEN DO;
       OUTREC=OUTREC××LOW(80-LENGTH(OUTREC));
       WRITE FILE(OUT) FROM(OUTREC);
       END;
   END TO80;

 TO80_SUB: PROC; /* CONVERT TO 80-COLUMN RECORDS */
   DCL I FIXED BIN(15,0),
       ICH CHAR(2) BASED(ADDR(I));

   DO WHILE(^EOFSW); /* CONVERT TO 80-COLUMN RECORDS */
     READ FILE(IN) INTO(INREC);
     IF EOFSW
       THEN LEAVE;
     I=LENGTH(INREC);
     IF I=0
       THEN DO;
         PUT SKIP EDIT('ERROR - INPUT FILE CONTAINS ZERO LENGTH RECORD')
           (A);
         SIGNAL ERROR;
         END;
     SELECT;
       WHEN(LENGTH(OUTREC)=80) DO;
         WRITE FILE(OUT) FROM(OUTREC);
         OUTREC=ICH;
         END;
       WHEN(LENGTH(OUTREC)=79) DO;
         OUTREC=OUTREC××SUBSTR(ICH,1,1);
         WRITE FILE(OUT) FROM(OUTREC);
         OUTREC=SUBSTR(ICH,2,1);
         END;
       WHEN(LENGTH(OUTREC)=78) DO;
         OUTREC=OUTREC××ICH;
         WRITE FILE(OUT) FROM(OUTREC);
         OUTREC='';
         END;
       OTHERWISE OUTREC=OUTREC××ICH;
       END; /* SELECT */
     LUP: DO FOREVER=1 REPEAT FOREVER;
       I=MIN(80-LENGTH(OUTREC),LENGTH(INREC));
       OUTREC=OUTREC××SUBSTR(INREC,1,I);
       IF I=LENGTH(INREC)
         THEN DO;
           INREC='';
           LEAVE LUP;
           END;
       INREC=SUBSTR(INREC,I+1);
       WRITE FILE(OUT) FROM(OUTREC);
       OUTREC='';
       END;
     END;
   END TO80_SUB;

   END TRANSFER;
