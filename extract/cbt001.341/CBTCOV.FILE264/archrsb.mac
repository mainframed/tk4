 ARCHRSB:  PROC(PARM) OPTIONS(MAIN);
         DFT RANGE(*) FIXED BIN VALUE(FIXED BIN(31,0));
         DCL PARM CHAR(100) VARYING;
         DCL JFCBAREA CHAR(176);
         JFCBPTR = ADDR(JFCBAREA);
         CALL SYSJFCB(DDNAME,JFCBPTR);
         DCL DDNAME CHAR(8) INIT('TAPE');
         % INCLUDE CTLGDEF;
         DCL AREA CHAR(265);
         CTLGPTR = ADDR(AREA);
         DCL RET BIT(32);
         DCL (I,J) FIXED BIN(31,0);
         DCL RETCODE FIXED BIN(31,0);
         DCL INREC CHAR(32767) VARYING;
         INREC = (512)' ';
         DCL WRKPTR PTR,
             WRKADJ FIXED BIN(31,0) DEF WRKPTR;
         DCL BLKSI FIXED BIN(31,0) STATIC;
         DCL PARMSTR FIXED BIN(15,0) INIT(0);
         DCL 1 EXTARY(9) BASED(EXTPTR),
              2 EXTFL BIT(8),
              2 EXTSQ BIT(8),
              2 CB1 FIXED BIN(15,0),
              2 HB1 FIXED BIN(15,0),
              2 CB2 FIXED BIN(15,0),
              2 HB2 FIXED BIN(15,0);
         DCL EXTCNT FIXED BIN(15,0);
         DCL TOTRK FIXED BIN(15,0) INIT(0);
         DCL (RPTRK,DSNCNT) FIXED BIN(31,0) INIT(0);
         /* @JC MUST BE SET TO THE # OF JCL STMTS IN JCLARY */
         % DCL @JC FIXED;
         % @JC = 14;
         DCL JCLARY(@JC) CHAR(80) STATIC INIT(
              '//EUP027R JOB (10-096-MISC-027-B4,1),',
              '// ''SMITH-NORTH BLDG'',CLASS=E',
              '/*MESSAGE      *************** 1-9TRK ************',
              '/*SETUP        ??????',
              '//ARCHRST PROC UNIT=''3330-1'',VOL=VSRTS1',
              '//RST EXEC PGM=FDRDSF,COND=EVEN',
              '//SYSPRINT DD SYSOUT=A',
              '//TAPE1 DD DSN=&DSN,DISP=(OLD,UNCATLG,KEEP),',
              '// VOL=(,RETAIN)',
              '//DISK1 DD UNIT=&UNIT,VOL=SER=&VOL,DISP=OLD',
              '//ALLOC DD DSN=&DSN,DISP=(NEW,CATLG,DELETE),',
              '// UNIT=&UNIT,VOL=SER=&VOL,',
              '// SPACE=(TRK,(&SPACE.))',
              '// PEND');
         SUBSTR(JCLARY(4),16,6)=JFCBVOLS(1);
         STEPCNT = 51;
         DCL EXCD CHAR(80);
         /* @UC MUST BE SET TO THE NUMBER OF UNITS IN UNITARY */
         % DCL @UC FIXED;
         % @UC = 3;
         DCL 1 UNITARY(@UC) STATIC,
              2 UTYPE CHAR(8) INIT(
                   '3330-1',
                   '3330',
                   '3350'),
              2 UTCNT FIXED BIN(15,0) INIT(
                   19,
                   19,
                   30);
         DCL UNITSTR CHAR(8) VARYING;
         DCL VOLSTR CHAR(6) VARYING;
         DCL JCLSW BIT(1) STATIC INIT('1'B);
         ON UNDF(JCLOUT) JCLSW = '0'B;
         OPEN FILE(JCLOUT) RECORD OUTPUT;
         IF JCLSW
              THEN DO;
                   I = INDEX(PARM,'VOL=');
                   IF I = 0
                        THEN DO;
                             PUT EDIT('ERROR - VOL NOT SPECIFIED')
                               (A) SKIP(1);
                             SIGNAL ERROR;
                             END;
                   VOLSTR=SUBSTR(PARM,I+4,6);
                   END;
         DCL TRKPERCYL FIXED BIN(15,0);
         I = INDEX(PARM,'UNIT=');
         IF I = 0
              THEN IUN = 1; /*DEFAULT UNIT TYPE IS 3330-1*/
              ELSE DO;
                   J = INDEX(SUBSTR(PARM,I),',');
                   IF J = 0
                        THEN J = INDEX(SUBSTR(PARM,I),' ');
                   IF J = 0
                        THEN J = LENGTH(PARM)+2-I;
                   UNITSTR=SUBSTR(PARM,I+5,J-6);
                   DO K=1 TO @UC WHILE(UTYPE(K)^=UNITSTR);
                        END;
                   IF K > @UC
                        THEN DO;
                             PUT EDIT('ERROR, UNIT TYPE ',
                               UNITSTR,' NOT RECOGNIZED')
                               (A,A,A) SKIP(1);
                             SIGNAL ERROR;
                             END;
                   END;
         TRKPERCYL = UTCNT(K);
         TAPESEQ = 0;
         DCL DATE BUILTIN;
         ON ENDPAGE(SYSPRINT) BEGIN;
              PUT EDIT('ARCHIVE TAPE REPORT FOR TAPE ',JFCBVOLS(1),
                ', DATE = ',DATE)(A,A,A,A) PAGE;
              PUT SKIP(2);
              END;
         SIGNAL ENDPAGE(SYSPRINT);
 NXT:
         TOTRK = 0;
         CALL TAPESUB(INREC);
         IF INREC=''
               THEN DO;
                    PUT EDIT('TOTAL SPACE REQUIRED = ',RPTRK,' TRACKS.')
                      (A,P'ZZ,ZZZ,ZZ9',A) SKIP(2);
                    PUT EDIT('TOTAL DATA SETS TO RESTORE = ',DSNCNT)
                      (A,P'ZZ,ZZ9') SKIP(1);
                    RETURN;
                    END;
         TAPESEQ = TAPESEQ + 1;
         WRKPTR = ADDR(INREC);
         WRKADJ = WRKADJ + 42;
         DSCB1PTR = WRKPTR;
         IF DS1DSORG & '01000010'B = '0'B
              THEN DO;
                   PUT EDIT('DSN=',DS1DSNAM,' DSORG NOT PS OR PO')
                     (A,A,A) SKIP(1);
                   GO TO NXT;
                   END;
              ELSE DO;
                   WRKADJ = WRKADJ + 148;
                   DSCB3PTR = WRKPTR;
                   EXTPTR = ADDR(DS1EXT);
                   EXTCNT = 3;
                   CALL CNTSUB;
                   IF DS1PTRDS^=LOW(5)
                        THEN DO;
 /* CAUSES BUG               EXTPTR = ADDR(DS3EXT); */
                             WRKPTR = DSCB3PTR;
                             WRKADJ = WRKADJ + 4;
                             EXTPTR = WRKPTR;
                             EXTCNT = 4;
                             CALL CNTSUB;
                             EXTPTR = ADDR(DS3ADEXT);
                             EXTCNT = 9;
                             CALL CNTSUB;
                             END;
                   END;
         IF TOTRK < 1
              THEN TOTRK = 1;
         CALL SYSCTLG('NAME',RET,DS1DSNAM,'SYSRES',AREA);
         IF RET ^= 0
              THEN GO TO NXT;
         IF VOLID.VOLSER(1) ^= JFCBVOLS(1)
              THEN GO TO NXT;
         IF VOLID.DSSQ(1) ^= TAPESEQ
              THEN GO TO NXT;
         RPTRK = RPTRK + TOTRK;
         DSNCNT = DSNCNT + 1;
         PUT EDIT('DSN=',DS1DSNAM,' SPACE = ',TOTRK,' TRACKS')
           (A,A,A,P'ZZ,ZZ9',A) SKIP(1);
         IF JCLSW
              THEN DO;
                   IF STEPCNT > 50
                        THEN DO;
                             STEPCNT = 0;
                             DO I = 1 TO @JC;
                                  WRITE FILE(JCLOUT) FROM(JCLARY(I));
                                  END;
                             END;
                   STEPCNT = STEPCNT + 1;
                   PUT STRING(EXCD) EDIT('//S',STEPCNT,
                     ' EXEC ARCHRST,UNIT=''',
                     UNITSTR,''',VOL=',VOLSTR,
                     ',SPACE=',TOTRK,',')
                     (A,P'999',A,A,A,A,A,P'9999',A);
                   WRITE FILE(JCLOUT) FROM(EXCD);
                   I = INDEX(DS1DSNAM,' ');
                   IF I = 0
                        THEN I = 45;
                   EXCD = '// DSN='''××SUBSTR(DS1DSNAM,1,I-1)××'''';
                   WRITE FILE(JCLOUT) FROM(EXCD);
                   EXCD = ' RESTORE DSN='××SUBSTR(DS1DSNAM,1,I-1);
                   WRITE FILE(JCLOUT) FROM(EXCD);
                   END;
         GO TO NXT;
  CNTSUB:  PROC;
          DO I = 1 TO EXTCNT;
              IF EXTFL(I) ^= '0'B
                   THEN TOTRK = TOTRK + (CB2(I)-CB1(I)-1)*TRKPERCYL
                     +TRKPERCYL-HB1(I)+HB2(I)+1;
              END;
         END CNTSUB;
         % INCLUDE DEVDATA;
         % INCLUDE DSCB1;
         % INCLUDE DSCB3;
         % INCLUDE JFCB;
         END;
