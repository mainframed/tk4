 /* @BIT */
 %NOPRINT;
         % DCL @BIT ENTRY;
 %@BIT:  PROC(N,L) STATEMENT RETURNS(CHAR);
 /*
0*$.HE GENERALIZED SUBROUTINES - @BIT
0*$.HE PLI PREPROCESSOR TEXT
0*$.HE ARITHMETIC TO BIT STRING CONVERSION
0*$.PL 55
0*$.PN 0
0*$.PA
0*$.SS
0*$.NF
0*$09/17/76
0*$AUTHOR:  T. SMITH
0*$SOURCE MODULE NAME:  @BIT
0*$DOCUMENTATION ID:  0*$
0*$.FI L
0*$.SP 5
0*$THIS PLI PREPROCESSOR PROCEDURE WILL RETURN A BIT STRING CONSTANT
0*$OF SPECIFIED LENGTH REPRESENTING
0*$THE BINARY VALUE OF THE SPECIFIED DECIMAL CONSTANT.  ZEROS
0*$ARE PADDED ON THE LEFT, RATHER THAN TO THE RIGHT.
0*$CALL FORMAT IS AS FOLLOWS -
0*$.SP 1
0*$.IN 5
0*$X = @BIT(N,L);
0*$.IN 0
0*$.SP 1
0*$WHERE N IS THE DECIMAL CONSTANT TO BE CONVERTED TO BINARY, AND
0*$L IS THE LENGTH OF THE BIT STRING TO BE RETURNED.  IF THE
0*$GENERATED STRING IS TOO LONG OR SHORT, TRUNCATION OR PADDING WITH
0*$ZEROS WILL TAKE PLACE ON THE LEFT.
 */
         DCL (N,L,I,J) FIXED;
         DCL RET CHAR;
         RET='';
         I=N;
 NXT:
         J=I/2;
         IF I=J*2
              THEN RET='0'××RET;
              ELSE RET='1'××RET;
         I=J;
         IF I>0
              THEN GO TO NXT;
         I=LENGTH(RET);
         IF I>=L
              THEN RET=SUBSTR(RET,I-L+1,L);
              ELSE DO I=I TO L-1;
                   RET='0'××RET;
                   END;
         RETURN(''''××RET××'''B');
         % END @BIT;
 %PRINT;
