         TITLE '* * *  TSO CHARGES COMMAND  * * *'
***********************************************************************
*                                                                     *
* PROGRAM NAME - CHARGES                                              *
*                                                                     *
*   NOTE: TO CHANGE CHARGEOUT RATES, SEE COMMENTS BEFORE LABEL        *
*         'OLDRATES'.  ALSO UPDATE IEFACTRT (S.I.C(ACTRT2)).          *
*                                                                     *
* PURPOSE - TO DISPLAY TO THE TSO USER THE AMOUNT OF RESOURCES THAT   *
*        HAVE BEEN USED DURING THE CURRENT SESSION AND THE RELATED    *
*        CHARGES.                                                     *
*                                                                     *
* OPERATION - THE TCBUSER FIELD IN THE REGION CONTROL TASK IS CHECKED *
*        FOR A POINTER TO THE ACCOUNTING TABLE BUILT BY IEFUJI AND    *
*        MAINTAINED BY THE IEFACTRT AND IEFU83 SMF EXITS.  IF THE     *
*        STEP TABLE WORK AREA (STWA) EXISTS, THE EXCP                 *
*        COUNTS FOR THE SESSION ARE LOADED INTO REGISTERS.  IF IT     *
*        DOES NOT EXIST, THE REGISTERS ARE ZEROED.  THEN THE TCTIOT   *
*        IS LOCATED AND SEARCHED TO OBTAIN EXCP COUNTS FOR CURRENTLY  *
*        ALLOCATED DEVICES.  (SEE NOTE BELOW.)  THE CONNECT TIME IS   *
*        CALCULATED FROM THE CURRENT TIME AND THE LOGON TIME FOUND IN *
*        THE PSCB.  THE ACCUMULATED TCB TIME IS OBTAINED FROM THE     *
*        ASCB.  THE VALUES ARE FORMATTED INTO A DISPLAY WHICH IS      *
*        WRITTEN TO THE USER.                                         *
*                                                                     *
*        THE CALCULATIONS USED TO OBTAIN THE CHARGES AS WELL AS THE   *
*        ACTUAL RATES ARE TAKEN FROM THE VALUE SYSTEM.  PRESENTLY     *
*        (AS OF 6/8/78) LOCATED IN BTOM.ASM(VALUELES).                *
*                                                                     *
*  ===>  NOTE: PCF II WRITES OUT A TYPE 34 SMF RECORD AT THE END OF   *
*        EACH TRANSACTION.  HE ALSO CLEARS OUT THE TCTIOT AT THIS     *
*        TIME.  THEREFORE, THE TCTIOT CONTAINS ONLY THE INFORMATION   *
*        FOR THE CURRENT COMMAND.  THE TCTIOT AND THE TYPE 34 SMF     *
*        RECORD ARE NEEDED.  IEFU83 HAS BEEN MODIFIED TO CHECK TYPE   *
*        34 SMF RECORDS AND TO ENTER EXCP COUNTS IN THE STEP TABLE.   *
*        THE STEP TABLE SHOULD CONTAIN ALL THE EXCP COUNTS FOR THE    *
*        SESSION  EXCEPT THOSE FOR THE CURRENT COMMAND WHICH WILL BE  *
*        IN THE TCTIOT.                                               *
*                                                                     *
* WRITTEN BY DOUG MOORE - APRIL 1978                                  *
*                                                                     *
* MODIFIED BY BEN MOORE - MAY 1978                                    *
*        CPU TIME FROM ASCB NOT SIGNIFICANT ENOUGH TO CALCULATE       *
*        TENTHS AND HUNDRETHS OF A SECOND.  CHANGED TO LOAD REGISTER  *
*        FROM ASCBEJST+1 FOR 4 BYTES.                                 *
*                                                                     *
* MODIFIED BY DOUG MOORE - MAY 1978                                   *
*        TIME CALCULATIONS CORRECTED.                                 *
*                                                                     *
* MODIFIED BY DOUG MOORE - JUNE 1978                                  *
*        CHARGE CALCULATIONS ADDED.                                   *
*                                                                     *
* MODIFIED BY BEN MOORE - SEPTEMBER 1978                              *
*        ADDED ACCOUNT NUMBER TO DISPLAY.                             *
*                                                                     *
* MODIFIED BY DOUG MOORE - DECEMBER 1978                              *
*        ADDED CODE TO CHECK YEAR IN ORDER TO SELECT RATE TABLE       *
*        FOR CHARGES.  SEE COMMENTS BEFORE LABEL 'OLDRATES'.          *
*                                                                     *
* MODIFIED BY RICH OLCOTT - OCTOBER 1981                              *
*        UPDATED RATES TO 1981, 1982                                  *
*        CORRECTED HANDLING OF TCTTIOT STRUCTURE FOR SP-3             *
*                                                                     *
***********************************************************************
         EJECT
CHARGES  CSECT
         SAVE  (14,12),,CHARGES-&SYSDATE-&SYSTIME   SAVE REGISTERS
         LR    R12,R15             LOAD BASE REGISTER
         USING CHARGES,R12
         GETMAIN RU,LV=CHGWALTH    GET WORKAREA
         ST    R1,8(0,R13)         CHAIN SAVE AREAS
         ST    R13,4(0,R1)
         LR    R13,R1
         USING CHGWA,R13
         SPACE  2
         LA    R2,CHGLINES         DESTINATION FOR MVCL
         LA    R3,CHGLNSZ          LENGTH OF FORMAT CONSTANTS
         LA    R4,CHGLINEC         SOURCE
         LR    R5,R3               LENGTH
         MVCL  R2,R4               MOVE LINE FORMATS TO WORK AREA
         ZAP   TOTALCHG,=P'0'      ZERO TOTAL COST
         SPACE 2
***********************************************************************
* COMPUTE CHARGES FOR CPU TIME, DISK AND TAPE EXCPS                   *
***********************************************************************
         SPACE
* FIRST CHECK YEAR TO SEE IF NEW RATES ARE IN EFFECT
         LA    R15,NEWRATES        ASSUME NEW RATES
         L     R6,16               POINT TO CVT
         USING CVT,R6
         CLI   CVTDATE+1,OLDYEAR   Q. IS IT STILL OLD YEAR
         DROP  R6
         BNE   GOTRATES            ...NO, USE NEW RATES
         LA    R15,OLDRATES        ...YES, USE OLD RATES
GOTRATES DS    0H
         MVC   RATETBL,0(R15)      MOVE RATE TABLE
         TITLE 'CHARGES - OBTAIN EXCP COUNTS FROM STEP TABLE'
***********************************************************************
* POINT TO REGION CONTROL TASK'S TCB AND CHECK TCBUSER FIELD.  IF ITS *
* ZERO, THEN NO STEP TABLE HAS BEEN OBTAINED SO THE EXCP COUNTS WILL  *
* BE ZERO.  IF NONZERO, THEN LOAD REGISTERS WITH EXCP COUNTS FROM THE *
* STEP TABLE ENTRY.                                                   *
***********************************************************************
         SPACE
EXCP1    DS    0H
         L     R10,548(0,0)        POINT TO CURRENT ASCB
         USING ASCB,R10
         L     R2,ASCBASXB         POINT TO ASXB
         USING ASXB,R2
         L     R2,ASXBFTCB         POINT TO RCT TCB
         USING TCB,R2
         L     R2,TCBUSER          GET POINTER TO IEFACTRT/IEFU83 TABLE
         DROP  R2
         LTR   R2,R2               Q. DOES THE STEP TABLE EXIST YET
         BNZ   LOADEXCP            ...YES, GO GET THE EXCP COUNTS
         SPACE
ZEROEXCP DS    0H
         SLR   R3,R3               ZERO EXCP COUNTERS (R3 = DISK EXCPS)
         SLR   R4,R4               ZERO EXCP COUNTERS (R4 = TAPE EXCPS)
         SLR   R5,R5               ZERO EXCP COUNTERS (R5 = OTHER EXCP)
         B     SRCHTCT             GO SEARCH TCTTIOT FOR EXCP COUNTS
         SPACE 2
LOADEXCP DS    0H
         USING STWA,R2             ADDRESS IEFACTRT/IEFU83 STWA
         LA    R2,STEPTBLE         POINT TO STEP TABLE
         USING STEPTBLE,R2
         LM    R3,R5,STDISKEX      ...YES, LOAD EXCP COUNTS
         SPACE
         DROP  R2
         TITLE 'CHARGES - OBTAIN EXCP COUNTS FROM TCTIOT'
***********************************************************************
* SEARCH TCT I/O COUNTER TABLE TO OBTAIN EXCP COUNTS FOR ALLOCATED    *
* DEVICES.                                                            *
***********************************************************************
         SPACE
SRCHTCT  DS    0H
         L     R2,540(0,0)         POINT TO CURRENT TCB
         USING TCB,R2
         L     R2,TCBTCT           POINT TO TIMING CONTROL TABLE
         USING SMFTCT,R2
         L     R2,TCTIOTBL         POINT TO TCT I/O TABLE
         USING TCTTIOT,R2
         LH    R6,TCTSZLKP         GET NUMBER OF ENTRIES X 16
         SRA   R6,4                Q. ARE THERE ANY ENTRIES (DIV BY 16)
*                                  R6 CONTAINS NUMBER OF ENTRIES
         BZ    ENDTCT              ...NO, THATS IT
         LA    R1,TCTIODSP-4       POINT TO HEAD OF DD LOOKUP TABLE
         USING TCTIODSP,R1
         USING TCTDDENT,R9         ADDRESS DEVICE ENTRY IN COUNTER TBL
         SPACE
DDLOOPS  DS    0H
         LA    R1,4(R1)            POINT TO NEXT ENTRY IN LOOKUP TABLE
         CLC   TCTIOTSD,=H'00'     IS THIS NULL? (SHOULDN'T OCCUR)
         BE    ENDTCT              GET OUT IF IT DOES
         LA    R9,0(0,R2)          POINT TO ORIGIN OF TCTTIOT
         AH    R9,TCTIOTSD         POINT TO FIRST DEVICE ENTRY FOR DD
         XR    R11,R11             CLEAR DEVICE ENTRY COUNTER
         IC    R11,TCTSCTR         HOW MANY DEVICE ENTRIES ARE THERE?
         LTR   R11,R11             IS THIS NULL? (SHOULDN'T OCCUR)
         BZ    ENDTCT              GET OUT IF IT DOES
UCBLOOPS ICM   R8,B'1111',TCTDCTR  GET EXCP COUNT
*                                  Q. IS IT ZERO
         BZ    UCBLOOPE            ...YES, NO NEED TO LOOK AT IT
         TM    TCTFLGS,TCTVAMDS    Q. IS THIS VIO
         BO    DISKADD             ...YES, TREAT AS DISK EXCP
         LH    R7,TCTUCBP          ...NO, POINT TO UCB
         USING UCBCMSEG,R7
         LTR   R7,R7               Q. IS THIS AN UNUSED ENTRY
         BZ    UCBLOOPE            ...YES, GO TO NEXT ENTRY
         TM    UCBDVCLS,UCB3DACC   Q. IS THIS DISK
         BO    DISKADD             ...YES, ADD TO DISK EXCP
         TM    UCBDVCLS,UCB3TAPE   Q. IS THIS TAPE
         BO    TAPEADD             ...YES, ADD TO TAPE
         ALR   R5,R8               ADD TO OTHER EXCP COUNTS
         B     UCBLOOPE
DISKADD  DS    0H
         ALR   R3,R8               ADD DISK EXCP COUNTS
         B     UCBLOOPE
TAPEADD  DS    0H
         ALR   R4,R8               ADD TAPE EXCP COUNTS
         SPACE
UCBLOOPE LA    R9,16(R9)           GET READY TO LOOK AT NEXT UCB ENTRY
         BCT   R11,UCBLOOPS        LOOP ON DEVICES WITHIN DD
DDLOOPE  BCT   R6,DDLOOPS          LOOP ON NUMBER OF DD'S
         SPACE 2
ENDTCT   DS    0H
         SPACE
         DROP  R1,R2,R7,R9
         TITLE 'CHARGES - FORMAT EXCP COUNTS'
***********************************************************************
* CONVERT EXCP COUNTS TO DECIMAL AND EDIT INTO OUTPUT LINES.  THEN    *
* COMPUTE COSTS AND EDIT.                                             *
***********************************************************************
         SPACE
FMTDISK  DS    0H
         LTR   R3,R3               Q. ARE DISK EXCPS = 0
         BZ    FMTTAPE             ...YES, DO NOT PROCESS
         CVD   R3,CHGDWRK          CONVERT DISK EXCPS
         ED    DISKEXCP,CHGDWRK+2  EDIT DISK EXCP COUNTS
         SPACE
         M     R2,DISKCOST         COMPUTE DISK EXCP COST
         D     R2,=F'1000'         PER 1000 EXCPS
         CH    R2,=H'500'          Q. NEED TO ROUND UP
         BL    NORNDDSK            ...NO, BRANCH
         LA    R3,1(0,R3)          ...YES, ADD 1 TO COST
NORNDDSK EQU   *
         CVD   R3,CHGDWRK          CONVERT DISK EXCP COST
         AP    TOTALCHG,CHGDWRK    ADD TO TOTAL COST
         ED    DISKECHG,CHGDWRK+3   EDIT DISK EXCP COST
         SPACE
FMTTAPE  DS    0H
         LTR   R4,R4               Q. ARE TAPE EXCPS = 0
         BZ    FMTOTHER            ...YES, NO NOT PROCESS
         CVD   R4,CHGDWRK          CONVERT TAPE EXCPS
         ED    TAPEEXCP,CHGDWRK+2  EDIT TAPE EXCP COUNTS
         LR    R3,R4               GET TAPE EXCPS
         M     R2,TAPECOST         COMPUTE TAPE EXCP COST
         D     R2,=F'1000'         PER 1000 EXCPS
         CH    R2,=H'500'          Q. NEED TO ROUND UP
         BL    NORNDTAP            ...NO, BRANCH
         LA    R3,1(0,R3)          ...YES, ADD 1 TO COST
NORNDTAP EQU   *
         CVD   R3,CHGDWRK          CONVERT TAPE EXCP COST
         AP    TOTALCHG,CHGDWRK    ADD TO TOTAL COST
         ED    TAPEECHG,CHGDWRK+3   EDIT TAPE EXCP COST
         SPACE
FMTOTHER DS    0H
         LTR   R5,R5               Q. ARE OTHER EXCPS = 0
         BZ    FMTEND              ...YES, DO NOT PROCESS
         CVD   R5,CHGDWRK          CONVERT OTHER EXCPS
         ED    OTHREXCP,CHGDWRK+2  EDIT OTHER EXCP COUNTS
         M     R4,OTHRCOST         COMPUTE OTHER EXCP COST
         D     R4,=F'1000'         PER 1000 EXCPS
         CH    R4,=H'500'          Q. NEED TO ROUND UP
         BL    NORNDOTH            ...NO, BRANCH
         LA    R5,1(0,R5)          ...YES, ADD 1 TO COST
NORNDOTH EQU   *
         CVD   R5,CHGDWRK          CONVERT OTHER EXCP COST
         AP    TOTALCHG,CHGDWRK    ADD TO TOTAL COST
         ED    OTHRECHG,CHGDWRK+3   EDIT OTHER EXCP COST
         SPACE 2
FMTEND   DS    0H
         TITLE 'CHARGES - OBTAIN SESSION TIME'
***********************************************************************
* GET LOGON TIME FROM PSCB.  GET CURRENT TIME WITH TIME MACRO.        *
* CONVERT TIMES TO MICRO SECONDS AND THEN PERFORM DOUBLEWORD          *
* SUBTRACTION TO GET SESSION TIME.  CONVERT THIS TO HUNDRETHS OF      *
* SECONDS AND EDIT.                                                   *
* THE HOURS, MINUTES, SECONDS, AND  HUNDRETHS OF SECONDS ARE GROUPED  *
* INTO ONE NUMBER WHICH CAN BE EDITTED INTO THE FORM HHH:MM:SS.HH,    *
* WHERE ONLY S.HH IS SIGNIFICANT.                                     *
***********************************************************************
         SPACE
         TIME  STCK,STCKTIME       GET CURRENT TIME IN TIMER UNITS
         L     R2,540(0,0)         POINT TO CURRENT TCB
         USING TCB,R2
         L     R2,TCBJSCB          POINT TO JSCB
         USING IEZJSCB,R2
         L     R2,JSCBPSCB         POINT TO PSCB
         USING PSCB,R2
         LM    R8,R9,PSCBLTIM      GET LOGON TIME
         LM    R6,R7,STCKTIME      GET CURRENT TIME
         SRDL  R8,12               CONVERT TO MICRO SECONDS
         SRDL  R6,12               CONVERT TO MICRO SECONDS
*                                  SESSION TIME = CURRENT - LOGON TIME
         SLR   R7,R9               SUBTRACT RIGHT HALF
         BC    3,CARRY             Q. WAS THERE A CARRY
         LA    R8,1(0,R8)          ...NO, ADD 1 TO LEFT HALF
CARRY    EQU   *
         SLR   R6,R8               SUBTRACT LEFT HALF
         D     R6,=F'10000'        CONVERT TO HUNDRETHS OF SECONDS
         SLR   R6,R6               CLEAR REMAINDER
         XC    CHGFWRK1,CHGFWRK1   CLEAR TIME ASSEMBLY AREA
         D     R6,=F'360000'       GET HOURS (360000 100THS/HOUR)
         CVD   R7,CHGDWRK          CONVERT HOURS
         NI    CHGDWRK+7,X'F0'     TURN OFF SIGN TO GET HHH0
         MVC   CHGFWRK1(2),CHGDWRK+6   MOVE TO ASSEMBLY AREA
         SRDL  R6,32               SHIFT REMAINDER FOR DIVISION
         D     R6,=F'6000'         GET MINUTES (6000 HUNDRETHS/MINUTE)
         CVD   R7,CHGDWRK          CONVERT MINUTES
         NI    CHGDWRK+7,X'F0'     TURN OFF SIGN TO GET 0MM0
         OC    CHGFWRK1+1(2),CHGDWRK+6   MOVE TO ASSEMBLY AREA
         SRDL  R6,32               SHIFT REMAINDER FOR DIVSION
         D     R6,=F'100'          GET SECONDS (100 HUNDRETHS/SECOND)
         CVD   R6,CHGDWRK          CONVERT HUNDRETHS
         MVC   CHGFWRK1+3(2),CHGDWRK+6   MOVE TO ASSEMBLY AREA AS 0HHS
         CVD   R7,CHGDWRK          CONVERT SECONDS
         NI    CHGDWRK+7,X'F0'     TURN OFF SIGN TO GET 0SS0
         OC    CHGFWRK1+2(2),CHGDWRK+6   MOVE TO ASSEMBLY AREA
*
* TIME NOW LOOKS LIKE THIS:  HHHMMSSHHF
*
         ED    SESSTIME,CHGFWRK1   EDIT TIME
         SPACE
         DROP  R2
         TITLE 'CHARGES - OBTAIN TCB CPU TIME'
***********************************************************************
* GET ACCUMULATED TCB TIME FROM ASCB.  THE TIME IS KEPT IN STORE      *
* CLOCK UNITS IN 8 BYTES.                                             *
***********************************************************************
         SPACE
GETTIME  DS    0H
         LM    R6,R7,ASCBEJST      GET TCB TIME
         SPACE
         DROP  R10
         TITLE 'CHARGES - FORMAT TCB CPU TIME'
***********************************************************************
* CONVERT TIME TO MICRO SECONDS.  THEN CONVERT TO DECIMAL AND EDIT.   *
* THE HOURS, MINUTES, SECONDS, AND  HUNDRETHS OF SECONDS ARE GROUPED  *
* INTO ONE NUMBER WHICH CAN BE EDITTED INTO THE FORM HHH:MM:SS.HH,    *
* WHERE ONLY S.HH IS SIGNIFICANT.  COMPUTE COST AND EDIT.             *
***********************************************************************
         SPACE
         D     R6,=F'40960000'     CONVERT TO 100THS OF SECONDS
         SLR   R6,R6               CLEAR REMAINDER
         LR    R3,R7               SAVE FOR COST COMPUTATION
         XC    CHGFWRK1,CHGFWRK1   CLEAR TIME ASSEMBLY AREA
         D     R6,=F'360000'       GET HOURS (360000 100THS/HOUR)
         CVD   R7,CHGDWRK          CONVERT HOURS
         NI    CHGDWRK+7,X'F0'     TURN OFF SIGN TO GET HHH0
         MVC   CHGFWRK1(2),CHGDWRK+6   MOVE TO ASSEMBLY AREA
         SRDL  R6,32               SHIFT REMAINDER FOR DIVISION
         D     R6,=F'6000'         GET MINUTES (6000 HUNDRETHS/MINUTE)
         CVD   R7,CHGDWRK          CONVERT MINUTES
         NI    CHGDWRK+7,X'F0'     TURN OFF SIGN TO GET 0MM0
         OC    CHGFWRK1+1(2),CHGDWRK+6   MOVE TO ASSEMBLY AREA
         SRDL  R6,32               SHIFT REMAINDER FOR DIVSION
         D     R6,=F'100'          GET SECONDS (100 HUNDRETHS/SECOND)
         CVD   R6,CHGDWRK          CONVERT HUNDRETHS
         MVC   CHGFWRK1+3(2),CHGDWRK+6   MOVE TO ASSEMBLY AREA AS 0HHS
         CVD   R7,CHGDWRK          CONVERT SECONDS
         NI    CHGDWRK+7,X'F0'     TURN OFF SIGN TO GET 0SS0
         OC    CHGFWRK1+2(2),CHGDWRK+6   MOVE TO ASSEMBLY AREA
*
* TIME NOW LOOKS LIKE THIS:  HHHMMSSHHF
*
         ED    TCBTIME,CHGFWRK1    EDIT TIME
         SPACE 2
         M     R2,CPUCOST          COMPUTE CPU COST
         D     R2,=F'100'          PER SECOND
         CH    R2,=H'50'           Q. NEED TO ROUND UP
         BL    NORNDCPU            ...NO, BRANCH
         LA    R3,1(0,R3)          ...YES, ADD 1 TO COST
NORNDCPU EQU   *
         CVD   R3,CHGDWRK          CONVERT CPU COST
         AP    TOTALCHG,CHGDWRK    ADD TO TOTAL COST
         ED    CPUCHG,CHGDWRK+4    EDIT CPU COST
         TITLE 'CHARGES - FORMAT TOTAL COSTS'
***********************************************************************
* EDIT TOTAL COSTS WITH FLOATING $.                                   *
***********************************************************************
         SPACE
         LA    R1,TOTCHGED+11      ADDR FOR $ IF SIGNIFICANCE FORCED
         EDMK  TOTCHGED,TOTALCHG+10  EDIT TOTAL COSTS
         BCTR  R1,0                POINT TO WHERE $ GOES
         MVI   0(R1),C'$'          PUT IN $
         TITLE 'CHARGES - MESSAGE WRITER'
***********************************************************************
* SEND CHARGES MESSAGES.                                              *
***********************************************************************
         SPACE
MSGSEND  DS    0H
         L     R1,540              GET TCB ADDRESS FROM PSA
         L     R1,180(,R1)         GET JSCB ADDRESS FROM TCB
         L     R1,260(,R1)         GET JCT-16 ADDRESS FROM JSCB
         ICM   R1,B'0111',16+40(R1) GET ACT-16 ADDRESS FROM JCT
         MVC   CHGLINE1(8),16+33(R1) PUT ACCOUNT FIELD IN 1ST LINE
         LA    R0,CHGLNLTH         LENGTH OF BUFFER
         LA    R1,CHGLINE1         ADDRESS OF 1ST LINE (HEADING)
         TPUT  (1),(0),R           SEND IT
         LA    R0,CHGLNLTH         LENGTH OF BUFFER
         LA    R1,CHGLINE2         ADDRESS OF 2ND LINE (CPU TIME)
         TPUT  (1),(0),R           SEND IT
         CLI   DISKEXCP+1,X'20'    Q. WERE DISK EXCPS = 0
         BE    PUTTAPE             ...YES, DO NOT OUTPUT
         LA    R0,CHGLNLTH         LENGTH OF BUFFER
         LA    R1,CHGLINE3         ADDRESS OF 3RD LINE (DISK EXCPS)
         TPUT  (1),(0),R           SEND IT
PUTTAPE  DS    0H
         CLI   TAPEEXCP+1,X'20'    Q. WERE TAPE EXCPS = 0
         BE    PUTOTHER            ...YES, DO NOT OUTPUT
         LA    R0,CHGLNLTH         LENGTH OF BUFFER
         LA    R1,CHGLINE4         ADDRESS OF 4TH LINE (TAPE EXCPS)
         TPUT  (1),(0),R           SEND IT
PUTOTHER DS    0H
         CLI   OTHREXCP+1,X'20'    Q. WERE OTHER EXCPS = 0
         BE    PUTCNCT             ...YES, DO NOT OUTPUT
         LA    R0,CHGLNLTH         LENGTH OF BUFFER
         LA    R1,CHGLINE5         ADDRESS OF 5TH LINE (OTHER EXCPS)
         TPUT  (1),(0),R           SEND IT
PUTCNCT  DS    0H
         LA    R0,CHGLNLTH         LENGTH OF BUFFER
         LA    R1,CHGLINE6         ADDRESS OF 6TH LINE (CONNECT TIME)
         TPUT  (1),(0),R           SEND IT
         LA    R0,CHGLNLTH         LENGTH OF BUFFER
         LA    R1,CHGLINE7         ADDRESS OF 7TH LINE (TOTAL COSTS)
         TPUT  (1),(0),R           SEND IT
         TITLE 'CHARGES - RETURN'
RETURN   DS    0H
         L     R13,4(R13)          RESTORE CALLERS RSA
         RETURN (14,12),RC=0       RESTORE REGISTERS AND RETURN
         TITLE '******* REGISTER EQUATES *******'
R0       EQU   0
R1       EQU   1
R2       EQU   2                   WORK REG
R3       EQU   3                   DISK EXCPS
R4       EQU   4                   TAPE EXCPS
R5       EQU   5                   OTHER EXCPS
R6       EQU   6                   WORK REG
R7       EQU   7                   WORK REG
R8       EQU   8                   WORK REG
R9       EQU   9                   WORK REG
R10      EQU   10                  ASCB POINTER
R11      EQU   11                  RESERVED FOR CPPL IF NECESSARY
R12      EQU   12                  BASE REGISTER
R13      EQU   13                  RSA/WORK AREA
R14      EQU   14
R15      EQU   15
         TITLE '******* CONSTANTS *******'
***********************************************************************
* RATES FOR COST CALCULATIONS.  MAINTAIN CONCURRENT WITH VALUE SYSTEM.*
* NOTE:  CHARGES COMPARES THE YEAR TO DETERMINE THE RATE TABLE TO USE.*
* THERE IS A TABLE FOR THE OLD YEAR AND FOR THE NEW YEAR.  IF THE     *
* RATES DO NOT CHANGE, THE PROGRAM NEED NOT BE CHANGED.  IF THE RATES *
* CHANGE, MAKE THE NEW RATE TABLE THE OLD RATE TABLE AND ADD THE NEW  *
* RATES.  THEN CHANGE THE 'OLDYEAR' EQU TO THE FINAL 2 DIGITS OF THE  *
* OLD YEAR NUMBER.                                                    *
***********************************************************************
         SPACE
OLDYEAR  EQU   X'81'               OLD YEAR = 1981
         SPACE
OLDRATES DS    0F                  RATES (1981)
         DC    F'25'               $0.25 / SECOND
         DC    F'25'               $0.25 / 1000 DISK EXCPS
         DC    F'25'               $0.25 / 1000 TAPE EXCPS
         DC    F'190'              $1.90 / 1000 OTHER EXCPS
         SPACE 2
NEWRATES DS    0F                  RATES (1982)
         DC    F'22'               $0.22 / SECOND
         DC    F'27'               $0.27 / 1000 DISK EXCPS
         DC    F'31'               $0.31 / 1000 TAPE EXCPS
         DC    F'203'              $2.03 / 1000 OTHER EXCPS
         SPACE 2
* REPORT FORMAT CONSTANTS
         SPACE
CHGLINEC EQU   *                   LINE FORMATS
CHGLN1C  DS    0CL40               HEADING LINE
         DC    C'RESOURCE'
         DC    CL9' '
         DC    C'AMOUNT'
         DC    CL7' '
         DC    C'CHARGE'
         DC    CL4' '
CHGLN2C  DS    0CL40               CPU TIME LINE
         DC    CL10'CPU TIME'
         DC    XL13'402020207A20207A21204B2020'   EDIT PATTERN
         DC    CL3' '
         DC    XL10'4020206B2020214B2020'
         DC    CL4' '
CHGLN3C  DS    0CL40               DISK EXCPS LINE
         DC    CL11'DISK EXCPS'
         DC    XL12'402020202020202020202120'   EDIT PATTERN
         DC    XL13'40206B2020206B2020214B2020'
         DC    CL4' '
CHGLN4C  DS    0CL40               TAPE EXCPS LINE
         DC    CL11'TAPE EXCPS'
         DC    XL12'402020202020202020202120'   EDIT PATTERN
         DC    XL13'40206B2020206B2020214B2020'
         DC    CL4' '
CHGLN5C  DS    0CL40               OTHER EXCPS LINE
         DC    CL11'OTHER EXCPS'
         DC    XL12'402020202020202020202120'   EDIT PATTERN
         DC    XL13'40206B2020206B2020214B2020'
         DC    CL4' '
CHGLN6C  DS    0CL40               SESSION TIME LINE
         DC    CL10'CONNECT'
         DC    XL13'402020207A20207A21204B2020'   EDIT PATTERN
         DC    CL17' '
CHGLN7C  DS    0CL40               TOTAL COSTS LINE
         DC    CL21'TOTAL'
         DC    XL15'402020206B2020206B2021204B2020'   EDIT PATTERN
         DC    CL4' '
CHGLNSZ  EQU   *-CHGLINEC          LENGTH OF LINE FORMATS
         SPACE
         ENTRY PATCH               IDENTIFY PATCH AREA FOR LINK EDIT
PATCH    DC    50S(*)              PATCH AREA
         SPACE 5
         LTORG
         TITLE 'DSECTS'
CHGWA    DSECT
CHGRSA   DS    18F                 REGISTER SAVE AREA
CHGDWRK  DS    D                   DOUBLE WORD WORK AREA
CHGFWRK1 DS    F                   FULL WORD WORK AREA
CHGFWRK2 DS    F                   FULL WORD WORK AREA
STCKTIME DS    0D                  CURRENT TIME FROM TIME MACRO
CTIME1   DS    F
CTIME2   DS    F
TOTALCHG DS    PL16                TOTAL COST ACCUMULATOR
RATETBL  DS    0CL16               CURRENT RATES (4 FULLWORDS)
CPUCOST  DS    F                   COST / CPU SECOND
DISKCOST DS    F                   COST / 1000 DISK EXCPS
TAPECOST DS    F                   COST / 1000 TAPE EXCPS
OTHRCOST DS    F                   COST / 1000 OTHER EXCPS
         SPACE 2
* REPORT AREA
         SPACE
CHGLINES EQU   *                   MESSAGES AREA 7X40
CHGLNLTH EQU   40                  LENGTH OF A LINE
CHGLINE1 DS    0CL40               LINE 1 - HEADING
         DS    CL40
CHGLINE2 DS    0CL40               LINE 2 - CPU TIME
         DS    CL10
TCBTIME  DS    CL13                AMOUNT
         DS    CL3
CPUCHG   DS    CL10                CHARGE
         DS    CL4
CHGLINE3 DS    0CL40               LINE 3 - DISK EXCPS
         DS    CL11
DISKEXCP DS    CL12                AMOUNT
DISKECHG DS    CL13                CHARGE
         DS    CL4
CHGLINE4 DS    0CL40               LINE 4 - TAPE EXCPS
         DS    CL11
TAPEEXCP DS    CL12                AMOUNT
TAPEECHG DS    CL13                CHARGE
         DS    CL4
CHGLINE5 DS    0CL40               LINE 5 - OTHER EXCPS
         DS    CL11
OTHREXCP DS    CL12                AMOUNT
OTHRECHG DS    CL13                CHARGE
         DS    CL4
CHGLINE6 DS    0CL40               LINE 6 - CONNECT TIME
         DS    CL10
SESSTIME DS    CL13                AMOUNT
         DS    CL17
CHGLINE7 DS    0CL40               LINE 7 - TOTAL COSTS
         DS    CL21
TOTCHGED DS    CL15                CHARGE
         DS    CL4
         SPACE 2
CHGWAEND EQU   *                   END OF WORK AREA
CHGWALTH EQU   CHGWAEND-CHGWA      LENGTH OF WORK AREA
         SPACE 5
         STWA
         SPACE 5
         PRINT NOGEN
         SPACE 3
         IKJTCB
         SPACE 3
         IEFTCT
         SPACE 3
         IEFUCBOB
         SPACE 3
         IHAASCB
         SPACE 3
         IHAASXB
         SPACE 3
         IEZJSCB
         SPACE 3
         IKJPSCB
         SPACE 3
         CVT   DSECT=YES
         SPACE 5
         END   CHARGES
