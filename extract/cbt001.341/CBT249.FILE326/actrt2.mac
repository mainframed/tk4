         TITLE '* * *  IEFACTRT - SMF JOB/STEP TERMINATION EXIT  * * *'
***********************************************************************
*                                                                     *
* MODULE NAME - IEFACTRT                                              *
*                                                                     *
*   NOTE: TO CHANGE CHARGEOUT RATES, SEE COMMENTS BEFORE LABEL        *
*         'OLDRATES'.  ALSO UPDATE S.I.C(CHARGES).                    *
*                                                                     *
* FUNCTION - TO PROVIDE THE USER WITH AN EASY TO READ COMPREHENSIVE   *
*    SUMMARY OF THE JOB'S ACCOUNTING INFORMATION BY STEPS WITH JOB    *
*    TOTALS IN TABLE FORM.  TO INFORM THE USER OF JOB FAILURE DUE TO  *
*    STANDARDS VIOLATIONS.  TO PRINT GENERAL INFORMATION OF USER      *
*    INTEREST (HOTNEWS).                                              *
*                                                                     *
* OPERATION -                                                         *
*       IMMEDIATELY UPON ENTRY, BIT 0 OF BYTE 0 OF THE JMR USER ID    *
*    FIELD IS CHECKED FOR A COMPLETE STANDARDS BYPASS.  IF IT IS ON,  *
*    IEFACTRT RETURNS IMMEDIATELY.
*                                                                     *
*       THE STEP TABLE WORK AREA (STWA) WAS OBTAINED BY IEFUJI FOR    *
*    USE BY THE SMF EXITS.     THIS AREA IS USED TO SAVE THE          *
*    ACCOUNTING INFORMATION FOR EACH STEP UNTIL THE END OF THE JOB.   *
*    THE ADDRESS OF THIS AREA IS SAVED IN THE 'TCBUSER' FIELD OF THE  *
*    REGION CONTROL TASK'S TCB.  AT STEP TERMINATION, THE ACCOUNTING  *
*    INFORMATION FOR THE STEP IS STORED IN THE TABLE BY USING THE     *
*    STEP NUMBER AS AN INDEX.  AT JOB TERMINATION, THIS INFORMATION   *
*    IS FORMATTED AND WRITTEN IN SUMMARY FORM TO THE SYSTEM OUTPUT    *
*    MESSAGE DATA SET FOLLOWED BY THE JOB ACCOUNTING INFORMATION      *
*    USING MODULE IEFYS AS DOCUMENTED IN THE SMF MANUAL.  FOR TSO     *
*    USERS, THE INFORMATION IS ALSO WRITTEN TO THE TERMINAL AT JOB    *
*    TERMINATION.                                                     *
*       THE STANDARDS VIOLATIONS HAVE BEEN FLAGGED BY PREVIOUS EXITS  *
*    IN THE USER ID FIELD OF THE COMMON EXIT PARAMETER AREA(JMRUSEID).*
*    THESE FLAGS ARE CHECKED AND APPROPRIATE MESSAGES ISSUED VIA      *
*    IEFYS AS NECESSARY.                                              *
*       THE HOTNEWS IS IN LOAD MODULE FORM. IF THE DIRECTORY ENTRY    *
*    EXISTS, HOTNEWS IS LOADED AND PRINTED VIA IEFYS.                 *
*                                                                     *
*    NOTE:  IEFACTRT INTERFACES WITH IEFU83 TO OBTAIN EXCP COUNTS FOR *
*    DYNAMICALLY ALLOCATED DEVICES.  IEFU83 EXAMINES TYPE 40 SMF      *
*    RECORDS WHEN THEY ARE WRITTEN AND ADDS THE EXCP COUNTS TO THE    *
*    PROPER ENTRY IN THE STEP TABLE.                                  *
*                                                                     *
* ENTRY POINTS -                                                      *
*    IEFACTRT                                                         *
*    PATCH                                                            *
*                                                                     *
* EXTERNAL REFERENCES -                                               *
*    IEFYS                                                            *
*                                                                     *
* INPUT -                                                             *
*    REGISTER 0 CONTAINS ONE OF THE FOLLOWING ENTRY CODES:            *
*       12 - STEP TERMINATION ENTRY                                   *
*       16 - JOB TERMINATION ENTRY                                    *
*       20 - JOB OR STEP, TYPE 30 RECORD                     RJO 10/81*
*       24 - TYPE 32 RECORD                                  RJO 10/81*
*    REGISTER 1 POINTS TO A LIST OF 4 BYTE ADDRESSES FOR THE          *
*       FOLLOWING TEN PARAMETERS:                                     *
*          1 - 36 BYTES OF THE FOLLOWING JOB INFORMATION:             *
*             JOBNAME (8 BYTES)                                       *
*             TIME STAMP (8 BYTES)                                    *
*             SYSTEM ID (4 BYTES)                                     *
*             USER ID (8 BYTES)                                       *
*             USER COMMUNICATIONS AREA (4 BYTES)                      *
*                THIS FIELD IS ZEROED AT JOB TERMINATION.             *
*          2 - STEP NAME (ADDRESS IS ZERO FOR JOB TERM ENTRY)         *
*          3 - PROGRAMMERS NAME                                       *
*          4 - JOB EXECUTION TIME                                     *
*          5 - JOB ACCOUNTING FIELDS                                  *
*          6 - STEP EXECUTION TIME                                    *
*          7 - STEP ACCOUNTING FIELDS                                 *
*          8 - FLAGS AND STEP NUMBER                                  *
*          9 - TERMINATION STATUS                                     *
*         10 - SMF TERMINATION RECORD                                 *
*    REGISTER 12 POINTS TO A SYSTEM TABLE USED BY IEFYS WHEN          *
*       WRITING TO THE SYSTEM OUTPUT DATASET.  DO NOT DESTROY         *
*       REGISTER 12.                                                  *
*                                                                     *
* OUTPUT -                                                            *
*    AT STEP TERMINATION - AN ENTRY IN THE STEP TABLE CONTAINING THE  *
*       STEP'S ACCOUNTING INFORMATION.                                *
*    AT JOB TERMINATION - A TABLE SUMMARIZING THE JOB'S ACCOUNTING    *
*       INFORMATION , MESSAGES IDENTIFYING STANDARDS VIOLATIONS, AND  *
*       HOTNEWS IS WRITTEN TO THE SYSOUT MESSAGE DATASET.  THE JOB    *
*       PROCESSING CHARGES ARE WRITTEN TO TSO USERS.                  *
*    BOTH -                                                           *
*       REGISTER 1 CONTAINS A RETURN CODE OF 0 INDICATING THAT THE    *
*       SMF TERMINATION RECORD SHOULD BE WRITTEN.                     *
*       REGISTER 15 CONTAINS A RETURN CODE OF 0 INDICATING THAT THE   *
*       JOB SHOULD BE CONTINUED.                                      *
*                                                                     *
* WRITTEN - DOUG MOORE    FEBRUARY 1978                               *
*                                                                     *
* MODIFIED - DOUG MOORE  FEBRUARY 1978                                *
*    CODE ADDED FOR INTERFACE WITH IEFU83 WHICH GETS EXCP COUNTS FOR  *
*    DYNAMICALLY UNALLOCATED/CONCATENATED/DECONCATENATED DEVICES.     *
*                                                                     *
* MODIFIED - BEN MOORE   APRIL 1978                                   *
*    CODE ADDED TO CONSIDER THAT ALL TSO RECORDS COME FROM STEP 1.    *
*    CHANGES SUBPOOL FROM 229 TO 230 BECAUSE 229 IS FETCH PROTECTED   *
*       AND CHARGES COMMAND WAS S0C4ING.                              *
*                                                                     *
* MODIFIED - DOUG MOORE  JUNE  1978                                   *
*    STWA GETMAIN REMOVED TO IEFUJI.  IF IEFU83 OBTAINED STWA, IT WAS *
*    CHAINED OFF USER TCB AND NOT INIT TCB.  IT WAS FREED AT END OF   *
*    STEP AND IEFACTRT GOT S0C4.                                      *
*                                                                     *
* MODIFIED - DOUG MOORE  JULY  1978                                   *
*    CODE ADDED TO COMPUTE CHARGES AND OUTPUT THEM TO SYSOUT AND TO   *
*    TSO USER.                                                        *
*                                                                     *
* MODIFIED - DOUG MOORE  DECEMBER 1978                                *
*    CODE ADDED TO TEST FOR CHANGE IN YEAR IN ORDER TO USE NEW        *
*    RATES.  SEE COMMENTS BEFORE LABEL 'OLDRATES'.                    *
*                                                                     *
* MODIFIED - DOUG MOORE  DECEMBER 1979                                *
*    CHANGE WAIT TIME DISPLAYING CHARGES ON CRT FROM 10 TO 5 SECONDS. *
*    CHANGE RATES FOR 1980.                                           *
*                                                                     *
* MODIFIED - RICH OLCOTT DECEMBER 1980                                *
*    CHANGE RATES FOR 1981.                                           *
*                                                                     *
* MODIFIED - RICH OLCOTT OCTOBER 1981                                 *
*    REMOVED OPT=2 (JMRSTPSW CHECKING) LOGIC, PER MVS/SP-3.           *
*    CHANGE RATES FOR 1982.                                           *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
* MVSIEFYS - MACRO TO SET UP WRITE TO SYSOUT MESSAGE DATASET.  NOTE   *
*    THAT REGISTER 12 MUST CONTAIN THE VALUE IT CONTAINED AT ENTRY TO *
*    IEFACTRT BECAUSE IT POINTS TO A SYSTEM TABLE.                    *
***********************************************************************
         SPACE
         MACRO
         MVSIEFYS &MSGADDR,&MSGLTH
         MVC   36(4,12),&MSGADDR   MOVE MESSAGE ADDRESS AND
         MVC   42(2,12),&MSGLTH       LENGTH TO SYSTEM TABLE
         L     15,=V(IEFYS)        ADDR OF SMF MESSAGE ROUTINE
         BALR  14,15               BRANCH TO WRITE OUT MESSAGE
         MEND
         EJECT
IEFACTRT START 0
         SAVE  (14,12),,IEFACTRT-&SYSDATE-&SYSTIME   SAVE REGISTERS
         LR    BASEREG,R15         LOAD BASE REGISTER
         USING IEFACTRT,BASEREG
         SPACE 2
***********************************************************************
* CHECK COMMON EXIT PARAMETER AREA (JMR) USER ID FIELD FOR COMPLETE   *
* STANDARDS BYPASS.  RETURN IMMEDIATELY IF BYPASS REQUESTED.          *
* CHECK FOR SMF OPT=2 (STEP RECORDING). IF NOT SPECIFIED RETURN NOW.  *
***********************************************************************
         SPACE
         USING PARMLIST,R1
         L     JMRREG,PLJMR        POINT TO COMMON EXIT PARM AREA
         USING JMR,JMRREG
         DROP  R1
         TM    JMRUSEID,BIT0       Q. COMPLETE STDS BYPASS REQUESTED
         BO    RETURN2             ...YES, GET OUT NOW
*        TM    JMRINDC,JMRSTPSW    Q. IS STEP INFO BEING RECORDED  RJO
*        BNO   RETURN2             ...NO, GET OUT NOW        RJO 10/81
         SPACE 2
***********************************************************************
* POINT TO TCBUSER FIELD OF REGION CONTROL TASK'S TCB TO POINT TO     *
* STEP TABLE WORK AREA OBTAINED IN IEFUJI.                            *
***********************************************************************
         SPACE
         L     R2,548(0,0)         POINT TO CURRENT ASCB
         USING ASCB,R2
         L     R2,ASCBASXB         POINT TO ASXB
         USING ASXB,R2
         L     R2,ASXBFTCB         POINT TO RCT TCB
         USING TCB,R2
         LR    R3,R13              SAVE REG 13
         L     STWAREG,TCBUSER     POINT TO STWA
         LTR   STWAREG,STWAREG     Q. IS IT REALLY THERE
         BZ    RETURN3             ...NO, GIVE UP AND GO AWAY
         USING STWA,STWAREG
         ST    R3,STWARSA+4        CHAIN SAVE AREAS
         ST    R13,8(0,R3)
         SPACE  2
***********************************************************************
* POINT TO SMF RECORD.  GO TO STEP OR JOB TERMINATION ROUTINE AS      *
* INDICATED BY REGISTER 0.  IF REGISTER 0 IS NOT 12 OR 16 THEN RETURN.*
***********************************************************************
         SPACE
         USING PARMLIST,R1
         L     SMFREG,PLSMFRCD     POINT TO SMF RECORD
         DROP  R1
         SPACE
         CH    R0,=H'12'           Q. IS THIS STEP TERMINATION
         BE    STEPTERM            ...YES, GO DO IT
         CH    R0,=H'16'           Q. IS THIS JOB TERMINATION
         BE    JOBTERM             ...YES, GO DO IT
         SPACE
RETURN   DS    0H
         L     R13,STWARSA+4       GET ORIGINAL REG 13
RETURN2  DS    0H
         LM    R14,R12,12(R13)     RESTORE REGS
         SLR   R0,R0               WRITE SMF TERMINATION RECORD
         SLR   R15,R15             DO NOT CANCEL JOB
         BR    R14
         SPACE
RETURN3  DS    0H
         LR    R13,R3              GET ORIGINAL REG 13
         B     RETURN2
         TITLE '******* STEP TERMINATION HANDLER *******'
***********************************************************************
* SELECT ACCOUNTING INFORMATION AND STORE IN TABLE.  TABLE IS INDEXED *
* BY THE STEP NUMBER.  THE STEP NUMBER IS DECREMENTED BY ONE TO       *
* OBTAIN ZERO INDEXING.  STEP NUMBER, STEP NAME, AND PROGRAM NAME ARE *
* ALWAYS STORED.  IF STEP IS FLUSHED, NOTHING ELSE IS STORED.  IF THE *
* EXCP COUNT INVALID FLAG IS ON, THE FLAG IS IGNORED BECAUSE THE      *
* VALUE SYSTEM IGNORES IT.                                            *
*    IF THE STEP NUMBER IN THE SMF RECORD IS ZERO, RETURN.  THE STEP  *
* NUMBER SHOULD BE 1,2,3,ETC.                                         *
*                                                                     *
*    ON ENTRY:                                                        *
*       REG 13 POINTS TO THE WORK AREA                                *
*       REG 12 POINTS TO THE IEFYS WORK AREA                          *
*       SMFREG POINTS TO THE RDW OF THE TYPE 4 OR 34 SMF RECORD       *
***********************************************************************
         SPACE
STEPTERM DS    0H
         USING SMFRCD4,SMFREG      GET ADDRESSABILITY TO SMF RCD TYPE 4
         SLR   R2,R2               CLEAR REG FOR STEP NUMBER
         TM    JMRINDC,JMRFIND     Q. IS THIS A TSO USER
         BO    STEP1OK             ...YES, ALWAYS STEP 1
         ICM   R2,B'0001',SMF4STN  GET STEP NUMBER FROM SMF RECORD
*                                  Q. IS IT GOOFY (ZERO)
         BZ    RETURN              ...YES, IGNORE IT
         BCTR  R2,0                MAKE IT RELATIVE TO ZERO
STEP1OK  DS    0H
         LA    R3,STELTH           LENGTH OF ONE ENTRY
         MR    R2,R2               GET DISPLACEMENT OF ENTRY
         LA    STEREG,STEPTBLE(R3) POINT TO THIS STEPS ENTRY
         USING STEPTBLE,STEREG
         SPACE
         MVI   STNUM,1             ASSUME STEP 1 FOR TSO
         TM    JMRINDC,JMRFIND     Q. IS THIS A TSO USER
         DROP  JMRREG
         BO    STEP1OK2            ...YES, ALWAYS STEP 1
         MVC   STNUM,SMF4STN       STEP NUMBER
STEP1OK2 DS    0H
         MVC   STNAME,SMF4STMN     STEP NAME
         MVC   STPGMNM,SMF4PGMN    PROGRAM NAME
         MVC   STSTI,SMF4STI       STEP TERMINATION INDICATOR
         TM    SMF4STI,X'01'       Q. WAS STEP FLUSHED
         BO    STEXIT              ...YES, NO MORE TO DO
         SPACE
         MVC   STCMPCD,SMF4SCC     COMPLETION CODE
         MVC   STSRBTM,SMF4SRBT    SRB CPU TIME
         LH    R2,SMF4LENN         LENGTH OF DEVICE SECTION
         LA    R3,SMF4LENN(R2)     POINT TO CPU & ACCT SECTION
         USING SMF4LNTH,R3
         MVC   STTCBTM,SMF4SETM    TCB CPU TIME
         DROP  R3
         SPACE
EXCPOK   DS    0H
         LH    R15,SMF4LENN        LENGTH OF DEVICE ENTRY SEGMENT + 2
         SH    R15,=H'2'           SUBTRACT 2
         SRL   R15,3               DIVIDE BY 8 (LENGTH OF 1 ENTRY)
         LTR   R15,R15             Q. ANY DEVICE ENTRIES
         BZ    DEVDONE             ...NO, ALL DONE
         LA    R14,SMF4DEVC        POINT TO 1ST DEVICE ENTRY
         USING SMF4DEVC,R14
         SPACE 2
* REGS FOR TOTALING EXCP COUNTS MUST BE LOADED FROM TABLE BECAUSE
* IEFU83 COULD HAVE ALREADY PUT SOME COUNTS THERE.
         SPACE
         L     R3,STDISKEX         LOAD FOR TOTAL DISK EXCPS
*                                     (INCLUDES VIO)
         L     R4,STTAPEEX         LOAD FOR TOTAL TAPE EXCPS
         L     R5,STOTHREX         LOAD FOR TOTAL OTHER EXCPS
DEVLOOP  DS    0H
         CLI   SMF4DEVC,X'20'      Q. DISK
         BE    DISK                ...YES, GO TO DISK
         CLI   SMF4DEVC,X'80'      Q. TAPE
         BE    TAPE                ...YES, GO TO TAPE
         CLC   SMF4CUAD,=X'0FFF'   Q. VIO
         BE    DISK                ...YES, GO TO DISK
OTHER    DS    0H
         AL    R5,SMF4EXCP         ADD TO OTHER
         B     NEXTDEV             GO GET NEXT ENTRY
DISK     DS    0H
         AL    R3,SMF4EXCP         ADD TO DISK
         B     NEXTDEV             GO GET NEXT ENTRY
TAPE     DS    0H
         AL    R4,SMF4EXCP         ADD TO TAPE
NEXTDEV  DS    0H
         LA    R14,8(0,R14)        POINT TO NEXT DEVICE ENTRY
         BCT   R15,DEVLOOP         LOOP ON NUMBER OF ENTRIES
         ST    R3,STDISKEX         STORE TOTAL DISK EXCPS IN TABLE
         ST    R4,STTAPEEX         STORE TOTAL TAPE EXCPS IN TABLE
         ST    R5,STOTHREX         STORE TOTAL OTHER EXCPS IN TABLE
DEVDONE  DS    0H
         DROP  R14
         SPACE 5
***********************************************************************
* SAVE THE HIGHEST STEP NUMBER FOR THIS JOB.  BECAUSE OF RESTARTS,    *
* THE FIRST STEP NUMBER ENCOUNTERED MAY BE GREATER THAN ONE.  IN ANY  *
* EVENT THE STEP TABLE WILL BE CLEARED AT JOB TERMINATION FOR EACH    *
* JOB ONLY THRU THE HIGHEST STEP PROCESSED.                           *
***********************************************************************
         SPACE
STEXIT   DS    0H
         CLC   STNUM,STWAHISN      Q. IS THIS STEP NUMBER HIGHER
         BNH   NOCHGSN             ...NO, NO CHANGE
         MVC   STWAHISN,STNUM      ...YES, SAVE NEW HIGHEST STEP NUMBER
NOCHGSN  DS    0H
         B     RETURN
         DROP  STEREG
         TITLE '******* JOB TERMINATION HANDLER *******'
***********************************************************************
* WRITE JOB ACCOUNTING SUMMARY TABLE TO SYSOUT MESSAGE DATASET.  THEN *
* WRITE JOB TOTALS TO SYSOUT MESSAGE DATA SET.  WRITE CHARGES TO      *
* SYSOUT MESSAGE DATA SET AND, IF TSO, WRITE TO TERMINAL.             *
* CHECK FOR STANDARDS                                                 *
* VIOLATIONS (USER ID FIELD OF COMMON EXIT PARAMETER AREA) AND WRITE  *
* THEM TO SYSOUT MESSAGE DATA SET.  WRITE HOTNEWS, IF ANY, TO SYSOUT  *
* MESSAGE DATA SET.  IF THE HIGHEST STEP NUMBER WAS ZERO (NO STEPS),  *
* ONLY THE JOB TOTAL LINE APPEARS IN THE TABLE.  IEFYS REQUIRES THAT  *
* REGISTER 12 CONTAIN WHAT IT DID ON ENTRY TO IEFACTRT AS IT POINTS   *
* TO A SMF SYSTEM TABLE.                                              *
*                                                                     *
* ON ENTRY:                                                           *
*    REG 13 POINTS TO THE WORK AREA                                   *
*    REG 12 POINTS TO THE IEFYS WORK AREA.  DO NOT DESTROY.           *
*    SMFREG POINTS TO THE RDW OF THE TYPE 5 OR 35 SMF RECORD          *
***********************************************************************
         SPACE
JOBTERM  DS    0H
         USING SMFRCD5,SMFREG      GET ADDRESSABILITY TO SMF RCD TYPE 5
         LA    STEREG,STEPTBLE     POINT TO FIRST STEP TABLE ENTRY
         USING STEPTBLE,STEREG
         LA    PRNTREG,STWAMSG     POINT TO MESSAGE CONSTRUCTION AREA
         USING PRNTLINE,PRNTREG
         MVSIEFYS =A(STARS1),LINELTH   WRITE LINE OF ASTERISKS
         MVSIEFYS =A(HDR1),LINELTH     WRITE FIRST HEADING
         MVSIEFYS =A(HDR2),LINELTH     WRITE SECOND HEADING
         SLR   R3,R3               ZERO FOR TOTAL DISK EXCP COUNT
         SLR   R4,R4               ZERO FOR TOTAL TAPE EXCP COUNT
         SLR   R5,R5               ZERO FOR TOTAL OTHER EXCP COUNT
         SLR   R2,R2               CLEAR FOR COUNTER
         ICM   R2,B'0001',STWAHISN GET HIGHEST STEP NUMBER FOR JOB
*                                  Q. ANY STEPS
         BZ    JOBTOTAL            ...NO, GO DO TOTALS
         SPACE 2
***********************************************************************
* PRODUCE OUTPUT TABLE FROM STEP TABLE ENTRIES.  START AT FIRST ENTRY *
* AND GO THRU HIGHEST STEP NUMBER.  SKIP ANY ENTRIES WITH NO          *
* INFORMATION.  SUM UP EXCP COUNTS FOR JOB TOTALS.                    *
***********************************************************************
         SPACE
PRNTLOOP DS    0H
         CLI   STNUM,X'00'         Q. ANY INFO FOR THIS STEP
         BE    NXTSTPNP            ...NO, GO TO NEXT STEP WITHOUT PRINT
         MVC   PRNTALL,STARS2      CLEAR PRINT LINE
         SLR   R6,R6               CLEAR FOR STEP NUMBER
         IC    R6,STNUM            GET STEP NUMBER
         BAL   LNKREG1,BINEDIT     CONVERT TO EDITTED ZONE DECIMAL
         MVC   PRNTSNUM,STWAEDWK+13   MOVE TO PRINT LINE
         MVC   PRNTSNAM,STNAME     MOVE STEP NAME TO PRINT LINE
         MVC   PRNTPGM,STPGMNM     MOVE PROGRAM NAME TO PRINT LINE
         TM    STSTI,X'01'         Q. WAS STEP FLUSHED
         BNO   NOTFLUSH            ...NO, PROCEED
         MVC   PRNTCC+1(4),=C'NXEQ'   SHOW STEP NOT EXECUTED
         B     NEXTSTEP            GO TO NEXT STEP
         SPACE
NOTFLUSH DS    0H
         SLR   R6,R6               CLEAR FOR TCB TIME
         ICM   R6,B'0111',STTCBTM  GET TCB TIME
         BAL   LNKREG1,TIMEDIT     GET IT CONVERTED
         MVC   PRNTTCBT,STWAEDWK+2   MOVE TCB TIME TO PRINT LINE
         SLR   R6,R6               CLEAR FOR SRB TIME
         ICM   R6,B'0111',STSRBTM  GET SRB TIME
         BAL   LNKREG1,TIMEDIT     GET IT CONVERTED
         MVC   PRNTSRBT,STWAEDWK+2   MOVE SRB TIME TO PRINT LINE
         MVC   STWAFWK1(2),STCMPCD SET UP TO GET COMPLETION CODE
         MVC   STWAFWK1+2(1),STSTI
         BAL   LNKREG2,CCRTN       CONVERT COMPLETION CODE
         MVC   PRNTCC,STWAEDWK+11  COMPLETION CODE
         SPACE
EXCPVAL  DS    0H
         L     R6,STDISKEX         GET DISK EXCP COUNT
         LTR   R6,R6               Q. IS IT NEGATIVE (OVERFLOW)
         BNM   DISKOKS             ...NO, VALUE IS GOOD
         MVC   PRNTDISK,=10C'*'    ...YES, SHOW OVERFLOW
         B     CHKTAPES            GO CHECK TAPE COUNTS
DISKOKS  DS    0H
         ALR   R3,R6               ADD TO TOTAL
         BAL   LNKREG1,BINEDIT     CONVERT AND EDIT
         MVC   PRNTDISK,STWAEDWK+6   MOVE TO PRINT LINE
CHKTAPES DS    0H
         L     R6,STTAPEEX         GET TAPE EXCP COUNT
         LTR   R6,R6               Q. IS IT NEGATIVE (OVERFLOW)
         BNM   TAPEOKS             ...NO, VALUE IS GOOD
         MVC   PRNTTAPE,=10C'*'    ...YES, SHOW OVERFLOW
         B     CHKOTHRS            GO CHECK OTHER COUNTS
TAPEOKS  DS    0H
         ALR   R4,R6               ADD TO TOTAL
         BAL   LNKREG1,BINEDIT     CONVERT AND EDIT
         MVC   PRNTTAPE,STWAEDWK+6   MOVE TO PRINT LINE
CHKOTHRS DS    0H
         L     R6,STOTHREX         GET OTHER EXCP COUNT
         LTR   R6,R6               Q. IS IT NEGATIVE (OVERFLOW)
         BNM   OTHROKS             ...NO, VALUE IS GOOD
         MVC   PRNTOTHR,=10C'*'    ...YES, SHOW OVERFLOW
         B     NEXTSTEP
OTHROKS  DS    0H
         ALR   R5,R6               ADD TO TOTAL
         BAL   LNKREG1,BINEDIT     CONVERT AND EDIT
         MVC   PRNTOTHR,STWAEDWK+6   MOVE TO PRINT LINE
         SPACE 2
NEXTSTEP DS    0H
         MVSIEFYS STWAMSGA,LINELTH  PRINT A LINE
NXTSTPNP DS    0H
         LA    STEREG,STELTH(0,STEREG)   POINT TO NEXT STEP ENTRY
         BCT   R2,PRNTLOOP         LOOP ON NUMBER OF STEPS
         DROP  STEREG
         SPACE 5
***********************************************************************
* PRODUCE JOB TOTAL LINE.  TIME TOTALS COME FROM SMF RECORD.  EXCP    *
* COUNT TOTALS COME FROM SUM OF STEP EXCP COUNTS.  OVERFLOW COUNTS    *
* ARE EXCLUDED FROM THESE TOTALS.  THERE IS NO 'TOTAL' COMPLETION     *
* CODE.                                                               *
***********************************************************************
         SPACE
JOBTOTAL DS    0H
         MVSIEFYS =A(DASH),LINELTH   PRINT DASH SEPARATOR LINE
         MVC   PRNTALL,STARS2      CLEAR PRINT LINE
         MVC   PRNTSNUM,=CL3'JOB'  SET UP TOTALS LINE
         MVC   PRNTPGM+1(6),=CL6'TOTALS'
         MVC   PRNTSNAM,SMF5JBN    JOB NAME
         SLR   R6,R6               CLEAR REG FOR TCB TIME
         ICM   R6,B'0111',SMF5JCPU
         BAL   LNKREG1,TIMEDIT     CONVERT AND EDIT
         MVC   PRNTTCBT,STWAEDWK+2    TCB CPU TIME
         SLR   R6,R6               CLEAR REG FOR SRB TIME
         ICM   R6,B'0111',SMF5SRBT
         BAL   LNKREG1,TIMEDIT     CONVERT AND EDIT
         MVC   PRNTSRBT,STWAEDWK+2    SRB CPU TIME
         LTR   R6,R3               Q. IS TOTAL DISK EXCPS NEGATIVE
         BNM   DISKOKJ             ...NO, NO OVERFLOW
         MVC   PRNTDISK,=10C'*'    ...YES, SHOW OVERFLOW
         B     CHKTAPEJ            GO CHECK TAPE
DISKOKJ  DS    0H
         BAL   LNKREG1,BINEDIT     CONVERT AND EDIT
         MVC   PRNTDISK,STWAEDWK+6   TOTAL DISK EXCP COUNT
CHKTAPEJ DS    0H
         LTR   R6,R4               Q. IS TOTAL TAPE EXCPS NEGATIVE
         BNM   TAPEOKJ             ...NO, NO OVERFLOW
         MVC   PRNTTAPE,=10C'*'    ...YES, SHOW OVERFLOW
         B     CHKOTHRJ            GO CHECK TAPE
TAPEOKJ  DS    0H
         BAL   LNKREG1,BINEDIT     CONVERT AND EDIT
         MVC   PRNTTAPE,STWAEDWK+6   TOTAL TAPE EXCP COUNT
CHKOTHRJ DS    0H
         LTR   R6,R5               Q. IS TOTAL OTHER EXCPS NEGATIVE
         BNM   OTHROKJ             ...NO, NO OVERFLOW
         MVC   PRNTOTHR,=10C'*'    ...YES, SHOW OVERFLOW
         B     JOBEXCPD            DONE WITH JOB EXCP COUNTS
OTHROKJ  DS    0H
         BAL   LNKREG1,BINEDIT     CONVERT AND EDIT
         MVC   PRNTOTHR,STWAEDWK+6   TOTAL OTHER EXCP COUNT
JOBEXCPD DS    0H
         MVSIEFYS STWAMSGA,LINELTH   PRINT TOTALS LINE
         SPACE 2
***********************************************************************
* COMPUTE CHARGES FOR CPU TIME, DISK AND TAPE EXCPS *
***********************************************************************
         SPACE
* FIRST CHECK YEAR TO SEE IF NEW RATES ARE IN EFFECT
         LA    R15,NEWRATES        ASSUME NEW RATES
         L     R6,16               POINT TO CVT
         USING CVT,R6
         CLI   CVTDATE+1,OLDYEAR   Q. IS IT STILL OLD YEAR
         DROP  R6
         BNE   GOTRATES            ...NO, USE NEW RATES
         LA    R15,OLDRATES        ...YES, USE OLD RATES
GOTRATES DS    0H
         USING RATETBL,R15
         MVC   PRNTALL,STARS2      SETUP CHARGES LINE
         MVC   PRNTSNUM(22),=CL22'JOB PROCESSING CHARGES'
         SLR   R7,R7               ZERO REG
         ICM   R7,B'0111',SMF5JCPU   GET TCB TIME (100THS OF SECS)
         M     R6,CPUCOST          COMPUTE CPU COST
         D     R6,=F'100'          PER SECOND
         CH    R6,=H'50'           Q. NEED TO ROUND
         BL    NORNDCPU            ...NO, CONTINUE
         LA    R7,1(0,R7)          ...YES, ADD 1
NORNDCPU DS    0H
         CVD   R7,STWADWRK         CONVERT TO DECIMAL
         ZAP   STWAFWK1(8),STWADWRK   INIT TOTAL COST WITH CPU COST
         MVC   PRNTTCBC,COSTPTRN   MOVE IN EDIT PATTERN
         LA    R1,PRNTTCBC+7       SET R1 IN CASE SIGNIFICANCE FORCED
         EDMK  PRNTTCBC,STWADWRK+4   EDIT CPU COST
         BCTR  R1,0                DECREMENT FOR $ POSITION
         MVI   0(R1),C'$'          MOVE IN $
         LTR   R3,R3               Q. ARE DISK EXCPS INVALID (NEGATIVE)
         BNM   DISKOKC             ...NO, NO OVERFLOW
         MVC   PRNTDISK,=10C'*'    ...YES, SHOW OVERFLOW
         B     CHKTAPEC            GO CHECK TAPE
DISKOKC  DS    0H
         M     R2,DISKCOST         COMPUTE DISK EXCP COSTS
         D     R2,=F'1000'         PER 1000 EXCPS
         CH    R2,=H'500'          Q. NEED TO ROUND
         BL    NORNDDSK            ...NO, CONTINUE
         LA    R3,1(0,R3)          ...YES, ADD 1 TO COST
NORNDDSK DS    0H
         CVD   R3,STWADWRK         CONVERT DISK EXCP COST
         AP    STWAFWK1(8),STWADWRK   ADD TO TOTAL COST
         MVC   PRNTDISK,COSTPTRN   MOVE IN EDIT PATTERN
         LA    R1,PRNTDISK+7       SET R1 IN CASE SIGNIFICANCE FORCED
         EDMK  PRNTDISK,STWADWRK+4   EDIT DISK EXCP COST
         BCTR  R1,0                DECREMENT FOR $ POSITION
         MVI   0(R1),C'$'          MOVE IN $
CHKTAPEC DS    0H
         LTR   R3,R4               GET TAPE EXCPS FOR COST COMPUTATION
         BNM   TAPEOKC             ...NO, NO OVERFLOW
         MVC   PRNTTAPE,=10C'*'    ...YES, SHOW OVERFLOW
         B     ENDBCOST            THRU WITH BATCH COSTS
TAPEOKC  DS    0H
         M     R2,TAPECOST         COMPUTE TAPE EXCP COSTS
         D     R2,=F'1000'         PER 1000 EXCPS
         CH    R2,=H'500'          Q. NEED TO ROUND
         BL    NORNDTAP            ...NO, CONTINUE
         LA    R3,1(0,R3)          ...YES, ADD 1 TO COST
NORNDTAP DS    0H
         CVD   R3,STWADWRK         CONVERT TAPE EXCP COST
         AP    STWAFWK1(8),STWADWRK   ADD TO TOTAL COST
         MVC   PRNTTAPE,COSTPTRN   MOVE IN EDIT PATTERN
         LA    R1,PRNTTAPE+7       SET R1 IN CASE SIGNIFICANCE FORCED
         EDMK  PRNTTAPE,STWADWRK+4   EDIT TAPE EXCP COST
         BCTR  R1,0                DECREMENT FOR $ POSITION
         MVI   0(R1),C'$'          MOVE IN $
ENDBCOST DS    0H
         DROP  R15
* THIS LINE WILL BE EDITTED TO OBTAIN THE TSO CHARGES LINE
         MVSIEFYS STWAMSGA,LINELTH   PRINT CHARGES LINE
         MVSIEFYS =A(STARS1),LINELTH   PRINT LINE OF ASTERISKS
         SPACE 2
***********************************************************************
*   IF THIS IS  A TSO USER, EDIT THE CHARGE LINE AS CONSTRUCTED AND   *
*   WRITTEN ABOVE AND SEND IT TO THE TERMINAL.  THE TOTAL COST IS IN  *
*   STWAFWK1(8).                                                      *
***********************************************************************
         SPACE
         L     R2,STWARSA+4        RETRIEVE ENTRY REG 13
         L     R2,24(0,R2)         RETRIEVE PARM POINTER (REG 1)
         USING PARMLIST,R2
         L     JMRREG,PLJMR        POINT TO JMR
         USING JMR,JMRREG
         DROP  R2
         TM    JMRINDC,JMRFIND     Q. IS THIS A TSO USER
         BNO   NOTSCOST            ...NO, SKIP ALL THIS
         STLINENO LINE=1           LINE=1 FOR 3270'S TO INSURE LOGOFF
         MVC   PRNTALL(13),=CL13'   CHARGES  $'  PUT IN IDENTIFIER
         MVC   STWAEDWK(10),COSTPTRN   EDIT PATTERN
         LA    R1,STWAEDWK+7       SET R1 IN CASE SIGNIFICANCE FORCED
         EDMK  STWAEDWK(10),STWAFWK2   EDIT TOTAL COST
         LA    R2,STWAEDWK+10      COMPUTE LENGTH TO MOVE
         SR    R2,R1               R2 = LENGTH OF EDITTED COST
         EX    R2,COSTMVC1         MOVE TOTAL COST TO MESSAGE
         LA    R1,PRNTALL+13(R2)   POINT TO NEXT AVAILABLE SPACE
         MVI   0(R1),C'('          MOVE IN LEFT PARENTHESIS
         LA    R1,1(0,R1)          BUMP POINTER
         LA    R2,PRNTTCBC         START OF CPU COST
         LA    R3,L'PRNTTCBC       LENGTH
         BAL   LNKREG1,CMPCTCST    MOVE CPU COST
         MVI   0(R1),C','          PUT IN COMMA
         LA    R1,1(0,R1)          BUMP POINTER
         LA    R2,PRNTDISK         START OF DISK EXCP COST
         LA    R3,L'PRNTDISK       LENGTH
         BAL   LNKREG1,CMPCTCST    MOVE DISK EXCP COST
         MVI   0(R1),C','          PUT IN COMMA
         LA    R1,1(0,R1)          BUMP POINTER
         LA    R2,PRNTTAPE         START OF TAPE EXCP COST
         LA    R3,L'PRNTTAPE       LENGTH
         BAL   LNKREG1,CMPCTCST    MOVE TAPE EXCP COST
         MVI   0(R1),C')'          CLOSE COST FIELDS
         LA    R0,1(0,R1)          BUMP POINTER
         LA    R1,PRNTALL          START ADDRESS FOR TPUT
         SR    R0,R1               COMPUTE LENGTH
         TPUT  (1),(0),R           WRITE THE COSTS TO THE TERMINAL
         GTSIZE                    , GET TERMINAL LINE SIZE
         LTR   R0,R0               Q. IS THIS A VIDEO TERMINAL
         BZ    NOTSCOST            ...NO, DO NOT DO WAIT
         STIMER WAIT,BINTVL=WAITTIME  ...YES, DISPLAY MSG AND WAIT
NOTSCOST DS    0H
         SPACE 2
***********************************************************************
*   IF THE JOB INITIATION ROUTINE (IEFUJI) FAILED THIS JOB BECAUSE    *
*   OF STANDARDS VIOLATIONS, IT HAS INDICATED THE REASONS IN THE      *
*   SECOND BYTE OF JMRUSEID.     THIS ROUTINE WILL INDICATE THOSE     *
*   REASONS TO THE PROGRAMMER.                                        *
***********************************************************************
         SPACE
CHKSTDS  EQU   *
*        NOTE THAT JMRREG WAS LOADED IN TSO COST ROUTINE
         TM    JMRUSEID+1,255-BIT0 Q. ANY STANDARDS VIOLATIONS
         BZ    CLEANUP             ...NO, GO CLEAR STEP TABLE
         MVC   PRNTALL,STARS2      ...YES, CLEAR PRINT LINE
         MVC   PRNTALL+2(53),SVHDR   MOVE IN STD VIOLATIONS HEADING
         MVSIEFYS STWAMSGA,LINELTH   WRITE IT
         MVC   PRNTALL,STARS2      CLEAR PRINT LINE
         TM    JMRUSEID+1,BIT1+BIT4+BIT5+BIT6+BIT7
*                                  Q. ANY MISSING/INVALID VIOLATIONS
         BZ    CHKCOMBO            ...NO, TRY THE OTHERS
         LA    R6,PRNTALL+5        ...YES, SET ADDR OF PRINT POSITION
         MVC   0(19,R6),=CL19'MISSING OR INVALID'   SET HEADER
         LA    R6,19(R6)           BUMP POINTER
         TM    JMRUSEID+1,BIT1     Q. EMPLOYEE NUMBER MISSING/INVALID
         BNO   CHKJOBN             ...NO, CHECK JOB NUMBER
         MVC   0(17,R6),=CL17'EMPLOYEE NUMBER, '   ..YES, MOVE MSG IN
         LA    R6,17(R6)           BUMP POINTER
CHKJOBN  EQU   *
         TM    JMRUSEID+1,BIT4     Q. JOB NUMBER MISSING/INVALID
         BNO   CHKID               ...NO, CHECK ID
         MVC   0(09,R6),=CL9'JOBNAME, '   ..YES, MOVE MSG IN
         LA    R6,9(R6)            BUMP POINTER
CHKID    EQU   *
         TM    JMRUSEID+1,BIT5     Q. ID MISSING/INVALID
         BNO   CHKMAJ              ...NO, CHECK MAJOR SYSTEM
         MVC   0(4,R6),=CL4'ID, '  ...YES, MOVE MSG IN
         LA    R6,4(R6)            BUMP POINTER
CHKMAJ   EQU   *
         TM    JMRUSEID+1,BIT6     Q. MAJOR SYSTEM MISSING/INVALID
         BNO   CHKPGMR             ...NO, CHECK PROGRAMMER
         MVC   0(14,R6),=CL14'MAJOR SYSTEM, '   ...YES, MOVE MSG IN
         LA    R6,14(R6)           BUMP POINTER
CHKPGMR  EQU   *
         TM    JMRUSEID+1,BIT7     Q. PROGRAMMER NAME MISSING/INVALID
         BNO   WRITEMI             ...NO, WRITE WHAT WAS M/I
         MVC   0(17,R6),=CL17'PROGRAMMER NAME, '   ...YES, MOVE MSG IN
         LA    R6,17(R6)           BUMP POINTER
WRITEMI  DS    0H
         SH    R6,=H'2'            POINT TO LAST COMMA
         MVI   0(R6),C' '          ELIMINATE IT
         MVSIEFYS STWAMSGA,LINELTH   WRITE MISSING/INVALID LINE
         SPACE
CHKCOMBO DS    0H
         TM    JMRUSEID+1,BIT2     Q. INVALID COMBINATION
         BNO   CHKCOMPT            ...NO, CHECK COMPATIBILITY
         MVC   PRNTALL,STARS2      CLEAR PRINT LINE
         MVC   PRNTALL+5(51),SVINCOMB   ...YES, MOVE IN MSG
         MVSIEFYS STWAMSGA,LINELTH  WRITE IT
         SPACE
CHKCOMPT DS    0H
         TM    JMRUSEID+1,BIT3     Q. INCOMPATIBLES
         BNO   ENDSVCHK            ...NO, ALL DONE
         MVC   PRNTALL,STARS2      CLEAR PRINT LINE
         MVC   PRNTALL+5(48),SVINCOMP   ...YES, MOVE IN MSG
         MVSIEFYS STWAMSGA,LINELTH  WRITE IT
         SPACE
ENDSVCHK DS    0H
         DROP  JMRREG
         MVSIEFYS =A(STARS1),LINELTH   WRITE LINE OF *'S
         SPACE 2
***********************************************************************
* CLEAR OUT STEP TABLE THRU HIGHEST STEP FOR THIS JOB.  RESET HIGHEST *
* STEP FOR JOB INDICATOR.                                             *
***********************************************************************
         SPACE
CLEANUP  DS    0H
         SLR   R3,R3               CLEAR REG
         IC    R3,STWAHISN         GET HIGHEST STEP NUMBER
         LA    R2,STELTH           LENGTH OF 1 ENTRY
         MR    R2,R2               LENGTH OF AREA TO CLEAR
         LA    R2,STEPTBLE         BEGINNING OF STEP TABLE
         SLR   R4,R4               FROM ADDRESS
         SLR   R5,R5               PAD = X'00', LENGTH = 0
         MVCL  R2,R4               CLEAR TABLE THRU HIGHEST STEP USED
         MVI   STWAHISN,X'00'      RESET HIGHEST STEP NUMBER
         SPACE 2
***********************************************************************
* PRINT OUT HOTNEWS IF THERE IS ANY.                                  *
***********************************************************************
         SPACE
         B     NONEWS              FORGET ABOUT HOTNEWS             BAM
         LA    R15,1               GET FF FOR BLDL
         STH   R15,STWABLST        PUT IN LIST
         LA    R15,60              GET LL FOR BLDL
         STH   R15,STWABLST+2      PUT IN LIST
         MVC   STWAHOTN,=CL8'HOTNEWS'  PUT MODULE NAME IN LIST
         BLDL  0,STWABLST          CHECK TO SEE IF HOTNEWS IS AVAILABLE
         LTR   R15,R15             WAS RETURN CODE ZERO
         BNZ   NONEWS              NO - EXIT
         LOAD  DE=STWAHOTN         YES - LOAD HOTNEWS
         LR    R6,R0               SAVE ENTRY POINT ADDRESS
NEWSLOOP DS    0H
         CLI   0(R6),X'FF'         END OF HOTNEWS
         BE    NEWSEXIT            YES - EXIT
         MVI   PRNTALL,C' '        NO - CLEAR
         MVC   PRNTALL+1(131),PRNTALL     PRINT LINE
         MVC   PRNTALL(8),=CL8'HOTNEWS'  IDENTIFY PRINT LINE
         MVC   PRNTALL+20(80),0(R6)  PUT LINE OF NEWS IN PRINT LINE
         MVSIEFYS STWAMSGA,HNEWSLTH  WRITE LINE
         LA    R6,80(,R6)          BUMP TO NEXT LINE OF NEWS
         B     NEWSLOOP            LOOP
NEWSEXIT DS    0H
         MVC   STWAHOTN,=CL8'HOTNEWS'  PUT MODULE NAME IN LIST
         DELETE EPLOC=STWAHOTN     DELETE STWAHOTN MODULE
NONEWS   DS    0H
         B     RETURN              ALL DONE
         TITLE '******* SUBROUTINES *******'
***********************************************************************
* BINEDIT(N) - CONVERT FULLWORD BINARY TO DECIMAL AND EDIT.           *
*    BINEDIT ENTRY CAUSES ZERO SUPPRESSION, BINEDITN ENTRY CAUSES NO  *
*    ZERO SUPPRESSION.  THE FULLWORD IN REGISTER 6 IS CONVERTED TO    *
*    DECIMAL IN STWADWRK AND EDITTED INTO STWAEDWK. RETURN IS ON      *
*    LNKREG1.                                                         *
*                                                                     *
* ON ENTRY:                                                           *
*    REG 13 POINTS TO THE WORK AREA                                   *
*    REG 12 POINTS TO THE IEFYS WORK AREA                             *
*    REG 6 CONTAINS THE NUMBER TO BE CONVERTED AND EDITTED            *
*    LNKREG1 CONTAINS THE RETURN ADDRESS                              *
***********************************************************************
         SPACE
BINEDIT  DS    0H
         USING STWA,STWAREG
         MVC   STWAEDWK,ZEROSUPP   MOVE IN ZERO SUPPRESSION PATTERN
         B     BECNVRT
BINEDITN DS    0H
         MVC   STWAEDWK,NOZEROSP   MOVE IN NO ZERO SUPPRESSION PATTERN
BECNVRT  DS    0H
         CVD   R6,STWADWRK         CONVERT TO DECIMAL
         ED    STWAEDWK,STWADWRK   EDIT IT
         BR    LNKREG1             RETURN
         EJECT
***********************************************************************
* CCRTN - DECODE COMPLETION CODE.                                     *
*    STWAFWK1 CONTAINS THE JOB/STEP TERMINATION INDICATOR IN BYTE 2   *
*    AND THE COMPLETION CODE IN BYTES 0-1.  THE RESULT IS RETURNED IN *
*    THE LAST FIVE BYTES OF STWAEDWK.  BINEDITN IS CALLED IF THE CODE *
*    IS NOT A SYSTEM ABEND.  RETURN IS BY LNKREG2.                    *
*                                                                     *
* ON ENTRY:                                                           *
*    REG 13 POINTS TO THE WORK AREA                                   *
*    REG 12 POINTS TO THE IEFYS WORK AREA                             *
*    LNKREG2 CONTAINS THE RETURN ADDRESS                              *
*                                                                     *
* ON EXIT:                                                            *
*    LNKREG1 IS DESTROYED                                             *
***********************************************************************
         SPACE
CCRTN    DS    0H
         TM    STWAFWK1+2,X'02'    Q. DID STEP ABEND
         BO    ABEND               ...YES, PROCESS SYSTEM OR USER ABEND
         MVI   STWAFWK1+3,C' '     INDICATE THIS IS CONDITION CODE
CNVRTCC  DS    0H                  CONDITION CODE
         LH    R6,STWAFWK1         GET COMPLETION CODE
         BAL   LNKREG1,BINEDITN    CONVERT AND EDIT
         MVC   STWAEDWK+11(1),STWAFWK1+3 INDICATE CC OR USER ABEND
         B     CMPCDEND
ABEND    DS    0H
         TM    STWAFWK1,X'80'      Q. IS THIS USER ABEND
         BNO   SYSABEND            ...NO, GO PROCESS SYSTEM ABEND
         NI    STWAFWK1,X'7F'      TURN OFF USER ABEND INDICATOR
         MVI   STWAFWK1+3,C'U'     SHOW IT IS USER ABEND
         B     CNVRTCC
SYSABEND DS    0H
         UNPK  STWADWRK(5),STWAFWK1(3) CONVERT FROM HEX TO CHARS
         NC    STWADWRK+1(3),=3X'0F'
         TR    STWADWRK+1(3),HEXTABLE
         MVC   STWAEDWK+13(3),STWADWRK+1 MOVE TO RETURN FIELD
         MVC   STWAEDWK+11(2),=C' S'     INDICATE SYSTEM ABEND
CMPCDEND DS    0H
         BR    LNKREG2             RETURN
         EJECT
***********************************************************************
* TIMEDIT - CONVERT TIME AND EDIT TO HH:MM:SS.HH FORM.                *
*    REGISTER 6 CONTAINS THE TIME TO BE CONVERTED.  OBTAIN MINUTES,   *
*    SECONDS, AND HUNDRETHS OF SECONDS AND THEN CONVERT AND EDIT      *
*    USING STWADWRK, STWAFWK1, STWAFWK2, STWAEDWK. RETURN IS BY       *
*    LNKREG1.                                                         *
*                                                                     *
* ON ENTRY:                                                           *
*    REG 13 POINTS TO THE WORK AREA                                   *
*    REG 12 POINTS TO THE IEFYS WORK AREA                             *
*    REG 6 CONTAINS THE TIME TO BE CONVERTED (IN HUNDRETHS OF SECONDS)*
*    LNKREG1 CONTAINS THE RETURN ADDRESS                              *
*                                                                     *
* ON EXIT:                                                            *
*    REGS 6,7 DESTROYED                                               *
***********************************************************************
         SPACE
TIMEDIT  DS    0H
         USING STWA,STWAREG
         MVC   STWAEDWK(13),TIMEPTRN   TIME EDIT PATTERN
         XC    STWAFWK1,STWAFWK1       CLEAR EDITTED TIME ASSEMBLY AREA
         SRDL  R6,32               SET UP FOR DIVISIONS
         D     R6,=F'360000'       GET HOURS (360000 100THS/HOUR)
         CVD   R7,STWADWRK         CONVERT HOURS
         NI    STWADWRK+7,X'F0'    TURN OFF SIGN
         MVC   STWAFWK1(2),STWADWRK+6   MOVE IN HOURS
         SRDL  R6,32               SHIFT FOR NEXT DIVISION
         D     R6,=F'6000'         GET MINUTES (6000 HUNDRETHS/MINUTE)
         CVD   R7,STWADWRK         CONVERT MINUTES
         NI    STWADWRK+7,X'F0'    TURN OFF SIGN
         OC    STWAFWK1+1(2),STWADWRK+6   MOVE IN MINUTES
         SRDL  R6,32               SHIFT REMAINDER FOR DIVISION
         D     R6,=F'100'          GET SECONDS (100 HUNDRETHS/SECOND)
         CVD   R6,STWADWRK         CONVERT HUNDRETHS
         MVC   STWAFWK1+3(2),STWADWRK+6   MOVE IN HUNDRETHS
         CVD   R7,STWADWRK         CONVERT SECONDS
         NI    STWADWRK+7,X'F0'    TURN OFF SIGN
         OC    STWAFWK1+2(2),STWADWRK+6   MOVE IN SECONDS
         ED    STWAEDWK(13),STWAFWK1   EDIT TIME
         BR    LNKREG1             RETURN
         EJECT
***********************************************************************
* CMPCTCST - COMPACT BATCH COST LINE FOR OUTPUT TO TSO TERMINAL.      *
*    REGISTER 2 CONTAINS THE ADDRESS OF THE FIELD IN THE BATCH COST   *
*    LINE TO BE MOVED AND REGISTER 3 CONTAINS IT'S LENGTH.  THE FIELD *
*    IS SEARCHED FOR A $ OR * AND EXTRA BLANKS ARE COMPACTED OUT.     *
*    RETURN IS ON LNKREG1.                                            *
*                                                                     *
* ON ENTRY:                                                           *
*    REG 13 POINTS TO THE WORK AREA                                   *
*    REG 12 POINTS TO THE IEFYS WORK AREA                             *
*    REG 2 CONTAINS THE ADDRESS OF THE FIELD TO BE MOVED              *
*    REG 3 CONTAINS THE LENGTH OF THE FIELD POINTED TO BY REG 2       *
*    LNKREG1 CONTAINS THE RETURN ADDRESS                              *
*                                                                     *
* ON EXIT:                                                            *
*    REGS 2,3 DESTROYED                                               *
***********************************************************************
         SPACE
CMPCTCST DS    0H
         USING STWA,STWAREG
         CLI   0(R2),C'$'          Q. START OF EDITTED COST FOUND
         BE    FNDOLLAR            ...YES, GO MOVE IT
         CLI   0(R2),C'*'          Q. COST INVALID (EXCP OVERFLOW)
         BE    FNDSTAR             ...YES, GO MOVE IT
         LA    R2,1(0,R2)          BUMP TO NEXT BYTE
         BCT   R3,CMPCTCST         LOOP ON FIELD LENGTH
FNDSTAR  DS    0H
         MVC   0(3,R1),=10C'*'     SHOW INVALID (REUSE A LITERAL)
         LA    R1,3(0,R1)          BUMP POINTER
         B     CMPCTRTN            RETURN
FNDOLLAR DS    0H
         BCTR  R3,0                DECREMENT LENGTH TO SKIP $
         EX    R3,COSTMVC2         MOVE IN COST WITHOUT $
         LA    R1,0(R3,R1)         BUMP POINTER
CMPCTRTN DS    0H
         BR    LNKREG1             RETURN
         SPACE 3
COSTMVC1 MVC   PRNTALL+13(0),0(R1)   MOVE TOTAL COST TO TSO LINE
COSTMVC2 MVC   0(0,R1),1(R2)         COMPACT COST IN BATCH LINE FOR TSO
         TITLE '******* EQUATES /  CONSTANTS *******'
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE
LNKREG1  EQU   R15                 INTERNAL LINK REGISTER
LNKREG2  EQU   R14                 INTERNAL LINK REGISTER
STWAREG  EQU   R13                 STWA POINTER
BASEREG  EQU   R11                 BASE REGISTER
STEREG   EQU   R10                 STEP TABLE ENTRY POINTER
SMFREG   EQU   R9                  SMF RECORD POINTER
PRNTREG  EQU   R8                  PRINT LINE POINTER
JMRREG   EQU   R7                  COMMON EXIT PARM AREA (JMR) POINTER
         SPACE
BIT0     EQU   X'80'
BIT1     EQU   X'40'
BIT2     EQU   X'20'
BIT3     EQU   X'10'
BIT4     EQU   X'08'
BIT5     EQU   X'04'
BIT6     EQU   X'02'
BIT7     EQU   X'01'
         SPACE 5
***********************************************************************
* RATES FOR COST CALCULATIONS.  MAINTAIN CONCURRENT WITH VALUE SYSTEM.*
* NOTE:  ACTRT COMPARES THE YEAR TO DETERMINE THE RATE TABLE TO USE.  *
* THERE IS A TABLE FOR THE OLD YEAR AND FOR THE NEW YEAR.  IF THE     *
* RATES DO NOT CHANGE, THE PROGRAM NEED NOT BE CHANGED.  IF THE RATES *
* CHANGE, MAKE THE NEW RATE TABLE THE OLD RATE TABLE AND ADD THE NEW  *
* RATES.  THEN CHANGE THE 'OLDYEAR' EQU TO BE THE FINAL 2 DIGITS OF   *
* THE OLD YEAR NUMBER.                                                *
***********************************************************************
         SPACE
OLDYEAR  EQU   X'81'               OLD YEAR = 1981
         SPACE
OLDRATES DS    0F                  NEW YEARS RATES (1981)
         DC    F'25'               $0.25 / SECOND
         DC    F'25'               $0.25 / 1000 DISK EXCPS
         DC    F'25'               $0.25 / 1000 TAPE EXCPS
         DC    F'190'              $1.90 / 1000 OTHER EXCPS
         SPACE 2
NEWRATES DS    0F                  NEW YEARS RATES (1982)
         DC    F'22'               $0.22 / SECOND
         DC    F'27'               $0.27 / 1000 DISK EXCPS
         DC    F'31'               $0.31 / 1000 TAPE EXCPS
         DC    F'203'              $2.03 / 1000 OTHER EXCPS
         SPACE 2
WAITTIME DC    F'0500'             05 SECOND STIMER VALUE
LINELTH  DC    H'97'               LENGTH OF SUMMARY TABLE OUTPUT LINE
HNEWSLTH DC    H'100'              LENGTH OF HOTNEWS LINE
HEXTABLE DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'
ZEROSUPP DC    X'40202020202020202020202020202120'   ZERO SUPPRESSION
NOZEROSP DC    X'40212020202020202020202020202020'   NO ZERO SUPPRESS
TIMEPTRN DC    X'402020207A20207A21204B2020'   TIME EDIT PATTERN
COSTPTRN DC    X'4020206B2020214B2020'   COST EDIT PATTERN
         SPACE 2
STARS1   DC    97C'*'              LINE OF *'S
STARS2   DS    0CL97               BLANK LINE WITH BORDERING *'S
         DC    CL96'*'
         DC    CL1'*'
HDR1     DS    0CL97               FIRST HEADING LINE
         DC    CL3'*'
         DC    CL4'STEP'
         DC    CL3' '
         DC    CL4'STEP'
         DC    CL5' '
         DC    CL7'PROGRAM'
         DC    CL5' '
         DC    CL8'TCB TIME'
         DC    CL5' '
         DC    CL8'SRB TIME'
         DC    CL7' '
         DC    CL4'DISK'
         DC    CL8' '
         DC    CL4'TAPE'
         DC    CL8' '
         DC    CL5'OTHER'
         DC    CL3' '
         DC    CL4'COND'
         DC    CL2' *'
HDR2     DS    0CL97               SECOND HEADING LINE
         DC    CL5'*'
         DC    CL1'#'
         DC    CL4' '
         DC    CL4'NAME'
         DC    CL6' '
         DC    CL4'NAME'
         DC    CL35' '
         DC    CL5'EXCPS'
         DC    CL7' '
         DC    CL5'EXCPS'
         DC    CL7' '
         DC    CL5'EXCPS'
         DC    CL3' '
         DC    CL4'CODE'
         DC    CL2' *'
DASH     DS    0CL97               DASH SEPARATOR LINE
         DC    CL3'*'
         DC    CL3'---'
         DC    CL2' '
         DC    CL8'--------'
         DC    CL2' '
         DC    CL8'--------'
         DC    CL2' '
         DC    CL11'-----------'
         DC    CL2' '
         DC    CL11'-----------'
         DC    CL2' '
         DC    CL10'----------'
         DC    CL2' '
         DC    CL10'----------'
         DC    CL2' '
         DC    CL10'----------'
         DC    CL2' '
         DC    CL5'-----'
         DC    CL2' *'
SVHDR    DC    CL53'JOB FAILED BECAUSE OF FOLLOWING STANDARDS VIOLATION*
               S:'
SVINCOMB DC    CL51'INVALID MAJOR SYSTEM/DIVISION/SUBSYSTEM COMBINATION*
               '
SVINCOMP DC    CL48'JOBNAME SUFFIX/ID/EMPLOYEE NUMBER - INCOMPATIBLE'
         SPACE 5
         ENTRY PATCH
PATCH    DC    50S(*)              GENERATE SCONS FOR PATCH AREA
         LTORG
         TITLE '******* DATA AREAS (DSECTS) *******'
         STWA
         SPACE 5
PRNTLINE DSECT                     DETAIL PRINT LINE OF SUMMARY TABLE
PRNTALL  DS    0CL97               ENTIRE LINE
         DS    CL3
PRNTSNUM DS    CL3                 STEP NUMBER
         DS    CL2
PRNTSNAM DS    CL8                 STEP NAME
         DS    CL2
PRNTPGM  DS    CL8                 PROGRAM NAME
         DS    CL2
PRNTTCBT DS    CL11                TCB CPU TIME
         ORG   PRNTTCBT+1
PRNTTCBC DS    CL10                TCB CPU TIME COST
         ORG
         DS    CL2
PRNTSRBT DS    CL11                SRB CPU TIME
         DS    CL2
PRNTDISK DS    CL10                DISK EXCP COUNT
         DS    CL2
PRNTTAPE DS    CL10                TAPE EXCP COUNT
         DS    CL2
PRNTOTHR DS    CL10                OTHER EXCP COUNT
         DS    CL2
PRNTCC   DS    CL5                 COMPLETION CODE
         DS    CL2
         SPACE 5
RATETBL  DS    0F                  CHARGE RATE TABLE
CPUCOST  DS    F                   COST / CPU SECOND
DISKCOST DS    F                   COST / 1000 DISK EXCPS
TAPECOST DS    F                   COST / 1000 TAPE EXCPS
OTHRCOST DS    F                   COST / 1000 OTHER EXCPS
         SPACE 5
PARMLIST DSECT                     IEFACTRT PARAMETER LIST
PLJMR    DS    F                   COMMON EXIT PARAMETER AREA (JMR)
PLSTPNM  DS    F                   STEP NAME (8)
PLPRGRMR DS    F                   PROGRAMMERS NAME (20)
PLJCT    DS    F                   JOB CPU TIME(3)/# JOB ACCT FLDS(1)
PLJAI    DS    F                   JOB ACCOUNTING INFO (VARYING)
PLSCT    DS    F                   STEP CPU TIME(3)/# STEP ACCT FLDS(1)
PLSAI    DS    F                   STEP ACCOUNTING INFO (VARYING)
PLFLGSN  DS    F                   FLAGS (1) AND STEP NUMBER (1)
PLCMPCD  DS    F                   COMPLETION CODE (2)
PLSMFRCD DS    F                   POINTER TO RDW FOLLOWED BY SMF RCD
         SPACE 3
         PRINT NOGEN
         TITLE 'JMR DSECT'
         IEFJMR
         TITLE 'SMF RECORDS DSECTS'
         IFASMFR (4,5,34,35)
         TITLE 'ASCB DSECT'
         IHAASCB
         TITLE 'ASXB DSECT'
         IHAASXB
         TITLE 'TCB DSECT'
         IKJTCB
         TITLE 'CVT DSECT'
         CVT   DSECT=YES
         SPACE 5
         END   IEFACTRT
