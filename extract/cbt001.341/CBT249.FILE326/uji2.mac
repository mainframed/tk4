         TITLE 'SCHERING - SMF - JOB INITIATION EXIT - IEFUJI'
IEFUJI   CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2              WORK
R3       EQU   3              WORK
R4       EQU   4              WORK
R5       EQU   5              WORK
R6       EQU   6
R7       EQU   7              SMF COMMON PARAMETER AREA
R8       EQU   8              PROGRAMMER'S NAME
R9       EQU   9              REQUESTED JOB PRIORITY
R10      EQU   10             ACCTG INFO FROM JOB CARD
R11      EQU   11             BASE
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 2
BIT0     EQU   128
BIT1     EQU   64
BIT2     EQU   32
BIT3     EQU   16
BIT4     EQU   8
BIT5     EQU   4
BIT6     EQU   2
BIT7     EQU   1
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*   THIS MODULE WILL CHECK THE JOB CARD FOR VALID ACCOUNTING DATA AS  *
*   FOLLOWS:                                                          *
*                                                                     *
*       1.JOBNAME                                                     *
*                   A. 1 ALPHABETIC CHARACTERS (DIVISION)             *
*                   B. 3 ALPHAMERIC CHARACTERS (SUB SYSTEM)           *
*                   C. 3 NUMERIC CHARACTERS    (JOB NUMBER)           *
*                   D. EIGHTH  POSITION MUST BE:                      *
*                             NUMERIC FOR TESTING                     *
*                             ALPHA FOR PRODUCTION                    *
*                                                                     *
*       2.ACCOUNTING FIELDS (POSITIONAL)                              *
*                   A. BATCH - 2 DIGITS (MAJOR SYSTEM)       BAM 77.210
*                   A. TSO -                                 BAM 77.210
*                      1 ALPHABETIC CHARACTERS (DIVISION)    BAM 77.210
*                      3 ALPHAMERIC CHARACTERS (SUB SYSTEM)  BAM 77.210
*                      3 NUMERIC CHARACTERS                  BAM 77.210
*                      EIGHTH  POSITION MUST BE:             BAM 77.210
*                             NUMERIC FOR TESTING            BAM 79.095
*                             'X' FOR PRODUCTION             BAM 77.210
*                   B. 1 DIGIT          (IDENTIFICATION)              *
*                             1. DEVELOPMENT TESTING                  *
*                             2. NON-OPERATIONAL PRODUCTION           *
*                             3. OPERATIONAL PRODUCTION               *
*                             4. MAINTENANCE TESTING                  *
*                             5. PRODUCTION (IMS BATCH OR BMP)        *
*                             6. PRODUCTION (IMS CNTRL OR MP)         *
*                             7. TSO                                  *
*                   C. 5 DIGITS         (EMPLOYEE NUMBER)             *
*                                                                     *
*                                                                     *
*                       ---> JMRUSEID <---                            *
*                                                                     *
*     THIS FIELD IS USED TO COMMUNICATE BETWEEN THE USER WRITTEN SMF  *
*     EXITS. BYTE ZERO IS DOCUMENTED IN EXIT IEFUJV.                  *
*                                                                     *
*     BYTE ONE:                                                       *
*              BIT0   -  UNUSED                                       *
*              BIT1   -  INVALID OR MISSING EMPLOYEE NUMBER           *
*              BIT2   -  MAJOR SYSTEM/DIVISION/SUBSYSTEM MISMATCH     *
*              BIT3   -  ACCOUNTING FIELDS ARE INCOMPATABLE           *
*                        MISSING OR INVALID ACCT. # FOR TSO  BAM 77.210
*              BIT4   -  INVALID JOBNAME                              *
*              BIT5   -  INVALID OR MISSING ID FIELD                  *
*              BIT6   -  INVALID OR MISSING MAJOR SYSTEM              *
*              BIT7   -  INVALID OR MISSING PROGRAMMER NAME           *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
         SAVE  (14,12),,IEFUJI-PS00016-&SYSDATE              BAM 77.210
         LR    R11,R15
         USING IEFUJI,R11
         LR    R6,R1               SAVE PARAMETER LIST ADDRESS
         LA    R0,WKARLEN
         GETMAIN R,LV=(0)
         ST    R1,8(,R13)          CHAIN SAVE AREAS
         ST    R13,4(,R1)
         LR    R13,R1              REFERENCE ALL WORK AREAS
         USING WORKAREA,R13             FROM R13
         EJECT
***********************************************************************
* IF THIS IS THE FIRST ENTRY INTO IEFUJI FOR THIS INITIATOR (THE      *
* INITIATOR WAS JUST STARTED), IT IS NECESSARY TO OBTAIN THE STEP     *
* TABLE WORK AREA.  THE STWA IS USED BY OTHER SMF EXITS TO STORE      *
* ACCOUNTING INFORMATION FOR EACH STEP OF A JOB IN ORDER TO PRODUCE   *
* AN ACCOUNTING SUMMARY TABLE IN THE SYSOUT MESSAGE DATASET.  IT IS   *
* ALSO USED BY THE TSO CHARGES COMMAND.  THE STWA IS OBTAINED IN      *
* IEFUJI SO THAT IT CAN BE GOTTEN ONCE FOR ALL SMF EXITS AND TO       *
* ASSURE THAT THE STWA IS CHAINED OFF THE INITIATOR'S TCB SO THAT IT  *
* EXISTS FOR THE LIFE OF THE INITIATOR.  THE ADDRESS OF THE STWA IS   *
* STORED IN THE TCBUSER FIELD OF THE REGION CONTROL TASK'S TCB.       *
***********************************************************************
         SPACE
         L     R2,548(0,0)         POINT TO CURRENT ASCB
         USING ASCB,R2
         L     R2,ASCBASXB         POINT TO ASXB
         USING ASXB,R2
         L     R2,ASXBFTCB         POINT TO RCT TCB
         USING TCB,R2
         L     R1,TCBUSER          POINT TO STWA
         USING STWA,R1
         LTR   R1,R1               Q. IS THIS THE INITIAL ENTRY
         BNZ   STWAGOTN            ...NO, STWA ALREADY GOTTEN
         L     R0,STWAGMR0         ...YES, SET UP FOR GETMAIN
         GETMAIN RU,LV=(0),        GET STORAGE FOR WORK AREA AND TABLE *
               SP=230,BNDRY=PAGE
         ST    R1,TCBUSER          STORE ADDR IN RCT TCB
         DROP  R2                  FINISHED ADDRESSING RCT'S TCB
         LR    R2,R1               TO ADDR FOR MVCL TO CLEAR AREA
         L     R3,STWAGMR0         TO LENGTH
         SLR   R4,R4               FROM ADDR = 0 SINCE CLEARING AREA
         SLR   R5,R5               PAD = X'00', FROM LENGTH = 0
         MVCL  R2,R4               CLEAR WORK AREA
         LA    R2,STWAMSG          GET ADDR OF MESSAGE FOR IEFYS
         ST    R2,STWAMSGA         SAVE IT FOR IEFYS CALLS
         DROP  R1                  FINISHED ADDRESSING STWA
         SPACE  2
STWAGOTN DS    0H
         EJECT
***                                                                 ***
*  INITIALIZE ALL WORK AREAS TO ZERO OR BLANK AS REQUIRED             *
***                                                                 ***
         SPACE 1
         MVI   SAVE1+8,X'00'
         MVC   SAVE1+9(256),SAVE1+8
         MVC   SAVE1+265(44),SAVE1+8
         MVI   CTOD,X'40'
         MVC   CTOD+1(43),CTOD
         MVI   SW1,X'00'
         EJECT
***                                                                 ***
*  SET UP PARAMETER REGISTERS                                         *
***                                                                 ***
         SPACE 1
         LM    R7,R10,0(R6)
         USING JMR,R7
         SPACE 1
***                                                                 ***
*  BYPASS ALL CHECKING FOR FOREGROUND JOBS                            *
***                                                                 ***
         SPACE 1
         TM    JMRINDC,JMRFIND     TEST FOR FOREGROUND
         BO    CHKTACCT            GO TO CHECK TSO ACCT. FLD BAM 77.210
         SPACE 1
***                                                                 ***
*  SET UP CONSOLE MESSAGE                                             *
***                                                                 ***
         SPACE 1
         TIME  BIN
         LA    R1,50               ROUND TOD TO SECONDS
         AR    R1,R0
         SR    R0,R0
         D     R0,=F'100'
         SR    R0,R0
         D     R0,=F'60'
         CVD   R0,WORK1            REMAINDER = SECONDS
         UNPK  CTOD+6(2),WORK1
         SR    R0,R0
         D     R0,=F'60'
         CVD   R0,WORK1            REMAINDER = MINUTES
         UNPK  CTOD+3(2),WORK1
         CVD   R1,WORK1
         UNPK  CTOD(2),WORK1
         OI    CTOD+1,240          FIXUP AND PUNCTUATE
         MVI   CTOD+2,C'.'
         OI    CTOD+4,240
         MVI   CTOD+5,C'.'
         OI    CTOD+7,240
         MVC   CSDATA(8),JMRJOB
         LA    R2,CSDATA+7
BRJOBN1  EQU   *                   LOCATE END OF JOBNAME
         CLI   0(R2),C' '
         BNE   BRJOBN2
         BCT   R2,BRJOBN1
BRJOBN2  EQU   *
         LA    R3,CSDATA
         SR    R2,R3               LENGTH
         AR    R3,R2               END ADDR
         LA    R2,CSDATA+1-CACCT(,R2)
         LA    R4,19(,R8)          PGMR NAME - LAST BYTE
         CLC   0(20,R8),CSDATA+8   IS THERE A PROGRAMMER NAME?
         BNE   BRPGMR1             BRANCH YES
         OI    SW1,BIT7
         B     JIWTO
BRPGMR1  EQU   *                   LOCATE RIGHT END OF NAME
         CLI   0(R4),C'A'
         BNL   BRPGMR2
         BCT   R4,BRPGMR1
BRPGMR2  EQU   *
         LR    R5,R4
         LA    R6,0(,R8)
BRPGMR3  EQU   *                   LOCATE BEGINNING OF SURNAME
         CR    R4,R6
         BL    BRPGMR5
         CLI   0(R4),C'A'
         BL    BRPGMR4
BRPGMR3A EQU   *
         BCT   R4,BRPGMR3
BRPGMR4  EQU   *
         CLI   0(R4),C'-'
         BE    BRPGMR3A
         CLI   0(R4),X'7D'
         BE    BRPGMR3A
BRPGMR5  EQU   *                   CALCULATE SURNAME LENGTH
         SR    R5,R4
         BCTR  R5,0
         EX    R5,MVCPGMRN
         MVI   1(R3),C','
         LA    R3,2(R5,R3)
         LA    R2,2(R5,R2)
JIWTO    EQU   *
         STH   R2,CRECL            STORE MESSAGE LENGTH
         MVC   CCONST1,=CL5'START'
***                                                                 ***
*                                                                     *
* DO NOT ISSUE THE START MESSAGE. IT WILL BE ISSUED BY THE MONITOR    *
* COMMAND. IF IT IS DESIRED TO ISSUE THE MESSAGE FROM HERE - THE      *
* FOLLOWING INSTRUCTION SHOULD BE CHANGED TO A NOP.                   *
*                                                                     *
***                                                                 ***
         SPACE 1
         B     CHKINFO
         WTO   MF=(E,CACCT)        ISSUE MESSAGE
         EJECT
***                                                                 ***
*   CHECK FOR VALID INFORMATION                                       *
***                                                                 ***
         SPACE 3
CHKINFO  EQU   *
         CLI   JMRUSEID,BIT0       TEST FOR BYPASS
         BE    ALLOK
         SPACE 1
CHKJOBNO EQU   *
         MVC   D,JMRJOB            SAVE DIVISION
         MVC   SSS,JMRJOB+1        SAVE SUB SYSTEM
         LA    R0,JMRJOB+4         CHECK JOB NUMBER
         LA    R3,3
         BAL   R14,DIGITCHK        CHECK FOR 3 DIGITS
         B     CHKPOS8             IF GOOD - CHECK POSITION 8
BADJOBN  EQU   *
         OI    SW1,BIT4            INDICATE BAD JOBNAME
         SPACE 1
CHKPOS8  EQU   *                   POSITION 8 S/B NONBLANK
         CLI   JMRJOB+7,C' '
         BNE   CHKACCT
         OI    SW1,BIT4            IF BLANK - INDICATE BAD JOBNAME
         SPACE 1
CHKACCT  EQU   *
         SR    R0,R0               CHECK FOR FIELDS
         IC    R0,0(R10)
         LTR   R0,R0
         BNZ   CHKMAJOR            BRANCH IF FIELDS ARE PRESENT
         OI    SW1,BIT1+BIT2+BIT3+BIT5+BIT6
         B     FAILORNO
         SPACE 1
CHKMAJOR EQU   *
         LA    R10,1(,R10)         POINT TO FIRST FIELD
         SR    R3,R3
         IC    R3,0(,R10)          GET ITS LENGTH
         LA    R0,1(,R10)             AND ITS ADDRESS
         CH    R3,=H'2'            SHOULD BE TWO BYTES LONG
         BNE   BADMAJOR
         BAL   R14,DIGITCHK        SHOULD ALSO BE NUMERIC
         B     GODMAJOR
BADMAJOR EQU   *
         OI    SW1,BIT6            INDICATE BAD MAJOR SYSTEM
         B     CHKIDENT
GODMAJOR EQU   *
         MVC   MS,1(R10)           SAVE THE MAJOR SYSTEM FOR LATER
CHKIDENT EQU   *
         IC    R3,0(,R10)
         LA    R10,1(R3,R10)       POINT TO NEXT FIELD
         IC    R3,0(,R10)          GET ITS LENGTH
         CH    R3,=H'1'            SHOULD BE ONE BYTE
         BNE   BADIDENT
         CLI   1(R10),C'0'         RANGE IS 1 - 8
         BNH   BADIDENT
         CLI   1(R10),C'9'
         BNL   BADIDENT
GODIDENT EQU   *
         MVC   ID,1(R10)           SAVE THE ID FOR LATER
         B     CHKEMPL#
BADIDENT EQU   *
         OI    SW1,BIT5            INDICATE BAD ID FIELD
         SPACE 1
CHKEMPL# EQU   *
         IC    R3,0(,R10)
         LA    R10,1(R3,R10)       POINT TO NEXT FIELD
         IC    R3,0(,R10)          GET ITS LENGTH
         CH    R3,=H'5'            WHICH SHOULD BE FIVE POSITIONS
         BNE   BADEMPL#
         LA    R0,1(,R10)
         BAL   R14,DIGITCHK        IS IT NUMERIC?
         B     GOODEMP#               YES
BADEMPL# EQU   *                      NO
         OI    SW1,BIT1            INDICATE BAD EMPLOYEE NUMBER
         B     CROSSCHK
GOODEMP# EQU   *
         MVC   EMPL#,1(R10)        SAVE EMPLOYEE NUMBER FOR CROSS CHECK
         EJECT
*****                                                             *****
*                                                                     *
*    THIS SECTION WILL DO THE CROSS CHECKING OF THE PARAMETERS        *
*    SUPPLIED ON THE JOB CARD:                                        *
*                                                                     *
*        1. MAJOR SYSTEM / SUBSYSTEM COMBINATION MUST BE VALID AS     *
*           PER THE TABLE CONTAINING THE VALID ONES.                  *
*                                                                     *
*        2. THE FOLLOWING COMBINATIONS ARE ALSO NECESSARY:            *
*                                                                     *
*               ID       EMPL#      POS8                              *
*              ****     *******    ******                             *
*                                                                     *
*               1       NUMERIC    NUMERIC                            *
*               2       NUMERIC    LETTER 'N'                         *
*               3          0       ALPHA EXCEPT LETTER 'N'            *
*               4       NUMERIC    NUMERIC                            *
*               5       NUMERIC    NUMERIC OR ALPHA                   *
*               6          0       ALPHA                              *
*               7       NUMERIC    NUMERIC OR ALPHA                   *
*               8       NUMERIC    NUMERIC OR ALPHA                   *
*                                                                     *
*****                                                             *****
         SPACE 3
CROSSCHK EQU   *
         LOAD  EP=MDSTABLE         LOAD THE MS/SSS TABLE
         LR    R5,R0               TABLE ADDRESS
         SPACE 2
***                                                                 ***
*   THE TABLE IS IN THE FORMAT MMSSS IN ASCENDING SEQUENCE            *
***                                                                 ***
         SPACE 2
TBLLOOP  EQU   *
         CLC   MMDSSS,0(R5)         CHECK VALIDITY
         BE    CHKCOMB                  HIT
         BL    MMSSSBAD                 COMPLETE MISS
         LA    R5,6(,R5)                STILL LOOKING
         B     TBLLOOP
MMSSSBAD EQU   *
         OI    SW1,BIT2            INDICATE INVALID MM/D/SSS
         SPACE 1
CHKCOMB  EQU   *                   CHECK THE OTHER COMBINATIONS
         CLI   ID,C'7'
         BE    FAILORNO
         CLI   ID,C'8'
         BE    FAILORNO
         TM    SW1,BIT1+BIT5       DON'T CHECK THESE
         BNZ   FAILORNO
CHKID1   EQU   *
         CLI   ID,C'1'             ID = 1
         BNE   CHKID2
         CLI   JMRJOB+7,C'0'
         BL    NOCOMPAT
         B     FAILORNO
CHKID2   EQU   *
         CLI   ID,C'2'             ID = 2
         BNE   CHKID3
         CLI   JMRJOB+7,C'N'       INDICATES NON-OPERATIONAL PRODUCT
         BNE   NOCOMPAT
         B     FAILORNO
CHKID3   EQU   *
         CLI   ID,C'3'             ID = 3
         BNE   CHKID4
         CLI   JMRJOB+7,C'0'
         BNL   NOCOMPAT
         CLI   JMRJOB+7,C'N'
         BE    NOCOMPAT
         B     FAILORNO
CHKID4   EQU   *
         CLI   ID,C'4'             ID = 4
         BNE   CHKID5
         CLI   JMRJOB+7,C'0'
         BL    NOCOMPAT
         B     FAILORNO
CHKID5   EQU   *
         CLI   ID,C'5'
         BNE   CHKID6
         OI    JMRUSEID,BIT3       INDICATE BMP CODED
         B     FAILORNO
CHKID6   EQU   *
         CLI   ID,C'6'
         BNE   NOCOMPAT                                      BAM 77.354
         CLI   JMRJOB+7,C'0'                                 BAM 77.354
         BNL   NOCOMPAT
         CLI   JMRJOB+7,C'N'
         BE    NOCOMPAT
         B     FAILORNO
         SPACE 1
NOCOMPAT EQU   *
         OI    SW1,BIT3
FAILORNO EQU   *
         DELETE EP=MDSTABLE
         TM    SW1,BIT1+BIT2+BIT3+BIT4+BIT5+BIT6+BIT7
         BZ    ALLOK
         EJECT
***                                                                 ***
*  INDICATE REASONS(S) FOR KILLING THE JOB                            *
***                                                                 ***
         SPACE 1
KILLJOB  EQU   *
         OC    JMRUSEID+1(1),SW1 INDICATE FAILURE REASON
         NOP   ALLOK
         LR    R1,R13
         LA    R0,WKARLEN
         L     R13,SAVE1+4
         FREEMAIN R,LV=(0),A=(1)
         RETURN (14,12),T,RC=4
         EJECT
ALLOK    EQU   *
         LR    R1,R13
         LA    R0,WKARLEN
         L     R13,SAVE1+4
         FREEMAIN R,LV=(0),A=(1)
         RETURN (14,12),T,RC=0
         EJECT
CHKTACCT DS    0H                  CHECK TSO ACCT FIELDS     BAM 77.210
         LOAD  EP=MDSTABLE         LOAD THE MS/SSS TABLE     BAM 77.210
         LR    R5,R0               TABLE ADDRESS             BAM 77.210
         SLR   R0,R0               CLEAR R0 FOR ICM          BAM 77.210
         ICM   R0,B'0001',0(R10)   GET NUMBER OF ACCT FLDS   BAM 77.210
         BZ    BADTACCT            FAIL JOB IF NO ACCT. FLD. BAM 77.210
         LA    R10,1(,R10)         POINT TO FIRST FIELD      BAM 77.210
         SLR   R3,R3               CLEAR R3 FOR IC           BAM 77.210
         IC    R3,0(,R10)          GET ITS LENGTH            BAM 77.210
         CH    R3,=H'8'            IS IT 8 BYTES LONG        BAM 77.210
         BNE   BADTACCT            NO - FAIL JOB             BAM 77.210
         LA    R3,1(,R10)          YES - GET ITS ADDRESS     BAM 77.210
         MVC   D,0(R3)             SAVE DIVISION             BAM 77.210
         MVC   SSS,1(R3)           SAVE SUB SYSTEM           BAM 77.210
         CLI   7(R3),C'0'          WAS THIS TEST TSO USER    BAM 77.210
         BNL   CHKTLAST            YES - CONTINUE            BAM 79.095
         CLI   7(R3),C'X'          NO - WAS THIS PROD USER   BAM 77.210
         BNE   BADTACCT            NO - FAIL JOB             BAM 77.210
CHKTLAST DS    0H                                            BAM 77.210
         LA    R0,4(R3)            CHECK JOB NUMBER          BAM 77.210
         LA    R3,3                GET LENGTH FOR CHECKING   BAM 77.210
         BAL   R14,DIGITCHK        CHECK FOR 3 DIGITS        BAM 77.210
         B     CHKTMDST            IF GOOD - CHECK MDSTABLE  BAM 77.210
BADTACCT DS    0H                                            BAM 77.210
         TPUT  TPUTMSG,L'TPUTMSG   TELL TSO USER             BAM 77.210
         OI    SW1,BIT3            INDICATE BAD ACCT FIELD   BAM 77.210
         B     FAILORNO            AND FLUSH JOB             BAM 77.210
CHKTMDST DS    0H                                            BAM 77.210
         CLI   0(R5),X'FF'         IS THIS THE END OF TABLE  BAM 77.210
         BE    BADTACCT            YES - FAIL JOB            BAM 77.210
         CLC   D(4),2(R5)          IS THIS MATCHING ENTRY    BAM 77.210
         BE    FAILORNO            YES - GOOD ACCT FIELD     BAM 77.210
         LA    R5,6(,R5)           NO - BUMP TO NEXT ENTRY   BAM 77.210
         B     CHKTMDST            AND LOOP                  BAM 77.210
         EJECT
***                                                                 ***
*              CHECK CHARACTER STRUCTURE                              *
***                                                                 ***
         SPACE 3
*                                                                     *
*  THIS ROUTINE CHECKS TO SEE IF THE DATA FIELD PASSED CONTAINS       *
*  ALPHABETIC CHARACTERS.  IF ALL CHARACTERS ARE VALID A BRANCH       *
*  IS TAKEN TO THE ADDRESS CONTAINED IN R14. IF ANY INVALID CHAR-     *
*  ACTERS ARE DETECTED, A BRANCH IS TAKEN 4 BYTES PAST R14.           *
*                                                                     *
*   REGS AT ENTRY:                                                    *
*                R0  - ADDRESS OF FIELD                               *
*                R3 - LENGTH OF FIELD                                 *
*                                                                     *
*            SPACE
CHARCHK  EQU   *
         SR    R4,R4               CLEAR REG 4
         LR    R15,R0              LENGTH
         BCTR  R15,R0
LOOP1    EQU   *
         IC    R4,0(R3,R15)
         CH    R4,=H'193'
         BL    4(R14)
         CH    R4,=H'233'
         BH    4(R14)
         BCT   R3,LOOP1
         BR    R14
         EJECT
***                                                                 ***
*              CHECK NUMERIC STRUCTURE                                *
***                                                                 ***
         SPACE 3
*  THIS ROUTINE CHECKS TO SEE IF THE DATA FIELD PASSED CONTAINS       *
*  NUMERIC DATA. IF ALL CHARACTERS ARE VALID A BRANCH IS TAKEN        *
*  TO THE ADDRESS CONTAINED IN R14. IF ANY INVALID POSITIONS ARE      *
*  DETECTED, A BRANCH IS TAKEN 4 BYTES PAST R14.                      *
*                                                                     *
*   REGS AT ENTRY:
*                 R0 - ADDRESS OF FIELD
*                 R3 - LENGTH OF FIELD
*                                                                     *
         SPACE 1
DIGITCHK EQU   *
         SR    R4,R4
         LR    R15,R0
         BCTR  R15,R0
LOOP2    EQU   *
         IC    R4,0(R3,R15)
         CH    R4,=H'240'
         BL    4(R14)
         BCT   R3,LOOP2
         BR    R14
         EJECT
MVCPGMRN MVC   2(0,R3),1(R4)
STWAGMR0 DC    A(STWATLTH)         LENGTH OF STWA FOR GETMAIN
TPUTMSG  DC    C'MISSING OR INVALID ACCOUNTING FIELD - LOGON DENIED'
         LTORG
         EJECT
*****                                                             *****
*                                                                     *
*                  PARAMETER LIST PASSED FROM SMF                     *
*                                                                     *
*****                                                             *****
         SPACE 1
         IEFJMR
         SPACE 3
WORKAREA DSECT
SAVE1    DS    67F
WORK1    DS    D
WORK2    DS    F
WORK3    DS    F
SW1      DS    X
****                                                               ****
*  THE FORMAT OF SW1 IS AS FOLLOWS:                                   *
*                                                                     *
*        BIT        MEANING                                           *
*                                                                     *
*        0          BYPASS ACCOUNTING SCAN                            *
*        1          INVALID OR MISSING EMPLOYEE NUMBER                *
*        2          MAJOR SYSTEM/DIVISION/SUBSYSTEM MISMATCH          *
*        3          ACCOUNTING FIELDS ARE INCOMPATIBLE                *
*        4          INVALID JOBNAME                                   *
*        5          INVALID OR MISSING IDENTIFICATION                 *
*        6          INVALID OR MISSING MAJOR SYSTEM                   *
*        7          INVALID OR MISSING PROGRAMMER NAME                *
****                                                               ****
         SPACE 1
EMPL#    DS    CL5
ID       DS    CL1
MMDSSS   DS    0CL6
MS       DS    CL2
D        DS    CL1
SSS      DS    CL3
         SPACE 1
****                                                               ****
*   CONSOLE ACCOUNTING RECORD                                         *
****                                                               ****
         SPACE 1
CACCT    DS    0D
CRECL    DS    2H
CTOD     DS    CL8
         DS    C
CCONST1  DC    C'START'
         DS    C
CSDATA   DS    CL29
WKAREND  DS    0D
WKARLEN  EQU   WKAREND-WORKAREA
         EJECT
         STWA
         SPACE 3
         PRINT NOGEN
         SPACE
         IHAASCB
         SPACE 3
         IHAASXB
         SPACE 3
         IKJTCB
         SPACE 3
         END
