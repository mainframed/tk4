//PDSREORG PROC SOUT='*',          DEFAULT SYSOUT CLASS                X
//*
//*            THE FOLLOWING PARAMETERS DESCRIBE THE PDS
//*            BEING REORGANIZED. THE DEVTP, PROTP, DSORGP, AND EXPDTP
//*            PARAMETERS ARE OPTIONAL; ALL OTHERS MUST BE SPECIFIED.
//*            OPTIONAL PARAMETERS AE NOTED WITH (*) BELOW.
//             DSNP=,              PDS DATA SET NAME                   X
//             DEVTP=3350,       * PDS DEVICE TYPE                     X
//             VOLSERP='******',   PDS VOLUME SERIAL NUMBER            X
//             SPACEP=,            PDS SPACE SPECIFICATION             X
//             PROTP=,           * PDS PASSWORD PROTECTION             X
//             EXPDTP=00000,     * PDS EXPIRATION DATE PROTECTION      X
//             DSORGP=PO,        * PDS DCB DATA SET ORGANIZATION       X
//             RECFMP=,            PDS DCB RECFM SPECIFICATION         X
//             LRECLP=,            PDS DCB LRECL SPECIFICATION         X
//             BLKSIZP=,           PDS DCB BLKSIZE SPECIFICATION       X
//             OPTCDP=,            PDS DCB OPTCD SPECIFICATION         X
//             BACKCTL='&&BACKCTL', COPY BACK CONTROL STATEMENTS       X
//             COPYVRB=COPY,       IEBCOPY COPY VERB (COPY/COPYMOD)    X
//*
//*            THE FOLLOWING PARAMETERS DESCRIBE THE WORK PDS.
//*            ALL OF THESE PARAMETERS ARE OPTIONAL,
//*            BUT THE USER SHOULD SUPPLY A REASONABLE SPACE VALUE.
//             INDEXW='REORG.',  * WORK PDS DSN HIGH LVL INDEX         X
//             DEVTW=SYSDA,      * WORK PDS DEVICE TYPE                X
//             VOLSERW=,         * WORK PDS VOLUME SERIAL NUMBER       X
//    SPACEW='CYL,(250,025,5000)', WORK PDS SPACE SPECIFICATION        X
//*
//*            THE FOLLOWING PARAMETERS NEED NOT BE CHANGED.
//             REGN=1024K,         DEFAULT REGION SIZE VALUE           X
//             COPYPGM=IEBCOPY,    PDS COPY PROGRAM NAME               X
//             VTOCPGM=VTOCLIST    PROGRAM FOR LISTING THE VTOC AT END
//********************************************************************
//*                                                                  *
//* PROCEDURE COMMENTARY.....                                        *
//*                                                                  *
//*            THIS IS A GENERAL PURPOSE PROCEDURE FOR REORGANIZING  *
//*      A PDS LIBRARY. IT DOES NOT DO A COMPRESS IN-PLACE.          *
//*      INSTEAD, IT ALLOCATES A WORK PDS, COPIES THE INPUT PDS      *
//*      TO THE WORK PDS, SCRATCHES AND REALLOCATES THE INPUT PDS,   *
//*      AND COPIES THE WORK PDS BACK TO THE NEWLY REALLOCATED PDS.  *
//*      THERE ARE TWO MAIN ADVANTAGES TO THIS APPROACH:             *
//*           -REALLOCATING THE PDS ALLOWS US TO CHANGE ATTRIBUTES   *
//*            OF THE PDS LIKE SPACE ALLOCATION AND THE NUMBER OF    *
//*            DIRECTORY BLOCKS,                                     *
//*           -THE CONTENTS OF THE PDS ARE NOT LOST IF THE           *
//*            SYSTEM FAILS.                                         *
//*                                                                  *
//*            THIS PROCEDURE DOES NOT REFERENCE THE CATALOG         *
//*       FOR LOCATING THE INPUT PDS. THE USER IS REQUIRED TO        *
//*       SUPPLY THE VOLUME SERIAL NUMBER (AND DEVICE TYPE           *
//*       IF NOT 3350).                                              *
//*                                                                  *
//*             THIS PROCEDURE DOES REFERENCE THE CATALOG            *
//*       FOR THE WORK PDS. THE WORK PDS IS CATALOGED IN ORDER TO    *
//*       FREE THE USER FROM THE REQUIREMENT OF DESIGNATING A        *
//*       WORK VOLUME. IF THE USER DOES NOT DESIGNATE A WORK VOLUME, *
//*       SPACE ON AN AVAILABLE SCRATCH PACK WILL BE USED.           *
//*                                                                  *
//* UPDATE HISTORY...........                                        *
//*                                                                  *
//*      PROCEDURE CREATED 01/15/80                               TJA*
//********************************************************************
//*                                                         ***
//*>>>>>>>>>>>>>>C U I C   D I S C L A I M E R<<<<<<<<<<<<<<***
//*                                                         ***
//*************************************************************
//*            THE INFORMATION OR MATERIAL BEING PROVIDED   ***
//*      BY COMMERCIAL UNION INSURANCE COMPANY (CUIC),      ***
//*      WHETHER IN HARD COPY OR MACHINE READABLE FORM,     ***
//*      HAS BEEN DEVELOPED BY CUIC FOR ITS OWN PURPOSE     ***
//*      AND FOR USE ON ITS OWN EQUIPMENT AND WITHIN ITS    ***
//*      OWN DATA PROCESSING SYSTEM.  CUIC MAKES NO         ***
//*      REPRESENTATIONS OR WARRANTIES WHATSOEVER WITH      ***
//*      RESPECT TO THE INFORMATION OR MATERIAL FURNISHED   ***
//*      HEREUNDER, EXPRESSED OR IMPLIED, INCLUDING BUT     ***
//*      NOT LIMITED TO ANY REPRESENTATION OR WARRANTY OF   ***
//*      MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR USE  ***
//*      OR PURPOSE OR THAT THE USE OF THE INFORMATION OR   ***
//*      MATERIAL WILL NOT INFRINGE ANY PATENT, COPYRIGHT,  ***
//*      TRADEMARK, OR OTHER PROPRIETARY INTEREST.  YOU     ***
//*      ARE, THEREFORE, ACCEPTING THIS INFORMATION OR      ***
//*      MATERIAL ON AN "AS IS" BASIS AND WILL BE USING IT  ***
//*      AT YOUR OWN RISK.  NEITHER CUIC NOR ANY OF ITS     ***
//*      AFFILIATES SHALL BE LIABLE WITH RESPECT TO ANY     ***
//*      CLAIM, ACTION, OR DEMAND BY ANY USER OR OTHER      ***
//*      PARTY (INCLUDING ANY CLAIM, ACTION, OR DEMAND FOR  ***
//*      CONSEQUENTIAL DAMAGES EVEN IF CUIC HAS BEEN        ***
//*      ADVISED OF THE POSSIBILITY OF SUCH DAMAGES)        ***
//*      ARISING FROM THE USE OF THE INFORMATION OR THE     ***
//*      MATERIALS AND CONCEPTS RELATED THERETO.            ***
//*      FURTHERMORE, CUIC WILL NOT MAINTAIN, CORRECT, OR   ***
//*      UPDATE THIS INFORMATION OR MATERIAL IN THE         ***
//*      FUTURE.                                            ***
//*                                              01/26/83   ***
//*************************************************************
//*
//*
//*
//START    EXEC PGM=IEFPARAM,REGION=(&REGN),                           X
//             PARM=(' UNCATLG DSNAME=&INDEXW.&DSNP')
//*****************************************************************
//*                                                               *
//*        CREATE THE IEHPROGM "UNCATLG" CONTROL CARD             *
//*        TO UNCATALOG THE WORK PDS IF A CATALOG POINTER EXISTS  *
//*        FROM A PREVIOUS USE OF THIS PROCEDURE.                 *
//*                                                               *
//*****************************************************************
//SYSPUNCH DD  DISP=(NEW,PASS),UNIT=VSYSDA,DSN=&&UNCATLG,              X
//             SPACE=(80,(5,1)),DCB=(RECFM=F,LRECL=80,BLKSIZE=80)
//UNCATLG  EXEC PGM=IEHPROGM,REGION=(&REGN)
//*****************************************************************
//*                                                               *
//*        UNCATALOG ANY POINTERS TO THE WORK PDS                 *
//*        SO THAT THE NEW ONE BEING CREATED CAN BE CATALOGED     *
//*        AND RETREIVED IF A FAILURE OCCURS BEFORE THE COPY BACK *
//*        HAS COMPLETED.                                         *
//*                                                               *
//*****************************************************************
//SYSIN    DD  DISP=(OLD,DELETE),DSN=&&UNCATLG
//SYSPRINT DD  SYSOUT=(&SOUT)
//OUTCTL   EXEC PGM=IEFPARAM,REGION=(&REGN),                           X
//             PARM=(' &COPYVRB OUTDD=SYSUT2,INDD=SYSUT1')
//*****************************************************************
//*                                                               *
//*        CREATE THE IEBCOPY CONTROL CARD                        *
//*        USED BY THE "COPYOUT" STEP BELOW.                      *
//*                                                               *
//*****************************************************************
//SYSPUNCH DD  DISP=(NEW,PASS),UNIT=VSYSDA,DSN=&&OUTCTL,               X
//             SPACE=(80,(5,1)),DCB=(RECFM=F,LRECL=80,BLKSIZE=80)
//COPYOUT  EXEC PGM=&COPYPGM,REGION=(&REGN)
//*****************************************************************
//*                                                               *
//*        ALLOCATE THE WORK PDS AND THEN COPY                    *
//*        THE INPUT PDS TO THE WORK PDS.                         *
//*                                                               *
//*****************************************************************
//SYSIN    DD  DISP=(OLD,DELETE),DSN=&&OUTCTL
//SYSPRINT DD  SYSOUT=(&SOUT)
//SYSUT1   DD  DISP=OLD,                  PDS BEING REORGANIZED        X
//             UNIT=(&DEVTP),VOL=(,RETAIN,SER=&VOLSERP),               X
//             DSN=&DSNP,                                              X
//             DCB=(DSORG=PO,                                          X
//             RECFM=&RECFMP,LRECL=&LRECLP,BLKSIZE=&BLKSIZP,           X
//             OPTCD=&OPTCDP)
//SYSUT2   DD  DISP=(NEW,CATLG,DELETE),   TEMPORARY WORK PDS           X
//             UNIT=(&DEVTW),VOL=(,RETAIN,SER=&VOLSERW),               X
//             DSN=&INDEXW.&DSNP,                                      X
//             SPACE=(&SPACEW),                                        X
//             DCB=(DSORG=PO,                                          X
//             RECFM=&RECFMP,LRECL=&LRECLP,BLKSIZE=&BLKSIZP,           X
//             OPTCD=&OPTCDP)
//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,(005,001))
//SYSUT4   DD  UNIT=SYSDA,SPACE=(CYL,(005,001))
//COPYTEST EXEC PGM=ABEND806,REGION=(&REGN),COND=(0,GE,COPYOUT)
//*****************************************************************
//*                                                               *
//*        THIS STEP IS EXECUTED IF THE COPY OUT TO THE WORK PDS  *
//*        WAS UNSUCCESSFUL. THE PURPOSE OF THIS STEP             *
//*        IS TO CONVERT AN UNSUCCESSFUL COPYOUT RETURN CODE      *
//*        INTO AN ABEND IN ORDER TO FLUSH THE REST OF THE        *
//*        STEPS IN THIS PROCEDURE. THIS PREVENTS DELETING        *
//*        THE INPUT PDS.                                         *
//*                                                               *
//*        IF THE COPYOUT STEP WAS SUCCESSFUL,                    *
//*        THIS STEP IS BYPASSED AND EXECUTION CONTINUES.       . *
//*                                                               *
//*****************************************************************
//RESTART  EXEC PGM=IEFPARAM,REGION=(&REGN),                           X
//             PARM=(' PRINT INFILE(SYSUT1) DUMP COUNT(1)')
//*****************************************************************
//*                                                               *
//*        THIS STEP CREATES THE IDCAMS "PRINT" CONTROL CARD      *
//*        TO PRINT THE FIRST LOGICAL RECORD OF THE WORK PDS.     *
//**************************NOTICE*********************************
//*        A RESTART OF THIS PROCEDURE TO COPY THE PDS BACK       *
//*        TO ITS VOLUME SHOULD BEGIN WITH THIS STEP.             *
//*                                                               *
//*****************************************************************
//SYSPUNCH DD  DISP=(NEW,PASS),UNIT=VSYSDA,DSN=&&IDCCTL,               X
//             SPACE=(80,(5,1)),DCB=(RECFM=F,LRECL=80,BLKSIZE=80)
//VERIFY   EXEC PGM=IDCAMS,REGION=(&REGN)
//*****************************************************************
//*                                                               *
//*        THIS STEP VERIFIES THE PRESENCE OF THE WORK PDS        *
//*        BY ATTEMPTING TO PRINT THE FIRST LOGICAL RECORD OF IT..*
//*        IF THE WORK PDS NO LONGER EXISTS, AND THE CATALOG IS   *
//*        BEING USED TO LOCATE IT, THIS STEP FAILS WITH A        *
//*        JCL ERROR -- DATA SET NOT FOUND.  IF THE USER HAS      *
//*        SPECIFIED THE VOLSERW= PARAMETER FOR THE WORK PDS,     *
//*        BYPASSING THE CATALOG, AND THE WORK PDS NO LONGER      *
//*        EXISTS, THIS STEP WILL RETURN COMPLETION CODE 012.     *
//*        THE COMPLETION CODE 012 IS DETECTED BY STEP            *
//*        "VFYTEST" BELOW.                                       *
//*                                                               *
//*****************************************************************
//SYSIN    DD  DISP=(OLD,DELETE),DSN=&&IDCCTL
//SYSPRINT DD  SYSOUT=(&SOUT)
//SYSUT1   DD  DISP=OLD,           WORK PDS USED AS INPUT              X
//             UNIT=(&DEVTW),VOL=(,RETAIN,SER=&VOLSERW),               X
//             DCB=(DSORG=PS,RECFM=F,LRECL=256,BLKSIZE=256,KEYLEN=8),  X
//             DSN=&INDEXW.&DSNP
//VFYTEST  EXEC PGM=ABEND806,REGION=(&REGN),COND=(0,GE,VERIFY)
//*****************************************************************
//*                                                               *
//*        THIS STEP IS EXECUTED IF THE VERIFY STEP AGAINST THE   *
//*        WORK PDS DID NOT FAIL WITH A JCL ERROR, BUT INSTEAD    *
//*        RETURNED A NON-ZERO COMPLETION CODE.                   *
//*        THE PURPOSE OF THIS STEP IS TO CONVERT AN UNSUCCESSFUL *
//*        "VERIFY" STEP RETURN CODE INTO AN ABEND IN ORDER TO    *
//*        FLUSH THE REST OF THE STEPS IN THIS PROCEDURE.         *
//*        FLUSHING THE REMAINING STEPS PREVENTS DELETING         *
//*        THE INPUT PDS IN RESTART SITUATIONS WHEN THE WORK PDS  *
//*        NO LONGER EXISTS.                                      *
//*                                                               *
//*        IF THE VERIFY STEP WAS SUCCESSFUL,                     *
//*        THIS STEP IS BYPASSED AND EXECUTION CONTINUES.         *
//*                                                               *
//*****************************************************************
//SCRCTL   EXEC PGM=IEFPARAM,REGION=(&REGN),                           X
//             PARM=(' SCRATCH VOL=&DEVTP.=&VOLSERP,PURGE,>72X;',      X
//             '>16DSNAME=&DSNP')
//*****************************************************************
//*                                                               *
//*        THIS STEP CREATES THE IEHPROGM "SCRATCH" CONTROL CARD  *
//*        FOR DELETING THE ORIGINAL INPUT PDS.                   *
//*                                                               *
//*****************************************************************
//SYSPUNCH DD  DISP=(NEW,PASS),UNIT=VSYSDA,DSN=&&SCRATCH,              X
//             SPACE=(80,(5,1)),DCB=(RECFM=F,LRECL=80,BLKSIZE=80)
//SCRATCH  EXEC PGM=IEHPROGM,REGION=(&REGN)
//*****************************************************************
//*                                                               *
//*        SCRATCH THE ORIGINAL INPUT PDS                         *
//*        SO THAT IT CAN BE REALLOCATED IN STEP "COPYBACK" BELOW.*
//*                                                               *
//*****************************************************************
//SYSIN    DD  DISP=(OLD,DELETE),DSN=&&SCRATCH
//SYSPRINT DD  SYSOUT=(&SOUT)
//PDSVOL   DD  DISP=OLD,UNIT=(&DEVTP),VOL=(,RETAIN,SER=&VOLSERP)
//BACKCTL  EXEC PGM=IEFPARAM,REGION=(&REGN),                           X
//             PARM=(' &COPYVRB OUTDD=SYSUT2,INDD=SYSUT1')
//*****************************************************************
//*                                                               *
//*        CREATE THE IEBCOPY CONTROL CARD                        *
//*        USED BY THE "COPYBACK" STEP BELOW.                     *
//*                                                               *
//*****************************************************************
//SYSPUNCH DD  DISP=(NEW,PASS),UNIT=VSYSDA,DSN=&&BACKCTL,              X
//             SPACE=(80,(5,1)),DCB=(RECFM=F,LRECL=80,BLKSIZE=80)
//COPYBACK EXEC PGM=&COPYPGM,REGION=(&REGN)
//*****************************************************************
//*                                                               *
//*        REALLOCATE THE ORIGINAL PDS ON ITS VOLUME              *
//*        AND COPY THE WORK PDS BACK TO THE REALLOCATED PDS.     *
//*                                                               *
//*****************************************************************
//SYSIN    DD  DISP=SHR,DSN=&BACKCTL
//SYSPRINT DD  SYSOUT=(&SOUT)
//SYSUT1   DD  DISP=OLD,           WORK PDS USED AS INPUT              X
//             UNIT=(&DEVTW),VOL=(,RETAIN,SER=&VOLSERW),               X
//             DSN=&INDEXW.&DSNP
//SYSUT2   DD  DISP=(NEW,KEEP),    REALLOCATE ORIGINAL INPUT PDS       X
//             UNIT=(&DEVTP),VOL=(,RETAIN,SER=&VOLSERP),               X
//             DSN=&DSNP,                                              X
//             SPACE=(&SPACEP),LABEL=(,,&PROTP,EXPDT=&EXPDTP),         X
//             DCB=(DSORG=&DSORGP,                                     X
//             RECFM=&RECFMP,LRECL=&LRECLP,BLKSIZE=&BLKSIZP,           X
//             OPTCD=&OPTCDP)
//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,(005,001))
//SYSUT4   DD  UNIT=SYSDA,SPACE=(CYL,(005,001))
//CLEANCTL EXEC PGM=IEFPARAM,REGION=(&REGN),COND=(0,LT,COPYBACK),      X
//             PARM=(' UNCATLG DSNAME=&INDEXW.&DSNP')
//*****************************************************************
//*                                                               *
//*        IF THE COPYBACK STEP WAS SUCCESSFUL, CREATE AN         *
//*        IEHPROGM CONTROL CARD TO UNCATALOG THE WORK PDS.       *
//*                                                               *
//*****************************************************************
//SYSPUNCH DD  DISP=(NEW,PASS),UNIT=VSYSDA,DSN=&&CLEANUP,              X
//             SPACE=(80,(5,1)),DCB=(RECFM=F,LRECL=80,BLKSIZE=80)
//CLEANUP  EXEC PGM=IEHPROGM,REGION=(&REGN),COND=(0,LT,COPYBACK)
//*****************************************************************
//*                                                               *
//*        IF THE COPYBACK STEP WAS SUCCESSFUL,                   *
//*        UNCATALOG AND DELETE THE WORK PDS.                     *
//*                                                               *
//*****************************************************************
//SYSIN    DD  DISP=(OLD,DELETE),DSN=&&CLEANUP
//SYSPRINT DD  SYSOUT=(&SOUT)
//DELETEW  DD  DISP=(OLD,DELETE),VOL=REF=*.COPYBACK.SYSUT1,            X
//             DSN=&INDEXW.&DSNP
//LISTVTOC EXEC PGM=&VTOCPGM,REGION=(&REGN),COND=EVEN,                 X
//             PARM='MAP,DCTRY'
//*****************************************************************
//*                                                               *
//*        LIST THE VTOC OF THE VOLUME                            *
//*        CONTAINING THE REORGANIZED PDS.                        *
//*                                                               *
//*****************************************************************
//SYSPRINT DD  SYSOUT=(&SOUT)
//VOL1     DD  DISP=OLD,UNIT=(&DEVTP),VOL=(,RETAIN,SER=&VOLSERP)
