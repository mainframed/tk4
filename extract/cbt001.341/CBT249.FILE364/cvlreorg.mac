//CVLREORG PROC SOUT='*',          DEFAULT SYSOUT CLASS                X
//*
//*            THE FOLLOWING PARAMETERS DESCRIBE THE CVOL CATALOG
//*            BEING REORGANIZED. THE DEVTC, PROTC, AND EXPDTC
//*            PARAMETERS ARE OPTIONAL; ALL OTHERS MUST BE SPECIFIED.
//*            OPTIONAL PARAMETERS ARE NOTED WITH (*) BELOW.
//             DEVTC=3350,       * CVOL DEVICE TYPE                    X
//             VOLSERC='******',   CVOL VOLUME SERIAL NUMBER           X
//             SPACEC=,            CVOL SPACE SPECIFICATION            X
//             PROTC=,           * CVOL PASSWORD PROTECTION            X
//             EXPDTC=00000,     * CVOL EXPIRATION DATE PROTECTION     X
//*
//*
//*            THE FOLLOWING PARAMETERS DEFINE THE REORGANIZATION
//*            CRITERIA AND VALUES TO BE USED BY THE COPYCAT UTILITY.
//*            ALL OF THESE PARAMETERS ARE OPTIONAL.  VALUES HAVE BEEN
//*            CHOSEN ASSUMING THAT THE CVOL CATALOG HAS A LARGE
//*            HIGH-LEVEL INDEX AND THAT MOST DATA SETS HAVE EITHER
//*            THREE OR MORE INDEX LEVELS.
//             LVL1BYT=096,      * NUMBER OF FREE BYTES IN EACH BLOCK  X
//             LVL1DUM=012,      * NUMBER OF DUMMY BLOCKS AFTER INDEX  X
//             LVL2BYT=096,      * NUMBER OF FREE BYTES IN EACH BLOCK  X
//             LVL2DUM=000,      * NUMBER OF DUMMY BLOCKS AFTER INDEX  X
//             LVL2FRE=001,      * NUMBER OF AVAIL BLKS ON TRK         X
//             LVL3BYT=130,      * NUMBER OF FREE BYTES IN EACH BLOCK  X
//             LVL3DUM=000,      * NUMBER OF DUMMY BLOCKS AFTER INDEX  X
//             LVL3FRE=001,      * NUMBER OF AVAIL BLKS ON TRK         X
//             LVL4BYT=130,      * NUMBER OF FREE BYTES IN EACH BLOCK  X
//             LVL4DUM=000,      * NUMBER OF DUMMY BLOCKS AFTER INDEX  X
//             LVL4FRE=001,      * NUMBER OF AVAIL BLKS ON TRK         X
//             LVL5BYT=130,      * NUMBER OF FREE BYTES IN EACH BLOCK  X
//             LVL5DUM=000,      * NUMBER OF DUMMY BLOCKS AFTER INDEX  X
//             LVL5FRE=001,      * NUMBER OF AVAIL BLKS ON TRK         X
//             LVL6BYT=130,      * NUMBER OF FREE BYTES IN EACH BLOCK  X
//             LVL6DUM=000,      * NUMBER OF DUMMY BLOCKS AFTER INDEX  X
//             LVL6FRE=001,      * NUMBER OF AVAIL BLKS ON TRK         X
//             LVL7BYT=130,      * NUMBER OF FREE BYTES IN EACH BLOCK  X
//             LVL7DUM=000,      * NUMBER OF DUMMY BLOCKS AFTER INDEX  X
//             LVL7FRE=001,      * NUMBER OF AVAIL BLKS ON TRK         X
//             LVL8BYT=130,      * NUMBER OF FREE BYTES IN EACH BLOCK  X
//             LVL8DUM=000,      * NUMBER OF DUMMY BLOCKS AFTER INDEX  X
//             LVL8FRE=001,      * NUMBER OF AVAIL BLKS ON TRK         X
//*
//*            THE FOLLOWING PARAMETERS DESCRIBE THE WORK CVOL.
//*            ALL OF THESE PARAMETERS ARE OPTIONAL,
//*            BUT THE USER SHOULD SUPPLY A REASONABLE SPACE VALUE.
//             INDEXW='REORG.',  * WORK CVOL DSN HIGH LVL INDEX        X
//             DEVTW=SYSDA,      * WORK CVOL DEVICE TYPE               X
//             VOLSERW=,         * WORK CVOL VOLUME SERIAL NUMBER      X
//         SPACEW='CYL,(050,005)', WORK CVOL SPACE SPECIFICATION       X
//*
//*            THE FOLLOWING PARAMETERS NEED NOT BE CHANGED.
//             REGN=2048K,         DEFAULT REGION SIZE VALUE           X
//             VTOCPGM=VTOCLIST    PROGRAM FOR LISTING THE VTOC AT END
//********************************************************************
//*                                                                  *
//* PROCEDURE COMMENTARY.....                                        *
//*                                                                  *
//*            THIS IS A GENERAL PURPOSE PROCEDURE FOR REORGANIZING  *
//*      A CVOL CATALOG USING THE COPYCAT UTILITY PROGRAM FROM THE   *
//*      CBT MODS TAPE.  COPYCAT WAS ORIGINALLY WRITTEN AT ARGONNE   *
//*      NATIONAL LABORATORY.                                        *
//*                                                                  *
//*            THE CVOL CATALOG IS REORGANIZED BY COPYING IT OUT     *
//*      TO A TEMPORARY CATALOG, AND THEN COPYING IT BACK.  THE      *
//*      PROCEDURE ALLOCATES A WORK CVOL, COPIES THE INPUT CVOL      *
//*      TO THE WORK CVOL, SCRATCHES AND REALLOCATES THE INPUT CVOL, *
//*      AND COPIES THE WORK CVOL BACK TO THE NEWLY REALLOCATED CVOL.*
//*      THERE ARE THREE MAIN ADVANTAGES TO THIS APPROACH:           *
//*           -REALLOCATING THE CVOL ALLOWS US TO CHANGE ATTRIBUTES  *
//*            OF THE CVOL LIKE SPACE ALLOCATION AND LOCATION ON THE *
//*            VOLUME.                                               *
//*           -THE CONTENTS OF THE CVOL ARE NOT LOST IF THE          *
//*            SYSTEM FAILS.                                         *
//*           -BLOCKS IN THE CVOL CATALOG ARE REARRANGED BY          *
//*            COPYCAT TO REDUCE BLDL OVERHEAD WHEN LOCATING         *
//*            DATA SETS IN THE CATALOG.  THUS THE PERFORMANCE OF    *
//*            THE REORGANIZED CVOL CATALOG IS IMPROVED BY           *
//*            THE REORGANIZATION.                                   *
//*                                                                  *
//*                                                                  *
//*            THIS PROCEDURE MAKES NO ASSUMPTIONS ABOUT THE         *
//*       LOCATION OF THE CVOL TO BE REORGANIZED.  THE USER IS       *
//*       REQUIRED TO SUPPLY THE VOLUME SERIAL NUMBER (AND DEVICE    *
//*       TYPE IF NOT 3350) OF THE CVOL CATALOG TO BE REORGANIZED.   *
//*                                                                  *
//*            THE WORK CVOL IS DEFINED WITH A NON-STANDARD NAME     *
//*       AND CATALOGED IN ORDER TO FREE THE USER FROM HAVING TO     *
//*       DESIGNATE A WORK VOLUME.  IF THE USER DOES NOT DESIGNATE   *
//*       A WORK VOLUME, SPACE ON AN AVAILABLE SCRATCH PACK          *
//*       WILL BE ALLOCATED AND USED.                                *
//*                                                                  *
//* UPDATE HISTORY...........                                        *
//*                                                                  *
//*      PROCEDURE CREATED 06/12/81                               TJA*
//********************************************************************
//*************************************************************
//*                                                         ***
//*>>>>>>>>>>>>>>C U I C   D I S C L A I M E R<<<<<<<<<<<<<<***
//*                                                         ***
//*************************************************************
//*            THE INFORMATION OR MATERIAL BEING PROVIDED   ***
//*      BY COMMERCIAL UNION INSURANCE COMPANY (CUIC),      ***
//*      WHETHER IN HARD COPY OR MACHINE READABLE FORM,     ***
//*      HAS BEEN DEVELOPED BY CUIC FOR ITS OWN PURPOSE     ***
//*      AND FOR USE ON ITS OWN EQUIPMENT AND WITHIN ITS    ***
//*      OWN DATA PROCESSING SYSTEM.  CUIC MAKES NO         ***
//*      REPRESENTATIONS OR WARRANTIES WHATSOEVER WITH      ***
//*      RESPECT TO THE INFORMATION OR MATERIAL FURNISHED   ***
//*      HEREUNDER, EXPRESSED OR IMPLIED, INCLUDING BUT     ***
//*      NOT LIMITED TO ANY REPRESENTATION OR WARRANTY OF   ***
//*      MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR USE  ***
//*      OR PURPOSE OR THAT THE USE OF THE INFORMATION OR   ***
//*      MATERIAL WILL NOT INFRINGE ANY PATENT, COPYRIGHT,  ***
//*      TRADEMARK, OR OTHER PROPRIETARY INTEREST.  YOU     ***
//*      ARE, THEREFORE, ACCEPTING THIS INFORMATION OR      ***
//*      MATERIAL ON AN "AS IS" BASIS AND WILL BE USING IT  ***
//*      AT YOUR OWN RISK.  NEITHER CUIC NOR ANY OF ITS     ***
//*      AFFILIATES SHALL BE LIABLE WITH RESPECT TO ANY     ***
//*      CLAIM, ACTION, OR DEMAND BY ANY USER OR OTHER      ***
//*      PARTY (INCLUDING ANY CLAIM, ACTION, OR DEMAND FOR  ***
//*      CONSEQUENTIAL DAMAGES EVEN IF CUIC HAS BEEN        ***
//*      ADVISED OF THE POSSIBILITY OF SUCH DAMAGES)        ***
//*      ARISING FROM THE USE OF THE INFORMATION OR THE     ***
//*      MATERIALS AND CONCEPTS RELATED THERETO.            ***
//*      FURTHERMORE, CUIC WILL NOT MAINTAIN, CORRECT, OR   ***
//*      UPDATE THIS INFORMATION OR MATERIAL IN THE         ***
//*      FUTURE.                                            ***
//*                                              01/26/83   ***
//*************************************************************
//*
//*
//*
//START    EXEC PGM=IEFPARAM,REGION=(&REGN),                           X
//             PARM=(' UNCATLG DSNAME=&INDEXW.SYSCTLG.V&VOLSERC')
//*****************************************************************
//*                                                               *
//*        CREATE THE IEHPROGM "UNCATLG" CONTROL CARD             *
//*        TO UNCATALOG THE WORK CVOL CATALOG IF A POINTER EXISTS *
//*        FROM A PREVIOUS USE OF THIS PROCEDURE.                 *
//*                                                               *
//*****************************************************************
//SYSPUNCH DD  DISP=(NEW,PASS),UNIT=VSYSDA,DSN=&&UNCATLG,              X
//             SPACE=(80,(5,1)),DCB=(RECFM=F,LRECL=80,BLKSIZE=80)
//UNCATLG  EXEC PGM=IEHPROGM,REGION=(&REGN)
//*****************************************************************
//*                                                               *
//*        UNCATALOG ANY POINTERS TO THE WORK CVOL CATALOG        *
//*        SO THAT THE NEW ONE BEING CREATED CAN BE CATALOGED     *
//*        AND RETREIVED IF A FAILURE OCCURS BEFORE THE COPYBACK  *
//*        STEP HAS COMPLETED.                                    *
//*                                                               *
//*****************************************************************
//SYSIN    DD  DISP=(OLD,DELETE),DSN=&&UNCATLG
//SYSPRINT DD  SYSOUT=(&SOUT)
//OUTCTL   EXEC PGM=IEFPARAM,REGION=(&REGN),                           X
//       PARM=(' CONTROL      MASTER,,UNCATLG;',                       X
//             ' INPUT        SYSUT1,&VOLSERC;',                       X
//             ' OUTPUT       MASTER,SYSUT2,&VOLSERC')
//*****************************************************************
//*                                                               *
//*        CREATE THE COPYCAT "CONTROL", "INPUT", AND "OUTPUT"    *
//*        CONTROL CARDS USED BY THE "COPYOUT" STEP BELOW.        *
//*                                                               *
//*****************************************************************
//SYSPUNCH DD  DISP=(NEW,PASS),UNIT=VSYSDA,DSN=&&OUTCTL,               X
//             SPACE=(80,(5,1)),DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200)
//OUTLVL1  EXEC PGM=IEFPARAM,REGION=(&REGN),                           X
//       PARM=(' LEVEL 01,&LVL1BYT,&LVL1DUM;',                         X
//             ' LEVEL 02,&LVL2BYT,&LVL2DUM,&LVL2FRE;',                X
//             ' LEVEL 03,&LVL3BYT,&LVL3DUM,&LVL3FRE;')
//*****************************************************************
//*                                                               *
//*        CREATE THE FIRST THREE "LEVEL" CONTROL CARDS           *
//*        USED BY THE "COPYOUT" STEP BELOW.                      *
//*                                                               *
//*****************************************************************
//SYSPUNCH DD  DISP=(MOD,PASS),DSN=&&OUTCTL
//OUTLVL2  EXEC PGM=IEFPARAM,REGION=(&REGN),                           X
//       PARM=(' LEVEL 04,&LVL4BYT,&LVL4DUM,&LVL4FRE;',                X
//             ' LEVEL 05,&LVL5BYT,&LVL5DUM,&LVL5FRE;',                X
//             ' LEVEL 06,&LVL6BYT,&LVL6DUM,&LVL6FRE;')
//*****************************************************************
//*                                                               *
//*        CREATE THE NEXT THREE "LEVEL" CONTROL CARDS            *
//*        USED BY THE "COPYOUT" STEP BELOW.                      *
//*                                                               *
//*****************************************************************
//SYSPUNCH DD  DISP=(MOD,PASS),DSN=&&OUTCTL
//OUTLVL3  EXEC PGM=IEFPARAM,REGION=(&REGN),                           X
//       PARM=(' LEVEL 07,&LVL7BYT,&LVL7DUM,&LVL7FRE;',                X
//             ' LEVEL 08,&LVL8BYT,&LVL8DUM,&LVL8FRE;')
//*****************************************************************
//*                                                               *
//*        CREATE THE LAST TWO "LEVEL" CONTROL CARDS              *
//*        USED BY THE "COPYOUT" STEP BELOW.                      *
//*                                                               *
//*****************************************************************
//SYSPUNCH DD  DISP=(MOD,PASS),DSN=&&OUTCTL
//COPYOUT  EXEC PGM=COPYCAT,REGION=(&REGN)
//*****************************************************************
//*                                                               *
//*        ALLOCATE THE WORK CVOL CATALOG AND THEN COPY           *
//*        THE INPUT CVOL CATALOG TO THE WORK CVOL CATALOG.       *
//*                                                               *
//*****************************************************************
//SYSIN    DD  DISP=(OLD,DELETE),DSN=&&OUTCTL
//SYSPRINT DD  SYSOUT=(&SOUT)
//SYSUT1   DD  DISP=OLD,                  CVOL BEING REORGANIZED       X
//             UNIT=(&DEVTC),VOL=(,RETAIN,SER=&VOLSERC),               X
//             DSN=SYSCTLG
//SYSUT2   DD  DISP=(NEW,CATLG,DELETE),   TEMPORARY WORK CVOL          X
//             UNIT=(&DEVTW),VOL=(,RETAIN,SER=&VOLSERW),               X
//             DSN=&INDEXW.SYSCTLG.V&VOLSERC,                          X
//             SPACE=(&SPACEW)
//COPYTEST EXEC PGM=ABEND806,REGION=(&REGN),COND=(0,GE,COPYOUT)
//*****************************************************************
//*                                                               *
//*        THIS STEP IS EXECUTED IF THE COPY OUT TO THE WORK CVOL *
//*        WAS UNSUCCESSFUL. THE PURPOSE OF THIS STEP             *
//*        IS TO CONVERT AN UNSUCCESSFUL COPYOUT RETURN CODE      *
//*        INTO AN ABEND IN ORDER TO FLUSH THE REST OF THE        *
//*        STEPS IN THIS PROCEDURE. THIS PREVENTS DELETING        *
//*        THE INPUT CVOL CATALOG.                                *
//*                                                               *
//*        IF THE COPY OUT WAS SUCCESSFUL, THIS STEP IS BYPASSED. *
//*                                                               *
//*****************************************************************
//RESTART  EXEC PGM=IEFPARAM,REGION=(&REGN),                           X
//             PARM=(' PRINT INFILE(SYSUT1) DUMP COUNT(1)')
//*****************************************************************
//*                                                               *
//*        THIS STEP CREATES THE IDCAMS "PRINT" CONTROL CARD      *
//*        TO PRINT THE FIRST LOGICAL RECORD OF THE WORK CVOL.    *
//**************************NOTICE*********************************
//*        A RESTART OF THIS PROCEDURE TO COPY THE CVOL BACK      *
//*        TO ITS VOLUME SHOULD BEGIN WITH THIS STEP.             *
//*                                                               *
//*****************************************************************
//SYSPUNCH DD  DISP=(NEW,PASS),UNIT=VSYSDA,DSN=&&IDCCTL,               X
//             SPACE=(80,(5,1)),DCB=(RECFM=F,LRECL=80,BLKSIZE=80)
//VERIFY   EXEC PGM=IDCAMS,REGION=(&REGN)
//*****************************************************************
//*                                                               *
//*        THIS STEP VERIFIES THE PRESENCE OF THE WORK CVOL       *
//*        BY ATTEMPTING TO PRINT THE FIRST LOGICAL RECORD OF IT..*
//*        IF THE WORK CVOL NO LONGER EXISTS, AND THE CATALOG IS  *
//*        BEING USED TO LOCATE IT, THIS STEP FAILS WITH A        *
//*        JCL ERROR -- DATA SET NOT FOUND.  IF THE USER HAS      *
//*        SPECIFIED THE VOLSERW= PARAMETER FOR THE WORK CVOL,    *
//*        BYPASSING THE CATALOG, AND THE WORK CVOL NO LONGER     *
//*        EXISTS, THIS STEP WILL RETURN COMPLETION CODE 012.     *
//*        THE COMPLETION CODE 012 IS DETECTED BY STEP            *
//*        "VFYTEST" BELOW.                                       *
//*                                                               *
//*****************************************************************
//SYSIN    DD  DISP=(OLD,DELETE),DSN=&&IDCCTL
//SYSPRINT DD  SYSOUT=(&SOUT)
//SYSUT1   DD  DISP=OLD,           WORK CVOL USED AS INPUT             X
//             UNIT=(&DEVTW),VOL=(,RETAIN,SER=&VOLSERW),               X
//             DCB=(DSORG=PS,RECFM=F,LRECL=256,BLKSIZE=256,KEYLEN=8),  X
//             DSN=&INDEXW.SYSCTLG.V&VOLSERC
//VFYTEST  EXEC PGM=ABEND806,REGION=(&REGN),COND=(0,GE,VERIFY)
//*****************************************************************
//*                                                               *
//*        THIS STEP IS EXECUTED IF THE VERIFY STEP AGAINST THE   *
//*        WORK CVOL DID NOT FAIL WITH A JCL ERROR, BUT INSTEAD   *
//*        RETURNED A NON-ZERO COMPLETION CODE.                   *
//*        THE PURPOSE OF THIS STEP IS TO CONVERT AN UNSUCCESSFUL *
//*        "VERIFY" STEP RETURN CODE INTO AN ABEND IN ORDER TO    *
//*        FLUSH THE REST OF THE STEPS IN THIS PROCEDURE.         *
//*        FLUSHING THE REMAINING STEPS PREVENTS DELETING         *
//*        THE INPUT CVOL IN RESTART SITUATIONS WHEN THE WORK CVOL*
//*        NO LONGER EXISTS.                                      *
//*                                                               *
//*        IF THE VERIFY STEP WAS SUCCESSFUL,                     *
//*        THIS STEP IS BYPASSED AND EXECUTION CONTINUES.         *
//*                                                               *
//*****************************************************************
//SCRCTL   EXEC PGM=IEFPARAM,REGION=(&REGN),                           X
//             PARM=(' SCRATCH VOL=&DEVTC.=&VOLSERC,PURGE,>72X;',      X
//             '>16DSNAME=SYSCTLG')
//*****************************************************************
//*                                                               *
//*        THIS STEP CREATES THE IEHPROGM "SCRATCH" CONTROL CARD  *
//*        FOR DELETING THE ORIGINAL INPUT CVOL CATALOG.          *
//*                                                               *
//*****************************************************************
//SYSPUNCH DD  DISP=(NEW,PASS),UNIT=VSYSDA,DSN=&&SCRATCH,              X
//             SPACE=(80,(5,1)),DCB=(RECFM=FB,LRECL=80,BLKSIZE=80)
//CVOLENQ  DD  DISP=(OLD,KEEP),           CVOL BEING REORGANIZED       X
//             UNIT=(&DEVTC),VOL=(,RETAIN,SER=&VOLSERC),               X
//             DSN=SYSCTLG.V&VOLSERC
//SCRATCH  EXEC PGM=IEHPROGM,REGION=(&REGN)
//*****************************************************************
//*                                                               *
//*        SCRATCH THE ORIGINAL INPUT CVOL CATALOG                *
//*        SO THAT IT CAN BE REALLOCATED IN STEP "COPYBACK" BELOW.*
//*                                                               *
//*****************************************************************
//SYSIN    DD  DISP=(OLD,DELETE),DSN=&&SCRATCH
//SYSPRINT DD  SYSOUT=(&SOUT)
//VCVOL    DD  DISP=OLD,UNIT=(&DEVTC),VOL=(,RETAIN,SER=&VOLSERC)
//BACKCTL  EXEC PGM=IEFPARAM,REGION=(&REGN),                           X
//       PARM=(' CONTROL      MASTER,,UNCATLG;',                       X
//             ' INPUT        SYSUT1,&VOLSERC;',                       X
//             ' OUTPUT       MASTER,SYSUT2,&VOLSERC')
//*****************************************************************
//*                                                               *
//*        CREATE THE COPYCAT "CONTROL", "INPUT", AND "OUTPUT"    *
//*        CONTROL CARDS USED BY THE "COPYBACK" STEP BELOW.       *
//*                                                               *
//*****************************************************************
//SYSPUNCH DD  DISP=(NEW,PASS),UNIT=VSYSDA,DSN=&&BACKCTL,              X
//             SPACE=(80,(5,1)),DCB=(RECFM=F,LRECL=80,BLKSIZE=80)
//BACKLVL1 EXEC PGM=IEFPARAM,REGION=(&REGN),                           X
//       PARM=(' LEVEL 01,&LVL1BYT,&LVL1DUM;',                         X
//             ' LEVEL 02,&LVL2BYT,&LVL2DUM,&LVL2FRE;',                X
//             ' LEVEL 03,&LVL3BYT,&LVL3DUM,&LVL3FRE;')
//*****************************************************************
//*                                                               *
//*        CREATE THE FIRST THREE "LEVEL" CONTROL CARDS           *
//*        USED BY THE "COPYBACK" STEP BELOW.                     *
//*                                                               *
//*****************************************************************
//SYSPUNCH DD  DISP=(MOD,PASS),DSN=&&BACKCTL
//BACKLVL2 EXEC PGM=IEFPARAM,REGION=(&REGN),                           X
//       PARM=(' LEVEL 04,&LVL4BYT,&LVL4DUM,&LVL4FRE;',                X
//             ' LEVEL 05,&LVL5BYT,&LVL5DUM,&LVL5FRE;',                X
//             ' LEVEL 06,&LVL6BYT,&LVL6DUM,&LVL6FRE;')
//*****************************************************************
//*                                                               *
//*        CREATE THE NEXT THREE "LEVEL" CONTROL CARDS            *
//*        USED BY THE "COPYBACK" STEP BELOW.                     *
//*                                                               *
//*****************************************************************
//SYSPUNCH DD  DISP=(MOD,PASS),DSN=&&BACKCTL
//BACKLVL3 EXEC PGM=IEFPARAM,REGION=(&REGN),                           X
//       PARM=(' LEVEL 07,&LVL7BYT,&LVL7DUM,&LVL7FRE;',                X
//             ' LEVEL 08,&LVL8BYT,&LVL8DUM,&LVL8FRE;')
//*****************************************************************
//*                                                               *
//*        CREATE THE LAST TWO "LEVEL" CONTROL CARDS              *
//*        USED BY THE "COPYBACK" STEP BELOW.                     *
//*                                                               *
//*****************************************************************
//SYSPUNCH DD  DISP=(MOD,PASS),DSN=&&BACKCTL
//COPYBACK EXEC PGM=COPYCAT,REGION=(&REGN)
//*****************************************************************
//*                                                               *
//*        REALLOCATE THE ORIGINAL CVOL CATALOG ON ITS VOLUME     *
//*        AND COPY THE WORK CVOL BACK TO THE REALLOCATED CVOL.   *
//*                                                               *
//*****************************************************************
//SYSIN    DD  DISP=(OLD,DELETE),DSN=&&BACKCTL
//SYSPRINT DD  SYSOUT=(&SOUT)
//SYSUT1   DD  DISP=OLD,           WORK CVOL USED AS INPUT             X
//             UNIT=(&DEVTW),VOL=(,RETAIN,SER=&VOLSERW),               X
//             DSN=&INDEXW.SYSCTLG.V&VOLSERC
//SYSUT2   DD  DISP=(NEW,KEEP),    REALLOCATE ORIGINAL INPUT CVOL      X
//             UNIT=(&DEVTC),VOL=(,RETAIN,SER=&VOLSERC),               X
//             DSN=SYSCTLG,                                            X
//             SPACE=(&SPACEC),LABEL=(,,&PROTC,EXPDT=&EXPDTC)
//CLEANCTL EXEC PGM=IEFPARAM,REGION=(&REGN),COND=(0,LT,COPYBACK),      X
//             PARM=(' UNCATLG DSNAME=&INDEXW.SYSCTLG.V&VOLSERC')
//*****************************************************************
//*                                                               *
//*        IF THE COPYBACK STEP WAS SUCCESSFUL, CREATE AN         *
//*        IEHPROGM CONTROL CARD TO UNCATALOG THE WORK CVOL.      *
//*                                                               *
//*****************************************************************
//SYSPUNCH DD  DISP=(NEW,PASS),UNIT=VSYSDA,DSN=&&CLEANUP,              X
//             SPACE=(80,(5,1)),DCB=(RECFM=F,LRECL=80,BLKSIZE=80)
//CLEANUP  EXEC PGM=IEHPROGM,REGION=(&REGN),COND=(0,LT,COPYBACK)
//*****************************************************************
//*                                                               *
//*        IF THE COPYBACK STEP WAS SUCCESSFUL,                   *
//*        UNCATALOG AND DELETE THE WORK CVOL.                    *
//*                                                               *
//*****************************************************************
//SYSIN    DD  DISP=(OLD,DELETE),DSN=&&CLEANUP
//SYSPRINT DD  SYSOUT=(&SOUT)
//DELETEW  DD  DISP=(OLD,DELETE),VOL=REF=*.COPYBACK.SYSUT1,            X
//             DSN=&INDEXW.SYSCTLG.V&VOLSERC
//LISTVTOC EXEC PGM=&VTOCPGM,REGION=(&REGN),COND=EVEN,                 X
//             PARM='MAP,CAT'
//*****************************************************************
//*                                                               *
//*        LIST THE VTOC OF THE VOLUME                            *
//*        CONTAINING THE REORGANIZED CVOL CATALOG.               *
//*                                                               *
//*****************************************************************
//SYSPRINT DD  SYSOUT=(&SOUT)
//VOL1     DD  DISP=OLD,UNIT=(&DEVTC),VOL=(,RETAIN,SER=&VOLSERC)
