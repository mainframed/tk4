TERMIO#  TITLE 'TERMIO# - DCMS COMMON I/O INTERFACE MODULE'
TERMIO#  DCMSTART R,LV=256,STAE=NO,IOCB=NO,BASE=11
         LR    R10,R1
         USING IOCB,R10
         TM    IOCBFLGT,IOCBTBAL
         BNO   NEWIOCB
         L     R9,IOCBLOAD
         LA    R9,0(R9)
         LTR   R9,R9
         BZ    NEWIOCB
         EJECT
*                                                                     *
*        I N V O K E    S E R V I C E   P A C K A G E                 *
*                                                                     *
INVOKED  LR    R15,R9
         LR    R1,R10
         SR    R0,R0
         BALR  R14,R15
         B     TERMXIT#
         EJECT
*
*        I N I T    A   N E W    I O C B    P O I N T E R
*
NEWIOCB  EQU   *
*
*
*
*       REGISTERS:
*                   R10 = IOCB
*                   R11 = BASE
*                   R8  = CVT
*                   R7  = NEW/OLD
*                   R6  = ASCB
*                   R2  = FSA
*                   R12 = TCB
*                   R5  = TDCB
*                   R3  = IOCBTIME
*
*
         EJECT
         MVI   IOCBAID,AIDNULL . R E S E T  CURRENT AID
         SR    R5,R5                        CLEAR TDCB
         L     R8,16                        POINT AT THE CVT
         L     R7,0(,R8)                    NEW/OLD
         L     R12,04(,R7)                  OUR TCB
         L     R2,112(,R12)                     AND ITS FSA
         L     R6,12(,R7)                   OUR ASCB
*        TM    IOCBFLGT,IOCBTTSO+IOCBTCMD+IOCBTBSC
*        BNZ   OLDIOCBX      SKIP DETECTION IF KNOWN TYPE
         EJECT
*
*
*        T E R M I N A L    T Y P E    S E L E C T I O N    C O D E
*
*
*        NEW IOCB - WE MUST SCAN FOR TYPE
*
*   AT THIS POINT WE HAVE LOCATED THE FIRST SAVE AREA PROVIDED TO THIS
*   TASK WHEN IT WAS ATTACHED. NOBODY CARES ABOUT THE REGISTERS THAT
*   IT CONTAINS, SO TERMIO USES IT AS THE ANCHOR FOR ITS TABLE.
*   USAGE IS AS FOLLOWS:
*
*        24    ORIGINAL PARM SAVED BY INITIAL ROUTINE (DCB PTR)
*        28    '#???' IF TERMIO HAS EVER BEEN INVOKED
*        32    POINTER TO PREVIOUS FORMAT TABLE USED.
*        36    POINTER TO CURRENT TERMIO WORK AREA
*
         L     R1,060(,R6)                      THE TSB,
         LA    R1,0(R1)                         IF IT
         LTR   R1,R1                            EXISTS -
         BZ    NOTSO                             IMPLIES
         OI    IOCBFLGT,IOCBTTSO                THIS IS
*                                                                BFG001
*        CHECK TO SEE IF WE HAVE BEEN HERE BEFORE BY LOOKING     BFG001
*        FOR A '#' IN 28(R2).                                    BFG001
*                                                                BFG001
         CLI   28(R2),C'#'         ANY INITIALIZATION            BFG001
         BNE   NOTINIT             AROUND IF NOT INITED          BFG001
*                                                                BFG001
*        WE WERE ALREADY INITIALIZED, SO 24(R2) IS EITHER        BFG001
*        ZERO (IF ENTERED FROM TMP) OR A(A(TDCB)) (IF ENTERED    BFG001
*        FROM $DCMS)                                             BFG001
*                                                                BFG001
         ICM   R5,15,24(R2)        SEE IF TDCB AVAIL             BFG001
         BZ    CONTINU             IF NOT THEN CONTINUE          BFG001
TSOPROC  L     R5,0(R5)            GET ADDR OF TDCB              BFG001
         LA    R5,0(R5)            PURIFY                        BFG001
         B     CONTINU             KEEP GOING                    BFG001
*                                                                BFG001
*        TO INIT WE MUST DECIDE WHETHER 24(R2) POINTS            BFG001
*        TO A CPPL OR TO THE ADDR OF TDCB.  IF TDCB THEN         BFG001
*        THE PARM ADDR HAS THE HIGH ORDER BIT ON.                BFG001
*                                                                BFG001
NOTINIT  L     R5,24(R2)           GET CONTENTS OF R1 IN FSA     BFG001
         MVI   28(R2),C'#'         MARK TO SAY INIT DONE         BFG001
         TM    0(R5),X'80'         IS IS PTR TO TDCB             BFG001
         BO    TSOPROC             YES SO GO AND PROCESS         BFG001
         XC    24(4,R2),24(R2)     CLEAR POINTER                 BFG001
         SR    R5,R5               CLEAR TDCB POINTER            BFG001
         B     CONTINU                                           BFG001
         B     CONTINU                                  T S O
NOTSO    EQU   *
         L     R5,24(R2)           RECOVER
         L     R5,0(R5)                   TDCB
         LA    R5,0(R5)                       FROM
         ST    R5,IOCBTDCB                        FSA+24
*
         CLC   TDCBTYPE-TDCB(R5),=CL4'#CMD'
         BNE   NOTCMD
         OI    IOCBFLGT,IOCBTCMD
         B     CONTINU
NOTCMD   EQU   *
         CLC   28(4,R2),=C'#BSC'  IS THIS OUR FIRST TIME THRU
*        BNE   NOTBSC
         OI    IOCBFLGT,IOCBTBSC
         B     CONTINU
NOTBSC   EQU   *
         EX    0,*                 ILLEGAL TYPE !
CONTINU  EQU   *
         ST    R5,IOCBTDCB               THE TDCB
*
*         END OF TYPE SELECTION CODE
*
OLDIOCBX EQU   *
         EJECT
         TM    IOCBFLGT,IOCBTBSC
         BNO   LOADTSO
LOADBSC  OI    IOCBFLGT,IOCBTBAL   SET FLAG ON                   BFG001
         L     R9,TDCBLOAD-TDCB(R5)                              BFG001
         ST    R9,IOCBLOAD                                       BFG001
         B     INVOKED
LOADTSO  LTR   R5,R5               IS TDCB AVAIL                 BFG001
         BNZ   LOADBSC             IF SO THEN JUST LOAD IT       BFG001
         LOAD  EP=####TERM         GET THE MODULE                BFG001
         ST    R0,IOCBLOAD
         LR    R9,R0               SETUP ENTRY POINT REG         BFG001
         OI    IOCBFLGT,IOCBTBAL
         B     INVOKED
         EJECT
TERMXIT# DCMSTOP RC=(15),SCREEN=NO,SERV=NO,IOCB=NO
         EJECT
IOCB     DSECT
         IOCB
         TDCB
         END
