$DCMS   TITLE 'SELECT  --  DCMS SELECTOR'
US1NG    OPSYN USING
USING    OPSYN
DR0P     OPSYN DROP
DROP     OPSYN
         EJECT
         IKJTCB  DSECT=YES
         EJECT
         IKJCPPL
         EJECT
         IKJPSCB
         EJECT
         IKJUPT
         EJECT
         IKJECT
         EJECT
         PRINT  NOGEN
         DCBD
         PRINT  GEN
$DCMS   CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
* INITIALIZE THE SELECTOR
         SAVE  (14,12)                 SAVE SO TERMIO CAN FIND DCB
         LR    R11,R15                 PERMANEMT BASE
         USING $DCMS,R11
         LR    R2,R1                 GET TDCB ADDRESS
*    ALLOCATE THE WORK AREA
         GETMAIN R,LV=8192,SP=2
         LA    R12,2048
         AR    R12,R12               4096 IN R12
         AR    R12,R1                SECOND 4K IN R12
         USING DCMSBUF,R12
         ST    R13,4(R1)            CHAIN
         ST    R1,8(R13)                  THE
         LR    R13,R1                         SAVE AREAS
         USING DCMSWORK,R13
         LA    R9,TDCBSPOT             POINT TO DUMMY TDCB
         USING TDCB,R9
         ST    R2,CPPLADDR
         USING CPPL,R2
         L     R10,CPPLPSCB
         USING PSCB,R10
         DROP  R2
         EJECT
*
*        LIBRARY OPEN SUPPORT FOR T S O   DCMS ACCESS
*
         MVI   ROPEN,X'80'
         LA    R2,LIBRARY
         MVC   LIBRARY(DCBLL),DCBIMAGE
         MVC   DCBDDNAM-IHADCB(8,R2),=CL8'DCMSLIB'
         OPEN  (LIBRARY,(INPUT)),MF=(E,ROPEN)
         TM    LIBRARY+48,X'10'
         BO    OKOPEN
         TPUT  OFAIL,L'OFAIL
         ABEND 13
OKOPEN   DS    0H .
         XC    VECTOR(VECTLEN),VECTOR  CLEAR ADDRESS VECTOR      BFG001
         LA    R2,LIBRARY          SET ADDR OF DCMSLIB DCB       BFG001
         ST    R2,VLIB                                           BFG001
         LA    R2,VECTOR           SET ADDRESS INTO TDCB         BFG001
         ST    R2,TDCBVECT                                       BFG001
*
*
*
*
         INUSE
         OI    IOCBFLGC,IOCBCTIM       SUPPRESS TIMESTAMP
         LA    R1,SCR1                 GET NORMAL SCREEN FORMAT
         ST    R1,IOCBFMT
         LA    R1,IOAREA               GET SCREEN IMAGE
         ST    R1,IOCBIMG
         LA    R2,L4                   MOVE
         LA    R3,FLASHLEN                  LOGO
         LR    R5,R3                            ONTO
         LA    R4,BIGFLASH                           SCREEN
         MVCL  R2,R4
         SPACE 2                                                 BFG001
*                                                                BFG001
*        ATTACH THE LOG TASK                                     BFG001
*                                                                BFG001
         XC    LOGTECB(20),LOGTECB CLEAR THE ECBS                BFG001
         LA    R1,TDCBPRMS         SETUP PARM LIST               BFG001
         LA    R2,LOGTINEC                                       BFG001
         LA    R3,LOGTTREC                                       BFG001
         STM   R1,R3,LOGINITP                                    BFG001
         LA    R1,LOGINITP         POINT TO PARM LIST            BFG001
         LA    R2,LIBRARY          POINT TO DCB                  BFG001
         ATTACH EP=DCMSLOGT,ECB=LOGTECB,                         BFG001X
               DCB=(R2),SF=(E,ATACH),SZERO=YES,SHSPL=SUBPOOLS    BFG001
         ST    R1,LOGTTCB          SAVE TCB ADDR                 BFG001
         WAIT  ECB=LOGTINEC        WAIT FOR INITIALIZATION       BFG001
         MVC   TDCBLGST(8),TDCBPRMS   MOVE INIT PARMS            BFG001
         XC    TDCBLGDC,TDCBLGDC   SHOW NO LOG DCB NOW           BFG001
         LA    R2,LIBRARY          POINT TO LIBRARY              BFG001
         LOAD  EP=####TERM,DCB=(R2)                              BFG001
         ST    R0,TDCBLOAD         SAVE ADDR OF I/O RTN          BFG001
         SPACE 2                                                 BFG001
*    ASK FOR PASSWORD IF FIRST TIME THRU. ELSE TELL COMPLETION CODE
DOITOVER EQU   *
         LA    R1,SCR2                 POINT AT FORMAT WITH ENTRY OFF
         ST    R1,IOCBFMT
         MVC   MSGLINE,FIRSTMSG        WELCOME THE USER
         MVC   TASKLINE,=CL79' '       NO PENDING TASKS YET
         MVC   L3,=CL79' '             NO PENDING TASKS YET
ASKPASS  MVC   PROMPT,PASSLINE         ASK FOR PASSWORD
ASKPASS2 MVC   INPLINE(18),=CL18' '    CLEAR THE INPUT LINE
         BAL   R2,DISPLAY              DISPLAY THE MESSAGES
         SPACE 4
ALLOWLGN EQU   *
         MVI   TDCBLIST,X'FF'
         TM    PSCBATR1,PSCBCTRL+PSCBACCT
         BO    AUTHTSO
         NI    TDCBLIST,X'0F'
AUTHTSO  EQU   *
         OC    INPLINE(18),SPACEZ
         CLC   INPLINE(L'AON),AON
         BE    AUTHOK
         CLC   INPLINE(L'AOFF),AOFF
         BNE   DOITOVER
         NI    TDCBLIST,X'F0'
AUTHOK   EQU   *
         MVC   TASKLINE(79),SPACEZ
*
*
         OI    TDCBCFLG,TDCBLOG        NOTE LOGON COMPLETE
         MVC   MSGLINE,LOGON           TELL HIM HE'S ON
         MVC   INPLINE(18),SPACEZ
         LA    R1,SCR1                 RESTORE NORMAL INPUT LINE
         ST    R1,IOCBFMT
*        B     ASKSERV                 SEE WHAT WE CAN DO FOR THE USER
*        MVC   MSGLINE,=CL79' '
         MVC   L3,=CL79' '             NO PENDING TASKS YET
         MVC   TASKLINE,=CL79' '       ASSUME NO PENDING TASKS
         LA    R1,LOGTECB          SETUP MASTER ECB LIST         BFG001
         LA    R2,ENDECB           SECOND ECB                    BFG001
         STM   R1,R2,MSTRECB       SAVE                          BFG001
         MVI   MSTRECB+4,X'80'                                   BFG001
         EJECT
* ASK USER FOR SERVICE NAME
ASKSERV  MVC   PROMPT,SERVMSG          ASK FOR SERVICE NAME
         MVC   INPLINE(18),SPACEZ
         LA    R2,L4
         LA    R3,FLASHLEN
         LR    R5,R3
         LA    R4,BIGFLASH
         MVCL  R2,R4
*        SR    R1,R1                   PENDING TASK COUNTER
*        LR    R15,R9                  INIT PEND COUNT LOOP
*ENDLOOP ICM   R0,15,TDCBPEND-TDCB(R15) SEE IF PEND TASK EXISTS
*        BZ    TASKNO                  IF NO MORE, INSPECT COUNT
*        LA    R1,1(R1)                UP PENDING TASK COUNTER
*        LR    R15,R0                  CONTINUE DOWN CHAIN
*        B     PENDLOOP                CONTINUE COUNTING
*ASKNO   LTR   R1,R1                   ANY PENDING TASKS
*        BZ    NOPEND                  BR IF NONE
*        CVD   R1,DWORD                CONVERT PEND COUNT
*        MVC   TASKLINE,TASKMSG        PEND TASK MSG TO BUFFER
*        ED    TASKLINE(4),DWORD+6     PUT PEND COUNT IN MSG
*        BCT   R1,NOPEND               BR IF PLURAL MSG OK
*        MVI   TASKLINE+9,C' '         ELSE REMOVE THE S
*OPEND   MVC   INPLINE(18),=CL18' '    CLEAR THE INPUT LINE
         BAL   R2,DISPLAY              DISPLAY AND READ TERMINAL
         CLC   INPLINE(4),=C'IBMB'     IS IT A TRANSIENT LIB MODULE
         BE    BADNAME                 YES, DON'T LOAD IT
         LA    R2,8                    MAX NAME LENGTH
         LA    R3,INPLINE              ADDR OF ANSWER
LOOP1    CLI   0(R3),C' '              LOOK FOR ENDING BLANK
         BE    BLANKOUT                BR IF FOUND
         CLI   0(R3),C'A'              SEE IF LEGAL CHAR
         BL    BADNAME                 MUST NOT BE SPECAIAL CHAR
         LA    R3,1(R3)                POINT TO NEXT BYTE
         BCT   R2,LOOP1                CHECK ALL 8 BYTES
* NOW SEE IF THE SERVICE EXISTS
BLDL     MVC   BLDLLIST(4),BLDLDATA    PARM LIST HEADER
         MVC   MEMBER(8),INPLINE
         OC    MEMBER(8),SPACEZ
         MVC   BLDLLIST+4(8),MEMBER    COPY SERVICE NAME
         LA    R2,LIBRARY
         BLDL  (R2),BLDLLIST        SEE IF SERVICE EXISTS
*        BLDL  0,BLDLLIST        SEE IF SERVICE EXISTS
         LTR   R15,R15                 CHECK BLDL RETURN CODE
         BNZ   BADNAME                 NON-ZEOR MEANS NO MODULE
         MVC   TDCBTYPE,=CL4'#CMD'
         ST    R9,PARMS
         MVI   PARMS,X'80'
         LA    R1,PARMS
         ATTACH EPLOC=MEMBER,RSAPF=YES,DCB=(R2),                       X
               ECB=ENDECB,SF=(E,ATACH),SZERO=YES,SHSPL=SUBPOOLS
         ST    R1,TCBADDR
         LTR   R15,R15
         BNZ   BADNAME
         WAIT  ECBLIST=MSTRECB     WAIT FOR EVENT                BFG001
*                                                                BFG001
*        IF LOG TASK DIED THEN DETACH AND WAIT FOR SERV END      BFG001
*                                                                BFG001
         TM    LOGTECB,X'40'       WAS IT LOG TASK THAT DIED     BFG001
         BZ    NORMSERV            NO NORMAL SERVICE             BFG001
         L     R1,LOGTTCB          POINT AT TCB                  BFG001
         MVC   LOGTABCD,16(R1)     SAVE COMP CODE                BFG001
         DETACH LOGTTCB            GET RID OF TASK               BFG001
         XC    LOGTECB,LOGTECB     SET POST OFF                  BFG001
         XC    LOGTTCB,LOGTTCB     SET PRESENT OFF               BFG001
         WAIT  ECB=ENDECB          WAIT FOR SUBTASK TO COMPLETE  BFG001
NORMSERV DS    0H                                                BFG001
*        RECOVERY / RETCODE
         MVC   TDCBTYPE,=CL4'    '
         L     R2,TCBADDR
         MVC   ENDECB(4),TCBCMP-TCB(R2)
         DETACH TCBADDR
         CLC   ENDECB+1(3),=XL3'000000'
         BE    ASKSERV
         UNPK  TEMP(9),ENDECB(5)
         TR    TEMP(8),HEXTAB
         MVC   MSGLINE,ABNDMSG
         MVC   MSGLINE+36(8),TEMP
         B     ASKSERV
* CLEAR TRAILING GARBAGE FROM NAME
LOOP2    MVI   0(R3),C' '              BLANK OUT NEXT BYTE
BLANKOUT LA    R3,1(R3)                POINT TO NEXT BYTE
         BCT   R2,LOOP2                CLEAR REST OF NAME
         B     BLDL                    GO LOOK FOR MODULE
BADNAME  MVC   MSGLINE,BADMSG          TELL USER NAME IS BAD
         MVC   MSGLINE(8),INPLINE      PUT NAME IN MESSAGE
         B     ASKSERV                 AND TRY AGAIN
         EJECT
DISPLAY  DS    0H .
         OI    IOCBFLGC,IOCBCCLR
         TRMIO IOCB
         PFKEY DEF=DISPLAY,K9=DOITOVER,ENTER=RETURN,K1=RETURN,         X
               K12=ENDIT,ATTN=ENDIT
RETURN   DS    0H
         BR    R2
NOLOGOFF EQU   *
ENDIT    EQU   *
         SPACE 2                                                 BFG001
         CLC   LOGTTCB,=F'0'       IS LOGTASK DONE               BFG001
         BE    ENDIT2              YES                           BFG001
         POST  LOGTTREC            TELL TO TERMINATE             BFG001
         WAIT  ECB=LOGTECB         WAIT FOR FINISH               BFG001
         DETACH LOGTTCB                                          BFG001
ENDIT2   EQU   *                                                 BFG001
         SPACE 2                                                 BFG001
         MVI   ROPEN,X'80'
         CLOSE (LIBRARY),MF=(E,ROPEN)
*
         LR    R10,R13
         L    R13,SAVE+4               PREVIOUS SAVE AREA ADDR
         FREEMAIN R,LV=8192,SP=2,A=(R10)
         RETURN (14,12),RC=0
         EJECT
BLDLDATA DC    H'1,58'                 BLDL PARM LIST HEADR
HEXTAB   EQU   *-C'0'
         DC    C'0123456789ABCDEF'     HEX CONVERSION TABLE
SPACEZ   DS    0C
FIRSTMSG DC    CL80' '
PASSLINE DC    CL80'ENTER DCMS PROMPTER CONTROL TYPE: '
OFAIL    DC    CL70'DCMS013A OPEN FAILED FOR DCMS LIBRARY'
LOGON    DC    CL80'WELCOME TO DCMS'
RETRYMSG DC    CL79'SERVICE ABENDED CODE='
RETRYMS2 DC    CL79'SHOULD THE TASK BE PRESERVED? (YES OR NO)'
SUCCESS  DC    CL33' ',CL46'DCMS SELECTOR'
ABNDMSG  DC    CL80'SERVICE TERMINATED ABNORMALLY. CODE='
SERVMSG  DC    CL80'ENTER NAME OF SERVICE DESIRED. IF YOU DON''T KNOW, X
               ENTER "HELP".'
TASKMSG  DC    X'40202020',CL75' TASKS SUSPENDED'
BADMSG   DC    CL80'         IS NOT A VALID SERVICE NAME'
DOPMSG   WTO   '         ON  DCMS',ROUTCDE=8,DESC=6,MF=L
LDOPMSG  EQU   *-DOPMSG
* SCREEN FORMAT
SCR1     SFMT
MSGLINE  FIELD 79
TASKLINE FIELD 79
PROMPT   FIELD 79
L3       FIELD 79
L4       FIELD 79
L5       FIELD 79
L6       FIELD 79
L7       FIELD 79
L8       FIELD 79
L9       FIELD 79
L10      FIELD 79
L11      FIELD 79
L12      FIELD 79
L13      FIELD 79
L14      FIELD 79
L15      FIELD 79
L16      FIELD 79
L17      FIELD 79
L18      FIELD 79
L19      FIELD 79
L20      FIELD 79
INPLINE  FIELD 18,ALPHA,CURSOR=YES,ROW=23,COLUMN=1,INTEN=HI
         SFEND
SCR2     SFMT
XSGLINE  FIELD 79
XASKLINE FIELD 79
XROMPT   FIELD 79
X3       FIELD 79
X4       FIELD 79
X5       FIELD 79
X6       FIELD 79
X7       FIELD 79
X8       FIELD 79
X9       FIELD 79
X10      FIELD 79
X11      FIELD 79
X12      FIELD 79
X13      FIELD 79
X14      FIELD 79
X15      FIELD 79
X16      FIELD 79
X17      FIELD 79
X18      FIELD 79
X19      FIELD 79
X20      FIELD 79
XNPLINE  FIELD 18,ALPHA,CURSOR=YES,ROW=23,COLUMN=1,INTEN=OFF
         SFEND
* SCREEN FORMAT WITH INPUT BLANKED
DCBIMAGE DCB   DSORG=PO,MACRF=(E),DDNAME=DCMSLIB
DCBLL    EQU   *-DCBIMAGE
AON      DC    C'AUTH'
AOFF     DC    C'NORM'
SUBPOOLS DC    X'04',AL1(1),AL1(2),AL1(49),AL1(78)
*
         LTORG
BIGFLASH EQU   *
      Z '  ***********      **********     ***      ***     ********* '
      Z '  ************    ************    ****    ****    ***********'
      Z '  ***      ***    ***             *** **** ***    ***        '
      Z '  ***      ***    ***             ***  **  ***    ********** '
      Z '  ***      ***    ***             ***      ***     **********'
      Z '  ***      ***    ***             ***      ***            ***'
      Z '  ************    ************    ***      ***    ***********'
      Z '  ***********      **********     ***      ***     ********* '
      Z '                                                             '
      Z '          ***      ***    ***      ***     **********        '
      Z '          ****    ****    ***      ***    ************       '
      Z '          *** **** ***    ***      ***    ***                '
      Z '          ***  **  ***    ***      ***    ***********        '
      Z '          ***      ***    ***      ***     ***********       '
      Z '          ***      ***    ***      ***             ***       '
      Z '          ***      ***     ***    ***     ************       '
      Z '          ***      ***       ******        **********        '
FLASHLEN EQU   *-BIGFLASH
DCMSWORK DSECT
SAVE     DS    18F
IOCB     IOCB
DWORD    DS    D                       CVB WORK AREA
CPPLADDR DS    F
TCBADDR  DS    F
ENDECB   DS    F
PARMS    DS    2F .
BLDLLIST DS    31H                     BLDL PARM LIST AREA
TEMP     DS    CL9
LOGINITP DC    A(TDCBPRMS,LOGTINEC,LOGTTREC)                     BFG001
TDCBPRMS DS    2F                  ADDR OF LOGT STACK AND ECB    BFG001
LOGTECB  DS    F                   END-OF-TASK ECB               BFG001
LOGTINEC DS    F                   POSTED WHEN LOGT INITED       BFG001
LOGTTREC DS    F                   POST TO TERM LOGT             BFG001
LOGTTCB  DS    F                   ADDR OF TCB                   BFG001
LOGTABCD DS    F                   ABEND CODE                    BFG001
MSTRECB  DS    2F                  MAIN WAIT ECB LIST            BFG001
*ORKLEN  EQU   *-WORKAREA
DCMSBUF  DSECT
IOAREA   EQU   *
         DSGEN SCR1                    SCR2 IS THE SAME
LIBRARY  DS    (DCBLL)X
         DS    F
ROPEN    OPEN  (,(INPUT)),MF=L
ATACH    ATTACH EPLOC=MEMBER,SF=L,DPMOD=-5
MEMBER   DS    CL8
         VECTOR DSECT=NO                                         BFG001
TDCBSPOT DS    24F .
         DS    F
*
*
*
         EJECT
         TDCB
         TACCT
         END
