$cmd clearsc
An example of creating a new SAS library in batch:

/*IWT 5
//X75826T0 JOB (10-337-MISC-027-B4,1),'SMITH-TC',CLASS=E,
// MSGCLASS=1,MSGLEVEL=(0,0),NOTIFY=X75826
// EXEC SAS
//MYLIB DD DSN=X75826.SASLIB.DATA,DISP=(NEW,CATLG,DELETE),
// UNIT=DISK,SPACE=(TRK,(1,1)),VOL=SER=GDRTS1
DATA MYLIB.XYZ;
  INPUT NAME $ X Y;
  CARDS;
  TOM 1 2
  JAN 3 4

The MYLIB on the DATA statement must match the DDname beginning in
column 3 on the DD statement on which the new SAS library is allocated.

The VOL=SER=GDRTS1 tells which disk volume the dataset will be
allocated on.  There are a series of disk volumes on our system with
volume serials beginning GDRTS.  These are the only places you are
authorized to allocate TSO datasets (datasets beginning with your
userid). From TSO READY mode, enter the command "dspace gdrts" to get a
list of all such volumes, and how much space if left on each.

$cmd clearsc 1

After you've allocated a SAS library, either through a batch job like
the one just shown, or through a TSO ALLOCATE statement, subsequent
batch jobs will reference it as in the following example:

/*IWT 5
//X75826T1 JOB (10-337-MISC-027-B4,1),'SMITH-TC',CLASS=E,
// MSGCLASS=1,MSGLEVEL=(0,0),NOTIFY=X75826
// EXEC SAS
//MYLIB DD DSN=X75826.SASLIB.DATA,DISP=SHR
PROC PRINT DATA MYLIB.XYZ;

$cmd clearsc 1
