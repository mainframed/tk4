$until answer='2' × answer='3' × answer='4'

  1 - Give me an introductory explanation of MOVE/COPY.
  2 - I want to use MOVE.
  3 - I want to use COPY.

  Enter one of the above numbers.
  $input
  $if answer='1'
    $cmd aid mocointr
$if answer=2
  $cmd setl subcmd MOVE
$else
  $cmd setl subcmd COPY

MOVE/COPY has several alternative methods from which you must choose
by specifying one of three keywords FROM, TO, and OL. In the first two
alternatives (FROM and TO), the copied data will always be stored in
newly created lines.  OL, of course, specifies that the copied data
is to overlay existing lines.

The FROM AND TO keywords determine whether <lsufrom> or <lsuto>, which
define respectively the from-box and the to-box, will drive the
operation.  That is, if the FROM keyword is specified, the operation
will continue as long as columns specified by <lsufrom> are available.
If the TO keyword is specified, the operation will continue as long as
columns specified by <lsuto> have not yet been processed.

When FROM or TO is specified, the starting line in the to-box
specification specifies the line where the newly created lines are to
be inserted.  If you intend to copy/move either to a data set which
currently is empty, or to a data set which is to be created by the
move/copy subcommand, you may specify 1 as the starting line number.
The ending-line specification in the to-box should then be chosen to
reflect the desired number of rows.  If the starting line specified in
the to-box is 23, and you want 5 rows, then the ending line specified
should be 27.

When OL is specified, the copied data will always be stored in
existing lines, and of course the line range specification for the
to-box must refer to existing lines in the data set.

You will now be prompted for your choice of these two alternatives.

$until answer='1' × answer='2'

  1 - Use the first alternative - create new lines for the copied data.
  2 - Use the second alternative - copy data onto existing lines.

  Enter one of the above numbers.
  $input
$if answer=1
  $cmd setl ol ''
$else
  $cmd setl ol OL

The to-box doesn't have to be in the same data set as the from-box.
If you want the to-box to be in another data set, specify the
short hand name associated with that data set.  Otherwise, just
press ENTER.

$input

$cmd setl name &ANSWER

You will now be prompted for the line specification unit (LSU)
defining the from-box.

$cmd aid lsu
$cmd setquot from lsu
$cmd setl from &FROM

$until answer='1' × answer='2'
  The to-box specification depends on whether you want the copied data
  reshaped.  Reshaping involves changing the dimensions of the matrix,
  e.g. from 3 rows by 5 columns to 5 rows by 3 columns.

  1 - I don't want to reshape the data.
  2 - I want to reshape the data.

  $input

$if answer=1
  $until answer='1'  × answer='2'
    1 - Give me an explanation of line number specifications before
        prompting me.
    2 - I understand about line numbers.  Go ahead and prompt me.

    Enter one of the above numbers.

    $input
  $if answer=1
    $cmd aid lsulinei

  $until answer^=''
    Now specify the line behind which the copied lines are to be
    inserted.

    $input

  $cmd setquot to answer
  $cmd setl to &TO
$else
  You will now be prompted for the line specification unit (LSU)
  defining the to-box.

  $cmd aid lsu
  $cmd setquot to lsu
  $cmd setl to &TO
$cmd setl copies ''
$if ol=''
  You can have this move/copy operation repeated more than once.
  Enter the number of times you would like the operation repeated,
  or just press the ENTER key if you want it done only once.

  $input

  $cmd setl copies &ANSWER

The generated command is as follows:

  &FROM &SUBCMD (&NAME &TO) &COPIES &OL

$until answer='1' × answer='2'
  Do you want the command executed?
  1 - Yes, go ahead and execute.
  2 - No, don't executed.

  $input

$if answer='1'
  $cmd &FROM &SUBCMD (&NAME &TO) &COPIES &OL
