$cmd clearsc
$ start
FSEDIT - Creating and copying screens.

TSO ALLOC FI(SHIPS) DA(SHIPS.DATA) NEW TR SP(1 1) REUSE;
DATA SHIPS.DATA;
  INPUT NAME $ X Y;
  CARDS;
  TOM 1 2
  SAM 5 6
  MUFFIN 7 9
PROC FSEDIT DATA=SHIPS.DATA SCREEN=SHIPS.CATALOG;

The above SAS source statements will create these objects:

  1.  SAS library SHIPS, which is also a TSO dataset.
  2.  SHIPS.DATA, which is a SAS dataset containing three observations.
  3.  SAS catalog SHIPS.CATALOG.
  4.  An FSEDIT screen named FSEDIT.SCREEN, stored in SAS catalog
      SHIPS.CATALOG (This is provided I issue the MODIFY command
      to modify the screen while in FSEDIT).

It is important to note that SCREEN=SHIPS.CATALOG specifies only the
SAS libref and catalog name.  The screen name and type default to
FSEDIT.SCREEN.  If you want a different name, such as MYSCREEN, you
must say so, as in the following FSEDIT statement:

PROC FSEDIT DATA=SHIPS.DATA SCREEN=SHIPS.CATALOG.MYSCREEN;

$cmd clearsc 1

If I wanted to copy the screen FSEDIT.SCREEN described above to a
new catalog, I could do so by invoking PROC FSLETTER:

PROC FSLETTER LETTER=SHIPS.NEWCATLG;

When the FSLETTER menu is displayed, I can then copy FSEDIT.SCREEN
by entering the following command:

copy ships.catalog.fsedit.screen

FSLETTER will then store a copy of FSEDIT.SCREEN in SAS catalog
SHIPS.NEWCATLG.  The FSLETTER menu also has options for renaming
and deleting screens.

$cmd clearsc 1
