In the simplest case, the change subcommand is used to replace a
character string in each column with another character string,
regardless of where it occurs.  More sophisticated criteria can be
specified so that, for example, the character string is replaced only
if it appears as a word.  Thus, "CHANGE I ABC" would change the line
"I AM YOUR FRIEND" to "ABC AM YOUR FRABCEND" but "CHANGE I ABC WORD"
would change it to "ABC AM YOUR FRIEND."

First, you will be prompted for the Line Specification Unit (LSU).

$cmd aid lsu

You will subsequently be prompted to enter the replacing string <ver>
and the replacement string <rep>.  Would you like to enter them in
hex, e.g. "f1f2f3" instead of "123"?  Enter a null line for yes.
$input
$if answer=''
  $cmd setl hex hex
$else
  $cmd setl hex ''

$until answer='1' × answer='2'
  1 - Change only the first occurrence of <ver>.
  2 - Change all occurrences of <ver>.

  Enter 1 or 2.
  $input

$if answer='1'
  $cmd setl nall nall
$else
  $cmd setl nall ''

One of the keywords you can specify on the CHANGE subcommand is
NOSHIFT.  Briefly, the NOSHIFT keyword causes minimal shifting of
data during the change.  If you want to know more, see the ABE
Reference Manual.  Would you like to use the NOSHIFT keyword?
Enter a null line for yes.
$input
$if answer=''
  $cmd setl noshift noshift
$else
  $cmd setl noshift ''

Another keyword which is rarely used is the RESCAN keyword.  If
RESCAN is NOT specified, the rescan of a line after a particular
occurrence of <ver> is replaced with <rep> begins with the first
character after <rep>.  If RESCAN is specified, the rescan begins
with the first character of <rep> as long as the length of the
column data changes by at least 1.  If the length doesn't change the
rescan begins with the second character after the first in <rep>.
Would you like to specify RESCAN.  Enter a null line for yes.
$input
$if answer=''
  $cmd setl rescan rescan
$else
  $cmd setl rescan ''

$until answer='1' × answer='2' × answer='3' × answer='4' × +
  answer='5' × answer='6' × answer='7'
  1 - Simplest case - change string <ver> to string <rep>.
  2 - Change only where <ver> occurs as a word.
  3 - Change only where <ver> occurs as a prefix.
  4 - Change only where <ver> occurs as a suffix.
  5 - Change where <ver> matches disregarding upper/lower case, e.g.
      change all occurrences of 'tom' to 'Bill', including occurrences
      such as tom, TOM, and Tom.
  6 - Change where any one char in <ver> matches, e.g. if <ver>="abc",
      and <rep>="@" change line "charge my battery" to "@h@rge my
      @@ttery."
  7 - Change according to a specified pattern, e.g. if <ver>="___",
      then any string of three digits will be replaced by <rep>.
      You will be given further instructions about how to specify
      <ver>.
  $input
$select
  $when answer='1'
    $cmd setl type ''
  $when answer='2'
    $cmd setl type word
  $when answer='3'
    $cmd setl type prefix
  $when answer='4'
    $cmd setl type suffix
  $when answer='5'
    $cmd setl type text
  $when answer='6'
    $cmd setl type any
  $when answer='7'
    $cmd setl type picture
    <ver> may be a string containing any combination of the following
    characters:
       = - any character (don't care)
       ^ - any non-blank character
       . - any non-displayable character
       # - any numeric character (0-9)
       _ - any non-numeric character
       @ - any alphabetic character (upper or lower case)
       < - any lowercase alphabetic character
       > - any uppercase alphabetic character
       $ - any special character (not alpha or numeric)
$cmd aid changest

The generated command is as follows:
$write &LSU change &VER &REP &TYPE &NOSHIFT &HEX &RESCAN &NALL
Do you want the command executed?  Enter a null line for yes.
$input
$if answer=''
  $cmd &LSU change &VER &REP &TYPE &NOSHIFT &HEX &RESCAN &NALL
