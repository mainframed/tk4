PARSE    QSTART 'QUEUE COMMAND - COMMAND LINE PARSE ROUTINES - Q16' RGR
         USING QDISPLAY,R10   BASE REG FOR DISPLAY WORK AREA
         L     R10,QVDSPL     LOAD BASE REG
         USING WORK,R13       BASE REG FOR LOCAL WORK AREA
***********************************************************************
*                                                                     *
*   PARSE SUBCOMMAND NAME                                             *
*                                                                     *
***********************************************************************
         LH    R2,QDRLNG      LENGTH OF REPLY LINE
         OC    QDREPLY,QBLANK TRANSLATE TO UPPER CASE
         CLC   QDREPLY,QBLANK IS THE ENTIRE REPLY BLANK?
         BE    LOOKUP         YES. DO LOOKUP.
         MVC   QDTLINE,QDREPLY MOVE COMMAND LINE TO HEADING
         MVC   FIELD,QBLANK   BLANK THE WORK FIELD
         MVC   OFFSET(4),=F'0' ZERO THE OFFSET AND LENGTH
         MVC   QOFF0(12),OFFSET INITIALIZE FIRST FIELD
         MVC   QOFF1(48),QOFF0 INITIALIZE NEXT FOUR FIELDS
         LA    R6,QOFF4+12    ADDR PAST LAST FIELD
         LA    R5,QOFF0       ADDR OF FIRST SET OF FIELDS
         LA    R3,QDREPLY     FIRST BYTE OF REPLY LINE
ENCORE   LA    R4,FIELD       FIRST BYTE OF WORK FIELD
BLANK    CLI   0(R3),C' '     IS THIS BYTE BLANK?
         BNE   FIRST          NO. START OF FIELD.
         LA    R3,1(R3)       YES. SKIP IT.
         BCT   R2,BLANK       TRY NEXT BYTE
         B     EMPTY          END OF REPLY LINE.
FIRST    LH    R1,QDRLNG      REPLY LENGTH
         SR    R1,R2          COMPUTE OFFSET TO START OF FIELD
         STH   R1,OFFSET      STORE OFFSET
         LR    R1,R2          SAVE COUNT OF REMAINING BYTES
         B     CHAR           CONTINUE
LOOP     CLI   0(R3),C' '     IS THIS BYTE BLANK?
         BE    LAST           YES. END OF FIELD.
CHAR     MVC   0(1,R4),0(R3)  MOVE BYTE TO SUBNAME
         LA    R3,1(R3)       INCREMENT
         LA    R4,1(R4)       INCREMENT
         BCT   R2,LOOP        TRY NEXT BYTE
LAST     SR    R1,R2          COMPUTE FIELD LENGTH
         CH    R1,=H'8'       IS LENGTH GREATER THAN 8?
         BNH   STORE          NO. USE IT.
         LA    R1,8           YES. USE LENGTH OF EIGHT.
STORE    STH   R1,LENGTH      STORE FIELD LENGTH
EMPTY    MVC   0(12,R5),OFFSET MOVE FIELD TO QCOMMON
         LTR   R2,R2          IS THE REMAINING LENGTH ZERO?
         BZ    LOOKUP         YES. DO THE TABLE LOOKUP.
         MVC   FIELD,QBLANK   BLANK THE WORK FIELD
         MVC   OFFSET(4),=F'0' ZERO OUT OFFSET AND LENGTH
         LA    R5,12(R5)      INCREMENT TO NEXT FIELD
         CR    R5,R6          WAS THAT THE LAST FIELD?
         BL    ENCORE         NO. PROCESS NEXT FIELD.
***********************************************************************
*                                                                     *
*   LOOK UP THE MODULE ADDRESS FOR THE SUB COMMAND                    *
*                                                                     *
***********************************************************************
LOOKUP   CLC   =C'XP',QSUBNAME  IS THIS A PASSWORD REQUEST?       UF014
         BE    PASSWD         YES. CHECK FOR PASSWORD.            UF014
LOOKUP2  LA    R2,TABLE       START OF SUBCOMMAND TABLE
         TM    QXAUTH,1       IS THE USER PRIVILEGED?             UF014
         BNO   NEXT           NO, TABLE IS OK                     UF014
         LA    R2,TABLEX      START OF PRIV TABLE                 UF014
         CLC   =C'DIE',QSUBNAME IS THIS THE DIE REQUEST?          UF024
         BE    CDIE           YES, DO IT                          UF024
NEXT     CLC   0(4,R2),QSUBNAME COMPARE FIRST 4 CHARACTERS        UF014
         BE    FOUND          THIS IS THE ONE
         LA    R2,10(R2)      NEXT ENTRY                          UF014
         CLI   0(R2),X'FF'    IS THIS THE END OF TABLE?
         BNE   NEXT           NO. TRY NEXT ENTRY.
FOUND    MVC   QCODEH(6),4(R2) SUBCOMMAND CODE AND COMMAND ADDR   UF014
STOP     QSTOP
***********************************************************************
*                                                                     *
*   CHECK PASSWORD FOR AUTHORIZED COMMANDS                        UF014
*                                                                     *
***********************************************************************
PASSWD   CLC   QPARM1,=C'PASSWORD' DID THE USER SAY PASSWORD?
         BNE   BOUNCE         NO. REJECT.
         TPUT  WPASS,L'WPASS,FULLSCR,MF=(E,QTPUT)
*        LA    R1,RPASS       REPLY ADDRESS
         TGET  RPASS,8,EDIT,MF=(E,QTGET)
         CLC   RPASS,=C'SYSGOD  ' IS THE PASSWORD CORRECT?
         BNE   BOUNCE         NO. REJECT.
         OI    QXAUTH,1       AUTHORIZE USER
         QTILT '*** PASSWORD ACCEPTED ***'
BOUNCE   LA    R2,HELPCC      NO. PRETEND IT IS INVALID.
         B     FOUND          CONTINUE
***********************************************************************
*                                                                     *
*   MISCELLANY                                                        *
*                                                                     *
***********************************************************************
         LTORG
         EJECT ,                                                  UF014
TABLEX   DS    0D             START OF PRIV COMMAND TABLE         UF014
         DC    C'XB  ',H'0',VL4(HEXBLK)    DISP SPOOL BLOCK
         DC    C'XJ  ',H'36',VL4(SEARCH)   DISP HEX JQE/JOE
         DC    C'XI  ',H'0',VL4(INITS)     DISP ACTIVE INITS
         DC    C'XD  ',H'0',VL4(XDS)       UNRESTRICTED DISP OF FILES
         DC    C'JQE ',H'0',VL4(CJQE)      HEX DUMP OF JQE        UF015
         DC    C'JCT ',H'0',VL4(CJCT)      HEX DUMP OF JCT        UF016
         DC    C'HCT ',H'0',VL4(CHCT)      HEX DUMP OF HCT SAVEAREUF022
         DC    C'FTIM',H'8',VL4(REPOS)     FTIME (SYSLOG)           RGR
         DC    C'FT  ',H'8',VL4(REPOS)     FTIME (SYSLOG)           RGR
         DC    C'SAVE',H'4',VL4(SAVE)      SAVE COPY OF FILE        RGR
* MOVED  DC    C'SLOG',H'0',VL4(SYSLOG)    LIST THE SYSTEM LOG      RGR
* MOVED  DC    C'SL  ',H'0',VL4(SYSLOG)    LIST THE SYSTEM LOG      RGR
         DC    C'TSO ',H'0',VL4(CTSO)      ISSUE ANY TSO COM  RGR UF017
         DC    C'/   ',H'0',VL4(CTSO)      ISSUE ANY TSO COM  RGR UF017
         DC    C'EX  ',H'0',VL4(CTSO)      IMPLICIT CLIST INV RGR UF017
         DC    C'EXEC',H'0',VL4(CTSO)      IMPLICIT CLIST INV RGR UF017
         SPACE 1                                                  UF014
TABLE    EQU   *              START OF STANDARD COMMAND TABLE     UF014
         DC    C'STAT',H'0',VL4(SEARCH)    STATUS
         DC    C'ST  ',H'0',VL4(SEARCH)    STATUS
         DC    C'DD  ',H'0',VL4(DDNAME)    LIST SYSINS/SYSOUTS FOR JOB
         DC    C'PDDB',H'0',VL4(CPDDB)     LIST PDDBS FOR JOB RGR UF025
         DC    C'LIST',H'0',VL4(LIST)      LIST A SYSIN/SYSOUT FILE
         DC    C'L   ',H'0',VL4(LIST)      LIST A SYSIN/SYSOUT FILE
         DC    C'SLOG',H'0',VL4(SYSLOG)    LIST THE SYSTEM LOG
         DC    C'SL  ',H'0',VL4(SYSLOG)    LIST THE SYSTEM LOG
         DC    C'FIND',H'4',VL4(REPOS)     FIND
         DC    C'FALL',H'4',VL4(REPOS)     FIND ALL
         DC    C'FA  ',H'4',VL4(REPOS)     FIND ALL
         DC    C'F   ',H'4',VL4(REPOS)     FIND
         DC    C'COL ',H'12',VL4(REPOS)    COLUMN
         DC    C'CO  ',H'12',VL4(REPOS)    COLUMN
         DC    C'C   ',H'12',VL4(REPOS)    COLUMN
         DC    C'@   ',H'16',VL4(REPOS)    REPOS TO RECORD NUMBER
         DC    C'MD  ',H'16',VL4(REPOS)    REPOS TO RECORD NUMBER
         DC    C'+   ',H'20',VL4(REPOS)    DOWN
         DC    C'D   ',H'20',VL4(REPOS)    DOWN
         DC    C'PF  ',H'20',VL4(REPOS)    PAGE FORWARD
         DC    C'HF  ',H'20',VL4(REPOS)    HALF PAGE FORWARD
         DC    C'-   ',H'24',VL4(REPOS)    UP
         DC    C'UP  ',H'24',VL4(REPOS)    UP
         DC    C'PB  ',H'24',VL4(REPOS)    PAGE BACK
         DC    C'HB  ',H'24',VL4(REPOS)    HALF BACK
         DC    C'TOP ',H'28',VL4(REPOS)    TOP
         DC    C'T   ',H'28',VL4(REPOS)    TOP
         DC    C'BOTT',H'32',VL4(REPOS)    BOTTOM
         DC    C'BOT ',H'32',VL4(REPOS)    BOTTOM
         DC    C'B   ',H'32',VL4(REPOS)    BOTTOM
         DC    C'MODE',H'36',VL4(REPOS)    MODEL                  UF003
         DC    C'M   ',H'36',VL4(REPOS)    MODEL                  UF003
         DC    C'DA  ',H'4',VL4(SEARCH)    DISP ALL IN EXEC
         DC    C'DI  ',H'8',VL4(SEARCH)    DISP ALL IN INPUT CLASS
         DC    C'DO  ',H'12',VL4(SEARCH)   DISP ALL IN OUTPUT CLASS
         DC    C'AI  ',H'16',VL4(SEARCH)   DISP ALL AVAIL FOR EXEC
         DC    C'AO  ',H'20',VL4(SEARCH)   DISP ALL AVAIL FOR OUTPUT
         DC    C'HI  ',H'24',VL4(SEARCH)   DISP ALL IN INPUT HOLD
         DC    C'HO  ',H'28',VL4(SEARCH)   DISP ALL IN OUTPUT HOLD
         DC    C'DT  ',H'32',VL4(SEARCH)   DISP TSO USERS
         DC    C'DJ  ',H'36',VL4(SEARCH)   DISPLAY JOB
         DC    C'DS  ',H'40',VL4(SEARCH)   DISPLAY STC
         DC    C'DQ  ',H'44',VL4(SEARCH)   DISP INPUT QUEUES
         DC    C'DF  ',H'48',VL4(SEARCH)   DISP OUTPUT QUEUES
         DC    C'JCL ',H'0',VL4(JCL)       LIST JCL
         DC    C'JC  ',H'0',VL4(JCL)       LIST JCL                 RGR
         DC    C'JLOG',H'0',VL4(JLOG)      LIST JOBLOG
         DC    C'JL  ',H'0',VL4(JLOG)      LIST JOBLOG              RGR
         DC    C'JMSG',H'0',VL4(JMSG)      LIST SYSMSGS
         DC    C'JM  ',H'0',VL4(JMSG)      LIST SYSMSGS             RGR
         DC    C'DC  ',H'0',VL4(ACTIVE)    DISP CPU BATCH/STC/TSO
         DC    C'DEL ',H'0',VL4(SYSOUT)    DELETE JOB               RGR
         DC    C'RE  ',H'4',VL4(SYSOUT)    REQUEUE JOB              RGR
         DC    C'CAN ',H'8',VL4(SYSOUT)    CANCEL JOB               RGR
         DC    C'SCR ',H'0',VL4(SCREEN)    CHANGE SCREEN SIZE       EAM
HELPCC   DC    X'FF0000000000',VL4(HELP)
         SPACE 1                                                  UF014
WPASS    DC    X'C1115D7F1140403C4040001D4C13'  *** SPF TCAM
         SPACE 1                                                  UF024
CDIE     DC    X'00DEAD'                                          UF024
         DC    AL1(L'CDIEMSG)                                     UF024
CDIEMSG  DC    C'DIE COMMAND ENTERRED'                            UF024
         SPACE 1                                                  UF024
CDIEDONE LA    R2,HELPCC          SIMULATE HELP REQUEST WHEN RETURN 024
         MVI   QSUBNAME,0         CLEAR COMMAND NAME              UF024
         B     FOUND              AND RETURN TO CALLER            UF024
         SPACE 1                                                  UF024
WORK     DSECT
         DS    CL72
OFFSET   DS    H
LENGTH   DS    H
FIELD    DS    CL8
RPASS    DS    CL8
SYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023
         QCOMMON
SYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023
         END
