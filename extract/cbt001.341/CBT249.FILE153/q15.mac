LISTDS   QSTART 'QUEUE COMMAND - LIST A DATASET FROM SPOOL - Q15'   RGR
         USING QCKPT,R10      BASE REG FOR CHECKPOINT WORK AREA
         L     R10,QVCKPT     LOAD BASE REG
         USING QDISPLAY,R9    BASE REG FOR DISPLAY WORK AREA
         L     R9,QVDSPL      LOAD BASE REG
         USING WORK,R13       BASE REG FOR LOCAL WORK
***********************************************************************
*                                                                     *
*   DETERMINE FUNCTION REQUESTED                                      *
*                                                                     *
***********************************************************************
         CLI   QCODE,0        IS THE REQUEST FOR REPOSITIONING?
         BNE   REPOS          YES. DO IT.
***********************************************************************
*                                                                     *
*   LOCATE PDDB FOR DATASET SPECIFIED IN QPDSID                       *
*                                                                     *
***********************************************************************
NORMAL   MVI   SWITCH,0       INITIALIZE SWITCH
         USING PDBDSECT,R2    BASE REG FOR PDDB
         USING IOTSTART,R3    BASE REG FOR IOT
         L     R3,QCIOTA      LOAD BASE REG
         LR    R5,R3          IOAREA FOR READ IOT BLOCK
NEXTIOT  LR    R4,R3          BASE OF IOT
         A     R4,IOTPDDBP    OFFSET BEYOND LAST PDDB
         LR    R2,R3          BASE OF IOT
         A     R2,QCPDDB1     OFFSET TO FIRST PDDB IN IOT
FINDDS   OC    PDBMTTR,PDBMTTR IS THERE ANY OUTPUT?               UF020
         BZ    FINDDS1        NO, SKIP THIS ONE                   UF020
         CLC   QPDSID,PDBDSKEY IS THIS THE DATASET?
         BE    FOUNDDS        YES. CONTINUE.
FINDDS1  LA    R2,PDBLENG(R2) NO. LOOK AT NEXT PDDB.              UF020
         CR    R2,R4          HAVE WE GONE PAST THE LAST PDDB?
         BL    FINDDS         NO. TRY AGAIN.
         L     R4,IOTIOTTR    DISK ADDR OF NEXT IOT
SPIN     LTR   R4,R4          IS THERE ANOTHER IOT?
         BZ    SPINIOT        NO. TRY THE SPIN IOT?
         BAL   R8,READ        READ THE IOT
         B     NEXTIOT        SEARCH THE NEXT IOT
         USING JCTSTART,R1    BASE REG FOR JCT
SPINIOT  TM    SWITCH,1       DID WE SEARCH THE SPINIOT ALREADY?
         BO    TILT           YES. TILT.
         OI    SWITCH,1       SET SWITCH
         L     R1,QCJCTA      LOAD BASE REG
         L     R4,JCTSPIOT    DISK ADDR OF SPIN IOT
         DROP  R1
         B     SPIN           SEARCH THE SPIN IOT CHAIN
TILT     MVC   QPDSID,=H'0'   INVALIDATE DSID
         QTILT '*** DATASET ID NOT FOUND ***'
TILT2    QTILT '*** DATASET TABLE LIMITS EXCEEDED ***'
FOUNDDS  DS    0H                                                 UF007
         CLI   QPARM1,C'*'    USE LAST JOB NAME?                  UF007
         BE    *+4+6          YES, SKIP OVERLAY OF JOBNAME        UF007
         MVC   QCJNAME,QPARM1 SAVE THE JOBNAME                    UF007
         MVC   QCDSNO,QPARM2  SAVE THE DATASET ID NUMBER
         MVC   QDHLINE,QCHLINE MOVE IN HEADING LINE
         MVC   QCRECFM,PDBRECFM RECORD FORMAT FOR SAVE
         MVC   QCLRECL,PDBLRECL RECORD LENGTH FOR SAVE
         L     R4,PDBMTTR     DISK ADDR OF FIRST BLOCK
         L     R5,QCBLKA      ADDR OF DATASET BLOCK IOAREA
         L     R2,QCSTART     BEGINNING OF DISK ADDR TABLE
         ZAP   QCCREC,=P'0'   ZERO CURRENT RECORD NO
         MVC   QCCPTR,QCSTART BEGIN OF TBL
         ZAP   QCHREC,=P'0'   ZERO HIGH REC NO
         MVC   QCHPTR,QCSTART BEGIN OF TBL
         ZAP   QPREC,=P'1'    REPOSITION TO TOP OF DATASET
         B     FIRST          PROCESS DATASET
         DROP  R2
         DROP  R3
***********************************************************************
*                                                                     *
*   PROCESS DATASET                                                   *
*                                                                     *
***********************************************************************
NEXTBLK  L     R4,0(R5)       DISK ADDR OF NEXT BLOCK
FIRST    LTR   R4,R4          IS THE DISK ADDR ZERO?
         BZ    END            YES. END OF DATASET.
         ST    R4,0(R2)       STORE DISK ADDR IN TABLE
         BAL   R8,READ        READ A BLOCK
         CLC   QPJOBID(6),4(R5) DOES THE JOBID MATCH?
         BNE   END            NO. END OF DATASET.
         MVC   4(4,R2),QCCREC STORE CURRENT REC NUM IN TABLE
         ST    R2,QCCPTR      STORE CURRENT TABLE ADDR
         CP    QCCREC,QCHREC  IS THE CURRENT REC NO > HIGHEST?
         BNH   NOTHI          NO. SKIP.
         MVC   QCHREC(8),QCCREC REPLACE HI REC CNT AND PTR
NOTHI    LA    R2,8(R2)       INCREMENT TO NEXT TBL ENTRY
         C     R2,QCEND       IS THIS THE END OF TABLE?
         BNL   TILT2          YES. TILT.
         LA    R4,10(R5)      ADDR OF FIRST RECORD IN BLOCK
***********************************************************************
*                                                                     *
*   PROCESS RECORDS                                                   *
*                                                                     *
***********************************************************************
NEXTREC  CLI   0(R4),X'FF'    IS LENGTH BYTE FF?
         BE    NEXTBLK        YES. END OF BLOCK.
         TM    1(R4),X'10'    IS THIS A SPANNED RECORD?
         BO    SPAN           YES. SKIP IT.
         SR    R6,R6          ZERO OUT REG
         IC    R6,0(R4)       INSERT LENGTH
         LR    R7,R6          SAVE RECORD LENGTH
         LR    R1,R4          SAVE RECORD LOCATION
         TM    1(R4),X'80'    IS CARRIAGE CONTROL SPECIFIED?
         BZ    NOCCTL         NO. CONTINUE.
         LA    R1,1(R1)       SKIP OVER CARRIAGE CONTROL
NOCCTL   TM    1(R4),X'08'    IS THIS RECORD TO BE IGNORED?
         LR    R4,R1          UPDATE RECORD POINTER
         BNZ   SKIPREC        YES. SKIP IT.
         AP    QCCREC,=P'1'   ADD ONE TO CUR REC NO
         CP    QCCREC,QPREC   HAVE WE REACHED THE RECORD WE WANT?
         BL    SKIPREC        NO. TRY NEXT RECORD.
         CLI   QCODE,4        IS THE REQUEST FOR A FIND?
         BE    FIND           YES. DO IT.
         CLI   QCODE,8        IS THE REQUEST FOR A FINDTIME?
         BE    FINDTIME       YES. DO IT.
FINDOFF  AH    R1,QPOFFSET    ADD OFFSET TO START OF RECORD
         SH    R7,QPOFFSET    SUBTRACT OFFSET FROM LENGTH
         BNP   ZEROPRT        NO DATA LEFT IN RECORD.
         CH    R7,QDLNELEN    IS THE RECORD BIGGER THAN LINE?     UF003
         BNH   LTMAX          NO. USE RECORD LENGTH.              UF003
         LH    R7,QDLNELEN    YES. USE A LENGTH OF LINE.          UF003
LTMAX    STH   R7,QDMLNG      STORE MESSAGE LENGTH                UF003
         LA    R1,3(R1)       OFFSET PAST REC HDR
         ST    R1,QDMSGA      STORE ADDR OF MESSAGE LINE
         L     R15,=V(DISPLAY) ADDRESS OF DISPLAY MODULE
         BALR  R14,R15        GO TO IT
         TM    QDOVER,1       WAS THERE A PAGE OVERFLOW?
         BNO   SKIPREC        NO. SKIP.
         ZAP   QPREC,QCCREC   UPDATE THE REPOSITION NUMBER
         MVC   HREC,EDIT      PATTERN FOR EDIT
         ED    HREC,QCCREC    EDIT RECORD NUMBER
SKIPREC  LA    R4,3(R6,R4)    INCREMENT TO NEXT RECORD
         B     NEXTREC        PROCESS NEXT RECORD
SPAN     LH    R6,2(R4)       LENGTH OF SEGMENT
         TM    1(R4),X'08'    IS THIS THE FIRST SEGMENT?
         BO    SPANFRST       YES. USE HEADER LENGTH OF 6.
         LA    R4,4(R6,R4)    UPDATE RECORD POSITION
         B     NEXTREC        PROCESS NEXT RECORD
SPANFRST LA    R4,6(R6,R4)    UPDATE RECORD POSITION
         B     NEXTREC        PROCESS NEXT RECORD
ZEROPRT  LA    R1,QBLANK      PRINT A BLANK
         LA    R7,1           LENGTH OF ONE
         B     LTMAX          PRINT THE RECORD                    UF003
END      CP    QCCREC,=P'0'   IS THE DATASET EMPTY
         BE    STOP           YES. QUIT.
         MVC   HEND,ENDLINE   TELL THEM THIS IS THE END
         MVC   HREND,EDIT     PATTERN FOR EDIT
         ED    HREND,QCCREC   LAST REC NO
         CLI   QCODE,32       WAS REQUEST FOR BOTTOM?
         BE    BOTTOM         YES. BACK UP 21 LINES.
         MVC   QDMLNG,=H'0'   ZERO OUT MESSAGE LENGTH
         L     R15,=V(DISPLAY) ADDR OF DISPLAY MODULE
         BALR  R14,R15        FLUSH THE SCREEN
         ZAP   QPREC,=P'1'    RECORD NUMBER 1
         MVC   QDHLINE,QCHLINE BLANK THE TITLE LINE
         B     TOP            START AT TOP OF DATASET
STOP     XC    QPDSID,QPDSID  MAKE USER SPECIFY A NEW DATA SET
         MVC   QDHLINE,=CL80'*** DATA SET IS EMPTY ***'
         QSTOP
***********************************************************************
*                                                                     *
*   BOTTOM OF DATASET                                                 *
*                                                                     *
***********************************************************************
BOTTOM   ZAP   QPREC,QCCREC   LAST RECORD NUMBER
         MVI   QCODE,0        AVOID A LOOP
         SP    QPREC,QDLNES   TOP OF PAGE -1                      UF003
         AP    QPREC,=P'1'    TOP OF PAGE                         UF003
         BP    REPOS          CONTINUE IF POSITIVE.
         ZAP   QPREC,=P'1'    TOP OF DATASET
***********************************************************************
*                                                                     *
*   REPOSITION TO REQUESTED RECORD NUMBER                             *
*                                                                     *
***********************************************************************
REPOS    MVC   QDHLINE,QCHLINE MOVE IN HEADING LINE
         MVC   HREC,EDIT      PREPARE FOR EDIT
         ED    HREC,QPREC     EDIT RECORD NUMBER
         CP    QPREC,QCHREC   IS THE REQ NO > HIGHEST READ?
         BNL   HI             YES. GO FROM HI.
         CP    QPREC,QCCREC   IS THE REQ NO > CURRENT REC?
         BH    UP             YES. GO FROM CURRENT.
         CP    QPREC,=P'1'    IS REQ FOR TOP OF DATASET?
         BH    DOWN           NO. GO DOWN FROM CURRENT.
TOP      L     R2,QCSTART     START AT TOP
RESUME   L     R4,0(R2)       LOAD DISK ADDR
         L     R5,QCBLKA      ADDR OF BLOCK IOAREA
         MVC   QCCREC,4(R2)   RESET CURRENT REC NO
         B     FIRST          RESUME PROCESSING
HI       L     R2,QCHPTR      START AT HIGHEST SO FAR
         B     DOWNLOOP       FIND CORRECT BLOCK
UP       L     R2,QCCPTR      CURRENT TABLE PTR
UPLOOP   CP    QPREC,12(4,R2) IS THE NEXT ENTRY > REQ NO?
         BNH   RESUME         YES. PROCESS IT.
         LA    R2,8(R2)       TRY NEXT ENTRY
         B     UPLOOP         AGAIN
DOWN     L     R2,QCCPTR      CURRENT TABLE PTR
DOWNLOOP CP    QPREC,4(4,R2)  IS THE ENTRY < REQ NO?
         BH    RESUME         YES. PROCESS IT.
         SH    R2,=H'8'       TRY PREVIOUS ENTRY
         B     DOWNLOOP       AGAIN
***********************************************************************
*                                                                     *
*   FIND MATCHING RECORD ROUTINE                                      *
*                                                                     *
***********************************************************************
FIND     LH    R3,QPLNG       LENGTH-1 OF COMPARE
         LR    R14,R6         LENGTH OF RECORD
         SR    R14,R3         NUMBER OF COMPARES
         BNP   SKIPREC        RECORD IS TOO SMALL. SKIP IT.
         LR    R15,R4         FIRST BYTE OF RECORD
         CLC   QOFFE,=H'0'    END RANGE FOR FIND SPECIFIED ?
         BE    FLOOP          NO. BYPASS RANGE FOR FIND
         AH    R15,QOFFS      YES. START ADDR FOR FIND
         LH    R14,QOFFE      END ADDR FOR FIND
         SH    R14,QOFFS      VALID RANGE ?
         BP    FLOOP          YES. CONTINUE PROCESSING
         QTILT ' *** ERROR IN COLUMN SPECIFICATION ***'
FLOOP    EX    R3,CLC         DOES THE FIND DATA MATCH THE RECORD?
         BE    MATCH          YES. DISCONTINUE SEARCH.
         LA    R15,1(R15)     INCREMENT TO NEXT BYTE
         BCT   R14,FLOOP      TRY NEXT BYTE
         B     SKIPREC        SKIP THE RECORD. NO MATCH.
MATCH    CLI   QSUBNAME+1,C'A' IS THE REQUEST FOR A FINDALL?
         BE    FALL           YES. DO NOT DISABLE SEARCH.
         MVI   QCODE,0        END THE SEARCH
         ZAP   QPREC,QCCREC   UPDATE THE REPOSITION NUMBER
FALL     MVC   HREC,EDIT      PREPARE FOR EDIT
         ED    HREC,QCCREC    EDIT RECORD NUMBER
         B     FINDOFF        CONTINUE
CLC      CLC   QPFIND(1),3(R15) COMPARE PARM TO RECORD
***********************************************************************
*                                                                     *
*   FIND THE RECORD WHICH IS GREATER THAN OR EQUAL TO TIME            *
*                                                                     *
***********************************************************************
FINDTIME CLI   10(R4),C'.'    DOES THIS RECORD HAVE TIME?
         BNE   SKIPREC        NO. SKIP IT.
         CLC   QPARM1,8(R4)   IS THIS THE TIME WE WANT?
         BH    SKIPREC        NO. SKIP IT.
         B     MATCH          END THE SEARCH
***********************************************************************
*                                                                     *
*   READ A BLOCK FROM HASPACE                                         *
*                                                                     *
***********************************************************************
READ     ST    R4,QCTRAK      STORE DISK ADDR
         LR    R1,R5          IOAREA ADDRESS
         L     R15,=V(READSPC) ADDR OF ROUTINE TO READ HASPACE
         BALR  R14,R15        GO TO IT
         BR    R8             RETURN TO CALLER
***********************************************************************
*                                                                     *
*   MISCELLANY                                                        *
*                                                                     *
***********************************************************************
         LTORG
ENDLINE  DC    C', END OF DATA. LAST REC #'
EDIT     DC    X'4020202020202021'
         DC    CL45' '
SYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023
LISTDS   CSECT ,                                                  UF023
JCT      EQU   0
BUFSTART EQU   0
BUFDSECT EQU   0
         $TAB
         $JCT
         $PDDB                                                      SP3
         $IOT
         QCOMMON
         ORG   QDHLINE
         DS    C'JOB XXXXXXXX, DSID XXXXXXXX, REC #'
HREC     DS    CL8
HEND     DS    C', END OF DATA. LAST REC #'
HREND    DS    CL8
WORK     DSECT
         DS    CL72
SWITCH   DS    C
SYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023
         END
