***********************************************************************
*                                                                     *
*                                                                     *
*                               STATUS                                *
*                                                                     *
*                                                                     *
* ABSTRACT: DISPLAY STATUS OF JES2 JOBS, LOGONS, & STARTED TASKS.     *
*                                                                     *
*                                                                     *
* FUNCTION: STATUS IS A COMMAND PROCESSOR.                            *
*                                                                     *
*           STATUS BUILDS A PARAMETER LIST TO BE PASSED TO STATJES2,  *
*           EXECUTES STATJES2 UNDER JES2'S ADDRESS SPACE VIA SVC      *
*           235, AND OUTPUTS THE INFORMATION RETURNED BY STATJES2.    *
*                                                                     *
*           IF NO OPERANDS WERE SPECIFIED ON THE COMMAND INVOCATION   *
*           OF STATUS, THE USER'S ID IS PASSED TO STATJES2. OTHER-    *
*           WISE, STATUS PASSES THE LIST OF JOB NAMES SPECIFIED BY    *
*           THE USER TO STATJES2.                                     *
*                                                                     *
*           ALONG WITH A JOB NAME LIST, STATUS PASSES STATJES2 A      *
*           WORK AREA OF 512 BYTES AND A RETURN AREA OF 8K. STATUS    *
*           GETS STATJES2 EXECUTED UNDER JES2'S ADDRESS SPACE VIA     *
*           THE HELP OF SVC 235.                                      *
*                                                                     *
*           BEFORE CALLING STATJES2 VIA SVC 235, STATUS DEFERS ATTEN- *
*           TION INTERRUPTIONS AND SINGLE STREAMS EXECUTION OF        *
*           STATJES2 VIA AN EXCLUSIVE ENQ.                            *
*                                                                     *
*           DEPENDING UPON THE RETURN CODE FROM SVC 235 AND STATJES2, *
*           STATUS EITHER ABENDS (STATUS ERRORS), DISPLAYS A MESSAGE  *
*           SAYING JES2 IS NOT UP, DISPLAYS A MESSAGE SAYING NO JOBS  *
*           WERE FOUND, OR DISPLAYS THE JOBS RETURNED BY STATJES2.    *
*                                                                     *
*           THE JES2 JOB QUEUE ELEMENTS (JQES) RETURNED BY STATJES2   *
*           ARE USED TO DISPLAY INFORMATION ON JOBS ON INPUT, WAIT-   *
*           ING FOR EXECUTION, OR EXECUTING.                          *
*                                                                     *
*           THE JES2 JOB OUTPUT ELEMENTS (JOES) ARE USED TO DISPLAY   *
*           JOBS WAITING FOR OR ON OUTPUT.                            *
*                                                                     *
*           MOST OF THE CODE INVOLVED IN THE OUTPUTTING OF THE INFOR- *
*           MATION FROM THE JQES AND JOES IS COPIED FROM JES2'S CMD   *
*           HANDLING ROUTINE - HASPCOMM.                              *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*                                                                     *
* INPUT: R1 -> COMMAND PROCESSOR PARAMETER LIST (CPPL)                *
*                                                                     *
*                                                                     *
* EXTERNAL REFERENCE: STATJES2                                        *
*                                                                     *
*                                                                     *
* MACROS USED: SAVE                                                   *
*              ABEND                                                  *
*              RETURN                                                 *
*              GETMAIN                                                *
*              CALLTSSR                                               *
*              STAX                                                   *
*              ENQ                                                    *
*              DEQ                                                    *
*              TPUT                                                   *
*              IKJRLSA                                                *
*              FREEMAIN                                               *
*              IKJPARM                                                *
*              IKJIDENT                                               *
*              IKJENDP                                                *
*              $JQE                                                   *
*              $JOE                                                   *
*              IKJCPPL                                                *
*              IKJECT                                                 *
*              IKJPSCB                                                *
*              CVT                                                    *
*              REGS (USER)                                            *
*              IKJPPL (USER)                                          *
*                                                                     *
*                                                                     *
* ATTRIBUTES: REENTRANT,RESIDENT                                      *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
STATUS   CSECT                DISPLAY STATUS OF JES2 JOBS
STATJES  DS    0H                                             RGR
SJ       DS    0H                                             RGR
         ENTRY STATJES        DISPLAY STATUS OF JES2 JOBS     RGR
         ENTRY SJ             DISPLAY STATUS OF JES2 JOBS     RGR
         SAVE  (14,12),,STATUS_&SYSDATE_&SYSTIME SAVE CALLER'S REGS
         LR    RBASE,R15      A(STATUS)
         USING STATUS,RBASE   ADDRESSABILITY
         LR    RCPPL,R1       A(CPPL)
         USING CPPL,RCPPL     ADDRESSABILITY
         BAL   RLINK,STINIT   STATUS INITIALIZATION
         BAL   RLINK,JOBUILD  BUILD THE JOB NAME PARAMETER LIST
         BAL   RLINK,CALLJES2 CALL STATJES2 THRU SVC 235
         BAL   RLINK,CHKRCODE TRANSFER CNTL BASED ON RET CODES
         B     OUTINFO        OUTPUT THE INFO ON RETURNED JOBS
         B     NOJOBS         NO JOBS FOUND
         B     NOJES2         JES2 NOT UP
         ABEND 12             STATJES2 ABENDED
NOJES2   BAL   RLINK,OUTNOJES OUTPUT JES2 NOT UP
         B     DONE           RETURN
NOJOBS   BAL   RLINK,OUTNOJOB OUTPUT NO JOBS FOUND
         B     DONE           RETURN
OUTINFO  BAL   RLINK,OUTJQES  OUTPUT JOBS ON INPUT, AWAITING
*                             EXECUTION, OR EXECUTING
         BAL   RLINK,OUTJOES  OUTPUT JOBS AWAITING OR ON OUTPUT
         BAL   RLINK,OUTFILL  OUTPUT FILLED RETURN AREA MSG IF NEEDED
DONE     BAL   RLINK,STDONE   CLOSE UP SHOP
         RETURN (14,12),RC=0  RETURN TO OUR CALLER
         EJECT
STINIT   LA    R0,LWRKAREA    LENGTH OF OUR WORK SPACE
         GETMAIN R,LV=(0)     GET THE WORK AREA
         ST    R1,8(R13)      LINK SAVE AREAS
         ST    R13,4(R1)      SAVE THE CALLER'S R13
         LR    R13,R1         A(OUR WORK SPACE)
         USING WORKAREA,R13   ADDRESSABILITY
         MVI   STATS,0        INITIALIZE THE STATUS BITS
         LH    R14,RETLEN     LENGTH OF THE RETURN INFO AREA
         GETMAIN R,LV=(R14)   GET SPACE FOR THE RETURN AREA
         ST    R14,0(R1)      SAVE ITS LENGTH IN THE 1ST WORD
         ST    R1,ATACHPL+16  PASS THE RETURN INFO AREA TO ATACHSRB
         L     RECT,CPPLECT   A(ECT)
         USING ECT,RECT       ADDRESSABILITY
         BR    RLINK          RETURN TO OUR CALLER
         EJECT
JOBUILD  TM    ECTSWS,ECTNOPD OPERANDS PRESENT?
         BZ    PARSE          YES => PARSE THEM
         L     R1,CPPLPSCB    A(PSCB)
         USING PSCB,R1        ADDRESSABILITY
         MVC   ONEJOBNM(7),PSCBUSER PUT IN THE USER'S ID
         MVI   ONEJOBNM+7,C' ' BLANK OUT THE LAST CHAR
         SR    R15,R15        FOR THE INSERT CHARACTER
         IC    R15,PSCBUSRL   AL1(LENGTH OF THE USER'S ID)
         DROP  R1             PSCB NO LONGER NEEDED
         STH   R15,ONEJBNML   SET THE USER'S ID LENGTH
         LA    R1,14          LENGTH OF THE ENTIRE PARM
         ST    R1,ONEJOBLN    ENTIRE PARM COMPLETE
         LA    R1,ONEJOBLN    PASS THE 1 JOB NAME PARM
         ST    R1,ATACHPL+8   TO STATJES2
         BR    RLINK          RETURN TO OUR CALLER
PARSE    MVC   PPLCBUF,CPPLCBUF PASS IKJPARS THE CBUF,
         MVC   PPLUPT,CPPLUPT UPT,
         MVC   PPLECT,CPPLECT AND ECT
         MVI   ANECB,0        ZERO OUR ECB
         LA    R1,ANECB       A(OUR ECB)
         ST    R1,PPLECB      PASS IT TO IKJPARS
         L     R1,STPCLAD     V(OUR PCL)
         ST    R1,PPLPCL      PASS IT TO IKJPARS
         LA    R1,ANSPLACE    A(WORD TO RECEIVE PDL ADDR)
         ST    R1,PPLANS      PASS IT AS WELL
         LA    R1,PPL         A(IKJPAR'S PARAMETER LIST)
         CALLTSSR EP=IKJPARS     PARSE THE COMMAND OPERANDS
         LTR   R15,R15        PARSED OK?
         BZ    GETJOBS        YES => BUILD THE JOB NAMES PARM
         ABEND 4              LET OUR CALLER KNOW WE SCREWED UP
         EJECT
GETJOBS  L     R1,ANSPLACE    A(PDL)
         USING IKJPARMD,R1    ADDRESSABILITY
         LA    R1,JOBNAME     A(1ST JOB NAME)
         DROP  R1             TEMPORARY
         LA    R14,1          AT LEAST 1 JOB NAME IS THERE
JOBLOOK  CLI   8(R1),X'FF'    END OF OPERAND JOB LIST?
         BE    GETSPACE       YES => GET SPACE FOR THE PARM LIST
         LA    R14,1(R14)     ONE MORE JOB SPECIFIED
         L     R1,8(R1)       A(NEXT JOB PDE)
         B     JOBLOOK        CHECK THIS JOB
GETSPACE MH    R14,TEN        10 BYTES FOR EACH JOBNAME
         LA    R14,4(R14)     ACCOUNT FOR THE DESCRIPTOR WORD
         GETMAIN R,LV=(R14)   GET THE SPACE
         ST    R1,ATACHPL+8   PASS IT TO STATJES2
         ST    R14,0(R1)      SAVE THE FIELD'S LENGTH IN THE 1ST WORD
         LA    R14,4(R1)      A(SPOT FOR THE 1ST JOBNAME)
         L     RWORK,ANSPLACE A(PDL)
         USING IKJPARMD,RWORK ADDRESSABILITY
         LA    RWORK,JOBNAME  A(1ST JOBNAME PDE)
         DROP  RWORK          TEMPORARY
JOBCHK   L     R15,0(RWORK)   A(JOBNAME)
         LH    R1,4(RWORK)    H'JOBNAME LENGTH'
         STH   R1,0(R14)      PASS THE JOB NAME LENGTH
         BCTR  R1,R0          FOR THE MOVE
         EX    R1,MOVEJOB     PUT THE JOB NAME IN THE PARM LIST
         CLI   8(RWORK),X'FF' END OF JOB NAME OPERANDS?
         BER   RLINK          YES => RETURN TO OUR CALLER
         LA    R14,10(R14)    A(NEXT SPOT FOR A JOB NAME)
         L     RWORK,8(RWORK) A(NEXT JOB NAME PDE)
         B     JOBCHK         PUT THIS JOB NAME IN THE LIST
         SPACE 5
MOVEJOB  MVC   2(0,R14),0(R15) TO BE EXECUTED
TEN      DC    H'10'          NUMBER OF BYTES/JOBNAME IN PARM
STPCLAD  DC    V(STPCL)       PARSING SPECIFICATIONS
         EJECT
CALLJES2 LA    R15,JES2       A(CL8'JES2')
         L     R0,STATJSAD    V(STATJES2)
         STM   R15,R0,ATACHPL SOME OF ATACHSRB'S PARMS
         LA    R0,WORKLEN     A(H'WORK AREA LENGTH')
         ST    R0,ATACHPL+12  COMPLETE THE ATACHSRB PARM LIST
         STAX  DEFER=YES      DEFER ATTENTION INTERRUPTS
         MVC   ENQLIST(ENQSETL),ENQSETUP SET UP THE ENQ PARM LIST
         ENQ   MF=(E,ENQLIST) ONE USER AT A TIME THRU HERE
         LA    R1,ATACHPL     A(ATACHSRB'S PARAMETER LIST)
         SVC   235            INVOKE THE CROSS MEMORY INTERFACE
         STM   R15,R0,ATACHPL SAVE ATACHSRB'S RETURN CODES
         MVC   DEQLIST(DEQSETL),DEQSETUP SET UP THE DEQ PARM LIST
         DEQ   MF=(E,DEQLIST) DROP THE SINGLE STREAM OF USERS
         STAX  DEFER=NO       ALLOW ATTENTION INTERRUPTS
         BR    RLINK          RETURN TO OUR CALLER
         SPACE 5
JES2     DC    CL8'JES2'      WHERE OUR JOB QUEUES ARE
STATJSAD DC    V(STATJES2)    GETS JOB STATUS FROM JES2
WORKLEN  DC    H'512'         LENGTH OF STATJES2'S WORK AREA
ENQSETUP ENQ   (HACSTATS,ONEATIME,E,,SYSTEM),MF=L ENQ SKELETON
ENQSETL  EQU   *-ENQSETUP      LENGTH OF THE ENQ PARM LIST
DEQSETUP DEQ   (HACSTATS,ONEATIME,,SYSTEM),MF=L DEQ SKELETON
DEQSETL  EQU   *-DEQSETUP     LENGTH OF THE DEQ PARM LIST
HACSTATS DC    C'HACSTATS'    ENQ MAJOR NAME
ONEATIME DC    C'ONEATATIME'  ENQ MINOR NAME
         EJECT
CHKRCODE L     RET,ATACHPL+16 A(RETURN AREA)
         L     R15,ATACHPL    SVC 235'S RETURN CODE
         B     CHKRCS(R15)    TRANSFER CNTL BASED ON THE RETURN CODE
CHKRCS   B     CHKCOUNT       SEE IF ANY JQES OR JOES WERE RET
         B     8(RLINK)       JES2 ADDRESS SPACE NOT FOUND
         B     JES2RC         STATJES2 RETURNED A RC > 0
         B     ABEND8         SVC 235 DIDN'T LIKE THE CODE PASSED
         B     12(RLINK)      STATJES2 ABENDED
ABEND8   ABEND 8              WE'VE SCREWED UP SOMEHOW
JES2RC   L     R0,ATACHPL+4   STATJES2'S RETURN CODE
         CH    R0,FOUR        STATJES2 UNABLE TO FIND JES2'S HCT?
         BE    8(RLINK)       YES => TELL OUR CALLER
         OI    STATS,FILLEDRT NO => THE RETURN AREA IS FULL
CHKCOUNT L     R1,4(RET)      H'# OF JQES',H'# OF JOES'
         LTR   R1,R1          ANYTHING RETURNED?
         BNZR  RLINK          YES => TELL OUR CALLER
         B     4(RLINK)       NO => TELL OUR CALLER
         SPACE 5
FOUR     DC    H'4'           RC FROM CALLRSB => JES2 NOT UP
         EJECT
OUTNOJES LA    R1,JESNOTMS    A(C'JES2 NOT UP')
         LA    R0,L'JESNOTMS  LENGTH OF THE MESSAGE
         TPUT  (1),(0),R      TELL OUR CALLER
         BR    RLINK          RETURN TO OUR CALLER
         SPACE 5
JESNOTMS DC    C'JES2 NOT UP'
         EJECT
OUTNOJOB LA    R1,NOJOBMSG    A(C'NO JOBS FOUND')
         LA    R0,L'NOJOBMSG LENGTH OF THE MESSAGE
         TPUT  (1),(0),R      TELL OUR CALLER
         BR    RLINK          RETURN TO OUR CALLER
         SPACE 5
NOJOBMSG DC    C'NO JOBS FOUND'
         EJECT
OUTJQES  ST    RLINK,JQESHOLD SAVE THE RETURN ADDRESS
         LH    R#JQES,4(RET)  H'# OF RETURNED JQES'
         LA    RJQE,8(RET)    A(1ST RETURNED JQE)
         USING JQE,RJQE       ADDRESSABILITY
CHECKJQE CLI   JQETYPE,$INPUT JOB ON INPUT?
         BNE   CHKEXEC        NO => SEE IF IT'S ON AN EXEC Q
         BAL   RLINK,INITMSG  INITIALIZE THE OUTPUT MESSAGE
         LA    RDEVID,JQEDEVID A(INPUT DEVICE DESCRIPTOR)
         BAL   RLINK,SETDEVIC SET UP THE INPUT DEVICE
         B     MSGNEXT        OUTPUT THE MSG & DO THE NEXT JQE
CHKEXEC  TM    JQETYPE,$XEQ   JOB ON AN EXECUTION Q?
         BO    ITISEXEC       YES => OUTPUT THE INFO
         BAL   RLINK,JQEHOLDS PROCESS ANY HELD DATA SETS
         B     NEXTJQE        GET ANOTHER JQE
ITISEXEC BAL   RLINK,INITMSG  INITIALIZE THE OUTPUT MESSAGE
         CLI   JQETYPE,$XEQ   JOB ON THE CONVERSION Q?
         BE    WAITEXEC       YES => IT'S AWAITING EXECUTION
         TM    JQEFLAGS,QUEBUSY JOB EXECUTING?
         BZ    WAITEXEC       NO => AWAITING EXECUTION
         BAL   RLINK,SETEXEC  SET UP THE EXECUTING MESSAGE
         B     MSGNEXT        OUTPUT THE MSG & DO THE NEXT JQE
WAITEXEC BAL   RLINK,SETWXEQ  SET UP THE AWAITING EXEC MSG
MSGNEXT  BAL   RLINK,OUTMSG   OUTPUT THE MESSAGE
NEXTJQE  LA    RJQE,JQELNGTH(RJQE) A(NEXT JQE)
         BCT   R#JQES,CHECKJQE CHECKED ALL RETURNED JQES?
         L     RLINK,JQESHOLD YES => RETURN
         BR    RLINK          TO OUR CALLER
         EJECT
OUTJOES  LH    R#JOES,6(RET)  H'# OF RETURNED JOES'
         LTR   R#JOES,R#JOES  ANY JOES RETURNED?
         BZR   RLINK          NO => NOTHING TO DO
         ST    RLINK,JOESHOLD SAVE THE RETURN ADDRESS
         LH    R1,4(RET)      H'# OF RETURNED JQES'
         MH    R1,JQELEN      LENGTH OF THE RETURNED JQES
         LA    RJOE,8(RET,R1) A(1ST RETURNED JOE)
         USING JOEDSECT,RJOE  ADDRESSABILITY
CHECKJOE LH    RJQE,JOEJQE+2  H'OFFSET TO ASSOC JQE'                SP3
         ALR   RJQE,RET       A(ASSOCIATED JQE)
         BAL   RLINK,INITMSG  INITIALIZE THE OUTPUT MSG
         TM    JOEFLAG,$JOEBUSY ACTIVE OUTPUT?
         BZ    WAITOUT        NO => AWAITING OUTPUT
         LA    RDEVID,JOEDEVID    A(OUTPUT DEVICE DESCRIPTOR)
         BAL   RLINK,SETDEVIC SET THE OUTPUT DEVICE
         B     MSGNXTJO       OUTPUT THE MSG & DO THE NEXT JOE
WAITOUT  MVC   MSGSTYPE(L'AWAITOUT),AWAITOUT AWAITING OUTPUT
         MVC   MSGWOUTC,JOEPDBCL OUTPUT CLASS                       SP3
         CLI   JOEREMOT+1,0   OUTPUT LOCAL?
         BE    LOCALRTE       YES => SET THE MSG
         CLI   JOERNODE+1,0   OUPUT TO USER QUEUE?                  SP3
         BE    USERRTE        YES => SET THE MSG                    SP3
         MVC   MSGOUTLC(L'RMT),RMT OUTPUT GOING TO A REMOTE
         B     RMTCONT                                              SP3
USERRTE  DS    0H                                                   SP3
         MVC   MSGOUTLC(L'USR),USR OUTPUT GOING TO A USER QUEUE     SP3
RMTCONT  DS    0H                                                   SP3
         LA    R15,MSGOUTLC+L'RMT A(WHERE RMT # GOES)
         SR    R1,R1          FOR THE INSERT CHARACTER
         IC    R1,JOEREMOT+1  REMOTE #
         BAL   RLINK,FITINUM  PUT THE REMOTE # IN THE MSG
         MVI   0(R15),C','    PUT IN A COMMA
         LA    R15,2(R15)     A(SPOT FOR THE OUTPUT'S POSITION)
         B     SETJOPOS       SET THE OUTPUT'S POSITION
LOCALRTE MVC   MSGOUTLC(L'LOCAL),LOCAL PUT IN THE LOCAL
         LA    R15,MSGOUTLC+L'LOCAL+1 A(SPOT FOR THE OUTPUT'S POSITON)
SETJOPOS LH    R1,JOEPOSTN    H'OUTPUT'S POSITION'
         BAL   RLINK,FITINUM  PUT IT IN THE MSG
         MVC   0(L'OF,R15),OF PUT IN ' OF '
         LA    R15,L'OF(R15)  A(SPOT FOR THE OUTPUT Q TOTAL)
         LH    R1,JOETOTAL    H'OUTPUT Q TOTAL'
         BAL   RLINK,FITINUM  PUT IT IN THE MSG
MSGNXTJO BAL   RLINK,OUTMSG   OUTPUT THE MESSAGE
         LA    RJOE,JOESIZE(RJOE) A(NEXT JOE)
         BCT   R#JOES,CHECKJOE OUTPUT ALL RETURNED JOES?
         L     RLINK,JOESHOLD YES => RETURN
         BR    RLINK          TO OUR CALLER
         SPACE 5
JQELEN   DC    AL2(JQELNGTH)  LENGTH OF A JQE
OF       DC    C' OF '
AWAITOUT DC    C'AWAITING OUTPUT CLASS ?,'
RMT      DC    C'RMT'
USR      DC    C'USR'
LOCAL    DC    C'LOCAL,'
         EJECT
OUTFILL  TM    STATS,FILLEDRT RETURN AREA FULL?
         BZR   RLINK          NO => NO NEED FOR THIS MSG
         LA    R1,FILLDMSG    A(C'INSUFFICIENT SP TO COMPLETE ST REQ')
         LA    R0,L'FILLDMSG  LENGTH OF THE MESSAGE
         TPUT  (1),(0),R      TELL OUR CALLER
         BR    RLINK          RETURN TO OUR CALLER
         SPACE 5
FILLDMSG DC    C'INSUFFICIENT STORAGE TO COMPLETE YOUR STATUS REQUEST'
         EJECT
STDONE   TM    ECTSWS,ECTNOPD OPERANDS ON THE COMMAND?
         BO    FREEWORK       NO => JUST FREE OUR WORK AREA
         IKJRLSA ANSPLACE     FREE THE PDL
         L     R1,ATACHPL+8   A(JOB NAME LIST)
         L     R0,0(R1)       LENGTH OF THE JOB NAME LIST
         FREEMAIN R,LV=(0),A=(1) FREE THE JOB NAME LIST
FREEWORK LH    R0,RETLEN      LENGTH OF THE RETURN INFO AREA
         FREEMAIN R,LV=(0),A=(RET) FREE THE RETURN INFO AREA
         LR    R1,R13         A(OUR WORK AREA)
         L     R13,4(R13)     RESTORE THE CALLER'S R13
         LA    R0,LWRKAREA    LENGTH OF OUR WORK AREA
         FREEMAIN R,LV=(0),A=(1) FREE OUR WORK AREA
         BR    RLINK          RETURN TO OUR CALLER
         SPACE 5
RETLEN   DC    AL2(2*4096)    LENGTH OF THE RETURN AREA
         EJECT
INITMSG  MVI   MESSAGE,C' '   BLANK OUT THE
         MVC   MESSAGE+1(LMESSAGE-1),MESSAGE MESSAGE BUFFER
         MVC   MSGJNME,JQEJNAME PUT IN THE JOB NAME
         CLI   JQEJCLAS,CATSTCCL IS IT A STARTED CLASS?             SP3
         BNE   TRYTSU                                               SP3
         MVC   MSGJBTYP,STC   INDICATE IT'S A STC                   SP3
         B     CONVERT#       PUT IN THE JOB NUMBER                 SP3
TRYTSU   CLI   JQEJCLAS,CATTSUCL IS IT A TIME SHARING USER?         SP3
         BNE   TRYJOB                                               SP3
         MVC   MSGJBTYP,TSU   INDICATE IT'S A TSU                   SP3
         B     CONVERT#       PUT IN THE JOB NUMBER                 SP3
TRYJOB   MVC   MSGJBTYP,JOB   INDICATE IT'S A JOB                   SP3
         B     CONVERT#       PUT IN THE JOB NUMBER                 SP3
CONVERT# LH    R1,JQEJOBNO    GET THE JOB NUMBER                    SP3
         CVD   R1,DOUBLEWD    CONVERT TO PACKED DECIMAL             SP3
         UNPK  MSGJOB#,DOUBLEWD+5(3) CONVERT TO ZONED DECIMAL
         OI    MSGJOB#+L'MSGJOB#-1,C'0' CONVERT TO EBCDIC
         TM    JQEFLAGS,QUEHOLDA+QUEHOLD1+QUEHOLD2+QUEPURGE+QUEOPCAN
         BZR   RLINK          NO SPECIAL FLAGS
         MVC   MSGSPCST(L'HOLD),HOLD ASSUME THE JOB'S ON HOLD
         TM    JQEFLAGS,QUEHOLDA+QUEHOLD1 JOB ON HOLD?
         BNZR  RLINK          YES => RETURN TO OUR CALLER
         MVC   MSGSPCST(L'PURGE),PURGE ASSUME THE JOB'S TO BE PURGED
         TM    JQEFLAGS,QUEPURGE JOB TO BE PURGED?
         BOR   RLINK          YES => RETURN TO OUR CALLER
         MVC   MSGSPCST(L'CANCEL),CANCEL ASSUME JOB CANCELLED
         TM    JQEFLAGS,QUEOPCAN JOB CANCELLED?
         BOR   RLINK          YES => RETURN TO OUR CALLER
         MVC   MSGSPCST(L'DUPLICAT),DUPLICAT MUST BE DUPLICATE JOB
         BR    RLINK          RETURN TO OUR CALLER
         SPACE 2
CATSTCCL EQU   X'D0'          STARTED TASK CLASS                    SP3
CATTSUCL EQU   X'E0'          TIME SHARING USER CLASS               SP3
JOB      DC    C'JOB'
TSU      DC    C'TSU'
STC      DC    C'STC'
HOLD     DC    C'HOLD'
PURGE    DC    C'PURGE'
CANCEL   DC    C'CANCEL'
DUPLICAT DC    C'DUPLICATE'
         EJECT
SETDEVIC MVC   MSGSTYPE(L'ON),ON PUT IN THE 'ON'
         TM    0(RDEVID),HIGHBIT REMOTE DEVICE?
         BO    RMTDEV         YES => OUTPUT IT
         SR    R1,R1          FOR THE INSERT CHARACTER
         IC    R1,0(RDEVID)     DEVICE TYPE
         SRL   R1,4           RIGHT JUSTIFIED
         MH    R1,DEVTYPEL    TYPE * LENGTH OF A DEVICE ENTRY
         LA    R1,DEVTABLE(R1) A(DEVICE TYPE)
         MVC   MSGDEV,1(R1)   PUT IN THE DEVICE TYPE
         CLI   0(RDEVID),0      INTERNAL READER?
         BER   RLINK          YES => GIVE THE USER THE INFO
         SR    R15,R15        FOR THE INSERT CHARACTER
         ICM   R15,B'0011',1(RDEVID)    DEVICE NUMBER               SP3
         CVD   R15,DOUBLEWD   IN PACKED DECIMAL
         IC    R15,0(R1)      OFFSET TO WHERE THE DEV # GOES
         LA    R15,MSGDEV(R15) A(WHERE THE DEV # GOES)
         MVC   1(L'DIGITS3,R15),DIGITS3 SET UP THE EDIT OF 3 DIGITS
         EDMK  0(L'DIGITS3+1,R15),DOUBLEWD+6 DEV # IN EBCDIC
         MVC   0(L'DIGITS3+1,R15),0(R1) ADJUST FOR BLANKS
         BR    RLINK          GIVE THE INFO TO THE USER
RMTDEV   SR    R0,R0          FOR THE INSERT CHARACTER
         ICM   R0,B'0011',1(RDEVID)     REMOTE NUMBER               SP3
         CVD   R0,DOUBLEWD    IN PACKED DECIMAL
         MVI   MSGDEV,C'R'    INDICATE A REMOTE DEVICE
         MVC   MSGDEV+2(L'THREEPT),THREEPT SET UP THE EDIT MASK
         EDMK  MSGDEV+1(L'THREEPT),DOUBLEWD+6 CONVERT TO EBCDIC
         MVC   MSGDEV+1(L'THREEPT),0(R1) ADJUST FOR BLANKS
         LA    R1,MSGDEV+1    A(SPOT JUST BEFORE POSSIBLE SEP)
FINDPT   LA    R1,1(R1)       A(NEXT BYTE)
         CLI   0(R1),C'.'     FOUND THE SEPARATOR?
         BNE   FINDPT         NO => KEEP LOOKING
         SR    R15,R15        FOR THE INSERT CHARACTER
         IC    R15,0(RDEVID)    DEVICE TYPE INDICATOR
         SRL   R15,3          RIGHT JUSTIFIED
         LA    R15,RMTDEVS-HIGHBIT/8(R15) A(DEVICE TYPE)
         MVC   1(2,R1),0(R15) PUT IN THE DEVICE TYPE
         MVC   3(1,R1),0(RDEVID) PUT IN THE DEVICE NUMBER
         OI    3(R1),C'0'     MAKE THE DEVICE NUMBER PRINTABLE
         BR    RLINK          RETURN TO OUR CALLER
         SPACE 5
ON       DC    C'ON'
DIGITS3  DC    X'202020'
THREEPT  DC    X'2020204B'
         DS    0H
DEVTABLE DC    AL1(0),CL8'INTRDR',AL1(6),CL8'READER'
         DC    AL1(7),CL8'PRINTER',AL1(5),CL8'PUNCH'
DEVTYPEL DC    AL2((*-DEVTABLE)/4)
RMTDEVS  DC    C'**',C'RD',C'PR',C'PU'
         EJECT
JQEHOLDS CLI   JQETYPE,$HARDCPY JOB ON THE OUTPUT QUEUE?
         BNER  RLINK          NO => RETURN TO CALLER
         LH    R1,JQEHLDCT    BL12'HELD DS COUNT',BL4'HELD DS LOCK'
         SRL   R1,4           HELD DS COUNT
         LTR   R1,R1          ANY DS HELD BY THIS JOB?
         BZR   RLINK          NO => RETURN TO OUR CALLER
         ST    RLINK,HOLDSLNK SAVE OUR RETURN ADDRESS
         BAL   RLINK,INITMSG  INITIALIZE THE OUTPUT MESSAGE
         MVC   MSGSTYPE(L'WATOUTOF),WATOUTOF C'AWAITING OUTPUT OF'
         LA    R15,MSGSTYPE+L'WATOUTOF+1 A(SPOT FOR THE HELD DS COUNT)
         LH    R1,JQEHLDCT    BL12'HELD DS COUNT',BL4'HELD DS LOCK'
         SRL   R1,4           HELD DS COUNT
         BAL   RLINK,FITINUM  PUT THE HELD DS COUNT IN THE MSG
         MVC   1(L'HLDSMSG,R15),HLDSMSG C'HELD SYSOUT(S)'
         BAL   RLINK,OUTMSG   OUTPUT THE MESSAGE
         L     RLINK,HOLDSLNK RESTORE OUR RETURN ADDRESS
         BR    RLINK          RETURN TO OUR CALLER
         SPACE 5
WATOUTOF DC    C'AWAITING OUTPUT OF'
HLDSMSG  DC    C'HELD SYSOUT(S)'
         EJECT
SETEXEC  CLI   MSGJBTYP,C'J'  JOB?
         BE    EXECJOB        YES => SET THE MSG
         CLI   MSGJBTYP,C'T'  TSUSER?
         BE    LOGDUSER       YES => SET THE MSG
         MVC   MSGSTYPE(L'ACTIVE),ACTIVE MUST BE A STARTED TASK
         BR    RLINK          RETURN TO OUR CALLER
LOGDUSER MVC   MSGSTYPE(L'LOGGEDON),LOGGEDON TSUSER
         BR    RLINK          RETURN TO OUR CALLER
EXECJOB  MVC   MSGSTYPE(L'EXECUTNG),EXECUTNG EXECUTING JOB
         MVC   MSGQTYPE,JQETYPE SET THE JOB CLASS
         OI    MSGQTYPE,HIGHBIT MAKE THE JOB CLASS PRINTABLE
         BR    RLINK          RETURN TO OUR CALLER
         SPACE 5
ACTIVE   DC    C'ACTIVE'      STARTED TASK
LOGGEDON DC    C'LOGGED ON'   TSO USER
EXECUTNG DC    C'EXECUTING CLASS' JOB
         EJECT
SETWXEQ  ST    RLINK,WXEQHOLD SAVE THE RETURN ADDRESS
         MVC   MSGSTYPE(L'AWAITXEQ),AWAITXEQ AWAITING EXECUTION
         MVC   MSGWXCLS,JQETYPE SET THE JOB CLASS
         OI    MSGWXCLS,HIGHBIT MAKE THE JOB CLASS PRINTABLE
         LA    R15,MSGSTYPE+L'AWAITXEQ+1 A(SPOT FOR JOB'S POSITION)
         LH    R1,JQEPOSTN    H'JOB'S POSITION'
         BAL   RLINK,FITINUM  PUT THE POS IN THE MSG
         MVC   0(L'OF,R15),OF PUT IN ' OF '
         LA    R15,L'OF(R15)  A(SPOT FOR JOB Q TOTAL)
         LH    R1,JQETOTAL    H'JOB Q'S TOTAL'
         BAL   RLINK,FITINUM  PUT THE Q TOTAL IN THE MSG
         L     RLINK,WXEQHOLD RESTORE THE RETURN ADDRESS
         BR    RLINK          RETURN TO OUR CALLER
         SPACE 5
AWAITXEQ DC    C'AWAITING EXECUTION CLASS ?,'
         SPACE 5
HIGHBIT  EQU   X'80'          MAKES JOB CLASS PRINTABLE
         EJECT
OUTMSG   LA    R1,MESSAGE     A(MESSAGE)
         LA    R0,LMESSAGE    LENGTH OF THE MESSAGE
         TPUT  (1),(0),R      GIVE IT TO OUR CALLER
         BR    RLINK          RETURN TO OUR CALLER
         EJECT
FITINUM  CVD   R1,DOUBLEWD    CONVERT TO PACKED DECIMAL
         MVC   NUMBER(L'NORMAL),NORMAL INITIALIZE THE EDIT FORMAT
         LA    R1,NUMBER+SIGNORM IN CASE OF ZEROES
         EDMK  NUMBER(L'NORMAL),DOUBLEWD+2 CONVERT TO EBCDIC
         LA    R14,NUMBER+L'NORMAL-1 A(END OF CONVERTED NUMBER)
         SLR   R14,R1         LENGTH OF THE CONVERTED NUMBER - 1
         EX    R14,MVNUMBER   PUT THE NUMBER IN THE MSG
         LA    R15,1(R14,R15) A(NEXT SPOT IN MSG)
         BR    RLINK          RETURN TO OUR CALLER
         SPACE 5
MVNUMBER MVC   0(0,R15),0(R1) TO BE EXECUTED
         SPACE 5
NORMAL   DC    X'402020202020202020202120' EDIT MASK
SIGNORM  EQU   11             OFFSET TO LAST DIGIT
         EJECT
         PRINT ON
STPCL    IKJPARM
JOBNAME  IKJIDENT 'JOB NAME',LIST,MAXLNTH=8,FIRST=ALPHA,               *
               OTHER=ALPHANUM,PROMPT='JOB NAME'
         IKJENDP
         EJECT
         $JQE
JQEPOSTN EQU   JQETRAK,2      JQE POSITION
JQETOTAL EQU   JQETRAK+2,2    QUEUE TOTAL
         $JOE
JOEPOSTN EQU   JOECKPT,2      JOE POSITION
JOETOTAL EQU   JOECHAR,2      QUEUE TOTAL
         IKJCPPL
         IKJECT
         IKJPSCB
         CVT   DSECT=YES
         EJECT
         REGEQU
RBASE    EQU   R2             A(STATUS)
RCPPL    EQU   R3             A(CPPL)
RECT     EQU   R4             A(ECT)
RWORK    EQU   R5             TEMPORARY WORK REGISTER
RJQE     EQU   R6             A(JOB QUEUE ELEMENT)
RLINK    EQU   R7             INTERNAL LINK REGISTER
RET      EQU   R8             A(RETURN AREA)
R#JQES   EQU   R9             # OF RETURNED JQES
R#JOES   EQU   R10            # OF RETURNED JOES
RJOE     EQU   R11            A(JOB OUTPUT ELEMENT)
RDEVID   EQU   R12            A(DEVICE DESCRIPTOR)
         EJECT
WORKAREA DSECT                OUR WORK AREA
SAVEAREA DS    18F            OUR SAVE AREA
DOUBLEWD EQU   SAVEAREA+16    PACKED DECIMAL WORK AREA
NUMBER   EQU   DOUBLEWD+8     FINAL PRODUCT OF CONVERT
ONEJOBLN DS    F              LENGTH OF THE PARM FIELD FOR 1 JOB NAME
ONEJBNML DS    H              LENGTH OF THE 1 JOB NAME
ONEJOBNM DS    CL8            THE 1 JOB NAME
         DS    0F
         PRINT GEN
         IKJPPL DSECT=NO
ANECB    DS    F              COMMUNICATION ECB FOR IKJPARS
ANSPLACE DS    A              A(PDL RETURNED BY IKJPARS)
ATACHPL  DS    5A             ATACHSRB'S PARAMETER LIST
INFORET  DS    A              A(WORD TO RECEIVE A(RET AREA))
ENQLIST0 DS    0F                                                RGR
ENQLIST  ENQ   (ENQLIST0,ENQLIST0,E,,SYSTEM),MF=L ENQ PARM LIST  RGR
DEQLIST  EQU   ENQLIST        DEQ PARAMETER LIST
JQESHOLD DS    A              RETURN ADDRESS HOLD FOR OUTJQES
WXEQHOLD DS    A              RETURN ADDRESS HOLD FOR SETWXEQ
JOESHOLD DS    A              RETURN ADDRESS HOLD FOR OUTJOES
HOLDSLNK DS    A              RETURN ADDRESS HOLD FOR JQEHOLDS
MESSAGE  EQU   *              OUTPUT MESSAGE BUFFER
MSGJBTYP DS    CL3            JOB OR TSU OR STC
MSGJOB#  DS    CL5            JOB NUMBER
         DS    C
MSGJNME  DS    CL8            JOB NAME
         DS    C
MSGSTYPE DS    CL42           JOB STATUS
MSGWXCLS EQU   MSGSTYPE+L'AWAITXEQ-2,1
MSGWOUTC EQU   MSGSTYPE+L'AWAITOUT-2,1
MSGOUTLC EQU   MSGSTYPE+L'AWAITOUT+1
MSGQTYPE EQU   MSGSTYPE+L'EXECUTNG+1,1
MSGDEV   EQU   MSGSTYPE+L'ON+1,8
         DS    C
MSGSPCST DS    CL9            SPECIAL STATUS
LMESSAGE EQU   *-MESSAGE      LENGTH OF THE MESSAGE BUFFER
STATS    DS    X              STATUS BITS
FILLEDRT EQU   X'80'          RETURN AREA FULL
LWRKAREA EQU   *-WORKAREA     WORK AREA LENGTH
         END
