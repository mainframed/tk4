FORMAT   QSTART 'QUEUE COMMAND - JQE AND JOE FORMAT ROUTINES - Q7'  RGR
         GBLB  &QSP           MVS/SP OPTION                       UF020
         USING QDISPLAY,R10   BASE REG FOR DISPLAY WORK AREA
         L     R10,QVDSPL     LOAD BASE REG
         USING JQEDSECT,R9    BASE REG FOR JQE DSECT
         USING JOEDSECT,R8    BASE REG FOR JOE DSECT
         USING WORK,R13       BASE FOR LOCAL WORK AREA
***********************************************************************
*                                                                     *
*   INPUT TO THIS MODULE -                                            *
*     R1 = 0 INDICATES PRINT JQE                                      *
*     R1 = 4 INDICATES PRINT JOE                                      *
*     R9 CONTAINS JQE ADDRESS                                         *
*     R8 CONTAINS JOE ADDRESS                                         *
*                                                                     *
***********************************************************************
*                                                                     *
*   BRANCH TO PROPER ROUTINE                                          *
*                                                                     *
***********************************************************************
         MVC   FCLEAR,=CL80' ' CLEAR THE PRINT AREA
         MVC   FQUEUE,QCLASS  CLASS NAME
         MVC   QDHLINE,HEADING REPORT HEADING
         CLI   QSUBNAME,C'X'  IS THE REQUEST FOR A HEX DUMP?
         BE    NOTBUSY        YES. SKIP.
*        CLC   =X'01000100',JQEPRTRT IS THE PRINT/PUNCH FOR LOCAL?
*        BE    LOCAL          YES. SKIP THIS ROUTINE.
*        MVC   FREMOTE,=C'RJE' INDICATE THIS JOB IS REMOTE
         TM    JQEFLAGS,QUEBUSY IS THE JOB EXECUTING?
         BZ    NOTBUSY        NO. SKIP THIS ROUTINE.
         IC    R15,JQEFLAGS   GET SYSTEM NUMBER
         N     R15,=F'7'      ZERO OUT UNWANTED BITS
         SLL   R15,3          MULTIPLY BY 8
         LA    R15,QSYSID(R15) OBTAIN SYSTEM ID
         MVC   FSYSID,0(R15)  MOVE SYSTEM ID TO DISPLAY
NOTBUSY  CLI   QCLASS,0       IS THIS THE TSO QUEUE?
         BE    LISTTSO        YES. DO IT.
         CLI   QCLASS,4       IS THIS THE STC QUEUE?
         BE    LISTSTC        YES. DO IT.
         CLI   QCLASS,8       IS THIS THE HELD OUTPUT QUEUE?
         BE    LISTHO         YES. DO IT.
         LTR   R1,R1          IS REQUEST FOR JQE OR JOE?
         BZ    LISTJQE        JQE.
***********************************************************************
*                                                                     *
*   FORMAT JOE                                                        *
*                                                                     *
***********************************************************************
LISTJOE  MVC   FQNAME,=C'OUTPUT' MOVE IN NAME OF QUEUE
         CLI   QSUBNAME,C'X'  IS THE REQUEST FOR A HEX DUMP?
         BE    HEXO           YES. DO IT.
         L     R0,JOERECCT    NUMBER OF PRINT LINES
         CVD   R0,CONVERT     CONVERT TO DECIMAL
         MVC   FLINES,ED8     PREPARE FOR EDIT
         ED    FLINES,CONVERT+4 EDIT NUMBER OF LINES
         TM    JOEFLAG,$JOEBUSY JOE BUSY?
         BZ    LOCAL          NO. SKIP.                             SP3
         LA    R3,JOEDEVID    A(OUTPUT DEVICE DESCRIPTOR            FCI
         BAL   R7,SETDEVIC    SET THE OUTPUT DEVICE                 FCI
         TM    JOEFLAG,X'80'  IS THE CKPT VALID
         BZ    LIST           NO. SKIP IT.
         AIF   (&QSP).QSP01                                       UF020
         LH    R8,JOECKPT     OFFSET TO CHECKPOINT JOE
         SLA   R8,2           MULTIPLY BY 4
         AGO   .QSP02                                             UF020
.QSP01   ANOP                                                     UF020
         LA    R8,0(,R8)      CLEAR FOR ICM                       EAM
         ICM   R8,B'0111',JOECKPTB OFFSET TO CKPT JOE             UF020
.QSP02   ANOP                                                     UF020
         BZ    LIST           CHECKPOINT DOES NOT EXIST. SKIP.
         USING QCKPT,R1       BASE REG FOR CKPT WORK AREA
         L     R1,QVCKPT      LOAD BASE REG
         A     R8,QCJOTA      ADD BASE TO OFFSET
         DROP  R1
         S     R0,JOECRECN    SUBTRACT RECORDS PRINTED FROM TOTAL  EAM
         CVD   R0,CONVERT     CONVERT TO DECIMAL
         MVC   FLINES,ED8     PREPARE FOR EDIT
         ED    FLINES,CONVERT+4 PRINT UPDATED LINE COUNT
         B     LIST           FORMAT REST OF LINE
LOCAL    LA    R15,FREMOTE    ADDRESS TO PUT TEXT
         LA    R1,JOEROUT     POINT TO ROUTING INFO                FCI*
***********************************************************************
*RMTORLCL SUBROUTINE - DETERMINE REMOTE OR LOCAL DESTINATION       FCI*
* R1 POINTS TO PRTRT/PUNRT, R15 TO ASSEMBLY POINTER                FCI*
***********************************************************************
RMTORLCL DS    0H                                                   SP3
         XR    R14,R14        SET UP TO RECEIVE REMOTE FLAGS        SP3
         AIF   (&QSP).QSP1                                        UF020
         LH    R14,0(R1)      LOAD RMT FLAGS                        SP3
         CLC   0(2,R1),=H'0'  IS IT FOR REMOTE 00=LOCAL            FCI*
         AGO   .QSP2                                              UF020
.QSP1    ANOP                                                     UF020
         LH    R14,2(R1)      LOAD RMT FLAGS                        SP3
         CLC   2(2,R1),=H'0'  IS IT FOR REMOTE 00=LOCAL            FCI*
.QSP2    ANOP                                                     UF020
         BE    LIST           GOOD, FOUND IT                       FCI*
         AIF   (&QSP).QSPX1                                         SP3
         CLI   0(R1),0        IS IT FOR A "USR" DEFINED QUEUE       SP3
         BNE   NOTUSR                                               SP3
         MVC   0(L'USR,R15),USR       MOVE IN 'USR'                 SP3
         B     NOTRMT                                               SP3
         AGO   .QSPX2                                               SP3
.QSPX1   ANOP                                                       SP3
         CLI   1(R1),0        IS IT FOR A "USR" DEFINED QUEUE       SP3
         BNE   NOTUSR                                               SP3
         MVC   0(L'USR,R15),USR       MOVE IN 'USR'                 SP3
         B     NOTRMT                                               SP3
.QSPX2   ANOP                                                       SP3
NOTUSR   DS    0H                                                   SP3
         MVC   0(L'RMT,R15),RMT       MOVE IN 'RMT'                FCI*
NOTRMT   DS    0H                                                   SP3
         LA    R15,L'RMT(R15)  BUMP POINTER                        FCI*
         CVD   R14,DOUBLEWD   RMT NUMBER TO DECIMAL                FCI*
         B     FITINUM1       FIT THE NUMBER IN RMT MESSAGE        FCI*
         SPACE 2
***********************************************************************
* FITINUM SUBROUTINE - CONVERT BIN NUMBER TO NICE FORMAT           FCI*
*                                                                  FCI*
***********************************************************************
FITINUM  CVD   R1,DOUBLEWD    CONVERT TO PACKED DECIMAL            FCI*
FITINUM1 MVC   NUMBER(L'NORMAL),NORMAL INITIALIZE THE EDIT FORMAT  FCI*
         LA    R1,NUMBER+SIGNORM IN CASE OF ZEROES                 FCI*
         EDMK  NUMBER(L'NORMAL),DOUBLEWD+2 CONVERT TO EBCDIC       FCI*
         LA    R14,NUMBER+L'NORMAL-1 A(END OF CONVERTED NUMBER)    FCI*
         SLR   R14,R1         LENGTH OF THE CONVERTED NUMBER - 1   FCI*
         EX    R14,MVNUMBER   PUT THE NUMBER IN THE MSG            FCI*
         LA    R15,1(R14,R15) A(NEXT SPOT IN MSG)                  FCI*
         B     LIST           RETURN TO OUR CALLER                 FCI*
         SPACE 3                                                   FCI*
MVNUMBER MVC   0(0,R15),0(R1) TO BE EXECUTED                       FCI*
         SPACE 2                                                   FCI*
NORMAL   DC    X'402020202020202020202120' EDIT MASK               FCI*
SIGNORM  EQU   11             OFFSET TO LAST DIGIT                 FCI*
RMT      DC    C'RMT'                                              FCI*
USR      DC    C'USR'                                               SP3
***********************************************************************
*                                                                     *
*   FORMAT JQE                                                        *
*                                                                     *
***********************************************************************
LISTTSO  MVC   FQNAME(8),=C'TSO USER' NAME OF QUEUE
         B     LIST           CONTINUE
LISTSTC  MVC   FQNAME(8),=C'SYSTEM Q' NAME OF QUEUE
         B     LIST           CONTINUE
LISTHO   MVC   FQNAME(8),=C'HELD OUT' NAME OF QUEUE
         B     LIST           CONTINUE
LISTJQE  MVC   FQNAME,=C' INPUT' NAME OF QUEUE
LIST     CLI   QSUBNAME,C'X'  IS THE REQUEST FOR A HEX DUMP?
         BE    HEX            YES. DO IT.
         MVC   FCOUNT,ED5     PREPARE FOR EDIT
         ED    FCOUNT,QCOUNT  EDIT THE POSITION IN QUEUE
         MVC   FNAME,JQEJNAME MOVE IN JOBNAME
         MVC   FJOBNO,ED5     PREPARE FOR EDIT
         LH    R0,JQEJOBNO    LOAD HASP JOBNUMBER
         CVD   R0,CONVERT     CONVERT TO DECIMAL
         ED    FJOBNO,CONVERT+5 EDIT HASP JOBNUMBER
         SR    R0,R0          ZERO OUT REGISTER
         IC    R0,JQEPRIO     LOAD JQE PRIORITY
         SRL   R0,4           DIVIDE BY 16
         CVD   R0,CONVERT     CONVERT TO DECIMAL
         MVC   FPRIO,ED3      PREPARE FOR EDIT
         ED    FPRIO,CONVERT+6 EDIT JQE PRIORITY
         TM    JQEFLAGS,X'E0' IS THE JOB HELD?
         BZ    NOHOLD         NO.
         MVC   FHOLD,=C'HELD' INDICATE JOB HELD
NOHOLD   DS    0H
         CLC   QCODEH,=H'28'  IS THIS 'HO' COMMAND?               EAM
         BNE   NOHOLD2                                            EAM
         MVC   QCTRAK,JQETRAK DISK ADDR OF JCT.                   EAM
         L     R3,QCJCTA                                          EAM
         LR    R1,R3                                              EAM
         L     R15,=V(READSPC)                                    EAM
         BALR  R14,R15                                            EAM
         USING JCTSTART,R3                                        EAM
         L     R0,JCTLINES                                        EAM
         DROP  R3                                                 EAM
         CVD   R0,CONVERT                                         EAM
         MVC   FLINES,ED8                                         EAM
         ED    FLINES,CONVERT+4                                   EAM
         C     R0,=F'9999999'                                     EAM
         BNH   NOHOLD2                                            EAM
         MVI   FLINES+8,C'+'                                      EAM
NOHOLD2  DS    0H                                                 EAM
         LA    R1,QDMSG       ADDR OF MESSAGE AREA
         ST    R1,QDMSGA      STORE MESSAGE ADDR
         MVC   QDMLNG,=H'80'  LENGTH OF DISPLAY LINE
         L     R15,=V(DISPLAY) ADDR OF DISPLAY MODULE
         BALR  R14,R15        DISPLAY THE LINE
STOP     QSTOP
***********************************************************************
*                                                                     *
*   TAKE HEX DUMP OF JOE                                              *
*                                                                     *
***********************************************************************
HEXO     DS    0H                                                   SP3
         MVC   QPLINE,QBLANK  CLEAR MESSAGE AREA                    SP3
         MVC   QPLINE+10(L'HIGHNUMS),HIGHNUMS MAKE READABLE         SP3
         LA    R1,QPLINE      ADDR OF MESSAGE                       SP3
         ST    R1,QDMSGA           STORED HERE                      SP3
         MVC   QDMLNG,=H'80'  LENGTH OF MESSAGE                     SP3
         L     R15,=V(DISPLAY)                                      SP3
         BALR  R14,R15        WRITE THE MESSAGE                     SP3
         MVC   QPLINE+10(L'LOWNUMS),LOWNUMS MAKE READABLE           SP3
         L     R15,=V(DISPLAY)                                      SP3
         BALR  R14,R15        WRITE THE MESSAGE                     SP3
         MVC   FQNAME(8),QBLANK                                     SP3
         MVC   FQNAME,ED5    PREPARE FOR EDIT                       SP3
         LH    R0,JQEJOBNO    LOAD HASP JOBNUMBER                   SP3
         CVD   R0,CONVERT     CONVERT TO DECIMAL                    SP3
         ED    FQNAME,CONVERT+5    EDIT HASP JOBNUMBER              SP3
         MVI   FQNAME,C'O'                                          SP3
         UNPK  FHEX1,0(8,R8)  UNPK FIRST PART OF JOE INTO HEX
         UNPK  FHEX2,7(8,R8)  SECOND
         UNPK  FHEX3,14(8,R8) THIRD
         UNPK  FHEX4,21(8,R8) FOURTH
         UNPK  FHEX5,28(5,R8) FIFTH
         MVI   FHEXOC,C' '    CLEAR LAST BYTE
         TR    FHEX,TABLE     CHANGE TO PRINTABLE HEX
         LA    R1,QDMSG       ADDR OF MESSAGE AREA
         ST    R1,QDMSGA      STORE MESSAGE ADDR
         MVC   QDMLNG,=H'80'  LENGTH OF DISPLAY LINE
         L     R15,=V(DISPLAY) ADDR OF DISPLAY MODULE
         BALR  R14,R15        DISPLAY THE LINE
         MVC   FQNAME,QBLANK                                        SP3
         UNPK  FHEX1,32(8,R8) UNPK FIRST PART OF JOE INTO HEX       SP3
         UNPK  FHEX2,39(8,R8) SECOND                                SP3
         UNPK  FHEX3,46(8,R8) THIRD                                 SP3
         UNPK  FHEX4,53(8,R8) FOURTH                                SP3
         UNPK  FHEX5,60(5,R8) FIFTH                                 SP3
         MVI   FHEXOC,C' '    CLEAR LAST BYTE                       SP3
         TR    FHEX,TABLE     CHANGE TO PRINTABLE HEX               SP3
         LA    R1,QDMSG       ADDR OF MESSAGE AREA                  SP3
         ST    R1,QDMSGA      STORE MESSAGE ADDR                    SP3
         MVC   QDMLNG,=H'80'  LENGTH OF DISPLAY LINE                SP3
         L     R15,=V(DISPLAY) ADDR OF DISPLAY MODULE               SP3
         BALR  R14,R15        DISPLAY THE LINE                      SP3
         UNPK  FHEX1,64(5,R8) UNPK FIRST PART OF JOE INTO HEX       SP3
         MVC   FHEXOCS,QBLANK CLEAR LAST BYTE                       SP3
         TR    FHEX,TABLE     CHANGE TO PRINTABLE HEX               SP3
         LA    R1,QDMSG       ADDR OF MESSAGE AREA                  SP3
         ST    R1,QDMSGA      STORE MESSAGE ADDR                    SP3
         MVC   QDMLNG,=H'80'  LENGTH OF DISPLAY LINE                SP3
         L     R15,=V(DISPLAY) ADDR OF DISPLAY MODULE               SP3
         BALR  R14,R15        DISPLAY THE LINE                      SP3
***********************************************************************
*                                                                     *
*   TAKE HEX DUMP OF JQE                                              *
*                                                                     *
***********************************************************************
HEX      DS    0H                                                   SP3
         MVC   QPLINE,QBLANK  CLEAR MESSAGE AREA                    SP3
         MVC   QPLINE+10(L'HIGHNUMS),HIGHNUMS MAKE READABLE         SP3
         LA    R1,QPLINE      ADDR OF MESSAGE                       SP3
         ST    R1,QDMSGA           STORED HERE                      SP3
         MVC   QDMLNG,=H'80'  LENGTH OF MESSAGE                     SP3
         L     R15,=V(DISPLAY)                                      SP3
         BALR  R14,R15        WRITE THE MESSAGE                     SP3
         MVC   QPLINE+10(L'LOWNUMS),LOWNUMS MAKE READABLE           SP3
         L     R15,=V(DISPLAY)                                      SP3
         BALR  R14,R15        WRITE THE MESSAGE                     SP3
         MVC   FQNAME(8),QBLANK                                     SP3
         MVC   FQNAME,ED5   PREPARE FOR EDIT                        SP3
         LH    R0,JQEJOBNO    LOAD HASP JOBNUMBER                   SP3
         CVD   R0,CONVERT     CONVERT TO DECIMAL                    SP3
         ED    FQNAME,CONVERT+5 EDIT HASP JOBNUMBER                 SP3
         MVI   FQNAME,C'Q'                                          SP3
         UNPK  FHEX1,0(8,R9)  UNPK FIRST PART OF JOE INTO HEX       SP3
         UNPK  FHEX2,7(8,R9)  SECOND
         UNPK  FHEX3,14(8,R9) THIRD
         UNPK  FHEX4,21(8,R9) FOURTH
         UNPK  FHEX5,28(5,R8) FIFTH                                 SP3
         MVI   FHEXOC,C' '    CLEAR LAST BYTE                       SP3
         TR    FHEX,TABLE     CHANGE TO PRINTABLE HEX
         LA    R1,QDMSG       ADDR OF MESSAGE AREA                  SP3
         ST    R1,QDMSGA      STORE MESSAGE ADDR                    SP3
         MVC   QDMLNG,=H'80'  LENGTH OF DISPLAY LINE                SP3
         L     R15,=V(DISPLAY) ADDR OF DISPLAY MODULE               SP3
         BALR  R14,R15        DISPLAY THE LINE                      SP3
         MVC   FQNAME,QBLANK  CLEAR THE QNAME                       SP3
         UNPK  FHEX1,32(8,R9)  UNPK FIRST PART OF JOE INTO HEX      SP3
         UNPK  FHEX2,39(8,R9)  SECOND                               SP3
         UNPK  FHEX3,46(8,R9) THIRD                                 SP3
         UNPK  FHEX4,53(8,R9) FOURTH                                SP3
         MVC   FHEXCS,QBLANK  CLEAR LAST BYTES                      SP3
         TR    FHEX,TABLE     CHANGE TO PRINTABLE HEX               SP3
         B     NOHOLD         CALL DISPLAY
***********************************************************************
* SETDEVIC SUBROUTINE - GET DEVICE DATA (R3) POINTS TO DEVID       FCI*
*                                                                  FCI*
***********************************************************************
SETDEVIC ST    R7,SETDHOLD       SAVE LINK ADDRESS                 FCI*
         MVC   FPRINT(9),=CL9' '
         TM    0(R3),HIGHBIT REMOTE DEVICE?                        FCI*
         BO    RMTDEV         YES => OUTPUT IT                     FCI*
         SR    R1,R1          FOR THE INSERT CHARACTER             FCI*
         IC    R1,0(R3)         DEVICE TYPE                        FCI*
         SRL   R1,4           RIGHT JUSTIFIED                      FCI*
         MH    R1,DEVTYPEL    TYPE * LENGTH OF A DEVICE ENTRY      FCI*
         LA    R1,DEVTABLE(R1) A(DEVICE TYPE)                      FCI*
         MVC   FPRINT,1(R1)   PUT IN THE DEVICE TYPE
         CLI   0(R3),0          INTERNAL READER?                   FCI*
         BE    SETDRTN        YES => GIVE THE USER THE INFO        FCI*
         SR    R15,R15        FOR THE INSERT CHARACTER             FCI*
         ICM   R15,B'0011',1(R3) DEVICE NUMBER                 SP3 FCI*
         CVD   R15,DOUBLEWD   IN PACKED DECIMAL                    FCI*
         IC    R15,0(R1)      OFFSET TO WHERE THE DEV # GOES       FCI*
         LA    R15,FPRINT(R15) A(WHERE THE DEV # GOES)
         MVC   1(L'DIGITS3,R15),DIGITS3 SET UP THE EDIT OF 3 DIGITSKMT*
         EDMK  0(L'DIGITS3+1,R15),DOUBLEWD+6 DEV # IN EBCDIC       FCI*
         MVC   0(L'DIGITS3+1,R15),0(R1) ADJUST FOR BLANKS          FCI*
*                                                                  FCI*
         B     SETDRTN        GO EXIT
*                                                                  FCI*
RMTDEV   SR    R0,R0          FOR THE INSERT CHARACTER             FCI*
         AIF   (&QSP).QSP3                                        UF020
         IC    R0,1(R3)         REMOTE NUMBER                      FCI*
         AGO   .QSP4                                              UF020
.QSP3    ANOP                                                     UF020
         IC    R0,3(R3)         REMOTE NUMBER                     UF020
.QSP4    ANOP                                                     UF020
         CVD   R0,DOUBLEWD    IN PACKED DECIMAL                    FCI*
         MVI   FPRINT,C'R'    INDICATE A REMOTE DEVICE             FCI*
         MVC   FPRINT+2(L'THREEPT),THREEPT SET UP THE EDIT MASK    FCI*
         EDMK  FPRINT+1(L'THREEPT),DOUBLEWD+6 CONVERT TO EBCDIC    FCI*
         MVC   FPRINT+1(L'THREEPT),0(R1) ADJUST FOR BLANKS         FCI*
         LA    R1,FPRINT+1    A(SPOT JUST BEFORE POSSIBLE SEP)     FCI*
FINDPT   LA    R1,1(R1)       A(NEXT BYTE)                         FCI*
         CLI   0(R1),C'.'     FOUND THE SEPARATOR?                 FCI*
         BNE   FINDPT         NO => KEEP LOOKING                   FCI*
         SR    R15,R15        FOR THE INSERT CHARACTER             FCI*
         IC    R15,0(R3)        DEVICE TYPE INDICATOR              FCI*
         SRL   R15,3          RIGHT JUSTIFIED                      FCI*
         LA    R15,RMTDEVS-HIGHBIT/8(R15) A(DEVICE TYPE)           FCI*
         MVC   1(2,R1),0(R15) PUT IN THE DEVICE TYPE               FCI*
         MVC   3(1,R1),0(R3) PUT IN THE DEVICE NUMBER              FCI*
         OI    3(R1),C'0'     MAKE THE DEVICE NUMBER PRINTABLE     FCI*
         B     SETDRTN
         EJECT ,                                                   FCI*
SETDRTN  L     R7,SETDHOLD    GET RETURN ADDRESS                   FCI*
         BR    R7             RETURN TO OUR CALLER                 FCI*
         SPACE 5                                                   FCI*
DIGITS3  DC    X'202020'                                           FCI*
THREEPT  DC    X'2020204B'                                         FCI*
         DS    0H                                                  FCI*
DEVTABLE DC    AL1(0),CL8'INTRDR',AL1(6),CL8'READER'               FCI*
         DC    AL1(7),CL8'PRINTER',AL1(5),CL8'PUNCH'               FCI*
DEVTYPEL DC    AL2((*-DEVTABLE)/4)                                 FCI*
RMTDEVS  DC    C'**',C'RD',C'PR',C'PU'                             FCI*
***********************************************************************
*                                                                     *
*   MISCELLANY                                                        *
*                                                                     *
***********************************************************************
         LTORG
ED8      DC    X'4020202020202120'
ED5      DC    X'402020202021'
ED3      DC    X'40202021'
HIGHNUMS DC    C'0                               1                     X
                         2'
LOWNUMS  DC    C'0 1 2 3 4 5 6 7 8 9 A B C D E F 0 1 2 3 4 5 6 7 8 9 A X
               B C D E F 0'
HEADING  DC    C'  QUEUE  POSITION JOBNAME    JOB#  PRIORITY  LINES'
         DC    CL40'   EXECUTING'
HIGHBIT  EQU   X'80'
TABLE    EQU   *-240
         DC    C'0123456789ABCDEF' TRANSLATE TO PRINTABLE HEX
WORK     DSECT
         DS    CL80
CONVERT  DS    D
SETDHOLD DS    F
DOUBLEWD DS    D
NUMBER   DS    CL16
FORMAT   CSECT
SYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023
FORMAT   CSECT ,                                                  UF023
         $JQE
         $JOE
         $JCT
JCT      EQU   0
BUFSTART EQU   0
BUFDSECT EQU   0
         QCOMMON
         ORG   QDMSG
FCLEAR   DS    0CL80          FORMAT FOR QUEUE RECORDS
FQNAME   DS    CL6            NAME OF QUEUE
         DS    C
FQUEUE   DS    C              CLASS NAME
         DS    CL2
FCOUNT   DS    CL6            POSITION IN QUEUE
         DS    CL2
FNAME    DS    CL8            JOBNAME
         DS    CL2
FJOBNO   DS    CL6            JES2 JOB NUMBER
         DS    CL2
FPRIO    DS    CL4            JOB PRIORITY
         DS    CL2
FLINES   DS    CL8            NUMBER OF OUTPUT LINES
         DS    CL3
FSYSID   DS    CL8            SYSTEM ID
         DS    CL3
FHOLD    DS    CL4            JOB HOLD STATUS
         DS    CL1
FREMOTE  DS    CL8            REMOTE
         ORG   FSYSID
FPRINT   DS    CL8            PRINTING
         ORG   FCOUNT
FHEX1    DS    0CL15
         DS    CL14
FHEX2    DS    0CL15
         DS    CL14
FHEX3    DS    0CL15
         DS    CL14
FHEX4    DS    0CL15
         DS    CL14
FHEX5    DS    0CL9
         DS    CL8
FHEX     EQU   FHEX1,*-FHEX1  LENGTH OF FULL HEX LINE               SP3
FHEXOC   DS    C              CLEAR LAST BYTE                       SP3
FHEXOCS  EQU   FHEX1+8,*-FHEX1+8    CLEAR LAST BYTES FOR JOE        SP3
FHEXCS   EQU   FHEX3+12,*-FHEX3+12  CLEAR LAST BYTES FOR JQE        SP3
SYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023
         END
