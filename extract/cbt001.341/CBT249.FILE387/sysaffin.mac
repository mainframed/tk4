SYSAFFIN CSECT
*---------------------------------------------------------------------*
*                                                                     *
*   USE OF THIS ROUTINE:                                              *
*      //SYSAFFIN  EXEC  PGM=SYSAFFIN,PARM=XXXXXX                     *
*                                                                     *
*   WHERE "XXXXXX" IS THE CPU SERIAL NUMBER OF THE SYSTEM ON WHICH    *
*   YOU WANT TO INSURE THAT THE JOB RUNS.                             *
*                                                                     *
*---------------------------------------------------------------------*
         REGS
         $SAVE JAR
         L     R2,0(,R1)     ADDRESS OF PARMS
         LR    R12,R15       LOAD BASE REG
         USING SYSAFFIN,R12  TELL FOXY ABOUT IT
         IEFSAVER
         LTR   R2,R2         WERE PARMS SPECIFIED?
         BZ    OKTOEXEC      NO SYSTEM AFFINITY SPECIFIED - RETURN
         LH    R3,0(,R2)     LENGTH OF PARMS
         CH    R3,=H'6'      WAS PARM SPECIFIED 6 BYTES LONG?
         BNE   USRABEND      NO - STOP HIM BEFORE HE HURTS HIMSELF
         MODESET   KEY=ZERO,MODE=SUP  PREPARE TO GET THE CPUID
         STIDP DOUBLE        GET THE CPU-ID
         MODESET   KEY=NZERO,MODE=PROB COME ON BACK
         UNPK  CPUIDENT(7),DOUBLE+1(4) LET'S BE CONSISTANT, NOW
         CLC   CPUIDENT(6),2(R2)    AM I RUNNING ON THE REQUESTED CPU?
         BE    OKTOEXEC      YES - THEN ALL'S COOL
         LA    R3,CPUTABLE   NO - POINT TO THE CPU TABLE
CPULOOPR DS    0H
         CLC   2(6,R2),0(R3) HAVE I FOUND MY PROPER CPUID?
         BE    SETJOBUP      YES - DO WHAT I HAVE TO DO
         LA    R3,10(,R3)    NO - BUMP TO THE NEXT ENTRY
         CLI   0(R3),X'FF'   AM I AT END-OF-TABLE?
         BNE   CPULOOPR      NO - CHECK THIS ONE
USRABEND ABEND 311,DUMP,STEP
SETJOBUP DS    0H
         L     R2,X'10'      YE OLDE CVT
         L     R2,0(,R2)                TCB WORDS
         L     R2,4(,R2)                CURRENT TCB
         L     R2,X'B4'(,R2)            JSCB ADDRESS
         L     R2,X'13C'(,R2)           SSIB ADDRESS
         L     R2,X'20'(,R2)            SJB ADDRESS
         MVC   JOBIDENT(1),X'E4'(R2)    S/T/J TYPE IDENTIFIER
         L     R4,X'E8'(,R2)            STC/JOB/TSU NUMBER
         ICM   R5,B'1111',=CL4'    '    FOUR SPACES
JOB#LOOP DS    0H
         CLM   R4,B'1000',=CL4'    '    HIGH-ORDER BYTE A SPACE?
         BNE   GOTJOBNO                 NO - I'VE GOT THE JOB NUMBER
         SLDL  R4,8                     YES - SHIFT IT OUT
         B     JOB#LOOP                 GO CHECK IT OUT AGAIN
GOTJOBNO DS    0H
         STCM  R4,B'1111',JOBIDENT+1    STASH S/J/T NUMBER
         LA    R4,CMNDTEXT              POINT TO COMMAND TEXT
         MVC   0(2,R4),=CL2'$H'         HOLD THE JOB
         BAL   R9,INSJOBNO
         MVC   0(2,R4),=CL2';C'         CANCEL THE JOB
         BAL   R9,INSJOBNO
         MVC   0(2,R4),=CL2';T'         RESET THE JOB
         BAL   R9,INSJOBNO
         MVC   0(3,R4),=CL3',S='        (SYSTEM-ID)
         MVC   3(4,R4),6(R3)            PROPER SYSTEM
         LA    R4,7(,R4)
         MVC   0(2,R4),=CL2';E'         RESTART THE JOB
         BAL   R9,INSJOBNO
         MVC   0(2,R4),=CL2';A'         ACTIVATE THE JOB
         BAL   R9,INSJOBNO
         MODESET MODE=SUP,KEY=ZERO   THIS ALWAYS HELPS
         SLR   R0,R0         TAKE YOUR MARK ....
         LA    R1,COMMAND    GET SET ....
         SVC   34            GO!
         LR    R10,R15       I'LL NEED THIS WHEN I QUIT
         MODESET MODE=PROB,KEY=NZERO BEFORE I FORGET
         MVC   LISTCMD+4(42),CMNDTEXT
         WTO   MF=(E,LISTCMD)
IEFRELSE DS    0H
         IEFRELSE
         LR    R15,R10       RESTORE RETURN CODE FROM SVC 34
         RETURN (14,12),T,RC=(15)
OKTOEXEC DS    0H
         SLR   R10,R10
         B     IEFRELSE
INSJOBNO DS    0H
         MVC   2(5,R4),JOBIDENT      MOVE JOB IDENTIFIER
SQUISHER DS    0H
         LA    R4,1(,R4)             BUMP TO NEXT BYTE
         CLI   0(R4),X'40'           IS THIS A SPACE?
         BER   R9                    YES - RETURN
         B     SQUISHER              AND GO TO NEXT ONE
         EJECT
         LTORG
         SPACE 3
DOUBLE   DS    D
COMMAND  DC    0CL60' '      ****MUST*BE*FULLWORD*ALIGNED****
         DC    H'60',H'0'    CONTROL INFORMATION
CMNDTEXT DC    CL56' '       THE SUBSYSTEM COMMAND
LISTCMD WTO '123456789012345678901234567890123456789012    <SYSAFFIN>',$
               ROUTCDE=(2,11),DESC=2,MF=L
CPUIDENT DS    CL7           CPU SERIAL NUMBER (PLUS A SLACK BYTE)
JOBIDENT DS    CL5           S/J/T PLUS NUMBER
*---------------------------------------------------------------------*
*                                                                     *
*   THE FOLLOWING TABLE CONTAINS THE VALID CPU SERIAL NUMBERS AND     *
*   THEIR ASSOCIATED JES2 SYSTEM ID'S.  THE FORMAT OF EACH ENTRY      *
*   IS:  6 BYTES OF CHARACTER (YES, CHARACTER) CPU SERIAL NUMBER,     *
*   FOLLOWED BY 4 BYTES OF CHARACTER SYSTEM ID.  A BYTE OF X'FF'      *
*   DELIMITS THE TABLE.  UPDATE THE TABLE WITH YOUR OWN               *
*   INSTALLATION'S CPU AND SYSTEM INFORMATION.                        *
*                                                                     *
*   ONE CAUTION:  IF YOU INSTALL THIS ROUTINE WITH YOUR OWN SYSTEM    *
*   DATA, AND THEN REPLACE ONE OF THE CPU'S WITH A NEW ONE (A NEW     *
*   SERIAL NUMBER) SOMETIME IN THE FUTURE, DON'T FORGET TO UPDATE     *
*   THE TABLE.  IF YOU DON'T, AND YOU KEEP THE SAME SYSTEM ID, YOU    *
*   WILL GET YOURSELF IN A NICE START-REQUEUE-RESET-CANCEL LOOP.      *
*   IF THIS HAPPENS TO YOU, THE ONLY SURE WAY TO STOP IT IS TO        *
*   ISSUE A "$P" COMMAND SO THAT YOU CAN FREEZE THE ACTION LONG       *
*   ENOUGH TO SHOOT THE JOB DOWN.                                     *
*                                                                     *
*                                                                     *
DON'T TRY TO ASSEMBLE THIS CODE WITHOUT READING THE PRECEEDING COMMENTS
*                                                                     *
*                                                                     *
*---------------------------------------------------------------------*
CPUTABLE DS    0CL10
         DC    CL6'123456',CL4'SYSX'   CPU SERIAL=123456, SYSID=SYSX
         DC    CL6'012345',CL4'SYSY'   CPU SERIAL=012345, SYSID=SYSY
         DC    10XL1'FF'               SPARE
         DC    10XL1'FF'               SPARE
         DC    XL1'FF'                 THE KICKER
         END   SYSAFFIN
