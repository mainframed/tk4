LPAXTRCT CSECT
         REGS
         $SAVE JAR
         LR    R12,R15
         USING LPAXTRCT,R12
         IEFSAVER
         OPEN  (DIRIN,,DIROUT,OUTPUT)
         TM    DIRIN+48,X'10'      WAS INPUT OPEN GOOD?
         BNO   BADOPEN             NO, QUIT RC=16
         TM    DIROUT+48,X'10'     WAS OUTPUT OPEN GOOD?
         BO    CONTROL             YES - WRITE CONTROL RECORDS
BADOPEN  DS    0H
         MVI   RC,16               SET RETURN-CODE TO 16
IEFRELSE DS    0H
         IEFRELSE
         SLR   R15,R15             CLEAR RETURN-CODE REGISTER
         IC    R15,RC              PICK UP RETURN-CODE
         RETURN (14,12),T,RC=(15)
CONTROL  DS    0H
         TIME  DEC                 GET CURRENT DATE AND TIME
         STM   R0,R1,CNTLTIME      STORE INTO CONTROL RECORD
         SCANTIOT   =CL8'DIRIN',BADOPEN DDNAME WILL ALWAYS BE THERE
         ICM   R1,B'0111',12(R15)  PICK UP JFCB PREFIX ADDRESS
         MVC   CNTLJFCB(176),16(R1) COPY JFCB INTO CONTROL RECORD
         SLR   R1,R1               CLEAR REG1
         ICM   R1,B'0111',DIRIN+45 PICK UP THE DEB ADDRESS
         MVC   CNTL#EXT(1),16(R1)  MOVE NUMBER OF EXTENTS
         LA    R1,32(,R1)          BUMP TO DASD SECTION
         SLR   R2,R2               INITIALIZE
         IC    R2,CNTL#EXT         EXTENT COUNT
         LA    R3,CNTLALLX         RECEIVING FIELD FOR EXTENTS
XTNTLOOP DS    0H
         L     R4,0(,R1)           UCB ADDRESS
         MVC   CNTLJFCB+118(6),28(R4)   MOVE VOL SER TO C.R.
         MVC   0(3,R3),13(R4)      MOVE UCB NAME TO CONTROL RECORD
         MVC   3(8,R3),6(R1)       MOVE START/END CC-HH TO C.R.
         LA    R1,16(,R1)          BUMP R1 TO POINT TO NEXT EXTENT
         LA    R3,11(,R3)          NEXT AVAILABLE SLOT IN C.R.
         BCT   R2,XTNTLOOP         GO PROCESS NEXT EXTENT (IF ANY)
         PUT   DIROUT,CNTLDATA     WRITE CONTROL RECORD 1
         PUT   DIROUT,CNTLXTNT     WRITE CONTROL RECORD 2
DCTYLOOP DS    0H
         GET   DIRIN               GET NEXT DIRECTORY BLOCK
         CLC   0(2,R1),=H'0'       HAS THIS BLOCK EVER BEEN USED?
         BE    EODDRCTY            NO - THEN LOGICAL END OF DIRECTORY
         LR    R0,R1               GET ADDRESS IN REG0 FOR PUT
         PUT   DIROUT              AND WRITE IT TO SAVE DATASET
         AP    DBCOUNT(2),=P'1'    BUMP COUNTER
         B     DCTYLOOP            PLAY IT AGAIN, SAM
EODDRCTY DS    0H
         AP    NDBCOUNT(2),=P'1'   COUNT NON-PROCESSED BLOCK
         GET   DIRIN               GET NEXT DIRECTORY BLOCK
         B     EODDRCTY
EOFDRCTY DS    0H
         CLOSE (DIRIN,,DIROUT)     CLOSE UP SHOP
         ED    MASK1(4),DBCOUNT    DIRECTORY BLOCK COUNT
         MVC   WTO1+08(3),MASK1+1  MOVE INTO WTO
WTO1     WTO   'XXX DIRECTORY BLOCKS COPIED AFTER 2 CONTROL RECORDS',  $
               ROUTCDE=(2,11),DESC=7
         ED    MASK2(4),NDBCOUNT   DIRECTORY BLOCK COUNT NON-PROCESSED
         MVC   WTO2+08(3),MASK2+1  MOVE INTO WTO
WTO2     WTO   'XXX DIRECTORY BLOCKS WERE NOT USED AND NOT PROCESSED', $
               ROUTCDE=(2,11),DESC=7
         B     IEFRELSE
         EJECT
CNTLDATA DS    0D
CNTLTIME DS    F
CNTLDATE DS    F
CNTLJFCB DS    CL176
         DC    XL72'0'
         SPACE 3
CNTLXTNT DS    0D
CNTL#EXT DS    XL1
CNTLALLX DC    16XL11'0'
         DC    XL79'0'
         SPACE 3
RC       DC    X'0'
DBCOUNT  DC    PL2'0'
MASK1    DC    XL4'40202120'
NDBCOUNT DC    PL2'0'
MASK2    DC    XL4'40202120'
DIRIN    DCB   DDNAME=DIRIN,DSORG=PS,MACRF=GL,EODAD=EOFDRCTY,          $
               RECFM=F,LRECL=256,BLKSIZE=256,BUFNO=255
DIROUT   DCB   DDNAME=DIROUT,DSORG=PS,MACRF=PM,                        $
               RECFM=F,LRECL=256,BLKSIZE=256,BUFNO=12
         END   LPAXTRCT
