PROC 0
   GLOBAL TYPE RECFM GOODBLK BLKSIZE REC RBLK MIN MAX DEVICE TEMP +
          RTRK RCYL BLKEXT1 CYLEXT1 TRKEXT1 JCL1 JCL2 JCL3 JCL4 TCYL +
          BTRK DEBUG BOVR
   IF &DEBUG NE &STR() THEN +
     CONTROL LIST CONLIST MSG
   SET &VIOFLAG = 0
   SET &SYSDFLG = 0
   SET &UNITS = &TYPE
   IF &REC GT &GOODBLK THEN +
     SET &GOODBLK = &REC + 4
BLKSIZ: +
   IF &RECFM = &STR(VB) THEN +
     SET &GOODBLK = &GOODBLK - 4
   SET &BLKSIZE = (&GOODBLK / &REC) * &REC
   SET &RBLK  = &BLKSIZE / &REC
   IF &DEVICE = TAPE × &DEVICE = TAPE6 THEN GOTO TAPEJCL
   SET &BLTRK = &BTRK / (&BLKSIZE + &BOVR)
MAXRECS: +
   IF &MAX < &MIN THEN +
     SET &MAX = &MIN
SPACECAL: +
   SET &PRIBLKS = ((&MIN * &REC) + (&BLKSIZE - 1)) / &BLKSIZE
   SET &DIFF = &MAX - &MIN
   SET &SECBLKS = (&PRIBLKS + 9) / 10
   SET &BLKEXT1 = &RBLK * &PRIBLKS
   SET &BLKTOT  = &RBLK * &SECBLKS * 15 + &BLKEXT1
CYLLABEL: +
   SET &MINUS1 = (&BLTRK * &TCYL) - 1
   SET &PRICYLS = (&PRIBLKS + &MINUS1) / (&BLTRK * &TCYL)
   SET &SECCYLS = (&SECBLKS + &MINUS1) / (&BLTRK * &TCYL)
   SET &CYLEXT1 = &RBLK * &BLTRK * &TCYL * &PRICYLS
   SET &CYLTOT  = &RBLK * &BLTRK * &TCYL * &SECCYLS * 15 + &CYLEXT1
TRKLABEL: +
   SET &PRITRKS = (&PRIBLKS + (&BLTRK - 1)) / &BLTRK
   SET &SECTRKS = (&SECBLKS + (&BLTRK - 1)) / &BLTRK
   SET &TRKEXT1 = &RBLK * &BLTRK * &PRITRKS
   SET &TRKTOT  = &RBLK * &BLTRK * &SECTRKS * 15 + &TRKEXT1
VIOCAND: +
   IF &TEMP = Y THEN +
     IF (&PRICYLS LE 2) AND +
        (&SECCYLS * 15) LT 16 THEN DO
       IF &RECFM = &STR(VB) THEN +
         SET &GOODBLK = 2032
       ELSE +
         SET &GOODBLK = 2036
       SET &BLKSIZE = &GOODBLK / &REC * &REC    /* GET BLOCK SIZE
       SET &BLTRK = &BTRK / (&BLKSIZE + &BOVR)  /* GET BLOCKS PER TRACK
       SET &RBLK  = &BLKSIZE / &REC             /*                    */
       SET &PRIBLKS = ((&MIN * &REC) + (&BLKSIZE - 1)) / &BLKSIZE
       SET &DIFF = &MAX - &MIN
       SET &SECBLKS = (&PRIBLKS + 9) / 10
       SET &BLKEXT1 = &RBLK * &PRIBLKS
       SET &BLKTOT  = &RBLK * &SECBLKS * 15 + &BLKEXT1
       SET &PRITRKS = (&PRIBLKS + (&BLTRK - 1)) / &BLTRK
       SET &SECTRKS = (&SECBLKS + (&BLTRK - 1)) / &BLTRK
       SET &TRKEXT1 = &RBLK * &BLTRK * &PRITRKS
       SET &TRKTOT  = &RBLK * &BLTRK * &SECTRKS * 15 + &TRKEXT1
       SET &TMPTYP = &STR(VIODA)
       SET &VIOFLAG = 1
       SET &UNITS = TRK
       END
     ELSE DO
       SET &SYSDFLG = 1
       SET &TMPTYP = &STR(SYSDA)
       SET &UNITS = &STR(BLK)
       END
   IF &RECFM = &STR(VB) THEN +
     SET &BLKSIZE = &EVAL(&BLKSIZE + 4)
   SET &RTRK    = &RBLK * &BLTRK
   SET &RCYL    = &RBLK * &BLTRK * &TCYL
   SET &A     = &BLKSIZE
   SET &RLSE = &STR(,RLSE)
   IF &UNITS = BLK THEN DO
     SET &TYPE2 = BLOCKS
     SET &PRIMALC = &PRIBLKS
     SET &TMP = &TCYL * 67 / 100        /* 2/3 OF A CYLINDER */
     IF &PRITRKS GE &TMP THEN +
       SET &RLSE = &STR(,,,ROUND)
     ELSE +
       SET &RLSE = &STR()
     SET &SECALC  = &SECBLKS
     SET &RECEXT1 = &BLKEXT1
     SET &RECTOT  = &BLKTOT
     END
   ELSE +
     IF &UNITS = CYL THEN DO
       SET &TYPE2 = CYLINDERS
       SET &A     = CYL
       SET &PRIMALC = &PRICYLS
       SET &SECALC  = &SECCYLS
       SET &RECEXT1 = &CYLEXT1
       SET &RECTOT  = &CYLTOT
       END
     ELSE +
       IF &UNITS = TRK THEN DO
         SET &TYPE2 = TRACKS
         SET &A     = TRK
         SET &PRIMALC = &PRITRKS
         SET &SECALC  = &SECTRKS
         SET &RECEXT1 = &TRKEXT1
         SET &RECTOT  = &TRKTOT
         END
DASDJCL: +
   SET &RTRK = &RBLK * &BLTRK
BLKCAL2: +
   SET &B = &PRIMALC
   SET &C = &SECALC
   IF &VIOFLAG = 1 OR +
      &SYSDFLG = 1 THEN +
     GOTO VIOJCL
   SET &JCL1 = &STR(THIS IS THE RECOMMENDED JCL TO ALLOCATE IN &TYPE2)
   SET &JCL2 = &STR(//XXX DD DSN=DATASET-NAME,VOL=REF=VOL-REF,+
                    DISP=(NEW,CATLG,DELETE),)
   IF &SECALC > 0 THEN +
   SET &JCL3 = &STR(//       SPACE=(&A,(&B,&C)&RLSE),)
   IF &SECALC = 0 THEN +
   SET &JCL3 = &STR(//       SPACE=(&A,(&B)&RLSE),)
   SET &JCL4 = &STR(//       DCB=(RECFM=&RECFM,LRECL=&REC,+
                    BLKSIZE=&BLKSIZE))
/**********************************************************************/
/* THE ISPEXEC INSTRUCTIONS BELOW ARE TO PUT THE JCL INTO A TEMP      */
/* DATASET SO THAT THE USER CAN COPY IT INTO ANY OTHER DATASET OR     */
/* MODIFY IT.  THE INSTRUCTIONS ARE DEPENDENT ON THE ISPF 'CNTL'      */
/* DATASET.  SIMPLY REMOVE THE SLASK ASTERIKS TO IMPLEMENT.           */
/*                     ***********************                        */
/* ISPEXEC FTOPEN TEMP                                                */
/* ISPEXEC FTINCL BLKOPT10                                            */
/* ISPEXEC FTCLOSE                                                    */
/* ISPEXEC VGET ZTEMPF                                                */
/* ISPEXEC EDIT DATASET('&ZTEMPF.')                                   */
/* CONTROL NOMSG                                                      */
/* DEL '&ZTEMPF'  */   /*  THE TEMP DATASET IS DELETED NOT LEAVE      */
                       /*  NOT TO LEAVE STRANDED DATASETS ON DASD     */
/* CONTROL MSG                                                        */
/**********************************************************************/
   GOTO DISPP10
   END
VIOJCL: +
   SET &JCL1 = &STR(THIS IS THE RECOMMENDED JCL TO ALLOCATE &TMPTYP +
                    (TEMPORARY))
   SET &JCL2 = &STR(//XXX DD DSN=DATASET-NAME,UNIT=&TMPTYP,+
                    DISP=(,PASS),)
   IF &SECALC > 0 THEN +
   SET &JCL3 = &STR(//       SPACE=(&A,(&B,&C)&RLSE),)
   IF &SECALC = 0 THEN +
   SET &JCL3 = &STR(//       SPACE=(&A,(&B)),)
   SET &JCL4 = &STR(//       DCB=(RECFM=&RECFM,LRECL=&REC,+
                    BLKSIZE=&BLKSIZE))
/**********************************************************************/
/* THE ISPEXEC INSTRUCTIONS BELOW ARE TO PUT THE JCL INTO A TEMP      */
/* DATASET SO THAT THE USER CAN COPY IT INTO ANY OTHER DATASET OR     */
/* MODIFY IT.  THE INSTRUCTIONS ARE DEPENDENT ON THE ISPF 'CNTL'      */
/* DATASET.  SIMPLY REMOVE THE SLASK ASTERIKS TO IMPLEMENT.           */
/*                     ***********************                        */
/* ISPEXEC FTOPEN TEMP                                                */
/* ISPEXEC FTINCL BLKOPT10                                            */
/* ISPEXEC FTCLOSE                                                    */
/* ISPEXEC VGET ZTEMPF                                                */
/* ISPEXEC EDIT DATASET('&ZTEMPF.')                                   */
/* CONTROL NOMSG                                                      */
/* DEL '&ZTEMPF'  */   /*  THE TEMP DATASET IS DELETED NOT LEAVE      */
                       /*  NOT TO LEAVE STRANDED DATASETS ON DASD     */
/* CONTROL MSG                                                        */
/**********************************************************************/
   GOTO DISPP10
   END
TAPEJCL: +
   SET &JCL1 = &STR(THIS IS THE RECOMMENDED JCL TO ALLOCATE TAPE +
                    DATASET)
   SET &JCL2 = &STR(//XXX DD DSN=DATASET-NAME,VOL=PRIVATE,UNIT=TAPE,+
                    DISP=(NEW,CATLG,DELETE),)
   IF &DEVICE = TAPE  THEN DO
   SET &JCL3 = &STR(//       DCB=(RECFM=&RECFM,LRECL=&REC,+
                    BLKSIZE=&BLKSIZE))
     END
   ELSE DO
   SET &JCL3 = &STR(//       DCB=(RECFM=&RECFM,LRECL=&REC,+
                    BLKSIZE=&BLKSIZE,DEN=3))
   SET &JCL4 = &STR()
     END
/**********************************************************************/
/* THE ISPEXEC INSTRUCTIONS BELOW ARE TO PUT THE JCL INTO A TEMP      */
/* DATASET SO THAT THE USER CAN COPY IT INTO ANY OTHER DATASET OR     */
/* MODIFY IT.  THE INSTRUCTIONS ARE DEPENDENT ON THE ISPF 'CNTL'      */
/* DATASET.  SIMPLY REMOVE THE SLASK ASTERIKS TO IMPLEMENT.           */
/*                     ***********************                        */
/* ISPEXEC FTOPEN TEMP                                                */
/* ISPEXEC FTINCL BLKOPT10                                            */
/* ISPEXEC FTCLOSE                                                    */
/* ISPEXEC VGET ZTEMPF                                                */
/* ISPEXEC EDIT DATASET('&ZTEMPF.')                                   */
/* CONTROL NOMSG                                                      */
/* DEL '&ZTEMPF'  */   /*  THE TEMP DATASET IS DELETED NOT LEAVE      */
                       /*  NOT TO LEAVE STRANDED DATASETS ON DASD     */
/* CONTROL MSG                                                        */
/**********************************************************************/
DISPP10: +
   END
