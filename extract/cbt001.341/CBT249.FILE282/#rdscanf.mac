***********************************************************************
*                                                                     *
*              OPEN REQUESTED FILE                                    *
*                                                                     *
***********************************************************************
         SPACE
*  THIS SUBROUTINE ATTEMPTS TO OPEN THE DD STATEMENT WHOSE            *
*  NAME IS GIVEN IN NEWDDNAM (IF A DCB HAS ALREADY BEEN OPENED        *
*  FOR THE DD STATEMENT, AND THE DD CARD DOES NOT                     *
*  POINT TO A SEQUENTIAL FILE                                         *
*  THEN THE EXISTING DCB IS USED).                                    *
*                                                                     *
*  IF THE DD STATEMENT IS OPENED SUCCESSFULLY, AND                    *
*  HAPPENS TO POINT TO A PARTITIONED DATA SET, THEN THE               *
*  DIRECTORY OF THE PDS IS FURTHER SEARCHED FOR THE MEMBER            *
*  SPECIFIED IN BLDLNAME.                                             *
*                                                                     *
*  IF ANYTHING FAILS, THE ROUTINE EXITS WITH RDD SET EQUAL TO 0.      *
*  OTHERWISE, UPON EXIT RDD POINTS TO AN OPEN DDBLOCK.                *
*                                                                     *
         SPACE
RDSCANF $ENTER ,
         SPACE
         USING IOBLOK,RPARMPTR
         MVI   SCANFLAG,X'00'      INITIALIZE THE SCAN FLAG
         SPACE
         MVC   LOGDDNAM,NEWDDNAM   SAVE LOGICAL DDNAME
         LA    R1,NEWDDNAM         THIS IS USER'S NAME
        $CALL  RDDDREP             ANY REPLACEMENT SPECIFIED .Q
         MVC   NEWDDNAM,0(R1)      USE IT INSTEAD
        $IFOFF SWITCHS,CMSWS,SCAN03     BRANCH IF NOT CMS
         MVC   LOGDDNAM,NEWDDNAM   ALSO CHANGE LOGICAL DDNAME
         SPACE
*  SEARCH FOR THE INDICATED DDNAME                                    *
         SPACE
SCAN03   DS    0H
         SR    RRMQ,RRMQ           ASSUME NOT A REMOTE
        $IFANY IOFLAG,(IO$AP,IO$IM),SCAN03D  BRANCH IF NOT REMOTE
         L     RRMQ,RMQANCH        START OF REMOTE
         USING RMQD,RRMQ           AND TELL ASSEMBLER
SCAN03A  DS    0H
         LTR   RRMQ,RRMQ           AT THE END .Q
         BZ    SCAN03B             NOT FOUND IF YES
        $IFON  RMQFLAG,RMQDEL,SCAN03Z    BRANCH IF REMOTE DELETED
        $IFOFF IOFLAG,IO$AURM,SCAN03Y    BRANCH IF NOT AUTO REMOTE
         CLC   RMQPAGE,PAGECNT     REMOTE ELIGIBLE FOR SIGNAL .Q
         BNL   SCAN03Z             BRANCH IF NOT
SCAN03Y  DS    0H
         CLC   RMQNAME,IONAME      IS THIS IT .Q
         BE    SCAN03B             BRANCH IF YES
SCAN03Z  DS    0H
         L     RRMQ,RMQCHN         NEXT ENTRY
         B     SCAN03A             AND TRY AGAIN
         SPACE
SCAN03B  DS    0H
        $IFOFF IOFLAG,IO$AURM,SCAN03X   BRANCH IF NOT AUTO REMOTE
         MVC   RMQPAGE,PAGECNT     DISABLE FOR REST OF PAGE
SCAN03X  DS    0H
         MVC   IOMEMB,IONAME       REMOTE IDENTIFIER IS MEMBER
         CLC   F0,IONAME           A NUMBERED REMOTE .Q
         BNE   SCAN03C             BRANCH IF NOT
         L     RA,IONAME+4         REMOTE NUMBER
         LA    RB,IOMEMB           WHERE TO PUT IT
         BAL   RETURN,BTOC         CONVERT TO CHAR
SCAN03C  DS    0H
         MVC   IONAME,=CL8'*.RM*'  DUMMY REMOTE DDNAME
         LTR   RRMQ,RRMQ           SUCCESSFUL .Q
         BZ    SCAN03G             BRANCH IF NOT
        $IFOFF RMQFLAG,RMQDM,SCAN03G    BRANCH IF NOT 'MACRO'
         MVC   IONAME,=CL8'*.DM*'  DUMMY MACRO DDNAME
SCAN03G  DS    0H
         MVC   NEWDDNAM,IONAME     FOR DDBLOCK SEARCH ALSO
         MVC   LOGDDNAM,IONAME     FOR PRINTING PURPOSES TOO
         MVC   BLDLNAME,IOMEMB     FOR PUSHDOWN AND ERRORS
         LTR   RRMQ,RRMQ           SUCCESS .Q
         BZ    SCANFL04            BRANCH IF NOT
         B     SCAN05              AND CONTINUE
         SPACE
SCAN03D  DS    0H
        $IFON  SWITCHS,CMSWS,SCAN04A  BRANCH IF UNDER CMS
         L     RA,CVTPTR           -> THE CVT
         L     RA,CVTTCB(,RA)      -> PAIR OF TCB WORDS
         L     RA,4(,RA)           -> CURRENT TCB
         L     RA,TCBTIO(,RA)      -> CURRENT TIOT
         LA    RA,24(,RA)          -> DDNAME PART OF TIOT
         SPACE
         SR    RB,RB               INITIALIZE IC REGISTER
SCAN04   DS    0H
         AR    RA,RB               ADVANCE TO NEXT ENTRY
         IC    RB,0(,RA)           GET LENGTH OF THIS ENTRY
         LTR   RB,RB               IS IT ZERO .Q
         BZ    SCANFL04            IF SO, DDNAME NOT FOUND
         CLC   NEWDDNAM,4(RA)      IS THIS THE DESIRED DDNAME .Q
         BNE   SCAN04              LOOK AGAIN IF NOT FOUND
         SPACE
*  IF DDNAME POINTS TO A TERMINAL, SET SPECIAL FLAGS                  *
         SPACE
         TM    3(RA),X'20'         IS THIS A TERMINAL DATASET .Q
         BZ    SCAN05              SKIP NEXT INSTRUCTION, IF NOT
         OI    SCANFLAG,B$PSFRCE+B$TERM SET FLAGS
        $ON    IOFLAG,IO$TSO       TURN ON IN IO BLOCK TOO
         B     SCAN05              AND CONTINUE
         SPACE
*  UNDER CMS WE DO THINGS DIFFERENTLY                                 *
         SPACE
SCAN04A  DS    0H
         MVC   STATE+8(8),NEWDDNAM GET FILENAME
         MVC   STATE+16(8),FMSCR1  PRIMARY TYPE
         XC    ODE(2),ODE          CLEAR ODE SPECIFICATION
         LA    R1,STATE            POINT TO PLIST
         SVC   202                 CAN WE FIND IT .Q
         DC    AL4(SCAN04B)        ERROR EXIT
         OI    SCANFLAG,B$PSFRCE   FORCE DSORG PS FOR TYPE 'SCRIPT'
         B     SCAN04D             SUCCESS
SCAN04B  DS    0H
         MVC   STATE+16(8),FMSCR2  SECONDARY FILE TYPE
         XC    ODE(2),ODE          CLEAR ODE SPECIFICATION
         LA    R1,STATE            POINT TO PLIST
         SVC   202                 CAN WE FIND IT NOW
         DC    AL4(SCAN04C)        ERROR EXIT
         B     SCAN04D             SUCCESS NOW
SCAN04C  DS    0H
         DEVTYPE NEWDDNAM,DWORD    GET SOME INFORMATION
         LTR   R15,R15             TEST RESULT
         BNZ   SCANFL04            NON ZERO, DDNAME NOT FOUND
         CLC   DWORD(4),=X'10000820' A 1052 IN CMS .Q
         BNE   SCANFL04            ERROR IF NOT
        $ON    IOFLAG,IO$CMS       TURN ON CMS FLAG
         OI    SCANFLAG,B$PSFRCE+B$TERM SET OTHER FLAGS
         B     SCAN05              FILE DEF DONE IN INTERFACE
         SPACE
SCAN04D  DS    0H
         L     RB,AFSTCOPY         GET ADDR OF FST
         USING FST,RB              TELL ASSEMBLER
         MVC   FDDDNAM,FSTN        FILE NAME
         MVC   FDNAME,FSTN         FILE NAME
         MVC   FDTYPE,FSTT         FILE TYPE
         MVC   FDMODE(2),FSTM      FILE MODE
         MVC   FDRECFM(1),FSTFV    RECFM
         L     RA,FSTIL            ITEM LENGTH
         DROP  RB
         SPACE
         CLI   FDRECFM,FDRECFMV    IS THIS A VARIABLE FILE .Q
         BNE   SCAN04E             BRANCH IF NOT
         A     RA,F4               BUMP TO INCLUDE RDW LENGTH
SCAN04E  DS    0H
         LA    RB,FDLRECL          TARGET FOR LRECL
         BAL   RETURN,BTOC         CHANGE TO CHARACTER
         LA    RB,FDBLOCK          TARGET FOR BLOCKSIZE
         CLI   FDRECFM,FDRECFMV    IS RECFM VARIABLE .Q
         BNE   SCAN04F             BRANCH IF NOT
         A     RA,F4               BUMP BY FOUR FOR BLOCK DESCRIPTOR
SCAN04F  DS    0H
         BAL   RETURN,BTOC         CHANGE TO CHARACTER
         LA    R1,FILEDEF          POINT TO PLIST
         SVC   202                 CREATE FILE DEFINITION
         DC    AL4(SCAN04C)        ERROR EXIT
         B     SCAN05              AND CONTINUE
         SPACE
BTOC     DS    0H
         CVD   RA,DWORD            CONVERT TO PACKED
         MVC   OPTWORK(7),=X'20202020202120' EDIT MASK
         LA    R1,OPTWORK+6        IN CASE NOTHING
         EDMK  OPTWORK(7),DWORD+4  EDIT IN NUMBER
         LR    RA,R1               THIS IS THE START
         LA    R1,OPTWORK+6        THIS IS THE END
         SR    R1,RA               THIS IS LENGTH-1
         MVC   0(8,RB),BLANKS      BLANK TARGET
         EX    R1,BTOCMVC          MOVE RESULT
         CVB   RA,DWORD            RESTORE INPUT NUMBER
         BR    RETURN              AND RETURN
BTOCMVC  MVC   0(*-*,RB),0(RA)     EXECUTED MOVE RESULT
         SPACE
*  CHECK TO SEE IF DCB HAS ALREADY BEEN OPENED FOR THIS DD            *
         SPACE
SCAN05   DS    0H
         L     RDD,FIRSTDD         ADDRESS FIRST DDBLOCK
SCAN06   DS    0H
         LTR   RDD,RDD             ARE WE AT END OF THE LIST
         BZ    SCAN08              IF  SO, MUST OPEN A NEW ONE
         CLC   DDDDNAM,NEWDDNAM    IS THE DDNAME THE SAME
         BE    SCAN07              BRANCH IF YES
         L     RDD,DDNEXT          ELSE ADVANCE TO NEXT DDBLOCK
         B     SCAN06              AND CHECK AGAIN
         SPACE
SCAN07   DS    0H
         TM    DDDCB+DCBDSORG,DSORG$PS IS IT SEQUENTIAL .Q
         BZ    SCAN14              IF NOT, USE THIS OPEN DCB
         TM    DDFLAG,DD$NOCLO     IS THIS A NEVER-CLOSED DCB
         BO    SCAN14              IF SO, DON'T REOPEN ANOTHER COPY
         SPACE
         OI    SCANFLAG,B$PSFRCE   FORCE DSORG=PS IN THE DCB
         SPACE
*  OPEN A NEW DDBLOCK FOR THIS FILE.............                      *
         SPACE
SCAN08   DS    0H
         LR    R0,RPARMPTR         RETAIN IOBLOCK BASE
         LA    R1,DDBLKLN          NEED THIS MUCH STORAGE
        $CALL  GETCELL             GET AN AREA
         BC    BNEG,SCANFL01       BRANCH IF FAILED
         LR    RDD,TEMP            POINT TO GOTTEN AREA
         LR    RPARMPTR,R0         RESTORE IOBLOCK BASE
         XC    DDBLOCK(DDBLKLN),DDBLOCK ZERO ENTIRE BLOCK
         SPACE
*  LINK THE NEW DDBLOCK ONTO THE CHAIN                                *
         SPACE
         L     RA,FIRSTDD          ADDRESS OF FIRST DDBLOCK
         ST    RA,DDNEXT           LINK NEW DDBLOCK TO START OF CHAIN
         LTR   RA,RA               IS THE CHAIN CURRENTLY NULL
         BNZ   *+8                 IF SO, THIS IS ALSO LAST DDBLOCK
         LA    RA,FIRSTDD
         ST    RDD,DDPREV-DDBLOCK(,RA) SET PREV PTR ON NEXT BLOCK
         ST    RDD,FIRSTDD         AND ANCHOR THE CHAIN
         SPACE
*  INITIALIZE THE NEW DDBLOCK................                         *
         SPACE
         MVC   DDDDNAM,NEWDDNAM    RECORD DDNAME
         MVC   DDLDDNAM,LOGDDNAM   RECORD LOGICAL DD NAME
         MVC   DDDCB(DCBLEN),SKELDCB INITIALIZE THE DCB
         MVC   DDDCB+DCBDDNAM(8),NEWDDNAM DDNAME IN DCB
         MVI   DDDCB+DCBDSORG,X'00' ZERO OUT THE DSORG
         SPACE
*  IF A REMOTE, VERY LITTLE WORK TO DO                                *
         SPACE
        $IFANY IOFLAG,(IO$AP,IO$IM),SCAN09   BRANCH IF NOT REMOTE
         OI    DDFLAG,DD$NOCLO+DD$RM    SET REMOTE AND NOCLOSE
         MVI   DDDCB+DCBLRECL+1,240     SET DUMMY LRECL
         B     SCAN18              AND PROCEED
         SPACE
*  IF DATASET IS A TERMINAL, FORCE RECFM=V FOR A GOOD OPEN            *
         SPACE
SCAN09   DS    0H
         TM    SCANFLAG,B$TERM     IS IT A TERMINAL
         BZ    SCAN10              BRANCH IF NOT
         MVI   DDDCB+DCBRECFM,X'40' SET RECFM=V
         SPACE
*  SET UP THE OPEN/CLOSE/RDJFCB PARAMETER LIST                        *
         SPACE
SCAN10   DS    0H
         LA    RA,DDDCB            ADDRESS OF THE DCB
         O     RA,OPCLOPEN         INCLUDE OPEN FLAGS
         ST    RA,OPCLPARM         STORE IN PARM LIST
         SPACE
         TM    SCANFLAG,B$PSFRCE   IF DSORG=PS IS BEING FORCED, DON'T
         BO    SCAN12              BOTHER TO READ THE JFCB
         SPACE
         RDJFCB MF=(E,OPCLPARM)    ELSE READ THE JFCB
         SPACE
         TM    JFCBTSDM,X'20'      SYSIN FILE .Q
         BNO   SCAN11              BRANCH IF NOT
         NI    DDDCB+DCBMACR,FF-X'40'   READ WITH NO POINT
SCAN11   DS    0H
         CLC   =C'NULLFILE ',JFCBDSNM IS THIS DUMMY .Q
         BE    SCAN12              YES, FORCE 'PS'
         CLI   JFCBELNM,C' '       ANY MEMBER NAME ON DDCARD .Q
         BNE   SCAN12              BRANCH IF YES
         MVC   DDDCB+DCBDSORG(1),JFCDSORG SET DSORG FOR OPEN
         B     SCAN13              BRANCH TO OPEN
         SPACE
SCAN12   DS    0H
         MVI   DDDCB+DCBDSORG,DSORG$PS FORCE DSORG=PS
         SPACE
SCAN13   DS    0H
         MVC   RDEXLST+1(3),=AL3(RDEXIT)  DEFINE OPEN EXIT ADDR
         OPEN  MF=(E,OPCLPARM)     OPEN THE INPUT FILE
         SPACE
         TM    DDDCB+DCBOFLGS,X'10' WAS OPEN SUCCESSFUL .Q
         BZ    SCANFL02            BRANCH IF IT FAILED
         OI    DDDCB+DCBOFLGS,X'08' SET CONCATENATION ALLOWED
         SPACE
SCAN14   DS    0H
        $IFOFF IOFLAG,IO$NOCLO,SCAN15  BRANCH IF NOCLOSE NOT REQUESTED
         OI    DDFLAG,DD$NOCLO     ELSE SET FLAG IN DDBLOCK
         SPACE
SCAN15   DS    0H
        $IFNONE IOFLAG,(IO$AP,IO$IM),SCAN18  BRANCH IF A REMOTE
         TM    DDDCB+DCBDSORG,DSORG$PO IF DATA SET IS PARTITIONED
         BZ    SCAN16              MUST CHECK TO SEE THAT IT CONTAINS
         BLDL  DDDCB,BLDLLIST      THE DESIRED MEMBER
         LTR   R15,R15             TEST WHETHER MEMBER WAS FOUND
         BNZ   SCANFL02            IF NOT, BRANCH TO FAILURE CODE
         B     SCAN18              REAL MEMBER IS BEING USED
         SPACE
SCAN16   DS    0H
         CLI   IOMEMB,C' '         WAS AN EXPLICIT MEMBER NAME GIVEN
         BE    SCAN17              IF NOT, ACCEPT THE SEQUENTIAL FILE
         SPACE
         MVI   EFLAG052,ERRSET     SET ERROR FLAG
        $CALL  RDERROR             ELSE COMMENT...MEMBER NAME IGNORED
         SPACE
SCAN17   DS    0H
         MVC   BLDLNAME,BLANKS     MEMBER NAME NOT BEING USED
         SPACE
SCAN18   DS    0H
         LH    RA,DDUSECT          BUMP THE USAGE COUNT
         LA    RA,1(,RA)           IN THE DDBLOCK
         STH   RA,DDUSECT          BY ONE
         SPACE
SCAN19   DS    0H
        $RESTOR KEEP=(RDD,RRMQ)    RESTORE CALLER'S REGISTERS
         BR    RETURN              RETURN TO THE CALLER
         SPACE
*  THIS CODE PROCESSES ERRORS WHICH CAN ARISE IN THE ABOVE SEARCH     *
*  FOR THE FILE WHICH THE USER SPECIFIED.                             *
         SPACE
SCANFL01 DS    0H
         MVI   EFLAG024,ERRSET     NO STORAGE AVAILABLE
         B     SCANFL04            GO TO RETURN
         SPACE
SCANFL02 DS    0H
        $CALL  RDCLOSE             CLOSE DDBLOCK IF NOT USED
         SPACE
SCANFL04 DS    0H
         SR    RDD,RDD             SET FILE NOT FOUND FLAG
         SR    RRMQ,RRMQ           AND IF IT IS A REMOTE
         B     SCAN19              RETURN TO THE CALLER
         SPACE
         DROP  RPARMPTR,RRMQ
