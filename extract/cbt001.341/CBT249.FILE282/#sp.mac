***********************************************************************
*                                                                     *
*              .SP (SPACE) --- CONTROL                                *
*                                                                     *
***********************************************************************
         SPACE
SP      $ENTER ,
        $CALL  PRINTNB             CLEAR OUT PRINT BUFFER
        $OFF   SKSPFLG,(SKSPABS,SKSPCND)     CLEAR ARG TYPE
        $IFON  SWITCHS,FLDSP,SP00  BRANCH IF LEADING SPACES ON
        $IFON  SWITCHS,FFIRST,SP00 BRANCH IF VERY FIRST PAGE
        $ON    SKSPFLG,SKSPSK      OTHERWISE, TREAT LIKE A SKIP
SP00     DS    0H
         LA    R0,1                ONE LINE BY DEFAULT
         LNR   R0,R0               INDICATE THIS IS A DEFAULT
         SPACE
SP01     DS    0H
        $CALL  GETYESNO            GET AND TEST ARGUMENT
         BC    BOMIT,SP04          BRANCH IF THAT'S ALL
         CLI   YNRESULT,YNABS      WAS IT 'ABSOLUTE' .Q
         BNE   SP02                BRANCH IF NOT
        $ON    SKSPFLG,SKSPABS     SET ABSOLUTE SWITCH
         B     SP01                CONTINUE
SP02     DS    0H
         CLI   YNRESULT,YNCND      WAS IT 'CONDITIONAL' .Q
         BNE   SP03                BRANCH IF NOT
        $ON    SKSPFLG,SKSPCND     SET CONDITIONAL SWITCH
         B     SP01                CONTINUE
SP03     DS    0H
         LTR   R0,R0               GOT A VALID NUMERIC ALREADY .Q
         BNM   SPE01               YES, ERROR
         ST    COUNT,ARGSTART      RESCAN FOR NUMERIC
        $CALL  GETNUM              GET NUMERIC OPERAND
         BC    BDNO+BNEG,SPE01     ERROR IF NEGATIVE OR INVALID
         LR    R0,COUNT            REMEMBER NUMERIC
         B     SP01                CONTINUE
         SPACE
SP04     DS    0H
         LPR   COUNT,R0            NUMERIC RESULT OF SCAN
         BNZ   SP05                BRANCH IF NOT ZERO
        $ON    SWITCHS,FNOCT       SET DON'T COUNT SWITCH
         XC    SKSP,SKSP           CLEAR COND SKIP/SPACE DATA
         LA    R15,WRETDC          SET DON'T COUNT RETURN CODE
         B     SPDNE1              AND GO TO RETURN
         SPACE
SP05     DS    0H
        $IFON  SKSPFLG,SKSPABS,SP06     BRANCH IF ABSOLUTE
         LR    R0,COUNT            SPACE COUNT
         MH    COUNT,DSCNT         MULT BY SPACING FACTOR
         AR    COUNT,R0            PLUS ORIGINAL SPACING
SP06     DS    0H
        $IFOFF SKSPFLG,SKSPCND,SP07     BRANCH IF NOT CONDITIONAL
         STH   COUNT,SKSPCCNT      SAVE CONDITIONAL COUNT
         MVC   SKSPFLG2,SKSPFLG    AND FLAGS
         MVI   SKSPFLG,X'00'       CLEAR CURRENT FLAGS
         B     SPDNE               GO TO RETURN
         SPACE
SP07     DS    0H
         MVI   SKSPFLG2,X'00'      CLEAR CONDITIONAL FLAGS
         XC    SKSPCCNT,SKSPCCNT   CLEAR CONDITIONAL COUNT
         CLI   ICORFLG,ICORNONE    NOT FORMATTING IN CORE .Q
         BNE   SPFN                BRANCH IF NOT
        $CALL  SPEX                SKIP/SPACE EXECUTION
         B     SPDNE               GO TO RETURN
         SPACE
SPFN     DS    0H
         MVI   PRNTRCC,SINGLSP     SINGLE SPACE CARRIAGE CONT
         LA    R0,BLNKLINE         POINT TO BLANK LINE RDW
SPFN01   DS    0H
        $CALL  FNSAVE              SAVE BLANK LINE IN FOOTNOTE
         BCT   COUNT,SPFN01        LOOP TILL DONE
         MVI   SKSPFLG,X'00'       CLEAR CURRENT FLAGS
         B     SPDNE               GET NEXT INPUT LINE
         SPACE
SPE01    DS    0H
         MVI   EFLAG005,ERRSET     INVALID OPERAND
         SPACE
SPDNE    DS    0H
         LA    R15,0               SET RETURN CODE
SPDNE1   DS    0H
        $EXIT  RC=(R15)            RETURN TO CALLER
         SPACE 2
***********************************************************************
*                                                                     *
*              SPACE EXECUTION ROUTINE                                *
*                                                                     *
***********************************************************************
         SPACE
*        ON ENTRY  --  (COUNT) IS NUMBER OF LINES TO SPACE
         SPACE
SPEX    $ENTER ,
SPEX01   DS    0H
         LH    TEMP,PLCT           LINES LEFT ON THIS PAGE
        $IFOFF SWITCHS,FEMPTY,SPEX02    BRANCH IF PAGE NOT EMPTY
         SH    TEMP,TOPMRG         LESS TOP MARGIN
SPEX02   DS    0H
         SR    TEMP,COUNT          LESS THIS SPACE OPERAND
         LH    R1,BMMRG            BOTTOM MARGIN
         AH    R1,FNSEP            PLUS FOOTNOTE MARGIN
         CR    TEMP,R1             TOO CLOSE TO BOTTOM OF PAGE .Q
         BNL   SPEX04              NO, ISSUE SPACES ONLY
         SH    COUNT,PLCT          YES, PAGE EJECT NEEDED, ADJUST COUNT
        $IFOFF SWITCHS,FEMPTY,SPEX03    BRANCH IF PAGE NOT EMPTY
         AH    COUNT,TOPMRG        PLUS TOP MARGIN
SPEX03   DS    0H
         AH    COUNT,BMMRG         PLUS BOTTOM MARGIN
         AH    COUNT,FNSEP         AND FOOTNOTE MARGIN
        $CALL  PAGE                GENERATE PAGE EJECT
        $IFON  SKSPFLG,SKSPSK,SPEX09    BRANCH IF SKIP
        $IFOFF SWITCHS,FLDSP,SPEX09     BRANCH IF NO LEADING SPACES
         LTR   COUNT,COUNT         TEST FOR NO MORE SPACES AT BOTTOM
         BZ    SPEX09              NO. MORE
         B     SPEX01              GET REMAINDING SPACES
SPEX04   DS    0H
         CH    TEMP,RMTRIG         SHOULD REMOTE BE TRIGGERED BEFORE
         BNL   SPEX06              SPACES EXHAUSTED .Q
         SPACE
         LH    TEMP,PLCT           LINES LEFT ON THIS PAGE
        $IFOFF SWITCHS,FEMPTY,SPEX05    BRANCH IF PAGE NOT EMPTY
         SH    TEMP,TOPMRG         LESS TOP MARGIN
         CH    TEMP,RMTRIG         AT VERY TOP OF PAGE .Q
         BL    SPEX06              YES, LET PAGETOP DO IT
SPEX05   DS    0H
         SH    TEMP,RMTRIG         SPACES TO TRIGGER REMOTE
         SR    COUNT,TEMP          NUMBER OF SPACES LEFT OVER
         LR    X1,COUNT            SAVE REMAINDER
         LR    COUNT,TEMP          ISSUE FIRST PART OF SPACES
        $CALL  SPACER              ..
         LH    R1,RMTRIG           REMOTE TO IMBED
        $CALL  RMIMBED             IMBED THE REMOTE SEQUENCE
         LTR   COUNT,X1            ANY SPACES LEFT OVER .Q
         BZ    SPEX09              IF NOT, QUIT
         B     SPEX01              FINISH UP THE SPACES
         SPACE
SPEX06   DS    0H
        $IFOFF SWITCHS,FEMPTY,SPEX08    BRANCH IF PAGE NOT EMPTY
        $IFON  SWITCHS,FFIRST,SPEX07    BRANCH IF VERY FIRST PAGE
        $IFON  SKSPFLG,SKSPSK,SPEX09    BRANCH IF SKIP
SPEX07   DS    0H
        $CALL  PAGETOP             GENERATE PAGE HEADINGS
SPEX08   DS    0H
        $CALL  SPACER              GENERATE SPACES
SPEX09   DS    0H
         MVI   SKSPFLG,X'00'       CLEAR CURRENT FLAGS
        $EXIT  RC=0                RETURN TO CALLER
