***********************************************************************
*                                                                     *
*              COLPRT --- COLUMN PRINT ROUTINE                        *
*                                                                     *
***********************************************************************
         SPACE
COLPRT  $ENTER ,
         CLI   ICOLFLG,ICOLMC      IN MULTI-COLUMN MODE .Q
         BNE   ABCOLT01            WHY ARE WE HERE IF NOT .Q
         SPACE
         OC    SKSP,SKSP           ANY CONDITIONAL SKIP/SPACE .Q
         BZ    COLT02              BRANCH IF NONE
         LA    R1,ICORSLEN         LENGTH OF DATA SAVE
        $CALL  GETCELL             GET DATA SAVE AREA
         BC    BNEG,COLT01         BRANCH IF FAILURE
         USING ICORSAVE,TEMP       TELL THE ASSEMBLER
         ST    TEMP,SCQSAVE        RETAIN AREA ADDRESS
         MVC   ICORSKSP,SKSP       RETAIN OUTSTANDING COND SKIP/SPACE
         DROP  TEMP
         B     COLT02              AND CONTINUE
COLT01   DS    0H
         MVI   EFLAG024,ERRSET     INSUFFICIENT STORAGE
         SPACE
COLT02   DS    0H
         XC    SKSP,SKSP           DELETE OUTSTANDING SKIP/SPACE
        $CALL  COLBAL              BALANCE COLUMNS IF REQUIRED
         SPACE
COLT03   DS    0H
        $OFF   SWITCHS,FOVLY       DON'T GET OVERLAY LINES
COLT04   DS    0H
         L     X3,BUFF3AD          POINT TO WORK BUFFER
         XC    0(4,X3),0(X3)       CLEAR RDW
         MVC   4(B2LG,X3),BLANKS   CLEAR DATA
        $OFF   SWITCHS,FNOCASE     SEARCH FOR NOTHING LEFT
         SPACE
         SR    X1,X1               CLEAR COLUMN COUNT
COLT05   DS    0H
         LA    X1,1(,X1)           NEXT COLUMN
         LA    R0,CDMAXC           MAX COLUMN COUNT
         CR    X1,R0               OFF THE END .Q
         BH    COLT20              BRANCH IF YES
         LR    R1,X1               COLUMN NUMBER
         BCTR  R1,0                COLUMN LESS ONE
         MH    R1,MCALEN           COLUMN DESCRIPTOR OFFSET
         LA    R1,MCAREA(R1)       COLUMN DESCRIPTOR
         USING CPFKFN,R1           AREA LOOKS LIKE THIS
         L     TEMP,CPFKFNA        FIRST LINE HERE
         LTR   TEMP,TEMP           ANYTHING THERE .Q
         BZ    COLT05              NO, GO BACK
        $ON    SWITCHS,FNOCASE     INDICATE SOMETHING LEFT
         SPACE
        $IFOFF SWITCHS,FOVLY,COLT06     BRANCH IF FIRST LINE ONLY
         USING FNQELEM,TEMP        LINE IS HERE
        $IFOFF FNQFLAG,FNQOVLY,COLT05   BRANCH IF NOT OVERLAY LINE
         B     COLT07              GET IT
COLT06   DS    0H
         L     R0,CPFKFNC          LINE REMAINING COUNT
         S     R0,F1               LESS ONE
         ST    R0,CPFKFNC          UPDATE REMAINING COUNT
         BP    COLT07              BRANCH IF MORE TO COME
         BM    ABCOLT01            SHOULD NEVER GO NEGATIVE
         XC    CPFKFNG,CPFKFNG     CLEAR FLAGS WHEN NO LINES LEFT
COLT07   DS    0H
         MVC   CPFKFNA,FNQFCHN     UNLINK THE FIRST
         DROP  R1
         SPACE
         LR    R1,X1               COLUMN NUMBER
         BCTR  R1,0                COLUMN LESS ONE
         IC    R1,CDVALC(R1)       COLUMN OFFSET
         STH   R1,SAVEH0           RETAIN COLUMN TARGET
         LA    R1,1(,R1)           CHANGE TO COLUMN NUMBER
         L     R0,BUFF3AD          POINT TO OUTPUT TARGET
        $CALL  PRTARG              LOCATE TARGET ADDRESS
         SPACE
        $IFON  TTYPE,TONLINE,COLT09     BRANCH IF ONLINE
         L     X3,BUFF3AD          POINT TO TARGET
         MVC   4(1,X3),FNQTEXT     ENTER CARRIAGE CONTROL
         LR    X3,R1               POINT TO TARGET AREA
         LH    R0,FNQRDW           LENGTH OF RECORD
         S     R0,F5               LESS RDW LENGTH/CC
         LA    R1,FNQTEXT+1        COLUMN TEXT HERE IF OFFLINE
         B     COLT11              AND CONTINUE
         SPACE
COLT09   DS    0H
         LR    X3,R1               ADDRESS OF TARGET
         L     R1,BUFF3AD          POINT TO TARGET
         LH    R1,0(,R1)           CURRENT LENGTH
         LTR   R1,R1               FIRST TIME .Q
         BZ    COLT10              BRANCH IF YES
         LH    COUNT,FNQRDW        LENGTH OF DATA (INCL RDW)
         S     COUNT,F5            LENGTH-1 OF DATA
         BM    COLT10              BRANCH IF NOTHING
         EX    COUNT,COLTBCLC      IS DATA ALL BLANK .Q
         BE    COLT10              BRANCH IF YES
         SPACE
         MVI   SAVEX0,TDEVTAB-TDEVICEA  HORIZONTAL TAB FUNCTION
         A     R1,BUFF3AD          LAST CHARACTER USED
         LA    R1,1(,R1)           FIRST FREE COLUMN
         ST    R1,SAVEF0           WHERE TO PUT RESULT
         LA    R1,SAVED0           POINT TO PARM AREA
        $CALL  LKGESC              ADD ESCAPE SEQUENCE
         BC    BNEG,COLT10         BRANCH IF TAB NOT DEFINED
         LR    X3,R1               RESUME OUTPUT HERE
         B     COLT10              AND CONTINUE
COLTBCLC CLC   FNQTEXT(*-*),BLANKS IS ONLINE COLUMN DATA ALL BLANKS .Q
         SPACE
COLT10   DS    0H
         LH    R0,FNQRDW           LENGTH OF RECORD
         S     R0,F4               LESS RDW LENGTH
         LA    R1,FNQTEXT          COLUMN TEXT HERE IF ONLINE
COLT11   DS    0H
         S     R0,F1               DECREMENT REMAINING LENGTH
         BM    COLT13              BRANCH IF NOTHING LEFT
         CLI   0(R1),C' '          BLANK 'FROM' CHARACTER .Q
         BE    COLT12              BRANCH IF YES
         MVC   0(1,X3),0(R1)       ENTER COLUMN CHARACTER
COLT12   DS    0H
         LA    X3,1(,X3)           BUMP 'TO' POINTER
         LA    R1,1(,R1)           BUMP 'FROM' POINTER
         B     COLT11              AND TRY AGAIN
COLT13   DS    0H
         LR    R1,X3               ADDED STRING ENDED HERE
         L     X3,BUFF3AD          STARTED HERE
         SR    R1,X3               LENGTH OF RESULT
         CH    R1,0(,X3)           COMPARE WITH CURRENT LENGTH
         BNH   COLT14              BRANCH IF NO GREATER
         STH   R1,0(,X3)           SET NEW LENGTH OF TARGET
         SPACE
COLT14   DS    0H
         LH    R1,FNQRDW           LENGTH OF DATA AND RDW
         LA    R1,FNQOVHD(,R1)     PLUS PREFIX OVERHEAD
         LA    R0,FNQELEM          WHERE IT'S AT
        $CALL  FREECELL            FREE THIS ENTRY
         B     COLT05              GO TO NEXT COLUMN
         DROP  TEMP
         SPACE
COLT20   DS    0H
        $IFOFF SWITCHS,FNOCASE,COLT30   BRANCH IF NOTHING LEFT
         L     X3,BUFF3AD          POINT TO WORK BUFFER
         LH    R1,0(,X3)           LENGTH OF DATA PLUS RDW
         LTR   R1,R1               TEST LENGTH FOR NULL
         BZ    COLT21              BRANCH IF NOTHING
         L     TEMP,ICORANCH       SAVE INCORE ANCHOR
         LA    R1,SCAREA           SINGLE COLUMN AREA
         ST    R1,ICORANCH         PUT IT ON THIS CHAIN
         LR    R0,X3               POINT TO DATA
        $ON    SWITCHS,OOSWS       NO OVERLAY AGAIN
        $ON    SWITCHS,TRSUP       SUPPRESS OUTPUT TRANSLATE
        $CALL  FNSAVE              SAVE LINE ON CHAIN
        $OFF   SWITCHS,OOSWS       RESET OUTPUT OVERLAY
         ST    TEMP,ICORANCH       RESET ANY OTHER ANCHOR
         B     COLT22              CHECK FOR DONE
         SPACE
COLT21   DS    0H
        $IFON  SWITCHS,FOVLY,COLT03     BRANCH IF ONLY OVERLAYS
COLT22   DS    0H
        $ON    SWITCHS,FOVLY       ONLY OVERLAYS NOW
         B     COLT04              NEXT LAYER NOW
         SPACE
COLT30   DS    0H
         L     TEMP,SCQSAVE        SAVED AREA POINTER
         LTR   TEMP,TEMP           DOES IT EXIST .Q
         BZ    COLT34              BRANCH IF NOT
         USING ICORSAVE,TEMP       SAVE AREA LOOKS LIKE THIS
         L     X1,SCQANCH          SINGLE COLUMN ANCHOR
         LTR   X1,X1               ANY DATA AT ALL .Q
         BZ    COLT33              BRANCH IF NOEN
         USING FNQELEM,X1          CHAIN LOOKS LIKE THIS
COLT31   DS    0H
         OC    FNQFCHN,FNQFCHN     LAST ENTRY IN CHAIN .Q
         BZ    COLT32              BRANCH IF YES
         L     X1,FNQFCHN          FORWARD POINTER
         B     COLT31              AND SEARCH AGAIN
COLT32   DS    0H
        $ON    FNQFLAG,FNQSSET     CONDITIONAL SKIP/SPACE SET
         MVC   FNQSKSP,ICORSKSP    RESTORE COND SKIP/SPACE DATA
COLT33   DS    0H
         XC    SCQSAVE,SCQSAVE     SINGLE COLUMN SAVE POINTER
         LA    R0,ICORSAVE         POINT TO SAVE AREA
         LA    R1,ICORSLEN         LENGTH OF DATA
        $CALL  FREECELL            RELEASE WORK AREA
         DROP  X1,TEMP
         SPACE
COLT34   DS    0H
        $OFF   SWITCHS,FOVLY       RESET OVERLAY SWITCH
         XC    RMTRIG,RMTRIG       DISABLE AUTO REMOTES
         MVC   PLCT,CDPLCT         AS YOU WERE AT START
         MVI   ICOLFLG,ICOLSC      DISABLE MULTI-COLS
         MVC   CLLZ,LLZ            RESTORE FULL LINE LENGTH
         LA    R1,SCAREA           POINT TO NEW SINGLE COLUMN DESCRIPT
        $CALL  CPFKPRT             PRINT COLUMNS
         BC    15-BOMIT,ABCOLT01   BETTER BE FINISHED
         LH    COUNT,PLCT          LINES LEFT ON PAGE
         LH    R1,BMMRG            BOTTOM MARGIN
         AH    R1,FNSEP            PLUS FOOTNOTE MARGIN
         CR    COUNT,R1            COMPARE WITH BOTTOM MARGIN
         BH    COLT35              BRANCH IF NOT FULL
        $CALL  PAGE                TERMINATE THIS PAGE
         SPACE
COLT35   DS    0H
         MVI   ICOLFLG,ICOLMC      MULTI-COLUMN AGAIN
         L     COUNT,CLLZSAVE      GET COLUMN LENGTH
         LTR   COUNT,COUNT         HAS IT BEEN DEFINED .Q
         BZ    COLT36              BRANCH IF NOT
         ST    COUNT,CLLZ          RESTORE COLUMN LENGTH
COLT36   DS    0H
         LA    COUNT,1             FIRST COLUMN
         ST    COUNT,CDCURR        PROCESS FIRST COLUMN FIRST
         MVC   CDPLCT,PLCT         SAVE LINES REMAINING IN COLUMN
        $EXIT  RC=0                RETURN TO CALLER
         SPACE
ABCOLT01 DS    0H
        $LOGERR 1015               COLUMN PRINT PROBLEMS
