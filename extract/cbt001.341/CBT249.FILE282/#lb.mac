***********************************************************************
*                                                                     *
*              .LB (LABEL) --- CONTROL                                *
*                                                                     *
***********************************************************************
         SPACE
LB      $ENTER ,
         MVC   LBWRK,BLANKS        CLEAR LABEL OPERAND
        $CALL  GETNUM              GET NUMERIC OPERAND
         BC    BOMIT,LBE01         BRANCH IF OMITTED
         BC    BDNO,LB01           BRANCH IF NOT NUMERIC
         C     COUNT,COMFILIT      MATCH CURRENT RECORD NUMBER .Q
         BNE   LBE02               ERROR IF NOT
         XC    LBWRK,LBWRK         CLEAR LABEL OPERAND
         ST    COUNT,LBWRK+4       AND ENTER NUMERIC OPERAND
         B     LB05                GO TO RETURN
         SPACE
LB01     DS    0H
         ST    COUNT,ARGSTART      RESCAN FOR IDENTIFIER
        $CALL  GETARG              GET IDENTIFIER
         LA    R0,L'LBNAME-1       MAX-1 LENGTH ALLOWED
         CR    TEMP,R0             TOO LONG .Q
         BH    LBE02               YES, INVALID LABEL
         EX    TEMP,LBMVCI         ENTER THE IDENTIFIER
         SPACE
         LA    X1,LBANCH-LBCHN+LBDSECT  GET LABEL ANCHOR POINTER
LB02     DS    0H
         USING LBDSECT,X1          TELL THE ASSEMBLER
         L     X2,LBCHN            NEXT LABEL IN CHAIN
         DROP  X1
         LTR   X2,X2               AT THE END .Q
         BZ    LB04                BRANCH OUT IF YES
         USING LBDSECT,X2          NEXT ONE TO CHECK
         CLC   LBWRK,LBNAME        INSERTION POINT .Q
         BH    LB04                BRANCH OUT IF HIGH
         BE    LB03                CHECK SOME MORE IF EQUAL
         LR    X1,X2               LINK DOWN THE CHAIN
         B     LB02                AND TRY AGAIN
LB03     DS    0H
         CLC   LBFILIT,COMFILIT    SAME LABEL AS BEFORE .Q
         BNE   LBE03               DUPLICATE LABEL ERROR
         B     LB05                AND GO TO RETURN
         DROP  X2
         SPACE
LB04     DS    0H
         LA    R1,LBLEN            LENGTH OF A NEW LABEL BLOCK
        $CALL  GETCELL             GET THE AREA
         BC    BNEG,LBE04          BRANCH IF FAILURE
         USING LBDSECT,TEMP        GOTTEN AREA PTR
         XC    LBDSECT(LBLEN),LBDSECT   CLEAR THE BLOCK
         MVC   LBFILIT,COMFILIT    ENTER RECORD NUMBER
         MVC   LBNAME,LBWRK        LABEL OPERAND
         MVC   LBCHN,LBCHN-LBDSECT(X1)  FORWARD POINTER
         ST    TEMP,LBCHN-LBDSECT(,X1)  PTR TO THE NEW
         DROP  TEMP
         SPACE
LB05     DS    0H
         CLC   LBGOTO,LBWRK        OBJECT OF A GOTO .Q
         BNE   LB06                BRANCH IF NOT
         MVC   LBGOTO,BLANKS       WE HAVE ARRIVED
LB06     DS    0H
         L     TEMP,ARGSTART       ADDR OF BLANK AFTER OPERAND
         LA    TEMP,1(,TEMP)       START OF NEXT LINE
         LA    R1,BUFF2            START OF THIS LINE
         SR    R1,TEMP             NEGATIVE LENGTH TO CHOP
         AH    R1,BUFF2LGZ         NEW LENGTH
         BNP   LB07                BRANCH IF NOTHING
         STH   R1,BUFF2LGZ         MOVE OVER THE REMAINDER
         EX    R1,LBMVCO           MOVE OVER THE REMAINDER
         LA    R15,WRETNR          RETURN CODE TO PROCESS THE RESULT
         B     LB08                AND GO TO RETURN
LB07     DS    0H
         SR    R15,R15             SET RETURN CODE TO IGNORE
         SPACE
LB08     DS    0H
        $EXIT  RC=(R15)            RETURN TO CALLER
         SPACE
LBMVCI   MVC   LBWRK(*-*),0(COUNT) MOVE OPERAND OF LABEL
LBMVCO   MVC   BUFF2(*-*),0(TEMP)  MOVE OVER .LB ARGUMENT
         SPACE
LBE01    DS    0H
         MVI   EFLAG003,ERRSET     OMITTED OPERAND
         B     LBE99               GO TO CLEAR
LBE02    DS    0H
         MVI   EFLAG005,ERRSET     RECORD NUMBER DOESN'T MATCH
         B     LBE99               GO TO CLEAR
LBE03    DS    0H
         MVI   EFLAG025,ERRSET     DUPLICATE LABEL
         B     LBE99               GO TO CLEAR
LBE04    DS    0H
         MVI   EFLAG024,ERRSET     NO SPACE FOR LABEL
         B     LBE99               GO TO CLEAR
LBE99    DS    0H
         MVC   LBWRK,BLANKS        CLEAR ERROR OPERAND
         B     LB07                AND GO TO IGNORE RESULT
         SPACE 2
*
*        ROUTINE TO CLEAR ALL LABELS IN CURRENT FILE LEVEL
*
         SPACE
LBCLR   $ENTER ,
         CLC   LBGOTO,BLANKS       A GOTO TARGET OUTSTANDING .Q
         BE    LBCLR04             BRANCH IF NOT
         MVI   EFLAG026,ERRSET     GO TARGET NOT FOUND
         CLC   LBGOTO(4),F0        NUMERIC TARGET .Q
         BE    LBCLR01             BRANCH IF YES
        $MVC   BUFF2,LBGOTO        TARGET VALUE
         LA    R1,L'LBGOTO         LENGTH OF SAME
         LA    TEMP,BUFF2          WHERE BAD OPERAND WAS PLACED
         B     LBCLR02             AND CONTINUE
LBCLR01  DS    0H
         L     R1,LBGOTO+4         NUMERIC TARGET
         CVD   R1,DECM             CONVERT TO DECIMAL
        $MVC   BUFF2,UREDPAT       MOVE EDIT PATTERN
         ED    BUFF2(L'UREDPAT),DECM+4  INSERT TARGET LINE NUMBER
         LA    R1,L'UREDPAT        LENGTH OF RESULT
         LA    TEMP,BUFF2+L'UREDPAT-1   WHERE BAD OPERAND WAS PLACED
LBCLR02  DS    0H
         STH   R1,BUFF2LGZ         SET LENGTH OF GENERATED RESULT
         ST    TEMP,ERRSTART       INDICATE BAD RECORD COLUMN
         CLC   COMAGO,BLANKS       DO WE HAVE THE SOURCE GOTO .Q
         BE    LBCLR03             BRANCH IF NOT
        $MVC   COMAREA,COMAGO      FOR ERROR INFORMATION
LBCLR03  DS    0H
         MVC   LBGOTO,BLANKS       CLEAR CURRENT GOTO TARGET
        $CALL  ERROUT              PRODUCE THE DIAGNOSTIC
         MVC   COMAGO,BLANKS       CLEAR LAST FORWARD GOTO RECORD
         SPACE
LBCLR04  DS    0H
         L     X1,LBANCH-LBCHN+LBDSECT  FIRST LABEL BLOCK POINTER
LBCLR05  DS    0H
         USING LBDSECT,X1          TELL THE ASSEMBLER
         LTR   X1,X1               AT THE END .Q
         BZ    LBCLR06             BRANCH OUT IF YES
         LA    R0,LBDSECT          WHERE TO FREE
         LA    R1,LBLEN            LENGTH TO FREE
         L     X1,LBCHN            NEXT LABEL BLOCK POINTER
        $CALL  FREECELL            FREE LABEL BLOCK
         B     LBCLR05             DO TILL DONE
         DROP  X1
         SPACE
LBCLR06  DS    0H
         ST    X1,LBANCH           CLEAR LABEL ANCHOR BLOCK
         MVC   COMAGO,BLANKS       RESET LAST FORWARD GOTO RECORD
        $EXIT  RC=0                AND RETURN TO CALLER
