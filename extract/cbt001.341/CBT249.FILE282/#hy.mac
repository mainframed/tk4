***********************************************************************
*                                                                     *
*              .HY (HYPHENATION) --- CONTROL                          *
*                                                                     *
***********************************************************************
         SPACE
HY      $ENTER ,
         L     BASE,VSCRICVT       COMMUNICATION VECTOR TABLE
         L     BASE,VHYSCRIP-SCRICVT(,BASE)  LOCAL DATA BASE
         SPACE
        $CALL  GETYESNO            GET FIRST ARG AGAIN
         BC    BNEG,HYD01          BRANCH IF NEGATIVE
         BC    BPOS,HYD03          BRANCH IF AFFIRMATIVE
         CLI   YNRESULT,YNUSER     'USER' SPECIFIED HYPHENS .Q
         BE    HYD02               BRANCH IF YES
         CLI   YNRESULT,YNADD      'ADD' A WORD .Q
         BE    HYADD               BRANCH IF YES
         CLI   YNRESULT,YNCNG      'CHANGE' A WORD .Q
         BE    HYCNG               BRANCH IF YES
         CLI   YNRESULT,YNDEL      'DELETE' A WORD .Q
         BE    HYDEL               BRANCH IF YES
         CLI   YNRESULT,YNPUR      'PURGE' ALL WORDS .Q
         BE    HYPUR               BRANCH IF YES
         CLI   YNRESULT,YNDUMP     'DUMP' CURRENT WORDS .Q
         BE    HYDUMP              BRANCH IF YES
         CLI   YNRESULT,YNTEST     'TEST' A WORD FOR HYPHENS .Q
         BE    HYTEST              BRANCH IF YES
         CLI   YNRESULT,YNSUP      'SUPPRESS' A LINE .Q
         BE    HYSUP               BRANCH IF YES
         CLI   YNRESULT,YNSET      'SET' A CONTROL .Q
         BE    HYSET               BRANCH IF YES
         B     HYDE005             ELSE INVALID PARAMETER
         SPACE
HYD01    DS    0H
         LA    COUNT,HYNONE        NO HYPHENATION TO BE PERFORMED
         B     HYD04               GO TO SET
HYD02    DS    0H
         LA    COUNT,HYUSER        USER HYPHENATION TO BE PERFORMED
         B     HYD04               GO TO SET
HYD03    DS    0H
         LA    COUNT,HYAUTO        AUTO HYPHENATION TO BE PERFORMED
         B     HYD04               GO TO SET
HYD04    DS    0H
         ST    COUNT,HYLEVEL       SET HYPHENATION LEVEL
         B     HYDRET              AND GO TO RETURN
         SPACE
HYADD    DS    0H
        $CALL  HYSCN               GET THE WORD TO ADD
         BC    BDNO,HYADD03        BRANCH AROUND IF SOME ERROR
         LR    X1,R1               INTERNAL FIRST CHARACTER
         SLL   X1,2                TIMES FOUR
         LA    X2,HYANCH(X1)       LETTER ANCHOR POINTER
         L     X1,HYANCH(X1)       LETTER ANCHOR
         SPACE
         USING HYDSECT,X1          AND TELL THE ASSEMBLER
HYADD01  DS    0H
         LTR   X1,X1               AT THE END .Q
         BZ    HYADD02             BRANCH IF YES
         CLC   HYWORD,HYWKWORD     INSERTION POINT .Q
         BNL   HYADD02             BRANCH IF YES
         LR    X2,X1               NEXT LAG POINTER
         L     X1,HYCHN            NEXT POINTER
         B     HYADD01             CONTINUE SEARCH
         SPACE
HYADD02  DS    0H
         LR    X1,X2               POINTER TO THE NEW
         LA    R1,HYLEN            LENGTH OF ONE WORD BLOCK
        $CALL  GETCELL             GET THE SPACE
         BC    BNEG,HYDE024        ERROR IF FAILED
         L     R1,HYEXCNT          EXCEPTION WORD COUNT
         A     R1,F1               PLUS ONE
         ST    R1,HYEXCNT          UPDATE VALUE
         L     R1,HYCHN            FORMER FORWARD POINTER
         ST    TEMP,HYCHN          POINT TO THE NEW
         LR    X1,TEMP             THE NEW AREA
         ST    R1,HYCHN            NEW FORWARD POINTER
         MVC   HYBRK,HYPIND        BREAK POINTS
         MVC   HYWORD,HYWKWORD     AND CHARACTERS
HYADD03  DS    0H
         B     HYDRET              GO TO TERMINATION
         DROP  X1
         SPACE
HYCNG    DS    0H
        $CALL  HYSCN               GET WORK TO CHANGE
         BC    BDNO,HYCNG04        BRANCH AROUND IF SOME ERROR
         LR    X1,R1               INTERNAL FIRST CHARACTER
         SLL   X1,2                TIMES FOUR
         LA    X2,HYANCH(X1)       LETTER ANCHOR POINTER
         L     X1,HYANCH(X1)       LETTER ANCHOR
         SPACE
         USING HYDSECT,X1          AND TELL THE ASSEMBLER
HYCNG01  DS    0H
         LTR   X1,X1               AT THE END .Q
         BZ    HYCNG02             BRANCH IF YES
         CLC   HYWORD,HYWKWORD     INSERTION POINT
         BE    HYCNG03             BRANCH IF REPLACEMENT
         BH    HYCNG02             BRANCH IF INSERTION
         LR    X2,X1               NEXT LAG POINTER
         L     X1,HYCHN            NEXT POINTER
         B     HYCNG01             AND CONTINUE SEARCH
         SPACE
HYCNG02  DS    0H
         LR    X1,X2               POINTER TO THE NEW
         LA    R1,HYLEN            LENGTH OF ONE WORD BLOCK
        $CALL  GETCELL             GET THE WORD BLOCK SPACE
         BC    BNEG,HYDE024        ERROR IF FAILED
         L     R1,HYEXCNT          EXCEPTION WORD COUNT
         A     R1,F1               PLUS ONE
         ST    R1,HYEXCNT          UPDATE VALUE
         L     R1,HYCHN            FORMER FORWARD POINTER
         ST    TEMP,HYCHN          POINT TO THE NEW
         LR    X1,TEMP             THE NEW AREA
         ST    R1,HYCHN            NEW FORWARD POINTER
HYCNG03  DS    0H
         MVC   HYBRK,HYPIND        BREAK POINTS
         MVC   HYWORD,HYWKWORD     AND CHARACTERS
HYCNG04  DS    0H
         B     HYDRET              GO TO TERMINATION
         DROP  X1
         SPACE
HYDEL    DS    0H
        $CALL  HYSCN               GET WORK TO CHANGE
         BC    BDNO,HYDEL05        BRANCH IF SOME ERROR
         LR    X1,R1               INTERNAL FIRST CHAR
         SLL   X1,2                TIMES FOUR
         LA    X2,HYANCH(X1)       LAG POINTER
         L     X1,HYANCH(X1)       LETTER ANCHOR
         SPACE
         USING HYDSECT,X1          AND TELL THE ASSEMBLER
HYDEL01  DS    0H
         LTR   X1,X1               AT THE END .Q
         BZ    HYDE030             ENTRY NOT FOUND IF YES
         CLC   HYWORD,HYWKWORD     COULD IT BE THIS WORD .Q
         BH    HYDE030             HIGH, GONE TOO FAR
         BNE   HYDEL02             BRANCH IF NOT
         CLC   HYBRK,HYPIND        DO BREAK POINTS MATCH .Q
         BE    HYDEL04             YES, GO TO DELETE IT
HYDEL02  DS    0H
         LR    X2,X1               NEXT LAG POINTER
         L     X1,HYCHN            NEXT POINTER
         B     HYDEL01             AND CONTINUE SEARCH
         SPACE
HYDEL04  DS    0H
         LA    R0,HYDSECT          AREA TO FREE
         L     R1,HYCHN            FORWARD POINTER
         LR    X1,X2               FORMER BLOCK
         ST    R1,HYCHN            CHAIN OUT THE CURRENT
         LA    R1,HYLEN            LENGTH OF WORD BLOCK
        $CALL  FREECELL            FREE THE AREA
         L     R1,HYEXCNT          EXCEPTION WORD COUNT
         S     R1,F1               LESS ONE
         ST    R1,HYEXCNT          UPDATE VALUE
HYDEL05  DS    0H
         B     HYDRET              GO TO TERMINATION
         DROP  X1
         SPACE
HYPUR    DS    0H
         LA    X3,L'HYALPHA        NUMBER OF LETTER ANCHORS
HYPUR01  DS    0H
         LR    X1,X3               LETTER NUMBER
         BCTR  X1,0                LESS ONE
         SLL   X1,2                TIMES FOUR
         LA    X2,HYANCH(X1)       ANCHOR POINTER LAG
         L     X1,HYANCH(X1)       INITIAL ANCHOR
         XC    0(4,X2),0(X2)       CLEAR LETTER ANCHOR
         SPACE
         USING HYDSECT,X1          TELL THE ASSEMBLER
HYPUR02  DS    0H
         LTR   X1,X1               AT CHAIN END .Q
         BZ    HYPUR03             BRANCH OUT IF YES
         LA    R0,HYDSECT          THIS IS WHERE IT IS
         L     X1,HYCHN            THIS IS THE NEXT
         LA    R1,HYLEN            LENGTH OF BLOCK
        $CALL  FREECELL            FREE CURRENT BLOCK
         L     R1,HYEXCNT          EXCEPTION WORD COUNT
         S     R1,F1               LESS ONE
         ST    R1,HYEXCNT          UPDATE VALUE
         B     HYPUR02             CONTINUE DOWN THE CHAIN
         SPACE
HYPUR03  DS    0H
         BCT   X3,HYPUR01          DO ALL THE LETTERS
         B     HYDRET              GO TO TERMINATION
         DROP  X1
         SPACE
HYDUMP   DS    0H
         L     R1,HYEXCNT          EXCEPTION WORD COUNT
         CVD   R1,DECM             CONVERT COUNT TO DECIMAL
         L     R1,BUFF3AD          BUFFER WORK AREA
         MVC   0(HYDUMPLN,R1),HYDUMPMG  ENTER BASIC MESSAGE
         ED    HYDUMPNM-HYDUMPMG(6,R1),DECM+5  COUNT TO CHARACTER
         LR    R0,R1               POINT TO RESULT
        $CALL  PRTERM              AND PRINT IT
         SPACE
         LA    X3,L'HYALPHA        NUMBER OF LETTER ANCHORS
HYDUMP01 DS    0H
         LA    X1,L'HYALPHA        MAX NUMBER OF LETTERS
         SR    X1,X3               LETTER TO DO NOW
         STC   X1,HYDCWORD         SAVE INTERNAL INITIAL LETTER
         SLL   X1,2                TIMES FOUR
         L     X1,HYANCH(X1)       INITIAL LETTER ANCHOR
         MVI   HYPRWORD+4,C'0'     DOUBLE SPACE FIRST
         SPACE
         USING HYDSECT,X1          TELL THE ASSEMBLER
HYDUMP02 DS    0H
         LTR   X1,X1               AT CHAIN END .Q
         BZ    HYDUMP06            BRANCH OUT IF YES
         MVI   HYDCWORD+1,L'HYALPHA  INTERNAL BLANK
         MVC   HYDCWORD+2(L'HYDCWORD-2),HYDCWORD+1  ALL OF IT
         LM    R0,R1,HYWORD        WORD IF FIVE BIT
         LA    COUNT,L'HYWORD*8/5  NUMBER CHARS PER WORD
         LA    TEMP,HYDCWORD(COUNT)     LAST CHAR GOES HERE
HYDUMP03 DS    0H
         STC   R1,0(TEMP)          ADD A CHAR
         NI    0(TEMP),B'00011111' PURIFY INTERNAL RESULT
         SRDL  R0,5                GET NEXT CHAR
         BCTR  TEMP,0              PUT NEXT HERE
         BCT   COUNT,HYDUMP03      DO THEM ALL
         TR    HYDCWORD,HYALPHA    MAKE RESULT PRINTABLE
         SPACE
         UNPK  HYPIND,HYBRK(L'HYBRK+1)  EXPAND BREAK POINTS
         MVI   HYWKWORD,C' '       BLANK TARGET
         MVC   HYWKWORD+1(L'HYWKWORD-1),HYWKWORD  ALL OF IT
         LA    X2,HYDCWORD         FROM CHARACTER POINTER
         LA    COUNT,HYWKWORD      TO CHARACTER POINTER
         LA    TEMP,HYPIND         BREAK OFFSET POINTER
HYDUMP04 DS    0H
         IC    R1,0(,TEMP)         BREAK OFFSET
         N     R1,F15              PURIFY IT
         C     R1,F15              LAST OF BREAKS .Q
         BE    HYDUMP05            BRANCH OUT IF YES
         BCTR  R1,0                LENGTH-1 TO BREAK
         EX    R1,HYDUMPMV         MOVE WORD SYLLABLE
         LA    X2,1(R1,X2)         BUMP FROM PTR
         LA    COUNT,1(R1,COUNT)   BUMP TO PTR
         MVI   0(COUNT),C'-'       ADD HYPHEN CHARACTER
         LA    COUNT,1(,COUNT)     BUMP TO PTR AGAIN
         LA    TEMP,1(,TEMP)       BUMP BREAK POINTER
         B     HYDUMP04            DO TILL EXHAUSTED
         SPACE
HYDUMP05 DS    0H
         LA    R1,HYDCWORD+L'HYDCWORD-1 END OF WORD + BLANKS
         SR    R1,X2               LENGTH-1 OF RESULT
         EX    R1,HYDUMPMV         MOVE REMAINDER
         LA    R0,HYPRWORD         AREA TO DISPLAY
        $CALL  PRTERM              PRINT ON ERROR FILE
         MVI   HYPRWORD+4,C' '     SINGLE SPACE REST OF LETTER
         L     R1,HYPRATAD         INTERNAL LETTER TABLE
         TR    HYDCWORD(1),0(R1)   INTERNAL FIRST CHARACTER
         L     X1,HYCHN            NEXT WORD ON CHAIN
         B     HYDUMP02            AND CONTINUE
         SPACE
HYDUMP06 DS    0H
         BCT   X3,HYDUMP01         DO ALL LETTERS
         B     HYDRET              GO TO TERMINATION
         SPACE
HYDUMPMV MVC   0(*-*,COUNT),0(X2)  EXECUTED MOVE SYLLABLE
HYDUMPMG DC    AL2(HYDUMPLN,0),C'0'
         DC    C'HYPHENATION EXCEPTION DICTIONARY WITH'
HYDUMPNM DC    X'402020202120'
         DC    C' WORDS.'
HYDUMPLN EQU   *-HYDUMPMG
         DROP  X1
         SPACE
HYTEST   DS    0H
        $ON    SWITCHS,FNOCASE     NO CASE CONVERSION
        $CALL  GETARG              GET USER'S WORD
         BC    BOMIT,HYDE003       ERROR IF ARG OMITTED
         C     TEMP,HYMAXWRD       MAXIMUM WORD LENGTH
         BNL   HYDE033             BRANCH IF TEST WORD TOO LONG
         L     X3,BUFF3AD          POINT TO TEMP PRINT BUFFER
         MVC   0(HYTESTL1,X3),HYTESTM1  ENTER MESSAGE START
         LA    X3,HYTESTL1(,X3)    FIRST EMPTY SLOT
         EX    TEMP,HYTESTV1       ENTER CALLER'S WORD
         LA    X3,1(TEMP,X3)       AFTER CALLER'S WORD
         MVC   0(HYTESTL2,X3),HYTESTM2  ENTER MESSAGE MIDDLE
         LA    X3,HYTESTL2(,X3)    BUMP LINE POINTER
         MVC   HYTESTAR,BLANKS     BLANK TEST WORD AREA
         EX    TEMP,HYTESTMV       ENTER USER'S WORD
         MVI   HYTESTAR,X'00'      ALL BREAK POINTS PLEASE
         LA    R1,HYTESTAR         POINT TO WORK AREA
        $CALL  HYPHEN              DO YOUR WORST
         LTR   R15,R15             SUCCESS .Q
         BNP   HYDE031             BRANCH IF ERROR
         SPACE
         SR    R1,R1               CLEAR CHARACTER WORK REG
         LA    TEMP,1(,TEMP)       ACTUAL USER WORD LENGTH
HYTEST01 DS    0H
         MVC   0(1,X3),0(COUNT)    ENTER USER ORIGINAL CHAR
         TM    0(R15),X'30'        DOES HYPHEN FOLLOW .Q
         BNO   HYTEST02            BRANCH IF NOT
         TM    0(R15),X'08'        USER'S OWN HYPHEN .Q
         BO    HYTEST02            BRANCH IF YES
         IC    R1,0(,R15)          GET STATUS BYTE
         SRL   R1,6                REDUCE TO HYPHEN BREAK TYPE
         IC    R1,HYTYPES(R1)      GET HYPHEN TYPE
         LA    X3,1(,X3)           POINT TO NEXT OUT CHAR
         STC   R1,0(,X3)           ENTER APPROPRIATE HYPHEN CHAR
HYTEST02 DS    0H
         LA    R15,1(,R15)         NEXT STATUS BYTE
         LA    COUNT,1(,COUNT)     NEXT USER CHARACTER
         LA    X3,1(,X3)           NEXT OUTPUT POS'N
         BCT   TEMP,HYTEST01       DO ALL CHARACTERS
         L     X1,BUFF3AD          POINT TO RECORD START
         SR    X3,X1               RECORD LENGTH
         STH   X3,0(,X1)           SET RECORD LENGTH
         LR    R0,X1               POINT TO RESULTING RDW
        $CALL  PRTERM              AND DISPLAY THE RESULT
         B     HYDRET              AND GO TO RETURN
         SPACE
HYTYPES  DS    0CL4                HYPHENATION BREAK CHARS FOR TEST
         DC    C'*'                X'3X'  YES/NO SCAN HYPHENS
         DC    C'-'                X'7X'  EXCEPTION DICTIONARY HYPHENS
         DC    C'/'                X'BX'  SUFFIX ANALYSIS HYPHENS
         DC    C''''               X'FX'  ALGORITHM HYPHENS
HYTESTM1 DC    AL2(0,0),C'0',C'HYPHEN TEST OF '
HYTESTL1 EQU   *-HYTESTM1
HYTESTM2 DC    C' GIVES '
HYTESTL2 EQU   *-HYTESTM2
         SPACE
HYTESTMV MVC   HYTESTAR+1(*-*),0(COUNT) MOVE USER'S ARGUMENT
HYTESTV1 MVC   0(*-*,X3),0(COUNT)  MOVE USER'S ORIGINAL WORD
         SPACE
HYSUP    DS    0H
        $ON    SWITCHS,HYSUPSW     SET HYPHEN SUPPRESS FLAG
         B     HYDRET              AND GO TO RETURN
         SPACE
HYSET    DS    0H
        $CALL  GETYESNO            GET TYPE OF 'SET' CONTROL
         BC    BOMIT,HYDE003       ERROR IF NOTHING ELSE
         LA    X1,HYTHRESH         ASSUME 'THRESH'
         LA    X2,DEFTRSH          ITS DEFAULT DESCRIPTOR
         CLI   YNRESULT,YNTRSH     'THRESH' REQUEST
         BE    HYSET01             BRANCH IF YES
         LA    X1,HYMINPT          ASSUME 'MINPT'
         LA    X2,DEFMNPT          ITS DEFAULT DESCRIPTOR
         CLI   YNRESULT,YNMNPT     'MINPT' REQUEST .Q
         BE    HYSET01             BRANCH IF YES
         LA    X1,HYENDPT          ASSUME 'ENDPT'
         LA    X2,DEFENDPT         ITS DEFAULT DESCRIPTOR
         CLI   YNRESULT,YNENDPT    'ENDPT' REQUEST .Q
         BE    HYSET01             BRANCH IF YES
         LA    X1,HYSUPCNT         ASSUME 'SUPPRESS'
         LA    X2,DEFHYSUP         ITS DEFAULT DESCRIPTOR
         CLI   YNRESULT,YNSUP      'SUPPRESS' REQUEST .Q
         BE    HYSET01             BRANCH IF YES
         B     HYDE005             ALL ELSE IS INVALID
HYSET01  DS    0H
        $CALL  GETNUM              GET NUMERIC ARGUMENT
         BC    BDNO,HYDE005        ERROR IF INVALID
         BC    BOMIT,HYSET02       BRANCH TO DEFAULT IF OMITTED
         CLI   NUMSIGN,C' '        WAS OPERAND UNSIGNED .Q
         BE    HYSET03             BRANCH IF YES
         AH    COUNT,0(,X1)        MAKE RELATIVE CHANGE
         B     HYSET03             GO CHECK AND ENTER
HYSET02  DS    0H
         L     COUNT,TAB3DEF(,X2)  USE DEFAULT VALUE
HYSET03  DS    0H
         C     COUNT,TAB3MIN(,X2)  VALUE TOO SMALL .Q
         BL    HYDE014             ERROR IF YES
         C     COUNT,TAB3MAX(,X2)  VALUE TOO BIG .Q
         BH    HYDE013             ERROR IF YES
         LTR   COUNT,COUNT         VALUE OF ZERO .Q
         BNZ   HYSET04             BRANCH IF NOT
         L     COUNT,TAB3MAX(,X2)  TAKE LARGEST VALUE INSTEAD
HYSET04  DS    0H
         STH   COUNT,0(,X1)        SET NEW VALUE
         MVC   HYSUPWRK,HYSUPCNT   SET WORKING SUPPRESS VALUE
         B     HYDRET              AND GO TO RETURN
         SPACE
HYDE003  DS    0H
         MVI   EFLAG003,ERRSET     OMITTED OPERAND
         B     HYDRET              GO TO TERMINATION
HYDE005  DS    0H
         MVI   EFLAG005,ERRSET     INVALID OPERAND
         B     HYDRET              GO TO TERMINATION
HYDE013  DS    0H
         MVI   EFLAG013,ERRSET     SET OPERAND TOO BIG
         B     HYDRET              GO TO RETURN
HYDE014  DS    0H
         MVI   EFLAG014,ERRSET     SET OPERAND TOO SMALL
         B     HYDRET              GO TO TERMINATION
HYDE024  DS    0H
         MVI   EFLAG024,ERRSET     NO WORKING STORAGE LEFT
         B     HYDRET              GO TO TERMINATION
HYDE030  DS    0H
         MVI   EFLAG030,ERRSET     HYPHEN DELETE WORD NOT FOUND
         B     HYDRET              GO TO TERMINATION
HYDE031  DS    0H
         MVI   EFLAG031,ERRWARN    INVALID WORD TO HYPHENATE
         B     HYDRET              GO TO TERMINATION
HYDE033  DS    0H
         MVI   EFLAG033,ERRSET     HYPHEN TEST WORD TOO LONG
         B     HYDRET              GO TO TERMINATION
         SPACE
HYDRET   DS    0H
        $EXIT  RC=0                AND RETURN TO CALLER
