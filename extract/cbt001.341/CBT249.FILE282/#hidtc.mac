***********************************************************************
*                                                                     *
*              INTERNAL FUNCTIONS 'HIDTC' --- ALTER TC READ BUFFS     *
*                                                                     *
***********************************************************************
         SPACE
*        ON ENTRY  (R1>0) ->  AREA TO ENTER 'LIFO' ON TC STACK
*                  (R1<0) ->  AREA TO ENTER 'FIFO' ON TC STACK
*                  (TEMP) = LENGTH-1 OF DATA
*        ON EXIT   CC  =  BPOS  IF LINE STACKED
*                      =  BNEG  IF NOT
         SPACE
HIDTCAD $ENTER ,
         CLI   ICORFLG,ICORNONE    FORMATTING INCORE .Q
         BNE   HIDTC05             BRANCH IF YES
         SPACE
         LR    R0,R1               REMEMBER LIFO/FIFO
         LPR   R1,R1               SOURCE ADDRESS
         L     X1,WRKBUFFA         WORK BUFFER ADDRESS
         MVC   0(L'WRKBUFF,X1),BLANKS   CLEAR FOR SAFETY
         CLC   0(1,R1),PERIND      ADDING A CONTROL WORD .Q
         BE    HIDTC02             YES, NO PAGE NUMBER
         LTR   R0,R0               'FIFO' ADD REQUEST .Q
         BNM   HIDTC01             BRANCH IF NOT
        $SAVE  ,                   REMEMBER INPUT POINTERS
         MVC   0(L'HIDTCIN,X1),HIDTCIN  PREPARATORY INDENT
         MVC   0(1,X1),PERIND      CONTROL WORD INDICATOR
         LNR   R1,X1               'FIFO' REQUEST
         LA    TEMP,L'HIDTCIN-1    LENGTH-1
        $CALL  HIDTCCN             ADD DATA TO CHAIN
         MVC   0(L'WRKBUFF,X1),BLANKS   CLEAR FOR SAFETY AGAIN
        $RESTOR ,                  RESTORE ORIGINAL POINTERS
         SPACE
HIDTC01  DS    0H
         EX    TEMP,HIDTCMVC       MOVE USER'S DATA
         LA    X1,0(TEMP,X1)       LAST USED CHARACTER
         MVI   1(X1),X'05'         ADD A TAB
        $CALL  PNUMFMT             GET PAGE NUMBER
         EX    COUNT,HIDTCPGE      ADD CURRENT PAGE NUMBER
         LA    X1,2(COUNT,X1)      LAST USED CHAR
         B     HIDTC03             PREPARE FOR ADD
         SPACE
HIDTC02  DS    0H
         EX    TEMP,HIDTCMVC       MOVE USER'S COMMAND
         LA    X1,0(TEMP,X1)       LAST USED CHARACTER
HIDTC03  DS    0H
         S     X1,WRKBUFFA         LESS START
         LR    TEMP,X1             LENGTH-1 FOR SAVE CALL
         L     R1,WRKBUFFA         NEW ADDRESS
         LTR   R0,R0               FIFO OR LIFO .Q
         BNM   HIDTC04             BRANCH IF LIFO
         LNR   R1,R1               FIFO
         SPACE
HIDTC04  DS    0H
        $CALL  HIDTCCN             ADD DATA TO CHAIN
         B     HIDTC06             GO TO RETURN
         SPACE
HIDTCMVC MVC   0(*-*,X1),0(R1)     MOVE TC DATA
HIDTCPGE MVC   2(*-*,X1),EBCDPAGE  MOVE TC PAGE NUMBER
HIDTCIN  DC    C'.IN * 0-3'        RIGHT INDENT
         SPACE
HIDTC05  DS    0H
        $CALL  HIDTCOR             ADD TO INCORE CHAIN
         SPACE
HIDTC06  DS    0H
        $EXIT  RC=0                RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*              INTERNAL FUNCTION 'HIDTCCN' --- CHAIN TC LINES         *
*                                                                     *
***********************************************************************
         SPACE
*        ON ENTRY  (R1>0) ->  AREA TO ENTER 'LIFO' ON TC STACK
*                  (R1<0) ->  AREA TO ENTER 'FIFO' ON TC STACK
*                  (TEMP) = LENGTH-1 OF DATA
*        ON EXIT   CC  =  BPOS  IF LINE STACKED
*                      =  BNEG  IF NOT
         SPACE
HIDTCCN $ENTER ,
         L     X3,DHNUMTC          TABLE OF CONTENTS NUMBER
         SLL   X3,2                MULT BY FOUR
         LA    X3,TCANCH+HIDBCHN-HIDB(X3)  POINT TO ANCHOR
         LTR   R1,R1               LIFO OR FIFO
         BNM   HTCCN02             BRANCH IF LIFO
         SPACE
         USING HIDB,X3             WANT END AREA LIKE THIS
HTCCN01  DS    0H
         OC    HIDBCHN,HIDBCHN     END OF CHAIN .Q
         BZ    HTCCN02             BRANCH IF YES
         L     X3,HIDBCHN          GET NEXT AREA
         B     HTCCN01             AND TRY AGAIN
         DROP  X3
         SPACE
HTCCN02  DS    0H
         LPR   X1,R1               POINT TO DATA AREA
         LTR   X2,TEMP             LENGTH-1 OF DATA
         BM    HTCCN04             ERROR IF NEGATIVE
         LA    R1,HIDBLN+1(,X2)    LENGTH NEEDED
        $CALL  GETCELL             GET SOME SPACE
         BC    BNEG,HTCCN04        ERROR IF NO SPACE
         USING HIDB,TEMP           AREA LOOKS LIKE THIS
         XC    HIDB(HIDBLN),HIDB   CLEAR PREFIX AREA
         MVC   HIDBCHN,0(X3)       NEXT POINTER TO CURRENT
         ST    TEMP,0(,X3)         CHAIN POINTER TO NEW
         STH   R1,HIDBBLKL         SET LENGTH OF BLOCK
         EX    X2,HTCCNMVC         SAVE TEXT
         LA    X2,1(,X2)           ACTUAL LENGTH
         STH   X2,HIDBLEN          SAVE LENGTH OF DATA
        $CC    POS                 SUCCESSFUL
         SPACE
HTCCN03  DS    0H
        $EXIT  RC=0                AND RETURN TO CALLER
         SPACE
HTCCN04  DS    0H
         MVI   EFLAG024,ERRSET     NO SPACE FOR DATA
        $CC    NEG                 NOT SUCCESSFUL
         B     HTCCN03             AND GO TO RETURN
         SPACE
HTCCNMVC MVC   HIDBDATA(*-*),0(X1) SAVE CONTENTS DATA
         DROP  TEMP
         EJECT
***********************************************************************
*                                                                     *
*              INTERNAL FUNCTION 'HIDTCCN' --- CHAIN TC LINES         *
*                                                                     *
***********************************************************************
         SPACE
*        ON ENTRY  (R1>0) ->  AREA TO ENTER 'FIFO' ON TC STACK
*                  (R1<0) ->  AREA TO ENTER 'FIFO' ON TC STACK
*                  (TEMP) = LENGTH-1 OF DATA
*        ON EXIT   CC  =  BPOS  IF LINE STACKED
*                      =  BNEG  IF NOT
HIDTCOR $ENTER ,
         L     X1,ICORANCH         ADDR OF LINE CONTROL
         LTR   X1,X1               IS IT VALID .Q
         BNP   HIDCE024            ERROR IF NOT
         SPACE
         USING CPFKFN,X1           AREA LOOKS LIKE THIS
         LPR   X2,R1               POINT TO USER DATA
         LR    COUNT,TEMP          REMEMBER LENGTH-1
         LA    R1,FNQLN+1(,COUNT)  LENGTH REQUIRED
        $CALL  GETCELL             GET A QUEUE BUFFER
         BC    BNEG,HIDCE024       BRANCH IF FAILURE
         SPACE
         LA    R1,CPFKFNA-FNQFCHN+FNQELEM  PRIME USED LOOP
         USING FNQELEM,R1          FOR LAST ELEMENT USED
HIDCOR01 DS    0H
         OC    FNQFCHN,FNQFCHN     AT THE END .Q
         BZ    HIDCOR02            BRANCH IF YES
         L     R1,FNQFCHN          NEXT CELL ADDRESS
         B     HIDCOR01            AND TRY AGAIN
HIDCOR02 DS    0H
         ST    TEMP,FNQFCHN        LINK NEW AT THE END
         DROP  R1
         SPACE
         USING FNQELEM,TEMP        THIS IS THE NEW
         XC    FNQELEM(FNQLN),FNQELEM   CLEAR PREFIX
        $ON    FNQFLAG,FNQTC       TABLE OF CONTENTS ENTRY ONLY
         EX    COUNT,HIDCORMV      MOVE IN DATA
         LA    COUNT,5(,COUNT)     LENGTH + LENGTH OF RDW
         STH   COUNT,FNQRDW        SAVE LENGTH FOUND
         MVC   FNQCORSW,ICORFLG    RETAIN TYPE OF RECORD
         L     COUNT,DHNUMTC       CURRENT TABLE OF CONTENTS NUMBER
         STH   COUNT,FNQNUMTC      SAVE AS PART OF DATA FOR LATER
        $CC    POS                 SUCCESS
         SPACE
HIDCOR03 DS    0H
        $EXIT  RC=0                RETURN TO CALLER
         SPACE
HIDCORMV MVC   FNQTEXT(*-*),0(X2)  SAVE USER DATA
         DROP  TEMP,X1
         SPACE
HIDCE024 DS    0H
         MVI   EFLAG024,ERRSET     NO SPACE
        $CC    NEG                 INDICATE FAILURE
         B     HIDCOR03            AND GO TO RETURN
