***********************************************************************
*                                                                     *
*              .GO GOTO --- CONTROL                                   *
*                                                                     *
***********************************************************************
         SPACE
GO      $ENTER ,
         MVC   LBWRK,BLANKS        CLEAR OPERAND
         MVC   COMAGO,BLANKS       CLEAR CURRENT RECORD IDENTIFICATION
        $CALL  GETNUM              GET NUMERIC OPERAND
         BC    BOMIT,GOE01         BRANCH IF OMITTED
         BC    BDNO,GO02           BRANCH IF INVALID
         CLI   NUMSIGN,C' '        UNARY SIGNED OPERAND .Q
         BE    GO01                BRANCH IF NOT
         A     COUNT,COMFILIT      ADJUST GO STMT NUMBER ACCORDINGLY
GO01     DS    0H
         LTR   COUNT,COUNT         TOO SMALL .Q
         BNP   GOE04               BRANCH IF YES
         C     COUNT,F32767        TOO BIG .Q
         BH    GOE03               BRANCH IF YES
         XC    LBWRK,LBWRK         CLEAR TARGET
         ST    COUNT,LBWRK+4       SET OPERAND
         C     COUNT,COMFILIT      FORWARD BRANCH .Q
         BNH   GO05                BRANCH TO GOTO APPEND
         B     GO08                GO TO RETURN
         SPACE
GO02     DS    0H
         ST    COUNT,ARGSTART      RESCAN FOR IDENTIFIER
        $CALL  GETARG              GET IDENTIFIER
         LA    R0,L'LBNAME-1       MAX-1 LENGTH ALLOWED
         CR    TEMP,R0             TOO LONG .Q
         BH    GOE02               YES, INVALID LABEL
         EX    TEMP,GOMVCI         ENTER THE IDENTIFIER
         SPACE
         LA    X1,LBANCH-LBCHN+LBDSECT  GET LABEL ANCHOR POINTER
GO03     DS    0H
         USING LBDSECT,X1          TELL THE ASSEMBLER
         L     X1,LBCHN            NEXT LABEL IN CHAIN
         LTR   X1,X1               AT THE END .Q
         BZ    GO08                BRANCH OUT IF YES
         CLC   LBWRK,LBNAME        FOUND IT .Q
         BH    GO08                BRANCH OUT IF HIGH
         BE    GO04                CHECK MORE IF EQUAL
         B     GO03                AND TRY AGAIN
GO04     DS    0H
         CLC   LBFILIT,COMFILIT    FORWARD BRANCH .Q
         BH    GO08                BRANCH IF YES
         SPACE
GO05     DS    0H
         L     X2,LBANCH           SAVE LABEL ANCHOR
         XC    LBANCH,LBANCH       CLEAR SAME FOR APPEND
         XC    APIMFLAG,APIMFLAG   CLEAR FILE FLAGS
        $ON    APIMFLAG,IO$AP      SET APPEND FLAG
         MVC   APIMNAME,COMFILNM   SET FILE NAME
         MVC   APIMMEMB,COMMEMNM   AND MEMBER NAME
         CLC   LBWRK(4),F0         GOTO RECORD NUMBER .Q
         BE    GO06                BRANCH IF YES
         MVC   APIMMIN,LBFILIT     SET RECORD NUMBER OF IDENTIFIER
         MVC   APIMGOTO,LBWRK      SET GOTO TARGET
         B     GO07                AND CONTINUE
GO06     DS    0H
         MVC   APIMMIN,LBWRK+4     SET ABSOLUTE RECORD NUMBER
         MVC   APIMGOTO,BLANKS     NO LABEL TO GOTO
         XC    IFSTAK,IFSTAK       CLEAR IF STACK
GO07     DS    0H
         MVC   APIMMAX,F16MEG      DEFAULT MAX RECORD NUMBER
         LA    R1,APIMBLOK         NECESSARY INFORMATION
        $CALL  RDREWIND            REWIND CURRENT INPUT FILE
         ST    X2,LBANCH           RESTORE LABEL ANCHOR
         LTR   R15,R15             SUCCESSFUL .Q
         BNZ   GOE05               BRANCH IF NOT
         B     GO08                GO TO EXIT
         DROP  X1
         SPACE
GO08     DS    0H
         MVC   LBGOTO,LBWRK        ENTER GOTO OPERAND
         CLC   LBGOTO,BLANKS       TARGET SPECIFIED .Q
         BE    GO09                BRANCH IF NOT
         XC    IFSTAK,IFSTAK       CLEAR ENTIRE .IF STACK
         MVC   COMAGO,COMAREA      SOURCE OF .GO COMMAND
GO09     DS    0H
        $EXIT  RC=0                AND RETURN TO CALLER
         SPACE
GOMVCI   MVC   LBWRK(*-*),0(COUNT) MOVE OPERAND LABEL
         SPACE
GOE01    DS    0H
         MVI   EFLAG003,ERRSET     OMITTED GOTO OPERAND
         B     GOE99               GO TO CLEAR
GOE02    DS    0H
         MVI   EFLAG005,ERRSET     OPERAND TOO LONG
         B     GOE99               GO TO CLEAR
GOE03    DS    0H
         MVI   EFLAG013,ERRSET     OPERAND TOO BIG
         B     GOE99               GO TO CLEAR
GOE04    DS    0H
         MVI   EFLAG014,ERRSET     OPERAND TOO SMALL
         B     GOE99               GO TO CLEAR
GOE05    DS    0H
         MVI   EFLAG027,ERRSET     REWIND OF FILE FAILED
         B     GOE99               GO TO CLEAR
GOE99    DS    0H
         MVC   LBWRK,BLANKS        CLEAR GOTO OPERAND
         B     GO08                GO TO RETURN
