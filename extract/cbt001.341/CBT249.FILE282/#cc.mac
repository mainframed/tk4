***********************************************************************
*                                                                     *
*              .CC (CONDITIONAL COLUMN BEGIN) --- CONTROL             *
*                                                                     *
***********************************************************************
         SPACE 1
CC      $ENTER ,
        $CALL  GETYESNO            GET AND TEST ARGUMENT
         BC    BOMIT,CC14          IF ARG OMITTED, IGNORE
         BC    BPOS,CC02           BRANCH IF A BEGINNING
         BC    BNEG,CC03           BRANCH IF AN ENDING
         ST    COUNT,ARGSTART      RESET START OF SCAN
        $CALL  GETNUM              GET NUMERIC ARGUMENT
         BC    BDNO,CCE005         ERROR IF INVALID
         CLI   ICORFLG,ICORNONE    ARE WE SAVING INTO CORE NOW .Q
         BNE   CC14                IF YES, IGNORE THIS REQUEST
         LTR   COUNT,COUNT         ZERO OR MINUS SPACE .Q
         BNP   CC14                IF SO, NO COLUMN EJECT
         LH    TEMP,PLCT           GET COUNT OF NUMBER LEFT
         SR    TEMP,COUNT          LESS NUMBER REQUIRED
         BM    CC01                MINUS FORCE AN EJECT
         LH    R1,BMMRG            BOTTOM MARGIN
         AH    R1,FNSEP            PLUS FOOTNOTE MARGIN
         CR    TEMP,R1             BELOW BOTTOM MARGIN .Q
         BNL   CC14                BRANCH IF NOT
CC01     DS    0H
        $CALL  COLPAGE             YES, CAUSE COLUMN EJECT
         B     CC14                GO TO DONE
         SPACE
CC02     DS    0H
         CLI   ICORFLG,ICORNONE    CURRENTLY FORMATTING INTO CORE .Q
         BNE   CCE043              ERROR IF YES
         LA    R1,ICORSLEN         NEED THIS MUCH SPACE
        $CALL  GETCELL             GET THE SPACE
         BC    BNEG,CCE024         BRANCH IF FAILURE
         USING ICORSAVE,TEMP       SAVE AREA LOOKS LIKE THIS
         ST    TEMP,CCQSAVE        SAVE AREA POINTER
         MVC   ICORSKSP,SKSP       SAVE CONDITIONAL SKIP/SPACE
         XC    SKSP,SKSP           CLEAR CURRENT SKIP/SPACE
         DROP  TEMP
         SPACE
         MVI   ICORFLG,ICORCC      SET CONDITIONAL COLUMN KEEP
         LA    TEMP,CCAREA         CONDITIONAL COLUMN KEEP CONTROL
         ST    TEMP,ICORANCH       SAVE THIS FOR LATER
         B     CC14                GO TO DONE
         SPACE
CC03     DS    0H
         CLI   ICORFLG,ICORCC      ENDING A CONDITIONAL COLUMN .Q
         BNE   CCE043              ERROR IF NOT
        $CALL  GETNUM              GET OPTIONAL SECOND ARG FOR 'END'
         BC    15-BDNO,CC04        OK IF NOT INVALID
         MVI   EFLAG005,ERRSET     SET ERROR FLAG
         SR    COUNT,COUNT         AND USE ZERO ADJUSTMENT
         B     CC05                CONTINUE
CC04     DS    0H
         BC    15-BOMIT,CC05       BRANCH IF NOT OMITTED
         SR    COUNT,COUNT         USER ZERO ADJUSTMENT
CC05     DS    0H
         LA    R1,CCAREA           CONDITIONAL COLUMN AREA DESCRIPTOR
        $CALL  CPENDS              TERMINATE THE BLOCK
         SPACE
         L     TEMP,CCQSAVE        RESTORE SAVED AREA POINTER
         XC    CCQSAVE,CCQSAVE     CLEAR SAVED POINTER
         USING ICORSAVE,TEMP       AREA LOOKS LIKE THIS
        $MVC   SKSP,ICORSKSP       RESTORE CONDITIONAL SKIP/SPACE
         LA    R0,ICORSAVE         POINTER TO AREA
         LA    R1,ICORSLEN         LENGTH OF SAVE AREA
        $CALL  FREECELL            RELEASE WORK AREA
         DROP  TEMP
         SPACE
         MVI   ICORFLG,ICORNONE    RESET SAVING COND COLUMN FLAG
         XC    ICORANCH,ICORANCH   CLEAR COND COLUMN CONTROL
         SPACE
        $IFON  SWITCHS,FEMPTY,CC13 BRANCH IF PAGE NOW EMPTY
         LH    TEMP,PLCT           COUNT OF LINES LEFT
         S     TEMP,CCQCNT         LESS QUEUED COND KEEP COUNT
         SH    TEMP,SKSPCCNT       LESS CONDITIONAL SPACE COUNT
         SR    TEMP,COUNT          ADJUST FURTHER WITH USER'S REQUEST
         CLC   OLDCOUNT,F0         ALL DATA FORMATTED AND PRINTED .Q
         BE    CC09                BRANCH IF YES
         S     TEMP,F1             TAKE THAT LINE INTO ACCOUNT
CC09     DS    0H
         LTR   TEMP,TEMP           TEST FOR NONE LEFT
         BM    CC10                MINUS, FORCE AN EJECT
         LH    R1,BMMRG            BOTTOM MARGIN
         AH    R1,FNSEP            PLUS FOOTNOTE MARGIN
         CR    TEMP,R1             BELOW BOTTOM MARGIN .Q
         BNL   CC12                IF NOT, DON'T FORCE AN EJECT
         SPACE
CC10     DS    0H
         L     R1,CDCURR           CURRENT OUTPUT COLUMN
         C     R1,CDCOUNT          IS IT THE LAST .Q
         BL    CC11                BRANCH IF NOT
        $CALL  PAGEREAL            TERMINATE THIS PAGE FOR REAL
         B     CC12                AND CONTINUE
CC11     DS    0H
        $ON    SWITCHS,OOSWS       NO OVERLAY PLEASE
        $CALL  COLPAGE             FIRST FORCE LAST COLUMN
        $OFF   SWITCHS,OOSWS       REENABLE OVERLAY
CC12     DS    0H
        $IFON  SWITCHS,FEMPTY,CC13 BRANCH IF PAGE NOW EMPTY
         LA    R1,CCAREA           QUEUED LINE DESCRIPTOR
        $CALL  CPFKPRT             DUMP OUT ALL THAT'S SAVED
         B     CC14                BRANCH TO RETURN
CC13     DS    0H
        $CALL  PAGETOP             PRINT HEADER AND SAVED LINES
         SPACE
CC14     DS    0H
        $EXIT  RC=0                RETURN TO CALLER
         SPACE
CCE005   DS    0H
         MVI   EFLAG005,ERRSET     INVALID OPERAND
         B     CC14                BRANCH TO RETURN
CCE024   DS    0H
         MVI   EFLAG024,ERRSET     NO STORAGE FOR SAVE
         B     CC14                BRANCH TO RETURN
CCE043   DS    0H
         MVI   EFLAG043,ERRSET     INVALID CONTROL WORD IN KEEP
         B     CC14                BRANCH TO RETURN
