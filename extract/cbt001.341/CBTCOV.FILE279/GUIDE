00000010.cm GUIDE by R.Dickie (03/15/78)
00000020.cm Control section 1 is system documentation, invoked by SYSVAR(SYSTEM);.cs 1 ignore;.if XSYSTEM = X&SYSVAR .cs 1 include
00000030.ud off 0 1 2 3 4 5 6 7 8 9;.rc 1 |;.in 13;.sp 12;.ss;.nf
00000040.bx 11 55;.bx 12 54;.ds;.us 1620: Ryan SCRIPT
00000050      Text Processing Facility
00000060      an OS/TSO application program
00000070  by: R. E. Dickie
00000080      Engineering Digital Computing
00000090      Teledyne Ryan Aeronautical
00000100                      Release: 03/01/78
00000110.ss;.bx off;.bx off
00000120.ds;.sp 5;.ce;User Guide
00000130.cs 1 on;.ce;.sp;and
00000140.sp;.ce;Systems Manual
00000150.cs 1 off
00000160.bt $$Published: &SYSDATE.$$;.pn roman;.in 0
00000170.dh 1 ce spaf 3
00000180.dh 2 ri
00000190.dh 3 nup spaf 1 nts tcin 3
00000200.dh 4 nus spaf 1
00000210.se ab='Ryan SCRIPT';.su off
00000220.tt /Ryan SCRIPT/User Guide/&ab./;.su on;.pa 1;.bt //&//;.tc;.ri;.sp;of &Total
00000230.se App1=A;.se App2=B;.se App3=C;.se App4=D;.se App5=E;.se App6=F;.se App7=G;.se App8=H;.se App9=I;.se App10=J
00000240.dh 1 ntc 2 ntc 3 ntc 5 tc fill skbf 1 spaf 1 ce tcin 3;.pa;.tc List of Figures
00000250.ln 33;.dh 5 nup ntc 6 br tc fill skbf 0 spaf 0 nus ce tcin 3;.tc List of Tables
00000260.ll 65;.pa 1;.pn arabic;.fo;.pn arabic;.h1 Introduction;.su on;.bt ///Page &/
00000270The Ryan SCRIPT Text Processing Facility may be invoked by means of the SCRIPT Command.
00000280SCRIPT operates on files, typically developed through use of the Editor.
00000290As the user develops his file from the terminal, he includes SCRIPT control words, which direct the actions of the SCRIPT processor as it reads the file. These are in the form:
00000300.sp;.ce;.li;.control-word xxxx
00000310.sp;SCRIPT has many formatting capabilities that make it useful for many different kinds of documents
00000320such as working papers, program documentation, reports and internal newsletters.
00000330Combined with the powerful context editing capabilities of the Editor,
00000340SCRIPT is an efficient and economical means of preparing these documents.
00000350Modifications and additions to documents can be made easilly.
00000360In addition, the multi-programming environment of the IBM370 permits text processing applications
00000370to be run concurrently with other installation work.
00000380SCRIPT provides various text processing capabilities, including:
00000390.nj;.sp;.tr $ af;.in 5;.rm 5;.of 3;$  One to twenty columns of text per page.
00000400.sp;.of 3;$  As-is, justified, hyphenated, right-adjusted, or ragged right composition.
00000410.sp;.of 3;$  Automatic page numbering in Arabic or lower-case Roman, with fractional pagination options.
00000420.sp;.of 3;$  Automatic generation of multiple top and bottom titles, with even and odd page options.
00000430.sp;.of 3;$  Simple generation of form letters with or without variable information from a terminal or other source.
00000440.sp;.of 3;$  Inclusion of the contents of other SCRIPT files.
00000450.sp;.kp on;.of 3;$  Extensive macro capabilities to permit defining shorthand symbols for frequently-used sequences of control words.
00000460.kp off;.sp;.of 3;$  As many as nine revision indicators that will print at the left margin.
00000470.sp;.of 3;$  Conditional printing of different sections of a document.
00000480.sp;.of 3;$  Some information retrieval capability.
00000490.ju;.rm 0;.cp 12;.in 0;.tr
00000500.h2 Preparing to use SCRIPT;Because SCRIPT operates in the interactive environment (TSO) of the IBM370 computer,
00000510to make use of it you must first establish a connection with the IBM370 from your typewriter terminal.
00000520If it has not already been done, the prospective user must also establish TSO access authorization, this being the responsibility of Engineering Digital Computing (ext. 535).
00000530Additional documentation, tutorial sessions and consultation are also available through EDC.
00000540Once you have done this, you use the Editor to develop a SCRIPT file which contains the information for your document.
00000550This information consists of text, the information you wish to be printed,
00000560and SCRIPT control words,
00000570special statements that direct the operation of SCRIPT and determine the appearance of your printed output.
00000580.h3 Your Typewriter Terminal
00000590Your communication with the computer may be by means of an IBM 2741 Communications Terminal,
00000600similar to an IBM Selectric typewriter.
00000610You will find a switch on the cabinet in which the typewriter is mounted;
00000620when the switch is set to LCL you have an ordinary Selectric typewriter;
00000630by switching to COM you can be linked to the central computer by telephone line,
00000640and your typewriter is now a typewriter terminal.
00000650In this latter mode, you and the computer converse through messages that you type via your terminal to the computer,
00000660and responses you receive back at your terminal.
00000670If your terminal is not an IBM 2741, refer to the appropriate "Terminal User's Guide" for that device.
00000680.h3 Preparing to Logon
00000690In order to log on, that is, to establish a connection with the system from your terminal,
00000700you need a user identification (userid or ID) and a password,
00000710which you can obtain from the operations group at your installation.
00000720To prepare your terminal, set the left margin at 1 and the right margin at 130,
00000730in order to provide maximum typing width.
00000740(You should have a #963 typing element for an EBCDIC terminal, and a #015 element for a correspondence terminal).
00000750Make sure the switch on the left side of the cabinet is on COM.
00000760.nj;.cp 12;.h3 Logging on
00000770.ke Logon Return
00000780.in 5;.rm 5;.of 3;1. Turn the terminal on.
00000790.of 3;2. Dial the appropriate telephone number.
00000800.of 3;3. When a high-pitched continuous tone is heard on the phone, place the phone in the acoustic coupler.
00000810.of 3;4. After the system types out: ENTER LOGON
00000820.of 3;5. Type in LOGON, and depress the RETURN key.
00000830.of 3;6. Then respond to the system prompts.
00000840.of 3;7. When the system is prepared to accept your instructions, it will type out READY.
00000850.sp;.ju;.in 0;.rm 0;You are now ready to create a file, edit an existing file, print or process (SCRIPT) an existing file, etc.
00000860By entering simple commands (such as EDIT, LIST, PRINT, SCRIPT etc.) from the terminal,
00000870you access an extensive set of interactive facilities, as well as create and format SCRIPT files.
00000880.sp;Text lines of a SCRIPT file should, of course, be typed exactly as you wish them to appear on output.
00000890The system generally types its messages to you in uppercase.
00000900Your Command entries appear to the system as uppercase, no matter how you type them in;
00000910the practice of using only lowercase for commands is merely a convention to improve the readability of your terminal printout.
00000920.sp;.ss;.sp;.if SYSLINE > 32 .di on
00000930          O
00000940        ×/¯
00000950        /|              Ð×××××××××¯
00000960       /| user          |TSO      |
00000970                        |         |
00000980                        |  "READY"|
00000990                       ®¿×××××××××¨®
00001000                      ®             ®
00001010                     ®               ®
00001020         Ð××××××××××¯                 Ð××××××××××¯
00001030         |Editor    |                 |SCRIPT    |
00001040         |          |                 |          |
00001050         |    "EDIT"|                 |  "Adjust"|
00001060         ¿××××××××××¨                 ¿××××××××××¨
00001070        ®        ®                        ®      ®
00001080 Ð××××××××××¯     ®                      ®        ®  _____
00001090 |Input     |      ®                    ®          ®/___ /(
00001100 |          |       ®                  ®           //___///
00001110 |   "INPUT"|        ®                ®           /    //
00001120 ¿××××××××××¨         ®              ®           /_____//
00001130                       ®            ®           (_____(/
00001140                        Ð××××××××××¯             Document
00001150                        | computer |
00001160                        | datasets |
00001170                        ¿××××××××××¨
00001180.ds;.h5 Figure &SYSCOUNT  The User / TSO / The Editor / SCRIPT
00001190.br;.di off
00001200.h2 Your SCRIPT File
00001210The source data representing your document is stored for you by the data management facilities
00001220of the computer system and is called a SCRIPT file.
00001230It is composed of records and resides on disk space allocated to you and is usually identified by your userid.
00001240The typical TSO dataset name is fully named 'userid.SCRIPT.TEXT(membername)', and may be addressed by means of the usual TSO abbreviations.
00001250SCRIPT files consist of text lines and special command words which you type in at your terminal.
00001260.h3 Creating and Modifying your SCRIPT File with the Editor
00001270The EDIT facility enables you to create your SCRIPT file, make changes to the file, or simply peruse its contents.
00001280There are two modes of operation when using the Editor: Input and Edit.
00001290The EDIT command is used to invoke the Edit facility:
00001300.sp;.in 5;EDIT SCRIPT(filename) TEXT
00001310.ke Edit Input Save
00001320.in 0;.h3 Creating a SCRIPT File
00001330First, decide on a filename.
00001340The maximum length of a filename is eight characters.
00001350Any alphanumeric characters (A-Z,0-9) may be used, starting with an alphabetic.
00001360The filename and the user's dataset-name uniquely identify a file for access by the TSO commands.
00001370When you are creating a file, make certain you choose a new and unique filename. Next, issue the command:
00001380.sp;.in 5;EDIT SCRIPT(filename) TEXT NEW
00001390.sp;.in 0;and depress the Return key. The system responds with:
00001400.sp;.in 5;INPUT
00001410.ss;.br;00010
00001420.ds;.sp;.in 0;You are now in Input mode and ready to type in your file,
00001430one line at a time, hitting RETURN at the end of each line.
00001440The 00010 signifies the first line. Each line is associated with a line number, which normally starts at 10 and increments by 10 (for convenient later insertion).
00001450.sp;Your SCRIPT file contains textual information plus special SCRIPT command words for controlling the format of your output.
00001460These commands are generally typed on separate lines from the text, and always start with a period in position 1.
00001470.sp;.cp 5;When you have finished typing in your file you must store it.
00001480To do this, you must leave Input mode and enter Edit mode.
00001490To enter Edit mode, hit RETURN on a "null" line (a line on which nothing has been typed -- not even spaces --
00001500and, therefore, the typing element is at the left margin).
00001510The system responds with:
00001520.in 5;EDIT
00001530.in 0;You type:
00001540.in 5;SAVE
00001550.in 0;and hit RETURN. The system types:
00001560.in 5;SAVED
00001570.in 0;To exit from the Edit facility, you enter:
00001580.in 5;END
00001590.in 0;and hit RETURN. The system responds:
00001600.in 5;READY
00001610.in 0;While in the "Edit" mode, numerous editing subcommands are also available to the user.
00001620Examples are CHANGE, DELETE, FIND, INSERT etc, (see Appendix &EditA., Page &EditP.).
00001630.ke Change Delete Find Insert
00001640For further details, consult the IBM manual "TSO Command Language Reference" (GC28-6732).
00001650.h2 Additional Terminal Facilities
00001660There are additional capabilities which can help the terminal user while entering data (in any mode: READY, EDIT or INPUT).
00001670.h3 The Attention Key
00001680Most terminals offer an "interrupt" capability, in the form of an ATTN key (sometimes labelled BREAK or INTERRUPT).
00001690If the ATTN is pressed after a partial line has been typed (but without pressing RETURN), the effect is to ignore the partial line.
00001700If a computer program (e.g. Editor, Script etc.) is interrupted (i.e. by the ATTN key), control will pass back to the READY (TSO) state,
00001710at which point the user may either restore processing by just pressing RETURN,
00001720or any other other TSO command may be invoked instead.
00001730.ke Attention
00001740.h3 Line Deletion
00001750.ke Line
00001760If, while typing a line, you wish to "erase" or "ignore" the line being typed in, you should press the ATTN key once.
00001770The computer/terminal will respond with !D and the carriage will return; you may then procede as though the line does not exist.
00001780(If your particular terminal does not have an Attention key, alternative arrangements can be made).
00001790.h3 Character Deletion
00001800.ke Char
00001810If, while typing a line, you wish to "erase" or "rub-out" one or more characters, you should enter the appropriate number of "rub-out" characters, and then procede as though those characters had vanished.
00001820For most SCRIPT users, the "rub-out" character is the "at" symbol (@), but any other non-conflicting character can be arranged for.
00001830.in 0;.rm 0;.h1 The SCRIPT Command
00001840The SCRIPT command is your means of causing the SCRIPT file containing your document
00001850to be processed by SCRIPT and printed.
00001860The processing of your file is accomplished by SCRIPT in accordance with the control words you entered
00001870into your document as you developed it.
00001880When you issue the SCRIPT command, you must name the file you wish to be processed,
00001890and indicate to SCRIPT which of the controlling options are to be operative.
00001900.sp;The format of the SCRIPT command is:
00001910.sp 2;     SCRIPT  name  [option1  option2  ... ]
00001920.sp;"name" identifies the file (member within your SCRIPT.TEXT dataset) to be processed.
00001930.sp;The available options follow. The minimum acceptable abbreviation is underscored.
00001940.ke Abbreviations
00001950.cs 1 on;All are detected in SCR001, and communicated to the various routines needing the information.
00001960.ke SCR001;.cs 1 off
00001970.in 0;.kp on;.h3 ___CLEANUP
00001980.in 5;If you have had any TSO difficulties, such as interruptions or early termination of a preceding pass,
00001990this option can be used to assure (almost) a successful execution. This will be at the expense of some extra delay plus
00002000extraneous messages.
00002010.cs 1 on;This only affects the SCRIPT Clist.
00002020.cs 1 off;.kp off;.br;.ke Cleanup_______ TSO
00002030.in 0;.kp on;.h3 ___CONTINUE
00002040.in 5;This option causes processing to continue even after detecting and diagnosing any errors.
00002050This option is automatically in effect whenever OFFLINE has been requested.
00002060Severe and terminal errors will cause termination in any case.
00002070.cs 1 on;This is observed only in SCR099, if called.
00002080.cs 1 off;.kp off;.br;.ke Continue________
00002090.in 0;.kp on;.h3 ___COPIES(n)
00002100.in 5;This parameter causes multiple copies (n) of the formatted output to be produced.
00002110.rc 1 on;This can be used in the OFFLINE (or BATCH) mode to produce this many identical copies,
00002120or in the interactive mode in conjunction with the .rd and/or .te control words.
00002130.cs 1 on;This is in the SCRIPT Clist, effecting the OS JOB statement under BATCH or OFFLINE.
00002140When running interactively, SCR001 passes the information back to SCRIPT to control the outer loop.
00002150.cs 1 off;.rc 1 off;.kp off;.br;.ke Copies______ Batch Offline Terminal .rd .te
00002160.in 0;.cs 1 on;.kp on;.h3 ___DEBUG
00002170.in 5;This enables any built-in programming debug outputs.
00002180This state can also be enabled and/or disabled by the .debug control word.
00002190.kp off;.br;.ke Debug_____ .debug;.cs 1 off
00002200.in 0;.kp on;.h3 __DSN(dataset-name)
00002210.in 5;This parameter allows the user to reference other than his/her own SCRIPT.TEXT dataset, (i.e. prefixed by ones own userid).
00002220The fully qualified dataset name must be so specified, without quotes.
00002230.cs 1 on;This only affects the SCRIPT Clist.
00002240.cs 1 off;.kp off;.br;.ke Dsn___ Userid
00002250.in 0;.kp on;.h3 __FILE
00002260.in 5;The presence of FILE writes the formatted output of SCRIPT into a file named "$filename",
00002270instead of at the terminal or offline printer.
00002280.kp off;.br;.ke File____
00002290.in 0;.cs 1 on;.kp on;.h3 LIB___(library-name)
00002300.in 5;Under normal running conditions, the user will want the "production" copy of the Ryan SCRIPT program and this parameter need not be mentioned.
00002310Careful access to "test" versions etc. are possible with the LIB parameter.
00002320The library name must be fully qualified, and expressed without_______ quotes.
00002330.kp off;.br;.ke _Lib;.cs 1 off
00002340.in 0;.kp on;.h3 __LPI(n)
00002350.in 5;This parameter can be used as an aid in setting up for a line density other than the usual 6 lines-per-inch.
00002360The result is to start SCRIPT with more suitable default values for some of the page format controls.
00002370.cs 1 on;This value is communicated via the variable LPI from SCR001 to SCR002.
00002380.cs 1 off;Acceptable values of "n" and the affected controls are:
00002390.br;If you specify LPI___, you get: PL__  BM___&__TM__ FM___&__HM__  LS__
00002400.ss;                3            33     3       1      0
00002410                4            44     4       1      0
00002420                6            66     6       2      0
00002430                6 (66/40)    62     4       2      0
00002440                8            88     8       3      1
00002450.ds;.kp off;.br;.ke 'IBM 66/40' Lpi___ .bm .tm .pl .fm .hm .ls
00002460.in 0;.kp on;.h3 __MARK
00002470.in 5;This option marks the beginning of each line of the original input by underlining the first character.
00002480.cs 1 on;This effects only SCR005.
00002490.cs 1 off;.kp off;.br;.ke Mark____
00002500.in 0;.kp on;.h3 ___NONUM
00002510.in 5;This option indicates that the SCRIPT file to be processed does not employ the usual TSO line numbering conventions.
00002520.cs 1 on;This fact is observed only in the main routine, SCRIPT.
00002530.cs 1 off;.kp off;.br;.ke Nonum_____ Num
00002540.in 0;.kp on;.h3 ___NOWAIT
00002550.in 5;This starts SCRIPT output (at the terminal) immediately without prompting and waiting for the first page to be adjusted.
00002560.cs 1 on;This only avoids the page-adjustment prompt and wait for reply in SCR002.
00002570.cs 1 off;.kp off;.br;.ke Nowait______ Terminal
00002580.in 0;.kp on;.h3 ____NUMBER
00002590.in 5;This optionally prints in the left margin the SCRIPT filename and line number corresponding to each line of the printed output.
00002600The text is shifted 30 characters to the right.
00002610The usefulness of this option is most pronounced during the development of a large document.
00002620.cs 1 on;This is only effective in SCR050.
00002630.cs 1 off;.kp off;.br;.ke Number______
00002640.in 0;.kp on;.h3 _OFFLINE (or B_ATCH)
00002650.in 5;The presence of this option causes the SCRIPT processing to be done in the background (batch) mode.
00002660In addition, the output will be printed on the high-speed line-printer, instead of the user's terminal.
00002670This is particularly handy for larger documents.
00002680.cs 1 on;This basicly controls the Clist.
00002690In addition, it causes OPTION.SYSOUT to take on the value "PRINT", rather than "TERM".
00002700This variable is observed in SCR050, and perhaps SCR150.
00002710.cs 1 off;.kp off;.br;.ke Batch_____ Offline_______ Acct
00002720.in 0;.kp on;.h3 __PAGE(from or from-to or PROMPT)
00002730.in 5;This provides a set of controls to determine which pages of the formatted output document are to be printed.
00002740The option "from" is the page number of the first page to be printed.
00002750A range of pages may also be specified, using the form "from-to" (supply the hyphen, but no blanks or commas).
00002760If you give the word PROMPT, SCRIPT will prompt you for the starting and ending numbers.
00002770In responding to the prompt, the user may also supply any of the keywords: EXTERNAL, INTERNAL, ONLY, SINGLE or *.
00002780This will allow you to have more than one range of pages printed;
00002790if SCRIPT is prompting, it will ask again for a range of pages after each set is completed.
00002800If you enter a null line, SCRIPT will terminate processing.
00002810.cs 1 on;These facts are communicated, via OPTION.PAGE(*), from SCR001, to SCR050 for selective printing, and to-and-from SCR072 fro further page-end prompting.
00002820.cs 1 off;.kp off;.br;.ke Page____
00002830.ke Single Only External Internal Prompt
00002840.in 0;.kp on;.h3 _QUIET
00002850.in 5;This causes the SCRIPT version number identification line,
00002860normally printed immediately after issuing the SCRIPT command, to be suppressed.
00002870.cs 1 on;This is seen only in SCR001.
00002880.cs 1 off;.kp off;.br;.ke Quiet_____
00002890.in 0;.kp on;.h3 __SINGLE
00002900.in 5;This terminates printing after one page, usually used in conjunction with the PAGE option.
00002910.cs 1 on;This is in support of the PAGE option, see above.
00002920.cs 1 off;.kp off;.br;.ke Single______ Page
00002930.in 0;.kp on;.h3 __STOP
00002940.in 5;This causes an indefinite pause at the bottom of each page during SCRIPT printout.
00002950This enables the user to put in a fresh sheet of bond, realign the typewriter, or shoot a copy of the CRT.
00002960.cs 1 on;This is seen only in SCR072.
00002970.cs 1 off;.kp off;.br;.ke Stop_ Terminal Pagination
00002980.cs 1 on;.rc 1 on;.in 0;.kp on;.h3 ____SYSLIB(library-name)
00002990.in 5;This optional parameter offers access to a user-specified library of set symbols.
00003000.kp off;.rc 1 off;.ke .se Syslib_;.cs 1 off
00003010.in 0;.kp on;.h3 ____SYSVAR(text)
00003020.in 5;.su off;This optional parameter provides a means of communication between the user and the SCRIPT file,
00003030at the time of invocation, without having to resort to the editor.
00003040Whatever "text" is so supplied can be referred to in the file as the set symbol &SYSVAR.
00003050.cs 1 on;This is seen only in SCR001, but the equivalent set symbol can be anywhere.
00003060.cs 1 off;.kp off;.br;.ke Sysvar_
00003070.in 0;.kp on;.h3 __TOPIC(ids)
00003080.in 5;This is a means by which the SCRIPT user can view selected sections or chapters within a document.
00003090In so doing, the user thinks of the first "word" (non-blank string) of the topic head as the section identifier (ids above).
00003100The sections to be seen will then be the text following that head and continuing until another head is encountered with a higher______ head level (smaller level number).
00003110If a second id is supplied (following a hyphen), it specifies the terminating conditions.
00003120For instance, since the SCRIPT user guide is itself represented by a SCRIPT file, the interested user can request printout of this paragraph alone by including the option TOPIC(topic).
00003130.cs 1 on;This is seen in SCR050 and SCR074.
00003140.cs 1 off;.kp off;.br;.ke Topic_
00003150.ke .h0 .h1 .h2 .h3 .h4 .h5 .h6
00003160.in 0;.su on;.kp on;.h3 __TRANSLATE
00003170.in 5;This translates all lowercase letters to uppercase in printout.
00003180.cs 1 on;This shows up only in SCR050.
00003190.cs 1 off;.kp off;.br;.ke Translate_ Upcase
00003200.in 0;.kp on;.h3 __TWOPASS
00003210.in 5;This causes 2 passes through the input file(s) to occur.
00003220Both passes process all the control words, but actual formatted output occurs only on the second pass.
00003230This becomes necessary whenever information is needed in the document before it has been (sequentially) encountered,
00003240for example the page numbers required in a table of contents at the beginning of a document.
00003250.cs 1 on;This basicly effects the per-pass loop in the main routine, SCRIPT.
00003260.cs 1 off;.kp off;.br;.ke Twopass_
00003270.in 0;.kp on;.h3 __UNFORMAT
00003280.in 5;This prints the inputted SCRIPT file along with the control words.
00003290This can be handy in the development of large documents.
00003300.cs 1 on;This appears only in the main routine, SCRIPT.
00003310.cs 1 off;.kp off;.br;.ke Unformat_
00003320.in 0;.of 0;.sp 2;.kp on;In the case of OFFLINE (BATCH) submittals, the following options may also apply:
00003330.kp off;.br;.ke Acct Name Batch Offline
00003340.in 0;.kp on;.h3 __ACCT(ewo)
00003350.in 5;This parameter must____ accompany each OFFLINE request, so that the proper EWO (Engineering Work Order)
00003360can be charged for the run.
00003370.cs 1 on;This is effective only in the SCRIPT Clist, in the BATCH condition, going into the JOB card.
00003380.cs 1 off;.kp off;.br;.ke _Acct Batch Offline
00003390.in 0;.kp on;.h3 __ADJUST(n)
00003400.in 5;This option causes OFFLINE output to be shifted n characters to the right on the printer paper.
00003410The user should allow for sufficient line space: if the largest .LL in the Script file is 60, then Adjust should not exceed 70.
00003420.cs 1 on;This only comes into play in SCR050.
00003430.cs 1 off;.kp off;.br;.ke _Adjust Batch Offline
00003440.ke Center
00003450.in 0;.kp on;.h3 __CENTER
00003460.in 5;This option causes OFFLINE output to be shifted 30 characters to the right on the printer paper; i.e. centered on the page.
00003470This is exactly the same as ADJUST(30).
00003480.kp off;.br;.ke _Center Batch Offline Adjust
00003490.in 0;.kp on;.h3 ___CLASS(jobclass)
00003500.in 5;This parameter may accompany an OFFLINE request, if greater than "A" priority is justified.
00003510.cs 1 on;This is in the SCRIPT Clist, under BATCH or OFFLINE, effecting the OS JOB statement.
00003520.cs 1 off;.kp off;.br;.ke _Class Batch Offline
00003530.ke Priority
00003540.in 0;.cs 1 on;.kp on;.h3 ___DEPT(department)
00003550.in 5;Ryan Engineering computer usage conventions designate this field to mean program-number;
00003560so, for normal Engineering applications, the default value of this parameter (1620) will suffice and need not be mentioned.
00003570Alternatively, other departments using SCRIPT in a BATCH mode may choose to specify their 4 digit department number.
00003580This is in the SCRIPT Clist, under BATCH or OFFLINE, effecting the OS JOB statement.
00003590.kp off;.br;.ke _Dept Batch Offline;.cs 1 off
00003600.in 0;.kp on;.h3 __FORMS(forms-code)
00003610.in 5;Ordinarilly, an OFFLINE submittal will be printed with the "TN" train, that is with upper and lower case letters etc.
00003620If 80 is given (instead of the default 60), the printer will be set up for 8 lines per inch (rather than the usual 6 lpi).
00003630Values of 66 and 88 respectively, request special printer setup, with a fresh ribbon plus a high quality bond paper.
00003640At the moment, all such printout is typically scheduled for overnight processing.
00003650A forms-code of 10 will offer upper-case only and automatically route the printout to Engineering.
00003660The form FORMS() can be used to route to other than Engineering, but with upper-case only.
00003670.cs 1 on;This is in the SCRIPT Clist, under BATCH or OFFLINE, effecting the OS JOB statement.
00003680.cs 1 off;.kp off;.br;.ke _Forms Batch Offline Lpi
00003690.in 0;.kp on;.h3 _JOBNAME(OS-jobname)
00003700.in 5;This parameter can accompany an OFFLINE submittal, if other than LOG1620 is desired for the OS jobname, for traceability via Dj.
00003710(It must be no more than 8 alphanumeric characters and begin with an alphabetic).
00003720.cs 1 on;This is in the SCRIPT Clist, under BATCH or OFFLINE, effecting the OS JOB statement.
00003730.cs 1 off;.kp off;.br;.ke _Jobname Dj Batch Offline
00003740.in 0;.kp on;.h3 ___LINES(K-lines)
00003750.in 5;If the user expects to receive more than 2K (2000) lines of printout, this option should say so.
00003760.cs 1 on;This is in the SCRIPT Clist, under BATCH or OFFLINE, effecting the OS JOB statement.
00003770.cs 1 off;.kp off;.br;.ke _Lines Batch Offline
00003780.cs 1 on;.in 0;.kp on;.h3 __MSGLEVEL(1)
00003790.in 5;This option instructs the batch processor to print the OS system messages.
00003800This only effects the JOB card, while in the Clist.
00003810.kp off;.br;.ke _Msglevel Batch Offline;.cs 1 off
00003820.in 0;.kp on;.h3 __NAME(user)
00003830.in 5;This parameter should be included with each OFFLINE (or BATCH) submittal, in order that the resulting printout can be delivered back to the submitting user.
00003840It can also be used to direct delivery to some other recipient.
00003850If not supplied, the printout will be delivered into the Engineering bin labelled "Unknown".
00003860This name must be no longer than 8 alphanumeric characters, beginning with an alphabetic).
00003870.cs 1 on;This is in the SCRIPT Clist, under BATCH or OFFLINE, effecting the OS JOB statement.
00003880.cs 1 off;.kp off;.br;.ke _Name Batch Offline
00003890.in 0;.kp on;.h3 _ROUTE(REMOTE1)
00003900.in 5;Inclusion of these two parameters causes the resultant formatted printout to come off on the printer at the KM (Kearny Mesa) location.
00003910It should be noted that the KM computer's printer does not currently offer lower case letters (thus the FORMS() parameter becomes necessary).
00003920On the other hand, any appropriate variation of the REMOTE1 value will route the output to any___ RJE station hooked into Ryan's computer complex.
00003930Currently, the normal printout alternative is the IBM 66/40 Document Printer, which is reached by REMOTE6.
00003940.cs 1 on;This produces the appropriate OS/HASP /*ROUTE card, in the SCRIPT Clist under BATCH or OFFLINE.
00003950.cs 1 off;.kp off;.br;.ke _Route Batch Offline Remote 'IBM 66/40' Forms
00003960.in 0;.kp on;.h3 __SAVEJCL
00003970.in 5;This option may be included with a BATCH or OFFLINE submittal.
00003980The effect is to preserve the intermediate JCL.CNTL dataset that had been transmitted into the background environment.
00003990These JCL "decks" will be preserved in the user's JOB(member) dataset.
00004000This option requires concurrent specification of USERID.
00004010Subsequently, the user may use the SUBMIT Clist to invoke the background process, with less delay.
00004020.kp off;.br;.ke _Savejcl Batch Offline Submit
00004030.ke Submit
00004040.in 0;.kp on;.h3 __TIME(cpu-minutes)
00004050.in 5;This parameter should accompany an OFFLINE submittal, if the user estimates more than 1 cpu minute for the process.
00004060It should be noted that the computer will automatically cancel______
00004070any OFFLINE run that tries to exceed its time estimate.
00004080.cs 1 on;This is in the SCRIPT Clist, under BATCH or OFFLINE, effecting the OS JOB statement.
00004090.cs 1 off;.kp off;.br;.ke _Time Batch Offline
00004100.in 0;.kp on;.h3 __USERID(userid)
00004110.in 5;If the user desires, this parameter can request that notification be sent to the submitter (at the terminal)
00004120upon completion of the OFFLINE run.
00004130This will mean that the actual computer processing is finished, and the printing is to be done.
00004140The USERID option is expected whenever SAVEJCL is used.
00004150.cs 1 on;This is in the SCRIPT Clist, under BATCH or OFFLINE, effecting the OS JOB statement.
00004160.cs 1 off;.kp off;.br;.ke _Userid Batch Offline
00004170.ke Savejcl
00004180.in 2;.rm 2;.nj;.sp;.tr # tab;.tb 20
00004190.kp off
00004200.ss;.pa;.bx 1 &$ll;.h6 Table &SYSCOUNT(1)  Summary of SCRIPT Command Options
00004210.se loop=0
00004220... Top1 .se loop=&loop + 1
00004230.bx 1 &$ll
00004240.of 17;ACCT(ewo)#An EWO must be given with BATCH.
00004250.of 17;ADJUST(n)#The overall adustment on the page.
00004260.of 17;BATCH#This will submit the task into the background/batch (like OFFLINE).
00004270.of 17;CENTER#This adjusts right 30 columns on the page.
00004280.of 17;CLASS(jobclass)#This is the OS jobclass in BATCH.
00004290.of 17;CLEANUP#This will "clean house" from some TSO problems.
00004300.of 17;CONTINUE#This requests that SCRIPT continue running after error detection.
00004310.of 17;COPIES(n)#This will print multiple copies in BATCH.
00004320.cs 1 on;.of 17;DEBUG#to cause any debug tracing.
00004330.cs 1 off;.of 17;DEPT(department)#This is the user's 4-digit department number.
00004340.of 17;DSN(dataset)#This can be the name of a desired SCRIPT file other than SCRIPT.TEXT.
00004350.of 17;FILE#This is to put the formatted output into a file, instead of printing.
00004360.of 17;FORMS(code)#This will control special OFFLINE printer setup.
00004370.of 17;JOBNAME(name)#This is the OS jobname in BATCH.
00004380.cs 1 on;.of 17;LIB(library)#program library other than "production".
00004390.cs 1 off;.of 17;LINES(K-lines)#This is the printout line estimate for BATCH.
00004400.of 17;LPI(n)#This is the lines per inch intended for printer or typewriter setup.
00004410.of 17;MARK#This marks the start of each file record.
00004420.of 17;MSGLEVEL(1)#This gets OS system messages in Batch.
00004430.of 17;NAME(user)#This is the name of the user, for distribution of BATCH printout.
00004440.of 17;NONUM#This indicates that the given SCRIPT file is not numbered.
00004450.of 17;NOWAIT#This suppresses the page setup delay.
00004460.of 17;NUMBER#This numbers the formatted output with equivalent file record numbers.
00004470.of 17;OFFLINE#This submits the task into the background/batch (like BATCH).
00004480.of 17;PAGE(request)#This requests specific pages of the output.
00004490.of 17;QUIET#This suppresses program identification printout.
00004500.of 17;ROUTE(target)#This routes BATCH printout to remote printers.
00004510.of 17;SAVEJCL#This preserves the BATCH JCL.
00004520.of 17;SINGLE#This prints a single page.
00004530.of 17;SPACE(n)#This is the intermediate storage requirements.
00004540.of 17;STOP#This will delay typing at the bottom of each page.
00004550.cs 1 on;.of 17;SYSLIB(library)#library of set symbols.
00004560.cs 1 off;.of 17;SYSVAR(whatever)#This is input to file at execution time.
00004570.of 17;TIME(minutes)#This is the time estimate in BATCH.
00004580.of 17;TOPIC(id)#This causes selection of topic(s) for printout.
00004590.of 17;TRANSLATE#This is to print in uppercase only.
00004600.of 17;TWOPASS#This will make two passes on the file.
00004610.of 17;UNFORMAT#This is to print an unformatted listing of the file.
00004620.of 17;USERID(user)#This requests notification upon completion of the BATCH task.
00004630.bx off all;.if &loop = 2 .fs 0;.if &loop = 2 .pn off;.pa;.fs 1;.pn on;.if &loop < 2 .go Top1
00004640.ds;.in 0;.rm 0;.of 0;.ju;.in 0;.h1 SCRIPT Control Words
00004650This section describes SCRIPT control words and how they are used to determine the appearance
00004660of documents printed via the SCRIPT command.
00004670The first set of control words presented consists of those used for page setup and titling.
00004680These control words enable you to specify top and bottom margins, line length, and top and bottom titles
00004690(running heads and feet).
00004700The second set of control words described in this section comprises those used to control text formatting.
00004710These control words determine whether your text will be centered or flush with the left or right margins,
00004720whether it will be right-justified, as-is, or ragged-right.
00004730(these terms are explained and illustrated as part of the appropriate control word descriptions).
00004740Following the text formatting control words are those for supplemental page formatting
00004750such as tab setting, indenting, page ejection and reserved space for illustrations or material from other SCRIPT files.
00004760The remaining control words are those that permit you to specify margin indicators for revised portions of your
00004770document, include only certain portions of it when printing, accept input from a terminal during printing,
00004780and direct selected portions of your document to the terminal even though the remainder is being printed offline.
00004790Two control words, set-symbol and substitute-symbol, are described separately at the end of this section.
00004800.h2 Notational Conventions used in this Manual
00004810.ke Abbreviations
00004820Each control word is shown in both its full and abbreviated form.
00004830You may enter either form when developing your document, as long as you begin each control word with the period character (.).
00004840Control words are separated from their arguments, and multiple arguments are separated from each other by one or more blanks.
00004850Although the diagonal character (/) is shown as the delimiter between portions of an argument,
00004860as in the even-page top-title control word, any character that does not appear in the argument can be used.
00004870Sometimes, parameters will be presented surrounded by square brackets [...];
00004880this means that the option(s) are entirely optional and their absence implies some specific default meaning.
00004890On the other hand, if options are surrounded by "curly" braces »...º, the user must specify a choice of one.
00004900In the description of the various control words' operands, there is significance in the lower and upper case letters:
00004910An operand described in lower case is to be replaced by some text, word, value or name (as explained below it).
00004920An operand described in upper case is a keyword, which if included by the user must be spelled precisely as is
00004930(but may actually be entered in any combination of upper or__ lower case).
00004940The presence of "Æ" indicates that the numeric following it is to be added (or subtracted) from the control parameter involved.
00004950.ke Æ
00004960.ss;.pa;.bx 1 &$ll;.nf;.h6 Table &SYSCOUNT(1)  Summary of SCRIPT Control Words;.cd 2 0 32;.tr # tab;.tb 7
00004970.sc;.se loop=0
00004980... Top2 .se loop=&loop + 1
00004990.bx off / 1 33 &$ll;.mc
00005000 ...#set label
00005010 .ap#append
00005020 .bc#balanced columns
00005030 .bf#boldface
00005040 .bm#bottom margin
00005050 .br#break
00005060 .bt#bottom title
00005070 .bx#box
00005080 .cb#column begin
00005090 .cc#conditional column begin
00005100 .cd#column definition
00005110 .ce#center
00005120 .cl#column length
00005130 .cm#comment
00005140 .co#concatenate mode
00005150 .cp#conditional page eject
00005160 .cs#conditional section
00005170 .cw#control word separator
00005180.cs 1 on; .debug program tracing
00005190.cs 1 off; .dh#define head level
00005200 .dm#define macro
00005210 .di#delay imbed
00005220 .ds#double space
00005230 .eb#even page bottom title
00005240 .ef#end of file
00005250 .ep#even page eject
00005260 .et#even page top title
00005270 .fi#fill mode
00005280 .fm#footing margin
00005290 .fn#footnote
00005300 .fo#format mode
00005310 .fs#footing space
00005320 .ft#footing title
00005330 .go#go to
00005340 .he#heading
00005350 .hm#heading margin
00005360 .hn#headnote
00005370 .hs#heading space
00005380 .hw#hyphenate word
00005390 .hy#hyphenate mode
00005400 .h0-.h6#head level
00005410 .if#if
00005420 .im#imbed file
00005430 .in#indent
00005440 .ix#index
00005450 .ju#justify mode
00005460 .ke#keyword
00005470 .kp#keep
00005480 .li#literal
00005490 .ll#line length
00005500 .ln#line number
00005510 .ls#line spacing
00005520 .mc#multicolumn mode
00005530 .ms#macro substitution
00005540 .nb#no balanced columns
00005550 .nc#no concatenate mode
00005560 .nf#no format mode
00005570 .nh#no hyphenate mode
00005580 .nj#no justify mode
00005590 .ob#odd page bottom title
00005600 .of#offset
00005610 .oj#out justify
00005620 .op#odd page eject
00005630 .ot#odd page top title
00005640 .pa#page eject
00005650 .pl#page length
00005660 .pn#page numbering mode
00005670 .pp#paragraph
00005680 .ps#page number symbol
00005690.cs 1 on; .pt#put table of contents
00005700.cs 1 off; .qq#quick quit
00005710 .qu#quit
00005720 .rc#revision code
00005730 .rd#read terminal
00005740 .re#restore
00005750 .ri#right justify
00005760 .rm#right margin
00005770 .rv#read variable
00005780 .sa#save status
00005790 .sc#single column mode
00005800 .se#set symbol
00005810 .sk#skip lines
00005820 .sp#space lines
00005830 .ss#single space mode
00005840 .su#substitute mode
00005850 .tb#tab set
00005860 .tc#table of contents
00005870 .te#terminal input
00005880 .tm#top margin
00005890 .tr#translate characters
00005900 .tt#top title
00005910 .ty#type on terminal
00005920 .uc#underscore capitalize
00005930 .ud#underscore definition
00005940 .up#uppercase
00005950 .us#underscore
00005960.if &loop = 2 .fs 0;.if &loop = 2 .pn off;.sc;.bx off all;.pa;.fs 1;.pn on;.if &loop < 2 .go Top2
00005970.ds;.fo;.cd 1 0
00005980.h2 Page Setup and Formatting
00005990Page setup and formatting consists basically of determining the dimensions of the final text on the page.
00006000Using the control words described below, you can specify top and bottom margins, left and right margins,
00006010the margins between body text and top and bottom titles (heads and feet),
00006020The number of title lines to be printed, and the type and position of page numbering.
00006030.tr * 9f;The diagram below illustrates a piece of paper, marked by the *'s.
00006040The body of the manuscript text is enclosed within the inner rectangle.
00006050The following margin settings are indicated below:
00006060.ke .bm .cl .fm .fs .hm .hs .in .ll .pl .rm .tm
00006070.ss;.bc;.sp 2;.cd 2 5 35;.nf;.li on
00006080.BM   Bottom-Margin
00006090.CL   Column-Length
00006100.FM   Footing-Margin
00006110.FS   Footing-Space
00006120.HM   Heading-Margin
00006130.HS   Heading-Space
00006140.IN   Indent
00006150.LL   Line-Length
00006160.PL   Page-Length
00006170.RM   Right-Margin
00006180.TM   Top-Margin
00006190.li off;.cd 1 0;.sp 2;.cp 33;.in 4
00006200¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤
00006210¤    |A                                              ¤  |A
00006220¤    |                                              ¤  |
00006230¤   .TM(6)      Top Titles (if any) .HS(1)          ¤  |
00006240¤    |                   |A                          ¤  |
00006250¤    |                  .HM(2)                      ¤  |
00006260¤    |V                   |V                          ¤  |
00006270¤×××××××××××××××××××××××××××××××××××××××××××××××××××¤  |
00006280¤ --------------------   --------------------       ¤  |
00006290¤ --------------------   --------------------       ¤  |
00006300¤ --------------------   --------------------       ¤  |
00006310¤ --------------------   -------------              ¤  |
00006320¤ --------------------   -------------              ¤  |
00006330¤ --------------------   -------------              ¤ .PL(66)
00006340¤         ------------   -------------              ¤  |
00006350¤         ------------   --------------------       ¤  |
00006360¤         ------------   --------------------       ¤  |
00006370¤         ------------   --------------------       ¤  |
00006380¤         ------------   --------------------       ¤  |
00006390¤×××××××××××××××××××××××××××××××××××××××××××××××××××¤  |
00006400¤    |A                   |A                          ¤  |
00006410¤    |                  .FM(2)                      ¤  |
00006420¤    |                   |V                          ¤  |
00006430¤   .BM(6)    Bottom Titles (if any) .FS(1)         ¤  |
00006440¤    |                                              ¤  |
00006450¤    |V                                <--.RM--       ¤  |V
00006460¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤
00006470 <---.IN--->               <---------.CL-------->
00006480 <---------------------.LL(60)--------------->-
00006490 <----Column 1 of typewriter or printer platen.
00006500.ds;.h5 Figure &SYSCOUNT  SCRIPT Page Layout
00006510.pa;.in 0;.fo;.h2 Specifying the Overall Dimensions of a Page
00006520You can specify the overall dimensions of a page primarily with two control words:
00006530.sp;.ce 3;LINE-LENGTH or .ll
00006540.ss;and
00006550PAGE-LENGTH or .pl
00006560.ds;.sp;These are supplemented by use of the various top and bottom margin control words
00006570to determine exactly where the text begins and ends on the page whose length you have specified.
00006580.cm ---------------------------------------------------------------------------------------------------------------------->
00006590.se ab=.ll;.h3 Line Length (.ll)
00006600The LINE-LENGTH control word determines the maximum number of characters that will be printed as measured from the left
00006610margin.  This value includes spaces, indents, tabs, and offsets (See the OFFSET control word.), but not the underscores.
00006620Its format follows:
00006630.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.ll     [Æ]  n
00006640.bx off;.sp;.rm 5;.of 5;n    specifies the maximum number of characters in each output line.
00006650The Æ indicates that n is to be added to or subtracted from the preceding value of LL.
00006660If you do not enter a LINE-LENGTH control word, SCRIPT will assume an output line length of 60.
00006670.kp off;.se Tll=&;.ke Æ Break .ll___
00006680.sp;.in 0;.rm 0;The actual number of characters in any given output line is determined by the combination of the line length
00006690you have specified and the text formatting you have selected (See Text Formatting Control Words).
00006700If you have specified CONCATENATE-JUSTIFY, SCRIPT will first attempt to fill up the line by taking words from the next line
00006710without exceeding the line length specified by the .ll control word.
00006720SCRIPT then fills the remainder of the available line length by inserting blanks between words.
00006730Lines longer than the specified output line length are shortened by moving words to the next line
00006740and inserting blanks in the resulting shorter line.
00006750.cm ----------------------------------------------------------------------------------------------------------------------]
00006760.se ab=.pl;.h3 Page Length (.pl);
00006770The PAGE-LENGTH control word communicates to SCRIPT the maximum number of lines and line-spaces that can fit
00006780on the physical page.
00006790This allows SCRIPT to keep track of how many lines remain before it must eject to the next page,
00006800or pause so that you may insert a new page.  Its format follows:
00006810.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.pl     [Æ]  n
00006820.bx off;.sp;.rm 5;.of 5;n    is the number of lines possible on the output page.
00006830The Æ indicates that n is to be added to or subtracted from the preceding value of PL.
00006840If you do not enter a PAGE-LENGTH control word, SCRIPT will assume a page lenth of 66, unless LPI is specified.
00006850This corresponds to six lines per inch (standard for most terminals and line printers) using 11-inch paper.
00006860.kp off;.se Tpl=&;.ke Æ Break Pagination .pl___
00006870.in 0;.rm 0;.sp;Because the PAGE-LENGTH control word may be included anywhere in the document as often as necessary,
00006880you are not limited to using only one page size of paper for your output.
00006890By specifying PAGE-LENGTH as 82, for example, your document, or portions of it will print properly on legal size paper.
00006900This same page length could be used to print your document or certain pages of it
00006910on oversize pages which are intended to be photo-reduced during reproduction.
00006920.sp;Another reasonable application of .pl would be the intent of 1.5 line spacing.
00006930On a Selectric typewriter, 1.5 spacing can be set physically and supported within the SCRIPT file with .pl 44.
00006940On a line-printer, 8 lines per inch can be set physically and supported within the SCRIPT file with .pl 88;.ds.
00006950.se ab=;.cp 14;.h2 Margins and Titles
00006960SCRIPT provides six buffer areas for titles.
00006970Each of these buffer areas can be set for even page only, odd pages only, or for all pages.
00006980The control words .TT, .BT, .ET, .OT, .EB and .OB are used to set title lines into the buffer areas.
00006990The number of title lines that will be printed at the top and bottom of a page is determined by the .HS and .FS control words.
00007000If a heading space of 1 is in effect (this is the default value), one top title will be printed at the top of each page.
00007010.cm ----------------------------------------------------------------------------------------------------------------------]
00007020.se ab='.tm .bm';.h3 Top Margin and Bottom Margin (.tm and .bm);
00007030Using the TOP-MARGIN and BOTTOM-MARGIN control words, you determine what portion of the total page length will be occupied
00007040by body text.  These control words allow you to specify the number of non-text lines that will appear at the top and bottom,
00007050respectively, of each page of your document.
00007060Top titles and bottom titles are printed within the heading margin and footing margin;
00007070therefore, each margin must be large enough to accommodate the titles to be printed.
00007080If, for example, you had specified a page length of 66 (.pl 66), and top and bottom margins of 30,
00007090your document would be printed with six lines per page.
00007100Its format follows:
00007110.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.tm     [Æ]  n
00007120.bx off;.sp;.rm 5;.of 5;n    is the number of non-text lines to appear between the top of the page and the first line of
00007130body text.  If you do not enter a TOP-MARGIN control word, SCRIPT will assume a value of 6, unless LPI is specified.
00007140The Æ indicates that n is to be added to or subtracted from the preceding value of TM.
00007150.kp off;.se Ttm=&;.ke Æ Margin Break .tm___
00007160.sp;.cp 3;.in 0;.rm 0;If you change top margin settings within your document, each new setting
00007170takes effect on the first page started after the TOP-MARGIN control word is read by SCRIPT.
00007180Its format follows:
00007190.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.bm     [Æ]  n
00007200.bx off;.sp;.rm 5;.of 5;n    is the number of non-text lines to appear between the last line of body text and the bottom of the page.
00007210The Æ indicates that n is to be added to or subtracted from the preceding value of BM.
00007220If you do not enter a BOTTOM-MARGIN control word, SCRIPT will assume a value of 6, unless LPI is specified.
00007230.kp off;.se Tbm=&;.ke Æ Margin Break .bm___
00007240.sp;.cp 7;.in 0;.rm 0;If you change bottom margin settings within your document,
00007250each new setting takes effect on the first page to be ended after SCRIPT reads the BOTTOM-MARGIN control word.
00007260This means that the bottom margin of the _c_u_r_r_e_n_t page is changed.
00007270If there is not enough space left on the current page to accommodate the new bottom margin,
00007280an immediate page eject is forced, and the new bottom margin takes effect on the new page.
00007290.cm ----------------------------------------------------------------------------------------------------------------------]
00007300.se ab=.hm;.h3 Heading Margin (.hm)
00007310With the HEADING-MARGIN control word, you specify how many blank lines are to appear between the headings (top titles)
00007320and the first line of body text.
00007330This means that the headings actually occupy lines of the top margin.
00007340The value specified for the heading margin plus the number of top titles to be printed (HEADING-SPACE)
00007350must not be greater than that specified for the top margin.
00007360Its format follows:
00007370.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.hm     [Æ]  n
00007380.bx off;.sp;.rm 5;.of 5;n    is the number of blank lines to appear between the heading and the first line of body text.
00007390The Æ indicates that n is to be added to or subtracted from the preceding value of HM.
00007400If you do not enter a HEADING-MARGIN control word, SCRIPT will assume a value of 2, unless LPI is specified.
00007410.kp off;.se Thm=&;.ke Æ Margin Break .hm___
00007420.in 0;.rm 0
00007430.cm ----------------------------------------------------------------------------------------------------------------------]
00007440.se ab=.fm;.h3 Footing Margin (.fm)
00007450The FOOTING-MARGIN control word determines the number of blank lines that are to appear
00007460between the last potential line of body text and any footings (bottom titles).
00007470On occasion, the first line of this margin might be used to squeeze in a "widow line".
00007480Since the footings occupy lines of the bottom margin,
00007490the value specified for the footing margin plus the number of bottom titles to be printed (FOOTING-SPACE)
00007500must not be greater than that specified for the bottom margin.
00007510Its format follows:
00007520.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.fm     [Æ]  n
00007530.bx off;.sp;.rm 5;.of 5;n    is the number of blank lines to appear between the last potential line of body text and the footings.
00007540The Æ indicates that n is to be added to or subtracted from the preceding value of FM.
00007550If you do not enter a FOOTING-MARGIN control word, SCRIPT will assume a value of 2, unless LPI is specified.
00007560.kp off;.se Tfm=&;.ke Æ Margin Break .fm___
00007570.in 0;.rm 0
00007580.cm ----------------------------------------------------------------------------------------------------------------------]
00007590.se ab=.hs;.h3 Heading Space (.hs)
00007600Since the top titles are printed in the top margin area,
00007610and since you may want to print up to six top titles on each page,
00007620SCRIPT provides a control word for specifying how many lines to allocate from the top margin area for titles.
00007630Its format follows:
00007640.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.hs     [Æ]  n
00007650.bx off;.sp;.rm 5;.of 5;n    is the number of top titles to be printed on each page.
00007660The value of n may be from 0 to 6.
00007670The Æ indicates that n is to be added to or subtracted from the preceding value of HS.
00007680If you do not use a HEADING-SPACE control word, SCRIPT will assume a value of 1.
00007690Note that the current value of the top margin must be large enough to accommodate the heading space
00007700plus the heading margin.
00007710.kp off;.se Ths=&;.ke Æ Break Title .hs___
00007720.in 0;.rm 0
00007730.cm ----------------------------------------------------------------------------------------------------------------------]
00007740.se ab=.fs;.h3 Footing Space (.fs)
00007750The FOOTING-SPACE control word is analogous to the HEADING-SPACE control word.
00007760It allocates lines from the bottom margin area for bottom titles.
00007770Its format follows:
00007780.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.fs      [Æ]  n
00007790.bx off;.sp;.rm 5;.of 5;n    is the number of bottom titles to be printed on each page.
00007800The Æ indicates that n is to be added to or subtracted from the preceding value of FS.
00007810If you do not use a FOOTING-SPACE control word, SCRIPT will assume a value of 1.
00007820The current setting of the bottom margin must be large enough to accommodate the footing margin plus the footing space.
00007830.kp off;.se Tfs=&;.ke Æ Title Break .fs___
00007840.in 0;.rm 0
00007850.cm ----------------------------------------------------------------------------------------------------------------------]
00007860.se ab=.tt;.h3 Top Title (.tt)
00007870Top titles or running heads are useful to readers of your document as an aid in finding the portion of the document
00007880that contains a given block of information.
00007890(Notice the use of headings and footers in this manual.)
00007900.sp;SCRIPT provides the TOP-TITLE control word so that you need specify a heading only once,
00007910and have it printed at the top of each subsequent page until another TOP-TITLE (or other title control word) is encountered.
00007920In order for the specified title to be printed, you must have allocated space for it with the HEADING-SPACE control word,
00007930(this value, if left unmentioned, is automatically 1 for both top and bottom titles).
00007940The TOP-TITLE control word allows you to specify three separate parts so that on subsequent pages,
00007950you can retain a chapter heading, for example, and change a section heading.
00007960Its format follows:
00007970.sp 2;.kp on;.in 5;.bx 3 13 62;.li;.tt      [n]  /left/center/right/
00007980.bx off;.sp;.cp 14;.rm 5;.of 7;n      is the number of the top title line to be set. If omitted, 1 is assumed.
00007990.sp;.cp 3;.of 7;/      can be any character, other than 1-6, that does not appear anywhere in the title.
00008000It is used by SCRIPT as a separator between adjacent parts of the top title.
00008010.sp;.of 7;left   is the text to be printed beginning at the left margin.
00008020.sp;.of 7;center is the text to be printed centered.
00008030.sp;.of 7;right  is the text to be printed justified at the right margin.
00008040.kp off;.se Ttt=&;.ke Title .tt___
00008050.sp;.in 0;.rm 0;When specifying a top title, you should take into account the current line length
00008060since the top title text may not exceed this value.
00008070Because SCRIPT formats the top title from left to right, the 'center' text may overlay the last portion of the 'left' text,
00008080and may in turn be overlaid by the beginning of the 'right' text if you have inadvertently specified them as being too long
00008090to fit within their respective portions of the line.
00008100.sp;When writing the text of your top title, you should consider the character ampersand (&) reserved.
00008110That character is used as the page number symbol (unless you have specified another character with the
00008120PAGE-NUMBER-SYMBOL control word) and can be used by you in the text of the title whenever you want the number of the page
00008130to print.
00008140.sp;The TOP-TITLE control word may be used anywhere within your document to change the headings for subsequent pages.
00008150You may set up title definitions that will not print until a subsequent HEADING-SPACE control word allocates space for them.
00008160.sp;By default, a page number will appear at the top of each page, starting with the second page, and all other titles are blank.
00008170.cm ----------------------------------------------------------------------------------------------------------------------]
00008180.se ab=.he;.kp on;.h3 Heading (.he)
00008190The HEADING control line specifies a running top title line to be printed at the top of subsequent pages.
00008200This is recognized for compatibility with earlier versions of SCRIPT.
00008210The following two control lines are equivalent:
00008220.sp;          .he line
00008230.ss;          .tt 1 /line//PAGE &/
00008240.ds;.kp off;.se The=&;.ke Title .he___ .tt
00008250.cm ----------------------------------------------------------------------------------------------------------------------]
00008260.se ab='.et .ot';.dh 3 spaf 0;.h3 Even Page Top Title (.et)
00008270.dh 3 spaf 1;.dh 3 skbf 0;.h3 Odd Page Top Title  (.ot);.dh 3 skbf 3
00008280If you require the page number to be part of the top title, and you expect your document to be reproduced using both
00008290sides of the sheet, you could respecify the top title with each page.
00008300This would allow you to print the page number to print at the left on even-numbered pages,
00008310and at the right on odd-numbered pages.
00008320This would be cumbersome.
00008330Therefore SCRIPT provides two special-purpose variations of the TOP-TITLE control word
00008340called EVEN-PAGE-TOP-TITLE (.et) and ODD-PAGE-TOP-TITLE (.ot).
00008350Their formats follow:
00008360.sp;.kp on;.in 5;.bx 3 11 62;.li;.et     [n]  /left/center/right/
00008370.bx;.li;.ot     [n]  /left/center/right/
00008380.bx off;.kp off;.se Tet=&;.se Tot=&;.ke Title .et___ .ot___ .tt
00008390.in 0;.sp 2;The meanings of 'n', '/', 'left', 'center' and 'right' are the same as those in the explanation of the TOP-TITLE
00008400control word.
00008410.sp;By specifying the page number symbol (usually ampersand (&)) in the 'left' text of your EVEN-PAGE top title and as
00008420the 'right' text of your ODD-PAGE top title, you will cause SCRIPT to print the page number in the proper position
00008430for conventional reproduction.
00008440.cm ----------------------------------------------------------------------------------------------------------------------]
00008450.se ab='.bt .eb .ob .ft';.dh 3 spaf 0;.h3 Bottom Title (.bt)
00008460.dh 3 skbf 0;.h3 Footing (.ft);.h3 Even Page Bottom Title (.eb)
00008470.dh 3 spaf 1;.h3 Odd Page Bottom Title  (.ob);.dh 3 skbf 3
00008480SCRIPT provides three other control words for analogous use with footing text or bottom titles.
00008490These control words are BOTTOM-TITLE (.bt), EVEN-PAGE-BOTTOM-TITLE (.eb) and ODD-PAGE-BOTTOM-TITLE (.ob).
00008500Notice that page number has been specified in the bottom titles of this manual.
00008510Their formats follow:
00008520.sp;.kp on;.in 5;.bx 3 11 62;.li;.bt     [n]  /left/center/right/
00008530.bx;.li;.eb     [n]  /left/center/right/
00008540.bx;.li;.ob     [n]  /left/center/right/
00008550.bx;.li;.ft     line
00008560.in 0;.bx off;.kp off;.se Tbt=&;.se Teb=&;.se Tob=&;.ke Title .bt___ .eb___ .ob___
00008570.cm ----------------------------------------------------------------------------------------------------------------------]
00008580.h2 Controlling pagination;.ke Pagination_
00008590SCRIPT provides you with many facilities for controlling the pagination of your document.
00008600You may suppress page numbering altogether or just on output, cause the numbering to be in Arabic or lower case Roman,
00008610and reset page numbers within a document.
00008620.cm ----------------------------------------------------------------------------------------------------------------------]
00008630.se ab=.ps;.h3 Page Number Symbol (.ps);
00008640As mentioned above, in the explanation of the TOP-TITLE control word, the ampersand (&) is usually reserved for use
00008650as the page number symbol.
00008660SCRIPT substitutes the current page number for each occurance of the ampersand within the title line.
00008670Naturally, there may be times when you must use the ampersand within a top or bottom title.
00008680There may also be instances in which the terminal or printer on which your document is to be printed does not include
00008690the ampersand.
00008700To allow for these situations, SCRIPT provides the PAGE-NUMBER-SYMBOL control word.
00008710.sp;The PAGE-NUMBER-SYMBOL control word allows you to substitute another character for the ampersand
00008720as a representation of the current page number.
00008730Its format follows:
00008740.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.ps     s
00008750.bx off;.sp;.rm 5;.of 5;s    is any single character except the blank.
00008760This character will be interpreted by SCRIPT as a request to substitute the current page number
00008770whenever it is encountered in a top or bottom title.
00008780.kp off;.se Tps=&;.ke & Pagination .ps___
00008790.sp;.in 0;.rm 0;The character specified in the PAGE-NUMBER-SYMBOL control word takes effect for all subsequent
00008800top and bottom titles.
00008810This means that if you have previously used the ampersand or some othe character as the page number symbol,
00008820you will have to revise those control words to reflect use of the new symbol.
00008830If, for instance, you have previously entered an ODD-PAGE-TOP-TITLE control word in the form:
00008840.sp;.ce;.li;.ot n /Chapter I/Industrial Relations/&/
00008850.sp;and you later change the page number symbol to the plus sign (+),
00008860SCRIPT will not recognize the ampersand in your odd page top title as a page number symbol.
00008870Instead, it will print the ampersand, treating it as text.
00008880To prevent this, you must change the ampersand in the title control word to a plus sign,
00008890using the Editor, to correspond to the changed page number symbol.
00008900.cm ----------------------------------------------------------------------------------------------------------------------]
00008910.se ab=.pn;.se Tpn=&;.pn pref .pn-;.h3 Page Numbering Mode (.pn);.pn frac
00008920The PAGE-NUMBERING-MODE (.pn) control word lets you determine whether automatic page numbering is to take place,
00008930and whether it is to be in Arabic or lower case Roman.
00008940SCRIPT maintains two sets of page numbers for your document: internal and external.
00008950(The counter used by the SCRIPT command program to record page numbering as the document is processed
00008960contains the internal page number.)
00008970With the PAGE-NUMBERING-MODE control word you can control these separately or dispense with both.
00008980If you wanted to print certain pages for inclusion in another document,
00008990for example, you would probably prefer to have page numbers suppressed so that they could be filled in later
00009000in the final composite document.
00009010If you are following the usual conventions, you would also number your frontis pages in lower case Roman,
00009020and not begin numbering in Arabic until the first page of text.
00009030Its format follows:
00009040.sp 2;.kp on;.in 5;.bx 3 12 62;.li;.pn     ON__ | OFF | OFFNO
00009050        ARABIC______ | ROMAN
00009060        FRAC | NORM____
00009070        PREF string
00009080.bx off;.kp off;.ke Pagination .pn___
00009090.sp;.rm 5;.kp on;.of 7;ON     causes page numbering to be resumed if you have previously entered a .pn off or .pn offno.
00009100If you do not enter any PAGE-NUMBERING-MODE control word, SCRIPT will assume the ON condition.
00009110.kp off;.ke On;.sp;.kp on;.of 7;OFF    causes external page numbering to be discontinued.
00009120Internal page numbering continues, however.
00009130This allows you to resume printing the page number at the correct point when you enter .pn on.
00009140.kp off;.ke Off;.sp;.kp on;.of 7;OFFNO  suppresses both internal _a_n_d external page numbering.
00009150A subsequent .pn on causes both internal and external page numbering to be resumed beginning with the next sequential page number,
00009160regardless of how many actual pages have been processed since the .pn offno was entered.
00009170This can be especially useful if your document is to include pages meant to be removed.
00009180Using .pn offno followed by .pn on, you can suppress numbering of those pages,
00009190and preserve the numbering sequence that should exist after they have been removed.
00009200.kp off;.ke Offno;.sp;.kp on;.of 7;ARABIC causes all subsequent page numbers to be printed as Arabic numerals.
00009210If you do not enter a PAGE-NUMBERING-MODE control word, SCRIPT assumes Arabic numerals.
00009220.kp off;.ke Arabic;.sp;.kp on;.of 7;ROMAN  causes all subsequent page numbers to be printed as lower-case Roman numerals.
00009230.kp off;.ke Roman;.sp;.kp on;.of 7;FRAC   causes fractional pagination to begin.
00009240The next time a page eject occurs that would normally increment from an even to an odd number,
00009250the even number is saved (for example, 20) and numbering starts with a fractional sequence (e.g. 20.1, 20.2 etc.).
00009260This page is an example.
00009270.kp off;.ke Frac;.sp;.kp on;.of 7;NORM   causes an immediate page eject to occur, and normal pagination to be resumed.
00009280In the above example, the new page would be numbered 21.
00009290If PN FRAC is not in effect, PN NORM is ignored, and does nothing.
00009300.kp off;.ke Norm;.sp;.kp on;.of 7;PREF   specifies a 1-8 character string to be used as a prefix in front of all page numbers printed in titles, in tables of contents,
00009310or in front of set symbols set with the value of the current page number (&).
00009320The string may not contain imbedded blanks.
00009330.kp off;.ke Pref
00009340.sp;.in 0;.rm 0;You can suppress inclusion of page numbers in top and bottom titles simply by omitting the page number symbol
00009350from the title definition.
00009360.pn pref;.pn norm
00009370.cm ----------------------------------------------------------------------------------------------------------------------]
00009380.pa;.se ab='';.h2 Example of Page Setup and Formatting
00009390This example is based on one shown in the Announcement Notice for SCRIPT/370 (Form G320-1520-0).
00009400Since the margin settings are not specified, they assume the default values.
00009410The text itself will be formatted with lines justified at the left and right margins since that is the default mode of output.
00009420The page-eject function causes the top title to print on the first page.
00009430.br;Terminal input:
00009440.ss;.sp;.in 5;.nf;.li 15;.line-length 35
00009450.page-length 27
00009460.top-title ///ANNOUNCEMENT NOTICE/
00009470.page-eject 1
00009480.bottom-title ///PAGE &/
00009490SCRIPT/370 provides text processing
00009500capabilities to users of the IBM Virtual Machine
00009510Facility/370, VM/370.  It executes as a command
00009520of the Conversational Monitor System, the
00009530time-shared component of VM/370.
00009540.space-lines 1
00009550The SCRIPT command creates formatted output
00009560from one or more CMS files, each of which contains
00009570text and/or SCRIPT control words.  The SCRIPT
00009580files are created and modified at a terminal.
00009590.sp 2;.cp 26;.in 0;SCRIPT Output:
00009600.sp;.bx 5 50;.fo;.in 7;.rm 18;.sp;.ri;.up announcement notice
00009610.sp;SCRIPT/370 provides text-processing
00009620capabilities to users of the IBM
00009630Virtual Machine Facility/370,
00009640VM/370. It executes as a command of
00009650the Conversational Monitor System,
00009660the time-shared component of
00009670VM/370.
00009680.sp
00009690The SCRIPT command creates
00009700formatted output from one or more
00009710CMS files, each of which contains
00009720text and/or SCRIPT control words.
00009730The SCRIPT files are created and
00009740modified at a terminal.
00009750.sp;.ri;Page 1
00009760.sp;.bx off
00009770.ds;.in 0;.rm 0;.h5 Figure &SYSCOUNT  Example of Page Setup and Formatting
00009780.ce off;.h1 Text Formatting
00009790SCRIPT gives you many choices as to the appearance of your final text.
00009800The control words described in the previous section give you the facilities for determining the overall dimensions and relative
00009810positions of the different elements of the page: text, top and bottom titles, margine etc.
00009820The control words described in _t_h_i_s section allow you to determine exactly
00009830how your body text is to appear within the margins.
00009840.sp;The seven basic text formats are:
00009850.sp;.in 5;.rm 5;.nj;.of 3;1. Justified - even left and right margins.
00009860.sp;.of 3;2. Ragged right - even left margin, uneven right margin.
00009870.sp;.of 3;3. As-is - output line corresponds exactly to input line regardless of margins.
00009880.sp;.of 3;4. Right-adjusted - even right margin, uneven left margin.
00009890.sp;.of 3;5. Centered - equidistant from both margins.
00009900.sp;.of 3;6. Out-justified - right adjusted on even numbered pages, left on odd.
00009910.sp;.of 3;7. Columns - similar to the typical newspaper, dictionary or phone-book, the textual material can be formed into multiple columns.
00009920.in 0;.rm 0;.ju;.h2 Justified Text;.ke _Justify
00009930SCRIPT justifies your text by inserting blanks as needed between words until the line length you have specified is filled.
00009940In CONCATENATE-JUSTIFY mode, SCRIPT obtains words from the next line until no more words can be placed on the line
00009950without exceeding the line length.
00009960It then inserts blanks as needed to fill out the line.
00009970If the input line is too long to fit within the output line length,
00009980SCRIPT removes words from it and spills them into the next input line, and fills the first line with blanks as needed.
00009990.cm ----------------------------------------------------------------------------------------------------------------------]
00010000.br;.se ab=.fo;.h3 Format Mode (.fo)
00010010This mode of operation is the one chose by SCRIPT unless you enter appropriate control words to specify some other mode.
00010020In other words, it is the default mode of SCRIPT.
00010030It is called CONCATENATE-JUSTIFY mode, or FORMAT mode.
00010040The two principal control words associated with the standard mode are FORMAT-MODE (.fo),
00010050and NO-FORMAT-MODE (.nf) which is explained later.
00010060Its format follows:
00010070.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.fo     [ON__ | OFF]
00010080.rm 5;.bx off;.sp;.of 5;ON   restores the default SCRIPT formatting, including both justification and concatenation of lines.
00010090If the .FO control word is used with no operands, ON is assumed.
00010100.of 5;OFF  cancels concatenation of input lines and justification of output lines..
00010110Subsequent text is printed "as-is".
00010120The .FO OFF control line is exactly equivalent to the .NF control word.
00010130.kp off;.se Tfo=&;.ke On Off Format .nf Justify Concatenate Break .fo___ .co .ju
00010140.rm 0;.in 0;.sp 2;The only use of the FORMAT-MODE control word is to restore SCRIPT to CONCATENATE-JUSTIFY mode after you have entered a
00010150NO-FORMAT-MODE, NO-JUSTIFY-MODE or NO-CONCATENATE-MODE control word.
00010160The FORMAT-MODE control word is simply a convenient abbreviation for the combination of CONCATENATE-MODE and JUSTIFY-MODE.
00010170The majority of this manual has been printed in the CONCATENATE-JUSTIFY mode.
00010180.cm ----------------------------------------------------------------------------------------------------------------------]
00010190.se ab=.ju;.h3 Justify Mode (.ju)
00010200The JUSTIFY-MODE control word specifies that output lines are to be filled with blanks to justify
00010210the right-hand margins of text.
00010220JUSTIFY-MODE is implied in the default FORMAT-MODE of SCRIPT processing,
00010230and is used to restore right justification after the NO-JUSTIFY-MODE control word (described below) is used,
00010240or to specify justification of output lines without concatenation if NO-FORMAT-MODE (also described below) is in effect.
00010250Its format follows:
00010260.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.ju     [ON__ | OFF]
00010270.rm 5;.bx off;.sp;.of 5;ON   restores right and left justification of output lines.
00010280If neither ON nor OFF is specified, ON is assumed.
00010290.of 5;OFF  cancels justification of output lines.
00010300If concatenation is still in effect, .JU OFF results in ragged right output.
00010310The .JU OFF control line is exactly equivalent to the .NJ control word.
00010320.in 0;.rm 0;.kp off;.se Tju=&;.ke On Off Justify Break .ju___ .fi
00010330.cm ----------------------------------------------------------------------------------------------------------------------]
00010340.se ab=.nj;.h3 No Justify Mode (.nj);.nj
00010350If you enter a CONCATENATE-MODE control word, SCRIPT will shift words between lines to fill the current line length,
00010360but it _w_i_l_l__n_o_t insert blanks.
00010370Thus by specifying CONCATENATE-MODE, you cause SCRIPT to generate _r_a_g_g_e_d-__r_i_g_h_t output.
00010380Another method of achieving ragged-right output is to enter a NO-JUSTIFY-MODE control word.
00010390The NO-JUSTIFY-MODE control word causes SCRIPT to stop inserting blanks so as to achieve the full line length.
00010400If CONCATENATE mode is still in effect, the output is ragged right.
00010410If CONCATENATE mode is not in effect, the output is as-is.
00010420This is exactly equivalent to .ju off.
00010430If you have entered a NO-JUSTIFY-MODE control word, you can cause SCRIPT to resume justification by entering a
00010440JUSTIFY-MODE control word or, if you require CONCATENATE-JUSTIFY operation, the FORMAT-MODE control word
00010450which was discussed previously.
00010460.ju;.se Tnj=&;.ke Break .nj___ .ju
00010470.cm ----------------------------------------------------------------------------------------------------------------------]
00010480.se ab=.co;.h3 Concatenate Mode (.co)
00010490The CONCATENATE-MODE control word specifies that output lines are to be formed by shifting words to or from the next
00010500input line.
00010510The resulting line is as close to the specified line length as possible without exceeding it, splitting a word, or,
00010520as in FORMAT-MODE, padding the line with blanks; this resembles normal typist mode.
00010530Its format follows:
00010540.rm 5;.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.co     [ON__ | OFF]
00010550.bx off;.sp;.of 5;ON   restores concatenation of input lines.
00010560ON is the initial setting, as well as the default value (if neither is specified).
00010570.of 5;OFF  cancels concatenation of input lines.
00010580If justification is still in effect, .CO OFF results in each line being padded with blanks to the column or line length.
00010590.kp off;.se Tco=&;.ke On Off Concatenate Break .co___
00010600.rm 0;.in 0;.sp 2;Output from this point on in the file is formed to approach the right margin without exceeding it.
00010610.cm ----------------------------------------------------------------------------------------------------------------------]
00010620.se ab=.nc;.h3 No Concatenate Mode (.nc);.se Tnc=&;.ke .nc___ .co
00010630A variation of justified text IN CONCATENATE-JUSTIFY mode is NO-CONCATENATE mode.
00010640In NO-CONCATENATE mode SCRIPT does not shift words back and forth between input lines.
00010650Instead, blanks are inserted as necessary to make each individual input line
00010660extend the full distance between margins.
00010670You might find this mode of operation useful when you have tabular material in which the elements are of uniform length
00010680such as number conversion tables.
00010690By specifying NO-CONCATENATE mode, you automaticly achieve uniform spacing between the elements of each input line
00010700without the necessity of using tabs.
00010710You might also use NO-CONCATENATE mode in conjunction with the Or character (|) to produce vertical rules.
00010720This is exactly equivalent to .co off.
00010730To restore concatenation of input lines, you enter a CONCATENATE-MODE control word,
00010740or a FORMAT-MODE control word, as appropriate.
00010750.sp;Concatenation will be temporarilly disabled,
00010760.cs 1 on;in SCR005,
00010770.cs 1 off;by the presence of .ce, .oj or .ri control lines.
00010780.cm ----------------------------------------------------------------------------------------------------------------------]
00010790.se ab=.hw;.br;.rc 1 on;.h3 Hyphenate-Word (.hw)
00010800There is occasional need to specifically control which words are to be hyphenated (or not), and where (i.e. syllable boundaries).
00010810This control word offers these controls.
00010820The format of this control word is:
00010830.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.hw     [word  word  ...]
00010840.rm 5;.bx off;.sp;.of 5;word is the word to be hyphenated, with the syllables separated by hyphens.
00010850If no hyphens are given, hyphenation will be suspended for this particular word.
00010860.in 0;.kp off;.se Thw=&;.ke Hyphen .hw___ .hy;.rm 0;.rc 1 off
00010870.cm ----------------------------------------------------------------------------------------------------------------------]
00010880.se ab=.hy;.h3 Hyphenate (.hy)
00010890The hyphen mode works within the justify mode.
00010900Much like a typist or lithographer, partial words extending over the right margin may be deemed "hyphenatable".
00010910If so, The largest acceptable syllabic portion will remain on the first line with the hyphen,
00010920and the remainder will be advanced to the next line.
00010930Like the justify mode, the hyphen mode is automatically "on" when the SCRIPT processor starts up;
00010940consequently, the only logical use of this control word is to reenable the mode
00010950after it has been turned "off" by the No-Hyphen-Mode (.nh) control word.
00010960Its format follows:
00010970.sp 2;.kp on;.in 5;.bx 3 11 62;.rc 1 on;.li;.hy     [n | ON | OFF | SET »MINPT | THRESHº n]
00010980.bx off;.kp off;.se Thy=&;.ke Hyphen .hy___
00010990.sp;.kp on;.rm 5;.of 5;n    is the number of lines following that may be hyphenated.
00011000.of 5;ON   means that all subsequent formatted lines will be eligible for hyphenation, unless and until a .hy off is encountered.  This is the default condition.
00011010.kp off;.ke On;.kp on
00011020.of 5;OFF  means that the subsequent formatted lines are not to be hyphenated, unless and until a .hy on is encountered.  This is equivalent to the .nh control word.
00011030.kp off;.ke Off;.kp on
00011040.of 5;SET  MINPT n defines the minimum number of characters (lower case letters) that can be separated from a word in the process of hyphenation.
00011050This value defaults to 3.
00011060.kp off;.ke Minpt;.kp on
00011070.of 5;SET  THRESH n is a positive number indicating the hyphenation threshold.
00011080When SCRIPT is formatting a line, at least n spaces must remain before SCRIPT attempts hyphenation.
00011090The initial value of THRESH is 7.
00011100.kp off;.ke Thresh;.kp on
00011110.of 5;SUP  causes hyphenation to be suppressed until the next space.
00011120If hyphenation is off, then SUP does nothing, but if it is on, then SUP turns it off temporarily.
00011130It automatically turns on again the next time a line space is generated (as a result of .SP etc.
00011140This allows you to suppress hyphenation at the end of a paragraph without having to turn it off and back on.
00011150.br;.kp off;.rm 0;.rc 1 off
00011160.in 0;.kp off;.ke Sup
00011170.cm ----------------------------------------------------------------------------------------------------------------------]
00011180.se ab=.nh;.h3 No Hyphenate (.nh);.se Tnh=&;.ke .nh___ .hy
00011190Personal style or possible restrictive documentation standards may dictate that formatted lines not be hyphenated.
00011200Since the hyphen mode is normally "on", this control word can, in such circumstances, disable the hyphen mode.
00011210If desired, the hyphen mode can be reenabled by means of the .hy control word.
00011220This has the same effect as .hy off.
00011230.cm ----------------------------------------------------------------------------------------------------------------------]
00011240.se ab=.bx;.h3 Box (.bx)
00011250This is a convenient method of producing boxes.
00011260The BOX control word defines and initializes a horizontal rule for SCRIPT output,
00011270and defines vertical rules for subsequent output lines.
00011280With this control word, you can format tables, charts, or test within neatly formatted boxes.
00011290The format of this control word is:
00011300.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.bx     [v1 v2 ...]  [OFF [ALL]]  [/ v1 v2 ...]
00011310.bx off;.kp off;.se Tbx=&;.ke _Box Break .bx___
00011320.sp;.kp on;.rm 5;.of 5;v1...are the positions at which you want to place vertical rules in the output text.
00011330This format of the control word initializes the box and draws a horizontal line, with vertical descenders at the columns indicated.
00011340Subsequently, entering the .BX control word with no operands causes SCRIPT to print a horizontal line with intersections at the columns indicated.
00011350If there are multiple boxes, and only one rates this extra horizontal rule, then specify the positions also.
00011360.kp off;.kp on
00011370.of 5;OFF  causes SCRIPT to finish drawing the box, by printing a horizontal line with vertical ascenders at the columns in effect.
00011380If more than one box is in effect, there are three possibilities.
00011390OFF alone will terminate the most recently defined box.
00011400OFF with____ positions will cause the box so identified to be terminated.
00011410.kp off;.ke Off;.kp on
00011420.of 5;ALL  may be included with OFF to terminate all boxes at once.
00011430.kp off;.ke All;.kp on
00011440.of 5;/... allows the user to specify more than one box with a single control word; i.e. to begin together.
00011450.kp off;.ke All
00011460.in 0;.rm 0
00011470.sp;The .BX control word describes an overlay structure for subsequent text that is processed by SCRIPT.
00011480After the .bx v1 v2 line is processed, SCRIPT continues formatting output lines as usual.
00011490However, after a line is completely formatted, and before it is printed, SCRIPT places vertical bars in the columns indicated by v1 v2 etc.,
00011500unless a column is already occupied by a data character.
00011510.sp;The .BX control word causes a break and implies a .CC or .CP 3.
00011520.sp;There are two sets of characters used in drawing boxes.
00011530If the output is in the "typewriter" format, boxes are formed with dashes (-), vertical bars (|) and plus signs (+).
00011540If the output is in "printer" format, special box drawing characters (Ð¯¿¨×±), which are available in the TN character set are used.
00011550.sp;Multiple boxes may be in simultaneous effect.
00011560These may be concentric, separate or intersecting.
00011570The method of use is to supply the secondary .BX control word(s) when appropriate, then to turn off each or ALL by onr or more .BX OFF control word(s).
00011580.sp;The .BX control word interacts with the column definition state in the following manner:
00011590.br;If multiple column (.CD) are not___ in effect at the time a box is defined, that box will be mapped onto the page space (even if columns are subsequently specified within the range of the box).
00011600.br;If multiple columns are___ in effect at the time of box definition, the mapping is onto the column oriented space.
00011610(E.g. position 1 is the first print position of whatever column is current).
00011620.sp;Multiple boxes of both sorts (with and without columns) may be intermixed.
00011630In this case, the action of the lone .BX (without operands) effects all boxes that had been defined in the same state (columns or no) as when that .BX is encountered.
00011640.sp;The column specification for the .BX control word uses a different convention than is used elsewhere in SCRIPT.
00011650In control words like .IN and .OF, the numbers in the control word represent not columns but displacements.
00011660.sp;Further, you can define a box that is to be the full column or page width symbolically with one of these:
00011670.su off
00011680.kp on
00011690.sp;   .bx 1 &$cl
00011700.ss;   .bx 1 &$ll
00011710.ds;.su on
00011720.kp off;.br
00011730.cm ----------------------------------------------------------------------------------------------------------------------]
00011740.se ab=.dm;.rc 1 on;.h3 Define-Macro (.dm)
00011750This allows the user to define a "macro" or group of commands, to be subsequently referenced by a single name.
00011760The format of this control word is:
00011770.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.dm     » name  / word [/ word [/ ...] ]  |  OFF º
00011780.bx off;.sp;.rm 5;.of 5;name is the name of the macro, which may be the same as an ordinary SCRIPT control word.
00011790.of 5;/    is any character, which effectively separates each of the series of control words, but which is not used in any other context within this line.
00011800.of 5;word is a single control word, with or without the leading period (.), plus any required parameters.
00011810.of 5;OFF  cancels a macro definition.
00011820.in 0;.rm 0;.kp off;.se Tdm=&;.ke Off .dm___ Macro
00011830.sp;Usage Notes:
00011840.sp;The following symbols have special meanings when used to define SCRIPT macros with the .DM control word:
00011850.su off
00011860.kp on;.in 5;.rm 5;.of 4;&*: is the line passed to the macro when it is invoked.
00011870.of 4;&0: is the number of arguments passed when the macro is called.
00011880.of 4;&1: ... are the arguments passed to the macro when it is called.
00011890.kp off;.in 0;.rm 0;.su on;.sp;Macro calls are treated as invalid control words if you do not use the .MS (MACRO-SUBSTITUTION)
00011900control word:
00011910.sp;   .ms on
00011920.sp;Symbol names that are used in a macro definition are substituted at the time the .DM control line is processed,
00011930if substitution is on.
00011940If you want to use variable symbols in a macro to be substituted at execution time, you must use the control word:
00011950.sp;   .su off
00011960.sp;before defining the macro with the .DM control word.
00011970.sp;The symbols &1 through &9 are reset whenever a macro is invoked in a SCRIPT file,
00011980or whenever the IMBED or APPEND control words are used with arguments.
00011990.br;.rc 1 off
00012000.cm ----------------------------------------------------------------------------------------------------------------------]
00012010.se ab=.ms;.rc 1 on;.h3 Macro-Substitution (.ms)
00012020This control word informs SCRIPT that there "macros" to be used.
00012030The format of this control word is:
00012040.sp 2;.kp on;.rm 5;.in 5;.bx 3 11 62;.li;.ms     [n | ON | OFF]
00012050.bx off;.sp;.of 5;n    is the number of subsequent input lines so influenced.
00012060.of 5;ON   turns this state "on", so that all___ subsequent lines are considered (until a .ms off is found.
00012070.of 5;OFF  turns this state "off".  The state is off until and unless a .ms ON is found.
00012080.in 0;.rm 0;.kp off;.se Tms=&;.ke On Off .ms___ Macro
00012090.sp;Usage Notes:
00012100.br;SCRIPT macros can be defined with the .DM control word.
00012110However, SCRIPT does not recognize macros and process macros unless the MACRO-SUBSTITUTION control word has been used.
00012120Whe macro substitution is off (the default for SCRipt processing) macros that have been defined via the .DM
00012130(DEFINE-MACRO) control word are treated as invalid control words.
00012140.br;.rc 1 off
00012150.cm ----------------------------------------------------------------------------------------------------------------------]
00012160.se ab=.br;.h3 Break (.br)
00012170Often, as when entering the first line of a new paragraph, you will need to suspend concatenation of input lines
00012180for just one line.
00012190As shown previously, one way to do this is to begin the line with one or more blanks or the tab stroke.
00012200You also can achieve the effect of:
00012210.ss;.nf;.sp;.cp 4;.in 10;.li 3;.nc
00012220text line for new paragraph
00012230.co
00012240subsequent text
00012250.ds;.fo;.in 0;by using the BREAK control word.
00012260Its format follows:
00012270.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.br
00012280.bx off;.kp off;.se Tbr=&;.ke .br___ _Break
00012290.in 0;.sp 2;.cp 7;Enter the BREAK control word just ahead of the text that must start on a new line in the document.
00012300You need not enter a BREAK control word if the first line of the new paragraph begins with a blank or a tab.
00012310Many SCRIPT control words also cause a BREAK to occur automatically.
00012320In general they are ones used between paragraphs to specify the format of output text.
00012330.ss;.sp;.cp 25;.bx 5 62;.h6 Table &SYSCOUNT(1)  Control Words Causing Automatic Break;.bx off / 5 33 62;.cd 2 6 33;.nf;.li on
00012340.bm  Bottom Margin
00012350.bx  Box
00012360.cb  Column Begin
00012370.cd  Column Definition
00012380.ce  Center
00012390.cl  Column Length
00012400.co  Concatenation
00012410.di  Delay Imbed
00012420.ds  Double Space
00012430.ep  Even Page Eject
00012440.fm  Footing Margin
00012450.fo  Format Mode
00012460.fs  Footing Space
00012470.h_  Head Level
00012480.hm  Heading Margin
00012490.hs  Heading Space
00012500.in  Indent
00012510.ju  Justify Mode
00012520.kp  Keep
00012530.ll  Line Length
00012540.ls  Line Spacing
00012550.mc  Multi-Column Mode
00012560.of  Offset
00012570.op  Odd Page Eject
00012580.pa  Page Eject
00012590.pl  Page Length
00012600.pp  Paragraph Start
00012610.qq  Quick Quit
00012620.qu  Quit
00012630.rd  Read Terminal
00012640.ri  Right Adjust
00012650.rm  Right Margin
00012660.sc  Single-Column Mode
00012670.sk  Skip Lines
00012680.sp  Space Lines
00012690.ss  Single Space Mode
00012700.tb  Tab Setting
00012710.tc  Table of Contents
00012720.tm  Top Margin
00012730.un  Undent
00012740.li off;.cd 1 0;.fo;.bx off all;.ds
00012750.cm ----------------------------------------------------------------------------------------------------------------------]
00012760.se ab=.nf;.h3 No Format Mode (.nf);.se Tnf=&;.ke Break .nf___ .fo
00012770The NO-FORMAT-MODE control word is your means for causing as-is output.
00012780By entering .nf, you cause SCRIPT to stop _b_o_t_h concatenating and line justification.
00012790You will find this mode of operation especially useful if portions of your document must contain tabular material,
00012800or literal representations and illustrations.
00012810For example, the "Sample Terminal Session" in the first section of this manual
00012820was done primarily in no-format mode.
00012830Figure 3 below illustrates the difference between ragged-right and formatted output.
00012840With as-is output, the output would look exactly like input text lines,
00012850that is, the break control word would not print.
00012860This is exactly equivalent to .fo off.
00012870.cm ----------------------------------------------------------------------------------------------------------------------]
00012880.se ab=.ri;.h3 Right Adjust (.ri)
00012890A single SCRIPT control word allows you to specify right-adjusted, or flush-right output.
00012900Entering a RIGHT-ADJUST control word causes succeeding input lines to be printed even with the right margin
00012910as is commonly done in the sender's address of a letter.
00012920The input lines are not concatenated.
00012930Its format follows:
00012940.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.ri     [ON | OFF | n]
00012950.bx off;.sp;.rm 5;.of 5;ON   causes subsequent input lines to be printed flush right.
00012960.of 5;OFF  restores whatever mode of operation was in effect at the time .ri on was specified.
00012970.of 5;n    causes the next n lines to be printed flush right.
00012980This can be used as an alternate to the combination .ri on, .ri off when the number of lines to be right adjusted is known.
00012990.kp off;.se Tri=&;.ke On Off Break .ri___
00013000.sp;.in 0;.rm 0;Specifying the control word .ri by itself is equivalent to specifying .ri 1,
00013010that is, the next line of input text will be right adjusted on output.
00013020.cm ----------------------------------------------------------------------------------------------------------------------]
00013030.sp 3;.kp on;.nf
00013040.ss;.bx 1 &$ll;.sp;.in 5;Input:
00013050.sp;.bx 4 42
00013060aaaa bb c dddddd ee ffff ggggg hhhh
00013070i jjjjj kk llll mm
00013080nnn oooooooooo
00013090ppppp qqqq r
00013100ssss ttttttt uuu vvvvv
00013110w xxxxxxxxx yy zz
00013120.bx off;.sp 2
00013130using .ll 25, .co and .nj        using .fo
00013140.sp;.bx 4 32 / 34 63
00013150aaaa bb c dddddd ee ffff     aaaa  bb c dddddd ee ffff
00013160ggggg hhhh i jjjjj kk        ggggg  hhhh  i  jjjjj  kk
00013170llll mm nnn oooooooooo       llll mm nnn oooooooooo
00013180ppppp qqqq r ssss ttttttt    ppppp qqqq r ssss ttttttt
00013190uuu vvvvv w xxxxxxxxx yy     uuu  vvvvv w xxxxxxxxx yy
00013200zz
00013210.bx 4 32 off / 34 63 off;.in 0
00013220.ds;.fo;.h5 Figure &SYSCOUNT  TEXT Formatting;.bx off all
00013230.cm ----------------------------------------------------------------------------------------------------------------------]
00013240.kp off;.tr - -;.se ab=.ce;.h3 Center (.ce)
00013250A single SCRIPT control word allows you to specify centered output.
00013260Entering a CENTER control word causes succeeding input lines to be printed equidistant from the left and right margins.
00013270The input lines are not concatenated.
00013280Its format follows:
00013290.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.ce     [ON | OFF | n | line]
00013300.bx off;.sp;.rm 5;.of 5;ON   causes subsequent input lines to be centered until a .ce off is encountered.
00013310.of 5;OFF  restores whatever mode of operation was in effect at the time .ce on or .ce n was specified.
00013320.of 5;n    is a number which causes the next n lines to be centered.
00013330When you know in advance how many lines you require to be centered, using .ce n is more convenient
00013340and relieves you of having to remember to enter a .ce off control word.
00013350.of 5;line is the line to be centered.
00013360.kp off;.se Tce=&;.ke On Off Center Break .ce___
00013370.sp;.in 0;.rm 0;Specifying the control word .ce by itself is equivalent to specifying .ce 1,
00013380that is, the next line of input text will be centered on output.
00013390.cm ----------------------------------------------------------------------------------------------------------------------]
00013400.se ab=.oj;.h3 Out Justify (.oj)
00013410Occasionally, it is desireable to locate a line of text at the outer page edge.
00013420This can be accomplished by the control line .oj, which will effectively right adjust on odd numbered pages and left adjust on even numbered pages. Its format follows:
00013430.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.oj     [ON | OFF | n]
00013440.bx off;.sp;.rm 5;.of 5;ON   causes subsequent lines to be out justified until a .oj off is encountered.
00013450.of 5;OFF  restores whatever mode of operation was in effect at the time .oj on was encountered.
00013460.of 5;n    is a number which causes the next n lines to be out justified.
00013470.in 0;.rm 0;.kp off;.se Toj=&;.ke On Off Break .oj___ .ri
00013480.cm ----------------------------------------------------------------------------------------------------------------------]
00013490.se ab='';.h1 Supplemental Page Formatting
00013500.h2 Line Spacing
00013510SCRIPT provides you with three control words that allow you to determine spacing between lines of body text.
00013520Using these control words, you can cause double- or single-spacing, or cause a given number of blank lines
00013530to be inserted between two lines of text so that, for example,
00013540illustrations can be introduced in the reproduction copy of your document.
00013550.cm ----------------------------------------------------------------------------------------------------------------------]
00013560.se ab=.sp;.h3 Space Lines (.sp)
00013570With the SPACE-LINES control word you can cause a specified number of blank lines to be inserted in the page
00013580before the next line of body text is printed.
00013590The SPACE-LINES control word is especially useful following a paragraph heading because it generates a break in addition
00013600to inserting the specified number of blank lines.
00013610If page or column end is reached during a SPACE LINES operation, the remaining blank lines are inserted
00013620at the beginning of the next column or page.
00013630Its format follows:
00013640.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.sp     [n]
00013650.bx off;.sp;.rm 5;.of 5;n    is the number of blank lines to be inserted, _u_n_l_e_s_s a DOUBLE-SPACE-MODE
00013660or LINE-SPACING control word is in effect.
00013670.kp off;.se Tsp=&;.ke .sp___
00013680If a DOUBLE-SPACE-MODE is in effect, _t_w_i_c_e the number of lines you specify will be inserted.
00013690If LINE-SPACING is in effect, the number of lines you specify in the SPACE-LINES control word will be multiplied
00013700by the line spacing increment you have specified in the LINE-SPACING control word.
00013710.in 0;.rm 0
00013720.cm ----------------------------------------------------------------------------------------------------------------------]
00013730.se ab=.sk;.h3 Skip Lines (.sk)
00013740The SKIP LINES control word conditionally generates blank lines before the next text output.
00013750The format of this control word is:
00013760.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.sk     [n]
00013770.bx off;.sp;.rm 5;.of 5;n    is the number of blank lines to be inserted in the output.
00013780If no number is given, 1 is assumed.
00013790If the column or page end is reached during a SKIP LINES operation, it is terminated at that point.
00013800.kp off;.se Tsk=&;.ke Break .sk___
00013810.cm ----------------------------------------------------------------------------------------------------------------------]
00013820.se ab=.ln;.br;.rc 1 on;.in 0;.rm 0;.h3 Line Number (.ln)
00013830The LINE control word would be used to space the formatted output however many lines are necessary so as to be positioned at that line.
00013840If the requested line number is less than (above) the current formatted line number, a page eject will occur.
00013850A break always occurs.
00013860For example, to start some text at mid-page (with PL 66), the user would specify .ln 33.
00013870Since line number information may be ambiguous inside a KEEP, this control word cannot be used inside one.
00013880The format of this control word is:
00013890.sp 2;.kp on;.in 5;.bx 3 11 62;.rm 5;.li;.ln     n
00013900.bx off;.sp;.of 5;n    is the line number  at which the next formatted output is to commence.
00013910This value must be greater than TM and less than PL-BM.
00013920.kp off;.se Tln=&;.ke .ln___ .ltm .bm
00013930.cm ----------------------------------------------------------------------------------------------------------------------]
00013940.se ab=.ss;.br;.rc 1 off;.in 0;.rm 0;.h3 Single Space Mode (.ss)
00013950If you have entered a DOUBLE-SPACE-MODE control word or a LINE-SPACING control word specifying other than single spacing,
00013960you can cause single spacing to resume by entering a SINGLE-SPACE-MODE control word.
00013970The SINGLE-SPACE-MODE control word takes effect immediately.
00013980This is the default condition, unless LPI(8) had been supplied as an option to the SCRIPT Command.
00013990Its format follows:
00014000.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.ss
00014010.bx off;.in 0;.kp off;.se Tss=&;.ke Break .ss___ .ls .ds
00014020.cm ----------------------------------------------------------------------------------------------------------------------]
00014030.se ab=.ds;.h3 Double Space Mode (.ds)
00014040To cause one blank line to be continually inserted between each line of body text,
00014050you enter a DOUBLE-SPACE-MODE (.ds) control word.
00014060The DOUBLE-SPACE-MODE control word takes effect immediately.
00014070It remains in effect until you enter a SINGLE-SPACE-MODE control word or a LINE-SPACING control word
00014080that specifies other than double-spacing.
00014090This is the default condition only if LPI(8) had been supplied as an option to the SCRIPT Command.
00014100Its format follows:
00014110.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.ds
00014120.bx off;.in 0;.kp off;.se Tds=&;.ke Break .ds___ .ss .ls
00014130.cm ----------------------------------------------------------------------------------------------------------------------]
00014140.se ab=.ls;.h3 Line Spacing (.ls)
00014150Occasionally, you may want your document or some portion of it to be printed with line spacing greater than
00014160double- or single-spacing.
00014170You may require triple-spacing for a review copy you expect to be proof-marked,
00014180or perhaps you might wish to leave space for writing in answers to questions on a test
00014190or inserting reproduction copy from another source.
00014200Rather than entering SPACE-LINES control words before each line of text,
00014210you can enter a LINE-SPACING (.ls) control word specifying the number of blank lines to be continually inserted
00014220after _e_a_c_h line of body text.
00014230Its format follows:
00014240.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.ls     n
00014250.bx off;.sp;.rm 5;.cp 4;.of 5;n    is the number of blank lines to be inserted after _e_a_c_h line of body text.
00014260This is the value which will be used by SCRIPT as the multiplier in any subsequent SPACE-LINES control word you enter.
00014270The value 0 is default, unless LPI(8) had been supplied as an option to the SCRIPT Command.
00014280.kp off;.rm 0;.in 0;.se Tls=&;.ke Break .ls___ .ss .ds
00014290.cm ----------------------------------------------------------------------------------------------------------------------]
00014300.se ab='';.h2 Page Spacing;.ke Pagination
00014310Frequently, you may require a new page to be started even though space may remain on the current page.
00014320Conventionally, new sections or chapters begin on new pages, for example.
00014330You may want to insert an illustration that will not fit in the space remaining on the current page,
00014340or you may deliberately want a blank page so that the back-up page (reverse-side) can be removed from your document.
00014350SCRIPT provides four control words so that you can cause a new page to be started under such circumstances.
00014360Three of these control words also include control of page numbering for the page to be started.
00014370.cm ----------------------------------------------------------------------------------------------------------------------]
00014380.se ab=.pa;.h3 Page Eject (.pa)
00014390To cause a new page to be started unconditionally, you enter a PAGE-EJECT control word.
00014400If you are using a continuous-form paper, the form is advanced to the top of the next page immediately.
00014410If you are using individual sheets, the form is ejected, and SCRIPT pauses to allow you to insert a fresh sheet,
00014420_p_r_o_v_i_d_i_n_g you have specified the STOP option when you entered the SCRIPT command.
00014430.sp;The PAGE-EJECT control word also allows you to specify the page number for the new page,
00014440or apply an increment or decrement based on the number of the current page.
00014450Its format follows:
00014460.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.pa     [[Æ] n]
00014470.bx off;.sp;.rm 5;.of 5;n    is the number to be printed on the new page.
00014480.sp;.of 5;Æn   is the increment to be added or subtracted to the current page number.
00014490.kp off;.se Tpa=&;.ke Æ Break Pagination .pa___
00014500.sp 2;.in 0;.rm 0;When SCRIPT encounters the PAGE-EJECT control word, it prints the bottom title (if applicable) on the current page,
00014510and advances to the next page, or pauses, as described above.
00014520You will probably use the PAGE-EJECT control word often in conjunction with one or another of the top title control words.
00014530Because the top title control words do not take effect until the _n_e_x_t page,
00014540you must follow one with a PAGE-EJECT control word if you want to force the beginning of a new top title.
00014550.cm ----------------------------------------------------------------------------------------------------------------------]
00014560.se ab=.cp;.h3 Conditional Page Eject (.cp)
00014570Sometimes, rather than having a paragraph or table be split between two pages,
00014580you will require that a new page be started for it.
00014590Because the amount of text preceding the paragraph or table varies as the document is developed or revised,
00014600SCRIPT provides you with the CONDITIONAL-PAGE-EJECT control word.
00014610This control word causes a new page to be started only if the current page contains _f_e_w_e_r lines than you require
00014620between the current line and the bottom margin.
00014630Its format follows:
00014640.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.cp     n
00014650.bx off;.sp;.rm 5;.cp 4;.of 5;n    is the number of lines that must remain between the current line and the first line of the bottom
00014660margin if printing is to continue on the current page.
00014670.in 0;.rm 0;.kp off;.se Tcp=&;.ke Pagination Conditional .cp___ .pa
00014680.cm ----------------------------------------------------------------------------------------------------------------------]
00014690.se ab='.ep .op';.h3 Even Page Eject (.ep) and Odd Page Eject (.op)
00014700In certain kinds of documents you may require that narrative for an illustration or table appear on an even-numbered
00014710page (left-hand page) facing the illustration.
00014720Often, as mentioned above, you will require that new sections begin on an odd-numbered page (right hand page).
00014730To meet these and similar requirements, SCRIPT provides you with two control words.
00014740You may enter an EVEN-PAGE-EJECT or ODD-PAGE-EJECT control word at any point in your document.
00014750Like the PAGE-EJECT control word, these operate immediately and unconditionally.
00014760Their formats are:
00014770.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.ep
00014780.bx;.li;.op
00014790.bx off;.kp off;.se Tep=&;.se Top=&;.ke Break Pagination .ep___ .op___ .pa
00014800.sp 2;.in 0;The following information is about the EVEN-PAGE-EJECT control word for convenience of explanation.
00014810You may read it as applying equally to the ODD-PAGE-EJECT control word
00014820simply by substituting odd for even, and vice versa, whereever they appear.
00014830.sp;When you enter an EVEN-PAGE-EJECT control word, the result is one page eject if the current page is odd-numbered,
00014840and two page ejects if the current page is even-numbered.
00014850Thus, the new page will be even-numbered.
00014860If the page you terminate with the EVEN-PAGE-EJECT control word was odd-numbered,
00014870then naturally the _n_e_x_t page is even-numbered and SCRIPT resumes printing body text on that page.
00014880If the page you terminated was even-numbered, so that the next page must be odd-numbered,
00014890SCRIPT prints only the top and bottom titles on that page and resumes printing body text on the even-numbered page that follows.
00014900.cm ----------------------------------------------------------------------------------------------------------------------]
00014910.se ab='';.h2 Margin Modification;.ke _Margin
00014920In preparing a document, you will probably require that the location of the effective left margin be changed
00014930from time to time.
00014940You may require that certain paragraphs be indented from the left margin, that certain text be printed with hanging indent,
00014950or that a block of formatted text be centered.
00014960SCRIPT provides four control words that simplify these tasks for you.
00014970With them you can specify indent amounts, temporary additions or subtractions from the indent, and tab stops.
00014980These are described below.
00014990.cm ----------------------------------------------------------------------------------------------------------------------]
00015000.se ab=.in;.h3 Indent (.in)
00015010With an ordinary typewriter, you probably use the TAB key for hanging indents.
00015020Using SCRIPT, however, you need only enter a single INDENT control word, and continue entering the text that is to be indented.
00015030Its format follows:
00015040.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.in     [Æ]  n
00015050.bx off;.rm 5;.sp;.of 5;n    specifies the number of spaces succeeding text is to be indented from the left margin.
00015060The Æ indicates that n is to be added to or subtracted from the preceding value of IN.
00015070.kp off;.se Tin=&;.ke Æ Indent Margin Break .in___
00015080.sp;.in 0;.rm 0;Although the INDENT control word does not affect the right margin, by using it in conjunction with the LINE-LENGTH
00015090control word, you can cause blocks of formatted text to be centered or shifted within the margins.
00015100For instance, the following control words:
00015110.ss;.cp 2;.sp;.in 10;.li;.in 5
00015120.br;.li;.ll 55
00015130.ds;.sp;.in 0;preceding text in this document would result in text which is centered, as:
00015140.ss;.sp;.in 5;.nf
00015150This text line was  deliberately included and made
00015160longer  than  55  characters on  input  so  as  to
00015170illustrate the SCRIPT INDENT control word used for
00015180centering of format-mode output.
00015190.ds;.in 0;.fo
00015200.cm ----------------------------------------------------------------------------------------------------------------------]
00015210c/.in 0;.fo;/
00015220Often, when indenting paragraphs, _t_w_o indents are needed: one for a paragraph number or other designation,
00015230and a second for the paragraph text itself.
00015240SCRIPT provides two methods for accomplishing this.
00015250In the first, using the OFFSET (.of) control word in conjunction with the INDENT control word,
00015260you simulate the use of the tab key on an ordinary typewriter.
00015270The first line of a numbered paragraph will appear as if it had been typed in the sequence TABnTABntext.
00015280Succeeding lines will appear as if they had been typed in the sequence TABTABtext.
00015290Its format follows:
00015300.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.of     [n]
00015310.bx off;.sp;.rm 5;.of 5;n    is the number of spaces to be added to the current margin or margin plus indent
00015320_a_f_t_e_r the next line is printed.
00015330You may restore the margin or margin plus indent by omitting n or specifying it as 0.
00015340.kp off;.se Tof=&;.ke Break Offset .of___
00015350.sp;.in 0;.rm 0;Because the OFFSET control word's effect does not take place until _a_f_t_e_r the next text line,
00015360the first line of your paragraph will begin at the current left margin or margin plus indent;
00015370succeeding lines will begin at the margin plus indent plus offset,
00015380until you enter an additional offset or until you reset the offset to zero by entering .of 0, or .of.
00015390You can enter a series of paragraphs that uses the same offset simply by repeating the .of n
00015400before the first line of each paragraph; no intervening .of 0 is necessary.
00015410If you require a series of paragraphs with different offsets,
00015420you must enter .of or .of 0 before entering the new OFFSET control word.
00015430.cm ----------------------------------------------------------------------------------------------------------------------]
00015440.se ab=.rm;.h3 Right Margin (.rm)
00015450Occasionally the user desires to modify the right margin. This is done by the .RM control word.
00015460The right margin is considered to be within______ the line length; in other words, titles will not be effected.
00015470The format of this control word is:
00015480.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.rm     [Æ] n
00015490.bx off;.sp;.rm 5;.of 5;n    is the number to be used as the right margin.
00015500If a sign precedes "n", the value will be added or subtracted from the existing right margin.
00015510.in 0;.rm 0;.kp off;.se Trm=&;.ke Æ Break Margin .rm___
00015520.cm ----------------------------------------------------------------------------------------------------------------------]
00015530.se ab=.un;.h3 Undent (.un)
00015540SCRIPT provides another method of accomplishing hanging indents, through use of the UNDENT control word.
00015550The UNDENT control word works from the current indent towards the left margin,
00015560unlike OFFSET which works away from the left margin towards the right.
00015570Also, the UNDENT control word operates on the line _i_m_m_e_d_i_a_t_e_l_y _f_o_l_l_o_w_i_n_g it.
00015580Thus, you can specify an indent for the text to be printed hanging,
00015590and use the UNDENT control word _b_e_f_o_r_e the first line of each new paragraph
00015600so that the paragraph number is printed nearer the left margin.
00015610Its format follows:
00015620.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.un     n
00015630.bx off;.sp;.rm 5;.of 5;n    is the number of spaces the beginning of the next line is to be moved
00015640towards the left margin.
00015650It must be less than the current indent.
00015660Note that this requirement means that you cannot cause a line to begin to the left of the basic left margin,
00015670because the margin is equivalent to .in 0.
00015680.kp off;.se Tun=&;.ke Break .un___
00015690.sp;.in 0;.rm 0;In general, the choice between using the UNDENT and OFFSET control words
00015700depends upon your personal preference.
00015710It _i_s important, however, _n_o_t to use the UNDENT control word in portions of text that are offset,
00015720because the UNDENT control word operates with respect to the margin plus indent,
00015730not the margin plus indent plus offset.
00015740.in 0
00015750.cm ----------------------------------------------------------------------------------------------------------------------]
00015760.se ab=.pp;.h3 Paragraph Start (.pp)
00015770The PARAGRAPH START control word provides a convenient way to start a new paragraph.
00015780Use this control word if the standard paragraph format it uses is satisfactory.
00015790Its format follows:
00015800.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.pp     [line]
00015810.bx off;.sp;.rm 5;.of 5;line is the text to be used as the first part of the new paragraph.
00015820If this line is omitted, the text from the next input line after the .PP control word is used instead.
00015830.kp off;.se Tpp=&;.ke Break Paragraph .pp___
00015840.sp 2;.in 0;.rm 0;When the .PP control word is encountered, a line space is generated,
00015850and then three blanks are formatted to start the next line.
00015860If the next line from the input file is formatted before the the next BREAK occurs, the next text will be indented 3.
00015870.cm ----------------------------------------------------------------------------------------------------------------------]
00015880.se ab=.tb;.h3 Tab Setting (.tb);.ke _Tabs
00015890When using SCRIPT you will work with three_____ _k_i_n_d_s of tabs:
00015900.rm 5;.in 5;.of 3;1. The mechanical tab stops on your terminal, with which you are already familiar.
00015910.of 3;2. The effect of the TAB character upon the TSO Editor, which always______ results in one or more blanks.
00015920.of 3;3. The logical tabs, which SCRIPT uses to format your output on a printer.
00015930.sp;.in 0;.rm 0;When you use the TAB key as you are entering your text, the TSO Editor generates one or more blanks to suit the Editor TABSET (or default) positions.
00015940To pass "logical tabs" through the Editor to SCRIPT, the user should first choose some unused character, have it translated (see .tr) to the TAB character, then insert that character when a logical tab is desired.
00015950SCRIPT uses the information you have furnished it in the TAB-SETTING control word to convert these logical tabs
00015960into the appropriate number of blanks to simulate actual tab stops.
00015970Its format follows:
00015980.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.tb     [f1/]n1  [f2/]n2  [f3/]n3  ...
00015990.bx off;.sp;.rm 5;.of 5;n1.. specifies the print position of the tab stop, _n_o_t the number of spaces
00016000between it and the last tab stop.
00016010If you do not enter a TAB-SETTING control word, SCRIPT chooses logical tab stops at print positions
000160205, 10, 15, etc., up to 75.
00016030.of 5;f1.. specifies the fill character.
00016040.kp off;.se Ttb=&;.ke Break .tb___ Tabs
00016050.sp;.in 0;.rm 0;If you have entered a TAB-SETTING control word, you can restore the standard tabs simply
00016060by entering a TAB-SETTING control word with no stops specified.
00016070.sp;By using the TAB to begin a paragraph you accomplish two things at once:
00016080the first line of the paragraph is indented to the tab stop, and, because the TAB (key or character) begins the line an automatic break occurs,
00016090assuring that the formatted paragraph will begin on a new line.
00016100.sp;For drawing lines, filling otherwise blank lines with a non-blank character,
00016110the _t_a_b _f_i_l_l facility permits you to enclose portions of text in boxes,
00016120generate periods in tables of contents, etc.
00016130.sp;.kp on;.in 0;.rm 0;For example, specifying:
00016140.ss;.sp;     .tb 5 +/15 -/25 */35
00016150     .tr # tab
00016160     .br
00016170     A#B#C#D#E
00016180.ds;.sp;would result in:
00016190.sp;     A    B+++++++++C---------D*********E
00016200.kp off
00016210.cm ----------------------------------------------------------------------------------------------------------------------]
00016220.se ab=.im;.h1 Incorporating Other Files;.ke File
00016230When developing long documents, or documents that you expect to revise frequently,
00016240it is good practice to establish a number of individual SCRIPT files that each contain a separate portion of your document.
00016250For instance, each chapter could be a separate file, and your keyboard-developed illustrations could be kept
00016260in a file of their own.
00016270Then, using the control words described in this section,
00016280you can establish a _m_a_s_t_e_r _f_i_l_e that combines the individual sections in any order you require.
00016290.sp;In this way, you can reorganize your document if necessary, and add to it or delete from it with a minimum of effort.
00016300Different master files can be established so that different versions of your document can be printed simply
00016310by referring to the appropriate master file, without having to maintain separate (duplicate) files.
00016320This conserves storage space and relieves you of the necessity of making sure that changes
00016330are incorporated into duplicate files.
00016340.sp;SCRIPT provides you with five control words that permit you to combine files in different ways.
00016350add a file to the end of another file,
00016360and assure that a file is not inserted into another until a new page is begun in the receiving file.
00016370.cm ----------------------------------------------------------------------------------------------------------------------]
00016380.se ab=.im;.h3 Imbed (.im)
00016390The IMBED control word is your principal means of inserting or including other SCRIPT files
00016400within the one you are developing.
00016410SCRIPT does not limit the number of IMBED control words you may have within a file,
00016420but it does limit the number of "nested" IMBED control words to eight.
00016430(A nested imbedded file is one which has been imbedded in a file which is itself imbedded.)
00016440.sp;You may use the IMBED control word anywhere within a document.
00016450When SCRIPT encounters it, the file to be imbedded is inserted into the file containing the IMBED control word.
00016460At the end of the imbedded file SCRIPT resumes the printing of the original file.
00016470Its format follows:
00016480.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.im     file  [ arg ... ]
00016490.bx off;.sp;.rm 5;.of 5;file is the name of the file that is to be imbedded.
00016500.se imbed=&
00016510.of 5;arg  is/are parameters passed to the imbedded file, much like subprograms.
00016520.kp off;.se Tim=&;.ke .im___ Imbed
00016530.rm 0;.sp 2;.in 0;One useful application of the IMBED control word is that of including frequently-used sets of control words in a file.
00016540Using the IMBED control word, you need not repeat the sequence; you need only enter an IMBED control word referring to the
00016550file that contains the sequence.
00016560.sp;The operation of SCRIPT when you make use of imbedded files is shown below in Figure &ImbedF., page &ImbedP..
00016570Note that the master file contains the page and text formatting control that are to be in effect for the entire document.
00016580You will find the IMBED control word extremely useful whenever you are working with large documents.
00016590For example, the section "Multiple Column Processing" is a separate file,
00016600as is the section "Terminal Input/Output"; both are imbedded into the document from a master file.
00016610.sp;The IMBED control word does not permanently change the file in which it is encountered.
00016620The imbedded file does not become part of the master file; it simply becomes part of your output.
00016630.sp;Because SCRIPT does not automatically perform a page eject at the end of the imbed,
00016640the n+1 line should be one of the page eject control words if you require that the remaining text
00016650in the receiving document begin on a new page.
00016660.sp;Frequently, imbedded SCRIPT files have the same relationship to the master file as program subprograms have to the main program.
00016670It is possible to pass parameters to the imbedded file, processing them with the facilities provided for set symbols.
00016680These arguments will be assigned to the special set symbols &1, &2 etc.
00016690The set symbol &0 will be set to the number of parameters specified.
00016700.sp;Each imbedded file must be identified by a unique name and must have been previously allocated by the user or by a stored procedure.
00016710.cs 1 on;This is due to the fact that Ryan SCRIPT is written entirely in legal PL/I, and that file opening by dataset name is not yet available there.
00016720.cs 1 off;For example:
00016730.sp;     ALLOC FILE(XYZ) DATASET(SCRIPT(XYZ))
00016740.ss;     ...
00016750     .im xyz
00016760.sp 3;.in 2;.kp on;.bx 1 &$ll;.sp;Unformatted Input
00016770.sp 2;       filea
00016780.bx 5 19;    aaaaaaaaaaa             fileb
00016790    aaaaaaaaaaa        Ð×××××××××××××¯          filec
00016800    .im fileb |  ××××××>| bbbbbbbbbbb |      Ð×××××××××××××¯
00016810    aaaaaaaaaaa  <××××××| .im filec   |××××××>| ccccccccccc |
00016820    aaaaaaaaaaa        | bbbbbbbbbbb |<××××××| ccccccccccc |
00016830    aaaaaaaaaaa        | bbbbbbbbbbb |      ¿×××××××××××××¨
00016840    aaaaaaaaaaa        ¿×××××××××××××¨
00016850    aaaaaaaaaaa
00016860.bx off;.sp 2;Formatted Output
00016870.sp;.bx 5 19;.sp;    aaaaaaaaaaa
00016880    aaaaaaaaaaa
00016890    bbbbbbbbbbb
00016900    ccccccccccc
00016910    ccccccccccc
00016920    bbbbbbbbbbb
00016930    bbbbbbbbbbb
00016940    aaaaaaaaaaa
00016950    aaaaaaaaaaa
00016960    aaaaaaaaaaa
00016970    aaaaaaaaaaa
00016980    aaaaaaaaaaa
00016990.se ImbedF=&SYSCOUNT
00017000.bx off;.h5 Figure &ImbedF  Effects of Imbedding
00017010.bx off all;.in 0
00017020.ds;.br;.kp off;.se ImbedP=&
00017030.cm ---------------------------------------------------------------------------------------------------------------------->
00017040.se ab=.di;.h3 Delay Imbed (.di)
00017050You will find the DELAY-IMBED control word useful if you are working with a document which includes tables or diagrams
00017060smaller than a full page.
00017070Its purpose is to allow you to delay the inclusion of a portion of your SCRIPT input file until the next page eject occurs.
00017080DELAY-IMBED does not force a page-eject.
00017090Instead, SCRIPT continues to place lines on the current page.
00017100When a new page is begun, the portion of your file which you specified as delayed is printed.
00017110Its format follows:
00017120.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.di     [n | ON | OFF | line]
00017130.bx off;.sp;.rm 5;.of 5;n    is the number of input lines saved for processing at the top of the next page by SCRIPT.
00017140If n is omitted, 1 is assumed. These input lines may contain text and/or control words.
00017150.of 5;ON   specifies that all input lines following the control word are to be delayed. Used with ".di off".
00017160.of 5;OFF  marks the end of the input lines being delayed. Used with ".di on".
00017170.of 5;line is a single line to be delay imbedded.
00017180.kp off;.se Tdi=&;.ke On Off Break Pagination .di___
00017190.sp;.in 0;.rm 0;The operation of the DELAY-IMBED control word is shown in Figure 2.
00017200This control word can be used to ensure that a table or illustration begins at the top of the page following the first
00017210reference to it in the text.
00017220As indicated in the figures, DELAY-IMBED is often used in combination with the IMBED control word.
00017230.cm ----------------------------------------------------------------------------------------------------------------------]
00017240.se ab=.fn;.rc 1 on;.h3 Footnote (.fn)
00017250The FOOTNOTE control word allows you to set aside up to ten lines
00017260.fn on;.ss;You may have more than one footnote in a column, provided that each one occupies no more than ten formatted lines.
00017270.ds;.fn off;of formatted output text to be positioned at the bottom of the current column, if possible,
00017280or at the bottom of the next column.  The format of this control word is:
00017290.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.fn     [ON | OFF]  [(x)]
00017300.rm 5;.bx off;.sp;.of 5;ON   indicates that this is the beginning of the material in the footnote.
00017310.of 5;OFF  indicates that this is the end of the footnote material.
00017320.of 5;x    can be used in place of the usual (superscript) footnote numbering convention; empty parenthesis will leave no marker in the text at all.
00017330.kp off;.se Tfn=&;.ke On Off Keep Pagination .fn___ Footnotes
00017340.rm 0;.sp;.in -5;Use the FOOTNOTE control word to set aside up to 10 lines of formatted output for a footnote.
00017350Since the FOOTNOTE control word uses the same routines as the KEEP control word, a keep and a footnote may not be in effect at the same time.
00017360FOOTNOTE ON starts a footnote.  All lines until the subsequent FOOTNOTE OFF control are put into the footnote.
00017370If FOOTNOTE OFF is encountered when no footnote is in process, it is ignored.
00017380If the maximum number of lines is exceeded, the footnote is ended just as though a FOOTNOTE OFF control word had been encountered, and a warning message is printed.
00017390The rest of the material is treated as ordinary text.
00017400(The real FOOTNOTE OFF will be ignored, since no footnote will then be in process).
00017410.sp;The first footnote in a column is automatically started with a three line package consisting of two spaces and then a 15 character cutoff rule.
00017420The cutoff rule is composed of hyphens (-), but you may translate them to another character if you wish.
00017430Note that the material in the footnote will be translated according to the translations in effect at the time the footnote is formatted, not when it is actually printed.
00017440.sp;The FOOTNOTE control word does not act as a break.
00017450The footnote is considered to fit in this column if the number of lines left is sufficient to accommodate the footnote itself, the three line cutoff package, and one more line for the callout.
00017460(In other words, there must be 4 more lines than the size of the footnote left in this column).
00017470To ensure that your footnote and the callout appear in the same column, put the footnote itself before the callout.
00017480Since the footnote does not cause a break, the sentance containing the callout may be interrupted for the footnote itself without disrupting the formatted output.
00017490.sp;A footnote in process will be terminated by any disallowed control word or by a control word that starts a new keep, footnote or headnote.
00017500There is a limit to the number of pending lines that can be saved; if a footnote is terminated by a disallowed control word that includes another line (such as ".pa;this is another..."), this limit may be exceeded.
00017510It is always safer to terminate each keep, footnote and headnote with the appropriate OFF control word.
00017520If the situation develops where there are too many pending lines to restore the pre-footnote conditions, SCRIPT will terminate with an error message.
00017530.sp;A footnote does not have an automatic offset.
00017540You must include an OFFSET (.of) control word if you want the footnote offset.
00017550.cm ----------------------------------------------------------------------------------------------------------------------]
00017560.se ab=.hn;.h3 Headnote (.hn)
00017570.sp
00017580The HEADNOTE control word allows you to set aside up to ten lines of formatted output text to be positioned at the top of the next page and all subsequent pages until cancelled.  The format of this control word is:
00017590.hn on;*******************************************
00017600.ss;**** THIS IS AN EXAMPLE OF AN HEADNOTE ****
00017610.br;*******************************************
00017620.ds;.hn off;.sp 2;.cp 20;.in 5;.bx 3 13 62;.li;.hn       [ON | OFF | CANCEL]
00017630.rm 5;.bx off;.sp;.of 7;ON     tells SCRIPT to start putting formatted text into a headnote.
00017640.of 7;OFF    marks the end of the material that is to go into the headnote.
00017650.of 7;CANCEL clears the active headnote so that it will no longer print at the top of the text area of every output page.
00017660.se Thn=&;.ke On Off Keep Pagination .hn___ Cancel Headnotes
00017670.rm 0;.sp;.in -5;Use the HEADNOTE control word to set aside up to 10 lines of formatted output for a headnote.
00017680The HEADNOTE control word uses the same routines as the KEEP control word, so a keep and a headnote may not be in process at the same time.
00017690HEADNOTE ON starts a headnote.  All lines until the subsequent HEADNOTE OFF control are put in the headnote.
00017700If HEADNOTE OFF is encountered when no headnote is in process, it is ignored.
00017710If the maximum number of lines is exceeded, the headnote is ended just as though a HEADNOTE OFF control word had been encountered, and a Warning is typed.
00017720The rest of the material is treated as ordinary text.
00017730(The real HEADNOTE OFF will be ignored, since no headnote will then be in process).
00017740The headnote is placed at the top of each subsequent page until cancelled with a HEADNOTE CANCEL control word.
00017750.sp;The maximum size of each headnote is 10 lines.
00017760If the material in the headnote will occupy more than 10 formatted output lines, the headnote is terminated, and a Warning is typed.
00017770.sp;The HEADNOTE control word does not act as a break.
00017780.sp;A headnote in process will be terminated by any disallowed control word or by a control word that starts a new keep, footnote or headnote.
00017790There is a limit to the number of pending lines that can be saved; if a headnote is terminated by a disallowed control word that includes another line (such as ".pa;this is another..."), this limit may be exceeded.
00017800It is always safer to terminate each keep, footnote or headnote with the appropriate OFF control word.
00017810If the situation develops where there are too many pending lines to restore the pre-headnote conditions, SCRIPT processing will terminate with an error message.
00017820.sp;Floating and delayed keeps are processed before headnotes at the top of a new page.
00017830.hn cancel
00017840.cm ----------------------------------------------------------------------------------------------------------------------]
00017850.se ab=.kp;.h3 Keep (.kp)
00017860The KEEP control word allows you to designate blocks of text that must be kept together without being separated by a column eject or a page eject.  The format of this control word follows:
00017870.sp 2;.kp on;.in 5;.bx 3 12 62;.li;.kp      [ON | FLOAT | DELAY | OFF]
00017880.rm 5;.bx off;.sp;.of 6;ON    starts a regular keep.  A regular keep is put in this column if it will fit, and otherwise an immediate column eject is done.
00017890It is similar to a Conditional Column Eject, except that in the .CC you tell SCRIPT how many output lines must remain in the column, but in KEEP you tell SCRIPY how much input data must fit in the column.
00017900.cp 5;.of 6;FLOAT starts a floating keep.  A floating keep is put in this column if it will fit, and otherwise it goes at the top of the next column.
00017910Text from after the floating keep is formatted into the rest of this column.
00017920.of 6;DELAY starts a delayed keep.  A delayed keep will always go at the top of the next column, even if there is room for it in this column.
00017930.of 6;OFF   marks the end of a regular, floating, or delayed keep.
00017940.kp off;.se Tkp=&;.ke On Off Break Pagination .kp___ Float Delay Keep
00017950.rm 0;.sp;.in -5;The KEEP control word delimits blocks of text that must be kept together.
00017960A keep is started with KEEP ON, KEEP FLOAT or KEEP DELAY.
00017970It is ended with KEEP OFF, or starting a new keep, footnote, or headnote or when a disallowed control word is encountered.
00017980.us Any control word that changes the number of lines that were left in the column before the keep
00017990.us is disallowed while a keep is in progress.
00018000These are: .BM, .CB, .CC, .CP, .EP, .LN, .MC, .OP, .PA, .PL, .PN, .SC and .TC.
00018010Some Head Level control words (.H0-.H6) may terminate a keep if a column eject is required.
00018020.ke .bm .cb .cc .cp .ep .ln .mc .op .pa .pl .pn .sc .tc .h0 .h1 .h2 .h3 .h4 .h5 .h6
00018030.sp;When a regular keep is ended it is printed immediately if there is enough room in the column.
00018040If not, a column eject is done, and then the keep is printed.
00018050.sp;When a floating keep is ended it is printed immediately if there is enough room in the column.
00018060If not, processing continues until the next column eject occurs naturally, and then the keep is printed.
00018070.sp;When a delayed keep is ended, it is treated as a floating keep that was too big for the current column.
00018080Processing continues until the next natural column eject, even if it would have fit in the first column, and then the keep is printed.
00018090.sp;A keep does not cause a break.
00018100If there is a partial line being formatted, it is saved during the keep and restored when the keep is ended.
00018110If the keep is ended by a disallowed control word that has another line connected with it (such as ".pa;this is another..."),
00018120and there is also a partial line being saved from before the keep, SCRIPT cannot restore everything in the proper order.
00018130In this case, SCRIPT will terminate with an error message.
00018140If the keep is ended with a simple disallowed control word (such as ".pa") or if there is no partial line saved from before the keep,
00018150then SCRIPT can end the keep, do the control word that ended the keep (.pa) and restore the partial line as it was before the keep started.
00018160It is safer to end a keep with a KEEP OFF control word.
00018170.sp;The maximum number of lines in a keep is the same as the current number of text lines in a column.
00018180If more lines than this are formatted before the keep is ended, SCRIPT will automatically end the keep, and the remaining lines are treated as ordinary nonkept text lines.
00018190A warning message is typed.
00018200If a KEEP OFF control word is encountered when no keep is in process, it is ignored.
00018210.sp;Keeps, footnotes and headnotes are all varieties of the basic keep.
00018220The same control words that are disallowed while a keep is in process are also disallowed in a headnote and a footnote.
00018230See the discussions of the FOOTNOTE and HEADNOTE control words.
00018240.sp;If the keep requires a column eject, the old column is made ineligible for balancing. See the discussion of the BALANCE COLUMNS control word.
00018250.sp;A delayed keep or a floating keep is put out at the top of the next column.
00018260A delayed imbed is put out at the top of the next page.
00018270.br;.rc 1 off
00018280.cm ----------------------------------------------------------------------------------------------------------------------]
00018290.se ab=.ap;.h3 Append (.ap)
00018300Another method of organizing the SCRIPT files containing your document is to end each individual file
00018310with an APPEND control word.
00018320This method differs from using the IMBED control word in that SCRIPT does not resume processing the first file
00018330after it has processed the file named in the APPEND control word.
00018340When SCRIPT encounters the APPEND control word, it terminates processing the original file,
00018350and begins processing the file to be appended as though it were a continuation of the original file.
00018360Unless the appended file itself ends with an APPEND control word, SCRIPT returns control to TSO at that point.
00018370Each appended file must be identified by a unique name and must have been previously allocated by the user or by a stored procedure.
00018380Its format follows:
00018390.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.ap     name  [arg1 ...]
00018400.bx off;.sp;.rm 5;.of 5;name is the name of the file to be appended to the current file.
00018410.in 0;.rm 0;.kp off;.se Tap=&;.ke .ap___ .im Append
00018420.cm ----------------------------------------------------------------------------------------------------------------------]
00018430.se ab=.ef;.h3 End of File (.ef)
00018440You can simulate an end-of-file within a file by using the END-OF-FILE control word.
00018450You will find this capability especially useful for dividing into segments a file that is to be imbedded in portions.
00018460.sp;For example, you may have developed a SCRIPT file containing illustrations for an entire document.
00018470However, the illustrations are to appear interspersed with different portions of the text, rather than all together.
00018480By entering an END-OF-FILE control word after each illustration,
00018490you cause SCRIPT to terminate the imbed rather than continue to the end of the illustration file.
00018500Thus, in your text file you simply enter an IMBED control word at each point you wish to insert the next illustration.
00018510If it is the first IMBED control word referring to that file, SCRIPT begins at the top of the file and imbeds each
00018520successive line until it encounters an actual end-of-file condition, or until it encounters an END-OF-FILE control word.
00018530The next IMBED control word in your text file that refers to the illustration file begins inserting the illustration
00018540file at the point where it left off, immediately following the END-OF-FILE control word.
00018550Its format follows:
00018560.sp 2;.kp on;.in 5;.bx 3 12 62;.li;.ef      [CLOSE]
00018570.rm 5;.bx off;.sp;.of 6;CLOSE tells SCRIPT not to hold your place in the current file, but to close it,.
00018580so that the next time the file is imbedded, SCRIPT begins processing at the top of the file,
00018590not at the line following the .EF control word.
00018600.rm 0;.sp 2;.in 0;An illustration of the use of the IMBED, DELAY-IMBED and END-OF-FILE control words is shown in Figure 3.
00018610.kp off;.se Tef=&;.ke .ef___ .im Close
00018620.cm ----------------------------------------------------------------------------------------------------------------------]
00018630.cp 10;.h2 Preserving File Status
00018640When you cause another file to be included in your output by use of the IMBED or DELAY-IMBED control words,
00018650the setup values of the imbedded files remain in effect after the return to the receiving file until new control words
00018660are encountered.
00018670Often, this is undesireable.
00018680For instance, if the file you imbedded used double-spacing, it remains in effect for the remainder of the file in which you
00018690imbedded it, even though you have specified single-spacing at some point before the IMBED.
00018700You could prevent problems of this kind by keeping track of all your setup values and entering the appropriate control words
00018710to reset them after each IMBED or DELAY-IMBED, but this would be extremely inconvenient.
00018720Frequently, it is difficult to know what the original settings were.
00018730.sp;To prevent this problem SCRIPT provides you with two control words that relieve you of the necessity to keep track of
00018740the values in effect at the time of the IMBED or DELAY-IMBED.
00018750The SAVE-STATUS control word causes SCRIPT to store the values;
00018760the RESTORE-STATUS control word allows you to put them back into effect.
00018770.cm ----------------------------------------------------------------------------------------------------------------------]
00018780.se ab=.sa;.h3 Save Status (.sa)
00018790To insure that you will be able to restore your current control values after imbedding a file,
00018800you must enter a SAVE-STATUS control word before entering the IMBED or DELAY-IMBED control word.
00018810This causes SCRIPT to store your current values such as margin and tab settings, line length, text format, etc.
00018820It does _n_o_t, however, store your top and bottom titles.
00018830If you wish to resume printing of the same top and bottom titles that were in effect at the time of the imbed,
00018840you must reenter appropriate control words at the point where SCRIPT resumes processing the original file.
00018850Its format follows:
00018860.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.sa
00018870.bx off;.kp off;.se Tsa=&;.ke .sa___ .re
00018880.sp;.in 0;When SCRIPT encounters the SAVE-STATUS control word, it stores the settings of the following control words:
00018890.sp;.ss;.cp 15;.kp on;.bx 5 62;.h6 Table &SYSCOUNT(1)  Control Words Effected by Save/Restore
00018900.bx off / 5 33 62;.cd 2 6 33;.nf;.li on
00018910.BC  Balanced Columns
00018920.BM  Bottom Margin
00018930.CE  Center
00018940.CL  Column Length
00018950.CO  Concatenate Mode
00018960.DS  Double Space Mode
00018970.FI  Fill Mode
00018980.FM  Footing Margin
00018990.FO  Format Mode
00019000.FS  Footing Space
00019010.HM  Heading Margin
00019020.HS  Heading Space
00019030.IN  Indent
00019040.JU  Justify Mode
00019050.LI  Literal
00019060.LL  Line Length
00019070.LS  Line Spacing
00019080.NC  No Concatenate Mode
00019090.NF  No Fill Mode
00019100.NF  No Format Mode
00019110.NJ  No Justify Mode
00019120.OF  Offset
00019130.OJ  Out Justify
00019140.PL  Page Length
00019150.PN  Page Numbering Mode
00019160.RC  Revision Code
00019170.RI  Right Justify
00019180.RM  Right Margin
00019190.SS  Single Space Mode
00019200.SU  Substitution Mode
00019210.TB  Tab Setting
00019220.TM  Top Margin
00019230.UN  Undent
00019240.li off;.cd 1 0;.bx off all;.kp off
00019250.ke .bc .bm .ce .cl .co .ds .fi .fm .fo .fs .hm .hs .in .ju .li .ll .ls .nc .nf .nj .of .oj .pl .pn .rc .ri .rm .ss .su .tb .tm .un
00019260.fo;.sp;.ds;The SAVE-STATUS control word does not change the settings of any of these;
00019270it merely stores them so that they can be reset later.
00019280Because of this, you may find it necessary to set certain values explicitly if you do not know what they are
00019290at the time you enter the SAVE-STATUS control word.
00019300For example, you may want to set your indent value to zero in the file to be imbedded.
00019310Remember also that SCRIPT may encounter subsequent SAVE-STATUS control words in the imbedded files before reaching
00019320the RESTORE-STATUS control word corresponding to the SAVE-STATUS control word you entered.
00019330As many as five nested save-restore sequences are permitted.
00019340.cm ----------------------------------------------------------------------------------------------------------------------]
00019350.se ab=.re;.h3 Restore Status (.re)
00019360As mentioned above, the RESTORE-STATUS control word resets control word values in accordance with those stored
00019370by the corresponding (preceding) SAVE-STATUS control word.
00019380A RESTORE-STATUS control word that does not have a corresponding SAVE-STATUS control word
00019390causes an error message to be printed during output.
00019400Its format follows:
00019410.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.re
00019420.bx off;.kp off;.se Tre=&;.ke .re___ .sa
00019430.sp;.in 0;An example of use of SAVE-STATUS and RESTORE-STATUS is shown by the following sequence:
00019440.ss;.sp;.cp 19;.in 5;.nf;.li 19
00019450...
00019460.DELAY-IMBED ON
00019470.SAVE-STATUS
00019480.INDENT 0
00019490.TAB-SETTING 5 15
00019500.SINGLE-SPACE-MODE
00019510.SPACE 2
00019520.CENTER
00019530Table III.
00019540.SPACE
00019550The following table shows the legal commands:
00019560     FORT      FORTRAN compiler
00019570     PLI       PL/I compiler
00019580...
00019590...
00019600.PAGE-EJECT
00019610.RESTORE-STATUS
00019620.DELAY-IMBED OFF
00019630...
00019640.ds;.sp;.in 0;.fo;The material from the DELAY-IMBED ON to the DELAY-IMBED OFF will be activated at the end of the current
00019650page of SCRIPT output.
00019660When this section is activated, it first saves the SCRIPT status.
00019670Since it is not known whether an INDENT or OFFSET was in effect,
00019680the INDENT 0 ensures that print-out will start in column 1.
00019690Likewise, since DOUBLE-SPACE-MODE may have been in effect,
00019700the SINGLE-SPACE-MODE control word ensures that single spacing will occur for this table.
00019710The tab setting is specially set for the tabular information.
00019720At the end of the table, the PAGE-EJECT control word, forces print-out to continue on a new page.
00019730The RESTORE-STATUS restores the SCRIPT status variables, in particular the INDENT, SINGLE/DOUBLE SPACE-MODE and TAB-SETTING,
00019740to their original values. The DELAY-IMBED OFF terminates the imbed section.
00019750.cm ----------------------------------------------------------------------------------------------------------------------]
00019760.se ab=;.h1 Additional Facilities
00019770SCRIPT includes many facilities for increasing the usability of your document in both final and unformatted form.
00019780Through the control words described in this section, you can:
00019790.nj;.sp;.in 5;.rm 5
00019800.sp;.of 5;®    conveniently underscores sets of text
00019810.sp;.of 5;®    establishes a topic heading and table of contents scheme
00019820.sp;.of 5;®    produce automatic keywording and indices
00019830.sp;.of 5;®    support selective viewing of sections
00019840.sp;.of 5;®    cause selective printing of anything from a single word to an entire document
00019850.sp;.of 5;®    indicate as many as nine different revision codes at the left margin
00019860.sp;.of 5;®    cause characters entered from the terminal to be translated when your document is to be printed offline
00019870.sp;.of 5;®    cause lines beginning with a period (.) to be treated as literal text rather than as control words
00019880.sp;.of 5;®    include comments that will not appear in the final document
00019890.sp;.of 5;®    change the symbol used to separate successive control words that are entered on the same line
00019900.ju;.in 0;.rm 0
00019910.cm ----------------------------------------------------------------------------------------------------------------------]
00019920.se ab='.h0 - .h6';.h3 Head Level (.h0 - .h6)
00019930The control words .h0 through .h6 automatically generate topic headings in the formatted SCRIPT output.
00019940The definition of a particular head level may also require an entry in the table of contents for that head level.
00019950The format of this control word is:
00019960.sp 2;.kp on;.cp 6;.in 5;.bx 3 11 62;.li;.h_     [text]
00019970.bx off;.sp;.rm 5;.of 5;_    is the number representing the head level, from 0 to 6.
00019980.of 5;text is the data to be formatted as a subject head and optionally placed in the table of contents.
00019990.kp off;.se Th0=&;.se Th1=&;.se Th2=&;.se Th3=&;.se Th4=&;.se Th5=&;.se Th6=&
00020000.ke .tc .dh Break Pagination .h0_ .h1_ .h2_ .h3_ .h4_ .h5_ .h6_
00020010.rm 0;.sp 2;.in 0;The HEAD LEVEL control words provide several automated functions for you.
00020020They can provide a topic heading that is underscored and/or capitalized
00020030with a specified number of skips before and after it.
00020040Using the first word (non-blank string) as an identifier, .Hn supports the TOPIC option of the SCRIPT Command whereby selected sections or chapters may be wiewed.
00020050.ke Topic
00020060They can cause the unformatted topic head to be saved, along with the current page number and revision code character,
00020070for entry into an optional automatic table of contents (see .tc).
00020080These functions may be redefined  using the DEFINE HEAD LEVEL control word.
00020090Whether you use the default values or redefine them, the topic head that is generated gives you the function of a keep.
00020100The head itself, the spaces after it, plus two more lines must be kept in one column.
00020110If there is not sufficient room for all this in the current column, a column eject is forced.
00020120If this happens, the skips that precede the head are discarded, since the head will be at the top of the column.
00020130The default values for the different head levels are as follows:
00020140.ss;.sp;.cp 27;.in 15;.bx 15 22 26 30 34 38 42 46 50
00020150Head=> H0: H1: H2: H3: H4: H5: H6:
00020160.bx; SKBF   0   0   3   3   3   1   1
00020170.bx; SPAF   0   5   2   2   2   0   0
00020180.bx; TCIN   0   0   0   2   4   6   8
00020190.bx;  TO    X
00020200.bx;  TC    X   X   X   X
00020210.bx;  TS        X
00020220.bx;  US        X   X       X   X   X
00020230.bx;  UP        X   X   X       X
00020240.bx;  JU        O   L   L   L   L   L
00020250.bx;  PA        X
00020260.bx;  BR        X   X   X   X
00020270.bx; FILL       X   X   X
00020280.bx off
00020290.ke Skbf Spaf Tcin To Tc Ts Us Up Ju Pa Br Fill
00020300.h5 Figure &SYSCOUNT  Default Topic Head Parameters
00020310.ds;.in 5;.cp 25;.of 5;SKBF is the number of line skips before the head.
00020320.of 5;SPAF is the number of line spaces after the head.
00020330.of 5;TCIN is the indentation amount for the table of contents entry associated with the head.
00020340.of 5;TO   means that there is to be a table of contents entry only, but no head in the text proper.
00020350.of 5;TC   means that a table of contents entry is wanted.
00020360.of 5;TS   means to leave a line space in the table of contents before the table of contents entry associated with this entry.
00020370.of 5;US   means to underscore the head.
00020380.of 5;UP   means to convert the head to uppercase.
00020390.of 5;JU   says how the header is to be justified in the text.
00020400"L" means to left justify, "O" to out justify (right on odd pages, left on even).
00020410"C" or "R" are available via .dh to center or right justify.
00020420.of 5;PA   means to do a page eject before formatting the head, if necessary.
00020430No page eject will be done if already at the top of the page.
00020440.kp on;.of 5;BR   means to cause a break after the head.
00020450This function is not meaningful where "SPAF" is nonzero because the spaces cause a break to occur.
00020460.kp off;.of 5;FILL means the table of contents entry will have dot fillers, between the topic head and the page number,
00020470(like the Table of Contents in this document).
00020480.in 0;.rm 0
00020490.cm ----------------------------------------------------------------------------------------------------------------------]
00020500.se ab=.tc;.h3 Table of Contents (.tc)
00020510The TABLE OF CONTENTS control word causes a table of contents to be imbedded at this point in the document.
00020520The table of contents is formed from the head level control words (.h0 - .h6) that have been processed
00020530and whose definitions require a table of contents entry.
00020540.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.tc     [name]
00020550.bx off;.sp;.rm 5;.of 5;name is an optional line to be used on the table of contents.
00020560If no name is given, the word CONTENTS will be used.
00020570A pseudo head level 1 is generated at the top of the table of contents using the name given or the word CONTENTS.
00020580.kp off;.se Ttc=&;.ke Break .tc___ .h0 .h1 .h2 .h3 .h4 .h5 .h6 'Table of Contents'
00020590.sp 2;.in 0;.rm 0;When .TC is encountered, a pseudo head level 1 is processed.
00020600All table of contents entries that have been saved in the utility file IKSUT2 are then formatted and printed.
00020610The entries come from the head level control words whose definitions call for table of contents entries.
00020620By default, .h0 through .h3 cause these entries.
00020630The table of contents is formatted according to the line and page dimensions in effect at the time the .TC control
00020640word is encountered, not those in effect when the head level was processed.
00020650Each line in the table has the revision code and the page number that was in effect when the head level
00020660was processed.
00020670When the table of contents is completely formatted, the utility file IKSUT2 is erased.
00020680Another page eject is done, and the new page is numbered as though sequential page numbering had occured.
00020690This control word acts as a break.
00020700Though unnecessary, the old method of building a table of contents via set-symbols will still work.
00020710.ke Twopass;If as commonly done, the Table of Contents is to appear at the front of the document, the TWOPASS option should be used to assure page number information.
00020720See the table of contents of this book for an example of an automatically generated table of contents.
00020730.sp;The Table of Contents and Topic Heads can be nicely controlled through an interplay of the tab and translate control words. Observ the following example:
00020740     .tr ! tab                    .tr ! tab
00020750.ss;     .tb 6                        .tb 6
00020760     .tc                          .tc
00020770     .tb 8                        .tr ! blank
00020780     ...                          ...
00020790     .h1 1.1!Introduction         .h1 1.1!Introduction
00020800     ...                          ...
00020810.ds;In the left most example, the '#' character is retained throughout as the 'tab';
00020820but the position to which the tabbing is to effect is 6 during the table of contents, and then it is 8 when it used in the topic heads within the document text.
00020830The right most example is an alternate approach, where the '#' character is used as a tab (to position 6) within the table of contents,
00020840but is merely translated to a blank in the text;
00020850this can be particularly effective when the topic heads are being centered or right adjusted in the text (.dh 1 ce).
00020860.ke .tr .tb Ce Translate Tab Center
00020870.cm ----------------------------------------------------------------------------------------------------------------------]
00020880.se ab=.dh;.h3 Define Head Level (.dh)
00020890The DEFINE HEAD LEVEL control word changes the properties of the head levels that are generated with the .HEAD LEVEL control words.
00020900These topic heads should not be confused with HEADINGS. The word heading refers to top titles or running heads.
00020910Head levels are part of the text, and they are topic headings. The format of this control word is:
00020920.sp 2;.kp on;.in 5;.bx 3 14 62;.li;.dh        [n  [options] ... ]
00020930.bx off;.kp off;.rm 5;.sp;.of 8;n       is the number of the head level to be defined. It may be a number from 0 to 6. If missing, all head levels are set to defaults.
00020940.of 8;options are keywords that indicate how to change the definition of the head level in question. If n is present, but options missing, defaults are reset for that level alone.
00020950.kp off;.se Tdh=&;.ke .dh___ .h0 .h1 .h2 .h3 .h4 .h5 .h6
00020960.ke Pagination Skbf Spaf Tcin To Nto Tc Ntc Ts Nts Us Nus Up Nup Oj Noj Ce Nce Ri Nri Pa Npa Br Nbr Fill Nfill
00020970.of 8;SKBF n  is the number of spaces before the head level.
00020980.of 8;SPAF n  is the number of spaces after the head level.
00020990.of 8;TCIN n  is the amount the table of contents entry associated with the head level is to be indented.
00021000.of 8;TO      means that there is to be a table of contents entry only, i.e. no head in the text.
00021010.of 8;NTO     means not "TO".
00021020.of 8;TC      means that a table of contents entry is wanted.
00021030.of 8;NTC     means not "TC", i.e. no table of contents entry is wanted.
00021040.of 8;TS      means that there should be a space before the table of contents entry.
00021050.of 8;NTS     means not "TS".
00021060.of 8;US      means that the head is to be underscored as entered into the text.
00021070.of 8;NUS     means not "US".
00021080.of 8;UP      means that the head is to be capitalized as entered into the text.
00021090.of 8;NUP     means not "UP".
00021100.of 8;OJ      means that the head level is to be "out justified" as entered into the text.
00021110This means right adjust it if it falls on an odd numbered page, left if even.
00021120.of 8;NOJ     means not "OJ".
00021130.of 8;CE      means that the topic head is to be centered within the text.
00021140.of 8;NCE     means not "CE".
00021150.of 8;RI      means that the topic head is to be right justified within the text.
00021160.of 8;NRI     means not "RI".
00021170.br;It should be noted that CE, OJ and RI are mutually exclusive;
00021180and that NCE, NOJ and NRI are the same (left justify).
00021190.of 8;PA      means that a page eject is to be done before the head is entered into the text, if necessary (if not already at the top of a page).
00021200.of 8;NPA     means not "PA" (no page eject).
00021210.of 8;BR      means that a break is to be done after the head.
00021220.of 8;NBR     means not "BR" (no break).
00021230.of 8;FILL    means the table of contents entry should have dot fillers.
00021240.of 8;NFILL   means not "FILL" (i.e. fill with blanks).
00021250.in 0;.rm 0
00021260.cm ---------------------------------------------------------------------------------------------------------------------->
00021270.se ab=.uc;.h3 Underscore Capitalize (.uc)
00021280The UNDERSCORE CAPITALIZE control word automatically underscores and capitalizes an input line. Its format follows:
00021290.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.uc     text
00021300.bx off;.sp;.rm 5;.of 5;text is the line to be capitalized and underscored.
00021310.kp off;.se Tuc=&;.ke Underscore Uppercase .uc___ .us .up
00021320.sp 2;.rm 0;.in 0;Use the UNDERSCORE CAPITALIZE control word whenever you have a line of data that is to be formatted
00021330in capital letters and underscored.
00021340This control word is a combination of the UPPERCASE and the UNDERSCORE control words.
00021350The presence of this control word does not cause an automatic break;
00021360single words in a sentence may be underscored and capitalized.
00021370The underscoring action is influenced by the UNDERSCORE DEFINITION control word and resulting state.
00021380.in 0;.rm 0
00021390.cm ---------------------------------------------------------------------------------------------------------------------->
00021400.se ab=.ud;.h3 Underscore Definition (.ud)
00021410The UNDERSCORE DEFINITION control word allows you to specify which characters will be underscored and which will not,
00021420whenever automatic underscoring is going on.
00021430The format of this control word is:
00021440.sp 2;.kp on;.bx 3 11 62;.in 5;.li;.ud     »ON | OFFº  s s ... s
00021450.bx off;.sp;.rm 5;.of 5;ON   specifies that the following characters are to be underscored.
00021460.of 5;OFF  specifies that the following characters are not to be underscored.
00021470.br;.of 5;s    is a single character, a two digit hexadecimal numeral or any of the mnemonic code words tabulated on page &Mnemonic.,
00021480representing a character to be defined as ON or OFF for automatic underscoring.
00021490.kp off;.se Tud=&;.ke On Off Underscore .ud___ .us .uc .bf .h0 .h1 .h2 .h3 .h4 .h5 .h6
00021500.sp 2;.rm 0;.in 0;When a line is automaticly underscored, certain characters are left not underscored.
00021510In general, the characters that are not underscored are punctuation marks, blanks, underscore characters and tabs.
00021520This means also that the blanks or fill characters generated by a tab character will not be underscored.
00021530A complete list of default underscored characters is found below.
00021540The control words that automatically underscore are .UNDERSCORE, .UNDERSCORE CAPITALIZE, and any HEAD LEVEL control
00021550word whose current definition calls for it.
00021560By means of the UNDERSCORE DEFINITION control word, you can override the defaults and cause any character
00021570to be underscored (ON) or not underscored (OFF).
00021580If you do not give any options with the control word, but put ".UD" alone, the default values are restored.
00021590This control word does not cause an automatic break.
00021600The characters that are by default to be underscored are:
00021610.sp;.ce;a-z, A-Z, 0-9
00021620.in 0;.rm 0
00021630.cm ---------------------------------------------------------------------------------------------------------------------->
00021640.se ab=.up;.h3 Uppercase (.up);The
00021650.up uppercase
00021660control word automatically capitalizes an input line. The format of this control word is:
00021670.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.up     text
00021680.bx off;.sp;.rm 5;.of 5;text is the line to be capitalized.
00021690.kp off;.se Tup=&;.ke Uppercase .up___
00021700.cm ---------------------------------------------------------------------------------------------------------------------->
00021710.se ab=.us;.rm 0;.in 0;.h3 Underscore (.us)
00021720This control word automatically underscores an input line.
00021730the format of this control word is:
00021740.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.us     text
00021750.bx off;.sp;.rm 5;.of 5;text is the line to be underscored.
00021760.kp off;.se Tus=&;.ke Underscore .us___
00021770.sp 2;.in 0;.rm 0;Use the UNDERSCORE control word whenever you have a line of data that is to be underscored.
00021780It is a good idea not to have too much data underscored when the output is in typewriter format.
00021790In this format, each underscored character is actually three characters: the character, a backspace and the underscore.
00021800Thus, the output line may easilly get to be too long if there are too many underscored characters in it.
00021810The UNDERSCORE control word does not cause an automatic break.
00021820The underscoring action is influenced by the UNDERSCORE DEFINITION control word.
00021830.cm ---------------------------------------------------------------------------------------------------------------------->
00021840.h3 Boldface (.bf)
00021850The
00021860.bf BOLDFACE
00021870control line allows the user to emphasize one or more words.
00021880The method used on the line printer or typewriter is simply to overstrike with the same letters.
00021890Its format follows:
00021900.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.bf     text
00021910.bx off;.sp;.rm 5;.of 5;text is one or more words to be so effected.
00021920.in 0;.rm 0;.kp off;.se Tbf=&;.ke Boldface .bf___
00021930.cm ---------------------------------------------------------------------------------------------------------------------->
00021940.se ab=.cs;.h3 Conditional Section (.cs)
00021950To cause only selected portions of your document to be printed,
00021960you associate a _c_o_n_d_i_t_i_o_n_a_l _s_e_c_t_i_o_n _c_o_d_e
00021970with the portion of the document you require to be controlled.
00021980You do this through the CONDITIONAL-SECTION control word.
00021990Through this facility you have the means for printing only unclassified portions of a confidential or proprietary document
00022000or including information on different versions of a system or procedure in the same document,
00022010and having only the information pertaining to a given version printed.
00022020Because the CONDITIONAL-SECTION control word does _n_o_t cause a break,
00022030you can even use it within a sentence to cause certain words to be included or ignored, as required.
00022040Its format follows:
00022050.sp 2;.kp on;.in 5;.bx 3 14 62;.li;.cs        n  »ON  |  OFF  |  INCLUDE  |  IGNOREº
00022060.bx off;.rm 5;.sp;.of 8;n       represents the conditional section number, and may be any digit from one to nine.
00022070.of 8;ON      specifies that the conditional section n indicator is to be set.
00022080.of 8;OFF     specifies that the conditional section n indicator is to be reset.
00022090Until either ON or OFF is specified, OFF is assumed.
00022100.of 8;INCLUDE specifies that all following conditional sections with code number 'n' are to be included.
00022110If neither INCLUDE nor IGNORE has been specified, INCLUDE is assumed.
00022120.of 8;IGNORE  specifies that all following conditional sections with code number 'n' are to be ignored.
00022130.kp off;.se Tcs=&;.ke On Off .cs___ Include Ignore
00022140.sp;.in 0;.rm 0;The first three operands are the ones you will use when entering text to define which portions of text
00022150are associated with a given conditional section.
00022160The material within a conditional section may include any SCRIPT control word, text or both.
00022170For example, the sequence:
00022180.ss;.sp;.cp 8;.nf;.in 10;.li 8;This manual contains
00022190.cs 1 on
00022200three
00022210.cs 1 off
00022220.cs 2 on
00022230five
00022240.cs 2 off
00022250sections.
00022260.ds;.sp;.in 0;.fo;associates the word "three" with conditional section 1,
00022270and the word "five" with conditional section 2.
00022280When you want to print your document at some later time,
00022290and you want to use the version that will refer to there being five sections,
00022300you simply edit the document or your master file to insert the following:
00022310.ss;.sp;.nf;.in 10;.li 2
00022320.cs 1 ignore
00022330.cs 2 include
00022340.ds;.sp;.fo;.in 0;and invoke the SCRIPT command specifying the appropriate filename.
00022350The resultant will be:
00022360.sp;.in 10;This manual contains five sections.
00022370.sp;.in 0;An alternative method might be to effect a "dynamic" editting of your SCRIPT file through judicious use of SYSVAR and .IF.
00022380.ke SYSVAR .if
00022390In the same manner, you could develop a document such as a combined course and instructors guide
00022400by defining all instructor-oriented material as a conditional section,
00022410and all student-oriented material as a second conditional section.
00022420You would then be able to print three different versions of the document:
00022430.in 5;.sp;.cp 8;.rm 5;.of 3;1. One for students, that contained only student-oriented material.
00022440.sp;.of 3;2. One for instructors that contained both student- and instructor-oriented material.
00022450.sp;.of 3;3. A second version for instructors, that contained only instructor-oriented material.
00022460.in 0;.rm 0
00022470.cm ---------------------------------------------------------------------------------------------------------------------->
00022480.se ab=.rc;.h3 Revision Code (.rc)
00022490When making changes to a published document you may need to distinguish in the final copy between original and new material.
00022500Often, this is done by printing a bar or other symbol adjacent to the new text.
00022510SCRIPT provides you with the capability of printing as many as nine different levels of revision.
00022520In addition, because the blank is a valid revision symbol,
00022530you may suppress printing of some or all revision symbols simply by redefining them as blanks.
00022540.sp;When SCRIPT finds that it must print revision indicators it accommodates them by shifting body text two spaces to the right.
00022550This allows the revision indicator to be printed at the left margin with a space between it and the beginning of the text line.
00022560If an indent is in effect at that point, then, naturally, the number of spaces between the revision indicator
00022570and the text will be greater.
00022580Because of this shift to the right you should define your revision code
00022590at the beginning of your document so that it will be printed uniformly.
00022600If you must define a revision code _w_i_t_h_i_n the document,
00022610you should do so immediately following a page eject so that the entire page will be indented uniformly.
00022620.sp;.cp 5;For defining a revision indicator, the format of the REVISION-CODE control word is:
00022630.sp 2;.kp on;.in 5;.bx 3 13 62;.li;.rc       n  »s | ON | OFF | ON/OFFº
00022640.bx off;.sp;.rm 5;.of 7;n      is the revision number, between 1 and 9.
00022650.of 7;s      is the revision indicator to be associated with the revision number specified by n.
00022660It may be any single character, including blank.
00022670.of 7;ON     causes revision number n to be associated with all subsequent text
00022680until a corresponding .rc n off is encountered.
00022690.of 7;OFF    terminates the association of revision indicator n with text.
00022700.of 7;ON/OFF turns the revision code on for the duration of the next text line only.
00022710.kp off;.se Trc=&;.ke Revision .rc___ On Off On/Off
00022720.sp;.in 0;.rm 0;.rc 1 on;It is important when using more than one revision code within a document,
00022730as when you are working on a second or later revision,
00022740that you always turn OFF your revision codes in the _r_e_v_e_r_s_e order from which you turned them ON.
00022750You may turn ON the revision codes in any order, but you must always turn them OFF in the reverse order.
00022760This paragraph is an example.
00022770.sp;.rc 1 off;.cp 13;For example:
00022780.sp;.ss;.in 10;.nf;.li 12
00022790.rc 3 on
00022800i
00022810text...
00022820.rc 1 on
00022830text...
00022840.rc 2 on
00022850text...
00022860.rc 2 off
00022870text...
00022880.rc 1 off
00022890text...
00022900.rc 3 off
00022910.ds;.fo;.sp;.in 0
00022920Of course, you may have control words and/or intervening text at the point where you turn OFF the revision codes.
00022930.sp;At times, you will require that a revision code apply to a single line or a portion of a line.
00022940To do this, you need not use separate ON and OFF control words.
00022950Instead, you may use the "on/off" option, which causes SCRIPT to turn on revision code n immediately,
00022960and turn it off at the end of the next text line.
00022970You will find this helpful, because it relieves you of the necessity for keeping track of ON/OFF sequences.
00022980In practice, it is more reliable to use this method than to break up your text line with the REVISION-CODE control words.
00022990Using the CONTROL-WORD-SEPARATOR control word (described below),
00023000you can even enter the REVISION-CODE control word and the text on the same line.
00023010.cm ---------------------------------------------------------------------------------------------------------------------->
00023020.se ab=.ix;.h3 Index (.ix)
00023030It is apparent that any adept user of the SCRIPT text processor could readilly produce an Index report,
00023040by which keywords of interest would be cross-referenced with the page number(s) on which they were encountered.
00023050This process would most likely involve some considerable use of the Editor, the set-symbol facility,
00023060and require specific formatting of the Index report proper.
00023070All of this would prove far from automatic.
00023080If the document author desires an Index and will be satisfied with the default formatting in SCRIPT,
00023090he/she may achieve that end by means of the .INDEX (.ix) control word. Its format follows:
00023100.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.ix     [word1  [word2  [...]]]
00023110.bx off;.sp;.rm 5;.of 5;word is each word to be indexed upon.
00023120Each word must be a single contiguous string of non-blank characters, or it may be a general string bracketted by quotes (').
00023130.kp off;.se Tix=&;.ke .ix___ .ke Index
00023140.rm 0;.sp 2;.in 0;Each of the words so specified will be subsequently sought throughout the text portion of the document.
00023150The scanning activity focuses on each logical word, independant of capitalization, underscoring,
00023160hyphenation and depth of imbed nesting.
00023170Occurances of a keyword will be "remembered" by SCRIPT, together with the associated external page number(s),
00023180for the Index report which is to be generated later in the run.
00023190Normally, the keywords will be specified at or near the beginning of the input file,
00023200and the report will be automaticly generated at the conclusion of processing.
00023210The sense of the .index control word, when it is included with _n_o mention of any keyword,
00023220is to request an Index report at that point.
00023230Of course, if it intended that the Index report should appear _b_e_f_o_r_e the body of the document text,
00023240.ke Twopass;the TWOPASS option must have been specified in the SCRIPT Command.
00023250.cm ---------------------------------------------------------------------------------------------------------------------->
00023260.se ab=.ke;.h3 Keyword (.ke)
00023270Like INDEX, the KEYWORD control word can be used to cause the generation of an automatic index of page references.
00023280Unlike INDEX, the KEYWORD approach does not depend upon a continuing scan of the text, but rather requires insertion
00023290of the desired control line whereever the page reference is wanted.
00023300This makes for some greater effort on the part of the document writer, but produces a smaller, better controlled
00023310index report to be created.
00023320Its format follows:
00023330.sp 2;.in 5;.kp on;.bx 3 11 62;.li;.ke     [(ref)]  word1  [word2  [....]
00023340.bx off;.sp;.rm 5;.of 5;word is each word to be indexed upon.
00023350If the word is underscored, its page reference will be emphasized (boldface) in the index report.
00023360Each word must be a single contiguous string of non-blank characters, or it may be a general string bracketted by quotes (').
00023370.of 5;ref  can be used to specify other than the current page number to be used as the reference  in the index report.
00023380.in 0;.rm 0;.kp off;.se Tke=&;.ke .ke___ .ix Keyword Index
00023390.cm ---------------------------------------------------------------------------------------------------------------------->
00023400.se ab=.cw;.h3 Control Word Separator (.cw)
00023410To save typing SCRIPT allows you to enter more than one control word,
00023420or a series of control words and text, on a single line.
00023430You do this by separating the control words from each other and from the text on that line with a character recognized
00023440by SCRIPT for that purpose.
00023450Normally, the semicolon(;) is the control word separator character.
00023460Because you may want to change this in a given document, SCRIPT provides you with the CONTROL-WORD-SEPARATOR control word.
00023470Its format follows:
00023480.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.cw     c
00023490.bx off;.sp;.rm 5;.of 5;c    is the character to be used in place of the semicolon as a separator.
00023500If c is omitted, you may not enter more than one control word per line,
00023510and may not combine control words and text on a line.
00023520.kp off;.se Tcw=&;.ke Break .cw___
00023530.in 0;.rm 0;.sp;This facility is especially useful for such sequences as:
00023540.sp 2;.in 5;.rm 5;.li;.sp 2;.of 5;This section contains the following
00023550.in 0;and
00023560.in 5;.li;.rc 2 on/off;This line has been revised a second time.
00023570.in 0;.rm 0
00023580.cm ---------------------------------------------------------------------------------------------------------------------->
00023590.se ab=.cm;.h3 Comment (.cm)
00023600With the COMMENT control word you can include notes to yourself or special references in your document.
00023610These comments are seen when you are editing your document, or printing it using the UNFORMAT option of the SCRIPT command.
00023620They do not appear in your formatted output.
00023630Thus using the COMMENT control word you can include reminders to yourself or reviewers
00023640to fill in a date, suppress revision indicators for final printing, etc.
00023650Its format follows:
00023660.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.cm     [text]
00023670.bx off;.sp;.rm 5;.of 5;text is the comment which is to appear in unformatted output.
00023680If the command exceeds one line, simply enter a COMMENT control word at the beginning of each subsequent line.
00023690.in 0;.rm 0;.kp off;.se Tcm=&;.ke .cm___ Comments
00023700.cm ---------------------------------------------------------------------------------------------------------------------->
00023710.se ab=.li;.h3 Literal (.li)
00023720Because SCRIPT control words begin with a period (.), you may encounter problems with your output if you begin a text
00023730line with a period.
00023740There may be occasions, however, when you need to do this,
00023750such as when entering a number preceded by a decimal point, or beginning a line with an ellipsis (...).
00023760There are many ways to avoid the problem by rearranging text, rewording it, or using TAB or blank to begin the line.
00023770The former are inconvenient and the latter may be incompatible with your format requirements.
00023780Using the LITERAL control word, you may begin any number of subsequent input lines with a period
00023790and have them interpreted by SCRIPT as the text lines they actually are.
00023800Its format follows:
00023810.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.li     [n | ON | OFF | line]
00023820.bx off;.sp;.rm 5;.of 5;n    is the number of subsequent input lines to be processed as text even if they begin with a period.
00023830If you omit n, only the next line is affected.
00023840.of 5;ON   will cause all___ remaining text in the SCRIPT file to be processed as text (until .li off is encountered).
00023850.of 5;OFF  reverts to the normal state, whereby text and control words are distinguished by the presence of the initial period (.).
00023860.of 5;line is the line to be treated as a literal.
00023870.in 0;.rm 0;.kp off;.se Tli=&;.ke .li___ On Off Literal
00023880.cm ---------------------------------------------------------------------------------------------------------------------->
00023890.se ab=.qu;.h3 Quit (.qu)
00023900With the QUIT control word, you can cause processing of your file to be terminated immediately.
00023910You may use the QUIT control word in conjunction with the END-OF-FILE control word to control printing of form letters,
00023920or in conjunction with the TERMINAL-INPUT and TYPE-ON-TERMINAL control words to terminate processing
00023930of a document from the terminal.
00023940When SCRIPT encounters a QUIT control word, even in a file which is being imbedded,
00023950it advances the form to the top of the next page, and ends processing.
00023960Its format follows:
00023970.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.qu
00023980.bx off;.in 0;.kp off;.ke Break .qu___ Quit
00023990.cm ---------------------------------------------------------------------------------------------------------------------->
00024000.se ab=.qq;.h3 Quick Quit (.qq)
00024010The QUICK-QUIT control word is like QUIT, except that the output is _n_o_t advanced to a new page at the end.
00024020The primary use of this control word is to facilitate checkout of documents in development.
00024030Its format follows:
00024040.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.qq
00024050.bx off;.in 0;.kp off;.se Tqq=&;.ke .qq___ Quit Break
00024060.cm ---------------------------------------------------------------------------------------------------------------------->
00024070.se ab=.tr;.h3 Translate Character (.tr)
00024080Often, text that is entered from a terminal is to be printed OFFLINE on a printer equipped with a special ability (e.g. the SN or TN chain),
00024090which contain both upper and lower case letters and a number of special characters, superscripts, etc.
00024100Many of the special characters of these trains are not directly available to you at the keyboard of your terminal.
00024110However, using the TRANSLATE-CHARACTER control word,
00024120you can use a keyboard character in place of a special character and have SCRIPT interpret this usage
00024130at the time your output is printed.
00024140At that time, the appropriate character is substituted for the keyboard character.
00024150Its format follows:
00024160.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.tr     [i o  [i o  [...]]]
00024170.bx off;.sp;.rm 5;.of 5;i    is the input (keyboard) character to be used as a representation of the desired output character.
00024180.sp;.of 5;o    is the desired output character which SCRIPT is to substitute for the input character specified by i.
00024190If o is not specified (i.e. the control line ends with i), a blank character is assumed.
00024200.kp off;.se Ttr=&;.ke Characters .tr___ Translate
00024210.in 0;.rm 0;.sp;Each of i and/or o may be coded in as a single character, as a two-digit hexadecimal number (see Figure &Tr below).
00024220.in 10;In addition, any of the following mnemonic code words will be accepted:
00024230.sp;.cp 24;.ke Mnemonic;.se Mnemonic=&;.ss;.bx 11 50;.h6 Table &SYSCOUNT(1)  Mnemonic Translate Codes
00024240.bx off / 11 20 25 50;.br;  Code     Hex     Meaning
00024250.bx
00024260  BLANK    40   a blank space
00024270  BS       16   a backspace
00024280  BULLET   AF   ®
00024290  DEG      A1   ~
00024300  GE       AE   Þ
00024310  LE       8C   ð
00024320  NE       BE   ´
00024330  SUPER0   B0   ¬
00024340  SUPER1   B1   £
00024350  SUPER2   B2   ¥
00024360  SUPER3   B3   ·
00024370  SUPER4   B4   ©
00024380  SUPER5   B5   §
00024390  SUPER6   B6   ¶
00024400  SUPER7   B7   ¼
00024410  SUPER8   B8   ½
00024420  SUPER9   B9   ¾
00024430  TAB      05   a logical tab character
00024440.bx off all
00024450.ke Blank Bs Bullet Deg Ge Le Ne Superscripts Tab
00024460.ds;.sp 2;.in 0;.rm 0;After formatting of an input source line has been completed
00024470and immediately prior to actual output, each character of the output line is analyzed for possible translation
00024480to a different output code.
00024490Consequently, the TRANSLATE-CHARACTER control word is primarily of use when the final output device uses a character set
00024500different from that used to create the SCRIPT file.
00024510Applications immediately come to mind such as keeping proper names together, etc.
00024520.sp;Title lines are processed by SCRIPT under control of the TRANSLATE specifications in effect at the time
00024530the title lines were entered.
00024540Thus, you can translate an input character in a title differently from the way you cause it to be translated in text.
00024550.sp;Once you have entered a TRANSLATE-CHARACTER control word for a given input and output character combination,
00024560it remains in effect until you explicitly redefine it.
00024570You can, however, reset all___ your translation specifications to the original (default) settings,
00024580by entering a TRANSLATE-CHARACTER control word without any "i o" pairs.
00024590.br;Note: if this is done before the first break following the text, the intended translation may not occur.
00024600.sp;You need not specify the translations of lower-case alphabetic characters to upper-case for an entire document,
00024610since this can be accomplished automatically if you specify the TRANSLATE option of the SCRIPT command.
00024620.sp;.cp 23;The hexadecimal code for each printable character on the TN chain is shown in the table below:
00024630.sp 2;.ce on;0 1 2 3 4 5 6 7 8 9 A B C D E F
00024640.ss;.tr # # < ac - bf > bc;<--------------------------------->
00024650.tr < < - - > >;00 |                                 | 00
0002466010 |                                 | 10
0002467020 |                                 | 20
0002468030 |                                 | 30
0002469040 |                     ¢ . < ( + | | 40
0002470050 | &                   ! $ * ) ; ^ | 50
0002471060 | - /                   , % _ > ? | 60
0002472070 |                     : # @ ' = " | 70
0002473080 |   a b c d e f g h i   » ð ý þ ± | 80
0002474090 |   j k l m n o p q r   º æ ¸ Æ ¤ | 90
00024750A0 | µ ~ s t u v w x y z   ¿ Ð [ Þ ® | A0
00024760B0 | ¬ £ ¥ · © § ¶ ¼ ½ ¾   ¨ ¯ ] ´ × | B0
00024770C0 |   A B C D E F G H I             | C0
00024780D0 |   J K L M N O P Q R             | D0
00024790E0 |     S T U V W X Y Z           Õ | E0
00024800F0 | 0 1 2 3 4 5 6 7 8 9             | F0
00024810.tr < ab - bf > bb;<--------------------------------->
000248200 1 2 3 4 5 6 7 8 9 A B C D E F
00024830.se Tr=&SYSCOUNT
00024840.ds;.h5 Figure &Tr  Printable Characters
00024850.tr < < - - > >;.ce off;.sp;.cp 21;_E_x_a_m_p_l_e_s:
00024860.in 5;.rm 5;.of 5;a.   .tr 0 b0 1 b1 ... 9 b9
00024870.br;This causes the characters 0, 1, ..., 9 to print as their corresponding superscript character
00024880if the output device is a printer equipped with the TN-train.
00024890For example, the formula
00024900.sp;.ce;X2+Y2=Z3
00024910.ss;will print as
00024920.ce;X¥+Y¥=Z·
00024930.ds;.sp;.cp 3;.of 5;b.   .TRANSLATE-CHARACTER 40 ?
00024940.br;This causes all blanks in the file to be typed as question marks (?) on output.
00024950.sp;.cp 5;.of 5;c.   .tr $ 7b
00024960.br;This causes each occurance of the character "$" to be replaced by the hexadecimal character 7B,
00024970which is the "#" character.
00024980This may be necessary since the # character may have special significance to the Edit facility.
00024990.rm 0;.in 0;.tr
00025000.cm ---------------------------------------------------------------------------------------------------------------------->
00025010.se ab=.if;.h3 If (.if)
00025020The IF control word allows a SCRIPT input line to be processed conditionally. The format of this control word is:
00025030.sp 2;.kp on;.in 5;.bx 3 12 62;.li;.if      comp1  test  comp2  targ
00025040.bx off;.kp off;.se Tif=&;.ke Conditional .if___ If 'Go To'
00025050.sp;.kp on;.rm 5;.of 6;comp1 is any word or number to be used as the first comparand. This comparand may be the value of a set symbol.
00025060.ke SYSLINE SYSOUT SYSPAGE;Either comp1 or comp2 may be SYSLINE, for the purpose of testing the current position on the page.
00025070.kp off;.kp on
00025080.of 6;comp2 is any word or number to be used as the second comparand.
00025090.kp off;.kp on
00025100.of 6;test  is a one or two character code that tells SCRIPT how to determine whether the comparison between the two comparands is true.
00025110The following codes are recognized by SCRIPT:
00025120.kp off;.kp on
00025130     Code____      Meaning_______
00025140.ss;     eq or =   equals
00025150     ne or ^=  not equal to
00025160     gt or >   greater than
00025170     lt or <   less than
00025180     le or <=  less than or equal
00025190     ge or >=  greater than or equal
00025200.kp off;.ke Eq Ne Lt Le Gt Ge;.kp on
00025210.ds;.of 6;targ  is any valid SCRIPT input line. It may be a control word or text.
00025220If the condition is true, then the target line is processed next, with the first nonblank character after the second comparand treated as the first position of the subject line.
00025230If the condition is not true, the target line is ignored,
00025240and processing continues with the input line that follows the .IF control line.
00025250.kp off;.sp;.rm 0;.in 0;Two special sets of comparands are recognized by the IF processing routine.
00025260.ke SYSPAGE Even Odd SYSOUT Print Terminal
00025270These are SYSPAGE EVEN/ODD and SYSOUT PRINT/TERM.
00025280You may use these to determine whether the current page is even or odd numbered,
00025290or to determine which of the two basic output formats (printer or terminal) SCRIPT is generating.
00025300.in 0;.rm 0
00025310.cm ---------------------------------------------------------------------------------------------------------------------->
00025320.se ab=.go;.h3 Goto (.go)
00025330The GOTO control line causes SCRIPT to jump to another part of the SCRIPT input file.
00025340Its format follows:
00025350.sp 2;.kp on;.in 5;.bx 3 12 62;.li;.go      label
00025360.rm 5;.bx off;.sp;.of 6;label is the name of a line that has been set elsewhere in this SCRIPT file using the "..." (SET LABEL) control line.
00025370.kp off;.se Tgo=&;.ke .go___ Label 'Go To'
00025380.in 0;.sp;.rm 0;Use the GOTO control word to "branch" to another place in your SCRIPT file.
00025390If the label designated on the GOTO control word is not defined elsewhere in the file, an error message is generated.
00025400.sp;This control word does not cause an automatic BREAK.
00025410The input line preceding the GOTO control word and the line at the label designated are processed as though they were two sequential lines from the SCRIPT file.
00025420.sp;Every GOTO control word must refer to a label that has been defined with the "..." (SET LABEL) control word;
00025430but you may have more than one GOTO referring to the same label.
00025440.sp;GOTO is particularly useful when performed conditionally as the subject of an IF control.
00025450.in 0;.rm 0
00025460.cm ---------------------------------------------------------------------------------------------------------------------->
00025470.se ab='...';.h3 Set Label (...)
00025480The SET LABEL control word marks a line of your SCRIPT file so that that line may be referred to in a .  The format of this control word is:
00025490.sp 2;.kp on;.in 5;.bx 3 12 62;.li;...      label  [line]
00025500.rm 5;.bx off;.sp;.of 6;label is a name of up to eight characters that can be used to refer to this line of your SCRIPT file.
00025510.of 6;line  is the active part of this input line.  The first nonblank character is treated as the beginning of the line.
00025520.kp off;.se Tlabel=&;.ke ...___ Label .go
00025530.rm 0;.sp;.in -5;When the "..." control word is encountered, SCRIPT saves the information necessary to enable it to find this line again if a .GOTO  control line is encountered.
00025540Any valid SCRIPT input line may follow the label, or the label alone may occupy this line of the SCRIPT file.
00025550.in 0;.rm 0
00025560.cm ---------------------------------------------------------------------------------------------------------------------->
00025570.cs 1 on
00025580.se ab=.debug;.h3 Debugging (.debug)
00025590Built into the program is a variety of debugging and tracing logic, to be used in checking the program out.
00025600Of course, the SCRIPT Command allows specification of the DEBUG option, which enables this output from the start.
00025610In addition, the program recognizes an optional control line for the purpose of dynamically turning this condition
00025620on and/or off from within the file being processed.
00025630There are two forms:
00025640.sp;.kp on;.in 5;.bx 3 14 62;.li;.debug     » ON__ | OFF º
00025650.bx off;.rm 0;.in 0;.kp off;.se Tde=&;.ke .debug______ Debug On Off;.cs 1 off
00025660.cm ---------------------------------------------------------------------------------------------------------------------->
00025670.se ab=.cd;.h1 Multiple Column Processing;.ke _Columns
00025680Perhaps one of SCRIPT's most useful features is its ability to produce multiple-column output.
00025690Using the various multiple-column control words, you can determine the number of columns per page, their width and separation,
00025700and whether all columns on a page are to be the same length (balanced) or the last column will be allowed to be shorter
00025710than the others (unbalanced).
00025720Using these control words, you can produce output with as many as nine columns per page.
00025730This allows you to produce double-column output similar to that of many technical manuals,
00025740six- or eight-column output similar to that of most newspapers,
00025750or other formats which may be of special use in your installation.
00025760.cm ---------------------------------------------------------------------------------------------------------------------->
00025770.se ab=.cd;.h3 Column Definition (.cd)
00025780With the COLUMN-DEFINITION control word, you specify the number of columns per page,
00025790and the beginning print position of each.
00025800When SCRIPT encounters a COLUMN-DEFINITION control word, it processes all text up to that point in accordance with
00025810the old column definitions before putting the new definitions into effect.
00025820Its format follows:
00025830.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.cd     n  p1 p2 ...
00025840.bx off;.sp;.rm 5;.of 5;n    is the number of columns to be printed on each subsequent page,
00025850and may be any number from 1 to 9.
00025860.of 5;p1...is the starting print position of columns 1 through n.
00025870The physically leftmost position is designated position zero.
00025880.kp off;.se Tcd=&;.ke Break .cd___ Columns
00025890.sp;.in 0;.rm 0;If you specify fewer than n starting positions, the previously defined values remain in effect
00025900for those not respecified.
00025910.cm ---------------------------------------------------------------------------------------------------------------------->
00025920.se ab=.mc;.h3 Multiple Column Mode (.mc)
00025930The MULTICOLUMN MODE control word restores multiple column processing after it has been temporarilly suspended by a SINGLE COLUMN MODE control word.
00025940If there was no .SC control word preceding this control word, it has no effect other than to cause a BREAK.
00025950.cs 1 on;This is accomplished in SCR003, by setting CONTROL.CD(1) positive.
00025960.cs 1 off
00025970Its format follows:
00025980.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.mc
00025990.bx off;.in 0;.kp off;.se Tmc=&;.ke Break .mc___ .sc .cd Columns
00026000.cm ---------------------------------------------------------------------------------------------------------------------->
00026010.se ab=.sc;.h3 Single Column Mode (.sc)
00026020If your SCRIPT file is mostly in multiple column format, but you have a few charts or sections that should be in a single column
00026030the width of the total line, use the SINGLE COLUMN MODE control word to temporarilly suspend multiple column processing.
00026040.cs 1 on;This is accomplished in SCR003, by setting CONTROL.CD(1) negative, for subsequent resetting by .SC.
00026050.cs 1 off
00026060Its format follows:
00026070.sp 2;.in 5;.bx 3 11 62;.li;.sc
00026080.bx off;.in 0;.kp off;.se Tsc=&;.ke Break .sc___ .mc .cd Columns
00026090.cm ---------------------------------------------------------------------------------------------------------------------->
00026100.se ab=.cl;.h3 Column Length (.cl)
00026110The COLUMN-DEFINITION control word specifies only the number of columns and the starting print positions.
00026120To prevent unintentional overlaps, you use the COLUMN-LENGTH control word to specify the number of print positions
00026130each column will occupy.
00026140To insure that you have space between columns, ("gutter"), you should set column length to occupy less space than
00026150that between defined column starting positions.
00026160The column length also is the reference for the operation of such control words as CENTER and RIGHT-ADJUST
00026170when you have specified multiple-column output.
00026180Its format follows:
00026190.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.cl     [Æ]  n
00026200.bx off;.sp;.rm 5;.of 5;n    is the number of print positions to be occupied by each column
00026210defined in the current COLUMN-DEFINITION control word.
00026220The % indicates that n is to be added to or subtracted from the preceding value of CL.
00026230.kp off;.se Tcl=&;.ke Æ Break .cl___ .cd Columns
00026240.sp;.in 0;.rm 0;.tr    ;If you have not entered a COLUMN-LENGTH control word,
00026250SCRIPT sets column length equal to the largest actual column width multiplied by 1.5 (to accomodate probable underscoring).,
00026260The user is free to choose a smaller CL, reducing memory demand, if conditions permit.
00026270Alternatively, a larger CL may be specified if more underscoring is anticipated.
00026280CL may then be respecified for format control.
00026290.cm ---------------------------------------------------------------------------------------------------------------------->
00026300.se ab=.cb;.h3 Column Begin (.cb)
00026310The COLUMN-BEGIN control word causes subsequent text to start a new column.
00026320If the COLUMN-BEGIN control word occurs within the last column on a page,
00026330SCRIPT causes a page eject and begins the new column on a new page.
00026340When you use a COLUMN-BEGIN control word, the column in which it occurs remains unbalanced
00026350(fewer lines than the current page length), even if a BALANCE-COLUMNS control word is in effect.
00026360Its format follows:
00026370.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.cb
00026380.bx off;.in 0;.kp off;.se Tcb=&;.ke Break .cb___ .cd Columns
00026390.cm ---------------------------------------------------------------------------------------------------------------------->
00026400.se ab=.cc;.h3 Conditional Column Begin (.cc)
00026410The CONDITIONAL-COLUMN-BEGIN control word operates similarly to the CONDITIONAL-PAGE-EJECT (.cp) control word.
00026420Its format follows:
00026430.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.cc     n
00026440.bx off;.sp;.rm 5;.of 5;n    is the number of lines that must remain between the current line and the first line of the
00026450bottom margin if printing is to continue in the current column.
00026460.kp off;.se Tcc=&;.ke Conditional .cc___ .cd Columns
00026470.sp;.in 0;.rm 0;If there are more than n lines remaining, this control word is ignored.
00026480.cm ---------------------------------------------------------------------------------------------------------------------->
00026490.se ab=.bc;.h3 Balanced Columns (.bc)
00026500To cause all columns on a page to have the same number of lines, you must enter a BALANCE-COLUMNS control word.
00026510When SCRIPT encounters this control word, it processes all accumulated text to that point and formats it so that all columns
00026520occupy the same number of lines.
00026530This allows you to end a section within a page, and resume multiple-column formatting on the same page
00026540after balancing the end of the first section.
00026550Its format follows:
00026560.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.bc     [ON__ | OFF]
00026570.rm 5;.bx off;.sp;.of 5;ON   indicates that you want SCRIPT to balance columns..
00026580ON is the initial setting as well as the default.
00026590.of 5;OFF  indicates that you do not want SCRIPT to balance columns when a page eject or column definition is encountered..
00026600The .BC OFF control line is exactly equivalent to the .NB control word.
00026610.kp off;.se Tbc=&;.ke On Off Break .bc___ .nb .cd Columns
00026620.rm 0;.sp;.in 0;You need not use the BALANCE-COLUMNS control word unless you wish to cancel a previous NO-BALANCED-COLUMNS
00026630control word.
00026640.cm ---------------------------------------------------------------------------------------------------------------------->
00026650.se ab=.nb;.h3 No Balanced Columns (.nb);.ke Break .nb___ .bc .cd Columns;.se Tnb=&
00026660The NO-BALANCED-COLUMNS control word causes the lines printed as the result of a new COLUMN-DEFINITION control word
00026670or page eject to be printed without being balanced.
00026680This is exactly equivalent to .bc off.
00026690The difference in effect between BALANCE-COLUMNS and NO-BALANCED-COLUMNS is shown below in Figure 6.
00026700.cm ---------------------------------------------------------------------------------------------------------------------->
00026710.ss;.nf;.pa;.tb 11 28;.tr < ac - bf > bc # tab;#<---------------->
00026720INPUT:	|aaaaaaa	|
00026730	|.sp	|
00026740	|bbbbbbb	|
00026750	|.sp	|
00026760	|ccccccc	|
00026770	|.sp	|
00026780	|ddddddd	|
00026790	|.sp	|
00026800	|eeeeeee	|
00026810	|.sp	|
00026820	|fffffff	|
00026830	|.sp	|
00026840	|ggggggg	|
00026850	|.sp	|
00026860	|hhhhhhh	|
00026870	|.sp	|
00026880	|iiiiiii	|
00026890	|.sp	|
00026900	|jjjjjjj	|
00026910	|.sp	|
00026920	|kkkkkkk	|
00026930	|.sp	|
00026940	|lllllll	|
00026950	|.sp	|
00026960	|mmmmmmm	|
00026970	|.sp	|
00026980	|nnnnnnn	|
00026990	|.sp	|
00027000	|ooooooo	|
00027010	|.sp	|
00027020	|ppppppp	|
00027030	|.sp	|
00027040	|qqqqqqq	|
00027050	|.sp	|
00027060	|rrrrrrr	|
00027070	|.sp	|
00027080	|sssssss	|
00027090	|.sp	|
00027100	|ttttttt	|
00027110	|.sp	|
00027120	|uuuuuuu	|
00027130	|.sp	|
00027140	|vvvvvvv	|
00027150	|.sp	|
00027160	|wwwwwww	|
00027170	|.sp	|
00027180	|.sp	|
00027190	|xxxxxxx	|
00027200	|.sp	|
00027210	|yyyyyyy	|
00027220	|.sp	|
00027230.se Fig=&SYSCOUNT + 1
00027240          |zzzzzzz         |  Figure &SYSCOUNT  (Part 1 of 2)
00027250.tr < ab > bb;#<---------------->
00027260.pa;.in 0;.tr < ac > bc;FORMATTED OUTPUT:
00027270.sp;.tb 4 14 24 33;Using .cd 3 0 11 22, .cl 7, and .bc (default)
00027280<------------------------------->
00027290|				|
00027300|	aaaaaaa		rrrrrrr	|
00027310|		jjjjjjj		|
00027320|	bbbbbbb		sssssss	|
00027330|		kkkkkkk		|
00027340|	ccccccc		ttttttt	|
00027350|		lllllll		|
00027360|	ddddddd		uuuuuuu	|
00027370|		mmmmmmm		|
00027380|	eeeeeee		vvvvvvv	|
00027390|		nnnnnnn		|
00027400|	fffffff		wwwwwww	|
00027410|		ooooooo		|
00027420|	ggggggg		xxxxxxx	|
00027430|		ppppppp		|
00027440|	hhhhhhh		yyyyyyy	|
00027450|		qqqqqqq		|
00027460|	iiiiiii		zzzzzzz	|
00027470|				|
00027480.tr < ab > bb;<------------------------------->
00027490.sp 2;Using same column definition, .nb, and a .pl of 20
00027500.tr < ac > bc;<------------------------------->
00027510|				|
00027520|	aaaaaaa	mmmmmmm	wwwwwww	|
00027530|				|
00027540|	bbbbbbb	nnnnnnn	xxxxxxx	|
00027550|				|
00027560|	ccccccc	ooooooo	yyyyyyy	|
00027570|				|
00027580|	ddddddd	ppppppp	zzzzzzz	|
00027590|				|
00027600|	eeeeeee	qqqqqqq		|
00027610|				|
00027620|	fffffff	rrrrrrr		|
00027630|				|
00027640|	ggggggg	sssssss		|
00027650|				|
00027660|	hhhhhhh	ttttttt		|
00027670|				|
00027680|	kkkkkkk	uuuuuuu		|
00027690|				|
00027700|	lllllll	vvvvvvv		|
00027710|				|
00027720.tr < ab > bb;<------------------------------->
00027730.h5 Figure &SYSCOUNT  Balance vs Non-balance Multiple Column Output
00027740               (Part 2 of 2)
00027750.ds;.fo;.tr;.h2 Using Multiple Column Facilities
00027760For most users the separate .CD and .CL are cumbersome,
00027770thus it is recommended that SCRIPT set-symbol macros be used instead.
00027780For example, the symbol "&1col" could be assigned to mean "enter 1 column format"
00027790and "2col" mean "enter 2 column format".
00027800.sp;By creating an initialization file, named "$COLUMN" for example, which contains:
00027810.ss;.sp;.in 6;.nf;.li 7;.control-word-separator ?
00027820.page-length 84
00027830.column-definition 2 0 46
00027840.se 1col = '.cd 1;.cl 89;'
00027850.se 2col = '.cd 2;.cl 43;'
00027860.control-word-separator ;
00027870.substitute on
00027880.sp;.in 0;You can create text files using $COLUMN, as follows:
00027890.sp;.in 6;.nf;.li;.im $COLUMN
00027900&1col  (start in 1 column mode)
00027910.li;  ...
00027920&2col  (enter 2 column mode)
00027930.li;  ...
00027940.li;  ...
00027950&2col  (dump out columns
00027960        but stay in 2 column mode)
00027970.li;  ...
00027980  etc.
00027990.ds;.sp;.fo;.in 0;WARNING: The Page-Length (.PL) should never be changed except when in one column mode,
00028000as is true at the very beginning of the SCRIPT file.
00028010.sp;Also, the ADJUST parameter to SCRIPT should only be used with very small explicit nn values
00028020since "standard" double column format takes 89 characters, leaving very little extra space on the line.
00028030.se ab=;.h1 Terminal Input and Output
00028040Using the terminal input/output control words you will find SCRIPT very useful for form letters
00028050with variable information such as name and address, questionaires,
00028060and making one-shot changes to documents. SCRIPT provides you with two control words
00028070that cause it to accept input from a terminal during output processing,
00028080and one that causes it to print information at the terminal that will not be processed as part of your document.
00028090.cm ---------------------------------------------------------------------------------------------------------------------->
00028100.se ab=.rd;.h3 Read Terminal (.rd)
00028110With the READ-TERMINAL control word you can enter text lines from the terminal at the time of formatted output
00028120without their becoming part of your file, and without their being processed by SCRIPT.
00028130Thus, you could precede the date, recipient's name, and recipient's address lines of a "form" letter
00028140with READ-TERMINAL control words.
00028150During output processing of the file containing the form letter, SCRIPT suspends processing when it encounters the
00028160READ-TERMINAL control words and unlocks the keyboard of your terminal so that you can type in the appropriate information.
00028170This information will appear only on the individual page being printed at the terminal.
00028180Its format follows:
00028190.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.rd     n
00028200.bx off;.sp;.rm 5;.of 5;n    is the number of lines to be entered from the terminal.
00028210If you omit a value for n, SCRIPT allows you to enter one line and then resumes processing.
00028220.in 0;.rm 0;.kp off;.se Trd=&;.ke Terminal Break .rd___
00028230.cm ---------------------------------------------------------------------------------------------------------------------->
00028240.se ab=.rv;.h3 Read Variable (.rv)
00028250The READ-VARIABLE control line is just like the SET SYMBOL control line, except that the value of the symbol is read from the terminal.
00028260When the .RV control line is encountered, a line is read from your terminal.
00028270This line is used as the right hand side of the equal sign to set the value of the symbol named in the .RV control line.
00028280Anything that would be allowable as the value in a SET SYMBOL control line is allowable here.
00028290Its format follows:
00028300.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.rv     symbolname
00028310.bx off;.in 0;.rm 0;.kp off;.se Trv=&;.ke Terminal .rv___
00028320.cm ---------------------------------------------------------------------------------------------------------------------->
00028330.se ab=.te;.h3 Terminal Input (.te)
00028340The TERMINAL-INPUT control word differs from the READ-TERMINAL control word in that the lines you enter from the
00028350terminal are passed to SCRIPT and processed by it as though they were part of the file.
00028360Because of this, you may enter SCRIPT control words as well as text.
00028370Thus, you can enter text and determine the format in which it is to be printed, just as though it were originally
00028380part of the file being processed.
00028390Its format follows:
00028400.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.te     [n | ON | OFF]
00028410.bx off;.sp;.rm 5;.of 5;n    is the number of lines from the terminal to be accepted and processed.
00028420If you omit a value for n, SCRIPT allows you to enter one line and then resumes processing,
00028430beginning with the line you entered.
00028440.sp;.of 5;on   specifies that file input is to be suspended, and terminal input to be accepted for processing
00028450until a TERMINAL-INPUT control word specifying off is entered from the terminal.
00028460.sp;.of 5;off  is entered from the terminal when you have completed entering your terminal input.
00028470This causes SCRIPT to resume file input.
00028480.kp off;.se Tte=&;.ke On Off Terminal .te___ .ty
00028490.in 0;.rm 0;.sp;It is generally good practice to precede a TERMINAL-INPUT control word with a TYPE-ON-TERMINAL control word
00028500that prints an appropriate prompting message at the terminal.
00028510This allows you to instruct the terminal user as to what input is expected or what will be the results of defferent input.
00028520(The TYPE-ON-TERMINAL control word is described later in this section).
00028530The TERMINAL-INPUT control word should not be used unless you have specified the FILE or OFFLINE
00028540option of the SCRIPT command.
00028550If you use it when printing at the terminal, the input lines you enter _a_n_d the formatted output corresponding
00028560to them will appear in your output unless you avoid it manually by using separate sheets of paper.
00028570Remember also that the lines you enter from the terminal do not become part of the file.
00028580To make permanent changes to your file you must Edit it in the normal manner.
00028590.sp;Because the TERMINAL-INPUT control word allows you to enter control words,
00028600you can use it to "tailor" the processing of a document.
00028610For example, by entering appropriate REVISION-CODE or CONDITIONAL-SECTION control words
00028620you can actually control which portions of a document are to be printed,
00028630and which revision indicators are to be printed.
00028640You could also, by entering an IMBED control word, cause an entire file to be included for processing.
00028650If you do not receive a prompting message, and do not know if only one line will be accepted,
00028660you can enter a TERMINAL-INPUT control word specifying "on" so that SCRIPT will continue to accept input
00028670from the terminal until you enter a TERMINAL-INPUT control word specifying "off".
00028680.cm ---------------------------------------------------------------------------------------------------------------------->
00028690.se ab=.ty;.h3 Type on Terminal (.ty)
00028700With the TYPE-ON-TERMINAL control word you can include information in your file that will be printed
00028710on the terminal during output processing but will not be part of your document.
00028720Of course if you are printing your document at the terminal,
00028730the line associated with each TYPE-ON-TERMINAL control word will appear interspersed with the rest of your document.
00028740Therefore, you should not use this control word unless you are planning an OFFLINE output,
00028750or unless you intend to prompt or question the person at the terminal.
00028760Its format follows:
00028770.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.ty     text
00028780.bx off;.sp;.rm 5;.of 5;text is the line to be printed at the terminal.
00028790If more than one line is to be printed, simply precede each with another TYPE-ON-TERMINAL control word.
00028800.kp off;.se Tty=&;.ke Terminal .ty___
00028810.in 0;.rm 0;.sp;This control word can be used for informing the person who is printing or editting your document
00028820of tab settings, imbedded files, etc.
00028830When used in conjunction with the TERMINAL-INPUT control word, you effectively develope a "questionaire"
00028840mode of operation.
00028850Remember, you must use the TERMINAL-INPUT control word if you want the lines entered from the terminal
00028860to become part of a printed document.
00028870If all you require is copy at the terminal, you can use the READ-TERMINAL control word.
00028880.cm ---------------------------------------------------------------------------------------------------------------------->
00028890.se ab=.se;.h1 Set Symbol Facilities
00028900The set-symbol facilities of SCRIPT in conjunction with the SUBSTITUTE-SYMBOL control word and the TWOPASS option
00028910of the SCRIPT command provide an extremely powerful method of generating tables of contents,
00028920assigning section numbers, and defining shorthand symbols to substitute for special phrases or control word sequences.
00028930You use the SET-SYMBOL control word to define a symbol and the name of the value to be substituted for it.
00028940You use the SUBSTITUTE-SYMBOL control word to determine whether the current value is substituted for the symbol
00028950in a given portion of your document.
00028960Thus you could define a symbol called chap1 with a value of & (pagenumber).
00028970Later, in your table of contents, you could type in chap1 as the page number associated with the heading of Chapter 1.
00028980SCRIPT would then substitute the actual page number for the symbol.
00028990Many more involved applications of these facilities are possible,
00029000but they are all based on the type of action described above.
00029010Additional details describing the set-symbol facilities are in Appendix &APPB..
00029020.cm ---------------------------------------------------------------------------------------------------------------------->
00029030.h3 Set Symbol (.se)
00029040.ke Twopass;To define a symbol that will be used later in conjunction with the TWOPASS option, you use the SET-SYMBOL control word.
00029050This control word can also be used to define groups (arrays) of symbols,
00029060so that you can cause series of values to be substituted rather than just a single value.
00029070Such arrays are useful in generating indices which have multiple references for each index entry.
00029080Its format follows:
00029090.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.se     symbol-designator = symbol-value
00029100.bx off;.kp off;.se Tse=&;.ke .se___ .su 'Set Symbols'
00029110.sp 2;.cp 7;.in 0;The symbol-designator may be any one of the following forms:
00029120.sp;.in 10;.nf;symbol1
00029130.ss;symbol1()
00029140symbol1(n)
00029150symbol1(&symbol2)
00029160.ds;.sp;.cp 8;.fo;.in 0;where symbol1 is any string of up to 10 non-blank characters excluding the characters:
00029170.ss;.sp;.nf;.tb 11 16 41 46;
00029180	.	period	=	equal sign
00029190	+	plus sign	-	minus sign
00029200	*	asterisk	/	slash
00029210	(	left parenthesis	)	right parenthesis
00029220	'	quote mark	&	ampersand
00029230.ds;.sp;.cp 2;.fo;n must be a non-negative integer and symbol2 must be a defined set-symbol with any integer value.
00029240.sp;.cp 2;The symbol-value may be either a character string or an arithmetic expression, as follows:
00029250.sp;.cp 6;.ce on;.nf;'character string'
00029260.ss;or
00029270string
00029280.ds;.sp;.fo;.ce off;where string does not contain any of the arithmetic operations or the character blank
00029290(e.g., the quote marks may be omitted if the string does not contain any of the special characters).
00029300.sp;.cp 3;An arithmetic expression is of the form:
00029310.sp;.ce;op0 operand1 op1 operand2 op2 operand3 etc.
00029320.sp;.cp 9;where operand1, operand2 etc. are either values, defined set-symbols (&symbol),
00029330or the special SET page number symbol (&); op1, op2, etc. are the arithmetic operators:
00029340.sp;.nf;	+	addition
00029350.ss;          -    subtraction
00029360	*	multiplication
00029370	/	division
00029380.ds;.sp;.fo;op0, if present, may be either a unary + or - sign.
00029390Expressions are evaluated in the conventional adding-machine left-to-right order.
00029400.sp;.in 0;Each symbol-designator may be viewed as a single element of an array.
00029410In particular, symbol1 alone is a short-hand notation for symbol1(0).
00029420The symbol-designator
00029430.sp;          .SET-SYMBOL symbol1() = ...
00029440.sp;is a short-hand notation for the sequence:
00029450.sp;          .SET-SYMBOL symbol1 = &symbol1 + 1
00029460.ss;          .SET-SYMBOL symbol1(&symbol1) = ...
00029470.ds;.sp;which results in stepping one-by-one through the array with symbol1(0) used as an index counter.
00029480This is very useful for creating an array of references.
00029490.sp;The number of unique symbol elements that may be defined is dependant upon the storage size of the user's machine.
00029500.sp;In symbol names, upper case and lower case letters are considered to be different,
00029510thus the symbols: symbol1, Symbol1 and SYMBOL1 are three distinct symbols.
00029520Symbol-names beginning with SYS, such as SYSYEAR, SYSMONTH, etc., are reserved for system use
00029530and should not be used as symbol-designators.
00029540See Appendix &APPB..
00029550The symbol for the current page number, &, remains the same even if the PAGE-NUMBER-SYMBOL control word is used.
00029560.sp;An iterative substition, as described in the SUBSTITUTE-SYMBOL control word,
00029570is automatically performed on all character string-symbol-values.
00029580If the symbol-value is omitted, the symbol's value is set to a null character string (length zero).
00029590.cm ---------------------------------------------------------------------------------------------------------------------->
00029600.se ab=.su;.h3 Substitute Symbol (.su)
00029610With the SUBSTITUTE-SYMBOL control word you cause SCRIPT to scan input lines for symbols defined with a previous
00029620SET-SYMBOL control word, and replace the symbol with its current value.
00029630Successive scans are performed on each input line until no further set-symbol substitution can be found;
00029640then SCRIPT proceeds to the next line.
00029650This control defaults to the "on" condition, as though a .su on had been suppled before the first line of the file.
00029660Its format follows:
00029670.sp 2;.kp on;.in 5;.bx 3 11 62;.li;.su     [n | ON | OFF]
00029680.bx off;.sp;.rm 5;.of 5;n    is the number of succeeding lines to be scanned for set-symbols.
00029690If you omit a value for n, SCRIPT chooses 1.
00029700.sp;.of 5;ON   specifies that all succeeding lines are to be scanned until a subsequent .su off is encountered.
00029710.sp;.of 5;OFF  specifies that scanning of input lines and substitution of values for symbols is to terminate.
00029720.kp off;.se Tsu=&;.ke On Off 'Set Symbols' .su___ .se Substitution
00029730.su off;.sp;.cp 6;.in 0;.rm 0;Set-symbols may appear in any of the following forms:
00029740.sp;.in 10;.nf;&symbol
00029750.ss;&symbol.
00029760&symbol(n)
00029770&symbol(n).
00029780&symbol(*)
00029790&symbol(*).
00029800.ds;.su on;.sp;.in 0;.fo;In each case, the symbol _m_u_s_t be immediately followed by a blank or a period.
00029810When the period (.) is used to terminate the set-symbol, it is removed when the substitution is performed.
00029820The period must be used if the symbol cannot be followed by a blank (e.g., "&symbol1," must be written as "symbol1.,").
00029830.sp;When the representation &symbol is used, the current value of symbol(0) is substituted in the line.
00029840When the representation &symbol(*) is used, the current value of all defined and non-null elements of the array
00029850are substituted except for symbol(0).
00029860When an array substitution is used, elements are ordered by subscript value (from lowest to highest)
00029870and separated by a comma and a blank.
00029880.sp;Multiple scans are performed over the input line until no further set-symbol substitution can be found.
00029890.sp;The substitution of set-symbols may increase or decrease the length of the text line.
00029900If the line's length reduces to zero, it is ignored.
00029910If the line's length expands so that it exceeds 130 characters, an error condition occurs if a single variable substitution
00029920caused the line overflow.
00029930If the overflow occurred as the result of an array substitution, the current line is terminated at the end of
00029940the preceding array element's comma.
00029950The next input line starts with the remaining array elements.
00029960As many lines, of up to 130 characters each, as necessary are generated until the array substitution is completed.
00029970.sp;Substitution only occurs for symbols that are currently defined.
00029980.ke Twopass;The TWOPASS option permits use of symbols defined physically later in the SCRIPT file.
00029990Thus, a Table of Contents can be created using set-symbols for the page numbers,
00030000as shown in "Using Set Symbols".
00030010Under rare circumstances, the substitution of symbols during pass2 which were not defined during pass1
00030020may affect the length of certain pages and disrupt the page numbers assigned during pass1.
00030030.h3 Using Set Symbols
00030040The page numbers in a table of contents or an index change each time a document is revised.
00030050The use of set-symbols can make such changes automatic.
00030060Suppose you are creating a table of contents.
00030070You should first define all the items which will be specified in the table of contents, and then,
00030080associate each with a set-symbol name preceded by an & character. For example:
00030090.sp;.nf;          Chapter 1 . . . . . . &chapter1
00030100.ss;          Chapter 2 . . . . . . &chapter2
00030110          Chapter 3 . . . . . . &chapter3
00030120.ds;.sp;.fo;In order for SCRIPT to substitute the assigned page numbers for the set-symbol names, you must specify substitute-mode.
00030130Put the following control words at the top and bottom of your table of contents, respectively:
00030140.ss;.sp;     .substitute-symbol on
00030150        .
00030160        .
00030170        .
00030180     .substitute-symbol off
00030190.ds;.sp;.cp 6;Now you must assign values to the set-symbols you have defined.
00030200The character &, when used alone, represents the current page number of the formatted output.
00030210For example, at the point in the SCRIPT file where chapter 2 begins, you must include a SET-SYMBOL control word
00030220which assigns to the name &chapter2 the current page number, as:
00030230.ss;.sp;     .page-eject
00030240     .space-lines 2
00030250     CHAPTER 2. THE DOUBLE TASK OF LANGUAGE
00030260     .set-symbol chapter2=&
00030270     .space-lines 2
00030280.ds;.sp;Note that when substitution is desired, you reference "&chapter2",
00030290but in the SET-SYMBOL control statement, you reference "chapter2".
00030300Note also that SCRIPT would regard chapter2 and Chapter2 as different set-symbol names.
00030310.sp;The section of this document titled _E_X_A_M_P_L_E shows some ways in which set symbols can be used in formatting a rep
00030320In the example both the table of contents and the figure numbers are set up with set symbols.
00030330Referto the first half of the example, the unformatted report, to see the SCRIPT control words used.
00030340.sp;Some documents start each paragraph three spaces in from the left margin.
00030350The typist can use the space bar or tab key to accomplish this, or,
00030360with the following control words in effect, could issue &p at the beginning of each new paragraph:
00030370.sp;     .set-symbol p='   '
00030380.ss;     .substitute-symbol on
00030390.ds;.sp;Note that use of &p within the text of a document makes the convention of three spaces easy to change.
00030400Another use of set symbols permits text files to be switched from single to double column format easily.
00030410In a file called COLUMN are:
00030420.ss;.sp;     .control-word-separator ?
00030430     .column-definition 2 0 46
00030440     .line-length 89
00030450     .set-symbol 1col='.cd 1;.cl 89'
00030460     .set-symbol 2col='.cd 2;.cl 43'
00030470     .control-word-separator
00030480.ds;.sp;.cp 5;The main text file, which must not issue any .cd control words, would contain the following for single column mode:
00030490.sp;     .imbed column
00030500.ss;     &1col
00030510.ds;.su off
00030520.in 0;.tt /Ryan SCRIPT/User Guide/Appendix &APP./;.su on
00030530.se APP=&App&SYSCOUNT(2)
00030540.h1 Appendix &APP  Control Word Summary
00030550The table which follows summarizes the Ryan SCRIPT control words and their characteristics.
00030560.nf;.ss;.bx 1 &$ll;.h6 Table &SYSCOUNT(1)  Control Word Summary;.bx off/1 33 &$ll
00030570  Control     Default             Control     Default
00030580  Word Break  Value        Page   Word Break  Value        Page
00030590.bx off/1 7 13 26 33 39 45 58 &$ll
00030600.cd 2 0 32;.tr # tab;.tb 7 13 26;.li on
00030610...#No##&Tlabel
00030620.ap#No##&Tap
00030630.bc#No#On#&Tbc
00030640.bf#No#Off#&Tbf
00030650.bm#Yes#6_,8,4 £#&Tbm
00030660.br#Yes##&Tbr
00030670.bx#Yes#Horizontal#&Tbx
00030680.cb#Yes##&Tcb
00030690.cc#No##&Tcc
00030700.cd#Yes#1,0#&Tcd
00030710.ce#Yes#1#&Tce
00030720.cl#Yes#LL#&Tcl
00030730.cm#No##&Tcm
00030740.co#Yes#On#&Tco
00030750.cp#No##&Tcp
00030760.cs#No##&Tcs
00030770.cw#No#;#&Tcw
00030780.li off;.cs 1 on;.li on;.de#No#Off#&Tde
00030790.li off;.cs 1 off;.li on
00030800.dh#No##&Tdh
00030810.dm#No##&Tdm
00030820.di#Yes#1#&Tdi
00030830.ds#Yes##&Tds
00030840.eb#No#Blank#&Teb
00030850.ef#No##&Tef
00030860.ep#Yes##&Tep
00030870.et#No#Page No.#&Tet
00030880.fi#Yes##&Tfi
00030890.fm#Yes#2_,3,2 £#&Tfm
00030900.fn#No##&Tfn
00030910.fo#Yes#On#&Tfo
00030920.fs#Yes#1#&Tfs
00030930.ft#No##&Tft
00030940.go#No##&Tgo
00030950.he#No##&The
00030960.hm#Yes#2_,3,2 £#&Thm
00030970.hn#No##&Thn
00030980.hs#Yes#1#&Ths
00030990.hw#No##&Thw
00031000.hy#No##&Thy
00031010.h0#Yes##&Th0
00031020.h1#Yes##&Th1
00031030.h2#Yes##&Th2
00031040.h3#Yes##&Th3
00031050.h4#Yes##&Th4
00031060.h5#Yes##&Th5
00031070.h6#Yes##&Th6
00031080.if#No##&Tif
00031090.im#No##&Tim
00031100.in#Yes#0#&Tin
00031110.ix#No##&Tix
00031120.ju#Yes#On#&Tju
00031130.ke#No##&Tke
00031140.kp#Yes##&Tkp
00031150.li#No#1#&Tli
00031160.ll#Yes#60#&Tll
00031170.ln#Yes##&Tln
00031180.ls#Yes#0_,1,0 £#&Tls
00031190.mc#Yes##&Tmc
00031200.ms#No##&Tms
00031210.nb#No##&Tnb
00031220.nc#Yes##&Tnc
00031230.nf#Yes##&Tnf
00031240.nh#No##&Tnh
00031250.nj#Yes##&Tnj
00031260.ob#No#Blank#&Tob
00031270.of#Yes#0#&Tof
00031280.oj#Yes##&Toj
00031290.op#Yes##&Top
00031300.ot#No#Page No.#&Tot
00031310.pa#Yes#+1#&Tpa
00031320.pl#Yes#66__,88,62 £#&Tpl
00031330.pn#No#On Arabic#&Tpn
00031340.pp#Yes##&Tpp
00031350.ps#No#&#&Tps
00031360.li off;.cs 1 off;.li on;.pt#No##&Tpt
00031370.li off;.cs 1 off;.li on
00031380.qq#Yes##&Tqq
00031390.qu#Yes##&Tqu
00031400.rc#No##&Trc
00031410.rd#Yes#1#&Trd
00031420.re#No##&Tre
00031430.ri#Yes#1#&Tri
00031440.rm#Yes#0#&Trm
00031450.rv#No##&Trv
00031460.sa#No##&Tsa
00031470.sc#Yes##&Tsc
00031480.se#No##&Tse
00031490.sk#Yes#1#&Tsk
00031500.sp#Yes#1#&Tsp
00031510.ss#Yes##&Tss
00031520.su#No#1#&Tsu
00031530.tb#Yes#5,10,15...#&Ttb
00031540.tc#Yes##&Ttc
00031550.te#No#1#&Tte
00031560.tm#Yes#6_,8,4 £#&Ttm
00031570.tr#No#As-is#&Ttr
00031580.tt#No#Page No.#&Ttt
00031590.ty#No##&Tty
00031600.uc#No##&Tuc
00031610.ud#No##&Tud
00031620.up#No##&Tup
00031630.us#No##&Tus
00031640.li off;.cd 1 0;.bx off all;.fo
00031650.ke Lpi 'IBM 66/40' Defaults
00031660.of 2;£ Default (initial values for the indicated control words will vary with the LPI option and the intended output device:
00031670.br;6__line/inch_________, 8 line/inch, IBM 66/40 Printer (Remote6).
00031680.ds;.se APP=&App&SYSCOUNT(2)
00031690.im Errors
00031700.sp;.kp on;.of 7;E(01)  An___output_______line_____is___too____long____.
00031710.br;An output line longer than 132 characters was created.
00031720This often is caused by neglecting to reset the format mode resulting in very long lines which exceed 132 effective characters.
00031730Other likely causes of this problem are excessive tabs or too much adjustment.
00031740.cs 1 on;.br;(See:  SCR001, SCR050).
00031750.cs 1 off;.kp off;.ke Tabs Adjust
00031760.sp;.kp on;.of 7;E(02)  A__control________line_____parameter__________should_______be___a__number______.
00031770.br;An non-numeric (e.g. alphabetic) parameter was found for a SCRIPT control word where a numeric parameter is required.
00031780.cs 1 on;.br;(See:  SCR003, SCR028, SCR073).
00031790.cs 1 off;.kp off;.ke Numeric
00031800.sp;.kp on;.of 7;S(03)  There______are____more_____than_____eight______active_______files_____.
00031810.br;SCRIPT files have been imbedded to a depth greater than eight (see .IM, page &imbed.). IMbed nesting must be reduced.
00031820.cs 1 on;.br;(See:  SCR018).
00031830.cs 1 off;.kp off;.br;.ke File .im
00031840.sp;.kp on;.of 7;E(04)  An___invalid________control________word_____was____encountered___________.
00031850.br;A line was read that started with a period, but it could not be recognized as a valid control word.
00031860If a control word is intended, check your spelling and spacing.
00031870If a control word was not___ intended, perhaps the .LIteral control word should be employed.
00031880.cs 1 on;.br;(See:  SCR018).
00031890.cs 1 off;.kp off;.br
00031900.sp;.kp on;.of 7;E(05)  A__control________line_____parameter__________is___missing_______.
00031910.br;A required parameter for this SCRIPT control word was ommitted.
00031920.cs 1 on;.sp;.ss;(See:  SCR015, SCR018, SCR026, SCR030, SCR036, SCR060, SCR150, SCR190, SCR200, SCR333).
00031930.cs 1 off;.kp off;.ds
00031940.sp;.kp on;.of 7;E(06)  Status_______stack______overflowed___________or___underflowed___________.
00031950.br;An attempt was made to stack status to a depth greater than there is memory available (See .SA)
00031960or to restore status more times than it was saved (see .RE).
00031970.cs 1 on;.br;(See:  SCR033).
00031980.cs 1 off;.kp off;.br;.ke .sa .re
00031990.sp;.kp on;.of 7;E(07)  A__negative_________page_____number_______was____computed________.
00032000.br;A negative page number was computed.
00032010This is usually caused by using a negative parameter with the .PA control word incorrectly.
00032020.cs 1 on;.br;(See:  SCR003, SCR015).
00032030.cs 1 off;.kp off;.br;.ke Æ Pagination .pa
00032040.sp;.kp on;.of 7;E(08)  An___invalid________control________line_____parameter__________was____encountered___________.
00032050.br;A parameter specified is not valid for this SCRIPT control word
00032060(e.g. only ON or OFF are valid parameters for certain control words).
00032070.cs 1 on;.sp;.ss;(See:  SCR003, SCR018, SCR020, SCR024, SCR026, SCR028, SCR029, SCR030, SCR033, SCR035, SCR036, SCR060, SCR073, SCR045, SCR150, SCR155, SCR160, SCR200, SCR333).
00032080.cs 1 off;.kp off;.ds
00032090.sp;.kp on;.of 7;W(09)  Excessive__________Underscoring____________.
00032100.br;This can happen during the invocation of a .us or .uc control word.
00032110It means that the resultant (internal) line, which includes automatic backspaces and underscores, has become greater than 255 characters in length.
00032120To solve the problem, just break the line (via Edit) into two or more parts.
00032130.cs 1 on;.br;(See:  SCR003).
00032140.cs 1 off;.kp off;.br;.ke Underscore .us .uc
00032150.sp;.kp on;.of 7;E(10)  Left_____margin_______computes_________to___less_____than_____0_.
00032160.br;The combined execution of .IN, .UN and/or .OF control word would cause the left hand margin to move to the left of column 1.
00032170.cs 1 on;.br;(See:  SCR080).
00032180.cs 1 off;.kp off;.br;.ke Margin .in .of .un
00032190.sp;.kp on;.of 7;E(12)  Heading________Margin_______+__Heading________Space______>__Top____Margin______.
00032200.br;The execution of a .HM, .TM or .HS control word would violate the constraint that the top margin
00032210must be at least as large as the heading margin plus the heading space.
00032220.cs 1 on;.br;(See:  SCR028).
00032230.cs 1 off;.kp off;.br;.ke Margin .tm .hm .hs
00032240.sp;.kp on;.of 7;E(13)  Footing________Margin_______+__Footing________Space______>__Bottom_______Margin______.
00032250.br;The execution of a .FM, .BM or .FS control word would violate the constraint that the bottom margin
00032260must be at least as large as the footing margin plus the footing space.
00032270.cs 1 on;.br;(See:  SCR028).
00032280.cs 1 off;.kp off;.br;.ke .fm .bm .fs
00032290.sp;.kp on;.of 7;W(14)  Excessive__________Backspacing___________.
00032300.br;The typist may have accidentally entered too many backspaces, i.e. as though in an attempt to position to the left of the typewriter's physical left margin.
00032310.cs 1 on;.br;(See:  SCR005).
00032320.cs 1 off;.kp off;.br
00032330.sp;.kp on;.of 7;W(15)  The____.RC____mode_____was____already________ON___or___OFF___.
00032340.br;A .RC n ON was encountered while revision code n was already on,
00032350or a .RC n OFF was encountered while revision code n was already OFF.
00032360.cs 1 on;.br;(See:  SCR026, SCR080).
00032370.cs 1 off;.kp off;.br;.ke Revision .rc
00032380.sp;.kp on;.of 7;E(16)  An___.RC____termination____________was____invalid_______.
00032390.br;An attempt was made to redefine a revision code character while that revision code was active (ON).
00032400.cs 1 on;.br;(See:  SCR026).
00032410.cs 1 off;.kp off;.br;.ke Revision .rc
00032420.sp;.kp on;.of 7;S(18)  File_____system_______error______on___input_____.
00032430.br;An error code was returned from the file system while reading input.
00032440.cs 1 on;.br;(See:  SCRIPT).
00032450.cs 1 off;.kp off;.ke File
00032460.sp;.kp on;.of 7;E(19)  Excessive__________overprinting____________.
00032470.br;Overprinting is used in SCRIPT for underscoring, etc.
00032480The SCRIPT system limits the degree of overprinting to two.
00032490That is to say that a single print position may be printed or typed in by up to 3 non-blank characters.
00032500.cs 1 on;.br;(See:  SCR005, SCR050).
00032510.cs 1 off;.kp off;.br;.ke Underscore Boldface .us .uc .bf
00032520.sp;.kp on;.of 7;S(20)  Correct________form_____is:____"SCRIPT________filename_________[option(s)]"____________.
00032530.br;A filename was not specified in the SCRIPT command.
00032540.cs 1 on;.br;(See SCR001).
00032550.cs 1 off;.kp off;.br
00032560.sp;.kp on;.of 7;W(23)  Your_____file_____is___not____numbered________;__NONUM______is___assumed_______.
00032570.br;Apparently, your SCRIPT file was created without benefit of the TSO line numbering conventions.
00032580SCRIPT will assume that the remainder of your file does not contain such.
00032590This can occur legitimately when numbered and unnumbered files are mixed via imbed.
00032600.cs 1 on;.br;(See:  SCRIPT).
00032610.cs 1 off;.kp off;.br;.ke Num .im TSO File Nonum
00032620.sp;.kp on;.of 7;S(24)  Invalid________SCRIPT_______Command________option______.
00032630.br;One of the options to the SCRIPT command is not valid.
00032640.cs 1 on;.br;(See:  SCR001).
00032650.cs 1 off;.kp off;.br
00032660.sp;.kp on;.of 7;T(26)  A__system_______error______has____occurred________.
00032670.br;This message indicates a system error.
00032680The appropriate personnel should be informed of the circumstances.
00032690Usually this condition can be bypassed by diagnosing the cause of the error and changing the SCRIPT file accordingly.
00032700.cs 1 on;.br;(See:  SCRIPT, SCR058).
00032710.cs 1 off;.kp off;.br
00032720.sp;.kp on;.of 7;E(27)  Equal______sign_____(=)____not____found______in___.SET____.
00032730.br;An equal sign is required in the operand field of the SET-SYMBOL control line.
00032740.cs 1 on;.br;(See:  SCR040).
00032750.cs 1 off;.kp off;.br;.ke 'Set Symbols' .se
00032760.sp;.kp on;.of 7;E(28)  Invalid________syntax_______on___left_____of___equal______sign_____of___.SET____.
00032770.br;The symbol-designator of the SET-SYMBOL control line is not in one of the four legal forms.
00032780.cs 1 on;.br;(See:  SCR040).
00032790.cs 1 off;.kp off;.br;.ke 'Set Symbols' .se
00032800.sp;.kp on;.of 7;E(29)  Invalid________syntax_______on___right______of___equal______sign_____of___.SET____.
00032810.br;The symbol-value of the SET-SYMBOL control line is not in one of the legal forms.
00032820.cs 1 on;.br;(See SCR040).
00032830.cs 1 off;.kp off;.br;.ke 'Set Symbols' .se
00032840.sp;.kp on;.of 7;E(31)  Undefined__________symbol_______used_____as___index______of___.SET_____on___left____.
00032850.br;A symbol-designator of the form symbol1(&symbol2) was used in a SET-SYMBOL control line
00032860where symbol2 was not a previously defined set-symbol.
00032870.cs 1 on;.br;(See:  SCR040).
00032880.cs 1 off;.kp off;.br;.ke 'Set Symbols' .se
00032890.sp;.kp on;.of 7;E(32)  Non-decimal____________index______on___left_____of___.SET_____symbol______.
00032900.br;A symbol-designator of the form symbol1(n) was used in a SET-SYMBOL coltrol line
00032910where n was not a valid decimal number.
00032920.cs 1 on;.br;(See:  SCR040).
00032930.cs 1 off;.kp off;.br;.ke 'Set Symbols' .se
00032940.sp;.kp on;.of 7;E(33)  Non-decimal____________in___expression___________on___right______of___.SET____.
00032950.br;The symbol-value of a SET-SYMBOL control line is an arithmetic expression which has a term
00032960which is neither a set symbol (e.g. &symbol) nor a valid decimal number.
00032970.cs 1 on;.br;(See: SCR040).
00032980.cs 1 off;.kp off;.br;.ke 'Set Symbols' .se
00032990.sp;.kp on;.of 7;E(34)  Undefined__________symbol_______in___expression___________on___right______of___.SET____.
00033000.br;The symbol-value of a SET-SYMBOL control line is an arithmetic expression which has a term in the form of a set symbol,
00033010e.g. &SYMBOL, where SYMBOL is not a previously defined set symbol.
00033020.cs 1 on;.br;(See:  SCR040).
00033030.cs 1 off;.kp off;.br;.ke 'Set Symbols' .se
00033040.sp;.kp on;.of 7;E(35)  A__token______longer_______than_____66___characters___________found______in___.SET____.
00033050.br;A string of more than 66 characters has been found in a SET-SYMBOL control line
00033060where there are no break characters (e.g. blank, +, -, etc.) within the 42 character string.
00033070This cannot be a legal control line.
00033080.cs 1 on;.br;(See:  SCR042).
00033090.cs 1 off;.kp off;.br;.ke 'Set Symbols' .se
00033100.sp;.kp on;.of 7;E(36)  Macro______to___be___cancelled__________doesn't________exist_____.
00033110.br;A .DM name OFF was given, but no macro by that name could be found in memory.
00033120Check the spelling of the name, and the sequence of other .dm control words.
00033130.cs 1 on;.br;(See:  SCR022).
00033140.cs 1 off;.kp off;.br;.ke Macro .dm
00033150.sp;.kp on;.of 7;S(37)  Infinit_______e__loop_____occurred_________due____to___recursive__________.SET____.
00033160.br;While processing an input line under the specification of a SUBSTITUTE-SYMBOL control word,
00033170each time a set-symbol was substituted its value contained another set-symbol and never terminated.
00033180.cs 1 on;.br;(See:  SCR041).
00033190.cs 1 off;.kp off;.br;.ke 'Set Symbols' .se
00033200.sp;.kp on;.of 7;E(38)  .SET_____symbol_______substitution_____________causes_______line_____to___exceed_______max___.
00033210.br;While processing an input line under the specification of a SUBSTITUTE-SYMBOL control word,
00033220the substitution of a set-symbol causes the input line to exceed 256 characters.
00033230.cs 1 on;.br;(See:  SCR041).
00033240.cs 1 off;.kp off;.br;.ke Substitution .se
00033250.sp;.kp on;.of 7;E(40)  File_____specified__________on___IMbed______or___APpend_______not____found_____.
00033260.br;The file named in an IMBED or APPEND control word was not found.
00033270Check the filename and insure that it is correct and that the file is available under your userid.
00033280.cs 1 on;.br;(See:  SCR015, SCR018, SCR041).
00033290.cs 1 off;.kp off;.br;.ke File .ap .im
00033300.sp;.kp on;.of 7;E(41)  A__numeric________parameter__________is___outside________its____valid______range_____.
00033310.br;A parameter specified for a LINE-LENGTH or similar control word was erroneously specified as too large.
00033320Check the control word and respecify the parameters in error.
00033330.cs 1 on;.sp;.ss;(See:  SCR003, SCR020, SCR024, SCR026, SCR028, SCR036, SCR040, SCR060, SCR073, SCR074).
00033340.cs 1 off;.kp off;.ds
00033350.sp;.kp on;.of 7;E(42)  An___incorrect__________number_______of___parameters___________was____specified_________.
00033360.br;An incorrect number of parameters has been specified,
00033370such as specifying more than one value for a PAGE-LENGTH or INDENT control word.
00033380Check the control word and respecify it omitting the incorrect parameters.
00033390.cs 1 on;.br;(See:  SCR___).
00033400.cs 1 off;.kp off;.br
00033410.sp;.kp on;.of 7;W(43)  The____box____is___not____in___effect______.
00033420.br;A .BX control word was invoked in such a way as to require the previous existence of a box.
00033430A .BX without operands or with only the OFF requires at least one, non-specific box.
00033440A .BX with both OFF and position numbers requires the presence of a particular box.
00033450In any case, this error condition was raised because the box could not be found.
00033460If SCRIPT is allowed to continue, this control word be ignored.
00033470.cs 1 on;.br;(See:  SCR021).
00033480.cs 1 off;.kp off;.br;.ke Box .bx
00033490.sp;.kp on;.of 7;S(44)  Insufficient_____________buffer_______space______for____multiple_________columns_______.
00033500.br;Insufficient buffer space exists to format multiple column output.
00033510Reduce the PAGE-LENGTH size or increase the top or bottom margins and reissue the SCRIPT command.
00033520.cs 1 on;.br;(See:  SCR035).
00033530.cs 1 off;.kp off;.br;.ke Columns .cd
00033540.sp;.kp on;.of 7;E(45)  FRACtional___________pagination___________was____already________on__.
00033550.br;An attempt was made to start fractional pagination (.PN FRAC) when it was already in effect.
00033560.cs 1 on;.br;(See:  SCR003).
00033570.cs 1 off;.kp off;.br;.ke Pagination Frac Norm .pn
00033580.sp;.kp on;.of 7;W(46)  KEEP_____terminated___________by___disallowed___________control________word____.
00033590.br;Any control word that changes the number of lines left in the current column is not allowed while a keep is in process.
00033600See the .KEEP control word for a list of disallowed control words.
00033610This warning does not terminate processing; the keep (or footnote or headnote) is ended
00033620as though the appropriate OFF control word had been processed, and then the disallowed control word is executed.
00033630Input lines after the disallowed control word are not counted as part of the keep (or footnote or headnote).
00033640.cs 1 on;.br;(See:  SCR003).
00033650.cs 1 off;.kp off;.br;.ke Keep .kp
00033660.sp;.kp on;.of 7;W(47)  KEEP_____terminated___________due____to___too____many_____lines_____.
00033670.br;The maximum number of lines in a keep is the same as the number of text lines that can fit in a current column.
00033680In general, this number is the page length minus the top margin minus the bottom margin.
00033690The maximum number of lines in a footnote or a headnote is 10.
00033700If the maximum is exceeded, SCRIPT continues processing after ending the keep, footnote or headnote,
00033710but input lines after this are not part of the keep.
00033720Note that the maximum that has been exceeded is the number of formatted output lines, not the number of input lines.
00033730.cs 1 on;.br;(See SCR080).
00033740.cs 1 off;.kp off;.br;.ke Keep .kp .fn .hn
00033750.sp;.kp on;.of 7;S(48)  Label______not____found_____.
00033760.br;A .GOTO control word was encountered that refers to a nonexistant label.
00033770.cs 1 on;.br;(See:  SCR160).
00033780.cs 1 off;.kp off;.br;.ke Label .go ...Set-label
00033790.sp;.kp on;.of 7;E(49)  Set____symbol_______is___too____long____.
00033800.br;Set symbol names may not exceed 10 characters in length.
00033810If SCRIPT is allowed to continue, it will attempt to fix up this situation by truncating the name.
00033820.cs 1 on;.br;(See:  SCR040).
00033830.cs 1 off;.kp off;.br;.ke 'Set Symbols' .se
00033840.sp;.kp on;.of 7;E(51)  Duplicate__________label______found_____.
00033850.br;A .SET LABEL (...) control word was encountered that specifies a label name that has already been set for this file.
00033860.cs 1 on;.br;(See:  SCR155).
00033870.cs 1 off;.kp off;.br;.ke Label ...Set-label
00033880.sp;.kp on;.of 7;W(52)  Columns________are____not____defined_______.
00033890.br;A control word was encountered that expected columns to have been previously defined.
00033900You might check your sequence of .CD, .SC and .MC control words preceding this (offending) control line.
00033910.cs 1 on;.br;(See: SCR035).
00033920.cs 1 off;.kp off;.br;.ke Columns .cd .sc .mc
00033930.sp;.kp on;.of 7;W(53)  Labels_______not____allowed________during_______terminal_________input_____.
00033940.br;A .SET LABEL or .GOTO was entered from the terminal during .TERMINAL INPUT mode.
00033950In this mode, the terminal keyboard is a simulated input file, except that it is meaningless to assign labels to the
00033960resulting input lines.
00033970.cs 1 on;.br;(See:  SCR003).
00033980.cs 1 off;.kp off;.br;.ke Label Terminal 'Go To' .go ...Set-label .te
00033990.sp;.kp on;.of 7;E(54)  Invalid________keyword________for____condition__________on___.IF___.
00034000.br;An .IF control word was encountered and the condition test was not recognized.
00034010Conditions such as "eq" and "<=" are recognized.
00034020This condition can happen if the first comparand on the .IF control word is a null symbol
00034030because the tokens are then shifted over. See the .IF control word notes.
00034040.cs 1 on;.br;(See:  SCR150).
00034050.cs 1 off;.kp off;.br;.ke .if
00034060.sp;.kp on;.of 7;T(55)  A__.GOTO______cannot_______be___executed_________within_______a__Delayed________Imbed_____.
00034070.br;Due to program internals, the delay imbed and go-to would conflict.
00034080.cs 1 on;.br;(See:  SCR160).
00034090.cs 1 off;.kp off;.br;.ke 'Go To' .go .di
00034100.sp;.kp on;.of 7;E(59)  Title______is___too____long_____for____current________line_____length______.
00034110.br;Each title line has a left justified part, a centered part, and a right justified part.
00034120This error indicates that one of the parts is too long to fit within the current line length.
00034130You should either redefine the title or increase the line length.
00034140.cs 1 on;.br;(See:  SCR072).
00034150.cs 1 off;.kp off;.br;.ke Title .tt .bt .ll
00034160.sp;.kp on;.of 7;W(60)  A__title______segment________exceeds________80___characters__________.
00034170.br;The internal storage space for each title segment is limited to 80 characters.
00034180.cs 1 on;.br;(See:  SCR020).
00034190.cs 1 off;.kp off;.br;.ke Title .tt .bt
00034200.sp;.kp on;.of 7;W(61)  Title______segments_________overlap_______.
00034210.br;This warning is issued when any portion of a title attempts to overlap another.
00034220The diagnostic will point at the line of narrative or control line which resulted in a page eject,
00034230which in turn attempted to create the inconsistent titling.
00034240The user should look back to the preceding title definition (.tt, .bt etc.) control lines.
00034250.cs 1 on;.br;(See:  SCR072).
00034260.cs 1 off;.kp off;.br;.ke Title .tt .bt
00034270.se APP=&App&SYSCOUNT(2)
00034280.of 0;.h1 Appendix &APP  Compatibility with Other Versions
00034290Ryan SCRIPT was intended to be "upwards compatible", with relation to a series of text processing systems:
00034300.sp;.in 5;SCRIPT  (CP67/CMS)
00034310.ss;FORMAT  (OS/TSO)
00034320.br;SCRIPT  (VM/CMS,  versions 1,2 and 3)
00034330.ds;.in 0;.sp 2;The meaning of this euphemistic sounding phrase is merely that any file processable under one of these packages
00034340will also process properly under Ryan SCRIPT. This is not___ to say that all features that are available
00034350in Ryan SCRIPT are also available in the others.
00034360In fact, Ryan SCRIPT is intended as a "proper superset" of each of the above.
00034370Some of the facilities available only to Ryan SCRIPT are:
00034380.sp
00034390     ®  complete, controlled hyphenation
00034400     ®  numeric set symbols, with fractions
00034410     ®  line density control
00034420     ®  keyword indexing
00034430     ®  unlimited arguments to .imbed
00034440     ®  up to 20 columns
00034450     ®  unlimited, nested boxes
00034460     ®  selective viewing
00034470.br;.tr * *
00034480.se APP=&App&SYSCOUNT(2)
00034490.se APPB=&APP
00034500.h1 Appendix &APP  Reserved Set Symbols
00034510.ke 'Set Symbols' Substitution .se .su SYSYEAR SYSMONTH SYSDAYOFM SYSDAYOFW SYSHOUR SYSMINUTE SYSSECOND SYSVAR SYSLINE
00034520Additional Information Regarding SET-SYMBOL and SUBSTITUTE-SYMBOL Control Words.
00034530There are several special reserved symbols that are automatically initialized, each time SCRIPT is used,
00034540to the current values for: year (SYSYEAR), month (SYSMONTH), day of year (SYSDAYOFY), day of month (SYSDAYOFM),
00034550day of week (SYSDAYOFW), hour of day (SYSHOUR), minute of hour (SYSMINUTE), and seconds of minute (SYSSECOND).
00034560These symbols are tabulated below:
00034570.ss;.sp 2;.bx 1 &$ll;.h6 Table &SYSCOUNT(1)  Reserved Set Symbols;.bx
00034580.in 2;.rm 2;.tr # TAB;.tb 14 33;Symbol#Meaning#Example of value
00034590.bx;.nj;.of 30;SYSYEAR#year#If this is 1971, SYSYEAR has the value _7_1.
00034600.of 30;SYSMONTH#month#If this is Feb. 8, 1971, SYSMONTH has the value _0_2.
00034610.of 30;SYSDAYOFY#day of year#If this is Feb. 8, 1971 (39th day of the year), SYSDAYOFY has the value _0_3_9.
00034620.of 30;SYSDAYOFM#day of month#If this is Feb. 8, 1971, SYSDAYOFM has the value _0_8.
00034630.of 30;SYSDAYOFW#day of week#If this is Monday, Feb. 8, 1971, SYSDAYOFW has the value 2_ (Sunday is considered the 1st__ day of the week).
00034640.of 30;SYSHOUR#hour of day#If it is 7:30 P.M., SYSHOUR has the value _1_9 (24 hour clock, 7:30 A.M. would have the value 07
00034650.of 30;SYSMINUTE#minute of hour#If it is 7:30 P.M., SYSMINUTE has the value _3_0.
00034660.of 30;SYSSECOND#seconds of minute#If it is 7:30:15, SYSSECOND has the value _1_5.
00034670.br;.rc 1 on;.of 30;SYSVAR#user defined#Optionally supplied in the invoking SCRIPT Command.
00034680.ke SYSDATE;.of 30;SYSDATE#date of run#A convenient form of the date: mm/dd/yy.
00034690.ke SYSCOUNT;.of 30;SYSCOUNT#running counter#This equals 1 on the first reference, 2 on the second, etc.
00034700To use multiple counters, it may be subscripted (1) up to (10); no subscript corresponds to (0).
00034710.of 30;SYSLINE#line number#This equals the current formatted output line number (caution: since a break is not automatic, it may lag).
00034720.in 0;.rm 0;.bx off;.ds;.sp 2;.rc 1 off;.ju;.of 0;The table above only indicates the initial values of the symbols.
00034730Although they may be changed and used exactly as regular set symbols, it is not recommended.
00034740.sp;.cp 9;Each symbol has a fixed size value field.
00034750If its current value is less than the field size, leading zeroes are provided (e.g.,
00034760SYSDAYOFY was 039 above, not just 39).
00034770The leading zeroes can be easily removed by a SCRIPT control word such as:
00034780.su off
00034790.sp;     .SE SYSDAYOFY = &SYSDAYOFY
00034800.sp;since leading zeroes are automatically deleted after an arithmetic evaluation.
00034810.sp;The numeric values of the special symbols can be converted to other forms as shown in the following example:
00034820.ss;.sp;.in 5;.nf;.li 4;.se m01=January
00034830...
00034840.se m12=December
00034850.se alphamonth = &m&SYSMONTH
00034860This is now &alphamonth already.
00034870.ds;.su on;.in 0;.sp;.fo;The above sequence would result in the line: "This is now February already." if the current date was Feb. 8, 1971.
00034880The beginning of the sequence defines a sequence of set-symbols, m01, m02, ..., m12,
00034890whose values correspond to the alphabetic representation of the 12 months.
00034900The expression "&m&SYSMONTH" involves a double substitution; first it becomes "&m02" and then "February".
00034910A very similar technique can be used to convert the days of the week to their alphabetic equivalents
00034920(e.g., Monday instead of 2).
00034930.sp;There is another group of symbols containing the SCRIPT internal values.
00034940The actual two character code may be expressed in upper or lower case.
00034950.ss;.sp;.kp on;.bx 5 62;.h6 Table &SYSCOUNT(1)  Symbols for SCRIPT Control Values
00034960.bx off / 5 33 62;.cd 2 6 33;.nf;.su off
00034970&$BM  Bottom Margin
00034980&$CL  Column Length
00034990&$FM  Footing Margin
00035000&$FS  Footing Space
00035010&$HM  Heading Margin
00035020&$HS  Heading Space
00035030&$IN  Indent
00035040&$LC  Lines remaining
00035050&$LL  Line Length
00035060&$OF  Offset
00035070&$PL  Page Length
00035080&$RM  Right Margin
00035090&$TM  Top Margin
00035100.fo;.su on;.cd 1 0;.bx off all;.kp off
00035110.ke .bm .cl .fm .fs .hm .hs .in .lc .ll .of .pl .rm .tm
00035120.ds;.se APP=&App&SYSCOUNT(2)
00035130.h1 Appendix &APP  Inclusion of Non-Textual Sections
00035140It is not uncommon that a document would contain both textual and non-textual materials.
00035150Non-textual materials are those that cannot be stored in a file nor processed by SCRIPT.
00035160Examples are: drawings, photographs, fold-outs, elaborate charts, classified sections etc.
00035170These materials are often grouped together and called "Graphics".
00035180Treatment varies with requirement and "taste". Some suggestions follow:
00035190.sp;Suppose your document is to consist of several major parts, and that one of the parts has been classified to a point prohibiting computer tele-processing.
00035200The classified part, even if it is textual, must be treated separately as though it were "graphic".
00035210If each part is to be represented in a separate file or to be page numbered independantly (from 1), then no problem exists.
00035220But within a total file, with contiguous page numbering, an appropriately valued .pa +n control line must be entered at the point where the classified part is to be subsequently placed.
00035230.sp;The greatest incidence of graphic inclusion involves short sections, from partial pages to a few pages.
00035240The tactic always requires a preliminary size estimate of the piece and some decision as to where and how it should be located.
00035250.ke .cp .di;Since it is not usually accepted to have a page break within such a piece, either a .cp or a .di must be used to avoid it.
00035260The .cp approach dictates that the piece is to be located immediately with the possible exception of a page eject if sufficient space does not remain on the current page.
00035270The .di approach means that the piece is to be inserted immediately following the current page;
00035280this is typical for a fold-out or full page illustration.
00035290Of course, either of the above will be followed by any necessary spacing, labelling etc.
00035300This is also a convenient place to insert Graphic Arts log numbers, to be subsequently overlaid
00035310by the so-retrieved art piece.
00035320Desire to squeeze a picture into a partial page, left-to-right,
00035330can be accommodated by .in, .of, .kp and/or .ll control lines.
00035340.sp;A document containing graphics is often augmented by one or more additional tables of contents
00035350(figures, tables, plates, exhibits etc.).
00035360.ke .h6;This is usually accomplished through use of the higher level topic heads.
00035370For instance, all figures could be tagged by appropriate .h6 control lines, then following the normal
00035380table of contents, the user could disable the contents entries for levels 0-3, enable level 6 and insert .tc again.
00035390.ss;.sp
00035400     .tc Table of Contents
00035410     .dh 0 ntc 1 ntc 2 ntc 3 ntc 5 tc
00035420     .tc Table of Figures
00035430     .
00035440     .
00035450     .h5 Figure 1
00035460.ds;.se APP=&App&SYSCOUNT(2)
00035470.h1 Appendix &APP  Information Retrieval Techniques
00035480Ryan SCRIPT offers several methods by which the user may selectively view desired sections of a document.
00035490This is, of course, in addition to the ordinary dataset and member access by name through TSO.
00035500.h3 Page Selection
00035510If the user knows the actual, desired page numbers within the completed document,
00035520one or more ranges of pages can be requested via the PAGE option to the SCRIPT Command.
00035530These page numbers are usually the "external" type (as seen) but can be "internal".
00035540Subsequent selection is available through PAGE(PROMPT).
00035550.h3 Topic Selection
00035560If the SCRIPT file has been constructed using topic heads,
00035570the TOPIC option can be supplied with the SCRIPT Command to retrieve one or more of the so described sections.
00035580.h3 Conditional Sections
00035590.ke .cs;Through use of conditional sections (.cs),
00035600selected portions throughout a document can be defined as "belonging" to numbered conditional sections.
00035610These may overlap freely and are independant of topic heads.
00035620Subsequently, the output document can be formatted and printed by including and/or ignoring any combination
00035630of these sections.
00035640.ke .rv SYSVAR;This can be conveniently automated by use of the SYSVAR option or the .rv control line.
00035650.im TSO
00035660.se APP=&App&SYSCOUNT(2)
00035670.ss;.cs 1 on;.h1 Appendix &APP  System Documentation
00035680.dh 3 spaf 1
00035690The following paragraphs and tables are intended to document the inner workings of the Ryan SCRIPT computer system.
00035700.h3 Subprograms
00035710All routines are coded in legitimate PL/I.
00035720.br;.kp on;.h4 SCRIPT
00035730This is the overall main-line program.
00035740SCR001 is called to initialize the entire process.
00035750A per-pass loop is caused.
00035760SCR002 and SCR073 are called to initialize the current pass.
00035770A loop per input record is caused.
00035780A loop per sub-record (command etc.) is caused.
00035790Either SCR003 or SCR005 is called to process control words or text, respectively.
00035800Line number verification is achieved in this routine.
00035810UNFORMAT reporting is done here also.
00035820At the end of the pass loop, SCR098 is called.
00035830.kp off;.br;.ke Nonum Twopass UNFORMAT
00035840.kp on;.h4 CDATE
00035850This routine returns the date of the most recent compile and link.
00035860This is used to document the program's release date.
00035870.kp off;.br;.ke Release
00035880.kp on;.h4 SCR001
00035890This routine initializes the entire SCRIPT run.
00035900The provided options are parsed and analyzed. If requested, PAGE(PROMPT) is processed. Then appropriate indicators are passed via OPTION to the program.
00035910Some of the reserved set symbols (SYSDATE etc.) are initialized here.
00035920.of 8;SCR001A initializes all overall external variables and switches.
00035930.of 8;SCR001E examines a single keyword and process each possible option.
00035940.of 8;SCR001K identifies possibly abbreviated option keywords (in the TSO truncation sense).
00035950.of 8;SCR001P prompts for, then extracts page request(s) as asked for in the PAGE(PROMPT) option.
00035960.of 8;SCR001R establishes those reserved set symbol values that will remain constant throughout the job.
00035970.of 8;SCR001S starts the SCRIPT job with the appropriate initialization activity.
00035980.of 0;.kp off;.br
00035990.ke Defaults Page Prompt SYSDATE
00036000.kp on;.h4 SCR002
00036010This routine carries out any initialization that is pass dependant.
00036020The page adjustment prompt is done in this routine, at the beginning of the last pass.
00036030.of 12;SCR002_3LPI sets up for LPI(3) cases.
00036040.of 12;SCR002_4LPI sets up for LPI(4) cases.
00036050.of 12;SCR002_6LPI sets up for LPI(6) cases.
00036060.of 12;SCR002_8LPI sets up for LPI(8) cases.
00036070.of 0;.kp off;.br;.ke Pass Defaults Lpi
00036080.kp on;.h4 SCR003
00036090This routine parses out the control word and parameters, identifies it and acts accordingly.
00036100This routine must be recursive, since it can precipitate a page eject, which might trigger a delay-imbed, which in turn would cause invocation of SCR003 and/or SCR005.
00036110.of 13;MACRO_SEARCH searches the macro library, then processes the macro found by calls to SCR003 and SCR005 in a loop.
00036120.of 13;SCR003A      analyzes the control word, extracting the command and the operands.
00036130.of 13;SCR003B-Z    processes each of the control words (separated alphabeticly).
00036140.of 0;.kp off;.br;.ke .di Macro .ms
00036150.kp on;.h4 SCR005
00036160This routine treats the textual or narrative input by concatenating it onto the end of BUFFER.
00036170Decrement of the CE, LI, OJ and RI counters occurs here.
00036180Flushing of the buffer is triggered here by any break (explicit or implicit), or partial flusihing when BUFFER approaches "full".
00036190This routine must be recursive, since is can precipitate a page eject, which might trigger a delay-imbed, which in turn would cause invocation of SCR003 and/or SCR005.
00036200.of 9;SCR005CF is an internal procedure which effects a "canonical" form representation of backspaces and overprints.
00036210This is currently limited to two overstrikes per position.
00036220.of 0;.kp off;.br;.ke Text
00036230.kp on;.h4 SCR007
00036240This routine converts the long spelling forms of the control words to the two letter abbreviations.
00036250.of 8;SCR007F processes the control words beginning with A-F.
00036260.of 8;SCR007O processes the control words beginning with G-O.
00036270.of 8;SCR007Z processes the control words beginning with P-Z.
00036280.of 8;SCR007K identifies possible abbreviations of each long spelled control word.
00036290The TSO convention of abbreviation-by-truncation is employed.
00036300.of 0;.kp off;.br;.ke Abbreviations
00036310.kp on;.h4 SCR013
00036320This routine handles end-of-file conditions.
00036330These can be either due to actual end-of-file encountered in SCRIPT and communicated through the argument COMMANDED = '0'B; or it can be explicitly commanded by a .ef control word (COMMANDED = '1'B).
00036340File imbed pop-up is also handled, if appropriate.
00036350.kp off;.br;.ke File .ef
00036360.kp on;.h4 SCR015
00036370This routine handles the .ap control line.
00036380The optional arguments are also parsed and processed.
00036390.kp off;.br;.ke File .ap
00036400.kp on;.h4 SCR018
00036410This routine handles the .im control line.
00036420The optional arguments are also parsed and processed.
00036430IMLEVEL is incremented, and the current file position is recorded in IMNAME and IMLINE.
00036440.of 8;SCR018A parses and analyzes the imbed control line.
00036450.of 8;SCR018B carries out the specified imbedding activity.
00036460.of 0;.kp off;.br;.ke File Imbed .im
00036470.kp on;.h4 SCR020
00036480This routine handles all entitling control lines.
00036490The bottom titles enter through a separate entry SCR020B.
00036500.kp off;.br;.ke Title .tt .bt .et .ot .eb .ob .he .ft
00036510.kp on;.h4 SCR021
00036520This implements the box (.bx) control word.
00036530.of 13;BOX_ANALYSIS analyzes the .BX control word.
00036540.of 13;BOX_DEFINE   defines and initializes a specified box.
00036550.of 13;BOX_OFF      concludes a specified box.
00036560.of 13;BOX_ONLY     implements the .BX control word without operands by inserting a horizontal line with intersections.
00036570.of 13;BOX_RULE     produces the actual horizontal rules, complete with up or down starting corner pairs.
00036580.of 13;EXPAND       Expands a single effective position of the horizontal rule to a corner-backspace-corner character triple.
00036590.of 13;REDUNDANCY   determines whether any one box intersection corresponds with any other.
00036600.of 0;.kp off;.br;.ke Box .bx
00036610.kp on;.h4 SCR022
00036620This implements the define-macro (.dm) control word.
00036630The name of the macro is first parsed out, then the separator character (first non-blank followinf the name).
00036640A loop is performed, one cycle for each part of the macro (as delimmited by the separator).
00036650The macro's existance is "remembered" in MACRO, a list item headed by MACHEAD;
00036660the macro's sub-parts are recorded as items, MACROX, on a side chain headed by MACRO.LINK(2).
00036670The MACRO list is recorded at the "top" of any existing chain, causing the intended LIFO effect.
00036680.of 8;SCR022A allocates and preserves a newly defined macro sequence.
00036690.of 8;SCR022D deletes a macro from memory, implementing the OFF option.
00036700.of 0;.kp off;.ke Macro .dm
00036710.kp on;.h4 SCR023
00036720This implements the hyphenate-word (.hw) and hyphenate (.hy) control words.
00036730The argument, OP, indicates the appropriate action ('HW' or 'HY').
00036740.of 9;SCR023HW parses out one or more words whose hyphenation is to be controlled,
00036750passing the whole word and any indicated hyphenation locations via an externally based list, HY, to SCR055H for the appropriate activity.
00036760.of 9;SCR023HY analyzes the .hy control word, passing the on/off status to SCR055A,
00036770and the threshold parameters to SCR055H, both via HYP.
00036780.of 0;.kp off;.br;.ke Hyphen .hw .hy
00036790.kp on;.h4 SCR024
00036800This routine handles the .tb control line, establishing tab positions and fill characters.
00036810Communication is through CONTROL.TB to SCR224, which uses the information.
00036820.kp off;.br;.ke Tabs .tb
00036830.kp on;.h4 SCR026
00036840This routine deals with the .rc control line.
00036850The intent is parsed out and the resultant revision code state is communicated via RC, CONTROL.RC and RCONOFF to SCR080 which acts on it.
00036860If a topic head is active and this .rc turns the state "on", the revision code is added into
00036870the current (most recently processed) head level information being preserved (SCR074 -> ELEMENT.RC -> SCR075).
00036880.kp off;.br;.ke Revision .rc
00036890.kp on;.h4 SCR028
00036900This routine parses out a control parameter and assigns it to the page formatting control value which had been supplied as an argument (PARTICULAR).
00036910In addition, the [Æ] option is detected and applied.
00036920Some diagnoses are performed in relation to the legitimacy of the resultant page format.
00036930This routine is called by SCR003, in support of .BM, .CL, .FM, .FS, .HM, .HS, .IN, .LL, .OF, .PL, .RM, .TM and .UN.
00036940.kp off;.br;.ke ^ Defaults .bm .cl .fm .fs .hm .hs .in .ll .of .pl .rm .tm .un
00036950.kp on;.h4 SCR029
00036960This routine handles the [ON | OFF | n] parameter combination.
00036970A returned value of -1 indicates that the condition is "on".
00036980.kp off;.ke On Off Defaults
00036990.kp on;.h4 SCR030
00037000This routine handles the conditional control lines, .cp and .cc.
00037010In the case of conditional page eject the argument supplied is the SCR072 entry point, otherwise SCR035.
00037020.kp off;.br;.ke Conditional Pagination .cp .cc
00037030.kp on;.h4 SCR031
00037040The control lines and text that lie within the range of a .di control line are treated by SCR003 and SCR005.
00037050Treatment consists of setting them aside on file IKSUT1, rather than directly processing them.
00037060When a page eject occurs (explicitly or implicitly), they are recovered.
00037070Recognition is in SCR072, whereupon SCR031 is called.
00037080Inside SCR031, all necessary environment variables are preserved internally.
00037090Then a loop takes place, retrieving each control line or text line and passed on to SCR003 or SCR005 for processing.
00037100At the end of the loop, the file is closed out, the DI counters are zero'd, the environment is restored
00037110and control is returned to SCR072.
00037120.kp off;.br;.ke Pagination .di
00037130.kp on;.h4 SCR033
00037140This routine deals with the save (.sa) and restore (.re) control lines.
00037150The single argument, WHICH, distinguishes between them: 0=.sa and 1=.re.
00037160A "stack" of controlled structures is used.
00037170.kp off;.br;.ke Save Restore .sa .re
00037180.kp on;.h4 SCR035
00037190This routine handles the column begin (.cb) control line.
00037200It may cause a page eject (SCR072) if all columns are filled.
00037210.kp off;.br;.ke Columns .cb
00037220.kp on;.h4 SCR036
00037230This routine accomplishes the column definition (.cd).
00037240A flushing of any already existing column contents is implied.
00037250Allocation of the intermediate column buffer, PAGEBFR, will occur if it does not already exist or if there is an imcompatibility.
00037260.kp off;.br;.ke Columns .cd
00037270.kp on;.h4 SCR038
00037280This routine treats the .pn control word.
00037290.kp off;.br;.ke Roman Arabic On Off Offno Frac Norm Pref Pagination .pn
00037300.kp on;.h4 SCR040
00037310This routine parses and carries out the set symbol (.se) control line.
00037320As appropriate, subscripts on the left of the equal sign are observed, and may be automaticly incremented ('()').
00037330Expression evaluation is also done here.
00037340.of 8;SCR040B determines the symbol value, i.e. on the right of the equal sign.
00037350.of 8;SCR040E evaluates numeric expressions, found on the right side of the equal sign.
00037360.of 8;SCR040S parses out the subscript, if found on the left of the equal sign.
00037370.of 0;.kp off;.br;.ke 'Set Symbols' .se
00037380.kp on;.h4 SCR041
00037390This routine enables the actual substitution of set symbols.
00037400An iterative loop implements possible multiple substitutions.
00037410.of 8;SCR041F finds the symbol to be substituted for, plus any subscript.
00037420.of 8;SCR041P produces a character string for a numeric substitution.
00037430.of 8;SCR041R retrieves one or more symbol values, as set in a .se control line.
00037440.of 8;SCR041S supplies all special, "reserved" set symbol values.
00037450.of 8;SCR041U scans a user library  of set symbols previously stored there.
00037460.of 0;.kp off;.br;.ke Substitution Defaults .su
00037470.kp on;.h4 SCR042
00037480This routine stores set symbol values into the internal storage chain.
00037490It will be called from SCR001 to establish the meanings of the various reserved set symbols, SYSVAR etc.
00037500It may be called from SCR040, to accommodate a .se control line.
00037510.kp off;.of 0;.ke .su Substitution
00037520.kp on;.h4 SCR045
00037530This routine handles the parsing, analysis and intialization of the various keep control words.
00037540.of 9;SCR045FN works with the footnote (.FN) control word.
00037550.of 9;SCR045HN works with the headnote (.HN) control word.
00037560.of 9;SCR045KP works with all forms of the keep (.KP) control word.
00037570.kp off;.ke .kp Keep Footnotes Headnotes Sysvar
00037580.of 0;.kp on;.h4 SCR046
00037590This routine manages all of the various keeping activities, i.e. after SCR045 has analyzed the control words.
00037600.of 9;SCR046WW preserves all formatted lines being "kept" by any means.
00037610.of 9;SCR046XX transfers all formatted lines that had been kept out to the printer or typewriter via SCR052.
00037620.of 9;SCR046ZZ eliminates the entire keep chain from memory.
00037630.kp off;.of 0;.ke .kp Keep Footnotes Headnotes
00037640.br;.kp on;.h4 SCR049
00037650This routine adds the current page number to the index chain associated with a particular keyword, if it is not already present.
00037660There are two arguments:
00037670.br;1. is the pointer to the word (IX_KEY) chain head.
00037680.br;2. is the switch indicating desired emphasis.
00037690.kp off;.ke Keywords Index Pagination
00037700.br;.kp on;.h4 SCR050
00037710This routine accomplishes the actual printing or typing of the output.
00037720Here the distinction between terminal and printer format is felt.
00037730.kp off;.ke Terminal
00037740.br;.kp on;.h4 SCR051
00037750This routine allocates the buffer necessary for multiple column processing.
00037760Freeing of this space is also accomplished, if .CD 1 0 is given.
00037770An upper limit of 1.5 is assumed for overstriking effects.
00037780.kp off;.ke .cd Columns .cl
00037790.kp on;.h4 SCR052
00037800This routine passes buffer lines either directly into the print routine SCR050, or stores them for multiple column processing.
00037810If appropriate, an internal procedure is invoked to automatically search for words being automatically indexed.
00037820Footnotes may come out of "hiding" here.
00037830.of 9;SCR052BX completes the .BX condition by inserting vertical bars where appropriate.
00037840.of 9;SCR052IX carries out the .IX condition by searching the control lines for words being indexed.
00037850.of 0;.kp off;.ke .bx .ix Box Index
00037860.kp on;.h4 SCR053
00037870This routine flushes the multiple column buffer.
00037880Here the distinction between balanced and unbalanced columns is put into effect.
00037890This routine may be called in SCR003 (in response to a .SC control word),
00037900in SCR051 (when redefining the columns),
00037910and/or in SCR072 (when the page eject occurs).
00037920.kp off;.ke .bc Columns .sc Pagination
00037930.kp on;.h4 SCR055
00037940This routine accomplishes the basic formatting task.
00037950The portion of the buffer that will completely fit into the line space is determined, with any existing or constructed hyphenation.
00037960Automatic hyphenation is done in an internal procedure, SCR055H.
00037970In extreme cases, SCR055E may be called upon to expand a word.
00037980If appropriate, SCR058 is called to finish the justifying task.
00037990The method used for automatic hyphenation is the author's (R.Dickie) own, in which the word is examined for the presence of "standard" prefices and suffices.
00038000These are catalogued in the Latin and Greek word section of "The English Language" of the Lincoln Library.
00038010The user may supply hyphenation criteria per word via the .hw control word,
00038020or effect the overall state via the .hy control word.
00038030.of 8;SCR055A finds the line break points and decides whether to call for hyphenation.
00038040.of 8;SCR055H applies the automatic hyphenation algorithm.
00038050.of 0;.kp off;.ke .fo .hy Format Hyphen .hw
00038060.kp on;.h4 SCR058
00038070This routine accomplishes the right-to-left justification task.
00038080The justification algorithm assigns the residual blanks using a priority scheme by which clause endings get first attention then the relatively larger word pairs.
00038090The first (root) section of the routine counts the word gaps (NGAP) on the formatted line,
00038100determines whether justification is to be done, then (if appropriate) calls the internal procedure SCR058A for the action.
00038110.br;SCR058A first locates the word gaps (LWORD) and determines the length of the longest word (NMAX(1)) and its position (NMAX(2)).
00038120Priorities (PRIOR) are established per gap as a function of the "hypotenuse" rule, and the largest such is placed in NMAX(3).
00038130Each gap is re-examined for the possibility that it terminates a clause, in which case its priority is increased above the maximum to give it preferential treatment.
00038140The gap counters (KWORD) are sorted to reflect these priorities.
00038150In extreme cases (very many blanks to be distributed), SCR058E is called to expand the largest word, as a lithographer would.
00038160Finally, the residual blanks are distributed into the gaps in PRIOR order.
00038170.of 8;SCR058A applies the automatic justification algorithm.
00038180.of 8;SCR058E handles the extreme case where it becomes necessary to insert blanks within a word.
00038190.of 0;.kp off;.ke Justify .ju
00038200.kp on;.h4 SCR060
00038210This routine examines the conditional section (.cs) control line, and prepares for its use.
00038220Communication is via CONTROL.CS to either SCR003 or SCR005 for effect.
00038230Since any overall change in the conditional section state comes into being within this routine,
00038240it can and does determine (in CS(0)) the current "being included" truth state.
00038250.kp off;.ke .cs Sections Conditional
00038260.kp on;.h4 SCR070
00038270This routine merely takes a general numeric (integer) input and returns the shortest character representation.
00038280.kp off
00038290.br;.kp on;.h4 SCR071
00038300This routine accepts a numeric input and returns the roman numeral equivalent, as a character string.
00038310.kp off;.ke .pn Roman
00038320.kp on;.h4 SCR072
00038330This routine deals with the end-of-page condition.
00038340All headers and footers are also generated here (SCR020 merely sets them up).
00038350If appropriate, further page retrieval prompting is also done.
00038360Footnotes, headnotes and other keeps may come out of "hiding" here.
00038370.of 8;SCR072A constructs the actual title line.
00038380.of 8;SCR072B treats boxes that are still in effect when a page eject occurs.
00038390.of 8;SCR072R deals with the additional, prompted page selection requests.
00038400.of 0;.kp off;.ke .pa Stop Pagination Prompt
00038410.kp on;.h4 SCR073
00038420This routine effects the define head (.dh) control line.
00038430Communication to SCR074 and SCR075 is through HEAD.
00038440It is also called once per PASS loop with an empty argument, for the purpose of initilizing the default values.
00038450.of 8;SCR073D will be called for each level specified.
00038460.of 0;.kp off;.ke .dh Defaults
00038470.kp on;.h4 SCR074
00038480This routine effects the various head level control lines.
00038490Communication of the level parameters is through HEAD.
00038500Communication of the actual topic heads and corresponding page numbers to the table-of-contents generator (SCR075) is via the file IKSUT2.
00038510.of 8;SCR074H processes the actual topic head.
00038520.of 8;SCR074T handles the topic retrieval mechanism.
00038530.of 0;.kp off;.ke .h0 .h1 .h2 .h3 .h4 .h5 .h6 'Table of Contents' Topic
00038540.kp on;.h4 SCR075
00038550This routine produces a table of contents.
00038560Topic head and page number information is communicated from SCR074 via the file IKSUT2.
00038570Control information is passed from SCR073 via HEAD.
00038580.of 9;SCR075A  initializes the table of contents procedure.
00038590.of 9;SCR075TC works with a single table of contents entry line.
00038600.of 9;SCR075TX contends with those topic heads that exceed a single table of contents line.
00038610.of 0;.kp off;.ke .tc 'Table of Contents'
00038620.kp on;.h4 SCR080
00038630This routine flushes the general text buffer.
00038640It is called with every "break" (explicit or implicit) with instructions (parm='1'B) to completely empty it.
00038650If SCR005 detects that BUFFER is approaching its upper length limit too closely,
00038660it will call SCR080 with instructions (parm='0'B) to only partially flush it.
00038670The .sp, .sk and .ls states are done by repeated calls to SCR052.
00038680In a loop per output line, chunks of the concatenation buffer, BUFFER, are moved into the output line buffer, OUT.BUFFER.
00038690The .ce, .ri and .oj states are done internally; the .fo and .ju states are achieved by call to SCR055.
00038700.kp off;.ke .br Break .sk .sp .ce .ri .oj
00038710.br;.kp on;.h4 SCR098
00038720This routine concludes a pass.
00038730On the final pass, the task is completed, including the final page eject (unless QQ is in effect).
00038740.kp off;.ke .qq Quit
00038750.kp on;.h4 SCR099
00038760This routine diagnoses the various error conditions.
00038770Associated information is supplied to aid the error correction task.
00038780The CONTINUE option and error severity come into play here.
00038790.of 6;FIXUP attempts to repair the detected error, if CONTINUE is in effect.
00038800.of 0;.kp off;.ke Error Continue
00038810.br;.kp on;.h4 SCR150
00038820This routine handles the .if control line.
00038830The truth of the specified condition controls whether the consequential text is to be processed.
00038840If so, it is achieved by resetting the DELIMIT pointer to indicate that the next text begins following the condition, rather than following the control word separator (;).
00038850.br;CHARACTER-COMPARISON
00038860.br;NUMERIC-COMPARISON
00038870.kp off;.ke .if If Conditional
00038880.kp on;.h4 SCR155
00038890This routine deals with the set label (...) control line.
00038900Communication is via LABEL to SCR160.
00038910.kp off;.ke Label ...Set-label
00038920.kp on;.h4 SCR160
00038930This routine effects the .goto control line.
00038940Communication is from SCR155 via LABEL.
00038950.kp off;.ke .go 'Go To'
00038960.kp on;.h4 SCR190
00038970This routine strips off of the string of control parameters the next such and returns the numeric equivalent.
00038980Several special mnemonic codes are permitted: "blank", "tab", "bs", etc.
00038990This routine is called by SCR333 and SCR345.
00039000.kp off;.ke Mnemonic Blank Tabs Bs Superscripts
00039010.br;.kp on;.h4 SCR200
00039020This effects the read-variable (.rv) control line.
00039030This is effective only on the first pass.
00039040.kp off;.ke .rv Terminal
00039050.kp on;.h4 SCR224
00039060This routine applies the tabs, inserting internal blanks (x'C0') or other specified fill characters.
00039070These had been established by default and optionally through a .tb control line in SCR024.
00039080.kp off;.ke .tb Tabs
00039090.kp on;.h4 SCR333
00039100This routine implements the underscore definition (.ud) control line.
00039110Communication is via UNDEF.
00039120.kp off;.br;.ke Underscore .ud
00039130.kp on;.h4 SCR345
00039140This routine implements the .tr control word.
00039150It is called by SCR003.
00039160.kp off;.br;.ke Translate Characters .tr
00039170.kp on;.h4 SCR400
00039180This routine, called by SCR003, implements the .bf, .us and .uc control words.
00039190.kp off;.br;.ke Underscore Uppercase Boldface .bf .us .uc
00039200.kp on;.h4 SCR701
00039210This routine carries out the keyword indexing function.
00039220SCR701 will be entered only during the first pass.
00039230If the argument is '1'B the current page is to be referenced; otherwise it is not.
00039240Desired emphasis, as indicated by underscoring, is detected and passed on to SCR049.
00039250.of 8;SCR701E treats possibly emphasized words by looking for character pairs (either backspace-underscore or reverse),
00039260removing same and noting their presence.
00039270.of 0;.kp off;.ke .ke .ix Keyword Index
00039280.kp on;.h4 SCR702
00039290This routine constructs the automatic index report.
00039300Two columns are automaticly fitted onto the existing page.
00039310.of 8;SCR702B begins the index procedure with any necessary initialization.
00039320.of 8;SCR702H sets off groups of words being indexed, as a function of their first letters.
00039330.of 8;SCR702L produces the requested index report.
00039340.of 0;.kp off;.ke .ke .ix Keyword Index
00039350.h3 External and Externally Based Variables
00039360.kp on;.h4 ADDRESS
00039370This is the address of the current head-level line as being transmitted to SCR075.
00039380It is used, if appropriate, by SCR026 to additionally transmit revision code indicators (RC).
00039390.kp off;.ke .rc .tc 'Table of Contents' Revision
00039400.kp on;.h4 ALLDONE
00039410This switch is initially "off" ('0'B), but set "on" by SCR098, so that the pass can be properly concluded.
00039420.kp off;.ke Quit
00039430.kp on;.h4 BOX
00039440This is the external pointer (head) to the chain of BOX_ITEM's.
00039450The chain is initialized to non-existence in SCR002.
00039460It is defined, used and eliminated by SCR021, in response to the .BX control words.
00039470It is queried two places in SCR052, to produce the vertical bar overlays.
00039480.kp off;.ke .bx Box
00039490.kp on;.h4 BOX_ITEM
00039500This is the chain item representing a particular box.
00039510There may be zero, one or more of these in simultaneous existence.
00039520.kp off;.ke .bx Box
00039530.kp on;.h4 BOX_ITEM.LINK
00039540This is the address of the next BOX_ITEM in the chain.
00039550The ordering is: the item linked directly to the chain head (BOX) is the most recently defined one.
00039560.kp off;.ke .bx Box
00039570.kp on;.h4 BOX_ITEM.COLUMNS
00039580This switch "remembers" whether column definition (.CD) was in effect at the time of this particular box definition.
00039590It is used in SCR052 to determine whether to apply the vertical bars relative to the intermediate column "space",
00039600or to the final page space (buffer).
00039610.kp off;.br;.kp on;.h4 BOX_ITEM.COUNT
00039620This is the number of vertical bars in this box.
00039630There will always be at least two, as assured by SCR021.
00039640.kp off;.br;.kp on;.h4 BOX_ITEM.LOC
00039650These are the positions of the vertical bars in this box.
00039660They will necessarily be non-redundant, ordered ascending and within the 1-132 range, as assured by SCR021.
00039670.kp off;.ke .bx Box
00039680.kp on;.h4 BUFFER
00039690This is a varying length character string into which is concatennated each text string.
00039700A blank will also be added in between segments.
00039710If it approaches its upper length limit too closely, SCR005 will call SCR080 to partially flush it.
00039720Any break (explicit or implicit) will cause it to be completely emptied by SCR080.
00039730.kp off;.ke Break
00039740.kp on;.h4 CONTROL.BC
00039750'1'B means balanced columns, '0'B unbalanced.
00039760This variable is initialized to 1 in SCR002, set in SCR003 by the .nb and .bc control lines,
00039770then it is referenced in SCR053 in controlling how the multiple column buffer is flushed and formatted.
00039780.kp off;.ke .bc Columns
00039790.kp on;.h4 CONTROL.BM
00039800This is the number of lines from the bottom of the page (as defined by PL) up to the bottom line of text.
00039810In SCR002, it is normally initialized to 6, but it is really a function of the LPI option. It can be reset by the .bm control line.
00039820.kp off;.ke .bm Margin
00039830.kp on;.h4 CONTROL.CD
00039840This is an array of 21 integers, by which the multiple columns are described.
00039850The first is the number of columns; the remaining 20 are where each column begins (line position).
00039860.kp off;.ke .cd Columns
00039870.kp on;.h4 CONTROL.CE
00039880This acts as a controlling switch for the centering of text.
00039890When the .ce is encountered, the value "n" (or 1 if blank) is placed in this switch.
00039900If the value "on" is present, -1 is placed there; if "off", 0 is.
00039910Then, on each subsequent line of text, if CE is non-zero the line will be center justified;
00039920concurrently, if CE is positive, it will be decreased toward 0 (where the cycle terminates).
00039930It temporarilly disables concatenation in SCR005, and is felt in SCR080.
00039940.kp off;.ke .ce Center
00039950.kp on;.h4 CONTROL.CL
00039960This is the current column length, for use with multiple column formatting.
00039970It defaults to the LL value in effect.
00039980.kp off;.ke .cl Columns
00039990.kp on;.h4 CONTROL.CO
00040000This switch indicates that the concatenation of text is to occur.
00040010It defaults to "on" ('1'B), can be set "off" by the .nc control line, and can be reset by the .co control line.
00040020.kp off;.ke .co .nc Concatenate
00040030.kp on;.h4 CONTROL.CS
00040040This is a (-9:9) array of bit switches, used to support the conditional section portion of the SCRIPT system.
00040050SCR002 initializes them to their default values at the beginning of each pass.
00040060The positive "n" switch indicates whether the n'th conditional section is in effect.
00040070The negative equivalent indicates whether the n'th conditional section is to be included.
00040080The 0'th switch indicates the current overall effect (whether the current text is to be included or ignored).
00040090These switches are set by the .cs control line in the SCR060 routine.
00040100They are interrogated in SCR003 and SCR005.
00040110.kp off;.ke .cs Sections
00040120.kp on;.h4 CONTROL.CW
00040130This is the control word separator.  It is initialized in SCR002 to ';' and optionally set by the .cw control line.
00040140.kp off;.ke .cw
00040150.kp on;.h4 CONTROL.FM
00040160This is the footing margin.
00040170Its default value (2) is a function of the LPI option, and can be reset by the .fm control line.
00040180.kp off;.ke .fm Margin
00040190.kp on;.h4 CONTROL.FO
00040200This switch indicates whether formatting is supposed to be going on.
00040210This defaults to "on" ('1'B), can be set "off" by the .nf control line, and can be reset by the .fo control line.
00040220.kp off;.ke .fo .nf Format
00040230.kp on;.h4 CONTROL.FS
00040240This is the footing space.
00040250This defaults to 1, and can be set by the .fs control line.
00040260.kp off;.ke .fs Title
00040270.kp on;.h4 CONTROL.HM
00040280This is the heading margin.
00040290Its default value (2) is a function of the LPI option, and can be reset by the .hm control line.
00040300.kp off;.ke .hm Margin
00040310.kp on;.h4 CONTROL.HS
00040320This is the heading space.
00040330This defaults to 1, and can be set by the .hs control line.
00040340.kp off;.ke .hs Title
00040350.kp on;.h4 CONTROL.HY
00040360This is the counter controlling whether automatic hyphenation is supposed to be in effect.
00040370Its default value is "on" (-1), can be set "off" by the .nh control line, and can be reset by the .hy control line.
00040380.kp off;.ke .hy Hyphen .nh
00040390.kp on;.h4 CONTROL.IN
00040400This is the current indenture amount.
00040410It defaults to 0, and can be set by the .in control line.
00040420.kp off;.ke .in Indent Margin
00040430.kp on;.h4 CONTROL.JU
00040440This switch indicates whether justification is occurring.
00040450It defaults to "on" ('1'B), can be set "off" by the .nj control line, and can be reset by the .ju control line.
00040460.kp off;.ke .ju .nj Justify
00040470.kp on;.h4 CONTROL.KP
00040480This is a string of 6 characters describing the current KEEP activity.
00040490It is initialized in SCR002 (i.e. per pass) to 'OFF'.
00040500It may be reset in SCR003 to contain the option word of a .FN, .HN or .KP control line.
00040510It will be observed in SCR080, in order to control the disposition of the formatted lines.
00040520It will also be noticed in SCR072, so as to resurrect the formatted output being kept as needed.
00040530.kp off;.ke .kp .hn .fn Keeps Footnotes Headnotes Pagination
00040540.kp on;.h4 CONTROL.LI
00040550This is the controlling counter in support of the .literal control line.
00040560The usage rationale is identical with that used in .ce.
00040570.kp off;.ke .li Literal
00040580.kp on;.h4 CONTROL.LL
00040590This is the current line length.
00040600It defaults to 60, and can be reset by the .ll control line.
00040610.kp off;.ke .ll
00040620.kp on;.h4 CONTROL.LS
00040630This is the current line spacing.
00040640Its default value (0) depends upon the LPI option, and can be reset by the .ss, .ds and .ls control lines.
00040650.kp off;.ke .ls .ds .ss
00040660.kp on;.h4 CONTROL.MS
00040670This counter can be set by the .ms control word.
00040680As appropriate, it will be decremented by MACRO_SEARCH (within SCR003).
00040690This is the counter specifying whether macro substitution is in effect; it defaults to 0 ("off").
00040700.kp off;.ke .ms .dm Macro
00040710.kp on;.h4 CONTROL.OF
00040720This is the amount of offset to be used.
00040730It defaults to 0.
00040740It can be set by the .of control line, and will be automatically reset to 0 by the .in and .h_ control lines.
00040750.kp off;.ke .of Offset
00040760.kp on;.h4 CONTROL.OJ
00040770This indicates that "out justification" is to be done.
00040780Out justification is left justify on even numbered pages and right on odd.
00040790It defaults to 0, and can be reset by the .oj control line, in much the same manner as .ce, .li and .ri.
00040800It will temporarilly disable concatenation in SCR005, and is felt in SCR080.
00040810.kp off;.ke .oj
00040820.kp on;.h4 CONTROL.PL
00040830This is the current page length.
00040840Its default value (66) depends upon the LPI option, and can be reset by the .pl control line.
00040850.kp off;.ke .pl Pagination
00040860.kp on;.h4 CONTROL.PN
00040870This is the current page numbering mode code.
00040880Acceptable codes are ARABIC, ROMAN, OFF, ON, FRAC, NORM and OFFNO.
00040890It defaults to ARABIC and can be reset by the .pn control line.
00040900.kp off;.ke .pn Roman Arabic Pref Frac Norm On Off Offno Pagination
00040910.kp on;.h4 CONTROL.PNPREF
00040920This string contains the eight character prefix associated with the .pn pref control line.
00040930.kp off;.ke .pn Pref &
00040940.kp on;.h4 CONTROL.PS
00040950This is the current page number symbol.
00040960Its default value is "&".
00040970It can be reset by the .ps control line.
00040980.kp off;.ke .ps & Pagination
00040990.kp on;.h4 CONTROL.RC
00041000This is the array of useable revision codes.
00041010They are defaulted  to blanks in SCR002, and can be set by the .rc control line in SCR026.
00041020They are examined in SCR072A, SCR075 and SCR080 to determine whether any___ have been so defined;
00041030this is in order to "know" whether to leave a gap for any RC indicators that may follow.
00041040.kp off;.ke .rc Revision
00041050.kp on;.h4 CONTROL.RI
00041060This counter supports the right adjust control line much like the CE does.
00041070It defaults to 0, and can be reset by the .ri control line.
00041080It temporarilly disables concatenation in SCR005, and is felt in SCR080.
00041090.kp off;.ke .ri
00041100.kp on;.h4 CONTROL.RM
00041110This is the value corresponding to the .rm control word parameter.
00041120It is initialized to zero in SCR002.
00041130In response to the .RM control word, SCR003 will call SCR028 to set the value as instructed.
00041140It will be queried by SCR080, in order to format the output lines appropriately.
00041150.kp off;.ke .rm Margin
00041160.kp on;.h4 CONTROL.SP
00041170This is the current number of line spaces, to be inserted before the next non-blank line to be printed.
00041180It defaults to 0, and can be reset by the .sp and .sk control lines.
00041190.kp off;.ke .sp .sk
00041200.kp on;.h4 CONTROL.SU
00041210This counter supports the substitution mode much in the same fashion as CE.
00041220The default state is "on", as if .su on had been invoked before the user file was to be processed.
00041230It can be reset off and on by the .su control line.
00041240.kp off;.ke .su .se Substitution 'Set Symbols'
00041250.kp on;.h4 CONTROL.TB
00041260This contains the tab information.
00041270.kp off;.ke .tb Tabs
00041280.kp on;.h4 CONTROL.TB.FILL
00041290This is an array of fill characters, corresponding to each of the tab positions.
00041300They all default to internal blanks (hex C0, to bypass possible justification),
00041310and can be reset to desired values by an appropriate .tb control line.
00041320.kp off;.ke .tb Tabs Fill
00041330.kp on;.h4 CONTROL.TB.COLUMN
00041340This array points at up to 15 tab positions.
00041350It is initialized in SCR002, set by the .tb control line in SCR024, then used in SCR224.
00041360The default positions are 5, 10, 15 ...
00041370.kp on;.h4 CONTROL.TM
00041380This is the current top margin.
00041390Its default value (6) is dependant upon the current LPI option, and can be reset by the .tm control line.
00041400.kp off;.ke .tm Margin
00041410.kp on;.h4 CONTROL.TR
00041420This is a pair of strings of 256 characters each.
00041430The first string remains fixed, with hex values 00 through FF.
00041440The second string is initialized equal to the first, and then optionally altered by the .tr control line.
00041450The second is then used in SCR050 to effect actual character translation.
00041460It is also used in support of the TAB feature.
00041470A special, internal blank (hex C6) is automatically translated into blanks.
00041480.kp off;.ke .tr Translate Characters
00041490.kp on;.h4 CONTROL.TT
00041500This is a 6X2X3 array of 80 character strings, supporting the top and bottom titles.
00041510The first subscript represents the title level, where 1 implies the first (or only) top title,
00041520and 6 represents the first (or only) bottom title.
00041530It defaults to a page number at the top.
00041540It can be reset by the .tt, .bt, .et, .ot, .eb and .ob control lines.
00041550.kp off;.ke Title .tt .bt .et .ot .eb .ob
00041560.kp on;.h4 CONTROL.UN
00041570This is the current undenture amount to be effected.
00041580It defaults to 0, and can be reset by the .un control line.
00041590It is automatically reset to 0 by the .in control line.
00041600.kp off;.ke .un Undent
00041610.kp on;.h4 COUNTER
00041620This is a 0-10 array of integer counters, that are used in support of the SYSCOUNT reserved set symbols.
00041630.kp off;.ke SYSCOUNT .se Substitution
00041640.kp on;.h4 DELIMIT
00041650This points at the last character of the control line, i.e. immediately before______ the control word separator (normally the semicolon (;)).
00041660In the absence of a control word separator, (either none exists in the whole line, or in the line remaining)),
00041670DELIMIT points at the last character of the input line (unformatted) line, i.e. DELIMIT = LENGTH(LINE).
00041680It is primarilly set in SCR003A, the control line parsing routine.
00041690It may be reset by any of the control words that specify reprocessing some part of the control line:
00041700.li;.BF, .IF, .PP, .UC, .UP, .US and ... (set label).
00041710It is observed in SCRIPT (main-driver), in controlling how much line remains to be processed.
00041720It will be set to 0 in SCR013 (.ef) which tells SCRIPT to process all___ the current line (i.e. not___ to remove any of the first section).
00041730It may also be set in SCR018B (.IM action), SCR031(.DI), SCR150 (.IF), SCR155 (...) or SCR160(.GO).
00041740.kp off;.ke .cw
00041750.kp on;.h4 DI
00041760(1) indicates the count of lines to be put under .di control.
00041770Being set by the n|on|off through SCR029, 0 means "not-happening", +n means "for-the-next n lines", and -1 means "happening until .di off is found".
00041780.br;(2) is the actual record count in the .di file IKSUT1.
00041790.kp off;.ke Pagination .di
00041800.kp on;.h4 ELEMENT
00041810This is the data structure, by which information is passed to the index writer.
00041820.kp off;.ke Index Keyword .ix .ke
00041830.kp on;.h4 FOOT
00041840This is the set of information associated with the footnote processing.
00041850.kp off;.ke Footnotes .fn
00041860.kp off;.ke .fn Footnotes
00041870.kp on;.h4 FOOT.BEGIN
00041880This records the OUT.BEGIN value at the point where the footnote commences.
00041890.kp off;.ke .fn Footnotes
00041900.kp on;.h4 FOOT.IN
00041910This is the .IN value before the .FN ON, set to zero for processing, and reset at the .FN OFF.
00041920.kp off;.ke .fn Footnotes .in Indent
00041930.kp on;.h4 FOOT.NO
00041940This is the current footnote number.
00041950.kp off;.ke .fn Footnotes
00041960.kp on;.h4 FOOT.OF
00041970This is the .OF value before the .FN ON, set to zero for processing, and reset at the .FN OFF.
00041980.kp off;.ke .fn Footnotes .of Offset
00041990.kp on;.h4 FOOT.RM
00042000This is the .RM value before the .FN ON, set to zero for processing, and reset at the .FN OFF.
00042010.kp off;.ke .fn Footnotes .rm Margin
00042020.kp on;.h4 FOOT.SP
00042030This is the .SP value before the .FN ON, set to zero for processing, and reset at the .FN OFF.
00042040.kp off;.ke .fn Footnotes .sp
00042050.kp on;.h4 FOOT.UN
00042060This is the .UN value before the .FN ON, set to zero for processing, and reset at the .FN OFF.
00042070.kp off;.ke .fn Footnotes .un Undent
00042080.kp on;.h4 HEAD
00042090This is the set of topic head controls.
00042100It is initialized and optionally altered by the .dh control line in SCR073.
00042110It is subsequently used by SCR074 in handling the various .h_ control lines, and in SCR075 for the actual table of contents report generation.
00042120.kp off;.ke .dh
00042130.kp on;.h4 HEAD.SKBF
00042140This retains the current values for SKBF, skiping before a topic head.
00042150.kp off;.ke .dh Skbf
00042160.kp on;.h4 HEAD.SPAF
00042170This retains the current values for SPAF, spacing after a topic head.
00042180.kp off;.ke .dh Spaf
00042190.kp on;.h4 HEAD.TCIN
00042200This retains the current values for TCIN, table of contents indenture.
00042210.kp off;.ke .dh Tcin 'Table of Contents'
00042220.kp on;.h4 HEAD.TO
00042230This retains the current values for TO, 1 meaning table of contents only.
00042240.kp off;.ke .dh To
00042250.kp on;.h4 HEAD.TC
00042260This retains the current values for TC, 1 meaning table of contents entry requested.
00042270.kp off;.ke .dh 'Table of Contents' Tc
00042280.kp on;.h4 HEAD.TS
00042290This retains the current values for TS, the number of lines to be skipped before a table of contents entry.
00042300.kp off;.ke .dh Ts 'Table of Contents'
00042310.kp on;.h4 HEAD.US
00042320This retains the current values for US, 1 meaning that the topic head is to be underscored.
00042330.kp off;.ke .dh Us Underscore
00042340.kp on;.h4 HEAD.UP
00042350This retains the current values for UP, 1 meaning that the topic head is to be in uppercase.
00042360.kp off;.ke .dh Uppercase Up
00042370.kp on;.h4 HEAD.OJ
00042380This retains the current values for OJ, 0 meaning left-justify, 1 to out-justify, 2 to right-justify and 3 to center justify.
00042390.kp off;.ke .dh Oj
00042400.kp on;.h4 HEAD.PA
00042410This retains the current values for PA, 1 meaning that a page eject is to occur before the topic head.
00042420.kp off;.ke .dh Pa Pagination
00042430.kp on;.h4 HEAD.BR
00042440This retains the current values for BR, 1 meaning that a "break" is to occur after the topic head.
00042450.kp off;.ke .dh Br Break
00042460.kp on;.h4 HEAD.FILL
00042470This retains the current values for FILL, the table of contents entry fill character (blank or '.').
00042480.kp off;.ke .dh Fill 'Table of Contents'
00042490.kp on;.h4 HY
00042500This is the list item, corresponding to one specified hyphenation word.
00042510.kp off;.ke .hw Hyphen
00042520.kp on;.h4 HY.LINK
00042530This is the address of the next HY item.
00042540.kp off;.ke .hw Hyphen
00042550.kp on;.h4 HY.LONG
00042560This is the length of the current item.
00042570.kp off;.ke .hw Hyphen
00042580.kp on;.h4 HY.WORD
00042590This is the actual, specified hyphenation word.
00042600It has been translated to lower case and the hyphens have been removed (after the locations were recorded in the HY.HYPHEN array).
00042610.kp off;.ke .hw Hyphen
00042620.kp on;.h4 HY.HYPHENS
00042630This is the number of hyphens inserted by the user in the .hw control word.
00042640A zero value, caused by no hyphens being given, means that hyphenation should not occur for this particular word.
00042650.kp off;.ke .hw Hyphen
00042660.kp on;.h4 HY.HYPHEN
00042670This is an array of the hyphen positions within the specified .hw word.
00042680.kp off;.ke .hw Hyphen
00042690.kp on;.h4 HYP
00042700This is the set of controls pertinent to the hyphenation system.
00042710.kp off;.ke .hy Hyphen
00042720.kp on;.h4 HYP.HEAD
00042730This is the address or head (if any) of a chain of specified hyphenation word items.
00042740.kp off;.ke .hy Hyphen
00042750.kp on;.h4 HYP.MINPT
00042760This is the minimum number of characters that can be trimmed by hyphenation; it defaults to 3.
00042770This value can be altered by a .hy SET MINPT n control word.
00042780.kp off;.ke .hy Hyphen Minpt
00042790.kp on;.h4 HYP.THRESH
00042800This value can be set by a .hy SET THRESH n control word.
00042810.kp off;.ke .hy Hyphen Thresh
00042820.kp on;.h4 IKSUT0X
00042830This indicates that the IKSUT0 file has been written into.
00042840It is an EVENT variable, used to effect some "parallel processing".
00042850It is triggered by the RETURN key, which means that the forms have been properly (manually) adjusted so the printout can commence.
00042860It is established in either SCR001, SCR002, SCR003 and/or SCR072, and interrogated in SCR050.
00042870.kp off;.ke IKSUT0 Terminal
00042880.kp on;.h4 IKSUT2K
00042890.kp off;.ke IKSUT2
00042900.kp on;.h4 IKSUT2X;.ke .tc
00042910This indicates that the IKSUT2 file has been written into.
00042920.kp off;.ke IKSUT2
00042930.kp on;.h4 IMCOUNT
00042940This is an array of counters, one per imbedding nest level, pointing at the last line processed within it.
00042950.kp off;.ke .im Imbed
00042960.kp on;.h4 IMERROR
00042970This value allows SCR099 to reference back into a piece of file being "delay-imbedded".
00042980The number corresponds to the logical_______ lines within the partial file.
00042990.kp off;.ke .di Error .im
00043000.kp on;.h4 IMLEVEL
00043010This is the imbedding nest level currently in effect.
00043020It is used as a subscript against all the IM___ arrays.
00043030.kp off;.ke .im Imbed
00043040.kp on;.h4 IMLINE
00043050This is an array of varying length character strings, to contain the residual lines left after a .im or .ef control line.
00043060.kp off;.ke .im Imbed
00043070.kp on;.h4 IMNAME
00043080This is the array of file names as currently nested.
00043090I.e. IMNAME(IMLEVEL) is the name of the file currently being processed.
00043100It is initialized in SCR002 to the value of FILENAM (as determined in SCR001), and can be reset by the .ap control line (without affecting FILENAM).
00043110.kp off;.ke .im Imbed
00043120.kp on;.h4 IMSEQ
00043130This is an array of line numbers corresponding to each nesting point.
00043140.kp off;.ke .im Imbed
00043150.kp on;.h4 INNER.LENGTH
00043160SCR080 sets this to the length of the BUFFER contents.
00043170.br;SCR055 sets it such that OUT.EFFECTIVE >_ OUT.LENGTH, so long as there existed a preceding word break; then it is used to ask if there is a break at the end of the line.
00043180.br;SCR055A uses it to ask if hyphenation has already been done, or if it is to be done.
00043190.br;SCR055H sets it (if hyphenation occurs) to point at the '-'.
00043200.br;SCR055A (if it doesn't already point at a '-' or '/') reduces it to the preceding blank.
00043210.br;SCR055 reduces it to ignore trailing blanks.
00043220.br;SCR058 uses it to limit the length of the input line.
00043230.br;SCR058A increases it by the number of inserted blanks.
00043240.br;SCR080 uses it to limit the amount of BUFFER to be moved to OUT.BUFFER; then it is used to reduce BUFFER by removing the used portion.
00043250.kp off
00043260.kp on;.h4 INNER.MAX
00043270This is the absolute upper length limit of BUFFER, 1000 in the current implementation.
00043280.kp off;.ke Defaults
00043290.kp on;.h4 IX_HEAD
00043300This is the header pointer for the chain of indexing or "key" words.
00043310.kp off;.ke .ke .ix Keyword Index
00043320.kp on;.h4 IX_KEY
00043330This is the chain element for each word____ being indexed or keyed upon.
00043340.kp off;.ke .ke .ix Index Keyword
00043350.kp on;.h4 IX_KEY.LINK
00043360This links to the next word being (1), and to a chain of references (2).
00043370.kp off;.ke .ke .ix Index Keyword
00043380.kp on;.h4 IX_KEY.LONG
00043390This is the length of the word being indexed.
00043400.kp off;.ke .ke .ix Index Keyword
00043410.kp on;.h4 IX_KEY.WORD
00043420This is the word being indexed.
00043430.kp off;.ke .ke .ix Index Keyword
00043440.kp on;.h4 IX_REF
00043450This is the chain element for each unique page reference.
00043460The header of each of these chains is the respective IX_KEY.LINK(2).
00043470.kp off;.ke .ke .ix Index Keyword
00043480.kp on;.h4 IX_REF.LINK
00043490This links to the next such.
00043500.kp off;.ke .ke .ix Index Keyword
00043510.kp on;.h4 IX_REF.PAGE
00043520These are the whole (1) and partial (2) page numbers of each reference.
00043530They should be in numeric order, without redundancy.
00043540.kp off;.ke .ke .ix Index Keyword
00043550.kp on;.h4 IX_REF.EMPHASIS
00043560This switch signals whether page number emphasis has been requested.
00043570.kp off;.ke .ke .ix Index Keyword
00043580.kp on;.h4 IX_SCAN
00043590This is to indicate that index scanning has been requested with a .ix control word.
00043600It is set in SCR701 and interrogated in SCR052.
00043610.kp off;.ke .ke .ix Index Keyword
00043620.kp on;.h4 KEEP
00043630This is the external data about the kept text lines.
00043640.kp off;.ke .kp .hn .fn Keeps
00043650.kp on;.h4 KEEP.HEAD
00043660This is the address of the first line of formatted text being kept.
00043670.kp off;.ke .kp .hn .fn Keeps
00043680.kp on;.h4 KEEP.TAIL
00043690This is the address of the last line of formatted text being kept.
00043700.kp off;.ke .kp .hn .fn Keeps
00043710.kp on;.h4 KEEP.COUNT
00043720This is the current count of formatted text lines being kept.
00043730If positive, the accumulation is still taking place; if negative, accumulation is complete, formatted and awaiting printout.
00043740.kp off;.ke .kp .hn .fn Keeps
00043750.kp on;.h4 KEEP.COLUMNS;.ke .kp .cd
00043760This switch "remembers" whether columns had been defined (.CD) at the time the keep was initialized.
00043770.kp off;.ke .kp .hn .fn Keeps Columns
00043780.kp on;.h4 KEPT;.ke .kp .hn .fn
00043790This is the list item containing one line of kept formatted text.
00043800.kp off;.ke .kp .hn .fn Keeps
00043810.kp on;.h4 KEPT.LINK
00043820This is the address of the next line of formatted text being kept.
00043830.kp off;.ke .kp .hn .fn Keeps
00043840.kp on;.h4 KEPT.LONG
00043850This is the absolute length of the particular line of formatted text.
00043860.kp off;.ke .kp .hn .fn Keeps
00043870.kp on;.h4 KEPT.TEXT
00043880This is the actual formatted line of text being kept.
00043890.kp off;.ke .kp .hn .fn Keeps
00043900.kp on;.h4 LABELH
00043910This is the header for the chain of label information.
00043920It is initially null.
00043930.kp off;.ke ...Set-label Label
00043940.kp on;.h4 LABELS;.ke ...Set-label
00043950This is the chain element for each label.
00043960They are kept in the order of encounter.
00043970.kp off;.ke ...Set-label Label
00043980.kp on;.h4 LABELS.LINK
00043990This links to the next such.
00044000.kp off;.ke ...Set-label Label
00044010.kp on;.h4 LABELS.NAME
00044020This is the specific label name.
00044030.kp off;.ke ...Set-label Label
00044040.kp on;.h4 LABELS.FILE
00044050This is the name of the file in which the label was encountered.
00044060.kp off;.ke ...Set-label Label
00044070.kp on;.h4 LABELS.RECNO
00044080This is the relative record position within the file where the label was encountered.
00044090.kp off;.ke ...Set-label Label
00044100.kp on;.h4 LABELS.POSNO
00044110This locates, within the record, where the label occurred.
00044120.kp off;.ke ...Set-label Label
00044130.kp on;.h4 LINE
00044140This is where each line is read into from any file.
00044150.kp off
00044160.kp on;.h4 LINENO
00044170This is the current line number on the formatted, output page.
00044180For reasons of generality, the PL/I LINENO builtin function has been intentionally disabled.
00044190It is kept current in SCR050.  It is queried by SCR030 and SCR150.
00044200.kp off;.ke .ln SYSLINE
00044210.kp on;.h4 LOOPING
00044220This indicates to the main routine that iteration (or looping) is still going on for partial lines.
00044230.kp off
00044240.kp on;.h4 MACHEAD;.ke .dm
00044250This is the address (head) of the first item in the optional chain of specified macros.
00044260.kp off;.ke .dm Macro
00044270.kp on;.h4 MACRO
00044280This is a list item containing a single macro.
00044290.kp off;.ke .dm Macro
00044300.kp on;.h4 MACRO.LINK
00044310This is an array of two addresses.
00044320.br;(1) points to the next macro item.
00044330.br;(2) is the head of the sub-chain of macro parts.
00044340.kp off;.ke .dm Macro
00044350.kp on;.h4 MACRO.LONG
00044360This is the length of the current macro item.
00044370.kp off;.ke .dm Macro
00044380.kp on;.h4 MACRO.NAME
00044390This is the actual macro name.
00044400.kp off;.ke .dm Macro
00044410.kp on;.h4 MACROX
00044420This is the list item in the sub-chain connected to a particular MACRO. Each such represents a sub-part of the macro.
00044430.kp off;.ke .dm Macro
00044440.kp on;.h4 MACROX.LINK
00044450This is the address of the next sub-part.
00044460.kp off;.ke .dm Macro
00044470.kp on;.h4 MACROX.LONG
00044480This is the length of the current macro sub-part.
00044490.kp off;.ke .dm Macro
00044500.kp on;.h4 MACROX.WORD
00044510This is the actual macro sub-part.
00044520.kp off;.ke .dm Macro
00044530.kp on;.h4 OPTION.CENTER
00044540This communicates the adjustment quantity, as determined in SCR001 from either the ADJUST or CENTER option,
00044550to the SCR050 routine for output formatting.
00044560It comes into effect only for OFFLINE (or BATCH) submittals.
00044570.kp off;.ke Adjust Center Batch Offline
00044580.kp on;.h4 OPTION.CONTINUE
00044590This communicates this presence of the CONTINUE option, from SCR001,
00044600to the error handling procedure SCR099.
00044610This defaults "off" for terminal output, and "on" ('1'B) for OFFLINE (or BATCH) requests.
00044620.kp off;.ke Continue Error
00044630.kp on;.h4 OPTION.COPIES
00044640This reflects (as determined in SCR001) the number of copies requested by the Copies option, when____ running_______ in__ TSO___.
00044650It is observed, controlling an overall loop, withing the main driver program, SCRIPT.
00044660.kp off;.ke TSO Copies
00044670.kp on;.h4 OPTION.DEBUG
00044680This communicates the status of the DEBUG option.
00044690Initially, SCR001 determines whether DEBUG was specified within the SCRIPT Command.
00044700Further, SCR003 may dynamically detect the presence of the .debug control line, and consequently set or reset this value.
00044710The DEBUG switch may be detected anywhere in the SCRIPT program, resulting in whatever the programmer currently has
00044720implemented, such as tracing etc.
00044730.kp off;.ke Debug .debug
00044740.kp on;.h4 OPTION.FILE
00044750This switch indicates that the formatted output is to be written into an internal file, as requested by the File option.
00044760.kp off;.ke File
00044770.kp on;.h4 OPTION.FILENAM
00044780This string contains the name of the primary file to be processed.
00044790It is set in SCR001, and referenced in SCR002 to start up each pass.
00044800It is not___ altered by the .ap, .ef or .im control words.
00044810.kp off;.ke File
00044820.kp on;.h4 OPTION.FORMS
00044830This string contains the two character forms designation ('10', '60', '66', '80', '88' or '  ').
00044840.kp off;.ke Forms
00044850.kp on;.h4 OPTION.LPI
00044860This parameter indicates the lines-per-inch requested in the SCRIPT command, and detected in SCR001.
00044870It can influence the default values for BM, HM, FM, LS, PL and TM.
00044880.kp off;.ke Lpi
00044890.kp on;.h4 OPTION.MARK
00044900This switch is set in SCR001, to indicate the presence of the MARK option in the SCRIPT Command.
00044910It is interrogated only in SCR005.
00044920.kp off;.ke Mark
00044930.kp on;.h4 OPTION.NOWAIT
00044940This switch is set in SCR001, to indicate the presence of the NOWAIT in the SCRIPT Command.
00044950It is interrogated in SCR002, at the beggining of the last____ pass, so as to determine whether to issue
00044960the "Adjust page" prompt and to wait for a RETURN key response.
00044970.kp off;.ke Nowait Terminal
00044980.kp on;.h4 OPTION.NUM
00044990There are ten (0:9) of these switches, each corresponding to a level of imbedded file.
00045000They indicate whether each line of the user's Script file(s) contains the usual TSO line numbers.
00045010They are set in SCR001, as a function of the NUM/NONUM option given in the SCRIPT command.
00045020They are interrogated by SCRIPT to determine whether to strip off the sequence numbers,
00045030whether to validate the sequencing, and how to print the UNFORMAT report.
00045040.kp off;.ke Num Nonum
00045050.kp on;.h4 OPTION.NUMBER
00045060This is set in SCR001, indicating the presence of the NUMBER option in the SCRIPT Command.
00045070It is queried in SCR050, to determine whether to adjust the page and insert the file and line numbering information.
00045080.kp off;.ke Number
00045090.kp on;.h4 OPTION.PAGE
00045100This is an array of 3 integers, set in SCR001, optionally reset in SCR072, to control specific page retrieval requests.
00045110 (1) represents the "from" page requested.
00045120 (2) represents the "to" page.
00045130 (3) 1 implies "internal", 2 implies "external".
00045140     0 implies "default", 3 implies "prompting".
00045150.kp off;.ke Page Prompt Pagination
00045160.kp on;.h4 OPTION.STOP
00045170This is set in SCR001, to indicate the presence of the STOP option in the SCRIPT Command.
00045180It will be observed in the SCR072 routine, at the exact bottom of the page.
00045190At this point, if enabled SCR072 will await the adjustment of new paper, as indicated by the user pressing RETURN.
00045200.kp off;.ke Stop Terminal Pagination
00045210.kp on;.h4 OPTION.SYSLIB
00045220This is the name of the file that will optionally contain a "library" of pre-recorded set symbols.
00045230A blank name (default condition) implies that no such dataset has been offered by the user.
00045240.kp off;.ke Syslib 'Set Symbols' Library
00045250.kp on;.h4 OPTION.SYSOUT
00045260This variable is set within SCR001 from the SCRIPT command.
00045270The value "TERM" means the output is to go to the terminal, "PRINT" means output goes to a line printer, and "66/40" means output goes to the IBM6640 Document Printer.
00045280It's value will influence the defaults assigned in SCR002.
00045290This is invariably interrogated in SCR050 so as to control the printing logic.
00045300It may also be interrogated in SCR021 and SCR052BX, because of the 6640's lack of a vertical bar (|) character.
00045310It may be queried within SCR150, in support of a .if control line that references SYSOUT.
00045320.kp off;.ke SYSOUT Terminal Batch Offline 'IBM 66/40'
00045330.kp on;.h4 OPTION.TRANSLATE
00045340This is set in SCR001, to indicate the presence of the TRANSLATE option in the SCRIPT Command.
00045350It will be looked at in SCR050, determining whether to translate all output to uppercase characters.
00045360.kp off;.ke Translate Characters Upcase
00045370.kp on;.h4 OPTION.TWOPASS
00045380This is set in SCR001, to indicate the presence of the TWOPASS option in the SCRIPT Command.
00045390Basicly, it controls the main routine (SCRIPT) loop for one or two passes on the file(s).
00045400It is also interrogated other places, where the twopass knowledge is useful.
00045410.kp off;.ke Twopass
00045420.kp on;.h4 OPTION.UNFORMAT
00045430This is set in SCR001, to indicate the presence of the UNFORMAT option in the SCRIPT Command.
00045440It will be looked at in the main routine, in the first pass only, to control the optional output of unformatted text.
00045450Note: The use of UNFORMAT, without TWOPASS, with output coming off on the user's terminal, will cause interleaved output.
00045460.kp off;.ke Unformat
00045470.kp on;.h4 OUT.BEGIN
00045480This indicates where, on the unadjusted page, the formatted text should begin.
00045490It begins at the value IN, and goes to IN + OF - UN.
00045500.kp off;.ke .in .of .un
00045510.kp on;.h4 OUT.LENGTH
00045520This is the actual string length or portion of OUT.BUFFER to be printed.
00045530.kp off
00045540.kp on;.h4 OUT.EFFECTIVE
00045550This is the effective length of same, i.e. considering the effect of any backspace characters.
00045560.kp off
00045570.kp on;.h4 OUT.BUFFER
00045580This area will contain a line of output during and after any formatting and justification activity.
00045590.kp off
00045600.kp on;.h4 PAGEBFR
00045610This is a controlled external array to contain multiple column buffering.
00045620It is allocated and freed in SCR051.
00045630.kp off;.ke .cd Columns
00045640.kp on;.h4 PAGENO
00045650This is the current / dynamic information representing  the page number.
00045660 (1) is the current page number (whole part)
00045670 (2) is the internal  "    "       "    "
00045680 (3) is the next      "    "       "    "
00045690 (4) is the current FRACtional part (-1 means not in effect)
00045700.kp off;.ke Frac .pn Pagination Norm
00045710.kp on;.h4 PAGEPTR
00045720This is the current absolute location within PAGEBFR.
00045730.kp off;.ke .cd Columns
00045740.kp on;.h4 PARM2
00045750In SCR003, each control line is parsed into the control word and a string of any options.
00045760The control word is kept internal to SCR003, and the option string is offered to the rest of the program
00045770stripped of leading blanks, in this area.
00045780.kp off
00045790.kp on;.h4 PASS
00045800This contains the current pass count.
00045810The last pass is always numbered 0.
00045820The first pass equals 1 if TWOPASS is in effect, and 0 if not.
00045830.kp off;.ke Twopass Pass
00045840.kp on;.h4 PNPREF
00045850This contains the page number prefix, if any, as supplied through the .pn pref ... control word.
00045860.kp off;.ke .pn Pagination Pref
00045870.kp on;.h4 QQ
00045880This switch is optionally set in SCR003 to indicate that the .qq control line has been encountered.
00045890It will be effective in SCR098, controlling whether the final spacing is in order.
00045900.kp off;.ke .qq Quit
00045910.kp on;.h4 RC
00045920This is the current (dynamic) active revision code flag stack.
00045930It is initially completely freed (set to "off") in SCR002.
00045940It may be set in SCR026 through the application of a .rc control word.
00045950Its current value (if any, otherwise blank) is preserved in SCR074 for use by SCR075.
00045960If any has been so defined, the current value will be placed by SCR080 on the left end of each buffer to be output.
00045970.kp off;.ke .rc Revision
00045980.kp on;.h4 RCONOFF
00045990This is an external switch in support of the .rc on/off facility.
00046000It is initialized in SCR002 to 0; it may be set to 1 in SCR026; and is finally set to 0 in SCR080 after the single usage.
00046010.kp off;.ke .rc Revision On/Off
00046020.kp on;.h4 STATUS
00046030This is the controlled external stack of variables that are effected by application of the .sa/.re control word pair.
00046040This is initialized to nonexistence in SCR002, then built and used in SCR033 in response to .sa and .re control words.
00046050It is %INCLUDED from member SCR000S.
00046060.kp off;.ke .sa .re Save Restore
00046070.kp on;.h4 SUB_ATOM
00046080This is the list element associated with any set symbol.
00046090It is within a chain headed by SUBHEAD, and may in turn provide heads for a series of of subordinate (subscripted) values.
00046100.kp off;.ke .se .su Substitution 'Set Symbols'
00046110.kp on;.h4 SUB_ATOM.COUNT
00046120This contains the current "count" of subscripted values. It is automatically incremented by the "symbol()=" form.
00046130.kp off;.ke .se .su Substitution 'Set Symbols'
00046140.kp on;.h4 SUB_ATOM.LINK_ATOM
00046150This heads the subordinate chain containing the subscripted values.
00046160.kp off;.ke .se .su Substitution 'Set Symbols'
00046170.kp on;.h4 SUB_ATOM.LINK_SUB
00046180This connects to the next SUB_ATOM. At all times, the ordered implied by "next" is alphameric (without case).
00046190.kp off;.ke .se .su Substitution 'Set Symbols'
00046200.kp on;.h4 SUB_ATOM.NAME
00046210This contains the set symbol. It is limited to 10 characters.
00046220.kp off;.ke .se .su Substitution 'Set Symbols'
00046230.kp on;.h4 SUB_ATOM.VALUE
00046240This contains the "value" associated with the set symbol.
00046250If the set symbol is used with subscripts, this contains the (0) value. It is currently limited to 66 characters.
00046260.kp off;.ke .se .su Substitution 'Set Symbols'
00046270.kp on;.h4 SUB_SUB;.ke .se .su
00046280This is the list element associated with a subscripted set symbol.
00046290The chain is headed by the respective SUB_ATOM.LINK_SUB. It is created in SCR042 and referenced in SCR041.
00046300.kp off;.ke .se .su Substitution 'Set Symbols'
00046310.kp on;.h4 SUB_SUB.LINK_SUB
00046320This links to the next SUB_SUB. The order associated with "next" is the next integer subscript.
00046330.kp off;.ke .se .su Substitution 'Set Symbols'
00046340.kp on;.h4 SUB_SUB.VALUE
00046350This is the set symbol value currently associated with a specific, subscripted set symbol.
00046360.kp off;.ke .se .su Substitution 'Set Symbols'
00046370.kp on;.h4 SUBHEAD;.ke .se .su
00046380This header, initially null, heads the chain of currently effective set symbols.
00046390.kp off;.ke .se .su Substitution 'Set Symbols'
00046400.kp on;.h4 TOPIC
00046410This communicates topic selection criteria from the SCRIPT Command (SCR001) to the head detection (SCR074) and printout (SCR050) routines.
00046420.kp off;.ke Topic
00046430.kp on;.h4 TOPIC.LEVEL
00046440This is the level discovered in the .h_ control line bearing the identification supplied in the TOPIC option.
00046450.kp off;.ke Topic
00046460.kp on;.h4 TOPIC.ID
00046470This is an array of two varying length character strings, bearing the two TOPIC selection identifiers.
00046480.kp off;.ke Topic
00046490.kp on;.h4 UNDEF
00046500This is the array of characters currently validated for automatic underscoring.
00046510It can be altered by the .ud control line.
00046520The (1) string always contains the defaults, (2) the current definitions.
00046530.kp off;.ke .ud Underscore
00046540.kp off;.pa;.h3 Files
00046550.kp on;.h4 CURRENT
00046560This is always the current file being processed.
00046570Its ddname will always be the same as the master, .ap or .im filename.
00046580.kp off;.ke Current File .im .ap
00046590.kp on;.h4 IKSUT0
00046600This is the terminal file, used for response to prompts etc.
00046610.kp off;.ke IKSUT0 Terminal
00046620.kp on;.h4 IKSUT1
00046630This file stores any lines under the influence of delay-imbedding (.di).
00046640It is written in both SCR003 and SCR005.
00046650At the bottom of a formatted page, SCR072 calls SCR031 to read all saved lines, calling SCR003 or SCR005 ass appropriate for each.
00046660Since the SCR072 invocation is probably subordinate to (called by ...) SCR003 or SCR005 and then calls either, the need for RECURSIVE code is apparent throuought the chain.
00046670.kp off;.ke .di IKSUT1 Pagination
00046680.kp on;.h4 IKSUT2
00046690This file contains the various topic heads and associated information,
00046700as generated in SCR074, to be used by SCR075 to generate the table of contents.
00046710.kp off;.ke IKSUT2 .tc 'Table of Contents'
00046720.kp on;.h4 SYSLIBF
00046730This is an optional file containing a library of set symbols.
00046740.kp off;.ke .su Substitution Syslibf
00046750.kp on;.h4 SYSOUT
00046760This file will receive all formatted output.
00046770It may be directed to the user's terminal, or to a line-printer, or to some internal dataset.
00046780.kp off;.ke SYSOUT
00046790.kp on;.h4 SYSPRINT
00046800This file will print or type out all error messages and prompts.
00046810It will also receive the optional unformatted report and any requested debug tracing.
00046820.br;.kp off;.ke Sysprint
00046830.kp on;.h3 Linkage Editor / Overlay
00046840.nf;.in 4;.im overlay
00046850.fo;.in 0;.kp off;.br
00046860.kp on;.h2 Installation Instructions
00046870All program materials are preserved in Teledyne Ryan's computer program archive (Engineering).
00046880The form of this is a single magnetic tape of information in a format chosen for convenient access in Ryan's IBM/OS environment; this is a set of IEBCOPY (VS version) copies files:
00046890.sp;   1. entire PDS of PL/I source procedures and supports.
00046900   2. entire PDS of equivalent object "decks".
00046910   3. a single executable load module.
00046920   4. one SCRIPT file containing the complete documentation.
00046930.sp;A distributed tape would contain only the source and documentation (with no__ dependance upon local libraries).
00046940Of course, card decks or tapes in other formats could be created for other than an IBM/OS environment.
00046950.kp off;.br;.cs 1 off
00046960.tt /Ryan SCRIPT//User Guide/
00046970.pa;.rm 5;.nb;.ix
00046980.ce;Reader's Comment Form
00046990.fo;.sp 2;.in 0;Your views about this publication may help improve its usefulness;
00047000this form will be sent to the author's department for appropriate action.
00047010.sp;Possible topics for comment are:
00047020Clarity, Accuracy, Completeness, Organization, Index, Figures, Examples and Legibility.
00047030.bt $Thank you for your cooperation.$$... Good Luck!$;.bt 3 $Release: &SYSDATE.$$Page &$;.fs 3;.bm 8
00047040.se Total=&
