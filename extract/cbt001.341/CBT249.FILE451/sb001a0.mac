++USERMOD(SB001A0)  /*  ROCKWELL INTERNATIONAL USERMOD */
   /*     BDTUX19 BASE CODE                                  */.
++VER(Z038) FMID(HBD1102)
            PRE(
                UZ73936
                              )         /*  END OF PREREQS  */
        /* END OF ++VER */  .
++JCLIN.
//LINK  EXEC PGM=IEWL,PARM='XREF,LIST,LET,NCAL,SIZE=(768K,100K),RENT
//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,(1,1))
//AOSBA    DD DISP=SHR,DSN=SYS1.AOSBA
//SYSLMOD  DD DISP=SHR,DSN=SYS1.LPALIB
//SYSPRINT DD SYSOUT=A
//SYSLIN   DD *
 INCLUDE AOSBA(BDTUX19)             * INCLUDE ORIGINAL MODULE
  ORDER          BDTLP
  ORDER          BDTGRSC
  ENTRY          BDTLP
 NAME    BDTLP                      * LOAD MODULE NAME
/*
++SRC    (BDTUX19 )
   SYSLIB(JES3SRC )
  DISTLIB(AJES3SRC)
    /* UPDATE FOLLOWS */ .
*@@ START --- ROCKWELL INTERNATIONAL BDT  MOD PROLOG --------- @SB001A0
*@                                                             @SB001A0
*@                                                             @SB001A0
*@ FUNCTION:  BDTUX19 - LANGUAGE PROCESSOR EXIT                @SB001A0
*@                                                             @SB001A0
*@                                                             @SB001A0
*@                                                             @SB001A0
*@ DEPENDENCIES:                                               @SB001A0
*@             N/A                                             @SB001A0
*@                                                             @SB001A0
*@ RESTRICTIONS:                                               @SB001A0
*@             N/A                                             @SB001A0
*@                                                             @SB001A0
*@ REGISTER CONVENTIONS:                                       @SB001A0
*@                                                             @SB001A0
*@                  REGISTER 0 = WORK REGISTER                 @SB001A0
*@                  REGISTER 1 = POINTER TO PARAMETER LIST     @SB001A0
*@                  REGISTER 2 = WORK REGISTER                 @SB001A0
*@                  REGISTER 3 = WORK REGISTER                 @SB001A0
*@                  REGISTER 4 = GETMAINED AREA                @SB001A0
*@                  REGISTER 5 = WORK REG                      @SB001A0
*@                  REGISTER 6 = BALR REGISTER                 @SB001A0
*@                  REGISTER 7 = ACCVT                         @SB001A0
*@                  REGISTER 8 = MODULE BASE                   @SB001A0
*@                  REGISTER 9 = BSID BASE                     @SB001A0
*@                  REGISTER 10= MODULE BASE                   @SB001A0
*@                  REGISTER 11= NOT IN USE                    @SB001A0
*@                  REGISTER 13= SAVE AREA SET UP BY ASAVE     @SB001A0
*@                  REGISTER 14= RETURN ADDRESS                @SB001A0
*@                  REGISTER 15= ENTRY POINT/RETURN CODE       @SB001A0
*@ ENTRY POINTS:                                               @SB001A0
*@             BDTUX19                                         @SB001A0
*@                                                             @SB001A0
*@ ENTRY PURPOSE:                                              @SB001A0
*@             N/A                                             @SB001A0
*@                                                             @SB001A0
*@ ENTRY LINKAGE:                                              @SB001A0
*@             BALR R14,15   FROM BDTLP                        @SB001A0
*@ INPUT:                                                      @SB001A0
*@             R13 -> SAVE AREA                                @SB001A0
*@             R1  -> PARAMETER LIST WHICH CONTAINS            @SB001A0
*@                    ADDRESS OF BSID                          @SB001A0
*@                    NEXT AVAILABLE BYTE IN MJD               @SB001A0
*@                    ADDRESS MSG TO RETURN TO CALLER          @SB001A0
*@                                                             @SB001A0
*@ EXIT:                                                       @SB001A0
*@             BR   R14                                        @SB001A0
*@                                                             @SB001A0
*@ OUTPUT:                                                     @SB001A0
*@             UPDATED MJD OR ERROR MESSAGE                    @SB001A0
*@                                                             @SB001A0
*@ EXTERNAL ROUTINES:                                          @SB001A0
*@             N/A                                             @SB001A0
*@                                                             @SB001A0
*@ CONTROL BLOCKS:                                             @SB001A0
*@             BDTDBSID         R/W                            @SB001A0
*@             BDTDMJD          R/W                            @SB001A0
*@             BDTDGSD          R/W                            @SB001A0
*@                                                             @SB001A0
*@ EXECUTABLE MACROS:                                          @SB001A0
*@             SETRP                                           @SB001A0
*@             GETMAIN                                         @SB001A0
*@             FREEMAIN                                        @SB001A0
*@                                                             @SB001A0
*@ CHANGE ACTIVITY                                             @SB001A0
*@                                                             @SB001A0
*@                                                             @SB001A0
*@@ END ----- ROCKWELL INTERNATIONAL JES3 MOD PROLOG --------- @SB001A0
*END OF SPECIFICATIONS*****************************************@SB001A0
BDTUX19  START   0                                             @SB001A0
         BDTDBSID                                              @SB001A0
BSIDUFLG EQU   BSIDRSU1,1,C'X'     USER FLAG                   @SB001A0
         BDTDDATU                                              @SB001A0
         BDTDGSD                                               @SB001A0
         BDTDMJD                                               @SB001A0
         IHASDWA                                               @SB001A0
         IHAPSA                                                @SB001A0
         IKJTCB LIST=YES                                       @SB001A0
         BDTDREG                                               @SB001A0
*--------------------------------------------------------------@SB001A0
*        USER EQUATES                                          @SB001A0
*--------------------------------------------------------------@SB001A0
RCAUTHRZ EQU   0                   RETURN CODE 0 = AUTHORIZED  @SB001A0
RCFAILTR EQU   4                   RETURN CODE 4 = UNAUTHORIZED@SB001A0
RCRETRY  EQU   4                   RETURN CODE 4 = RETRY       @SB001A0
RCNORTRY EQU   0                   RETURN CODE 0 = NO RETRY    @SB001A0
ZERO     EQU   0                   USE TO INITIALIZE STORAGE   @SB001A0
*--------------------------------------------------------------@SB001A0
*        USER DSECT FOR WORK AREA                              @SB001A0
*                                                              @SB001A0
*        WORK AREA IS PASSED TO ESTAE MACRO AS USER PARAMETER L@SB001A0
*        THIS IS NECESSARY SO THAT, IF AN ABEND OCCURS, ADDRESS@SB001A0
*        BILITY TO THE AREA CAN BE REESTABLISHED.  DSECT CONTAI@SB001A0
*        FIELDS WHICH ARE NEEDED IN ESTAE RECOVERY ROUTINE, RET@SB001A0
*        ROUTINE OR COMMON EXIT FROM MODULE.                   @SB001A0
*                                                              @SB001A0
*        NOTE:  IF ADDITIONAL WORK AREA IS REQUIRED, ADD IT TO @SB001A0
*        DSECT (PREFERABLY BETWEEN UXESTLEN AND UXMAPLEN), SO  @SB001A0
*        ADDITIONAL GETMAINS ARE NOT NECESSARY.                @SB001A0
*--------------------------------------------------------------@SB001A0
UXPARMAP DSECT                     MAP OF USER PARAMETER LIST  @SB001A0
UXWORKID DS    F                   CONTAINS 'WORK' FOR IDENTIFI@SB001A0
UXTVTADD DS    F                   ADDRESS OF TVT,SAVED FOR RET@SB001A0
UXGSDADD DS    F                   ADDRESS OF GSD,SAVED FOR ABE@SB001A0
UXBASE   DS    F                   MOD BASE ADR,SAVED FOR RETRY@SB001A0
UXBASE2  DS    F                   MOD BASE2 ADDR              @SB001A0
UXTOKEN  DS    F                   TOKEN USED IN ESTAE         @SB001A0
UXESTFLG DS    B                   INDICATES ESTAE STATUS      @SB001A0
UXESTSUC EQU   BIT0                ESTAE ESTABLISHED SUCCESSFUL@SB001A0
UXESTREP EQU   BIT1                ESTAE RECOVERY ALREADY ENTER@SB001A0
UXESTAPM DS    0F                  ESTAE MACRO PARAMETER LIST  @SB001A0
         ESTAE MF=L                                            @SB001A0
UXESTLEN EQU   *-UXESTAPM          LENGTH OF ESTAE LIST        @SB001A0
*************END OF STANDARD GETMAIN AREA*********             @SB001A0
UXPARMAD DS    F                  SAVE ADDRESS OF PARM LIST    @SB001A0
UXSAVE   DS    18F                                             @SB001A0
NEXTSLOT DS    F                  ADDRESS OF NEXT BYTE IN MJD  @SB001A0
BSIDENDA DS    F                  END ADDRESS OF BSID          @SB001A0
FINDTUSR DS    F                  SAVE RETURN FROM FINDTU      @SB001A0
UXMAPLEN EQU   *-UXPARMAP          LENGTH OF THIS MAPPING      @SB001A0
*--------------------------------------------------------------@SB001A0
*        DSECT FOR PARAMETER LIST FROM CALLER                  @SB001A0
*                                                              @SB001A0
*        PARAMETER LIST (12 BYTES)                             @SB001A0
*--------------------------------------------------------------@SB001A0
UXPARMIN DSECT                     PARAMETER LIST PASSED BY CAL@SB001A0
UXBSIDAD DS    A                   ADDRESS OF BSID             @SB001A0
UXNXTMJD DS    A                   NEXT AVAILABLE BYTE IN MJD  @SB001A0
UXUSRMSG DS    A                   ADDRESS OF USER MSG         @SB001A0
BDTUX19  CSECT                                                 @SB001A0
*--------------------------------------------------------------@SB001A0
*        INVOKE BDTDMOD TO IDENTIFY MODULE                     @SB001A0
*                                                              @SB001A0
*        NOTE THAT CONSTANTS GENERATED BY THIS MACRO ARE ALSO U@SB001A0
*        IN ESTAE RECOVERY ROUTINE TO UPDATE THE SDWA.         @SB001A0
*--------------------------------------------------------------@SB001A0
*        BDTDMOD LABELS=YES                                    @SB001A0
*--------------------------------------------------------------@SB001A0
         SPACE 1                                               @SB001A0
         B     ENDCATCH-*(,R15)    BR AROUND ENTRY INFORMATION @SB001A0
         DC    AL1(ENDCATCH-*-1)   LENGTH OF ENTRY INFORMATION @SB001A0
MDNUX19  DC    CL8'BDTUX19'        MODULE NAME                 @SB001A0
MDLUX19  DC    CL8'       '        LABEL NAME                  @SB001A0
MDRUX19  DC    CL9' HBD1102 '      BDT RELEASE OR PTF NUMBER   @SB001A0
MDDUX19  DC    CL8'&SYSDATE'       ASSEMBLY DATE               @SB001A0
MDTUX19  DC    CL6'-&SYSTIME'      ASSEMBLY TIME               @SB001A0
         SPLEVEL SET=1                                         @SB001A0
ENDCATCH DS    0H                                              @SB001A0
*        ESTABLISH ADDRESSABILITY                              @SB001A0
*                                                              @SB001A0
*        REGISTERS ARE NOT SAVED BECAUSE THE CALLING PROGRAM   @SB001A0
*  SAVES THEM VIA BDTXUEX.                                     @SB001A0
*--------------------------------------------------------------@SB001A0
UXINIT   DS    0H                                              @SB001A0
         SAVE  (14,12)             SAVE THE REGISTERS          @SB001A0
         LR    R10,R15             SET BASE REGISTER           @SB001A0
         USING BDTUX19,R10,R8      ESTABLISH ADDRESSABILITY    @SB001A0
         LA    R8,1(R10)           2ND BASE                    @SB001A0
         LA    R8,4095(R8)         2ND BASE                    @SB001A0
         USING UXPARMIN,R1         ESTABLISH ADDRESSAB. TO PARM@SB001A0
         L     R9,UXBSIDAD         SET BASE FOR BSID           @SB001A0
         USING BSID,R9             ESTABLISH ADDRESSAB. TO BSID@SB001A0
         LR    R2,R1               SAVE ADDRESS OF PARMLIST    @SB001A0
         DROP  R1                                              @SB001A0
*--------------------------------------------------------------@SB001A0
*        GETMAIN WORK AREA                                     @SB001A0
*                                                              @SB001A0
*        IF GETMAIN IS UNSUCCESSFUL, SET REGISTER 4 TO ZERO TO @SB001A0
*        INDICATE FAILURE, SKIP ESTAE SETUP AND BEGIN          @SB001A0
*        MAINLINE ROUTINE - MODULE WILL EXECUTE UNDER RECOVERY @SB001A0
*        ROUTINE ESTABLISHED FOR CALLER.                       @SB001A0
*--------------------------------------------------------------@SB001A0
         LA    R4,UXMAPLEN         LENGTH OF AREA NEEDED       @SB001A0
         GETMAIN RC,LV=(R4)        GET STORAGE FOR PARAMETER LI@SB001A0
         LTR   R15,R15             WAS STORAGE OBTAINED?       @SB001A0
         BZ    UXGETOK             YES, INITIALIZE STORAGE     @SB001A0
         XR    R4,R4               NO, INDICATE GETMAIN FAILURE@SB001A0
         B     UXRTONLY            RETURN                      @SB001A0
UXGETOK  DS    0H                                              @SB001A0
         LR    R4,R1               SET BASE FOR PARM LIST      @SB001A0
         USING UXPARMAP,R4         ESTABLISH ADDRESSABILITY TO @SB001A0
         MVI   UXPARMAP,ZERO       SET PAD CHARACTER TO ZERO   @SB001A0
*                                  INITIALIZE STORAGE TO ZEROES@SB001A0
         MVC   UXPARMAP+1(UXMAPLEN),UXPARMAP                   @SB001A0
         MVC   UXWORKID,UXWKCONS   SET IDENTIFICATION TO 'WORK'@SB001A0
         ST    R13,UXSAVE+4        SAVE OLD SAVE AREA ADDR     @SB001A0
         LA    R11,UXSAVE          NEW SAVE AREA ADDR          @SB001A0
         ST    R11,8(R13)          SAVE NEW SAVE AREA          @SB001A0
         LR    R13,R11                                         @SB001A0
*--------------------------------------------------------------@SB001A0
*        ESTABLISH AN ESTAE                                    @SB001A0
*                                                              @SB001A0
*        1. BUILD USER PARAMETER LIST.                         @SB001A0
*        2. INITIALIZE ESTAE MACRO LIST;  ISSUE ESTAE.         @SB001A0
*        3. IF ESTAE SUCCESSFUL, SET BIT 0 IN 'ESTAE SUCCESS FL@SB001A0
*           TO 1.                                              @SB001A0
*        4. IF ESTAE IS UNSUCCESSFUL, LEAVE BIT 0 IN 'ESTAE SUC@SB001A0
*           FLAG' EQUAL TO ZERO.  (FLAG CONTAINS ALL ZEROES AS @SB001A0
*           RESULT OF STORAGE INITIALIZATION AFTER GETMAIN.)   @SB001A0
*           BEGIN MAINLINE ROUTINE - MODULE WILL EXECUTE UNDER @SB001A0
*           RECOVERY ESTABLISHED FOR CALLER.                   @SB001A0
*--------------------------------------------------------------@SB001A0
         USING PSA,R0              ESTABLISH ADDRESSAB. TO PSA @SB001A0
         L     R3,PSATOLD          SET BASE FOR TCB            @SB001A0
         USING TCB,R3              ESTABLISH ADDRESSAB. TO TCB @SB001A0
         L     R3,TCBBDT           SET BASE FOR GSD            @SB001A0
         USING GSDSTART,R3         ESTABLISH ADDRESSAB. TO GSD @SB001A0
         CLC   GSDID,UXGSDID       IS THERE A GSD?             @SB001A0
         BNE   UXNOESTA            NO, SKIP ESTAE SET UP       @SB001A0
         ST    R3,UXGSDADD         STORE ADDRESS OF GSD IN PARM@SB001A0
         ST    R10,UXBASE          STORE MODULE BASE FOR RETRY @SB001A0
         ST    R8,UXBASE2          STORE SECOND BASE           @SB001A0
*                                  MOVE ESTAE MODEL OVER STORAG@SB001A0
         MVC   UXESTAPM(UXESTLEN),ESTMODEL                     @SB001A0
         ESTAE UXESTAE,CT,PARAM=(R4),RECORD=YES,               @SB001A0+
               TOKEN=UXTOKEN,MF=(E,UXESTAPM)                   @SB001A0
         LTR   R15,R15             WAS ESTAE SUCCESSFUL?       @SB001A0
         BNZ   UXNOESTA            NO, DO NOT SET FLAG         @SB001A0
         OI    UXESTFLG,UXESTSUC   SET FLAG SUCDESSFULE EXTAEL @SB001A0
UXNOESTA DS    0H                                              @SB001A0
         DROP  R0,R3                                           @SB001A0
*--------------------------------------------------------------@SB001A0
*        MAINLINE ROUTINE                                      @SB001A0
*                                                              @SB001A0
*                                                              @SB001A0
*                                                              @SB001A0
*--------------------------------------------------------------@SB001A0
UXMAIN   DS    0H                                              @SB001A0
         USING UXPARMIN,R2                                     @SB001A0
         MVC   NEXTSLOT,UXNXTMJD       MOVE NEXT BYTE TO GETMAI@SB001A0
         LH    R0,BSIDTOTL             LENGTH OF BSID          @SB001A0
         AR    R0,R9                   END OF BSID             @SB001A0
         ST    R0,BSIDENDA             SAVE BSID END ADDRESS   @SB001A0
         DROP  R2                                              @SB001A0
         ST    R2,UXPARMAD         SAVE ADDRESS OF PARMLIST    @SB001A0
*--------------------------------------------------------------@SB001A0
*        COMMON EXIT ROUTINE - THIS EXIT ROUTINE IS ALWAYS USED@SB001A0
*        TO RETURN TO CALLER OF MODULE (I.E., NORMAL EXIT AND  @SB001A0
*        EXIT AFTER ESTAE RETRY ROUTINE).                      @SB001A0
*                                                              @SB001A0
*        REGISTER 4 AND UXESTFLG (SUCCESSFUL ESTAE FLAG) ARE   @SB001A0
* TESTED TO DETERMINE WHETHER TO CANCEL ESTAE AND INVOKE FREEMA@SB001A0
*                                                              @SB001A0
*        1.  IF REG 4 IS ZERO, GETMAIN WAS UNSUCCESSFUL AND THE@SB001A0
*            IS NO ESTAE TO CANCEL.                            @SB001A0
*        2.  IF REG 4 IS NOT ZERO, TEST FOR ESTAE.             @SB001A0
*            A.  IF UXESTSUC IS OFF, THERE IS NO ESTAE TO CANCE@SB001A0
*                DO FREEMAIN AND RETURN.                       @SB001A0
*            B.  IF UXESTSUC IS ON, CANCEL ESTAE, FREEMAIN AND @SB001A0
*                RETURN.                                       @SB001A0
*--------------------------------------------------------------@SB001A0
UXRETURN DS    0H                                              @SB001A0
         LR    R3,R15              TEMPORARILY SAVE RETURN CODE@SB001A0
         LTR   R4,R4               WAS GETMAIN SUCCESSFUL?     @SB001A0
         BZ    UXRTONLY            NO, THEN NO ESTAE TO CANCEL,@SB001A0
         TM    UXESTFLG,UXESTSUC   WAS ESTAE ESTABLISHED?      @SB001A0
         BNO   UXRTFREE      NO, SKIP ESTAE CANCEL, DO FREEMAIN@SB001A0
         ESTAE 0,TOKEN=UXTOKEN     CANCEL ESTAE                @SB001A0
UXRTFREE DS    0H                                              @SB001A0
         L     R13,UXSAVE+4        POINT TO OLD SAVE AREA      @SB001A0
         FREEMAIN  RC,LV=UXMAPLEN,A=(R4)  FREE THE STORAGE     @SB001A0
UXRTONLY DS    0H                                              @SB001A0
         LR    R15,R3              RESTORE RETURN CODE         @SB001A0
         L     R14,12(R13)         RESTORE RETURN ADDRESS      @SB001A0
         LM    R0,R12,20(R13)      RESTORE REMAINING REGS      @SB001A0
         BR    R14                 RETURN                      @SB001A0
*--------------------------------------------------------------@SB001A0
*        ESTAE RECOVERY EXIT                                   @SB001A0
*                                                              @SB001A0
*        THIS ROUTINE SAVES ABEND INFORMATION IN THE SDWA AND S@SB001A0
*        THE RETURN CODE FOR RTM INDICATING RETRY.  THIS ESTAE @SB001A0
*        RECOVERY ROUTINE IS USED IN CONJUNCTION WITH THE RETRY@SB001A0
*        ROUTINE, UXRETRY.  IF THIS RECOVERY ROUTINE IS CHANGED@SB001A0
*        CARE MUST BE TAKEN TO ENSURE THAT ASSUMPTIONS MADE BY @SB001A0
*        UXRETRY (E.G., REGISTER CONVENTIONS) ARE STILL VALID. @SB001A0
*                                                              @SB001A0
*        THIS ROUTINE DOES NOT RETRY WHEN IT IS ENTERED FOR THE@SB001A0
*        SECOND TIME.  THIS PREVENTS A LOOP CAUSED BY A RECURSI@SB001A0
*        ERROR.                                                @SB001A0
*                                                              @SB001A0
*        REGISTER INTERFACE TO RECOVERY ROUTINE (UXESTAE) DEPEN@SB001A0
*        ON WHETHER OR NOT RTM OBTAINED SDWA.  NORMALLY, AN SDW@SB001A0
*        WILL BE OBTAINED.                                     @SB001A0
*                                                              @SB001A0
*        TWO REGISTERS ARE ALWAYS SET THE SAME BY RTM REGARDLES@SB001A0
*        SDWA STATUS:                                          @SB001A0
*               REGISTER 14 - RETURN ADDRESS                   @SB001A0
*               REGISTER 15 - ENTRY POINT ADDRESS OF ESTAE RECO@SB001A0
*                             ROUTINE                          @SB001A0
*                                                              @SB001A0
*        IF SDWA WAS OBTAINED, REGISTERS UPON ENTRY TO UXESTAE @SB001A0
*               REGISTER 0  - A CODE INDICATING THE TYPE OF I/O@SB001A0
*                             PROCESSING PERFORMED             @SB001A0
*                             0  - ACTIVE I/O HAS BEEN QUIESCED@SB001A0
*                                  IS RESTORABLE               @SB001A0
*                             4  - ACTIVE I/O HAS BEEN HALTED A@SB001A0
*                                  NOT RESTORABLE              @SB001A0
*                             8  - NO ACTIVE I/O AT ABEND TIME @SB001A0
*                             16 - NO I/O PROCESSING WAS PERFOR@SB001A0
*               REGISTER 1  - ADDRESS OF SDWA                  @SB001A0
*               REGISTER 13 - SAVE AREA ADDRESS (72 BYTES)     @SB001A0
*               OTHER REGISTERS, WITH THE EXCEPTION OF 14 & 15 @SB001A0
*               UNPREDICTABLE.                                 @SB001A0
*                                                              @SB001A0
*        IF SDWA WAS NOT OBTAINED, REGISTERS UPON ENTRY ARE:   @SB001A0
*               REGISTER 0  - A DECIMAL 12 INDICATING NO SDWA  @SB001A0
*               REGISTER 1  - ABEND COMPLETION CODE            @SB001A0
*               REGISTER 2  - ADDRESS OF USER-SUPPLIED PARAMETE@SB001A0
*               OTHER REGISTERS, WITH THE EXCEPTION OF 14 & 15 @SB001A0
*               UNPREDICTABLE.                                 @SB001A0
*--------------------------------------------------------------@SB001A0
         SPACE 1                                               @SB001A0
UXESTAE  DS    0H                                              @SB001A0
         PUSH  USING               SAVE CURRENT ADDRESSABILITY @SB001A0
         DROP  ,                                               @SB001A0
         USING *,R15               SET BASE FOR ESTAE ROUTINE  @SB001A0
         CH    R0,=H'12'           ESTAE WORK AREA,SDWA AVAILAB@SB001A0
         BNE   UXSDWA              YES, SDWA AVAILABLE, TAKE BR@SB001A0
         SPACE 1                                               @SB001A0
*--------------------------------------------------------------@SB001A0
*        IF SDWA NOT PROVIDED, DETERMINE WHETHER TO RETRY.     @SB001A0
*--------------------------------------------------------------@SB001A0
         SPACE 1                                               @SB001A0
         USING UXPARMAP,R2         ESTABLISH BASE FOR PARAM LIS@SB001A0
         TM    UXESTFLG,UXESTREP   FIRST TIME THRU ESTAE?      @SB001A0
         BNO   UXRETRY1            YES, SET UP RETRY           @SB001A0
         FREEMAIN RC,LV=UXMAPLEN,A=(R2)  NO, FREE STORAGE      @SB001A0
         LA    R15,RCNORTRY        DO NOT RETRY                @SB001A0
         BR    R14                 RETURN TO RTM               @SB001A0
         SPACE 1                                               @SB001A0
UXRETRY1 DS    0H                                              @SB001A0
         OI    UXESTFLG,UXESTREP   SET FLAG MARKING FIRST USE  @SB001A0
         LA    R0,UXRETRY          ADDRESS OF RETRY ROUTINE    @SB001A0
         LA    R15,RCRETRY         SET RETRY RETURN CODE FOR RT@SB001A0
         BR    R14                 RETURN TO RTM               @SB001A0
         SPACE 1                                               @SB001A0
*--------------------------------------------------------------@SB001A0
*        IF SDWA PROVIDED, UPDATE SDWA AND DETERMINE WHETHER TO@SB001A0
*        RETRY.                                                @SB001A0
*--------------------------------------------------------------@SB001A0
         SPACE 1                                               @SB001A0
UXSDWA   DS    0H                                              @SB001A0
         STM   R14,R12,12(R13)     SAVE REGS WHERE INDICATED BY@SB001A0
         LR    R4,R1               ESTABLISH ADDRESSABILITY . .@SB001A0
         USING SDWA,R4                  . . . TO SDWA          @SB001A0
         L     R2,SDWAPARM         LOAD ADDRESS OF PARM LIST   @SB001A0
         USING UXPARMAP,R2         ESTABLISH BASE FOR PARAM LIS@SB001A0
         L     R10,UXBASE          CHANGE BASE REGISTER . . .  @SB001A0
         LA    R8,2048(R10)                                    @SB001A0
         LA    R8,2048(R8)                                     @SB001A0
         USING BDTUX19,R10,R8           . . . FOR THIS ROUTINE @SB001A0
         DROP  R15                                             @SB001A0
         SPACE 1                                               @SB001A0
*--------------------------------------------------------------@SB001A0
*        UPDATE THE SDWA                                       @SB001A0
*--------------------------------------------------------------@SB001A0
         SPACE 1                                               @SB001A0
         MVC   SDWAMODN(8),UXMODN  SET NAME OF LOAD MODULE     @SB001A0
         MVC   SDWACSCT(8),MDNUX19 SET NAME OF CSECT           @SB001A0
         MVC   SDWAREXN(8),MDNUX19 SET CSECT WITH RECOVERY ROUT@SB001A0
         L     R3,SDWAXPAD         LOAD SDWA EXTENSION POINTERS@SB001A0
         USING SDWAPTRS,R3         ESTABLISH ADDRESSABILITY    @SB001A0
         L     R3,SDWASRVP         LOAD RECORDABLE EXTENSION AD@SB001A0
         USING SDWARC1,R3          ESTABLISH ADDRESSABILITY    @SB001A0
         MVC   SDWACID(5),UXACID   SET COMPONENT ID            @SB001A0
         MVC   SDWASC(23),UXASC    SET NAME OF SUBCOMPONENT    @SB001A0
         MVC   SDWAMDAT(8),MDDUX19 SET DATE OF ASSEMBLY        @SB001A0
         MVC   SDWAMVRS(8),MDRUX19 SET PTF OR PRODUCT NUMBER   @SB001A0
         MVC   SDWARRL(8),UXRRL    IDENTIFY ROUTINE UPDATING SD@SB001A0
         TM    UXESTFLG,UXESTREP   FIRST TIME THRU ESTAE?      @SB001A0
         BNO   UXRETRY2            YES, SET UP RETRY           @SB001A0
         FREEMAIN RC,LV=UXMAPLEN,A=(R2)  NO, FREE STORAGE      @SB001A0
         SETRP RC=0,WKAREA=(R4)    DO NOT RETRY                @SB001A0
         LM    R14,R12,12(R13)     RESTORE REGISTERS           @SB001A0
         BR    R14                 RETURN TO RTM               @SB001A0
         SPACE 1                                               @SB001A0
UXRETRY2 DS    0H                                              @SB001A0
         OI    UXESTFLG,UXESTREP   MARK FIRST USE              @SB001A0
         SETRP RC=4,RETADDR=UXRETRY,FRESDWA=YES,               @SB001A0*
               WKAREA=(R4)                                     @SB001A0
         LM    R14,R12,12(R13)     RESTORE REGISTERS           @SB001A0
         BR    R14                 RETURN TO RTM               @SB001A0
         SPACE 1                                               @SB001A0
*--------------------------------------------------------------@SB001A0
*        POP THE USING STACK HERE TO RE-ESTABLISH USINGS IN EFF@SB001A0
*        PRIOR TO ESTAE RECOVERY ROUTINE.                      @SB001A0
*--------------------------------------------------------------@SB001A0
         SPACE 1                                               @SB001A0
         POP   USING                                           @SB001A0
         EJECT                                                 @SB001A0
         SPACE 1                                               @SB001A0
*--------------------------------------------------------------@SB001A0
*        RETRY ROUTINE FOR ESTAE                               @SB001A0
*                                                              @SB001A0
*        THIS ROUTINE IS USED IN CONJUNCTION WITH THE ESTAE REC@SB001A0
*        ROUTINE, UXESTAE.  THE RETRY ROUTINE 'FAILS' THE BDT  @SB001A0
*        REQUEST BY SETTING THE RETURN CODE TO 4 AND RETURNING @SB001A0
*        THE CALLING MODULE.  BEFORE BRANCHING TO THE COMMON EX@SB001A0
*        FOR THE MODULE, THE RETRY ROUTINE REESTABLISHES ADDRES@SB001A0
*        BILITY TO THE TVT.  (ADDRESSABILITY TO THE USER PARAME@SB001A0
*        LIST WAS REESTABLISHED BY THE 'POP USING' AT THE END O@SB001A0
*        THE ESTAE RECOVERY ROUTINE.  PARAMETER LIST IS BASED O@SB001A0
*        REGISTER 4.)                                          @SB001A0
*                                                              @SB001A0
*        THE REGISTER INTERFACE TO THE RETRY ROUTINE (UXRETRY) @SB001A0
*        DEPENDS ON THE CODING OF THE 'SETRP' MACRO IN THE RECO@SB001A0
*        ROUTINE (UXESTAE) AND ON WHETHER OR NOT RTM OBTAINED A@SB001A0
*        SDWA.  NORMALLY, AN SDWA WILL HAVE BEEN OBTAINED BUT T@SB001A0
*        THE REGISTER INTERFACE WHEN THERE WAS AN SDWA IS SET U@SB001A0
*        AS DESCRIBED BELOW ONLY BECAUSE THE 'SETRP' SPECIFIED @SB001A0
*        FREE SDWA & NO REGISTER UPDATE.  IF THESE PARAMETERS A@SB001A0
*        CHANGED ON THE 'SETRP', THE RETRY ROUTINE MUST ALSO BE@SB001A0
*        CHANGED.                                              @SB001A0
*                                                              @SB001A0
*        THE VALUE IN REGISTER 0 DEPENDS UPON WHETHER OR NOT RT@SB001A0
*        OBTAINED AN SDWA:                                     @SB001A0
*               REGISTER 0  - DECIMAL 20 IF SDWA WAS OBTAINED  @SB001A0
*                           - DECIMAL 12 IF SDWA WAS NOT OBTAIN@SB001A0
*                                                              @SB001A0
*        FOUR REGISTERS ARE ALWAYS SET THE SAME BY RTM REGARDLE@SB001A0
*        SDWA STATUS:                                          @SB001A0
*               REGISTER 1  - ADDRESS OF USER PARAMETER LIST   @SB001A0
*                             ESTABLISHED USING ESTAE MACRO    @SB001A0
*               REGISTER 2  - POINTER TO PIRL IF I/O WAS QUIESC@SB001A0
*                             IS RESTORABLE; OTHERWISE ZERO    @SB001A0
*               REGISTER 14 - ADDRESS OF SUPERVISOR-ASSIGNED EX@SB001A0
*                             LINKAGE (SVC3)                   @SB001A0
*               REGISTER 15 - ENTRY POINT ADDRESS OF ESTAE RETR@SB001A0
*                             ROUTINE                          @SB001A0
*               REGISTERS BESIDES 0,1,2,14 & 15 ARE UNPREDICTAB@SB001A0
*--------------------------------------------------------------@SB001A0
UXRETRY  DS    0H                                              @SB001A0
         LR    R4,R1               SET BASE REGISTER FOR PARAME@SB001A0
         L     R10,UXBASE          RESTORE MODULE BASE FOR EXIT@SB001A0
         L     R8,UXBASE2          SECOND BASE                 @SB001A0
         L     R12,UXTVTADD        RESTORE BASE FOR TVT        @SB001A0
         LA    R15,RCFAILTR        SET RETURN CODE FAILING BDT @SB001A0
         B     UXRETURN            RETURN TO CALLER            @SB001A0
*--------------------------------------------------------------@SB001A0
*        MODEL FOR ESTAE MACRO (LIST FORM). USED TO INITIALIZE @SB001A0
*        ACTUAL LIST REFERENCED IN EXECUTE FORM OF ESTAE MACRO.@SB001A0
*        DO NOT STORE INTO THIS AREA.                          @SB001A0
*--------------------------------------------------------------@SB001A0
ESTMODEL ESTAE MF=L                'MODEL' FOR ESTAE PARM LIST @SB001A0
*------------------------------------------------------------- @SB001A0
*   ROUTINES COPIED FROM BDTLP AND MODIFIED                    @SB001A0
*--------------------------------------------------------------@SB001A0
*   FINDTU - FIND A TEXT UNIT IN THE BSID                      @SB001A0
*   FOUND -  RETURN +4, R1 -> DATUNIT                          @SB001A0
* NOTFOUND-  RETURN +0                                         @SB001A0
*--------------------------------------------------------------@SB001A0
FINDTU   DS    0H                                              @SB001A0
         PUSH  USING               SAVE CURRENT USING STATUS   @SB001A0
         SPACE 1                                               @SB001A0
*-------------------------------------------------------------*@SB001A0
*        SET UP TO PERFORM A SCAN OF MJD TEXT UNITS           *@SB001A0
*-------------------------------------------------------------*@SB001A0
         SPACE 1                                               @SB001A0
         ST    R6,FINDTUSR         SAVE RETURN ADDRESS         @SB001A0
         LR    R6,R0               PUT TYPE INTO R6            @SB001A0
         SRL   R6,24               PUT TYPE IN LOW BYTE        @SB001A0
         LA    R1,BSIDDATA         POINT TO START OF TEXT      @SB001A0
         USING MJDSTART,R1                                     @SB001A0
         AH    R1,MJDFXDLN         UNITS IN THE MJD            @SB001A0
         DROP  R1                                              @SB001A0
         SLR   R15,R15             CLEAR R15 TO REC THE TEXT   @SB001A0
*                                  UNIT PARAMETER COUNT        @SB001A0
         SLR   R14,R14             CLEAR R14 TO REC THE TEXT   @SB001A0
*                                  UNIT PARAMETER LENGTH       @SB001A0
         SPACE 1                                               @SB001A0
*-------------------------------------------------------------*@SB001A0
*        TEST TEXT UNIT FOR KEY AND TYPE BEING SOUGHT         *@SB001A0
*-------------------------------------------------------------*@SB001A0
         SPACE 1                                               @SB001A0
FINDT100 DS    0H                                              @SB001A0
         C     R1,NEXTSLOT         END OF EXISTING TEXT UNITS? @SB001A0
         BNL   FINDT600            YES-                        @SB001A0
         USING DATUNIT,R1         NO- ESTABLISH ADDRESSABILITY @SB001A0
         CLM   R0,B'0011',DATUKEY DOES THIS TEXT UNIT'S KEY    @SB001A0
*                                  MATCH THAT BEING SOUGHT?    @SB001A0
         BE    FINDT500            YES, BRANCH                 @SB001A0
         SPACE 1                                               @SB001A0
*-------------------------------------------------------------*@SB001A0
*        NO MATCH ON THIS TEXT UNIT                           *@SB001A0
*-------------------------------------------------------------*@SB001A0
         SPACE 1                                               @SB001A0
FINDT200 DS    0H                                              @SB001A0
         CLC   DATUNUM,=H'0'      DOES THIS TEXT UNIT HAVE ANY @SB001A0
*                                  PARAMETER(S)?               @SB001A0
         BNE   FINDT300            YES-                        @SB001A0
         LA    R1,DATUENT         NO- PNT TO THE NEXT TEXT UNIT@SB001A0
         B     FINDT100            CONTINUE SEARCHING-         @SB001A0
         SPACE 1                                               @SB001A0
FINDT300 DS    0H                                              @SB001A0
         ICM   R15,B'0011',DATUNUM OBT THE NUM OF PARAMS ENT-  @SB001A0
*                            RIES CONTAINED IN THIS TEXT UNIT  @SB001A0
         PUSH  USING         ESTABLISH ADDRESSABILITY TO THEM  @SB001A0
         LA    R1,DATUENT    POINT TO THE NEXT TEXT UNIT       @SB001A0
         USING DATUENT,R1    ESTABLISH ADDRESSABILITY TO IT    @SB001A0
         SPACE 1                                               @SB001A0
FINDT400 DS    0H                                              @SB001A0
         ICM   R14,B'0011',DATULNG OBTAIN LENGTH OF THIS TEXT  @SB001A0
*                                  UNIT PARAMETER              @SB001A0
         LA    R1,DATUPAR(R14)    POINT TO NEXT TEXT UNIT      @SB001A0
*                                 PARAMETER ENTRY              @SB001A0
         BCT   R15,FINDT400        ANY MORE PARAM ENTRIES? YES-@SB001A0
         B     FINDT100            NO-                         @SB001A0
         POP   USING              RESTORE USING STATUS         @SB001A0
         SPACE 1                                               @SB001A0
*-------------------------------------------------------------*@SB001A0
*        TEST TEXT UNIT FOR BEING EITHER A BDT TEXT UNIT OR   *@SB001A0
*        A DYNAMIC ALLOCATION TEXT UNIT                       *@SB001A0
*-------------------------------------------------------------*@SB001A0
         SPACE 1                                               @SB001A0
FINDT500 DS    0H                                              @SB001A0
         SPACE 1                                               @SB001A0
*        USING TUDENTRY,R7        ESTABLISH ADDRESSABILITY     @SB001A0
*        TM    DATUFLG,DATUNDA    DYNAMIC ALLOCATION TEXT UNIT @SB001A0
*                                 FOUND ?                      @SB001A0
*        BZ    FINDT525           YES  -                       @SB001A0
         SPACE 1                                               @SB001A0
*        TM    TUDFLAG1,TUDDATU   NO - IS THE KEYWORD TO BEING @SB001A0
*                                 SOUGHT A DATU ?              @SB001A0
*        BO    FINDT200           YES -                        @SB001A0
         B     FINDT550           NO  - TEXT UNIT FOUND        @SB001A0
         SPACE 1                                               @SB001A0
FINDT525 DS    0H                                              @SB001A0
*        TM    TUDFLAG1,TUDDATU   IS THE KEYWORD BEING SOUGHT  @SB001A0
*                                 A DATU  ?                    @SB001A0
*        BZ    FINDT200           NO -                         @SB001A0
         SPACE 1                                               @SB001A0
*-------------------------------------------------------------*@SB001A0
*        TEXT UNIT OF SPECIFIED KEY AND TYPE FOUND            *@SB001A0
*-------------------------------------------------------------*@SB001A0
         SPACE 1                                               @SB001A0
FINDT550 DS    0H                                              @SB001A0
         L     R6,FINDTUSR      GET RETURN ADDRESS             @SB001A0
         B     4(R6)            RETURN TO CALLER'S NORMAL EXIT-@SB001A0
         SPACE 1                                               @SB001A0
*-------------------------------------------------------------*@SB001A0
*        TEXT UNIT OF SPECIFIED KEY AND TYPE NOT FOUND        *@SB001A0
*-------------------------------------------------------------*@SB001A0
         SPACE 1                                               @SB001A0
FINDT600 DS    0H                                              @SB001A0
         L     R6,FINDTUSR      GET RETURN ADDRESS             @SB001A0
         BR    R6          RETURN TO CALLER'S END-OF-DATA EXIT-@SB001A0
         SPACE 1                                               @SB001A0
         POP   USING       RESTORE USING STATUS                @SB001A0
         EJECT                                                 @SB001A0
*------------------------------------------------------------- @SB001A0
*     ERROR CONDTION  BSID LENGTH EXCEEDED WHEN ATTEMPTING     @SB001A0
*     TO ADD TEXT UNIT                                         @SB001A0
*------------------------------------------------------------- @SB001A0
UXBSEXCD DS    0H                                              @SB001A0
         L     R2,UXPARMAD        ADDRESS OF PARMLIST PASSED   @SB001A0
         USING UXPARMIN,R2                                     @SB001A0
         MVC   UXUSRMSG,MSG8ADDR  ADDRESS OF ERR MSG           @SB001A0
         LA    R15,RCFAILTR       FAIL THE TRANSACTION         @SB001A0
         B     UXRETURN           ERROR, FAIL TRANSACTION      @SB001A0
         DROP  R2                                              @SB001A0
MSG8ADDR DC    AL4(UX19MSG8)                                   @SB001A0
UX19MSG8 DC    AL1(MSG8END-MSG8STRT-1)                         @SB001A0
MSG8STRT DC    C'BDTR1908 TRANSACTION TEXT EXCEEDS MAXIMUM '   @SB001A0
         DC    C'ALLOWED.  TRANSACTION FAILED.'                @SB001A0
MSG8END  EQU   *                                               @SB001A0
*-------------------------------------------------------------*@SB001A0
*        CONSTANTS,LITERAL POOL, PATCH AREA                   *@SB001A0
*-------------------------------------------------------------*@SB001A0
UXGSDID  DC    CL4'GSD '            IDENTIFICATION FOR GSD     @SB001A0
UXWKCONS DC    CL4'WORK'            IDENTIFICATION FOR WORK ARE@SB001A0
UXMODN   DC    CL8'BDTUX19'         LOAD MODULE NAME           @SB001A0
UXRRL    DC    CL8'UXESTAE'         RECOVERY ROUTINE UPDATING S@SB001A0
UXACID   DC    CL5'30201'           COMPONENT ID               @SB001A0
UXASC    DC    CL23'BDT - USER EXIT BDTUX19'   DESCRIPTION     @SB001A0
         LTORG                                                 @SB001A0
         END   ,                                               @SB001A0
