++USERMOD(SJ084A0)  /*  ROCKWELL INTERNATIONAL USERMOD */
   /*                                                        */.
++VER(Z038) FMID(HJS2327)
            PRE(UZ55083   UZ55076   UZ55328   UZ58765
                ZZ67968   ZZ68171
                              )         /*  END OF PREREQS  */
        /* END OF ++VER */  .
++JCLIN.
//LINK  EXEC PGM=IEWL,PARM='XREF,LIST,LET,NCAL,SIZE=(768K,100K),RENT
//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,(1,1))
//AOSBA    DD DISP=SHR,DSN=SYS1.AOSBA
//SYSLMOD  DD DISP=SHR,DSN=SYS1.JES3LIB
//SYSPRINT DD SYSOUT=A
//SYSLIN   DD *
 INCLUDE AOSBA(RATUX00)             * INCLUDE ORIGINAL MODULE
 NAME    RATUX00                    * LOAD MODULE NAME
/*
++SRCUPD (IATGRWQ )
  DISTLIB(AJES3SRC)
    /* END OF USERMOD */ .
./ CHANGE NAME=IATGRWQ
         EJECT                                                 @SJ084A0
*@@ START --- ROCKWELL INTERNATIONAL JES3 MOD PROLOG --------- @SJ084A0
*@                                                             @SJ084A0
*@                                                             @SJ084A0
*@ FUNCTION:                                                   @SJ084A0
*@             INVOKE USER EXIT RATUX00.  THIS EXIT RECEIVES   @SJ084A0
*@             CONTROL FOR EVERY SECONDARY MESSAGE. IT MAY     @SJ084A0
*@             ALTER THE STATUS RESPONSE.                      @SJ084A0
*@                                                             @SJ084A0
*@             RESTRICT REQUEST FOR MORE MAIN STORAGE TO THE   @SJ084A0
*@             MAXIMUM ALLOWED BY IATSIST. RETURN PARTIAL      @SJ084A0
*@             STATUS IF MAXIMUM WOULD BE EXCEEDED.            @SJ084A0
*@                                                             @SJ084A0
*@ DEPENDENCIES:                                               @SJ084A0
*@             USER EXIT IATUX30 MUST BE USED. OTHERWISE NO    @SJ084A0
*@             SECONDARY MESSAGE IS PRODUCED.                  @SJ084A0
*@                                                             @SJ084A0
*@             THE ALGORITHM FOR DETERMINING THE MAXIMUM       @SJ084A0
*@             AMOUNT OF MAIN STORAGE MUST MATCH THE CODE IN   @SJ084A0
*@             IATSIST.                                        @SJ084A0
*@                                                             @SJ084A0
*@ RESTRICTIONS:                                               @SJ084A0
*@             REENTRANT                                       @SJ084A0
*@                                                             @SJ084A0
*@ REGISTER CONVENTIONS:                                       @SJ084A0
*@             R3  - OLD (IATYTSWK)                            @SJ084A0
*@             R4  - SSCSARAY (IEFJSSOB)                       @SJ084A0
*@             R13 - TSWORK (IATYTSWK)                         @SJ084A0
*@                                                             @SJ084A0
*@ ENTRY POINTS:                                               @SJ084A0
*@             N/A                                             @SJ084A0
*@                                                             @SJ084A0
*@ ENTRY PURPOSE:                                              @SJ084A0
*@             N/A                                             @SJ084A0
*@                                                             @SJ084A0
*@ ENTRY LINKAGE:                                              @SJ084A0
*@             N/A                                             @SJ084A0
*@                                                             @SJ084A0
*@ INPUT:                                                      @SJ084A0
*@             SSCSARAY - STATUS RESULT.                       @SJ084A0
*@             OLD      - STATUS MESSAGE.                      @SJ084A0
*@             TSWORK   - STATUS WORK AREA.                    @SJ084A0
*@             SSCSDIMP - AMOUNT OF STORAGE PROVIDED BY        @SJ084A0
*@                        THE TSO STATUS COMMAND.              @SJ084A0
*@ EXIT:                                                       @SJ084A0
*@             N/A                                             @SJ084A0
*@                                                             @SJ084A0
*@ OUTPUT:                                                     @SJ084A0
*@             SSCSARAY - STATUS RESULT.                       @SJ084A0
*@             OLD      - STATUS MESSAGE.                      @SJ084A0
*@             SSCSDIMR - AMOUNT OF STORAGE REQUIRED FOR       @SJ084A0
*@                        COMPLETE RESPONSE.                   @SJ084A0
*@ EXTERNAL ROUTINES:                                          @SJ084A0
*@             RATUX00                                         @SJ084A0
*@                                                             @SJ084A0
*@ CONTROL BLOCKS:                                             @SJ084A0
*@             IATYTSWK                                        @SJ084A0
*@             IEFSSOB             (IEFSSCS)                   @SJ084A0
*@                                                             @SJ084A0
*@ EXECUTABLE MACROS:                                          @SJ084A0
*@             IATXCUE                                         @SJ084A0
*@                                                             @SJ084A0
*@ MESSAGES:                                                   @SJ084A0
*@             IAT8969                                         @SJ084A0
*@                                                             @SJ084A0
*@ ABEND CODES:                                                @SJ084A0
*@             N/A                                             @SJ084A0
*@                                                             @SJ084A0
*@ CHANGE ACTIVITY                                             @SJ084A0
*@             CORRECT RETURN CODE FOR ARRAY TOO SMALL         @SJ084A0
*@                                                             @SJ084A0
*@@ END ----- ROCKWELL INTERNATIONAL JES3 MOD PROLOG --------- @SJ084A0
         EJECT                                                 @SJ084A0
***************************************************************@SJ084A0
*        INVOKE USER EXIT RATUX00                              @SJ084A0
*        CREATE SECOND LEVEL MESSAGE                           @SJ084A0
***************************************************************@SJ084A0
SJ084A   EQU   *                                               @SJ084A0
         ALOAD EP=RATUX00          LOAD USER EXIT              @SJ084A0
         LR    R15,R0              GET ENTRY POINT             @SJ084A0
         IATXCUE EPLOC=(R15),      INVOKE USER EXIT            @SJ084A0*
               PARM=(R3)           ... PARM = OLD              @SJ084A0
         LR    R3,R1               GET NEW POINTER TO OLD      @SJ084A0
         ADELETE EP=RATUX00        DELETE USER EXIT            @SJ084A0
***************************************************************@SJ084A0
         EJECT                                                 @SJ084A0
         EJECT                                                 @SJ084A0
***************************************************************@SJ084A0
*        ENSURE SSCSDIMR DOES NOT EXCEED MAXIMUM ALLOWED.      @SJ084A0
*        DO NOT ABORT IF SSCSDIMP ALREADY AT MAXIMUM.          @SJ084A0
***************************************************************@SJ084A0
         LA    R1,STAMDSZE-(TSSSOB-STADATA) (MAX S.A.)-(TSWORK)@SJ084A0
         USING SSOB-(TSSSOB-STADSECT),R9                       @SJ084A0
         SH    R1,SSOBLEN          -(SSOB HEADER)              @SJ084A0
         USING STADSECT,R9                                     @SJ084A0
         SH    R1,SSCSLEN          -(CANCEL/STATUS EXTENSION)  @SJ084A0
*                                  =(MAXIMUM GETMAIN AREA)     @SJ084A0
         CH    R1,SSCSDIMP         WAS MAX PROVIDED?           @SJ084A0
         BC    LE,SJ084C           YES, USE IT                 @SJ084A0
         CH    R1,SSCSDIMR         IS MAX >= NEEDED AMOUNT?    @SJ084A0
         BC    GE,NOSJ084B         YES, REQUEST NEEDED AMOUNT  @SJ084A0
         STH   R1,SSCSDIMR         SET NEEDED TO MAXIMUM       @SJ084A0
NOSJ084B EQU   *                                               @SJ084A0
***************************************************************@SJ084A0
         EJECT                                                 @SJ084A0
         EJECT                                                 @SJ084A0
***************************************************************@SJ084A0
*        INVOKE USER EXIT RATUX00                              @SJ084A0
*        STAGING AREA OVERFLOW                                 @SJ084A0
***************************************************************@SJ084A0
SJ084C   EQU   *                                               @SJ084A0
         ALOAD EP=RATUX00          LOAD USER EXIT              @SJ084A0
         LR    R15,R0              GET ENTRY POINT             @SJ084A0
         IATXCUE EPLOC=(R15),      INVOKE USER EXIT            @SJ084A0*
               PARM=(R3)           ... PARM = OLD              @SJ084A0
         LR    R3,R1               GET NEW POINTER TO OLD      @SJ084A0
         ADELETE EP=RATUX00        DELETE USER EXIT            @SJ084A0
***************************************************************@SJ084A0
         EJECT                                                 @SJ084A0
++MACUPD (IATYTSWK)
  DISTLIB(AJES3MAC)
    /* END OF USERMOD */ .
./ CHANGE NAME=IATYTSWK
         EJECT                                                 @SJ084B0
.*@@ START --- ROCKWELL INTERNATIONAL JES3 MOD PROLOG ---------@SJ084B0
.*@                                                            @SJ084B0
.*@                                                            @SJ084B0
.*@ FUNCTION:                                                  @SJ084B0
.*@            EXPAND OUTPUT LINE DESCRIPTOR (OLD) LENGTH TO   @SJ084B0
.*@            THE MAXIMUM ALLOWED BY MVS.                     @SJ084B0
.*@                                                            @SJ084B0
.*@ DEPENDENCIES:                                              @SJ084B0
.*@            N/A                                             @SJ084B0
.*@                                                            @SJ084B0
.*@ RESTRICTIONS:                                              @SJ084B0
.*@            THE MAXIMUM MESSAGE LENGTH IS 62 BYTES.         @SJ084B0
.*@            SEE DOCUMENTATION IN MACRO IEFSSCS.             @SJ084B0
.*@                                                            @SJ084B0
.*@ MESSAGES:                                                  @SJ084B0
.*@            IAT8969                                         @SJ084B0
.*@                                                            @SJ084B0
.*@ CHANGE ACTIVITY                                            @SJ084B0
.*@            ALLOW MESSAGE GREATER THAN 62 BYTES.            @SJ084B0
.*@                                                            @SJ084B0
.*@@ END ----- ROCKWELL INTERNATIONAL JES3 MOD PROLOG ---------@SJ084B0
&I.8969M DC    CL26' '             RESERVED FOR USER           @SJ084B0
++SRC    (RATUX00 )
   SYSLIB(JES3SRC )
  DISTLIB(AJES3SRC)
    /* END OF USERMOD */ .
RATUX00  TITLE 'USER EXIT RATUX00 - TSO STATUS RESPONSE'       @SJ084C0
*@@ START --- ROCKWELL INTERNATIONAL JES3 MOD PROLOG --------- @SJ084C0
*@                                                             @SJ084C0
*@                                                             @SJ084C0
*@ FUNCTION:                                                   @SJ084C0
*@             THIS MODULE IS A USER EXIT ROUTINE. IT IS       @SJ084C0
*@             CALLED BY IATGRWQ TO ALLOW MODIFICATION OF THE  @SJ084C0
*@             RESPONSE TO THE TSO STATUS COMMAND.             @SJ084C0
*@                                                             @SJ084C0
*@ DEPENDENCIES:                                               @SJ084C0
*@             CO-REQUISITE MODIFICATIONS IN IATGRWQ AND       @SJ084C0
*@             IATYTSWK.                                       @SJ084C0
*@                                                             @SJ084C0
*@ RESTRICTIONS:                                               @SJ084C0
*@             TOTAL MESSAGE LENGTH SHOULD NOT EXCEED 62 BYTES.@SJ084C0
*@             SEE DOCUMENTATION IN MACRO IEFSSCS.             @SJ084C0
*@                                                             @SJ084C0
*@ REGISTER CONVENTIONS:                                       @SJ084C0
*@             R0  - PARAMETER, SCRATCH                        @SJ084C0
*@             R1  - PARAMETER, SCRATCH                        @SJ084C0
*@             R2  - JQE                                       @SJ084C0
*@             R3  - OLD                                       @SJ084C0
*@             R4  - SSCSARAY                                  @SJ084C0
*@             R5  - DSP DICTIONARY ENTRY                      @SJ084C0
*@             R6  - RESQUEUE                                  @SJ084C0
*@             R7  - MPC                                       @SJ084C0
*@             R8  - OSS, SCRATCH                              @SJ084C0
*@             R9  - MOSE, SCRATCH                             @SJ084C0
*@             R10 - BASE                                      @SJ084C0
*@             R11 - FCT                                       @SJ084C0
*@             R12 - TVT                                       @SJ084C0
*@             R13 - TSWORK                                    @SJ084C0
*@             R14 - RETURN, SCRATCH                           @SJ084C0
*@             R15 - ENTRY POINT, SCRATCH                      @SJ084C0
*@ ENTRY POINTS:                                               @SJ084C0
*@             RATUX00                                         @SJ084C0
*@                                                             @SJ084C0
*@ ENTRY PURPOSE:                                              @SJ084C0
*@             SEE FUNCTION.                                   @SJ084C0
*@                                                             @SJ084C0
*@ ENTRY LINKAGE:                                              @SJ084C0
*@             VIA ACALL                                       @SJ084C0
*@                                                             @SJ084C0
*@ INPUT:                                                      @SJ084C0
*@             R1       - POINTER TO OLD.                      @SJ084C0
*@             R4       - POINTER TO SSCSARAY.                 @SJ084C0
*@             R13      - POINTER TO TSWORK.                   @SJ084C0
*@             OLD      - STATUS MESSAGE.                      @SJ084C0
*@             SSCSARAY - STATUS RESULT.                       @SJ084C0
*@             TSWORK   - STATUS WORK AREA.                    @SJ084C0
*@                                                             @SJ084C0
*@ EXIT:                                                       @SJ084C0
*@             VIA ARETURN                                     @SJ084C0
*@                                                             @SJ084C0
*@ OUTPUT:                                                     @SJ084C0
*@             R1       - UPDATED POINTER TO OLD.              @SJ084C0
*@             OLD      - MODIFIED STATUS MESSAGE.             @SJ084C0
*@             SSCSARAY - MODIFIED STATUS RESULT.              @SJ084C0
*@                                                             @SJ084C0
*@ EXTERNAL ROUTINES:                                          @SJ084C0
*@             NONE                                            @SJ084C0
*@                                                             @SJ084C0
*@ CONTROL BLOCKS:                                             @SJ084C0
*@             LIST MAPPING MACROS FOLLOWED BY ATTRIBUTE.      @SJ084C0
*@             R/O - READ/ONLY  R/W - READ/WRITE               @SJ084C0
*@             IATYDSP  R/O                                    @SJ084C0
*@             IATYFCT  R/O                                    @SJ084C0
*@             IATYJCT  R/O                                    @SJ084C0
*@             IATYJQE  R/O                                    @SJ084C0
*@             IATYMPC  R/O                                    @SJ084C0
*@             IATYOSE  R/O                                    @SJ084C0
*@             IATYOSS  R/O                                    @SJ084C0
*@             IATYRSQ  R/O                                    @SJ084C0
*@             IATYSTA  R/O                                    @SJ084C0
*@             IATYTSWK R/W                                    @SJ084C0
*@             IATYTVT  R/O                                    @SJ084C0
*@             IEFJSSOB R/W        (IEFSSCS)                   @SJ084C0
*@                                                             @SJ084C0
*@ EXECUTABLE MACROS:                                          @SJ084C0
*@             ARETURN                                         @SJ084C0
*@                                                             @SJ084C0
*@ MESSAGES:                                                   @SJ084C0
*@             IAT8969                                         @SJ084C0
*@             NOTE: A ? IN THE MESSAGE INDICATES AN ERROR WAS @SJ084C0
*@             ENCOUNTERED AT THAT POINT.                      @SJ084C0
*@                                                             @SJ084C0
*@ ABEND CODES:                                                @SJ084C0
*@             N/A                                             @SJ084C0
*@                                                             @SJ084C0
*@ CHANGE ACTIVITY                                             @SJ084C0
*@             REPLACE MESSAGE PREFIX WITH JOB NAME AND NUMBER:@SJ084C0
*@             NOTE THIS VIOLATES THE 62 BYTE RESTRICTION.     @SJ084C0
*@             MINOR TEXT CHANGES.                             @SJ084C0
*@                                                             @SJ084C0
*@@ END ----- ROCKWELL INTERNATIONAL JES3 MOD PROLOG --------- @SJ084C0
         MACRO                                                 @SJ084C0
&NAME    TEXT  &STAT=NO                                        @SJ084C0
.**************************************************************@SJ084C0
.* THIS MACRO GENERATES MESSAGE TEXT.  EACH MESSAGE CONSISTS   @SJ084C0
.* OF ONE OR MORE FIELDS, SEPARATED BY COMMAS.  A MAXIMUM OF   @SJ084C0
.* 54 BYTES MAY BE SPECIFIED.                                  @SJ084C0
.*                                                             @SJ084C0
.* THERE ARE THREE TYPES OF FIELDS:                            @SJ084C0
.*       (1) LITERAL TEXT SURROUNDED BY QUOTE MARKS;           @SJ084C0
.*       (2) A SUBSTITUTABLE CHARACTER VARIABLE CODED AS A     @SJ084C0
.*           SYMBOL;                                           @SJ084C0
.*       (3) A SUBSTITUTABLE BINARY VARIABLE CODED AS A SYMBOL @SJ084C0
.*           SURROUNDED BY PARENTHESES.                        @SJ084C0
.*                                                             @SJ084C0
.* VARIABLES ARE GENERATED AS S-TYPE ADCONS, AND MUST HAVE     @SJ084C0
.* ADDRESSABILITY (BASE REGISTER) ESTABLISHED.  THE LENGTH OF  @SJ084C0
.* EACH FIELD IS DETERMINED FROM THE ASSEMBLY DEFINITION.      @SJ084C0
.*                                                             @SJ084C0
.* LITERAL OR CHARACTER TEXT MAY BE UP TO 54 BYTES.  TRAILING  @SJ084C0
.* BLANKS ARE SUPPRESSED.  BINARY DATA MAY BE 1, 2, 3, OR 4    @SJ084C0
.* BYTES WHICH ARE CONVERTED TO CHARACTER FORM ON OUTPUT.      @SJ084C0
.* LEADING ZEROS ARE SUPPRESSED.                               @SJ084C0
.*                                                             @SJ084C0
.* EXAMPLE:                                                    @SJ084C0
.*       NAME TEXT 'LITERAL',CHAR,(NUMBER)                     @SJ084C0
.*                                                             @SJ084C0
.* NOTE:                                                       @SJ084C0
.*       THIS MACRO IS DESIGNED TO PRODUCE STATISTICS ON THE   @SJ084C0
.*       LENGTHS OF MESSAGES UNDER THE H ASSEMBLER.  IT WILL   @SJ084C0
.*       PRODUCE ASSEMBLY ERRORS IF THE VS ASSEMBLER IS USED.  @SJ084C0
.*       THESE ERRORS MAY BE IGNORED, AS THEY ONLY AFFECT      @SJ084C0
.*       MNOTE MESSAGES.                                       @SJ084C0
.**************************************************************@SJ084C0
         GBLA  &MAX                MAXIMUM MESSAGE SIZE        @SJ084C0
         LCLA  &COUNT              SIZE OF LITERAL             @SJ084C0
         LCLA  &CHAR               FLAG FOR CHARACTER VARIABLE @SJ084C0
         LCLA  &DEC                DECIMAL PRECISION           @SJ084C0
         LCLA  &I                  PARAMETER LOOP INDEX        @SJ084C0
         LCLC  &LENGTH             LENGTH OF VARIABLE          @SJ084C0
         LCLC  &LITERAL            LITERAL TEXT                @SJ084C0
         LCLA  &NUMBER             NUMBER OF PARAMETERS        @SJ084C0
         LCLA  &NUMERIC            FLAG FOR NUMERIC VARIABLE   @SJ084C0
         LCLA  &SIZE               MESSAGE SIZE                @SJ084C0
         LCLC  &SYMBOL             NAME OF VARIABLE            @SJ084C0
&CHAR    SETA  2                   FLAG FOR CHARACTER          @SJ084C0
&NUMERIC SETA  1                   FLAG FOR NUMERIC            @SJ084C0
         AIF   ('&STAT' EQ 'YES').STAT                         @SJ084C0
.*-------------------------------------------------------------@SJ084C0
         AIF   ('&NAME' NE '').NAME                            @SJ084C0
         IATZMNOT 1,NAME                                       @SJ084C0
         MEXIT                                                 @SJ084C0
.NAME    ANOP                                                  @SJ084C0
&NUMBER  SETA  N'&SYSLIST          NUMBER OF OPERANDS          @SJ084C0
         AIF   (&NUMBER GT 0).NUMBER                           @SJ084C0
         IATZMNOT 1,TEXT                                       @SJ084C0
         MEXIT                                                 @SJ084C0
.NUMBER  ANOP                                                  @SJ084C0
&NAME    DC    AL1(&NUMBER)                                    @SJ084C0
.*-------------------------------------------------------------@SJ084C0
.LOOP    ANOP                                                  @SJ084C0
&I       SETA  &I+1                                            @SJ084C0
         AIF   (&I GT N'&SYSLIST).END CHECK FOR END OF LIST    @SJ084C0
.*-------------------------------------------------------------@SJ084C0
         AIF   ('&SYSLIST(&I)' NE '').OK CHECK FOR NULL        @SJ084C0
         IATZMNOT 1,#&I            MISSING PARAMETER           @SJ084C0
.OK      ANOP                                                  @SJ084C0
.*-------------------------------------------------------------@SJ084C0
         AIF   ('&SYSLIST(&I)'(1,1) NE '''').VALUE LITERAL?    @SJ084C0
&COUNT   SETA  K'&SYSLIST(&I)-2    LENGTH OF STRING            @SJ084C0
&LITERAL SETC  '&SYSLIST(&I)'(2,&COUNT) REMOVE QUOTES          @SJ084C0
         DC    AL1(&COUNT),C'&LITERAL'                         @SJ084C0
&SIZE    SETA  &SIZE+&COUNT                                    @SJ084C0
         AGO   .LOOP                                           @SJ084C0
.*-------------------------------------------------------------@SJ084C0
.VALUE   ANOP                                                  @SJ084C0
         AIF   ('&SYSLIST(&I)'(1,1) EQ '(').NUMERIC            @SJ084C0
&SYMBOL  SETC  '&SYSLIST(&I)'                                  @SJ084C0
&LENGTH  SETC  'L''&SYMBOL'        LENGTH OF VARIABLE          @SJ084C0
         DC    XL.2'&CHAR',AL.6(&LENGTH),SL2(&SYMBOL)          @SJ084C0
&SIZE    SETA  &SIZE+L'&SYSLIST(&I)                            @SJ084C0
         AGO   .LOOP                                           @SJ084C0
.*-------------------------------------------------------------@SJ084C0
.NUMERIC ANOP                                                  @SJ084C0
&SYMBOL  SETC  '&SYSLIST(&I,1)'    REMOVE PARENTHESES          @SJ084C0
&LENGTH  SETC  'L''&SYMBOL'        LENGTH OF VARIABLE          @SJ084C0
         DC    XL.2'&NUMERIC',AL.6(&LENGTH),SL2(&SYMBOL)       @SJ084C0
&DEC     SETA  (L'&SYSLIST(&I,1)*8*100+331)/332                @SJ084C0
         AIF   (&DEC LE 5).DEC                                 @SJ084C0
&DEC     SETA  5                   MAXIMUM SUPPORTED           @SJ084C0
.DEC     ANOP                                                  @SJ084C0
&SIZE    SETA  &SIZE+&DEC                                      @SJ084C0
         AGO   .LOOP                                           @SJ084C0
.*-------------------------------------------------------------@SJ084C0
.STAT    ANOP                                                  @SJ084C0
         MNOTE '*'                                             @SJ084C0
         MNOTE '*        MAXIMUM MESSAGE SIZE IS &MAX'         @SJ084C0
         MNOTE '*        (ONLY VALID IN ASSEMBLER H)'          @SJ084C0
         MNOTE '*'                                             @SJ084C0
         MEXIT                                                 @SJ084C0
.*-------------------------------------------------------------@SJ084C0
.END     ANOP                                                  @SJ084C0
         MNOTE '*'                                             @SJ084C0
         MNOTE '*        MESSAGE IS &SIZE BYTES'               @SJ084C0
         MNOTE '*'                                             @SJ084C0
         AIF   (&SIZE LE 54).SIZE                              @SJ084C0
         MNOTE '*'                                             @SJ084C0
         MNOTE 8,'      MAY EXCEED MAXIMUM: 54 BYTES'          @SJ084C0
         MNOTE '*'                                             @SJ084C0
.SIZE    ANOP                                                  @SJ084C0
         AIF   (&SIZE LE &MAX).MEND                            @SJ084C0
&MAX     SETA  &SIZE                                           @SJ084C0
.MEND    MEND                                                  @SJ084C0
         EJECT                                                 @SJ084C0
RATUX00  CSECT                                                 @SJ084C0
***************************************************************@SJ084C0
*              TEXT MACRO MESSAGE DEFINITION                   @SJ084C0
***************************************************************@SJ084C0
TEXT     DSECT                     MESSAGE TEXT                @SJ084C0
TEXTFLDS DS    AL1                 NUMBER OF FIELDS            @SJ084C0
*--------------------------------------------------------------@SJ084C0
*              MULTIPLE FIELDS FOLLOW AS DEFINED BELOW         @SJ084C0
*--------------------------------------------------------------@SJ084C0
TEXTFLAG DS    XL.2,AL.6           FLAGS AND LENGTH            @SJ084C0
TEXTCHAR EQU   X'80'               CHARACTER INSERT            @SJ084C0
TEXTNUM  EQU   X'40'               NUMERIC VALUE INSERT        @SJ084C0
TEXTLEN  EQU   X'FF'-TEXTCHAR-TEXTNUM LENGTH OF FIELD          @SJ084C0
*                                                              @SJ084C0
*              EACH FIELD CONTAINS EITHER A LITERAL OR S-ADCON @SJ084C0
*                                                              @SJ084C0
TEXTLIT  DS    0C                  LITERAL TEXT                @SJ084C0
TEXTSCON DS    S                   S-ADCON POINTER TO INSERT   @SJ084C0
*                                                              @SJ084C0
TEXTEND  DS    0X                  END OF FIELD                @SJ084C0
         EJECT                                                 @SJ084C0
         IATYDSP                                               @SJ084C0
         EJECT                                                 @SJ084C0
         IATYEQU                                               @SJ084C0
         EJECT                                                 @SJ084C0
         IATYFCT                                               @SJ084C0
         EJECT                                                 @SJ084C0
         IATYJCT                                               @SJ084C0
         EJECT                                                 @SJ084C0
         IATYJQE                                               @SJ084C0
         EJECT                                                 @SJ084C0
         IATYMPC                                               @SJ084C0
         EJECT                                                 @SJ084C0
         IATYOSE                                               @SJ084C0
         EJECT                                                 @SJ084C0
         IATYOSS                                               @SJ084C0
         EJECT                                                 @SJ084C0
         IATYREG                                               @SJ084C0
         EJECT                                                 @SJ084C0
         IATYRSQ                                               @SJ084C0
         EJECT                                                 @SJ084C0
         IATYSTA                                               @SJ084C0
         EJECT                                                 @SJ084C0
         IATYTSWK MOD=GRWQ,OLD=YES                             @SJ084C0
         ORG   OLDMSLEN            OVERLAY MESSAGE FIELD LENGTH@SJ084C0
         DC    AL2(RAT8969L)       MESSAGE FIELD LENGTH        @SJ084C0
         ORG   IAT8969             OVERLAY SKELETON MESSAGE    @SJ084C0
RAT8969J DC    CL8' ',C'('         JOB NAME                    @SJ084C0
RAT8969# DC    CL4' ',C') '        JOB NUMBER                  @SJ084C0
RAT8969T DC    CL54' '             MESSAGE TEXT                @SJ084C0
RAT8969E EQU   *                   END OF SECONDARY MESSAGE    @SJ084C0
RAT8969L EQU   RAT8969E-OLDMSLEN   MESSAGE LENGTH              @SJ084C0
         EJECT                                                 @SJ084C0
         IATYTVT                                               @SJ084C0
         EJECT                                                 @SJ084C0
         IEFJSSOB CS                                           @SJ084C0
         EJECT                                                 @SJ084C0
RATUX00  CSECT                                                 @SJ084C0
         USING JQESTART,R2                                     @SJ084C0
         USING OLD,R3                                          @SJ084C0
         USING SSCSARAY,R4                                     @SJ084C0
         USING DSPSTART,R5                                     @SJ084C0
         USING RQSTART,R6                                      @SJ084C0
         USING MPCSTART,R7                                     @SJ084C0
         USING TSWORK,R13                                      @SJ084C0
         USING RATUX00,R15                                     @SJ084C0
***************************************************************@SJ084C0
*              INITIALIZATION                                  @SJ084C0
***************************************************************@SJ084C0
         IATYMOD                                               @SJ084C0
         LR    R10,R15             SET MODULE BASE             @SJ084C0
         DROP  R15                                             @SJ084C0
         USING RATUX00,R10                                     @SJ084C0
         LR    R3,R1               POINT TO OLD                @SJ084C0
         ST    R3,FCTWORK          SAVE OLD POINTER FOR RETURN @SJ084C0
*--------------------------------------------------------------@SJ084C0
*              CHECK FOR STAGING AREA OVERFLOW                 @SJ084C0
*--------------------------------------------------------------@SJ084C0
         TM    TSFLAG1,TSAOVFL+TSOOVFL ARRAY/OLD OVERFLOW?     @SJ084C0
         BC    ALLOFF,NOOVFLOW     NO, BRANCH                  @SJ084C0
         LA    R1,OVFLOW           OVERFLOW MESSAGE            @SJ084C0
         B     MSGTEXT             GO OVERLAY LAST MESSAGE     @SJ084C0
NOOVFLOW EQU   *                                               @SJ084C0
*--------------------------------------------------------------@SJ084C0
*              CREATE SECONDARY MESSAGE IF NECESSARY           @SJ084C0
*--------------------------------------------------------------@SJ084C0
         TM    SSCSFLG1,SSCSSECL   SECONDARY MESSAGE EXIST?    @SJ084C0
         BC    ALLON,SECSET        YES, BRANCH                 @SJ084C0
         OI    SSCSFLG1,SSCSSECL   SET SECONDARY MESSAGE       @SJ084C0
         SH    R3,OLDSIZE          SET TO NEXT OLD SLOT        @SJ084C0
         ST    R3,FCTWORK          SAVE OLD POINTER FOR RETURN @SJ084C0
SECSET   EQU   *                                               @SJ084C0
*--------------------------------------------------------------@SJ084C0
*              FILL IN JOBNAME CHARACTER                       @SJ084C0
*--------------------------------------------------------------@SJ084C0
         L     R1,TSUXID           POINT TO USERID             @SJ084C0
         LA    R15,0(R1)           ...                         @SJ084C0
         LA    R1,7(R15)           POINT TO END OF USERID      @SJ084C0
LOOPID   EQU   *                                               @SJ084C0
         CLI   0(R1),C' '          IS CHARACTER BLANK?         @SJ084C0
         BC    NE,ENDID            NO, BRANCH                  @SJ084C0
         BCT   R1,LOOPID           YES, TRY PREVIOUS CHARACTER @SJ084C0
ENDID    EQU   *                                               @SJ084C0
         SR    R1,R15              GET LENGTH OF USERID - 1    @SJ084C0
         CLM   R1,1,=AL1(7)        IS THERE ROOM FOR A SUFFIX? @SJ084C0
         BC    GE,ENDJOB           NO, BRANCH                  @SJ084C0
         L     R14,TSSRCHAD        POINT TO JOBNAME            @SJ084C0
         EX    R1,CLCID            USERID = JOBNAME PREFIX?    @SJ084C0
         BC    NE,ENDJOB           NO, BRANCH                  @SJ084C0
         LA    R14,1(R1,R14)       POINT TO JOBNAME SUFFIX     @SJ084C0
         CLM   R1,1,=AL1(6)        ROOM FOR MULTIPLE CHARS?    @SJ084C0
         BC    EQ,SINGLE           NO, BRANCH                  @SJ084C0
         CLI   1(R14),C' '         MULTI-CHARACTER SUFFIX?     @SJ084C0
         BC    NE,ENDJOB           YES, BRANCH                 @SJ084C0
SINGLE   EQU   *                                               @SJ084C0
         MVC   SSCSUJOB,0(R14)     SINGLE CHARACTER SUFFIX     @SJ084C0
ENDJOB   EQU   *                                               @SJ084C0
*--------------------------------------------------------------@SJ084C0
*              GET REQUIRED CONTROL BLOCKS                     @SJ084C0
*--------------------------------------------------------------@SJ084C0
         L     R2,TSJQEADD         POINT TO JQE                @SJ084C0
         L     R5,DSPDIC           POINT TO DSP DICTIONARY     @SJ084C0
CHECKDSP EQU   *                                               @SJ084C0
         CLC   DSPNO,JQESTAT1      ENTRY MATCH?                @SJ084C0
         BC    EQ,ENDDSP           YES, BRANCH                 @SJ084C0
         LA    R5,DSPEND           POINT TO NEXT ENTRY         @SJ084C0
         CLI   DSPNAME,FF          END OF DICTIONARY?          @SJ084C0
         BC    NE,CHECKDSP         NO, TRY NEXT ENTRY          @SJ084C0
         SR    R5,R5               CLEAR DSP DICTIONARY PTR    @SJ084C0
ENDDSP   EQU   *                                               @SJ084C0
         ICM   R6,15,JQERESQ       POINT TO RESQUEUE           @SJ084C0
         BC    ZERO,ENDMAIN        BRANCH IF NO RESQUEUE       @SJ084C0
         L     R7,MAINDATA         POINT TO FIRST MPC          @SJ084C0
LOOPMAIN EQU   *                                               @SJ084C0
         CLC   MPSEQNO,RQMPSEQ     DOES INDEX MATCH?           @SJ084C0
         BC    EQ,ENDMAIN          YES, BRANCH                 @SJ084C0
         ICM   R7,15,MPNEXT        POINT TO NEXT MPC           @SJ084C0
         BC    NZERO,LOOPMAIN      BRANCH IF ONE EXITS         @SJ084C0
         SR    R7,R7               CLEAR MPC POINTER           @SJ084C0
ENDMAIN  EQU   *                                               @SJ084C0
***************************************************************@SJ084C0
*              DETERMINE STATUS                                @SJ084C0
***************************************************************@SJ084C0
*--------------------------------------------------------------@SJ084C0
*              EXAMINE JQE                                     @SJ084C0
*--------------------------------------------------------------@SJ084C0
ACTIVE   EQU   *                                               @SJ084C0
         TM    JQESTAT2,SEACTIVE   IS SE ACTIVE?               @SJ084C0
         BC    ALLOFF,COMP         NO, BRANCH                  @SJ084C0
         CLC   JQESTAT1,DSPMAIN    IS SE MAIN?                 @SJ084C0
         BC    EQ,MAIN             YES, BRANCH                 @SJ084C0
         CLC   JQESTAT1,DSPOUTPT   IS SE OUTSERV?              @SJ084C0
         BC    EQ,OUTSERV          YES, BRANCH                 @SJ084C0
         LA    R1,#SEACTIV         ACTIVE                      @SJ084C0
         TM    SSCSFLG1,SSCSEXCQ   IS STATUS QUEUED?           @SJ084C0
         BC    ALLOFF,MSG          NO, BRANCH                  @SJ084C0
         NI    SSCSFLG1,FF-SSCSEXCQ CLEAR QUEUED STATUS        @SJ084C0
         OI    SSCSFLG1,SSCSJACT   SET ACTIVE STATUS           @SJ084C0
         B     MSG                 GO CREATE MESSAGE           @SJ084C0
COMP     EQU   *                                               @SJ084C0
         TM    JQESTAT2,SECOMP     SE COMPLETE?                @SJ084C0
         BC    ALLOFF,RESCHED      NO, BRANCH                  @SJ084C0
         LA    R1,#SECOMP          COMPLETE                    @SJ084C0
         TM    SSCSFLG1,SSCSEXCQ   IS STATUS QUEUED?           @SJ084C0
         BC    ALLOFF,MSG          NO, BRANCH                  @SJ084C0
         NI    SSCSFLG1,FF-SSCSEXCQ CLEAR QUEUED STATUS        @SJ084C0
         OI    SSCSFLG1,SSCSJACT   SET ACTIVE STATUS           @SJ084C0
         B     MSG                 GO CREATE MESSAGE           @SJ084C0
RESCHED  EQU   *                                               @SJ084C0
         TM    JQESTAT2,SERESCH    IS SE RESCHEDULED?          @SJ084C0
         BC    ALLOFF,PENDRESC     NO, BRANCH                  @SJ084C0
         LA    R1,#SERESCH         RESCHEDULED                 @SJ084C0
         TM    SSCSFLG1,SSCSJACT   IS STATUS ACTIVE?           @SJ084C0
         BC    ALLOFF,MSG          NO, BRANCH                  @SJ084C0
         NI    SSCSFLG1,FF-SSCSJACT CLEAR ACTIVE STATUS        @SJ084C0
         OI    SSCSFLG1,SSCSEXCQ   SET QUEUED STATUS           @SJ084C0
         B     MSG                 GO CREATE MESSAGE           @SJ084C0
PENDRESC EQU   *                                               @SJ084C0
         TM    JQESTAT2,SEPENDG    IS SE PENDING RESCHEDULE?   @SJ084C0
         BC    ALLOFF,CGUAV        NO, BRANCH                  @SJ084C0
         LA    R1,#SEPENDG         RESCHEDULE PENDING          @SJ084C0
         TM    SSCSFLG1,SSCSJACT   IS STATUS ACTIVE?           @SJ084C0
         BC    ALLOFF,MSG          NO, BRANCH                  @SJ084C0
         NI    SSCSFLG1,FF-SSCSJACT CLEAR ACTIVE STATUS        @SJ084C0
         OI    SSCSFLG1,SSCSEXCQ   SET QUEUED STATUS           @SJ084C0
         B     MSG                 GO CREATE MESSAGE           @SJ084C0
CGUAV    EQU   *                                               @SJ084C0
         TM    JQEFL2,JCTCGUAV     IS CLASS/GROUP UNAVAILABLE? @SJ084C0
         BC    ALLOFF,DUPNM        NO, BRANCH                  @SJ084C0
         LA    R1,#JCTCGUA         CLASS/GROUP UNAVAILABLE     @SJ084C0
         TM    SSCSFLG1,SSCSJACT   IS STATUS ACTIVE?           @SJ084C0
         BC    ALLOFF,MSG          NO, BRANCH                  @SJ084C0
         NI    SSCSFLG1,FF-SSCSJACT CLEAR ACTIVE STATUS        @SJ084C0
         OI    SSCSFLG1,SSCSEXCQ   SET QUEUED STATUS           @SJ084C0
         B     MSG                 GO CREATE MESSAGE           @SJ084C0
DUPNM    EQU   *                                               @SJ084C0
         TM    JQEFLG2,JQEDUPNM    IS IT DUPLICATE JOB NAME?   @SJ084C0
         BC    ALLOFF,NOACTIVE     NO, BRANCH                  @SJ084C0
         LA    R1,#JQEDUPN         DUPLICATE JOB NAME          @SJ084C0
         TM    SSCSFLG1,SSCSJACT   IS STATUS ACTIVE?           @SJ084C0
         BC    ALLOFF,MSG          NO, BRANCH                  @SJ084C0
         NI    SSCSFLG1,FF-SSCSJACT CLEAR ACTIVE STATUS        @SJ084C0
         OI    SSCSFLG1,SSCSEXCQ   SET QUEUED STATUS           @SJ084C0
         B     MSG                 GO CREATE MESSAGE           @SJ084C0
NOACTIVE EQU   *                                               @SJ084C0
         LA    R1,NOTACTIV         NOT ACTIVE                  @SJ084C0
         TM    SSCSFLG1,SSCSJACT   IS STATUS ACTIVE?           @SJ084C0
         BC    ALLOFF,MSG          NO, BRANCH                  @SJ084C0
         NI    SSCSFLG1,FF-SSCSJACT CLEAR ACTIVE STATUS        @SJ084C0
         OI    SSCSFLG1,SSCSEXCQ   SET QUEUED STATUS           @SJ084C0
         B     MSG                 GO CREATE MESSAGE           @SJ084C0
*--------------------------------------------------------------@SJ084C0
*              MAIN SERVICE                                    @SJ084C0
*--------------------------------------------------------------@SJ084C0
MAIN     EQU   *                                               @SJ084C0
         LA    R1,NORQ             ASSUME NO RESQUEUE          @SJ084C0
         LTR   R6,R6               IS THERE A RESQUEUE?        @SJ084C0
         BC    ZERO,MSG            NO, BRANCH                  @SJ084C0
         CLI   RQINDEX,RQALLOC     IS IT WAITING FOR ALLOC?    @SJ084C0
         BC    NE,MAINSCHD         NO, BRANCH                  @SJ084C0
         LA    R1,#RQBSYDT         ASSUME BUSY DATA SETS       @SJ084C0
         TM    RQMDSREQ,RQBSYDTS   IS IT BUSY DATA SETS?       @SJ084C0
         BC    ALLON,MSG           YES, BRANCH                 @SJ084C0
         LA    R1,#RQBSYVO         ASSUME BUSY VOLUMES         @SJ084C0
         TM    RQMDSREQ,RQBSYVOL   IS IT BUSY VOLUMES?         @SJ084C0
         BC    ALLON,MSG           YES, BRANCH                 @SJ084C0
         LA    R1,#RQVFYPD         ASSUME VERIFY PENDING       @SJ084C0
         TM    RQMDSREQ,RQVFYPDG   IS IT VERIFY PENDING?       @SJ084C0
         BC    ALLON,MSG           YES, BRANCH                 @SJ084C0
         LA    R1,#RQBSYDE         ASSUME BUSY DEVICES         @SJ084C0
         TM    RQMDSREQ,RQBSYDEV   IS IT BUSY DEVICES?         @SJ084C0
         BC    ALLON,MSG           YES, BRANCH                 @SJ084C0
         LA    R1,#RQDFPDG         ASSUME NEED FENCED DEVICES  @SJ084C0
         TM    RQMDSREQ,RQDFPDG    IS IT NEED FENCED DEVICES?  @SJ084C0
         BC    ALLON,MSG           YES, BRANCH                 @SJ084C0
         B     COMRQ               BRANCH                      @SJ084C0
MAINSCHD EQU   *                                               @SJ084C0
         CLI   RQINDEX,RQONMAIN    IS IT SCHEDULED ON MAIN?    @SJ084C0
         BC    NE,COMRQ            NO, BRANCH                  @SJ084C0
         TM    RQFLG5,RQDSEL       IS IT DEMAND SELECT?        @SJ084C0
         BC    ALLOFF,COMRQ        NO, BRANCH                  @SJ084C0
         LA    R1,#RQDSEL          ASSUME STARTED TASK         @SJ084C0
         TM    RQFLG5,RQMVSTSO     IS IT TSO LOGON?            @SJ084C0
         BC    ALLOFF,MSG          NO, BRANCH                  @SJ084C0
         LA    R1,#RQMVSTS         TSO LOGON MSG               @SJ084C0
         B     MSG                 BRANCH                      @SJ084C0
*--------------------------------------------------------------@SJ084C0
*              OUTPUT SERVICE                                  @SJ084C0
*--------------------------------------------------------------@SJ084C0
OUTSERV  EQU   *                                               @SJ084C0
         LA    R1,NORQ             ASSUME NO RESQUEUE          @SJ084C0
         LTR   R6,R6               IS THERE A RESQUEUE?        @SJ084C0
         BC    ZERO,MSG            NO, BRANCH                  @SJ084C0
         CLI   RQINDEX,RQOUTQUE    IS IT WAITING FOR WTR?      @SJ084C0
         BC    NE,COMRQ            NO, BRANCH                  @SJ084C0
         SR    R1,R1               INDICATE NO MSG YET         @SJ084C0
         ICM   R8,15,RQOSSTOP      POINT TO FIRST OSS          @SJ084C0
         BC    ZERO,COMRQ          BRANCH, NO OSS              @SJ084C0
         USING OSSSTART,R8                                     @SJ084C0
         LA    R1,WTRTABLE         ASSUME WAITING FOR WTR      @SJ084C0
OUTSCHED EQU   *                                               @SJ084C0
         ICM   R9,7,OSSOSE         POINT TO MOSE               @SJ084C0
         USING OSEENTRY,R9                                     @SJ084C0
         TM    OSEFLAG,OSETSO      IS DATA SET FOR TSO?        @SJ084C0
         BC    ALLON,OUTTSO        YES, BRANCH                 @SJ084C0
         DROP  R9                  OSEENTRY                    @SJ084C0
         OC    OSSSCHED,OSSSCHED   ANY SCHEDULED?              @SJ084C0
         BC    ZERO,OUTCHAIN       NO, BRANCH                  @SJ084C0
         TM    OSSFLAG1,OSSHOLD    HELD?                       @SJ084C0
         BC    ALLOFF,OUTACTIV     NO, BRANCH                  @SJ084C0
         B     OUTCHAIN            BRANCH                      @SJ084C0
OUTTSO   EQU   *                                               @SJ084C0
         LA    R1,TSOTABLE         POINT TO TSO MSG TABLE      @SJ084C0
OUTCHAIN EQU   *                                               @SJ084C0
         ICM   R8,15,OSSCHAIN      POINT TO NEXT OSS           @SJ084C0
         BC    NZERO,OUTSCHED      GO CHECK NEXT OSS           @SJ084C0
         B     OUTMSG              BRANCH                      @SJ084C0
         DROP  R8                  OSSSTART                    @SJ084C0
OUTACTIV EQU   *                                               @SJ084C0
         LA    R1,#OSSSCHE         ACTIVE ON WTR               @SJ084C0
         B     MSG                 BRANCH                      @SJ084C0
OUTMSG   EQU   *                                               @SJ084C0
         OC    RQCIERR,RQCIERR     JCL ERROR?                  @SJ084C0
         BC    NZERO,OUTJCL        YES, BRANCH                 @SJ084C0
         TM    RQFLG9,RQISFAIL     JCL ERROR?                  @SJ084C0
         BC    ALLON,OUTJCL        YES, BRANCH                 @SJ084C0
         TM    RQFLG7,RQABTERM+RQABEND+RQAIDFL JOB FAILURE?    @SJ084C0
         BC    NALLOFF,OUTFAIL     YES, BRANCH                 @SJ084C0
         TM    RQFLG6,RQCANCL+RQCANCP+RQCANCO CANCELED?        @SJ084C0
         BC    NALLOFF,OUTCAN      YES, BRANCH                 @SJ084C0
         TM    RQFLG10,RQCANCUR    CANCELED?                   @SJ084C0
         BC    ALLON,OUTCAN        YES, BRANCH                 @SJ084C0
         TM    RQFLG9,RQNFYIPL     SYSTEM ERROR?               @SJ084C0
         BC    ALLON,OUTSYS        YES, BRANCH                 @SJ084C0
         L     R1,0(R1)            NORMAL WAIT MSG             @SJ084C0
         B     MSG                 BRANCH                      @SJ084C0
OUTJCL   EQU   *                                               @SJ084C0
         L     R1,4(R1)            JCL ERROR MSG               @SJ084C0
         B     MSG                 BRANCH                      @SJ084C0
OUTFAIL  EQU   *                                               @SJ084C0
         L     R1,8(R1)            JOB FAILURE MSG             @SJ084C0
         B     MSG                 BRANCH                      @SJ084C0
OUTCAN   EQU   *                                               @SJ084C0
         L     R1,12(R1)           CANCELED MSG                @SJ084C0
         B     MSG                 BRANCH                      @SJ084C0
OUTSYS   EQU   *                                               @SJ084C0
         L     R1,16(R1)           SYSTEM ERROR MSG            @SJ084C0
         B     MSG                 BRANCH                      @SJ084C0
*--------------------------------------------------------------@SJ084C0
*              MAIN AND OUTPUT SERVICE - COMMON                @SJ084C0
*--------------------------------------------------------------@SJ084C0
COMRQ    EQU   *                                               @SJ084C0
         SR    R1,R1               GET RQINDEX                 @SJ084C0
         IC    R1,RQINDEX          ...                         @SJ084C0
         C     R1,=A(RQMAXNDX)     IS IT GREATER THAN MAX?     @SJ084C0
         BC    LE,COMINDX          NO, BRANCH                  @SJ084C0
         LA    R1,RQMAXNDX         YES, USE MAX                @SJ084C0
COMINDX  EQU   *                                               @SJ084C0
         L     R1,TABLE(R1)        POINT TO MESSAGE            @SJ084C0
         B     MSG                 GO CREATE MESSAGE           @SJ084C0
***************************************************************@SJ084C0
*              CREATE OUTPUT MESSAGE                           @SJ084C0
***************************************************************@SJ084C0
         USING TEXT,R1                                         @SJ084C0
MSG      EQU   *                                               @SJ084C0
         MVC   OLDNOTHR(IAT8969S),OLDMODEL INIT OLD ENTRY      @SJ084C0
         L     R14,TSSRCHAD        POINT TO JOB NAME           @SJ084C0
         MVC   RAT8969J,0(R14)     MOVE JOB NAME TO MESSAGE    @SJ084C0
         LH    R14,JQEJNO          GET JOB NUMBER              @SJ084C0
         CVD   R14,TSDATA          CONVERT TO DECIMAL          @SJ084C0
         OI    TSDATA+7,X'0F'      CORRECT ZONE                @SJ084C0
         UNPK  RAT8969#,TSDATA     CONVERT TO EBCDIC           @SJ084C0
MSGTEXT  EQU   *                                               @SJ084C0
         LA    R3,RAT8969T         POINT PAST PREFIX           @SJ084C0
         DROP  R3                  OLD                         @SJ084C0
         LA    R15,IAT8969E-RAT8969T REMAINING AREA            @SJ084C0
         LA    R14,1               ASSUME ONE TEXT FIELD       @SJ084C0
         LTR   R1,R1               VALID MSG POINTER?          @SJ084C0
         BC    ZERO,MSGERROR       NO, BRANCH                  @SJ084C0
         IC    R14,TEXTFLDS        GET NUMBER OF TEXT FIELDS   @SJ084C0
         LA    R1,TEXTFLAG         POINT TO FIRST FIELD        @SJ084C0
         DROP  R1                  TEXT                        @SJ084C0
         USING TEXTFLAG,R1                                     @SJ084C0
MSGLOOP  EQU   *                                               @SJ084C0
         TM    TEXTFLAG,TEXTCHAR   CHARACTER INSERT?           @SJ084C0
         BC    ALLON,MSGCHAR       YES, BRANCH                 @SJ084C0
         TM    TEXTFLAG,TEXTNUM    NUMERIC INSERT?             @SJ084C0
         BC    ALLON,MSGNUM        YES, BRANCH                 @SJ084C0
*--------------------------------------------------------------@SJ084C0
*              COPY LITERAL TEXT                               @SJ084C0
*--------------------------------------------------------------@SJ084C0
         SR    R8,R8               GET LENGTH OF LITERAL       @SJ084C0
         IC    R8,TEXTFLAG         ...                         @SJ084C0
         SR    R15,R8              DECREMENT REMAINING LENGTH  @SJ084C0
         BC    NPLUS,MSGERROR      BRANCH IF TOO BIG           @SJ084C0
         BCTR  R8,0                GET MACHINE LENGTH          @SJ084C0
         EX    R8,MVCLIT           MOVE LITERAL TO OUTPUT AREA @SJ084C0
         LA    R3,1(R8,R3)         POINT TO NEXT OUTPUT AREA   @SJ084C0
         LA    R1,TEXTLIT+1(R8)    POINT TO NEXT FIELD         @SJ084C0
         B     MSGNEXT             END OF FIELD                @SJ084C0
MVCLIT   MVC   0(*-*,R3),TEXTLIT   EXECUTED                    @SJ084C0
*--------------------------------------------------------------@SJ084C0
*              INSERT CHARACTER VALUE                          @SJ084C0
*--------------------------------------------------------------@SJ084C0
MSGCHAR  EQU   *                                               @SJ084C0
         SR    R8,R8               GET S-TYPE ADCON            @SJ084C0
         ICM   R8,3,TEXTSCON       ...                         @SJ084C0
         SRDL  R8,12               ISOLATE REGISTER            @SJ084C0
         SRL   R9,20               ISOLATE DISPLACEMENT        @SJ084C0
         EX    R8,LTR              TEST REGISTER CONTENTS      @SJ084C0
         BC    ZERO,MSGERROR       ERROR IF ZERO               @SJ084C0
         EX    R8,AR               POINT TO CHARACTER INSERT   @SJ084C0
         IC    R8,TEXTFLAG         GET LENGTH OF INSERT        @SJ084C0
         LA    R0,TEXTLEN          GET MASK FOR LENGTH         @SJ084C0
         NR    R8,R0               REMOVE FLAGS FROM LENGTH    @SJ084C0
MSGCLOOP EQU   *                                               @SJ084C0
         BCT   R15,MSGCNEXT        DECREMENT REMAINING LENGTH  @SJ084C0
         B     MSGERROR            ERROR IF ZERO               @SJ084C0
MSGCNEXT EQU   *                                               @SJ084C0
         MVC   0(1,R3),0(R9)       MOVE ONE CHARACTER          @SJ084C0
         LA    R3,1(R3)            POINT TO NEXT OUTPUT CHAR   @SJ084C0
         LA    R9,1(R9)            POINT TO NEXT INPUT CHAR    @SJ084C0
         CLI   0(R9),C' '          IS NEXT INPUT CHAR BLANK?   @SJ084C0
         BC    EQ,MSGCEND          YES, BRANCH                 @SJ084C0
         BCT   R8,MSGCLOOP         LOOP FOR NEXT CHARACTER     @SJ084C0
MSGCEND  EQU   *                                               @SJ084C0
         LA    R1,TEXTEND          POINT TO NEXT FIELD         @SJ084C0
         B     MSGNEXT             END OF FIELD                @SJ084C0
LTR      LTR   R0,*-*              EXECUTED                    @SJ084C0
AR       AR    R9,*-*              EXECUTED                    @SJ084C0
*--------------------------------------------------------------@SJ084C0
*              INSERT NUMERIC VALUE                            @SJ084C0
*--------------------------------------------------------------@SJ084C0
MSGNUM   EQU   *                                               @SJ084C0
         SR    R8,R8               GET S-TYPE ADCON            @SJ084C0
         ICM   R8,3,TEXTSCON       ...                         @SJ084C0
         SRDL  R8,12               ISOLATE REGISTER            @SJ084C0
         SRL   R9,20               ISOLATE DISPLACEMENT        @SJ084C0
         EX    R8,LTR              TEST REGISTER CONTENTS      @SJ084C0
         BC    ZERO,MSGERROR       ERROR IF ZERO               @SJ084C0
         EX    R8,AR               POINT TO NUMERIC INSERT     @SJ084C0
         IC    R8,TEXTFLAG         GET LENGTH OF INSERT        @SJ084C0
         LA    R0,TEXTLEN          GET MASK FOR LENGTH         @SJ084C0
         NR    R8,R0               REMOVE FLAGS FROM LENGTH    @SJ084C0
         C     R8,=F'1'            COMPARE LENGTH              @SJ084C0
         BC    LT,MSGERROR         = 0, ERROR                  @SJ084C0
         BC    EQ,MSGN1            = 1, BRANCH                 @SJ084C0
         C     R8,=F'3'            COMPARE LENGTH              @SJ084C0
         BC    LT,MSGN2            = 2, BRANCH                 @SJ084C0
         BC    EQ,MSGN3            = 3, BRANCH                 @SJ084C0
         C     R8,=F'5'            COMPARE LENGTH              @SJ084C0
         BC    GE,MSGERROR         > 4, ERROR                  @SJ084C0
         ICM   R0,15,0(R9)         GET 4 BYTES                 @SJ084C0
         B     MSGNCVD                                         @SJ084C0
MSGN3    EQU   *                                               @SJ084C0
         ICM   R0,7,0(R9)          GET 3 BYTES                 @SJ084C0
         B     MSGNCVD                                         @SJ084C0
MSGN2    EQU   *                                               @SJ084C0
         ICM   R0,3,0(R9)          GET 2 BYTES                 @SJ084C0
         B     MSGNCVD                                         @SJ084C0
MSGN1    EQU   *                                               @SJ084C0
         ICM   R0,1,0(R9)          GET 1 BYTE                  @SJ084C0
MSGNCVD  EQU   *                                               @SJ084C0
         LTR   R0,R0               IS VALUE NEGATIVE?          @SJ084C0
         BC    MINUS,MSGERROR      YES, BRANCH                 @SJ084C0
         C     R0,=F'99999'        IS VALUE TOO BIG?           @SJ084C0
         BC    GT,MSGERROR         YES, BRANCH                 @SJ084C0
         CVD   R0,TSDATA           CONVERT TO DECIMAL          @SJ084C0
         MVC   TSDATA(5),=X'2020202120' MOVE EDIT PATTERN      @SJ084C0
         LR    R0,R1               SAVE R1                     @SJ084C0
         LA    R1,TSDATA+4         POINT TO LAST DIGIT         @SJ084C0
         EDMK  TSDATA(5),TSDATA+5  EDIT NUMERIC INSERT         @SJ084C0
         LR    R9,R1               POINT TO FIRST DIGIT        @SJ084C0
         LR    R1,R0               RESTORE R1                  @SJ084C0
         LA    R8,TSDATA+5         POINT PAST LAST DIGIT       @SJ084C0
         SR    R8,R9               GET LENGTH                  @SJ084C0
         SR    R15,R8              DECREMENT REMAINING LENGTH  @SJ084C0
         BC    NPLUS,MSGERROR      BRANCH IF TOO BIG           @SJ084C0
         BCTR  R8,0                GET MACHINE LENGTH          @SJ084C0
         EX    R8,MVCNUM           MOVE NUMERIC INSERT         @SJ084C0
         LA    R3,1(R8,R3)         POINT TO NEXT OUTPUT CHAR   @SJ084C0
         LA    R1,TEXTEND          POINT TO NEXT FIELD         @SJ084C0
         B     MSGNEXT             END OF FIELD                @SJ084C0
MVCNUM   MVC   0(*-*,R3),0(R9)     EXECUTED                    @SJ084C0
*--------------------------------------------------------------@SJ084C0
*              ERROR IN FIELD                                  @SJ084C0
*--------------------------------------------------------------@SJ084C0
MSGERROR EQU   *                                               @SJ084C0
         MVI   0(R3),C'?'          INDICATE ERROR              @SJ084C0
         B     RETURN              NO MORE FIELDS              @SJ084C0
*--------------------------------------------------------------@SJ084C0
*              END OF FIELD                                    @SJ084C0
*--------------------------------------------------------------@SJ084C0
MSGNEXT  EQU   *                                               @SJ084C0
         BCT   R14,MSGLOOP         LOOP TO NEXT FIELD          @SJ084C0
         DROP  R1                  TEXTFLAG                    @SJ084C0
***************************************************************@SJ084C0
*              RETURN TO CALLER                                @SJ084C0
***************************************************************@SJ084C0
RETURN   EQU   *                                               @SJ084C0
         L     R1,FCTWORK          RESTORE POINTER TO OLD      @SJ084C0
         ARETURN                                               @SJ084C0
CLCID    CLC   0(*-*,R15),0(R14)   EXECUTED                    @SJ084C0
         EJECT                                                 @SJ084C0
***************************************************************@SJ084C0
* THE FOLLOWING TABLE CONTAINS A POINTER TO A MESSAGE          @SJ084C0
* CORRESPONDING TO EACH POSSIBLE RQINDEX VALUE.                @SJ084C0
***************************************************************@SJ084C0
TABLE    DS    0A                                              @SJ084C0
         DC    A(NOINDEX)                                      @SJ084C0
         DC    A(#RQNOSUB)                                     @SJ084C0
         DC    A(#RQFETCH)                                     @SJ084C0
         DC    A(#RQVOLWT)                                     @SJ084C0
         DC    A(#RQALLOC)                                     @SJ084C0
         DC    A(#RQVOLUA)                                     @SJ084C0
         DC    A(#RQVERIF)                                     @SJ084C0
         DC    A(#RQERROR)                                     @SJ084C0
         DC    A(#RQSELEC)                                     @SJ084C0
         DC    A(#RQONMAI)                                     @SJ084C0
         DC    A(#RQWTR)                                       @SJ084C0
         DC    A(#RQTERM)                                      @SJ084C0
         DC    A(#RQBRKDW)                                     @SJ084C0
         DC    A(#RQRESTR)                                     @SJ084C0
         DC    A(#RQDONE)                                      @SJ084C0
         DC    A(#RQOUTPT)                                     @SJ084C0
         DC    A(#RQOUTQU)                                     @SJ084C0
         DC    A(#RQOSWAI)                                     @SJ084C0
         DC    A(#RQCMPLT)                                     @SJ084C0
         DC    A(#RQDEMSE)                                     @SJ084C0
         DC    A(#RQEFWAI)                                     @SJ084C0
         DC    A(#RQEFBAD)                                     @SJ084C0
         DC    A(#RQMAXND)                                     @SJ084C0
***************************************************************@SJ084C0
* THE FOLLOWING TABLE CONTAINS POINTERS TO MESSAGES FOR THE    @SJ084C0
* OUTSERV TSO HOLD QUEUE.                                      @SJ084C0
***************************************************************@SJ084C0
TSOTABLE EQU   *                                               @SJ084C0
         DC    A(#OSETSO)                                      @SJ084C0
         DC    A(TJCLERR)                                      @SJ084C0
         DC    A(TFAILED)                                      @SJ084C0
         DC    A(TCANCEL)                                      @SJ084C0
         DC    A(TSYSTEM)                                      @SJ084C0
***************************************************************@SJ084C0
* THE FOLLOWING TABLE CONTAINS POINTERS TO MESSAGES FOR THE    @SJ084C0
* OUTSERV WTR QUEUE.                                           @SJ084C0
***************************************************************@SJ084C0
WTRTABLE EQU   *                                               @SJ084C0
         DC    A(#RQOUTQU)                                     @SJ084C0
         DC    A(WJCLERR)                                      @SJ084C0
         DC    A(WFAILED)                                      @SJ084C0
         DC    A(WCANCEL)                                      @SJ084C0
         DC    A(WSYSTEM)                                      @SJ084C0
         EJECT                                                 @SJ084C0
***************************************************************@SJ084C0
* THE RESPONSE TO A TSO STATUS COMMAND CONSISTS OF A PRIMARY   @SJ084C0
* MESSAGE PRODUCED BY THE STATUS COMMAND PROCESSOR AND A       @SJ084C0
* SECONDARY MESSAGE PRODUCED BY THIS EXIT ROUTINE. EACH        @SJ084C0
* SECONDARY MESSAGE IS DEFINED BY A TEXT MACRO.                @SJ084C0
*                                                              @SJ084C0
* THE NAME ON THE TEXT MACRO CALLS IS CODED AS FOLLOWS:        @SJ084C0
*        COLUMN 1 = # INDICATES THE MESSAGE WILL BE SELECTED   @SJ084C0
*              BASED ON A SINGLE TEST OF A SPECIFIC CONDITION  @SJ084C0
*              IN A CONTROL BLOCK. THIS TEST WILL BE THE LAST  @SJ084C0
*              IN A CHAIN OF TESTS.                            @SJ084C0
*        COLUMN 2-8 = FIRST 7 CHARACTERS OF SYMBOL USED FOR    @SJ084C0
*              THAT CONDITION.                                 @SJ084C0
*        COLUMN 1 ^= # INDICATES THAT MULTIPLE TESTS ARE       @SJ084C0
*              REQUIRED TO SELECT THE MESSAGE.                 @SJ084C0
***************************************************************@SJ084C0
OVFLOW   TEXT  'YOU HAVE MORE JOBS THAN STATUS CAN REPORT'     @SJ084C0
***************************************************************@SJ084C0
* PRIMARY MESSAGE:                                             @SJ084C0
* JOB JOBNAME (JOBID) EXECUTING<, IN HOLD STATUS>              @SJ084C0
* SECONDARY MESSAGES FOLLOW:                                   @SJ084C0
***************************************************************@SJ084C0
*              STATUS FOR OTHER THAN MAIN                      @SJ084C0
*JQE                                                           @SJ084C0
#SECOMP  TEXT  'FUNCTION ',DSPNAME,' COMPLETE - TRY AGAIN',    @SJ084C0*
               ' PRTY=',(JQEPRTY)                              @SJ084C0
#SEACTIV TEXT  'FUNCTION ',DSPNAME                             @SJ084C0
*--------------------------------------------------------------@SJ084C0
*              STATUS FOR MAIN                                 @SJ084C0
*RQINDEX                                                       @SJ084C0
#RQONMAI TEXT  'ON MAIN ',MPNAME,' STEP #',(RQSTPNO),          @SJ084C0*
               ' (',RQSTEPNM,')'                               @SJ084C0
#RQDSEL  TEXT  'ON MAIN ',MPNAME,' STARTED TASK'               @SJ084C0
#RQMVSTS TEXT  'TSO SESSION'                                   @SJ084C0
#RQDEMSE TEXT  'ON MAIN ',MPNAME,' STARTED TASK RESTARTING'    @SJ084C0
         EJECT                                                 @SJ084C0
***************************************************************@SJ084C0
* PRIMARY MESSAGE:                                             @SJ084C0
* JOB JOBNAME (JOBID) WAITING FOR EXECUTION<, IN HOLD STATUS>  @SJ084C0
* SECONDARY MESSAGES FOLLOW:                                   @SJ084C0
***************************************************************@SJ084C0
*              STATUS FOR OTHER THAN MAIN                      @SJ084C0
*JQE                                                           @SJ084C0
NOTACTIV TEXT  'FOR FUNCTION ',DSPNAME,', PRTY=',(JQEPRTY)     @SJ084C0
#SERESCH TEXT  'FOR FUNCTION ',DSPNAME,' (NEEDS DEVICES)',     @SJ084C0*
               ', PRTY=',(JQEPRTY)                             @SJ084C0
#SEPENDG TEXT  'FOR FUNCTION ',DSPNAME,' (NEEDS DEVICES)',     @SJ084C0*
               ', PRTY=',(JQEPRTY)                             @SJ084C0
#JQEDUPN TEXT  'DUE TO DUPLICATE JOB NAME, PRTY=',(JQEPRTY)    @SJ084C0
#JCTCGUA TEXT  'DUE TO JOB CLASS OR GROUP UNAVAILABLE',        @SJ084C0*
               ', PRTY=',(JQEPRTY)                             @SJ084C0
*--------------------------------------------------------------@SJ084C0
*              STATUS FOR MAIN (AND SOME OUTSERV)              @SJ084C0
NORQ     TEXT  'FOR ',DSPNAME,', PRTY=',(JQEPRTY)              @SJ084C0
*RQINDEX                                                       @SJ084C0
NOINDEX  TEXT  'FOR ',DSPNAME,', PRTY=',(RQJCTPTY)             @SJ084C0
#RQNOSUB TEXT  'IN FUNCTION ',DSPNAME,' - TRY AGAIN',          @SJ084C0*
               ', PRTY=',(JQEPRTY)                             @SJ084C0
#RQFETCH TEXT  'IN RESOURCE ANALYSIS, PRTY=',(RQJCTPTY)        @SJ084C0
#RQVOLWT TEXT  'FOR VOLUME LIBRARY FETCH, PRTY=',(RQJCTPTY)    @SJ084C0
#RQALLOC TEXT  'FOR RESOURCE ALLOCATION, PRTY=',(RQJCTPTY)     @SJ084C0
#RQVOLUA TEXT  'FOR UNAVAILABLE VOLUMES, PRTY=',(RQJCTPTY)     @SJ084C0
#RQVERIF TEXT  'FOR VOLUME MOUNT, PRTY=',(RQJCTPTY)            @SJ084C0
#RQERROR TEXT  'FOR SETUP ERROR DECISION, PRTY=',(RQJCTPTY)    @SJ084C0
#RQSELEC TEXT  'FOR MAIN PROCESSOR, PRTY=',(RQJCTPTY)          @SJ084C0
#RQWTR   TEXT  'FOR MVT/SVS WRITER'                            @SJ084C0
#RQTERM  TEXT  'FOR MAIN TERMINATION - TRY AGAIN',             @SJ084C0*
               ', PRTY=',(RQJCTPTY)                            @SJ084C0
#RQBRKDW TEXT  'FOR RESOURCE DEALLOCATION, PRTY=',(RQJCTPTY)   @SJ084C0
#RQRESTR TEXT  'FOR SYSTEM RESTART, PRTY=',(RQJCTPTY)          @SJ084C0
#RQDONE  TEXT  'MAIN PROCESSING COMPLETE - TRY AGAIN',         @SJ084C0*
               ', PRTY=',(RQJCTPTY)                            @SJ084C0
#RQEFWAI TEXT  'FOR TERMINATION OF ',DSPNAME,' - TRY AGAIN',   @SJ084C0*
               ', PRTY=',(RQJCTPTY)                            @SJ084C0
#RQEFBAD TEXT  'SYSTEM FAILURE IN FUNCTION ',DSPNAME,          @SJ084C0*
               ', PRTY=',(RQJCTPTY)                            @SJ084C0
#RQMAXND TEXT  'FUNCTION ',DSPNAME,', UNKNOWN STATUS'          @SJ084C0
*--------------------------------------------------------------@SJ084C0
* THE FOLLOWING MESSAGES MAY REPLACE #RQALLOC                  @SJ084C0
*RQMDSREQ                                                      @SJ084C0
#RQBSYDE TEXT  'FOR DEVICES, PRTY=',(RQJCTPTY)                 @SJ084C0
#RQBSYVO TEXT  'FOR VOLUMES, PRTY=',(RQJCTPTY)                 @SJ084C0
#RQBSYDT TEXT  'FOR DATA SETS, PRTY=',(RQJCTPTY)               @SJ084C0
#RQVFYPD TEXT  'FOR VOLUMES, PRTY=',(RQJCTPTY)                 @SJ084C0
#RQDFPDG TEXT  'FOR DEVICES, PRTY=',(RQJCTPTY)                 @SJ084C0
*--------------------------------------------------------------@SJ084C0
         EJECT                                                 @SJ084C0
***************************************************************@SJ084C0
* PRIMARY MESSAGE:                                             @SJ084C0
* JOB JOBNAME (JOBID) ON OUTPUT QUEUE<, IN HOLD STATUS>        @SJ084C0
* SECONDARY MESSAGES FOLLOW:                                   @SJ084C0
***************************************************************@SJ084C0
*RQINDEX                                                       @SJ084C0
#RQOUTPT TEXT  'WAITING FOR SCHEDULING - TRY AGAIN',           @SJ084C0*
               ', PRTY=',(RQJCTPTY)                            @SJ084C0
#RQOUTQU TEXT  'WAITING FOR WRITER, PRTY=',(RQJCTPTY)          @SJ084C0
#RQOSWAI TEXT  'WAITING FOR TERMINATION - TRY AGAIN',          @SJ084C0*
               ', PRTY=',(RQJCTPTY)                            @SJ084C0
#RQCMPLT TEXT  'COMPLETE - TRY AGAIN, PRTY=',(RQJCTPTY)        @SJ084C0
*--------------------------------------------------------------@SJ084C0
* THE FOLLOWING MESSAGES MAY REPLACE #RQOUTQU                  @SJ084C0
#OSSSCHE TEXT  'ACTIVE ON WRITER'                              @SJ084C0
WJCLERR  TEXT  'WAITING FOR WRITER (JCL ERROR)',               @SJ084C0*
               ', PRTY=',(RQJCTPTY)                            @SJ084C0
WFAILED  TEXT  'WAITING FOR WRITER (FAILED)',                  @SJ084C0*
               ', PRTY=',(RQJCTPTY)                            @SJ084C0
WCANCEL  TEXT  'WAITING FOR WRITER (CANCELED)',                @SJ084C0*
               ', PRTY=',(RQJCTPTY)                            @SJ084C0
WSYSTEM  TEXT  'WAITING FOR WRITER (SYSTEM FAILURE)',          @SJ084C0*
               ', PRTY=',(RQJCTPTY)                            @SJ084C0
#OSETSO  TEXT  'WAITING FOR TSO USER ',RQTUSID                 @SJ084C0
TJCLERR  TEXT  'WAITING FOR TSO USER ',RQTUSID,' (JCL ERROR)', @SJ084C0*
               ', PRTY=',(RQJCTPTY)                            @SJ084C0
TFAILED  TEXT  'WAITING FOR TSO USER ',RQTUSID,' (FAILED)',    @SJ084C0*
               ', PRTY=',(RQJCTPTY)                            @SJ084C0
TCANCEL  TEXT  'WAITING FOR TSO USER ',RQTUSID,' (CANCELED)',  @SJ084C0*
               ', PRTY=',(RQJCTPTY)                            @SJ084C0
TSYSTEM  TEXT  'WAITING FOR TSO USER ',RQTUSID,                @SJ084C0*
               ' (SYSTEM ERROR),PRTY=',(RQJCTPTY)              @SJ084C0
***************************************************************@SJ084C0
         TEXT  STAT=YES                                        @SJ084C0
         EJECT                                                 @SJ084C0
         IATYTSWK MOD=NULL,OLD=YES,TYPE=DATA                   @SJ084C0
         ORG   OLMMSLEN            OVERLAY MESSAGE FIELD LENGTH@SJ084C0
         DC    AL2(RAM8969L)       MESSAGE FIELD LENGTH        @SJ084C0
         ORG   IAM8969             OVERLAY SKELETON MESSAGE    @SJ084C0
RAM8969J DC    CL8' ',C'('         JOB NAME                    @SJ084C0
RAM8969# DC    CL4' ',C') '        JOB NUMBER                  @SJ084C0
RAM8969T DC    CL54' '             MESSAGE TEXT                @SJ084C0
RAM8969E EQU   *                   END OF SECONDARY MESSAGE    @SJ084C0
RAM8969L EQU   RAM8969E-OLMMSLEN   MESSAGE LENGTH              @SJ084C0
         ORG   ,                                               @SJ084C0
         EJECT                                                 @SJ084C0
         DROP  R2                  JQESTART                    @SJ084C0
         DROP  R4                  SSCSARAY                    @SJ084C0
         DROP  R5                  DSPSTART                    @SJ084C0
         DROP  R6                  RQSTART                     @SJ084C0
         DROP  R7                  MPCSTART                    @SJ084C0
         DROP  R10                 RATUX00                     @SJ084C0
         DROP  R13                 TSWORK                      @SJ084C0
         END   ,                                               @SJ084C0
