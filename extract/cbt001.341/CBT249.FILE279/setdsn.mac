SETDSN   BEGIN
*
* SETDSN IS A COMMAND PROCESSOR INVOKED TO STUFF THE DATASET NAME
* INTO A CLIST VARIABLE.  THE CLIST VARIABLE NEEDS TO BE INITIALIZED
* TO THE LARGEST POSSIBLE LENGTH OF THE DATASET NAME PRIOR TO CALL
* (I.E. SET &DSN = XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX)
* CALL FORMAT:
* SETDSN <CLIST VARIABLE NAME WITHOUT &> <DDNAME>
*
* TOM FOTH, WSRCC, 03/09/82
*
         LR   R10,R1           SAVE R1 POINTING TO CPPL
         USING CPPL,R10
         L    R2,0(0,R1)       GET THE ADDRESS OF THE STRING IN R2
         LH   R3,0(R2)         R3 CONTAINS STRING + FULLWORD LENGTH
         LR   R7,R2            R7 <- R2
         AR   R7,R3            R7 <- ADDRESS OF END OF STRING
         LH   R4,2(R2)         R4 CONTAINS POINTER TO FIRST NONBLANK
         LR   R5,R3            R5 <- R3
         SR   R5,R4            R5 <- R5 - R3
         CH   R5,=H'4'         IF LEN ^= 4 THEN  PARAMETERS WERE
         BNE  GETVAR           GIVEN
         TPUT ERRM1,L'ERRM1    PARAMETERS WERE NOT GIVEN
         LA   R15,20           SET RC
         B    END              END
GETVAR   DS   0H
         LA   R2,4(R2)         R2 POINTS IN FRONT OF FULLWORD
         AR   R2,R4            R2 POINTS TO NONBLANK
         LA   R6,VARNAME       R6 POINTS TO VARNAME
         BAL  R14,MOVERTN      GO MOVE THE VARIABLE
         LA   R0,8             LENGTH OF VARIABLE
         SR   R0,R5            MINUS LENGTH REMAINING YIELDS LENGTH
         STH  R0,VARNAMEL      LENGTH OF VARIABLE NAME
FINDDDN  CR   R2,R7            POINTING PAST END OF STRING?
         BNH  NONBLNK          NOPE
         TPUT ERRM2,L'ERRM2    PUT ERROR MESSAGE
         LA   R15,20           SET RC
         B    END              RETURN
NONBLNK  CLI  0(R2),C' '       LOOK FOR NON-BLANK
         BNE  GETDDN           OK
         LA   R2,1(R2)
         B    FINDDDN
GETDDN   MVC  DDN(8),=CL8'  '  CLEAR DDNAME
         LA   R6,DDN           ADDR OF DDNAME
         BAL  R14,MOVERTN      MOVE IT IN
         MVC  DCB+40(8),DDN    MOVE TO DCB
         RDJFCB DCB            READ THE JFCB
         LTR  R15,R15          WAS THERE A DD ALLOCATED
         BZ   GOTDSN           YES
         MVC  DSN,NODD        NMOVE IN DDNAME NOT ALLOCATED MSG
         MVC  DSN+11(8),DDN    MOVE IN DDNAME
         MVC  LENGTH,=AL2(L'NODD) LENGTH OF MESSAGE
         B    PUTVAR           GO PUT THE VARIABLE
GOTDSN   DS   0H
         LA   R5,44
         LA   R4,DSN
FINDLAST CLI  0(R4),C' '
         BE   LASTCHAR
         LA   R4,1(R4)
         BCT  R5,FINDLAST
LASTCHAR LA   R4,44
         SR   R4,R5
         STH  R4,LENGTH
PUTVAR   BAL  R9,READTOP
         C    R15,=F'4'
         BH   END
         BAL  R9,SETVAR
END      FINISH RC=(R15)
MOVERTN  LA   R5,8
MOVELOOP CLI  0(R2),C' '
         BE   ENDMOVE
         MVC  0(1,R6),0(R2)
         OI   0(R6),X'40'
         LA   R2,1(R2)
         LA   R6,1(R6)
         CR   R2,R7
         BNH  MOVEAGIN
         BCTR R5,0
         BR   R14
MOVEAGIN BCT  R5,MOVELOOP
         CLI  0(R2),C' '       MAKE SURE VARNAME ONLY 8 CHARACTERS
         BER  R14              OK
         TPUT ERRM3,L'ERRM3    PUT ERROR MESSAGE
         LA   R15,20           SET RC
         B    END              RETURN
ENDMOVE  MVI  0(R6),C' '
         BR   R14
         EJECT
READTOP  EQU   *
         L     R5,CPPLECT         R5->ECT
         L     R5,4(,R5)          R5->IOSRL
         L     R4,0(,R5)          R4->TOP OF STACK
CKCLIST  TM    0(R4),X'08'        CLIST ELEMENT?
         BO    GOTCL              YES->WE HAVE A CLIST
         S     R4,=F'4'           R4=R4-4 (NEXT ELEMENT DOWN ON STACK)
         C     R4,4(,R5)          R4<BOTTOM OF STACK PTR?
         BNL   CKCLIST            NO ->STILL IN STACK; GO CHECK IT
         TPUT  ERRM4,L'ERRM4      PUT OUT ERROR MESSAGE
         LA    R15,20             YES->R15=260=RC
         BR    R9                 EXIT READTOP WITH ERROR
GOTCL    LA    R7,VARNAME         R7->VARIABLE NAME
         LH    R6,VARNAMEL        R6=VAR LENGTH FOR LENGTH COMPARE
         L     R5,0(,R4)          R5->LSD
         L     R5,12(,R5)         R5->EXECDATA
         L     R5,0(,R5)          R5->SNTAB
         L     R4,8(,R5)          R4==USED TABLE LENGTH
         LA    R4,0(R4,R5)        R4->END OF TABLE USED
         LA    R3,12(,R5)         R3->FIRST SNTAB ENTRY
         LR    R1,R6              R1=R6  VARIABLE NAME LENGTH
         BCTR  R1,R0              R1=R1-1 FOR EXECUTED COMPARE
*
RLOOP    LH    R2,6(,R3)          R2=NAME LENTH
         CR    R6,R2              SAME LENGTH?
         BNE   LOOPCHK            NO -> CHECK DONE
COMPARE  CLC   0(0,R7),8(R3)      EXECUTED
         EX    R1,COMPARE         COMPARE NAMES
         BE    GOTIT
LOOPCHK  LA    R3,8(R2,R3)        POINT TO NEXT ENTRY
         CR    R3,R4              DONE?
         BL    RLOOP              NO->CONTINUE
RERR     LA    R15,16        R15= RC=260
         BR    R9                 EXIT READTOP WITH ERROR
GOTIT    EQU   *
         L     R1,0(,R3)          GET VALUE ADDR
         ST    R1,VALADDR         SAVE IT
         BR    R9                 RETURN
         EJECT
ERRCK    EQU   *
         BR    R9
*
SETVAR   EQU   *
         L     R7,VALADDR         R7->VALUE TABLE ENTRY
         LH    R8,LENGTH          GET VARIABLE LENGTH
         CH    R8,=H'0'           LEN > 3 ?
         BNH   SETNULL            NO -> SET VARIABLE TO NULL
         LA    R6,DSN             PT TO STRING
         CH    R8,2(,R7)          ROOM FOR INPUT?
         BNH   SM                 YES->MOVE IT.
         LH    R8,2(,R7)          NO ->GET HIS LENGTH
SM       STH   R8,0(,R7)          STORE CORRECT LENGTH
         BCTR  R8,R0              R8=R8-1
         EX    R8,SMOVE           MOVE IT
         BR    R9
SMOVE    MVC   4(0,R7),0(R6)      EXECUTED
SETNULL  SLR   R8,R8              R8=0
         STH   R8,0(,R7)          STORE ZERO LENGTH
         BR    R9                 RETURN
         EJECT
VARNAMEL DC    H'8'
LENGTH   DC   H'44'
VALADDR  DC    F'0'
DCB      DCB  DDNAME=XXXXXXXX,EXLST=EXLST,DSORG=PS,MACRF=(E)
EXLST    DC   X'07',AL3(DSN)
DSN      DS   CL176
VARNAME  DS   CL8
DDN      DS   CL8
ERRM1    DC   C'Error in SETDSN-No parameters specified'
ERRM2    DC   C'Error in SETDSN-No ddname specified'
ERRM3    DC   C'Error in SETDSN-parameter exceeds 8 characters'
ERRM4    DC   C'Error in SETDSN-bottom of stack reached'
NODD     DC   C'*** DDNAME XXXXXXXX NOT ALLOCATED'
         IKJCPPL
         END
