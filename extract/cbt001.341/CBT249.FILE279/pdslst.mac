*          DATA SET PDSLST     AT LEVEL 001 AS OF 06/22/81
MAIN     CSECT
*
* PDSLIST IS A SASPROC THAT PRODUCES A SAS DATASET THAT CONTAINS
* THE NAME, TTR, CFLAG, USER DATA, AND ALIAS STATUS OF EACH MEMBER
* OF A PDS.
*
* TOM FOTH, WSRCC, 03/09/82
*
         SASRENT THRU=1,SNP=1
         LA    R3,1             INDEX TO THE PARAMETER
         LA    R4,PARMTBL       PTR TO THE PARAMETER TABLE
         LA    R5,DEFAULTS      PTR TO THE DEFAULT TABLE
NXTPARM  ST    R3,INDEX         SAVE THE INDEX
         CALLA PARM,(INDEX,PARMVAL) GET THE INDEXTH PARAMATER
         LR    R6,R3            R6 FOR WORK
         BCTR  R6,0             ONE LESS (ZERO OFFSET IN TABLE)
         SLL   R6,3             MULTIPLY BY 8
         LR    R7,R6            SAVE FOR THE PTR TO DEFAULTS
         AR    R6,R4            ADD THE PARMTBL ADDRESS
         CLI   PARMVAL,X'80'    IS IT A MISSING VALUE?
         BE    MVCDEF           MOVE IN THE DEFAULT PARAMETER
         MVC   0(8,R6),PARMVAL  MOVE IN THE VALUE GIVEN US
         B     INCPARM          INCREMENT TO NEXT PARM
MVCDEF   AR    R7,R5            ADD THE DEFAULT ADDRESS
         MVC   0(8,R6),0(R7)    MOVE IN THE DEFAULT
INCPARM  LA    R3,1(R3)         GET THE NEXT PARAMETER
         C     R3,=F'12'        ARE WE AT THE END?
         BNE   NXTPARM          NOPE
         LA    R2,2             PARAMETER TWO
         LA    R4,PARMTBL+8     ADDRESS OF ENTRY IN TABLE
INLOPINT LA    R1,2             PARAMETER TWO
         LA    R3,PARMTBL+8     ADDRESS OF PARM 2 IN TABLE
INTEST   CLC   0(8,R4),0(R3)    ENTRIES MATCH
         BNE   INLOOP           NOPE
         CR    R4,R3            YEP, IS THIS THE SAME ENTRY?
         BE    INLOOP           YEP, NOT TO WORRY
         PRT   '0ERROR: DUPLICATE VARIABLE NAMES SPECIFIED.'
         PRT   '+ERROR:'
         B     EXIT             EXIT
INLOOP   LA    R1,1(R1)         INCREMENT TO NEXT PARM
         C     R1,=F'7'         END OF LIST?
         BE    OUTLOOP          INCREMENT OUTER LOOP
         LA    R3,8(R3)         POINT TO NEXT PARM
         B     INTEST           AND GO TEST
OUTLOOP  LA    R2,1(R2)         INCREMENT OUTER LOOP
         C     R2,=F'7'         END OF OUTER LOOP?
         BE    PARMSOK          YEP, ALL MUST BE OKAY
         LA    R4,8(R4)         POINT TO NEXT ENTRY
         B     INLOPINT         GO INIT THE INNER LOOP AND START
PARMSOK  DS    0H
         LA    R0,S99RB         GET THE ADDRESS OF THE RB
         ST    R0,S99RBP        STORE IT IN RB POINTER
         MVI   S99RBP,X'80'     ALWAYS LAST IN THE LIST
         MVC   S99RB,=XL4'14070000' RB IS 20 BYTES, FUNC = 07 (INFO)
         MVC   S99RB+4,=F'0'    FLAGS1 = 0
         LA    R0,TXTUPTRS      GET THE ADDRESS OF THE TEXT UNITS
         ST    R0,S99RB+8       SAVE IT IN THE RB
         MVC   S99RB+12,=F'0'   RESERVED WORD OF ZEROES
         MVC   S99RB+16,=F'0'   FLAGS2 = 0
         MVC   DSSPEC,@DSSPEC   MOVE IN DEFAULTS FOR TEXT UNITS
         MVC   DDSPEC,@DDSPEC   MOVE IN DEFAULTS FOR TEXT UNITS
         MVC   STSPEC,@STSPEC   MOVE IN DEFAULTS FOR TEXT UNITS
         MVC   ORSPEC,@ORSPEC   MOVE IN DEFAULTS FOR TEXT UNITS
         MVC   ATSPEC,@ATSPEC   MOVE IN DEFAULTS FOR TEXT UNITS
         LA    R0,DDSPEC        GET THE TEXT UNIT ADDRESS
         ST    R0,TXTUPTRS+00   STORE IT IN THE TEXT UNIT TABLE
         LA    R0,DSSPEC        SAME
         ST    R0,TXTUPTRS+04   SAME
         LA    R0,STSPEC        SAME
         ST    R0,TXTUPTRS+08   SAME
         LA    R0,ORSPEC        SAME
         ST    R0,TXTUPTRS+12   SAME
         LA    R0,ATSPEC        SAME
         ST    R0,TXTUPTRS+16   SAME
         MVI   TXTUPTRS+16,X'80' END OF THE LIST
         MVC   DDPARM,PARMTBL   MOVE IN THE DDNAME
         MVC   DDLEN,=H'8'
         LA    R1,S99RBP
         SNP   REGS
         SNP   (S99RBP,S99END)
         SVC   99
         SNP   REGS
         SNP   (S99RBP,S99END)
         LTR   R15,R15
         BZ    S99OK
         C     R15,=F'4'
         BE    NODD
S99FAIL  PRT   '0ERROR: SVC 99 FAILED IN DD NAME LOOK UP.'
         PRT   '+ERROR:'
         SNP   REGS
         SNP   (S99RBP,S99END)
         B     EXIT
NODD     CLC   S99RB+4(2),=XL2'0438'
         BNE   S99FAIL
         PRT   '0ERROR: DDNAME= DDNAME NOT PRESENT IN JCL.'
         PRT   '+ERROR:'
         B     EXIT
S99OK    TM    ORPARM,X'02'
         BO    DSOKAY
         PRT   '0ERROR: DATASET SPECIFIED BY PDS IS NOT PARTITIONED.'
         PRT   '+ERROR:'
         B     EXIT
DSOKAY   DS    0H
         LA    R9,INPDS         ADDRESS OF THE DCB OF THE PDS
         MVC   INPDS(LDCB),DCBMODEL MOVE THE MODEL FROM THE COPY
         MVC   INPDS+X'28'(8),PARMTBL MOVE THE DDNAME
         MVC   REMOPEN,REMOPENL MOVE IN THE LIST TO WORKING STORAGE
         OPEN  ((R9),INPUT),MF=(E,REMOPEN)  THE PDS IN QUESTION
         TM    INPDS+48,X'10'   WAS OPEN OKAY?
         BO    OPENOK           YEAH FOR THE USER...
*        ERR   2                BOO - OPEN FAILED (FOR SOME REASON)
         PRT   '0ERROR: OPEN FAILED FOR DDNAME SPECIFIED BY PDS.'
         PRT   '+ERROR:'
         B     EXIT
OPENOK   DS    0H
         TM    ATPARM,X'80'
         BNO   NOCONCAT
         PRT   '0NOTE: ONLY FIRST DATASET IN CONCATENTATION LISTED.'
NOCONCAT DS    0H
         MVC   DSLABEL,DSLABELM MOVE THE MODEL FROM THE DSLABEL
         MVC   TITLE,PARMTBL+48 MOVE THE MODEL FROM THE DSLABEL
         CALLA LODOUT           GET THE SAS OUTPUT ROUTINES
         CALLA SETDSN,(=F'1')   SET TO THE OUTPUT DSN
         CALLA OPNOUT           OPEN THE DATASET
         CALLA WLABEL,(DSLABEL) LABEL THE DATASET
*
* NOW, LET'S SET UP THE VARIABLE NAMES IN THE DATASET...
*
* 1ST VAR - MEMBER
         MVC   VECTOR,=H'0'     INITIALIZE VECTOR
         MVC   NTYPE,=H'2'      VARIABLE TYPE IS CHAR
         MVC   NLNG,=H'8'       AND THE LENGTH IS EIGHT CHAR
         MVC   NVAR0,=H'1'      IT IS THE FIRST VARIABLE
         MVC   NNAME,PARMTBL+8  ITS NAME IS MEMBER
         MVC   NLABEL,=CL40'EIGHT CHARACTER MEMBER NAME'
         MVC   NFORM,=CL8' '    FORM NAME
         MVC   NIFORM,=CL8' '   INFORM NAME
         MVC   NFL,=H'0'        FORMAT LENGTH
         MVC   NFD,=H'0'        NO DECIMAL LENGTH
         CALLA ONAMES,(NAME,VECTOR,MEMBER) TELL SAS ABOUT IT.
* 2ND VAR - ALIAS
         MVC   NLNG,=H'1'       AND THE LENGTH IS ONE CHAR
         MVC   NVAR0,=H'2'      IT IS THE SECOND VARIABLE
         MVC   NNAME,PARMTBL+40 ITS NAME IS ALIAS
         MVC   NLABEL,=CL40'AN A IF NAME IS AN ALIAS ELSE BLANK'
         CALLA ONAMES,(NAME,VECTOR,ALIAS) TELL SAS ABOUT IT.
* 3RD VAR - TTR
         MVC   NTYPE,=H'2'      VARIABLE TYPE IS CHAR
         MVC   NLNG,=H'3'       AND THE LENGTH IS 3 BYTES
         MVC   NVAR0,=H'3'      IT IS THE THIRD VARIABLE
         MVC   NNAME,PARMTBL+16 ITS NAME IS TTR
         MVC   NLABEL,=CL40'TTR OF THE MEMBER'
         CALLA ONAMES,(NAME,VECTOR,TTR) TELL SAS ABOUT IT.
* 4TH VAR - USER DATA
         MVC   NTYPE,=H'2'      VARIABLE TYPE IS CHAR
         MVC   NLNG,=H'62'      AND THE LENGTH IS SIXTY-TWO BYTES
         MVC   NVAR0,=H'4'      IT IS THE FOURTH VARIABLE
         MVC   NNAME,PARMTBL+24 ITS NAME IS USERDATA
         MVC   NLABEL,=CL40'62 BYTE USER DATA FIELD OF MEMBER'
         CALLA ONAMES,(NAME,VECTOR,USERDATA) TELL SAS ABOUT IT.
* 5TH VAR - ALIAS FLAG/NOTE COUNT/USER DATA LENGTH
         MVC   NTYPE,=H'2'      VARIABLE TYPE IS CHAR
         MVC   NLNG,=H'1'       AND THE LENGTH IS ONE BYTE
         MVC   NVAR0,=H'5'      IT IS THE FIFTH VARIABLE
         MVC   NNAME,PARMTBL+32 ITS NAME IS CFLAG
         MVC   NLABEL,=CL40'ALIAS FLAG, TTRN CNT, + USERDATA LENGTH'
         CALLA ONAMES,(NAME,VECTOR,CFLAG) TELL SAS ABOUT IT.
*
         CALLA ENDNAM           END OF OUTPUT VARIABLE NAMES
         CALLA DLTOUT           DELETE THE OUTPUT ROUTINES
         CALLA ABUF             GET US AN OUTPUT BUFFER
         L     R1,X'2C'(R9)     GET THE ADDRESS OF THE DEB
         LA    R1,0(R1)         PURIFY IT
         L     R1,X'20'(R1)     ADDRESS OF THE UCB
         LA    R1,0(R1)         PURIFY IT
         MVC   VOLSER,X'1C'(R1) MOVE IN THE VOLSER
         MVC   DSN,=CL44' '     CLEAR THE DSN FIELD
         SR    R1,R1            CLEAR R1
         IC    R1,DSLEN+1       GET THE LENGTH OF THE DSN
         LTR   R1,R1            IS THERE A DSN
         BNZ   MVCDSN           YEP
         MVC   DSN,=CL44'_NULL_' NO DSN-MOVE IN NULL
         B     TSTDSOBS
MVCDSN   BCTR  R1,0
         MVC   DSN(*-*),DSPARM TO BE EXECUTED
         EX    R1,*-6           MOVE THE DSNAME
TSTDSOBS CALLA PARM,(=F'12',MEMBER) GET THE DSN PARM
         CLC   MEMBER,=XL8'8000000000000000' WAS DSN= SPECIFIED?
         BNE   DSNPARM          YEP...
         CALLA IOPT,(=F'1',INDEX) NOPE.
         CLC   INDEX,=F'0'      WAS THE OPTION SPECIFIED?
         BE    NODSNMEM         NOPE...
         MVC   MEMBER,=CL8'$$$$$$$$' YEP MOVE IN THE DEFAULT
DSNPARM  MVC   USERDATA,=CL62' ' CLEAR THE USERDATA FIELD
         MVC   USERDATA+00(44),DSN      MOVE IN THE DSN
         MVC   USERDATA+44(6),VOLSER    MOVE IN THE VOLSER
         MVC   USERDATA+50(8),PARMTBL   MOVE IN THE DDNAME
         MVI   ALIAS,C' '       MISSING VALUE
         MVI   CFLAG,C' '       MISSING VALUE
         MVC   TTR,=CL3'   '    MISSING VALUE
         CALLA PUTOUT,(VECTOR)  PUT THE OBSERVATION
*
NODSNMEM DS    0H
         PRT   '0NOTE:"PROC"PDSLIST"PROCESSED:"',EDIT
         MVC   $CC+15(8),PARMTBL
         MVC   $CC+30(44),DSN
         MVC   $CC+84(6),VOLSER
         PRT   ' NOTE:"DDNAME:"',',"DSN:"',23,',"VOL=SER=',74,EDIT
*
GETDIR   DS    0H
         GET   (R9)             GET A DIRECTORY RECORD
         LR    R5,R1            R5 POINTS TO DIRECTORY BLOCK
         SR    R4,R4            CLEAR R4
         ICM   R4,B'0011',0(R5) R4 OFFSET TO LAST CHARACTER
         AR    R4,R5            ADDRESS OF LAST CHAR IN RECORD
         LA    R7,2(R5)         R7 POINTS TO FIRST ENTRY
*
NXTELMNT DS    0H
         CLC   0(8,R7),=XL8'FFFFFFFFFFFFFFFF' WE LOOKING AT LAST MEM?
         BE    EOF              YEP...
         MVC   MEMBER,0(R7)     MOVE THE NAME
         SR    R0,R0            CLEAR R0
         MVC   TTR,8(R7)        MOVE IN THE TTR
         MVC   ALIAS,=CL1' '    CLEAR THE ALIAS FLAG
         TM    11(R7),X'80'     IS THIS AN ALIAS?
         BNO   NOALIAS          NOPE.
         MVC   ALIAS,=CL1'A'    SET THE ALIAS FLAG
*
NOALIAS  DS    0H
         MVI   USERDATA,C' '    BLANK OUT THE
         MVC   USERDATA+1(L'USERDATA-1),USERDATA USER FIELD
         SR    R3,R3            CLEAR R3
         IC    R3,11(R7)        GET THE HALFWORD LENGTH OF USER
         STC   R3,CFLAG         SAVE IT IN THE RECORD
         N     R3,=F'31'        CLEAR TTRN COUNT & ALIAS FLAG
         LTR   R3,R3            ANYTHING TO MOVE
         BZ    PUTOBS           NOPE
         SLL   R3,1             GET THE BYTE LENGTH
         BCTR  R3,0             DECREMENT R3 FOR THE MOVE
         EX    R3,MOVEUSER      MOVE IT TO THE RECORD
         LA    R3,1(R3)         CORRECT AFTER DECREMENT
PUTOBS   CALLA PUTOUT,(VECTOR)  PUT THE OBSERVATION
         LA    R7,12(R7,R3)     PTR = PTR + 12 + USER AREA LENGTH
         CR    R7,R4            ARE WE AT THE END OF THE RECORD
         BL    NXTELMNT         NOPE - GET ANOTHER ELEMENT
         B     GETDIR           YEP, GET ANOTHER RECORD
*
ERROREOF DS    0H
         PRT   '0WARNING: EOF REACHED BEFORE END OF PDS DIRECTORY.'
         PRT   '+WARNING: '
         PRT   ' WARNING: THIS SUGGESTED PROBLEMS IN PDS STRUCTURE.'
         PRT   '+WARNING: '
*
EXIT     PRT   '0NOTE: SAS STOPPED PROCESSING THIS STEP BECAUSE OF ERROX
               RS.'
         B     RNTR
*
EOF      DS    0H
         CALLA FBUF             FREE THE BUFFER
         CALLA CLSOUT           CLOSE THE DATASET
         CLOSE ((R9)),MF=(E,REMOPEN)
RNTR     SASRNTR
         TIOTCODE
*
* CONSTANTS -
*
MOVEUSER MVC   USERDATA(*-*),12(R7)   EXECUTED ABOVE
DCBMODEL DCB   DDNAME=INPDS,LRECL=256,RECFM=U,MACRF=GL,DSORG=PS,       X
               EODAD=ERROREOF
LDCB     EQU   *-DCBMODEL
         DS    0D
DSLABELM DS    0CL16           MODEL OF THE DSLABEL
         DC    XL8'8000000000000000' MISSING VALUE FOR DEG OF FREEDOM
         DC    CL8'DATA'       RECTANGULAR DATA SET
DEFAULTS DC    CL8'PDS'        DEFAULT DDNAME
         DC    CL8'MEMBER'     DEFAULT MEMBER VARIABLE NAME
         DC    CL8'TTR'        DEFAULT TTR VARIABLE NAME
         DC    CL8'USERDATA'   DEFAULT USERDATE VARIABLE NAME
         DC    CL8'CFLAG'      DEFAULT CFLAG VARIABLE NAME
         DC    CL8'ALIAS'      DEFAULT ALIAS VARIABLE NAME
         DC    CL8' '          DEFAULT TITLE INFO (40 BYTES TOTAL)
         DC    CL8' '
         DC    CL8' '
         DC    CL8' '
         DC    CL8' '
@DDSPEC  DS    0CL14
         DC    XL2'1'
         DC    XL2'1'
         DS    XL2
         DS    CL8
@DSSPEC  DS    0CL50
         DC    XL2'5'
         DC    XL2'1'
         DC    XL2'2C'
         DS    CL44
@STSPEC  DS    0CL7
         DC    XL2'7'
         DC    XL2'1'
         DC    XL2'1'
         DS    X
@ORSPEC  DS    0CL8
         DC    XL2'A'
         DC    XL2'1'
         DC    XL2'2'
         DS    XL2
@ATSPEC  DS    0CL7
         DC    XL2'C'
         DC    XL2'1'
         DC    XL2'1'
         DS    XL2
REMOPENL OPEN (,INPUT),MF=L
         UTILITY
         SASCOM
         SASDS
         SASLDST
         SASPROG
MAIND    DSECT
PARMTBL  DS    11CL8           LOAD THE PARM TABLE
PARMVAL  DS    CL8             WE PLACE THE PARM VALUE HERE
DSLABEL  DS    0CL16           WORK DSLABEL
         DS    CL8             HEADER INFO
         DS    CL8             HEADER INFO
TITLE    DS    CL40            OVERRIDE FOR HEADER
VECTOR   DS    40F             WORK ARRAY FOR SAS
INDEX    DS    F               PTR FOR GETTING PARMS
REMOPEN  DS    F
S99RBP   DS    F
S99RB    DS    5F
TXTUPTRS DS    5F
DDSPEC   DS    0CL14
         DS    XL2'1'
         DS    XL2'1'
DDLEN    DS    XL2
DDPARM   DS    CL8
DSSPEC   DS    0CL50
         DS    XL2'5'
         DS    XL2'1'
DSLEN    DS    XL2'2C'
DSPARM   DS    CL44
STSPEC   DS    0CL7
         DS    XL2'7'
         DS    XL2'1'
         DS    XL2'1'
STPARM   DS    XL1
ORSPEC   DS    0CL8
         DS    XL2'A'
         DS    XL2'1'
         DS    XL2'2'
ORPARM   DS    XL2
ATSPEC   DS    0CL8
         DS    XL2'C'
         DS    XL2'1'
         DS    XL2'1'
ATPARM   DS    XL1
S99END   EQU   *
         DS    0D
NAME     SASNAME DSECT=NO
DSN      DS    CL44
VOLSER   DS    CL6
MEMENTRY DS    0XL76           SAS DATA RECORD
MEMBER   DS    CL8             MEMBER NAME
ALIAS    DS    CL1             ALIAS FLAG
TTR      DS    CL3             TTR IN BINARY
USERDATA DS    CL62            USER FIELD
CFLAG    DS    CL1             ALIAS FLAG, TTRN CNT, & USER DATA LENGTH
INPDS    DCB   DDNAME=INPDS,LRECL=256,DSORG=PS,RECFM=U,MACRF=GL,       X
               EODAD=ERROREOF
MAINL    EQU   *-MAIND       LENGTH OF WORK AREA
         END
