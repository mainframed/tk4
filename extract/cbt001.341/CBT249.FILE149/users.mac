//CSYSMASU JOB ,USERS,NOTIFY=CSYSMAS,MSGCLASS=A,COND=(0,NE)
/*ROUTE PRINT WYLBUR
//ASM EXEC ASMHCL
//ASM.SYSLIB DD
//           DD
//           DD DISP=SHR,DSN=SYS5.MSSMAC
***********************************************************************
*                                                                     *
*        USERS:  DISPLAY TSO USERS STATISTICS                         *
*                                                                     *
***********************************************************************
         MACRO
         OACWORK &DUMMY
DOUBLE   DS    D                  WORK AREA
MASK     DS    D                  SELECTION MASKS (CHARACTER)
MASK2    DS    D                    AND (WILD)   *** ORDER ***
LINE     DS    0X
USERID   DS    CL10               USERID
PROC     DS    CL10               PROC NAME
FLG1     DS    CL1                INCORE OR OUT
FLG2     DS    CL2                REASON FOR WAIT
CPU      DS    CL10               JOBSTEP AND SRB TIME
INCORE   DS    CL8                FRAMES IN USE
WKGSET   DS    CL8                SRM WORKING SET
WAITS    DS    CL7                NUMBER OF SHORT WAITS
LINLEN   EQU   *-LINE
         MEND
USERS    OACENTER PARM=(R2),EXIT=EXIT,DSECT=WDSECT,WORK=(,X)
         LR    R1,R2              RESTORE PARM WHERE IT BELONGS
         MVC   MASK,=C'********'  INIT
         MVC   MASK2,=C'        '   MASKS
         TM    0(R1),X'80'        CALLED ? (R1->PARM)
         BO    NOTCMD             YES, GO TO PLIX
         SPACE 1
         L     R2,0(,R1)          LOAD FIRST PARM ADDR.
         LH    R3,0(,R2)          LOAD CPPL LENGTH FIELD.
         LH    R4,2(,R2)          LOAD PARAMETER OFFSET FIELD.
         SH    R3,=H'4'           REDUCE BY CONTROL WORD LENGTH,
         SR    R3,R4                AND BY PRE-SCANNED LENGTH.
         LA    R2,2(R2,R4)        CALCULATE ADDRESS OF NEW LNG  FIELD,
         STH   R3,0(,R2)            STORE LENGTH LIKE AN EXEC PARM.
         ST    R2,0(,R1)          CHANGE FIRST PARM ADDR.
         SPACE 1
NOTCMD   L     R2,0(,R1)          GET PARM ADDR.
         LH    R3,0(,R2)            AND LENGTH
         LTR   R3,R3              ANY ?
         BNP   NOPARM             BIF NONE
         CH    R3,=H'8'           TOO MUCH ?
         BNH   *+8                BIF NOT
         LA    R3,8               USE MAXIMUM
         BCTR  R3,0               -1 FOR EXECUTE
         MVC   MASK(0),2(R2)      << EXECUTED >>
         EX    R3,*-6             MOVE IN PARM
         SPACE 1
NOPARM   OC    MASK,MASK2         ENSURE UPPER CASE
         LA    R1,MASK            ADDR. OF MASKS
         LA    R0,8               COUNT
IMASKL   MVI   8(R1),X'FF'        ASSUME NOT WILD
         CLI   0(R1),C'*'         IS IT WILD ?
         BNE   *+8                BIF NOT
         MVI   8(R1),X'00'        WILD
         LA    R1,1(,R1)          NEXT POSITION
         BCT   R0,IMASKL          DO ALL
         SPACE 1
         LINK  EP=CLEAR           CLEAR THE SCREEN
         LA    R1,HEADER          OUTPUT HEADER
         LA    R0,HDRLEN
         TPUT  (1),(0),R
         L     R1,16              FIND CVT
         L     R1,CVTASVT-CVT(R1) FIND ASVT
         LA    R3,ASVTENTY-ASVT(R1) POINT TO FIRST ENTRY
         LA    R4,4               BXLE INCREMENT
         L     R5,ASVTMAXU-ASVT(R1) GET MAX NUMBER ADDRESS SPACES
         SLA   R5,2               TIMES 4
         LA    R5,0(R3,R5)        POINT TO END
         BCTR  R5,0               BACK UP ONE
LOOP     TM    0(R3),X'FF'        CHECK FOR BITS ON
         BNZ   LOOPBXLE           IF ANY SKIP
         L     R2,0(R3)           POINT TO ASCB
         OACUSING ASCB,R2
         MVI   LINE,C' '          CLEAR LINE
         MVC   LINE+1(LINLEN-1),LINE
         ICM   R1,15,ASCBJBNS     NAME FOR TSO AND STARTED TASKS
         BZ    LOOPBXLE
         MVC   DOUBLE,0(R1)       MOVE IN UID
         XC    DOUBLE,MASK
         NC    DOUBLE,MASK2
         BNZ   LOOPBXLE           BIF NOT SELECTED
         MVC   USERID(8),0(R1)    MOVE IN UID
         ICM   R1,15,ASCBCSCB     FIND CSCB
         BZ    LOOPBXLE
         CLI   CHTRKID-CHAIN(R1),CHTSID TEST FOR TSU
         BNE   LOOPBXLE
         MVC   PROC(8),CHCLS-CHAIN(R1) MOVE IN PROC NAME
         MVI   FLG1,C'O'          DEFAULT TO OUT OF CORE
         TM    ASCBRCTF,ASCBOUT   IS IT?
         BO    L1                 YES
         MVI   FLG1,C'I'          MARK IN CORE
L1       L     R1,ASCBOUCB        POINT TO OUCB
         OACUSING OUCB,R1
         TM    OUCBSFL,OUCBNSW    NON SWAPPABLE?
         BNO   L2
         MVI   FLG1,C'N'          MARK NON SWAPPABLE
L2       TM    OUCBEFL,OUCBLWT    LONG WAIT?
         BNO   L3
         MVI   FLG2,C'L'
L3       TM    OUCBEFL,OUCBTRM    TERMINAL WAIT
         BNO   L4
         MVI   FLG2,C'I'
L4       TM    OUCBEFL,OUCBOWT    OUTPUT WAIT?
         BNO   L5
         MVI   FLG2,C'O'
L5       TM    OUCBEFL,OUCBNQF    ENQHOLD?
         BNO   L6
         MVI   FLG2,C'Q'
L6       TM    OUCBEFL,OUCBMWT    MSO DETECTED WAIT?
         BNO   L7
         MVI   FLG2,C'M'
L7       LM    R6,R7,ASCBEJST     GET JOB STEP TIME
         LM    R8,R9,ASCBSRBT     GET SRB TIME
         ALR   R7,R9              ADD
         BC    12,NOCARRY
         LA    R8,1(R8)
NOCARRY  AR    R6,R8
         SRDL  R6,24              MOVE TO ODD REG
         M     R6,=A(1048576)     COMPUTE IN SECONDS
         D     R6,=A(10000*256)
         CVD   R7,DOUBLE
         MVC   CPU(10),=X'4020206B2021204B2020'
         ED    CPU(10),DOUBLE+4   DO THE EDIT
         LH    R0,ASCBFMCT        GET ALLOCATED PAGE FRAME COUNT
         SLA   R0,2               TIMES 4 FOR K
         CVD   R0,DOUBLE
         MVC   INCORE(8),=X'4020206B202120D2'
         ED    INCORE(7),DOUBLE+5
         LH    R0,OUCBWSS         GET WORKING SET SIZE
         SLA   R0,2               TIMES 4 FOR K
         CVD   R0,DOUBLE
         MVC   WKGSET(8),=X'4020206B202120D2'
         ED    WKGSET(7),DOUBLE+5
         SR    R0,R0              CLEAR R0
         ICM   R0,3,ASCBSWCT      GET SHORT WAIT COUNT
         CVD   R0,DOUBLE
         MVC   WAITS(7),=X'4020206B202120'
         ED    WAITS(7),DOUBLE+5
         LA    R1,LINE
         LA    R0,LINLEN
         TPUT  (1),(0),R
LOOPBXLE BXLE  R3,R4,LOOP
         SR    R15,R15
         B     EXIT
HEADER   DC    CL10'USER'
         DC    CL10'PROC'
         DC    CL3'FLG'
         DC    CL7' ',C'CPU'
         DC    CL8'    CORE'
         DC    CL8' WKG-SET'
         DC    CL7'  WAITS'
HDRLEN   EQU   *-HEADER
         LTORG
         OACMAP DSECT=(CVT,ASVT,ASCB,CSCB,OUCB),PRINT=NONE
         END
//*KED.SYSLMOD DD DISP=OLD,DSN=SYS1.OACLINK,UNIT=,SPACE=
//LKED.SYSIN   DD *
   ENTRY USERS
   IDENTIFY USERS('CS01396')
   NAME USERS$(R)
//*
//C   EXEC PGM=COMPARE,
//  PARM='USERS$,USERS'
//STEPLIB  DD DISP=SHR,DSN=SYS5.MSSLOAD
//SYSPRINT DD SYSOUT=*
//I1       DD DISP=(SHR,PASS),DSN=&&GOSET
//I2       DD DISP=SHR,DSN=SYS1.OACLINK
