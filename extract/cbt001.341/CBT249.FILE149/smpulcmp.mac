//CSYSMASA JOB SMP,MSGCLASS=A,NOTIFY=CSYSMAS,
//     COND=(5,LT),TIME=(,30),CLASS=F
/*ROUTE PRINT WYLBUR
// EXEC PLIXC,PARM.PLI='MAR(2,72,1),X,A,AG,STMT,NMI,GOSTMT'
//* RG=2048K
//PLI.SYSIN DD *
  /*---              SMP UNLOAD COMPARE UTILITY                   ---*/
  CMPUNLD: PROC OPTIONS(MAIN);

 /*------------------------------------------------------------------*/
 /*                                                                  */
 /*  CMPUNLD:  COMPARE SMP UNLOAD OUTPUT                             */
 /*                                                                  */
 /*   JCL TO RUN:  FILE1 - SMP UNLOAD FILE 1                         */
 /*                FILE2 - SMP UNLOAD FILE 2                         */
 /*                SYSPRINT - OUTPUT                                 */
 /*                                                                  */
 /*                                                                  */
 /* SMP UNLOAD REP CARD FORMAT:                                      */
 /*    1,3 = 'REP'                                                   */
 /*    11,8 = ENTRY TYPE (SYS, ASSEM, MAC, LMOD, DLIB, MOD, SYSMOD)  */
 /*    29,8 = ENTRY MODULE NAME (BLANK FOR SYS)                      */
 /*                                                                  */
 /*  IF SAME TYPE (LMOD/MOD/ASSEM/SYS) ASSUME                        */
 /*     ENTRIES ARE IN ORDER (ASCENDING)                             */
 /*                                                                  */
 /*  DON'T COMPARE COLS 73-80...                                     */
 /*  COLUMN ONE STARTS WITH:                                         */
 /*     'UCLIN '                                                     */
 /*     'REP   '                                                     */
 /*     '++ASMIN '                                                   */
 /*     '++ENDASMIN '                                                */
 /*     '++LMODIN '                                                  */
 /*     '++ENDLMODIN '                                               */
 /*                                                                  */
 /*                                                                  */
 /*     <ENDING CARD WITH JUST A PERIOD IN MIDDLE?>                  */
 /*                                                                  */
 /*    OUTPUT FORMAT:                                                */
 /*     132 CHARACTER LINES,                                         */
 /*      80 BYTE (72?) CARD IMAGES                                   */
 /*        1 OVER THE OTHER                                          */
 /*     (MSG WITH TYPE, MOD, CARD#)                                  */
 /*                                                                  */
 /*------------------------------------------------------------------*/

  DCL (FILE1, FILE2) RECORD INPUT;

  DCL 1 F1,
        2 FFILE    FILE VARIABLE,
        2 FCNTIN   FIXED BIN(31) INIT(0),
        2 FCNTMOD  FIXED BIN(31) INIT(0),
        2 FEOF     FIXED BIN(31) INIT(0),
        2 FCTL     FIXED BIN(31) INIT(0),
        2 FTYPEX   FIXED BIN(31) INIT(0),     /* ENCODED FTYPE       */
        2 FSAVEC   FIXED BIN(31) INIT(0),     /* LAST READ IN S#CARD */
        2 FSAVEM   FIXED BIN(31) INIT(0),     /* LAST IN S#CARD      */
        2 FSAVEP   POINTER,
        2 FCARD    CHAR(80)      INIT(' '),   /* INPUT BUFFER        */
        2 FSAVE    CHAR(80)      INIT(' '),   /* NEXT IF CTL ^= 0    */
        2 FTYPE    CHAR(8)       INIT(' '),
        2 FMOD     CHAR(8)       INIT(' '),
      1 F2 LIKE F1,
      1 FX BASED(PX) LIKE F1;

  DCL (P1, P2, PX) POINTER STATIC;
        P1 = ADDR(F1.FFILE);
        P2 = ADDR(F2.FFILE);

    F1.FFILE = FILE1;   F2.FFILE = FILE2;

  DCL TTABLE(7) CHAR(8) STATIC INIT(
       'SYS     ',                   /* TYPES OF ENTRIES             */
       'ASSEM   ',                   /*  IN ORDER UNLOADED BY SMP    */
       'LMOD    ',
       'MAC     ',
       'MOD     ',
       'DLIB    ',
       'SYSMOD  ');

  DCL DOTCARD CHAR(80) STATIC INIT(' ');
      SUBSTR(DOTCARD,27,1) = '.';

  DCL SCARD# FIXED BIN(31) INIT(7000),
      S1CARD(SCARD#) CHAR(72),
      S2CARD(SCARD#) CHAR(72),
      SXCARD(32767) CHAR(72) BASED(FX.FSAVEP);

      F1.FSAVEP = ADDR(S1CARD(1));
      F2.FSAVEP = ADDR(S2CARD(1));

  DCL (IX1, MISMATCH)  FIXED BIN(31) STATIC INIT(0);

  DCL (ADDR, SUBSTR, HIGH) BUILTIN;

  DCL (SYSPRINT,PRINT2) FILE PRINT STREAM;

  DCL (TFILE, TTYPE, TMOD) CHAR(8) STATIC INIT(' '),
       TFLAG BIT(1) STATIC INIT('1'B);

   ON ENDPAGE(PRINT2) BEGIN;
      PUT FILE(PRINT2) EDIT(' CMPUNLD - SMP UNLOAD COMPARE - ',
          'FILE ', TFILE, TTYPE, TMOD)
          (PAGE, A, A, A, A, A);
      PUT FILE(PRINT2) SKIP;
   END;

   ON ENDFILE(FILE1) F1.FEOF = -1;
   ON ENDFILE(FILE2) F2.FEOF = -1;

   DO WHILE(READ(P1,0) = 0);
   END;
   DO WHILE(READ(P2,0) = 0);
   END;

 LOOP1:
   IF READ(P1,1) ^= 0 THEN F1.FTYPEX = 100;
   IF READ(P2,1) ^= 0 THEN F2.FTYPEX = 100;

 LOOP2:
   IF F1.FTYPEX = 100 & F2.FTYPEX = 100 THEN GOTO EOF;

   IF F1.FTYPEX = F2.FTYPEX & F1.FMOD = F2.FMOD THEN DO;
     LPEQ1:
      IX1 = READ(P1,0) & READ(P2,0);
      IF IX1 = 0 THEN DO;
         IF F1.FCARD ^= F2.FCARD THEN DO;
            IF SUBSTR(F1.FCARD,11,8) = 'LASTUPD '
             & SUBSTR(F2.FCARD,11,8) = 'LASTUPD ' THEN GOTO OKEQ;
            IF SUBSTR(F1.FCARD,11,12) = 'LASTUPDTYPE '
             & SUBSTR(F1.FCARD,11,12) = 'LASTUPDTYPE ' THEN GOTO OKEQ;
            IF F1.FCARD = ' ' & F2.FCARD = DOTCARD THEN GOTO OKEQ;
            IF F2.FCARD = ' ' & F1.FCARD = DOTCARD THEN GOTO OKEQ;
            IF SQUEEZE(F1.FCARD) = SQUEEZE(F2.FCARD) THEN GOTO OKEQ;
            MISMATCH = 1;
            PUT FILE(SYSPRINT) EDIT(F1.FTYPE, '/', F1.FMOD,
                                    F1.FCNTMOD, '>', F1.FCARD, '<')
                    (SKIP(1), A, A, A, F(5), X(1), A, A(72), A);
            PUT FILE(SYSPRINT) EDIT(F2.FTYPE, '/', F2.FMOD,
                                    F2.FCNTMOD, '>', F2.FCARD, '<')
                    (SKIP(1), A, A, A, F(5), X(1), A, A(72), A);
        OKEQ:
         END;
      GOTO LPEQ1;
      END;

      IF MISMATCH ^= 0 THEN DO;
         TFILE = 'FILE 1';
         TTYPE = F1.FTYPE;    TMOD = F1.FMOD;
         IF TFLAG THEN DO;
            TFLAG = '0'B;
            SIGNAL ENDPAGE(PRINT2);
         END;
         PUT FILE(PRINT2) EDIT('** FILE 1 ** - ',
             F1.FTYPE, F1.FMOD)
             (SKIP(2), A, A, A);
         DO WHILE(READ(P1,2) = 0);
            PUT FILE(PRINT2) EDIT(F1.FCNTMOD, '>', F1.FCARD, '<')
                (SKIP, X(17), F(5), X(1), A, A(72), A);
         END;
         TFILE = 'FILE 2';
         PUT FILE(PRINT2) EDIT('** FILE 2 ** - ',
             F2.FTYPE, F2.FMOD)
             (SKIP(2), A, A, A);
         DO WHILE(READ(P2,2) = 0);
            PUT FILE(PRINT2) EDIT(F2.FCNTMOD, '>', F2.FCARD, '<')
                (SKIP, X(17), F(5), X(1), A, A(72), A);
         END;
         MISMATCH = 0;
      END;
      GOTO LOOP1;
   END;

   IF (F1.FTYPEX > F2.FTYPEX) ×
      (F1.FTYPEX = F2.FTYPEX & F1.FMOD > F2.FMOD) THEN DO;
      PUT FILE(SYSPRINT) EDIT(' *** ENTRY/MOD ',
                               F2.FTYPE, '/', F2.FMOD,
                              ' MISSING FROM FILE1')
              (SKIP(1), A, A, A, A, A);
      DO WHILE(READ(P2,0) = 0);
      END;
      IF READ(P2,1) ^= 0 THEN F2.FTYPEX = 100;
      GOTO LOOP2;
   END;

   IF (F1.FTYPEX < F2.FTYPEX) ×
      (F1.FTYPEX = F2.FTYPEX & F1.FMOD < F2.FMOD) THEN DO;
      PUT FILE(SYSPRINT) EDIT(' *** ENTRY/MOD ',
                               F1.FTYPE, '/', F1.FMOD,
                              ' MISSING FROM FILE2')
              (SKIP(1), A, A, A, A, A);
      DO WHILE(READ(P1,0) = 0);
      END;
      IF READ(P1,1) ^= 0 THEN F1.FTYPEX = 100;
      GOTO LOOP2;
   END;

    PUT FILE(SYSPRINT) EDIT('*** LOGIC ERROR ***')
             (SKIP(3), A);
    STOP;


 READ:  PROC(ZX,ROPT) RETURNS(FIXED BIN(31));
  /*                                                                 */
  /*   READ(??,0) - READ NEXT CARD IN MOD (EOF IF HITS NEXT MOD)     */
  /*   READ(??,1) - READ NEXT CARD (EOF ON REAL EOF ONLY)            */
  /*   READ(??,2) - RE-READ CURRENT MOD                              */
  /*                                                                 */
  DCL ZX POINTER,
      ROPT FIXED BIN(31);
  DCL IX1 FIXED BIN(31);
     PX = ZX;
     FX.FCARD = ' ';                           /* NO CARD YET        */

     IF ROPT = 2 THEN DO;                      /* RE-READ CURRENT    */
        IF FX.FSAVEC >= FX.FSAVEM THEN RETURN(-1);
        FX.FSAVEC = FX.FSAVEC + 1;
        FX.FCNTMOD = FX.FSAVEC;
        FX.FCARD = SXCARD(FX.FSAVEC);
        RETURN(0);
     END;

     IF FX.FCTL = 0 THEN DO;                   /* IF NEED NEW CARD   */
        IF FX.FEOF ^= 0 THEN RETURN(-1);       /* RETURN IF EOF      */
        READ FILE(FX.FFILE) INTO(FX.FSAVE);    /*   GET IT           */
        FX.FCNTIN = FX.FCNTIN + 1;             /*   AND COUNT IT     */
        SUBSTR(FX.FSAVE,73,8) = '        ';    /*   BLANK SEQ FIELD  */
        FX.FCTL = 1;                           /*   NOW HAVE CARD    */
     END;
     IF FX.FEOF ^= 0 THEN RETURN(-1);          /* RETURN IF EOF      */
     IF SUBSTR(FX.FSAVE,1,4) = 'REP ' THEN DO;
        IF ROPT = 0 THEN RETURN(-1);           /* IF JUST READ MOD   */
        FX.FSAVEC = 0;   FX.FSAVEM = 0;        /* CLEAR OUT SXCARD   */
        FX.FCNTMOD = 0;                        /* ZERO MOD CARD CNT  */
        FX.FTYPE = SUBSTR(FX.FSAVE,11,8);      /*  ENTRY TYPE        */
        FX.FMOD  = SUBSTR(FX.FSAVE,29,8);      /*  MOD NAME          */
        DO IX1 = 1 TO 7;
           IF TTABLE(IX1) = FX.FTYPE THEN DO;
              FX.FTYPEX = IX1;
              GOTO RDFND;
           END;
        END;
       PUT FILE(SYSPRINT) EDIT(' UNKNOWN ENTRY TYPE: ',
                                FX.FTYPE, FX.FSAVE)
               (SKIP(3), A, A, SKIP(1), X(20), A);
       STOP;
      RDFND:
     END;
     FX.FCARD = FX.FSAVE;
     FX.FCNTMOD = FX.FCNTMOD + 1;
     FX.FCTL = 0;
     IF FX.FSAVEM = SCARD# THEN
        PUT FILE(SYSPRINT) EDIT('*** SAVE OVERFLOW: ',
                 FX.FTYPE, FX.FMOD)
                (SKIP(1), A, A, A);
     ELSE DO;
        FX.FSAVEM = FX.FSAVEM + 1;
        SXCARD(FX.FSAVEM) = FX.FCARD;
     END;
     RETURN(0);
 END;


 SQUEEZE: PROC(SQCARD) RETURNS(CHAR(80));
   DCL SQCARD CHAR(80);
   DCL WQCARD CHAR(80);
   DCL (IX1, IX2) FIXED BIN(31);

   WQCARD = ' ';
   IX1    = 1;          /* FROM POINTER                              */
   IX2    = 1;          /* TO POINTER                                */
 SQLOOP:
   /* COPY NONBLANKS STARTING AT IX1 TO IX2                          */
   DO WHILE (IX1 <= 72 & SUBSTR(SQCARD,IX1,1) ^= ' ');
      SUBSTR(WQCARD,IX2,1) = SUBSTR(SQCARD,IX1,1);
      IX1 = IX1 + 1;
      IX2 = IX2 + 1;
   END;
   IX2 = IX2 + 1;       /* LEAVE 1 BLANK FOR BLANKS                  */
   /* SKIP BLANKS                                                    */
   DO WHILE (IX1 <= 72 & SUBSTR(SQCARD,IX1,1) = ' ');
      IX1 = IX1 + 1;
   END;
   IF IX1 <= 72 THEN GOTO SQLOOP;
  RETURN(WQCARD);
 END;  /* SQUEEZE */
  EOF:
 END;  /* CMPUNLD */
//
//GO.PRINT2 DD SYSOUT=*,
//  DCB=(RECFM=VBA,LRECL=137,BLKSIZE=141)
//GO.FILE1  DD DISP=SHR,DSN=CSYSCST.UNLOAD.IOGEN,
//  DCB=(BUFNO=13)
//GO.FILE2  DD DISP=SHR,DSN=CSYSCST.UNLOAD.FULLGEN,
//  DCB=(BUFNO=13)
