//CSYSCSTF JOB
// EXEC PLIXCG,PARM.PLI='MAR(2,72,1),A,X'
//PLI.SYSIN DD *
 XREF: PROC OPTIONS(MAIN) REORDER;
-  /*                                                               */
   /*  THIS IS A BRUTE FORCE PROGRAM TO MAP THE SMP PRE-REQ CHAINS  */
   /*  ENCOUNTERED DURING PUT APPLY PROCESSING.  THE TERMINATED     */
   /*  PTFS AND THE MISSING PRE'S ARE READ FROM A FILE WRITTEN      */
   /*  BY AN SMP4 APPLY CHECK RUN.  THE PRE-REQS FOUND BY SMP ARE   */
   /*  SORTED AND DUPLICATES ARE REDUCED OUT, RESULTING IN A        */
   /*  MINIMUM SET OF VILLAINS.                                     */
   /*                                                               */
   /*  A RECURSIVE PROC IS THEN CALLED TO LIST THE TERMINATED       */
   /*  PTFS FOR EACH VILLAIN.  TERMINATED PTFS MAY APPEAR           */
   /*  MULTIPLE TIMES IN THE TREE IF THEY HAVE MULTIPLE PREREQS.    */
   /*                                                               */
   /*  USE THE FOLLOWING JCL AS AN EXAMPLE:                         */
   /*   // EXEC SMP4                                                */
   /*   //SMPOUT DD DISP=OLD,DSN=SMPOUT                             */
   /*   //SYSIN DD *                                                */
   /*    APPLY CHECK EXCLUDE(...                                    */
   /*                                                               */
   /*  USE THE RESULTANT FILE AS INPUT TO THIS PROGRAM              */
   /*   //GO.SMPOUT DD DISP=SHR,DSN=SMPOUT                          */
   /*                                                               */
   /*  CHRIS THOMAS                                                 */
   /*  OFFICE OF ACADEMIC COMPUTING                                 */
   /*  UNIVERSITY OF CALIFORNIA, LOS ANGELES                        */
   /*  LOS ANGELES, CALIFORNIA 90024                                */
   /*  (213) 825-9308                                               */
   /*                                                               */
   /*  THE AUTHOR MAKES NO CLAIMS FOR THE VALIDITY OF THE OUTPUT    */
   /*  OF THIS PROGRAM, BUT IT SEEMS TO WORK.  FEEDBACK REGARDING   */
   /*  CORRECTIONS IS SOLICITED.                                    */
   /*                                                               */
   /*  VERSION 1.1  --  NOV 1, 1981                                 */
   /*                                                               */
   /*  NOTE: WHEN RUN ON ACCEPT OUTPUT INSTEAD OF APPLY OUTPUT,     */
   /*  SOME OFFSETS MUST BE ADJUSTED BY 1 CHARACTER ("ACCEPT" IS    */
   /*  ONE CHARACTER LONGER THAN "APPLY").                          */
   /*                                                               */
-DCL TERM(1:500) CHAR(7);
 DCL PRE(1:500) CHAR(7);
 DCL VILLAIN(1:500) CHAR(7);
 DCL TEMPV CHAR(7);
 DCL BUFFER CHAR(121);
 DCL (MULTI,SKIPPED) BIT(1) INIT('0'B);
 DCL (I,J,K,NTERM,NVILLAIN,LEVEL) FIXED BIN(31);
 ON ENDFILE(SMPOUT) GO TO PROCESS;
-I = 0;
 TERM = ' ';
 PRE = ' ';
 VILLAIN = ' ';
-DO WHILE('1'B);                        /* READ TERM'S AND PRE'S */
      IF I > 500 THEN STOP;     /* ERROR STOP - INCREASE ARRAY SIZE */
      READ FILE(SMPOUT) INTO(BUFFER);
      IF SUBSTR(BUFFER,2,7)='HMA3022' & SUBSTR(BUFFER,71,7) ^='ALL SUP'
           THEN DO;
           PUT SKIP(2) FILE(SYSPRINT) EDIT(BUFFER) (A);
           I = I + 1;
           MULTI = '0'B;
           TERM(I) = SUBSTR(BUFFER,52,7);  /* 52(APPLY)/53(ACCEPT)*/
           END;
      ELSE IF SUBSTR(BUFFER,2,7) = 'HMA3590'
           THEN DO;
           PUT SKIP(1) FILE(SYSPRINT) EDIT(BUFFER) (A);
           IF MULTI THEN DO;
                I = I + 1;
                TERM(I) = TERM(I-1);
                END;
           PRE(I) = SUBSTR(BUFFER,18,7);
           MULTI = '1'B;
           END;
      END;
-PROCESS:
 NTERM = I;
 PUT SKIP(3) FILE(SYSPRINT) EDIT('THERE WERE ', NTERM, ' TERMINATED-',
      'MISSING RELATIONSHIPS FOUND BY SMP4.') (A,F(3),A,A);
-K = 0;
 DO I = 1 TO NTERM;                     /* DEVELOP MINIMUM SET
                                           OF VILLAINS */
      DO J = 1 TO I-1;                         /* REMOVE DUPS */
           IF PRE(I) = PRE(J) THEN GO TO V1;
           END;
      DO J = 1 TO NTERM;                       /* REMOVE TERM'S */
           IF PRE(I) = TERM(J) THEN GO TO V1;
           END;
      K = K + 1;
      VILLAIN(K) = PRE(I);
      V1: END;
 NVILLAIN = K;
-PUT PAGE FILE(SYSPRINT) EDIT('THERE APPEAR TO BE ', NVILLAIN,
      ' BASE PTFS CAUSING TROUBLE.')  (A,F(3),A)
      ('THEY ARE EITHER EXCLUDED OR MISSING FROM THE PTS.') (SKIP,A);
 PUT SKIP(2) FILE(SYSPRINT);
-DO I = 1 TO NVILLAIN;                  /* SORT VILLAINS */
      DO J = 1 TO NVILLAIN;
           IF VILLAIN(I) < VILLAIN(J)
                THEN DO;
                TEMPV = VILLAIN(J);
                VILLAIN(J) = VILLAIN(I);
                VILLAIN(I) = TEMPV;
                END;
           END;
      END;
-DO I = 1 TO NVILLAIN;                  /* LIST SORTED VILLAINS */
      PUT SKIP EDIT(I,VILLAIN(I)) (F(5),X(5),A);
      END;
-PUT PAGE FILE(SYSPRINT) EDIT('THE FOLLOWING IS THE APPARENT',
     ' RELATIONSHIP AMONG THE TERMINATED PTFS:') (A,A);
-DO I = 1 TO NVILLAIN;
     LEVEL = 0;
     CALL TREE(VILLAIN(I),LEVEL);
     END;
-RETURN;
1TREE: PROC(V,L) RECURSIVE;
-DCL (L,II,KOL,LL) FIXED BIN(31);
 DCL V CHAR(7);
-LL = L + 1;
 KOL = 1 + 11*(LL-1);
 IF LL > 15 THEN STOP;    /* ERROR STOP -- OR GET WIDER PAPER */
-IF LL = 1
     THEN DO;
          PUT SKIP(4) EDIT(V) (COL(KOL),X(3),A(7));
          END;
     ELSE DO;
          PUT SKIP(0) EDIT('<--',V) (COL(KOL), A, A);
          SKIPPED = '0'B;
          END;
-DO II = 1 TO NTERM;
     IF PRE(II) = V THEN CALL TREE(TERM(II),LL);
     END;
-IF ^ SKIPPED THEN PUT SKIP(1) FILE(SYSPRINT);
 SKIPPED = '1'B;
 RETURN;
-END TREE;
-END XREF;
//GO.SYSPRINT DD SYSOUT=*,DCB=(LRECL=133,BLKSIZE=133,RECFM=FA)
//GO.SMPOUT DD DISP=SHR,DSN=CSYSCST.OUTPUT
