//CSYSMAS1 JOB MSGCLASS=A,COND=(0,NE)
/*ROUTE PRINT WYLBUR
//  EXEC ASMHCL,PARM.LKED='LIST,XREF'
//SYSLIB DD DISP=SHR,DSN=SYS1.MACLIB
//       DD DISP=SHR,DSN=SYS1.AMODGEN
//       DD DISP=SHR,DSN=SYS5.MSSMAC
//SYSIN DD *
*          DATA SET CBT501     AT LEVEL 002 AS OF 12/30/77
*          DATA SET CBT501     AT LEVEL 002 AS OF 12/16/75
         TITLE 'LISTSPC - DOCUMENTATION'
*.....................................................................*
*.                                                                   .*
*.   LISTSPC                                                         .*
*.                                                                   .*
*.....................................................................*
*.                                                                   .*
*.   1.0  GENERAL DESCRIPTION                                        .*
*.                                                                   .*
*.   THIS TSO COMMAND IS A MULTI-PURPOSE PROGRAM FOR LISTING         .*
*.   THE SPACE (IN TRACKS) USED BY DATASETS AND THE FREE SPACE       .*
*.   ON DISK VOLUMES.  IT CAN ALSO LIST THE EXTENTS AND VOLSER       .*
*.   OF DATASETS.                                                    .*
*.                                                                   .*
*.....................................................................*
*.                                                                   .*
*.....................................................................*
*.                                                                   .*
*.   2.0  COMMAND SYNTAX                                             .*
*.                                                                   .*
*.    LISTSPC  DATASET(DSNAME-LIST) LEVEL(INDEX-STRUCTURE)           .*
*.             VOLUME(VOLUME-LIST) EXTENTS                           .*
*.                                                                   .*
*.       DATASET(DSNAME-LIST)                                        .*
*.          -  SPECIFIES A DSNAME LIST FOR WHICH YOU DESIRE TO       .*
*.             HAVE THE SPACE INFORMATION LISTED.  TSO DATASET       .*
*.             NAMING CONVENTIONS APPLY FOR THE DSNAMES.             .*
*.                                                                   .*
*.       LEVEL(INDEX-STRUCTURE)                                      .*
*.          -  SPECIFIES AN INDEX STRUCTURE FOR WHICH YOU DESIRE     .*
*.             TO HAVE THE SPACE INFORMATION LISTED FOR EACH         .*
*.             DATASET WITHIN THIS INDEX STRUCTURE.  THIS MAY        .*
*.             BE A DSNAME CONTAINING ONE EMBEDDED ASTERISK NOT      .*
*.             AS THE HIGH-LEVEL QUALIFIER OR IT MAY BE AN INDEX     .*
*.             LEVEL.                                                .*
*.                                                                   .*
*.       VOLUME(VOLUME-LIST)                                         .*
*.          -  IF USED WITH THE 'DATASET' PARAMETER, SPECIFIES THE   .*
*.             VOLUME ON WHICH THE DATASET RESIDES.  NO CATALOG      .*
*.             SEARCH WILL BE PERFORMED FOR THE DATASETS.            .*
*.          -  IF USED AS THE ONLY PARAMETER, SPECIFIES A LIST OF    .*
*.             VOLUMES FOR WHICH FREE SPACE INFORMATION WILL BE      .*
*.             LISTED.                                               .*
*.                                                                   .*
*.       EXTENTS                                                     .*
*.          -  SPECIFIES THAT THE VOLSER AND THE DATASET'S EXTENTS   .*
*.             (IN A HEXADECIMAL FORMAT) WILL BE LISTED FOR EACH     .*
*.             DATASET.                                              .*
*.                                                                   .*
*.     NOTE:  THE USE OF THE 'VOLUME' AND THE 'EXTENTS'              .*
*.            PARAMETERS CAN BE RESTRICTED TO CERTAIN USERIDS        .*
*.            THROUGH THE USE OF BIT 0 IN THE FIELD LABELED          .*
*.            'FLAG'.                                                .*
*.                                                                   .*
*.....................................................................*
*.                                                                   .*
*.....................................................................*
*.                                                                   .*
*.   3.0  PROGRAM STRUCTURE                                          .*
*.                                                                   .*
*.                                                                   .*
*.   3.0.1  INITIALIZATION                                           .*
*.                                                                   .*
*.   THIS SECTION BUILDS THE PARAMETER LISTS FOR PARSE AND           .*
*.   LOCINDEX.  IT CAN, IF DESIRED, CHECK THE USERID FOR             .*
*.   AUTHORIZATION AND SET BIT 0 OF THE FLAG FIELD IF THE USER       .*
*.   IS AUTHORIZED.  IT THEN LINKS TO PARSE AND DETERMINES           .*
*.   WHICH TYPE OF REQUEST IS BEING MADE.                            .*
*.                                                                   .*
*.                                                                   .*
*.   3.0.2  DATASET ROUTINE                                          .*
*.                                                                   .*
*.   THIS ROUTINE IS ENTERED IF THE 'DATASET' PARAMETER IS           .*
*.   SPECIFIED.  IF THE 'VOLUME' PARAMETER IS ALSO SPECIFIED,        .*
*.   THE 'LOCATE' IS BYPASSED.  IT THEN LINKS TO THE OBTAIN AND      .*
*.   PRINT ROUTINE.                                                  .*
*.                                                                   .*
*.                                                                   .*
*.   3.0.3  LEVEL ROUTINE                                            .*
*.                                                                   .*
*.   THIS ROUTINE IS ENTERED IF THE 'LEVEL' PARAMETER IS SPECIFIED.  .*
*.   IT LINKS TO LOCINDEX TO GET THE DSNAMES FOR THE INDEX           .*
*.   STRUCTURE AND THEN LINKS TO THE OBTAIN AND PRINT ROUTINE.       .*
*.                                                                   .*
*.                                                                   .*
*.   3.0.4  VOLUME ROUTINE                                           .*
*.                                                                   .*
*.   THIS ROUTINE IS ENTERED IF THE 'VOLUME' PARAMETER IS            .*
*.   SPECIFIED AS THE ONLY PARAMETER.  IT 'OBTAIN'S THE FORMAT 4     .*
*.   DSCB AND EXTRACTS CERTAIN FIELDS.  IT THEN 'OBTAIN'S ALL        .*
*.   OF THE FORMAT 5 DSCB RECORDS AND ACCUMULATES THE FREE           .*
*.   EXTENTS.                                                        .*
*.                                                                   .*
*.                                                                   .*
*.   3.0.5  OBTAIN AND PRINT ROUTINE                                 .*
*.                                                                   .*
*.   THIS ROUTINE 'OBTAIN'S THE FORMAT 1 DSCB AND THE FORMAT 3       .*
*.   DSCB (IF ONE EXISTS) FOR A DATASET AND ACCUMULATES THE          .*
*.   EXTENTS.  IT THEN PRINTS THE DSORG, # OF ALLOCATED TRACKS,      .*
*.   # OF UNUSED TRACKS, # OF EXTENTS, AND THE DSNAME.  IF THE       .*
*.   'EXTENTS' KEYWORD WAS SPECIFIED, IT ALSO PRINTS THE VOLSER      .*
*.   AND THE EXTENTS FOR THE DATASET.                                .*
*.                                                                   .*
*.....................................................................*
         TITLE 'LISTSPC - LIST SPACE COMMAND'
LISTSPC  START 0
         STM   R14,R12,12(R13)
         USING LISTSPC,R15
         ST    R13,SAVE+4
         LA    R13,SAVE
         B     BEGIN
SAVE     DC    18F'0'
         DROP  R15
         USING SAVE,R13
         TITLE 'LISTSPC - GETMAIN AND PARSE'
BEGIN    LR    R4,R1
         USING CPPL,R4
         LA    R0,LWORK            GET LENGTH OF WORK AREA
         AH    R0,=H'4096'         GET EXTRA 4K FOR LOCINDEX WORK
         ICM   R0,B'1000',=FL1'1'  SUBPOOL 1
         GETMAIN R,LV=(0)
         LR    R12,R1               SAVE ADDR OF WORK AREA
         USING WORKAREA,R12
         LA    R0,LOCINDXW          POINT TO LOCINDEX WORK AREA
         ST    R0,PARM+12           SAVE ADDR IN PARM LIST
         MVI   PARM+12,X'80'        INDICATE END OF PARM LIST
         MVI   WXTNT+4,X'04'
         LA    R3,WPPL             GET ADDR OF PPL
         USING PPL,R3
         L     R0,CPPLCBUF
         ST    R0,PPLCBUF          SAVE ADDR OF COMMAND BUFFER
         L     R0,CPPLUPT
         ST    R0,PPLUPT           SAVE ADDR OF UPT
         L     R0,CPPLPSCB
         LR    R10,R0              GET ADDR OF USERID FROM PSCB
         SR    R11,R11
         IC    R11,7(R10)          GET LENGTH OF USERID
         BCTR  R11,0
         CLI   0(R10),C'C'         STAFF?                           CST
         BNE   AUTHRZD                                              CST
         OI    FLAG,X'40'                                           CST
AUTHRZD  OI    FLAG,X'80'
LECT     L     R0,CPPLECT
         ST    R0,PPLECT           SAVE ADDR OF ECT
         LA    R0,CPECB
         ST    R0,PPLECB           SAVE ADDR OF ECB
         XC    CPECB,CPECB         CLEAR ECB
         L     R0,=A(PARSLIST)
         ST    R0,PPLPCL           SAVE ADDR OF PCL
         LA    R0,WPDL
         ST    R0,PPLANS           SAVE ADDR OF PDL AREA
         XC    PPLUWA,PPLUWA       CLEAR UWA
         LR    R1,R3               PASS ADDR OF PPL TO PARSE
         LINK  EP=IKJPARS          LINK TO PARSE SERVICE ROUTINE
         LTR   R15,R15             PARSE ERROR
         BNZ   RETC                 YES
         TM    PPLANS,X'FF'        PARSE ERROR
         BO    RETC                 YES
         DROP  R3,R4
         L     R3,WPDL             GET ADDR OF PDL
         USING IKJPARMD,R3
         TM    EXTENT+1,X'01'      EXTENT SPECIFIED?
         BZ    *+8                  NO
         OI    FLAG,X'20'           YES, SET FLAG BIT
         TM    DSNLIST+6,X'80'      DSNAME SPECIFIED?
         BO    DSNRTN                YES
         TM    LEV+6,X'80'          INDEX LEVEL SPECIFIED?
         BO    LEVEL                 YES
         TM    VOL+6,X'80'          VOLUME SPECIFIED?
         BO    FREEA                 YES
         B     EUSLO                NO PARMS - LISTS FOR USERID
         TITLE 'LISTSPC - DATASET NAME ROUTINE'
DSNRTN   LA    R4,DSNLIST           POINT TO DSN LIST
         LA    R0,L'MSG1
         LA    R1,MSG1
         SVC   93                  TPUT HEADING
DSNAME   L     R5,0(R4)             POINT TO DSNAME
         LH    R6,4(R4)             GET LENGTH OF DSNAME
         BCTR  R6,0
         MVI   DSN1,X'40'
         MVC   DSN1+1(43),DSN1     BLANK DSN WORK AREA
         LA    R8,DSN1              POINT TO DSN WORK AREA
         TM    6(R4),X'40'          DSNAME CONTAINED IN QUOTES?
         BO    MVCDSNAM               YES
         EX    R11,USIDMVC         MOVE USERID TO WORK AREA
         LA    R8,1(R11,R8)        BUMP PAST USERID
         MVI   0(R8),C'.'          MOVE PERIOD TO WORK AREA
         LA    R8,1(0,R8)          BUMP PAST
MVCDSNAM EX    R6,DSNMVC           MOVE DSNAME TO WORK AREA
         MVC   VOLS,BLANKS         MOVE BLANKS TO VOLSER WORK AREA
         TM    FLAG,X'80'          AUTHORIZED USER?
         BZ    LOCDSN               NO
         TM    VOL+6,X'80'         VOLUME SPECIFIED?
         BZ    LOCDSN               NO, LOCATE DSN
         LA    R1,VOLS             POINT TO VOLSER WORK AREA
         L     R5,VOL              POINT TO VOLUME PARAMETER
         LH    R6,VOL+4            GET LENGTH OF VOL PARM
         BCTR  R6,0
         EX    R6,MVCVOLS          MOVE VOL PARM TO VOLSER WORK AREA
         B     BALOBTN             BYPASS LOCATE
LOCDSN   OI    FLAG,X'10'
         LOCATE INDS
         LTR   R15,R15              DID IT FIND VOL SER
         BNZ   ERR03                 NO WRITE ERROR MSG
         NI    FLAG,X'EF'
         MVC   VOLS(6),BUF1+6      YES - MOVE IN VOL SER
         SPACE 2
BALOBTN  BAL   R9,OBTNRTN          LINK TO OBTAIN AND PRINT ROUTINE
RETDSN   L     R4,24(R4)           GET DSN LINK POINTER
         C     R4,ENDLIST          END OF LIST?
         BE    RETC                 YES
         B     DSNAME               NO, GET NEXT DSNAME
         TITLE 'LISTSPC - LEVEL ROUTINE'
EUSLO    EQU   *
**     FOR ENTIRE USERID LOGGED ON
         MVC   USERID(7),0(R10)        MOVE IN USERID
         B     GOTUS               BRANCH TO GOT USERID
         SPACE 3
LEVEL    EQU   *
         L     R5,LEV              POINT TO INDEX STRUCTURE
         LH    R6,LEV+4            GET LENGTH OF INDEX STRUCT
         BCTR  R6,0
         LA    R8,USERID           POINT TO WORK AREA
         EX    R6,DSNMVC           MOVE INDEX STRUCTURE TO WORK AREA
GOTUS    EQU   *
         LA    R0,L'MSG1
         LA    R1,MSG1
         SVC   93                  TPUT HEADING
         OI    FLAG,X'40'          SET FLAG FOR DATA SETS FOR USERID
LOOP     EQU   *                   LOOP FOR DATASET IN USERID
         L     R15,=V(LOCINDEX)    POINT TO EP(LOCINDEX)
         LA    R1,PARM             POINT TO PARM LIST
         BALR  R14,R15             GO TO LOCINDEX
         B     *+4(R15)            BRANCH , DEP ON RETURN CODE
         B     OK                  0-GET INFOR FOR DSN & CONT
         B     NOUSER              4-PRINT MSG & RETRUN TO SYS
         B     NOTDISK             8-PRINT MSG&CONTINUE
         B     MULTIVOL            12-PRINT MSG&CONTINUE
         B     RETC                16-FINISHED-RETURN TO SYS
         B     RDERR               20-PRINT MSG&RETRUN TO SUS
OK       BAL   R9,OBTNRTN          LINK TO OBTAIN AND PRINT ROUTINE
         B     LOOP                GET NEXT DSNAME FROM LOCINDEX
         SPACE 3
         TITLE 'LISTSPC - VOLUME ROUTINE'
FREEA    EQU   *
** TO GET AVAILABLE SPACE ON PARTICULAR VOLUME
         LA    R0,L'MSG4
         LA    R1,MSG4
         TM    FLAG,X'40'          STAFF?                           CST
         BZ    FREEHD              NO                               CST
         LA    R1,MSG4A            YES. SHOW VIRS IN HEADING        CST
FREEHD   SVC   93                  TPUT HEADING
         SPACE 2
         LA    R4,VOL              POINT TO VOLUME LIST
VOLLOOP  ST    R4,OBTNSAVE         SAVE ADDRESS
         MVI   MSG2,X'40'
         MVC   MSG2+1(75),MSG2     BLANK MESSAGE AREA
         XC    PEXCTR,PEXCTR       CLEAR EXTENT COUNTER
         LA    R1,VOLS             POINT TO VOLSER WORK AREA
         L     R5,0(R4)            POINT TO VOLUME PARM
         LH    R6,4(R4)            GET LENGTH OF VOL PARM
         BCTR  R6,0
         EX    R6,MVCVOLS          MOVE VOL PARM TO VOLSER WORK AREA
         LA    R1,MSG2             POINT TO MESSAGE AREA
         EX    R6,MVCVOLS          MOVE VOLSER TO MESSAGE AREA
         MVI   DSN1,X'04'          MOVE 'DSN' FOR F4 DSCB...
         MVC   DSN1+1(43),DSN1     ...INTO DSN1
         OBTAIN SERCHCAM
         CLI   BUF1,X'F4'          DID IT READ OK?
         BNE   ERRF4               NO
         MVC   VOLTKCYL(2),BUF1+20 GET NUM OF TRKS/CYL
         MVC   VOLDSCTK+1(1),BUF1+30   GET NUM OF DSCBS PER TRK
         MVC   VOLF4CHR(4),BUF1+63 GET CCHH OF START OF VTOC
         MVI   VOLF4CHR+4,X'01'    F4 DSCB IS FIRST REC
         LH    RCC,VOLF4CHR        SETUP...
         LH    RHH,VOLF4CHR+2         DISK...
         SR    RR,RR                     ADDRESSING...
         IC    RR,VOLF4CHR+4
         SR    R9,R9
         LH    R9,BUF1+6             MOVE IN NUMBER FREE DSCB
         CVD   R9,WKD
         MVC   MSG2+6(6),MASKED        MOVE IN MASK
         ED    MSG2+6(6),WKD+5         EDIT FREE DSCB
         LH    R1,VOLNO            GET NUM VOLS PROCESSED
         LA    R1,1(R1)            BUMP
         STH   R1,VOLNO            REPLACE
***********************************************************************
         BAL   R11,IXINIT
***********************************************************************
         LA    RR,1(RR)            BUMP RECORD PTR
         CH    RR,VOLDSCTK         TEST FOR LAST REC ON TRK
         BNH   VBSET               GO SET VTOCCHHR
         LA    RR,1                RESET RR TO 1
         LA    RHH,1(RHH)          BUMP TRK COUNTER
         CH    RHH,VOLTKCYL        PAST END OF CYL?
         BL    VBSET               GO SET VTOCCHHR
         SR    RHH,RHH             ELSE SET RHH TO TRK 0
         LA    RCC,1(RCC)          BUMP TO NEXT CYL
VBSET    STH   RCC,VTOCCHHR        SET...
         STH   RHH,VTOCCHHR+2         UP...
         STC   RR,VTOCCHHR+4            VTOCCHHR
         SR    R4,R4               ZERO COUNTER
         SPACE 2
PFOBT    EQU    *
***********************************************************************
         BAL   R11,IXFMT5
         B     PFGOTIX
***********************************************************************
         OBTAIN SEEKCAM
PFGOTIX  LA    R2,1                INDICATE FIRST EXTENT
         LA    R3,BUF1+4           POINT TO FIRST EXTENT
PFLOOP   CLC   0(5,R3),=D'0'       LAST EXTENT?
         BE    PFGOT               EXIT IF SO
         MVC   HWK1(2),2(R3)       MOVE NUM CYLS TO HWD
         LH    R1,HWK1             LOAD
         MH    R1,VOLTKCYL         CONVERT TO TRKS
         SR    R0,R0               ZERO R0
         IC    R0,4(R3)            LOAD NUM TRKS
         AR    R1,R0               ADD TRKS
         AR    R4,R1               ACCUMULATE
         C     R1,MAXTRK          SEE IF WE HAVE NEW MAX
         BNH   *+8                IF NOT LEAVE ALONE
         ST    R1,MAXTRK          SAVE NEW MAX
         LA    R2,1(R2)            BUMP CTR
         CH    R2,=H'9'            NINTH EXTENT?
         BE    PFXT9               BRANCH IF SO
         CH    R2,=H'27'           27TH EXTNET?
         BE    PFXT27              BRANCH IF SO
         LA    R3,5(R3)            BUMP NORMALLY
         B     PFLOOP              AND CONTINUE
PFXT9    LA    R3,6(R3)            SKIP OVER F5 IF AT DSCH+44
         B     PFLOOP              AND CONTINUE
PFXT27   AH    R2,PEXCTR           ACCUM EXT TOTALS
         BCTR  R2,0
         STH   R2,PEXCTR           SAVE EXT TOTALS
         CLC   BUF1+135(5),=D'0'   PTR TO NEXT F5?
         BE    PFGOT               DONE. NO MORE F5
         MVC   VTOCCHHR(5),BUF1+135
         B     PFOBT               GO READ NEXT F5
PFGOT    EQU   *
         AH    R2,PEXCTR           ACCUM EXTENT TOTALS
         BZ    *+6
         BCTR  R2,0
         CVD   R2,WKD              CONVERT NUM EXTENTS
         MVC   MSG2+13(6),MASKED     MOVE IN MASK
         ED    MSG2+13(6),WKD+5      EDIT NUM EXTENTS
         CVD   R4,WKD              CONVERT NUM TRKS FREE
         MVC   MSG2+21(6),MASKED     MOVE IN MASK
         ED    MSG2+21(6),WKD+5      EDIT FREE TRKS
         L     R4,MAXTRK           GET MAX FREE EXTENT
         XC    MAXTRK(4),MAXTRK    CLEAR FOR NEXT USE
         CVD   R4,WKD              CONVERT NUM TRKS FREE
         MVC   MSG2+29(6),MASKED     MOVE IN MASK
         ED    MSG2+29(6),WKD+5      EDIT FREE TRKS
***********************************************************************
         BAL   R11,IXPRINT
***********************************************************************
         TPUT  MSG2,76             WRITE FREE INFO
VOLRET   EQU   *
***********************************************************************
         BAL   R11,IXTERM
***********************************************************************
         L     R4,OBTNSAVE         LOAD POINTER TO VOLUME LIST
         L     R4,8(R4)            GET LINK POINTER
         C     R4,ENDLIST          END OF LIST
         BE    RETC                 YES
         B     VOLLOOP              NO, GET NEXT VOLUME
MAXTRK   DC    F'0'               MAX FREE EXTENT
         TITLE 'LISTSPC - OBTAIN AND PRINT ROUTINES'
*   READ DSCB1 AND GET SPACE
OBTNRTN  STM   R2,R11,OBTNSAVE     SAVE CALLER'S REGISTERS
         MVC   DSNSAVE(44),DSN1
         MVI   DSN1,X'04'          MOVE 'DSN' FOR F4 DSCB...
         MVC   DSN1+1(43),DSN1     ...INTO DSN1
         OBTAIN SERCHCAM
         CLI   BUF1,X'F4'          DID IT READ OK?
         BNE   ERRF4               NO
         MVC   VOLTKCYL(2),BUF1+20 GET NUM OF TRKS/CYL
         MVC   DSN1(44),DSNSAVE
         MVI   MSG2,X'40'
         MVC   MSG2+1(75),MSG2     BLANK MESSAGE AREA
         OBTAIN SERCHCAM
         LTR   R15,R15             DID OBTAIN WORK
         BNZ   ERR03               NO - WRITE ERROR MSG
         SPACE 2
         CLI   BUF1,C'1'            IS IT F1 DSCB?
         BNE   ERR01                NOT F1
         LA    R9,XTNTS            POINT TO EXTENTS SAVE AREA
         LH    R6,BUF1+54          GET LAST RELATIVE TRK USED
         CLI   BUF1+56,X'00'       IS TRK UNUSED?
         BE    *+8                  YES
         LA    R6,1(R6)             NO, ANOTHER TRACK
         STH   R6,LASTTRK          SAVE LAST REL. TRK
         MVC   DSORG,BUF1+38       SAVE DSORG
AROUND   EQU   *
* TEST FOR TYPE OF DSORG AND MOVE TO PRINT LINE
         CLI   BUF1+38,X'80'        IS IT IS
         BNE   NIS                  NO
         MVC   MSG2+2(2),=C'IS'     YES - MOVE IN IS
         B     GDSO                 BRANCH TO GOT DSORG
NIS      CLI   BUF1+38,X'40'        IS IT PS
         BNE   NPS                   NO
         MVC   MSG2+2(2),=C'PS'      YES-MOVE IN PS
         B     GDSO                 BRANCH TO GOT DSORG
NPS      CLI   BUF1+38,X'20'        IS IT DA
         BNE   NDA                   NO
         MVC   MSG2+2(2),=C'DA'      YES - MOVE IN DA
         B     GDSO                 BRANCH TO GOT DSORG
NDA      CLI   BUF1+38,X'02'        IS IT PO
         BNE   NPO                   NO
         MVC   MSG2+2(2),=C'PO'      YES - MOVE IN PO
         B     GDSO                 BRANCH TO DSORG
NPO      CLI   BUF1+38,X'01'        IS IT UNMOVEABLE
         MVC   MSG2+2(2),=C' U'      YES
GDSO     SR    R2,R2                ZERO REG 2
         IC    R2,BUF1+15           PICK UP NUMBER OF EXTENTS
         LA    R3,1                 SET EXTENT COUNTER
         SR    R4,R4                CLEAR R4 TO TRK ACCUMULATION
         LTR   R2,R2               NO XTNTS? - GDG PATTERN. DSCB
         BZ    VVALID               YES, BYPASS ACCUMULATE
         LA    R5,BUF1+61           POINT TO FIRST EXTENT
VXTLOOP  MVC   0(10,R9),0(R5)      MOVE EXTENT TO SAVE AREA
         LA    R9,10(R9)           BUMP TO NEXT SAVE AREA
         MVC   HWK1(2),6(R5)        MOVE HI-CYL TO HWD
         LH    R0,HWK1              LOAD
         MVC   HWK1(2),8(R5)        MOVE HI-TRK TO HWD
         LH    R1,HWK1              LOAD
         MVC   HWK1(2),2(R5)        MOVE LOW-CYL TO HWD
         SH    R0,HWK1              SUBTRACT
         MVC   HWK1(2),4(R5)        MOVE LOW-TRK TO HWD
         SH    R1,HWK1              SUBTRACT
         MH    R0,VOLTKCYL          CONVERT CYL TO TRK
         AR    R1,R0                GET TOTAL MINUS1
         LA    R4,1(R1,R4)          GET TOTAL AND ACCUMULATE
         CR    R3,R2                DONE LAST EXTENT?
         BE    VVALID               GO TO VVALID IF SO
         LA    R3,1(R3)             BUMP TO EXTENT COUNTER
         CH    R3,=H'4'             FOURTH EXTENT?
         BE    VXT4                   BRANCH IF SO
         CH    R3,=H'8'             EIGHTTH EXTENT?
         BE   VXT8
         LA    R5,10(R5)            ELSE BUMP EXTENT POINTER
         B     VXTLOOP              AND GO TO NEXT EXTENT
VXT4     MVC   VTOCCHHR(5),BUF1+91  POINT NEXT DSCH(F2 OR F3)
VXT4OBT  OBTAIN SEEKCAM
         CLI   BUF1+44,C'3'         IF IT F3 DSCB
         BE    VXT4F3               BRANCH IF SO
         MVC   VTOCCHHR(5),BUF1+135  ELSE ITS F2-POINT TO F3
         B     VXT4OBT
VXT4F3   LA    R5,BUF1+4            POINT TO FIRST EXTENT IN F3
         B     VXTLOOP              CONTINUE LOOP FOR SIZE
VXT8     LA    R5,BUF1+45           SKIP OVER F3 ID IN F3 DSCB
         B     VXTLOOP              CONTINUE LOOP FOR SIZE
VVALID   EQU   *
* CONVERT SPACE ALLOC AND EDIT IN PRINT LINE
         CVD   R4,WKD               CONVERT DEC. R4  #TRKS ALLOC
         MVC   MSG2+5(6),MASKED      MOVE MASKED FIELD IN
         ED    MSG2+5(6),WKD+5       EDIT  # TRKS MSG2+5
         TM    DSORG,X'42'        IS IT PO OR PS
         BNZ   CVDU                  YES - BRANCH
         MVI   MSG2+17,C'*'
         B     CVDX                 BRANCH TO EXTENT CONVERSION
CVDU     LH    R6,LASTTRK            GET LAST RELATIVE TRACK
         LR    R7,R4
         SR    R7,R6                 R7 CONTAINS UNUSED SPACE
         CVD   R7,WKD               CONVERT DEC R7
         MVC   MSG2+12(6),MASKED      MOVE IN MASKED FIELD
         ED    MSG2+12(6),WKD+5       EDIT # TRKD UNUSED
CVDX     CVD   R2,WKD                   PICK UP # EXTENTS
         MVC   MSG2+20(4),MASKED      MOVE IN MASKED FIELD
         ED    MSG2+20(4),WKD+6      EDIT # EXTENTS USED
         MVC   MSG2+27(44),DSN1     MOVE DSN TO PRINT LINE
         TPUT  MSG2,76             WRITE OUT LINE
         TM    FLAG,X'A0'          AUTHORIZED USER?
         BNO   OBTNRET              NO
         LA    R9,XTNTS            POINT TO EXTENT SAVE AREA
         MVC   MSG2(6),VOLS        MOVE VOLSER TO MESSAGE AREA
OUTLOOP  LA    R3,3                SET LOOP CONTROL
         LA    R4,MSG2+8           POINT TO MESSAGE AREA
         MVI   MSG2+6,X'40'
         MVC   MSG2+7(69),MSG2+6   BLANK MESSAGE AREA
INLOOP   MVC   WXTNT+3(1),1(R9)    MOVE EXTENT # TO WORK AREA
         UNPK  0(2,R4),WXTNT+3(2)  UNPACK EXTENT #
         TR    0(1,R4),TRTBL       TRANSLATE EXTENT #
         MVC   WXTNT(4),2(R9)      MOVE BEGIN XTNT TO WORK AREA
         UNPK  2(9,R4),WXTNT(5)    UNPACK XTNT
         TR    2(8,R4),TRTBL       TRANSLATE EXTENT
         MVC   WXTNT(4),6(R9)      MOVE END XTNT TO WORK AREA
         UNPK  11(9,R4),WXTNT(5)   UNPACK XTNT
         TR    11(8,R4),TRTBL      TRANSLATE EXTENT
         LA    R9,10(R9)           BUMP TO NEXT EXTENT
         LA    R4,22(R4)           BUMP MESSAGE AREA POINTER
         BCTR  R2,0                DECREASE # EXTENTS
         LTR   R2,R2               ANY MORE EXTENTS
         BZ    *+8                  NO
         BCT   R3,INLOOP           CONVERT NEXT EXTENT
         LA    R0,L'MSG2
         LA    R1,MSG2
         SVC   93                  TPUT EXTENTS
         MVC   MSG2(6),BLANKS      BLANK VOLSER
         LTR   R2,R2               ANY MORE EXTENTS?
         BNZ   OUTLOOP              YES
OBTNRET  LM    R2,R11,OBTNSAVE     RELOAD CALLER'S REGISTERS
         BR    R9                  RETURN TO CALLER
         TITLE 'LISTSPC - EOJ AND ERROR ROUTINES'
RETC     EQU   *
         L     13,SAVE+4           LOAD R13 PREVIOUS SPACE AREA
         LM    2,12,28(13)         RELOAD REGISTERS
         L     14,12(13)           LOAD RETURN ADDRESS
         MVI   12(13),X'FF'        INDICATE CONTROL RETURN CALLING PROG
         BCR   15,14               RETURN TO CALLING PROGRAM
         SPACE 3
ERR01    EQU   *
* NO VALID COMMAND
         TPUT  ERMSG1,18
         B     RETC                BRANCH TO RETURN CODE
* DATASET NAME NOT FOUND
ERR03    MVC   MSG2(L'ERMSG9),ERMSG9
         MVC   MSG2+L'ERMSG9(44),DSN1
         LA    R0,L'ERMSG9+44
         LA    R1,MSG2
         SVC   93
         TM    FLAG,X'40'
         BO    LOOP
         TM    FLAG,X'10'
         BO    RETDSN
         B     OBTNRET
         SPACE 3
RDERR    MVC   MSG2(L'ERMSG8),ERMSG8
         MVC   MSG2+L'ERMSG8(44),DSN1
         LA    R0,L'ERMSG8+44
         LA    R1,MSG2
         SVC   93
         B     LOOP                CONTINUE THRU LOOP
         SPACE 3
NOUSER   MVC   MSG2(L'ERMSG3),ERMSG3
         MVC   MSG2+L'ERMSG3(44),USERID
         LA    R0,L'ERMSG3+44
         LA    R1,MSG2
         SVC   93
         B     RETC                RETURN TO SYSTEM
         SPACE 3
NOTDISK  MVC   MSG2(L'ERMSG6),ERMSG6
         MVC   MSG2+L'ERMSG6(44),DSN1
         LA    R0,L'ERMSG6+44
         LA    R1,MSG2
         SVC   93
         B     LOOP                PICK UP NEXT DATASET
         SPACE 3
MULTIVOL MVC   MSG2(L'ERMSG7),ERMSG7
         MVC   MSG2+L'ERMSG7(44),DSN1
         LA    R0,L'ERMSG7+44
         LA    R1,MSG2
         SVC   93
         B     LOOP                CONTINUE WITH NEXT DSN
         SPACE 3
ERRF     EQU   *
         TPUT  ERMSG10,20
         B     RETC
ERRF4    EQU   *                   ERROR READING F4
         TPUT  ERMSG11,21
         B     VOLRET
USIDMVC  MVC   0(0,R8),0(R10)
DSNMVC   MVC   0(0,R8),0(R5)
MVCVOLS  MVC   0(0,R1),0(R5)
         TITLE 'LISTSPC - DATA AREAS'
ENDLIST  DS    0F
         DC    XL4'FF000000'
* SETUP CONSTANTS
VOLDSCTK DC    H'0'                NUM DSCH ON A TRK
VOLF4CHR DC    XL5'00'             CCHHR OF DSCB
VOLNO    DC    H'0'                NUM VOLUMES PROCESSED
PEXCTR   DC    H'0'                CTR FOR TATAL NUM FREE SPACE
LASTTRK  DC    H'0'
DSN1     DC    CL44' '              DATASET NAME
DSNSAVE  DC    CL44' '
VOLS     DC    CL6' '                 VOLUME SER
USERID   DC    CL44' '              USERID
FLAG     DC    X'00'
DSORG    DC    X'00'
BLANKS   DC    CL6' '
BUF1     DS    0D
         DS    265C
TRTBL    EQU   *-240
         DC    C'0123456789ABCDEF'
MASKED   DC    XL6'402020202120'   MASK FIELD FOR EDIT
         SPACE 3
* MESSAGE TO BE PRINTED
MSG1     DC    C'DSORG ALLOC UNUSED EXTENTS DSNAME'
MSG2     DC    CL76' '
MSG4     DC    C'VOLUME DSCBS EXTENTS TRACKS     MAX         '
MSG4A    DC    C'VOLUME DSCBS EXTENTS TRACKS     MAX    INDEX'
*                0----0----1----1----2----2----3----3----4----4
*                0----5----0----5----0----5----0----5----0----5
         SPACE 3
* ERROR MESSAGES
ERMSG1   DC    C'NO VALID COMMAND'
ERMSG3   DC    C'INVALID LEVEL - '
ERMSG6   DC    C'DSN NOT ON DISK - '
ERMSG7   DC    C'DSN ON MULTIVOLUMES - '
ERMSG8   DC    C'ERROR READING CATALOG DSN - '
ERMSG9   DC    C'DSN NOT FOUND - '
ERMSG10  DC    C'UNSUPPORTED KEYWORD'
ERMSG11  DC    C'ERROR READING F4 DSCB'
         SPACE 4
         LTORG
         EJECT
********************************************************************CST
*                                                                   CST
*  ROUTINES ADDED TO INTERFACE WITH INDEXED VTOCS.  THE FOLLOWING   CST
*  STEPS ARE NEEDED                                                 CST
*     1.  FIND UCB ADDRESS IN ORDER TO PASS UNIT ADDRESS TO         CST
*         DYNAMIC ALLOCATE.                                         CST
*     2.  DYNAMICALLY ALLOCATE VTOC                                 CST
*     3.  OPEN VTOC                                                 CST
*     4.  CALL IXTOFMT5 TO RETURN PSUEDO FORMAT-5S                  CST
*     5.  CLOSE VTOC                                                CST
*     6.  DEALLOCATE VTOC                                           CST
* ZZZZ                                                              CST
********************************************************************CST
         SPACE 4                                                    CST
********************************************************************CST
*                                                                   CST
*  I X I N I T                                                      CST
*                                                                   CST
********************************************************************CST
*                                                                   CST
*  INITIALIZE FOR READING IX VTOC                                   CST
*                                                                   CST
IXINIT   XC    IXWORD,IXWORD           ZERO WORK WORD FOR 1ST CALL  CST
         MVC   DS4VTOCI,BUF1+14        SAVE VTOC INDICATOR FLAG BYTECST
         TM    DS4VTOCI,DS4IVTOC       THIS VTOC INDEXED?           CST
         BZR   R11                     IF NO, QUIT                  CST
*                                                                   CST
*  FIND UCB FOR THIS VOLUME. (FROM MAS'S ROUTINE IN HASPXEQ.)       CST
*                                                                   CST
URX$UCBS L     R15,16                  @ CVT                        CST
         L     R15,CVTILK2(,R15)       @ UCB LOOKUP LIST            CST
         SLR   R1,R1                   CLEAR FOR ICM                CST
         SPACE 1                                                    CST
URX$UCBN ICM   R1,3,0(R15)             @ UCB                        CST
         LA    R15,2(,R15)             @ NEXT UCB                   CST
         BZ    URX$UCBN                SKIP IF NULL                 CST
         C     R1,=X'0000FFFF'         END OF LIST?                 CST
         BNE   *+8                     NO. NO ON.                   CST
         EX    0,*                     YES. DIE.                    CST
         CLI   UCBDVCLS(R1),UCB3DACC   DASD?                        CST
         BNE   URX$UCBN                NO. SKIP AND GET NEXT.       CST
         CLC   VOLS(6),=C'ALL   '                                   CST
         BE    IXGOTUCB                                             CST
         CLC   UCBVOLI(6,R1),VOLS      DESIRED VOLUME?              CST
         BNE   URX$UCBN                GET NEXT                     CST
*                                                                   CST
*  DYNALOC VTOC                                                     CST
*                                                                   CST
IXGOTUCB MVC   IXKUNT+6(3),UCBNAME(R1) SET UP DYNALOC UNIT.         CST
         MVC   IXKVOL+6(6),VOLS        SET UP DYNALOC VOL.          CST
         LA    R1,AIX99RBA             POINT TO PARM LIST           CST
         DYNALLOC                      CALL SVC99                   CST
         LTR   R15,R15                 DID IT WORK?                 CST
         BZ    *+8                     BIF YES                      CST
         EX    0,*                     ELSE DIE                     CST
*                                                                   CST
* OPEN VTOC                                                         CST
*                                                                   CST
         MVC     IXDCB+DCBDDNAM(8),IXKDDN+6  MOVE DDNAME TO DCB     CST
         RDJFCB  IXDCB                 READ IN JFCB                 CST
         MVC   IXJFCB(44),=44XL1'04'   DSNAME FOR VTOC              CST
         OPEN  (IXDCB,(INPUT)),TYPE=J  OPEN VTOC                    CST
         TM    IXDCB+48,X'10'          DID IT WORK?                 CST
         BOR   R11                     YES. ALL READY.              CST
         EX    0,*                     NO. FAIL.                    CST
         SPACE 4                                                    CST
********************************************************************CST
*                                                                   CST
*  I X F M T 5                                                      CST
*                                                                   CST
********************************************************************CST
*                                                                   CST
*  GET A PSUEDO FORMAT-5 FROM AN IX VTOC                            CST
*                                                                   CST
IXFMT5   TM    DS4VTOCI,DS4IVTOC       VTOC IS INDEXED?             CST
         BZ    4(,R11)                 IF NOT, SKIP                 CST
         LA    R1,IXPARM               POINT TO PARMLIST            CST
         L     R15,=V(IXTOFMT5)        POINT TO ROUTINE             CST
         BALR  R14,R15                 CALL INTERFACE ROUTINE       CST
         LTR   R15,R15                 DID IT WORK?                 CST
         BZR   R11                     IF SO, CONTINUE              CST
         EX    0,*                     ELSE DIE.                    CST
         SPACE 4                                                    CST
********************************************************************CST
*                                                                   CST
*  I X T E R M                                                      CST
*                                                                   CST
********************************************************************CST
*                                                                   CST
*  CLOSE VTOC DCB AND FREE ALLOCATION                               CST
*                                                                   CST
IXTERM   TM    DS4VTOCI,DS4IVTOC       VTOC IS INDEXED?             CST
         BZR   R11                     IF NOT, SKIP                 CST
         CLOSE IXDCB                   CLOSE THE VTOC               CST
         MVC     IXKDDN2+6(8),IXKDDN+6 MOVE DDNAME TO DEALLOC LIST  CST
         LA    R1,AIX99RBF             POINT TO PARMLIST            CST
         DYNALLOC                      FREE VTOC                    CST
         LTR   R15,R15                                              CST
         BZR   R11                     RETURN                       CST
         EX    0,*                     RETURN                       CST
         SPACE 4                                                    CST
********************************************************************CST
*                                                                   CST
*  I X P R I N T                                                    CST
*                                                                   CST
********************************************************************CST
*                                                                   CST
*  CORRECT DSCB COUNT AND SHO VIRS FOR STAFF                        CST
*                                                                   CST
IXPRINT  EQU   *                                                    CST
         TM    DS4VTOCI,DS4IVTOC       VTOC IS INDEXED?             CST
         BO    IXPRIN2                 IF SO,                       CST
         TM    FLAG,X'40'              STAFF?                       CST
         BZR   R11                     IF NOT, ALL DONE             CST
         MVC   MSG2+38(6),=C'OS FMT'   TELL STAFF ABOUT FORMAT      CST
         BR    R11                     DONE                         CST
IXPRIN2  L     R1,IXCT1                USE DSCB 0 COUNT FROM IX     CST
         CVD   R1,WKD                  CONVERT IT                   CST
         MVC   MSG2+6(6),MASKED        MOVE IN MASK                 CST
         ED    MSG2+6(6),WKD+5         EDIT FREE DSCB               CST
         TM    FLAG,X'40'              STAFF?                       CST
         BZR   R11                     IF NOT, ALL DONE             CST
         L     R1,IXCT2                NUMBER OF FREE VIRS          CST
         CVD   R1,WKD                  CONVERT IT                   CST
         MVC   MSG2+38(6),MASKED       MOVE IN MASK                 CST
         ED    MSG2+38(6),WKD+5        EDIT FREE DSCB               CST
         BR    R11                     RETURN.                      CST
         EJECT ,                                                    CST
*                                                                   CST
*  PARMLIST FOR INTERFACE ROUTINE                                   CST
*                                                                   CST
IXPARM   DC    A(IXWORD)               @ WORK WORD                  CST
         DC    A(IXDCB)                @ VTOC DCB                   CST
         DC    A(IXCT1)                @ CNT - FREE FMT 0S          CST
         DC    A(IXCT2)                @ CNT - FREE VIRS            CST
         DC    A(BUF1)                 @ BFR FOR FMT5               CST
IXWORD   DC    F'0'                    WORK WORD                    CST
IXCT1    DC    F'0'                    COUNT FREE FMT0              CST
IXCT2    DC    F'0'                    COUNT FREE VIRS              CST
         SPACE 2                                                    CST
*                                                                   CST
*  PARMLIST FOR VTOC ALLOCATE                                       CST
*                                                                   CST
         PRINT GEN,DATA                                             CST
AIX99RBA DC    0F'0',X'80',AL3(IX99RBAL)                            CST
IX99RBAL DC    AL1(20,1)               LENGTH, VERB                 CST
         DC    X'4000'                 FLAG1 (DON'T USE EXISTING)   CST
         DC    AL2(0,0)                ERROR CODE, INFO CODE        CST
         DC    A(IX99TXT1)             @ TEXT UNITS                 CST
         DC    2F'0'                   RSVD, FLAG2                  CST
IX99TXT1 DC    A(IXKDDN,IXKVOL,IXKUNT,IXKOLD)                       CST
         DC    X'80',AL3(IXKKEP)                                    CST
IXKDDN   DC    AL2(85,1,8),C'SYS99999' DDNAME ASSIGNED              CST
IXKVOL   DC    AL2(16,1,6),C'XXXXXX'   VOL=SER=                     CST
IXKUNT   DC    AL2(21,1,3),C'000'      UNIT=                        CST
IXKOLD   DC    AL2(4,1,1),X'01'        DISP=OLD                     CST
IXKKEP   DC    AL2(5,1,1),X'08'        DISP=KEEP                    CST
         SPACE 4                                                    CST
*                                                                   CST
*  PARMLIST FOR VTOC DEALLOCATE                                     CST
*                                                                   CST
AIX99RBF DC    0F'0',X'80',AL3(IX99RBFR)                            CST
IX99RBFR DC    AL1(20,2)               LENGTH, VERB                 CST
         DC    X'0000'                 FLAG1                        CST
         DC    AL2(0,0)                ERROR CODE, INFO CODE        CST
         DC    A(IX99TXT2)             @ TEXT UNITS                 CST
         DC    2F'0'                   RSVD, FLAG2                  CST
         SPACE 2                                                    CST
IX99TXT2 DC    A(IXKDDN2),X'80',AL3(IXKKEP)                         CST
IXKDDN2  DC    AL2(1,1,8),C'SYS99999'  DDNAME ASSIGNED              CST
         PRINT GEN,NODATA                                           CST
         SPACE 4                                                    CST
*                                                                   CST
*  MISC CONSTANTS AND EQUATES                                       CST
*                                                                   CST
DS4VTOCI DC    X'00'                   VTOC INDICATOR BYTE          CST
DS4IVTOC EQU   X'01'                   FLAG FOR INDEXED FMT VTOC    CST
CVTILK2  EQU   40                      OFFSET TO LOOKUP TABLE       CST
UCBNAME  EQU   13                      OFFSET TO UNITNAME           CST
UCBDVCLS EQU   18                      OFFSET TO DEVICE CLASS       CST
UCB3DACC EQU   X'20'                   CLASS=DIRECT ACCESS          CST
UCBVOLI  EQU   28  '                   OFFSET TO DASD VOLSER        CST
DCBDDNAM EQU   40                      OFFSET TO DDNAME             CST
         SPACE 2                                                    CST
*                                                                   CST
*  DCB AND JFCB FOR VTOC                                            CST
*                                                                   CST
IXLST    DC    0F'0',X'87',AL3(IXJFCB)                              CST
IXJFCB   DC    XL176'00'                                            CST
         PRINT NOGEN                                                CST
IXDCB    DCB   DSORG=PS,MACRF=(E),EXLST=IXLST,DDNAME=NONE           CST
         PRINT GEN                                                  CST
         SPACE 4                                                    CST
         LTORG                                                      CST
         EJECT
* CAMLST FOR DSCB3
SEEKCAM  CAMLST SEEK,VTOCCHHR,VOLS,BUF1
         SPACE 2
* CAMLST LOCATE DSN OV VOL SER
INDS     CAMLST NAME,DSN1,,BUF1
         SPACE 2
* CAMLST FOR DSCB 1
SERCHCAM CAMLST SEARCH,DSN1,VOLS,BUF1
         EJECT
* CONSTANTS AND WORK AREAS
HWK1     DC    H'0'                HALF WORD WORK AREA
VOLTKCYL DC    H'19'               # TRKS/CYL
VTOCCHHR DC    XL5'0'              TRACK ADDR WORK AREA
WKD      DC    D'0'                DOUBLE WORK WORK AREA
         SPACE 3
* PARM SETUP FOR GETDSN
PARM     DC    A(USERID)           USERID ADDRESS
         DC    A(DSN1)             DSN ADDRESS
         DC    A(VOLS)             VOL SER ADDRESS
         DC    A(0)                ADDRESS FOR GETMAIN
         LTORG
         SPACE 3
         OACREGS
RCC      EQU   R8
RHH      EQU   R7
RR       EQU   R6
         TITLE 'LISTSPC - PARSE PARAMETER LIST'
         PRINT NOGEN
PARSLIST IKJPARM
DSNKYD   IKJKEYWD
         IKJNAME 'DATASET',SUBFLD=DSNSUBF
LEVL     IKJKEYWD
         IKJNAME 'LEVEL',SUBFLD=LVL
VOLUME   IKJKEYWD
         IKJNAME 'VOLUME',SUBFLD=VLM
EXTENT   IKJKEYWD
         IKJNAME 'EXTENTS'
DSNSUBF  IKJSUBF
DSNLIST  IKJPOSIT DSNAME,LIST
LVL      IKJSUBF
LEV      IKJIDENT 'LEVEL',OTHER=ANY,MAXLNTH=44
VLM      IKJSUBF
VOL      IKJIDENT 'VOLUME',LIST,FIRST=ALPHANUM,OTHER=ALPHANUM,MAXLNTH=6
         IKJENDP
         IKJPPL
         IKJCPPL
         PRINT GEN
         TITLE 'LISTSPC - WORK AREA'
WORKAREA DSECT
WPPL     DS    7A
CPECB    DS    F
WPDL     DS    F
OBTNSAVE DS    10F
XTNTS    DS    16XL10
WXTNT    DS    CL5
         DS    0D
LOCINDXW EQU   *
LWORK    EQU   *-WORKAREA
         DROP  R13
         DROP  R12
         DROP  R3
         EJECT
*          DATA SET CBT502     AT LEVEL 001 AS OF 12/15/75
*        LOCINDEX SUBROUTINE REPLACEMENT FOR MVS
*        THIS ROUTINE SUPPORTS 'LEVEL' OPTIONS OF THE 'LISTS' COMMAND
*             AND IS USED BY OTHER YCC VARIATIONS OF THAT PROGRAM
*        FOLLOWING IS ORIGINAL LOCINDEX DESCRIPTION:
*.....................................................................*
*.                                                                   .*
*.   LOCINDEX                                                        .*
*.                                                                   .*
*.....................................................................*
*.                                                                   .*
*.   1.0  GENERAL DESCRIPTION                                        .*
*.                                                                   .*
*.   THIS SUBROUTINE IS USED TO RETURN DSNAMES AND THE VOLSER        .*
*.   FOR A SPECIFIED INDEX STRUCTURE.  THE INDEX STRUCTURE CAN BE    .*
*.   SPECIFIED AS SEVERAL HIGH-LEVEL QUALIFIERS OR IT CAN BE A       .*
*.   DSNAME CONTAINING ONE EMBEDDED ASTERISK NOT AS THE HIGH-LEVEL   .*
*.   QUALIFIER.                                                      .*
*.                                                                   .*
*.....................................................................*
*.                                                                   .*
*.....................................................................*
*.                                                                   .*
*.   2.0  PARAMETER LIST AND RETURN CODE DESCRIPTION                 .*
*.                                                                   .*
*.   THE PARAMETER LIST IS A FOUR OR FIVE WORD LIST CONTAINING THE   .*
*.   FOLLOWING:                                                      .*
*.                                                                   .*
*.    WORD         DESCRIPTION                                       .*
*.                                                                   .*
*.      1          ADDRESS OF THE 44-BYTE FIELD CONTAINING THE       .*
*.                 INDEX STRUCTURE.                                  .*
*.      2          ADDRESS OF THE 44-BYTE FIELD INTO WHICH           .*
*.                 LOCINDEX WILL PLACE THE DSNAME.                   .*
*.      3          ADDRESS OF THE 6-BYTE FIELD INTO WHICH            .*
*.                 LOCINDEX WILL PLACE THE VOLSER OF THE DATASET.    .*
*.      4          ADDRESS OF A 4K WORK AREA TO BE USED BY           .*
*.                 LOCINDEX FOR STORING CATALOG BLOCKS.              .*
*.      5          OPTIONAL FIELD FOR THE ADDRESS OF A FULLWORD      .*
*.                 OF STORAGE ON AN INTEGRAL BOUNDARY INTO WHICH     .*
*.                 LOCINDEX WILL STORE THE RETURN CODE.              .*
*.                                                                   .*
*.   THE HIGH ORDER BIT OF THE LAST WORD OF THE PARAMETER LIST       .*
*.   MUST BE SET ON.                                                 .*
*.                                                                   .*
*.    RETURN CODE  MEANING                                           .*
*.                                                                   .*
*.         0       A DSNAME WAS FOUND AND THE DATASET RESIDES ON     .*
*.                 A DISK VOLUME.                                    .*
*.         4       THE INDEX STRUCTURE WAS NOT FOUND.                .*
*.         8       A DSNAME WAS FOUND AND THE DATASET RESIDES ON     .*
*.                 A TAPE VOLUME.                                    .*
*.        12       A DSNAME WAS FOUND BUT IT RESIDES ON MULTIPLE     .*
*.                 VOLUMES.                                          .*
*.        16       THERE ARE NO MORE DATASETS FOR THIS INDEX         .*
*.                 STRUCTURE.                                        .*
*.        20       AN I/O ERROR WAS DETECTED ON THE CATALOG.         .*
*.                                                                   .*
*.....................................................................*
*
*        THE PRIMARY DIFFERENCES BETWEEN THE MVS VERSION
*        AND THE OS VERSION ARE:
*              1) THE PART ABOVE THE ASTERISK IS PASSED TO VSAM
*                 GENERIC LOCATE AND WORKS HOWEVER GENERIC LOCATE
*                 LOCATE WORKS. ONLY NON-VSAM DATASETS ARE PASSED
*                 BACK TO THE CALLER.
*              2) THE CHARACTERS BELOW THE ASTERISK MUST APPEAR
*                 IN THE DATASET NAME ANYWHERE AFTER THE SEARCH
*                 KEY CHARACTERS. THEY MAY CONTAIN LEADING
*                 AND TRAILING PARTIAL INDEX LEVELS.
*              3) THE AMOUNT OF STORAGE REQUIRED FOR A VSAM GENERIC
*                 LOCATE IS MUCH MORE THAN THE 4K AREA PROVIDED BY
*                 THE OS CALLER. A 24K AREA IS GETMAINED AND ITS
*                 ADDRESS IS STORED IN THE FIRST WORK OF THE 4K
*                 CALLER WORK AREA. IT IS FREEMAINED WHEN THE
*                 RETURN CODE OF 16 SIGNALS THE END OF DATASETS
*                 UNDER THIS INDEX.
*              5) THE 265 BYTE CAMLIST WORK AREA IS PUT IN THE
*                 CALLER PROVIDED WORK AREA AT OFFSET 4. THIS
*                 ALLOWS ACCESS TO THE COMPLETE VOLUME LIST.
         EJECT
LOCINDEX CSECT
         USING *,15
         SAVE  (14,12),,*
         GETMAIN R,LV=LSECT
         ST    R13,4(R1)
         ST    R1,8(13)
         LR    R12,R13
         LR    R13,R1
         L     R1,24(R12)
         BALR  R12,0
         USING *,12
         USING DSASECT,R13
         ST    R1,INPARM
         L     R10,12(R1)
         USING WORKSECT,R10
         L     R2,0(R1)
         CLC   OINDEX,0(R2)   SAME INDEX STRUCTURE AS LAST CALL?
         BE    CAMLOC         GO GET NEXT DATASET
         MVC   OINDEX,0(R2)
         SPACE 10
BLDKEY   DS    0H
*        THIS BLOCK ANALIZES THE NEW INDEX STRUCTURE INTO COMPONENTS
*        IT CONSTRUCTS A VSAM CATALOG GENERIC SEARCH KEY AND AN
*        OPTIONAL LOWER LEVEL QUALIFIER VERIFICATION STRING
*        ONE ASTERISK IS ALLOWED ANYWHERE BELOW THE USERID.
*        IT MAY REPRESENT ALL OR PART OF AN 'INDEX LEVEL'
*        EXITS: NORMAL TO 'GENLOC'
*               TO 'ERROR4' IF A SYSTAX ERROR OCCURS IN INDEX STRUCTURE
         SR    R1,R1
         SR    R2,R2          CLEAR FOR TRT INSTRUCTION
         MVI   TRTAB,0
         MVC   TRTAB+1(255),TRTAB
         MVI   TRTAB+C' ',4
         MVI   TRTAB+C'*',8
         MVI   TRTAB+C'.',12
         MVC   KEY,OINDEX     COPY INDEX INPUT
         TRT   KEY,TRTAB
         BZ    ERROR4         MUST BE A BLANK IN 44 CHARS
         B     *(R2)
         B     USERIDXX       C' ' MUST BE A USERID
         B     ERROR4         C'*' ASTERISK MUST FOLLOW PERIOD
         B     COMPLEX        C'.' MUST DO FULL ANALYSIS OF STRUCTURE
         SPACE 5
USERIDXX DS    0H
*        THIS BLOCK BUILDS SEARCH KEY FOR USERID. MUST BE <9 CHARACTERS
*        AND WE ADD A PERIOD TO IT TO INDICATE TO GENERIC LOCATE
*        THAT WE ARE INTERESTED IN THE DATASETS UNDER THE NAME AND
*        NOT THE ALIAS RECORD (CVOL POINTER) OF THE NAME ITSELF.
         MVI   0(R1),C'.'
         LA    R3,KEY
         SR    R1,R3
         CH    R1,=H'8'
         BH    ERROR4
         LA    R1,1(R1)
         STC   R1,NAME        STORE KEY LENGTH
         MVI   LREST,X'80'
         B     GENLOC
* END OF USERID
         SPACE 5
COMPLEX  DS    0H
*        NOW WE SEARCH FOR AN IMBEDDED ASTERISK IN INDEX STRUCTURE
*        CHARACTERS ABOVE IT ARE USED AS THE GENERIC KEY.
*        CHARACTERS AFTER IT ARE USED AS THE LOWER LEVEL QUALIFIERS.
         MVI   TRTAB+C'.',0   NO LONGER INTERESTED IN PERIODS
         TRT   KEY,TRTAB
         BZ    ERROR4
         B     *(R2)
         B     ONEPART        NO ASTERISK
         B     TWOPART
         SPACE 5
ONEPART  MVI   LREST,X'80'
         LA    R3,KEY
         SR    R1,R3
         STH   R1,LKEY
         STC   R1,NAME
         B     GENLOC
         SPACE 5
TWOPART  DS    0H
*        THIS BLOCK HANDLES THE CASE WHERE THERE IS AN EMBEDDED
*        ASTERISK IN THE INDEX LEVEL. THE CHARACTERS BELOW THE
*        ASTERISK ARE MOVED TO 'REST'. THE CHARACTERS FROM THE
*        ASTERISK ON ARE BLANKED IN 'KEY'. THE LENGTH OF THE
*        NON BLANK PART OF 'REST' LESS ONE IS SAVED IN 'LREST'
*        FOR USE IN THE LATER CLC INSTRUCTION. THE LENGTH OF
*        THE KEY IS SAVED IN 'NAME' FOR THE GENERIC LOCATE AND
*        IN 'LKEY' FOR AN INDICATION OF HOW MANY CHARS TO
*        SKIP BEFORE LOOKING IN A DSN FOR A MATCH TO 'REST'.
         LA    R3,KEY+42
         SR    R3,R1         GET LENGTH OF KEY ABOVE ASTERISK
         MVC   REST,=CL44' ' INITIALIZE REST
         EX    R3,MOVREST    MOVE PART BELOW ASTERISK
         LA    R3,1(R3)
         EX    R3,BLNKEY     BLANK KEY FROM ASTERISK ON
         SH    R3,=H'43'
         LPR   R3,R3         GET CHARS ABOVE ASTERISK
         STH   R3,LKEY
         STC   R3,NAME
         TRT   REST,TRTAB    FIND NON-BLANK LENGTH OF REST
         B     *(R2)
         B     LENRST
         B     ERROR4        SORRY, ONLY ONE * PER CUSTOMER
LENRST   LA    R3,REST+1     CALCULATE LENGTH FROM ADDRESS
         SR    R1,R3            OF FIRST BLANK
         STH   R1,LREST
         B     GENLOC
MOVREST  MVC   REST(0),1(R1)
BLNKEY   MVC   0(0,R1),=CL44' '
* END OF TWOPART
* END OF COMPLEX
* END OF BLDKEY
         EJECT
GENLOC   DS    0H
*        THIS BLOCK ISSUES A VSAM GENERIC LOCATE TO BUILD AN IN-CORE
*        LIST OF DATASETS THAT BEGIN WITH THE SEARCH KEY
*        THERE IS NO GOOD DOCUMENTATION ON THE GENERIC
*        LOCATE IN THE LITERATURE. SEE THE CATALOG PLM FOR
*        WHAT LITTLE THERE IS. THE FORM BELOW WAS INFERRED
*        FROM SOME FICHE AND BY INTERCEPTING SVC 26 WITH DSS.
         MVC   GENFLAG,=X'05201100'
         XC    GENX1,GENX1
         XC    GENX2,GENX2
         LA    R1,NAME
         ST    R1,GENNAME
         GETMAIN R,LV=X'7FF8'
         ST    R1,GETADDR
         ST    R1,GENWORK
         MVC   0(4,R1),=X'7FF80004'
         LA    R1,GENPARM
         SVC   26
         LTR   R15,R15
         BNZ   ERROR4
         L     R1,GETADDR    GET VSAM CATLG RETURN AREA
         LA    R1,0(R1)       CLEAR HIGH BYTE
         LH    R2,2(R1)       GET NUMBER BYTES USED
         AR    R2,R1          ADD START ADDR
         ST    R2,LAST        SAVE LAST BYTE ADDR
         LA    R1,49(R1)      SKIP 4 BYTE PREFIX AND FIRST 45 BYTE ENTR
         ST    R1,NEXT        SAVE ADDR OF FIRST DSN ENTRY
* END OF GENLOC
         SPACE 10
CAMLOC   DS    0H
*        NOW DO A REGULAR CAMLIST NAME LOCATE FOR THE NEXT NON-VSAM
*        DATASET IN THE INCORE LIST
         XC    CAMLST(16),CAMLST
         LA    R1,KEY
         ST    R1,CAMLST+4
         LA    R1,VOLCNT
         ST    R1,CAMLST+12
         L     R1,NEXT
TEST     C     R1,LAST
         BNL   RET16          NO MORE DATASETS IN LIST
         CLI   0(R1),C'A'     IS IT NON-VSAM
         BE    S1
NOGO     LA    R1,45(R1)
         B     TEST
S1       TM    LREST,X'80'    IS THERE A LOWER QUALIFIER
         BO    S2             NO, SO GO LOCATE
         SPACE 5
TESTQUAL DS    0H
*        THIS CODE LOOKS FOR THE CHARACTER STRING BELOW THE
*        ASTERISK IN THE INDEX SEARCH KEY. THIS STRING MUST
*        BE SOMEWHERE IN THE DATASET NAME BELOW THE KEY OR
*        THE NAME IS REJECTED
         LA    R2,1(R1)
         AH    R2,LKEY        SKIP GENERIC KEY CHARS
         LH    R3,LREST       GET # CHARS-1 IN REST
         LA    R4,44
         SR    R4,R3
         SH    R4,LKEY        R4=# CHARS BELOW KEY + 1
COMP     EX    R3,COMPAR
         BE    S2
         LA    R2,1(R2)
         BCT   R4,COMP
         B     NOGO
COMPAR   CLC   REST(0),0(R2)
* END OF TESTQUAL
         SPACE 5
S2       DS    0H
*        NOW TO ISSUE NORMAL LOCATE BY NAME AND RETURN INFORMATION
*        ACCORDING TO DESCRIPTION OF PARAMETERS IN LEADING DOCUMENT
         MVC   KEY,1(R1)      COPY DSN
         LA    R1,45(R1)      PT TO NXT DSN
         ST    R1,NEXT        SAVE FOR NXT TIME
         LA    R1,CAMLST
         SVC   26             LOCATE BY NAME
         L     R2,INPARM      NOW GET PASSED PARM LIST
         LM    R2,R3,4(R2)    PICK UP 2ND & 3RD USER PARMS
         MVC   0(44,R2),KEY   SAVE DSN
         MVC   0(6,R3),SER    SAVE VOL
         TM    DEVT+2,X'20'   IS THIS DISK
         BZ    ERROR8         NO, PASS 8 RETURN CODE
         CLI   VOLCNT+1,1     IS IT MULTI-VOL
         BNE   ERROR12        YES, PASS 12 RETURN CODE
* END OF CAMLOC
         SPACE 10
*VARIOUS RETURNS
RETN     SR    R15,R15
         B     RC
ERROR4   LA    R15,4
         B     RC
ERROR8   LA    R15,8
         B     RC
ERROR12  LA    R15,12
         B     RC
RET16    FREEMAIN R,LV=X'7FF8',A=GETADDR
         LA    R15,16
         B     RC
ERROR20  LA    R15,20
RC       L     R1,INPARM
         TM    12(R1),X'80'
         BO    EXIT
         L     R1,16(R1)
         ST    R15,0(R1)
EXIT     L     R13,4(R13)
         ST    R15,16(R13)
         L     R1,8(R13)
         FREEMAIN R,LV=LSECT,A=(1)
         LM    R14,R12,12(R13)
         BR    R14
         LTORG
         EJECT
DSASECT  DSECT
         DS    18A
GENPARM  DS    0F            GENERIC LOCATE PARM AREA
GENFLAG  DS    F
GENNAME  DS    A
GENX1    DS    A
GENWORK  DS    A
GENX2    DS    3A
KEYLEN   DS    0H
         DS    X
NAME     DS    X
KEY      DS    CL44
INPARM   DS    A             SAVE R1 UPON ENTRY TO LOCINDEX
CAMLST   DS    4A
         DS    0D
LSECT    EQU   *-DSASECT
         SPACE 10
GETSECT  DSECT               GETMAINED VSAM WORK AREA
GETLEN   DS    H             LENGT OF AREA
GETUSED  DS    H             AMOUNT ALLOCATED CURRENTLY TO DATA
GETENTY  DS    0CL45         FIRST ELEMENT OF DSN ARRAY
GETTYPE  DS    C             TYPE FLAG ('A'=NONVSAM)
GETNAME  DS    CL44          DSN
         SPACE 10
WORKSECT DSECT               WORK AREA PASSED AS PARM
GETADDR  DS    A             ADDRESS OF GETMAINED VSAM WORK AREA
TRTAB    DS    0CL256
VOLCNT   DS    H
DEVT     DS    XL4
SER      DS    CL6
SEQ      DS    H
         DS    CL251
OINDEX   DS    CL44          PREVIOUS VALUE OF FIRST PARM
REST     DS    CL44          LOW QUALIFIER COMPARE STRING
NEXT     DS    A             ADDRESS OF NEXT DSN IN INCORE TABLE
LAST     DS    A             ADDRESS OF BYTE AFTER END OF DSNLIST
LKEY     DS    H             LENGTH OF GENERIC KEY
NOREST   DS    0B            FLAG IF 'REST' IS EMPTY
LREST    DS    H             LENGTH OF REST
         END
//*KED.SYSLMOD DD DISP=OLD,DSN=SYS1.OACLINK
//LKED.XXX     DD DISP=SHR,DSN=SYS9.MSSLOAD
//LKED.SYSIN DD *
  INCLUDE XXX(IXTOFMT5)
  ENTRY LISTSPC
  NAME LISTSPC(R)
