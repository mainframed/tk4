//CSYSMASA JOB ACCNT,MSGCLASS=A,COND=(0,NE)
/*ROUTE PRINT WYLBUR
//ASM EXEC ASMHCL
//ASM.SYSLIB DD
//           DD
//           DD DISP=SHR,DSN=SYS5.MSSMAC
*---------------------------------------------------------------------*
*                                                                     *
* UNIQUE - SELECT ONLY UNIQUE RECORDS                                 *
*                                                                     *
*  PARM:  (SPECIFIES POSITION OF KEY IN INPUT FILE)                   *
*         SEQUENCE OF: OFFSET1, LENGTH, ORDER                         *
*                                                                     *
*     OFFSETS ORIG 1 (RANGE 1 -> 4095)                                *
*     LENGTH ORIG 0 (RANGE 1 -> 256)                                  *
*                                                                     *
*       OFFSET ORIG 1; LENGTH OF FIELD; SORT ORDER (A OR D)           *
*                                                                     *
*  INPUT:  IN  - INPUT FILE                                           *
*                                                                     *
*  OUTPUT: OUT - OUTPUT FILE;                                         *
*                EACH UNIQUE KEYED RECORD FROM INPUT FILE             *
*                                                                     *
*   NOTE: ANY OUTPUT RECFM/LRECL WILL BE ACCEPTED,                    *
*         RDW'S WILL BE BUILD/DESTROYED AND THE                       *
*         RECORDS WILL BE TRUNCATED OR PADDED AS REQUIRED.            *
*                                                                     *
*---------------------------------------------------------------------*
         MACRO
         OACWORK &DUMMY
W#DWD    DC    D'0'
W#BUFPT  DC    A(0)               @ RECORD SAVE BUFFER
W#SAVPT  DC    A(0,0)             @ SAVED RECORD, LENGTH RECORD
W#PARM   DC    CL101' '
W#CODE   DC    50D'0'
         MEND
         SPACE 1
UNIQUE   OACENTER EXIT=(EXIT,(R15)),                                   X
               WORK=(0,MPARM),DSECT=W#,                                X
               STACK=(2048,W#STACK,E$OFLOW,ABEND),ROUND=YES
         SPACE 1
         SR    R0,R0
         ST    R0,W#SAVPT
         ST    R0,W#SAVPT+4
         OPEN  MF=(E,OPENLIST)    OPEN ALL DATASETS
         TM    DCBOFLGS-IHADCB+SYSPRINT,DCBOFOPN
         BZ    ABND99
         TM    DCBOFLGS-IHADCB+DCBIN,DCBOFOPN
         BZ    ABND99
         TM    DCBOFLGS-IHADCB+DCBOUT,DCBOFOPN
         BZ    ABND99
         SPACE 1
         LH    R3,DCBLRECL-IHADCB+DCBIN
         LA    R3,2048(,R3)
         GETMAIN R,LV=(R3)        GET SAVE BUFFER
         LA    R1,0(,R1)
         ST    R1,W#BUFPT         SAVE @ SAVE BUFFER
         SPACE 1
         L     R2,0(,R9)          @ PARM
         LH    R3,0(,R2)          LENGTH OF PARM
         LTR   R3,R3
         BZ    NOPARM             BIF NO PARM
         LA    R2,2(,R2)          @ PARM STRING
         LA    R14,W#PARM
         LA    R15,L'W#PARM
         MVCL  R14,R2             COPY PARM, PAD WITH X'00'
         SPACE 1
         LA    R1,W#PARM
         LA    R2,W#CODE-2        @ FOR COMPARE ROUTINE
         SPACE 1
** IF BOTH EOF THEN MUST RETURN EQUAL
** ELSE EOF ALWAYS < ANY REAL RECORD
         SPACE 1
PARMLP   OACCALL NUMCNVT,ERROR=PARMER GET OFFSET1
         LR    R5,R0              SAVE OFFSET
         C     R5,=F'4096'
         BH    PARMER
         BCTR  R5,0                GET OFFSET ORIG 0
         LA    R1,1(,R1)          SKIP COMMA
         OACCALL NUMCNVT,ERROR=PARMER GET LENGTH
         LTR   R0,R0
         BNP   PARMER
         C     R0,=F'256'
         BH    PARMER
         LA    R1,1(,R1)          SKIP COMMA
         SPACE 1
         MVC   2+0(8,R2),=X'D50020003000077E' PATTERN CODE
         STH   R5,W#DWD
         OC    2+2(2,R2),W#DWD    OFFSET TO IN FIELD
         OC    2+4(2,R2),W#DWD    OFFSET TO IN FIELD
         BCTR  R0,0               GET CLC TYPE LENGTH
         STC   R0,2+1(,R2)        SET LENGTH IN CLC
         CLI   0(R1),C'A'          ASCENDING ORDER?
         BE    PARM1
         CLI   0(R1),C'D'          DESCENDING ORDER?
         BNE   NOPARM             BIF INVALID PARM
*** REVERSE ORDER OF CLC FOR ASCENDING ORDER
         XC    2+2(2,R2),2+4(R2)  SWAP ORDER OF COMPARE FOR
         XC    2+4(2,R2),2+2(R2)     DESCENDING ORDER
         XC    2+2(2,R2),2+4(R2)
PARM1    LA    R2,8(,R2)          POINT PAST FIELD COMPARE
         LA    R1,1(,R1)          SKIP OVER 'A' OR 'D'
         CLI   0(R1),C','         COMMA?
         LA    R1,1(,R1)          SKIP OVER 'A' OR 'D'
         BE    PARMLP             BIF MORE INPUT
         MVI   1(R2),X'FE'        CHANGE LAST BCR TO ALWAYS RETURN
         EJECT ,
*---------------------------------------------------------------------*
*                                                                     *
*  COMPARE INPUT RECORDS;                                             *
*    INPUT FILES ARE ASSUMED IN ASCENDING ORDER                       *
*     SINCE AN EOF IS HIGHER THAN ANYTHING                            *
*     (EXCEPT ANOTHER EOF TO WHICH IT IS EQUAL)                       *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 1
         OACCALL GET,MF=(E,IN)    GET RECORD FROM IN
LOOP1    OACCALL SAVE             SAVE INPUT RECORD (IF ANY)
MATCH    OACCALL GET,MF=(E,IN)    GET RECORD FROM IN
         L     R3,IN+8            @ INPUT RECORD (IF ANY)
         LTR   R3,R3              ANY RECORD HERE?
         BZ    DONE               BIF EOF ON IN
         L     R2,W#SAVPT         @ OF PREV SAVED RECORD
         LA    R15,W#CODE         @ COMPARE ROUTINE
         BALR  R14,R15            COMPARE SAVED :: INPUT RECORD
         BE    MATCH              BIF EQUAL RECORDS
         BH    SEQERR             BIF SAVED > INPUT; SEQUENCE ERROR
*---     ELSE INPUT RECORD < SAVED RECORD
         MVC   OUT+8(8),W#SAVPT   COPY ADDR,LEN OF SAVED RECORD
         OACCALL PUT,MF=(E,OUT)   OUTPUT SAVED RECORD
         B     LOOP1              AND CONTINUE
         SPACE 1
*---     FILE 1 > FILE 2 - (FILE 2 MODULE MISSING FROM FILE 1)
SEQERR   MVC   LINE+1(14),=C'SEQUENCE ERROR'
         PUT   SYSPRINT,LINE
         MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE
         B     DONE
         EJECT ,
DONE     LM    R2,R3,W#SAVPT
         LTR   R2,R2              ANY SAVED RECORD?
         BZ    DONE2
         STM   R2,R3,OUT+8
         OACCALL PUT,MF=(E,OUT)
         SPACE 1
DONE2    LA    R2,MSG1
         LA    R3,IN
         LA    R4,2
EOF1     L     R0,0(,R3)
         CVD   R0,W#DWD
         MVC   LINE+1(10),=X'40202020202020202120'
         ED    LINE+1(10),W#DWD+3
         MVC   LINE+15(30),0(R2)
         PUT   SYSPRINT,LINE
         MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE
         LA    R2,30(,R2)
         LA    R3,4*4(,R3)
         BCT   R4,EOF1
         SPACE 1
         CLOSE MF=(E,OPENLIST)
         SR    R15,R15
         B     EXIT
         SPACE 1
PARMER   WTO   'MAS000I (UNIQUE) - PARM ERROR',ROUTCDE=(11)
         ABEND 97
         SPACE 1
NOPARM   WTO   'MAS000I (UNIQUE) - NO PARM: OFF,LEN,A/D',ROUTCDE=(11)
         ABEND 98
         SPACE 1
ABND99   ABEND 99,DUMP
         OACDROP R10
         EJECT ,
*---------------------------------------------------------------------*
*                                                                     *
*  SAVE - SAVE INPUT RECORD                                           *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 1
SAVE     OACSUB INUSE=NO
         LM    R2,R3,IN+8         ADDR/LEN INPUT RECORD
         LTR   R2,R2              ANY INPUT RECORD?
         BZ    SAV$EOF
         L     R4,W#BUFPT
         LR    R5,R3              COPY RECORD LENGTH
         STM   R4,R5,W#SAVPT
         MVCL  R4,R2              COPY RECORD
SAV$RET  OACRET ,
SAV$EOF  STM   R2,R3,W#SAVPT      SAVE EOF INDICATION
         B     SAV$RET
         OACDROP R10
         EJECT ,
*---------------------------------------------------------------------*
*                                                                     *
*  GET - GET NEXT INPUT RECORD                                        *
*                                                                     *
*   ENTRY: R1  - PARM POINTER                                         *
*                 + 0 - RECORD COUNT                                  *
*                 + 4 - @ INPUT DCB                                   *
*                 + 8 - @ INPUT RECORD (RETURN VALUE, 0 FOR EOF)      *
*                 +12 - LENGTH OF INPUT RECORD (RETURN VALUE)         *
*          R14 - RETURN ADDRESS                                       *
*          R15 - @ GET                                                *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 1
GET      OACSUB INUSE=NO
         LR    R9,R1              @ PARM LIST
         L     R0,8(,R9)          PREV EOF OCCUR?
         LTR   R0,R0
         BZ    GET$EOF            BIF PREV EOF
         L     R8,4(,R9)          @ INPUT DCB
         OACUSING IHADCB,R8
         TM    DCBOFLGS,DCBOFOPN  IF NOT OPEN,
         BZ    GET$EOF              LET IT BE EOF
         GET   (R8)               LOCATE NEXT INPUT RECORD (OR EOF)
         SR    R15,R15            RETURN CODE ZERO
         LA    R2,0(,R1)          @ RECORD WITH CLEAR HIGH BYTE
         LH    R3,DCBLRECL        LRECL (IF U OR F)
         TM    DCBRECFM,DCBRECF
         BNZ   G$SET1             BIF RECFM U OR F
         MVC   0(2,R13),0(R2)     ALIGN LENGTH FROM RDW
         LH    R3,0(,R13)
G$SET1   LA    R0,1               COUNT RECORD
         AL    R0,0(,R9)
         ST    R0,0(,R9)
G$SET2   STM   R2,R3,8(R9)
G$RET    OACRET RC=(R15)
GET$EOF  LA    R15,4              EOF
         SR    R2,R2              NO RECORD ADDRESS
         SR    R3,R3               RECORD LENGTH ZERO
         B     G$SET2
         OACDROP R10,R8
         EJECT ,
*---------------------------------------------------------------------*
*                                                                     *
*  RECPUT - PUT RECORD                                                *
*                                                                     *
*   ENTRY: R1  - @ PARMLIST                                           *
*                  + 0 - RECORD COUNT                                 *
*                  + 4 - @ OUTPUT DCB                                 *
*                  + 8 - @ RECORD TO OUTPUT                           *
*                  +12 - LENGTH OF RECORD TO OUTPUT                   *
*                                                                     *
*   (IGNORE CALL IF OUTPUT DCB NOT OPEN)                              *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 1
PUT      OACSUB INUSE=NO
         LR    R9,R1              @ PARMLIST
         L     R8,4(,R9)          @ OUTPUT DCB
         OACUSING IHADCB,R8
         LA    R0,1               COUNT OUTPUT RECORD
         AL    R0,0(,R9)
         ST    R0,0(,R9)
         TM    DCBOFLGS,DCBOFOPN  OUTPUT DCB OPEN?
         BZ    P$RET              RIF OUTPUT DCB NOT OPEN
         LM    R2,R3,8(R9)        ADDR, LEN OF OUTPUT RECORD
         LH    R5,DCBLRECL        ASSUME RECFM=F
         TM    DCBRECFM,DCBRECV
         BZ    P$PUT2             BIF RECFM=F
         LA    R5,4(,R3)          ASSUME RECFM=V
         TM    DCBRECFM,DCBRECF
         BZ    P$PUT1             BIF RECFM=V
         LR    R5,R3              ELSE RECFM=U
P$PUT1   STH   R5,DCBLRECL        SET LRECL FOR PUT LOCATE
P$PUT2   PUT   (R8)
         LA    R4,0(,R1)          @ OUTPUT AREA
         SPACE 1
         TM    DCBRECFM,DCBRECF   RECFM=V?
         BNZ   P$PUT3             BIF NOT RECFM=V
         LA    R4,4(,R4)          BUMP OUTPUT PTR OVER RDW
         SH    R5,=H'4'           DCR OUTPUT DATA LENGTH
         SPACE 1
P$PUT3   CR    R3,R5              INPUT LEN > OUTPUT LEN?
         BNH   P$PUT4
         LR    R3,R5              TRUNCATE LONG INPUT RECORD
P$PUT4   TM    DCBRECFM,DCBRECF   RECFM=V?
         BO    P$PUT5             BIF NOT RECFM=V
         LA    R0,4(,R5)          LENGTH OF RECORD INCLUDING RDW
         SLL   R0,16
         ST    R0,0(,R13)
         MVC   0(4,R1),0(R13)     INIT RDW
P$PUT5   MVCL  R4,R2              MOVE RECORD DATA TO OUTPUT AREA
P$RET    OACRET ,
         OACDROP R10,R8
         EJECT ,
*---------------------------------------------------------------------*
*                                                                     *
* NUMCNVT - CONVERT CHAR TO BINARY NUMBER                             *
*                                                                     *
*  ENTRY: R1 - @ OF INPUT STRING (UPDATED)                            *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 1
NUMCNVT  OACSUB INUSE=NO
         SR    R0,R0              INIT RESULT TO ZERO
         LA    R15,4              ASSUME RC 4; NO NUMBER EXISTS
NC$LOOP  CLI   0(R1),C'0'
         BL    NC$RET
         CLI   0(R1),C'9'
         BH    NC$RET
         IC    R2,0(,R1)
         N     R2,=X'0000000F'
         MH    R0,=H'10'
         AR    R0,R2
         LA    R1,1(,R1)
         SR    R15,R15            RETURN CODE 0; HAVE NUMBER
         B     NC$LOOP
         SPACE 1
NC$RET   OACRET RC=(R15)
         OACDROP R10
         EJECT ,
         SPACE 1
OPENLIST OPEN  (SYSPRINT,(OUTPUT),                                     X
               DCBIN,(INPUT),                                          X
               DCBOUT,(OUTPUT)),MF=L
         SPACE 1
* RECORD COUNT; @ DCB; @ RECORD OR 0; LENGTH OF RECORD
IN       DC    F'0',A(DCBIN,1,0)
OUT      DC    F'0',A(DCBOUT,1,0)
         SPACE 1
MSG1     DC    CL30'RECORDS READ               '
         DC    CL30'RECORDS WRITTEN           '
         SPACE 1
LINE     DC    CL133' '           PRINT LINE
         PRINT NOGEN
DCBIN    DCB   DDNAME=IN,DSORG=PS,MACRF=GL,EODAD=GET$EOF
DCBOUT   DCB   DDNAME=OUT,DSORG=PS,MACRF=PL
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,                      X
               LRECL=133,RECFM=FBA,BLKSIZE=1330
         SPACE 1
         DCBD  DSORG=PS
         END
//*KED.SYSLMOD DD DISP=SHR,DSN=SYS5.MSSLOAD,SPACE=,UNIT=
//LKED.SYSIN   DD *
    ENTRY UNIQUE
    IDENTIFY UNIQUE('CS01326')
    NAME UNIQUE(R)
//
