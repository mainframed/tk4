//CSYSMASA JOB ACCT,MSGCLASS=A,COND=(0,NE)
/*ROUTE PRINT WYLBUR
//ASM EXEC ASMHCL
//ASM.SYSLIB DD
//           DD
//           DD DISP=SHR,DSN=SYS5.MSSMAC
******************************************************
******************************************************
***                                                ***
**  TITLE: DUMPINFO                                 **
**  TYPE: TSO CP                                    **
**  FUNCTION: DISPLAY LAST IPL TIME AND STATUS OF   **
**            SYS1.DUMP DATASETS                    **
**  OPERANDS:  IPL  - LAST IPL TIME ONLY            **
**             ALL  - FULL & EMPTY DUMP DATASETS    **
**             FREE - EMPTY DUMP DATASETS           **
**  DEFAULT: IPL TIME AND FULL DUMP DATASETS        **
**                                                  **
**  OUTPUT FORMAT:                                  **
**    * TIME - DAY YY.DDD MM/DD/YY HH:MM            **
**    * IPL  - DAY YY.DDD MM/DD/YY HH:MM            **
**    DUMPNN - DAY YY.DDD MM/DD/YY HH:MM - TITLE    **
**    DUMPNN - EMPTY                                **
**    DUMPNN - DAIR ERROR - CODE=EEEE MSG           **
**    DUMPNN - OBTAIN ERROR - CODE=CCCC MSG         **
**    DUMPNN - I/O ERROR                            **
**                                                  **
**          DUMPNN => DUMP DATASET NAME             **
**          DAY => DAY OF THE WEEK DUMP TAKEN       **
**          YY.DDD => JULIAN DATE DUMP TAKEN        **
**          HH:MM => HOURS:MINUTES TIME DUMP TAKEN  **
**          TITLE => DUMP HEADER TITLE              **
**          EMPTY => DUMP DATASET IS EMPTY          **
**          EEEE => DAIR ERROR CODE RETURNED        **
**                  FROM S99ERROR FIELD             **
**          CCCC => OBTAIN ERROR RETURN CODE (R15)  **
**          MSG => MESSAGE ASSOCIATED WITH THE      **
**                 CORRESPONDING S99ERROR OR        **
**                 OBTAIN ERROR CODE                **
**          I/O ERROR => SYNAD EXIT TAKEN ON A GET  **
**                       OPERATION. DATASET MAY     **
**                       CONTAIN AN I/O ERROR       **
***                                                ***
******************************************************
******************************************************
         EJECT
*****************************************
*               WORK AREA               *
*   DSECT NAME - WDSECT                 *
*   BASE - R12                          *
*   DSECT BUILT BY OACENTER             *
*****************************************
         MACRO
         OACWORK &DUMMY
**********************************
*   BUILD PARM LIST FOR SVC99    *
**********************************
         DS    0F                               FULLWORD ALIGN
$99RBPTR DC    F'0'                             RB POINTER
$99RB    DS    XL(S99RBLEN)                     REQUEST BLOCK
*****************************
*  POINTERS TO TEXT UNITS   *
*****************************
$99ITUPL DC    0F'0'                            RB TEXT UNIT PTR LIST
$99IDSNP DC    F'0'                             INPUT DSN POINTER
$99IFREP DC    F'0'                             FREE ON CLOSE POINTER
$99VOLP  DC    F'0'                             RETURN VOLID POINTER
$99ISTP  DC    F'0'                             INPUT STATUS POINTER
$99IDDNP DC    F'0'                             RETURN DDNAME POINTER
*************************
*     TEXT  UNITS       *
*************************
$99TEXT  DC    0F'0'                            TEXT LIST
$99FREC  DC    F'0'                             FREE ON CLOSE
$99VOLK  DC    XL12'0'                          RETURN VOLID KEY
$99DDNK  DC    XL14'0'                          RETURN DDNAME KEY
$99DSNK  DC    XL20'0'                          DSNAME KEY
$99STK   DC    XL7'0'                           STATUS KEY
$99TEXTL EQU   *-$99TEXT                        TEXT LIST LENGTH
*************************************
*   CONTROL BLOCKS AND CONSTANTS    *
*************************************
OPENX    OPEN  (IDCB),MF=L                      OPEN PARAMETER LIST
CLOSEX   CLOSE (IDCB),MF=L                      CLOSE PARAMETER LIST
IDCB     DCB   DDNAME=DDN,DEVD=DA,DSORG=PS,EODAD=IEOD,SYNAD=IOE,       X
               MACRF=GL,LRECL=4104,BLKSIZE=4104,RECFM=F
FLAG     DC    XL1'0'                           EOD FLAG
EODFLG   EQU   X'80'                            EOD FLAG VALUE
DDNAME   DC    CL8' '                           DDNAME
DMPDSN   DC    CL44' '                          DUMP DS NAME FIELD
DSNCNTR  DC    PL2'0'                           DSN COUNTER FIELD
         DS    0D                               DOUBLE WORD ALIGN
RCODE    DC    F'0'                             RETURN CODE
TSOPL    DS    0F                               PARM LIST
         OACTSOPL PL=(IOPL)                     DEFINE IOPL
TSOECB   DC    F'0'                             DEF TSOECB
PUTLST   PUTLINE MF=L                           PUTLINE LIST
LINE     DC    H'144'                           LINE LENGTH FIELD
         DC    H'0'                             OFFSET FIELD
PUTBUF   DC    CL140' '                         OUTPUT BUFFER
CVDFLD   DC    D'0'                             CVTOD WORK AREA
OUT      DS    0F
OUTDAY   DC    C' - DAY '                       DAY OF WEEK
OUTJ     DC    C'YY.DDD '                       JULIAN DATE
OUTDM    DC    C'MM/'                           MONTH
OUTDD    DC    C'DD/'                           DAY
OUTDY    DC    C'YY '                           YEAR
OUTTH    DC    C'HH:'                           HOURS
OUTTM    DC    C'MM -'                          MINUTES
OUTLEN   EQU   *-OUT                            AREA LENGTH
DWD      DC    D'0'                             DECIMAL CONVERSION AREA
DSCBFLD  DC    XL140'0'                         DSCB AREA FOR OBTAIN
OBLST    DC    X'C1000000'                      OBTAIN SEARCH FOR DSN
DSNADR   DC    F'0'                             DSN ADDRESS
VOLADR   DC    F'0'                             VOLSER ADDRESS
FLDADR   DC    F'0'                             DSCB AREA ADDRESS
VOLSER   DC    CL6'0'                           DASD VOLUME
ECBFW    DC    F'0'                             FW FOR ECB
ANSWER   DC    F'0'                             ANSWER PLACE
KEY      DC    XL1'00'                          KEYWORD VALUE
PFIELD   DC    XL6'20214B202020'                EDIT PATTERN FIELD
TDATE    DC    X'904ED60F0D52400'               STCK BUFFER SPACE
*************************
*      PARSE PPL        *
*************************
PPLADS   DS    0F                               START ADDR OF PPL
UPTADS   DC    F'0'                             ADDR OF UPT
ECTADS   DC    F'0'                             ADDR OF ECT
ECBADS   DC    F'0'                             ADDR OF ECB
PCLADS   DC    F'0'                             ADDR OF PCL
ANSADS   DC    F'0'                             ADDR OF ANSWER AREA
CBADS    DC    F'0'                             ADDR OF COMMAND BUFFER
UWRKA    DC    F'0'                             ADDR OF USER WORK AREA
         MEND                                   END OF MACRO
         EJECT
         PRINT  NOGEN
********************************************************
*                                                      *
*    THE FOLLOWING DSECTS ARE IN USE:                  *
*                                                      *
*       IEFZB4D0 - SVC99 DYNAMIC ALLOCATION            *
*                  PARAMETER LIST (NAME=S99RBP)        *
*       IEFZB4D2 - SVC99 DYNAMIC ALLOCATION TEXT       *
*                  UNIT KEYS (NAME=SVC99KYS)           *
*       DCBD - DCB SYMBOLIC DEFINITION (NAME=IHADCB)   *
*       CVT - COMMUNICATION VECTOR TABLE (NAME=CVT)    *
*       IEESMCA - SMF CONTROL TABLE (NAME=SMCABASE)    *
*       IKJCPPL - TSO COMMAND PROCESSOR PARAMETER      *
*                 LIST (NAME=CPPL)                     *
*                                                      *
********************************************************
         SPACE 1
         IEFZB4D0
         SPACE 1
         IEFZB4D2
         SPACE 1
         DCBD  DSORG=PS,DEVD=DA
         SPACE 1
         CVT  DSECT=YES
         SPACE 1
         IEESMCA
         SPACE 1
         IKJCPPL
         EJECT
         PRINT  GEN
*********************************************
*  CSECT - DUMPINFO                         *
*     DUMPINFO BASE - R10                   *
*     WDSECT BASE - R12                     *
*                                           *
*********************************************
DUMPINFO OACENTER EXIT=(EXIT,(R15)),DSECT=WDSECT,WORK=(,YES),          X
               STACK=(1024,STACK,OVERFLOW,ABEND),ROUND=YES,            X
               PARM=(R9,LR)
         EJECT
************************************
*   PARSE COMMAND LINE             *
************************************
         OACCALL PARSE
         L     R1,ANSADS                        ANSADS IN R1 - IKJRLSA
RELEASE  IKJRLSA (R1)
********************************
*    INIT PUTLINE PTPB & IOPL  *
********************************
         OACCALL INITPUT
****************************************************
*  DISPLAY TODAYS TIME AND DATE                    *
****************************************************
         STCK  TDATE
         LA    R1,TDATE                         ADDRESS OF STCK RESULT
         OACCALL CVTOD                          CALL CONVERSION RE
         MVC   PUTBUF(6),TMSG                   TIME MSG IN BUFFER
         MVI   PUTBUF+35,C' '                   BLANK OUT - FROM CONV
         PUTLINE PARM=PUTLST,OUTPUT=(LINE,TERM,,DATA),                 X
               TERMPUT=(EDIT),MF=(E,IOPL)
****************************************************
*  RETRIEVE LAST IPL TIME FROM SMF CONTROL TABLE   *
****************************************************
         OACCALL IPLTIME
         CLI   KEY,X'01'                        'IPL' KEYWORD USED?
         BE    EXIT                             IF SO THEN EXIT.
************************************
*   INIT SVC99 REQUEST BLOCK       *
************************************
         OACCALL S99INIT
********************************
*    INIT OBTAIN PARM LIST     *
********************************
         OACCALL INITOLST
**********************************
*       INIT TEXT STRINGS        *
**********************************
         MVI   $99TEXT,C'0'                     INIT TEXT LIST
         MVC   $99TEXT+1($99TEXTL),$99TEXT       - TO 0
         MVC   $99FREC(4),=AL2(DALCLOSE,0)      SET FREE ON CLOSE
         MVC   $99DSNK(6),=AL2(DALDSNAM,1,DSNLEN)  SET DSNAME KEY
         MVC   $99VOLK(6),=AL2(DALRTVOL,1,6)    RETURN VOLID KEY
         MVC   $99STK(7),$99STKDC               SET DISP=SHR
***********************************************************
*   MOVE  DSN INTO RB & OUTPUT BUFFER THEN DO ALLOCATE    *
***********************************************************
         MVC   DMPDSN(44),DSINIT                INIT DSNAME AREA
         MVC   DMPDSN(DSNLEN),DSNDC             MVC IN DS NAME
         MVC   DSNCNTR(2),CNTRDC                INIT DSN COUNTER
ALLOC    MVC   $99DSNK+6(DSNLEN),DMPDSN         MOVE DSNAME INTO RB
         MVC   $99DDNK(6),=AL2(DALRTDDN,1,8)    INIT DDNAME KEY
         MVI   PUTBUF,C' '                      0 OUTPUT BUFFER
         MVC   PUTBUF+1(L'PUTBUF-1),PUTBUF
         MVC   PUTBUF(DSNL),DMPDSN+(DSNLEN-DSNL) MVC DSNAME INTO BUFFER
         LA    R1,$99RBPTR                      ADR OF RB POINTER IN R1
         DYNALLOC
         LTR   R15,R15                          ALLOCATE SUCCESSFUL?
         BNZ   ERROR1                           BIF NOT TO ERROR1
********************************************
*   OBTAIN DSCB - TEST FOR CATALOG, VTOC   *
*                 OR DSCB ERRORS           *
********************************************
         MVC   VOLSER(6),$99VOLK+6              MOVE IN VOLUME
         OBTAIN OBLST                           DO OBTAIN
         LTR   R15,R15                          TEST FOR 0 RC
         BNZ   ERROR2                           BIF OBTAIN FAILS
******************************************
*     MOVE  IN DDNAME FROM SVC99 RB      *
******************************************
         MVC   DDNAME(8),=CL8' '                INIT DDNAME AREA
         LH    R1,$99DDNK+S99TULNG-S99TUNIT     DDNAME LENGTH IN R1
         BCTR  R1,0                             -1 FOR EXECUTE
MOVDDN   MVC   DDNAME(1),$99DDNK+S99TUPAR-S99TUNIT  * EXECUTED *
         EX    R1,MOVDDN                        MVC DDN INTO DDNAME
***********************************
*        INIT  DCB & OPEN         *
***********************************
         MVI   FLAG,0                           INIT EOD FLAG
         MVC   IDCB(IDCBL),IDCBDC               INIT DCB
         MVC   IDCB+(DCBDDNAM-IHADCB)(8),DDNAME MOVE IN DDNAME
         MVC   OPENX(OPENL),OPENDC              INIT OPEN
         OPEN  (IDCB,INPUT),MF=(E,OPENX)        DO OPEN
         LA    R3,IDCB                          SET A BASE R3 TO
         OACUSING IHADCB,R3                     DCB
         TM    DCBOFLGS,DCBOFOPN                IS DCB OPEN?
         OACDROP R3                             DROP BASE R3
         BNO   ERROR3                           BIF NOT OPEN => ERROR3
****************************************
*   CALL SUBROUTINE TO GET HEADERMSG   *
****************************************
         OACCALL GETHDR                         CALL SUB GETHDR
**************************************************************
*   TEST FOR EMPTY DS OR IOE; NO-PRINT IF DS EMPTY & KEY=2   *
**************************************************************
         CLC   PUTBUF+DSNL(8),=C' - EMPTY'      IS DMPDS EMPTY?
         BNE   IOTST                            BIF EMPTY => PUTMSG
         CLI   KEY,X'02'                        'ALL' KEYWORD USED
         BE    PUTMSG                           BIF SO TO PUTMSG
         CLI   KEY,X'03'                        'FREE' KEYWORD USED?
         BE    PUTMSG                           BIF SO TO PUTMSG
         B     CLSDCB                           BRANCH TO CLOSE DCB
IOTST    CLC   PUTBUF+DSNL(6),=C' - I/O'        DMPDS IOE?
         BE    PUTMSG                           BIF IOE => PUTMSG
         CLI   KEY,X'03'                        'FREE' KEYWORD?
         BE    CLSDCB                           IF SO...CLOSE DCB
*********************************************
*   CALL SUBROUTINE TO DO STCK CONVERSION   *
*********************************************
         LA    R1,12(R1)                        R1 => STCK RESULT
         OACCALL CVTOD                          ELSE CALL SUB CVTOD
*********************************************************
*   OUTPUT THE BUFFER  CLOSE DCB THEN GO TO NEXT DUMP   *
*********************************************************
PUTMSG   PUTLINE PARM=PUTLST,OUTPUT=(LINE,TERM,,DATA),                 X
               TERMPUT=(EDIT),MF=(E,IOPL)
CLSDCB   MVC   CLOSEX(CLOSEL),CLOSEDC           INIT CLOSE LIST
         CLOSE (IDCB),MF=(E,CLOSEX)             CLOSE DCB
         FREEPOOL IDCB                          FREE INPUT BUFFER POOL
         SR    R15,R15                          CLEAR R15
         CLI   DMPDSN+(DSNLEN-1),X'F9'          IS IT DUMP09?
         BE    EXIT                             BIF DUMP09 => EXIT
NEXTDS   AP    DSNCNTR(2),INCRMNT(2)            BUMP COUNTER BY 1
         UNPK  DMPDSN+(DSNLEN-2)(2),DSNCNTR(2)  UNPK COUNTER INTO DSN
         OI    DMPDSN+(DSNLEN-1),X'F0'          CORRECT ZONE
         B     ALLOC                            B TO ALLOCATE NEXT DS
*********************************
*         ERROR ROUTINES        *
*********************************
ERROR1   OACCALL DAIRERR
         B     PUTMSG                           B TO PUTMSG
ERROR2   MVC   RCODE,RCODDC                     INIT RC AREA
         STH   R15,RCODE                        SAVE RC FOR ERROR MSG
         OACCALL OBTNERR                        CALL OBTNERR
         OACCALL UNALOC                         DATASET UNALLOCATION
         B     PUTMSG                           B TO PUTMSG
ERROR3   MVC   PUTBUF+DSNL(15),OPNERR           MVC MSG3 INTO BUFFER
         B     PUTMSG                           B TO PUTMSG
*********************************
*   SET END OF DATA FLAGS       *
*********************************
IEOD     OI    FLAG,EODFLG                      AT EODAD SET EODFLG
         BR    14                               BRANCH TO TM  EODFLG
***********************************
*  CONTROL BLOCKS AND CONSTANTS   *
***********************************
S99RBLEN EQU   S99RBEND-S99RB                   SVC99 RB LENGTH
OPENDC   OPEN  IDCBDC,MF=L                      OPEN PARM LIST
OPENL    EQU   *-OPENDC                         OPEN PARM LIST LENGTH
CLOSEDC  CLOSE IDCBDC,MF=L                      CLOSE PARM LIST
CLOSEL   EQU   *-CLOSEDC                        CLOSE PARM LIST LENGTH
IDCBDC   DCB   DDNAME=DDN,DEVD=DA,DSORG=PS,EODAD=IEOD,SYNAD=IOE,       X
               MACRF=GL,LRECL=4104,BLKSIZE=4104,RECFM=F
IDCBL    EQU   *-IDCBDC                         INPUT A DCB LENGTH
DSINIT   DC    CL44' '                          QUALIFY DS NAME FIELD
DSNDC    DC    CL11'SYS1.DUMP00'                DUMP DATASET
DSNLEN   EQU   *-DSNDC                          DUMP DS NAME LENGTH
DSNL     EQU   DSNLEN-5                         LENGTH FOR PUTLINE
RCODDC   DC    F'0'                             RETURN CODE DC
INCRMNT  DC    PL2'1'                           DSN INCREMENT
CNTRDC   DC    PL2'0'                           COUNTER FIELD DC
$99STKDC DC    AL2(DALSTATS,1,1),XL1'08'        DISP=SHR RB KEY
OPNERR   DC    CL14' - OPEN FAILED'             MSG FOR ERROR3
TMSG     DC    CL6'* TIME'
***********************************
*  PARSE SERVICE ROUTINE MACROS   *
***********************************
         PRINT  NOGEN
PCL      IKJPARM
KEYWORD  IKJKEYWD
         IKJNAME  'IPL'                       IPLTIME ONLY KEYWORD
         IKJNAME  'ALL'                       DISLAY ALL KEYWORD
         IKJNAME  'FREE'                      DISPLAY EMPTY DS KEYWORD
         IKJENDP
         OACDROP R10
         PRINT  GEN
         EJECT
************************************
************************************
**  PARSE -                       **
**       PARSE  COMMAND LINE      **
**       R9 =  CPPL ADDR.         **
************************************
************************************
PARSE    OACSUB
         OACUSING CPPL,R9                       R9 = CPPL BASE
         MVC   UPTADS,CPPLUPT                   MVC UPT ADDR INTO PPL
         MVC   ECTADS,CPPLECT                   MVC ECT ADDR INTO PPL
         MVC   CBADS,CPPLCBUF                   MVC CMDBUF ADDR IN PPL
         OACDROP R9
         LA    R2,ECBFW                         ADDR OF ECB
         ST    R2,ECBADS                        STORE IN PPL
         L     R2,=V(PCL)                       ADDR OF PCL
         ST    R2,PCLADS                        STORE IN PPL
         LA    R2,ANSWER                        ADDR OF ANSWER AREA
         ST    R2,ANSADS                        STORE IN PPL
         LA    R1,PPLADS                        ADDR OFF PPL IN R1
         CALLTSSR EP=IKJPARS                    LINK TO IKJPARS
         SR    R3,R3                            CLEAR R3
         L     R3,ANSWER                        GET ANSWER ADDRESS
         MVC   KEY(1),9(R3)                     MVC KEY VALUE INTO KEY
         OACRET
         OACDROP R10
         EJECT
************************************
************************************
**  S99INIT -                     **
**      INITIALIZE SVC99 REQUEST  **
**      BLOCK                     **
************************************
************************************
S99INIT  OACSUB
         LA    R1,$99RB                         ADDRESS OF RB IN R1
         OACUSING S99RB,R1                      DESECT ADDRESSABLITY
         ST    R1,$99RBPTR                      ADDR OF POINTER IN R1
         OI    $99RBPTR,S99RBPND                RBPTR LAST IN PRM LST
         XC    S99RB(S99RBLEN),S99RB            CLEAR LIST
         MVI   S99RBLN,S99RBLEN                 MOVE IN LENGTH
         MVI   S99VERB,S99VRBAL                 MOVE IN ALLOCATE VERB
         LA    R0,$99ITUPL                      ADDR OF TEXT IN R0
         ST    R0,S99TXTPP                      STORE IN TEXT POINTER
         MVI   S99FLAG1,S99NOMNT                SET FLAG FOR NO MOUNTS
         OACDROP R1                             DROP BASE R1
***********************************
*   INIT POINTERS TO TEXT UNITS   *
***********************************
         LA    R3,$99VOLK                       ADDR OF RETURN VOLUME
         ST    R3,$99VOLP                       STORE IN POINTER LIST
         LA    R3,$99FREC                       ADDR OF FREE ON CLOSE
         ST    R3,$99IFREP                      STORE IN POINTER LIST
         LA    R3,$99DSNK                       ADDR OF DSNAME KEY
         ST    R3,$99IDSNP                      STORE IN POINTER LIST
         LA    R3,$99DDNK                       ADDR OF DDNAME KEY
         ST    R3,$99IDDNP                      STORE IN POINTER LIST
         LA    R3,$99STK                        ADDR OF STATUS KEY
         ST    R3,$99ISTP                       STORE IN POINTER LIST
         OI    $99IDDNP,X'80'                   LAST ENTRY IN LIST
         OACRET
         OACDROP R10
         EJECT
**********************************************
**********************************************
**  INITOLST -                              **
**   INITIALIZE PARAMETER LIST FOR OBTAIN   **
**                                          **
**********************************************
**********************************************
INITOLST OACSUB                                 SAVE REGS
         MVC   OBLST(4),OBLSTDC                 SET SEARCH FOR DSN
         LA    R3,DMPDSN                        ADDR OF DS NAME
         ST    R3,DSNADR                        STORE IN PARM LIST
         LA    R3,VOLSER                        ADDR OF VOLSER
         ST    R3,VOLADR                        STORE IN PARM LIST
         LA    R3,DSCBFLD                       ADDR OF DSCB AREA
         ST    R3,FLDADR                        STORE IN PARM LIST
         OACRET
OBLSTDC  DC    X'C1000000'                      DSN SEARCH
         OACDROP R10
         EJECT
**********************************************
**********************************************
**     INITPUT -                            **
**           INITIALIZE PUTLINE             **
**                                          **
**********************************************
**********************************************
INITPUT  OACSUB                                 SAVE REGS
         OACBLDPL CPPL=0(R9),ECB=TSOECB,IOPL=IOPL
         MVC   LINE(2),LINEDC                   INIT OUTPUT LINE
         MVC   LINE+2(2),OFFSET                 INIT LINE OFFSET
         MVC   PUTBUF(140),PUTBUFDC             INIT OUTPUT BUFFER
         MVC   PUTLST(PUTLEN),PUTLSTDC          INIT PUTLINE LIST
         OACRET
LINEDC   DC    H'144'                           LINE LENGTH FIELD
OFFSET   DC    H'0'                             OFFSET
PUTBUFDC DC    CL140' '                         OUTPUT BUFFER DC
PUTLSTDC PUTLINE MF=L                           PUTLINE LIST
PUTLEN   EQU   *-PUTLSTDC                       PUTLINE LIST LENGTH
         OACDROP R10
         EJECT
***************************************************************
***************************************************************
**  IPLTIME -                                                **
**  GET LAST IPL TIME FROM SMF CONTROL TABLE                 **
**                                                           **
**  OUTPUT FORMAT: * IPL  - DAY YY.DDD MM/DD/YY HH:MM        **
**  MACROS USED:                                             **
**              CVT                                          **
**              IEESMCA                                      **
***************************************************************
***************************************************************
IPLTIME  OACSUB
         L     R1,CVTPTR                        GET CVT ADDR
         L     R1,CVTSMCA-CVT(,R1)              ADDR OF SMF CTRL AREA
         OACUSING SMCABASE,R1
         N     R1,=X'00FFFFFF'                  IS IT AVAILABLE?
         BNZ   GETIME                           BIF AVAILABLE TO GETIME
         MVC   PUTBUF(17),NAMSG                 PUT N/A MSG
         B     PUTTIME                          EXIT
GETIME   SR    R2,R2                            CLEAR REGS R2 AND
         SR    R3,R3                            R3 FOR DIVIDE
         L     R3,SMCAITME                      IPL TIME IN R3
         D     R2,=A(100*60*60)                 GET HOURS IN R3
         CVD   R3,CVDFLD                        CVD HOURS
         UNPK  PUTBUF+(MSGLEN+16)(2),CVDFLD+6(2) UNPK HOURS IN BUFFER
         SRDL  R2,32                            SHIFT SECONDS INTO R3
         D     R2,=A(100*60)                    GET MINUTES
         CVD   R3,CVDFLD                        CVD MINUTES
         UNPK  PUTBUF+(MSGLEN+19)(2),CVDFLD+6(2) UNPK MIN INTO BUFFER
         MVI   PUTBUF+(MSGLEN+18),C':'          MVC : BETWEEN HRS:MIN
         OI    PUTBUF+(MSGLEN+17),X'F0'         CORRECT ZONE FOR HRS
         OI    PUTBUF+(MSGLEN+20),X'F0'         CORRECT ZONE FOR MIN
         MVC   PFIELD(6),PTRN                   MVC PATTERN INTO PFIELD
         ED    PFIELD(6),SMCAIDTE+1             EDIT DATE INTO PFIELD
         MVC   PUTBUF+MSGLEN(6),PFIELD          DATE INTO BUFFER
         MVC   PUTBUF(MSGLEN),IPLMSG            MVC IPLMSG INTO BUFFER
         MVC   CVDFLD,=D'0'                     CLEAR DW CVDFLD
         MVC   CVDFLD+6(2),SMCAIDTE+2           MOVE DAYS INTO CVDFLD
         CVB   R2,CVDFLD                        DAYS INTO R2 FOR SUB
         MVC   CVDFLD+4(4),SMCAIDTE             MOVE DATE INTO CVDFLD
         SRP   CVDFLD+4(4),64-3,0               SHIFT OUT DAYS
         UNPK  OUTDY(2),CVDFLD+6(2)             UNPK YEARS FOR OUTPUT
         OI    OUTDY+1,X'F0'                    CORRECT ZONE
         CVB   R3,CVDFLD                        YEAR INTO R3 FOR SUB
         OACCALL IPLDAY
         OACCALL GRDATE                         CALL GRDATE SUBROUTINE
         MVC   PUTBUF+(MSGLEN+7)(8),OUTDM
PUTTIME  PUTLINE PARM=PUTLST,OUTPUT=(LINE,TERM,,DATA),                 X
               TERMPUT=(EDIT),MF=(E,IOPL)
         OACRET
PTRN     DC    XL6'20214B202020'                EDIT PATTERN DC
NAMSG    DC    CL17'SMF NOT AVAILABLE'          NOT AVAIL MESSAGE
IPLMSG   DC    CL13'* IPL  - DAY '              IPL TIME MESSAGE
MSGLEN   EQU   *-IPLMSG                         IPL MSG LENGTH
         OACDROP R10
         OACDROP R1
         EJECT
**********************************************
**********************************************
**   IPLDAY -                               **
**   CALC DAY OF WEEK FROM SMF RECORDS FOR  **
**   IPL  TIME                              **
**********************************************
**********************************************
IPLDAY   OACSUB
         SR    R4,R4               CLEAR WORK REGS
         SR    R5,R5
         SR    R6,R6
         SR    R7,R7
         LR    R5,R3               YEAR IN R5
         LR    R7,R3               YEAR IN R7
         D     R6,=F'4'            CALC # OF DAYS FOR LEAP YEARS
         M     R4,=F'365'          CALC DAYS IN # OF YEARS
         AR    R5,R2               ADD IN # OF DAYS THIS YEAR
         AR    R5,R7               ADD IN LEAP YEAR DAYS
         D     R4,=F'7'            DIVIDE BY 7 FOR REMAINDER
         LR    R5,R4               GET REMAINDER FOR MULTIPLY
         M     R4,=F'7'            MULTIPLY REMAINDER FOR TABLE OFFSET
         LA    R6,DATBL            ADDR OF DAY TABLE
         AR    R6,R5               ADD ADDR OF TABLE WITH OFFSET
         MVC   PUTBUF+6(7),0(R6)   MOVE DAY INTO OUTPUT BUFFER
         OACRET
*---            DAY TABLE
DATBL    DC    CL7' - SUN '
         DC    CL7' - MON '
         DC    CL7' - TUE '
         DC    CL7' - WED '
         DC    CL7' - THR '
         DC    CL7' - FRI '
         DC    CL7' - SAT '
         OACDROP R10
         EJECT
**********************************************
**********************************************
**   GETHDR -                               **
**   GET HEADER RECORDS FROM DUMP DATASET   **
**                                          **
**********************************************
**********************************************
GETHDR   OACSUB                                 SAVE REGS
         SR    R3,R3                            CLEAR R3 FOR INCREMENT
GETBLK   GET   IDCB                             LOCATE A BLOCK
         TM    FLAG,EODFLG                      IS IT EOD?
         BO    EMPTYMSG                         BIF EOD TO EMPTYMSG
         CLI   0(R1),X'FF'                      IS FIRST 2 BYTES FF?
         BE    MOVTITLE                         BIF FF MOVTITLE
         LA    R3,1(R3)                         INCREMENT R3+1
         C     R3,=F'2'                         IS R3=2
         BE    EMPTYMSG                         BIF R3=2 EMPTYMSG
         B     GETBLK                           LOCATE NEXT BLOCK
EMPTYMSG MVC   PUTBUF+DSNL(8),=CL8' - EMPTY'    MVC DS EMPTY MSG
         B     EXITSUB                          B EXITSUB
IOE      MVC   PUTBUF+DSNL(12),=CL12' - I/O ERROR'
         B     EXITSUB
MOVTITLE MVC   PUTBUF+(DSNL+31)(100),20(R1)     GET HEADERMSG FROM DS
EXITSUB  OACRET                                 RESTORE REGS & EXITSUB
         OACDROP R10
         EJECT
************************************************************
************************************************************
** CVTOD - CONVERT TOD TO INTERNAL/EXTERNAL FORMAT        **
**   ENTRY:  R14 - RETURN ADDRESS                         **
**           R13 - SAVE AREA ADDRESS                      **
**           R1  - ADDR OF TOD TO CONVERT                 **
**                                                        **
**       SUBROUTINES USED: GRDATE                         **
**                                                        **
**   EXIT:   R15 - RETURN CODE                            **
**                                                        **
**    OUTPUT FORMAT: '- DAY YY.DDD MM/DD/YY HH:MM -'      **
**                                                        **
**     ASSUMES ZERO VALUE FOR TOD CLOCK IS ----           **
**                   '01/01/00 (000) 00:00:00.000000'     **
**                                                        **
************************************************************
************************************************************
         SPACE 3
CVTOD    OACSUB                         SAVE CALLERS REGS
         MVI   OUT,C' '                 INIT OUTPUT AREA TO BLANK
         MVC   OUT+1(OUTLEN-1),OUT
         LM    R2,R3,0(R1)              GET ORIG TOD VALUE
         SRDL  R2,12                    ALIGN MICROSECONDS
         D     R2,=A(60*1000000)        MIN TO R3, USEC TO R2
         CVD   R2,DWD                   USEC TO DECIMAL
         SR    R2,R2                    CLEAR FOR DIVIDE
         D     R2,=A(60)                HOUR TO R3, MIN TO R2
         CVD   R2,DWD                   MINUTES TO DEC
         UNPK  OUTTM(2),DWD+6(2)        MIN TO OUTPUT AREA
         OI    OUTTM+1,C'0'             FIX ZONE
         MVI   OUTTM+3,C'-'             MOVE - INTO BUFFER AFTER MIN
         SR    R2,R2                    CLEAR FOR DIVIDE
         D     R2,=A(24)                DAYS TO R3, HOURS TO R2
*************************
*   CALC DAY OF WEEK    *
*************************
         SR    R9,R9
         LR    R9,R3                    TOTAL # DAYS IN R9
         SR    R8,R8                    CLEAR R8 FOR DIVIDE
         D     R8,=F'7'                 DIVIDE BY 7 TO GET REMAINDER
         LA    R6,DAYTBL                ADDR OF DAY TABLE IN R6
         LR    R9,R8                    MOVE REMAINDER FOR MULTIPLY
         M     R8,=F'7'                 MULTIPLY REMAINDER BY 7
         AR    R6,R9                    ADD TO TABLE ADDR
         MVC   OUTDAY(7),0(R6)          MOVE DAY INTO OUTPUT
**********************************
*   CALC YEAR, HOURS & MINUTES   *
**********************************
         CVD   R2,DWD                   HOURS TO DEC
         UNPK  OUTTH(2),DWD+6(2)         HOURS TO OUTPUT AREA
         OI    OUTTH+1,C'0'              FIX ZONE
         MVI   OUTTH+2,C':'             COLON BETWEEN HOUR:MIN
         C     R3,=A(365)               AFTER 1900?
         BNH   *+8                      BIF NOT AFTER 1900
         A     R3,=A(1)                 ELSE PRETEND 1900 LEAP YEAR
         SLL   R3,2                     DAYS * 4
         SR    R2,R2                    CLEAR FOR DIVIDE
         D     R2,=A((365*4)+1)         YEAR TO R3, DAY TO R2
         CVD   R3,DWD                   YEAR TO DEC
         UNPK  OUTJ(2),DWD+6(2)         YEAR TO JULIAN DATE OUTPUT
         UNPK  OUTDY(2),DWD+6(2)        YEAR TO OUTPUT AREA
         OI    OUTJ+1,C'0'              FIX ZONE
         OI    OUTDY+1,X'F0'            FIX ZONE
         SRL   R2,2                     DAYS * 4 TO DAYS
         A     R2,=A(1)                 + 1 TO GET DAYS ORIG 1
         CVD   R2,DWD                   JULIAN DAY TO DEC
         UNPK  OUTJ+3(3),DWD+6(2)       JULIAN DAY TO OUTPUT AREA
         OI    OUTJ+5,X'F0'             FIX ZONE
         MVI   OUTJ+2,C'.'              . IN JULIAN DATE
         OACCALL GRDATE
         MVC   PUTBUF+DSNL(OUTLEN),OUT  MOVE TIME INTO PUTBUF
         OACRET
         SPACE 1
*---            DAY TABLE
DAYTBL   DC    CL7' - MON '
         DC    CL7' - TUE '
         DC    CL7' - WED '
         DC    CL7' - THR '
         DC    CL7' - FRI '
         DC    CL7' - SAT '
         DC    CL7' - SUN '
         OACDROP R10
         EJECT
*****************************************************
*****************************************************
**       GRDATE -                                  **
**                                                 **
**       CONVERT JULIAN TO GREGORIAN DATE          **
**       CALLED -  CVTOD                           **
**                 IPLTIME                         **
**       R2 - JULIAN DAY IN BIN                    **
**       R3 - YEAR IN BIN                          **
**                                                 **
*****************************************************
*****************************************************
GRDATE   OACSUB
         LA    R5,CVTOD#T1-2            ASSUME NON-LEAP YEAR
         N     R3,=F'3'                 TEST FOR LEAP YEAR
         BNZ   CVTOD$NL                 BIF NOT LEAP YEAR
         LA    R5,CVTOD#T2-2            ELSE FEB HAS 29 DAYS
CVTOD$NL LR    R4,R5                    COPY TABLE ADDR
CVTOD$L1 LA    R4,2(,R4)                POINT TO NEXT ENTRY
         SH    R2,0(,R4)                DAYS LEFT AFTER MONTH
         BP    CVTOD$L1                 BIF AFTER THIS MONTH
         AH    R2,0(,R4)                GET DAY IN MONTH
         CVD   R2,DWD                   DAY IN MONTH TO DEC
         UNPK  OUTDD(2),DWD+6(2)        DAY TO OUTPUT AREA
         OI    OUTDD+1,C'0'             FIX ZONE
         MVI   OUTDD+2,C'/'             SLASH AFTER DAY
         SR    R4,R5                    GET 2*MONTH ORIG 0
         SRL   R4,1                     GET MONTH
         CVD   R4,DWD                   MONTH TO DEC
         UNPK  OUTDM(2),DWD+6(2)        MONTH TO OUTPUT AREA
         OI    OUTDM+1,C'0'             FIX ZONE
         MVI   OUTDM+2,C'/'             SLASH AFTER MONTH
         OACRET
*---            NON - LEAP YEAR TABLE OF DAYS / MONTH
CVTOD#T1 DC    H'31'       1 -          JAN
         DC    H'28'       2 -          FEB
         DC    H'31'       3 -          MARCH
         DC    H'30'       4 -          APRIL
         DC    H'31'       5 -          MAY
         DC    H'30'       6 -          JUNE
         DC    H'31'       7 -          JULY
         DC    H'31'       8 -          AUG
         DC    H'30'       9 -          SEPT
         DC    H'31'      10 -          OCT
         DC    H'30'      11 -          NOV
         DC    H'31'      12 -          DEC
         SPACE 1
*---              LEAP YEAR TABLE OF DAYS / MONTH
CVTOD#T2 DC    H'31'       1 -          JAN
         DC    H'29'       2 -          FEB
         DC    H'31'       3 -          MARCH
         DC    H'30'       4 -          APRIL
         DC    H'31'       5 -          MAY
         DC    H'30'       6 -          JUNE
         DC    H'31'       7 -          JULY
         DC    H'31'       8 -          AUG
         DC    H'30'       9 -          SEPT
         DC    H'31'      10 -          OCT
         DC    H'30'      11 -          NOV
         DC    H'31'      12 -          DEC
         DC    H'32767'   13 -          13TH MONTH (LARGE AND LAST)
         SPACE 1
         OACDROP R10
         EJECT
*****************************************************
*****************************************************
**       DAIRERR -                                 **
**                                                 **
**       ERROR ROUTINE 1                           **
**       SVC99 FAILURE - ALLOCATE                  **
**                                                 **
*****************************************************
*****************************************************
DAIRERR  OACSUB                                 SAVE REGS
         LA    R3,$99RB                         ESTABLISH ADDRESS
         OACUSING S99RB,R3                      IN SVC99 RB
         CLC   S99ERROR(2),=X'0218'             IS ERROR CODE = 0218?
         BNE   GETCODE                          BIF NOT TO GET CODE
         MVC   PUTBUF+DSNL(44),E1MSG1           MVC E1MSG2 INTO BUFFER
         B     ESUB                             B EXIT SUBROUTINE
GETCODE  MVC   RCODE,RCODC1                     INIT RC AREA
         MVC   RCODE(2),S99ERROR                MVC RC INTI RC AREA
         MVC   PUTBUF+DSNL(25),E1MSG2           MVC E1MSG3 INTO BUFFER
         UNPK  PUTBUF+(DSNL+L'E1MSG2-4)(5),RCODE(3)
         MVI   PUTBUF+(DSNL+L'E1MSG2),C' '      BLANK OUT BAD CHAR
         TR    PUTBUF+(DSNL+L'E1MSG2-4)(4),TRTBL1
         CLI   RCODE,X'17'                      IS RC '17' PREFIX?
         BNE   ESUB                             BIF NOT EXIT SUBROUTINE
         MVC   PUTBUF+(DSNL+L'E1MSG2)(13),E1MSG3
ESUB     OACRET                                 RETURN TO MAIN
E1MSG1   DC    CL44' - DAIR ERROR - CODE=0218 VOLUME NOT MOUNTED'
E1MSG2   DC    CL25' - DAIR ERROR - CODE=0000'  DAIR ERROR MSG
E1MSG3   DC    CL13' LOCATE ERROR'              LOCATE ERROR MSG
RCODC1   DC    F'0'                             RC DC
TRTBL1   DC    256X'00'                         HEX TO CHAR
         ORG   TRTBL1+C'0'                      TRANSLATE
         DC    CL16'0123456789ABCDEF'           TABLE
         ORG   ,
         OACDROP R10
         OACDROP R3
         EJECT
*****************************************************
*****************************************************
**       OBTNERR -                                 **
**                                                 **
**       ERROR ROUTINE 2                           **
**       OBTAIN FAILURE                            **
**                                                 **
**       RCODE CONTAINS RETURN CODE                **
*****************************************************
*****************************************************
OBTNERR  OACSUB                                 SAVE REGS
         MVC   PUTBUF+DSNL(25),E2MSG1           MVC E2MSG1 INTO BUFFER
         CLC   RCODE(2),=X'0008'                IS RC = '0008'?
         BNE   COMPAR2                          BIF NOT COMPAR2
         MVC   PUTBUF+(DSNL+MSGL)(25),E2MSG2    MVC E2MSG2 INTO BUFFER
         B     EXITSB                           B EXIT SUBROUTINE
COMPAR2  CLC   RCODE(2),=X'0012'                IS RC = '0012'?
         BNE   GETCDE                           BIF NOT GETCDE
         MVC   PUTBUF+(DSNL+MSGL)(25),E2MSG3    MVC E2MSG3 INTO BUFFER
         B     EXITSB                           B EXIT SUBROUTINE
GETCDE   MVC   PUTBUF+(DSNL+MSGL)(10),E2MSG4    MVC E2MSG4 INTO BUFFER
         UNPK  PUTBUF+(DSNL+23)(5),RCODE(3)     UNPK RC+1 INTO BUFFER
         MVI   PUTBUF+(DSNL+27),C' '            BLANK OUT BAD CHAR
         TR    PUTBUF+(DSNL+23)(4),TRTBL2       TR HEX TO CHAR
EXITSB   OACRET                                 RETURN TO MAIN
E2MSG1   DC    CL17' - OBTAIN ERROR -'
MSGL     EQU   *-E2MSG1                         E2MSG1 LENGTH
E2MSG2   DC    CL25' CODE=0008 DSCB NOT FOUND'
E2MSG3   DC    CL25' CODE=0012 DSCB I/O ERROR'
E2MSG4   DC    CL10' CODE=0000'
TRTBL2   DC    256X'00'                         HEX TO CHAR
         ORG   TRTBL2+C'0'                      TRANSLATE
         DC    CL16'0123456789ABCDEF'           TABLE
         ORG   ,
         OACDROP R10
         EJECT
*****************************************************
*****************************************************
**       UNALOC  -                                 **
**                                                 **
**       SVC99 UNALLOCATION IF OBTAIN              **
**       ERROR OCCURS                              **
**                                                 **
*****************************************************
*****************************************************
UNALOC   OACSUB
         LA    R3,$99RB                         R3 BASE FOR
         OACUSING S99RB,R3                      SVC99 REQUEST BLK
         MVI   S99VERB,S99VRBUN                 MOVE IN UNALLOCATE
         OI    $99IDSNP,X'80'                   SET DSN PTR LAST
         LA    R1,$99RBPTR                      RB PTR ADDR IN R1
         DYNALLOC
         MVI   S99VERB,S99VRBAL                 MOVE IN ALLOCATE
         NI    $99IDSNP,X'00'                   REMOVE 80 BIT
         OACRET                                 EXIT SUBROUTINE
         OACDROP R10
         OACDROP R3
         EJECT
         END
//*
//C   EXEC PGM=COMPARE,
//  PARM='GO,DUMPINFO'
//STEPLIB  DD DISP=SHR,DSN=SYS5.MSSLOAD
//SYSPRINT DD SYSOUT=*
//I1       DD DISP=(SHR,PASS),DSN=&&GOSET
//I2       DD DISP=SHR,DSN=SYS9.SYSCP
