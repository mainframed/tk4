***********************************************************************
*                                                                     *
* NAME - SIGNAL.                                                      *
*                                                                     *
* DATE OF LAST MODIFICATION - 3 OCT 79.                               *
*                                                                     *
* AUTHORS - M. ROBINSON.                                              *
*                                                                     *
* FUNCTION.                                                           *
*         TO ALLOW A PL/I PROGRAM TO SIGNAL A VARIABLE CONDITION.     *
*                                                                     *
* BASIC  FLOW.                                                        *
*         THE PARAMETER IS EXAMINED AND SAVED IN THE EXTERNAL         *
*         CHAR(8) VARIABLE 'ONCOND'.                                  *
*         IF AN ON-UNIT FOR CONDITION('PARM') IS ESTABLISHED, WHERE   *
*         'PARM' IS THE PASSED PARAMETER, THAT ON-UNIT IS CALLED.     *
*         IF NO SUCH ON-UNIT IS ESTABLISHED CONDITION(NOUNIT) IS      *
*         SIGNALLED.                                                  *
*                                                                     *
* ATTRIBUTES - RE-ENTRANT.                                            *
*                                                                     *
* ENTERED  FROM - PL/I CODE.                                          *
*                 DCL SIGNAL ENTRY(CHAR(7) VAR) EXT;                  *
*                             CALL SIGNAL('MYCODE');                  *
*            THIS IS EQUIVALENT TO :-                                 *
*                             SIGNAL CONDITION(MYCODE);               *
*                                                                     *
* INPUT.                                                              *
*         THE CONDITION TO BE SIGNALLED IS PASSED AS A CHAR(7) VAR    *
*         PARAMETER.                                                  *
*                                                                     *
* OUTPUT.                                                             *
*         THE RELEVANT ON-UNIT IS CALLED.                             *
*                                                                     *
* EXTERNAL  REFERENCES.                                               *
*         ONCOND - CHAR(8) EXT.                                       *
*         ALL ESTABLISHED CONDITIONS ARE SEARCHED.                    *
*                                                                     *
* MACROS  REFERENCED - NONE.                                          *
*                                                                     *
* TABLES  REFERENCED.                                                 *
*         DSA                                                         *
*         TCA                                                         *
*                                                                     *
* REGISTER  USAGE.                                                    *
*         R12 -> TCA                                                  *
*                                                                     *
* EXITS.                                                              *
*         CALL TO CONDTION ON-UNIT REQUESTED.                         *
*         SIGNAL CONDITION(NOUNIT) - REQUESTED CONDITION NOT FOUND    *
*                                                                     *
* MESSAGES - NONE.                                                    *
*                                                                     *
* ERROR  HANDLING.                                                    *
*         IF THE REQUESTED CONDITION IS NOT ESTABLISHED THE           *
*         CONDITION(NOUNIT) CONDITION IS SIGNALLED.                   *
*         THE ONCOND EXTERNAL VARIABLE MAY BE EXAMINED TO FIND WHICH  *
*         CONDITION WAS INTENDED.                                     *
*         PL/I ERROR HANDLING IS MAINTAINED.                          *
*                                                                     *
* ENVIRONMENT - TESTED MVS 3.8 - PL/I 3.0 PTF 69.                     *
*                                                                     *
* RESTRICTIONS - NONE.                                                *
*                                                                     *
***********************************************************************
         EJECT
SIGNAL01 CSECT
         ENTRY SIGNAL
         DC    C' SIGNAL'
         DC    AL1(6)
SIGNAL   EQU   *
         USING *,15
         STM   14,12,12(13)
         B     START
DSALEN   DC    F'112'
         DC    F'0'
START    EQU   *
         BALR  10,0
         USING *,10
*
         LR    4,1
         L     0,DSALEN
         DROP  15
         L     1,76(13)
         ALR   0,1
         CL    0,12(12)
         BNH   ENOUGH
         L     15,116(12)
         BALR  14,15
ENOUGH    EQU   *
         ST    0,76(1)
         ST    13,4(1)
         ST    1,8(13)
         MVC   72(4,1),72(13)
         LR    13,1
*
         MVI   0(13),X'80'
         MVI   1(13),X'00'
         MVI   86(13),X'91'
         MVI   87(13),X'C0'
*
         L     4,0(4)              R4 -> LOCATOR
         L     4,0(4)              R4 -> VARYING STRING
         IC    5,1(4)              R5 = LENGTH OF STRING
         LR    9,13                R9 -> OUR DSA
*
         LR    6,5                 COPY LENGTH OF PARM
         BCTR  6,0                 DECREMENT FOR EXECUTE
         L     7,=V(ONCOND)        'ONCOND' IS CHAR(8) EXT
         MVC   0(8,7),=CL8' '      CLEAR 'ONCOND'
         EX    6,MOVE              SAVE SUB-CONDITION IN 'ONCOND'
*
NEXTDSA  EQU   *
         L     9,4(9)              ADDR OF PREVIOUS DSA
         TM    0(9),X'02'          DUMMY DSA ?
         BO    DUMMYDSA            YES - NO ON UNIT
*
         OC    96(4,9),96(9)       ANY ONCB'S ?
         BZ    NEXTDSA             NO - TRY PREVIOUS DSA
*
         L     8,96(9)             FIND LAST ONCB
ONCBNEXT EQU   *
         CLI   8(8),X'0F'          IS IT 'CONDITION' CONDITION ?
         BNE   NEXTONCB            NO - GO TO PREVIOUS ONCB
*
         L     7,4(8)              ADDR OF QUALIFIER
         EX    5,COMPARE           IS IT OUR CONDITION ?
         BNE   NEXTONCB            NO - GO TO PREVIOUS ONCB
*
         L     15,12(8)            ADDR OF ON UNIT
         BALR  14,15               CALL ON UNIT
*
RETURN   EQU   *
         L     13,4(13)
         LM    14,11,12(13)
         BR    14
*
COMPARE  CLC   0(0,7),1(4)         COMPARE SUB-CONDITION
MOVE     MVC   0(0,7),2(4)         SAVE SUB-CONDITION IN 'ONCOND'
*
NEXTONCB EQU   *
         L     8,0(8)              ADDR OF PREVIOUS ONCB
         LTR   8,8                 IS THERE ANY ?
         BNZ   ONCBNEXT            YES - GO LOOK AT IT
         B     NEXTDSA             NO - GO LOOK AT PREVIOUS DSA
*
DUMMYDSA EQU   *
         LA    1,NOONUNIT          THIS CODE
         L     15,120(12)           SIGNALS THE
         BALR  14,15                 'NOUNIT' CONDITION
*
         B     RETURN              RETURN TO CALLER
*
NOONUNIT DS    0D
         DC    X'0F000000'
         DC    V(NOUNIT)
         LTORG
         EJECT
NOUNIT   CSECT
         DC    AL1(6)
         DC    CL7'NOUNIT'
ONCOND   CSECT
         DC    CL8' '
         END
