CACHE    MENTER 12,EQU,COM=CACHE,CP=CP
********************************************************************
* CACHE IS A TSO COMMAND DESIGNED TO BE RUN UNDER THE TSSO
* SUBSYSTEM. ITS PURPOSE IS TO PROVIDE DATA ABOUT THE
* 3880-11 AND 3880-13 CACHE SUBSYSTEMS.
*
* SYNTAX:
*
*                ON
*     CACHE XXX  OFF SUBSYS  LEGEND
*                LIST
*                STATUS
*
*          O       R
*
*
*     CACHE * CMD('CACHE COMMAND')
*
*
* WHERE XXX IS A VALID UCB ADDRESS OF A 3350 OR 3380 DEVICE.
* OR A VOLUME SERIAL NUMBER.
*
* THE SUBSYS KEYWORD WILL GENERATE AN IDCAMS COMMAND TO
* WORK FOR THE ENTIRE CONTROL UNIT. THE NOSUBSYS  KEYWORD (BLANK)
* WILL GENERATE IDCAMS STATEMENTS TO WORK FOR THE DEVICE SPECIFIED.
*
* THE LEGEND OPERAND WILL INFORM IDCAMS TO GENERATE A LEGEND KEYWORD
*
* THE CMD OPERAND IS PROVIDED AS A WAY OF ENTERING ANY VALID IDCAMS
* COMMAND THROUGH THIS PROGRAM AND HAVING IT EXECUTED.
********************************************************************
         UNDERTSO NO=NOTTSO
         EXTRACT  PSCBADDR,'S',FIELDS=PSB
         L     R2,PSCBADDR
         USING PSCB,R2
         TM    PSCBATR2,X'C0'    AUTHORIZATION
         BO    NOTTSO
         TLINE 'CACHE COMMAND ONLY AVAILABLE UNDER TSSO'
         B     ENDPROG1
NOTTSO   DS    0H
         SETPARSE PCL=CHPARSE
         LINK  EP=IKJPARS         GET THE STRING PARSED
         CH    R15,=H'4'          HOW DID WE DO
         BNL   ENDPROG           NOT SO GOOD, ERRORS
PARSEEND DS    0H
         L     R4,MYANS           POINT TO DSECT CONTAINING STRING
         USING IKJPARMD,R4
         LH    R5,CMD             WAS COMMAND SPECIFIED?
         CH    R5,=H'1'           CHECK VALUE
         BE    GETCHCMD           YUP, COMMAND SPECIFIED, BYPASS
*
         LH    R5,UNITID+4        GET ACTUAL LENGTH OF STRING
         CH    R5,=H'3'           UNIT SPECIFIED, USE IT.
         BNE   GETVOL             OTHERWISE, GET A VOLSER
*
         L     R6,UNITID          POINT TO STRING
         MVC   UCBADDR(3),0(R6)   AND MOVE IT TO SEARCH PLACE
         B     FINDVOL
GETVOL   DS    0H
         CH    R5,=H'6'           EXACTLY 3 BYTES
         BNE   ERROR9             MUST HAVE LET EVERYTHING DEFAULT.
         L     R6,UNITID
         MVC   STRVOL(6),0(R6)
         B     FINDVOL
********************************************************************
* WE NOW HAVE THE UCB ADDRESS DESIRED, WE MUST GO OUT AND FIND
* THE UNIT AND VOLSER. FIRST, LOCALTE THE UCB AND GET THE INFO
********************************************************************
FINDVOL  DS    0H
         L     R3,16              GET CVT
         USING CVTMAP,R3                 ADDRESS IT
         XC    WORKAREA(100),WORKAREA    CLEAR WORKAREA REQUIRED FOR
         LA    R1,WORKAREA               UCBSCAN AND STORE ADDRESS IN
         ST    R1,PARM1                  PARM LIST
         LA    R1,DEVCLASS               SEARCHING FOR ALL DEVICES
         ST    R1,PARM2                  STORE IN PARM LIST
         LA    R1,UCBPLACE               TELL UCBSCAN WHERE TO PUT
         ST    R1,PARM3                  THE RESULTS
         OI    PARM3,X'80'               INDICATE END OF LIST
SRCHIT   DS    0H                        START THE SEARCH
         LA    R1,PARMLIST               LOAD UP PARMLIST
         L     R15,CVTUCBSC              CALL UCBSCAB
         BALR  R14,R15                   AND HOPE
         LTR   R15,R15                   CHECK RC
         BNZ   ENDLIST                   IF ^=0 END OF LIST, NOT FOUND
         L     R5,UCBPLACE               GET RETURNED UCB
         CLC   UCBADDR(3),=CL3' '        UCBADDR BLANK ?
         BE    SRCHUCBA                  YUP, SEARCHING FOR A UCB ADDR
* HERE, WE HAVE A UCB ADDR, AND WE ARE LOOKING TO FILL IN THE VOLSER
         CLC   13(3,R5),UCBADDR     IS THIS THE CORRECT UCB?
         BE    FOUNDUCB            YUP
SRCHUCBA DS    0H
* HERE, WE HAVE A VOLSER, AND ARE LOOKING TO FILL IN THE UCB ADDRESS.
         CLC   28(6,R5),STRVOL      IS THIS THE CORRECT UCB ?
         BE    FOUNDUCB
         B     SRCHIT                    KEEP ON LOOKING
ENDLIST  DS    0H                        END OF LIST, UCB NOT FOUND
         B     ERROR0                    GO TELL THE USER.
FOUNDUCB DS    0H
********************************************************************
* TO SEARCH FOR ADDITION DEVICE TYPES IF AND WHEN IBM CHANGES
* CACHE, REFER TO DEBUGGING HANDBOOK FOR UCB DEVICE TYPES.
********************************************************************
         MVC   UCBADDR(3),13(R5)     MOVE IN THE UCB
         MVC   STRVOL(6),28(R5)      MOVE IN THE VOLUME
********************************************************************
* NOTE, ONE OF THE ABOVE VARIABLES, WE ALREADY HAD
********************************************************************
         CLI   19(5),X'0B'           TEST FOR 3350
         BNE   TRY3380
         MVC   STRUNIT(4),=CL4'3350'
         B     GETREQ
TRY3380  DS    0H
         CLI   19(5),X'0E'           TEST FOR 3380
         BNE   TRYFAIL               NO, BAD UNIT
         MVC   STRUNIT(4),=CL4'3380'
         B     GETREQ
TRYFAIL  DS    0H
********************************************************************
* HERE, THE UCB WAS FOUND, BUT WAS NOT A 3350 OR 3380 TYPE DEVICE.
* INFORM THE USER AND EXIT IMMEDIATELY !
********************************************************************
         B     ERROR3
GETREQ   DS    0H
* THE LAST CHECK WE MAKE ON THE UCB IS ONLINE/OFFLINE...
* R5 STILL POINTS TO THE UCB
         TM    3(R5),X'80'          DEVICE ONLINE
         BO    GETTYPE
         B     ERROR7
GETTYPE  DS    0H
********************************************************************
* NEXT, WE CHECK IF THE COMMAND WAS ON, OFF OR LIST. IF THE
* COMMAND WAS LIST, WE SUBSTITUE LISTDATA INTO THE STRCMD FIELD,
* OTHERWISE, WE SUBSTITUE SETCACHE, AND SET THE ON/OFF FIELD
* ACCORDINGLY.
* IF THE COMMAND WAS STATUS, WE SUBSTITUTE LISTDATA INTO THE
* COMMAND FIELD, PUT STATUS INTO THE ON/OFF FIELD, AND ISSUE THE
* COMMAND. NOTE THAT WE IGNORE OTHER LINES
********************************************************************
         LH    R5,TYPE             LOAD VALUE OF KEYWORD 'TYPE'
         CH    R5,=H'1'            WAS IT ON?
         BE    ONREQ
         CH    R5,=H'2'            WAS IT OFF?
         BE    OFFREQ
         CH    R5,=H'3'            WAS IT LIST?
         BE    LISTREQ             YUP
         CH    R5,=H'4'            WAS IT STATUS ?
         BE    STATREQ             YUP
         B     ERROR4              ON, OFF OR LIST WAS NOT SPECIFIED,
*                                  STATUS SHOULD BE THE DEFAULT.
*                                  AND ERROR4 SHOULD NEVER BE TAKEN
ONREQ    DS    0H
         MVC   STRCMD(8),=CL8'SETCACHE'
         MVC   ONOFF(3),=CL3'ON '
         B     GETSUBDV
OFFREQ   DS    0H
         MVC   STRCMD(8),=CL8'SETCACHE'
         MVC   ONOFF(3),=CL3'OFF'
         B     GETSUBDV
LISTREQ  DS    0H
         MVC   STRCMD(8),=CL8'LISTDATA'
         LH    R5,LEGENKEY
         CH    R5,=H'1'
         BNE   NOLEGEN
         MVC   ONOFF(8),=CL8'LEGEND'
NOLEGEN  DS    0H
         MVC   COUNTS(8),=CL8'COUNTS'
         B     GETSUBDV
STATREQ  DS    0H
***********************************************************************
* PROCESS STATUS REQUEST
* NOTE: ONLY VALID PARAMETER IS STATUS- THE COUNTS, DEVICE AND        *
* SUBSYSTEM PARMS ARE MUTUALLY EXCLUSIVE                              *
***********************************************************************
         MVC   STRCMD(8),=CL8'LISTDATA'
         LH    R5,LEGENKEY
         CH    R5,=H'1'
         BNE   NOLEGEN2
         MVC   ONOFF(8),=CL8'LEGEND'
NOLEGEN2 DS    0H
         MVC   COUNTS(8),=CL8'STATUS'
         B     ISSUECMD
********************************************************************
* THE ONLY REMAINING THING TO CHECK IS IF SUBSYS WAS SPECIFIED.
* IF YES, INSERT IT ON THE COMMAND LINE, IF NOT, OH WELL
********************************************************************
GETSUBDV DS    0H
         LH    R5,SUBSYSDV
         CH    R5,=H'1'            SUBSYS SPECIFIED?
         BNE   DEVICE
         MVC   STRSUBSY(8),=CL8'SUBSYS  '
         B     ISSUECMD            ISSUE THE COMMAND
DEVICE   DS    0H
         MVC   STRSUBSY(8),=CL8'DEVICE  '
         B     ISSUECMD
GETCHCMD DS    0H
* WE COME HERE IF THE CMD KEYWORD WAS SPECIFIED. SIMPLY PLACE THE
* STRING SPECIFIED IN THE OUTPUT BUFFER AND HAND THE COMMAND
* TO IDCAMS
         MVI   STRING,X'40'
         MVC   STRING+1(79),STRING
         L     R5,CACHECMD
         LH    R6,CACHECMD+4
         BCTR  R6,0
         EX    R6,MOVECMD
         B     AROUND1
MOVECMD  MVC   STRING+1(0),0(R5)      ** EXECUTED **
AROUND1  DS    0H
         B     ISSUECMD
NOSUBSYS DS    0H
ISSUECMD DS    0H
* TEST
*        TPUT  STRING,80
*        B     ENDPROG
********************************************************************
* NOW THAT WE HAVE INPUT THE STRING, WE WILL OPEN THE OUTPUT FILE
* AND PLACE THE STRING OUT THERE
********************************************************************
         TESTAUTH FCTN=1           APF AUTHORIZED ?
         LTR   R15,R15             CHECK IT OUT
         BNZ   NOAPF               NOPE.
         OPEN  (IDCAMSD1,OUTPUT)
         TM    IDCAMSD1+48,X'10'   SUCCESSFULLY OPENED?
         BNO   ERROR1              NO, SHUCKS
         PUT   IDCAMSD1,STRING     WRITE THE RECORD
         CLOSE (IDCAMSD1)          CLOSE THE FILE
* WE HAVE NOW CUT THE RECORD, SO WE WILL GIVE THE COMMAND TO IDCAMS
* AND SEE WHAT HAPPENS
         LINK  EP=IDCAMS,PARAM=(OPTIONS,DNAMES),VL=1
         LTR   R15,R15
         BNZ   ERROR2
* NOW, ALL PROCESSING IS COMPLETED, WE MUST TAKE THE RESULTS, AND
* SIMILAR TO TSSOWTO, READ THE RESULTS, AND PUTLINE THEM OUT.
IDCOPEN  DS    0H
         OPEN  (IDCOUT,(INPUT))
         TM    IDCOUT+48,X'10'       OPEN SUCCESSFULL?
         BNO   ERROR5                NO, GIVE IT UP
IDCLOOP  DS    0H
         GET   IDCOUT
         MVI   4(R1),X'40'
         LR    R2,R1
         PUTLINE PARM=PUTBLOK,OUTPUT=((R2),TERM,SINGLE,DATA),          X
               MF=(E,IOPLADS)
         B     IDCLOOP
EIDCOUT  DS    0H
         CLOSE (IDCOUT)
ENDPROG  DS    0H
ENDPROG1 DS    0H
         MLEAVE
ERROR0   DS    0H
         CLC   STRVOL(6),=CL6' '     BLANK SPECIFIED ?
         BNE   ERROR0V
ERROR0U  DS    0H
         MVC   LINE0+22(3),UCBADDR
         PUTLINE PARM=PUTBLOK,OUTPUT=(LINE0H,TERM,SINGLE,DATA),        X
               MF=(E,IOPLADS)
         B     ENDPROG
ERROR0V  DS    0H
         MVC   LINE0V+22(6),STRVOL
         PUTLINE PARM=PUTBLOK,OUTPUT=(LINE0VH,TERM,SINGLE,DATA),       X
               MF=(E,IOPLADS)
         B     ENDPROG
ERROR1   DS    0H
         PUTLINE PARM=PUTBLOK,OUTPUT=(LINE1H,TERM,SINGLE,DATA),        X
               MF=(E,IOPLADS)
         B     ENDPROG
NOAPF    DS    0H
         PUTLINE PARM=PUTBLOK,OUTPUT=(LINE8H,TERM,SINGLE,DATA),        X
               MF=(E,IOPLADS)
         B     ENDPROG
ERROR2   DS    0H
         ST    R15,IDCAMSRC
         FORMAT (IDCAMSRC,4,XXXXXXXX),TO=LINE2+29,WKA=WKA
         PUTLINE PARM=PUTBLOK,OUTPUT=(LINE2H,TERM,SINGLE,DATA),        X
               MF=(E,IOPLADS)
         B     IDCOPEN
ERROR3   DS    0H
********************************************************************
* ERROR3 IS REACHED IN THE CASE OF A VALID UCB ADDRESS THAT DOES
* NOT CORESSPOND TO A 3350 OR 3380 TYPE DEVICE.
********************************************************************
         MVC   LINE3+22(3),UCBADDR
         MVC   LINE3+27(6),STRVOL
         PUTLINE PARM=PUTBLOK,OUTPUT=(LINE3H,TERM,SINGLE,DATA),        X
               MF=(E,IOPLADS)
         B     ENDPROG
ERROR4   DS    0H
         B     ENDPROG
ERROR5   DS    0H
         PUTLINE PARM=PUTBLOK,OUTPUT=(LINE5H,TERM,SINGLE,DATA),        X
               MF=(E,IOPLADS)
         B     ENDPROG
ERROR7   DS    0H
         MVC   LINE7+22(3),UCBADDR
         PUTLINE PARM=PUTBLOK,OUTPUT=(LINE7H,TERM,SINGLE,DATA),        X
               MF=(E,IOPLADS)
         B     ENDPROG
ERROR9   DS    0H
         PUTLINE PARM=PUTBLOK,OUTPUT=(LINE9H,TERM,SINGLE,DATA),        X
               MF=(E,IOPLADS)
         B     ENDPROG
UNITCHK  DS    0H
********************************************************************
* THIS IS THE VALIDITY CHECK ROUTINE FOR THE UNIT ADDRESS
****************************** *************************************
         STM   R14,R12,12(R13)  SAVE REGISTERS
         LR    R6,R15           GET ADDRESSIBILITY
         USING UNITCHK,R6
         L     R4,0(R1)         GET ADDRESS OF PDE FOR UNITID
         L     R2,0(R4)         GET ADDRESS OF STRING, TO CHECK DEFAULT
         CLC   0(1,R2),=CL1'*'  NO UNIT ADDRESS ?
         BNE   CHECKVOL         CHECK IF VOLSER.
         B     UNITCK00
CHECKVOL DS    0H
         LH    R2,4(R4)         POINT TO LENGTH CHARACTER STRING
         CH    R2,=H'6'         LENGTH 6 ==> VOLSER
         BNE   CHECKUNT         NOPE, CHECK FOR UNIT.
         B     UNITCK00
CHECKUNT DS    0H
         CH    R2,=H'3'         EXACTLY THREE BYTES?
         BNE   UNITCK04         NO, EXIT AND REPROMPT
         L     R2,0(R4)         POINT TO ACTUAL STRING ENTERED
         LA    R5,3             SET LOOP FOR BCT
UNITCKLP DS    0H
         CLI   0(R2),C'A'
         BE    UNITCKLE         IF AN 'A', BRANCH TO LOOP END
         CLI   0(R2),C'B'
         BE    UNITCKLE         IF AN 'B', BRANCH TO LOOP END
         CLI   0(R2),C'C'
         BE    UNITCKLE         IF AN 'C', BRANCH TO LOOP END
         CLI   0(R2),C'D'
         BE    UNITCKLE         IF AN 'D', BRANCH TO LOOP END
         CLI   0(R2),C'E'
         BE    UNITCKLE         IF AN 'E', BRANCH TO LOOP END
         CLI   0(R2),C'F'
         BE    UNITCKLE         IF AN 'F', BRANCH TO LOOP END
         CLI   0(R2),C'0'       CHECK AGAINST 0
         BL    UNITCK04
         CLI   0(R2),C'9'       CHECK AGAIN 9
         BH    UNITCK04
UNITCKLE DS    0H
         LA    R2,1(R2)
         BCT   R5,UNITCKLP      LOOP BACK
* IF WE GET HERE, THE PARM IS OK
UNITCK00 DS    0H
         LM    R14,R12,12(R13)
         XR    R15,R15
         BR    R14
UNITCK04 DS    0H
* IF GET HERE, THE PARM IS SYNTACTLY INVALID, AND PARSE SHOULD
* REPROMPT.
         LM    R14,R12,12(R13)
         LA    R15,4
         BR    R14
         DROP  R6
IDCAMSD1 DCB   DDNAME=IDCAMSDD,RECFM=FB,LRECL=80,BLKSIZE=6400,         X
               MACRF=PM,DSORG=PS
IDCOUT   DCB   DDNAME=IDCOUT,RECFM=VBA,LRECL=125,BLKSIZE=629,          X
               MACRF=GL,DSORG=PS,EODAD=EIDCOUT
CACHEFLG DS    H
* BYTE 1
* X'80'  * ENTERED
* X'40'  VOLSER ENTERED
* X'20'  UNIT ENTERED
PSCBADDR DS    F
PARMLIST DS    0D
PARM1    DS    F
PARM2    DS    F
PARM3    DS    F
UCBADDR  DS    CL4
UCBVOL   DS    CL6
WKA      DS    2D
IDCAMSRC DS    F
INAREAH  DC    H'133',H'0'
INAREA   DC    CL133' '
OPADDR   DC    A(OPTIONS)
OPTIONS  DC    H'0'
DNAMADDR DC    A(DNAMES)
DNAMES   DC    H'48'
         DC    32X'00'
         DC    CL8'IDCAMSDD'      ALTERNATE NAME FOR SYSIN
         DC    CL8'IDCOUT  '      ALTERNATE NAME FOR SYSTSPRT
LINE0H   DC    H'80',H'0'
LINE0    DC    CL80'ERROR: UCB SPECIFIED (XXX) IS NOT GENNED'
LINE0VH  DC    H'80',H'0'
LINE0V   DC    CL80'ERROR: VOL SPECIFIED (XXXXXX) IS NOT FOUND'
LINE1H   DC    H'80',H'0'
LINE1    DC    CL80'ERROR: CACHE COMMAND NOT INITIALIZED'
LINE2H   DC    H'80',H'0'
LINE2    DC    CL80'ERROR: IDCAMS RETURN CODE IS XXXXXXXX'
LINE3H   DC    H'80',H'0'
LINE3    DC    CL80'ERROR: UCB SPECIFIED (XXX- XXXXXX) IS NOT ON A 3350X
                OR 3380 DEVICE'
LINE5H   DC    H'80',H'0'
LINE5    DC    CL80'ERROR: IDCOUT DD STATEMENT MISSING'
LINE7H   DC    H'80',H'0'
LINE7    DC    CL80'ERROR: UCB SPECIFIED (XXX) IS OFFLINE'
LINE8H   DC    H'80',H'0'
LINE8    DC    CL80'THE CACHE COMMAND WAS NOT INVOKED AUTHORIZED'
LINE9H   DC    H'80',H'0'
LINE9    DC    CL80'EITHER A UCB MUST BE SPECIFIED, OR THE CMD KEYWORD X
               BE USED'
STRING   DS    0D
********************************************************************
* THIS IS THE STRING THAT WE BUILD TO PASS THE COMMAND TO IDCAMS   *
********************************************************************
         DC    CL3' '
STRCMD   DC    CL8' '             8 BYTES FOR THE COMMAND
         DC    CL2' '             3 BYTES FOR BLANKS
         DC    C'VOLUME('         VOLUME LITERAL
STRVOL   DC    CL6' '             FILL IN THE VOLUME
         DC    C')'
         DC    CL2' '
         DC    C'UNIT('
STRUNIT  DC    CL4' '
         DC    C')'
         DC    CL4' '
ONOFF    DC    CL6' '            ON, OFF, OR LEGEND
         DC    CL2' '
COUNTS   DC    CL8' '            POSSIBLE COUNTS OPTION IF LISTDATA
         DC    CL2' '
STRSUBSY DC    CL8' '            SUBSYS OPTION
         DC    CL80' '
DEVCLASS DC    X'00'
WORKAREA DC    XL100'00'
UCBPLACE DS    F
********************************************************************
* THIS IS THE DESCRIPTION OF THE COMMAND SYNTAX, AS PARSE WANTS IT *
********************************************************************
CHPARSE  IKJPARM
UNITID   IKJIDENT 'UNIT ADDRESS',VALIDCK=UNITCHK,PROMPT='UNIT ADDRESS',X
               FIRST=ALPHANUM,OTHER=ALPHANUM,MAXLNTH=6,ASTERISK,       X
               HELP=('UNIT ADDRESS OR VOLUME SERIAL',                  X
               'UNIT ADDRESS OR VOLSER MUST BE A 3350 OR 3380 DEVICE')
TYPE     IKJKEYWD DEFAULT='STATUS'
         IKJNAME 'ON'
         IKJNAME 'OFF'
         IKJNAME 'LIST'
         IKJNAME 'STATUS'
SUBSYSDV IKJKEYWD DEFAULT='DEVICE'
         IKJNAME 'SUBSYS'
         IKJNAME 'DEVICE'
LEGENKEY IKJKEYWD DEFAULT='NOLEGEND'
         IKJNAME 'LEGEND'
         IKJNAME 'NOLEGEND'
CMD      IKJKEYWD
         IKJNAME 'CMD',SUBFLD=CMDSUB
CMDSUB   IKJSUBF
CACHECMD IKJIDENT 'CMD',PROMPT='CACHE COMMAND',FIRST=ALPHA,CHAR,       X
               OTHER=ALPHANUM,HELP='IDCAMS COMMAND FOR CACHE'
         IKJENDP
         IKJIOPL
         IEZJSCB
         IKJPSCB
         CVT   DSECT=YES
         END CHPARSE
 PUNCH ' SETCODE  AC(1)'
 PUNCH ' IDENTIFY CACHE(''V 2.1 &SYSDATE &SYSTIME'') '
 PUNCH ' ENTRY    CACHE'
 PUNCH ' NAME     CACHE(R)'
         END
