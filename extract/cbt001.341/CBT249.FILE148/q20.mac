SEARCH   QSTART 'QUEUE COMMAND - JQE AND JOE SEARCH AND FORMAT',       X
               REGS=NO
         PRINT OFF
         COPY  $HASPGEN
         PRINT ON
BUFDSECT EQU   0
BUFSTART EQU   0
         $JCT
         $JQE
         $PCE
         $PDDB
         $TAB
         $JOE
         $JOT
         TITLE 'QUEUE COMMAND - JQE AND JOE SEARCH AND FORMAT'
         USING QCKPT,R10      BASE REG FOR CKPT WORK AREA
         L     R10,QVCKPT     LOAD BASE REG
         USING JQEDSECT,R9    BASE REG FOR JQE DSECT
         USING JOEDSECT,R8    BASE REG FOR JOE DSECT
         USING WORK,R13       BASE REG FOR LOCAL WORK AREA
***********************************************************************
*                                                                     *
*   BRANCH TO PROPER ROUTINE                                          *
*                                                                     *
***********************************************************************
         MVI   JOTSWTCH,X'00' RESET SECOND HALF SWITCH
         LH    R1,QCODEH      LOAD FUNCTION CODE INTO R1
         CH    R1,=H'48'      IS THE FUNCTION SUPPORTED?
         BH    STOP           NO. RETURN.
         B     *+4(R1)        BRANCH TO ROUTINE
         B     ST             0 OFFSET
         B     DA             4
         B     DI             8
         B     AO   DO        12
         B     AI             16
         B     AO             20
         B     HI             24
         B     HO             28
         B     DT             32
         B     DS             36
         B     DQ             40
         B     DF             44
         EJECT
***********************************************************************
*                                                                     *
*   STATUS - FIND ALL JOBS THAT MATCH LEVEL                           *
*                                                                     *
***********************************************************************
ST       CLI   QPARM1,C' '    DID USER SPECIFY LEVEL?
         BNE   ST2            NO. USE QLOGON.
         MVC   QPARM1,QLOGON  MOVE USER PARM1 TO LEVEL
ST2      BAL   R2,PARMLEN     DETERMINE PARM LENGTH
*****
*****   SEARCH THE TSO QUEUE
*****
DJ2      LH    R6,QLNG1       LENGTH OF COMPARE FOR LEVEL
         L     R1,QCJQHEAD    LOAD ADDR OF JQT
         SR    R4,R4          CLEAR REGISTER
         IC    R4,$QUINDEX+QUINXTSU
         ALR   R4,R1          ADDR OF TSO QUEUE
         MVI   QCLASS,0       INDICATE THIS IS THE TSO QUEUE
         BAL   R2,SRCHJQE     SEARCH THE QUEUE
         B     DJ3            END OF QUEUE
         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?
         BNE   SKIPJQE        NO. SKIP THIS RECORD.
         B     PRTJQE         PRINT THE RECORD
*****
****  SEARCH THE SYSTEM QUEUE
*****
DJ3      L     R1,QCJQHEAD    LOAD ADDR OF JQT
         SR    R4,R4          CLEAR REGISTER
         IC    R4,$QUINDEX+QUINXSTC
         ALR   R4,R1          ADDR OF STC QUEUE
         MVI   QCLASS,4       INDICATE THIS IS THE STC QUEUE
         BAL   R2,SRCHJQE     SEARCH THE QUEUE
         B     DJ4            END OF QUEUE
         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?
         BNE   SKIPJQE        NO. SKIP THIS RECORD.
         B     PRTJQE         PRINT THE RECORD
*****
*****  SEARCH FOR HELD OUTPUT
*****
DJ4      L     R1,QCJQHEAD    LOAD ADDR OF JQT
         SR    R4,R4          CLEAR REGISTER
         IC    R4,$QUINDEX+1
         ALR   R4,R1          ADDR OF $OUTPUT QUEUE
         MVI   QCLASS,8       INDICATE THIS IS THE HELD OUT QUEUE
         BAL   R2,SRCHJQE     SEARCH THE QUEUE
         B     ST3            END OF QUEUE
         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?
         BNE   SKIPJQE        NO. SKIP THIS RECORD.
         CLI   JQEHLDCT,0     ARE THERE ANY HELD DATASETS? (PART 1)
         BNE   PRTJQE         YES. PRINT THE RECORD.
         TM    JQEHLDCT+1,X'F0' ARE THERE ANY HELD DATASETS? (PART 2)
         BNZ   PRTJQE         YES. PRINT THE RECORD.
         B     REJJQE         REJECT THE RECORD
*****
*****  SEARCH INPUT QUEUES
*****
ST3      MVI   QCLASS,192     START WITH CLASS A
ST4      BAL   R2,NEXTJQT     FIND NEXT QUEUE
         BAL   R2,SRCHJQE     SEARCH THE QUEUE
         B     ST4            END OF QUEUE
         CLI   JQEFLAGS,0     IS THE JOB EXECUTING OR HELD?
         BNE   ST7            YES. SPECIAL HANDLING.
         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?
         BNE   SKIPJQE        NO. SKIP THIS RECORD.
         B     PRTJQE         PRINT THE JQE
ST7      EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?
         BNE   REJJQE         NO. SKIP THIS RECORD.
         B     PRT2JQE        PRINT THE RECORD WITHOUT INCR COUNT
*****
*****  SEARCH OUTPUT QUEUES
*****
ST5      MVI   QCLASS,192     START WITH CLASS A
ST6      BAL   R2,NEXTJOT     DETERMINE NEXT QUEUE
         BAL   R2,SRCHJOE     SEARCH A JQE QUEUE
         B     ST6            END OF QUEUE
         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?
         BNE   SKIPJOE        NO. SKIP THIS RECORD.
         B     PRTJOE         PRINT THE RECORD
*****
*****  COMPARE USED TO CHECK LEVEL
*****
STCLC    CLC   QPARM1(1),JQEJNAME    IS THE JOBNAME EQUAL TO LEVEL?
         EJECT
***********************************************************************
*                                                                     *
*   DQ - PRINT SUMMARY OF ALL JOBS IN THE INPUT QUEUES                *
*                                                                     *
***********************************************************************
*  SEARCH ALL QUEUES
DQ       MVI   QCLASS,192           START WITH CLASS A
         MVC   QDHLINE,DQHEADER     MOVE IN THE HEADING
DQ1      BAL   R2,NEXTJQT           FIND NEXT QUEUE
         ZAP   QCOUNTE,=P'0'        ZERO COUNT FOR EXECUTING JOBS
         ZAP   QCOUNTA,=P'0'        ZERO COUNT FOR AWAITING JOBS
         ZAP   QCOUNTH,=P'0'        ZERO COUNT FOR HELD JOBS
         BAL   R2,SRCHJQE           SEARCH THE QUEUE
         B     DQ4                  END OF QUEUE
         TM    JQEFLAGS,QUEBUSY     IS THIS JOB EXECUTING
         BZ    DQ2                  NO, NEXT TEST
         AP    QCOUNTE,=P'1'        YES, BUMP COUNTER
         B     SKIPJQE              PROCESS NEXT JQE
DQ2      TM    JQEFLAGS,X'E0'       IS THIS A HELD JOB
         BZ    DQ3                  NO, NEXT TEST
         AP    QCOUNTH,=P'1'        YES, BUMP COUNTER
         B     SKIPJQE              PROCESS NEXT JQE
DQ3      CLI   JQEFLAGS,0           IS THIS JOB AWAITING EXECUTION
         BNE   SKIPJQE              NO, PROCESS NEXT JQE
         AP    QCOUNTA,=P'1'        YES, BUMP COUNTER
         B     SKIPJQE              PROCESS NEXT JQE
DQ4      CLC   QCOUNT,=PL3'0'       IS THIS QUEUE EMPTY
         BE    DQ1                  YES, TRY THE NEXT QUEUE
         MVC   QDMSG,DQLINE         MOVE IN DETAIL LINE
         MVC   FCOUNT,ED5           MOVE IN
         ED    FCOUNT,QCOUNTE            NUMBER OF JOBS
         MVC   QECOUNT,FCOUNT+3                    IN EXECUTION
         MVC   FCOUNT,ED5           MOVE IN
         ED    FCOUNT,QCOUNTA            NUMBER OF JOBS
         MVC   QACOUNT,FCOUNT+3                    AWAITING EXECUTION
         MVC   FCOUNT,ED5           MOVE IN
         ED    FCOUNT,QCOUNTH            NUMBER OF JOBS
         MVC   QHCOUNT,FCOUNT+3                    IN HELD STATUS
         MVC   FCOUNT,ED5           MOVE IN THE TOTAL NUMBER OF JOBS
         ED    FCOUNT,QCOUNT             IN THIS QUEUE
         MVC   CLASS,QCLASS         MOVE IN QUEUE CLASS
         BAL   R2,DISPLAY           GO DISPLAY THIS LINE
         B     DQ1                  PROCESS THE NEXT QUEUE
         EJECT
***********************************************************************
*                                                                     *
*   DF - PRINT SUMMARY OF ALL JOBS IN THE OUTPUT QUEUES               *
*                                                                     *
***********************************************************************
DF       MVI   QCLASS,192           START WITH CLASS A
         MVC   QDHLINE,DFHEADER     MOVE IN THE HEADING
DF1      BAL   R2,NEXTJOT           FIND NEXT QUEUE
         ZAP   QCOUNTE,=P'0'        ZERO COUNT FOR JOBS PRINTING
         BAL   R2,SRCHJOE           SEARCH THE QUEUE
         B     DF2                  END OF QUEUE
         MVC   QCLASS,JOECURCL      MOVE IN CORRECT CLASS
         TM    JOEFLAG,$JOEBUSY     JOB ACTIVE
         BZ    SKIPJOE              NO, PROCESS NEXT JOE
         AP    QCOUNTE,=P'1'        YES, BUMP COUNTER
         B     SKIPJOE              PROCESS NEXT JOE
DF2      CLC   QCOUNT,=PL3'0'       QUEUE EMPTY
         BE    DF1                  YES, TRY THE NEXT QUEUE
         MVC   QDMSG,DFLINE         MOVE IN DETAIL LINE
         MVC   FCOUNT,ED5           MOVE IN
         ED    FCOUNT,QCOUNTE            NUMBER OF JOBS
         MVC   QECOUNT,FCOUNT+3                    PRINTING
         MVC   FCOUNT,ED5           MOVE IN TOTAL NUMBER OF JOBS
         ED    FCOUNT,QCOUNT             IN THIS QUEUE
         MVC   CLASS,QCLASS         MOVE IN QUEUE CLASS
         MVC   WCLASS,QCLASS        SAVE QUEUE CLASS
         NI    WCLASS,X'3F'         PREPARE FOR INDEXING
         SR    R5,R5
         IC    R5,WCLASS            INSERT INDEX TO SCAT TABLE
         L     R3,CVTPTR            A(CVT)
         USING CVTDSECT,R3          CVT ADDRESSABILITY
         L     R3,CVTJESCT          A(JESCT)
         DROP  R3                   DROP CVT ADDRESSABILITY
         USING JESCT,R3             JESCT ADDRESSABILITY
         L     R3,JESSSCT           A(SSCVT)
         DROP  R3                   DROP JESCT ADDRESSABILITY
         USING SSCT,R3              SSCVT ADDRESSABILITY
         L     R3,SSCTSSVT          A(SSVT)
         DROP  R3                   DROP SSCVT ADDRESSABILITY
         USING SSVT,R3              SSVT ADDRESSABILITY
         LA    R3,$SVSCAT+192       A(SCAT)
         DROP  R3                   DROP SSVT ADDRESSABILITY
         AR    R3,R5                INDEX TO SCAT ENTRY
         TM    0(R3),X'40'          ?/OUTPUT CLASS FOR PUNCH
         BNO   DF3                  NO  ASSUME PRINT
         MVC   DFACTION,=C'PUNCHING' INDICATE PUNCH CLASS
DF3      BAL   R2,DISPLAY           GO DISPLAY THIS LINE
         B     DF1                  PROCESS NEXT QUEUE
         EJECT
***********************************************************************
*                                                                     *
*   DI - PRINT ALL JOBS IN INPUT QUEUES                               *
*                                                                     *
***********************************************************************
DI       CLI   QPARM1,C' '    DID USER SPECIFY CLASS?
         BNE   DI5            YES. LIMIT TO ONE QUEUE.
*****
*****  SEARCH ALL QUEUES
*****
         MVI   QCLASS,192     START WITH CLASS A
DI2      BAL   R2,NEXTJQT     DETERMINE NEXT QUEUE
         BAL   R2,SRCHJQE     SEARCH A JQE QUEUE
         B     DI2            END OF QUEUE
         B     PRTJQE         PRINT THE RECORD
*****
* SEARCH ONLY ONE QUEUE
*****
DI5      MVC   QCLASS,QPARM1  USER SPECIFIED CLASS
         BAL   R2,FINDJQT     FIND QUEUE
         BAL   R2,SRCHJQE     SEARCH THE QUEUE
         B     STOP           END OF QUEUE
         B     PRTJQE         PRINT THE RECORD
         EJECT
***********************************************************************
*                                                                     *
*   AI - PRINT JOBS IN INPUT QUEUES THAT ARE AVAILABLE FOR SELECTION  *
*                                                                     *
***********************************************************************
AI       CLI   QPARM1,C' '    DID USER SPECIFY CLASS?
         BNE   AI5            YES. LIMIT TO ONE QUEUE.
*****
*****  SEARCH ALL QUEUES
*****
         MVI   QCLASS,192     START WITH CLASS A
AI2      BAL   R2,NEXTJQT     DETERMINE NEXT QUEUE
         BAL   R2,SRCHJQE     SEARCH A JQE QUEUE
         B     AI2            END OF QUEUE
         CLI   JQEFLAGS,0     IS THE JOB BUSY OR HELD?
         BNE   REJJQE         YES. SKIP IT.
         B     PRTJQE         PRINT THE RECORD
*****
*****  SEARCH ONLY ONE QUEUE
*****
AI5      MVC   QCLASS,QPARM1  USER SPECIFIED CLASS
         BAL   R2,FINDJQT     FIND QUEUE
         BAL   R2,SRCHJQE     SEARCH THE QUEUE
         B     STOP           END OF QUEUE
         CLI   JQEFLAGS,0     IS THE JOB BUSY OR HELD?
         BNE   REJJQE         YES. SKIP IT.
         B     PRTJQE         PRINT THE RECORD
         EJECT
***********************************************************************
*                                                                     *
*   AO - PRINT AVAILABLE JOBS IN THE OUTPUT QUEUE                     *
*                                                                     *
***********************************************************************
AO       CLI   QPARM1,C' '    DID USER SPECIFY CLASS?
         BNE   AO5            YES. LIMIT TO ONE QUEUE.
*****
*****  SEARCH ALL QUEUES
*****
         MVI   QCLASS,192     START WITH CLASS A
AO2      BAL   R2,NEXTJOT     DETERMINE NEXT QUEUE
         BAL   R2,SRCHJOE     SEARCH A JOE QUEUE
         B     AO2B           END OF QUEUE
         BAL   R2,PRTJOE      PRINT THE RECORD
AO2B     LA    R4,4(,R4)      POINT TO SECOND HALF OF QUEUE
         BAL   R2,SRCHJOE     SEARCH A JOE QUEUE
         B     AO2            END OF QUEUE
         B     PRTJOE         PRINT THE RECORD
*****
*****  SEARCH ONLY ONE QUEUE
*****
AO5      MVC   QCLASS,QPARM1  USER SPECIFIED CLASS
         BAL   R2,FINDJOT     FIND QUEUE
         BAL   R2,SRCHJOE     SEARCH THE QUEUE
         B     AO5B           END OF QUEUE
         BAL   R2,PRTJOE      PRINT THE RECORD
AO5B     LA    R4,4(,R4)      POINT TO SECOND HALF OF QUEUE
         BAL   R2,SRCHJOE     SEARCH A JOE QUEUE
         B     STOP           END OF QUEUE
         B     PRTJOE         PRINT THE RECORD
         EJECT
***********************************************************************
*                                                                     *
*   HI - PRINT JOBS IN INPUT QUEUES THAT ARE HELD                     *
*                                                                     *
***********************************************************************
HI       CLI   QPARM1,C' '    DID USER SPECIFY CLASS?
         BNE   HI5            YES. LIMIT TO ONE QUEUE.
*****
*****  SEARCH ALL QUEUES
*****
         MVI   QCLASS,192     START WITH CLASS A
HI2      BAL   R2,NEXTJQT     DETERMINE NEXT QUEUE
         BAL   R2,SRCHJQE     SEARCH A JQE QUEUE
         B     HI2            END OF QUEUE
***** TEST IF FOR QUEHOLDA, QUEHOLD1, AND/OR QUEHOLD2
***** (ALL THE ABOVE ARE EQUATES IN $JQE MACRO)
         TM    JQEFLAGS,X'E0' IS THE JOB HELD?
         BZ    REJJQE         NO. SKIP IT.
         B     PRTJQE         PRINT THE RECORD
*****
*****  SEARCH ONLY ONE QUEUE
*****
HI5      MVC   QCLASS,QPARM1  USER SPECIFIED CLASS
         BAL   R2,FINDJQT     FIND QUEUE
         BAL   R2,SRCHJQE     SEARCH THE QUEUE
         B     STOP           END OF QUEUE
         TM    JQEFLAGS,X'E0' IS THE JOB HELD?
         BZ    REJJQE         NO. SKIP IT.
         B     PRTJQE         PRINT THE RECORD
         EJECT
***********************************************************************
*                                                                     *
*   HO - LIST ALL JOBS WITH HELD OUTPUT                               *
*                                                                     *
***********************************************************************
HO       L     R1,QCJQHEAD    LOAD ADDR OF JQT
         SR    R4,R4          CLEAR REGISTER
         IC    R4,$QUINDEX+1
         ALR   R4,R1          ADDR OF $HARDCPY QUEUE
         MVI   QCLASS,8       INDICATE THIS IS THE HELD OUT QUEUE
         BAL   R2,SRCHJQE     SEARCH THE QUEUE
         B     STOP           END OF QUEUE
         CLI   JQEHLDCT,0     ARE THERE ANY HELD DATASETS? (PART 1)
         BNE   PRTJQE         YES. PRINT THE RECORD.
         TM    JQEHLDCT+1,X'F0' ARE THERE ANY HELD DATASETS? (PART 2)
         BNZ   PRTJQE         YES. PRINT THE RECORD.
         B     REJJQE         REJECT THE RECORD
         EJECT
***********************************************************************
*                                                                     *
*   DA - FIND ALL EXECUTING JOBS                                      *
*                                                                     *
***********************************************************************
DA       MVI   QCLASS,192     START WITH CLASS A
DA2      BAL   R2,NEXTJQT     DETERMINE NEXT QUEUE
         BAL   R2,SRCHJQE     SEARCH THE QUEUE
         B     DA2            END OF QUEUE
         TM    JQEFLAGS,QUEBUSY IS THE JOB EXECUTING?
         BZ    REJJQE         NO. REJECT IT.
         B     PRTJQE         PRINT THE RECORD
*****                                                              FCI*
*   SEARCH SPECIAL INPUT QUEUE (PLAIN UNMARKED)                    FCI*
*****                                                              FCI*
DA3      L     R1,QCJQHEAD    GET JQE QUEUE HEAD POINTER           FCI*
         LA    R4,24(R1)      POINT TO 'UNMARKED' QUEUE HEAD       FCI*
         BAL   R2,SRCHJQE     GO SEARCH THIS QUEUE                 FCI*
         B     DA4            END OF QUEUE..SPLIT TO NEXT LEVEL    FCI*
         CLI   JQETYPE,$INPUT ON INPUT?                            FCI*
         BE    PRTJQE         YES..PRINT IT                        FCI*
         B     REJJQE         NO..NOT THE ONE                      FCI*
*****                                                              FCI*
*   SEARCH OUTPUT QUEUES                                           FCI*
*****                                                              FCI*
DA4      MVI   QCLASS,192     START WITH CLASS A                   FCI*
DA5      BAL   R2,NEXTJOT     DETERMINE NEXT QUEUE                 FCI*
         BAL   R2,SRCHJOE     SEARCH A JQE QUEUE                   FCI*
         B     DA5            END OF QUEUE                         FCI*
         TM    JOEFLAG,$JOEBUSY IS JOE ACTIVE ON A DEVICE?         FCI*
         BZ    REJJOE         NO. SKIP THIS RECORD                 FCI*
         B     PRTJOE         PRINT THE RECORD                     FCI*
         EJECT
***********************************************************************
*                                                                     *
*   DT - LIST ALL TSO USERS                                           *
*                                                                     *
***********************************************************************
DT       L     R1,QCJQHEAD    LOAD ADDR OF JQT
         MVC   QSUBNAME(2),=C'DT' MOVE CORRECT COMMAND TO SUBNAME
         SR    R4,R4          CLEAR REGISTER
         IC    R4,$QUINDEX+QUINXTSU
         ALR   R4,R1          ADDR OF TSO QUEUE
         MVI   QCLASS,0       INDICATE THIS IS THE TSO QUEUE
         BAL   R2,SRCHJQE     SEARCH THE QUEUE
         B     STOP           END OF QUEUE
         B     PRTJQE         PRINT THE RECORD
         EJECT
***********************************************************************
*                                                                     *
*   DS - LIST ALL SYSTEM STARTED TASKS                                *
*                                                                     *
***********************************************************************
DS       L     R1,QCJQHEAD    LOAD ADDR OF JQT
         MVC   QSUBNAME(2),=C'DS' MOVE CORRECT COMMAND TO SUBNAME
         SR    R4,R4          CLEAR REGISTER
         IC    R4,$QUINDEX+QUINXSTC
         ALR   R4,R1          ADDR OF STC QUEUE
         MVI   QCLASS,4       INDICATE THIS IS THE STC QUEUE
         BAL   R2,SRCHJQE     SEARCH THE QUEUE
         B     STOP           END OF QUEUE
         B     PRTJQE         PRINT THE RECORD
         EJECT
***********************************************************************
*                                                                     *
*   DETERMINE LENGTH OF LEVEL                                         *
*                                                                     *
***********************************************************************
PARMLEN  LA    R3,7           MAXIMUM LENGTH OF 8
         LA    R4,QPARM1+7    END OF FIELD
PARMLEN2 CLI   0(R4),C' '     IS THIS BYTE BLANK?
         BNE   PARMLEN3       NO. THIS IS THE LENGTH
         BCTR  R4,0           TRY PREVIOUS BYTE
         BCT   R3,PARMLEN2    LOOP
PARMLEN3 STH   R3,QLNG1       STORE THE LENGTH OF LEVEL
         BR    R2             RETURN TO CALLER
         SPACE 4
***********************************************************************
*                                                                     *
*   SEARCH A JQE QUEUE                                                *
*                                                                     *
***********************************************************************
SRCHJQE  ZAP   QCOUNT,=P'0'   ZERO THE QUEUE COUNT
         L     R9,0(R4)       LOAD FIRST JQE OFFSET
NEXTJQE  N     R9,=X'00FFFFFF' KILL EXTRANEOUS BITS
         BZR   R2             END OF QUEUE. RETURN.
         A     R9,QCJQTA      ADD BASE TO OFFSET
         B     4(R2)          DETERMINE ELIGIBILITY
PRTJQE   AP    QCOUNT,=P'1'   INCREMENT COUNT
PRT2JQE  SR    R1,R1          INDICATE THIS IS A JQE
         L     R15,=V(FORMAT) ADDR OF PRINT MODULE
         BALR  R14,R15        PRINT THE JQE IN R9
REJJQE   L     R9,JQENEXT     LOAD OFFSET TO NEXT JQE
         B     NEXTJQE        GET THE NEXT JQE
SKIPJQE  AP    QCOUNT,=P'1'   INCREMENT COUNT
         B     REJJQE         CONTINUE
         SPACE 4
***********************************************************************
*                                                                     *
*   SEARCH A JOE QUEUE                                                *
*                                                                     *
***********************************************************************
SRCHJOE  ZAP   QCOUNT,=P'0'   ZERO THE QUEUE COUNT
FIRSTJOE ICM   R8,7,1(R4)     LOAD FIRST JOE OFFSET
         BZR   R2             YES. RETURN TO CALLER.
         XC    PRIORITY(12),PRIORITY ZERO OUT HIGHEST POINTERS
NEXTJOE  A     R8,QCJOTA      ADD BASE TO OFFSET
         ICM   R9,7,JOEJQE+1  OFFSET TO JQE
         BZ    TRYJOE         THIS JOE ALREADY USED. TRY NEXT ONE.
         A     R9,QCJQTA      ADD BASE TO OFFSET
         LA    R7,255         PRESET MAXIMUM PRIORITY
         TM    JQEPRIO,240    IS THIS JOB PRIORITY 15?
         BO    HIGHJOE        YES. PASS TO CALLER.
         LA    R1,16          PRESET PRIORITY ONE
         CLI   JQETYPE,$HARDCPY IS THE JOB EXECUTING?
         BNE   EXECJOE        YES. USE PRIORITY ONE.
         IC    R1,JQEPRIO     INSERT JQE PRIORITY
EXECJOE  IC    R7,JOEPRIO     INSERT JOE PRIORITY
         AR    R7,R1          ADD PRIORITIES
         SRL   R7,1           BECAUSE HASP DOES IT, THAT'S WHY
HIGHJOE  C     R7,PRIORITY    IS THIS LESS THAN PREVIOUS HIGH?
         BL    TRYJOE         YES. TRY NEXT ONE.
         STM   R7,R9,PRIORITY NO. REPLACE PREVIOUS HIGH.
TRYJOE   ICM   R8,7,JOENEXT+1 ADDR OF NEXT JOE
         BNZ   NEXTJOE        TRY NEXT JOE
TESTJOE  LM    R7,R9,PRIORITY LOAD ADDR OF HIGHEST JOE
         LTR   R8,R8          WAS THE QUEUE EMPTY?
         BZR   R2             YES. END OF QUEUE.
         XC    JOEJQEB,JOEJQEB   INDICATE THIS JOE USED
         B     4(R2)          DETERMINE ELIGIBILITY
PRTJOE   LA    R1,4           INDICATE THIS IS A JOE
         AP    QCOUNT,=P'1'   INCREMENT COUNT
         L     R15,=V(FORMAT) ADDR OF PRINT MODULE
         BALR  R14,R15        PRINT THE JOE IN R9
REJJOE   B     FIRSTJOE       GET THE NEXT JOE
SKIPJOE  AP    QCOUNT,=P'1'   INCREMENT COUNT
         B     FIRSTJOE       CONTINUE
         EJECT
***********************************************************************
*                                                                     *
*   DETERMINE INPUT QUEUE                                             *
*                                                                     *
***********************************************************************
FINDJQT  TR    QCLASS,CLASSTBL DETERMINE OFFSET
         LH    R4,QCLASSH     LOAD TABLE OFFSET
         BCTR  R4,0           SUBTRACT 1
         STH   R4,QCLASSH     RESTORE VALUE
         B     NEXTJQT2       CONTINUE
NEXTJQT  TR    QCLASS,CLASSTBL DETERMINE OFFSET FROM FIRST CLASS
         LH    R4,QCLASSH     LOAD TABLE OFFSET
         CH    R4,=H'36'      IS THIS THE LAST QUEUE?
         BNL   NEXTJQT9       YES. GO HOME.
NEXTJQT2 TR    QCLASS,NAMETBL MOVE CLASS NAME TO QCLASS
         SLL   R4,2           MULTIPLY BY 4
         L     R1,QCJQHEAD    LOAD ADDR OF JQT
****   THE FOLLOWING HARD-CODED CONSTANT (48) IS THE OFFSET OF
****     THE CLASS A QUEUE FROM THE BEGINNING OF THE QUEUE
****     HEADERS.  (LABEL $QHEADS).  ITS VALUE CAN BE FOUND FROM
****     $QINDEX IN THE HCT.
         LA    R4,48(R1,R4)   NEXT QUEUE
         BR    R2             RETURN TO CALLER
NEXTJQT9 CLI   QCODE,0        IS THIS A STATUS REQUEST?
         BE    ST5            YES. GO TO STATUS.
         CLI   QCODE,4        IS THIS A DA REQUEST?                FCI*
         BNE   STOP           NO. GO HOME.
         B     DA3            YES. GO TO DA JOE PROCESSING         FCI*
***********************************************************************
*                                                                     *
*   DETERMINE OUTPUT QUEUE                                            *
*                                                                     *
***********************************************************************
FINDJOT  TR    QCLASS,CLASSTBL DETERMINE OFFSET
         LH    R4,QCLASSH     LOAD TABLE OFFSET
         BCTR  R4,0           SUBTRACT 1
         STH   R4,QCLASSH     RESTORE VALUE
         SLL   R4,1           MULTIPLY BY 2
         B     NEXTJOT2       CONTINUE
NEXTJOT  TR    QCLASS,CLASSTBL DETERMINE OFFSET FROM FIRST CLASS
         LH    R4,QCLASSH     LOAD TABLE OFFSET
         CH    R4,=H'36'      IS THIS THE LAST QUEUE?
         BNL   STOPJOT        YES. GO HOME.
NEXTJOT2 TR    QCLASS,NAMETBL MOVE CLASS NAME TO QCLASS
         CLI   JOTSWTCH,X'FF' ARE WE WORKING ON SECOND HALF
         BNE   *+8            NO..
         AH    R4,=H'35'      POINT TO SECOND HALF
         MH    R4,=Y(JOTHEADL)   MULTIPLY BY 4
         USING JOTDSECT,R1    BASE REG FOR JOT
         L     R1,QCJOTA      LOAD ADDR OF JOT
         LA    R4,JOTCLSQ(R4) NEXT QUEUE
         DROP  R1
         BR    R2             RETURN TO CALLER
STOPJOT  DS    0H             STOP JOT SEARCH??
         CLI   JOTSWTCH,X'FF' HAS SECOND HALF BEEN SEARCHED?
         BE    STOP           YES STOP
         MVI   JOTSWTCH,X'FF' SHOW SECOND HALF SEARCHED
         MVI   QCLASS,192     START OVER WITH CLASS A
         B     NEXTJOT        BEGIN AGAIN
         SPACE 4
***********************************************************************
*                                                                     *
*   CALL DISPLAY ROUTINE                                              *
*                                                                     *
***********************************************************************
DISPLAY  LA    R1,QDMSG             SAVE ADDRESS
         ST    R1,QDMSGA                 OF THE MESSAGE
         MVC   QDMLNG,QDLNELEN      SET THE LENGTH                 MOD5
         L     R15,=V(DISPLAY)      BRANCH TO
         BALR  R14,R15                     DISPLAY
         BR    R2                   RETURN TO CALLER
         SPACE 2
***********************************************************************
*                                                                     *
*   GO HOME                                                           *
*                                                                     *
***********************************************************************
STOP     CLC   =C'DT',QSUBNAME      HAS SUBNAME BEEN CHANGED
         BNE   *+10                 NO  DONT CHANGE
         MVC   QSUBNAME(2),=C'XT'   CHANGE TO CORRECT COMMAND
         CLC   =C'DS',QSUBNAME      HAS SUBNAME BEEN CHANGED
         BNE   *+10                 NO  DONT CHANGE
         MVC   QSUBNAME(2),=C'XS'   CHANGE TO CORRECT COMMAND
         QSTOP
         EJECT
         LTORG
***********************************************************************
*                                                                     *
*   TABLES FOR CLASS DETERMINATION                                    *
*                                                                     *
***********************************************************************
NAMETBL  DC    C'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'
CLASSTBL DC    192X'01'
         DC    X'00010203040506070809',7X'00'
         DC    X'0A0B0C0D0E0F101112',8X'00'
         DC    X'131415161718191A',6X'00'
         DC    X'1B1C1D1E1F2021222324',6X'00'
***********************************************************************
*                                                                     *
*   MISCELLANEOUS GARBAGE                                             *
*                                                                     *
***********************************************************************
ED5      DC    X'402020202120'
DQHEADER DC    CL132'*** INPUT QUEUES ***'
DQLINE   DC    CL132' INPUT                        EXECUTING      WAITIX
               NG      HELD'
DFHEADER DC    CL132'*** OUTPUT QUEUES ***'
DFLINE   DC    CL132' OUTPUT                       PRINTING'
         $QINDEX
         $CAT
         $CVT
         $JESCT
         $SSCT
         $SVT
         $HCT
WORK     DSECT
         DS    CL80
PRIORITY DS    3F
WCLASS   DS    C
JOTSWTCH DC    X'00'
         QCOMMON
         ORG   QDMSG
         DS    CL9
CLASS    DS    CL1
         DS    CL2
QTCOUNT  DS    CL6
         DS    CL7
QECOUNT  DS    CL3
         DS    CL2
DFACTION DS    CL8
         DS    CL2
QACOUNT  DS    CL3
         DS    CL10
QHCOUNT  DS    CL3
         ORG   QTCOUNT
FCOUNT   DS    CL6
         END
