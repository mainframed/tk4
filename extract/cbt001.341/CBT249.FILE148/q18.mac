REPOS    QSTART 'QUEUE COMMAND - DATASET REPOSITIONING ROUTINES'
         USING QCKPT,R10          BASE REG FOR CKPT WORK AREA
         L     R10,QVCKPT         LOAD BASE REG
         USING QDISPLAY,R9        BASE REG FOR DISPLAY WORK AREA
         L     R9,QVDSPL          LOAD BASE REG
         USING WORK,R13           BASE REG FOR LOCAL WORK AREA
***********************************************************************
*                                                                     *
*   BRANCH TO PROPER ROUTINE                                          *
*                                                                     *
***********************************************************************
         CLC   QCODEH,=H'36'      MODEL 2/5 COMMAND?              MOD5
         BE    MODEL              OK IF NO DATASET                MOD5
         SPACE 1
CHKID    CLC   QPDSID,=H'0'       IS THERE A VALID DATASET?
         BNE   GO                 YES. GO AHEAD.
         QTILT '*** YOU ARE NOT PROCESSING A VALID DATASET ***'
GO       LH    R1,QCODEH          LOAD FUNCTION CODE
         CH    R1,=H'32'          IS THE FUNCTION SUPPORTED?
         BH    STOP               NO. RETURN.
         B     *+4(R1)            BRANCH TO ROUTINE
         B     TILT               0 OFFSET
         B     FIND               4
         B     FINDTIME           8
         B     COLUMN             12
         B     AT                 16
         B     PLUS               20
         B     MINUS              24
         B     TOP                28
         B     BOTTOM             32
TILT     QTILT '*** PARAMETER IS INVALID OR OMITTED ***'
         EJECT
***********************************************************************
*                                                                     *
*   REPOSITION VERTICALLY                                             *
*                                                                     *
***********************************************************************
* SKIP FORWARD
PLUS     CLI   QPARM1,C' '        DEFAULT NEEDED
         BNE   PLUS010            NO
         MVI   QLNG1+1,X'01'      YES, SET LENGTH OF PARM
         MVI   QPARM1,X'F1'       SET DEFAULT TO 1
PLUS010  BAL   R4,NUMERIC         VALIDATE PARAMETER
         CLI   QPARM1,C'M'        WAS MAX REQUESTED?
         BE    BOTTOM             SIMULATE BOTTOM COMMAND
         AP    QPREC,COUNT        ADD COUNT TO CURRENT RECORD
         B     RESUME             CALL LISTDS
* SKIP BACKWARD
MINUS    CLI   QPARM1,C' '        DEFAULT NEEDED
         BNE   MINUS010           NO
         MVI   QLNG1+1,X'01'      YES, SET LENGTH OF PARM
         MVI   QPARM1,X'F1'       SET DEFAULT TO 1
MINUS010 BAL   R4,NUMERIC         VALIDATE PARAMETER
         CLI   QPARM1,C'M'        WAS MAX REQUESTED?
         BE    TOP                SIMULATE TOP COMMAND
         SP    QPREC,COUNT        SUBTRACT COUNT FROM CURRENT RECORD
         BP    RESUME             CALL LISTDS IF RESULT POSITIVE.
* TOP OF DATASET
TOP      ZAP   QPREC,=P'1'        SET CURRENT RECORD TO TOP OF DS
* RESUME AT CURRENT RECORD
RESUME   L     R15,=V(LISTDS)     ADDR OF LISTDS MODULE
         BALR  R14,R15            GO TO IT
STOP     QSTOP
* BOTTOM OF DATASET
BOTTOM   ZAP   QPREC,=P'9999999'  SET CURRENT RECORD TO LARGEST
         MVC   QCODEH,=H'32'      SHOW BOTTOM ENTERED
         B     RESUME             CALL LISTDS
* POSITION TO THIS RECORD
AT       BAL   R4,NUMERIC         VALIDATE PARAMETER
         ZAP   QPREC,COUNT        INDICATE REPOSITION NO
         B     RESUME             CALL LISTDS
         EJECT
* CHECK THE PARMETER FOR VALID NUMERIC AND PACK IT
NUMERIC  LH    R2,QLNG1           LENGTH OF PARM
         SH    R2,=H'1'           IS THE COUNT FIELD ZERO?
         BM    RESUME             YES. RESUME FROM CURRENT POSITION
         CLI   QPARM1,C'M'        WAS MAX  REQUESTED
         BER   R4                 YES  RETURN NOW
***      CLI   QPARM1,C'P'        WAS PAGE REQUESTED
***      BE    PAGE               YES  GO PROCESS
***      CLI   QPARM1,C'H'        WAS HALF PAGE REQUESTED
***      BE    HALF               YES  GO PROCESS
         MVC   QFZONES,QFZONE     INITIALIZE NUMERIC CHECK
         EX    R2,MVZ             MOVE THE ZONES FOR VALIDITY CHECK
         CLC   QFZONES,QFZONE     IS THE FIELD NUMERIC?
         BNE   TILT               NO. TILT.
         EX    R2,PACK            PACK THE FIELD INTO COUNT
         CLI   QSUBNAME,C'P'      ?/PAGE FORWARD/BACKWARD SPECIFIED
         BE    FOUNDP             YES. GO PROCESS
         CLI   QSUBNAME,C'H'      ?/HALF PAGE FORWARD/BACKWARD SPEED
         BNER  R4                 NO. EXIT
         MP    COUNT,QDLINES      YES. MULTIPLY BY PAGE SIZE      MOD5
         DP    COUNT,=P'2'        AND CONVERT TO HALF PAGES       MOD5
         ZAP   COUNT,COUNT(7)     RE-ALIGN THE STUPID FIELD       MOD5
         BR    R4                 AND RETURN TO CALLER
FOUNDP   MP    COUNT,QDLINES      YES. MULTIPLY BY PAGE SIZE      MOD5
         BR    R4                 RETURN
* EXECUTED INSTRUCTIONS
MVZ      MVZ   QFZONES(1),QPARM1   CHECK FOR NUMERIC
PACK     PACK  COUNT,QPARM1(1)     PACK COUNT
         EJECT
***********************************************************************
*                                                                     *
*   REPOSITION HORIZONTALLY                                           *
*                                                                     *
***********************************************************************
COLUMN   CLI   QPARM1,C' '        ?/DEFAULT NEEDED
         BE    COL010             YES, GO SET IT
         CLI   QPARM1,C'0'        ?/SET COLUMN TO 1
         BNE   COL020             NO, TEST IF NUMERIC
COL010   MVI   QLNG1+1,X'01'      SET LENGTH OF PARM
         MVI   QPARM1,X'F1'       SET COLUMN TO 1
COL020   BAL   R4,NUMERIC         VALIDATE PARAMETER
         CP    COUNT,=P'255'      IS THE COUNT FIELD TOO BIG?
         BH    TILT               YES. TILT.
         SP    COUNT,=P'1'        COLUMN RELATIVE TO ZERO
         BM    TILT               INVALID. TILT.
         CVB   R5,COUNT           CONVERT TO BINARY
         STH   R5,QPOFFSET        STORE IN QPOFFSET
         B     RESUME             CALL LISTDS
         EJECT
***********************************************************************
*                                                                     *
*   LOCATE SPECIFIC RECORD                                            *
*                                                                     *
***********************************************************************
FIND     CLI   QSUBNAME+1,C'A'    IS THE REQUEST FOR FIND ALL?
         BE    FIND2              YES. DO NOT UPDATE RECORD POINTED
         AP    QPREC,=P'1'        START SEARCH AT NEXT RECORD
FIND2    CLI   QPARM1,C' '        IS THERE A PARAMETER?
         BE    RESUME             NO. CONTINUE WITH PREVIOUS FIND.
         LA    R2,QDREPLY+62      END OF USER REPLY
         LA    R3,61              MAXIMUM LENGTH OF PARM
         SH    R3,QOFF1           OFFSET TO FIRST PARM
LOOP     CLC   0(1,R2),QPARM1     IS THIS THE DELIMITER?
         BE    FOUND              YES. CONTINUE.
         BCTR  R2,0               TRY THE PREVIOUS BYTE
         BCT   R3,LOOP            IS THE LENGTH FIELD EXHAUSTED?
         B     TILT               YES. TILT.
FOUND    BCTR  R3,0               DECREMENT LENGTH BY 1
         LA    R2,QDREPLY+1       ADDR OF REPLY + 1
         AH    R2,QOFF1           ADDR OF FIRST BYTE OF PARM
         EX    R3,MVC             MOVE PARM TO QPFIND
         STH   R3,QPLNG           SAVE LENGTH-1 OF PARM
***********************************************************************
*                                                                     *
*    COLUMN RANGE FOR FIND                                            *
*                                                                     *
***********************************************************************
COLTEST  XC    QOFFS,QOFFS        RESET COLUMN OFFSETS
         XC    QOFFE,QOFFE
         LA    R2,3(R2,R3)        PREPARE FOR NEXT FIELD
         LA    R3,QDREPLY+55      END OF USER REPLY
LOOP1    CLC   =C'COL',0(R2)      ?/COLUMN PARAMETER
         BE    FOUNDA             YES. GO PROCESS
         LA    R2,1(R2)           NO. LOOK AT NEXT FIELD
         CR    R2,R3              ?/END OF REPLY
         BH    RESUME             YES. EXIT
         B     LOOP1              NO. CHECK AGAIN
FOUNDA   LA    R2,3(R2)           NEXT FIELD
         CLI   0(R2),C'('         ?/LP PRESENT
         BNE   PRESUME            NO. EXIT
         LA    R2,1(R2)           NEXT FIELD
         LA    R3,QDREPLY+62      END OF REPLY
         LR    R5,R2              SAVE START OF THIS FIELD
         MVI   QDELIMIT,C','      LOOKING FOR DELIMETER = ','
         BAL   R7,CHKDEL          GO CHECK THE DELIMETER
         CVB   R6,COUNT           CONVERT START COLUMN OFFSET TO BINARY
         LTR   R6,R6              ?/USER SPECIFY OFFSET OF ZERO
         BZ    PRESUME            YES. GO INDICATE AN ERROR
         BCTR  R6,0               DECREMENT OFFSET BY 1
         STH   R6,QOFFS           SAVE START COLUMN
         LA    R2,1(R2)           NEXT FIELD
         LR    R5,R2              SAVE START OF THIS FIELD
         MVI   QDELIMIT,C')'      LOOKING FOR DELIMETER = ')'
         BAL   R7,CHKDEL          GO CHECK THE DELIMETER
         CVB   R6,COUNT           CONVERT END COLUMN OFFSET TO BINARY
         LTR   R6,R6              ?/USER SPECIFY OFFSET OF ZERO
         BZ    PRESUME            YES. GO INDICATE AN ERROR
         BCTR  R6,0               DECREMENT OFFSET BY 1
         STH   R6,QOFFE           SAVE END COLUMN
         CLC   QOFFS,QOFFE        ?/ERROR IN COLUMN SPECIFICATION
         BNL   PRESUME            YES. DISREGARD COLUMN SEARCH
         B     RESUME             NO. CONTINUE WITH NORMAL PROCESS
CHKDEL   CLC   QDELIMIT,0(R2)     ?/DELIMITER FOUND
         BE    CHK010             YES. GO PROCESS
         LA    R2,1(R2)           NO. LOOK AT NEXT FIELD
         CR    R2,R3              ?/END OF REPLY
         BH    PRESUME            YES. EXIT
         B     CHKDEL             NO. CHECK AGAIN
CHK010   LR    R4,R2              SAVE DELIMITER ADDRESS
         SR    R4,R5              LENGTH OF SUB-PARM
         CH    R4,=H'3'           ?/LENGTH TO LONG
         BNL   PRESUME            YES. DISREGARD COLUMN SEARCH
         BCTR  R4,0               LENGTH FOR EXEC INTRUCTION
         MVC   QFZONES,QFZONE      NUMERIC TEST
         EX    R4,MVZ1
         CLC   QFZONES,QFZONE     ?/FIELD NUMERIC
         BNE   TILT               NO. EXIT WITH ERROR MESSAGE
         EX    R4,PACK1
         BR    R7
PRESUME  XC    QOFFS,QOFFS        DISREGARD FIND
         XC    QOFFE,QOFFE        BY COLUMN RANGE
         QTILT ' *** ERROR IN COLUMN SPECIFICATION ***'
MVZ1     MVZ   QFZONES(1),0(R5)
PACK1    PACK  COUNT,0(1,R5)
***********************************************************************
*                                                                     *
*   REPOSITION IN SYSLOG DATASET BY TIME OF DAY                       *
*                                                                     *
***********************************************************************
FINDTIME CLI   QPARM1,C' '          IS THE PARM OMITTED?
         BE    TILT                 YES. TILT.
         B     RESUME               CALL LISTDS
         EJECT
MODEL    DS    0H                                                 MOD5
         LH    R2,QLNG1             LENGTH OF PARM
         SH    R2,=H'1'             IS THE COUNT FIELD ZERO?
         BM    MTILT                YES. SHOW ERROR
         BAL   R4,NUMERIC           VALIDATE PARAMETER            MOD5
         CP    COUNT,=P'2'          MODEL 2?                      MOD5
         BE    MODEL2               YES, BRANCH                   MOD5
         CP    COUNT,=P'5'          MODEL 5?                      MOD5
         BE    MODEL5               YES, BRANCH                   MOD5
MTILT    QTILT '**** UNSUPPORTED MODEL TYPE ****'                 MOD5
         SPACE 1                                                  MOD5
MODELN   CLC   QPDSID,=H'0'        IS THERE A DATASET             MOD5
         BNE   RESUME              YES, CALL LISTDS               MOD5
         MVC   QDHLINE,=CL80' '    BLANK HEADING LINE             MOD5
         B     STOP                AND RETURN                     MOD5
         SPACE 1                                                  MOD5
MODEL2   MVC   QDLNELEN,=H'80'       LINE LENGTH                  MOD5
         MVC   QDLINES,=PL2'21'      LINES PER SCREEN AREA        MOD5
         MVC   QDSCRLEN,=AL2(21*80)  SCREEN LENGTH                MOD5
         MVC   QDSCRPLN,=AL2(21*80+QDLINE1-QDSCREEN)   TPUT LEN   MOD5
         MVI   QDSCRO1,X'F5'         ERASE/WRITE                  MOD5
         MVC   QDSCRO2,=X'C150'      (2,1)                        MOD5
         MVC   QDSCRO3,=X'5CF0'      (24,1)                       MOD5
         MVC   QDSCRO4,=X'5DF7'      (24,72)                      MOD5
         MVC   QDSCRO5,=X'C260'      (3,1)                        MOD5
         STSIZE  SIZE=80,LINE=24    SET SCREEN SIZE FOR VTAM      MOD5
         B     MODELN               JOIN COMMON CODE              MOD5
         SPACE 1                                                  MOD5
MODEL5   MVC   QDLNELEN,=H'132'     LINE LENGTH                   MOD5
         MVC   QDLINES,=PL2'24'     LINES PER SCREEN AREA         MOD5
         MVC   QDSCRLEN,=AL2(24*132)  SCREEN LENGTH               MOD5
         MVC   QDSCRPLN,=AL2(24*132+QDLINE1-QDSCREEN)  TPUT LEN   MOD5
         MVI   QDSCRO1,X'7E'        ERASE/WRITE ALTERNATE         MOD5
         MVC   QDSCRO2,=X'C2C4'     (2,1)                         MOD5
         MVC   QDSCRO3,=X'F5E8'     (27,1)                        MOD5
         MVC   QDSCRO4,=X'F66F'     (27,72)                       MOD5
         MVC   QDSCRO5,=X'C4C8'     (3,1)                         MOD5
         STSIZE  SIZE=132,LINE=27   SET SCREEN SIZE FOR VTAM      MOD5
         B     MODELN               JOIN COMMON CODE              MOD5
         EJECT                                                    MOD5
***********************************************************************
*                                                                     *
*   MISCELLANY                                                        *
*                                                                     *
***********************************************************************
MVC      MVC   QPFIND(1),0(R2)      MOVE PARM TO QPFIND
         LTORG
         QCOMMON
WORK     DSECT
         DS    CL72
COUNT    DS    D
         END
