 GENCNTS:PROC OPTIONS(MAIN) REORDER;
 /*
     THIS PROGRAM IS PART OF THE PACKLIST GENERATOR, IT

     1) READS THE LPA DIRECTORY, OR PGM CESD INFO, FROM FILE "DIRECT"

     2) READS THE PSW SAMPLES (FILENAME "TAPE"), AND INCREMENTS
        COUNTS FOR THE MODULE IN LPA

     3) WRITES A NEW FILE (FILENAME "COUNTS") CONTAINING
        MODULE NAME AND REFRENCE COUNT.

    THE FILE "COUNTS" CAN BE USED WITH PACKER EVEN AFTER LPA
    OR LOAD MODULE HAS BEEN CHANGED.
                                                           */
        DCL (DIRECT,TAPE) FILE INPUT SEQUENTIAL ENV(FB TOTAL),
0           COUNTS FILE OUTPUT RECORD SEQUENTIAL
               ENV(FB RECSIZE(12) BLKSIZE(6228) TOTAL),
0           1 STATS,
              2 (MODCOUNT,LPALOW,LPAHIGH,FILL) FIXED BIN(31),
0           1 MODULE(*) CONTROLLED,
              2 NAME CHAR(8),
              2 (START,LENGTH,END,COUNT) FIXED BINARY(31),
0           1 DIRIN BASED(P),
              2 NAME CHAR(8),
              2 (START,LENGTH) FIXED BINARY(31),
0           1 MODOUT,
              2 NAME CHAR(8),
              2 COUNT FIXED BINARY(31),
          1 OSTATS,
              2 (OUTCOUNT,FILL1,FILL2) FIXED BINARY(31),
0           ADDRESS FIXED BINARY(31) BASED(P),
0           P POINTER,
0           SEARCHING BIT(1),
0           I FIXED BINARY(31),
0           HITS FIXED BINARY(31) INIT(0),
0           SAMPLCT FIXED BINARY(31) INIT(0);
1 /*
           READ THE LPA DIRECTORY
                                         */
         READ FILE(DIRECT) INTO(STATS);
         ALLOCATE MODULE(MODCOUNT);
         DO I=1 TO MODCOUNT;
            READ FILE(DIRECT) SET(P);
            MODULE(I) = DIRIN, BY NAME;
         END;
         CLOSE FILE(DIRECT);
         MODULE(*).END = MODULE(*).START + MODULE(*).LENGTH;
         MODULE(*).COUNT = 0;
         ON ENDFILE(TAPE) GO TO FINISH;
0 /*
             READ THE SAMPLES, MATCH THEM WITH LPA ENTRIES,
             AND INCREMENT THE HIT COUNT
                                                            */
         DO WHILE (1>0);
0           READ FILE(TAPE) SET(P);
            SAMPLCT = SAMPLCT + 1;
            SEARCHING = 1B;
0           IF ADDRESS >= LPALOW & ADDRESS <= LPAHIGH THEN
               DO I=1 TO MODCOUNT WHILE(SEARCHING);
0                 IF ADDRESS < MODULE(I).END THEN DO;
                     MODULE(I).COUNT = MODULE(I).COUNT + 1;
                     HITS = HITS + 1;
                     SEARCHING = 0B;
                   END;
               END;
         END;
0 /*
          WHEN WE HIT THE END OF SAMPLES, WRITE OUT THE
          STATISTICS RECORD (# OF MODULES), AND A RECORD
          FOR EACH MODULE
                                                         */
0FINISH:   CLOSE FILE(TAPE);
           OUTCOUNT = MODCOUNT; FILL1,FILL2=0;
            WRITE FILE(COUNTS) FROM(OSTATS);
            DO I=1 TO MODCOUNT;
               MODOUT = MODULE(I), BY NAME;
               WRITE FILE(COUNTS) FROM(MODOUT);
            END;
            PUT SKIP EDIT(SAMPLCT,'=NUMBER OF SAMPLES READ',
                           HITS,'=HITS') (F(5),A,SKIP);
            IF HITS=0 THEN STOP;
0END GENCNTS;
