 BLDE:  PROCEDURE OPTIONS(MAIN);
0%INCLUDE DCLDEVTB;
1DECLARE
      (CEIL,MAX,MOD,SUBSTR)BUILTIN,
      COMPACT EXTERNAL ENTRY,
      DEVTYPE EXTERNAL ENTRY OPTIONS(ASSEMBLER INTER),
      SYSPRINT PRINT,
      ERIC KEYED SEQUENTIAL OUTPUT
         ENVIRONMENT(U BLKSIZE(4002)KEYLENGTH(3)REGIONAL(3)),
      SYSIN RECORD INPUT ENV(VB RECSIZE(4004)),
      EOF BIT(1)STATIC INITIAL(0),
      DDNAME CHAR(8)STATIC INITIAL('ERIC'),
      IERR FIXED BINARY(31),
      (CIJE_RECORDS,RIE_RECORDS)FIXED BINARY(31),
      MAXIMUM_RECORD_LENGTH FIXED BINARY(15)STATIC INITIAL(0),
      AVERAGE_RECORD_LENGTH FIXED BINARY(31),
      TOTAL_BYTES FIXED BINARY(31)STATIC INITIAL(0),
      CYLINDERS FIXED BINARY(31),
      RECNO PICTURE'(11)9',
      STDERIC CHAR(4000)VARYING;
0DECLARE
      PERIC POINTER STATIC,
   01 ERIC_RECORD BASED(PERIC),
      02 RECORD_LENGTH FIXED BINARY(15),
      02 DATA_LENGTH FIXED BINARY(15),
      02 (TRACK,RECNO)FIXED BINARY(15),
      02 RESERVED(4)FIXED BINARY(15),
      02 OFFSETS(15)FIXED BINARY(15),
      02 DATA CHAR(MAXIMUM_DATA_LENGTH REFER(DATA_LENGTH)),
      MAXIMUM_DATA_LENGTH FIXED BINARY(15)STATIC INITIAL(4000);
0     ON ERROR SNAP PUT DATA(RECNO,STDERIC,IERR);
1     OPEN FILE(ERIC)OUTPUT;
      CALL DEVTYPE(DDNAME,DEVICE_TABLE,IERR);
      IF IERR^=0
         THEN SIGNAL ERROR;
      ALLOCATE ERIC_RECORD SET(PERIC);
0     OPEN FILE(SYSIN)INPUT TITLE('CIJE');
      DO CIJE_RECORDS=1 TO 120000;
         CALL PROCESS_RECORD;
      END;
      CLOSE FILE(SYSIN);
0     OPEN FILE(SYSIN)INPUT TITLE('RIE');
      DO RIE_RECORDS=1 TO 40000;
         CALL PROCESS_RECORD;
      END;
0     MAXIMUM_RECORD_LENGTH=MAXIMUM_RECORD_LENGTH+2;
      AVERAGE_RECORD_LENGTH=TOTAL_BYTES/(CIJE_RECORDS+RIE_RECORDS-2);
      CYLINDERS=CEIL(MOD(RECNO,100000000)/TRACKS_PER_CYLINDER);
      PUT SKIP(3)DATA
         (CIJE_RECORDS,RIE_RECORDS,TOTAL_BYTES,MAXIMUM_RECORD_LENGTH,
         MAXIMUM_RECORD_LENGTH,AVERAGE_RECORD_LENGTH,
         CYLINDERS,RECNO);
-PROCESS_RECORD:  PROCEDURE;
0     READ FILE(SYSIN)INTO(STDERIC);
      CALL COMPACT(STDERIC,RECORD_LENGTH/*FIRST BYTE OF ERIC_RECORD*/);
      IF RECORD_LENGTH>MAXIMUM_DATA_LENGTH /* SIC */
         THEN SIGNAL ERROR;
0     IF OFFSETS(6)^=OFFSETS(7) /* DESCRIPTOR PRESENT */
         THEN DO;
              MAXIMUM_RECORD_LENGTH=
                   MAX(MAXIMUM_RECORD_LENGTH,RECORD_LENGTH);
              RECNO=NEXT_KEY();
              ERIC_RECORD.RECNO=SUBSTR(RECNO,1,3);
              ERIC_RECORD.TRACK=SUBSTR(RECNO,7,5);
              WRITE FILE(ERIC)FROM(ERIC_RECORD)KEYFROM(RECNO);
              TOTAL_BYTES=TOTAL_BYTES+RECORD_LENGTH+2;
         END;
0END PROCESS_RECORD;
1NEXT_KEY:  PROCEDURE RETURNS(PICTURE'(11)9');
0DECLARE
      UNSUPPORTED_DEVICE CONDITION INTERNAL,
      (OVERHEAD,LAST_OVERHEAD,TOLERANCE)FIXED BINARY STATIC,
      O FIXED BINARY,
      FIRST_TIME BIT(1)STATIC INITIAL(1B),
      EFFECTIVE_RECORD_LENGTH FIXED BINARY(31),
      TRACK_BALANCE FIXED BINARY(31)STATIC,
   01 RTT STATIC,
      02 R PICTURE'999'INITIAL(0),
      02 TT PICTURE'(8)9'INITIAL(0),
      RTT_STRING PICTURE'999(8)9'DEFINED(RTT);
0ON CONDITION(UNSUPPORTED_DEVICE)BEGIN;
      PUT SKIP EDIT
         ('DEVICE FOR FILE(ERIC) IS UNSUPPORTED')(A);
      PUT SKIP(2)DATA
         (TRACK_BALANCE,EFFECTIVE_RECORD_LENGTH,OVERHEAD,RTT);
      STOP; /****** STOP ******/
 END;
0     IF FIRST_TIME
         THEN DO;
              FIRST_TIME=0B;
              TRACK_BALANCE=MAXIMUM_TRACK_LENGTH;
              IF APPLY_TOLERANCE_FACTOR
                   THEN TOLERANCE=TOLERANCE_FACTOR;
                   ELSE TOLERANCE=512;
              IF TWO_BYTE_OVERHEAD_VALUE
                   THEN OVERHEAD,LAST_OVERHEAD=
                        KEYED_BLOCK_OVERHEAD*256+
                        LAST_KEYED_BLOCK_OVERHEAD;
                   ELSE DO;
                        OVERHEAD=KEYED_BLOCK_OVERHEAD;
                        LAST_OVERHEAD=LAST_KEYED_BLOCK_OVERHEAD;
                        IF OVERHEAD<LAST_OVERHEAD
                             THEN SIGNAL CONDITION(UNSUPPORTED_DEVICE);
                   END;
         END;
1     EFFECTIVE_RECORD_LENGTH=
         (ERIC_RECORD.RECORD_LENGTH+
         2+ /* 2 BYTES FOR RECORD LENGTH FIELD */
         3)* /* 3 BYTES FOR KEY */
         TOLERANCE/512;
      IF EFFECTIVE_RECORD_LENGTH+LAST_OVERHEAD>
         MAXIMUM_TRACK_LENGTH
         THEN SIGNAL CONDITION(UNSUPPORTED_DEVICE);
0     IF TRACK_BALANCE<EFFECTIVE_RECORD_LENGTH+LAST_OVERHEAD
         THEN DO;
              TRACK_BALANCE=MAXIMUM_TRACK_LENGTH;
              TT=TT+1;
              R=0;
         END;
0     IF TRACK_BALANCE<EFFECTIVE_RECORD_LENGTH+OVERHEAD
         THEN O=LAST_OVERHEAD;
         ELSE O=OVERHEAD;
      TRACK_BALANCE=TRACK_BALANCE-EFFECTIVE_RECORD_LENGTH-O;
0     R=R+1;
      RETURN(RTT_STRING);
0END NEXT_KEY;
0END BLDE;
