 LSTTREE:  PROCEDURE(P)REORDER;
0DECLARE
      P POINTER;
0%INCLUDE DCLTREE,DCLOPER,SYSPRINT;
0DECLARE
      (NULL,SUBSTR)BUILTIN;
0/*   LSTTREE DUMPS THE READ STATEMENT TREE POINTED TO BY P.
 /*      LSTTREE IS CALLED WITH P=PHEAD FROM THE QUANDRY ERROR
 /*           ON-UNIT AND FROM COMPILE FOR LISTTREE STATEMENTS.
 /*           LSTTREE PRINTS THE OPERATORS AND DESCRIPTORS OF
 /*           THE TREE, INDICATING THE HIERARCHICAL RELATIONSHIPS
 /*           BY DEPTH OF INDENTATION.  */
1     PUT FILE(SYSPRINT)SKIP(3)EDIT('DUMP OF READ STATEMENT TREE')(A);
      IF PHEAD^=NULL
         THEN CALL DUMP_TREE(P,10);
      PUT FILE(SYSPRINT)SKIP(3);
-DUMP_TREE:  PROCEDURE(P,COLUMN)RECURSIVE;
0DECLARE
      P POINTER,
      COLUMN FIXED BINARY;
0DECLARE
      P2 POINTER AUTOMATIC;
0     PUT FILE(SYSPRINT)SKIP;
0     IF P->NODE_TYPE^=$LEAF
         THEN DO;
              PUT FILE(SYSPRINT)EDIT
                   (SUBSTR(SCNDOPS,P->NODE_TYPE,1))
                   (COL(COLUMN),A(10));
              DO P2=P->PDOWN REPEAT(P2->PACROSS)WHILE(P2^=NULL);
                   CALL DUMP_TREE(P2,COLUMN+5);
              END;
         END;
         ELSE PUT FILE(SYSPRINT)EDIT
              (P->DESCRIPTOR,P->RECORD_COUNT)
              (COL(COLUMN),A,F(8));
0END DUMP_TREE;
0END LSTTREE;
