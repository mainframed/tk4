 (CHECK(ERRCODE)):  CMPFLD:  PROCEDURE(STTYPE,STMT,FIELD)REORDER;
 %INCLUDE EXTVAR,EXTVAR2,DCLBCODE,DCLOPER,SYSPRINT;
0%INCLUDE DCLSTMT;
0DECLARE
      FIELD FIXED BINARY(31);
1DECLARE
      (ALLOCATION,BINARY,EMPTY,HBOUND,INDEX,LENGTH,LOW,
      MOD,NULL,SUBSTR,UNSPEC,VERIFY)BUILTIN;
0DECLARE
      I FIXED BINARY,
      FLDISP(15)CHAR(2)STATIC,
      STMT_CODE CHAR(1000)VARYING AUTO INITIAL(''),
      ADDRESSABILITY_CODE CHAR(2),
      RETURN_CODE CHAR(8),
      BALR_CODE BIT(16)STATIC
         INITIAL('0000010110010000'B), /* BALR 9,0 */
   01 CHAIN_STACK CONTROLLED,
      02 CHAIN_ENDS(0:1),
         03 (HEAD,TAIL)POINTER INITIAL(NULL),
      02 OPERATOR FIXED BINARY(31),
   01 PRIMARY AUTOMATIC LIKE CHAIN_STACK,
      LINK_AREA AREA(1000),
   01 LINK BASED,
      02 PPREV POINTER,
      02 LOC FIXED BINARY(31);
0ON STRINGSIZE ERRCODE=07017;
1PATCH:  PROCEDURE(CHAIN_ENDS);
0DECLARE
   01 CHAIN_ENDS,
      02 (HEAD,TAIL)POINTER;
0DECLARE
      (P,P2)POINTER,
      DISPLACEMENT CHAR(2); /* LENGTH(STMT_CODE)(R9) */
0ON STRINGRANGE ERRCODE=07005;
0     UNSPEC(DISPLACEMENT)=
         BINARY(LENGTH(STMT_CODE)+1001000000000000B,16,0);
      IF '0'B /* DEBUG OFF */
         THEN PUT SKIP LIST('PATCH CALLED'); /* TEMP */
      P,P2=CHAIN_ENDS.HEAD;
0     DO WHILE(P^=NULL);
         IF '0'B /* DEBUG OFF */
              THEN PUT SKIP LIST((10)'$',P->LINK.LOC,BINARY(UNSPEC(P)));
         (STRINGRANGE):
              SUBSTR(STMT_CODE,P->LINK.LOC,2)=DISPLACEMENT;
         P2=P;
         P=P->LINK.PPREV;
         FREE P2->LINK IN(LINK_AREA);
      END;
0     IF P2^=CHAIN_ENDS.TAIL
         THEN ERRCODE=07105;
      CHAIN_ENDS=NULL;
 END PATCH;
1     CALL INITIALISE;
      ALLOCATE CHAIN_STACK;
      CHAIN_STACK.OPERATOR=0;CHAIN_STACK.CHAIN_ENDS=NULL;
0     DO WHILE(SCANPTR<=LENGTH(STMT));
         CALL COMPILE_PRIMARY;
         DO WHILE(CHAIN_STACK.OPERATOR>=PRIMARY.OPERATOR);
              DO I=0,1;
                   IF PRIMARY.HEAD(I)=NULL
                        THEN PRIMARY.HEAD(I)=CHAIN_STACK.HEAD(I);
                        ELSE PRIMARY.TAIL(I)->PPREV=CHAIN_STACK.HEAD(I);
                   IF CHAIN_STACK.TAIL(I)^=NULL
                        THEN PRIMARY.TAIL(I)=CHAIN_STACK.TAIL(I);
              END;
              FREE CHAIN_STACK;
         END;
         IF PRIMARY.OPERATOR=$AND
              THEN CALL PATCH(PRIMARY.CHAIN_ENDS('1'B));
              ELSE CALL PATCH(PRIMARY.CHAIN_ENDS('0'B));
         ALLOCATE CHAIN_STACK;CHAIN_STACK=PRIMARY;
      END;
      UNSPEC(RETURN_CODE)=BCODE;
      STMT_CODE=STMT_CODE××SUBSTR(RETURN_CODE,1,4);
0     CALL PATCH(CHAIN_STACK.CHAIN_ENDS('1'B));
      FREE CHAIN_STACK,CHAIN_STACK;
      (STRINGSIZE):
         STMT_CODE=STMT_CODE××SUBSTR(RETURN_CODE,5,4);
      UNSPEC(ADDRESSABILITY_CODE)=BALR_CODE;
      (STRINGSIZE):
         OBJCODE=OBJCODE××ADDRESSABILITY_CODE××STMT_CODE;
1INITIALISE:  PROCEDURE;
0DECLARE
      (I,DISP)FIXED BINARY(15); /* IMP */
0     LINK_AREA=EMPTY;
      DO WHILE(ALLOCATION(CHAIN_STACK)>0);
         FREE CHAIN_STACK;
      END;
0     IF LENGTH(OBJCODE)<=LENGTH(RETURN_CODE) /* NULL OR DUMMY */
         THEN OBJCODE='';
         ELSE SUBSTR(OBJCODE,LENGTH(OBJCODE)-2,1)=LOW(1); /* BC 0 */
0     DO I=1 TO HBOUND(FLDISP,1);
         DISP=I*2+14;
         UNSPEC(FLDISP(I))=UNSPEC(DISP)×'1010000000000000'B;
      END;
0END INITIALISE;
1COMPILE_PRIMARY:  PROCEDURE;
0DECLARE
      OPERATOR CHAR(2)STATIC,
      OPERAND_DISPLACEMENT CHAR(2)STATIC,
      OPERAND_LENGTH_MINUS_1 CHAR(1)STATIC,
      IMMEDIATE_OPERAND CHAR(1)STATIC,
      VALID_PRIMARY_OPERATORS CHAR(16)STATIC
         INITIAL('  ^ = ^=> ^>< ^<');
0     CALL SCAN_PRIMARY;
0     IF '0'B /* DEBUG OFF */
         THEN PUT SKIP LIST((10)'*',OPERATOR);
0     IF OPERATOR='  '×OPERATOR='^ '
         THEN CALL COMPILE_CONTAINS;
0     ELSE CALL COMPILE_RELATION;
1SCAN_PRIMARY:  PROCEDURE;
 DECLARE
      (I,L)FIXED BINARY(31);
0ON STRINGSIZE ERRCODE=07006;
0     L=VERIFY(SUBSTR(STMT,SCANPTR),'=><^')-1;
      IF L>2
         THEN ERRCODE=07007;
0     OPERATOR=SUBSTR(STMT,SCANPTR,L);
      IF MOD(INDEX(VALID_PRIMARY_OPERATORS,OPERATOR)-1,
         LENGTH(OPERATOR))^=0
         THEN ERRCODE=07107;
      SCANPTR=SCANPTR+L;
0     L=VERIFY(SUBSTR(STMT,SCANPTR),
         'ABCDEFGHIJKLMNOPQRSTUVWXYZ*0123456789 -.,''')-1;
      IF L=0
         THEN ERRCODE=07008;
      IF L>255
         THEN ERRCODE=07009;
      UNSPEC(OPERAND_LENGTH_MINUS_1)=BINARY(L-1,8,0);
0     I=INDEX(LITPOOL,SUBSTR(STMT,SCANPTR,L))-1;
      IF I<0
         THEN DO;
              I=LENGTH(LITPOOL);
              (STRINGSIZE):  LITPOOL=LITPOOL××SUBSTR(STMT,SCANPTR,L);
         END;
0     IMMEDIATE_OPERAND=SUBSTR(STMT,SCANPTR,1);
0     UNSPEC(OPERAND_DISPLACEMENT)=BINARY(I+1011000000000000B,16,0);
         /* I(R11) */
      SCANPTR=SCANPTR+L;
0     PRIMARY.OPERATOR=INDEX(SCNDOPS,SUBSTR(STMT,SCANPTR,1));
      IF PRIMARY.OPERATOR=0
         THEN ERRCODE=07010;
      SCANPTR=SCANPTR+1;
0END SCAN_PRIMARY;
1BUILD_PATCH_CHAIN:  PROCEDURE(CHAIN_ENDS,PATCH_LOCATIONS);
0DECLARE
   01 CHAIN_ENDS,
      02 (HEAD,TAIL)POINTER,
      PATCH_LOCATIONS(*)FIXED BINARY,
      (P,P2)POINTER,
      I FIXED BINARY(31);
0     ALLOCATE LINK IN(LINK_AREA)SET(P);
      CHAIN_ENDS.TAIL=P;
      P->LINK.PPREV=NULL;
      P->LINK.LOC=PATCH_LOCATIONS(1)+LENGTH(STMT_CODE);
      DO I=2 TO HBOUND(PATCH_LOCATIONS,1);
         P2=P;
         ALLOCATE LINK SET(P);
         P->LINK.PPREV=P2;
         P->LINK.LOC=PATCH_LOCATIONS(I)+LENGTH(STMT_CODE);
      END;
      CHAIN_ENDS.HEAD=P;
0END BUILD_PATCH_CHAIN;
1COMPILE_CONTAINS:  PROCEDURE;
0DECLARE
      CODE CHAR(54),
      (FALSE_EXITS(2)INITIAL(19,53),
      TRUE_EXITS(1)INITIAL(43))FIXED BINARY STATIC;
0/* THE CONTAINS CODE IS LISTED BELOW.
 THE FALSE/TRUE EXITS ARE REVERSED FOR NOT CONTAINS.
0000     LH    2,FLDISP_(I+1)(10) LOAD OFFSET OF FIELD END
0032     LH    5,FLDISP_(I)(10)   LOAD OFFSET OF FIELD
0064     SR    2,5                CALCULATE FIELD LENGTH
0080     LA    0,OPERAND_LENGTH-1 LOAD OP LENGTH-1 FOR SUBTRACT
0112     SR    2,0                CALCULATE NUMBER OF COMPARISONS      X
                                  NEEDED TO TEST FOR CONTAINS
0128     BNP   FALSE              FALSE EXIT--CHAR OFFSET 19           X
                                  TAKEN IF RECORD FIELD TOO SHORT
0160     LA    5,0(5,10)          LOAD ADDRESS OF FIELD
0192     BALR  4,0                SET BRANCH REGISTER
0208     CLI   0(5),SUBSTR(OPERAND,1,1) TEST FIRST BYTE FOR EQUALITY
0240     BNE   X'12'(4)           SKIP COMPARISON FOR FULL LENGTH IF   X
                                  FIRST BYTES DO NOT MATCH
0272     CLC   0(OPERAND_LENGTH,5),OPERAND_DISPLACEMENT(11)            X
                                  COMPARE ENTIRE FIELD FOR CONTAINMENT
0320     BE    TRUE               TRUE EXIT--CHAR OFFSET 43
0352     LA    5,1(0,5)           BUMP RECORD FIELD POINTER
0384     BCTR  2,4                REPEAT TEST ON ADJACENT SUBSTR
0400     B     FALSE              FALSE EXIT--CHAR OFFSET 53
                                  TAKEN IF NO SUBSTR MATCHES
0432     EQU   *                  */
1        UNSPEC(CODE)=
 '01001000001000001010111111111111'B××
 '01001000010100001010111111111111'B××
 '0001101100100101'B××
 '01000001000000000000000011111111'B××
 '0001101100100000'B××
 '01000111110100001001111111111111'B××
 '01000001010101011010000000000000'B××
 '0000010101000000'B××
 '10010101111111110101000000000000'B××
 '01000111011100000100000000010010'B××
 '110101011111111101010000000000001011111111111111'B××
 '01000111100000001001111111111111'B××
 '01000001010100000101000000000001'B××
 '0000011000100100'B××
 '01000111111100001001111111111111'B;
0     SUBSTR(CODE,3,2)=FLDISP(FIELD+1);
      SUBSTR(CODE,7,2)=FLDISP(FIELD);
      SUBSTR(CODE,14,1)=OPERAND_LENGTH_MINUS_1;
      SUBSTR(CODE,28,1)=IMMEDIATE_OPERAND;
      SUBSTR(CODE,36,1)=OPERAND_LENGTH_MINUS_1;
      SUBSTR(CODE,39,2)=OPERAND_DISPLACEMENT;
0     IF SUBSTR(OPERATOR,1,1)^='^'
         THEN DO;
              CALL BUILD_PATCH_CHAIN(PRIMARY.CHAIN_ENDS(0),FALSE_EXITS);
              CALL BUILD_PATCH_CHAIN(PRIMARY.CHAIN_ENDS(1),TRUE_EXITS);
         END;
         ELSE DO;
              CALL BUILD_PATCH_CHAIN(PRIMARY.CHAIN_ENDS(0),TRUE_EXITS);
              CALL BUILD_PATCH_CHAIN(PRIMARY.CHAIN_ENDS(1),FALSE_EXITS);
         END;
0     (STRINGSIZE):  STMT_CODE=STMT_CODE××CODE;
0END COMPILE_CONTAINS;
1COMPILE_RELATION:  PROCEDURE;
0DECLARE
      CODE CHAR(38),
      MASK CHAR(1),
      (FALSE_EXITS(2)INITIAL(19,33),
      TRUE_EXITS(1)INITIAL(37))FIXED BINARY STATIC;
0/* THE EQ/LT/GT CODE IS LISTED BELOW.
 THE FALSE/TRUE EXITS ARE REVERSED FOR NOT EQ/LT/GT.

0000     LH    2,FLDISP_(I+1)(10) LOAD OFFSET OF FIELD END
0032     LH    5,FLDISP_(I)(10)   LOAD OFFSET OF FIELD
0064     SR    2,5                CALCULATE FIELD LENGTH
0080     LA    0,OPERAND_LENGTH   LOAD OP LENGTH FOR COMPARE
0112     CR    2,0                COMPARE FIELD AND OPERAND LENGTHS
0128     BNH   FALSE              FALSE EXIT--CHAR OFFSET 19
0160     LA    5,0(5,10)          LOAD ADDRESS OF FIELD
0192     CLC   0(OPERAND_LENGTH,5),OPERAND_DISPLACEMENT(11)            X
                                  COMPARE FIELD AND OPERAND
0240     BC    15-MASK,FALSE      FALSE EXIT--CHAR OFFSET 33
0272     B     TRUE               TRUE EXIT--CHAR OFFSET 37
0304     EQU   *                  */
1     SELECT(OPERATOR);
         WHEN('= ','^=')UNSPEC(MASK)='10000000'B;
         WHEN('< ','^<')UNSPEC(MASK)='01000000'B;
         WHEN('> ','^>')UNSPEC(MASK)='00100000'B;
      END;
      UNSPEC(MASK)=^UNSPEC(MASK)&'11110000'B;
-     UNSPEC(CODE)=
 '01001000001000001010111111111111'B××
 '01001000010100001010111111111111'B××
 '0001101100100101'B××
 '01000001000000000000000011111111'B××
 '0001100100100000'B××
 '01000111110100001001111111111111'B××
 '01000001010101011010000000000000'B××
 '110101011111111101010000000000001011111111111111'B××
 '01000111110100001001111111111111'B××
 '01000111111100001001111111111111'B;
0     SUBSTR(CODE,3,2)=FLDISP(FIELD+1);
      SUBSTR(CODE,7,2)=FLDISP(FIELD);
      SUBSTR(CODE,14,1)=OPERAND_LENGTH_MINUS_1;
      SUBSTR(CODE,26,1)=OPERAND_LENGTH_MINUS_1;
      SUBSTR(CODE,29,2)=OPERAND_DISPLACEMENT;
      SUBSTR(CODE,32,1)=MASK;
0     IF SUBSTR(OPERATOR,1,1)^='^'
         THEN DO;
              CALL BUILD_PATCH_CHAIN(PRIMARY.CHAIN_ENDS(0),FALSE_EXITS);
              CALL BUILD_PATCH_CHAIN(PRIMARY.CHAIN_ENDS(1),TRUE_EXITS);
         END;
         ELSE DO;
              CALL BUILD_PATCH_CHAIN(PRIMARY.CHAIN_ENDS(0),TRUE_EXITS);
              CALL BUILD_PATCH_CHAIN(PRIMARY.CHAIN_ENDS(1),FALSE_EXITS);
         END;
0     (STRINGSIZE):  STMT_CODE=STMT_CODE××CODE;
0END COMPILE_RELATION;
0END COMPILE_PRIMARY;
0END CMPFLD;
