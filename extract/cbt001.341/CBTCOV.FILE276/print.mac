*PROCESS INTERRUPT;
 PRINT:  PROCEDURE(PUNPK,NUMBER)REORDER;
0DECLARE
      PUNPK POINTER,
      NUMBER FIXED BINARY(31);
 %INCLUDE EXTVAR,DCLPROPT,FILES,DCLPFLD;
1DECLARE
   01 ERIC_OUT BASED(PUNPK),
      02 RECORD_STRING_LENGTH FIXED BINARY(15),
      02 DATA_STRING_LENGTH FIXED BINARY(15),
      02 (TRACK,RECNO)FIXED BINARY(15),
      02 RESERVED(4)FIXED BINARY(15),
      02 OFFSET(15) FIXED BINARY(15),
      02 DATA_STRING CHAR(4000 /* REFER(DATA_STRING_LENGTH) */);
0DECLARE
      FIRST_TIME BIT(1)STATIC INITIAL(1B),
      INTERRUPTED BIT(1)STATIC,
      SYSOUT_PAGESIZE FIXED BINARY STATIC INITIAL(59),
      FIELD FIXED BINARY(31),
      STRING_OFFSET FIXED BINARY(15),
      FIELD_TITLE(14)CHAR(15)STATIC VARYING ALIGNED INITIAL(
         'ACCNUM','CHNUM','DATE',
         'TITLE:  ','AUTHOR:  ','DESCRIPTOR:  ','IDENTIFIER:  ',
         'NOTE:  ','ISSUE:  ','ABSTRACT:  ','AVAILABILITY:  ',
         'JOURNAL:  ','INSTITUTION:  ','SPONSOR:  '),
      (HBOUND,LENGTH,LINENO,MAX,SUBSTR)BUILTIN;
-/*   PRINT IS CALLED TO PRINT AN UNPACKED ERIC RECORD.
 /*      THE ARGUMENTS ARE A POINTER (PUNPK) TO THE RECORD
 /*           AND A SEQUENCE NUMBER (NUMBER). NUMBER
 /*           SHOULD BE SET TO ONE AT THE BEGINNING OF A
 /*           SEARCH TO CAUSE HEADERS FOR THE NEW SEARCH
 /*           TO BE PRINTED PROPERLY ON A NEW PAGE.  IT
 /*           SHOULD NORMALLY BE INCREMENTED BY ONE FOR
 /*           EACH CALL TO PRINT.  THE RELEVANT PARTS OF THE
 /*           UNPACKED ERIC RECORD CONSIST OF A CONTINUOUS
 /*           STRING OF UNPACKED TEXT AND AN ARRAY OF
 /*           OFFSETS INTO THE RECORD WHICH DIVIDE THE STRING
 /*           INTO 14 FIELDS.  SINCE THE OFFSETS ARE FROM
 /*           THE BEGINNING OF THE RECORD, THEY MUST BE
 /*           ADJUSTED FOR USE AS PL/I SUBSTR VALUES.
 /*      ALL OUTPUT GOES TO THE FILE SYSOUT.  THE
 /*           SEQUENCE NUMBER AND THE FIRST THREE FIELDS
 /*           (ACCESSION NUMBER, CLEARINGHOUSE ACCESSION
 /*           NUMBER, AND DATE) ARE PRINTED ON THE FIRST
 /*           LINE.  THE REMAINING FIELDS ARE PRINTED BY
 /*           THE PRINT_FIELD SUBROUTINE, USING THE VALUES
 /*           SPECIFIED IN THE PROPT PRINT OPTIONS STRUCTURE,
 /*           FOR ALL FIELDS WITH THE CORRESPONDING BIT IN
 /*           THE EXTERNAL ARRAY PFLD SET ON. (THE SUBROUTINE
 /*           CMPPRT, WHICH COMPILES PRINT AND NOPRINT STATEMENTS,
 /*           MAINTAINS PFLD.)
 /*      IF AN ATTENTION INTERRUPT OCCURS, PRINTING IS
 /*           TERMINATED.  A REVERT ATTENTION IS EXECUTED
 /*           AND THE INTERRUPT IS SIGNALLED TO THE CALLER.
 /*           NORMAL OR ABNORMAL EXIT FROM PRINT IS PERMITTED. */
1ON ENDPAGE(SYSOUT)CALL PRINT_PAGE_HEADER;
 ON ATTENTION INTERRUPTED=1B;
0     INTERRUPTED=0B;
0     STRING_OFFSET=RECORD_STRING_LENGTH-DATA_STRING_LENGTH+1;
      OFFSET=OFFSET-STRING_OFFSET;
0     IF PAGESIZE^=SYSOUT_PAGESIZE /* PAGESIZE OPTION CHANGED */
         THEN DO;
              SYSOUT_PAGESIZE=PAGESIZE;
              CLOSE FILE(SYSOUT);
              OPEN FILE(SYSOUT)PRINT PAGESIZE(SYSOUT_PAGESIZE);
         END;
0     IF NUMBER=1
         THEN CALL PRINT_PAGE_HEADER;
0     PUT FILE(SYSOUT)SKIP(SKIP)EDIT
         (NUMBER)(COL(COLUMN),F(5))
         ((FIELD_TITLE(FIELD),
         SUBSTR(DATA_STRING,OFFSET(FIELD),
         OFFSET(FIELD+1)-OFFSET(FIELD))DO FIELD=1 TO 3))
         (X(3),A,X(1),A);
0     DO FIELD=4 TO HBOUND(OFFSET,1)-1 WHILE(^INTERRUPTED);
         IF OFFSET(FIELD)^=OFFSET(FIELD+1)
              THEN IF PFLD(FIELD)
                   THEN CALL PRINT_FIELD;
      END;
0     IF INTERRUPTED
         THEN DO;
              REVERT ATTENTION;
              SIGNAL ATTENTION;
         END;
-PRINT_PAGE_HEADER:  PROCEDURE;
0     IF ^FIRST_TIME
         THEN PUT FILE(SYSOUT)PAGE;
         ELSE FIRST_TIME=0B;
      PUT FILE(SYSOUT)SKIP(2)EDIT
         ('PAGE',PAGENUM,'SEARCH ',SEARCH)
         (COL(COLUMN),A,F(5),X(12),A,P'9999');
      PUT FILE(SYSOUT)SKIP(2);
      PAGENUM=PAGENUM+1;
0END PRINT_PAGE_HEADER;
1PRINT_FIELD:  PROCEDURE;
0DECLARE
      (BEGINNING_OF_LINE,END_OF_LINE)FIXED BINARY(31),
      END_OF_FIELD FIXED BINARY(31);
0     END_OF_FIELD=OFFSET(FIELD+1)-1;
      BEGINNING_OF_LINE=OFFSET(FIELD);
      END_OF_LINE=BEGINNING_OF_LINE+
         LINE_LENGTH(LINESIZE-LENGTH(FIELD_TITLE(FIELD)));
0     PUT FILE(SYSOUT)SKIP(SPACE+1)EDIT
         (FIELD_TITLE(FIELD))(COL(COLUMN),A)
         (SUBSTR(DATA_STRING,BEGINNING_OF_LINE,
              END_OF_LINE-BEGINNING_OF_LINE))(A);
0     DO WHILE(1B)UNTIL(INTERRUPTED);
0        DO BEGINNING_OF_LINE=END_OF_LINE TO END_OF_FIELD
              WHILE(SUBSTR(DATA_STRING,BEGINNING_OF_LINE,1)=' ');
         END;
         IF BEGINNING_OF_LINE>END_OF_FIELD
              THEN LEAVE; /** LEAVE **/
0        END_OF_LINE=BEGINNING_OF_LINE+LINE_LENGTH(LINESIZE);
0        PUT FILE(SYSOUT)SKIP(SPACE)EDIT
              (SUBSTR(DATA_STRING,BEGINNING_OF_LINE,
              END_OF_LINE-BEGINNING_OF_LINE))(COL(COLUMN),A);
      END;
1LINE_LENGTH:  PROCEDURE(MAXIMUM_LENGTH)RETURNS(FIXED BINARY(31));
0DECLARE
      MAXIMUM_LENGTH FIXED BINARY(31);
0DECLARE
      (I,EOL)FIXED BINARY(31);
0     I=BEGINNING_OF_LINE+MAX(MAXIMUM_LENGTH,1)-1;
0     IF I>END_OF_FIELD
         THEN RETURN(END_OF_FIELD-BEGINNING_OF_LINE+1);
0     DO EOL=I TO BEGINNING_OF_LINE BY -1
         WHILE(SUBSTR(DATA_STRING,EOL,1)^=' ');
      END;
      IF EOL<BEGINNING_OF_LINE
         THEN EOL=I;
0     RETURN(EOL-BEGINNING_OF_LINE);
0END LINE_LENGTH;
0END PRINT_FIELD;
0END PRINT;
