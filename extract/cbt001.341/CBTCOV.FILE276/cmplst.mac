 (CHECK(ERRCODE)):  CMPLST:  PROCEDURE(STTYPE,STMT)REORDER;
 %INCLUDE DCLSTMT;
 %INCLUDE DCLPARM,DCLPROPT,DCLSTMAP,DCLRTRAN;
1%INCLUDE EXTVAR,EXTVAR2,EXTRTN,SYSPRINT;
0DECLARE
      (LIST,RETAIN,DELETE,MATCH)BIT(1)AUTOMATIC INITIAL(0B),
      IER FIXED BINARY(31),
      NEW_SBSTMTS CHAR(LENGTH(SBSTMTS))VARYING INITIAL(''),
      (I,N)FIXED BINARY,
      (ANY,LENGTH,SUBSTR)BUILTIN;
1/*   CMPLST IS CALLED TO COMPILE LIST, RETAIN, AND DELETE STATEMENTS.
 /*      STMT IS A VARYING CHARACTER STRING OF THE FORM
 /*           COMMAND STATEMENT-ID-LIST#
 /*      A STATEMENT-ID-LIST IS A LIST OF STATEMENT-IDS SEPARATED
 /*           BY COMMAS OR BLANKS.  A STATEMENT-ID REFERS TO ONE
 /*           OR MORE STATEMENTS IN THE EXTERNAL STRING SBSTMTS,
 /*           WHERE A COPY OF THE CURRENT PROGRAM TEXT IS STORED.
 /*           A STATEMENT-ID IS EITHER A GENERAL CLASS OF STATEMENT
 /*           IN SBSTMTS (E. G., 'READ'), OR THE UNIQUE NUMBER OF A
 /*           STATEMENT IN SBSTMTS (E. G., '2').
 /*      COMMAND SPECIFIES ONE OF THREE ACTIONS TO BE PERFORMED ON
 /*           ALL STATEMENTS IN SBSTMTS WHICH MATCH ONE OR MORE
 /*           STATEMENT-IDS:
 /*                LIST THE STATEMENTS,
 /*                DELETE THE STATEMENTS FROM SBSTMTS,
 /*                RETAIN THE STATEMENTS.
 /*      THE FOLLOWING SPECIAL CONSIDERATIONS APPLY:
 /*           READ STATEMENTS CAN NOT BE DELETED.
 /*           READ STATEMENTS MUST BE RETAINED.
 /*           LIST# (A NULL ID-LIST) LISTS ALL STATEMENTS.
 /*      CMPLST CALLS SCNSBST TO ANALYZE SBSTMTS, SAVING STATEMENT
 /*           TYPES IN STMAP.  SCNPARM IS CALLED TO ANALYZE THE
 /*           LIST/RETAIN/DELETE STATEMENT ITSELF AND SAVE THE
 /*           STATEMENT-IDS IN PARM.  PARAMETER VALIDATION IS DONE
 /*           BY SCNPARM AND BY VALIDATE_PARMS, WHICH ASSURES THAT
 /*           THE STATEMENT-IDS DO INDEED OCCUR IN SBSTMTS.
 /*           (COMPILATION OF DELETE AND RETAIN STATEMENTS IS
 /*           ABANDONED AFTER VALIDATION IF ANY ERROR IS DETECTED TO
 /*           AVOID DESTROYING SBSTMTS.)  STATEMENTS ARE THEN LISTED
 /*           OR AN EDITED VERSION OF SBSTMTS CONSTRUCTED AS
 /*           APPROPRIATE.  RETRANS IS SET TO INDICATE THAT
 /*           RETRANSLATION (BUT NOT READ STATEMENT RETRANSLATION)
 /*           IS REQUIRED.  COMPILE IS RESPONSIBLE FOR ENSURING
 /*           THAT SBSTMTS IS RETRANSLATED BEFORE THE SEARCH IS
 /*           EXECUTED.  */
1     SELECT(STTYPE);
         WHEN('LIST      ')LIST=1B;
         WHEN('RETAIN    ')RETAIN=1B;
         WHEN('DELETE    ')DELETE=1B;
         OTHERWISE RETURN; /* SHOULD NEVER HAPPEN */
      END;
0     CALL SCNSBST(STMAP);
      CALL SCNPARM(STMT,PARM,NUMBER_OF_PARMS,IER);
      CALL VALIDATE_PARMS;
      IF IER>0&^LIST
         THEN DO;
              SCANPTR=1;
              ERRCODE=10018;
         END;
-     DO N=1 TO STMT_NO;
0        IF NUMBER_OF_PARMS=0
              THEN MATCH=1B;
              ELSE MATCH=0B;
0        DO I=1 TO NUMBER_OF_PARMS WHILE(^MATCH);
              IF PARM.NAME(I)=STMAP.STMT_TYPE(N)×
                   PARM.NUMBER(I)=N
                   THEN MATCH=1B;
         END;
0        SELECT;
              WHEN(LIST&MATCH)CALL LIST_STMT(N);
              WHEN(RETAIN&MATCH,DELETE&^MATCH)
                   NEW_SBSTMTS=NEW_SBSTMTS××
                        SUBSTR(SBSTMTS,STMT_START(N),
                        STMT_START(N+1)-STMT_START(N));
              OTHERWISE; /* DELETE STATEMENT FROM SBSTMTS */
         END;
0     END;
0     IF DELETE×RETAIN
         THEN DO;
              SBSTMTS=NEW_SBSTMTS;
              RETRANSLATE=1B;
         END;
1VALIDATE_PARMS:  PROCEDURE;
0DECLARE
      I FIXED BINARY,
      READ_SPECIFIED BIT(1)STATIC;
0ON CHECK(ERRCODE)BEGIN;
      (NOCHECK(ERRCODE)):  CALL PRTERR(STMT,ERRCODE);
      IER=IER+1;
 END;
0     IF NUMBER_OF_PARMS=0
         THEN READ_SPECIFIED=1B; /* 0 MEANS ALL FIELDS */
         ELSE READ_SPECIFIED=0B;
0     DO I=1 TO NUMBER_OF_PARMS;
         SCANPTR=PARM.SCANPTR(I);
         SELECT;
              WHEN(SUBPARMS(I))ERRCODE=10015;
              WHEN(NUMERIC(I))
                   IF NUMBER(I)=0×NUMBER(I)>STMT_NO
                        THEN ERRCODE=10019;
                   ELSE IF STMAP.STMT_TYPE(NUMBER(I))='READ        '
                        THEN READ_SPECIFIED=1B;
              WHEN(^NUMERIC(I))
                   IF ^ANY(STMAP.STMT_TYPE(*)=PARM.NAME(I))
                        THEN ERRCODE=10119;
                   ELSE IF PARM.NAME(I)='READ        '
                        THEN READ_SPECIFIED=1B;
         END;
      END;
0     IF(DELETE&READ_SPECIFIED)×(RETAIN&^READ_SPECIFIED)
         THEN ERRCODE=10020;
0END VALIDATE_PARMS;
1LIST_STMT:  PROCEDURE(N);
0DECLARE
      N FIXED BINARY,
      (I,IBEG,IEND)FIXED BINARY,
      (LSIZE,COL)FIXED BINARY;
-     PUT FILE(SYSPRINT)SKIP EDIT(N,' ')(F(3),A);
      COL=5;LSIZE=PROPT.LINESIZE-4;
      I=STMT_START(N);IEND=STMT_START(N+1)-1;
0     DO WHILE(I<=IEND);
         IBEG=I;
         IF I+LSIZE>=IEND
              THEN I=IEND;
              ELSE DO I=I+LSIZE TO I+LSIZE/2 BY -1
                   WHILE(SUBSTR(SBSTMTS,I,1)^=' ');
              END;
         PUT FILE(SYSPRINT)EDIT(SUBSTR(SBSTMTS,IBEG,I+1-IBEG))
              (COL(COL),A);
         DO I=I+1 TO IEND WHILE(SUBSTR(SBSTMTS,I,1)=' ');
         END;
         COL=1;LSIZE=PROPT.LINESIZE;
      END;
0END LIST_STMT;
0END CMPLST;
