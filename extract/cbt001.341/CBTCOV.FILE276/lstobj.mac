 LSTOBJ:  PROCEDURE(OBJCODE,LITPOOL)REORDER;
0DECLARE
      (OBJCODE,LITPOOL)CHAR(*)VARYING;
0%INCLUDE SYSPRINT;
0DECLARE
      (I,OPCODE,INSTRUCTION_LENGTH)FIXED BINARY,
      ICHAR(2)CHAR(1)BASED(ADDR(I)),
      OPERAND_DISPLACEMENT FIXED BINARY(15),
      OPERAND_LENGTH FIXED BINARY(15),
      (ADDR,LENGTH,MOD,STRING,SUBSTR,UNSPEC)BUILTIN;
1/*   LSTOBJ DUMPS OBJCODE IN HEX AND LITPOOL IN EBCDIC.
 /*      LSTDICT IS CALLED BY THE QUANDRY ERROR ON UNIT, AND
 /*           BY COMPILE FOR THE (UNDOCUMENTED) LISTOBJ
 /*           STATEMENT. IT IS PASSED CHARACTER STRINGS
 /*           OBJCODE CONTAINING MACHINE CODE AND LITPOOL
 /*           CONTAINING LITERALS.  THE SECOND OPERAND
 /*           DISPLACEMENT OF ALL SS INSTRUCTIONS IN OBJCODE
 /*           IS AN OFFSET INTO LITPOOL. */
1     PUT FILE(SYSPRINT)SKIP(3)EDIT('DUMP OF OBJECT CODE')(A);
0     I=0;
0     DO WHILE(I<LENGTH(OBJCODE));
0        UNSPEC(OPCODE)=(8)'0'B××UNSPEC(SUBSTR(OBJCODE,I+1,1));
0        IF OPCODE<64
              THEN INSTRUCTION_LENGTH=2;
         ELSE IF OPCODE<192
              THEN INSTRUCTION_LENGTH=4;
         ELSE INSTRUCTION_LENGTH=6;
0        PUT FILE(SYSPRINT)SKIP EDIT(HEX(ICHAR(1))××HEX(ICHAR(2)))(A);
         DO I=I TO I+INSTRUCTION_LENGTH-2 BY 2;
              PUT FILE(SYSPRINT)EDIT(HEX(SUBSTR(OBJCODE,I+1,1))××
                    HEX(SUBSTR(OBJCODE,I+2,1)))(X(1),A);
         END;
0        IF INSTRUCTION_LENGTH=6
              THEN DO;
                   UNSPEC(OPERAND_DISPLACEMENT)=
                        UNSPEC(SUBSTR(OBJCODE,I-1,2))&
                        '0000111111111111'B;
                   UNSPEC(OPERAND_LENGTH)=
                        (8)'0'B××UNSPEC(SUBSTR(OBJCODE,I-4,1));
                   PUT FILE(SYSPRINT)EDIT
                        (SUBSTR(LITPOOL,OPERAND_DISPLACEMENT+1))
                        (X(2),A(OPERAND_LENGTH+1));
              END;
      END;
-HEX:  PROCEDURE(BYTE)RETURNS(CHAR(2));
0DECLARE
      BYTE CHAR(1),
      HEX_CHAR(0:15)CHAR(1),
      NUMBER FIXED BINARY(15);
      STRING(HEX_CHAR)='0123456789ABCDEF';
      UNSPEC(NUMBER)=(8)'0'B××UNSPEC(BYTE);
      RETURN(HEX_CHAR(NUMBER/16)××HEX_CHAR(MOD(NUMBER,16)));
0END HEX;
0END LSTOBJ;
