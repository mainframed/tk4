//**********************************************************************
//**  RACDEF PRE-PROCESSING EXIT                                      **
//**********************************************************************
//UMOD000  EXEC PGM=GIMSMP,REGION=4096K
//SMPCSI   DD DSN=SMP.GLOBAL.CSI,DISP=SHR
//SMPOUT   DD SYSOUT=*
//SMPRPT   DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SMPCNTL  DD *
 SET BDY(TARGET).
 RESTORE S(UMOD000).
 SET BDY(GLOBAL).
 REJECT S(UMOD000).
 RECEIVE SYSMODS.
 SET BDY(TARGET).
 APPLY S(UMOD000) ASSEM REDO COMPRESS(ALL).
/*
//SMP.SMPPTFIN DD DATA,DLM=$$
++USERMOD(UMOD000).
++VER (Z038)
  FMID(HRF1702)
  /*
     THIS IS AN PRE-PROCESSING EXIT FOR RACDEF(S) THAT
     COMPLIMENTS THE RACHECK EXIT, ICHRCX02, IN PROVIDING
     TAPE DS PROTECTION IN WARNING MODE.
     WHEN CREATING NEW TAPE DATASETS, RACDEF IS ENTERED,
     AND SUBSEQUENTLY, A CALL IS MADE TO RACHECK FOR WARNING
     PURPOSES.
                                                                  */.
++JCLIN.
//ICHRDX01 EXEC PGM=IEWL,PARM='XREF,LIST,LET,NCAL,RENT'
//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,(2,2))
//SYSPRINT DD SYSOUT=*
//SYSLMOD  DD DSN=SYS1.LPALIB,DISP=SHR
//SYSLIN   DD *
  NAME ICHRDX01(R)
/*
++SRC (ICHRDX01)
    SYSLIB  (UMODSRC)
    DISTLIB (AUMODSRC)
    DISTMOD (ALPALIB).
D01      TITLE 'ICHRDX01 -- RACDEF PRE-PROCESSING EXIT ROUTINE'
**********************************************************************
*                                                                    *
*  MODULE NAME -                                                     *
*                                                                    *
*     ICHRDX01 -- RACDEF PRE-PROCESSING EXIT ROUTINE                 *
*                                                                    *
*  FUNCTION -                                                        *
*                                                                    *
*     THIS EXIT ENFORCES THE USE OF GENERIC PROFILES FOR NEW DATA-   *
*     SETS, BYPASSES RACDEF PROCESSING FOR TAPE DS WARNING MODE      *
*                                                                    *
*  ATTRIBUTES -                                                      *
*                                                                    *
*     REENTRANT, LPA RESIDENT.                                       *
*                                                                    *
*  REQUIREMENTS -                                                    *
*                                                                    *
*     MCI DEVELOPED MAPPING MACRO FOR RACDEF EXIT:  ADEFLIST         *
*                                                                    *
*  ENTRY CONDITIONS -                                                *
*                                                                    *
*     R1  - ADDRESS OF AREA DERIVED FROM PARAMETERS ON RACDEF MACRO  *
*                                                                    *
*  EXIT CONDITIONS -                                                 *
*                                                                    *
*     R15 - CONTAINS A RETURN CODE:                                  *
*             0 - PROCESSING COMPLETE, RACDEF PROCESSING CONTINUES   *
*             4 - REQUEST FAILED                                     *
*             8 - PROCESSING COMPLETE, RACDEF TERMINATES             *
*            12 - PROCESSING COMPLETE, BYPASS AUTHORIZATION CHECKS   *
*                                                                    *
*  REGISTER USAGE -                                                  *
*                                                                    *
*     R13 - ADDRESS OF STANDARD SAVE AREA                            *
*     R12 - BASE ADDRESS (ICHRDX01)                                  *
*     R11 - ADDRESS OF PARAMETER AREA                                *
*     R10 - ADDRESS OF COMMUNICATIONS VECTOR TABLE (CVT)             *
*     R9  - ADDRESS OF CURRENT TASK CONTROL BLOCK (TCB)              *
*     R8  - ADDRESS OF ACCESSOR ENVIRONMENT ELEMENT (ACEE)           *
*     R7  - ADDRESS OF RACF CVT (RCVT)                               *
*     R6  - ADDRESS OF ADDRESS SPACE CONTROL BLOCK (ASCB)            *
*     R5  - ADDRESS OF ADDRESS SPACE EXTENSION BLOCK (ASXB)          *
*     R4  - ADDRESS OF CURRENT REQUEST BLOCK (RB)                    *
*     R3  - ADDRESS OF CONTENTS DIRECTORY ENTRY (CDE)                *
*     R1  - WORK                                                     *
*     R0  - WORK                                                     *
*                                                                    *
*  OPERATION -                                                       *
*                                                                    *
*     1.  DETERMINE WHETHER OR NOT RACF IS ACTIVE.                   *
*     2.  CHECK TO SEE IF REQUEST IS AGAINST CLASS(DATASET)          *
*         IF IT IS CLASS(DATASET), THEN                              *
*           CHECK IF 'TAPEDS' PROTECTION IS ON THEN                  *
*             ISSUE A RACHECK SO THAT USER GETS 'WARNING' MSGS       *
*             IRREGARDLESS OF AUTHORITY FROM RACHECK, ALLOW          *
*             ACCESS SINCE IT IS 'WARN' MODE                         *
*           IF 'TAPEDS' IS OFF, THEN EXIT                            *
*           ELSE CONTINUE                                            *
*     3.  SEARCH THE RB CHAIN FOR THE FIRST RB.  IF IT WAS A RACF    *
*          COMMAND, EXIT NORMALLY TO ALLOW PROFILE MAINTENANCE.      *
*     4.  OTHERWISE, BYPASS FURTHER RACDEF PROCESSING (WHICH, IN THE *
*          CASE OF A NEWLY CREATED DATASET, FOR EXAMPLE, WILL CAUSE  *
*          THE PROFILE NOT TO BE BUILT).                             *
*                                                                    *
*  REQUIREMENTS -                                                    *
*                                                                    *
*    APAR OY08209 MUST BE APPLIED IN ORDER TO FACILITATE             *
*    REASONABLE HANDLING OF TAPE WRITE RINGS...                      *
*                                                                    *
*                                                                    *
*  CHANGE HISTORY -                                                  *
*                                                                    *
*                                                                    *
**********************************************************************
*                                                                    *
         MACRO
         ADEFLIST
**********************************************************************
*  DSECT NAME -                                                      *
*     ADEFLIST                                                       *
*  FUNCTION -                                                        *
*     PROVIDE MAPPING FOR THE PARAMETER LIST PASSED TO THE RACDEF    *
*     EXIT ROUTINES (ICHRDX01 AND ICHRDX02).  THIS DSECT WAS DERIVED *
*     FROM THE 'SYSTEM PROGRAMMING LIBRARY: RESOURCE ACCESS CONTROL  *
*     FACILITY (RACF)', PUBLICATION # SC28-1343.                     *
**********************************************************************
ADEFLIST DSECT                     RACDEF PARAMETER LIST
ADEF@LEN DS    A                   ADDRESS OF FULLWORD LENGTH
ADEF@FGF DS    A                   ADDRESS OF FUNCTIONAL FLAGS
ADEF@INS DS    A                   ADDRESS OF INSTALLATION PARAMETERS
ADEF@ENT DS    A                   ADDRESS OF ENTITY
ADEF@OON DS    A                   ADDRESS OF OLDVOL OR NEWNAME
ADEF@VOL DS    A                   ADDRESS OF VOLUME SERIAL NUMBER
ADEF@CLS DS    A                   ADDRESS OF ENTITY CLASS NAME
ADEF@MEN DS    A                   ADDRESS OF MODEL PROFILE NAME
ADEF@MVL DS    A                   ADDRESS OF MODEL PROFILE VOLSER
ADEF@FGM DS    A                   ADDRESS OF MODEL PROFILE FLAGS:
ADEFMMND EQU   X'80'                 IGNORE MENTITY NOT DEFINED
ADEFMADF EQU   X'40'                 ADD PROFILE TO CHAIN IF DEFINED
ADEFMARG EQU   X'20'                 ADD PROFILE TO CHAIN REGARDLESS
ADEFMAND EQU   X'10'                 ADD PROFLE TO CHAIN IF NOT DEFINED
ADEFMRES EQU   X'0F'                 RESERVED
ADEF@DNC DS    A                   ADDRESS OF NAMING CONVENTIONS
ADEF@FGP DS    A                   ADDRESS OF PROFILE OPTION FLAGS:
ADEFPUAC EQU   X'80'                 USE UACC VALUE FROM PROFILE
ADEFPLVL EQU   X'40'                 USE LEVEL VALUE FROM PROFILE
ADEFPOWN EQU   X'20'                 USE OWNER VALUE FROM PROFILE
ADEFPAUD EQU   X'10'                 USE AUDIT VALUE FROM PROFILE
ADEFPGAU EQU   X'08'                 USE GLOBALAUDIT VALUE FROM PROFILE
ADEFPINS EQU   X'04'                 USE INSTALLATION DATA FROM PROFILE
ADEFPACC EQU   X'02'                 USE ACCESS LIST FROM PROFILE
ADEFPWRN EQU   X'01'                 USE WARNING VALUE FROM INSTLN PROF
ADEF@INP DS    A                   ADDRESS OF INSTALLATION PROFILE
ADEF@ACE DS    A                   ADDRESS OF ACEE
ADEF@UNT DS    A                   ADDRESS OF UNIT INFORMATION
ADEF@ACC DS    A                   ADDRESS OF UACC VALUE FLAGS
ADEF@RLV DS    A                   ADDRESS OF RESOURCE LEVEL NUMBER
ADEF@AUD DS    A                   ADDRESS OF AUDIT FLAGS
ADEFQRDF EQU   X'00'                 AUDIT QUALIFIER FOR READ
ADEFQUPF EQU   X'01'                 AUDIT QUALIFIER FOR UPDATE
ADEFQCTF EQU   X'02'                 AUDIT QUALIFIER FOR CONTROL
ADEFQALF EQU   X'03'                 AUDIT QUALIFIER FOR ALTER
ADEFQRDS EQU   X'00'                 AUDIT QUALIFIER FOR READ
ADEFQUPS EQU   X'04'                 AUDIT QUALIFIER FOR UPDATE
ADEFQCTS EQU   X'08'                 AUDIT QUALIFIER FOR CONTROL
ADEFQALS EQU   X'0C'                 AUDIT QUALIFIER FOR ALTER
ADEF@OWN DS    A                   ADDRESS OF OWNER IDENTIFIER
ADEF@DAT DS    A                   ADDRESS OF DATA INFORMATION
ADEF@FG2 DS    A                   ADDRESS OF FLAG BYTE 2
ADEFRAC@ EQU   X'00'                 RACFIND WAS NOT SPECIFIED
ADEFRACN EQU   X'80'                 RACFIND=NO
ADEFRACY EQU   X'C0'                 RACFIND=YES
ADEFCKAU EQU   X'20'                 CHKAUTH=YES
ADEFTDST EQU   X'10'                 DSTYPE=TAPE
ADEFERSE EQU   X'08'                 ERASE=YES
ADEFMGEA EQU   X'04'                 MGENER=ASIS
ADEFMGEY EQU   X'04'                 MGENER=YES
ADEFWARN EQU   X'02'                 WARNING=YES
ADEFGENR EQU   X'01'                 GENERIC=YES
ADEF@ABE DS    A                   ADDRESS OF ABEND CODE
ADEF@REC DS    A                   ADDRESS OF REASON CODE
ADEF@RTC DS    A                   ADDRESS OF RETURN CODE
ADEF@WRK DS    A                   ADDRESS OF EXIT WORK AREA
ADEF@FG3 DS    A                   ADDRESS OF FLAG BYTE 3
ADEF@ALV DS    A                   ADDRESS OF ACCLVL VALUE
ADEF@ALP DS    A                   ADDRESS OF ACCLVL PARAMETER
ADEF@SLP DS    A                   ADDRESS OF SECLVL PARAMETER
ADEF@CTP DS    A                   ADDRESS OF CATEGORY PARAMETER
ADEF@FNO DS    A                   ADDRESS OF FILE SEQUENCE NUMBER
ADEF@SRP DS    A                   ADDRESS OF SECURITY RETENTION PERIOD
ADEF@NID DS    A                   ADDRESS OF 'NOTIFY' USERID
ADEF@MCL DS    A                   ADDRESS OF MODEL CLASS
         MEND
*
         EJECT
         USING WORKAREA,R13
         USING ICHRDX01,R12
         USING ADEFLIST,R11
         USING CVT,R10
         USING TCB,R9
         USING ACEE,R8
         USING RCVT,R7
         USING ASCB,R6
         USING ASXB,R5
         USING RBBASIC,R4
         USING CDENTRY,R3
         USING PSA,R0
ICHRDX01 CSECT
ICHRDX01 AMODE 31
ICHRDX01 RMODE ANY
         SAVE  (14,12),,'ICHRDX01&SYSDATE.&SYSTIME'    SAVE REGISTERS
         LR    R12,R15             ESTABLISH BASE REGISTER
         LR    R11,R1              SAVE PARAMETER AREA ADDRESS
         GETMAIN R,LV=SIZEWORK     OBTAIN A SAVE AREA
         ST    R1,SAVENEW          FORWARD CHAIN
         ST    R13,SAVEOLD-SAVEAREA(,R1)     BACKWARD CHAIN
         LR    R13,R1              SAVE THE SAVE AREA POINTER
         XR    R15,R15             ASSUME ZERO RETURN CODE
         L     R10,FLCCVT          GET THE CVT ADDRESS
         ICM   R7,B'1111',CVTRAC   IS THERE A RACF CVT?
         BZ    EXIT                  NO, RACF IS NOT INSTALLED
         TM    RCVTSTAT,RCVTRNA    IS RACF ACTIVE?
         BO    EXIT                  NO, EXIT
         TM    RCVTFLGS,RCVTROFF   HAS RVARY INACT BEEN ISSUED?
         BO    EXIT                  YES, EXIT
         L     R6,PSAAOLD          GET THE CURRENT ASCB ADDRESS
         L     R9,PSATOLD          GET THE CURRENT TCB ADDRESS
         L     R5,ASCBASXB         GET THE CURRENT ASXB ADDRESS
         L     R1,ADEF@ACE         GET THE ACEE POINTER ADDRESS
         ICM   R8,B'1111',0(R1)    DID RACF GIVE US AN ACEE?
         BNZ   GOTACEE               YES, USE THAT ONE
         ICM   R8,B'1111',ASXBSENV DOES THE USER HAVE AN ACEE?
         BZ    EXIT                  NO, EXIT
GOTACEE  TM    RCVTFLG1,RCVTTDSN   IS RACF TAPEDS PROTECTION ON?
         BNO   EXIT                  NO, EXIT
*                                    YES, CHECK 'DSTYPE'
         L     R1,ADEF@FG2         LOAD FLAG BYTE 2 ADDRESS
TAPECHK  TM    0(R1),ADEFTDST      DOES 'DSTYPE=TAPE'?
         BNO   EXIT                  NO, EXIT
*                                    YES, MAKE SURE 'CLASS=DATASET'
         L     R1,ADEF@CLS         GET THE CLASS POINTER
         CLC   0(8,R1),RACLASS     IS IT CLASS(DATASET)?
         BNE   EXIT                  NO, EXIT
         L     R1,TCBRBP           GET THE RB POINTER
FINDRB   LR    R4,R1               COPY THE CURRENT RB POINTER
         ICM   R1,B'0111',RBLINKB  GET THE PREVIOUS RB POINTER
         CR    R1,R9               DOES IT POINT BACK TO THE TCB?
         BNE   FINDRB                NO, CHECK THE NEXT RB
         XR    R3,R3               CLEAR R3
         ICM   R3,B'0111',RBCDE1   IS THERE A CDE FOR THIS RB?
         BZ    BYPASS                NO, CAN'T FIGURE OUT WHO CALLED US
         LA    R1,CMDTABLE         GET THE COMMAND TABLE ADDRESS
CHECKCMD CLC   0(8,R1),TABLEEND    IS THIS END OF THE TABLE?
         BE    CHKAUTH               YES, OR NOT A RACF COMMAND,
*                                    GO ISSUE RACHECK FOR AUTHORIZATION
         CLC   CDNAME(8),0(R1)     IS IT A RACF COMMAND?
         BE    EXIT                  YES, EXIT
         LA    R1,8(,R1)           POINT TO NEXT COMMAND IN TABLE
         B     CHECKCMD            CHECK THE NEXT COMMAND
*
*  ISSUE RACHECK TO GET 'WARNING' MESSAGES TO THE USER, IF ANY
*
CHKAUTH  DS    0H
         L     R1,ADEF@ENT         GET ENTITY ADDRESS
         MVC   DSN,0(R1)           COPY OVER THE DATASET NAME
         L     R1,ADEF@VOL         GET VOLUME ADDRESS
         MVC   VOL,0(R1)           COPY OVER THE VOLUME SERIAL
         MVC   AUTHCHK(LRACROUT),RACROUTL   INITIALIZE RACROUTE MACRO
         RACROUTE REQUEST=AUTH,    RACHECK REQUEST                     X
               CLASS=RACLASS,      CHECK FOR                           X
               ATTR=ALTER,         ALTER                               X
               ENTITY=DSN,         AUTHORITY                           X
               VOLSER=VOL,         VOLUME OF DSN                       X
               RELEASE=1.7,        SET RACF LEVEL TO 1.7               X
               DSTYPE=T,           TAPE DS ACCESS REQUEST              X
               WORKA=SAFWORK,      SAF WORK AREA                       X
               MF=(E,AUTHCHK)
*
*  BYPASS RACDEF PROCESSING IRREGARDLESS OF THE RC FROM RACHECK
*
BYPASS   LA    R15,8               SET RETURN CODE TO BYPASS RACDEF
         EJECT
EXIT     LR    R1,R13              GET THE SAVE AREA POINTER
         L     R13,SAVEOLD         GET CALLER'S SAVE AREA
         ST    R15,SAVER15         SET RETURN CODE
         FREEMAIN R,LV=SIZEWORK,A=(R1)  FREE OUR SAVE AREA
         XC    SAVENEW(4),SAVENEW  CLEAR FORWARD CHAIN
         RETURN (14,12)            RESTORE REGISTERS AND RETURN
         EJECT
*
*    DATA AREAS
*
         DS    0D                  DOUBLE WORD ALIGN
RACLASS  DC    AL1(L'RACLASSN)     CLASS NAME FOR RACROUTE
RACLASSN DC    C'DATASET'          CLASS NAME FOR RACROUTE
RACROUTL RACROUTE REQUEST=AUTH,WORKA=*-*,MF=L
LRACROUT EQU   *-RACROUTL          LENGTH OF RACROUTE MACRO
CMDTABLE DS    0CL8                RACF COMMAND TABLE
         DC    CL8'AD'
         DC    CL8'ADDSD'
         DC    CL8'ALD'
         DC    CL8'ALTDSD'
         DC    CL8'DD'
         DC    CL8'DELDSD'
TABLEEND DC    8X'FF'
         DS    0D
         LTORG
*
*    DSECT FOR RACROUTE DYNAMIC AREAS
*
WORKAREA DSECT
         SAVEAREA DSECT=NO
SAFWORK  DS    CL512              SAF WORK AREA
         DS    0D
DSN      DS    CL44               DATASET NAME FOR RACROUTE
         DS    0D
VOL      DS    CL6                VOLUME SERIAL OF 'DSN'
         DS    0D
AUTHCHK  RACROUTE REQUEST=AUTH,MF=L,WORKA=*-*
SIZEWORK EQU   *-WORKAREA         LENGTH OF DSECT
*
         EJECT
         REGS
         EJECT
         ADEFLIST
         EJECT
         CVT   DSECT=YES,LIST=YES
         EJECT
         IHAPSA
         EJECT
         IHAACEE
         EJECT
         ICHPRCVT
         EJECT
         IHAASCB
         EJECT
         IHAASXB
         EJECT
         IHARB
         EJECT
         IHACDE
         EJECT
         IKJTCB LIST=YES
         EJECT
         END   ICHRDX01
$$
