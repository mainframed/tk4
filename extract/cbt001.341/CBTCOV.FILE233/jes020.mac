JES020   TITLE 'JES2 EXIT020 STC/TSU NAME ROOM AND MSGCLASS'
***********************************************************************
*                                                                     *
*  PROGRAM: JES020                                                    *
*  PURPOSE: ASSIGN PROGRAMMER-NAME ROOM-NUMBER AND MSGCLASS           *
*           FROM RACF USER PROFILE FOR STARTED-TASK AND TSO.          *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
*  CHANGE LOG:                                                        *
*  08/21/86  MKH  INITIAL VERSION                                  001*
*  10/19/86  MKH  REMOVE JOURNALING FOR STARTED TASKS              002*
*  10/26/86  MKH  VERSION REWRITE                                  003*
*  11/19/86  MKH  DO NOT DEFAULT ROOM FOR TSO USERS                004*
*  12/01/86  MKH  ADD DUAL VERSION SUPPORT                         005*
*                                                                     *
*  CHANGE LEVEL:                                                      *
         LCLC  &LEVEL,&UMOD,&UDATE                                    *
&LEVEL   SETC  '005-MKH'    <------ CURRENT MODIFICATION LEVEL        *
&UDATE   SETC  '12/01/86'   <------ VERSION DATE                      *
&UMOD    SETC  'MJES020'    <------ SMP USERMOD ID                    *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
*  DEPENDENCIES:                                                      *
*           - RACF RELEASE 1.7 OR HIGHER.                             *
*           - SETUSER TSO COMMAND.                                    *
*                                                                     *
*  SOURCE:  'MVSSUPRT.MVSXA.SOURCE(JES020)'                           *
*  LOADMOD: 'SYS1.LINKLIB(JES020)'                                    *
*  EXIT-NAME:  EXIT020                                                *
*                                                                     *
*                                                                     *
*  ASSEMBLY:   //SYSLIB DD DSN=SYS1.SMPMTS,DISP=SHR                   *
*              //       DD DSN=SYS1.MACLIB,DISP=SHR                   *
*              //       DD DSN=SYS1.HASPSRC,DISP=SHR                  *
*              //       DD DSN=SYS1.AMODGEN,DISP=SHR                  *
*                                                                     *
*  LINKEDIT:   'RENT,REUS,REFR,NCAL,...'                              *
*              MUST RESIDE IN APF LINKLIST LIBRARY, OR LPA.           *
*              //SYSLIN DD *                                          *
*                 INCLUDE SYSPUNCH(JES020)                            *
*                 ENTRY JES020   <--- MIT DIRECTORY                   *
*                 SETCODE AC(0)                                       *
*                NAME JES020(R)                                       *
*                                                                     *
*---------------------------------------------------------------------*
         EJECT ,
*---------------------------------------------------------------------*
*                                                                     *
*  DESCRIPTION:                                                       *
*    THE JES2 EXIT #20 GETS CALLED AFTER ALL JCL STATEMENTS HAVE      *
*    BEEN READ IN, AND BEFORE THE JCT IS TO BE WRITTEN TO THE         *
*    CHECKPOINT DATASET.  THE EXIT RUNS UNDER THE JES2 MAINTASK       *
*    IN THE JES2 ADDRESS-SPACE IN KEY-1.  WE USE THE RACF MANAGER     *
*    MACROS TO RETRIEVE THE USERID-RELATED DATA FROM THE              *
*    RACF USER PROFILE.  THE TEMPLATE NAMES FOR THESE FIELDS ARE:     *
*       PGMRNAME - PROGRAMMER NAME FIELD                              *
*       USRDATA  - ROOM NUMBER                                        *
*       USRFLG   - DEFAULT MSGCLASS (FOR STARTED-TASKS ONLY)          *
*    THE PROGRAMMER-NAME FIELD CAN BE SET IN THE PROFILE BY EITHER    *
*    THE RACF 'ALTUSER' TSO COMMAND, OR BY THE SEAFIRST 'SETUSER'     *
*    TSO COMMAND.  THE ROOM AND MSGCLASS MUST BE SET BY THE           *
*    'SETUSER' COMMAND.                                               *
*    NOTE:  JES2 EXITS #2 AND #4 DO NOT GET CALLED FOR STARTED        *
*           TASKS AND TSO LOGONS.                                     *
*                                                                     *
***********************************************************************
         TITLE 'JES2 EXIT020 STC/TSU NAME ROOM AND MSGCLASS            X
               *** JES2 DSECTS ***'
         COPY  $HASPGBL               COPY HASP GLOBALS
&PRINT   SETC  'GEN'                  PRINT GEN OPTION FOR CSECT
&LISTJES SETC  'GEN'                  PRINT GEN OPTION FOR JES2 DSECTS
         EJECT
JES020   $MODULE $BUFFER,                                              X
               $CAT,                  REQ'D BY $JCT                    X
               $DCT,                                                   X
               $HASPEQU,              REG EQUATES                      X
               $HCT,                  REQ'D FOR $SAVE,$RETURN,ETC.     X
               $JCT,                  REQ'D BY $CAT                    X
               $JOE,                  REQ'D TO GET SYSOUT CLASS        X
               $JQE,                  REQ'D BY $HCT                    X
               $MIT,                  REQ'D BY $MODEND                 X
               $PCE,                  REQ'D BY $HCT                    X
               $PDDB,                                                  X
               $PPPWORK               REQ'D TO FIND JOB
*---------------------------------------------------------------------*
         SPACE 1
***********************************************************************
****  MODULE IDENTIFICATION:                                       ****
***********************************************************************
$ID      DS    0D
         DC    C'JES2 EXIT020 STC/TSU NAME ROOM AND MSGCLASS '
         DC    C'USERMOD &UMOD '
         DC    C'VERSION &VERSION &LEVEL &UDATE'                   005
         DS    0D
*---------------------------------------------------------------------*
         SPACE 2
***********************************************************************
****  SET JES2 VERSION DEPENDENT USINGS:                      **** 005
***********************************************************************
         AIF   ('&VERSION' EQ 'SP 1.3.4').OLDVER                   005
.NEWVER  ANOP  ,                   JES 2.1.5 USINGS:               005
         USING JCT,R10                SET ADDRESSABLILTY           005
         USING HCT,R11                SET ADDRESSABLILTY           005
         USING PCE,R13                SET ADDRESSABLILTY           005
         AGO   .ENDVER                                             005
.OLDVER  ANOP  ,                   JES 1.3.4 USINGS:               005
         USING JCTDSECT,R10           SET ADDRESSABLILTY           005
         USING HCTDSECT,R11           SET ADDRESSABLILTY           005
         USING PCEDSECT,R13           SET ADDRESSABLILTY           005
.ENDVER  ANOP  ,                                                   005
*=====================================================================*
         TITLE 'JES2 EXIT020 STC/TSU NAME ROOM AND MSGCLASS            X
               *** EXIT020 CSECT ***'
***********************************************************************
****  PERFORM JES2 EXIT LINKAGE:                                   ****
***********************************************************************
EXIT020  RMODE 24                     BELOW 16M LINE
EXIT020  AMODE 24                     MUST HAVE 24-BIT PSW
EXIT020  $ENTRY CSECT=YES,BASE=R12
         $SAVE ,                      SAVE REGS
*---------------------------------------------------------------------*
         SPACE 1
***********************************************************************
****  INITIALIZE REGISTER ASSIGNMENTS:                             ****
***********************************************************************
PROC100  DS    0H                  INITIAL ENTRY:
         LR    R12,R15                R12: BASE REG
         L     R8,CVTPTR              R8: CVT ADDRESS
         L     R8,CVTRAC-CVT(,R8)     R8: RCVT ADDRESS (RACF)
         USING RCVT,R8                USE ICHPRCVT MACRO
         LTR   R8,R8                  IS RCVT THERE ?
         BZ    RETURN                 NO:  EXIT
         TM    RCVTSTAT,RCVTRNA       IS RACF INACTIVE ?
         BO    RETURN                 YES: EXIT
         CLC   =CL4'JCT',JCTID        CORRECT OFFSETS ?
         BNE   RETURN                 NO: EXIT
         TM    JCTJOBFL,JCTSTCJB      IS STARTED TASK ?
         BO    PROC200                YES: PROCESS
         TM    JCTJOBFL,JCTTSUJB      IS TSO USER ?
         BO    PROC200                YES: PROCESS
         B     RETURN                 NO: EXIT
*=====================================================================*
         EJECT ,
***********************************************************************
****  GETMAIN OUR DYNAMIC WORKING-STORAGE AREA:                    ****
***********************************************************************
PROC200  DS    0H                  INIT WORKAREA:
         LA    R0,#SIZE               R0: LENGTH OF GETMAINED WORKAREA
         GETMAIN R,LV=(0)             GETMAIN THE WORKAREA
         LA    R9,0(,R1)              R9: WORKAREA
         USING #AREA,R9               SET ADDRESSABILITY
         LR    R0,R9                  R0: MVCL TARGET ADDR
         LA    R1,#SIZE               R1: MVCL TARGET SIZE
         XR    R2,R2                  RESET R2
         XR    R3,R3                  RESET R3
         MVCL  R0,R2                  CLEAR GETMAINED AREA
         LA    R1,#SIZE               GETMAIN AREA SIZE
         ST    R1,#GMFM               SAVE GETMAIN/FREEMAIN PARM
*=====================================================================*
         EJECT ,
***********************************************************************
****  GET THE ASSOCIATED RACF USERID:                              ****
****                                                               ****
****  IF THIS IS A TSO USER, THEN WE CAN ASSUME THAT THE JOBNAME   ****
****   AND THE USERID ARE THE SAME.                                ****
****  IF THIS IS A STARTED-TASK JOB, THEN WE NEED TO REFERENCE     ****
****   THE RACF STARTED-TASK NAME TABLE (ICHRIN03) TO DETERMINE    ****
****   THE APPROPRIATE USERID.                                     ****
****                                                               ****
***********************************************************************
PROC300  DS    0H                  EXTRACT USERID:
         MVC   #USERIDN,JCTJNAME      MOVE JOBNAME
         TM    JCTJOBFL,JCTTSUJB      IS TSO USER ?
         BO    PROC400                YES: JOBNAME IS USERID
*---------------------------------------------------------------------*
PROC310  DS    0H                  ONLY STARTED-TASKS HERE:
         L     R7,RCVTSPT             R7: ICHRIN03 ADDRESS
         LTR   R7,R7                  DOES ICHRIN03 EXIST ?
         BZ    PROC400                NO: DONT REFER TO TABLE
         ICM   R3,B'0011',0(R7)       R3: ICHRIN03 ENTRIES
         LA    R0,X'FFF'              R0: 'AND' MASK
         NR    R3,R0                  SAVE LOW 3 NIBBLES
         LA    R2,2(,R7)              R2: START OF TABLE
*---------------------------------------------------------------------*
PROC320  DS    0H                  SCAN ICHRIN03 TABLE:
         CLC   #USERIDN,0(R2)         DOES JOBNAME MATCH ?
         BE    PROC340                YES: SUPPLY NEW USERID
         LA    R2,32(,R2)             R2: NEXT ENTRY
         BCT   R3,PROC320             CONTINUE TABLE SCAN,
         B     PROC400                -OR ASSUME JOBNAME=USERID
PROC340  DS    0H                  SET USERID PER ICHRIN03:
         MVC   #USERIDN,8(R2)         SET NEW USERID
*        B     PROC400                CONTINUE
*=====================================================================*
         EJECT ,
***********************************************************************
****  SET THE USERID CHARACTER LENGTH FIELD:                       ****
***********************************************************************
PROC400  DS    0H                  SET USERID STRING LENGTH:
         LA    R4,#USERIDN            R4: SCAN POINTER
         LA    R5,8                   R5: LOOP CONTROL
         XR    R3,R3                  R3: USERID LENGTH COUNTER
*---------------------------------------------------------------------*
PROC420  DS    0H                  COUNT USERID CHARS:
         CLI   0(R4),C'$'             IS VALID CHAR ?
         BL    PROC440                NO: EXIT LOOP
         LA    R3,1(,R3)              YES: INCREMENT LENGTH
         LA    R4,1(,R4)              BUMP POINTER
         BCT   R5,PROC420             DECR LOOP CONTROL
*---------------------------------------------------------------------*
PROC440  DS    0H                  SET USERID LENGTH:
         STC   R3,#USERIDL            SET THE LENGTH
         LTR   R3,R3                  ANY USERID ?
         BNP   PROC800                NO: CLEANUP AND RETURN
*=====================================================================*
         EJECT ,
***********************************************************************
****  CALL RACF MANAGER FOR USERID INFORMATION:                    ****
****                                                               ****
****  THE ICHEINTY MACRO INVOKES THE RACF MANAGER VIA SVC-132.     ****
****  THE 'ACTIONS' KEYWORD SPECIFIES SECONDARY PARAMETER LISTS    ****
****   WHICH DESCRIBE WHICH RACF FIELDS WE WANT TO RETRIEVE.       ****
****  THE SECOND-LEVEL PLISTS (ICHEACTN MACROS) PASS THE SYMBOLIC  ****
****   NAME OF THE FIELDS DIRECTLY TO RACF, SO THAT RACF CAN       ****
****   INTERPRET THEM AGAINST HIS TEMPLATES.                       ****
****  THE THIRD-LEVEL PLIST (ICHETEST MACRO) PROVIDES RACF WITH    ****
****   A CONDITION THAT MUST OCCUR FOR THE SECOND-LEVEL PLIST TO   ****
****   WORK, SO THAT WE CAN RETRIEVE A SPECIFIC SEGMENT, I.E.  A   ****
****   UNIQUE REPEAT OCCURRENCE, OF A UNIT OF DATA.                ****
****  ICHEINTY RETURN-CODES AND RACF TEMPLATES ARE DESCRIBED IN    ****
****   THE RACF SPL, SC28-1343.                                    ****
****                                                               ****
***********************************************************************
PROC500  DS    0H                  RETRIEVE RACF DATA:
         LA    R2,RACFEND-RACFAREA    R2: LENGTH OF WKAREA
         ST    R2,RACALENG            SET WKAREA LENGTH
         XC    RACCNTL,RACCNTL        RESET ICHEINTY CONTROL AREA
         LA    R1,#LOCATE             R1: PLIST ADDRESS
         MVC   0(#LOCATEL,R1),PLOCATE PREFORMAT MACRO PLIST
         LA    R2,RACFAREA            R2: WORKAREA ADDRESS
         LA    R3,#USERID             R3: USERID AREA
*---------------------------------------------------------------------*
         ICHEINTY LOCATE,MF=(E,(1)),  RETRIEVE RACF DATA:              X
               WKAREA=(R2),           - ANSWER AREA                    X
               ENTRY=(R3)             - USERID AREA
*---------------------------------------------------------------------*
PROC520  DS    0H                  PROCESS PER RETURN-CODE:
         LTR   R15,R15                WAS RACF MANAGER CALL GOOD ?
         BZ    PROC540                YES: SET UNIT POINTERS
         CH    R15,=H'12'             WAS USER UNDEFINED ?
         BE    PROC600                YES: PROCESS WITHOUT POINTERS
         B     PROC580                NO: ISSUE ERROR MESSAGE
*---------------------------------------------------------------------*
         EJECT ,
***********************************************************************
****    ICHEINTY RETURN-CODE = +0                                  ****
***********************************************************************
PROC540  DS    0H                  USERID PROFILE RETRIEVED:
         LA    R2,RACDATA             R2: START OF RACF'S REPLY
         XR    R3,R3                  RESET R3
         ST    R2,#PTRNAME            SET PROGRAMMER NAME FIELD
*---------------------------------------------------------------------*
         ICM   R3,B'0011',0(R2)       R3: LENGTH OF PGMRNAME UNIT
         LA    R2,2(R3,R2)            R2: NEXT FIELD
         ST    R2,#PTRROOM            SET ROOM NUMBER UNIT ADDRESS
*---------------------------------------------------------------------*
         ICM   R3,B'0011',0(R2)       R3: LENGTH OF ROOM UNIT
         LA    R2,2(R3,R2)            R2: NEXT FIELD
         ST    R2,#PTRMSGC            SET MSGCLASS UNIT ADDRESS
*---------------------------------------------------------------------*
         B     PROC600                PROCESS JCT
*---------------------------------------------------------------------*
         SPACE 1
***********************************************************************
****    ICHEINTY RETURN-CODE = ???                                 ****
***********************************************************************
PROC580  DS    0H                  CRITICAL RACF ERROR:
         STC   R15,#F+1               SET R15 LOW-NIBBLE IN BYTE-1
         SRL   R15,4                  SHIFT OUT LOW NIBBLE
         STC   R15,#F+0               SET R15 HI-NIBBLE IN BYTE-0
         STC   R0,#F+3                SET R0 LOW-NIBBLE IN BYTE-3
         SRL   R0,4                   SHIFT OUT LOW NIBBLE
         STC   R0,#F+2                SET R0 HI-NIBBLE IN BYTE-2
         NC    #F,ANDMASK             'AND'-OUT TRASH
         TR    #F,HEXCHARS            CONVERT TO EBCDIC
         LA    R1,#WTOMSG             R1: WTO PLIST AREA
         MVC   0(MSG1LEN,R1),MSG1     PREFORMAT WTO PLIST
         USING MSG1,R1                SETUP TEMP ADDRESSABILITY
         MVC   MSG1RC,#F+0            SET RETURN-CODE
         MVC   MSG1R0,#F+2            SET REASON CODE
         MVC   MSG1JOB,JCTJNAME       SET JOBNAME
         MVC   MSG1JBNO,JCTJOBID+4    SET JOB NUMBER
         MVC   MSG1USER,#USERIDN      SET USERID
         XR    R0,R0                  RESET R0
         WTO   ,MF=(E,(1))            ISSUE WTO MESSAGE
         DROP  R1                     DROP WTO PLIST MAPPING
         B     PROC800                CLEANUP AND RETURN
*=====================================================================*
         EJECT ,
***********************************************************************
****  EXTRACT RESULTS FROM RACF MANAGER CALL:                      ****
****                                                               ****
****  THE INFORMATION RETURNED FROM RACF WILL BE PLACED INTO       ****
****   'STAGING' AREAS, SO THAT WE CAN DECEIDE WHAT TO DO WITH     ****
****   THEM, DEPENDING UPON WHAT WE GOT.                           ****
****                                                               ****
***********************************************************************
         SPACE 2
*---------------------------------------------------------------------*
PROC600  DS    0H                  RACF DATA RETRIEVED OK:
***********************************************************************
****  PROC60:  EXTRACT PROGRAMMER NAME FIELD:                      ****
***********************************************************************
PROC60   DS    0H                  SET PROGRAMMER NAME FIELD:
         L     R4,#PTRNAME            R4: RACF PROGRAMMER NAME FIELD
         LTR   R4,R4                  WAS FIELD RETRIEVED ?
         BZ    PROC60N                NO: SET DEFAULT NAME
         XR    R5,R5                  RESET R5
         ICM   R5,B'0011',0(R4)       R5: LENGTH OF DATA
         CH    R5,=H'20'              WAS FIELD RETRIEVED ?
         BNE   PROC60N                NO: PROCESS DEFAULT NAME
         CLC   2(20,R4),BLANKS        DOES NAME DATA EXIST ?
         BL    PROC60N                NO: PROCESS DEFAULT NAME
*---------------------------------------------------------------------*
PROC60Y  DS    0H                  SET PROGRAMMER NAME FIELD:
         MVC   JCTPNAME,2(R4)         YES: SET PROGRAMMER NAME FIELD
         B     PROC60X                PGMRNAME COMPLETE
*---------------------------------------------------------------------*
PROC60N  DS    0H                  SET DEFAULT PROGRAMMER NAME FIELD:
         MVC   JCTPNAME(12),=CL12'UNKN USERID'
         MVC   JCTPNAME+12(8),#USERIDN
*---------------------------------------------------------------------*
PROC60X  DS    0H                  PROGRAMMER NAME FIELD IS SET:
*=====================================================================*
         EJECT ,
***********************************************************************
****  PROC61:  EXTRACT ROOM NUMBER:                                ****
***********************************************************************
PROC61   DS    0H                  EXTRACT ROOM NUMBER:
         L     R4,#PTRROOM            R4: RACF ROOM NUMBER FIELD
         LTR   R4,R4                  WAS FIELD RETRIEVED ?
         BZ    PROC61N                NO: SET DEFAULT ROOM
         XR    R5,R5                  RESET R5
         ICM   R5,B'0011',0(R4)       R5: LENGTH OF DATA
         CH    R5,=H'10'              WAS FIELD RETRIEVED ?
         BNH   PROC61N                NO: SET DEFAULT ROOM
         CLC   2(8,R4),ROOMKEY        IS CORRECT KEY ?
         BNE   PROC61N                NO: SET DEFAULT ROOM
*---------------------------------------------------------------------*
PROC61A  DS    0H                  EXTRACT ROOM NUMBER AND TEST:
         LA    R0,#F                  R0: MVCL TARGET ADDR
         LA    R1,L'#F                R1: MVCL TARGET SIZE
         LA    R2,2+8+1(,R4)          R2: START OF ROOM NUMBER
         XR    R3,R3                  RESET R3
         IC    R3,2+8(,R4)            R3: LENGTH OF ROOM NUMBER
         ICM   R3,B'1000',BLANKS      SET FILL CHARACTER
         MVCL  R0,R2                  MOVE ROOM NUMBER TO '#F'
         CLI   #F,C' '                DOES ROOM NUMBER EXIST ?
         BNH   PROC61N                NO: SET DEFAULT ROOM
         CLI   #F,C'*'                DOES ROOM NUMBER EXIST ?
         BE    PROC61N                NO: SET DEFAULT ROOM
*---------------------------------------------------------------------*
PROC61Y  DS    0H                  SET ROOM NUMBER IN JCT:
         MVC   JCTROOMN,#F            SET ROOM NUMBER
         B     PROC61X                ROOM NUMBER COMPLETE
*---------------------------------------------------------------------*
PROC61N  DS    0H                  SET DEFAULT NUMBER IN JCT:
         TM    JCTJOBFL,JCTTSUJB      ARE WE A TSO USER ?          004
         BO    PROC61T                YES: SET ROOM = ????         004
*        BZ    PROC61J                NO:  SET ROOM = FA12         004
*----------------------------------------------------------------* 004
PROC61J  DS    0H                  DEFAULT ROOM FOR STARTED TASK:  004
         MVC   JCTROOMN,=C'FA12'      SET ROOM NUMBER
         B     PROC61X                ROOM NUMBER COMPLETE
*----------------------------------------------------------------* 004
PROC61T  DS    0H                  DEFAULT ROOM FOR TSO USER:      004
         MVC   JCTROOMN,=C'????'      SET UNKNOWN ROOM NUMBER      004
*        B     PROC61X                ROOM NUMBER COMPLETE         004
*---------------------------------------------------------------------*
PROC61X  DS    0H                  ROOM NUMBER HAS BEEN SET:
*=====================================================================*
         EJECT ,
***********************************************************************
****  PROC62:  EXTRACT MSGCLASS USING 'MSGCLASS' KEY:              ****
***********************************************************************
PROC62   DS    0H                  SET MSGCLASS USING MSGCLASS KEY:
         MVI   #C,0                   RESET TEMP MSGCLASS BYTE
         L     R4,#PTRMSGC            R4: RACF MSGCLASS FIELD
         LTR   R4,R4                  WAS FIELD RETRIEVED ?
         BZ    PROC63                 NO: TRY OLD METHOD
         XR    R5,R5                  RESET R5
         ICM   R5,B'0011',0(R4)       R5: LENGTH OF DATA
         CH    R5,=H'10'              WAS FIELD RETRIEVED ?
         BNH   PROC63                 NO: TRY OLD METHOD
         MVC   #C(1),2+8+1(R4)        YES: MOVE MSGCLASS VALUE
         B     PROC64                 YES: GO SET MSGCLASS
*=====================================================================*
         SPACE 2
***********************************************************************
****  PROC63:  EXTRACT MSGCLASS FROM 'ROOM' FLAG:                  ****
***********************************************************************
PROC63   DS    0H                  SET MSGCLASS USING OLD METHOD:
         MVI   #C,0                   RESET TEMP MSGCLASS BYTE
         L     R4,#PTRROOM            R4: RACF ROOM FIELD
         LTR   R4,R4                  WAS FIELD RETRIEVED ?
         BZ    PROC64                 NO: DONT SET MSGCLASS FIELD
         XR    R5,R5                  RESET R5
         ICM   R5,B'0011',0(R4)       R5: LENGTH OF DATA
         CH    R5,=H'10'              WAS FIELD RETRIEVED ?
         BNH   PROC64                 NO: DONT SET MSGCLASS FIELD
*---------------------------------------------------------------------*
         LA    R4,2+8(,R4)            R4: USRDATA ADDRESS
         XR    R5,R5                  RESET R5
         IC    R5,0(,R4)              R5: LENGTH OF USRDATA FIELD
         LA    R4,1(R5,R4)            R4: USRFLAG FIELD
         MVC   #C(1),0(R4)            MOVE ROOM USRFLG
*        B     PROC64                 GO TEST MSGCLASS VALIDITY
*=====================================================================*
         EJECT ,
***********************************************************************
****  PROC64:  VALIDATE MSGCLASS AND SET:                          ****
***********************************************************************
PROC64   DS    0H                  CONDITIONALLY SET MSGCLASS:
         CLI   #C,C'A'                VALID CHAR ?
         BL    PROC64N                NO: DONT MODIFY MSGCLASS
         CLI   #C,C'I'                VALID CHAR ?
         BNH   PROC64Y                YES: SET MSGCLASS
*
         CLI   #C,C'J'                VALID CHAR ?
         BL    PROC64N                NO: DONT MODIFY MSGCLASS
         CLI   #C,C'R'                VALID CHAR ?
         BNH   PROC64Y                YES: SET MSGCLASS
*
         CLI   #C,C'S'                VALID CHAR ?
         BL    PROC64N                NO: DONT MODIFY MSGCLASS
         CLI   #C,C'Z'                VALID CHAR ?
         BNH   PROC64Y                YES: SET MSGCLASS
*
         CLI   #C,C'0'                VALID CHAR ?
         BL    PROC64N                NO: DONT MODIFY MSGCLASS
         CLI   #C,C'9'                VALID CHAR ?
         BNH   PROC64Y                YES: SET MSGCLASS
         B     PROC64N                NO: DONT MODIFY MSGCLASS
*---------------------------------------------------------------------*
PROC64Y  DS    0H                  SET MSGCLASS:
         MVC   JCTMCLAS(1),#C         SET MSGCLASS
PROC64N  DS    0H                  DON'T SET MSGCLASS:
*=====================================================================*
         SPACE 2
***********************************************************************
****  PROC65:  MODIFY JOBLOG FLAGS:                                ****
***********************************************************************
PROC65   DS    0H                  SEE IF MSGCLASS=Z:
         CLI   JCTMCLAS,C'Z'          IS MSGCLASS=Z ?
         BE    PROC65Y                YES: SUPPRESS JOBLOG
*---------------------------------------------------------------------*
PROC65N  DS    0H                  KEEP THE JOBLOG:
         NI    JCTJOBFL,255-JCTNOUPT  FORCE OUTPUT
         NI    JCTJBOPT,255-JCTNOLOG  FORCE JOBLOG
         B     PROC65X                EXIT
*---------------------------------------------------------------------*
PROC65Y  DS    0H                  SUPPRESS THE JOBLOG:
         OI    JCTJBOPT,JCTNOLOG      SET NO JOBLOG
*        B     PROC65X                EXIT
*---------------------------------------------------------------------*
PROC65X  DS    0H                  JOBLOG PROCESSING COMPLETE:
*        B     PROC800                EXIT
*=====================================================================*
         EJECT ,
***********************************************************************
****  RETURN TO JES2:                                              ****
***********************************************************************
PROC800  DS    0H                  FREEMAIN WORKAREA:
         L     R0,#GMFM               R0: FREEMAIN PARM
         LA    R1,#AREA               R1: FREEMAIN AREA
         FREEMAIN R,LV=(0),A=(1)      FREEMAIN WORKAREA
*---------------------------------------------------------------------*
RETURN   DS    0H                  RETURN TO JES2:
         XR    R15,R15                SET RC=0
         $RETURN RC=(R15)
*=====================================================================*
         TITLE 'JES2 EXIT020 STC/TSU NAME ROOM AND MSGCLASS            X
               *** STATIC WORKING STORAGE AREA ***'
***********************************************************************
****  STATIC WORKING-STORAGE AREA:                                 ****
***********************************************************************
         LTORG ,                      LITERAL POOL
*---------------------------------------------------------------------*
BLANKS   DC    CL20' '
ANDMASK  DC    XL08'0F0F0F0F0F0F0F0F' EXTRACT LOW-NIBBLES
HEXCHARS DC    CL16'0123456789ABCDEF' TRANSLATE HEX TO EBCDIC
*---------------------------------------------------------------------*
         SPACE 1
***********************************************************************
****  ICHEINTY MACRO PLIST PROTOTYPE:                              ****
***********************************************************************
PLOCATE  ICHEINTY LOCATE,MF=L,        RACF PROFILE RETRIEVAL LIST:     X
               TYPE='USR',            - WE WANT 'USER' PROFILE         X
               FLDEF=ICHELIST,        - REMOTE ICHEACTN LIST           X
               ENTRY=R2,              - (R2) ADDR OF USERID AREA       X
               WKAREA=R3              - (R3) ADDR OF ANSWER AREA
*---------------------------------------------------------------------*
         SPACE 1
***********************************************************************
****  ICHEINTY REMOTE ACTION LIST:                                 ****
***********************************************************************
ICHELIST ICHEINTY FLDEF,MF=L,         SPECIFY ACTION/TEST LIST(S)      X
               ACTIONS=(ICHANAME,     - RETRIEVE PGMRNAME              X
               ICHAROOM,              - RETRIEVE USERDATA(ROOM)        X
               ICHAMCLS)              - RETRIEVE USERDATA(MSGCLASS)
*---------------------------------------------------------------------*
         EJECT ,
***********************************************************************
****  ACTION: RETRIEVE PROGRAMMER NAME FIELD:                      ****
***********************************************************************
ICHANAME ICHEACTN FIELD=PGMRNAME,MF=L
*---------------------------------------------------------------------*
         SPACE 1
***********************************************************************
****  ACTION: RETRIEVE USERDATA SEGMENT THAT HAS USRNM='ROOM'      ****
***********************************************************************
ICHAROOM ICHEACTN FIELD=USERDATA,TESTS=(ICHTROOM),MF=L
*---------------------------------------------------------------------*
ICHTROOM ICHETEST FIELD=USRNM,FLDATA=(8,ROOMKEY),COND=EQ,MF=L
ROOMKEY  DC    CL8'ROOM'              SEGMENT IDENTIFIER
*---------------------------------------------------------------------*
         EJECT ,
***********************************************************************
****  ACTION: RETRIEVE USERDATA SEGMENT THAT HAS USRNM='MSGCLASS'  ****
***********************************************************************
ICHAMCLS ICHEACTN FIELD=USERDATA,TESTS=(ICHTMCLS),MF=L
*---------------------------------------------------------------------*
ICHTMCLS ICHETEST FIELD=USRNM,FLDATA=(8,MCLSKEY),COND=EQ,MF=L
MCLSKEY  DC    CL8'MSGCLASS'          SEGMENT IDENTIFIER
*---------------------------------------------------------------------*
         SPACE 1
***********************************************************************
****  MSG1 ERROR MESSAGE:                                          ****
****  THIS WTO PLIST IS COPIED INTO DYNAMIC STORAGE, AND THEN      ****
****   ALTERED.  IN THIS WAY, THE CSECT CAN REMAIN RE-ENTRANT.     ****
***********************************************************************
MSG1     DS    0F                     WTO MESSAGE PLIST
         DC    AL2(MSG1E-MSG1B)       - WTO LENGTH PARM
         DC    BL2'1000000000000000'  - MCS FLAGS
MSG1B    DC    C'$JES0201: '          - MESSAGE ID
         DC    C'ICHRSV00 ERROR RC='
MSG1RC   DC    CL2'00'                - RETURN-CODE
         DC    C',R0='
MSG1R0   DC    CL2'00'                - REASON-CODE
         DC    C' JOB='
MSG1JOB  DC    CL8' '                 - JOBNAME
         DC    C' JOBNO='
MSG1JBNO DC    CL4'0000'              - JOB NUMBER
         DC    C' ID='
MSG1USER DC    CL8' '                 - USERID
         DC    BL2'0000000000000000'  - DESC=
         DC    BL2'0100000000100000'  - ROUTCDE=(2,11)
MSG1E    EQU   *                      END OF PLIST
MSG1LEN  EQU   MSG1E-MSG1             LENGTH OF ENTIRE PLIST
*---------------------------------------------------------------------*
END020   DS    0D                     END OF EXIT020 CSECT
*=====================================================================*
         TITLE 'JES2 EXIT020 STC/TSU NAME ROOM AND MSGCLASS            X
               *** EPILOGUE ***'
         $MODEND ,
*=====================================================================*
         TITLE 'JES2 EXIT020 STC/TSU NAME ROOM AND MSGCLASS            X
               *** LOCAL DSECTS ***'
***********************************************************************
****  DYNAMIC WORKING-STORAGE:    (BASED R9)                       ****
***********************************************************************
#AREA    DSECT ,
#GMFM    DS    F                      LENGTH OF THIS STORAGE AREA
*---------------------------------------------------------------------*
#F       DS    F                      FULL-WORD WORK
#D       DS    D                      DOUBLE-WORD WORK
#C       DS    C                      1-CHARACTER WORK
*---------------------------------------------------------------------*
#USERID  DS    0CL9                   USERID AREA:
#USERIDL DS    AL1                    - LENGTH OF USERID
#USERIDN DS    CL8                    - USERID
*---------------------------------------------------------------------*
#LOCATE  ICHEINTY LOCATE,MF=L,        RACF MANAGER PLIST AREA:         X
               TYPE='USR',            - WE WANT 'USER' PROFILE         X
               FLDEF=R0,              - REMOTE ICHEACTN LIST           X
               ENTRY=R2,              - (R2) ADDR OF USERID AREA       X
               WKAREA=R3              - (R3) ADDR OF ANSWER AREA
#LOCATEL EQU   *-#LOCATE
*---------------------------------------------------------------------*
         DS    0F                     #WKAREA POINTERS:
#PTRNAME DS    A                      - ADDR OF PGMRNAME UNIT
#PTRROOM DS    A                      - ADDR OF ROOM UNIT
#PTRMSGC DS    A                      - ADDR OF MSGCLASS UNIT
*---------------------------------------------------------------------*
         EJECT ,
*---------------------------------------------------------------------*
         DS    0D
#WTOMSG  DS    CL128                  WTO MESSAGE AREA:
*---------------------------------------------------------------------*
         SPACE 2
***********************************************************************
****  RACF WKAREA BUFFER:                                          ****
***********************************************************************
RACFAREA DS    0D                  RETURNED DATA FROM ICHEINTY:
RACALENG DS    A                      LENGTH OF BUFFER AREA
RACCNTL  DS    0XL30                  RESET AREA
RACRBA   DS    XL6
RACFLG1  DS    BL1
RACRSV1  DS    XL1
RACDUPCT DS    A
RACRSV2  DS    XL8
RACRLENG DS    F                      LENGTH OF RETURNED DATA
RACDATA  DS    CL1024                 AREA FOR RETURNED FIELDS
RACFEND  DS    0D                     END OF RACF RETURN BUFFER
*---------------------------------------------------------------------*
         SPACE 2
*---------------------------------------------------------------------*
#END     DS    0D                     END OF #AREA
#SIZE    EQU   *-#AREA                SIZE OF #AREA
*=====================================================================*
         TITLE 'JES2 EXIT020 STC/TSU NAME ROOM AND MSGCLASS            X
               *** SYSTEM DSECTS ***'
***********************************************************************
****  SYSTEM DSECTS:                                               ****
***********************************************************************
         PRINT NOGEN
         CVT   DSECT=YES,LIST=YES     CVT:  SYS1.AMODGEN
         ICHPRCVT ,                   RCVT: SYS1.MACLIB   (RACF)
*=====================================================================*
         END   ,
