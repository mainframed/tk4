ICHRCX01 TITLE 'RACHECK PRE-PROCESSING EXIT FOR FAILSOFT PROCESSING'
***********************************************************************
*                                                                     *
* MODULE NAME: ICHRCX01        (RACHECK PRE-PROCESSING EXIT)          *
*                                                                     *
* FUNCTION:    TO BYPASS FAILSOFT RESOURCE ACCESS REQUESTS THAT ARE   *
*              ISSUED TO THE CONSOLE WHEN RACF HAS BECOME INACTIVE.   *
*              THIS WAS DONE TO EXPEDITE THE TASKS THAT NEED TO BE    *
*              DONE IN THE EVENT RACF IS INACTIVE SO THAT RACF        *
*              CAN BE REACTIVATED. ALL ACCESS REQUESTS ARE GRANTED    *
*              BY THIS EXIT. THIS EXIT WILL ALSO ISSUE WTO LOGGING    *
*              MESSAGES INDICATING WHAT TYPE OF ACCESS WAS DONE AND   *
*              TO WHAT RESOURCE, AND BY WHOM.                         *
*                                                                     *
* OPERATION:                                                          *
*                                                                     *
*              IF RACF IS ACTIVE THEN SET RETURN CODE = 0             *
*              ELSE DO                                                *
*                   GET JOBNAME FROM ASCB                             *
*                   GET ACCESS INTENDED FROM RACHECK PARM LIST        *
*                   GET ENTITY NAME FROM RACHECK PARMLIST             *
*                   ISSUE A WTO INDICATING RACF IS INACTIVE           *
*                   PUT JOBNAME, ACCESS INTENDED, AND ENTITY INTO     *
*                        A WTO MESSAGE                                *
*                   ISSUE THE WTO LOGGING MESSAGE                     *
*                   SET RETURN CODE = 12                              *
*              END                                                    *
*              EXIT                                                   *
*                                                                     *
* MACROS USED: AMODE, RMODE, SAVE, GETMAIN, WTO, FREEMAIN, RETURN     *
*                                                                     *
* DATA AREAS:  ICHRCXPL, CVT, IHAASCB, ICHPRCVT                       *
*                                                                     *
* LINKAGE:     IBM STANDARD                                           *
*                                                                     *
* ATTRIBUTES:  RE-ENTRANT, LPA RESIDENT                               *
*                                                                     *
* RACF LEVEL:  RACF VERSION 1, RELEASE 8                              *
*                                                                     *
* RETURN CODES:                                                       *
*              R15 = 0   RACF IS ACTIVE, CONTINUE RACHECK PROCESSING  *
*              R15 = 12  RACF IS INACTIVE, DISCONTINUE RACHECK        *
*                        PROCESSING AND ALLOW THE REQUEST.            *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
* REGISTERS:   R0  - WORK REGISTER                                    *
*              R1  - PARM ADDRESS FROM RACHECK, WORK REGISTER         *
*              R2  - BASE FOR RACHECK PARAMETER LIST                  *
*              R3  - WORK REGISTER                                    *
*              R4  - WORK REGISTER                                    *
*              R5  - WORK REGISTER                                    *
*              R6  - NOT USED                                         *
*              R7  - BASE FOR ASCB                                    *
*              R8  - NOT USED                                         *
*              R9  - BASE FOR RCVT                                    *
*              R10 - BASE FOR CVT                                     *
*              R11 - LINKAGE                                          *
*              R12 - BASE REGISTER                                    *
*              R13 - LINKAGE                                          *
*              R14 - NOT USED                                         *
*              R15 - LINKAGE, WORK REGISTER                           *
*                                                                     *
* STUART SABEL  02/11/88                                              *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
* ENSURE ADDRESSABILITY, GETMAIN A WORK AREA, ETC.                    *
***********************************************************************
ICHRCX01 CSECT
ICHRCX01 AMODE 31                  SET ADDRESSING MODE TO 31-BIT
ICHRCX01 RMODE ANY                 SET RESIDENCY MODE TO ANY
         SAVE  (14,12),,ICHRCX01.&SYSDATE.&SYSTIME
         LR    R12,R15             PROGRAM ADDRESSABILITY
         USING ICHRCX01,R12        USE R12 AS THE BASE
         LR    R2,R1               SAVE PARM LIST ADDRESS IN R2
         USING RCXPL,R2            PARM LIST ADDRESSABILITY
         L     R0,WORKDLEN         DYNAMIC AREA SIZE TO R0
         GETMAIN R,LV=WORKDLEN     GETMAIN DYNAMIC AREA
         LR    R11,R1              DYNAMIC AREA ADDRESSABILITY
         USING WORKAREA,R11        WORK AREA ADDRESSABILITY
         ST    R13,SAVEAREA+4      SAVE CALLER'S SAVEAREA ADR
         ST    R11,8(,R13)         SAVE OUR SAVEAREA ADR
         LR    R13,R11             OUR SAVEAREA ADR TO R13
         EJECT
***********************************************************************
* CHECK TO SEE IF RACF IS ACTIVE BY LOOKING INTO THE RCVT (IF IT IS   *
* THERE). IF IT IS ACTIVE, EXIT IMMEDIATELY WITH 0 IN R15 WHICH WILL  *
* TELL RACHECK TO CONTINUE NORMAL PROCESSING. IF RACF IS INACTIVE, OR *
* THE RCVT IS NOT THERE, CONTINUE PROCESSING.                         *
***********************************************************************
         L     R10,X'10'           GET ADDRESS OF CVT
         USING CVT,R10             CVT ADDRESSABILITY
         L     R9,CVTRAC           GET THE RCVT ADDRESS
         USING RCVT,R9             RCVT ADDRESSABILITY
         LTR   R9,R9               IS THE RCVT THERE?
         BZ    NORACF              IF NOT, DO OUR OWN CHECKING
         TM    RCVTSTAT,RCVTRNA    IS RACF ACTIVE?
         BO    NORACF              IF NOT, DO OUR OWN CHECKING
         TM    RCVTFLGS,RCVTROFF   HAS RVARY INACTIVE BEEN ISSUED?
         BNZ   NORACF              IF NOT, DO OUR OWN CHECKING
         B     RETURN0             IF RACF IS ACTIVE, GET OUT NOW
         EJECT
***********************************************************************
* AT THIS POINT, RACF IS NOT ACTIVE. GET THE JOBNAME, STCNAME, OR     *
* USER-ID FROM THE ASCB. GET THE ACCESS REQUESTED, AND THE ENTITY     *
* NAME THAT THE USER IS TRYING TO ACCESS FROM THE RACHECK PARAMETER   *
* LIST.                                                               *
***********************************************************************
NORACF   L     R1,CVTTCBP          GET THE CURRENT TCB POINTER
         L     R7,12(,R1)          GET THE CURRENT ASCB POINTER
         USING ASCB,R7             ASCB ADDRESSABILITY
         ICM   R4,B'1111',ASCBJBNI GET JOBNAME POINTER FOR JOBS
         BNZ   GOTNAME             IF NOT ZERO, IT IS A JOB NAME
         ICM   R4,B'1111',ASCBJBNS GET JOBNAME PTR FOR STC OR TSO USER
GOTNAME  EQU   *
         MVC   WTOMSG(WTOPL),WTOP  MOVE IN SKELETON WTO
         MVC   LOG(MSGLEN),LOGP    MOVE IN SKELETON MESSAGE
         MVC   JOBNAME(8),0(R4)    COPY USER/JOB/STC NAME
         L     R5,RCXENORP         GET THE ADDRESS OF ENTITY NAME
         MVC   ENTITY(44),0(R5)    GET THE ENTITY NAME
CHKALT   L     R1,RCXFLAG2         GET AUTHORITY REQUESTED
         MVC   AUTH,=CL8'NONE'     ASSUME AUTHORIZATION TO BE NONE
         TM    0(R1),RCXATTAL      WAS ALTER REQUESTED?
         BNO   CHKCON              NO, CHECK NEXT LEVEL
         MVC   AUTH,=CL8'ALTER'    YES, SAVE AUTHORITY REQUESTED
CHKCON   TM    0(R1),RCXATTCO      WAS CONTROL REQUESTED?
         BNO   CHKUP               NO, CHECK NEXT LEVEL
         MVC   AUTH,=CL8'CONTROL'  YES, SAVE AUTHORITY REQUESTED
CHKUP    TM    0(R1),RCXATTUP      WAS UPDATE REQUESTED?
         BNO   CHKREAD             NO, CHECK NEXT LEVEL
         MVC   AUTH,=CL8'UPDATE'   YES, SAVE AUTHORITY REQEUSTED
CHKREAD  TM    0(R1),RCXATTRE      WAS READ REQUESTED?
         BNO   WTOIT               NO, CHECK NEXT LEVEL
         MVC   AUTH,=CL8'READ'     YES, SAVE AUTHORITY REQEUSTED
         EJECT
***********************************************************************
* ISSUE THE WTO MESSAGES TO ENSURE AN AUDIT TRAIL                     *
***********************************************************************
WTOIT    WTO   'ICHRCX01 -- **** WARNING **** RACF IS NOT ACTIVE ****',X
               ROUTCDE=(9,11)
         MVC   WTOMSG+4(MSGLEN),LOG  MOVE IN ACTUAL LOG MESSAGE
         WTO   MF=(E,WTOMSG)       WRITE THE MESSAGE
         EJECT
***********************************************************************
* CLEAN UP, SET RETURN CODES AND QUIT                                 *
***********************************************************************
         LA    R3,12               SET RETURN CODE TO ALLOW ACCESS
         B     EXIT                GO CLEAN UP AND QUIT
RETURN0  LA    R3,0                SET RETURN CODE TO CONTINUE RACHECK
EXIT     L     R13,SAVEAREA+4      RESTORE R13
         L     R0,WORKDLEN         DYNAMIC AREA SIZE TO R0
         LR    R1,R11              DYNAMIC DATA ADDRESS TO R1
         FREEMAIN R,A=(R1),        FREEMAIN DYNAMIC AREA               *
               LV=WORKDLEN         DYNAMIC
         LR    R15,R3              LOAD RETURN CODE
         RETURN (14,12),T,RC=(15)  RESTORE REGISTERS AND RETURN
         EJECT
***********************************************************************
* DEFINITIONS FOR CONSTANTS                                           *
***********************************************************************
WTOP     WTO   '                                                       X
                                                           ',MF=L,     X
               ROUTCDE=(9,11)
WTOPL    EQU   *-WTOP              LENGTH OF PROTOTYPE WTO LIST
WTOLOG   WTO   'ICHRCX01 -- JOB=XXXXXXXX, ACCESS=XXXXXXXX, ENTITY=XXXXXX
               XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',MF=L,          X
               ROUTCDE=(9,11)
LOGP     DS    0CL99
         DC    CL16'ICHRCX01 -- JOB='
JOBNAMEP DC    CL08' '
         DC    CL09', ACCESS='
AUTHP    DC    CL08' '
         DC    CL09', ENTITY='
ENTITYP  DC    CL44' '
         DC    CL05' '
MSGLEN   EQU   *-LOGP
         LTORG
         EJECT
***********************************************************************
* GETMAINED DYNAMIC AREA                                              *
***********************************************************************
WORKAREA DSECT
SAVEAREA DS    18F                 REGISTER SAVE AREA
WTOMSG   WTO   '1234567890123456789012345678901234567890123456789012345X
               67890123456789012345678901234567890123456789',MF=L,     X
               ROUTCDE=(9,11)
LOG      DS    0CL99
         DC    CL16'ICHRCX01 -- JOB='
JOBNAME  DC    CL08' '
         DC    CL09', ACCESS='
AUTH     DC    CL08' '
         DC    CL09', ENTITY='
ENTITY   DC    CL44' '
         DC    CL05' '
         ORG
         DS    0D
WORKDLEN EQU   *-WORKAREA          LENGTH OF DSECT
         EJECT
***********************************************************************
* DSECTS AND DATA AREAS                                               *
***********************************************************************
         CVT   DSECT=YES,LIST=YES
         EJECT
         IHAASCB
         EJECT
         ICHPRCVT
         EJECT
         ICHRCXP
         EJECT
***********************************************************************
* EQUATE REGISTERS 1-15 WITH R1-R15                                   *
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END   ICHRCX01
