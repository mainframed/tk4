         PRINT NOGEN
SUBX     TITLE 'SUBMIT EXIT FOR THE INSERTION OF RACF INFORMATION'
*---------------------------------------------------------------------*
*   R O S C O E  S U B M I T  E X I T                                 *
*---------------------------------------------------------------------*
* MODIFICATION HISTORY
* GARY M. BOATMAN 7 AUG 84
*  INSERT RACF USER INFORMATION DURING SUBMIT PROCESSING
*  THIS ROUTINE OPERATES ON ALL JOBCARDS IN THE SUBMIT.
*  JCL CARDS ENCOUNTERED AFTER ,DLM=  ARE SKIPPED UNTIL
*  THE DELIMITER IS ENCOUNTERED.
*  RACF CARD IS INSERTED AS THE LAST JOBCARD.  THIS VERSION IS NOT
*  AFFECTED BY THE PRESENCE OF COMMENTS.
*  RESTRICTIONS:
*    JOB AND ,DLM=   FIRST CHARACTER MUST BE CODED PROIR TO CC 31
*
*
* DAVE CALDWELL   5 OCT 86, BLUE CROSS OF WA/AK
* ADDED BCWA STANDARDS : LABELS = BLUC00   CHECKS ACCOUNTING FIELD
*                      : LABELS = BLUC01   CHECKS JOBNAME
*                      : LABELS = BLUC02   CHECKS JOB CLASS
*                      : LABELS = BLUC03   CHECKS JOB PRTY
*                      : LABELS = BLUC04   CHECKS JOB TIME
*
*
*        SUBEXIT ROSCOE SUBMIT USER EXIT                              *
*                                                                     *
*        AT ENTRY:                                                    *
*              R1   --> PARMLIST (UXDSECT)                            *
*              R14  --> RETURN ADDRESS                                *
*              R15  --> ENTRY POINT                                   *
*                                                                     *
*        FOR INFORMATION ABOUT THE PARAMETERS                         *
*        LIST UXDSECT MACROS EXIT=SUB                                 *
*                                                                     *
*        AT EXIT:                                                     *
*              R15 = RETURN CODE (0 THRU 16)                          *
*                                                                     *
*        ATTRIBUTES: REENTRABLE                                       *
*---------------------------------------------------------------------*
*
*---------------------------------------------------------------------*
*        DSECT WORK AREA (REENTRANT)                                  *
*---------------------------------------------------------------------*
*
SUBXWK   DSECT
AJOBCRD  DS    A                       ADDRESS OF JCL CARD
ARACFCRD DS    A                       ADDRESS OF RACF CARD
JOBCRD   DS    CL80                    JCL CARD
RACFCRD  DS    CL80                    RACF CARD
USERID   EQU   RACFCRD+20
SUBXLEN  EQU   (((*-SUBXWK+255)/256)*256)
*
         UXDSECT EXIT=SUB
         IHAACEE
         ROT
         SCB
         PCB
*
SUBEXIT  CSECT
         UXENTER REG=(R12)
         L     R11,0(R1)               R11 --> UXDSECT
         USING UXDSECT,R11
         L     R10,UXSCBADR            R10 --> SCB
         USING SCB,R10
*        CLC   SCBUSER1(12),=XL12'00'  ACFEXIT DATA SAVED ?
*        BE    EXIT0                     NO CONTINUE PROCESSING
         L     R9,UXPCBADR             R9  --> PCB
         USING PCB,R9
         L     R8,UXROTADR             R8  --> ROT
         USING ROT,R8
         L     R2,UXCODE               ADDRESS USER EXIT CODE
         SR    R3,R3                   CLEAR REG 3
         IC    R3,3(R2)                INSERT UXCODE VALUE
         B     *+4(R3)                   AND BRANCH
         B     INITL                   INITIAL CALL    (0)
         B     NEXT                    NEXT RECORD     (4)
         B     ERROR                   ERROR           (8)  *
         B     LIBMAST                 OPEN LIB MASTER (12) *
         B     ENDIP                   END INPUT       (16) *
         B     LASTCALL                FINAL CALL      (20)
         B     LASTCALL                SUBTASK ABORT   (24)
*     "*" INDICATES NO ACTION TAKEN ON THESE CALLS
*---------------------------------------------------------------------*
*        INITIAL CALL  GETMAIN WORK AREA
*---------------------------------------------------------------------*
*
INITL    XC    UXWKAREA(16),UXWKAREA   CLEAR USER WORK AREA
         GETMAIN RC,LV=256
         LTR   R15,R15                 CHECK RETURN CODE
         BZ    INITL01                   OK
         B     EXIT0
*
INITL01  DS    0H
         ST    R1,UXWKAREA             SAVE GETMAIN ADDR IN UXWKAREA
         B     EXIT0
*---------------------------------------------------------------------*
*        CALLS WITH NEXT RECORD                                       *
*---------------------------------------------------------------------*
*
NEXT     DS    0H
         L     R7,UXWKAREA             LOAD WORKAREA ADDRESS
         USING SUBXWK,R7
         LTR   R7,R7                   CORE OBTAINED ?
         BZ    NOCORE                    NO
         L     R1,UXSUBREC             R1 --> FIRST CARD
         CLC   UXWKAREA+4(2),=X'0000'    IS THE DELIMITER INACTIVE
         BE    NEXT01                    YES CONTINUE
         CLC   0(2,R1),UXWKAREA+4      IS CC 1-2 THE DLM
         BNE   EXIT0                     NO  EXIT
         MVC   UXWKAREA+4(2),=X'0000'  YES MAKE DLM INACTIVE
         B     EXIT0                     AND EXIT
*
NEXT01   DS    0H
         CLC   0(10,R1),=C'/*PRIORITY' JES2 PRIORITY CARD ?
         BE    EXIT0                     YES
         CLC   0(1,R1),=C' '           CC 1-2 SPACE
         BE    EXIT0                     YES EXIT
         CLC   0(3,R1),=C'//*'         CC 1-3 COMMENT
         BE    EXIT0                     YES EXIT
         CLC   0(2,R1),=C'/*'          CC 1-2 DATA EOF
         BE    EXIT0                     YES EXIT
         CLC   0(2,R1),=C'//'          CC1-2 JCL CARD
         BNE   EXIT0                     NO EXIT
         CLI   UXWKAREA+6,C'C'         JOB CONTINUATION CARD ?
         BE    NEXTEX0                   YES
         CLC   0(3,R1),=C'// '         ANOTHER CONTINUATION ?
         BE    EXIT0                     EXIT
         MVC   JOBCRD(80),0(R1)        MOVE JCL CARD
         LA    R3,JOBCRD               SET FOR SCAN
         LA    R4,JOBCRD
         LA    R4,29(R4)               END AT CC 30
         LA    R3,3(R3)                BEGIN AT CC 4
*
NEXT02   DS    0H                       SCAN FOR JOB OR ,DLM=
         CLC   0(5,R3),=C' JOB '       JOB ?
         BE    NEXT05                    YES
         CLC   0(5,R3),=C',DLM='       ,DLM= ?
         BE    NEXT03                    YES
         LA    R3,1(R3)                BUMP INDEX
         CR    R3,R4                   RIGHT SIDE LIMIT ?
         BE    EXIT0                     YES EXIT
         B     NEXT02                  SCAN MORE
*
NEXT03   DS    0H                      ,DLM= WAS ENCOUNTERED
         LA    R3,5(R3)                BUMP PAST = IN ,DLM=
         CLC   0(1,R3),=X'7D'          QUOTE ?
         BE    NEXT04                    YES
         MVC   UXWKAREA+4(2),0(R3)     MOVE DELIMITER TO SAVE AREA
         B     EXIT0
*
NEXT04   DS    0H                      DLM HAS QUOTES
         MVC   UXWKAREA+4(2),1(R3)     MOVE DELIMITER TO SAVE AREA
         B     EXIT0
*
NEXT05   DS    0H                      PROCESS ADD OF RACF CARD
         MVI   UXWKAREA+6,C'J'         SHOW JOB CARD BEING PROCESSED
         LA    R3,5(R3)                BUMP INDEX
         MVC   RACFCRD(80),USEREQ      MOVE USER=
         LA    R4,USERID
         MVC   USERID(7),ACCNUM        MOVE ACCNUM
*
*---------------------------------------------------------------------
*
BLUC0    DS    0H
         CLC   0(1,R3),=C' '           FIND ACCOUNT FIELD
         BNE   BLUC00
         LA    R3,1(R3)                BUMP INDEX
         B     BLUC0
*
*
BLUC00   DS    0H                      CHECK ACCOUNT FIELD
         LA    R4,ACCTABLE             POINT TO TABLE
BLUC000  DS    0H                      CHECK ACCOUNT FIELD
         CLC   0(3,R3),0(R4)
         BE    BLUC01
         CLC   0(3,R4),=C'999'
         BE    BLUCERR0
         LA    R4,4(R4)                BUMP POINTER
         B     BLUC000
*
*
BLUC01   DS    0H                      LOOK AT JOB NAME
         LA    R4,USERID
         CLC   ACCNUM(2),=C'TS'        EXEMPT TECH SUPPORT
         BE    NEXT06
         CLC   ACCNUM(2),=C'OP'        EXEMPT OPERATIONS
         BE    NEXT06
*
         CLC   ACCNUM(5),=C'TSIBM'     EXEMPT IBM, GEORGE B.
         BE    NEXT06
         CLC   ACCNUM(7),=C'US02435'   EXEMPT ACCOUNTING.
         BE    NEXT06
         CLC   ACCNUM(7),=C'US03933'   EXEMPT ACCOUNTING.
         BE    NEXT06
         CLC   ACCNUM(7),=C'US02160'   EXEMPT ACCOUNTING.
         BE    NEXT06
         CLC   ACCNUM(7),=C'US05721'   EXEMPT ACCOUNTING.
         BE    NEXT06
         CLC   ACCNUM(6),=C'IC4402'    EXEMPT ACCOUNTING.
         BE    NEXT06
         CLC   ACCNUM(6),=C'IC5514'    EXEMPT ACCOUNTING.
         BE    NEXT06
         CLC   ACCNUM(6),=C'IC4488'    EXEMPT ACCOUNTING.
         BE    NEXT06
         CLC   ACCNUM(6),=C'IC5837'    EXEMPT ACCOUNTING.
         BE    NEXT06
*
*
         CLC   ACCNUM(2),=C'IC'        TEST FOR IC
         BE    BLUC21
         CLC   2(7,R1),ACCNUM          FORCE USERID
         BE    NEXT06
         B     BLUCERR1
*
BLUC21   DS    0H
         CLC   2(6,R1),ACCNUM          FORCE USERID
         BE    NEXT06
         B     BLUCERR1
*
*
NEXT06   DS    0H
         CLI   0(R4),C' '              FIRST BLANK AFTER USERID ?
         BE    NEXT07                    YES
         LA    R4,1(R4)                BUMP TO NEXT BYTE
         B     NEXT06                  AND LOOK AGAIN
*
NEXT07   DS    0H                      FIRST CHARACTER AFTER USERID
         L     R10,UXSCBADR            R10 --> SCB
         USING SCB,R10
*
         CLC   SCBUSER1(12),=XL12'00'  ACFEXIT DATA SAVED ?
         BE    NEXTEX1                   NO BRANCH AROUND
*
         MVC   0(10,R4),PASSEQ         MOVE ,PASSWORD=
         LA    R4,10(R4)               BUMP R4 PAST ,PASSWORD=
         XC    SCBUSER1(12),ACCSONT+1  UNMASK LENGTH AND PASSWORD
         XR    R5,R5                   CLEAR R5
         IC    R5,SCBUSER1             INSERT PASSWORD LENGTH
         BCTR  R5,0                    DECREMENT BY 1 FOR EXECUTE MVC
         EX    R5,MOVEPSW              MOVE PASSWORD
         XC    SCBUSER1(12),ACCSONT+1  REMASK LENGTH AND PASSWORD
         AR    R4,R5                   ADD LENGTH OF PASSWORD TO R4
         LA    R2,1(R4)                POINT R2 PAST PASSWORD (GMB)
         L     R6,SCBACFB              ACEE ADDRESS POINTER
         LTR   R6,R6                   ACEE PRESENT ?
         BZ    NEXTEX1                   NO SKIP FOLLOWING TEST
         USING ACEE,R6
         MVC   0(7,R2),=CL7',GROUP='
         MVC   7(8,R2),ACEEGRPN
*
*        CLC   ACEEGRPN,=CL8'TECHSVCS'       TECH SERVICES USER?
*        BE    NEXTEX1                         YES
*        CLC   ACEEGRPN,=CL8'OPNS'           OPERATIONS
*        BE    NEXTEX1                         YES
*        MVC   JOBCRD+2(3),ACCNUM            OTHER BCWA USERID
*
         B     NEXTEX1
*
NEXTEX0  DS    0H                      JOB CONTINUATION ENCOUNTERED
         MVC   JOBCRD(80),0(R1)        MOVE JCL CARD
         LA    R1,JOBCRD               R1 ---> JOBCRD
         LA    R3,2(R1)                SET FOR SCAN
         B     NEXTEX1B
*
NEXTEX1  DS    0H                      PROCESS CONTINUATIONS ETC.
         LA    R1,JOBCRD               R1 ---> JOBCRD
*
*
NEXTEX1B DS    0H
         LA    R4,1                    SET FOR INCREMENT
         LA    R5,71(R1)               POINT AT RIGHT SIDE LIMIT
*
NEXTEX1C DS    0H                      FIND START OF OPERAND
         CLI   0(R3),C' '              LOOK FOR 1ST NON BLANK
         BNE   NEXTEX2                 1ST NON-BLANK FOUND
         BXH   R3,R4,NEXTEX3           DO IT UNTIL LIMIT
         B     NEXTEX1C                GO TRY AGAIN FOR 1ST NON-BLANK
*
NEXTEX2  DS    0H                      START OF OPERAND WAS FOUND
*
         CLC   0(8,R3),=C'MSGCLASS'    SKIP MSGCLASS
         BNE   BLUC02
         LA    R3,8(R3)                BUMP INDEX PAST
         B     BLUNEXT                 GO AGAIN
*
BLUC02   DS    0H
         CLC   0(6,R3),=C'CLASS='      CHECK CLASS
         BNE   BLUC03
         CLC   ACCNUM(3),=C'TS0'       EXEMPT TECH SUPPORT
         BE    BLUNEXT
         CLC   ACCNUM(3),=C'OP0'       EXEMPT OPERATIONS
         BE    BLUNEXT
*
         CLC   ACCNUM(5),=C'TSIBM'     EXEMPT IBM, GEORGE B.
         BE    BLUNEXT
         CLC   ACCNUM(7),=C'US02435'   EXEMPT ACCOUNTING.
         BE    BLUNEXT
         CLC   ACCNUM(7),=C'US03933'   EXEMPT ACCOUNTING.
         BE    BLUNEXT
         CLC   ACCNUM(7),=C'US02160'   EXEMPT ACCOUNTING.
         BE    BLUNEXT
         CLC   ACCNUM(7),=C'US05721'   EXEMPT ACCOUNTING.
         BE    BLUNEXT
         CLC   ACCNUM(6),=C'IC4402'    EXEMPT ACCOUNTING.
         BE    BLUNEXT
         CLC   ACCNUM(6),=C'IC5514'    EXEMPT ACCOUNTING.
         BE    BLUNEXT
         CLC   ACCNUM(6),=C'IC4488'    EXEMPT ACCOUNTING.
         BE    BLUNEXT
         CLC   ACCNUM(6),=C'IC5837'    EXEMPT ACCOUNTING.
         BE    BLUNEXT
*
         CLC   6(1,R3),=C'K'           ALLOW CLASS=K
         BE    BLUNEXT
         CLC   6(1,R3),=C'R'           ALLOW CLASS=R
         BE    BLUNEXT
         CLC   6(1,R3),=C'L'           ALLOW CLASS=L
         BE    BLUNEXT
         CLC   6(1,R3),=C'T'           ALLOW CLASS=T
         BE    BLUNEXT
         CLC   6(1,R3),=C'M'           ALLOW CLASS=M
         BE    BLUNEXT
         CLC   6(1,R3),=C'N'           ALLOW CLASS=N
         BE    BLUNEXT
         B   BLUCERR2
*
BLUC03   DS    0H
         CLC   0(5,R3),=C'PRTY='       CHECK PRTY
         BNE   BLUC04
         CLC   ACCNUM(3),=C'TS0'       EXEMPT TECH SUPPORT
         BE    BLUNEXT
         CLC   ACCNUM(3),=C'OP0'       EXEMPT OPERATIONS
         BE    BLUNEXT
         CLC   ACCNUM(5),=C'TSIBM'     EXEMPT IBM, GEORGE B.
         BE    BLUNEXT
         CLC   6(1,R3),=C' '           CHECK FOR 2 DIGIT PRTY
         BE    BLUNEXT
         CLC   6(1,R3),=C','
         BE    BLUNEXT
         B     BLUCERR3
*
BLUC04   DS    0H
         CLC   ACCNUM(3),=C'TS0'       EXEMPT TECH SUPPORT
         BE    BLUNEXT
         CLC   ACCNUM(3),=C'OP0'       EXEMPT OPERATIONS
         BE    BLUNEXT
         CLC   ACCNUM(5),=C'TSIBM'     EXEMPT IBM, GEORGE B.
         BE    BLUNEXT
         CLC   0(5,R3),=C'TIME='       CHECK TIME
         BE    BLUCERR4
*
BLUNEXT  DS    0H
*
         CLI   0(R3),X'7D'             BEGINNING QUOTE ?
         BE    NEXTEX2E                  YES
         CLI   0(R3),C' '              BLANK ?
         BE    NEXTEX3                   YES
*
NEXTEX2C BXH   R3,R4,NEXTEX3           SCAN FOR BLANK OR QUOTE
         B     NEXTEX2                 UNTIL LIMIT REACHED
*
NEXTEX2D DS    0H                      SCAN FOR THE SECOND QUOTE
         CLI   0(R3),X'7D'             2ND QUOTE ?
         BE    NEXTEX2C                  YES CONTINUE MAIN SCAN
*
NEXTEX2E DS    0H                      SCAN FOR SECOND QUOTE
         BXLE  R3,R4,NEXTEX2D          DO IT UNTIL LIMIT
*
NEXTEX3  DS    0H                      END OF OPERAND FOUND
         AH    R3,=H'-1'               BACKUP 1 BYTE
         CLI   0(R3),C','              CONTINUATION INDICATED
         BNE   NEXTEX99                  NO NEXT99
*
NEXTEX4  DS    0H                      CARD IS CONTINUED
         CLI   UXWKAREA+6,C'J'         JOB CARD BEING PROCESSED ?
         BNE   EXIT0                   NO CONTINUATION BUT NOT 'JOB'
*
NEXTEX98 DS    0H                      CONTINUED AND 'JOB'
         LA    R14,JOBCRD              PUT JOBCARD IN LIST
         ST    R14,AJOBCRD             "
         OI    AJOBCRD,X'80'             END OF LIST
         MVI   UXWKAREA+6,C'C'         SHOW JOB CONTINUATION IS NEXT
         B     INSERT
*
NEXTEX99 DS    0H                      CARD NOT CONTINUED
         CLC   SCBUSER1(12),=XL12'00'  ACFEXIT DATA SAVED ?
         BE    EXIT0                     NO CONTINUE PROCESSING
         LA    R3,1(R3)                INCREMENT POINTER
         MVI   0(R3),C','              CONTINUE THE CARD
         LA    R14,JOBCRD              PUT CARD IN LIST
         ST    R14,AJOBCRD             "
         LA    R14,RACFCRD             PUT RACF CARD IN LIST
         ST    R14,ARACFCRD            "
         OI    ARACFCRD,X'80'            END OF LIST
         MVI   UXWKAREA+6,C' '         SHOW PROCESSING COMPLETE
*
*
*
INSERT   DS    0H
         L     R14,UXSUBRCO            ESTABLISH
         LA    R1,AJOBCRD                PARMLIST
         ST    R1,0(R14)                   ADDRESSABILITY
         LA    R15,8                   SET INSERT RETURN CODE
         B     EXIT                    AND BRANCH TO EXIT
*
NOCORE   DS    0H
         L     R2,UXRETFLG
         OI    0(R2),X'80'             INDICATE USER MESSAGE
         L     R2,UXMSGADR             SET UP MESSAGE IN
         MVC   0(L'CMSG+4,R2),CMSGA      AREA
         LA    R15,12                  SET CANCEL RET. CODE
         B     EXIT                    AND GO TO EXIT
*
*
BLUCERR0 DS    0H
         L     R2,UXRETFLG
         OI    0(R2),X'80'             INDICATE USER MESSAGE
         L     R2,UXMSGADR             SET UP MESSAGE IN
         MVC   0(L'BLM0+4,R2),BLM0A      AREA
         LA    R15,12                  SET CANCEL RET. CODE
         B     EXIT                    AND GO TO EXIT
*
BLUCERR1 DS    0H
         L     R2,UXRETFLG
         OI    0(R2),X'80'             INDICATE USER MESSAGE
         L     R2,UXMSGADR             SET UP MESSAGE IN
         MVC   0(L'BLM1+4,R2),BLM1A      AREA
         LA    R15,12                  SET CANCEL RET. CODE
         B     EXIT                    AND GO TO EXIT
*
BLUCERR2 DS    0H
         L     R2,UXRETFLG
         OI    0(R2),X'80'             INDICATE USER MESSAGE
         L     R2,UXMSGADR             SET UP MESSAGE IN
         MVC   0(L'BLM2+4,R2),BLM2A      AREA
         LA    R15,12                  SET CANCEL RET. CODE
         B     EXIT                    AND GO TO EXIT
*
BLUCERR3 DS    0H
         L     R2,UXRETFLG
         OI    0(R2),X'80'             INDICATE USER MESSAGE
         L     R2,UXMSGADR             SET UP MESSAGE IN
         MVC   0(L'BLM3+4,R2),BLM3A      AREA
         LA    R15,12                  SET CANCEL RET. CODE
         B     EXIT                    AND GO TO EXIT
*
BLUCERR4 DS    0H
         L     R2,UXRETFLG
         OI    0(R2),X'80'             INDICATE USER MESSAGE
         L     R2,UXMSGADR             SET UP MESSAGE IN
         MVC   0(L'BLM4+4,R2),BLM4A      AREA
         LA    R15,12                  SET CANCEL RET. CODE
         B     EXIT                    AND GO TO EXIT
*
LASTCALL DS    0H
         L     R1,UXWKAREA             LOAD GETMAINED ADDRESS
         LTR   R1,R1                   CHECK THAT WE HAVE CORE TO FREE
         BZ    EXIT0                     NO CORE EXIT0
         FREEMAIN R,LV=256,A=(1)
         XC    UXWKAREA(16),UXWKAREA   CLEAR AREA
*
EXIT0    DS    0H
         SLR   R15,R15                 SET REG 15 TO 0
*
EXIT     EQU   *                       COMMON EXIT ADDRESS
         UXEXIT RC=(15)                RETURN WITH RC IN R15
*---------------------------------------------------------------------*
*        CONSTANTS AND EQUATES       .                                *
*---------------------------------------------------------------------*
LIBMAST  EQU   EXIT0
ERROR    EQU   EXIT0
ENDIP    EQU   EXIT0
CMSGA    DC    AL2(L'CMSG)
         DC    X'0000'
CMSG     DC    C'SUBEXIT:  INSUFFICIENT CORE AVAILABLE TO SUBMIT.'
*
BLM0A    DC    AL2(L'BLM0)
         DC    X'0000'
BLM0     DC    C'SUBEXIT:  BAD JOBCARD, ACCOUNT FIELD UNKNOWN.'
*
BLM1A    DC    AL2(L'BLM1)
         DC    X'0000'
BLM1     DC    C'SUBEXIT:  BAD JOBCARD, JOBNAME NOT USER-ID.'
*
BLM2A    DC    AL2(L'BLM2)
         DC    X'0000'
BLM2     DC    C'SUBEXIT:  BAD JOBCARD, CLASS NE (K,R,L,T,M,N).'
*
BLM3A    DC    AL2(L'BLM3)
         DC    X'0000'
BLM3     DC    C'SUBEXIT:  BAD JOBCARD, PRIORITY  MUST BE 1 DIGIT.'
*
BLM4A    DC    AL2(L'BLM4)
         DC    X'0000'
BLM4     DC    C'SUBEXIT:  BAD JOBCARD, TIME PARM NOT ALLOWED.'
*
USEREQ   DC    CL80'//             USER='
PASSEQ   DC    CL10',PASSWORD='
*
MOVEPSW  MVC   0(*-*,R4),SCBUSER1+1 **---> EXECUTE ONLY <---**
*
*
*ACCTABLE LENGTH OF EACH LINE = 40 CHARS
*ACCTABLE MUST END WITH 999
*
ACCTABLE DS    0CL(920)
         DC    C'ABA,ACA,ACE,ACT,ADF,AHP,AIR,AMB,AME,AMS,'
         DC    C'APS,AZZ,BAD,BAE,BAM,BCE,BCI,BCM,BMX,BOS,'
         DC    C'BPS,BTA,BTS,CAE,CCC,CDP,CDS,CES,CIS,CLE,'
         DC    C'CME,CMG,CMP,CMS,COB,COP,COS,COT,CPD,CPE,'
         DC    C'CPS,CQE,CSE,CWE,CWP,CZZ,DBS,DDD,DEF,DEM,'
         DC    C'DFH,DFS,DIA,DIC,DIT,DMS,DPI,DYL,EMC,EMS,'
         DC    C'EOB,ESS,FDR,FEP,FMA,FPS,GAS,GCS,GFS,GLS,'
         DC    C'GSI,HED,HEM,HME,HMO,HPS,ICG,ICI,ICU,IMP,'
         DC    C'IMS,INV,IPB,IPR,IPW,ITS,JBA,KCE,LIB,LKE,'
         DC    C'MAR,MDA,MIS,MMF,MOS,MPR,MPS,MTH,MTP,MTT,'
         DC    C'NPC,OLD,OSS,PAY,PCA,PCS,PIN,PPS,PRF,PUR,'
         DC    C'PWP,RCE,REF,RME,RMF,ROS,SBS,SBU,SDP,SEC,'
         DC    C'SID,SMP,SOS,SOT,SQT,SSS,SUS,SYN,SYS,TMS,'
         DC    C'UCR,UMS,UWC,UWE,UWI,UWM,UWS,VCI,VSA,VTY,'
         DC    C'WEA,WME,WPS,XSS,ZCR,ZWM,ZZZ,SLS,MCC,CHM,'
         DC    C'M01,M02,M03,M04,M05,M06,M07,M08,M09,M10,'
         DC    C'M11,M12,M13,M14,M15,M16,M17,M18,M19,M20,'
         DC    C'F01,F02,F03,F04,F05,F06,F07,F08,F09,F10,'
         DC    C'F11,F12,F13,F14,F15,F16,F17,F18,F19,F20,'
         DC    C'C01,C02,C03,C04,C05,C06,C07,C08,C09,C10,'
         DC    C'C11,C12,C13,C14,C15,C16,C17,C18,C19,C20,'
         DC    C'CHA,TSO,GLC,GSF,MBR,MCC,XIC,STR,999,XXX,'
         DC    C'XXX,XXX,XXX,XXX,XXX,XXX,XXX,XXX,XXX,999,'
*
         LTORG
*
         END
