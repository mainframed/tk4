CMD007   TITLE 'SET RACF USER PROFILE FOR TSU/STC'
***********************************************************************
*                                                                     *
* USERMOD:  MCMD007                                                   *
* TITLE:    TSO-CP SETUSER: SET RACF USER PROFILE FOR TSU/STC         *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
* SYSMOD TYPE:          SOURCE ASSEMBLY                               *
* TARGET ELEMENT NAME:  CMDLIB(SETUSER)                               *
*                       HELP(SETUSER)                                 *
* LEVEL:                                                              *
*                                                                     *
* VENDOR AND/OR COMPONENT:                                            *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
* ABSTRACT:                                                           *
*    THE SETUSER COMMAND PROVIDES A MEANS (SIMILAR TO ALTUSER)        *
*    TO UPDATE AND/OR LIST THE RACF USERID PROFILE ATTRIBUTES         *
*    IN THE USERDATA FIELDS.                                          *
*                                                                     *
* REQUIRED SMP DDNAMES:                                               *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
* CHANGE LOG:                                                         *
*                                                                     *
*  Change Log:                                                        *
*  09/06/86  MKH  Initial Version                                  001*
*  10/26/86  MKH  Rewrite Version                                  002*
*  01/18/87  MKH  Fix ABEND0C4 due to AMODE problems.              003*
*                                                                     *
*  Change Level:                                                      *
         LCLC  &LEVEL,&MODDATE,&UMOD                                  *
&LEVEL   SETC  '003'           <---- Current Modification Level       *
&UMOD    SETC  'MCMD007'       <---- SMP Sysmod ID                    *
&MODDATE SETC  '01/18/87-MKH'  <---- Modification Date and Author     *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
*  METHOD:                                                            *
*     IKJPARSE is invoked to breakdown the command text as entered    *
*     by the TSO user.  We then obtain the current ACEE to determine  *
*     whether the user is authorized to perform the operation.        *
*     If the user wishes to inspect or alter his own profile, then    *
*     the user should always be able to do so.  For functions         *
*     on other userid's, we check to see whether the issuer has       *
*     the special attribute.  If the issuer has the auditor attribute,*
*     then we will at least allow him to inquire on any other user.   *
*     If none of the attributes apply to the situation, we issue      *
*     an RACHECK to CLASS=$APPL, ENTITY=SETUSER in order to determine *
*     whether the issuer can perform this function.  To update other  *
*     profiles, the issuer must have at least UPDATE access to the    *
*     SETUSER profile.  Once we have the appropriate clearance, then  *
*     the ICHEINTY macros are setup for the appropriate calls.        *
*     SETUSER alters the following user-profile fields:               *
*        PGMRNAME - The 20-character user name field.                 *
*        USRCNT   - Number of USERDATA segments in the profile.       *
*        USERDATA - A compound structure incorporating:               *
*         USRNM    - 8-byte key 'ROOM    '                            *
*         USRDATA  - 4-character room number.                         *
*         USRFLG   - 1-character flag of X'00'.                       *
*        USERDATA - A compound structure incorporating:               *
*         USRNM    - 8-byte key 'MSGCLASS'                            *
*         USRDATA  - 1-character sysout message-class.                *
*         USRFLG   - 1-character flag of X'00'.                       *
*     These values will be picked-up by the JES2-Exit-20 routine.     *
*     When the TSO-user logs onto the system, all dynamic sysout      *
*     will contain the correct programmer-name and room number        *
*     for proper distribution.  When a started-task job executes,     *
*     the MSGCLASS parameter is used for the sysout, in addition      *
*     to having the programmer-name and room-number assigned.         *
*                                                                     *
***********************************************************************
         EJECT ,
***********************************************************************
*                                                                     *
*  HELP MEMBER TEXT:                                                  *
*---------------------------------------------------------------------*
*)F FUNCTION -                                                        *
*     The SETUSER command changes the RACF user profile for fields    *
*     applicable for the automatic assignment of the sysout programmer*
*     name field and room-number for TSO and started-task printout.   *
*     If no operands, or only the userid operand is specified, then   *
*     the associated userid attributes will be listed.                *
*     As with the ALTUSER command, the SETUSER command will allow you *
*     to change your 20-character programmer name field.  You can also*
*     specify a 4-character ROOM number.  In order to change userid's *
*     other than your own, you must have SPECIAL authority, or have   *
*     UPDATE access to the SETUSER resource in the $APPL class.       *
*     If you have the AUDITOR attribute, then you can list any userid's
*     profile information.                                            *
*                                                                     *
*     NOTE:  When invoked under ISPF, the SETUSER command must be     *
*            issued via the TSOEXEC command.                          *
*)X SYNTAX -                                                          *
*     SETUSER         USERID('userid'/* ... )                         *
*                     NAME('user-name')                               *
*                     ROOM('room-numb')                               *
*                     MSGCLASS('sysout-class')                        *
*  REQUIRED - NONE                                                    *
*  DEFAULTS - USERID(*)                                               *
*  ALIAS    - SETU                                                    *
*)O OPERANDS -                                                        *
*))USERID('userid'...) - Specifies the users for which the specified  *
*     attributes are to be modified.  If this parameter is omitted,   *
*     then the current userid is assumed.                             *
*))NAME('user-name') - Specifies a new value for the user's name      *
*     field in the RACF data set.  The name may be from 1 to 20       *
*     alphameric, special, or national characters, the first of       *
*     which must be alphameric.  If special characters and/or         *
*     blanks are included, then the text must be enclosed within      *
*     quotes.                                                         *
*))ROOM('room-numb') - Specifies a 1 to 4 character alphameric room   *
*     number to where your sysout will be delivered.  For TSO users,  *
*     this will be printed on the banner page of dynamically allocated*
*     sysout datasets.  For started-task jobs, this will be printed   *
*     on the banner page for all sysout.   When ROOM(*) is specified, *
*     the ROOM value is removed from the user profile.                *
*))MSGCLASS('sysout-class') - Specifies the sysout class for the job  *
*     log, jobjcl, and jobmsg output for started-task jobs.  If the   *
*     MSGCLASS is set for a TSO userid, then sysout for the TSO logon *
*     will be generated, which is usually not too appropriate.        *
*     When MSGCLASS(*) is specified, the MSGCLASS value is removed.   *
*---------------------------------------------------------------------*
         EJECT ,
***********************************************************************
*                                                                     *
*  SOURCE LIBRARY:  'MVSSUPRT.Z038.USERSRC(SETUSER)'                  *
*  MACRO LIBRARIES:  'SYS1.MACLIB'                                    *
*                    'SYS1.AMODGEN'                                   *
*  LOAD LIBRARY:     'SYS1.LINKLIB'                                   *
*  LINKEDIT PARMS:   'RENT,REUS,REFR'                                 *
*                        INCLUDE SYSPUNCH(SETUSER)                    *
*                        ENTRY SETUSER                                *
*                        ALIAS SETU                                   *
*                        SETCODE AC(1)                                *
*                       NAME SETUSER(R)                               *
*  OTHER MODULE DEPENDENCIES:                                         *
*     IKJEFTE2 - TSO AUTHORIZED COMMAND TABLE                         *
*     ISPTCM   - ISPF AUTHORIZED COMMAND TABLE                        *
*                                                                     *
* REGISTER USAGE:                                                     *
*   REGS R14-R5 ARE USED AS GENERAL WORK REGS                         *
*   R13: SAVEAREA AND @WRKAREA                                        *
*   R12: BASE REG                                                     *
*   R11: CPPL ADDRESS                                                 *
*   R10: PDL ADDRESS (CREATED BY IKJPARS)                             *
*   R9:  ADDRESS OF ISSUER'S ACEE                                     *
*   R8:  PDE/ECT                                                      *
*                                                                     *
* PROCEDURE SYNOPSIS:                                                 *
*  1)  INIT:  GETMAIN AND INIT STORAGE, CALL PARSE.                   *
*  2)  FUNC:  SET @FLAG1 TO DETERMINE REQUEST TYPE.                   *
*  3)  AUTH:  RACHECK FOR USER AUTHORITY.                             *
*  4)  UPDT:  PERFORM RACF PROFILE UPDATES.                           *
*  5)  LIST:  LIST RACF PROFILES.                                     *
*  6)  TERM:  CLEANUP, EOJ.                                           *
*                                                                     *
* SUBROUTINES:                                                        *
*  RETRIEVE:  RETRIEVE PROFILE INFORMATION FROM RACF.                 *
*  PUTLINE:   CALL IKJEFF02 TSO/E MESSAGE GENERATOR.                  *
*                                                                     *
* CSECTS:                                                             *
*  SETUSER:  MAINLINE COMMAND PROCESSOR.                              *
*  SETUPCL:  IKJPARS SYNTAX PARAMETERS.                               *
*  SETUPDL:  IKJPARS RETURN BUFFER DSECT.                             *
*  SETUMSG:  IKJTSMSG TEXTS FOR IKJEFF02 MESSAGE GENERATOR.           *
*                                                                     *
***********************************************************************
         TITLE 'SET RACF USER PROFILE FOR TSU/STC                      X
               *** CSECT INITIALIZATION ***'
***********************************************************************
****  CSECT ENTRY POINT:                                           ****
***********************************************************************
SETUSER  RMODE 24                                                  003
SETUSER  AMODE 24                                                  003
SETUSER  CSECT ,                      PRIMARY CSECT
SETU     EQU   SETUSER                ALIAS NAME IS SETU
         ENTRY SETU                   IDENTIFY TO LINKAGE EDITOR
         B     INIT000-*(,R15)        SKIP AROUND ID AREA
*---------------------------------------------------------------------*
         DC    AL1($IDLEN)            LENGTH OF ID SECTION:
$ID      DC    C'SETUSER   &UMOD V&LEVEL &MODDATE '
         DC    C'TSOCP SET RACF USER PGMRNAME ROOM MSGCLASS '
         DC    C'&SYSDATE &SYSTIME'
$IDLEN   EQU   *-$ID
*---------------------------------------------------------------------*
         SPACE 1
***********************************************************************
****  INIT @WRKAREA, CHAIN SAVEAREAS:                              ****
***********************************************************************
INIT000  DS    0H                  START EXECUTABLE CODE:
         STM   R14,R12,12(R13)        SAVE REGS
         LA    R12,0(,R15)            R12: NEW BASE REG
         USING SETUSER,R12            SET CSECT ADDRESSABILITY
         LA    R11,0(,R1)             R11: CPPL ADDRESS
         USING CPPL,R11               USE IKJCPPL MACRO DSECT
         GETMAIN R,LV=@WRKSIZE        GETMAIN STORAGE
         LA    R2,0(,R1)              R2: WORKAREA ADDRESS
         LR    R0,R2                  R0: MVCL TARGET ADDR
         LA    R1,@WRKSIZE            R1: MVCL TARGET SIZE
         XR    R14,R14                RESET R14
         XR    R15,R15                RESET R15
         MVCL  R0,R14                 CLEAR WORKAREA
         ST    R13,4(,R2)             CHAIN SAVEAREA
         ST    R2,8(,R13)             CHAIN SAVEAREA
         LR    R13,R2                 CHAIN SAVEAREA
         USING @WRKAREA,R13           USE LOCAL DSECT
*=====================================================================*
         EJECT ,
***********************************************************************
*****  INIT THE IKJEFFMT MESSAGE INTERFACE AREA:                  *****
***********************************************************************
INIT100  DS    0H                  INIT IKJEFFMT:
         LA    R2,MTCSECTP            SET ADDR OF IKJTSMSG PTR
         ST    R2,MTPLPTR
         ST    R11,MTCPPLP            SET CPPL ADDRESS
         OI    MTHIGH,X'80'           INDIC STANDARD LINKAGE
         L     R2,=V(SETUMSG)         R2: IKJTSMSG CSECT ADDRESS
         ST    R2,MTCSECTP            SET ADDR OF IKJTSMSG CSECT
         OI    MTSW1,MTPUTLSW         INDIC 'PUTLINE'
         MVI   MTEXTRLN,124           EXTRACT BUFFER LENGTH
         OI    MTSW2,MTEXTRCN         INDIC BOTH PUTLINE AND EXTRACT
         OI    MTSW2,MTFMT            INDIC MTFORMAT=NEW
         LA    R2,@WTOBUFF            R2: WTO BUFFER AREA
         ST    R2,MTEXTRBF            R2: SET EXTRACT BUFFER PTR
*---------------------------------------------------------------------*
         SPACE 1
***********************************************************************
*****  FORMAT THE PARSE PARAMETER LIST (PPL) FOR IKJPARS:         *****
***********************************************************************
INIT200  DS    0H                  FORMAT THE PPL:
         LA    R2,@PPL                R2: PARSE PARAMETER LIST AREA
         USING PPL,R2                 USE IKJPPL MAPPING MACRO
         L     R1,CPPLUPT
         ST    R1,PPLUPT              SET UPT ADDRESS
         L     R1,CPPLECT
         ST    R1,PPLECT              SET ECT ADDRESS
         L     R1,CPPLCBUF
         ST    R1,PPLCBUF             SET COMMAND BUFFER ADDR
         LA    R1,@ECBTSO
         ST    R1,PPLECB              SET ECB ADDRESS
         L     R1,=V(SETUPCL)         R1: PCL CSECT
         ST    R1,PPLPCL              SET IKJPARM CSECT ADDRESS
         LA    R1,@PDLPTR             R1: PDL POINTER AREA
         ST    R1,PPLANS              SET IKJPARMD PTR PTR
         DROP  R2                     DROP PPL MAPPING
*---------------------------------------------------------------------*
         EJECT ,
***********************************************************************
*****  ISSUE CALL TO IKJPARS TO EXTRACT COMMAND:                  *****
***********************************************************************
INIT300  DS    0H                  ISSUE CALL TO IKJPARS:
         LA    R1,@PPL                R1: PARSE PARAMETER LIST ADDR
         L     R15,CVTPTR             R15: CVT ADDRESS
         L     R15,CVTTVT-CVT(,R15)   R15: TSVT ADDRESS
         LTR   R15,R15                IS TSVT THERE ?
         BZ    INIT400                NO: TSO/E IS NOT INSTALLED
         L     R15,TSVTPARS-TSVT(,R15) R15: IKJPARS EPA
         LTR   R15,R15                IS TSVT THERE ?
         BZ    INIT400                NO: TSO/E IS NOT INSTALLED
         SYNCH (15),AMODE=DEFINED     CALL IKJPARS                 003
*---------------------------------------------------------------------*
INIT320  DS    0H                  RETURN FROM IKJPARS:
         L     R10,@PDLPTR            R10: PARSE ANSWER AREA
         USING SETUPDL,R10            USE IKJPARMD DSECT AREA
         LTR   R15,R15                WAS PARSE SUCCESSFUL ?
         BZ    INIT600                YES: INIT COMPLETE
         B     INIT500                NO: HANDLE PARSE ERROR
*---------------------------------------------------------------------*
         SPACE 2
***********************************************************************
*****  HANDLE NO TSO/E ENVIRONMENT:                               *****
***********************************************************************
INIT400  DS    0H                  TSO/E ERROR:
         LA    R1,MSG10               R1: WTO MESSAGE PLIST
         XR    R0,R0                  RESET R0
         WTO   ,MF=(E,(1))            ISSUE MESSAGE-10
         LA    R1,MSG10+4             R1: TPUT MESSAGE TEXT
         LH    R0,MSG10               R0: WTO PLIST LENGTH
         SH    R0,=H'4'               MINUS PREFIX LENGTH
         TPUT  (1),(0)                ISSUE MESSAGE
         LA    R15,16                 SET RC=16
         ST    R15,@RETCODE           SET MAXCC
         B     CLEANUP                EXIT
*---------------------------------------------------------------------*
         EJECT ,
***********************************************************************
*****  HANDLE PARSE SYSTEM ERROR:                                 *****
***********************************************************************
INIT500  DS    0H                  IKJPARS ERROR:
         ST    R15,@RETCODE           SAVE RETURN-CODE
         MVC   MTMSGID,=C'M011'       SET MESSAGE ID CODE
         LA    R2,1                   R2: RETURN-CODE LENGTH
         LA    R3,@RETCODE+3          R3: RETURN-CODE ADDRESS
         STM   R2,R3,@SEG1            SET IKJTSMSG INTERFACE
         OI    @SEG1L,X'80'           INDIC TRANSLATE REQUIRED
         OI    MTSW1,MTHEXSW          INDIC TRANSLATE TO HEXEBCDIC
         BAL   R14,PUTLINE            CALL MESSAGE GENERATOR
         B     CLEANUP                EXIT
*---------------------------------------------------------------------*
         SPACE 2
***********************************************************************
*****  CHECK APF AUTHORIZATION:                                   *****
***********************************************************************
INIT600  DS    0H                  CHECK APF AUTH:
         USING PSA,R0                 USE IHAPSA MACRO
         L     R15,PSATOLD            R15: OUR TCB ADDRESS
         L     R15,TCBJSCB-TCB(,R15)  R15: OUR JSCB ADDRESS
         USING IEZJSCB,R15            USE IEZJSCB MACRO
         TM    JSCBOPTS,JSCBAUTH      DO WE HAVE APF ?
         BO    INIT700                YES: APF IS OK
*---------------------------------------------------------------------*
INIT620  DS    0H                  APF ERROR:
         DROP  R15                    DROP JSCB MAPPING
         MVC   MTMSGID,=C'M012'       SET MESSAGE ID CODE
         BAL   R14,PUTLINE            CALL MESSAGE GENERATOR
         LA    R15,4                  SET RC=4
         ST    R15,@RETCODE           SAVE
         B     CLEANUP                EXIT
*---------------------------------------------------------------------*
         SPACE 2
***********************************************************************
*****  INIT PHASE IS COMPLETE:                                    *****
***********************************************************************
INIT700  DS    0H                  INIT PHASE IS COMPLETE:
*=====================================================================*
         TITLE 'SET RACF USER PROFILE FOR TSU/STC                      X
               *** FUNCTION CHECKING ***'
***********************************************************************
*  FUNCTION CHECKING:                                                 *
*                                                                     *
*  THIS SECTION SETS @FLAG1 INDICATORS WHICH REPRESENT WHAT TYPES     *
*  OF FUNCTIONS THE USER IS REQUESTING IN THIS COMMAND.               *
*  THE PROGRAMMER NAME FIELD, ROOM NUMBER, AND MSGCLASS VALUES        *
*  ARE ALSO EXTRACTED, AND SAVED IN DYNAMIC STORAGE.                  *
*                                                                     *
***********************************************************************
         SPACE 2
***********************************************************************
****  OBTAIN THE CURRENT USER'S USERID:                            ****
***********************************************************************
FUNC000  DS    0H                  LOCATE ACEE AND GET USERID:
         USING PSA,R0                 USE IHAPSA MACRO
         L     R15,PSAAOLD            R15: OUR ASCB ADDRESS
         USING ASCB,R15               USE IHAASCB MACRO
         L     R15,ASCBASXB           R15: ASXB ADDRESS
         USING ASXB,R15               USE IHAASXB MACRO
         L     R9,ASXBSENV            R9: ACEE ADDRESS
         USING ACEE,R9                USE IHAACEE MACRO
         MVC   @TSOUID(9),ACEEUSER    EXTRACT THE USERID
         DROP  R15                    DROP ASXB MAP
*---------------------------------------------------------------------*
         EJECT ,
***********************************************************************
****  EXAMINE WHAT WAS SPECIFIED FOR 'USERID':                     ****
***********************************************************************
FUNC100  DS    0H                  SCAN LIST OF USERID'S:
         XR    R6,R6                  R6: COUNTER OF USERID'S
         TM    PDLKUID+1,X'01'        WAS 'USER(' SPECIFIED ?
         BNO   FUNC160                NO: WE CAN ASSUME 'SELF'
         LA    R15,PDLLUID            R15: 1ST USERID PDE ADDRESS
         USING PDE,R15                USE LOCAL DSECT
*---------------------------------------------------------------------*
FUNC120  DS    0H                  PROCESS NEXT PDE:
         LA    R6,1(,R6)              INCR USERID COUNTER
         L     R4,PDEDATA             R4: ADDR OF USERID
         LH    R5,PDELENG             R5: LENGTH OF USERID
         STC   R5,@USERIDL            SAVE USERID LEN
         LA    R2,@USERIDN            R2: MOVE TARGET
         LA    R3,8                   R3: USER LENGTH
         ICM   R5,B'1000',BLANKS      SET BLANK FILL CHAR
         MVCL  R2,R4                  MOVE USERID
         CLC   @USERID,@TSOUID        IS SAME GUY ?
         BE    FUNC140                YES: THIS ONE'S OK
         CLC   =C'* ',@USERIDN        IS SAME GUY ?
         BE    FUNC140                YES: DONT SET 'OTHER' FLAG
*---------------------------------------------------------------------*
FUNC130  DS    0H                  REQUEST IS FOR NON-SELF:
         OI    @FLAG1,@F1OTHER        INDIC OTHER USERID
*---------------------------------------------------------------------*
FUNC140  DS    0H                  LOOK FOR NEXT PDE:
         L     R15,PDENEXT            R15: NEXT PDE
         N     R15,=X'00FFFFFF'       AND ADDRESS MASK
         BNZ   FUNC120                PROCESS NEXT PDE
         DROP  R15                    DROP PDE MAPPING
*---------------------------------------------------------------------*
FUNC160  DS    0H                  SEE IF THIS IS MULTI REQUEST:
         CH    R6,=H'1'               ARE WE OVER 1 REQUEST ?
         BNH   FUNC180                NO: DONT SET MULTI FLAG
         OI    @FLAG1,@F1MULTI        YES: ACCESS FOR MULTIPLE USERS
*---------------------------------------------------------------------*
FUNC180  DS    0H                  USERID EXTRACT COMPLETE:
*---------------------------------------------------------------------*
         EJECT ,
***********************************************************************
****  EXTRACT PROGRAMMER NAME FIELD:                               ****
***********************************************************************
FUNC200  DS    0H                  SEE IF NAME IS SPECIFIED:
         TM    PDLKNAM+1,X'01'        WAS 'NAME(' SPECIFIED ?
         BNO   FUNC240                NO:  SKIP PGMRNAME TESTING
         USING PDE,R8                 USE LOCAL DSECT
         LA    R8,PDLLNAM             R8: 'NAME' PDE
*---------------------------------------------------------------------*
FUNC220  DS    0H                  EXTRACT NAME DATA FROM COMMAND:
         LA    R2,@REQNAME            R2: MVCL TARGET ADDR
         LA    R3,L'@REQNAME          R3: MVCL TARGET SIZE
         L     R4,PDEDATA             R4: TSO DATA ADDRESS
         LH    R5,PDELENG             R5: LENGTH OF DATA
         ICM   R5,B'1000',BLANKS      SET FILL CHAR
         MVCL  R2,R4                  TRANSFER PROGRAMMER NAME
         OI    @FLAG1,@F1NAME         INDIC NAME UPDATE REQUESTED
*---------------------------------------------------------------------*
FUNC240  DS    0H                  NAME PROCESSING FINISHED:
         DROP  R8                     DROP PDE MAPPING
*---------------------------------------------------------------------*
         SPACE 2
***********************************************************************
****  EXTRACT ROOM NUMBER FIELD:                                   ****
***********************************************************************
FUNC300  DS    0H                  SEE IF ROOM IS SPECIFIED:
         TM    PDLKROM+1,X'01'        WAS 'ROOM(' SPECIFIED ?
         BNO   FUNC360                NO:  SKIP ROOM TESTING
         USING PDE,R8                 USE LOCAL DSECT
         LA    R8,PDLLROM             R8: 'ROOM' PDE
*---------------------------------------------------------------------*
FUNC320  DS    0H                  EXTRACT ROOM DATA FROM COMMAND:
         LA    R2,@REQROOM            R2: MVCL TARGET ADDR
         LA    R3,L'@REQROOM          R3: MVCL TARGET SIZE
         L     R4,PDEDATA             R4: TSO DATA ADDRESS
         LH    R5,PDELENG             R5: LENGTH OF DATA
         ICM   R5,B'1000',BLANKS      SET FILL CHAR
         MVCL  R2,R4                  TRANSFER ROOM NUMBER
         OI    @FLAG1,@F1ROOM         INDIC ROOM UPDATE REQUESTED
*---------------------------------------------------------------------*
FUNC360  DS    0H                  ROOM PROCESSING FINISHED:
         DROP  R8                     DROP PDE MAPPING
*---------------------------------------------------------------------*
         EJECT ,
***********************************************************************
****  EXTRACT MSGCLASS NUMBER FIELD:                               ****
***********************************************************************
FUNC400  DS    0H                  SEE IF MSGCLASS IS SPECIFIED:
         TM    PDLKMSG+1,X'01'        WAS 'MSGCLASS(' SPECIFIED ?
         BNO   FUNC440                NO:  SKIP MSGCLASS TESTING
         USING PDE,R8                 USE LOCAL DSECT
         LA    R8,PDLLMSG             R8: 'MSGCLASS' PDE
*---------------------------------------------------------------------*
FUNC420  DS    0H                  EXTRACT MSGCLASS DATA FROM COMMAND:
         LA    R2,@REQMSGC            R2: MVCL TARGET ADDR
         LA    R3,L'@REQMSGC          R3: MVCL TARGET SIZE
         L     R4,PDEDATA             R4: TSO DATA ADDRESS
         LH    R5,PDELENG             R5: LENGTH OF DATA
         ICM   R5,B'1000',BLANKS      SET FILL CHAR
         MVCL  R2,R4                  TRANSFER MSGCLASS
         OI    @FLAG1,@F1MSGC         INDIC MSGCLASS UPDATE REQUESTED
*---------------------------------------------------------------------*
FUNC440  DS    0H                  MSGCLASS PROCESSING FINISHED:
         DROP  R8                     DROP PDE MAPPING
*=====================================================================*
         TITLE 'SET RACF USER PROFILE FOR TSU/STC                      X
               *** AUTHORIZATION CHECKING ***'
***********************************************************************
* AUTHORIZATION CHECKING:                                             *
*                                                                     *
*   THE FUNCTION CHECKING SECTION SET @FLAG1, WHICH GIVES US A        *
*   VAGUE IDEA OF WHAT THE COMMAND ISSUER WISHES TO ACCOMPLISH.       *
*   IN THE AUTH SECTION, WE WILL:                                     *
*   A) ALLOW ANYONE TO REVIEW OR UPDATE HIS OWN NAME OR ROOM NUMBER.  *
*   B) ALLOW 'SPECIAL' ID'S TO REVIEW OR UPDATE ANYONE.               *
*   C) ALLOW AUDIT AND OPERATIONS TO REVIEW ANYONE.                   *
*   D) ALLOW THOSE WITH ACCESS(READ) TO $APPL/SETUSER ABILITY TO      *
*       REVIEW ANYONE.                                                *
*   E) ALLOW THOSE WITH ACCESS(UPDATE) TO $APPL/SETUSER ABILITY TO    *
*       REVIEW OR UPDATE ANYONE.                                      *
*   F) REQUIRE ACCESS(UPDATE) TO $APPL/SETUSER IN ORDER TO SET THE    *
*       MESSAGE CLASS.                                                *
*   A LIST-ONLY REQUEST CAN SPECIFY MULTIPLE USERID'S.                *
*   HOWEVER, ONLY ONE USERID MAY BE SPECIFIED IF ANY DATA IS TO BE    *
*    UPDATED.                                                         *
*                                                                     *
***********************************************************************
         SPACE 1
***********************************************************************
****  SEE IF WE ARE ONLY LISTING:                                  ****
***********************************************************************
AUTH000  DS    0H                  CHECK FOR LIST FUNC:
         TM    @FLAG1,@F1UPDAT        ANY UPDATES REQUESTED ?
         BNZ   AUTH100                YES: CHECK FOR SYNTAX
         TM    @FLAG1,@F1OTHER        LISTING FOR NON-SELF ?
         BO    AUTH300                YES: READ ACCESS IS REQUIRED
         B     AUTH500                NO: ALLOW USER TO LIST SELF
*---------------------------------------------------------------------*
         SPACE 1
***********************************************************************
****  CHECK UPDATE SYNTAX:                                         ****
***********************************************************************
AUTH100  DS    0H                  CHECK UPDATE FUNC:
         TM    @FLAG1,@F1MULTI        UPDATING MULTIPLE ID'S ?
         BO    AUTH200                YES: UPDATE ONE AT A TIME
         TM    @FLAG1,@F1OTHER        UPDATE FOR NON-SELF ?
         BO    AUTH400                YES: CHECK RACF UPDT ACCESS
         TM    @FLAG1,@F1MSGC         WILL WE UPDATE MSGCLASS ?
         BO    AUTH400                YES: UPDATE ACCESS REQUIRED
         B     AUTH500                NO: USER CAN UPDATE HIMSELF
*---------------------------------------------------------------------*
         SPACE 1
***********************************************************************
****  ERROR:  CANNOT UPDATE MULTIPLE USERIDS AT ONCE:              ****
***********************************************************************
AUTH200  DS    0H                  ISSUE ERROR MESSAGE:
         MVC   MTMSGID,=C'M031'       SET MESSAGE ID CODE
         BAL   R14,PUTLINE            CALL MESSAGE GENERATOR
         LA    R15,8                  SET RETURN-CODE = 8
         ST    R15,@RETCODE           SAVE RETURN-CODE
         B     CLEANUP                EXIT
*---------------------------------------------------------------------*
         EJECT ,
***********************************************************************
****  CHECK FOR READ ACCESS:                                       ****
***********************************************************************
AUTH300  DS    0H                  INSPECT ACEE FOR QUICK-AUTH:
         TM    ACEEFLG1,ACEESPEC      DO WE HAVE SPCL ?
         BO    AUTH500                YES: WE CAN ACCESS OTHERS
         TM    ACEEFLG1,ACEEOPER      DO WE HAVE OPERATIONS ?
         BO    AUTH500                YES: ALLOW READ ACCESS
         TM    ACEEFLG1,ACEEAUDT      DO WE HAVE AUDIT ?
         BO    AUTH500                YES: ALLOW READ ACCESS
*---------------------------------------------------------------------*
AUTH320  DS    0H                  ISSUE RACHECK FOR READ ACCESS:
         LA    R1,@RACH               R1: RACHECK PLIST AREA
         MVC   0(@RACHL,R1),PRACH     PREFORMAT PLIST
         RACHECK ATTR=READ,MF=(E,(1)) TEST FOR READ ACCESS
         LTR   R15,R15                IS USER AUTHORIZED ?
         BZ    AUTH500                YES: ALLOW USAGE
*---------------------------------------------------------------------*
AUTH340  DS    0H                  READ ACCESS FAILED:
         ST    R15,@RETCODE           SAVE RETURN-CODE
         MVC   MTMSGID,=C'M033'       SET MESSAGE ID CODE
         XR    R2,R2                  RESET R2
         IC    R2,@TSOUIDL            R2: TSO USERID LENGTH
         LA    R3,@TSOUIDN            R3: TSO USERID TEXT
         STM   R2,R3,@SEG1            SET IKJTSMSG INTERFACE
         BAL   R14,PUTLINE            CALL MESSAGE GENERATOR
         LA    R15,8                  SET RETURN-CODE = 8
         ST    R15,@RETCODE           SAVE RETURN-CODE
         B     CLEANUP                EXIT
*---------------------------------------------------------------------*
         EJECT ,
***********************************************************************
****  RACHECK FOR SETUSER UPDATE ACCESS:                           ****
***********************************************************************
AUTH400  DS    0H                  INSPECT ACEE FOR UPDATE QUICK-AUTH:
         TM    ACEEFLG1,ACEESPEC      DO WE HAVE SPCL ?
         BO    AUTH500                YES: WE CAN UPDATE OTHERS
*---------------------------------------------------------------------*
AUTH420  DS    0H                  RACHECK ACCESS=UPDATE:
         LA    R1,@RACH               R1: RACHECK PLIST AREA
         MVC   0(@RACHL,R1),PRACH     PREFORMAT PLIST
         RACHECK ATTR=UPDATE,MF=(E,(1))
         LTR   R15,R15                IS USER AUTHORIZED ?
         BZ    AUTH500                YES: ALLOW USAGE
*---------------------------------------------------------------------*
AUTH440  DS    0H                  NON-SELF UPDATE AUTH FAILED:
         ST    R15,@RETCODE           SAVE RETURN-CODE
         TM    @FLAG1,@F1OTHER        GOING FOR NON-SELF ?
         BNO   AUTH460                NO: MUST BE MSGCLASS ATTEMPT
         MVC   MTMSGID,=C'M034'       SET MESSAGE ID CODE
         XR    R2,R2                  RESET R2
         IC    R2,@TSOUIDL            R2: TSO USERID LENGTH
         LA    R3,@TSOUIDN            R3: TSO USERID TEXT
         STM   R2,R3,@SEG1            SET IKJTSMSG INTERFACE
         BAL   R14,PUTLINE            CALL MESSAGE GENERATOR
         B     CLEANUP                EXIT
*---------------------------------------------------------------------*
AUTH460  DS    0H                  MSGCLASS UPDATE AUTH FAILED:
         MVC   MTMSGID,=C'M035'       SET MESSAGE ID CODE
         XR    R2,R2                  RESET R2
         IC    R2,@TSOUIDL            R3: TSO USERID LENGTH
         LA    R3,@TSOUIDN            R3: TSO USERID TEXT
         STM   R2,R3,@SEG1            SET IKJTSMSG INTERFACE
         BAL   R14,PUTLINE            CALL MESSAGE GENERATOR
         B     CLEANUP                EXIT
*---------------------------------------------------------------------*
         SPACE 1
***********************************************************************
****  END OF AUTH CHECKING:                                        ****
***********************************************************************
AUTH500  DS    0H                  WE HAVE SECURITY CLEARANCE:
*=====================================================================*
         TITLE 'SET RACF USER PROFILE FOR TSU/STC                      X
               *** UPDATE PROCESSING ***'
***********************************************************************
****  SEE IF UPDATE IS REQUESTED:                                  ****
***********************************************************************
UPDT000  DS    0H                  SEE IF UPDATE IS REQUESTED:
         TM    @FLAG1,@F1UPDAT        ANY UPDATES ?
         BZ    UPDT900                NO: SKIP UPDATE PROCESSING
*---------------------------------------------------------------------*
UPDT020  DS    0H                  ENSURE @USERID IS SET:
         TM    @FLAG1,@F1OTHER        UPDATES FOR NON-SELF ?
         BO    UPDT040                YES: @USERID IS SET
         MVC   @USERID,@TSOUID        NO:  ASSUME CURRENT USER
UPDT040  DS    0H                  @USERID IS SET:
*---------------------------------------------------------------------*
         SPACE 1
***********************************************************************
****  RETRIEVE USERID PROFILE:                                     ****
***********************************************************************
UPDT100  DS    0H                  GET USERID PROFILE INFO:
         BAL   R14,RETRIEVE           RETRIEVE PROFILE IN @USERID
         LTR   R15,R15                DID WE GET IT ?
         BZ    UPDT200                YES: PROCEDE
         CH    R15,=H'12'             WAS USER NOT FOUND ?
         BE    UPDT900                YES: EXIT UPDATE
         B     CLEANUP                NO:  GO CLEANUP
*---------------------------------------------------------------------*
         EJECT ,
***********************************************************************
****  UPDATE THE PROGRAMMER NAME FIELD:                            ****
***********************************************************************
UPDT200  DS    0H                  SEE IF NAME CHANGES:
         TM    @FLAG1,@F1NAME         NAME CHANGE REQUESTED ?
         BNO   UPDT280                NO: DONT UPDATE NAME
         CLC   @REQNAME,@OLDNAME      NAME CHANGE REQUESTED ?
         BE    UPDT280                NO: DONT UPDATE NAME
*---------------------------------------------------------------------*
UPDT220  DS    0H                  SETUP RACF ACTION PARMS:
         LA    R1,@ACTION             R1: ACTION PLIST
         MVC   0(@ACTIONL,R1),ACTNAME PRE-FORMAT IT
         LA    R2,@REQNAME            R2: NEW PROGRAMMER NAME FIELD
         ICHEACTN MF=(E,(1)),         MODIFY ACTION STMT               X
               FLDATA=(20,(R2))
*---------------------------------------------------------------------*
UPDT240  DS    0H                  UPDATE THE PGMRNAME FIELD:
         LA    R1,@ALTER              R1: ICHEINTY PLIST AREA
         MVC   0(@ALTERL,R1),PALTER   PRE-FORMAT IT
         LA    R2,@USERID             R2: TARGET USERID
         LA    R3,@ACTION             R3: ACTIONS PLIST
         ICHEINTY ALTER,MF=(E,(1)),   ALTER THE USER PROFILE:          X
               ENTRY=(R2),            - SPECIFY USERID,                X
               ACTIONS=((R3)),        - INDICATE WHAT FIELD AND DATA,  X
               OPTIONS=(FLDEF,ACTION) - PLIST MANIPULATION OPTIONS
*---------------------------------------------------------------------*
UPDT260  DS    0H                  CHECK THE RETURN-CODE:
         LTR   R15,R15                WAS UPDATE SUCCESSFUL ?
         BZ    UPDT280                YES: CONTINUE
         EX    R15,*                  NO: (CHOKE)
*---------------------------------------------------------------------*
UPDT280  DS    0H                  PGMRNAME PROCESSING DONE:
*---------------------------------------------------------------------*
         EJECT ,
***********************************************************************
****  UPDATE ROOM NUMBER:                                          ****
***********************************************************************
UPDT300  DS    0H                  SEE IF ROOM CHANGES:
         TM    @FLAG1,@F1ROOM         ROOM CHANGE REQUESTED ?
         BNO   UPDT390                NO: DONT UPDATE ROOM
         CLC   @REQROOM,@OLDROOM      ROOM CHANGE REQUESTED ?
         BE    UPDT390                NO: DONT UPDATE ROOM
         TM    @FLAG2,@F2OLDMS        OLD-STYLE MSGCLASS EXIST ?
         BNO   UPDT310                NO
         TM    @FLAG1,@F1MSGC         WILL MSGCLASS UPDATE ?
         BO    UPDT310                YES: DONT CONVERT
         MVC   @REQMSGC(1),@OLDMSGC   NO: STAGE FOR CONVERT
         OI    @FLAG1,@F1MSGC         FORCE MSGCLASS UPDATE
*---------------------------------------------------------------------*
UPDT310  DS    0H                  FORMAT TEST LIST:
         LA    R1,@TEST               R1: TEST PLIST
         MVC   0(@TESTL,R1),TSTSEGM   PRE-FORMAT IT
         LA    R2,ROOMKEY             R2: NEW ROOM FIELD
         ICHETEST MF=(E,(1)),         MODIFY TEST STMT                 X
               FLDATA=(8,(R2)),       - SET COMPARAND DATA             X
               COND=EQ                - ASSUME 'REPLACE' FUNCTION
*---------------------------------------------------------------------*
UPDT320  DS    0H                  SEE IF WE NEED TO ADD OR REPLACE:
         TM    @FLAG2,@F2ROOM         DID ROOM SEGMENT EXIST ?
         BO    UPDT330                YES: GO WITH COND=EQ
         ICHETEST MF=(E,(1)),         NO:  MODIFY THE CONDITION:       X
               COND=NE                - CHANGE TO 'ADD' FUNCTION
*---------------------------------------------------------------------*
         EJECT ,
*---------------------------------------------------------------------*
UPDT330  DS    0H                  CONSTRUCT THE SEGMENT DATA:
         MVC   @USRNM,ROOMKEY         SET SEGMENT KEY
         MVI   @USRDATA+0,4           SET ROOM LENGTH
         MVC   @USRDATA+1(4),@REQROOM SET NEW ROOM NUMBER
         MVI   @USRDATA+5,0           INIT FLAG TO ZERO
*---------------------------------------------------------------------*
UPDT340  DS    0H                  FORMAT THE ACTION PARMS:
         LA    R1,@ACTION             R1: ACTION PLIST
         MVC   0(@ACTIONL,R1),ACTSEGM PRE-FORMAT IT
         LA    R2,@TEST               R2: CONDITIONAL TEST STMT
         LA    R3,@USERDAT            R3: NEW ROOM SEGMENT
         ICHEACTN MF=(E,(1)),         MODIFY ACTION STMT:              X
               TESTS=((R2)),          - POINT TO CONDITION PARM,       X
               FLDATA=(14,(R3))       - SPECIFY THE NEW DATA
*---------------------------------------------------------------------*
UPDT360  DS    0H                  PERFORM THE SEGMENT UPDATE:
         LA    R1,@ALTER              R1: ICHEINTY PLIST AREA
         MVC   0(@ALTERL,R1),PALTER   PRE-FORMAT IT
         LA    R2,@USERID             R2: TARGET USERID
         LA    R3,@ACTION             R3: ACTIONS PLIST
         ICHEINTY ALTER,MF=(E,(1)),   UPDATE THE USER PROFILE:         X
               ENTRY=(R2),            - R2: @USERID                    X
               ACTIONS=((R3)),        - R3: ACTION PARM LIST           X
               OPTIONS=(FLDEF,ACTION) - PLIST MANIPULATION OPTIONS
*---------------------------------------------------------------------*
UPDT380  DS    0H                  CHECK THE CCONDITION CODE:
         LTR   R15,R15                WAS UPDATE SUCCESSFUL ?
         BZ    UPDT390                YES: CONTINUE
         EX    R15,*                  NO: (CHOKE)
*---------------------------------------------------------------------*
UPDT390  DS    0H                  ROOM NUMBER HAS BEEN PROCESSED:
*---------------------------------------------------------------------*
         EJECT ,
***********************************************************************
****  UPDATE MSGCLASS NUMBER:                                      ****
***********************************************************************
UPDT400  DS    0H                  SEE IF MSGCLASS CHANGES:
         TM    @FLAG1,@F1MSGC         MSGCLASS UPDATE REQUESTED ?
         BNO   UPDT490                NO: DONT UPDATE MSGCLASS
*
         CLI   @REQMSGC,C'A'          VALID SYSOUT CLASS ?
         BL    UPDT410                NO: SET DUMMY CHAR
         CLI   @REQMSGC,C'I'          VALID SYSOUT CLASS ?
         BNH   UPDT420                YES: USE THIS CHAR
*
         CLI   @REQMSGC,C'J'          VALID SYSOUT CLASS ?
         BL    UPDT410                NO: SET DUMMY CHAR
         CLI   @REQMSGC,C'R'          VALID SYSOUT CLASS ?
         BNH   UPDT420                YES: USE THIS CHAR
*
         CLI   @REQMSGC,C'S'          VALID SYSOUT CLASS ?
         BL    UPDT410                NO: SET DUMMY CHAR
         CLI   @REQMSGC,C'Z'          VALID SYSOUT CLASS ?
         BNH   UPDT420                YES: USE THIS CHAR
*
         CLI   @REQMSGC,C'0'          VALID SYSOUT CLASS ?
         BL    UPDT410                NO: SET DUMMY CHAR
         CLI   @REQMSGC,C'9'          VALID SYSOUT CLASS ?
         BNH   UPDT420                YES: USE THIS CHAR
*---------------------------------------------------------------------*
UPDT410  DS    0H                  SET DUMMY MSGCLASS:
         MVI   @REQMSGC,C'*'          ASTERISK MEANS 'NONE'
*---------------------------------------------------------------------*
UPDT420  DS    0H                  FORMAT TEST LIST:
         LA    R1,@TEST               R1: TEST PLIST
         MVC   0(@TESTL,R1),TSTSEGM   PRE-FORMAT IT
         LA    R2,MSGCKEY             R2: NEW MSGCLASS FIELD
         ICHETEST MF=(E,(1)),         MODIFY TEST STMT                 X
               FLDATA=(8,(R2)),       - SET COMPARAND KEY,             X
               COND=EQ                - ASSUME 'REPLACE' FUNCTION
*---------------------------------------------------------------------*
UPDT430  DS    0H                  CHECK FOR ADD OR REPLACE:
         TM    @FLAG2,@F2MSGC         DID MSGCLASS SEGMENT EXIST ?
         BO    UPDT440                YES: GO WITH COND=EQ
         ICHETEST MF=(E,(1)),         NO:  CHANGE TO COND=NE           X
               COND=NE                - SPECIFY 'ADD' FUNCTION
*---------------------------------------------------------------------*
         EJECT ,
*---------------------------------------------------------------------*
UPDT440  DS    0H                  CONSTRUCT 'MSGCLASS' SEGMENT DATA:
         MVC   @USRNM,MSGCKEY         SET SEGMENT KEY
         MVI   @USRDATA+0,1           SET MSGCLASS LENGTH
         MVC   @USRDATA+1(1),@REQMSGC SET NEW MSGCLASS
         MVI   @USRDATA+2,0           INIT FLAG TO ZERO
*---------------------------------------------------------------------*
UPDT450  DS    0H                  BUILD ACTION PARMLIST:
         LA    R1,@ACTION             R1: ACTION PLIST
         MVC   0(@ACTIONL,R1),ACTSEGM PRE-FORMAT IT
         LA    R2,@TEST               R2: CONDITIONAL TEST STMT
         LA    R3,@USERDAT            R3: NEW MSGCLASS SEGMENT
         ICHEACTN MF=(E,(1)),         MODIFY ACTION STMT               X
               TESTS=((R2)),          - R2 SELECTS SEGMENT KEY         X
               FLDATA=(11,(R3))       - R3 SPECIFIES NEW SEGMENT DATA
*---------------------------------------------------------------------*
UPDT460  DS    0H                  UPDATE MSGCLASS SEGMENT:
         LA    R1,@ALTER              R1: ICHEINTY PLIST AREA
         MVC   0(@ALTERL,R1),PALTER   PRE-FORMAT IT
         LA    R2,@USERID             R2: TARGET USERID
         LA    R3,@ACTION             R3: ACTIONS PLIST
         ICHEINTY ALTER,MF=(E,(1)),   UPDATE USER PROFILE:             X
               ENTRY=(R2),            - R2 IS @USERID                  X
               ACTIONS=((R3)),        - R3 SPECIFIES @ACTION           X
               OPTIONS=(FLDEF,ACTION) - PLIST MANIPULATION OPTIONS
*---------------------------------------------------------------------*
UPDT470  DS    0H                  CHECK CONDITION CODE:
         LTR   R15,R15                WAS UPDATE SUCCESSFUL ?
         BZ    UPDT490                YES: CONTINUE
         EX    R15,*                  NO: (CHOKE)
*---------------------------------------------------------------------*
UPDT490  DS    0H                  MSGCLASS UPDATES DONE:
*---------------------------------------------------------------------*
         SPACE 2
***********************************************************************
****  USER PROFILE UPDATE IS COMPLETE:                             ****
***********************************************************************
UPDT900  DS    0H                  SETUSER UPDATES DONE:
*=====================================================================*
         TITLE 'SET RACF USER PROFILE FOR TSU/STC                      X
               *** LIST PROCESSING ***'
***********************************************************************
*                                                                     *
* LIST PROCESSING:                                                    *
*                                                                     *
*     THE PDE'S (PARAMETER DESCRIPTION ENTRIES) FOR THE LIST OF       *
*     USERID'S ARE ALL SCANNED, AND EACH USERID IN THE LIST WILL      *
*     HAVE ITS PGMRNAME ROOM AMD MSGCLASS SETTINGS DISPLAYED          *
*     IN THE FORMAT OF A SETUSER COMMAND.                             *
*     R8 MAPS THE PDE CHAIN.                                          *
*                                                                     *
***********************************************************************
         SPACE 1
***********************************************************************
****  IF USERID NOT SPECIFIED, PROVIDE DUMMY PDE:                  ****
***********************************************************************
LIST000  DS    0H                  SETUP DUMMY PDE:
         LA    R8,PDLLUID             R8: 1ST USERID PDE ADDRESS
         USING PDE,R8                 USE LOCAL DSECT
         TM    PDLKUID+1,X'01'        WAS 'USER(' SPECIFIED ?
         BO    LIST100                YES: USE REAL PDE
         LA    R8,DUMMYPDE            NO:  USE A DUMMY PDE INSTEAD
*        B     LIST100                GO PROCESS DUMMY PDE
*---------------------------------------------------------------------*
         SPACE 1
***********************************************************************
****  THIS LOOP WILL PROCESS EACH USERID:                          ****
***********************************************************************
LIST100  DS    0H                  SCAN EACH PDE:
         L     R4,PDEDATA             R4: ADDR OF USERID
         LH    R5,PDELENG             R5: LENGTH OF USERID
         STC   R5,@USERIDL            SAVE USERID LEN
         LA    R2,@USERIDN            R2: MOVE TARGET
         LA    R3,8                   R3: USER LENGTH
         ICM   R5,B'1000',BLANKS      SET BLANK FILL CHAR
         MVCL  R2,R4                  MOVE USERID
*---------------------------------------------------------------------*
LIST120  DS    0H                  CHECK FOR (*) SUBSTITUTION:
         CLC   =C'* ',@USERIDN        IS SAME GUY ?
         BNE   LIST200                NO: WE HAVE A USERID
         MVC   @USERID,@TSOUID        YES: SUBSTITUTE NAME
*---------------------------------------------------------------------*
LIST140  DS    0H                  @USERID IS SET:
*---------------------------------------------------------------------*
         SPACE 2
***********************************************************************
****  RETRIEVE USERID'S PROFILE DATA:                              ****
***********************************************************************
LIST200  DS    0H                  ISSUE CALL TO RACF FOR @USERID:
         BAL   R14,RETRIEVE           CALL RETRIEVAL ROUTINE
         LTR   R15,R15                WAS RETRIEVE OK ?
         BZ    LIST300                YES: GO DISPLAY PROFILE
         CH    R15,=H'12'             USER NOT FOUND ?
         BE    LIST700                YES: TRY NEXT ONE
         B     CLEANUP                NO: WE HAD A BAD ERROR
*---------------------------------------------------------------------*
         EJECT ,
***********************************************************************
****  BUILD DISPLAY TEXT FOR USER PROFILE:                         ****
***********************************************************************
LIST300  DS    0H                  DISPLAY USER PROFILE:
         MVC   MTMSGID,=C'M050'       SET MESSAGE ID CODE
*---------------------------------------------------------------------*
LIST310  DS    0H                  SET USERID:
         LA    R2,8                   R2: TSO USERID LENGTH
         LA    R3,@USERIDN            R3: TSO USERID TEXT
         STM   R2,R3,@SEG1            SET IKJTSMSG INTERFACE
*---------------------------------------------------------------------*
LIST320  DS    0H                  SET PROGRAMMER NAME FIELD:
         LA    R2,L'@OLDNAME          R2: PGMRNAME LENGTH
         LA    R3,@OLDNAME            R3: PGMRNAME TEXT
         STM   R2,R3,@SEG2            SET IKJTSMSG INTERFACE
*---------------------------------------------------------------------*
         SPACE 2
***********************************************************************
****  BUILD DISPLAY TEXT FOR ROOM NUMBER:                          ****
***********************************************************************
LIST400  DS    0H                  SET ROOM NUMBER:
         LA    R2,4                   R2: ROOM TEXT LENGTH
         LA    R3,@OLDROOM            R3: ROOM NUMBER TEXT
         STM   R2,R3,@SEG3            SET IKJTSMSG INTERFACE
         CLI   @OLDROOM,C'*'          IS ASTERISK ?
         BE    LIST420                YES: SET DEFAULT
         TM    @FLAG2,@F2ROOM         WAS ROOM THERE ?
         BO    LIST440                YES: DONT SET DEFAULT
*---------------------------------------------------------------------*
LIST420  DS    0H                  SET ROOM NUMBER DEFAULT:
         MVI   @OLDROOM,C'*'          SET UNKNOWN ROOM NUMBER
         LA    R2,1                   R2: ROOM TEXT LENGTH
         ST    R2,@SEG3L              SET LENGTH = 1
*---------------------------------------------------------------------*
LIST440  DS    0H                  ROOM NUMBER SET:
*---------------------------------------------------------------------*
         SPACE 2
***********************************************************************
****  BUILD DISPLAY TEXT FOR MSGCLASS (IF APPLICABLE):             ****
***********************************************************************
LIST500  DS    0H                  SEE IF WE SHOULD LIST MSGCLASS:
         MVC   @USERDAT,BLANKS        INIT A WORKAREA
         LA    R2,1                   R2: MSGCLASS TEXT LENGTH
         LA    R3,@USERDAT            R3: MSGCLASS TEXT
         STM   R2,R3,@SEG4            SET IKJEFF02 INTERFACE
         TM    @FLAG2,@F2MSGC+@F2OLDMS WAS MSGCLASS THERE ?
         BZ    LIST540                NO: PRINT BLANKS
         CLI   @OLDMSGC,C'*'          IS ASTERISK ?
         BE    LIST540                YES: PRINT BLANKS
*---------------------------------------------------------------------*
LIST520  DS    0H                  LIST MSGCLASS:
         LA    R3,@USERDAT            R3: MSGCLASS TEXT
         MVC   0(11,R3),=C'MSGCLASS(*)' SET TEXT
         MVC   9(1,R3),@OLDMSGC       SET MSGCLASS
         LA    R2,11                  R2: MSGCLASS TEXT LENGTH
         STM   R2,R3,@SEG4            SET IKJTSMSG INTERFACE
*---------------------------------------------------------------------*
LIST540  DS    0H                  MSGCLASS LIST FINISHED.
*---------------------------------------------------------------------*
         SPACE 1
***********************************************************************
****  OUTPUT THE MESSAGE TEXT:                                     ****
***********************************************************************
LIST600  DS    0H                  SET MSGCLASS:
         BAL   R14,PUTLINE            CALL MESSAGE GENERATOR
*---------------------------------------------------------------------*
         SPACE 1
***********************************************************************
****  GET NEXT PDE (USERID) OR EXIT:                               ****
***********************************************************************
LIST700  DS    0H                  LOOK FOR NEXT PDE:
         L     R8,PDENEXT             R8: NEXT PDE
         N     R8,=X'00FFFFFF'        AND ADDRESS MASK
         BNZ   LIST100                LOOP AND PROCESS NEXT PDE
*---------------------------------------------------------------------*
LIST720  DS    0H                  END OF USERID PDE'S:
         XR    R15,R15                SET RC=0
*        B     CLEANUP                END OF LIST
*=====================================================================*
         TITLE 'SET RACF USER PROFILE FOR TSU/STC                      X
               *** CSECT TERMINATION ***'
***********************************************************************
*****  FREEMAIN PDL AND PDE'S CREATED BY IKJPARSE:                *****
***********************************************************************
CLEANUP  DS    0H                  FREE UP PDL STORAGE:
         L     R1,@PDLPTR             R1: PDL ADDRESS
         LTR   R1,R1                  IS PDL STILL THERE ?
         BZ    FREEMAIN               NO: DONT RELEASE STORAGE
*---------------------------------------------------------------------*
         IKJRLSA @PDLPTR              FREEMAIN PARSE ANSWER AREA
*---------------------------------------------------------------------*
         SPACE 1
***********************************************************************
*****  RETURN TO TSO TMP:                                         *****
***********************************************************************
FREEMAIN DS    0H                  EXIT COMMAND-PROCESSOR:
         L     R5,@RETCODE            SAVE RETURN-CODE
         LR    R1,R13                 R1: GETMAINED AREA
         L     R13,4(,R13)            R13: CALLER'S SAVEAREA
         FREEMAIN R,LV=@WRKSIZE,A=(1) FREEMAIN WORKAREA
         LR    R15,R5                 R15: RETURN-CODE
         L     R14,12(,R13)           RESTORE RETURN REG
         LM    R0,R12,20(R13)         RESTORE REST OF REGS
         BR    R14                    RETURN TO TMP
*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
         TITLE 'SET RACF USER PROFILE FOR TSU/STC                      X
               *** RACF RETRIEVAL SUBROUTINE ***'
RETRIEVE DS    0H                  INITIALIZE:
***********************************************************************
*                                                                     *
* RETRIEVE SUBROUTINE:                                                *
*    THIS SUBROUTINE RETRIEVES THE PGMRNAME ROOM AND MSGCLASS         *
*    FOR THE USERID SPECIFIED IN @USERID.                             *
*    THE STATUS OF THE DATA IS POSTED IN @FLAG2, AND THE DATA         *
*    IS STORED IN @OLDNAME, @OLDROOM, AND @OLDMSGC.                   *
*    IF A RACF ERROR CONDITION IS ENCOUNTERED, THEN AN ERROR MESSAGE  *
*    IS SENT TO THE USER TERMINAL.                                    *
*    REGISTERS R14-R5 ARE TRASHED.                                    *
*                                                                     *
***********************************************************************
         SPACE 1
***********************************************************************
****  RETRIEVE RACF USER PROFILE DATA:                             ****
***********************************************************************
RETR000  DS    0H                  INITIALIZE:
         ST    R14,@LINKREG           SAVE R14 RETURN ADDRESS
         MVI   @FLAG2,0               RESET RETRIEVAL FLAG
         XC    @OLDNAME,@OLDNAME      RESET PROGRAMMER NAME
         XC    @OLDROOM,@OLDROOM      RESET ROOM NUMBER
         MVI   @OLDMSGC,0             RESET MSGCLASS
*---------------------------------------------------------------------*
         SPACE 1
*---------------------------------------------------------------------*
RETR100  DS    0H                  SETUP ICHEINTY LOCATE:
         LA    R1,@LOCATE             R1: PLIST ADDRESS
         MVC   0(@LOCATEL,R1),PLOCATE PREFORMAT MACRO PLIST
         LA    R2,@RACBUFF            R2: WORKAREA ADDRESS
         USING RACFAREA,R2            USE LOCAL DSECT
         LA    R15,L'@RACBUFF         R15: LENGTH OF WORKAREA
         ST    R15,RACALENG           SAVE RACF BUFFER SIZE
         XC    RACCNTL,RACCNTL        RESET CONTROL AREAS
         LA    R3,@USERID             R3: USERID AREA
         DROP  R2                     DROP RACFAREA MAP
*---------------------------------------------------------------------*
RETR120  DS    0H                  ISSUE ICHEINTY CALL:
         ICHEINTY LOCATE,TYPE='USR',  RETRIEVE RACF DATA:              X
               WKAREA=(R2),           - ANSWER AREA                    X
               ENTRY=(R3),            - USERID AREA                    X
               MF=(E,(1))             - EXECUTE REMOTE PLIST
*---------------------------------------------------------------------*
RETR140  DS    0H                  CHECK ICHEINTY RETURN-CODE
         LTR   R15,R15                WAS RACF MANAGER CALL GOOD ?
         BZ    RETR400                YES: SET POINTERS
         CH    R15,=H'12'             WAS USER NOT FOUND ?
         BE    RETR200                YES: LET CALLER HANDLE IT
         B     RETR300                NO: WE HAVE CRITICAL ERROR
*---------------------------------------------------------------------*
         EJECT ,
***********************************************************************
****  USERID NOT DEFINED TO RACF:                                  ****
***********************************************************************
RETR200  DS    0H                  USERID NOT DEFINED:
         ST    R15,@FWORD             SAVE RETURN-CODE
         XR    R2,R2                  RESET R2
         ST    R2,@PTRNAME            RESET NAME ADDRESS
         ST    R2,@PTRROOM            RESET ROOM ADDRESS
         ST    R2,@PTRMSGC            RESET MSGC ADDRESS
         MVC   MTMSGID,=C'M070'       SET MESSAGE ID CODE
         IC    R2,@USERIDL            R2: USERID TEXT LENGTH
         LA    R3,@USERIDN            R3: USERID TEXT
         STM   R2,R3,@SEG1            SET IKJTSMSG INTERFACE
         BAL   R14,PUTLINE            ISSUE PUTLINE
         L     R15,@FWORD             RESTORE RETURN-CODE
         B     RETR900                RETURN WITH RC
*---------------------------------------------------------------------*
         SPACE 2
***********************************************************************
****  CRITICAL RACF ERROR ENCOUNTERED:                             ****
***********************************************************************
RETR300  DS    0H                  RACF MANAGER ERROR:
         ST    R15,@RETCODE           SAVE RETURN-CODE
         ST    R0,@FWORD              SAVE REASON-CODE
         MVC   MTMSGID,=C'M071'       SET MESSAGE ID CODE
         OI    MTSW1,MTHEXSW          INDIC TRANSLATE TO HEXEBCDIC
         LA    R2,1                   R2: RETURN-CODE LENGTH
         LA    R3,@RETCODE+3          R3: RETURN-CODE ADDRESS
         STM   R2,R3,@SEG1            SET IKJTSMSG INTERFACE
         OI    @SEG1L,X'80'           INDIC TRANSLATE REQUIRED
         LA    R2,1                   R2: REASON-CODE LENGTH
         LA    R3,@FWORD+3            R3: REASON-CODE ADDRESS
         STM   R2,R3,@SEG2            SET IKJTSMSG INTERFACE
         OI    @SEG2L,X'80'           INDIC TRANSLATE REQUIRED
         IC    R2,@USERIDL            R2: USERID TEXT LENGTH
         LA    R3,@USERIDN            R3: USERID TEXT
         STM   R2,R3,@SEG3            SET IKJTSMSG INTERFACE
         BAL   R14,PUTLINE            ISSUE PUTLINE
         L     R15,@RETCODE           RESTORE RETURN-CODE
         B     RETR900                EXIT
*---------------------------------------------------------------------*
         EJECT ,
***********************************************************************
****  RACF CALL WAS SUCCESSFUL:                                    ****
***********************************************************************
RETR400  DS    0H                  ICHEINTY SUCCESSFUL:
         LA    R2,@RACBUFF            R2: WORKAREA ADDRESS
         USING RACFAREA,R2            USE LOCAL DSECT
         LA    R2,RACDATA             R2: RACF DATA AREA
         DROP  R2                     DROP RACFAREA MAP
         XR    R3,R3                  RESET R3
*---------------------------------------------------------------------*
RETR420  DS    0H                  SET UNIT POINTER ADDRESSES:
         ST    R2,@PTRNAME            SET NAME ADDRESS
         ICM   R3,B'0011',0(R2)       R3: LENGTH OF NAME FIELD
         LA    R2,2(R3,R2)            R2: ADDRESS OF ROOM SEGMENT
         ST    R2,@PTRROOM            SET ROOM ADDRESS
         ICM   R3,B'0011',0(R2)       R3: LENGTH OF ROOM FIELD
         LA    R2,2(R3,R2)            R2: ADDRESS OF MSGC SEGMENT
         ST    R2,@PTRMSGC            SET MSGC ADDRESS
*---------------------------------------------------------------------*
         SPACE 2
***********************************************************************
****  EXTRACT PROGRAMMER NAME FIELD:                               ****
***********************************************************************
RETR500  DS    0H                  INTERPRET PROGRAMMER DATA
         L     R4,@PTRNAME            R4: RETRIEVED PGMRNAME
         XR    R5,R5                  RESET R5
         ICM   R5,B'0011',0(R4)       R5: LENGTH OF DATA
         LA    R4,2(,R4)              R4: POINTS TO DATA
         LA    R2,@OLDNAME            R2: MVCL TARGET ADDR
         LA    R3,L'@OLDNAME          R3: MVCL TARGET SIZE
         ICM   R5,B'1000',BLANKS      SET FILL CHARACTER
         MVCL  R2,R4                  MOVE PROGRAMMER NAME FIELD
         OI    @FLAG2,@F2NAME         INDIC NAME RETRIEVED
*---------------------------------------------------------------------*
         SPACE 2
***********************************************************************
****  EXTRACT ROOM NUMBER:                                         ****
***********************************************************************
RETR600  DS    0H                  INTERPRET ROOM NUMBER DATA
         XC    @OLDROOM,@OLDROOM      RESET ROOM NUMBER
         L     R4,@PTRROOM            R4: RETRIEVED SEGMENT
         XR    R5,R5                  RESET R5
         ICM   R5,B'0011',0(R4)       R5: LENGTH OF DATA
         LA    R4,2(,R4)              R4: POINT TO SEGMENT DATA
         CH    R5,=H'10'              WAS SEGMENT RETRIEVED ?
         BL    RETR640                NO: DONT SET @OLDROOM
         CLC   0(8,R4),ROOMKEY        KEY MATCH ?
         BNE   RETR640                NO: DONT SET @OLDROOM
*---------------------------------------------------------------------*
RETR620  DS    0H                  SET THE ROOM NUMBER:
         LA    R4,8(,R4)              R4: SKIP PAST KEY
         XR    R5,R5                  RESET R5
         IC    R5,0(,R4)              R5: LENGTH OF 'ROOM'
         LA    R4,1(,R4)              R4: SKIP PAST LENGTH BYTE
         LA    R2,@OLDROOM            R2: MVCL TARGET ADDR
         LA    R3,L'@OLDROOM          R3: MVCL TARGET SIZE
         ICM   R5,B'1000',BLANKS      SET FILL CHAR
         MVCL  R2,R4                  SET ROOM NUMBER
         OI    @FLAG2,@F2ROOM         INDIC ROOM SEG RETRIEVED
*---------------------------------------------------------------------*
RETR640  DS    0H                  ROOM NUMBER DATA HAS BEEN CHECKED
*---------------------------------------------------------------------*
         EJECT ,
***********************************************************************
****  EXTRACT MSGCLASS:                                            ****
***********************************************************************
RETR700  DS    0H                  INTERPRET MSGCLASS DATA
         XC    @OLDMSGC,@OLDMSGC      RESET MSGCLASS
         L     R4,@PTRMSGC            R4: RETRIEVED SEGMENT
         XR    R5,R5                  RESET R5
         ICM   R5,B'0011',0(R4)       R5: LENGTH OF DATA
         LA    R4,2(,R4)              R4: POINT TO SEGMENT DATA
         CH    R5,=H'10'              WAS SEGMENT RETRIEVED ?
         BL    RETR740                NO: DONT SET @OLDMSGC
         CLC   0(8,R4),MSGCKEY        KEY MATCH ?
         BNE   RETR740                NO: DONT SET @OLDMSGC
         LA    R4,8(,R4)              R4: SKIP PAST KEY
         CLI   0(R4),0                DOES USRDATA HAVE ANY LENGTH ?
         BNH   RETR740                NO: DONT SET @OLDMSGC
*---------------------------------------------------------------------*
RETR720  DS    0H                  SET MSGCLASS DATA:
         MVC   @OLDMSGC,1(R4)         YES: SET MSGCLASS VALUE
         OI    @FLAG2,@F2MSGC         INDIC MSGCLASS SEG RETRIEVED
*---------------------------------------------------------------------*
RETR740  DS    0H                  MSGCLASS DATA HAS BEEN CHECKED
*---------------------------------------------------------------------*
         SPACE 2
***********************************************************************
****  EXTRACT MSGCLASS:                                            ****
***********************************************************************
RETR760  DS    0H                  CHECK FOR OLD-STYLE MSGCLASS:
         TM    @FLAG2,@F2MSGC         MSGCLASS SEG RETRIEVED ?
         BO    RETR780                YES: DONT OVERLAY IT
         TM    @FLAG2,@F2ROOM         WAS ROOM SEG RETRIEVED ?
         BNO   RETR780                NO:  OLD-STYLE NOT THERE EITHER
         L     R4,@PTRROOM            R4: RETRIEVED ROOM SEGMENT
         LA    R4,8(,R4)              R4: SKIP PAST KEY
         XR    R5,R5                  RESET R5
         IC    R5,0(,R4)              R5: LENGTH OF ROOM NUMBER
         LA    R4,1(R5,R4)            R4: SKIP TO FLAG BYTE
         CLI   0(R4),0                FLAG BYTE ZERO ?
         BE    RETR780                YES: DONT SET @OLDMSGC
         CLI   0(R4),C'*'             IS ASTERISK ?
         BE    RETR780                YES: DONT SET @OLDMSGC
*---------------------------------------------------------------------*
RETR770  DS    0H                  USE OLD-STYLE MSGCLASS:
         MVC   @OLDMSGC(1),0(R4)      NO: SET CLASS
         OI    @FLAG2,@F2OLDMS        INDIC OLD-STYLE MSGCLASS
*---------------------------------------------------------------------*
RETR780  DS    0H                  OLD-STYLE MSGCLASS CHECKED:
*---------------------------------------------------------------------*
         SPACE 2
***********************************************************************
****  EXTRACT PROCESSING COMPLETE:                                 ****
***********************************************************************
RETR800  DS    0H                  END OF PROFILE DATA EXTRACT:
         XR    R15,R15                SET RC=0
*        B     RETR900                RETURN
*---------------------------------------------------------------------*
         SPACE 2
***********************************************************************
****  RETURN TO CALLER:                                            ****
***********************************************************************
RETR900  DS    0H                  RETURN TO CALLER:
         L     R14,@LINKREG           R14: CALLERS RETURN ADDRESS
         BR    R14                    RETURN WITH RC
*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
         TITLE 'SET RACF USER PROFILE FOR TSU/STC                      X
               *** TSO PUTLINE SUBROUTINE ***'
PUTLINE  DS    0H                  CALL IKJEFF02:
***********************************************************************
*                                                                     *
* PUTLINE SUBROUTINE:                                                 *
*                                                                     *
*   THIS ROUTINE INTERFACES TO IKJEFF02, THE MESSAGE GENERATOR.       *
*   THE IKJTSFMT PARAMETER BLOCK IS ASSUMED TO BE FORMATTED.          *
*                                                                     *
***********************************************************************
         SPACE 1
***********************************************************************
****  PUTLINE SUBROUTINE:                                          ****
***********************************************************************
PUTL000  DS    0H                  SAVE RETURN REG:
         ST    R14,@PUTLREG           SAVE RETURN ADDRESS
*---------------------------------------------------------------------*
PUTL100  DS    0H                  FIND IKJEFF02 EPA:
         L     R15,CVTPTR             R15: CVT ADDRESS
         L     R15,CVTTVT-CVT(,R15)   R15: TSVT ADDRESS
         LTR   R15,R15                TSO/E ?
         BZ    PUTL400                NO: GO EXIT
         L     R15,TSVTEF02-TSVT(,R15) IKJEFF02 EPA
         LTR   R15,R15                TSO/E ?
         BZ    PUTL400                NO: EXIT
*---------------------------------------------------------------------*
PUTL200  DS    0H                  CALL IKJEFF02:
         LA    R1,MTPARML             R1: IKJEFF02 PARM LIST
         SYNCH (15),AMODE=DEFINED     CALL IKJEFF02                003
*---------------------------------------------------------------------*
PUTL400  DS    0H                  RETURN TO CALLER:
         L     R14,@PUTLREG           RESTORE R14
         BR    R14                    RETURN TO CALLER
*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
         TITLE 'SET RACF USER PROFILE FOR TSU/STC                      X
               *** STATIC WORKING-STORAGE ***'
***********************************************************************
*****  STATIC WORKING STORAGE AREA                                *****
***********************************************************************
         LTORG ,
*---------------------------------------------------------------------*
BLANKS   DC    CL16' '
TRANHEX  DC    CL16'0123456789ABCDEF'
*---------------------------------------------------------------------*
DUMMYUID DC    C'*'                   DUMMY USERID
         DS    0F
DUMMYPDE DS    0XL12                  DUMMY PDE:
         DC    A(DUMMYUID)            - ADDRESS OF DATA
         DC    AL2(1)                 - LENGTH OF DATA
         DC    BL1'10000000'          - FLAG BYTE
         DC    XL1'00'                - (RESERVED)
         DC    A(0)                   - NO MORE PDE'S IN CHAIN
*---------------------------------------------------------------------*
         EJECT ,
***********************************************************************
* RACHECK Parameter List Prototype:                                   *
***********************************************************************
PRACH    RACHECK MF=L,                RACHECK PLIST PROTOTYPE:         X
               ENTITY=(RACFENT),      - ENTITY NAME 'SETUSER',         X
               CLASS='$APPL',         - RESOURCE CLASS '$APPL          X
               ATTR=READ              - INITIALIZE FOR READ ACCESS
         DS    0F
RACFENT  DC    CL8'SETUSER'           RACHECK ENTITY NAME
*---------------------------------------------------------------------*
         SPACE 2
***********************************************************************
* ICHEINTY LOCATE PLIST PROTOTYPE:                                    *
***********************************************************************
PLOCATE  ICHEINTY LOCATE,MF=L,                                         X
               ENTRY=R2,                                               X
               WKAREA=R3,                                              X
               FLDEF=LOCLIST
*---------------------------------------------------------------------*
LOCLIST  ICHEINTY FLDEF,MF=L,                                          X
               ACTIONS=(GETNAME,                                       X
               GETROOM,                                                X
               GETMSGC)
*---------------------------------------------------------------------*
GETNAME  ICHEACTN FIELD=PGMRNAME
*---------------------------------------------------------------------*
GETROOM  ICHEACTN FIELD=USERDATA,TESTS=(OLDROOM)
*---------------------------------------------------------------------*
OLDROOM  ICHETEST FIELD=USRNM,FLDATA=(8,ROOMKEY),COND=EQ
ROOMKEY  DC    CL8'ROOM'
*---------------------------------------------------------------------*
GETMSGC  ICHEACTN FIELD=USERDATA,TESTS=(OLDMSGC)
*---------------------------------------------------------------------*
OLDMSGC  ICHETEST FIELD=USRNM,FLDATA=(8,MSGCKEY),COND=EQ
MSGCKEY  DC    CL8'MSGCLASS'
*---------------------------------------------------------------------*
PALTER   ICHEINTY ALTER,MF=L,                                          X
               TYPE='USR',                                             X
               ENTRY=R2,                                               X
               ACTIONS=(R3)
*---------------------------------------------------------------------*
ACTNAME  ICHEACTN FIELD=PGMRNAME,FLDATA=(20,R2)
*---------------------------------------------------------------------*
ACTSEGM  ICHEACTN FIELD=USERDATA,FLDATA=(20,R2)
*---------------------------------------------------------------------*
TSTSEGM  ICHETEST FIELD=USRNM,FLDATA=(8,R2),COND=EQ
*---------------------------------------------------------------------*
         EJECT ,
***********************************************************************
****  MESSAGE TEXTS:                                               ****
***********************************************************************
MSG10    DS    0H
         DC    AL2(MSG10L)
         DC    AL2(0)
         DC    C'SETUSER-10: '
         DC    C'SYSTEM ERROR - TSO/E IS NOT INSTALLED.'
MSG10L   EQU   *-MSG10
*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
         TITLE 'SET RACF USER PROFILE FOR TSU/STC                      X
               *** DYNAMIC WORKING-STORAGE ***'
***********************************************************************
*****  DYNAMIC WORKING STORAGE AREA                               *****
***********************************************************************
@WRKAREA DSECT ,
@SAVE0   DS    9D                     RESERVE SAVEAREA
@SAVE1   DS    9D                     RESERVE SAVEAREA
*---------------------------------------------------------------------*
@RETCODE DS    F                       MAXIMUM RETURN-CODE
@LINKREG DS    A                       SUBROUTINE RETURN LINKAGE
@PUTLREG DS    A                       SUBROUTINE RETURN LINKAGE
@ECBTSO  DS    F                       ECB FOR TSO ROUTINES
@PDLPTR  DS    F                       ADDR OF PARSE ANSWER
*---------------------------------------------------------------------*
@PTRNAME DS    A                       PGMRNAME FIELD FROM RACF
@PTRROOM DS    A                       ROOM USERDATA FIELD FROM RACF
@PTRMSGC DS    A                       MSGCLASS FIELD FROM RACF
*---------------------------------------------------------------------*
@FWORD   DS    F                      (WORK)
@DWORD   DS    D                      (WORK)
*---------------------------------------------------------------------*
         DS    0F
@PPL     DS    CL28                    IKJPPL AREA
*---------------------------------------------------------------------*
@TSOUID  DS    0CL9                   ISSUER'S TSO USERID:
@TSOUIDL DC    AL1(0)                 - LENGTH
@TSOUIDN DC    CL8' '                 - USERID
*---------------------------------------------------------------------*
@FLAG1   DS    XL1'00'                TSO COMMAND REQUEST FLAGS:
@F1OTHER EQU   B'10000000'            - REQUEST FOR NON-SELF
@F1MULTI EQU   B'01000000'            - REQUEST FOR MULTIPLE ID'S
@F1NAME  EQU   B'00100000'            - ALTER PGMRNAME FIELD
@F1ROOM  EQU   B'00010000'            - ALTER THE ROOM NUMBER
@F1MSGC  EQU   B'00001000'            - ALTER THE MSGCLASS
@F1UPDAT EQU   B'00111000'            - (ANY) AN UPDATE IS REQUESTED
*---------------------------------------------------------------------*
@FLAG2   DS    XL1'00'                OLD STATUS FLAGS:
@F2NAME  EQU   B'10000000'            - PGMRNAME FIELD EXISTED
@F2ROOM  EQU   B'01000000'            - ROOM SEGMENT EXISTED
@F2MSGC  EQU   B'00100000'            - MSGCLASS SEGMENT EXISTED
@F2OLDMS EQU   B'00010000'            - OLD-STYLE MSGCLASS IN USE
*---------------------------------------------------------------------*
         DS    0D                  EXTRACTED INFORMATION FROM RACF:
@OLDNAME DC    CL20' '                (PGMRNAME) FIELD
@OLDROOM DC    CL4' '                 (USRDATA) ROOM NUMBER
@OLDMSGC DC    CL1' '                 (USRDATA) MSGCLASS
*---------------------------------------------------------------------*
         DS    0D                  REQUESTED UPDATES FROM TSO USER:
@REQNAME DC    CL20' '                (PGMRNAME) FIELD
@REQROOM DC    CL4' '                 (USRDATA) ROOM NUMBER
@REQMSGC DC    CL1' '                 (USRDATA) MSGCLASS
*---------------------------------------------------------------------*
@USERID  DS    0CL9                OBJECT TSO USERID: (THE VICTIM)
@USERIDL DC    AL1(0)                 - LENGTH
@USERIDN DC    CL8' '                 - USERID
*---------------------------------------------------------------------*
@USERDAT DS    0CL14               RESULTANT UPDATES TO RACF:
@USRNM   DC    CL8' '                 (PGMRNAME) FIELD
@USRDATA DC    CL5' '                 (USRDATA) ROOM NUMBER
@USRFLAG DC    XL1'00'                (USRFLAG) FLAG
*---------------------------------------------------------------------*
         EJECT ,
*---------------------------------------------------------------------*
         DS    0D
         IKJEFFMT MTFORMAT=NEW
         ORG   MTINSRTS               REMAP INSERT AREA
@SEGAREA DS    0H                   WHOLE SEGMENT AREA:
@SEG1    DS    0F                     1ST SEGMENT INSERT:
@SEG1L   DS    A                      - LENGTH OF SEGMENT INSERT
@SEG1A   DS    A                      - ADDRESS OF SEGMENT INSERT
@SEG2    DS    0F                     2ND SEGMENT INSERT:
@SEG2L   DS    A                      - LENGTH OF SEGMENT INSERT
@SEG2A   DS    A                      - ADDRESS OF SEGMENT INSERT
@SEG3    DS    0F                     3RD SEGMENT INSERT:
@SEG3L   DS    A                      - LENGTH OF SEGMENT INSERT
@SEG3A   DS    A                      - ADDRESS OF SEGMENT INSERT
@SEG4    DS    0F                     4TH SEGMENT INSERT:
@SEG4L   DS    A                      - LENGTH OF SEGMENT INSERT
@SEG4A   DS    A                      - ADDRESS OF SEGMENT INSERT
@SEG5    DS    0F                     5TH SEGMENT INSERT:
@SEG5L   DS    A                      - LENGTH OF SEGMENT INSERT
@SEG5A   DS    A                      - ADDRESS OF SEGMENT INSERT
@SEGSIZE EQU   *-@SEGAREA             LENGTH OF SEGMENTS
         ORG   ,                      RESUME MAPPING
*---------------------------------------------------------------------*
***********************************************************************
****  START OF OVERLAY STORAGE AREA:                               ****
***********************************************************************
@OVERLAY DS    0D
*---------------------------------------------------------------------*
@WTOBUFF DS    0CL256                  PUTLINE MESSAGE BUFFER
@WTOLL   DS    H
@WTOZZ   DS    H
@WTODATA DS    CL252
*---------------------------------------------------------------------*
         ORG   @OVERLAY
@RACH    RACHECK ENTITY=(R2),CLASS=R3,ATTR=READ,MF=L
@RACHL   EQU   *-@RACH
         ORG   ,
*---------------------------------------------------------------------*
         ORG   @OVERLAY
@LOCATE  ICHEINTY LOCATE,TYPE='USR',  RETRIVE USER PROFILE DATA        X
               WKAREA=R2,             (R2) ADDR OF ANSWER AREA         X
               ENTRY=R3,              (R3) ADDR OF USERID AREA         X
               FLDEF=R4,              (R4,R5) 2ND-LEVEL PLISTS         X
               MF=L                   THIS IS A LIST-FORMAT
@LOCATEL EQU   *-@LOCATE
         DS    0D
@RACBUFF DS    CL1024                 RACF BUFFER AREA
         ORG   ,
*---------------------------------------------------------------------*
         ORG   @OVERLAY
@ALTER   ICHEINTY ALTER,TYPE='USR',  RETRIVE USER PROFILE DATA         X
               ENTRY=R3,              (R3) ADDR OF USERID AREA         X
               ACTIONS=(R4),          (R4) 2ND-LEVEL PLISTS            X
               MF=L                   THIS IS A LIST-FORMAT
@ALTERL  EQU   *-@ALTER
*---------------------------------------------------------------------*
@ACTION  ICHEACTN FIELD=USERDATA,FLDATA=(R2,R3),TESTS=(R4),MF=L
@ACTIONL EQU   *-@ACTION
*---------------------------------------------------------------------*
@TEST    ICHETEST FIELD=USRNM,FLDATA=(14,R2),COND=EQ,MF=L
@TESTL   EQU   *-@TEST
         ORG   ,
*---------------------------------------------------------------------*
@WRKEND  DS    0D                     END OF @WRKAREA
@WRKSIZE EQU   @WRKEND-@WRKAREA       LENGTH OF @WRKAREA
*---------------------------------------------------------------------*
         PUSH  PRINT                  - SAVE PRINT OPTIONS STATUS
         PRINT NOGEN                  - SUPPRESS MACRO EXPANSIONS
         POP   PRINT
*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
         TITLE 'SET RACF USER PROFILE FOR TSU/STC                      X
               *** IKJPARSE PARM CSECT/DSECT ***'
SETUSER  CSECT ,
***********************************************************************
*  IKJPARSE CSECT/DSECT AREA:                                         *
*                                                                     *
*  The following IKJPARM specification will kick-off the generation   *
*  of the SETUPCL CSECT and the SETUPDL DSECT.  The CSECT tells       *
*  IKJPARS what we want, and IKJPARS tells us what we got via the     *
*  DSECT.  This information is passed via the Parse Parameter List,   *
*  or the PPL.                                                        *
*                                                                     *
***********************************************************************
         SPACE 2
*---------------------------------------------------------------------*
SETUPCL  IKJPARM DSECT=SETUPDL
*=====================================================================*
         EJECT ,
***********************************************************************
*  The USERID Keyword:                                                *
*                                                                     *
*  The following IKJKEYWD specification tells IKJPARS that we are     *
*  looking for the keyword 'USERID', and it has some subfields.       *
*  Label PDLKUID resides in the DSECT, where PARSE will tell us       *
*  whether the USERID keyword was specified.  Label PCLKUID resides   *
*  in the CSECT, and defines everything that will be in between the   *
*  parentheses of USERID(.....).                                      *
*                                                                     *
***********************************************************************
PDLKUID  IKJKEYWD ,
*---------------------------------------------------------------------*
         IKJNAME 'USERID',SUBFLD=PCLKUID
*=====================================================================*
         EJECT ,
***********************************************************************
*  The NAME Keyword:                                                  *
*                                                                     *
*  The following IKJKEYWD specification tells IKJPARS that we are     *
*  looking for the keyword 'NAME', and it has some subfields.         *
*  We will also accept PROGRAMMERNAME or PGMRNAME as synonyms for     *
*  NAME.  Label PDLKNAM resides in the DSECT, where PARSE will tell   *
*  us whether the NAME keyword was specified.    Label PCLKNAM        *
*  resides in the CSECT, and defines everything that will be in       *
*  between the parentheses of NAME(.....).                            *
*                                                                     *
***********************************************************************
PDLKNAM  IKJKEYWD ,
*---------------------------------------------------------------------*
         IKJNAME 'NAME',ALIAS=('PROGRAMMERNAME','PGMRNAME'),           X
               SUBFLD=PCLKNAM
*=====================================================================*
         EJECT ,
***********************************************************************
*  The ROOM Keyword:                                                  *
*                                                                     *
*  The following IKJKEYWD specification tells IKJPARS that we are     *
*  looking for the keyword 'ROOMNUMBER', and it has some subfields.   *
*  Label PDLKROM resides in the DSECT, where PARSE will tell us       *
*  whether the USERID keyword was specified.  Label PCLKROM resides   *
*  in the CSECT, and defines everything that will be in between the   *
*  parentheses of ROOMNUMBER(.....).                                  *
*                                                                     *
***********************************************************************
PDLKROM  IKJKEYWD ,
*---------------------------------------------------------------------*
         IKJNAME 'ROOMNUMBER',SUBFLD=PCLKROM
*=====================================================================*
         EJECT ,
***********************************************************************
*  The MSGCLASS Keyword:                                              *
*                                                                     *
*  The following IKJKEYWD specification tells IKJPARS that we are     *
*  looking for the keyword 'MSGCLASS', and it has some subfields.     *
*  We will also accept SYSOUTCLASS as a synonym for MSGCLASS. Label   *
*  PDLKMSG resides in the DSECT, where PARSE will tell us whether     *
*  the MSGCLASS keyword was specified.  Label PCLKMSG resides in the  *
*  CSECT, and defines everything that will be in between the          *
*  parentheses of MSGCLASS(.....).                                    *
*                                                                     *
***********************************************************************
PDLKMSG  IKJKEYWD ,
*---------------------------------------------------------------------*
         IKJNAME 'MSGCLASS',ALIAS=('SYSOUTCLASS'),                     X
               SUBFLD=PCLKMSG
*=====================================================================*
         EJECT ,
***********************************************************************
*  Contents of the USERID keyword:                                    *
*  The following IKJSUBF and IKJIDENT macros determines the content   *
*  of the USERID keyword.  PCLKUID is referenced by the IKJNAME       *
*  macro for USERID via the SUBFLD, and resides within the CSECT.     *
*  The IKJIDENT defines what the subfield information is to look      *
*  like.  Label PDLLUID represents the PDE that will be returned by   *
*  PARSE.  The format of the 3-word PDE is described by our own PDE   *
*  dsect.  Through the PDE's, we will obtain the actual string of     *
*  USERID's specified from the issuer's command text.  If the USERID  *
*  parameter contains no data, then PARSE will stuff an asterisk (*)  *
*  for the parameter subfield value.                                  *
***********************************************************************
PCLKUID  IKJSUBF
PDLLUID  IKJIDENT 'USERID',LIST,                                       X
               FIRST=ALPHANUM,OTHER=ALPHANUM,MAXLNTH=8,                X
               ASTERISK,DEFAULT='*',                                   X
               HELP=('You must have RACF SPECIAL and/or OPERATIONS authX
               ority to access user profiles other than your own.')
*=====================================================================*
         EJECT ,
***********************************************************************
*  Contents of the NAME keyword:                                      *
*  The following IKJSUBF and IKJIDENT macros determines the content   *
*  of the NAME keyword.  PCLKNAM is referenced by the IKJNAME         *
*  macro for NAME via the SUBFLD, and resides within the CSECT.       *
*  The IKJIDENT defines what the subfield information is to look      *
*  like.  Label PDLLNAM represents the PDE that will be returned by   *
*  PARSE.  The format of the 3-word PDE is described by our own PDE   *
*  DSECT.  Through the PDE's, we will obtain the actual content of    *
*  NAME as specified from the issuer's command text.  If the NAME     *
*  parameter contained no data, then PARSE will stuff an asterisk (*) *
*  for the parameter subfield value.                                  *
***********************************************************************
PCLKNAM  IKJSUBF
PDLLNAM  IKJIDENT 'NAME',UPPERCASE,ASTERISK,MAXLNTH=20,                X
               DEFAULT='*',CHAR,FIRST=ANY,OTHER=ANY,                   X
               HELP=('20-char PROGRAMMER-NAME field for TSU/STC jobs.')
*=====================================================================*
         EJECT ,
***********************************************************************
*  Contents of the ROOMNUMBER keyword:                                *
*  The following IKJSUBF and IKJIDENT macros determines the content   *
*  of the ROOMNUMBER keyword.  PCLKROM is referenced by the IKJNAME   *
*  macro for ROOMNUMBER via the SUBFLD, and resides within the        *
*  CSECT.  The IKJIDENT defines what the subfield information is to   *
*  look like.  Label PDLLROM represents the PDE that will be          *
*  returned by PARSE.  The format of the 3-word PDE is described by   *
*  our own PDE DSECT.  Through the PDE's, we will obtain the actual   *
*  content of ROOMNUMBER as specified from the issuer's command       *
*  text.  If the ROOMNUMBER parameter was specified, but contained    *
*  no data, then PARSE will stuff an asterisk (*) for the parameter   *
*  subfield value.                                                    *
***********************************************************************
PCLKROM  IKJSUBF
PDLLROM  IKJIDENT 'ROOM-NUMBER',UPPERCASE,ASTERISK,MAXLNTH=4,          X
               FIRST=ALPHANUM,OTHER=ALPHANUM,DEFAULT='*',              X
               HELP=('Your 4-char room number or floor.')
*=====================================================================*
         EJECT ,
***********************************************************************
*  Contents of the MSGCLASS keyword:                                  *
*  The following IKJSUBF and IKJIDENT macros determines the content   *
*  of the MSGCLASS keyword.    PCLKMSG is referenced by the IKJNAME   *
*  macro for MSGCLASS via the SUBFLD, and resides within the          *
*  CSECT.  The IKJIDENT defines what the subfield information is to   *
*  look like.  Label PDLLMSG represents the PDE that will be          *
*  returned by PARSE.  The format of the 2-word PDE is described by   *
*  our own PDE DSECT.  Through the PDE's, we will obtain the actual   *
*  content of MSGCLASS as specified from the issuer's command         *
*  text.  If the MSGCLASS parameter was specified, but contained      *
*  no data, then PARSE will stuff an asterisk (*) for the parameter   *
*  subfield value.                                                    *
***********************************************************************
PCLKMSG  IKJSUBF
PDLLMSG  IKJIDENT 'MSGCLASS',UPPERCASE,ASTERISK,MAXLNTH=1,             X
               FIRST=ALPHANUM,DEFAULT='*',                             X
               HELP=('The MSGCLASS must be a valid sysout class.')
*=====================================================================*
         EJECT ,
***********************************************************************
*  IKJENDP Macro:                                                     *
*                                                                     *
*  This determines the end of the SETUPCL CSECT and the SETUPDL       *
*  DSECT.                                                             *
*                                                                     *
***********************************************************************
         IKJENDP
*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
         TITLE 'SET RACF USER PROFILE FOR TSU/STC                      X
               *** IKJTSMSG CSECT ***'
         EJECT
***********************************************************************
****  SETUMSG: MESSAGE CSECT                                       ****
***********************************************************************
SETUMSG  CSECT ,
*---------------------------------------------------------------------*
MSG11    IKJTSMSG ('SETUSER-11: Error in PARSE serfice routine, RC=',  X
               ,                      <---- (RETURN-CODE GOES HERE)    X
               '.'),M011
*---------------------------------------------------------------------*
MSG12    IKJTSMSG ('SETUSER-12: Command must be issued via TSOEXEC whenX
                invoked under ISPF.'),M012
*---------------------------------------------------------------------*
MSG31    IKJTSMSG ('SETUSER-31: Simultaneous update of multiple useridsX
                is not supported.'),                                   X
               M031
*---------------------------------------------------------------------*
MSG33    IKJTSMSG ('SETUSER-33: Userid ',                              X
               ,                      <---- (USERID GOES HERE)         X
               ' is not authorized to access other ID''S.'),           X
               M033
*---------------------------------------------------------------------*
MSG34    IKJTSMSG ('SETUSER-34: Userid ',                              X
               ,                      <---- (USERID GOES HERE)         X
               ' is not authorized to update other ID''S.'),           X
               M034
*---------------------------------------------------------------------*
MSG35    IKJTSMSG ('SETUSER-35: Userid ',                              X
               ,                      <---- (USERID GOES HERE)         X
               ' is not authorized to update MSGCLASS value.'),        X
               M035
*---------------------------------------------------------------------*
MSG50    IKJTSMSG (' SETUSER  USERID(',                                X
               ,                      <---- (USERID GOES HERE)         X
               ')  NAME(''',                                           X
               ,                      <---- (PGMRNAME GOES HERE)       X
               ''')  ROOM(',                                           X
               ,                      <---- (ROOM NUM GOES HERE)       X
               ')  ',                                                  X
               ,),                    <---- (MSGCLASS TEXT HERE)       X
               M050
*---------------------------------------------------------------------*
MSG70    IKJTSMSG ('SETUSER-70: User ',                                X
               ,                      <---- (USERID GOES HERE)         X
               ' is not defined to RACF.'),                            X
               M070
*---------------------------------------------------------------------*
MSG71    IKJTSMSG ('SETUSER-71: RACF MGR Locate Call Error, RC=',      X
               ,                      <---- (RETURN-CODE GOES HERE)    X
               'Reason=',                                              X
               ,                      <---- (REASON-CODE GOES HERE)    X
               'for Userid=',                                          X
               ,                      <---- (USERID GOES HERE)         X
               '.'),M071
*---------------------------------------------------------------------*
         IKJTSMSG ,
*=====================================================================*
*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
         TITLE 'SET RACF USER PROFILE FOR TSU/STC                      X
               *** DSECTS ***'
***********************************************************************
*****  PDE:  A PARAMETER DESCRIPTOR ENTRY                         *****
***********************************************************************
PDE      DSECT ,
PDEDATA  DS    A                      ADDRESS OF DATA
PDELENG  DS    H                      LENGTH OF DATA
PDEFLAG  DS    BL1                    FLAG BYTE
         DS    XL1                    (RESERVED)
PDENEXT  DS    A                      ADDR OF NEXT PDE IN CHAIN
*---------------------------------------------------------------------*
         SPACE 1
***********************************************************************
*****  SAVEAREA:                                                  *****
***********************************************************************
SAVEAREA DSECT ,
SAVEWD1  DS    F                      PL/I WORD
SAVELAST DS    A                      CALLER'S SAVEAREA
SAVENEXT DS    A                      CALLEE'S SAVEAREA
SAVER14  DS    F                      R14
SAVER15  DS    F                      R15
SAVER0   DS    F                      R0
SAVER1   DS    F                      R1
SAVER2   DS    F                      R2
SAVER3   DS    F                      R3
SAVER4   DS    F                      R4
SAVER5   DS    F                      R5
SAVER6   DS    F                      R6
SAVER7   DS    F                      R7
SAVER8   DS    F                      R8
SAVER9   DS    F                      R9
SAVER10  DS    F                      R10
SAVER11  DS    F                      R11
SAVER12  DS    F                      R12
*---------------------------------------------------------------------*
         EJECT ,
***********************************************************************
****  RACF WKAREA BUFFER:                                          ****
***********************************************************************
RACFAREA DSECT ,                   RETURNED DATA FROM ICHEINTY:
RACALENG DS    A                      LENGTH OF BUFFER AREA
RACCNTL  DS    0XL30                  RESET AREA
RACRBA   DS    XL6
RACFLG1  DS    BL1
RACRSV1  DS    XL1
RACDUPCT DS    A
RACRSV2  DS    XL8
RACRLENG DS    F                      LENGTH OF RETURNED DATA
RACDATA  DS    0C                     AREA FOR RETURNED FIELDS
*---------------------------------------------------------------------*
         PRINT NOGEN
***********************************************************************
*****    TSO DSECTS:                                              *****
***********************************************************************
         IKJCPPL ,                     CPPL: SYS1.MACLIB
         IKJPPL ,                      PPL:  SYS1.MACLIB
         IKJTSVT ,                     TSVT: SYS1.MACLIB
         SPACE 1
***********************************************************************
*****  OTHER SYSTEM DSECTS:                                       *****
***********************************************************************
         YREGS ,                      REGS: SYS1.MACLIB
         IHAPSA DSECT=YES,LIST=YES    PSA:  SYS1.AMODGEN
         IKJTCB DSECT=YES,LIST=YES    TCB:  SYS1.AMODGEN
         IEZJSCB ,                    JSCB: SYS1.AMODGEN
         CVT   DSECT=YES,LIST=YES     CVT:  SYS1.AMODGEN
         IHAASCB DSECT=YES            ASCB: SYS1.AMODGEN
         IHAASXB DSECT=YES            ASXB: SYS1.AMODGEN
         IHAACEE ,                    ACEE: SYS1.MACLIB
         SPACE 1
*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
         END   ,
