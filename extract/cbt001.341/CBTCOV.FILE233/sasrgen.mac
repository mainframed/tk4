//SASRGEN   JOB (,E112),'DAN SQUILLACE',TIME=2,NOTIFY=
/*JOBPARM FETCH
//*
//*  THIS JOB TAKES IN A SET OF DISCRETE PROFILES LISTED BY THE
//*  LD COMMAND AND PRODUCES A SET OF EQUIVALENT GENERICS OF THE FORMS:
//*
//*     A.*
//*     A.B.*
//*     A.B.C.*
//*     A.B.C.D.*
//*     A.B.C.D.E.*
//*     A.B.C.D.E.F.*
//*     A.B.C.D.E.F.G
//*
//*  AT ANY GIVEN LEVEL, THE ACCESS LIST WHICH COVERS THE MOST
//*  DISCRETE PROFILES AT THAT LEVEL IS ASSIGNED.
//*
//*  RACF COMMANDS TO DEFINE THE NEW GENERIC PROFILES ARE STORED IN
//*  THE DATASET REFERENCED BY DDNAME DEFCMDS AND COMMANDS TO DELETE
//*  THE DISCRETE PROFILES ARE STORED IN THE DATASET REFERENCED BY
//*  DDNAME DELCMDS.
//*
//*  NOTE THAT GENERIC FORMS SUCH AS A.*.B AND THOSE CONTAINING
//*  WILDCARD CHARACTERS ARE NOT GENERATED.
//*
//* THIS PROGRAM ALSO PROCESSES ONLY THE TRADITIONAL ID/ACCESS
//* AND UACC INFORMATION.  THE NEW SECURITY LEVEL AND CLASSIFICATION
//* CONTROLS INTRODUCED IN RELEASE 7 ARE NOT SUPPORTED.  HOWEVER,
//* THE PROGRAM COULD BE EXTENDED TO SUPPORT THESE.
//*
//*
//* EXECUTE TSO LISTDSD COMMAND FOR IDS OR PREFIXS TO BE CONVERTED
//*
//S1      EXEC PGM=IKJEFT01
//SYSTSPRT  DD DSN=&&LDOUT,DISP=(,PASS),UNIT=RIO,SPACE=(CYL,(5,10)),
// DCB=(RECFM=FB,LRECL=80,BLKSIZE=6160)
//SYSPRINT  DD SYSOUT=*
//SYSTSIN   DD *
 LD PREFIX(SSD)    AUTHUSER
//*
//S2    EXEC SAS
//WORK  DD UNIT=RIO,SPACE=(CYL,(20,10))
//RACFIN    DD DSN=&&LDOUT,DISP=OLD
//RACFDB    DD DSN=SNODJS.RACFDBA,DISP=OLD
//*ACFDB    DD DSN=SNODJS.RACFDBA,DISP=(,CATLG),
//*VOL=SER=SNO111,UNIT=3350,SPACE=(CYL,(20,10))
//DEFCMDS   DD DSN=SNODJS.RACF.DEFCMDS,DISP=OLD
//*EFCMDS   DD DSN=SNODJS.RACF.DEFCMDS,DISP=(,CATLG),
//*VOL=SER=SNO111,UNIT=3350,SPACE=(CYL,(1,1)),
//*DCB=(RECFM=FB,LRECL=80,BLKSIZE=6160)
//DELCMDS   DD DSN=SNODJS.RACF.DELCMDS,DISP=OLD
//*ELCMDS   DD DSN=SNODJS.RACF.DELCMDS,DISP=(,CATLG),
//*VOL=SER=SNO111,UNIT=3350,SPACE=(CYL,(1,1)),
//*DCB=(RECFM=FB,LRECL=80,BLKSIZE=6160)
 /*
   SCAN OUTPUT OF LISTDSD AND GENERATE ONE RECORD FOR EACH
   DATASET/PROTECTION RULE COMBINATION
 */

  DATA RACFDB.DPROFS(KEEP = DATASET ID ACCESS OWNER UACC CGROUP VOL);
  LENGTH LINE $ 13;
  LENGTH UACC $ 8;
  INFILE RACFIN EOF=QUIT;
  /*IF _N_ > 200   THEN STOP;*/
   DO UNTIL(LINE  = 'INFORMATION');
       INPUT @2 LINE   $CHAR11.
             @26 DATASET $CHAR44.;
       END;

   DO UNTIL(LINE  = 'LEVEL');
       INPUT @2 LINE  $CHAR5.;
       END;

  INPUT /   @9 OWNER $CHAR8.
            @23 UACC $8.;

  DO UNTIL(LINE  = 'YOUR ACCESS');
       INPUT @2 LINE  $CHAR11.;
       END;

  INPUT /   @18 CGROUP $CHAR8.;

  DO UNTIL(LINE  = 'VOLUMES');
       INPUT @2 LINE  $CHAR7.;
       END;

  INPUT /   @2 VOL $CHAR6.;
  IF VOL = 'RACF01' OR SUBSTR(VOL,1,1) = ' '
  THEN VOL = ' ';

  DO UNTIL(LINE  = 'ID     ACCESS');
    INPUT @5 LINE  $CHAR13.;
    END;

  INPUT;
  NOACC = 1;
  NEXT: INPUT @2 ID $CHAR8.
              @13 ACCESS $CHAR1.;
        IF ID = ' ' THEN DO;
                         IF NOACC THEN DO;
                            ID = '******';
                            ACCESS = '*';
                            OUTPUT;
                            END;
                         RETURN;
                         END;
        NOACC = 0;
        IF ACCESS = 'P' THEN ACCESS = 'U';
        ELSE IF ACCESS = 'O' THEN ACCESS = 'C';
        OUTPUT;
        GO TO NEXT;
  QUIT: STOP;
  RUN;

  PROC SORT DATA=RACFDB.DPROFS NODUPS;BY DATASET VOL ID;
  RUN;

 /*
    GENERATE ONE RECORD PER DATASET.  CONSOLIDATE ACCESS RULES
    INTO AN ACCESS STRING
 */

  DATA RACFDB.DPROF2(KEEP= DATASET ACCLIST CGROUP UACC VOL LEV1-LEV7
                           OWNER MODEL);
  ARRAY LEVEL{7} $ 8 LEV1-LEV7;
  LENGTH ACCLIST $  200;
  RETAIN ACCLIST;
  SET RACFDB.DPROFS;BY DATASET VOL;
  ACCLIST = TRIM(ACCLIST)××TRIM(ID)××','××ACCESS××'/';
  IF LAST.VOL THEN DO;
     LINK PARSEDSN;
     IF LEV2 = 'MODEL' AND LEV3 = ' ' THEN MODEL = 'M' ;
       ELSE MODEL = 'N';
     OUTPUT;
     ACCLIST = ' ';
     END;
 PARSEDSN:
   DO I = 1 TO 7;
    LEVEL{I} = SCAN(DATASET,I,'.');
   END;
   RETURN;
  RUN;

 PROC PRINT;VAR DATASET VOL UACC ACCLIST;
 FORMAT ACCLIST $CHAR60.;
 TITLE1 "PROFILES AS THEY EXIST BEFORE CONVERSION";
 RUN;



 PROC SORT DATA=RACFDB.DPROF2 OUT=PROFWORK;BY LEV1    MODEL;
 RUN;

 /*
  DELETE ALL RECORDS WHICH MATCH THE MODEL PROFILE
 */

 DATA RACFDB.DPROF3;
 DROP  MACC MUACC;
 RETAIN MACC MUACC;
 SET PROFWORK;
 IF MODEL = 'M' THEN DO;
                MACC = ACCLIST;
                MUACC = UACC;
                RETURN;
                END;
 IF ACCLIST = MACC AND MUACC = UACC THEN DELETE;
 RUN;

  /* -----------

 PROC PRINT DATA=RACFDB.DPROF3; ID DATASET;VAR UACC ACCLIST;
 FORMAT DATASET $CHAR30. ACCLIST $CHAR95.;
 TITLE1 "DISCRETE PROFILES SORTED BY DATASET NAME";
 RUN;

     ----------- */

 PROC SORT DATA=RACFDB.DPROF3 OUT=PROFWORK;
           BY LEV1 ACCLIST UACC DATASET;
 RUN;

  /* -----------

 PROC PRINT; ID DATASET;VAR UACC ACCLIST;
 FORMAT DATASET $CHAR30. ACCLIST $CHAR90.;
 TITLE 'SORTED BY ACCESS LIST';
 RUN;

     ----------- */

 DATA PROFWORK;
 LENGTH COUNT2-COUNT7 ID2-ID7 4;
 RETAIN ID2-ID7 1;
 DROP WRITEGEN MODEL;
 SET PROFWORK;
    BY LEV1 ACCLIST UACC LEV2 LEV3 LEV4 LEV5 LEV6 LEV7;
 IF MODEL = 'M' THEN DELETE;
 COUNT2+1;
 COUNT3+1;
 COUNT4+1;
 COUNT5+1;
 COUNT6+1;
 COUNT7+1;
 WRITEGEN =1;
 IF LAST.LEV2 THEN DO;
               IF LEV2 ^= ' ' THEN DO;
                                   OUTPUT PROFWORK;
                                   WRITEGEN=0;
                                   END;
               ID2+1;
               COUNT2 = 0;
               END;
 IF LAST.LEV3 THEN DO;
               IF LEV3 ^= ' ' AND WRITEGEN THEN DO;
                                   OUTPUT PROFWORK;
                                   WRITEGEN=0;
                                   END;
               ID3+1;
               COUNT3 = 0;
               END;
 IF LAST.LEV4 THEN DO;
               IF LEV4 ^= ' ' AND WRITEGEN THEN DO;
                                   OUTPUT PROFWORK;
                                   WRITEGEN=0;
                                   END;
               ID4+1;
               COUNT4 = 0;
               END;
 IF LAST.LEV5 THEN DO;
               IF LEV5 ^= ' ' AND WRITEGEN THEN DO;
                                   OUTPUT PROFWORK;
                                   WRITEGEN=0;
                                   END;
               ID5+1;
               COUNT5 = 0;
               END;
 IF LAST.LEV6 THEN DO;
               IF LEV6 ^= ' ' AND WRITEGEN THEN DO;
                                   OUTPUT PROFWORK;
                                   WRITEGEN=0;
                                   END;
               ID6+1;
               COUNT6 = 0;
               END;
 IF LAST.LEV7 THEN DO;
               IF LEV7 ^= ' ' AND WRITEGEN THEN DO;
                                   OUTPUT PROFWORK;
                                   WRITEGEN=0;
                                   END;
               ID7+1;
               COUNT7 = 0;
               END;
 RUN;

 PROC SORT DATA=PROFWORK;BY LEV1 LEV2 DESCENDING COUNT2;
 RUN;

  /* -----------

 PROC PRINT; VAR LEV1 LEV2 ID2 COUNT2
                      LEV3 ID3 COUNT3
                      LEV4 ID4 COUNT4;
 TITLE "DEBUGGING REPORT";
 RUN;

     ----------- */

 *
 *   GENERATE 2-LEVEL GENERICS
 *;

 DATA
 RACFDB.L2PROF(KEEP = LEV1 LEV2 ID2 UACC ACCLIST OWNER CGROUP)
        PROFWORK(DROP = RID);
 RETAIN RID;
 SET PROFWORK;BY LEV1 LEV2;
 IF FIRST.LEV2 THEN DO;
                    OUTPUT RACFDB.L2PROF;
                    RID = ID2;
                    END;
 ELSE IF RID = ID2 OR LEV3 = ' '  THEN DELETE;
 ELSE OUTPUT PROFWORK;
 RUN;

 PROC PRINT DATA=RACFDB.L2PROF;VAR LEV1 LEV2 ID2;
 TITLE '2-LEVEL GENERICS';
 RUN;
 *
 *   GENERATE 3-LEVEL GENERICS
 *;
 PROC SORT DATA=PROFWORK;BY LEV1 LEV2 LEV3 DESCENDING COUNT3;
 RUN;

 DATA
 RACFDB.L3PROF(KEEP = LEV1-LEV3 ID3 UACC ACCLIST OWNER CGROUP)
        PROFWORK(DROP = RID);
 RETAIN RID;
 SET PROFWORK;BY LEV1 LEV2 LEV3;
 IF FIRST.LEV3 THEN DO;
                    OUTPUT RACFDB.L3PROF;
                    RID = ID3;
                    END;
 ELSE IF RID = ID3 OR LEV4 = ' ' THEN DELETE;
 ELSE OUTPUT PROFWORK;
 RUN;

 PROC PRINT DATA=RACFDB.L3PROF;VAR LEV1-LEV3 ID3;
 TITLE '3-LEVEL GENERICS';
 RUN;
 *
 *   GENERATE 4-LEVEL GENERICS
 *;
 PROC SORT DATA=PROFWORK;BY LEV1 LEV2 LEV3 LEV4 DESCENDING COUNT4;
 RUN;

 DATA
 RACFDB.L4PROF(KEEP = LEV1-LEV4 ID4 UACC ACCLIST OWNER CGROUP)
        PROFWORK(DROP = RID);
 RETAIN RID;
 SET PROFWORK;BY LEV1 LEV2 LEV3 LEV4;
 IF FIRST.LEV4 THEN DO;
                    OUTPUT RACFDB.L4PROF;
                    RID = ID4;
                    END;
 ELSE IF RID = ID4 OR LEV5 = ' ' THEN DELETE;
 ELSE OUTPUT PROFWORK;
 RUN;

 PROC PRINT DATA=RACFDB.L4PROF;VAR LEV1-LEV4 ID4;
 TITLE '4-LEVEL GENERICS';
 RUN;
 *
 *   GENERATE 5-LEVEL GENERICS
 *;
 PROC SORT DATA=PROFWORK;BY LEV1 LEV2 LEV3 LEV4 LEV5
                          DESCENDING COUNT5;
 RUN;

 DATA
 RACFDB.L5PROF(KEEP = LEV1-LEV5 ID5 UACC ACCLIST OWNER CGROUP)
       PROFWORK(DROP = RID);
 RETAIN RID;
 SET PROFWORK;BY LEV1 LEV2 LEV3 LEV4 LEV5;
 IF FIRST.LEV5 THEN DO;
                    OUTPUT RACFDB.L5PROF;
                    RID = ID5;
                    END;
 ELSE IF RID = ID5 OR LEV6 = ' ' THEN DELETE;
 ELSE OUTPUT PROFWORK;
 RUN;

 PROC PRINT DATA=RACFDB.L5PROF;VAR LEV1-LEV5 ID5;
 TITLE '5-LEVEL GENERICS';
 RUN;
 *
 *   GENERATE 6-LEVEL GENERICS
 *;
 PROC SORT DATA=PROFWORK;BY LEV1 LEV2 LEV3 LEV4 LEV5 LEV6
                          DESCENDING COUNT6;
 RUN;

 DATA
 RACFDB.L6PROF(KEEP = LEV1-LEV6 ID6 UACC ACCLIST OWNER CGROUP)
      RACFDB.L7PROF(KEEP = DATASET UACC ACCLIST OWNER CGROUP);
 RETAIN RID;
 SET PROFWORK;BY LEV1 LEV2 LEV3 LEV4 LEV5 LEV6;
 IF FIRST.LEV6 THEN DO;
                    OUTPUT RACFDB.L6PROF;
                    RID = ID6;
                    END;
 ELSE IF RID = ID6 OR LEV7 = ' ' THEN DELETE;
 ELSE OUTPUT RACFDB.L7PROF;
 RUN;

 PROC PRINT DATA=RACFDB.L6PROF;VAR LEV1-LEV6 ID6;
 TITLE '6-LEVEL GENERICS';
 RUN;

 PROC PRINT DATA=RACFDB.L7PROF;VAR DATASET;
 TITLE '7-LEVEL PROFILES';
 RUN;

 %MACRO GENCMD;
 LOADUP:
 IN=1;IR=1;IU=1;IA=1;IC=1;
 DO I = 1 TO 40;
 NAC{I} = ' ';
 RAC{I} = ' ';
 UAC{I} = ' ';
 AAC{I} = ' ';
 CAC{I} = ' ';
 END;
 DO IX = 1 BY 1;
  ACCRULE = SCAN(ACCLIST,IX,'/');
  IF ACCRULE = ' ' THEN RETURN;
  ACCID =   SCAN(ACCRULE,1,',');
  ACCTYPE = SCAN(ACCRULE,2,',');
  IF ACCTYPE = 'R' THEN DO;
                   RAC{IR} = ACCID;
                   IR+1;END;
  ELSE IF ACCTYPE = 'U' THEN DO;
                   UAC{IU} = ACCID;
                   IU+1;END;
  ELSE IF ACCTYPE = 'A' THEN DO;
                   AAC{IA} = ACCID;
                   IA+1;END;
  ELSE IF ACCTYPE = 'N' THEN DO;
                   NAC{IN} = ACCID;
                   IN+1;END;
  ELSE IF ACCTYPE = 'C' THEN DO;
                   CAC{IC} = ACCID;
                   IC+1;END;
  END;

PERMIT:
RESET = 'RESET';
IF CAC{1} ^= ' ' THEN DO;
                    LINK PC;
                    RESET = ' ';
                    END;
IF AAC{1} ^= ' ' THEN DO;
                    LINK PA;
                    RESET = ' ';
                    END;
IF UAC{1} ^= ' ' THEN DO;
                    LINK PU;
                    RESET = ' ';
                    END;
IF RAC{1} ^= ' ' THEN DO;
                    LINK PR;
                    RESET = ' ';
                    END;
IF  NAC{1} ^= ' ' THEN DO;
                    LINK PN;
                    RESET = ' ';
                    END;
RETURN;

PC:
IDCNT = 1;
PUT "  PE " RNAME "ACCESS(CONTROL) GENERIC " RESET " +";
PUT "   ID(" @;
DO IX = 1 TO 40;
IF CAC{IX} = ' ' THEN GO TO ENDC;
IF IDCNT = 8 THEN DO;
                  IDCNT = 1;
                  PUT '+'/'     ' @;
                  END;
PUT CAC{IX} @;
IDCNT+1;
END;
ENDC: PUT ")";
      RETURN;

PA:
IDCNT = 1;
PUT "  PE " RNAME "ACCESS(ALTER) GENERIC " RESET " +";
PUT "   ID(" @;
DO IX = 1 TO 40;
IF AAC{IX} = ' ' THEN GO TO ENDA;
IF IDCNT = 8 THEN DO;
                  IDCNT = 1;
                  PUT '+'/'     ' @;
                  END;
PUT AAC{IX} @;
IDCNT+1;
END;
ENDA: PUT ")";
      RETURN;

PU:
IDCNT = 1;
PUT "  PE " RNAME "ACCESS(UPDATE) GENERIC " RESET " +";
PUT "   ID(" @;
DO IX = 1 TO 40;
IF UAC{IX} = ' ' THEN GO TO ENDU;
IF IDCNT = 8 THEN DO;
                  IDCNT = 1;
                  PUT '+'/'     ' @;
                  END;
PUT UAC{IX} @;
IDCNT+1;
END;
ENDU: PUT ")";
      RETURN;

PR:
IDCNT = 1;
PUT "  PE " RNAME "ACCESS(READ) GENERIC " RESET " +";
PUT "   ID(" @;
DO IX = 1 TO 40;
IF RAC{IX} = ' ' THEN GO TO ENDR;
IF IDCNT = 8 THEN DO;
                  IDCNT = 1;
                  PUT '+'/'     ' @;
                  END;
PUT RAC{IX} @;
IDCNT+1;
END;
ENDR: PUT ")";
      RETURN;

PN:
IDCNT = 1;
PUT "  PE " RNAME "ACCESS(NONE) GENERIC " RESET " +";
PUT "   ID(" @;
DO IX = 1 TO 40;
IF  NAC{IX} = ' ' THEN GO TO ENDN;
IF IDCNT = 8 THEN DO;
                  IDCNT = 1;
                  PUT '+'/'     ' @;
                  END;
PUT  NAC{IX} @;
IDCNT+1;
END;
ENDN: PUT ")";
      RETURN;
%MEND;
*
* GENERATE COMMANDS TO DEFINE LEVEL 1 (MODEL) PROFILES
*;
 DATA _NULL_;
 FILE DEFCMDS MOD;
 LENGTH IN IR IU IA IC IX 4;
 LENGTH ACCRULE $ 10 ACCTYPE $ 1 ACCID $ 8 RNAME $ 12;
 ARRAY    NAC{40} $ 8;
 ARRAY    RAC{40} $ 8;
 ARRAY    UAC{40} $ 8;
 ARRAY    AAC{40} $ 8;
 ARRAY    CAC{40} $ 8;
 SET RACFDB.DPROF3;
 IF MODEL = 'M';
 RNAME= "'"××TRIM(LEV1)××".*'";
 PUT  "AD " RNAME " UACC(" UACC ") OWNER(" OWNER ") GENERIC";
 LINK LOADUP;
 LINK PERMIT;
 RETURN;

 %GENCMD
 RUN;

*
* GENERATE COMMANDS TO DEFINE LEVEL 2  PROFILES
*;
 DATA _NULL_;
 FILE DEFCMDS MOD;
 LENGTH IN IR IU IA IC IX 4;
 LENGTH ACCRULE $ 10 ACCTYPE $ 1 ACCID $ 8 RNAME $ 46;
 ARRAY    NAC{40} $ 8;
 ARRAY    RAC{40} $ 8;
 ARRAY    UAC{40} $ 8;
 ARRAY    AAC{40} $ 8;
 ARRAY    CAC{40} $ 8;
 SET RACFDB.L2PROF;
 RNAME= "'"××TRIM(LEV1)××"."××TRIM(LEV2)××".*'";
 PUT  "AD " RNAME " UACC(" UACC ") OWNER(" OWNER ") GENERIC";
 LINK LOADUP;
 LINK PERMIT;
 RETURN;


 %GENCMD
 RUN;

*
* GENERATE COMMANDS TO DEFINE LEVEL 3  PROFILES
*;
 DATA _NULL_;
 FILE DEFCMDS MOD;
 LENGTH IN IR IU IA IC IX 4;
 LENGTH ACCRULE $ 10 ACCTYPE $ 1 ACCID $ 8 RNAME $ 46;
 ARRAY    NAC{40} $ 8;
 ARRAY    RAC{40} $ 8;
 ARRAY    UAC{40} $ 8;
 ARRAY    AAC{40} $ 8;
 ARRAY    CAC{40} $ 8;
 SET RACFDB.L3PROF;
 RNAME= "'"××TRIM(LEV1)××"."××TRIM(LEV2)××"."××TRIM(LEV3)××".*'";
 PUT  "AD " RNAME " UACC(" UACC ") OWNER(" OWNER ") GENERIC";
 LINK LOADUP;
 LINK PERMIT;
 RETURN;

 %GENCMD
 RUN;

*
* GENERATE COMMANDS TO DEFINE LEVEL 4  PROFILES
*;
 DATA _NULL_;
 FILE DEFCMDS MOD;
 LENGTH IN IR IU IA IC IX 4;
 LENGTH ACCRULE $ 10 ACCTYPE $ 1 ACCID $ 8 RNAME $ 46;
 ARRAY    NAC{40} $ 8;
 ARRAY    RAC{40} $ 8;
 ARRAY    UAC{40} $ 8;
 ARRAY    AAC{40} $ 8;
 ARRAY    CAC{40} $ 8;
 SET RACFDB.L4PROF;
 RNAME= "'"××TRIM(LEV1)××"."××TRIM(LEV2)××"."××TRIM(LEV3)××"."
           ××TRIM(LEV4)××".*'";
 PUT  "AD " RNAME " UACC(" UACC ") OWNER(" OWNER ") GENERIC";
 LINK LOADUP;
 LINK PERMIT;
 RETURN;

 %GENCMD
 RUN;

*
* GENERATE COMMANDS TO DEFINE LEVEL 5  PROFILES
*;
 DATA _NULL_;
 FILE DEFCMDS MOD;
 LENGTH IN IR IU IA IC IX 4;
 LENGTH ACCRULE $ 10 ACCTYPE $ 1 ACCID $ 8 RNAME $ 46;
 ARRAY    NAC{40} $ 8;
 ARRAY    RAC{40} $ 8;
 ARRAY    UAC{40} $ 8;
 ARRAY    AAC{40} $ 8;
 ARRAY    CAC{40} $ 8;
 SET RACFDB.L5PROF;
 RNAME= "'"××TRIM(LEV1)××"."××TRIM(LEV2)××"."××TRIM(LEV3)××"."
           ××TRIM(LEV4)××"."××TRIM(LEV5)××".*'";
 PUT  "AD " RNAME " UACC(" UACC ") OWNER(" OWNER ") GENERIC";
 LINK LOADUP;
 LINK PERMIT;
 RETURN;

 %GENCMD
 RUN;

*
* GENERATE COMMANDS TO DEFINE LEVEL 6  PROFILES
*;
 DATA _NULL_;
 FILE DEFCMDS MOD;
 LENGTH IN IR IU IA IC IX 4;
 LENGTH ACCRULE $ 10 ACCTYPE $ 1 ACCID $ 8 RNAME $ 46;
 ARRAY    NAC{40} $ 8;
 ARRAY    RAC{40} $ 8;
 ARRAY    UAC{40} $ 8;
 ARRAY    AAC{40} $ 8;
 ARRAY    CAC{40} $ 8;
 SET RACFDB.L6PROF;
 RNAME= "'"××TRIM(LEV1)××"."××TRIM(LEV2)××"."××TRIM(LEV3)××"."
           ××TRIM(LEV4)××"."××TRIM(LEV5)××"."××TRIM(LEV6)××".*'";
 PUT  "AD " RNAME " UACC(" UACC ") OWNER(" OWNER ") GENERIC";
 LINK LOADUP;
 LINK PERMIT;
 RETURN;

 %GENCMD
 RUN;

*
* GENERATE COMMANDS TO DEFINE LEVEL 7  PROFILES
*;
 DATA _NULL_;
 FILE DEFCMDS MOD;
 LENGTH IN IR IU IA IC IX 4;
 LENGTH ACCRULE $ 10 ACCTYPE $ 1 ACCID $ 8 RNAME $ 46;
 ARRAY    NAC{40} $ 8;
 ARRAY    RAC{40} $ 8;
 ARRAY    UAC{40} $ 8;
 ARRAY    AAC{40} $ 8;
 ARRAY    CAC{40} $ 8;
 SET RACFDB.L7PROF;
 RNAME= "'"××TRIM(DATASET)××"'";
 PUT  "AD " RNAME " UACC(" UACC ") OWNER(" OWNER ") GENERIC";
 LINK LOADUP;
 LINK PERMIT;
 RETURN;

 %GENCMD
 RUN;

 *
 * GENERATE DELDSD COMMANDS TO DELETE DISCRETE PROFILES
 *;
 DATA _NULL_;
 FILE DELCMDS;
 SET RACFDB.DPROF2;
 RNAME= "'"××TRIM(DATASET)××"'";
 PUT  "DD " RNAME @;
 IF VOL = ' ' THEN PUT "NOSET";
              ELSE PUT "VOLUME(" VOL ") SET";
