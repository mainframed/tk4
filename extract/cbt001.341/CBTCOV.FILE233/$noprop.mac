//*------------------------------------------------------------------*
//*  UMODXXX - RACINIT POST-PROCESSING EXIT                          *
//*------------------------------------------------------------------*
//UMODXXX  EXEC PGM=GIMSMP,REGION=4096K
//SMPCSI   DD DSN=SMP.GLOBAL.CSI,DISP=SHR
//SMPOUT   DD SYSOUT=*
//SMPRPT   DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SMPCNTL  DD *
 SET BDY(GLOBAL).
 RECEIVE SYSMODS.
 SET BDY(TARGET).
 APPLY S(UMODXXX) REDO COMPRESS(ALL).
/*
//SMPPTFIN DD DATA,DLM=$$
++USERMOD (UMODXXX)
  /*
     RACINIT POST-PROCESSING EXIT FOR PREVENTION OF PROPAGATION
     OF SPECIFIED USERIDS(I.E. - FOR CICS, IMS, WYLBUR, ETC.).
                                                              */.
++VER (Z038) FMID (HRF1702) .
++JCLIN.
//S1      EXEC PGM=IEV90,PARM='LIST,RENT,DECK,NOLOAD'
//SYSPRINT DD SYSOUT=*
//SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR
//         DD DSN=SYS1.AMODGEN,DISP=SHR
//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,(1,1))
//SYSUT2   DD UNIT=SYSDA,SPACE=(CYL,(1,1))
//SYSUT3   DD UNIT=SYSDA,SPACE=(CYL,(1,1))
//SYSPUNCH DD DSN=&&OBJMOD(ICHRIX02),DISP=(,PASS),UNIT=SYSDA,
//            SPACE=(CYL,(1,1,1),RLSE),DCB=BLKSIZE=800
//S2       EXEC PGM=IEWL,PARM='XREF,LIST,RENT'
//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,(5,2))
//SYSPRINT DD SYSOUT=*
//OBJMOD   DD DSN=SYS1.OBJMOD,DISP=OLD
//SYSLMOD  DD DSN=SYS1.LPALIB,DISP=SHR
//SYSLIN   DD *
  INCLUDE OBJMOD(ICHRIX02)
  ENTRY ICHRIX02
  NAME  ICHRIX02(R)
/*
++SRC (ICHRIX02)
      SYSLIB(UMODSRC)
      DISTLIB(AUMODSRC)
      /*
         SOURCE FOLLOWS
                          */.
RIX      TITLE 'ICHRIX02  -  RACF - RACINIT POST-PROCESSING EXIT'
***********************************************************************
***                                                                 ***
***      MODULE - ICHRIX02                                          ***
***                                                                 ***
***                                                                 ***
***      THIS IS AN EXIT TO SHOW HOW RACF CAN BE USED               ***
***      TO CONTROL JES USER IDENTITY PROPAGATION.                  ***
***                                                                 ***
***      JOBS WHICH ARE PROPAGATED FROM USERIDS FOR WHICH           ***
***      JES USERID PROPAGATION HAS BEEN DISALLOWED WILL            ***
***                                                                 ***
***         1)  BE RUN UNDER AN ACEE FOR A NON-RACF DEFINED USER    ***
***                                                                 ***
*** OPT NOT 2)  OR ABEND WITH ABEND CODE 383 (INVALID RACINIT       ***
***  CODED      EXIT RETURN CODE),                                  ***
***                                                                 ***
***         3)  AND RECEIVE MESSAGE                                 ***
***           "ICHRIX02 - USERID NOT AUTHORIZED FOR JES PROPAGATION"***
***                                                                 ***
***             THIS MESSAGE WILL ALSO APPEAR ON THE MVS CONSOLE    ***
***             DESIGNATED FOR SECURITY MESSAGES.                   ***
***                                                                 ***
***      USE NOTES:                                                 ***
***      THIS EXIT USES PASSCHK=NO AS A TRIGGER THAT PROPAGATION    ***
***      OF USERID IS OCCURRING.  PASSCHK=NO IS USED BY SUBSYSTEMS  ***
***      OTHER THAN THE JES PROPAGATION CODE AND MAY BE USED BY     ***
***      INSTALLATION WRITTEN CODE.  AN EXAMPLE OF SUCH CODE IS     ***
***      TSO/E WHICH WILL USE PASSCHK=NO TO FIND OUT WHETHER A      ***
***      USER IS RACF DEFINED BEFORE DISPLAYING THE FULLSCREEN      ***
***      LOGON PANEL.  THIS EXIT WILL CHECK FOR THE CASE OF A TSO   ***
***      USER LOGGING ON, AND ALLOW THE RACINIT TO SUCCEED.         ***
***      HOWEVER, IF THE TSO USER SUBMITS ANY JOBS, THE USER'S      ***
***      USERID AND PASSWORD MUST BE CODED ON THE JOB CARD (I.E     ***
***      PROPAGATION CANNOT BE USED BY THAT TSO USER).              ***
***      THIS EXIT IS NOT USED TO CONTROL SUBMIT BY TSO USERS.      ***
***      (CONTROL OF SUBMIT CAN BE ACCOMPLISHED THROUGH THE JCL     ***
***      AUTHORITY IN UADS OR BY A WRITING A TSO/SUBMIT EXIT).      ***
***                                                                 ***
***      INSTALLATIONS USING DB2 SHOULD APPLY THE PTF ASSOCIATED    ***
***      WITH OZ96264 WHICH CAUSES THE ASXBUSER FIELD TO BE UPDATED ***
***      TO REFLECT THE ANY NEW USERID INSERTED VIA THIS EXIT.      ***
***                                                                 ***
***      REQUIREMENTS:                                              ***
***                                                                 ***
***      1. CLASS 'FACILITY' MUST BE ACTIVATED. AN ENTRY MUST       ***
***         BE DEFINED TO THE FACILITY CLASS AS FOLLOWS.            ***
***                                                                 ***
***         RDEFINE FACILITY $NOPROPAGATE.N1  UACC(NONE)            ***
***                                                                 ***
***         WHERE 'N1' IS THE USERID FOR WHICH JES USERID           ***
***         PROPAGATION IS TO BE DISALLOWED.                        ***
***                                                                 ***
***         NOTE THAT IT IS NOT NECESSARY TO PERMIT ANY USERS       ***
***         TO THIS RESOURCE. NOTE ALSO THAT WHEN THIS ROUTINE      ***
***         GETS CONTROL, THE ACEE WILL HAVE BEEN CREATED           ***
***         AND ITS USERID WILL BE THE USERID FOR WHICH             ***
***         PROPAGATION IS DISALLOWED (IE, IMS, CICS, ETC.).        ***
***                                                                 ***
***      2. GLOBAL ACCESS CHECKING SHOULD BE ESTABLISHED            ***
***         FOR THESE ENTRIES TO ENSURE GOOD PERFORMANCE            ***
***         AS FOLLOWS.                                             ***
***                                                                 ***
***         RDEFINE GLOBAL FACILITY ADDM($NOPROPAGATE.N1/NONE)      ***
***         RALTER  GLOBAL FACILITY ADDM($NOPROPAGATE*/READ)        ***
***                                                                 ***
***         WHERE 'N1' IS THE USERID FOR WHICH JES USERID           ***
***         PROPAGATION IS TO BE DIS-ALLOWED.                       ***
***                                                                 ***
***         NOTE THAT THE ENTRY '$NOPROPAGATE*/READ'                ***
***         ALLOWS ALL REQUESTS FOR JOBS FOR UNCONTROLLED           ***
***         USERIDS TO PROCESS THROUGH THIS ROUTINE                 ***
***         WITHOUT CAUSING ANY ADDITIONAL                          ***
***         I/O TO THE RACF DATA SET.                               ***
***                                                                 ***
***                                                                 ***
***                                                                 ***
***      RETURN CODES:                                              ***
***         0 - EXIT ROUTINE PROCESSING IS COMPLETE, NORMAL         ***
***             RACINIT SVC PROCESSING IS TO CONTINUE.              ***
***                                                                 ***
***         4 - SET UP TO REDRIVE RACINIT BLANKING OUT THE          ***
***             USERID, PASSWORD, GROUP, AND NEWPASSWORD            ***
***             IN THE PARAMETER LIST                               ***
***                                                                 ***
***NOT USED 8 - CAUSE ABEND 383 TO OCCUR.                           ***
***                                                                 ***
***                                                                 ***
***                                                                 ***
***********************************************************************
***********************************************************************
         EJECT
         SPACE  3
***********************************************************************
***********************************************************************
***                                                                 ***
***      LOAD MODULE NAME          SYSTEM LIBRARY                   ***
***      ----------------          --------------                   ***
***      ICHRIX02 (RENT,REFR)      SYS1.LPALIB                      ***
***       AMODE(31) RMODE(24)                                       ***
***                                                                 ***
***      SYS1.AMODGEN MUST BE AVAILABLE IN THE SYSLIB TO ASSEMBLE   ***
***      THIS MODULE.                                               ***
***                                                                 ***
***********************************************************************
***********************************************************************
         EJECT
ICHRIX02 CSECT ,
ICHRIX02 AMODE 31
ICHRIX02 RMODE 24
         SAVE  (14,12),,ICHRIX02-&SYSDATE-&SYSTIME
         LR    R12,R15             PROGRAM ADDRESSABILITY
         USING ICHRIX02,R12
         LR    R2,R1               SAVE PARM LIST ADDRESS IN R2
*
* PROCESS ONLY PASSCHK = NO CREATE REQUESTS FOR OTHER THAN TSO LOGON
*
         L     R3,4(R2)            POINT R3 AT FLAG BYTE
         TM    0(R3),X'08'         IS THIS AN PASSCHK=NO REQUEST ?
         BZ    RETURN              NO  - RETURN
         TM    0(R3),X'C0'         IS THIS A CREATE REQUEST?
         BM    RETURN              NO  - RETURN
*
* IF THIS IS SECOND TIME THROUGH SIMPLY EXIT
*
         L     R3,52(R2)           POINT R3 AT RACINIT EXIT WORKAREA
         TM    0(R3),X'FF'         HAVE I BEEN HERE ONCE ALREADY ?
         BO    RETURNI             IF YES, RETURN
*TEMP     B     CONTINUE   UNCOMMENT TO DISALLOW PROPAGATION FOR
*                          TSO USERS.
         SPACE 1
*                               IS THIS A TSO USER TRYING TO
*                                        LOG ON?
         USING PSA,R0              GET ADDRESSABILITY TO PSA
         L     R4,PSAAOLD          POINT TO ASCB
         USING ASCB,R4             ADDRESSABILITY FOR ASCB
         ICM   R4,15,ASCBTSB       IS THERE A TSB?
         BZ    CONTINUE            NO  - GO SEE IF PROPAGATION IS
*                                        ALLOWED
*                               YES - THIS IS A LOGON, ALLOW IT
         DROP  R0,R4
         SPACE 1
RETURNI  DS   0H
*        WTO  '2ND TIME THROUGH',ROUTCDE=(9,11)
RETURN   RETURN (14,12),T,RC=0     RETURN NOW
*
* GET SPACE FOR RACROUTE PARM LIST
*
CONTINUE L     R0,DYNSIZE          DYNAMIC AREA SIZE TO R0
         GETMAIN RU,               GETMAIN                             *
               LV=(0),SP=0                 DYNAMIC AREA
         LR    R11,R1              DYNAMIC AREA ADDRESSABILITY
         USING DATD,R11            ****
         ST    R13,SAVEAREA+4      SAVE CALLER'S SAVEAREA ADR
         ST    R11,8(,R13)         SAVE OUR SAVEAREA ADR
         LR    R13,R11             OUR SAVEAREA ADR TO R13
*        WTO   'GETMAIN',ROUTCDE=(9,11)
*
* ISSUE RACROUTE FOR AUTHORITY TO ALLOW PROPAGATION
*
RACF     DS    0H
         MVC   AUTHCHK(LRACROUT),RACROUTL INIT RACROUTE MACRO
         MVC   PROFILE,RACPROF     INIT RACROUTE PROFILE
         L     R3,8(R2)            POINT TO USERID IN PARM LIST
         SR    R4,R4               CLEAR REG4
         IC    R4,0(R3)            GET LENGTH USERID
         LTR   R4,R4               IF LENGTH ZERO, SKIP BECAUSE
         BZ    RETURN0                NO USERID BEING PROPAGATED
         BCTR  R4,0                OTHERWISE DECREMENT BY ONE FOR MVC
         LA    R5,1(R3)            POINT PAST USERID LENGTH
         EX    R4,MOVEU            EXECUTE MOVE OF USERID FROM PARMLIST
         RACROUTE REQUEST=AUTH,    RACHECK REQUEST.                    *
               CLASS=RACLASS,      CHECK FOR                           *
               ATTR=READ,          READ                                *
               ENTITY=PROFILE,     AUTHORITY                           *
               LOG=NOFAIL,         DO NO LOGGING                       *
               WORKA=SAFWORK,      SAF WORK AREA.                      *
               MF=(E,AUTHCHK)
*
* PROCESS RETURN CODE
*
         LR    R7,R15        SAVE RETURN CODE
         C     R7,=F'0'            AUTHORIZED ?
         BE    RETURN0       YES - ALLOW JOB TO CONTINUE PROCESSING
*
         C     R7,=F'4'            NOT DEFINED ?
         BE    RETURN0       YES - ALLOW JOB TO CONTINUE PROCESSING
*
         C     R7,=F'8'            NOT AUTHORIZED ?
*
         BE    REDRIVE       ELSE - REDRIVE WITH BLANK USERID
         B     RETURN0             ANY OTHER RETURN CODE IS ILLEGAL
*
REDRIVE  DS    0H
*        WTO   'REDRIVE',ROUTCDE=(9,11)
*
         L     R3,8(,R2)      POINT TO USERID IN PARM LIST
         MVC   0(9,R3),NULL   BLANK OUT USERID IN PARM LIST
         L     R3,12(R2)      POINT TO PASSWORD IN PARM LIST
         MVC   0(9,R3),NULL   BLANK OUT PASSWORD IN PARM LIST
         L     R3,24(R2)      POINT TO GROUP NAME IN PARM LIST
         MVC   0(9,R3),NULL   BLANK OUT GROUP NAME IN PARM LIST
         L     R3,28(R2)      POINT TO NEWPASSWORD IN PARM LIST
         MVC   0(9,R3),NULL   BLANK OUT NEWPASSWORD IN PARM LIST
         L     R3,52(R2)      POINT TO WORKAREA FOR RACINIT EXITS
         MVC   0(4,R3),FF     PUT SWITCH IN FOR NEXT TIME THROUGH
*
ZEROFLG  DS    0H
*        WTO   'ZEROFLAG',ROUTCDE=(9,11)
         L     R3,32(R2)           GET ADDRESS OF POINTER TO ACEE
         NI    38(R3),X'00'        SET NO ATTR & NON-RACF DEFINED
*
         LA    R3,4           SET RETURN CODE FOR REDRIVE OF RACINIT
*
SETFAIL  DS    0H
         WTO   'ICHIX02I - USERID NOT AUTHORIZED FOR JES PROPAGATION', *
               ROUTCDE=(9,11)      ROUTE CODES FOR USER AND SECURITY
*
         B     FINAL
RETURN0  SR    R3,R3               SET RETURN CODE TO ALLOW REQUEST
*
FINAL    DS    0H
*        WTO   'DOING FREEMAIN',ROUTCDE=(9,11)
         L     R13,SAVEAREA+4      RESTORE R13
         L     R0,DYNSIZE          DYNAMIC AREA SIZE TO R0
         LR    R1,R11              DYNAMIC DATA ADDRESS TO R1
         FREEMAIN RU,SP=0,         FREEMAIN                            *
               LV=(0),             DYNAMIC                             *
               A=(1)               AREA
         LR    R15,R3              LOAD RETURN CODE
         RETURN (14,12),T,RC=(15)  RESTORE REGISTERS AND RETURN
         EJECT
*
* DATA AREAS
*
         DS    0D                  DOUBLE WORD ALIGN
DYNSIZE  DC    AL4(SIZEDATD)       DYN AREA SIZE
RACLASS  DC    AL1(L'RACLASSN)     CLASS NAME FOR RACROUTE
RACLASSN DC    C'FACILITY'         CLASS NAME FOR RACROUTE
RACPROF  DC    CL39'$NOPROPAGATE. '      PROFILE FOR RACROUTE
RACROUTL RACROUTE REQUEST=AUTH,WORKA=*-*,MF=L
LRACROUT EQU   *-RACROUTL          LENGTH OF RACROUTE MACRO.
NULL     DS    0H
         DC    X'00'               LENGTH OF ZERO
         DC    CL8' '              VALUE 8 BLANKS
ASTER    DS    0H
         DC    X'01'               LENGTH OF ONE
         DC    CL8'*'              VALUE SINGLE ASTERISK
         DS    0D
MOVEU    MVC   PROFILE+13(0),0(R5) MOVE OF USERID
         DS    0F
FF       DC    X'FFFFFFFF'
         LTORG
*
* DSECT FOR THIS PROGRAM'S DYNAMIC AREA
*
DATD     DSECT
SAVEAREA DS    18F                 REGISTER SAVE AREA
SAFWORK  DS    CL512               SAF WORK AREA.
         DS    0D
DOUBLE   DC    D'0'                WORK DOUBLE WORD
PROFILE  DS    CL39                PROFILE FOR RACROUTE
         ORG   PROFILE
RACPPREF DC    C'$NOPROPAGATE.'    PROFILE PREFIX
         ORG
         DS    0D
AUTHCHK  RACROUTE REQUEST=AUTH,MF=L,WORKA=*-*
SIZEDATD EQU   *-DATD              LENGTH OF DSECT
*
*
*
* REGISTER EQUATES
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
RA       EQU   10
R11      EQU   11
RB       EQU   11
R12      EQU   12
RC       EQU   12
R13      EQU   13
RD       EQU   13
R14      EQU   14
RE       EQU   14
R15      EQU   15
RF       EQU   15
*
         IHAPSA  ,
         IHAASCB ,
         END   ,
/*
$$
