         TITLE 'IOF JOBACESS INSTALLATION EXIT'
*        THE PURPOSE OF THIS EXIT ROUTINE IS TO ALLOW EACH IOF
*        INSTALLATION TO DEFINE ITS OWN RULES FOR ACCESSING AND
*        MODIFYING JOBS FROM IOF. THE JAC PARM LIST THAT IS PASSED
*        TO THIS ROUTINE CONTAINS INPUT DATA THAT CAN BE USED TO HELP
*        MAKE THESE DECISIONS. THERE ARE SEVERAL DIFFERENT BASIC TYPE
*        CALLS THAT ARE MADE TO JOBACESS. THE FIELD 'JACCALL' IN THE
*        JAC INDICATES THE TYPE OF CALL.
*
*        JACCALL = 4 IMPLIES THAT JOBACESS IS BEING CALLED FROM IOF
*        INITIALIZATION. ALL OF THE PARMS SUPPLIED BY (OR DEFAULTED
*        FOR) THE USER ON THE IOF COMMAND (OR ON THE SPF INTERFACE
*        PANEL) ARE PASSED IN THE FOLLOWING FIELDS IN THE JAC:
*
*        JACITYPE                 TYPE OF ELEMENT TO BE DISPLAYED
*                                     (INPUT, GROUP, QUEUE, ETC.)
*        JACISELN                 VALUE FROM 'SELECT' OPERAND
*        JACISELP                 VALUE FROM 'VALUE' OPERAND
*        JACISORT                 VALUE FROM 'SORT' OPERAND
*        JACICLAS                 VALUE FROM 'INPUT' KEYWORD
*        JACIFROM                 VALUE FROM 'FROMNODE' KEYWORD
*        JACITO                   VALUE FROM 'TONODE' KEYWORD
*        JACIXEQ                  VALUE FROM 'XEQNODE' KEYWORD
*        JACUSIDL                 LENGTH OF USERID OPERAND
*        JACUSID                  VALUE FROM 'USERID' OPERAND
*        JACIALLJ                 'Y' => ALL JOBS, 'N' => NOT ALL JOBS
*        JACJNAM                  JOBNAME SPECIFIED BY USER
*        JACJBIB                  JOBID SPECIFIED BY USER
*        JACDEST                  VALUE FROM 'DEST' OPERAND
*        JACICURR (IN JACIFLAG)   'CURRENT' SPECIFIED
*        JACIXTND  (IN JACIFLAG)  'EXTEND' SPECIFIED
*
*        THERE ARE THREE THINGS THAT MUST BE ACCOMPLISHED BY THIS
*        INITIALIZATION (JACCALL = 4) CALL TO JOBACESS:
*
*        1. DETERMINE IF THIS IOF SESSION SHOULD CONTINUE
*        2. CREATE THE 'SELSETUP' PARM LIST THAT IS TO BE USED TO
*           PRODUCE THE JOB LIST.
*        3. SET THE JACDALOW FIELD TO THE DEFAULT INITIAL ACCESS
*           AUTHORIZATION FOR THE JOBS ON THE JOB LIST.
*
*
*        JACCALL = 8 IMPLIES THAT JOBACESS IS BEING CALLED AFTER THE
*        JCT FOR A JOB HAS BEEN READ. THIS GIVES JOBACESS A CHANCE TO
*        ALTER THE CURRENT PERMISSION FLAGS FOR THE JOB (PASSED IN
*        JACJALOW) BASED UPON INFORMATION FROM THE JOB'S JCT. THE
*        ADDRESS OF THE JCT FOR THE JOB IS PASSED IN JACJCT. THIS IS
*        THE ONLY TYPE JOBACESS CALL FOR WHICH THE JACJCT FIELD IS
*        MEANINGFUL. THE JOB NAME AND JOBID FOR THE JOB ARE PASSED
*        IN JACJOBN AND JACJOBI. THE VALUE JACUSER IS COPIED TO THE
*        JACUSER FIELD FROM AN OFFSET IN THE JCT BASED UPON THE VALUE
*        JMJCTACC IN THE JESCTL SOURCE MODULE. THIS IS CONVENIENT IF
*        YOU REALLY ONLY NEED ONE FIELD FROM THE JCT IN ORDER TO MAKE
*        YOUR DECISIONS (YOU WON'T NEED TO USE JACJCT AT ALL). YOU
*        CAN CHANGE JMJCTACC IN JESCTL TO CAUSE A DIFFERENT FIELD TO
*        BE PASSED TO THIS CALL. THE DEFAULT VALUE PASSED IS THE
*        NOTIFY USERID FOR THE JOB.
*            IF YOU WANT TO SAVE SOME INFORMATION FROM THE JCT SO THAT
*        IT WILL BE AVAILABLE FOR SUBSEQUENT VALIDATION CALLS, YOU
*        CAN SIMPLY ADD DATA FIELDS TO THE JWKDSECT AREA DEFINED
*        BELOW. THE ADDRESS OF AN AREA OF SIZE JWKSIZE WILL BE PASSED
*        TO THIS CALL IN JACJDATA AND ALSO TO ALL SUBSEQUENT
*        VALIDATION CALLS FOR THIS JOB.
*
*        JACCALL = 12 IMPLIES THAT THE USER HAS REQUESTED A FUNCTION
*        AND JOBACESS IS TO DETERMINE WHETHER THE USER IS ALLOWED TO
*        PERFORM THE FUNCTION. THE JACJOBN AND JACJOBI FIELDS
*        WILL ALWAYS BE FILLED IN. THE JACJALOW FIELD WILL CONTAIN
*        THE CURRENT JOB PERMISSION FLAGS FOR THE JOB. THE JACJDATA
*        FIELD WILL BE PRESENT IF DATA HAS BEEN SAVED THERE DURING
*        A PREVIOUS 'JACCALL = 4' CALL TO JOBACESS. THIS ADDRESS
*        SHOULD ALWAYS BE TESTED FOR ZERO BEFORE USING. SEE THE JAC
*        DEFINITION BELOW BEGINNING AT LABEL JACPARMS FOR
*        A DESCRIPTION OF ADDITIONAL INFORMATION AVAILABLE
*        FOR SPECIFIC TYPES OF IOF FUNCTIONS.
*
*        JACCALL = 16 IMPLIES THAT IOF IS SHUTTING DOWN.
*
         EJECT
*
*        MOST OF THE IMPORTANT DECISIONS WITH RESPECT TO JOB ACCESS
*        ARE MADE IN SUBROUTINES AND TABLES DEFINED IN THE SOURCE
*        MEMBER JOBACOPY WHICH IS COPIED INTO THE BOTTOM OF THIS
*        ASSEMBLY. THESE SUBROUTINES AND TABLES SHOULD BE EASIER TO
*        MODIFY AND MAINTAIN SINCE THEY ARE OUT OF THE MAIN FLOW
*        OF THE JOBACESS ROUTINE. IT IS INTENDED THAT ALL CHANGES
*        TO JOBACESS CAN BE ACCOMPLISHED THROUGH MODIFICATIONS TO
*        THE JOBACOPY MEMBER, BUT OF COURSE YOU CAN ALWAYS JUST
*        MODIFY JOBACESS ALSO IF NEEDED. HOWEVER, THE INTERFACES
*        TO THE JOBACOPY ROUTINES WILL CONTINUE TO BE SUPPORTED
*        WHILE THE INTERNAL CONTROL STRUCTURE OF JOBACESS ITSELF
*        MAY INDEED BE SUBJECT TO CHANGE. THIS JUST MEANS THAT IT
*        WILL BE EASIER TO MAINTAIN YOUR MODIFICATIONS IF YOU CAN
*        ACCOMPLISH THEM USING ONLY CHANGES TO JOBACOPY.
         EJECT
JOBACESS START
         PRINT NOGEN
         REGISTER
         SAVE  (14,12)
         LR    R12,R15
         USING JOBACESS,R12
         LR    R11,R1             ADDRESS OF JAC PARM LIST
         USING JACDSECT,R11
         SPACE
         LA    R1,72(R13)         ADDR OF SAVE/WORK AREA         CCCC
         ST    R1,8(R13)          CHAIN IT AS A SAVE AREA
         ST    R13,4(R1)
         LR    R13,R1
         USING WRKDSECT,R13
         SPACE
         L     R10,JACPSCB        PSCB ADDRESS FOR USE BELOW
         USING PSCB,R10
         SPACE
         LA    R0,JACJALOW        SET DEFAULT TO SET JACJALOW (MRGVECT)
         ST    R0,JACPALOW        SET PTR TO 16 BYTE AREA
         SPACE 3
*        VECTOR ON THE TYPE OF CALL INDICATED IN JACCALL.
         LH    R15,JACCALL
         B     *(R15)
         B     IOFINIT             4 => IOF SESSION INIT
         B     JOBINIT             8 => JOB JCT JUST READ
         B     VALIDATE           12 => VALIDATE USER FUNCTION
         B     IOFDOWN            16 => IOF SHUTTING DOWN SESSION
         EJECT
*        IOF INITIALIZATION CALL TO JOBACESS. THERE ARE THREE THINGS
*        THAT MUST BE ACCOMPLISHED BY THIS ROUTINE:
*
*        1. DETERMINE IF THIS IOF SESSION SHOULD CONTINUE.
*        2. BUILD THE PARM LIST FOR THE 'SELSETUP' ROUTINE, WHICH
*           WILL THEN BUILD THE PARM LIST TO CRATE THE JOB LIST.
*        3. SET DEFAULT INITIAL ACCESS AUTHORIZATION FOR JOBS ON THE
*           JOB LIST
*
IOFINIT  EQU   *
         LA    R0,JACDALOW        SET JACDALOW (IN MRGVECT)
         ST    R0,JACPALOW        SET POINTER TO 16 BYTE AREA
         L     R8,JACSEL          ADDR OF PARM LIST FOR SELSETUP
         USING SELDSECT,R8
         SPACE
*        ALLOW INSTALLATION TO VALIDATE ANY AND ALL PARMS BEFORE
*        WE BEGIN ANY PROCESSING OF THE INPUT PARMS.
         BAL   R9,CHEKPARM        GIVE INSTALLATION CHANCE TO OK
         B     EXIT               +0 => FAIL IOF SESSION
         SPACE 3
*        FIRST WE WILL SET SELUSID TO THE VALUE (EITHER SPECIFIED
*        OR DEFAULTED) FOR THE USERID FOR THIS SESSION, AND ALSO
*        SET SELUIDL TO THE LENGTH OF THE USERID. SELUIDL IS A MAJOR
*        CONTROL KEY IN THE PROCESSING BELOW. IF THIS ROUTINE SETS
*        SELUIDL = 0, THEN THE JOBS FETCHED FOR THE JOB LIST WILL
*        NOT BE RESTRICTED TO THOSE OWNED BY THIS USER. SELUIDL
*        WILL ALWAYS BE INITIALLY SET NOT TO ZERO, BUT SEVERAL OF
*        THE ROUTINES BELOW WILL SET IT TO ZERO IF THE USER IS
*        AUTHORIZED TO LOOK AT ALL OF THE JOBS ON THE QUEUE.
         MVC   SELUID,=CL8' '
         MVC   SELUID(7),PSCBUSER  ALWAYS START WITH USER'S ACTUAL ID
         MVC   SELUIDL,PSCBUSRL   AND LENGTH
         CLI   SELUIDL,0          IS THE USERID NULL (TSO BATCH)
         BNE   NOTNULL            NO - LEAVE IT ALONE
         MVI   SELUIDL,7          YES - CONVERT TO 'WORTHLESS' ID
         MVC   SELUID,=C'$#@$#@$#'         DONE
NOTNULL  EQU   *
         SPACE
         CLI   JACUSIDL,0         DID USER SPECIFY 'USERID'
         BE    NOTUSID            NO - ALL SET FOR NOW WITH SELUID
         BAL   R9,CHEKUSER        YES - SEE IF THIS USER IS AUTH.
*                                 TO ACCESS JOBS FOR THAT USER.
         B     EXIT               +0 => NO - FAIL IOF SESSION
         SPACE
         MVC   SELUID,JACUSID     YES - SWITCH TO USER SUPPLIED USID
         MVC   SELUIDL,JACUSIDL
NOTUSID  EQU   *
         SPACE 3
*        PROCESS THE JOB NAME IF ENTERED BY THE USER.
         MVC   SELJOBN,JACJNAM    COPY JOB NAME TO PARM LIST
         CLI   SELJOBN,C' '       WAS A JOB NAME SPECIFIED
         BE    NOTJOBN            NO - IGNORE JOB NAME CODE
         BAL   R9,TRICKJOB        YES - SEE IF THIS IS A 'TRICK'
*                                      JOB NAME.
         B     NOTTRICK           +0 => NO - NORMAL JOB NAME
         SPACE
         BAL   R9,CHKTRICK        GO SEE IF GLOBAL ACCESS OK
*                                 FOR JOBS IN 'TRICK' CATEGORY
         SPACE
         B     NOTJOBN            NOW THROUGH WITH JOB NAME
NOTTRICK EQU   *
         SPACE
*        NORMAL JOB NAME SPECIFIED (NOT TRICK)
         CLI   JACUSIDL,0         WAS A USERID SPECIFIED
         BNE   *+4+4              YES - LEAVE USERID OWNERSHIP ALONE
         MVI   SELUIDL,0          ELSE REMOVE RESTRICTION THAT THE JOB
*                                 MUST BELONG TO THIS USER BASED UPON
*                                 JQE CRITERIA. THIS IS NOT A PROBLEM,
*                                 SINCE NO PERMISSIONS WILL BE GRANTED
*                                 FOR THE JOB UNTIL 'JOBINIT' CALL
*                                 WITH THE JCT READ BELOW.
         SPACE
         BAL   R9,CHEKCURR        SEE IF 'CURRENT' SPECIFIED
         B     NOTJOBN            +0 => YES - NOW DONE WITH JOB NAME
         SPACE
*        NOT 'CURRENT' JOB
         BAL   R9,CHEKJOBN        SEE IF USER OWNS JOB JUST BASED
*                                 ON THE JOB NAME.
         B     EXIT               +0 => NO - FAIL IOF SESSION
NOTJOBN  EQU   *
         SPACE 3
*        INITIALIZE MORE FIELDS IN THE SELSETUP PARM LIST
         MVC   SELJOBI,JACJBID    JOB ID OPERAND
         MVC   SELDEST,JACDEST    DEST OPERAND
         CLI   SELDEST,C' '       WAS 'DEST' SPECIFIED
         BE    NOTDEST            NO
         BAL   R9,CHEKDEST        YES - SEE IF USER AUTHORIZED TO
*                                 CONTROL JOBS FOR THIS DEST.
         B     EXIT               +0 => NO - FAIL THIS SESSION
         SPACE
NOTDEST  EQU   *
         SPACE
         MVC   SELTYPE,JACITYPE   'TYPE' OF JOBS DESIRED
         MVC   SELSELN,JACISELN   'SELECT' CRITERIA
         MVC   SELSELP,JACISELP   'VALUE' FOR 'SELECT' OPTION
         MVC   SELSORT,JACISORT   'SORT' VALUE
         MVC   SELCLASS,JACICLAS  JOB INPUT CLASS
         MVC   SELFROM(3*L'SELFROM),JACIFROM  FROM, TO, XEQ NODES
         SPACE 3
         BAL   R9,NEEDALLJ        SEE IF WE NEED TO REMOVE USID REQ.
         B     NOTALLJ            +0 => NO
         SPACE
         BAL   R9,CHEKALLJ        SEE IF USER OK FOR 'ALLJOBS'
         B     NOTALLJ            +0 => NO - JUST IGNORE THE REQUEST
         SPACE
         BAL   R14,KILLUSID       TRY TO REMOVE USERID REQ.
NOTALLJ  EQU   *
         SPACE 3
*        NOW ADD POSSIBLE 'OPERATOR' OR 'OWNER' ACCESS PRIVILEDGES
*        TO THE JOBS SELECTED ABOVE.
         BAL   R9,CHEKOPER        SEE IF 'OPERATOR' STATUS
         SPACE
         BAL   R9,CHEKOWNR        SEE IF 'OWNER' STATUS
         SPACE 3
         SPACE
*        SET SELECTIVE FIELD DISPLAY CRITERIA (IF ANY)
         BAL   R9,SETFIELD        SET SELGROUP IF NECESSARY
         SPACE
         B     OKEXIT             AND RETURN TO THE CALLER.
         EJECT
*        THE JCT FOR A JOB HAS JUST BEEN READ. THIS WILL NORMALLY
*        OCCUR AS A JOB IS BEING SELECTED FOR OUTPUT REVIEW. IT CAN
*        ALSO OCCUR IF A JOB FUNCTION (CANCEL, ROUTE, ETC.) IS REQUESTE
*        BEFORE THE JOB HAS BEEN SELECTED FOR OUTPUT REVIEW. NOTE
*        THAT THIS CALL CANNOT BE MADE FOR AN INPUT JOB. THE FIELD
*        JACUSER HAS BEEN FILLED IN FROM THE OFFSET DEFINED AT
*        JMJCTACC IN JESCTL. THE FIELD JACJCT POINTS TO THE JCT FOR
*        THE JOB. THIS DEFAULT ROUTINE USES ONLY THE JACUSER FIELD
*        (THE NOTIFY VALUE FROM THE JOB STATEMENT) TO TRY TO SEE
*        IF THE PERMISSION FLAGS FOR THIS JOB SHOULD BE EXPANDED.
*        IF THE JACUSER FIELD MATCHES THIS USER WE WILL ALLOW ALL
*        FUNCTIONS FOR THIS JOB. IF YOU WANT TO SAVE SOME JCT DATA
*        FOR LATER 'VALIDATE' CALLS JUST ADD DATA FIELDS TO THE
*        JWKDSECT AREA BELOW AND THE ADDRESS OF THE AREA WILL BE
*        PASSED (TO THIS AND ALL VALIDATE CALLS) IN JACJDATA.
*
JOBINIT  EQU   *
         LA    R1,ALOWOWNR        INIT TO ADDING 'OWNER' PERMISSIONS
         CLC   PSCBUSER,JACJUSER  DOES USERID MATCH NOTIFY USERID FROM
*                                 THE JOB STATEMENT.
         BE    MRGJALOW           YES - MERGE 'OWNER' PERMISSIONS
         SPACE
         LA    R2,JACJUSER        GO SEE IF CURRENT USER HAS SPECIAL
*                                 PRIVILEDGES OVER USER WHO OWNS THIS
*                                 JOB. PASS ADDR OF JOB OWNER'S ID.
         SR    R1,R1              INIT TO NO NEW PERMISSIONS
         BAL   R9,CHEKJCT         SEE IF THIS USER IS JOB OWNER
         SPACE
MRGJALOW EQU   *
         LTR   R1,R1              ANY PERMISSIONS TO BE 'ADDED'
         BZ    SKPMERGE           NO
         BAL   R14,MRGVECT        YES - ADD NEW PERMISSIONS TO OLD MASK
SKPMERGE EQU   *
         SPACE
         ICM   R15,B'1111',JACJDATA   IS JWKDSECT EMPTY
         BZ    OKEXIT             YES - IGNORE IT
         SPACE
         BAL   R9,SAVEJCT         COPY ANY DATA FROM JCT TO JWK
         B     OKEXIT
         EJECT
*        VALIDATE A FUNCTION REQUESTED BY A USER. THE FIELD JACFUNC
*        CONTAINS THE INDEX OF THE FUNCTION DESIRED.
VALIDATE EQU   *
         LH    R15,JACFUNC        FUNCTION INDEX
         BAL   R14,FCTFLAG        CONVERT INDEX TO FLAG BIT
         N     R0,JACJALOW        SEE IF CORRESPONDING PERMISSION BIT
*                                     IS ON
         BNZ   OKFUNC             IT IS - NOW SEE IF OPERANDS ARE OK
         SPACE
*        THE FUNCTION BIT FOR THE REQUESTED FUNCTION IS NOT SET. THIS
*        MEANS THAT THE FUNCTION HAS NOT BEEN ALLOWED YET. THE
*        ROUTINES BELOW CAN PERFORM FURTHER CHECKING TO DETERMINE IF
*        THE FUNCTION IS OK FOR THIS USER AND THIS JOB. AS A MINIMUM
*        THE ROUTINES BELOW WILL NEED TO ASSOCIATE A USERID WITH
*        THE JOB. THIS ROUTINE WILL ATTEMPT TO SET UP R2 POINTING
*        TO THE USERID FOR THE OWNER OF THE JOB IN QUESTION. NOTE THAT
*        JACJUSER   IS   NOT   VALID   ON   THIS   CALL   !!!!.
*
         SPACE
         ICM   R15,B'1111',JACJDATA   HAS JCT DATA BEEN SAVED YET
         BZ    TRYFAIL            NO - LEAVE R2 = 0
         USING JWKDSECT,R15       YES - CHECK BIT TO MAKE SURE
         TM    JWKFLAG,JWKFINIT   HAS JOBINIT FILLED IN JCT DATA
         BZ    TRYFAIL            NO - LEAVE R2 = 0
         LA    R2,JWKJUSER        YES - POINT TO USERID SAVED FROM JCT
         DROP  R15
TRYFAIL  EQU   *
         SPACE
         LTR   R2,R2              WAS A USERID FOUND FOR THE JOB
         BNZ   *+4+4              YES - LEAVE R2 ALONE
         LA    R2,=C'IBMUSER'     NO - SHOW 'IBMUSER' AS OWNER OF JOB
         SPACE
*        THE BIT FOR THE REQUESTED FUNCTION IS NOT ON. VECTOR ON THE
*        TYPE OF FUNCTION REQUESTED SO THAT AN INSTALLATION CAN TAKE
*        ACTION DEPENDING UPON THE FUNCTION REQUESTED.
         LH    R15,JACFUNC        INDEX FOR FUNCTION DESIRED
         SLL   R15,2              NO - NOW MULTIPLE OF 4
         L     R15,FUNCTABL(R15)  ADR OF VALIDATION SUBROUTINE
         BALR  R9,R15             INVOKE VALIDATION SUBROUTINE
         B     FAILIT             +0 => FAIL REQUEST
         B     OKFUNC             +4 => ALLOW REQUEST
         EJECT
*        FUNCTION IS ALLOWED FOR THIS JOB. SEE IF OPERANDS ARE.
OKFUNC   EQU   *
         LH    R15,JACFUNC        FUNCTION INDEX
         LA    R15,FUNCMAP-1(R15)  GET OFFSET TO BIT MASK
         SR    R1,R1
         IC    R1,0(R15)          GOT OFFSET TO BIT MASK
         LTR   R1,R1              IS IT ZERO
         BZ    OKOPER             YES - NO OPERANDS TO VALIDATE
         SPACE
         L     R15,JACJALOW(R1)   NO - PICK UP OPERAND BIT MASK
         L     R14,JACFPDV        ADDR OF PARM BIT MASK FROM USER
         X     R15,=X'FFFFFFFF'   NOW HAS OPERANDS NOT ALOWED
         N     R15,0(R14)         ANY 'NOT ALLOWED' OPERANDS
         BZ    OKOPER             NO - ALLOW FUNCTION TO CONTINUE
         SPACE
*        FUNCTION IS ALLOWED BUT A RESTRICTED OPERAND HAS BEEN ENTERED.
*        INVOKE A ROUTINE BASED UPON THE FUNCTION REQUESTED.
         LH    R15,JACFUNC        FUNCTION INDEX
         SLL   R15,2              NOW MULTIPLE OF 4
         L     R15,FUNCTAB2(R15)  OPERAND FAILURE ROUTINE
         BALR  R9,R15             INVOKE INSTALLATION VALIDATION RTN
         B     FAILIT             +0 => FAIL THE REQUESTED FUNCTION
         B     OKOPER             +4 => OK
         EJECT
*        THE FUNCTION IS OK AND SO ARE THE OPERANDS. NOW GIVE THE
*        INSTALLATION ONE LAST CHANCE TO DENY THE REQUEST. THIS
*        FACILITY IS MOST USEFUL FOR INSTALLING GLOBAL EXCEPTIONS
*        (LIKE NO ACCESS TO SYSOUT DATA SETS OF CLASS X).
OKOPER   EQU   *
         LH    R15,JACFUNC        FUNCTION INDEX
         SLL   R15,2              NOW MULT OF 4
         L     R15,OKTABL(R15)    ADDR OF VALIDATION ROUTINE
         BALR  R9,R15             SEE IF FUNCTION IS OK
         B     FAILIT             +0 => NO - FAIL THE REQUEST
         B     OKEXIT             +4 => OK
         EJECT
*
*        FAIL THE REQUESTED FUNCTION BY RETURNING WITH RC=4
*
FAILIT   EQU   *
         LA    R15,4              FAIL THE REQUEST
         B     EXIT               RETURN TO CALLER
         EJECT
*        IOF IS SHUTTING DOWN THIS SESSION.
IOFDOWN  EQU   *
         B     OKEXIT
         EJECT
*        EXIT WITH ZERO RETURN CODE
OKEXIT   EQU   *
         SR    R15,R15
         SPACE 3
*        RETURN TO CALLER
EXIT     EQU   *
         L     R13,4(R13)         BACK UP TO CALLER'S SAVE AREA
         RETURN (14,12),RC=(15)
         EJECT
*        CONVERT A FUNCTION INDEX PASSED IN R15 TO A PERMISSION
*        BIT PROPERLY SHIFTED IN R0.
FCTFLAG  EQU   *
         BCTR  R15,0              BASE 1 TO 0
         L     R0,=X'80000000'    VALUE FOR INDEX = 1
         SRL   R0,0(R15)          POSITION TO PROPER BIT LOCATION
         BR    R14                RETURN TO CALLER
         SPACE 3
*        CONVERT A VECTOR OF 1 BYTE PERMISSION INDICES INTO A MASK
*        WORD CONTAINING THE CORRESPONDING PERMISSION BITS.
MRGVECT  EQU   *
         SR    R15,R15
         L     R4,=X'80000000'    PRE-LOAD START VALUE
         LA    R0,4               NUMBER OF BIT MASKS
         LR    R5,R1              ADDR OF PTR TO 1ST VECTOR
         L     R6,JACPALOW        PTR TO 1ST OUTPUT BIT MASK
PTRLOOP  EQU   *
         L     R1,0(R5)           ADDR OF NEXT VECTOR
         SR    R3,R3              CLEAR ACCUMULATION REG
VECTLOOP EQU   *
         CLI   0(R1),32           IS INDEX LARGER THAN MAX
         BH    VECTNEXT           YES - PROBABLY ZAPPED OUT - IGNORE
         IC    R15,0(R1)          NEXT INDEX VALUE
         BCTR  R15,0              BASE 1 TO 0
         LR    R2,R4              START WITH BIT AT VALUE=1
         SRL   R2,0(R15)          POSITION BIT PROPERLY
         OR    R3,R2              AND ADD IT TO PREVIOUS MASK
VECTNEXT EQU   *
         LA    R1,1(R1)           NEXT BYTE IN VECTOR
         CLI   0(R1),255          IS IT END OF VECTOR
         BNE   VECTLOOP           NO - KEEP CONVERTING
         O     R3,0(R6)           ADD BITS TO EXISTING BITS
         ST    R3,0(R6)             AND STORE NEW MASK
         LA    R6,4(R6)           NEXT OUTPUT BIT MASK
         LA    R5,4(R5)           ADDR OF NEXT VECTOR PTR
         BCT   R0,PTRLOOP         CONTINUE IF MORE TO PROCESS
         BR    R14                YES - RETURN MASK IN R0
         SPACE 3
         SPACE 3
*        THIS LENGTH FIELD IS USED TO DETERMINE THE EXISTENCE AND SIZE
*        OF THE JWKDSECT AREA.
         ENTRY JWKSAVE
JWKSAVE  DC    AL2(JWKSIZE)
         DC    AL2(WRKSIZE)                                      CCCC
         SPACE 3
         LTORG
         EJECT
*        SAVE AREA FOR DATA SAVED FROM JCT AT JACCALL = 8 ENTRY.
JWKDSECT DSECT
JWKJUSER DS    CL7                USERID FROM JCT
JWKFLAG  DS    C
JWKFINIT EQU   X'80'              JCT USERID COPIED TO JWKJUSER
         SPACE
*        JUST ADD YOUR DATA FIELDS TO JWKDSECT ENTENSION IN JOBACOPY
         SPACE 3
*        WORK AREA DSECT
WRKDSECT DSECT
         DS    18F                SAVE AREA
*        JUST ADD YOUR DATA FIELDS TO WRKDSECT ENTENSION IN JOBACOPY
         EJECT
         PRINT GEN
         JAC
         EJECT
         IOFFCT
         EJECT
         PDV
         EJECT
         JOV
         EJECT
         JMP
         EJECT
         DFN
         EJECT
         TFN
         EJECT
         SRPX
         EJECT
         SEL
         EJECT
         SPACE 3
         PRINT NOGEN
         IKJPSCB
         SPACE 3
         COPY  JOBACOPY
         SPACE 3
         END
