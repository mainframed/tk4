SASSXXL1 TITLE 'SASSXXL1 -- UCC7/RACF LOGON EXIT'
*--------------------------------------------------------------------*
*  PROGRAM NAME:                                                     *
*                                                                    *
*     SASSXXL1 -- UCC7/RACF LOGON EXIT                               *
*                                                                    *
*  FUNCTION:                                                         *
*                                                                    *
*        /LOGON                         (S/R)                        *
*                                                                    *
*        GROUP,USERIDPWD                (S/R) (IF USERID IS 7 BYTES  *
*                                              LONG)                 *
*             OR                                                     *
*                                                                    *
*        GROUP,USERID/PWD               (S/R) (NOT DEPENDENT ON      *
*                                              USERID LENGTH)        *
*             OR                                                     *
*                                                                    *
*        GROUP,USERID,PWD               (S/R) (NOT DEPENDENT ON      *
*                                              USERID LENGTH)        *
*                                                                    *
*      - 'GROUP' IS A VALID RACF GROUP                               *
*      - 'USERID' IS A VALID TSO USERID(MUST BE PART OF RACF GROUP)  *
*      - 'PWD' IS THE PASSWORD FOR THE USERID                        *
*                                                                    *
*        AFTER THE RACINIT IS COMPLETED, THE POINTER IS PLACED       *
*        IN THE SCTUSRXX FIELD FOR USE BY SGETPDS/SPUTPDS RACF       *
*        VERIFICATION USER EXITS.                                    *
*                                                                    *
*        IF A LOGON IS BEING DONE FROM THE MASTER CONSOLE THEN       *
*        AN OPID OF MASTER IS REQUIRED AND RACF CHECKING IS NOT      *
*        DONE.                                                       *
*                                                                    *
* USAGE  NOTES:                                                      *
*                                                                    *
*     -  EACH RACF GROUP USING UCC7 MUST BE INCLUDED IN THE          *
*        SASSSECI SECURITY GEN MODULE AS THE OPID IF LESS THAN       *
*        7 CHARACTERS.                                               *
*                                                                    *
*     -  A TRANSLATE TABLE FOR RACF GROUPS GREATER THAN 6            *
*        CHARACTERS HAS BEEN DISABLED.  ALL RACF GROUPS FOR          *
*        THE PURPOSE OF UCC7/RACF MUST BE 6 CHARACTERS OR LESS       *
*        SINCE UCC7 "OPIDS" ARE LIMITED TO 6 CHARACTERS.             *
*                                                                    *
*     -  MACLIBS NEEDED FOR ASSEMBLY:                                *
*                                                                    *
*        -   'SYS1.MACLIB'                                           *
*        -   'SS.UCC7.R28.MACLIB'                                    *
*        -   'SYS1.AMODGEN'                                          *
*                                                                    *
*                                                                    *
*  ATTRIBUTES -                                                      *
*                                                                    *
*   REENTRANT, REUSEABLE                                             *
*                                                                    *
*                                                                    *
* REGISTER USAGE CONVENTIONS:                                        *
*                                                                    *
*  INPUT:                                                            *
*                                                                    *
*     R2  = ADDR OF 8 BYTE AREA CONTAINING OPERATOR ID ENTERED       *
*                                                                    *
*     R3  = ADDR OF AREA CONTAINING PASSWORD IF ENTERED OR ZEROS     *
*           IF NOT ENTERED.  IF PASSWORD ENTERED, AREA CONSISTS      *
*           OF 2 BYTE LENGTH FIELD FOLLOWED BY PASSWORD ENTERED.     *
*           LENGTH INCLUDES LENGTH FIELD.                            *
*                                                                    *
*     R5  = ADDR OF TERMINAL CONTROL BLOCK.  1ST 7 POSITIONS         *
*           CONTAIN TERMINAL NAME FROM INIT DECK.                    *
*                                                                    *
*  OUTPUT -                                                          *
*                                                                    *
*     R15  = RETURN CODE FOR UCC7                                    *
*                                                                    *
*            0 = ACCEPT THE LOGON                                    *
*        NOT 0 = REJECT THE LOGON                                    *
*                                                                    *
*                                                                    *
*  CHANGE HISTORY -                                                  *
*                                                                    *
*                                                                    *
**********************************************************************
         EJECT
         SPACE  3
*
         PRINT NOGEN
         UCC7SVT
         SASSEQU
         SCTENTRY
         SASSVTMB
         SASSTBLK
         PRINT GEN
         USRSVT
         USRSCT MOD=LOGON
         USING SASSXXL1,R10
         USING SCTSTART,R11
         USING TRMDEF,R5
         USING UCC7SVT,R12
         USING USRSCT,R4
SASSXXL1 CSECT
         LR    R10,R15
         B     SXL1_INIT_USR_SCT        INITIALIZE USERSCT
         DC    C'SASSXXL1 &SYSDATE'
*
*---------------------------------------------------------------------*
*  ACQUIRE STORAGE FOR USER SCT IF NOT ALREADY DONE.                 *
*    AND INITIALIZE PARM FIELDS.                                     *
*---------------------------------------------------------------------*
*
SXL1_INIT_USR_SCT       DS 0H
         L     R4,SCTUSRXX              ADDRESS OF USER SCT
         LTR   R4,R4                    STORAGE ACQUIRED
         BNZ   SXL1_MASTER_TERMINAL     CHECK FOR MASTER TERM
*
SXL1_GET_USR_SCT        DS 0H
         LA    R0,USR#SIZE              LENGTH OF USER SCT
         SGETM SIZE=(R0),BUSY=SXL1_WAIT,RETURN=SXL1_GOT_USR_SCT
*
SXL1_WAIT               DS 0H
*
         SWAIT ECFADD=(R0),ECFMASK=(R0),RETURN=SXL1_GET_USR_SCT
*
SXL1_GOT_USR_SCT        DS 0H
         ST    R1,SCTUSRXX              SAVE POINTER TO USER SCT
         LR    R4,R1                    POINT TO USER SCT
         LA    R6,USR#SIZE              LENGTH TO CLEAR
*
SXL1_CLEAR_USRSCT       DS 0H
*
         MVI   0(R1),X'00'              ZERO BYTE
         LA    R1,1(R1)                 NEXT BYTE
         BCT   R6,SXL1_CLEAR_USRSCT     CLEAR THIS ONE
         LA    R1,RACFRTN               ADDR OF RACF ROUTINE
         ST    R1,USR#XADR              STORE IN SCHADR PARMLIST
         LA    R1,USR#RPRM              RACF PARMLIST
         ST    R1,USR#XADR+4            STORE IN SCHADR PARMLIST
         MVI   USR#XADR+8,144           INDICATE BALR 14,15
         ST    R12,USR#RPRM             SAVE POINTER TO SVT
         ST    R11,USR#RPRM+4           SAVE POINTER TO SCT
         LA    R1,USR#LGRP              POINT TO GROUP/OPID NAME
         ST    R1,USR#RPRM+8            SAVE IN PARMLIST
         LA    R1,USR#LUSR              POINT TO USER ID NAME
         ST    R1,USR#RPRM+12           SAVE IN PARMLIST
         LA    R1,USR#LPAS              POINT TO PASSWORD
         ST    R1,USR#RPRM+16           SAVE IN PARMLIST
         OI    USR#RPRM+16,X'80'        INDICATE LAST IN LIST
         MVC   USR#RIDP,RACDEL          BUILD RACINIT DELETE PARM
         MVC   USR#RICP,RACCRE          BUILD RACINIT CREATE PARM
         MVC   USR#RCP,RACHK            BUILD RACHECK PARM
*---------------------------------------------------------------------*
* CLEAR ACEE FIELD IF PREVIOUSLY ACQUIRED.                            *
* CHECK MASTER TERMINAL, SPECIAL BATHC OPIDS AND "SECRET" LOGON       *
*
SXL1_MASTER_TERMINAL    DS 0H
*
         TM    USR#FLG1,USR#RACF        ACEE FROM PREVIOUS USER
         BNO   SXL1_NO_ACEE             'N' - NOTHING TO FREE
         NI    USR#FLG1,X'FF'-USR#RACF  TURN OFF FLAG
         OI    USR#FLG1,USR#XACE        INDICATE CLEAR ACEE
         LA    R1,USR#XADR              PARM FOR SASSCHDX
         L     R15,SCHDXADR             EP FOR SUB TASK MANAGER
         BALR  R14,R15                  DO THE RACF ROUTINE
*
SXL1_NO_ACEE            DS 0H
*
         CLI   TRMDVC,TRMBATCH          IS THIS A BATCH TERM
         BNE   NOT_BATCH                THIS IS NOT A BATCH TERM
         B     BATCH_CHECK              BRANCH BATCH TERM SECTION
NOT_BATCH               DS 0H
         CLI   TRMDVC,TRMTRL            IS THIS A TARILER TERM
         BNE   NOT_TRAILER              THIS IS NOT A TRAILER TRM
         B     TRAILER_CHECK            BRANCH TRAILER TRM SECTION
NOT_TRAILER             DS 0H
         MVC   USR#GRP,0(R2)            INIT RACF GROUP NAME
         MVC   USR#OPID,0(R2)           INIT OPID
         MVC   USR#UID,=CL7' '          INIT USER ID
         MVC   USR#PASS,=CL8' '         INIT PASSWORD
         OI    USR#FLG1,USR#NOR         INIT AS NO RACF CHECKING
         TIME  ,                        FIND THE CURRENT DATE
*
         STCM  R1,B'0111',USR#PDAT      STORE DATE
         CLC   =C'UCC7MST',0(R5)        IS THIS THE MASTER TERMINAL?
         BNE   SXL1_INIT_SCAN           'N' - INITIALIZE FOR SCAN
*
         CLC   =C'MASTER',0(R2)         OPID OF MASTER REQUIRED
         BE    SXL1_EXIT_RC0            'Y' - CONTINUE LOGON
         B     SXL1_EXIT_RC8            'N' - FAIL LOGON
*---------------------------------------------------------------------*
* SCAN USERID AND PASSWORD FIELD POINTED TO BY (R3)                   *
* IF NO  PASSWORD FIELD EXISTS FAIL LOGON                             *
* THEN CHECK FOR A USERID AND PASSWORD DELIMITED BY A                 *
* "/" OR  ","                                                         *
*                                                                     *
* IF THE "/" OR "," DELIMITERS ARE USED THE USERID MAYBE              *
* ANY LENGTH UP TO 7 BYTES.                                           *
*                                                                     *
* FROM THIS POINT ON THE OPID IS POINTED TO BY R9                     *
* SINCE TRT DESTROYS R2.                                              *
*---------------------------------------------------------------------*
*
SXL1_INIT_SCAN          DS 0H
*
         NI    USR#FLG1,X'FF'-USR#NOR   TURN OFF NO RACF INDICATOR
         LR    R9,R2                    SAVE ADDR OF OPID
         LTR   R3,R3                    AT THIS POINT WE NEED A PSWD
         BZ    SXL1_EXIT_RC8            'N' - FAIL LOGON
         LA    R6,2(R3)                 WHERE PARM BEGINS
         LH    R7,0(R3)                 MAX LENGTH OF USERID/PSWD FIELD
         BCTR  R7,0                     GET MACHINE LENGTH
         BCTR  R7,0                     GET MACHINE LENGTH
         BCTR  R7,0                     GET MACHINE LENGTH
         LR    R1,R3                    POINT TO FIELD
         EX    R7,TRTPARSE              PARSE FIELD BYTE
         BC    8,SXL1_FULL_LENGTH       NONE FOUND
         BC    2,SXL1_FOUND_BLANK       LAST CHAR IS BLANK
         CLM   R2,B'0001',C' '          DID WE FIND A BLANK?
         BE    SXL1_FOUND_BLANK         'Y' - CALCULATE LENGTH OF PSWD
*
         LR    R2,R1                    WHERE "/" IS
         SR    R2,R6                    LENGTH OF USERID
         SR    R7,R2                    LENGTH OF PASSWORD
*
*  USERID CAN NOT BE GREATER THAN 7 OR LESS THAN 1 CHARACTER(S)
*
         CH    R2,=H'7'                 IS USERID TOO LONG?
         BH    SXL1_EXIT_RC8            'Y' - FAIL LOGON
         LTR   R2,R2                    IS USERID 'ZERO'?
         BZ    SXL1_EXIT_RC8            'Y' - FAIL LOGON
*
SXL1_CHK_FOR_BLANKS     DS 0H
*
* IF THE USER HIT THE SPACE BAR AFTER ENTERING USERID AND
*   PASSWORD, THE BLANK WILL BE PASSED ALONG AS A VALID
*   CHARACTER.  RACINIT WILL USE THE BLANK AS PART OF THE
*   PASSWORD AND CAUSE ABEND S283.
* THEREFORE, OMIT ALL TRAILING BLANKS .
*
         LA    R8,0(R7,R1)              END OF PASSWORD
         CLI   0(R8),C' '               MAKE SURE NO BLANKS
         BNE   SXL1_PASSWORD_LEN        'N' - NO TRAILING BLANKS
         BCTR  R7,0                     DECREMENT LENGTH
         LTR   R7,R7                    PASSWORD ALL BLANKS?
         BZ    SXL1_EXIT_RC8            'Y' - FAIL LOGON
         B     SXL1_CHK_FOR_BLANKS      CONTINUE SCAN
*
SXL1_PASSWORD_LEN       DS 0H
*
         CH    R7,=H'8'                 IS PASSWORD TOO LONG?
         BH    SXL1_EXIT_RC8            'Y' - FAIL LOGON
         STC   R2,USR#LUSR              SAVE LENGTH
         STC   R7,USR#LPAS              SAVE PSWD LENGTH
         BCTR  R2,0                     MACHINE LENGTH
         BCTR  R7,0                     MACHINE LENGTH
         EX    R2,MVCUSRID              MOVE USERID
         EX    R7,MVCPASS               MOVE PASSWORD
         B     SXL1_SAVE_RACF_GRP       NOW MOVE THE RACFGRP TO PARMLST
*
*---------------------------------------------------------------------*
* LAST CHARACTER IS A BLANK, SO SET MAX LENGTH OF USERID / PSWD       *
*   FIELD AND CONTINUE AS IF NO BLANKS FOUND.                         *
*                                                                     *
* AT THIS POINT, THE USERID IS ASSUMED TO BE 7 BYTES LONG.            *
*   TOO BAD IF IT ISN'T...                                            *
*---------------------------------------------------------------------*
*
SXL1_FOUND_BLANK        DS 0H
*
         CLM   R2,B'0001',=C' '         IS THIS INDEED A BLANK?
         BNE   SXL1_EXIT_RC8            'N' - A "/" OR "," NOT ALLOWED
         LR    R2,R1                    WHERE BLANK IS
         SR    R2,R6                    LENGTH TO BLANK
         B     SXL1_MOVE_FIELDS         CONTINUE WITH THE MOVE
*
SXL1_FULL_LENGTH        DS 0H
*
*  THE USERID IS ASSUMED TO BE 7 BYTES SO THIS MEANS THAT
*     THE FIELD MUST BE AT LEAST 8 BYTES LONG
*     AND NO GREATER THAN 15 BYTES LONG.
*
         LH    R2,0(R3)                 LENGTH OF FIELD
         S     R2,=F'2'                 OMIT LENGTH OF HALFWORD
*
SXL1_MOVE_FIELDS        DS 0H
*
         CH    R2,=H'8'                 LESS THAN 8 BYTES LONG
         BL    SXL1_EXIT_RC8            'Y' - FAIL LOGON
         CH    R2,=H'15'                GREATER THAN 15 BYTES LONG?
         BH    SXL1_EXIT_RC8            'Y' - FAIL LOGON
         MVI   USR#LUSR,X'07'           LENGTH OF USERID
         MVC   USR#UID,0(R6)            MOVE USERID
*
* REG 1 IS LOADED TO MATCH MVCPASS EXECUTED MOVE INSTRUCTION
*
         LA    R1,6(R6)                 WHERE PASSWORD BEGINS-1
         S     R2,=F'7'                 OMIT LENGTH OF USERID+1
         STC   R2,USR#LPAS              STORE LENGTH
         BCTR  R2,0                     MACHINE LENGTH
         EX    R2,MVCPASS               MOVE THE PASSWORD
*
*---------------------------------------------------------------------*
* THE OPID ENTERED MUST BE A VALID RACF GROUP.                        *
* IT IS NECESSARY TO CALCULATE THE LENGTH AND SAVE IN THE             *
*   GROUP FIELD FOR THE RACINIT.                                      *
*---------------------------------------------------------------------*
*
SXL1_SAVE_RACF_GRP      DS 0H
*
         TRT   0(8,R9),PARSE            SEE HOW LONG OPID IS
         BC    8,SXL1_8BYTE_OPID        IT IS EIGHT BYTES LONG
         BC    2,SXL1_7BYTE_OPID        IT IS SEVEN BYTES LONG
         CLM   R2,B'0001',=C' '         IS THIS A BLANK?
         BNE   SXL1_EXIT_RC8            'N' - ONLY BLANK ALLOWED,
*                                               FAIL LOGON
         LR    R2,R1                    WHERE BLANK IS
         SR    R2,R9                    LENGTH TO BLANK
         LTR   R2,R2                    LENGTH = 0
         BZ    SXL1_EXIT_RC8            'Y' - FAIL LOGON
         STC   R2,USR#LGRP              STORE LENGTH OF GROUP
         B     SXL1_ATTACH_RACINIT      CONTINUE WITH LOGON
*
SXL1_7BYTE_OPID         DS 0H
*
         CLM   R2,B'0001',=C' '         IS THIS A BLANK
         BNE   SXL1_EXIT_RC8            'N' - ONLY BLANK ALLOWED,
*                                           FAIL LOGON
         MVI   USR#LGRP,X'07'           STORE LENGTH OF GROUP
         B     SXL1_XLATE_GROUP         RACF GROUP DOES NOT = OPID
*
SXL1_8BYTE_OPID         DS 0H
*
         MVI   USR#LGRP,X'08'           STORE LENGTH OF GROUP
*
*---------------------------------------------------------------------*
* SINCE THE RACF GROUP IS GREATER THAN 6 CHARACTERS IT CANNOT BE      *
*  EQUAL TO THE OPID IN THE UCC7 SECURITY TABLE.  IT WILL BE          *
*  NECESSARY TO TRANSLATE THIS RACF GROUP INTO ITS PROPER OPID        *
*  BEFORE HANDING CONTROL BACK TO UCC7.                               *
*---------------------------------------------------------------------*
*
SXL1_XLATE_GROUP        DS 0H
*
         L     R6,SVTUFLD               POINT TO USER SVT
         L     R1,USR$GRPS-USRSVT(R6)   RACF/OPID XLATE TABLE
         LTR   R1,R1                    TABLE LOADED
         BNZ   SXL1_XLATE_LOOP          'Y' - LOAD ALREADY DONE
*
         SLOAD EPLOC=SASS$GRP           LOAD MODULE
*
         LTR   R15,R15                  LOAD SUCCESSFUL
         BZ    SXL1_EXIT_RC8            'N' - FAIL LOGON
         ST    R15,USR$GRPS-USRSVT(R6)  SAVE POINTER TO GROUP XLATE TAB
         LR    R1,R15                   POINT TO IT
*
SXL1_XLATE_LOOP         DS 0H
*
         CLI   0(R1),X'FF'              END OF TABLE
         BE    SXL1_EXIT_RC8            'Y' - FAIL THE LOGON
         CLI   0(R1),X'40'              END OF TABLE
         BE    SXL1_EXIT_RC8            'Y' - FAIL THE LOGON
         CLC   0(8,R1),0(R9)            MATCH AN OPID
         BE    SXL1_XLATE_MATCH         'Y' - SAVE OPID
         LA    R1,16(R1)                NEXT TABLE ENTRY
         B     SXL1_XLATE_LOOP          DO THE NEXT ENTRY
*
SXL1_XLATE_MATCH        DS 0H
*
         MVC   0(8,R9),8(R1)            CHANGE OPID FOR UCC7
         MVC   USR#OPID,8(R1)           SAVE OPID IN USRSCT
*
*---------------------------------------------------------------------*
* THE RACINIT CAUSES A WAIT TO BE ISSUED IF RACF PROFILE DATASET      *
*   IS BUSY THEREFORE IT IS NECESSARY TO USE THE SUBTASK FUNCTION     *
*   OF UCC7 TO PREVENT WAITS.                                         *
*---------------------------------------------------------------------*
*
SXL1_ATTACH_RACINIT     DS 0H
*
         LA    R1,USR#XADR              PARM FOR SASSCHDX
         L     R15,SCHDXADR             EP FOR SUBTASK MANAGER
         BALR  R14,R15                  DO THE RACF ROUTINE
         LTR   R15,R15                  CONTINUE WITH LOGON
         BZ    SXL1_EXIT_RC0            'Y' - CONTINUE ALL IS OK
*
*---------------------------------------------------------------------*
* EXIT ROUTINES                                                       *
*---------------------------------------------------------------------*
*
SXL1_EXIT_RC8           DS 0H
*
         LA    R15,8                    SET RC=8
         SEXIT                          RETURN
*
SXL1_EXIT_RC0           DS 0H
*
         OI    USR#FLG1,USR#TACT        MARK TERMINAL ACTIVE
         LA    R15,0                    SET RC=0
         SEXIT                          RETURN
*
BATCH_CHECK             DS 0H
*
         LA    R15,0                    SET RC=0
         SEXIT                          RETURN
*
TRAILER_CHECK           DS 0H
*
         LA    R15,0                    SET RC=0
         SEXIT                          RETURN
*
*---------------------------------------------------------------------*
* RACF SUBROUTINE:                                                    *
*                                                                     *
*   THE PURPOSE OF THIS ROUTINE IS 2-FOLD.                            *
*                                                                     *
*   1) MAKE SURE THAT THE USER LOGGING ON PROVIDED A VALID            *
*      USERID AND PASSWORD.                                           *
*                                                                     *
*   2) IF THE USERID AND PASSWORD ARE VALID THEN SAVE THE             *
*      ACEE POINTER TO BE USED BY SGETPDS/SPUTPDS USER EXITS          *
*      TO VERIFY RACF AUTHORITY.                                      *
*                                                                     *
*   IT IS POSSIBLE THAT THE LAST USER OF THE TERMINAL SCT DID         *
*   NOT LOGOFF AND THUS DRIVE THE LOGOFF EXIT SASSXFF.  IN            *
*   THIS CASE IT IS NECESSARY TO FREE THE ACEE ACQUIRED FOR           *
*   THAT SESSION BEFORE OBTAINING THE CURRENT USER'S ACEE.            *
*                                                                     *
*   NOTE:  THE DELETE ACEE ROUTINE IS USED BY SASSXXFF AS             *
*          WELL AS SASSXXL1.                                          *
*                                                                     *
*          SASSXX07 USES THE RACHECK CODE IN THIS MODULE.             *
*---------------------------------------------------------------------*
*
         PUSH  USING
         USING SCTSTART,R11
         USING UCC7SVT,R12
         USING RACFRTN,R15
         USING USRSCT,R4
*
RACFRTN  DS    0H
*
         B     RACFSTRT                 BRANCH AROUND DATE/MOD STAMP
         DC    C'RACFRTN &SYSDATE'      DATE/MODULE STAMP
*
RACFSTRT DS    0H
*
         STM   R14,R12,12(R13)          SAVE CALLERS REGS
         DROP  R15
         USING RACFRTN,R10
         LR    R10,R15                  BASE REG
         LR    R3,R1                    SAVE PARM
         L     R12,0(,R3)               POINTER TO UCC7SVT
         L     R11,4(,R3)               POINTER TO TERMINAL SCT
         L     R4,SCTUSRXX              POINT TO USRSCT
         ST    R13,USR#SAVE+4           CHAIN CALLERS SAVEAREA
         LA    R1,USR#SAVE              POINT TO MY SAVEAREA
         ST    R1,8(R13)                CHAIN MY SAVEAREA
         LR    R13,R1                   SET MY SAVEAREA
*
* SEE IF RACINIT(DELETE) REQUEST
*
         TM    USR#FLG1,USR#XACE        CLEAR ACEE
         BNO   RACINIT_NO_DELETE        'N' - REQUIRE ACEE
         NI    USR#FLG1,X'FF'-USR#XACE  TURN OFF FLAGS
         SR    R15,R15                  INIT RC=0
         L     R5,USR#ACEE              POINT TO ACEE ADDRESS
         LTR   R5,R5                    PREVIOUS ACEE ACQUIRED/
*                                         NOT FREED
         BZ    RACFRTN_EXIT             'N' - NOTHING TO DO
         B     RACINIT_NO_DELETE   ATB INSERTEDEQUIRE ACEE
*        L     R5,USR#ACEE              WHERE ACEE POINTER WILL BE
         LA    R5,USR#ACEE   CH(ATB)    WHERE ACEE POINTER WILL BE
*
         RACINIT ENVIR=DELETE,ACEE=(R5),RELEASE=1.7,                   X
               MF=(E,USR#RIDP)
*
         XC    USR#ACEE,USR#ACEE        CLEAR ACEE POINTER
         B     RACFRTN_EXIT             RETURN
*
RACINIT_NO_DELETE       DS 0H
*
*  SEE IF RACHECK REQUEST
*
         TM    USR#FLG1,USR#RCHK        RACHECK REQUEST
         BO    RACFRTN_RACHECK          'Y' - ISSUE RACHECK
         LA    R5,USR#ACEE              WHERE ACEE POINTER WILL GO
         L     R9,12(,R3)               POINTER TO USERID
         L     R2,16(,R3)               POINTER TO PASSWORD
         L     R7,8(,R3)                POINTER TO GROUP
*
         RACINIT USERID=(R9),PASSWRD=(R2),GROUP=(R7),PASSCHK=YES,      X
               ENVIR=CREATE,ACEE=(R5),RELEASE=1.7,LOG=ALL,             X
               MF=(E,USR#RICP)
*
         OI    USR#FLG1,USR#RACF        INDICATE ACEE ACQUIRED
         B     RACFRTN_EXIT
*
RACFRTN_RACHECK         DS 0H
*
         L     R5,USR#ACEE              ADDRESS OF ACEE
         L     R2,20(,R3)               ADDRESS OF DSNAME
         LA    R6,USR#VOL               ADDRESS OF VOLUME NAME
         SR    R7,R7                    CLEAR A REGISTER
         IC    R7,24(,R3)               RACF ATTR
*
         RACHECK ENTITY=((R2)),VOLSER=(R6),                            X
               DSTYPE=N,ACEE=(R5),ATTR=(R7),                           X
               MF=(E,USR#RCP)
*
         NI    USR#FLG1,X'FF'-USR#RCHK  TURN OFF FLAG
*
RACFRTN_EXIT            DS 0H
*
         L     R13,USR#SAVE+4           GET CALLERS SAVEAREA
         ST    R15,16(,R13)             SAVE RETURN CODE
         LM    R14,R12,12(R13)          RESTORE REGS
         BR    R14
         POP   USING
*
*---------------------------------------------------------------------*
*  DATA DEFINITIONS                                                   *
*---------------------------------------------------------------------*
*
         LTORG
SASS$GRP DC    CL8'SASS$GRP'
MVCUSRID MVC   USR#UID(0),2(R3)         SAVE USERID
MVCPASS  MVC   USR#PASS(0),1(R1)        SAVE PASSWORD
TRTPARSE TRT   2(0,R1),PARSE            SEARCH FOR A BLANK OR SLASH
*
* RACINIT DELETE LIST
*
RACDEL   RACINIT ENVIR=DELETE,ACEE=RACDEL,RELEASE=1.7,MF=L
*
RACDEND  EQU   *
*
* RACINIT CREATE LIST
*
RACCRE   RACINIT USERID=RACCRE,PASSWRD=RACCRE,GROUP=RACCRE,            X
               PASSCHK=YES,ENVIR=CREATE,ACEE=RACCRE,                   X
               RELEASE=1.7,LOG=ALL,MF=L
*
RACCEND  EQU   *
*
* RACHECK LIST
*
RACHK    RACHECK ENTITY=(RACHK),VOLSER=RACHK,CLASS='DATASET',          X
               DSTYPE=N,ACEE=RACHK,APPL='RLCLEAR',MF=L
*
RACHKEND EQU   *
*
PARSE    DC    XL256'00'
         ORG   PARSE+C' '
         DC    C' '
         ORG   PARSE+C'/'
         DC    C'/'
         ORG   PARSE+C','
         DC    C','
         ORG
         END
