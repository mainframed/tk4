***********************************************************************
*       THIS SAS PROGRAM GETS THE RMF INFORMATION FROM THE SMF DATA   *
*       SET AND PRODUCES DETAIL PERFORMANCE STATISTICS  FOR CPU ,     *
*       CHANNELS , PAGING , HIGH DEVICE AND WORKLOAD/SERVICE UNITS    *
*       ON A DAILY BASIS                                              *
*                                                                     *
*       MODIFIED 04/22/78 FOR SOCO C.C. J. A. CHAPMAN                 *
*                                                                     *
*       DETAIL WORKLOAD PRINTS ADDED 05/05/78  JAC                    *
*                                                                     *
*       DETAIL WORKLOAD PRINTS REMOVED 06/07078 JAC                   *
*                                                                     *
**********************************************************************;
OPTIONS PS=60 SKIP=0   NODATE S=72 ERROR=3          BLKSIZE=13030 ;
DATA   CPU ( KEEP = TIME SHIFT DATE CPU_ID RMFDUR CPU_BUSY HR HOUR
             BTH_ASID STC_ASID TSO_ASID TOT_ASID )
    PAGING ( KEEP = TIME SHIFT DATE CPU_ID RMFDUR  HR HOUR PAGERATE
             COMRATE SWAPRATE PGFAULT DEMAND PAGEINS PAGEOUTS ADSPSWAP
             SWAPIN SWAPOUT TOT_SWP SWP_SEC LONG_WT UNILATRL ENQ_EXCH
             VIO REL_SHRT          IPS ENQ_CONT EXCHANGE DETECTED )
 CHANNELS ( KEEP = TIME SHIFT DATE CPU_ID RMFDUR CHN_BUSY CHN_ID CHAN_ID
             CH_ID CHN_TCHB SAMPLES CHN_BSWT CHN_SIO HR HOUR )
  WORKLOAD ( KEEP =SHIFT DATE CPU_ID PERFGRP NRPERIOD CPUMIN DOMAIN ABS
             TSR TOT_SRV HR CPUUNITS IOUNITS MSOUNITS AVE_TRAN IO_SRV
             CPU_SRV MSO_SRV TRAN_WS RES_TIME TRAN_SWA DMN_WS IO_TRAN )
       DEV ( KEEP = TIME SHIFT DATE CPU_ID RMFDUR DEV_ADDR PCT_BUSY
             SIO_SEC AVE_QUE QDEPTH HR CUB  VOLSER  DASDI DASD_I HOUR )
   RPTDATE ( KEEP = RPT_DATE ) ;
INFILE SMF ;    * INPUT DDNAME ;       RETAIN RPT_DATE; RETAIN II 0;

INPUT @2 REC_ID  PIB1.  @ ;  * GET THE RECORD ID   ;
IF REC_ID<70 OR REC_ID>79 THEN DELETE;       * REMOVE NON-RMF RECORDS;
IF _ERROR_ THEN DELETE; _ERROR_ =0;  *BAD SMF ,FILE RMF ,PUT _INFILE_ ;
INPUT @12 CPU_ID $1.   @17 TIME PD4.  YEAR $2.   DATE   PD2.
RMFDPK PD4. @ ;     IF DATE = . THEN DELETE ;
DAY = MOD(DATE,1000) ; KPDATE = MOD (DATE,7) ;
*IF KPDATE = 0 OR KPDATE = 1 THEN DELETE ; * DELETE WEEKENDS ;
*    CALCULATE RMFDURATION AND SHIFT ;
RMFMIN = INT ( RMFDPK / 100000 )  ;
RMFDUR = RMFMIN * 60 + ( RMFDPK - RMFMIN * 100000 ) / 1000 ;
HOUR   =     ( TIME / 10000 )     ;
HR     = INT ( TIME / 10000 )     ;
SHIFT  = INT ( HR / 8 ) ;         IF SHIFT=0  THEN SHIFT=3 ;
** SELECT HOURS **;            ** IF HR<6 OR HR>17 THEN DELETE ;

****       ;
IF SHIFT ^= 1 THEN GOTO HEAD_OUT;
   IF II THEN GO TO HEAD_OUT ;
      INPUT @21 THE_DATE PD4.  @; RPT_DATE = DATEJUL(THE_DATE) ;
      FORMAT RPT_DATE WEEKDATE37. ;     II=1;         OUTPUT RPTDATE ;
*  RETURN;
****       ;
 HEAD_OUT:
** SPLIT OUT EACH RMF SEPARATE RECORD TYPE  **;
IF REC_ID = 70 THEN GOTO TYPE70               ; * CPU      RECORD ;
IF REC_ID = 71 THEN GOTO TYPE71               ; * PAGING   RECORD ;
IF REC_ID = 72 THEN GOTO TYPE72               ; * WORKLOAD RECORD ;
IF REC_ID = 73 THEN GOTO TYPE73               ; * CHANNELS RECORD ;
IF REC_ID = 74 THEN GOTO TYPE74               ; * DEVICES  RECORD ;
RETURN  ;
*          CPU RECORD          ;
TYPE70:
   INPUT @51 NO_CPU PIB2. SIZE_CPU PIB2.   @33 SAMPLES PIB4. @;
   PTR = 75  ;                    COUNT = 1      ;
   CPUSAV = CPU_ID   ;
   GETCPU:   INPUT @PTR WAIT PIB4.  +2 CPUID PIB2.  +250 BATCH PIB4.
   +52 STC PIB4. +52 TSO PIB4. @;
   CPU_ID = CPUSAV   ;
   IF CPU_ID = '9' AND CPUID = 0 THEN CPU_ID = '0' ;
   CPU_BUSY  = 1 -WAIT *16E-6 / RMFDUR ; IF SAMPLES=0 THEN SAMPLES=.1 ;
   IF CPU_BUSY LT 0 THEN DELETE ; IF CPU_BUSY GT 1. THEN DELETE ;
 BTH_ASID=BATCH/SAMPLES;  STC_ASID=STC/SAMPLES;  TSO_ASID=TSO/SAMPLES;
 TOT_ASID=(BATCH + STC + TSO) / SAMPLES ;
   OUTPUT CPU     ;
   IF COUNT GE NO_CPU THEN RETURN    ;
   COUNT = COUNT + 1  ;
   PTR = PTR + SIZE_CPU   ;
   GOTO GETCPU  ;
*       PAGING RECORD          ;
TYPE71:
INPUT @53
       PAGEINS  PIB4. PAGEOUTS PIB4. RECLAIMS PIB4. ADSPSWAP PIB4.
       SWAPIN   PIB4. SWAPOUT  PIB4. VIOPGIN  PIB4. VIOPGOUT PIB4.
       VIORECL  PIB4. COMPAGIN PIB4. COMPGOUT PIB4. COMRECL  PIB4. @ ;
INPUT @297
       ITERM_WT PIB4. LONG_WT  PIB4. DETECTED PIB4. UNILATRL PIB4.
       REQUESTD PIB4. AUX_SHRT PIB4. REL_SHRT PIB4. EXCHANGE PIB4.
       ENQ_EXCH PIB4. OTERM_WT PIB4.                                 ;
PAGERATE =  (PAGEINS + PAGEOUTS + SWAPIN +
  SWAPOUT +VIOPGIN +VIOPGOUT ) /RMFDUR;    ENQ_CONT=ENQ_EXCH +LONG_WT ;
COMRATE =  (COMPAGIN+COMPGOUT ) / RMFDUR;
PGFAULT =  (VIORECL +RECLAIMS +VIOPGIN +PAGEINS ) / RMFDUR ;
SWAPRATE=  ( SWAPIN + SWAPOUT ) / RMFDUR;  IPS=UNILATRL + ENQ_EXCH   ;
DEMAND  =  (PAGEINS + PAGEOUTS) / RMFDUR;
TOT_SWP = ITERM_WT +LONG_WT +DETECTED +UNILATRL +REQUESTD +AUX_SHRT
 +REL_SHRT +EXCHANGE +ENQ_EXCH +OTERM_WT;
SWP_SEC = TOT_SWP / RMFDUR   ;      VIO=(VIOPGIN + VIOPGOUT) / RMFDUR;
OUTPUT PAGING                ;
RETURN; * END OF PAGING ANALYSIS;
*     WORKLOAD RECORD        ;
TYPE72:
    INPUT @31 PERFGRP PIB2. @51 NRPERIOD PIB2.  PG_SIZE PIB2.
      @77 IOCCOEFF 4. CPUCOEFF 4. MSOCOEFF 4.     @ ;
      PERIOD=1 ;      POINTER = 89;
      LOOP72:                             IF NRPERIOD=0 THEN RETURN ;
    INPUT @POINTER TRANS PIB4. ACTIVE PIB4. SERVICE PIB4. ELAPSED PIB4.
      WKLOAD PIB4. MSOUNITS PIB4. IOUNITS PIB4. CPUUNITS PIB4.
      RESIDENT PIB4. SWAPSEQ PIB4. DOMAIN PIB2. OBJECTIV PIB1. +1 @;
      WKLOAD=WKLOAD/256 ;
ACT_MIN=ACTIVE*1024/(606E);
IF ACTIVE ^= 0 THEN ACT_SEC=ACTIVE * 1024/1.0E6 ;
IF RESIDENT^=0 THEN RES_SEC=RESIDENT*1024/1.0E6 ;
IF SERVICE ^=0 THEN ABS=SERVICE/RES_SEC ;
IF CPUUNITS^=0 THEN X=CPUUNITS/CPUCOEFF ;
ELP_MIN=ELAPSED*1024/(606E);            ELP_SEC=ELAPSED*1024/1.0E6 ;
RES_MIN=RESIDENT*1024/(606E);
      *CALCULATE CPUMIN FROM CPUUNITS. 60 IS CONVERSION TO MINUTES ;
      *CPUFACT IS NUMBER FOR CPU SU PER SECOND FROM IBM TABLES.
      *151 FOR 168, 125 FOR 165, 51.2 FOR 158, 42 FOR 155 & 24 FOR 145;
      *CORRESPONDING SECONDS PER SU (FOR SYS9 CPUS) ARE 151 - .0066,
      *125 - .080, 51.2 - .0195, 42.0 - .0238, 24 - .0417 ;
    SU_SEC=151 ;                             TSR=SERVICE/ACT_SEC ;
    CPUMIN=CPUUNITS/(CPUCOEFF*SU_SEC*60);  * TRLEN=ELP_SEC/TRANS ;
    IOSERV=IOUNITS/IOCCOEFF;                 CPUSERV=CPUUNITS/CPUCOEFF;
    MSSERV=MSOUNITS/MSOCOEFF;                TOT_SRV=SERVICE/RMFDUR;
    AVE_TRAN=ACT_SEC/RMFDUR ;                MSO_SRV=MSOUNITS/RMFDUR;
    TRAN_WS=((MSOUNITS/MSOCOEFF)*50)/X ;
    RES_TIME=RES_SEC/ABS ;                   TRAN_SWA=RES_SEC/RMFDUR ;
IF TRANS^=0 THEN IO_TRAN = IOUNITS/(IOCCOEFF*TRANS) ;
    DMN_WS=TRAN_WS/TRAN_SWA   ;
    IO_SRV=IOUNITS/RMFDUR ;                  CPU_SRV=CPUUNITS/RMFDUR;
      IF SERVICE ^=0 THEN OUTPUT WORKLOAD;
      NRPERIOD=NRPERIOD-1 ;
      PERIOD=PERIOD+1 ;                      POINTER=POINTER+PG_SIZE ;
      GOTO LOOP72 ;
   RETURN             ;
*      CHANNEL RECORD          ;
TYPE73:
   INPUT @51 NO_CHN PIB2. SIZE_CHN PIB2.   @33 SAMPLES PIB4.  @  ;
   PTR = 77      ;   COUNT = 1      ;
   CPUSAV = CPU_ID   ;
  GETCHN:  INPUT @PTR CPUID PIB2.  CHN_ID PIB1. CHN_FLAG PIB1.
           CHN_SIO PIB4.  CHN_TCHB PIB4. CHN_TBW PIB4.  @  ;
   CHN_BUSY = CHN_TCHB / SAMPLES          ; * CHANNEL BUSY FRACTION ;
   CHN_BSWT = CHN_TBW / SAMPLES          ; * CHAN BUSY, CPU WAIT   ;
   CHN_SIO  = CHN_SIO / RMFDUR           ; * SIO'S PER SECOND      ;
   FORMAT CHN_ID $HEX1.;
IF CHN_BUSY LT 0 THEN DELETE ; IF CHN_BUSY GT 1. THEN DELETE ;
   *    TEST THE CHANNEL FLAG         * ;
   *    X'01' IS ONLINE SELECTOR, X'21' IS ONLINE BLOCK MPX    ;
   IF CHN_FLAG = 1 OR CHN_FLAG = 33 THEN GOTO CHNOKDAT ; * DATA IS OK ;
   *  INVALID CHANNEL ID OR CPU WAS VARIED, SO DATA IS INVALID ;
   *   DATA IS INVALID FOR BYTE MPX TOO ;
   CHN_SIO  = .  ;  CHN_BUSY = . ; CHN_BSWT = .  ;
   CHNOKDAT:
   CPU_ID = CPUSAV   ;
   OUTPUT CHANNELS;
   IF COUNT GE NO_CHN THEN RETURN    ;
   COUNT = COUNT + 1    ;
   PTR = PTR + SIZE_CHN   ;
   GOTO GETCHN  ;
*       DEVICE RECORD          ;
TYPE74:
INPUT @ 51 NO_DEV PIB2. @33 NO_SAMPL PIB4. @   ;
POINTER = 61 ; COUNT = 1 ;
GETDEV: INPUT @POINTER CU $CHAR1. @POINTER CUB PIB1. @;
FORMAT CU  HEX2. ;
        IF NO_SAMPL =0 THEN NO_SAMPL =.1;
        IF  80>CUB<128   THEN DELETE ;
        INPUT @POINTER DEV_ADDR $CHAR2.    +6 VOLSER $6.
            +2 DEV_SIO PIB4. DEV_TDB PIB4. QDEPTH PIB4. @;
FORMAT DEV_ADDR $HEX3. ; IF DEV_TDB=0 THEN DEV_TDB=.001 ;
IF DEV_TDB LT 0 THEN DELETE; IF DEV_SIO LT 0 THEN DELETE ;
DEV_BUSY = DEV_TDB / NO_SAMPL ;
SIO_SEC = DEV_SIO / RMFDUR   ;
AVE_QUE = QDEPTH / DEV_TDB   ;
PCT_BUSY = INT(100 * (DEV_BUSY + .005));
OUTPUT DEV ;
IF COUNT GE NO_DEV THEN RETURN ;
COUNT = COUNT + 1 ;   * POINTER=POINTER + 28;   POINTER=POINTER + 84 ;
GOTO GETDEV ;
* PAGING DATA ;
DATA  PAGE_S7  PAGE_S8 PAGE_S9  SWPS_SEC ;
     KEEP PAGERATE COMRATE SWAPRATE PGFAULT DEMAND  HR   HOUR REL_SHRT
     EXCHANGE DETECTED TOT_SWP SWP_SEC LONG_WT UNILATRL ENQ_EXCH
     IPS ENQ_CONT VIO  CPU_ID     ;
     SET PAGING ;
LABEL HOUR=HOURLY AVE PAGING DETAIL   UNILATRL=SWAP OUT COUNT  ;
IF CPU_ID='7' THEN OUTPUT PAGE_S7 ;
IF CPU_ID='8' THEN OUTPUT PAGE_S8 ;
IF CPU_ID='9' THEN OUTPUT PAGE_S9 ;
OUTPUT SWPS_SEC;
RETURN;
* SEPARATE CHANNELS BY CPU AND BY SELECTOR AND BY BLOCK MPX CHANNELS ;
DATA CH_S7SEL  CH_S7BMX  CH_S8SEL CH_S8BMX  CH_S9SEL CH_S9BMX;
KEEP CHN_ID DATE CHN_BUSY CPU_ID CHN_SIO HR HOUR ;   SET CHANNELS ;
IF CPU_ID = '7' AND CHN_ID LE 3   THEN OUTPUT CH_S7SEL;
IF CPU_ID = '8' AND CHN_ID LE 3   THEN OUTPUT CH_S8SEL;
IF CPU_ID = '9' AND CHN_ID LE 3   THEN OUTPUT CH_S9SEL;
IF CPU_ID = '7' AND CHN_ID GE 6   THEN OUTPUT CH_S7BMX;
IF CPU_ID = '8' AND CHN_ID GE 6   THEN OUTPUT CH_S8BMX;
IF CPU_ID = '9' AND CHN_ID GE 6   THEN OUTPUT CH_S9BMX; RETURN ;

* SORT CPU DATA AND THEN DERIVE MEANS ;
PROC SORT DATA = CPU    ;  BY HOUR CPU_ID  ;
PROC MEANS DATA= CPU MEAN NOPRINT;  BY HOUR CPU_ID ;    VAR CPU_BUSY;
LABEL HOUR=HOURLY AVE CPU BUSY PROFILE   CPU=% CPU UTILIZATION ;
 OUTPUT OUT=CPU_HR MEAN=CPU ;

DATA SYS8 SYS9 SYS7;
KEEP  DATE HOUR HR BTH_ASID STC_ASID TSO_ASID  TOT_ASID ;
SET CPU; LABEL HOUR=HOURLY AVE ASID DETAIL  BTH_ASID=SYSTEM ASIDS;
IF CPU_ID='7' THEN OUTPUT SYS7 ;
IF CPU_ID='8' THEN OUTPUT SYS8 ;
IF CPU_ID='9' THEN OUTPUT SYS9 ;  RETURN ;
DATA ASIDS ;   KEEP DATE HOUR TOT_ASID CPU_ID HR ;    SET CPU ;
 LABEL HOUR=HOURLY AVE ASID DETAIL   TOT_ASID=SYSTEM ASIDS    ;
IF CPU_ID^='0' THEN OUTPUT ASIDS ;
RETURN ;

PROC SORT DATA = SYS8     ;  BY HOUR         ;
PROC MEANS DATA=SYS8 MEAN NOPRINT;BY HOUR;VAR BTH_ASID STC_ASID
TSO_ASID TOT_ASID;
LABEL HOUR=HOURLY 168UP AVE ASID DETAIL BTH_ASID=SYSTEM ASIDS;
PROC SORT DATA = SYS9     ;  BY HOUR         ;
PROC MEANS DATA=SYS9 MEAN NOPRINT;BY HOUR;VAR BTH_ASID STC_ASID
TSO_ASID TOT_ASID;
LABEL HOUR=HOURLY 168AP AVE ASID DETAIL BTH_ASID=SYSTEM ASIDS;
PROC SORT DATA = ASIDS  ;  BY HOUR CPU_ID ;
PROC MEANS DATA=ASIDS MEAN NOPRINT ;   BY HOUR CPU_ID ;  VAR TOT_ASID ;
LABEL ASID=AVE ASID BY CPU  HOUR=HOURLY AVE ASID PROFILE BY CPU ;
                                 OUTPUT OUT=ASID_ALL MEAN=ASID ;
PROC MEANS DATA=ASID_ALL SUM NOPRINT ;   BY HOUR CPU_ID   ;  VAR ASID ;
LABEL ASID=AVE ASID BY CPU  HOUR=HOURLY AVE ASID PROFILE BY CPU ;
                                 OUTPUT OUT=ALL_ASID MEAN=ASID ;
******** WORKLOAD CALCULATION ****************************;
PROC SORT DATA=WORKLOAD ;
         BY CPU_ID HR PERFGRP NRPERIOD ;
PROC MEANS DATA=WORKLOAD MEAN NOPRINT ;
         BY CPU_ID HR PERFGRP NRPERIOD ;
              VAR CPUUNITS IOUNITS MSOUNITS IO_SRV
                  MSO_SRV CPU_SRV TOT_SRV ABS TSR AVE_TRAN ;
         OUTPUT OUT=WKLD MEAN=CPU_SERV IO_SERV MSO_SERV IO_SEC MSO_SEC
                  CPU_SEC SRV_SEC ABS TSR TRANS  ;
* CHANNEL SORTS      ;
PROC SORT  DATA = CH_S7SEL ; BY HOUR        CHN_ID ;
PROC SORT  DATA = CH_S8SEL ; BY HOUR        CHN_ID ;
PROC SORT  DATA = CH_S9SEL ; BY HOUR        CHN_ID ;
PROC SORT  DATA = CH_S7BMX ; BY HOUR        CHN_ID ;
PROC SORT  DATA = CH_S8BMX ; BY HOUR        CHN_ID ;
PROC SORT  DATA = CH_S9BMX ;   BY HOUR      CHN_ID ;
PROC SORT DATA = CHANNELS ; BY HOUR CPU_ID CHN_ID ;
PROC MEANS DATA=CHANNELS MEAN NOPRINT;BY HOUR CPU_ID CHN_ID;VAR CHN_SIO;
OUTPUT OUT=ALL_CHN MEAN=CHN_SIO ;     **** AVERAGE SIO/SEC CPU BY CHN ;
PROC SORT DATA = CHANNELS ;            BY HR CPU_ID CHN_ID;
PROC MEANS DATA=CHANNELS MEAN NOPRINT; BY HR CPU_ID CHN_ID;VAR CHN_SIO;
OUTPUT OUT=ALL_CH  MEAN=CHN_SIO ;     **** AVE SIO/SEC COMPLEX BY CHN ;
* SELEC DASDI > 30 % ;
 PROC SORT DATA= DEV;               BY HR CPU_ID DEV_ADDR VOLSER ;
 PROC MEANS DATA=DEV MEAN MAX STDERR NOPRINT;   BY HR CPU_ID DEV_ADDR
 VOLSER ;              VAR PCT_BUSY SIO_SEC AVE_QUE ;
 OUTPUT OUT= DASDI MEAN=BUSY SIOS QUEUE MAX=HI_BUSY STDERR=ER_BUSY  ;
DATA DEV_HIGH;  KEEP HR CPU_ID DEV_ADDR BUSY SIOS QUEUE HI_BUSY ER_BUSY
 VOLSER ;                                SET DASDI ;
IF BUSY GT 35 THEN OUTPUT DEV_HIGH ;     RETURN ;

* PUT HEADER AND DATE PAGE ;
DATA  _NULL_                               ;
      SET RPTDATE                          ;
  IF _N_ = 1    THEN LINK HRDER            ;
  RETAIN RPT_DATE                          ;
RETURN                                     ;
HRDER:
 FILE BASERPT1 NOTITLES NOPRINT                           ;
 PUT @15 '-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-'  ;
 PUT @15 '*                                           *'  ;
 PUT @15 '*                                           *'  ;
 PUT @22        'RMF REPORTING PERIOD STARTING'           ;
 PUT @15 '*                                           *'  ;
 PUT @25                  RPT_DATE                        ;
 PUT @15 '*                                           *'  ;
 PUT @15 '*   J. CHAPMAN           CHICAGO CENTER     *'  ;
 PUT @15 '*                                           *'  ;
 PUT @15 '-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-'  ;
RETURN                                                    ;

DATA  HDR1 (KEEP = HDR_PAGE )                             ;
   INFILE BASERPT1                                        ;
 INPUT  @1 HDR_PAGE    $CHAR80.                           ;

DATA  HDR2 (KEEP = HDR_PAGE )                             ;
   INFILE BASERPT2                                        ;
 INPUT  @1 HDR_PAGE    $CHAR80.                           ;

 DATA TITLEPG  (KEEP = HDR_PAGE )                         ;
 SET   HDR1  HDR2                                         ;

PROC PRINT  DATA = TITLEPG                                ;
  ID HDR_PAGE                                             ;
TITLE1 CAPACITY .. MANAGEMENT .. SYSTEM ;
TITLE2 ;
*                                    ;
*  FIX TITLES TO INCLUDE REPORT DATE ;
*                                    ;
* LIST DASDI > 30 % ;
PROC SORT DATA = DEV_HIGH ;
         BY  DESCENDING BUSY HR ;
PROC PRINT DATA= DEV_HIGH ;
         VAR BUSY SIOS QUEUE ER_BUSY HI_BUSY CPU_ID DEV_ADDR VOLSER HR;
TITLE3  REPORT NUMBER (1);
TITLE4  DEVICE UTILIZATION GREATER THEN 35%(BUSY) BY SYSTEM AND DEVICE ;

PROC MEANS DATA=ALL_CHN SUM NOPRINT; BY HOUR CPU_ID NOTSORTED ;
     VAR CHN_SIO ;
LABEL HOUR=HOURLY AVE SIO/SEC RATE BY CPU   CHN_SIO=AVE SIO BY COMPLEX;
OUTPUT OUT=CPU_SIO  SUM =CHN_SIO   ;    **** SIO/SEC SUMMARIZED BY CPU;
PROC MEANS DATA=ALL_CH  SUM NOPRINT ;  BY HR NOTSORTED ;  VAR CHN_SIO ;
LABEL HOUR=AVE HOURLY COMPLEX SIO/SEC RATE  CHN_SIO=AVE SIO BY COMPLEX;
OUTPUT OUT=COMPLEX SUM=CHN_SIO     ;      **** SIO/SEC SUM BY COMPLEX;
*  DERIVE  CHANNEL  MEANS BY  SYSTEM AND SEL / MPX  ;
PROC MEANS DATA=CH_S7SEL MEAN NOPRINT; BY  HOUR CHN_ID ; VAR CHN_BUSY  ;
 LABEL HOUR=HOURLY SYS7 AVE SELECTOR CHAN BUSY AVE=CHANNEL UTILIZATION;
OUTPUT OUT=A1_CH MEAN=AVE ;
PROC MEANS DATA=CH_S7BMX MEAN NOPRINT; BY  HOUR CHN_ID ; VAR CHN_BUSY  ;
 LABEL HOUR=HOURLY SYS7 AVE BLOCK_MPX CHAN BUSY AVE=CHANNEL UTILIZATION;
OUTPUT OUT=A5_CH MEAN=AVE ;
PROC MEANS DATA=CH_S8SEL MEAN NOPRINT ;BY  HOUR CHN_ID ; VAR CHN_BUSY  ;
 LABEL HOUR=HOURLY SYS8 AVE SELECTOR CHAN BUSY AVE=CHANNEL UTILIZATION;
OUTPUT OUT=B1_CH MEAN=AVE ;
PROC MEANS DATA=CH_S8BMX MEAN NOPRINT; BY  HOUR CHN_ID ; VAR CHN_BUSY  ;
 LABEL HOUR=HOURLY SYS8 AVE BLOCK_MPX CHAN BUSY AVE=CHANNEL UTILIZATION;
OUTPUT OUT=B5_CH MEAN=AVE ;
PROC MEANS DATA=CH_S9SEL MEAN NOPRINT ; BY HOUR CHN_ID; VAR CHN_BUSY ;
 LABEL HOUR=HOURLY SYS9 AVE SELECTOR CHAN BUSY AVE=CHANNEL UTILIZATION;
OUTPUT OUT=C1_CH MEAN=AVE ;
PROC MEANS DATA = CH_S9BMX NOPRINT; BY  HOUR    CHN_ID ; VAR CHN_BUSY  ;
 LABEL HOUR=HOURLY SYS9 AVE BLOCK_MPX CHAN BUSY AVE=CHANNEL UTILIZATION;
OUTPUT OUT=C5_CH MEAN=AVE ;
PROC MEANS DATA = CH_S7SEL NOPRINT; BY  HOUR    CHN_ID ; VAR CHN_SIO   ;
 LABEL HOUR=HOURLY SYS7 AVE SELECTOR CHAN SIO/SEC AVE=CHANNEL SIOS ;
OUTPUT OUT=A1_SIO MEAN=AVE ;
PROC MEANS DATA = CH_S7BMX NOPRINT; BY  HOUR    CHN_ID ; VAR CHN_SIO   ;
 LABEL HOUR=HOURLY SYS7 BLOCK_MPX CHAN AVE SIO/SEC AVE=CHANNEL SIOS;
OUTPUT OUT=A5_SIO MEAN=AVE ;
PROC MEANS DATA = CH_S8SEL NOPRINT ; BY  HOUR   CHN_ID ; VAR CHN_SIO   ;
 LABEL HOUR=HOURLY SYS8 SELECTOR CHAN AVE SIO/SEC AVE=CHANNEL SIOS ;
OUTPUT OUT=B1_SIO MEAN=AVE ;
PROC MEANS DATA = CH_S8BMX NOPRINT; BY  HOUR    CHN_ID ; VAR CHN_SIO   ;
 LABEL HOUR=HOURLY SYS8 BLOCK_MPX CHAN AVE SIO/SEC AVE=CHANNEL SIOS ;
OUTPUT OUT=B5_SIO MEAN=AVE ;
PROC MEANS DATA = CH_S9SEL NOPRINT ; BY  HOUR   CHN_ID ; VAR CHN_SIO   ;
 LABEL HOUR=HOURLY SYS9 SELECTOR CHAN AVE SIO/SEC AVE=CHANNEL SIOS ;
OUTPUT OUT=C1_SIO MEAN=AVE ;
PROC MEANS DATA = CH_S9BMX NOPRINT; BY  HOUR    CHN_ID ; VAR CHN_SIO   ;
 LABEL HOUR=HOURLY SYS9 BLOCK_MPX CHAN AVE SIO/SEC AVE=CHANNEL SIOS ;
OUTPUT OUT=C5_SIO MEAN=AVE ;
* PAGING SORT AND MEANS ;
PROC SORT DATA=PAGING ; BY HOUR CPU_ID ;
PROC MEANS DATA=PAGING MEAN NOPRINT ; BY HOUR CPU_ID ; VAR  PAGERATE ;
 LABEL HOUR=HOURLY AVE PAGING RATE BY CPU  PAGE=PAGES PER SECOND;
OUTPUT OUT=PAGE_HR MEAN=PAGE;
PROC SORT DATA = PAGE_S7; BY HOUR ;
PROC MEANS DATA = PAGE_S7  MEAN NOPRINT       ;BY HOUR ;
      VAR LONG_WT UNILATRL ENQ_EXCH REL_SHRT DETECTED  ;
 LABEL UNILATRL=SWAP OUT COUNT DETAIL HOUR=HOURLY SYS7 SWAP DETAIL ;
OUTPUT OUT=SWAPS_A MEAN=LONG_WT UNILATRL ENQ_EXCH REL_SHRT DETECTED ;
PROC MEANS DATA =PAGE_S7 MEAN NOPRINT   ;  BY HOUR ;  VAR VIO DEMAND ;
 LABEL VIO=VIO VS PAGE RATE  HOUR=SYS7 VIO & TOTAL PAGING COMPARISON;
  OUTPUT OUT=VIO_A MEAN=VIO DEMAND ;
PROC MEANS DATA = PAGE_S7 MEAN NOPRINT       ;  BY HOUR ;
VAR COMRATE SWAPRATE PGFAULT DEMAND PAGERATE  IPS ENQ_CONT ;
 LABEL PAGERATE=PAGES / SECOND HOUR=SYS7  PAGING DETAIL   ;
OUTPUT OUT=PAGE_A MEAN=COMRATE SWAPRATE PGFAULT DEMAND PAGERATE ;
PROC SORT DATA = PAGE_S8; BY HOUR ;
PROC MEANS DATA = PAGE_S8  MEAN NOPRINT       ;BY HOUR; VAR
LONG_WT UNILATRL ENQ_EXCH REL_SHRT DETECTED                       ;
 LABEL UNILATRL=SWAP OUT COUNT DETAIL HOUR=HOURLY SYS8  SWAP DETAIL ;
OUTPUT OUT=SWAPS_B MEAN=LONG_WT UNILATRL ENQ_EXCH REL_SHRT DETECTED ;

PROC MEANS DATA =PAGE_S8 MEAN NOPRINT   ;  BY HOUR ;  VAR VIO DEMAND ;
 LABEL VIO=VIO VS PAGE RATE HOUR=HOURLY SYS8  VIO & PAGING COMPARISON;
  OUTPUT OUT=VIO_B MEAN=VIO DEMAND ;

PROC MEANS DATA = PAGE_S8 MEAN NOPRINT       ;  BY HOUR ;
VAR COMRATE SWAPRATE PGFAULT DEMAND PAGERATE  ;
 LABEL PAGERATE=PAGES   SECOND HOUR=HOURLY SYS8  PAGING DETAIL ;
OUTPUT OUT=PAGE_B MEAN=COMRATE SWAPRATE PGFAULT DEMAND PAGERATE ;

PROC SORT DATA = PAGE_S9; BY HOUR ;
PROC MEANS DATA = PAGE_S9  MEAN NOPRINT       ;BY HOUR ;
      VAR LONG_WT UNILATRL ENQ_EXCH REL_SHRT DETECTED  ;
 LABEL UNILATRL=SWAP OUT COUNT DETAIL HOUR=HOURLY SYS9  SWAP DETAIL ;
OUTPUT OUT=SWAPS_C MEAN=LONG_WT UNILATRL ENQ_EXCH REL_SHRT DETECTED ;
PROC MEANS DATA =PAGE_S9 MEAN NOPRINT   ;  BY HOUR ;  VAR VIO DEMAND ;
 LABEL VIO=VIO VS PAGE RATE  HOUR=SYS9 VIO & TOTAL PAGING COMPARISON;
  OUTPUT OUT=VIO_C MEAN=VIO DEMAND ;
PROC MEANS DATA = PAGE_S9 MEAN NOPRINT       ;  BY HOUR ;
VAR COMRATE SWAPRATE PGFAULT DEMAND PAGERATE  IPS ENQ_CONT ;
 LABEL PAGERATE=PAGES / SECOND HOUR=SYS9  PAGING DETAIL   ;
OUTPUT OUT=PAGE_C MEAN=COMRATE SWAPRATE PGFAULT DEMAND PAGERATE ;

PROC SORT DATA  = SWPS_SEC ; BY HOUR CPU_ID ;
PROC MEANS DATA = SWPS_SEC MEAN NOPRINT ; BY HOUR CPU_ID ; VAR SWP_SEC;
  LABEL SWP_SEC= SWAPS   SEC HOUR=AVE SWAPS PER SECOND BY CPU ;
  OUTPUT OUT=SWP_SECX MEAN=SWP_SEC;
* CPU PAGING AND CHANNEL PROFILES FOR 168 MP;

PROC PLOT DATA = CPU_HR   ;
PLOT CPU*HOUR=CPU_ID / OVERLAY VAXIS=0.0 TO 1.0 BY .1 HREF=8 17
    VREF=.65 .75 .85 .95  HAXIS= 6.0 TO 17.0 BY .5 ;
TITLE3  REPORT NUMBER (2);
TITLE4  AVERAGE CPU BUSY PROFILE (CHICAGO CENTER) BY HOUR  ;

 PROC PLOT DATA = ASID_ALL  ;
PLOT ASID*HOUR= CPU_ID/OVERLAY  VAXIS=0 TO 80 BY 5  HREF=8 17
     VREF= 25 40 55 70  HAXIS= 6.0 TO 17.0 BY .5 ;
TITLE3  REPORT NUMBER (3);
TITLE4 AVERAGE MVS ASID PROFILE OF BATCH/TSO/STC BY HOUR BY MACHINE;

 PROC PLOT DATA = SYS7        ;
 PLOT BTH_ASID*HOUR = 'B'  STC_ASID*HOUR='S'  TSO_ASID*HOUR='T'
  TOT_ASID*HOUR='*'/OVERLAY VAXIS=0 TO 80 BY 5 HREF=8 17
      VREF=25 40 55 70 HAXIS= 6.0 TO 17.0 BY .5 ;
TITLE3  REPORT NUMBER (4);
TITLE4 AVERAGE ASID PROFILE BY BATCH TSO STC BY HOUR  -(SYS7)- ;

 PROC PLOT DATA = SYS9        ;
 PLOT   BTH_ASID*HOUR = 'B'  STC_ASID*HOUR='S'  TSO_ASID*HOUR='T'
  TOT_ASID*HOUR='*'/OVERLAY VAXIS=0 TO 80 BY 5 HREF=8 17
      VREF=25 40 55 70   HAXIS= 6.0 TO 17.0 BY .5 ;
TITLE3  REPORT NUMBER (5);
TITLE4 AVERAGE ASID PROFILE BY BATCH TSO STC BY HOUR -(SYS9)- ;

 PROC PLOT DATA = SYS8        ;
 PLOT   BTH_ASID*HOUR = 'B'  STC_ASID*HOUR='S'  TSO_ASID*HOUR='T'
  TOT_ASID*HOUR='*'/OVERLAY VAXIS=0 TO 80 BY 5 HREF=8 17
      VREF=25 40 55 70   HAXIS= 6.0 TO 17.0 BY .5 ;
TITLE3  REPORT NUMBER (6);
TITLE4 AVERAGE ASID PROFILE BY BATCH TSO STC BY HOUR -(SYS8)- ;

PROC PLOT DATA = A1_CH ;
PLOT AVE*HOUR= CHN_ID /OVERLAY VAXIS=0.0 TO 1.0 BY .1  VREF=.35
     HREF= 8 17  HAXIS= 6.0 TO 17.0 BY .5 ;
TITLE3  REPORT NUMBER (7);
TITLE4 AVERAGE SELECTOR CHANNEL BUSY PROFILE BY HOUR -(SYS7)-    ;

PROC PLOT DATA = C1_CH ;
PLOT AVE*HOUR= CHN_ID /OVERLAY VAXIS=0.0 TO 1.0 BY .1  VREF=.35
     HREF= 8 17  HAXIS= 6.0 TO 17.0 BY .5 ;
TITLE3  REPORT NUMBER (8);
TITLE4 AVERAGE SELECTOR CHANNEL BUSY PROFILE BY HOUR -(SYS9)-    ;

PROC PLOT DATA = B1_CH ;
PLOT AVE*HOUR= CHN_ID /OVERLAY VAXIS=0.0 TO 1.0 BY .1  VREF=.35
     HREF= 8 17  HAXIS= 6.0 TO 17.0 BY .5 ;
TITLE3  REPORT NUMBER (9);
TITLE4 AVERAGE SELECTOR CHANNEL BUSY PROFILE BY HOUR  -(SYS8)-   ;

PROC PLOT DATA = A5_CH ;
PLOT AVE*HOUR= CHN_ID /OVERLAY VAXIS=0.0 TO 1.0 BY .1  VREF=.35  .40
     HREF= 8 17  HAXIS= 6.0 TO 17.0 BY .5 ;
TITLE3  REPORT NUMBER (10);
TITLE4 AVERAGE BLOCK_MPX  CHANNEL BUSY PROFILE BY HOUR -(SYS7)- ;

PROC PLOT DATA = C5_CH ;
PLOT AVE*HOUR= CHN_ID /OVERLAY VAXIS=0.0 TO 1.0 BY .1  VREF=.35   .40
     HREF= 8 17  HAXIS= 6.0 TO 17.0 BY .5 ;
TITLE3  REPORT NUMBER (11) ;
TITLE4 AVERAGE BLOCK_MPX  CHANNEL BUSY PROFILE BY HOUR -(SYS9)-;

PROC PLOT DATA = B5_CH ;
PLOT AVE*HOUR= CHN_ID /OVERLAY VAXIS=0.0 TO 1.0 BY .1  VREF=.35   .40
     HREF= 8 17  HAXIS= 6.0 TO 17.0 BY .5 ;
TITLE3  REPORT NUMBER (12) ;
TITLE4 AVERAGE BLOCK_MPX  CHANNEL BUSY PROFILE BY HOUR -(SYS8)- ;

PROC PLOT DATA = COMPLEX ;
PLOT CHN_SIO*HR='*'/OVERLAY VAXIS=100 TO 450 BY 10 VREF=250 300 350 400
     HREF= 8 17  HAXIS= 6.0 TO 17.0 BY 1.0;
TITLE3  REPORT NUMBER (13) ;
TITLE4 TOTAL (AVE) CHANNEL SIO/SEC FOR THE COMPLEX BY HOUR ;

PROC PLOT DATA = CPU_SIO  ;
PLOT CHN_SIO*HOUR=CPU_ID / OVERLAY VAXIS=0 TO 200 BY 10 VREF=50 100 150
     HREF= 8 17  HAXIS= 6.0 TO 17.0 BY .5 ;
TITLE3  REPORT NUMBER (14) ;
TITLE4 AVE SIOS/SEC BY CPU  PLOTTED BY CPU ID ;

PROC PLOT DATA = A1_SIO;
PLOT AVE*HOUR=CHN_ID /OVERLAY VAXIS=0 TO 50 BY 5 VREF=20 30  HREF=8 17
      HAXIS= 6.0 TO 17.0 BY .5 ;
TITLE3  REPORT NUMBER (15) ;
TITLE4 DETAIL AVE SELECTOR CHANNEL SIOS/SEC  BY HOUR  -(SYS7)-   ;

PROC PLOT DATA = C1_SIO;
PLOT AVE*HOUR=CHN_ID /OVERLAY VAXIS=0 TO 50 BY 5 VREF=20 30 HREF=8 17
      HAXIS= 6.0 TO 17.0 BY .5 ;
TITLE3  REPORT NUMBER (16) ;
TITLE4 DETAIL AVE SELECTOR CHANNEL SIOS/SEC  BY HOUR  -(SYS9)-   ;

PROC PLOT DATA = B1_SIO;
PLOT AVE*HOUR=CHN_ID /OVERLAY VAXIS=0 TO 50 BY 5 VREF=20 30 HREF=8 17
      HAXIS= 6.0 TO 17.0 BY .5 ;
TITLE3  REPORT NUMBER (17) ;
TITLE4 DETAIL AVE SELECTOR CHANNEL SIOS/SEC  BY HOUR  -(SYS8)-   ;

PROC PLOT DATA = A5_SIO;
PLOT AVE*HOUR=CHN_ID /OVERLAY VAXIS=0 TO 50 BY 5 VREF=20 30 HREF=8 17
      HAXIS= 6.0 TO 17.0 BY .5 ;
TITLE3  REPORT NUMBER (18) ;
TITLE4 DETAIL AVE BLOCK MPX CHANNEL SIOS/SEC  BY HOUR  -(SYS7)-   ;

PROC PLOT DATA = C5_SIO;
PLOT AVE*HOUR=CHN_ID /OVERLAY VAXIS=0 TO 50 BY 5 VREF=20 30 HREF=8 17
      HAXIS= 6.0 TO 17.0 BY .5 ;
TITLE3  REPORT NUMBER (19) ;
TITLE4 DETAIL AVE BLOCK MPX CHANNEL SIOS/SEC  BY HOUR  -(SYS9)-   ;

PROC PLOT DATA = B5_SIO;
PLOT AVE*HOUR=CHN_ID /OVERLAY VAXIS=0 TO 50 BY 5 VREF=20 30 HREF=8 17
      HAXIS= 6.0 TO 17.0 BY .5 ;
TITLE3  REPORT NUMBER (20) ;
TITLE4 DETAIL AVE BLOCK MPX CHANNEL SIOS/SEC  BY HOUR  -(SYS8)-   ;

PROC PLOT DATA =PAGE_HR   ;
PLOT PAGE*HOUR=CPU_ID /OVERLAY VAXIS=0 TO 150 BY 10 VREF=45 90
     HREF= 8 17  HAXIS= 6.0 TO 17.0 BY .5 ;
TITLE3  REPORT NUMBER (21) ;
TITLE4 PAGING PROFILE FOR ALL SYSTEMS    BY HOUR                ;

PROC PLOT DATA = PAGE_A  ;
PLOT PAGERATE*HOUR='*' DEMAND*HOUR='D' PGFAULT*HOUR='F'
 COMRATE*HOUR='C' SWAPRATE*HOUR='S' /OVERLAY VAXIS=0 TO 150 BY 10
      HAXIS= 6.0 TO 17.0 BY .5  HREF= 8 17  VREF = 35 70 100;
TITLE3  REPORT NUMBER (22) ;
TITLE4  PAGING PROFILE FOR 1ST SHIFT  -(SYS7)-   ;

PROC PLOT DATA = SWAPS_A ;
PLOT UNILATRL*HOUR='U' DETECTED*HOUR='D' LONG_WT*HOUR='L'
REL_SHRT*HOUR='R' ENQ_EXCH*HOUR='E' /OVERLAY VAXIS=0 TO 200 BY 25
      HAXIS= 6.0 TO 17.0 BY .5  HREF= 8 17  VREF = 10 35;
TITLE3  REPORT NUMBER (23) ;
TITLE4 UNILATERAL DETECT_WT LONG_WT REAL_SHORT ENQ_EXCH  -(SYS7)-      ;

PROC PLOT DATA = VIO_A  ;
PLOT VIO*HOUR='V' DEMAND*HOUR='P'/OVERLAY VAXIS= 0 TO 100 BY 10
      HAXIS= 6.0 TO 17.0 BY .5  HREF= 8 17 ;
TITLE3  REPORT NUMBER (24) ;
TITLE4 PAGING DETAIL  VIO PAGING AND PAGE IN  PAGE OUT  -(SYS7)- ;

PROC PLOT DATA = PAGE_B  ;
PLOT PAGERATE*HOUR='*' DEMAND*HOUR='D' PGFAULT*HOUR='F'
 COMRATE*HOUR='C' SWAPRATE*HOUR='S' /OVERLAY VAXIS=0 TO 100 BY 10
  VREF=30 50  HAXIS= 6.0 TO 17.0 BY .5 HREF= 8 17 ;
TITLE3  REPORT NUMBER (25) ;
TITLE4 PAGING PROFILE FOR 1ST SHIFT  -(SYS8)-   ;

PROC PLOT DATA = SWAPS_B ;
PLOT UNILATRL*HOUR='U' DETECTED*HOUR='D' LONG_WT*HOUR='L'
REL_SHRT*HOUR='R' ENQ_EXCH*HOUR='E' /OVERLAY VAXIS=0 TO 100 BY 10 ;
TITLE3  REPORT NUMBER (26) ;
TITLE4 UNILATERAL DETECT_WT LONG_WT REAL_SHORT ENQ_EXCH -(SYS8)-       ;

PROC PLOT DATA = VIO_B ;
PLOT VIO*HOUR='V' DEMAND*HOUR='P'/OVERLAY
     VAXIS = 0 TO 100 BY 10    VREF = 10 35          ;
TITLE3  REPORT NUMBER (27) ;
TITLE4 PAGING DETAIL  VIO PAGING AND PAGE IN  PAGE OUT  -(SYS8)-  ;

PROC PLOT DATA = PAGE_C  ;
PLOT PAGERATE*HOUR='*' DEMAND*HOUR='D' PGFAULT*HOUR='F'
 COMRATE*HOUR='C' SWAPRATE*HOUR='S' /OVERLAY VAXIS=0 TO 150 BY 10
      HAXIS= 6.0 TO 17.0 BY .5  HREF= 8 17  VREF = 35 70 100;
TITLE3  REPORT NUMBER (28) ;
TITLE4  PAGING PROFILE FOR 1ST SHIFT  -(SYS9)-   ;

PROC PLOT DATA = SWAPS_C ;
PLOT UNILATRL*HOUR='U' DETECTED*HOUR='D' LONG_WT*HOUR='L'
REL_SHRT*HOUR='R' ENQ_EXCH*HOUR='E' /OVERLAY VAXIS=0 TO 200 BY 25
      HAXIS= 6.0 TO 17.0 BY .5  HREF= 8 17  VREF = 10 35;
TITLE3  REPORT NUMBER (29) ;
TITLE4 UNILATERAL DETECT_WT LONG_WT REAL_SHORT ENQ_EXCH  -(SYS9)-      ;

PROC PLOT DATA = VIO_C  ;
PLOT VIO*HOUR='V' DEMAND*HOUR='P'/OVERLAY VAXIS= 0 TO 100 BY 10
      HAXIS= 6.0 TO 17.0 BY .5  HREF= 8 17 ;
TITLE3  REPORT NUMBER (30) ;
TITLE4 PAGING DETAIL  VIO PAGING AND PAGE IN  PAGE OUT  -(SYS9)- ;

PROC PLOT DATA = SWP_SECX;
PLOT SWP_SEC*HOUR=CPU_ID/OVERLAY VAXIS= 0.0 TO 4.0 BY .2 VREF=1.0 2.0;
TITLE3  REPORT NUMBER (31) ;
TITLE4 SWAPS/SEC (AVE) FOR COMPLEX FOR 1ST SHIFT;
*                                                                  ;
*    E N D                                                         ;
*            O F                                                   ;
*                  P L O T                                         ;
*                            S E C T I O N                         ;
*                                            O F                   ;
*                                                  R E P O R T S   ;
*                                                                  ;
*                                                                  ;
*                                                                     ;
* PROC SORT DATA=WKLD ;                                               ;
*          BY HR CPU_ID ;                                             ;
* PROC MEANS DATA=WKLD SUM  NOPRINT ;                                 ;
*          BY HR CPU_ID ;                                             ;
* VAR CPU_SERV IO_SERV MSO_SERV SRV_SEC  ABS TSR TRANS    ;           ;
* OUTPUT OUT=SRV_UNIT  MEAN=SERV_CPU SERV_IO SERV_MSO SRV_SEC ABS     ;
*                      TSRATE TRANS  ;                                ;
*                                                                     ;
* PROC SORT DATA=SRV_UNIT ;                                           ;
*          BY CPU_ID HR ;                                             ;
* PROC PRINT DATA=SRV_UNIT;                                           ;
*               VAR CPU_ID HR  SERV_CPU SERV_IO                       ;
*                   SERV_MSO SRV_SEC ABS TSR TRANS  ;                 ;
* TITLE3    REPORT NUMBER (40)   ;                                    ;
* TITLE4   TOTAL  DELIVERED SERVICE UNITS BY HOUR  AND  CPU_ID ;      ;
*                                                                     ;
* PROC MEANS DATA=WORKLOAD MEAN NOPRINT ;                             ;
*          BY CPU_ID HR PERFGRP ;                                     ;
*               VAR TRAN_WS RES_TIME DMN_WS TRAN_SWA IO_TRAN ;        ;
*     OUTPUT OUT=WARK_SET MEAN=WS_TRAN TIME_RES                       ;
*                WS_DMN SWA_TRAN TRAN_IO ;                            ;
*                                                                     ;
* PROC SORT DATA=WARK_SET ;  *BY CPU_ID HR PERFGRP ;                  ;
* PROC PRINT DATA=WARK_SET ;                                          ;
*          VAR CPU_ID HR PERFGRP  WS_TRAN                             ;
*              TIME_RES WS_DMN SWA_TRAN TRAN_IO  ;                    ;
* TITLE3    REPORT NUMBER (41)   ;                                    ;
* TITLE4 WORKLOAD WORKING SET SIZES BY CPU AND PERFORMANCE GROUP ;    ;
*                                                                     ;
* PROC MEANS DATA=WORKLOAD MEAN NOPRINT ;                             ;
*          BY CPU_ID HR PERFGRP NRPERIOD ;                            ;
*               VAR TRAN_WS RES_TIME DMN_WS TRAN_SWA IO_TRAN ;        ;
*     OUTPUT OUT=WORK_SET MEAN=WS_TRAN TIME_RES                       ;
*                WS_DMN SWA_TRAN TRAN_IO ;                            ;
*                                                                     ;
**PROC SORT DATA=WORK_SET ;  *BY CPU_ID HR PERFGRP NRPERIOD;          ;
* PROC PRINT DATA=WORK_SET ;                                          ;
*          VAR CPU_ID HR PERFGRP NRPERIOD WS_TRAN                     ;
*              TIME_RES WS_DMN SWA_TRAN TRAN_IO  ;                    ;
* TITLE3    REPORT NUMBER (42)   ;                                    ;
* TITLE4 WORKLOAD WORKING SET SIZES BY CPU,PERF. GRP & PERF PERIOD;   ;
*                                                                     ;
* PROC SORT DATA=WKLD ;   *BY CPU_ID HR PERFGRP NRPERIOD;             ;
* PROC PRINT DATA=WKLD ;                                              ;
* VAR CPU_ID HR PERFGRP NRPERIOD CPU_SERV IO_SERV                     ;
*      MSO_SERV IO_SEC MSO_SEC CPU_SEC SRV_SEC ABS TSR TRANS ;        ;
* TITLE3   REPORT NUMBER (43);                                        ;
* TITLE4 WORKLOAD/SERVICE UNIT TABLE BY CPU,PERF. GRP & PERF PERIOD;  ;
*                                                                  ;
*   E N D   O F   D A I L Y   R E P O R T    S E C T I O N         ;
*                                                                  ;
*                                                                  ;
*                             *                                    ;
*                             *                                    ;
*                             *                                    ;
*                        ***********                               ;
*                         *********                                ;
*                          *******                                 ;
*                           *****                                  ;
*                            ***                                   ;
*                             *                                    ;
*                                                                  ;
*                                                                  ;
*        D A I L Y   U P D A T E   B E G I N S   H E R E           ;
*                                                                  ;
  DATA CPUSHIFT; KEEP DATE SHIFT CPU_ID CPU_BUSY
  BTH_ASID STC_ASID TSO_ASID TOT_ASID ;  SET CPU;
  PROC SORT DATA=CPUSHIFT ;  BY DATE SHIFT CPU_ID;
  PROC MEANS DATA=CPUSHIFT MEAN NOPRINT;
  BY DATE SHIFT CPU_ID;
  VAR CPU_BUSY BTH_ASID STC_ASID TSO_ASID TOT_ASID;
  OUTPUT OUT=SHIFTCPU MEAN=S_BUSY S_BATCH S_STC S_TSO S_TOT;
  PROC PRINT DATA=SHIFTCPU;  BY DATE;
  VAR S_BUSY S_BATCH S_STC S_TSO S_TOT SHIFT CPU_ID;
  TITLE3   REPORT NUMBER (99);
  TITLE4 CPU UTILIZATION BY SHIFT AND CPU ID ;
  RUN;
  DATA CMSDATA.S_OLDCPU; KEEP DATE SHIFT CPU_ID S_BUSY S_BATCH S_STC
  S_TSO S_TOT ; SET CMSDATA.S_CPU;
  RUN;
  * BACKUP OF SHIFT CPU DATABASE DONE BY ABOVE DATA STATEMENT ;
  DATA CMSDATA.S_CPU ; KEEP DATE SHIFT CPU_ID S_BUSY S_BATCH S_STC
  S_TSO S_TOT ;
  SET SHIFTCPU CMSDATA.S_OLDCPU;
* * ;
  RUN ;
PROC CONTENTS  DATA = CMSDATA._ALL_ SHORT ;
