COMMENT SAS76 CODE. THIS PROGRAM READS SMF DATA AND SELECTS SOME
DATA FOR SEVERAL RECORDS;
DATA TYPE4 (KEEP=ID TERMTIME TERMDATE RITIME RIDATE STEPNR
            JOB INITTIME INITDATE COMPL PROGRAM STEP COREREQ COREUSED
             ALLOCTM LOADTM EXCPS NRSEG CPUSEC ELAPSMIN PAGEIN PAGEOUT)
     UCB   (KEEP=ID                   RITIME RIDATE STEPNR
            JOB                   COMPL PROGRAM STEP COREREQ COREUSED
             DEVCLAS UCBTYP UNITADDR EXCP)
     TYPE5 (KEEP=ID TERMTIME TERMDATE JOB RITIME RIDATE
            NRSTEPS INITTIME INITDATE TERMIND JBCPUSEC ACCT)
     TYPE1415 (KEEP=ID CLOSED DATE JOB RITIME RIDATE NRUCB DDNAME
             DCBBLKCT EXCPS)
     TYPE129 (KEEP=ID GEN_TIME GEN_DATE JOB JOB_TIME JOB_DATE
            ACCTKILL INITNAME PRTY CLASS ASPJBNR RIDATE RITIME)
     TYPE34 (KEEP=LOGOFF USERID LOGON OCCUPMIN TPUTS TGETS COMPCODE
                  REGSIZE REGUSED ALLOCHR LOADHR CPUMIN ELAPSMIN)
;
INFILE SMF LENGTH=LENGTH;
    INPUT @2 ID PIB1.  @;
COMMENT FOLLOWING TEST REDUCES THE RECORDS KEPT TO THOSE DESIRED;
     IF ID=4 THEN GO TO R4; IF ID=5 THEN GO TO R5;
   IF ID=129 THEN GO TO R129;IF ID=14 OR ID=15 THEN GO TO R1415;
   IF ID=34 THEN GO TO R34;
    RETURN;
R4: INPUT @1 VSIND PIB1. @3 TERMTIME PIB4. TERMDATE PD4.
          @15 JOB $8. RITIME PIB4.
          RIDATE PD4. @39 STEPNR PIB1. INITTIME PIB4. INITDATE PD4.
          @52 COMPL PIB2. @ 55 PROGRAM $8. STEP $8. COREREQ PIB2.
          @75 COREUSED PIB2. @87 ALLOCTM PIB4. LOADTM PIB4. @;
FORMAT COMPL UNITADDR HEX4. DEVCLAS UCBTYP HEX2. ;
                       TERMTIME=TERMTIME/360000; RITIME=RITIME/360000;
          INITTIME=INITTIME/360000; ALLOCTM=ALLOCTM/360000;
         ELAPSMIN=1440*((TERMDATE+TERMTIME/24)-(INITDATE+INITTIME/24));
          LOADTM=LOADTM/360000;
      NREG=1;EXCPS=0;
    INPUT @103 LEN PIB2. @;NRSEG=(LEN-2)/8; STRT=105;
GETNEXT: IF NREG> NRSEG THEN GO TO GETCPU;
  INPUT @STRT DEVCLAS PIB1. UCBTYP PIB1. UNITADDR PIB2. EXCP PIB4. @;
         OUTPUT UCB;          EXCPS=EXCP+EXCPS; NREG=NREG+1;
                STRT=STRT+8; GO TO GETNEXT;
GETCPU: STRT=STRT+1;
    INPUT @STRT CPU PIB3. @;
          CPUSEC=CPU/100;
  IF VSIND=0 THEN GO TO OS;
    INPUT @101 STRT PIB2. @; INPUT @STRT PAGEIN PIB4. PAGEOUT PIB4. @;
 OS: OUTPUT TYPE4; GO TO OTHEROUT;
R5:INPUT @3 TERMTIME PIB4. TERMDATE PD4.
          @15 JOB $8. RITIME PIB4. RIDATE PD4.
          @39 NRSTEPS PIB1. INITTIME PIB4. INITDATE PD4.
          @63 TERMIND PIB1.  @114 JOBCPU PIB3.
          @117 NRACCT PIB1. @119 ACCT : $44. @;
FORMAT TERMIND HEX2.;
       IF NRACCT=0 THEN ACCT=' ';
    JBCPUSEC=JOBCPU/100;RITIME=RITIME/360000;INITTIME=INITTIME/360000;
       OUTPUT TYPE5; GO TO OTHEROUT;
R129:
     INPUT @3 GEN_TIME PIB4. GEN_DATE PD4.
           @15 JOB $8. JOB_TIME PIB4. JOB_DATE PD4.
           @45 ACCTKILL PIB2. INITNAME $8. PRTY PIB2.
           @58 CLASS $1.   @123 ASPJBNR PIB2. @;
FORMAT ACCTKILL $HEX4.;
    JOB_TIME=JOB_TIME/360000; GEN_TIME=GEN_TIME/360000;
RIDATE=JOB_DATE;RITIME=JOB_TIME; OUTPUT TYPE129;
    GO TO OTHEROUT;
R1415: INPUT @3 CLOSED PIB4. DATE PD4. @15 JOB $8. RITIME PIB4.
       RIDATE PD4. @42 NRUCB PIB1. @53 DDNAME $8. @253 DCBBLKCT PIB4.
       @281 EXCPS PIB4. @;
     CLOSED=CLOSED/360000;RITIME=RITIME/360000; OUTPUT TYPE1415;
     GO TO OTHEROUT;
R34:
INPUT @3 OFFTIM PIB4. OFFDAT PD4. @15 USERID $8. ONTIM PIB4.
 ONDAT PD4. @40 OCCUPANC PIB4. TPUTS PIB4. TGETS PIB4. COMPCODE PIB2.
 @71 REGSIZE PIB2. @75 REGUSED PIB2. @87 ALLOCTM PIB4. LOADTM PIB4.
 @103 LEN34 PIB2. @LEN34+104 CPU PIB3.;
LOGOFF=OFFDAT+OFFTIM/8640000;LOGON=ONDAT+ONTIM/8640000;
ELAPSMIN=1440*(LOGOFF-LOGON); OCCUPMIN=OCCUPANC/6000;
CPUMIN=CPU/6000;ALLOCHR=ALLOCTM/360000;LOADHR=LOADTM/360000;
OUTPUT TYPE34; GO TO OTHEROUT;
OTHEROUT: LIST; COMMENT FILE OUT; COMMENT PUT _INFILE_; RETURN;
PROC PRINT DATA=TYPE4;
TITLE DATA ON ALL STEP RECORDS FOUND;
PROC PRINT DATA=TYPE5;
TITLE DATA ON ALL JOB RECORDS FOUND;
PROC PRINT DATA=UCB  ;
TITLE DATA ON EACH UCB ENTRY IN EACH TYPE 4;
PROC PRINT DATA=TYPE1415;
TITLE DATA FOR EACH TYPE 14 OR TYPE 15 RECORD FOUND;
PROC PRINT DATA=TYPE129;
TITLE DATA FOR EACH TYPE 129 RECORD FOUND;
PROC PRINT DATA=TYPE34;
TITLE DATA FOR EACH TYPE34 RECORD FOUND;
