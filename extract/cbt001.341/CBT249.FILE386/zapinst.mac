/*PRIORITY     15
//TSSUPT   JOB (T,9550,TS62100011210000),'ZAP-AMASPZAP',CLASS=L,
//             MSGCLASS=Y,PERFORM=21
//ASM      EXEC  PGM=IEUASM
//SYSPRINT DD  DSN=TS.ZAPPRT,DISP=(,PASS),UNIT=SYSDA,
//             DCB=(BLKSIZE=3120,LRECL=80,RECFM=FB),
//             SPACE=(CYL,(1,1))
//*SYSPRINT  DD  SYSOUT=*
//SYSUT1   DD  UNIT=SYSDA,SPACE=(TRK,(50,10)),DISP=(,DELETE)
//SYSLIB DD   DSN=SYS1.MACLIB,DISP=SHR
//       DD   DSN=SYS1.AMODGEN,DISP=SHR
//SYSUT2   DD  UNIT=SYSDA,SPACE=(TRK,(50,10)),DISP=(,DELETE)
//SYSUT3   DD  UNIT=SYSDA,SPACE=(TRK,(50,10)),DISP=(,DELETE)
//SYSPUNCH DD  UNIT=SYSDA,DISP=(,PASS),SPACE=(TRK,(50,10),RLSE)
SUPERZAP CSECT
         TITLE 'CREATE SUPER ZAP CODE TO MODIFY MODULE - AMASPZAP'
*
SUPERZAP CSECT
*                                    ** REFIT IF NEEDED **
BRANCH   EQU   SUPERZAP+X'16'          BRANCH MODIFICATION
*                                    ** REFIT IF NEEDED **
PATCH    EQU   SUPERZAP+X'BFA'         POINTER TO PATCH AREA
*                                      LESS BASE DIFFERENCE OF 6 BYTES
LNKRG1   EQU   8                       LINK BACK REGISTER
         EJECT
********
********                BEGINNING OF SMP CONTROL CARDS
********
*ZAP CARD ++USERMOD(SS80009)
*ZAP CARD   /*
*ZAP CARD         THIS USER MODIFICATION IS TO MODIFY "AMASPZAP"
*ZAP CARD    MODULE TO CALL MODULE "DSDSPZAP" WHICH WRITES AN
*ZAP CARD    SMF RECORD FOR ALL CONTROL CARDS USED BY MODULE
*ZAP CARD    "AMASPZAP". THIS MODIFICATION WILL ALLOW FOR A
*ZAP CARD    HISTORICAL AUDIT TRAIL OF THE USE OF ZAP, AND ALSO
*ZAP CARD    THE DAILY CHECKING OF THE USE OF ZAP.
*ZAP CARD    */ .
*ZAP CARD ++VER(Z038) FMID(JBB1126)
*ZAP CARD             PRE(UZ33464) .
*ZAP CARD ++JCLIN .
*ZAP CARD //ZAPMOD   JOB 1,'CURTISS STANLEY',MSGLEVEL=1,CLASS=A
*ZAP CARD //STEP1    EXEC PGM=ASMBLR
*ZAP CARD //SYSPUNCH DSN=TS.USEROBJ(DSDZAPRP),DISP=SHR
*ZAP CARD //SYSIN    DD  *
*ZAP CARD          COPY DSDZAPRP
*ZAP CARD /*
*ZAP CARD //STEP2    EXEC PGM=IEWL,PARM='XREF,LIST'
*ZAP CARD //SYSLMOD  DD  DSN=SYS1.USERLIB,DISP=SHR
*ZAP CARD //SYSPUNCH DD  DSN=TS.USEROBJ,DISP=SHR
*ZAP CARD //SYSIN    DD  *
*ZAP CARD  INCLUDE SYSPUNCH(DSDZAPRP)
*ZAP CARD  NAME DSDZAPRP(R)
*ZAP CARD //STEP3    EXEC PGM=ASMBLR
*ZAP CARD //SYSPUNCH DSN=TS.USEROBJ(DSDSPZAP),DISP=SHR
*ZAP CARD //SYSIN    DD  *
*ZAP CARD          COPY DSDSPZAP
*ZAP CARD /*
*ZAP CARD //STEP4    EXEC PGM=IEWL,PARM='XREF,LIST,AC=1'
*ZAP CARD //SYSLMOD  DD  DSN=SYS1.LINKLIB,DISP=SHR
*ZAP CARD //AOS12    DD  DSN=SYS1.AOS12,DISP=SHR
*ZAP CARD //SYSPUNCH DD  DSN=TS.USEROBJ,DISP=SHR
*ZAP CARD //SYSIN    DD  *
*ZAP CARD  INCLUDE SYSPUNCH(DSDSPZAP)
*ZAP CARD  INCLUDE AOS12(AMASPZAP)
*ZAP CARD  INCLUDE SYSLMOD(AMASPZAP)
*ZAP CARD  ALIAS IMASPZAP
*ZAP CARD  ORDER AMASPZAP,AMASZDMP,AMASZCON,AMASZIOR,DSDSPZAP
*ZAP CARD  ENTRY AMASPZAP
*ZAP CARD  NAME AMASPZAP(R)
*ZAP CARD ++ZAP(AMASPZAP) .
*ZAP CARD  EXPAND AMASZIOR(106)
*ZAP CARD  NAME AMASPZAP AMASZIOR
         PRINT DATA
         USING SUPERD,11            BASE FOR CDBUF, JFCB AND THE DCB
         USING SUPERZAP+6,12        BASE FOR CODE IN CSECT AMASZIOR
*                                   THE +6 ON THE MODULE IS TO ALLOW
*                                   FOR THE BASE DIFFERENCE CAUSE BY
*                                   BASE INITIALIZATION IN THE
*                                   AMASZIOR MODULE
         ORG   BRANCH                  POINT FOR ++VER STATEMENTS
*ZAP START VER
         B     X'64'(,12)    AT X'3016'    ** REFIT IF NEEDED **
         ORG   PATCH
         DC    20X'00'   EXPAND AT X'BFA'  ** REFIT IF NEEDED **
*ZAP START REP
         ORG   BRANCH                  POINT FOR ++REP STATEMENTS
         B     PATCH                   GO TO PATCH AREA
         ORG   PATCH                   POINT TO PATCH AREA
         GET   INPUT,CDBUF        GET AN INPUT CARD (REPLACED CODE)
MVCNOP   NOP   BYPASS
         MVI   MVCNOP+1,X'F0'
         CLI   JFCB,X'04'
         BNE   DSNZAP
         MVC   VOLSER,VTOCVOL
         B     *+10
DSNZAP   MVC   VOLSER,ZAPVOL
         LA    1,VOLSER
         ST    1,VOLPASS
         LA    14,JFCB    AT X'1A2C'
         LA    15,CDBUF   AT X'1CAD'
         STM   14,15,PASSLIST    SAVE FIELD POINTERS
BYPASS   LA    1,PASSLIST              SET LIST ADDRESS IN REG 1
*        CALL  DSDSPZAP          CALL SMF MODULE
*
*  NOTE --- SINCE THERE IS NO EXTRN FOR DSDSPZAP THE ADDRESS
*           IS LOADED VIA A "LA" INSTRUCTION. IF THE CSECT DSDSPZAP
*           CHANGES FROM ORIGIN "3658" THIS MUST BE REFITTED.
*
*                                    ** REFIT IF NEEDED **
         LA    15,X'C62'(12)     LOAD DSDSPZAP ADDRESS
         BALR  14,15             GO TO DSDSPZAP MODULE
         BCR   15,LNKRG1               GO TO WHERE RDCARD2 WOULD HAVE
PASSLIST DS    0F
JFCBPASS DC    F'0'
CARDPASS DC    F'0'
VOLPASS  DC    F'0'
VOLSER   DC    CL6' '
         LTORG
*                                  ** REFIT IF NEEDED ANY OR
*                             ALL OF THE FOLLOWING DISPLACEMENTS **
SUPERD   DSECT
         ORG   SUPERD+X'1FC'           POINT TO JFCB AREA
JFCB     EQU   *
         ORG   SUPERD+X'228'           POINT TO DSN ZAP VOLSER
ZAPVOL   EQU   *
         ORG   SUPERD+X'272'
VTOCVOL  EQU   *
         ORG   SUPERD+X'47D'           POINT TO CARD AREA
CDBUF    EQU   *
         ORG   SUPERD+X'D08'           POINT TO INPUT DCB
INPUT    EQU   *
*ZAP CARD  IDRDATA SS80009
*ZAP CARD ++MAC(SMFZPD) DISTLIB(SRC) DISTSRC(SRC)
*ZAP CARD   SYSLIB(COPYLIB) TXLIB(TEMPLIB) .
*ZAP CARD ++SRC(DSDSPZAP) DISTLIB(SRC)
*ZAP CARD   TXLIB(TEMPLIB) .
*ZAP CARD ++SRC(DSDZAPRP) DISTLIB(SRC)
*ZAP CARD   TXLIB(TEMPLIB) .
*ZAP STOP
         END
//ASM      EXEC  PGM=ASMTOZAP
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DSN=TS.ZAPPRT,DISP=(SHR,DELETE)
//STEPLIB  DD  DSN=FSS1.LINKLIB,DISP=SHR
//SYSPUNCH DD  DSN=TS.SMPINPUT,DISP=(,PASS),UNIT=SYSDA,
//             DCB=(BLKSIZE=800,LRECL=80,RECFM=FB),
//             SPACE=(CYL,(1,1))
//STEP2   EXEC SMP
//SYSIN    DD  *
 REJECT  S(SS80009) .
 RECEIVE S(SS80009) RC(REJECT=0) .
 APPLY   S(SS80009) RC(REJECT=0,RECEIVE=0) .
//SMPPTFIN DD DSN=TS.SMPINPUT,DISP=(SHR,DELETE)
