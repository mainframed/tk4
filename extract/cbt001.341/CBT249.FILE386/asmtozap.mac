ASMTOZAP CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
         STM   R14,R12,12(R13)
         LR    R3,R15
         USING ASMTOZAP,R3
         ST    13,SAVEAREA+4            ADDRESS CHAIN BACKWARD
         LR    14,13                    SAVE OLD SAVE AREA POINTER
         LA    13,SAVEAREA              LOAD NEW SAVE AREA POINTER
         ST    13,8(0,14)               ADDRESS CHAIN FORWARD
         B     SKPSAVE                  SKIP OVER STAMPS AND SAVE AREA
         DC    CL1' '
         DC    CL8'&SYSDATE'
         DC    CL1' '
         DC    CL5'&SYSTIME'
         DC    CL1' '
SAVEAREA DC    18F'0'
*
SKPSAVE  DS    0D
*
         OPEN (SYSPRINT,(OUTPUT),SYSPUNCH,(OUTPUT),SYSIN)
READ     EQU  *
         GET  SYSIN                 GET AN ASSEMBLY PRINT LINE
         LR   R4,R1                 SAVE RECORD ADDRESS
         PUT  SYSPRINT,(R4)         WRITE PRINT LINE BACK OUT
         CLI   STOP,X'FF'           Q. IS STOP SWITCH SET
         BE    READ                 A. YES - GO READ/WRITE REST
         CLC  =C'*ZAP START VER ',41(R4)  Q. IS THIS A ZAP VER START
         BE   ZAPVER                      A. YES GO PRODUCE VER CARD
         CLC  =C'*ZAP START REP ',41(R4)  Q. IS THIS A ZAP REP START
         BE   ZAPREP                      A. YES GO PRODUCE REP CARD
         CLC  =C'*ZAP STOP ',41(R4)       Q. IS IT A ZAP STOP
         BE   ZAPSTOP                     A. YES SET SWITCH
         CLC  =C'*ZAP PAUSE ',41(R4)      Q. IS IT A ZAP PAUSE
         BE   ZAPPAUSE                    A. YES TURN OFF ZAP SWITCH
         CLC  =C'*ZAP CARD ',41(R4)       Q. IS IT A ZAP CARD
         BE   ZAPCARD                     A. YES PRODUCE IT TO SYSPUNCH
         CLI   ZAPS,X'FF'                 Q. IS ZAP SWITCH SET
         BNE   READ                       A. NO DONT PUNCH CARD
         CLI   8(R4),C' '                 PRODUCE
         BE    READ
         CLI   0(R4),C'1'                        THE
         BE    READ
         CLC   =C'OBJECT',8(R4)                      PUNCH
         BE    READ
         MVC   PUNCH,PUNCH-1                               RECORDS
         CLI   REP,X'FF'
         BNE   DOVER                       FOR
         MVC   PUNCH(4),=C' REP'
         B     SKPVER                          REP
DOVER    EQU   *
         MVC   PUNCH(4),=C' VER'                  AND
SKPVER   EQU   *
         MVC   PUNCH+5(21),3(R4)                      VER
         CLI   12(R4),C' '
         BNE   ENDCOMMA                                  ZAP
         MVI   PUNCH+25,C' '
         CLC   =C'  ',12(R4)                                 CONTROL
         BE    ENDCOMMA
         MVI   PUNCH+14,C','               CARDS
         CLC   =C'  ',17(R4)
         BE    ENDCOMMA                          WITH
         MVI   PUNCH+19,C','
ENDCOMMA EQU   *                                      COMMAS
         MVC   PUNCH+30(41),41(R4)
         PUT   SYSPUNCH,PUNCH                               EVERY
         B     READ
ZAPCARD  EQU   *                           FOUR
         MVC   PUNCH,PUNCH-1
         MVC   PUNCH(60),51(R4)                BYTES
         MVC   PUNCH+71(1),112(R4)
         PUT   SYSPUNCH,PUNCH                       OF
         B     READ                                     DATA.
ZAPVER   EQU   *
         MVI   ZAPS,X'FF'              SET ZAP SWITCH ON.
         MVI   REP,X'00'               TURN OFF REP SWITCH
         B     READ
ZAPREP   EQU   *
         MVI   ZAPS,X'FF'              TURN ZAP SWITCH ON
         MVI   REP,X'FF'               TURN REP SWITCH ON
         B     READ
ZAPPAUSE EQU   *
         MVI   ZAPS,X'00'              TURN ZAP SWITCH OFF
         MVI   REP,X'00'               TURN REP SWITCH OFF
         B     READ
ZAPSTOP  EQU   *
         MVI   STOP,X'FF'              SET END OF ZAP SWITCH ON
         B     READ
EOJ      EQU   *
         CLOSE (SYSIN,,SYSPUNCH,,SYSPRINT)
         L     R13,4(R13)
         RETURN (14,12),RC=0
STOP     DC    X'00'
REP      DC    X'00'
ZAPS     DC    X'00'
         DC    C' '
PUNCH    DC    CL160' '
SYSIN    DCB   DDNAME=SYSIN,MACRF=GL,EODAD=EOJ,DSORG=PS,LRECL=121
SYSPUNCH DCB   DDNAME=SYSPUNCH,MACRF=PM,DSORG=PS,LRECL=80
SYSPRINT DCB   DDNAME=SYSPRINT,MACRF=PM,DSORG=PS,LRECL=121,RECFM=FA
         END
