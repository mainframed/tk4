         TITLE 'PGM TO COMPRESS/COPY A DISK VOLUME-MVS (MAIN)'
         MACRO
&LABEL   CRASH
&LABEL   BAL   14,CRASH        GO TO CRASH ROUTINE
         MEND
         SPACE
         MACRO
&LABEL   WRTVTOC &LOC,&ADR,&IND
&LABEL   MVI   OUTER,0        CLEAR ERROR BYTE
         WRITE VTCOUTDB,DI,,&LOC+44,,&LOC,MF=E
         CHECK VTCOUTDB       WAIT TILL FINISHED
         AIF   (T'&IND NE 'O').OUT
         CLI   OUTER,0        SEE IF GOOD WRITE
         BE    *+8             GOODIE
         BAL   14,CRASH        GO CRASH
.OUT     ANOP
         AIF   (T'&ADR EQ 'O').OUT2
         L     14,VTCOUTDB+16  GET IOB ADDRESS
         IHBINNRA &ADR         GET PARM IN REG 1
         MVC   0(5,1),CCHHR(14) MOVE CCHHR OF ADDRESS
.OUT2    ANOP
         L     14,BLOCKAD      GET BLOCK #
         LA    14,1(14)        INCR
         ST    14,BLOCKAD      SAVE
         MEND
         SPACE
         MACRO
&LABEL   TTRABS &DCB,&ABSAD    CONVERT FROM TTR TO ABSOLUTE ADDRESS
&LABEL   L     1,&DCB+44       GET DEB ADDRESS
         LA    2,&ABSAD        GET ADDRESS OF ABSOULTE ADDRESS
         L     14,16           GET CVT ADDRESS
         L     15,X'1C'(14)    GET CONVERT ROUTINE ADDRESS
         LA    3,RGSAV         POINT TO SAVE AREA
         STM   9,13,0(3)       SAVE THEM
         BALR  14,15           GO TO IT
         LM    9,13,0(3)       RESTORE REGS.
         MEND
         SPACE 2
         MACRO
&LABEL   ABSTTR &DCB,&ABSAD    CONVERT FROM ABSOLUTE ADDRESS TO TTR
&LABEL   L     1,&DCB+44       GET DEB ADDRESS
         LA    2,&ABSAD        GET ADDRESS OF ABSOLUTE ADDRESS
         L     14,16           GET CVT ADDRESS
         L     15,X'20'(14)    GET CONVERT ROUTINE ADDRESS
         LA    3,RGSAV         GET ADDRESS OF SAVEA AREA
         STM   9,13,0(3)       SAVE REGS
         BALR  14,15           GO TO ROUTINE
         LM    9,13,0(3)       RESTORE REGS.
         MEND
         SPACE
         MACRO
&LABEL   READVTOC &LOC
&LABEL   POINT DISKIN,FULL     POINT AT RECORD
         MVI   OUTER,0        CLEAR ERROR
         READ  VTOCINDB,SF,,&LOC,MF=E
         CHECK VTOCINDB        WAIT TO STOP
         CLI   OUTER,0        MAKE SURE NO ERROR
         BE    *+8            IF NOT, GOODIE
         BAL   14,CRASH       OTHERWISE, GO CRASH
         MEND
         EJECT
COPYDISK CSECT
*                                                             WMT 12/75
*        EQUATE REGISTERS.                                    WMT 12/75
*                                                             WMT 12/75
R0       EQU   0                                              WMT 12/75
R1       EQU   1                                              WMT 12/75
R2       EQU   2                                              WMT 12/75
R3       EQU   3                                              WMT 12/75
R4       EQU   4                                              WMT 12/75
R5       EQU   5                                              WMT 12/75
R6       EQU   6                                              WMT 12/75
R7       EQU   7                                              WMT 12/75
R8       EQU   8                                              WMT 12/75
R9       EQU   9                                              WMT 12/75
RA       EQU   10                                             WMT 12/75
RB       EQU   11                                             WMT 12/75
RC       EQU   12                                             WMT 12/75
RD       EQU   13                                             WMT 12/75
RE       EQU   14                                             WMT 12/75
RF       EQU   15                                             WMT 12/75
         USING *,15
         B     START           GO AROUND MESSAGE
         DROP  15
*
*        ORIGINALLY WRITTEN BY KARL BARHARDT (LOC-CB)
*        THIS VERSION REVISED FOR MVS REL 3 BY
*        B. A. RADD
*        SECURITY PACIFIC NATIONAL BANK (2-98)
*        611 NORTH BRAND BLVD
*        GLENDALE, CALIFORNIA 91203
*        (213) 956-3027
*
START    EQU   *
         SAVE  (14,12)
*                                                             WMT 12/75
*        SET UP ADDRESSABILITY                                WMT 12/75
*                                                             WMT 12/75
         USING COPYDISK,RF                                    WMT 12/75
         LR    R2,RD              SAVE R13                    WMT 12/75
         LA    RD,SAVE            SET UP SAVE AREA           WMT 04/76
         BALR  RC,0               GET BASE ADDR.             WMT 04/76
         USING *,RC               SET UP ADDRESSING.         WMT 04/76
         DROP RF                  DROP 15                     WMT 12/75
         USING SAVE,RD                                        WMT 12/75
         ST    R2,4(0,RD)         SET BACK CHAIN.             WMT 12/75
         ST    RD,8(0,R2)         SET FORWARD CHAIN.          WMT 12/75
         MVI   FMT2,0                  USE FMT2 AS PARM FLAG
         L     2,0(1)                  GET PARM ADDRESS
         CLC   0(2,2),=H'4'            SEE IF 4 BYTES LONG
         BNE   NOPARM                  IF NOT, THEN FORGET IT
         CLC   2(4,2),=C'DSYS'         DSYS MEANS DON'T COPY TEMP DSS
         BNE   NOPARM                  IF NOT, THEN FORGET IT
         MVI   FMT2,255                TURN ON FLAG
NOPARM   EQU   *
         CLC   0(2,2),=H'5'       SEE IF 5 BYTES LONG.        WMT 12/75
         BNE   NOPARM1            IF NOT FORGET IT.           WMT 12/75
         CLC   2(5,2),=C'MERGE'   SEE IF MERGE.               WMT 12/75
         BNE   NOPARM1            IF NOT FORGET IT.           WMT 12/75
         MVI   MRGSW,C'M'         SET MERGE SWITCH.           WMT 12/75
NOPARM1  DS    0H                                             WMT 12/75
         OPEN  (SYSPRINT,OUTPUT)
         RDJFCB DISKIN
         MVI   INJFCB,4        SET VTOC AS DSNAME
         MVC   INJFCB+1(43),INJFCB
         OPEN  DISKIN,TYPE=J   OPEN VTOC
         RDJFCB DISKOUT        SET UP OUTPUT VTOC
         MVI   OUTJFCB,4       SET UP VTOC AS DSNAME
         MVC   OUTJFCB+1(43),OUTJFCB
         OI    OUTJFCB+52,X'08'        DON'T WRITE BACK JFCB
         OPEN  (DISKOUT,UPDAT),TYPE=J  OPEN OUTPUT VTOC
         L     4,DISKOUT+44    GET DEB ADDRESSES
         L     5,DISKIN+44
         L     4,32(4)         GET UCB ADDRESSES
         L     5,32(5)
         MVC   OLDVOL,28(5)            MOVE VOL SER #  *SDS*
         MVC   TAGVOL,28(4)            MOVE VOL SER #  *SDS*
         MVC   WTOR+48(6),28(5)         MOVE VOL SER #  *SDS*
         CLC   18(2,4),18(5)   SEE IF UCBS THE SAME   *SDS*
         BE    UCBSMTCH        IF SO, GOODIE
         CLI   19(R4),X'0D'       IS IT A MOD 11 DRIVE.       WMT 12/75
         BE    UCBSMTCH           YES ALLOW IT TO GO.         WMT 12/75
DUMP     EQU   *
         ABEND 1,DUMP          OTHERWISE BLAST OUT
UCBSMTCH EQU   *
         CLI   18(4),X'20'     MAKE SURE DIRECT ACCESS
         BNE   DUMP            IF NOT, THEN FORGET IT
 SPACE
ASKOP    EQU   *
         MVI   INECB,0         CLEAR ECB
         WTOR  MF=(E,WTOR)     SAK HIM
         WAIT  ECB=INECB       WAIT FOR ANSWER
         OC    REPL,=CL6' '    UP CASE REPLY    *SDS*
         CLC   REPL,TAGVOL     DID HE GIVE SAME VOL *SDS*
         BE    OPSDYES         GOODIE
         CLI   FULL,C'N'       DID HE SAY NO
         BNE   ASKOP           IF NOT, THEN ASK HIM AGAIN
 SPACE
         LA    1,BDOPMES       GET ADDRESS OF MESSAGE
         L     RF,=V(WRTLINE)     CALL PRINT ROUTINE.        WMT 04/76
         BALR RB,RF               CALL WRTLINE.               WMT 04/76
         RETURN (14,12),RC=8   RETURN WITH BAD RETURN CODE
         LTORG
 SPACE
OPSDYES  DS    0H                                             WMT 12/75
         ST    5,FULL                   UCB POINTER *SDS*
         RESERVE (VTOC,OLDVOL,E,6,SYSTEMS),UCB=FULL *SDS*
         ST    4,FULL                   UCB POINTER  *SDS*
         RESERVE (VTOC,TAGVOL,E,6,SYSTEMS),UCB=FULL *SDS*
 EJECT
         READ  VTOCINDB,SF,,VTOCIN,MF=E
         CHECK VTOCINDB
         SR    5,5             CLEAR 5
         IC    5,19(4)         GET LAST PART OD DEVICE TYPE
*        CLI   17(R4),X'01'       IS IT MOD 11.               GJG 10/76
*        BE    NOTMOD11           NO DON'T CHANGE.            GJG 10/76
*        IC    R5,=X'0D'          YES ALTER DEVICE TYPE.      GJG 10/76
* TMOD11 DS    0H                                             GJG 10/76
         SLL   5,1             MULT BY 2
         LH    5,DACYLS(5)     GET # OF CYLS
         STH   5,INCYLS
         STH   5,OUTCYLS
         MH    5,TRKPCYL       GET TOTAL # OF TRACKS
         STH   5,#TRKS         SAVE # OF TRACKS
         MVC   ABSAD,VTOCIN+45 GET TTR
         SR    0,0             OF LAST FMT 1
         MVC   VSAMSAVE,VTOCIN+76  SAVE VSAM FMT4 INFO  ** BAR **
         ABSTTR DISKIN,ABSHD
         ST    0,LSTFM1        SAVE FOR FUTURE
 EJECT
         MVC   INDKAD,VTOCIN+45        MOVE LAST DS ADDRESS
         LH    5,INDKAD        GET CYL #
         MH    5,TRKPCYL       GET TRACK #
         AH    5,INDKAD+2      NOW HAVE REL TRK #
         MVC   OTDKAD,VTOCIN+107       MOVE EXTENT START
         LH    6,OTDKAD        GET CYL # OF START
         MH    6,TRKPCYL       GET TRACK #
         AH    6,OTDKAD+2      NOW HAVE REL TRK # OF START
         LA    5,1(5)          UP 1 FOR SUBTRACT
         SR    5,6             5 HAS # OF TRACKS
         SR    6,6             CLEAR 6
         IC    6,VTOCIN+74     GET DSCBS PER TACK
         MR    4,6             GET # OF DSCBS IN 5
         SLL   5,2             MULT 5 BY 4
         GETMAIN R,LV=(5)      GET CORE FOR DSCB LIST
         LA    1,0(1)          CLEAR HIGH BYTE
         S     1,=F'4'         REDUCE BY 4
         ST    1,DSLSTAD       SAVE ADDRESS-4
 EJECT
         POINT DISKIN,THIRD    POINT TO THIRD RECORD
         L     10,THIRD        GET FIRST TTR IN 10
         L     2,DSLSTAD       POINT TO DSLST
VTOCRD2  EQU   *
         LA    2,4(2)          UP TO BEGINNING
VTOCRD   EQU   *
         C     10,LSTFM1       SEE IF ON LAST DATA SET
         BNL   LFM1            IF SO, THEN START WORK
         READ  VTOCINDB,SF,,FMT1,MF=E
         CHECK VTOCINDB        WAIT FOR COMPLETION
         NOTE  DISKIN          GET TTR OF ONE JUST REASD
         LR    10,1            SAVE CURRENT TTR POINTER
         ST    1,0(2)          SAVE FOR FUTURE
         CLI   FMT1+44,X'F1'   SEE IF TYPE 1
         BNE   VTOCRD          IF NOT, READ AGAIN
         CLI   FMT2,255                TEST FOR TEMP DSNAME?
         BNE   NOTMPTST                IF NOT, THEN COPY IT
         CALL  TMPTST,(FMT1)           CALL THE ROUTINE
         LTR   15,15                   SEE IF WE COPY IT
         BNZ   VTOCRD                  IF NON-ZERO RETURN, DON'T COPY
NOTMPTST EQU   *
         MVI   3(2),0          CLEAR ENDING BYTE
         TM    FMT1+82,X'80'   IS THIS IS DATA SET
         BZ    NTIS01          IF NOT, SKIP SETTING BIT
         OI    3(2),X'80'      TURN ON IS BIT
NTIS01   EQU   *
         TM    FMT1+83,X'08'      TEST FOR VSAM DSN.
         BZ    NTIS02             BR IF NOT VSAM.
SETVSAM  OI    VSAMSW,X'01'        INDICATE VSAM DS               *BAR*
         B     NTABS02             TREAT VSAM DS  UNMOVABLE       *BAR*
NTIS02   TM    FMT1+82,X'01'   IS IT UNMOVABLE
         BZ    NTABS01         IF NOT, DON'T FLIP BIT
NTABS02  OI    3(2),X'40'      TURN ON BIT TO SHOW UNMOVABLE
NTABS01  EQU   *
         CLC   CTLG,FMT1       IS IT THE SYSCTLG DATA SET
         BNE   NOTCT01         IF NOT, DON'T FLIP BIT
         OI    3(2),X'20'      TURN ON CTLG BIT
         MVI   DSCBFT1+3,X'03' SET FIRST FMT 1 DSCB AT RCD 4   DART4/78
*        RATHER THAN RCD 3.  RESERVE RCD 3 FOR SYSCTLG DSCB    DART4/78
NOTCT01  EQU   *
         TM    FMT1+94,X'C0'   SEE IF CYLINDER ALLOCATION
         BNO   NOTCYL01        IF NOT, DON'T FLIP BIT
         OI    3(2),X'10'      TURN ON CYLINDER BIT
         B     VTOCRD2         GO INCR AND READ
NOTCYL01 EQU   *
         OI    3(2),X'08'      TURN ON TRACK BIT
         B     VTOCRD2
         EJECT
LFM1     EQU   *
         MVC   0(4,2),ZEROES   MOVE ZEROES TO END OF LIST
         READ  VTCOUTDB,DI,,VTOCOUT+44,,VTOCOUT,MF=E
         CHECK VTCOUTDB        WAIT FOR COMPLETION
         EJECT
*        INITIALIZE FREE SPACE
*        MARK TRACK ZERO AS ALLOCATED
         MVI   FREESPAC,X'FF'
         MVC   STAD,VTOCOUT+107        GET VTOC START
         MVC   ENDAD,VTOCOUT+111       VTOC END
         LA    1,STAD          1 POINTS TO EXTENT
*        ABSALC IS CALLED AS IF IT WERE BAL IN THIS ROUTINE. WMT 04/76
         L     RF,=V(ABSALC)      STARTING ADDRESS.          WMT 04/76
         BALR RE,RF               CALL ABSALC.               WMT 04/76
         LTR   RF,RF              TEST RETURN CODE.          WMT 04/76
         BNZ   INC1                                          WMT 04/76
         LH    14,ENDAD        GET VTOC ENDING CYLINDER
         MH    14,TRKPCYL      GET TRACK NUMBER
         AH    14,ENDAD+2      ADD IN TRACK
         STH   14,OTVTCEND     SAVE LAST TRACK NUMBER IN OUTPUT VTOC
         SPACE 2
         OI    FMT4+58,X'84'   TURN ON BAD VTOC BITS
         XC    BLOCKAD,BLOCKAD CLEAR RECORD #
         WRTVTOC FMT4          REWRITE FMT4
         NI    FMT4+58,X'FF'-X'84'     WIPE OUT BAD BITS
DSCBFT1  LA    14,2            SET UP FIR FIRSFT DSCB BLOCK
         STH   14,REC#         SAVE IT
         CLI   MRGSW,X'D4'        IS IT A MERGE.              WMT 12/75
         BNE   BYPASS             NO GO AROUND.               WMT 12/75
         MVC   ABSAD,FMT4+45      GET ABSOLUTE ADDR LAST FMT1 WMT 12/75
         SR    R0,R0              CLEAR REG 0.                WMT 12/75
         ABSTTR DISKOUT,ABSHD     CHANGE TO TTR.              WMT 12/75
         ST    R0,BLOCKAD                                     WMT 12/75
         SR    R0,R0                                          WMT 12/75
         LH    R0,BLOCKAD                                     WMT 12/75
         MH    R0,=X'0027'                                    WMT 12/75
         MVC   BLOCKAD+3(1),BLOCKAD+2                         WMT 12/75
         MVC   BLOCKAD(3),ZEROES                              WMT 12/75
         AH    R0,BLOCKAD+2                                   WMT 12/75
         STH   R0,BLOCKAD+2                                   WMT 12/75
BYPASS   DS    0H                                             WMT 12/75
         EJECT
         OPEN  (OUTDISK,OUTPUT,INDISK),TYPE=J  OPEN DISK PACKS
         SPACE
*  THIS CODE IS USED TO CHANGE THE DEB TO ALLOW ACCESS            *BAR*
*  TO THE ENTIRE DISK PACK EXCLUDING TRACK ZERO AND               *BAR*
*  ALTERNATE TRACKS                                               *BAR*
         MODESET  KEY=ZERO,MODE=SUP  GET SUPERVISOR STATE         *BAR*
         L     1,INDISK+44         PICK UP DEB ADDRESS
         XC    38(4,1),38(1)       WIPE OUT EXTENT START
         MVI   41(1),1             START AT TRACK 1
         MVC   42(6,1),=3X'7FFF'   SET HIGH BOUND
         L     1,OUTDISK+44        PICK UP DEB ADDRESS
         XC    38(4,1),38(1)       WIPE OUT EXTENT START
         MVI   41(1),1             START AT TRACK 1
         MVC   42(6,1),=3X'7FFF'   SET HIGH BOUND
         MODESET MODE=PROB,KEY=NZERO   RETURN TO PROB STATE
         EJECT
         GETMAIN R,LV=400*8    GET SPACE FOR READ COUNTS AND DATA
         LA    1,0(1)          WIPE OUT HIGH BYTE
         ST    1,RDCNTAD       SAVE ADDRESS
         MVI   RDCNTAD,X'08'   REPLACE TIC CCW
         LA    2,1600(1)       POINT 2 AT COUNT AREA
         LA    3,199           SET UP 199 READ COUNT CCWS
         LA    4,8             DATA LENGTH OF 8
INITCCW  ST    2,0(1)          STORE DATA ADDRESS IN CCW
         ST    4,4(1)          STORE LENGTH
         MVI   0(1),X'12'      MOVE IN READ COUNT CCW
         MVI   4(1),X'40'      PUT IN COMMAND CHAINING
         LA    1,8(1)          INCREMENT TO NEXT CCW
         LA    2,8(2)          INCREMENT TO NEXT DATA AREA
         BCT   3,INITCCW       KEEP DOING IT
         ST    3,0(1)          PUT IN ADDRESS
         MVI   0(1),X'03'      PUT IN NO-OP CCW
         ST    4,4(1)          PUT IN ANY LENGTH
         MVI   4(1),X'20'      TURN ON SILI BIT
         GETMAIN R,LV=22600    GET CORE FOR DATA AND CCWS
         ST    1,DACCWADI      SAVE ADDRESS
         MVI   DACCWADI,X'08'  PUT BACK TIC
         LA    1,1600(1)       POINT TO DATA AREA
         ST    1,DATADI        SAVE IT
         GETMAIN R,LV=22600    GET CORE FOR OUTPUT DATA & CCWS
         ST    1,DACCWADO      SAVE CCW ADDRESS
         MVI   DACCWADO,X'08' PUT TIC OP CODE BACK
         LA    1,1600(1)       GET 1 UP TO DATA AREA
         ST    1,DATADO        SAVE ADDRESS OF DATA AREA
         EJECT
         L     4,DSLSTAD       POINT TO DSLST
INC1     LA    4,4(4)          UPDATE 4
         CLC   0(4,4),ZEROES   ARE WE THROUGH
         BE    GETCTLG         IF SO, GO FIND AND COPY SYSCTLG
         TM    3(4),X'C0'      IS IT UNMOVABLE
         BZ    INC1            IF NOT, THEN LOOK AGAIN
*        GETVTOCS IS CALLED AS IF IT WERE BAL IN THIS ROUTINEWMT 04/76
         L     RF,=V(GETVTOCS)    STARTING ADDRESS.          WMT 04/76
         BALR  RB,RF              CALL GETVTOCS.             WMT 04/76
         SR    0,0             CLEAR 0
         LA    1,INEXTS        GET EXTENT ADDRESS
         LA    2,16            16 MAX EXTENTS
ABSTST1  EQU   *
         CLC   0(8,1),ZEROES   ARE WE FINISHED
         BE    ABSOUT1         IF SO, DON'T DO IT AGAIN
*        ABSALC IS CALLED AS IF IT WERE BAL IN THIS ROUTINE. WMT 04/76
         L     RF,=V(ABSALC)      STARTING ADDRESS.
         BALR  RE,RF              CALL ABSALC.               WMT 04/76
         LTR   RF,RF              TEST RETURN CODE.          WMT 04/76
         BNZ   INC1                                          WMT 04/76
         AH    0,TRKALC        ACCUM TRACKS ALLOCATED
         LA    1,8(1)          INCR. 1
         BCT   2,ABSTST1       KEEP IT UP
         SPACE
ABSOUT1  MVC   OUTEXTS(16*8),INEXTS    MOVE ALL EXTENTS
         STH   0,TRKUSD        SAVE FOR PUTDS
*        PUTDS IS CALLED AS IF IT WERE BAL IN THIS ROUTINE.  WMT 04/76
         L     RF,=V(PUTDS)       START ADDRESS.             WMT 04/76
         BALR RB,RF               CALL PUTDS.                WMT 04/76
         MVI   3(4),0          CLEAR LIST
         B     INC1            GO LOOK FOR NEXT
         EJECT
GETCTLG  EQU   *
         SR    7,7
         LA    2,PFMT5         GET FMT 5 ADDRESS
         LH    15,#TRKS        GET # OF TRKS
         LA    14,1
         LA    3,FREESPAC(15)  POINT PAST LAST TRACK
         MVI   0(3),X'FF'      SET AS ALLOCATED
         BCTR  15,0            REDUCE TO LAST TRACK
         SR    3,3
LKFREE1  LA    5,FREESPAC(3)   GET ADDRESS OF NEXT TRACK
         CLI   0(5),X'FF'      SEE IF ALLOCATED
         BNE   FFREE           IF SO, GOODIE
LKUP1    BXLE  3,14,LKFREE1    KEEP LOOKING
         B     PFMT5OUT        GET OUT IF ALL TRACKS
FFREE    EQU   *
         STH   3,4(2)          SAVE EXTENT START
LKFREE2  LA    3,1(3)          UPDATE 3
         LA    5,FREESPAC(3)   GET ADDRESS OF NEXT TRACK
         CLI   0(5),X'FF'      IS THIS FREE
         BNE   LKFREE2         IF SO, KEEP GOING
         LR    6,3
         LH    9,4(2)          GET STARTING TRACK IN 9
         LH    10,TRKPCYL      GET TRACK PER CYL
         AR    9,10            ADD TO 9
         BCTR  9,0             REDUCE BY 1
         SR    8,8             CLEAR 8 FOR DIVIDE
         DR    8,10
         MR    8,10            NOW REG 9 HAS NEXT HIGHEST CYL ADDRESS
         SH    6,4(2)          GET TOTAL TRACKS
         SH    9,4(2)          GET # TRKS BEFORE CYL
         CR    9,6             SEE WHICH IS BIGGER
         BNH   FIGR1           IF MORE THAN 1 CYL BRANCH
         STH   6,6(2)          STORE THE #
         B     LKINC1
FIGR1    EQU   *
         STH   9,6(2)          SAVE TRKS BEFORE CYL
         LCR   9,9             SET 9 NEGATIVE
         AR    9,6             NOW HAVE TRACKS LEFT
         DR    8,10            GET CY  S AGAIN
         STH   8,10(2)         SAVE TRKS AFTER LAST CYL
         MR    8,10            GET BACK TO TRACKS ON CYL
         STH   9,8(2)          SAVE TRKS ON CYL BOUND
LKINC1   LA    2,12(2)         INCR. 2
         LA    7,1(7)          INCR. EXT #
         CH    7,=H'61'        ARE WE PAST TABLE END?          DART4/78
         BL    LKUP1           NO, KEEP GOING                  DART4/78
         LA    R1,WARNING      YES, PRINT WARNING              DART4,78
         ST    RB,RBSAVE       SAVE JUST IN CASE               DART4,78
         L     RF,=V(WRTLINE)  ADDRESS OF PRINT ROUTINE        DART4/78
         BALR  RB,RF           GO PRINT WARNING                DART4/78
         L     RB,RBSAVE       GO RELOAD REG 11                DART4/78
         MVI   CONTAMIN,X'84' SET CONTAMINATE BITS ON         DART4/78
PFMT5OUT EQU   *
         STH   7,#FREXTS       SAVE # OF FREE EXTENTS
         L     9,PFMT5AD       GET EXTENT POINTER
         LA    8,12(9)         8POINTS TO NEXT ONE
         LR    R6,R7           SET UP LOOP FOR FORWARD THREAD  DART4/78
         BCTR  R6,0            CHAIN OF FREE SPACE ELEMENTS    DART4/78
FRSETUP  ST    8,0(9)
         LA    9,12(9)         INCR 9
         LA    8,12(8)         INCR 8
         BCT   6,FRSETUP       DO IT FOR ALL
         ST    2,FPFMT5AD      SAVE FIRST FREE POINTER
         SH    2,=H'12'        GET TO LAST USED ELEMENT
         XC    0(4,2),0(2)     WIPE OUT CHAIN POINTER
         EJECT
         SR    6,6             CLEAR REG 6
         LA    5,3             GO THROUGH 3 TIMES
GETDS    EQU   *
         STM   5,6,R5R6        SAVE REGS 5 & 6
         L     4,DSLSTAD       POINT TO DSLST
INC2     LA    4,4(4)          INCR LIST POINTER
         CLC   0(4,4),ZEROES   ARE WE AT END OF LIST
         BE    THISDONE
         L     6,R5R6+4        RESTORE REG 6
         EX    0,TEST(6)       MAKE THE TEST
         BZ    INC2            BRANCH TO LOOK AT NEXT DS
*        GETVTOCS CALLED AS IF IT WERE BAL IN THIS ROUTINE.  WMT 04/76
         L     RF,=V(GETVTOCS)    START ADDRESS.             WMT 04/76
         BALR  RB,RF              CALL GETVTOCS.             WMT 04/76
         XC    OUTEXT(16*8),OUTEXT     CLEAR EXTENT AREA
         LH    11,FMT1+98      GET TTR OF LAST WRITTEN BLOCK
         LA    0,1(11)         NOW HAVE # OF TRACKS USED
         TM    FMT1+105,X'40'     TEST FOR SUL.               WMT 04/76
         BO    X10                BR IF SUL.                  WMT 04/76
         CLC   CTLG,FMT1       IT THIS THE CATALOG DATA SET
         BNE   GOON99          IF NOT, THEN PLAY DUMB
X10      DS    0H                                             WMT 04/76
         LH    0,BIGGIE        GET A BIG NUMBER FOR TRACKS USER
GOON99   EQU   *
         STH   0,TRKUSD        SAVE FOR LATER
         SR    15,15           CLEAR 15
         SR    1,1             CLEAR 1
         LA    2,16            MAX @ OF EXTENTS
CYLEXT1  SR    3,3             CLEAR 3
         C     3,INEXT(1)      IS THIS EXTENT GOOD
         BE    CYLOUT          IF NOT, THEN WE'RE FINISHED
         ST    RF,RGSAV           SAVE RF.                    WMT 04/76
*        ALCDS IS CALLED AS IF IT WERE BAL IN THIS ROUTINE.  WMT 04/76
         L     RF,=V(ALCDS)       START ADDRESS.             WMT 04/76
         BALR RE,RF               CALL ALCDS.                WMT 04/76
         LA    15,1(15)        INCR EXTENT REG
         SH    0,TRKALC        SUBTRACT TRACKS ALLOC.
         BZ    CYLOUT          IF ZERO, DATA FITS ON THIS EXTENT
         BM    ADD1TRK         IF MINUS - ADD 1 FOR GOOD MEASURE
         LA    1,8(1)          INCR EXTENT POINTER
         BCT   2,CYLEXT1       KEEP IT UP
ADD1TRK  EQU   *
         LH    1,TRKUSD        GET USED TRKS
         LA    1,1(1)          ADD 1
         STH   1,TRKUSD        AND SAVE FOR COPIER
CYLOUT   EQU   *
         STC   15,FMT1+59      SAVE # OF EXTENTS
         TM    FMT1+105,X'40'     TEST FOR SUL.               WMT 04/76
         BO    X11                BR IF SUL.                  WMT 04/76
         CLC   CTLG,FMT1       IF THIS THE CATALOG DATA SET
         BNE   GOON100         IF NOT, THEN NORMAL
X11      DS    0H                                             WMT 04/76
         LCR   0,0             MAKE NUM NEGATIVE
         AH    0,BIGGIE        NOW REG 0 HAS TRACKS ALLOCATED
         STH   0,TRKUSD        MOVE DS WILL USE THIS NUMBER
GOON100  EQU   *
         TM    3(4),X'20'      IS THE SYSCTLG DATASET          DART4/78
         BZ    GOON100A        NO, NORMAL PROCESSING           DART4/78
         MVC   SAVEBLK,BLOCKAD SAVE OFF CURRENT BLOCK NUMBER   DART4/78
         MVC   BLOCKAD,=F'2'   SET TO RECORD NO. 3             DART4/78
         L     RF,=V(PUTDS)    LOAD ADDRESS OF COPY RTN        DART4/78
         BALR  RB,RF           GO COPY IT                      DART4/78
         MVC   BLOCKAD,SAVEBLK RESTORE CURRENT BLOCK NUMBER    DART4/78
         B     GOON101         CONTINUE MAIN LINE CODE         DART4/78
GOON100A EQU   *                                               DART4/78
*        PUTDS IS CALLED AS IF IT WERE BAL IN THIS ROUTINE.  WMT 04/76
         L     RF,=V(PUTDS)       START ADDRESS.             WMT 04/76
         BALR RB,RF               CALL PUTDS                 WMT 04/76
GOON101  DS    0H                                             WMT 12/75
         MVI   3(4),0          CLEAR FLAG BYTE
         B     INC2            LOOK FOR NEXT DATA SET
THISDONE EQU   *
         LM    5,6,R5R6        REATORE REGS 5 & 6
         LA    6,4(6)          INCR REG 6
         BCT   5,GETDS         KEEP GOING
         B     PDONE           WE'RE FINISHED COPYING DATA SETS
 SPACE
TEST     TM    3(4),X'20'      IS THIS THE SYSCTLG DATA SET
         TM    3(4),X'10'      IS THIS CYLINDER ALLOCATION
         CLI   3(4),0          HAS THIS BEEN COPIED
 EJECT
PDONE    EQU   *
         NI    OUTDISK+X'30',X'7F'     TURN OFF WRITE FLAG FOR CLOSE
         CLOSE (INDISK,,OUTDISK)       CLOSE BIGGIES
         XC    FMT5(140),FMT5  WIPE OUT FORMAT 5 DSCB
         LH    7,TRKPCYL       GET TRAKS PER CYL
         LA    8,FMT5+5        FIRST EXTENT LOC
         L     9,PFMT5AD       GET FIRST FORMAT 5 POINTER
         LA    14,26           MAX # OF FREE EXTENTS IN FORMAT 5
EXTST10  LTR   9,9             SEE IF GOOD EXTENT
         BZ    FMT5DONE        IF FINISHED GET OUT
         MVC   0(2,8),4(9)     MOVE EXTENT START
         SR    10,10           CLEAR 10
         LH    11,8(9)         GET TRKS ON CYL
         DR    10,7            GET CYLS
         STH   11,TCYL         STORE
         MVC   2(2,8),TCYL     MOVE TO EXTENT
         LH    11,6(9)         GET TRAKS BEFORE CYL
         AH    11,10(9)        ADD TRACKS AFTER LAST CYL
         STC   11,4(8)         SAVE IN EXTENT
         LA    8,5(8)          POINT TO NEXT EXTENT
         L     9,0(9)          POINT TO NEXT EXTENT
         BCT   14,EXTST10      KEEP MOVING
         ST    RB,RBSAVE       IN TROUBLE, SAVE REG11 FOR WRT  DART4/78
         LA    R1,WARNING      PUT OUT WARNING MESSAGE         DART4/78
         MVI   WARNING+26,X'F3' INDICATE TOUBLE IN PASS 3      DART4/78
         L     RF,=V(WRTLINE)  ADDR OF PRINT ROUTINE           DART4/78
         BALR  RB,RF           GO PRINT IT                     DART4/78
         L     RB,RBSAVE       RESTORE REG11                   DART4/78
         MVI   CONTAMIN,X'84' SET CONTAMINATE FLAGS           DART4/78
FMT5DONE EQU   *
         L     14,VTCOUTDB+16  GET IOB ADDRESS
         MVC   FMT4+45(5),CCHHR(14)    MOVE CCHHR
         SR    8,8             CLEAR 8
         XC    FMT2(140),FMT2  WIPE OUT BIG AREA
WRT0     WRTVTOC FMT2,,A       WRITE A FMT0
         CLI   OUTER,0        SEE IF GOOD
         BNE   NOMORE          IF NOT, THEN WE RAN OUT OF ROOM
         LA    8,1(8)          ONE MORE GOOD FMT 0
         B     WRT0            GO TRY AGAIN
NOMORE   STH   8,FMT4+50       SAVE # OF AVAIL DSCB'S
         MVC   FMT5+4(40),FMT5+5       SET UP FMT5
         MVI   FMT5+44,X'F5'   PUT IN ID
         MVI   FMT5,5
         MVC   FMT5+1(3),FMT5  NOW HAVE GOOD FORMAT 5
         LA    9,1             GET REL REC # OF FMT5
         ST    9,BLOCKAD       SAVE
         WRTVTOC FMT5          WRITE OUT FMR 5
         XC    BLOCKAD,BLOCKAD CLEAR BLOCK ADDRESS
         OC    FMT4+58(1),CONTAMIN   SET CONTAMINATE BIT IN    DART4/78
         TM    VSAMSW,X'01'  VSAM DS ON VOL?  ** BAR **
         BZ    NOMORE2             NO ** BAR **
         MVC   FMT4+76(22),VSAMSAVE  RESTORE VSAM FMT4 INFO ** BAR **
         MVI   VSFLAG,X'FF'       SET VSAM FLAG.
NOMORE2  WRTVTOC FMT4          WRITE IT OUT
         CLOSE (DISKIN,,DISKOUT)       CLOSE THE VTOCS
         LA    1,ENDMES        GET ADDRESS OF ENDING MESSAGE
*        WRTLINE IS CALLED AS IF IT WERE BAL IN THIS ROUTINE WMT 04/76
         L     RF,=V(WRTLINE)     START ADDRESS.
         BALR RB,RF               CALL WRTLINE.              WMT 04/76
         CLOSE SYSPRINT
         DEQ   MF=(E,ENQL)     DEQ THE TWO VTOCS
         CALL  TRKTOT
*                                                            *WMT 12/75
*        REPOSITION VSAM FORMAT 1'S.                         *WMT 12/75
*                                                            *WMT 12/75
         CLI   VSFLAG,X'FF'       TEST FOR VSAM.
         BNE   SKIPVS             BR IF NO VSAM.
         CALL VSAM                                            WMT 12/75
SKIPVS   DS    0H
         L     RD,SAVE+4          RESTORE OLD SAVE.           WMT 04/76
         RETURN (14,12),RC=0   RETURN WITH GOOD RETURN CODE
VSFLAG   DC    XL1'00'            VSAM FLAG.
CONTAMIN DC    XL1'00'            FMT4 DOS CONTAMINATE BYTE    DART4/78
WARNING  DC    CL121'0** WARNING ** AFTER PASS 1,FREE SPACE WILL BE LOS+
               T DUE TO FRAGMENTATION.  DOS CONTAMINATION BIT SET' DART
RBSAVE   DC    F'0'               REGISTER 11  SAVE AREA       DART4/78
SAVEBLK  DC    F'0'               VTOC BLOCK NUMBER SAVE AREA  DART4/78
         SPACE
         LTORG
         EJECT
SAVE     DC    9D'0'              SAVE AREA.                 WMT 04/76
IOER     EQU   *              I/O ERROR ROUTINE
         USING *,15           15 IS BASE FOR A WHILE
         MVI   OUTER,255      INDICATE ERROR
         BR    14             AND RETURN
         DROP  15                                             WMT 12/75
CRASH    DS    0H                                             WMT 12/75
EX       EX    0,EX               BLOW WITH C03.              WMT 12/75
VTOC     DC    CL8'SYSVTOC'    MAJOR QUEUE NAME
HEADER   DC    CL121'1DISK SQUISHER'
         ORG   *-8
         DC    C'PAGE '
PAGE#UP  DS    CL3
         ORG
         DC    CL121' '
         ORG   *-120
DSNAME   DS    CL44
         DC    C'  COPIED SUCCESSFULLY'
         ORG
         DC    CL121' '                 *SDS*
         ORG   *-120                    *SDS*
BADCPY   DS    CL44                     *SDS*
         DC    C'  COPY FAILED  I/O ERROR ************'   *SDS*
         ORG
PAGE#    DC    PL3'0'
LINE#    DC    P'60'
ENDMES   DC    CL121'0DISK SQUISHER COMPLETE'
OLDVOL   DS    CL6                      *SDS*
TAGVOL   DS    CL6                      *SDS*
REPL     DS    CL6                      *SDS*
ENQL     ENQ   (VTOC,OLDVOL,E,6,SYSTEMS,VTOC,TAGVOL,E,6,SYSTEMS),      +
               MF=L                     *SDS*
WTOR     WTOR  'COPYVOL VERIFY ENTER TARGET VOL FOR XXXXXX',REPL,6,    +
               INECB,MF=L               *SDS*
BDOPMES  DC    CL121' OPERATOR DENIED YOUR REQUEST TO SQUISH VOLUME.'
R5R6     DS    2F
ALLTRKS  DC    F'16650'           TOTAL TRACKS ON A PACK.     GJG8/76
MRGSW    DC    X'00'              NOT A MERGE INITIALLY.      WMT 12/75
SAV14    DS    F                  R14 SAVE AREA.              WMT 12/75
RG6TO15  DS    10F                TEMP SAVE AREA.             WMT 12/75
CTLG     DC    CL44'SYSCTLG'   NAME OF CATALOG DATA SET
BIGGIE   DC    H'10000'
OTVTCEND DS    H               LAST TRACK NUMBER IN OUTPUT VTOC
OUTER    DS    X              IOERROR BYTE
R0FLAG   DS    X
         DS    0D
ABSHD    DC    AL3(0)
ABSAD    DS    XL5
LSTFM1   DS    F
THIRD    DC    AL3(3),AL1(0)
ZEROES   DC    XL8'0'
OVSW     DC    X'0'            OVERFLOW SWITCH
FKEOF    DS    X
#TRKS    DS    H
FULL     DS    F
STAD     DS    F
ENDAD    DS    F
R11      DS    F
INDKAD   DS    F
OTDKAD   DS    F
DSLSTAD  DS    A
RGSAVE   DS    18F
PFMT5AD  DC    A(PFMT5)
FPFMT5AD DS    A
PFMT5    DC    (60*3)F'0'                                      DART4/78
HFLG     DS    X                        *SDS*
UHL1     DC    C'UHL1UHL2UHL3UHL4UHL5UHL6UHL7'        *SDS*
UHL8     DC    C'UHL8UTL0UTL1UTL2UTL3UTL4UTL5UTL6UTL7UTL8' *SDS*
VSAMSW   DC    X'0'                                               *BAR*
VSAMSAVE DS    XL22                                               *BAR*
INDISK   DCB   MACRF=E,DDNAME=SYSUT1,EXLST=INJFCBAD,                   +
               IOBAD=INIOB
OUTDISK  DCB   MACRF=E,DDNAME=SYSUT2,EXLST=OTJFCBAD,                   +
               IOBAD=OUTIOB
BLOCKAD  DC    F'0'
REC#     EQU   BLOCKAD+2
CCHHR    EQU   X'23'           OFFSET OF CCHHR IN IOB
FMT1     DS    140C
FMT2     DS    140C
FMT3     DS    140C
FMT5     DS    140C
VTOCOUT  DS    140C
FMT4     EQU   VTOCOUT
VTOCIN   DS    140C
DACYLS   DC    H'0,200,25,80,246,980,48,96,200,404,0,555,0,808' GJG8/76
#EXTS    DS    H
TCYL     DS    H
TRKALC   DS    H
TRKUSD   DS    H
INEXTS   DC    16D'0'
OUTEXTS  DC    16D'0'
OUTEXT   EQU   OUTEXTS
INEXT    EQU   INEXTS
DISKIN   DCB   DSORG=PS,MACRF=RP,DDNAME=SYSUT1,RECFM=F,KEYLEN=44,      +
               LRECL=96,BLKSIZE=96,EXLST=INJFCBAD
INJFCBAD DS    0F
         DC    X'87'
         DC    AL3(INJFCB)
INJFCB   DS    44F
         READ  VTOCINCB,SF,DISKIN,MF=L
DISKOUT  DCB   DSORG=DA,MACRF=(RIC,WIC),DDNAME=SYSUT2,OPTCD=R,         +
               RECFM=F,KEYLEN=44,BLKSIZE=96,EXLST=OTJFCBAD,SYNAD=IOER
OTJFCBAD DS    0F
         DC    X'87'
         DC    AL3(OUTJFCB)
OUTJFCB  DS    44F
         READ  VTCOUTDB,DI,DISKOUT,,'S',,BLOCKAD+1,MF=L
         EJECT
INIOB    DS    0D
         DC    X'42'           CC AND UNRELATED
         DS    XL3
         DC    A(INECB)
INCSW    DC    2A(0)
INCCWAD  DS    A
         DC    A(INDISK)
         DC    2A(0)
         DC    XL3'0'
INCCHH   DC    XL4'0'
         DC    X'0'
         DC    C'SQUV'
         DC    A(VTOCIN)
INCYLS   DS    H
INECB    DC    F'0'
OUTIOB   DS    0D
         DC    X'42'
         DS    XL3
         DC    A(OUTECB)
OUTCSW   DC    2A(0)
         DC    A(OUTCCW)       ADDRESS OF OUTPUT CCW
         DC    A(OUTDISK)
         DC    2A(0)
         DC    XL3'0'
OUTCCHH  DC    XL4'0'
         DC    X'0'
         DC    C'SQUV'
         DC    A(FMT4)
OUTCYLS  DS    H
OUTECB   DC    F'0'
NOREC    EQU   X'20'
OUTCCW   CCW   X'31',OUTCCHH,X'40',5   SEARCH FOR RECORD 0
         CCW   X'08',OUTCCW,0,0        KEEP LOOKING
DACCWADO CCW   X'08',0,0,0     THIS TIC WILL BE MODIFIED BY PROG
RDDACCW  CCW   X'31',INCCHH,X'40',5    LOOK FOR RECORD 0
         CCW   X'08',RDDACCW,0,0       TIC *-8
DACCWADI CCW   X'08',0,0,0     TIC TO GOTMAIN CCW
RDCNTCCW CCW   X'31',INCCHH,X'40',5    SEARCH FOR RECORD 0
         CCW   X'08',RDCNTCCW,0,0
RDCNTAD  CCW   X'80',0,0,0     WILL BE FILLED IN BY INIT ROUTINE
DATADI   DS    F               ADDRESS OF INPUT DATA
DATADO   DS    F               ADDRESS OF OUTPUT DATA
FRSTSW   DS    CL2
LSTSW    EQU   FRSTSW+1
SVR5R6   DS    2F              OTHER SAVE AREA FOR REGS 5 & 6
INR0DATA DS    CL8
         EJECT
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,RECFM=FBA,LRECL=121,  +
               BLKSIZE=968
         LTORG
FREESPAC DC    16650X'00'         EVERYTHING UNALLOCATED FIRSTGJG8/76
         DC    X'FF'           TO INSURE THE END
VTOCINDB EQU   VTOCINCB
RGSAV    EQU   RGSAVE
#FREXTS  EQU   #EXTS
TRKPCYL  EQU   VTOCIN+64
#CYL     EQU   VTOCIN+62
         END   COPYDISK
