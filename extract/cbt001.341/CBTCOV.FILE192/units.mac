         TITLE '       U N I T S   '
***********************************************************************
*                                                                     *
*        'UNITS'                                                      *
*                                                                     *
***********************************************************************
         SPACE
*        WRITTEN BY. BILL GODFREY, PRC (PLANNING RESEARCH CORPORATION).
*        INSTALLATION. PRC, MCLEAN VA.
*        DATE WRITTEN. MAY 05 1976
*        DATE UPDATED. SEPTEMBER 29 1981.
*        ATTRIBUTES. RE-ENTRANT.
*        COMMENTS.
*            THIS TSO COMMAND DISPLAYS THE UNIT NAMES IN THE
*            DEVICE NAME TABLE, AND THE CHANNEL-UNIT-ADDRESSES
*            ASSOCIATED WITH EACH UNIT NAME.
*
*            29AUG79 - MASK LENGTH COMPUTED INSTEAD OF CONSTANT.
*            01AUG80 - TEST FOR SYSTEMS USERID, IMPLEXEC IF NOT.
*            29SEP81 - TEST FOR ASMI.
         SPACE
UNITS    START
         USING *,R12
         B     @PROLOG-*(,15)
         DC    AL1(11),CL11'UNITS'
         DC    CL16' &SYSDATE &SYSTIME '
@SIZE    DC    0F'0',AL1(1),AL3(@DATAL)   SUBPOOL AND LENGTH
@PROLOG  STM   14,12,12(13)
         LR    R12,R15
         LR    R2,R1
         USING CPPL,R2
         L     R0,@SIZE
         GETMAIN R,LV=(0)
         ST    13,4(,1)
         ST    1,8(,13)
         LR    13,1
         USING @DATA,13
         SPACE
AUTHID   L     R1,16               CVTPTR
         L     R15,0(,R1)          TCB WORDS CVTTCBP
         L     R15,4(,R15)         CURRENT TCB
         L     R1,X'0B4'(,R15)     TCBJSCB
         L     R1,X'108'(,R1)      JSCBPSCB
         LTR   R1,R1               ANY PSCB?
         BZ    IMPLEXEC            NO - NOT A TIME SHARING SESSION
         USING PSCB,R1
         CLC   PSCBUSER(4),ASMI    SYSTEMS SUPPORT USERID
         BE    PROCEED             YES, BRANCH
         LA    R15,USERIDS
AUTHLOOP CLI   0(R15),0            END OF LIST?
         BE    IMPLEXEC            YES, NOT AUTHORIZED
         CLC   PSCBUSER(7),0(R15)
         BE    PROCEED
         LA    R15,8(,R15)         POINT TO NEXT USERID
         B     AUTHLOOP            GO CHECK IT
         DROP  R1                  PSCB
ASMI     DC    C'ASMI'
USERIDS  DC    0D'0'               ALIGN FOR EASY ZAPS
         DC    8D'0'               ROOM FOR 8 USERIDS
         DC    H'0'                END OF USERID LIST
         SPACE
IMPLEXEC EQU   *
         L     R1,CPPLCBUF
         XC    2(2,R1),2(R1)       SET CBUF TO IMPLICIT EXEC
         L     R1,CPPLECT          GET ECT ADDRESS
         USING ECT,R1
         CLI   ECTSCMD,C' '        IS THIS A SUBCOMMAND
         BNE   *+10                YES - SAY SUBCOMMAND NOT FOUND
         MVC   ECTPCMD,=CL8'EXEC'  NO  - SAY COMMAND NOT FOUND
         DROP  R1                  ECT
         LR    R1,R13
         L     R0,@SIZE
         L     R13,4(,R13)
         FREEMAIN R,A=(1),LV=(0)
         L     R1,24(,R13)         RESTORE CPPL POINTER
         LA    R15,12(,R13)        POINT TO 2-WORD XCTL PARM
         XC    0(8,R15),0(R15)     CLEAR IT
         XCTL  (2,12),EP=EXEC,SF=(E,(15))
         SPACE
PROCEED  EQU   *
         SPACE
************************************************************
*                                                          *
*        SET UP IOPL FOR PUTLINE                           *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYIOPL
         USING IOPL,R15
         MVC   IOPLUPT(4),CPPLUPT
         MVC   IOPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,IOPLECB
         XC    MYECB,MYECB
         LA    R0,MYPTPB
         ST    R0,IOPLIOPB
         DROP  R15
         SPACE
************************************************************
*                                                          *
*        SET UP PPL FOR PARSE                              *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYPPL
         USING PPL,R15
         MVC   PPLUPT(4),CPPLUPT
         MVC   PPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,PPLECB
         XC    MYECB,MYECB
         L     R0,=A(UNITSPCL)
         ST    R0,PPLPCL
         LA    R0,MYANS
         ST    R0,PPLANS
         MVC   PPLCBUF(4),CPPLCBUF
         LA    R0,MYUWA
         ST    R0,PPLUWA
         DROP  R15
         SPACE 1
************************************************************
*                                                          *
*        CALL THE PARSE SERVICE ROUTINE                    *
*                                                          *
************************************************************
         SPACE 1
         LR    R1,R15              POINT TO PPL
         L     R15,16              CVTPTR
         TM    X'020C'(R15),X'80'  IF HI ORDER BIT NOT ON
         BNO   PARSELNK               THEN DO LINK, NOT CALL
         L     R15,X'020C'(,R15)   CVTPARS
         BALR  R14,R15             CALL IKJPARS
         B     PARSEEXT            SKIP AROUND LINK
PARSELNK EQU   *
         LINK  EP=IKJPARS
PARSEEXT EQU   *
         SPACE
         L     R3,MYANS
         USING IKJPARMD,R3
         SPACE
************************************************************
*                                                          *
*        LOAD TABLES AND COMPUTE MASK LENGTH               *
*                                                          *
************************************************************
         SPACE
         L     R1,16               CVTPTR
         L     R15,X'28'(,R1)      CVTILK2
         LR    R1,R15              POINT TO 1ST UCB SLOT
COUNTUCB CLI   0(R1),X'FF'
         LA    R1,2(,R1)
         BNE   COUNTUCB
         SR    R1,R15              GET LENGTH OF SLOTS + 2
         SRL   R1,1                GET NUMBER OF SLOTS + 1
         BCTR  R1,0                GET NUMBER OF SLOTS
         LA    R0,31               ROUND
         AR    R1,R0                TO
         OR    R1,R0                 WORD
         XR    R1,R0                  BOUNDARY
         SRL   R1,3                CONVERT BITS TO BYTES
         STH   R1,@MASKLEN         SAVE LENGTH OF MASK
         SPACE
         LOAD  EP=DEVNAMET
         SPACE
         LR    R4,R0
         SPACE
         LOAD  EP=DEVMASKT
         SPACE
         LR    R5,R0
         SPACE
************************************************************
*                                                          *
*        SCAN THRU DEVICE NAME TABLE                       *
*                                                          *
************************************************************
         SPACE
         L     R1,0(,R4)
         LA    R4,4(,R4)           POINT TO 1ST DEVNAME
NAMELOOP EQU   *
         ST    R1,CTRNAME
         MVI   MYMSG,C' '
         MVC   MYMSG+1(MYMSGL-1),MYMSG
         MVI   MYMSGEND,X'FF'
         MVC   MYMSG(8),0(R4)
         SPACE
         LA    R1,8(,R4)
         LA    R15,MYMSG+9
         LA    R0,4
         BAL   R14,HEX
         CLI   NAMEKW+1,1          'NAMES' SPECIFIED
         BE    NAMEOUT             YES, NO MASK PROCESSING
         SPACE
************************************************************
*                                                          *
*        FIND THE MASK FOR THIS DEVICE NAME                *
*                                                          *
************************************************************
         SPACE
         LH    R0,0(,R5)
         LA    R1,4(,R5)           POINT TO 1ST ENTRY IN MASK TABLE
MASKLOOP CLC   4(4,R1),8(R4)       DOES IT MATCH NAME+8?
         BE    MASKEQ              YES - BRANCH
         AH    R1,@MASKLEN
         LA    R1,8(,R1)           PLUS 8
         BCT   R0,MASKLOOP
         MVC   MYMSGCUU(09),=C'(NO MASK)'
         B     NAMEOUT
         SPACE
MASKEQ   EQU   *
         L     R15,16              CVTPTR
         L     R8,X'28'(,R15)      CVTILK2
         LA    R7,MYMSGCUU
         LH    R0,@MASKLEN         LENGTH OF MASK
         LA    R6,8(,R1)           ADDRESS OF MASK
         SLR   R15,R15             OFFSET INTO UCB TABLE
BYTELOOP LA    R1,X'80'            1ST BIT IN BYTE
BITLOOP  EQU   *
         B     *+8
         TM    0(R6),X'00'         TEST BIT
         EX    R1,*-4              IS BIT ON?
         BNO   NEXTBIT
         LH    R14,0(R15,R8)       GET UCB ADDRESS
         CLC   0(4,R7),=C'    '    ANY ROOM LEFT?
         BNE   CONTINUE            NO - BRANCH
         CLC   MYMSGCUU(2),=C'  '  FIRST CUU?
         BE    FSTCUU              YES - BRANCH
         CLC   MYMSGCUU(2),13(R14) NO - SAME CU AS FIRST?
         BNE   CONTINUE            NO - NEW LINE
FSTCUU   EQU   *
         MVC   0(3,R7),13(R14)     MOVE CUU
         LA    R7,4(,R7)           NEXT SLOT
         B     NEXTBIT
CONTINUE STM   R14,R1,SAVEBITS
         LA    R1,MYMSG
         LA    R0,MYMSGL
         BAL   R14,PUTLINE
         LM    R14,R1,SAVEBITS
         MVI   MYMSG,C' '
         MVC   MYMSG+1(MYMSGL-1),MYMSG
         LA    R7,MYMSGCUU
         B     FSTCUU
NEXTBIT  LA    R15,2(,R15)         POINT TO NEXT UCB HW ADDR
         SRL   R1,1                SHIFT 1 BIT TO RIGHT
         LTR   R1,R1               ZERO?
         BNZ   BITLOOP             NO - BRANCH
         LA    R6,1(,R6)           NEXT BYTE IN MASK
         BCT   R0,BYTELOOP         BRANCH UNTIL MASKLEN ZERO
         SPACE
NAMEOUT  LA    R1,MYMSG
         LA    R0,MYMSGL
         BAL   R14,PUTLINE
NEXTNAME LA    R4,12(,R4)
         L     R1,CTRNAME
         BCT   R1,NAMELOOP
         B     EXIT0
         SPACE
HEX      MVC   1(1,R15),0(R1)      MOVE BYTE
         UNPK  0(3,R15),1(2,R15)   UNPACK
         TR    0(2,R15),HEXTRAN-240
         LA    R15,2(,R15)         INCREMENT OUTPUT PTR
         LA    R1,1(,R1)           INCREMENT INPUT PTR
         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP
         MVI   0(R15),C' '         BLANK THE TRAILING BYTE
         BR    R14                 RETURN TO CALLER
HEXTRAN  DC    C'0123456789ABCDEF' TRANSLATE TABLE
         EJECT
************************************************************
*                                                          *
*        PUTMSG ROUTINE                                    *
*                                                          *
************************************************************
         SPACE
PUTMSG   STM   R14,R1,PUTLINS
         XC    MYOLD(8),MYOLD
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPM
         LA    R14,1               NO. OF MESSAGE SEGMENTS
         ST    R14,MYOLD
         LA    R14,MYSEG1          POINT TO 1ST SEGMENT
         ST    R14,MYOLD+4
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         LA    R15,MYSEG1+4
         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?
         BE    *+16                YES - BRANCH
         LA    R14,1(,R14)         ADD 1 TO LENGTH
         MVI   0(R15),C' '         INSERT LEADING BLANK
         LA    R15,1(,R15)         BUMP POINTER
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN
         EX    R14,*-6
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),MF=(E,MYIOPL)
         SPACE
         LM    R14,R1,PUTLINS
         BR    R14
         SPACE
************************************************************
*                                                          *
*        PUTLINE ROUTINE                                   *
*                                                          *
************************************************************
         SPACE
PUTLINE  STM   R14,R1,PUTLINS
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPB
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN
         EX    R14,*-6
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),MF=(E,MYIOPL)
         SPACE
         LM    R14,R1,PUTLINS
         BR    R14
         EJECT
EXIT0    SR    15,15
EXIT     LR    1,13
         L     R0,@SIZE
         L     13,4(,13)
         ST    15,16(,13)
         FREEMAIN R,A=(1),LV=(0)
         LM    14,12,12(13)
         BR    14
         SPACE
************************************************************
*                                                          *
*        CONSTANTS                                         *
*                                                          *
************************************************************
         SPACE
MODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
MODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
************************************************************
*                                                          *
*        PARSE PCL                                         *
*                                                          *
************************************************************
         SPACE
         PRINT NOGEN
UNITSPCL IKJPARM
NAMEKW   IKJKEYWD
         IKJNAME 'NAMES'
         IKJENDP
         PRINT GEN
         SPACE
************************************************************
*                                                          *
*        DSECTS                                            *
*                                                          *
************************************************************
         SPACE
@DATA    DSECT
         DS    18F
@MASKLEN DS    H
MYPPL    DS    7F
MYANS    DS    F
MYUWA    DS    F
MYECB    DS    F                  USED BY PUTLINE ROUTINE
MYIOPL   DS    4F                 USED BY PUTLINE ROUTINE
MYPTPB   DS    3F                 USED BY PUTLINE ROUTINE
MYOLD    DS    2F                 USED BY PUTLINE ROUTINE
MYSEG1   DS    2H,CL100           USED BY PUTLINE ROUTINE
PUTLINS  DS    4F                 USED BY PUTLINE ROUTINE
CTRNAME  DS    F
SAVEBITS DS    4F
SAVEUCB  DS    F
MYMSG    DS    0CL80
         DS    CL8
         DS    C
         DS    CL8
         DS    C
MYMSGCUU DS    8CL4
MYMSGL   EQU   *-MYMSG
MYMSGEND DS    CL8
         SPACE
@DATAL   EQU   *-@DATA
         SPACE
         IKJCPPL
         SPACE 3
         IKJIOPL
         SPACE 3
         IKJPPL
         SPACE 3
         IKJPSCB
         SPACE 3
         IKJECT
         SPACE 3
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
