         TITLE '   S 9 9 D A I R  '
***********************************************************************
*                                                                     *
*        'S99DAIR' SUBPROGRAM                                         *
*                                                                     *
***********************************************************************
*
*        CURRENT STATUS: VERSION 1.2
*          NOT THOROUGHLY TESTED BUT NO KNOWN PROBLEMS.
*
*        WRITTEN BY. BILL GODFREY,  PLANNING RESEARCH CORPORATION.
*        INSTALLATION. PRC COMPUTER CENTER, INC.  MCLEAN VA
*        DATE WRITTEN. MARCH 6 1981.
*        DATE UPDATED. APRIL 7 1981.
*        ATTRIBUTES. RE-ENTRANT.
*        MACROS. GETMAIN FREEMAIN LINK IEFZB4D0 IEFZB4D2 IKJEFFDF.
*         IKJCPPL, IKJUPT, IKJDAPL, IKJDAP08, IKJDAP1C, IKJDAP30.
*        LOG OF CHANGES.
*         30MAR81. LABEL IN08RDDX ADDED. UNALLOC IF MEM SPEC, NOT PDS.
*         07APR81. ADDED DE08NEX BIT, TO SET ON S99NOCNV BIT.
*        DESCRIPTION.
*         THIS SUBPROGRAM IS AN ENHANCED VERSION OF IKJDAIR FOR TYPES
*         '0008' (DSNAME), '001C' (TERMINAL), AND '0030' (SYSOUT).
*
*         IT DOES NOT REPLACE IKJDAIR, BUT CAN BE CALLED INSTEAD
*         OF IKJDAIR, AND IF THE DAPB TYPE IS NOT HANDLED BY THIS
*         PROGRAM, THEN THIS PROGRAM WILL PASS IT ON TO IKJDAIR.
*
*         THIS SUBPROGRAM ACCEPTS A PARAMETER LIST SIMILAR
*         TO THAT PASSED TO IKJDAIR, AND EITHER PASSES IT ON
*         TO IKJDAIR OR PERFORMS THE REQUESTED FUNCTION ITSELF.
*
*         WHEN MODIFYING AN EXISTING TSO COMMAND TO GIVE
*         IT THE ABILITY TO DYNAMICALLY ALLOCATE A GREATER
*         VARIETY OF DATA SETS THAN 'IKJDAIR' ALLOWS, IT
*         IS INCONVENIENT TO CONVERT THE CODE FROM 'IKJDAIR'
*         ORIENTED PARAMETER LISTS TO 'SVC-99' ORIENTED
*         PARAMETER LISTS.  THIS SUBPROGRAM WAS WRITTEN TO
*         SIMPLIFY THAT TASK BY ALLOWING THE 'IKJDAIR' LOGIC
*         TO BE LEFT UNCHANGED, WHILE INCORPORATING THE NEW
*         SVC-99 FUNCTIONS IN THE FORM OF NEW FIELDS IN THE
*         DAIR PARAMETER BLOCKS.
*
*         TO CONVERT A COMMAND, SIMPLY ADD YOUR NEW KEYWORDS
*         AND OPERANDS, ADD CODE TO INTERPRET THEM INTO THE NEW
*         FIELDS, AND CALL 'S99DAIR' INSTEAD OF 'IKJDAIR'. BE SURE
*         TO EXTEND ANY DAPB'S FOR TYPE 0008, 001C, AND 0030 BY
*         THE PROPER NUMBER OF BYTES, AND ZERO ALL UNUSED FIELDS.
*
*         THE FOLLOWING FEATURES ARE NOT IN IKJDAIR, BUT ARE
*         AVAILABLE THRU THIS PROGRAM -
*
*          A) ALLOCATE A DATA SET, SYSOUT, OR A TERMINAL, WITH
*             SPECIFIED DCB ATTRIBUTES, WITHOUT HAVING TO
*             ALLOCATE AN ATTRIBUTE LIST NAME.
*          B) ALLOCATE A DATA SET WITH ZERO TRACKS PRIMARY SPACE.
*          C) ALLOCATE A SYSOUT FILE SPECIFYING CLASS, DEST, HOLD,
*             COPIES, AND FCB.  IKJDAIR IGNORES CLASS EVEN THOUGH
*             THERE ALREADY IS A FIELD FOR IT.
*          D) ALLOCATE A DATA SET SPECIFYING MSVGP.
*          E) ALLOCATE A TAPE SPECIFYING FILE POSITION, LABEL TYPE,
*             EXPIRATION DATE (OR RETENTION PERIOD), AND DENSITY.
*             (FOR USERS WITH TAPE MOUNT OR BACKGROUND COMMANDS).
*          F) OPTIONALLY REQUEST THAT EXPLANATORY MESSAGES BE
*             ISSUED IF ALLOCATION FAILS (EXCEPT IN CASES WHERE
*             ALLOCATION WAS NEVER ATTEMPTED DUE TO INVALID
*             PARAMETERS - DAIR RETURN CODE 4).
*
*         THESE FUNCTIONS ARE REQUESTED BY APPENDING NEW FIELDS
*         TO THE DA08 AND DA30 PARAMETER AREAS, AND THEN
*         CALLING THIS SUBPROGRAM INSTEAD OF IKJDAIR.
*
*         OTHER DIFFERENCES BETWEEN THIS PROGRAM AND IKJDAIR.
*
*          A) THIS PROGRAM DOES NOT HAVE THE SAME DEGREE OF
*             VALIDITY CHECKING THAT IKJDAIR DOES.  SOME INVALID
*             DATA IN THE OLD FIELDS WHICH IKJDAIR WOULD REJECT
*             MAY GO UNNOTICED HERE (SYSOUT SPACE FOR EXAMPLE).
*          B) DEFAULT SPACE FOR NEW DATA SETS IS NOT HANDLED
*             THE WAY IKJDAIR DOES.  IF SPACE TYPE IS SPECIFIED,
*             DEFAULT SPACE IS NOT ASSIGNED.
*
*         THE OPERATING SYSTEM MUST BE OS/VS2 MVS.
*
*         AT ENTRY REGISTER 1 POINTS TO A 'DAPL', MAPPED BY
*         THE STANDARD 'IKJDAPL' MACRO.
*
*         UPON RETURN TO CALLER, REGISTER 15 IS ZERO IF THE
*         ALLOCATION WAS SUCCESSFUL.  OTHERWISE REGISTER 15
*         HAS A VALUE FROM 4 TO 52.
*
*         THERE IS SOME CODE TO ALLOW FOR THE POSSIBILITY THAT THIS
*         IS INSTALLED AS A FRONT END TO IKJDAIR, BUT WE HAVE NOT
*         INSTALLED IT AS A FRONT END, NOR HAS IT BEEN TESTED AS A
*         FRONT END.  TO USE IT AS A FRONT END, THE 'A(0)' AT LABEL
*         'DAIRPTR' WOULD HAVE TO BE CHANGED TO V(IEFDB4D0) BEFORE
*         INSTALLATION OF THE FRONT END, AND THE 3 COMMENTED INSTRUC-
*         TIONS AT LABEL 'CALDAIR' WOULD HAVE TO BE UN-COMMENTED.
*
*$DOC$*****************************************************************
         SPACE
S99DAIR  START
*        WXTRN IEFDB4D0
         USING *,R10,R11
         B     @PROLOG-*(,15)
         DC    AL1(11),CL11'S99DAIR 1.2'
         DC    CL16' &SYSDATE &SYSTIME '
@PROLOG  STM   14,12,12(R13)
         LR    R10,R15             BASE REGISTER
         LA    R15,1
         LA    R11,4095(R15,R10)   BASE REGISTER
         LR    R2,R1               SAVE PARAMETER LIST ADDRESS
         USING DAPL,R2
         L     R3,DAPLDAPB
         LA    R4,IN08
         CLC   0(2,R3),=X'0008'    DSNAME
         BE    INIT                YES, BRANCH
         LA    R4,IN1C
         CLC   0(2,R3),=X'001C'    TERMINAL
         BE    INIT                YES, BRANCH
         LA    R4,IN30
         CLC   0(2,R3),=X'0030'    SYSOUT
         BE    INIT                YES, BRANCH
         EJECT
CALDAIR  EQU   *
*        L     R15,DAIRPTR         GET ADDRESS OF IKJDAIR
*        LTR   R15,R15             IS THIS A FRONT END
*        BNZ   GOTDAIR             YES, BRANCH
TSSDAIR  L     R15,16              CVTPTR
         TM    732(R15),X'80'      IS IKJDAIR IN LPA
         BNO   LNKDAIR             NO, BRANCH
         L     R15,732(,R15)       YES, GET IKJDAIR ENTRY ADDRESS
GOTDAIR  LM    0,12,20(R13)        RESTORE ALL REGISTERS
         BR    R15                 DAIR WILL RETURN TO OUR CALLER
         SPACE
LNKDAIR  LA    R0,80               LENGTH OF SAVEAREA PLUS LINK SF
         GETMAIN R,LV=(0)          GET A SAVEAREA
         ST    R13,4(,R1)          PUT OLD ADDRESS IN NEW SAVEAREA
         ST    R1,8(,R13)          PUT NEW ADDRESS IN OLD SAVEAREA
         LR    R13,R1              TRANSFER SAVEAREA BASE
         LA    R15,72(,R13)        POINT TO LINK PARAMETER AREA
         XC    0(8,R15),0(R15)     CLEAR LINK PARAMETER AREA
         LR    R1,R2               RESTORE ORIGINAL R1
         LINK  EP=IKJDAIR,SF=(E,(R15))
         LR    R1,R13              SET UP R1 FOR FREEMAIN
         LA    R0,80               SET UP R0 FOR FREEMAIN
         L     R13,4(,R13)         RESTORE ORIGINAL SAVEAREA BASE
         LR    R2,R15              SAVE R15 ACROSS FREEMAIN
         FREEMAIN R,LV=(0),A=(1)
         LR    R15,R2              RESTORE R15 (DAIR RETURN CODE)
         LM    0,12,20(R13)        RESTORE OTHER REGISTERS
         L     R14,12(,R13)        RESTORE RETURN ADDRESS
         BR    R14                 RETURN
         SPACE
         LTORG
DAIRPTR  DC    A(0)  V(IEFDB4D0)   EXTERNAL REFERENCE TO DAIR
         EJECT
***********************************************************************
*
*         INITIALIZATION
*
***********************************************************************
         SPACE
INIT     LA    R0,@DATAL
         LA    R1,1                SUBPOOL
         SLL   R1,24               TO LEFT BYTE
         OR    R0,R1               OVER R0
         GETMAIN R,LV=(0)
         ST    R13,4(,R1)          PUT OLD ADDRESS IN NEW SAVEAREA
         ST    R1,8(,R13)          PUT NEW ADDRESS IN OLD SAVEAREA
         LR    R13,R1              TRANSFER SAVEAREA BASE
         LR    R9,R1               WORKAREA BASE
         USING @DATA,R9
         SPACE
         LA    R1,WK99RB
         ST    R1,WK99RBP
         OI    WK99RBP,X'80'
         XC    WK99RB(20),WK99RB
         LA    R14,WK99RB
         USING S99RB,R14
         MVI   S99RBLN,20
         MVI   S99VERB,S99VRBAL
         LA    R1,WK99TUPL
         ST    R1,S99TXTPP
         DROP  R14                 S99RB
         SPACE
         XC    WK99TUPL(TUPL$LEN),WK99TUPL
         OI    WK99TUPL+TUPL$LEN-4,X'80'
         BR    R4                  TO IN08 OR IN1C OR IN30
         USING S99TUNIT,R4
         EJECT
***********************************************************************
*
*         DAIR 08 - DSNAME ALLOCATION
*
***********************************************************************
         SPACE
IN08     DC    0H'0'
         USING DAPB08,R3
         SPACE
         XC    DA08DARC(4),DA08DARC ZERO DARC AND CTRC
         SPACE
         TM    DA08CTL,DA08ATRL    ATTRIBUTE NAME PRESENT
         BZ    IN08ATOK            NO, BRANCH
         CLI   DA08ALN,C' '        YES, IS IT BLANK
         BE    EXIT4               YES, ERROR
IN08ATOK EQU   *
         SPACE
         CLI   DA08UNIT,0
         BE    EXIT4
         CLI   DA08SER,0
         BE    EXIT4
         CLI   DA08DSP1,DA08NEW
         BNE   IN08XNEW
*        CLI   DA08DPS2,DA08KEEP   NEW KEEP NOT ALLOWED BY IKJDAIR
*        BE    EXIT4                        BUT ITS OK WITH US
         CLI   DA08DPS2,DA08UCAT   NEW UNCAT NOT ALLOWED BY IKJDAIR
         BE    EXIT4                        OR US EITHER
IN08XNEW EQU   *
         EJECT
***********************************************************************
*
*         CHECK DSNAME
*
***********************************************************************
         SPACE
         MVI   DSNAME,C' '
         MVC   DSNAME+1(43),DSNAME
         MVI   WKDSRET,0
         L     R14,DA08PDSN        POINTER TO DSNAME
         LTR   R14,R14             IS DSNAME PRESENT
         BZ    IN08DSNN            NO, BRANCH
         MVI   WKDSRET,C'S'        INDICATE NAME IS SPECIFIED
         LH    R0,0(,R14)          YES, GET LENGTH
         LTR   R0,R0               IS LENGTH ZERO
         BZ    EXIT4               YES, ERROR
         CLI   2(R14),C' '         IS DSNAME BLANK
         BNE   IN08DSNL            NO, BRANCH
         CH    R0,=H'44'           YES, IS ITS LENGTH 44
         BNE   EXIT4               NO, ERROR
         CLI   2(R14),X'40'        IS IT BLANK
         BNE   EXIT4               NO, ERROR
         TM    DA08CTL,DA08UID     PREFIXING REQUESTED WITH BLANK NAME
         BO    EXIT4               YES, ERROR
         MVI   WKDSRET,C'R'        INDICATE RETURN DSNAME
         B     IN08DSOK
IN08DSNN TM    DA08CTL,DA08UID     PREFIXING REQUESTED WITH NO NAME
         BZ    IN08DSOK            NO, BRANCH
         B     EXIT4               YES, ERROR
IN08DSNL CH    R0,=H'44'           IS LENGTH GREATER THAN 44
         BH    EXIT4               YES, ERROR
         CLI   2(R14),C'&&'        TEMPORARY NAME
         BNE   IN08DSNM            NO, BRANCH
         TM    DA08CTL,DA08UID     IS PREFIXING REQUESTED WITH TEMP
         BZ    IN08DSOK            NO, BRANCH
         B     EXIT4               YES, ERROR
IN08DSNM EQU   *
         LA    R15,DSNAME          START WITH FIRST BYTE
         SLR   R1,R1               START WITH LENGTH ZERO
         STH   R1,DSNAMEL          START WITH LENGTH ZERO
         TM    DA08CTL,DA08UID     PREFIXING REQUESTED
         BZ    IN08DSNQ            NO, BRANCH
         L     R14,DAPLUPT         POINT TO USER PROFILE TABLE
         LTR   R14,R14             IS THERE A UPT
*        BZ    IN08DSNQ            NO, SKIP PREFIXING
         BZ    EXIT4               NO, ERROR
         USING UPT,R14
         IC    R1,UPTPREFL         GET LENGTH OF PREFIX
         LTR   R1,R1               IS IT ZERO
         BZ    IN08DSNQ            YES, SKIP PREFIXING
         B     *+10
         MVC   0(0,R15),UPTPREFX
         EX    R1,*-6              MOVE USERID TO DSNAME AREA
         DROP  R14                 UPT
         LA    R15,0(R1,R15)       POINT PAST USERID
         MVI   0(R15),C'.'         APPEND PERIOD
         LA    R15,1(,R15)         POINT PAST PERIOD
         LA    R1,1(,R1)           ADD 1 TO LENGTH
         STH   R1,DSNAMEL          STORE LENGTH OF USERID PLUS 1
IN08DSNQ EQU   *
         LR    R1,R0               SAVE LENGTH OF SPECIFIED NAME
         AH    R0,DSNAMEL          ADD LENGTH OF PREFIX OR ZERO
         STH   R0,DSNAMEL          SET COMBINED LENGTH
         CH    R0,=H'44'           IS LENGTH GREATER THAN 44
         BH    EXIT4               YES, ERROR
         L     R14,DA08PDSN        POINT TO DSN VALUE
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED MVC
         MVC   0(0,R15),2(R14)     (EXECUTED)
         EX    R1,*-6              MOVE DSN TO DSNAME (AFTER PREFIX)
IN08DSOK EQU   *
         SPACE
         MVI   DEFPTR,0            RESET DEFAULT SPACE SWITCH
         MVI   SV08CTL,0           RESET DEFAULT SPACE FLAGS
*
*              PROCESS DO-NOT-USE-EXISTING-ALLOCATION
*
         TM    DE08CTLX,DE08NEX
         BZ    NEXX
         LA    R14,WK99RB
         USING S99RB,R14
         OI    S99FLAG1,S99NOCNV
         DROP  R14
NEXX     EQU   *
*
*              PROCESS RETURN-DSORG
*
         LA    R4,WK99TXRO
         ST    R4,WK99TURO
         LA    R15,DALRTORG
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,2
         STH   R15,S99TULNG
         XC    S99TUPAR(2),S99TUPAR
         SPACE
*
*              PROCESS DDNAME
*
         MVI   WKDDRET,0
         LA    R4,WK99TXDD
         ST    R4,WK99TUDD
         CLI   DA08DDN,X'40'       DD TO BE RETURNED?
         BE    IN08DDR             YES - BRANCH
*
*              DDNAME IS SPECIFIED
*
         LA    R15,DALDDNAM
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8
         STH   R15,S99TULNG
         MVC   S99TUPAR(8),DA08DDN
         B     IN08DDX
*
*              DDNAME NOT SPECIFIED
*
IN08DDR  LA    R15,DALRTDDN
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8
         STH   R15,S99TULNG
         MVC   S99TUPAR(8),=CL8' '
         MVI   WKDDRET,C'R'
IN08DDX  EQU   *
*
*              PROCESS DSNAME
*
         LA    R4,WK99TXDS
         ST    R4,WK99TUDS
         CLI   WKDSRET,0           IS DSNAME POINTER PRESENT
         BE    IN08DSR             NO, BRANCH
         CLI   DSNAME,C' '         YES, IS IT 44 BLANKS
         BE    IN08DSR             YES, BRANCH
*
*              DSNAME IS SPECIFIED
*
         LA    R15,DALDSNAM
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LH    R15,DSNAMEL
         STH   R15,S99TULNG
         MVC   S99TUPAR(44),DSNAME
         B     IN08DSX
*
*              PROCESS RETURN-DSNAME
*
IN08DSR  LA    R15,DALRTDSN
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,44
         STH   R15,S99TULNG
         MVI   S99TUPAR,C' '
         MVC   S99TUPAR+1(43),S99TUPAR
IN08DSX  EQU   *
*
*              PROCESS MEMBER
*
         CLI   DA08MNM,X'40'
         BE    IN08MEX
         LA    R4,WK99TXME
         ST    R4,WK99TUME
         LA    R15,DALMEMBR
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8
         STH   R15,S99TULNG
         MVC   S99TUPAR(8),DA08MNM
IN08MEX  EQU   *
*
*              PROCESS UNIT
*
         CLI   DA08UNIT,X'40'
         BE    IN08UNX
         LA    R4,WK99TXUN
         ST    R4,WK99TUUN
         LA    R15,DALUNIT
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8
         STH   R15,S99TULNG
         MVC   S99TUPAR(8),DA08UNIT
IN08UNX  EQU   *
*
*              PROCESS VOLUME SERIAL
*
         CLI   DA08SER,X'40'
         BE    IN08VOX
         TM    DE08CTLX,DE08MSVG
         BO    IN08VOX
         LA    R4,WK99TXVL
         ST    R4,WK99TUVL
         LA    R15,DALVLSER
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,6
         STH   R15,S99TULNG
         MVC   S99TUPAR(6),DA08SER
IN08VOX  EQU   *
*
*              PROCESS STATUS (OLD, SHR, NEW, MOD)
*
         LA    R4,WK99TXD1
         ST    R4,WK99TUD1
         LA    R15,DALSTATS
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,1
         STH   R15,S99TULNG
         MVC   S99TUPAR(1),DA08DSP1
         CLI   S99TUPAR,0          IS IT ZEROES
         BNE   *+8                 NO
         MVI   S99TUPAR,1          YES, MAKE IT OLD
*
*              PROCESS NORMAL DISP (KEEP, DELETE, CATLG, UNCAT)
*
         CLI   DA08DPS2,0
         BE    IN08D2X
         LA    R4,WK99TXD2
         ST    R4,WK99TUD2
         LA    R15,DALNDISP
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,1
         STH   R15,S99TULNG
         MVC   S99TUPAR(1),DA08DPS2
IN08D2X  EQU   *
*
*              PROCESS CONDITIONAL DISP
*
         CLI   DA08DPS3,0
         BE    IN08D3X
         LA    R4,WK99TXD3
         ST    R4,WK99TUD3
         LA    R15,DALCDISP
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,1
         STH   R15,S99TULNG
         MVC   S99TUPAR(1),DA08DPS3
IN08D3X  EQU   *
*
*              PROCESS ATTRIBUTE LIST NAME
*
         TM    DA08CTL,DA08ATRL    IS ATTRIBUTE NAME PRESENT
         BZ    IN08ATX             NO, BRANCH
         LA    R4,WK99TXAT
         ST    R4,WK99TUAT
         LA    R15,DALDCBDD
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8               SET LENGTH INITIALLY TO 8
*        LA    R1,DA08ALN+7 POINT TO 8TH CHAR OF NAME
*IN08ATL CLI   0(R1),X'40'         BLANK?
*        BNE   IN08ATS             NO - BRANCH TO STORE LENGTH
*        BCTR  R15,0               YES - DECREMENT LENGTH BY 1
*        BCT   R1,IN08ATL          POINT BACK 1 CHAR AND BRANCH
IN08ATS  STH   R15,S99TULNG
         MVC   S99TUPAR(8),DA08ALN
IN08ATX  EQU   *
*
*              PROCESS PASSWORD
*
         CLI   DA08PSWD,X'40'
         BE    IN08PWX
         LA    R4,WK99TXPW
         ST    R4,WK99TUPW
         LA    R15,DALPASSW
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8
         STH   R15,S99TULNG
         MVC   S99TUPAR(8),DA08PSWD
IN08PWX  EQU   *
*
*              PROCESS DUMMY
*
         TM    DA08CTL,DA08DMMY
         BZ    IN08DMX
         LA    R4,WK99TXDM
         ST    R4,WK99TUDM
         LA    R15,DALDUMMY
         STH   R15,S99TUKEY
         LA    R15,0
         STH   R15,S99TUNUM
*
*              BYPASS SPACE PARAMETERS IF DUMMY
*
         B     IN08SPCX
IN08DMX  EQU   *
*
*              BYPASS SPACE PARAMETERS IF NOT NEW OR MOD
*
         CLI   DA08DSP1,DA08NEW
         BE    IN08SPC
         CLI   DA08DSP1,DA08MOD
         BNE   IN08SPCX
IN08SPC  EQU   *
         MVC   SV08BLK,DA08BLK     COPY
         MVC   SV08PQTY,DA08PQTY    SPACE INFO
         MVC   SV08SQTY,DA08SQTY     INTO AREA
         MVC   SV08DQTY,DA08DQTY      COMMON WITH
         MVC   SV08CTL,DA08CTL         DEFAULT SPACE
         NI    SV08CTL,DA08CYLS+DA08RLSE LEAVE ONLY THESE BITS
*
*              IF SPACE TYPE IS SPECIFIED, FORCE THE USE OF
*              DA08PQTY, EVEN IF IT IS ZERO.  THIS LOGIC
*              IS DIFFERENT FROM IKJDAIR, WHICH DOES NOT ALLOW
*              ZERO SPACE ALLOCATIONS.
*
         TM    DA08CTL,DA08TRKS+DA08ABKL
         BNZ   IN08PQ
*
*              IF PRIMARY SPACE IS NONZERO, GO PROCESS PQTY
*
         CLC   DA08PQTY+1(3),=XL3'00'
         BNE   IN08PQ
*
*              IF PRIMARY AND DIR ARE ZERO, LET SVC 99 GET DEFAULTS.
*
         CLC   DA08DQTY+1(3),=XL3'00'
         BE    IN08SPCX            BYPASS SPACE, LET SVC 99 DO IT.
*
*              PRIMARY SPACE IS ZERO, BUT DIRECTORY IS NOT.
*              IKJDAIR LOADS 'IEFAB445' TO GET DEFAULT SPACE VALUES.
*              WE CHOSE TO CODE THAT INFORMATION IN THIS
*              MODULE INSTEAD, IN THE SAME FORMAT AS IEFAB445.
*
         OI    DEFPTR,X'80'        INDICATE DEFAULTS PRESENT
         MVC   SV08BLK+1(3),DEFDRLH
         MVC   SV08PQTY+1(3),DEFPQTY
         MVC   SV08SQTY+1(3),DEFSQTY
         MVC   SV08DQTY,DA08DQTY   USE SPECIFIED DQTY
         MVI   SV08CTL,0
         TM    DEFTYPE,DEFTRK
         BNO   *+8
         OI    SV08CTL,DA08TRKS
         TM    DEFTYPE,DEFCYL
         BNO   *+8
         OI    SV08CTL,DA08CYLS
         TM    DEFTYPE,DEFBLK
         BNO   *+8
         OI    SV08CTL,DA08ABKL
         TM    DEFTYPE,DEFRLSE
         BNO   *+8
         OI    SV08CTL,DA08RLSE
         TM    DEFTYPE,DEFCNTIG
         BNO   *+8
         OI    SV08CTL,X'08'
         TM    DEFTYPE,DEFMIXG
         BNO   *+8
         OI    SV08CTL,X'04'
         TM    DEFTYPE,DEFALX
         BNO   *+8
         OI    SV08CTL,X'02'
         TM    DEFTYPE,DEFRND
         BNO   *+8
         OI    SV08CTL,X'01'
*
*              PRIMARY SPACE IS NONZERO OR SPACE TYPE IS SPECIFIED
*
IN08PQ   LA    R4,WK99TXSP
         ST    R4,WK99TUSP
         LA    R15,DALPRIME
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,3
         STH   R15,S99TULNG
         MVC   S99TUPAR(3),SV08PQTY+1
*
*              PROCESS SECONDARY SPACE
*
         CLC   SV08SQTY+1(3),=XL3'00'
         BE    IN08S2X
         LA    R4,WK99TXS2
         ST    R4,WK99TUS2
         LA    R15,DALSECND
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,3
         STH   R15,S99TULNG
         MVC   S99TUPAR(3),SV08SQTY+1
IN08S2X  EQU   *
*
*              PROCESS DIRECTORY BLOCKS
*
         CLC   SV08DQTY+1(3),=XL3'00'
         BE    IN08DIX
         LA    R4,WK99TXDI
         ST    R4,WK99TUDI
         LA    R15,DALDIR
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,3
         STH   R15,S99TULNG
         MVC   S99TUPAR(3),SV08DQTY+1
IN08DIX  EQU   *
*
*              DETERMINE SPACE TYPE
*
         TM    SV08CTL,DA08TRKS+DA08ABKL
         BZ    IN08TYX             BRANCH IF BOTH OFF
         LA    R15,DALCYL          IN CYLINDERS
         BO    IN08TY0             BRANCH IF BOTH ON
         LA    R15,DALTRK          IN TRACKS
         TM    SV08CTL,DA08TRKS
         BO    IN08TY0
*
*              PROCESS SPACE TYPE (AVERAGE BLOCK)
*
         LA    R4,WK99TXTY
         ST    R4,WK99TUTY
         LA    R15,DALBLKLN        IN AVERAGE BLOCKS
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,3
         STH   R15,S99TULNG
         MVC   S99TUPAR(3),SV08BLK+1
         B     IN08TYX
*
*              PROCESS SPACE TYPE (CYL OR TRK)
*
IN08TY0  LA    R4,WK99TXTY
         ST    R4,WK99TUTY
         STH   R15,S99TUKEY
         LA    R15,0
         STH   R15,S99TUNUM
IN08TYX  EQU   *
*
IN08SPCX EQU   *
*
*              IF NEW-OR-MOD AND ATRL.EQ.0 AND BLK.NE.0
*              THEN SET UP DCB BLKSIZE
*
         CLI   DA08DSP1,DA08NEW
         BE    IN08BK1
         CLI   DA08DSP1,DA08MOD
         BNE   IN08BKX
IN08BK1  TM    DA08CTL,DA08ATRL    IS THERE AN ATTRIBUTE LIST
         BO    IN08BKX             YES, BYPASS
         CLC   DA08BLK+2(2),=XL2'00' IS BLOCKS(SIZE) SPECIFIED
         BE    IN08BKX             YES, BYPASS
         CLC   DE08BLKS,=XL2'00'   IS DCB BLKSIZE SPECIFIED
         BE    IN08BKX             YES, BYPASS
*
*              DCB BLKSIZE FOR AVERAGE BLOCK WITHOUT ATTRIBUTE
*
         LA    R4,WK99TXBK
         ST    R4,WK99TUBK
         LA    R15,DALBLKSZ        DCB BLKSIZE
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,2
         STH   R15,S99TULNG
         MVC   S99TUPAR(2),DA08BLK+2
IN08BKX  EQU   *
*
*              PROCESS PERMANENTLY ALLOC
*
         TM    DA08CTL,DA08PERM
         BZ    IN08PEX
         LA    R4,WK99TXPE
         ST    R4,WK99TUPE
         LA    R15,DALPERMA
         STH   R15,S99TUKEY
         LA    R15,0
         STH   R15,S99TUNUM
IN08PEX  EQU   *
*
*              PROCESS RLSE
*
         TM    DEFPTR,X'80'        WERE DEFAULTS USED
         BZ    IN08RL1             NO, BRANCH
         TM    SV08CTL,DA08RLSE    YES, WAS RLSE IN DEFAULTS
         BO    IN08RLS             YES, BRANCH
         B     IN08RLX             NO, BYPASS
IN08RL1  TM    DA08CTL,DA08RLSE    RLSE SPECIFIED BY CALLER
         BZ    IN08RLX             NO, BRANCH
IN08RLS  LA    R4,WK99TXRL
         ST    R4,WK99TURL
         LA    R15,DALRLSE
         STH   R15,S99TUKEY
         LA    R15,0
         STH   R15,S99TUNUM
IN08RLX  EQU   *
*
*              PROCESS MSVGP
*
         TM    DE08CTLX,DE08MSVG
         BZ    IN08MSX
         CLI   DA08SER,X'40'
         BE    IN08MSX
         LA    R4,WK99TXMS
         ST    R4,WK99TUMS
         LA    R15,DALMSVGP
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8
         STH   R15,S99TULNG
         MVC   S99TUPAR(8),DA08SER
IN08MSX  EQU   *
*
*              DCB RECFM
*
         CLI   DE08RECF,0
         BE    IN08RECX
         LA    R4,WK99TXRF
         ST    R4,WK99TURF
         LA    R15,DALRECFM        DCB RECFM
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,1
         STH   R15,S99TULNG
         MVC   S99TUPAR(2),DE08RECF
IN08RECX EQU   *
*
*              DCB LRECL
*
         CLC   DE08LREC,=XL2'00'
         BE    IN08LREX
         LA    R4,WK99TXLR
         ST    R4,WK99TULR
         LA    R15,DALLRECL        DCB LRECL
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,2
         STH   R15,S99TULNG
         MVC   S99TUPAR(2),DE08LREC
IN08LREX EQU   *
*
*              DCB BLKSIZE
*
         CLC   DE08BLKS,=XL2'00'
         BE    IN08BLKX
         LA    R4,WK99TXBK
         ST    R4,WK99TUBK
         LA    R15,DALBLKSZ        DCB BLKSIZE
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,2
         STH   R15,S99TULNG
         MVC   S99TUPAR(2),DE08BLKS
IN08BLKX EQU   *
*
*               TAPE DATA SET SEQUENCE NUMBER
*
         CLC   DE08POS,=XL2'00'
         BE    IN08POSX
         LA    R4,WK99TXPO
         ST    R4,WK99TUPO
         LA    R15,DALDSSEQ        DATA SET SEQUENCE NUMBER
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,2
         STH   R15,S99TULNG
         MVC   S99TUPAR(2),DE08POS  MAX VALUE H'9999'
IN08POSX EQU   *
*
*               TAPE LABEL TYPE
*
         CLI   DE08LABL,0
         BE    IN08LBLX
         LA    R4,WK99TXLB
         ST    R4,WK99TULB
         LA    R15,DALLABEL        LABEL TYPE
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,1
         STH   R15,S99TULNG
         MVC   S99TUPAR(1),DE08LABL
IN08LBLX EQU   *
*
*               TAPE DENSITY
*
         CLI   DE08DEN,0
         BE    IN08DENX
         LA    R4,WK99TXDN
         ST    R4,WK99TUDN
         LA    R15,DALDEN          TAPE DENSITY
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,1
         STH   R15,S99TULNG
         MVC   S99TUPAR(1),DE08DEN
IN08DENX EQU   *
*
*               EXPIRATION DATE
*
         CLC   DE08EXPD,=XL3'00'
         BE    IN08EXPX
         LA    R4,WK99TXEX
         ST    R4,WK99TUEX
         LA    R15,DALEXPDT        EXPIRATION DATE
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,5
         STH   R15,S99TULNG
         SLR   R0,R0
         IC    R0,DE08EXYR         YY
         CVD   R0,DOUBLE
         OI    DOUBLE+7,X'0F'
         UNPK  S99TUPAR(2),DOUBLE+6(2)
         LH    R0,DE08EXJD         DDD
         CVD   R0,DOUBLE
         OI    DOUBLE+7,X'0F'
         UNPK  S99TUPAR+2(3),DOUBLE+6(2)
IN08EXPX EQU   *
         DROP  R3                  DAPB08
         B     ALLOC
         SPACE
         LTORG
         EJECT
***********************************************************************
*
*         DAIR 1C - TERMINAL ALLOCATION
*
***********************************************************************
         SPACE
IN1C     DC    0H'0'
         USING DAPB1C,R3
         SPACE
         TM    DA1CCTL,DA1CATRL    ATTRIBUTE NAME PRESENT
         BZ    IN1CATOK            NO, BRANCH
         CLI   DA1CALN,C' '        YES, IS IT BLANK
         BE    EXIT4               YES, ERROR
IN1CATOK EQU   *
*
*              PROCESS TERMINAL
*
         LA    R4,WK99TXTE
         ST    R4,WK99TUTE
         LA    R15,DALTERM
         STH   R15,S99TUKEY
         LA    R15,0
         STH   R15,S99TUNUM
*
*              PROCESS DDNAME
*
         MVI   WKDDRET,0
         LA    R4,WK99TXDD
         ST    R4,WK99TUDD
         CLI   DA1CDDN,X'40'       DD TO BE RETURNED?
         BE    IN1CDDR             YES - BRANCH
*
*              DDNAME IS SPECIFIED
*
         LA    R15,DALDDNAM
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8
         STH   R15,S99TULNG
         MVC   S99TUPAR(8),DA1CDDN
         B     IN1CDDX
*
*              DDNAME NOT SPECIFIED
*
IN1CDDR  LA    R15,DALRTDDN
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8
         STH   R15,S99TULNG
         MVC   S99TUPAR(8),=CL8' '
         MVI   WKDDRET,C'R'
IN1CDDX  EQU   *
*
*              PROCESS ATTRIBUTE LIST NAME
*
         TM    DA1CCTL,DA1CATRL    IS ATTRIBUTE NAME PRESENT
         BZ    IN1CNOAT            NO, BRANCH
         LA    R4,WK99TXAT
         ST    R4,WK99TUAT
         LA    R15,DALDCBDD
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8
         STH   R15,S99TULNG
         MVC   S99TUPAR(8),DA1CALN
IN1CNOAT EQU   *
*
*              PROCESS PERMANENTLY ALLOC
*
         TM    DA1CCTL,DA1CPERM
         BZ    IN1CNOPE
         LA    R4,WK99TXPE
         ST    R4,WK99TUPE
         LA    R15,DALPERMA
         STH   R15,S99TUKEY
         LA    R15,0
         STH   R15,S99TUNUM
IN1CNOPE EQU   *
*
*              DCB RECFM
*
         CLI   DE1CRECF,0
         BE    IN1CRECX
         LA    R4,WK99TXRF
         ST    R4,WK99TURF
         LA    R15,DALRECFM        DCB RECFM
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,1
         STH   R15,S99TULNG
         MVC   S99TUPAR(2),DE1CRECF
IN1CRECX EQU   *
*
*              DCB LRECL
*
         CLC   DE1CLREC,=XL2'00'
         BE    IN1CLREX
         LA    R4,WK99TXLR
         ST    R4,WK99TULR
         LA    R15,DALLRECL        DCB LRECL
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,2
         STH   R15,S99TULNG
         MVC   S99TUPAR(2),DE1CLREC
IN1CLREX EQU   *
*
*              DCB BLKSIZE
*
         CLC   DE1CBLKS,=XL2'00'
         BE    IN1CBLKX
         LA    R4,WK99TXBK
         ST    R4,WK99TUBK
         LA    R15,DALBLKSZ        DCB BLKSIZE
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,2
         STH   R15,S99TULNG
         MVC   S99TUPAR(2),DE1CBLKS
IN1CBLKX EQU   *
         DROP  R3                  DAPB1C
         B     ALLOC
         SPACE
         LTORG
         EJECT
***********************************************************************
*
*         DAIR 30 - SYSOUT ALLOCATION
*
***********************************************************************
         SPACE
IN30     DC    0H'0'
         USING DAPB30,R3
         SPACE
         TM    DA30CTL,DA30ATRL    ATTRIBUTE NAME PRESENT
         BZ    IN30ATOK            NO, BRANCH
         CLI   DA30ALN,C' '        YES, IS IT BLANK
         BE    EXIT4               YES, ERROR
IN30ATOK EQU   *
         SPACE
         MVI   WKDSRET,0
         L     R14,DA30PDSN        POINTER TO DSNAME
         LTR   R14,R14             IS DSNAME PRESENT
         BZ    IN30DSOK            NO, BRANCH
         CLC   0(2,R14),=H'44'     YES, IS ITS LENGTH 44
         BNE   EXIT4               NO, ERROR
         CLI   2(R14),X'40'        IS IT BLANK
         BNE   EXIT4               NO, ERROR
         MVI   WKDSRET,C'R'        YES, INDICATE RETURN DSNAME
IN30DSOK EQU   *
         SPACE
         CLI   DA30UNIT,0
         BE    EXIT4
         SPACE
*
*              PROCESS RETURN-DSNAME
*
         CLI   WKDSRET,C'R'
         BNE   IN30NODS
         LA    R4,WK99TXDS
         ST    R4,WK99TUDS
         LA    R15,DALRTDSN
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,44
         STH   R15,S99TULNG
         MVI   S99TUPAR,C' '
         MVC   S99TUPAR+1(43),S99TUPAR
IN30NODS EQU   *
*
*              PROCESS DDNAME
*
         MVI   WKDDRET,0
         LA    R4,WK99TXDD
         ST    R4,WK99TUDD
         CLI   DA30DDN,X'40'       DD TO BE RETURNED?
         BE    IN30DDR             YES - BRANCH
*
*              DDNAME IS SPECIFIED
*
         LA    R15,DALDDNAM
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8
         STH   R15,S99TULNG
         MVC   S99TUPAR(8),DA30DDN
         B     IN30SO
*
*              DDNAME NOT SPECIFIED
*
IN30DDR  LA    R15,DALRTDDN
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8
         STH   R15,S99TULNG
         MVC   S99TUPAR(8),=CL8' '
         MVI   WKDDRET,C'R'
*
*              PROCESS SYSOUT CLASS
*
IN30SO   LA    R4,WK99TXSO
         ST    R4,WK99TUSO
         LA    R15,DALSYSOU
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,1
         STH   R15,S99TULNG
         MVC   S99TUPAR(1),DA30OCLS
         CLI   DA30OCLS,X'40'      CLASS SPECIFIED?
         BE    IN30NOSO            NO - BRANCH
         CLI   DA30OCLS,X'00'      CLASS SPECIFIED?
         BNE   IN30SOX             YES - BRANCH
IN30NOSO SR    R15,R15             INDICATE NULL ENTRY
         STH   R15,S99TUNUM         FOR THIS KEY
IN30SOX  EQU   *
*
*              PROCESS PROGRAM NAME OR INTRDR
*
         CLI   DA30PGNM,X'40'
         BE    IN30NOPG
         CLI   DA30PGNM,X'00'
         BE    IN30NOPG
         LA    R4,WK99TXPG
         ST    R4,WK99TUPG
         LA    R15,DALSPGNM
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8               SET LENGTH INITIALLY TO 8
         LA    R1,DA30PGNM+7 POINT TO 8TH CHAR OF NAME
IN30PGLP CLI   0(R1),X'40'         BLANK?
         BNE   IN30PGLN            NO - BRANCH TO STORE LENGTH
         BCTR  R15,0               YES - DECREMENT LENGTH BY 1
         BCT   R1,IN30PGLP         POINT BACK 1 CHAR AND BRANCH
IN30PGLN STH   R15,S99TULNG
         MVC   S99TUPAR(8),DA30PGNM
IN30NOPG EQU   *
*
*              PROCESS ATTRIBUTE LIST NAME
*
         TM    DA30CTL,DA30ATRL    IS ATTRIBUTE NAME PRESENT
         BZ    IN30NOAT            NO, BRANCH
         LA    R4,WK99TXAT
         ST    R4,WK99TUAT
         LA    R15,DALDCBDD
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8               SET LENGTH INITIALLY TO 8
         LA    R1,DA30ALN+7 POINT TO 8TH CHAR OF NAME
IN30ATLP CLI   0(R1),X'40'         BLANK?
         BNE   IN30ATLN            NO - BRANCH TO STORE LENGTH
         BCTR  R15,0               YES - DECREMENT LENGTH BY 1
         BCT   R1,IN30ATLP         POINT BACK 1 CHAR AND BRANCH
IN30ATLN STH   R15,S99TULNG
         MVC   S99TUPAR(8),DA30ALN
IN30NOAT EQU   *
*
*              PROCESS FORM
*
         CLI   DA30FORM,X'40'      FORM?
         BE    IN30NOFO            NO - BRANCH
         CLI   DA30FORM,X'00'      FORM?
         BE    IN30NOFO
         LA    R4,WK99TXFO
         ST    R4,WK99TUFO
         LA    R15,DALSFMNO
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,4
         STH   R15,S99TULNG
         MVC   S99TUPAR(4),DA30FORM
IN30NOFO EQU   *
*
*              PROCESS PERMANENTLY ALLOC
*
         TM    DA30CTL,DA30PERM
         BZ    IN30NOPE
         LA    R4,WK99TXPE
         ST    R4,WK99TUPE
         LA    R15,DALPERMA
         STH   R15,S99TUKEY
         LA    R15,0
         STH   R15,S99TUNUM
IN30NOPE EQU   *
*
*              PROCESS COPIES
*
         CLI   DE30CPYS,1          IS COPIES ZERO OR 1
         BNH   IN30NOCO            YES, DO NOT SPECIFY COPIES
         LA    R4,WK99TXCO
         ST    R4,WK99TUCO
         LA    R15,DALCOPYS
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,1               SVC99 ONLY ALLOWS 1 BYTE.
         STH   R15,S99TULNG
         MVC   S99TUPAR(1),DE30CPYS
IN30NOCO EQU   *
*
*              PROCESS DEST
*
         CLI   DE30DEST,X'40'      DEST?
         BE    IN30NODE            NO - BRANCH
         CLI   DE30DEST,X'00'      DEST?
         BE    IN30NODE            NO - BRANCH
         LA    R4,WK99TXDE
         ST    R4,WK99TUDE
         LA    R15,DALSUSER
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8
         STH   R15,S99TULNG
         MVC   S99TUPAR(8),DE30DEST
IN30NODE EQU   *
*
*              PROCESS HOLD
*
         TM    DE30CTLX,DE30HOLD   HOLD?
         BZ    IN30NOHO            NO - BRANCH
         LA    R4,WK99TXHO
         ST    R4,WK99TUHO
         LA    R15,DALSHOLD
         STH   R15,S99TUKEY
         LA    R15,0
         STH   R15,S99TUNUM
IN30NOHO EQU   *
*
*              PROCESS FREE=CLOSE
*
         CLC   DA30PGNM,=CL8'INTRDR' IF INTERNAL READER
         BE    IN30FR              THEN FORCE FREE=CLOSE
         TM    DE30CTLX,DE30FC     FREE=CLOSE REQUESTED?
         BZ    IN30NOFR            NO - BRANCH
IN30FR   LA    R4,WK99TXFC
         ST    R4,WK99TUFC
         LA    R15,DALCLOSE
         STH   R15,S99TUKEY
         LA    R15,0
         STH   R15,S99TUNUM
IN30NOFR EQU   *
*
*              PROCESS FCB
*
         CLI   DE30FCB,X'40'       FCB?
         BE    IN30NOFC            NO - BRANCH
         CLI   DE30FCB,X'00'       FCB?
         BE    IN30NOFC            NO - BRANCH
         LA    R4,WK99TXFC
         ST    R4,WK99TUFC
         LA    R15,DALFCBIM
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,4
         STH   R15,S99TULNG
         MVC   S99TUPAR(4),DE30FCB
IN30NOFC EQU   *
*
*              PROCESS OTHER THINGS
*
         SPACE
*              UNLIKE IKJDAIR, THIS PROGRAM IGNORES THE
*              DA30UNIT FIELD, ALL FIELDS RELATED TO SPACE
*              (PRIMARY, SECONDARY, TRKS, ABKL, RLSE)
*              AND THE DUMMY FLAG.
         SPACE
*
*              DCB RECFM
*
         CLI   DE30RECF,0
         BE    IN30RECX
         LA    R4,WK99TXRF
         ST    R4,WK99TURF
         LA    R15,DALRECFM        DCB RECFM
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,1
         STH   R15,S99TULNG
         MVC   S99TUPAR(2),DE30RECF
IN30RECX EQU   *
*
*              DCB LRECL
*
         CLC   DE30LREC,=XL2'00'
         BE    IN30LREX
         LA    R4,WK99TXLR
         ST    R4,WK99TULR
         LA    R15,DALLRECL        DCB LRECL
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,2
         STH   R15,S99TULNG
         MVC   S99TUPAR(2),DE30LREC
IN30LREX EQU   *
*
*              DCB BLKSIZE
*
         CLC   DE30BLKS,=XL2'00'
         BE    IN30BLKX
         LA    R4,WK99TXBK
         ST    R4,WK99TUBK
         LA    R15,DALBLKSZ        DCB BLKSIZE
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,2
         STH   R15,S99TULNG
         MVC   S99TUPAR(2),DE30BLKS
IN30BLKX EQU   *
         DROP  R3                  DAPB30
         EJECT
***********************************************************************
*                                                                     *
*              ALLOCATE                                               *
*                                                                     *
***********************************************************************
         SPACE
ALLOC    LA    R1,WK99RBP
         SVC   99
*
*              TEST RETURN CODE
*
         LTR   R15,R15             WAS IT SUCCESSFUL
         BNZ   FAILED              NO, BRANCH
         SPACE
         USING DAPB08,R3
         CLI   1(R3),X'08'         IS THIS DA08
         BNE   RETORGX             NO, BRANCH
         LA    R4,WK99TXRO
         MVC   DA08DSO,S99TUPAR    RETURN 1 BYTE OF DSORG
RETORGX  EQU   *
         SPACE
         CLI   WKDSRET,C'R'        DSNAME TO BE RETURNED?
         BNE   IN08RDSX            NO - BRANCH
         LA    R4,WK99TXDS
         L     R15,DA08PDSN        OR DA30PDSN
         LH    R14,S99TULNG
         STH   R14,0(,R15)         RETURN LENGTH
         BCTR  R14,0               LENGTH MINUS 1 FOR EX
         B     *+10
         MVC   2(0,R15),S99TUPAR   (EXECUTED)
         EX    R14,*-6             MOVE DSNAME
         SR    R15,R15
IN08RDSX EQU   *
         SPACE
         CLI   WKDDRET,C'R'        DDNAME TO BE RETURNED?
         BNE   IN08RDDX
         LA    R4,WK99TXDD
         LA    R1,DA08DDN          OR DA30DDN
         CLI   1(R3),X'1C'         IS THIS DA1C
         BNE   *+8                 NO, SKIP NEXT INSTRUCTION
         LA    R1,DA1CDDN-DAPB1C(,R3) YES, POINT TO DA1CDDN
         MVC   0(8,R1),=CL8' '     PAD DAXXDDN WITH BLANKS
         LH    R14,S99TULNG
         BCTR  R14,0               LENGTH MINUS 1 FOR EX
         B     *+10
         MVC   0(0,R1),S99TUPAR    (EXECUTED)
         EX    R14,*-6             MOVE DDNAME
IN08RDDX EQU   *
         SPACE
         CLI   1(R3),X'08'         IS THIS DA08
         BNE   EXIT0               NO, BRANCH
         CLI   DA08MNM,C' '        WAS MEMBER SPECIFIED
         BE    EXIT0               NO, BRANCH
         TM    DA08DSO,DSORGPO     IS DSORG PO (OR POU)
         BO    EXIT0               YES, BRANCH
*
*               MEMBER SPECIFIED FOR NON-PDS.  UNALLOCATE IT.
*
         LA    R14,WK99RB
         USING S99RB,R14
         MVI   S99VERB,S99VRBUN
         LA    R1,WK99FREE
         ST    R1,S99TXTPP
         DROP  R14                 S99RB
*
         LA    R4,WK99FXDD
         ST    R4,WK99FREE
         LA    R15,DUNDDNAM
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8
         STH   R15,S99TULNG
         MVC   S99TUPAR(8),DA08DDN
*
         LA    R4,WK99FXDD
         ST    R4,WK99FREE+4
         LA    R15,DUNREMOV
         STH   R15,S99TUKEY
         LA    R15,0
         STH   R15,S99TUNUM
*
         OI    WK99FREE+4,X'80'
         LA    R1,WK99RBP
         SVC   99
         CLI   WKDDRET,C'R'        WAS DDNAME ORIGINALLY BLANK
         BNE   *+10                NO, BRANCH AROUND MVC
         MVC   DA08DDN,=CL8' '     YES, RESTORE THE BLANKS
         MVC   DA08DARC,=X'0330'   SET ERROR CODE IN DARC
         LA    R15,12
         B     EXIT
*
*         RETURN TO CALLER
*
EXIT4    LA    R15,4               RETURN CODE 4
         B     EXIT
EXIT0    SR    15,15               RETURN CODE ZERO
EXIT     LA    R0,@DATAL
         LA    R1,1                SUBPOOL
         SLL   R1,24               TO LEFT BYTE
         OR    R0,R1               OVER R0
         LR    R1,R13              AREA TO BE FREED
         L     R13,4(,R13)         RESTORE OLD R13
         LR    R2,R15              SAVE RETURN CODE
         FREEMAIN R,A=(1),LV=(0)
         LR    R15,R2              RESTORE RETURN CODE
         LM    0,12,20(R13)        RESTORE OLD REGISTERS
         L     R14,12(,R13)        RESTORE RETURN ADDRESS
         BR    R14                 RETURN
         SPACE 3
         LTORG
         DC    0D'0'
DEFAULTS DS    0CL21               FROM IEFAB445
DEFSPACE DS    0CL13
DEFPQTY  DC    AL3(10)
DEFSQTY  DC    AL3(50)
DEFDRLH  DC    AL3(1000)
DEFDQTY  DC    AL3(0)
DEFTYPE  DC    X'30'
DEFTRK   EQU   X'80'
DEFCYL   EQU   X'40'
DEFBLK   EQU   X'20'
DEFRLSE  EQU   X'10'
DEFCNTIG EQU   X'08'
DEFMIXG  EQU   X'04'
DEFALX   EQU   X'02'
DEFRND   EQU   X'01'
DEFUNIT  DC    CL8'SYSALLDA'
         DC    0D'0'
         EJECT
***********************************************************************
*
*         DAIR RETURN CODES AND ERROR CODES
*
***********************************************************************
*
*         DAIR RETURN CODES
*
*           0 - SUCCESS
*           4 - INVALID PARAMETER LIST
*           8 - ERROR IN CATALOG MANAGEMENT, CTRC
*          12 - ERROR IN DYNAMIC ALLOCATION, DARC
*          16 - NO TIOT ENTRIES AVAILABLE          FROM 043C, 0450
*          20 - DDNAME UNAVAILABLE                 FROM 0410
*          24 - DSN IS PART OF A CONCATENATION
*          28 - DD REFERBACK NOT FOUND             FROM 0454
*          32 - DATA REQUESTED AS NEW EXISTS       FROM 0448
*          36 - ERROR IN IKJEHCIR
*          40 - RETURN AREA FOR QUALIFIERS SMALL
*          44 - DATA SET FOUND BUT MARKED DELETE   FROM 044C
*          48 - RESERVED
*          52 - REQUEST DENIED BY EXIT IEFDB401    FROM RC=8
*
***********************************************************************
*
*         DAIR ERROR CODES (IN DAXXDARC)
*
*          0304 - DD NOT SPECIFIED
*          0308 - DD NOT FOUND
*          0314 - DECAT WOULD CAUSE DUPES      FROM 0424
*          0318 - INVALID DDNAME               FROM 035C FOR 0001
*          031C - INVALID MEMBER               FROM 035C FOR 0003
*          0320 - INVALID DSNAME               FROM 035C FOR 0002
*          0324 - INVALID SYSOUT PGM           FROM 035C FOR 0019
*          0328 - INVALID SYSOUT FORM          FROM 035C FOR 001A
*          032C - INVALID SYSOUT CLASS         FROM 035C FOR 0018
*          0330 - MEMBER SPECIFIED BUT NOT PDS
*          0334 - DSNAME LENGTH GT 44          FROM 037C FOR 0002
*          0338 - INVALID DISP                 FROM 035C FOR 0004,5,6
*
***********************************************************************
         EJECT
*
*               CONVERT ERROR CODES TO DAIR CODES
*
FAILED   CLI   1(R3),X'1C'         IS THIS A TYPE 1C
         BNE   FAILED30
         TM    DE1CCTLX-DAPB1C(R3),DE1CMSG
         BO    FAILMSG             YES, BRANCH
         B     FAILNMSG            NO, BYPASS MESSAGE
FAILED30 CLI   1(R3),X'30'         IS THIS A TYPE 30
         BNE   FAILED08
         TM    DE30CTLX-DAPB30(R3),DE30MSG
         BO    FAILMSG             YES, BRANCH
         B     FAILNMSG            NO, BYPASS MESSAGE
FAILED08 TM    DE08CTLX,DE08MSG    AUTOMATIC MESSAGE
         BZ    FAILNMSG            NO, BRANCH
FAILMSG  BAL   R8,PUTMSG           YES, CALL IKJEFF18
FAILNMSG LA    R14,WK99RB
         USING S99RB,R14
FAIL04   CH    R15,=H'4'           UNABLE TO ALLOCATE
         BNE   FAIL08
FAIL04A  CLC   S99ERROR,=X'0410'   RCDDUNAV
         BNE   FAIL04B
         LA    R15,20              RETURN CODE 20
         B     FAIL04X
FAIL04B  CLC   S99ERROR,=X'0424'   RCDCONDD, DECAT WOULD MAKE DUPLICATE
         BNE   FAIL04C
         MVC   DA08DARC,=X'0314'   DRDUPEDD
         LA    R15,12
         B     FAIL04X
FAIL04C  CLC   S99ERROR,=X'043C'   RCNTUNLC, DYNAMNBR TOO SMALL
         BE    FAIL04C1
         CLC   S99ERROR,=X'0450'   RCLIMITS, MORE THAN 1635
         BNE   FAIL04D
FAIL04C1 LA    R15,16              RETURN CODE 16
         B     FAIL04X
FAIL04D  CLC   S99ERROR,=X'0448'   RCNEWFND,
         BNE   FAIL04E
         LA    R15,32              RETURN CODE 32
         B     FAIL04X
FAIL04E  CLC   S99ERROR,=X'044C'   RCDELETE,
         BNE   FAIL04F
         LA    R15,44              RETURN CODE 44
         B     FAIL04X
FAIL04F  CLC   S99ERROR,=X'0454'   RCDCBRNF, ATTRIB DD NOT FOUND
         BNE   FAIL04G
         LA    R15,28              RETURN CODE 28
         B     FAIL04X
FAIL04G  CLI   S99ERROR,X'17'      LOCATE ERROR
         BE    FAIL04G1
         CLI   S99ERROR,X'57'      CATALOG ERROR
         BNE   FAIL04H
FAIL04G1 SLR   R1,R1
         IC    R1,S99ERROR+1
         STH   R1,DA08CTRC         CTRC
         LA    R15,8               RETURN CODE 8
         CLI   S99ERROR,X'17'      LOCATE
         BNE   FAIL04X
         MVC   DA08DARC,S99ERROR   DARC TOO IF LOCATE
         B     FAIL04X
FAIL04H  MVC   DA08DARC,S99ERROR   DARC SAME AS S99ERROR
         LA    R15,12              RETURN CODE 12
FAIL04X  B     EXIT
         SPACE
FAIL08   CH    R15,=H'8'           REQUEST DENIED BY EXIT
         BNE   FAIL12
         LA    R15,52              REQUEST DENIED
         B     EXIT
         SPACE
FAIL12   CH    R15,=H'12'          INVALID PARAMETER
         BNE   *+4
         CLC   S99ERROR,=X'035C'   RCINPARM
         BNE   FAIL12V             NO, BRANCH
FAIL12A  CLC   S99INFO,=AL2(DALDDNAM)
         BNE   FAIL12B
         MVC   DA08DARC,=X'0318'   DRDDNINV, INVALID DDNAME
         B     FAIL12X
FAIL12B  CLC   S99INFO,=AL2(DALDSNAM)
         BNE   FAIL12C
         MVC   DA08DARC,=X'0320'   DRDSNINV, INVALID DSNAME
         B     FAIL12X
FAIL12C  CLC   S99INFO,=AL2(DALMEMBR)
         BNE   FAIL12D
         MVC   DA08DARC,=X'031C'   DRMBRINV, INVALID MEMBER NAME
         B     FAIL12X
FAIL12D  CLC   S99INFO,=AL2(DALSTATS)
         BE    FAIL12D1
         CLC   S99INFO,=AL2(DALNDISP)
         BE    FAIL12D1
         CLC   S99INFO,=AL2(DALCDISP)
         BNE   FAIL12E
FAIL12D1 MVC   DA08DARC,=X'0338'   DRDSPINV, INVALID DISP
         B     FAIL12X
FAIL12E  CLC   S99INFO,=AL2(DALSPGNM)
         BNE   FAIL12F
         MVC   DA08DARC,=X'0324'   DRSYSPGM, INVALID SYSOUT PGM
         B     FAIL12X
FAIL12F  CLC   S99INFO,=AL2(DALSFMNO)
         BNE   FAIL12G
         MVC   DA08DARC,=X'0328'   DRSYSFRM, INVALID FORM
         B     FAIL12X
FAIL12G  CLC   S99INFO,=AL2(DALSYSOU) (THIS TEST NOT IN IKJDAIR)
         BNE   FAIL12S
         MVC   DA08DARC,=X'032C'   DR      , INVALID CLASS
         B     FAIL12X
FAIL12V  CLC   S99ERROR,=X'037C'   RCINKEYL, INVALID LENGTH
         BNE   FAIL12S
         CLC   S99INFO,=AL2(DALDSNAM)
         BNE   FAIL12S
         MVC   DA08DARC,=X'0334'   DRDSNLEN
         B     FAIL12X
FAIL12S  LA    R15,4               INVALID PARAMETER
*        MVC   DA08DARC,S99ERROR   (DARC NOT EXAMINED IF RC 4)
         B     EXIT
FAIL12X  LA    R15,12
         B     EXIT
         DROP  R14                 S99RB
*
*               ISSUE APPROPRIATE ERROR MESSAGE
*
PUTMSG   LA    R1,OURCPPL
         USING CPPL,R1
         MVC   CPPLUPT(4),DAPLUPT
         MVC   CPPLPSCB(4),DAPLPSCB
         MVC   CPPLECT(4),DAPLECT
         DROP  R1                  CPPL
         LA    R1,WKDFAREA
         USING DFDSECTD,R1
         ST    R15,WKDFRC          STORE SVC 99 RETURN CODE
         LA    R15,WKDFRC
         ST    R15,DFRCP           STORE ADDRESS OF RETURN CODE
         LA    R15,WK99RB
         ST    R15,DFS99RBP        STORE ADDRESS OF SVC 99 REQUEST BLK
         SR    R15,R15
         ST    R15,WKJEFF02        STORE ZERO IN IKJEFF02 ADDRESS
         LA    R15,WKJEFF02
         ST    R15,DFJEFF02        STORE ADDRESS OF ZERO
         LA    R15,DFSVC99
         STH   R15,WKDFID          STORE TYPE OF REQUEST (SVC 99)
         LA    R15,WKDFID
         ST    R15,DFIDP           STORE ADDRESS OF TYPE
         LA    R15,OURCPPL
         ST    R15,DFCPPLP         STORE CPPL ADDRESS OR ZERO
*        CLC   DFCPPLP+1(3),=AL3(0) CPPL ADDRESS SUPPLIED
*        BNE   *+8                 YES - USE PUTLINE
*        OI    WKDFID,DFWTP        NO - USE WRITE-TO-PROGRAMMER
         XC    LINKAREA(8),LINKAREA
         LINK  EP=IKJEFF18,SF=(E,LINKAREA)
         L     R15,WKDFRC          RETURN SVC 99 RETURN CODE
         BR    R8
         SPACE
         LTORG
         DC    0D'0'
         SPACE 3
***********************************************************************
*                                                                     *
*         MAP OF GETMAINED WORK SPACE                                 *
*                                                                     *
***********************************************************************
         SPACE
@DATA    DSECT
         DS    18F
WK99RBP  DS    A                   SVC 99 RB POINTER
WK99RB   DS    5A                  SVC 99 REQUEST BLOCK
*
* TEXT UNIT POINTERS
*
WK99TUPL DS    0A                  SVC 99 TEXT LIST POINTERS
WK99TURO DS    A       08          TEXT UNIT POINTER, RETURN DSORG
WK99TUDS DS    A       08 30       TEXT UNIT POINTER, DSNAME
WK99TUDD DS    A       08 30       TEXT UNIT POINTER, DDNAME
WK99TUTE DS    0A            1C    TEXT UNIT POINTER, TERMINAL
WK99TUSO DS    A          30       TEXT UNIT POINTER, SYSOUT CLASS
WK99TUCO DS    A          30       TEXT UNIT POINTER, COPIES
WK99TUDE DS    A          30       TEXT UNIT POINTER, DEST
WK99TUHO DS    A          30       TEXT UNIT POINTER, HOLD
WK99TUPG DS    A          30       TEXT UNIT POINTER, PGM NAME
WK99TUPE DS    A       08 30       TEXT UNIT POINTER, PERM
WK99TUFR DS    A          30       TEXT UNIT POINTER, FREE=CLOSE
WK99TUFC DS    A          30       TEXT UNIT POINTER, FCB
WK99TUFO DS    A       08 30       TEXT UNIT POINTER, FORM
WK99TUAT DS    A       08          TEXT UNIT POINTER, ATTR LIST NAME
WK99TUME DS    A       08          TEXT UNIT POINTER, MEMBER
WK99TUUN DS    A       08          TEXT UNIT POINTER, UNIT
WK99TUMS DS    0A      08          TEXT UNIT POINTER, MSVGP
WK99TUVL DS    A       08          TEXT UNIT POINTER, VOLUME SERIAL
WK99TUD1 DS    A       08          TEXT UNIT POINTER, STATUS
WK99TUD2 DS    A       08          TEXT UNIT POINTER, NORMAL DISP
WK99TUD3 DS    A       08          TEXT UNIT POINTER, CONDITIONAL DISP
WK99TUPW DS    A       08          TEXT UNIT POINTER, PASSWORD
WK99TUDM DS    A       08          TEXT UNIT POINTER, DUMMY
WK99TUSP DS    A       08          TEXT UNIT POINTER, PRIMARY SPACE
WK99TUS2 DS    A       08          TEXT UNIT POINTER, SECONDARY SPACE
WK99TUDI DS    A       08          TEXT UNIT POINTER, DIRECTORY BLOCKS
WK99TUTY DS    A       08          TEXT UNIT POINTER, SPACE TYPE
WK99TURL DS    A       08          TEXT UNIT POINTER, RLSE
WK99TULR DS    A       08 30       TEXT UNIT POINTER, DCB LRECL
WK99TUBK DS    A       08 30       TEXT UNIT POINTER, DCB BLKSIZE
WK99TURF DS    A       08 30       TEXT UNIT POINTER, DCB RECFM
WK99TUPO DS    A       08          TEXT UNIT POINTER, TAPE POS
WK99TULB DS    A       08          TEXT UNIT POINTER, LABEL TYPE
WK99TUDN DS    A       08          TEXT UNIT POINTER, TAPE DENSITY
WK99TUEX DS    A       08          TEXT UNIT POINTER, EXPDT
         DS    A                   HI ORDER BIT ON
TUPL$LEN EQU   *-WK99TUPL
*
WK99FREE DS    2A                  TEXT UNIT POINTERS, UNALLOCATE
WK99FXDD DS    3H,CL8              TEXT UNIT, DDNAME UNALLOCATE
WK99FXRM DS    3H                  TEXT UNIT, REMOVE IN-USE ATTRIBUTE
*
* TEXT UNITS
*
WK99TXRO DS    3H,H                TEXT UNIT, RETURN DSORG
WK99TXDS DS    3H,CL44             TEXT UNIT, DSNAME
WK99TXDD DS    3H,CL8              TEXT UNIT, DDNAME
WK99TXSO DS    3H,CL1              TEXT UNIT, SYSOUT CLASS
WK99TXCO DS    3H,H                TEXT UNIT, COPIES
WK99TXDE DS    3H,CL8              TEXT UNIT, DEST
WK99TXHO DS    3H                  TEXT UNIT, HOLD=YES
WK99TXPG DS    3H,CL8              TEXT UNIT, PROGRAM NAME
WK99TXPE DS    3H                  TEXT UNIT, PERM
WK99TXFR DS    3H                  TEXT UNIT, FREE=CLOSE
WK99TXFC DS    3H,CL4              TEXT UNIT, FCB
WK99TXFO DS    3H,CL4              TEXT UNIT, FORM NUMBER
WK99TXAT DS    3H,CL8              TEXT UNIT, ATTRIBUTE LIST NAME
WK99TXME DS    3H,CL8              TEXT UNIT, MEMBER
WK99TXUN DS    3H,CL8              TEXT UNIT, UNIT
WK99TXMS DS    3H,CL8              TEXT UNIT, MSVGP
WK99TXVL DS    3H,CL6              TEXT UNIT, VOLUME SERIAL
WK99TXD1 DS    3H,CL1              TEXT UNIT, STATUS
WK99TXD2 DS    3H,CL1              TEXT UNIT, NORMAL DISP
WK99TXD3 DS    3H,CL1              TEXT UNIT, CONDITIONAL DISP
WK99TXPW DS    3H,CL8              TEXT UNIT, PASSWORD
WK99TXDM DS    3H                  TEXT UNIT, DUMMY
WK99TXSP DS    3H,CL3              TEXT UNIT, PRIMARY SPACE
WK99TXS2 DS    3H,CL3              TEXT UNIT, SECONDARY SPACE
WK99TXDI DS    3H,CL3              TEXT UNIT, DIRECTORY BLOCKS
WK99TXTY DS    3H,CL3              TEXT UNIT, SPACE TYPE AND BLOCK LEN
WK99TXRL DS    3H                  TEXT UNIT, RLSE
WK99TXLR DS    3H,H                TEXT UNIT, DCB LRECL
WK99TXBK DS    3H,H                TEXT UNIT, DCB BLKSIZE
WK99TXRF DS    3H,C                TEXT UNIT, DCB RECFM
WK99TXPO DS    3H,H                TEXT UNIT, TAPE POS
WK99TXLB DS    3H,C                TEXT UNIT, TAPE LABEL TYPE
WK99TXDN DS    3H,C                TEXT UNIT, TAPE DENSITY
WK99TXEX DS    3H,CL5              TEXT UNIT, EXPDT
WK99TXTE DS    3H                  TEXT UNIT, TERMINAL
*
*
*
WKDFAREA DS    5F                  IKJEFF18 PARAMETER BLOCK
WKDFRC   DS    F                   SVC 99 RETURN CODE
WKJEFF02 DS    F                   MESSAGE ROUTINE (ZERO)
WKDFID   DS    H                   TYPE OF FAILURE (SVC 99)
WKDSRET  DS    C                   SWITCH
WKDDRET  DS    C                   SWITCH
LINKAREA DS    2F
OURCPPL  DS    4F
DSNAMEL  DS    H
DSNAME   DS    CL44
SV08BLK  DS    F
SV08PQTY DS    F
SV08SQTY DS    F
SV08DQTY DS    F
SV08CTL  DS    C
DEFPTR   DS    C
DOUBLE   DS    D
         DS    0D
@DATAL   EQU   *-@DATA
         EJECT
         IEFZB4D0
         EJECT
         IEFZB4D2
         EJECT
         IKJEFFDF DFDSECT=YES
         SPACE 3
         IKJCPPL
         SPACE 3
         IKJUPT
         SPACE 3
         IKJDAPL
         SPACE 3
         IKJDAP08
DE08CTLX DS    X        FLAGS
DE08MSG  EQU   X'80'    AUTOMATIC ERROR MESSAGE
DE08FC   EQU   X'40'    FREE=CLOSE (NOT IMPLEMENTED YET)
DE08MSVG EQU   X'20'    MSVGP IS IN VOL SER FIELD
DE08RET  EQU   X'10'    RETENTION PERIOD, NOT EXPIRATION DATE
DE08NEX  EQU   X'01'    DO NOT USE AN EXISTING ALLOCATION.
DE08RECF DS    X        DCB RECFM
DE08LREC DS    H        DCB LRECL
DE08BLKS DS    H        DCB BLKSIZE
DE08DSOR DS    H        DCB DSORG
*                       END OF 8 BYTE SECTION
         DS    X        RESERVED
DE08EXPD DS    0XL3     EXP DATE, BINARY, 1 BYTE YEAR, 2 BYTES DAY
DE08EXYR DS    X        EXP DATE YEAR, BINARY
DE08EXJD DS    0H       EXP DATE JULIAN DAY, BINARY
DE08RETP DS    H        RETENTION PERIOD (0-9999)
DE08POS  DS    H        TAPE DATA SET SEQUENCE NUMBER (0-9999)
DE08LABL DS    X        TAPE LABEL TYPE (HEX 01 02 10 FOR NL SL BLP)
DE08DEN  DS    X        TAPE DENSITY (HEX 83 C3 D3 FOR 800 1600 6250)
*                       END OF 8 BYTE SECTION
*              DAPB08 HAS BEEN EXTENDED BY 16 BYTES
         SPACE 3
         IKJDAP1C
DE1CCTLX DS    X        FLAGS
DE1CMSG  EQU   X'80'    AUTOMATIC ERROR MESSAGE
DE1CRECF DS    X        DCB RECFM
DE1CLREC DS    H        DCB LRECL
DE1CBLKS DS    H        DCB BLKSIZE
         DS    XL2      RESERVED
*              DAPB1C HAS BEEN EXTENDED BY 08 BYTES
         SPACE 3
         IKJDAP30
DE30CTLX DS    X        FLAGS
DE30MSG  EQU   X'80'    AUTOMATIC ERROR MESSAGE
DE30FC   EQU   X'40'    FREE=CLOSE
DE30HOLD EQU   X'20'    HOLD
DE30RECF DS    X        DCB RECFM
DE30LREC DS    H        DCB LRECL
DE30BLKS DS    H        DCB BLKSIZE
         DS    XL2      RESERVED
*                       END OF 8 BYTE SECTION
DE30CPYS DS    AL1      COPIES
         DS    XL3      RESERVED
DE30FCB  DS    CL4      FCB
DE30DEST DS    CL8      DEST
*              DAPB30 HAS BEEN EXTENDED BY 24 BYTES
         SPACE 3
NL       EQU   X'01'    TAPE LABEL TYPE, NO LABELS
SL       EQU   X'02'    STANDARD
NSL      EQU   X'04'    NONSTANDARD
SUL      EQU   X'0A'    STANDARD AND USER
BLP      EQU   X'10'    BYPASS LABEL PROCESSING
LTM      EQU   X'21'    DOS LEADING TAPE MARK
AL       EQU   X'40'    ANSI
AUL      EQU   X'48'    ANSI AND USER
         SPACE 3
DEN0     EQU   X'03'    200 BPI
DEN1     EQU   X'43'    556 BPI
DEN2     EQU   X'83'    800 BPI
DEN3     EQU   X'C3'    1600 BPI
DEN4     EQU   X'D3'    6250 BPI
         SPACE 3
T7C      EQU   X'13'    DATA CONVERSION
T7E      EQU   X'23'    EVEN PARITY
T7ET     EQU   X'2B'    EVEN PARITY, BCD-EBCDIC TRANSLATION
T7T      EQU   X'3B'    BCD-EBCDIC TRANSLATION
         SPACE 3
RECFMU   EQU   X'C0'    UNDEFINED LENGTH
RECFMF   EQU   X'80'    FIXED LENGTH
RECFMV   EQU   X'40'    VARIABLE LENGTH
RECFMT   EQU   X'20'    TRKOV
RECFMB   EQU   X'10'    BLOCKED
RECFMS   EQU   X'08'    VARIABLE SPANNED OR FIXED STANDARD
RECFMA   EQU   X'04'    ASA CC
RECFMM   EQU   X'02'    MACHINE CC
         SPACE 3
DSORGPO  EQU   X'02'    PARTITIONED
DSORGPOU EQU   X'03'    PARTITIONED UNMOVEABLE
DSORGDA  EQU   X'20'    DIRECT ACCESS
DSORGDAU EQU   X'21'    DIRECT ACCESS UNMOVEABLE
DSORGPS  EQU   X'40'    SEQUENTIAL
DSORGPSU EQU   X'41'    SEQUENTIAL UNMOVEABLE
         SPACE 3
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
