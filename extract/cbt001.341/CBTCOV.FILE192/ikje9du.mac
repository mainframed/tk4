         TITLE '   D U P   '
***********************************************************************
*                                                                     *
*        'DUP' (DUPLICATE) TSO SUBCOMMAND OF EDIT                     *
*                                                                     *
***********************************************************************
*
*        WRITTEN BY. BILL GODFREY,  PLANNING RESEARCH CORPORATION.
*        INSTALLATION. PRC COMPUTER CENTER INC, MCLEAN VA.
*        DATE WRITTEN. JANUARY 11 1979.
*        DATE UPDATED. FEBRUARY 20 1981.
*        ATTRIBUTES. RE-ENTRANT.
*        MACROS. GETMAIN, FREEMAIN, LINK, PUTLINE,
*            IKJEBESH, IKJEBECA,
*            IKJCPPL, IKJPPL, IKJECT,
*            IKJPARM, IKJIDENT, IKJKEYWD, IKJNAME, IKJENDP
*        DESCRIPTION.
*            THIS SUBCOMMAND DUPLICATES A SPECIFIED LINE
*            IN THE EDIT DATA SET, PLACING ONE OR MORE COPIES
*            AT (OR AFTER) A SPECIFIED LINE.
*        LOG OF CHANGES.
*            20FEB81 - LINE2 OPERAND, IF AN ASTERISK (*),
*                      NOW MEANS CURRENT LINE.  PRIOR TO THIS
*                      CHANGE, IT MEANT SAME-AS-FIRST-OPERAND.
*                      LINE2 OPERAND MAY NOW BE A DOLLAR SIGN($),
*                      TO MEAN SAME-AS-FIRST-OPERAND.
* )F FUNCTION -
*   THE DUP SUBCOMMAND DUPLICATES A LINE ONE OR MORE TIMES.
*
*   THE OPERANDS SPECIFY THE LINE NUMBER TO BE DUPLICTED,
*   THE LOCATION WHERE THE DUPLICATES ARE TO BE INSERTED,
*   HOW MANY DUPLICATES TO MAKE, AND THE LINE NUMBER INCREMENT
*   TO USE WHEN INSERTING THE NEW LINES.
*
*   IF THE EXISTING SEQUENCE NUMBERS DO NOT ALLOW THE SPECIFIED
*   NUMBER OF DUPLICATES TO BE INSERTED THE DUPLICATING TERMINATES
*   AND A MESSAGE IS ISSUED, UNLESS THE 'REPLACE' KEYWORD IS USED
*   WHICH WILL CAUSE SOME EXISTING LINES TO BE DELETED IF NECESSARY
*
*   IF LINES 10 20 30 AND 40 EXIST AND YOU DUP 3 COPIES OF LINE 10
*   TO LINE 15, YOU WILL CREATE LINES 15, 16, AND 17.  BUT IF YOU
*   SPECIFY AN INCREMENT OF 10, YOU WILL CREATE LINES 15, 25, AND
*   35, AND (SURPRISE) LINES 20 AND 30 REMAIN UNCHANGED.
*   IF YOU SPECIFY AN INCREMENT OF 5, YOU WILL CREATE LINE 15 ONLY,
*   THEN DUP WILL STOP BECAUSE THE NEXT INCREMENT YIELDS 20, WHICH
*   ALREADY EXISTS.  IF YOU ALSO SPECIFIED REPLACE, LINE 20 WOULD
*   BE REPLACED WITH THE DUPLICATED LINE AND DUP WOULD CONTINUE.
*
*   DUP IS NOT AVAILABLE FOR UNNUMBERED DATA.
         EJECT
* )X SYNTAX -
*          DUP   'LINENUM1'  'LINENUM2'  'COPIES'  'INCREMENT'  I/R
*   REQUIRED - NONE
*   DEFAULTS - LINENUM1 -- CURRENT LINE
*              LINENUM2 -- LINE AFTER LINENUM1
*              INCREMENT -- 1
*              I/R       -- I
*              IF NO OPERANDS ARE SPECIFIED, THE CURRENT LINE
*              WILL BE DUPLICATED RIGHT AFTER ITSELF ONE TIME.
*   ALIAS    - NONE
* )O OPERANDS -
*   'LINENUM1'  - THE LINE NUMBER TO BE DUPLICATED.
*                 '*' MEANS THE CURRENT LINE.
*   'LINENUM2'  - THE LINE NUMBER WHERE THE DUPLICATES ARE TO BE
*                 INSERTED.  IF AN EXISTING NUMBER IS SPECIFIED
*                 THEN THE LINE(S) WILL BE INSERTED AFTER IT.
*                 '*' MEANS THE CURRENT LINE (NOT NECESSARILY LINENUM1)
*                 '$' MEANS 'SAME-AS-LINENUM2'.  DEFAULT IS '$'.
*   'COPIES'    - THE NUMBER OF COPIES OF THE LINE TO BE MADE.
*                 TO SPECIFY THIS OPERAND, YOU MUST SPECIFY
*                 BOTH OF THE FIRST 2 OPERANDS.
*   'INCREMENT' - IF MORE THAN 1 COPY, THE INCREMENT TO USE ON
*                 THE LINE NUMBERS AFTER THE FIRST.
*   I           - NEW LINES ARE NOT TO REPLACE ANY EXISTING LINES.
*   R           - NEW LINES ARE TO REPLACE EXISTING LINES IF THEIR
*                 SEQUENCE NUMBERS COINCIDE.
*
         SPACE
DUP      START
         USING *,R12
         B     @PROLOG-*(,R15)
         DC    AL1(11),CL11'DUP    '
         DC    CL16' &SYSDATE &SYSTIME '
@SIZE    DC    0F'0',AL1(1),AL3(@DATAL)
@PROLOG  STM   14,12,12(R13)
         LR    R12,15
         LR    R9,R1
         USING IKJEBECA,R9
         L     R0,@SIZE
         GETMAIN R,LV=(0)
         ST    R13,4(,1)
         ST    1,8(,R13)
         LR    R13,1
         USING @DATA,R13
         SPACE
         L     R2,CAPTTMP
         USING CPPL,R2
         SPACE
         LA    R0,1
         ST    R0,COUNTER
         ST    R0,INCREM
         SPACE
         XC    LINKAREA(8),LINKAREA
         SPACE
************************************************************
*                                                          *
*        CHECK IF OPERANDS PRESENT                         *
*                                                          *
************************************************************
         SPACE
         MVI   LINE1,C'*'          DEFAULT OPERAND
         MVI   LINE2,0
         MVI   REPLACE,0
         MVI   FORCE,0
         TM    CASCBFFL,CAOPERND   OPERANDS SPECIFIED?
         BZ    NOPARSE
         SPACE
************************************************************
*                                                          *
*        CALL THE 'PARSE' SERVICE ROUTINE                  *
*                                                          *
************************************************************
         SPACE
         LA    R15,CATMPLST
         USING PPL,R15
         L     R0,=A(DUPPCL)
         ST    R0,PPLPCL
         LA    R0,CAPTPRSD
         ST    R0,PPLANS
         MVC   PPLCBUF(4),CAPTIBFR
         ST    R9,PPLUWA
         DROP  R15                 PPL
         DROP  R2                  CPPL
         SPACE
         LA    R1,CATMPLST
         L     R15,16              GET ADDRESS OF CVT
         TM    524(R15),X'80'      IF HI ORDER BIT NOT ONE
         BNO   TSRLINK
         L     R15,524(,R15)       GET ADDR OF IKJPARS
         BALR  R14,R15             CALL IKJPARS
         B     TSREXIT
TSRLINK  EQU   *
         LINK  EP=IKJPARS,SF=(E,LINKAREA)
TSREXIT  EQU   *
         SPACE
************************************************************
*                                                          *
*        TEST RETURN CODE FROM PARSE                       *
*                                                          *
************************************************************
         SPACE
         LTR   R15,R15
         BNZ   ERRSYNTX
         SPACE
************************************************************
*                                                          *
*        DO SOME SYNTAX CHECKS BEFORE ANY I/O              *
*                                                          *
************************************************************
         SPACE
         L     R3,CAPTPRSD
         USING IKJPARMD,R3
         SPACE
         LA    R14,LNUM1           R14 --> PDE ENTRY
         TM    6(R14),X'80'        LINE1 SPECIFIED?
         BZ    LNUMSTAR            NO - ASSUME ASTERISK
         L     R15,0(,R14)         R15 --> DATA
         CLI   0(R15),C'*'         ASTERISK SPECIFIED?
         BE    LNUMSTAR
         MVI   LINE1,0             SET OFF ASTERISK
         LH    R1,4(,R14)          R1 = LENGTH
         BCTR  R1,0
         B     *+10
         PACK  DOUBLE,0(0,R15)
         EX    R1,*-6
         CVB   R1,DOUBLE
         ST    R1,LINENUM1         STORE BINARY VALUE
LNUMSTAR EQU   *
         LA    R14,LNUM2
         TM    6(R14),X'80'        LINE2 SPECIFIED?
         BZ    NOLINE2             NO, SAME AS LINE1
         L     R15,0(,R14)
         CLI   0(R15),C'$'         $ SPECIFIED
         BE    NOLINE2             YES, SAME AS LINE1
         MVI   LINE2,X'80'         LINE2 SPECIFIED      20FEB81
         L     R1,CACURNUM                              20FEB81
         CLI   0(R15),C'*'
         BE    ASTLINE2            ASTERISK
*        MVI   LINE2,X'80'         LINE2 SPECIFIED
         LH    R1,4(,R14)
         BCTR  R1,0
         B     *+10
         PACK  DOUBLE,0(0,R15)
         EX    R1,*-6
         CVB   R1,DOUBLE
ASTLINE2 ST    R1,LINENUM2         STORE BINARY VALUE
NOLINE2  EQU   *
         SPACE
         LA    R1,1                DEFAULT COUNT IS 1
         LA    R14,COUNT
         TM    6(R14),X'80'        COUNT SPECIFIED?
         BZ    NOCOUNT             NO, USE DEFAULT
         L     R15,0(,R14)
         LH    R1,4(,R14)
         BCTR  R1,0
         B     *+10
         PACK  DOUBLE,0(0,R15)
         EX    R1,*-6
         CVB   R1,DOUBLE
         LTR   R1,R1               IS COUNT VALID
         BP    *+8                 YES
         LA    R1,1                NO, MAKE IT 1
NOCOUNT  ST    R1,COUNTER          STORE BINARY VALUE
         SPACE
         MVC   FORCE,FORCEKW+1
         SPACE
         LA    R1,1                DEFAULT INCR IS 1
         LA    R14,INCR
         TM    6(R14),X'80'        INCR SPECIFIED?
         BZ    NOINCR              NO, USE DEFAULT
         L     R15,0(,R14)
         LH    R1,4(,R14)
         BCTR  R1,0
         B     *+10
         PACK  DOUBLE,0(0,R15)
         EX    R1,*-6
         CVB   R1,DOUBLE
         LTR   R1,R1               IS INCR VALID
         BP    *+8                 YES
         LA    R1,1                NO, MAKE IT 1
NOINCR   ST    R1,INCREM           STORE BINARY VALUE
         MVC   REPLACE,RKW+1       SAVE 'I' OR 'R' STATUS
         DROP  R3
         SPACE
         IKJRLSA CAPTPRSD
         OI    CAPRSPDL,CAFREEDL
         SPACE
NOPARSE  EQU   *
         SPACE
************************************************************
*                                                          *
*        DUP WILL NOT WORK FOR NONUM DATA UNLESS FORCED    *
*                                                          *
************************************************************
         SPACE
         TM    CACFLAG1,CANONUM    EDITING NONUM?
         BZ    NUM                 NO, BRANCH
         CLI   FORCE,1             FORCE SPECIFIED?
         BNE   ERRNIMPL            NO, ISSUE REGRETS
NUM      EQU   *
         SPACE
************************************************************
*                                                          *
*        CHECK FOR EMPTY DATASET                           *
*                                                          *
************************************************************
         SPACE
         MVI   EUTPARM,X'04'       SET CODE TO READ 1ST LINE
         MVC   EUTPARM+1(3),CAPTCDCB+1
         XC    EUTPARM+4(4),EUTPARM+4  KEYPTR=0
         LA    R1,CABFRPL
         ST    R1,EUTPARM+8
         OI    EUTPARM+8,X'80'
         BAL   R14,EBEUT           READ TOP, CHECK FOR EMPTY DATA SET
         CH    R15,=H'4'
         BH    ERRIOERR
         BE    ERREMPTY
         SPACE
************************************************************
*                                                          *
*        CHECK LINE NUMBER                                 *
*                                                          *
************************************************************
         SPACE
         CLI   LINE1,C'*'          ASTERISK SPECIFIED?
         BZ    ASTSPEC             YES - ASSUME CURRENT LINE
         SPACE
************************************************************
*                                                          *
*        A LINE NUMBER WAS SPECIFIED                       *
*                                                          *
************************************************************
         SPACE
         TM    CACFLAG1,CANONUM    EDITING NONUM?
         BO    ERRNONUM            YES - ERROR
         SPACE
         LA    R1,LINENUM1
         ST    R1,EUTPARM+4
         B     READ
         SPACE
************************************************************
*                                                          *
*        ASTERISK WAS SPECIFIED (OR DEFAULTED)             *
*                                                          *
************************************************************
         SPACE
ASTSPEC  EQU   *
         LA    R1,CACURNUM         PTR TO CURRENT LINE KEY
         ST    R1,EUTPARM+4
         SPACE
************************************************************
*                                                          *
*        READ THE 1ST RECORD TO BE PROCESSED               *
*                                                          *
************************************************************
         SPACE
READ     MVI   EUTPARM,X'00'       READ CURRENT LINE BY KEY
         BAL   R14,EBEUT           READ SPECIFIED LINE1 RECORD
         SPACE
         LTR   R15,R15
         BZ    PROCESS
         CH    R15,=H'4'
         BNE   ERRIOERR
         SPACE
************************************************************
*                                                          *
*        NOT FOUND - CHECK FOR ASTERISK/TOP                *
*                                                          *
************************************************************
         SPACE
         CLI   LINE1,C'*'          WAS ASTERISK SPECIFIED?
         BNE   ERRLNOTF            NO - NOT FOUND - BRANCH
         CLC   CACURNUM,=F'0'      YES - BUT WERE WE AT 'TOP' ?
         BNE   ERRLNOTF            NO - NOTFOUND - BRANCH (EVER TAKEN?)
*              HOW CAN '*' BE NOT FOUND IF DATASET NOT EMPTY?
*              ANSWER - WE WERE AT TOP. CURRENT LINE WAS 0.
         MVI   EUTPARM,X'02'
         BAL   R14,EBEUT           READ NEXT LINE
         LTR   R15,R15
         BZ    PROCESS
         CH    R15,=H'4'
         BNE   ERRIOERR
         B     ERRLNOTF
         SPACE
************************************************************
*                                                          *
*        SAVE THE SPECIFIED LINE IN OUTPUT AREA            *
*                                                          *
************************************************************
         SPACE
PROCESS  EQU   *
         LH    R1,CABFRPL+4
         BCTR  R1,0
         B     *+10
         MVC   OUTKEY+4(0),CABFRPL+4
         EX    R1,*-6
         SPACE
************************************************************
*                                                          *
*        READ LINE2 TO SEE IF IT EXISTS                    *
*                                                          *
************************************************************
         SPACE
         MVC   OUTKEY,CABFRPL      DEFAULT LINE2 IS LINE1
         CLI   LINE2,X'80'         LINE2 NUMBER OR * SPECIFIED
         BNE   EXISTS              NO, LEAVE LINENUM1 IN OUTKEY
         TM    CACFLAG1,CANONUM    EDITING NONUM?
         BO    ERRNONUM            YES - ERROR
         L     R1,LINENUM2
         ST    R1,OUTKEY
         LA    R1,OUTKEY
         ST    R1,EUTPARM+4
         MVI   EUTPARM,X'00'
         BAL   R14,EBEUT
         LTR   R15,R15             DOES LINE2 EXIST ALREADY
         BZ    EXISTS              YES, BRANCH
         CH    R15,=H'4'           LINE NOT FOUND
         BNE   ERRIOERR            BRANCH IF SOMETHING ELSE
         B     NEXIST              BRANCH IF LINE NOT FOUND
EXISTS   L     R1,OUTKEY           LINE2 EXISTS
         A     R1,INCREM            ADD 1 TO IT
         ST    R1,OUTKEY             THEN
         B     INSERTV                GO CHECK TO SEE IF THAT EXISTS
NEXIST   EQU   *
         B     INSERTW             LINE2 DOES NOT EXIST, GO CREATE IT
         SPACE
INSERT   EQU   *
         ST    R1,COUNTER
         L     R1,OUTKEY
         A     R1,INCREM
         ST    R1,OUTKEY
         SPACE
************************************************************
*                                                          *
*       VERIFY THAT THE LINE TO BE WRITTEN DOES NOT EXIST  *
*                                                          *
************************************************************
         SPACE
INSERTV  EQU   *
         CLI   REPLACE,1           WAS 'R' SPECIFIED?
         BE    INSERTW             YES, SKIP VERIFY
         MVI   EUTPARM,X'00'       READ SPECIFIED LINE
         LA    R1,OUTKEY
         ST    R1,EUTPARM+4
         BAL   R14,EBEUT
         LTR   R15,R15             WAS READ SUCCESSFUL?
         BZ    ERRROOM             YES, CANNOT WRITE HERE
         CH    R15,=H'4'
         BNE   ERRIOERR
         SPACE
************************************************************
*                                                          *
*        WRITE A RECORD                                    *
*                                                          *
************************************************************
         SPACE
INSERTW  LA    R1,OUTKEY
         ST    R1,EUTPARM+4
         OI    EUTPARM+4,X'80'
         MVI   EUTPARM,X'20'
         BAL   R14,EBEUT
         LTR   R15,R15
         BNZ   ERRISERT
*
*        (UPDATE CURRENT LINE NUMBER)
*
         L     R1,OUTKEY
         ST    R1,CACURNUM
         SPACE
************************************************************
*                                                          *
*        CHECK COUNT FOR MORE INSERTS                      *
*                                                          *
************************************************************
         SPACE
         L     R1,COUNTER
         BCT   R1,INSERT
         SPACE
************************************************************
*                                                          *
*        ALL LINES ARE WRITTEN, SHOW LAST LINE             *
*                                                          *
************************************************************
         SPACE
         TM    CACFLAG1,CAVRFYSW   IS VERIFY ON
         BZ    VEROFF
         MVC   CATEMPBF+12(4),OUTKEY
         LH    R1,OUTKEY+4
         BCTR  R1,0
         B     *+10
         MVC   CATEMPBF+12+4(0),OUTKEY+4
         EX    R1,*-6
         SLR   R1,R1
         ST    R1,EMSPARM
         LA    R1,CATEMPBF
         ST    R1,EMSPARM+4
         LR    R0,R9
         LA    R1,EMSPARM
         OI    CACFLAG4,CATPUTVF
         IKJEBESH (COMMREG),IKJEBEMS,PARAM=((COMMREG),EMSPARM),MF=(E,X)
         NI    CACFLAG4,255-CATPUTVF
         B     EXIT0
VEROFF   EQU   *
         OI    CACFLAG2,CAMODMSG   FORCE MODE MESSAGE
         B     EXIT0
         SPACE
************************************************************
*                                                          *
*        LINE EDIT ROUTINE                                 *
*                                                          *
************************************************************
         SPACE
LINEEDIT ST    R14,PUTLINS
         IKJEBESH (COMMREG),IKJEBELE,PARAM=((COMMREG),ELEPARM),MF=(E,X)
         L     R14,PUTLINS
         BR    R14
         SPACE
************************************************************
*                                                          *
*        ERROR ROUTINES                                    *
*                                                          *
************************************************************
         SPACE
ERRSYNTX LA    R1,MSGSYNTX
         LA    R0,L'MSGSYNTX
         BAL   R14,PUTLINE
         B     EXIT8
         SPACE
ERRNIMPL LA    R1,MSGNIMPL
         LA    R0,L'MSGNIMPL
         BAL   R14,PUTLINE
         B     EXIT8
         SPACE
ERREMPTY LA    R1,MSGEMPTY
         LA    R0,L'MSGEMPTY
         BAL   R14,PUTLINE
         B     EXIT8
         SPACE
ERRNONUM LA    R1,MSGNONUM
         LA    R0,L'MSGNONUM
         BAL   R14,PUTLINE
         B     EXIT8
         SPACE
ERRROOM  L     R1,OUTKEY
         CVD   R1,DOUBLE
         MVC   MSG(L'MSGTERM),MSGTERM
         LA    R15,MSG+L'MSGTERM
         UNPK  0(8,R15),DOUBLE+3(5)
         OI    7(R15),X'F0'
         LA    R0,7                SUPPRESS UP TO 7 LEADING ZEROS
ERRTERM  CLI   0(R15),C'0'
         BNE   ERRTERMX
         MVC   0(7,R15),1(R15)
         MVI   7(R15),C' '
         BCT   R0,ERRTERM
ERRTERMX LA    R1,MSG
         LA    R0,L'MSGTERM+8
         BAL   R14,PUTLINE
         B     EXIT8
         SPACE
ERRISERT LA    R1,MSGISERT
         LA    R0,L'MSGISERT
         BAL   R14,PUTLINE
         B     EXIT8
         SPACE
ERRIOERR LA    R1,MSGIOERR
         LA    R0,L'MSGIOERR
         BAL   R14,PUTLINE
         B     EXIT8
         SPACE
ERRIOERW LA    R1,MSGIOERW
         LA    R0,L'MSGIOERW
         BAL   R14,PUTLINE
         B     EXIT8
         SPACE
ERRLNOTF LA    R1,MSGLNOTF
         LA    R0,L'MSGLNOTF
         BAL   R14,PUTLINE
         B     EXIT8
         SPACE
************************************************************
*                                                          *
*        PUTLINE ROUTINE                                   *
*                                                          *
************************************************************
         SPACE
PUTLINE  STM   R14,R1,PUTLINS
         XC    MYOLD(8),MYOLD
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPB
         LA    R14,1               NO. OF MESSAGE SEGMENTS
         ST    R14,MYOLD
         LA    R14,MYSEG1          POINT TO 1ST SEGMENT
         ST    R14,MYOLD+4
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         LA    R15,MYSEG1+4
         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?
         BE    *+16                YES - BRANCH
         LA    R14,1(,R14)         ADD 1 TO LENGTH
         MVI   0(R15),C' '         INSERT LEADING BLANK
         LA    R15,1(,R15)         BUMP POINTER
         STH   R14,MYSEG1
         MVI   MYSEG1+4,C' '       LEADING BLANK
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN
         EX    R14,*-6
         LA    R1,CATMPLST
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),MF=(E,(1))
         SPACE
         LM    R14,R1,PUTLINS
         BR    R14
         SPACE
************************************************************
*                                                          *
*        EBEUT                                             *
*                                                          *
************************************************************
         SPACE
EBEUT    ST    R14,PUTLINS
         IKJEBESH (COMMREG),IKJEBEUT,PARAM=((COMMREG),EUTPARM),MF=(E,X)
         ST    R1,RCDPTR
         L     R14,PUTLINS
         BR    R14
         SPACE
************************************************************
*                                                          *
*        EXIT - RETURN TO EDIT                             *
*                                                          *
************************************************************
         SPACE
EXIT8    LA    R15,8
         B     EXIT
EXIT0    SR    15,15
EXIT     LR    1,R13
         L     R0,@SIZE
         L     R13,4(,R13)
         LR    R2,R15
         FREEMAIN R,A=(1),LV=(0)
         LR    R15,R2
         LM    0,12,20(R13)
         L     14,12(,R13)
         BR    14
         SPACE
************************************************************
*                                                          *
*        CONSTANTS                                         *
*                                                          *
************************************************************
         SPACE
MODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
MSGSYNTX DC    C'IKJ56702I SYNTAX ERROR'
MSGNIMPL DC    C'IKJ525021 DUP NOT IMPLEMENTED FOR NONUM DATA SETS'
MSGEMPTY DC    C'IKJ52501I NO LINES IN DATA SET'
MSGNONUM DC    C'IKJ52502I DATA SET NOT LINE NUMBERED'
MSGROOM  DC    C'IKJ52502I NOT ENOUGH ROOM BETWEEN LINES'
MSGISERT DC    C'IKJ52502I WRITE FAILED INEXPLICABLY'
MSGIOERR DC    C'IKJ52313I I/O ERROR HAS OCCURRED READING EDIT DATASET'
MSGIOERW DC    C'IKJ52313I I/O ERROR HAS OCCURRED WRITING EDIT DATASET'
MSGLNOTF DC    C'IKJ52504I LINE NUMBER NOT FOUND'
MSGEODAT DC    C'IKJ52500I END OF DATA'
MSGTERM  DC    C'IKJ52400I DUP TERMINATED, NEXT LINE NUMBER IS '
         LTORG
PATCH    DC    4D'0'               PATCH AREA
         SPACE
************************************************************
*                                                          *
*        PARSE PCL                                         *
*                                                          *
************************************************************
         SPACE
         PRINT NOGEN
         SPACE
DUPPCL   IKJPARM
LNUM1    IKJIDENT 'LINE NUMBER',ASTERISK,FIRST=NUMERIC,OTHER=NUMERIC,  X
               MAXLNTH=8
LNUM2    IKJIDENT 'LINE NUMBER',FIRST=ANY,OTHER=NUMERIC,               X
               MAXLNTH=8,VALIDCK=LNUM2V
COUNT    IKJIDENT 'COUNT',FIRST=NUMERIC,OTHER=NUMERIC,                 X
               MAXLNTH=4
INCR     IKJIDENT 'INCREMENT',FIRST=NUMERIC,OTHER=NUMERIC,             X
               MAXLNTH=8
RKW      IKJKEYWD
         IKJNAME 'REPLACE'
         IKJNAME 'INSERT'
FORCEKW  IKJKEYWD
         IKJNAME 'FORCE'
         IKJENDP
         SPACE
         PRINT GEN
         SPACE
************************************************************
*                                                          *
*         PARSE VALIDITY CHECK ROUTINES                    *
*                                                          *
************************************************************
         SPACE
         DC    0D'0'
         USING *,R10
LNUM2V   STM   14,12,12(13)
         LR    R10,R15
         L     R2,0(,R1)           POINT R2 TO PDE
         SR    15,15
         L     R1,0(,R2)           POINT TO OPERAND
         CLI   0(R1),C'*'          ASTERISK
         BE    LNUM2VS
         CLI   0(R1),C'$'          DOLLAR
         BE    LNUM2VS
         CLI   0(R1),C'0'          NUMERIC
         BL    LNUM2VE             NO, ERROR
         CLI   0(R1),C'9'          NUMERIC
         BNH   LNUM2VX             YES, RETURN
         B     LNUM2VE             NO, ERROR
LNUM2VS  CLI   5(R2),1             IS LENGTH 1
         BE    LNUM2VX             YES, BRANCH
LNUM2VE  LA    R15,4
LNUM2VX  L     14,12(,13)
         LM    0,12,20(13)
         BR    14
         DROP  R10
         DC    0D'0'
         SPACE
************************************************************
*                                                          *
*        DSECTS                                            *
*                                                          *
************************************************************
         SPACE
@DATA    DSECT
         DS    18F
LINKAREA DS    2F
MYPTPB   DS    3F
MYOLD    DS    2F
MYSEG1   DS    2H,CL100
PUTLINS  DS    4F
RCDPTR   DS    F
EUTPARM  DS    4F
DEUTPARM DS    4F
ELEPARM  DS    2F
EMSPARM  DS    4F
DOUBLE   DS    D
LINE1    DS    F
LINENUM1 DS    F
LINE2    DS    F
LINENUM2 DS    F
COUNTER  DS    F
INCREM   DS    F
REPLACE  DS    X
FORCE    DS    X
OUTKEY   DS    F,CL256
MSG      EQU   OUTKEY+4
         DS    0D
@DATAL   EQU   *-@DATA
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
COMMREG  EQU   9
RETCDREG EQU   15
RETREG   EQU   14
PARMREG0 EQU   0
PARMREG1 EQU   1
         SPACE
         IKJCPPL
         SPACE
         IKJPPL
         SPACE
         IKJECT
         SPACE
         PRINT NOGEN
         IKJEBECA
         END
