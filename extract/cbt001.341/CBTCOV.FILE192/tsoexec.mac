* ----------------------------------------------------------------- *
* THIS ROUTINE WILL ALLOW THE USER TO USE THE RACF PANELS EVEN IF   *
* YOU DO NOT HAVE TSO/E                                             *
* YOU CAN ALSO USE THIS ROUTINE TO EXECUTE ANY TSO UNDER SPF THAT   *
* MUST RUN AUTHORIZED                                               *
* ----------------------------------------------------------------- *
*        RACF COMMAND AUTHORIZATION INTERFACE
*        MODIFIED VERSION OF RACC TO WORK WITH RACF PANELS FROM IBM
         MACRO
&NAME    AUTHON
&NAME    LA    R1,4                WE WANT TO BE AUTH        PLB
         LA    R15,4                                         PLB
         SVC   109                 USE EXTENDED SVC          PLB
         MEND
         MACRO
&NAME    AUTHOFF
&NAME    LA    R1,8                WE WANT TO BE UNAUTH      PLB
         LA    R15,4                                         PLB
         SVC   109                 USE EXTENDED SVC          PLB
         MEND
         MACRO
&NAME    COMEIN &BASE=3,&SAVE=MYSAVE,&REGS=R,&RC=CC,&LINK=14,&BASE2=
         GBLC  &COMEIN
&COMEIN  SETC  '&RC'
&NAME    START 0
         STM   &REGS.14,&REGS.12,12(&REGS.13)  SAVE RETURN REGS
         AIF   ('&BASE2' EQ '').ONEBASE
         USING &NAME,&REGS&BASE,&REGS&BASE2  EST ADDRESSABILITY
         LR    &REGS&BASE,&REGS.15   GET THE LOAD POINT
         LA    &REGS&BASE2,4095(&REGS&BASE) PRIME BASE NUMBER 2
         LA    &REGS&BASE2,1(&REGS&BASE2)  NOW NUMBER 2 IS SET
         AGO   .BASESET
.ONEBASE USING &NAME,&REGS&BASE    ESTABLISH ADDRESSABILITY
         LR    &REGS&BASE,&REGS.15
.BASESET LR    &REGS.14,&REGS.13   CHAIN SAVE AREAS
         BAL   &REGS.13,&SAVE.+92  SET 13 TO CURRENT SAVE AREA
&SAVE    DC    18F'0'              CURRENT SAVE AREA
&RC      DC    F'0'                RETURN CODE HOLD AREA
         L     &REGS.13,&SAVE.+4    CODE TO RETURN TO CALLING PGM
         MVC   16(4,&REGS.13),&RC   SET UP RETURN CODE
         LM    &REGS.14,&REGS.12,12(&REGS.13)
         BR    &REGS.14             RETURN
         ST    &REGS.14,&SAVE.+4   ABOVE BAL COMES HERE
         ST    &REGS.13,8(&REGS.14)
         SPACE 1
&REGS.0  EQU   0                  REG EQUATES
&REGS.1  EQU   1
&REGS.2  EQU   2
&REGS.3  EQU   3
&REGS.4  EQU   4
&REGS.5  EQU   5
&REGS.6  EQU   6
&REGS.7  EQU   7
&REGS.8  EQU   8
&REGS.9  EQU   9
&REGS.10 EQU   10
&REGS.11 EQU   11
&REGS.12 EQU   12
&REGS.13 EQU   13
&REGS.14 EQU   14
&REGS.15 EQU   15
&REGS.A  EQU   10
&REGS.B  EQU   11
&REGS.C  EQU   12
&REGS.D  EQU   13
&REGS.E  EQU   14
&REGS.F  EQU   15
&REGS.LINK EQU &LINK
         MEND
         MACRO
&NAME    GETOUT
         GBLC  &COMEIN
&NAME    B     &COMEIN.+4          BRANCH TO EXIT CODE IN COMEIN MACRO
         MEND
TSOEXEC  COMEIN
         EJECT
         LR    R2,R1                   R2 ---> CPPL
         L     R4,0(R2)                R4 ---> COMMAND BUFFER
         SR    R5,R5
         LH    R5,0(R4)                R5 = LENGTH(CBUF)
         S     R5,F5                   R5 - 4(PREFIX) -1(FOR MOVE)
         EX    R5,UPCASE               XLATE TO UPPERCASE
         LH    R5,0(R4)                R5 = LENGTH(CBUF)
         S     R5,F4                   MINUS LENGTH OF PREFIX (4)
         SR    R6,R6
         LH    R6,2(R4)                R6 = OFFSET TO OPERANDS
         SR    R7,R7
         LA    R7,4(R4)                START OF TEXT
         AR    R7,R6                   R7 ---> OPERANDS
         SR    R5,R6                   R5 = LENGTH(OPERANDS)
         BCTR  R5,0                    MINUS ONE FOR MOVE
         EX    R5,MOVETEXT             CREATE NEW CBUF TEXT
         A     R5,F5                   R5 + $(PREFIX) +1(FROM MOVE)
         STH   R5,CBUF                 STORE NEW CBUF LENGTH
         BAL   R14,FINDOPND            FIND FIRST OPERAND
         STH   R8,OFFSET               AND STORE OFFSET IN CBUF
         BCTR  R8,0                    MINUS ONE FOR MOVE
         EX    R8,MOVECMND             MOVE COMMAND NAME FOR LINK
CMDOK    LA    R8,CBUF                 ADDRESS OF NEW CBUF
         ST    R8,0(R2)                AND STORE IN CPPL
         SR    R1,R1                   SET AUTH = ON
*        SVC   243                     ISSUE SETAUTH SVC
         AUTHON
         LR    R1,R2                   GET CPPL ADDRESS
         SPACE
LINK     LINK  EPLOC=COMMAND           LINK TO COMMAND
         SPACE
         LR    R2,R15                  SAVE RETURN CODE
NOTAUTH  AUTHOFF
         SPACE
         ST    R15,CC                  LOAD RETURN CODE
         GETOUT                      , RETURN TO CALLER
         SPACE
         EJECT
FINDOPND LA    R7,TEXT                 R7 ---> COMMAND BUFFER TEXT
         SR    R8,R8                   COUNTER FOR OPERAND OFFSET
         LR    R9,R5                   COMMAND BUFFER LENGTH
         S     R9,F4                   MINUS PREFIX LENGTH
         SPACE
LOOP1    CLI   0(R7),C' '              FOUND BLANK
         BE    LOOP2                       YES..NEXT LOOP
         SPACE
         LA    R7,1(R7)                UPDATE POINTER
         LA    R8,1(R8)                UPDATE OFFSET
         BCT   R9,LOOP1                LOOP IF STILL IN BUFFER
         BR    R14                     AND EXIT
         SPACE
LOOP2    CLI   0(R7),C' '              FOUND BLANK
         BNE   ENDLOOP                     NO...END OF ROUTINE
         SPACE
         LA    R7,1(R7)                UPDATE POINTER
         LA    R8,1(R8)                UPDATE OFFSET
         BCT   R9,LOOP2                LOOP IF STILL IN BUFFER
         BCTR  R8,0                    IF NO OPERANDS, BACK UP ONE
         SPACE
ENDLOOP  BR    R14                     RETURN TO CALLER
         EJECT
         SPACE
         DS   0D
OLDLEN   DC    F'0'                    ORIGINAL CBUF LENGTH
F4       DC    F'4'
F5       DC    F'5'
COMMAND  DC    CL8' '
CBUF     DS   0D                       NEW COMMAND BUFFER
         DC    H'0'                    BUFFER LENGTH
OFFSET   DC    H'0'                    OFFSET TO OPERANDS
TEXT     DC    CL255' '                COMMAND TEXT
BLANKS   DC    CL255' '
UPCASE   OC    4(*-*,R4),BLANKS
MOVETEXT MVC   TEXT,0(R7)              MOVE COMMAND TEXT TO NEW CBUF
MOVECMND MVC   COMMAND(*-*),TEXT       MOVE COMMAND NAME TO WORK AREA
         SPACE
         END
