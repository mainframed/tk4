         TITLE '   I N F O S Y S      '
***********************************************************************
*                                                                     *
*        'INFOSYS'                                                    *
*                                                                     *
***********************************************************************
         SPACE
*        WRITTEN BY. BILL GODFREY,  PLANNING RESEARCH CORPORATION.
*        INSTALLATION. PRC COMPUTER CENTER, MCLEAN VA.
*        DATE WRITTEN. MARCH 31 1981.
*        DATE UPDATED. MAY 18 1982.
*        ATTRIBUTES. RE-ENTRANT.
*        DESCRIPTION.
*         THIS TSO COMMAND INVOKES THE 'INFORMATION MVS'
*         PROGRAM, AN IBM PRODUCT.
*
*            SYNTAX -
*                 INFOSYS  SYSOUT(A)/PRINT(DSN)  FILES(BDGU)
*
*         EACH FILE IS REPRESENTED BY A LETTER.
*         LETTER A IS SPECIAL, IN THAT IT MEANS ALL FILES.
*         LETTER Z IS INVALID.
*         LETTERS B THRU Y ARE THE INDIVIDUAL FILES, THUS
*         THE MAXIMUM LENGTH OF THE OPERAND IS 24 BYTES.
*
*         IF THE DDNAME 'OZPRINT' IS PRE-ALLOCATED TO SOMETHING
*         BEFORE ENTERING THIS COMMAND, THE INFOSYS 'OZD' PROGRAM
*         WILL IGNORE THE SYSOUT VALUE AND WRITE ITS PRINT FILE
*         TO THAT DDNAME.
*
*         LOG OF CHANGES.
*          11MAY81 = FIX BUG. SYSOUT WAS BEING IGNORED IF FILES
*                    WAS SPECIFIED, BECAUSE R5 WAS NOT INCREMENTED.
*          14MAY82 = PRINT(DSN) KEYWORD ADDED.  DSN MUST EXIST.
*                    IF PRINT(DSN) IS USED, OZPRINT WILL BE ALLOCATED
*                    TO THE DATA SET AND WILL BE FREED WHEN THE
*                    COMMAND ENDS.
*          18MAY82 = IF PRINT DSN NOT IN CATALOG THEN ALLOCATE IT NEW.
*                    IF PRINT DSN IS A PDS, MAKE SURE USER SPECIFIED
*                    A MEMBER NAME.  IF SEQ, MAKE SURE NO MEMBER SPEC.
         SPACE
INFOSYS  START
         USING *,R12
BASE     B     @PROLOG-*(,15)
         DC    AL1(11),CL11'INFOSYS'
         DC    CL16' &SYSDATE &SYSTIME '
@SIZE    DC    0F'0',AL1(1),AL3(@DATAL)
@PROLOG  STM   14,12,12(R13)       SAVE REGISTERS
         LR    R12,R15             LOAD BASE REGISTER
         LR    R2,R1               PARM POINTER
         USING CPPL,R2
         L     R0,@SIZE            WORKAREA SUBPOOL AND LENGTH
         GETMAIN R,LV=(0)
         LR    R9,R1               INITIALIZE WORKAREA POINTER
         USING @DATA,R9
         SPACE 1
         LR    R0,R1               AREA TO BE CLEARED
         L     R1,@SIZE            LENGTH TO BE CLEARED
         SLR   R15,R15             ZERO PAD AND 'FROM' LENGTH
         MVCL  R0,R14              ZERO IT ALL
         SPACE 1
         ST    R13,4(,R9)          CHAIN SAVEAREA
         ST    R9,8(,R13)          CHAIN SAVEAREA
         LR    R13,R9              UPDATE SAVEAREA POINTER
         SPACE
************************************************************
*                                                          *
*        SET UP IOPL FOR PUTLINE                           *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYIOPL
         USING IOPL,R15
         MVC   IOPLUPT(4),CPPLUPT
         MVC   IOPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,IOPLECB
         XC    MYECB,MYECB
         LA    R0,MYPTPB
         ST    R0,IOPLIOPB
         DROP  R15                 IOPL
         SPACE
         L     R15,16              LOAD CVT POINTER
         TM    444(R15),X'80'      IS PUTLINE LOADED? (VS2)
         BNO   PUTLOAD             NO - BRANCH TO LOAD
         L     R15,444(,R15)       YES - USE CVTPUTL
         B     PUTLOADX            BRANCH AROUND LOAD
PUTLOAD  LA    R0,=CL8'IKJPUTL '
         LOAD  EPLOC=(0)
         LR    R15,R0              GET ENTRY ADDRESS
         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE
PUTLOADX ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS
         SPACE
************************************************************
*                                                          *
*        SET UP PPL FOR PARSE                              *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYPPL
         USING PPL,R15
         MVC   PPLUPT(4),CPPLUPT
         MVC   PPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,PPLECB
         XC    MYECB,MYECB
         L     R0,=A(INFOPCL)
         ST    R0,PPLPCL
         LA    R0,MYANS
         ST    R0,PPLANS
         MVC   PPLCBUF(4),CPPLCBUF
         ST    R9,PPLUWA
         DROP  R15                 PPL
         SPACE 1
************************************************************
*                                                          *
*        CALL THE PARSE SERVICE ROUTINE                    *
*                                                          *
************************************************************
         SPACE 1
         LR    R1,R15              POINT TO PPL
         L     R15,16              CVTPTR
         TM    520(R15),X'80'      IF HI ORDER BIT NOT ON
         BNO   PARSELNK               THEN DO LINK, NOT CALL
         L     R15,520(,R15)       CVTPARS
         BALR  R14,R15             CALL IKJPARS
         B     PARSEEXT            SKIP AROUND LINK
PARSELNK EQU   *
         LINK  EP=IKJPARS,SF=(E,LINKAREA)
PARSEEXT EQU   *
         SPACE
         LTR   R15,R15             WAS PARSE SUCCESSFUL
         BNZ   PARSERR             NO, BRANCH
         SPACE
         L     R3,MYANS
         USING IKJPARMD,R3
         SPACE
************************************************************
*                                                          *
*         FREE DDNAME 'VSAM'                               *
*                                                          *
************************************************************
         SPACE
         LA    R1,MYDAPL
         USING DAPL,R1
         MVC   DAPLUPT(4),CPPLUPT
         MVC   DAPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,DAPLECB
         MVC   DAPLPSCB(4),CPPLPSCB
         LA    R15,MYDAPB
         ST    R15,DAPLDAPB
         DROP  R1                  DAPL
         LA    R15,MYDAPB
         USING DAPB18,R15
         XC    0(40,R15),0(R15)
         MVI   DA18CD+1,X'18'
         MVC   DA18DDN,=CL8'VSAM'
         MVC   DA18MNM(8),=CL8' '
         MVC   DA18SCLS(2),=CL8' '
         OI    DA18CTL,DA18PERM
         LA    R1,MYDAPL
         BAL   R14,CALLDAIR
         DROP  R15                 DAPB18
         SPACE
************************************************************
*                                                          *
*         ALLOCATE THE INFOSYS DATA BASE                   *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYDAPB
         USING DAPB08,R15
         XC    0(84,R15),0(R15)
         MVI   DA08CD+1,X'08'
         LA    R14,DSNAME
         MVC   0(46,R14),SYSDSN    DATA SET NAME
         ST    R14,DA08PDSN
         MVC   DA08DDN(8),=CL8'VSAM'
         MVC   DA08UNIT,=CL8' '
         MVC   DA08SER,=CL8' '
         MVC   DA08MNM,=CL8' '
         MVC   DA08PSWD,=CL8' '
         MVI   DA08DSP1,DA08SHR
         MVI   DA08DPS2,DA08KEEP
         MVI   DA08DPS3,DA08KEP
         LA    R1,MYDAPL
         BAL   R14,CALLDAIR
         DROP  R15                 DAPB08
         LTR   R15,R15
         BZ    OKDAIR
         BAL   R14,DAIRFAIL
         B     EXIT12
OKDAIR   EQU   *
         OI    STATUS,STATVALC     TELL CLEANUP TO FREE IT
         SPACE
************************************************************
*                                                          *
*         FREE DDNAME 'OZPRINT'                            *
*                                                          *
************************************************************
         SPACE
         CLI   SYSOUTKW+1,2        'PRINT' SPECIFIED
         BNE   PRINTX
         SPACE
         LA    R1,MYDAPL
         USING DAPL,R1
         MVC   DAPLUPT(4),CPPLUPT
         MVC   DAPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,DAPLECB
         MVC   DAPLPSCB(4),CPPLPSCB
         LA    R15,MYDAPB
         ST    R15,DAPLDAPB
         DROP  R1                  DAPL
         LA    R15,MYDAPB
         USING DAPB18,R15
         XC    0(40,R15),0(R15)
         MVI   DA18CD+1,X'18'
         MVC   DA18DDN,=CL8'OZPRINT'
         MVC   DA18MNM(8),=CL8' '
         MVC   DA18SCLS(2),=CL8' '
         OI    DA18CTL,DA18PERM
         LA    R1,MYDAPL
         BAL   R14,CALLDAIR
         DROP  R15                 DAPB18
         SPACE
************************************************************
*                                                          *
*         GET THE DSNAME                                   *
*                                                          *
************************************************************
         SPACE
         LA    R6,PRINT
         LH    R1,4(,R6)           GET LENGTH OF DSN
         LTR   R1,R1               IS LENGTH ZERO (MEMBER ONLY)
         BZ    PRTERR1             YES, USER ENTERED PRINT((MEM))
         STH   R1,DSNAMP
         L     R14,0(,R6)          POINT TO DSNAME
         MVI   DSNAMP+2,C' '
         MVC   DSNAMP+3(43),DSNAMP+2
         BCTR  R1,0
         B     *+10
         MVC   DSNAMP+2(0),0(R14)
         EX    R1,*-6
         SPACE
************************************************************
*                                                          *
*         ALLOCATE THE OZPRINT DATA SET                    *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYDAPB
         USING DAPB08,R15
         XC    0(84,R15),0(R15)
         MVI   DA08CD+1,X'08'
         LA    R14,DSNAMP
         ST    R14,DA08PDSN
         MVC   DA08DDN(8),=CL8'OZPRINT'
         MVC   DA08UNIT,=CL8' '
         MVC   DA08SER,=CL8' '
         MVC   DA08MNM,=CL8' '
         MVC   DA08PSWD,=CL8' '
         MVI   DA08DSP1,DA08OLD
         MVI   DA08DPS2,DA08KEEP
         MVI   DA08DPS3,DA08KEP
         SPACE
         TM    14(R6),X'80'        IS MEMBER SPECIFIED
         BZ    PRTMEMX             NO
         L     R14,08(,R6)         POINT TO MEMBER NAME
         LH    R1,12(,R6)          GET LENGTH OF MEMBER NAME
         BCTR  R1,0
         B     *+10
         MVC   DA08MNM(0),0(R14)
         EX    R1,*-6
PRTMEMX  EQU   *
         SPACE
         TM    22(R6),X'80'        IS PSWD SPECIFIED
         BZ    PRTPSWX             NO
         L     R14,16(,R6)         POINT TO PSWD
         LH    R1,20(,R6)          GET LENGTH OF PSWD
         BCTR  R1,0
         B     *+10
         MVC   DA08PSWD(0),0(R14)
         EX    R1,*-6
PRTPSWX  EQU   *
         LA    R1,MYDAPL
         BAL   R14,CALLDAIR
         LTR   R6,R15
         BZ    OKDAIRPO
         CH    R15,=H'8'           IS DAIR RC = 8
         BNE   PRTDAIRF
         LA    R15,MYDAPB
         CLC   DA08DARC(4),=X'17080008'  NOT IN CATALOG
         BNE   PRTDAIRF
         XC    DA08DARC(4),DA08DARC
         MVI   DA08DSP1,DA08NEW
         MVI   DA08DPS2,DA08CAT
         MVI   DA08DPS3,DA08CATL
         MVC   DA08PQTY,=F'1'
         MVC   DA08SQTY,=F'3'
         MVI   DA08CTL,DA08TRKS
         CLI   DA08MNM,C' '        IS MEMBER SPECIFIED
         BE    *+10                NO
         MVC   DA08DQTY,=F'1'      YES, DIRECTORY SPACE
         LA    R1,MYDAPL
         BAL   R14,CALLDAIR
         DROP  R15                 DAPB08
         LTR   R6,R15
         BZ    OKDAIRP
PRTDAIRF LR    R15,R6              RESTORE R15
         BAL   R14,DAIRFAIL
         B     EXIT12
PRTERR1  LA    R1,=C'INVALID PRINT DSNAME'
         LA    R0,20
         BAL   R14,PUTMSG
         B     EXIT12
OKDAIRPO OI    STATUS,STATPALC     TELL CLEANUP TO FREE IT
         LA    R15,MYDAPB
         USING DAPB08,R15
         TM    DA08DSO,X'02'       IS IT A PDS
         BZ    OKDAIRPS            NO
         CLI   DA08MNM,C' '        YES, WAS MEMBER SPECIFIED
         BNE   OKDAIRP             YES, BRANCH
         LA    R1,=C'PRINT DATA SET IS PDS BUT MEMBER NOT SPECIFIED'
         LA    R0,46
         BAL   R14,PUTMSG
         B     EXIT12
OKDAIRPS CLI   DA08MNM,C' '        WAS MEMBER SPECIFIED
         BE    OKDAIRP             NO, BRANCH
         LA    R1,=C'PRINT DATA SET IS SEQ BUT MEMBER SPECIFIED'
         LA    R0,42
         BAL   R14,PUTMSG
         B     EXIT12
         DROP  R15                 DAPB08
OKDAIRP  EQU   *
         OI    STATUS,STATPALC     TELL CLEANUP TO FREE IT
PRINTX   EQU   *
         SPACE
************************************************************
*                                                          *
*         BUILD THE PARM FIELD                             *
*                                                          *
************************************************************
         SPACE
         LA    R4,PARM+2           START OF PARM TEXT
         LA    R5,PARM+2-1         START OF PARM TEXT, MINUS 1
         LA    R6,SYSOUT
         TM    6(R6),X'80'         SYSOUT SPECIFIED
         BZ    SYSOUTX             NO, BRANCH
         L     R15,0(,R6)          YES, GET ADDRESS OF SYSOUT CLASS
         MVC   0(3,R5),=C',S='     ,S=
         MVC   3(1,R5),0(R15)      ,S=A
         OI    3(R5),X'40'         CAPS
         LA    R5,4(,R5)           POINT PAST S=A               11MAY81
SYSOUTX  EQU   *
         SPACE
         LA    R6,FILES
         TM    6(R6),X'80'         FILES SPECIFIED
         BZ    FILESX              NO, BRANCH
         MVC   0(3,R5),=C',D='     ,D=
         LA    R5,3(,R5)
         L     R15,0(,R6)          GET ADDRESS OF FILES
         LH    R1,4(,R6)           GET LENGTH
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10
         MVC   0(0,R5),0(R15)      (EXECUTED)
         EX    R1,*-6
         OC    0(24,R5),=CL24' '   CAPS
         LA    R5,1(R1,R5)
FILESX   EQU   *
         SR    R5,R4               COMPUTE LENGTH OF PARM
         BNM   *+6                 IF NEGATIVE
         SR    R5,R5                  THEN MAKE IT ZERO
         STH   R5,PARM             STORE LENGTH OF PARM
         SPACE
************************************************************
*                                                          *
*         INVOKE THE 'OZD' PROGRAM                         *
*                                                          *
************************************************************
         SPACE
         LA    R1,PARM
         ST    R1,PARMPTR
         OI    PARMPTR,X'80'
         LA    R1,PARMPTR
         LINK  EP=BLGOZD,SF=(E,LINKAREA)
         SPACE
************************************************************
*                                                          *
*         TERMINATION                                      *
*                                                          *
************************************************************
         SPACE 1
EXIT0    SR    R15,R15             RETURN CODE ZERO
         B     EXIT
EXIT12   LA    R15,12              RETURN CODE 12
EXIT     LR    R2,R15              SAVE RETURN CODE
         TM    STATUS,STATVALC     UNALLOCATE NEEDED
         BZ    NOX80               NO, BRANCH
         LA    R15,MYDAPB
         USING DAPB18,R15
         XC    0(40,R15),0(R15)
         MVI   DA18CD+1,X'18'
         MVC   DA18DDN,=CL8'VSAM'
         MVC   DA18MNM(8),=CL8' '
         MVC   DA18SCLS(2),=CL8' '
         LA    R1,MYDAPL
         BAL   R14,CALLDAIR
NOX80    EQU   *
         TM    STATUS,STATPALC     UNALLOCATE NEEDED
         BZ    NOX40               NO, BRANCH
         LA    R15,MYDAPB
         USING DAPB18,R15
         XC    0(40,R15),0(R15)
         MVI   DA18CD+1,X'18'
         MVC   DA18DDN,=CL8'OZPRINT'
         MVC   DA18MNM(8),=CL8' '
         MVC   DA18SCLS(2),=CL8' '
         OI    DA18CTL,DA18PERM
         LA    R1,MYDAPL
         BAL   R14,CALLDAIR
NOX40    EQU   *
         IKJRLSA MYANS
         LTR   R2,R2               IS RC ZERO?
         BZ    STACKDX             YES, BRANCH
         MVC   MYSTPB(STACKDL),STACKD
         SPACE
         STACK DELETE=ALL,PARM=MYSTPB,MF=(E,MYIOPL)
         SPACE
         TCLEARQ
STACKDX  EQU   *
EXITX    LR    R1,R13
         L     R0,@SIZE            SUBPOOL AND LENGTH
         L     R13,4(,R13)         RESTORE PREVIOUS SAVEAREA
         FREEMAIN R,A=(1),LV=(0)
         LR    R15,R2
         LM    0,12,20(R13)        RESTORE REGISTERS
         L     R14,12(,R13)
         BR    14                  RETURN
         SPACE
************************************************************
*                                                          *
*         CALL DYNAMIC ALLOCATION INTERFACE ROUTINE        *
*                                                          *
************************************************************
         SPACE
CALLDAIR LR    R8,R14
         L     R15,16              CVTPTR
         TM    X'2DC'(R15),X'80'
         BNO   DAIRLINK
         L     R15,X'2DC'(,R15)
         BALR  R14,R15
         B     DAIRFINI
DAIRLINK EQU   *
         LINK  EP=IKJDAIR,SF=(E,LINKAREA)
DAIRFINI LR    R14,R8
         BR    R14
         SPACE
************************************************************
*                                                          *
*         CONSTANTS FOR NORMAL PROCESSING                  *
*                                                          *
************************************************************
         SPACE
         LTORG
SYSDSN   DC    H'12',CL44'INFOSYS.VSAM'
         SPACE
************************************************************
*                                                          *
*         PARSE FAILURE ROUTINE                            *
*                                                          *
************************************************************
         SPACE
PARSERR  LA    R1,MSG01            PARSE ERROR
         LA    R0,L'MSG01          PARSE ERROR
         BAL   R14,PUTMSG
         B     EXIT12
         SPACE
************************************************************
*                                                          *
*        DYNAMIC ALLOCATION FAILURE ROUTINE                *
*                                                          *
************************************************************
         SPACE
DAIRFAIL ST    R14,MYDFREGS
         LA    R1,MYDFPARM
*        USING DFDSECTD,R1         MAPPED BY IKJEFFDF DFDSECT=YES MACRO
         ST    R15,MYDFRC
         LA    R15,MYDFRC
         ST    R15,4(,R1)          DFRCP
         LA    R15,MYDAPL
         ST    R15,0(,R1)          DFDAPLP
         SLR   R15,R15
         ST    R15,MYJEFF02
         LA    R15,MYJEFF02
         ST    R15,8(,R1)          DFJEFF02
         LA    R15,1               DFDAIR
         STH   R15,MYDFID
         LA    R15,MYDFID
         ST    R15,12(,R1)         DFIDP
         ST    R2,16(,R1)          DFCPPLP
         LINK  EP=IKJEFF18,SF=(E,LINKAREA)
         L     R15,MYDFRC
*        DROP  R1                  DFDSECTD
         L     R14,MYDFREGS
         BR    R14
         SPACE
************************************************************
*                                                          *
*        PUTMSG ROUTINE                                    *
*                                                          *
************************************************************
         SPACE
PUTMSG   STM   R14,R1,PUTSAVE
         XC    MYOLD(8),MYOLD
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPM
         LA    R14,1               NO. OF MESSAGE SEGMENTS
         ST    R14,MYOLD
         LA    R14,MYSEG1          POINT TO 1ST SEGMENT
         ST    R14,MYOLD+4
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         LA    R15,MYSEG1+4
         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?
         BE    *+16                YES - BRANCH
         LA    R14,1(,R14)         ADD 1 TO LENGTH
         MVI   0(R15),C' '         INSERT LEADING BLANK
         LA    R15,1(,R15)         BUMP POINTER
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,PUTSAVE
         BR    R14
         SPACE
************************************************************
*                                                          *
*        CONSTANTS                                         *
*                                                          *
************************************************************
         SPACE
         LTORG
         SPACE
MODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
STACKD   STACK DELETE=ALL,MF=L
STACKDL  EQU   *-STACKD
         SPACE
MSG01    DC    C'ERROR IN PARSE'
         DC    0D'0'
         SPACE
************************************************************
*                                                          *
*        PARSE PCL                                         *
*                                                          *
************************************************************
         SPACE
         PRINT NOGEN
INFOPCL  IKJPARM
SYSOUTKW IKJKEYWD
         IKJNAME 'SYSOUT',SUBFLD=SYSOUTSF
         IKJNAME 'PRINT',SUBFLD=PRINTSF
FILESKW  IKJKEYWD
         IKJNAME 'FILES',SUBFLD=FILESSF
SYSOUTSF IKJSUBF
SYSOUT   IKJIDENT 'SYSOUT CLASS',                                      +
               FIRST=ALPHANUM,MAXLNTH=1,                               +
               PROMPT='SYSOUT CLASS'
PRINTSF  IKJSUBF
PRINT    IKJPOSIT DSNAME,USID,PROMPT='DATA SET NAME FOR OZPRINT'
FILESSF  IKJSUBF
FILES    IKJIDENT 'FILE NAMES',                                        +
               FIRST=NONATABC,OTHER=NONATABC,MAXLNTH=24,               +
               PROMPT='FILE NAMES'
         IKJENDP
         PRINT GEN
         SPACE
************************************************************
*                                                          *
*        DSECTS                                            *
*                                                          *
************************************************************
         SPACE
@DATA    DSECT
         DS    18F                 REGISTER SAVEAREA
DOUBLE   DS    D                   DOUBLEWORD WORK AREA
LINKAREA DS    2F
STATUS   DS    H
STATVALC EQU   X'80'               DDNAME VSAM ALLOCATED
STATPALC EQU   X'40'               DDNAME OZPRINT ALLOCATED
PARMPTR  DS    F
PARM     DS    H,CL100
MYPPL    DS    7F                  USED BY PARSE
MYANS    DS    F                   USED BY PARSE
MYECB    DS    F                   USED BY PUTLINE, PARSE
MYIOPL   DS    4F                  USED BY PUTLINE ROUTINE
MYPTPB   DS    3F                  USED BY PUTLINE ROUTINE
MYPUTLEP DS    F                   USED BY PUTLINE ROUTINE
MYOLD    DS    2F                  USED BY PUTLINE ROUTINE
MYSEG1   DS    2H,CL256            USED BY PUTLINE ROUTINE
PUTSAVE  DS    4F                  USED BY PUTLINE ROUTINE
MYSTPB   DS    5F                  STACK PARAMETER BLOCK
MYDAPL   DS    5F
MYDAPB   DS    21F
DSNAME   DS    H,CL44
DSNAMP   DS    H,CL44
MYDFPARM DS    5F  USED BY DAIRFAIL
MYDFREGS DS    F   USED BY DAIRFAIL
MYDFRC   DS    F   USED BY DAIRFAIL
MYJEFF02 DS    F   USED BY DAIRFAIL
MYDFID   DS    H   USED BY DAIRFAIL
         DS    0D
@DATAL   EQU   *-@DATA
         SPACE
         IKJCPPL
         SPACE
         IKJIOPL
         SPACE
         IKJPPL
         SPACE
         IKJDAPL
         SPACE
         IKJDAP18
         SPACE
         IKJDAP08
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
