ASMG     TITLE '''GSFTSOAS'' -- ASMG PROMPTER -- FIRST LOAD'
** 'GSFTSOAS' -- ASSEMBLER (G) PROMPTER TO EXECUTE UNDER TSO
** DESIGNED AND DEVELOPED BY J. SCHINDLER (CSC)
** AT GODDARD SPACE FLIGHT CENTER, GREENBELT, MARYLAND
** SEPTEMBER 1974
**
** MODIFIED NOV. 1974 TO USE ASMG V2L7 OPTION NAMES.
**
** MODIFIED FEB. 1975 --
**  ALLOW FOR ASSEMBLY OF DATA SET WHOSE NAME IS NOT QUALIFIED BY ASM.
**  CHANGED 'XREF' AND 'FULLXREF' TO FOLLOW ASMG V2L7 DEFINITIONS.
**  IF 'XREF' OR 'XREF(SHORT)' IS SPECIFIED, PUT XREF=SHORT IN PARM
**    FIELD.
**  IF 'XREF(FULL)' IS SPECIFIED, PUT XREF=FULL IN PARM FIELD.
**  IF 'FULLXREF' OR 'FULLXREF(SHORT)' IS SPECIFIED, PUT FULLXREF=SHORT
**    IN PARM FIELD.
**  IF 'FULLXREF(FULL)' IS SPECIFIED, PUT FULLXREF=FULL IN PARM
**    FIELD.
**  IF NEITHER 'XREF' NOR 'FULXREF' IS SPECIFIED, PUT
**    FULLXREF=SHORT IN PARM FIELD.
**  ALLOW FOR 'CALIGN/NOCALIGN' AND 'UMAP/NOUMAP' KEYWORDS.
**  SPECIFY 'NOPRINT' VIA THE PARM FIELD IF NO LISTING IS
**  TO BE OUTPUT.
**
** MODIFIED JULY 1975 --
**  CORRECTED ERROR -- REG 2 WAS USED BEFORE VALUE WAS STORED IN
**  DA0CNUMB (NO. OF DDNAMES TO BE CONCATENATED).
**  INCLUDED CODING TO CORRECTLY CREATE OBJ AND LIST DATA SET NAMES
**  WHEN ASM ONLY (ID.ASM) IS ASSEMBLED.
** MODIFIED SEPT 1975 --
**  ELIMINATED STAX AND ATTENTION HANDLING.
**
**
**
**     COMMAND NAME -- ASMG
**
** ATTR - NONE
**
**
** THIS IS THE FIRST LOAD OF A TWO LOAD ASMG COMMAND PROCESSOR.
** THIS LOAD VERIFIES THE DATA SET NAMES, ALLOCATES, AND CONCATENATES,
** AND THEN XCTL'S TO THE SECOND LOAD. THE SECOND LOAD ATTACHES
** THE ASMG, DECONCATENATES, AND FREE ALL THE DDNAMES ALLOCATED.
** THE PARM FIELD, DDNAMES, DAIRPL, ETC ARE PASSED TO THE SECOND LOAD
** THRU SUBPOOL 0.
**
**
** EXTERNAL ROUTINES CALLED EITHER BY A STANDARD IBM MACRO OR BY LINK
**
**     IKJPARS -- PARSE
**     LOCATE -- USED FOR CATALOG SEARCH
**     OBTAIN -- USED TO OBTAIN THE FORMAT 1 DSCB. (THE LOCATE MACRO
**               WILL BE EXECUTED BEFORE OBTAIN.)
**     IKJEFD00 -- DAIR
**     PUTLINE AND TPUT -- USED TO OUTPUT INFO AND ERROR MESSAGES TO
**                         THE TERMINAL
**     PUTGET -- USED TO PROMPT FOR DATA SET NAME AND GET THE RESPONSE
**     OPEN AND CLOSE -- USED ONLY FOR FIND MACRO
**     FIND -- USED TO DETERMINE IF A MEMBER NAME IS IN A PDS
**             (ASM DATA SET ONLY)
**     CAMLST -- FOR LOCATE AND OBTAIN
**     STACK -- USED TO DELETE THE INPUT STACK IF AN ERROR IS
**              ENCOUNTERED
**
**
**  NOTE -
**    EVEN THOUGH A DDNAME LIST THAT CONSISTS OF DDNAMES ASSIGNED
**    BY DAIR IS PASSED TO ASSEMBLER G, PROGRAM COMMENTS
**    REFERENCE THE STANDARD DDNAME, I. E., SYSPRINT,
**    SYSIN, SYSUT2, ETC.
**
         EJECT
GSFTSOAS CSECT
         EQUREGS
**   FLAGS EQUATES --
SFLG     EQU   B'10000000' SYSOUT FLAG
NOTSFLG  EQU   B'01111111'
PFLG     EQU   B'01000000' SYSPRINT FLAG
NOTPFLG  EQU   B'10111111'
QFLG     EQU   B'00100000' QUOTE FLAG
NOTQFLG  EQU   B'11011111'
DFLG     EQU   B'00010000' DSN DISP FLAG
NOTDFLG  EQU   B'11101111'
**
**
** REGISTER USAGE -
**   R9, R10, R11, AND R12 ARE PROGRAM BASE REGS
**   R8 IS USED FOR THE BASE OF PARSE DESCRIPTOR LIST
**   R7 IS USUALLY USED FOR THE BASE OF DAIR PARM BLOCK
**   R6 IS USED FOR ADDR OF PDE FOR ASM AND LIB DSNAME LISTS
**   R0, R1, R13, R14, AND R15 ARE STANDARD PARM AND
**   LINKAGE REGISTERS
**   R1 AND R15 ARE USED FOR  EX OF MVCR1R15
**
START    SAVE  (14,12),,GSFTSOAS
         USING START,R15
         LM    R9,R12,BASEADDR
         DROP  R15
         USING START,R9,R10,R11,R12
         B     BEGIN
BASEADDR DC    A(START)
         DC    A(START+X'1000')
         DC    A(START+X'2000')
         DC    A(START+X'3000')
BEGIN    LR    R7,R1 SAVE PTR TO CPPL
         ST    R13,SAVE+4
         LA    R2,SAVE
         ST    R2,8(R13)
         LR    R13,R2
**
** SET UP PARSE PARM LIST (PPL)
**
         USING CPPL,R7  BASE FOR COMMAND PROCESSOR PARM LIST (CPPL)
         LA    R8,PARSEPL PARSE PARM LIST
         USING PPL,R8 BASE FOR PARSE PARM LIST
         MVC   PPLUPT,CPPLUPT USER'S PROFILE TABLE
         MVC   PPLECT,CPPLECT ENVIRONMENT CONTROL TABLE
         LA    R2,ECB
         ST    R2,PPLECB EVENT CONTROL BLOCK
         LA    R2,ANSWER
         ST    R2,PPLANS ANSWER
         MVC   PPLCBUF,CPPLCBUF COMMAND BUFFER
         XC    PPLUWA(4),PPLUWA USER WORK AREA ADDR
         MVC   PPLPCL,=A(PPLPARM) PARM CONTROL LIST ADDR
**
** INITIALIZE IOPL FOR PUTGET AND STACK MACRO
**
         MVC   IOPLUPT,CPPLUPT
         MVC   IOPLECT,CPPLECT
         LA    R2,ECB
         ST    R2,IOPLECB
** IOPLIOPB WILL BE INITIALIZED BY THE MACRO
**
** SET UP DAIR PARAMETER LIST
**
         LA    R8,DAIRPL DAIR PARM LIST
         USING DAPL,R8 BASE FOR DAIR PARM LIST
         MVC   DAPLUPT,CPPLUPT
         MVC   DAPLECT,CPPLECT
         LA    R2,ECB
         ST    R2,DAPLECB
         MVC   DAPLPSCB,CPPLPSCB PROTECTED STEP CONTROL BLOCK
         LA    R2,DAIRPB LOAD ADDR OF DAIR PARM BLOCK
         ST    R2,DAPLDAPB STORE ADDR IN DAIR PARM LIST
**
** STORE USERID
**
         L     R15,CPPLPSCB
         SR    R3,R3
         IC    R3,7(R15) LOAD LENGTH OF ID
         LR    R4,R3
         BCTR  R3,R0
         LA    R1,USERID
         EX    R3,MVCR1R15 MOVE USER ID
         LA    R3,USERID+1(R3)
         MVI   0(R3),C'.' MOVE PERIOD INTO USERID SO THAT -- ID.
         LA    R4,1(R4) INCREMENT FOR PERIOD
         STH   R4,USERIDL
         DROP  R7,R8
**
** INITIALIZE
**
         MVI   FLAGS,0
**   FLAGS SETTINGS -
**             1... .... - INDICATES SYSOUT OUTPUT (USED BY SECOND
**                         LOAD)
**             .1.. .... - INDICATES SYSPRINT OUTPUT (TESTED BEFORE
**                         TESTING KEYWORDS THAT AFFECT THE SYSPRINT
**                         OUTPUT)
**             ..1. .... - INDICATES DSNAME INPUT IN QUOTES
**             ...1 .... - INDICATES DATA SET IS NEW
**             .... 1111 - NOT USED
**
         XC    DDNLIST(80),DDNLIST
         XC    LIBDSCNT,LIBDSCNT
         XC    ASMPARML,ASMPARML
         XC    ASMLISTL,ASMLISTL
         XC    ANSWER1,ANSWER1
**
** LINK TO PARSE
**
         XC    ECB,ECB
         LA    R1,PARSEPL
         LINK  EP=IKJPARS LINK TO PARSE
         LTR   R15,R15 TEST FOR NORMAL COMPLETION
         BZ    PARSEOK
PARSERR  DC    0H'0' PARSE ERROR
         CVD   R15,DTEMP
         UNPK  DTEMP(3),DTEMP+6(2)
         OI    DTEMP+2,X'F0'
         MVC   MSG01C,DTEMP+1
         LA    R0,MSG01
         BAL   R14,PUTLINE
         B     RETURN
PARSEOK  DC    0H'0'
         L     R8,ANSWER
         USING PDL,R8 BASE FOR PARSE DESCRIPTOR LIST
         MVC   MSG05C,=CL7'ASM-'
         LA    R2,ANSWER1 FIX UP PARSE PARM LIST FOR PARSING
         ST    R2,PARSEPL+16  NEW DSNAME
         LA    R2,TBUFL
         ST    R2,PARSEPL+20
         MVC   PARSEPL+12,=A(DSNPPL)
         LA    R6,ASMDSNA
ASMLOOP  DC    0H'0'
         NI    FLAGS,NOTQFLG INIT QUOTE AND DSN DISP BITS
         NI    FLAGS,NOTDFLG
         MVC   ASMMEM,BLANK
         TM    14(R6),X'80' TEST FOR MEMBER
         BZ    ASMTESTQ
         LH    R2,12(R6) LOAD LENGTH OF MEM
         BCTR  R2,R0
         LA    R1,ASMMEM
         L     R15,8(R6)
         EX    R2,MVCR1R15
ASMTESTQ DC    0H'0'
         TM    6(R6),X'40' TEST FOR QUOTES
         BZ    ASMTEST1
         OI    FLAGS,QFLG ASM DSNAME INPUT IN QOUTES
ASMTEST1 L     R2,0(R6) LOAD ADDR OF DSN
         LTR   R2,R2 TEST FOR MEMBER ONLY
         BNZ   ASMTEST2
         LA    R3,ASMDSN LOAD ADDR OF ASM DSNAME
         MVC   0(3,R3),=C'ASM' DSN=ID.ASM
         LA    R4,3 LENGTH OF 'ASM'
         STH   R4,ASMDSNL
         B     ASMTSTAS BRANCH TO TEST DSN IN CATALOG
ASMTEST2 LH    R2,4(R6) LOAD LENGTH OF DSN
         STH   R2,ASMDSNL STORE LENGTH OF DSN
         BCTR  R2,R0
         LA    R1,ASMDSN
         L     R15,0(R6)
         EX    R2,MVCR1R15
ASMTSTAS DC    0H'0'
         LA    R1,ASMDSNL CHECK CATALOG FOR DSN WITHOUT QUAL.
         BAL   R14,SRCHCAT
         LTR   R15,R15
         BZ    ASMTSTOB DSNAME IN CATALOG -- GO OBTAIN
         TM    FLAGS,QFLG TEST FOR QUOTES
         BO    ASMPUTMS
         LH    R2,ASMDSNL
         LA    R3,ASMDSN(R2)
         MVC   0(4,R3),=C'.ASM' APPEND .ASM TO DSN
         LA    R2,4(R2)
         STH   R2,ASMDSNL
         LA    R1,ASMDSNL
         BAL   R14,SRCHCAT
         LTR   R15,R15
         BZ    ASMTSTOB       BRANCH TO BRANCH TO OBTAIN
         LH    R2,ASMDSNL
         SH    R2,=H'4' SUBTRACT LENGTH OF .ASM FROM DSN LENGTH
         STH   R2,ASMDSNL
ASMPUTMS DC    0H'0'
         LA    R0,MSG03 ASMDSN IS NOT IN CATALOG
         LA    R1,ASMDSNL
         BAL   R14,OUTMSG  BRANCH TO OUTPUT MESSAGE
ASMPUT   DC    0H'0'
         LA    R2,MSG05
         ST    R2,OLD+4
         PUTGET PARM=PGPB,MF=(E,IOPL)
         CH    R15,=H'8' TEST FOR ERROR
         BH    PGERROR
         L     R15,PGPB+12 LOAD ADDR OF INPUT LINE
         LA    R1,TBUFL
         LH    R2,0(R15) LOAD LENGTH OF INPUT LINE
         CH    R2,=H'64'
         BNH   ASMA
         LA    R2,64
ASMA     BCTR  R2,R0
         EX    R2,MVCR1R15 MOVE INPUT LINE TO TBUF
         LH    R0,0(R15) LOAD LENGTH OF INPUT LINE
         O     R0,=X'01000000' SP=1
         LR    R1,R15
         FREEMAIN R,LV=(0),A=(1)
         LH    R0,TBUFL
         CH    R0,=H'4' TEST FOR NULL LINE
         BNH   ASMENDLP
         LR    R1,R6
         BAL   R14,PARSEDSN GO PARSE THE ASM DSNAME
         B     ASMLOOP
ASMTSTOB LA    R1,ASMDSNL DATA SET NAME IS IN CATALOG
         BAL   R14,OBTAIN  BRANCH TO OBTAIN
         CH    R15,=H'4'
         BH    ASMPUT RC GREATER THAN 4
         BL    ASMPDS BRANCH TO TEST PDS MEMBER
         CLI   ASMMEM,C' ' DATA SET IS PS - TEST FOR MEMBER NAME INPUT
         BE    ASMALLOC  BRANCH TO ALLOCATE
         LH    R2,ASMDSNL  PUT (MEMBER NAME) IN ASMDSN
         LA    R3,ASMDSN(R2)
         MVI   0(R3),C'('
         MVC   1(8,R3),ASMMEM
         MVI   9(R3),C')'
         LA    R2,10(R2)
         STH   R2,ASMDSNL
         LA    R0,MSG12
         LA    R1,ASMDSNL
         BAL   R14,OUTMSG OUTPUT 'NOT PARTITIONED'
         B     ASMPUT
ASMPDS   CLI   ASMMEM,C' ' TEST FOR MEMBER NAME INPUT
         BNE   ASMTSTME
         MVC   ASMMEM,=C'TEMPNAME' MEMBER NAME BLANK - ASSUME TEMPNAME
         LA    R0,MSG13
         LA    R1,ASMDSNL
         BAL   R14,OUTMSG
ASMTSTME LA    R0,ASMMEM  TEST FOR MEMBER NAME IN DATA SET
         LA    R1,ASMDSNL
         BAL   R14,MEMTEST
         CH    R15,=H'4'
         BH    ASMPUT  ERROR ENCOUNTERED
         BL    ASMALLOC  GO ALLOCATE DATA SET
         LH    R2,ASMDSNL
         LA    R3,ASMDSN(R2)
         MVI   0(R3),C'('  PUT (MEMBER NAME) IN DSN
         MVC   1(8,R3),ASMMEM
         MVI   9(R3),C')'
         LA    R2,10(R2)
         STH   R2,ASMDSNL
         LA    R0,MSG17
         LA    R1,ASMDSNL
         BAL   R14,OUTMSG OUTPUT 'DOES NOT CONTAIN MEMBER NAME'
         B     ASMPUT
ASMALLOC LA    R7,DAIRPB ALLOCATE ASM DATA SET
         USING DAPB08,R7
         MVC   DA08CD,=X'0008'
         XC    DA08FLG(6),DA08FLG ZERO FLAG, DARC, CTRC
         LA    R3,ASMDSNL
         ST    R3,DA08PDSN STORE ADDR OF ASM DSN
         MVI   DA08DDN,C' '
         MVC   DA08DDN+1(23),DA08DDN BLANK DDN, UNIT, AND SERIAL NO.
         XC    DA08BLK(16),DA08BLK ZERO BLK,PQTY,SQTY, AND DQTY
         MVC   DA08MNM,ASMMEM  MOVE IN MEMBER NAME
         MVC   DA08PSWD,BLANK PAS WORD
         MVI   DA08DSP1,B'00001000' SHR
         MVI   DA08DPS2,B'00001000'  KEEP
         MVI   DA08DPS3,B'00001000' KEEP
         MVI   DA08CTL,0
         TM    FLAGS,QFLG TEST FOR QUOTES
         BO    *+8
         OI    DA08CTL,B'00100000' PREFIX USER ID
         XC    DA08CTL+1(4),DA08CTL+1 ZERO RESERVED AND DSO
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00 LINK TO DAIR
         LTR   R15,R15 TEST FOR ERRORS
         BZ    ASMX2
         ST    R15,SAVER15
         LA    R0,MSG14 OUTPUT 'ALLOCATION ERROR'
         LA    R1,ASMDSNL
         BAL   R14,OUTMSG
         L     R15,SAVER15
         L     R1,DA08DARC
         BAL   R14,DAIRERR
         B     ASMPUT
ASMX2    DC    0H'0'
         LH    R2,ASMLISTL LOAD CNT OF DSNAMES TO BE ASSEMBLED
         LTR   R2,R2
         BNZ   ASMX21
         MVC   DDNLIST+32,DA08DDN PUT THE FIRST DDNAME IN LIST
         MVC   SAVEDSN(46),ASMDSNL SAVE DSN FOR OBJ AND PRINT
ASMX21   DC    0H'0'
         LA    R3,1(R2)
         STH   R3,ASMLISTL
         SLL   R2,3
         LA    R3,ASMLIST(R2)
         MVC   0(8,R3),DA08DDN SAVE DDNAME IN LIST
         CLI   MSGKEYWD+1,1
         BNE   ASMENDLP
         CLI   ASMMEM,C' ' TEST FOR MEMBER NAME
         BE    ASMX21A
         LH    R2,ASMDSNL
         LA    R3,ASMDSN(R2)
         MVI   0(R3),C'('
         MVC   1(8,R3),ASMMEM
         MVI   9(R3),C')'
         LA    R2,10(R2)
         STH   R2,ASMDSNL
ASMX21A  LA    R0,MSG18
         LA    R1,ASMDSNL
         BAL   R14,OUTMSG OUTPUT 'DATA SET --- ALLOCATED TO SYSIN'
ASMENDLP CLI   24(R6),X'FF' TEST FOR END OF LIST
         BE    ASMX2B
         LH    R2,ASMLISTL
         CH    R2,=H'10'
         BE    ASMX2A
         L     R6,24(R6)
         B     ASMLOOP
ASMX2A   LA    R0,MSG36
         BAL   R14,PUTLINE
         LA    R2,MSG37
         ST    R2,OLD+4
         PUTGET PARM=PGPB,MF=(E,IOPL) ENTER NULL LINE TO CONTINUE
         CH    R15,=H'8'
         BH    PGERROR
         L     R1,PGPB+12 LOAD ADDR OF INPUT LINE
         LH    R0,0(R1) LOAD LENGTH OF INPUT LINE
         CH    R0,=H'4' TEST FOR NULL LINE
         BH    RETURN DONT WANT TO CONTINUE
         O     R0,=X'01000000' SP=1
         FREEMAIN R,LV=(0),A=(1)
         B     ASMX2C
ASMX2B   LH    R2,ASMLISTL
         LTR   R2,R2
         BNZ   ASMX2C
         LA    R0,MSG40
         BAL   R14,PUTLINE
         B     RETURN
ASMX2C   DC    0H'0'
         LH    R2,ASMLISTL  LOAD NO. OF DATA SETS TO BE ASSMEBLED
         CH    R2,=H'1'
         BE    OBJSEC
         LA    R7,DAIRPB CONCATENATE DSN'S FOR ASM
         USING DAPB0C,R7
         MVC   DA0CCD,=X'000C'
         XC    DA0CFLG(10),DA0CFLG
         STH   R2,DA0CNUMB
         SLL   R2,3
         BCTR  R2,R0
         LA    R1,DA0CDDN
         LA    R15,ASMLIST
         EX    R2,MVCR1R15
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00 GO CONCATENATE
         LTR   R15,R15
         BZ    OBJSEC
         ST    R15,SAVER15
         LA    R0,MSG38
         BAL   R14,PUTLINE
         L     R1,DA0CDARC
         SRL   R1,16
         SLL   R1,16
         L     R15,SAVER15
         BAL   R14,DAIRERR
         B     RETURN
         DROP  R7
OBJSEC   MVC   MSG05C,=CL7'OBJECT-'
         NI    FLAGS,NOTQFLG INIT FLAGS
         NI    FLAGS,NOTDFLG
         CLI   OBJKEYWD+1,4
         BL    OBJX3  KEYWORD IS OBJ OR LOAD
         LH    R2,ASMPARML KEYWORD IS NOOBJ OR NOLOAD -- LOAD LENGTH
         LTR   R2,R2
         BNZ   OBJX1
         LA    R3,ASMPARM
         B     OBJX2
OBJX1    LA    R3,ASMPARM(R2)
         MVI   0(R3),C','
         LA    R2,1(R2)
         LA    R3,1(R3)
OBJX2    MVC   0(6,R3),=C'NOLOAD'
         LA    R2,6(R2)
         STH   R2,ASMPARML
         CLI   MSGKEYWD+1,1
         BNE   PRINTSEC
         LA    R0,MSG34
         BAL   R14,PUTLINE
         B     PRINTSEC BRANCH TO CHECK 'LIST' AND/OR 'PRINT' KEYWORDS
**
** 'LOAD' OR 'OBJ' KEYWORD IS SPECIFIED
**
OBJX3    NI    FLAGS,NOTQFLG  SET QUOTE AND NEW DS FLAGS
         NI    FLAGS,NOTDFLG
         MVC   OBJMEM,BLANK
         TM    OBJDSNA+14,B'10000000' TEST FOR MEMBER NAME INPUT
         BZ    OBJX4 MEMBER NOT INPUT
         L     R15,OBJDSNA+8 ADDR OF MEMBER NAME
         LH    R3,OBJDSNA+12 LOAD LENGTH OF MEMBER NAME
         BCTR  R3,R0
         LA    R1,OBJMEM
         EX    R3,MVCR1R15
OBJX4    L     R15,OBJDSNA LOAD ADDR OF DSN
         LTR   R15,R15 TEST FOR ZERO ADDR
         BNZ   OBJX4A OBJ DSNAME INPUT
         CLI   OBJMEM,C' ' TEST FOR MEMBER ONLY INPUT
         BE    OBJASMDS MEMBER NOT INPUT EITHER - GO TO USE ASM DSN
OBJDSOBJ MVC   OBJDSN(3),=C'OBJ' FIX UP DSNAME WITH QUALIFIER ONLY
         LA    R2,3
         STH   R2,OBJDSNL
         B     OBJSRCAT
OBJX4A   LH    R3,OBJDSNA+4 LOAD LENGTH OF DSN
         STH   R3,OBJDSNL
         BCTR  R3,R0
         LA    R1,OBJDSN
         EX    R3,MVCR1R15
         TM    OBJDSNA+6,B'01000000' TEST FOR QUOTES
         BZ    OBJX5
         OI    FLAGS,QFLG SET FLAG TO INDICATE QUOTES
         B     OBJSRCAT GO CHECK CATALOG
OBJX5    LH    R2,OBJDSNL LOAD LENGTH OF DSNAME
         LA    R3,OBJDSN-4(R2) POINT AT (.) IF LAST QUAL IS 3 CHAR.
         CLC   0(4,R3),=C'.OBJ'
         BE    OBJSRCAT LAST QUAL. IS OBJ
         CH    R2,=H'3'  IF OBJ DSNAME IS OBJ ONLY,
         BH    OBJX5A    DONT QUALIFY
         CLC   OBJDSN(3),=C'OBJ'  IS DATA SET NAME 'OBJ' ONLY?
         BE    OBJSRCAT  YES, GO SEARCH CATALOG
OBJX5A   DC    0H'0'
         LA    R3,OBJDSN(R2)
         MVC   0(4,R3),=C'.OBJ' APPEND .OBJ QUAL
         LA    R2,4(R2)
         STH   R2,OBJDSNL
OBJSRCAT LA    R1,OBJDSNL
         BAL   R14,SRCHCAT
         LTR   R15,R15 TEST FOR DATA SET IN CATALOG
         BZ    OBJOBT
         OI    FLAGS,DFLG INDICATES NEW DATA SET
         B     OBJALLOC BRANCH TO ALLOCATE NEW DATA SET
OBJASMDS DC    0H'0'
         TM    ASMDSNA+6,X'80' TEST FOR ASM DSN INPUT
         BZ    OBJOBJDS ASM DSN NOT INPUT -- USE ID.OBJ
         TM    ASMDSNA+6,X'40' TEST FOR ASM IN QOUTES
         BZ    OBJX6A NO QUOTES -- USE ASM DSN
         LA    R0,MSG33 ASM DATA SET IN QUOTES -- OUTPUT MSG
         BAL   R14,PUTLINE
         B     OBJPUT GO PROMPT FOR DATA SET NAME
OBJX6A   MVC   OBJDSNL(46),SAVEDSN MOVE LENGTH AND DSN FOR ASM TO OBJ
         LH    R2,OBJDSNL
         LA    R3,OBJDSN-4(R2) POINT TO QUALIFIER
         CLC   0(4,R3),=C'.ASM' TEST FOR ASM QUAL.
         BE    OBJX6B
         CH    R2,=H'3'
         BH    OBJX6A1
         CLC   OBJDSN(3),=C'ASM'
         BE    OBJDSOBJ  GO USE OBJ AS DSNAME
OBJX6A1  DC    0H'0'
         LA    R0,MSG35 PROMPT FOR OBJ DSNAME
         BAL   R14,PUTLINE
         B     OBJPUT
OBJX6B   DC    0H'0'
         MVC   0(4,R3),=C'.OBJ' APPEND .OBJ
         NI    FLAGS,NOTQFLG INIT QUOTE AND DISP BIT
         NI    FLAGS,NOTDFLG
         LA    R1,OBJDSNL
         BAL   R14,SRCHCAT BRANCH TO SEARCH CATALOG
         LTR   R15,R15 TEST FOR OBJDSN IN CATALOG
         BZ    OBJX7
         MVC   OBJMEM,BLANK OUT MEMBER NAME TO ALLOC PS DATA SET
         OI    FLAGS,DFLG INDICATE NEW DS
         B     OBJALLOC BRANCH TO ALLOC DATA SET
OBJX7    MVC   OBJMEM,ASMMEM MOVE MEMBER NAME
         MVI   OBJDSNA+14,0 SET MEMBER NAME FLAG TO NO MEMBER NAME
OBJOBT   LA    R1,OBJDSNL
         BAL   R14,OBTAIN BRANCH TO OBTAIN
         LTR   R15,R15
         BZ    OBJPDS  PDS
         CH    R15,=H'4'
         BNE   OBJPUT ERROR ENCOUNTER -- BRANCH TO  'ENTER INPUT'
         TM    OBJDSNA+14,B'10000000' TEST FOR MEMBER NAME INPUT
         BO    OBJX701
         MVC   OBJMEM,BLANK
         B     OBJX8
OBJX701  LH    R2,OBJDSNL  PUT (MEMNAME) IN DSN BUFFER
         LA    R3,OBJDSN(R2)
         MVI   0(R3),C'('
         MVC   1(8,R3),OBJMEM
         MVI   9(R3),C')'
         LA    R2,10(R2)
         STH   R2,OBJDSNL
         LA    R0,MSG12
         LA    R1,OBJDSNL
         BAL   R14,OUTMSG
         B     OBJPUT
OBJPDS   CLI   OBJMEM,C' ' TEST FOR BLANK MEMBER NAME
         BNE   OBJX8  MEMBER INPUT
         LA    R0,MSG13
         LA    R1,OBJDSNL
         BAL   R14,OUTMSG  OUTPUT 'DS -- IS PART. TEMPNAME ASSUMED'
         MVC   OBJMEM,=C'TEMPNAME'
OBJX8    NI    FLAGS,NOTDFLG INDICATE OLD DATA SET
OBJALLOC LA    R7,DAIRPB ALLOC OBJ DATA SET
         USING DAPB08,R7
         MVC   DA08CD,=X'0008'
         XC    DA08FLG(6),DA08FLG
         LA    R2,OBJDSNL
         ST    R2,DA08PDSN
         MVI   DA08DDN,C' '
         MVC   DA08DDN+1(23),DA08DDN
         XC    DA08BLK(16),DA08BLK
         TM    FLAGS,DFLG TEST FOR NEW DATA SET
         BZ    OBJX10 DATA IS NOT NEW
         MVC   DA08BLK,=F'800' BLKSIZE
         MVI   DA08PQTY+3,X'01' ONE CYL - PRIMARY
         MVI   DA08SQTY+3,X'01' ONE CYL - SECONDARY
         CLI   OBJMEM,C' ' TEST FOR MEMBER NAME
         BE    OBJX9
         MVI   DA08DQTY+3,X'01' ONE DIRECTORY BLK
OBJX9    MVI   DA08DSP1,B'00000100' NEW
         MVI   DA08DPS2,B'00000010' CATLG
         MVI   DA08DPS3,B'00000100' DELETE
         MVI   DA08CTL,B'11000000' CYLINDERS
         B     OBJX13
OBJX10   CLI   MODKEYWD+1,1 TEST FOR MOD KEYWORD
         BNE   OBJX11
         MVI   DA08DSP1,B'00000010' MOD
         B     OBJX12
OBJX11   MVI   DA08DSP1,B'00001000' SHR
OBJX12   MVI   DA08DPS2,B'00001000' KEEP
         MVI   DA08DPS3,B'00001000' KEEP
         MVI   DA08CTL,0
OBJX13   MVC   DA08MNM,OBJMEM  MOVE MEMBER
         TM    FLAGS,QFLG TEST FOR QUOTES
         BO    *+8
         OI    DA08CTL,B'00100000' PREFIX USED ID
         MVC   DA08PSWD,BLANK
         XC    DA08CTL+1(4),DA08CTL
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00  LINK TO DAIR
         LTR   R15,R15
         BNZ   OBJDAER
         MVC   DDNLIST,DA08DDN STORE DDNAME
         CLI   MSGKEYWD+1,1 TEST FOR OUTPUT OF DSN
         BNE   PRINTSEC BRANCH TO PRINT SECTION
         CLI   OBJMEM,C' '
         BE    OBJX14
         LH    R2,OBJDSNL
         LA    R3,OBJDSN(R2)
         MVI   0(R3),C'('
         MVC   1(8,R3),OBJMEM
         MVI   9(R3),C')'
         LA    R2,10(R2)
         STH   R2,OBJDSNL
OBJX14   LA    R0,MSG19
         LA    R1,OBJDSNL
         BAL   R14,OUTMSG
         B     PRINTSEC
OBJDAER  LA    R0,MSG14
         LA    R1,OBJDSNL
         ST    R15,SAVER15
         BAL   R14,OUTMSG OUTPUT 'ALLOC ERROR'
         L     R1,DA08DARC
         L     R15,SAVER15
         BAL   R14,DAIRERR
OBJPUT   DC    0H'0'
         LA    R2,MSG05
         ST    R2,OLD+4
         PUTGET PARM=PGPB,MF=(E,IOPL) ENTER OBJ DSNAME
         CH    R15,=H'8' TEST FOR ERROR
         BH    PGERROR
         L     R15,PGPB+12 LOAD ADDR OF INPUT LINE
         LA    R1,TBUFL
         LH    R2,0(R15)
         CH    R2,=H'64' COMPARE LENGTH
         BNH   OBJPUT1
         LA    R2,64
OBJPUT1  BCTR  R2,R0
         EX    R2,MVCR1R15 MOVE INPUT LINE TO TBUF
         LH    R0,0(R15)
         O     R0,=X'01000000' SP=1
         LR    R1,R15
         FREEMAIN R,LV=(0),A=(1)
         LH    R0,TBUFL
         CH    R0,=H'4' TEST FOR NULL LINE RESPONSE
         BH    OBJX15
         BE    RETURN
OBJOBJDS NI    FLAGS,NOTQFLG INIT QUOTE AND DSN DISP BITS
         NI    FLAGS,NOTDFLG
         MVC   OBJMEM,BLANK MEMBER NAME
         MVI   OBJDSNA+14,0 SET MEMBER NAME FLAG
         B     OBJDSOBJ GO FIX UP DSNAME WITH QUAL.
OBJX15   DC    0H'0'
         LA    R1,OBJDSNA
         BAL   R14,PARSEDSN
         B     OBJX3
         DROP  R7
**
** IF 'NOLIST' IS SPECIFIED -- NO SYSPRINT OUT.
** IF 'LIST' NOT SPECIFIED AND 'PRINT' IS SPECIFIED -- USE DSNAME
**  INPUT OR GENERATE DSNAME FROM DSN.ASM BY REPLACING .ASM WITH .LIST
** IF 'LIST' NOT SPECIFIED AND 'SYSOUT' IS SPECIFIED ALLOC SYSPRINT
**  DATA SET TO SYSOUT=A
** IF 'LIST' NOT SPECIFIED AND 'NOPRINT' IS SPECIFIED -- NO SYSPRINT
**  OUTPUT.
** IF 'LIST' IS SPECIFIED AND 'PRINT' IS SPECIFIED -- ALLOC SYSPRINT TO
**  DATA SET
** IF 'LIST' IS SPECIFIED AND 'NOPRINT' IS SPECIFIED -- ALLOC SYSPRINT
**  TO SYSOUT=A
** IF 'LIST' NOT SPECIFIED AND 'PRINT' OR 'SYSOUT' NOT SPECIFIED -
**  NO SYSPRINT OUTPUT
** IF 'LIST' IS SPECIFIED AND 'PRINT' IS NOT SPECIFIED --
**  ALLOC SYSPRINT TO SYSOUT=A
** SYSPRINT WILL NOT BE ALLOCATED TO THE TERMINAL.
**
PRINTSEC DC    0H'0'
         NI    FLAGS,NOTSFLG INIT SYSOUT, SYSPRINT, AND QUOTE AND
         NI    FLAGS,NOTPFLG DSN DISP BITS
         NI    FLAGS,NOTQFLG
         NI    FLAGS,NOTDFLG
         MVC   MSG05C,=CL7'PRINT-'
         CLI   LSTKEYWD+1,1 TEST FOR 'LIST'
         BH    PRNTNO
         BL    PRNTX0
         CLI   PRNKEYWD+1,1 TEST FOR 'PRINT'
         BE    PRNTDS 'PRINT' SPECIFIED
         B     PRNTSYS 'PRINT' NOT SPECIFIED
PRNTX0   CLI   PRNKEYWD+1,2
         BH    PRNTNO 'NOPRINT' SPECIFIED
         BE    PRNTSYS 'SYSOUT' SPECIFIED
         CLI   PRNKEYWD+1,0
         BNE   PRNTDS
PRNTNO   LH    R2,ASMPARML FIX UP PARMLIST FOR NOLIST
         LA    R3,ASMPARM(R2)
         LTR   R2,R2
         BZ    PRNTX1
         MVI   0(R3),C','
         LA    R2,1(R2)
         LA    R3,1(R3)
PRNTX1   MVC   0(6,R3),=C'NOLIST' MOVE NOLIST TO PARM
         LA    R2,6(R2)
         STH   R2,ASMPARML STORE UPDATED LENGTH
**
** SINCE 'NOPRINT' IS SPECIFIED, MUST ALLOCATE SYSTERM.
** SET TERM PDE TO SPECIFY 'TERM'.
**
         MVI   TRMKEYWD+1,1 FORCE ALLOC OF SYSTERM
         CLI   MSGKEYWD+1,1
         BNE   LIBSEC
         LA    R0,MSG22
         BAL   R14,PUTLINE
         B     LIBSEC
PRNTSYS  LA    R7,DAIRPB ALLOCATE SYSPRINT TO SYSOUT
         USING DAPB30,R7
         MVC   DA30CD,=X'0030'
         XC    DA30FLG(10),DA30FLG
         MVI   DA30DDN,C' '
         MVC   DA30DDN+1(23),DA30DDN
         MVC   DA30BLK,=F'3509' BLKSIZE
         XC    DA30PQTY(8),DA30PQTY
         MVI   DA30PQTY+3,2 TWO CYL PRIMARY
         MVI   DA30SQTY+3,1 ONE CYL SECONDARY
         MVI   DA30PGNM,C' '
         MVC   DA30PGNM+1(11),DA30PGNM
         MVC   DA30OCLS,=C'A ' SYSOUT CLASS=A
         MVI   DA30CTL-1,0
         MVI   DA30CTL,B'11010000' CYL,RLSE
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00 LINK TO DAIR
         LTR   R15,R15
         BZ    PRNTX3
         ST    R15,SAVER15
         LA    R0,MSG21
         BAL   R14,PUTLINE
         L     R1,DA30DARC
         SRL   R1,16 SHIFT OUT BITS NOT USED
         SLL   R1,16
         L     R15,SAVER15
         BAL   R14,DAIRERR
         B     RETURN
PRNTX3   OI    FLAGS,SFLG SET FLAG TO FREE DDN WITH SYSOUT=A
         OI    FLAGS,PFLG
**                               INDICATE SYSPRINT OUTPUT
         MVC   DDNLIST+40,DA30DDN MOVE DDNAME TO ASMG LIST
         CLI   MSGKEYWD+1,1
         BNE   LIBSEC
         LA    R0,MSG23
         BAL   R14,PUTLINE
         B     LIBSEC
         DROP  R7
PRNTDS   MVC   PRNTMEM,BLANK ALLOC SYSPRINT TO DSN
         TM    PRNTDSNA+14,B'10000000' TEST FOR MEMBER NAME INPUT
         BZ    PRNTTSDS
         LH    R2,PRNTDSNA+12
         BCTR  R2,R0
         LA    R1,PRNTMEM
         L     R15,PRNTDSNA+8
         EX    R2,MVCR1R15
PRNTTSDS L     R2,PRNTDSNA LOAD ADDR OF PRINT DSNAME
         LTR   R2,R2 TEST FOR PRINT DSNAME INPUT
         BNZ   PRNTX5 PRINT DSNAME INPUT
         CLI   PRNTMEM,C' ' TEST FOR MEMBER INPUT ONLY
         BNE   PRNTLDS  MEMBER NAME IS INPUT - GO FIX UP ID.LIST
         TM    ASMDSNA+6,X'80' TEST FOR ASM DSN INPUT
         BZ    PRNTLDS ASM DSN NOT INPUT -- USE ID.LIST
         TM    ASMDSNA+6,X'40' TEST FOR ASM DSN INPUT IN QUOTES
         BZ    PRNTX3A NO QOUTES -- USE ASM DSN
         LA    R0,MSG33 ASM DS IN QUOTES -- OUTPUT MSG
         BAL   R14,PUTLINE
         B     PRNTPUT
PRNTX3A  MVC   PRNTDSNL(44),SAVEDSN MOVE LENGTH AND DSNAME
         LH    R2,PRNTDSNL
         LA    R3,PRNTDSN-4(R2) POINT TO .ASM
         CLC   0(4,R3),=C'.ASM' TEST FOR ASM QUAL.
         BE    PRNTX3B
         CH    R2,=H'3'
         BNE   PRNTX3A1
         CLC   PRNTDSN(3),=C'ASM'
         BE    PRNTLDS
PRNTX3A1 DC    0H'0'
         LA    R0,MSG35
         BAL   R14,PUTLINE
         B     PRNTPUT
PRNTX3B  DC    0H'0'
         MVC   0(5,R3),=C'.LIST' REPLACE .ASM WITH .LIST
         LA    R2,1(R2) 'LIST' IS 1 GREATER THAN 'ASM'
         STH   R2,PRNTDSNL
PRNTX3C  DC    0H'0'
         MVC   PRNTMEM,BLANK
         MVI   PRNTDSNA+14,0 SET MEMBER FLAG TO NO MEMBER INPUT
         LA    R1,PRNTDSNL
         BAL   R14,SRCHCAT  BRANCH TO TEST CATALOG
         LTR   R15,R15
         BNZ   PRNTX301
         NI    FLAGS,NOTDFLG INDICATE OLD DATA SET
         MVC   PRNTMEM,ASMMEM
         B     PRNTOBT
PRNTX301 OI    FLAGS,DFLG INDICATE NEW DATA SET
         MVC   PRNTMEM,BLANK
         B     PRNTALLO
PRNTLDS  MVC   PRNTDSN(4),=C'LIST' MEMBER NAME ONLY SPECIFIED
         LA    R2,4
         STH   R2,PRNTDSNL
         NI    FLAGS,NOTSFLG INIT BITS
         NI    FLAGS,NOTPFLG
         NI    FLAGS,NOTQFLG
         NI    FLAGS,NOTDFLG
         B     PRNTCAT
PRNTX5   LH    R2,PRNTDSNA+4 LOAD LENGTH
         STH   R2,PRNTDSNL
         BCTR  R2,R0
         LA    R1,PRNTDSN
         L     R15,PRNTDSNA
         EX    R2,MVCR1R15
         TM    PRNTDSNA+6,B'01000000' TEST FOR QUOTES
         BZ    PRNTLIST
         OI    FLAGS,QFLG SET BIT TO QUOTES
         B     PRNTCAT GO SEARCH CATALOG
PRNTLIST LH    R2,PRNTDSNL
         LA    R3,PRNTDSN-5(R2) POINT TO .LIST
         CLC   0(5,R3),=C'.LIST'
         BE    PRNTCAT
         CH    R2,=H'4'
         BH    PRNTLST1
         CLC   PRNTDSN(4),=C'LIST'
         BE    PRNTCAT
PRNTLST1 DC    0H'0'
         LA    R3,PRNTDSN(R2)
         MVC   0(5,R3),=C'.LIST' APPEND .LIST
         LA    R2,5(R2)
         STH   R2,PRNTDSNL
PRNTCAT  NI    FLAGS,NOTDFLG INDICATE OLD DATA SET
         LA    R1,PRNTDSNL
         BAL   R14,SRCHCAT BRANCH TO SEARCH CATALOG
         LTR   R15,R15
         BZ    PRNTOBT DATA SET IN CATALOG
         OI    FLAGS,DFLG INDICATE NEW DATA SET
         B     PRNTALLO
PRNTOBT  LA    R1,PRNTDSNL
         BAL   R14,OBTAIN
         LTR   R15,R15 TEST DATA SET TYPE
         BNZ   PRNTX7
         CLI   PRNTMEM,C' ' TEST FOR MEMBER NAME INPUT -- PO DATA SET
         BNE   PRNTALLO
         LA    R0,MSG13 OUTPUT 'DSN -- IS PART. TEMPNAME FOR MEMBER'
         LA    R1,PRNTDSNL
         BAL   R14,OUTMSG
         MVC   PRNTMEM,=C'TEMPNAME'
         B     PRNTALLO
PRNTX7   CH    R15,=H'4' TEST FOR PS
         BNE   PRNTPUT
         TM    PRNTDSNA+14,B'10000000' TEST FOR MEMBER NAME INPUT
         BO    PRNTX701
         MVC   PRNTMEM,BLANK
         B     PRNTALLO
PRNTX701 LH    R2,PRNTDSNL
         LA    R3,PRNTDSN(R2)
         MVI   0(R3),C'(' FIX UP DSN WITH MEMBER NAME
         MVC   1(8,R3),PRNTMEM
         MVI   9(R3),C')'
         LA    R2,10(R2)
         STH   R2,PRNTDSNL
         LA    R0,MSG12
         LA    R1,PRNTDSNL
         BAL   R14,OUTMSG OUTPUT 'NOT PARTITIONED'
PRNTPUT  DC    0H'0'
         LA    R2,MSG05
         ST    R2,OLD+4
         PUTGET PARM=PGPB,MF=(E,IOPL) ENTER PRINT DSNAME
         CH    R15,=H'8' TEST FOR ERROR
         BH    PGERROR
         L     R15,PGPB+12 LOAD ADDR OF INPUT LINE
         LA    R1,TBUFL
         LH    R2,0(R15) LOAD LENGTH OF INPUT LINE
         CH    R2,=H'64'
         BNH   PRNTPUT1
         LA    R2,64
PRNTPUT1 BCTR  R2,R0
         EX    R2,MVCR1R15 MOVE INPUT LINE TO TBUF
         LH    R0,0(R15) LOAD LENGTH OF INPUT LINE
         O     R0,=X'01000000' SP=1
         LR    R1,R15
         FREEMAIN R,LV=(0),A=(1)
         LH    R0,TBUFL
         CH    R0,=H'4' TEST FOR NULL LINE
         BE    RETURN
         NI    FLAGS,NOTSFLG INIT BITS
         NI    FLAGS,NOTPFLG
         NI    FLAGS,NOTQFLG
         NI    FLAGS,NOTDFLG
         LA    R1,PRNTDSNA
         BAL   R14,PARSEDSN
         B     PRNTDS
PRNTALLO LA    R7,DAIRPB ALLOCATE SYSPRINT TO A DATA SET
         USING DAPB08,R7
         MVC   DA08CD,=X'0008'
         XC    DA08FLG(6),DA08FLG
         LA    R2,PRNTDSNL
         ST    R2,DA08PDSN
         MVI   DA08DDN,C' '
         MVC   DA08DDN+1(23),DA08DDN
         TM    FLAGS,DFLG TEST FOR OLD DATA SET
         BZ    PRNTX11 DATA SET IS OLD
         MVC   DA08BLK,=F'3509' DATA SET IS NEW
         XC    DA08PQTY(12),DA08PQTY
         MVI   DA08PQTY+3,2 TWO CYL PRIMARY SPACE
         MVI   DA08SQTY+3,1 ONE CYL SECONDARY
         CLI   PRNTMEM,C' ' TEST FOR MEMBER NAME
         BE    PRNTX10 NO MEMBER NAME
         MVI   DA08DQTY+3,1 ONE DIRECTORY BLOCK
PRNTX10  MVI   DA08DSP1,B'00000100' NEW
         MVI   DA08DPS2,B'00000010' CATLG
         MVI   DA08DPS3,B'00000100' DELETE
         MVI   DA08CTL,B'11000000' CYL
         B     PRNTX12
PRNTX11  XC    DA08BLK(16),DA08BLK OLD DATA SET
         MVI   DA08DSP1,B'00001000' SHR
         MVI   DA08DPS2,B'00001000' KEEP
         MVI   DA08DPS3,B'00001000' KEEP
         MVI   DA08CTL,0
PRNTX12  MVC   DA08MNM,PRNTMEM
         MVC   DA08PSWD,BLANK
         TM    FLAGS,QFLG TEST FOR QUOTES
         BO    *+8
         OI    DA08CTL,B'00100000' PREFIX USER ID
         XC    DA08CTL+1(4),DA08CTL+1
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00 LINK TO DAIR
         LTR   R15,R15 TEST FOR ERRORS
         BZ    PRNTX13  NO ERRORS
         ST    R15,SAVER15
         LA    R0,MSG14
         LA    R1,PRNTDSNL
         BAL   R14,OUTMSG OUTPUT 'ALLOCATION ERROR'
         L     R1,DA08DARC
         L     R15,SAVER15
         BAL   R14,DAIRERR OUTPUT ALLOCATION ERROR
         B     PRNTPUT
PRNTX13  MVC   DDNLIST+40,DA08DDN STORE DDNAME
         OI    FLAGS,PFLG INDICATE SYSPRINT OUTPUT
         CLI   MSGKEYWD+1,1
         BNE   LIBSEC
         CLI   PRNTMEM,C' ' TEST FOR MEMBER NAME
         BE    PRNTX14 NO MEMBER NAME
         LH    R2,PRNTDSNL PUT MEMBER NAME IN DSN
         LA    R3,PRNTDSN(R2)
         MVI   0(R3),C'('
         MVC   1(8,R3),PRNTMEM
         MVI   9(R3),C')'
         LA    R2,10(R2)
         STH   R2,PRNTDSNL
PRNTX14  LA    R0,MSG24
         LA    R1,PRNTDSNL
         BAL   R14,OUTMSG OUTPUT 'DS -- ALLOCATED TO SYSPRINT'
         DROP  R7
**
** ALLOCATE MACRO LIBRARIES UNLESS 'NOMACLIB' IS SPECIFIED.
**
** IF 'LIB' IS SPECIFIED AND 'MACLIB' IS SPECIFIED (EITHER EXPLICITLY
** OR BY DEFAULT) -- SYS1.MACLIB AND SYS2.MACLIB WILL BE ALLOCATED
** AND CONCATENATED TO THE DATA SETS SPECIFIED BY 'LIB' FOR SYSLIB.
** IF 'LIB' IS SPECIFIED AND 'NOMACLIB' IS SPECIFIED -- ONLY THOSE DATA
** SETS SPECIFIED BY 'LIB' WILL BE USED FOR SYSLIB.
** IF 'LIB' IS NOT SPECIFIED AND 'MACLIB' IS SPECIFIED -- SYS1.MACLIB
** AND SYS2.MACLIB WILL BE USED FOR SYSLIB.
** IF 'LIB' IS NOT SPECIFIED AND 'NOMACLIB' IS SPECIFIED -- NO DATA
** SETS WILL BE ALLOCATED FOR SYSLIB. (IN THIS CASE, SYSLIB CAN BE
** ALLOCATED PRIOR TO EXECUTING THIS CP.)
**
LIBSEC   MVC   MSG05C,=CL7'LIB-'
         CLI   MACKEYWD+1,1
         BH    LIBTSTLB GO TEST FOR 'LIB'
         LA    R7,DAIRPB ALLOCATE SYS1.MACLIB
         USING DAPB08,R7
         MVC   DA08CD,=X'0008'
         XC    DA08FLG(6),DA08FLG
         LA    R2,LIBMACDS
         ST    R2,DA08PDSN
         MVI   DA08DDN,C' '
         MVC   DA08DDN+1(23),DA08DDN
         XC    DA08BLK(16),DA08BLK
         MVC   DA08MNM,BLANK
         MVC   DA08PSWD,BLANK
         MVI   DA08DSP1,B'00001000' SHR
         MVI   DA08DPS2,B'00001000' KEEP
         MVI   DA08DPS3,B'00001000' KEEP
         MVI   DA08CTL,0
         XC    DA08CTL+1(4),DA08CTL+1
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00 LINK TO DAIR
         LTR   R15,R15
         BZ    LIBX1
         OI    FLAGS,QFLG
         ST    R15,SAVER15
         LA    R0,MSG14
         LA    R1,LIBMACDS
         BAL   R14,OUTMSG
         L     R1,DA08DARC
         L     R15,SAVER15
         BAL   R14,DAIRERR
         B     RETURN
LIBX1    DC    0H'0'
         MVC   DDNLIST+24,DA08DDN
         LH    R2,LIBDSCNT
         LR    R4,R2
         MH    R2,=H'46'
         LA    R3,LIBDSN(R2)
         MVC   0(13,R3),LIBMACDS
         LR    R2,R4
         SLL   R2,3 MULTIPLY BY 8 (=2**3)
         LA    R3,LIBDDN(R2)
         MVC   0(8,R3),DA08DDN
         LA    R4,1(R4)
         STH   R4,LIBDSCNT
         DROP  R7
         LA    R7,DAIRPB ALLOCATE SYS2.MACLIB
         USING DAPB08,R7
         MVC   DA08CD,=X'0008'
         XC    DA08FLG(6),DA08FLG
         LA    R2,LIBGSFDS
         ST    R2,DA08PDSN
         MVI   DA08DDN,C' '
         MVC   DA08DDN+1(23),DA08DDN
         XC    DA08BLK(16),DA08BLK
         MVC   DA08MNM,BLANK
         MVC   DA08PSWD,BLANK
         MVI   DA08DSP1,B'00001000' SHR
         MVI   DA08DPS2,B'00001000' KEEP
         MVI   DA08DPS3,B'00001000' KEEP
         MVI   DA08CTL,0
         XC    DA08CTL+1(4),DA08CTL
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00 LINK TO DAIR
         LTR   R15,R15
         BZ    LIBX2
         OI    FLAGS,QFLG
         ST    R15,SAVER15
         LA    R0,MSG14
         LA    R1,LIBGSFDS
         BAL   R14,OUTMSG
         L     R1,DA08DARC
         L     R15,SAVER15
         BAL   R14,DAIRERR
         B     RETURN
LIBX2    LH    R2,LIBDSCNT
         LR    R4,R2
         MH    R2,=H'46'
         LA    R3,LIBDSN(R2)
         MVC   0(13,R3),LIBGSFDS
         LR    R2,R4
         SLL   R2,3
         LA    R3,LIBDDN(R2)
         MVC   0(8,R3),DA08DDN
         LA    R4,1(R4)
         STH   R4,LIBDSCNT
         DROP  R7
LIBTSTLB CLI   LIBKEYWD+1,0 TEST FOR 'LIB'
         BE    LIBCONCT
         LA    R6,LIBDSNA LOAD ADDR OF LIB DSN PDE
LIBTSTA  L     R2,0(R6) LOAD ADDR OF DSN
         LTR   R2,R2 TEST FOR ZERO
         BNZ   LIBDSOK
         TM    14(R6),B'10000000' TEST FOR MEMBER NAME
         BO    LIBX3
         LA    R0,MSG25
         BAL   R14,PUTLINE
         B     LIBPUT
LIBX3    MVI   TBUF,C'('
         LA    R2,1
         LH    R3,12(R6) LOAD LENGTH OF MEMBER NAME
         AR    R2,R3
         BCTR  R3,R0
         LA    R1,TBUF+1
         L     R15,8(R6)
         EX    R3,MVCR1R15
         LA    R3,TBUF(R2)
         MVI   0(R3),C')'
         LA    R2,1(R2)
         STH   R2,TBUFOFF
         OI    FLAGS,QFLG THE MSG WONT LOOK RIGHT WITH TWO QUOTES
**                        BUT ITS BETTER THAN WITH USER ID PREFIXED
LIBX4    LA    R0,MSG26
         LA    R1,TBUFOFF
         BAL   R14,OUTMSG  'DS(--) IS AN INVALID MACRO LIBRARY NAME'
         B     LIBPUT
LIBDSOK  NI    FLAGS,NOTQFLG
         NI    FLAGS,NOTDFLG
         LH    R2,4(R6) LOAD LENGTH OF DSN
         STH   R2,LIBDSTML USE TEMP STORAGE FOR NEW DSN
         BCTR  R2,R0
         LA    R1,LIBDSTM
         L     R15,0(R6)
         EX    R2,MVCR1R15
         TM    6(R6),B'01000000' TEST FOR QUOTES
         BZ    LIBCAT
         OI    FLAGS,QFLG SET BIT TO INDICATE QUOTES
LIBCAT   LA    R1,LIBDSTML
         BAL   R14,SRCHCAT
         LTR   R15,R15
         BNZ   LIBCATER
LIBCATA  LH    R2,LIBDSCNT COMPARE NEW DSN WITH THE OTHERS
         LTR   R2,R2 TEST FOR FIRST
         BZ    LIBOBT
LIBLOOP1 LR    R3,R2
         BCTR  R3,R0
         MH    R3,=H'46'
         LA    R4,LIBDSN(R3)
         CLC   0(2,R4),LIBDSTML COMPARE LENGTHS
         BNE   LIBENLP1
         LH    R3,LIBDSTML
         BCTR  R3,R0
         LA    R1,2(R4)
         LA    R15,LIBDSTM
         EX    R3,CLCR1R15
         BNE   LIBENLP1
         LA    R0,MSG27
         LA    R1,LIBDSTML
         BAL   R14,OUTMSG
         B     LIBPUT
LIBENLP1 BCT   R2,LIBLOOP1
         B     LIBOBT
LIBCATER TM    FLAGS,QFLG DSNAME NOT IN CATALOG TEST FOR QUOTES
         BO    LIBX7 DATA SET INPUT IN QUOTES
         LH    R2,LIBDSTML
         LA    R3,LIBDSTM-4(R2) POINT TO .LIB
         CLC   0(4,R3),=C'.LIB'
         BE    LIBX7
         LA    R3,LIBDSTM(R2)
         MVC   0(4,R3),=C'.LIB'
         LA    R2,4(R2)
         STH   R2,LIBDSTML
         LA    R1,LIBDSTML
         BAL   R14,SRCHCAT
         LTR   R15,R15
         BZ    LIBCATA
         LH    R2,LIBDSTML
         SH    R2,=H'4'
         STH   R2,LIBDSTML
LIBX7    LA    R0,MSG03
         LA    R1,LIBDSTML
         BAL   R14,OUTMSG OUTPUT 'NOT IN CATALOG'
LIBPUT   DC    0H'0'
         LA    R2,MSG05
         ST    R2,OLD+4
         PUTGET PARM=PGPB,MF=(E,IOPL)  ENTER LIB DSNAME
         CH    R15,=H'8' TEST FOR ERROR
         BH    PGERROR
         L     R15,PGPB+12 LOAD ADDR OF INPUT LINE
         LH    R2,0(R15) LOAD LENGTH OF INPUT LINE
         CH    R2,=H'64'
         BNH   LIBPUT1
         LA    R2,64
LIBPUT1  BCTR  R2,R0
         LA    R1,TBUFL
         EX    R2,MVCR1R15
         LH    R0,0(R15)
         O     R0,=X'01000000'
         LR    R1,R15
         FREEMAIN R,LV=(0),A=(1)
         LH    R0,TBUFL
         CH    R0,=H'4' TEST FOR NULL LINE
         BNH   LIBENDLP
         LR    R1,R6
         BAL   R14,PARSEDSN
         B     LIBTSTA
LIBOBT   LA    R1,LIBDSTML
         BAL   R14,OBTAIN
         CH    R15,=H'4'
         BL    LIBALLO
         BH    LIBPUT
         LA    R0,MSG12
         LA    R1,LIBDSTML
         BAL   R14,OUTMSG OUTPUT 'DATA SET NOT PARTITIONED'
         B     LIBPUT
LIBALLO  LA    R7,DAIRPB ALLOCATE DSN
         USING DAPB08,R7
         MVC   DA08CD,=X'0008'
         XC    DA08FLG(6),DA08FLG
         LA    R2,LIBDSTML
         ST    R2,DA08PDSN
         MVI   DA08DDN,C' '
         MVC   DA08DDN+1(23),DA08DDN
         XC    DA08BLK(16),DA08BLK
         MVC   DA08MNM,BLANK
         MVC   DA08PSWD,BLANK
         MVI   DA08DSP1,B'00001000' SHR
         MVI   DA08DPS2,B'00001000' KEEP
         MVI   DA08DPS3,B'00001000' KEEP
         MVI   DA08CTL,0
         TM    FLAGS,QFLG TEST FOR DSNAME IN QUOTES
         BO    *+8 QUOTES
         OI    DA08CTL,B'00100000' PREFIX USER ID
         XC    DA08CTL+1(4),DA08CTL+1
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00 LINK TO DAIR
         LTR   R15,R15
         BZ    LIBSAVDS
         ST    R15,SAVER15
         LA    R0,MSG14
         LA    R1,LIBDSTML
         BAL   R14,OUTMSG OUTPUT 'ALLOCATION ERROR'
         L     R1,DA08DARC
         L     R15,SAVER15
         BAL   R14,DAIRERR
         B     LIBPUT
LIBSAVDS LH    R2,LIBDSCNT
         LTR   R2,R2
         BNZ   LIBX7A
         MVC   DDNLIST+24,DA08DDN
LIBX7A   DC    0H'0'
         LR    R4,R2 SAVE COUNT
         MH    R2,=H'46'
         LA    R3,LIBDSN(R2)
         MVC   0(46,R3),LIBDSTML MOVE LENGTH AND DSNAME
         LR    R2,R4
         SLL   R2,3 MULTIPLY BY 8 = 2**3
         LA    R3,LIBDDN(R2)
         MVC   0(8,R3),DA08DDN
         LA    R4,1(R4)
         STH   R4,LIBDSCNT
         CH    R4,=H'7' TEST FOR MORE THAN 5 DSN'S INPUT VIA 'LIB'
         BL    LIBENDLP
         CLI   24(R6),X'FF' TEST FOR MORE DSNS IN 'LIB' KEYWORD
         BE    LIBCONCT
         LA    R0,MSG28
         BAL   R14,PUTLINE
         LA    R2,MSG37
         ST    R2,OLD+4
         PUTGET PARM=PGPB,MF=(E,IOPL)
         CH    R15,=H'8'
         BH    PGERROR
         L     R1,PGPB+12 LOAD ADDR OF INPUT LINE
         LH    R0,0(R1) LOAD LENGTH OF INPUT LINE
         CH    R0,=H'4' TEST FOR NULL LINE
         BH    RETURN DONT CONTINUE
         O     R0,=X'01000000' SP=1
         FREEMAIN R,LV=(0),A=(1)
         B     LIBCONCT
         DROP  R7
LIBENDLP CLI   24(R6),X'FF' TEST FOR LAST PDE
         BE    LIBCONCT
         L     R6,24(R6) LOAD ADDR OF NEXT PDE
         B     LIBTSTA BRANCH TO PROCESS NEXT DSN
LIBCONCT LH    R2,LIBDSCNT CONCATENATE MACRO LIBRARIES
         CH    R2,=H'1'
         BL    TERMSEC
         BE    TERMSEC ONLY ONE DDNAME
         LA    R7,DAIRPB
         USING DAPB0C,R7 CONCATENATE MACRO LIBRARIES
         MVC   DA0CCD,=X'000C'
         XC    DA0CFLG(6),DA0CFLG
         LH    R2,LIBDSCNT
         STH   R2,DA0CNUMB
         XC    DA0CNUMB+2(2),DA0CNUMB+2
         SLL   R2,3 MULTIPLY BY 8
         BCTR  R2,R0
         LA    R1,DA0CDDN
         LA    R15,LIBDDN
         EX    R2,MVCR1R15
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00 LINK TO DAIR
         LTR   R15,R15
         BZ    TERMSEC
         ST    R15,SAVER15
         LA    R0,MSG29
         BAL   R14,PUTLINE
         L     R1,DA0CDARC
         SRL   R1,16
         SLL   R1,16
         L     R15,SAVER15
         BAL   R14,DAIRERR
         B     RETURN
         DROP  R7
**
** ALLOCATE SYSTERM TO THE TERMINAL UNLESS 'NOTERM' IS INPUT, IN WHICH
** CASE SYSTERM IS NOT ALLOCATED AT ALL.
**
TERMSEC  CLI   TRMKEYWD+1,3 TEST FOR 'TERM'
         BNL   UTXSEC BRANCH TO ALLOCATE SYSUTX (X=1,2,3)
         LH    R2,ASMPARML LOAD LENGTH OF PARM
         LA    R3,ASMPARM(R2)
         LTR   R2,R2
         BZ    TERMX1
         MVI   0(R3),C','
         LA    R2,1(R2)
         LA    R3,1(R3)
TERMX1   MVC   0(4,R3),=C'TERM'
         LA    R2,4(R2)
         LA    R3,4(R3)
         STH   R2,ASMPARML
         LH    R4,NUMKEYWD TEST FOR 'NONUM'
         CH    R4,=H'3'
         BL    TERMX2
         MVC   0(6,R3),=C',NONUM' NONUM
         LA    R2,6(R2)
         STH   R2,ASMPARML
         LA    R3,6(R3)
TERMX2   LH    R4,STMKEYWD TEST FOR 'NOSTMT'
         CH    R4,=H'2'
         BL    TERMX3
         MVC   0(7,R3),=C',NOSTMT'
         LA    R2,7(R2)
         STH   R2,ASMPARML
TERMX3   LA    R6,DAIRPB ALLOCATE SYSTERM
         USING DAPB1C,R6
         MVC   DA1CCD,=X'001C'
         XC    DA1CFLG(5),DA1CFLG
         MVC   DA1CDDN,BLANK
         MVI   DA1CCTL,0
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00 LINK TO DAIR
         LTR   R15,R15
         BZ    TERMX4
         ST    R15,SAVER15
         LA    R0,MSG30
         BAL   R14,PUTLINE
         L     R1,DA1CDARC
         SRL   R1,16
         SLL   R1,16
         L     R15,SAVER15
         BAL   R14,DAIRERR
         B     RETURN
TERMX4   MVC   DDNLIST+8,DA1CDDN
         DROP  R6
**
** ALLOCATE SYSUTX (X=1,2,3)
**
UTXSEC   LA    R5,3 ALLOCATE SYSUTX (X=1,2,3)
UTXLOOP1 IC    R2,UTXBCD(R5) FIXUP DSNAME=&SYSUTX
         STC   R2,UTXDSNC
         LA    R7,DAIRPB
         USING DAPB08,R7
         MVC   DA08CD,=X'0008'
         XC    DA08FLG(6),DA08FLG
         LA    R2,UTXDSN
         ST    R2,DA08PDSN
         MVI   DA08DDN,C' '
         MVC   DA08DDN+1(23),DA08DDN
         XC    DA08BLK(16),DA08BLK
         MVI   DA08PQTY+3,2 2 CYL PRIMARY
         MVI   DA08SQTY+3,2 2 CYL SECONDARY
         MVC   DA08MNM,BLANK
         MVC   DA08PSWD,BLANK
         MVI   DA08DSP1,B'00000100' NEW
         MVI   DA08DPS2,B'00000100' DELETE
         MVI   DA08DPS3,B'00000100' DELETE
         MVI   DA08CTL,B'11000000' CYL
         XC    DA08CTL+1(4),DA08CTL+1
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00 LINK TO DAIR
         LTR   R15,R15
         BZ    UTXX1
         NI    FLAGS,NOTQFLG
         ST    R15,SAVER15
         LA    R0,MSG14
         LA    R1,UTXDSN
         BAL   R14,OUTMSG
         L     R15,SAVER15
         L     R1,DA08DARC
         BAL   R14,DAIRERR
         B     RETURN
UTXX1    LR    R2,R5 STORE DDN IN DDN LIST
         SLL   R2,3 MULTIPLY BY 8
         LA    R2,DDNLIST+48(R2)
         MVC   0(8,R2),DA08DDN MOVE DDNAME TO LIST
         BCT   R5,UTXLOOP1
         DROP  R7
RENSEC   CLI   RENKEYWD+1,1 TEST FOR 'RENT'
         BNE   TESTSEC
         LH    R2,ASMPARML
         LA    R3,ASMPARM(R2)
         LTR   R2,R2
         BZ    RENX1
         MVI   0(R3),C','
         LA    R2,1(R2)
         LA    R3,1(R3)
RENX1    MVC   0(4,R3),=C'RENT'
         LA    R2,4(R2)
         STH   R2,ASMPARML
TESTSEC  CLI   TSTKEYWD+1,1 TEST FOR 'TEST'
         BNE   BATCHSEC GO TEST FOR 'BATCH' KEYWORD
         LH    R2,ASMPARML
         LA    R3,ASMPARM(R2)
         LTR   R2,R2
         BZ    TESTX1
         MVI   0(R3),C','
         LA    R2,1(R2)
         LA    R3,1(R3)
TESTX1   MVC   0(4,R3),=C'TEST'
         LA    R2,4(R2)
         STH   R2,ASMPARML
BATCHSEC CLI   BATKEYWD+1,2 TEST FOR 'BATCH'
         BE    ESDSEC GO TEST FOR SYSPRINT OUTPUT
         LH    R2,ASMPARML
         LA    R3,ASMPARM(R2)
         LTR   R2,R2
         BZ    BATCHX1
         MVI   0(R3),C','
         LA    R2,1(R2)
         LA    R3,1(R3)
BATCHX1  MVC   0(5,R3),=C'BATCH'
         LA    R2,5(R2)
         STH   R2,ASMPARML
*ESDSEC   TM    FLAGS,PFLG TEST FOR SYSPRINT OUTPUT
*         BZ    OPTNSEC GO TEST 'OPTION' KEYWORD
ESDSEC   CLI   ESDKEYWD+1,1 TEST FOR 'ESD'
         BH    LINESEC
         LH    R2,ASMPARML
         LA    R3,ASMPARM(R2)
         LTR   R2,R2
         BZ    ESDX1
         MVI   0(R3),C','
         LA    R2,1(R2)
         LA    R3,1(R3)
ESDX1    MVC   0(3,R3),=C'ESD'
         LA    R2,3(R2)
         STH   R2,ASMPARML
LINESEC  DC    0H'0' TEST FOR LINECOUNT
         LH    R2,ASMPARML
         LA    R1,ASMPARM(R2)
         LTR   R2,R2
         BZ    LINEX3
         MVI   0(R1),C','
         LA    R2,1(R2)
         LA    R1,1(R1)
LINEX3   MVC   0(8,R1),=C'LINECNT='
         LA    R2,8(R2)
         LA    R1,8(R1)
         LH    R3,LINECNTA+4 LOAD LENGTH
         BCTR  R3,R0
         L     R15,LINECNTA LOAD ADDR OF COUNT
         EX    R3,MVCR1R15
         LA    R2,1(R2,R3)
         STH   R2,ASMPARML
RLDSEC   CLI   RLDKEYWD+1,1 TEST FOR 'RLD'
         BNE   COLSEC
         LH    R2,ASMPARML
         LA    R3,ASMPARM(R2)
         LTR   R2,R2
         BZ    RLDX1
         MVI   0(R3),C','
         LA    R2,1(R2)
         LA    R3,1(R3)
RLDX1    MVC   0(3,R3),=C'RLD'
         LA    R2,3(R2)
         STH   R2,ASMPARML
COLSEC   CLI   COLKEYWD+1,1 TEST FOR 'COL'
         BNE   XREFSEC
         LH    R2,ASMPARML
         LA    R3,ASMPARM(R2)
         LTR   R2,R2
         BZ    COLX1
         MVI   0(R3),C','
         LA    R2,1(R2)
         LA    R3,1(R3)
COLX1    MVC   0(4,R3),=C'COL='
         LA    R2,4(R2)
         LA    R3,4(R3)
         LH    R4,COLSUBA+4 LOAD LENGTH
         BCTR  R4,R0
         LR    R1,R3
         L     R15,COLSUBA LOAD ADDR
         EX    R4,MVCR1R15
         LA    R2,1(R2,R4)
         STH   R2,ASMPARML
XREFSEC  CLI   XRFKEYWD+1,1 TEST FOR 'XREF'
         BE    XREF5
         CLI   XRFKEYWD+1,2 TEST FOR 'FULLXREF'
         BE    XREFX3
         LH    R2,ASMPARML 'NOXREF'
         LA    R3,ASMPARM(R2)
         MVC   0(7,R3),=C',NOXREF' NOXREF
         LA    R2,7(R2)
         STH   R2,ASMPARML
         B     ALGNSEC
XREFX3   LH    R2,ASMPARML 'FULLXREF' REQUESTED
         LA    R3,ASMPARM(R2)
         MVC   0(9,R3),=C',FULLXREF'
         LA    R2,9(R2)
         STH   R2,ASMPARML
         B     XREF6
XREF5    LH    R2,ASMPARML
         LA    R3,ASMPARM(R2)
         MVC   0(5,R3),=C',XREF'
         LA    R2,5(R2)
         STH   R2,ASMPARML
XREF6    DC    0H'0'
*        LH    R3,ASMPARML
*        LA    R1,ASMPARM(R3)
*        LH    R2,XREFA+4
*        L     R15,XREFA
*        BCTR  R2,R0
*        EX    R2,MVCR1R15 MOVE IN 'SHORT' OR 'FULL'
*        LA    R3,1(R2,R3)
*        STH   R3,ASMPARML
ALGNSEC  CLI   ALNKEYWD+1,3 TEST FOR 'NOALIGN' KEYWD
         BL    LREFSEC BRANCH TO TEST FOR 'LREF' KEYWORD
         LH    R2,ASMPARML
         LA    R3,ASMPARM(R2)
         LTR   R2,R2
         BZ    ALGNX1
         MVI   0(R3),C','
         LA    R2,1(R2)
         LA    R3,1(R3)
ALGNX1   MVC   0(6,R3),=C'NOALGN'
         LA    R2,6(R2)
         STH   R2,ASMPARML
LREFSEC  CLI   LRFKEYWD+1,2 TEST FOR 'NOLREF'
         BNE   CALNSEC
         LH    R2,ASMPARML
         LA    R3,ASMPARM(R2)
         LTR   R2,R2
         BZ    LREFX1
         MVI   0(R3),C','
         LA    R2,1(R2)
         LA    R3,1(R3)
LREFX1   MVC   0(6,R3),=C'NOLREF'
         LA    R2,6(R2)
         STH   R2,ASMPARML
CALNSEC  DS    0H
*CALNSEC  CLI   CALKEYWD+1,1 TEST FOR 'CALIGN'
*         BH    UMAPSEC
*         LH    R2,ASMPARML
*         LA    R1,ASMPARM(R2)
*         BE    CALX1
*         MVC   0(9,R1),=C',CALIGN=0'
*         LA    R2,9(R2)
*         B     CALX2
*CALX1    MVC   0(8,R1),=C',CALIGN='
*         LA    R1,8(R1)
*         LH    R5,CALNCOL+4 LOAD LENGTH OF COL NO.
*         LA    R2,8(R2,R5)
*         BCTR  R5,R0
*         L     R15,CALNCOL LOAD ADDR OF COL NO.
*         EX    R5,MVCR1R15
*CALX2    STH   R2,ASMPARML
*UMAPSEC  CLI   UMPKEYWD+1,1 TEST FOR 'UMAP'
*         BL    OPTNSEC
*         LH    R2,ASMPARML
*         LA    R3,ASMPARM(R2)
*         BE    UMAPX1
*         MVC   0(7,R3),=C',NOUMAP'
*         LA    R2,7(R2)
*         B     UMAPX2
*UMAPX1   MVC   0(5,R3),=C',UMAP'
*         LA    R2,5(R2)
*UMAPX2   STH   R2,ASMPARML
OPTNSEC  CLI   OPTKEYWD+1,1 TEST FOR 'OPTION' KEYWD
         BNE   XCTLOAD2
         TM    OPTIONA+6,B'10000000' TEST FOR INPUT STRING
         BZ    XCTLOAD2
         LH    R2,OPTIONA+4 LOAD LENGTH OF OPTION STRING
         LH    R3,ASMPARML
         LA    R4,0(R2,R3)
         CH    R4,=H'256'
         BNH   OPTNX1
         LA    R0,MSG31
         BAL   R14,PUTLINE
         B     RETURN
OPTNX1   LA    R1,ASMPARM(R3) LOAD ADDR OF PARM FIELD
         LTR   R3,R3 TEST FOR NO OTHER PARMS
         BZ    OPTNX2 NO OTHER PARMS
         MVI   0(R1),C',' OTHER PARMS - PUT IN COMMA
         LA    R1,1(R1) BUMP ADDR
         LA    R4,1(R4) BUMP COUNT
OPTNX2   BCTR  R2,R0
         L     R15,OPTIONA
         EX    R2,MVCR1R15
         STH   R4,ASMPARML
**
** AT THIS POINT WE ARE READY TO ATTACH ASMG. ALL DATA SETS HAVE BEEN
** ALLOCATED. WILL NOW MOVE THE ADDRS TO SP=0 AND XCTL TO THE SECOND
** LOAD WHICH WILL ATTACH ASMG , DECONCATENATE, AND FREE THE DDNAMES.
**
XCTLOAD2 LA    R0,MAINLEN LOAD LENGTH OF MAIN
         GETMAIN R,LV=(0) GETMAIN FROM SP=0
         ST    R0,MAINLNTH
         ST    R1,MAINADDR
         LA    R2,MAINLEN MOVE ADDRS TO SP=0
         SRDL  R2,32
         D     R2,=F'256'
         LA    R15,MAIN
         LTR   R3,R3
         BZ    XCTLX1
XCTLLP1  MVC   0(256,R1),0(R15)
         A     R1,=F'256'
         A     R15,=F'256'
         BCT   R3,XCTLLP1
XCTLX1   LTR   R2,R2
         BZ    XCTLX2
         BCTR  R2,R0
         EX    R2,MVCR1R15
XCTLX2   DC    0H'0'
         IKJRLSA ANSWER RELEASE ALL SPACE USED BY PARSE
         IKJRLSA ANSWER1
         SR    R0,R0 ZERO LENGTH FOR GETMAIN
         GETMAIN R,LV=(0) CLEAN UP SEGMENTS
         L     R1,MAINADDR
         L     R13,SAVE+4 RESTORE OLD SAVE AREA ADDR
         XCTL  (2,12),EP=GSFTSOA2 GO TO SECOND LOAD - RESTORE 2 - 12
**
** PUTEGT ERROR PROCESSING
**
PGERROR  DC    0H'0'
         CH    R15,=H'12'
         BH    PGERROR1
         TPUT  MSG43,MSG43L
         B     RETURN
PGERROR1 DC    0H'0'
         CVD   R15,DTEMP
         UNPK  DTEMP(3),DTEMP+6(2)
         OI    DTEMP+2,C'0'
         MVC   MSG41C,DTEMP+1
         LA    R0,MSG41
         BAL   R14,PUTLINE
**
** THE FOLLOWING SECTION OF MAIN LOGIC WILL BE EXECUTED IN THE
** EVENT THAT THERE ARE ERRORS ENCOUNTERED WHICH WILL PREVENT THE
** COMMAND PROCESSOR FROM CONTINUING NORMALLY.
**
RETURN   DC    0H'0'
         TCLEARQ INPUT
         XC    ECB,ECB
         STACK PARM=STAKBLOK,DELETE=ALL,MF=(E,IOPL)
         IKJRLSA ANSWER
         IKJRLSA ANSWER1
         LH    R2,LIBDSCNT
         CH    R2,=H'1' TEST FOR MORE THAN ONE MACRO LIB
         BNH   RTRNX1AA BRANCH TO FREE DDNLIST
         LA    R7,DAIRPB DECONCATENATE SYSLIB'S.
         USING DAPB10,R7
         MVC   DA10CD,=X'0010'
         XC    DA10FLG(6),DA10FLG
         MVC   DA10DDN,DDNLIST+24
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00 LINK TO DAIR
         LTR   R15,R15
         BZ    RTRNX1
         ST    R15,SAVER15
         LA    R0,MSG32
         BAL   R14,PUTLINE
         L     R1,DA10DARC
         SRL   R1,16
         SLL   R1,16
         L     R15,SAVER15
         BAL   R14,DAIRERR
         B     RTRNLP1
         DROP  R7
RTRNX1   XC    DDNLIST+24,DDNLIST+24
RTRNLP1  LR    R3,R2 FREE DDNAMES CONT. TO SYSLIB
         BCTR  R3,R0
         SLL   R3,3
         LA    R1,LIBDDN(R3)
         BAL   R14,FREEDDN
         BCT   R2,RTRNLP1
RTRNX1AA LH    R2,ASMLISTL TEST FOR CONCATENATED ASM DATA SETS
         CH    R2,=H'1'
         BNH   RTRNX2 ONLY ONE DDNAME
         LA    R7,DAIRPB DECONCATENATE ASM DATA SETS
         USING DAPB10,R7
         MVC   DA10CD,=X'0010'
         XC    DA10FLG(6),DA10FLG
         MVC   DA10DDN,DDNLIST+32
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00 LINK TO DAIR
         LTR   R15,R15
         BZ    RTRNX1A
         ST    R15,SAVER15
         LA    R0,MSG39
         BAL   R14,PUTLINE
         L     R1,DA10DARC
         SRL   R1,16
         SLL   R1,16
         L     R15,SAVER15
         BAL   R14,DAIRERR
         B     RTRNLP1A
RTRNX1A  XC    DDNLIST+32,DDNLIST+32
RTRNLP1A LR    R3,R2 FREE ALL DDN'S CONTENATED FOR ASM
         BCTR  R3,R0
         SLL   R3,3
         LA    R1,ASMLIST(R3)
         BAL   R14,FREEDDN
         BCT   R2,RTRNLP1A
RTRNX2   LA    R2,10  FREE DDNLIST
RTRNLP2  LR    R3,R2
         BCTR  R3,R0
         SLL   R3,3
         LA    R1,DDNLIST(R3)
         CLI   0(R1),0 TEST FOR NO DDNAME IN LIST
         BE    RTRNELP1
         BAL   R14,FREEDDN
RTRNELP1 BCT   R2,RTRNLP2
         DC    0H'0'
         L     R13,SAVE+4
         RETURN (14,12),T,RC=16 RETURN TO SYSTEM
**
** FOR EXECUTE OPERATION
**
MVCR1R15 MVC   0(*-*,R1),0(R15)
**
**
CLCR1R15 CLC   0(*-*,R1),0(R15)
**
         DROP  R7
**
** PUTLINE SECTION
** ON ENTRY -- R0 = ADDR OF OUTPUT LINE, R14 = RETURN ADDR
**
PUTLINE  ST    R14,PTSVE14 SAVE RETURN ADDR
         XC    ECB,ECB
         PUTLINE PARM=PTPB,OUTPUT=((R0),DATA),MF=(E,IOPL)
         CH    R15,=H'4'
         BE    RETURN
         BH    PTERROR
         L     R14,PTSVE14
         BR    R14
PTERROR  CVD   R15,DTEMP
         UNPK  DTEMP(3),DTEMP+6(2)
         OI    DTEMP+2,C'0'
         MVC   MSG42C,DTEMP+1
         TPUT  MSG42,MSG42L
         B     RETURN
**
** END OF PUTLINE SECTION
**
**
** OUTPUT MESSAGE 'DATA SET ---'
** R0=LAST PART OF MSG, R1=ADDR OF DSN, R14=RETURN ADDR
**
OUTMSG   STM   R2,R8,MSGSVE28
         LR    R3,R1 SAVE ADDR
         ST    R14,MSGSVE14
         LA    R4,MSGOUTC
         MVC   0(9,R4),=C'DATA SET '
         LA    R4,9(R4)
         TM    FLAGS,QFLG TEST FOR QUOTES
         BZ    OUTX1
         MVC   0(2,R4),=C'''''' MOVE TWO QUOTES
         LA    R4,2(R4)
         B     OUTX2
OUTX1    MVI   0(R4),C'''' MOVE ONE QUOTE
         LA    R4,1(R4)
         LH    R2,USERIDL
         BCTR  R2,R0
         LR    R1,R4
         LA    R15,USERID
         EX    R2,MVCR1R15
         LA    R4,1(R2,R4)
OUTX2    LH    R5,0(R3)
         BCTR  R5,R0
         LA    R15,2(R3)
         LR    R1,R4
         EX    R5,MVCR1R15
         LA    R4,1(R4,R5)
         TM    FLAGS,QFLG TEST FOR QUOTES
         BZ    OUTX3
         MVC   0(2,R4),=C'''''' MOVE TWO QUOTES
         MVI   2(R4),C' '
         LA    R4,3(R4)
         B     OUTX4
OUTX3    MVI   0(R4),C'''' MOVE ONE QUOTE
         MVI   1(R4),C' '
         LA    R4,2(R4) INCREMENT ADDR
OUTX4    LR    R5,R0
         LH    R6,0(R5) LOAD LENGTH OF SECOND PART
         SH    R6,=H'3'
         LR    R1,R4
         LA    R15,2(R5)
         EX    R6,MVCR1R15 MOVE LAST PART OF MSG
         LA    R4,1(R4,R6)
         LA    R1,MSGOUT
         SR    R4,R1 COMPUTE LENGTH OF MSG INCLUDING HEADER
         STH   R4,MSGOUT
         LA    R0,MSGOUT
         BAL   R14,PUTLINE
         LM    R2,R8,MSGSVE28
         L     R14,MSGSVE14
         BR    R14
**
** END OF OUTMSG SECTION.
**
**
**
** THIS SECTION PARSES THE DSNAME IN TBUF, OVERALYS THE OLD PDE WITH
** THE NEW ONE, RELEASES THE CORE, AND RETURNS.
** R1 = ADDR OF OLD PDE, R14 = RETURN ADDR
**
PARSEDSN DC    0H'0'
         ST    R1,SAVER1
         ST    R14,SAVER14
         IKJRLSA ANSWER1
         XC    ECB,ECB
         LA    R1,PARSEPL
         LINK  EP=IKJPARS PARSE THE DSNAME
         CH    R15,=H'8' TEST FOR ERROR
         BH    PARSERR PARSE ERROR
         CH    R15,=H'4'
         BE    PARSERR
         L     R1,SAVER1
         L     R15,ANSWER1
         USING DSNPDL,R15
         MVC   0(24,R1),NEWDSN OVERLAY OLD PDE
         L     R14,SAVER14
         BR    R14
         DROP  R15
**
** END OF PARSE NEW DSNAME
**
**
** MEMNAME TEST SECTION.
** R0=ADDR OF MEMBER NAME, R1=ADDR OF DSN,R14=RETURN ADDR
**
MEMTEST  STM   R2,R8,SAVER28
         ST    R14,SAVER14
         LR    R5,R0
         LR    R6,R1
         LA    R7,DAIRPB  ALLOCATE DATA SET
         USING DAPB08,R7
         MVC   DA08CD,=X'0008'
         XC    DA08FLG(6),DA08FLG
         ST    R1,DA08PDSN STORE ADDR OF DSN
         MVI   DA08DDN,C' '
         MVC   DA08DDN+1(23),DA08DDN
         XC    DA08BLK(16),DA08BLK
         MVI   DA08MNM,C' '
         MVC   DA08MNM+1(15),DA08MNM
         MVI   DA08DSP1,B'00001000' SHR
         MVI   DA08DPS2,B'00001000' KEEP
         MVI   DA08DPS3,B'00001000' KEEP
         XC    DA08CTL(5),DA08CTL
         TM    FLAGS,QFLG TEST FOR QUOTES
         BO    *+8
         OI    DA08CTL,B'00100000' PREFIX USER ID
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00 LINK TO DAIR
         LTR   R15,R15
         BZ    MEMX1
         ST    R15,SAVER15
         LA    R0,MSG14
         LR    R1,R6
         BAL   R14,OUTMSG OUTPUT 'ALLOCATION ERROR'
         L     R1,DA08DARC
         L     R15,SAVER15
         BAL   R14,DAIRERR OUTPUT DAIR ERROR
         LA    R15,8
         B     MEMRTRN
MEMX1    LA    R2,PDSDCB
         USING IHADCB,R2
         MVC   DCBDDNAM,DA08DDN MOVE IN DDNAME
         OPEN  (PDSDCB,(INPUT))
         TM    DCBOFLGS,B'00010000' TEST FOR OPEN
         BO    MEMX2
         LA    R0,MSG15
         LR    R1,R6 ADDR OF DSN
         BAL   R14,OUTMSG
         LA    R15,12
         B     MEMRTRN
MEMX2    FIND  PDSDCB,(R5),D
         LR    R3,R15 SAVE RETURN CODE
         CLOSE PDSDCB
         LA    R1,DCBDDNAM
         BAL   R14,FREEDDN
         CH    R3,=H'4'
         BH    MEMRC8
         BL    MEMRC0
         LA    R15,4 RC=4 MEMBER NAME NOT IN PDS
         B     MEMRTRN
MEMRC0   SR    R15,R15 RC=0 MEMBER NAME IN PDS
         B     MEMRTRN
MEMRC8   LA    R0,MSG16
         LR    R1,R6 ADDR OF DSN
         BAL   R14,OUTMSG
         LA    R15,16
MEMRTRN  LM    R2,R8,SAVER28
         L     R14,SAVER14
         BR    R14
         DROP  R2
         DROP  R7
**
** END OF MEMBER TEST SECTION.
**
**
** SEARCH CATALOG SECTION
**
** R1=DSNAME ADDR, R14=RETURN ADDR, R15=RC FROM LOCATE
**
SRCHCAT  STM   R2,R8,SAVER28
         ST    R14,SAVER14
         MVC   SRCHDSN,SRCHDSNB BLANK OUT DSNAME
         LR    R3,R1 SAVE ADDR
         LA    R1,SRCHDSN
         TM    FLAGS,QFLG TEST FOR QUOTES
         BO    SRCHCAT1
         LH    R2,USERIDL PREFIX USER ID
         BCTR  R2,R0
         LA    R15,USERID
         EX    R2,MVCR1R15
         LA    R1,1(R1,R2) POINT TO 1 BEYOND .
SRCHCAT1 LH    R2,0(R3)
         BCTR  R2,R0
         LA    R15,2(R3)
         EX    R2,MVCR1R15
         LOCATE CATCAM EXEC LOCATE MACRO
         LM    R2,R8,SAVER28
         L     R14,SAVER14
         BR    R14  RETURN
**
** END OF SRCHCAT SECTION
**
**
** OBTAIN SECTION
**
** R1=ADDR OF DSNAME, R14=RETURN ADDR
** SRCHCAT MUST BE EXECUTED BEFORE THIS SECTION BECAUSE THE
** VOLUME SERIAL IS REQUIRED AND THE DATA SET NAME MUST BE IN SRCHDSN
**
OBTAIN   STM   R2,R8,SAVER28
         ST    R14,SAVER14
         ST    R1,SAVER1
         MVC   VOLID,VOLSER MOVE VOL-SER FROM CATBLK
         OBTAIN OBTCAM GET FORMAT 1 DSCB (CATBLK IS WIPED OUT NOW)
         B     OBTTAB(R15)
OBTTAB   B     OBTCOD00
         B     OBTCOD04
         B     OBTCOD08
         B     OBTCOD12
         B     OBTCODER
         B     OBTCODER
OBTCOD04 L     R1,SAVER1 RC=04 - VOL NOT MOUNTED
         LA    R0,MSG06
         MVC   MSG06C,VOLID
         BAL   R14,OUTMSG
         LA    R0,MSG07
         BAL   R14,PUTLINE
         B     OBTERRTN
OBTCOD08 L     R1,SAVER1 RC=08 - DATA SET NOT ON VOLUME
         MVC   MSG08C,VOLID
         LA    R0,MSG08
         BAL   R14,OUTMSG
         B     OBTERRTN
OBTCOD12 MVC   MSG09C,VOLID RC=12 - PERMANENT I/O ERROR
         LA    R0,MSG09
         L     R1,SAVER1
         BAL   R14,OUTMSG
         B     OBTERRTN
OBTCODER CVD   R15,DTEMP RC=16 AND 20 -OBTAIN ERROR CODE XX
         UNPK  DTEMP(3),DTEMP+6(2)
         OI    DTEMP+2,X'F0'
         MVC   MSG10C,DTEMP+1
         LA    R0,MSG10
         L     R1,SAVER1
         BAL   R14,OUTMSG
OBTERRTN LA    R15,12
         B     OBTRTRN
OBTCOD00 TM    DS1DSORG,B'01000000' TEST FOR PS DATA SET
         BZ    OBTTSTPO
         LA    R15,4
         B     OBTRTRN
OBTTSTPO TM    DS1DSORG,B'00000010' TEST FOR PDS
         BZ    OBTDSER
         SR    R15,R15
         B     OBTRTRN
OBTDSER  LA    R0,MSG11 OUTPUT 'NEITHER PS NOR PDS' ERROR
         L     R1,SAVER1
         BAL   R14,OUTMSG
         LA    R15,8
OBTRTRN  LM    R2,R8,SAVER28 RETURN
         L     R14,SAVER14
         BR    R14
**
** END OF OBTAIN SECTION
**
**
** FREE DDNAME SECTION
**
** R1=ADDR OF DDNAME, R14=RETURN ADDR
**
FREEDDN  STM   R2,R9,FREESV29
         ST    R14,FREESV14
         LA    R7,DAIRPB
         USING DAPB18,R7
         MVC   DA18CD,=X'0018'
         XC    DA18FLG(10),DA18FLG
         MVC   DA18DDN,0(R1) MOVE DDNAME
         MVC   DA18MNM,BLANK MEMBER NAME
         MVC   DA18SCLS,BLANK SYSOUT CLASS
         MVI   DA18DPS2,B'00001000'
         MVI   DA18CTL,X'10' FREE PERM ALLOC
         MVC   DA18JBNM,BLANK
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00 LINK TO DAIR
         LM    R2,R9,FREESV29
         L     R14,FREESV14
         BR    R14 RETURN
         DROP  R7
**
** END OF FREEDDN SECTION
**
**
** THIS SECTION CHECKS THE CODE RETURNED FROM DAIR AND OUTPUT THE
** MESSAGE CORRESPONDING TO THE TYPE. REG 1=DARC& CTRC, REG 14=RETURN
** ADDR, AND REG 15=RC FROM DAIR
**
DAIRERR  ST    R14,DAIRERRN SAVE RETURN ADDR
         STM   R2,R5,DAIRERRO
         B     DAIRERR1(R15)
DAIRERR1 B     DAIRERRG RC=0 DAIR IS O.K. -- RETURN
         B     DAIRERR5 RC=4 PARM LIST WAS INVALID
         B     DAIRERR2 RC=8 ERROR IN CATALOG MANAGEMENT
         B     DAIRERR3 RC=12 ERROR IN DYNAMIC ALLOCATION
         B     DAIRERR4 RC=16 NO TIOT ENTRIES
         B     DAIRERR5 RC=20 DDNAME IS UNAVAILABLE
         B     DAIRERR5 RC=24 DSNAME IS MEMBER OF CONCATENATED GROUP
         B     DAIRERR5 RC=28 DDNAME OR DSNAME NOT CURRENTLY ALLOCATED
         B     DAIRERR5 RC=32 DISP=NEW CANNOT BE SPECIFIED
         B     DAIRERR5 RC=36 ERROR IN CATALOG INFORMATION ROUTINE
         B     DAIRERR5 RC=40 RETURN AREA FOR QUALIFIERS TOO SMALL
         B     DAIRERR5 RC=44 DISP=OLD, MOD, OR SHR WITH NO VOL-SER NO.
DAIRERR2 LR    R2,R1  (RC=8)
         LA    R5,4
DAIRER21 SRDL  R2,4
         SRL   R3,28
         IC    R1,DAIRTAB(R3)
         STC   R1,DAIRERRQ-1(R5)
         BCT   R5,DAIRER21
         LA    R0,DAIRERRP
         BAL   R14,PUTLINE
         B     DAIRERRG
DAIRERR3 SRL   R1,16 (RC=12)  SHIFT OUT CTRC
         LR    R2,R1
         LA    R5,4
DAIRER31 SRDL  R2,4
         SRL   R3,28
         IC    R1,DAIRTAB(R3)
         STC   R1,DAIRERRT-1(R5)
         BCT   R5,DAIRER31
         LA    R0,DAIRERRS
         BAL   R14,PUTLINE
         B     DAIRERRG
DAIRERR4 LA    R0,DAIRERRV (RC=16)
         BAL   R14,PUTLINE
         B     DAIRERRG
DAIRERR5 CVD   R15,DAIRERRM (RC=4,20,24,28,32,36,40,44)
         UNPK  DAIRERRM(3),DAIRERRM+6(2)
         OI    DAIRERRM+2,X'F0'
         MVC   DAIRERRY,DAIRERRM+1
         LA    R0,DAIRERRX
         BAL   R14,PUTLINE
DAIRERRG LM    R2,R5,DAIRERRO
         L     R14,DAIRERRN
         BR    R14
DAIRERRM DS    D
DAIRERRN DS    F SAVE R14
DAIRERRO DS    4F SAVE R2 THRU R5
DAIRERRP DC    Y(DAIRERRR,0)
         DC    C'CATALOG MANAGEMENT ERROR CODE '
DAIRERRQ DS    CL4
DAIRERRR EQU    *-DAIRERRP
DAIRERRS DC    Y(DAIRERRU,0)
         DC    C'DYNAMIC ALLOCATION ERROR CODE '
DAIRERRT DS    CL4
DAIRERRU EQU   *-DAIRERRS
DAIRERRV DC    Y(DAIRERRW,0)
         DC    C'UNABLE TO ALLOCATE, MAXIMUM NUMBER OF ALLOCATIONS EXCEX
               EDED'
DAIRERRW EQU   *-DAIRERRV
DAIRERRX DC    Y(DAIRERRZ,0)
         DC    C'ERROR RETURNED FROM DYNAMIC ALLOCATION CODE '
DAIRERRY DS    CL2
DAIRERRZ EQU   *-DAIRERRX
DAIRTAB  DC    C'0123456789ABCDEF'
         DC    0H'0'
**
** END OF DAIR ERROR PROCESSING
**
**
** CONSTANTS, ADDRS, PARM BLOCK, PARM LISTS, AND OTHER TRIVIA
**
SAVE     DS    18F
DTEMP    DS    D
PARSEPL  DS    7F PARSE PARM LIST
ANSWER   DS    F
ANSWER1  DS    F
DAIRPB   DS    25F USED FOR ALL DAIR PARM BLOCKS
DA0CDDN  EQU   DAIRPB+12 DA0CDDN IS NOT DEFINED IN THE DSECT
IOPL     DC    0A(0)
IOPLUPT  DS    A
IOPLECT  DS    A
IOPLECB  DS    A
IOPLIOPB DS    A
ECB      DS    F
PTPB     PUTLINE MF=L
PGPB     PUTGET OUTPUT=OLD,MF=L
OLD      DC    A(1)
         DC    A(0) PROMPT MESSAGE ADDR
STAKBLOK STACK MF=L
BLANK    DC    CL8' '
MSGSVE28 DS    7F
MSGSVE14 DS    F
SAVER28  DS    7F
SAVER14  DS    F
SAVER1   DS    F
SAVER15  DS    F
PTSVE14  DS    F
FREESV29 DS    8F
FREESV14 DS    F
LIBDSN   DS    161H EACH DSN=LENGTH (2 BYTES) AND DSN (44 BYTES)
LIBDSTML DS    H
LIBDSTM  DS    CL60
LIBMACDS DC    H'11',C'SYS1.MACLIB'
LIBGSFDS DC    H'11',C'SYS2.MACLIB'
UTXDSN   DC    H'7',X'50',C'SYSUT' X'50' = AMPERSAND
UTXDSNC  DS    CL1 (=1,2,3)
UTXBCD   DC    C'0123'
USERIDL  DS    H
USERID   DS    CL9 WILL INCLUDE PERIOD (.)
ASMDSNL  DS    H
ASMDSN   DS    CL60
TBUFL    DS    H
TBUFOFF  DS    H
TBUF     DS    CL60
ASMMEM   DS    CL8
OBJMEM   DS    CL8
OBJDSNL  DS    H
OBJDSN   DS    CL60
PRNTDSNL DS    H
PRNTDSN  DS    CL60
PRNTMEM  DS    CL8
SAVEDSN  DS    H,CL60
         DS    0F
MAIN     EQU   * BEGINNING OF DATA TO BE MOVED TO SP=0
MAINADDR DS    F ADDR OF MAIN FOR ADDRS TO BE PASSED TO SEC. LOAD
MAINLNTH DS    F LENGTH OF MAIN IN SP=0
DAIRPL   DS    5F DAIR PARAMETER BLOCK
ASMDDNAM DC    H'80'
DDNLIST  DS    10XL8
ASMLISTL DS    H
ASMLIST  DS    10CL8
ASMPARML DS    H
ASMPARM  DS    CL256
LIBDSCNT DS    H
LIBDDN   DS    7CL8
FLAGS    DS    X
MAINLEN  EQU   *-MAIN LENGTH OF MAIN FOR DATA TO BE PASSED TO THE
**                    SECOND LOAD
**
** MESSAGES -- ERRORS, INFO, ETC.
**
MSG01    DC    Y(MSG01L,0)
         DC    C'PARSE ERROR CODE '
MSG01C   DS    CL2
MSG01L   EQU   *-MSG01
MSG03    DC    Y(MSG03L),C'NOT IN CATALOG'
MSG03L   EQU   *-MSG03
MSG05    DC    Y(MSG05L,0)
         DC    C' ENTER DATA SET NAME FOR '
MSG05C   DS    CL7
MSG05L   EQU   *-MSG05
MSG06    DC    Y(MSG06L),C'IS ON VOLUME '
MSG06C   DS    CL6
MSG06L   EQU   *-MSG06
MSG07    DC    Y(MSG07L,0)
         DC    C'VOLUME NOT MOUNTED'
MSG07L   EQU   *-MSG07
MSG08    DC    Y(MSG08L),C'NOT ON VOLUME '
MSG08C   DS    CL6
MSG08L   EQU   *-MSG08
MSG09    DC    Y(MSG09L),C'ON VOLUME '
MSG09C   DS    CL6
         DC    C' HAS AN I/O ERROR'
MSG09L   EQU   *-MSG09
MSG10    DC    Y(MSG10L),C'OBTAIN ERROR CODE '
MSG10C   DS    CL2
MSG10L   EQU   *-MSG10
MSG11    DC    Y(MSG11L),C'IS NEITHER PS NOR PDS'
MSG11L   EQU   *-MSG11
MSG12    DC    Y(MSG12L),C'IS NOT PARTITIONED'
MSG12L   EQU   *-MSG12
MSG13    DC    Y(MSG13L),C'IS PARTITIONED -- ''TEMPNAME'' ASSUMED AS MEX
               MBER NAME'
MSG13L   EQU   *-MSG13
MSG14    DC    Y(MSG14L),C'ALLOCATION ERROR'
MSG14L   EQU   *-MSG14
MSG15    DC    Y(MSG15L),C'OPEN ERROR'
MSG15L   EQU   *-MSG15
MSG16    DC    Y(MSG16L),C'DIRECTORY I/O ERROR'
MSG16L   EQU   *-MSG16
MSG17    DC    Y(MSG17L),C'DOES NOT CONTAIN MEMBER NAME'
MSG17L   EQU   *-MSG17
MSG18    DC    Y(MSG18L),C'TO BE ASSEMBLED'
MSG18L   EQU   *-MSG18
MSG19    DC    Y(MSG19L),C'TO CONTAIN OBJECT MODULE'
MSG19L   EQU   *-MSG19
MSG21    DC    Y(MSG21L,0)
         DC    C'ERROR OCCURRED IN ALLOCATING ''PRINT'' TO SYSOUT'
MSG21L   EQU   *-MSG21
MSG22    DC    Y(MSG22L,0)
         DC    C'''LIST'' OR ''PRINT''  NOT SPECIFIED'
MSG22L   EQU   *-MSG22
MSG23    DC    Y(MSG23L,0)
         DC    C'''PRINT'' DATA SET ALLOCATED TO SYSOUT=A'
MSG23L   EQU   *-MSG23
MSG24    DC    Y(MSG24L),C'TO CONTAIN LIST'
MSG24L   EQU   *-MSG24
MSG25    DC    Y(MSG25L,0)
         DC    C'LIB DATA SET NAME IN ERROR'
MSG25L   EQU   *-MSG25
MSG26    DC    Y(MSG26L),C'IS AN INVALID MACRO LIBRARY NAME'
MSG26L   EQU   *-MSG26
MSG27    DC    Y(MSG27L),C'WILL CAUSE DUPLICATION OF MACRO LIBRARIES'
MSG27L   EQU   *-MSG27
MSG28    DC    Y(MSG28L,0)
         DC    C'NO MORE THAN FIVE DATA SET NAMES CAN BE SPECIFIED BY TX
               HE ''LIB'' KEYWORD'
MSG28L   EQU   *-MSG28
MSG29    DC    Y(MSG29L,0)
         DC    C'ALLOCATION ERROR WHEN CONCATENATING MACRO LIBRARIES'
MSG29L   EQU   *-MSG29
MSG30    DC    Y(MSG30L,0)
         DC    C'ERROR OCCURRED WHEN ALLOCATING SYSTERM'
MSG30L   EQU   *-MSG30
MSG31    DC    Y(MSG31L,0)
         DC    C'''OPTION'' STRING WILL CAUSE THE ASMG PARM FIELD TO EXX
               CEED 256 BYTES'
MSG31L   EQU   *-MSG31
MSG32    DC    Y(MSG32L,0)
         DC    C'ERROR OCCURRED DECONTENATING MACRO LIBRARIES'
MSG32L   EQU   *-MSG32
MSG33    DC    Y(MSG33L,0)
         DC    C'ASM DATA SET NAME INPUT IN QUOTES'
MSG33L   EQU   *-MSG33
MSG34    DC    Y(MSG34L,0)
         DC    C'''OBJECT'' OR ''LOAD'' NOT SPECIFIED'
MSG34L   EQU   *-MSG34
MSG35    DC    Y(MSG35L,0)
         DC    C'DATA SET TO BE ASSEMBLED IS NOT QUALIFIED BY ''ASM'''
MSG35L   EQU   *-MSG35
MSG36    DC    Y(MSG36L,0)
         DC    C'NO MORE THAN 10 DATA SETS CAN BE ASSEMBLED IN ONE EXECX
               UTION OF THIS PROMPTER'
MSG36L   EQU   *-MSG36
MSG37    DC    Y(MSG37L,0)
         DC    C' ENTER NULL LINE TO CONTINUE OR NON-NULL LINE TO STOP'
MSG37L   EQU   *-MSG37
MSG38    DC    Y(MSG38L,0)
         DC    C'ERROR IN CONTENATING DATA SETS TO BE ASSMEBLED'
MSG38L   EQU   *-MSG38
MSG39    DC    Y(MSG39L,0)
         DC    C'ERROR IN DECONTENATING DATA SETS TO BE ASSEMBLED'
MSG39L   EQU   *-MSG39
MSG40    DC    Y(MSG40L,0)
         DC    C'NO DATA SETS TO BE ASSEMBLED'
MSG40L   EQU   *-MSG40
MSG41    DC    Y(MSG41L,0)
         DC    C'PUTGET ERROR -- CODE = '
MSG41C   DS    CL2
MSG41L   EQU   *-MSG41
MSG42    DC    C'PUTLINE ERROR -- CODE = '
MSG42C   DS    CL2
MSG42L   EQU   *-MSG42
MSG43    DC    C'CANNOT PROMPT, EITHER YOU ARE EXECUTING A CLIST OR YOUX
               R PROFILE SPECIFIES NO PROMPTING'
MSG43L   EQU   *-MSG43
MSGOUT   DC    Y(MSGOUTL,0)
MSGOUTC  DS    CL120
MSGOUTL  EQU   *-MSGOUT
**
** CAM LISTS, ETC.
**
CATCAM   CAMLST NAME,SRCHDSN,,CATBLK
OBTCAM   CAMLST SEARCH,SRCHDSN,VOLID,CATBLK
SRCHDSNB DC    C' '
SRCHDSN  DS    CL52
VOLID    DS    CL6
CATBLK   DS    0D
         DS    CL265
VOLSER   EQU   CATBLK+6
DS1DSORG EQU   CATBLK+38 FORMAT 1 DSCB (OBTAINED) IS IN CATBLK
*        PRINT NOGEN
**
** DCB FOR TESTING FOR MEMBER NAME IN PDS USING FIND MACRO
**
PDSDCB   DCB   DSORG=PO,MACRF=R,DDNAME=$$PDS
**
**
** PARAMETER CONTROL LIST FOR PARSE
**
PPLPARM  IKJPARM DSECT=PDL
ASMDSNA  IKJPOSIT DSNAME,LIST,PROMPT='ASM DATA SET NAME'
OBJKEYWD IKJKEYWD DEFAULT='NOOBJ'
         IKJNAME 'OBJ',SUBFLD=OBJDSNSF
         IKJNAME 'OBJECT',SUBFLD=OBJDSNSF
         IKJNAME 'LOAD',SUBFLD=OBJDSNSF
         IKJNAME 'NOOBJ'
         IKJNAME 'NOOBJECT'
         IKJNAME 'NOLOAD'
MODKEYWD IKJKEYWD DEFAULT='NOMOD'
         IKJNAME 'MOD'
         IKJNAME 'NOMOD'
PRNKEYWD IKJKEYWD
         IKJNAME 'PRINT',SUBFLD=PRTDSNSF
         IKJNAME 'SYSOUT'
         IKJNAME 'NOPRINT'
LIBKEYWD IKJKEYWD
         IKJNAME 'LIB',SUBFLD=LIBDSNSF
MACKEYWD IKJKEYWD DEFAULT='MACLIB'
         IKJNAME 'MACLIB'
         IKJNAME 'NOMACLIB'
ESDKEYWD IKJKEYWD DEFAULT='ESD'
         IKJNAME 'ESD'
         IKJNAME 'NOESD'
ALNKEYWD IKJKEYWD DEFAULT='ALIGN'
         IKJNAME 'ALGN'
         IKJNAME 'ALIGN'
         IKJNAME 'NOALGN'
         IKJNAME 'NOALIGN'
*CALKEYWD IKJKEYWD DEFAULT='NOCALIGN'
*         IKJNAME 'CALIGN',SUBFLD=CALNSUBF
*         IKJNAME 'NOCALIGN'
RENKEYWD IKJKEYWD DEFAULT='NORENT'
         IKJNAME 'RENT'
         IKJNAME 'NORENT'
TSTKEYWD IKJKEYWD DEFAULT='NOTEST'
         IKJNAME 'TEST'
         IKJNAME 'NOTEST'
OPTKEYWD IKJKEYWD DEFAULT='NOOPTION'
         IKJNAME 'OPTION',SUBFLD=OPTIONSF
         IKJNAME 'NOOPTION'
LRFKEYWD IKJKEYWD DEFAULT='LREF'
         IKJNAME 'LREF'
         IKJNAME 'NOLREF'
LCTKEYWD IKJKEYWD DEFAULT='LINECNT'
         IKJNAME 'LINECNT',SUBFLD=LNECNTSF
         IKJNAME 'LINECOUNT',SUBFLD=LNECNTSF
         IKJNAME 'LC',SUBFLD=LNECNTSF
LSTKEYWD IKJKEYWD
         IKJNAME 'LIST'
         IKJNAME 'NOLIST'
NUMKEYWD IKJKEYWD DEFAULT='NUM'
         IKJNAME 'NUM'
         IKJNAME 'NUMBER'
         IKJNAME 'NONUM'
         IKJNAME 'NONUMBER'
RLDKEYWD IKJKEYWD DEFAULT='RLD'
         IKJNAME 'RLD'
         IKJNAME 'NORLD'
STMKEYWD IKJKEYWD DEFAULT='STMT'
         IKJNAME 'STMT'
         IKJNAME 'NOSTMT'
TRMKEYWD IKJKEYWD DEFAULT='TERM'
         IKJNAME 'TERM'
         IKJNAME 'TERMINAL'
         IKJNAME 'NOTERM'
         IKJNAME 'NOTERMINAL'
*UMPKEYWD IKJKEYWD DEFAULT='UMAP'
*         IKJNAME 'UMAP'
*         IKJNAME 'NOUMAP'
XRFKEYWD IKJKEYWD DEFAULT='XREF'
         IKJNAME 'XREF'
         IKJNAME 'FULLXREF'
         IKJNAME 'NOXREF'
MSGKEYWD IKJKEYWD DEFAULT='NOMSG'
         IKJNAME 'MSG'
         IKJNAME 'NOMSG'
BATKEYWD IKJKEYWD DEFAULT='BATCH'
         IKJNAME 'BATCH'
         IKJNAME 'NOBATCH'
COLKEYWD IKJKEYWD DEFAULT='COLUMN'
         IKJNAME 'COLUMN',SUBFLD=COLSUBF
         IKJNAME 'NOCOLUMN'
*CALNSUBF IKJSUBF
*CALNCOL IKJIDENT 'CALIGN COLUMN NUMBER',FIRST=NUMERIC,OTHER=NUMERIC, X
*               MAXLNTH=3,DEFAULT='40'
OBJDSNSF IKJSUBF
OBJDSNA  IKJPOSIT DSNAME
PRTDSNSF IKJSUBF
PRNTDSNA IKJPOSIT DSNAME
LIBDSNSF IKJSUBF
LIBDSNA  IKJPOSIT DSNAME,LIST,PROMPT='LIB DATA SET NAME'
OPTIONSF IKJSUBF
OPTIONA  IKJPOSIT QSTRING
LNECNTSF IKJSUBF
LINECNTA IKJIDENT 'LINECNT VALUE',FIRST=NUMERIC,OTHER=NUMERIC,         X
               MAXLNTH=3,DEFAULT='55'
*XREFSF   IKJSUBF
*XREFA    IKJIDENT 'XREF REQUEST',MAXLNTH=5,DEFAULT='SHORT'
COLSUBF  IKJSUBF
COLSUBA  IKJIDENT 'COLUMN',MAXLNTH=1,FIRST=NUMERIC,DEFAULT='3'
         IKJENDP
**
** PARSE PARM LIST FOR PROMPTED DSNAMES
**
DSNPPL   IKJPARM DSECT=DSNPDL
NEWDSN   IKJPOSIT DSNAME,PROMPT='DATA SET NAME'
         IKJENDP
         EJECT
**
** MAPPING DSECTS
**
         IKJCPPL
         IKJPPL
         IKJDAPL
         IKJDAP04
         IKJDAP08
         IKJDAP0C
         IKJDAP10
         IKJDAP18
         IKJDAP1C
         IKJDAP30
         DCBD  DSORG=PO,DEVD=DA
GSFTSOAS CSECT
         LTORG
         END   GSFTSOAS
