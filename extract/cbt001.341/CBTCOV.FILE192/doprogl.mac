*)F       THE # COMMAND CAN BE USED IN PLACE OF THE CALL COMMAND
*         FOR PROGRAMS THAT ARE IN THE 'SYS1.LINKLIB' DATA SETS;
*         THIS INCLUDES ALL COMPILERS AND UTILITIES AS WELL AS
*         MEMOREX UTILITIES SUCH AS LISTPDS AND DSUTIL.
*
*         ADVANTAGES OF THE # COMMAND OVER CALL:
*         1) THE # COMMAND REQUIRES NO DYNAMIC DD CARD NOR
*            ALLOCATION AND IS, THEREFORE, CONSIDERABLY FASTER;
*         2) THE # COMMAND SIMPLIFIES SYNTAX AND REQUIRES LESS TYPING;
*         3) THE # COMMAND ALLOWS USE OF PROGRAMS IN ANY OF THE LINKLIB
*            DATA SETS, WITHOUT KNOWING WHICH OF THE DATA SETS THE
*            PROGRAM IS IN.
*         DISADVANTAGES OF THE # COMMAND:
*         THE ONLY DISADVANTAGE OF THE # COMMAND IS THAT THE PROGRAM
*         BEING CALLED MUST BE IN A LINKLIB DATA SET; HENCE,
*         TO CALL A USER'S PROGRAM FROM HIS LIBRARY, THE CALL COMMAND
*         MUST STILL BE USED.
*)X       THE SYNTAX OF THE # COMMAND IS AS FOLLOWS:
*         # PROGRAM 'PARM'
*         WHERE PROGRAM IS THE NAME OF THE PROGRAM TO BE EXECUTED AND
*         'PARM' IS AN OPTIONAL PARM FIELD OF UP TO 100 CHARACTERS
*         WHICH IS TO BE PASSED TO THE PROGRAM.
*)O       THE OPERANDS OF THE # COMMAND ARE:
*         PROGRAM - THE 1 TO 8 CHARACTER NAME OF THE PROGRAM TO BE
*                   EXECUTED.
*         'PARM'  - THE OPTIONAL 0 TO 100 CHARACTER STRING, ENCLOSED IN
*                   QUOTES, REPRESENTING THE PARAMETER TO BE PASSED TO
*                   THE PROGRAM.
*
*         EXAMPLE - INVOKING MRCLEAN FOR VOLS PUBDA1 AND TSODA1
*         # MRCLEAN 'PUBDA1,TSODA1'
*
*         EXAMPLE - INVOKING ASSEMBLER F WITH PARMS OF TEST AND RENT
*         # IEUASM 'TEST,RENT'
         EJECT
#CAL     TITLE '# - TSO CALL FUNCTION FOR LINKLIB MODULES'
*
*        LAST UPDATED 09 MAY 73 - BMD (*BMD*)
*                     FIX PARM OF '' AND SHARE
*                     SUBPOOL 78 FOR IKJPUTGT
*
         SPACE 2
#        TSOENTER REGS=YES,PL=(CPPL,PARSE),WORK=260
         EJECT
TSODSECT DSECT ,                        RE-ESTABLIST DSECT
         ORG   TSOWORK                  GET ADDR
DOUBLE   DC    D'0'                     FOR CONVERSIONS
ATTLIST  ATTACH DE=0,SF=L               PHONEY ATTACH LIST
ATTLISTL EQU   *-ATTLIST                LENGTH
ATTTCB   DC    A(0)                     TCB ADDRESS
ATTECB   DC    F'0'                     ECB ADDRESS
STAECMP  DC    F'0'                     CMP FOR STAI
BLDL     DC    2H'0',CL58' '            BLDL LIST
PARM     DC    H'0',CL100' '            PARM FIELD
PARMPTR  DC    A(0)                     POINTER TO PARM
         DC    3A(0)                    FAKE REST OF CPPL
         ORG
#        CSECT
         TITLE '# - INITIALIZATION CODE'
         MVC   BLDL(4),=AL2(1,58)       NUMBER/LEN
         XC    PPLRANS(4),PPLRANS       CLEAR ANSWER FIELD
         XC    TSOECB(4),TSOECB         AND ECB
         MVC   STAECMP(4),TSOECB        CLEAR IT THIS WAY
         L     R15,CPPLCBUF             LOAD CMD BUFFER
         TSOPARSE CBUF=(15),PCL==V(PCL) CALL PARSE ROUTINE
         LTR   R15,R15                  TEST RETURN CODE
         BZ    ANALYZE                  OK, CONTINUE
BADPARSE LA    R0,L'MSG01               LOAD MESSAGE SIZE
         LA    R1,MSG01                 AND MESSAGE ADDR
         B     PRELEAVX                 DONE, FORGET IT
         TITLE '# - ANALYZE INPUT'
         LUSE  PDL,R11                  TELL ASSEMBLER
ANALYZE  L     R11,PPLRANS              LOAD ANSWER AREA
         L     R1,MODNAME               GET MODULE NAME ENTRY
         TM    MODNAME+6,X'80'          IS IT THERE
         BNO   BADPARSE                 NO, STOP HERE
         MVC   BLDL+4(8),=8C' '         CLEAR MODULE NAME
         LH    R15,MODNAME+4            GET LEN
         BCTR  R15,0                    -1 FOR EXECUTE
         EX    R15,MVCMOD               DO IT
         LH    R2,PDLPARM+4             GET LENGTH
         L     R3,PDLPARM               GET ADDRESS
         CH    R2,=H'100'               CHECK IT
         BNH   LENOK                    OK, SO FAR
         LA    R1,MSG02                 GET MESSAGE
         LA    R0,L'MSG02               AND LENGTH
         TPUT  (1),(0),R                DO IT
         LA    R2,100                   SET AT MAXIMUM
LENOK    LTR   R2,R2                    TEST FOR NON-ZERO LEN *BMD*
         STH   R2,PARM                  SAVE IN LENGTH
         BCTR  R2,0                     SUBTRACT ONE
         BNP   *+12                     NOT THERE, NO MOVE *BMD*
         EX    R2,MVCPARM               DO THAT
         B     *+10                     AROUND XC
         XC    PARM+2(40),PARM+2        CLEAR IT FOR ACCIDENTAL PARSE
         LA    R1,PARM                  LOAD PARM FIELD
         ST    R1,PARMPTR               SAVE IT THERE
         MVI   PARMPTR,X'80'            FLAG AS LAST
         MVC   PARMPTR+4(12),CPPLUPT    JUST IN CASE CALL CP
         SPACE 3
         XR    R1,R1                    CLEAR DCB ADDRESS
         BLDL  (1),BLDL                 DO IT
         CH    R15,=H'8'                CHECK JUST IN CASE
         BNH   *+8                      OK
         LA    R15,12                   LOAD ERROR CODE
         B     *+4(R15)                 DO BRANCH
         B     DOATTACH                 RETURN CODE=0
         B     NONESUCH                 NO SUCH MODULE
         B     IOERR                    I/O ERROR IN SEARCH
         LA    R1,MSG03                 BAD RETURN CODE FROM BLDL
         LA    R0,L'MSG03               AND LEN
         B     PRELEAVX                 DIE RIGHT NOW
         TITLE '# - ERROR AND RETURN CODE'
NONESUCH MVC   PARM(L'NOMOD),NOMOD      MOVE IN MESSAGE
         MVC   PARM+MODOFF(8),BLDL+4    MOVE IN MODULE NAME
         LA    R1,PARM                  LOAD PLACE
         LA    R0,L'NOMOD               LEN
         B     PRELEAVX                 DO IT
         SPACE 2
IOERR    LA    R1,IOERRMSG              LOAD MESSAGE
         LA    R0,L'IOERRMSG            LENGTH
         SPACE 2
PRELEAVX MVI   STAECMP+3,20             ERROR CODE
PRELEAVE TPUT  (1),(0),R                DO IT
RELEASEA IKJRLSA PPLRANS
         L     R2,STAECMP               TEST CMP CODE
         LTR   R2,R2                    TEST IT
         BP    *+6                      AROUND CLEAR
         XR    R2,R2                    CLEAR IT
         TSOLEAVE RETCODE=(R2)          LEAVE NOW
         TITLE '# - SOME CONSTANTS'
MSG01    DC    C'MISSING PROGRAM NAME OR PARSE ERROR, PLEASE RE-ENTER C+
               OMMAND'
MSG02    DC    C'PARM FIELD TOO LONG, TRUNCATED AT 100 CHARACTERS'
MSG03    DC    C'** ERROR IN BLDL ** CONTACT SYSTEMS PERSONNEL'
MSG10    DC    C'** ATTACH ERROR ** CONTACT SYSTEMS PERSONNEL'
IOERRMSG DC    C'** I/O ERROR DURING BLDL ** CONTACT SYSTEMS PERSONNEL'
NOMOD    DC    C'PROGRAM 12345678 NOT FOUND, PLEASE RE-ENTER COMMAND'
ABCODE   DC    C'PROGRAM 12345678 ABENDED, SYS=000, USER=0000'
NONZERO  DC    C'PROGRAM 12345678 ENDED, COND. CODE=00000000 '
MODOFF   EQU   8
ABSYS    EQU   30
ABUSER   EQU   40
NONCODE  EQU   35
TRT      EQU   *-C'0'
         DC    C'0123456789ABCDEF'
         TITLE '# - PARSE PCL'
PCL      IKJPARM DSECT=PDL
MODNAME  IKJIDENT 'PROGRAM',MAXLNTH=8,FIRST=ALPHANUM,                  +
               OTHER=ALPHANUM,PROMPT='PROGRAM NAME',                   +
               HELP='NAME OF PROGRAM TO BE CALLED'
         SPACE 2
PDLPARM  IKJPOSIT QSTRING,HELP='PARM FIELD FOR PROGRAM'
         IKJENDP
         TITLE '# - SET UP AND ATTACH PROGRAM'
DOATTACH TM    CPPLCBUF,X'80'           CALL ON ME?
         BO    NOECTCHG                 RIGHT, DON'T CHANGE ECT
         L     R1,CPPLECT               LOAD ECT ADDR
         MVC   12(8,R1),BLDL+4          MOVE IN MODULE NAME
NOECTCHG LA    R1,PARMPTR               LOAD PARM POINTER
         SPACE 3
         XC    ATTLIST(ATTLISTL),ATTLIST  CLEAR ATTACH LIST
         XC    ATTECB(4),ATTECB         CLEAR IT
ATTACH   ATTACH DE=BLDL+4,DCB=0,ECB=ATTECB,SZERO=NO,                   +
               STAI=(STAI,(R13)),PURGE=NONE,ASYNCH=YES,                +
               MF=(E,(1)),SF=(E,ATTLIST),SHSPV=78  *BMD*
         LTR   R15,R15                  TEST RETURN CODE
         BZ    ATTWAIT                  OK, SAVE TCB AND WAIT
         LA    R1,MSG10                 MESSAGE ADDRESS
         LA    R0,L'MSG10               AND LEN
         B     PRELEAVX                 DONE FOR
         SPACE 3
ATTWAIT  ST    R1,ATTTCB                SAVE TCB ADDRESS
         WAIT  1,ECB=ATTECB             WAIT FOR SUBTASK
         OC    STAECMP(4),STAECMP       GET CMP FROM TASK
         BZ    GETRC                    OK, GET RETURN CODE
         MVI   STAECMP,X'00'            CLEAR HIGH BYTE
         L     R1,STAECMP               GET IT
         SLL   R1,4                     NOW HAVE 0SSSUUU0
         ST    R1,ATTECB                SAVE IT
         MVC   PARM(L'ABCODE),ABCODE
         MVC   PARM+MODOFF(8),BLDL+4    MOVE IN MOD NAME
         UNPK  DOUBLE(4),ATTECB(3)      GET FOR HEX
         MVC   PARM+ABSYS(3),DOUBLE     DO THAT
         TR    PARM+ABSYS(3),TRT        GET IN PRINTABLE
         MVC   ATTECB(2),STAECMP+2      GET LOW 2 BYTES
         NI    ATTECB,X'0F'             OFF LOW SYSTEM BYTE
         LH    R15,ATTECB               LOAD CMP CODE
         CVD   R15,DOUBLE               CONVERT IT
         UNPK  PARM+ABUSER(4),DOUBLE+5(3)
         OI    PARM+ABUSER+3,C'0'       PRINTABLE
         B     DETACH                   DO DETACH
         SPACE 3
GETRC    L     R15,ATTECB               GET ECB
         LA    R15,0(,R15)              OFF POST FLAGS
         LTR   R15,R15                  TEST RETURN CODE
         ST    R15,STAECMP              SAVE IT IN RIGHT FIELD
         MVI   STAECMP,X'FF'            SET NO-FLAG
         BZ    DETACH                   NO FORMAT TO DO
         MVI   STAECMP,X'00'            OFF FLAG
         CVD   R15,DOUBLE               CONVERT IT
         MVC   PARM(L'NONZERO),NONZERO  MOVE IN CODE
         MVC   PARM+MODOFF(8),BLDL+4    MOVE IN NAME
         UNPK  PARM+NONCODE(8),DOUBLE+3(5)
         OI    PARM+NONCODE+7,C'0'      PRINTABLE
         EJECT
DETACH   DETACH ATTTCB,STAE=NO          NO CHANCE
         LA    R1,PARM                  LOAD ADDRESS OF ROUTINE
         LA    R0,L'NONZERO             BOTH SAME LEN
         CLI   STAECMP,X'FF'            CMP ZERO?
         BE    RELEASEA                 YES, NO MESSAGE
         B     PRELEAVE                 DIE NOW
         TITLE '# - STAI EXIT ROUTINE'
         LDROP *
         LUSE  STAI,R15                 TELL ASSEMBLER
STAI     CH    R0,=H'12'                CODE FOR NO CORE?
         BE    STAINCOR                 NO CORE, OK
         L     R2,0(,R1)                GET ADDR OF PARM
         LUSE  TSODSECT,R2              TELL ASSEMBLER
         OC    STAECMP(4),STAECMP       SET CONDITION CODE
         BNZ   STAIDIE                  RECURSION-DIE
         MVC   STAECMP(4),4(R1)         COPY STAE ABCODE
         B     STAIDO                   GO TO RETRY ROUTINE
         SPACE 3
STAINCOR OC    STAECMP(4),STAECMP       SET CONDITION CODE
         BNZ   STAIDIE                  STAI-RECURSION DIE
         ST    R1,STAECMP               SAVE CMP AS PUT THERE
STAIDO   LA    R0,STAITRY               LOAD STAE RETRY ROUTINE
         LA    R15,4                    LOAD RETRY CODE
         SVC   3                        RETURN TO ASIR
         SPACE 1
STAIDIE  LR    R3,R1                    SAVE POINTER
         POST  ATTECB,0                 POST MY MOTHER
         XC    DOUBLE(4),DOUBLE         CLEAR IT
         WAIT  1,ECB=DOUBLE             STOP HERE
         LDROP *
STAITRY  STAE  0,CT                     CLEAR ANY STAE CB'S
         SVC   3                        RETURN UP ANOTHER LEVEL
         EJECT
         LUSE  TSODSECT,R13             RE-ESTABLIST FOR THESE ISNS
MVCMOD   MVC   BLDL+4(0),0(R1)          <<EXECUTED>>
MVCPARM  MVC   PARM+2(0),0(R3)          <<EXECUTED>>
         SPACE 2
HERMAN   LTORG
         END
