         TITLE '    C P S C B   '
************************************************************
*                                                          *
*              'CPSCB'                                     *
*                                                          *
************************************************************
         SPACE
*        WRITTEN BY. BILL GODFREY, PLANNING RESEARCH CORPORATION.
*        INSTALLATION. PRC COMPUTER CENTER INC, MCLEAN VA
*        DATE WRITTEN. FEBRUARY 21 1975.
*        DATE UPDATED. JULY 7 1981.
*        ATTRIBUTES. RE-ENTRANT.
*        DESCRIPTION.'
*         THIS TSO COMMAND ALLOWS SYSTEMS PROGRAMMERS TO
*         MODIFY THEIR SESSION'S PSCB.
*
*         LOG OF CHANGES.
*         22APR81 - USER SVC REMOVED. MODESETS ADDED.
*                   COMMAND MUST NOW BE AUTHORIZED.
*         07JUL81 - CK FOR ASMI.
*         26NOV82 - CHANGE THE CHECK TO SS    JIM MARSHALL, SADSC
         SPACE
CPSCB    START
         USING *,R12
         B     @PROLOG-*(,R15)
         DC    AL1(11),CL11'CPSCB'
         DC    CL16' &SYSDATE &SYSTIME '
@PROLOG  STM   14,12,12(13)
         LR    R12,R15
         LR    R2,R1
         USING CPPL,R2
         GETMAIN R,LV=@DATAL
         ST    13,4(,1)
         ST    1,8(,13)
         LR    13,1
         LR    R9,R1
         USING @DATA,R9
         SPACE 1
         SLR   15,15
         ST    15,MYANS
         SPACE
         L     R1,16               CVTPTR
         L     R1,0(,R1)           TCB WORDS
         L     R1,4(,R1)           CURRENT TCB
         L     R1,180(,R1)         TCBJSCB
         L     R1,264(,R1)         JSCBPSCB
         LA    R1,0(,R1)           CLEAR HI ORDER BYTE
         LTR   R1,R1               IS THERE A PSCB
         BZ    IMPLEXEC            NO, ISSUE COMMAND-NOT-FOUND MSG
         ST    R1,PSCBPTR          SAVE PSCB ADDRESS
         SPACE
         L     R1,548              PSAAOLD, CURRENT ASCB
         L     R15,172(,R1)        ASCBJBNI
         LTR   R15,R15             IS THIS A JOB
         BNZ   IMPLEXEC            YES, ISSUE COMMAND-NOT-FOUND MSG
         L     R0,60(,R1)          ASCBTSB
         LTR   R0,R0               IS THIS TSO
         BZ    PROCEED             NO, BRANCH IF STARTED TASK
         L     R1,PSCBPTR          POINT TO USERID IN PSCB
         USING PSCB,R1
*        TM    PSCBATR1,PSCBCTRL   OPER
*        BO    PROCEED             YES, BRANCH
         CLC   PSCBUSER(4),ASFI
         BE    PROCEED
         CLC   PSCBUSER(2),SS
         BE    PROCEED
         LA    R15,USERIDS         POINT TO LIST OF AUTHORIZED USERS
USERLOOP CLI   0(R15),0            END OF LIST
         BE    IMPLEXEC            YES, BRANCH
         CLC   PSCBUSER,0(R15)     IS USERID IN LIST
         BE    PROCEED             YES, BRANCH
         LA    R15,8(,R15)         POINT TO NEXT USERID IN LIST
         B     USERLOOP
         DROP  R1                  PSCB
SS       DC    C'SS'               SYSTEMS TYPE
USERIDS  DC    0D'0'               ALIGN FOR EASY ZAPS
         DC    8D'0'               ROOM FOR 8 USERIDS
         DC    H'0'                END OF LIST
         SPACE
IMPLEXEC L     R15,CPPLCBUF        CPPLCBUF
         XC    2(2,R15),2(R15)     SET CBUF OFFSET TO IMPLICIT EXEC
         L     R15,CPPLECT         CPPLECT
         CLI   20(R15),X'40'       ECTSCMD BLANK?
         BNE   *+10                YES - SUBCOMMAND NOT FOUND
         MVC   12(8,R15),=CL8'EXEC' NO - COMMAND NOT FOUND
         LR    R1,R13
         L     R13,4(,R13)
         FREEMAIN R,A=(1),LV=@DATAL
         L     R1,24(,R13)         RESTORE CPPL POINTER
         LA    R15,20(,R13)        POINT TO 8 BYTE WORKAREA
         XC    0(8,R15),0(R15)     ZERO WORKAREA
         XCTL  (2,12),EP=EXEC,SF=(E,(15))
         SPACE 1
PROCEED  EQU   *
         TESTAUTH FCTN=1
         LTR   R15,R15
         BNZ   AUTHERR
         SPACE
************************************************************
*                                                          *
*        SET UP PPL FOR PARSE                              *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYPPL
         USING PPL,R15
         MVC   PPLUPT(4),CPPLUPT
         MVC   PPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,PPLECB
         XC    MYECB,MYECB
         L     R0,=A(CPSCBPCL)
         ST    R0,PPLPCL
         LA    R0,MYANS
         ST    R0,PPLANS
         MVC   PPLCBUF(4),CPPLCBUF
         ST    R9,PPLUWA
         DROP  R15
         SPACE 1
************************************************************
*                                                          *
*        CALL THE PARSE SERVICE ROUTINE                    *
*                                                          *
************************************************************
         SPACE 1
         LR    R1,R15              POINT TO PPL
         L     R15,16              CVTPTR
         TM    520(R15),X'80'      IF HI ORDER BIT NOT ON
         BNO   PARSELNK               THEN DO LINK, NOT CALL
         L     R15,520(,R15)       CVTPARS
         BALR  R14,R15             CALL IKJPARS
         B     PARSEEXT            SKIP AROUND LINK
         SPACE
PARSELNK EQU   *
         LINK  EP=IKJPARS
PARSEEXT EQU   *
         SPACE 1
         LTR   15,15               PARSE SUCCESSFUL?
         BNZ   EXIT                NO - BRANCH
         L     R7,MYANS
         USING IKJPARMD,R7
         L     R8,PSCBPTR          REG 8 --> PSCB
         USING PSCB,R8
         SPACE
         MODESET KEY=ZERO
         SPACE
         CLI   OPER+1,1            OPER?
         BNE   *+8                 NO
         OI    PSCBATR1,PSCBCTRL   YES
         CLI   OPER+1,2            NOOPER?
         BNE   *+8                 NO
         NI    PSCBATR1,255-PSCBCTRL
         SPACE
         CLI   ACCT+1,1            ACCT?
         BNE   *+8                 NO
         OI    PSCBATR1,PSCBACCT   YES
         CLI   ACCT+1,2            NOACCT?
         BNE   *+8                 NO
         NI    PSCBATR1,255-PSCBACCT
         SPACE
         CLI   JCL+1,1             JCL?
         BNE   *+8                 NO
         OI    PSCBATR1,PSCBJCL    YES
         CLI   JCL+1,2             NOJCL?
         BNE   *+8                 NO
         NI    PSCBATR1,255-PSCBJCL
         SPACE
         CLI   MOUNTKW+1,1         MOUNT
         BNE   *+8                 NO
         OI    PSCBATR1,PSCBVMNT   YES
         CLI   MOUNTKW+1,2         NOMOUNT
         BNE   *+8                 NO
         NI    PSCBATR1,255-PSCBVMNT
         SPACE
         TM    USERDATA+6,X'80'    USERDATA PRESENT?
         BZ    USERDAX             NO - BRANCH
         L     4,USERDATA          REG 4 --> VALUE ENTERED
         LH    5,USERDATA+4        REG 5  =  LENGTH
         BCTR  5,0
         B     *+10
         MVC   WORK4(0),0(4)
         EX    5,*-6
         LA    1,WORK4
         LA    0,2
         BAL   2,PACK              CONVERT TO HEX
         MVC   PSCBATR2(2),WORK4
USERDAX  EQU   *
         SPACE
         TM    UNITNAME+6,X'80'    UNITNAME PRESENT?
         BZ    UNITNAX             NO - BRANCH
         L     4,UNITNAME          REG 4 --> VALUE ENTERED
         LH    5,UNITNAME+4        REG 5  =  LENGTH
         BCTR  5,0
         MVC   WORK8(8),=CL8' '
         B     *+10
         MVC   WORK8(0),0(4)
         EX    5,*-6
         CLC   WORK8(5),=CL5'NONE ' UNIT(NONE) SPECIFIED?
         BNE   *+10                NO - BRANCH AROUND MVC
         MVC   WORK8,=CL8' '       YES - MOVE SPACES
         MVC   PSCBGPNM,WORK8
UNITNAX  EQU   *
         MODESET KEY=NZERO
         B     EXIT0
         SPACE
EXIT12   LA    15,12
         B     EXIT
EXIT0    SLR   15,15
EXIT     EQU   *
         STH   15,WORK4
         IKJRLSA MYANS
         LH    15,WORK4
         SPACE
         LR    1,13
         L     13,4(,13)
         ST    15,16(,13)
         FREEMAIN R,A=(1),LV=@DATAL
         LM    14,12,12(13)
         BR    14
         SPACE
PACK     LR    15,1                REG 15 --> RECEIVING FLD
         SR    14,14               CLEAR REG 14
         IC    14,0(,1)            REG 14  =  1ST CHAR
         CLI   0(1),C'0'           NUMBER OR LETTER
         BNL   *+8                 NUMBER - BRANCH
         LA    14,57(,14)          LETTER - CONVERT TO FA-FF
         SLL   14,4                SHIFT LEFT 4 BITS
         STC   14,0(,15)           STORE LEFT HALF
         IC    14,1(,1)            REG 14  =  2ND CHAR
         CLI   1(1),C'0'           NUMBER OR LETTER
         BNL   *+8                 NUMBER - BRANCH
         LA    14,57(,14)          LETTER - CONVERT
         SLL   14,28               SHIFT LEFT HALF TO OBLIVION
         SRL   14,28               SHIFT BACK AGAIN
         STC   14,1(,15)           STORE RIGHT HALF
         OC    0(1,15),1(15)       'OR' RIGHT HALF OVER LEFT HALF
         LA    1,2(,1)             INCREMENT SENDING FLD
         LA    15,1(,15)           INCREMENT RECEIVING FLD
         BCT   0,PACK+2            LOOP USING LENGTH IN REG 0
         BR    2                   EXIT
         SPACE
AUTHERR  LA    R1,AUTHMSG
         LA    R0,L'AUTHMSG
         TPUT  (1),(0),R
         B     EXIT12
         SPACE
************************************************************
*                                                          *
*        CONSTANTS                                         *
*                                                          *
************************************************************
         SPACE
         LTORG
AUTHMSG  DC    C'ENVIRONMENT IS NOT APF AUTHORIZED'
         SPACE
         PRINT NOGEN
         SPACE
CPSCBPCL IKJPARM
OPER     IKJKEYWD
         IKJNAME 'OPER'
         IKJNAME 'NOOPER'
ACCT     IKJKEYWD
         IKJNAME 'ACCT'
         IKJNAME 'NOACCT'
JCL      IKJKEYWD
         IKJNAME 'JCL'
         IKJNAME 'NOJCL'
MOUNTKW  IKJKEYWD
         IKJNAME 'MOUNT'
         IKJNAME 'NOMOUNT'
USERKW   IKJKEYWD
         IKJNAME 'USERDATA',SUBFLD=USERSF
UNITKW   IKJKEYWD
         IKJNAME 'UNITNAME',SUBFLD=UNITSF
USERSF   IKJSUBF
USERDATA IKJIDENT 'USERDATA',MAXLNTH=4,                                *
               FIRST=NONATNUM,OTHER=NONATNUM,                          *
               PROMPT='USERDATA',                                      *
               VALIDCK=CPSCBVC
UNITSF   IKJSUBF
UNITNAME IKJIDENT 'UNITNAME',MAXLNTH=8,                                *
               FIRST=NONATABC,OTHER=NONATNUM,                          *
               PROMPT='UNITNAME'
         IKJENDP
         PRINT GEN
         SPACE
************************************************************
*                                                          *
*        DSECTS                                            *
*                                                          *
************************************************************
         SPACE
         IKJCPPL
         SPACE
         IKJPPL
         SPACE
         IKJPSCB
         SPACE 2
@DATA    DSECT
         DS    18F
MYECB    DS    F
MYPPL    DS    7F
MYANS    DS    F                   WILL POINT TO PDL
PSCBPTR  DS    F
WORK4    DS    F
WORK8    DS    CL8
         DS    0D
@DATAL   EQU   *-@DATA
         SPACE 2
*
*              PARSE VALIDITY CHECKING ROUTINE FOR USERDATA
*
CPSCBVC  CSECT
         USING *,10
         STM   14,12,12(13)
         LR    10,15
         LM    8,9,0(1)            REG 8 --> PDE
*        L     9,0(,9)             REG 9 --> MYDSECT
         L     4,0(,8)             REG 4 --> CHARACTER STRING
         LH    5,4(,8)             REG 5  =  LENGTH
         LA    15,4                RETURN CODE IF CHECK FAILS
         CLI   5(8),4              LENGTH = 4?
         BNE   VALEXIT             NO - EXIT WITH RC=4
VALLOOP  CLI   0(4),C'0'           NUMERIC?
         BNL   VALINCR             YES - THIS CHAR OK
         CLI   0(4),C'F'           IN RANGE A THRU F?
         BH    VALEXIT             NO - EXIT WITH RC=4
VALINCR  LA    4,1(,4)             POINT TO NEXT CHAR
         BCT   5,VALLOOP           LOOP FOR LENGTH OF STRING
         SR    15,15               SET RC=0
VALEXIT  L     14,12(,13)
         LM    0,12,20(13)
         BR    14
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
