DSPRINT  CSECT
         SPACE 1
*---------------------------------------------------------------------*
*                                                                     *
* DSPRINT COMMAND SIMULATOR                   LEVI, RAY & SHOUP, INC. *
*                                             2387 W. MONROE          *
*                                             SPRINGFIELD, IL 62704   *
*                                                                     *
*                                             (217) 793-3800          *
*                                                                     *
*   THIS COMMAND CAME TO LRS BY WAY OF BILL SMITH OF 'SYNTEX'.   JDM1 *
*   IBM WILL INVOKE THE ATTROCIOUS CMD CALLED 'DSPRINT' OUT OF   JDM1 *
*   ISPF/PDF WHEN YOU REQUEST PRINTS. NORMALLY INSTALLATIONS     JDM1 *
*   DO NOT HAVE DSPRINT (WHOPPEEE) AND THE TSO USER GETS A S806  JDM1 *
*   ABEND AND NO PRINT. LRS MARKETS A PRODUCT (VPS) THAT REPLACESJDM1 *
*   DSPRINT AND SUPPORTS IBM 328X PRINTING (JES2 DOES NOT - IBM  JDM1 *
*   HAS COME OUT WITH A COMPETING PRODUCT CALLED JES328X).       JDM1 *
*                                                                JDM1 *
*   WHEN VPS WAS FIRST RELEASED LRS SENT OUT THIS TSO CP CALLED  JDM1 *
*   DSPRINT THAT TOOK THE DSPRINT COMMAND ISSUED BY ISPF/PDF     JDM1 *
*   AND REFORMATTED IT INTO A 'PRINTOFF' COMMAND - NEATOOHH !    JDM1 *
*                                                                JDM1 *
*   LRS HAS SINCE WRITTEN A COMMAND CALLED 'VPSPRINT' WITH       JDM1 *
*   ALIAS OF DSPRINT THAT REPLACES THIS CODE AND DOES EVERYTHING JDM1 *
*   THIS CODE DOES AND MORE.  I WANT TO THANK LRS FOR LETTING    JDM1 *
*   ME ADD THIS CODE FOR ALL.                                    JDM1 *
*                                                                JDM1 *
*   JIM MARSHALL, CAPT, USAF                                     JDM1 *
*                                                                     *
* CHNGE LOG: ADDITIONAL EXPLANATION IS ADDED.                    JDM1 *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
* THE PURPOSE OF THIS COMMAND IS TO ALLOW THE TRANSPARENT REPLACEMENT *
* OF THE DSPRINT COMMAND FOR THOSE USERS WHO HAVE CONVERTED OR DESIRE *
* TO CONVERT FROM DSPRINT TO VPS.                                     *
*                                                                     *
*                                                                     *
* THIS COMMAND ACCEPTS THE DSPRINT COMMAND AND ITS PARAMETERS AND     *
* CONVERTS IT TO THE APPROPRIATE PRINTOFF COMMAND WHICH WILL SPOOL    *
* THE REQUESTED DATASET TO THE JES SPOOL VOLUMES. THEREFORE, THE      *
* PRINTOFF COMMAND MUST BE INSTALLED IN YOUR SYSTEM.                  *
* (A COPY OF THE PRINTOFF COMMAND IS DISTRIBUTED WITH VPS).           *
*                                                                     *
*                                                                     *
* THE ONLY DSPRINT COMMAND PARAMETERS THAT ARE PROCESSED ARE THE      *
* DSNAME AND PRINTER-NAME (ALL OTHER COMMAND PARAMETERS ARE IGNORED). *
*                                                                     *
* THE DSNAME IS PASSED DIRECTLY TO PRINTOFF.                          *
*                                                                     *
* THE PRINTER-NAME IS PASSED TO PRINTOFF BY THE 'DEST' KEYWORD.       *
*                                                                     *
* EXAMPLE - DSPRINT  COMMAND: 'DSPRINT  MY.DATASET PRINTR01'          *
*                                                                     *
*           WOULD BE CONVERTED TO                                     *
*                                                                     *
*           PRINTOFF COMMAND: 'PRINTOFF MY.DATASET DEST(PRINTR01)'    *
*                                                                     *
*                                                                     *
* INCLUDED IN THIS PROGRAM IS A TABLE (PID$DEST) THAT THE USER MAY    *
* UPDATE TO INCLUDE PRINTER NAMES AND CORRESPONDING DESTINATIONS IN   *
* WHICH CASE, THIS COMMAND PROCESSOR WILL BUILD THE DEST KEYWORD OF   *
* THE PRINTOFF COMMAND TO CONTAIN THE DESTINATION AS DEFINED IN THE   *
* TABLE RATHER THAN USING THE PRINTER NAME.                           *
*                                                                     *
* SO THE TABLE IS DOWN IN THE CODE AND WOULD BE CODED THUS:      JDM1 *
*                                                                JDM1 *
*                         NAME         DEST                      JDM1 *
*     PID$DEST DC    0F'0'                                       JDM1 *
*              DC    CL8'PRTR0001',CL8'U201    '                 JDM1 *
*              DC    CL8'PRTR0002',CL8'U202    '                 JDM1 *
*              DC    CL8'PRTR0003',CL8'U203    '                 JDM1 *
*              DC    CL8'PRTR0004',CL8'U204    '                 JDM1 *
*              DC    CL8'NEWYORK ',CL8'RMT10   '                 JDM1 *
*              DC    CL8'DALLAS  ',CL8'RMT12   '                 JDM1 *
*     PID$NUM  EQU   (*-PID$DEST)/16      NO. OF TABLE ENTRIES.  JDM1 *
*                                                                     *
* REMEMBER, JES REQUIRES THAT DESTINATION NAMES BE VALID (KNOWN TO    *
* JES). THEREFORE, YOU MUST EITHER UPDATE THE TABLE IN THIS PROGRAM   *
* TO INCLUDE YOUR PRINTER NAMES OR YOU MUST UPDATE THE JES2 PARMS     *
* TO INCLUDE 'DESTID' ENTRIES DEFINING YOUR EXISTING PRINTER NAMES.   *
*                                                                     *
* THUS IF YOU WANTED TO CODE ABOVE TABLE IN THE JES2PARMS YOU    JDM1 *
* WOULD INCLUDE SOMETHING LIKE THE FOLLOWING IN JES2:            JDM1 *
*                                                                JDM1 *
*         DESTID   NAME=PRTR0001,DEST=U201                       JDM1 *
*         DESTID   NAME=PRTR0002,DEST=U202                       JDM1 *
*         DESTID   NAME=PRTR0003,DEST=U203                       JDM1 *
*         DESTID   NAME=PRTR0004,DEST=U204                       JDM1 *
*         DESTID   NAME=NEWYORK,DEST=R10                         JDM1 *
*         DESTID   NAME=DALLAS,DEST=R12                          JDM1 *
*                                                                JDM1 *
*  IF IT WERE MY CHOICE I WOULD ALWAYS DO THE ABOVE, BECAUSE     JDM1 *
*  USERS COULD COME SAY 'DALLAS' IN THEIR JCL TOO. OF COURSE     JDM1 *
*  IF YOUR OUT FOR MAGIC AND MIRRORS (JOB SECURITY), KEEP IT     JDM1 *
*  IMBEDDED IN THIS CODE AND YOU'LL BAFFLE'EM !!!!!              JDM1 *
*                                                                JDM1 *
* IF YOU HAVE ANOTHER VERSION OF PRINTOFF, LIKE MY VERSION OF    JDM1 *
* THE COMMAND THAT HAS THE GTE MODS IN THEM, OR THE ARAMCO       JDM1 *
* VERSION OF THE COMMAND THAT HAS 3800 SUPPORT, GO TO LABEL      JDM1 *
* 'PRINTOMN' AND CHANGE TO PRINTOFF NAME TO YOUR COMMAND. IF     JDM1 *
* YOUR VERSION IS CALLED PRINTOFF, YOU'RE IN HOG HEAVEN.         JDM1 *
*                                                                JDM1 *
*---------------------------------------------------------------------*
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
* EQUATE GENERAL PURPOSE REGISTERS, ESTABLISH ADDRESSABILITY, ETC.    *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 1
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 1
         USING *,R12               ESTABLISH CSECT     BASE REG.
         USING CPPL,R2             ESTABLISH CPPL      BASE REG.
         USING DSPRWORK,R3         ESTABLISH WORK AREA BASE REG.
         SPACE 1
         STM   R14,R12,12(R13)     SAVE R14 THRU R12.
         LR    R12,R15             LOAD CSECT BASE REGISTER.
         LR    R2,R1               LOAD CPPL  BASE REGISTER.
         SPACE 1
         LA    R0,DSPRWKSZ         LOAD R0 W/ SIZE OF WORK AREA.
         SPACE 1
         GETMAIN R,LV=(0)          ACQUIRE WORK AREA STORAGE.
         SPACE 1
         LR    R3,R1               LOAD WORK AREA BASE REG.
         SPACE 1
         LR    R0,R1               RECEIVING FIELD FOR MVCL.
         LA    R1,DSPRWKSZ         RECEIVING FIELD LENGTH FOR MVCL.
         SR    R14,R14             SENDING FIELD FOR MVCL.
         SR    R15,R15             SENDING FIELD LENGTH FOR MVCL.
         MVCL  R0,R14              INIT. COMMON TO BINARY ZEROS.
         SPACE 1
         ST    R13,DSPRRSV+4       BACK CHAIN.
         LA    R0,DSPRRSV          POINT R0 TO CURRENT SAVE.
         ST    R0,8(,R13)          FORWARD CHAIN.
         LR    R13,R0              POINT R13 TO CURRENT SAVE.
         EJECT
*---------------------------------------------------------------------*
* PARSE INPUT DSPRINT COMMAND BUFFER                                  *
*---------------------------------------------------------------------*
*                                                                     *
* EXPECTED COMMAND BUFFER CONTENTS ARE:                               *
*                                                                     *
* DSPRINT DSLIST PRTR-ID PARM1 PARM2 PARM3 ..... ETC.                 *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
* AFTER PARSING IS COMPLETE THE FOLLOWING FIELDS WILL BE FILLED:      *
*                                                                     *
* ICMDL    - COMMAND NAME LENGTH                                      *
* ICMD     - COMMAND NAME (8 BYTES MAXIMUM)                           *
*                                                                     *
* IDSLSTL  - DATASET LIST LENGTH                                      *
* IDSLST   - DATASET LIST (256 BYTES MAXIMUM)                         *
*                                                                     *
* IPRTRIDL - PRINTER-ID LENGTH                                        *
* IPRTRID  - PRINTER-ID   (8 BYTES MAXIMUM)                           *
*                                                                     *
* NOTE: ANY PARAMETERS FOLLOWING PRTR-ID WILL BE IGNORED.             *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 2
*---------------------------------------------------------------------*
* INITIALIZE PARSE PARAMETER AREAS                                    *
*---------------------------------------------------------------------*
         SPACE 1
         XC    ICMDL,ICMDL         INITIALIZE INPUT COMMAND LENGTH.
         XC    IDSLSTL,IDSLSTL     INITIALIZE INPUT DS-LIST LENGTH.
         XC    IPRTRIDL,IPRTRIDL   INITIALIZE INPUT PRTR-ID LENGTH.
         SPACE 1
         MVI   ICMD,C' '           INITIALIZE INPUT COMMAND.
         MVC   ICMD+1(L'ICMD-1),ICMD
         SPACE 1
         MVI   IDSLST,C' '         INITIALIZE INPUT DS-LIST.
         MVC   IDSLST+1(L'IDSLST-1),IDSLST
         SPACE 1
         MVI   IPRTRID,C' '        INITIALIZE INPUT PRTR-ID.
         MVC   IPRTRID+1(L'IPRTRID-1),IPRTRID
         EJECT
*---------------------------------------------------------------------*
* PARSE COMMAND NAME                                                  *
*---------------------------------------------------------------------*
         SPACE 1
PRSICMD  EQU   *
         L     R15,CPPLCBUF        LOAD R15 W/ ADDR OF INPUT CMD BUFFER
         SPACE 1
         LH    R1,2(,R15)          LOAD R1 W/ INPUT CMD NAME LENGTH.
         LA    R0,8                LOAD R0 W/ MAX LENGTH ALLOWED (8).
         CR    R1,R0               COMPARE LENGTH TO MAX ALLOWED.
         BNH   *+6                 IF NOT GT MAX, BRANCH AROUND.
         LR    R1,R0               LOAD R1 W/ MAX CMD NAME LENGTH.
         STH   R1,ICMDL            STORE INPUT CMD NAME LENGTH.
         BCTR  R1,0                DECREMENT R1 FOR EXECUTE.
         EX    R1,MOVEICMD         MVC  ICMD(0),4(R15).
         SPACE 1
         LH    R0,0(,R15)          LOAD R0 W/ INPUT CMD BUFFER LENGTH.
         LH    R1,2(,R15)          LOAD R1 W/ INPUT CMD NAME LENGTH.
         SR    R0,R1               COMPUTE LENGTH OF PARAMETERS.
         SH    R0,=H'4'            DECREMENT FOR 4-BYTE CMD HEADER.
         BZ    CHKIBUF             IF NO BYTES LEFT, WE'RE DONE.
         SPACE 2
*---------------------------------------------------------------------*
* PARSE DATASET LIST                                                  *
*---------------------------------------------------------------------*
         SPACE 1
         LA    R1,4(R1,R15)        LOAD R1 W/ ADDR INPUT DS-LIST.
         LA    R14,IDSLST          LOAD R14 W/ ADDR OF OUTPUT DS-LIST.
         SR    R15,R15             CLEAR R15 (DS-LIST LENGTH COUNTER).
         SPACE 1
PRSIDSL  EQU   *
         CLI   0(R1),C' '          DID WE ENCOUNTER A SPACE.
         BE    PRSIDSLX            YES, GO SAVE DS-LIST LENGTH.
         SPACE 1
         MVC   0(1,R14),0(R1)      MOVE INPUT TO OUTPUT.
         LA    R1,1(,R1)           BUMP INPUT  POINTER.
         LA    R14,1(,R14)         BUMP OUTPUT POINTER.
         LA    R15,1(,R15)         INCREMENT DS-LIST LENGTH REGISTER.
         BCT   R0,PRSIDSL          CONTINUE.
         SPACE 1
         STH   R15,IDSLSTL         STORE DS-LIST LENGTH.
         B     CHKIBUF             INPUT EXHAUSTED, WE'RE DONE.
         SPACE 1
PRSIDSLX EQU   *
         STH   R15,IDSLSTL         STORE DS-LIST LENGTH.
         SPACE 1
         CLI   0(R1),C' '          DROP
         BNE   PRSIPRT              ANY
         LA    R1,1(,R1)             LEADING
         BCT   R0,*-12                SPACES.
         SPACE 1
         B     CHKIBUF             INPUT EXHAUSTED, WE'RE DONE.
         EJECT
*---------------------------------------------------------------------*
* PARSE PRINTER ID                                                    *
*---------------------------------------------------------------------*
         SPACE 1
PRSIPRT  EQU   *
         LA    R14,IPRTRID         LOAD R14 W/ ADDR OF OUTPUT PRTR-ID.
         SR    R15,R15             CLEAR R15 (PRTR-ID LENGTH COUNTER).
         SPACE 1
PRSIPRTL EQU   *
         CLI   0(R1),C' '          DID WE ENCOUNTER A SPACE.
         BE    PRSIPRTX            END OF INPUT PRTR-ID.
         SPACE 1
         MVC   0(1,R14),0(R1)      MOVE INPUT TO OUTPUT.
         LA    R1,1(,R1)           BUMP INPUT  POINTER.
         LA    R14,1(,R14)         BUMP OUTPUT POINTER.
         LA    R15,1(,R15)         INCREMENT DS-LIST LENGTH REGISTER.
         SPACE 1
         CH    R15,=H'8'           COMPARE PRTR-ID LEN TO MAX ALLOWED.
         BNL   PRSIPRTX            IF NOT LOW, WE'RE DONE.
         SPACE 1
         BCT   R0,PRSIPRTL         CONTINUE.
         SPACE 1
PRSIPRTX EQU   *
         STH   R15,IPRTRIDL        STORE PRTR-ID LENGTH.
         SPACE 2
*---------------------------------------------------------------------*
* VALIDATE PARSED PARAMETERS                                          *
*---------------------------------------------------------------------*
         SPACE 1
CHKIBUF  EQU   *
         OC    ICMD(L'ICMD),BLKS   FORCE COMMAND PARAMS TO UPPER CASE.
         OC    IDSLST(L'IDSLST),BLKS
         OC    IPRTRID(L'IPRTRID),BLKS
         SPACE 1
         LA    R0,1                LOAD R0 IN CASE WE NEED TO FORCE LEN
         SPACE 1
         OC    ICMDL,ICMDL         IS COMMAND NAME LENGTH ZERO.
         BNZ   *+12                NO, BRANCH AROUND.
         STH   R0,ICMDL            FORCE LENGTH TO 1.
         MVI   ICMD,C'?'           FORCE TEXT TO ?
         SPACE 1
         OC    IDSLSTL,IDSLSTL     IS DATASET LIST LENGTH ZERO.
         BNZ   *+12                NO, BRANCH AROUND.
         STH   R0,IDSLSTL          FORCE LENGTH TO 1.
         MVI   IDSLST,C'?'         FORCE TEXT TO ?
         SPACE 1
         OC    IPRTRIDL,IPRTRIDL   IS PRINTER-ID LENGTH ZERO.
         BNZ   *+12                NO, BRANCH AROUND.
         STH   R0,IPRTRIDL         FORCE LENGTH TO 1.
         MVI   IPRTRID,C'?'        FORCE TEXT TO ?
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
* DETERMINE IF PRINTER-ID IS IN PRINTER-ID / DEST TABLE               *
*                                                                     *
* (IF SO, CHANGE PRINTER-ID ACCORDINGLY)                              *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 1
         LA    R0,PID$NUM          LOAD R0 W/ NUMBER OF TABLE ENTRIES.
         LTR   R0,R0               ARE THERE ANY ENTRIES.
         BZ    BLDCPPL             NO, NO NEED TO DO TABLE SEARCH.
         SPACE 1
CKNXTPRT EQU   *
         LA    R1,PID$DEST         LOAD R1 W/ ADDR OF 1ST TABLE ENTRY.
         CLC   0(8,R1),IPRTRID     DO WE HAVE A MATCH ON PRTR-ID.
         BE    CHGDEST             YES, GO CHANGE PRINTER-ID TO DEST.
         LA    R1,16(,R1)          BUMP TO NEXT TABLE ENTRY.
         BCT   R0,CKNXTPRT         GO CHECK NEXT TABLE SLOT.
         B     BLDCPPL             NO MATCH IN TABLE, BRANCH.
         SPACE 1
CHGDEST  EQU   *
         CLC   8(8,R1),BLKS        IS DEST IN TABLE BLANKS.
         BE    BLDCPPL             YES, DON'T CHG PRTR-ID TO DEST.
         SPACE 1
         MVC   IPRTRID,8(R1)       MOVE DEST TO PRINTER-ID.
         LA    R0,8                LOAD BCT REGISTER.
         LA    R1,IPRTRID+7        LOAD R1 W/ ADDR OF END OF DEST.
         SPACE 1
CALCLEN  EQU   *
         CLI   0(R1),C' '          IS CHARACTER A BLANK.
         BNE   *+10                YES, GO SAVE DEST LENGTH.
         BCTR  R1,0                DECREMENT DEST POINTER.
         BCT   R0,CALCLEN          CONTINUE.
         SPACE 1
         STH   R0,IPRTRIDL         STORE LENGTH OF DEST FIELD.
         SPACE 2
*---------------------------------------------------------------------*
* BUILD OUR CPPL AND COMMAND BUFFER                                   *
*---------------------------------------------------------------------*
         SPACE 1
BLDCPPL  EQU   *
         MVC   DCPPL(DCPPLLN),CPPL MOVE CPPL TO OUR WORK AREA.
         LA    R0,CMDBUF           LOAD R0 W/ ADDR OF OUR CMD BUFFER.
         ST    R0,DCPPLBUF         STORE IT IN OUR CPPL.
         SPACE 1
         XC    CMDBUFL,CMDBUFL     INIT. COMMAND BUFFER LENGTH TO ZERO
         XC    CMDCMDL,CMDCMDL     INIT. COMMAND NAME   LENGTH TO ZERO
         SPACE 1
         MVI   CMDTEXT,C' '        INIT. COMMAND TEXT TO SPACES.
         MVC   CMDTEXT+1(255),CMDTEXT
         MVC   CMDTEXT+256(L'CMDTEXT-256),CMDTEXT+255
         SPACE 1
         LA    R0,9                LENGTH OF COMMAND NAME + SPACE.
         STH   R0,CMDCMDL          STORE COMMAND LENGTH.
         MVC   CMDTEXT(9),=CL9'PRINTOFF '
         SPACE 1
         LA    R15,CMDTEXT+9       LOAD R15 W/ NEXT AVAILABLE BYTE.
         SPACE 1
         LA    R14,IDSLST          LOAD R14 W/ ADDR OF DATASET LIST.
         LH    R1,IDSLSTL          LOAD R1 W/ DATASET LIST LENGTH.
         BCTR  R1,0                DECREMENT FOR EXECUTE.
         EX    R1,MOVETBUF         MVC 0(0,R15),0(R14).
         LA    R15,2(R1,R15)       BUMP TO NEXT AVAILABLE BYTE.
         SPACE 1
         LA    R14,CLS             LOAD R14 W/ ADDR OF CLASS KWD.
         LH    R1,CLSL             LOAD R1 W/ CLASS KWD LENGTH.
         BCTR  R1,0                DECREMENT FOR EXECUTE.
         EX    R1,MOVETBUF         MVC 0(0,R15),0(R14).
         LA    R15,2(R1,R15)       BUMP TO NEXT AVAILABLE BYTE.
         SPACE 1
         LA    R14,CPY             LOAD R14 W/ ADDR OF COPIES KWD.
         LH    R1,CPYL             LOAD R1 W/ COPIES KWD LENGTH.
         BCTR  R1,0                DECREMENT FOR EXECUTE.
         EX    R1,MOVETBUF         MVC 0(0,R15),0(R14).
         LA    R15,2(R1,R15)       BUMP TO NEXT AVAILABLE BYTE.
         SPACE 1
         LA    R14,DST             LOAD R14 W/ ADDR OF DEST KWD.
         LH    R1,DSTL             LOAD R1 W/ DEST KWD LENGTH.
         BCTR  R1,0                DECREMENT FOR EXECUTE.
         EX    R1,MOVETBUF         MVC 0(0,R15),0(R14).
         LA    R15,1(R1,R15)       BUMP PAST DEST KWD.
         SPACE 1
         LA    R14,IPRTRID         LOAD R14 W/ ADDR OF PRTR-ID.
         LH    R1,IPRTRIDL         LOAD R1 W/ PRTR-ID LENGTH.
         BCTR  R1,0                DECREMENT FOR EXECUTE.
         EX    R1,MOVETBUF         MVC 0(0,R15),0(R14).
         LA    R15,1(R1,R15)       BUMP PAST PRTR-ID.
         SPACE 1
         MVI   0(R15),C')'         MOVE IN CLOSING ')'.
         LA    R15,1(,R15)         BUMP PAST CLOSING ')'.
         SPACE 1
         LA    R0,CMDBUF           LOAD R0 W/ START OF CMD BUFFER.
         SR    R15,R0              COMPUTE LENGTH OF CMD BUFFER.
         STH   R15,CMDBUFL         STORE BUFFER LENGTH.
         EJECT
*---------------------------------------------------------------------*
* TPUT GENERATED PRINTOFF COMMAND THEN LINK TO PRINTOFF COMMAND       *
*---------------------------------------------------------------------*
         SPACE 1
         LA    R1,CMDTEXT          LOAD R1 W/ ADDR OF CMD TEXT.
         LH    R0,CMDBUFL          LOAD R0 W/ CMD BUFFER LENGTH.
         SH    R0,=H'4'            DECREMENT FOR BUFFER HEADER INFO.
         SPACE 1
         TPUT  (1),(0)             TPUT GENERATED COMMAND.
         SPACE 1
         LA    R1,DCPPL            LOAD R1 W/ ADDR OF OUR CPPL.
         SPACE 1
         LINK  EPLOC=PRINTOMN      LINK TO PRINTOFF COMMAND PROCESSOR.
         SPACE 2
*---------------------------------------------------------------------*
* RETURN                                                              *
*---------------------------------------------------------------------*
         SPACE 1
RETRNRSR EQU   *
         L     R13,DSPRRSV+4       RESTORE R13.
         SPACE 1
         LA    R0,DSPRWKSZ         LOAD R0 W/ WORK AREA SIZE.
         LR    R1,R3               LOAD R1 W/ WORK AREA ADDR.
         SPACE 1
         FREEMAIN R,LV=(0),A=(1)   FREEMAIN WORK AREA.
         SPACE 1
         LM    R14,R12,12(R13)     RESTORE R14 THRU R12.
         SR    R15,R15             CLEAR RETURN CODE.
         BR    R14                 -RETURN.
         EJECT
*---------------------------------------------------------------------*
* CONSTANTS, LITERAL POOL, ETC.                                       *
*---------------------------------------------------------------------*
         SPACE 1
         LTORG ,
         SPACE 1
PRINTOMN DC    CL8'PRINTOFF'       PRINTOFF COMMAND MODULE NAME.
BLKS     DC    CL256' '            BLANKS.
         SPACE 1
MOVEICMD MVC   ICMD(0),4(R15)      *** EXECUTED ***
MOVETBUF MVC   0(0,R15),0(R14)     *** EXECUTED ***
         SPACE 1
CLSL     DC    0H'0',AL2(L'CLS)
CLS      DC    C'CLASS(A)'
         SPACE 1
CPYL     DC    0H'0',AL2(L'CPY)
CPY      DC    C'COPIES(1)'
         SPACE 1
DSTL     DC    0H'0',AL2(L'DST)
DST      DC    C'DEST('            <=== CHANGE TO 'WTR(' IF DESIRED.
         EJECT
*---------------------------------------------------------------------*
* PRINTER-ID / DESTINATION TABLE                                      *
*---------------------------------------------------------------------*
*                                                                     *
* IF A MATCH IS FOUND ON PRINTER-ID IN THE LEFT HAND SIDE OF THE      *
* FOLLOWING TABLE, THE GENERATED PRINTOFF COMMAND WILL USE THE        *
* CORRESPONDING DESTINATION FROM THE RIGHT HAND SIDE OF THE TABLE.    *
* IF NO MATCH IS FOUND, THE PRINTER-ID WILL BE USED FOR THE DEST.     *
*                                                                     *
*                                                                     *
* FOR EXAMPLE, ASSUMING THE SUPPLIED PID$DEST TABLE BELOW, IF THE     *
* DSPRINT COMMAND 'DSPRINT DSET01 PRTR0001' WERE ISSUED, THE          *
* FOLLOWING PRINTOFF COMMAND WOULD BE GENERATED:                      *
*                                                                     *
* PRINTOFF DSET01 CLASS(A) COPIES(1) DEST(U201)                       *
*                                                                     *
* CONVERSELY, IF THE DSPRINT COMMAND 'DSPRINT DSET01 PRTR9999' WERE   *
* ISSUED, THE FOLLOWING PRINTOFF COMMAND WOULD BE GENERATED:          *
*                                                                     *
* PRINTOFF DSET01 CLASS(A) COPIES(1) DEST(PRTR9999)                   *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 1
PID$DEST DC    0F'0'
         DC    CL8'PRTR0001',CL8'U201    '
         DC    CL8'PRTR0002',CL8'U202    '
         DC    CL8'PRTR0003',CL8'U203    '
         DC    CL8'PRTR0004',CL8'U204    '
         DC    CL8'PRTR0005',CL8'U205    '
         SPACE 1
PID$NUM  EQU   (*-PID$DEST)/16      NUMBER OF TABLE ENTRIES.
         EJECT
*---------------------------------------------------------------------*
* WORK AREA - R3 IS BASE                                              *
*---------------------------------------------------------------------*
         SPACE 1
DSPRWORK DSECT
         SPACE 1
DSPRRSV  DC    18A(0)              REGISTER SAVE AREA.
         SPACE 1
DCPPL    DC    0F'0'               OUR OWN CPPL.
DCPPLBUF DC    A(0)                ADDRESS OF COMMAND BUFFER (OURS).
DCPPLUPT DC    A(0)                ADDRESS OF UPT.
DCPPLPSC DC    A(0)                ADDRESS OF PSCB.
DCPPLECT DC    A(0)                ADDRESS OF ECT.
DCPPLLN  EQU   *-DCPPL             LENGTH OF CPPL.
         SPACE 1
*---------------------------------------------------------------------*
* PARSED INPUT BUFFER                                                 *
*---------------------------------------------------------------------*
         SPACE 1
         DC    0F'0'               FULL WORD ALIGN COMMAND BUFFER.
ICMDL    DC    H'0'                COMMAND NAME LENGTH.
ICMD     DC    CL8' '              COMMAND NAME.
IDSLSTL  DC    H'0'                DATASET LIST LENGTH.
IDSLST   DC    CL256' '            DATASET LIST.
IPRTRIDL DC    H'0'                PRINTER-ID   LENGTH.
IPRTRID  DC    CL8' '              PRINTER-ID.
         SPACE 1
*---------------------------------------------------------------------*
* COMMAND BUFFER THAT WE WILL PASS TO PRINTOFF COMMAND                *
*---------------------------------------------------------------------*
         SPACE 1
         DC    0F'0'               FULL WORD ALIGN COMMAND BUFFER.
CMDBUF   DS    0CL512              COMMAND BUFFER
CMDBUFL  DS    H                   COMMAND BUFFER LENGTH.
CMDCMDL  DS    H                   COMMAND NAME LENGTH + 1.
CMDTEXT  DS    CL508               COMMAND TEXT.
         SPACE 1
DSPRWKSZ EQU   *-DSPRWORK          WORK AREA SIZE.
         EJECT
*---------------------------------------------------------------------*
* COMMAND PARAMETER LIST - R2 IS BASE                                 *
*---------------------------------------------------------------------*
         SPACE 1
CPPL     IKJCPPL
         SPACE 1
         END   ,
