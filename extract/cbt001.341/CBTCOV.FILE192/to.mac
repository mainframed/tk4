         TITLE '   T O        '
***********************************************************************
*                                                                     *
*        'TO' TSO COMMAND                                             *
*                                                                     *
***********************************************************************
*
*        WRITTEN BY. BILL GODFREY,  PLANNING RESEARCH CORPORATION.
*        INSTALLATION. PRC COMPUTER CENTER INC, MCLEAN VA.
*        DATE WRITTEN. MARCH 5 1976
*        DATE UPDATED. DECEMBER 11 1980.
*        ATTRIBUTES. RE-ENTRANT.
*        DESCRIPTION.
*         THIS TSO COMMAND SENDS A MESSAGE TO A TSO USER.
*         IT DIFFERS FROM THE 'SEND' COMMAND IN THAT THE
*         MESSAGE IS NOT IN QUOTES, SO YOU DON'T HAVE TO
*         THINK ABOUT QUOTES WITHIN YOUR MESSAGE.
*
*         THE SYNTAX IS:  TO  USERID  MESSAGE-TEXT
*
*         EXAMPLES:  TO JONES WHERE'S THAT REPORT
*                    TO (JONES SMITH) OK, WE'LL TEST IT.
*
*         THIS COMMAND WILL NOT PUT A MESSAGE IN A USER'S
*         BROADCAST MAIL.
*
*         11DEC80 - CHANGE SS01 TO TSSO.
*         11DEC80 - 3-BYTE USERID NO LONGER ASSUMED IN MSG05, MSG07.
*         16OCT86 - CODE DID NOT ALLOW USERID'S WITH $, #, OR @.
*                            JIM MARSHALL                        JDM1
*
***********************************************************************
         SPACE
TO       CSECT                                                   JDM1
         SAVE  (14,12),,TO_&SYSDATE_&SYSTIME                     JDM1
         LR    R12,15
         USING TO,R12                                            JDM1
         LR    R2,R1
         GETMAIN R,LV=@DATAL
         ST    13,4(,1)
         ST    1,8(,13)
         LR    13,1
         USING @DATA,13
         SPACE
         USING CPPL,R2
         XC    LINKAREA,LINKAREA
         SPACE
************************************************************
*                                                          *
*        SET UP IOPL FOR PUTLINE                           *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYIOPL
         USING IOPL,R15
         MVC   IOPLUPT(4),CPPLUPT
         MVC   IOPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,IOPLECB
         XC    MYECB,MYECB
         LA    R0,MYPTPB
         ST    R0,IOPLIOPB
         DROP  R15
         SPACE
************************************************************
*                                                          *
*        SET UP PPL FOR PARSE                              *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYPPL
         USING PPL,R15
         MVC   PPLUPT(4),CPPLUPT
         MVC   PPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,PPLECB
         XC    MYECB,MYECB
         L     R0,=A(TOPCL)
         ST    R0,PPLPCL
         LA    R0,MYANS
         ST    R0,PPLANS
         MVC   PPLCBUF(4),CPPLCBUF
         LA    R0,MYUWA
         ST    R0,PPLUWA
         DROP  R15
         SPACE 1
************************************************************
*                                                          *
*        CALL THE PARSE SERVICE ROUTINE                    *
*                                                          *
************************************************************
         SPACE 1
         LR    R1,R15              POINT TO PPL
         L     R15,16              CVTPTR
         TM    X'020C'(R15),X'80'  IF HI ORDER BIT NOT ON
         BNO   PARSELNK               THEN DO LINK, NOT CALL
         L     R15,X'020C'(,R15)   CVTPARS
         BALR  R14,R15             CALL IKJPARS
         B     PARSEEXT            SKIP AROUND LINK
PARSELNK EQU   *
         LINK  EP=IKJPARS,SF=(E,LINKAREA)
PARSEEXT EQU   *
         SPACE 1
************************************************************
*                                                          *
*        PARSE PDL IS NOW FILLED IN                        *
*                                                          *
************************************************************
         SPACE 1
         LTR   R15,R15             PARSE SUCCESSFUL?
         BNZ   EXIT                NO - BRANCH
         L     R3,MYANS
         USING IKJPARMD,R3
         LA    R4,USERID
         LA    R5,SPACE
         LA    R6,STRING
         TM    STRING+6,X'80'      TEXT SPECIFIED?
         BZ    ERRNOTXT            NO - BRANCH
         MVI   MYTEXT-1,C' '
         MVC   MYTEXT,MYTEXT-1     BLANK THE TEXT
         LH    R1,STRING+4         GET LENGTH OF TEXT
         LTR   R1,R1               LENGTH ZERO?
         BNP   ERRNOTXT            YES - BRANCH
         BCTR  R1,0                LENGTH MINUS 1
         L     R14,STRING          GET ADDRESS OF TEXT
         B     *+10
         MVC   MYTEXT(0),0(R14)    MOVE TEXT
         EX    R1,*-6              EXECUTE THE ABOVE MVC
         LA    R14,MYTEXT+1(R1)    POINT PAST LAST BYTE OF TEXT
         MVC   0(2,R14),=X'4040'
         LA    R7,1+2+8(,R1)       TOTAL LENGTH IN R7
         LA    R6,MYTEXT
         L     R1,16               CVT
         L     R1,0(,R1)           CVTTCB
         L     R1,4(,R1)           CURRENT TCB
         L     R1,12(,R1)          TCBTIO
         MVC   2(8,R14),0(R1)      APPEND JOBNAME/USERID
         SPACE
*              IF THIS IS ISSUED FROM A BATCH JOB, THE LENGTH
*              OF THE TEXT INCLUDES SOME TRAILING BLANKS, SO
*              BACK UP TO THE LAST NONBLANK TO APPEND THE JOBNAME.
         SPACE
         CLC   0(8,R1),=CL8'TSSO'  IS THIS &TO FROM CONSOLE?
         BNE   NOTOPER
         MVC   2(8,R14),=CL8' '    YES, ERASE THAT APPENDED NAME
         LA    R0,12               BACK UP AS MANY AS 12 BYTES
TRAIL    BCTR  R14,0               BACK UP 1 BYTE
         CLI   0(R14),C' '         IS IT A BLANK
         BNE   TRAILX              NO, GO APPEND ID
         BCT   R0,TRAIL            KEEP BACKING UP
TRAILX   LA    R14,1(,R14)         POINT PAST NONBLANK
         MVC   2(8,R14),=CL8'OPER' APPEND OPER
NOTOPER  EQU   *
USERLOOP TM    6(R4),X'80'         USERID SPECIFIED?
         BZ    ERRNOUSR            NO - BRANCH
         LH    R1,4(,R4)           GET LENGTH OF USERID
         LTR   R1,R1               LENGTH ZERO?
         BNP   ERRNOUSR            YES - BRANCH
         MVC   MYUSER,=CL8' '      BLANK USERID
         BCTR  R1,0                LENGTH MINUS 1
         L     R14,0(R4)           GET ADDRESS OF USERID
         B     *+10
         MVC   MYUSER(0),0(R14)    MOVE TEXT
         EX    R1,*-6              EXECUTE THE ABOVE MVC
         SPACE
ASID     L     R1,16               CVTPTR
         L     R1,X'22C'(,R1)      CVTASVT
         L     R0,X'204'(,R1)      ASVTMAXU
         LA    R1,X'210'(,R1)      FIRST ASVTENTY
ASIDLOOP L     R15,0(,R1)          GET AN ASCB ADDRESS
         LTR   R15,R15             IS THIS AN ACTIVE ADDRESS SPACE
         BM    ASIDNEXT            NO, BRANCH
         L     R14,X'3C'(,R15)     GET ASCBTSB
         LTR   R14,R14             IS THIS A TSO SESSION?
         BZ    ASIDNEXT            NO, BRANCH
         L     R14,X'B0'(,R15)     GET JOBNAME (USERID)
         CLC   MYUSER,0(R14)       DOES USERID MATCH
         BE    ASIDX               YES, BRANCH
ASIDNEXT LA    R1,4(,R1)           POINT TO NEXT ASVTENTY ENTRY
         BCT   R0,ASIDLOOP         BRANCH UNTIL ASVTMAXU EXCEEDED
         B     TPUT20
ASIDX    LH    R15,X'24'(,R15)     GET ASID FROM ASCBASID
         LR    R8,R15              COPY ASID
         SPACE
         TPUT  (R6),(R7),ASID=(R8)       LOWP ?
         SPACE
         LTR   R15,R15
         BZ    NEXTUSER
         B     *+4(R15)
         B     NEXTUSER
         B     TPUT04
         B     TPUT08
         B     TPUT12
         B     TPUT16
         B     TPUT20
         SPACE
TPUT04   MVC   MYMSG(MSG03L),MSG03
         MVC   MYMSG+(MSG03A-MSG03)(7),MYUSER
         LA    R1,MYMSG
         LA    R0,MSG03L
         BAL   R14,PUTLINE
         B     NEXTUSER
         SPACE
TPUT08   MVC   MYMSG(MSG04L),MSG04
         MVC   MYMSG+(MSG04A-MSG04)(7),MYUSER
         LA    R1,MYMSG
         LA    R0,MSG04L
         BAL   R14,PUTLINE
         B     NEXTUSER
         SPACE
TPUT12   MVC   MYMSG(MSG05L),MSG05
         MVC   MYMSG+(MSG05A-MSG05)(7),MYUSER
         LA    R1,MYMSG
         LA    R0,MSG05L
         BAL   R14,PUTLINE
         B     NEXTUSER
         SPACE
TPUT16   MVC   MYMSG(MSG06L),MSG06
         MVC   MYMSG+(MSG06A-MSG06)(7),MYUSER
         LA    R1,MYMSG
         LA    R0,MSG06L
         BAL   R14,PUTLINE
         B     NEXTUSER
         SPACE
TPUT20   MVC   MYMSG(MSG07L),MSG07
         MVC   MYMSG+(MSG07A-MSG07)(7),MYUSER
         LA    R1,MYMSG
         LA    R0,MSG07L
         BAL   R14,PUTLINE
         B     NEXTUSER
         SPACE
NEXTUSER CLI   8(R4),X'FF'
         BE    EXIT0
         L     R4,8(,R4)
         B     USERLOOP
ERRNOTXT LA    R1,MSG01
         LA    R0,L'MSG01
         BAL   R14,PUTLINE
         B     EXIT
         SPACE
ERRNOUSR LA    R1,MSG02
         LA    R0,L'MSG02
         BAL   R14,PUTLINE
         B     EXIT
         SPACE
EXIT0    SR    15,15
EXIT     LR    R2,R15
         SPACE
         IKJRLSA MYANS
         SPACE
         LR    R15,R2
         LR    1,13
         L     13,4(,13)
         ST    15,16(,13)
         FREEMAIN R,A=(1),LV=@DATAL
         LM    14,12,12(13)
         BR    14
         SPACE
************************************************************
*                                                          *
*        PUTLINE ROUTINE                                   *
*                                                          *
************************************************************
         SPACE
PUTLINE  STM   R14,R1,PUTLINS
         XC    MYOLD(8),MYOLD
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPB
         LA    R14,1               NO. OF MESSAGE SEGMENTS
         ST    R14,MYOLD
         LA    R14,MYSEG1          POINT TO 1ST SEGMENT
         ST    R14,MYOLD+4
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         LA    R15,MYSEG1+4
         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?
         BE    *+16                YES - BRANCH
         LA    R14,1(,R14)         ADD 1 TO LENGTH
         MVI   0(R15),C' '         INSERT LEADING BLANK
         LA    R15,1(,R15)         BUMP POINTER
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN
         EX    R14,*-6
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),MF=(E,MYIOPL)
         SPACE
         LM    R14,R1,PUTLINS
         BR    R14
         SPACE
************************************************************
*                                                          *
*        CONSTANTS                                         *
*                                                          *
************************************************************
         SPACE
MODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
MSG01    DC    C'NO TEXT SPECIFIED'
MSG02    DC    C'NO USERID SPECIFIED'
MSG03    DC    C'MESSAGE NOT SENT TO '
MSG03A   DC    C'        - NO BUFFERS AVAILABLE.'
MSG03L   EQU   *-MSG03
MSG04    DC    C'MESSAGE NOT SENT TO '
MSG04A   DC    C'        - ATTN INTERRUPT.'
MSG04L   EQU   *-MSG04
MSG05    DC    C'MESSAGE NOT SENT TO '
MSG05A   DC    C'        - PROFILE NOINTERCOM'
MSG05L   EQU   *-MSG05
MSG06    DC    C'MESSAGE NOT SENT TO '
MSG06A   DC    C'        - LOGIC ERROR IN COMMAND.'
MSG06L   EQU   *-MSG06
MSG07    DC    C'MESSAGE NOT SENT TO '
MSG07A   DC    C'        - NOT LOGGED ON'
MSG07L   EQU   *-MSG07
         LTORG
PARSEPCL DC    0D'0'
         SPACE
************************************************************
*                                                          *
*        PARSE PCL                                         *
*                                                          *
************************************************************
         SPACE
         PRINT NOGEN
TOPCL    IKJPARM
USERID   IKJIDENT 'USERID',LIST,                                       X
               FIRST=ANY,OTHER=ALPHANUM,MAXLNTH=7,                     X
               VALIDCK=USEVC,                                          X
               PROMPT='USERID TO WHOM MESSAGE IS TO BE SENT'
SPACE    IKJPOSIT SPACE
STRING   IKJPOSIT STRING,ASIS,PROMPT='TEXT OF MESSAGE TO BE SENT'
         IKJENDP
         PRINT GEN
         DC    0H'0'
*
*        THIS VALIDITY CHECK ROUTINE CHECKS THE FIRST
*        CHARACTER OF EACH USERID SPECIFIED. THE IKJIDENT MACRO
*        SPECIFIES FIRST=ANY SO THAT PARSE IS FORCED TO TREAT
*        THE FIRST OPERAND ENTERED AS THE USERID. THEN THIS
*        ROUTINE REJECTS IT AS IF IT WERE FIRST=ALPHA. SPECIFYING
*        FIRST=ALPHA AND ENTERING SOMETHING LIKE    TO 'XXX'
*        WOULD CAUSE PARSE TO TAKE XXX' AS THE STRING AND PROMPT
*        FOR USERID, WHICH IS NOT DESIRED HERE.
*
         USING *,R10
USEVC    STM   14,12,12(13)
         LR    R10,R15
         L     R2,0(,R1)           POINT R2 TO PDE
         SR    15,15
         L     R1,0(,R2)           POINT TO USERID
         CLI   0(R1),C'$'          SPECIAL CHAR??                JDM1
         BE    USEVCR              IS OK                         JDM1
         CLI   0(R1),C'#'          SPECIAL CHAR??                JDM1
         BE    USEVCR              IS OK                         JDM1
         CLI   0(R1),C'@'          SPECIAL CHAR??                JDM1
         BE    USEVCR              IS OK                         JDM1
         CLI   0(R1),C'A'          LESS THAN 'A'?
         BL    USEVCR4
         CLI   0(R1),C'Z'          GREATER THAN Z?
         BH    USEVCR4
USEVCR   L     14,12(,13)
         LM    0,12,20(13)
         BR    14
USEVCR4  LA    R15,4
         B     USEVCR
         DROP  R10
         SPACE
************************************************************
*                                                          *
*        DSECTS                                            *
*                                                          *
************************************************************
         SPACE
@DATA    DSECT
         DS    18F
LINKAREA DS    2F
MYPPL    DS    7F
MYANS    DS    F
MYUWA    DS    F
MYECB    DS    F                  USED BY PUTLINE ROUTINE
MYIOPL   DS    4F                 USED BY PUTLINE ROUTINE
MYPTPB   DS    3F                 USED BY PUTLINE ROUTINE
MYOLD    DS    2F                 USED BY PUTLINE ROUTINE
MYSEG1   DS    2H,CL100           USED BY PUTLINE ROUTINE
PUTLINS  DS    4F                 USED BY PUTLINE ROUTINE
MYUSER   DS    D
MYMSG    DS    CL80
MYTEXTB  DS    C                   MYTEXT MINUS 1
MYTEXT   DS    256C
@DATAL   EQU   *-@DATA
         SPACE
         IKJCPPL
         SPACE
         IKJIOPL
         SPACE 3
         IKJPPL
         SPACE 3
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
