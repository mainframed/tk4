         TITLE '   P P X I T   '
***********************************************************************
*                                                                     *
*        'PPXIT'                                                      *
*                                                                     *
***********************************************************************
         SPACE
*        WRITTEN BY. BILL GODFREY, PRC (PLANNING RESEARCH CORPORATION).
*        INSTALLATION. PRC COMPUTER CENTER, MCLEAN VA.
*        DATE WRITTEN. JANUARY 10 1978.
*        DATE UPDATED. FEBRUARY 16 1982.
*        ATTRIBUTES. RE-ENTRANT.
*        DESCRIPTION.
*         THIS COMMAND TESTS THE LOGON PRE-PROMPT EXIT.
*
*         BEFORE TESTING BEGINS, THE EXIT MUST BE LINK-EDITED AS
*         MEMBER NAME 'IKJEFLD' IN ANY LOAD LIBRARY, AND THE LOAD
*         LIBRARY MUST BE ALLOCATED TO DDNAME 'PPXLIB'.
*
*         ENTER THE PPXIT COMMAND AS IF IT WERE THE 'LOGON'
*         COMMAND - SPECIFY PPXIT INSTEAD OF THE WORD LOGON.
*         NO OPERANDS ARE REQUIRED.  IF ANY OPERANDS ARE PRESENT,
*         THEY ARE PASSED TO THE PRE-PROMPT EXIT BEING TESTED
*         AS IF THEY WERE OPERANDS OF THE 'LOGON' COMMAND.
*
*         FOR EXAMPLE,
*          ALLOC FI(PPXLIB) DA('USER.LOAD') SHR
*          PPXIT ROCKY
*         THE ABOVE WOULD INVOKE THE EXIT WITH 'LOGON ROCKY'
*         IN THE INPUT BUFFER.
*
*         IF THE EXIT ENDS NORMALLY, MESSAGES WILL BE ISSUED
*         IF ANY OF THE VARIOUS SWITCHES HAVE BEEN SET ON,
*         AND IF ANY OF THE VARIOUS FIELDS HAVE BEEN FILLED IN.
*         THE LOGON BUFFER WILL BE DISPLAYED.
*         IF JCL HAS BEEN BUILT, IT WILL BE DISPLAYED.
*
*         IF THE EXIT ABENDS, YOU CAN GO INTO TEST MODE AFTER THE
*         ABEND BY ENTERING 'TEST' WITH NO OPERANDS. OR YOU CAN
*         ENTER A NULL LINE IMMEDIATELY AFTER THE ABEND MESSAGE
*         AND GET A DUMP (IF SYSUDUMP WAS ALLOCATED).
*
*         IF YOU WISH TO USE THE 'TEST' COMMAND FOR DE-BUGGING
*         A PRE-PROMPT EXIT, THE FOLLOWING METHOD CAN BE USED:
*
*         (ASSUMING THE PPXIT COMMAND IS IN 'SYS2.CMDLIB' AND
*         THE EXIT IS IN 'USER.LOAD' AND THE EXIT CSECT NAME
*         AND ENTRY POINT IS IKJEFLD)
*
*           TEST 'SYS2.CMDLIB(PPXIT)' CP
*           PPXIT USERID .....OPERANDS.....
*           AT IKJEFLD.IKJEFLD.+0 DEFER
*           GO
*
*         THE ABOVE COMMANDS WILL SET A TEST BREAKPOINT AT THE
*         ENTRY POINT TO THE EXIT.
*
*         AFTER THAT BREAKPOINT HAS BEEN HIT, YOU CAN SIMPLIFY
*         THE SETTING OF OTHER BREAKPOINTS BY ENTERING
*           QUALIFY IKJEFLD.IKJEFLD.+0
*         NOW YOU CAN SPECIFY BREAKPOINT ADDRESSES AS +NNN
*         INSTEAD OF IKJEFLD.IKJEFLD.+NNN
*
*         BEFORE THIS TURNS INTO A TUTORIAL OF THE TEST COMMAND
*         I WILL ASSUME YOU KNOW HOW TO USE THE OTHER SUBCOMMANDS
*         OF TEST.  END OF DISCUSSION ABOUT TEST.
*
*        LOG OF CHANGES.
*         18SEP79 - LAST CHANGE BEFORE 16FEB82.
*         16FEB82 - COMMENTS ADDED - NO INSTRUCTIONS CHANGED.
         SPACE
PPXIT    START
         USING *,R12
         B     @PROLOG-*(,15)
         DC    AL1(11),CL11'PPXIT '
         DC    CL16' &SYSDATE &SYSTIME '
@SIZE    DC    0F'0',AL1(1),AL3(@DATAL)
@PROLOG  STM   14,12,12(R13)
         LR    R12,R15
         LR    R2,R1
         USING CPPL,R2
         L     R0,@SIZE
         GETMAIN R,LV=(0)
         LR    R9,R1
         USING @DATA,R9
         SPACE
         LR    R0,R1               AREA TO BE CLEARED
         L     R1,@SIZE            LENGTH TO BE CLEARED
         SLR   R15,R15
         MVCL  R0,R14              CLEAR IT
         SPACE
         ST    R13,4(,R9)
         ST    R9,8(,R13)
         LR    R13,R9
         SPACE 1
         MVI   INBUF,C' '
         MVC   INBUF+1(L'INBUF-1),INBUF
         L     R8,CPPLCBUF
         LH    R1,0(,R8)
         SH    R1,=H'4'
         STH   R1,INBUFL
         BCTR  R1,0
         B     *+10
         MVC   INBUF(0),4(R8)
         EX    R1,*-6
         CLC   INBUF(6),=C'PPXIT '
         BNE   *+10
         MVC   INBUF(5),=C'LOGON'
         SPACE
         LA    R3,PPXDCBW
         MVC   0(PPXDCBL,R3),PPXDCB
         LA    R1,OPEN
         MVI   0(R1),X'80'
         OPEN  ((R3),INPUT),MF=(E,(1))
         TM    OFLGS(R3),X'10'
         BNO   ERROPEN
         MVC   BLDLW(12),BLDL
         BLDL  (R3),BLDLW
         LTR   R15,R15             WAS MEMBER FOUND
         BNZ   ERRBLDL             NO, BRANCH
         SPACE
         LA    R0,BLDLW+4
         LOAD  DE=(0),DCB=(R3)
         ST    R0,PPXEP
         SPACE
***********************************************************************
*                                                                     *
*         SET UP THE PARAMETERS TO BE PASSED TO THE EXIT              *
*                                                                     *
***********************************************************************
         SPACE
         LA    R1,PARMLIST
         LA    R15,SDV01           POINT TO SDV - SWITCHES
         LA    R14,SWITCHES        POINT TO SWITCHES
         XC    0(32,R14),0(R14)    CLEAR SWITCHES
         ST    R14,0(,R15)         PUT ADDRESS IN SDV
         MVI   5(R15),32           PUT MAX LENGTH IN SDV
         MVI   7(R15),32           PUT CURRENT LENGTH IN SDV
         ST    R15,0(,R1)          PUT SDV ADDRESS IN PARMLIST
         SPACE
         LA    R15,SDV02           POINT TO SDV - INPUT BUFFER
         LA    R14,INBUF           POINT TO INBUF
         ST    R14,0(,R15)         PUT ADDRESS IN SDV
         MVI   5(R15),252          PUT MAX LENGTH IN SDV
         MVC   6(2,R15),INBUFL     PUT CURRENT LENGTH IN SDV
         ST    R15,1*4(,R1)        PUT SDV ADDRESS IN PARMLIST
         SPACE
         LA    R15,SDV03          POINT TO SDV - USERID
         LA    R14,USERID         POINT TO USERID
         ST    R14,0(,R15)        PUT ADDRESS IN SDV
         MVI   5(R15),7           PUT MAX LENGTH IN SDV
         ST    R15,2*4(,R1)       PUT SDV ADDRESS IN PARMLIST
         SPACE
         LA    R15,SDV04          POINT TO SDV - PASSWORD
         LA    R14,PASSWORD       POINT TO PASSWORD
         ST    R14,0(,R15)        PUT ADDRESS IN SDV
         MVI   5(R15),8           PUT MAX LENGTH IN SDV
         ST    R15,3*4(,R1)       PUT SDV ADDRESS IN PARMLIST
         SPACE
         LA    R15,SDV05          POINT TO SDV - ACCOUNT
         LA    R14,ACCOUNT        POINT TO ACCOUNT
         ST    R14,0(,R15)        PUT ADDRESS IN SDV
         MVI   5(R15),40          PUT MAX LENGTH IN SDV
         ST    R15,4*4(,R1)       PUT SDV ADDRESS IN PARMLIST
         SPACE
         LA    R15,SDV06          POINT TO SDV - PROC
         LA    R14,PROC           POINT TO PROC
         ST    R14,0(,R15)        PUT ADDRESS IN SDV
         MVI   5(R15),8           PUT MAX LENGTH IN SDV
         ST    R15,5*4(,R1)       PUT SDV ADDRESS IN PARMLIST
         SPACE
         LA    R14,REGION         POINT TO REGION
         ST    R14,6*4(,R1)       PUT     ADDRESS IN PARMLIST
         SPACE
         LA    R15,SDV08          POINT TO SDV - JCL
         LA    R14,JCL            POINT TO JCL
         ST    R14,0(,R15)        PUT ADDRESS IN SDV
         MVC   4(2,R15),=H'800'   PUT MAX LENGTH IN SDV
         ST    R15,7*4(,R1)       PUT SDV ADDRESS IN PARMLIST
         SPACE
         LA    R14,0              POINT TO RESERVED
         ST    R14,8*4(,R1)       PUT     ADDRESS IN PARMLIST
         SPACE
         LA    R15,SDV10          POINT TO SDV - SYSATTR
         LA    R14,SYSATTR        POINT TO SYSATTR
         ST    R14,0(,R15)        PUT ADDRESS IN SDV
         MVI   5(R15),16          PUT MAX LENGTH IN SDV
         ST    R15,9*4(,R1)       PUT SDV ADDRESS IN PARMLIST
         SPACE
         LA    R15,SDV11          POINT TO SDV - USRATTR
         LA    R14,USRATTR        POINT TO USRATTR
         ST    R14,0(,R15)        PUT ADDRESS IN SDV
         MVI   5(R15),16          PUT MAX LENGTH IN SDV
         ST    R15,10*4(,R1)      PUT SDV ADDRESS IN PARMLIST
         SPACE
         LA    R15,SDV12          POINT TO SDV - UNIT
         LA    R14,UNIT           POINT TO UNIT
         ST    R14,0(,R15)        PUT ADDRESS IN SDV
         MVI   5(R15),8           PUT MAX LENGTH IN SDV
         ST    R15,11*4(,R1)      PUT SDV ADDRESS IN PARMLIST
         SPACE
         LA    R15,SDV13          POINT TO SDV - UPT
         LA    R14,UPT$           POINT TO UPT
         ST    R14,0(,R15)        PUT ADDRESS IN SDV
         MVI   5(R15),192         PUT MAX LENGTH IN SDV
         ST    R15,12*4(,R1)      PUT SDV ADDRESS IN PARMLIST
         SPACE
         LA    R15,SDV14          POINT TO SDV - ECT
         LA    R14,ECT$           POINT TO ECT
         L     R8,CPPLECT
         MVC   0(56,R14),0(R8)
         ST    R14,0(,R15)        PUT ADDRESS IN SDV
         MVC   4(2,R15),=H'256'   PUT MAX LENGTH IN SDV
         MVC   6(2,R15),=H'256'   PUT CURRENT LENGTH IN SDV
         ST    R15,13*4(,R1)      PUT SDV ADDRESS IN PARMLIST
         SPACE
         LA    R14,CECB           POINT TO CANCEL ECB
         ST    R14,14*4(,R1)      PUT     ADDRESS IN PARMLIST
         SPACE
         LA    R14,LASTCC         POINT TO LAST STEP CC
         ST    R14,15*4(,R1)      PUT     ADDRESS IN PARMLIST
         SPACE
         LA    R14,PERFORM        POINT TO PERFORMANCE GROUP
         ST    R14,16*4(,R1)      PUT     ADDRESS IN PARMLIST
         SPACE
         LA    R15,SDV18          POINT TO SDV - DEST
         LA    R14,DEST           POINT TO DEST
         ST    R14,0(,R15)        PUT ADDRESS IN SDV
         MVI   5(R15),8           PUT MAX LENGTH IN SDV
         ST    R15,17*4(,R1)      PUT SDV ADDRESS IN PARMLIST
         SPACE
         OI    17*4(R1),X'80'
         SPACE
***********************************************************************
*                                                                     *
*         CALL THE PRE-PROMPT EXIT                                    *
*                                                                     *
***********************************************************************
         SPACE
         L     R15,PPXEP
         BALR  R14,R15             CALL IKJEFLD (LOGON PRE-PROMPT EXIT)
         SPACE
***********************************************************************
*                                                                     *
*         DISPLAY THE RESULTS                                         *
*                                                                     *
***********************************************************************
         SPACE
         LA    R1,MSGEND
         LA    R0,MSGENDL
         SVC   93
         SPACE
         LA    R1,MSGBUFF
         LA    R0,MSGBUFFL
         SVC   93
         LA    R15,LINE
         MVI   0(R15),C' '
         MVC   1(L'LINE-1,R15),0(R15)
         LA    R15,1(,R15)
         MVC   0(6,R15),=C'(NULL)'
         LA    R0,7
         LH    R1,SDV01+6
         LTR   R1,R1
         BNP   NOBUFF
         MVC   0(6,R15),=C'      '
         CH    R1,=H'252'
         BNH   *+8
         LH    R1,=H'252'
         BCTR  R1,0
         B     *+10
         MVC   0(0,R15),INBUF
         EX    R1,*-6
         LA    R0,2(,R1)
NOBUFF   EQU   *
         LA    R1,LINE
         SVC   93
         SPACE
         TM    SWITCHES+0,B'00011110'
         BNZ   SHOWSWIT
         TM    SWITCHES+1,B'11111100'
         BNZ   SHOWSWIT
         B     NOSWIT
SHOWSWIT EQU   *
         LA    R1,MSGSWIT
         LA    R0,MSGSWITL
         SVC   93
         LA    R15,LINE
         MVI   0(R15),C' '
         MVC   1(L'LINE-1,R15),0(R15)
         LA    R15,1(,R15)
         TM    SWITCHES,X'10'      DISCONNECT
         BZ    *+14
         MVC   0(10,R15),=C'DISCONNECT'
         LA    R15,11(,R15)
         TM    SWITCHES,X'08'      DONT PROMPT
         BZ    *+14
         MVC   0(10,R15),=C'DONTPROMPT'
         LA    R15,11(,R15)
         TM    SWITCHES,X'04'      NO UADS
         BZ    *+14
         MVC   0(7,R15),=C'NO-UADS'
         LA    R15,8(,R15)
         TM    SWITCHES,X'02'      JCL
         BZ    *+14
         MVC   0(3,R15),=C'JCL'
         LA    R15,4(,R15)
         TM    SWITCHES+1,X'80'    SYSATT
         BZ    *+14
         MVC   0(6,R15),=C'SYSATT'
         LA    R15,7(,R15)
         TM    SWITCHES+1,X'40'    USERATT
         BZ    *+14
         MVC   0(7,R15),=C'USERATT'
         LA    R15,8(,R15)
         TM    SWITCHES+1,X'20'    UNIT
         BZ    *+14
         MVC   0(4,R15),=C'UNIT'
         LA    R15,5(,R15)
         TM    SWITCHES+1,X'10'    UPT
         BZ    *+14
         MVC   0(3,R15),=C'UPT'
         LA    R15,4(,R15)
         TM    SWITCHES+1,X'08'    DONT ENQ
         BZ    *+14
         MVC   0(8,R15),=C'DONT-ENQ'
         LA    R15,9(,R15)
         TM    SWITCHES+1,X'04'    DEST
         BZ    *+14
         MVC   0(4,R15),=C'DEST'
         LA    R15,5(,R15)
         LR    R0,R15
         LA    R1,LINE
         SR    R0,R1
         SVC   93
         SPACE
         TM    SWITCHES+0,X'04'    NO UADS
         BZ    NONOUADS
         LA    R1,MSGNOUA
         LA    R0,MSGNOUAL
         SVC   93
         MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE
         MVC   LINE+1(7),=C'SYSATTR'
         LA    R15,LINE+10
         LA    R1,SDV10+4
         LA    R0,4
         BAL   R14,UNPACK
         LA    R15,1(,R15)
         L     R1,SDV10
         LH    R0,SDV10+4
         CH    R0,=H'2'
         BNH   *+8
         LH    R0,=H'2'
         BAL   R14,UNPACK
         LA    R1,LINE
         LA    R0,50
         SVC   93
         SPACE
         MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE
         MVC   LINE+1(7),=C'USRATTR'
         LA    R15,LINE+10
         LA    R1,SDV11+4
         LA    R0,4
         BAL   R14,UNPACK
         LA    R15,1(,R15)
         L     R1,SDV11
         LH    R0,SDV11+4
         CH    R0,=H'2'
         BNH   *+8
         LH    R0,=H'2'
         BAL   R14,UNPACK
         LA    R1,LINE
         LA    R0,50
         SVC   93
         SPACE
         MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE
         MVC   LINE+1(4),=C'UNIT'
         LA    R15,LINE+10
         LA    R1,SDV12+4
         LA    R0,4
         BAL   R14,UNPACK
         LA    R15,1(,R15)
         L     R1,SDV12
         MVC   0(8,R15),0(R1)
         LA    R1,LINE
         LA    R0,50
         SVC   93
         SPACE
         MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE
         MVC   LINE+1(3),=C'UPT'
         LA    R15,LINE+10
         LA    R1,SDV13+4
         LA    R0,4
         BAL   R14,UNPACK
         LA    R15,1(,R15)
         L     R1,SDV13
         LH    R0,SDV13+4
         CH    R0,=H'24'
         BNH   *+8
         LH    R0,=H'24'
         BAL   R14,UNPACK
         LA    R1,LINE
         LA    R0,70
         SVC   93
         SPACE
         TM    SWITCHES+1,X'04'   DEST?
         BZ    NODESTSW
         MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE
         MVC   LINE+1(4),=C'DEST'
         LA    R15,LINE+10
         LA    R1,SDV18+4
         LA    R0,4
         BAL   R14,UNPACK
         LA    R15,1(,R15)
         L     R1,SDV18
         MVC   0(8,R15),0(R1)
         LA    R1,LINE
         LA    R0,50
         SVC   93
         SPACE
NODESTSW EQU   *
NONOUADS EQU   *
         SPACE
         TM    SWITCHES+0,X'08'   DONT PROMPT
         BZ    NONOPROM           NO - BRANCH
         LA    R1,MSGNOPR
         LA    R0,MSGNOPRL
         SVC   93
         SPACE
         MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE
         MVC   LINE+1(7),=C'USERID'
         LA    R15,LINE+10
         LA    R1,SDV03+4
         LA    R0,4
         BAL   R14,UNPACK
         LA    R15,1(,R15)
         L     R1,SDV03
         MVC   0(8,R15),0(R1)
         LA    R1,LINE
         LA    R0,50
         SVC   93
         SPACE
         MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE
         MVC   LINE+1(8),=C'PASSWORD'
         LA    R15,LINE+10
         LA    R1,SDV04+4
         LA    R0,4
         BAL   R14,UNPACK
         LA    R15,1(,R15)
         L     R1,SDV04
         MVC   0(8,R15),0(R1)
         LA    R1,LINE
         LA    R0,50
         SVC   93
         SPACE
         MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE
         MVC   LINE+1(7),=C'ACCOUNT'
         LA    R15,LINE+10
         LA    R1,SDV05+4
         LA    R0,4
         BAL   R14,UNPACK
         LA    R15,1(,R15)
         L     R1,SDV05
         MVC   0(8,R15),0(R1)
         LA    R1,LINE
         LA    R0,50
         SVC   93
         SPACE
         MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE
         MVC   LINE+1(4),=C'PROC'
         LA    R15,LINE+10
         LA    R1,SDV06+4
         LA    R0,4
         BAL   R14,UNPACK
         LA    R15,1(,R15)
         L     R1,SDV06
         MVC   0(8,R15),0(R1)
         LA    R1,LINE
         LA    R0,50
         SVC   93
         SPACE
         MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE
         MVC   LINE+1(6),=C'REGION'
         LA    R15,LINE+19
         LA    R1,REGION
         LA    R0,4
         BAL   R14,UNPACK
         LA    R1,LINE
         LA    R0,50
         SVC   93
         SPACE
         MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE
         MVC   LINE+1(7),=C'PERFORM'
         LA    R15,LINE+19
         LA    R1,PERFORM
         LA    R0,4
         BAL   R14,UNPACK
         LA    R1,LINE
         LA    R0,50
         SVC   93
NONOPROM EQU   *
         SPACE
NOSWIT   EQU   *
         SPACE
         TM    SWITCHES+0,X'02'    JCL
         BZ    NOJCL
         LA    R1,MSGJCL
         LA    R0,MSGJCLL
         SVC   93
         LH    R1,SDV08+6         GET LENGTH OF JCL
         SLR   R0,R0
         D     R0,=F'80'          DIVIDE LENGTH BY 80
         LA    R7,JCL
         LR    R8,R1
SHOWJCL  LA    R1,LINE
         MVI   0(R1),C' '
         MVC   1(80,R1),0(R7)
         LA    R0,80
         SVC   93
         LA    R7,80(,R7)
         BCT   R8,SHOWJCL
NOJCL    EQU   *
         SPACE
         LA    R0,BLDLW+4
         DELETE DE=(0)
         SPACE
EXITC    LA    R1,OPEN
         MVI   0(R1),X'80'
         CLOSE ((R3)),MF=(E,(1))
         SPACE
EXIT0    SR    15,15
EXIT     LR    1,13
         L     0,@SIZE
         L     13,4(,13)
         ST    15,16(,13)
         FREEMAIN R,A=(1),LV=(0)
         LM    14,12,12(13)
         BR    14
         SPACE
UNPACK   MVC   1(1,R15),0(R1)      MOVE BYTE
         UNPK  0(3,R15),1(2,R15)   UNPACK
         TR    0(2,R15),UNPACKT-240
         LA    R15,2(,R15)         INCREMENT OUTPUT PTR
         LA    R1,1(,R1)           INCREMENT INPUT PTR
         BCT   R0,UNPACK           DECREMENT LENGTH, THEN LOOP
         MVI   0(R15),C' '         BLANK THE TRAILING BYTE
         BR    R14                 RETURN TO CALLER
UNPACKT  DC    C'0123456789ABCDEF' TRANSLATE TABLE
         SPACE
ERROPEN  LA    R1,MSGOPEN
         LA    R0,L'MSGOPEN
         SVC   93
         LA    R1,MSGOPENA
         LA    R0,L'MSGOPENA
         SVC   93
         LA    R1,MSGOPENB
         LA    R0,L'MSGOPENB
         SVC   93
         B     EXIT0
         SPACE
ERRBLDL  LA    R1,MSGBLDL
         LA    R0,L'MSGBLDL
         SVC   93
         B     EXITC
         SPACE
************************************************************
*                                                          *
*        CONSTANTS                                         *
*                                                          *
************************************************************
         SPACE
         PRINT NOGEN
PPXDCB   DCB   DDNAME=PPXLIB,DSORG=PO,MACRF=(R)
PPXDCBL  EQU   *-PPXDCB
         PRINT GEN
         SPACE
BLDL     DC    AL2(1,76),CL8'IKJEFLD'
MSGOPEN  DC    C'FILENAME(PPXLIB) NOT FOUND.'
MSGOPENA DC    C'IT MUST BE PRE-ALLOCATED TO THE LOAD LIBRARY'
MSGOPENB DC    C'CONTAINING THE EXIT MODULE TO BE TESTED.'
MSGBLDL  DC    C'MEMBER IKJEFLD NOT FOUND IN PPXLIB LIBRARY'
MSGEND   DC    C'THE LOGON PRE-PROMPT EXIT (IKJEFLD) HAS ENDED NORMALLY+
               .'
MSGENDL  EQU   *-MSGEND
MSGBUFF  DC    C'THE FOLLOWING INPUT BUFFER WAS RETURNED ...'
MSGBUFFL EQU   *-MSGBUFF
MSGSWIT  DC    C'THE FOLLOWING CONTROL SWITCHES WERE SET ON ...'
MSGSWITL EQU   *-MSGSWIT
MSGJCL   DC    C'THE FOLLOWING JCL WAS RETURNED ...'
MSGJCLL  EQU   *-MSGJCL
MSGNOUA  DC    C'THE FOLLOWING FIELDS SUPPLIED FOR NO-UADS ...'
MSGNOUAL EQU   *-MSGNOUA
MSGNOPR  DC    C'THE FOLLOWING FIELDS SUPPLIED FOR NO-PROMPT ...'
MSGNOPRL EQU   *-MSGNOPR
         LTORG
OFLGS    EQU   48                  DCB OFFSET
         DC    0D'0'
         SPACE
************************************************************
*                                                          *
*        DSECTS                                            *
*                                                          *
************************************************************
         SPACE
@DATA    DSECT
         DS    18F                 REGISTER SAVEAREA
OPEN     DS    F
PPXDCBW  DS    0F,(PPXDCBL)X
BLDLW    DS    40H
PPXEP    DS    F
INBUFL   DS    H
         DS    0D
PARMLIST DS    18F
SDV01    DS    D
SDV02    DS    D
SDV03    DS    D
SDV04    DS    D
SDV05    DS    D
SDV06    DS    D
SDV08    DS    D
SDV10    DS    D
SDV11    DS    D
SDV12    DS    D
SDV13    DS    D
SDV14    DS    D
SDV18    DS    D
         DS    0D
SWITCHES DS    XL32
         DS    0D
INBUF    DS    XL252
         DS    0D
USERID   DS    CL7
         DS    0D
PASSWORD DS    CL7
         DS    0D
ACCOUNT  DS    CL40
         DS    0D
PROC     DS    CL8
         DS    0D
REGION   DS    A
         DS    0D
JCL      DS    10CL80
         DS    0D
SYSATTR  DS    XL16
         DS    0D
USRATTR  DS    XL16
         DS    0D
UNIT     DS    CL8
         DS    0D
UPT$     DS    CL128
         DS    0D
ECT$     DS    CL128
         DS    0D
CECB     DS    F
         DS    0D
LASTCC   DS    F
         DS    0D
PERFORM  DS    F
         DS    0D
DEST     DS    CL8
         DS    0D
LINE     DS    CL128
         DS    CL128
@DATAL   EQU   *-@DATA
         SPACE
         IKJCPPL
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
