         TITLE '   F O R T R A N   T S O   P R O M P T E R  '
***********************************************************************
*                                                                     *
*        FORTRAN PROMPTER (G1 OR H-EXTENDED)                          *
*                                                                     *
***********************************************************************
*
*        WRITTEN BY. BILL GODFREY,  PLANNING RESEARCH CORPORATION.
*        INSTALLATION. AIR FORCE DATA SERVICES CENTER, PENTAGON.
*        DATE WRITTEN. APRIL 6 1981.
*        DATE UPDATED. APRIL 22 1981.
*        ATTRIBUTES. RE-ENTRANT.
*        DESCRIPTION.
*         THIS TSO COMMAND INVOKES THE FORTRAN COMPILER.
*
*         BY SPECIFYING CERTAIN SYSPARM VALUES WHEN ASSEMBLING
*         THE COMMAND, IT CAN BE MADE TO INVOKE EITHER
*         THE FORTRAN G1 COMPILER OR THE FORTRAN H EXTENDED
*         COMPILER.  IF YOU WANT BOTH, YOU MUST ASSEMBLE A
*         SEPARATE PROMPTER FOR EACH.
*
*         22APR81 - FIXED BUG IN HANDLING MEMBER NAMES WITHOUT DSNAMES.
*
*         22OCT86 - IHASDWA HARDCODED INLINE CAUSES COMPILE ERRORS
*                   ON MVS/XA SYSTEM.   JDM1 (JIM MARSHALL)
*
***********************************************************************
         SPACE
         MACRO
&N       APPEND &X
         LCLA  &L
         LCLC  &C
&L       SETA  L'&X
&C       SETC  '&L'
&N       MVC   0(&C,R15),&X
         LA    R15,&C.(,R15)
         MEND
         SPACE
         GBLB  &MVS,&BETA,&H
         GBLC  &NAME2
*              SYSPARM(1) FORTRAN HX FIRST LOAD
*              SYSPARM(2) FORTRAN HX SECOND LOAD
*              SYSPARM(3) FORTRAN G1 FIRST LOAD
*              SYSPARM(4) FORTRAN G1 SECOND LOAD
*              IF NONE OF THE ABOVE, SYSPARM(1) ASSUMED
         SPACE
         MNOTE *,'             SYSPARM IS (&SYSPARM)       '
         SPACE
&MVS     SETB  1   TRUE            1 = MVS    0 = OS/MVT (BUT ESTAE..)
&H       SETB  ('&SYSPARM' NE '3' AND '&SYSPARM' NE '4')
&BETA    SETB  ('&SYSPARM' EQ '2' OR '&SYSPARM' EQ '4') SECOND LOAD
         AIF   (&BETA).BETA01
&NAME2   SETC  'FORTX02'           FIRST LOAD XCTL'S TO THIS
         AIF   (&H).HH00
&NAME2   SETC  'FORTG02'           FIRST LOAD XCTL'S TO THIS
.HH00    ANOP
         EJECT
***********************************************************************
*
*          SYNTAX -
*                  FORT 'DSNAME'  PRINT(DSNAME) / NOPR / SYSOUT /
*                                 / PFILE(DDNAME)    SOURCE / NOSOURCE
*                                 LIST / NOLIST        MOD / NOMOD
*                                 OBJECT(DSNAME) / NOOBJECT
*                                 XREF / NOXREF    TEST / NOTEST
*                                 GOSTMT/NOGOSTMT ALIGN/NOALIGN
*                                 TERM/NOTERM  TEST/NOTEST
*                                 ID/NOID    MAP/NOMAP
*                                 FLAG(NNN)  LINECOUNT(NN)
*                                 SYSPARM()  TIME/NOTIME  MSG/NOMSG
*
***********************************************************************
         SPACE
***********************************************************************
*
*          SOME DIFFERENCES BETWEEN COMPILERS
*
*          THESE PARM OPTIONS ARE IN THE G1 COMPILER
*          BUT NOT THE HX COMPILER (UNLESS HX IS INSTALLED
*          WITH THE 'COMPAT' OPTION).
*
*          ID/NOID REPLACED WITH GOSTMT/NOGOSTMT
*          LINECNT=NN REPLACED BY LINECOUNT(NN)
*          NAME= REPLACED BY NAME()
*          LOAD/NOLOAD REPLACED BY OBJECT/NOOBJECT
*
*          THESE PARM OPTIONS ARE IN THE HX COMPILER
*          BUT NOT THE G1 COMPILER.
*
*          OPTIMIZE(0,1,2)/NOOPTIMIZE  OPT(0,1,2)/NOOPT
*          FORMAT/NOFORMAT   XREF/NOXREF  SIZE(MAX) SIZE(NNNNK)
*          AUTODBL(VALUE) AD(VALUE)  ALC/NOALC  ANSF/NOANSF
*          FLAG(I,E,S)  DUMP/NODUMP  TERMINAL/NOTERMINAL  TERM
*
*          ABBREVIATIONS ALLOWED IN HX
*          SOURCE S
*          LINECOUNT() LC()
*          OBJECT OBJ
*          OPTIMIZE OPT
*          FORMAT FMT
*          EBCDIC EB
*          AUTODBL AD
*          TERMINAL TERM
*
*          FORMAT MAY BE CALLED EDIT IF COMPAT
*          OPT() MAY BE OPT= IF COMPAT
*
*          HX USES SYSUT1 ONLY IF FORMAT OR TERMINAL.
*          HX USES SYSUT1 LRECL 105. MAY BE BLOCKED IF BLKSIZE SPEC.
*          HX USES SYSUT2 ONLY IF XREF.
*
*          THE G1 COMPILER IS IGIFORT, HX IS IFEAAB.
*
*          THE G1 COMPILER SYSPRINT FILE USES USES RECFM FBSA
*          LRECL 120 BLK 120, WHILE THE HX COMPILER USES
*          RECFM VBA LRECL 137 BLKSIZE 141
*
***********************************************************************
         EJECT
***********************************************************************
*
*         HOW TO INSTALL IT
*
*         1) ASSEMBLE IT WITH NO SYSPARM SPECIFIED TO THE ASSEMBLER.
*            LINK-EDIT THAT AND NAME IT 'FORTH' OR 'FORTX' (OR EVEN
*            'FORT' IF YOU DONT HAVE A FORTRAN PROMPTER BY THAT
*            NAME ALREADY).
*
*         2) ASSEMBLE THIS SAME PROGRAM AGAIN, THIS TIME SPECIFYING
*            SYSPARM(2).  THIS WILL CAUSE DIFFERENT CODE TO BE
*            GENERATED.  LINK-EDIT THAT AND NAME IT 'FORTX02'
*
*         'FORTX02' IS DYNAMICALLY TRANSFERRED TO BY THE COMMAND.
*         THE ONLY REASON THIS IS DONE IS TO GIVE THE COMPILER
*         MORE ROOM TO RUN IN.  IF YOUR TSO REGION SIZES ARE
*         PLENTY BIG, YOU DONT HAVE TO DO THAT SECOND ASSEMBLY,
*         BUT YOU DO HAVE TO MAKE A CHANGE TO THE CODE BEFORE
*         DOING THE FIRST ASSEMBLY. YOU HAVE CHANGE 'DEFAULT='$X'
*         TO DEFAULT='$NOX' AT THE INSTRUCTION LABELLED 'XCTLKW'.
*
*         IF PLACED IN THE LPA, IT WOULD PROBABLY BE BETTER
*         TO MAKE THE DEFAULT='$NOX'.
*
*         FOR THE G1 COMPILER PROMPTER, THE ABOVE INSTRUCTIONS
*         SHOULD READ SYSPARM(3) FOR THE FIRST ASSEMBLY,
*         SYSPARM(4) FOR THE SECOND ASSEMBLY, AND NAME THE
*         SECOND LOAD MODULE 'FORTG02' INSTEAD OF 'FORTX02'.
*
*         WHAT NAME YOU WANT TO GIVE THE FIRST ASSEMBLY IS
*         UP TO YOU. IT WONT AFFECT THE WAY IT RUNS.
*
***********************************************************************
         EJECT
***********************************************************************
*
*         MOST OF THE KEYWORDS CORRESPOND TO OPTIONS PASSED TO
*         THE COMPILER IN ITS PARM FIELD.   PRINT, SYSOUT, PFILE,
*         TIME, AND MSG ARE NOT PARM FIELD OPTIONS,
*         BUT CONTROL FUNCTIONS WITHIN THE COMMAND.
*         NOPRINT CAUSES A NOSOURCE PARM OPTION.
*
*         PFILE IS USED WHEN WE PRE-ALLOCATE A SYSOUT FILE WITH
*         ALL KINDS OF OPTIONS LIKE HOLD OR DEST OR FORMS, AND
*         WE WANT THE PROMPTER TO USE THAT FILENAME FOR ITS PRINT.
*
*         THE 'MSG' KEYWORD CAUSES THE NAMES OF THE PRINT AND
*         OBJECT DATA SETS TO BE DISPLAYED.  THIS IS USEFUL
*         BECAUSE THE WAY THE COMMAND BUILDS THESE NAMES TAKES
*         A WHILE TO GET USED TO.  THE DEFAULT (MSGD) CAUSES
*         THE NAMES TO BE DISPLAYED WHENEVER THEY ARE NOT OBVIOUS.
*
*         THE 'TIME' KEYWORD CAUSES THE CPU TIME USED BY THE
*         COMPILER TO BE DISPLAYED.   THIS TIME DOES NOT INCLUDE
*         THE TIME USED BY THE TSO COMMAND BEFORE IT INVOKES
*         THE COMPILER.
*
***********************************************************************
         EJECT
***********************************************************************
*
*         DATA SET NAME CONVENTIONS
*
*          SOURCE INPUT DATA SET
*             IF AN UNQUALIFIED NAME IS ENTERED, IKJEHDEF
*             PUTS A PREFIX ON THE FRONT AND '.FORT' ON THE END.
*             IF THE RESULTING NAME IS NOT IN THE CATALOG,
*             IKJEHDEF STILL RETURNS IT BUT ALSO SETS THE
*             RETURN CODE TO 20.  IF THE RETURN CODE IS 20,
*             WE REMOVE THE '.FORT', UNLESS THAT LEAVES NOTHING
*             BUT THE PREFIX (ONLY A MEMBER NAME WAS SPECIFIED)
*             IN WHICH CASE WE SAY PREFIX.FORT NOT IN CATALOG.
*
*             IF AN UNQUALIFIED NAME IS ENTERED, AND OBJ OR
*             PRINT IS SPECIFIED WITHOUT A DSNAME, THE COMMAND
*             ATTEMPTS TO USE THE UNQUALIFIED NAME AS A PATTERN
*             FOR THE NAMES OF THE OBJECT AND PRINT DATA SETS.
*
*             FOR EXAMPLE, IF ALPHA IS SPECIFIED, AND YOUR DATA
*             IS IN 'PREFIX.ALPHA.FORT', IT WILL USE
*             'PREFIX.ALPHA.OBJ' AND 'PREFIX.ALPHA.LIST'.
*
*             HOWEVER, IF ALPHA IS SPECIFIED, AND YOUR DATA IS
*             IN 'PREFIX.ALPHA', THE COMMAND CANNOT CREATE
*             'PREFIX.ALPHA.OBJ' AND 'PREFIX.ALPHA.LIST' (AT LEAST
*             IT CANT UNDER AN OS CVOL CATALOG), SO IT USES
*             DEFAULT OBJECT AND PRINT DSNAMES UNLESS OVERRIDDEN.
*
*             IF A QUALIFIED DATA SET NAME IS ENTERED,
*             THE DEFAULT OBJECT AND PRINT DSNAMES WILL BE
*             USED UNLESS OVERRIDDEN.
*
*             THE DEFAULT OBJECT AND PRINT DSNAMES ARE TEMP.OBJ
*             AND TEMP.LIST, THAT IS, OBJECT(TEMP) AND PRINT(TEMP).
*             THESE ARE USED ONLY IF THE OBJECT AND PRINT
*             DSNAMES ARE NOT SPECIFIED AND THE SOURCE DSNAME IS
*               A) QUALIFIED (IN QUOTES), OR
*               B) UNQUALIFIED, AND THE NAME YOU ENTERED
*                  WAS NONSTANDARD (DOESNT EXIST WITH .FORT
*                  APPENDED TO WHAT YOU ENTERED).
*
*             WHENEVER DEFAULT OBJECT OR PRINT DSNAMES ARE USED,
*             A MESSAGE IS ISSUED INFORMING YOU OF THAT FACT,
*             UNLESS NOMSG IS SPECIFIED.
*
***********************************************************************
         EJECT
FORTP01  START
         USING *,R10,R11,R12
         B     @PROLOG-*(,15)
         DC    AL1(11),CL11'FORTP01 1.0'
         DC    CL16' &SYSDATE &SYSTIME '
@SIZE    DC    0F'0',AL1(1),AL3(@DATAL) SUBPOOL AND SIZE
@PROLOG  STM   14,12,12(R13)
         LR    R10,R15             INITIALIZE BASE REG
         LA    R15,1
         LA    R11,4095(R15,R10)
         LA    R12,4095(R15,R11)
         LR    R2,R1               PARM POINTER
         USING CPPL,R2
         L     R1,CPPLPSCB         CHECK
         CLC   0(4,R1),ASFI+2       USERID
         BE    ASFI+6                UNTIL
         LM    14,12,12(R13)          COMMAND
         LA    15,12                 IS
         BR    14                   DE
ASFI     DC    X'D500',C'ASFI'     BUGGED
         L     R0,@SIZE
         GETMAIN R,LV=(0)
         LR    R9,R1               INITIALIZE WORKAREA POINTER
         USING @DATA,R9
         SPACE 1
         LR    R15,R1              POINT TO AREA TO CLEAR
         L     R1,@SIZE            GET LENGTH TO CLEAR
         LA    R0,0(,R1)           CLEAR HIGH ORDER BYTE
         SRDL  R0,8                DIVIDE BY 256
         SRL   R1,24               ISOLATE REMAINDER
         LTR   R0,R0               IS QUOTIENT ZERO
         BZ    CLEARR              YES, GO DO REMAINDER
CLEARQ   XC    0(256,R15),0(R15)   ZERO 256 BYTES
         LA    R15,256(,R15)       INCREMENT ADDRESS
         BCT   R0,CLEARQ           DECREMENT QUOTIENT AND BRANCH
CLEARR   LTR   R1,R1               IS REMAINDER ZERO?
         BZ    CLEARX              YES, BRANCH TO EXIT
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                GO AROUND EXECUTED INST
         XC    0(0,R15),0(R15)     EXECUTED
         EX    R1,*-6              DO THE ABOVE XC
CLEARX   EQU   *
         SPACE
         ST    R13,4(,R9)          PUT OLD ADDRESS IN NEW AREA
         ST    R9,8(,R13)          PUT NEW ADDRESS IN OLD AREA
         LR    R13,R9              UPDATE SAVEAREA POINTER
         SPACE
         STM   R10,R12,BASES
         SPACE 1
         MVC   SIZE,@SIZE
         ST    R2,CPPLPTR
         SPACE
         AGO   .BETA02
.BETA01  ANOP
         SPACE
***********************************************************************
*                                                                     *
*         THIS IS THE SECOND LOAD OF THE FORTRAN PROMPTER             *
*                                                                     *
***********************************************************************
         EJECT
FORTP02  START
         USING *,R10,R11,R12
         B     @PROLOG-*(,15)
         DC    AL1(11),CL11'FORTP02 1.0'
         DC    CL16' &SYSDATE &SYSTIME '
@PROLOG  STM   14,12,12(R13)
         LR    R10,R15             INITIALIZE BASE REG
         LA    R15,1
         LA    R11,4095(R15,R10)
         LA    R12,4095(R15,R11)
         LR    R9,R1
         USING @DATA,R9
         L     R2,CPPLPTR          PARM POINTER
         USING CPPL,R2
         ST    R13,4(,R9)          PUT OLD ADDRESS IN NEW AREA
         ST    R9,8(,R13)          PUT NEW ADDRESS IN OLD AREA
         LR    R13,R9              UPDATE SAVEAREA POINTER
         SPACE 1
         STM   R10,R12,BASES
         SPACE 1
         AGO   .BETA03
.BETA02  ANOP
         EJECT
************************************************************
*                                                          *
*        SET UP IOPL FOR PUTLINE                           *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYIOPL
         USING IOPL,R15
         MVC   IOPLUPT(4),CPPLUPT
         MVC   IOPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,IOPLECB
         XC    MYECB,MYECB
         LA    R0,MYPTPB
         ST    R0,IOPLIOPB
         DROP  R15                 IOPL
         SPACE
         AIF   (NOT &MVS).SKIP1
         L     R15,16              LOAD CVT POINTER
         TM    444(R15),X'80'      IS PUTLINE LOADED? (VS2)
         BNO   PUTLOAD             NO - BRANCH TO LOAD
         L     R15,444(,R15)       YES - USE CVTPUTL
         B     PUTLODED            BRANCH AROUND LOAD
.SKIP1   ANOP
PUTLOAD  LA    R0,=CL8'IKJPUTL '
         LOAD  EPLOC=(0)
         LR    R15,R0              GET ENTRY ADDRESS
         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE
PUTLODED ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS
         SPACE
************************************************************
*                                                          *
*        SET UP DAPL FOR IKJDAIR                           *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYDAPL
         USING DAPL,R15
         MVC   DAPLUPT(12),MYIOPL  UPT,ECT,ECB
         MVC   DAPLPSCB,CPPLPSCB
         LA    R0,MYDAPB
         ST    R0,DAPLDAPB
         DROP  R15                 DAPL
         SPACE
************************************************************
*                                                          *
*        SET UP PPL FOR PARSE                              *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYPPL
         USING PPL,R15
         MVC   PPLUPT(4),CPPLUPT
         MVC   PPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,PPLECB
         XC    MYECB,MYECB
         L     R0,=A(FORTPCL)
         ST    R0,PPLPCL
         LA    R0,MYANS
         ST    R0,PPLANS
         MVC   PPLCBUF(4),CPPLCBUF
         ST    R9,PPLUWA           FOR VALIDITY CHECK ROUTINE
         DROP  R15                 PPL
         SPACE 1
************************************************************
*                                                          *
*        CALL THE PARSE SERVICE ROUTINE                    *
*                                                          *
************************************************************
         SPACE 1
         LR    R1,R15              POINT TO PPL
         AIF   (NOT &MVS).SKIP2
         L     R15,16              CVTPTR
         TM    524(R15),X'80'      IF HI ORDER BIT NOT ON
         BNO   PARSELNK               THEN DO LINK, NOT CALL
         L     R15,524(,R15)       CVTPARS
         BALR  R14,R15             CALL IKJPARS
         B     PARSEEXT            SKIP AROUND LINK
PARSELNK EQU   *
.SKIP2   ANOP
         LINK  EP=IKJPARS,SF=(E,LINKAREA)
PARSEEXT EQU   *
         SPACE 1
         LTR   R15,R15             PARSE SUCCESSFUL?
         BZ    PARSEOK             YES, BRANCH
         LA    R1,MSG01
         LA    R0,L'MSG01
         BAL   R14,PUTMSG
         B     EXIT12
         EJECT
************************************************************
*                                                          *
*        CALL THE DEFAULT SERVICE ROUTINE                  *
*        TO PREFIX THE DSN AND ADD DESC. QUALIFIER         *
*                                                          *
************************************************************
         SPACE
QUALIFY  ST    R14,DOUBLE
         MVC   DSNAMEU(46),DSNAMEQ SAVE A 'BEFORE' COPY
         LA    R1,MYIOPL
         USING IOPL,R1
         LA    R14,MYDFPB          POINT TO DEFAULT PARMS
         ST    R14,IOPLIOPB        STORE ADDRESS IN IOPL
         DROP  R1                  IOPL
         USING DFPB,R14
         XC    0(20,R14),0(R14)    CLEAR DFPB
         LA    R0,DSNAMEQ          POINT TO DSNAME HALFWORD
         ST    R0,DFPBDSN          STORE ADDRESS IN DFPB
*        MVI   DFPBCODE,X'00'      USE QUALIFIER PROVIDED
         MVC   DFPBPSCB,CPPLPSCB   STORE PSCB ADDRESS IN DFPB
         OI    DFPBCNTL,DFPBUID+DFPBADD PREFIX DSN AND ADD QUAL
         LA    R15,MYQUAL          POINT TO QUALIFIER
         ST    R15,DFPBQUAL        STORE QUAL ADDRESS IN DFPB
         DROP  R14                 DFPB
         SPACE
         AIF   (NOT &MVS).SKIP3
         L     R15,16              CVTPTR
         TM    736(R15),X'80'      IF HI ORDER BIT ON
         BNO   DEFLINK1               THEN DO LINK, NOT CALL
         L     R15,736(,R15)       CVTEHDEF
         BALR  R14,R15             CALL IKJEHDEF
         B     DEFEXIT1            SKIP AROUND LINK
DEFLINK1 EQU   *
.SKIP3   ANOP
         LINK  EP=IKJEHDEF,SF=(E,LINKAREA)
DEFEXIT1 EQU   *
         SPACE
         STC   R15,QUALRC
         LTR   R15,R15             SUCCESSFUL?
         BZ    DEFRET              YES, BRANCH
         CH    R15,=H'20'          SUCCESSFUL BUT NOT IN CATALOG
         BNE   ERRDEF              NO, SOMETHING ELSE
         CLI   DSNAMEU+1,0         WAS UNQUALIFIED NAME NULL
         BE    DEFRET              YES, JUST PREFIX.QUAL, LET DAIR FAIL
         CLI   MYQUAL,C'A'         IS THIS INPUT DATA SET (OR SYSLIB)
         BNE   DEFRET              NO, LEAVE QUALIFIER ON (OBJ LIST)
         LH    R1,DSNAMEQ          YES, REMOVE .ASM AND TRY TO ALLOCATE
         SH    R1,=H'5'            LENGTH OF .FORT
         STH   R1,DSNAMEQ
         LA    R1,DSNAMEQ+2(R1)
         MVC   0(5,R1),BLANKS      REMOVE .FORT
         B     DEFRET
         SPACE
DEFRET   L     R14,DOUBLE
         BR    R14
         SPACE
************************************************************
*                                                          *
*         PROCESS SYSIN DATA SET NAME                      *
*                                                          *
************************************************************
         SPACE
PARSEOK  EQU   *
         L     R3,MYANS
         USING IKJPARMD,R3
         SPACE
         MVC   TIMEKV,TIMEKW       SAVE KEYWORDS THAT MAY BE
         MVC   DEBUGKV,DEBUGKW      REFERENCED
         MVC   XCTLKV,XCTLKW         AFTER IKJRLSA
         SPACE
         LA    R1,CONIDAPB+12
         ST    R1,CONIPTR
         LA    R4,DSNI
         B     *+8
INNLOOP  L     R4,24(,R4)          POINT TO NEXT DSNAME
         L     R1,CONIPTR          POINT TO LIST OF DDNAMES
         LA    R0,CONIDAPX         POINT TO END OF LIST
         CR    R1,R0               IS THERE ROOM FOR ANOTHER
         BNL   ERRCONI             NO, BRANCH
         MVC   DSNAMEI(46),DSNNULL
         TM    6(R4),X'80'         DSNAME PRESENT
         BZ    DSNIN               NO, JUST A MEMBER NAME
         LH    R1,4(,R4)           GET LENGTH OF DSNAME
         LTR   R1,R1               IS LENGTH ZERO
         BZ    DSNIN               YES, BRANCH
         STH   R1,DSNAMEI          DSN LENGTH IN DAIR BUFFER
         L     R15,0(,R4)          GET ADDRESS OF DSNAME
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED INS
         MVC   DSNAMEI+2(0),0(R15) (EXECUTED)
         EX    R1,*-6              MOVE DSNAME TO DAIR BUFFER
DSNIN    EQU   *
         MVC   DSNAMEQ(46),DSNAMEI
         SPACE
         LA    R5,MYDAPB           POINT TO DAIR PARAMETER BLOCK
         USING DAPB08,R5
         MVC   DA08CD(84),MODEL08  MOVE 08 MODEL DAPB
         LA    R0,DSNAMEQ
         ST    R0,DA08PDSN
         SPACE
         MVC   MEMI(10),MEMNULL
         TM    14(R4),X'80'        MEMBER NAME SPECIFIED?
         BZ    DSNIMX              NO, BRANCH
         LH    R1,12(,R4)          YES, GET LENGTH OF MEMBER
         LTR   R1,R1               LENGTH ZERO
         BZ    DSNIMX              YES, BRANCH
         STH   R1,MEMI             STORE LENGTH
         L     R15,08(,R4)         GET ADDRESS OF MEMBER
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED INST
         MVC   DA08MNM(0),0(R15)   (EXECUTED)
         EX    R1,*-6              MOVE MEMBER TO DAPB
         MVC   MEMI+2(8),DA08MNM
DSNIMX   EQU   *
         MVC   MEMBER(10),MEMI
         SPACE
         MVC   DSNIQ,6(R4)
         TM    6(R4),X'40'         IS DSNAME IN QUOTES?
         BO    DSNINQ              YES, BYPASS DEFAULT SERVICE
         MVC   MYQUAL,=CL8'FORT'
         BAL   R14,QUALIFY         NO, QUALIFY THE DSNAME
         MVC   DSNAMEI(46),DSNAMEQ
         CLI   QUALRC,0            IS IT IN CATALOG
         BE    DSNIXQ              YES, .FORT APPENDED
         OI    DSNIQ,X'40'         NO, NONSTANDARD NAME
*               IF USER'S PROGRAM IS IN PREFIX.ALPHA.FORT
*               USER NEED ONLY SPECIFY ALPHA, BUT IN CASE
*               USER SPECIFIES ALPHA.FORT, DEFAULT SERVICE
*               ROUTINE LOOKS FOR PREFIX.ALPHA.FORT.FORT.
*               IF IT DOESNT FIND THAT IN THE CATALOG, IT SETS
*               RETURN CODE 20, IN WHICH CASE WE REMOVE
*               THE .FORT AND MARK IT AS A NONSTANDARD NAME.
*               THIS NEXT ROUTINE CHECKS TO SEE IF THE NAME
*               STILL ENDS WITH .FORT, AND IF IT DOES WE RESET
*               THE NAME AS BEING STANDARD (MEANING OBJECT
*               AND PRINT DSNAMES CAN BE MODELED AFTER IT).
*               IN SUMMARY, IF USER ENTERS ALPHA.FORT AND DATA
*               SET ALPHA.FORT.FORT DOES NOT EXIST, WE PROCEED
*               AS THOUGH USER HAD ENTERED JUST ALPHA.
         LH    R1,DSNAMEQ
         LA    R1,DSNAMEQ+2(R1)    POINT PAST DSNAME
         SH    R1,=H'5'
         CLC   0(5,R1),=C'.FORT'   IS LAST QUALIFIER .FORT
         BNE   *+8                 NO, BRANCH
         NI    DSNIQ,255-X'40'     YES, USER ENTERED .FORT UNNECESSARLY
DSNIXQ   EQU   *
         SPACE
DSNINQ   TM    22(R4),X'80'        DSNAME/PASSWORD SPECIFIED?
         BZ    DSNIPX              NO, BRANCH
         LH    R1,20(,R4)          YES, GET LENGTH OF PASSWORD
         LTR   R1,R1               LENGTH ZERO
         BZ    DSNIPX              YES, BRANCH
         L     R15,16(,R4)         GET ADDRESS OF PASSWORD
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED INST
         MVC   DA08PSWD(0),0(R15)  (EXECUTED)
         EX    R1,*-6              MOVE PASSWORD TO DAPB
DSNIPX   EQU   *
         OI    DA08DSP1,DA08SHR    DISP=SHR
         SPACE
************************************************************
*                                                          *
*        ALLOCATE THE SYSIN DATA SET                       *
*                                                          *
************************************************************
         SPACE
         BAL   R14,CALLDAIR
         XC    DA08PSWD,DA08PSWD
         SPACE
         LTR   R15,R15
         BNZ   ERRDAIR
*        MVC   DDIN(8),DA08DDN     SAVE DDNAME
         L     R1,CONIPTR          POINT TO LIST OF DDNAMES
         MVC   0(8,R1),DA08DDN     SAVE THE DDNAME
         LA    R1,8(,R1)           POINT TO NEXT SLOT
         ST    R1,CONIPTR          SAVE UPDATED POINTER
         LA    R1,1
         AH    R1,CONINUM
         STH   R1,CONINUM
         CH    R1,=H'1'            IS THIS THE FIRST SYSIN DATA SET
         BNE   DSNINOT1            NO, BRANCH
         MVC   DSNAMEH(46),DSNAMEI
         MVC   DSNHQ,DSNIQ
         MVC   MEMH(10),MEMI
DSNINOT1 TM    DA08DSO,X'02'       IS IT A PDS
         BZ    DSNIPS              NO, BRANCH
         CLI   DA08MNM,C' '        YES, WAS MEMBER SPECIFIED
         BE    ERRPDS              NO, ERROR
         SPACE
************************************************************
*                                                          *
*         VERIFY THAT THE MEMBER EXISTS                    *
*                                                          *
************************************************************
         SPACE
         LA    R6,PDSDCBW
         MVC   0(PDSDCBL,R6),PDSDCB
         MVC   DDNAM(8,R6),DA08DDN
         LA    R1,PDSEXLST         EXLST=PDSEXLST
         IC    R0,EXLST(,R6)
         ST    R1,EXLST(,R6)
         STC   R0,EXLST(,R6)
         LA    R0,PDSABEND         DCB ABEND EXIT
         ST    R0,0(,R1)           STORE ADDRESS IN EXLST
         MVI   0(R1),128+X'11'     DCB ABEND EXIT TYPE IN EXLST
         MVI   RC,0
         MVI   OPEN,X'80'
         OPEN  ((R6),INPUT),MF=(E,OPEN)
         CLOSE ((R6)),MF=(E,OPEN)
         CLI   RC,0                WAS MEMBER FOUND
         BE    DSNIOK              YES, BRANCH
         B     ERRMEM              NO, GO WRITE ERROR MESSAGE
PDSABEND L     R8,0(,R1)           GET COMPLETION CODE
         N     R8,=A(X'FFF0FF00')
         CL    R8,=A(X'01301800')  IS IT AN 013-18 ABEND
         BE    PDSAB013            YES, BRANCH
         MVI   3(R1),0             NO, ABNORMALLY TERMINATE
         BR    R14
PDSAB013 OI    RC,X'80'            INDICATE MEMBER NOT FOUND
         MVI   3(R1),4             IGNORE THE ABEND
         BR    R14
DSNIPS   CLI   DA08MNM,C' '        NOT PDS, WAS MEMBER SPECIFIED
         BNE   ERRPDSN             YES, ERROR
DSNIOK   EQU   *
DSNINEXT CLI   24(R4),X'FF'        IS THERE ANOTHER DSNAME
         BNE   INNLOOP             YES, BRANCH
         SPACE
************************************************************
*                                                          *
*         CONCATENATE IF THERE WAS MORE THAN ONE           *
*                                                          *
************************************************************
         SPACE
INNCON   LA    R6,CONIDAPB
         USING DAPB0C,R6
         XC    0(12,R6),0(R6)
         MVI   DA0CCD+1,X'0C'
         LH    R1,CONINUM          NUMBER OF DDNAMES
         CH    R1,=H'1'            IS THERE ONLY ONE DDNAME
         BE    INNCONX             YES, BYPASS CONCAT
         STH   R1,DA0CNUMB
         LA    R1,MYDAPL
         USING DAPL,R1
         ST    R6,DAPLDAPB
         DROP  R6                  DAPB0C
         BAL   R14,CALLDAIR        CONCATENATE SYSIN'S
         LTR   R15,R15
         BNZ   ERRDAIR
         MVI   CONISW,1            INDICATE CONCATENATED
*        CLI   MSGKW+1,2           MSGD
*        BNE   *+8                 NO
*        MVI   MSGKW+1,1           DISPLAY PRINT AND OBJECT NAMES
INNCONX  MVC   DDIN,CONIDAPB+12
         LA    R1,MYDAPL
         ST    R5,DAPLDAPB         RESTORE MYDAPL ADDRESS
         DROP  R1                  DAPL
INNX     EQU   *
         SPACE
************************************************************
*                                                          *
*        ALLOCATE THE SYSTERM FILE TO THE TERMINAL         *
*                                                          *
************************************************************
         SPACE
         CLI   TERMKW+1,2          NOTERM
         BE    TERMX               BRANCH IF NOTERM
         USING DAPB1C,R5
         MVC   DA1CCD(MODEL1CL),MODEL1C
         BAL   R14,CALLDAIR        ALLOCATE SYSTERM
         LTR   R15,R15
         BNZ   ERRDAIR
         MVC   DDTERM,DA1CDDN
         DROP  R5                  DAPB1C
TERMX    EQU   *
         SPACE
************************************************************
*                                                          *
*         DETERMINE WHERE SYSPRINT GOES                    *
*                                                          *
************************************************************
         SPACE
         CLI   PRINTKW+1,3         IS NOPRINT SPECIFIED
         BE    PRINTDUM            YES, BRANCH
         CLI   PRINTKW+1,4         IS SYSOUT SPECIFIED
         BE    PRINTSOU            YES, BRANCH
         CLI   PRINTKW+1,5         IS PFILE SPECIFIED
         BE    PRINTFIL            YES, BRANCH
         MVC   DSNAMEP(46),DSNNULL
         LA    R4,DSNP
         TM    6(R4),X'80'         DSNAME PRESENT
         BO    PRINTNME            YES, BRANCH
         TM    14(R4),X'80'        MEMBER PRESENT
         BZ    PRINTGEN            NO, GENERATE A DSNAME
         B     PRINTDS
PRINTNME L     R15,0(,R4)          POINT TO DSNAME
         CLI   0(R15),C'*'         TERMINAL
         BE    PRINTERM            YES, BRANCH
         B     PRINTDS             NO, ITS A DSNAME
         SPACE
************************************************************
*                                                          *
*         GENERATE A NAME FOR THE PRINT DATA SET           *
*                                                          *
************************************************************
         SPACE
PRINTGEN EQU   *
         TM    DSNHQ,X'40'         WAS SYSIN NAME NONSTANDARD
         BO    PRINTGDF            YES, USE DEFAULT
         MVC   DSNAMEP(46),DSNAMEH
         MVC   MEMP(10),MEMH
         LH    R1,DSNAMEP          GET LENGTH OF INPUT DSNAME
         SH    R1,=H'5'            MINUS LENGTH OF .FORT
         LA    R15,DSNAMEP+2(R1)   POINT TO .FORT
         MVC   0(5,R15),=C'.LIST'  REPLACE IT WITH .LIST
         AH    R1,=H'5'            NEW LENGTH
         STH   R1,DSNAMEP          STORE NEW LENGTH
         CH    R1,=H'44'           TOO LONG
         BH    PRINTGDF            YES, BRANCH
         MVC   DSNAMEQ(46),DSNAMEP
         MVC   MEMBER(10),MEMP
         MVC   PSWD,BLANKS
         B     DSNPA
PRINTGDF LA    R4,DSNPPDE          POINT TO DEFAULT PDE
         XC    0(20,R4),0(R4)      CLEAR IT
         LA    R1,DSNPOPB          POINT TO DEFAULT OPERAND BUFFER
         ST    R1,0(,R4)
         MVC   0(4,R1),=C'TEMP'    DEFAULT PRINT(TEMP)
         MVI   5(R4),4             LENGTH 4
         CLI   MSGKW+1,3           IS NOMSG SPECIFIED
         BE    *+8                 YES,
         MVI   MSGKW+1,1           NO, FORCE MSG FOR DEFAULT NAMES
         SPACE
************************************************************
*                                                          *
*        ALLOCATE THE SYSPRINT FILE (DATA SET)             *
*                                                          *
************************************************************
         SPACE
PRINTDS  LH    R1,4(,R4)           GET LENGTH OF DSNAME
         LTR   R1,R1               IS LENGTH ZERO
         BZ    DSNP1               YES, BRANCH
         STH   R1,DSNAMEP          DSN LENGTH IN DAIR BUFFER
         L     R15,0(,R4)          GET ADDRESS OF DSNAME
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED INS
         MVC   DSNAMEP+2(0),0(R15) (EXECUTED)
         EX    R1,*-6              MOVE DSNAME TO DAIR BUFFER
DSNP1    EQU   *
         MVC   DSNAMEQ(46),DSNAMEP
         TM    6(R4),X'40'         IS DSNAME IN QUOTES?
         BO    *+14                YES, BYPASS DEFAULT SERVICE
         MVC   MYQUAL,=CL8'LIST'
         BAL   R14,QUALIFY         NO, QUALIFY THE DSNAME
         SPACE
         MVC   MEMP(10),MEMNULL
         TM    14(R4),X'80'        MEMBER NAME SPECIFIED?
         BZ    DSNP2               NO, BRANCH
         LH    R1,12(,R4)          YES, GET LENGTH OF MEMBER
         LTR   R1,R1               LENGTH ZERO
         BZ    DSNP2               YES, BRANCH
         STH   R1,MEMP             STORE LENGTH
         L     R15,08(,R4)         GET ADDRESS OF MEMBER
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED INST
         MVC   MEMP+2(0),0(R15)    (EXECUTED)
         EX    R1,*-6              MOVE MEMBER TO DAPB
DSNP2    EQU   *
         MVC   MEMBER(10),MEMP
         SPACE
         TM    22(R4),X'80'        DSNAME/PASSWORD SPECIFIED?
         BZ    DSNP3               NO, BRANCH
         LH    R1,20(,R4)          YES, GET LENGTH OF PASSWORD
         LTR   R1,R1               LENGTH ZERO
         BZ    DSNP3               YES, BRANCH
         L     R15,16(,R4)         GET ADDRESS OF PASSWORD
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED INST
         MVC   PSWD(0),0(R15)      (EXECUTED)
         EX    R1,*-6              MOVE PASSWORD TO DAPB
DSNP3    EQU   *
         SPACE
DSNPA    LA    R5,MYDAPB           POINT TO DAIR PARAMETER BLOCK
         USING DAPB08,R5
         MVC   DA08CD(84),MODEL08  MOVE 08 MODEL DAPB
         LA    R0,DSNAMEQ
         ST    R0,DA08PDSN
         MVC   DA08MNM,MEMBER+2
         MVC   DA08PSWD,PSWD
         XC    PSWD,PSWD
         OI    DA08DSP1,DA08OLD    DISP=OLD
         CLI   MODKW+1,1           MOD REQUESTED
         BNE   *+8                 NO
         MVI   DA08DSP1,DA08MOD    YES
         BAL   R14,CALLDAIR        ALLOCATE PRINT DATA SET
         XC    DA08PSWD,DA08PSWD
         LTR   R15,R15             WAS ALLOCATE SUCCESSFUL
         BNZ   DSNPNEW             NO, GO CREATE A DATA SET
         MVC   DDPRINT,DA08DDN
         SPACE
         TM    DA08DSO,X'02'       IS IT A PDS
         BZ    DSNPPS              NO, BRANCH
         CLI   DA08MNM,C' '        YES, WAS MEMBER SPECIFIED
         BNE   DSNPOK              YES, BRANCH
         B     ERRPDS              ERROR, MEMBER NAME OMITTED
DSNPPS   CLI   DA08MNM,C' '        NOT PDS, WAS MEMBER SPECIFIED
         BNE   ERRPDSN             YES, ERROR
DSNPOK   EQU   *
         SPACE
         CLI   MSGKW+1,1
         BNE   PRINTX
         LA    R15,MSGWK
         BAL   R14,DSNOUT
         MVC   0(24,R15),=C' WILL BE USED FOR PRINT '
         LA    R15,24(,R15)
         LA    R1,MSGWK
         LR    R0,R15
         SR    R0,R1
         BAL   R14,PUTMSG
         B     PRINTX
         SPACE
DSNPNEW  CH    R15,=H'8'           IS DAIR RETURN CODE 8
         BE    DSNPNEW1            YES, BRANCH
         B     ERRDAIR             NO, UNRECOVERABLE PROBLEM
DSNPNEW1 CLC   DA08DARC(4),=X'17080008' WAS IT BECAUSE NOT IN CATALOG
         BNE   ERRDAIR             NO, UNRECOVERABLE PROBLEM
         MVI   DA08DSP1,DA08NEW
         MVI   DA08DPS2,DA08CAT
         MVI   DA08DPS3,DA08CATL
         MVC   DA08PQTY,=F'03'
         MVC   DA08SQTY,=F'07'
         OI    DA08CTL,DA08TRKS
*        MVC   DA08BLK,=F'2420'
         CLI   DA08MNM,C' '        IS MEMBER SPECIFIED
         BE    *+10                NO
         MVC   DA08DQTY,=F'1'      YES, DIRECTORY SPACE
         BAL   R14,CALLDAIR        ALLOCATE PRINT DATA SET NEW
         LTR   R15,R15             WAS ALLOCATE SUCCESSFUL
         BNZ   ERRDAIR             NO, UNRECOVERABLE ERROR
         MVC   DDPRINT,DA08DDN
         SPACE
         CLI   MSGKW+1,1           MSG
         BNE   PRINTX              NO, BRANCH
         LA    R15,MSGWK
         BAL   R14,DSNOUT
         MVC   0(27,R15),=C' HAS BEEN CREATED FOR PRINT'
         LA    R15,27(,R15)
         LA    R1,MSGWK
         LR    R0,R15
         SR    R0,R1
         BAL   R14,PUTMSG
         B     PRINTX
         SPACE
         DROP  R5                  DAPB08
         SPACE
************************************************************
*                                                          *
*        ALLOCATE THE SYSPRINT FILE (DUMMY)                *
*                                                          *
************************************************************
         SPACE
         USING DAPB08,R5
PRINTDUM MVI   SOURCEKW+1,2        FORCE NOSOURCE
         MVC   DA08CD(84),MODEL08
         OI    DA08CTL,DA08DMMY
         BAL   R14,CALLDAIR        ALLOCATE PRINT DUMMY
         LTR   R15,R15
         BNZ   ERRDAIR
         MVC   DDPRINT,DA08DDN
         B     PRINTX
         DROP  R5                  DAPB08
         SPACE
************************************************************
*                                                          *
*        ALLOCATE THE SYSPRINT FILE TO THE TERMINAL        *
*                                                          *
************************************************************
         SPACE
         USING DAPB1C,R5
PRINTERM MVC   DA1CCD(MODEL1CL),MODEL1C
         BAL   R14,CALLDAIR        ALLOCATE PRINT TERMINAL
         LTR   R15,R15
         BNZ   ERRDAIR
         MVC   DDPRINT,DA1CDDN
         DROP  R5                  DAPB1C
         B     PRINTX
         SPACE
************************************************************
*                                                          *
*        ALLOCATE THE SYSPRINT FILE TO SYSOUT              *
*                                                          *
************************************************************
         SPACE
         USING DAPB30,R5
PRINTSOU LA    R4,CLASS
         MVI   SOUT,C' '
         L     R1,0(,R4)
         TM    6(R4),X'80'
         BZ    *+10
         MVC   SOUT,0(R1)          SAVE SYSOUT CLASS FOR UNALLOCATE
         OI    SOUT,X'40'
         MVC   DA30CD(MODEL30L),MODEL30
         BAL   R14,CALLDAIR        ALLOCATE PRINT SYSOUT
         LTR   R15,R15
         BNZ   ERRDAIR
         MVC   DDPRINT,DA30DDN
         MVI   FREEOPT,1           FREE DDPRINT WITH CLASS
         DROP  R5                  DAPB30
         B     PRINTX
         SPACE
************************************************************
*                                                          *
*         USE SPECIFIED DDNAME FOR SYSPRINT                *
*                                                          *
************************************************************
         SPACE
PRINTFIL LA    R4,PFILE
         TM    6(R4),X'80'         PFILE PRESENT?
         BZ    PRINTX              NO, USE SYSPRINT
         LH    R1,4(,R4)           GET LENGTH
         L     R15,0(,R4)
         MVC   DDPRINT,BLANKS
         BCTR  R1,0
         B     *+10
         MVC   DDPRINT(0),0(R15)
         EX    R1,*-6
         MVI   FREEOPT,2           DO NOT FREE DDPRINT
         B     PRINTX
         SPACE
PRINTX   EQU   *
         SPACE
************************************************************
*                                                          *
*         GENERATE A NAME FOR THE OBJECT DATA SET          *
*                                                          *
************************************************************
         SPACE
         CLI   OBJKW+1,3           LOAD SPECIFIED
         BNE   *+8                 NO, BRANCH
         MVI   OBJKW+1,1           YES, MAKE IT OBJ
         CLI   OBJKW+1,4           NOLOAD SPECIFIED
         BNE   *+8                 NO, BRANCH
         MVI   OBJKW+1,2           YES, MAKE IT NOOBJ
         CLI   OBJKW+1,1           OBJ SPECIFIED
         BNE   OBJX                NO, BRANCH
         MVC   DSNAMEO(46),DSNNULL
         LA    R4,DSNO
         TM    6(R4),X'80'         IS A NAME SPECIFIED
         BO    OBJDS               YES, BRANCH
         TM    14(R4),X'80'        IS A MEMBER SPECIFIED
         BO    OBJDS               YES, BRANCH
         SPACE
         TM    DSNHQ,X'40'         WAS SYSIN NAME NONSTANDARD
         BO    OBJGENDF            YES, BRANCH
         MVC   DSNAMEO(46),DSNAMEH
         MVC   MEMO(10),MEMH
         LH    R1,DSNAMEO          GET LENGTH OF INPUT DSNAME
         SH    R1,=H'5'            MINUS LENGTH OF .FORT
         LA    R15,DSNAMEO+2(R1)   POINT TO .FORT
         MVC   0(4,R15),=C'.OBJ'   REPLACE IT WITH .OBJ
         AH    R1,=H'4'            NEW LENGTH  (SAME LENGTH)
         STH   R1,DSNAMEO          STORE NEW LENGTH
*        CH    R1,=H'44'           TOO LONG
*        BH    OBJGENDF            YES, BRANCH
         MVC   DSNAMEQ(46),DSNAMEO
         MVC   MEMBER(10),MEMO
         MVC   PSWD,BLANKS
         B     DSNOA
OBJGENDF LA    R4,DSNOPDE          POINT TO DEFAULT PDE
         XC    0(20,R4),0(R4)      CLEAR IT
         LA    R1,DSNOOPB          POINT TO DEFAULT OPERAND BUFFER
         ST    R1,0(,R4)
         MVC   0(4,R1),=C'TEMP'    DEFAULT OBJECT(TEMP)
         MVI   5(R4),4             LENGTH 4
         CLI   MSGKW+1,3           IS NOMSG SPECIFIED
         BE    *+8                 YES,
         MVI   MSGKW+1,1           NO, FORCE MSG
         SPACE
************************************************************
*                                                          *
*        ALLOCATE THE OBJECT DATA SET                      *
*                                                          *
************************************************************
         SPACE
OBJDS    LH    R1,4(,R4)           GET LENGTH OF DSNAME
         LTR   R1,R1               IS LENGTH ZERO
         BZ    DSNO1               YES, BRANCH
         STH   R1,DSNAMEO          DSN LENGTH IN DAIR BUFFER
         L     R15,0(,R4)          GET ADDRESS OF DSNAME
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED INS
         MVC   DSNAMEO+2(0),0(R15) (EXECUTED)
         EX    R1,*-6              MOVE DSNAME TO DAIR BUFFER
DSNO1    EQU   *
         MVC   DSNAMEQ(46),DSNAMEO
         TM    6(R4),X'40'         IS DSNAME IN QUOTES?
         BO    *+14                YES, BYPASS DEFAULT SERVICE
         MVC   MYQUAL,=CL8'OBJ'
         BAL   R14,QUALIFY         NO, QUALIFY THE DSNAME
         SPACE
         MVC   MEMO(10),MEMNULL
         TM    14(R4),X'80'        MEMBER NAME SPECIFIED?
         BZ    DSNO2               NO, BRANCH
         LH    R1,12(,R4)          YES, GET LENGTH OF MEMBER
         LTR   R1,R1               LENGTH ZERO
         BZ    DSNO2               YES, BRANCH
         STH   R1,MEMO             STORE LENGTH
         L     R15,08(,R4)         GET ADDRESS OF MEMBER
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED INST
         MVC   MEMO+2(0),0(R15)    (EXECUTED)
         EX    R1,*-6              MOVE MEMBER TO DAPB
DSNO2    EQU   *
         MVC   MEMBER(10),MEMO
         SPACE
         TM    22(R4),X'80'        DSNAME/PASSWORD SPECIFIED?
         BZ    DSNO3               NO, BRANCH
         LH    R1,20(,R4)          YES, GET LENGTH OF PASSWORD
         LTR   R1,R1               LENGTH ZERO
         BZ    DSNO3               YES, BRANCH
         L     R15,16(,R4)         GET ADDRESS OF PASSWORD
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED INST
         MVC   PSWD(0),0(R15)      (EXECUTED)
         EX    R1,*-6              MOVE PASSWORD TO DAPB
DSNO3    EQU   *
         SPACE
DSNOA    LA    R5,MYDAPB           POINT TO DAIR PARAMETER BLOCK
         USING DAPB08,R5
         MVC   DA08CD(84),MODEL08  MOVE 08 MODEL DAPB
         LA    R0,DSNAMEQ
         ST    R0,DA08PDSN
         MVC   DA08MNM,MEMBER+2
         MVC   DA08PSWD,PSWD
         XC    PSWD,PSWD
         OI    DA08DSP1,DA08OLD    DISP=OLD
         CLI   MODKW+1,1           MOD REQUESTED
         BNE   *+8                 NO
         MVI   DA08DSP1,DA08MOD    YES
         BAL   R14,CALLDAIR        ALLOCATE OBJECT DATA SET
         LTR   R15,R15             WAS ALLOCATE SUCCESSFUL
         BNZ   DSNONEW             NO, BRANCH
         MVC   DDLIN,DA08DDN
         SPACE
         TM    DA08DSO,X'02'       IS IT A PDS
         BZ    DSNOPS              NO, BRANCH
         CLI   DA08MNM,C' '        YES, WAS MEMBER SPECIFIED
         BNE   DSNOOK              YES, BRANCH
         B     ERRPDS              ERROR, MEMBER NAME OMITTED
DSNOPS   CLI   DA08MNM,C' '        NOT PDS, WAS MEMBER SPECIFIED
         BNE   ERRPDSN             YES, ERROR
DSNOOK   EQU   *
         SPACE
         CLI   MSGKW+1,1
         BNE   OBJX
         LA    R15,MSGWK
         BAL   R14,DSNOUT
         MVC   0(24,R15),=C' WILL BE USED FOR OBJECT'
         LA    R15,24(,R15)
         LA    R1,MSGWK
         LR    R0,R15
         SR    R0,R1
         BAL   R14,PUTMSG
         B     OBJX
         SPACE
DSNONEW  CH    R15,=H'8'           IS DAIR RETURN CODE 8
         BE    DSNONEW1            YES, BRANCH
         B     ERRDAIR             NO, UNRECOVERABLE PROBLEM
DSNONEW1 CLC   DA08DARC(4),=X'17080008' WAS IT BECAUSE NOT IN CATALOG
         BNE   ERRDAIR             NO, UNRECOVERABLE PROBLEM
         MVI   DA08DSP1,DA08NEW
         MVI   DA08DPS2,DA08CAT
         MVI   DA08DPS3,DA08CATL
         MVC   DA08PQTY,=F'01'
         MVC   DA08SQTY,=F'07'
         OI    DA08CTL,DA08TRKS
         MVC   DA08BLK,=F'800'
         CLI   DA08MNM,C' '        IS MEMBER SPECIFIED
         BE    *+10                NO
         MVC   DA08DQTY,=F'1'      YES, DIRECTORY SPACE
         BAL   R14,CALLDAIR        ALLOCATE PRINT DATA SET NEW
         LTR   R15,R15             WAS ALLOCATE SUCCESSFUL
         BNZ   ERRDAIR             NO, BRANCH
         MVC   DDLIN,DA08DDN
         SPACE
         CLI   MSGKW+1,1           MSG
         BNE   OBJX                NO, BRANCH
         LA    R15,MSGWK
         BAL   R14,DSNOUT
         MVC   0(28,R15),=C' HAS BEEN CREATED FOR OBJECT'
         LA    R15,28(,R15)
         LA    R1,MSGWK
         LR    R0,R15
         SR    R0,R1
         BAL   R14,PUTMSG
         SPACE
OBJX     EQU   *
         DROP  R5                  DAPB08
         SPACE
         AIF   (NOT &H).HH01       BYPASS SYSUT1 SYSUT2
         SPACE
************************************************************
*                                                          *
*        ALLOCATE SYSUT1 WORK SPACE                        *
*                                                          *
************************************************************
         SPACE
         LA    R5,MYDAPB           POINT TO DAIR PARAMETER BLOCK
         USING DAPB08,R5
         MVC   DA08CD(84),MODEL08  MOVE 08 MODEL DAPB
         MVC   DSNAMEQ(46),UT1DSN
         LA    R0,DSNAMEQ
         ST    R0,DA08PDSN
         MVC   DA08UNIT,BLANKS
         MVI   DA08PQTY+3,10       10 TRACKS
         MVI   DA08SQTY+3,10       10 TRACKS
         MVI   DA08DSP1,DA08NEW
         OI    DA08CTL,DA08TRKS
         BAL   R14,CALLDAIR        ALLOCATE SYSUT1 WORK FILE
         LTR   R15,R15
         BNZ   ERRDAIR
         MVC   DDUT1,DA08DDN
         SPACE
         DROP  R5                  DAPB08
         SPACE
************************************************************
*                                                          *
*        ALLOCATE SYSUT2 WORK SPACE                        *
*                                                          *
************************************************************
         SPACE
         LA    R5,MYDAPB           POINT TO DAIR PARAMETER BLOCK
         USING DAPB08,R5
         MVC   DA08CD(84),MODEL08  MOVE 08 MODEL DAPB
         MVI   DSNAMEQ+2+3,C'2'    CHANGE &UT1 TO &UT2
         LA    R0,DSNAMEQ
         ST    R0,DA08PDSN
         MVC   DA08UNIT,BLANKS
         MVI   DA08PQTY+3,10       10 TRACKS
         MVI   DA08SQTY+3,10       10 TRACKS
         MVI   DA08DSP1,DA08NEW
         OI    DA08CTL,DA08TRKS
         BAL   R14,CALLDAIR
         LTR   R15,R15
         BNZ   ERRDAIR
         MVC   DDUT2,DA08DDN
         SPACE
         DROP  R5                  DAPB08
.HH01    ANOP
         SPACE
************************************************************
*                                                          *
*        BUILD COMPILER PARMS                              *
*                                                          *
************************************************************
         SPACE
         LA    R15,PARMLEN+1
         SPACE
         APPEND NODECK                  ALWAYS
         SPACE
         CLI   SOURCEKW+1,1             SOURCE
         BNE   *+14
         APPEND SOURCE
         SPACE
         CLI   SOURCEKW+1,2             NOSOURCE
         BNE   *+14
         APPEND NOSOURCE
         SPACE
         CLI   LISTKW+1,1               LIST
         BNE   *+14
         APPEND LIST
         SPACE
         CLI   LISTKW+1,2               NOLIST
         BNE   *+14
         APPEND NOLIST
         SPACE
         CLI   TERMKW+1,1               TERM
         BNE   *+14
         APPEND TERM
         SPACE
         CLI   TERMKW+1,2               NOTERM
         BNE   *+14
         APPEND NOTERM
         SPACE
         CLI   IDKW+1,1                 ID
         BNE   *+14
         APPEND ID
         SPACE
         CLI   IDKW+1,2                 NOID
         BNE   *+14
         APPEND NOID
         SPACE
         CLI   MAPKW+1,1                MAP
         BNE   *+14
         APPEND MAP
         SPACE
         CLI   MAPKW+1,2                NOMAP
         BNE   *+14
         APPEND NOMAP
         SPACE
         CLI   CHARKW+1,1               EBCDIC
         BNE   *+14
         APPEND EBCDIC
         SPACE
         CLI   CHARKW+1,2               BCD
         BNE   *+14
         APPEND BCD
         SPACE
         CLI   TESTKW+1,1               TEST
         BNE   *+14
         APPEND TEST
         SPACE
         CLI   TESTKW+1,2               NOTEST
         BNE   *+14
         APPEND NOTEST
         SPACE
         AIF   (&H).HH02                SKIP G1 PARMS
         SPACE
         CLI   OBJKW+1,1                LOAD
         BNE   *+14
         APPEND LOAD
         SPACE
         CLI   OBJKW+1,2                NOLOAD
         BNE   *+14
         APPEND NOLOAD
         SPACE
         CLI   NAMEKW+1,1               NAME=X
         BNE   NAMEXG
         APPEND NAMEG
         L     R14,NAME
         LH    R1,NAME+4
         LTR   R1,R1                    IS IT NULL STRING
         BZ    NAMEXG                   YES, BRANCH
         BCTR  R1,0
         B     *+10
         MVC   0(0,R15),0(R14)
         EX    R1,*-6
         LA    R15,1(R1,R15)
NAMEXG   EQU   *
         SPACE
         CLI   LINEKW+1,1               LINECNT=NN
         BNE   LINEXG
         APPEND LINECNT
         L     R14,LINE
         LH    R1,LINE+4
         BCTR  R1,0
         B     *+10
         MVC   0(0,R15),0(R14)
         EX    R1,*-6
         LA    R15,1(R1,R15)
LINEXG   EQU   *
         SPACE
         AGO   .HH02A                   SKIP HX PARMS
.HH02    ANOP
         SPACE
         CLI   OBJKW+1,1                OBJECT
         BNE   *+14
         APPEND OBJECT
         SPACE
         CLI   OBJKW+1,2                NOOBJECT
         BNE   *+14
         APPEND NOOBJECT
         SPACE
         CLI   XREFKW+1,1               XREF
         BNE   *+14
         APPEND XREF
         SPACE
         CLI   XREFKW+1,2               NOXREF
         BNE   *+14
         APPEND NOXREF
         SPACE
         CLI   FLAGKW+1,1               FLAG(0)
         BNE   FLAGX
         APPEND FLAG
         L     R14,FLAGLV
         LH    R1,FLAGLV+4
         BCTR  R1,0
         B     *+10
         MVC   0(0,R15),0(R14)
         EX    R1,*-6
         LA    R15,1(R1,R15)
         MVI   0(R15),C')'
         LA    R15,1(,R15)
FLAGX    EQU   *
         SPACE
         CLI   NAMEKW+1,1               NAME(X)
         BNE   NAMEX
         APPEND NAME
         L     R14,NAME
         LH    R1,NAME+4
         LTR   R1,R1                    IS IT NULL STRING
         BZ    NAMEN                    YES, BRANCH
         BCTR  R1,0
         B     *+10
         MVC   0(0,R15),0(R14)
         EX    R1,*-6
         LA    R15,1(R1,R15)
NAMEN    MVI   0(R15),C')'
         LA    R15,1(,R15)
NAMEX    EQU   *
         SPACE
         CLI   LINEKW+1,1               LINECOUNT(55)
         BNE   LINEX
         APPEND LINCOUNT
         L     R14,LINE
         LH    R1,LINE+4
         BCTR  R1,0
         B     *+10
         MVC   0(0,R15),0(R14)
         EX    R1,*-6
         LA    R15,1(R1,R15)
         MVI   0(R15),C')'
         LA    R15,1(,R15)
LINEX    EQU   *
         SPACE
         CLI   GOSTMTKW+1,1             GOSTMT
         BNE   *+14
         APPEND GOSTMT
         SPACE
         CLI   GOSTMTKW+1,2             NOGOSTMT
         BNE   *+14
         APPEND NOGOSTMT
         SPACE
.HH02A   ANOP
         SPACE
         B     ENDPARMS
         SPACE
ID       DC    C',ID'
NOID     DC    C',NOID'
MAP      DC    C',MAP'
NOMAP    DC    C',NOMAP'
DECK     DC    C',DECK'
NODECK   DC    C',NODECK'
SOURCE   DC    C',SOURCE'
NOSOURCE DC    C',NOSOURCE'
LIST     DC    C',LIST'
NOLIST   DC    C',NOLIST'
TERM     DC    C',TERM'
NOTERM   DC    C',NOTERM'
EBCDIC   DC    C',EBCDIC'
BCD      DC    C',BCD'
TEST     DC    C',TEST'
NOTEST   DC    C',NOTEST'
         AIF   (&H).HH03
LOAD     DC    C',LOAD'
NOLOAD   DC    C',NOLOAD'
LINECNT  DC    C',LINECNT='
NAMEG    DC    C',NAME='
         AGO   .HH03A
.HH03    ANOP
OBJECT   DC    C',OBJECT'
NOOBJECT DC    C',NOOBJECT'
XREF     DC    C',XREF'
NOXREF   DC    C',NOXREF'
FLAG     DC    C',FLAG('
NAME     DC    C',NAME('
LINCOUNT DC    C',LINECOUNT('
GOSTMT   DC    C',GOSTMT'
NOGOSTMT DC    C',NOGOSTMT'
.HH03A   ANOP
         SPACE
ENDPARMS LA    R14,PARMLEN+2       ADDRESS FIRST BYTE OF PARM DATA
         SR    R15,R14             COMPUTE LENGTH OF PARM DATA
         BNP   *+8                 SHOULD ALWAYS BE POSITIVE
         STH   R15,PARMLEN         SET LENGTH PREFIX IN PARM FIELD
         SPACE
         LA    R1,PARMPTR          GET ADDRESS OF PARAMETER LIST
         LA    R15,PARMLEN         GET ADDRESS OF PARM FIELD
         ST    R15,0(,R1)          STORE IT AS FIRST PARAMETER
         LA    R15,DDNAMES         GET ADDRESS OF DDNAMES
         ST    R15,4(,R1)          STORE IT AS SECOND PARAMETER
         OI    4(R1),X'80'         FLAG SECOND PARAMETER AS LAST
         LA    R14,DDLEN           GET LENGTH OF DDNAME LIST
         STH   R14,0(,R15)         STORE IT IN FIRST HALFWORD
         SPACE
         CLI   SHOWKW+1,1
         BNE   SHOWX
         LA    R1,PARMLEN+2
         LH    R0,PARMLEN
         BAL   R14,PUTLINE
SHOWX    EQU   *
         SPACE
*                                  FREE THE SPACE GETMAINED BY PARSE
         IKJRLSA MYANS
         XC    MYANS,MYANS         INDICATE PARSE SPACE IS FREED
         SPACE
         MVC   PDSDCBW(PDSDCBL),PDSDCB  SO SECOND LOAD WONT NEED MODEL
         SPACE
         CLI   XCTLKV+1,1          ARE WE GOING TO XCTL
         BNE   STAYHERE            NO, BRANCH
         SPACE
         L     R13,4(,R13)         POINT BACK TO OLD SAVEAREA
         LR    R1,R9               PASS THE GETMAINED AREA
         MVC   LINKNAME,=CL8'&NAME2'
         XCTL  EPLOC=LINKNAME,SF=(E,LINKAREA)
         SPACE
STAYHERE EQU   *
.BETA03  ANOP
         EJECT
************************************************************
*                                                          *
*         SET UP AN ESTAE EXIT WHILE COMPILING             *
*                                                          *
************************************************************
         SPACE
         LA    R6,STAEEXIT         POINT TO ESTAE EXIT
         LA    R1,STAEMFLW         POINT TO LIST FORM OF ESTAE
         MVC   0(STAEMFLL,R1),STAEMFL  INITIALIZE IT
         SPACE
         ESTAE (R6),PARAM=(R9),MF=(E,(1))
         SPACE
************************************************************
*                                                          *
*         IF DDNAME FORTLIB IS AROUND, USE IT              *
*                                                          *
************************************************************
         SPACE
         SLR   R6,R6               INDICATE NO DCB
         L     R1,16               CVTPTR
         L     R1,0(,R1)           TCB WORDS
         L     R1,4(,R1)           CURRENT TCB
         L     R1,12(,R1)          TIOT
         LA    R1,24(,R1)          TIOT+24
DDLOOP   CLI   0(R1),0             END OF TIOT
         BE    DDNOTF              YES, BRANCH
         CLC   4(8,R1),=CL8'FORTLIB'
         BE    DDFOUND
         SLR   R15,R15
         IC    R15,0(,R1)
         LA    R1,0(R15,R1)
         B     DDLOOP
DDFOUND  L     R15,16(,R1)         TIOEFSRT-1
         CLI   18(R15),X'20'       DASD
         BNE   DDNOTF
         LA    R6,PDSDCBW
         MVC   DDNAM(8,R6),4(R1)   PUT DDNAME IN DCB
         MVI   OPEN,X'80'
         OPEN  ((R6),INPUT),MF=(E,OPEN)
         TM    OFLGS(R6),X'10'     WAS OPEN SUCCESSFUL
         BO    *+6                 YES
         SR    R6,R6               NO
DDNOTF   EQU   *
         SPACE
************************************************************
*                                                          *
*         INVOKE THE COMPILER                              *
*                                                          *
************************************************************
         SPACE
         AIF   (&H).HH04
         MVC   LINKNAME,=CL8'IGIFORT'
         LA    R1,=C'FORTRAN G1 PROCEEDING'
         LA    R0,21
         AGO   .HH04A
.HH04    ANOP
         MVC   LINKNAME,=CL8'IFEAAB'
         LA    R1,=C'FORTRAN H(X) PROCEEDING'
         LA    R0,23
.HH04A   ANOP
         BAL   R14,PUTLINE
         SPACE
         BAL   R14,STIMER          START TIMING THE COMPILER
         SPACE
         CLI   DEBUGKV+1,1         DEBUGGING?
         BE    *+8                 YES, LET ABENDS ABEND
         MVI   STAEOPT,1           NO, TRY TO RECOVER
         LA    R1,PARMPTR
         SPACE
         LINK  EPLOC=LINKNAME,SF=(E,LINKAREA),DCB=(R6)
         SPACE
         STH   R15,RC
         MVI   STAEOPT,0           TURN RECOVERY OFF
         BAL   R14,TTIMER          STOP TIMING THE COMPILER
         SPACE
         ESTAE 0                   CANCEL THE ESTAE
         SPACE
         LTR   R6,R6               WAS THERE A DCB
         BZ    LINKRC              NO
         MVI   OPEN,X'80'          YES, CLOSE IT
         CLOSE ((R6)),MF=(E,OPEN)
         XC    LINKAREA(8),LINKAREA
LINKRC   LH    R15,RC
         LTR   R15,R15
         BNZ   ERRLINK
         B     EXIT0
         SPACE
************************************************************
*                                                          *
*         COMPUTE CPU TIME USED BY COMPILER                *
*                                                          *
************************************************************
         SPACE
STIMER   CLI   TIMEKV+1,2          NOTIME
         BER   R14
         ST    R14,TTIMERS
         LA    R1,INTERVAL
         STIMER TASK,TUINTVL=(1)
         L     R14,TTIMERS
         BR    R14
         SPACE
TTIMER   CLI   TIMEKV+1,2          NOTIME
         BER   R14
         STM   R14,R15,TTIMERS
         TTIMER CANCEL
         LTR   R0,R0               ANYTHING IN R0?
         BZ    CPUX                NO, BRANCH
         L     R1,INTERVAL
         SR    R1,R0               GET ELAPSED CPU TIME (IN TU'S)
         M     R0,=F'2604166'      NUMBER OF .00001 MICROSECONDS
         D     R0,=F'1000000000'   HUNDREDTHS OF A SECOND
         C     R0,=F'0500000000'   ROUND UP IF REMAINDER GT HALF
         BNH   *+8
         A     R1,=F'1'
         MVI   MSGWK,C' '
         MVC   MSGWK+1(L'MSGWK-1),MSGWK
         MVC   MSGWK(9),=C'CPU TIME:'
         LA    R15,MSGWK+10
         CVD   R1,DOUBLE
         MVC   0(9,R15),=X'4020202021204B2020'
         ED    0(9,R15),DOUBLE+4
CPUSUP1  CLI   0(R15),C' '
         BNE   CPUSUP1A
         MVC   0(8,R15),1(R15)     LEFT ADJUST
         MVI   8(R15),C' '
         B     CPUSUP1
CPUSUP1A CLI   0(R15),C' '
         BE    CPUSUP1B
         LA    R15,1(,R15)
         B     CPUSUP1A
CPUSUP1B MVC   1(7,R15),=C'SECONDS'
         LA    R15,8(,R15)
         LR    R0,R15              POINT PAST LAST BYTE OF MESSAGE
         LA    R1,MSGWK            POINT TO MESSAGE
         SR    R0,R1               GET LENGTH OF MESSAGE IN R0
         BAL   R14,PUTLINE
CPUX     LM    R14,R15,TTIMERS
         BR    R14
         SPACE
************************************************************
*                                                          *
*         CALL DYNAMIC ALLOCATION                          *
*                                                          *
************************************************************
         SPACE
CALLDAIR LR    R8,R14
         LA    R1,MYDAPL
         AIF   (NOT &MVS).SKIP4
         L     R15,16              CVTPTR
         TM    732(R15),X'80'      IF HI ORDER BIT NOT ON
         BNO   DAIRLINK               THEN DO LINK, NOT CALL
         L     R15,732(,R15)       CVTDAIR
         BALR  R14,R15             CALL IKJDAIR
         B     DAIREXIT            SKIP AROUND LINK
DAIRLINK EQU   *
.SKIP4   ANOP
         LINK  EP=IKJDAIR,SF=(E,LINKAREA)
DAIREXIT EQU   *
         LR    R14,R8
         BR    R14
         SPACE
         AIF   (&BETA).BETA04
         SPACE
************************************************************
*                                                          *
*         INSERT A DATA SET NAME IN A MESSAGE              *
*                                                          *
************************************************************
         SPACE
DSNOUT   MVC   0(9,R15),=C'DATA SET '
         LA    R15,9(,R15)
         LH    R1,DSNAMEQ
         LTR   R1,R1
         BZ    DSNOUTM
         BCTR  R1,0
         B     *+10
         MVC   0(0,R15),DSNAMEQ+2
         EX    R1,*-6
         LA    R15,1(R1,R15)
         SPACE
DSNOUTM  LH    R1,MEMBER
         LTR   R1,R1
         BZR   R14
         MVI   0(R15),C'('
         BCTR  R1,0
         B     *+10
         MVC   1(0,R15),MEMBER+2
         EX    R1,*-6
         LA    R15,2(R1,R15)
         MVI   0(R15),C')'
         LA    R15,1(,R15)
         BR    R14
         SPACE
.BETA04  ANOP
         SPACE
************************************************************
*                                                          *
*        PUTMSG ROUTINE                                    *
*                                                          *
************************************************************
         SPACE
PUTMSG   STM   R14,R1,MYREGS
         XC    MYOLD(8),MYOLD
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPM
         LA    R14,1               NO. OF MESSAGE SEGMENTS
         ST    R14,MYOLD
         LA    R14,MYSEG1          POINT TO 1ST SEGMENT
         ST    R14,MYOLD+4
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         LA    R15,MYSEG1+4
         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?
         BE    *+16                YES - BRANCH
         LA    R14,1(,R14)         ADD 1 TO LENGTH
         MVI   0(R15),C' '         INSERT LEADING BLANK
         LA    R15,1(,R15)         BUMP POINTER
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,MYREGS
         BR    R14
         SPACE
************************************************************
*                                                          *
*        PUTLINE ROUTINE                                   *
*                                                          *
************************************************************
         SPACE
PUTLINE  STM   R14,R1,MYREGS
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPB
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,MYREGS
         BR    R14
         SPACE
************************************************************
*                                                          *
*         TERMINATION                                      *
*                                                          *
************************************************************
         SPACE
EXIT12   LA    R15,12
         B     EXIT
         SPACE 1
EXIT0    SR    R15,R15             RETURN CODE ZERO
EXIT     STH   R15,RC
         NC    MYANS,MYANS         IS PARSE SPACE FREED
         BZ    EXITRLSA            YES, BRANCH
         IKJRLSA MYANS
         XC    MYANS,MYANS         INDICATE PARSE SPACE IS FREED
EXITRLSA EQU   *
         SPACE
         USING DAPB18,R5
         CLI   DDLIN,0
         BE    FFLIN
         MVC   DA18CD(MODEL18L),MODEL18
         MVC   DA18DDN,DDLIN
         BAL   R14,CALLDAIR
FFLIN    EQU   *
         CLI   DDPRINT,0
         BE    FFPRINT
         CLI   FREEOPT,2           PFILE
         BE    FFPRINT             YES, LEAVE ALLOCATED
         MVC   DA18CD(MODEL18L),MODEL18
         MVC   DA18DDN,DDPRINT
         CLI   FREEOPT,1           SYSOUT?
         BNE   *+10                NO
         MVC   DA18SCLS(1),SOUT    YES, INSERT CLASS
         BAL   R14,CALLDAIR
FFPRINT  EQU   *
         AIF   (NOT &H).HH06
         CLI   DDUT1,0
         BE    FFUT1
         MVC   DA18CD(MODEL18L),MODEL18
         MVC   DA18DDN,DDUT1
         BAL   R14,CALLDAIR
FFUT1    EQU   *
         CLI   DDUT2,0
         BE    FFUT2
         MVC   DA18CD(MODEL18L),MODEL18
         MVC   DA18DDN,DDUT2
         BAL   R14,CALLDAIR
FFUT2    EQU   *
.HH06    ANOP
         CLI   CONINUM+1,1         ANY SYSIN'S ALLOCATED
         BL    FFINPX              NO, BRANCH
         CLI   CONISW,1            HAVE THEY BEEN CONCATENATED
         BNE   FFINPD              NO, BRANCH
         LR    R6,R5
         USING DAPB10,R6
         MVC   DA10CD(MODEL10L),MODEL10
         MVC   DA10DDN,DDIN
         BAL   R14,CALLDAIR        DECONCATENATE
         LTR   R15,R15             WAS IT SUCCESSFUL
         BNZ   FFINPX              NO, BRANCH
         DROP  R6
FFINPD   L     R6,CONIPTR
         LH    R4,CONINUM          GET NUMBER OF DDNAMES
FFINPC   SH    R6,=H'8'
         MVC   DA18CD(MODEL18L),MODEL18
         MVC   DA18DDN,0(R6)
         BAL   R14,CALLDAIR        FREE THE DECONCATENATED DDNAME
         BCT   R4,FFINPC           LOOP FOR NEXT DDNAME
FFINPX   EQU   *
         DROP  R5                  DAPB18
         CLI   RC+1,0              IS RC ZERO?
         BZ    STACKDX             YES, BRANCH
         MVC   MYSTPB(STACKDL),STACKD
         SPACE
         STACK DELETE=ALL,PARM=MYSTPB,MF=(E,MYIOPL)
         SPACE
         TCLEARQ
STACKDX  EQU   *
EXITX    LH    R15,RC
         LR    1,R13               SET UP FREE ADDRESS
         L     R0,SIZE
         L     R13,4(,R13)         RESTORE PREVIOUS SAVEAREA
         ST    R15,16(,R13)        STORE RETURN CODE FOR LM
         FREEMAIN R,A=(1),LV=(0)
         LM    14,12,12(R13)       LOAD RETURN ADDRESS AND RC
         BR    14                  RETURN
         SPACE
************************************************************
*                                                          *
*        CONSTANTS                                         *
*                                                          *
************************************************************
         SPACE
EXLST    EQU   36                  DCB OFFSET
DDNAM    EQU   40                  DCB OFFSET
OFLGS    EQU   48                  DCB OFFSET
INTERVAL DC    F'1658880000'      TIMER UNITS IN 12 HRS APPROX
MODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
MODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
STACKD   STACK DELETE=ALL,MF=L
STACKDL  EQU   *-STACKD
         SPACE
MODEL10  DC    X'0010',XL6'00',CL8' '
MODEL10L EQU   *-MODEL10
MODEL18  DC    X'0018',XL10'0',CL18' ',XL2'0',CL8' '
MODEL18L EQU   *-MODEL18
         AIF   (&BETA).BETA05
MODEL08  DC    AL2(8),XL10'0',CL24' ',XL16'0',CL16' ',XL8'0',CL8' '
MODEL08L EQU   *-MODEL08
MODEL1C  DC    X'001C',XL6'0',CL16' '
MODEL1CL EQU   *-MODEL1C
MODEL30  DC    X'0030',XL10'0',CL24' ',XL12'0',CL14' ',XL2'0',CL8' '
MODEL30L EQU   *-MODEL30
         SPACE
UT1DSN   DC    H'4',CL44'&&UT1'
*              BEWARE IF YOU DONT HAVE PRE-ALLOCATED &SYSUT1,
*              THE 'LINK' COMMAND ALLOCATES A SMALL &SYSUT1
*              AND DOESNT FREE IT, SO A SUBSEQUENT USE OF
*              THIS COMMAND WILL PICK UP THE DATA SET ALLOCATED
*              BY 'LINK' AND THE SPACE WILL NOT BE ENOUGH.
*              THAT IS WHY WE USE &UT1 AND NOT &SYSUT1.
DSNNULL  DC    H'0',CL44' '
MEMNULL  DC    H'0',CL8' '
         PRINT NOGEN
PDSDCB   DCB   DDNAME=DYNAM,DSORG=PO,MACRF=R
PDSDCBL  EQU   *-PDSDCB
         PRINT GEN
.BETA05  ANOP
STAEMFL  ESTAE R0,MF=L
STAEMFLL EQU   *-STAEMFL
         LTORG
BLANKS   DC    CL8' '
         DC    0D'0'
         SPACE
         AIF   (&BETA).BETA06
         SPACE
************************************************************
*                                                          *
*        DYNAMIC ALLOCATION FAILURE ROUTINE                *
*                                                          *
************************************************************
         SPACE
DAIRFAIL ST    R14,MYDFREGS
         LA    R1,MYDFPARM
*        USING DFDSECTD,R1         MAPPED BY IKJEFFDF DFDSECT=YES MACRO
         ST    R15,MYDFRC
         LA    R15,MYDFRC
         ST    R15,4(,R1)          DFRCP
         LA    R15,MYDAPL
         ST    R15,0(,R1)          DFDAPLP
         SLR   R15,R15
         ST    R15,MYJEFF02
         LA    R15,MYJEFF02
         ST    R15,8(,R1)          DFJEFF02
         LA    R15,1               DFDAIR
         STH   R15,MYDFID
         LA    R15,MYDFID
         ST    R15,12(,R1)         DFIDP
         ST    R2,16(,R1)          DFCPPLP
         LINK  EP=IKJEFF18,SF=(E,LINKAREA)
         L     R15,MYDFRC
*        DROP  R1                  DFDSECTD
         L     R14,MYDFREGS
         BR    R14
         SPACE
.BETA06  ANOP
         SPACE
************************************************************
*                                                          *
*        ERROR HANDLERS                                    *
*                                                          *
************************************************************
         SPACE
         AIF   (&BETA).BETA07
ERRCONI  LA    R1,MSGCONI
         LA    R0,L'MSGCONI
         BAL   R14,PUTMSG
         B     EXIT12
         SPACE
MSGCONI  DC    C'MAXIMUM OF 10 INPUT DATA SETS EXCEEDED'
         SPACE
ERRDEF   CVD   R15,DOUBLE
         MVC   MSGWK(17),=C'ERROR QUALIFYING '
         LA    R15,MSGWK+17
         BAL   R14,DSNOUT
         MVC   0(8,R15),=C'  CODE= '
         LA    R15,7(,R15)
         MVI   RC+1,0
         B     ERRNUM
         SPACE
ERRCAT   LA    R15,MSGWK
         BAL   R14,DSNOUT
         MVC   0(17,R15),=CL17' IS NOT CATALOGED'
         LA    R15,17(,R15)
         B     ERRPDSM
ERRPDS   LA    R15,MSGWK
         BAL   R14,DSNOUT
         MVC   0(39,R15),=CL39' IS PARTITIONED BUT NO MEMBER SPECIFIED'
         LA    R15,39(,R15)
         B     ERRPDSM
ERRPDSN  LA    R15,MSGWK
         BAL   R14,DSNOUT
         MVC   0(19,R15),=CL19' IS NOT PARTITIONED'
         LA    R15,19(,R15)
ERRPDSM  LA    R1,MSGWK
         LR    R0,R15
         SR    R0,R1
         BAL   R14,PUTMSG
         B     EXIT12
         SPACE
ERRMEM   MVC   MSGWK(7),=C'MEMBER '
         LA    R15,MSGWK+7
         LH    R1,MEMBER
         BCTR  R1,0
         B     *+10
         MVC   0(0,R15),MEMBER+2
         EX    R1,*-6
         LA    R15,1(R1,R15)
         MVC   0(14,R15),=C' NOT FOUND IN '
         LA    R15,14(,R15)
         XC    MEMBER(2),MEMBER
         BAL   R14,DSNOUT
         B     ERRPDSM
         SPACE
ERRDAIR  CLI   DEBUGKV+1,1
         BNE   *+8
         EX    R0,*                PROGRAM CHECK
         BAL   R14,DAIRFAIL
         LA    R1,MYDAPL
         USING DAPL,R1
         LA    R0,MYDAPB
         ST    R0,DAPLDAPB         RESTORE DAPB POINTER IN CASE CONCAT
         DROP  R1                  DAPL
         B     EXIT12
         SPACE
MSG01    DC    C'PARSE ERROR'
.BETA07  ANOP
         SPACE
ERRLINK  CVD   R15,DOUBLE
         STH   R15,RC
         LA    R15,MSGWK
         MVC   0(14,R15),=CL14'RETURN CODE IS'
         LA    R15,14(,R15)
         MVI   0(R15),C' '
ERRNUM   UNPK  1(3,R15),DOUBLE+6(2)
         OI    3(R15),X'F0'
         CLI   1(R15),C'0'
         BNE   *+14
         MVC   1(2,R15),2(R15)
         MVI   3(R15),C' '
         CLI   1(R15),C'0'
         BNE   *+14
         MVC   1(2,R15),2(R15)
         MVI   3(R15),C' '
         LA    R15,4(,R15)
         CLI   RC+1,20             IS RETURN CODE 20
         BNE   ERRLINK2
         MVC   0(L'MSGSIZE,R15),MSGSIZE
         LA    R15,L'MSGSIZE(,R15)
ERRLINK2 LA    R1,MSGWK
         LR    R0,R15
         SR    R0,R1
         BAL   R14,PUTLINE
         LH    R15,RC
         B     EXIT
         SPACE
************************************************************
*                                                          *
*         CONSTANTS FOR ERROR HANDLERS                     *
*                                                          *
************************************************************
         SPACE
MSGSIZE  DC    C'(MIGHT BE DUE TO REGION SIZE TOO SMALL)'
HEXTR    DC    C'0123456789ABCDEF'
         LTORG
         SPACE
************************************************************
*                                                          *
*        ESTAE EXIT                                        *
*                                                          *
************************************************************
         SPACE
         CNOP  0,8
         USING *,R15
STAEEXIT EQU   *
         CH    R0,STAE12  SDWA (SYSTEM DIAGNOSTIC WORK AREA)
         BNE   STAEXWA             YES - BRANCH
         LR    R0,R9               SAVE R9
         LR    R9,R2               RESTORE WORK AREA BASE
         STM   R0,R15,STAESAVE     SAVE ALL REGS
         ST    R0,STAESAVE+36      STORE ORIGINAL VALUE OF R9
         LA    R0,12               RESTORE R0
         ST    R0,STAESAVE         AND SAVE ITS ORIGINAL VALUE
         LM    R10,R12,BASES       RESTORE PROGRAM BASES
         DROP  R15                 DROP TEMPORARY BASE REG
         ST    R1,ABEND            SAVE ABEND COMPLETION CODE
         CLI   STAEOPT,0           DO WE WANT TO RECOVER
         BE    STAERC0             NO, BRANCH
         LA    R0,STAERETR         POINT TO RETRY ROUTINE
         LA    R15,4               INDICATE RETRY
         LM    R1,R14,STAESAVE     RESTORE OTHER REGS
         BR    R14                 RETURN TO SYSTEM
         SPACE
STAERC0  LM    R0,R14,STAESAVE
         SR    R15,R15             CONTINUE TERMINATION
         BR    R14
         SPACE
STAE12   DC    H'12'
         SPACE
         CNOP  0,8
         USING SDWA,R1
STAEXWA  STM   14,12,12(13)        SAVE REGISTERS
         L     R9,SDWAPARM         RESTORE WORK AREA BASE
         LM    R10,R12,BASES       RESTORE PROGRAM BASES
         MVC   ABEND(4),SDWACMPC-1 MOVE ABEND CODE
         L     R15,SDWAGR15        GET ABEND RC
         ST    R15,ABENDRC         SAVE IT
         CLI   STAEOPT,0           DO WE WANT TO RECOVER
         BE    STAERW0             NO, BRANCH
         ST    R9,SDWAGR09         SET UP FOR SETRP RETREGS
         STM   R10,R12,SDWAGR10    SET UP FOR SETRP RETREGS
         SETRP RC=4,DUMP=NO,RETADDR=STAERETY,                          +
               RETREGS=YES,REGS=(14,12)
         SPACE
STAERW0  SETRP RC=0,REGS=(14,12)
         SPACE
************************************************************
*                                                          *
*        STAE RETRY ROUTINE                                *
*                                                          *
************************************************************
         SPACE
         CNOP  0,8
STAERETR EQU   *
         L     R9,0(,R1)
         LM    R10,R12,BASES
STAERETY EQU   *
         MVI   MSGWK,C' '
         MVC   MSGWK+1(70),MSGWK
         MVC   MSGWK(8),=C'ABEND (S'
         L     R1,ABEND
         N     R1,=A(X'00FFF000')
         BZ    STAERETU
         UNPK  MSGWK+8(5),ABEND+1(3)    ABCXYZ TO FAFBFCFXZY
         TR    MSGWK+8(3),HEXTR-240     FAFBFC TO C1C2C3
         MVC   MSGWK+11(2),=C') '
         CLC   MSGWK+8(3),=C'106'
         BE    STAERETS                 REGION SIZE TOO SMALL
         CLC   MSGWK+8(3),=C'804'
         BNE   STAERETM
STAERETS MVC   MSGWK+13(L'MSGSIZE),MSGSIZE
         B     STAERETM
STAERETU MVI   MSGWK+7,C'U'
         L     R1,ABEND
         N     R1,=A(X'00000FFF')
         CVD   R1,DOUBLE
         OI    DOUBLE+7,X'0F'
         UNPK  MSGWK+8(4),DOUBLE+5(3)
         MVI   MSGWK+12,C')'
STAERETM LA    R1,MSGWK
         LA    R0,52
         BAL   R14,PUTLINE
         LA    R6,PDSDCBW
         TM    OFLGS(R6),X'10'     IS A DCB OPEN
         BNO   EXIT12              NO, BRANCH
         MVI   OPEN,X'80'          YES, CLOSE IT
         CLOSE ((R6)),MF=(E,OPEN)
         XC    LINKAREA(8),LINKAREA
         B     EXIT12
         SPACE
*               ABENDS MOST LIKELY TO HAPPEN
*               806-4 MODULE NOT FOUND (COMPILER NOT INSTALLED)
*               106-C GETMAIN IN FETCH FAILED (REGION TOO SMALL)
*               804-1 GETMAIN IN COMPILER FAILED (REGION TOO SMALL)
         SPACE
         LTORG
         DC    0D'0'
         SPACE
         AIF   (&BETA).BETA08
         SPACE
************************************************************
*                                                          *
*        PARSE PCL                                         *
*                                                          *
************************************************************
         SPACE
         PRINT NOGEN
FORTPCL  IKJPARM
DSNI     IKJPOSIT DSNAME,LIST,PROMPT='INPUT DATA SET NAME'
PRINTKW  IKJKEYWD DEFAULT='PRINT'
         IKJNAME 'PRINT',SUBFLD=PRINTSF
         IKJNAME 'P',SUBFLD=PRINTSF
         IKJNAME 'NOPRINT'
         IKJNAME 'SYSOUT',SUBFLD=CLASSSF
         IKJNAME 'PFILE',SUBFLD=PFILESF
SOURCEKW IKJKEYWD
         IKJNAME 'SOURCE'
         IKJNAME 'NOSOURCE'
LISTKW   IKJKEYWD
         IKJNAME 'LIST'
         IKJNAME 'NOLIST'
OBJKW    IKJKEYWD DEFAULT='OBJECT'
         IKJNAME 'OBJECT',SUBFLD=OBJSF
         IKJNAME 'NOOBJECT'
         IKJNAME 'LOAD',SUBFLD=OBJSF
         IKJNAME 'NOLOAD'
MODKW    IKJKEYWD
         IKJNAME 'MOD'
         IKJNAME 'NOMOD'
IDKW     IKJKEYWD
         IKJNAME 'ID'
         IKJNAME 'NOID'
MAPKW    IKJKEYWD
         IKJNAME 'MAP'
         IKJNAME 'NOMAP'
TERMKW   IKJKEYWD DEFAULT='TERM'
         IKJNAME 'TERM'
         IKJNAME 'NOTERM'
CHARKW   IKJKEYWD
         IKJNAME 'EBCDIC'
         IKJNAME 'BCD'
TESTKW   IKJKEYWD
         IKJNAME 'TEST'
         IKJNAME 'NOTEST'
LINEKW   IKJKEYWD
         IKJNAME 'LINECOUNT',SUBFLD=LINESF
FLAGKW   IKJKEYWD
         IKJNAME 'FLAG',SUBFLD=FLAGSF
NAMEKW   IKJKEYWD
         IKJNAME 'NAME',SUBFLD=NAMESF
         AIF   (&H).HH07
*        KEYWORDS FOR G1 ONLY (NONE)
         AGO   .HH07A
.HH07    ANOP
XREFKW   IKJKEYWD DEFAULT='NOXREF'
         IKJNAME 'XREF'
         IKJNAME 'NOXREF'
.HH07A   ANOP
MSGKW    IKJKEYWD DEFAULT='MSGD'
         IKJNAME 'MSG'             MESSAGES FOR OBJECT AND PRINT NAMES
         IKJNAME 'MSGD'            MESSAGES ONLY IF NONSTANDARD DEFAULT
         IKJNAME 'NOMSG'           MESSAGES NEVER
TIMEKW   IKJKEYWD DEFAULT='NOTIME'
         IKJNAME 'TIME'
         IKJNAME 'NOTIME'
SHOWKW   IKJKEYWD
         IKJNAME 'SHOWPARM'
XCTLKW   IKJKEYWD DEFAULT='$X'
         IKJNAME '$X'
         IKJNAME '$NOX'
DEBUGKW  IKJKEYWD
         IKJNAME '$DEBUG'
*
*         SUBFIELDS
*
LIBSF    IKJSUBF
DSNL     IKJPOSIT DSNAME,LIST,PROMPT='MACRO LIBRARY'
PRINTSF  IKJSUBF
DSNP     IKJPOSIT DSTHING
PFILESF  IKJSUBF
PFILE    IKJIDENT 'PRINT FILENAME',                                    +
               FIRST=ALPHA,OTHER=ALPHANUM,MAXLNTH=8,                   +
               PROMPT='PRINT FILENAME'
CLASSSF  IKJSUBF
CLASS    IKJIDENT 'SYSOUT CLASS',                                      +
               FIRST=ALPHANUM,MAXLNTH=1,                               +
               DEFAULT='A'
OBJSF    IKJSUBF
DSNO     IKJPOSIT DSTHING
LINESF   IKJSUBF
LINE     IKJIDENT 'LINECOUNT',                                         +
               FIRST=NUMERIC,OTHER=NUMERIC,MAXLNTH=3,                  +
               PROMPT='LINECOUNT',VALIDCK=LINEVC
FLAGSF   IKJSUBF
FLAGLV   IKJIDENT 'FLAG LEVEL',                                        +
               FIRST=NUMERIC,OTHER=NUMERIC,MAXLNTH=3,                  +
               PROMPT='FLAG LEVEL',VALIDCK=FLAGVC
NAMESF   IKJSUBF
NAME     IKJIDENT 'NAME',                                              +
               FIRST=ALPHA,OTHER=ALPHANUM,MAXLNTH=8,                   +
               PROMPT='NAME'
         IKJENDP
         PRINT GEN
         SPACE
************************************************************
*                                                          *
*         PARSE VALIDITY CHECK ROUTINES                    *
*                                                          *
************************************************************
         SPACE
         DC    0D'0'
LINEVC   STM   14,12,12(13)
         L     R9,4(,R1)           RESTORE R9
         LM    R10,R12,BASES       RESTORE BASE REGS
         L     R2,0(,R1)           POINT R2 TO PDE
         SR    15,15
         L     R14,0(,R2)          POINT TO OPERAND
         LH    R1,4(,R2)           GET LENGTH OF OPERAND
         BCTR  R1,0
         B     *+10
         PACK  DOUBLE(8),0(0,R14)
         EX    R1,*-6
         CVB   R1,DOUBLE
         LTR   R1,R1
         BZ    LINEVCR4
         CH    R1,=H'99'
         BH    LINEVCR4
         B     LINEVCR
LINEVCR4 LA    R15,4
LINEVCR  L     14,12(,13)
         LM    0,12,20(13)
         BR    14
         SPACE
         DC    0D'0'
FLAGVC   STM   14,12,12(13)
         L     R9,4(,R1)           RESTORE R9
         LM    R10,R12,BASES       RESTORE BASE REGS
         L     R2,0(,R1)           POINT R2 TO PDE
         SR    15,15
         L     R14,0(,R2)          POINT TO OPERAND
         LH    R1,4(,R2)           GET LENGTH OF OPERAND
         BCTR  R1,0
         B     *+10
         PACK  DOUBLE(8),0(0,R14)
         EX    R1,*-6
         CVB   R1,DOUBLE
         LTR   R1,R1
         BZ    FLAGVCR4
         CH    R1,=H'255'
         BH    FLAGVCR4
         B     FLAGVCR
FLAGVCR4 LA    R15,4
FLAGVCR  L     14,12(,13)
         LM    0,12,20(13)
         BR    14
         SPACE
         LTORG
         DC    0D'0'
.BETA08  ANOP
         SPACE
************************************************************
*                                                          *
*        DSECTS                                            *
*                                                          *
************************************************************
         SPACE
@DATA    DSECT
         DS    18F                 REGISTER SAVEAREA
SIZE     DS    F
CPPLPTR  DS    F
LINKAREA DS    D
DOUBLE   DS    D
LINKNAME DS    CL8
BASES    DS    3F
RC       DS    H
QUALRC   DS    C
SOUT     DS    C
MYPPL    DS    7F
MYANS    DS    F
MYECB    DS    F
MYIOPL   DS    4F
MYDFPB   DS    5F
MYQUAL   DS    CL8
MYPTPB   DS    3F                 USED BY PUTLINE ROUTINE
MYPUTLEP DS    F                  USED BY PUTLINE ROUTINE
MYOLD    DS    2F                 USED BY PUTLINE ROUTINE
MYSEG1   DS    2H,CL256           USED BY PUTLINE ROUTINE
MYREGS   DS    4F                 USED BY PUTLINE ROUTINE
MYDFREGS DS    F
MYSTPB   DS    0F                 STACK DELETE USES 5 WORDS
MYDAPL   DS    5F
MYDAPB   DS    21F
CONIDAPB DS    3F,10CL8
CONIDAPX EQU   *
CONINUM  DS    H
CONISW   DS    C
CONIPTR  DS    F
MEMBER   DS    H,CL8               MEMBER NAME FOR MESSAGES
DSNAMEH  DS    H,CL44              FIRST INPUT DSNAME
DSNAMEI  DS    H,CL44              INPUT DSNAME
DSNAMEL  DS    H,CL44              LIB DSNAME
DSNAMEP  DS    H,CL44              PRINT DSNAME
DSNAMEO  DS    H,CL44              OBJECT DSNAME
DSNAMEU  DS    H,CL44              UNQUALIFIED DSNAME
DSNAMEQ  DS    H,CL44              QUALIFIED DSNAME FOR MESSAGES
MEMH     DS    H,CL8
MEMI     DS    H,CL8
MEMP     DS    H,CL8
MEMO     DS    H,CL8
PSWD     DS    CL8
DSNHQ    DS    C
DSNIQ    DS    C
DSNPPDE  DS    0F                  FAKE PDE
DSNOPDE  DS    6F                  FAKE PDE
DSNPOPB  DS    0CL8                FAKE CBUF
DSNOOPB  DS    CL8                 FAKE CBUF
OPEN     DS    0F
TTIMERS  DS    2F
PDSDCBW  DS    0F,88X
PDSEXLST DS    F
TIMEKV   DS    H
DEBUGKV  DS    H
XCTLKV   DS    H
ABEND    DS    F
ABENDRC  DS    F
STAEOPT  DS    C
STAEMFLW DS    0F,(STAEMFLL)X
MYDFPARM DS    5F  USED BY DAIRFAIL
MYDFRC   DS    F   USED BY DAIRFAIL
MYJEFF02 DS    F   USED BY DAIRFAIL
MYDFID   DS    H   USED BY DAIRFAIL
*
FREEOPT  DS    H
*
PARMPTR  DS    2F,H
PARMLEN  DS    H
PARM     DS    CL100
         AIF   (&H).HH09
         DS    0F,H                G1 COMPILER
DDNAMES  DS    H                   LENGTH
DDLIN    DS    CL8                 IF OBJECT
         DS    CL8                 NEVER USED
         DS    CL8                 NEVER USED
DDLIB    DS    CL8                 NEVER USED
DDIN     DS    CL8
DDPRINT  DS    CL8                 IF PRINT
DDPUNCH  DS    CL8                 IF DECK
         DS    CL8
         DS    CL8
         DS    CL8
DDTERM   DS    CL8                 IF TERM
DDLEN    EQU   *-DDNAMES-2
*
         AGO   .HH09A
.HH09    ANOP
         DS    0F,H                HX COMPILER
DDNAMES  DS    H                   LENGTH
DDLIN    DS    CL8                 IF OBJECT
         DS    CL8                 NEVER USED
         DS    CL8                 NEVER USED
DDLIB    DS    CL8                 NEVER USED
DDIN     DS    CL8
DDPRINT  DS    CL8                 IF PRINT
DDPUNCH  DS    CL8                 IF DECK
DDUT1    DS    CL8
DDUT2    DS    CL8
DDTERM   DS    CL8                 IF TERM
DDINDEX  DS    CL8                 IF SUMMARY
DDLEN    EQU   *-DDNAMES-2
*
.HH09A   ANOP
         DS    0D
MSGWK    DS    CL256
         DS    0D
STAESAVE DS    16F
@DATAL   EQU   *-@DATA
         SPACE
         SPACE
         IKJCPPL
         SPACE
         IKJIOPL
         SPACE
         IKJPPL
         SPACE
         IKJDFPB
         SPACE
         IKJDAPL
         SPACE
         IKJDAP08
         SPACE
         IKJDAP0C
         SPACE
         IKJDAP10
         SPACE
         IKJDAP18
         SPACE
         IKJDAP1C
         SPACE
         IKJDAP30
         SPACE
*        IKJEFFDF DFDSECT=YES
         SPACE
         IHASDWA                                                 JDM1
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
