MAIN     TITLE 'MONITOR - MAIN MONITOR ROUTINE'
* MODIFICATION CW004 16/07/80 PERMITS ALTERNATE PRIMARY PARAMS    CW004
* MODIFICATION CW005 30/09/80 FORCES STANDARD SECONDARY PARAMS    CW005
* MODIFICATION CW006 17/07/80 USES ENQ TO AVOID MULTIPLE MONITORS CW006
MONITOR  CSECT
         B     ENTRY-MONITOR(15)
         DC    X'07',CL7'MONITOR'
         ENTRY MONEND
ENTRY    EQU   *
*
**  MAIN MONITOR ROUTINE
*
**  INTVAL CONTAINS THE DEFAULT SAMPLING INTERVAL
**  ITYPE CONTAINS THE DEFAULT TYPE OF INTERVAL (SECS)
**  MAXTIM CONTAINS THE DEFAULT SAMPLING INTERVAL IN MINS (60)
**  THE MONITORS MUST BE OF THE FORM MON. WHERE . IS
**  ALPHABETIC (A-Z)
**  THE UNITS OF THE SAMPLING INTERVAL MAY BE CHANGED
**  WITH THE KEYWORDS MILLI,SECS,MINS
**  THERE ARE TWO INPUT STREAMS - THE PARM FIELD AND
**  THE STREAM MONITORS
*
RW0      EQU   0
RW1      EQU   1
RB2      EQU   2
RW3      EQU   3
RW4      EQU   4
RW5      EQU   5
RW6      EQU   6
RW7      EQU   7
RW8      EQU   8
RW15     EQU   15
*
         STM   14,12,12(13)            SAVE REGISTERS
         BALR  RB2,0
         USING *,RB2
ENTER    EQU   *
         LR    RW3,13
         ST    13,SAVE+4
         LA    13,SAVE
         ST    13,8(RW3)               CHAIN SAVE AREAS
*
**  GET PARM FIELD
*
         LA    RW1,ARGL1               POINT AT PARAM LIST
         L     RW15,=V(GETPRM)         GETPRM
         BALR  14,15                   LINK TO ROUTINE
*
**  ALTER PARAMETERS
*
         LA    RW1,ARGL2               POINT AT PARAM LIST
         L     RW15,=V(PARAMS)         PARAMS
         BALR  14,15                   LINK TO ROUTINE
*                                                                 CW004
**  CHECK FOR ALTERNATE MAIN PARAMETER LIBRARY MEMBER             CW004
*                                                                 CW004
         LA    RW1,ARGL1               POINT AT PARAM LIST        CW004
         L     RW15,=V(FNDTXT)         USE TEXT SCAN ROUTINE      CW004
         BALR  14,15                   SEARCH FOR MEMB=XXXX       CW004
*
**  READ DATA FROM INPUT STREAM MONITORS
*
READMON  EQU   *
         LA    RW1,ARGL3               POINT AT PARAM LIST
         L     RW15,=V(INPUT)          INPUT
         BALR  14,15                   LINK TO ROUTINE
         L     RW3,FLAG                LOAD RETURN FLAG
         LTR   RW3,RW3                 TEST FOR END OF FILE
         BNZ   ENDATA                  YES,BRANCH
         LA    RW3,80                  LOAD DATA LENGTH
         ST    RW3,LENBUF
         LA    RW1,ARGL2               POINT AT PARAM LIST
         L     RW15,=V(PARAMS)         PARAMS
         BALR  14,15                   LINK TO ROUTINE
         B     READMON
*
**  PRINT SELECTED MONITORS
*
ENDATA   EQU   *
         LA    RW3,32                  MESSAGE LENGTH
         ST    RW3,MSGLEN              STORE LENGTH
         LA    RW3,MSG1                POINT AT FIRST MESSAGE
         ST    RW3,MSGAD               STORE IN PARAM LIST
         LA    RW1,ARGLIST1            POINT AT PARAM LIST
         L     RW15,=V(OUTPUT)         POINT AT OUTPUT
         BALR  14,15                   LINK TO ROUTINE
*
         SR    RW3,RW3                 ZERO MESSAGE LENGTH
         ST    RW3,MSGLEN              STORE LENGTH
         BALR  14,15                   LINK TO OUTPUT
*
         LA    RW3,32                  MESSAGE LENGTH
         ST    RW3,MSGLEN              STORE LENGTH
         LA    RW3,MSG2                POINT AT SECOND MESSAGE
         ST    RW3,MSGAD               STORE IN PARAM LIST
         BALR  14,15                   LINK TO ROUTINE
*
         LA    RW3,MSG3                POINT AT THIRD MESSAGE
         ST    RW3,MSGAD               STORE IN PARAM LIST
         BALR  14,15                   LINK TO OUTPUT
*
         SR    RW3,RW3                 ZERO MESSAGE LENGTH
         ST    RW3,MSGLEN              STORE LENGTH
         BALR  14,15                   LINK TO OUTPUT
*
         L     RW3,ITYPE               LOAD TYPE OF INTERVAL
         SLL   RW3,3                   SHIFT FOR INDEX
         LA    RW4,UNITS(RW3)          POINT AT SELECTED UNITS
         MVC   MSG4+21(8),0(RW4)       MOVE UNITS INTO MESSGAE
         LA    RW3,32                  MESSAGE LENGTH
         ST    RW3,MSGLEN              STORE LENGTH
         LA    RW3,MSG4                POINT AT FOURTH MESSAGE
         ST    RW3,MSGAD               STORE IN PARAM LIST
         BALR  14,15                   LINK TO OUTPUT
*
         LA    RW3,MSG5                POINT AT FIFTH MESSAGE
         ST    RW3,MSGAD               STORE IN PARAM LIST
         BALR  14,15                   LINK TO OUTPUT
         SR    RW3,RW3                 ZERO MESSAGE LENGTH
         ST    RW3,MSGLEN              STORE LENGTH
         BALR  14,15                   LINK TO OUTPUT
*
**  CYCLE THRU MONITORS
*
         LA    RW3,32                  MESSAGE LENGTH
         ST    RW3,MSGLEN              STORE LENGTH
         LA    RW3,MSG6                POINT AT MESSAGE SIX
         ST    RW3,MSGAD               STORE IN PARAM LIST
         LA    RW3,26                  COUNTER
         LA    RW4,ALPH                POINT AT LETTERS
         LA    RW5,MINT                POINT AT FREQUENCIES
         L     RW8,=V(MONAD)           POINT AT ADDRESS TABLE
WRITMON  EQU   *
         L     RW7,0(RW5)              PICK UP FREQUENCIES
         LTR   RW7,RW7                 ZERO?
         BNP   INCMON                  YES,BRANCH
         MVC   MON+3(1),0(RW4)         CREATE MONITOR NAME
         MVC   MSG6+2(4),MON           MOVE INTO BUFFER
         SR    RW6,RW6
         M     RW6,INTVAL              GET MONITOR CALLING INTERVAL
         CVD   RW7,DBWD                CONVERT TO DECIMAL
         L     RW7,DBWD+4              REMOVE SIGN
         SRL   RW7,4
         ST    RW7,DBWD+4
         MVC   MSG6+8(9),PATTERN       MOVE EDIT PATTERN INTO MSG
         ED    MSG6+8(9),DBWD+4        EDIT INTERVAL
         LA    RW1,ARGLIST1            POINT AT PARAM LIST
         L     RW15,=V(OUTPUT)         POINT AT OUTPUT
         BALR  14,15                   LINK TO ROUTINE
*                                                                 CW006
**  MAKE SURE ANOTHER APEMAN IS NOT RUNNING SAME MONITOR          CW006
*                                                                 CW006
         ENQ   (APEMAN,MON,E,4,SYSTEM),RET=USE                    CW006
         LTR   15,15                   THIS MON ALREADY RUNNING?  CW006
         BZ    LOADMON                 IF NOT, OK TO PROCEED      CW006
         MVC   ENQFAIL+8(4),MON        MOVE MONITOR NAME TO MSG   CW006
ENQFAIL  WTO   'MON. FAILED ON ENQ',ROUTCDE=(2,11)  TELL OPERATOR CW006
         MVC   MSG6+7(13),ENQFAIL+13   ALSO WRITE MSG TO MONPRINT CW006
         LA    RW1,ARGLIST1                                       CW006
         L     RW15,=V(OUTPUT)         LOAD ADDR OF PRINT ROUTINE CW006
         BALR  14,15                   WRITE MSG TO PRINT DATASET CW006
         MVC   MSG6+1(31),MSG6         CLEAN UP MESSAGE BUFFER    CW006
         SR    0,0                                                CW006
         ST    RW0,0(RW5)              SET MONITOR FREQUENCY TO 0 CW006
         B     INCMON                  GO TRY FOR NEXT MONITOR    CW006
*                                                                 CW006
**  LOAD DESIRED MONITOR                                          CW006
*                                                                 CW006
LOADMON  MVI   ANY,X'FF'               SET ANY FLAG               CW006
         LOAD  EPLOC=MON               LOAD MONITOR
         ST    RW0,0(RW8)              STORE ADDRESS IN TABLE
         MVI   0(RW8),C' '             FORCE STANDARD PARAMETERS  CW005
*
**  INCREMENT COUNTERS
*
INCMON   EQU   *
         LA    RW8,4(RW8)              INCREMENT TABLE ADDRESS
         LA    RW4,1(RW4)              POINT AT NEXT LETTER
         LA    RW5,4(RW5)              POINT AT NEXT FREQUENCY
         BCT   RW3,WRITMON             LOOP BACK
*
**  ANY ACTIVE MONITORS
*
         TM    ANY,X'FF'               TEST FLAG
         BZ    ENDMON                  NO,BRANCH
*
**  CONVERT PARAMETERS TO CORRECT UNITS
*
         SR    RW6,RW6
         L     RW7,=F'6000'            CONVERT MAXTIM TO
         M     RW6,MAXTIM              HUNDREDTHS OF A SCEOND
         ST    RW7,MAXTIM
         L     RW3,ITYPE               LOAD UNIT TYPE
         SLL   RW3,2                   SHIFT FOR INDEX
         B     TABLE(RW3)
TABLE    EQU   *
         B     TYPE0
         B     TYPE1
TYPE2    EQU   *
*
**  UNITS = MINS
**  CONVERT TO MICROSECONDS
*
         L     RW7,MINS                LOAD MULT FACTOR
         B     MULT
TYPE1    EQU   *
*
**  UNITS V SECS
**  CONVERT TO MICROSECONDC
*
         L     RW7,SECS                LOAD MULT FACTOR
         B     MULT
TYPE0    EQU   *
*
**  UNITS= MILLI
**  CONVERT TO MICROSECONDS
*
         L     RW7,MILLI               LOAD MULT FACTOR
*
**  PERFORM MULTIPLICATION
*
MULT     EQU   *
         SR    RW6,RW6
         M     RW6,INTVAL
         ST    RW7,INTVAL              STORE INTERVAL
*
**  WRITE ACTIVE MONITORS TO LOG
*
         SR    RW3,RW3
         ST    RW3,FLAG                ZERO FLAG
         LA    RW1,ARGL5               POINT AT PARAM LIST
         L     RW15,=V(MONRT)          MONRT
         BALR  14,15                   LINK TO ROUTINE
*
**  WRITE DATE TO LOG
*
         LA    RW1,ARGL6               POINT AT PARAM LIST
         L     RW15,=V(GETDAT)         GETDAT
         BALR  14,15                   LINK TO ROUTINE
         LA    RW1,NAME                POINT AT 'DATE'
         ST    RW1,ARGL5               STORE IN PARAM LIST
         LA    RW1,2                   LOAD NEW DATA LENGTH
         ST    RW1,LENGTH
         LA    RW1,DATE                POINT AT DATA
         ST    RW1,DATAD               STORE IN PARAM LIST
         LA    RW1,ARGL5               POINT AT PARAM LIST
         L     RW15,=V(MONRT)          MONRT
         BALR  14,15                   LINK TO ROUTINE
*
         ST    RW3,MSGLEN              SET ZERO LENGTH
         LA    RW1,ARGLIST1            POINT AT PARAM LIST
         L     RW15,=V(OUTPUT)         OUTPUT
         BALR  14,15                   LINK TO ROUTINE
*
**  START MONITORING
*
         TIME  DEC                     GET TOD
         SR    RW1,RW1                 ZERO BOTTOM
         SRDL  RW0,28                  SHIFT TO PENULTIMATE NIBBLE
         O     RW1,=F'12'              OR IN SIGN
         STM   RW0,RW1,TIME            STORE
         UNPK  DBWD(8),TIME+3(5)       UNPACK
         OI    DBWD+7,X'F0'            REMOVE SIGN
         MVC   MSG7+1(2),DBWD
         MVC   MSG7+4(2),DBWD+2
         MVC   MSG7+7(2),DBWD+4
         MVC   MSG7+10(2),DBWD+6
         LA    RW3,32                  MESSAGE LENGTH
         ST    RW3,MSGLEN              STORE LENGTH
         LA    RW3,MSG7                POINT AT MESSGAE
         ST    RW3,MSGAD               STORE IN PARAM LIST
         LA    RW1,ARGLIST1            POINT AT PARAM LIST
         L     RW15,=V(OUTPUT)         OUTPUT
         BALR  14,15                   LINK TO ROUTINE
         LA    RW1,ARGL7               POINT AT PARAM LIST
         L     RW15,=V(MONRUN)         MONRUN
         BALR  14,15                   LINK TO ROUTINE
*
**  RETURN
*
RETURN   EQU   *
         L     13,4(13)
         LM    14,12,12(13)            RESTORE REGISTERS
         BR    14
*
**  ERROR EXIT
*
ENDMON   EQU   *
         SR    RW3,RW3                 ZERO MESSAGE LENGTH
         ST    RW3,MSGLEN              STORE MESSGAE LENGTH
         LA    RW1,ARGLIST1            POINT AT PARAM LIST
         L     RW15,=V(OUTPUT)         OUTPUT
         BALR  14,15                   LINK TO ROUTINE
         LA    RW3,32                  MESSAGE LENGTH
         ST    RW3,MSGLEN              STORE MESSAGE LENGTH
         LA    RW3,MSG8                POINT AT MESSAGE
         ST    RW3,MSGAD               STORE IN PARAM LIST
         LA    RW1,ARGLIST1            POINT AT PARAM LIST
         L     RW15,=V(OUTPUT)         OUTPUT
         BALR  14,15                   LINK TO ROUTINE
         B     RETURN
*
**  NORMAL END - BRANCH ENTRY
*
MONEND   EQU   *
         BALR  RW3,0
         USING *,RW3                   TEMP ADDRESSABILITY
         L     RB2,ADENTER
         B     EOD1
ADENTER  DC    A(ENTER)
EOD1     EQU   *
         DROP  RW3
         LA    13,SAVE                 RECHAIN SAVE AREAS
*
**  OBTAIN TOD
*
         TIME  DEC
         SR    RW1,RW1                 ZERO BOTTOM
         SRDL  RW0,28                  SHIFT TO LAST NIBBLE
         O     RW1,=F'12'              INSERT SIGN
         STM   RW0,RW1,TIME            STORE
*
**  UNPACK TIME
*
         UNPK  DBWD(8),TIME+3(5)
         OI    DBWD+7,X'F0'            REMOVE SIGN
         MVC   MSG9+1(2),DBWD
         MVC   MSG9+4(2),DBWD+2
         MVC   MSG9+7(2),DBWD+4
         MVC   MSG9+10(2),DBWD+6
*
**  WRITE OUT MESSAGE
*
         LA    RW3,MSG9
         ST    RW3,MSGAD               STORE IN PARAM LIST
         LA    RW1,ARGLIST1
         L     RW15,=V(OUTPUT)
         BALR  14,15                   LINK TO ROUTINE
*
**  BLANK BUFFER
*
         SR    RW3,RW3
         ST    RW3,MSGLEN               ZERO MESSAGE LENGTH
         BALR  14,15
*
**  CLOSE DCB'S
*
         L     RW3,=V(INDCB)
         TM    48(RW3),X'10'           OPEN?
         BNO   OPEN1                   NO,BRANCH
         CLOSE ((RW3))                 CLOSE INDCB
OPEN1    EQU   *
         L     RW3,=V(OUTDCB)
         TM    48(RW3),X'10'           OPEN?
         BNO   OPEN2                   NO,BRANCH
         CLOSE ((RW3))                 CLOSE OUTDCB
OPEN2    EQU   *
         L     RW3,=V(MONDCB)
         TM    48(RW3),X'10'           OPEN?
         BNO   RETURN
         CLOSE ((RW3))
         B     RETURN
*
**  DEFAULT APEMAN PARAMETERS -
**  MAXTIM - MONITORING PERIOD (30 MINS)
**  INTVAL - MONITOR SAMPLE INTERVAL (10 UNITS)
**  ITYPE  - SAMPLE INTERVAL UNITS (1=SECS)   (0=MILLI;2=MINS)
*
MAXTIM   DC    F'30'
INTVAL   DC    F'10'
ITYPE    DC    F'1'
*
**  SAVE AREAS AND STORAGE
*
SAVE     DS    18F
LENBUF   DC    F'100'
BUFFER   DS    25F
INSTR    DC    CL8'APEMAN'        DEFAULT PARMLIB MEMBER          CW004
FLAG     DC    F'0'
MINT     DC    26F'0'
OUTSTR   DC    C'MONPRINT'
TIME     DS    2F
MSGLEN   DC    F'32'
DBWD     DS    D
DATE     DS    D
MINS     DC    F'60000000'
SECS     DC    F'1000000'
MILLI    DC    F'1000'
LENGTH   DC    F'26'
APEMAN   DC    CL8'APEMAN'        QNAME FOR ENQUEUE               CW006
MON      DC    CL8'MON'           MONITOR NAME IS RNAME           CW006
KEYLEN   DC    F'5'               LENGTH OF 'MEMB=' KEYWORD       CW004
ARGL2    DC    A(ITYPE)
ARGL7    DC    A(MINT)
         DC    A(INTVAL)
         DC    A(MAXTIM)
ARGL1    DC    A(LENBUF)
         DC    A(BUFFER)
         DC    A(KEYLEN)          KEY LENGTH FOR 'MEMB=' SEARCH   CW004
         DC    A(MEMBER)          KEY TO SEARCH FOR LIB MEMB NAME CW004
         DC    A(FLAG)            (NOT USED)                      CW004
ARGL3    DC    A(INSTR)           LIB MEMBER FOR PRIMARY PARAMS   CW004
         DC    A(BUFFER)
         DC    A(FLAG)
ARGL5    DC    A(MAIN)
         DC    A(LENGTH)
DATAD    DC    A(MINT)
         DC    A(FLAG)
ARGL6    DC    A(DATE)
ARGLIST1 DC    A(OUTSTR)
         DC    A(MSGLEN)
MSGAD    DS    F
NAME     DC    C'DATE'
MAIN     DC    C'MAIN'
MSG1     DC    CL32' APEMAN - RELEASE 3'                          CW***
MSG2     DC    CL32' MONITORS SELECTED -'
MSG3     DC    CL32' -----------------'
MSG4     DC    CL32' MONITOR    INTERVAL'
MSG5     DC    CL32' -------    --------'
MSG6     DC    CL32' '
MSG7     DC    CL32'   .  .  .    MONITORING STARTED'
MSG8     DC    CL32' NO MONITORS SELECTED'
MSG9     DC    CL32'   .  .  .    MONITORING ENDED'
UNITS    DC    CL8'(MILLI)'
         DC    CL8'(SECS)'
         DC    CL8'(MINS)'
ALPH     DC    C'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
MEMBER   DC    C'MEMB='                                           CW004
ANY      DC    X'00'
PATTERN  DC    X'402020202020202120'
*
**  LITERAL CONSTANTS
*
         LTORG
         END
