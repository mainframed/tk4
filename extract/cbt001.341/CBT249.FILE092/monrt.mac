         TITLE 'MONRT - WRITE MONITOR DATA TO THE LOG'
MONRT    CSECT
* MODIFICATION CW010 80/10/02 USE REGISTERS FOR OPTIMIZATION      CW010
* MODIFICATION CW021 82/01/20 GET SAVE AREA ONLY WHEN NEEDED      CW021
* MODIFICATION CW022 82/01/14 USE MVC INSTEAD OF MVCL WHERE OK    CW022
* MODIFICATIONS CW021 AND CW022 ARE FOR FURTHER OPTIMIZATION      *****
         B     ENTRY-MONRT(15)
         DC    X'06',CL7'MONRT'
ENTRY    EQU   *
         ENTRY MONDCB
*
**  ROUTINE WRITES DATA TO THE LOG
**  LINKAGE IS MONRT(NAME,LENGTH,IDATA,IFLAG)
**  IFLAG=0 NORMAL LOGGING
**  IFLAG>0 END OF LOGGING
*
RW0      EQU   0
RW1      EQU   1
RB2      EQU   2                       APEMAN BASE REGISTER
RW3      EQU   3                       WORDS LEFT IN BUFFER
RW4      EQU   4                       POINTER INTO BUFFER        CW010
RW5      EQU   5
RW6      EQU   6                       ADDRESS OF CALLER'S DATA   CW010
RW7      EQU   7
RW8      EQU   8
RW9      EQU   9                       HOLDS THE CONSTANT 4       CW010
*RW10    EQU   10                      *** UNUSED ***             CW010
RW11     EQU   11                      APEMAN MONITOR NAME        CW010
RW12     EQU   12                      APEMAN RECORD LENGTH       CW010
RW15     EQU   15
*
         STM   14,12,12(13)            SAVE REGISTERS
         BALR  RB2,0
         USING *,RB2                   ESTABLISH ADDRESSABILITY
ENTER    EQU   *
*
**  PICK UP ARGUMENTS
*
         LM    RW4,RW7,0(1)            PICK UP PARAM ADDRESSES    CW010
         LA    RW9,4                   LOAD CONSTANT 4            CW010
         L     RW11,0(RW4)             PICK UP MONITOR NAME       CW010
         L     RW12,0(RW5)             LOAD APEMAN RECORD LENGTH  CW010
         L     RW7,0(RW7)              LOAD FLAG                  CW010
         LTR   RW7,RW7                 > 0 ?                      CW010
         BH    ENDATA                  YES,BRANCH
*
**  CHECK TO SEE IF FIRST TIME THRU
**  IF SO THEN OPEN DCB AND GET FIRST BUFFER
*
         TM    MONDCB+48,X'10'         DCB OPEN?
         BO    OPENED                  YES,BRANCH
         TM    ABFLAG,X'FF'             HAS DCB ALREADY BEEN OPENED?
         BZ    OPENOK                   NO - OK TO OPEN
         ABEND 1,DUMP                   ***** ERROR ABEND *****
OPENOK   EQU   *
         MVI   ABFLAG,X'FF'             SET FLAG
         OPEN  (MONDCB,OUTPUT)         OPEN DCB
         TM    MONDCB+48,X'10'         OPENED OK?
         BNO   ERR2
         ST    13,SAVE+4                                          CW021
         LR    RW3,13                                             CW021
         LA    13,SAVE                                            CW021
         ST    13,8(RW3)               CHAIN SAVE AREAS           CW021
         PUT   MONDCB                  OBTAIN FIRT BUFFER
         L     13,4(13)                                           CW021
         ST    RW1,BUFAD               STORE BUFFER ADDRESS
         LA    RW3,1000                BUFFER LENGTH IN WORDS
         ST    RW3,BUFLEN              STORE BUFFER LENGTH
OPENED   EQU   *
         L     RW4,BUFAD               LOAD BUFFER ADDRESS
         L     RW3,BUFLEN              LOAD BUFFER LENGTH
         ST    RW11,0(,RW4)            MOVE IN NAME FIELD         CW010
         AR    RW4,RW9                 INCREMENT POINTER          CW010
         BCT   RW3,MOVLEN              DECREMENT COUNT
         SR    RW7,RW7                 SET FLAG                   CW010
         B     ENDBUF
MOVLEN   EQU   *
         ST    RW12,0(,RW4)            MOVE IN LENGTH FIELD       CW010
         AR    RW4,RW9                 INCREMENT POINTER          CW010
         BCT   RW3,MOVE                DECREMENT COUNT
         LR    RW7,RW9                 SET FLAG                   CW010
         B     ENDBUF
MOVE     EQU   *
*
**  MOVE DATA INTO BUFFER AREA
*
         CR    RW3,RW12                ROOM IN BUFFER?            CW010
         BL    NOTROOM                 NO,BRANCH
         LR    RW5,RW12                LOAD DATA LENGTH           CW010
         SLL   RW5,2                   CONVERT WORDS TO BYTES     CW010
         C     RW5,F256                TOO LONG FOR MVC?          CW022
         BH    MVCL                    IF SO, GO DO MVCL          CW022
         BCTR  RW5,0                   SUBTRACT ONE FOR MVC       CW022
         EX    RW5,MVCINSTR            AND HOPE THIS IS FASTER    CW022
         LA    RW4,1(RW5,RW4)          ADVANCE BUFFER POINTER     CW022
CHECKFIT SR    RW3,RW12                DECREASE COUNT             CW022
*                                      CAN'T BE NEG, SEE CR INST  CW010
         BP    RETURN                  BR IF NOT END OF BUFFER    CW010
         LA    RW7,8                   SET FLAG
         B     ENDBUF
*                                                                 CW022
MVCINSTR MVC   0(1,RW4),0(RW6)         ** EXECUTED INSTRUCTION ** CW022
MVCL     LR    RW7,RW5                 COPY LENGTH FOR MVCL       CW022
         MVCL  RW4,RW6                 MOVE LONG                  CW022
         B     CHECKFIT                RETURN TO MAIN LINE CODE   CW022
*
**  NOT ROOM FOR ALL DATA
*
NOTROOM  EQU   *
         LR    RW5,RW3                 LOAD BUFFER LENGTH         CW010
         SLL   RW5,2                   CONVERT WORDS TO BYTES     CW010
         LR    RW7,RW5                 COPY LENGTH FOR MVCL       CW010
         MVCL  RW4,RW6                 MOVE LONG                  CW010
*                                      R6=ADDR OF REMAINING DATA  CW010
         SR    RW12,RW3                REDUCE LENGTH              CW010
         LA    RW7,4                   SET FLAG
*
**  END OF BUFFER - WRITE OUT DATA
*
ENDBUF   EQU   *
         ST    13,SAVE+4                                          CW021
         LR    RW3,13                                             CW021
         LA    13,SAVE                                            CW021
         ST    13,8(RW3)               CHAIN SAVE AREAS           CW021
         PUT   MONDCB                  WRITE OUT BUFFER
         L     13,4(13)                                           CW021
         ST    RW1,BUFAD               STORE BUFFER ADDRESS
         LR    RW4,RW1                 LOAD ADDRESS OF BUFFER     CW010
         LA    RW3,1000                BUFFER LENGTH IN WORDS
         ST    RW3,BUFLEN              STORE BUFFER LENGTH
         B     TABLE(RW7)              RETURN TO REQUIRED PLACE
TABLE    EQU   *
         B     MOVLEN
         B     MOVE
*
**  RETURN
*
RETURN   EQU   *
         ST    RW4,BUFAD               STORE BUFFER ADDRESS       CW010
         ST    RW3,BUFLEN              STORE BUFFER LENGTH
         LM    14,12,12(13)            RESTORE REGISTERS
         BR    14
*
**  END OF DATA WRITE BUFFER
*
ENDATA   EQU   *
         L     RW1,BUFAD               LOAD BUFFER ADDRESS
         MVC   0(4,RW1),END            MOVE IN END MARK
         CLOSE MONDCB                  CLOSE DCB
ERR2     EQU   *
         L     14,=V(MONEND)           POINT AT EXIT ROUTINE
         BR    14
*
**  ERROR EXIT
*
SYNEX    EQU   *
         BALR  RW3,0
         USING *,RW3                   ESTABLISH ADDRESSABILITY
         L     RB2,ADENTER
         B     EOD1
ADENTER  DC    A(ENTER)
EOD1     EQU   *
         DROP  RW3
         LA    13,SAVE                 RECHAIN SAVE AREAS
         LR    RW3,14                  SAVE RETURN ADDRESS
         TIME  DEC
         SR    RW1,RW1
         SRDL  RW0,28                  SHIFT TO BOTTOM OF WORD
         O     RW1,=F'12'              INSERT SIGN
         STM   RW0,RW1,TIME            STORE
         UNPK  DWD(8),TIME+3(5)        UNPACK
         MVC   MSG+1(2),DWD
         MVC   MSG+4(2),DWD+2
         MVC   MSG+7(2),DWD+4
         MVC   MSG+10(2),DWD+6
         LA    RW1,ARGS                POINT AT PARAM LIST
         L     RW15,=V(OUTPUT)
         BALR  14,15                   LINK TO ROUTINE
         BR    RW3                     RETURN TO DCB ABEND
*
**  LITERAL CONSTANTS
*
         LTORG
*
**  SAVE AREAS AND STORAGE
*
SAVE     DS    18F
BUFAD    DS    F
BUFLEN   DS    F
F256     DC    F'256'                  MAXIMUM LENGTH FOR MVC     CW022
END      DC    C'END '
MONPRINT DC    CL8'MONPRINT'
LEN      DC    F'50'
ARGS     DC    A(MONPRINT)
         DC    A(LEN)
         DC    A(MSG)
DWD      DS    D
TIME     DS    2F
ADEXIT   DC    X'92',AL3(SYNEX)
MSG      DC    CL50'   .  .  .   MONITORING ENDED - OUTPUT D.S. FULL'
ABFLAG   DC    X'00'
MONDCB   DCB   DSORG=PS,MACRF=PL,LRECL=4000,BLKSIZE=4000,              X
               DDNAME=MONLOG,RECFM=FB,SYNAD=SYNEX,EXLST=ADEXIT
         END
