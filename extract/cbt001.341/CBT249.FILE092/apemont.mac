MONT     TITLE 'MONT - MONITOR TRACE TABLE ENTRIES'
* MODIFICATION CW001 80/08/13 GET FULL TRACE TABLE IN CHRON ORDER CW001
* MODIFICATION CW005 80/10/02 ALLOW RESTART OF MONT WITH PARM CHG CW005
* MODIFICATION CW009 81/11/19 CODE OPTIMIZATION                   CW009
* MODIFICATION CW018 81/01/28 PERMIT RUNNING CONCURRENT WITH GTF  CW018
* MODIFICATION CW019 81/07/15 REDUCE COPYING OF TRACE TABLE       CW019
MONT     CSECT
         B     ENTRY-MONT(,15)
         DC    X'06',CL7'MONT'
ENTRY    EQU   *
*
**  ROUTINE SAMPLES TRACE TABLE ENTRIES WRITING
**  SHORTENED FORMS TO THE LOG
**  LINKAGE IS MONT(INPUT,MONRT,TOD,FNDVAL,FNDPRS,FNDTXT)
*
RW0      EQU   0
RW1      EQU   1
RB2      EQU   2
RW3      EQU   3
RW4      EQU   4
RW5      EQU   5
RW6      EQU   6
RW7      EQU   7
RW8      EQU   8
RW9      EQU   9
RW10     EQU   10                      SAVE ADDRESS OF FNDPRS     CW018
RW15     EQU   15
*
         STM   14,12,12(13)            SAVE REGISTERS
         BALR  RB2,0                   SET UP BASE REGISTER 2
         USING *,RB2
         LR    RW7,13                  PRESERVE HSA ADDR A WHILE  CW005
         ST    13,SAVE+4
         LA    13,SAVE
         ST    13,8(RW7)               CHAIN SAVE AREAS           CW005
*
**  PICK UP PARAMETERS
*
         LM    RW3,RW5,0(1)            PICK UP PARAM ADDRESSES
         MVC   TOD(4),0(RW5)           MOVE TIME OF DAY
         MVC   ADRT(4),0(RW4)          MOVE ADDRESS OF MONRT
*
**  FIRST TIME THRU?
*
         TM    16(RW7),X'FF'           CHECK HIGH BYTE OF RW15    CW005
         BZ    NOTONE                  NONZERO MEANS NEW PARAMS   CW005
         MVC   NAME+4(1),16(RW7)       COMPLETE PARM MEMBER NAME  CW005
         MVI   OPTIONS,X'FF'           INITIALIZE OPTIONS         CW005
         MVC   OPTIONS+1(LOPTIONS-1),OPTIONS         TO ALL -1    CW005
         L     RW3,0(RW3)              LOAD ADDRESS OF INPUT
         LM    RW4,RW6,12(1)           LOAD OTHER PARAMS
         L     RW4,0(RW4)              FNDVAL
         L     RW10,0(RW5)             FNDPRS                     CW018
         L     RW5,0(RW6)              FNDTXT
         SR    RW7,RW7                 ZERO POINTER
READIN   EQU   *
*
**  READ IN OTHER PARAMETERS
*
         LA    RW1,ARGLST              POINT AT PARAM LIST
         LR    RW15,RW3                POINT AT INPUT
         BALR  14,15                   LINK TO ROUTINE
         L     RW6,IFLAG               PICK UP EOF FLAG
         LTR   RW6,RW6                 TEST
         BNZ   ENDATA                  EOF REACHED
*                                                                 CW018
**  CHECK FOR GTF PARAMETER                                       CW018
*                                                                 CW018
         LA    RW6,KEY4                POINT AT KEY FOR GTF       CW018
         ST    RW6,KEYAD               STORE IN PARAM LIST        CW018
         LA    RW6,3                   LOAD KEY LENGTH            CW018
         ST    RW6,KEYLEN              STORE PARAMETER            CW018
         LA    RW1,ARGS                POINT AT PARAM LIST        CW018
         LR    RW15,RW10               FNDPRS                     CW018
         BALR  14,15                   LINK TO ROUTINE            CW018
         TM    THERE+3,1               WAS KEYWORD FOUND?         CW018
         BZ    NOGTF                   BRANCH IF NOT              CW018
         OI    FLAG1,GTFOK             ALLOW RUNNING WITH GTF     CW018
         B     READIN                  TRY FOR ANOTHER CARD       CW018
NOGTF    EQU   *                                                  CW018
*                                                                 CW019
**  CHECK FOR PCT= PARAMETER                                      CW019
*                                                                 CW019
         LA    RW6,KEY5                POINT AT KEY FOR PCT=      CW019
         ST    RW6,KEYAD               STORE IN PARAM LIST        CW019
         LA    RW6,4                   LOAD KEY LENGTH            CW019
         ST    RW6,KEYLEN              STORE PARAMETER            CW019
         LA    RW1,ARGS                POINT AT PARAM LIST        CW019
         LR    RW15,RW4                FNDVAL                     CW019
         BALR  14,15                   LINK TO ROUTINE            CW019
         TM    THERE+3,1               WAS KEYWORD FOUND?         CW019
         BZ    NOPCT                   BRANCH IF NOT              CW019
         L     RW6,VALUE               LOAD PERCENTAGE SPECIFIED  CW019
         C     RW6,F100                IS VALUE REASONABLE?       CW019
         BH    READIN                  IGNORE CARD IF NOT         CW019
         ST    RW6,PERCENT             SAVE PERCENTAGE OF TR TBL  CW019
         B     READIN                  TRY FOR ANOTHER CARD       CW019
NOPCT    EQU   *                                                  CW019
*
**  LOOK FOR TYPE=
*
         MVC   VALUE(8),NULL           ZERO RESULT FIELD
         LA    RW6,5                   KEY LENGTH
         ST    RW6,KEYLEN              STORE
         LA    RW6,KEY3                POINT AT KEY
         ST    RW6,KEYAD               STORE IN PARAM LIST
         LA    RW1,ARGS                POINT AT PARAM LIST
         LR    RW15,RW5                FNDTXT
         BALR  14,15                   LINK TO ROUTINE
         CLC   VALUE(8),NULL           PRESENT?
         BE    NOTYPE                  NO, BRANCH
         SR    RW8,RW8                 ZERO COUNTER
         LA    RW9,SIO                 POINT AT FIRST TYPE
NXTYPE   EQU   *
         CLC   VALUE(3),0(RW9)         CORRECT TYPE?
         BE    GOTYPE                  YES, BRANCH
         LA    RW8,1(RW8)              INCREMENT COUNTER
         LA    RW9,3(RW9)              INCREMENT POINTER
         C     RW8,=F'8'               END OF TYPES?
         BL    NXTYPE                  NO, BRANCH
*
**  INCORRECT INPUT - IGNORE CARD
*
         B     READIN                  GO BACK FOR NEXT CARD
GOTYPE   EQU   *
*
**  TYPE FOUND - STORE IN OPTIONS
*
         STH   RW8,OPTIONS(RW7)        STORE OPTION
NOTYPE   EQU   *
*
**  LOOK FOR ASID=
*
         LA    RW6,KEY1                POINT AT KEY
         ST    RW6,KEYAD               STORE IN PARAM LIST
         LR    RW15,RW4                FNDVAL
         BALR  14,15                   LINK TO ROUTINE
         L     RW6,THERE               PRESENT?
         LTR   RW6,RW6
         BZ    NOASID                  NO, BRANCH
*
**  ASID= FOUND - STORE IN IASID
*
         LA    RW6,IASID(RW7)          POINT AT ASID ENTRY
         MVC   0(2,RW6),VALUE+2        MOVE ACCROSS ASID
         B     INCREAD                 BRANCH ON
NOASID   EQU   *
*
**  LOOK FOR JOB=
*
         MVC   VALUE(8),NULL           ZERO RETURN FIELD
         LA    RW6,KEY2                POINT AT KEY
         ST    RW6,KEYAD               STORE IN PARAM LIST
         LA    RW6,4                   KEY LENGTH
         ST    RW6,KEYLEN              STORE
         LA    RW1,ARGS                POINT AT PARAM LIST
         LR    RW15,RW5                FNDTXT
         BALR  14,15                   LINK TO ROUTINE
         CLC   VALUE(8),NULL           SET?
         BE    INCREAD                 NO, GET NEXT CARD
*
**  JOBNAME FOUND - FIND ASID
*
         L     RW6,16                  CVT
         L     RW6,556(RW6)            ASVT
         LA    RW6,528(RW6)            ASCB QUEUE
NXTASCB  EQU   *
         L     RW8,0(RW6)              GET ASCB ADDRESS
         LA    RW8,0(RW8)              REMOVE TOP BYTE
         LTR   RW8,RW8                 ZERO?
         BZ    READIN                  JOBNAME NOT FOUND - NEXT CARD
         TM    0(RW6),X'80'            IN USE?
         BNZ   INCASCB                 NO, BRANCH
         L     RW9,172(RW8)            JOBNAME POINTER
         LTR   RW9,RW9                 ZERO?
         BNZ   NAMEOK                  NO, BRANCH
         L     RW9,176(RW8)            OTHER POINTER
NAMEOK   EQU   *
*
**  CHECK IF CORRECT ASCB FOUND
*
         CLC   VALUE(8),0(RW9)         CORRECT JOBNAME?
         BE    GOTNAM                  YES, BRANCH
INCASCB  EQU   *
         LA    RW6,4(RW6)              INCREMENT POINTER
         B     NXTASCB                 TRY NEXT ASCB
*
**  JOBNAME FOUND - INSERT ASID
*
GOTNAM   EQU   *
         LH    RW6,36(RW8)             PICK UP ASID
         STH   RW6,IASID(RW7)          STORE ASID
INCREAD  EQU   *
*
**  INCREMENT FOR NEXT CARD
*
         LA    RW7,2(RW7)              INCREMENT POINTER
         L     RW6,ICT                 LOAD COUNTR
         LA    RW6,1(RW6)              INCREMENT
         ST    RW6,ICT                 STORE COUNTER
         C     RW6,=F'10'              LIMIT?
         BL    READIN                  NO - GET NEXT CARD
ENDATA   MVI   NAME+4,C' '             RESTORE NORMAL MON NAME    CW005
*
**  SET UP POINTER TO ASVT QUEUE
*
         L     RW3,16                  CVT ADDRESS
         L     RW3,556(RW3)            ASVT ADDRESS
         LA    RW3,524(RW3)            ASCB QUEUE ADDRESS
         ST    RW3,ASVT                STORE ADDRESS
*                                                                 CW001
**  NOW GET A BUFFER FOR TRACE TABLE                              CW001
*                                                                 CW001
         L     RW3,84                  L ADDR OF TRACE TABLE HDR  CW001
         LM    RW4,RW5,4(RW3)          L START AND END ADDRESSES  CW001
         SR    RW5,RW4                 GET LENGTH OF TRACE TABLE  CW001
         ST    RW5,TTLENGTH            SAVE IT                    CW001
         GETMAIN R,LV=(RW5)            AREA TO COPY TRACE TABLE   CW001
         ST    RW1,TTBUFFER            SAVE ITS ADDRESS           CW001
         L     RW4,0(,RW3)             GET ADDR OF CURRENT ENTRY  CW001
         L     RW5,28(,RW4)            PICK UP THE TOD VALUE      CW001
         SL    RW5,LONGTIME            GO A LONG WAY BACK IN TIME CW001
         ST    RW5,OLDTIME             FUDGE PREVIOUS SAMPLE TIME CW001
*
**  THE FOLLOWING CAUSES EXIT IF NO OPTIONS WERE PROVIDED
*
         MVI   ANY,X'FF'               SET ANY FLAG
         L     RW3,ICT                 LOAD COUNTER
         LTR   RW3,RW3                 TEST
         BNZ   NOTONE                  SOME BRANCH
         MVI   ANY,X'00'               SET FLAG TO NONE
NOTONE   EQU   *
         TM    ANY,X'FF'               ANY?
         BZ    RETURN
*                                                                 CW018
**  CHECK IF GTF IS ACTIVE                                        CW018
*                                                                 CW018
         TM    FLAG1,GTFOK             SHOULD WE TEST FOR GTF?    CW018
         BO    GETTRACE                SKIP TEST IF ALLOWED       CW018
         L     RW3,16                  CVT ADDRESS                CW018
         TM    236(RW3),X'80'          GTF ACTIVE?                CW018
         BNZ   RETURN                  MONT SUPERFLUOUS IF SO     CW018
GETTRACE EQU   *                                                  CW018
         L     RW9,84                  POINT AT TRACE TABLE HDR   CW001
*                                                                 CW019
**  FIND OUT HOW MUCH OF TRACE TABLE HAS CHANGED                  CW019
**  IF LESS THAN PERCENTAGE PARAMETER, EXIT FROM ROUTINE          CW019
*                                                                 CW019
TESTTABL LM    RW3,RW5,0(RW9)          LOAD TRACE TABLE HEADER    CW019
         LR    RW7,RW3                 COPY CURRENT TR TABLE PTR  CW019
         SR    RW7,RW4                 GET CURRENT OFFSET IN TBL  CW019
         S     RW7,OLDOFF              SUBTRACT PREVIOUS OFFSET   CW019
         BNM   *+8                     BRANCH IF NOT NEGATIVE     CW019
         A     RW7,TTLENGTH            CORRECT FOR WRAP AROUND    CW019
         M     RW6,F100                MULTIPLY FOR PERCENTAGE    CW019
         D     RW6,TTLENGTH            PERCENT OF TABLE CHANGED   CW019
         BH    COPYTTBL                GO COPY TABLE IF HIGH      CW019
*                                                                 CW019
*              COMPLETE WRAP AROUND COULD FOOL THE ABOVE CODE     CW019
*              SO SEE IF THE ENTIRE TABLE HAS CHANGED             CW019
*                                                                 CW019
         LA    RW6,32(RW3)             GET ADDR OF NEXT ENTRY     CW019
         C     RW6,LASTAD              PASSED END OF TABLE?       CW019
         BL    *+6                     OK IF NOT                  CW019
         LR    RW6,RW4                 ELSE LOAD START OF TABLE   CW019
         L     RW7,28(RW6)             GET TIME STAMP FROM ENTRY  CW019
         SL    RW7,OLDTIME             CHANGED SINCE LAST PASS?   CW019
         LTR   RW7,RW7                 IF MINUS, IT'S UNCHANGED   CW019
         BM    RETURN                  NO, TABLE NOT MUCH CHANGED CW019
         C     RW3,0(RW9)              CHANGED SINCE WE GOT HERE? CW019
         BNE   TESTTABL                YES, TRY ABOVE CODE AGAIN  CW019
*
**  BEGINNING OF TRACE TABLE ANALYSIS
*
COPYTTBL LM    RW6,RW7,TTBUFFER        ADDR & LENGTH OF OUR COPY  CW001
         LA    RW4,0(RW6,RW7)          COMPUTE END OF BUFFER      CW001
         LR    RW5,RW6                 COPY START OF BUFFER       CW001
         N     RW5,PAGEMASK            ADDRESS BOTTOM OF PAGE     CW001
REFERIT  CLI   0(RW3),0                REFERENCE A PAGE OF BUFFER CW001
         S     RW5,PAGEMASK            ADVANCE TO NEXT PAGE       CW001
         CR    RW5,RW4                 HAVE WE HIT ALL OF BUFFER? CW001
         BL    REFERIT                 NO, KEEP REFERENCING       CW001
         LM    RW3,RW5,0(RW9)          PICK UP CURRENT 1ST & LAST CW001
         STM   RW3,RW5,NEWTTE          STORE CURRENT, 1ST & LAST  CW001
         SR    RW5,RW4                 SET UP LENGTH FOR MVCL     CW001
*                                      R5 HAD BETTER EQUAL R7     CW001
         MVCL  RW6,RW4                 COPY ENTIRE TRACE TABLE    CW001
         L     RW8,0(,RW9)             GET ADDR OF CURRENT ENTRY  CW001
         CR    RW3,RW8                 HAS TRACE TABLE CHANGED?   CW001
         BE    COPYDONE                IF NOT, WE HAVE GOOD COPY  CW001
*                                                                 CW001
*  WE MUST RECOPY THOSE TRACE TABLE ENTRIES WHICH HAVE CHANGED    CW001
*  BETWEEN THE LOAD MULTIPLE OF REGISTERS 3 TO 5 AND THE LOAD OF  CW001
*  REGISTER 8.  THEY SHOULD NOT CHANGE AGAIN BEFORE OUR COPY IS   CW001
*  COMPLETE.  (IF THEY DO, THE TRACE TABLE IS WRAPPING AROUND     CW001
*  FASTER THAN WE CAN COPY IT.)  THE RESULTING TRACE TABLE IMAGE  CW001
*  WILL BE GOOD FOR THE TIME OF THE ENTRY POINTED AT BY REG 8.    CW001
*                                                                 CW001
         BH    COPYEND                 BR IF TRACE WRAPPED AROUND CW001
         LA    RW5,32(RW8)             GET END OF CURRENT ENTRY   CW001
         B     *+8                     JOIN COMMON CODE           CW001
COPYEND  L     RW5,8(,RW9)             GET END OF TRACE TABLE     CW001
         LA    RW4,32(RW3)             GET FIRST CHANGED ENTRY    CW001
         SR    RW5,RW4                 LENGTH OF DATA TO MOVE     CW001
         L     RW6,TTBUFFER            START OF OUR BUFFER        CW001
         AR    RW6,RW4                 ADD LOCATION IN TRACE TAB  CW001
         S     RW6,4(,RW9)             LESS ORIGIN OF TRACE TABLE CW001
*                                      GIVES LOCATION IN OUR BUFF CW001
         LR    RW7,RW5                 LENGTH OF TARGET = SOURCE  CW001
         MVCL  RW6,RW4                 COPY CHANGED PART OF TABLE CW001
         ST    RW8,NEWTTE              STORE NEW CURRENT ENTRY    CW001
         CR    RW3,RW8                 DID TABLE WRAP AROUND?     CW001
         BL    COPYDONE                IF NOT, COPY IS COMPLETE   CW001
*                                      EXTRA COPY IS IN 2 PARTS   CW001
         LA    RW5,32(RW8)             GET END OF CURRENT ENTRY   CW001
         L     RW4,4(,RW9)             GET START OF TRACE TABLE   CW001
         SR    RW5,RW4                 LENGTH OF DATA TO MOVE     CW001
         L     RW6,TTBUFFER            START OF OUR BUFFER        CW001
         AR    RW6,RW4                 ADD LOCATION IN TRACE TAB  CW001
         S     RW6,4(,RW9)             LESS ORIGIN OF TRACE TABLE CW001
*                                      GIVES LOCATION IN OUR BUFF CW001
         LR    RW7,RW5                 LENGTH OF TARGET = SOURCE  CW001
         MVCL  RW6,RW4                 COPY CHANGED PART OF TABLE CW001
COPYDONE EQU   *                       TRACE TABLE COPIED OK      CW001
*                                                                 CW001
**  NOW RELOCATE OUR TRACE TABLE POINTERS                         CW001
*                                                                 CW001
         LM    RW4,RW5,TTBUFFER        ADDRESS OF COPIED TABLE    CW001
         AR    RW5,RW4                 COMPUTE END OF TABLE       CW001
         LR    RW3,RW4                 START OF OUR COPY          CW001
         S     RW3,FIRSTAD             LESS START OF REAL TABLE   CW001
         A     RW3,NEWTTE              PLUS REAL CURRENT ENTRY    CW001
*                                      GIVES OUR CURRENT ENTRY    CW001
         STM   RW3,RW5,NEWTTE          STORE FUDGED TABLE HEADER  CW001
*                                                                 CW001
**  SCAN TTE'S TO FIND FIRST NEW ONE                              CW001
*                                                                 CW001
         L     RW9,OLDTIME             LOAD LAST TIME STAMP DONE  CW009
         LA    RW10,32                 FASTER POINTER BUMPING     CW009
NEXTTTE  EQU   *                                                  CW001
         AR    RW3,RW10                INCREMENT POINTER          CW009
         C     RW3,LASTAD              LAST ENTRY?                CW001
         BL    *+8                     NO, BRANCH                 CW001
         L     RW3,FIRSTAD             LOAD FIRST ENTRY           CW001
         L     RW4,28(,RW3)            PICK UP TOD FIELD          CW001
         SLR   RW4,RW9                 GET IT LAST TIME?          CW009
         LTR   RW4,RW4                 NEGATIVE MEANS TOO OLD     CW001
         BNP   NEXTTTE                 ADVANCE TO NEXT ENTRY      CW009
*                                                                 CW009
**  SEE WHETHER WE FOUND ANY OLD ENTRIES                          CW009
*                                                                 CW009
         SR    RW3,RW10                BACK UP ONE ENTRY          CW009
         C     RW3,NEWTTE              IS IT WHERE WE STARTED?    CW009
         BE    NOGAP                   BRANCH IF SO               CW009
         C     RW3,FIRSTAD             FINISH JUST AFTER WRAP?    CW009
         BNL   SHOWGAP                 NO, MUST HAVE MISSED SOME  CW009
         L     RW8,NEWTTE              ENTRY BEFORE FIRST CHECKED CW009
         C     RW8,LASTAD              START JUST BEFORE WRAP?    CW009
         BE    NOGAP                   IF SO, NONE WERE MISSED    CW009
SHOWGAP  OI    TYPESW,GAP              RECORDS MAY BE MISSING     CW009
NOGAP    SR    RW7,RW7                 CLEAR REGISTER FOR TYPE    CW009
*                                                                 CW009
**  ADVANCE TO NEXT TTE                                           CW009
*                                                                 CW009
GETTYPE  EQU   *                                                  CW009
         AR    RW3,RW10                INCREMENT POINTER          CW009
         C     RW3,LASTAD              LAST ENTRY?                CW009
         BL    *+8                     NO, BRANCH                 CW009
         L     RW3,FIRSTAD             LOAD FIRST ENTRY           CW009
*
**  PICK UP DATA TYPE
*
         IC    RW7,2(RW3)              PICK UP TYPE FIELD
         SRL   RW7,4                   SHIFT TO BOTTOM OF WORD
*                                                                 CW009
**  CHECK IF THIS TTE WANTED                                      CW009
*                                                                 CW009
         L     RW4,ICT                 NO OF OPTIONS              CW009
         LA    RW5,OPTIONS             POINT AT OPTIONS           CW009
         LA    RW6,IASID               POINT AT ASID TABLE        CW009
         SR    RW8,RW8                 CONST 0 TO CHECK FOR NEG   CW009
         LA    RW1,2                   CONST TO INDEX TABLES      CW009
         LH    RW9,22(RW3)             LOAD ASID FROM TTE         CW009
NXTOPT   EQU   *                                                  CW009
         CH    RW8,0(RW6)              CHECK FOR ASID NEGATIVE    CW009
         BH    ALLASID                 BRANCH, ALL REQUESTED      CW009
         CH    RW9,0(RW6)              RIGHT ASID?                CW009
         BNE   INCOPT                  NO, BRANCH TO TRY NEXT     CW009
ALLASID  EQU   *                       HERE IF THIS ASID WANTED   CW009
         CH    RW8,0(RW5)              CHECK FOR TYPE NEGATIVE    CW009
         BH    PROCESS                 BRANCH, ALL REQUIRED       CW009
         CH    RW7,0(RW5)              CORRECT TYPE?              CW009
         BE    PROCESS                 YES, BRANCH                CW009
INCOPT   EQU   *                                                  CW009
         AR    RW5,RW1                 INCREMENT POINTERS         CW009
         AR    RW6,RW1                                            CW009
         BCT   RW4,NXTOPT              DECREMENT COUNT            CW009
         B     TESTEND                 TTE NOT WANTED             CW009
*                                                                 CW009
** HERE IF THIS TTE IS TO BE RECORDED                             CW009
*                                                                 CW009
PROCESS  STH   RW7,TYPE                STORE IN DATA AREA
         SLL   RW7,2                   SHIFT TO INDEX
         B     TABLE(RW7)
TABLE    EQU   *
         B     TYPE0                   TYPE0
         B     TYPE2                   TYPE1
         B     TYPE2                   TYPE2
         B     TYPE2                   TYPE3
         B     TYPE4                   TYPE4
         B     TYPE0                   TYPE5
         B     TYPE4                   TYPE6
         B     TYPE2                   TYPE7
*
**  MOVE REQUIRED AREAS INTO DATA AREA
*
TYPE0    EQU   *
         MVI   LENGTH+3,8              STORE DATA LENGTH          CW009
         MVC   CSW(4),12(RW3)          MOVE HALF CSW
         B     MOVE
TYPE4    EQU   *
         MVI   LENGTH+3,8              STORE DATA LENGTH          CW009
         LH    RW4,10(RW3)             LOAD ASID ????             CW009
         ST    RW4,CSW                 STORE IN DATA AREA         CW009
         B     MOVE
TYPE2    EQU   *
         MVI   LENGTH+3,7              STORE DATA LENGTH          CW009
MOVE     EQU   *
         MVC   PSW(8),0(RW3)           MOVE PSW
         STH   RW9,ASID                MOVE IN ASID               CW009
         MVC   TIME(4),28(RW3)         MOVE IN TIME
*
**  FIND JOBNAME
*
         SLL   RW9,2                   SHIFT ASID FOR INDEX       CW009
         A     RW9,ASVT                POINT TO ASCB              CW009
         TM    0(RW9),X'80'            ASCB IN USE?               CW009
         BZ    INUSE                   YES, BRANCH
         LA    RW8,NULL                POINT AT BLANK
         B     GOTJOB                  BRANCH ROUND
INUSE    EQU   *
         L     RW4,0(RW9)              LOAD ASCB ADDRESS          CW009
         L     RW8,172(RW4)            JOBNAME POINTER            CW009
         LTR   RW8,RW8                 ZERO?
         BNZ   GOTJOB                  NO,BRANCH
         L     RW8,176(RW4)            LOAD JOBNAME POINTER       CW009
GOTJOB   EQU   *
         MVC   JOBNAME(8),0(RW8)       MOVE IN JOBNAME
WRITE    EQU   *
*
**  WRITE OUT DATA
*
TYPESW   EQU   WRITE+1                                            CW001
         OI    TYPE,0                  MOVE FLAGS INTO RECORD TYP CW001
         NI    TYPESW,255-GAP          SHOW GAP ONCE PER MON INTV CW001
         LA    RW1,ADARGS              POINT AT PARAM LIST
         L     RW15,ADRT               ADDRESS OF MONRT
         BALR  14,15                   LINK TO MONRT
TESTEND  C     RW3,NEWTTE              HANDLED CURRENT ENTRY YET? CW001
         BNE   GETTYPE                 IF NOT, DONE FOR NOW       CW001
*                                                                 CW001
SAVEOLD  MVC   OLDTIME,28(RW3)         RECORD LAST ENT PROCESSED  CW001
         S     RW3,TTBUFFER            COMPUTE OFFSET OF LAST ENT CW019
         ST    RW3,OLDOFF              SAVE OFFSET OF LAST ENTRY  CW019
*
**  RETURN
*
RETURN   L     13,4(13)
         LM    14,12,12(13)            RESTORE REGISTERS
         BR    14
*
**  LITERAL CONSTANTS
*
         LTORG
*
**  SAVE AREAS AND STORAGE
*
SAVE     DS    18F
ADRT     DS    F
ADARGS   DC    A(NAME)
         DC    A(LENGTH)
         DC    A(TOD)
         DC    A(FLAG)
NAME     DC    CL8'MONT'
LENGTH   DC    F'0'                    ONLY LAST BYTE NEED CHANGE CW009
FLAG     DC    F'0'
TOD      DS    F
TYPE     DS    H                       TRACE TABLE ENTRY TYPE     CW001
*                                      USE HIGH BYTE FOR FLAGS    CW001
GAP      EQU   X'40'                   EVENTS MISSED BETWEEN INTV CW001
ASID     DS    H
TIME     DS    F
JOBNAME  DC    CL8' '
PSW      DS    2F
CSW      DS    F
TTBUFFER DS    F                                                  CW001
TTLENGTH DS    F                                                  CW001
OLDTIME  DS    F                       TIME FROM LAST ENTRY       CW001
OLDOFF   DS    F                       OFFSET OF LAST ENTRY       CW019
NEWTTE   DS    F
FIRSTAD  DS    F
LASTAD   DS    F
OPTIONS  DS    10H                     SET TO -1 FOR PARM RESET   CW005
IASID    DS    10H                     ALSO RESET TO -1 FOR PARMS CW005
LOPTIONS EQU   *-OPTIONS               LENGTH OF PARM DATA TO SET CW005
ICT      DC    F'0'
F100     DC    F'100'                  FOR COMPUTING PERCENTAGES  CW019
PERCENT  DC    F'40'                   RECORD AT LEAST THIS MUCH  CW019
PAGEMASK DC    F'-4096'
LONGTIME DC    X'00800000'
KEY1     DC    CL8'ASID='
KEY2     DC    CL8'JOB='
KEY3     DC    CL8'TYPE='
KEY4     DC    CL8'GTF'                                           CW018
KEY5     DC    CL8'PCT='                                          CW019
SIO      DC    CL3'SIO'
         DC    CL3'EXT'
         DC    CL3'SVC'
         DC    CL3'PGM'
         DC    CL3'ISD'
         DC    CL3'I/O'
         DC    CL3'SSR'
         DC    CL3'DSP'
ARGLST   DC    A(NAME)
         DC    A(BUFFER)
         DC    A(IFLAG)
BUFFER   DC    CL80' '
IFLAG    DC    F'0'
ARGS     DC    A(BUFLEN)
         DC    A(BUFFER)
         DC    A(KEYLEN)
KEYAD    DS    F
         DC    A(THERE)
         DC    A(VALUE)
THERE    DS    F
VALUE    DS    2F
KEYLEN   DS    F
BUFLEN   DC    F'80'
ASVT     DS    F
NULL     DC    CL8' '
FIRST    DC    X'00'
ANY      DC    X'00'
FLAG1    DC    X'00'                   ALLOW FOR VARIOUS FLAGS    CW018
GTFOK    EQU   X'01'                   RUN EVEN IF GTF IS ACTIVE  CW018
         END
