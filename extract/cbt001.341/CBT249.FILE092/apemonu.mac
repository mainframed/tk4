         TITLE 'MONU - MONITOR SELECTED UCBS'
* MODIFICATION CW012 80/10/17 FIX ERROR & OPTIMIZE CODE           CW012
* MODIFICATION CW013 80/10/22 OPTION TO OMIT OFFLINE DEVICES      CW013
MONU     CSECT
         B     ENTRY-MONU(15)
         DC    X'06',CL7'MONU'
ENTRY    EQU   *
*
**  ROUTINE MONITORS UCBS - LINKAGE IS
**  MONU(INPUT,MONRT,TOD,FNDVAL,FNDPRS,FNDTXT)
*
RW1      EQU   1
RB2      EQU   2
RW3      EQU   3
RW4      EQU   4                       UCB ADDRESSABILITY         CW012
RW5      EQU   5
RW6      EQU   6
RW7      EQU   7
RW8      EQU   8
RW9      EQU   9                       UCB EXTENSION ADDRESS      CW012
RW10     EQU   10                      TEMPORARY UCB ADDRESS      CW012
RW11     EQU   11                      CONTAINS FENCE X'0000FFFF' CW012
RW15     EQU   15
*
         STM   14,12,12(13)            SAVE REGISTERS
         BALR  RB2,0
         USING *,RB2
         ST    13,SAVE+4
         LR    RW3,13
         LA    13,SAVE
         ST    13,8(RW3)
*
         LM    RW3,RW5,0(1)            LOAD PARAMS ADDRESSES
         MVC   ADRT(4),0(RW4)          ADDRESS OF MONRT
         MVC   TOD(4),0(RW5)           TIME OF DAY
*
**  FIRST TIME THRU?
*
         TM    FIRST,X'FF'             TEST FLAG
         BNZ   NOTFIRST
         L     RW3,0(RW3)              ADDRESS OF INPUT
         LM    RW4,RW6,12(1)           OTHER PARAMS
         L     RW4,0(RW4)              FNDVAL
         L     RW5,0(RW6)              FNDTXT
         SR    RW6,RW6                 ZERO INDEX
READIN   EQU   *
*
**  READ IN NEXT CARD
*
         LA    RW1,ARGLST              POINT AT PARAM LIST
         LR    RW15,RW3                INPUT
         BALR  14,15                   LINK TO ROUTINE
         L     RW7,IFLAG               LOAD EOF FLAG
         LTR   RW7,RW7                 TEST
         BNZ   ENDATA                  BRANCH IF EOF
*
**  LOOK FOR JOB=
*
         MVC   VALUE(8),NULL           ZERO RESULT FIELD
         LA    RW7,4                   LOAD KEY LENGTH
         ST    RW7,KEYLEN              STORE
         LA    RW7,KEY4                POINT AT KEY
         ST    RW7,KEYAD               STORE IN PARAM LIST
         LA    RW1,ARGS                POINT AT PARAM LIST
         LR    RW15,RW5                FNDTXT
         BALR  14,15                   LINK TO ROUTINE
         CLC   VALUE(8),NULL           SET?
         BE    NOTJOB                  NO, BRANCH
*
**  JOBNAME FOUND - FIND ASID
*
         L     RW7,16                  CVT
         L     RW7,556(RW7)            ASVT
         LA    RW7,528(RW7)            ASCB QUEUE
NXTASCB  EQU   *
         L     RW8,0(RW7)              ASCB ADDRESS
         LA    RW8,0(RW8)              REMOVE TOP BYTE
         LTR   RW8,RW8                 ZERO?
         BZ    READIN                  YES, TRY NEXT CARD
         TM    0(RW7),X'80'            ASCB IN USE?
         BNZ   INCASCB                 NO, BRANCH
         L     RW9,172(RW8)            JOBNAME POINTER
         LTR   RW9,RW9                 ZERO?
         BNZ   NAMEOK                  NO, BRANCH
         L     RW9,176(RW8)            LOAD OTHER POINTER
NAMEOK   EQU   *
         CLC   VALUE(8),0(RW9)         CORRECT JOBNAME?
         BE    GOTJOB                  YES, BRANCH
INCASCB  EQU   *
         LA    RW7,4(RW7)              INCREMENT POINTER
         B     NXTASCB                 TRY NEXT ASCB
GOTJOB   EQU   *
         LH    RW7,36(RW8)             PICK UP ASID
         STH   RW7,ASIDS(RW6)          STORE IN OPTIONS
         B     NOASID
NOTJOB   EQU   *
*
**  LOOK FOR ASID=
*
         LA    RW7,5                   KEY LENGTH
         ST    RW7,KEYLEN              STORE
         LA    RW7,KEY3                POINT AT KEY
         ST    RW7,KEYAD               STORE IN PARAM LIST
         LA    RW1,ARGS                POINT AT PARAM LIST
         LR    RW15,RW4                FNDVAL
         BALR  14,15                   LINK TO ROUTINE
         L     RW7,THERE
         LTR   RW7,RW7                 TEST PRESENT?
         BZ    NOASID                  BRANCH IF NOT THERE
*
**  ASID= FOUND - STORE IN OPTIONS
*
         L     RW7,VALUE               LOAD ASID
         STH   RW7,ASIDS(RW6)          STORE ASID
NOASID   EQU   *
*
**  LOOK FOR TYPE=
*
         MVC   VALUE(8),NULL           ZERO RESULT FIELD
         LA    RW7,5                   KEY LENGTH
         ST    RW7,KEYLEN              STORE
         LA    RW7,KEY5                POINT AT KEY
         ST    RW7,KEYAD               STORE IN PARAM LIST
         LA    RW1,ARGS                POINT AT PARAM LIST
         LR    RW15,RW5                FNDTXT
         BALR  14,15                   LINK TO ROUTINE
         CLC   VALUE(8),NULL           SET?
         BE    NOTYPE                  NO, BRANCH
*
**  TYPE= FOUND - SET UP MASK
*
         LA    RW7,TAPE                POINT AT FIRST TYPE
         SR    RW8,RW8                 ZERO COUNTER
NXTYPE   EQU   *
         CLC   VALUE(4),0(RW7)         THIS TYPE?
         BE    GOTYPE                  YES, BRANCH
         LA    RW8,1(RW8)              INCREMENT COUNTER
         LA    RW7,4(RW7)              INCREMENT POINTER
         C     RW8,=F'8'               END?
         BL    NXTYPE                  NO, BRANCH
         B     READIN                  TRY NEXT CARD
GOTYPE   EQU   *
*
**  TYPE FOUND - SET MASK
*
         LA    RW9,256                 DEFAULT TO OFFLINE=NO      CW013
         IC    RW9,MASK(RW8)           INSERT MASK
         STH   RW9,TYPE(RW6)           STORE MASK
NOTYPE   EQU   *
*                                                                 CW013
**  LOOK FOR OFFLINE=                                             CW013
*                                                                 CW013
         MVC   VALUE(8),NULL           ZERO RESULT FIELD          CW013
         LA    RW7,8                   KEY LENGTH                 CW013
         ST    RW7,KEYLEN              STORE                      CW013
         LA    RW7,KEY6                POINT AT KEY               CW013
         ST    RW7,KEYAD               STORE IN PARAM LIST        CW013
         LA    RW1,ARGS                POINT AT PARAM LIST        CW013
         LR    RW15,RW5                FNDTXT                     CW013
         BALR  14,15                   LINK TO ROUTINE            CW013
         CLI   VALUE,C'Y'              IS IT 'OFFLINE=YES'?       CW013
         BNE   ONONLY                  DEFAULT TO NO IF NOT       CW013
*                                                                 CW013
**  OFFLINE=Y FOUND - STORE IN OPTIONS                            CW013
*                                                                 CW013
         LA    RW7,TYPE(RW6)           POINT TO TYPE FIELD        CW013
         NI    0(RW7),X'FE'            KILL SUPPRESS OFFLINE BIT  CW013
ONONLY   EQU   *                                                  CW013
*
**  LOOK FOR UNIT=
*
         MVC   VALUE(8),NULL           ZERO RESULT FIELD
         LA    RW7,KEY1                POINT AT KEY
         ST    RW7,KEYAD               STORE IN PARAM LIST
         LA    RW1,ARGS                POINT AT PARAM LIST
         LR    RW15,RW5                FNDTXT
         BALR  14,15                   LINK TO ROUTINE
         CLC   VALUE(8),NULL           SET?
         BE    NOUNIT                  NO, BRANCH
         L     RW7,VALUE               PICK UP UNIT
         SLL   RW6,1                   DOUBLE INDEX
         ST    RW7,UNIT(RW6)           STORE UNIT
         SRL   RW6,1                   RESET INDEX
NOUNIT   EQU   *
*
**  LOOK FOR VOLSER
*
         MVC   VALUE(8),NULL           ZERO RESULT FIELD
         LA    RW7,7                   KEY LENGTH
         ST    RW7,KEYLEN              STORE LENGTH
         LA    RW7,KEY2                POINT AT KEY
         ST    RW7,KEYAD               STORE IN PARAM LIST
         LA    RW1,ARGS                POINT AT PARAM LIST
         LR    RW15,RW5                FNDTXT
         BALR  14,15                   LINK TO ROUTINE
         CLC   VALUE(8),NULL           SET?
         BE    NOVOLS                  NO, BRANCH
*
**  VOLSER FOUND
*
         LA    RW7,VOLSER              POINT AT VOLSER
         AR    RW7,RW6                 ADD INDEX
         AR    RW7,RW6
         AR    RW7,RW6
         MVC   0(6,RW7),VALUE          MOVE IN VOLSER
NOVOLS   EQU   *
*
**  INCREMENT POINTERS AND READ NEXT CARD
*
         LA    RW6,2(RW6)              INCREMENT INDEX
         L     RW7,ICT                 LOAD COUNTER
         LA    RW7,1(RW7)              INCREMENT
         ST    RW7,ICT                 STORE
         C     RW7,=F'10'              LIMIT?
         BL    READIN                  NO, GET NEXT CARD
*
**  LIMIT REACHED
*
ENDATA   EQU   *
         MVI   ANY,X'FF'               SET FLAG
         L     RW7,ICT                 LOAD COUNTER
         LTR   RW7,RW7                 TEST
         BNZ   NOTFIRST                NO, BRANCH
         MVI   ANY,X'00'               SET FLAG TO NONE
NOTFIRST EQU   *
         TM    ANY,X'FF'               ANY SELECTED?
         BZ    RETURN
         SR    RW7,RW7                 CLEAR FOR INSERT           CW013
*
**  FIND START OF UCB TABLE
*
         L     RW3,16                  ADDRESS OF CVT
         L     RW3,40(RW3)             POINT TO UCB LOOKUP TABLE
         SR    RW4,RW4                 INITIALIZE UCB POINTER     CW012
         L     RW11,FENCE              LOAD FENCE/MASK REGISTER   CW012
*
**  CYCLE THRU TABLE LOGGING UCBS
*
NXTUCB   EQU   *
         LH    RW10,0(RW3)             ADDRESS OF NEXT UCB        CW012
*                                      IF ABOVE 32K, SIGN BIT GOT CW012
         NR    RW10,RW11                PROPAGATED, MASK IT OFF   CW012
         BZ    INCUCB                  IGNORE FILLER IN TABLE     CW012
         CR    RW10,RW11               TEST FOR FENCE VALUE       CW012
         BE    DONE                    HIT END OF UCB LOOKUP TBL  CW012
         CR    RW10,RW4                LOWER THAN PREVIOUS UCB?   CW012
         BL    INCUCB                  OPTCHAN IF SO, IGNORE      CW012
         LR    RW4,RW10                ADVANCE UCB POINTER        CW012
         USING UCBOB,RW4               UCB ADDRESSABILITY         CW012
         L     RW9,UCBEXTPT            ADDRESS OF UCB EXT CW012
         LA    RW9,0(RW9)              REMOVE TOP BYTE
         USING UCBCMEXT,RW9            UCB EXTENSION ADDRESSING   CW012
*
**  CHECK IF UCB REQUIRED
*
         L     RW8,ICT                 NUMBER OF OPTIONS          CW012
         SR    RW5,RW5                 INDEX
         TM    UCBSTAT,UCBONLI         IS THIS UCB ONLINE?        CW013
         BO    ONLINE                  YES, CONTINUE PROCESSING   CW013
         TM    FIRST,X'FF'             IS THIS FIRST SAMPLE?      CW013
         BZ    ONLINE                  YES, RECORD OFFLINE DEVICE CW013
         BALR  RW10,0                  SET INCOPT RETURN TO HERE  CW013
         LA    RW6,TYPE(RW5)           POINT TO TYPE FIELD        CW013
         TM    0(RW6),X'01'            CHECK SUPPRESS OFFLINE BIT CW013
         BO    INCOPT                  IF ON, DEV FAILS THIS TEST CW013
         B     ONLINE+2                OFF OK BUT DONT RESET RW10 CW013
ONLINE   BALR  RW10,0                  SET INCOPT RETURN TO HERE  CW013
*
**  TEST ASID
*
         LH    RW6,ASIDS(RW5)          PICK UP ASID
         LTR   RW6,RW6                 TEST
         BM    ALLASID                 ALL REQUIRED
         CH    RW6,UCBASID             CORRECT ASID?              CW012
         BNE   INCOPT                  NO, BRANCH
ALLASID  EQU   *
*
**  TEST TYPE
*
         LH    RW6,TYPE(RW5)           LOAD TYPE MASK
         LTR   RW6,RW6                 TEST
         BM    ALLTYPE                 ALL REQUIRED
         IC    RW7,UCBDVCLS            INSERT UCB TYPE            CW012
*                                      NO SHIFT NEEDED HERE       CW012
         NR    RW6,RW7                 AND WITH MASK              CW013
*                                      SINCE ONLY LOW BYTE OF RW7 CW013
*                                        IS NONZERO, THIS KILLS   CW013
*                                          THE OFFLINE FLAG       CW013
         CR    RW6,RW7                 THIS TYPE WANTED?          CW013
         BNE   INCOPT                  NO, BRANCH
ALLTYPE  EQU   *
*
**  TEST UNIT
*
         LA    RW6,UNIT(RW5)           GET ADDRESS OF             CW012
         AR    RW6,RW5                 UNIT                       CW012
         CLC   0(3,RW6),NULL           SET?
         BE    ALLUNIT                 NO, BRANCH
         CLC   0(3,RW6),UCBNAME        CORRECT UNIT?              CW012
         BNE   INCOPT                  NO, BRANCH
ALLUNIT  EQU   *
*
**  TEST VOLSER
*
         LA    RW6,VOLSER(RW5)         GET ADDRESS OF
         AR    RW6,RW5                 VOLSER
         AR    RW6,RW5
         CLC   0(6,RW6),NULL           SET?
         BE    WANTED                  NO, DEVICE IS WANTED
         TM    UCBDVCLS,X'A0'          DA OR TAPE?                CW012
         BZ    INCOPT                  NO, CAN'T MATCH VOLSER
         CLC   0(6,RW6),UCBVOLI        CORRECT VOLSER?            CW012
         BE    WANTDDS                 YES, BRANCH                CW012
INCOPT   EQU   *
*
**  NOT WANTED THIS OPTION - TRY NEXT
*
         LA    RW5,2(RW5)              INCREMENT INDEX
         BCTR  RW8,RW10                TRY NEXT                   CW013
         B     NOTHIS                  NOT WANTED
*                                                                 CW012
**  DEVICE WANTED - CHECK FOR DA OR TAPE                          CW012
*                                                                 CW012
WANTED   LA    RW7,11                  LOAD LENGTH OF DATA        CW012
         TM    UCBDVCLS,X'A0'          DA OR TAPE?                CW012
         BZ    NODDS                   NO, NO DEV DEPENDENT SECT  CW012
WANTDDS  MVC   UC$DDS(24),UCBDEV       DEVICE DEPENDENT SECTION   CW012
         LA    RW7,17                  LOAD DATA LENGTH           CW012
NODDS    EQU   *                                                  CW012
         MVC   UC$DAT(24),UCBOB        MOVE UCB                   CW012
         MVC   UC$EXT(16),UCBCMEXT     MOVE UCB EXT               CW012
         ST    RW7,LENGTH              STORE DATA LENGTH          CW012
*
**  WRITE RECORD
*
         LA    RW1,ADARGS              POINT AT PARAMS
         L     RW15,ADRT               GET ADDRESS OF MONRT
         BALR  14,15                   LINK TO MONRT
NOTHIS   EQU   *
*
**  POINT AT NEXT UCB
*
INCUCB   EQU   *
         LA    RW3,2(RW3)              INCREMENT POINTER
         B     NXTUCB
*
**  RETURN
*
DONE     EQU   *                                                  CW012
         MVI   FIRST,X'FF'             SHOW FIRST SAMPLE COMPLETE CW012
RETURN   EQU   *
         L     13,4(13)
         LM    14,12,12(13)            RESTORE REGISTERS
         BR    14
*
**  LITERAL CONSTANTS
*
         LTORG
*
**  STORAGE AND CONSTANTS
*
SAVE     DS    18F
ADRT     DS    F
ADARGS   DC    A(NAME)
         DC    A(LENGTH)
         DC    A(TOD)
         DC    A(FLAG)
NAME     DC    CL8'MONU'
LENGTH   DS    F
FLAG     DC    F'0'
TOD      DS    F
UC$DAT   DS    6F
UC$EXT   DS    4F
UC$DDS   DS    6F
ARGLST   DC    A(NAME)
         DC    A(BUFFER)
         DC    A(IFLAG)
BUFFER   DC    CL80' '
IFLAG    DC    F'0'
ARGS     DC    A(LENBUF)
         DC    A(BUFFER)
         DC    A(KEYLEN)
KEYAD    DS    F
         DC    A(THERE)
         DC    A(VALUE)
ICT      DC    F'0'
LENBUF   DC    F'80'
KEYLEN   DS    F
THERE    DS    F
VALUE    DS    2F
FENCE    DC    X'0000FFFF'             MASK, TABLE END MARKER     CW012
NULL     DC    CL8' '
KEY1     DC    CL8'UNIT='
KEY2     DC    CL8'VOLSER='
KEY3     DC    CL8'ASID='
KEY4     DC    CL8'JOB='
KEY5     DC    CL8'TYPE='
KEY6     DC    CL8'OFFLINE='                                      CW013
ASIDS    DC    10H'-1'
TYPE     DC    10H'-1'
UNIT     DC    10CL4' '
VOLSER   DC    10CL6' '
TAPE     DC    CL4'TAPE'
         DC    CL4'COMM'
         DC    CL4'DA'
         DC    CL4'DISP'
         DC    CL4'UREC'
         DC    CL4'CHAR'
         DC    CL4'CTCA'
MASK     DC    X'80402010080441'
FIRST    DC    X'00'
ANY      DC    X'00'
UCB      DSECT ,                       AVOID INCLUDING IN CODE    CW012
         IEFUCBOB LIST=YES             MAP UCB DSECT              CW012
         END
