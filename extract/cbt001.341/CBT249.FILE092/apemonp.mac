         TITLE 'MONP - MONITOR SELECTED PFTES'
* MODIFICATION CW015 80/11/07 SHIFT VBN FOR + FORTRAN INTEGER*2   CW015
* MODIFICATION CW016 80/12/02 FIX FOR NEG HALFWORD WHEN REAL > 8M CW016
MONP     CSECT
         B     ENTRY-MONP(15)
         DC    X'06',CL7'MONP'
ENTRY    EQU   *
*
**  LINKAGE IS MONP(INPUT,MONRT,TIME,FNDVAL,FNDPRS,FNDTXT)
*
*   ROUTINE WRITES SEQUENCES OF RECORDS OF THE FORM:
*   MONP,LENGTH,TIME,TYPE,JOBNAME   TYPE=0   NO ASID FOUND
*   MONP,LENGTH,TIME,TYPE,ASID,JOBNAME,VBN/FIX COUNT,FLAGS
*      TYPE=1  JOBNAME FOUND
*   MONP,LENGTH,TIME,TYPE,ASID,JOBNAME  TYPE=2 ASID FOR JOBNAME
*
RW0      EQU   0
RW1      EQU   1
RB2      EQU   2
RW3      EQU   3
RW4      EQU   4
RW5      EQU   5
RW6      EQU   6
RW7      EQU   7
RW8      EQU   8
RW9      EQU   9
RW10     EQU   10                                                 CW015
*W11     EQU   11
*W12     EQU   12
RW15     EQU   15
         STM   14,12,12(13)
         BALR  RB2,0
         USING *,RB2
         LR    RW3,13
         ST    13,SAVE+4
         LA    13,SAVE
         ST    13,8(RW3)
*
         LM    RW3,RW8,0(1)            LOAD PARAM ADDRESSES
         MVC   ADRT(4),0(RW4)          STORE ADDRESS OF MONRT
         MVC   TIME(4),0(RW5)          MOVE TOD
         LA    RW10,4095               LOAD MASK REGISTER         CW015
         TM    FIRST,X'FF'             FIRST TIME THRU?
         BNZ   NOTFIRST                NO,BRANCH
         MVI   FIRST,X'FF'              SET FIRST TIME FLAG
*
**  SET UP TO LOOK FOR OPTIONS
*
         L     RW3,0(RW3)              ADDRESS OF INPUT
         L     RW4,0(RW6)              ADDRESS OF FNDVAL
         L     RW5,0(RW8)              ADDRESS OF FNDTXT
         LA    RW7,ASIDS               SET POINTER TO OPTIONS
READIN   EQU   *
*
**  READ IN INPUT PARAMETERS
*
         SR    RW6,RW6
         ST    RW6,FLAG                SET EOF FLAG
         LA    RW1,ADARGS2             POINT AT PARAM LIST
         LR    RW15,RW3                POINT AT INPUT
         BALR  14,15                   READIN CARD
         L     RW6,FLAG                LOAD EOF FLAG
         LTR   RW6,RW6                 EOF?
         BNZ   ENDREAD                 NON-ZERO END
*
**  LOOK FOR JOB=
*
         MVC   VALUE(8),NULL           BLANK OUT RESULTS FIELD
         LA    RW6,KEY1                POINT AT JOB=
         ST    RW6,KEYAD               STORE IN PARAM LIST
         LA    RW6,LEN1                POINT AT LENGTH
         ST    RW6,KEYLEN              STORE IN PARAM LIST
         LA    RW1,ADARGS3             POINT AT PARAM LIST
         LR    RW15,RW5                POINT AT FNDTXT
         BALR  14,15                   LINK TO ROUTINE
         CLC   VALUE(8),NULL           STILL BLANK?
         BE    NOJOB                   YES,LOOK FOR ASID=
*
**  CHECK TYPE OF JOBNAME
*
         CLC   VALUE(8),ALL            *ALL?
         BNE   NOTALL                  NO,BRANCH
*
**  SET ASIDS(1) TO -2 AND BRANCH OUT
*
         L     RW3,=F'-2'              LOAD TYPE
         ST    RW3,ASIDS               STORE IN FIRST OPTION
         LA    RW3,1
         ST    RW3,ICT                 STORE NO OF OPTIONS
         B     ENDREAD                 BRANCH OUT
NOTALL   EQU   *
*
**  CHECK FOR VIO
*
         CLC   VALUE(8),VIO            *VIO?
         BNE   NOTVIO                  NO,BRANCH
*
**  SET ASIDS TO -3 AND BRANCH FOR MORE
*
         L     RW6,=F'-3'              LOAD FLAG
         ST    RW6,0(RW7)              STORE FLAG IN ASIDS
         B     INCREAD                 GO TO INCREMENT
NOTVIO   EQU   *
*
**  CHECK FOR PLPA
*
         CLC   VALUE(8),PLPA           *PLPA?
         BNE   NOTPLPA                 NO,BRANCH
*
**  SET ASIDS TO -1 AND BRANCH FOR MORE
*
         L     RW6,=F'-1'              SET TYPE
         ST    RW6,0(RW7)              STORE FLAG IN ASIDS
         B     INCREAD                 BRANCH FOR NEXT READ
NOTPLPA  EQU   *
*
**  LOOK FOR ASID FOR JOBNAME
*
         L     RW6,16                  CVT POINTER
         L     RW6,556(RW6)            ASVT POINTER
         LA    RW6,528(RW6)            ASCB QUEUE
NXTASCB  EQU   *
         L     RW8,0(RW6)              ASCB ADDRESS
         LA    RW8,0(RW8)              REMOVE TOP BYTE
         LTR   RW8,RW8                 END OF ASCB QUEUE
         BZ    ASCBEND                 YES,BRANCH
         TM    0(RW6),X'80'            ASCB IN USE?
         BNZ   INCASCB                 NO,INCREMENT
         CLC   ASCB(4),0(RW8)          CHECK ASCB
         BNE   ASCBEND                 INCORRECT END
         L     RW9,172(RW8)            JOBNAME POINTER
         LTR   RW9,RW9                 ZERO?
         BNZ   JOBOK                   NO,BRANCH
         L     RW9,176(RW8)            OTHER JOBNAME POINTER
JOBOK    EQU   *
         CLC   VALUE(8),0(RW9)         CARRECT ASCB?
         BE    GOTJOB                  YES,BRANCH
INCASCB  EQU   *
*
**  INCREMENT POINTERS FOR NEXT ASCB
*
         LA    RW6,4(RW6)              POINT AT NEXT ASCB ENTRY
         B     NXTASCB                 BRANCH BACK
GOTJOB   EQU   *
*
**  ASCB FOUND - SET ASID INTO OPTIONS
*
         LH    RW9,36(RW8)             PICK UP ASID
         ST    RW9,0(RW7)              STORE IN ASIDS
*
**  WRITE TYPE 2 RECORD
*
         MVC   JOBNAME(8),VALUE        MOVE IN JOBNAME
         ST    RW9,ASID                MOVE IN ASID               STH
         LA    RW6,2                   LOAD TYPE OF RECORD
         ST    RW6,TYPE                STORE                       STH
         LA    RW6,5                   LOAD DATA LENGTH              4
         ST    RW6,LENGTH
         LA    RW1,ADARGS              POINT AT PARAM LIST
         L     RW15,ADRT               POINT AT ROUTINE
         BALR  14,15                   LINK TO MONRT
         B     INCREAD
*
**  JOBNAME NOT FOUND - WRITE TYPE 0 RECORD
*
ASCBEND  EQU   *
         MVC   JOBNAME(8),VALUE
         LA    RW6,5                   LOAD DATA LENGTH              4
         ST    RW6,LENGTH
         SR    RW6,RW6                 LOAD TYPE
         ST    RW6,TYPE                CLEAR TYPE                  STH
         ST    RW6,ASID                CLEAR ASID                  STH
         LA    RW1,ADARGS              POINT AT PARAM LIST
         L     RW15,ADRT               POINT AT ROUTINE
         BALR  14,15                   LINK TO MONRT
         B     READIN                  BRANCH WITHOUT INCREMENT
NOJOB    EQU   *
*
**  LOOK FOR ASID=
*
         SR    RW6,RW6
         ST    RW6,VALUE               ZERO RESULT FIELD
         LA    RW6,KEY2                POINT AT ASID=
         ST    RW6,KEYAD               STORE IN PARAM LIST
         LA    RW6,LEN2                POINT AT KEY LENGTH
         ST    RW6,KEYLEN              STORE IN PARAM LIST
         LA    RW1,ADARGS3             POINT AT PARAM LIST
         LR    RW15,RW4                POINT AT FNDVAL
         BALR  14,15                   LINK TO ROUTINE
         L     RW6,THERE               TEST FOR PRESENCE
         LTR   RW6,RW6                 ZERO?
         BZ    READIN                  YES,BLANK CARD
         L     RW6,VALUE               LOAD ASID
         ST    RW6,0(RW7)              STORE IN OPTIONS
INCREAD  EQU   *
*
**  INCREMENT POINTERS FOR NEXT OPTION
*
         L     RW6,ICT                 LOAD COUNTER
         LA    RW6,1(RW6)              INCREMENT
         ST    RW6,ICT
         C     RW6,=F'10'              LIMIT REACHED?
         BH    ENDREAD                 YES,BRANCH
         LA    RW7,4(RW7)              INCREMENT POINTER
         B     READIN                  BRANCH BACK
*
**  END OF DATA
*
ENDREAD  EQU   *
         MVI   ANY,X'FF'               SET FLAG
*
**  SET UP FOR TYPE 1 RECORD
*
         LA    RW5,1                   TYPE 1
         ST    RW5,TYPE                                            STH
         LA    RW5,7                   LENGTH OF DATA                6
         ST    RW5,LENGTH
*
**  CHECK FOR ANY OPTIONS
*
         L     RW6,ICT                 LOAD COUNTER
         LTR   RW6,RW6                 ZERO?
         BNZ   NOTFIRST                NO,BRANCH
         MVI   ANY,X'00'               SET NONE FLAG
NOTFIRST EQU   *
         TM    ANY,X'FF'               TEST ANY FLAG
         BZ    NONE                    NO OPTIONS SELECTED
*
**  CYCLE THRU PFTE'S LOOKING FOR WANTED PAGES
*
         L     RW3,16                  CVT
         L     RW4,556(RW3)            ASVT
         LA    RW4,524(RW4)            ASCB QUEUE
         L     RW5,356(RW3)            PVT
         L     RW6,12(RW5)             PFT
         LH    RW7,18(RW5)             OFFSET OF LAST PFTE        CW016
         N     RW7,HWMASK              CLEAR HIGH HALF WORD       CW016
         AR    RW7,RW6                 ADD APPARENT PFTE ORIGIN   CW016
         AH    RW6,16(RW5)             THEN GET FIRST PFTE        CW016
NXTPFTE  EQU   *
*
**  CYCLE THRU OPTIONS LOOKING IF PFTE WANTED
*
         L     RW3,ICT                 NO OF OPTIONS
         LA    RW5,ASIDS               POINT AT OPTIONS
         CLC   0(4,RW5),=F'-2'         *ALL?
         BE    WANTED                  YES, BRANCH
NXTICT   EQU   *
         TM    13(RW6),X'10'           VIO?
         BNO   NOVIO                   NO, BRANCH
         CLC   0(4,RW5),=F'-3'         *VIO?
         BNE   INCICT                  NO, BRANCH
         MVC   JOBNAME(8),VIO          SET JOBNAME
         LH    RW8,0(RW6)              LOAD ASID FOR VIO
         STH   RW8,ASID                STORE IN DATA AREA
         B     WANT
NOVIO    EQU   *
         LH    RW8,0(RW6)              LOAD PFTE ASID
         C     RW8,0(RW5)              WANTED?
         BNE   INCICT                  NO, BRANCH
WANTED   EQU   *
         LH    RW8,0(RW6)              PICK UP ASID
         ST    RW8,ASID                STORE IN DATA AREA          STH
         C     RW8,=F'-1'              PLPA?
         BNE   NOPLPA                  NO, BRANCH
         MVC   JOBNAME(8),PLPA         SET JOBNAME
         B     WANT
NOPLPA   EQU   *
         TM    13(RW6),X'10'           VIO?
         BNO   VIONO                   NO, BRANCH
         MVC   JOBNAME(8),VIO          SET JOBNAME
         B     WANT
VIONO    EQU   *
         SLL   RW8,2                   SHIFT FOR INDEX
         AR    RW8,RW4                 POINTER TO ASCB ENTRY
         TM    0(RW8),X'80'            ASCB IN USE?
         BNZ   INCPFTE                 NO, BRANCH
         L     RW8,0(RW8)              ASCB ADDRESS
         L     RW9,172(RW8)            JOBNAME POINTER
         LTR   RW9,RW9                 ZERO?
         BNZ   NAMOK                   NO, BRANCH
         L     RW9,176(RW8)            JOBNAME POINTER
NAMOK    EQU   *
         MVC   JOBNAME(8),0(RW9)       MOVE IN JOBNAME
WANT     EQU   *
         LH    RW0,2(,RW6)             LOAD VBN                   CW015
         SRL   RW0,4                   REDUCE TO UNITS OF 1 PAGE  CW015
         NR    RW0,RW10                KILL PROPAGATED SIGN BITS  CW015
         STH   RW0,VBN                 STORE AS HALFWORD 0XXX     CW015
         MVC   FIX(2),8(RW6)           FIX COUNT
         MVC   FLAGS(4),12(RW6)        FLAGS
*
**  WRITE TYPE 1 RECORD
*
         LA    RW1,ADARGS              POINT AT PARAM LIST
         L     RW15,ADRT               POINT AT MONRT
         BALR  14,15                   LINK TO ROUTINE
*
**  INCREMENT PFTE
*
INCPFTE  EQU   *
         CR    RW6,RW7                 LAST PFTE?
         BNL   ENDPFTE                 YES, BRANCH
         LA    RW6,16(RW6)             NEXT PFTE
         B     NXTPFTE                 BRANCH BACK
INCICT   EQU   *
*
**  INCREMENT FOR NEXT OPTION
*
         LA    RW5,4(RW5)              INCREMENT POINTER
         BCT   RW3,NXTICT              DECREMENT COUNT
         B     INCPFTE                 NEXT PFTE
*
**  END OF PFTE QUEUE
*
ENDPFTE  EQU   *
NONE     EQU   *
*RAP     DC    H'0'                    *** TEMPORARY ABEND ***    CW***
         L     13,4(13)
         LM    14,12,12(13)
         BR    14
*
*   STORAGE AND CONSTANTS
*
ADARGS2  DC    A(NAME)
         DC    A(BUFFER)
         DC    A(FLAG)
BUFFER   DC    80C' '
FLAG     DS    F
FIRST    DC    X'00'
ANY      DC    X'FF'
KEY1     DC    CL8'JOB=    '
KEY2     DC    CL8'ASID=   '
LEN1     DC    F'4'
LEN2     DC    F'5'
HWMASK   DC    X'0000FFFF'             FIX LH INST FOR OVER 7FFF  CW016
ICT      DC    F'0'
ASIDS    DC    10F'0'
ADARGS3  DC    A(LENBUF)
         DC    A(BUFFER)
KEYLEN   DS    F
KEYAD    DS    F
         DC    A(THERE)
         DC    A(VALUE)
THERE    DS    F
VALUE    DS    2F
LENBUF   DC    F'80'
NULL     DC    CL8' '
ALL      DC    CL8'*ALL'
PLPA     DC    CL8'*PLPA'
VIO      DC    CL8'*VIO'
SAVE     DS    18F
ADRT     DS    F
LENGTH   DS    F
NAME     DC    CL8'MONP'
ASCB     DC    C'ASCB'
IFLAG    DC    F'0'
*
ADARGS   DC    A(NAME)
         DC    A(LENGTH)
         DC    A(TIME)
         DC    A(IFLAG)
*
*
         DS    0D
TIME     DS    F
TYPE     DS    F                               FOLLOW THIS WITH ASID H
*ASID     DS    H
JOBNAME  DC    C'        '
ASID     DS    F                                                     H
VBN      DS    H
FIX      DS    H
FLAGS    DS    F
*
         LTORG
         END
