*          DATA SET ANBMONQ    AT LEVEL 001 AS OF 10/02/76
         TITLE 'MONQ - MONITOR SELECTED QCBS'
MONQ     CSECT
         B     ENTRY-MONQ(15)
         DC    X'06',CL7'MONQ'
ENTRY    EQU   *
*
**  ROUTINE LOGS SELECTED MAJOR/MINOR QCB CHAINS
**  LINKAGE IS MONQ(INPUT,MONRT,TOD,FNDVAL,FNDPRS,FNDTXT)
*
RW1      EQU   1
RB2      EQU   2
RW3      EQU   3
RW4      EQU   4
RW5      EQU   5
RW6      EQU   6
RW7      EQU   7
RW8      EQU   8
RW9      EQU   9
RW10     EQU   10
RW15     EQU   15
*
         STM   14,12,12(13)        SAVE REGISTERS
         BALR  RB2,0
         USING *,RB2
         ST    13,SAVE+4           CHAIN SAVE AREAS
         LR    RW3,13
         LA    13,SAVE
         ST    13,8(RW3)
*
**  PICK UP PARAMETERS OF CALL
*
         LM    RW3,RW5,0(1)            PICK UP PARAM ADDRESSES
         MVC   ADRT(4),0(RW4)          ADDRESS OF MONRT
         MVC   TOD(4),0(RW5)           MOVE TOD
*
**  FIRST TIME THRU?
*
         TM    FIRST,X'FF'             TEST FLAG
         BNZ   NOTFIRST                NOT FIRST,BRANCH
*
**  READ IN OPTIONS
*
         MVI   FIRST,X'FF'             SET FLAG
         L     RW3,0(RW3)              INPUT
         LM    RW4,RW5,16(1)           OTHER PARAMS
         L     RW4,0(RW4)              FNDPRS
         L     RW5,0(RW5)              FNDTXT
         SR    RW6,RW6                 INDEX
READIN   EQU   *
*
**  READ IN NEXT CARD
*
         LA    RW1,ARGLST              POINT AT PARAM LIST
         LR    RW15,RW3                INPUT
         BALR  14,15                   LINK TO ROUTINE
         L     RW7,IFLAG               PICK UP EOF FLAG
         LTR   RW7,RW7                 CHECK FOR EOF
         BNZ   ENDATA                  END IF EOF
*
**  LOOK FOR *ALL
*
         TM    BITS,X'01'              ALREADY SET?
         BNZ   NOTALL                  YES,IGNORE
         LA    RW7,4                   KEY LENGTH
         ST    RW7,KEYLEN              STORE
         LA    RW7,ASTALL              POINT AT *ALL
         ST    RW7,KEYAD               STORE IN PARAM ,IST
         LA    RW1,ARGS                POINT AT PARAM LIST
         LR    RW15,RW4                FNDPRS
         BALR  14,15                   LINK TO ROUTINE
         L     RW7,THERE               CHECK FOR PRESENCE
         LTR   RW7,RW7                 TEST
         BZ    NOTALL                  NO,BRANCH
         OI    BITS,X'01'              SET FLAG
         B     READIN                  GO FOR NEXT CARD
NOTALL   EQU   *
*
**  LOOK FOR *MAJOR
*
         LA    RW7,6                   KEY LENGTH
         ST    RW7,KEYLEN              STORE
         TM    BITS,X'02'              ALREADY SET?
         BNZ   NOTMAJ                  YES,IGNORE
         LA    RW7,ASTMAJ              POINT AT *MAJOR
         ST    RW7,KEYAD               STORE IN  ARAM LIST
         LA    RW1,ARGS                POINT AT PARAM LIST
         LR    RW15,RW4                FNDPRS
         BALR  14,15                   LINK TO ROUTINE
         L     RW7,THERE               TEST FOR PRESENCE
         LTR   RW7,RW7                 TEST
         BZ    NOTMAJ                  NOT THERE,BRANCH
         OI    BITS,X'02'              SET FLAG
         B     READIN                  GO FOR NEXT CARD
NOTMAJ   EQU   *
*
**  LOOK FOR *MINOR
*
         TM    BITS,X'04'              ALREADY SET?
         BNZ   NOTMIN                  YES,IGNORE
         LA    RW7,ASTMIN              POINT AT *MINOR
         ST    RW7,KEYAD               STORE IN PARAM LIST
         LA    RW1,ARGS                POINT AT PARAM LIST
         LR    RW15,RW4                FNDPRS
         BALR  14,15                   LINK TO ROUTINE
         L     RW7,THERE               TEST FOR PRESENCE
         LTR   RW7,RW7                 TEST
         BZ    NOTMIN                  NOT THERE,BRANCH
         OI    BITS,X'04'              SET FLAG
         B     READIN                  GO FOR NEXT CARD
NOTMIN   EQU   *
*
**  LOOK FOR MAJOR=
*
         LA    RW7,KEY1                POINT AT KEY1
         ST    RW7,KEYAD               STORE IN PARAM LIST
         MVC   VALUE(8),NULL           ZERO RESULT FIELD
         LA    RW1,ARGS                POINT AT PARAM LIST
         LR    RW15,RW5                FNDTXT
         BALR  14,15                   LINK TO ROUTINE
         CLC   VALUE(8),NULL           SET?
         BE    READIN                  NO,TRY NEXT CARD
         LA    RW7,MAJOR(RW6)          POINT AT MAJOR ENTRY
         MVC   0(8,RW7),VALUE          MOVE IN QNAME
*
**  LOOK FOR MINOR=
*
         LA    RW7,KEY2                POINT AT MINOR=
         ST    RW7,KEYAD               STORE IN PARAM LIST
         MVC   VALUE(8),NULL           SET RESULT FIELD
         LA    RW1,ARGS                POINT AT PARAM LIST
         LR    RW15,RW5                FNDTXT
         BALR  14,15                   LINK TO ROUTINE
         CLC   VALUE(8),NULL           SET?
         BE    INCREAD                 NO,BRANCH
         LA    RW7,MINOR(RW6)          POINT AT MINOR ENTRY
         MVC   0(8,RW7),VALUE          MOVE IN MINOR NAME
INCREAD  EQU   *
*
**  INCREMENT FOR NEXT ENTRY
*
         LA    RW6,8(RW6)              INDEX
         L     RW7,ICT                 COUNTER
         LA    RW7,1(RW7)              INCREMENT
         ST    RW7,ICT                 STORE
         C     RW7,=F'10'              LIMIT?
         BL    READIN                  NO,GET NEXT CARD
*
**  END OF DATA
*
ENDATA   EQU   *
         MVI   ANY,X'FF'               SET ANY FLAG
         L     RW7,ICT                 LOAD COUNTER
         LTR   RW7,RW7                 TEST
         BNZ   NOTFIRST                SOME
         TM    BITS,X'07'              TEST OPTIONS
         BNZ   NOTFIRST
         MVI   ANY,X'00'               SET NONE FLAG
NOTFIRST EQU   *
*
**  TEST IF ANY REQUIRED
*
         TM    ANY,X'FF'               ANY?
         BZ    RETURN                  NO,RETURN
*
**  FIND START AND END OF MAJOR QCB CHAIN
*
         L     RW3,16                  CVT
         L     RW4,556(RW3)            ASVT POINTER
         LA    RW4,524(RW4)            ASCB QUEUE
         ST    RW4,ASCBQ               STORE Q ADDRESS
         L     RW4,644(RW3)            LAST QCB ADDRESS
         ST    RW4,LASTMAJ             STORE
         L     RW3,640(RW3)            FIRST QCB ADDRESS
*
**  LOOK AT MAJOR QCB TO FIND MATCHING OPTIONS
*
NXTMAJ   EQU   *
         MVC   QNAME(8),16(RW3)        MOVE IN QNAME
         TM    BITS,X'02'              *MAJOR SET?
         BZ    NOTYPE1                 NO,BRANCH
*
**  WRITE TYPE 1 RECORD
*
         LA    RW4,1                   LOAD TYPE
         ST    RW4,TYPE                STORE
         LA    RW4,4                   DATA LENGTH
         ST    RW4,LENGTH              STORE
         LA    RW1,ADARGS              POINT AT PARAM LIST
         L     RW15,ADRT               MONRT
         BALR  14,15                   LINK TO ROUTINE
NOTYPE1  EQU   *
*
**  CHECK IF TYPE 2 OR 0 RECORDS ARE WANTED
*
         CLC   QNAME(8),SYSDSN         SYSDSN?
         BE    NOT20
         TM    BITS,X'05'              *ALL/*MINOR ?
         BNZ   SETMIN                  YES,WANTED
*
**  COMPARE WITH OPTIONS FOR MAJORNAMES
*
NOT20    EQU   *
         L     RW4,ICT                 NO OF OPTIONS
         LTR   RW4,RW4                 ANY?
         BZ    INCMAJ
         LA    RW5,MAJOR               POINT AT MAJOR OPTIONS
MAJOPT   EQU   *
         CLC   QNAME(8),0(RW5)         WANTED?
         BE    SETMIN                  YES
         LA    RW5,8(RW5)              INCREMENT INDEX
         BCT   RW4,MAJOPT              TRY NEXT OPTION
INCMAJ   EQU   *
*
**  FIND NEXT MAJOR QCB
*
         C     RW3,LASTMAJ             LAST QCB?
         BE    RETURN                  YES,RETURN
         LR    RW4,RW3                 TRANSFER QCB ADDRESS
         L     RW3,0(RW3)              NEXT QCB
         C     RW4,4(RW3)              CORRECT BACK POINTER?
         BNE   RETURN                  NO,GIVE UP
         B     NXTMAJ                  TRY NEXT MAJOR
SETMIN   EQU   *
*
**  LOOK ZT MINOR QCB FOR MATCHING OPTIONS
*
         L     RW4,8(RW3)              FIRST MINOR QCB
         L     RW5,12(RW3)             LAST MINOR QCB
         ST    RW5,LASTMIN             STORE
NXTMIN   EQU   *
         MVC   RNAME(1),BLNK           BLANK OUT RNAME
         MVC   RNAME+1(47),RNAME
         SR    RW5,RW5
         IC   RW5,16(RW4)              INSERT RNAME LENGTH
         BCTR  RW5,0                   REDUCE BY 1
         C     RW5,=F'47'              > MAX
         BNH   OKLEN                   NO,BRANCH
         LA    RW5,47                  SET TO MAX
OKLEN    EQU   *
         EX    RW5,MOVMIN              MOVE IN RNAME
         MVC   MINDAT(4),16(RW4)       MOVE IN MINOR QCB DATA
*
**  CHECK FOR *MINOR WANTED
*
         CLC   QNAME(8),SYSDSN         SYSDSN?
         BE    NOTYPE2                 YES,IGNORE TYPE2
         TM    BITS,X'04'              *MINOR?
         BZ    NOTYPE2                 NO,IGNORE
         LA    RW5,2                   TYPE OF RECORD
         ST    RW5,TYPE                STORE
         LA    RW5,17                  DATA LENGTH
         ST    RW5,LENGTH
         LA    RW1,ADARGS              POINT AT PARAM LIST
         L     RW15,ADRT               MONRT
         BALR  14,15                   LINK TO ROUTINE
NOTYPE2  EQU   *
*
**  CHECK IF MINOR NAME/MAJOR NAME MATCHES
*
         CLC   QNAME(8),SYSDSN         SYSDSN?
         BE    NOT0                    YES,IGNORE TYPE0
         TM    BITS,X'01'              *ALL?
         BE    SETQEL                  YES,BRANCH
NOT0     EQU   *
         L     RW5,ICT                 LOAD COUNTER
         LTR   RW5,RW5                 ANY OPTIONS?
         BZ    INCMIN                  NO,BRANCH
         LA    RW6,MAJOR               INDEX
         LA    RW7,MINOR               INDEX
MINOPT   EQU   *
         CLC   QNAME(8),0(RW6)         CORRECT MAJOR?
         BNE   NXTOPT                  NO,BRANCH
         CLC   RNAME(8),NULL           MINOR=NULL?
         BE    SETQEL                  YES,WANTED
         CLC   RNAME(8),0(RW7)         RNAME SET?
         BE    SETQEL                  YES,WANTED
NXTOPT   EQU   *
*
**  TRY NEXT OPTION
*
         LA    RW6,8(RW6)              NEXT MAJOR OPTION
         LA    RW7,8(RW7)              NEXT MINOR OPTION
         BCT    RW5,MINOPT             RETRY
INCMIN   EQU   *
*
**  THIS MINOR CHAIN NOT WANTED - INCREMENT
*
         C     RW4,LASTMIN             LAST MINOR?
         BE    INCMAJ                  TRY NEXT MAJOR
         LR    RW5,RW4                 TRANSFER QCB ADDRESS
         L     RW4,0(RW4)              NEXT MINOR QCB
         C     RW5,4(RW4)              CORRECT BACK POINTER?
         BNE   INCMAJ                  NO,TRY NEXT MAJOR CHAIN
         B     NXTMIN                  NEXT MINOR CHAIN
SETQEL   EQU   *
*
**  SET UP FOR TYPE0 RECORD
*
         SR    RW5,RW5                 SET TYPE TO 0
         ST    RW5,TYPE
         LA    RW5,24                  DATA LENGTH
         ST    RW5,LENGTH
         L     RW5,8(RW4)              FIRST QEL
NXTQEL   EQU   *
         LA    RW6,7                   DEFAULT QEL LENGTH
         TM    12(RW5),X'20'           LIST QEL?
         BZ    NOTLIST                 NO,BRANCH
         LA    RW6,15                  LIST QEL LENGTH
NOTLIST  EQU   *
         TM    12(RW5),X'10'           RESERVE QEL?
         BZ    NOTRES                  NO,BRANCH
         LA    RW6,19                  RESERVE QEL LENGTH
NOTRES   EQU   *
         EX    RW6,MOVQEL              MOVE IN DATA
*
**  FIND JOBNAME
*
         LH    RW6,14(RW5)             PICK UP ASID
         SLL   RW6,2                   SHIFT FOR INDEX
         A     RW6,ASCBQ               POINTER TO ASCB ENTRY
         TM    0(RW6),X'80'            ASCB IN USE?
         BNZ   INCASCB                 BRANCH IF NOT
         L     RW6,0(RW6)              ASCB ADDRESS
         L     RW10,172(RW6)           JOBNAME POINTER
         LTR   RW10,RW10               VALID?
         BNZ   NAMOK                   YES,BRANCG
         L     RW10,176(RW6)           NEXT JOBNAME POINTER
         LTR   RW10,RW10               VALID?
         BNZ   NAMOK                   YES,BRANCH
INCASCB  EQU   *
         LA    RW10,NULL
NAMOK    EQU   *
         MVC   JOBNAME(8),0(RW10)      MOVE IN JOBNAME
         LA    RW1,ADARGS              POINT AT PARAM LIST
         L     RW15,ADRT               MONRT
         BALR  14,15                   LINK TO ROUTINE
*
**  CHECK IF LAST QEL
*
         LR    RW6,RW5                 TRANSFER QEL ADDRESS
         L     RW5,0(RW5)              NEXT QEL ADDRESS
         LTR   RW5,RW5                 END?
         BZ    INCMIN                  YES,NEXT MINOR CHAIN
         C     RW6,4(RW5)              CORRECT BACK CHAIN?
         BNE   INCMIN                  NO,TRY NEXT MINOR
         B     NXTQEL                  NEXT QEL
*
**  RETURN
*
RETURN   EQU   *
         L     13,4(13)
         LM    14,12,12(13)        RESTORE REGISTERS
         BR    14
*
**  LITERAL CONSTANTS
*
         LTORG
*
**  SAVE AREAS AND STORAGE
*
SAVE     DS    18F
SYSDSN   DC    C'SYSDSN  '
BLNK     DC    C' '
ADRT     DS    F
ADARGS   DC    A(NAME)
         DC    A(LENGTH)
         DC    A(TOD)
         DC    A(FLAG)
*
NAME     DC    CL8'MONQ'
LENGTH   DS    F
TOD      DS    F
TYPE     DS    F
QNAME    DC    CL8' '
RNAME    DC    CL48' '
MINDAT   DS    F
QELDAT   DS    5F
JOBNAME  DS    2F
FLAG     DC    F'0'
ARGLST   DC    A(NAME)
         DC    A(BUFFER)
         DC    A(IFLAG)
BUFFER   DC    CL80' '
IFLAG    DC    F'0'
MAJOR    DC    10CL8' '
MINOR    DC    10CL8' '
ICT      DC    F'0'
ASTMAJ   DC    CL8'*MAJOR'
ASTMIN   DC    CL8'*MINOR'
ASTALL   DC    CL8'*ALL'
KEY1     DC    CL8'MAJOR='
KEY2     DC    CL8'MINOR='
ARGS     DC    A(LENBUF)
         DC    A(BUFFER)
         DC    A(KEYLEN)
KEYAD    DS    F
         DC    A(THERE)
         DC    A(VALUE)
KEYLEN   DS    F
LENBUF   DC    F'80'
THERE    DS    F
NULL     DC    CL8' '
LASTMAJ  DS    F
LASTMIN  DS    F
ASCBQ    DS    F
MOVMIN   MVC   RNAME(0),20(RW4)
MOVQEL   MVC   QELDAT(0),8(RW5)
BITS     DC    X'00'
ANY      DC    X'00'
FIRST    DC    X'00'
VALUE    DS    2F
         END
