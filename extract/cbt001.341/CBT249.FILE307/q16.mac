         PRINT NOGEN
PARSE    QSTART 'QUEUE COMMAND - COMMAND LINE PARSE ROUTINES'
         USING QDISPLAY,R10   BASE REG FOR DISPLAY WORK AREA
         L     R10,QVDSPL     LOAD BASE REG
         USING WORK,R13       BASE REG FOR LOCAL WORK AREA
***********************************************************************
*                                                                     *
*   PARSE SUBCOMMAND NAME                                             *
*                                                                     *
***********************************************************************
         LH    R2,QDRLNG      LENGTH OF REPLY LINE
         OC    QDREPLY,QBLANK TRANSLATE TO UPPER CASE
         CLC   QDREPLY,QBLANK IS THE ENTIRE REPLY BLANK?
         BE    LOOKUP         YES. DO LOOKUP.
         MVC   QDTLINE,QDREPLY MOVE COMMAND LINE TO HEADING
         MVC   FIELD,QBLANK   BLANK THE WORK FIELD
         MVC   OFFSET(4),=F'0' ZERO THE OFFSET AND LENGTH
         MVC   QOFF0(12),OFFSET INITIALIZE FIRST FIELD
         MVC   QOFF1(48),QOFF0 INITIALIZE NEXT FOUR FIELDS
         LA    R6,QOFF4+12    ADDR PAST LAST FIELD
         LA    R5,QOFF0       ADDR OF FIRST SET OF FIELDS
         LA    R3,QDREPLY     FIRST BYTE OF REPLY LINE
ENCORE   LA    R4,FIELD       FIRST BYTE OF WORK FIELD
BLANK    CLI   0(R3),C' '     IS THIS BYTE BLANK?
         BNE   FIRST          NO. START OF FIELD.
         LA    R3,1(R3)       YES. SKIP IT.
         BCT   R2,BLANK       TRY NEXT BYTE
         B     EMPTY          END OF REPLY LINE.
FIRST    LH    R1,QDRLNG      REPLY LENGTH
         SR    R1,R2          COMPUTE OFFSET TO START OF FIELD
         STH   R1,OFFSET      STORE OFFSET
         LR    R1,R2          SAVE COUNT OF REMAINING BYTES
         B     CHAR           CONTINUE
LOOP     CLI   0(R3),C' '     IS THIS BYTE BLANK?
         BE    LAST           YES. END OF FIELD.
CHAR     MVC   0(1,R4),0(R3)  MOVE BYTE TO SUBNAME
         LA    R3,1(R3)       INCREMENT
         LA    R4,1(R4)       INCREMENT
         BCT   R2,LOOP        TRY NEXT BYTE
LAST     SR    R1,R2          COMPUTE FIELD LENGTH
         CH    R1,=H'8'       IS LENGTH GREATER THAN 8?
         BNH   STORE          NO. USE IT.
         LA    R1,8           YES. USE LENGTH OF EIGHT.
STORE    STH   R1,LENGTH      STORE FIELD LENGTH
EMPTY    MVC   0(12,R5),OFFSET MOVE FIELD TO QCOMMON
         LTR   R2,R2          IS THE REMAINING LENGTH ZERO?
         BZ    LOOKUP         YES. DO THE TABLE LOOKUP.
         MVC   FIELD,QBLANK   BLANK THE WORK FIELD
         MVC   OFFSET(4),=F'0' ZERO OUT OFFSET AND LENGTH
         LA    R5,12(R5)      INCREMENT TO NEXT FIELD
         CR    R5,R6          WAS THAT THE LAST FIELD?
         BL    ENCORE         NO. PROCESS NEXT FIELD.
***********************************************************************
*                                                                     *
*   LOOK UP THE MODULE ADDRESS FOR THE SUB COMMAND                    *
*                                                                     *
***********************************************************************
LOOKUP   CLI   QSUBNAME,C'X'  IS THIS A PRIVILEGED OPERATION?
         BE    SECRET         YES. CHECK FOR PASSWORD.
LOOKUP2  LA    R2,TABLE       START OF SUBCOMMAND TABLE
NEXT     CLC   0(2,R2),QSUBNAME COMPARE FIRST TWO CHARACTERS
         BE    FOUND          THIS IS THE ONE
         LA    R2,8(R2)       NEXT ENTRY
         CLI   0(R2),X'FF'    IS THIS THE END OF TABLE?
         BNE   NEXT           NO. TRY NEXT ENTRY.
FOUND    MVC   QCODEH(6),2(R2) SUBCOMMAND CODE AND COMMAND ADDRESS
*        CLI   QPARM1,C'*'    USER WANTS LOGON ID AS DEFAULT      UF007
*        BNE   STOP           NO. EXIT                            UF007
*        MVI   QLNG1,X'08'    YES. SET LENGTH OF SUB PARM         UF007
*        MVC   QPARM1,QLOGON  MOVE LOGON ID INTO SUB PARM         UF007
STOP     QSTOP
***********************************************************************
*                                                                     *
*   CHECK AUTHORITY FOR X SUBCOMMANDS                                 *
*                                                                     *
***********************************************************************
SECRET   CLI   QSUBNAME+1,C'P' IS THIS THE PASSWORD?
         BE    PASSWD         YES. CHECK IT.
         TM    QXAUTH,1       IS THIS USER AUTHORIZED?
         BO    LOOKUP2        YES. PROCESS COMMAND.
BOUNCE   LA    R2,HELPCC      NO. PRETEND IT IS INVALID.
         B     FOUND          CONTINUE
PASSWD   CLC   QPARM1,=C'PASSWORD' DID THE USER SAY PASSWORD?
         BNE   BOUNCE         NO. REJECT.
         TPUT  WPASS,L'WPASS,FULLSCR,MF=(E,QTPUT)
*        LA    R1,RPASS       REPLY ADDRESS
         TGET  RPASS,8,EDIT,MF=(E,QTGET)
         CLC   RPASS,=C'YES SIR!' IS THE PASSWORD CORRECT?
         BNE   BOUNCE         NO. REJECT.
         OI    QXAUTH,1       AUTHORIZE USER
         QTILT '*** PASSWORD ACCEPTED ***'
***********************************************************************
*                                                                     *
*   MISCELLANY                                                        *
*                                                                     *
***********************************************************************
         LTORG
TABLE    DS    0D
         DC    C'ST',H'0',V(SEARCH)
         DC    C'DA',H'4',V(SEARCH)
         DC    C'DI',H'8',V(SEARCH)
         DC    C'DO',H'12',V(SEARCH)
         DC    C'AI',H'16',V(SEARCH)
         DC    C'AO',H'20',V(SEARCH)
         DC    C'HI',H'24',V(SEARCH)
         DC    C'HO',H'28',V(SEARCH)
         DC    C'DT',H'32',V(SEARCH)
         DC    C'DJ',H'36',V(SEARCH)
         DC    C'DS',H'40',V(SEARCH)
         DC    C'DQ',H'44',V(SEARCH)
         DC    C'DF',H'48',V(SEARCH)
         DC    C'XJ',H'36',V(SEARCH)
         DC    C'DE',H'0',V(SYSOUT)
         DC    C'RE',H'4',V(SYSOUT)
         DC    C'CA',H'8',V(SYSOUT)
         DC    C'JC',H'0',V(JCL)
         DC    C'JL',H'0',V(JLOG)
         DC    C'JM',H'0',V(JMSG)
         DC    C'DD',H'0',V(DDNAME)
         DC    C'LI',H'0',V(LIST)
         DC    C'L ',H'0',V(LIST)
         DC    C'SA',H'4',V(SAVE)
         DC    C'SL',H'0',V(SYSLOG)
         DC    C'XI',H'0',V(INITS)
         DC    C'DC',H'0',V(ACTIVE)
         DC    C'XB',H'0',V(HEXBLK)
         DC    C'XD',H'0',V(XDS)
         DC    C'FI',H'4',V(REPOS)
         DC    C'FA',H'4',V(REPOS)
         DC    C'F ',H'4',V(REPOS)
         DC    C'FT',H'8',V(REPOS)
         DC    C'CO',H'12',V(REPOS)
         DC    C'C ',H'12',V(REPOS)
         DC    C'@ ',H'16',V(REPOS)
         DC    C'MD',H'16',V(REPOS)
         DC    C'+ ',H'20',V(REPOS)
         DC    C'D ',H'20',V(REPOS)
         DC    C'PF',H'20',V(REPOS)
         DC    C'HF',H'20',V(REPOS)
         DC    C'- ',H'24',V(REPOS)
         DC    C'UP',H'24',V(REPOS)
         DC    C'PB',H'24',V(REPOS)
         DC    C'HB',H'24',V(REPOS)
         DC    C'TO',H'28',V(REPOS)
         DC    C'T ',H'28',V(REPOS)
         DC    C'BO',H'32',V(REPOS)
         DC    C'B ',H'32',V(REPOS)
         DC    C'MO',H'36',V(REPOS)                               UF003
         DC    C'M ',H'36',V(REPOS)                               UF003
HELPCC   DC    X'FF000000',V(HELP)
WPASS    DC    X'C1115D7F1140403C4040001D4C13'  *** SPF TCAM
WORK     DSECT
         DS    CL72
OFFSET   DS    H
LENGTH   DS    H
FIELD    DS    CL8
RPASS    DS    CL8
         QCOMMON
         END
