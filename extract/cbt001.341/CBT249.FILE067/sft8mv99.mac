//CMDEXEC  JOB (U00000,17F),SOFTWARE,CLASS=A,MSGCLASS=A
/*ROUTE PRINT LOCAL
//*
//*    ASM AND LKED PROGRAM
//*
//ASM         EXEC ASMFCL
//ASM.SYSIN    DD *
         TITLE 'CMDEXEC  -- COMMAND EXECUTOR VIA SVC 34'
***********************************************************************
*                                                                     *
*                      CMDEXEC  -- COMMAND EXECUTOR                   *
*                                                                     *
*                      AUTHOR: JAMES COOK  12/10/79                   *
*                                                                     *
*    THIS PROGRAM EXECUTES MVS SYSTEM OR JES2 COMMANDS WHICH ARE      *
*  PASSED TO THIS PROGRAM BY EITHER ITS PARAMETER OR THROUGH SYSIN    *
*  OR BOTH. EITHER THE PARAMETER OR THE SYSIN RECORDS CAN CONTAIN     *
*  MORE THAN ONE COMMAND. EACH COMMAND IS TO BE SEPERATED BY A ';'    *
*  (SEMICOLON) WHICH IS CONSIDERED AS A COMMAND DELIMITER. TWO        *
*  SEMICOLONS SEPERATED BY 0 OR MORE SPACES IS CONSIDERED A RECORD    *
*  DELIMITER AND THE REST OF THE RECORD IS IGNORED. THE PARAMETER     *
*  COMMAND(S) ARE EXECUTED FIRST FOLLOWED SYSIN.                      *
*                                                                     *
***********************************************************************
CMDEXEC  CSECT
         PROLOGUE SAVE=SAVEAREA
***********************************************************************
*    PARAMETER PROCESSING                                             *
***********************************************************************
         L     R2,0(R1)                LOAD ADDR OF PARM
         LH    R3,0(R2)                LOAD LEN  OF PARM
         LTR   R3,R3                   IS PARM LENGTH 0?
         BZ    NOPARMS                 YES, SO NO PARMS
         BCTR  R3,0                    SUBTRACT 1 FOR EXECUTE
         EX    R3,MOVEIT               MVC CMDFLD(0),2(R2)
         LA    R3,CMDFLD(R3)           R3 -> TO END OF CMD
         LA    R2,CMDFLD               R2 -> TO BEGIN OF CMD
         BAL   R9,CMDEX                EXECUTE THE CMD
***********************************************************************
*    CHECK FOR SYSIN DD CARD BY LOOKING IN THE TIOT DDENTRIES         *
***********************************************************************
NOPARMS  EQU   *
         L     R1,X'10'                R1 -> CVT
         L     R1,0(R1)                R1 -> TCB POINTERS
         L     R1,4(R1)                R1 -> CURRENT TCB (THAT'S ME)
         L     R1,12(R1)               R1 -> TIOT
         LA    R1,24(R1)               R1 -> FIRST DD ENTRY
         SR    R2,R2                   ZERO DD ENTRY LENGTH
DDSRCH   EQU   *
         IC    R2,0(R1)                INSERT LENGTH OF THIS DD ENTRY
         LTR   R2,R2                   IS IT ZERO
         BZ    END                     YES, NO SYSIN DD CARD
         CLC   4(8,R1),=CL8'SYSIN'     A SYSIN DD CARD?
         BE    DDFOUND                 YES, OPEN FILE
         AR    R1,R2                   NO, LOOK AT NEXT DD ENTRY
         B     DDSRCH                  BACK FOR MORE
***********************************************************************
*    OPEN FILE AND PROCESS EACH INPUT RECORD                          *
***********************************************************************
DDFOUND  EQU   *
         OPEN  (SYSIN,INPUT)           OPEN SYSIN FILE
         LTR   R15,R15                 DID FILE OPEN OK?
         BNZ   END                     NO, SKIP PROCESSING SYSIN
CMDLOOP  EQU   *
         GET   SYSIN,CMDFLD            READ IN THE CMD
         LA    R2,CMDFLD               R2 -> BEGIN OF CMD
         LA    R3,CMDFLD+79            R3 -> END OF CMD
         BAL   R9,CMDEX                EXECUTE THE CMD
         B     CMDLOOP                 BACK FOR MORE COMMANDS
         TITLE 'CMDEXEC  - COMMAND PARSER AND EXECUTOR'
***********************************************************************
*    EXECUTE EACH COMMAND VIA SVC 34. A RECORD MAY CONTAIN MORE       *
*    THAN ONE COMMAND ON IT. EACH COMMAND ON A RECORD IS SEPERATED    *
*    BY A ; WHICH IS CONSIDERED A COMMAND DELIMITER. TWO ;            *
*    SEPERATED BY 0 OR MORE SPACES IS CONSIDERED A RECORD DELIMITER   *
*    AND NO MORE COMMANDS (IF ANY) ON THE RECORD ARE PROCESSED.       *
*                                                                     *
*    REGISTER USAGE:                                                  *
*          R0,R1  --  USED BY CMD SVC                                 *
*             R2  --  POINTS TO CHARACTER ON RECORD BEING LOOKED AT   *
*             R3  --  POINTS TO END OF RECORD                         *
*             R4  --  POINTS TO BEGINNING OF COMMAND                  *
*             R5  --  POINTS TO END OF COMMAND                        *
*             R9  --  RETURN ADDR                                     *
***********************************************************************
CMDEX    EQU   *
         MVI   1(R3),C';'              MOVE IN DLM
         MVI   2(R3),C';'              TWO IN ROW MEANS REC DLM
CMDEXCNT EQU   *
         SR    R4,R4                   ZERO POINTER FOR CMD BEGIN
         SR    R5,R5                   ZERO POINTER FOR CMD END
CMDLOOP0 EQU   *
         CLI   0(R2),C';'              ARE WE AT THE END OF THIS CMD
         BE    CMDFND                  YES, PROCESS IT
         CLI   0(R2),C' '              IS THIS A SPACE?
         BE    CMDLOOP1                YES, SKIP POINTERS
         LR    R5,R2                   LOAD END WITH ADDRESS
         LTR   R4,R4                   HAVE WE FOUND BEGIN YET?
         BNZ   CMDLOOP1                YES, DON'T RESET IT
         LR    R4,R2                   LOAD BEGIN WITH POINTER
CMDLOOP1 EQU   *
         LA    R2,1(R2)                UP LOCATION POINTER
         B     CMDLOOP0                BACK TO LOOK AT NEXT CHAR
CMDFND   EQU   *
         LTR   R4,R4                   IS CMD BLANK?
         BZR   R9                      YES, MUST BE REC DLM, DONE
         SR    R5,R4                   R5 IS LENGHT FOR EX
         EX    R5,MOVEIT2              MVC CMDCMD(0),0(R4)
         LA    R5,5(R5)                ADD 4 FOR HEADER, 1 FOR EX
         STH   R5,CMDLEN               STORE THE LENGTH
         MODESET KEY=ZERO              NEED TO BE IN KEY ZERO FOR 34
         SR    R0,R0                   ZERO R0 MEANS CMD COMES FROM ?
         LA    R1,CMD                  LOAD ADDR OF COMMAND
         SVC   34                      ISSUE CMD SVC
         MODESET KEY=NZERO             RETURN TO PROPER KEY
         LA    R2,1(R2)                UP POINTER PAST THE ;
         B     CMDEXCNT                RETURN TO PROCESS NEXT CMD
***********************************************************************
*    CLOSE THE FILE AND EXIT THE PROGRAM                              *
***********************************************************************
EODAD    EQU   *
         CLOSE SYSIN                   CLOSE THE FILE
END      EQU   *
         STIMER WAIT,BINTVL==A(500)    WAIT FIVE SECONDS
         EPILOGUE RC=0                 RETURN
SAVEAREA DS    18F                     SAVE AREA
MOVEIT   MVC   CMDFLD(0),2(R2)         EXECUTED ABOVE
MOVEIT2  MVC   CMDCMD(0),0(R4)
CMD      EQU   *
CMDLEN   DS    H                       LEN OF CMD
CMDRES   DC    H'0'                    RESERVED, SET TO ZEROES
CMDCMD   DC    CL100' '                CMD TEXT
CMDFLD   DC    CL100' '                COMPLETE RECORD HERE
ENDREC   DC    C';;;;'                 END OF RECORD DLM
SYSIN    DCB   DDNAME=SYSIN,DSORG=PS,LRECL=80,MACRF=GM,EODAD=EODAD
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
//LKED.SYSLMOD DD DSN=SYS1.LINKLIB,DISP=SHR
//LKED.SYSIN   DD *
 SETCODE AC(1)
 NAME CMDEXEC(R)
/*
