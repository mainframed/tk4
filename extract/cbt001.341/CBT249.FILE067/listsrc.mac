//COMPILE  JOB (U00000),SOFTWARE,CLASS=A,MSGCLASS=A
//STEP1    EXEC PGM=IFOX00,PARM='NODECK,OBJECT',REGION=1024K
//SYSLIB    DD  DISP=SHR,DSN=SYS1.MACLIB
//SYSUT1    DD  UNIT=VIO,SPACE=(CYL,(2,1))
//SYSUT2    DD  UNIT=VIO,SPACE=(CYL,(2,1))
//SYSUT3    DD  UNIT=VIO,SPACE=(CYL,(2,1))
//SYSPRINT  DD  SYSOUT=*
//SYSGO     DD  UNIT=SYSDA,SPACE=(CYL,(2,1)),DSN=&&OBJMOD,
//     DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200),DISP=(MOD,PASS)
//SYSIN     DD  *
*/ ***************************************************************** /*
*                                                                     *
*  PANSPOOL - JES2 SYSMSG SPOOLING SYSTEM:  A PANVALET EXTERNAL WTR   *
*                                                                     *
*/ ***************************************************************** /*
*                                                                     *
*          DATA SET INTFC1082A AT LEVEL 001 AS OF 09/10/79            *
*                                                                     *
*/ ***************************************************************** /*
*                                                                     *
*  SOURCE:   CANADIAN PACIFIC INFORMATION SYSTEMS                     *
*            WINDSOR STATION                                          *
*            910 PEEL STREET                                          *
*            ROOM E-40                                                *
*            MONTREAL, QUEBEC, CANADA                                 *
*            H3C 3E4                                                  *
*            (514) 395-7880                                           *
*  CONTACT:  ESTELLE ROTHER                                           *
*                                                                     *
*/ ***************************************************************** /*
*                                                                     *
*  UPDATED 14MAR80, WILLIAM SMITH, MEMOREX CORPORATION,               *
*    SANTA CLARA, CALIFORNIA, (408)-987-3919                          *
*    .  MVS 3.8/JES2 4.1 - SE 1.1 - ACF/VTAM R2                       *
*    .  PANVALET/V10 W/TSO OPTION                                     *
*                                                                     *
*  INSTALLATION NOTES AND GUIDELINES                                  *
*    .  MUST BE LINKEDITED AUTHORIZED AND PLACED IN AN AUTHORIZED     *
*       LIBRARY (KEY=ZERO, MODE=SUP)                                  *
*    .  CONTAINS INSTALLATION DEPENDENT CODE - MAY REQUIRE SOME       *
*       RE-CODING TO SCAN FOR APPROPRIATE JCL MESSAGE IDENTIFIERS     *
*       (EG. ORIGINATING INSTALLATION REQUIRED CHECKS FOR MESSAGE     *
*       IDENTIFIERS GENERATED BY A 7080 EMULATOR)                     *
*                                                                     *
*    SAMPLE STARTED TASK JCL:                                         *
*                                                                     *
*    //PANSPOOL PROC PERF='3',DEST=REMOTE                             *
*    //IEFPROC  EXEC PGM=JCLLIST,TIME=1439,PERFORM=&PERF,PARM=&DEST   *
*    //SYSPRINT  DD  SYSOUT=*                                         *
*    //PANDD1    DD  DISP=SHR,DSN=PROD.PANSPOOL                       *
*                                                                     *
*    NOTE THAT THE TASK WILL REMAIN IN AN 'OUTPUT LONG-WAIT' AND      *
*    WILL ISSUE AN STIMER EVERY 1/2 MINUTE TO CHECK FOR THE PRESENCE  *
*    OF ANY SYSOUT=W OUTPUT.  INSTALLATIONS USING THE UICC 'JTIP'     *
*    (JES2/TSO INTERFACE PACKAGE) WILL HAVE TO RELEASE JOBS FROM      *
*    THE FETCH QUEUE BEFORE THEY CAN BE INTERCEPTED BY JCLLIST.       *
*                                                                     *
*/ ================================================================= /*
*                                                                     *
*  OS MACROS USED BY THIS MODULE:                                     *
*                                                                     *
*  IEFSSREQ     EXTRACT      QEDIT        WAIT         GET     WTO    *
*  IEFZB4D0     MODESET      SYNADRLS     TTIMER       SNAP    PUT    *
*  IEFJESCT     DYNALLOC     SYNADAF      STIMER       OPEN    DCBD   *
*  IEFJSSOB     QEDIT        DCB          CLOSE        CALL           *
*                                                                     *
*/ ================================================================= /*
*                                                                     *
*  UPON ISSUANCE OF AN OPERATOR PAUSE COMMAND, A WTO IS ISSUED BY     *
*  JCLLIST THAT TERMINATION IS IN PROGRESS.  A PARM LENGTH OF 8 OR    *
*  LESS MAY BE USED TO INDICATE THAT OUTPUT IS TO BE HANDLED BY A     *
*  REMOTE SITE RATHER THAN A LOCAL PRINTER.                           *
*                                                                     *
*/ ================================================================= /*
*                                                                     *
*  NAMING CONVENTIONS OF MODULES PLACED ON THE PANVALET SPOOL         *
*                                                                     *
*    SINCE THE NAMES OF PANVALET MODULES MAY CONSIST OF UP TO 10      *
*  ALPHABETIC (A-Z) OR NUMERIC (0-9) CHARACTERS, IN ANY ORDER OR COM- *
*  BINATION, SPECIAL CONSIDERATIONS ARE USED BY JCLLIST TO HANDLE ANY *
*  JOBS BEGINNING WITH NATIONAL CHARACTERS (#,@,$) AND DUPLICATE JOB  *
*  NAMES.                                                             *
*    THE ALGORITHM IS AS FOLLOWS:                                     *
*      ===> JOBS BEGINNING WITH '#' ARE 3HANGED TO 'N'                *
*      ===> JOBS BEGINNING WITH '@' ARE CHANGED TO 'A'                *
*      ===> JOBS BEGINNING WITH '$' ARE CHANGED TO 'D'                *
*                                                                     *
*    TO INSURE UNIQUE PANVALET NAMES, THE JOB NAME IS TRUNCATED TO    *
*    SIX CHARACTERS AND THE JES2 JOB NUMBER IS APPENDED TO THE        *
*    REMAINING SIX CHARACTERS.                                        *
*                                                                     *
*    EG. @S470TEST WAS RUN WITH JES2 JOB NUMBER 4567 ---> AS470T4567  *
*                                                                     *
*/ ================================================================= /*
*                                                                     *
*  UPDATED 26MAR80, WILLIAM SMITH, MEMOREX CORPORATION,               *
*    SANTA CLARA, CALIFORNIA, (408)-987-3919                          *
*    .  ADDITION OF INSTALLATION SPECIFIC CODE TO EXPAND THE MAPPING  *
*       OF THE SSOB BY 60 BYTES IN ORDER TO PREVENT AN 0C4 WHICH      *
*       OCCURRED AFTER OVERLAYING THE SVC99 PARAMETER LIST            *
*    .  THE EXPANDED SSOB IS USED TO PROVIDE A 'BETTER' JOB SEPARA-   *
*       TOR IN SUPPORT OF OUR HONEYWELL PAGE PRINTING SYSTEM (PPS/1); *
*       (IT USES THE IBM PROVIDED JES2 EXTERNAL WRITER)               *
*         ---> ALL CHANGES ARE FLAGGED AS 'WJS/26MAR80' WITHIN THE    *
*              BODY OF THE SOURCE CODE                                *
*         ---> DELETE THESE LINES OF CODE IF A 'VANILLA' SSOB MACRO   *
*              IS USED IN YOUR INSTALLATION; SECONDLY, REMOVE THE     *
*              ASTERISK FROM THE STATEMENT WHICH DEFINES THE REMAIN-  *
*              DER OF THE SSOB ('REST OF SSOB EXTENSION')             *
*                                                                     *
*/ ================================================================= /*
*                                                                     *
*  UPDATED 01MAY80, WILLIAM SMITH, MEMOREX CORPORATION,               *
*    SANTA CLARA, CALIFORNIA, (408)-987-3919                          *
*    .  REMOVAL OF THE CHECK FOR AN OPERATOR REPLY OF 'DUMP8' WHICH   *
*       WAS OF NO SIGNIFICANCE IN THIS INSTALLATION AND SUBSTITUTED   *
*       A CHECK FOR A REPLY OF 'CANCEL'                               *
*    .  CHANGED ALL OCCURRENCES OF 'LOGDS' TO 'JES2JLOG'              *
*    .  ADDITIONAL DOCUMENTATION ON PROGRAM LOGIC FLOW                *
*                                                                     *
*/ ================================================================= /*
*                                                                     *
*  CRITERIA UPON WHICH JCLLIST WILL SET THE PRINT FLAG AND FORCE A    *
*  JOB TO BE PRINTED (AS OPPOSED TO ADDING IT TO THE PANVALET SPOOL)  *
*                                                                     *
*      ---------------------------------------------------------      *
*      -*-  ANY OF THE FOLLOWING IBM MESSAGE IDENTIFICATIONS -*-      *
*      ---------------------------------------------------------      *
*                                                                     *
*  IEF251I - JOB CANCELLED                                            *
*  IEF283I - NOT DELETED X                                            *
*  IEF287I - NOT RECTLGD/CATALGD/UNCATLGD                             *
*  IEF450I - ABEND                                                    *
*  IEF451I - ENDED BY CC                                              *
*  IEF452I - JOBFAIL/JOB NOT RUN JCL ERROR                            *
*  IEF453I - JOB FAILED - JCL ERROR           *
*                                                                     *
*/ ================================================================= /*
*                                                                     *
*  UPDATED 19MAY80, WILLIAM SMITH, MEMOREX CORPORATION,               *
*    SANTA CLARA, CALIFORNIA, 95052  (408)-987-3919                   *
*    .  CHANGED LABEL 'PRSYSOUT' FROM SYSOUT CLASS 'E' TO 'A';        *
*       BY INSTALLATION STANDARDS SYSOUT CLASS 'E' IS RESERVED AND    *
*       JOBS MARKED AS 'FAILED' BY PANSPOOL SHOULD HIT THE PRINTERS   *
*       IMMEDIATELY - OUR SYSOUT CLASS 'A'                            *
*                                                                     *
*  UPDATED 04SEP80, WILLIAM SMITH, MEMOREX CORPORATION                *
*    .  CHANGED LABEL 'PRSYSOUT' FROM SYSOUT CLASS 'A' TO 'I';        *
*       SYSOUT CLASS 'I' IS NOW DESIGNATED FOR EXPRESS SYSOUT WHICH   *
*       SHOULD HIT THE IMPACT PRINTERS IMMEDIATELY;  SYSOUT=A MAY     *
*       GO TO EITHER THE IMPACT PRINTERS OR TO THE HONEYWELL PPS/1    *
*                                                                     *
*  UPDATED 19MAY81, WILLIAM SMITH, MEMOREX CORPORATION                *
*    .  MVS 3.8/JES2 4.1 - SP 1.1 - ACF/VTAM R2;                      *
*       SUCCESSFULLY TESTED AT THE 8009+ PUT LEVEL                    *
*                                                                     *
*  UPDATED 04APR82, EMMETT C. GALLAGHER BF GOODRICH CORPORATION.      *
*    .  CHANGED LABEL 'PRSYSOUT' FROM SYSOUT CLASS 'I' TO 'A';        *
*       SYSOUT CLASS 'A' IS NOW DESIGNATED FOR SYSOUT.                *
*                                                                     *
*    .  ALSO ADDED CODE TO ALLOW REPORTS TO BE SENT TO PANSPOOL       *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*/ ***************************************************************** /*
JCLL     TITLE 'PANSPOOL:  JCLLIST - PANVALET/JES2 EXTERNAL WRITER'
         PRINT ON,GEN,NODATA
         SPACE
JCLLIST  CSECT
         SPACE 3
R0       EQU   0
R1       EQU   1
R2       EQU   2                   PTR TO 1ST PAN PARM (IOAREA)
R3       EQU   3                   PTR TO 2ND PAN PARM (IOCODE)
R4       EQU   4                   PTR TO 3RD PAN PARM (DIRECTRY ENTRY)
R5       EQU   5                   INPUT REC PTR; OUTPUT BUF PTR
R6       EQU   6                   CURRENT DSTYPE; CURRENT LRECL
R7       EQU   7                   BR ADDR IN EXIT FOR NEXT READ ENTRY
R8       EQU   8                   BR ADDR FOR INPUT RECORD PROCESSING
R9       EQU   9                   BASE REG FOR INPUT DCB
R10      EQU   10                  BASE REG FOR SSOB
R11      EQU   11                  PROGRAM BASE REGISTER 1
R12      EQU   12                  PROGRAM BASE REGISTER 2
R13      EQU   13                  SAVE AREA POINTER
R14      EQU   14                  BASE REG FOR SVC 99 PARAMETER AREA
R15      EQU   15
         EJECT
         B     16(R15)             BRANCH AROUND CONSTANTS
         DC    AL1(8)              LENGTH OF CSECT NAME
         DC    CL11'JCLLIST'       CSECT NAME
         STM   R14,R12,12(R13)     SAVE REGISTERS
         LR    R11,R15             SET UP 1ST BASE REGISTER
         LA    R12,2048(R11)       SET UP
         LA    R12,2048(R12)              2ND BASE REGISTER
         USING JCLLIST,R11         ESTABLISH ADDRESSABILITY WITH 1ST
         USING JCLLIST+4096,R12    ESTABLISH ADDRESSABILITY WITH 2ND
         ST    R13,SA1+4           SAVE ADDRESS OF HIGHER SA
         LR    R2,R13              SAVE R13
         LA    R13,SA1             ADDRESS OF OUR SA
         ST    R13,8(R2)           SAVE ADDRESS OF OUR SA IN HIGHER SA
         SPACE 3
         L     R1,0(R1)            GET ADDR OF PARM FIELD
         LH    R2,0(R1)            GET LENGTH OF PARM FIELD
         LTR   R2,R2               ANY PARAMETERS ON EXEC STATEMENT?
         BZ    NOROUTE             NO. OUTPUT WILL GO TO 'LOCAL'
         CH    R2,PRDSTLNG         MORE THAN 8 CHARACTERS IN PARM?
         BNH   PARMLOK             NO. GO PROCESS DEST IN PARM
         MVC   ENDWTR+17(13),PLONG MOVE ERROR MSG TO WTO TEXT
         B     ENDWTR              GO ISSUE WTO AND TERMINATE
PARMLOK  STH   R2,PRDSTLNG         INSERT LENGTH OF DEST IN TEXT UNIT
         BCTR  R2,0                LENGTH MINUS ONE, FOR EXECUTE
         EX    R2,MOVEDEST         MOVE SPECIFIED RMT DEST TO TEXT UNIT
         MVI   NORMTRTE,X'00'      ZERO PREVIOUS LAST TEXT UNIT FLAG
         SPACE 2
NOROUTE  EXTRACT COMMLPTR,FIELDS=COMM GET ADDR OF ECB AND CIB PTRS
         SPACE 1
         L     R2,COMMLPTR         GET COMMAND LIST ADDRESS
         USING COMMADDR,R2         ESTABLISH ADDRESSABILITY
         LM    R9,R10,COMMADDR     GET COMMAND ECB AND CIB POINTERS
         ST    R9,CMNDECBP         STORE ECB POINTER IN ECBLIST
         MVI   CMNDECBP,X'80'      INDICATE LAST ECB PTR IN LIST
         ST    R9,CMDECBP2         STORE ECB POINTER IN OTHER ECBLIST
         SPACE 1
         QEDIT ORIGIN=COMMCIB,BLOCK=(R10) FREE CIB
         QEDIT ORIGIN=COMMCIB,CIBCTR=1    INDICATE 1 CIB TO BE CHAINED
         SPACE 2
         LA    R9,INDCB            INPUT DCB
         USING IHADCB,R9           ESTABLISH ADDRESSABILITY
         LA    R10,SSAREA          GET ADDRESS OF IEFSSREQ PARM AREA
         USING SSOB,R10            ESTABLISH ADDRESSABILITY
         USING S99RB,R14           ESTABLISH ADDRESSABILITY
         SPACE 3
GETDS    MVI   SSSODSN,X'00'       INDICATE INITIAL ENTRY FOR IEFSSREQ
         SPACE 1
         MODESET MODE=SUP,KEY=ZERO GET INTO SUPERVISOR STATE
         SPACE 1
         LA    R1,SSPARM           LOAD ADDRESS OF SSOB
         SPACE 1
         IEFSSREQ                  ISSUE SUBSYSTEM REQUEST
         SPACE 1
         STH   R15,RETCODE         SAVE IEFSSREQ RETURN CODE
         MVI   SNAPID,1            IDENTIFY SNAP ORIGIN
         SPACE 1
         L     R1,SSSOWTRC         GET JES PARAMETER ADDRESS
         MVC   RDRSTIME,4(R1)      GET RDR START DATE/TIME FOR JOB
         SPACE 1
         MODESET MODE=PROB,KEY=NZERO GET OUT OF SUPERVISOR STATE
         SPACE 1
         LH    R15,RETCODE         GET IEFSSREQ RETURN CODE
         LTR   R15,R15             SUBSYSTEM REQUEST SUCCESSFUL?
         BNZ   SNAPIT              NO. TERMINATE WRITER
         C     R15,SSOBRETN        DID WE GET A DATA SET FROM JES?
         BE    CALLPAN             YES. GO CALL PANVALET
         LA    R1,4                FOR 'COMPARE'
         C     R1,SSOBRETN         ARE WE OUT OF ELIGIBLE DATA SETS?
         BNE   SNAPIT              NO. SOMETHING WRONG. TERMINATE
         SPACE 1
SETWAIT  MVC   HASPECBP,SSSOWTRC   MOVE HASP ECB PTR TO ECBLIST
         SPACE 1
         MODESET KEY=ZERO          GET INTO KEY ZERO
         SPACE 1
         LA    R2,HASPECBP         POINT TO FIRST ECBLIST
         SPACE 1
WAIT     WAIT  1,ECBLIST=(R2),LONG=YES WAIT FOR WORK, CMND, STIMER EXIT
         SPACE 1
         C     R2,ECBL2PTR         DID WE DO AN STIMER?
         BNE   CHKCMND             NO. GO CHECK ECBS
         TM    STIMRECB,X'40'      WERE WE POSTED BY STIMER EXIT?
         LA    R3,GETDS            PREPARE TO REQUEST A DATA SET IF YES
         BO    RESETPK             YES. GET OUT OF KEY 0 AND CONTINUE
         SPACE 1
         TTIMER CANCEL             CANCEL REMAINDER OF TIMER INTERVAL
         SPACE 1
CHKCMND  L     R2,CMNDECBP         GET COMMAND ECB ADDRESS
         TM    0(R2),X'50'         DID OPERATOR ENTER A COMMAND?
         MVI   0(R2),X'00'         CLEAR ECB IN ANY EVENT
         LA    R3,STOPWTR          PREPARE TO TERMINATE IF STOP CMND
         BO    RESETPK             IT IS. GET OUT OF KEY 0 AND HALT
         LA    R3,FREECIB          PREPARE TO FREE CIB IF MODIFY CMND
         BM    RESETPK             FREE CIB AND GO REQUEST A DATA SET
*                                  MUST HAVE BEEN POSTED BY JES
         STIMER REAL,POSTWAIT,BINTVL=WTIME TO KILL SOME TIME
         SPACE 1
         MVI   STIMRECB,X'00'      CLEAR ECB
         L     R2,ECBL2PTR         POINT TO SECOND ECBLIST
         B     WAIT                GO WAIT FOR CMND OR END OF INTERVAL
         SPACE 1
         PUSH  USING               SAVE BASE REGISTER INFORMATION
         DROP  R11,R12             DROP PROGRAM BASE REGISTERS
         SPACE 1
POSTWAIT EQU   *                   STIMER EXIT
         USING POSTWAIT,R15        ESTABLISH ADDRESSABILITY
         STM   R14,R12,12(R13)     SAVE REGISTERS
         SPACE 1
         POST  STIMRECB            INDICATE END OF INTERVAL
         SPACE 1
         LM    R14,R12,12(R13)     RESTORE REGISTERS
         BR    R14                 RETURN TO SYSTEM
         SPACE 1
         POP   USING               RESTORE PREVIOUS BASE REG STATUS
         SPACE 1
FREECIB  L     R2,COMMLPTR         GET COMMAND LIST ADDRESS
         L     R3,COMMCIB          GET CIB POINTER
         SPACE 1
         QEDIT ORIGIN=COMMCIB,BLOCK=(R3) FREE CIB
         QEDIT ORIGIN=COMMCIB,CIBCTR=1   INDICATE 1 CIB TO BE CHAINED
         SPACE 1
         B     GETDS               GO REQUEST A DATA SET FROM JES
         SPACE 2
RESETPK  MODESET KEY=NZERO         GET OUT OF KEY ZERO
         SPACE 1
         BR    R3                  CONTINUE AS DETERMINED EARLIER
         SPACE 2
CALLPAN  LA    R7,HAVEDS           SET INITIAL BRANCH ADDR FOR PANEXIT
         MVC   LASTJOB,BLANKS      CLEAR LAST JOB ID AREA
         SPACE 1
         CALL  FGPAN1,(PXPARM),VL  CALL PANVALET
         SPACE 2
         TM    FLAG,STOPF+SREQF    ARE WE TERMINATING?
         BZ    SETWAIT             NO. GO WAIT FOR WORK OR OPER CMND
         BO    ENDWTR              YES, BUT FINAL SSREQ NOT REQUIRED
         SPACE 1
STOPWTR  OI    SSSOFLG2,SSSOCTRL   INDICATE WRITER TERMINATING
         SPACE 1
         MODESET MODE=SUP          GET INTO SUPERVISOR STATE
         SPACE 1
         LA    R1,SSPARM           LOAD ADDRESS OF SSOB
         SPACE 1
         IEFSSREQ                  TELL SUBSYSTEM WE ARE SHUTTING DOWN
         SPACE 1
         MODESET MODE=PROB         GET OUT OF SUPERVISOR STATE
         SPACE 2
ENDWTR   WTO   'PANSPOOL:  JCLLIST IS SHUTTING DOWN',ROUTCDE=2,DESC=4
         SPACE 1
         L     R13,SA1+4           GET ADDRESS OF HIGHER SA
         LM    R14,R12,12(R13)     RESTORE REGISTERS
         SR    R15,R15             SET ZERO CONDITION CODE
         BR    R14                 EXIT
         SPACE 2
MOVEDEST MVC   PRDEST(*-*),2(R1)   MOVE SPECIFIED RMT DEST TO TEXT UNIT
         SPACE 3
         PUSH  USING               SAVE BASE REGISTER INFORMATION
         DROP  R11,R12             DROP PROGRAM BASE REGISTERS
         EJECT
         ENTRY PANEXIT             PANVALET USER EXIT ROUTINE
         SPACE 1
PANEXIT  EQU   *                   ENTRY POINT
         SPACE 1
         USING PANEXIT,R15         ESTABLISH TEMPORARY ADDRESSABILITY
         STM   R14,R12,12(R13)     SAVE PANVALET'S REGISTERS
         SPACE 1
         LM    R2,R4,0(R1)         GET PAN PARAMETER POINTERS
         SPACE 1
         CLI   0(R3),C'1'          IS THIS A PRE-READ ENTRY?
         BE    SETUP               YES. GO SAVE REGISTERS
         CLI   0(R3),C'3'          DETERMINE IF IOCODE IS
         BL    FASTRET                WITHIN THE RANGE THAT
         CLI   0(R3),C'5'                WE ARE INTERESTED IN
         BH    FASTRET                      PROCESSING (3, 4, 5)
         CLI   0(R3),C'4'          ESTABLISH REASON FOR THIS ENTRY
         MVI   0(R3),C'F'          INDICATE OUTPUT RECORD TO BE IGNORED
         BH    SETUP               PRE-WORK ENTRY. GO PROCESS
         BE    CODE4               PRE-PUNCH ENTRY. GO PROCESS
*                                  MUST BE A PRE-PRINT ENTRY (IOCODE=3)
         CLC   114(2,R2),PV        IS THIS A PANVALET ERROR MESSAGE?
         BE    CHECK022            YES. GO CHECK FOR PV022
         CLI   WPVMSG+1,C' '       DO WE ALREADY HAVE AN ERROR MSG?
         BNE   FASTRET             YES. DO NOT DESTROY IT
         MVC   WTXT,1(R2)          SAVE LINE FOR POSSIBLE WTO
         B     FASTRET             RETURN TO PANVALET
CHECK022 CLC   116(3,R2),PV022     IS THIS A 'NAME IN USE' MESSAGE?
         BNE   CHECK026            NO. GO CHECK FOR PV026
         LA    R3,SELJHDR1         PREPARE TO CHECK FOR MATCHING JOBS
         B     SETRET              GO SET NEXT INPUT REQUEST BR ADDR
CHECK026 CLC   116(3,R2),PV026     IS IT AN 'INCORRECT LEVEL' MSG?
         BNE   CHECK027            NO. GO CHECK FOR PV027
         TM    FLAG,LEVF           IS THIS PV026 FOR A ++LEVEL REQUEST?
         BO    WTOMSG              YES. TELL OPERATOR AND TERMINATE
         OI    FLAG,LEVF           INDICATE A LEVEL ERROR
         B     FASTRET             RETURN TO PANVALET
CHECK027 CLC   116(3,R2),PV027     IS IT AN 'INCORRECT USER CODE' MSG?
         BE    FASTRET             YES. IGNORE IT. JOB ALREADY FLAGGED
         SPACE 1
WTOMSG   MVC   WPVMSG,113(R2)      MOVE PAN ERROR NUMBER TO WTO TEXT
         LA    R1,ERRORWTO         POINT TO WTO PARAMETER LIST
         SVC   35                  PERFORM WTO
         SPACE 1
         LM    R15,R1,16(R13)      RESTORE REGISTERS CHANGED BY SVC 35
         XC    RETCODE,RETCODE     CLEAR RETURN CODE FIELD
         MVI   SNAPID,3            IDENTIFY SNAP ORIGIN
         LA    R3,SNAPIT           SET NEXT ENTRY BRANCH ADDRESS
         B     SETRET              GO SAVE IT AND RETURN TO PANVALET
         SPACE 1
CODE4    TM    FLAG,SELF           ARE WE HERE BECAUSE OF A 'PV022'?
         BNZ   CHECKJOB            YES. GO SEE IF SAME JOB
         USING DIRECTRY,R4         ESTABLISH PAN DIRECTORY ADDRESS.
         MVC   STMTS,DSTMTS        NO. OF STATEMENTS IN DS FOR UPDATE
         MVC   STMTS2,DSTMTS       MOVE NO. OF STMTS TO SEQ2 OF ++C
         B     FASTRET             RETURN TO PANVALET
         DROP  R4                  REMOVE DIRECTORY ADDRESSABILITY
         SPACE 1
CHECKJOB CLC   1(30,R2),JOBHEADR   DOES THIS DS BELONG TO CURRENT JOB?
         BNE   CHANGNAM            NO. GO CREATE NEW PANNAME
         MVC   DSFLAGS,DSFLOFF(R2) GET PREVIOUSLY SET DSFLAGS
         OI    FLAG,INTF+PRTF      INTERRUPTED JOB - MAKE IT PRINT
         LA    R3,SAMEJOB          SET BRANCH ADDRESS FOR NEXT ENTRY
         B     SETRET              PREPARE TO RETURN TO PANVALET
         SPACE 1
CHANGNAM PACK  WORK,ADDDSN+6(4)    PREPARE TO CHANGE PANNAME
         AP    WORK,SUFFIX         ADD '1111' TO NUMBER PART OF NAME
         UNPK  ADDDSN+6(4),WORK    SET NEW PANNAME
         OI    ADDDSN+9,X'F0'      CHANGE SIGN ZONE TO X'F'
         LA    R3,NEWDSN           SET BRANCH ADDRESS FOR NEXT ENTRY
         SPACE 1
SETRET   ST    R3,SA1+48           STORE IN R7 LOCATION FOR NEXT ENTRY
         SPACE 1
FASTRET  LM    R2,R4,28(R13)       RESTORE PANVALET'S REGISTERS
         BR    R14                 QUICK RETURN TO PANVALET
         SPACE 1
SETUP    ST    R13,SA2+4           PANVALET'S SAVE AREA ADDR IN OUR SA
         LR    R1,R13              SAVE ADDR OF HIS SA
         LA    R13,SA2             LOAD ADDR OF OUR SAVE AREA
         ST    R13,8(R1)           ADDR OF OUR SAVE AREA IN PANVALET'S
         LM    R5,R12,SA1+40       RESTORE REGS AS WE LIKE 'EM
         CLI   0(R3),C'1'          ARE WE HERE FOR INPUT?
         BNE   CODE5               NO. MUST BE CODE5. GO PRINT JOB
*                                  MUST BE A PRE-READ ENTRY
         MVI   0(R3),C'A'          INDICATE USER SUPPLIED INPUT RECORD
         MVC   0(80,R2),BLANKS     BLANK OUT PAN IOAREA
         BR    R7                  BRANCH TO APPROPRIATE LOCATION
         SPACE 1
         POP   USING               RESTORE PREVIOUS BASE REG STATUS
         SPACE 1
CODE5    CLI   0(R2),X'00'         IS THIS THE JOB HEADER RECORD?
         BNE   NOTJHDR             NO. CONTINUE
         CLC   1(3,R2),=C'JOB'     CHECK IF USER PASSING
         BNE   NOTJHDR                BINARY ZERO RECORDS....
         SPACE 1
         LA    R1,S99PARM2         NEW JOB. PREPARE TO ALLOC OUTPUT DS
         SPACE 1
         DYNALLOC                  ALLOCATE A SYSOUT DATA SET
         SPACE 1
         STH   R15,RETCODE         SAVE SVC 99 RETURN CODE
         MVI   SNAPID,2            IDENTIFY SNAP ORIGIN
         LTR   R15,R15             TEST SVC 99 RETURN CODE
         BNZ   SNAPIT              NO GOOD. SNAP AND TERMINATE
         SPACE 1
         OPEN  (OUTDCB,(OUTPUT))   OPEN SYSOUT DATA SET
         SPACE 1
         B     PANRET              IGNORE JOB HEADER RECORD
         SPACE 1
NOTJHDR  CLI   0(R2),X'FE'         IS THIS A 'SPECIAL' RECORD?
         BE    CONTLINE            YES. CONTINUATION RECORD. SKIP 'PUT'
         BH    EOJPRINT            YES. JOB TRAILER RECORD. END OF JOB
         SPACE 1
         PUT   OUTDCB              GET ADDR OF NEXT BUFFER
         SPACE 1
         LR    R5,R1               SAVE BUFFER ADDRESS
         MVC   0(80,R5),0(R2)      MOVE LINE TO SYSOUT BUFFER
         MVC   80(53,R5),BLANKS    BLANK OUT REST OF LINE
         B     PANRET              GET NEXT LINE
CONTLINE MVC   80(53,R5),1(R2)     TACK ON TO END OF PREVIOUS LINE
         B     PANRET              GO GET NEXT LINE
         SPACE 1
EOJPRINT TM    FLAG,INTF           IS THIS AN INTERRUPTED JOB?
         BZ    CLOSEIT             NO. GO FINISH PRINT PROCESS
         MVC   80(53,R5),INTMSG    MOVE WARNING MSG TO END OF LAST LINE
         SPACE 1
CLOSEIT  CLOSE (OUTDCB)            CLOSE SYSOUT DATA SET
         SPACE 1
         MVC   DSFLAGS,ALLDS       PRETEND JOB OK TO AVOID REPRINTING
         B     PANRET              RETURN TO PANVALET
         SPACE 2
HAVEDS   MVC   ALDSN,SSSODSN       MOVE DSNAME INTO ALLOCATE TEXT UNIT
         LA    R14,S99AREA         SET UP SVC 99 PARM AREA BASE REG
         MVI   S99VERB,S99VRBAL    INDICATE ALLOCATION TO BE PERFORMED
         LA    R1,ALTUPTR          ADDR OF ALLOCATION TEXT UNIT PTRS
         ST    R1,S99TXTPP         STORE IN SVC 99 REQUEST BLOCK
         LA    R1,S99PARM          LOAD ADDRESS OF SVC 99 PARM AREA
         SPACE 1
         DYNALLOC                  PERFORM DYNAMIC ALLOCATION
         SPACE 1
         STH   R15,RETCODE         SAVE SVC 99 RETURN CODE
         MVI   SNAPID,4            IDENTIFY SNAP ORIGIN
         LTR   R15,R15             TEST SVC 99 RETURN CODE
         BNZ   SNAPIT              NO GOOD. SNAP AND TERMINATE
         SPACE 2
         CLC   SSSODSN+14(5),PSODS IS THIS A PSO DATA SET?
*        BNE   SKIPDS              NO. GO DELETE IT
         BNE   ECG001              CHANGE TO TYPE 4 (MSG)
         CLI   SSSODSN+19,C'2'     DETERMINE IF THIS
*        BL    SKIPDS                 IS A DATA SET WE
         BL    ECG001              CHANGE TO TYPE 4 (MSG)
         CLI   SSSODSN+19,C'4'           WISH TO PROCESS
*        BH    SKIPDS              IE PSO #2(LOG), #3(JCL), #4(MSG)
         BH    ECG001              CHANGE TO TYPE 4 (MSG)
ECG002   DS    0H
         SR    R6,R6               CLEAR
         IC    R6,SSSODSN+19       GET PSO NUMBER (EBCDIC)
         LA    R1,242              CONVERT PSO NUMBER TO BINARY AND
         SR    R6,R1               CHANGE SCALE: 0=LOG, 1=JCL, 2=MSG
         STC   R6,DSTYPE           SAVE CURRENT DATA SET TYPE
         LR    R8,R6               COMPUTE OFFSET IN
         SLL   R8,2                   BRANCH-ADDRESS TABLE
         L     R8,DSPRCAD(R8)      GET APPROPRIATE BRANCH ADDRESS
         SPACE 1
         MVC   DCBDDNAM,ALDDNAM    MOVE DDNAME AS SET BY SVC 99 TO DCB
         SPACE 1
         OPEN  (INDCB,(INPUT))     OPEN INPUT DATA SET
         SPACE 1
         XC    RETCODE,RETCODE     CLEAR RETURN CODE FIELD
         MVI   SNAPID,5            IDENTIFY SNAP ORIGIN
         TM    DCBOFLGS,X'10'      WAS OPEN SUCCESSFUL?
         BZ    SNAPIT              NO. SNAP AND TERMINATE
         SPACE 2
         CLC   LASTJOB,SSSOJOBN    ARE WE CONTINUING WITH A JOB?
         BE    SAMEJOB             YES. GO PROCESS
*        CLI   DSFLAGS+2,X'02'     DID WE HAVE A 'MSG' DS FOR LAST JOB?
*        BE    LASTJOK             YES. CONTINUE WITH CURRENT DATA SET
         B     LASTJOK             **** ALL DATA SETS NOT REQUIRED ***
         NI    FLAG,255-INTF       ENSURE WARNING MSG DOES NOT APPEAR
         MVC   0(80,R2),USECARD    MOVE '++USER' CARD TO PAN IOAREA
         BAL   R7,PANRET           GO CHANGE USER CODE FOR 'BAD' JOB
         MVC   0(80,R2),WRTCARD    MOVE '++WRITE' CARD TO PAN IOAREA
         BAL   R7,PANRET           GO PRINT LAST JOB
         SPACE 1
LASTJOK  NI    FLAG,255-PRTF-INTF  TURN OFF PRINT & INTERRUPTION FLAGS
         MVC   DSFLAGS,BLANKS      NEW JOB. CLEAR DATA SET INDICATORS
         STC   R6,DSFLAGS(R6)      SET CURRENT DS INDICATOR
         MVC   LASTJOB,SSSOJOBN    SAVE CURRENT JOB'S NAME AND NUMBER
         MVC   ADDDSN(6),SSSOJOBN  CONSTRUCT A PANNAME
         MVC   ADDDSN+6(4),SSSOJOBI+4 MOVE JOB NO. TO END OF PANNAME
         TR    ADDDSN(6),CHARTAB   REPLACE INVALID PANNAME CHARACTERS
         SPACE 1
         MVC   COMNTJN,SSSOJOBN    MOVE JOBNAME FROM SSOB TO CMNT CARD
         MVC   COMNTJI,SSSOJOBI    MOVE JOBNO. FROM SSOB TO CMNT CARD
         MVC   START,BLANKS        BLANK OUT START DATE/TIME
         MVC   STOP,BLANKS         BLANK OUT STOP DATE/TIME
NEWDSN   MVC   SELDSN,ADDDSN       MOVE PANNAME TO '++SELECT' CARD
         MVC   UPDDSN,ADDDSN       MOVE PANNAME TO '++UPDATE' CARD
         MVC   WRTDSN,ADDDSN       MOVE PANNAME TO '++WRITE' CARD
         MVC   LEVDSN,ADDDSN       MOVE PANNAME TO '++LEVEL' CARD
         MVC   USEDSN,ADDDSN       MOVE PANNAME TO '++USER' CARD
         MVC   COMDSN,ADDDSN       MOVE PANNAME TO '++COMMENT' CARD
         NI    FLAG,255-LEVF       TURN OFF INCORRECT LEVEL FLAG
         MVC   0(80,R2),ADDCARD    MOVE '++ADD' TO PAN IOAREA
         BAL   R7,PANRET           RETURN TO PANVALET WITH '++ADD'
         MVC   0(80,R2),JOBHEADR   MOVE JOB HEADER TO PAN IOAREA
         LA    R7,READNEXT         SET BRANCH ADDR FOR NEXT ENTRY
         B     PANRET              RETURN TO PANVALET WITH JOBHEADR
*
*    CODE FOR BFG PROCESSING OF SYSOUT DATASETS
*
ECG001   DS    0H
         MVI   SSSODSN+19,C'3'           CHANGE TO TYPE 4
         B     ECG002
*
*
*
         SPACE 1
SELJHDR1 OI    FLAG,SELF           IDENTIFY '++SELECT' ORIGIN
         MVC   0(80,R2),SELCARD    MOVE '++SELECT' CARD TO IOAREA
         BAL   R7,PANRET           RETURN TO PANVALET WITH '++SELECT'
         MVC   0(80,R2),LEVCARD    MUST BE PV026 IF HERE. CHANGE LEVEL
         LA    R7,SELJHDR1         SET BRANCH ADDR FOR NEXT ENTRY
         B     PANRET              RETURN TO PANVALET WITH '++LEVEL'
         SPACE 1
SAMEJOB  LA    R1,DSFLAGS(R6)      POINT TO DSFLAG FOR CURRENT DATA SET
* ECG    CLI   0(R1),C' '          IS CURRENT DS ALREADY ON PANVALET?
* ECG    BNE   ENDDS               YES. GO DELETE CURRENT DATA SET
         STC   R6,DSFLAGS(R6)      SET DS TYPE IDENTIFIER
         SPACE 1
SELJHDR2 NI    FLAG,255-SELF-LEVF  SET SELECT ORIGIN; CLEAR PV026 FLAG
         MVC   0(80,R2),SELCARD    MOVE '++SELECT' CARD TO PAN IOAREA
         BAL   R7,PANRET           RETURN TO PANVALET WITH SELECT CARD
         TM    FLAG,LEVF           DID WE GET A 'PV026'?
         BZ    UPDATE              NO. CONTINUE WITH DATA SET
         MVC   0(80,R2),LEVCARD    MOVE '++LEVEL' CARD TO PAN IOAREA
         LA    R7,SELJHDR2         SET BRANCH ADDRESS FOR NEXT ENTRY
         B     PANRET              RETURN TO PANVALET WITH '++LEVEL'
         SPACE 1
UPDATE   MVC   0(80,R2),UPDCARD    MOVE '++UPDATE' CARD TO PAN IOAREA
         BAL   R7,PANRET           RETURN TO PANVALET WITH '++UPDATE'
         MVC   0(80,R2),CHDCARD    PREPARE TO CHANGE JOB HEADER
         BAL   R7,PANRET           RETURN TO PANVALET WITH '++C'
         MVC   0(80,R2),JOBHEADR   MOVE JOB HEADER TO IOAREA
         BAL   R7,PANRET           RETURN TO PANVALET JOB HEADER
         MVC   0(80,R2),CDSCARD    PREPARE TO UPDATE DATA SET AT END
         BAL   R7,PANRET           RETURN TO PANVALET WITH '++C'
         SPACE 2
READNEXT GET   INDCB               READ A RECORD
         SPACE 1
         LR    R5,R1               SAVE INPUT RECORD ADDRESS
         LH    R6,DCBLRECL         GET INPUT RECORD LENGTH
         BR    R8                  PERFORM APPROPRIATE PROCESSING
         SPACE 1
*/ ***************************************************************** /*
*                                                                     *
*  THE FOLLOWING BLOCKS OF CODE DEFINE THE CRITERIA BY WHICH JOBS     *
*  ARE SELECTED FOR POSSIBLE PRINTING BY PANSPOOL.  EACH OF THE 3     *
*  COMPONENTS, JES2 JOB LOG, JCL, AND SYSTEM MESSAGE BLOCKS (SMB'S/   *
*  ALLOCATION/DEALLOCATION MESSAGES) OF ALL CLASS 'W' JOBS ARE        *
*  SCANNED FOR THE OCCURRENCE OF SIGNIFICANT MESSAGE IDENTIFICATION   *
*  NUMBERS WHICH INDICATE THAT AN EXCEPTIONAL CONDITION OCCURRED DUR- *
*  ING JOB PROCESSING (EG. JCL ERROR, ABEND, NOT CAT 2, ETC.). UPON   *
*  THE OCCURRENCE OF THESE MESSAGE ID'S THE JOB IS FLAGGED FOR SUBSE- *
*  QUENT PRINTING; OTHERWISE, JOB START/STOP INFORMATION IS EXTRACT-  *
*  ED FOR INCLUSION ON A PANVALET COMMENT CARD DURING THE PROCESS OF  *
*  ADDING THE JOB TO THE PANSPOOL.                                    *
*                                                                     *
*/ ***************************************************************** /*
JES2JLOG BAL   R8,READNEXT         SET CONT. ADDR AND IGNORE FIRST LINE
         MVC   0(80,R2),0(R5)      MOVE LINE (80 CHARS) TO PAN IOAREA
         MVI   0(R2),C'1'          SET NEW PAGE ASA CHAR
         BAL   R7,PANRET           RETURN TO PANVALET WITH LOG TITLE
         MVI   0(R2),C'0'          SET DOUBLE SPACE ASA CHAR
         LA    R7,READNEXT         SET NEXT ENTRY BRANCH ADDR
         BAL   R8,PANRET           SET CONT. ADDR; RET WITH BLANK LINE
         SPACE 1
         MVI   0(R5),C' '          INSERT SINGLE SPACE ASA CHAR
         CLC   20(5,R5),IEF45      IS THIS AN IEF45* MSG?
         BNE   NOTIEF45            NO. CONTINUE
         CLI   25(R5),C'3'         IEF450 TO IEF453?
         BH    CONTDS1             NO. CONTINUE
SETPRT   OI    FLAG,PRTF           INDICATE JOB IS TO BE PRINTED
         NI    FLAG,255-INTF       ENSURE WARNING MSG DOES NOT APPEAR
         B     CONTDS1             CONTINUE
NOTIEF45 CLC   20(7,R5),IEF251I    IS THIS A 'JOB CANCELLED' MSG?
         BE    SETPRT              YES. GO FLAG JOB FOR PRINTING
         CLC   20(8,R5),IIP026I    EMULATOR 'WRITE, DATA CHECK' MSG?
         BE    SETPRT              YES. GO FLAG JOB FOR PRINTING
         CLC   20(2,R5),REPLY      IS THIS AN OPERATOR REPLY?
         BNE   CONTDS1             NO. CONTINUE
         LA    R1,23(R5)           STARTING ADDRESS FOR SCAN
         LA    R14,1               INCREMENT FOR BXLE
         LA    R15,10(R1)          LAST ADDRESS FOR SCAN
CHKCANCL CLC   1(6,R1),CANCEL      IS THIS A CANCEL REPLY?  WJS/01APR80
         BE    SETPRT              YES. GO FLAG JOB FOR PRINTING
         BXLE  R1,R14,CHKCANCL     CONTINUE CHECK FOR 'CANCEL'
         B     CONTDS1             NO 'CANCEL'. CONTINUE
         SPACE 1
JCLDS    DS    0H
*        MVI   0(R2),C'1'          SET NEW PAGE ASA CHAR (OS/JCL)
         BALR  R8,0                SET CONT. ADDRESS
*        LA    R6,1(R6)            COMPENSATE FOR INSERTED ASA CHAR
         STM   R7,R8,REGHOLD
         LR    R7,R6
         LR    R8,R5
         SH    R7,=H'12'
         BM    JCLX6
JCLX4    CLC   0(5,R8),=C'PSWD-'
         BE    JCLX5
         LA    R8,1(R8)
         BCT   R7,JCLX4
         B     JCLX6
JCLX5    MVC   5(9,R8),=C'?????????'
JCLX6    LM    R7,R8,REGHOLD
*        MVC   1(79,R2),0(R5)      MOVE 79 CHARS TO PAN IOAREA
         MVC   0(80,R2),0(R5)      MOVE 79 CHARS TO PAN IOAREA
         CLC   0(2,R2),=C'++'
         BE    JCLX1
         CLC   0(2,R2),=C'--'
         BE    JCLX1
         CLC   1(2,R2),=C'++'
         BE    JCLX2
         CLC   1(2,R2),=C'--'
         BNE   JCLX3
JCLX2    MVC   1(2,R2),=C'  '
         B     JCLX3
JCLX1    MVC   0(2,R2),=C'  '
JCLX3    DS    0H
*        BCTR  R5,0                COMPENSATE FOR INSERTED ASA CHAR
         B     CONTDS2             CONTINUE PROCESSING OF LINE
         SPACE 1
MSGDS    MVI   4(R5),C'1'          INSERT NEW PAGE ASA CHAR (SMB'S)
         BALR  R8,0                SET CONT. ADDRESS
         LA    R1,4                LENGTH OF RDW
         SR    R6,R1               SUBTRACT FROM LRECL
         LA    R5,4(R5)            REPOSITION PAST RDW
         CLC   1(7,R5),IEF375I     IS THIS A 'JOB START'/IEF375I MSG?
         BNE   NOT375              NO.
         MVC   START,31(R5)        MOVE START DATE/TIME TO COMMENT CARD
         B     CONTDS1             CONTINUE
NOT375   CLC   1(7,R5),IEF376I     IS THIS A 'JOB END'/IEF376I MSG?
         BNE   NOT376              NO.
         MVC   STOP,31(R5)         MOVE STOP DATE/TIME TO COMMENT CARD
         B     CONTDS1             CONTINUE
NOT376   CLC   1(7,R5),IEF287I     IS THIS IEF287I/(NOT CATALOGED) MSG?
         BE    SETPRT              YES. FLAG JOB FOR PRINTING
         CLC   1(7,R5),IEF283I     IS THIS IEF283I/(NOT DELETED X) MSG?
         BE    SETPRT              YES. FLAG JOB FOR PRINTING
         SPACE 1
CONTDS1  C     R6,EIGHTY           IS RECORD LENGTH LESS THAN 80?
         BL    SHORTREC            YES. GO PROCESS AS SUCH
         MVC   0(80,R2),0(R5)      MOVE LINE (80 CHARS) TO PAN IOAREA
CONTDS2  BAL   R7,PANRET           RETURN TO PANVALET WITH RECORD
         S     R6,EIGHTY           IS RECORD LENGTH EXACTLY 80 BYTES?
         BZ    READNEXT            YES. GO GET NEXT LINE
         BCTR  R6,0                FOR EXECUTE
         EX    R6,COMPREC          IS REST OF RECORD BLANK?
         BE    READNEXT            YES. GO GET NEXT LINE
         LA    R5,79(R5)           POINT TO LAST CHAR ALREADY WRITTEN
         MVI   0(R5),X'FE'         INSERT CONTINUATION CHAR
         LA    R6,2(R6)            RESET TO ACTUAL LENGTH OF REMAINDER
SHORTREC BCTR  R6,0                FOR EXECUTE
         EX    R6,MOVEREC          MOVE SHORT OR BALANCE OF LONG RECORD
         LA    R7,READNEXT         BRANCH ADDR FOR NEXT ENTRY
         B     PANRET              RETURN TO PANVALET WITH INPUT REC
         SPACE 2
COMPREC  CLC   80(*-*,R5),BLANKS   REMAINDER OF RECORD BLANK?
MOVEREC  MVC   0(*-*,R2),0(R5)     MOVE REMAINDER TO IOAREA
         SPACE 2
SYNEXIT  SYNADAF ACSMETH=QSAM      INPUT (JES2) DATA SET SYNAD ROUTINE
         SPACE 1
         MVI   0(R2),C'-'          INSERT TRIPLE SPACE ASA CC CHAR
         MVC   1(78,R2),50(R1)     MOVE ERROR MESSAGE TO PAN IOAREA
         SPACE 1
         SYNADRLS                  RESTORE R13
         SPACE 1
         BAL   R7,PANRET           RETURN TO PANVALET WITH ERROR MSG
         SPACE 2
EOF      MVC   0(4,R2),TRAILER     MOVE JOB TRAILER TO PAN IOAREA
         BAL   R7,PANRET           RETURN TO PANVALET WITH TRAILER
         CLI   DSTYPE,0            IS THIS A LOG DATA SET?
         BE    WCOMMENT            YES. DO NOT CHANGE DS LEVEL
         NI    FLAG,255-LEVF       TURN OFF PV026 FLAG
         MVC   0(80,R2),LEVCARD    MOVE '++LEVEL' TO PAN IOAREA
         BAL   R7,PANRET           RETURN TO PANVALET WITH '++LEVEL'
         CLI   DSTYPE,1            IS THIS A JCL DATA SET?
         BE    ENDDS               YES. DO NOT CHANGE DS COMMENT REC
         TM    FLAG,PRTF           IS THIS JOB TO BE PRINTED?
         BO    PRINTJOB            YES. GO DO IT
*        CLC   DSFLAGS,ALLDS       DID WE HAVE A LOG, JCL, & MSG DS?
*        BE    WCOMMENT            YES. DO NOT PRINT JOB
         NI    FLAG,255-INTF       ENSURE WARNING MSG DOES NOT APPEAR
         B WCOMMENT                  *** DO NOT NEED ALL DATA SETS **
         SPACE 1
PRINTJOB MVC   0(80,R2),USECARD    MOVE '++USER' TO PAN IOAREA
         BAL   R7,PANRET           GO CHANGE USER CODE FOR 'BAD' JOB
         MVC   0(80,R2),WRTCARD    MOVE '++WRITE' TO PAN IOAREA
         BAL   R7,PANRET           RET. TO PANVALET WITH WRITE REQUEST
         SPACE 1
WCOMMENT MVC   0(80,R2),COMMENT    MOVE '++COMMENT' TO PAN IOAREA
         BAL   R7,PANRET           RETURN TO PANVALET WITH '++COMMENT'
         SPACE 1
ENDDS    CLOSE (INDCB)             CLOSE INPUT DS BEFORE DELETING IT
         SPACE 1
SKIPDS   MVC   UALDDNAM,ALDDNAM    MOVE DDNAME TO UNALLOCATION TXT UNIT
         LA    R14,S99AREA         SET UP SVC 99 PARM AREA BASE REG
         MVI   S99VERB,S99VRBUN    INDICATE UNALLOCATION TO BE DONE
         LA    R1,UALTUPTR         ADDR OF UNALLOCATION TEXT UNIT PTRS
         ST    R1,S99TXTPP         STORE IN SVC 99 REQUEST BLOCK
         LA    R1,S99PARM          LOAD ADDRESS OF SVC 99 PARM AREA
         SPACE 1
         DYNALLOC                  PERFORM DYNAMIC UNALLOCATION
         SPACE 1
         STH   R15,RETCODE         SAVE SVC 99 RETURN CODE
         MVI   SNAPID,6            IDENTIFY SNAP ORIGIN
         LTR   R15,R15             TEST SVC 99 RETURN CODE
         BNZ   SNAPIT              NO GOOD. SNAP AND TERMINATE
         SPACE 2
         CLI   DSTYPE,2            IS THIS THE END OF A JOB?
         BNE   NOSTOP              NO. DO NOT CHECK FOR STOP CMND
         L     R1,CMNDECBP         GET COMMAND ECB ADDRESS
         TM    0(R1),X'10'         WAS A 'STOP' COMMAND ISSUED?
         BZ    NOSTOP              NO. GO REQUEST A DATA SET
         OI    FLAG,STOPF          INDICATE FINAL IEFSSREQ REQUIRED
         B     PANEOF              RETURN TO PANVALET AND TERMINATE
         SPACE 1
NOSTOP   MODESET MODE=SUP,KEY=ZERO GET INTO SUPERVISOR STATE
         SPACE 1
         LA    R1,SSPARM           LOAD ADDRESS OF SSOB FOR IEFSSREQ
         SPACE 1
         IEFSSREQ                  ISSUE SUBSYSTEM REQUEST
         SPACE 1
         STH   R15,RETCODE         SAVE IEFSSREQ RETURN CODE
         MVI   SNAPID,7            IDENTIFY SNAP ORIGIN
         SPACE 1
         L     R15,SSSOWTRC        GET JES PARAMETER ADDRESS
         MVC   RDRSTIME,4(R15)     GET RDR START DATE/TIME FOR JOB
         SPACE 1
         MODESET MODE=PROB,KEY=NZERO GET BACK INTO PROBLEM STATE
         SPACE 1
         LH    R15,RETCODE         GET IEFSSREQ RETURN CODE
         LTR   R15,R15             SUBSYSTEM REQUEST SUCCESSFUL?
         BNZ   SETSTOP             NO. PREPARE TO TERMINATE
         C     R15,SSOBRETN        DID WE GET A DATA SET FROM JES?
         BE    HAVEDS              YES. GO PROCESS IT
         LA    R1,4                FOR 'COMPARE'
         C     R1,SSOBRETN         ARE WE OUT OF ELIGIBLE DATA SETS?
         BE    CHKLAST             YES. CHECK IF LASTJOB TO BE PRINTED
SETSTOP  OI    FLAG,SREQF          INDICATE TERMINATION WITHOUT SSREQ
         SPACE 2
SNAPIT   DS    0H
         OPEN  (SNAPDCB,(OUTPUT))  FOR SNAP, FOLLOWING
         SPACE 1
         SNAP  DCB=SNAPDCB,ID=1,PDATA=REGS,STORAGE=(JCLLIST,EOSNAP)
         SPACE 1
         OI    FLAG,STOPF          INDICATE TERMINATION TO BE PERFORMED
         CLI   SNAPID,2            DETERMINE SNAP ORIGIN AND
         BH    PANEOF                 BRANCH TO
         BE    STOPWTR                   APPROPRIATE
         B     ENDWTR                       LOCATION
         SPACE 1
CHKLAST  CLI   DSFLAGS+2,X'02'     DID LAST JOB HAVE A MSG DATA SET?
*        BE    PANEOF              YES, WE ALREADY CHECKED IT. CONTINUE
         B     PANEOF              *** ALL DATA SETS NOT REQUIRED ***
         NI    FLAG,255-INTF       ENSURE WARNING MSG DOES NOT APPEAR
         MVC   0(80,R2),USECARD    MOVE '++USER' CARD TO PAN IOAREA
         BAL   R7,PANRET           GO CHANGE USER CODE FOR 'BAD' JOB
         MVC   0(80,R2),WRTCARD    MOVE '++WRITE' CARD TO PAN IOAREA
         BAL   R7,PANRET           GO PRINT JOB
         SPACE 2
PANEOF   MVI   0(R3),C'G'          INDICATE EOF TO PANVALET
         SPACE 1
PANRET   STM   R5,R8,SA1+40        SAVE REGS FOR NEXT ENTRY TO PANEXIT
         L     R13,SA2+4           GET PANVALET'S SA PTR
         LM    R14,R12,12(R13)     RESTORE PANVALET'S REGISTERS
         BR    R14                 RETURN TO PANVALET
         EJECT
         DS    0F
SSPARM   DC    X'80',AL3(SSAREA)   ADDRESS OF SSOB
SSAREA   DC    C'SSOB'             CONTROL BLOCK IDENTIFIER
         DC    AL2(SSOBHSIZ)       LENGTH OF SSOB HEADER
         DC    AL2(SSOBSOUT)       FUNCTION ID
         DC    A(0)                ADDRESS OF SSIB OR ZERO
         DC    F'0'                RETURN CODE FROM SUBSYSTEM
         DC    A(SSFUNC)           FUNCTION DEPENDENT AREA POINTER
SSFUNC   DC    AL2(SSSOSIZE)       SYSOUT EXTENSION LENGTH
         DC    X'00'               SSSOUFLG
         DC    X'00'               RESERVED
         DC    AL1(SSSOSCLS)       DS SELECTION CNTL FLAGS - CLASS ONLY
         DC    XL23'00'            FILLER
         DC    XL8'00'             DEST. - NOT A SELECTION CRITERION
         DC    XL64'00'            FILLER
         DC    CL8'W'              SYSOUT CLASS SELECTION LIST
*        DC    XL12'00'            REST OF SSOB EXTENSION   WJS/26MAR80
         DC    CL20'00'            PPS/1 - PGMR NAME FIELD  WJS/26MAR80
         DC    XL4'00'             PPS/1 - RESERVED         WJS/26MAR80
         DC    CL4'00'             PPS/1 - ACCOUNT NUMBER   WJS/26MAR80
         DC    CL4'00'             PPS/1 - ROOM NUMBER      WJS/26MAR80
         DC    CL8'00'             PPS/1 - /*JOBPARM O=     WJS/26MAR80
         DC    XL20'00'            PPS/1 - RESERVED         WJS/26MAR80
         SPACE 1
         DS    0F
S99PARM  DC    X'80',AL3(S99AREA)  ADDRESS OF SVC 99 REQUEST BLOCK
S99AREA  DC    AL1(S99RBEND-S99RB) LENGTH OF REQUEST BLOCK
         DC    X'01'               VERB CODE
         DC    XL6'00'
         DC    A(ALTUPTR)          POINTER TO LIST OF TEXT UNIT PTRS
         DC    XL8'00'
         SPACE 1
ALTUPTR  DC    A(ALDSTU)           ADDR OF DSNAME TEXT UNIT
         DC    A(ALSSTU)           ADDR OF SUBSYSTEM TEXT UNIT
         DC    X'80',AL3(ALDDTU)   ADDR OF DDNAME TEXT UNIT
         SPACE 1
ALDSTU   DC    X'0002'             ALLOCATION BY DSNAME
         DC    X'0001'             ONE PARAMETER
         DC    X'002C'             LENGTH OF PARAMETER
ALDSN    DC    CL44' '             DSNAME
         DS    0H
ALSSTU   DC    X'005C'             SUBSYSTEM DATA SET ALLOCATION
         DC    X'0001'             ONE PARAMETER
         DC    X'0004'             LENGTH OF PARAMETER
ALSSN    DC    CL4'JES2'           SUBSYSTEM NAME
         DS    0H
ALDDTU   DC    X'0055'             RETURN WITH DDNAME
         DC    X'0001'             ONE PARAMETER
         DC    X'0008'             LENGTH OF PARAMETER
ALDDNAM  DC    CL8' '              AREA FOR DDNAME
         SPACE 1
UALTUPTR DC    A(UALDDTU)          ADDR OF UNALLOCATION DDNAME TXT UNIT
         DC    X'80',AL3(UALOVDSP) ADDR OF UNALLOC OVERIDING DISP TXT U
         SPACE 1
UALDDTU  DC    X'0001'             UNALLOCATION BY DDNAME
         DC    X'0001'             ONE PARAMETER
         DC    X'0008'             LENGTH OF PARAMETER
UALDDNAM DC    CL8' '              DDNAME TO BE UNALLOCATED
         DS    0H
UALOVDSP DC    X'0005'             OVERIDING DISPOSITION SPECIFICATION
         DC    X'0001'             ONE PARAMETER
         DC    X'0001'             LENGTH OF PARAMETER
         DC    X'04'               DELETE DATA SET
         SPACE 1
         DS    0F
S99PARM2 DC    X'80',AL3(S99AREA2) ADDR OF SVC 99 RB FOR SYSOUT ALLOC
S99AREA2 DC    AL1(S99RBEND-S99RB) LENGTH OF REQUEST BLOCK
         DC    X'01'               VERB CODE - ALLOCATE
         DC    XL6'00'
         DC    A(OUTTUPTR)         POINTER TO LIST OF TEXT UNIT PTRS
         DC    XL8'00'
         SPACE 1
OUTTUPTR DC    A(PRDDNAM)          ADDR OF DDNAME TEXT UNIT
         DC    A(PRSYSOUT)         ADDR OF SYSOUT DS TEXT UNIT
NORMTRTE DC    X'80',AL3(PRFREE)   ADDR OF FREE=CLOSE TEXT UNIT
         DC    X'80',AL3(PRROUTE)  ADDR OF REMOTE ROUTING TEXT UNIT
         SPACE 1
PRDDNAM  DC    X'0001'             ALLOCATION BY DDNAME
         DC    X'0001'             ONE PARAMETER
         DC    X'0008'             LENGTH OF DDNAME
         DC    CL8'PRINTJOB'       DDNAME FOR ALLOCATION
         DS    0H
PRSYSOUT DC    X'0018'             SYSOUT DATA SET ALLOCATION
         DC    X'0001'             ONE PARAMETER
         DC    X'0001'             LENGTH OF SYSOUT CLASS FIELD
         DC    CL1'A'              SYSOUT CLASS (A)
         DS    0H
PRFREE   DC    X'001C'             FREE=CLOSE
         DC    X'0000'             NO PARAMETERS
         DS    0H
PRROUTE  DC    X'0058'             DEST= - IF SUPPLIED IN PARM FIELD
         DC    X'0001'             ONE PARAMETER
PRDSTLNG DC    X'0008'             LENGTH OF DESTINATION FIELD
PRDEST   DC    CL8' '              RMT DEST - SUPPLIED BY PARM FIELD
         SPACE 2
COMMLPTR DC    A(0)                PTR FROM EXTRACT (TO ECB & CIB PTRS)
HASPECBP DC    A(0)                PTR TO ECB POSTED WHEN DS AVAILABLE
CMNDECBP DC    A(0)                PTR TO ECB POSTED WHEN CMND ISSUED
ECBL2PTR DC    A(CMDECBP2)         POINTER TO SECOND ECBLIST
CMDECBP2 DC    A(0)                POINTER TO COMMAND ECB
TIMRECBP DC    X'80',AL3(STIMRECB) POINTER TO ECB POSTED BY STIMER EXIT
STIMRECB DC    F'0'                ECB POSTED BY STIMER EXIT
         SPACE 2
DSPRCAD  DS    0F                  INITIAL BRANCH-ADDRESS TABLE
         DC    A(JES2JLOG)         ADDRESS FOR PROCESSING LOG DATA SET
         DC    A(JCLDS)            ADDRESS FOR PROCESSING JCL DATA SET
         DC    A(MSGDS)            ADDRESS FOR PROCESSING MSG DATA SET
         SPACE 2
SA1      DC    18F'0'              SAVE AREA
SA2      DC    18F'0'              SAVE AREA
REGHOLD  DC    2F'0'
WTIME    DC    F'3000'             1/2 MINUTE INTERVAL FOR STIMER
EIGHTY   DC    F'80'               OUTPUT RECORD SIZE
PXPARM   DC    H'0'                PARMS EXPECTED BY PAN FROM // EXEC
RETCODE  DC    H'0'                MACRO RETURN CODE SAVE AREA
SNAPID   DC    X'00'               FOR IDENTIFYING ORIGIN OF SNAP
BLANKS   DC    CL80' '             BLANKS
INTMSG   DC    C'PRINTED DUE TO '  INTERRUPTED JOB WARNING MSG
         DC    C'INTERRUPTION. '
         DC    C'MAY CONTAIN NO '
         DC    C'ERRORS***'
PLONG    DC    C'PARM TOO LONG'    ERROR MSG FOR EXCESSIVE PARM LENGTH
PV       DC    C'PV'               PANVALET ERROR MSG PREFIX
PV022    DC    C'022'              'NAME IN USE' ERROR MSG NUMBER
PV026    DC    C'026'              'INCORRECT LEVEL' ERROR MSG NUMBER
PV027    DC    C'027'              'INCORRECT USER CODE' ERROR MSG NO.
PSODS    DC    C'PS000'            PSO DATA SET IDENTIFIER
IEF375I  DC    C'IEF375I'          'JOB START' MSG NUMBER
IEF376I  DC    C'IEF376I'          'JOB STOP' MSG NUMBER
IEF287I  DC    C'IEF287I'          'NOT CATALOGUED 2' MSG NUMBER
IEF283I  DC    C'IEF283I'          'NOT DELETED 8' MSG NUMBER
IEF251I  DC    C'IEF251I'          'JOB CANCELLED' MSG NUMBER
IEF45    DC    C'IEF45'            FOR LOCATING JCL ERROR MSGS, ETC
IIP026I  DC    C'+IIP026I'         EMULATOR 'WRITE, DATA CHECK' MSG NO.
REPLY    DC    CL2'R '             START OF OPERATOR REPLY
CANCEL   DC    C'CANCEL'           REQUIRED FOR SCAN (PRINT CRITERION)
WORK     DC    CL10' '             FOR DECIMAL ARITHMETIC
ALLDS    DC    X'000102'           INDICATING 3 DATA SETS FOUND FOR JOB
SUFFIX   DC    P'1111'             TO CREATE NEW PANNAME WHEN DUPLICATE
DSTYPE   DC    X'FF'               DATA SET TYPE FLAG (LOG, JCL, MSG)
FLAG     DC    X'00'               MULTI-PURPOSE FLAG BYTE
LEVF     EQU   1                   SET WHEN 'PV026' ENCOUNTERED
SELF     EQU   2                   TO IDENTIFY '++SELECT' ORIGIN
PRTF     EQU   4                   TO INDICATE JOB IS TO BE PRINTED
STOPF    EQU   8                   SET WHEN TERMINATION IS NECESSARY
SREQF    EQU   16                  FOR TERMINATION WITHOUT FINAL SSREQ
INTF     EQU   32                  INTERRUPTED JOB BEING PROCESSED
         SPACE 1
CHARTAB  DC    256C'X'             TO REPLACE INVALID CHARS WITH 'X'
         ORG   CHARTAB+C' '        REPLACE BLANK
         DC    C'0'                         WITH '0'
         ORG   CHARTAB+C'$'        REPLACE '$'
         DC    C'D'                         WITH 'D'
         ORG   CHARTAB+C'#'        REPLACE '#'
         DC    C'N'                         WITH 'N'
         ORG   CHARTAB+C'@'        REPLACE '@'
         DC    C'A'                         WITH 'A'
         ORG   CHARTAB+C'A'        ALPHABETIC
         DC    C'ABCDEFGHI'           CHARACTERS
         ORG   CHARTAB+C'J'              ARE VALID
         DC    C'JKLMNOPQR'                 PANNAME
         ORG   CHARTAB+C'S'                    CHARACTERS -
         DC    C'STUVWXYZ'                        LEAVE AS IS.
         ORG   CHARTAB+C'0'        NUMERIC CHARACTERS ARE ALSO OK -
         DC    C'0123456789'               LEAVE THEM UNCHANGED.
         ORG   CHARTAB+256         RESET PAST TABLE
         SPACE 1
ERRORWTO DC    AL2(74,128)         LENGTH FIELD AND MCS FLAGS
WTXT     DC    CL62' '             WTO TEXT
WPVMSG   DC    CL8' '              PANVALET ERROR MESSAGE NUMBER
ROUTDESC DC    X'4000',X'1000'     ROUTE AND DESCRIPTOR CODES
         SPACE 1
ADDCARD  DC    CL6'++ADD'          PANAVLET ADD CARD KEYWORD
ADDDSN   DC    CL10' '             PANNAME (JOBNAME+SUFFIX)
         DC    CL64' '             REMAINDER OF CARD
         SPACE 1
SELCARD  DC    C'++SELECT PUNCH,'  PANVALET SELECT CARD KEYWORD
SELDSN   DC    CL10' '             PANNAME
SELEVEL  DC    C',1'               LEVEL NUMBER (ALWAYS ONE)
SESEQ    DC    CL53',1,1'          SEQ NO., FIRST CARD. IE JOB HEADER
         SPACE 1
WRTCARD  DC    C'++WRITE WORK,'    PANVALET WORK CARD KEYWORD
WRTDSN   DC    CL10' '             PANNAME
         DC    CL57' '             BLANK FILLER
         SPACE 1
UPDCARD  DC    CL9'++UPDATE'       PANVALET UPDATE CARD KEYWORD
UPDDSN   DC    CL10' '             PANNAME
UPDLEVEL DC    CL61',1'            LEVEL NUMBER (ALWAYS ONE)
         SPACE 1
CDSCARD  DC    CL4'++C'            CNTL CARD FOR 'ADDING' TO END OF DS
STMTS    DC    CL8' '              LAST CURRENT SEQ NO. FROM DIRECTORY
         DC    C','                COMMA SEPARATOR
STMTS2   DC    CL8' '              LIKE STMTS, FOR DELETION OF TRAILER
         DC    CL59' '             BLANK PADDING
         SPACE 1
CHDCARD  DC    CL80'++C 1,1'       CHANGE CARD FOR REPLACING JOB HEADER
         SPACE 1
LEVCARD  DC    CL8'++LEVEL'        PANVALET LEVEL CARD KEYWORD
LEVDSN   DC    CL10' '             PANNAME
LEVELS   DC    CL62',2,1'          LEVEL CHANGE ALWAYS FROM 2 TO 1
         SPACE 1
USECARD  DC    CL7'++USER'         PANVALET USER CARD KEYWORD
USEDSN   DC    CL10' '             PANNAME (JOBNAME+SUFFIX)
USECODES DC    CL63',0,1'          CHANGE USER CODE FROM 0 TO 1
         SPACE 1
COMMENT  DC    CL10'++COMMENT'     PANVALET COMMENT CARD KEYWORD
COMDSN   DC    CL10' '             PANNAME (JOBNAME+SUFFIX)
         DC    CL1','              COMMA INDICATING COMMENT FOLLOWING
COMNTJN  DC    CL8' '              JOBNAME FROM SSOB
         DC    CL1' '              SPACE
COMNTJI  DC    CL8' '              JOBID FROM SSOB
         DC    C' START='
START    DC    CL10' '             START DATE/TIME FROM IEF375I MSG
         DC    C' STOP='
STOP     DC    CL10' '             STOP DATE/TIME FROM IEF376I MSG
         DC    CL9' '              SPACES
         SPACE 1
TRAILER  DC    X'FF',C'END'        INSERTED AT END OF EACH JOB
JOBHEADR DC    X'00',CL4'JOB'      HEADER IDENTIFIER
LASTJOB  DC    CL16' '             JOB NAME/NUMBER OF PREVIOUS DS
         DC    CL1' '              SPACE
RDRSTIME DC    XL8'00'             RDR START TIME/DATE OF JOB
DSFLAGS  DC    X'000102'           0=LOG, 1=JCL, 2=MSG DS PROCESSED
         DC    XL47'00'            FILLER
DSFLOFF  EQU   DSFLAGS-JOBHEADR+1  OFFSET OF DSFLAGS IN 'PUNCH' RECORD
         EJECT
INDCB    DCB   DDNAME=DUMMY,DSORG=PS,MACRF=GL,                         *
               EODAD=EOF,EROPT=ACC,SYNAD=SYNEXIT
         SPACE 2
OUTDCB   DCB   DDNAME=PRINTJOB,DSORG=PS,MACRF=PL,                      *
               RECFM=FA,LRECL=133,BLKSIZE=133
         SPACE 2
SNAPDCB  DCB   DDNAME=SNAP,DSORG=PS,MACRF=W,                           *
               RECFM=VBA,LRECL=125,BLKSIZE=882
         SPACE 3
EOSNAP   EQU   *                   END OF STORAGE AREA TO BE SNAPPED
         EJECT
DIRECTRY DSECT                     PAN DIRECTORY ENTRY DSECT
DNAME    DS    CL10                NAME LEFT JUSTIFIED
DLEVEL   DS    CL3                 LEVEL NUMBER
DUSER    DS    CL4                 USER CODE
DSECURE  DS    CL1                 SECURITY CODE
DTYPE    DS    CL5                 LANGUAGE TYPE
DSTATUS  DS    0CL3                3 CHAR STATUS
DPRODT   DS    CL1                 P=PROD, T=TEST
DEORDD   DS    CL1                 E=ENABLE, D=DISABLE
DAORDI   DS    CL1                 A=ACTIVE, I=INACTIVE
DDATEM   DS    CL8                 DATE OF LAST MAINTENANCE MM/DD/YY
DDATEA   DS    CL8                 DATE OF LAST ACCESS MM/DD/YY
DBLOCKS  DS    CL5                 NO. OF BLOCKS
DSTMTS   DS    CL8                 NO. OF STATEMENTS
DLASTACT DS    CL4                 LAST ACTION. 1ST POS. IS '*' IF PROD
DBYTES   DS    CL2                 AVERAGE NO. OF BYTES PER STATEMENT
DSUBSET  DS    CL4                 NO. OF SUBSETS (FOR SUPERSETS ONLY)
DNAME2   DS    CL10                NAME RIGHT JUSTIFIED
         DS    CL1                 NOT USED
DFORM    DS    CL1                 N=NOFORMAT, T=TSO, ELSE BLANK
DINC     DS    CL1                 I=INCLUDE BEING EXPANDED (EXIT ONLY)
DVERSION DS    XL2                 VERSION NO. (PROTECTION FILES ONLY)
         EJECT
COMMADDR DSECT                     POINTED TO BY COMMLPTR
COMMECB  DS    A                   POINTER TO COMMAND ECB
COMMCIB  DS    A                   POINTER TO COMMAND INPUT BUFFER
         SPACE 3
CVTPTR   EQU   16                  CVT POINTER
         SPACE 1
CVTMAP   DSECT                     CVT MAP
         DS    37D                 FILLER
CVTJESCT DS    F                   JES COMMUNICATION TABLE ADDRESS
         SPACE 3
         IEFJESCT                  JES COMMUNICATION TABLE DSECT
         EJECT
         IEFJSSOB (SO)             SSOB DSECT WITH PROCESS SYSOUT FUNC
         EJECT
         IEFZB4D0                  SVC 99 REQUEST BLOCK DSECT
         EJECT
         DCBD  DSORG=PS,DEVD=DA    DCB DSECT
         SPACE 3
         END
/*
//LINKEDIT EXEC PGM=IEWL,PARM='LIST,LET,XREF,NCAL',COND=(0,LT)
//SYSPRINT  DD  SYSOUT=*
//SYSUT1    DD  UNIT=SYSDA,SPACE=(CYL,(3,1))
//SYSLIB    DD  DISP=SHR,DSN=SYS1.PANLIB
//SYSLMOD   DD  DISP=SHR,DSN=SYS1.SOFTJOB
//SYSLIN    DD  DISP=(OLD,DELETE),DSN=&&OBJMOD
//          DD  *
 INCLUDE  SYSLIB(FGPAN19B,PAN#1)
 IDENTIFY JCLLIST('PANVALET/V10-JES2 SYSMSG SPOOLING SYSTEM')
 SETSSI   80000904
 ENTRY    JCLLIST
 SETCODE  AC(1)
 NAME     JCLLIST(R)
/*
//
