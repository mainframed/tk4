SETPFKEY TITLE 'PFK CREATION - MODIFICATION PROGRAM'
***********************************************************************
*  DESCRIPTION -                                                      *
*                                                                     *
*        THIS ROUTINE WILL MODIFY THE PFK AREAS IN MAIN               *
*        STORAGE.  IN ORDER TO MAKE THEM PERMANENT,                   *
*        THE OPERATOR WILL HAVE TO MAKE A                             *
*        REAL PFK DEFINITION.                                         *
*        NOTE -- THIS PROGRAM MUST RUN AUTHORIZED.                    *
*                                                                     *
*   PROGRAM DESCRIPTION -                                             *
*         SETPFKEY WILL LOAD THE RESIDENT PFK AREA FROM CARD IMAGE    *
*         INPUT.                                                      *
*         THE OPERATORS MAY MAKE THE CHANGES PERMANENT AND UPDATE     *
*         SYS1.DCMLIB BY MEARLY UPDATING ANY PFK.                     *
*         IT IS SUGGESTED THAT THE SIMPLEST ONE BE UPDATED.  THIS WILL*
*         CAUSE THE IEEPFKEY MEMBER TO BE REWRITTEN WITH ALL PFK'S.   *
*                                                                     *
*   CREDITS -                                                         *
*         THIS PROGRAM IS A MODIFIED VERSION OF A PROGRAM FROM THE    *
*         CBT TAPE WRITTEN BY MR. BARRY GOLDBERG OF THE AUTO CLUB     *
*         OF SOUTHERN CALIFORNIA.  THE MODIFICATIONS WERE TO          *
*         UPDATE THE PROGRAM FOR CROSS MEMORY SERVICES REQUIRED       *
*         TO RUN UNDER MVS SP 1.3.  ALSO ADDED WAS AN OPTIONAL        *
*         PRINT REPORT LISTING THE KEYS THAT WERE SET AND ANY         *
*         ERRORS WHICH OCCURRED WHILE SETTING THEM AS WELL AS         *
*         ALLOWING A COMMENT CARD TO BE ENTERED (BUT NOT PRINTED)     *
*         IN THE INPUT DECK BY STARTING THE CARD WITH AN '*' IN       *
*         COLUMN 1.                                                   *
*                                                                     *
*        WRITTEN BY:                                                  *
*                        JOHN V. HOOPER                               *
*                        NORTHWESTERN BANK                            *
*                        P.O. BOX 310                                 *
*                        NORTH WILKESBORO, N.C. 28674                 *
*                                                                     *
***********************************************************************
          EJECT
***********************************************************************
*                                                                     *
*INPUT RECORD FORMAT:                                                 *
*                                                                     *
*   COL               FUNCTION                                        *
*                                                                     *
*  1                 IF AN "*", THIS CARD WILL BE IGNORED             *
*                    THIS IS TO ALLOW DOCUMENTATION IN THE            *
*                    INPUT "CARD" DECK.                               *
*                                                                     *
*  1 - 2             CONSOLE ID FOR PFK                               *
*  3 - 4             PFK #                                            *
*    5               PFK CONTROL                                      *
*                    BLANK  =  NULL PFK ENTRY                         *
*                       N   =  NON CONVERSATIONAL                     *
*                       Y   =  CONVERSATIONAL                         *
*  7 - 71            THE COMMAND AS IT WOULD BE ISSUED AND IF         *
*                     MULTIPLE, SEPARATED WITH A SEMICOLON. ALSO      *
*                     UNDERSCORE ALLOWED (TAKES A POSITION).          *
*   72               CONTINUATION COLUMN IF COMMAND(S) REQUIRE        *
*                     ADDITIONAL SPACE ON ANOTHER CARD.               *
*   CARD # 2 -                                                        *
*   16-55            CONTINUATION OF COMMAND IF PREVIOUS CARD         *
*                     IS NONBLANK IN COL 72.                          *
*                                                                     *
*NOTE :                                                               *
*         1) MAXIMUM LENGTH OF ALL COMMANDS INCLUDING SPECIAL         *
*               CHARACTERS AND BLANKS IS 105 CHARACTERS.              *
*         2) THIS PROGRAM MUST RUN AUTHORIZED WITH LINKAGE EDITOR     *
*            OPTION OF AC=1 FROM AN AUTHORIZED LIBRARY.               *
*                                                                     *
*EXAMPLE:                                                             *
*                                                                     *
*  //JOBNAME  JOB ....                                                *
*  //PFK      EXEC PGM=SETPFKEY                                       *
*  //SYSPRINT DD  SYSOUT=A            OPTIONAL REPORT FILE            *
*  //SYSIN DD    *                                                    *
*  *               COMMENT CARDS                                      *
*  *               COMMENT CARDS                                      *
*  *               COMMENT CARDS                                      *
*  0101N K E,1                                                        *
*  0102Y V 020,CONSOLE,ROUT=(1,2,3,4,5,6,8,9,10,11,12,14,15)          *
*  0103Y S SSP98LBL.P3;S SSP97LBL.P3                                  *
*  0104Y V 520,CONSOLE,ROUT=(1,2,3,4,5)                               *
*  0105Y S LBLREADC.P3;S LBLREAD.P3,ID=_X                             *
*  0106Y V 301,CONSOLE,ROUT=7,AUTH=ALL;V 300,CONSOLE,ROUT=3,AUTH=INFO *
*  0107                                                               *
*  0108Y S MSC1010P.P3,RUN=_X                                         *
*  0109Y CENOUT C=A,J=_                                               *
*  0110Y S MSC9010P.P3,RUN=_                                          *
*  0111Y K S,DEL=RD,SEG=19,RTME=001,RNUM=19,CON=N                     *
*  0112Y S SSP93CPY.P3,NEWVOL='SER=_CAPS'                             *
*  *               COMMENT CARDS                                      *
*  *               COMMENT CARDS                                      *
*  *               COMMENT CARDS                                      *
*  0201N K E,1                                                        *
*  0202                                                               *
*  0203                                                               *
*  0204Y V 020,MSTCONS                                                *
*  0205                                                               *
*  0206                                                               *
*  0207Y K S,DEL=RD,SEG=19,RTME=001,RNUM=19,CON=N;K A,NONE            *
*  0208N D A                                                          *
*  0209N D N=SOUT                                                     *
*  0210N D R                                                          *
*  0211N D N                                                          *
*  0212N K                                                            *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                R E G I S T E R     E Q U A T E S                    *
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
***********************************************************************
*                START OF PROGRAM                                     *
***********************************************************************
SETPFKEY CSECT
         USING SETPFKEY,R12        SET PROGRAM ADDRESSABILITY
         SAVE  (14,12)             SAVE REGISTERS
         LR    R12,R15             INITIALIZE BASE REG WITH ENTRY POINT
         LR    R15,R13             SAVE CALLING'S SAVE AREA ADDR
         LA    R13,NEWSAVE         LOAD ADDR OF NEW SAVE AREA
         ST    R13,8(R15)          STORE NEW SAVE ADDR IN OLD
         ST    R15,4(R13)          STORE OLD SAVE ADDR IN NEW
         SPACE 3
***********************************************************************
*          SETUP CROSS MEMORY STUFF                                   *
***********************************************************************
         MODESET MODE=SUP,KEY=ZERO AUTHORIZE OURSELVES
         ESAR  R9                  GET SECONDARY ASID
         ST    R9,SASID            AND SAVE IT
         AXSET AX=ONE              SET AX TO ALLOW SSAR
         MODESET MODE=PROB,KEY=NZERO UNAUTHORIZE OURSELVES
         SPACE 3
***********************************************************************
*          BUILD A TABLE OF ALL UCM ADDRESSES                         *
***********************************************************************
BLDUCMS  L     R4,16               R4 = ADDR OF CVT
         USING CVT,R4              SET ADDRESSABILITY TO CVT
         L     R4,CVTCUCB          R4 = ADDR OF 'CUCB' (UCM BASE)
         DROP  R4                  DROP ADDRESSABILITY TO CVT
         USING UCM,R4              SET ADDRESSABILITY TO UCM BASE
         L     R5,UCMVEA           ADDRESS OF FIRST UCM ENTRY
         L     R6,UCMVEZ           LOAD LENGTH OF EACH UCM ENTRY
         L     R7,UCMVEL           ADDRESS OF LAST UCM ENTRY
         DROP  R4                  DROP ADDRESSABILITY TO UCM BASE
         USING UCMLIST,R5          SET ADDRESSABILITY TO UCM
         LA    R8,UCMTAB+4         LOAD ADDR OF 1ST UCM ADDR (REL 1)
         LA    R15,UCMTABC         LOAD NUMBER OF ENTRIES IN TABLE
UCMTBLP  SLR   R8,R8               ZERO REGISTER FOR IC
         IC    R8,UCMID            LOAD UCMID
         CR    R8,R15              SEE IF UCMID OUTSIDE OUR TABLE
         BH    UCMTBLP1            YES, IGNORE IT
         SLL   R8,2                MULTIPLY BY 4
         LA    R8,UCMTAB(R8)       POINT WITHIN TABLE
         ST    R5,0(R8)            SAVE UCM ADDRESS
UCMTBLP1 LA    R8,4(,R8)           INCREMENT TO NEXT UCMTAB ENTRY
         AR    R5,R6               INCREMENT TO NEXT UCM ENTRY
         CR    R5,R7               SEE IF END OF UCM ENTRIES
         BL    UCMTBLP             NO, LOOP
UCMTDONE STH   R15,NUMUCMS         SAVE MAX NUMBER OF UCMS
         DROP  R5                  DROP ADDRESSABILITY TO UCM
         EJECT
***********************************************************************
*        SEE IF A REPORT FILE IS DEFINED                              *
***********************************************************************
         SLR   R15,R15        CLEAR REGISTER FOR ICM
         L     R14,16         POINT TO CVT
         L     R14,0(,R14)    POINT TO TCB POINTERS
         L     R14,4(,R14)    POINT TO CURRENT TCB
         L     R14,12(,R14)   POINT TO TIOT
         LA    R14,24(,R14)   POINT TO TIOT DD ENTRIES
CKDDN    ICM   R15,1,0(R14)   LOAD ENTRY LENGTH
         BZ    OPENIN         END OF TIOT, NO PRINT FILE
         CLC   4(8,R14),C#SYSPR SEE IF SYSPRINT SPECIFIED
         BE    PRINT          YES, GET OUT
         LA    R14,0(R15,R14) INCREMENT TO NEXT ENTRY
         B     CKDDN          LOOP
PRINT    OI    SWITCH,REPORT  TURN ON REPORT INDICATOR
         OPEN  (SYSPRINT,(OUTPUT)) OPEN OUTPUT REPORT FILE
         B     OPENIN         GO OPEN INPUT FILE
         SPACE 3
***********************************************************************
*        OPEN THE INPUT FILE                                          *
***********************************************************************
OPENIN   OPEN  SYSIN               OPEN INPUT CARD FILE
         EJECT
***********************************************************************
*        THIS IS THE READ/MODIFY LOOP                                 *
*        INITIALIZE THE PFK AREA AND READ/FILL WITH DATA              *
***********************************************************************
         SPACE
READ     MVI   CTLLINE,C' '        BLANK OUT
         MVC   CTLLINE+1(L'CTLLINE-1),CTLLINE  PFKEY IMAGE
         XC    CTLIND,CTLIND       AND INDICATORS
GET1     GET   SYSIN               READ FIRST RECORD OF POSSIBLE PAIR
         CLI   0(R1),C'*'          IS THIS A COMMENT CARD?
         BE    GET1                YES, IGNORE IT
         LR    R3,R1               SAVE ADDRESS OF RECORD
         MVC   OUTCON,0(R3)        MOVE CONSOLE ID TO PRINT LINE
         PACK  DBL,0(2,R3)         GET CONSOLE ID
         CVB   R1,DBL                  INTO BINARY
         STH   R1,CONID            AND SAVE IT
         MVC   OUTPFK,2(R3)        MOVE PFK NUMBER TO PRINT LINE
         PACK  DBL,2(2,R3)         GET PFK NUMBER
         CVB   R1,DBL                  INTO BINARY
         STH   R1,PFKNO            AND SAVE IT FOR LATER
         CLI   4(R3),C' '          IS THIS A NULL ENTRY?
         BE    SETX                YES, WE ARE FINISHED
         MVC   OUTCONV,4(R3)       MOVE CONVERSATIONAL INDICATOR TO RPT
         OI    CTLIND,ACTIVE       INDICATE ACTIVE ENTRY
         CLI   4(R3),C'N'          IS IT NON CONVERSATIONAL
         BE    SET1                YES
         CLI   4(R3),C'Y'          CONVERSATIONAL
         BNE   SET1                NO, TOO BAD, IGNORE
         OI    CTLIND,CONY         SET CONVERSATIONAL BIT
         SPACE 2
SET1     MVC   CTLLINE1,6(R3)      SET COMMAND
         CLI   71(R3),C' '         ANY CONTINUATION?
         BE    SETX                NO
GET2     GET   SYSIN               READ SECOND CARD OF PAIR
         CLI   0(R1),C'*'          IS THIS A COMMENT CARD?
         BE    GET2                YES, IGNORE IT
         MVC   CTLLINE2,15(R1)     SET REST OF THE COMMAND
         EJECT
***********************************************************************
*        DATA AREA NOW COMPLETE, CHECK AND SET PFK                    *
***********************************************************************
         SPACE
SETX     MVC   OUTCMD,CTLLINE      MOVE COMMAND TO REPORT LINE
         LH    R6,CONID            GET CONSOLE NUMBER
         CH    R6,NUMUCMS          SEE IF EXCEEDS MAXIMUM
         BH    ERROR1              YES, ERROR
         SLL   R6,2                MULTIPLY BY 4 FOR OFFSET
         L     R3,UCMTAB(R6)       LOAD UCM ENTRY
         LTR   R3,R3               TEST UCM ADDRESS
         BZ    ERROR2              DOES NOT EXIST, ERROR
         SPACE 2
***********************************************************************
*        HAVE FOUND THE ENTRY, NOW MUST GO TO                         *
*        GET THE PFK AREA                                             *
***********************************************************************
         SPACE 2
         USING UCMLIST,R3          SET ADDRESSABILITY TO PROPER UCM
         ICM   R15,15,UCMXB        LOAD DCM ADDRESS
         BZ    ERROR3              NOT HERE, ERROR
         DROP  R3                  DROP ADDRESSABILITY TO UCM
         USING DCM,R15             SET ADDRESSABILITY TO DCM
         ICM   R15,15,DCMADPFK     LOAD ADDRESS OF PFKEYS
         BZ    ERROR4              NOT HERE, ERROR
         SPACE 2
***********************************************************************
*        WE ARE NOW POINTING TO THE PFK AREA                          *
***********************************************************************
         SPACE
         LH    R6,PFKNO            GET PFK NUMBER
         LTR   R6,R6               TEST PFK NUMBER
         BNP   ERROR5              BAD, ERROR
         BCTR  R6,0                MAKE PFK REL 0
         MH    R6,LENPFK           MULTIPLY BY LENGTH OF ENTRY
         AR    R6,R15              R6 = ADDR OF CONSOLE PFK ENTRY
         LA    R4,OLDPFK           R4 = ADDR OF OUR COPY OF PFK ENTRY
         LA    R5,PFKLEN           R5 = LENGTH OF DATA
         MODESET MODE=SUP,KEY=ZERO AUTHORIZE OURSELVES
         LA    R9,CONASID          LOAD THE ASID OF "CONSOLE"
         SSAR  R9                  SET "CONSOLE" AS SECONDARY ASID
         SLR   R15,R15             SET 'FROM' KEY TO ZERO
         MVCP  0(R5,R4),0(R6),R15  MOVE IT
         L     R9,SASID            LOAD PREVIOUS SECONDARY ASID
         SSAR  R9                  SET TO PREVIOUS SECONDARY ASID
         MODESET MODE=PROB,KEY=NZERO UNAUTHORIZE OURSELVES
         CLC   OLDPFK(1),PFKID     IS IT THE SAME?
         BNE   ERROR6              NO, ERROR
         LA    R4,NEWPFK           R4 = ADDR OF NEW PFK ENTRY
         MODESET MODE=SUP,KEY=ZERO AUTHORIZE OURSELVES
         LA    R9,CONASID          LOAD THE ASID OF "CONSOLE"
         SSAR  R9                  SET "CONSOLE" AS SECONDARY ASID
         SLR   R15,R15             SET 'FROM' KEY TO ZERO
         MVCS  0(R5,R6),0(R4),R15  MOVE IT BACK TO CONSOLE
         L     R9,SASID            LOAD PREVIOUS SECONDARY ASID
         SSAR  R9                  SET TO PREVIOUS SECONDARY ASID
         MODESET MODE=PROB,KEY=NZERO UNAUTHORIZE OURSELVES
         B     WRITERPT            GO WRITE REPORT
         EJECT
***********************************************************************
*        WRITE THE DETAIL RECORD TO THE REPORT FILE                   *
***********************************************************************
WRITERPT TM    SWITCH,REPORT       SEE IF REPORT REQUESTED
         BZ    READ                NO, GO READ ANOTHER RECORD
         CP    LINECT,P#55         SEE IF PAGE IS FILL
         BNH   WRITEDET            NO, GO WRITE DETAIL
         PUT   SYSPRINT,HEADING    WRITE HEADING LINE
         ZAP   LINECT,P#3          SET LINE COUNT TO 3
         MVI   DETAIL,C'0'         SET NEXT DETAIL TO DOUBLE SPACE
WRITEDET PUT   SYSPRINT,DETAIL     WRITE DETAIL LINE
         AP    LINECT,P#1          ADD 1 TO LINE COUNT
         MVI   DETAIL,C' '         BLANK ENTIRE
         MVC   DETAIL+1(132),DETAIL     DETAIL LINE
         B     READ                GO READ ANOTHER RECORD
         EJECT
***********************************************************************
*        EOF                                                          *
***********************************************************************
EOFIN    MODESET MODE=SUP,KEY=ZERO AUTHORIZE OURSELVES
         AXSET AX=ZERO             SET AUTHORIZATION INDEX BACK TO ZERO
         MODESET MODE=PROB,KEY=NZERO UNAUTHORIZE OURSELVES
         CLOSE SYSIN               CLOSE THE INPUT FILE
         TM    SWITCH,REPORT       SEE IF REPORT REQUESTED
         BZ    RETURN              NO, BYPASS CLOSE ROUTINE
         CLOSE SYSPRINT            CLOSE OUTPUT REPORT FILE
RETURN   L     R13,4(R13)          RESTORE ORIG SAVE
         RETURN (14,12),RC=0       RETURN
         EJECT
***********************************************************************
*        ERROR ROUTINES                                               *
***********************************************************************
ERROR1   MVC   OUTERR,ERRMSG1      MOVE ERROR MESSAGE TO DETAIL
         B     WRITERPT            GO WRITE REPORT
ERROR2   MVC   OUTERR,ERRMSG2      MOVE ERROR MESSAGE TO DETAIL
         B     WRITERPT            GO WRITE REPORT
ERROR3   MVC   OUTERR,ERRMSG3      MOVE ERROR MESSAGE TO DETAIL
         B     WRITERPT            GO WRITE REPORT
ERROR4   MVC   OUTERR,ERRMSG4      MOVE ERROR MESSAGE TO DETAIL
         B     WRITERPT            GO WRITE REPORT
ERROR5   MVC   OUTERR,ERRMSG5      MOVE ERROR MESSAGE TO DETAIL
         B     WRITERPT            GO WRITE REPORT
ERROR6   MVC   OUTERR,ERRMSG6      MOVE ERROR MESSAGE TO DETAIL
         B     WRITERPT            GO WRITE REPORT
         EJECT
***********************************************************************
*        PROGRAM CONSTANTS AND WORK AREAS                             *
***********************************************************************
         SPACE 2
         LTORG
         SPACE
NEWSAVE  DS    18F                 PROGRAM SAVE AREA
DBL      DS    D                   A WORK AREA
SASID    DS    F                   ORIGINAL SECONDARY ASID
CONASID  EQU   5                   EQUATED "CONSOLE" ASID
CONID    DS    H                   REQUESTED CONSOLE
ZERO     DC    H'0'                TO SET AX 0
ONE      DC    H'1'                TO SET AX 1
SWITCH   DC    X'0'                MISC BIT SWITCHES
REPORT   EQU   X'80'               REPORT WAS REQUESTED
ERRORTBL DS    0CL18               TABLE OF ERROR MESSAGES
ERRMSG1  DC    CL18'CONSOLE ID GT MAX '
ERRMSG2  DC    CL18'CONSOLE INVALID   '
ERRMSG3  DC    CL18'CONSOLE NOT A CRT '
ERRMSG4  DC    CL18'CONS HAS NO PFKS  '
ERRMSG5  DC    CL18'ILLEGAL PFK USED  '
ERRMSG6  DC    CL18'PFK NOT ON CONSOLE'
UCMTAB   DC    F'0'                NULL FIRST UCM ADDRESS FOR REL 0
         DC    99F'0'              ROOM FOR MAX OF 99 CONSOLES
UCMTABC  EQU   (*-(UCMTAB+4))/4    NUMBER OF UCM ADDRESSES
NUMUCMS  DS    H                   NUMBER OF UCM ENTRIES
C#SYSPR  DC    CL8'SYSPRINT'       CHARACTER CONSTANT 'SYSPRINT'
P#1      DC    P'1'                PACKED CONSTANT '1'
P#3      DC    P'3'                PACKED CONSTANT '3'
P#55     DC    P'55'               MAX LINES PER PAGE
LINECT   DC    PL2'99'             PAGE LINE COUNTER
HEADING  DS    0CL133              REPORT HEADING LINE
         DC    C'1'                SET TO PAGE EJECT
         DC    CL40' '
         DC    CL30'DETAIL REPORT FOR SETPFKEY'
         DC    CL62' '
DETAIL   DS    0CL133              REPORT DETAIL LINE
         DC    C'0'                SET TO DOUBLE SPACE
OUTCON   DC    CL2' '              CONSOLE NUMBER
         DC    C' '
OUTPFK   DC    CL2' '              PFK
         DC    C' '
OUTCONV  DC    C' '                CONVERSATION MODE
         DC    C' '
OUTCMD   DC    CL105' '            COMMAND
         DC    C' '
OUTERR   DC    CL18' '             ERROR MSG
*
*        NEWPFK WORK AREA
*
PFKNO    DS    0H                  REQUESTED PFK NUMBER
         DS    X
NEWPFK   DS    0CL110              NEW PFK ENTRY TO SET
PFKID    DS    X
CTLIND   DS    X                   CONTROL BYTE
ACTIVE   EQU   X'80'
CONY     EQU   X'20'               PFK IS CONVERSATIONAL
CTLLINE  DS    0CL108              LENGTH OF DATA
CTLLINE1 DS    CL65                FIRST CARD IMAGE AMOUNT
CTLLINE2 DS    CL40                NEXT AMOUNT (ALLOW ONLY 105)
         DS    CL3                 THE REST
*
OLDPFK   DS    CL110               OLD PFK ENTRY
         SPACE 2
PFKLEN   EQU   110                 EQUATED LENGTH OF A PFK ENTRY
LENPFK   DC    Y(PFKLEN)           CONSTANT LENGTH OF A PFK ENTRY
         PRINT NOGEN
SYSIN    DCB   DDNAME=SYSIN,MACRF=GL,EODAD=EOFIN,DSORG=PS
         SPACE 2
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,BLKSIZE=133,RECFM=FA
         PRINT GEN
         EJECT
         CVT   DSECT=YES
         EJECT
         IEECUCM FORMAT=NEW
         EJECT
DCM      DSECT
         IEECRDCM DSECT=YES
         END
