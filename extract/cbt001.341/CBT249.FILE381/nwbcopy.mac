NWBCOPY  TITLE 'PROGRAM TO FRONT END IEBCOPY FOR DASD RESERVES'
***********************************************************************
*                                                                     *
*        THIS PROGRAM IS DESIGNED TO FRONT-END IEBCOPY.  SINCE        *
*        IEBCOPY DOES NOT PROVIDE DATASET INTEGRITY WHEN THE          *
*        OUTPUT FILE IS DISP=SHR, THIS UTILITY WILL ISSUE             *
*        RESERVES AGAINST ALL OUTPUT DATASETS PRIOR TO PASSING        *
*        CONTROL TO IEBCOPY AND WILL RELEASE THE RESERVE UPON         *
*        RETURN FROM THE UTILITY.  THE ENQUEUE NAMES USED FOR         *
*        THE RESERVE ARE THE SAME AS THOSE USED BY SPF SO THAT        *
*        ONLINE UPDATES CAN BE MADE CONCURRENTLY WITH THE USE         *
*        OF THIS UTILITY.                                             *
*                                                                     *
*                                                                     *
*        WRITTEN BY:                                                  *
*                        JOHN V. HOOPER                               *
*                        NORTHWESTERN BANK                            *
*                        P.O. BOX 310                                 *
*                        NORTH WILKESBORO, N.C. 28674                 *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*            M A C R O S   U S E D   B Y   N W B C O P Y              *
*                                                                     *
*        01)  ABEND        SYS1.MACLIB                                *
*        02)  DCB          SYS1.MACLIB                                *
*        03)  DCBD         SYS1.MACLIB                                *
*        04)  DEQ          SYS1.MACLIB                                *
*        05)  IEFJFCBN     SYS1.AMODGEN                               *
*        06)  IEFUCBOB     SYS1.AMODGEN                               *
*        07)  RDJFCB       SYS1.MACLIB                                *
*        08)  RESERVE      SYS1.MACLIB                                *
*        09)  RETURN       SYS1.MACLIB                                *
*        10)  SAVE         SYS1.MACLIB                                *
*        11)  WTO          SYS1.MACLIB                                *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*            M E S S A G E S   I S S U E D                            *
*                                                                     *
*        1)  NWBC001E THE DSNAME OF A FILE IS BLANK - JOB ABORTED     *
*            ABEND    USER 0001                                       *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*                  R E G I S T E R     E Q U A T E S                  *
*                                                                     *
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2                   DCB ADDRESS
R3       EQU   3                   UCB ADDRESS
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11                  BASE REGISTER
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
***********************************************************************
*                                                                     *
*                           S T A R T                                 *
*                                                                     *
***********************************************************************
NWBCOPY  CSECT
         SAVE  (14,12)             SAVE REGISTERS
         LR    R12,R15             INITIALIZE BASE REGISTER
         USING NWBCOPY,R12         SET PROGRAM ADDRESSABILITY
         LR    R15,R13             SAVE CALLING'S SAVE AREA ADDR
         LA    R13,NEWSAVE         LOAD ADDR OF NEW SAVE AREA
         ST    R13,8(R15)          STORE NEW SAVE ADDR IN OLD
         ST    R15,4(R13)          STORE OLD SAVE ADDR IN NEW
         ST    R1,PARMADDR         SAVE PARM ADDRESS
         EJECT
***********************************************************************
*                                                                     *
*        GET STORAGE FOR DSNAME TABLE.  THERE IS ROOM FOR 100         *
*        ENTRIES.                                                     *
*                                                                     *
***********************************************************************
         GETMAIN R,LV=4800         GET STORAGE
         ST    R1,TBLADDR          SAVE GETMAINED ADDRESS
         XC    DSNCOUNT,DSNCOUNT   ZERO THE DSNAME COUNT
***********************************************************************
*                                                                     *
*        SCAN THE TIOT FOR ALL DDNAMES STARTING WITH "OUT" OR         *
*        "COMP".                                                      *
*                                                                     *
***********************************************************************
FINDTIOT L     R1,16               GET CVT ADDR
         L     R1,0(,R1)           GET TCB PTRS
         L     R1,4(,R1)           GET CURRENT TCB
         L     R1,12(,R1)          GET TIOT ADDR1
         LA    R1,24(,R1)          POINT TO DD ENTRIES
         ST    R1,TIOTPTR          SAVE CURRENT TIOT POINTER
***********************************************************************
*                                                                     *
*        FIND THE NEXT TIOT ENTRY THAT HAS "OUT" OR "COMP" AS         *
*        A PREFIX                                                     *
*                                                                     *
***********************************************************************
FINDNXT  ICM   R1,15,TIOTPTR       LOAD CURR LOC IN TIOT
         BZ    FINDNXT4            ZERO, END OF TIOT ALREADY FOUND
         SR    R0,R0               ZERO REG FOR ICM
FINDNXT1 ICM   R0,1,0(R1)          LOAD LENGTH OF DD ENTRY
         BZ    FINDNXT4            ZERO, END OF TIOT ENTRIES
         CLC   4(3,R1),=C'OUT'     SEE IF GENERIC MATCH
         BE    FINDNXT2            YES, BRANCH
         CLC   4(4,R1),=C'COMP'    SEE IF GENERIC MATCH
         BNE   FINDNXT3            NO, GO LOOP FOR NEXT ENTRY
FINDNXT2 CLC   DDNAME,4(R1)        SEE IF SAME ENTRY AS LAST
         BE    FINDNXT3            YES, TO LOOP FOR NEXT
         MVC   DDNAME,4(R1)        SAVE DDNAME
         ST    R1,TIOTPTR          SAVE TIOT PTR
         B     FINDNXT5            GET OUT
FINDNXT3 BXH   R1,R0,FINDNXT1      LOOP FOR NEXT ENTRY
FINDNXT4 B     LINK                GO LINK TO IEBCOPY
***********************************************************************
*                                                                     *
*        REGISTER 1 POINT TO THE TIOT DD ENTRY FOR ONE OF OUR         *
*        FILES                                                        *
*                                                                     *
***********************************************************************
FINDNXT5 ICM   R1,7,17(R1)         LOAD ADDRESS OF UCB FROM TIOT ENTRY
         ST    R1,UCBADDR          SAVE THE UCB ADDR OF THE FILE
         LTR   R3,R1               TEST UCB ADDRESS
         BZ    FINDNXT             ZERO, PROBABLY A TERMINAL
         USING UCBCMSEG,R3         SET ADDRESSABILITY TO UCB
***********************************************************************
*                                                                     *
*        ISSUE A RESERVE ON THE OUTPUT FILE IF REQUIRED               *
*                                                                     *
*        1)  IF THE DATASET IS ON A DASD VOLUME.                      *
*        2)  IF THE DATASET IS NOT A NEW DATASET.                     *
*        3)  IF THE DSNAME HAS NOT ALREADY BEEN PROCESSED.            *
*                                                                     *
***********************************************************************
***********************************************************************
*        TEST FOR DASD DATASET                                        *
***********************************************************************
         TM    UCBTBYT3,UCB3DACC   IS THIS A DISK DEVICE
         BNO   FINDNXT             NO, BRANCH
         LA    R2,CHECK            LOAD DCB ADDRESS
         USING IHADCB,R2           SET ADDRESSABILITY TO DCB
         MVC   DCBDDNAM,DDNAME     SET DDNAME IN DCB
         DROP  R2                  DROP ADDRESSABILITY TO DCB
         RDJFCB (CHECK)            READ THE JFCB
         MVC   DSNAME,JFCBDSNM     SAVE THE DSNAME
         TM    JFCBIND2,JFCNEW     SEE IF A NEW FILE
         BO    FINDNXT             YES, BYPASS RESERVE
         LA    R4,DSNAME           LOAD ADDRESS OF DSNAME FIELD
         SLR   R5,R5               SET LENGTH FIELD TO ZERO
         LA    R6,44               SET LOOP COUNTER
CKRESV1  CLI   0(R4),C' '          SEE IF END OF DSNAME
         BE    CKRESV2             YES, GO ISSUE RESERVE
         CLI   0(R4),C'('          START OF MEMBER NAME
         BE    CKRESV2             YES, GO ISSUE RESERVE
         LA    R4,1(,R4)           INCREMENT TO NEXT CHAR OF DSNAME
         LA    R5,1(,R5)           ADD 1 TO LENGTH FIELD
         BCT   R6,CKRESV1          LOOP ON DSNAME
CKRESV2  LTR   R5,R5               TEST LENGTH OF DSNAME
         BZ    ERROR1              ZERO, ERROR
         BCTR  R5,0                MAKE MACHINE LENGTH
         MVI   RNAME,C' '          BLANK ENTIRE
         MVC   RNAME+1(43),RNAME         RNAME FIELD
         EX    R5,MVDSNAME         MOVE DSNAME TO RNAME FIELD
***********************************************************************
*        TEST FOR DSNAME ALREADY IN TABLE                             *
***********************************************************************
         LH    R4,DSNCOUNT         LOAD DSNAME COUNT
         L     R5,TBLADDR          LOAD TABLE ADDRESS
         LTR   R4,R4               TEST DSNAME COUNT
         BZ    CKTBL2              ZERO, BRANCH
CKTBL1   CLC   0(44,R5),RNAME      SEE IF DSNAME MATCHES
         BE    FINDNXT             YES, DO NOT RESERVE AGAIN
         LA    R5,48(,R5)          INCREMENT TO NEXT TABLE ENTRY
         BCT   R4,CKTBL1           LOOP ON ENTIRE TABLE
CKTBL2   MVC   0(44,R5),RNAME      SAVE DSNAME
         MVC   44(4,R5),UCBADDR    SAVE UCB ADDRESS
         LH    R4,DSNCOUNT         LOAD DSNAME COUNT
         LA    R4,1(,R4)           ADD 1 TO DSNAME COUNT
         STH   R4,DSNCOUNT         SAVE NEW DSNAME COUNT
***********************************************************************
*        ISSUE THE RESERVE                                            *
***********************************************************************
         RESERVE (QNAME,RNAME,E,,SYSTEMS),UCB=UCBADDR
         B     FINDNXT             GO LOOK FOR ANOTHER FILE
MVDSNAME MVC   RNAME(0),DSNAME     *** EXECUTE ONLY ***
         EJECT
***********************************************************************
*        LINK TO IEBCOPY                                              *
***********************************************************************
LINK     L     R1,PARMADDR         RESTORE THE PARM ADDRESS
         LINK  EP=IEBCOPY          GO TO IEBCOPY
         ST    R15,RETURNCD        SAVE RETURN CODE FROM IEBCOPY
         EJECT
***********************************************************************
*                                                                     *
*        TERMINATION ROUTINE                                          *
*                                                                     *
***********************************************************************
STOPRUN  LH    R4,DSNCOUNT         LOAD DSNAME COUNT
         L     R5,TBLADDR          LOAD TABLE ADDRESS
         LTR   R4,R4               TEST DSNAME COUNT
         BZ    STOPRUN2            ZERO, NO DATASETS TO DEQ
STOPRUN1 MVC   RNAME,0(R5)         SET RNAME
         MVC   UCBADDR,44(R5)      SET UCB ADDRESS
***********************************************************************
*        ISSUE THE DEQ                                                *
***********************************************************************
         DEQ   (QNAME,RNAME,,SYSTEMS),UCB=UCBADDR
         LA    R5,48(,R5)          INCREMENT TO NEXT TABLE ENTRY
         BCT   R4,STOPRUN1         LOOP UNTIL DONE
STOPRUN2 L     R1,TBLADDR          LOAD GETMAINED ADDRESS
         FREEMAIN R,LV=4800,A=(1)  FREE STORAGE
***********************************************************************
*        RETURN TO O/S WITH THE RETURN CODE FROM IEBCOPY              *
***********************************************************************
STOPRUN3 L     R15,RETURNCD        RELOAD RETURN CODE
         L     R13,4(R13)          RESTORE ORIG SAVE
         RETURN (14,12),RC=(15)    RETURN TO O/S
         EJECT
***********************************************************************
*                                                                     *
*        ERROR ROUTINES                                               *
*                                                                     *
***********************************************************************
ERROR1   WTO   'NWBC001E THE DSNAME OF A FILE IS BLANK - JOB ABORTED', X
               ROUTCDE=(12)
         ABEND 0001                ABEND THE JOB
         EJECT
***********************************************************************
*                                                                     *
*        CONSTANTS AND WORK AREAS USED BY NWBCOPY                     *
*                                                                     *
***********************************************************************
         SPACE 3
         LTORG
         SPACE 3
NEWSAVE  DS    18F                 PROGRAM SAVE AREA
QNAME    DC    CL8'SPFDSN  '       RESERVE QNAME
RNAME    DC    CL44' '             RESERVE RNAME
DSNAME   DC    CL44' '             DSNAME FROM JFCB
DDNAME   DC    CL8' '              DDNAME FROM TIOT
DSNCOUNT DC    H'0'                DSNAME COUNT IN TABLE
UCBADDR  DC    F'0'                UCB ADDRESS
RETURNCD DC    F'0'                RETURN CODE
TBLADDR  DC    F'0'                GETMAINED TABLE ADDRESS
TIOTPTR  DS    F                   POINTER TO CURRENT TIOT DD ENTRY
PARMADDR DS    F                   PARM ADDRESS (REG 1 ON ENTRY)
EXLIST   DS    0F                  DCB EXIT LIST
         DC    X'87',AL3(JFCB)
         EJECT
JFCB     DS    0F
         IEFJFCBN LIST=YES
         ORG   JFCB+176
         EJECT
CHECK    DCB   DDNAME=XXXXXXXX,MACRF=GL,DSORG=PS,EXLST=EXLIST
         EJECT
         DCBD  DSORG=PS,DEVD=TA
         EJECT
         IEFUCBOB LIST=YES
         END
