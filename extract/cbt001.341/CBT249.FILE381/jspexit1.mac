         TITLE 'JES2 EXIT 1 PRINT/PUNCH SEPARATOR EXIT'
***********************************************************************
*                                                                     *
*        ENVIRONMENT   MVS SP 1.3.0  LEVEL 8306                       *
*                      JES2 FOR SP 1.3.0                              *
*                                                                     *
*        THIS JES2 EXIT PROGRAM IS DESIGNED TO REPLACE THE IBM        *
*        STANDARD PRINT AND PUNCH SEPARATOR ROUTINES.  THE PUNCH      *
*        SEPARATOR LACE CARD AND BLANK CARD IS PRODUCED EXACTLY       *
*        AS IBM PRODUCED THEM.  THE PRINT SEPARATOR PAGE IS THE       *
*        SAME AS THAT PRODUCED BY IBM EXCEPT THAT INSTEAD OF TWO      *
*        LINES OF BLOCK LETTERS, THREE ARE PRODUCED.  THE SECOND      *
*        LINE OF THE BLOCK LETTERS IS THE FIRST EIGHT (8) BYTES       *
*        OF THE PROGRAMMER NAME FIELD.  NOTE THAT ONLY AS MANY        *
*        LINES OF BLOCK LETTERS ARE PRODUCED AS THERE IS ROOM         *
*        FOR AS DEFINED BY THE NUMBER OF LINES ON THE LOCAL OR        *
*        REMOTE SPECIFICATIONS FOR &PRIDCT OR &TPIDCT.                *
*                                                                     *
*        STARTED TASKS DO NOT PROVIDE A PROGRAMMER NAME FIELD TO      *
*        BE USED BY THE SEPARATOR ROUTINE.  TSO LOGONS ALSO DO        *
*        NOT NORMALLY PROVIDE THIS INFORMATION, HOWEVER ACF2          *
*        BUILDS A NORMAL JOB CARD WITH A PROGRAMMER NAME.  THIS       *
*        EXIT CAN OPTIONALLY PROVIDE PGMR NAME AND BIN NUMBER         *
*        FOR TSO AND STARTED TASKS.  THIS EXIT CAN ACCESS A TABLE     *
*        PREVIOUSLY BUILT IN CSA BY ANOTHER JOB WHICH PROVIDES A      *
*        THE BIN NUMBER AND PROGRAMMER NAME FOR ALL JOBS IN THE       *
*        TABLE.  THIS TABLE WAS SORTED BY JOBNAME THUS PROVIDING      *
*        THE ABILITY TO PERFORM A BINARY SEARCH WHEN ATTEMPTING       *
*        TO FIND A MATCH ON JOBNAME.  THE CONSTANT 'TECH SUP' WILL    *
*        BE SUPPLIED FOR ANY STARTED TASKS NOT FOUND IN THE TABLE     *
*        AND FOR TSO LOGONS NOT SUPPLYING THE PROGRAMMER NAME, THE    *
*        CONSTANT 'TSO USER' WILL BE USED.                            *
*                                                                     *
*        WRITTEN BY:                                                  *
*                        JOHN V. HOOPER                               *
*                        NORTHWESTERN BANK                            *
*                        P.O. BOX 310                                 *
*                        NORTH WILKESBORO, N.C. 28674                 *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                          KOMSTAR                                    *
*                                                                     *
*        SUPPORT EXISTS IN THIS EXIT FOR ONLINE KOMSTAR (KODAK).      *
*        THE DEVICE NAMES OF PRINTER7 IS RESERVED FOR THIS            *
*        DEVICE.  IF THE DEVICE IS THIS UNIT, STANDARD HEADER         *
*        AND TRAILER PAGES ARE BYPASSED, AND, BASED UPON THE          *
*        SYSOUT CLASS OF THE DATA BEING PROCESSED, DIFFERENT          *
*        ACTION MAY BE TAKEN IN THIS EXIT.                            *
*                                                                     *
*        SYSOUT CLASSES               ACTION                          *
*                                                                     *
*        P,Q,R,L     NO ACTION IS TAKEN BY THIS EXIT FOR ANY ENTRY    *
*                    FOR THESE CLASSES.  THESE CLASSES ARE RESERVED   *
*                    FOR OUTPUT FROM PME OR STARLINK1 WHICH REQUIRES  *
*                    NO SETUP FOR THE KOMSTAR RUNNING IN NATIVE MODE. *
*                                                                     *
*        C,D,E,M     NATIVE COMMAND ARE ISSUED AT START OF PRINT      *
*                    TO SET MICROFORM SETUP REQUIREMENTS FOR THE      *
*                    KOMSTAR IN EMULATION MODE.  NOTE THAT THE        *
*                    TYPE 1 CARD BEING ISSUED HERE ELIMINATES THE     *
*                    ABILITY TO MODIFY THESE VALUES BY HAVING THE     *
*                    OPERATOR SET THEM BY READING A '1' CARD INTO     *
*                    THE OPERATOR PANEL ON THE KOMSTAR PRIOR TO       *
*                    STARTING THE JOB FROM JES2.                      *
*                                                                     *
*        OTHERS      NATIVE COMMANDS TO SET HEADINGS FOR JOB NAME,    *
*                    PROGRAMMER NAME, ROOM NUMBER, AND DATE ARE       *
*                    ISSUED AT 'START' OR 'CONT' SEPARATOR ENTRY      *
*                    AND A NATIVE COMMAND TO EJECT THE FICHE AT       *
*                    'END' SEPARATOR ENTRY.                           *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                    DATAGRAPHIX ARIS II                              *
*                                                                     *
*        SUPPORT EXISTS IN THIS EXIT FOR ONLINE ARIS (DATAGRAPHIX).   *
*        THE DEVICE NAMES PRINTER6 AND PRINTER8 ARE RESERVED          *
*        FOR THESE ONLINE MICROFICHE UNITS.  IF THE DEVICE IS         *
*        ONE OF THESE UNITS, STANDARD HEADER AND TRAILER PAGES        *
*        ARE BYPASSED, AND, BASED UPON THE INFORMATION IN THE         *
*        PROGRAMMER NAME FIELD, THE FICHE UNIT WILL BE GIVEN THE      *
*        "JOB" PROCESSING NAME TO USE.                                *
*                                                                     *
*        THE "JOB" PROCESSING ID WILL BE INDICATED BY THE             *
*        CHARACTERS "K=XXXXXXX" ANYWHERE IN THE PROGRAMMER NAME       *
*        FIELD.  IF THE "K=" OPERAND IS NOT PRESEND, A DEFAULT        *
*        SET OF FICHE HEADINGS WILL BE SET BASED UPON THE JES2        *
*        INFORMATION AVAILABLE.                                       *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*                         IBM 6670                                    *
*                                                                     *
*        SUPPORT EXISTS IN THIS EXIT TO SUPPLY A SEPARATOR PAGE       *
*        FOR THE IBM 6670 REMOTE PRINTER WRITING AN INFORMATION       *
*        LINE AND THEN FORCING A PAGE EJECT SO THE REPORT CAN         *
*        START ON THE TOP OF THE NEXT PAGE AS FOLLOWS:                *
*                                                                     *
*        'JOBNAME (JOBID) ROOM PGMR-NAME                       '      *
*        'EJECT COMMAND                                        '      *
*                                                                     *
*        THE DETERMINATION THAT THE DEVICE IS A 6670 IS MADE          *
*        BY CHECKING THE DCT DEVICE NAME FOR THE PROPER REMOTE        *
*        DEVICE.  LIKE ALL PROCESSING IN THIS EXIT, THE FACILITY      *
*        MAY BE ENABLED OR DISABLED BY TURNING ON SEP=Y/N ON          *
*        THE PRINTER.                                                 *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*               A S S E M B L Y     O P T I O N S                     *
*                                                                     *
*        SEVERAL ASSEMBLY OPTIONS ARE PROVIDED FOR EASE IN            *
*        PROVIDING THE DESIRED NUMBER OF SEPARATORS ON THE            *
*        START/CONT OR END SEPARATOR FOR BOTH LOCAL AND REMOTE        *
*        DEVICES.                                                     *
*                                                                     *
*        THE DEFAULTS SET ARE AS FOLLOWS:                             *
*                                                                     *
*        NPRSEPSL (2) - NUMBER OF START/CONT PAGES FOR LOCAL PRTRS    *
*        NPRSEPEL (1) - NUMBER OF END        PAGES FOR LOCAL PRTRS    *
*        NPRSEPSR (2) - NUMBER OF START/CONT PAGES FOR REMOTE PRTRS   *
*        NPRSEPER (1) - NUMBER OF END        PAGES FOR REMOTE PRTRS   *
*        IPLINES  (4) - VALUE TO ADD TO $PRIDCT FOR IMPACT PRINTERS   *
*                       TO ALLOW PRINTING ON THE PERFORATION.         *
*        BLOCK        - CONDITIONAL VARIABLE TO DETERMINE WHICH       *
*                       INFORMATION TO PLACE ON THE THIRD BLOCK       *
*                       LETTER LINE ON THE SEPARATOR PAGE.  THE       *
*                       VALUES SHOULD BE NORMAL/BIN                   *
*        FILL         - CONDITIONAL VARIABLE TO GENERATE CODE TO      *
*                       PROVIDE PROGRAMMER NAME AND BIN NUMBER FOR    *
*                       TSO AND STARTED TASK OUTPUT.  THE VALUES      *
*                       SHOULD BE YES/NO                              *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*              M A C R O S   U S E D   I N   J E S E X I T 1          *
*                                                                     *
*        01)  $BUFFER      SYS1.HASPSRC                               *
*        02)  $CAT         SYS1.HASPSRC                               *
*        03)  $DCT         SYS1.HASPSRC                               *
*        04)  $ENTRY       SYS1.HASPSRC                               *
*        05)  $FREEBUF     SYS1.HASPSRC                               *
*        06)  $GETBUF      SYS1.HASPSRC                               *
*        07)  $HASPCB      INSTREAM                                   *
*        08)  $HASPGEN     SYS1.HASPSRC                               *
*        09)  $HCT         SYS1.HASPSRC                               *
*        10)  $JCT         SYS1.HASPSRC                               *
*        11)  $JOE         SYS1.HASPSRC                               *
*        12)  $JQE         SYS1.HASPSRC                               *
*        13)  $MIT         SYS1.HASPSRC                               *
*        14)  $MODEND      SYS1.HASPSRC                               *
*        15)  $MODULE      SYS1.HASPSRC                               *
*        16)  $PBLOCK      SYS1.HASPSRC                               *
*        17)  $PCE         SYS1.HASPSRC                               *
*        18)  $PPPWORK     SYS1.HASPSRC                               *
*        19)  $PRPUT       SYS1.HASPSRC                               *
*        20)  $RDT         SYS1.HASPSRC                               *
*        21)  $RETURN      SYS1.HASPSRC                               *
*        22)  $SAVE        SYS1.HASPSRC                               *
*        23)  $SEPPDIR     SYS1.HASPSRC                               *
*        24)  $SVT         SYS1.HASPSRC                               *
*        25)  $SYSPARM     SYS1.HASPSRC                               *
*        26)  TIME         SYS1.MACLIB                                *
*                                                                     *
*                                                                     *
*              L I N K A G E    E D I T O R    I N F O                *
*                                                                     *
*        SIZE:       4K                                               *
*        ATTRIBUTES: REENTRANT, REUSEABLE, REFRESHABLE                *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
         PRINT OFF
***********************************************************************
*                                                                     *
***** $HASPCB *****           GENERATE HASP CONTROL BLOCKS            *
*                                                                     *
***********************************************************************
         MACRO
         $HASPCB &DOC=NO,&LIST=NO
         GBLC  &PRINT,&GEN,&DATA
         PUSH  PRINT
         PRINT &PRINT
         $BUFFER  DOC=&DOC
         $JCT     DOC=&DOC
         $JOE     DOC=&DOC
         $JQE     DOC=&DOC
         $DCT     DOC=&DOC
         $RDT     DOC=&DOC
         $SVT     DOC=&DOC
         $PCE     DOC=&DOC
         $CAT     DOC=&DOC
         $HCT     DOC=&DOC
         $MIT     DOC=&DOC
         $PPPWORK DOC=&DOC
         $CVT     DOC=&DOC,LIST=&LIST
         MEND
         PRINT ON
         EJECT
         COPY  $HASPGEN
JESEXIT1 $MODULE
         $SYSPARM (ON,GEN,DATA,NO,YES)
         $HASPCB DOC=&DOC,LIST=&LIST
         TITLE 'JES2 EXIT 1 PRINT/PUNCH SEPARATOR EXIT'
***********************************************************************
*                                                                     *
*        ASSEMBLY VARIABLES                                           *
*                                                                     *
***********************************************************************
         LCLC  &BLOCK
         LCLC  &FILL
NPRSEPSL EQU   2                   NBR OF LOCAL PRTR START SEPARATORS
NPRSEPEL EQU   1                   NBR OF LOCAL PRTR END   SEPARATORS
NPRSEPSR EQU   2                   NBR OF RMT   PRTR START SEPARATORS
NPRSEPER EQU   1                   NBR OF RMT   PRTR END   SEPARATORS
IPLINES  EQU   5                   EXTRA SEP LINES ON LOCAL IMPACT PTR
&BLOCK   SETC  'BIN'               SET THIRD BLOCK LINE TO BIN NUMBER
&FILL    SETC  'YES'               FILL IN PGMR NAME AND BIN NUMBERS
         EJECT
***********************************************************************
*                                                                     *
*        EXIT MAIN ENTRY POINT                                        *
*                                                                     *
***********************************************************************
EXIT1    $ENTRY BASE=R12,CSECT=YES
         SPACE 1
         $SAVE                     SAVE CALLER'S REGISTERS
         LR    R12,R15             LOAD BASE REGISTER
         LR    R2,R0               SAVE INPUT PARAMETER
         LR    R3,R1               SAVE INPUT DCT ADDRESS
         USING DCTDSECT,R3         SET ADDRESSABILITY TO DCT
         $GETBUF TYPE=HASP,FIX=YES,WAIT=YES GET A WORK BUFFER
         LR    R4,R1               SAVE ADDRESS OF BUFFER
         USING BUFDSECT,R4         SET ADDRESSABILITY TO BUFFER
         TM    DCTPPSW,DCTPPSWS    SEE IF SEPARATORS REQUESTED
         BO    EXIT                NO, GET OUT
         EJECT
         AIF   ('&FILL' NE 'YES').FILL1
***********************************************************************
*                                                                     *
*        SET PGMR NAME AND BIN NUMBER FOR STARTED TASKS AND TSO       *
*        LOGONS                                                       *
*                                                                     *
*        NOTE:                                                        *
*                                                                     *
*        THE INFORMATION TO SUPPLY THE PGMR NAME AND BIN NUMBER       *
*        WAS LOADED INTO A TABLE ANCHORED OFF OF THE CVT.  THE        *
*        TABLE WAS LOADED BY A BATCH JOB WHICH BUILT THE TABLE        *
*        IN CSA AND COULD RELOAD THE TABLE AS REQUIRED.  THE          *
*        FORMAT OF THE TABLE IS AS FOLLOWS:                           *
*                                                                     *
*        1)  4 BYTE SUBPOOL NUMBER AND MEMORY SIZE OF TABLE           *
*        2)  4 BYTE NUMBER OF ENTRIES IN TABLE                        *
*        3)  32 BYTE ENTRIES FOR EACH "JOBNAME" AS FOLLOWS:           *
*            A)  8 BYTE "JOBNAME"                                     *
*            B)  4 BYTE BIN NUMBER                                    *
*            C) 20 BYTE PGMR NAME                                     *
*                                                                     *
*        NOTE ALSO THAT THIS TABLE IS SORTED BY JOBNAME AND THUS      *
*        A BINARY SEARCH CAN BE PERFORMED TO FIND A MATCH.            *
*                                                                     *
***********************************************************************
SETPGMR  DS    0H             CHANGE THE JOB CLASS
         STM   R0,R15,BUFSTART SAVE REGISTERS
         TM    JCTJOBFL,JCTSTCJB+JCTTSUJB IS THIS A STC OR TSO USER?
         BZ    NOFILL         NO, BRANCH
         L     R15,16         LOAD ADDRESS OF CVT
         USING CVT,R15        SET ADDRESSABILITY TO CVT
         ICM   R5,15,CVTUSER  LOAD START OF TABLE AREA
         BZ    NOFILL         NO TABLE, BRANCH
         DROP  R15            DROP ADDRESSABILITY TO CVT
         L     R3,4(R5)       SET HIGH INDEX TO NUMBER OF ENTRIES
         LA    R5,8(,R5)      INCREMENT PAST TABLE PREFIX
         SLR   R2,R2          SET LOW INDEX TO ZERO
SEARCH   LA    R7,0(R2,R3)    ADD LOW INDEX TO HIGH INDEX
         SRL   R7,1           DIVIDE BY 2 FOR HALF
         LR    R6,R7          SAVE CURRENT INDEX
         MH    R6,H#32        MULTIPLY BY LENGTH OF ENTRY
         LA    R6,0(R5,R6)    POINT TO ACTUAL ENTRY
         CLC   JCTJNAME,0(R6) SEE IF MATCH
         BE    FOUND          EQUAL, FOUND
         BL    SEARCH2        LOW, BRANCH
SEARCH1  CR    R2,R7          SEE IF CURRENT SAME AS LOW
         BE    NOFILL         YES, NOT FOUND
         LR    R2,R7          RESET LOW TO CURRENT
         B     SEARCH         LOOP
SEARCH2  CR    R3,R7          SEE IF CURRENT SAME AS HIGH
         BE    NOFILL         YES, NOT FOUND
         LR    R3,R7          RESET HIGH TO CURRENT
         B     SEARCH         LOOP
FOUND    MVC   JCTROOMN,8(R6) SAVE BIN NUMBER FROM TABLE
         MVC   JCTPNAME,12(R6) SAVE PGMR NAME FROM TABLE
NOFILL   LM    R0,R15,BUFSTART RESTORE REGISTERS
         SPACE 3
.FILL1   ANOP
***********************************************************************
*        TEST FOR PRINTER OR PUNCH                                    *
***********************************************************************
         TM    PCEID,PCEPUSID      IS THIS A PUNCH
         BO    PUNCH               YES, BRANCH
         EJECT
***********************************************************************
*                                                                     *
*                      P R I N T E R                                  *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*        PRODUCE THE SETUP HEADER FOR A SNA REMOTE IF REQUIRED.       *
*                                                                     *
***********************************************************************
PRINTER  CLC   DCTDEVN,PRINTER6    IS THIS A DATAGRAPHIX ARIS
         BE    ARIS                YES, BRANCH
         CLC   DCTDEVN,PRINTER7    IS THIS A KOMSTAR
         BE    KOMSTAR             YES, BRANCH
         CLC   DCTDEVN,PRINTER8    IS THIS A DATAGRAPHIX ARIS
         BE    ARIS                YES, BRANCH
         CLC   DCTDEVN,RMT1PR1     IS THIS THE 6670
         BE    P6670               YES, BRANCH
         TM    MDCTFEAT,DCTPSHDR   SEE IF SETUP HDR REQUIRED
         BNO   SETSEPCT            NO, BYPASS $SEPPDIR ROUTINE
         $SEPPDIR (R4)             SEND PDIR TO SNA RMT
***********************************************************************
*                                                                     *
*        DETERMINE THE NUMBER OF LINES TO BE PRODUCTED ON THE         *
*        SEPARATOR PAGE.  THIS MAY VARY DEPENDING ON WHETER OR        *
*        NOT THE DEVICE IS A LOCAL PRINTER OR A REMOTE PRINTER.       *
*                                                                     *
***********************************************************************
SETSEPCT TM    DCTDEVID,DCTRMTID   IS THIS A REMOTE DEVICE?
         BZ    SETLOCAL            NO, BRANCH
SETRMT   LA    R1,NPRSEPSR         LOAD NBR OF START SEP PGS FOR REMOTE
         CH    R2,H#8              TEST ENTRY REASON CODE
         BNE   SETCOUNT            NOT EIGHT, NOT END, BRANCH
         LA    R1,NPRSEPER         LOAD NBR OF END SEP PGS FOR REMOTE
         B     SETCOUNT            GO SET SEPARATOR PAGE COUNT
SETLOCAL LA    R1,NPRSEPSL         LOAD NBR OF START SEP PGS FOR LOCAL
         CH    R2,H#8              TEST ENTRY REASON CODE
         BNE   SETCOUNT            NOT EIGHT, NOT END, BRANCH
         LA    R1,NPRSEPEL         LOAD NBR OF END SEP PGS FOR LOCAL
SETCOUNT BCTR  R1,0                REDUCE COUNT BY 1
         ST    R1,PCEUSER0         AND SAVE COUNT
         B     PRINTRTN            GO PRINT FIRST SEPARATOR
CALLPRNT ICM   R1,15,PCEUSER0      LOAD NUMBER OF SEP PAGES LEFT TO DO
         BZ    ENDPRNT             ZERO, DONE, EXIT
         BM    ENDPRNT             NEGATIVE, ERROR, BUT EXIT ANYWAY
         BCTR  R1,0                REDUCE COUNT BY 1
         ST    R1,PCEUSER0         AND SAVE NEW COUNT
         MVC   BUFSTART(2),PAGEJECT MOVE EJECT COMMAND TO BUFFER
         LA    R0,2                LOAD LINE LENGTH
         LA    R1,BUFSTART         LOAD ADDRESS OF EJECT COMMAND
         $PRPUT DATA=(R1),LEN=(R0),COUNT=1,WAIT=YES,CC=M
         B     PRINTRTN            GO PRINT A SEPARATOR
***********************************************************************
*                                                                     *
*        IF WE HAVE JUST FINISHED PROCESSING END SEPARATOR            *
*        PAGE(S), AN EJECT COMMAND MUST BE ISSUED TO PROPERLY         *
*        POSITION FOR EDGE MARKING.                                   *
*                                                                     *
***********************************************************************
ENDPRNT  CH    R2,H#8              TEST ENTRY REASON CODE
         BNE   EXIT                NOT EIGHT, NOT END, BRANCH
         MVC   BUFSTART(2),PAGEJECT MOVE EJECT COMMAND TO BUFFER
         LA    R0,2                LOAD LINE LENGTH
         LA    R1,BUFSTART         LOAD ADDRESS OF EJECT COMMAND
         $PRPUT DATA=(R1),LEN=(R0),COUNT=1,WAIT=YES,CC=M
         B     EXIT                GET OUT
         EJECT
***********************************************************************
*                                                                     *
*        PRINT SEPARATOR ROUTINE - MAY BE CALLED MULTIPLE TIMES       *
*                                                                     *
***********************************************************************
PRINTRTN SLR   R5,R5               CLEAR REG FOR IC
         IC    R5,$TPIDCT          LOAD REMOTE SEPARATOR LINE COUNT
         TM    DCTDEVID,DCTRMTID   SEE IF THIS IS A REMOTE DEVICE
         BO    STARTPRT            YES, BRANCH
         IC    R5,$PRIDCT          LOAD LOCAL SEPARATOR LINE COUNT
         TM    DCTPPSW2,DCTNIPRT   SEE IF THIS IS A NON-IMPACT PRINTER
         BO    STARTPRT            YES, BRANCH
         LA    R5,IPLINES(R5)      ADD EXTRA LINES FOR INPACT PRINTER
***********************************************************************
*                                                                     *
*        PRODUCE FROM 1 TO THREE BLOCK LETTER LINES.  IF ONLY         *
*        ENOUGH ROOM FOR 1 BLOCK LETTER LINE, THE JOBNAME LINE        *
*        WILL BE GENERATED.  IF THERE IS ROOM FOR ALL THREE LINES,    *
*        THE SECOND BLOCK LETTER LINE WILL BE THE FIRST EIGHT         *
*        CHARACTERS OF THE PROGRAMMER NAME.  IF THERE IS ONLY ROOM    *
*        FOR TWO LINES, THE PROGRAMMER NAME LINE WILL NOT BE          *
*        GENERATED, BUT RATHER THE LAST BLOCK LETTER LINE OF THE      *
*        JOB NUMBER AND SYSOUT CLASS OR OPTIONALLY THE BIN/ROOM       *
*        NUMBER WILL BE GENERATED.                                    *
*                                                                     *
***********************************************************************
STARTPRT CH    R5,H#15             SEE IF ROOM FOR 1 LINE OF HEADING
         BL    BLDSEPLN            NO, JUST GO PRINT SINGLE LINES
BLOCK1   LA    R0,JCTJNAME         LOAD JOB NAME ADDRESS
         $PBLOCK BUFFER=(R4),DATA=(R0),SLANT=NO
         MVI   BUFSTART,C' '       CLEAR ENTIRE
         MVC   BUFSTART+1(132),BUFSTART  BUFFER
         LA    R1,1                SET LENGTH TO 1
         STC   R1,BUFSTART         AND SAVE IT IN BUFFER
         LA    R1,2                SET REPEAT COUNT
         BAL   R7,PRINT            GO WRITE BLANK LINES
         SH    R5,H#14             SUBTRACT LINES FOR BLOCK AND BLANKS
BLOCK2   CH    R5,H#31             SEE IF ROOM FOR TWO BLOCK LETTERS
         BL    BLOCK3              NO, GO SEE IF ROOM FOR LAST BLOCK
         LA    R1,1                SET REPEAT COUNT
         BAL   R7,PRINT            GO PRINT ONE MORE BLANK LINE
         SH    R5,H#1              SUBTRACT ONE LINE FOR BLANK LINE
         CLC   JCTPNAME,BLANKS     SEE IF PGMR NAME SPECIFIED
         BNE   BLOCK2B             YES, BRANCH
         CLI   JCTJOBID,C'J'       IS THIS A BATCH JOB?
         BE    BLOCK2B             YES, BRANCH
         CLI   JCTJOBID,C'T'       IS THIS A TSO USER?
         BE    BLOCK2A             YES, BRANCH
         MVC   JCTPNAME,C#STC      SET PROGRAMMER NAME TO 'TECH SUP'
         B     BLOCK2B             GO PRINT BLOCK LETTER
BLOCK2A  MVC   JCTPNAME,C#TSU      SET PROGRAMMER NAME TO 'TSO USER'
BLOCK2B  LA    R0,JCTPNAME         LOAD ADDRESS OF PROGRAMMER NAME
         $PBLOCK BUFFER=(R4),DATA=(R0),SLANT=NO
         MVI   BUFSTART,C' '       CLEAR ENTIRE
         MVC   BUFSTART+1(132),BUFSTART  BUFFER
         LA    R1,1                SET LENGTH TO 1
         STC   R1,BUFSTART         AND SAVE IT IN BUFFER
         LA    R1,2                SET REPEAT COUNT
         BAL   R7,PRINT            GO WRITE BLANK LINES
         SH    R5,H#14             SUBTRACT LINES FOR BLOCK AND BLANKS
BLOCK3   CH    R5,H#16             SEE IF ROOM FOR MORE BLOCK LETTERS
         BL    BLDSEPLN            NO, JUST GO PRINT SINGLE LINES
         LA    R1,1                SET REPEAT COUNT
         BAL   R7,PRINT            GO PRINT ONE MORE BLANK LINE
         SH    R5,H#1              SUBTRACT ONE LINE FOR BLANK LINE
         MVC   PCCWORK(8),BLANKS   CLEAR WORK AREA
         AIF   ('&BLOCK' NE 'BIN').NORMAL1
         CLC   JCTROOMN,HEXZERO    SEE OF ROOM NUMBER SPECIFIED
         BE    BLOCK3A             NO, BRANCH
         MVC   PCCWORK(4),JCTROOMN MOVE ROOM NUMBER TO WORK
         AGO   .NORMAL2
.NORMAL1 ANOP
         MVC   PCCWORK(1),JCTJOBID GET JOB TYPE
         MVC   PCCWORK+1(4),JCTJOBID+4 AND JOB NUMBER
BLOCK3A  CLI   PCCWORK+1,C' '      LEFT
         BNE   BLOCK3B               JUSTIFY
         MVC   PCCWORK+1(4),PCCWORK+2  JOB
         B     BLOCK3A                   NUMBER
BLOCK3B  L     R6,PWKJOE           LOAD ADDRESS WORK-JOE
         USING JOEDSECT,R6         SET ADDRESSABILITY TO JOE
         MVC   PCCWORK+6(1),JOECURCL  GET SYSOUT CLASS
         DROP  R6                  DROP ADDRESSABILITY TO JOE
         MVI   PCCWORK+7,C' '      SET TRAILING BLANK
.NORMAL2 ANOP
BLOCK3A  LA    R0,PCCWORK          LOAD ADDRESS OF JOB NUMBER AND CLASS
         $PBLOCK BUFFER=(R4),DATA=(R0),SLANT=NO
         MVI   BUFSTART,C' '       CLEAR ENTIRE
         MVC   BUFSTART+1(132),BUFSTART  BUFFER
         LA    R1,1                SET LENGTH TO 1
         STC   R1,BUFSTART         AND SAVE IT IN BUFFER
         LA    R1,2                SET REPEAT COUNT
         BAL   R7,PRINT            GO WRITE BLANK LINES
         SH    R5,H#14             SUBTRACT LINES FOR BLOCK AND BLANKS
         SPACE 3
***********************************************************************
*                                                                     *
*        CALL SEPLINE ROUTINE TO BUILD THE SINGLE SEPARATOR LINE      *
*        WHICH WILL BE PRODUCED MULTIPLE TIMES DEPENDING ON THE       *
*        SPECIFIED NUMBER OF LINES ON THE SEPARATOR PAGE FOR THE      *
*        DEVICE.                                                      *
*                                                                     *
***********************************************************************
BLDSEPLN BAL   R9,SEPLINE          GO BUILD SINGLE SEPARATOR LINE
         EJECT
***********************************************************************
*                                                                     *
*        PRODUCE THE SINGLE LINE WHICH WAS JUST CREATED AS MANY       *
*        TIMES AS REQUIRED TO FILL THE REST OF THE PAGE AS DEFINED    *
*        BY JES2 INITIALIZATION PARAMETERS.  THE NUMBER OF LINES      *
*        LEFT TO PRINT IS IN REGISTER R5.                             *
*                                                                     *
***********************************************************************
         LR    R1,R5               SET REMAIN LINE COUNT IN REG 1
         BAL   R7,PRINT            GO WRITE HEADER LINES
         B     CALLPRNT            DONE WITH PAGE, RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*                        P U N C H                                    *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*        PRODUCE THE SETUP HEADER FOR A SNA REMOTE IF REQUIRED.       *
*                                                                     *
***********************************************************************
PUNCH    TM    MDCTFEAT,DCTPSHDR   SEE IF SETUP HDR REQUIRED
         BNO   PUNCH1              NO, BYPASS $SEPPDIR ROUTINE
         $SEPPDIR (R4)             SEND PDIR TO SNA RMT
PUNCH1   MVC   PROUTWRK(4),JCTROOMN SET ROOM NUMBER
         MVC   PROUTWRK+4(4),JCTJOBID+4 AND JOB NUMBER
         EJECT
***********************************************************************
*                                                                     *
*        CONVERT EACH OF THE EIGHT CHARACTERS IN PPROUTWRK TO         *
*        A STRING OF 8 CHARACTERS WHICH WILL PRINT AS A 12-11-X       *
*        PUNCH.  EACH CHARACTER WILL BE PRECEDED BY A NULL            *
*        12-11 PUNCH TO DIVIDE THE CHARACTERS.                        *
*                                                                     *
*        NOTE THAT THAT THE ZONE PORTION OF ALPHA CHARACTERS WILL     *
*        BE LOST LEAVING ONLY THE NUMERIC PORTION ALONG WITH THE      *
*        12-11 ZONE PUNCH.  ALSO NOTE THAT ALL CHARACTERS LESS        *
*        AN "A" WILL PRINT AS A NULL 12-11 PUNCH.                     *
*                                                                     *
***********************************************************************
         LA    R6,80               SET LENGTH TO 80
         STC   R6,BUFSTART         AND SAVE IT IN THE BUFFER
         LA    R6,BUFSTART+1       LOAD START OF PUNCH LINE IN BUFFER
         SLR   R5,R5               ZERO INDEX POINTER
PUNCH2   MVI   0(R6),X'6A'         START THE FIELD WITH 12-11 PNCH
         IC    R0,PROUTWRK(R5)     LOAD NEXT CHARACTER
         STC   R0,1(,R6)           MOVE CHARACTER TO BUFFER
         OI    1(R6),X'30'         MASK LETTERS TO NUMERIC
         CLI   1(R6),X'F0'         SEE IF NOW ZERO
         BE    PUNCH3              YES, GO SET TO X'E0'
         BH    PUNCH4              GT ZERO, GO MASK TO 12-11-X
         MVI   1(R6),X'EA'         LT, SET TO X'EA'
PUNCH3   XI    1(R6),X'E0'         MASK OFF X'E0'
PUNCH4   XI    1(R6),X'60'         MASK RESULTING CHARACTER TO 12-11-X
         MVC   2(7,R6),1(R6)       PROPAGATE CHARACTER 7 MORE TIMES
         MVI   9(R6),X'6A'         END FIELD WITH 12-11 PUNCH
         LA    R6,10(,R6)          INCREMENT TO NEXT OUTPUT AREA
         LA    R5,1(,R5)           INCREMENT TO NEXT INPUT CHARACTER
         CH    R5,H#8              SEE IF END OF INPUT
         BL    PUNCH2              NO, LOOP
***********************************************************************
*                                                                     *
*        PRODUCE PUNCH LACE CARD                                      *
*                                                                     *
***********************************************************************
         LA    R1,1                SET REPEAT COUNT
         BAL   R7,PRINT            GO WRITE PUNCH CARD
***********************************************************************
*                                                                     *
*        PRODUCE BLANK SEPARATOR CARD IF NOT A 3525                   *
*                                                                     *
***********************************************************************
         CLI   PDEVTYPE+3,X'0C'    IS THIS A 3525
         BE    PUNCH6              YES, DO NOT PUNCH A BLANK CARD
         MVC   BUFSTART(2),PUNBLANK MOVE BLANK CARD INTO BUFFER
         LA    R0,2                LOAD LINE LENGTH
         LA    R1,BUFSTART         LOAD ADDRESS OF BLANK CARD
         $PRPUT DATA=(R1),LEN=(R0),COUNT=1,WAIT=YES,CC=M
PUNCH6   B     EXIT                DONE, GET OUT
         EJECT
***********************************************************************
*                                                                     *
*        PRODUCE THE SINGLE LINE FOR THE JOB SEPARATOR ROUTINE        *
*        WHICH WILL BE REPRODUCED MULTIPLE TIMES BASED UPON THE       *
*        NUMBER OF LINES SET FOR THE SEPARATOR ROUTINE.               *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*        CONVERT JOEROUT TO EBCIDIC FOR PRINT SEPERATOR PAGES         *
*        THE ROUTE IS FIRST CHECKED TO SEE IF THERE IS A              *
*        DESTID THAT MATCHES THE ROUTE.  IF A DESTID IS FOUND THEN    *
*        THAT NAME IS MOVED TO THE HEADER LINE. IF MORE THAN ONE      *
*        DESTID IS FOUND FOR A ROUTE THEN THE ROUTE IS CONVERTED      *
*        ACCORDING TO THE FOLLOWING FORMAT                            *
*                                                                     *
*             RNNNN  (REMOTE)                                         *
*             UNNNN  (SPECIAL LOCAL)                                  *
*             'LOCAL' (LOCAL DEVICE)                                  *
*             CCCCCCCC (DESTID)                                       *
*                                                                     *
***********************************************************************
         SPACE 2
SEPLINE  L     R6,PWKJOE           LOAD ADDRESS OF WORK JOE
         USING JOEDSECT,R6         SET ADDRESSABILITY TO JOE
         L     R7,$SSVT            GET ADDRESS OF SSVT
         LM    R14,R15,$SVRDT-SSVT(R7)  LOAD ADDRESS OF FIRST RDT
         USING RDTDSECT,R14        SET ADDRESSABILITY TO RDT
         NI    PRDWORK1,X'00'      TURN OFF DESTID FOUND
SEPLINE1 CR    R14,R15             END OF TABLE?
         BH    SEPLINE4            YES, GET OUT
         ICM   R7,15,RDTROUTE      LOAD ROUTE CODE FROM RDT
         TM    RDTFLAG,RDTFLAGR    IS THIS A REMOTE DESTINATION ENTRY
         BZ    SEPLINE2            NO, BRANCH
         TM    RDTFLAG,RDTFLAGN    IS NODE SPECIFIED IN THE ENTRY
         BO    SEPLINE2            YES, BRANCH
         ICM   R7,B'1100',$OWNNODE MOVE DEFAULT NODE TO ROUTE CODE
SEPLINE2 CL    R7,JOEROUT          SEE IF DESTIT MATCHES THIS JOE
         BNE   SEPLINE3            NO, GO CHECK NEXT RDT ENTRY
         TM    PRDWORK1,X'FF'      HAS A DESTID ALREADY BEEN FOUND?
         BO    SEPLINE5            YES, BRANCH
         OI    PRDWORK1,X'FF'      SET FIRST DESTID FOUND FLAG
         MVC   PROUTWRK,RDTNAME    SAVE DESTID
SEPLINE3 LA    R14,RDTSIZ(R14)     INCREMENT TO NEXT RDT
         B     SEPLINE1            GO CHECK NEXT RDT ENTRY
SEPLINE4 TM    PRDWORK1,X'FF'      IS THERE A DESTID FOR THIS JOE..
         BO    SEPLINE8            YES, GO BUILD SEPARATOR LINE
SEPLINE5 CLC   JOEREMOT,$ZEROS     IS THIS A LOCAL DESTID
         BE    SEPLINE7            YES, GO SET TO LOCAL
         SLR   R15,R15             CLEAR REG FOR ICM
         ICM   R15,3,JOEREMOT      MOVE REMOTE NUMBER TO A REG
         CVD   R15,PROUTWRK        CONVERT REMOTE NUMBER TO PACKED
         MVC   PROUTWRK-1(6),MASK1 SET EDIT PATTERN
         ED    PROUTWRK-1(6),PROUTWRK+5  MAKE REMOTE NUMBER PRINTABLE
         CLC   JOERNODE,$ZEROS     SEE IF UNIT SPECIFICATION
         BE    SEPLINE6            YES, GO SET  'U' LABEL
         MVI   PROUTWRK,C'R'       NO,  REMOTE, 'R' LABEL
         MVC   PROUTWRK+5(3),BLANKS BLANK REST OF FIELD
         B     SEPLINE8            GO BUILD SEPARATOR LINE
         SPACE 1
SEPLINE6 MVI   PROUTWRK,C'U'       SET 'U' LABEL
         MVC   PROUTWRK+5(3),BLANKS BLANK REST OF FIELD
         B     SEPLINE8            GO BUILD SEPARATOR LINE
         SPACE 1
SEPLINE7 MVC   PROUTWRK,C#LOCAL    SET 'LOCAL' LABEL
         DROP  R14                 DROP ADDRESSABILITY TO RDT
         EJECT
***********************************************************************
*                                                                     *
*        BUILD THE OUTPUT SINGLE LINE WHICH WILL BE REPEATED ENOUGH   *
*        TIMES TO FILL THE REST OF THE PAGE AS DEFINED BY THE JES2    *
*        INITIALIZATION PARAMTERS FOR &PRIDCT FOR LOCAL PRINTERS OR   *
*        &TPIDCT FOR REMOTE PRINTERS.                                 *
*                                                                     *
***********************************************************************
SEPLINE8 LA    R7,BUFSTART+1       LOAD ADDRESS OF HEADER LINE
         USING HDRDSECT,R7         SET ADDRESSABILITY TO HEADER LINE
         MVI   BUFSTART,C' '       CLEAR ENTIRE
         MVC   BUFSTART+1(132),BUFSTART  BUFFER
         LA    R6,132              LOAD LENGTH OF PRINT LINE
         STC   R6,BUFSTART         AND SAVE IT
***********************************************************************
*        FRAME CHARACTERS                                             *
***********************************************************************
         MVC   HDRFRAME(2),C#ASTER  SET FRAME CHARACTER
         MVC   HDRFRAMX(1),HDRFRAME SET END FRAME CHARACTER
***********************************************************************
*        SYSOUT CLASS                                                 *
***********************************************************************
         L     R6,PWKJOE           LOAD ADDRESS OF WORK JOE
         USING JOEDSECT,R6         SET ADDRESSABILITY TO JOE
         MVC   HDRCLASS,JOECURCL   SET SYSOUT CLASS
         MVC   HDRCLASX,JOECURCL       TWICE
***********************************************************************
*        SYSOUT JOE NAME                                              *
***********************************************************************
         MVC   HDRJNAME,JOENAME    SET JOE OUTPUT NAME
***********************************************************************
*        SYSOUT JOE ID                                                *
***********************************************************************
         MVC   HDRJID,JOEID        SET JOE OUTPUT ID
***********************************************************************
*        SYSOUT JOE ROUTE AS DETERMINED BY PREVIOUS ROUTINE           *
***********************************************************************
         MVC   HDRJROUT,PROUTWRK   SET JOE ROUTE OR DESTID
         DROP  R6                  DROP ADDRESSABILITY TO JOE
***********************************************************************
*        SEPARATOR FORM TYPE (START/CONT/END)                         *
***********************************************************************
         MVC   HDRFORM,C#START     ASSUME "START" ENTRY
         LTR   R2,R2               TEST ENTRY REASON CODE
         BZ    FORMSET             ZERO, START, BRANCH
         MVC   HDRFORM,C#CONT      ASSUME "CONT " ENTRY
         CH    R2,H#4              TEST ENTRY REASON CODE
         BE    FORMSET             FOUR, CONT, BRANCH
         MVC   HDRFORM,C#END       MUST BE "END  " ENTRY
FORMSET  MVC   HDRFORMX,HDRFORM    SET FORM TYPE TWICE
***********************************************************************
*        SYSOUT JOB NUMBER                                            *
***********************************************************************
         MVC   HDRNUM,JCTJOBID     SET JOB NUMBER
***********************************************************************
*        SYSOUT JOB NAME                                              *
***********************************************************************
         MVC   HDRNAME,JCTJNAME    SET JOB NAME
***********************************************************************
*        SYSOUT SYSTEM ID                                             *
***********************************************************************
         MVC   HDRSKEY,C#SYS       SET THE SYS LABEL
         MVC   HDRSYS,$SID         SET SYSTEM ID
***********************************************************************
*        SYSOUT PROGRAMMER NAME                                       *
***********************************************************************
         MVC   HDRPNAME,JCTPNAME   SET PROGRAMMER NAME
***********************************************************************
*        SYSOUT ROOM NUMBER                                           *
***********************************************************************
         MVC   HDRRKEY,C#ROOM      SET THE ROOM LABEL
         MVC   HDRROOM,JCTROOMN    SET ROOM NUMBER
***********************************************************************
*        SYSOUT TIME (HH.MM.SS XM)                                    *
***********************************************************************
         TIME  DEC                 GET TIME AND DATE
         ST    R0,PROUTWRK         SAVE TIME (HHMMSSTT)
         MVO   PRDWORK1(5),PROUTWRK(4) SHIFT TO ADD SIGN
         OI    PRDWORK1+4,X'0F'    SET SIGN
         MVC   HDRAM,C#AM          SET TO 'AM'
         CP    PRDWORK1(5),P#12MIL TEST TIME
         BL    SEPLINE9            BRANCH IF AM
         MVI   HDRAM,C'P'          CHANGE FROM AM TO PM
         CP    PRDWORK1(5),P#13MIL SEE IF AFTER 1 PM
         BL    SEPLINE9            YES, DO NOT ADJUST FOR PM
         SP    PRDWORK1(5),P#12MIL SUBTRACT 12 HOURS
SEPLINE9 MVC   HDRPTTN,MASK2       SET EDIT MASK
         ED    HDRPTTN,PRDWORK1    EDIT TIME INTO HEADER LINE
***********************************************************************
*        SYSOUT DATE (DD MMM YY)                                      *
***********************************************************************
         ST    R1,PROUTWRK+4       SAVE DATE
         MVC   SAVETBL,YEARTBL     SAVE A COPY OF DAY TABLE FOR UPDATE
         TM    PROUTWRK+5,X'01'    IT THIS AN ODD YEAR
         BO    SEPLINEA            YES, CANNOT BE LEAP YEAR
         TM    PROUTWRK+5,X'12'    MAGIC LEAP YEAR MASK
         BM    SEPLINEA            MIXED, CANNOT BE LEAP YEAR
         MVI   FEB,29              CHANGE FEB TO 29 DAYS
SEPLINEA MVC   HDRDATE+6(3),MASK3  MOVE EDIT PATTERN
         ED    HDRDATE+7(3),PROUTWRK+5    EDIT THE YEAR (YY) TO HDR
         MVC   PROUTWRK(6),$ZEROS  CLEAR ALL DATE EXCEPT JULIAN DAY
         CVB   R1,PROUTWRK         CONVERT TO BINARY DAY
         LA    R6,SAVETBL-4        LOAD ADDRESS OF DATEION TABLE
         SLR   R0,R0               CLEAR FOR IC
SEPLINEB SLR   R1,R0               SUBTRACT DAY/MONTH FROM TOTAL
         LA    R6,4(,R6)           INCREMENT TO NEXT DATE ENTRY
         IC    R0,0(,R6)           LOAD NUMBER OF DAYS IN THAT MONTH
         CLR   R0,R1               SEE IF ONLY PARTIAL MONTH REMAINDING
         BL    SEPLINEB            NO, LOOP
         CVD   R1,PROUTWRK         CONVERT TO DECIMAL DAY
         MVI   HDRDATE-1,C' '      CLEAR 1ST BYTE OF AREA
         UNPK  HDRDATE(2),PROUTWRK+6(2) PLACE DAY (DD)
         OI    HDRDATE+1,X'F0'             INTO PMESSAGE
         MVI   HDRDATE+2,C' '      INSERT DELIMITER
         MVC   HDRDATE+3(3),1(R6)  MOVE EBCDIC MONTH (MMM)
***********************************************************************
*        SYSOUT DEVICE NAME                                           *
***********************************************************************
         MVC   HDRDNAME,DCTDEVN    DEVICE NAME
         DROP  R7                  DROP ADDRESSABILITY TO HEADER LINE
         BR    R9                  RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*                      K O M S T A R                                  *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*        PRODUCE THE PROPER NATIVE MODE COMMANDS FOR THE KODAK        *
*        KOMSTAR UNIT IF REQUIRED FOR THE SYSOUT CLASS BEING          *
*        PROCESSED.                                                   *
*                                                                     *
***********************************************************************
KOMSTAR  L     R6,PWKJOE           LOAD ADDRESS OF WORK JOE
         USING JOEDSECT,R6         SET ADDRESSABILITY TO JOE
         CLI   JOECURCL,C'P'       PROD HOT PME/STARLINK1 CLASS?
         BE    EXIT                YES, BYPASS NATIVE KOMSTAR COMMANDS
         CLI   JOECURCL,C'Q'       PROD WARM PME/STARLINK1 CLASS?
         BE    EXIT                YES, BYPASS NATIVE KOMSTAR COMMANDS
         CLI   JOECURCL,C'R'       PROD REGULAR PME/STARLINK1 CLASS?
         BE    EXIT                YES, BYPASS NATIVE KOMSTAR COMMANDS
         CLI   JOECURCL,C'L'       TEST PME/STARLINK1 CLASS?
         BE    EXIT                YES, BYPASS NATIVE KOMSTAR COMMANDS
         CLI   JOECURCL,C'C'       PROD HOT KOM-80 SYSOUT CLASS?
         BE    KOM80               YES, BYPASS NATIVE KOMSTAR COMMANDS
         CLI   JOECURCL,C'D'       PROD WARM KOM-80 SYSOUT CLASS?
         BE    KOM80               YES, BYPASS NATIVE KOMSTAR COMMANDS
         CLI   JOECURCL,C'E'       PROD REGULAR KOM-80 SYSOUT CLASS?
         BE    KOM80               YES, BYPASS NATIVE KOMSTAR COMMANDS
         CLI   JOECURCL,C'M'       TEST KOM-80 SYSOUT CLASS?
         BE    KOM80               YES, BYPASS NATIVE KOMSTAR COMMANDS
         DROP  R6                  DROP ADDRESSABILITY TO JOE
         CH    R2,H#8              TEST ENTRY REASON CODE
         BE    KOMEND              EIGHT, END, BRANCH
         B     KOMBEG              START OR CONT, BRANCH
         SPACE 3
***********************************************************************
*                                                                     *
*        FORCE FICHE EJECT AT END OF PROCESSING                       *
*                                                                     *
***********************************************************************
KOMEND   MVC   BUFSTART(LKOMRCD4),KOMRCD4 MOVE EJECT SEQUENCE TO BUFFER
         LA    R0,LKOMRCD4         LOAD LINE LENGTH
         LA    R1,BUFSTART         LOAD ADDRESS OF EJECT COMMAND
         $PRPUT DATA=(R1),LEN=(R0),COUNT=1,WAIT=YES,CC=M
         B     EXIT                DONE, GET OUT
         SPACE 3
***********************************************************************
*                                                                     *
*        SET FCB, FICHE FORMAT AND TITLES AT START OF PROCESSING      *
*                                                                     *
***********************************************************************
KOMBEG   MVC   BUFSTART(LKOMRCD1),KOMRCD1 MOVE 1ST SETUP TO BUFFER
***********************************************************************
*        WRITE KOMSTAR SETUP RECORD 1                                 *
***********************************************************************
         LA    R0,LKOMRCD1         LOAD LINE LENGTH
         LA    R1,BUFSTART         LOAD ADDRESS OF SETUP COMMAND
         $PRPUT DATA=(R1),LEN=(R0),COUNT=1,WAIT=YES,CC=M
         MVC   BUFSTART(LKOMRCD2),KOMRCD2 MOVE 2ND SETUP TO BUFFER
         MVC   JNAME,JCTJNAME      MOVE JOBNAME TO BUFFER
         CLC   JCTPNAME,BLANKS     SEE OF PGMR NAME SPECIFIED
         BNE   KOMBEG2             YES, BRANCH
         CLI   JCTJOBID,C'J'       IS THIS A BATCH JOB?
         BE    KOMBEG2             YES, BRANCH
         CLI   JCTJOBID,C'T'       IS THIS A TSO USER?
         BE    KOMBEG1             YES, BRANCH
         MVC   JCTPNAME,C#STC      SET PROGRAMMER NAME TO 'TECH SUP'
         B     KOMBEG2             BRANCH
KOMBEG1  MVC   JCTPNAME,C#TSU      SET PROGRAMMER NAME TO 'TSO USER'
KOMBEG2  MVC   PNAME1,JCTPNAME     MOVE PROGRAMMER NAME PART1 TO BUFFER
         MVC   PNAME2,JCTPNAME+10  MOVE PROGRAMMER NAME PART2 TO BUFFER
         MVC   JOBID,JCTJOBID      SET JOB ID
         MVC   ROOMNBR,JCTROOMN    MOVE ROOM NUMBER TO BUFFER
         TIME  DEC                 GET TIME AND DATE
         ST    R0,PCCWORK          SAVE TIME (HHMMSSTT)
         ST    R1,PROUTWRK+4       SAVE DATE
         MVC   SAVETBL,YEARTBL     SAVE A COPY OF DAE TABLE FOR UPDATE
         TM    PROUTWRK+5,X'01'    IT THIS AN ODD YEAR
         BO    KOMBEG3             YES, CANNOT BE LEAP YEAR
         TM    PROUTWRK+5,X'12'    MAGIC LEAP YEAR MASK
         BM    KOMBEG3             MIXED, CANNOT BE LEAP YEAR
         MVI   FEB,29              CHANGE FEB TO 29 DAYS
KOMBEG3  MVC   DATE+6(3),MASK3     MOVE EDIT PATTERN
         ED    DATE+7(3),PROUTWRK+5    EDIT THE YEAR (YY) TO HDR
         MVC   PROUTWRK(6),$ZEROS  CLEAR ALL DATE EXCEPT JULIAN DAY
         CVB   R1,PROUTWRK         CONVERT TO BINARY DAY
         LA    R6,SAVETBL-4        LOAD ADDRESS OF DATEION TABLE
         SLR   R0,R0               CLEAR FOR IC
KOMBEG4  SLR   R1,R0               SUBTRACT DAY/MONTH FROM TOTAL
         LA    R6,4(,R6)           INCREMENT TO NEXT DATE ENTRY
         IC    R0,0(,R6)           LOAD NUMBER OF DAYS IN THAT MONTH
         CLR   R0,R1               SEE IF ONLY PARTIAL MONTH REMAINDING
         BL    KOMBEG4             NO, LOOP
         CVD   R1,PROUTWRK         CONVERT TO DECIMAL DAY
         MVI   DATE-1,C' '         CLEAR 1ST BYTE OF AREA
         UNPK  DATE(2),PROUTWRK+6(2) PLACE DAY (DD)
         OI    DATE+1,X'F0'             INTO PMESSAGE
         MVI   DATE+2,C' '         INSERT DELIMITER
         MVC   DATE+3(3),1(R6)     MOVE EBCDIC MONTH (MMM)
***********************************************************************
*        WRITE KOMSTAR SETUP RECORD 2                                 *
***********************************************************************
         LA    R0,LKOMRCD2         LOAD LINE LENGTH
         LA    R1,BUFSTART         LOAD ADDRESS OF SETUP COMMAND
         $PRPUT DATA=(R1),LEN=(R0),COUNT=1,WAIT=YES,CC=M
         MVC   BUFSTART(LKOMRCD3),KOMRCD3 MOVE 3ND SETUP TO BUFFER
         MVC   TIME,MASK4          SET EDIT MASK
         ED    TIME-1(9),PCCWORK   EDIT TIME TO BUFFER
***********************************************************************
*        WRITE KOMSTAR SETUP RECORD 3                                 *
***********************************************************************
         LA    R0,LKOMRCD3         LOAD LINE LENGTH
         LA    R1,BUFSTART         LOAD ADDRESS OF SETUP COMMAND
         $PRPUT DATA=(R1),LEN=(R0),COUNT=1,WAIT=YES,CC=M
         B     EXIT                DONE, GET OUT
         SPACE 3
***********************************************************************
*                                                                     *
*                         K O M 8 0                                   *
*                                                                     *
*             SET AN FCB FOR THE KOMSTAR FOR ALL KOM-80               *
*             EMULATION OUTPUT TO SET THE '1' CARD TO                 *
*             DEFINE THE STANDARD MICORFORM SETUP PARAMETERS.         *
*                                                                     *
***********************************************************************
KOM80    CH    R2,H#8              TEST ENTRY REASON CODE
         BE    EXIT                EIGHT, END, EXIT
         MVC   BUFSTART(LKOMRCD5),KOMRCD5 MOVE KOM80 SETUP TO BUFFER
         LA    R0,LKOMRCD5         LOAD LINE LENGTH
         LA    R1,BUFSTART         LOAD ADDRESS OF EJECT COMMAND
         $PRPUT DATA=(R1),LEN=(R0),COUNT=1,WAIT=YES,CC=M
         B     EXIT                DONE, GET OUT
         EJECT
***********************************************************************
*                                                                     *
*                        A R I E S                                    *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*        DETERMINE THE PROPER DATAGRAPHIX "JOB" ID AND SEND THE       *
*        COMMAND TO THE UNIT.  IF JES2 INFORMATION IS REQUIRED        *
*        BY THE "JOB" TO DETERMINE THE HEADINGS, A STANDARD           *
*        HEADING LINE WILL ALSO BE SENT.                              *
*                                                                     *
*        THE FOLLOWING IS AN EXAMPLE OF DATAGRAPHIX DXUTIL CONTROL    *
*        STATEMENTS TO ACTUALLY FORMAT THE DEFAULT "JES2" SEPARATOR   *
*        TITLES ON THE MICROFICHE.                                    *
*                                                                     *
*              DATAGRAPHIX PARMS FOR JES2 SEPARATOR                   *
*SJOB                                                                 *
*                                                                     *
*              TITLE FRAME PARMS - SUBTABLE 17                        *
*                                                                     *
*INIT TFRM YES 64 132 3 1 3 7 2 3 1 2 8 3 2 4 1 2 3 0 NO END          *
*                                                                     *
*              TEMPORARY WORK AREA - SUBTABLE 65                      *
*                                                                     *
*INIT FPAD CLEAR END                                                  *
*INIT FPAD 4 BSEQ 1 END                                               *
*                                                                     *
*              TITLE LINE1 PARMS - SUBTABLE 15                        *
*                                                                     *
*INIT TL1 CLEAR END                                                   *
*INIT TL1 60 OPER 33 'DATE' END                                       *
*INIT TL1 60 SEP 20 08 0 NO HOLD 69 MA ' ROOM ' 01 END                *
*INIT TL1 60 SEP 49 20 0 NO HOLD 69 MA ' ROOM ' 10 END                *
*INIT TL1 60 SEP 93 09 0 NO HOLD 69 MA ' ROOM ' 39 END                *
*INIT TL1 60 FPAD 2 03 0 NO NHLD 00 51 END                            *
*                                                                     *
*              TITLE LINE2 PARMS - SUBTABLE 16                        *
*                                                                     *
*INIT TL2 CLEAR END                                                   *
*INIT TL2 60 OPER 33 'TIME' END                                       *
*INIT TL2 60 SEP 11 08 0 NO HOLD 69 MA ' ROOM ' 10 END                *
*INIT TL2 60 SEP 75 04 0 NO HOLD 69 MA ' ROOM ' 27 END                *
*INIT TL2 60 SEP 81 11 0 NO HOLD 69 MA ' ROOM ' 39 END                *
*                                                                     *
*                                                                     *
*SAVE JES2   'NWB JES2 SEPARATOR' +                                   *
*     STBL  15 16 17 65 END                                           *
*                                                                     *
***********************************************************************
ARIS     CH    R2,H#8              TEST ENTRY REASON CODE
         BE    ARISEND             EIGHT, END, EXIT
         LA    R7,BUFSTART+1       LOAD ADDRESS OF HEADER LINE
         USING HDRDSECT,R7         SET ADDRESSABILITY TO HEADER LINE
         MVC   BUFSTART(LARISR1),ARISR1 MOVE ARIS START JOB TO BUF
         LA    R1,JCTPNAME         POINT TO PROGRAMMER NAME
         LA    R15,20              SET LOOP COUNTER
ARIS1    CLC   0(2,R1),=C'K='      LOOK FOR OUR KEYWORD
         BE    ARIS2               YES, BRANCH
         LA    R1,1(,R1)           INCREMENT TO NEXT CHARACTER
         BCT   R15,ARIS1           LOOP
ARIS2    CH    R15,=H'3'           AT LEAST THREE CHARACTERS LEFT?
         BL    ARIS4               NO, USE DEFAULT NAME
         LA    R14,BUFSTART+14     POINT TO START OF ARIS JOB NAME
         SH    R15,=H'2'           SUBTRACT 2 FROM REMAINING LENGTH
         LA    R1,2(,R1)           INCREMENT PAST 'K='
         CH    R15,=H'6'           IS THERE ROOM FOR FULL NAME
         BNH   ARIS3               NO, USE REMAINING LENGTH
         LA    R15,6               SET SCAN LENGTH TO MAX
ARIS3    CLI   0(R1),C' '          SEE IF END OF NAME
         BE    ARIS4               YES, BRANCH
         CLI   0(R1),C','          SEE IF END OF NAME
         BE    ARIS4               YES, BRANCH
         MVC   0(1,R14),0(R1)      MOVE CHARACTER TO CONTROL RECORD
         LA    R1,1(,R1)           POINT TO NEXT CHAR OF PGMR NAME
         LA    R14,1(,R14)         POINT TO NEXT CHAR OF CONTROL RECORD
         BCT   R15,ARIS3           LOOP
ARIS4    CLI   BUFSTART+14,C' '    WAS A NAME SET
         BNE   ARIS5               YES, BRANCH
         MVC   BUFSTART+14(4),=C'JES2' SET DEFAULT JOB NAME
ARIS5    LA    R0,LARISR1          LOAD LINE LENGTH
         LA    R1,BUFSTART         LOAD ADDRESS OF ARIS CONTROL RECD
         $PRPUT DATA=(R1),LEN=(R0),COUNT=1,WAIT=YES,CC=M
         SPACE 3
***********************************************************************
*                                                                     *
*        SEND TITLING DATA LINE TO THE ARIS                           *
*        THIS WILL BE THE EXACT SAME LINE USED BY THE NORMAL PRINT    *
*        SEPARATOR ROUTINE.  THE DATAGRAPHIX JOB CAN THEN EXTRACT     *
*        WHATEVER INFORMATION THAT IS REQUIRED FOR THE HEADINGS.      *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*        CALL SEPLINE ROUTINE TO BUILD THE SINGLE SEPARATOR LINE      *
*        WHICH WILL BE SENT TO THE ARIS FOR TITLING DATA.             *
***********************************************************************
         BAL   R9,SEPLINE          GO BUILD SINGLE SEPARATOR LINE
***********************************************************************
*        SET THE ARIS CONTROL CHARACTERS, WRITE THE CONTROL RECORD,   *
*        AND GET OUT.                                                 *
***********************************************************************
         MVI   BUFSTART,X'C9'      SET ARIS CHANNEL COMMAND CODE
         MVI   BUFSTART+1,X'15'    SET CONTROL RECORD ID
         LA    R0,133              LOAD LINE LENGTH
         LA    R1,BUFSTART         LOAD ADDRESS OF ARIS CONTROL RECD
         $PRPUT DATA=(R1),LEN=(R0),COUNT=1,WAIT=YES,CC=M
         B     EXIT                DONE, EXIT
         EJECT
***********************************************************************
*                                                                     *
*        FORCE FICHE EJECT AT END OF PROCESSING                       *
*                                                                     *
***********************************************************************
ARISEND MVC    BUFSTART(LARISR2),ARISR2 MOVE EJOB RECORD TO BUFFER
         LA    R0,LARISR2          LOAD LINE LENGTH
         LA    R1,BUFSTART         LOAD ADDRESS OF EJOB RECORD
         $PRPUT DATA=(R1),LEN=(R0),COUNT=1,WAIT=YES,CC=M
         B     EXIT                DONE, GET OUT
         EJECT
***********************************************************************
*                                                                     *
*                         P 6 6 7 0                                   *
*                                                                     *
*             THIS ROUTINE WILL CREATE JOB SEPARATOR PRINT LINES      *
*             TO SUPPORT THE IBM 6670 ATTACHED AS AN RJE.             *
*                                                                     *
***********************************************************************
P6670    TM    MDCTFEAT,DCTPSHDR   SEE IF SETUP HDR REQUIRED
         BNO   P6670A              NO, BYPASS $SEPPDIR ROUTINE
         $SEPPDIR (R4)             SEND PDIR TO SNA RMT
P6670A   CH    R2,H#8              TEST ENTRY REASON CODE
         BE    EXIT                EIGHT, END, EXIT
         LA    R7,BUFSTART+1       LOAD ADDRESS OF HEADER LINE
         USING HDRDSECT,R7         SET ADDRESSABILITY TO HEADER LINE
         MVC   BUFSTART(LR6670#1),R6670#1 MOVE 1ST 6670 HEADER TO BUF
         MVC   H66JOBNM,JCTJNAME   SET JOB NAME
         MVC   H66JOBID,JCTJOBID   SET JOB NUMBER
         MVC   H66PGMR,JCTPNAME    SET PROGRAMMER NAME
         MVC   H66ROOM,JCTROOMN    SET ROOM NUMBER
         LA    R0,LR6670#1         LOAD LINE LENGTH
         LA    R1,BUFSTART         LOAD ADDRESS OF EJECT COMMAND
         $PRPUT DATA=(R1),LEN=(R0),COUNT=1,WAIT=YES,CC=M
         MVC   BUFSTART(2),PAGEJECT MOVE EJECT COMMAND TO BUFFER
         LA    R0,2                LOAD LINE LENGTH
         LA    R1,BUFSTART         LOAD ADDRESS OF EJECT COMMAND
         $PRPUT DATA=(R1),LEN=(R0),COUNT=1,WAIT=YES,CC=M
         B     EXIT                DONE, GET OUT
         DROP  R7                  DROP ADDRESSABILITY TO HEADER LINE
         EJECT
***********************************************************************
*                                                                     *
*                           E X I T                                   *
*                                                                     *
*             RETURN CODE OF 8 TELLS JES2 TO PRODUCE ANY USER         *
*             SEPARATOR THAT HAS BEEN CREATED AND TO SUPPRESS         *
*             THE STANDARD SEPARATOR.                                 *
*                                                                     *
***********************************************************************
EXIT     $FREEBUF (R4)             FREE THE WORK BUFFER
         LA    R15,8               SET RETURN CODE TO 8
         $RETURN RC=(R15)          RETURN TO JES2
         EJECT
***********************************************************************
*                                                                     *
*                           P R I N T                                 *
*                                                                     *
*        WRITE THE OUTPUT LINE DEFINED AT BUFSTART.  REPEAT THE       *
*        LINE BY THE NUMBER OF TIMES INDICATED BY THE VALUE IN        *
*        REGISTER 1 ON ENTRY.  THE LENGTH OF THE PRINT LINE IS        *
*        INDICATED BY THE FIRST BYTE OF BUFSTART.  THE ACTUAL         *
*        DATA STARTS AT BUFSTART+1.                                   *
*                                                                     *
***********************************************************************
PRINT    LTR   R6,R1               SAVE LINE COUNT
         BNPR  R7                  ZERO OR NEGATIVE, GET OUT
PRINTLP  SLR   R0,R0               CLEAR REG 0 FOR IC
         IC    R0,BUFSTART         LOAD LINE LENGTH
         LA    R1,BUFSTART+1       LOAD ADDRESS OF TRUE LINE
         $PRPUT DATA=(R1),LEN=(R0),COUNT=1,WAIT=YES
         BCT   R6,PRINTLP          LOOP UNTIL DONE
         BR    R7                  RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*        CONSTANTS USED BY THIS JES2 EXIT                             *
*                                                                     *
***********************************************************************
YEARTBL  DC    AL1(31),C'JAN',AL1(28),C'FEB'   JULIAN DATE
         DC    AL1(31),C'MAR',AL1(30),C'APR'       TO
         DC    AL1(31),C'MAY',AL1(30),C'JUN'  DAY AND MONTH
         DC    AL1(31),C'JUL',AL1(31),C'AUG'    CONVERSION
         DC    AL1(30),C'SEP',AL1(31),C'OCT'      TABLE
         DC    AL1(30),C'NOV',AL1(99),C'DEC'
SAVETBL  EQU   $REGSAVE,12*4       AREA FOR COPY OF ABOVE TABLE
FEB      EQU   SAVETBL+4           ENTRY FOR FEBRUARY
         SPACE 3
H#1      DC    H'1'                HALFWORD CONSTANT '1'
H#4      DC    H'4'                HALFWORD CONSTANT '4'
H#8      DC    H'8'                HALFWORD CONSTANT '8'
H#14     DC    H'14'               HALFWORD CONSTANT '14
H#15     DC    H'15'               HALFWORD CONSTANT '15
H#16     DC    H'16'               HALFWORD CONSTANT '16
H#31     DC    H'31'               HALFWORD CONSTANT '31'
H#32     DC    H'32'               HALFWORD CONSTANT '32'
C#LOCAL  DC    CL8'LOCAL'          CHARACTER CONSTANT 'LOCAL   '
C#ASTER  DC    CL2'* '             CHARACTER CONSTANT '* '
C#SYS    DC    CL3'SYS'            CHARACTER CONSTANT 'SYS'
C#ROOM   DC    CL4'ROOM'           CHARACTER CONSTANT 'ROOM'
C#AM     DC    CL2'AM'             CHARACTER CONSTANT 'AM'
C#START  DC    CL5'START'          CHARACTER CONSTANT 'START'
C#CONT   DC    CL5'CONT '          CHARACTER CONSTANT 'CONT '
C#END    DC    CL5'END  '          CHARACTER CONSTANT 'END  '
C#STC    DC    CL20'TECH SUP'      CHARACTER CONSTANT 'TECH SUP'
C#TSU    DC    CL20'TSO USER'      CHARACTER CONSTANT 'TSO USER'
P#12MIL  DC    PL5'12000000'       PACKED CONSTANT FOR TIME 12.00.00.00
P#13MIL  DC    PL5'13000000'       PACKED CONSTANT FOR TIME 13.00.00.00
PRINTER6 DC    CL8'PRINTER6'       CHARACTER CONSTANT 'PRINTER6'
PRINTER7 DC    CL8'PRINTER7'       CHARACTER CONSTANT 'PRINTER7'
PRINTER8 DC    CL8'PRINTER8'       CHARACTER CONSTANT 'PRINTER8'
RMT1PR1  DC    CL8'R1.PR1  '       CHARACTER CONSTANT 'R1.PR1  '
BLANKS   DC    CL20' '             STRING OF 20 BLANKS
HEXZERO  DC    8X'00'              STRING OF  8 HEXZEROS
PAGEJECT DC    X'8B40'             PRINTER SKIP TO CHANNEL 1 COMMAND
PUNBLANK DC    X'0140'             PUNCH BLANK CARD INTO POCKET 1
MASK1    DC    X'402120202020'     EDIT MASK
MASK2    DC    X'402021204B20204B2020' EDIT MASK
MASK3    DC    X'402120'           EDIT MASK
MASK4    DC    X'21204B20204B2020' EDIT MASK
KOMRCD1  DS    0H
         DC    X'01'
         DC    X'4163FF'
         DC    CL20'12013335162528141116'   SYSTEM
         DC    CL20'20101020503100415'      FCB PART 1
         DC    CL20'20520062507300835'      FCB PART 2
         DC    CL20'21040114512500959'      FCB PART 3
         DC    CL20'H10001  Y'              SEQUENCE NUMBER
         DC    CL20'G164064B'               GRID
         DC    X'FC10'                      CONTINUE
LKOMRCD1 EQU   *-KOMRCD1
KOMRCD2  DS    0H
         DC    X'01'
         DC    X'4163FF'
         DC    CL20'B108013L  JJJJJJJJ  '   JOBNAME
         DC    CL20'B210053T  PPPPPPPPPP'   PROGRAMMER NAME PART 1
         DC    CL20'B310083T1 PPPPPPPPPP'   PROGRAMMER NAME PART 2
         DC    CL20'B408053B  IIIIIIII  '   JOB ID
         DC    CL20'B504103B1 RRRR      '   ROOM NUMBER
         DC    CL20'B609123T2 DDDDDDDDD '   DATE
         DC    X'FC10'                      CONTINUE
LKOMRCD2 EQU   *-KOMRCD2
JNAME    EQU   BUFSTART+14,8
PNAME1   EQU   BUFSTART+34,10
PNAME2   EQU   BUFSTART+54,10
JOBID    EQU   BUFSTART+74,8
ROOMNBR  EQU   BUFSTART+94,4
DATE     EQU   BUFSTART+114,9
KOMRCD3  DS    0H
         DC    X'01'
         DC    X'4163FF'
         DC    CL20'B708123B2 TTTTTTTT  '   TIME
         DC    CL20'B803163T  S$$$      '   SEQ # SPECIFICATION
         DC    CL20'B9041282  DATE      '   DATE TITLE
         DC    CL20'BA041284  TIME      '   TIME TITLE
         DC    X'1040'                      END
LKOMRCD3 EQU   *-KOMRCD3
TIME     EQU   BUFSTART+14,8
KOMRCD4  DS    0H
         DC    X'01'
         DC    X'4163FF'
         DC    CL20'12013335162528141116'   SYSTEM
         DC    CL20'20101020503100415'      FCB PART 1
         DC    CL20'20520062507300835'      FCB PART 2
         DC    CL20'21040114512500959'      FCB PART 3
         DC    CL20'ASM0013???'             ELIMINATE BLANK FICHE
         DC    X'1040'                      END
LKOMRCD4 EQU   *-KOMRCD4
KOMRCD5  DS    0H
         DC    X'01'
         DC    X'4163FF'
         DC    CL20'12013335162528141116'   SYSTEM
         DC    CL20'20101020503100415'      FCB PART 1
         DC    CL20'20520062507300835'      FCB PART 2
         DC    CL20'21040114512500959'      FCB PART 3
         DC    X'1040'                      END
LKOMRCD5 EQU   *-KOMRCD5
ARISR1   DS    0H
         DC    X'C9'
         DC    X'0D4040'
         DC    CL10'SJOB LOAD '             START JOB COMMAND
         DC    CL6'       '                 ARIS JOB NAME
LARISR1 EQU    *-ARISR1
ARISR2   DS    0H
         DC    X'C9'
         DC    X'0D4040'
         DC    CL10'EJOB'                   END JOB COMMAND
LARISR2 EQU    *-ARISR2
R6670#1  DS    0H
         DC    X'09'
         DC    CL4'JOB '
         DC    CL8' '
         DC    CL2' ('
         DC    CL8' '
         DC    CL2') '
         DC    CL4' '
         DC    C' '
         DC    CL20' '
LR6670#1 EQU   *-R6670#1
         EJECT
         LTORG
         EJECT
         $MODEND
         EJECT
***********************************************************************
*                                                                     *
*        WORK AREA USED BY THIS JES2 EXIT                             *
*                                                                     *
***********************************************************************
HDRDSECT DSECT                     HASP HEADER DSECT
HDR      DS    0CL132
HDRFRAME DS    XL1                 PP1 FRAME CHARACTERS
HDRCLASS DS    XL1                 PP2 SYSOUT CLASS
         DS    X                   PP3 BLANK
HDRFORM  DS    XL5                 PP4-8  FORM TYPE START/CONT/END
         DS    X                   PP9  BLANK
HDRNUM   DS    XL8                 PP10-17 JOB NUMBER
         DS    X                   PP18 BLANK
HDRNAME  DS    XL8                 PP19-26 JOB NAME
         DS    X                   PP27 BLANK
HDRJNAME DS    XL4,X               PP28-31 JOE NAME
         DS    X                   PP32 BLANK
HDRJID   DS    XL4                 PP33-36 JOE ID
         DS    X                   PP37 BLANK
HDRJROUT DS    XL8                 PP38-45 JOE ROUTE
         DS    X                   PP46 BLANK
HDRPNAME DS    XL20                PP47-66 PROGRAMMER NAME
         DS    X                   PP67 BLANK
HDRRKEY  DS    XL4                 PP68-71 'ROOM'
         DS    X                   PP72 BLANK
HDRROOM  DS    XL4                 PP73-76 ROOM NUMBER
HDRPTTN  DS    0XL10
         DS    X                   PP77 BLANK USED AS FILL CHARACTER
         DS    X                   PP78 BLANKED BY TIME EDIT PROCESS
         DS    XL8                 PP79-86 HH.MM.SS
         DS    X                   PP87 BLANK
HDRAM    DS    XL2                 PP88-89 AM/PM
         DS    X                   PP90 BLANK
HDRDATE  DS    XL9                 PP91-99 DD MMM YY
         DS    2X                  PP100-101 BLANK
HDRDNAME DS    XL8                 PP102-109 DEVICE NAME
         DS    2X                  PP110-111 BLANK
HDRSKEY  DS    XL3                 PP112-114 'SYS'
         DS    X                   PP115 BLANK
HDRSYS   DS    XL4                 PP116-119 SYSTEM NAME
         DS    X                   PP120 BLANK
HDRFORMX DS    XL5                 PP121-125 FORM
         DS    2X                  PP126-127 BLANK
HDRCLASX DS    X                   PP128  JOE CLASS
HDRFRAMX DS    XL4                 PP129-132 FRAME CHARACTERS
HDRLEN   EQU   *-HDR               LEN FOR CLEARING HEADER
         ORG   HDR
R6670HDR DS    0H                  DETAIL HEADER LINE FOR 6670
         DS    CL4
H66JOBNM DS    CL8                 JOBNAME
         DS    CL2
H66JOBID DS    CL8                 JOBID
         DS    CL2
H66ROOM  DS    CL4                 ROOM NUMBER
         DS    CL1
H66PGMR  DS    CL20                PROGRAMMER NAME
         END
