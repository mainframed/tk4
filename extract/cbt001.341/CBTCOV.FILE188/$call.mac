         MACRO
&NME     $CALL &ENTRY,&ARGS,&VL,&MF=I,&TYPE=V,&PFIX=
.*
.*
.*
.* LAST CHANGE DATE - JULY 21, 1978
.*                  - WHERE POSSIBLE THE VL FLAG IS NOW SET AT
.*                    ASSEMBLY TIME RATHER THAN EXECUTION TIME.
.*
.* LAST CHANGE DATE - DECEMBER 5, 1977
.*
.* THIS MACRO WAS WRITTEN BY DAVID B. COLE.  ANY QUESTIONS CONCERNING
.* IT MAY BE ADDRESSED TO:
.*       809 WHITNEY AVE.
.*       NEW HAVEN, CT. 06511
.*
         GBLC  &$TESRET(20)
         LCLA  &A1,&A2
         LCLB  &R1RSVD,&R14RSVD,&R14USED,&APTRTYP,&VLDONE
         LCLC  &ARGLIST,&N,&COMMA,&LPFX,&C1,&C2,&ARGPTR
&N       SETC  '&NME'
         $TEST PFIX=&PFIX
&LPFX    SETC  '&$TESRET(1)'
         AIF   ('&MF(1)' NE 'I').MFNOTI
&C1      SETC  '0-0'
         AIF   (N'&ARGS EQ 0).ENTRY
&A1      SETA  0
.LP1     AIF   (&A1 EQ N'&ARGS).END1
&A1      SETA  &A1+1
&C1      SETC  '0'
         AIF   ('&ARGS(&A1)' EQ '').GOTARG1
&C1      SETC  '&ARGS(&A1)'
         AIF   ('&ARGS(&A1)'(1,1) NE '(').GOTARG1
&C1      SETC  '0-0'
.GOTARG1 ANOP
&ARGLIST SETC  '&ARGLIST&COMMA&C1'
&COMMA   SETC  ','
         AGO   .LP1
.END1    AIF   ('&VL' NE 'VL' OR '&C1' EQ '0-0').NOVL1
&ARGLIST SETC  '&ARGLIST.+X''80000000'''
&VLDONE  SETB  (1)
.NOVL1   ANOP
&N       LA    &LPFX.1,=A(&ARGLIST) --> PLIST
&N       SETC  ''
&R1RSVD  SETB  (1)
&A1      SETA  0
.LP2     AIF   (&A1 EQ N'&ARGS).ENTRY
&A1      SETA  &A1+1
         AIF   ('&ARGS(&A1)' EQ '').LP2
         AIF   ('&ARGS(&A1)'(1,1) NE '(').LP2
&C1      SETC  '&ARGS(&A1)'(2,K'&ARGS(&A1)-2)
         $TEST REGS=&C1
         AIF   ('&$TESRET(1)' NE '1').REGOK1
         MNOTE 8,'ERROR - &&ARGS(&A1) IS REGISTER 1'
.REGOK1  ANOP
&A2      SETA  &A1*4-4
         ST    &C1,&A2.(,&LPFX.1) STORE ARGUEMENT ADDRESS
         AGO   .LP2
.MFNOTI  AIF   ('&MF(1)' NE 'E').MFNOTE
&APTRTYP SETB  (1)
&ARGPTR  SETC  '&LPFX.1'
         AIF   ('&MF(2)' EQ '').GOTAPTR
&APTRTYP SETB  (0)
&ARGPTR  SETC  '&MF(2)'
         AIF   ('&MF(2)'(1,1) NE '(').GOTAPTR
&APTRTYP SETB  (1)
&ARGPTR  SETC  '&MF(2)'(2,K'&MF(2)-2)
         $TEST REGS=&ARGPTR
         AIF   ('&$TESRET(1)' NE '0').REGOK3
&N       LR    &LPFX.1,&ARGPTR COPY PLIST PTR
&N       SETC  ''
&R1RSVD  SETB  (1)
&ARGPTR  SETC  '&LPFX.1'
.REGOK3  AIF   ('&$TESRET(1)' NE '14').GOTAPTR
&R14USED SETB  (1)
.GOTAPTR ANOP
&A1      SETA  0
.LP3     AIF   (&A1 EQ N'&ARGS).END3
&A1      SETA  &A1+1
         AIF   ('&ARGS(&A1)' EQ '').LP3
         AIF   ('&ARGS(&A1)'(1,1) EQ '(').ARGREG2
         AIF   (NOT &R14USED).REGOK4
         MNOTE 8,'ERROR &&MF(2) IS REGISTER 14'
&R14USED SETB  (0)
.REGOK4  ANOP
&N       LA    &LPFX.14,&ARGS(&A1) --> ARGUEMENT
&N       SETC  ''
&R14RSVD SETB  (1)
&A2      SETA  &A1*4-4
         AIF   (&APTRTYP).APTRRG1
&C1      SETC  '+&A2'
         AIF   (&A2 NE 0).OFSOK1
&C1      SETC  ''
.OFSOK1  ST    &LPFX.14,&ARGPTR&C1 STORE ARGUEMENT PTR
         AGO   .LP3
.APTRRG1 ST    &LPFX.14,&A2.(,&ARGPTR) STORE ARGUEMENT PTR
         AGO   .LP3
.ARGREG2 ANOP
&C1      SETC  '&ARGS(&A1)'(2,K'&ARGS(&A1)-2)
         $TEST REGS=&C1
         AIF   (NOT &R1RSVD OR '&$TESRET(1)' NE '1').REGOK5
         MNOTE 8,'ERROR - &&ARGS(&A1) IS REGISTER 1'
.REGOK5  AIF   (NOT &R14RSVD OR '&$TESRET(1)' NE '14').REGOK5A
         MNOTE 8,'ERROR - &&ARGS(&A1) IS REGISTER 14'
.REGOK5A  ANOP
&A2      SETA  &A1*4-4
         AIF   (&APTRTYP).APTRRG2
&C2      SETC  '+&A2'
         AIF   (&A2 NE 0).OFSOK2
&C2      SETC  ''
.OFSOK2  ANOP
&N       ST    &C1,&ARGPTR&C2 STORE ARGUEMENT PTR
&N       SETC  ''
         AGO   .LP3
.APTRRG2 ANOP
&N       ST    &C1,&A2.(,&ARGPTR) STORE ARGUEMENT PTR
&N       SETC  ''
         AGO   .LP3
.END3    AIF   (&APTRTYP).APTRRG3
&N       LA    &LPFX.1,&ARGPTR --> ARGUEMENT LIST
&N       SETC  ''
&R1RSVD  SETB  (1)
         AGO   .ENTRY
.APTRRG3 $TEST REGS=&ARGPTR
         AIF   ('&$TESRET(1)' EQ '1').ENTRY
&N       LR    &LPFX.1,&ARGPTR --> ARGUEMENT LIST
&N       SETC  ''
&R1RSVD  SETB  (1)
.ENTRY   AIF   ('&VL' EQ '' OR &VLDONE).NOVL
         AIF   ('&VL' EQ 'VL').VLOK
         MNOTE 4,'WARNING -- &&VL = &VL'
.VLOK    AIF   (N'&ARGS EQ 0).NOVL
&A2      SETA  N'&ARGS*4-4
&N       OI    &A2.(&LPFX.1),B'10000000' SET EOL SIGNEL
&N       SETC  ''
.NOVL    AIF   ('&ENTRY' EQ '&ENTRY(1)').ENOTREG
         $TEST REGS=&ENTRY(1)
         AIF   ('&$TESRET(1)' NE '15').EREGN15
&N       BALR  &LPFX.14,&ENTRY(1) LINK TO SUBROUTINE
         MEXIT
.EREGN15 AIF   (NOT &R1RSVD OR '&$TESRET(1)' NE '1').REGOK6
         MNOTE 8,'ERROR - &&ENTRY IS REGISTER 1'
.REGOK6  AIF   (NOT &R14RSVD OR '&$TESRET(1)' NE '14').REGOK7
         MNOTE 8,'ERROR - &&ENTRY IS REGISTER 14'
.REGOK7  ANOP
&N       LR    &LPFX.15,&ENTRY(1) --> SUBROUTINE
&N       SETC  ''
         AGO   .BALR
.ENOTREG AIF   ('&ENTRY' EQ '').BALR
&N       L     &LPFX.15,=&TYPE.(&ENTRY) --> SUBROUTINE
&N       SETC  ''
.BALR    ANOP
&N       BALR  &LPFX.14,&LPFX.15 LINK TO SUBROUTINE
         MEXIT
.MFNOTE  ANOP
&N       CALL  &ENTRY,&ARGS,&VL,MF=&MF
         MEND
