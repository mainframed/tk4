         MACRO
&N       $SORT &CORE=,&ID=,&EXITS=,&SORT=,&REC=,&MSG=,&SORTEND=,&RECEND*
               =,&SORTLEN=,&RECLEN=
.*
.*
.*
.* LAST CHANGE DATE - FEBRUARY 2, 1977
.*                  - MAILING ADDRESS CHANGE.
.*
.* LAST CHANGE DATE - NOVEMBER 1, 1973
.*
.* THIS MACRO WAS WRITTEN BY DAVID B. COLE.  ANY QUESTIONS CONCERNING
.* IT MAY BE ADDRESSED TO:
.*       809 WHITNEY AVE.
.*       NEW HAVEN, CT. 06511
.*
.*
         GBLA  &$TESERR
         GBLC  &$SORCOR
         LCLA  &LCORE,&CTR
         LCLB  &S,&R
         LCLC  &LID,&LMSG,&IN,&OUT,&TYPEI,&TYPEO,&LSORT,&LREC,&LN,&L,&W*
               ORK,&W1,&W2
         $TEST MEXCL=(&SORTEND,&SORTLEN)
         AIF   (&$TESERR EQ 16).END
         $TEST MEXCL=(&RECEND,&RECLEN)
         AIF   (&$TESERR EQ 16).END
&L       SETC  'L'''
&LID     SETC  'SORT'
         AIF   (K'&ID EQ 0).STDID
&LID     SETC  '&ID.000'(1,4)
.STDID   ANOP
&LMSG    SETC  'AP'
         AIF   (K'&MSG EQ 0).STDMSG
         AIF   (K'&MSG EQ 2).MSGOK
         MNOTE 8,'"MSG=&MSG" IS INVALID.'
         MEXIT
.MSGOK   ANOP
&LMSG    SETC  '&MSG'
.STDMSG  AIF   (K'&CORE EQ 0).STDCORE
         AIF   (K'&CORE EQ 1).NLCORE
         AIF   ('&CORE'(K'&CORE,1) EQ 'K').KLCORE
.NLCORE  $TEST NUM=&CORE
         AIF   (&$TESERR EQ 16).END
&LCORE   SETA  &CORE
         AGO   .SETCONS
.KLCORE  ANOP
&WORK    SETC  '&CORE'(1,K'&CORE-1)
         AGO   .TSTCOR
.STDCORE ANOP
&LCORE   SETA  12000
         AIF   ('&$SORCOR' EQ '').SETCONS
&CTR     SETA  0
.CORELP  ANOP
&CTR     SETA  &CTR+1
         AIF   ('&$SORCOR'(1,&CTR) NE '&$SORCOR').CORELP
         AIF   (&CTR EQ 1).NGCORE
         AIF   ('&$SORCOR'(&CTR,1) EQ 'K').KGCORE
.NGCORE  $TEST NUM=&$SORCOR
         AIF   (&$TESERR EQ 16).END
&LCORE   SETA  &$SORCOR
         AGO   .SETCONS
.KGCORE  ANOP
&WORK    SETC  '&$SORCOR'(1,&CTR-1)
.TSTCOR  $TEST NUM=&WORK
         AIF   (&$TESERR EQ 16).END
&LCORE   SETA  &WORK*1024
.SETCONS ANOP
&IN      SETC  '0'
&TYPEI   SETC  'A'
&OUT     SETC  '0'
&TYPEO   SETC  'A'
         AIF   ('&EXITS(1)' EQ 'IO' OR '&EXITS(1)' EQ 'OI' OR '&EXITS(1*
               )' EQ 'I' AND '&EXITS(2)' EQ 'O').STDEXTS
         AIF   ('&EXITS(1)' EQ '' OR '&EXITS(1)' EQ 'O').TRYO
&TYPEI   SETC  'V'
&IN      SETC  '&LID.IN'
         AIF   ('&EXITS(1)' EQ 'I').TRYO
&IN      SETC  '&EXITS(1)'
.TRYO    AIF   ('&EXITS(1)' NE 'O' AND '&EXITS(2)' EQ '').ENDEXT
&TYPEO   SETC  'V'
&OUT     SETC  '&LID.OUT'
         AIF   ('&EXITS(1)' EQ 'O' OR '&EXITS(2)' EQ 'O').ENDEXT
&OUT     SETC  '&EXITS(2)'
         AGO   .ENDEXT
.STDEXTS ANOP
&OUT     SETC  '&LID.OUT'
&TYPEO   SETC  'V'
&IN      SETC  '&LID.IN'
&TYPEI   SETC  'V'
.ENDEXT  AIF   (K'&SORT GT 0).SORTSTM
         MNOTE 8,'"SORT=" HAS BEEN OMITTED.'
         MEXIT
.SORTSTM ANOP
&LSORT   SETC  '&SORT'
         AIF   ('&LSORT'(1,1) NE '''').SORTADR
&W1      SETC  'SORT'
&W2      SETC  'END'
         AIF   (K'&SORTEND NE 0).ERR
&W2      SETC  'LEN'
         AIF   (K'&SORTLEN NE 0).ERR
&LSORT   SETC  '&LID.SORT'
&S       SETB  (1)
.SORTADR AIF   (K'&REC GT 0).RECSTM
         MNOTE 8,'"REC=" HAS BEEN OMITTED.'
         MEXIT
.RECSTM  ANOP
&LREC    SETC  '&REC'
         AIF   ('&LREC'(1,1) NE '''').RECADR
&W1      SETC  'REC'
&W2      SETC  'LEN'
         AIF   (K'&RECLEN NE 0).ERR
&W2      SETC  'END'
         AIF   (K'&RECEND EQ 0).OK
.ERR     MNOTE 8,'WHEN "&W1=" SPECIFIES A STRING, "&W1&W2=" MUST BE OMI*
               TTED.'
         MEXIT
.OK      ANOP
&LREC    SETC  '&LID.REC'
&R       SETB  (1)
.RECADR  ANOP
&LN      SETC  '&N'
         AIF   (K'&N NE 0).SPECNME
&LN      SETC  '&LID.LIST'
.SPECNME CNOP  2,4 ALIGN TO 1/2 WD BNDRY THAT'S NOT A FULL WD BNDRY
&LN      DC    Y(&LID.END-*-2) SPECIFY PARAMETER LIST LENGTH
         DC    A(&LSORT) ADDRESS OF START OF SORT STATEMENT
         AIF   ('&SORTEND' EQ '').S1
         DC    A(&SORTEND-1) ADDRESS OF END OF SORT STATEMENT
         AGO   .S4
.S1      AIF   ('&SORTLEN' EQ '').S2
         DC    A(&LSORT+&SORTLEN-1) ADDRESS OF END OF SORT STATEMENT
         AGO   .S4
.S2      AIF   (NOT &S).S3
&CTR     SETA  K'&SORT+5
         DC    A(&LSORT+&CTR-1) ADDRESS OF END OF SORT STATEMENT
         AGO   .S4
.S3      DC    A(&LSORT+&L&LSORT-1) ADDRESS OF END OF SORT STATEMENT
.S4      DC    A(&LREC) ADDRESS OF START OF RECORD STATEMENT
         AIF   ('&RECEND' EQ '').R1
         DC    A(&RECEND-1) ADDRESS OF END OF RECORD STATEMENT
         AGO   .R4
.R1      AIF   ('&RECLEN' EQ '').R2
         DC    A(&LREC+&RECLEN-1) ADDRESS OF END OF RECORD STATEMENT
         AGO   .R4
.R2      AIF   (NOT &R).R3
&CTR     SETA  K'&REC+7
         DC    A(&LREC+&CTR-1) ADDRESS OF END OF RECORD STATEMENT
         AGO   .R4
.R3      DC    A(&LREC+&L&LREC-1) ADDRESS OF END OF RECORD STATEMENT
.R4      DC    &TYPEI.(&IN) ADDRESS OF INPUT ROUTINE (IF ANY)
         DC    &TYPEO.(&OUT) ADDRESS OF OUTPUT ROUTINE (IF ANY)
         DC    X'00',AL3(&LCORE) AMMOUNT OF CORE GIVEN TO SORT/MERGE
         AIF   ('&LID' EQ 'SORT').NOID
         DC    C'&LID' DDNAME PREFIX TO BE USED BY SORT/MERGE
.NOID    DC    X'FF00',C'&LMSG' MESSAGE ROUTINE OPTION
&LID.END EQU   * END OF PARAMETER LIST
         AIF   (NOT &S).TSTR
         SPACE 1
         AIF   (K'&SORT GT 10).SRTSPLT
&W1      SETC  ''
         AIF   (K'&SORT EQ 2).SRT1
         AIF   (K'&SORT GT 2).SRT2
         MNOTE 8,'"SORT=&SORT" IS INVALID.'
         MEXIT
.SRT2    ANOP
&W1      SETC  '&SORT'(2,K'&SORT-2)
.SRT1    ANOP
&LID.SORT DC   C' SORT &W1 ' SORT STATEMENT
         AGO   .SREND
.SRTSPLT ANOP
&W1      SETC  '&SORT'(2,2)
&LID.SORT DC   C' SORT &W1' SORT STATEMENT
&CTR     SETA  4
.SRTLP   AIF   (&CTR+8 GE K'&SORT).SRTLST
&W1      SETC  '&SORT'(&CTR,8)
         DC    C'&W1'
&CTR     SETA  &CTR+8
         AGO   .SRTLP
.SRTLST  ANOP
&W1      SETC  '&SORT'(&CTR,K'&SORT-&CTR)
         DC    C'&W1 '
.SREND   SPACE 1
.TSTR    AIF   (NOT &R).END
         AIF   (&S).NOSPCE
         SPACE 1
.NOSPCE  AIF   (K'&REC GT 10).RECSPLT
&W1      SETC  ''
         AIF   (K'&REC EQ 2).REC1
         AIF   (K'&REC GT 2).REC2
         MNOTE 8,'"REC=&REC" IS INVALID.'
         MEXIT
.REC2    ANOP
&W1      SETC  '&REC'(2,K'&REC-2)
.REC1    ANOP
&LID.REC DC    C' RECORD &W1 ' RECORD STATEMENT
         AGO   .RCEND
.RECSPLT ANOP
&LID.REC DC    C' RECORD ' RECORD STATEMENT
&CTR     SETA  2
.RECLP   AIF   (&CTR+8 GE K'&REC).RECLST
&W1      SETC  '&REC'(&CTR,8)
         DC    C'&W1'
&CTR     SETA  &CTR+8
         AGO   .RECLP
.RECLST  ANOP
&W1      SETC  '&REC'(&CTR,K'&REC-&CTR)
         DC    C'&W1 '
         SPACE 1
.END     MEND
