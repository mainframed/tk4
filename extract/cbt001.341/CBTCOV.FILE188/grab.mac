         MACRO ,                   GRAB -- CASE -- BARG
&LAB     GRAB  &WHICH,&LIST,&CHECK=YES,&MULT=1
         COPY  @STACK
         GBLA  &@GRAB              NO. OF CURRENT GRAB.
         LCLA  &I,&MULT1,&N
         LCLB  &ELSE
         LCLC  &SYMB               5-CHAR CRUNCHED SYMBOL.
         LCLC  &CSECT
         LCLC  &G0,&G1
&N       SETA  N'&LIST
         AIF   (&N EQ 0).ERR2
         AIF   (&N EQ 1).ERR3
.OK3     AIF   (T'&MULT NE 'N').ERR4
         @LOG2 &MULT
         AIF   (&@FAIL).ERR4
&MULT1   SETA  &@VALUE             LOG2 OF &MULT.
&G0      SETC  '&@GRAB'
&@GRAB   SETA  &@GRAB+1
&G1      SETC  '&@GRAB'
&@GRAB   SETA  &@GRAB+1
         AIF   (&@GRAB GT 10).DIGIT2
&G0      SETC  '0&G0'
&G1      SETC  '0&G1'
.DIGIT2  AIF   (&@GRAB GT 100).ERR6 MORE THAN 2 DIGITS.
&ELSE    SETB  ('&CHECK' EQ 'YES')
         AIF   (NOT &ELSE AND '&CHECK' NE 'NO').ERR7
.*
         AIF   (NOT &ELSE).LOAD    DON'T NEED TO CALC @MAX.
&CSECT   SETC  '&SYSECT'           SAVE.
@&G0.@SECT DSECT  ,
.MXLUP   ANOP  ,                   LOOP TO DEFINE @MAX.
&I       SETA  &I+1
         AIF   (&I GT &N).GOTMX
         ORG   @&G0.@SECT+&LIST(&I)
         AGO   .MXLUP
.GOTMX   ORG   , .                 TO MAXIMUM IN THIS DSECT.
@&G0.@MAX EQU  *-@&G0.@SECT .        MAXIMUM.
&CSECT   CSECT
*
.LOAD    @LOAD 15,&WHICH,VAR       PUT INDEX IN R15.
         AIF   (&@FAIL).ERR9       CAN NOT LOAD R15.
         AIF   (NOT &ELSE).NOCHK1
         CL    15,@&G0.ELSE .        COMPARE WITH MAX.
         BH    @&G1.ELSE .           'ELSE' IF OVER OR LT 0.
         AIF   (&MULT1 EQ 0).NOCHK1
         LA    0,&MULT-1
         NR    0,15 .              CHECK FOR EVEN DIVISIBILITY.
         BNZ   @&G1.ELSE
.NOCHK1  AIF   (&MULT1 EQ 0).MULT1 MULT=1
         AIF   (&MULT1 EQ 1).MULT2 MULT=2
.*                                 ELSE MULT GT 2.
         SRA   15,&MULT1-1 .            SCALE DOWN.
         AGO   .MULT2              IS NOW MULTIPLIED BY 2.
.MULT1   AR    15,15 .             SCALE UP.
.MULT2   LH    15,@&G0.@TAB(15) .    PICK UP OFFSET.
         B     @&G0.@TAB(15) .       GO.
*
@&G0.@TAB DS 0H
&I       SETA  0
         AIF   (NOT &ELSE).LOOP    SKIP ZEROING OUT.
         DC    (@&G0.@MAX)Y(@&G1.ELSE-@&G0.@TAB)
         ORG   @&G0.@TAB
.LOOP    ANOP  ,                   LOOP THRU ALL ENTRIES IN &LIST.
&I       SETA  &I+1
         AIF   (&I GT &N).DONETAB
         ORG   @&G0.@TAB+&LIST(&I)/&MULT*2
.*       CRUNCH SYMBOL INTO 5 CHARS (1ST 2 & LAST 3).
&SYMB    SETC  '&LIST(&I)'         ASSUME LESS THAN 6 CHARS.
         AIF   (K'&LIST(&I) LE 5).GOTSYMB
&SYMB    SETC  '&LIST(&I)'(1,2).'&LIST(&I)'(K'&LIST(&I)-2,3)
.GOTSYMB ANOP
@&G0&SYMB DC Y(@&G1&SYMB-@&G0.@TAB)
         AGO   .LOOP
.DONETAB AIF   (NOT &ELSE).NOCHK2
*
@&G0.ELSE DC  A(@&G0.@MAX)
.NOCHK2  ANOP
&@MODD(&@LEVEL) SETA &MULT         SAVE FOR 'CASE'.
         @PUSH GRAB,N=&LAB,A=&G0,C=&G1
         MEXIT
.ERR2    @ERROR 7,VALUE-LIST,(OMITTED)
         MEXIT
.ERR3    @ERROR 6,VALUE-LIST,&LIST
         AGO   .OK3
.ERR4    @ERROR 7,MULT,&MULT
         MEXIT
.ERR6    @ERROR 1,GRABS,50
         MEXIT
.ERR7    @ERROR 7,CHECK,&CHECK
         MEXIT
.ERR9    @ERROR 7,LIST-INDEX,&WHICH
         MEND
