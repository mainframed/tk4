         MACRO
&LAB     QUEUE &OPT,&ELEM,&HEAD=,&OFFSET=0
.*
.*       QUEUE (ADD×REMOVE×START),ELEMENT,HEAD=
.*
.* GENERAL PURPOSE DOUBLY LINKED QUEUE MANIPULATION MACRO
.* THE HEAD AND ELEMENT START WITH TWO FULLWORD POINTERS
.*    THE FIRST IS THE 'FORWARD' POINTER
.*    THE SECOND IS THE 'BACKWARD' POINTER
.* THE QUEUE IS EMPTY WHEN THE FORWARD AND BACKWARD POINTERS
.*   OF THE HEAD POINT BACK TO THE HEAD. THE 'START' OPTION
.*   OF THE MACRO INITIALIZES A HEAD.
.* PICTORIALLY, THE 'ADD' FUNCTION PERFORMS THE FOLLOWING
.*   MANIPULATION:
.*       BEFORE                   AFTER
.*
.*    HEAD       XXX      ×  HEAD      NEW      XXX
.*  <- F      /-<-F       ×   F    /-<- F    /-<- F
.*     B ->--/    B ->    ×   B->-/     B->-/     B->
.*
.* THE 'REMOVE' FUNCTION REVERSES THE DEFINITION OF 'BEFORE'
.*   AND 'AFTER'.
.*
.* ELEMENT AND HEAD MAY BE RX OR (REG) EXPRESSIONS.
.* REGISTERS 14 AND 15 MAY BE CHANGED BY THIS MACRO
.* THE USER IS ASSUMED TO HAVE THE APPROPRIATE ENQ OR LOCKS
.*   TO MANIPULATE THE QUEUE.
.*
.* THE QUEUE IS A CIRCULAR STRUCTURE, SO YOU CAN USE THIS
.*   MACRO FOR BOTH FIFO AND LIFO QUEUES. THE LAST ELEMENT
.*   ADDED IS CHAINED OFF THE BACKWARD POINTER OF THE HEAD,
.*   THE FIRST ELEMENT IS CHAINED OFF THE FORWARD POINTER OF
.*   THE HEAD, SO YOU DECIDE IF YOU ARE GOING TO DEQUEUE FIFO
.*   OR LIFO BY THE WAY YOU USE THE HEAD.
.*
.*   VERSION: JUNE 8, 1978
.*   AUTHOR:  HOWARD GILBERT
.*            YALE COMPUTER CENTER
.*            175 WHITNEY AVE.
.*            NEW HAVEN, CT. 06520
         LCLA  &I
         LCLC  &EREG,&HREG
&EREG    SETC  '14'
&HREG    SETC  '15'
         AIF   ('&LAB' EQ '').NOLAB
&LAB     DS    0H
.NOLAB   AIF   ('&HEAD' EQ '' OR '&OPT' EQ 'REMOVE').NHEAD
         AIF   ('&HEAD'(1,1) NE '(').HLOAD
&I       SETA  K'&HEAD-2
&HREG    SETC  '&HEAD'(2,&I)
         AGO   .S2
.NHEAD   AIF   ('&OPT' EQ 'REMOVE').S2
         MNOTE 12,'HEAD NOT GIVEN'
         MEXIT
.HLOAD   LA    15,&HEAD
.S2      AIF   ('&ELEM' EQ '').NELEM
         AIF   ('&ELEM'(1,1) NE '(').ELOAD
&I       SETA  K'&ELEM-2
&EREG    SETC  '&ELEM'(2,&I)
         AGO   .S3
.NELEM   AIF   ('&OPT' EQ 'START').S3
         MNOTE 12,'QUEUE ELEMENT NOT GIVEN'
         MEXIT
.ELOAD   LA    14,&ELEM
.S3      AIF   ('&OPT' NE 'START').NST
         ST    &HREG,&OFFSET.(&HREG)   HEAD.FORE =ADDR(HEAD)
         ST    &HREG,&OFFSET+4(&HREG)  HEAD.BACK =ADDR(HEAD)
         MEXIT
.NST     AIF   ('&OPT' NE 'ADD').NAD
         MVC   &OFFSET+4(4,&EREG),&OFFSET+4(&HREG) ELEM.BACK=HEAD.BACK
         ST    &EREG,&OFFSET+4(&HREG)  HEAD.BACK=ADDR(ELEM)
         ST    &HREG,&OFFSET.(&EREG)    ELEM.FORE=ADDR(HEAD)
         L     &HREG,&OFFSET+4(&EREG)  ELEM.BACK->FORE=
         ST    &EREG,&OFFSET.(&HREG)               ADDR(ELEM)
         AIF   ('&HREG' EQ '15').NHR
         L     &HREG,&OFFSET.(&EREG) RESTORE HREG
.NHR     ANOP
         MEXIT
.NAD     AIF   ('&OPT' NE 'REMOVE').NRM
         L     &HREG,&OFFSET.(&EREG)    ELEM.FORE->BACK=
         MVC   &OFFSET+4(4,&HREG),&OFFSET+4(&EREG) ELEM.BACK
         L     &HREG,&OFFSET+4(&EREG)  ELEM.BACK->FORE=
         MVC   &OFFSET.(4,&HREG),&OFFSET.(&EREG) ELEM.FORE
         MEXIT
.NRM     MNOTE 12,'INVALID QUEUE OPTION'
         MEND
