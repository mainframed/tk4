         MACRO
&LBL      CTGX    &ENTRY=,&CAT=,&WA=,&FLDS=,&MF=,&ID=,&ACBCI=
.********************************************************
.*                                                      *
.*         C T G X   - Catalog Extract Macro
.*
.*       The CTGX macro builds a CTGPL and appropriate
.*       CTGFLs to extract catalog information associated
.*       with VSAM datasets. The macro uses the IEZCTGPL
.*       mapping macro but suppresses the printing of the
.*       generated DSECT. To address the CTGFLs built
.*       by the CTGX macro, issue the IEZCTGFL mapping macro
.*       and an ID to be used as a suffix on the CTGFL label,
.*       see ID= below.
.*WARNING:  if fields are requested which are invalid
.*         for the particular catalogue record in quesion,
.*         the SVC may pass a zero return code with
.*         invalid info in the work area.
.*
.*
.*  [label]    CTGX    ENTRY=entryname/CI address
.*                     CAT=catalog name/ACB address
.*                     WA=workarea address
.*                           ×          field name         ×
.*                      FLDS=×                             ×
.*                           ×  (a sublist of fld names)   ×
.*                        ×   L        ×
.*                     MF=×   E        ×
.*                        × (E,[addr]) ×
.*                     ID=suffix
.*                           × NO ×
.*                     acbci=×    ×
.*                           ×YES ×
.*
.*  All operands are optional except that FLDS= must be
.*  specified when mf ^=E and must not
.*   be specified when MF=E.
.*
.*  entry address - an A type address or register pointing to
.*                  the name of the catalog entry about which
.*                  information is being requested.
.*                  If acbci=yes entry must point to a valid CI.
.*  Catalog Address - An A-TYPE address or register pointing to
.*                  the name of the VSAM catalog which contains
.*                  the entry.
.*                  If ACBCI=yes CAT must point to a valib ACB.
.*  workarea address - an A type address or register pointing to
.*                  the area in which the information is to be
.*                  returned.
.*  field names   - the field names of catalog fields  to
.*                  be extracted. These are described in the
.*                  OS/VS2 MVS Catalog Management Logic manual.
.*                  The dictionary provided in the manual also
.*                  indicates the length of each field which is
.*                  useful indetermining the required length
.*                  of the workarea.
.*  macro format  - when E is used with no addr, it is assumed
.*                  that register 1 points to a valid CTGPL.
.*  suffix        - is a one to four character suffix to be used
.*                  in generating CTGFL labels.This is useful if
.*                  you want to use a IEZCTGFL generated DSECT.
.*                  The label generated for a CTGFL is a
.*                  character string
.*                  composed of the first, second, fifth, and
.*                  sixth chars of the associated catalog fld
.*                  name concatenated to the specified suffix or
.*                  &sysndx if ID is omitted.The 1,2,5,6 short
.*                  form of the fld name is unique and is used
.*                  by catalog management routines
.*                  (notably the field name dictionary contained
.*                  in module IGG0CLAY.)
.*
.*  acbci           - may be yes or no. default value is no.
.*                    if yes entry points toa control intrval
.*                    and cat points to a ctlg ACB. Otherwise
.*                    the names are used. The ACB and CI are
.*                    returned to the user when a request for
.*                    association pointers is made (NAMEDS).
.*                    (This function of the CTGX macro is
.*                    identical to the SHOWCAT macro.)
.*
.*
.**************************************************************
         LCLC  &R,&WADD,&CADD,&EADD,&SVCLBL,&PREF,&SUFF,&ACIWK
         LCLB  &RANY,&ALL3NUL,&ALL4NUL
         GBLB  &CTGPLD
         LCLA  &A
&ACIWK   SETC  '&ACBCI'
         AIF   ('&ACIWK' NE '').ISITE
&ACIWK   SETC  'NO'
.ISITE   ANOP
         AIF   ('&MF(1)' EQ 'E').MFE
         AIF   (N'&FLDS LT 1).MNFLDS
         AIF   ('&MF(1)' EQ 'L').GENBLKS
&LBL     CNOP  0,4
&SVCLBL  SETC  'SV26&SYSNDX'
         BAL   1,&SVCLBL
.GENBLKS ANOP
&EADD    SETC  '&ENTRY'
&CADD    SETC  '&CAT'
&WADD    SETC  '&WA'
         AIF   ('&EADD' EQ '').ENUL
         AIF   ('&ENTRY(1)' NE '&ENTRY').ENUL
         AGO   .ENOTNUL
.ENUL    ANOP
&EADD    SETC  '0'
.ENOTNUL ANOP
         AIF   ('&WADD' EQ '').WNUL
         AIF   ('&WA(1)' NE '&WA').WNUL
         AGO   .WNOTNUL
.WNUL    ANOP
&WADD    SETC  '0'
.WNOTNUL ANOP
         AIF   ('&CAT' EQ '').CNUL
         AIF   ('&CAT(1)' NE '&CAT').CNUL
         AGO   .CNOTNUL
.CNUL    ANOP
&CADD    SETC  '0'
.CNOTNUL ANOP
         AIF   ('&MF(1)' NE 'L').SKIPLBL
&LBL     DS    0F
.SKIPLBL ANOP
         AIF   ('&ACIWK' EQ 'NO').NAME
         DC    AL1(0)
         AGO   .PLREST
.NAME    ANOP
         DC    AL1(CTGNAME+CTGCNAME)
.PLREST  ANOP
         DC    AL1(CTGGTALL)
         DC    AL1(CTGCMS+CTGAM0)
         DC    AL1(0)
         DC    A(&EADD)
         DC    A(&CADD)
         DC    A(&WADD)
&A       SETA  N'&FLDS
         DC    AL1(CTGLTCAT),AL2(0),AL1(&A)
         DC    2A(0)
&A       SETA  1
         AIF   ('&ID' EQ '').NOID
&SUFF    SETC  '&ID'
         AGO   .GENPTR
.NOID    ANOP
&SUFF    SETC  '&SYSNDX'
.GENPTR  ANOP
&PREF    SETC  '&FLDS(&A)'(1,2).'&FLDS(&A)'(5,2)
         DC    A(&PREF&SUFF)
&A       SETA  &A+1
         AIF   (&A LE N'&FLDS).GENPTR
&A       SETA  1
.GENFL   ANOP
&PREF    SETC  '&FLDS(&A)'(1,2).'&FLDS(&A)'(5,2)
&PREF&SUFF DC  X'01',AL3(0),A(0,DICT&SYSNDX+(&A-1)*8,0,0,0)
&A       SETA  &A+1
         AIF   (&A LE N'&FLDS).GENFL
DICT&SYSNDX EQU *
&A       SETA  1
.GENDICT ANOP
         DC    CL8'&FLDS(&A)'
&A       SETA  &A+1
         AIF   (&A LE N'&FLDS).GENDICT
         AIF   (&CTGPLD).NODSECT
*        ISSUE THE IEZCTGPL MAPPING MACRO BUT DON'T PRINT IT
         PUSH  PRINT
         PRINT NOGEN
         IEZCTGPL
&CTGPLD  SETB  1
&SYSECT  CSECT
         POP   PRINT
.NODSECT ANOP
          AIF   ('&MF(1)' EQ 'L').END
&RANY    SETB  ('&ENTRY(1)' NE '&ENTRY')
&RANY    SETB  (('&CAT(1)' NE '&CAT') OR &RANY)
&RANY    SETB  (('&WA(1)' NE '&WA') OR &RANY)
         AIF   (NOT &RANY).ISSVC
         AGO   .SKIPLBE
         MEXIT
.MFE     ANOP
&ALL3NUL  SETB  (('&ENTRY' EQ '') AND ('&CAT' EQ '') AND ('&WA' EQ ''))
&ALL4NUL  SETB  (('&MF(2)' EQ '') AND &ALL3NUL)
&ALL3NUL  SETB  (&ALL4NUL AND ('&ACBCI' EQ ''))
         AIF   (NOT &ALL3NUL).PROCSOM
&SVCLBL  SETC  '&LBL'
         AGO   .ISSVC
.PROCSOM ANOP
         AIF   ('&LBL' EQ '').SKIPLBE
&LBL     DS    0H
.SKIPLBE ANOP
         AIF   ('&MF(2)' EQ  '').USE1
         AIF   ('&MF(2)'(1,1) EQ '(').USERAD
         LA    1,&MF(2)
         AGO   .USE1
.USERAD  ANOP
&R       SETC  '&MF(2)'(2,K'&MF(2)-2)
         LR    1,&R
.USE1    ANOP
         AIF   ('&MF(1)' NE '').NOBALBL
&SVCLBL  DS    0H
&SVCLBL  SETC  ''
.NOBALBL ANOP
         AIF   (&ALL3NUL).ISSVC
         AIF   ('&ENTRY' EQ '').CAT
         AIF   ('&ENTRY(1)' EQ '&ENTRY').NOTRE
         ST    &ENTRY(1),CTGENT-CTGPL(1)
         AGO  .CAT
.NOTRE   ANOP
         AIF   ('&MF(1)' EQ '').CAT
         LA    0,&ENTRY
         ST    0,CTGENT-CTGPL(1)
.CAT     ANOP
         AIF   ('&CAT' EQ '').WA
         AIF   ('&CAT(1)' EQ '&CAT').NOTRC
         ST    &CAT(1),CTGCAT-CTGPL(1)
         AGO   .WA
.NOTRC   ANOP
         AIF   ('&MF(1)' EQ '').WA
         LA    0,&CAT
         ST    0,CTGCAT-CTGPL(1)
.WA      ANOP
         AIF   ('&WA' EQ '').FLAG1
         AIF   ('&WA(1)' EQ '&WA').NOTRW
         ST    &WA(1),CTGWKA-CTGPL(1)
         AGO   .FLAG1
.NOTRW   ANOP
         AIF   ('&MF(1)' EQ '').FLAG1
         LA    0,&WA
         ST    0,CTGWKA-CTGPL(1)
.FLAG1   ANOP
         AIF   ('&ACBCI' EQ '').ISSVC
         AIF   ('&MF(1)' EQ '').ISSVC
         AIF   ('&ACBCI' EQ 'NO').ACIOFF
         OI    CTGOPTN1-CTGPL(1),(CTGNAME+CTGCNAME)
         AGO   .ISSVC
.ACIOFF  ANOP
         NI    CTGOPTN1-CTGPL(1),X'FF'-(CTGNAME+CTGCNAME)
.ISSVC   ANOP
&SVCLBL  SVC   26
.END     ANOP
         MEXIT
.MNFLDS  MNOTE 4,'FLDS= PARAMETER REQUIRED WHEN MF=E NOT SPECIFIED'
         MEND
