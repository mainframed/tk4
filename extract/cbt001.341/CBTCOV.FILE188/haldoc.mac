*****************************************************************
*                                                               *
* MODULE NAME = HALDOC                                          *
* DESCRIPTIVE NAME = HAL MACRO DOCUMENTATION                    *
*                                                               *
* COPYRIGHT = NONE                                              *
*                                                               *
* STATUS = RELEASE 1 LEVEL 0                                    *
*                                                               *
* NOTES =                                                       *
*                                                               *
*     SINCE THE HAL MACROS ARE INTENDED TO BE COPY'ED           *
*     INTO THE FRONT OF AN ASSEMBLY, THEIR DOCUMENTATION        *
*     IS COLLECTED IN THIS SEPARATE MODULE SO AS NOT            *
*     TO BECOME A BURDEN TO THE ASSEMBLY AND TRANSPORTATION     *
*     OF THE MACRO SYSTEM.                                      *
*                                                               *
*                                                               *
* WE ASSUME THE DEFINITION OF                                   *
*   <LITERAL>                                                   *
*   <SYMBOL>                                                    *
*   <SELF DEFINING TERM>                                        *
*   <MACHINE INSTRUCTION>                                       *
*                                                               *
* WE DEFINE                                                     *
*                                                               *
* <OPERAND>             ::= <LITERAL>×<SYMBOL>×                 *
*                           <SELF DEFINING TERM>                *
*                                                               *
* <RELATION>            ::= EQ×NE×LT×GT×LE×GE×                  *
*                           ON×OFF×MIX×                         *
*                           NEQ×NLT×NGT×NLE×NGE×                *
*                           NON×NOFF×NMIX×                      *
*                           BY                                  *
*                                                               *
* <IMPLICIT TEST>       ::= (<SYMBOL>,<RELATION>,<OPERAND>)     *
*                                                               *
* <EXPLICIT TEST>       ::= (<OPERAND>,<RELATION>,<OPERAND>,    *
*                           <MACHINE INSTRUCTION>)              *
*                                                               *
* <TEST>                ::= <IMPLICIT TEST>×<EXPLICIT TEST>     *
*                                                               *
* <CONJ>                ::= AND×OR                              *
*                                                               *
* <LOGICAL EXPRESSION>  ::= <TEST> ×                            *
*                           <LOGICAL EXPRESSION>,<CONJ>,<TEST>  *
*                                                               *
*****************************************************************
*                                                               *
* MACRO NAME = BLOCK                                            *
*                                                               *
* DESCRIPTIVE NAME = BEGINS A BLOCK OF STATEMENTS               *
*                                                               *
* INPUT =                                                       *
*                                                               *
*    LABEL IS OPTIONAL UNLESS THIS BLOCK CONTAINS NESTED        *
*        BLOCK, IF, OR DO STRUCTURES. IF PROVIDED, THE          *
*        LABEL IS GIVEN TO THE FIRST GENERATED STATEMENT        *
*        IN THE BLOCK.                                          *
*                                                               *
*    POSITONAL PARAMETERS = NONE                                *
*                                                               *
*    KEYWORD PARAMETERS =                                       *
*        EPILOG      DEFAULT IS 'NO' IF 'EPILOG=YES' THEN       *
*                    AN EPILOG MACRO FOR THE BLOCK MUST         *
*                    PRECEED THE BEND MACRO WHICH ENDS IT       *
*                    A LEAVE FOR THE BLOCK WILL TRANSFER        *
*                    CONTROL TO THE EPILOG, AND NO LEAVE        *
*                    IN THE BLOCK CAN SPECIFY THE NAME OF       *
*                    AN EXTERNAL BLOCK                          *
*                                                               *
*****************************************************************
*                                                               *
* MACRO NAME = IF                                               *
*                                                               *
* DESCRIPTIVE NAME = CONDITIONAL EXECUTION BLOCK                *
*                                                               *
* INPUT =                                                       *
*                                                               *
*    LABEL IS OPTIONAL UNLESS THIS BLOCK CONTAINS NESTED        *
*        BLOCK, IF, OR DO STRUCTURES. IF PROVIDED, THE          *
*        LABEL IS GIVEN TO THE FIRST GENERATED STATEMENT        *
*        IN THE BLOCK.                                          *
*                                                               *
*                                                               *
*    POSITIONAL PARAMETERS =                                    *
*            <LOGICAL EXPRESSION>    REQUIRED                   *
*            THEN                    LAST POSITIONAL PARAMETER  *
*                                    MAY BE 'THEN' TO MAKE IT   *
*                                    LOOK NICE.                 *
*    KEYWORD PARAMETERS = NONE                                  *
*                                                               *
* NOTES =                                                       *
*    THE LOGICAL EXPRESSION IS EVALUATED ONE <TEST> AT          *
*    A TIME. IF THE CURRENT TEST EVALUATES <TRUE> AND           *
*    THE NEXT CONJUCTION IS 'OR' OR THIS IS THE LAST            *
*    <TEST> IN THE EXPRESSION, THEN THE ENTIRE                  *
*    EXPRESSION IS REGARDED AS <TRUE>                           *
*    AND CONTROL IS PASSED                                      *
*    TO THE FIRST INPUT STATEMENT FOLLOWING THIS MACRO.         *
*    IF THE TEST EVALUATES <FALSE> AND THE NEXT                 *
*    CONJUNCTION IS 'AND' OR THIS IS THE LAST <TEST>            *
*    IN THE EXPRESSION, THEN THE ENTIRE                         *
*    EXPRESSION IS REGARDED AS <FALSE>                          *
*    AND CONTROL IS PASSED                                      *
*    STATEMENT FOLLOWING THE 'ELSE' MACRO FOR THIS              *
*    BLOCK, OR IF THERE IS NO 'ELSE', TO THE STATEMENT          *
*    FOLLOWING THE 'BEND' WHICH TERMINATES THE BLOCK.           *
*                                                               *
*****************************************************************
*                                                               *
* MACRO NAME = DO                                               *
*                                                               *
* DESCRIPTIVE NAME = CONDITIONAL LOOP                           *
*                                                               *
* INPUT =                                                       *
*                                                               *
*    POSITIONAL PARAMETERS =                                    *
*        UNTIL×WHILE×INFINITE                                   *
*        <LOGICAL EXPRESSION>                                   *
*                                                               *
*    KEYWORD PARAMETERS = NONE                                  *
*                                                               *
* NOTES =                                                       *
*    IF 'INFINITE' IS SPECIFIED, THE LOOP IS UNCONDITIONAL      *
*    AND WILL END ONLY IF AN ASYNCHRONOUS EVENT OR A LEAVE      *
*    STATEMENT TRANSFERS CONTROL OUT OF IT.                     *
*    OTHEWISE, THE LOGICAL EXPRESSION IS EVALUATED FROM         *
*    LEFT TO RIGHT ACCORDING TO THE RULES DESCRIBED FOR         *
*    THE 'IF' STATEMENT GIVEN ABOVE. FOR A 'DO WHILE',          *
*    AN EVALUATION OF <TRUE> PERMITS THE LOOP TO BE             *
*    EXECUTED AT LEAST ONE MORE TIME, WHILE AN                  *
*    EVALUATION OF <FALSE> EXITS THE LOOP. FOR A                *
*    'DO UNTIL' THE OPPOSITE HOLDS. A 'DO UNTIL'                *
*    ALWAYS EXECUTES THE LOOP AT LEAST ONCE BEFORE              *
*    TESTING THE EXIT CONDITIONS.                               *
*                                                               *
*****************************************************************
*                                                               *
* MACRO NAME = BEND                                             *
*                                                               *
* DESCRIPTIVE NAME = BLOCK END                                  *
*                                                               *
* INPUT =                                                       *
*                                                               *
*    NO LABEL IS PERMITTED                                      *
*                                                               *
*    POSITIONAL PARAMETERS =                                    *
*        BLOCK NAME          MAY BE OMITTED WHEN ENDING AN      *
*                            UNLABELLED BLOCK                   *
*                                                               *
*        KEYWORD PARAMETERS = NONE                              *
*                                                               *
* NOTES =                                                       *
*    THIS TERMINATES THE CURRENT DEEPEST NESTED BLOCK.          *
*    THE LABEL MUST MATCH EXACTLY (OR BE OMITTED IF AND         *
*    ONLY IF THE BLOCK IS UNLABELLED. IF THE CURRENT            *
*    BLOCK IS A 'BLOCK' WITH AN EPILOG, THEN THE BEND           *
*    GENERATES NO RESULTING STATEMENTS. OTHERWISE,              *
*    BEND ALWAYS GENERATES A LABEL TO WHICH THE 'LEAVE'         *
*    MACRO CAN BRANCH. IF THE CURRENT BLOCK IS AN 'IF'          *
*    AND NO 'THEN' HAS BEEN ENCOUNTERED, A DUMMY 'ELSE'         *
*    LABEL IS ALSO GENERATED. IF THE CURRENT BLOCK IS           *
*    A DO, A BRANCH INSTRUCTION IS GENERATED BACK TO            *
*    THE TESTS AT THE BEGINNING OF THE BLOCK.                   *
*                                                               *
*****************************************************************
*                                                               *
* MACRO NAME = ELSE                                             *
*                                                               *
* DESCRIPTIVE NAME = BEGINS ELSE CLAUSE OF IF BLOCK             *
*                                                               *
* INPUT =                                                       *
*                                                               *
*    A LABEL IS NOT PERMITTED                                   *
*                                                               *
*    POSITONAL PARAMETERS = NONE                                *
*                                                               *
*    KEYWORD PARAMETERS = NONE                                  *
*                                                               *
* NOTES =                                                       *
*    GENERATES A BRANCH TO THE 'BEND' MACRO (WHICH              *
*    TERMINATES THE <TRUE> PART OF THE IF BLOCK,                *
*    THEN GENERATES THE 'ELSE' LABEL TO WHICH                   *
*    'IF' TRANSFERS CONTROL WHEN THE EXPRESSION                 *
*    EVALUATES FALSE.                                           *
*                                                               *
*****************************************************************
*                                                               *
* MACRO NAME = EPILOG                                           *
*                                                               *
* DESCRIPTIVE NAME = 'BLOCK' EPILOG                             *
*                                                               *
* INPUT =                                                       *
*                                                               *
*    NO LABEL IS PERMITTED                                      *
*                                                               *
*    POSITIONAL PARAMETER =                                     *
*        BLOCK NAME    REQUIRED IF AND ONLY IF THE BLOCK IS     *
*                      LABELLED                                 *
*                                                               *
*    KEYWORD PARAMETERS = NONE                                  *
*                                                               *
* NOTES =                                                       *
*    GENERATES A LABEL TO WHICH THE 'LEAVE' STATEMENT           *
*    WILL TRANSFER CONTROL IF THE CURRENT BLOCK IS LEFT.        *
*    PERMITS CLEANUP OF BLOCK ENVIRONMENT PRIOR TO EXIT.        *
*                                                               *
*****************************************************************
*                                                               *
* MACRO NAME = LEAVE                                            *
*                                                               *
* DESCRIPTIVE NAME = LEAVE THE CURRENT BLOCK                    *
*                                                               *
* INPUT =                                                       *
*    LABEL IS OPTIONAL. IT SIMPLY LABELS THE INSTRUCTION.       *
*                                                               *
*    POSITIONAL PARAMETER =                                     *
*        BLOCK NAME         OF BLOCK TO BE LEFT.                *
*                                                               *
*    KEYWORD PARAMETERS = NONE                                  *
*                                                               *
* NOTES =                                                       *
*    THE LEAVE MACRO TRANSFERS CONTROL TO THE 'BEND'            *
*    OF ANY BLOCK EXCEPT A 'BLOCK EPILOG=YES' WHEN              *
*    IT TRANSFERS CONTROL TO THE 'EPILOG'. THE                  *
*    LEAVE STATMENT CAN TRANSFER CONTROL TO ANY                 *
*    ACTIVE EXTERNAL BLOCK PROVIDING THAT YOU DO                *
*    NOT ATTEMPT TO TRANSFER CONTROL THROUGH A                  *
*    'BLOCK EPILOG=YES' WITHOUT EXITING TO THE                  *
*    EPILOG.                                                    *
*    A LEAVE STATEMENT IN THE EPILOG OF A BLOCK                 *
*    MAY TRANFER CONTROL OUT OF THAT EPILOG TO                  *
*    THE END OF SOME OUTER BLOCK.                               *
*                                                               *
*****************************************************************
*                                                               *
* MACRO NAME = YCCTEST                                          *
*                                                               *
* DESCRIPTIVE NAME = PARSES A <TEST>,<CONJ> EXPRESSION          *
*                                                               *
* INPUT =                                                       *
*                                                               *
*    NO LABEL IS PERMITTED                                      *
*                                                               *
*    POSITIONAL PARAMETERS =                                    *
*        <TEST>                                                 *
*        <CONJ>                                                 *
*                                                               *
*    KEYWORD PARAMETERS = NONE                                  *
*                                                               *
* NOTES =                                                       *
*                                                               *
*    THIS IS AN INNER MACRO CALLED FROM 'IF' AND 'DO'           *
*    TO EVALUATE ONE TERM OF A LOGICAL EXPRESSION. IT           *
*    WILL EXPAND TO A CONDITION CODE SETTING INSTRUCTION        *
*    AND A 'BC' INSTRUCTION FOR THE APPROPRIATE                 *
*    CONDITION TO THE APPROPRIATE LABEL.                        *
*                                                               *
*****************************************************************
*                                                               *
* MACRO NAME = YCCOND                                           *
*                                                               *
* DESCRIPTIVE NAME = PARSES THE <RELATION> PART OF A TEST       *
*                                                               *
* INPUT =                                                       *
*                                                               *
*    NO LABEL IS PERMITTED                                      *
*                                                               *
*    POSITIONAL PARAMETERS =  <RELATION>                        *
*                                                               *
*    KEYWORD PARAMETERS = NONE                                  *
*                                                               *
* NOTES =                                                       *
*    THIS IS AN INNER MACRO OF YCCTEST.                         *
*                                                               *
*                                                               *
*****************************************************************
*                                                               *
* MACRO NAME = YCCPUSH                                          *
*                                                               *
* DESCRIPTIVE NAME = CREATE CONDITIONAL ASSEMBLY ENVIRONMENT    *
*                    AT START OF NEW BLOCK                      *
*                                                               *
* INPUT =                                                       *
*                                                               *
*    NO LABEL IS PERMITTED                                      *
*                                                               *
*    POSITIONAL PARAMETERS = NONE                               *
*                                                               *
*    KEYWORD PARAMETERS =                                       *
*                                                               *
*        NAME=<BLOCKNAME>                                       *
*        TYPE= BLOCK×DOTIL×DOWILE×IF                            *
*                                                               *
* NOTES =                                                       *
*                                                               *
*    THIS IS AN INNER MACRO OF 'DO', 'IF', AND 'BLOCK'.         *
*    IT STORES THE BLOCK NAME, TYPE, AND STATUS IN              *
*    GBLA, GBLB, AND GBLC PRE-ASSEMBLY VARIABLES FOR            *
*    USE BY THE OTHER MACROS OF THE SYSTEM.                     *
*                                                               *
*****************************************************************
