         MACRO
&LAB     INIT &CB,&WKREG=R0
.* NOW I DON'T KNOW ABOUT YOU, BUT I HATE TO INITIALIZE GETMAINED
.* STORAGE WHEN WRITING REENTRANT PROGRAMS. SO I HAVE THIS MACRO
.* WHICH ALLOWS ME DO DO THIS SORT OF THING A LITTLE MORE EASILY
.* AND WITH A LITTLE CLEARER DOCUMENTATION OF WHATS GOING ON.
.* THEN SYNTAX IS
.*       INIT    PREFIX,
.*             (FIELD1,RELATION1,VALUESOURCE1),
.*             (FILED2,RELATION2,VALUESOURCE2),
.*             ETC
.* THE SYMBOLIC NAME TO BE INITIALIZED IS FORMED BY CONCATENATING
.* THE 'PREFIX' IN FRONT OF THE 'FIELD#' PART. 'PREFIX' ALLOWS
.* CONTROL BLOCKS WHERE EVERY FIELD BEGINS WITH THE SAME FOUR
.* CHARACTERS TO BE CONVENIENTLY INITIALIZED.
.* THE ACCEPTABLE RELATIONS ARE:
.*  '='  THE VALUESOURCE IS COPIED TO THE FIELD WITH AN MVC.
.*       THE VALUSOURCE CAN BE A STORAGE LOCATION OR A LITERAL
.*       (WITHOUT LEADING EQUALSIGN).
.*  ':=' THE VALUESOURCE IS A ONE BYTE SELF DEFINING TERM OR EQUATE.
.*       IT IS ASSIGNED TO THE ONE BYTE FIELD WITH A MVI.
.*  '->' THE VALUESOURCE IS A STORAGE LOCATION WHOSE 4 BYTE ADDRESS IS
.*       TO BE ASSIGNED TO THE FIELD. THIS IS DONE WITH A LOAD ADDRESS
.*       AND A STORE.
         LCLA  &N
         LCLC  &C
&LAB     DS    0H
&N       SETA  2
.LP      AIF   ('&SYSLIST(&N,1)' EQ '').ENDER
         AIF   ('&SYSLIST(&N,2)' EQ '->').PTR
         AIF   ('&SYSLIST(&N,2)' EQ ':=').IMM
&C       SETC  '&SYSLIST(&N,3)'(K'&SYSLIST(&N,3),1)
         AIF   ('&C' EQ ')' OR '&C' EQ '''').LIT
         MVC   &CB.&SYSLIST(&N,1),&SYSLIST(&N,3)
         AGO   .ENDLOP
.IMM     MVI   &CB.&SYSLIST(&N,1),&SYSLIST(&N,3)
         AGO   .ENDLOP
.LIT     MVC   &CB.&SYSLIST(&N,1),=&SYSLIST(&N,3)
         AGO   .ENDLOP
.PTR     LA    &WKREG,&SYSLIST(&N,3)
         ST    &WKREG,&CB.&SYSLIST(&N,1)
.ENDLOP  ANOP
&N       SETA  &N+1
         AGO   .LP
.ENDER   MEND
