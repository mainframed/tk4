00041840ARCHRPT: /* COMMAND TO PROVIDE MEMBER LAST-STOW REPORTS FOR PDS */
00041850         PROC(PARM)OPTIONS(MAIN)REORDER;
00041860%SKIP;
00041870/*****DECLARATIONS*****/
00041880%SKIP;   
00041890         DCL PARM FIXED BIN; /* DUMMY ARGUMENT...LINK WITH ENTRY PLICALLA */
00041900         DCL BUFPTR PTR; /* POINTS TO EFFECTIVE COMMAND BUFFER */
00041910         DCL RPTPARS STATIC EXT PTR; /* PARSE TABLE */
00041920%SKIP;
00041930         /**** THE FOLLOWING INCLUDE IS FROM YCC1.PLIXMACS ****/
00041940%INCLUDE IKJPARS;
00041950%SKIP;
00041960         /**** OTHER PARSING ENTITIES****/
00041970         DCL MEMSPEC BIT(1) ALIGNED;/* FLAG, INDICATES THAT A MEMBER LIST WAS
00041980                   SPECIFIED */
00041990         DCL STRING CHAR(44)BASED(IKJSTRING.IKJPTR);/* GENERAL PURPOSE STRING */
00042000         DCL MEMLISTPTR PTR;/* POINTS TO USER MEMBER LIST IF PARSED */
00042010%SKIP;
00042020         /**** BUILD LIST AND ASSOCIATE ITEMS ****/
00042030         DCL 1 BLDLIST CTL,
00042040               2 #ENTRIES FIXED BIN INIT(#MEMBERS),
00042050               2 ENTRYLENGTH FIXED BIN INIT(18),
00042060               2 ENTRIES (#MEMBERS),
00042070                   3 MEMBERNAME CHAR(8),
00042080                   3 TT FIXED BIN,
00042090                   3 R BIT(8)ALIGNED,
00042100                   3 KZ BIT(16)ALIGNED,
00042110                   3 C BIT(8) ALIGNED,
00042120                   3 TS FIXED BIN(31)UNALIGNED;
00042130         DCL #MEMBERS FIXED BIN;
00042140         DCL TEMP CHAR(8);/* TEMPORARY TO SORT MEMBERS */
00042150%SKIP;
00042160         /**** DYNAMIC ALLOCATION INCLUDES, FROM SSCLIB.PLIXMACS ****/
00042170%INCLUDE DAL;
00042180%INCLUDE DALRETRN;
00042190         DCL PO BIT(16) ALIGNED STATIC INIT('0000001000000000'B);
00042200%SKIP;
00042210         /**** OTHER ENTRIES****/
00042220         DCL TELL ENTRY;
00042230         DCL TIMANAL ENTRY(FIXED BIN(31),*);
00042240         DCL DIRREAD ENTRY(CHAR(8),PTR)RETURNS(FIXED BIN);/*DIRECTORY
00042250               READING ROUTINE*/
00042260%SKIP;
00042270         /**** BPAM READING PACKAGE ****/
00042280         DCL BPROPEN ENTRY(CHAR(8),*)RETURNS(FIXED BIN);/* OPENS PDS*/
00042290         DCL BLDL ENTRY(*,*)RETURNS(FIXED BIN);/* EXECUTES BLDL MACRO */
00042300         DCL BPCLOSE ENTRY(*);/* CLOSES PDS */
00042310         DCL STDDCB(56)PTR EXT;/* PROTOTYPE DCB... IN THIS VERSION WE USE
00042320               PROTOTYPE DIRECTLY, WHICH MAKES THE ROUTINE NONREENTRANT */
00042330%SKIP;
00042340         /**** DATA STRUCTURES FOR REPORT PURPOSES ****/
00042350         DCL 1 TIMRPT,
00042360               2 BLANK CHAR(4)INIT(' '),
00042370               2 MO PIC'99',
00042380               2 S1 CHAR(1)INIT('/'),
00042390               2 DD PIC'99',
00042400               2 S2 CHAR(1)INIT('/'),
00042410               2 YY PIC'99',
00042420               2 BLNK2 CHAR(2) INIT(' '),
00042430               2 HH PIC'99',
00042440               2 C1 CHAR(1)INIT(':'),
00042450               2 MI PIC'99',
00042460               2 C2 CHAR(1)INIT(':'),
00042470               2 SS PIC'99';
00042480         DCL REPRT CHAR(22)BASED(ADDR(TIMRPT));
00042490         DCL 1 TIMES,
00042500               2 (YY,MO,DD,HH,MI,SS) FIXED BIN;
00042510%PAGE;
00042520         BUFPTR=ADDR(PARM);
00042530%SKIP;
00042540         /**** PARSE COMMAND, SET FLAGS ****/
00042550         IF 0<PARSE(BUFPTR->IKJBUF,RPTPARS) THEN SIGNAL ERROR;
00042560         CALL GETPDE('DSN',PDEPTR);
00042570         DALDSNAME=SUBSTR(STRING,1,IKJSTRING.IKJLEN);
00042580                   /* .... GET DSN */
00042590         CALL GETPDE('MEMSPEC',PDEPTR);
00042600         MEMSPEC=IKJKEYWD=1;
00042610                   /* .... SET MEMSPEC FLAG */
00042620%SKIP;
00042630         /* PERFORM DYNAMIC ALLOCATION. GET DSORG, ALSO VOLUME IN
00042640                   CASE NEEDED (SEE BELOW) */
00042650         DALSTATUS=SHR;
00042660         CALL DAL(ALLOCATE,DSNAME,STATUS,RETDDNAME,RETDSORG,RETVOLSER);
00042670         IF DALRETDSORG&PO THEN;ELSE DO;
00042680               CALL TELL(DALDSNAME||' IS NOT A PARTITIONED DATASET');
00042690               SIGNAL ERROR;
00042700               END;
00042710%SKIP;
00042720         /**** CONSIDER USER-SPECIFIED MEMBERLIST, OR READ DIRECTORY, AS
00042730               REQUIRED ****/
00042740%SKIP;
00042750         IF MEMSPEC THEN DO;
00042760               /* USER-SPECIFIED MEMBERS: COUNT NUMBER, ALLOCATE A
00042770                   BUILD LIST TO HOLD NAMES.  PUT NAMES IN LIST, AND SORT */
00042780               CALL GETPDE('MEMLIST',MEMLISTPTR);
00042790               I,#MEMBERS=0;
00042800               DO PDEPTR=MEMLISTPTR REPEAT IKJSTRING.IKJNEXT WHILE(PDEPTR^=NULL());
00042810                   #MEMBERS=#MEMBERS+1;
00042820                   END;
00042830               ALLOCATE BLDLIST;
00042840               DO PDEPTR=MEMLISTPTR REPEAT IKJSTRING.IKJNEXT WHILE(PDEPTR^=NULL());
00042850                   I=I+1;
00042860                   MEMBERNAME(I)=SUBSTR(STRING,1,IKJSTRING.IKJLEN);
00042870                   END;
00042880               DO I=1 TO #MEMBERS-1;
00042890                   DO J=I+1 TO #MEMBERS;
00042900                       IF MEMBERNAME(I)>MEMBERNAME(J) THEN DO;
00042910                           TEMP=MEMBERNAME(I);
00042920                           MEMBERNAME(I)=MEMBERNAME(J);
00042930                           MEMBERNAME(J)=TEMP;
00042940                           END;
00042950                       END;
00042960                   END;
00042970%SKIP;
00042980               /****NOW, OPEN DATASET FOR BPAM, BLDL THE LIST ****/
00042990               IF 0<BPROPEN(DALRETDDNAME,STDDCB) THEN SIGNAL ERROR;
00043000               IF 4<BLDL(BLDLIST,STDDCB) THEN DO;
00043010                   CALL TELL(DALDSNAME||' PROCESSING ERROR');
00043020                   CALL BPCLOSE(STDDCB);
00043030                   SIGNAL ERROR;
00043040                   END;
00043050               CALL BPCLOSE(STDDCB);
00043060               END;/*USER-SUPPLIED MEMBERLIST CASE*/
00043070%SKIP;
00043080         ELSE DO;/*USER DID NOT SUPPLY MEMBERLIST*/
00043090%SKIP;
00043100               #MEMBERS=100;/*TAKE A REASONABLE GUESS*/
00043110               ALLOCATE BLDLIST;
00043120               /*NOW ATTEMPT TO READ DIRECTORY*/
00043130               I=DIRREAD(DALRETDDNAME,ADDR(BLDLIST));
00043140               /* HANDLE CONTINGENCIES */
00043150               SELECT(I);
00043160                   WHEN(0);
00043170                   WHEN(12)DO;/*BUILD LIST NOT LARGE ENOUGH*/
00043180                       DO #MEMBERS=150 BY 50 UNTIL(I^=12);
00043190                           FREE BLDLIST;
00043200                           ALLOCATE BLDLIST;
00043210                           I=DIRREAD(DALRETDDNAME,ADDR(BLDLIST));
00043220                           END;
00043230                       IF I^=0 THEN DO;
00043240                           CALL TELL(DALDSNAME||' PROCESSING ERROR');
00043250                           SIGNAL ERROR;
00043260                           END;
00043270                       END;
00043280                   OTHERWISE DO;
00043290                       CALL TELL(DALDSNAME||' PROCESSING ERROR');
00043300                       SIGNAL ERROR;
00043310                       END;
00043320                   END;
00043330               END;/****DIRECTORY READING CASE****/
00043340%SKIP;
00043350         /**** AT THIS POINT, WE SHOULD HAVE THE DIRECTORY IN THE BUILD LIST **
00043360%SKIP;
00043370         /**** LOOP THROUGH BUILD LIST, CHECKING MEMBER VALIDITY, AND PRODUCING
00043380                   REPORTS ****/
00043390         DO I=1 TO #ENTRIES;
00043400               IF R(I) THEN DO;
00043410                   IF (C(I)&'01111110'B)^='00000010'B THEN TIMES=0;
00043420                   ELSE CALL TIMANAL(TS(I),TIMES);
00043430                   TIMRPT=TIMES, BY NAME;
00043440                   CALL TELL(MEMBERNAME(I)||REPRT);
00043450                   END;
00043460               ELSE CALL TELL(MEMBERNAME(I)||'    NOT FOUND');
00043470               END;
00043480         END ARCHRPT;
00043490/*****JOSH AUERBACH, FEBRUARY 14, 1978*****/
00043500/*****LAST ALTERATION, JULY 5, 1979*****/
