00050300REGION:  /* REGION TSO COMMAND */
00050310    PROC(DUMMY) OPTIONS(MAIN) REORDER;
00050320%SKIP;
00050330    DCL DUMMY FIXED BIN;
00050340    DCL (PARSER, PARSFRE) ENTRY;
00050350    DCL REGPCL(2) EXT PTR;
00050360    DCL VALI(1) ENTRY VARIABLE INIT(CHECKER);
00050370    DCL 1 PDES, 2 (REGPDE, MARGIN, REGVAL, MARGVAL) PTR;
00050380    DCL KEYWD BASED FIXED BIN;
00050390    DCL 1 PDE  BASED,
00050400         2 VALPTR PTR,
00050410         2 LEN FIXED BIN;
00050420    DCL STG PTR;
00050430    DCL RETCODE FIXED BIN;
00050440    DCL TELL ENTRY;
00050450    DCL SVC ENTRY(FIXED BIN,*) OPTIONS(ASM INTER);
00050460    DCL 1 REGS, 2 ( R0, R1, R15) FIXED BIN(31);
00050470    DCL STR CHAR(5) BASED;
00050480    DCL (NEWR0, NEWR1) FIXED BIN(31);
00050490%SKIP;
00050500    CALL PARSER(ADDR(DUMMY),REGPCL,VALI,RETCODE,PDES,STG);
00050510    IF RETCODE >0 THEN SIGNAL ERROR;
00050520%SKIP;
00050530    IF REGPDE->KEYWD=0 & MARGIN->KEYWD=0 THEN /* INFORMATION ONLY */
00050540         DO;
00050550         R0,R1=-1;
00050560         CALL SVC(243,REGS);
00050570         CALL REPORT('',R0,R1);
00050580         END;
00050590    ELSE DO;
00050600         IF REGPDE->KEYWD=0 THEN DO; /* GET CURRENT */
00050610              R0,R1=-1;
00050620              CALL SVC(243,REGS);
00050630              END;
00050640         ELSE R1=CONVERT(REGVAL);
00050650         IF MARGIN->KEYWD=0 THEN R0=65536;
00050660         ELSE R0=CONVERT(MARGVAL);
00050670         NEWR0=R0; NEWR1=R1;
00050680         CALL SVC(243,REGS);
00050690         IF R15^=0 THEN CALL TELL('REGION SIZE NOT CHANGED');
00050700         CALL REPORT('FORMER',R0,R1);
00050710         CALL REPORT('NEW',NEWR0,NEWR1);
00050720         END;
00050730%PAGE;
00050740CONVERT: /* CONVERT VALUES TO BINARY */
00050750    PROC(PDEPTR) RETURNS(FIXED BIN(31));
00050760%SKIP;
00050770    DCL PDEPTR PTR;
00050780    DCL VALUE FIXED BIN(31);
00050790    SELECT(SUBSTR(PDEPTR->VALPTR->STR,PDEPTR->LEN,1));
00050800         WHEN('K') 
00050810              VALUE=SUBSTR(PDEPTR->VALPTR->STR,1,PDEPTR->LEN-1)*1024;
00050820         WHEN('M')
00050830              VALUE=SUBSTR(PDEPTR->VALPTR->STR,1,PDEPTR->LEN-1)*1024*1024;
00050840         OTHERWISE
00050850              VALUE=SUBSTR(PDEPTR->VALPTR->STR,1,PDEPTR->LEN)*1024;
00050860         END;
00050870    RETURN(VALUE);
00050880    END CONVERT;
00050890%SKIP;
00050900REPORT:  /* TELL USER ABOUT REGION SIZE */
00050910    PROC(HEAD,R0,R1);
00050920%SKIP;
00050930    DCL PRINTER PIC'ZZZ9';
00050940    DCL HEAD CHAR(6) VAR;
00050950    DCL (R0, R1) FIXED BIN(31);
00050960    PRINTER=R1/1024;
00050970    CALL TELL(HEAD||' REGION SIZE IS '||PRINTER||'K');
00050980    PRINTER=R0/1024;
00050990    CALL TELL(HEAD||' MARGIN SIZE IS '||PRINTER||'K');
00051000    END REPORT;
00051010%SKIP;
00051020CHECKER: /* VALIDITY CHECK FOR VALUES */
00051030    PROC(PDEPTR,NULLPTR) RETURNS(FIXED BIN);
00051040%SKIP;
00051050    DCL PDEPTR PTR;
00051060    DCL NULLPTR PTR;
00051070    DCL CHECKVAL FIXED BIN(31);
00051080%SKIP;             
00051090    I=VERIFY(SUBSTR(PDEPTR->VALPTR->STR,1,PDEPTR->LEN),'0123456789');
00051100    SELECT(I);
00051110         WHEN(0) CHECKVAL=CONVERT(PDEPTR);
00051120         WHEN(PDEPTR->LEN) SELECT(SUBSTR(PDEPTR->VALPTR->STR,PDEPTR->LEN,1));
00051130              WHEN('M','K')CHECKVAL=CONVERT(PDEPTR);
00051140              OTHERWISE RETURN(4);
00051150              END;
00051160         OTHERWISE RETURN(4);
00051170         END;
00051180%SKIP;
00051190    IF CHECKVAL>6*1024*1024 THEN RETURN(4);
00051200    RETURN(0);
00051210    END CHECKER;
00051220    END REGION;
00051230/**** JOSH AUERBACH, NOVEMBER 17, 1978 ****/
