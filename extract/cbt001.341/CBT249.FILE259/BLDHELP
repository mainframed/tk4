00000100PROC 0 DEBUG
00000200/* )STARTHELP
00000300/* )F FUNCTION -
00000400/*    THE BLDHELP COMMAND IS A CLIST USED TO BUILD A HELP MEMBER
00000500/*    IN A SELECTED HELP DATASET. IT ASSUMES THAT YOU HAVE DOCUMENTED
00000600/*    THE SOURCE MEMBER IN "HELP" FORMAT - SEE PAGE 29 OF GC28-0648;
00000700/*    "TSO GUIDE TO WRITING A TERMINAL MONITOR PROGRAM" FOR THE
00000800/*    PROPER FORMAT.
00000900/*
00001000/*    NOTE: I N   A D D I T I O N --- THE SOURCE HELP DOCUMENTATION
00001100/*          MUST BE BRACKETED WITH SENTINAL RECORDS IN THE FOLLOWING
00001200/*          FORMAT:
00001300/*
00001400/*    FOR CLISTS: /* )STARTHELP
00001500/*                /* )ENDHELP
00001600/*
00001700/*    FOR JCL:    //*)STARTHELP
00001800/*                //*)ENDHELP
00001900/*
00002000/*    FOR NORMAL
00002100/*    HELP DATA:  OMIT STARTHELP AND ENDHELP SENTINELS ENTIRELY.
00002200/*                ----
00002300/*
00002400/* )X SYNTAX -  'BLDHELP'
00002500/* )O OPERANDS - YOU WILL BE PROMPTED FOR THE FOLLOWING:
00002600/*
00002700/*      * ENTER SOURCE 'DATASET' OR 'DATASET(MEMBER)'
00002800/*                -ENTER THE NAME OF THE DATASET TO BE TRANSCRIBED.
00002900/*                 IF IT IS A PDS, INCLUDE (MEMBERNAME).
00003000/*      * ENTER TARGET 'DATASET(MEMBER)' OR NULL TO UPDATE
00003100/*               'SYS2.JCLLIB(MEMBER)'.
00003200/*                -ENTER THE NAME OF THE TARGET DATASET;
00003300/*                 INCLUDE (MEMBERNAME)  -OR-
00003400/*                 DEPRESS ENTER TO UPDATE THE DEFAULT LIBRARY.
00003500/*
00003600/*             MISCELLANEOUS MESSAGES -
00003700/*
00003800/*      *  DATASET NAMES WITHOUT QUOTES WILL BE PREFIXED WITH "LOGONID".
00003900/*                 -INFORMATIONAL MESSAGE.
00004000/*      *  SEQUENTIAL DATASET SPECIFIED OR ERROR SPECIFYING MEMBER.
00004100/*                 -INFORMATIONAL MESSAGE. IMPLIES MISSING OR UNBALANCED
00004200/*                   PARENTHESES.
00004300/*      *  PLEASE ENTER MEMBER NAME IN TARGET DATASET:
00004400/*                 -OCCURS IF SEQUENTIAL SOURCE DATASET SPECIFIED.
00004500/*                  ENTER MEMBER NAME.
00004600/*      *  COMMAND "BLDJCL" INTENDED FOR   L I B R A R Y  USE ONLY.
00004700/*         PLEASE SPECIFY TARGET IN THE FORM: 'DSNAME(MEMBER)'.
00004800/*                 -NO TARGET MEMBER NAME WAS SPECIFIED. RE-ENTER
00004900/*                  TARGET DATASET NAME AND MEMBER NAME.
00005000/*      *  SPECIFY VOLUME-SERIAL NUMBER OR NULL IF CATALOGUED:
00005100/*                 -ALLOWS USER TO BYPASS CATALOG  BY SPECIFYING
00005200/*                  VOLUME SERIAL NUMBER. ENTER EITHER VOLUME-SERIAL
00005300/*                  NUMBER OR NULL LINE TO ACCEPT CATALOG DEFAULT.
00005400/*      *  SOURCE DATASET IS: DSNAME - TARGET DATASET IS: DSNAME
00005500/*         IS THIS CORRECT? Y/N
00005600/*                 -FINAL VERIFICATION MESSAGE. REPLY "Y" TO ALLOW
00005700/*                  UPDATE OF TARGET DATASET. REPLY "N" TO RESPECIFY.
00005800/*      *  UPDATE PROCEEDING.
00005900/*                 -INFORMATIONAL MESSAGE. OCCURS AFTER RESPONDING "Y"
00006000/*                  TO PREVIOUS MESSAGE.
00006100/*      *  DON'T FORGET TO UPDATE THE APPROPRIATE MEMBER OF 'SYS2.HELP'
00006200/*         WITH ONE-LINER POINTER IF THIS IS A NEW MEMBER.
00006300/*                 -INFORMATIONAL MESSAGE.
00006400/*                  MEMBER "TSOCMDS" OR "RDCCMDS" SHOULD BE UPDATED.
00006500/*
00006600/* )ENDHELP
00006700CONTROL NOFLUSH NOMSG
00006800SET &LCC EQ 0
00006900IF &DEBUG NE &STR() THEN CONTROL CONLIST LIST
00007000SET &TARG EQ &SUBSTR(4:&LENGTH(&SYSICMD),&SYSICMD)
00007100REDO: +
00007200WRITE DATASET NAMES WITHOUT QUOTES WILL BE PREFIXED WITH &SYSUID..
00007300WRITENR ENTER SOURCE 'DATASET' OR 'DATASET(MEMBER)'
00007400READ
00007500SET &SOURCE EQ &STR(&SYSDVAL)
00007600SET &N EQ &LENGTH(&SOURCE)
00007700DO WHILE &N GT 1
00007800  IF &SUBSTR(&N,&SOURCE) EQ ) THEN +
00007900  DO
00008000    SET &M EQ &N
00008100    SET &N EQ &N-1
00008200    DO WHILE &SUBSTR(&N,&SOURCE) NE &STR((
00008300      SET &N EQ &N-1
00008400    END
00008500    SET &MEMBER EQ &SUBSTR(&N+1:&M-1,&SOURCE)
00008600    GOTO GETARG
00008700  END
00008800  SET &N EQ &N-1
00008900END
00009000WRITE SEQUENTIAL SOURCE DATASET SPECIFIED OR ERROR SPECIFYING MEMBER.
00009100WRITENR PLEASE ENTER MEMBER NAME IN TARGET DATASET:
00009200READ &MEMBER
00009300GETARG: WRITE ENTER TARGET 'DATASET(MEMBER)' OR NULL TO UPDATE 'SYS2.&TARG(&MEMBER)'
00009400RESPEC: READ
00009500SET &X EQ N
00009600IF &SYSDVAL EQ &STR() THEN +
00009700DO
00009800  SET &TARG EQ 'SYS2.&TARG(&MEMBER)'
00009900  SET &X EQ Y
00010000END
00010100/* ENSURE MEMBER OF TARGET DATASET IS SPECIFIED.*/
00010200ELSE +
00010300DO
00010400  DO
00010500    SET &TARG EQ &STR(&SYSDVAL)
00010600    SET &N EQ &LENGTH(&TARG)
00010700    DO WHILE &N GT 1
00010800      IF &SUBSTR(&N,&TARG) EQ ) THEN +
00010900      DO
00011000        /* RIGHT PAREN FOUND, LOOK FOR LEFT PAREN. */
00011100        SET &N EQ &N-1
00011200        DO WHILE &SUBSTR(&N,&TARG) NE &STR((
00011300          SET &N EQ &N-1
00011400        END
00011500        GOTO MEMFOUND
00011600      END
00011700      SET &N EQ &N-1
00011800    END
00011900  END
00012000WRITE COMMAND "&SYSICMD" INTENDED FOR   L I B R A R Y  UPDATE ONLY.
00012100WRITE PLEASE SPECIFY TARGET IN THE FORM: 'DSNAME(MEMBER)'.
00012200GOTO RESPEC
00012300END
00012400MEMFOUND: +
00012500SET &VOL EQ &STR()
00012600SET &UNIT EQ &STR()
00012700IF &X NE Y THEN +
00012800DO
00012900  WRITENR SPECIFY VOLUME-SERIAL NUMBER OR NULL IF CATALOGUED:
00013000  READ &VOL
00013100  IF &VOL EQ &STR() THEN GOTO FINAL
00013200  SET &VOL EQ &STR(VOLUME(&VOL))
00013300  SET &UNIT EQ UNIT(SYSALLDA)
00013400END
00013500FINAL: +
00013600WRITE SOURCE DATASET IS: &SOURCE
00013700WRITE TARGET DATASET IS: &TARG &VOL
00013800WRITENR IS THIS CORRECT? Y/N
00013900READ &YN
00014000IF &YN NE Y THEN GOTO REDO
00014100ATTN GOTO CLEANUP
00014200WRITE UPDATE PROCEEDING.
00014300FREE F(IN SYSUT1 SYSUT2) ATTR(XX)
00014400ALLOC F(IN) DA(&SOURCE) SHR
00014500ATTR XX LRECL(80) BLKSIZE(3120) DSORG(PS) RECFM(F B)
00014600ALLOC F(SYSUT1) NEW SPACE(2) TRACKS USING(XX)
00014700OPENFILE IN
00014800OPENFILE SYSUT1 OUTPUT
00014900ERROR +
00015000DO
00015100  SET &LCC EQ &LASTCC
00015200  IF &LCC EQ 400 THEN GOTO LAST
00015300  WRITE ABNORMAL END
00015400  ELIST &LCC
00015500  CLOSFILE IN
00015600  CLOSFILE SYSUT1
00015700  FREE F(IN SYSUT1 SYSUT2) ATTR(XX)
00015800  EXIT
00015900END
00016000/*
00016100/*  GET FIRST RECORD, DETERMINE IF CLIST OR PROCEDURE.
00016200/*
00016300SET &BLANK EQ &STR(                                                                                                     )
00016400SET &S EQ 100000100
00016500GET: GETFILE IN
00016600IF &DATATYPE(&SUBSTR(1:8,&IN)) EQ NUM THEN GOTO VARIABLE
00016700ELSE GOTO FIXED
00016800/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
00016900/*
00017000/*  ROUTINE FOR FIXED LENGTH INPUT RECORDS.
00017100/*
00017200/*
00017300/*  FIND FIRST SENTINEL (STARTHELP)
00017400/*
00017500GETF1: GETFILE IN
00017600FIXED: IF &SUBSTR(5:13,&IN) NE STARTHELP THEN GOTO GETF1
00017700/*
00017800/*  SENTINEL FOUND. LOOP WRITING UNTIL ENDHELP FOUND.
00017900/*
00018000GETF2: GETFILE IN
00018100IF &SUBSTR(5:11,&IN) EQ ENDHELP THEN GOTO LAST
00018200/*
00018300/* BUILD NEW OUTPUT RECORD WITH SEQUENCE NUMBER; WRITE RECORD.
00018400/*
00018500SET &SYSUT1 EQ &SUBSTR(4:72,&IN)&STR(   )&SUBSTR(&LENGTH(&S)-7:&LENGTH(&S),&S)
00018600SET &S EQ &S+100
00018700PUTFILE SYSUT1
00018800GOTO GETF2
00018900/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
00019000/*
00019100/*  ROUTINE FOR VARIABLE LENGTH INPUT RECORDS.
00019200/*
00019300/*
00019400/*  FIND FIRST SENTINEL (STARTHELP)
00019500/*
00019600GETV1: GETFILE IN
00019700VARIABLE: IF &LENGTH(&IN) NE 21 THEN GOTO GETV1
00019800IF &SUBSTR(13:21,&IN) NE STARTHELP THEN GOTO GETV1
00019900GETV2: GETFILE IN
00020000/*
00020100/*  SENTINEL FOUND. TEST FOR SPACER RECORDS AND BUILD, IF FOUND.
00020200/*
00020300IF &LENGTH(&IN) LE 11 THEN +
00020400DO
00020500  SET &SYSUT1 EQ &SUBSTR(1:72,&STR(&BLANK))&SUBSTR(&LENGTH(&S)-7:&LENGTH(&S),&S)
00020600  PUTFILE SYSUT1
00020700  SET &S EQ &S+100
00020800  GOTO GETV2
00020900END
00021000/*
00021100/*  LOOK FOR ENDING SENTINEL (ENDHELP)
00021200/*
00021300IF &LENGTH(&IN) EQ 19 THEN +
00021400DO
00021500  IF &SUBSTR(13:19,&IN) EQ ENDHELP THEN GOTO LAST
00021600END
00021700/*
00021800/*  PROCESS DETAIL RECORD INCLUDING NEW SEQUENCE NUMBER
00021900/*
00022000SET &SYSUT1 EQ &SUBSTR(12:&LENGTH(&IN),&IN)&STR(&BLANK)
00022100SET &SYSUT1 EQ &SUBSTR(1:72,&STR(&SYSUT1))&SUBSTR(&LENGTH(&S)-7:&LENGTH(&S),&S)
00022200PUTFILE SYSUT1
00022300SET &S EQ &S+100
00022400GOTO GETV2
00022500/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
00022600LAST: +
00022700ERROR OFF
00022800CLOSFILE IN
00022900CLOSFILE SYSUT1
00023000%UMSG
00023100IF &LCC EQ 400 THEN ALLOC F(SYSUT1) DA(&SOURCE) SH REUSE
00023200ALLOC F(SYSUT2) DA(&TARG) &VOL &UNIT SH REUSE
00023300FREE F(SYSIN SYSPRINT)
00023400ALLOC F(SYSIN) DUMMY
00023500ALLOC F(SYSPRINT) DUMMY
00023600CALL 'SYS1.LINKLIB(IEBGENER)'
00023700WRITE DON'T FORGET TO UPDATE THE APPROPRIATE MEMBER OF SYS2.HELP
00023800WRITE WITH ONE-LINE POINTER IF THIS IS A NEW MEMBER.
00023900CLEANUP: FREE F(SYSUT1 SYSUT2 SYSIN SYSPRINT IN) ATTR(XX)
00024000ALLOC F(SYSIN) DA(*)
00024100ALLOC F(SYSPRINT) DA(*)
