*        %GOTO RMSBPLS1; /*
         MACRO
         IRARMSB &DSECT=YES                                          */
*%RMSBPLS1:  ;
* /*                                                                 */
* /* MACCOMP Z-4 SC1CX/PKD16                                         */
* /* MACSTAT Z-4 75007/Z40BPSS                                       */
* /* *************************************************************** */
* /*                                                                 */
* /*   MACRO NAME - IRARMSB                                          */
* /*                                                                 */
* /*   DESCRIPTIVE NAME - RESOURCES MANAGER SUBROUTINE VECTOR TABLE  */
* /*                                                                 */
* /*   COPYRIGHT - NONE                                              */
* /*                                                                 */
* /*   STATUS - OS/VS2 RELEASE 4, 07/30/75, LEVEL=1                  */
* /*                                                                 */
* /*   FUNCTION - THE RMSB CONTAINS THE ENTRY POINT ADDRESSES OF     */
* /*         ALL EXTERNALLY ENTERED SUBROUTINES (ROUTINES WHICH      */
* /*         RETURN CONTROL TO THE INVOKER) WITHIN THE SYSTEM        */
* /*         RESOURCES MANAGER COMPONENT.  THE IRACTLCL MACRO        */
* /*         KEYS OFF THE RMSB DISPLACEMENTS TO ROUTE CONTROL        */
* /*         TO THE REQUESTED SUBROUTINE.                            */
* /*                                                                 */
* /*   METHOD OF ACCESS - THE ADDRESS OF THE RMSB IS CONTAINED IN    */
* /*         THE -RMCTRMSB- FIELD OF THE SYSTEM RESOURCES MANAGER    */
* /*         CONTROL TABLE.                                          */
* /*                                                                 */
* /* *************************************************************** */
*        %GOTO RMSBPLS2; /*
         AGO   .RMSBAL1                                              */
* /* *************************************************************** */
* /*                                                                 */
* /*   INVOCATION PARAMETERS AND/OR KEYWORDS =                       */
* /*                                                                 */
* /*     BAL - DSECT=NO IF DSECT IS NOT TO BE PRODUCED.              */
* /*                                                                 */
* /*           NOTE - THE BAL FORM OF THE MACRO IS CODED WITH        */
* /*           'DC' INSTRUCTIONS, SO THAT THE MACRO MAY BE USED      */
* /*           TO ASSEMBLE THE INITIAL FIELD VALUES INTO THE         */
* /*           IRARMCNS MODULE, WHICH CONTAINS THE RMSB TABLE.       */
* /*                                                                 */
* /*         USING ON RMSB GIVES ADDRESSABILITY TO ALL SYMBOLS.      */
* /*                                                                 */
* /*     PLS - %RMSBLEVL='USERLEVL' IF THE RMSB MAPPING IS TO BE     */
* /*           CONCATENATED WITH A PREVIOUS DECLARATION, WITH THE    */
* /*           RMSB BEING ASSIGNED THE INDICATED STRUCTURE LEVEL.    */
* /*         - %RMSB9999=',' IF THE STRUCTURE SHOULD NOT BE CLOSED.  */
* /*                                                                 */
* /*         TO ACCESS AS A STANDALONE STRUCTURE DCL RMSBPTR PTR.    */
* /*                                                                 */
* /*   CHANGE ACTIVITY = @ZM43085                                    */
* /*                                                                 */
* /*   A000000-999999                                          Y02133*/
* /*                                                                 */
* /* *************************************************************** */
* /*
.RMSBAL1 ANOP
         SPACE 1
         AIF   ('&DSECT' EQ 'NO').RMSBAL2
RMSB     DSECT
         AGO   .RMSBAL3
.RMSBAL2 ANOP
         DS    0D
RMSB     EQU   *
.RMSBAL3 ANOP
         SPACE 1
RMSBI02  DC    A(0) A(IRARMI02) -  RTNE TO INVOKE ASCBCHAP SERVICE
RMSBI03  DC    A(0) A(IRARMI03) -  RTNE TO INVOKE REAL FRAME STEAL
RMSBI04  DC    A(0) A(IRARMI04) -  RTNE TO INVOKE STORAGE GET/FREE
RMSBI05  DC    A(0) A(IRARMI05) -  RTNE TO INVOKE TIME INTERVL SET
RMSBI06  DC    A(0) A(IRARMI06) -  RTNE TO INVOKE QUIESCE FOR SWAPOUT
RMSBI07  DC    A(0) A(IRARMI07) -  RTNE TO INVOKE SCHEDULE OF SWAP-IN
RMSBR24  DC    A(0) A(0) -         RESERVED
RMSBI09  DC    A(0) A(IRARMI09) -  RTNE TO INVOKE RECORD TO OPERATOR
RMSBI10  DC    A(0) A(IRARMI10) -  RTNE TO INVOKE ABNORML TERMINATION
RMSBCRL  DC    A(0) A(IRARMCRL) -  RTNE TO RECEIVE SYS ALGRTHM REQ
RMSBCRN  DC    A(0) A(IRARMCRN) -  RTNE TO RECEIVE USER ACTION REQ
RMSBCRY  DC    A(0) A(IRARMCRY) -  RTNE TO RECEIVE USER ANLYZE REQ
RMSBWM5  DC    A(0) A(IRARMWM5) -  RTNE TO CHCK USER PERIOD CHANGES
RMSBWM1  DC    A(0) A(IRARMWM1) -  RTNE TO CALC USER SERVICE AMOUNT
RMSBWM4  DC    A(0) A(IRARMWM4) -  RTNE TO CALC USER NORMALIZD LEVL
RMSBWMK  DC    A(0) A(IRARMWMK) -  RTNE TO DETERMINE ANALYZ APPLICABL
RMSBWMN  DC    A(0) A(IRARMWMN) -  RTNE TO START A NEW USER TRANSACTN
RMSBWMO  DC    A(0) A(IRARMWMO) -  RTNE TO STOP CURRNT USER TRANSACTN
RMSBWMQ  DC    A(0) A(IRARMWMQ) -  RTNE TO PROCESS QUIESCE CMPLT EVT
RMSBWMR  DC    A(0) A(IRARMWMR) -  RTNE TO PROCESS RESTORE CMPLT EVT
RMSBWMY  DC    A(0) A(IRARMWMY) -  RTNE TO PROCESS SYSTM TIME ADJUST
RMSBRSVD  DC    A(0) A(0)  -        RESERVED                  @ZM43085
RMSBWR4  DC    A(0) A(IRARMNOP) -  ADDR OF RTNE TO CALC ACTIVTY MEASR
RMSBWR6  DC    A(0) A(IRARMNOP) -  ADDR OF RTNE TO RECALC ACTIV RATE
RMSBSET  DC    A(0) A(IRARMNOP) -  ADDR OF RTNE TO PROCESS NEWIPS EVT
RMSBNOP  DC    A(0) A(IRARMNOP) -  RTNE TO RETURN TO INVOKER
RMSBRA6  DC    A(0) A(0) -         RESERVED
RMSBCL0  DC    A(0) A(IRARMCL0) -  RTNE TO ADJ CPU UTIL WHEN SWAP USR
RMSBIL0  DC    A(0) A(IRARMIL0) -  RTNE TO COMPUTE USER I/O PROFILE
RMSBRA9  DC    F'0' -         RESERVED                    @Z40BPCH
RMSBEND  DS    0D -           END OF RMSB TABLE
RMSBLEN  EQU   RMSBEND-RMSB - LENGTH OF RMSB TABLE
         MEND
*                                                                    */
*%RMSBPLS2:  ;
*        %IF RMSB9999 ^= ','        /* DOES STRUCTURE CONTINUE       */
*            %THEN %RMSB9999 = ';'; /* NO, END DECLARE STATEMENT     */
*        %IF RMSBLEVL ^= ''         /* IS STRUCTURE CONCATENATED     */
*            %THEN %GOTO RMSBPLS3;  /* YES, OMIT DECLARE STATEMENT   */
*   DCL
*     1 RMSB BASED(RMSBPTR) BDY(DWORD),
*            %GOTO RMSBPLS4;        /* SKIP USER-GIVEN LEVEL         */
*%RMSBPLS3:  RMSBDUM = RMSBLEVL××' RMSB';  /* PICK UP GIVEN LEVEL    */
*     RMSBDUM BDY(DWORD),
*%RMSBPLS4:  ;
*       10 RMSBI02  PTR(31),        /* INVOKE ASCBCHAP SERVICE RTNE  */
*       10 RMSBI03  PTR(31),        /* INVOKE REAL FRAME STEAL RTNE  */
*       10 RMSBI04  PTR(31),        /* INVOKE STORAGE GET/FREE RTNE  */
*       10 RMSBI05  PTR(31),        /* INVOKE TIME INTERVL SET RTNE  */
*       10 RMSBI06  PTR(31),        /* INVOKE QUIESCE FOR SWAPOUT    */
*       10 RMSBI07  PTR(31),        /* INVOKE SCHEDULE OF SWAP-IN    */
*       10 RMSBR24  PTR(31),        /* RESERVED                      */
*       10 RMSBI09  PTR(31),        /* INVOKE RECORD TO OPERATOR     */
*       10 RMSBI10  PTR(31),        /* INVOKE ABNORMAL TERMINATION   */
*       10 RMSBCRL  PTR(31),        /* RECEIVE SYS ALGRTHM REQUEST   */
*       10 RMSBCRN  PTR(31),        /* RECEIVE USER ACTION REQUEST   */
*       10 RMSBCRY  PTR(31),        /* RECEIVE USER ANLYZE REQUEST   */
*       10 RMSBWM5  PTR(31),        /* CHECK USER FOR PERIOD CHANGE  */
*       10 RMSBWM1  PTR(31),        /* CALCULAT USER SERVICE AMOUNT  */
*       10 RMSBWM4  PTR(31),        /* CALCULAT USER NORMALIZD LEVL  */
*       10 RMSBWMK  PTR(31),        /* DETERMINE ANLZ APPLICABILITY  */
*       10 RMSBWMN  PTR(31),        /* START A NEW USER TRANSACTION  */
*       10 RMSBWMO  PTR(31),        /* STOP CURRNT USER TRANSACTION  */
*       10 RMSBWMQ  PTR(31),        /* PROCESS QUIESCE CMPLT EVENT   */
*       10 RMSBWMR  PTR(31),        /* PROCESS RESTORE CMPLT EVENT   */
*       10 RMSBWMY  PTR(31),        /* PROCESS SYSTEM TIME ADJUST    */
*       10 RMSBRSVD PTR(31),        /* RESERVED              @ZM43085*/
*       10 RMSBWR4  PTR(31),        /* CALCULATE ACTIVITY MEASRMNT   */
*       10 RMSBWR6  PTR(31),        /* RECALCULATE ACTIVITY RATE     */
*       10 RMSBSET  PTR(31),        /* PROCESS NEWIPS SYSEVENT RTN   */
*       10 RMSBNOP  PTR(31),        /* RETURN TO INVOKING ROUTINE    */
*       10 RMSBRA6  PTR(31),        /* RESERVED                      */
*       10 RMSBCL0  PTR(31),        /* ADJ CPU UTIL WHEN SWAP USER   */
*       10 RMSBIL0  PTR(31),        /* COMPUTE USER I/O PROFILE      */
*       10 RMSBRA9  PTR(31),        /* RESERVED              @Z40BPCH*/
*       10 RMSBEND  CHAR(0) BDY(DWORD) /* END OF RMSB TABLE          */
*   RMSB9999
*   %RMSBLEN = 'LENGTH(RMSB)';      /* SYMBOLIC FOR LENGTH OF RMSB   */
