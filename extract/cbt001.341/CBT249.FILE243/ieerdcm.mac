*        %GOTO DCMRBSL;                                              /*
         MACRO
         IEERDCM
*     01/15/73          LEVEL=05                              MB Y02958
DCMTSRT  DSECT DCMTSPTR
DCMADTRN DS    A                   POINTER TO PAGABLE DCM
         DS    CL1                 RESERVED
DCMRFLGS DS    BL1                 FLAGS
DCMDOM   EQU   X'10'               DOM MUST BE TRIED
DCMNIPP  EQU   X'08'               DCM WAS USED BY NIP
DCMLEN   DS    H                   LENGTH OF PAGABLE DCM
DCMADKP  DS    A                   ADDRESS OF ROUTED K COMMAND
*                                   PARAMETER LIST
DCMTOPAR DS    CL1                 TOP DISPLAY AREA DEFINED
DCMTOPDS DS    CL1                 TOP DISPLAY ON SCREEN
         DS    BL1                 RESERVED
DCMDEVTY DS    BL1                 DEVICE TYPE FLAGS
DCMTY60  EQU   X'80'               USABLE FOR SD
DCMTY50  EQU   X'40'               NOT USABLE FOR SD
DCMADSDS DS    A                   POINTER TO FIRST SDS SUPPORT AREA
DCMRMS   DS    CL1                 NUMBER OF CCWS TO WRITE
DCMADRMS DS    AL3                 POINTER TO RMS CCWS
DCMWLAST DS    A                   PT CON Q ENTRY LAST OUT (O-O-L)
DCMRMSAL DS    H                   NUMBER LINES IN MSG AREA
DCMDOMKY DS    H                   CONSOLE DOM ELEMENT        MC XM5812
DCMSUBAD DS    A                   POINTER TO SUB CONTROL BLOCK
DCMADPFK DS    A                   POINTER TO RESIDENT PFK AREA
DCMINTVL DS    H                   INTERVAL FOR THIS DCM
DCMTMCTR DS    H                   TIME COUNTER FOR THIS DCM
DCMR2FLG DS    BL1                 TIMER FLAGS
DCMRXSFL EQU   X'80'               FULL SCREEN FLAG
DCMRXUNV EQU   X'40'               UNVIEWABLE MESSAGE DISPLAYED
DCMRXTMR EQU   X'20'               TIMER FLAG
DCMRXRLL EQU   X'10'               READY TO ROLL
DCMRXDEL EQU   X'08'               PENDING DELETE REQUEST
DCMRXTIM EQU   X'02'               TIMER ELAPSED FOR THIS DISPLAY
DCMR3FLG DS    BL1                 MISC FLAGS
DCMSTSWT EQU   X'80'               CHANGING STATUS OF OUTPUT ONLY CON
DCMKVIP  EQU   X'40'               ENTRY FOR K VARY COMMAND
DCMCLPR  EQU   X'20'               CLOSE IN PROCESS
DCMRXSCN EQU   X'10'               ASY ERROR MESSAGE ON SCREEN
DCMR3PKA EQU   X'08'               DA I/O COMPLETE
DCMRXHMT EQU   X'04'               FULL SCREEN SIMULATED      MC YM4102
         DS    H                   RESERVED
DCMRQDEL DS    A                   DELETE REQUEST BUFFER
         DS    A                   DELETE REQUEST BUFFER
DCMMSGSV DS    A                   POINTER TO SAVED NIP MESSAGES
DCMPACB  EQU   *                   SACB PREFIX
DCMPLN   DS    FL2                 SYSGEN LENGTH OF AREA
DCMPLNPR DS    H                   LENGTH OF SACB PREFIX-IN BYTES
DCMPRSZ  EQU   *-DCMPACB           SIZE OF PREFIX
DCMACB   EQU   *                   SACB
DCMACBNX DS    A                   POINTER TO NEXT SACB
DCMAID   DS    CL1                 AREA ID
DCMASACB DS    BL1                 SACB FLAGS
DCMAUSE  EQU   X'80'               AREA PRESENTLY DEFINED     MB Y02958
*    IF DCMAUSE IS OFF, A SYSGEND AREA HAS BEEN FREED E.G. K A,NONE
DCMAGM   EQU   X'40'               GETMAINED SACB
DCMALN   DS    FL2                 LENGTH OF AREA
DCMATOP  DS    FL1                 TOP ROW OF AREA
DCMACLR  EQU   *                   REINITIALIZED PORTION      MB Y02958
DCMAROW  DS    FL1                 ROW TO BE WRITTEN NEXT
DCMAFR   DS    H                   FRAME ON SCREEN
DCMAMJWQ DS    A                   POINTER TO CON Q ENTRY FOR MAJOR
DCMAMIN  DS    A                   POINTER TO MINOR WQE
DCMATIME DS    F                   TIME CONTROL LINE WAS WRITTEN
DCMAMT   DS    XL2                 RESERVED                   MB Y02958
DCMAFLG1 DS    XL1                 AREA FLAGS1
DCMADISP EQU   X'40'               DISPLAY IN AREA
DCMADEND EQU   X'20'               END OF DISPLAY ON SCREEN
DCMAFRPR EQU   X'10'               FRAMING IN PROGRESS
DCMAFULL EQU   X'08'               FRAME FULL
DCMABL   EQU   X'04'               BLANKING TO BE DONE
DCMAFLG2 DS    XL1                 AREA FLAGS 2
DCMALMIN EQU   X'80'               SAVED POINTER TO LAST MINOR OUTPUT
DCMAWCON EQU   X'40'               WRITE CONTROL LINE
DCMARCON EQU   X'20'               REWRITE CONTROL LINE
DCMAMJFR EQU   X'10'               MAJOR WQE HAS BEEN FOUND
DCMADFLG DS    XL1                 DYNAMIC DISPLAY FLAGS      MB Y02958
DCMADD   EQU   X'80'               TRACK IN AREA              MB Y02958
DCMAHOLD EQU   X'40'               TRACK IN HOLD MODE         MB Y02958
DCMACSIB EQU   X'20'               TRACK WITH CONTINUATION LINE IN     *
                                   SCREEN IMAGE BUFFER        MB Y02958
DCMATRCK DS    X                   TRACK REQUEST INDICATORS   MB Y02958
DCMATJOB EQU   X'80'               TRACK JOBS                 MB Y02958
DCMATJBL EQU   X'40'               TRACK JOBS,LIST            MB Y02958
DCMATTS  EQU   X'08'               TRACK TS                   MB Y02958
DCMATTSL EQU   X'04'               TRACK TS,LIST              MB Y02958
DCMATA   EQU   X'88'               TRACK A                    MB Y02958
DCMATAL  EQU   X'44'               TRACK A,LIST               MB Y02958
DCMAUTME DS    XL2                 UTME=NNN VALUE             MB Y02958
DCMATECB DS    F                   TRACK CANCEL ECB ADDRESS   MB Y02958
DCMAPAD  DS    F                   RESERVED                   MB Y02958
DCMACBND EQU   *                   SACB END
DCMCLRLN EQU   *-DCMACLR           LENGTH FOR REINITIALIZING  MB Y02958
DCMACBSZ EQU   *-DCMACB            SACB SIZE
DCMREND  DS    0C                  END OF DCM
         MEND  , */
*%DCMRBSL  :  ;
*/*   01/15/73          LEVEL=05                                     */
*DECLARE
*  1 DCMTSRT  BASED(DCMTSPTR),
*   2 DCMADTRN    PTR(31),               /* POINTER TO PAGABLE DCM   */
*   2 *           CHAR(1),               /* RESERVED                 */
*   2 DCMRFLGS    CHAR(1),               /* FLAGS                    */
*    3 *        BIT(1),                  /* UNUSED                   */
*    3 *        BIT(1),                  /* UNUSED                   */
*    3 *        BIT(1),                  /* UNUSED                   */
*    3 DCMDOM   BIT(1),                  /* DOM MUST BE TRIED        */
*    3 DCMNIPP  BIT(1),                  /* DCM WAS USED BY NIP      */
*    3 *        BIT(1),                  /* UNUSED                   */
*    3 *        BIT(1),                  /* UNUSED                   */
*    3 *        BIT(1),                  /* UNUSED                   */
*   2 DCMLEN      FIXED(15),             /* LENGTH OF PAGABLE DCM    */
*   2 DCMADKP     PTR(31),               /* ADDRESS OF ROUTED K
*                                           COMMAND  PARAMETER LIST  */
*   2 DCMTOPAR    CHAR(1),               /* TOP DISPLAY AREA DEFINED */
*   2 DCMTOPDS    CHAR(1),               /* TOP DISPLAY ON SCREEN    */
*   2 *           CHAR(1),               /* RESERVED                 */
*    3 *        BIT(1),                  /* UNUSED                   */
*    3 *        BIT(1),                  /* UNUSED                   */
*    3 *        BIT(1),                  /* UNUSED                   */
*    3 *        BIT(1),                  /* UNUSED                   */
*    3 *        BIT(1),                  /* UNUSED                   */
*    3 *        BIT(1),                  /* UNUSED                   */
*    3 *        BIT(1),                  /* UNUSED                   */
*    3 *        BIT(1),                  /* UNUSED                   */
*   2 DCMDEVTY    CHAR(1),               /* DEVICE TYPE FLAGS        */
*    3 DCMTY60  BIT(1),                  /* USABLE FOR SD            */
*    3 DCMTY50  BIT(1),                  /* UNUSABLE FOR SD          */
*    3 *        BIT(1),                  /* UNUSED                   */
*    3 *        BIT(1),                  /* UNUSED                   */
*    3 *        BIT(1),                  /* UNUSED                   */
*    3 *        BIT(1),                  /* UNUSED                   */
*    3 *        BIT(1),                  /* UNUSED                   */
*    3 *        BIT(1),                  /* UNUSED                   */
*   2 DCMADSDS    PTR(31),               /* POINTER TO FIRST SDS
*                                           SUPPORT AREA             */
*   2 DCMRMS      CHAR(1),               /* NUMBER OF CCWS TO WRITE  */
*   2 DCMADRMS    PTR(24)  BDY(BYTE),    /* POINTER TO RMS CCWS      */
*   2 DCMWLAST    PTR(31),               /* PT CON Q ENTRY LAST OUT
*                                           (O-O-L)                  */
*   2 DCMRMSAL    FIXED(15),             /* NUMBER LINES IN MSG AREA */
*   2 DCMDOMKY    FIXED(15),             /* CONSOLE DOM ELEMENT      */
*   2 DCMSUBAD    PTR(31),               /* POINTER TO SUB CONTROL
*                                           BLOCK                    */
*   2 DCMADPFK    PTR(31),               /* POINTER TO RESIDENT PFK
*                                           AREA                     */
*   2 DCMINTVL    FIXED(15),             /* INTERVAL FOR THIS DCM    */
*   2 DCMTMCTR    FIXED(15),             /* TIME COUNTER FOR THIS
*                                           DCM                      */
*   2 DCMR2FLG    CHAR(1),               /* TIMER FLAGS              */
*    3 DCMRXSFL BIT(1),                  /* FULL SCREEN FLAG         */
*    3 DCMRXUNV BIT(1),                  /* UNVIEWABLE MESSAGE
*                                           DISPLAYED                */
*    3 DCMRXTMR BIT(1),                  /* TIMER FLAG               */
*    3 DCMRXRLL BIT(1),                  /* READY TO ROLL            */
*    3 DCMRXDEL BIT(1),                  /* PENDING DELETE REQUEST   */
*    3 *        BIT(1),                  /* UNUSED                   */
*    3 DCMRXTIM BIT(1),                  /* TIMER ELAPSED FOR THIS
*                                           DISPLAY                  */
*    3 *        BIT(1),                  /* UNUSED                   */
*   2 DCMR3FLG    CHAR(1),               /* MISC FLAGS               */
*    3 DCMSTSWT BIT(1),                  /* CHANGING STATUS OF
*                                           OUTPUT ONLY CON          */
*    3 DCMKVIP  BIT(1),                  /* ENTRY FOR K VARY COMMAND */
*    3 DCMCLPR  BIT(1),                  /* CLOSE IN PROCESS         */
*    3 DCMRXSCN BIT(1),                  /* ASY ERROR MESSAGE ON
*                                           SCREEN                   */
*    3 DCMR3PKA BIT(1),                  /* DCM I/O COMPLETE         */
*    3 DCMRXHMT BIT(1),                  /* FULL SCREEN SIMULATED    */
*    3 *        BIT(1),                  /* UNUSED                   */
*    3 *        BIT(1),                  /* UNUSED                   */
*   2 *           FIXED(15),             /* RESERVED                 */
*   2 DCMRQDEL    PTR(31),               /* DELETE REQUEST BUFFER    */
*   2 *           PTR(31),               /* DELETE REQUEST BUFFER    */
*   2 DCMMSGSV    PTR(31),               /* POINTER TO NIPS MSGS.    */
*   2 DCMPACB              ,             /* SACB PREFIX              */
*    3 DCMPLN     FIXED(15),             /* SYSGEN LEN OF AREA.      */
*    3 DCMPLNPR   FIXED(15);             /* PREFIX LENGTH OF AREA.   */
* DECLARE                                /* SCREEN AREA CNTRL BLOCK  */
*  1 DCMACB  BASED(SACBPTR),             /* SACB                     */
*   2 DCMACBNX   PTR(31),                /* POINTER TO NEXT SACB.    */
*   2 DCMAID     CHAR(1),                /* AREA I.D.                */
*   2 DCMASACB   CHAR(1),                /* SACB FLAGS.              */
*    3 DCMAUSE BIT(1),                   /* AREA PRESENTLY DEFINED   */
*    3 DCMAGM  BIT(1),                   /* GETMAINED SACB.          */
*   2 DCMALN     FIXED(15),              /* LENGTH OF AREA.          */
*   2 DCMATOP    CHAR(1),                /* TOP ROW OF AREA.         */
*   2 DCMACLR    BDY(WORD,2),            /* REINITIALIZED PORTION.   */
*    3 DCMAROW    CHAR(1),               /* ROW FOR NEXT WRITE.      */
*    3 DCMAFR     FIXED(15),             /* FRAME ON SCREEN.         */
*    3 DCMAMJWQ   PTR(31),               /* PTR MAJOR CON Q ENTRY    */
*    3 DCMAMIN    PTR(31),               /* PTR TO MINOR WQE.        */
*    3 DCMATIME   FIXED(31),             /* TIME CONTROL LINE WRITN. */
*    3 DCMAMT     CHAR(2),               /* RESERVED                 */
*    3 DCMAFLG1   CHAR(1),               /* AREA FLAGS.              */
*     4 *        BIT(1),                 /* RESERVED.                */
*     4 DCMADISP BIT(1),                 /* DISPLAY IN AREA          */
*     4 DCMADEND BIT(1),                 /* END OF DISP. ON SCREEN   */
*     4 DCMAFRPR BIT(1),                 /* FRAMING IN PROGRESS      */
*     4 DCMAFULL BIT(1),                 /* FRAME FULL               */
*     4 DCMABL   BIT(1),                 /* BLANKING TO BE DONE      */
*     4 *        BIT(1),                 /* RESERVED.                */
*     4 *        BIT(1),                 /* RESERVED.                */
*    3 DCMAFLG2   CHAR(1),               /* AREA FLAGS 2.            */
*     4 DCMALMIN BIT(1),                 /* PTR TO LAST MINOR OUTPT. */
*     4 DCMAWCON BIT(1),                 /* WRITE CONTROL LINE       */
*     4 DCMARCON BIT(1),                 /* REWRITE CONTROL LINE     */
*     4 DCMAMJFR BIT(1),                 /* MAJOR WQE HAS BEEN FOUND */
*     4 *        BIT(1),                 /* RESERVED.                */
*     4 *        BIT(1),                 /* RESERVED.                */
*     4 *        BIT(1),                 /* RESERVED.                */
*     4 *        BIT(1),                 /* RESERVED.                */
*    3 DCMATFLG     CHAR(4) BDY(WORD),   /* FLAGS AND UTME VALUE     */
*     4 DCMADFLG    CHAR(1),             /* DYNAMIC DISPLAY FLAGS    */
*      5 DCMADD   BIT(1),                /* TRACK IN AREA            */
*      5 DCMAHOLD BIT(1),                /* TRACK IN HOLD MODE       */
*      5 DCMACSIB BIT(1),                /* TRACK WITH CONT LINE     */
*      5 *        BIT(1),                /* RESERVED.                */
*      5 *        BIT(1),                /* RESERVED.                */
*      5 *        BIT(1),                /* RESERVED.                */
*      5 *        BIT(1),                /* RESERVED.                */
*      5 *        BIT(1),                /* RESERVED.                */
*     4 DCMATRCK    CHAR(1),             /* TRACK REQUEST INDICATORS */
*      5 DCMATJOB    BIT(1),             /* TRACK JOBS               */
*      5 DCMATJBL    BIT(1),             /* TRACK JOBS,LIST          */
*      5 *           BIT(1),             /* RESERVED                 */
*      5 *           BIT(1),             /* RESERVED                 */
*      5 DCMATTS     BIT(1),             /* TRACK TS                 */
*      5 DCMATTSL    BIT(1),             /* TRACK TS,LIST            */
*      5 *           BIT(1),             /* RESERVED                 */
*      5 *           BIT(1),             /* RESERVED                 */
*                        /* TO REFERENCE AND CHANGE THE ABOVE BITS   */
*                        /* REFERENCE: IF DCMATJBL='1'B THEN ...     */
*                        /* CHANGE: DCMATJBL='1'B                    */
*%DCL DCMATA CHAR;       /* MASK FOR TRACK A                         */
*%DCMATA='''88''X';      /* REFERENCE: IF DCMATRCK=DCMATA THEN ...   */
*                        /* CHANGE: DCMATRCK=DCMATA                  */
*%DCL DCMATAL CHAR;      /* MASK FOR TRACK A,LIST                    */
*%DCMATAL='''44''X';     /* REFERENCE AND CHANGE AS FOR DCMATA       */
*     4 DCMAUTME    FIXED(15),           /* UTME=NNN VALUE           */
*    3 DCMATECB    PTR(31),              /* TRACK CANCEL ECB ADDRESS */
*    3 DCMAPAD     FIXED(31),            /* RESERVED                 */
*   2 DCMACBND    BDY(BYTE);             /* SACB END                 */
* %DCMCLRLN='LENGTH(DCMACLR)';
* %DCMPRSZ='LENGTH(DCMPACB)';
* %DCMACBSZ='LENGTH(DCMACB)';
*DECLARE DCMREND (*) CHAR(1)   BASED
*  (ADDR(DCMTSRT )+LENGTH(DCMTSRT ));
*                                        /* END OF DCM               */
