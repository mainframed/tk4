*        %GOTO EPATPLS1; /*
         MACRO
         IRAEPAT   &DSECT=YES
         GBLC  &IRAEPPV            PREV RMEP BLOCK ADDRESS NAME
         GBLC  &IRAEPTM            PREV SCHED RMEP ADDRESS NAME
         GBLB  &IRAEPCM            IRARMEP COMMENTARY PRINT CONTROL
&IRAEPPV SETC  '00000000'          INIT TO NO PREVIOUS ASSEMBLED RMEP
&IRAEPTM SETC  'IRACTMQE'          INIT TO SCHED RTNE QUE HEADER ADDR
&IRAEPCM SETB  1                   BYPASS IRARMEP HEADER COMMENTARY
.*                                                                   */
*%EPATPLS1:  ;
* /*                                                                 */
* /* MACCOMP Z-4 SC1CX/PKD16                                         */
* /* MACSTAT Z-4 75007/Z40BPSS                                       */
* /* *************************************************************** */
* /*                                                                 */
* /*   MACRO NAME - IRAEPAT                                          */
* /*                                                                 */
* /*   DESCRIPTIVE NAME - SYSTEM RESOURCES MANAGER ALGORITHM         */
* /*                      ENTRY POINT DESCRIPTOR TABLE.              */
* /*                                                                 */
* /*   COPYRIGHT - NONE                                              */
* /*                                                                 */
* /*   STATUS - OS/VS2 RELEASE 4, 09/23/75, LEVEL=1                  */
* /*                                                                 */
* /*   FUNCTION - THE EPAT CONTAINS THE ENTRY POINT DESCRIPTORS OF   */
* /*         ALL INDIVIDUALLY REQUESTED OR INDIVIDUALLY SCHEDULED    */
* /*         SYSTEM RESOURCES MANAGER ALGORITHMS (ROUTINES WHOSE     */
* /*         SCOPE OF APPLICABILITY IS SYSTEM-WIDE).  THE IRACTLCL   */
* /*         MACRO KEYS OFF THE EPAT DISPLACEMENTS TO GENERATE THE   */
* /*         CALLING SEQUENCES WHEREBY ALGORITHMS ARE REQUESTED.     */
* /*                                                                 */
* /*   METHOD OF ACCESS - THE EPAT IS ADDRESSED AS BEING AT A KNOWN  */
* /*         DISPLACEMENT FROM THE SYSTEM RESOURCES MANAGER CONTROL  */
* /*         TABLE, I.E., USING THE RMCTPTR REGISTER.  THE IRACNSMP  */
* /*         INCLUDE LIST SPECIFIES THE SYMBOLIC DISPLACMENT OF THE  */
* /*         EPAT FROM THE RMCT.  THE EPAT TABLE IS SCANNED VIA THE  */
* /*         RMEP CHAIN POINTER IN THE -RMCTEPAT- FIELD.             */
* /*                                                                 */
* /* *************************************************************** */
*        %GOTO EPATPLS2; /*
         AGO   .EPATAL1                                              */
* /* *************************************************************** */
* /*                                                                 */
* /*   INVOCATION PARAMETERS AND/OR KEYWORDS =                       */
* /*                                                                 */
* /*     BAL - DSECT=NO IF DSECT IS NOT TO BE PRODUCED.              */
* /*                                                                 */
* /*         USING ON EPAT GIVES ADDRESSABILITY TO ALL SYMBOLS.      */
* /*                                                                 */
* /*     PLS - %EPATLEVL='USERLEVL' IF THE EPDT MAPPING IS TO BE     */
* /*           CONCATENATED WITH A PREVIOUS DECLARATION, WITH THE    */
* /*           EPAT BEING ASSIGNED THE INDICATED STRUCTURE LEVEL.    */
* /*         - %EPAT9999=',' IF THE STRUCTURE SHOULD NOT BE CLOSED.  */
* /*                                                                 */
* /*         TO ACCESS AS A STANDALONE STRUCTURE DCL EPATPTR PTR.    */
* /*                                                                 */
* /*   CHANGE ACTIVITY = @ZM43084                                    */
* /*                     @ZM43090                                    */
* /*                                                                 */
* /*   A000000-999999                                          Y02133*/
* /*                                                                 */
* /* *************************************************************** */
* /*
.EPATAL1 ANOP
         SPACE 1
         AIF   ('&DSECT' EQ 'NO').EPATAL2
EPAT     DSECT
         AGO   .EPATAL3
.EPATAL2 ANOP
         DS    0D
EPAT     EQU   *
.EPATAL3 ANOP
         SPACE 1
         IRARMEP   DSECT=NO,EPN=CAP,NXT=000,RCR=YES,SCH=01000
         IRARMEP   DSECT=NO,EPN=RM1,NXT=RM2,SCH=01000
         IRARMEP   DSECT=NO,EPN=RM2,NXT=CAP,SCH=30000
         IRARMEP   DSECT=NO,EPN=SQA,NXT=RM1,RCR=YES
         IRARMEP   DSECT=NO,EPN=MS6,NXT=ASM,SCH=08000
         IRARMEP   DSECT=NO,EPN=PR5,NXT=MS6
         IRARMEP   DSECT=NO,EPN=MS2,NXT=PR5,RCR=YES
         IRARMEP   DSECT=NO,EPN=ASM,NXT=SQA,RCR=YES,SCH=10000
         IRARMEP   DSECT=NO,EPN=IL1,NXT=MS2,SCH=03000          @ZM43090
         IRARMEP   DSECT=NO,EPN=WM2,NXT=IL1,SCH=36000000       @ZM43084
         IRARMEP   DSECT=NO,EPN=CL1,NXT=WM2,SCH=03000          @ZM43090
         IRARMEP   DSECT=NO,EPN=AP1,NXT=EQ1,SCH=02000
         IRARMEP   DSECT=NO,EPN=EQ1,NXT=CL1,SCH=05000
         IRARMEP   DSECT=NO,EPN=PR1,NXT=AP1,SCH=01000
&IRAEPPV SETC  'RMEPBPR1'
EPATEND  DS    0D -                END OF EPAT TABLE
EPATLEN  EQU   EPATEND-EPAT -      LENGTH OF EPAT TABLE
EPATSCN  EQU   &IRAEPPV -          BEGIN EPAT TABLE SCAN
EPATSCH  EQU   &IRAEPTM -          BEGIN SCHED RTNE QUEUE
         MEND
*                                                                    */
*%EPATPLS2:  ;
*        %EPATEPN = '16' ;          /* SIZE OF BASE EPB BLOCK        */
*        %EPATSCH = '32' ;          /* SIZE OF SCHD EPB BLOCK        */
*        %IF EPAT9999 ^= ','        /* DOES STRUCTURE CONTINUE       */
*            %THEN %EPAT9999 = ';'; /* NO, END DECLARE STATEMENT     */
*        %IF EPATLEVL ^= ''         /* IS STRUCTURE CONCATENATED     */
*            %THEN %GOTO EPATPLS3;  /* YES, OMIT DECLARE STATEMENT   */
*   DCL
*     1 EPAT BASED(EPATPTR) BDY(DWORD),
*            %GOTO EPATPLS4;        /* SKIP USER-GIVEN LEVEL         */
*%EPATPLS3:  EPATDUM = EPATLEVL××' EPAT';  /* PICK UP GIVEN LEVEL    */
*     EPATDUM BDY(DWORD),
*%EPATPLS4:  ;
*       10 RMEPBCAP CHAR(EPATSCH) BDY(DWORD), /* CTL PRT ANLZ RTNE   */
*       10 RMEPBRM1 CHAR(EPATSCH) BDY(DWORD), /* RES MONITORING RTNE */
*       10 RMEPBRM2 CHAR(EPATSCH) BDY(DWORD), /* RM ADJUSTMENT RTNE  */
*       10 RMEPBSQA CHAR(EPATEPN) BDY(DWORD), /* SQA MSG PRNT RTNE   */
*       10 RMEPBMS6 CHAR(EPATSCH) BDY(DWORD), /* MSO WAIT CHK RTNE   */
*       10 RMEPBPR5 CHAR(EPATEPN) BDY(DWORD), /* PRA FORC STL RTNE   */
*       10 RMEPBMS2 CHAR(EPATEPN) BDY(DWORD), /* MSO ANALYSIS RTNE   */
*       10 RMEPBASM CHAR(EPATSCH) BDY(DWORD), /* ASM SHRT MON RTNE   */
*       10 RMEPBIL1 CHAR(EPATSCH) BDY(DWORD), /* IOL UTIL MON RTNE   */
*       10 RMEPBWM2 CHAR(EPATSCH) BDY(DWORD), /* WLM ANALYSIS RTNE   */
*       10 RMEPBCL1 CHAR(EPATSCH) BDY(DWORD), /* CPU UTIL MON RTNE   */
*       10 RMEPBAP1 CHAR(EPATSCH) BDY(DWORD), /* APG ANALYSIS RTNE   */
*       10 RMEPBEQ1 CHAR(EPATSCH) BDY(DWORD), /* ENQ STAT MON RTNE   */
*       10 RMEPBPR1 CHAR(EPATSCH) BDY(DWORD), /* PRA ANALYSIS RTNE   */
*       10 EPATEND  CHAR(0) BDY(DWORD) /* END OF EPAT TABLE          */
*   EPAT9999
*   %EPATLEN = 'LENGTH(EPAT)';      /* SYMBOLIC FOR LENGTH OF EPAT   */
