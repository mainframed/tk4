.chapter 'Rockwell Installation Parameter Table'
.se ripchap = &pubCHnum
.pp
RIP will be the vehicle to provide the ability to have a JES3 mod
installed in all centers and only active in those that desire it.  It
will be implemented with all new JES3 mods to the SP 1.3.1 level and
then all existing mods will be refitted after 1.3.1 is in production.
.pp
RIP is also the desired technique to 'backout' temporary or
no longer needed mods.
.section 'Abstract'
.pp
A technique is described which will reduce the effort for implementation
of new versions of JES3 at multiple Rockwell computing centers by giving
each installation external control over Rockwell modifications to JES3.
.sp 2
.section 'Problem'
.pp
Rockwell International maintains several large computing centers, all of
which use JES3. Periodically the Western Computing Center distributes a
new version of JES3 to each center. This consists of accumulated IBM
maintenance plus Rockwell modifications.  Each center maintains
modifications to JES3. Many of these modifications are common to all
centers, but some are not.  Further, some of the common modifications
are used with different internal parameters at each center.  Each center
must thus examine every new distribution and tailor it to its own
requirements. This may require a significant amount of effort and
consequent delay in implementation.
.sp 2
.section 'Objectives'
.pp
The Rockwell Installation Parameters (RIP) table is a technique for
reducing the above mentioned effort.  The objectives of the technique
are as follows:
.point begin
Identical source code, including all modifications, should be
maintained at all centers, and distributed by the WCC.
.point
It should be possible to enable or disable each modification.
.point
When applicable, each modification should be internally
parameterized to allow tailoring to each center's requirements.
.point
It should be easy to enable or disable modifications and to change
parameters without requiring detailed knowledge of the modifications or
of the RIP mechanisms.
.point
Parameters should be modifiable without requiring a JES3 hot start
or warm start.
.point
Tailoring should not require reassembly of executable code, or of
large complex data CSECTs.
.point
The overhead should be minimal (both execution time and amount of
storage required).
.point
The coding effort required should be small.
.point end
.section 'Implementation'
.pp
The Rockwell Installation Parameters (RIP) consist of one page (4K) in
read only storage in CSA.  The RIP contains parameters which control the
behavior of Rockwell modifications. It consists of two sections. The
first section contains an enable/disable flag for each modification. The
second section contains constants which are used as internal parameters
by those modifications which require them.  Each center assembles its
own version of the RIP to meet its requirements.  A number of macros and
some executable code interface with the table to meet the above
objectives.
.sp 2
.subsection 'Coding'
.pp
The first objective is the most difficult. Every Rockwell modification
must be changed to use the RIP, and every center's modifications must be
integrated into a common base.  The amount of coding effort and system
overhead for the RIP executable macros is small. The major effort is in
identifying the appropriate use of them in existing modifications. Use
of them in new code should require very little effort.
.pp
In order to use the RIP, the IATY#RIP macro must be expanded to map the
RIP DSECT. The DSECT is required by the IATX#IF macro, and by any code
which is internally parameterized.
.pp
To implement the enable/disable feature, each section of a modification
must be preceded by a macro call of IATX#IF. IATX#IF generates inline
code to test the RIP flag which controls a specific modification and to
branch around the modification code if the installation has disabled the
modification.  Normally three instructions are generated (Load, Test
under Mask, and Branch on Condition).  Optionally, the Load instruction
may be suppressed if a base register for the RIP is already established.
.pp
An internal parameter is simply a constant defined via a Define Constant
instruction. Typically a Compare instruction would be used to modify the
behavior of a modification based on the parameter value set by the
installation.  Internal parameters are placed in the RIP rather than
being buried in an executable load module or data CSECT along with other
data.  They are included in the RIP by placing the Define Constant
instruction in module IATY#RID.  Relocatable address constants cannot be
used, because the RIP is moved into CSA.
.pp
Addressability to the RIP is obtained via a macro call of IATX#RIP
(IATX#IF can also be used--it uses IATX#RIP as an inner macro).  In the
JES3 address space a single Load instruction is generated to address the
RIP via the TVT. Additional Load instructions may be generated in
subtasks or subsystem interface routines to address the RIP via the SSVT
instead of the TVT.  The SSVT may be addressed directly, via the CVT,
or via a Main Processor Control table.
.subsection 'Installation Control'
.pp
The RIP is assembled as module IAT#RIP. Each center must assemble it
after specifying its own values for enable/disable flags and for
parameters.  To simplify this process, two modules (IATY#RIF and
IATY#RID) are provided which are copy'd during the assembly.  IATY#RIF
consists of a series of macro calls to IATY#RIM to disable specific
Rockwell modifications.  IATY#RID consists of internal parameters coded
as Define Constant and Equate Symbol instructions.
.pp
The RIP is placed automatically into read only storage in CSA during
initialization. A new copy may be created by calling the RIPUPDAT DSP,
which will load it from the JES3 load module library. Alternatively, the
DC DSP may be used to modify the RIP directly in main storage.
.pa
.section 'Specifications'
.subsection 'IAT#RIP - RIP CSECT Assembly'
.pp
IAT#RIP contains the assembler source code which expands the RIP as a
CSECT. Each installation must assemble IAT#RIP after creating its own
version of modules IATY#RIF and IATY#RID.  There is no modifiable code
in IAT#RIP itself.
.pa
.subsection 'IATX#IF - Test Mod Enable/Disable Status'
.pp
The IATX#IF macro tests a flag in the Rockwell Installation Parameters
table to determine whether or not to execute code associated with a
Rockwell modification. IATX#RIP is used as an inner macro.
.fignum rip1
.figbegin
.boxon
     name                      name: symbol.

 IATX#IF

 modnum                         modnum: symbol.
                                Value range: SJ001-SJ999.

 ,THEN=address                  address: RX-type address or register
 ,ELSE=address                  (R1)-(R15).

     ,REG=(reg)                 reg: register (R1)-(R15).
                                Default: REG=(R1).

     ,USING=NO                  Default: USING=NO.
     ,USING=YES

     ,ADDR=TVT                  Default: ADDR=TVT.
     ,ADDR=SSVT
     ,ADDR=MPC
     ,ADDR=CVT
     ,ADDR=RIP

     ,WORK=(R0)                 workarea: symbol.
     ,WORK=workarea             Default: none.

     ,TVT=address               address: RX-type address.
                                Default: TVT addressability assumed.
.boxoff
.figure rip1 'IATX#IF Macro'
.figend
modnum
  specifies a Rockwell JES3 modification number in the range SJ001
  through SJ999.
.sp
THEN
  specifies the address of code to be executed if the installation has
  enabled the modification.
.sp
ELSE
  specifies the address of code to be executed if the installation has
  disabled the modification.
.sp
REG
  specifies a register which is to be used for addressing the RIP.
  REG is passed to the IATX#RIP macro.
.sp
USING
  specifies whether or not a USING instruction is to be generated for
  the REG parameter. USING is passed to the IATX#RIP macro.
.sp
ADDR
  specifies the way the address of the RIP is to be obtained.  ADDR is
  passed to the IATX#RIP macro.
.sp
WORK
  specifies a work area for saving the register used to address the RIP.
  This avoids destroying the value in the register specified by REG. If
  register zero (R0) is specified, it will be destroyed.
.sp
TVT
  specifies the address of the TVT when addressability is not
  established for it. Valid only for ADDR=TVT.
.sp
.fo on
.pa
.subsection 'IATX#RIP - Addressability to the RIP'
.pp
The IATX#RIP macro provides addressability to the Rockwell Installation
Parameters table so that parameters within it can be used. This macro
need not be used when the IATX#IF macro is used.
.fignum rip2
.figbegin
.boxon
     name                          name: symbol.
.sp
IATX#RIP
.sp
     REG=(reg)                     reg: register (R1)-(R15).
                                   Default: REG=(R1).
.sp
     ,USING=YES                    Default: USING=YES.
     ,USING=NO
.sp
     ,ADDR=TVT                     Default: ADDR=TVT.
     ,ADDR=SSVT
     ,ADDR=MPC
     ,ADDR=CVT
     ,ADDR=RIP
.boxoff
.figure rip2 'IATX#RIP Macro'
.figend
.cp begin
REG
  specifies a register which is to be loaded with the address of the RIP
.sp
USING
  specifies whether or not a USING statement is to be generated for the
  register specified by REG.
.sp
ADDR
  specifies the way the address of the RIP is to be obtained.
TVT specifies that the RIP can be addressed via the TVT.  The TVT DSECT
must be defined and addressable.
.sp
SSVT specifies that the RIP can be addressed via the SSVT.  The SSVT
DSECT must be defined and addressable.
.sp
MPC specifies that the SSVT can be addressed via the MPC. The MPC and
SSVT DSECTs must be defined. The MPC must be addressable.
.sp
CVT specifies that the SSVT can be addressed via the CVT. The CVT,
JESCT, SSCVT, and SSVT DSECTs must be defined.
.sp
RIP specifies that the register specified by REG has previously been
loaded with the address of the RIP. No load instruction will be
generated. This is primarily used via the IATX#IF macro.
.cp end
.fo on
.pa
.subsection 'IATY#RIB - Enable/Disable Flag Construction'
.pp
The IATY#RIB macro is used as an inner macro by IATY#RIP.  It generates
the enable/disable flag names used by macro IATX#IF, and sets the
installation specified flag values when IATY#RIP is expanded as a CSECT.
.fignum rip3
.figbegin
.boxon
IATY#RIB
.sp
     TYPE=DSECT                   Default: TYPE=DSECT.
     TYPE=CSECT
.boxoff
.figure rip3 'IATY#RIB Macro'
.figend
TYPE
  specifies whether the RIP is being expanded as a DSECT or CSECT.
.sp
.fo on
.pa
.subsection 'IATY#RID - Internal Parameter Values'
.pp
The IATY#RID module contains all the internal parameter values in the
RIP. It consists entirely of Define Constant and Equate Symbol
instructions. When a Rockwell modification is coded, its internal
parameters must be included in IATY#RID. Each installation should
examine all the parameters and establish appropriate values for them.
Care must be taken to allow sufficient length for a parameter, as an
installation must not change the length.
.pp
IATY#RID resides in a JES3 macro library and is copy'd into macro
IATY#RIP. It is assembled in module IAT#RIP.
.pa
.subsection 'IATY#RIF - Specify Enable/Disable Flags'
.pp
The IATY#RIF module specifies whether each Rockwell modification is to
be enabled or disabled.  It consists entirely of macro calls to
IATY#RIM.  Each installation should evaluate all Rockwell modifications
and determine whether each one should be used.
.pp
IATY#RIF resides in a JES3 macro library and is copy'd into macro
IATY#RIP. It is assembled in module IAT#RIP.
.pa
.subsection 'IATY#RIM - Status of a Modification'
.pp
The IATY#RIM macro specifies whether a Rockwell modification is to be
enabled or disabled at the installation. Each installation should
specify its own values in module IATY#RIF.
.fignum rip4
.figbegin
.boxon
modnum                     modnum: symbol.
                           Valid range: SJ001-SJ999.

IATY#RIM

use                         use: YES or NO.
                            Default: YES.
.boxoff
.figure rip4 'IATY#RIM Macro'
.figend
modnum
  specifies a Rockwell modification number from SJ001 to SJ999.
.sp
use
  specifies whether the specified modification is to be enabled (YES) or
  disabled (NO).
.pa
.subsection 'IATY#RIP - Generate RIP DSECT or CSECT'
.fo on
.pp
The IATY#RIP macro maps the Rockwell Installation Parameters table.  The
IATY#RIP DSECT must be included whenever the IATX#IF or IATX#RIP macros
are used.  Note that symbols SJ001 through SJ999 and SJ001# through
SJ999# are defined in the DSECT.
.fignum rip5
.figbegin
.boxon
IATY#RIP
.sp
     TYPE=DSECT             Default: TYPE=DSECT.
     TYPE=CSECT
.sp
     ,ADDR=NONE             Default: ADDR=NONE.
     ,ADDR=ALL              Note: any combination of parameters
     ,ADDR=TVT                    may be specified in parentheses
     ,ADDR=SSVT                   except NONE or ALL.
     ,ADDR=MPC
     ,ADDR=CVT
     ,ADDR=JESCT
     ,ADDR=SSCVT
.boxoff
.figure rip5 'IATY#RIP Macro'
.figend
.cp begin
TYPE
specifies the type of data area to be generated.
DSECT specifies that a dummy section is to be created for addressing the
RIP.
.sp
CSECT specifies that a control section is to be created for assembling
the data in the RIP.
.sp
ADDR
specifies the generation of DSECTs required to address the RIP.  As
many operands as required may be specified.
.sp
NONE
specifies no DSECTs are to be generated. This is the default, since
the required DSECTs will generally be specified in the unmodified code
.sp
ALL specifies all DSECTs (TVT, SSVT, MPC, CVT, JESCT, SSCVT) are to be
generated.
.sp
TVT (Transfer Vector Table) specifies the TVT DSECT (IATYTVT) is to be
generated.  The TVT is the normal means of accessing the RIP in the JES3
address space.
.sp
SSVT (Subsystem Vector Table) specifies the SSVT DSECT (IATYSVT) is to
be generated.  The SSVT is the normal means of accessing the RIP in
subsystem interfaces.
.sp
MPC (Main Processor Control Table) specifies the MPC DSECT (IATYMPC) is
to be generated.  This may be used to address the SSVT in subsystem
interfaces.
.sp
CVT (Communications Vector Table) specifies the CVT DSECT (CVT) is to be
generated.  This may be used to address the SSVT in subsystem
interfaces.
.sp
JESCT (JES Control Table) specifies the JESCT DSECT (IEFJESCT) is to be
generated.  This is required when the SSVT is addressed via the CVT.
.sp
SSCVT (Subsystem Communications Vector Table) specifies the SSCVT DSECT
(IEFJSCVT) is to be generated. This is required when the SSVT is
addressed via the CVT.
.cp end
.fo on
.pa
.subsection 'RIPUPDAT - Create New RIP Table'
.pp
RIPUPDAT is a callable DSP which loads a new copy of the RIP into CSA.
Typically, new values would be specified in members IATY#RIF and/or
IATY#RID, then module IAT#RIP would be reassembled and linked into a
JES3 load module library. RIPUPDAT would then be called to place the
updated load module into CSA, overlaying the previous version.
.pa
.section 'Examples'
.subsection 'Specifying Status'
.pp
Specifying Enable/Disable Status of Modifications
.pp
Module IATY#RIF could contain the following macro instructions:
.fignum rip6
.figbegin
.boxon
     SJ123    IATY#RIM NO
     SJ456    IATY#RIM NO
     SJ789    IATY#RIM YES
.boxoff
.figure rip6 'IATY#RIF Data Csect'
.figend
.fo on
.pp
This would disable Rockwell modifications SJ123 and SJ456.  SJ789 would
be enabled, although this is redundant.  All other modifications would
be enabled by default.  Note that there are no other assembler language
statements in the module, although comments could be included.
.pa
.subsection 'Specifying Parameters'
.pp
Specifying Internal Parameters
.pp
Module IATY#RID could contain the following instructions:
.fignum rip7
.figbegin
.boxon
     EXAMPLE1 DC    CL8'ABC'
     EXAMPLE2 DC    F'123'
     EXAMPLE3 DC    A(EXAMPLE2-EXAMPLE1)  NON-RELOCATABLE
     EXAMPLE4 DC    X'FF'
     EXAMPLE5 EQU   X'80'
.boxoff
.figure rip7 'IATY#RID Data Csect'
.figend
.fo on
.pp
Note again that there are no other assembler language statements in the
module.
.pa
.subsection 'Testing Status'
.pp
Testing Enable/Disable Status of a Modification
.pp
The following code represents the most typical case of testing the
status of a modification:
.fignum ripex1
.figbegin
.boxon
         ...
         IATY#RIP                    MAP THE RIP
         ...
         IATX#IF SJ123,ELSE=NOSJ123  TEST MOD STATUS
*        CODE FOR MODIFICATION SJ123 FOLLOWS
         ...
*        END OF CODE FOR SJ123
NOSJ123  DS  0H                      BRANCH HERE IF MOD DISABLED
         ...
.boxoff
.figure ripex1 'RIP Example 1'
.figend
.fo on
.pa
.subsection 'Using Internal Parameter'
.pp
Using an Internal Parameter
.pp
The following is a simple example of using an internal parameter:
.fignum ripex2
.figbegin
.boxon
         ...
         IATY#RIP                    MAP THE RIP
         ...
         IATX#RIP                    GET RIP ADDRESSABILITY
         CLC   EXAMPLE1,SAMPLE1      CHECK INTERNAL PARAMETER
         BC    EQ,TEST1
         DROP  R1                    DROP DEFAULT BASE REGISTER
         ...
.boxoff
.figure ripex2 'RIP Example 2'
.figend
.fo on
.pa
.subsection 'Complex Example'
.sp
A More Complex Example
.sp
The following example combines testing the status of a modification with
the use of an internal parameter:
.fignum ripex3
.figbegin
.boxon
         ...
         IATY#RIP                    MAP THE RIP
         ...
         IATX#IF SJ456,ELSE=NOSJ456,REG=(R9),USING=YES
*                                    TEST MOD STATUS AND
*                                    GET RIP ADDRESSABILITY
*        CODE FOR MODIFICATION SJ456 FOLLOWS
         ...
         TM    EXAMPLE4,EXAMPLE5     CHECK INTERNAL PARAMETER
         BC    ALLON,TEST2
         ...
         DROP  R9                    DROP RIP BASE REGISTER
*        END OF CODE FOR SJ456
NOSJ456  DS    0H                    BRANCH HERE IF MOD DISABLED
         ...
.boxoff
.figure ripex3 'RIP Complex Example'
.figend
.fo on
.pa
.subsection 'Example using WORK'
.pp
The following example shows the use of the WORK parameter to avoid
destroying the contents of any registers except register zero.
.fignum ripex4
.figbegin
.boxon
         ...
         IATY#RIP                    MAP THE RIP
         ...
         IATX#IF SJ789,ELSE=NOSJ789,WORK=(R0)  TEST MOD STATUS
*        CODE FOR MODIFICATION SJ789 FOLLOWS
         ...
*        END OF CODE FOR SJ789
NOSJ789  DS  0H                      BRANCH HERE IF MOD DISABLED
         ...
.boxoff
.figure ripex4 'RIP using WORK Example'
.figend
.fo on
